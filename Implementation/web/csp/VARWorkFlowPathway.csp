<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER = $get(%request.Data("YUSER", 1))
		set YBED = $get(%request.Data("YBED", 1))
		set YM = $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
		set PageName = %request.PageName
		set app = %request.Application
		set host = %request.CgiEnvs("HTTP_HOST")
		set url = "http://"_host_app

		set param="EP=1&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set paramEncrypt = $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)

		set URLPreparacao 		= "VAR.CSP.VARWorkFlowPathway.cls"
		set URLPrepRegTerapet = "VAR.CSP.RegimesTerapeuticos.cls"
		set URLLogin 					= "COMLogin.cls"
		set nomeLocal 				= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		Set codCID = $Get(^TempVARWorkFlowPathway(0,YBED,1))
		If (codCID = "") Set codCID = "C90.0"

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Pathway</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />

		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />



		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

		<style>

			.first-group,
				.second-group {
				padding: 10px;
			}

			.semBordasLaterais {
				padding-left:0px!important;
				padding-right:0px!important;
			}

		</style>

	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('#(YBED_" - "_YUSER)#Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divPopUpCiclo"></div>
		<div id="divPopUpMedicamento"></div>

		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<script src="#(YGIF)#global/plugins/Highcharts-7.1.0/code/highcharts.js"></script>
		<script src="#(YGIF)#global/plugins/Highcharts-7.1.0/code/highcharts-more.js"></script>
		<script src="#(YGIF)#global/plugins/Highcharts-7.1.0/code/modules/solid-gauge.js"></script>
		<script src="#(YGIF)#global/plugins/Highcharts-7.1.0/code/modules/exporting.js"></script>
		<script src="#(YGIF)#global/plugins/Highcharts-7.1.0/code/modules/export-data.js"></script>
		<!--<script src="#(YGIF)#global/plugins/Highcharts-7.1.0/code/modules/highstock.js"></script>-->

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			$.ajaxSetup({headers: {'id_key': '#(paramEncrypt)#'}});

			var urlPreparacao 		= '#(URLPreparacao)#';
			var urlPrepRegTerapet = '#(URLPrepRegTerapet)#';
			var codCID						= '#(codCID)#';
			
			toolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after", widget: "dxButton",
					options: {
						icon: "fa fa-eraser", hint: "Limpar os Campos", type: "default",
						text: "Limpar", stylingMode: "contained",
						onClick: function(){ limpar(); }
					}
				}]
			}).dxToolbar("instance")			

			var dSDiagnosticoC900 = [{codigo:  1, descricao: "Leucemia de Células Plasmáticas"},
															 {codigo:  2, descricao: "Mieloma Múltiplo com Amiloidose Sistêmica AL"},
															 {codigo:  3, descricao: "Mieloma Múltiplo"},
															 {codigo:  4, descricao: "Amiloidose Sistêmica AL"},
															 {codigo:  5, descricao: "Mieloma Indolente"},
															 {codigo:  6, descricao: "Plasmocitoma Solitário"},
															 {codigo:  7, descricao: "Plasmocitoma Solitário com Envolvimento Medular Mínimo"},
															 {codigo:  8, descricao: "Gamopatia Monoclonal de Significado Renal"},
															 {codigo:  9, descricao: "Gamopatia Monoclonal de Significado Indeterminado não IgM"},
															 {codigo: 10, descricao: "Gamopatia Monoclonal de Significado Indeterminado IgM"},
															 {codigo: 11, descricao: "Gamopatia Monoclonal de Significado indeterminado de Cadeias Leves"}
															];
			var dSDiagnosticoC911 = [{codigo: 1, descricao: "Leucemia Linfoide Crônica"},
															 {codigo: 2, descricao: "Linfocitose B Clonal"}
															];
															
			var dSDiagnostico = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({ 
					loadMode: "raw",
					load: function(args) {
						var pCodCID = objForm.getEditor("cid").option("value");
						if (pCodCID = "C90.0") return dSDiagnosticoC900;
						if (pCodCID = "C91.1") return dSDiagnosticoC911;
						return [];
					}
				})
			});
			
			objForm = $("#divForm").dxForm({
				scrollingEnabled: true,
				screenByWidth: function(width) { return "lg"; },
				activeStateEnabled:true,
				colCount: 6,
				items: [{
					colSpan: 6,
					colCount: 4,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 3, dataField	: "cid", validationRules: [{ type: "required" }],				   
						label: { text: "CID", alignment: "right" }, editorType: "dxSelectBox",
						editorOptions: {
							itemTemplate: function (data, itemIndex, element) {
								if (CategoriaAnt != data.Categoria){
									retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
									CategoriaAnt = data.Categoria
									element.append(retorno)
								}
								return element.append(data.Descricao)
							},							
							valueExpr: "Codigo", displayExpr: "Descricao", searchEnabled: true, value: codCID,
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										CategoriaAnt = ""
										return $.getJSON(urlPrepRegTerapet,{ method:"getCID", codigo: args });
									},
									load: function(args) {
										CategoriaAnt = ""
										return $.getJSON(urlPrepRegTerapet,{method:"getCID", skip:args.skip, take:args.take, searchValue:args.searchValue });
									}
								})
							}),
							onValueChanged: function(e) {
								objForm.getEditor("diagnostico").option("value", "");
								dSDiagnostico.reload();
							}
						}
					},{},{
						colSpan: 3,	dataField: "diagnostico", editorType: "dxSelectBox", validationRules: [{ type: "required" }], 
						label: { text: "Diagnóstico", alignment: "right" },editorOptions: {
							valueExpr: "codigo", displayExpr: "descricao", searchEnabled: true, placeholder: "Novo",
							showClearButton: true, dataSource: dSDiagnostico,	
							onValueChanged: function(e) {
								objDados.getEditor("linha").option("value",1);
								objDados.getEditor("tratamento").option("value","");
								dSPathway.reload();
								montaGrafico();
							}
						}
					},{},{
						colSpan: 4, itemType: "tabbed", name: "abas", tabPanelOptions: {
		  				selectedIndex: 0, deferRendering: false, animationEnabled: false, showNavButtons:true,
						}, height:'10px', tabs:[{
							title: "Dados", items: [{ template: function (data, itemElement){ 
								itemElement.append("<div id='divDados'>")
							}}],
						}]
					}]
				}]
			}).dxForm("instance");
			
			function limpar() {
					objForm.getEditor("tratameto").option("value","");
					objForm.getEditor("situacao").option("value", "");
					objDados.resetValues();
					objDados.getEditor("terapiaSuporte").option("readOnly", 0);
					dSReferencia.reload();
					$("#divReferencias").dxDataGrid("instance").option("disabled", 1);
					dSCiclo.reload();
					$("#divCiclos").dxDataGrid("instance").option("disabled", 1);
					dSVinculo.reload();
					$("#divVinculos").dxDataGrid("instance").option("disabled", 1);
			}
			
			var grupoAnt = "";
			dSTratamento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						var grupoAnt = "";
						var pCodCID = objForm.getEditor("cid").option("value");
						if (pCodCID == "" || pCodCID == null) return [];
						return $.getJSON(urlPreparacao,{ method:"getTratamento", codigo: args });
					},
					load: function(args) {
						var grupoAnt = "";
						var pCodCID = objForm.getEditor("cid").option("value");
						if (pCodCID == "" || pCodCID == null) return [];
						return $.getJSON(urlPreparacao,{method:"getTratamento", pCodCID: pCodCID, 
						skip:args.skip, take:args.take, searchValue:args.searchValue });
					}
				})
			});
				
			objDados = $("#divDados").dxForm({
				scrollingEnabled: true,
				screenByWidth: function(width) { return "lg"; },
				height: function() { return window.innerHeight - 180;},
				activeStateEnabled:true,
				colCount: 8,
				items: [{
					colSpan: 2, dataField: "linha", validationRules: [{ type: "required" }],				   
					label: { text: "Linha de Tratamento", alignment: "right" }, editorType: "dxNumberBox",
					editorOptions: { min: 1, value: 1, format: "#0", showSpinButtons: 1, 
						onValueChanged: function(e) {
							objCampoTratVinc.option({readOnly: 1, value: ""});
							//objCampoTratVinc.option("validationStatus", "valid");
							dSTratVinculo.reload();
							if (e.value > 1) {
								objCampoTratVinc.option({readOnly: 0, value: ""});
								//objCampoTratVinc.option("validationStatus", "invalid");
							}
						},							
					}
				},{
					colSpan: 6, dataField: "tratamento", label: { text: "Tratamento", alignment: "right" },
					validationRules: [{ type: "required" }],
					editorType: "dxSelectBox", editorOptions: { searchEnabled: true, showClearButton: true,
						valueExpr: "codigo", displayExpr: "descricao", dataSource : dSTratamento, 
						itemTemplate: function (data, itemIndex, element) {
							if (grupoAnt != data.grupo){
								retorno = "<b><i>"+data.grupo+"</i></b><br><br>"
								grupoAnt = data.grupo
								element.append(retorno)
							}
							return element.append(data.descricao)
						},
						onValueChanged: function(e) { dSTratVinculo.reload(); }
					}
				},{
					colSpan: 7, dataField: "vinculoTratamento", label: { text: "Tratamento Vínculo", alignment: "right" },
					template: function (data, itemElement){ 
						itemElement.append("<div id='divVinculoTratamento' />")
					}
				},{
					colSpan: 1, editorType: "dxButton", editorOptions: {
						icon: "add", hint: "Inserir", type: "default", text: "Inserir",
						stylingMode : "contained", onClick: function(){ inserirTratamento() }
					}
				},{
					colSpan: 8, template: function (data, itemElement){ 
						itemElement.append("<div id='divGridSelecionado'>")
					}
				},{
					colSpan: 8, template: function (data, itemElement){ 
						itemElement.append("<div id='divGrafico' style='border: 1px solid #dddddd; " +
															 "width: "+(window.innerWidth-30)+"px; overflow-x: auto;'>")
					}
				}]
			}).dxForm("instance");
		
			dSTratVinculo = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function(args) {
						var pCodCID 				= objForm.getEditor("cid").option("value");
						var pCodDiagnostico = objForm.getEditor("diagnostico").option("value");
						var pLinhaTrat 			= objDados.getEditor("linha").option("value");
						var pCodTratamento 	= objDados.getEditor("tratamento").option("value");
						var pCodCID = objForm.getEditor("cid").option("value");
						if (pCodCID == "" || pCodCID == null) return [];
						if (pCodDiagnostico == "" || pCodDiagnostico == null) return [];
						if (pLinhaTrat == "" || pLinhaTrat == 1) return [];
						return $.getJSON(urlPreparacao,{method:"getTratamentoVinculo", pCodCID: pCodCID, 
						pCodDiagnostico: pCodDiagnostico, pLinhaTrat: pLinhaTrat},
						function(rs){objCampoTratVinc.option("value","");});
					}
				})
			});
			
			var objCampoTratVinc = $("#divVinculoTratamento").dxTagBox({
				searchEnabled: true, 
				showClearButton: true,
				valueExpr: "codigo", 
				displayExpr: "descricao", 
				dataSource : dSTratVinculo, 
				readOnly: 1,
				itemTemplate: function (data, itemIndex, element) {
					if (grupoAnt != data.grupo){
						retorno = "<b><i>"+data.grupo+"</i></b><br><br>"
						grupoAnt = data.grupo
						element.append(retorno)
					}
					return element.append(data.descricao)
				},
				onValueChanged: function(e) {
					//var pLinhaTrat = objDados.getEditor("linha").option("value");
					//objCampoTratVinc.option("validationStatus", "valid");
					//if (pLinhaTrat > 1 && (e.value == "" || e.value == null)) {
					//	objCampoTratVinc.option("validationStatus", "invalid");
					//}
				},							
			}).dxTagBox("instance");
				
			function inserirTratamento() {
				var flagValForm 	= objForm.validate().isValid; 
				var flagValDados 	= objDados.validate().isValid; 
				if (!flagValForm || !flagValDados){
					DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
					return;
				}
				var pCodCID 				= objForm.getEditor("cid").option("value");
				var pCodDiagnostico = objForm.getEditor("diagnostico").option("value");
				var pLinhaTrat 			= objDados.getEditor("linha").option("value");
				var pCodTratamento 	= objDados.getEditor("tratamento").option("value");
				var pCodTratVinc 		= objCampoTratVinc.option("value");

				if (pCodTratVinc) pCodTratVinc = JSON.stringify(pCodTratVinc);
				
				$.getJSON(urlPreparacao,{ method:"insertTratamento", pCodCID: pCodCID, pCodDiagnostico: pCodDiagnostico,
				pLinhaTrat: pLinhaTrat, pCodTratamento: pCodTratamento, pCodTratVinc: pCodTratVinc}, 
				function(objRetorno){
					if (objRetorno.status != 1) {
						DevExpress.ui.notify("Erro: "+objRetorno.mensagem, "warning", 4000);
					}else{
						DevExpress.ui.notify("Tratamento inserido com sucesso!", "success", 4000);
						objDados.getEditor("tratamento").option("value", "");
						objCampoTratVinc.option("value", "");
						dSPathway.reload();
						dSTratVinculo.reload();
						montaGrafico();
					}
				});
			}
			
			dSPathway = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					load: function(args) {
						var pCodCID 				= objForm.getEditor("cid").option("value");
						var pCodDiagnostico = objForm.getEditor("diagnostico").option("value");
						if (pCodCID == null || pCodCID == "") return [];
						if (pCodDiagnostico == null || pCodDiagnostico == "") return [];
						return $.getJSON(urlPreparacao,{method:"listPathway", pCodCID: pCodCID, pCodDiagnostico: pCodDiagnostico});
					},
					remove: function(args) {
						var pCodCID 				= objForm.getEditor("cid").option("value");
						var pCodDiagnostico = objForm.getEditor("diagnostico").option("value");
						return $.get(urlPreparacao,{ method: "delPathway", pCodCID: pCodCID, 
						pCodDiagnostico: pCodDiagnostico, pID: args.id},function(){montaGrafico();dSTratVinculo.reload();});
					}
				})
			});
			
			$("#divGridSelecionado").dxDataGrid({
				dataSource: dSPathway,
				columns: [
					{ dataField: "linha", caption: "Linha de Tratamento", alignment: "center", groupIndex: 0 },
					{ dataField: "grupo", caption: "Tipo de Regime", groupIndex: 1},
					{ dataField: "tratamento", caption: "Tratamento" },
					{ dataField: "vinculo", caption: "Vínculo" },
				],
				onCellPrepared: function(e){
					if (e.rowType == "data" && e.columnIndex == 4 && e.data.linha != e.data.max) {
						 e.cellElement.html(" ");
					}
				},
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: false, pageSize: 25 },
				editing: { mode: "popup", allowUpdating: false, allowAdding	 : false, allowDeleting: true, useIcons: true },					
				height: 300,
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				wordWrapEnabled: 1
			});
			
			var backGDash = '#ffffff';
			var	colorsDash = ["#7cb5ec", "#434348", '#55BF3B', '#f45b5b', '#8085e9', '#FF8000',  
			'#7798BF', '#aaeeee', '#ff0066', '#eeaaee', '#DF5353', '#7798BF']
			function montaGrafico() {
				var pCodCID 				= objForm.getEditor("cid").option("value");
				var pCodDiagnostico = objForm.getEditor("diagnostico").option("value");
				if (pCodCID == null || pCodCID == "") return;
				if (pCodDiagnostico == null || pCodDiagnostico == "") return;
				console.log(pCodCID+"|"+pCodDiagnostico)
				$.getJSON(urlPreparacao,{ method:"getGrafico", pCodCID: pCodCID, pCodDiagnostico: pCodDiagnostico}, 
				function(objRetorno){
					console.log(objRetorno)
					$("#divGrafico").html("<div id='divGraficoExibir' style='width: "+objRetorno.width+"px;'></div>");
					var objGrafico = Highcharts.chart('divGraficoExibir', {
						chart: {
							plotBackgroundColor: null, plotBorderWidth: null, plotShadow: false, height: objRetorno.height, 
							margin:[20,20,20,20], zoomType: 'xy',  reflow: true, renderTo: 'chart',
							backgroundColor: backGDash, borderColor: backGDash, borderWidth: 1,
							events: {
								load: function () {

									// Draw the flow chart
									var ren = this.renderer;
									var colors = Highcharts.getOptions().colors;
									
									for (var i = 0; i < objRetorno.label.length; i++) {
										
										var objLabel = objRetorno.label[i];
										
										//Titulo da Coluna
										ren.label(objLabel.descricao, objLabel.width+2, objLabel.height).css({fontWeight: 'bold', fontSize: 9}).add();
										//Separador de Coluna
										if (i != 0) {
											ren.path(['M', objLabel.width, 0, 'L', objLabel.width, objRetorno.height]).attr({'stroke-width': 2, stroke: 'silver', dashstyle: 'dash' }).add();
										}

										for (var ii = 0; ii < objLabel.box.length; ii++) {
											var objBox = objLabel.box[ii]
											
											
											if (i == 0) {
												var xObjLabel = objRetorno.label[i+1];
												if (typeof xObjLabel != "undefined") {
													for (var iii = 0; iii < xObjLabel.box.length; iii++) {
														var xObjBox = xObjLabel.box[iii];
														ren.path([
															'M', (objBox.left+180), (objBox.top+28), 
															'L', (objBox.left+210), (objBox.top+28),
															'L', (objBox.left+210), (xObjBox.top+28),
															'M', (objBox.left+210), (xObjBox.top+28), 
															'L', (objBox.left+250), (xObjBox.top+28)
														]).attr({'stroke-width': 2,stroke: colors[1]}).add();
													}
												}
											}else if (i > 1) {
												for (var iConex = 0 ; iConex < objBox.conexao.length; iConex++){
													var objConexao = objBox.conexao[iConex]
													ren.path([
														'M', (objBox.left), (objBox.top+15+(ii*5)), 
														'L', (objBox.left-(50-(7*ii))), (objBox.top+15+(ii*5)),
														'L', (objBox.left-(50-(7*ii))), (objConexao.top+15+(ii*5)),
														'M', (objBox.left-(50-(7*ii))), (objConexao.top+15+(ii*5)), 
														'L', (objBox.left-68), (objConexao.top+15+(ii*5))
													]).attr({'stroke-width': 2,stroke: colors[ii]}).add();
												}
											}
											
											//Box por Coluna
											ren.label(objBox.descricao, objBox.left, objBox.top)
												.attr({fill: eval(objBox.fill), stroke: 'white', 'stroke-width': 1, padding: 5, r: 3, 
												width: objBox.width, height: objBox.height, 'border-color': "red"})
												.css({color: 'white', width: objBox.width}).add().shadow(true);						
										}
									
									}
								}
							}
						},
						title: { text: "", style: { color: 'black' } },
						accessibility: { typeDescription: 'Flowchart' },
						exporting: {buttons: {contextButton: {enabled: false},printButton: {enabled: false}}}

					});
				});
				
			}
			
			/*$(document).ready(function () {
				setTimeout(function(){
					objForm.getEditor("diagnostico").option("value", 1)
				}, 500);
			});*/
		</script>
	</body>
</html>
