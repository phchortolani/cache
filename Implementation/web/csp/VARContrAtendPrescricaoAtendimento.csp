<script language="Cache" runat="server"> 
	Set YBED = $get(%request.Data("YBED", 1))
	Set flagUsuarioMedico = +$$GetChecaMedico^VARSQL(YBED)
</script>
<div class="container-fluid">
	<div class="row">
		<div class="col-md-12">
			<div id="divPrescricaoAtendimentoList"></div>
		</div>	
	</div>
</div>

<script type="text/javascript">
	var flagUsuarioMedico = "#(flagUsuarioMedico)#";

	dataSourcePrescricao = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		key: "id",
  		loadMode: "raw",   
  		load: function() {
	  		alertaPrescricao();
	  		return $.getJSON(urlPreparacaoQui,{method:"GetPrescricaoAtendimento",pCodProntuario:pCodProntuario});
  		},
  		insert: function (values) {
	      objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				var a = #server(VAR.CSP.VARContrAtendQuimioterapico.ArmPrescricaoAtendimento(pCodProntuario, flagUsuarioMedico, "", objDados, YBED))#;
    		alertaPrescricao();
    	},
			update: function (key, values) {
				var idRow = key;
				objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendQuimioterapico.ArmPrescricaoAtendimento(pCodProntuario, flagUsuarioMedico, idRow, objDados, YBED))#;
				alertaPrescricao();
			}					
		})
	});

	
	$("#divPrescricaoAtendimentoList").dxDataGrid({
		dataSource: dataSourcePrescricao,
		columns: [{
			caption: "Médico",  alignment: "center",
			columns: [
				//{	dataField: "dataHoraMedico", caption: "Data/Hora", alignment: "center", allowEditing: 0, width: 128},
				{	dataField: "dataHoraMedico", caption: "Data/Hora", alignment: "center", dataType: "datetime", 
				editorOptions: {
					dateSerializationFormat: "yyyy-MM-ddTHH:mm:ss"
				}, allowEditing: (flagUsuarioMedico == 1 ? 1 : 0), width: 128},
				{	dataField: "codMedicamento", caption: "Medicamento", width: 250, alignment: "center", allowEditing: (flagUsuarioMedico == 1 ? 1 : 0)},
				/*{	dataField: "descMedicamento", caption: "Medicamento", width: 250, alignment: "center", allowEditing: (flagUsuarioMedico == 1 ? 1 : 0),
					validationRules: [{ type: "required" }], setCellValue: function (rowData, value) {
		        if (value == "" || value == null) return
		        objLinha = this;
		        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaProduto(value))#;
		        retorno = retorno.split("~"); 
						objLinha.defaultSetCellValue(rowData, retorno[2]);
						rowData.codMedicamento = retorno[1];	
			  	}
			  },*/
				{	dataField: "dose", caption: "Dose", alignment: "center", allowEditing: (flagUsuarioMedico == 1 ? 1 : 0)},
				{	dataField: "observacaoMedico", caption: "Observação", alignment: "center", allowEditing: (flagUsuarioMedico == 1 ? 1 : 0)},
				{	dataField: "responsavelMedico", caption: "Responsável", alignment: "center", allowEditing: 0},
			]},{
			caption: "Enfermagem",  alignment: "center",
			columns: [
				{	dataField: "dataHoraEnfermagem", caption: "Data/Hora", alignment: "center", dataType: "datetime", 
				editorOptions: {
					dateSerializationFormat: "yyyy-MM-ddTHH:mm:ss"
				}, allowEditing: (flagUsuarioMedico == 1 ? 0 : 1), width: 128},
				{	dataField: "observacaoEnfermagem", caption: "Observação", alignment: "center", allowEditing: (flagUsuarioMedico == 1 ? 0 : 1)},
				{	dataField: "responsavelEnfermagem", caption: "Responsável", alignment: "center", allowEditing: 0},
			]},
			{	dataField: "statusDesc", caption: "Situação", alignment: "center", allowEditing: 1, width: 80, 
				setCellValue: function (rowData, value) {
	        if (value == "" || value == null) {
		        var situacaoDesc = "Aguard. Aplicação"
		        var situacao = "AA"
	        }else{
		      	if (value == "AA") {
			        var situacaoDesc = "Aguard. Aplicação"
			        var situacao = "AA"
		      	}
		      	if (value == "CA") {
			        var situacaoDesc = "Cancelado"
			        var situacao = "CA"
		      	}
		      	if (value == "AP") {
			        var situacaoDesc = "Aplicado"
			        var situacao = "AP"
		      	}
	        }
	        objLinha = this;
					objLinha.defaultSetCellValue(rowData, situacaoDesc);
					rowData.status = situacao;	
		  	},
			}
		],
		onEditorPreparing: function(e) {
			if (e.parentType == "dataRow" && (e.dataField == "observacaoMedico" || e.dataField == "observacaoEnfermagem")) {
				e.editorName = "dxTextArea"; 
      }  
			/*if (e.parentType == "dataRow" && e.dataField == "descMedicamento") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						load: function(args) {
							return $.getJSON(urlPreparacaoQui,{method:"CarregaProdutos", pFiltro: args.searchValue,
								pTake: args.take, pSkip: args.skip, YLOCATION: YLOCATION, pContaContabil: '00000782'});
						},
						byKey: function(args) {
							return $.getJSON(urlPreparacaoQui,{method:"CarregaProdutos", pKey: args, YLOCATION: YLOCATION, pContaContabil: '00000782'});
						}
					})
				});
				e.editorOptions.value = e.row.data.medicacao;
				e.editorOptions.displayExpr = "DescProduto";
				e.editorOptions.valueExpr = "CodProduto";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}*/
			if (e.parentType == "dataRow" && e.dataField == "statusDesc") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = [{"id":"AA","text":"Aguard. Aplicação"},{"id":"AP","text":"Aplicado"},{"id":"CA","text":"Cancelado"}];
				e.editorOptions.value = e.row.data.responsavel;
				e.editorOptions.displayExpr = "text";
				e.editorOptions.valueExpr = "id";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
	    }
		},
		onEditingStart: function(e) {
			var status = e.data.status;
			var consultaAtual = e.data.consultaAtual;
			if (status == "CA" || status == "AP"){
				e.cancel = true;
			}
			if (consultaAtual!=undefined){
				if (!consultaAtual){
					e.cancel = true;
				}
			}
		},		
		editing: {
			mode: "batch", // Specifying the edit mode
			allowAdding: (flagUsuarioMedico == 1 ? true : false), // Enable editing
			allowUpdating: true, // Enable editing
			useIcons: true
		},
		columnAutoWidth: false,
		showColumnLines: true,
		showRowLines: true,
		rowAlternationEnabled: true,
		hoverStateEnabled: true,
		showBorders: true,
		headerFilter: { visible: false },
		grouping: { autoExpandAll: true },
		groupPanel: { visible: false, allowColumnDragging: true },
		columnFixing: { enabled: false },
		filterRow: { visible: false },		height: 350,
		export: { enabled: false },
		stateStoring: { enabled: false }, 
		wordWrapEnabled: true,
	});	

</script>
