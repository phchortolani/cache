<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 			= $get(%request.Data("YBED", 1))
		set YM 				= $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 			= %request.Application
		set host 			= %request.CgiEnvs("HTTP_HOST")
		set url				= "http://"_host_app

		set URLPreparacao = "VAR.CSP.VARCadastroProfissional.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLLogin 			= "COMLogin.cls"
		set URLLink 			= "www.cls"

		set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		
		Set bloqAbaRH = 1
		Set bloqCampoExtra = 1
		If (##Class(VAR.CSP.VARCadastroProfissional).GetCargoWWW013(YBED) '= 1) {
			Set bloqAbaRH = 0
			Set retContratacaoProf = ##Class(VAR.CSP.VARCadastroProfissional).GetCargoProfissional(YBED)
			If (retContratacaoProf?.3N) {
				If (retContratacaoProf = 7 || (retContratacaoProf = 8) || (retContratacaoProf = 9)) {;Estagiario
					Set bloqCampoExtra = 0
				}
			}Else{
				Set status = retContratacaoProf	
			}
		}
		
		
		Set descGroup1 = ##Class(VAR.CSP.VARCadastroProfissional).GetDescHabilidade(1)
		Set descGroup2 = ##Class(VAR.CSP.VARCadastroProfissional).GetDescHabilidade(2)
		Set descGroup3 = ##Class(VAR.CSP.VARCadastroProfissional).GetDescHabilidade(3)
		Set descGroup4 = ##Class(VAR.CSP.VARCadastroProfissional).GetDescHabilidade(4)
		Set descGroup5 = ##Class(VAR.CSP.VARCadastroProfissional).GetDescHabilidade(5)
		Set descGroup6 = ##Class(VAR.CSP.VARCadastroProfissional).GetDescHabilidade(6)
		Set descGroup7 = ##Class(VAR.CSP.VARCadastroProfissional).GetDescHabilidade(7)

		
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Profissional</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}
		if (status != 1) {
			alert(status)
			window.location.replace("about:blank")
		}
		
		

	</script>

	<style>
	.cell-selected {
		background-color: #FFFFB9;
	}
	.cell-selectedRestricao {
		background-color: #FFFFB9;
	}

	.dx-datagrid {
		user-select: none;
		-webkit-user-select: none;
	}		

	.dx-scheduler-view-switcher {  
		visibility: hidden  
	}

	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }
  .dx-field-item-label-text {
  	color: #000!important;
  }
	</style>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="loadpanel"></div>
		<div id="addUsuario"></div>
		<div id="divAlerta"></div>
		<div id="popup"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx-gantt.min.js"></script>


		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/exceljs.min.js"></script>
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/FileSaver.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao 		= '#(URLPreparacao)#';
			var urlSearch					= '#(URLSearch)#';
			var urlLink 					= '#(URLLink)#';
			var YBED 							= '#(YBED)#';
			var YUSER 						= '#(YUSER)#';
			var YLOCATION 				= '#(YLOCATION)#';
			var nomeLocal 				= '#(nomeLocal)#';
			var bloqAbaRH					= #(bloqAbaRH)#;
			var bloqCampoExtra		= #(bloqCampoExtra)#;
			
			var descGroup1 = "#(descGroup1)#";
			var descGroup2 = "#(descGroup2)#";
			var descGroup3 = "#(descGroup3)#";
			var descGroup4 = "#(descGroup4)#";
			var descGroup5 = "#(descGroup5)#";
			var descGroup6 = "#(descGroup6)#";
			var descGroup7 = "#(descGroup7)#";

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			loadPanel = $("#loadpanel").dxLoadPanel({
				visible: true, showIndicator: true, showPane: true, shading: true,
				shadingColor:"rgba(255,255,255,.6)", closeOnOutsideClick: false,
			}).dxLoadPanel("instance");

			dSLookupTpHabil				= [];
			dSLookupNivel 				= [];
			dSLookupIdioma 				= [];
			dSLookupNivelIdioma 	= [];
			dSLookupEscolaridade 	= [];
			$.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"TIPOHABILIDADE"}, function(objRetorno){dSLookupTpHabil = objRetorno;});
			$.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"IDIOMA"}, function(objRetorno){dSLookupIdioma = objRetorno;});
			$.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"NIVELIDIOMA"}, function(objRetorno){dSLookupNivelIdioma = objRetorno;});
			$.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"NIVELHABILIDADE"}, function(objRetorno){dSLookupNivel = objRetorno;});
			$.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"ESCOLARIDADE"}, function(objRetorno){dSLookupEscolaridade = objRetorno;});

			popup = $("#popup").dxPopover({width: 400, showEvent: "mouseenter",hideEvent: "mouseleave"}).dxPopover("instance");

			objAlert = $("#divAlerta").dxPopup({
				visible: false, title: "Alerta",
				width: 600, height:  130, position: { my: "center", at: "center", of: window },
				contentTemplate: function(e) {
					e.append("<div style='text-align: center;color: red;'><h4>Por favor, confira os dados preenchidos, atualize se necessário e complemente com as demais informações.</h4></div>");
				}
			}).dxPopup("instance");	


			$("#addUsuario").dxPopup({
				visible: false, title: "Adicionar Usuário",
				width: 600, height:  160, position: { my: "center", at: "center", of: window },
				onHiding: function(e) {
					objRH.getEditor("usuarioAlphalinc").getDataSource().reload();
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objFormAddUsuario = $("<div id='divFormAddUsuario'>").dxForm({
						readOnly: false, alignItemLabels: true, showColonAfterLabel: false, colCount: 2,
						screenByWidth: function(width) { return "lg"; }, labelLocation: "left", items: [{
							dataField: "addUsuarioUsuario",  label: { text:"Usuário:", alignment: "right"}, validationRules: [{ type: "required" }],
							editorOptions: { maxLength: 20, onFocusOut: function(e){
                var editor = e.component;  
                especialChar = editor.option("value");
                especialChar = especialChar.toUpperCase();
                especialChar = especialChar.replace(/[ÁÀÃÂÄ]/ig, 'A');
                especialChar = especialChar.replace(/[ÉÈÊË]/ig, 'E');
                especialChar = especialChar.replace(/[ÍÌÎÏ]/ig, 'I');
                especialChar = especialChar.replace(/[ÓÒÕÔÖ]/ig, 'O');
                especialChar = especialChar.replace(/[ÚÙÛÜ]/ui, 'U');
                especialChar = especialChar.replace(/[Ç]/ig, 'C');
                especialChar = especialChar.replace(/[^a-z0-9]/ig, '_');
                especialChar = especialChar.replace(/_+/ig, '_'); 
                editor.option("value", especialChar); 
                $.getJSON(urlPreparacao,{ method: "ChecUsuarioModelo", pUsuario: especialChar}, function(objRetorno){
									if (objRetorno.status != 0) {
        						DevExpress.ui.notify("Usuário "+especialChar+", já cadastrado.","warning");
        						editor.option("value", ""); 
        						return;
									}
                });
              }}
						},{
							dataField: "addUsuarioSenha",  label: { text:"Senha:", alignment: "right"},
							editorOptions: { readOnly: 1 }
						},{
							dataField: "addUsuarioNome",  label: { text:"Nome:", alignment: "right"}, validationRules: [{ type: "required" }],
							editorOptions: { maxLength: 50 }, colSpan: 2
						},{
							itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save", onClick: function(){
          				objFormAddUsuario = $("#divFormAddUsuario").dxForm("instance");
									if (!objFormAddUsuario.validate().isValid) {
										DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
										return;
									}
									$.getJSON(urlPreparacao,{ method: "ArmUsuario", pObjDados: JSON.stringify(objFormAddUsuario.option("formData"))},
									function(objRetorno){
										if (objRetorno.status==1){
											objRH.getEditor("usuarioAlphalinc").getDataSource().reload();
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											objRH.getEditor("usuarioAlphalinc").option("value", objFormAddUsuario.getEditor("addUsuarioUsuario").option("value"));
											$("#divFormAddUsuario").dxForm("instance").resetValues();
											$("#addUsuario").dxPopup("instance").hide();
										}else{
											DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
										}
									});
								}
							}
						},{
							itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close", onClick: function(){
									$("#divFormAddUsuario").dxForm("instance").resetValues();
									$("#addUsuario").dxPopup("instance").hide();
								}
							}
						}]
					});
					e.append(objFormAddUsuario);
				}
			});
			
			objToolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after", widget: "dxButton", options: {
						icon: "save", hint: "Salvar os Dados", text: "Salvar", type: "success", stylingMode: "contained",
						onClick: function(){
							var pCodProfissional = objProfissional.option("value");
							if (bloqAbaRH != 1 && (pCodProfissional == "" || pCodProfissional == null)) {
								DevExpress.ui.notify("Favor informar o profissional!","warning");
								pObjRH = "";
								return;
							}else{
								pObjRH = JSON.stringify(objRH.option("formData"));
							}
							var flagForm = objForm.validate().isValid; 
							var flagPessoal = objPessoal.validate().isValid; 
							if (bloqAbaRH != 1) {
								if (!flagPessoal){
									DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
									return;
								}
								if (objPessoal.getEditor("empresa").option("value") != "" && objPessoal.getEditor("empresa").option("value") != null) {
									if (objPessoal.getEditor("alocacao").option("value") == "" || objPessoal.getEditor("alocacao").option("value") == null) {
										DevExpress.ui.notify("Favor preencher o campo 'Alocação'","warning");
										return;
									}
								}
								if (bloqCampoExtra == 1) {
									if (objPessoal.getEditor("extra").option("value") == null) {
										DevExpress.ui.notify("Favor preencher o campo 'Tem interesse/ disponibilidade em realizar hora extra?'","warning");
										return;
									}
									if (objPessoal.getEditor("treinamento").option("value") == null) {
										DevExpress.ui.notify("Favor preencher o campo 'Tem interesse em ministrar treinamento?'","warning");
										return;
									}
								}
							}else{
								if (!flagPessoal || !objRH.validate().isValid){
									DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
									return;
								}
							}
							$.getJSON(urlPreparacao,{ method: "ArmProfissional", pCodProfissional: pCodProfissional, 
							pObjPessoal: JSON.stringify(objPessoal.option("formData")), pObjRH: pObjRH},function(objRetorno){
								if (objRetorno.status==1){
									dataSourceProfissional.reload();
									objProfissional.option("value", objRetorno.codProfissional);
									carregarDados(objRetorno.codProfissional) 
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
								}else{
									DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
								}
							});
						}
					}
				},{
					location: "after", widget: "dxButton", visible: bloqAbaRH, 
					options: { icon: "fas fa-file-import", text: "Importar", hint: "Importar Profissional", type: "default",
						stylingMode: "contained", onClick: function(){
							importarArquivo('051', "dataSourceProfissional.reload()");
						}
					}
				},{
					location: "after", widget: "dxButton",
					options: { icon: "fa fa-eraser", text: "Limpar", hint: "Limpar os Campos", type: "default",
						stylingMode: "contained", onClick: function(){
							objProfissional.option("value", "");
						}
					}
				}]
			}).dxToolbar("instance")

			function listAjudaMDrive(campo) {
				popup.hide();
				var hintFormatado = "<table border=1><tr><td align='center' width='250px'><b>Nível</b></td><td align='center' width='130px'><b>% conhecimento</b></td></tr>" 
				hintFormatado += "<tr><td>Tenho interesse em aprender:</td><td align='center'>0%</td></tr>"
				hintFormatado += "<tr><td>Noções Básicas:</td><td align='center'>10%</td></tr>"
				hintFormatado += "<tr><td>Iniciante:</td><td align='center'>20%</td></tr>"
				hintFormatado += "<tr><td>Intermediário:</td><td align='center'>40%</td></tr>"
				hintFormatado += "<tr><td>Avançado:</td><td align='center'>90%</td></tr></table>"

				popup.option("contentTemplate", function(contentElement) {
					$("<span style='font-size:12px;'>")
						.append(hintFormatado)
						.appendTo(contentElement);         
				});
				popup.option({"target": campo});
				popup.show();
			}		
		
			function listAjuta(campo) {
				popup.hide();
				var hintFormatado = "<b>Legenda:</b><br><br>" 
				hintFormatado += "<b>Noções Básicas:</b> Possuo Noções básicas, através de treinamento leitura de documentação<br>"
				hintFormatado += "<b>Iniciante:</b> Já participei de pequenas alterações ou ajustes sempre monitorado<br>"
				hintFormatado += "<b>Intermediário:</b> Já trabalhei, possuo experiência<br>"
				hintFormatado += "<b>Avançado:</b> Possuo domínio por completo, tenho experiência<br>"
				hintFormatado += "<b>Tenho interesse em aprender:</b> Não conheço, mas tenho interesse em aprender<br>"

				popup.option("contentTemplate", function(contentElement) {
					$("<span style='font-size:12px;'>")
						.append(hintFormatado)
						.appendTo(contentElement);         
				});
				popup.option({"target": campo});
				popup.show();
			}		
		
			var headerTemplate = function (header, info) {
				$('<div>').html("<span  style='font-size:12px;'>" + 
													"<i onMouseOver='listAjuta(this);' fas class='fas fa-info-circle' style='color:cornflowerblue;cursor:help'></i> &nbsp; " +
												"</span>" + 
												info.column.caption).css('font-size', '12px').appendTo(header);
			};


			function montaTela() {
				objForm = $("#divForm").dxForm({
					activeStateEnabled:true, minColWidth: 50, screenByWidth: function(width) { return "lg"; },
					height:function(){ return window.innerHeight-40 }, alignItemLabels:false, alignItemLabelsInAllGroups:false,
					items: [
						{colCount: 4, itemType: "group", cssClass: "first-group", items: [{
							colSpan: 3, dataField: "codProfissional", label: { text: "Profissional"}, 
							template	: function (data, itemElement) { itemElement.append("<div id='divProfissional'/>") },
						},{},{
						colSpan: 4, itemType: "tabbed", name: "abas", height:'10px',
							tabPanelOptions: { selectedIndex: 0, deferRendering: false, animationEnabled: false, showNavButtons:true},	
							tabs:[
								{title: "Cadastro Pessoal", items: [{ template: function (data, itemElement) { itemElement.append("<div id='divPessoal'>")}}]},
								{title: "Outras Informações", items: [{ template: function (data, itemElement) { itemElement.append("<div id='divOutras'>")}}]},
								{title: "Tecnologia", items: [{ template: function (data, itemElement) { itemElement.append("<div id='divHabDesenv'>")}}]},
								{title: "Infraestrutura", items: [{ template: function (data, itemElement) { itemElement.append("<div id='divHabInfra'>")}}]},
								{title: "Negócio", items: [{ template: function (data, itemElement) { itemElement.append("<div id='divHabFuncional'>")}}]},
								{title: "Recursos Humanos", visible: bloqAbaRH, items: [{ template: function (data, itemElement) { itemElement.append("<div id='divRH'>")}}]},
								{title: "Auditoria", items: [{ template: function (data, itemElement) { itemElement.append("<div id='divControle'>")}}]}
							]
						}]
					}]
				}).dxForm("instance");
				
				objPessoal = $("#divPessoal").dxForm({
					onFieldDataChanged: function(obj){
						if (typeof objProfissional=="undefined")  return;
						
						var pCodProfissional = objProfissional.option("value");
						if (pCodProfissional == "" || pCodProfissional == null) return;

						var flagPessoal = objPessoal.validate().isValid; 
						if (!flagPessoal){
							return;
						}

						dados = {}
						dados.campo = obj.dataField
						dados.valor = obj.value
						
						$.getJSON(urlPreparacao,{ method: "ArmProfissionalParcial", pCodProfissional: pCodProfissional, pDados: JSON.stringify(dados)});
					},
					scrollingEnabled: 1, showColonAfterLabel: 0, height	:function() { return window.innerHeight - 150; },
					screenByWidth: function(width) { return "lg"; }, alignItemLabelsInAllGroups:false, colCount: 2, items	: [
						{colCount: 2, itemType: "group", cssClass: "second-group", caption: "Informações Pessoais", items: [
							{colSpan: 2, dataField: "nome", label: { text:"Nome:", alignment: "right" }, validationRules: [{ type: "required" }]},
							{dataField: "dataNascimento", editorType: "dxDateBox", label: { text: "Data de Nascimento:", alignment: "right" },
								editorOptions: { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd",},
								isRequired: !bloqAbaRH,
							}, 
							{dataField: "sexo", editorType: "dxSelectBox",label: {text:"Sexo:", alignment: "right"},editorType: "dxSelectBox",
								editorOptions:{ dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({loadMode: "raw", load: function() {
									return $.getJSON(urlSearch,{method:"GetWWW101",pDescParametro:"SEX"});
								}})}), searchEnabled: true,valueExpr: "Codigo", displayExpr: "Descricao",},
								isRequired: !bloqAbaRH
							},
							{dataField: "cPF", label: { text:"CPF:", alignment: "right"},
								editorOptions: { maxLength: 11, onValueChanged: function (e) { 
									if (!e.value) return;
									if (!validarCPF(e.value)) {
										DevExpress.ui.notify("CPF invalido.","warning");	
										objPessoal.getEditor("cPF").option("value", "");
										objPessoal.getEditor("cPF").focus();  
									}
								}},
								isRequired: !bloqAbaRH, 
							},
							{dataField: "rG", label: { text:"RG:", alignment: "right"}, isRequired: !bloqAbaRH},
							{dataField: "nomeMae", colSpan: 2, label: { text:"Nome da Mãe:", alignment: "right"}},
							{dataField: "nomePai", colSpan: 2, label: { text:"Nome do Pai:", alignment: "right"}},
							{dataField: "possuiFilhos", label: { text:"Possui Filhos?", alignment: "right"},editorType: "dxSelectBox",
								editorOptions: {dataSource: [{Codigo: 1, Descricao: "Sim"},{Codigo: 0, Descricao: "Não"}],
								searchEnabled: true,valueExpr: "Codigo", displayExpr: "Descricao", onValueChanged: function(e) {
									if (e.value == "1") {
										objPessoal.getEditor("qtosFilhos").option("readOnly", 0);
									}else{
										objPessoal.getEditor("qtosFilhos").option("readOnly", 1);
										objPessoal.getEditor("qtosFilhos").option("value", 0);
									}							
								}}
							},
							{dataField: "qtosFilhos", label: { text:"Quantos:", alignment: "right"}, editorType: "dxNumberBox",
								editorOptions: { min: 0, readOnly: 1},
							},
							{dataField: "cNPJ", label: { text:"CNPJ:", alignment: "right"},
								editorOptions: { maxLength: 14, onValueChanged: function (e) { 
									if (!e.value) return;
									if (!validarCNPJ(e.value)) {
										DevExpress.ui.notify("CNPJ invalido.","warning");	
										objPessoal.getEditor("cNPJ").option("value", "");
										objPessoal.getEditor("cNPJ").focus();  
									}
								}}, 
							},{},
							{colSpan: 2, dataField: "nomeEmpresa", label: { text:"Nome Empresa:", alignment: "right" }},
						]
					},{
						colCount: 2, itemType: "group", caption: "Endereço", cssClass: "second-group", items: [
							{dataField: "cEP", label: { text:"CEP:", alignment: "right"}, isRequired: !bloqAbaRH, editorOptions: {
								onValueChanged: function(e) {
									if (e.value) {
										pCodProfissional = objProfissional.option("value");
										$.getJSON(urlPreparacao,{method: "GetCEP", pCEP: e.value, pCodProfissional: pCodProfissional}, function(objRetorno){
											if (objRetorno.Logradouro != "") {
												objPessoal.getEditor("logradouro").option("value",objRetorno.Logradouro);
												objPessoal.getEditor("bairro").option("value",objRetorno.Bairro);
												objPessoal.getEditor("cidade").option("value",objRetorno.Cidade);
												objPessoal.getEditor("estado").option("value",objRetorno.UF);
											}
										});
									}
								}
							}},{},
							{colSpan: 2, dataField: "logradouro", isRequired: !bloqAbaRH, label: { text:"Logradouro:", alignment: "right"}},
							{dataField: "numeroEndereco", isRequired: !bloqAbaRH, label: { text:"Número:", alignment: "right"}},
							{dataField: "complemento", label: { text:"Complemento:", alignment: "right"}},
							{dataField: "bairro", isRequired: !bloqAbaRH, label: { text:"Bairro:", alignment: "right"}},
							{dataField: "cidade", isRequired: !bloqAbaRH, label: { text:"Cidade:", alignment: "right"}},
							{dataField: "estado", isRequired: !bloqAbaRH, editorType: "dxSelectBox", label: { text:"Estado:", alignment: "right"}, editorType: "dxSelectBox",
								editorOptions: { dataSource: new DevExpress.data.DataSource({ store: new DevExpress.data.CustomStore({
									loadMode: "raw", load: function() { return $.getJSON(urlSearch,{method:"GetWWW102",pDescParametro:"BUNDESLAND"})}
								})}), searchEnabled: true, valueExpr: "Codigo",  displayExpr: "Descricao",}
							},{},
							{dataField: "telefone", label: { text:"Telefone:", alignment: "right"}},
							{dataField: "celular", isRequired: !bloqAbaRH, label: { text:"Celular:", alignment: "right"}},
							{colSpan: 2, dataField: "email", isRequired: !bloqAbaRH, label: { text:"E-mail:", alignment: "right"}},
							{template: function(data, itemElement){ itemElement.append("<div style='height:26px;'>&nbsp;</div>"); }}

						]
					},{
						colSpan: 2, itemType: "group", cssClass: "second-group", caption: "Alocação", colCount: 8, items: [
							{dataField: "empresa", colSpan: 4, editorType: "dxTagBox", label: {text:"Empresa:", alignment: "right"}, editorType: "dxSelectBox",
								editorOptions: { 
									readOnly: 1,
									dataSource: new DevExpress.data.DataSource({ 
										store: new DevExpress.data.CustomStore({
											loadMode: "raw", 
											load: function() { 
												return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"RHEMPRESA"});
											}
										})
									}), searchEnabled: true, valueExpr: "Codigo",  displayExpr: "Descricao",
								}
							},
							{dataField: "cargo", colSpan: 4, label: {text:"Cargo:", alignment: "right"},
							editorOptions: { readOnly: !bloqAbaRH }},
							{dataField: "alocacao", colSpan: 4, editorType: "dxTagBox", label: {text:"Alocação:", alignment: "right"}, editorType: "dxTagBox",
								editorOptions: { 
									placeholder: "Seleciona uma ou mais opções",
									dataSource: new DevExpress.data.DataSource({ 
										store: new DevExpress.data.CustomStore({
											loadMode: "raw", 
											load: function() { 
												return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"RHCLIENTES"});
											}
										})
									}), searchEnabled: true, valueExpr: "Codigo",  displayExpr: "Descricao",
									onValueChanged: function(e) {
										if (!e.value) {
											objPessoal.getEditor("qualAlocacao").option("readOnly", 1);
											//objPessoal.getEditor("qualAlocacao").option("value", "");
											return
										}
										if (e.value.indexOf('30') >= 0) {
											objPessoal.getEditor("qualAlocacao").option("readOnly", 0);
											//objPessoal.getEditor("qualAlocacao").option("value", "");
										}else{
											objPessoal.getEditor("qualAlocacao").option("readOnly", 1);
											//objPessoal.getEditor("qualAlocacao").option("value", "");
										}
									}
								}
							},
							{dataField: "qualAlocacao", colSpan: 4, label: {text:"Qual?:", alignment: "right"},
								editorOptions: {  readOnly: 1 }
							},{},
							{dataField: "extra", colSpan: 3, visible: bloqCampoExtra, editorType: "dxSelectBox", 
							label: {text:"Tem interesse/ disponibilidade em realizar hora extra?", alignment: "right", visible: 1},
							editorOptions: {
								dataSource: [{Codigo: 1, Descricao: "Sim"},{Codigo: 0, Descricao: "Não"}],
								searchEnabled: true,valueExpr: "Codigo", displayExpr: "Descricao"}
							},{},
							{dataField: "treinamento", colSpan: 3, visible: bloqCampoExtra, editorType: "dxSelectBox", 
							label: {text:"Tem interesse em ministrar treinamento?", alignment: "right", visible: 1},
							editorOptions: {
								dataSource: [{Codigo: 1, Descricao: "Sim"},{Codigo: 0, Descricao: "Não"}],
								searchEnabled: true,valueExpr: "Codigo", displayExpr: "Descricao"}
							},
						]
					}]
				}).dxForm("instance");

				//Aba Outras Informações
				objOutras = $("#divOutras").dxForm({
					disabled: true, scrollingEnabled	: true, showColonAfterLabel	: false,
					height: function() { return window.innerHeight - 150; },
					screenByWidth: function(width) { return "lg"; }, colCount: 1, items	: [{
						itemType: "group", cssClass: "second-group", caption: "Formação/Graduação", items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divFormacao'>"); }}]
					},{
						itemType: "group", cssClass: "second-group", caption: "Idioma", items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divIdioma'>"); }}]
					}]
				}).dxForm("instance");

				$("#divIdioma").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListIdioma", pCodProfissional: pCodProfissional});
				  		},
				    	insert: function (values) {
					    	$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetIdioma", pCodProfissional: pCodProfissional, pIdioma: values.lingua, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetIdioma", pCodProfissional: pCodProfissional, pIdioma: key.lingua, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},
				    	remove : function(values){
				    		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "DelIdioma", pCodProfissional: pCodProfissional, pIdioma: values.lingua});
								$.ajaxSetup({async: false});
							},									    	
			  		}),
					}),
					columns: [
						{	dataField: "lingua", caption: "Lingua", alignment: "left", minWidth: 150, lookup: {
	           	dataSource: dSLookupIdioma, valueExpr: "Codigo", displayExpr: "Descricao"},
	           	validationRules: [{ type: 'required' }]
						},
						{	dataField: "outros", caption: "Qual?", alignment: "left", minWidth: 150},
						{	dataField: "compreensao", caption: "Compreensão	", alignment: "left", width: 110, lookup: {
	           	dataSource: dSLookupNivelIdioma, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "fala", caption: "Fala", alignment: "left", width: 110, lookup: {
	           	dataSource: dSLookupNivelIdioma, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "escrita", caption: "Escrita", alignment: "left", width: 110, lookup: {
	           	dataSource: dSLookupNivelIdioma, valueExpr: "Codigo", displayExpr: "Descricao"}
						}
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "lingua" && (typeof e.data.lingua!="undefined")) {
		    			e.cancel = 1; 
	    			}
	    			if (e.column.dataField == "outros" && e.data.lingua != 14) {
		    			e.cancel = 1; 
	    			} 
	    		},  
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { 
						var xHeight = window.innerHeight - 690; 
						if (xHeight < 250) xHeight = 250;
						return xHeight
					},					
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
				});	
				
				$("#divFormacao").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListFormacao", pCodProfissional: pCodProfissional});
				  		},
				    	insert: function (values) {
					    	$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetFormacao", pCodProfissional: pCodProfissional, pSequencia: "", 
								pObjeto: JSON.stringify(values)},function(rs){});
								$.ajaxSetup({async: false});
				    	},									    	
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetFormacao", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},
				    	remove : function(values){
				    		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "DelFormacao", pCodProfissional: pCodProfissional, pSequencia: values.sequencia});
								$.ajaxSetup({async: false});
							},									    	
			  		}),
					}),
					columns: [
						{	dataField: "escolaridade", caption: "Escolaridade", width: 200, lookup: {
	           	dataSource: dSLookupEscolaridade, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "nomeCurso", caption: "Nome do Curso"},
						{	dataField: "instituicao", caption: "Instituição"},
						{ caption: "Data", columns: [
							{	dataField: "dataInicio", caption: "Inicio", width: 100, dataType: "date", 
							editorOptions: {useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd"}},
							{	dataField: "dataFim", caption: "Fim", width: 100, dataType: "date",
							editorOptions: {useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd"}},
						]}
					],
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { 
						var xHeight = window.innerHeight - 570; 
						if (xHeight < 250) xHeight = 250;
						return xHeight
					},					
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
				});
				

				//Aba Habilidades Desenvolvimento
				objHabDesenv = $("#divHabDesenv").dxForm({
					disabled: true, scrollingEnabled	: true, showColonAfterLabel	: false,
					height: function() { return window.innerHeight - 150; },
					screenByWidth: function(width) { return "lg"; }, colCount: 2, items	: [{
						itemType: "group", cssClass: "second-group", caption: descGroup1, items: [
						{template: function(data, itemElement){ itemElement.append("<div id='divTecnologia'>"); }}]
					},{
						itemType: "group", cssClass: "second-group", caption: descGroup2, items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divFerramentas' style='width:98%'>"); }}]
					}]
				}).dxForm("instance");
				
				$("#divTecnologia").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListHabilidades", pCodProfissional: pCodProfissional, pTipo: 1});
				  		},
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetHabilidades", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
			  		}),
					}),
					columns: [
						{	dataField: "pacote", caption: "Grupo", allowEditing: 0,  alignment: "left", width: 150, groupIndex: 1, 
							groupCellTemplate: function(element, options) {
              	if (options.value == 'z_Outros') {
              		element.text("Outros");
              	}else if (options.value == 'MDriver (Conhecimento Técnico)') {
	              	element.html("MDriver (Conhecimento Técnico) <i onMouseOver='listAjudaMDrive(this);' fas class='fas fa-info-circle' style='color:cornflowerblue;cursor:help'></i>");
	              }else{
              		element.text(options.value);
              	}
              	
              }
            },
						{	dataField: "descricao", caption: "Descrição", allowEditing: 0,  alignment: "left", width: 150},
						{	dataField: "nivel", caption: "Nível", alignment: "left", width: 110, lookup: {
	           	allowClearing: 1, dataSource: dSLookupNivel, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "observacao", caption: "Observação",  alignment: "left"},
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "observacao") {
		    			e.cancel = !e.data.nivel; 
	    			} 
	    		}, 
					customizeColumns: function (columns) {
						$.each(columns, function (_, element) {
							if (element.caption == "Nível") {
								element.headerCellTemplate = headerTemplate;
							}
						});
					},	    		 
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { return window.innerHeight - 220; },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divTecnologia").dxDataGrid("instance").expandAll();
									}else{
										$("#divTecnologia").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
				});	

				$("#divFerramentas").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListHabilidades", pCodProfissional: pCodProfissional, pTipo: 2});
				  		},
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetHabilidades", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
			  		}),
					}),
					columns: [
						{	dataField: "pacote", caption: "Grupo", allowEditing: 0,  alignment: "left", width: 150, groupIndex: 1, 
							groupCellTemplate: function(element, options) {
              	if (options.value == 'z_Outros') {
              		element.text("Outros");
              	}else{
              		element.text(options.value);
              	}
              	
              }
            },
						{	dataField: "descricao", caption: "Descrição", allowEditing: 0,  alignment: "left", width: 150},
						{	dataField: "nivel", caption: "Nível", alignment: "left", width: 110, lookup: {
	           	allowClearing: 1, dataSource: dSLookupNivel, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "observacao", caption: "Observação",  alignment: "left"},
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "observacao") {
		    			e.cancel = !e.data.nivel; 
	    			} 
	    		},
					customizeColumns: function (columns) {
						$.each(columns, function (_, element) {
							if (element.caption == "Nível") {
								element.headerCellTemplate = headerTemplate;
							}
						});
					},	    		 
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { return window.innerHeight - 220; },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divFerramentas").dxDataGrid("instance").expandAll();
									}else{
										$("#divFerramentas").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
				});
				
				///Habilidades Infraestrutura
				objHabInfra = $("#divHabInfra").dxForm({
					disabled: true, scrollingEnabled	: true, showColonAfterLabel	: false,
					height	:function() { return window.innerHeight - 150; },
					screenByWidth: function(width) { return "lg"; }, colCount: 2, items	: [{
						itemType: "group", cssClass: "second-group", caption: descGroup6, items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divInfraestrutura'>"); }}]
					},{
						itemType: "group", cssClass: "second-group", caption: descGroup7, items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divArquitetura' style='width:98%'>"); }}]
					}]
				}).dxForm("instance");
				
				$("#divInfraestrutura").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListHabilidades", pCodProfissional: pCodProfissional, pTipo: 6});
				  		},
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetHabilidades", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
			  		}),
					}),
					columns: [
						{	dataField: "pacote", caption: "Grupo", allowEditing: 0,  alignment: "left", width: 150, groupIndex: 1, 
							groupCellTemplate: function(element, options) {
              	if (options.value == 'z_Outros') {
              		element.text("Outros");
              	}else{
              		element.text(options.value);
              	}
              	
              }
            },
						{	dataField: "descricao", caption: "Descrição", allowEditing: 0,  alignment: "left", width: 250},
						{	dataField: "nivel", caption: "Nível", alignment: "left", width: 110, lookup: {
	           	allowClearing: 1, dataSource: dSLookupNivel, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "observacao", caption: "Observação",  alignment: "left"},
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "observacao" || e.column.dataField == "experiencia") {
		    			e.cancel = !e.data.nivel; 
	    			} 
	    		},  
					customizeColumns: function (columns) {
						$.each(columns, function (_, element) {
							if (element.caption == "Nível") {
								element.headerCellTemplate = headerTemplate;
							}
						});
					},	    		 
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { return window.innerHeight - 220; },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divInfraestrutura").dxDataGrid("instance").expandAll();
									}else{
										$("#divInfraestrutura").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
				});	
				
				$("#divArquitetura").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListHabilidades", pCodProfissional: pCodProfissional, pTipo: 7});
				  		},
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetHabilidades", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
			  		}),
					}),
					columns: [
						{	dataField: "pacote", caption: "Grupo", allowEditing: 0,  alignment: "left", width: 150, groupIndex: 1, 
							groupCellTemplate: function(element, options) {
              	if (options.value == 'z_Outros') {
              		element.text("Outros");
              	}else{
              		element.text(options.value);
              	}
              	
              }
            },
						{	dataField: "descricao", caption: "Descrição", allowEditing: 0,  alignment: "left", width: 150},
						{	dataField: "nivel", caption: "Nível", alignment: "left", width: 110, lookup: {
	           	allowClearing: 1, dataSource: dSLookupNivel, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "observacao", caption: "Quais?",  alignment: "left"},
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "observacao" || e.column.dataField == "experiencia") {
		    			e.cancel = !e.data.nivel; 
	    			} 
	    		},  
					customizeColumns: function (columns) {
						$.each(columns, function (_, element) {
							if (element.caption == "Nível") {
								element.headerCellTemplate = headerTemplate;
							}
						});
					},	    		 
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { return window.innerHeight - 220; },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divArquitetura").dxDataGrid("instance").expandAll();
									}else{
										$("#divArquitetura").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
				});	
				
				///Habilidades Funcional
				objHabFuncional = $("#divHabFuncional").dxForm({
					disabled: true, scrollingEnabled	: true, showColonAfterLabel	: false,
					height: function() { return window.innerHeight - 150; },
					screenByWidth: function(width) { return "lg"; }, colCount: 2, items	: [{
						itemType: "group", cssClass: "second-group", colSpan:2, caption: descGroup3, items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divDemaisGestaoMetodologia' style='width:99%'>"); }}]
					},{
						itemType: "group", cssClass: "second-group", caption: descGroup4, items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divConhecimentoNegocios'>"); }}]
					},{
						itemType: "group", cssClass: "second-group", caption: descGroup5, items: [ 
						{template: function(data, itemElement){ itemElement.append("<div id='divSoftware' style='width:98%'>"); }}]
					},]
				}).dxForm("instance");
				
				$("#divDemaisGestaoMetodologia").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListHabilidades", pCodProfissional: pCodProfissional, pTipo: 3});
				  		},
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetHabilidades", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
			  		}),
					}),
					columns: [
						{	dataField: "pacote", caption: "Grupo", allowEditing: 0,  alignment: "left", width: 150, groupIndex: 1, 
							groupCellTemplate: function(element, options) {
              	if (options.value == 'z_Outros') {
              		element.text("Outros");
              	}else{
              		element.text(options.value);
              	}
              	
              }
            },
						{	dataField: "descricao", caption: "Descrição", allowEditing: 0,  alignment: "left", width: 250},
						{	dataField: "nivel", caption: "Nível", alignment: "left", width: 110, lookup: {
	           	allowClearing: 1, dataSource: dSLookupNivel, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "experiencia", caption: "Experiências (Meses)", width: 90,  dataType: "number"},
						{	dataField: "observacao", caption: "Observação",  alignment: "left"},
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "observacao" || e.column.dataField == "experiencia") {
		    			e.cancel = !e.data.nivel; 
	    			} 
	    		},  
					customizeColumns: function (columns) {
						$.each(columns, function (_, element) {
							if (element.caption == "Nível") {
								element.headerCellTemplate = headerTemplate;
							}
						});
					},	    		 
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { 
						var xHeight = window.innerHeight - 630; 
						if (xHeight < 250) xHeight = 250;
						return xHeight
					},
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divDemaisGestaoMetodologia").dxDataGrid("instance").expandAll();
									}else{
										$("#divDemaisGestaoMetodologia").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
				});	
				
				$("#divConhecimentoNegocios").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListHabilidades", pCodProfissional: pCodProfissional, pTipo: 4});
				  		},
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetHabilidades", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
			  		}),
					}),
					columns: [
						{	dataField: "pacote", caption: "Grupo", allowEditing: 0,  alignment: "left", width: 150, groupIndex: 1, 
							groupCellTemplate: function(element, options) {
              	if (options.value == 'z_Outros') {
              		element.text("Outros");
              	}else{
              		element.text(options.value);
              	}
              	
              }
            },
						{	dataField: "descricao", caption: "Descrição", allowEditing: 0,  alignment: "left", width: 150},
						{	dataField: "nivel", caption: "Nível", alignment: "left", width: 110, lookup: {
	           	allowClearing: 1, dataSource: dSLookupNivel, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "observacao", caption: "Observação",  alignment: "left"},
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "observacao") {
		    			e.cancel = !e.data.nivel; 
	    			} 
	    		},  
					customizeColumns: function (columns) {
						$.each(columns, function (_, element) {
							if (element.caption == "Nível") {
								element.headerCellTemplate = headerTemplate;
							}
						});
					},	    		 
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { 
						var xHeight = window.innerHeight - 630; 
						if (xHeight < 250) xHeight = 250;
						return xHeight
					},
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divConhecimentoNegocios").dxDataGrid("instance").expandAll();
									}else{
										$("#divConhecimentoNegocios").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
				});	
				
				$("#divSoftware").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		load: function() {
					  		pCodProfissional = objProfissional.option("value");
					  		if (pCodProfissional == "" || pCodProfissional == null) return [];
					  		return $.getJSON(urlPreparacao,{ method: "ListHabilidades", pCodProfissional: pCodProfissional, pTipo: 5});
				  		},
				    	update: function (key, values) {
					  		$.ajaxSetup({async: true});
					  		pCodProfissional = objProfissional.option("value");
								$.get(urlPreparacao,{ method: "SetHabilidades", pCodProfissional: pCodProfissional, pSequencia: key.sequencia, 
								pObjeto: JSON.stringify(values)});
								$.ajaxSetup({async: false});
				    	},									    	
			  		}),
					}),
					columns: [
						{	dataField: "pacote", caption: "Grupo", allowEditing: 0,  alignment: "left", width: 150, groupIndex: 1, 
							groupCellTemplate: function(element, options) {
              	if (options.value == 'z_Outros') {
              		element.text("Outros");
              	}else{
              		element.text(options.value);
              	}
              	
              }
            },
						{	dataField: "descricao", caption: "Descrição", allowEditing: 0,  alignment: "left", minWidth: 150},
						{	dataField: "nivel", caption: "Nível", alignment: "left", width: 110, lookup: {
	           	allowClearing: 1, dataSource: dSLookupNivel, valueExpr: "Codigo", displayExpr: "Descricao"}
						},
						{	dataField: "observacao", caption: "Observação",  alignment: "left"},
					],
					onEditingStart: function(e) { 
	    			if (e.column.dataField == "observacao") {
		    			e.cancel = !e.data.nivel; 
	    			} 
	    		},  
					customizeColumns: function (columns) {
						$.each(columns, function (_, element) {
							if (element.caption == "Nível") {
								element.headerCellTemplate = headerTemplate;
							}
						});
					},	    		 
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { 
						var xHeight = window.innerHeight - 630; 
						if (xHeight < 250) xHeight = 250;
						return xHeight
					},
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divSoftware").dxDataGrid("instance").expandAll();
									}else{
										$("#divSoftware").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
				});	

				///Recursos Humanos
				objRH = $("#divRH").dxForm({
					onFieldDataChanged: function(obj){
						if (typeof objProfissional=="undefined")  return;
						
						var pCodProfissional = objProfissional.option("value");
						if (pCodProfissional == "" || pCodProfissional == null) return;

						var objRH = objPessoal.validate().isValid; 
						if (!objRH){
							return;
						}

						dados = {}
						dados.campo = obj.dataField
						dados.valor = obj.value
						
						$.getJSON(urlPreparacao,{ method: "ArmProfissionalParcial", pCodProfissional: pCodProfissional, pDados: JSON.stringify(dados)});
					},
					scrollingEnabled: 1, showColonAfterLabel: 0, height	:function() { return window.innerHeight - 150; },
					screenByWidth: function(width) { return "lg"; }, colCount: 2, items	: [
						{colCount: 2, itemType: "group", cssClass: "second-group", caption: "Informações", 
						items: [
							{dataField: "status", isRequired: bloqAbaRH, editorType: "dxSelectBox",label: {text:"Situação:", alignment: "right"},editorType: "dxSelectBox",
								editorOptions: { dataSource: new DevExpress.data.DataSource({ store: new DevExpress.data.CustomStore({
									loadMode: "raw", load: function() { return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"RHSTATUS"});}
								})}), searchEnabled: true, valueExpr: "Codigo",  displayExpr: "Descricao",}
							},{},
							{dataField: "contratacao", label: { text: "Contratação:", alignment: "right" },editorType: "dxSelectBox",
								editorOptions: { dataSource: new DevExpress.data.DataSource({ store: new DevExpress.data.CustomStore({
									loadMode: "raw", load: function() { return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"RHTIPOCONTRATACAO"});}
								})}), searchEnabled: true, valueExpr: "Codigo",  displayExpr: "Descricao",}
							},
							{dataField: "empresaContratacao", label: { text: "Empresa:", alignment: "right" }, editorType: "dxSelectBox",
								editorOptions: { dataSource: new DevExpress.data.DataSource({ store: new DevExpress.data.CustomStore({
									loadMode: "raw", load: function() { return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"RHEMPRESA"});}
								})}), searchEnabled: true, valueExpr: "Codigo",  displayExpr: "Descricao",}
							},
							{dataField: "dataContratacao", editorType: "dxDateBox", label: { text: "Contratação:", alignment: "right" },
								editorOptions: { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd"}
							},
							{dataField: "dataTerminoContratacao", editorType: "dxDateBox", label: { text: "Término Contratação:", alignment: "right"},
								editorOptions: { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd"}
							},
							{colSpan: 2, dataField: "observacao", label: { text:"Observação:", alignment: "right" }, editorType: "dxTextArea",
								editorOptions: { height: 120}
							},
							{colSpan: 2, dataField: "usuarioAlphalinc",label: {text:"Usuário Alphalinc:",alignment: "right"},
								editorType: "dxSelectBox", editorOptions: {dataSource: new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({ loadMode: "raw",load: function() {
										return $.getJSON(urlSearch,{method:"GetWWW013"});}
									})
								}), searchEnabled: true,valueExpr: "Codigo", displayExpr: "Name", buttons: ["dropDown", {
      						name: 'addUsuario', location: 'after', options: { icon: 'add', type: 'default',
        						onClick: function() {
          						$.getJSON(urlPreparacao,{ method: "ChecUsuarioModelo", pUsuario: "MODELORH"}, function(objRetorno){
	          						if (objRetorno.status == 0) {
		          						DevExpress.ui.notify(objRetorno.mensagem,"warning");
		          						return;
	          						}
	          						$("#addUsuario").dxPopup("instance").show();
	          						objFormAddUsuario = $("#divFormAddUsuario").dxForm("instance");
	          						objFormAddUsuario.getEditor("addUsuarioSenha").option("value", objRetorno.senha);
	          						objFormAddUsuario.getEditor("addUsuarioNome").option("value", objPessoal.getEditor("nome").option("value"));
	          					});
        						},
      						}
      					}]}
							},{
								template: function(data, itemElement){ 
									var xHeight = window.innerHeight - 492; 
									if (xHeight < 0) xHeight = 0;
									itemElement.append("<div style='height:"+xHeight+"px;'>&nbsp;</div>");
								}
							}						
						]},
						{itemType: "group", cssClass: "second-group", caption: "Habilidades", items: [
							{template: function(data, itemElement){ itemElement.append("<div id='divHabilidades' style='width:98%'>"); }}
						]}
					]}
				).dxForm("instance");		

				dSHabilidades = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
			  		load: function() {
				  		return $.getJSON(urlPreparacao,{ method: "ListHabilidadesRH"});
			  		},
			    	insert: function (values) {
				  		$.ajaxSetup({async: true});
							$.get(urlPreparacao,{ method: "SetHabilidadesRH", pSequencia: "", pObjeto: JSON.stringify(values)});
							$.ajaxSetup({async: false});
			    	},
			    	update: function (key, values) {
				  		$.ajaxSetup({async: true});
							$.get(urlPreparacao,{ method: "SetHabilidadesRH", pSequencia: key.sequencia, pObjeto: JSON.stringify(values)});
							$.ajaxSetup({async: false});
			    	},									    	
		  		}),
				});

				$("#divHabilidades").dxDataGrid({
					dataSource: dSHabilidades,
					columns: [
						{	dataField: "categoria", caption: "Categoria", alignment: "left", width: 150, groupIndex: 0, lookup: {
	           	dataSource: dSLookupTpHabil, valueExpr: "Codigo", displayExpr: "Descricao"},
	           	validationRules: [{ type: 'required' }]
						},
						{	dataField: "pacote", caption: "Grupo", alignment: "left", minWidth: 150},
						{	dataField: "descricao", caption: "Descrição", alignment: "left", minWidth: 200},
						{	dataField: "desativado", caption: "Desativado?", dataType: "boolean", width: 80},
					],
					columnChooser: { enabled: false, mode: "dragAndDrop"},
					allowColumnReordering: false,
					editing: { 
						mode: "popup", allowAdding: true, allowUpdating: true, allowDeleting: false, useIcons: true,
	          popup: {
	            title: 'Cadastro de Habilidade',
	            showTitle: true, width: 600, height: 170,
	          }
          },
					columnAutoWidth: false,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					hoverStateEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: false },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					height: function() { 
						var xHeight = window.innerHeight - 218; 
						if (xHeight < 274) xHeight = 274;
						return xHeight
					},
	        onToolbarPreparing: function(e){
						var objGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fas fa-file-import", hint: "Importar", stylingMode : "contained",
								onClick	: function(){
									importarArquivo('050', "dSHabilidades.reload()");
								}
							}
						},{
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-compress",
								hint: "Recolher",
								onClick: function(e) {
									var expanding = e.component.option("icon") === "fa fa-expand";
									if (expanding){
										$("#divHabilidades").dxDataGrid("instance").expandAll();
									}else{
										$("#divHabilidades").dxDataGrid("instance").collapseAll();	
									}
									e.component.option("hint", expanding ? "Recolher" : "Expandir");
									e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
								}
							}
						});
	        },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					paging: { enabled:false },
				});	

				///Auditoria
				objControle = $("#divControle").dxForm({
					activeStateEnabled:true,
					formData: {},
					scrollingEnabled	: true,
					height	:function() {
						return window.innerHeight - 150;
					},
					items: [
						{itemType: "group", colCount: 2, items:[
							{dataField: "criadoPor", label: { alignment: "right" }, editorOptions: { readOnly: 1}},
							{dataField: "criadoEm", label: { alignment: "right" }, editorOptions: { readOnly: 1}},
							{dataField: "alteradoPor", label: { alignment: "right" }, editorOptions: { readOnly: 1}},
							{dataField: "alteradoEm", label: { alignment: "right" }, editorOptions: { readOnly: 1}},
						]
					}]
				}).dxForm("instance");
				
				dataSourceProfissional = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						byKey: function(args) {
							return $.getJSON(urlPreparacao,{ method: "ListProfissional", pCodProfissional: args});
						},
						load: function(args) {
							return $.getJSON(urlPreparacao,{ method: "ListProfissional", pSkip: args.skip, pTake: args.take, pSearchValue: args.searchValue});
						}
					})
				});	
					
				objProfissional = $("#divProfissional").dxSelectBox({
					dataSource: dataSourceProfissional,
					placeholder: "+",
					searchEnabled: true,
					valueExpr: "Codigo", 
					displayExpr: "Nome",
					showClearButton: true,
					onValueChanged: function(e) {
						if (!e.value) {
							$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 0)
							objPessoal.resetValues();
							//
							objOutras.option("disabled", true);
							$("#divIdioma").dxDataGrid("instance").getDataSource().reload();
							$("#divFormacao").dxDataGrid("instance").getDataSource().reload();
							//							
							objHabDesenv.option("disabled", true);
							$("#divTecnologia").dxDataGrid("instance").getDataSource().reload()
							$("#divFerramentas").dxDataGrid("instance").getDataSource().reload()
							//
							objHabInfra.option("disabled", true);
							$("#divInfraestrutura").dxDataGrid("instance").getDataSource().reload()
							$("#divArquitetura").dxDataGrid("instance").getDataSource().reload()
							//
							objHabFuncional.option("disabled", true);
							$("#divDemaisGestaoMetodologia").dxDataGrid("instance").getDataSource().reload()
							$("#divConhecimentoNegocios").dxDataGrid("instance").getDataSource().reload()
							$("#divSoftware").dxDataGrid("instance").getDataSource().reload()
							//
							if (bloqAbaRH == 1) {
								objRH.resetValues();
								dSHabilidades.reload();
							}
							//
							objControle.resetValues();
							
						}else{
							carregarDados(e.value);
						}
					}
				}).dxSelectBox("instance");	

				loadPanel.hide();
				
				if(window.frameElement.id != "formFrame" && YBED != "JULIO" && YBED != "PATRICIA"){
					objAlert.show();
				}
				
				
				//DevExpress.ui.notify("Por favor, confira os dados preenchidos, atualize se necessário e complemente com as demais informações.","warning");
				
				
			}


			function carregarDados(pCodProfissional) {
				$.getJSON(urlPreparacao, {method:	"GetProfissional", pCodProfissional: pCodProfissional},function(objRetorno){
					//
					objPessoal.option("formData", objRetorno.objPessoal);
					//
					objOutras.option("disabled", false);
					$("#divIdioma").dxDataGrid("instance").getDataSource().reload()
					$("#divFormacao").dxDataGrid("instance").getDataSource().reload()
					//							
					objHabDesenv.option("disabled", false);
					$("#divTecnologia").dxDataGrid("instance").getDataSource().reload()
					$("#divFerramentas").dxDataGrid("instance").getDataSource().reload()
					//
					objHabInfra.option("disabled", false);
					$("#divInfraestrutura").dxDataGrid("instance").getDataSource().reload()
					$("#divArquitetura").dxDataGrid("instance").getDataSource().reload()
					//
					objHabFuncional.option("disabled", false);
					$("#divDemaisGestaoMetodologia").dxDataGrid("instance").getDataSource().reload()
					$("#divConhecimentoNegocios").dxDataGrid("instance").getDataSource().reload()
					$("#divSoftware").dxDataGrid("instance").getDataSource().reload()					
					//
					if (bloqAbaRH == 1) {
						objRH.option("formData", objRetorno.objRH)
						dSHabilidades.reload();
					}
					//
					objControle.option("formData", objRetorno.objAuditoria);
				});
			}	
				

			$(document).ready(function () {
				if (!bloqAbaRH) {
					setTimeout(function(){
						montaTela();
						$.getJSON(urlPreparacao,{ method: "ListProfissional", pSkip: 0, pTake: ""}, function(objRetorno){
							if (objRetorno.length == 1) {
								objProfissional.option("value", objRetorno[0].Codigo);
							}
						});
					}, 200);	
				}else{
					setTimeout(function(){
						montaTela();
					}, 200);	
				}
			});

			function validarCPF(pCPF){
				var Soma;
				var Resto;
				Soma = 0;
			  if (pCPF == "00000000000") return false;
				for (i=1; i<=9; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (11 - i);
				Resto = (Soma * 10) % 11;
				if ((Resto == 10) || (Resto == 11))  Resto = 0;
				if (Resto != parseInt(pCPF.substring(9, 10)) ) return false;
	 	 		Soma = 0;
    		for (i = 1; i <= 10; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (12 - i);
    		Resto = (Soma * 10) % 11;
		    if ((Resto == 10) || (Resto == 11))  Resto = 0;
		    if (Resto != parseInt(pCPF.substring(10, 11) ) ) return false;
		    return true;
			}
			
			function validarCNPJ(pCNPJ) {
				pCNPJ = pCNPJ.replace(/[^\d]+/g,'');
				if(pCNPJ == "") return false;
				if (pCNPJ.length != 14) return false;

				// Elimina CNPJs invalidos conhecidos
				if (pCNPJ == "00000000000000" || pCNPJ == "11111111111111" || pCNPJ == "22222222222222" || 
						pCNPJ == "33333333333333" || pCNPJ == "44444444444444" || pCNPJ == "55555555555555" || 
						pCNPJ == "66666666666666" || pCNPJ == "77777777777777" || pCNPJ == "88888888888888" || 
						pCNPJ == "99999999999999"
					) {
							return false;
					}

				// Valida DVs
				tamanho = pCNPJ.length - 2
				numeros = pCNPJ.substring(0,tamanho);
				digitos = pCNPJ.substring(tamanho);
				soma = 0;
				pos = tamanho - 7;
				for (i = tamanho; i >= 1; i--) {
					soma += numeros.charAt(tamanho - i) * pos--;
					if (pos < 2) pos = 9;
				}
				resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
				if (resultado != digitos.charAt(0)) return false;
				tamanho = tamanho + 1;
				numeros = pCNPJ.substring(0,tamanho);
				soma = 0;
				pos = tamanho - 7;
				for (i = tamanho; i >= 1; i--) {
					soma += numeros.charAt(tamanho - i) * pos--;
					if (pos < 2) pos = 9;
				}
				resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
				if (resultado != digitos.charAt(1)) return false;
				return true;
			}			

		</script>
	</body>
</html>
