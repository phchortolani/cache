<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
<script language="Cache" runat="server">
    	do ^WWWVAR
 
		set YUSER = $get(%request.Data("YUSER", 1))
		set YBED = $get(%request.Data("YBED", 1))
		set YM = $get(%request.Data("YM", 1))
		set YFORM = $Get(%request.Data("YFORM", 1))
		set YANZ = $Get(%request.Data("YANZ", 1))
		set BACKFORM = $Get(%request.Data("BACKFORM", 1))
		

		set YLOCATION = $get(%request.Data("YLOCATION", 1))
		set READONLY = $get(%request.Data("RO", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
		set PageName = %request.PageName
		set app = %request.Application
		set host = %request.CgiEnvs("HTTP_HOST")
		set url = "http://"_host_app

		set URLLogin = "COMLogin.cls"
		set URLLink = "www.cls"
		
		
		Set URLSearch = "VAR.CSP.VARManual.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1&YFORM="_YFORM_"&YANZ="_YANZ

		set nomeLocal = YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)


</script>


<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" type="text/css" href="#(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">

    <!-- Font Awesome -->
    <link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

    <!-- Custom Elements -->
    <link href="#(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
    <link href="#(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
    <link href="#(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
    <!-- <link href="#(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" /> -->


    <script src="#(YGIF)#global\plugins\extremeQuill\22.1.3\3.5.1\jquery.min.js"></script>
    <link href="#(YGIF)#global/css/themes/22.1.3/dx.light.css" rel="stylesheet" type="text/css" />
    <script src="#(YGIF)#global\plugins\extremeQuill\22.1.3\dx-quill.min.js"></script>
    <script src="#(YGIF)#global\plugins\extremeQuill\22.1.3\dx.all.js"></script>

    <link href="#(YGIF)#global/css/manualStyle.css" rel="stylesheet" type="text/css" />
    <title> Manual #(YFORM)# </title>

</head>

<body>


    <div id="popup">
        <div class="value-content"></div>
    </div>
    
    <div id="popupInstanceForm">
      <div id="value-content-form"></div>
    </div>


    <div id="fullContent">
        <div class="cardInfo">
            <div>
            	<div id="backBtn" class="display-none">
            		<button class="btn btn-default" onclick="openExternalLink('#(BACKFORM)#')"><i class="fa fa-arrow-left"></i> Voltar</button>
           
            	</div>
           
                <div class="d-flex spacebetween">
                    <div class="d-flex">
                        <h3 id="MenuDescription" class="text-primary"></h3>
                        <span class="smallInfo">(#(YFORM)#)</span>
                    </div>

                    <div>
                        <button onclick="printPageArea('fullContent')" class="btn btn-default">
                        	Imprimir <i class="fa fa-print"></i>
                        </button>
                    </div>
                </div>
                <div id="principalDiv" class="spaceBetween d-flex ">
                    <div id="principalDesc" style="max-width: 100%; overflow: hidden;"></div>
                    <div id="btnsPrincipalDivs" class="text-align-reverse spaceBetween">
                        <button id='confirmEdit_Principal' onclick="Save(1,120)" type='button'class='confirmEdit display-none'>
                        	<i class='fa fa-check-square'></i>
                        </button>
                        <button id='customBtn_Principal' onclick="openEditorPrincial()" type='button' class='customBtn display-none'>
                        	<i class='fa fa-edit '></i>
                        </button>
                        <button id='customHidden_Principal' type='button' onclick="hiddenField('','','120')" class='customBtn display-none'>
                        	<i id='hiddenIco_Principal' class='fa fa-toggle-on '></i>
                        </button>
                    </div>

                    <div id='editor_Principal' class='collapse'></div>

                </div>


            </div>
            <hr />
            <div>
                <h4 class="text-primary">Acesso</h4>
                <div class="d-flex">
                    <p id="path"></p> <span id="MenuItemNumber" class="smallInfo"></span>
                </div>

            </div>
            <hr />
            <div id="fieldFormFrame">
                <h4 class="text-primary">Menu</h4>
                <iframe id="formFrame" src="www.cls?EP=WWWFORM&YFORM=#(YFORM)#&YUCI=#(YUCI)#&YBED=#(YBED)#&YM=0&YUSER=#(YUSER)#&YPARA=#(YPARA)#&YANZ=#(YANZ)#&YNAME=#(YNAME)#&YLOCKKILL=#(YLOCKKILL)#" class="FrameOff" name="formFrame"></iframe>
                <hr />
            </div>

            <div id="fieldIdFields" class="card display-none">
                <div>
                    <div class="d-flex">
                        <h4 class="text-primary">Campos Principais </h4> <span class="smallInfo">(IDs)</span>
                    </div>

                    <div id="renderPropId" />
                </div>

            </div>
        </div>
        <hr />
        <div id="fieldFields" class="card display-none">
            <h4 class="text-primary">Demais Campos </h4>
            <div id="fields"></div>
            <hr />
        </div>

        <div id="fieldManualPropsList" class="display-none">
            <h4 class="text-primary">Anotações </h4>
            <div id="addNewFields" class="closeaddNewFields">
                <div id="manualPropsList"></div>
            </div>
            <button id="btn_addNewField" onclick="collapseAba('addNewField')"
                class="btn btn-lg btn-block bg-hover-blue-sharp display-none  text-primary btn-default margin-bottom-10">
                Adicionar anotação
                <i id="fav_addNewField" class="fas fa-angle-down fa-plus-circle "></i></button>
            </button>
            <div id="aba_addNewField" class="collapse">
                <h3 class="text-primary">Adicionar</h3>
                <hr />
                <h5>Os campos que forem adicionados abaixo serão armazenados na sessão: <b>Anotações</b>.</h5>
                <div class="text-align-reverse">
                    <button id='confirmEdit_addNewFields' onclick="Save(0,'CustomManual')" type='button'
                        class='confirmEdit'><i class='fa fa-check-square'></i></button>
                    <button id='customBtn_addNewFields' onclick="collapseAba('addNewField')" type='button'
                        class='customBtn'><i class='fa fa-window-close text-danger closeHover '></i></button>
                </div>
                <div id="form" class="d-grid"></div>
                <br />
                <div id="editor_addNewField"></div>
            </div>
        </div>
        <hr />
        <div id="fieldGrid" class="card">
            <div>
                <h4 class="text-primary">Grid</h4>
                <div id="grids"></div>
            </div>
            <hr />
        </div>

        <div id="fieldButtons" class="card display-none">
            <div>
                <h4 class="text-primary">Botões</h4>
                <div id="buttons"></div>

            </div>
        </div>

    </div>

    <script type="text/javascript">
        var urlSearch = "#(URLSearch)#";
        var HasBackForm = "#(BACKFORM)#";
        var htmlEditorValue = "";
        var editor_addNewFields;
        var PropsList;
        var actionButtonsActive;
        var gridcount = 0;
        var anexos = []
        var resMenu = []
        var AllowedMenus = []
        var HtmlgeneratedArray = [545450];
        var lastIdEditorOpen = ""
        var lastMarkupOpen = ""
        var YFORM = "#(YFORM)#"
        var YUSER = "#(YUSER)#"  
        var YBED = "#(YBED)#" 
        

        $(function () {
            var editorInstance;
            var popupInstance;
            var popupInstanceForm;
            gambisWidth();
            editor_addNewFields = $("#form").dxForm({
                labelMode: 'floating',
                items: [
                    {
                        dataField: "Titulo"
                    },
                ],
            }).dxForm('instance');

            edit("#editor_addNewField", "")

        });

        function generateListAnexosHTML() {

            return anexos.map(function (e, i) {

                return "<div style='max-width: 100%;  padding: 0 20px;'><b>Nome</b>: " + e.image + " <br> <b>Caminho</b>: " + e.path + e.image +
                    " <button type='button' class='btn btn-sm btn-circle' onclick=\"sendToEditor('" + e.path + e.image + "')\"><i class='fa fa-file-export'></i></button>" +
                    " <button type='button' class='btn btn-sm btn-circle' onclick=\"deletePhoto('" + e.image + "')\"><i class='fa text-danger fa-trash'></i></button> <br>" +
                    "<b>Preview: </b><br> <img width='128' height='128' style='border-radius: 4px; filter: drop-shadow(4px 5px 3px gray);object-fit: cover;" +
                    "object-position: center; ' src=" + e.path + e.image + "></img></div><hr/>"

            })
        }

        function deletePhoto(img) {
            $.getJSON(urlSearch, { method: "deletePhoto", image: img }, function (ret) {
                var c = ret.status == 1 ? "mediumseagreen" : "red"

                DevExpress.ui.dialog.alert(
                    '<div style="text-align: center"><i style="color: ' + c + '" class="fa fa-image fa-2x"></i>' +
                    '<h2 style="color: mediumseagreen;">' + ret.msg + '</h2></div>'
                    , 'Exclusão de imagem');

                if (ret.status == 1) {
                    var index = anexos.findIndex(function (e) { return e.image == img });
                    anexos.splice(index, 1);
                    $("#listAnexos").html(generateListAnexosHTML());
                }


            })

        }

        function edit(id, markup) {

            lastIdEditorOpen = id;
            lastMarkupOpen = markup;
            editorInstance = $(id).dxHtmlEditor({
                height: 500,
                value: markup,
                imageUpload: {
                    tabs: ['url'],
                },
                toolbar: {
                    items: [
                        'undo', 'redo', 'separator',
                        {
                            name: 'header',
                            acceptedValues: [false, 1, 2, 3, 4, 5],
                        },
                        {
                            name: 'size',
                            acceptedValues: ['8pt', '10pt', '12pt', '14pt', '18pt', '24pt', '36pt'],
                        },
                        'separator', 'bold', 'italic', 'strike', 'underline', 'separator',
                        'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'separator',
                        'orderedList', 'bulletList', 'separator',
                        'color',
                        'background',
                        'separator',
                        'link',
                        'separator',
                        'clear',
                        'codeBlock',
                        'image',
                        {
                            widget: 'dxButton',
                            options: {
                                icon: 'activefolder',
                                text: 'Carregar imagem...',
                                stylingMode: 'text',
                                onClick: function () {
                                    popupInstance.show();
                                    
                                },
                            },
                        },
                          {
                            widget: 'dxButton',
                            options: {
                                icon: 'activefolder',
                                text: 'Anexar formulário...',
                                stylingMode: 'text',
                                onClick: function () {
                                    popupInstanceForm.show();

                                },
                            },
                        },
                    ],
                },
                mediaResizing: {
                    enabled: true,
                },
                onValueChanged: function (e) {
                    htmlEditorValue = e
                    lastMarkupOpen = e.value
                 
                }

            }).dxHtmlEditor('instance');
            
            	
			 popupInstanceForm = $('#popupInstanceForm').dxPopup(
			 
			 {
                showTitle: true,
                width: window.innerWidth - 200,
                height: 500,
                title: 'Anexar Formulário',
                onShowing: function () {
	                if ($('#value-content-form').children().length ==0){
		                
				 	 var groups = groupItens(AllowedMenus);
				 	 
				 	 var stgToRender = ""
				 	 
				 	 var itens = []
					 groups.forEach(function (e,i){ 
					 	
					 	 e.itens.forEach(function(ef,idx){
						 	 var menu = ef.menuDescription != "" ? ef.menuDescription : "Menu não encontrado";
						 	 if(ef.titulo == 1 || ef.form == "") return
						 	 var link = ef.link+"&BACKFORM="+YFORM
						 	itens.push(
						 		{
							 	btn: "<button type='button' class='btn btn-default margin-bottom-10 d-flex spacebetween' "+
							 	"onclick=\"sendToEditorLink('"+link+"', '"+menu+"')\"><img class='margin-right-10' src=\""+ef.img+"\"></img>"+menu+
							 	" <i style='margin-left: 10px;' class='fa fa-link text-default'></i> </button>",
						 	 	grupo:e.id
						 	 	}
						 	 )
						 	
						 })	
	                    stgToRender += "<div><h4>"+e.name+"</h4><div id='group_"+e.id+"' style='justify-items: baseline;' class='d-grid'></div></div>"
	                  })
	                  
					 $('#value-content-form').html(stgToRender);
                      
                    itens.forEach(function(e,i){
	                    $("#group_"+e.grupo).append(e.btn)
	                    
	                 })
					  $("#value-content-form").dxScrollView({width: '100%', height: '100%'});
					
                }
                },

            }
			 
			 ).dxPopup('instance');
			 
			 
			  
			 
			 
			 
	 function groupItens(data){
	
		 var tempTitulo =0
		 var groups = []
		 var arrayWithGroup = data.map(function(e,i){
		 if(e.titulo == 1){
			
			tempTitulo++
			groups.push({id:tempTitulo, name:e.menuDescription})
			}
			e.group = tempTitulo
			return e
					 
			})
			var groups = groups.map(function(e,i){
				
				var filtered = arrayWithGroup.filter(function(fe,fi){
				return fe.group == e.id && fe.titulo == 0	
				})
				

				e.itens = filtered
				
				return e
				
			})
			
			return groups		 
	}

            popupInstance = $('#popup').dxPopup({
                showTitle: true,
                width: window.innerWidth - 200,
                height: 500,
                title: 'Upload de imagem',
                onShowing: function () {

                    $('.value-content').html(
                        "<div id='fileuploader-container'>" +
                        "<div id='file-uploader'></div>" +
                        "<div id='listAnexos''></div><hr/>" +
                        "</div>"

                    );

					    
	                  
                    var pAnexos = generateListAnexosHTML()
                    $("#listAnexos").html(pAnexos)
                    
                    $("#listAnexos").dxScrollView({
        					width: '100%',
        					height: '100%',
      					})

                    var fileUploader = $('#file-uploader').dxFileUploader({
                        multiple: true,
                        accept: '*',
                        value: [],
                        selectButtonText: "Selecione a imagem",
                        labelText: "ou arraste ela aqui",
                        readyToUploadMessage: "Preparado para fazer o upload",
                        uploadMode: "useButtons",
                        uploadUrl: urlSearch + "&method=uploadPhoto",
                        allowedFileExtensions: ['.jpg', '.jpeg', '.gif', '.png'],
                        maxFileSize: 4000000,
                        onValueChanged: function (e) {
                            var files = e.value;
                            if (files.length > 0) {
                                $('#selected-files .selected-item').remove();

                                $.each(files, function (i, file) {

                                    var $selectedItem = $('<div />').addClass('selected-item');
                                    $selectedItem.append(
                                        $('<span />').html("Name: " + file.name + "<br/>"),
                                        $('<span />').html("Size " + file.size + " bytes<br/>")
                                    );
                                    $selectedItem.appendTo($('#selected-files'));
                                });
                                $('#selected-files').show();
                            } else {
                                $('#selected-files').hide();
                            }
                        },
                        onUploaded: function (e) {
                            var ret = JSON.parse(e.request.responseText);

                            if (ret.status == 1) {

                                anexos.push({ image: ret.image, path: ret.path });
                                $("#listAnexos").html(generateListAnexosHTML());
    							DevExpress.ui.dialog.alert(
                                    '<div style="text-align: center"><i style="color: mediumseagreen;" class="fa fa-image fa-2x"></i>' +
                                    '<h2 style="color: mediumseagreen;">Upload realizado com sucesso</h2>'
                                    , 'Caminho da imagem');
                                sendToEditor(ret.path + ret.image)
                                popupInstance.hide();

                            } else if (ret.status == 2) {
                                   DevExpress.ui.dialog.alert(
                                    '<div style="text-align: center"><i class="fa fa-image fa-2x"></i><h2>Imagem já existente</h2> Selecione em carregar imagem <b>' + ret.path + ret.image + '</b></div>'
                                    , 'Caminho da imagem');
                                popupInstance.hide();

                            } else {
                                DevExpress.ui.dialog.alert('Upload não realizado', 'OK');

                            }

                        }
                    }).dxFileUploader('instance');

                    $("#fileuploader-container").css("display", "grid")
                    $("#fileuploader-container").css("height", "100%")
                    $("#fileuploader-container").css("place-content", "center")
                    $("#fileuploader-container").css("align-content", "space-between")
                    $("#file-uploader").css("margin-bottom", "10px")
                    $("#file-uploader").css("border", "#c4cfff dotted 4px")
                    $("#file-uploader").css("padding", "10px")


                },

            }).dxPopup('instance');



        }

        function sendToEditor(src) {
            var img = "<img src=\'" + src + "'\></img>"
            edit(lastIdEditorOpen, lastMarkupOpen + img)
            popupInstance.hide()
        }
           function sendToEditorLink(link,name) {
            var LINK = "<a rel='noopener noreferrer' href=\'" + link + "'\>"+name+"</a>"
            edit(lastIdEditorOpen, lastMarkupOpen + LINK)
            popupInstanceForm.hide()
        }

        function gambisWidth() {

            var popup = $(".dx-popup-normal");
            if (popup != null) {

                $(".dx-popup-normal").css("transform", "translate(0px, 0px)")
                $(".dx-texteditor-container").removeClass("dx-texteditor-container")
                $(".dx-icon-imgarlock").addClass("dx-icon-key")
                $(".dx-icon-key").removeClass("dx-icon-imgarlock ")

            }

            setTimeout(function () { gambisWidth() }, 500)


        }
        
         function getAllowedRels(){
	            
	              $.getJSON(urlSearch, { method: "getAllRels" }, function (ret) {
		          
		         
		 		if(typeof ret.data != typeof undefined && typeof ret.data != null && ret.data.length > 0){
			 		 
			 		 if(ret.status == 1){
				 		 
				 	 AllowedMenus = ret.data
				 	 resMenu = ret.data.map(function(e){return e.menuDescription})
				 	 
				 	 getRel();
					
				 	} else {
						 alert(ret.data.msg) 
						}
			 		
		   			}
		 
					})
	            
	          }


        function getRel() {
	        
	        if(HasBackForm.length > 0){
		       	 	$("#backBtn").removeClass("display-none")
		       	 if(HasBackForm == YFORM){
			       	 $("#backBtn").addClass("display-none")
			       }
		      }

            $.getJSON(urlSearch, { method: "getRel" }, function (data) {

                $("#MenuDescription").text(data.MenuDescription != "" ? data.MenuDescription: YFORM);
                $("#path").text(data.path);
                $("#path").text($("#path").text().replaceAll(",", " > "));
                $("#MenuItemNumber").text(data.MenuItemNumber);
                actionButtonsActive = data.Adm;
                anexos = data.anexos;
				
				if (data.principalDescription == ""){
					data.principalDescription = "Nenhuma descrição foi informada para este campo"
					}

                if (data.principalDesativeHelpManual == "1" && data.Adm == 1) {
                    $("#principalDesc").html(data.principalDescription);
                    $("#hiddenIco_Principal").toggleClass("fa-toggle-on fa-toggle-off")
                    $("#principalDesc").addClass("disable-target disabled-link")
                    $("#customBtn_Principal").addClass("display-none")
                    $("#customHidden_Principal").removeClass("display-none")

                } else if (data.principalDesativeHelpManual == "1" && data.Adm == 0) {
                    $("#principalDesc").html("");
                } else {
                    if (data.Adm == 1) {
                        $("#customHidden_Principal,#customBtn_Principal,#btn_addNewField").removeClass("display-none")
                    }
                    $("#principalDesc").html(data.principalDescription);
                }


                //Gera o html do elemento em que ficará as propriedades
                //props do ID
                var idsHTML = generateArrayHtml(data.ids);
                $("#renderPropId").html(idsHTML);

                if (data.ids != null && data.ids.length > 0) {
                    $("#fieldIdFields").removeClass("display-none")

                }
                //props das abas
                if (data.tabs != null && data.tabs.length > 0) {

                    var tabsHTML = generateArrayAbaHTML(data.tabs, actionButtonsActive);
                    $("#fieldFields").removeClass("display-none");
                    $("#fields").html(tabsHTML);


                    //filtra os campos de acordo com suas abas
                    data.tabs.forEach(function (tab) {

                        //filtra de acordo com a aba
                        var filterFields = data.fields.filter(function (e) {
                            return e.tab == tab.id
                        })


                        if (data.idsGroups != null && data.idsGroups.length > 0) {
                            var activesGroups = []

                            filterFields = filterFields.map(function (e) {

                                var grupo = data.idsGroups.find(function (g) {
                                    return g.FieldNumber === e.id
                                })

                                if ((typeof grupo != typeof undefined) && (grupo.GroupName.trim() != "")) {
                                    e.grupo = grupo.GroupName
                                } else {
                                    e.grupo = "Sem agrupamento";
                                }

                                activesGroups.push(e.grupo)

                                return e;

                            })

                            var activesGroups = activesGroups.filter(function (este, i) {
                                return activesGroups.indexOf(este) === i;
                            });

                            activesGroups.forEach(function (grupoName) {

                                var groupedFields = filterFields.filter(function (f) {
                                    return f.grupo == grupoName
                                });
                                var fieldRet = generateArrayHtml(groupedFields);


                                var gruposRet = generateArrayGruposHTML(grupoName, tab.id)

                                $("#tab_" + tab.id).append(gruposRet);

                                var grp = grupoName.replaceAll(" ", "_").replaceAll(/[^a-zA-Zs]/g, "");

                                $("#tab_" + tab.id + "_grupo_" + grp).html(fieldRet);


                                //se não tiver filhos oculta.
                                if ($("#tab_" + tab.id + "_grupo_" + grp).children().length == 0) {
                                    $("#lbl_tab_" + tab.id + "_grupo_" + grp).addClass("display-none")
                                }

                            })



                        } else {

                            var fieldRet = generateArrayHtml(filterFields);
                            $("#tab_" + tab.id).html(fieldRet);
                        }
                    })
                } else if (data.fields != null && data.fields.length > 0) {
                    $("#fieldFields").removeClass("display-none");
                    var fieldsNoTab = generateArrayHtml(data.fields)
                    $("#fields").html(fieldsNoTab)

                }


                if (data.buttons.length > 0) {
                    $("#fieldButtons").removeClass("display-none");
                    var buttonsHTML = generateArrayHtml(data.buttons)
                    $("#buttons").html(buttonsHTML);
                }


                if (data.manualPropsList.length > 0 || data.Adm == 1) {
                    $("#fieldManualPropsList").removeClass("display-none");
                    PropsList = data.manualPropsList
                    var manualPropsListHTML = generateArrayHtml(data.manualPropsList)
                    $("#manualPropsList").html(manualPropsListHTML);

                }

   			getGrid();
   			
   		document.querySelectorAll("a").forEach(function(e){
      		var YUSERAntigo = e.href.split('?')[1].split("&")[1]
      		var YBEDAntigo = e.href.split('?')[1].split("&")[0]
     		e.href = e.href.replace(YUSERAntigo,"YUSER="+YUSER)
     		e.href = e.href.replace(YBEDAntigo,"YBED="+YBED)
     		if(!resMenu.some(function(ef){ return ef == e.innerHTML})){
	     		e.classList = "text-muted";
	     		e.style = "cursor: not-allowed;pointer-events:none";
	     		if(!e.innerText.endsWith("não tem permissão neste menu)")){
		     		e.innerHTML +=  "<span class='text-danger'> - (Usuário " + YBED + " não tem permissão neste menu</b>)</span>"
		     	}
	     	}
		})
            }); // fim da chamada

        }



        function generateArrayHtml(itens, FormChildrenGrid) {


            var iCount = Number(HtmlgeneratedArray.at(-1))
            HtmlgeneratedArray.push(iCount + 1);

            var adm = actionButtonsActive;

            var propsIdsHtml = itens.map(function (e, i) {
                var borderColor = "border-left-blue-sharp";

                var required = ""
                var showDeleteBtn = false;

                if (typeof e.ButtonNumber != typeof undefined) {
                    e.id = e.ButtonNumber
                }
                if (typeof e.idManualProps != typeof undefined) {
                    e.id = e.idManualProps
                    if (adm == 1) {
                        showDeleteBtn = true;
                    }
                }

                if (e.IsRequired == 1) {
                    required = " - Obrigatório"
                    borderColor = "border-left-red";
                }
                var msgOfNull = "Nenhum texto de ajuda foi adicionado a este campo."
                 if (typeof e.PropIDDescription == typeof undefined || e.PropIDDescription == "") {
                    	e.PropIDDescription = msgOfNull
                	}
                	
                	
                if(typeof e.OldHelp != typeof undefined && e.OldHelp != ""){
	                
					if(e.PropIDDescription == msgOfNull){
					e.PropIDDescription = e.OldHelp.replaceAll("{YGIF}",#(YGIF)#)	
						
					}
					
	              
	               }
               
               	

                var size = "";
                if (e.InputSize != "") {
                    size = " - Tamanho Máximo: " + e.InputSize;
                }
                
                var defaultVariable = "";
                if (e.defaultVariable != null && e.defaultVariable != "") {
                    if (e.InputType == "Sim/Não") {
                        e.defaultVariable = e.defaultVariable == 1 ? "Sim" : "Não";
                    }
                    defaultVariable = " - Valor Padrão: " + e.defaultVariable
                }
                var actionbuttons = "";


                e.id = HtmlgeneratedArray.at(-1) + e.id;

                if (adm == 1) {
                    if (typeof FormChildrenGrid != typeof undefined) {
                        actionbuttons = "<button id='confirmEdit_" + e.id + "' type='button' onclick=\"SaveGrid(" + e.id + ",'" + FormChildrenGrid + "','" + e.globalEditPath + "')\" class='confirmEdit display-none'><i class='fa fa-check-square'></i></button>" +
                            "<button id='customBtn_" + e.id + "' type='button' onclick='openEditor(" + e.id + "," + e.globalEditPath + ")' class='customBtn CLS_ACTIVE_ITEM_22'><i class='fa fa-edit '></i></button>";
                    } else {
                        actionbuttons = "<button id='confirmEdit_" + e.id + "' type='button' onclick='Save(" + e.id + "," + e.globalEditPath + ")' class='confirmEdit display-none'><i class='fa fa-check-square'></i></button>" +
                            "<button id='customBtn_" + e.id + "' type='button' onclick='openEditor(" + e.id + "," + e.globalEditPath + ")' class='customBtn CLS_ACTIVE_ITEM_22'><i class='fa fa-edit '></i></button>";

                        if (showDeleteBtn) {
                            actionbuttons += "<button  onclick='deleteCustomManual(" + e.idManualProps + ")' class='customBtn'><i class='fa fa-trash-alt text-danger '></i></button>";

                        }
                    }
                    actionbuttons += "<button  type='button' onclick=\"hiddenField(" + e.id + ",'" + (FormChildrenGrid || "") + "','" + e.globalEditPath + "')\" class='customBtn'><i id='hiddenIco_" + e.id + "' class='fa fa-toggle-on '></i></button>";
					
                }
                
                if(typeof  e.RelationClass != typeof undefined && e.RelationClass != "" && e.RelationClass != YFORM){
	                	var checkSome = AllowedMenus.find(function(ele){return e.RelationClass == ele.form})
	                	
	                	console.log(checkSome)
	                	if(typeof checkSome != typeof undefined){
		                	actionbuttons +="<button title='"+e.RelationClass+"' type='button' onclick=\"openExternalLink('"+e.RelationClass+"')\"  class='customBtn'><i class='fa fa-external-link'></i></button>"
		                }
	                	

	             }
                
			

                if (e.hiddenField == 0) {

                    var ElementoRetorno = "<blockquote id='field_" + e.id + "' class='" + borderColor + " cardProp CLS_ACTIVE_ITEM_23 '><div class='spaceBetween'><b class='text-primary'>"
                        + e.NameTranslate +
                        "<span class='smallInfo'>("
                        + e.InputType
                        + size
                        + defaultVariable +
                        "<b class='text-danger'>" + required + "</b>)</span>"+
                         (typeof e.src == typeof "" 
                         && e.src.length > 0 
                         && (e.src.endsWith(".gif") 
                         || e.src.endsWith(".png")
                         || e.src.endsWith(".jpg") 
                         )
                         ? "<img src="+e.src+"></img>" :  "")
                       + "</b>" +
                        "<div>" +
                        actionbuttons +
                        "</div>" +
                        "</div>" +
                        "<div id='PropIDDescription_" + e.id + "' style='overflow-y: hidden; max-width: 100%' class='fs-Prop fs-ShowTypeProp'>"+
                        "<hr style='margin-top:5px !important; padding-top:5px !important; margin-bottom: 2px;'/>"
                        + e.PropIDDescription +
                        "</div><div id='editor_" + e.id + "' class='collapse'></div></blockquote>"

                    if (e.InputType == "" && size == "" && defaultVariable == "" && required == "") {
                        ElementoRetorno = ElementoRetorno.replace("<span class='smallInfo'>(", "<span class='smallInfo'>")

                        ElementoRetorno = ElementoRetorno.replace("</b>)<", "</b><")


                    }



                    if (e.DesativeHelpManual == "1" && adm == 0) return ""
                    else if (e.DesativeHelpManual == "1" && adm == 1) {

                        ElementoRetorno = ElementoRetorno.replace("CLS_ACTIVE_ITEM_23", "disable-target disabled-link");
                        ElementoRetorno = ElementoRetorno.replace("CLS_ACTIVE_ITEM_22", "display-none");
                        ElementoRetorno = ElementoRetorno.replace("fa-toggle-on", "fa-toggle-off");
                        return ElementoRetorno;

                    }

                    return ElementoRetorno;

                }


            });

            return propsIdsHtml;

        }

        function SaveGrid(idTemp, form, globalPath) {
            var typeIDDescription = "#PropIDDescription_" + idTemp;


            Id = RemoveTempId(idTemp)

            if (Id > 0 && typeof form != typeof undefined && form != "" && htmlEditorValue != "" && globalPath != "") {

                $.post(urlSearch, {
                    method: "editGrid",
                    global: "WWW" + globalPath,
                    html: htmlEditorValue.value.toString(),
                    id: Id,
                    formulario: form
                },
                    function (status) {
                        if (status == 1) {

                            $(typeIDDescription).html(htmlEditorValue.value)
                            openEditor(idTemp, globalPath);
                        }

                    }, 'json')
            }

        }



        function hiddenField(idTemp, form, globalPath) {

            var Id = ""
            var typeIDDescription = "#PropIDDescription_" + idTemp; //tipo demais campos

            if (globalPath != 120) {
                Id = RemoveTempId(idTemp);
            }
            if (globalPath == 1203) { //tipo: aba
                typeIDDescription = "#TabIDDescription_" + idTemp;
            }
            if (globalPath == 120) { //tipo: Descrição principal
                typeIDDescription = "#principalDesc";
            }
            if (globalPath == 999989) {// tipo: campos incluídos via tela de manual
                globalPath = "CustomManual"
            }


            var actions = {
                blockquoteFieldChange: function () {
                    $("#hiddenIco_" + idTemp).toggleClass("fa-toggle-on fa-toggle-off")
                    $("#field_" + idTemp).toggleClass("CLS_ACTIVE_ITEM_23 disable-target disabled-link")
                    $("#customBtn_" + idTemp).toggleClass("display-none")
                },
                TabChange: function () {
                    $("#hiddenIco_tab_" + idTemp).toggleClass("fa-toggle-on fa-toggle-off")
                    $("#aba_" + idTemp).toggleClass("CLS_ACTIVE_ITEM_TAB disable-target disabled-link")

                },
                DescChange: function () {
                    $("#hiddenIco_Principal").toggleClass("fa-toggle-on fa-toggle-off")
                    $("#principalDesc").toggleClass("disable-target disabled-link")
                    $("#customBtn_Principal").toggleClass("display-none")


                },
                GridTabChange: function () {
                    $("#hiddenIco_Grid_" + idTemp).toggleClass("fa-toggle-on fa-toggle-off")
                    $("#aba_Grid_" + idTemp).toggleClass("CLS_ACTIVE_ITEM_TAB_GRID disable-target disabled-link")


                }

            }

            $.getJSON(urlSearch, { method: "hiddenField", id: Id, global: "WWW" + globalPath, formulario: form }, function (status) {
                if (status == 1) {

                    if (globalPath == 1203) {
                        return actions.TabChange();
                    }
                    if (globalPath == 120) {
                        if (idTemp != "") {
                            return actions.GridTabChange()
                        }
                        return actions.DescChange();
                    }

                    return actions.blockquoteFieldChange();

                } else {
                    window.alert("Ocorreu um erro ao ocultar");
                }

            })

        }


        function deleteCustomManual(Id) {

            $.getJSON(urlSearch, { method: "DeleteCustomManual", id: Id }, function (status) {
                if (status == 1) {
                    PropsList = PropsList.filter(function (e, i) {
                        if (Number(e.idManualProps) != Number(Id)) {
                            return e;
                        }
                    })

                    var manualPropsListHTML = generateArrayHtml(PropsList)
                    $("#manualPropsList").html(manualPropsListHTML);


                } else {

                    window.alert("Ocorreu um erro ao excluir");
                }


            })

        }


        function Save(IdTemp, globalPath) {
            var typeIDDescription = "#PropIDDescription_" + IdTemp; //tipo demais campos
            var titulo = ""
            var idCustomArrayItem = 0;
            var Id = 0;


            if (globalPath == 1203) { //tipo: aba
                typeIDDescription = "#TabIDDescription_" + IdTemp;

            }
            if (globalPath == 120) { //tipo: Descrição principal
                typeIDDescription = "#principalDesc";
            }
            if (globalPath == "CustomManual") { // tipo: campos incluídos via tela de manual
                var objFilters = editor_addNewFields.option("formData");
                titulo = objFilters.Titulo;
            }
            if (globalPath == 999989) {// tipo: campos incluídos via tela de manual
                globalPath = "CustomManual"
            }
            if (Number(IdTemp) > 0) {
                Id = RemoveTempId(IdTemp)
            }


            if (htmlEditorValue.value == "" || typeof htmlEditorValue.value == typeof undefined) htmlEditorValue.value = "Nenhum texto de ajuda foi adicionado a este campo."

            if ((titulo == "" || typeof titulo == typeof undefined) && globalPath == "CustomManual" && Id == 0) return window.alert("Preencha o título antes de salvar!")



            if (htmlEditorValue.value != "" && globalPath != "") {

                $.post(urlSearch, { method: "editField", global: "WWW" + globalPath, html: htmlEditorValue.value, id: Id, title: titulo }, function (status) {


                    if (status == 1) {
                        $(typeIDDescription).html(htmlEditorValue.value)
                        globalPath == 120 ? openEditorPrincial() : openEditor(IdTemp, globalPath);


                        if (globalPath == "CustomManual" && Id == 0) {
                            var objManualProp = new Object();

                            var lastId = PropsList.reduce(function (acumulador, valorAtual) {
                                var atual = (Number(valorAtual.idManualProps))
                                var ant = (Number(acumulador))

                                if (atual > ant) {
                                    return atual;

                                } else return ant;

                            }, "0");

                            objManualProp.EditedBy = ""
                            objManualProp.InputSize = ""
                            objManualProp.InputType = "Campo de informação"
                            objManualProp.NameTranslate = titulo
                            objManualProp.PropIDDescription = htmlEditorValue.value.toString()
                            objManualProp.globalEditPath = "999989"
                            objManualProp.hiddenField = 0
                            objManualProp.DesativeHelpManual = ""
                            var idprop = String(Number(lastId) + 1)
                            objManualProp.idManualProps = idprop
                            PropsList.push(objManualProp)
                            var manualPropsListHTML = generateArrayHtml(PropsList)
                            $("#manualPropsList").html(manualPropsListHTML);


                            collapseAba('addNewField')
                        }




                    } else {
                        window.alert("Ocorreu um erro ao alterar");
                    }

                }, 'json')

            }

        }

        function generateArrayAbaHTML(tabs, adm) {
            var tabsHtml = tabs.map(function (e, i) {
                var idTabCollapse = e.id;

                if (typeof e.tabHelpDescription == typeof undefined || e.tabHelpDescription == "") {
                    e.tabHelpDescription = "Nenhum texto de ajuda foi adicionado a esta aba."
                }

                var actionbuttons = ""
                if (adm == 1) {
                    actionbuttons = "<div>" +
                        "<button id='confirmEdit_tab_" + e.id + "' type='button' onclick='Save(" + e.id + "," + e.globalEditPath + ")' class='confirmEdit_tab display-none'><i class='fa fa-check-square'></i></button>" +
                        "<button id='customBtn_tab_" + e.id + "' type='button' onclick='openEditor(" + e.id + "," + e.globalEditPath + ")' class='customBtn_tab'><i class='fa fa-edit '></i></button>" +
                        "<button  id='customHidden_tab_" + e.id + "' type='button' onclick=\"hiddenField(" + e.id + ",'" + ("") + "','" + e.globalEditPath + "')\" class='customBtn'><i id='hiddenIco_tab_" + e.id + "' class='fa fa-toggle-on '></i></button>" +
                        "</div>"
                }

                var tabRetorno = "<button id='btn_" + idTabCollapse + "'" +
                    " onclick='collapseAba(" + idTabCollapse + ")' class='btn btn-lg btn-collapse btn-block btn-default margin-bottom-10'>Aba: "
                    + e.description +
                    " <i id='fav_" + idTabCollapse + "' class='fas fa-angle-down'></i></button>" +
                    "<div id='aba_" + idTabCollapse + "' class='Aba collapse CLS_ACTIVE_ITEM_TAB'><h4 class='text-primary'>"
                    + e.description +
                    "</h4><div class='abaItens d-flex spaceBetween'><div  id='TabIDDescription_" + e.id + "'>" + e.tabHelpDescription + "</div>"
                    + actionbuttons +
                    "</div><div id='editor_tab_" + e.id + "' class='collapse'></div><div id='tab_" + e.id + "'></div></div>"


                if (e.DesativeHelpManual == "1" && adm == 1) {
                    tabRetorno = tabRetorno.replace("CLS_ACTIVE_ITEM_TAB", "disable-target disabled-link");
                    tabRetorno = tabRetorno.replace("fa-toggle-on", "fa-toggle-off");

                    return tabRetorno;

                }

                return tabRetorno;


            })
            return tabsHtml;

        }

        function collapseAba(abaID, grid) {

            var idAba = abaID;

            if (typeof grid != typeof undefined) {
                idAba = "Grid_" + abaID
            }
            $('#fav_' + idAba).toggleClass("fa-angle-up");
            $('#aba_' + idAba).toggleClass("collapse");
            $('#btn_' + idAba).toggleClass("btn-collapseOpen");
            if (idAba == "addNewField") {
                $('#btn_' + idAba).toggleClass("collapse");
                $('#addNewField').toggleClass("close");
            }

        }

        function openEditorPrincial() {
            //Abre o editor principal da tela, este é o que edita a descrição do form

            if ($("#editor_Principal").is(".collapse")) {

                var editorHTML = "<div id='editQuill' class='bg-white'><div class='html-editor-principal'></div></div>"
                $("#editor_Principal").append(editorHTML);

                edit(".html-editor-principal", $("#principalDesc").html());
                $(".customBtn,.customBtn_tab").addClass("display-none");
                $("#customBtn_Principal").removeClass("display-none");


            } else {
                $('#editQuill').remove();
                $(".customBtn,.customBtn_tab").removeClass("display-none");
            }
            $("#btnsPrincipalDivs").toggleClass("spaceBetween")
            $("#customBtn_Principal").children().toggleClass("fa-window-close text-danger closeHover fa-edit");
            $("#principalDiv").toggleClass("d-flex spaceBetween");
            $("#editor_Principal,#principalDesc").toggleClass("collapse");
            $("#confirmEdit_Principal").toggleClass("display-none");


        }

        function openEditor(id, globalEditPath) {
            //Abre o editor secundário da tela, este é o que edita as propriedades de IDS, abas e demais campos.
            var typeDivEditor = "#editor_" + id;
            var typeIDDescription = "#PropIDDescription_" + id;
            var isProp = true;

            if (globalEditPath == 1203) { //tipo: aba
                typeDivEditor = "#editor_tab_" + id;
                typeIDDescription = "#TabIDDescription_" + id;
                isProp = false;
            }

            showOnlyOneCustomBtn(id, isProp) //este método faz a função de permitir mostrar somente o botão de editar e salvar selecionado


            if ($(typeDivEditor).is(".collapse")) {

                var editorHTML = "<div id='editQuill' class='bg-white'><div class='html-editor-" + id + "'></div></div>"
                $(typeDivEditor).append(editorHTML);
                edit(".html-editor-" + id, $(typeIDDescription).html());

            } else {
                $('#editQuill').remove();
                $(".customBtn").removeClass("display-none");
            }

            $(typeDivEditor + "," + typeIDDescription).toggleClass("collapse");

        }


        function showOnlyOneCustomBtn(id, IsProp) {
            var IsTab = "";

            //valida se é aba ou propriedade
            if (!IsProp) {
                IsTab = "_tab";
                $(".customBtn").toggleClass("display-none");
                $(".abaItens").toggleClass("d-flex spaceBetween text-right");

            } else {
                $(".customBtn_tab").toggleClass("display-none");;
            }

            //oculta os botões não selecionados, mostra somente o selecionado e troca o icone do editar para o botão de fechar do selecionado.
            var buttonsClasses = [("customBtn" + IsTab), ("confirmEdit" + IsTab)]

            buttonsClasses.forEach(function (bClass) {
                var btns = $("." + bClass);

                var activeButton = btns.filter(function (i, e) { return e.id == bClass + "_" + id });
                var activeIco = activeButton.children();

                btns = btns.filter(function (i, e) { return e.id != bClass + "_" + id });

                if (bClass == "customBtn" + IsTab) {
                    btns.toggleClass("display-none");
                    activeIco.toggleClass("fa-window-close text-danger closeHover fa-edit");
                }
                if (bClass == "confirmEdit" + IsTab) {
                    activeButton.toggleClass("display-none");
                }


            })


        }

        function generateArrayGruposHTML(grupoName, tabId) {
            var grupoN = grupoName.replaceAll(" ", "_").replaceAll(/[^a-zA-Zs]/g, "")
            return "<div class='grupoInAba'><h4 id='lbl_tab_" + tabId + "_grupo_" + grupoN + "' class='text-primary small'>Grupo: " + grupoName + "</h4><div id='tab_" + tabId + "_grupo_" + grupoN + "'></div></div>";
        }


		function openExternalLink(classe){
			var formLink = window.location.href.replace(YFORM,classe)
			if(HasBackForm.length ==0){
				formLink+="&BACKFORM="+YFORM;
			}else {
				formLink.replace(HasBackForm,classe)
			}
			
			
			window.location = formLink
		}

		
        function getGrid() {
            $.getJSON(urlSearch, { method: "getGrid" }, function (data) {
                if (data != null && data.length > 0) {
                    data.forEach(function (e, i) {
	
                        var elementString = "<button id='btnGrid_" + i + "'" +
                            " onclick='collapseAba(" + i + ",true)' class='btn btn-lg btn-collapse btn-block btn-default margin-bottom-10'>Grid: "
                            + e.noFormName +
                            " <i id='fav_Grid_" + i + "' class='fas fa-angle-down'></i></button>" +
                            "<div id='aba_Grid_" + i + "' class='Aba CLS_ACTIVE_ITEM_GRID collapse margin-bottom-20'><h4 class='text-primary spaceBetween d-flex'>Campos da tabela:  "
                            + e.noFormName +
                            "<div>"+
                            (e.ShowHiddenTabButton == "1" ? "<button  id='customHidden_Grid_" + i + "' type='button' onclick=\"hiddenField('" + i + "','" + e.class + "','120')\" class='customBtn'><i id='hiddenIco_Grid_" + i + "' class='fa fa-toggle-on'></i></button>" : "") +
                            "</div></h4><div class='abaItens'><div  id='Grid_Content_" + i + "'></div>"
                        "</div><div id='editor_Grid_" + e.class + "' class='collapse'></div><div id='Grid_" + i + "'></div></div>"

	
                        if (e.GridDesativeHelpManual == "1") {
                            elementString = elementString.replace("CLS_ACTIVE_ITEM_GRID", "disable-target disabled-link");
                            elementString = elementString.replace("fa-toggle-on", "fa-toggle-off");
                        }

                        $("#grids").append(elementString)


                        var htmlIds = generateArrayHtml(e.ids, e.class);
                        var htmlCampos = generateArrayHtml(e.fields, e.class);


                        $("#Grid_Content_" + i).html(htmlIds);
                        $("#Grid_Content_" + i).append($("#Grid_Content_" + i).html(htmlCampos));

                    })



                } else {
                    $("#fieldGrid").addClass("display-none");
                }

            });

        }


        function RemoveTempId(idTemp) {
            var idToRemove;
            var array = HtmlgeneratedArray;
            array.forEach(function (e) {
                if (idTemp.toString().includes(e.toString())) {
                    idToRemove = e;
                }
            })
            return idTemp.toString().replace(idToRemove, "")

        }

        function printPageArea(i) {

            var cssEstilos = '';
            var imp = window.open('', 'div', 'width=' + window.innerWidth + ',height=' + window.innerWidth);

            var cSs = document.querySelectorAll("link[rel='stylesheet']");
            for (x = 0; x < cSs.length; x++) {
                cssEstilos += '<link rel="stylesheet" href="' + cSs[x].href + '">';
            }
            imp.document.write('<html><head><title>' + document.title + '</title>');
            imp.document.write(cssEstilos + '</head><body>');
            imp.document.write(document.getElementById(i).innerHTML);
            imp.document.write('</body></html>');

            setTimeout(function () {
                imp.print();
                imp.close();
            }, 500);
        }
		
	
		getAllowedRels()
        
     




    </script>




</body>

</html>