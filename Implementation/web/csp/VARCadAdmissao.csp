<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		Do ^WWWVAR

		Set YUSER 		= $Get(%request.Data("YUSER", 1))
		Set YBED 			= $Get(%request.Data("YBED", 1))
		Set YM 				= $Get(%request.Data("YM", 1))
		Set YLOCATION = $Get(%request.Data("YLOCATION", 1))

		Set PortCache = $Get(%request.CgiEnvs("SERVER_PORT"))
		Set PageURL 	= $Get(%request.CgiEnvs("CACHE_URL"))
		Set PageName 	= %request.PageName
		Set app 			= %request.Application
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		Set url				= "http://"_host_app

		Set URLPreparacaoAgendamento 	= "VAR.CSP.VARCadAgendamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacaoOrc					= "VAR.CSP.VARCadOrcamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacao 						= "VAR.CSP.VARCadAdmissao.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLSearch									= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLLogin 									= "COMLogin.cls"
		Set URLLink 									= "www.cls"

		Set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)

		Set objGetPadraoAgendamento = ##Class(VAR.CSP.VARConfiguracaoAgendamento).GetPadraoAgendamento() 
		set agendRetroativa		= objGetPadraoAgendamento.agendRetroativa

		Set dataMinLimite	= $ZDate(+$Horolog,3)

		//Verifica se a sessão
		Set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Admissao de Paciente</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<style>
	.cell-selected {
		background-color: #FFFFB9;
	}

	.dx-datagrid {
		user-select: none;
		-webkit-user-select: none;
	}		

	.dx-row2 { background-color: #F5F5F5; }
	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	@keyframes fa-blink {
		0% { opacity: 1; }
		50% { opacity: 0.5; }
		100% { opacity: 0; }
	}
	.fa-blink {
		color: red;
		-webkit-animation: fa-blink 2.2s linear infinite;
		-moz-animation: fa-blink 2.2s linear infinite;
		-ms-animation: fa-blink 2.2s linear infinite;
		-o-animation: fa-blink 2.2s linear infinite;
		animation: fa-blink 2.2s linear infinite;
	}	
	</style>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divCadastrarMedico"></div>
		<div id="divImprimir"></div>
		<div id="divAlterarProcedimento"></div>
		<div id="divAlterarConvenio"></div>
		<div id="divCadPagamento"></div>
		<div id="divEliminarProcedimento"></div>
		<div id="divTentativaContato"></div>
		<div id="divPlanoSaude"></div>
		<div id="divGuia"></div>
		<div id="divHistorico"></div>
		<div id="divAlterarValor"></div>
		<div id="divAdicionarConvenio"></div>
		

		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx-gantt.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao 		= "#(URLPreparacao)#";
			var urlPreparacaoOrc 	= "#(URLPreparacaoOrc)#";
			var urlPreparacaoAgendamento 		= "#(URLPreparacaoAgendamento)#";
			var urlSearch					= "#(URLSearch)#";
			var urlLink 					= "#(URLLink)#";
			var YBED 							= "#(YBED)#";
			var YUSER 						= "#(YUSER)#";
			var YLOCATION 				= "#(YLOCATION)#";
			var nomeLocal 				= "#(nomeLocal)#";
			var agendRetroativa		= #(agendRetroativa)#;
			var codAgendamento		= "";
			var codUltimoMedicoSol= "";
			var xCodAgendamento		= "";
			var dSSolicitante 		= [];
			var dSContComponente	= []
			
			var altProcAgendand			= "";
			var altProcAgeSeq				= "";
			var altProcAgeProcAnt		= "";
			var altProcFlagProcAgen = ""
			
			var addNumAgendamento = "";
			var addNumAdmissao 		= "";

			var flagImpAbaPesq 			= ""
			var flagPagAbaPesq 			= ""

			var pagFormaPagamento 	= "";
			var pagSelTipoForPag 		= "";
			var bloqLimparPag	 			= 0;

			var seqEliminarItem			= "";
			
			var numAgendTentCont		= "";

			var numAdmissaoControle	= "";
			
			var codProcPS					= "";
			var codConvenioPS			= "";
			var dataSourcePS			= [];		
			
			var seqGuia						= "";	
			
			var selGuia						= 0;

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			$(document).ready(function () {
				/*if (YBED == "JULIO") {
					//admitirAgendamento("21/0000000314");
					$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 1);
					objCodigoPaciente.option("value",143);
					//pagamento("21/0000000358");
					//cadastrarGuia();
				}*/
			});

			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) { return "lg"; },
				screenByWidth: function(width) { return "lg"; },
				height:function(){ 20},
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colCount: 10,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 10,
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
		  			  selectedIndex: 0,
							deferRendering: false,
							animationEnabled: false,
							showNavButtons:true,
						},	
							height:'10px',
							tabs:[{
								title	: "Agendamentos",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divAgendamentos'>")
									}
								}],
							},{
								title	: "Pesquisar Paciente",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divSelPaciente'>")
									}
								}],
							},{
								title	: "Realizar Admissão",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divAdmitir'>")
									}
								}]
							}]
						}
					]
				}]
			}).dxForm("instance");

			objAgendamento = $("#divAgendamentos").dxForm({
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				items	: [{
					template	: function (data, itemElement) {
						itemElement.append("<div id='divPacienteAgendamentoAdmissoes' style='text-align:right;border: 0px solid red;'>")
					}
				}]
			}).dxForm("instance");

			dataSourceAgendamentos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "GetAgendamentoNew"},function(rs){});
					},
				})
			});

			$("#divPacienteAgendamentoAdmissoes").dxDataGrid({
				dataSource: dataSourceAgendamentos,
				columns: [
					{dataField: "numeroAgendForm", caption: "Agendamento/ Admissão", alignment: "center", width: 100,  groupIndex:0},
					{dataField: "descProcedimento", caption: "Procedimento", alignment: "center", minWidth: 250},
					{dataField: "dataHoraAtend", caption: "Data/Hora Atendimento", alignment: "center", width: 150, 
					cellTemplate: function(container, options){
							if (options.data.dataHoraAdmissao != "") {
								container.html("<span style='height:20px;width:100%;text-align:center;display:inline-block;"+
															 "vertical-align: middle;'>&nbsp; "+options.data.dataHoraAdmissaoForm+" &nbsp;</span>"+
															 "<br><b><span style='height:20px;width:100%;background-color:#d9ffd9;text-align:center;"+ 
															 "border-radius:2px;display:inline-block;vertical-align: middle;'>"+
					 										 "&nbsp; Admitido &nbsp;</span></b>");
							}else if (options.data.flagRemarcacao == 1) {
								container.html("<span style='height:20px;width:100%;text-align:center;display:inline-block;"+
															 "vertical-align: middle;'>&nbsp; "+options.data.dataHoraAtend+" &nbsp;</span>"+
															 "<br><b><span style='height:20px;width:100%;background-color:#ffcaca;text-align:center;"+ 
															 "border-radius:2px;display:inline-block;vertical-align: middle;'>"+
					 										 "&nbsp; Remarcação &nbsp;</span></b>");
							}else{
								container.html(options.data.dataHoraAtend);
							}
					}},
					{dataField: "nomeProfissional", caption: "Profissional", alignment: "center", minWidth: 250},
					{dataField: "descSala", caption: "Local", alignment: "center", minWidth: 250},
					{dataField: "acaoAdmitir", caption: "A", alignment: "center", width: 30, 
						cellTemplate: function(container, options){
							if (options.data.flagAdmitir == 1) {
								container.html("<span onClick=admitirAgendamento('"+options.data.numeroAgend+"');>" +
																"<i class='far fa-calendar-check' title='Admitir' style='color:#337AB7;cursor:pointer;' />"+
															 "</span>");
							}
						}},
					{dataField: "espaco", caption: " ", alignment: "center", width: 15},
					{dataField: "criadoPor", caption: "Criado Por", alignment: "center", width: 120, visible: 0},
					{dataField: "criadoEm", caption: "Criado Em", alignment: "center", width: 120, visible: 0},
					
				],
				/*rowTemplate: function(container, item) {
					var data 		= item.data;
					var rowSpan = data.procedimentos.length;
					var markup = "<tbody class='employee dx-row " + ((item.rowIndex % 2) ? 'dx-row1' : 'dx-row2') + "'>" +
						"<tr>" +
							"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.numeroAgend + "</td>" +  
							"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.nomePaciente + "</td>" +  
							"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.dataNascimento + "</td>" +  
							"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.sexo + "</td>";  
			    		for (count = 0; count < rowSpan ; count ++ ){
								if (count > 0) {
									markup += "<td style='border:1px solid #dddddd;'>&nbsp;</td></tr><tr>";
								}
								markup += "<td align='left' style='border:1px solid #dddddd;'><b>" + 
									data.procedimentos[count].descGrupoAgendamento + "</b><br>&nbsp; &nbsp;" + 
									data.procedimentos[count].descProcedimento + 
								"</td>" +
								"<td align='center' style='border:1px solid #dddddd;'>" +
									data.procedimentos[count].dataAtend + " - " +
									data.procedimentos[count].horaAtend +
									(
										data.procedimentos[count].dataHoraAdmissao == "" 
										? "" 
										: "<br><b><span style='height:20px;width:100%;background-color:#d9ffd9;text-align:center;"+ 
											"border-radius:2px;display:inline-block;vertical-align: middle;'>"+
											"&nbsp; Admitido &nbsp;</span></b>" 
									) +
									(
										data.procedimentos[count].flagRemarcacao == 0 
										? "" 
										: "<br> <span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
											"display: inline-block;vertical-align: middle;'>&nbsp; Remarcação &nbsp;</span>"
									) +
								"</td>" +
								"<td align='left' style='border:1px solid #dddddd;'>" +
									data.procedimentos[count].nomeProfissional +
								"</td>" +
								"<td align='center' style='border:1px solid #dddddd;'>" +
									data.procedimentos[count].descSala +
								"</td>";
								if  (data.procedimentos[count].flagAdmitir == 0) {
									markup += "<td align='center' style='border:1px solid #dddddd;'></td>";
								}else{
									markup += "<td align='center' style='border:1px solid #dddddd;'>" +
										"<span onClick=admitirAgendamento('"+data.numeroAgend+"');>" +
											"<i class='far fa-calendar-check' title='Admitir' style='color:#337AB7;cursor:pointer;' />" +
										"</span>" +
									"</td>";
								}
			    		}
					markup += 
						"<td style='border:1px solid #dddddd;'>&nbsp;</td></tr>" +
					"</tbody>";
					container.append(markup);
				},*/
    		columnChooser: { enabled: true, mode: "dragAndDrop"},
				showColumnHeaders:true,
				allowColumnReordering: false,
				columnAutoWidth: true,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true },
				height: function() { return window.innerHeight - 100;},
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "before",
						widget: "dxTextBox",
						options: {
							width: 250,
							placeholder: "Informar o Agendamento",
							onValueChanged: function(e){
								xCodAgendamento = e.value; 
							},
							buttons: [{
								location:"after",
								name: "readAdmissao",
								options:{
									icon: "fas fa-check",
									hint: "Admitir",
									type: "default",
									stylingMode : "contained",
									onClick	: function(e){
										if (xCodAgendamento == "" || xCodAgendamento == null) {
											DevExpress.ui.notify("Informar a admissão.","warning");										
											return;
										}
										admitirAgendamento(xCodAgendamento)
									}
								}
							}]								
						}
					})
				},
			});

			function admitirAgendamento(pNumeroAgend) {
				codAgendamento = ""; 
				codUltimoMedicoSol = "";
				$.getJSON(urlPreparacao,{method: "CarregarAgendamento", pCodAgendamento: pNumeroAgend},function(objRetorno){
					if (objRetorno.status == 0) {
						DevExpress.ui.notify("Admissão inválida.","warning");										
						return;
					}
					codAgendamento = pNumeroAgend;
					numAdmissaoControle = "";
					$("#tdNumeroAdmissao").html("&nbsp;");
					objAgendamento.option("disabled", true);
					objSelPaciente.option("disabled", true);
					objAdmitir.option("disabled", false);
					$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 2)
					setTimeout(function(){
						objAdmitir.getEditor("numAgendamento").option("value", codAgendamento);
						objAdmitir.getEditor("pacNome").option("value", objRetorno.pacNomePaciente);
						objAdmitir.getEditor("pacProntuario").option("value", objRetorno.pacProntuario);
						objAdmitir.getEditor("pacSexo").option("value", objRetorno.pacSexo);
						objAdmitir.getEditor("pacNascimento").option("value", objRetorno.pacNascimento);
						objAdmitir.getEditor("codPlanoSaudeConvenio").option("value", objRetorno.codConvenio); 
						objAdmitir.getEditor("planoSaudeCarteirinha").option("value", objRetorno.codCarteirinha); 
						objAdmitir.getEditor("pSaudeEmpContratante").option("value", objRetorno.empresaContratante); 
						objAdmitir.getEditor("dataVencimentoCarteirinha").option("value", objRetorno.vencCarteirinha); 
						if (objRetorno.solicitante.split(",")[0] != "") {
							objAdmitir.getEditor("solicitante").option("value", objRetorno.solicitante.split(",")); 
						}
						objAdmitir.getEditor("observacao").option("value", objRetorno.observacao); 
		      	objAdmitir.getEditor("codPlanoSaude").option("value", objRetorno.codPlanoSaude); 
						montarGuia();
					}, 500);
					dataSourceListarHorarios.reload();
				});
			}

			////Seleçao de Paciente

			objSelPaciente = $("#divSelPaciente").dxForm({
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 2,
				items	: [{
					colSpan: 2,
					colCount: 3,
					itemType: "group",
					cssClass: "second-group",
					items: [{
						colSpan: 3, template: function (data, itemElement) { itemElement.append("<div style='height:0px;border:0px solid red;text-align:right'>")}
					},{
						dataField: "pacienteAdmissao",
						label: { text:"Admissão:", alignment: "right"},
						editorOptions: {
							//mask: "00/0000000000",
							onValueChanged: function (e) {
								if (!e.value) return;
								$.getJSON(urlPreparacao,{method: "RecuperarAdmissao", pNumAdmissao: e.value}, function(objRetorno){
									if (objRetorno.codPaciente != "") {
										if (objCodigoPaciente.option("value") != "" && objCodigoPaciente.option("value") != null && objCodigoPaciente.option("value") == objRetorno.codPaciente) {
											listarAgendamentoAdmissoes();
										}else{
											objCodigoPaciente.option("value", objRetorno.codPaciente);
										}										
									}else if (objRetorno.mensagem != "") {
										objCodigoPaciente.option("value","");
										DevExpress.ui.notify(objRetorno.mensagem,"warning");
									}
								});
							}
						}, 
					},{colSpan: 2},{
						colSpan: 3, template: function (data, itemElement) { itemElement.append("<div style='height:0px;border:0px solid red;text-align:right'>")},
					}]
				},{
					colCount: 6,
					itemType: "group",
					cssClass: "second-group",
					items: [{
						colSpan: 6, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
					},{
						colSpan: 6, 
						dataField: "pacienteCodigo",
						label: { text:"Pesquisar:", alignment: "right"},
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPacienteCodigo'>")
						}
					},{
						colSpan: 6, 
						dataField: "pacienteNome",
						label: { text:"Nome:", alignment: "right"},
						validationRules: [{type: "required"}],	
					},{
						colSpan: 2, 
						dataField: "pacienteProntuario",
						label: { text:"Prontuário:", alignment: "right" },
					},{
						colSpan: 2, 
						dataField: "pacienteDataNascimento",
						editorType: "dxDateBox",
						label: { text:"Nascimento:", alignment: "right" },
						validationRules: [{type: "required"}],	
						editorOptions : { useMaskBehavior: true, width: 120 }
					},{
						colSpan: 2, 
						dataField: "pacienteSexo",
						editorType: "dxSelectBox",
						label: { text:"Sexo:", alignment: "right" },
						editorType: "dxSelectBox",
						validationRules: [{type: "required"}],	
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetWWW101",pDescParametro:"SEX"});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					},{
						colSpan: 6, 
						dataField: "pacienteNomeMae",
						label: { text:"Nome Mãe:", alignment: "right"},
						//validationRules: [{type: "required"}],	
					},{
						colSpan: 2, dataField: "pacienteCPF", 
						label: { text:"CPF:", alignment: "right"},
						editorOptions: {
							maxLength: 11,
							onValueChanged: function (e) {
								if (!e.value) return;
								if (!validarCPF(e.value)) {
									DevExpress.ui.notify("CPF invalido.","warning");	
									objSelPaciente.getEditor("pacienteCPF").option("value", "");
									objSelPaciente.getEditor("pacienteCPF").focus();  
								}
							}
						}, 
						validationRules: [{type: "required"}, ]
					},{colSpan: 2, dataField: "pacienteRG", label: { text:"RG:", alignment: "right"}},
					{colSpan: 2, dataField: "pacienteCNS", label: { text:"CNS:", alignment: "right"}},
					{colSpan: 3, dataField: "pacienteTelefone", label: { text:"Telefone:", alignment: "right"}, editorOptions:{mask:"(99)9999-9999"}},
					{colSpan: 3, dataField: "pacienteCelular", label: { text:"Celular:", alignment: "right"}, editorOptions:{mask:"(99)99999-9999"}},
					{colSpan: 6, dataField: "pacienteEmail", label: { text:"E-mail:", alignment: "right"}},
					{colSpan: 6, template: function (data, itemElement) { itemElement.append("<div style='height:3px;border:0px solid red;text-align:right'>")}},
				]},{
					colCount: 2,
					itemType: "group",
					cssClass: "second-group",
					caption: "Endereço",
					items: [
						{dataField: "pacienteCEP", label: { text:"CEP:", alignment: "right"},
							editorOptions: {
								onValueChanged: function(e) {
									if (e.value) {
										$.getJSON(urlPreparacaoAgendamento,{method: "GetCEP", pCEP: e.value}, function(objRetorno){
											if (objRetorno.Logradouro != "") {
												objSelPaciente.getEditor("pacienteLogradouro").option("value",objRetorno.Logradouro);
												objSelPaciente.getEditor("pacienteBairro").option("value",objRetorno.Bairro);
												objSelPaciente.getEditor("pacienteCidade").option("value",objRetorno.Cidade);
												objSelPaciente.getEditor("pacienteEstado").option("value",objRetorno.UF);
											}
										});
									}
								}
							}
						},{},
						{colSpan: 2, dataField: "pacienteLogradouro", label: { text:"Logradouro:", alignment: "right"}},
						{dataField: "pacienteNumeroEndereco", label: { text:"Número:", alignment: "right"}},
						{dataField: "pacienteComplemento", label: { text:"Complemento:", alignment: "right"}},
						{dataField: "pacienteBairro", label: { text:"Bairro:", alignment: "right"}},
						{dataField: "pacienteCidade", label: { text:"Cidade:", alignment: "right"}},
						{
							dataField: "pacienteEstado",
							editorType: "dxSelectBox",
							label: {
								text:"Estado:",
								alignment: "right"
							},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetWWW102",pDescParametro:"BUNDESLAND"});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}
						},
						{},
						{colSpan: 2, template: function (data, itemElement) { itemElement.append("<div style='height:33px;border:0px solid red;text-align:right'>")}},
					]
				},{
					colSpan: 2,							
					template	: function (data, itemElement) {
						itemElement.append("<div id='divPacienteAcao' style='text-align:right;border: 0px solid red;'>")
					}
				},{
					colSpan: 2,
					cssClass: "second-group",
					itemType: "group",
					caption: "Admissões",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divSelPacienteAgendamento' style='text-align:right;border: 0px solid red;'>")
						}
					}]
				}]
			}).dxForm("instance");

			dataSourcePaciente = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlSearch,{
							method				:	"GetPaciente",
							pCodPaciente	: args,
						});
					},
					load: function(args) {
						return $.getJSON(urlSearch,{
							method				:	"GetPaciente",
							pSkip					:	args.skip,
							pTake					:	args.take,
							pSearchValue	:	args.searchValue,
						});
					}
				})
			});	

			objCodigoPaciente = $("#divPacienteCodigo").dxSelectBox({
				dataSource: dataSourcePaciente,
				placeholder: "+",
				searchEnabled: true,
				valueExpr: "Codigo", 
				displayExpr: "Nome",
				showClearButton: true,
        itemTemplate: function(data) {
	        return	"<div class='custom-item'>" +
	        					"<div>" + data.Nome + "</div>" +
	        					"<div style='color:red;font-size:10px'>Dt. Nasc.: " + data.Nascimento + 
	        					" &nbsp; Prontuário: " + data.Prontuario + " &nbsp; CPF: " + data.CPF +
	        					"</div>" +
	        				"</div>";
        },
				onValueChanged: function(e) {
					if (!e.value) {
						objSelPaciente.resetValues();
					}else{
						carregarPaciente(e.value);
					}
					listarAgendamentoAdmissoes();
				}
			}).dxSelectBox("instance");

			function alterarProcedimento(pCodAgendamento, pSequencia, pProcedimento, pFlagProcAgendado) {
				altProcAgendand			= pCodAgendamento;
				altProcAgeSeq				= pSequencia;
				altProcAgeProcAnt		= pProcedimento;
				altProcFlagProcAgen	= pFlagProcAgendado
				$("#divAlterarProcedimento").dxPopup("show");
				dSAlterarProcProcedimento.reload();
				$("#formAltProcedimento").dxForm("instance").getEditor("procedimento").option("value", altProcAgeProcAnt);
			}

			dSComponente = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						return dSContComponente;
					},
				})
			});

			function alterarConvenio(pCodAgendamento, pSequencia, pProcedimento, pFlagProcAgendado) {
				altProcAgendand			= pCodAgendamento;
				altProcAgeSeq				= pSequencia;
				altProcAgeProcAnt		= pProcedimento;
				altProcFlagProcAgen	= pFlagProcAgendado
				$.getJSON(urlPreparacao, {method: "GetConvenioAlteracao", pCodAgendamento: altProcAgendand, 
				pSequencia: altProcAgeSeq}, function(objRetorno) {
					console.log(objRetorno)
					dSContComponente = objRetorno.componentes;
					$("#divAlterarConvenio").dxPopup("show");
					dSGuiasCadAlt.reload();
					$("#formAlterarConvenio").dxForm("instance").getEditor("procedimento").option("value", objRetorno.procedimento);
					dSComponente.reload();
					if (objRetorno.componentes.length > 0) {
						$("#formAlterarConvenio").dxForm("instance").getEditor("componente").option({readOnly: false, value: ""});
					}else{
						$("#formAlterarConvenio").dxForm("instance").getEditor("componente").option({readOnly: true, value: ""});
					}
					$("#formAlterarConvenio").dxForm("instance").getEditor("qtdeComponente").option({readOnly: true, value: ""})
					$("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option("value", objRetorno.solicitante);
					$("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value", objRetorno.convenio);
					$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value", objRetorno.planoSaude);
					$("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option("value", objRetorno.carteirinha);
					$("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option("value", objRetorno.dtVencimento);
					$("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value", objRetorno.codGuia);
				});
			}

			function imprimir(pCodAgendamento, pNumControleAdmissao){
				flagImpAbaPesq 			= 1;
				codAgendamento 			= pCodAgendamento;
				numAdmissaoControle = pNumControleAdmissao;
				$("#divImprimir").dxPopup("show");
				dSImpressoes.reload();
			}

			function consultarHistorico(pCodAgendamento, pNumControleAdmissao){
				codAgendamento 			= pCodAgendamento;
				numAdmissaoControle = pNumControleAdmissao;
				$("#divHistorico").dxPopup("show");
				dSHistorico.reload();
			}


			function pagamento(pCodAgendamento, pNumControleAdmissao, pFlagPagAbaPesq){
				flagPagAbaPesq = pFlagPagAbaPesq;
				pagFormaPagamento = "";
				pagSelTipoForPag = "";
				codAgendamento = pCodAgendamento;
				numAdmissaoControle = pNumControleAdmissao;
				#server(VAR.CSP.VARCadAdmissao.RemoverFormaPagamento(YBED, 1))#;
				$.getJSON(urlPreparacao, {method: "GetPagamento", pCodAgendamento: codAgendamento, pNumAdmissaoControle: numAdmissaoControle},
				function(objRetorno){
					$("#divCadPagamento").dxPopup("show");
					dSPagProcedimentos.reload();
					objFormPagamento = $("#formPagamento").dxForm("instance");
					//objFormPagamento.resetValues();
					if (objRetorno.pagProprio == 1 || objRetorno.pagProprio == "") {
						objFormPagamento.getEditor("pagador").option({value: 1});
					}else{
						objFormPagamento.getEditor("pagador").option({value: 0});
						objFormPagamento.getEditor("tipoDocumento").option({value: objRetorno.pagTipoDocumento});
						objFormPagamento.getEditor("numeroDocumento").option({value: objRetorno.pagNumDocumento});
						objFormPagamento.getEditor("nome").option({value:  objRetorno.pagNome});
					}
					;
					bloqLimparPag = 1;
					if (objRetorno.pagPercDesc != 0) {
						objFormPagamento.getEditor("descontoValor").option("value", 0);
						objFormPagamento.getEditor("descontoPercentual").option("value", objRetorno.pagPercDesc);
					}else{
						objFormPagamento.getEditor("descontoPercentual").option("value", 0);
						objFormPagamento.getEditor("descontoValor").option("value", objRetorno.pagValorDesc);
					}
					objFormPagamento.getEditor("valorPago").option("value", objRetorno.valorPago);
					//objFormPagamento.getEditor("valorPendente").option("value", objRetorno.pagValorDesc);
					objFormPagamento.getEditor("formaPagamentoBoleto").option("value", 0);
					objFormPagamento.getEditor("formaPagamentoCredito").option("value", 0);
					objFormPagamento.getEditor("formaPagamentoDebito").option("value", 0);
					objFormPagamento.getEditor("formaPagamentoDeposito").option("value", 0);
					objFormPagamento.getEditor("formaPagamentoDinheiro").option("value", 0);
					;
					if (objRetorno.pagFormPag.split("BB").length == 2) objFormPagamento.getEditor("formaPagamentoBoleto").option("value", 1);
					if (objRetorno.pagFormPag.split("CC").length == 2) objFormPagamento.getEditor("formaPagamentoCredito").option("value", 1);
					if (objRetorno.pagFormPag.split("CD").length == 2) objFormPagamento.getEditor("formaPagamentoDebito").option("value", 1);
					if (objRetorno.pagFormPag.split("DB").length == 2) objFormPagamento.getEditor("formaPagamentoDeposito").option("value", 1);
					if (objRetorno.pagFormPag.split("DI").length == 2) objFormPagamento.getEditor("formaPagamentoDinheiro").option("value", 1);
					bloqLimparPag = 0;
					setTimeout(function(){
						pagFormaPagamento = objRetorno.pagFormPag;
						dSPagFomPagamento.reload();
					}, 100);
				});
			}
			
			function calculaValorPendente(){
				valorPago = #server(VAR.CSP.VARCadAdmissao.GetTotalPago(YBED))#;
				$("#formPagamento").dxForm("instance").getEditor("valorPago").option("value",valorPago);
				valorTotal 	= $("#formPagamento").dxForm("instance").getEditor("totalBruto").option("value");
				valorDesc		= $("#formPagamento").dxForm("instance").getEditor("descontoValor").option("value");
				percDesc		= $("#formPagamento").dxForm("instance").getEditor("descontoPercentual").option("value");
				if (percDesc > 0) {
					valorDesc	 = ((valorTotal * percDesc) / 100)
				}
				valorPendente = valorTotal - valorPago - valorDesc;
				$("#formPagamento").dxForm("instance").getEditor("valorPendente").option("value", valorPendente);
			}
			
			function excluirItem(pCodAgendamento, pCodAdmissao, pSequencia){
				var result = DevExpress.ui.dialog.confirm("<i>Confirma a exclusão do procedimento?", "Confirmação?");
	    	result.done(function(dialogResult) {
        	if (!dialogResult){
						return;
					}
					$.get(urlPreparacao, {method: "ExcluirItem", pCodAgendamento: pCodAgendamento,
			    pCodAdmissao: pCodAdmissao, pSequencia: pSequencia},function(rs){
				  	if (rs == 1) {
							DevExpress.ui.notify("Procedimento excluido com sucesso!","success");
							listarAgendamentoAdmissoes();
						}else{
							DevExpress.ui.notify("Erro: "+rs,"error");
				  	}      	
				  });
	    	});
			}
			
			dSAgendamentoPendente = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						pCodPaciente = objCodigoPaciente.option("value");
						if (pCodPaciente == "" || pCodPaciente == null) {
							return [];
						}
						return $.getJSON(urlPreparacao,{method:	"GetAgendamentoSemAdm", pCodPaciente: pCodPaciente});
					}
				})
			});
			
			function listarAgendamentoAdmissoes(){
				if ($("#divSelPacienteAgendamentoLista")) $("#divSelPacienteAgendamentoLista").remove();
				$("#divSelPacienteAgendamento").html("<div id='divSelPacienteAgendamentoLista'></div>");

				pCodPaciente = objCodigoPaciente.option("value");
				if (pCodPaciente == "" || pCodPaciente == null) {
					return;
				}
				
				dSAgendamentoPendente.reload();
				
				pNumAdmissao = objSelPaciente.getEditor("pacienteAdmissao").option("value");
				columns = [
					{dataField: "numeroAgend", caption: "Número Admissão", alignment: "center", width: 100, sortIndex: 0, sortOrder: "desc"},
					//{dataField: "data", caption: "Data/Hora", alignment: "center", width: 120},
					{dataField: "descProcedimento", caption: "Procedimento", alignment: "center", width: 320},
					{dataField: "dataAtend", caption: "Data/Hora Atendimento", alignment: "center", width: 120},
					{dataField: "nomeProfissional", caption: "Profissional", alignment: "center", width: 200},
					{dataField: "local", caption: "Local", alignment: "center"},
					{dataField: "acao4", caption: " ", alignment: "center", width: 30},
					{dataField: "acao", caption: " ", alignment: "center", width: 30},
					{dataField: "acao1", caption: " ", alignment: "center", width: 30},
					{dataField: "acao2", caption: " ", alignment: "center", width: 30},
					{dataField: "acao3", caption: " ", alignment: "center", width: 30},
					{dataField: "acao5", caption: " ", alignment: "center", width: 30},
					{dataField: "branco", caption: " ", alignment: "center", width: 20},
				];

				$("#divSelPacienteAgendamentoLista").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							loadMode: "raw",   
							load: function(){
			        	return $.getJSON(urlPreparacao, {method: "GetAdmissao", pCodPaciente: pCodPaciente,
			        	pNumAdmissao:pNumAdmissao},function(rs){console.log(rs)});
							},
						})
					}),
					columns: columns,
					rowTemplate: function(container, item) {
						var data 		= item.data;
						var rowSpan = data.procedimentos.length;
						var markup = "<tbody class='employee dx-row " + ((item.rowIndex % 2) ? 'dx-row1' : 'dx-row2') + "'>" +
							"<tr>" + 
								"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.numControleAdmissao + "</td>";
								//"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.data + "</td>";  
				    		for (count = 0; count < rowSpan ; count ++ ){
									if (count == 1 && rowSpan > 1) {
										markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + 
																"<span onClick=imprimir('"+data.numeroAgend+"','"+data.numControleAdmissao+"')>" +
																	"<i class='fas fa-print' title='Imprimir' style='color:#337AB7;cursor:pointer;' />" +
																"</span>"											
															"</td>";  
										if (data.eParticular == 1) {
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + 
																	"<span onClick=pagamento('"+data.numeroAgend+"','"+data.numControleAdmissao+"','1')>" +
																		"<i class='far fa-credit-card' title='Lançar Pagamento' style='color:#337AB7;cursor:pointer;' />" +
																	"</span>"											
																"</td>";  
										}else{
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";  
										}
										if (data.fTentCont == 10) {
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>"+
												"<span onClick=tentativaContato('"+data.numeroAgend+"');>" +
													"<i class='fas fa-comment-dots' title='Consulta Registro de Tentativa de Contato' style='color:#337AB7;cursor:pointer;' />" +
												"</span>" +
											"</td>";
										}else{
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";  	
										}
										markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>"+
											"<span onClick=consultarHistorico('"+data.numeroAgend+"','"+data.numControleAdmissao+"');>" +
												"<i class='fas fa-history' title='Consulta Alterações' style='color:#337AB7;cursor:pointer;' />" +
											"</span>" +
										"</td>";
										markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>";
										if (data.eParticular != 1 && data.addProc == 1) {	
											markup += "<span onClick=adicionarProcedimento('"+data.numeroAgend+"','"+data.numControleAdmissao+"');>" +
																	"<i class='fas fa-plus-circle' title='Adicionar Procedimento' style='color:#337AB7;cursor:pointer;' />" +
																"</span>";
										}else{
											markup += "&nbsp;";
										}
										markup += "</td>";
										markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";  
									}									
									if (count > 0) {
										markup += "</tr><tr>";
									}
									markup += "<td align='left' style='border:1px solid #dddddd;'>" +
										"<table><tr><td width='265px'><b>";
										//markup += data.procedimentos[count].dataHoraAdmissao+"|"+data.procedimentos[count].nomeProfissional+"|"+data.eParticular;
										
											if (data.procedimentos[count].descGrupoAgendamento == "") {
												markup += data.procedimentos[count].descProcedimento + "</b>";
											}else{
												markup += data.procedimentos[count].descGrupoAgendamento + "</b><br>&nbsp; &nbsp;" + 
													data.procedimentos[count].descProcedimento;
											}
										markup += "</td><td width='50px' align='center'>";
										if (
													data.procedimentos[count].dataHoraAdmissao == "" || 
													//data.procedimentos[count].nomeProfissional != "" //||
													data.eParticular == 1
													) {
											markup += "&nbsp;";
										}else{
											if (data.procedimentos[count].numLote == "" || (data.procedimentos[count].numLote != "" && data.procedimentos[count].statusLote == 1)) { 
												markup += "<span onClick=alterarProcedimento('"+data.numeroAgend+"','"+data.procedimentos[count].sequencia+"','"+data.procedimentos[count].codProcedimento+"','"+data.procedimentos[count].procedAgendado+"')>" +
													"<i class='fas fa-edit' title='Alterar Procedimento' style='color:#337AB7;cursor:pointer;' />" +
												"</span>&nbsp;"											
												markup += "<span onClick=alterarConvenio('"+data.numeroAgend+"','"+data.procedimentos[count].sequencia+"','"+data.procedimentos[count].codProcedimento+"','"+data.procedimentos[count].procedAgendado+"')>" +
													"<i class='far fa-hospital' title='Alterar Convênio/Plano de Saúde' style='color:#337AB7;cursor:pointer;' />" +
												"</span>"											
											}
										}
										markup += "</td></tr></table>" +
									"</td>" +
									"<td align='center' style='border:1px solid #dddddd;'>";
										if (data.procedimentos[count].procedAgendado == 1){ 
											markup += data.procedimentos[count].dataAtend + " - " + data.procedimentos[count].horaAtend;
										}else{
											markup += data.procedimentos[count].dataHoraAdmissaoForm;
										}	
										if (data.procedimentos[count].numLote == "") {
											markup += (
												data.procedimentos[count].dataHoraAdmissao == "" 
												? "" 
												: "<br><b><span style='height:20px;width:100%;background-color:#d9ffd9;text-align:center;"+ 
													"border-radius:2px;display:inline-block;vertical-align: middle;'>"+
													"&nbsp; Admitido &nbsp;</span></b>" 
											) +
											(
												data.procedimentos[count].flagRemarcacao == 0 
												? "" 
												: "<br> <span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
													"display: inline-block;vertical-align: middle;'>&nbsp; Remarcação &nbsp;</span>"
											);
										}else{
											if (data.procedimentos[count].statusLote == 1) {
												markup += "<br><b><span style='height:20px;width:100%;background-color:#d9ffd9;text-align:center;" + 
																	"border-radius:2px;display:inline-block;vertical-align: middle;' " +
																	"title='Lote: "+data.procedimentos[count].numLote+"'>&nbsp; Em Faturamento &nbsp;</span></b>";
											}else{
												markup += "<br><b><span style='height:20px;width:100%;background-color:#d9ffd9;text-align:center;" + 
																	"border-radius:2px;display:inline-block;vertical-align: middle;' " +
																	"title='Lote: "+data.procedimentos[count].numLote+"'>&nbsp; Faturado &nbsp;</span></b>";
											}
										}
										markup +=
									"</td>" +
									"<td align='left' style='border:1px solid #dddddd;'>" +
										data.procedimentos[count].nomeProfissional +
									"</td>" +
									"<td align='center' style='border:1px solid #dddddd;'>" +
										data.procedimentos[count].descSala +
									"</td>"+
									"<td align='center' style='border:1px solid #dddddd;'>";
									if (data.procedimentos[count].numLote == "") {
										markup += "<span onClick=excluirItem('"+data.numeroAgend+"','"+data.numControleAdmissao+"','"+data.procedimentos[count].sequencia+"')>" +
																"<i class='fas fa-trash-alt' title='Excluir Item' style='color:#337AB7;cursor:pointer;' />" +
															 "</span>";											
									}
									markup +="</td>";
				    		}
				    if (rowSpan <= 1) {		
							markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + 
													"<span onClick=imprimir('"+data.numeroAgend+"','"+data.numControleAdmissao+"')>" +
														"<i class='fas fa-print' title='Imprimir' style='color:#337AB7;cursor:pointer;' />" +
													"</span>"											
												"</td>";  
							if (data.eParticular == 1) {
								markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + 
														"<span onClick=pagamento('"+data.numeroAgend+"','"+data.numControleAdmissao+"',0)>" +
															"<i class='far fa-credit-card' title='Lançar Pagamento' style='color:#337AB7;cursor:pointer;' />" +
														"</span>"											
													"</td>";  
							}else{
								markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";  
							}
							if (data.fTentCont == 10) {
								markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>"+
									"<span onClick=tentativaContato('"+data.numeroAgend+"');>" +
										"<i class='fas fa-comment-dots' title='Consulta Registro de Tentativa de Contato' style='color:#337AB7;cursor:pointer;' />" +
									"</span>" +
								"</td>";
							}else{
								markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";  	
							}
							markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>"+
								"<span onClick=consultarHistorico('"+data.numeroAgend+"','"+data.numControleAdmissao+"');>" +
									"<i class='fas fa-history' title='Consulta Alterações' style='color:#337AB7;cursor:pointer;' />" +
								"</span>" +
							"</td>";
							markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>";
							if (data.eParticular != 1) {	
								markup += "<span onClick=adicionarProcedimento('"+data.numeroAgend+"','"+data.numControleAdmissao+"');>" +
														"<i class='fas fa-plus-circle' title='Adicionar Procedimento' style='color:#337AB7;cursor:pointer;' />" +
													"</span>";
							}else{
								markup += "&nbsp;";
							}
							markup += "</td>";
							markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";  
				    }
						markup += 
							"</tr>" +
						"</tbody>";
						container.append(markup);
					},
	    		columnChooser: { enabled: false, mode: "dragAndDrop"},
					showColumnHeaders:true,
					allowColumnReordering: false,
					columnAutoWidth: true,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: false },
					groupPanel: { visible: false, allowColumnDragging: true },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					height: function() { 
						var heig = window.innerHeight - 530;
						if (heig < 300) heig = 300;
						return heig;
					},
					onToolbarPreparing: function (e) {
						var dataGrid = e.component;
						e.toolbarOptions.items.unshift({
							location: "before",
							widget: "dxSelectBox",
							options: {
								width: 350,
								dataSource: dSAgendamentoPendente,
								showClearButton: true,
								onValueChanged: function(e){
									xCodAgendamento = e.value; 
								},
								displayExpr: "Descricao",
								valueExpr: "Codigo",
								searchEnabled: true,
								placeholder: "Agendamento(s) pendente de admissão",
								buttons: [{
									location:"after",
									name: "readAdmissao",
									options:{
										icon: "fas fa-check",
										hint: "Admitir",
										type: "default",
										stylingMode : "contained",
										onClick	: function(e){
											if (xCodAgendamento == "" || xCodAgendamento == null) {
												DevExpress.ui.notify("Informar a admissão.","warning");											
												return;
											}
											admitirAgendamento(xCodAgendamento)
										}
									}
								}]								
							}
						})
					},
				});
			}
			

			$("#divPacienteAcao").html("<table width='100%'>" +
																	"<tr>" +
																		"<td style='vertical-align:bottom;'>" + 
																			"<div id='divPacienteSalvar'/>&nbsp;" +
																			"<div id='divPacienteAgendar'/>&nbsp;" +
																			"<div id='divPacienteLimpar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>");


			objPacienteSalvar = $("#divPacienteSalvar").dxButton({
			  icon	: "save",
			  text	: "Salvar e Admitir",
			  type	: "success",
			  stylingMode : "contained",
			  onClick	: function(){
				  pacienteCodigo = objCodigoPaciente.option("value")
	        if (!pacienteCodigo) pacienteCodigo = "";
	        if (!objSelPaciente.validate().isValid){
		        DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
		        return
	        }
	        $.getJSON(urlPreparacaoAgendamento,{method: "SalvarPaciente", chave: pacienteCodigo, 
	        dados: JSON.stringify(objSelPaciente.option("formData"))},function(objRetorno){
						if (objRetorno.status ==  -1) {
							DevExpress.ui.notify(objRetorno.mensagem,"warning");		
						}else if (objRetorno.status ==  1) {
							DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
							objCodigoPaciente.option("value",objRetorno.codigo)
							carregarPaciente(objRetorno.codigo);
							gerarAgendamento();
						}else{
							DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
						}
					})
			  }
			}).dxButton("instance");

			objPacienteAgendar = $("#divPacienteAgendar").dxButton({
			  icon	: "fas fa-calendar-plus",
			  text	: "Admitir",
			  visible: false,
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  pacienteCodigo = objCodigoPaciente.option("value")
	        if (!pacienteCodigo) {
						DevExpress.ui.notify("Favor informar o paciente.","warning");		
		      	return;  
	        }
	        gerarAgendamento();
				 }
			}).dxButton("instance");

			objPacienteLimpar = $("#divPacienteLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  limparPaciente()
			  }
			}).dxButton("instance");

			function limparPaciente(){
				objSelPaciente.resetValues();
				objCodigoPaciente.option("value","");
				objAgendamento.option("disabled", false);
				objSelPaciente.option("disabled", false);
				objAdmitir.option("disabled", true);
				listarAgendamentoAdmissoes();
			}

			function gerarAgendamento() {
				$.getJSON(urlPreparacaoAgendamento,{method: "GerarAgendamento", pCodPaciente: objCodigoPaciente.option("value")}, 
				function(objRetorno){
					if (objRetorno.status != 1) {
						codAgendamento = "";
						qtdeHorarioAgend
						DevExpress.ui.notify("Erro na geração do agendamento: "+objRetorno.status,"error");
					}else{
						codAgendamento = objRetorno.codAgendamento;
						admitirAgendamento(codAgendamento);
					}
				});
			}		

			function carregarPaciente(pCodPaciente){
				$.getJSON(urlPreparacaoAgendamento,{method: "GetDadosPaciente", pCodPaciente: pCodPaciente}, 
				function(objRetorno){
					objSelPaciente.option("formData", objRetorno);
				});
			}

			////Admissão
			dSPlanoSaude = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = objAdmitir.getEditor("codPlanoSaudeConvenio").option("value");
						return $.getJSON(urlPreparacaoAgendamento,{
							method:	"GetPlanoSaudeCampo",
							pCodOrganizacao: pCodConvenio
						});
					}
				})
			});
			
			/*new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlPreparacaoOrc,{
							method:	"GetConvenio",
							pCodConvenio: args
						});
					},
					load: function(args) {
						var pCodConvenio = objAdmitir.getEditor("codPlanoSaudeConvenio").option("value");
						return $.getJSON(urlPreparacaoOrc,{
							method				:	"GetConvenio",
							pSkip					:	args.skip,
							pTake					:	args.take,
							pSearchValue	:	args.searchValue,
							pCodConvenio  : "",
							pParticular 	: "",
							pFlagConvenio : "",
							pConvenio 		: pCodConvenio
						});
					}
				})
			});*/

			dataSourceMedicoExterno = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
      		load: function() {
	        	return $.getJSON(urlPreparacaoAgendamento,{
							method			:	"CarregaProfissional",
							pFlagExterno: "EI"
						});
      		}
				})
			});

			var nomePaiOrganizacaoAnt = "";
			var convenioAnt = "";
			objAdmitir = $("#divAdmitir").dxForm({
				disabled: true,
				scrollingEnabled	: true,
				showColonAfterLabel	: true,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				alignItemLabelsInAllGroups:false,
				colCount: 12,
				items: [{
					alignItemLabelsInAllGroups:false,
					itemType: "group",
					cssClass: "second-group",
					caption: "Paciente",
					colSpan: 4,
					colCount: 2,
					items: [{
						dataField: "pacNome", colSpan: 2,
						label: { text:"Nome", alignment: "right"},
						editorOptions: {readOnly: true}
					},{
						dataField: "pacSexo",
						label: { text:"Sexo", alignment: "right"},
						editorOptions: { readOnly: true}
					},{
						dataField: "pacNascimento",
						label: { text:"Nascimento", alignment: "right"},
						editorOptions: { readOnly: true}
					},{
						dataField: "pacProntuario",
						label: { text:"Prontuário", alignment: "right"},
						editorOptions: { readOnly: true}
					},{
						dataField: "numAgendamento",
						label: { text:"Agendamento:", alignment: "right"},
						editorOptions: { readOnly: true}
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Plano de Saúde",
					colSpan: 8,
					colCount: 4,
					items: [{
						colSpan: 2,
						dataField: "codPlanoSaudeConvenio", 
						label: { text:"Convênio", alignment: "right"},
						editorType: "dxSelectBox", 
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										return $.getJSON(urlPreparacaoOrc,{
											method:	"GetConvenio",
											pCodConvenio: args
										});
									},
									load: function(args) {
										return $.getJSON(urlPreparacaoOrc,{
											method				:	"GetConvenio",
											pSkip					:	args.skip,
											pTake					:	args.take,
											pSearchValue	:	args.searchValue,
											pCodConvenio  : "",
											pParticular 	: "",
											pFlagConvenio : 1,
											pConvenio 		: ""

										});
									}
								})
							}),
							showClearButton: true,
							onValueChanged: function (e) {
								objAdmitir.getEditor("codPlanoSaude").option("value","");
								dSPlanoSaude.reload();
							},
							displayExpr: "NomeOrganizacao",
							valueExpr: "CodOrganizacao",
							searchEnabled: true,
						}
					},{
						colSpan: 2,
						dataField: "codPlanoSaude", 
						label: { text:"Plano de Saúde", alignment: "right"},
						editorType: "dxSelectBox", 
						editorOptions: {
							showClearButton: true,
							dataSource: dSPlanoSaude,
							onValueChanged: function (e) {
								dataSourceListarHorarios.reload();
								//objAdmitirPagamento.option("disabled", true);
								if (e.value != "" && e.value != null) {
									if (#server(VAR.CSP.VARCadAdmissao.GetOrganizacaoEParticular(e.value))# == 1) {
										//objAdmitirPagamento.option("disabled", false);
									}
								}
							},
							itemTemplate: function (data, itemIndex, element) {
								if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
									retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
									nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
								}else{
									retorno = data.nomeOrganizacao;
								}
								return element.append(retorno)
							},
							displayExpr: "nomeOrganizacao",
							valueExpr: "codOrganizacao",
							searchEnabled: true,
						}
					},{
						colSpan: 2,
						dataField: "planoSaudeCarteirinha",
						editorType: "dxTextBox", 
						editorOptions: {
							onValueChanged: function (e) {
								dataSourceListarHorarios.reload();
							}
						},
						label: { text:"Nº da Carteirinha", alignment: "right"},
					},{
						colSpan: 2,
						dataField: "dataVencimentoCarteirinha",
						editorType: "dxDateBox", 
						label: { text:"Vencimento da Carterinha", alignment: "right"},
						editorOptions: {
							type: "date",
							width: 130,
							dateSerializationFormat: "yyyy-MM-dd",
						}
					},{
						colSpan: 4,
						dataField: "pSaudeEmpContratante",
						editorType: "dxSelectBox", 
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"VAREMPRESACONTRATANTE",pExibirCod:0});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						},
						label: { text:"Empresa Contratante", alignment: "right"},
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Solicitante",
					colSpan: 12,
					items: [{
						dataField: "solicitante",
						editorType: "dxTagBox",
						label: { visible	: false},
						editorOptions: {
							dataSource: dataSourceMedicoExterno,
							valueExpr: "CodProvider", 
							displayExpr: "DescProvider", 
							searchEnabled: true,
							onValueChanged: function(e) {
								var pSolicitante = e.value;
								if (e.value.length > 0) {
									codUltimoMedicoSol = e.value[e.value.length-1];
								}else{
									codUltimoMedicoSol = "";
								}
								if (pSolicitante) pSolicitante = pSolicitante.join(",");
								$.get(urlPreparacaoAgendamento,{method: "ArmSolicitante", pCodAgendamento: codAgendamento,
								pSolicitante: pSolicitante}, function(){
									dataSourceListarHorarios.reload();
								});
							},
							buttons: [{
								location:"after",
								name: "addPRocedimento",
								options:{
									icon	: "add",
									hint	: "Adicionar Médico",
									type	: "default",
									stylingMode : "contained",
									onClick	: function(){
										$("#divCadastrarMedico").dxPopup("show");
									}
								}
							}]									
						}
					}]
				},{
					itemType: "group",
					alignItemLabelsInAllGroups:false,
					colSpan: 12,
					items: [{
						itemType: "group",
						cssClass: "second-group",
						caption: "Procedimento",
						items: [{
							dataField: "procedNaoAgendados",
							label: { text:"Procedimento não Agendados", alignment: "right"},
							editorType: "dxSelectBox", 
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlSearch,{
												method							:	"GetINART",
												pCodProduto					: args,
												pRequerAgendamento 	: 0
											});
										},
										load: function(args) {
											return $.getJSON(urlSearch,{
												method							:	"GetINART",
												pSkip								:	args.skip,
												pTake								:	args.take,
												pSearchValue				:	args.searchValue,
												pRequerAgendamento 	: 0,
												pAlias							: 1,
												pItemPedido		: 1
											});
										}
									})
								}),
								onKeyDown: function (e) {
									var pCodProcedimento = objAdmitir.getEditor("procedNaoAgendados").option("value");
									if ((e.event.keyCode == 9 || e.event.keyCode == 13) && pCodProcedimento != "") {
										$.get(urlPreparacao, {method: "InserirProcedimento", pCodAgendamento: codAgendamento,
										pCodProcedimento:pCodProcedimento},function(retorno){
											dataSourceListarHorarios.reload();
											objAdmitir.getEditor("procedNaoAgendados").option("value", "");
											objAdmitir.getEditor("procedNaoAgendados").focus();  
										});
									}
								},							
								searchEnabled: true,
								displayExpr: "DescProduto",
								valueExpr: "CodProduto",
								showClearButton: true,
								buttons: [{
									location:"after",
									name: "addPRocedimento",
									options:{
										icon	: "add",
										hint	: "adicionar",
										type	: "default",
										stylingMode : "contained",
										onClick	: function(){
											var pCodProcedimento = objAdmitir.getEditor("procedNaoAgendados").option("value");
											if (pCodProcedimento == "" || pCodProcedimento == null) {
												DevExpress.ui.notify("Favor informar o procedimento.","warning");	
												return;
											}
											$.get(urlPreparacao, {method: "InserirProcedimento", pCodAgendamento: codAgendamento,
											pCodProcedimento:pCodProcedimento},function(retorno){
												//console.log(codAgendamento, retorno)
												dataSourceListarHorarios.reload();
												objAdmitir.getEditor("procedNaoAgendados").option("value", "");	
											});
										}
									}
								}]
							}
						},{
							template	: function (data, itemElement) {
								itemElement.append("<div id='divHorarios'>")
							}
						}]
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Observações",
					colSpan: 12,
					items: [{
						dataField: "observacao",
						editorType: "dxTextArea",
						label: { visible	: false},
						editorOptions: {height	: 80,}
					}]
				},{
					colSpan: 12,
					template	: function (data, itemElement) {
						itemElement.append("<div id='divAcao' style='text-align:right;border: 0px solid red;'>")
					}
				}]
			}).dxForm("instance");
			
			$("#divAcao").html("<table width='100%'>" +
														"<tr>" +
															"<td align='left' id='tdNumeroAdmissao' style='vertical-align:bottom;'>Número da Admissão: " + 
															"</td><td align='right' style='vertical-align:bottom;'>" + 
																"<div id='divAdmitirSenhas'/>&nbsp;" +
																"<div id='divAdmitirSalvar'/>&nbsp;" +
																"<div id='divAdmitirPagamento'/>&nbsp;" +
																"<div id='divAdmitirImprimir'/>&nbsp;" +
																"<div id='divAdmitirLimpar'/>&nbsp;" +
																"<div id='divAdmitirAlterarValor'/>&nbsp;" +
															"</td>" +
														"</tr>" +
												"</table>");

			objAdmitirSalvar = $("#divAdmitirSalvar").dxButton({
			  icon	: "save",
			  text	: "Salvar",
			  type	: "success",
			  stylingMode : "contained",
			  onClick	: function(){
					salvarAdmissao(0);
			  }
			}).dxButton("instance");

			function salvarAdmissao(p1){
				$.ajaxSetup({async:false});
				var arrayProcedimentoArm = [];
				var flagSol = 0;
				$(".confAgendamento").each(function( index ) {
					if ($(this).dxCheckBox("instance").option("value") == 1){
						arrayProcedimentoArm.push($(this).attr('procedimento'));
						if (#server(VAR.CSP.VARCadAdmissao.checaPEPMedico($(this).attr('procedimento')))# == 0) {
							flagSol = 1;	
						}
					};
				});
				if (arrayProcedimentoArm.length == 0) {
					DevExpress.ui.notify("Não há procedimentos a serem admitidos.","warning");		
					return;
				}
				var pArrayProcedimentoArm = "";
				if (arrayProcedimentoArm.length > 0) {
					var pArrayProcedimentoArm = arrayProcedimentoArm.join(",");
				}
				var pCodPlanoSaudeConvenio 	= objAdmitir.getEditor("codPlanoSaudeConvenio").option("value"); 
				var pCodPlanoSaude 					= objAdmitir.getEditor("codPlanoSaude").option("value"); 
				var pPlanoSaudeCarteirinha 	= objAdmitir.getEditor("planoSaudeCarteirinha").option("value"); 
				var pVencCarteirinha 				= objAdmitir.getEditor("dataVencimentoCarteirinha").option("value"); 
				var pEmpresaContratante			= objAdmitir.getEditor("pSaudeEmpContratante").option("value"); 
				var pSolicitante				= objAdmitir.getEditor("solicitante").option("value"); 
				var pObservacao					= objAdmitir.getEditor("observacao").option("value"); 
				if ((pSolicitante == null || pSolicitante == "") && flagSol == 1) {
					DevExpress.ui.notify("Informe o solicitante.","warning");		
					return;
				}
				pSolicitante = pSolicitante.join(",");
				//
				$.get(urlPreparacao, {method: "Validacao", pCodAgendamento: codAgendamento,
				pCodPlanoSaudeConvenio: pCodPlanoSaudeConvenio, pCodPlanoSaude: pCodPlanoSaude, 
				pPlanoSaudeCarteirinha: pPlanoSaudeCarteirinha, pVencCarteirinha: pVencCarteirinha,
				pEmpresaContratante: pEmpresaContratante, pArrayProcedimentoArm: pArrayProcedimentoArm, 
				pSolicitante: pSolicitante, pObservacao: pObservacao, pNumAdmissaoControle: numAdmissaoControle},
				function(strStatus){
					if (strStatus == "") {
						$.getJSON(urlPreparacao, {method: "ArmazenarAgendamento", pCodAgendamento: codAgendamento,
						pCodPlanoSaudeConvenio: pCodPlanoSaudeConvenio, pCodPlanoSaude: pCodPlanoSaude, 
						pPlanoSaudeCarteirinha: pPlanoSaudeCarteirinha, pVencCarteirinha: pVencCarteirinha,
						pEmpresaContratante: pEmpresaContratante, pArrayProcedimentoArm: pArrayProcedimentoArm, 
						pSolicitante: pSolicitante, pObservacao: pObservacao, pNumAdmissaoControle: numAdmissaoControle},
		    		function(objRetorno){ 
		    			if (objRetorno.status == 1) {
								if (p1 == 0) {
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success", 1000);
									$(".confAgendamento").each(function( index ) {
										if ($(this).dxCheckBox("instance").option("value") == 1){
											seqAgendamento = $(this).attr('seqAgendamento');
											$(".iExc-"+seqAgendamento).css("display", "none");
										};
									});
								}
								numAdmissaoControle = objRetorno.numAdmissaoControle
								$("#tdNumeroAdmissao").html("<b>Número da Admissão: </b>"+numAdmissaoControle)
								$.get(urlPreparacao,{method:"validarParticular", pCodAgendamento: codAgendamento,
								pNumAdmissaoControle: numAdmissaoControle},function(strRetorno){
									if (strRetorno == 1) {
										DevExpress.ui.notify("Favor lançar o pagamento!","warning", 1000);
										objAdmitirPagamento.option("disabled", 0);
										objAdmitirImprimir.option("disabled", 1);
									}else if (strRetorno == 2) {
										objAdmitirPagamento.option("disabled", 0);
										objAdmitirImprimir.option("disabled", 0);
									}else if (strRetorno == 3) {
										objAdmitirPagamento.option("disabled", 1);
										objAdmitirImprimir.option("disabled", 0);
									}else{
										objAdmitirPagamento.option("disabled", 1);
										objAdmitirImprimir.option("disabled", 1);
									}
								});
							}else{
								DevExpress.ui.notify(objRetorno.status,"warning", 1000);		
							}
		  			});
					}else{
						DevExpress.ui.notify(strStatus,"warning", 1000);
					}
				});
				$.ajaxSetup({async:true});
			}

			objAdmitirPagamento = $("#divAdmitirPagamento").dxButton({
			  icon	: "far fa-credit-card",
			  text	: "Lançar Pagamento",
			  type	: "default",
			  stylingMode : "contained",
			  disabled: true,
			  onClick	: function(){
					pagamento(codAgendamento, numAdmissaoControle, 0)
				}
			}).dxButton("instance");


			objAdmitirImprimir = $("#divAdmitirImprimir").dxButton({
			  icon	: "print",
			  text	: "Imprimir",
			  disabled: true,
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
					$("#divImprimir").dxPopup("show");
					dSImpressoes.reload();
				}
			}).dxButton("instance");
			
			objAdmitirSenhas = $("#divAdmitirSenhas").dxButton({
			  icon	: "fas fa-lock",
			  text	: "Guias e Senhas de Autorização",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
					cadastrarGuia();
			  }
			}).dxButton("instance");

			objAdmitirLimpar = $("#divAdmitirLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  limparAdmissao();
			  }
			}).dxButton("instance");
			
			objAdmitirAlterarValorr = $("#divAdmitirAlterarValor").dxButton({
			  icon	: "far fa-money-bill-alt",
			  text	: "Alterar Valor",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
					$("#divAlterarValor").dxPopup("show");
	  			dSAlterarValor.reload();
	  		}
			}).dxButton("instance");
			

			function limparAdmissao(){
				#server(VAR.CSP.VARCadAgendamento.LimparTemporaria(codAgendamento))#;
				codAgendamento = "";
				montarGuia();
				numAdmissaoControle = "";
				dSGuiasProcedimentos.reload();
				$("#tdNumeroAdmissao").html("&nbsp;");
				objCodigoPaciente.option("value","");
				objAgendamento.option("disabled", false);
				objSelPaciente.option("disabled", false);
				objAdmitirPagamento.option("disabled", 1);
				objAdmitirImprimir.option("disabled", 1);
				objAdmitir.option("disabled", true);
				dataSourceAgendamentos.reload();
				$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 0)
				objSelPaciente.resetValues();
				objAdmitir.resetValues();
			  dataSourceListarHorarios.reload();
			}

			function eliminarItem(pSequencia){
				seqEliminarItem = pSequencia;
				$("#divEliminarProcedimento").dxPopup("show");
				dSEliminarProcedimento.reload();
			}
	
			dataSourceListarHorarios = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						dSSolicitante = [];
						if (codAgendamento == "") return []
						var pCodConvenio = objAdmitir.getEditor("codPlanoSaudeConvenio").option("value"); 
	        	if (pCodConvenio == null) pCodConvenio = "";
						var pCodPlanoSaude = objAdmitir.getEditor("codPlanoSaude").option("value"); 
	        	if (pCodPlanoSaude == null) pCodPlanoSaude = "";
						var pPlanoSaudeCarteirinha 	= objAdmitir.getEditor("planoSaudeCarteirinha").option("value"); 
						var pVencCarteirinha 				= objAdmitir.getEditor("dataVencimentoCarteirinha").option("value"); 
	        	return $.getJSON(urlPreparacao, {method: "GetListarHorarios", pCodAgendamento: codAgendamento,
	        	pCodPlanoSaude: pCodPlanoSaude, pPlanoSaudeCarteirinha: pPlanoSaudeCarteirinha,
	        	pVencCarteirinha: pVencCarteirinha, pCodConvenio: pCodConvenio, codUltimoMedicoSol: codUltimoMedicoSol});
					},
					remove: function (key) {
						var retorno = #server(VAR.CSP.VARCadAdmissao.ApagarProcedimento(codAgendamento, key.seqAgendamento, YBED))#;
		    		if (retorno != 1) {
				    	DevExpress.ui.notify("Erro: "+retorno,"error");	
		    		}
		    	}	
				})
			});

			$("#divHorarios").dxDataGrid({
				dataSource: dataSourceListarHorarios,
				columns: [
					{	dataField: "grupo", caption: "Grupo", alignment: "center", width: "30px", groupIndex: 0},
					{	dataField: "confirmar", caption: " ", alignment: "center", width: "50px",
					cellTemplate: function (container, options) { 
						if (options.data.flagAdmitir == 0) {
							container.append(
								$("<div class='confAgendamento' procedimento='"+options.data.procedimento+"' seqAgendamento='"+options.data.seqAgendamento+"'/>").dxCheckBox({
										value: 0,
										disabled: true,
									}).appendTo(container)
							);
						}else{
						container.append(
							$("<div class='confAgendamento' procedimento='"+options.data.procedimento+"' seqAgendamento='"+options.data.seqAgendamento+"'/>").dxCheckBox({
									value: 1
								}).appendTo(container)
						);
						}						
					}},{
						dataField: "codigoTISS", caption: "Cód. TUSS", alignment: "center", width: "80px",
					},{	dataField: "procedimento", alignment: "center", minWidth: "150px", cellTemplate: function (container, options) { 
						conteudo = "<table border='0' width='100%'><tr><td>"
						if (options.data.procedAgendado == 1) {
							conteudo += "<div class='custom-item'><b>" + options.data.grupoAgendamentoDesc +" </b><br>&nbsp; &nbsp;" +
							    				options.data.procedimentoDesc + " - (" + options.data.descTempoAtendimento  + ")";
							if (options.data.trocarItem != "") {
								conteudo += "<br>&nbsp; &nbsp;"+"<span style='color:red;'>Procedimento será alterado para "+options.data.trocarItem+".</span>";
							}							conteudo += "</div>";
						}else{
							conteudo += "<div class='custom-item'><b>" + options.data.procedimentoDesc +" </b>";
							if (options.data.trocarItem != "") {
								conteudo += "<br>&nbsp; &nbsp;"+"<span style='color:red;'>Procedimento será alterado para "+options.data.trocarItem+".</span>";
							}						
							conteudo += "</div>";
						}
						conteudo += "</td><td width='50px;' align='center' style='padding-top:5px;'>";
						if (options.data.flagDescItem == 1) {
							conteudo += "<span onClick=eliminarItem('"+options.data.sequencia+"'); style='padding: 3px;border-radius: 5px;background-color:#337AB7;cursor:pointer;'>&nbsp; " +
														"<i class='fas fa-tasks' title='Desconsiderar Item no Procedimento' style='color:#ffffff;' />" +
													" &nbsp;</span>";
						}
						conteudo += "</td></tr></table>";
						container.append(
							$("<div style='text-align: left;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "qtdeProcedimento", caption: "Qtde.", alignment: "center", width: "50px"},
					{	dataField: "unidadeSala", caption: "Local do Atendimento", alignment: "center", width: "140px"},
					{	dataField: "horario", caption: "Horário", alignment: "center", width: "105px", cellTemplate: function (container, options) { 
						conteudo = "<div class='custom-item' style='width:100%'>" + options.data.horario; 
						if (options.data.ausencia == 1) {
							conteudo += "<br> <span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
																"display: inline-block;vertical-align: middle;'>&nbsp; Cancelado &nbsp;</span>";
						}
						conteudo += "</div>";
						container.append(
							$("<div style='text-align: center;width:100%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "profissionalNome", caption: "Profissional", alignment: "center", width: "140px"},
					{	dataField: "solicitante", caption: "Solicitante", alignment: "center", width: "160px", cellTemplate: function (container, options) { 
						if (dSSolicitante.length == 0) {
							var xDSSolicitante = objAdmitir.getEditor("solicitante").option("value");
							for ( var count = 0 ; count < xDSSolicitante.length; count++) {
								descProvider = #server(VAR.CSP.VARCadAgendamento.GetMEDProviderForm(xDSSolicitante[count]))#;
								listSolicitante = {CodProvider: xDSSolicitante[count], DescProvider: descProvider}		
								dSSolicitante.push(listSolicitante);
							}
						}
						if (options.data.dataAtendimento == "" && options.data.procedAgendado == 1) {
							container.append(
								$("<div class='selSolicitante' procedimento='"+options.data.procedimento+"'/>").dxSelectBox({
									dataSource: dSSolicitante,
									valueExpr: "CodProvider", 
									displayExpr: "DescProvider", 
									searchEnabled: true,
									onValueChanged: function(e) {
										$.get(urlPreparacao,{method: "ArmSolicitanteProc", pCodAgendamento: codAgendamento,
										pProcedimento: options.data.procedimento, pSequencia: options.data.sequencia, 
										pSolicitante: e.value});
									},
									value: options.data.solicitante
								}).appendTo(container)
							);
						}else{
							$("<div class='selSolicitante' procedimento='"+options.data.procedimento+"'/>").dxSelectBox({
								dataSource: dSSolicitante,
								valueExpr: "CodProvider", 
								displayExpr: "DescProvider", 
								searchEnabled: true,
								onValueChanged: function(e) {
									$.get(urlPreparacao,{method: "ArmSolicitanteProc", pCodAgendamento: codAgendamento,
									pProcedimento: options.data.procedimento, pSequencia: options.data.sequencia, 
									pSolicitante: e.value});
								},
								value: (options.data.solicitante == "" || options.data.solicitante == null ? codUltimoMedicoSol : options.data.solicitante)
							}).appendTo(container)
						}						
					}},
					{	dataField: "guiaOperadora", caption: "Núm. Guia Atribuída p/ Operadora", alignment: "center", width: "130px",},
					{	dataField: "convenio", caption: " ", alignment: "center", width: "30px", cellTemplate: function (container, options) { 
						if (options.data.problemaConvenio == "") {
							conteudo = "<i class='far fa-hospital' title='Plano de Saúde' " +
												 "style='color:#337AB7;cursor:pointer;font-size:14px;' " +
												 "onClick=planoSaude('"+options.data.sequencia+"','"+options.data.procedimento+"');/></span>";
						}else{
							conteudo = "<i class='fa-blink fas fa-exclamation-triangle' title='"+options.data.problemaConvenio+"' " +
												 "style='color:red;cursor:pointer;font-size:14px;' " +
												 "onClick=planoSaude('"+options.data.sequencia+"','"+options.data.procedimento+"');/></span>";
						}
						container.append(
							$("<div style='text-align: center;width:100%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "excluir", caption: " ", alignment: "center", width: "30px", cellTemplate: function (container, options) { 
						if (options.data.procedAgendado != 1 && options.data.controleAdmissao == "") {
							conteudo = "<i class='far fa-trash-alt iExc-"+options.data.seqAgendamento+"' title='Excluir procedimento' " +
												 "style='color:#337AB7;cursor:pointer;font-size:14px;' " +
												 "onClick='excluirProcedimento("+options.rowIndex+")';/></span>";
						}else{
							conteudo = "";
						}
						container.append(
							$("<div style='text-align: center;width:100%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "espaco", caption: " ", alignment: "center", width: "15px"}
				],
    		columnChooser: { enabled: false, mode: "dragAndDrop"},
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: false },
				height: 300,
			});
			
			function excluirProcedimento(pLinha){
				$('#divHorarios').dxDataGrid('instance').deleteRow(pLinha);  
			}

			$("#divCadastrarMedico").dxPopup({
				visible: false,
				title: "Cadastrar Médico Solicitante",
				width: 650,
				height: 200,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					formCadastrarMedico = $("<div id='formCadastrarMedico'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 4,
						items: [
							{dataField: "Nome", label: { text: "Nome"}, colSpan: 4},
							{dataField: "CRMUF", label: { text: "U.F. CRM"}, colSpan: 1},
							{dataField: "CRMNumero", label: { text: "Número CRM"}, colSpan: 1, editorType: "dxNumberBox"},
							{dataField: "CBO", colSpan: 2, label: { text: "CBO"}, editorType: "dxSelectBox",
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"CBO",pExibirCod:1});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}},
							{},
							{itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save",
								onClick: function(){
									var pNome = $("#formCadastrarMedico").dxForm("instance").getEditor("Nome").option("value");
									var pUFCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMUF").option("value");
									var pCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMNumero").option("value");
									//pré medicaçãoPreMedicacao
									if (pNome == "" || pUFCRM == "" || pCRM == "" ) {
										DevExpress.ui.notify("É obrigatório preencher todos os campos","warning",1500);
										return;
									}
									$.get(urlPreparacaoAgendamento,{method:"ArmMedico", pNome:pNome, 
										pUFCRM:pUFCRM, pCRM:pCRM,YBED:YBED},function(objeto){
										var array = objeto.split("|")
										if (array[0]==1){
											dataSourceMedicoExterno.reload();
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											$("#divCadastrarMedico").dxPopup("hide");
											xArray = objAdmitir.getEditor("solicitante").option("value");
											xArray.push(array[1]);
											objAdmitir.getEditor("solicitante").option("value", xArray);
										}else{
											DevExpress.ui.notify("Erro: "+array[0],"error");
										}
									});
								}}
							},
							{itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									$("#divCadastrarMedico").dxPopup("hide");
								}}
							}
						]
					});
					
					e.append(formCadastrarMedico);
				}        		
			});
			
			dSImpressoes = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "GetRelatorios", pCodAgendamento: codAgendamento, pNumAdmissaoControle: numAdmissaoControle});
					},
				})
			});
			
			$("#divImprimir").dxPopup({
				visible: false,
				title: "Seleção de Documentos",
				width: 500,
				height: 300,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				onHidden: function(){
					if (flagImpAbaPesq == 1) {
						codAgendamento = "";
						numAdmissaoControle = "";
						flagImpAbaPesq = "";
					}else{
						salvarAdmissao(1);	
					}
					objArquivo = $("#gridArquivos").dxDataGrid("instance");
					objArquivo.clearSelection();
					#server(VAR.CSP.VARCadAdmissao.SelecionarImp(YBED, "L"))#;
				},
				contentTemplate: function(e) {
					formArquivos = $("<div id='formArquivos'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 4,
						items: [{
							colSpan: 4,
							template	: function (data, itemElement) {
								itemElement.append("<div id='gridArquivos'>")
							}
						},{},{},{
							itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Imprimir",type	: "default", icon: "print",
								onClick: function(){
									#server(VAR.CSP.VARCadAdmissao.SelecionarImp(YBED, "L"))#;
									objArquivo = $("#gridArquivos").dxDataGrid("instance");
									var pRelatorios 	= "";
									var pDataHoraAdm 	= "";
									var conteudo = objArquivo.getSelectedRowsData();
			            for (var count = 0; count < conteudo.length; count ++) {
										if (pRelatorios != "") pRelatorios += ","
				            pRelatorios += conteudo[count].sequencia
										var rs = #server(VAR.CSP.VARCadAdmissao.SelecionarImp(YBED, "A", conteudo[count].dataHoraAdmI, conteudo[count].sequencia, codAgendamento, numAdmissaoControle))#;
				          }
									if (pRelatorios == "") {
										DevExpress.ui.notify("Selecione o relatório a ser impresso.","warning");		
										return;
									}
									$.post(urlPreparacao,{method:"Imprimir", pCodAgendamento: codAgendamento, pNumAdmissaoControle: numAdmissaoControle, 
									pRelatorios: pRelatorios, pFlagImpAbaPesq: flagImpAbaPesq},function(retorno){
										eval(retorno);
									})
            		}
							}
						},{
							itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									$("#divImprimir").dxPopup("hide");
								}
							}
						}]
					});
					e.append(formArquivos);
					objArquivos = $("#gridArquivos").dxDataGrid({
						dataSource: dSImpressoes,
						selection: {
          	  mode: "multiple"
        		},
						columns: [
							//{	dataField: "dataHoraAdm", caption: "Data/Hora Admissão",  groupIndex: 0, sortIndex: 0, sortOrder: "desc"},
							{	dataField: "descricao", caption: "Relatório"}
						],
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: false,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: false,
						hoverStateEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: true },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 200,
					});
				}        		
			});

			dSAlterarProcProcedimento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						if (altProcFlagProcAgen == 1) {
							return $.getJSON(urlPreparacao,{
								method							:	"GetProcedimentoAlteracao",
								pCodProduto					: args
							});
						}else{
							return $.getJSON(urlSearch,{
								method							:	"GetINART",
								pCodProduto					: args,
								pRequerAgendamento 	: 0,
								pAlias				: 1,
								pItemPedido		: 1
							});
							
						}
					},
					load: function(args) {
						if (altProcFlagProcAgen == 1) {
							return $.getJSON(urlPreparacao,{
								method							:	"GetProcedimentoAlteracao",
								pSkip								:	args.skip,
								pTake								:	args.take,
								pSearchValue				:	args.searchValue,
								pAltProcAgeProcAnt	: altProcAgeProcAnt
							});
						}else{
							return $.getJSON(urlSearch,{
								method							:	"GetINART",
								pSkip								:	args.skip,
								pTake								:	args.take,
								pSearchValue				:	args.searchValue,
								pRequerAgendamento 	: 0,
								pAlias							: 1,
								pItemPedido					: 1
							});
						}
					}
				})
			});

			$("#divAlterarProcedimento").dxPopup({
				visible: false,
				title: "Alteração de Procedimento",
				width: 500,
				height: 150,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					formAltProcedimento = $("<div id='formAltProcedimento'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 5,
						items: [{
							colSpan: 5,
							dataField: "procedimento",
							label: { text: "Procedimento"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dSAlterarProcProcedimento,
								searchEnabled: true,
								displayExpr: "DescProduto",
								valueExpr: "CodProduto",
							}
						},{colSpan: 3},{
							itemType: "button", horizontalAlignment: "right", buttonOptions: {
			 					icon: "save", text: "Salvar", type: "success", stylingMode: "contained",
								onClick: function(){
									objAltProcedimento = $("#formAltProcedimento").dxForm("instance");
									var pProdutoAlt = objAltProcedimento.getEditor("procedimento").option("value");
									
									if (pProdutoAlt == null || pProdutoAlt == "") {
										DevExpress.ui.notify("Selecione o procedimento.","warning");		
										return;
									}
									$.get(urlPreparacao,{method:"SalvarAltProcedimento", pCodAgendamento: altProcAgendand, 
									pSequencia: altProcAgeSeq, pProcAnt: altProcAgeProcAnt, pProcNovo: pProdutoAlt},
									function(objRetorno){
										if (status ==  1) {
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											altProcAgendand			= "";
											altProcAgeSeq				= "";
											altProcAgeProcAnt		= "";
											altProcFlagProcAgen = "";
											$("#divAlterarProcedimento").dxPopup("hide");
											listarAgendamentoAdmissoes();
										}else {
											DevExpress.ui.notify("Erro: "+status,"error");
										}
									})
            		}
							}
						},{
							itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									altProcAgendand			= "";
									altProcAgeSeq				= "";
									altProcAgeProcAnt		= "";
									altProcFlagProcAgen = "";
									$("#divAlterarProcedimento").dxPopup("hide");
								}
							}
						}]
					});
					e.append(formAltProcedimento);
				}        		
			});

			dSPlanoSaudeAlt = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = $("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value");
						return $.getJSON(urlPreparacaoAgendamento,{
							method:	"GetPlanoSaudeCampo",
							pCodOrganizacao: pCodConvenio
						});
					}
				})
			});

			dSGuiasCadAlt = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "ListGuias", pCodAgendamento: altProcAgendand, 
						pNumAdmissaoControle: "", pSequencia: ""});
					},
				})
			});

			$("#divAlterarConvenio").dxPopup({
				visible: false,
				title: "Alteração de Convênio/Plano de Saúde ou Guias e Senhas de Autorização",
				width: 950,
				height: 500,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				onHidden: function(){
					$("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option({value: ""});
					$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option({value: ""});
				},
				contentTemplate: function(e) {
					formAltConvenio = $("<div id='formAlterarConvenio'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 4,
						items: [{
							colSpan: 4,
							dataField: "procedimento",
							label: { text: "Procedimento"},
							editorType: "dxTextBox",
							editorOptions: {
								readOnly: true
							}
						},{
							colSpan: 3,
							dataField: "componente",
							label: { text: "Componente"},
							editorType: "dxSelectBox",
							editorOptions: {
								showClearButton: true,
								dataSource: dSComponente,
								valueExpr: "id", 
								displayExpr: "text", 
								onValueChanged: function (e) {
									$("#formAlterarConvenio").dxForm("instance").getEditor("qtdeComponente").option({readOnly: true, value: ""})
									$.getJSON(urlPreparacao, {method: "GetConvenioAlteracao", pCodAgendamento: altProcAgendand, 
										pSequencia: altProcAgeSeq, pComponente: e.value}, function(objRetorno) {
											//console.log(objRetorno)
											$("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option({value: objRetorno.codGuia});
											if (e.value == "" || e.value == null) {
												$("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option({readOnly: false, value: objRetorno.convenio});
												$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option({readOnly: false, value: objRetorno.planoSaude});
												$("#formAlterarConvenio").dxForm("instance").getEditor("valor").option({readOnly: false, value: objRetorno.valor});
												$("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option({readOnly: false, value: objRetorno.carteirinha});
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option({readOnly: false, value: objRetorno.dtVencimento});
												$("#formAlterarConvenio").dxForm("instance").getEditor("qtdeComponente").option({readOnly: true, value: ""})
												$("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option({readOnly: false, value: objRetorno.solicitante});
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataExecucao").option({readOnly: false, value: objRetorno.dataExecucao});
											}else{
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataExecucao").option({readOnly: false, value: objRetorno.dataExecucao});
												$("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option({readOnly: true, value: objRetorno.solicitante});
												$("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option({readOnly: true, value: objRetorno.convenio});
												$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option({readOnly: true, value: objRetorno.planoSaude});
												$("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option({readOnly: true, value: objRetorno.carteirinha});
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option({readOnly: true, value: objRetorno.dtVencimento});
												$("#formAlterarConvenio").dxForm("instance").getEditor("valor").option({readOnly: false, value: e.component._options.selectedItem.valor});
												$("#formAlterarConvenio").dxForm("instance").getEditor("qtdeComponente").option({readOnly: false, value: objRetorno.qtde})
											}
									});
								},
							}
						},{
							colSpan: 1,
							dataField: "qtdeComponente",
							label: { text: "Qtde. Componente"},
							editorType: "dxNumberBox",
						},{
							colSpan: 3,
							dataField: "solicitante",
							label: { text: "Solicitante"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dataSourceMedicoExterno,
								valueExpr: "CodProvider", 
								displayExpr: "DescProvider", 
								searchEnabled: true,
								buttons: [{
									location:"after",
									name: "addPRocedimento",
									options:{
										icon	: "add",
										hint	: "Adicionar Médico",
										type	: "default",
										stylingMode : "contained",
										onClick	: function(){
											$("#divCadastrarMedico").dxPopup("show");
										}
									}
								}]									
							}
						},{
							colSpan: 1,
							dataField: "dataExecucao",
							label: { text: "Data Execução"},
							editorType: "dxDateBox",
							editorOptions: {
								type: "date",
								width: 130,
								dateSerializationFormat: "yyyy-MM-dd",
							}
						},{
							colSpan: 2,
							itemType: "group",
							cssClass: "second-group",
							caption: "Convênio/Plano de Saude",
							colCount: 7,
							items: [{							
								colSpan: 7,
								dataField: "convenio",
								label: { text: "Convênio"},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: new DevExpress.data.DataSource({
										store: new DevExpress.data.CustomStore({
											byKey: function(args) {
												return $.getJSON(urlPreparacaoOrc,{
													method:	"GetConvenio",
													pCodConvenio: args
												});
											},
											load: function(args) {
												return $.getJSON(urlPreparacaoOrc,{
													method				:	"GetConvenio",
													pSkip					:	args.skip,
													pTake					:	args.take,
													pSearchValue	:	args.searchValue,
													pCodConvenio  : "",
													pParticular 	: 0,
													pFlagConvenio : 1,
													pConvenio 		: ""

												});
											}
										})
									}),
									showClearButton: true,
									onValueChanged: function (e) {
										$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value","");
										dSPlanoSaudeAlt.reload();
									},
									displayExpr: "NomeOrganizacao",
									valueExpr: "CodOrganizacao",
									searchEnabled: true,
								}
							},{
								colSpan: 7,
								dataField: "planoSaude",
								label: { text: "Plano de Saúde"},
								editorType: "dxSelectBox",
								editorOptions: {
								showClearButton: true,
									dataSource: dSPlanoSaudeAlt,
									itemTemplate: function (data, itemIndex, element) {
										if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
											retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
											nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
										}else{
											retorno = data.nomeOrganizacao;
										}
										return element.append(retorno)
									},
									displayExpr: "nomeOrganizacao",
									valueExpr: "codOrganizacao",
									onValueChanged: function (e) {
										var pCodPlano = e.value;
										if (!e.value) pCodPlano = "";
										$.get(urlPreparacao, {method: "GetValorProcedimento", pCodAgendamento: altProcAgendand, 
										pSequencia: altProcAgeSeq, pCodPlano: pCodPlano}, function(valor) {
											$("#formAlterarConvenio").dxForm("instance").getEditor("valor").option("value",valor);
										});
									},
									searchEnabled: true,
								}
							},{
								colSpan: 3,
								dataField: "carteirinha",
								label: { text: "Carteirinha"},
								editorType: "dxTextBox",
							},{
								colSpan: 2,
								dataField: "dataVencimento",
								label: { text: "Vencimento Carteirinha"},
								editorType: "dxDateBox",
								editorOptions: {
									type: "date",
									width: 130,
									dateSerializationFormat: "yyyy-MM-dd",
								}
							},{
								colSpan: 2,
								dataField: "valor",
								label: { text: "Valor"},
								editorType: "dxNumberBox",
								editorOptions: {
									format: "#,##0.00",
								}
							}]
						},{
							colSpan: 2,
							itemType: "group",
							cssClass: "second-group",
							caption: "Guia e Senha de Autorização",
							colCount: 3,
							items: [{
								colSpan: 2,
								dataField: "codGuia",
								label: { text:"Guia"},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: dSGuiasCadAlt,
									onValueChanged: function(e) {
										if (e.value) {
											$.getJSON(urlPreparacao, {method: "GetGuia", pCodAgendamento: altProcAgendand, 
											pNumAdmissaoControle: "", pSequencia: e.value}, function(objRetorno) {
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option({"readOnly": true, value: objRetorno.dataAutorizacao});
												$("#formAlterarConvenio").dxForm("instance").getEditor("senha").option({"readOnly": true, value: objRetorno.senha});
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option({"readOnly": true, value: objRetorno.validadeSenha});
												$("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option({"readOnly": true, value: objRetorno.numGuia});
											});
										}else{
											$("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value", "");
											$("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option({"readOnly": false, value: ""});
											$("#formAlterarConvenio").dxForm("instance").getEditor("senha").option({"readOnly": false, value: ""});
											$("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option({"readOnly": false, value: ""});
											$("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option({"readOnly": false, value: ""});
										}
									},
									showClearButton: true,
									searchEnabled: false,
									valueExpr: "sequencia", 
									displayExpr: "descricao",
								}
							},{colSpan: 1},{
								dataField: "dataAutorizacao",
								label: { text:"Data Autorização"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "senha",
								label: { text:"Senha"},
							},{
								dataField: "dataValidade",
								label: { text:"Data de Validade Senha"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "numGuiaOperadora",
								label: { text:"Número da Guia Atribuída pela Operadora:"},
							}]
						},{
							colSpan: 2,
							itemType: "button", horizontalAlignment: "right", buttonOptions: {
			 					icon: "save", text: "Salvar", type: "success", stylingMode: "contained",
								onClick: function(){
									var pComponente = $("#formAlterarConvenio").dxForm("instance").getEditor("componente").option("value");
									var pQtdeComp		= $("#formAlterarConvenio").dxForm("instance").getEditor("qtdeComponente").option("value")
	
									//console.log(pComponente+"|"+pQtdeComp)
	
									var pSolicitante 		= $("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option("value");
									
									var pDataExecucao		= $("#formAlterarConvenio").dxForm("instance").getEditor("dataExecucao").option("value");
									
									var pCodConvenio 		= $("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value");
									var pCodPlano				=	$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value");
									var pNumCarteirinha	= $("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option("value");
									var pDtCarteirinha	= $("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option("value");
									var pValor					= $("#formAlterarConvenio").dxForm("instance").getEditor("valor").option("value");

									var pCodGuia 					= $("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value");
									var pDtAutorizacao 		= $("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option("value");
									var pSenha 						= $("#formAlterarConvenio").dxForm("instance").getEditor("senha").option("value");
									var pDtValidade 			= $("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option("value");
									var pNumGuiaOperadora = $("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option("value");

									if ((pComponente == "" || pComponente == null) && (pSolicitante == "" || pSolicitante == null)) {
										DevExpress.ui.notify("Favor informar o solicitante.","warning");
										return;
									}
									//console.log(pDataExecucao)
									$.get(urlPreparacao,{method:"ArmConvenioAlteracao", pCodAgendamento: altProcAgendand, 
									pSequencia: altProcAgeSeq, pCodConvenio: pCodConvenio, pCodPlano: pCodPlano,
									pNumCarteirinha: pNumCarteirinha, pDtCarteirinha: pDtCarteirinha, pCodGuia: pCodGuia,
									pDtAutorizacao: pDtAutorizacao, pSenha: pSenha, pDtValidade: pDtValidade,
									pNumGuiaOperadora: pNumGuiaOperadora,pSolicitante:pSolicitante,pComponente: pComponente,
									pQtdeComp: pQtdeComp, pValor: pValor, pDataExecucao: pDataExecucao},function(objRetorno){
										if (objRetorno ==  1) {
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											/*altProcAgendand			= "";
											altProcAgeSeq				= "";
											altProcAgeProcAnt		= "";
											altProcFlagProcAgen = "";
											$("#divAlterarConvenio").dxPopup("hide");*/
											dSGuiasCadAlt.reload();
											listarAgendamentoAdmissoes();
										}else {
											DevExpress.ui.notify(objRetorno,"warning");
										}
									})
            		}
							}
						},{
							colSpan: 2,
							itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									altProcAgendand			= "";
									altProcAgeSeq				= "";
									altProcAgeProcAnt		= "";
									altProcFlagProcAgen = "";
									$("#divAlterarConvenio").dxPopup("hide");
								}
							}
						}]
					});
					e.append(formAltConvenio);
				}        		
			});
			
			dSPagProcedimentos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						var d = $.Deferred();
						$.getJSON(urlPreparacao,{ method: "GetPagProcedimentos", pCodAgendamento: codAgendamento,
						pNumAdmissaoControle: numAdmissaoControle},function(objRetorno){
							d.resolve(objRetorno.grid);
							objFormPagamento.getEditor("totalBruto").option({value: objRetorno.valorTotal});
						});
						return d.promise();
					},
				})
			});

			dSPagFomPagamento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						return $.getJSON(urlPreparacao,{ method: "GetPagForPagamento", pPagFormaPagamento: pagFormaPagamento});
					},
				})
			});

			dSPagPagamentos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						return $.getJSON(urlPreparacao,{ method: "GetPagForPagamento", pPagFormaPagamento: pagSelTipoForPag});
					},
				})
			});
			
			$("#divCadPagamento").dxPopup({
				visible: false,
				title: "Pagamento",
				width: 950,
				height: 480,
				onHidden: function(){
					if (flagPagAbaPesq == 1) {
						codAgendamento = "";
						flagPagAbaPesq = "";
						pagSelTipoForPag = "";
						pagFormaPagamento = "";
						#server(VAR.CSP.VARCadAdmissao.RemoverFormaPagamento(YBED, 1))#;
						listarCadPagamento()
					}else{
						salvarAdmissao(1);	
					}
				},
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					formPagamento = $("<div id='formPagamento' style='height:420px;overflow-y:auto;overflow-x:hidden;'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						alignItemLabelsInAllGroups: false,						
						labelLocation: "left",
						colCount: 8,
						items: [{
							colSpan: 4,
							itemType: "group",
							cssClass: "second-group",
							caption: "Pagador",
							items: [{
								dataField: "pagador", 
								label: { text:"Próprio paciente?", alignment: "right"},
								editorType: "dxRadioGroup",
								editorOptions: {
									layout: "horizontal",
									valueExpr: "id", 
									displayExpr: "text",
									dataSource: [{id: 1, text: "Sim"},{id: 0, text: "Não"}],
									onValueChanged: function (e) {
										objFormPagamento = $("#formPagamento").dxForm("instance");
										if (e.value == 1) {
											$.getJSON(urlPreparacao, {method: "GetPagamento", pCodAgendamento: codAgendamento, pNumAdmissaoControle: numAdmissaoControle},
											function(objRetorno){
												objFormPagamento.getEditor("tipoDocumento").option({value: "cpf", disabled: 1});
												objFormPagamento.getEditor("numeroDocumento").option({value: objRetorno.documentoPaciente, readOnly: 1});
												objFormPagamento.getEditor("nome").option({value:  objRetorno.nomePaciente, readOnly: 1});
											});
										}else{
											objFormPagamento.getEditor("tipoDocumento").option({value: "", disabled: 0})
											objFormPagamento.getEditor("numeroDocumento").option({value: "", readOnly: 0});
											objFormPagamento.getEditor("nome").option({value: "", readOnly: 0});
										}
					        }
								}
							},{
								dataField: "tipoDocumento", 
								label: { text:"Tipo do Documento:", alignment: "right"},
								editorType: "dxRadioGroup",
								editorOptions: {
									layout: "horizontal",
									valueExpr: "id", 
									displayExpr: "text",
									dataSource: [{id: "cpf", text: "CPF"},{id: "cnpj", text: "CNPJ"}]
								}
							},{
								dataField: "numeroDocumento", 
								label: { text:"Nº Documento:", alignment: "right"},
								editorOptions: {
									width: 150,
									maxLength: 14,
									onValueChanged: function (e) {
										if (!e.value) return;
										if ($("#formPagamento").dxForm("instance").getEditor("tipoDocumento").option("value") == "cpf") {
											if (!validarCPF(e.value)) {
												DevExpress.ui.notify("CPF invalido.","warning");	
												$("#formPagamento").dxForm("instance").getEditor("numeroDocumento").option("value", "");
												$("#formPagamento").dxForm("instance").getEditor("numeroDocumento").focus();  
											}
										}
									}
								}, 
							},{
								dataField: "nome", 
								label: { text:"Nome:", alignment: "right"},
							}],								
						},{
							colSpan: 4,
							itemType: "group",
							cssClass: "second-group",
							items: [{
								colSpan: 1, template: function (data, itemElement) { itemElement.append("<div style='height:0px;border:0px solid red;text-align:right'>")}
							},{
								dataField: "procedimentos", 
								label: {visible: false},
								editorType: "dxDataGrid",
								editorOptions: {
									dataSource: dSPagProcedimentos,
									columns: [
										{dataField: "procedimento", alignment: "center"},
										{dataField: "valor", format: "#,##0.00", caption: "Preço", alignment: "center", width: 100},
									],
									rowTemplate: function(container, item) {
										var data 		= item.data;
										var markup = "<tbody class='employee dx-row " + ((item.rowIndex % 2) ? 'dx-row1' : 'dx-row2') + "'>" +
											"<tr>" +
												"<td align='left' style='border:1px solid #dddddd;'>" + 
													(
														data.descGrupoAgendamento == "" ? 
														"<b>" + data.descProcedimento + "</b>" :
														"<b>" + data.descGrupoAgendamento + "</b><br>&nbsp;" + data.descProcedimento
													) + 
												"</td>" +  
												"<td align='right' style='border:1px solid #dddddd;'>" + data.valor + "</td>" +  
											"</tr>" +
										"</tbody>";
										container.append(markup);
									},
					    		columnChooser: { enabled: false, mode: "dragAndDrop"},
									showColumnHeaders:true,
									allowColumnReordering: false,
									columnAutoWidth: true,
									showColumnLines: true,
									showRowLines: true,
									rowAlternationEnabled: true,
									showBorders: true,
									headerFilter: { visible: false },
									grouping: { autoExpandAll: false },
									groupPanel: { visible: false, allowColumnDragging: true },
									columnFixing: { enabled: false },
									filterRow: { visible: false },
									export: { enabled: false },
									stateStoring: { enabled: false }, 
									wordWrapEnabled: true,
									searchPanel: { visible:false },
									height: 161
								}
							},{
								colSpan: 1, template: function (data, itemElement) { itemElement.append("<div style='height:0px;border:0px solid red;text-align:right'>")}
							}],								
						},{
							colSpan: 8,
							colCount: 5,
							itemType: "group",
							cssClass: "second-group",
							items: [{
								colSpan: 5, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
							},{
								dataField: "totalBruto", 
								label: { text:"Total Bruto:", alignment: "right"},
								editorType: "dxNumberBox",
								editorOptions: {
									format: "#,##0.00",
									width: 75,
									readOnly: true	
								}
							},{
								dataField: "descontoValor", 
								label: { text:"Desconto - R$:", alignment: "right"},
								editorType: "dxNumberBox",
								editorOptions: {
									format: "#,##0.00",
									width: 75,	
									onValueChanged: function(e){
										if (bloqLimparPag == 1) return;
										if (e.value > 0) {
											$("#formPagamento").dxForm("instance").getEditor("descontoPercentual").option("value", 0);
											valorTotal = $("#formPagamento").dxForm("instance").getEditor("totalBruto").option("value");
											valorPago  = $("#formPagamento").dxForm("instance").getEditor("valorPago").option("value");
											valorPendente = valorTotal - valorPago - e.value;
											$("#formPagamento").dxForm("instance").getEditor("valorPendente").option("value", valorPendente);
											if (valorPendente < 0) {
												DevExpress.ui.notify("Valor pendente não pode ser negativo.","warning");										
												$("#formPagamento").dxForm("instance").getEditor("descontoValor").option("value", 0);
												valorTotal = $("#formPagamento").dxForm("instance").getEditor("totalBruto").option("value");
												valorPago  = $("#formPagamento").dxForm("instance").getEditor("valorPago").option("value");
												valorPendente = valorTotal - valorPago;
												$("#formPagamento").dxForm("instance").getEditor("valorPendente").option("value", valorPendente);
												return;												
											}
										}
									}
								}
							},{
								dataField: "descontoPercentual", 
								label: { text:"ou %", alignment: "right"},
								editorType: "dxNumberBox",
								editorOptions: {
									min: 0,
									max: 100,
									width: 75,
									onValueChanged: function(e){
										if (bloqLimparPag == 1) return;
										if (e.value > 0) {
											$("#formPagamento").dxForm("instance").getEditor("descontoValor").option("value", 0);
											valorTotal = $("#formPagamento").dxForm("instance").getEditor("totalBruto").option("value");
											valorPago  = $("#formPagamento").dxForm("instance").getEditor("valorPago").option("value");
											valorDesc	 = ((valorTotal * e.value) / 100)
											valorPendente = valorTotal - valorPago - valorDesc;
											$("#formPagamento").dxForm("instance").getEditor("valorPendente").option("value", valorPendente);
											if (valorPendente < 0) {
												DevExpress.ui.notify("Valor pendente não pode ser negativo.","warning");										
												$("#formPagamento").dxForm("instance").getEditor("descontoPercentual").option("value", 0);
												valorTotal = $("#formPagamento").dxForm("instance").getEditor("totalBruto").option("value");
												valorPago  = $("#formPagamento").dxForm("instance").getEditor("valorPago").option("value");
												valorPendente = valorTotal - valorPago;
												$("#formPagamento").dxForm("instance").getEditor("valorPendente").option("value", valorPendente);
												return;												
											}
										}
									}
								}
							},{
								dataField: "valorPago", 
								label: { text:"Valor Pago:", alignment: "right"},
								editorType: "dxNumberBox",
								editorOptions: {
									format: "#,##0.00",
									width: 75,
									readOnly: true	
								}
							},{
								dataField: "valorPendente", 
								label: { text:"Valor Pendente:", alignment: "right"},
								editorType: "dxNumberBox",
								editorOptions: {
									format: "#,##0.00",
									width: 75,
									readOnly: true	
								}
							},{
								label: { text:"Forma de Pagamento:", alignment: "right"},
								colSpan: 5,
								colCount: 5,
								alignItemLabelsInAllGroups: false,						
								itemType: "group",
								items: [{
									dataField: "formaPagamentoBoleto", 
									label: { visible: false},
									editorType: "dxCheckBox",
									editorOptions: {
										text: "Boleto Bancário", 
										onValueChanged: function(e) {
											if (bloqLimparPag == 0) {
												if (!e.value) {
													$.get(urlPreparacao, {method: "RemoverFormaPagamento", pCodAgendamento: codAgendamento, pFormaPagamento: "BB"});	
												}
												pagFormaPagamento = ""
												objFormPagamento = $("#formPagamento").dxForm("instance");
												if (objFormPagamento.getEditor("formaPagamentoBoleto").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "BB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoCredito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CC";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDebito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CD";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDeposito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDinheiro").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DI";	
												}
												dSPagFomPagamento.reload();
											}
										}
									}
								},{
									dataField: "formaPagamentoCredito", 
									label: { visible: false},
									editorType: "dxCheckBox",
									editorOptions: {
										text: "Cartão de crédito", 
										onValueChanged: function(e) {
											if (bloqLimparPag == 0) {
												if (!e.value) {
													$.get(urlPreparacao, {method: "RemoverFormaPagamento", pCodAgendamento: codAgendamento, pFormaPagamento: "CC"});
												}
												pagFormaPagamento = ""
												objFormPagamento = $("#formPagamento").dxForm("instance");
												if (objFormPagamento.getEditor("formaPagamentoBoleto").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "BB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoCredito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CC";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDebito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CD";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDeposito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDinheiro").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DI";	
												}
												dSPagFomPagamento.reload();
											}
										} 
									}
								},{
									dataField: "formaPagamentoDebito", 
									label: { visible: false},
									editorType: "dxCheckBox",
									editorOptions: {
										text: "Cartão de débito", 
										onValueChanged: function(e) {
											if (bloqLimparPag == 0) {
												if (!e.value) {
													$.get(urlPreparacao, {method: "RemoverFormaPagamento", pCodAgendamento: codAgendamento, pFormaPagamento: "CD"});	
												}
												pagFormaPagamento = ""
												objFormPagamento = $("#formPagamento").dxForm("instance");
												if (objFormPagamento.getEditor("formaPagamentoBoleto").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "BB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoCredito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CC";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDebito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CD";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDeposito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDinheiro").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DI";	
												}
												dSPagFomPagamento.reload();
											}
										} 
									}
								},{
									dataField: "formaPagamentoDeposito", 
									label: { visible: false},
									editorType: "dxCheckBox",
									editorOptions: {
										text: "Depósito bancário", 
										onValueChanged: function(e) {
											if (bloqLimparPag == 0) {
												if (!e.value) {
													$.get(urlPreparacao, {method: "RemoverFormaPagamento", pCodAgendamento: codAgendamento, pFormaPagamento: "DB"});	
												}
												pagFormaPagamento = ""
												objFormPagamento = $("#formPagamento").dxForm("instance");
												if (objFormPagamento.getEditor("formaPagamentoBoleto").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "BB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoCredito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CC";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDebito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CD";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDeposito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDinheiro").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DI";	
												}
												dSPagFomPagamento.reload();
											} 
										}
									}
								},{
									dataField: "formaPagamentoDinheiro", 
									label: { visible: false},
									editorType: "dxCheckBox",
									editorOptions: {
										text: "Dinheiro", 
										onValueChanged: function(e) {
											if (bloqLimparPag == 0) {
												if (!e.value) {
													$.get(urlPreparacao, {method: "RemoverFormaPagamento", pCodAgendamento: codAgendamento, pFormaPagamento: "DI"});	
												}
												pagFormaPagamento = ""
												objFormPagamento = $("#formPagamento").dxForm("instance");
												if (objFormPagamento.getEditor("formaPagamentoBoleto").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "BB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoCredito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CC";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDebito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "CD";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDeposito").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DB";	
												}
												if (objFormPagamento.getEditor("formaPagamentoDinheiro").option("value")) {
													pagFormaPagamento = pagFormaPagamento + (pagFormaPagamento==""?"":",") + "DI";	
												}
												dSPagFomPagamento.reload();
											}
										} 
									}
								}]
							},{
								colSpan: 5, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
							}],								
						},{
							colSpan: 8,
							colCount: 4,
							itemType: "group",
							cssClass: "second-group",
							caption: "Forma de Pagamento",
							items: [{
								dataField: "tipoPagamento", 
								label: { visible: false},
								editorType: "dxList",
								editorOptions: {
									dataSource: dSPagFomPagamento,
									showScrollbar: "alwayis",
									valueExpr: "contador", 
									displayExpr: "descricao",
									itemTemplate: function(item) {
									  return "<div style='white-space: normal; color: "+(item.fInfo != 0 ? "red" : "")+"' data-bind='text: text'>" + 
									  					(item.fInfo != 0 ? "<b>" : "") +
									  					item.descricao + 
									  					(item.fInfo != 1 ? "</b>" : "") +
									  				"</div>";
									},
									onItemClick: function(e){
										pagSelTipoForPag = e.itemData.formaPagamento+"|"+e.itemData.contador;
										listarCadPagamento();
									},
									height: 200							
								}
							},{
								colSpan: 3,
								label: { visible: false},
								template	: function (data, itemElement) {
									itemElement.append("<div id='divCadPagamentoPagamentos'>")
								}								
							}],								
						},{colSpan: 6},{
							itemType: "button", horizontalAlignment: "right", buttonOptions: {
			 					icon: "save", text: "Salvar", type: "success", stylingMode: "contained",
								onClick: function(){
									objFormPagamento = $("#formPagamento").dxForm("instance");
									
									var pPagProprio					= objFormPagamento.getEditor("pagador").option("value");
									var pPagTipoDocumento 	= objFormPagamento.getEditor("tipoDocumento").option("value");
									var pPagNumDocumento 		= objFormPagamento.getEditor("numeroDocumento").option("value");
									var pPagNome 						= objFormPagamento.getEditor("nome").option("value");
									var pPpagValorDesc 			= objFormPagamento.getEditor("descontoValor").option("value");
									var pPpagPercDesc 			= objFormPagamento.getEditor("descontoPercentual").option("value");
									var pPpagFormPag 				= pagFormaPagamento;
            			
									var pValorPendente 			= objFormPagamento.getEditor("valorPendente").option("value");
            			
            			if (pPagProprio == 0 && (pPagTipoDocumento == "" || pPagNumDocumento == "" || pPagNome == "")) {
	            			DevExpress.ui.notify("Favor informar os campos Tipo de Documento, Nº do documento e Nome.","warning");	
	            			return
            			}
            			
            			if (pValorPendente < 0) {
	            			DevExpress.ui.notify("Valor pendente não pode ser negativo.","warning");	
	            			return
            			}
            			
            			$.get(urlPreparacao, {method: "ArmPagamento", pCodAgendamento: codAgendamento,
            			pNumAdmissaoControle: numAdmissaoControle,  
            			pPagProprio: pPagProprio, pPagTipoDocumento: pPagTipoDocumento, 
            			pPagNumDocumento: pPagNumDocumento, pPagNome: pPagNome, pPpagValorDesc: pPpagValorDesc,
            			pPpagPercDesc: pPpagPercDesc, pPpagFormPag: pPpagFormPag}, function(status){
				       			if (status == 1) {
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											/*console.log("Aqui:"+flagPagAbaPesq)
											if (flagPagAbaPesq != 1) {
												salvarAdmissao(1);	
											}*/
											$("#divCadPagamento").dxPopup("hide");
										}else{
											DevExpress.ui.notify("Erro: "+status,"error");
				       			}
            			});
				       	}
							}
						},{
							itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									$("#divCadPagamento").dxPopup("hide");
								}
							}
						}]
					});
					e.append(formPagamento);
				}        		
			});
			
			function listarCadPagamento() {
				if ($("#divCadPagamentoPagamentos1")) $("#divCadPagamentoPagamentos1").remove();
				$("#divCadPagamentoPagamentos").html("<div id='divCadPagamentoPagamentos1'></div>");

				if (pagSelTipoForPag == "") return;

				if (pagSelTipoForPag.split("|")[0] == "BB") {
					column = [
						{dataField: "numero", caption: "Número do Boleto"},
						{dataField: "data", caption:" Data de Vencimento",  dataType: "date", width: 150, editorOptions: {dateSerializationFormat: "yyyy-MM-dd"}},
						{dataField: "valor", format: "#,##0.00", caption: "Valor", dataType: "number", width: 100},
					];
				}
				if (pagSelTipoForPag.split("|")[0] == "CC" || pagSelTipoForPag.split("~")[0] == "CD") {
					column = [
						{dataField: "operadoraDesc", caption: "Operadora", setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var desc = #server(User.Search.PesquisasJson.GetDescricaoVARPARA("OPERADORACARTAO", value))#;
							objLinha.defaultSetCellValue(rowData, desc);
							rowData.operadora = value;	
				  	}
				  },
						{dataField: "numero", caption: "Número do Documento", width: 150},
						{dataField: "data", caption:" Data de Transação",  dataType: "date", width: 150, editorOptions: {dateSerializationFormat: "yyyy-MM-dd"}},
						{dataField: "valor", format: "#,##0.00", caption: "Valor", dataType: "number", width: 100},
					];
				}
				if (pagSelTipoForPag.split("|")[0] == "DB") {
					column = [
						{dataField: "numero", caption: "Número do Recibo"},
						{dataField: "data", caption:" Data Prevista de Recebimento",  dataType: "date", width: 150, editorOptions: {dateSerializationFormat: "yyyy-MM-dd"}},
						{dataField: "valor", format: "#,##0.00", caption: "Valor", dataType: "number", width: 100},
					];
				}
				if (pagSelTipoForPag.split("|")[0] == "DI") {
					column = [
						{dataField: "data", caption:" Data de Recebimento",  dataType: "date", editorOptions: {dateSerializationFormat: "yyyy-MM-dd"}},
						{dataField: "valor", format: "#,##0.00", caption: "Valor", dataType: "number", width: 150},
					];
				}

				$("#divCadPagamentoPagamentos1").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
				  		key: "nseq",
							loadMode: "raw",   
							load: function(){
			        	return $.getJSON(urlPreparacao, {method: "GetPagPagamento",pPagFormaPagamento: pagSelTipoForPag},
			        	function(rs){
				        	calculaValorPendente();
				       	});
							},
				  		insert: function (values) {
					  		objDados = new Array;
								for (var coluna in values) {
									if (values.hasOwnProperty(coluna)) {
										valor = values[coluna];
										objDados.push(coluna+"~"+valor);
									}
								}
								var retorno = #server(VAR.CSP.VARCadAdmissao.InserirPagamento(pagSelTipoForPag, objDados, YBED))#;
				    	},
							remove: function (key) {
								var retorno = #server(VAR.CSP.VARCadAdmissao.ExcluirPagamento(pagSelTipoForPag, key, YBED))#;
				    	}					
						})
					}),
					columns: column,
					onEditorPreparing: function(e) {
						if (e.parentType == "dataRow" && e.dataField == "operadoraDesc") {
							e.editorName = "dxSelectBox"; 
							e.editorOptions.dataSource = new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									loadMode: "raw",   
									load: function(){
										return $.getJSON(urlPreparacao,{ method: "GetOperadoraCartao"});
									},
								})
							});
							e.editorOptions.value = e.row.data.operadora;
							e.editorOptions.displayExpr = "text";
							e.editorOptions.valueExpr = "id";
							e.editorOptions.searchEnabled = true;
							e.editorOptions.onValueChanged = function(arg) {
								e.setValue(arg.value);
							}
						}
					},
	    		columnChooser: { enabled: false, mode: "dragAndDrop"},
					showColumnHeaders:true,
					allowColumnReordering: false,
					columnAutoWidth: true,
					showColumnLines: true,
					showRowLines: true,
					editing: { mode: "line", allowAdding: true, allowUpdating: false, allowDeleting: true, useIcons: true },
					rowAlternationEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: false },
					groupPanel: { visible: false, allowColumnDragging: true },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible:false },
					height: 100
				});
			}
			
			dSEliminarProcedimento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	if (seqEliminarItem == "") return [];
	        	return $.getJSON(urlPreparacao, {method: "GetItensEliminar", pCodAgendamento: codAgendamento,
	        	pSequencia: seqEliminarItem});
					},update: function (key, values) {
			  		objDados = new Array;
						qtde = 1;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								qtde = values[coluna];
							}
						}
						var retorno = #server(VAR.CSP.VARCadAdmissao.ArmQtdeItens(codAgendamento, seqEliminarItem, key.item, qtde, YBED))#;
		    	},		
				})
			});
			
			$("#divEliminarProcedimento").dxPopup({
				visible: false,
				title: "Considerar Procedimento/Item",
				width: 650,
				height: 350,
				onHidden: function(e){
					dataSourceListarHorarios.reload();
				},
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					gridEliminarProcedimento = $("<div id='gridEliminarProcedimento'>").dxDataGrid({
						dataSource: dSEliminarProcedimento,
						columns: [
							{	dataField: "procedimento", allowEditing: 0, caption: "Procedimento", alignment: "center", width: "50px", groupIndex: 0},
							{	dataField: "confirmar", caption: " ", allowEditing: 0, alignment: "center", width: "50px", cellTemplate: function (container, options) { 
								container.append(
									$("<div class='confAgendamento' procedimento='"+options.data.procedimento+"'/>").dxCheckBox({
											value: options.data.considerar,
											onValueChanged: function(e) {
												var considerar = 1
												if (!e.value) considerar = 0
												var rs = #server(VAR.CSP.VARCadAdmissao.ArmItensEliminar(codAgendamento, seqEliminarItem, options.data.item, considerar, YBED))#;
											}
										}).appendTo(container)
								);
							}},
							{	dataField: "itemDesc", caption: "Item", allowEditing: 0 }, 
							{	dataField: "qtde", caption: "Qtde", alignment: "right", width: "80px", allowEditing: 1},
							{	dataField: "acao", caption: " ", alignment: "right", width: "30px", allowEditing: 0}
						],
						editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: true },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible:false },
						height: 300
					});
					e.append(gridEliminarProcedimento);
				}        		
			});

			function tentativaContato(pNumAgendamento){
				numAgendTentCont = pNumAgendamento;
				$("#divTentativaContato").dxPopup("show");
				dSTentContato.reload();
			}

			dSTentContato = new DevExpress.data.DataSource({
  			store: new DevExpress.data.CustomStore({
      		loadMode: "raw",   
      		load: function() {
          	return $.getJSON(urlPreparacaoAgendamento,{method:"GetTentContato",pCodAgendamento:numAgendTentCont});
      		}
  			})
			});

			$("#divTentativaContato").dxPopup({
				visible: false,
				title: "Registro de Tentativa de Contato",
				width: 800,
				height:  350,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='formTentativaContato'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						labelLocation: "top",
						colCount: 6,
						items: [{
							colSpan: 6,
							template	: function (data, itemElement) {
								itemElement.append("<div id='gridTentativaContato'>")
							}
						}]
					});
					e.append(conteudo);
					$("#gridTentativaContato").dxDataGrid({
						dataSource:dSTentContato,
						columns: [
							{dataField: "dataHora", caption: "Data/Hora", alignment: "center", width: 130},
							{dataField: "usuario", caption: "Responsável", alignment: "center", width: 200},
							{dataField: "registro", caption: "Registro", alignment: "center"},
						],
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 300
					});
				}
			});
			
			function planoSaude(pSequencia, pProcedimento){
				var pCodPlanoSaudeConvenio 	= objAdmitir.getEditor("codPlanoSaudeConvenio").option("value"); 
				var pCodPlanoSaude 					= objAdmitir.getEditor("codPlanoSaude").option("value"); 
				var pPlanoSaudeCarteirinha 	= objAdmitir.getEditor("planoSaudeCarteirinha").option("value"); 
				var pVencCarteirinha 				= objAdmitir.getEditor("dataVencimentoCarteirinha").option("value"); 
				$.getJSON(urlPreparacao,{method: "GetPlanoSaude", pCodAgendamento: codAgendamento, pSequencia: pSequencia,
				pProcedimento: pProcedimento, pCodPlanoSaudeConvenio: pCodPlanoSaudeConvenio, pCodPlanoSaude: pCodPlanoSaude, 
				pPlanoSaudeCarteirinha: pPlanoSaudeCarteirinha, pVencCarteirinha: pVencCarteirinha}, function(objRetorno){
					dataSourcePS 	= objRetorno.arrayDS
					codProcPS			= pProcedimento;
					codConvenioPS	= "";
					$("#divPlanoSaude").dxPopup("show");
					$("#formPlanoSaude").dxForm("instance").getEditor("procedimento").option("value",objRetorno.descProcedimento);
					dataSourcePSCad.reload();
				});
			}

			dataSourcePSCad = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return dataSourcePS;
					},
					insert: function (values) {
			  		objeto = {
				  		"id": values.codConvenio+"~"+values.codPlanoSaude+"~"+values.carteirinha+"~"+values.vencimento,
				  		"carteirinha":  values.carteirinha,
							"codConvenio": values.codConvenio,
							"codPlanoSaude": values.codPlanoSaude,
							"descConvenio": values.descConvenio,
							"descPlanoSaude": values.descPlanoSaude,
							"vencimento": values.vencimento
			  		}
		    		dataSourcePS.push(objeto);
		    	},
				})
			});
			
			dataSourcePSPlanSau = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlPreparacaoOrc,{
							method:	"GetConvenio",
							pCodConvenio: args
						});
					},
					load: function(args) {
						var pCodConvenio = objAdmitir.getEditor("codPlanoSaudeConvenio").option("value");
						return $.getJSON(urlPreparacaoOrc,{
							method				:	"GetConvenio",
							pSkip					:	args.skip,
							pTake					:	args.take,
							pSearchValue	:	args.searchValue,
							pCodConvenio  : "",
							pParticular 	: "",
							pFlagConvenio : "",
							pConvenio 		: codConvenioPS
						});
					}
				})
			});

			
			$("#divPlanoSaude").dxPopup({
				visible: false,
				title: "Plano de Saúde",
				width: 1100,
				height:  400,
				onHidden: function(e){
					dataSourcePS 	= [];
					codProcPS			= "";
					codConvenioPS	= "";
				},
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='formPlanoSaude'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						labelLocation: "top",
						colCount: 2,
						items: [{
							colSpan: 2,
							dataField: "procedimento",
							editorType: "dxTextBox", 
							label: { text:"Procedimento:"},
							editorOptions: {readOnly: true}
						},{
							colSpan: 2,
							template	: function (data, itemElement) {
								itemElement.append("<div id='gridPlanos'>")
							}
						},
							{itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save",
								onClick: function(){
									objDG = $("#gridPlanos").dxDataGrid("instance");
									var pCodConvenio = "";
									var pCodPlanSaud = "";
									var pCarteirinha = "";
									var pVencimento  = "";
									if (objDG.getSelectedRowsData().length > 0) {
										var objeto = objDG.getSelectedRowsData();
										pCodConvenio = objeto[0].codConvenio;
										pCodPlanSaud = objeto[0].codPlanoSaude;
										if (objeto[0].carteirinha) pCarteirinha = objeto[0].carteirinha;
										if (objeto[0].vencimento) pVencimento  = objeto[0].vencimento;
									}else{
										DevExpress.ui.notify("Selecione uma linha na tabela.","warning");	
										return;
									}
									$.get(urlPreparacao,{ method:	"SetPlanoSaude", pCodAgendamento: codAgendamento, 
									pProcedimento: codProcPS,	pCodConvenio: pCodConvenio, pCodPlanSaud: pCodPlanSaud,
									pCarteirinha: pCarteirinha, pVencimento: pVencimento}, function(objRetorno){
										dataSourcePS 	= [];
										codProcPS			= "";
										codConvenioPS	= "";
										dataSourceListarHorarios.reload();
										$("#divPlanoSaude").dxPopup("hide");
									});
								}
							}},
							{itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
										dataSourcePS 	= [];
										codProcPS			= "";
										codConvenioPS	= "";
									$("#divPlanoSaude").dxPopup("hide");
								}}
							}]	
					});
					e.append(conteudo);
					$("#gridPlanos").dxDataGrid({
						dataSource: dataSourcePSCad,
						selection: {
            	mode: "single"
        		},
						columns: [
							{	dataField: "descConvenio", caption: "Convênio", alignment: "center",
								setCellValue: function (rowData, value) {
			        		if (value == "" || value == null) return
		        			objLinha = this;
		        			var descConvenio = #server(User.Search.PesquisasJson.GetOrganizacaoNome(value))#;
									objLinha.defaultSetCellValue(rowData, descConvenio);
									codConvenioPS = value;
									dataSourcePSPlanSau.reload();
									rowData.codPlanoSaude 	= "";	
									rowData.descPlanoSaude 	= "";	
									rowData.codConvenio = value;	
					  		}
					  	},
							{dataField: "descPlanoSaude", caption: "Plano de Saúde", alignment: "center",
								setCellValue: function (rowData, value) {
			        		if (value == "" || value == null) return
		        			objLinha = this;
		        			var descPlanoSaude = #server(User.Search.PesquisasJson.GetOrganizacaoNome(value))#;
									objLinha.defaultSetCellValue(rowData, descPlanoSaude);
									rowData.codPlanoSaude = value;
					  		}
					  	},
							{dataField: "carteirinha", caption: "Nº da Carteirinha", alignment: "center"},
							{dataField: "vencimento", caption: "Vencimento da Carteirinha", alignment: "center", dataType: "date", width: 130},
						],
						onEditorPreparing: function(e) {
							if (e.parentType == "dataRow" && e.dataField == "descConvenio") {
								e.editorName = "dxSelectBox"; 
								e.editorOptions.dataSource = new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacaoOrc,{
												method:	"GetConvenio",
												pCodConvenio: args
											});
										},
										load: function(args) {
											return $.getJSON(urlPreparacaoOrc,{
												method				:	"GetConvenio",
												pSkip					:	args.skip,
												pTake					:	args.take,
												pSearchValue	:	args.searchValue,
												pCodConvenio  : "",
												pParticular 	: "",
												pFlagConvenio : 1,
												pConvenio 		: ""

											});
										}
									})
								});
								e.editorOptions.value = e.row.data.codConvenio;
								e.editorOptions.displayExpr = "NomeOrganizacao";
								e.editorOptions.valueExpr = "CodOrganizacao";
								e.editorOptions.searchEnabled = true;
								e.editorOptions.onValueChanged = function(arg) {
									e.setValue(arg.value);
								}
							}
							if (e.parentType == "dataRow" && e.dataField == "descPlanoSaude") {
								e.editorName = "dxSelectBox"; 
								e.editorOptions.dataSource = dataSourcePSPlanSau;
								e.editorOptions.value = e.row.data.codConvenio;
								e.editorOptions.displayExpr = "NomeOrganizacao";
								e.editorOptions.valueExpr = "CodOrganizacao";
								e.editorOptions.searchEnabled = true;
								e.editorOptions.onValueChanged = function(arg) {
									e.setValue(arg.value);
								}
							}
						},
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						editing: { mode: "batch", allowAdding: true, allowUpdating: false, allowDeleting: false, useIcons: true },
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 250
					});
				}
			});
			
			function cadastrarGuia(){
				seqGuia = "";
				recuperarGuia(1);
			}
		  
		  function recuperarGuia(pOpen){
				$.getJSON(urlPreparacao, {method: "GetGuia", pCodAgendamento: codAgendamento, 
				pNumAdmissaoControle: numAdmissaoControle, pSequencia: seqGuia}, function(objRetorno) {
					if (pOpen == 1) $("#divGuia").dxPopup("show");
					if (objRetorno.sequencia != "") {
						formGuia = $("#formGuia").dxForm("instance");
						seqGuia = objRetorno.sequencia;
						formGuia.getEditor("codGuia").option({value: seqGuia });
						formGuia.getEditor("dataAutorizacao").option({"readOnly": true, value: objRetorno.dataAutorizacao});
						formGuia.getEditor("senha").option({"readOnly": true, value: objRetorno.senha});
						formGuia.getEditor("dataValidade").option({"readOnly": true, value: objRetorno.validadeSenha});
						formGuia.getEditor("numGuiaOperadora").option({"readOnly": true, value: objRetorno.numGuia});
						formGuia.getEditor("Salvar").option({"disabled": true});
						dSGuiasCadastradas.reload();
					}
					if (seqGuia != "") {
						$("#gridGuiaProcedimentos").dxDataGrid("instance").option("disabled", false);
						dSGuiasProcedimentos.reload();
					}else{
						$("#gridGuiaProcedimentos").dxDataGrid("instance").option("disabled", true);
					}
				});
		  }
			
			dSGuiasCadastradas = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "ListGuias", pCodAgendamento: codAgendamento, 
						pNumAdmissaoControle: numAdmissaoControle, pSequencia: seqGuia});
					},
				})
			});

			dSGuiasProcedimentos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						if (codAgendamento == "") return [];
						var pCodPlanoSaude = objAdmitir.getEditor("codPlanoSaude").option("value");
						return $.getJSON(urlPreparacao, {method: "ListProcedimentosGuia", pCodAgendamento: codAgendamento, 
						pNumAdmissaoControle: numAdmissaoControle, pSequencia: seqGuia, pCodPlanoSaude:pCodPlanoSaude},
						function(rs){});
					},
				})
			});
			
			dSGuiasCad = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						if (codAgendamento == "") return [];
	        	return $.getJSON(urlPreparacao, {method: "ListGuias", pCodAgendamento: codAgendamento, 
						pNumAdmissaoControle: numAdmissaoControle, pSequencia: ""},function(rs){});
					},
				})
			});
			 
			function montarGuia() {
				$("#divGuia").html("");
				dSGuiasCad.reload();
				dtRetroativa = #server(VAR.CSP.VARCadAdmissao.GetDtRetroativa(codAgendamento, YBED))#;
				$("#divGuia").dxPopup({
					visible: false,
					title: "Guias e Senhas de Autorização",
					width: 700,
					height:  600,
					onHidden: function(e){
						selGuia = 1;
						$(".confAgendamentoTitulo").dxCheckBox("instance").option("value", false);
						seqGuia = "";
						dataSourceListarHorarios.reload();
					},
					position: {
						my: "center", 
						at: "center",
						of: window
					},
					dragEnabled: true,
					contentTemplate: function(e) {
						conteudo = $("<div id='formGuia'>").dxForm({
							readOnly: false,
							alignItemLabels: true,
							showColonAfterLabel: false,
							labelLocation: "top",
							colCount: 3,
							items: [{
								colSpan: 1,
								dataField: "codGuia",
								label: { text:"Guia:"},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: dSGuiasCad,
									onValueChanged: function(e) {
										formGuia = $("#formGuia").dxForm("instance");
										if (!e.value) {
											seqGuia = "";
											formGuia.getEditor("codGuia").option("value", "");
											formGuia.getEditor("dataAutorizacao").option({"readOnly": false, value: ""});
											formGuia.getEditor("senha").option({"readOnly": false, value: ""});
											formGuia.getEditor("dataValidade").option({"readOnly": false, value: ""});
											formGuia.getEditor("numGuiaOperadora").option({"readOnly": false, value: ""});
											formGuia.getEditor("Salvar").option({"disabled": false});
											dSGuiasCadastradas.reload();
											$("#gridGuiaProcedimentos").dxDataGrid("instance").option("disabled", true);
										}else{
											seqGuia = e.value;
											recuperarGuia(0);
										}
									},
									searchEnabled: false,
									valueExpr: "sequencia", 
									displayExpr: "descricao",
								}
							},{colSpan: 1},{
								dataField: "dataAdmRetroativa",
								label: { text:"Data Execução"},
								editorType: "dxDateBox",
								editorOptions : { 
									useMaskBehavior: true, readOnly: !agendRetroativa, 
									dateSerializationFormat: "yyyy-MM-dd", value: dtRetroativa,
									onValueChanged: function(e){
										selGuia = 1;
										$(".confAgendamentoTitulo").dxCheckBox("instance").option("value", false);
										pDtRetroativa = "";
										if (e.value) pDtRetroativa = e.value;
										#server(VAR.CSP.VARCadAdmissao.SetDtRetroativa(codAgendamento, pDtRetroativa, YBED))#;
									}
								}
							},{
								dataField: "dataAutorizacao",
								label: { text:"Data Autorização:"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "senha",
								label: { text:"Senha:"},
							},{
								dataField: "dataValidade",
								label: { text:"Data de Validade Senha:"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "numGuiaOperadora",
								label: { text:"Número da Guia Atribuída pela Operadora:"},
							},{
								colSpan: 3,
								colCount: 2,
								itemType: "group",
								items: [{
									dataField:"Salvar" ,itemType: "button", horizontalAlignment: "right", buttonOptions: {
	           			text: "Salvar",type	: "success", icon: "save",
									onClick: function(){
										formGuia = $("#formGuia").dxForm("instance");
										pDataAut = formGuia.getEditor("dataAutorizacao").option("value");
										pSenha = formGuia.getEditor("senha").option("value");
										pVencSenha = formGuia.getEditor("dataValidade").option("value");
										pNumGuia = formGuia.getEditor("numGuiaOperadora").option("value");
										if (pDataAut == "" ) {
											DevExpress.ui.notify("Informar o campo Data de Autorização","warning");		
											return
										}
										$.getJSON(urlPreparacao, {method: "SetGuia", pCodAgendamento: codAgendamento, 
										pNumAdmissaoControle: numAdmissaoControle, pSequencia: seqGuia, pDataAut: pDataAut,
										pSenha: pSenha, pVencSenha: pVencSenha, pNumGuia: pNumGuia}, function(objRetorno){
											if (objRetorno.status == 1) {
												DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
												seqGuia = objRetorno.sequencia;
												/*formGuia.getEditor("dataAutorizacao").option("readOnly", true);
												formGuia.getEditor("senha").option("readOnly", true);
												formGuia.getEditor("dataValidade").option("readOnly", true);
												formGuia.getEditor("numGuiaOperadora").option("readOnly", true);
												formGuia.getEditor("Salvar").option({"disabled": true});
												$("#gridGuiaProcedimentos").dxDataGrid("instance").option("disabled", false);*/
												dSGuiasCad.reload();
												setTimeout(function(){
													formGuia.getEditor("codGuia").option("value",seqGuia);
													dSGuiasProcedimentos.reload();
												}, 200);
											}else{
												DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
											}
										});
									}
								}},
								{itemType: "button", horizontalAlignment: "left", buttonOptions: {
			          	type	: "default", text: "Novo", icon: "add",
									onClick: function(){
										formGuia = $("#formGuia").dxForm("instance");
										seqGuia = "";
										formGuia.getEditor("codGuia").option("value", "");
										formGuia.getEditor("dataAutorizacao").option({"readOnly": false, value: ""});
										formGuia.getEditor("senha").option({"readOnly": false, value: ""});
										formGuia.getEditor("dataValidade").option({"readOnly": false, value: ""});
										formGuia.getEditor("numGuiaOperadora").option({"readOnly": false, value: ""});
										formGuia.getEditor("Salvar").option({"disabled": false});
										dSGuiasCadastradas.reload();
										$("#gridGuiaProcedimentos").dxDataGrid("instance").option("disabled", true);
									}}
								}]
							},{
								colSpan: 3,
								itemType: "group",
								caption: "Procedimentos",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='gridGuiaProcedimentos'>")
									}
								}]
							},{
								colSpan: 3,
								itemType: "button", horizontalAlignment: "center", buttonOptions: {
			          	type	: "default", text: "Fechar", icon: "close",
									onClick: function(){
										seqGuia = "";
										$("#divGuia").dxPopup("hide");
									}
								}
							}]
						});
						e.append(conteudo);
						
						$("#gridGuiaCadastradas").dxDataGrid({
							dataSource: dSGuiasCadastradas,
							columns: [
								{dataField: "dataAutorizacao", caption: "Data de Autorização", width: 100},
								{dataField: "senha", caption: "Senha", width: 150},	
								{dataField: "validadeSenha", caption: "Validade da Senha", width: 100},	
								{dataField: "numGuia", caption: "Número da Guia Atribuída pela Operadora"}	
							],
							columnChooser: { enabled: false, mode: "dragAndDrop"},
							showColumnHeaders:true,
							allowColumnReordering: false,
							columnAutoWidth: true,
							showColumnLines: true,
							showRowLines: true,
							rowAlternationEnabled: true,
							showBorders: true,
							hoverStateEnabled: true,
							onRowClick: function(e){
								seqGuia = e.key.sequencia	;
								recuperarGuia(0);
							},
							headerFilter: { visible: false },
							grouping: { autoExpandAll: false },
							groupPanel: { visible: false, allowColumnDragging: true },
							columnFixing: { enabled: false },
							filterRow: { visible: false },
							export: { enabled: false },
							stateStoring: { enabled: false }, 
							wordWrapEnabled: true,
							searchPanel: { visible: false },
							height: 250
						});
						
						$("#gridGuiaProcedimentos").dxDataGrid({
							disabled: true,
							dataSource: dSGuiasProcedimentos,
							columns: [
								{	dataField: "confirmar", caption: " ", alignment: "center", width: "50px", allowReordering: false, allowSorting:false,
									cellTemplate: function (container, options) { 
										container.append(
											$("<div class='confAgendamento'/>").dxCheckBox({
												value: (options.data.selecionado == 1 ? true : false),
												onValueChanged: function(e){
													var selecionado = 0;
													if (e.value) selecionado = 1;
													#server(VAR.CSP.VARCadAdmissao.SelecionaGuia(codAgendamento, options.data.sequencia, options.data.componente, seqGuia, selecionado, YBED))#;
													if (selGuia == 2) {
														selGuia = 0;
														return;
													}
													selGuia = 1;
													$(".confAgendamentoTitulo").dxCheckBox("instance").option("value", false);
												}
											}).appendTo(container)
										);
									}, headerCellTemplate: function (container, options) { 
										container.append(
											$("<div class='confAgendamentoTitulo'/>").dxCheckBox({
												onValueChanged: function(e){
													if (selGuia == 1) {
														selGuia = 0;
														return;
													}
													var selecionado = 0;
													if (e.value) selecionado = 1;
													$(".confAgendamento").each(function(index){
														if (selecionado) {
															if ($(this).dxCheckBox("instance").option("value") == false) {
																selGuia = 2;
																$(this).dxCheckBox("instance").option("value", true)
															}
														}else{
															if ($(this).dxCheckBox("instance").option("value") == true) {
																selGuia = 2;
																$(this).dxCheckBox("instance").option("value", false)
															}
														}
													});
												}
											}).appendTo(container)
										);
									}
								},
								{dataField: "procedimento", caption: "Procedimento"},
								{dataField: "atendimento", caption: "Atendimento"},
							],
							onInitialized: function (e) {
								//selGuia = 1;
								//$(".confAgendamentoTitulo").dxCheckBox("instance").option("value", false);
							},
							columnChooser: { enabled: false, mode: "dragAndDrop"},
							showColumnHeaders:true,
							allowColumnReordering: false,
							columnAutoWidth: true,
							showColumnLines: true,
							showRowLines: true,
							rowAlternationEnabled: true,
							showBorders: true,
							headerFilter: { visible: false },
							grouping: { autoExpandAll: false },
							groupPanel: { visible: false, allowColumnDragging: true },
							columnFixing: { enabled: false },
							filterRow: { visible: false },
							export: { enabled: false },
							stateStoring: { enabled: false }, 
							wordWrapEnabled: true,
							searchPanel: { visible: false },
							height: 245
						});
						
					}
				});
			}
	
			dSHistorico = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "GetHistorico", pCodAgendamento: codAgendamento, 
						pNumAdmissaoControle: numAdmissaoControle});
					},
				})
			});
	
			function alteraCor(container, options) {
				var coluna 		= options.column.dataField;
				var cor 			= options.data[coluna+"Cor"];
				var conteudo 	= options.text;
				container.html("<span style='color:"+cor+";'>"+conteudo+"</span>");
			}
	
			$("#divHistorico").dxPopup({
				visible: false,
				title: "Histórico",
				width: 1000,
				height:  600,
				position: {my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='gridHistorico'>").dxDataGrid({
						dataSource: dSHistorico,
						columns: [
							{dataField: "contAdmissao", caption: "Admissão", alignment: "center", width: 120, groupIndex: 0, allowSorting: 0},
							{dataField: "paciente", caption: "Paciente", alignment: "left", width: 250, visible: 0, allowSorting: 0},
							{caption: "Alteração", columns: [
								{dataField: "dtLog", caption: "Data", alignment: "center", width: 80, dataType: "date", allowSorting: 0},
								{dataField: "hrLog", caption: "Hora", alignment: "center", width: 80, allowSorting: 0},
								{dataField: "usuario", caption: "Usuário", alignment: "center", width: 150, allowSorting: 0},
								{dataField: "antigoNovo", caption: "Antigo/Novo", alignment: "center", width: 90, allowSorting: 0},
							]},
							{caption: "Procedimento", columns: [
								{dataField: "grupo", caption: "Grupo", alignment: "left", width: 250, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "procedimento", alignment: "left", width: 250, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "profissional", caption: "Profissional", alignment: "left", width: 250, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "sala", caption: "Sala", alignment: "center", width: 150, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "leito", caption: "Leito", alignment: "center", width: 150, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "qtde", caption: "Qtde.", dataType: "number", width: 80, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "valor", caption: "Valor", dataType: "number", format: "#,##0.00", width: 80, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "dataAtendimento", caption: "Data Atendimento", alignment: "center", width: 80, dataType: "date", cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "horaAtendimento", caption: "Hora Atendimento", alignment: "center", width: 80, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "dataHoraAdmisao", caption: "Data/Hora Admissão", alignment: "center", width: 170, dataType: "datetime", cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "solicitante", caption: "Solicitante", alignment: "left", width: 250, cellTemplate: alteraCor, allowSorting: 0},
							]},
							{dataField: "numAgendamento", caption: "Agendamento", alignment: "center", width: 120, visible: 0, cellTemplate: alteraCor, allowSorting: 0},
							{dataField: "numAdmissao", caption: "Admissão (PEP)", alignment: "center", width: 120, visible: 0, cellTemplate: alteraCor, allowSorting: 0},
							{caption: "Plano de Saúde", columns: [
								{dataField: "convenio", caption: "Convênio", alignment: "left", width: 250, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "planoSaude", caption: "Plano de Saúde", alignment: "left", width: 250, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "carteirinha", caption: "Carteirinha", alignment: "left", width: 150, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "vencCarteirinha", caption: "Validade", alignment: "center", width: 80, dataType: "date", cellTemplate: alteraCor, allowSorting: 0},
							]},
							{caption: "Guia e Senha de Autorização", columns: [
								{dataField: "dtAutorizacao", caption: "Data Autorização", alignment: "center", width: 80, dataType: "date", cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "senha", caption: "Senha", alignment: "left", width: 150, cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "dtValidadeSenha", caption: "Validade Senha", alignment: "center", width: 80, dataType: "date", cellTemplate: alteraCor, allowSorting: 0},
								{dataField: "numGuiaAtr", caption: "Número da Guia Atribuída pela Operadora", alignment: "left", width: 250, cellTemplate: alteraCor, allowSorting: 0},
							]},
						],
			    	columnChooser: { enabled: true, mode: "dragAndDrop"},
						showColumnHeaders: true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: true },
						groupPanel: { visible: false, allowColumnDragging: false },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: true },
						height: 540,
					});
					e.append(conteudo);
				}
			});
			
			dSAlterarValor = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						var pCodPlanoSaude = objAdmitir.getEditor("codPlanoSaude").option("value");
						return $.getJSON(urlPreparacao, {method: "GetProcedimentoAltValor",  pCodAgendamento: codAgendamento, 
						pNumAdmissaoControle: numAdmissaoControle, pCodPlanoSaude:pCodPlanoSaude},function(rs){});
					},
					update: function (key, values) {
			  		objDados = new Array;
						valor = 0;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
							}
						}
						var retorno = #server(VAR.CSP.VARCadAdmissao.SetProcedimentoAltValor(codAgendamento, numAdmissaoControle, key.codProcedimento, key.nSeq, valor, YBED))#;
		    	},
				})
			});
			
			$("#divAlterarValor").dxPopup({
				visible: false,
				title: "Alterar Valor",
				width: 800,
				height:  500,
				position: {my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='gridAlterarValor'>").dxDataGrid({
						dataSource: dSAlterarValor,
						columns: [
							{dataField: "descProcedimento", caption: "Procedimento", allowEditing: 0},
							{dataField: "valor", caption: "Valor", dataType: "number", width: 120, format: "#,##0.00"},
						],
						editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
			    	columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders: true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: true },
						groupPanel: { visible: false, allowColumnDragging: false },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 440,
					});
					e.append(conteudo);
				}
			});
			
			function adicionarProcedimento(pCodAgendamento, pCodAdmissao) {
				addNumAgendamento = pCodAgendamento;
				addNumAdmissao 		= pCodAdmissao;
				$.getJSON(urlPreparacao, {method: "CarregarDadosAgendamento", pCodAgendamento: addNumAgendamento},
				function(obtRetorno){
					$("#divAdicionarConvenio").dxPopup("show");
					$("#formAddConvenio").dxForm("instance").resetValues();
					$("#formAddConvenio").dxForm("instance").getEditor("convenio").option("value", obtRetorno.codConvenio);
					setTimeout(function(){
						$("#formAddConvenio").dxForm("instance").getEditor("planoSaude").option("value", obtRetorno.codPlanoSaude);
						$("#formAddConvenio").dxForm("instance").getEditor("carteirinha").option("value", obtRetorno.codCarteirinha);
						$("#formAddConvenio").dxForm("instance").getEditor("dataVencimento").option("value", obtRetorno.vencCarteirinha);
					}, 500);
				});
				//onClick=alterarConvenio('"+data.numeroAgend+"','"+data.procedimentos[count].sequencia+"','"+data.procedimentos[count].codProcedimento+"','"+data.procedimentos[count].procedAgendado+"')				
			}
			
			dSGuiasAdd = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "ListGuias", pCodAgendamento: addNumAgendamento, 
						pNumAdmissaoControle: "", pSequencia: ""});
					},
				})
			});
			
			dSPlanoSaudeAdd = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = $("#formAddConvenio").dxForm("instance").getEditor("convenio").option("value");
						return $.getJSON(urlPreparacaoAgendamento,{
							method:	"GetPlanoSaudeCampo",
							pCodOrganizacao: pCodConvenio
						});
					}
				})
			});			

			dSProfSala = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodProcedimento = $("#formAddConvenio").dxForm("instance").getEditor("procedimento").option("value");
						return $.getJSON(urlPreparacao,{method:	"GetProfSalaLeito",pCodProcedimento: pCodProcedimento},function(rs){console.log(rs)});
					}
				})
			});		

			dSHoraProfSala = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodProcedimento 	= $("#formAddConvenio").dxForm("instance").getEditor("procedimento").option("value");
						var pCodProfSala 			= $("#formAddConvenio").dxForm("instance").getEditor("profissional").option("value");
						var pData 						= $("#formAddConvenio").dxForm("instance").getEditor("data").option("value");
						return $.getJSON(urlPreparacao,{method:	"GetHorarioProfSalaLeito",pCodProcedimento: pCodProcedimento,
						pCodProfSala: pCodProfSala, pData: pData},function(rs){console.log(rs)});
					}
				})
			});		

			$("#divAdicionarConvenio").dxPopup({
				visible: false,
				title: "Adicionar Procedimento",
				width: 950,
				height: 500,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				onHidden: function(){
					addNumAgendamento = "";
					addNumAdmissao 		= "";
				},
				contentTemplate: function(e) {
					formAddConvenio = $("<div id='formAddConvenio'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 6,
						items: [{
							colSpan: 6,
							dataField: "procedimento",
							label: { text: "Procedimento"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacaoAgendamento,{
												method				:	"GetProcedimento",
												pCodPaciente	: args,
											});
										},
										load: function(args) {
											return $.getJSON(urlPreparacaoAgendamento,{
												method				:	"GetProcedimento",
												pSkip					:	args.skip,
												pTake					:	args.take,
												pSearchValue	:	args.searchValue,
												pAlias				: 1,
												pItemPedido		: 2
											});
										}
									})
								}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
								showClearButton: false,
								onValueChanged: function (e) {
									$("#formAddConvenio").dxForm("instance").getEditor("profissional").option({"value":"",readOnly: true});
									$("#formAddConvenio").dxForm("instance").getEditor("data").option({"value":"",readOnly: true});
									$("#formAddConvenio").dxForm("instance").getEditor("hora").option({"value":"",readOnly: true});
									if (e.value == "") return;	
									$.get(urlPreparacao,{ method:	"ChecaProcedimento", pCodProcedimento: e.value}, function(grupoAgend){
										if (grupoAgend != "") {
											$("#formAddConvenio").dxForm("instance").getEditor("profissional").option({readOnly: false});
											dSProfSala.reload();
										}
									});
								}
							}
						},{
							colSpan: 4,
							dataField: "profissional",
							label: { text: "Profissional ou Sala/Leito"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dSProfSala,
								searchEnabled: true,
								valueExpr: "codigo", 
								displayExpr: "descricao",
								showClearButton: true,
								readOnly: true,
								onValueChanged: function (e) {
									$("#formAddConvenio").dxForm("instance").getEditor("data").option({"value":"",readOnly: true});
									$("#formAddConvenio").dxForm("instance").getEditor("hora").option({"value":"",readOnly: true});
									if (e.value == "") return;	
									$("#formAddConvenio").dxForm("instance").getEditor("data").option({readOnly: false});
								}
							}
						},{
							dataField: "data",
							label: { text: "Data"},
							editorType: "dxDateBox",
							editorOptions: {
								readOnly: true,
								type: "date",
								width: 130,
								dateSerializationFormat: "yyyy-MM-dd",
								onValueChanged: function (e) {
									$("#formAddConvenio").dxForm("instance").getEditor("hora").option({"value":"",readOnly: true});
									if (e.value == "") return;	
									$("#formAddConvenio").dxForm("instance").getEditor("hora").option({readOnly: false});
									dSHoraProfSala.reload();
								}
							}
						},{
							dataField: "hora",
							label: { text: "Hora"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dSHoraProfSala,
								valueExpr: "codigo", 
								displayExpr: "descricao",
								readOnly: true
							}
						},{
							colSpan: 6,
							dataField: "solicitante",
							label: { text: "Solicitante"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dataSourceMedicoExterno,
								valueExpr: "CodProvider", 
								displayExpr: "DescProvider", 
								searchEnabled: true,
								buttons: [{
									location:"after",
									name: "addPRocedimento",
									options:{
										icon	: "add",
										hint	: "Adicionar Médico",
										type	: "default",
										stylingMode : "contained",
										onClick	: function(){
											$("#divCadastrarMedico").dxPopup("show");
										}
									}
								}]									
							}
						},{
							colSpan: 3,
							itemType: "group",
							cssClass: "second-group",
							caption: "Convênio/Plano de Saude",
							colCount: 7,
							items: [{							
								colSpan: 7,
								dataField: "convenio",
								label: { text: "Convênio"},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: new DevExpress.data.DataSource({
										store: new DevExpress.data.CustomStore({
											byKey: function(args) {
												return $.getJSON(urlPreparacaoOrc,{
													method:	"GetConvenio",
													pCodConvenio: args
												});
											},
											load: function(args) {
												return $.getJSON(urlPreparacaoOrc,{
													method				:	"GetConvenio",
													pSkip					:	args.skip,
													pTake					:	args.take,
													pSearchValue	:	args.searchValue,
													pCodConvenio  : "",
													pParticular 	: 0,
													pFlagConvenio : 1,
													pConvenio 		: ""

												});
											}
										})
									}),
									showClearButton: true,
									onValueChanged: function (e) {
										$("#formAddConvenio").dxForm("instance").getEditor("planoSaude").option("value","");
										dSPlanoSaudeAdd.reload();
									},
									displayExpr: "NomeOrganizacao",
									valueExpr: "CodOrganizacao",
									searchEnabled: true,
								}
							},{
								colSpan: 7,
								dataField: "planoSaude",
								label: { text: "Plano de Saúde"},
								editorType: "dxSelectBox",
								editorOptions: {
								showClearButton: true,
									dataSource: dSPlanoSaudeAdd,
									itemTemplate: function (data, itemIndex, element) {
										if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
											retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
											nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
										}else{
											retorno = data.nomeOrganizacao;
										}
										return element.append(retorno)
									},
									displayExpr: "nomeOrganizacao",
									valueExpr: "codOrganizacao",
									onValueChanged: function (e) {
										var pCodPlano = e.value;
										if (!e.value) pCodPlano = "";
									},
									searchEnabled: true,
								}
							},{
								colSpan: 3,
								dataField: "carteirinha",
								label: { text: "Carteirinha"},
								editorType: "dxTextBox",
							},{
								colSpan: 2,
								dataField: "dataVencimento",
								label: { text: "Vencimento Carteirinha"},
								editorType: "dxDateBox",
								editorOptions: {
									type: "date",
									width: 130,
									dateSerializationFormat: "yyyy-MM-dd",
								}
							},{
								colSpan: 2,
								dataField: "valor",
								label: { text: "Valor"},
								editorType: "dxNumberBox",
								editorOptions: {
									format: "#,##0.00",
								}
							}]
						},{
							colSpan: 3,
							itemType: "group",
							cssClass: "second-group",
							caption: "Guia e Senha de Autorização",
							colCount: 3,
							items: [{
								colSpan: 2,
								dataField: "codGuia",
								label: { text:"Guia"},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: dSGuiasAdd,
									onValueChanged: function(e) {
										if (e.value) {
											$.getJSON(urlPreparacao, {method: "GetGuia", pCodAgendamento: altProcAgendand, 
											pNumAdmissaoControle: "", pSequencia: e.value}, function(objRetorno) {
												$("#formAddConvenio").dxForm("instance").getEditor("dataAutorizacao").option({"readOnly": true, value: objRetorno.dataAutorizacao});
												$("#formAddConvenio").dxForm("instance").getEditor("senha").option({"readOnly": true, value: objRetorno.senha});
												$("#formAddConvenio").dxForm("instance").getEditor("dataValidade").option({"readOnly": true, value: objRetorno.validadeSenha});
												$("#formAddConvenio").dxForm("instance").getEditor("numGuiaOperadora").option({"readOnly": true, value: objRetorno.numGuia});
											});
										}else{
											$("#formAddConvenio").dxForm("instance").getEditor("codGuia").option("value", "");
											$("#formAddConvenio").dxForm("instance").getEditor("dataAutorizacao").option({"readOnly": false, value: ""});
											$("#formAddConvenio").dxForm("instance").getEditor("senha").option({"readOnly": false, value: ""});
											$("#formAddConvenio").dxForm("instance").getEditor("dataValidade").option({"readOnly": false, value: ""});
											$("#formAddConvenio").dxForm("instance").getEditor("numGuiaOperadora").option({"readOnly": false, value: ""});
										}
									},
									showClearButton: true,
									searchEnabled: false,
									valueExpr: "sequencia", 
									displayExpr: "descricao",
								}
							},{colSpan: 1},{
								dataField: "dataAutorizacao",
								label: { text:"Data Autorização"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "senha",
								label: { text:"Senha"},
							},{
								dataField: "dataValidade",
								label: { text:"Data de Validade Senha"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "numGuiaOperadora",
								label: { text:"Número da Guia Atribuída pela Operadora:"},
							}]
						},{
							colSpan: 3,
							itemType: "button", horizontalAlignment: "right", buttonOptions: {
			 					icon: "save", text: "Salvar", type: "success", stylingMode: "contained",
								onClick: function(){
	
									var pCodProcedimento 	= $("#formAddConvenio").dxForm("instance").getEditor("procedimento").option("value");
									var pCodProfSala 			= $("#formAddConvenio").dxForm("instance").getEditor("profissional").option("value");
									var pData 						= $("#formAddConvenio").dxForm("instance").getEditor("data").option("value");
									var pHora 						= $("#formAddConvenio").dxForm("instance").getEditor("hora").option("value");
									
									var pSolicitante 		= $("#formAddConvenio").dxForm("instance").getEditor("solicitante").option("value");
									
									var pCodConvenio 		= $("#formAddConvenio").dxForm("instance").getEditor("convenio").option("value");
									var pCodPlano				=	$("#formAddConvenio").dxForm("instance").getEditor("planoSaude").option("value");
									var pNumCarteirinha	= $("#formAddConvenio").dxForm("instance").getEditor("carteirinha").option("value");
									var pDtCarteirinha	= $("#formAddConvenio").dxForm("instance").getEditor("dataVencimento").option("value");
									var pValor					= $("#formAddConvenio").dxForm("instance").getEditor("valor").option("value");

									var pCodGuia 					= $("#formAddConvenio").dxForm("instance").getEditor("codGuia").option("value");
									var pDtAutorizacao 		= $("#formAddConvenio").dxForm("instance").getEditor("dataAutorizacao").option("value");
									var pSenha 						= $("#formAddConvenio").dxForm("instance").getEditor("senha").option("value");
									var pDtValidade 			= $("#formAddConvenio").dxForm("instance").getEditor("dataValidade").option("value");
									var pNumGuiaOperadora = $("#formAddConvenio").dxForm("instance").getEditor("numGuiaOperadora").option("value");

									if (
										(pCodProcedimento == "" || pCodProcedimento == null) || 
										(pSolicitante == "" || pSolicitante == null) ||
										(pCodConvenio == "" || pCodConvenio == null) ||
										(pCodPlano == "" || pCodPlano == null)
									){
										DevExpress.ui.notify("Favor informar os campos Procedimento, Solicitante, Convênio e Plano de Saúde!","warning");
										return;
									}

									if (
										$("#formAddConvenio").dxForm("instance").getEditor("profissional").option("readOnly") == false &&
										((pCodProfSala == "" || pCodProfSala == null) || 
										(pData == "" || pData == null) || 
										(pHora == "" || pHora == null))
									) {
										DevExpress.ui.notify("Favor informar os campos Profissional ou Sala/Leito, Data e Hora!","warning");
										return;
									}
									$.getJSON(urlPreparacao,{method:"ArmazenarAddProcedimento", pCodAgendamento: addNumAgendamento, 
									pCodProcedimento: pCodProcedimento, pCodProfSala: pCodProfSala, pData: pData, pHora: pHora,
									pNumAdmissao: addNumAdmissao, pCodConvenio: pCodConvenio, pCodPlano: pCodPlano,
									pNumCarteirinha: pNumCarteirinha, pDtCarteirinha: pDtCarteirinha, pCodGuia: pCodGuia,
									pDtAutorizacao: pDtAutorizacao, pSenha: pSenha, pDtValidade: pDtValidade,
									pNumGuiaOperadora: pNumGuiaOperadora,pSolicitante:pSolicitante, pValor: pValor},
									function(objRetorno){
										if (objRetorno.status ==  1) {
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											listarAgendamentoAdmissoes();
											alterarConvenio(addNumAgendamento,objRetorno.seqAgendamento,pCodProcedimento,objRetorno.procAgendado)		
											$("#divAdicionarConvenio").dxPopup("hide");
										}else {
											DevExpress.ui.notify("Erro: "+objRetorno.mensagem+" "+objRetorno.status,"error");
										}
									})
            		}
							}
						},{
							colSpan: 3,
							itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									$("#divAdicionarConvenio").dxPopup("hide");
								}
							}
						}]
					});
					e.append(formAddConvenio);
				}        		
			});
			
			
			function validarCPF(pCPF){
				var Soma;
				var Resto;
				Soma = 0;
			  if (pCPF == "00000000000") return false;
				for (i=1; i<=9; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (11 - i);
				Resto = (Soma * 10) % 11;
				if ((Resto == 10) || (Resto == 11))  Resto = 0;
				if (Resto != parseInt(pCPF.substring(9, 10)) ) return false;
	 	 		Soma = 0;
    		for (i = 1; i <= 10; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (12 - i);
    		Resto = (Soma * 10) % 11;
		    if ((Resto == 10) || (Resto == 11))  Resto = 0;
		    if (Resto != parseInt(pCPF.substring(10, 11) ) ) return false;
		    return true;
			}			
		</script>
	</body>
</html>
