<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="cache" runat="server">
		do ^WWWVAR

		set YBED 			= $get(%request.Data("YBED", 1))
		set YUSER 			= $get(%request.Data("YUSER", 1))

		set app 			= %request.Application
		set host 			= %request.CgiEnvs("HTTP_HOST")
		set url				= "http://"_host_app
		set YLOCATION 		= $get(%request.Data("YLOCATION", 1))

		Set URLPreparacao 		= "VAR.CSP.VARPerfilProtocoloExamesNew.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLLogin 			= "COMLogin.cls"
		Set URLLink 			= "www.cls"
		set nomeLocal 			= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		
	</script>
	<head>
		<title>Cadastro de Perfil de Protocolo de Exames</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
    
    <!-- Tooltipster CSS -->
    <link href=" #(YGIF)#global/plugins/tooltipster/dist/css/tooltipster.bundle.min.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/plugins/tooltipster/dist/css/plugins/tooltipster/sideTip/themes/tooltipster-sideTip-light.min.css"
        rel="stylesheet" type="text/css" />

    <!-- Font Awesome -->
    <link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">
    
    <!-- Custom Elements -->
    <link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
    <link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
    <link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

    <!-- Fonts Padrão IPP -->
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

    <!-- <link rel="stylesheet" type="text/css" href=" #(YGIF)#tablesorter/css/style.css" /> -->
    <!--link rel="stylesheet" type="text/css" href=" #(YGIF)#plugins/css/tablesorter.css" /-->

		<!-- DevExtreme themes -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme18.2.3/css/dx.common.css" />
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme18.2.3/css/dx.light.compact.css" />
	</head>
	<style>
		*{
			font-family: Arial, Helvetica, sans-serif;
		}
		.normal {
			padding: 2px;
			border: 0px solid green;
			text-align: center;
		}
		.titulo {
			padding: 2px;
			padding-top: 5px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: right;
			font-weight: bold;
		}
		.tituloNormal {
			padding: 2px;
			padding-top: 5px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: left;
		}		
		.tituloRadio {
			padding: 2px;
			padding-top: 5px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: right;
			font-weight: bold;
		}
		.tituloRadioNormal {
			padding: 2px;
			padding-top: 3px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: right;
		}
		.campo {
			padding: 2px;
			border: 0px solid blue;
		}
		.divAvatar {
		  position: absolute;
			margin-top: 10px;
			margin-left: 2px;	
		}
		.divCicleAvatar {
		  background-color: #aaa;
		  border-radius: 50%;
		  width: 100px;
		  height: 100px;
		  overflow: hidden;
		  position: relative;
	    border: 1px solid #e9e9e9;
		}
		.divAvatar img {
		  position: absolute;
		  bottom: 0;
		  width: 100%;
		  padding: 0px;
		}


   </style>	

	<script type="text/javascript">
		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}
	</script>

	<body>
		<!-- style="display:none;"-->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme18.2.3/js/jquery.js"></script>
		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme18.2.3/js/jszip.min.js"></script>
		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme18.2.3/js/dx.all.js"></script>
		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme18.2.3/js/devextreme-intl.min.js"></script>
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme18.2.3/js/localization/dx.messages.pt.js"></script>
		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>	
		
		<nav class="navbar navbar-default navbar-fixed-top">
			<div class="container-fluid">
				<div class="navbar-header">
					<a class="navbar-brand" href="#">Cadastro de Perfil do Protocolo de Exames</a>
				</div>
				<ul class="nav navbar-nav navbar-right">
					<li>
						<button type="button" class="btn btn-info navbar-btn" id="btnCopiar" disabled> 
							<span class="fas fa-copy"></span> Copiar
						</button>
					</li>
					<li>
						<button type="button" class="btn btn-info navbar-btn" id="btnSalvar">
							<span class="fa fa-save"></span> Salvar
						</button>
					</li>
					<li>
						<button type="button" class="btn btn-info navbar-btn" id="btnExcluir">
							<span class="fas fa-trash-alt"></span> Remover
						</button>
					</li>
					<li>
						<button type="button" class="btn btn-info navbar-btn" id="btnLimpar">
							<span class="fa fa-eraser"></span> Limpar
						</button>
					</li>
				</ul>
			</div>
		</nav>
		<div class="container-fluid" style="margin:10px; margin-top:58px;">
			<div class="row">
				<div class="col-md-12">
					<div class="row">
						<div class="col-md-2 titulo">Tipo de Exame:</div>
						<div class="col-md-2 campo"><div id="divTipoExame"></div></div>
						<div class="col-md-2 titulo">Código do Protocolo:</div>
						<div class="col-md-5 campo"><div id="divCodProtocolo"></div></div>
					</div>
					<div class="row">
						<div class="col-md-2 titulo">Descrição:</div>
						<div class="col-md-4 campo"><div id="divDescricao"></div></div>
						<div class="col-md-1 titulo">Médico:</div>
						<div class="col-md-4 campo"><div id="divMedico"></div></div>
					</div>
					<div class="row">
						<div class="col-md-12">&nbsp;</div>
					</div>
					<div class="row">
						<div class="col-md-12">
							<div id="divGridExames"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<script type="text/javascript" language="javascript">
		var urlPreparacao 		= '#(URLPreparacao)#';
		var urlSearch			= '#(URLSearch)#';
		var urlLink 			= '#(URLLink)#';
		var YBED 				= '#(YBED)#';
		var YUSER 				= '#(YUSER)#';
		var YLOCATION 			= '#(YLOCATION)#';
		var nomeLocal 			= '#(nomeLocal)#';
			
		DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
		DevExpress.localization.locale("pt");
			
		var campoTipoExame = $("#divTipoExame").dxSelectBox({
			dataSource: [
				{ "Codigo":"1", "Descricao":"Exame Laboratório" },
				{ "Codigo":"2", "Descricao":"Outros Exames" }
			],
			valueExpr: "Codigo",
			displayExpr: "Descricao",
			showClearButton: true,
			searchEnabled: true,
			width: "100%",
			onValueChanged: function(e){
				campoCodProtocolo.option({value: "", readOnly: 0});
				campoDescProtocolo.option({value: "", readOnly: 0});
				campoMedico.option({value: "", readOnly: 0});
				gridExames.option({disabled: 1});
				dataSourceProtocolo.pageIndex(0);
				dataSourceProtocolo.reload();
				dataSourceProtocoloExame.reload();
				$("#btnCopiar").attr("disabled",true);
			}
		}).dxSelectBox("instance");
    
		var dataSourceProtocolo = new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				loadMode: "raw",   
				load: function() {
					var pTipoExame = campoTipoExame.option("value");
					if (pTipoExame == null) pTipoExame = "";
					return $.getJSON(urlPreparacao,{method:"findProtocolo",tipoExame:pTipoExame});
				}
			}),
			group: "usuarioPerfil"
		});
				
    var campoCodProtocolo = $("#divCodProtocolo").dxSelectBox({
			dataSource: dataSourceProtocolo,
			valueExpr: "codigoPerfil",
			displayExpr: "descricaoComposta",
			showClearButton: true,
			searchEnabled: true,
			width: "100%",
			onValueChanged: function(e){
				dataSourceProtocoloExame.reload();
				if (e.value == "" || e.value == null) {
					campoDescProtocolo.option("value","");
					campoMedico.option({value: "", readOnly: 0});
					gridExames.option({disabled: 1});
					$("#btnCopiar").attr("disabled",true);
					return;	
				}
				$.getJSON(urlPreparacao,{method:"getProtocolo",pCodProtocolo:e.value},function(objRetorno){
					campoDescProtocolo.option("value",objRetorno.descricao);
					campoMedico.option({value: objRetorno.medico, readOnly: 1});
					gridExames.option({disabled: 0});
					$("#btnCopiar").attr("disabled",false);
				});
			},
			grouped: true
		}).dxSelectBox("instance");
    
    var campoDescProtocolo = $("#divDescricao").dxTextBox({width: "100%"}).dxTextBox("instance");

    var campoMedico = $("#divMedico").dxSelectBox({
	    dataSource: new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function(args) {
						return $.getJSON(urlPreparacao,{ method:	"GetMEDProvider"});
					}
				})
			}),
	    valueExpr: "CodProfissional",
	    displayExpr: "Nome",
	    showClearButton: true,
	    searchEnabled: true,
	    width: "100%"
    }).dxSelectBox("instance");


		var dataSourceProtocoloExame = new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				key: "CodigodoExameId",
				loadMode: "raw",   
				load: function() {
					var pCodProtocolo = campoCodProtocolo.option("value");
					if (pCodProtocolo == null || pCodProtocolo == "") return [];
					return $.getJSON(urlPreparacao,{method:"GetExamesProtocolo",pCodProtocolo:pCodProtocolo});
				},
				insert: function (values) {
					var pCodProtocolo = campoCodProtocolo.option("value");
					if (pCodProtocolo == null || pCodProtocolo == "") {
						DevExpress.ui.notify("Selecionar um Código do Protocolo.", "error", 4000);
						return;
					}
	        objDados = new Array;
					for (var coluna in values) {
						if (values.hasOwnProperty(coluna)) {
							valor = values[coluna];
							objDados.push(coluna+"~"+valor);
						}
					}
					var retorno = #server(VAR.CSP.VARPerfilProtocoloExamesNew.ArmExamesProtocolo(pCodProtocolo, "", objDados, YBED))#;
				},
				update: function (key, values) {
					var pCodProtocolo = campoCodProtocolo.option("value");
					if (pCodProtocolo == null || pCodProtocolo == "") {
						DevExpress.ui.notify("Selecionar um Código do Protocolo.", "error", 4000);
						return;
					}
					var idRow = key;
					objDados = new Array;
					for (var coluna in values) {
						if (values.hasOwnProperty(coluna)) {
							valor = values[coluna];
							objDados.push(coluna+"~"+valor);
						}
					}
					var retorno = #server(VAR.CSP.VARPerfilProtocoloExamesNew.ArmExamesProtocolo(pCodProtocolo, idRow, objDados, YBED))#;
				}, 
				remove: function (key) {
					var pCodProtocolo = campoCodProtocolo.option("value");
					if (pCodProtocolo == null || pCodProtocolo == "") {
						DevExpress.ui.notify("Selecionar um Código do Protocolo.", "error", 4000);
						return;
					}
					#server(VAR.CSP.VARPerfilProtocoloExamesNew.ExcluirExamesProtocolo(pCodProtocolo, key, YBED))#;
				}					
			})
		});

		var gridExames = $("#divGridExames").dxDataGrid({
			disabled: true,
			dataSource: dataSourceProtocoloExame,
			columns: [
				{	dataField: "DescricaodoExame", caption: "Exame", alignment: "center", validationRules: [{ type: "required" }], 
					setCellValue: function (rowData, value) {
						if (value == "" || value == null) return
						objLinha = this;

						var retorno = #server(VAR.CSP.VARPerfilProtocoloExames.getDescExame(value))#;

						retorno = retorno.split("~"); 
						objLinha.defaultSetCellValue(rowData, retorno[1]);
						rowData.CodigodoExame = retorno[0];
					}, 
				},
				{	dataField: "Observacao", caption: "Observação", alignment: "center"},
			],
			onEditorPreparing: function(e) {
				if (e.parentType == "dataRow" && (e.dataField == "Observacao")) {
					e.editorName = "dxTextArea"; 
				}  
				if (e.parentType == "dataRow" && e.dataField == "DescricaodoExame") {
					e.editorName = "dxSelectBox";
					var tipo=campoTipoExame.option("value")
					e.editorOptions.dataSource = new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							byKey: function(args) {
								return $.getJSON(urlPreparacao,{method	:"listaExames", tipo: tipo, codigo: args});
							},
							load: function(args) {
								return $.getJSON(urlPreparacao,{method	:"listaExames", tipo: tipo, searchValue: args.searchValue,
								skip:args.skip,take:args.take});
							}
						})
					});
					e.editorOptions.displayExpr = "DescExame";
					e.editorOptions.valueExpr = "CodExame";
					e.editorOptions.searchEnabled = 1;
					e.editorOptions.onValueChanged = function(arg) {
						e.setValue(arg.value);
					}
				}
			},
			columnChooser: { enabled: false, mode: "dragAndDrop"},
			allowColumnReordering: false,
			editing: { mode: "batch", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true},
			onEditingStart: function(e) {
				var FlagEditar = e.data.FlagEditar;
				if (FlagEditar == 1 && e.column.dataField == "DescricaodoExame"){
					e.cancel = true;
				}
			},		
			columnAutoWidth: false,
			showColumnLines: true,
			showRowLines: true,
			rowAlternationEnabled: true,
			hoverStateEnabled: true,
			showBorders: true,
			headerFilter: { visible: false },
			grouping: { autoExpandAll: true },
			groupPanel: { visible: false, allowColumnDragging: true },
			columnFixing: { enabled: false },
			filterRow: { visible: false },		height: function(){return window.innerHeight-150},
			export: { enabled: false },
			stateStoring: { enabled: false }, 
			wordWrapEnabled: true,
		}).dxDataGrid("instance");

		$("#btnSalvar").click(function(p1){
			salvarDados();
		});
		
		function salvarDados() {
			var pTipoExame 		= campoTipoExame.option("value");
			if (pTipoExame == null) var pTipoExame = "";
			var pCodProtocolo = campoCodProtocolo.option("value");
			if (pCodProtocolo == null) var pCodProtocolo = "";
			var pDescricao 		= campoDescProtocolo.option("value");
			var pMedico 			= campoMedico.option("value");
			if (pMedico == null) var pMedico = "";
			if (pDescricao == "" || pTipoExame == "") {
				DevExpress.ui.notify("Informar o Tipo de Exame e a Descrição.", "error", 4000);
  			return;
  		}
  		var pCopiar = 0
			if (campoTipoExame.option("readOnly")==1) var pCopiar = 1;
			$.getJSON(urlPreparacao,{method:"armazenarProtocolo",pTipoExame: pTipoExame, pCodProtocolo: pCodProtocolo,
			pDescricao: pDescricao, pMedico: pMedico, pCopiar: pCopiar},function(objRetorno){
				if (objRetorno.status == 1) {
					if (pCodProtocolo == "" || pCopiar == 1) {
	        	dataSourceProtocolo.pageIndex(0);
	        	dataSourceProtocolo.reload();
	        	campoCodProtocolo.option("value", objRetorno.codProtocolo);
					}
					DevExpress.ui.notify("Protocolo armazenado com sucesso.", "success", 4000);
					if (pCopiar == 1) {
						campoTipoExame.option("readOnly", 0);
						campoCodProtocolo.option("readOnly", 0);
						campoDescProtocolo.option("readOnly", 0);
						campoMedico.option("readOnly", 1);
						gridExames.option("disabled", 0);
						$("#btnExcluir").attr("disabled",false);
					}
				}else{
					DevExpress.ui.notify("Erro no armaenamento.", "error", 4000);
				}
			})				
		}
		
		$("#btnExcluir").click(function(p1){
      if (campoCodProtocolo.option("value")==""||campoCodProtocolo.option("value")==null){
        DevExpress.ui.notify("Informe um Protocolo", "warning", 4000);
        return
      }
			var result = DevExpress.ui.dialog.confirm("<i>Confirma a exclusão?", "Confirmação");
			result.done(function(dialogResult) {
				if (!dialogResult) return
				$.getJSON(urlPreparacao,{method:"excluirProtocolo",pCodProtocolo: campoCodProtocolo.option("value")}
				,function(retorno){
	       	DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	        if (retorno.status==1){
	        	campoCodProtocolo.option("value", "");
	        	dataSourceProtocolo.pageIndex(0);
	        	dataSourceProtocolo.reload();
	        }
	    	});
			});
		});

		$("#btnCopiar").click(function(){
			campoTipoExame.option("readOnly", 1);
			campoCodProtocolo.option("readOnly", 1);
			campoDescProtocolo.option("readOnly", 1);
			campoMedico.option("readOnly", 0);
			gridExames.option("disabled", 1);
			$("#btnExcluir").attr("disabled",true);
			$("#btnCopiar").attr("disabled",true);
			DevExpress.ui.notify("Selecione o médico e clique em salvar.", "success", 4000);
		});
		
		$("#btnLimpar").click(function(){
			campoTipoExame.option({value: "", readOnly: 0});
		});

	</script>
	</body>
	
</html>
