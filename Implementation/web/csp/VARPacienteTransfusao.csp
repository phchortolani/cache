<!DOCTYPE html>
<html lang="pt-br">
	<script language="cache" runat="server">
		do ^WWWVAR

		Set YBED 			= $get(%request.Data("YBED", 1))
		Set YUSER 		= $get(%request.Data("YUSER", 1))

		Set app 			= %request.Application
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		Set url				= "http://"_host_app
		Set YLOCATION = $get(%request.Data("YLOCATION", 1))
		
		Set URLPreparacaoQui 	= "VAR.CSP.VARContrAtendQuimioterapico.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacao 		= "VAR.CSP.VARPacienteTransfusao.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLRelSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		
		Set URLLogin 	= "COMLogin.cls"
		Set nomeLocal = YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		Set status = 1
		;set status = $$VerifySession^VARIPPCSPUtils(YBED, YUSER, url)
	</script>
	<head>
    <meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		
		<title>Relatório Paciente de Transfusão Sanguinea</title>
    
    <!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href="#(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		
		<!-- Font Awesome -->
		<link href="#(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href="#(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css">
		<link href="#(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css">
		<link href="#(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css">
		<link href="#(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color">
		<link href="#(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css">

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href="#(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.common.css">
		<link rel="stylesheet" type="text/css" href="#(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.light.compact.css">

    <link rel="stylesheet" type="text/css" href="#(YGIF)#global/themes/css/alphalinc.css" id="style_color">
    <style rel="stylesheet">
    .ctn-filtros .panel-heading {	background: rgba(1, 178, 169, 0.15) }
	  .ctn-filtros .panel-title a { display: block; text-decoration: none }
   </style>
    <script type="text/javascript">
		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#';

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.');
			window.location.replace(URLLogin);
		}
	</script>
	</head>
	<body>
	
		<div id="toolbar"></div>
		<div class="container-fluid">
			<div class="row" id="row-filtro">
				<div class="col-md-12" style="margin-top:10px">
					<div class="panel panel-default ctn-filtros">
						<div class="panel-heading label-link" href="#collapse1" data-toggle="collapse">
							<h4 class="panel-title">Filtros</h4>
						</div>
						<div id="collapse1" class="panel-collapse collapse in">
							<div class="panel-body">
								<div id="divFiltro"></div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-md-12">
					<div id="divRelatorio"></div>
				</div>
			</div>
		</div>
		<div id="openPesquisaCID"></div>
		
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src="#(YGIF)#global/plugins/extreme20.2.4/Lib/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src="#(YGIF)#global/plugins/extreme20.2.4/Lib/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src="#(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src="#(YGIF)#global/plugins/extreme20.2.4/Lib/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src="#(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx-gantt.min.js"></script>
		
		<!-- Export Excel -->
		<script type="text/javascript" src="#(YGIF)#global/plugins/extreme20.2.4/Lib/js/exceljs.min.js"></script>
		<script type="text/javascript" src="#(YGIF)#global/plugins/extreme20.2.4/Lib/js/FileSaver.min.js"></script>
		
		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>
		
		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
		//Deixando variáveis disponíveis no cliente
		var urlPreparacao			= "#(URLPreparacao)#";
		var urlPreparacaoQui 	= "#(URLPreparacaoQui)#";
		var urlRelSearch			= "#(URLRelSearch)#";
		var YBED 							= "#(YBED)#";
		var YUSER 						= "#(YUSER)#";				
		var YLOCATION 				= "#(YLOCATION)#";
		
		
		DevExpress.localization.locale("pt");
		
		
		var divRelatorio;			// Relatório dxDataGrid
		
		$("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget: "dxButton",
					options: {
						icon: "search",
						text: "Pesquisar",
						stylingMode: "contained",
						type: "default",
						onClick: function() {
							listarRelatorio();
						}
					}
				},{
					location: "after",
					widget: "dxButton",
					options: {
						icon: "fa fa-eraser",
						text: "Limpar",
						stylingMode: "contained",
						type: "default",
						onClick: function() {
							if ($("#gridRelatorio")) $("#gridRelatorio").remove();
							divFiltro.resetValues();
							$("#collapse1").collapse("show");
							limparRelatorio();
						}
					}
				}]
			});
			
			// Eventos de Exibir/Ocultar filtro
			// ajustam o tamanho do DataGrid a tela
			$("#collapse1").on({
				"shown.bs.collapse": heightDataGrid,
				"hidden.bs.collapse": heightDataGrid
			});
			
			// Formulário Filtro dxForm
			var divFiltro = $('#divFiltro').dxForm({
				formData: {},
				colCount: 10,
				items: [
					/*{
						dataField: 'Admissão',
						label: { alignment: 'right' },
						editorType: "dxSelectBox",
						colSpan: 3,
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									load: function(args) {
										return $.getJSON(urlPreparacaoQui,{method:"CarregaProfissional", pFiltro: args.searchValue,
											pTake: args.take, pSkip: args.skip, YLOCATION: YLOCATION});
									},
									byKey: function(args) {
										return $.getJSON(urlPreparacaoQui,{method:"CarregaProfissional", pKey: args, YLOCATION: YLOCATION});
									}
								})
							}),
							valueExpr: "CodProvider",
							displayExpr: "DescProvider"
						}
					},*/
					{
						dataField: "dataInicial",
						label: { text: 'Dt. Admissão Inicial', alignment: 'right' },
						//validationRules: [{ type: "required" }],
						editorType: "dxDateBox",
						colSpan: 2,
						editorOptions: {
							type: "date",
							
							dateSerializationFormat: "yyyy-MM-dd",
							onValueChanged: function (e) {
								divFiltro.getEditor("dataFinal").option({"min": e.value});
							},
							value: "#($ZDate(+$Horolog-30,3))#"
						}
					},
					{
						dataField: "dataFinal",
						label: { text: 'Final', alignment: 'right' },
						//validationRules: [{ type: "required" }],
						editorType: "dxDateBox",
						colSpan: 2,
						editorOptions: {
							type: "date",
							
							dateSerializationFormat: "yyyy-MM-dd",
							onValueChanged: function (e) {
								divFiltro.getEditor("dataInicial").option({"max": e.value});
							},
							value: "#($ZDate(+$Horolog,3))#"
						}
					},
					{
						dataField: "cid", 
						colSpan: 6,
						label: { text:"CID", alignment: "right"},
						editorType: "dxTagBox",
						editorOptions: {
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							buttons: [{
								name: "btnPesquisarDiagnostico",
								location: "before",
								options: {
									hint: "Pesquisar",
									icon: "fa fa-search",
									type: "normal",
									onClick: function(e) {
										var cid = divFiltro.getEditor('cid');
										abrePesquisaCID(cid, cid.option('value'));
									}
								}
							}],
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										return $.getJSON(urlPreparacaoQui,{
											method:"getCID",
											codigo: args
										});
									},
									load: function(args) {
										return $.getJSON(urlPreparacaoQui,{
											method:"getCID",
											usuario: YBED,
											skip:args.skip,
											take:args.take,
											searchValue:args.searchValue
										});
									}
								})
							})
						}
					},
				]
			}).dxForm('instance');
			
			function abrePesquisaCID(objRetornoCID, conteudoCampo) {
				var popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Pesquisa CID",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHidden: function(){
							var arrayCID	= [];
							openPesquisaCIDLista.getSelectedRowsData().then(function (rowData) {
								$.each(rowData, function(count, dados) {
									arrayCID.push(dados.CodigodoCID);
								});
							}).done(function(){
				      	objRetornoCID.option("value", arrayCID)  
							});
			      }
		    
		    };	
		    if ($("#openPesquisaCID").html()!=""){
		    	openPesquisaCID.dispose();
		    	openPesquisaCIDLista.dispose();
		    }
	 			$("#openPesquisaCID").html("<div id='openPesquisaCIDLista'></div>");
				openPesquisaCID = $("#openPesquisaCID").dxPopup(popupOptions).dxPopup("instance");
				preparaPesquisaCID(conteudoCampo);
			}
			
			function preparaPesquisaCID(pConteudoCampo){
	      openPesquisaCIDLista = $("#openPesquisaCIDLista").dxDataGrid({
				dataSource:  new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						key: "CodigodoCID",
						loadMode: "raw",
						load: function(){
		        	var d = $.Deferred();
							$.getJSON(urlPreparacaoQui, {method: "getListCID"},function(retorno){
								d.resolve(retorno);
								openPesquisaCIDLista.selectRows(pConteudoCampo, true); 
							});
							return d.promise();
						}
					})
				}),
				columns: [
					{dataField: "CodigodoCID",caption: "Código"},
					{dataField: "DescricaoResumida", caption: "Descrição"},
					{dataField: "DescCategoria",caption: "Categoria", groupIndex: 0},
				],	
				allowColumnReordering: true,
				columnAutoWidth: true,
				selection: { mode: "multiple", deferred: true },
				allowColumnResizing: true,
				height: "100%",	
				headerFilter: { visible: false },
				hoverStateEnabled: true,
				filterRow: { visible: true },
				showBorders: true,
				showRowLines: true,
				grouping: { autoExpandAll: false },
				searchPanel: { visible: false }, 
				groupPanel: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				columnChooser: { enabled: false, mode: "dragAndDrop" },
				sorting: { mode: "multiple" },
				rowAlternationEnabled: true,
				wordWrapEnabled:true,
				pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [20, 50, 100, 150, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 20 }
			}).dxDataGrid("instance")
		}
			
		
		function listarRelatorio() {
			var flagForm = divFiltro.validate().isValid;
			if (!flagForm ){
				DevExpress.ui.notify("Favor preencher os campos obrigatórios", "warning");
				return;
			}
			
			var pObjFiltros = divFiltro.option("formData");
			
			limparRelatorio();
			divRelatorio = $("#divRelatorio").dxDataGrid({
				dataSource: new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						key: 'id',
						load: function() {
							var deferred = $.Deferred();
							$.getJSON(urlPreparacao, {
								method: "ListarRelatorio", 
								pObjFiltros: JSON.stringify(pObjFiltros)
							}, function(data) {
	              deferred.resolve(data);
	            });
	            return deferred.promise();
						}
					})
				}),
				columns:[
					{dataField: 'admissao', caption: 'Admissão', width: '12em'},
					{dataField: 'etiqueta', caption: 'Nº Bolsa'},
					{dataField: 'paciente'},
					{dataField: 'idade', caption: 'Idade Paciente'},
					//{dataField: 'dtNasc'},
					{dataField: 'aboRH', caption: 'Abo/RH'},
					{dataField: 'aboRHPaciente', caption: 'Abo/RH Paciente'},
					{dataField: 'dataAdmissao', dataType:'date', sortOrder: "asc", caption: 'Data Admissão', groupIndex: 0},
					{dataField: 'horaAdmissao', caption: 'Hora Admissão'},
					{dataField: 'dataPreparo', dataType:'date'},
					{dataField: 'horaPreparo'},
					{dataField: 'diagnostico', caption: 'Diagnóstico', width: '16em'},
					{dataField: 'hemocomponentes'},
					{dataField: 'responsavelPreparo', caption: 'Responsável Preparo'},
					{dataField: 'testeCompatibilidade', caption: 'Teste Compatib.'},
					{dataField: 'volume'},
				],
				allowColumnReordering: true,
        allowColumnResizing: true,
        columnAutoWidth: true,
        columnChooser: { enabled: true },
        columnResizingMode: "widget",
        stateStoring: { enabled: false },
        filterRow: { visible: true },
        headerFilter: { visible: true },
        searchPanel: { visible: true },
        groupPanel : { visible : true },
        hoverStateEnabled: true,
        showBorders: true,
        showRowLines: true,
        rowAlternationEnabled: true,
        wordWrapEnabled: true,
        selection: { mode: "single" },
        summary:{
	      	totalItems: [{
		      	column: "admissao",
            summaryType: "count",
            displayFormat: "Total no Período: {0}",
		      }],
		      groupItems: [{
			    	column: "dataAdmissao",
            summaryType: "count",
            displayFormat: "Total: {0}",
			    }]
	      },
        pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [25, 50, 100, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 25 },
        export: { enabled: true },
        onExporting: function(e) {
					if (typeof Object.assign !== 'function') {
					  // Must be writable: true, enumerable: false, configurable: true
					  Object.defineProperty(Object, "assign", {
					    value: function assign(target, varArgs) { // .length of function is 2
					      'use strict';
					      if (target === null || target === undefined) {
					        throw new TypeError('Cannot convert undefined or null to object');
					      }

					      var to = Object(target);

					      for (var index = 1; index < arguments.length; index++) {
					        var nextSource = arguments[index];

					        if (nextSource !== null && nextSource !== undefined) { 
					          for (var nextKey in nextSource) {
					            // Avoid bugs when hasOwnProperty is shadowed
					            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
					              to[nextKey] = nextSource[nextKey];
					            }
					          }
					        }
					      }
					      return to;
					    },
					    writable: true,
					    configurable: true
					  });
					}
					var workbook = new ExcelJS.Workbook();
					var worksheet = workbook.addWorksheet("Dados");
		      DevExpress.excelExporter.exportDataGrid({   
						worksheet: worksheet,
						component: e.component,
						topLeftCell: { row: 5, column: 1 },
					}).then(function() { 
						worksheet.getRow(1).getCell(1).value = "Data:"
						worksheet.getRow(1).getCell(2).value = "#($ZDate(+$Horolog,4))#";
						worksheet.getRow(2).getCell(1).value = "Hora:"
						worksheet.getRow(2).getCell(2).value = "#($ZTime($Piece($Horolog,",",2)))#";
						worksheet.getRow(3).getCell(1).value = "Usuário:"
						worksheet.getRow(3).getCell(2).value = YBED;
					}).then(function() {
						workbook.xlsx.writeBuffer().then(function(buffer) {   
							saveAs(
								new Blob(
									[buffer], { type: "application/octet-stream" }
								),
								"Rel. Paciente Transfusão Sanguinea.xlsx"
							);
						});
					});
					e.cancel = true;
		 		},
			}).dxDataGrid('instance');
			

			//if ($("#gridRelatorio")) $("#gridRelatorio").remove();
			//$("#divRelatorio").html("<div id='gridRelatorio'></div>");
			
			$("#collapse1").collapse("hide");
		}
		
		function limparRelatorio() {
			divRelatorio && divRelatorio.dispose();
		}
		
		// ajusta o tamanho do DataGrid a tela
		function heightDataGrid() {
			var tamSubtract = 10 + $("#toolbar").outerHeight() + $("#row-filtro").outerHeight();
			divRelatorio && divRelatorio.option('height', 'calc(100vh - '+tamSubtract+'px)');
		}
		
	</script>
	</body>
</html>