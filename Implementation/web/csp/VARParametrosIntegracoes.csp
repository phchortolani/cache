<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		Do ^WWWVAR

		Set YUSER 		= $Get(%request.Data("YUSER", 1))
		Set YBED 			= $Get(%request.Data("YBED", 1))
		Set YM 				= $Get(%request.Data("YM", 1))
		Set YLOCATION = $Get(%request.Data("YLOCATION", 1))

		Set PortCache = $Get(%request.CgiEnvs("SERVER_PORT"))
		Set PageURL 	= $Get(%request.CgiEnvs("CACHE_URL"))
		Set PageName 	= %request.PageName
		Set app 			= %request.Application
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		Set url				= "http://"_host_app

		Set URLPreparacao 			= "VAR.CSP.VARParametrosIntegracoes.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacaoAgend 	= "VAR.CSP.VARCadAgendamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacaoOrc		= "VAR.CSP.VARCadOrcamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacaoAdm		= "VAR.CSP.VARCadAdmissao.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLSearch						= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLLogin 						= "COMLogin.cls"
		Set URLLink 						= "www.cls"

		Set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		Set objWWW013 = $Get(^WWW013(YM, YBED, 1))
		Set flagAdmSistema = 0
		If ($Piece(objWWW013,Y,3) = 1) Set flagAdmSistema = 1

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Parâmetros da Integrações</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<style>
	.cell-selected {
		background-color: #FFFFB9;
	}

	.dx-datagrid {
		user-select: none;
		-webkit-user-select: none;
	}		

	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	</style>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divAlterarConvenio"></div>
		<div id="divCadastrarMedico"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx-gantt.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao 			= '#(URLPreparacao)#';
			var urlPreparacaoAgend	= '#(URLPreparacaoAgend)#';
			var urlPreparacaoOrc		= '#(URLPreparacaoOrc)#';
			var urlPreparacaoAdm		= '#(URLPreparacaoAdm)#';
			var urlSearch						= '#(URLSearch)#';
			var urlLink 						= '#(URLLink)#';
			var YBED 								= '#(YBED)#';
			var YUSER 							= '#(YUSER)#';
			var YLOCATION 					= '#(YLOCATION)#';
			var nomeLocal 					= '#(nomeLocal)#';
			var flagAdmSistema			= '#(flagAdmSistema)#';
			var codAgendamento			= "";
			var codAdmissao					= "";
			var cliente							= "";
			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			objToolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "save",
						hint	: "Salvar os Dados",
						type	: "success",
						stylingMode : "contained",
						onClick	: function(){
							pPreventCodConvenio 				= objPrevent.getEditor("preventConfConvenio").option("value");
							pPreventCodPlanSaude 				= objPrevent.getEditor("preventConfPlanoSaude").option("value");
							pPreventModuloUpload 				= objPrevent.getEditor("preventModuloUpload").option("value");
			       	pMotionCodModulo						=	objMotion.getEditor("motionModulo").option("value");
			       	pMotionFinanceiroCodModulo	=	objMotionFinanceiro.getEditor("motionFinanceiroModulo").option("value");
			        $.getJSON(urlPreparacao,{method: "ArmDados", pPreventCodConvenio: pPreventCodConvenio,
							pPreventCodPlanSaude: pPreventCodPlanSaude, pPreventModuloUpload: pPreventModuloUpload,
							pMotionCodModulo: pMotionCodModulo,pMotionFinanceiroCodModulo:pMotionFinanceiroCodModulo},
							function(objRetorno){
								if (objRetorno.status !=  1) {
									DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
								}else {
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
								}
			        });
						}
					}
				}]
			}).dxToolbar("instance")
		
			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) { return "lg"; },
				screenByWidth: function(width) { return "lg"; },
				height:function(){ return window.innerHeight - 45 },
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colSpan: 10,
					itemType: "tabbed",
					name : "abas",
					tabPanelOptions: {
	  			  selectedIndex: 0,
						deferRendering: false,
						animationEnabled: false,
						showNavButtons:true
					},	
						height:'10px',
						tabs:[{
							title	: "Motion",
							items: [{
								template	: function (data, itemElement) {
									itemElement.append("<div id='divMotion'>")
								}
							}],
						},{
							title	: "Motion (Financeiro)",
							items: [{
								template	: function (data, itemElement) {
									itemElement.append("<div id='divMotionFinanceiro'>")
								}
							}],
						},{
							title	: "Prevent",
							items: [{
								template	: function (data, itemElement) {
									itemElement.append("<div id='divPrevent'>")
								}
							}],
						}]
					}
				]
			}).dxForm("instance");
			
			/////Motion
			objMotion = $("#divMotion").dxForm({
				scrollingEnabled: true,
				showColonAfterLabel: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function() { return window.innerHeight - 110;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 3,
				items: [{
					colSpan: 3,
					colCount: 2,
					itemType: "group",
					cssClass: "second-group",
					alignItemLabels: true,
					alignItemLabelsInAllGroups: true,
					caption: "Configuração",
					items: [{
						dataField: "motionModulo",
						label: { text: "Módulo", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									loadMode: "raw",   
									load: function() {
										return $.getJSON(urlPreparacao,{method:	"GetModulo"});
									}
								})
							}),
							displayExpr: "text",
							valueExpr: "id",
							searchEnabled: true,
						}
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "De/Para",
					items: [{
						dataField: "motionDeParaTipoTabela",						
						editorType: "dxRadioGroup",
						label: { text: "Tipo de Tabela" },
						editorOptions: {
							dataSource: [{text: "Procedimento", value: "P"}],
							layout: "vertiacal", displayExpr:"text", valueExpr:"value", 
							value: "P"
						}
					},{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divMotionDeParaTabela'>")
						}
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Arquivos - Gerados",
					colSpan: 2,
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divMotionArquivo'>")
						}
					}]
				}]
			}).dxForm("instance");

			dSMotionDeParaTabela = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "sequencia",
		  		loadMode: "raw",   
		  		load: function() {
		      	return $.getJSON(urlPreparacao,{method:"GetTabelaDePara",pCliente:"MOTION",pTipoTabela:"PROCEDIMENTO"});
		  		},
		  		insert: function (values) {
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARParametrosIntegracoes.ArmTabelaDePara("MOTION", "PROCEDIMENTO", "", objDados, YBED))#;
		    	},
		    	update: function (key, values) {
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARParametrosIntegracoes.ArmTabelaDePara("MOTION", "PROCEDIMENTO", key, objDados, YBED))#;
		    	},
					remove: function (key) {
						var retorno = #server(VAR.CSP.VARParametrosIntegracoes.ExcTabelaDePara("MOTION", "PROCEDIMENTO", key, YBED))#;
		    	}				
				})
			});

			$("#divMotionDeParaTabela").dxDataGrid({
				dataSource: dSMotionDeParaTabela,
				columns: [
					{	dataField: "de", caption: "De", width: 120},
					{	dataField: "paraDesc", caption: "Para", 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descItem = #server(User.Search.PesquisasJson.GetDescricaoINART(value))#;
							objLinha.defaultSetCellValue(rowData, "("+value+") "+descItem);
							rowData.para = value;	
				  	}
				  },
					{	dataField: "criadoPor", caption: "Criado Por", allowEditing: 0, visible: 0 },
					{	dataField: "criadoEm", caption: "Criado Em", allowEditing: 0, visible: 0 },
					{	dataField: "alteradoPor", caption: "Alterado Por", allowEditing: 0, visible: 0 },
					{	dataField: "alteradoEm", caption: "Alterado Em", allowEditing: 0, visible: 0 },
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "paraDesc") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlSearch,{
										method			:	"GetINART",
										pCodProduto	: args
									});
								},
								load: function(args) {
									return $.getJSON(urlSearch,{
										method				:	"GetINART",
										pSkip					:	args.skip,
										pTake					:	args.take,
										pSearchValue	:	args.searchValue,
										pAlias				: 1,
										pItemPedido		: 1
									});
								}
							})
						});
						e.editorOptions.value = e.row.data.para;
						e.editorOptions.displayExpr = "DescProduto";
						e.editorOptions.valueExpr = "CodProduto";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() { 
					var heig = window.innerHeight - 300;
					return (heig < 300 ? 300 : heig); 
				},
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fas fa-file-import",
							hint: "Importar Tabela",
							onClick: function (e) {
								importarArquivo('040', "dSMotionDeParaTabela.reload();");
							}
						}
					})
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
			});
			
			dSMotionArquivos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		loadMode: "raw",   
		  		load: function() {
		      	return $.getJSON(urlPreparacao,{method:"GetAdmissoes"});
		  		},
				})
			});
			
			function download(pNumAdmissao){
				$.get(urlPreparacao,{method:"GerarArquivoIntegracaoMotion", pCodAdmissao: pNumAdmissao, 
				pDownload: 1},function(retorno){
					var array = retorno.split("~");
					if (array[0] == 1) {
						window.open(array[1],"Arquivo","width=550,height=400,scrollbars=0,resizable=0,menubar=0,location=0,top=0,left=100")
					}else{
						DevExpress.ui.notify("Erro: "+array[0],"error");
					}
				});
			}
			
			function processarArquivo(pNumAdmissao){
				$.get(urlPreparacao,{method:"GerarArquivoIntegracaoMotion", pCodAdmissao: pNumAdmissao, 
				pDownload: 0},function(retorno){
					var array = retorno.split("~");
					if (array[0] == 1) {
						DevExpress.ui.notify("Arquivo gerado com sucesso, favor aguardar a integração!","success");
					}else{
						DevExpress.ui.notify("Erro: "+array[0],"error");
					}
				});
			}
			
			$("#divMotionArquivo").dxDataGrid({
				dataSource: dSMotionArquivos,
				columns: [
					{	dataField: "dataHora", caption: "Data/Hora de Criação", width: 150, alignment: "center"},
					{ dataField: "numeroAdmissao", caption: "Núm. Admissão", width: 150, alignment: "center"},
					{	dataField: "paciente", caption: "Paciente"},
					{	dataField: "procedimentos", caption: "Procedimento(s)", visible: 0, cellTemplate: function (container, options) { 
						conteudo = options.data.procedimentos;
						container.append(
							$("<div style='text-align: Center;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "acao1", caption: " ", width: 25, alignment: "center", cellTemplate: function (container, options) { 
						conteudo = "<span onClick=download('"+options.data.numeroAdmissao+"')>" +
											"<i class='fas fa-download' title='Download' style='color:#337AB7;cursor:pointer;' />" +
											"</span>";
						container.append(
							$("<div style='text-align: Center;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "acao2", caption: " ", width: 25, cellTemplate: function (container, options) { 
						conteudo = "<span onClick=processarArquivo('"+options.data.numeroAdmissao+"')>" +
											 "<i class='fas fa-cogs' title='Reprocessar Arquivo' style='color:#337AB7;cursor:pointer;' />" +
											 "</span>";
						container.append(
							$("<div style='text-align: Center;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
				],
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() { 
					var heig = window.innerHeight - 269;
					return (heig < 331 ? 331 : heig); 
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true },
				pager: {
					showPageSizeSelector: true,
					showInfo: true,
					showNavigationButtons: true,
					visible: true,
					allowedPageSizes: [25, 50, 100],
				},
				paging: {
					enabled: true,
					pageSize: 50
				},
			});

			/////Motion Financeiro

			objMotionFinanceiro = $("#divMotionFinanceiro").dxForm({
				scrollingEnabled: true,
				showColonAfterLabel: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function() { return window.innerHeight - 110;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 3,
				items: [{
					colSpan: 3,
					colCount: 2,
					itemType: "group",
					cssClass: "second-group",
					alignItemLabels: true,
					alignItemLabelsInAllGroups: true,
					caption: "Configuração",
					items: [{
						dataField: "motionFinanceiroModulo",
						label: { text: "Módulo", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: {
							readOnly: true,
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									loadMode: "raw",   
									load: function() {
										return $.getJSON(urlPreparacao,{method:	"GetModulo"});
									}
								})
							}),
							displayExpr: "text",
							valueExpr: "id",
							searchEnabled: true,
						}
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Arquivos - Gerados",
					colSpan: 3,
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divMotionFinanceiroArquivo'>")
						}
					}]
				}]
			}).dxForm("instance");

			dSMotionFinanceiroArquivos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		loadMode: "raw",   
		  		load: function() {
		      	return $.getJSON(urlPreparacao,{method:"GetLotes"});
		  		},
				})
			});
			
			function downloadMotionFinan(pNumLote){
				console.log(pNumLote)
				$.get(urlPreparacao,{method:"GerarArquivoIntegracaoMotionFinanceiro", pNumLote: pNumLote, pDownload: 1},function(retorno){
					var array = retorno.split("~");
					if (array[0] == 1) {
						window.open(array[1],"Arquivo","width=550,height=400,scrollbars=0,resizable=0,menubar=0,location=0,top=0,left=100")
					}else{
						DevExpress.ui.notify("Erro: "+array[0],"error");
					}
				});
			}
			
			$("#divMotionFinanceiroArquivo").dxDataGrid({
				dataSource: dSMotionFinanceiroArquivos,
				columns: [
					{	dataField: "dataHora", caption: "Data/Hora de Criação", width: 150, alignment: "center"},
					{ dataField: "numeroLote", caption: "Núm. Lote", width: 150, alignment: "center"},
					{	dataField: "notaFiscal", caption: "Nota(s) Fiscal(is)"},
					{ dataField: "descSituacao", caption: "Situação", width: 150, alignment: "center"},
					{	dataField: "acao1", caption: " ", width: 25, alignment: "center", cellTemplate: function (container, options) { 
						conteudo = "";
						if (options.data.notaFiscal && options.data.codSituacao == 3) {
							conteudo = "<span onClick=downloadMotionFinan('"+options.data.numeroLote+"')>" +
												"<i class='fas fa-download' title='Download' style='color:#337AB7;cursor:pointer;' />" +
												"</span>";
						}
						container.append(
							$("<div style='text-align: Center;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "acao2", caption: " ", width: 25, cellTemplate: function (container, options) { 
						conteudo = "";
						if (options.data.notaFiscal && options.data.codSituacao == 3 && options.data.modulo) {
							conteudo = "<span>" +
												 "<i class='fas fa-cogs' title='Reprocessar Arquivo' style='color:#337AB7;cursor:pointer;' />" +
												 "</span>";
						}
						container.append(
							$("<div style='text-align: Center;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
				],
				columnChooser: { enabled: false, mode: "dragAndDrop"},
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() { 
					var heig = window.innerHeight - 269;
					return (heig < 331 ? 331 : heig); 
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true },
				selection: { mode: "multiple", deferred: true, allowSelectAll: false},
        onCellPrepared: function(e) {
					if (e.rowType == "header" && e.column.command == "select") {
					  e.cellElement.find('.dx-select-checkbox').dxCheckBox("instance").option("disabled", true);
					  e.cellElement.off();
					}
					if (e.rowType == "data" && e.column.command == "select" && e.data.notaFiscal == "") {
					  e.cellElement.find('.dx-select-checkbox').dxCheckBox("instance").option("disabled", true);
					  e.cellElement.off();
					}
        },
        onSelectionChanged: function(selectedItems) {
					objGrid = $("#divMotionFinanceiroArquivo").dxDataGrid("instance");
					objGrid.getSelectedRowsData().then(function (rowData) {
          	if (rowData.length == 0) {
		         $("#idDownloadMotionFin").dxButton("instance").option("disabled", true);
          	}else{
		         $("#idDownloadMotionFin").dxButton("instance").option("disabled", false); 
          	}
					});
        },        				
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							disabled: true,
							icon: "fas fa-download",
							hint: "Download do(s) Lote(s) Selecionado(s)",
							elementAttr: { id: "idDownloadMotionFin" },
							onClick: function (e) {
								var numLotes = "";
								objGrid = $("#divMotionFinanceiroArquivo").dxDataGrid("instance");
								objGrid.getSelectedRowsData().then(function (rowData) {
			          	for (var count = 0; count < rowData.length; count++) {
				          	numLotes += (numLotes == "" ? "" : ";") + rowData[count].numeroLote;
			          	}
									downloadMotionFinan(numLotes)
								});
							}
						}
					},{
						location: "after",
						widget: "dxButton",
						options: {
							disabled: true,
							elementAttr: { id: "idReprocessarMotionFin" },
							icon: "fas fa-cogs",
							hint: "Reprocessar Arquivo(s) Selecionado(s)",
							onClick: function (e) {
							}
						}
					})
				},
				pager: {
					showPageSizeSelector: true,
					showInfo: true,
					showNavigationButtons: true,
					visible: true,
					allowedPageSizes: [25, 50, 100],
				},
				paging: {
					enabled: true,
					pageSize: 50
				},
			});
			
			/////Prevent
			
			dSPlanoSaude = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = objPrevent.getEditor("preventConfConvenio").option("value");
						return $.getJSON(urlPreparacaoAgend,{method: "GetPlanoSaudeCampo", pCodOrganizacao: pCodConvenio});
					}
				})
			});

			var nomePaiOrganizacaoAnt = "";
			objPrevent = $("#divPrevent").dxForm({
				scrollingEnabled: true,
				showColonAfterLabel: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function() { return window.innerHeight - 110;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 3,
				items: [{
					colSpan: 3,
					colCount: 2,
					itemType: "group",
					cssClass: "second-group",
					alignItemLabels: true,
					alignItemLabelsInAllGroups: true,
					caption: "Configuração",
					items: [{
						dataField: "preventConfConvenio",
						label: { text: "Convênio", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										return $.getJSON(urlPreparacaoOrc,{
											method:	"GetConvenio",
											pCodConvenio: args
										});
									},
									load: function(args) {
										return $.getJSON(urlPreparacaoOrc,{
											method				:	"GetConvenio",
											pSkip					:	args.skip,
											pTake					:	args.take,
											pSearchValue	:	args.searchValue,
											pCodConvenio  : "",
											pParticular 	: "",
											pFlagConvenio : 1,
											pConvenio 		: ""

										});
									}
								})
							}),
							showClearButton: true,
							onValueChanged: function (e) {
								objPrevent.getEditor("preventConfPlanoSaude").option("value","");
								dSPlanoSaude.reload();
							},
							displayExpr: "NomeOrganizacao",
							valueExpr: "CodOrganizacao",
							searchEnabled: true,
						}
					},{
						dataField: "preventConfPlanoSaude",
						label: { text: "Plano de Saúde", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: {
							showClearButton: true,
							dataSource: dSPlanoSaude,
							itemTemplate: function (data, itemIndex, element) {
								if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
									retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
									nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
								}else{
									retorno = data.nomeOrganizacao;
								}
								return element.append(retorno)
							},
							displayExpr: "nomeOrganizacao",
							valueExpr: "codOrganizacao",
							searchEnabled: true,
						}
					},{
						dataField: "preventModuloUpload",
						label: { text: "Módulo Upload", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									loadMode: "raw",   
									load: function() {
										return $.getJSON(urlPreparacao,{method:	"GetModulo"});
									}
								})
							}),
							displayExpr: "text",
							valueExpr: "id",
							searchEnabled: true,
						}
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "De/Para",
					items: [{
						dataField: "preventDeParaTipoTabela",						
						editorType: "dxRadioGroup",
						label: { text: "Tipo de Tabela" },
						editorOptions: {
							dataSource: [{text: "Procedimento", value: "P"}],
							layout: "vertiacal", displayExpr:"text", valueExpr:"value", 
							value: "P"
						}
					},{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPreventDeParaTabela'>")
						}
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Arquivos - Processados",
					colSpan: 2,
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPreventArquivo'>")
						}
					}]
				}]
			}).dxForm("instance");

			dSPreventDeParaTabela = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "sequencia",
		  		loadMode: "raw",   
		  		load: function() {
		      	return $.getJSON(urlPreparacao,{method:"GetTabelaDePara",pCliente:"PREVENT",pTipoTabela:"PROCEDIMENTO"});
		  		},
		  		insert: function (values) {
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARParametrosIntegracoes.ArmTabelaDePara("PREVENT", "PROCEDIMENTO", "", objDados, YBED))#;
		    	},
		    	update: function (key, values) {
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARParametrosIntegracoes.ArmTabelaDePara("PREVENT", "PROCEDIMENTO", key, objDados, YBED))#;
		    	},
					remove: function (key) {
						var retorno = #server(VAR.CSP.VARParametrosIntegracoes.ExcTabelaDePara("PREVENT", "PROCEDIMENTO", key, YBED))#;
		    	}				
				})
			});

			$("#divPreventDeParaTabela").dxDataGrid({
				dataSource: dSPreventDeParaTabela,
				columns: [
					{	dataField: "de", caption: "De", width: 120},
					{	dataField: "paraDesc", caption: "Para", 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descItem = #server(User.Search.PesquisasJson.GetDescricaoINART(value))#;
							objLinha.defaultSetCellValue(rowData, "("+value+") "+descItem);
							rowData.para = value;	
				  	}
				  },
					{	dataField: "criadoPor", caption: "Criado Por", allowEditing: 0, visible: 0 },
					{	dataField: "criadoEm", caption: "Criado Em", allowEditing: 0, visible: 0 },
					{	dataField: "alteradoPor", caption: "Alterado Por", allowEditing: 0, visible: 0 },
					{	dataField: "alteradoEm", caption: "Alterado Em", allowEditing: 0, visible: 0 },
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "paraDesc") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlSearch,{
										method			:	"GetINART",
										pCodProduto	: args
									});
								},
								load: function(args) {
									return $.getJSON(urlSearch,{
										method				:	"GetINART",
										pSkip					:	args.skip,
										pTake					:	args.take,
										pSearchValue	:	args.searchValue,
										pAlias				: 1,
										pItemPedido		: 1
									});
								}
							})
						});
						e.editorOptions.value = e.row.data.para;
						e.editorOptions.displayExpr = "DescProduto";
						e.editorOptions.valueExpr = "CodProduto";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() { 
					var heig = window.innerHeight - 336;
					return (heig < 336 ? 336 : heig); 
				},
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fas fa-file-import",
							hint: "Importar Tabela",
							onClick: function (e) {
								importarArquivo('040', "dSPreventDeParaTabela.reload();");
							}
						}
					})
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
			});
			
			dSPreventArquivos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		loadMode: "raw",   
		  		load: function() {
		      	return $.getJSON(urlPreparacao,{method:"GetArquivos",pCliente:"PREVENT"});
		  		},
				})
			});
			
			$("#divPreventArquivo").dxDataGrid({
				dataSource: dSPreventArquivos,
				columns: [
					{	dataField: "dataHoraRecebimento", caption: "Data/Hora de Recebimento", width: "150", alignment: "center"},
					{	dataField: "fileName", caption: "Nome Arquivo"},
				],
				columnChooser: { enabled: false, mode: "dragAndDrop"},
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() { 
					var heig = window.innerHeight - 305;
					return (heig < 368 ? 368 : heig); 
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true },
				masterDetail: {
					enabled: true,
					autoExpandAll: true,
					template: function(container, options) { 
						$("<div>").dxDataGrid({
							columnAutoWidth: true,
							showBorders: true,
							rowAlternationEnabled: true,
							cellHintEnabled: true,		
							allowColumnReordering: true,
							allowColumnResizing: true,
							wordWrapEnabled: true,
							cellHintEnabled: true,	
							showColumnLines: true,
							showRowLines: true,
							showBorders: true,
							hoverStateEnabled: true,
							editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
							columnChooser: { enabled: true, mode: "dragAndDrop"},
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									loadMode: "raw",   
						  		key: "solicitacao",
									load: function() {
										return $.getJSON(urlPreparacao,{method:"GetSolicitacoes",pCliente:"PREVENT",pArquivo:options.data.arquivo});
									},
						    	update: function (key, values) {
							    	var statusInt = values.statusIntegracao;
										var retorno = #server(VAR.CSP.VARParametrosIntegracoes.ArmSolicitacao("PREVENT", key, statusInt, YBED))#;
										var retorno = retorno.split("~");
										DevExpress.ui.notify(retorno[1],retorno[0]);
						    	}
								}) 		
			        }),
							columns: [
								{dataField: "codPaciente", caption: "Cod. Paciente Alphalinc", width: 120, alignment: "center", allowEditing: 0},
								{dataField: "codLis", caption: "Todos Código Lis", width: 200, alignment: "center", visible: 0, allowEditing: 0 },
								{dataField: "nome", caption: "Nome", width: 300, alignment: "center", allowEditing: 0},
								{dataField: "dataNascimento", caption: "Data de Nascimento", alignment: "center", width: 85, allowEditing: 0},
								{dataField: "sexo", caption: "Sexo", width: 80, alignment: "center", allowEditing: 0, lookup: {
									dataSource: {
										store: {type: 'array', data: [{id: "F", name: "Feminino"},{id: "M", name: "Masculino"}],key: "id"},
	                },
  	              valueExpr: 'id',
	                displayExpr: 'name' 
								}},
								{dataField: "procedimentos", caption: "Procedimento(s)", width: 200, alignment: "center", visible: 0, allowEditing: 0 },
								{dataField: "numeroAdmissao", caption: "Núm. Admissão", width: 150, alignment: "center", allowEditing: 0, cellTemplate: function (container, options) { 
									conteudo = "<table border='0' width='100%'><tr><td style='text-align: center;'>" +
														 "<div class='custom-item'>" + options.data.numeroAdmissao +"</div>" +
														 "</td><td width='25px;' style='text-align: center;'";
									if (options.data.numeroAdmissao != "") {
										conteudo += "<span onClick=alterarConvenio('"+options.data.numeroAgendamento+"','"+options.data.numeroAdmissao+"','PREVENT')>" +
																"<i class='far fa-hospital' title='Alterar Convênio/Plano de Saúde' style='color:"+options.data.cor+";cursor:pointer;' />" +
																"</span>";
									}
									conteudo += "</td></tr></table>";
									container.append(
										$("<div style='text-align: left;' />")
											.html(conteudo)
											.appendTo(container)
									);
								}},
								{dataField: "statusIntegracao", caption: "Status Integração", width: 120, alignment: "center", allowEditing: 1, lookup: {
									dataSource: {
										store: {type: 'array', data: [
											{id: 0, name: "Pendente"},
											{id: 1, name: "Processando"},
											{id: 2, name: "Integrado"},
											{id: 3, name: "Erro"}
										],key: "id"},
	                },
  	              valueExpr: 'id',
	                displayExpr: 'name' 
								}},
								{dataField: "mensagem", caption: "mensagem", width: 300, alignment: "center", visible: 0, allowEditing: 0},
							],
							onEditingStart: function(e) {
								var idCelula = e.data.statusIntegracao;
								e.cancel = e.data.statusIntegracao != 3;
							},
							height: function() { 
								var heig = window.innerHeight - 510;
								return (heig < 470 ? 470 : heig); 
							},
							onToolbarPreparing: function (e) {
								var dataGrid = e.component;
								e.toolbarOptions.items.unshift({
									location: "before",
                  template	: function () {
										return	$("<div style='width:500px;text-align:left;'/>").append(
															$("<span><b>Legenda: &nbsp;</b></span>" + 
																"<span style='color:red;'>" +
																"<i class='far fa-hospital' style='color:red;' />" +
																" <b>Pendente de Cadastro &nbsp;</b></span>" +
																"<span style='color:#337AB7;'>" +
																"<i class='far fa-hospital' style='color:#337AB7;' />" +
																" <b>Concluído</b></span></div>"  
															)
														);
                	}
								},{
									location: "after",
									widget: "dxButton",
									options: {
										icon: "fas fa-redo",
										hint: "Atualizar",
										onClick: function (e) {
											dSPreventArquivos.reload();
										}
									}
								})
							}, 
						}).appendTo(container);
					},	
				},	
				pager: {
					showPageSizeSelector: true,
					showInfo: false,
					showNavigationButtons: true,
					visible: true 
				},
				paging: {
					enabled: true,
					pageSize: 1
				},
			});
			
			function alterarConvenio(pNumeroAgendamento, pNumeroAdmissao, pCliente){
				codAgendamento = pNumeroAgendamento;
				codAdmissao = pNumeroAdmissao;
				cliente	= pCliente;
				dSProcedimentoAgendamento.reload();
				dSGuiasCadAlt.reload();
				$("#divAlterarConvenio").dxPopup("show");
				$("#formAlterarConvenio").dxForm("instance").getEditor("procedimento").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("senha").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option("value", "");
				$("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option("value", "");
			}
			////////////////

			dSProcedimentoAgendamento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
      		load: function() {
	        	return $.getJSON(urlPreparacao,{ method: "CarregarProcedimento", pCodAdmissao: codAdmissao});
      		}
				})
			});

			dSMedicoExterno = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
      		load: function() {
	        	return $.getJSON(urlPreparacaoAgend,{ method:	"CarregaProfissional", pFlagExterno: "E"});
      		}
				})
			});

			dSPlanoSaudeAlt = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = $("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value");
						return $.getJSON(urlPreparacaoAgend,{method: "GetPlanoSaudeCampo", pCodOrganizacao: pCodConvenio});
					}
				})
			});

			dSGuiasCadAlt = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacaoAdm, {method: "ListGuias", pCodAgendamento: codAgendamento, 
						pNumAdmissaoControle: "", pSequencia: ""});
					},
				})
			});

			$("#divAlterarConvenio").dxPopup({
				visible: false,
				title: "Alteração de Convênio/Plano de Saúde ou Guias e Senhas de Autorização",
				width: 950,
				height: 420,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					formAltConvenio = $("<div id='formAlterarConvenio'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 2,
						items: [{
							colSpan: 2,
							dataField: "procedimento",
							label: { text: "Procedimento"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dSProcedimentoAgendamento,
								valueExpr: "sequencia", 
								displayExpr: "procedimento", 
								searchEnabled: true,
								onValueChanged: function (e) {
									if (!e.value) {
										$("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("senha").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option("value", "");
										$("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option("value", "");
									}else{
										$.getJSON(urlPreparacao,{method:	"GetProcedimentoAlteracao", 
										pCodAgendamento: codAgendamento, pNumAdmissaoControle: codAdmissao, 
										pSequencia: e.value, pCliente: cliente},function(objRetorno){
											$("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option("value", "");
											$("#formAlterarConvenio").dxForm("instance").getEditor("senha").option("value", "");
											$("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option("value", "");
											$("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option("value", "");
											$("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option("value", objRetorno.solicitante);
											$("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value", objRetorno.convenio);
											$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value", objRetorno.planoSaude);
											$("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option("value", objRetorno.carteirinha);
											$("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option("value", objRetorno.dtVencimento);
											$("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value", objRetorno.codGuia);
										});
									}
								},
							}
						},{
							colSpan: 2,
							dataField: "solicitante",
							label: { text: "Solicitante"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dSMedicoExterno,
								valueExpr: "CodProvider", 
								displayExpr: "DescProvider", 
								searchEnabled: true,
								buttons: [{
									location:"after",
									name: "addPRocedimento",
									options:{
										icon	: "add",
										hint	: "Adicionar Médico",
										type	: "default",
										stylingMode : "contained",
										onClick	: function(){
											$("#divCadastrarMedico").dxPopup("show");
										}
									}
								}]									
							}
						},{
							itemType: "group",
							cssClass: "second-group",
							caption: "Convênio/Plano de Saude",
							colCount: 6,
							items: [{							
								colSpan: 6,
								dataField: "convenio",
								label: { text: "Convênio"},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: new DevExpress.data.DataSource({
										store: new DevExpress.data.CustomStore({
											byKey: function(args) {
												return $.getJSON(urlPreparacaoOrc,{
													method:	"GetConvenio",
													pCodConvenio: args
												});
											},
											load: function(args) {
												return $.getJSON(urlPreparacaoOrc,{
													method				:	"GetConvenio",
													pSkip					:	args.skip,
													pTake					:	args.take,
													pSearchValue	:	args.searchValue,
													pCodConvenio  : "",
													pParticular 	: 0,
													pFlagConvenio : 1,
													pConvenio 		: ""

												});
											}
										})
									}),
									showClearButton: true,
									onValueChanged: function (e) {
										$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value","");
										dSPlanoSaudeAlt.reload();
									},
									displayExpr: "NomeOrganizacao",
									valueExpr: "CodOrganizacao",
									searchEnabled: true,
								}
							},{
								colSpan: 6,
								dataField: "planoSaude",
								label: { text: "Plano de Saúde"},
								editorType: "dxSelectBox",
								editorOptions: {
								showClearButton: true,
									dataSource: dSPlanoSaudeAlt,
									itemTemplate: function (data, itemIndex, element) {
										if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
											retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
											nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
										}else{
											retorno = data.nomeOrganizacao;
										}
										return element.append(retorno)
									},
									displayExpr: "nomeOrganizacao",
									valueExpr: "codOrganizacao",
									searchEnabled: true,
								}
							},{
								colSpan: 4,
								dataField: "carteirinha",
								label: { text: "Carteirinha"},
								editorType: "dxTextBox",
							},{
								colSpan: 2,
								dataField: "dataVencimento",
								label: { text: "Vencimento Carteirinha"},
								editorType: "dxDateBox",
								editorOptions: {
									type: "date",
									width: 130,
									dateSerializationFormat: "yyyy-MM-dd",
								}
							}]
						},{
							itemType: "group",
							cssClass: "second-group",
							caption: "Guia e Senha de Autorização",
							colCount: 3,
							items: [{
								colSpan: 2,
								dataField: "codGuia",
								label: { text:"Guia"},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: dSGuiasCadAlt,
									onValueChanged: function(e) {
										if (e.value) {
											$.getJSON(urlPreparacaoAdm, {method: "GetGuia", pCodAgendamento: codAgendamento, 
											pNumAdmissaoControle: "", pSequencia: e.value}, function(objRetorno) {
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option({"readOnly": true, value: objRetorno.dataAutorizacao});
												$("#formAlterarConvenio").dxForm("instance").getEditor("senha").option({"readOnly": true, value: objRetorno.senha});
												$("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option({"readOnly": true, value: objRetorno.validadeSenha});
												$("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option({"readOnly": true, value: objRetorno.numGuia});
											});
										}else{
											$("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value", "");
											$("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option({"readOnly": false, value: ""});
											$("#formAlterarConvenio").dxForm("instance").getEditor("senha").option({"readOnly": false, value: ""});
											$("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option({"readOnly": false, value: ""});
											$("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option({"readOnly": false, value: ""});
										}
									},
									showClearButton: true,
									searchEnabled: false,
									valueExpr: "sequencia", 
									displayExpr: "descricao",
								}
							},{colSpan: 1},{
								dataField: "dataAutorizacao",
								label: { text:"Data Autorização"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "senha",
								label: { text:"Senha"},
							},{
								dataField: "dataValidade",
								label: { text:"Data de Validade Senha"},
								editorType: "dxDateBox",
								editorOptions : { useMaskBehavior: true, dateSerializationFormat: "yyyy-MM-dd", }
							},{
								colSpan: 2,
								dataField: "numGuiaOperadora",
								label: { text:"Número da Guia Atribuída pela Operadora:"},
							}]
						},{
							itemType: "button", horizontalAlignment: "right", buttonOptions: {
			 					icon: "save", text: "Salvar", type: "success", stylingMode: "contained",
								onClick: function(){
									var pSequencia			= $("#formAlterarConvenio").dxForm("instance").getEditor("procedimento").option("value");

									var pSolicitante 		= $("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option("value");
									
									var pCodConvenio 		= $("#formAlterarConvenio").dxForm("instance").getEditor("convenio").option("value");
									var pCodPlano				=	$("#formAlterarConvenio").dxForm("instance").getEditor("planoSaude").option("value");
									var pNumCarteirinha	= $("#formAlterarConvenio").dxForm("instance").getEditor("carteirinha").option("value");
									var pDtCarteirinha	= $("#formAlterarConvenio").dxForm("instance").getEditor("dataVencimento").option("value");

									var pCodGuia 					= $("#formAlterarConvenio").dxForm("instance").getEditor("codGuia").option("value");
									var pDtAutorizacao 		= $("#formAlterarConvenio").dxForm("instance").getEditor("dataAutorizacao").option("value");
									var pSenha 						= $("#formAlterarConvenio").dxForm("instance").getEditor("senha").option("value");
									var pDtValidade 			= $("#formAlterarConvenio").dxForm("instance").getEditor("dataValidade").option("value");
									var pNumGuiaOperadora = $("#formAlterarConvenio").dxForm("instance").getEditor("numGuiaOperadora").option("value");

									if (pSequencia == "" || pSequencia == null) {
										DevExpress.ui.notify("Favor selecionar o procedimento.","warning");
										return;
									}

									if (pSolicitante == "" || pSolicitante == null) {
										DevExpress.ui.notify("Favor informar o solicitante.","warning");
										return;
									}

									$.get(urlPreparacao,{method:"ArmConvenioAlteracao", pCodAgendamento: codAgendamento, 
									pSequencia: pSequencia, pCodConvenio: pCodConvenio, pCodPlano: pCodPlano,
									pNumCarteirinha: pNumCarteirinha, pDtCarteirinha: pDtCarteirinha, pCodGuia: pCodGuia,
									pDtAutorizacao: pDtAutorizacao, pSenha: pSenha, pDtValidade: pDtValidade,
									pNumGuiaOperadora: pNumGuiaOperadora,pSolicitante:pSolicitante},function(objRetorno){
										if (objRetorno ==  1) {
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											codAgendamento = "";
											codAdmissao = "";
											cliente	= "";
											$("#divAlterarConvenio").dxPopup("hide");
											dSPreventArquivos.reload();
											dSMotionFinanceiroArquivos.reload();
										}else {
											DevExpress.ui.notify(objRetorno,"warning");
										}
									})
            		}
							}
						},{
							itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									altProcAgendand			= "";
									altProcAgeSeq				= "";
									altProcAgeProcAnt		= "";
									altProcFlagProcAgen = "";
									$("#divAlterarConvenio").dxPopup("hide");
								}
							}
						}]
					});
					e.append(formAltConvenio);
				}        		
			});


			$("#divCadastrarMedico").dxPopup({
				visible: false,
				title: "Cadastrar Médico Solicitante",
				width: 650,
				height: 200,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					formCadastrarMedico = $("<div id='formCadastrarMedico'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 4,
						items: [
							{dataField: "Nome", label: { text: "Nome"}, colSpan: 4},
							{dataField: "CRMUF", label: { text: "U.F. CRM"}, colSpan: 1},
							{dataField: "CRMNumero", label: { text: "Número CRM"}, colSpan: 1, editorType: "dxNumberBox"},
							{dataField: "CBO", colSpan: 2, label: { text: "CBO"}, editorType: "dxSelectBox",
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"CBO",pExibirCod:1});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}},
							{},
							{itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save",
								onClick: function(){
									var pNome = $("#formCadastrarMedico").dxForm("instance").getEditor("Nome").option("value");
									var pUFCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMUF").option("value");
									var pCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMNumero").option("value");
									//pré medicaçãoPreMedicacao
									if (pNome == "" || pUFCRM == "" || pCRM == "" ) {
										DevExpress.ui.notify("É obrigatório preencher todos os campos","warning",1500);
										return;
									}
									$.get(urlPreparacaoAgend,{method:"ArmMedico", pNome:pNome, 
										pUFCRM:pUFCRM, pCRM:pCRM,YBED:YBED},function(objeto){
										var array = objeto.split("|")
										if (array[0]==1){
											dSMedicoExterno.reload();
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											$("#divCadastrarMedico").dxPopup("hide");
											$("#formAlterarConvenio").dxForm("instance").getEditor("solicitante").option("value", array[1]);
										}else{
											DevExpress.ui.notify("Erro: "+array[0],"error");
										}
									});
								}}
							},
							{itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									$("#divCadastrarMedico").dxPopup("hide");
								}}
							}
						]
					});
					
					e.append(formCadastrarMedico);
				}        		
			});


			$(document).ready(function () {
				carregarDados();
			});
			
			function carregarDados(){
				$.getJSON(urlPreparacao,{method: "GetDados"},function(objRetorno){
					objPrevent.getEditor("preventConfConvenio").option("value", objRetorno.preventCodConvenio);
					objPrevent.getEditor("preventConfPlanoSaude").option("value", objRetorno.preventCodPlanSaude);
					objPrevent.getEditor("preventModuloUpload").option("value", objRetorno.preventModuloUpload);
					//
					objMotion.getEditor("motionModulo").option("value", objRetorno.motionCodModulo);
					//
			    objMotionFinanceiro.getEditor("motionFinanceiroModulo").option("value", objRetorno.motionCodModuloFinanceiro);
				});				
			}
  
		</script>
	</body>
</html>
