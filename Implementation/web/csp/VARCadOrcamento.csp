<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		Do ^WWWVAR

		Set YUSER 		= $Get(%request.Data("YUSER", 1))
		Set YBED 			= $Get(%request.Data("YBED", 1))
		Set YM 				= $Get(%request.Data("YM", 1))
		Set YLOCATION = $Get(%request.Data("YLOCATION", 1))

		Set PortCache = $Get(%request.CgiEnvs("SERVER_PORT"))
		Set PageURL 	= $Get(%request.CgiEnvs("CACHE_URL"))
		Set PageName 	= %request.PageName
		Set app 			= %request.Application
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		Set url				= "http://"_host_app

		Set URLPreparacao 		= "VAR.CSP.VARCadOrcamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacaoAgen	= "VAR.CSP.VARCadAgendamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLSearch					= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLLogin 					= "COMLogin.cls"
		Set URLLink 					= "www.cls"

		Set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)

		Set dataMinLimite	= $ZDate(+$Horolog,3)

		//Verifica se a sessão
		Set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	
		Set objGetPadraoAgendamento = ##Class(VAR.CSP.VARConfiguracaoAgendamento).GetPadraoAgendamento() 
		Set dtPadInicialAgen	= objGetPadraoAgendamento.dtPadInicialAgen
		Set dtPadFinalAgen		= objGetPadraoAgendamento.dtPadFinalAgen
		Set hrPadInicalAgen		= objGetPadraoAgendamento.hrPadInicalAgen
		Set hrPadFinalAgen		= objGetPadraoAgendamento.hrPadFinalAgen
		Set envioDocumento 		= objGetPadraoAgendamento.envioDocumento
		Set padValReservaMin 	= objGetPadraoAgendamento.valReservaMin
		Set orcEnvioEmail			= objGetPadraoAgendamento.orcEnvioEmail
	
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Orçamento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<style>
	.cell-selected {
		background-color: #FFFFB9;
	}

	.dx-datagrid {
		user-select: none;
		-webkit-user-select: none;
	}		

	.dx-row2 { background-color: #F5F5F5; }
	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	</style>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divPreRequisito"></div>
		<div id="divEscolherProfHorario"></div>
		
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx-gantt.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao 		= '#(URLPreparacao)#';
			var urlPreparacaoAgen	= '#(URLPreparacaoAgen)#';
			var urlSearch					= '#(URLSearch)#';
			var urlLink 					= '#(URLLink)#';
			var YBED 							= '#(YBED)#';
			var YUSER 						= '#(YUSER)#';
			var YLOCATION 				= '#(YLOCATION)#';
			var nomeLocal 				= '#(nomeLocal)#';
			var codOrcamento			= "";
			var codProcPreRequis	= "";
			var selCodProcedimento= "";
			var orcEnvioEmail 		= '#(orcEnvioEmail)#';

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			$(document).ready(function () {
				limparPaciente();
				//objCodigoPaciente.option("value","1");
				//editarOrcamento('21/0000000044');
			});

			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) { return "lg"; },
				screenByWidth: function(width) { return "lg"; },
				height:function(){ 20},
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colCount: 10,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 10,
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
		  			  selectedIndex: 0,
							deferRendering: false,
							animationEnabled: false,
							showNavButtons:true,
						},	
							height:'10px',
							tabs:[{
								title	: "Pesquisar Paciente",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divSelPaciente'>")
									}
								}],
							},{
								title	: "Realizar Orçamento",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divOrcamento'>")
									}
								}]
							}]
						}
					]
				}]
			}).dxForm("instance");

			objSelPaciente = $("#divSelPaciente").dxForm({
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 2,
				items	: [{
					colCount: 6,
					itemType: "group",
					cssClass: "second-group",
					items: [{
						colSpan: 6, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
					},{
						colSpan: 6, 
						dataField: "pacienteCodigo",
						label: { text:"Pesquisar:", alignment: "right"},
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPacienteCodigo'>")
						}
					},{
						colSpan: 4, 
						dataField: "pacienteNome",
						label: { text:"Nome:", alignment: "right"},
						validationRules: [{type: "required"}],	
					},{
						colSpan: 2, 
						dataField: "pacienteNI",
						label: { text:"Nome:", alignment: "right", visible: false},
						editorType: "dxCheckBox",
						editorOptions : { 
							text: "Não Identificado",
							onValueChanged: function(e) {
								if (e.value == true) {
									$.get(urlPreparacao,{method: "GetPacienteNaoIdentificado"}, function(retorno){
										objCodigoPaciente.option("value", "NI000001");
										objCodigoPaciente.option("value", "NI000001");
									});
								}
							}
						}
					},{
						colSpan: 2, 
						dataField: "pacienteProntuario",
						label: { text:"Prontuário:", alignment: "right" },
					},{
						colSpan: 2, 
						dataField: "pacienteDataNascimento",
						editorType: "dxDateBox",
						label: { text:"Nascimento:", alignment: "right" },
						validationRules: [{type: "required"}],	
						editorOptions : { useMaskBehavior: true, width: 100 }
					},{
						colSpan: 2, 
						dataField: "pacienteSexo",
						editorType: "dxSelectBox",
						label: { text:"Sexo:", alignment: "right" },
						editorType: "dxSelectBox",
						validationRules: [{type: "required"}],	
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetWWW101",pDescParametro:"SEX"});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					},{
						colSpan: 6, 
						dataField: "pacienteNomeMae",
						label: { text:"Nome Mãe:", alignment: "right"},
						//validationRules: [{type: "required"}],	
					},{
						colSpan: 3, dataField: "pacienteCPF", 
						label: { text:"CPF:", alignment: "right"},
						editorOptions: {
							maxLength: 11,
							onValueChanged: function (e) {
								if (!e.value) return;
								if (!validarCPF(e.value)) {
									DevExpress.ui.notify("CPF invalido.","warning");	
									objSelPaciente.getEditor("pacienteCPF").option("value", "");
									objSelPaciente.getEditor("pacienteCPF").focus();  
								}
							}
						}, 
						validationRules: [{type: "required"}, ]
					},{colSpan: 3, dataField: "pacienteRG", label: { text:"RG:", alignment: "right"}},
					{colSpan: 3, dataField: "pacienteTelefone", label: { text:"Telefone:", alignment: "right"}, editorOptions:{mask:"(99)9999-9999"}},
					{colSpan: 3, dataField: "pacienteCelular", label: { text:"Celular:", alignment: "right"}, editorOptions:{mask:"(99)99999-9999"}},
					{colSpan: 6, dataField: "pacienteEmail", label: { text:"E-mail:", alignment: "right"}},
					{colSpan: 6, template: function (data, itemElement) { itemElement.append("<div style='height:3px;border:0px solid red;text-align:right'>")}},
				]},{
					colCount: 2,
					itemType: "group",
					cssClass: "second-group",
					caption: "Endereço",
					items: [
						{dataField: "pacienteCEP", label: { text:"CEP:", alignment: "right"},
							editorOptions: {
								onValueChanged: function(e) {
									if (e.value) {
										$.getJSON(urlPreparacaoAgen,{method: "GetCEP", pCEP: e.value}, function(objRetorno){
											if (objRetorno.Logradouro != "") {
												objSelPaciente.getEditor("pacienteLogradouro").option("value",objRetorno.Logradouro);
												objSelPaciente.getEditor("pacienteBairro").option("value",objRetorno.Bairro);
												objSelPaciente.getEditor("pacienteCidade").option("value",objRetorno.Cidade);
												objSelPaciente.getEditor("pacienteEstado").option("value",objRetorno.UF);
											}
										});
									}
								}
							}
						},{},
						{colSpan: 2, dataField: "pacienteLogradouro", label: { text:"Logradouro:", alignment: "right"}},
						{dataField: "pacienteNumeroEndereco", label: { text:"Número:", alignment: "right"}},
						{dataField: "pacienteComplemento", label: { text:"Complemento:", alignment: "right"}},
						{dataField: "pacienteBairro", label: { text:"Bairro:", alignment: "right"}},
						{dataField: "pacienteCidade", label: { text:"Cidade:", alignment: "right"}},
						{
							dataField: "pacienteEstado",
							editorType: "dxSelectBox",
							label: {
								text:"Estado:",
								alignment: "right"
							},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetWWW102",pDescParametro:"BUNDESLAND"});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}
						},
						{},
						{colSpan: 2, template: function (data, itemElement) { itemElement.append("<div style='height:33px;border:0px solid red;text-align:right'>")}},
					]
				},{
					colSpan: 2,							
					template	: function (data, itemElement) {
						itemElement.append("<div id='divPacienteAcao' style='text-align:right;border: 0px solid red;'>")
					}
				},{
					colSpan: 2,
					itemType: "group",
					cssClass: "second-group",
					caption: "Orçamentos",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPacienteOrcamentos' style='text-align:right;border: 0px solid red;'>")
						}
					}]
				}]
			}).dxForm("instance");

			dataSourcePaciente = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						console.log(args);
						return $.getJSON(urlSearch,{
							method				:	"GetPaciente",
							pCodPaciente	: args,
						});
					},
					load: function(args) {
						return $.getJSON(urlSearch,{
							method				:	"GetPaciente",
							pSkip					:	args.skip,
							pTake					:	args.take,
							pSearchValue	:	args.searchValue,
						});
					}
				})
			});	

			objCodigoPaciente = $("#divPacienteCodigo").dxSelectBox({
				dataSource: dataSourcePaciente,
				placeholder: "+",
				searchEnabled: true,
				valueExpr: "Codigo", 
				displayExpr: "Nome",
				showClearButton: true,
        itemTemplate: function(data) {
	        return	"<div class='custom-item'>" +
	        					"<div>" + data.Nome + "</div>" +
	        					"<div style='color:red;font-size:10px'>Dt. Nasc.: " + data.Nascimento + 
	        					" &nbsp; Prontuário: " + data.Prontuario + " &nbsp; CPF: " + data.CPF +
	        					"</div>" +
	        				"</div>";
        },
				onValueChanged: function(e) {
					if (!e.value) {
						objSelPaciente.resetValues();
					}else{
						carregarPaciente(e.value);
					}
					listarOrcamentos();
				}
			}).dxSelectBox("instance");

			$("#divPacienteAcao").html("<table width='100%'>" +
																	"<tr>" +
																		"<td align='right' style='vertical-align:bottom;'>" + 
																			"<div id='divPacienteSalvar'/>&nbsp;" +
																			"<div id='divPacienteLimpar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>");


			objPacienteSalvar = $("#divPacienteSalvar").dxButton({
			  icon	: "save",
			  text	: "Salvar e Orçar",
			  type	: "success",
			  stylingMode : "contained",
			  onClick	: function(){
				  pacienteCodigo = objCodigoPaciente.option("value")
	        if (!pacienteCodigo) pacienteCodigo = "";
	        if (!objSelPaciente.validate().isValid){
		        DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
		        return
	        }
	        $.getJSON(urlPreparacaoAgen,{method: "SalvarPaciente", chave: pacienteCodigo, 
	        dados: JSON.stringify(objSelPaciente.option("formData"))},function(objRetorno){
						if (objRetorno.status ==  -1) {
							DevExpress.ui.notify(objRetorno.mensagem,"warning");		
						}else if (objRetorno.status ==  1) {
							DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
							objCodigoPaciente.option("value",objRetorno.codigo)
							carregarPaciente(objRetorno.codigo);
							gerarAgendamento();
						}else{
							DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
						}
					})
			  }
			}).dxButton("instance");

			/*objPacienteAgendar = $("#divPacienteOrcar").dxButton({
			  icon	: "fas fa-file-invoice-dollar",
			  text	: "Orçar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  pacienteCodigo = objCodigoPaciente.option("value")
	        if (!pacienteCodigo) {
						DevExpress.ui.notify("Favor informar o paciente.","warning");		
		      	return;  
	        }
	        gerarAgendamento();
				 }
			}).dxButton("instance");*/

			objPacienteLimpar = $("#divPacienteLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  limparPaciente()
			  }
			}).dxButton("instance");

			function limparPaciente(){
				objSelPaciente.resetValues();
				objCodigoPaciente.option("value","");
				objSelPaciente.option("disabled", false);
				objOrcamento.option("disabled", true);
				objOrcamento.resetValues();
				listarOrcamentos();
				objSelPaciente.getEditor("pacienteNI").option("value",0);
				objSelPaciente.getEditor("pacienteNome").option("readOnly",false);
				objSelPaciente.getEditor("pacienteProntuario").option("readOnly",false);
				objSelPaciente.getEditor("pacienteNomeMae").option("readOnly",false);
				objSelPaciente.getEditor("pacienteCPF").option("readOnly",false);
				objSelPaciente.getEditor("pacienteRG").option("readOnly",false);
				objSelPaciente.getEditor("pacienteTelefone").option("readOnly",false);
				objSelPaciente.getEditor("pacienteCelular").option("readOnly",false);
				objSelPaciente.getEditor("pacienteEmail").option("readOnly",false);
				objSelPaciente.getEditor("pacienteLogradouro").option("readOnly",false);
				objSelPaciente.getEditor("pacienteNumeroEndereco").option("readOnly",false);
				objSelPaciente.getEditor("pacienteComplemento").option("readOnly",false);
				objSelPaciente.getEditor("pacienteBairro").option("readOnly",false);
				objSelPaciente.getEditor("pacienteCidade").option("readOnly",false);
				objSelPaciente.getEditor("pacienteEstado").option("readOnly",false);
				objSelPaciente.getEditor("pacienteCEP").option("readOnly",false);
				objOrcamentoAgendar.option("disabled",false);
				if (orcEnvioEmail == 1) {
					objOrcamentoEnviar.option("disabled",false);
				}
			}

			function carregarPaciente(pCodPaciente){
				$.getJSON(urlPreparacaoAgen,{method: "GetDadosPaciente", pCodPaciente: pCodPaciente}, function(objRetorno){
					objSelPaciente.option("formData", objRetorno);
					objOrcamento.resetValues();
					objOrcamento.getEditor("orcamentoPaciente").option("value", objRetorno.pacienteNome)
					objOrcamento.getEditor("orcamentoPacienteProntuario").option("value", objRetorno.pacienteProntuario)
					objOrcamento.getEditor("orcamentoPacienteSexo").option("value", objRetorno.pacienteSexoF)
					objOrcamento.getEditor("orcamentoPacienteNascimento").option("value", objRetorno.pacienteDataNascimentoF)
					objOrcamento.getEditor("orcamentoPacienteEmail").option("value", objRetorno.pacienteEmail)
					if (pCodPaciente == "NI000001") {
						objOrcamentoAgendar.option("disabled",true);
						if (orcEnvioEmail == 1) {
							objOrcamentoEnviar.option("disabled",true);
						}
						objSelPaciente.getEditor("pacienteNome").option("readOnly",true);
						objSelPaciente.getEditor("pacienteProntuario").option("readOnly",true);
						objSelPaciente.getEditor("pacienteNomeMae").option("readOnly",true);
						objSelPaciente.getEditor("pacienteCPF").option("readOnly",true);
						objSelPaciente.getEditor("pacienteRG").option("readOnly",true);
						objSelPaciente.getEditor("pacienteTelefone").option("readOnly",true);
						objSelPaciente.getEditor("pacienteCelular").option("readOnly",true);
						objSelPaciente.getEditor("pacienteEmail").option("readOnly",true);
						objSelPaciente.getEditor("pacienteLogradouro").option("readOnly",true);
						objSelPaciente.getEditor("pacienteNumeroEndereco").option("readOnly",true);
						objSelPaciente.getEditor("pacienteComplemento").option("readOnly",true);
						objSelPaciente.getEditor("pacienteBairro").option("readOnly",true);
						objSelPaciente.getEditor("pacienteCidade").option("readOnly",true);
						objSelPaciente.getEditor("pacienteEstado").option("readOnly",true);
						objSelPaciente.getEditor("pacienteCEP").option("readOnly",true);
					}else{
						objOrcamentoAgendar.option("disabled",false);
						if (orcEnvioEmail == 1) {
							objOrcamentoEnviar.option("disabled",false);
						}
						objSelPaciente.getEditor("pacienteNI").option("value",0);
						objSelPaciente.getEditor("pacienteNome").option("readOnly",false);
						objSelPaciente.getEditor("pacienteProntuario").option("readOnly",false);
						objSelPaciente.getEditor("pacienteNomeMae").option("readOnly",false);
						objSelPaciente.getEditor("pacienteCPF").option("readOnly",false);
						objSelPaciente.getEditor("pacienteRG").option("readOnly",false);
						objSelPaciente.getEditor("pacienteTelefone").option("readOnly",false);
						objSelPaciente.getEditor("pacienteCelular").option("readOnly",false);
						objSelPaciente.getEditor("pacienteEmail").option("readOnly",false);
						objSelPaciente.getEditor("pacienteLogradouro").option("readOnly",false);
						objSelPaciente.getEditor("pacienteNumeroEndereco").option("readOnly",false);
						objSelPaciente.getEditor("pacienteComplemento").option("readOnly",false);
						objSelPaciente.getEditor("pacienteBairro").option("readOnly",false);
						objSelPaciente.getEditor("pacienteCidade").option("readOnly",false);
						objSelPaciente.getEditor("pacienteEstado").option("readOnly",false);
						objSelPaciente.getEditor("pacienteCEP").option("readOnly",false);
					}
				});
			}

			function gerarAgendamento() {
				$.getJSON(urlPreparacao,{method: "GerarOrcamento", pCodPaciente: objCodigoPaciente.option("value")}, 
				function(objRetorno){
					if (objRetorno.status != 1) {
						codOrcamento = "";
						DevExpress.ui.notify("Erro na geração do orçamento: "+objRetorno.status,"error");
					}else{
						codOrcamento = objRetorno.codOrcamento;
						objSelPaciente.option("disabled", true);
						objOrcamento.option("disabled", false);
						$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 1)
					}
				});
			}

			function listarOrcamentos(){
				if ($("#divPacienteOrcamentosLista")) $("#divPacienteOrcamentosLista").remove();
				$("#divPacienteOrcamentos").html("<div id='divPacienteOrcamentosLista'></div>");

				pCodPaciente = objCodigoPaciente.option("value");
				if (pCodPaciente == "" || pCodPaciente == null) {
					return;
				}

				$("#divPacienteOrcamentosLista").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							loadMode: "raw",   
							load: function(){
			        	return $.getJSON(urlPreparacao, {method: "GetOrcamentos", pCodPaciente: pCodPaciente});
							},
						})
					}),
					columns: [
						{dataField: "numeroOrcamento", caption: "Número Orçamento", alignment: "center", width: 120},
						{dataField: "data", caption: "Data/Hora", alignment: "center", width: 140},
						{dataField: "validade", caption: "Validade", alignment: "center", width: 140},
						{dataField: "descProcedimento", caption: "Procedimento", alignment: "center"},
						{dataField: "acaoEditar", caption: "Editar", alignment: "center", width: 70},
					],
					rowTemplate: function(container, item) {
						var data 		= item.data;
						var rowSpan = data.procedimento.length;
						var markup = "<tbody class='employee dx-row " + ((item.rowIndex % 2) ? 'dx-row1' : 'dx-row2') + "'>" +
							"<tr>" +
								"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.numeroOrcamento + "</td>" +  
								"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.data + "</td>" + 
								"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.validade + "</td>";  
				    		for (count = 0; count < rowSpan ; count ++ ){
									if (count > 0) {
										markup += "</tr><tr>";
									}
									markup += "<td align='left' style='border:1px solid #dddddd;'><b>";
									if (data.procedimento[count].procAgendado == 1){ 
										markup += data.procedimento[count].grupoAgendDesc + "</b><br>&nbsp; &nbsp;" + 
										data.procedimento[count].procedimentoDesc;
									}else{	
										markup += data.procedimento[count].procedimentoDesc + "</b>"; 
									}
									markup += "</td>" ;
									if (count == 0) {
										if  (data.situacao != 3) {
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";
										}else{
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" +
												"<span onClick=editarOrcamento('"+data.numeroOrcamento+"');>" +
													"<i class='fas fa-edit' title='Editar' style='color:#337AB7;cursor:pointer;' />" +
												"</span>" +
											"</td>";
										}
									}
							}		
						markup +="</tr></tbody>";
						container.append(markup);
					},
	    		columnChooser: { enabled: false, mode: "dragAndDrop"},
					showColumnHeaders:true,
					allowColumnReordering: false,
					columnAutoWidth: true,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: false },
					groupPanel: { visible: false, allowColumnDragging: true },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					height: function() { return window.innerHeight - 430;},
				});
			}
			
			function editarOrcamento(pNumeroOrcamento) {
				$.getJSON(urlPreparacao,{method: "EditarOrcamento", pCodOrcamento: pNumeroOrcamento},
				function(objRetorno){
					objCodigoPaciente.option("value", objRetorno.codPaciente);
					codOrcamento = pNumeroOrcamento;
					objSelPaciente.option("disabled", true);
					objOrcamento.option("disabled", false);
					$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 1)
					setTimeout(function(){
						objOrcamento.getEditor("codPlanoSaudeConvenio").option("value", objRetorno.codPlanoSaudeConvenio); 
						objOrcamento.getEditor("codPlanoSaude").option("value", objRetorno.codPlanoSaude); 
						objOrcamento.getEditor("planoSaudeCarteirinha").option("value", objRetorno.planoSaudeCarteirinha); 
						objOrcamento.getEditor("orcamentoObservacao").option("value", objRetorno.observacao); 
						dataSourceProcedimentos.reload();
		      }, 500);

				});
			}
			
			function cancelarAgendamento(pNumeroAgend, pSequencia){
				var result = DevExpress.ui.dialog.confirm("<i>Confirma o cancelamento?", "Confirmação?");
	    	result.done(function(dialogResult) {
        	if (!dialogResult){
						return;
					}
					$.getJSON(urlPreparacao,{method: "CancelarAgendamento", pCodAgendamento: pNumeroAgend, 
					pSequencia: pSequencia},function(objRetorno){
						if (objRetorno.status == 1) {
							DevExpress.ui.notify("Agendamento cancelado com sucesso!","success");
							listarAgendamentoAdmissoes();
							listarRemarcacao();
						}else{
							DevExpress.ui.notify(objRetorno.mensagem,"warning");		
						}
					})
	    	});
			}

			dSPlanoSaude = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = objOrcamento.getEditor("codPlanoSaudeConvenio").option("value");
						return $.getJSON(urlPreparacaoAgen,{
							method:	"GetPlanoSaudeCampo",
							pCodOrganizacao: pCodConvenio
						},function(rs){console.log(rs)});
					}
				})
			});
			
			///// Aba Orçamento
			var nomePaiOrganizacaoAnt = "";
			objOrcamento = $("#divOrcamento").dxForm({
				disabled: true,
				scrollingEnabled	: true,
				showColonAfterLabel	: true,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 3,
				items: [{
					itemType: "group",
					cssClass: "second-group",
					caption: "Paciente",
					colCount: 4,
					items: [{
						dataField: "orcamentoPaciente", colSpan: 4,
						label: { text:"Paciente", alignment: "right"},
						editorOptions: {readOnly: true}
					},{
						itemType: "group",
						colSpan: 4,
						colCount: 3,
						items: [{
							dataField: "orcamentoPacienteProntuario",
							label: { text:"Prontuário", alignment: "right"},
							editorOptions: { width: 120, readOnly: true}
						},{
							dataField: "orcamentoPacienteSexo",
							label: { text:"Sexo", alignment: "right"},
							editorOptions: { width: 100, readOnly: true}
						},{
							dataField: "orcamentoPacienteNascimento",
							label: { text:"Nascimento", alignment: "right"},
							editorOptions: { width: 80, readOnly: true}
						}]
					}, {
						dataField: "orcamentoPacienteEmail", colSpan: 4,
						label: { text:"E-mail", alignment: "right"},
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Plano de Saúde",
					items: [{
						dataField: "codPlanoSaudeConvenio", colSpan: 2,
						label: { text:"Convênio", alignment: "right"},
						editorType: "dxSelectBox", 
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										return $.getJSON(urlPreparacao,{
											method:	"GetConvenio",
											pCodConvenio: args
										});
									},
									load: function(args) {
										return $.getJSON(urlPreparacao,{
											method				:	"GetConvenio",
											pSkip					:	args.skip,
											pTake					:	args.take,
											pSearchValue	:	args.searchValue,
											pCodConvenio  : "",
											pParticular 	: 1,
											pFlagConvenio : 1,
											pConvenio 		: ""

										});
									}
								})
							}),
							showClearButton: true,
							onValueChanged: function (e) {
								objOrcamento.getEditor("codPlanoSaude").option("value","");
								dSPlanoSaude.reload();
							},
							displayExpr: "NomeOrganizacao",
							valueExpr: "CodOrganizacao",
							searchEnabled: true,
						}
					},{
						dataField: "codPlanoSaude", colSpan: 2,
						label: { text:"Plano de Saúde", alignment: "right"},
						editorType: "dxSelectBox", 
						editorOptions: {
							showClearButton: true,
							dataSource: dSPlanoSaude,
							itemTemplate: function (data, itemIndex, element) {
								if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
									retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
									nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
								}else{
									retorno = data.nomeOrganizacao;
								}
								return element.append(retorno)
							},
							displayExpr: "nomeOrganizacao",
							valueExpr: "codOrganizacao",
							searchEnabled: true,
							onValueChanged: function (e) {
								dataSourceProcedimentos.reload();
							},
						}
					},{
						dataField: "planoSaudeCarteirinha",
						editorType: "dxTextBox", 
						label: { text:"Nº da Carteirinha", alignment: "right"},
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Observações",
					items: [{
						dataField: "orcamentoObservacao",
						editorType: "dxTextArea",
						label: { visible: false},
						editorOptions: {height: 98,}
					}]
				},{
					itemType: "group",
					colSpan: 3,
					cssClass: "second-group",
					caption: "Procedimentos",
					items: [{
						dataField: "orcamentoProcProcedimento",
						label: { text:"Procedimento", alignment: "right", visible: false},
						editorType: "dxSelectBox", 
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										return $.getJSON(urlPreparacaoAgen,{
											method				:	"GetProcedimento",
											pCodPaciente	: args,
										});
									},
									load: function(args) {
										return $.getJSON(urlPreparacaoAgen,{
											method				:	"GetProcedimento",
											pSkip					:	args.skip,
											pTake					:	args.take,
											pSearchValue	:	args.searchValue,
											pAlias				: 1,
											pItemPedido		: 2
										});
									}
								})
							}),
							onKeyDown: function (e) {
								var pCodProcedimento = objOrcamento.getEditor("orcamentoProcProcedimento").option("value");
								if ((e.event.keyCode == 9 || e.event.keyCode == 13) && pCodProcedimento != "") {
									$.get(urlPreparacao, {method: "InserirProcedimento", pCodOrcamento: codOrcamento,
									pCodProcedimento:pCodProcedimento},function(retorno){
										dataSourceProcedimentos.reload();
										objOrcamento.getEditor("orcamentoProcProcedimento").option("value", "");
										objOrcamento.getEditor("orcamentoProcProcedimento").focus();  
									});
								}
							},							
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
							showClearButton: true,
							buttons: [{
								location:"after",
								name: "addProcedimento",
								options:{
									icon	: "add",
									hint	: "adicionar",
									type	: "default",
									stylingMode : "contained",
									onClick	: function(){
										var pCodProcedimento = objOrcamento.getEditor("orcamentoProcProcedimento").option("value");
										if (pCodProcedimento == "" || pCodProcedimento == null) {
											DevExpress.ui.notify("Favor informar o procedimento.","warning");	
											return;
										}
										$.get(urlPreparacao, {method: "InserirProcedimento", pCodOrcamento: codOrcamento,
										pCodProcedimento:pCodProcedimento},function(retorno){
											dataSourceProcedimentos.reload();
											objOrcamento.getEditor("orcamentoProcProcedimento").option("value", "");	
										});
									}
								}
							}]
						}
					},{
						colSpan: 2,
						template	: function (data, itemElement) {
							itemElement.append("<div id='divOrcamentoProcProcedimento'>")
						}
					},{
						colSpan: 2,
						template	: function (data, itemElement) {
							itemElement.append("<div id='divOrcamentoAcao' style='text-align:right;border: 0px solid red;'>")
						}
					}]
				}]
			}).dxForm("instance");

			dataSourceProcedimentos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						if (codOrcamento == "") return []
						var pCodPlanoSaudeConvenio 	= objOrcamento.getEditor("codPlanoSaude").option("value"); 
	        	return $.getJSON(urlPreparacao, {method: "GetProcOrcamento", pCodOrcamento: codOrcamento,
	        	pCodPlanoSaudeConvenio: pCodPlanoSaudeConvenio });
					},
					remove : function(args){
						#server(VAR.CSP.VARCadOrcamento.RemoverProcOrcamento(codOrcamento, args.procedimento, YBED))#;
					},
					update: function (key, values) {
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								#server(VAR.CSP.VARCadOrcamento.AtualizarProcOrcamento(codOrcamento, key.procedimento, values[coluna], YBED))#;
							}
						}
						dataSourceProcedimentos.reload();
					},
				})
			});

			$("#divOrcamentoProcProcedimento").dxDataGrid({
				dataSource: dataSourceProcedimentos,
				columns: [{	
						dataField: "grupo", caption: "Grupo", alignment: "center", width: "50px", 
						groupIndex: 0, allowEditing: 0
					},{	
						dataField: "procedimento", alignment: "left", cellTemplate: function (container, options) { 
							if (options.data.procAgendado == 0) {
								conteudo = "<div class='custom-item'><b>" + options.data.procedimentoDesc +" </b>" +  "</div>";
							}else{
								conteudo = "<div class='custom-item'><b>" + options.data.grupoAgendamentoDesc +" </b><br>&nbsp; &nbsp;" +
								    				options.data.procedimentoDesc +  "</div>";
							}
							container.append(
								$("<div style='text-align: left;' />")
									.html(conteudo)
									.appendTo(container)
							);
						}
					}, {
						dataField: "jejum", caption: "Necessita de Jejum", alignment: "center", width: "80px",
						allowEditing: 0
					}, {
						dataField: "tempoResultado", caption: "Tempo de Resultado", alignment: "center", width: "90px",
						allowEditing: 0					
					}, {	
						dataField: "valor", caption: "R$", dataType: "number", alignment: "right", 
						allowEditing: 0, format: "#,##0.00", width: "100px" 
					}, {	
						dataField: "qtdeAgenda", caption: "Qtde. Procedimentos", alignment: "center", width: "100px",
						allowEditing: 1
					}, {	
						dataField: "valorTotal", caption: "R$ Total", dataType: "number", alignment: "right", 
						allowEditing: 0, format: "#,##0.00", width: "100px"
					}, {	
						dataField: "preRequisito", caption: " ", alignment: "center", width: "30px", 
						allowEditing: 0, cellTemplate: function (container, options) { 
							conteudo = "";
							if (options.data.codExecutor != "") {
								conteudo = 	"<i class='far fa-clipboard-list' title='Pré Requisito' " +
												 		"style='color:#337AB7;cursor:pointer;font-size:14px;' " +
												 		"onClick=consultarPreRequisito('"+options.data.procedimento+"');/></span>";
							}
							container.append(
								$("<div style='text-align: center;width:100%' />")
									.html(conteudo)
									.appendTo(container)
							);
						}
					},{	
						dataField: "horarioDisponivel", caption: " ", alignment: "center", width: "30px", 
						allowEditing: 0, cellTemplate: function (container, options) { 
							conteudo = "";
							if (options.data.procAgendado == 1) {
								conteudo = "<i class='far fa-calendar-alt' title='horário disponível' " +
													 "style='color:#337AB7;cursor:pointer;font-size:14px;' " +
													 "onClick=selecionarEscolherProfHorario('"+options.data.procedimento+"');/></span>";
							}
							container.append(
								$("<div style='text-align: center;width:100%' />")
									.html(conteudo)
									.appendTo(container)
							);
						}
					},
				],
				summary: {
	        totalItems: [{
	          column: "valorTotal",
	          summaryType: "sum",
	          valueFormat: {type: "fixedPoint", precision: 2},
	          displayFormat: "Total R$: {0}",
          },{
						name: "SelectedRowsSummary",
						showInColumn: "procedimento",
						displayFormat: "Validade: {0}",
						summaryType: "custom"
      		}],
					calculateCustomSummary: function (options) {
						options.totalValue = #server(VAR.CSP.VARCadOrcamento.GetValidade(codOrcamento))#;
					}
        },
	      columnChooser: { enabled: false, mode: "dragAndDrop"},
    		editing: { mode: "batch", allowAdding: false, allowUpdating: true, allowDeleting: true, useIcons: true },
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: false }, 
				height: function() { 
					var xHeight = window.innerHeight - 400;
					return (xHeight < 200 ? 200 : xHeight); 
				},
			});
	
	
			$("#divOrcamentoAcao").html("<table width='100%'>" +
																	"<tr>" +
																		"<td align='right' style='vertical-align:bottom;'>" + 
																			"<div id='divOrcamentoSalvar'/>&nbsp;" +
																			"<div id='divOrcamentoImprimir'/>&nbsp;" +
																			(orcEnvioEmail == 1 ? "<div id='divOrcamentoEnviar'/>&nbsp;" : "") +
																			"<div id='divOrcamentoAgendar'/>&nbsp;" +
																			"<div id='divOrcamentoCancelar'/>&nbsp;" +
																			"<div id='divOrcamentoLimpar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>");
				
			objOrcamentoSalvar = $("#divOrcamentoSalvar").dxButton({
			  icon	: "save",
			  text	: "Salvar",
			  type	: "success",
			  stylingMode : "contained",
			  onClick	: function(){
				  salvarOrcamento();
			  }
			}).dxButton("instance");

			objOrcamentoImpirmir = $("#divOrcamentoImprimir").dxButton({
			  icon	: "print",
			  text	: "Imprimir",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
					salvarOrcamento();
					$.post(urlPreparacao,{method:"Imprimir", pCodOrcamento: codOrcamento},function(retorno){
						eval(retorno);
					})				
			  }
			}).dxButton("instance");

			if (orcEnvioEmail == 1) {
				objOrcamentoEnviar = $("#divOrcamentoEnviar").dxButton({
				  icon	: "email",
				  text	: "Enviar por E-mail",
				  type	: "default",
				  stylingMode : "contained",
				  onClick	: function(){
						salvarOrcamento();
						$.get(urlPreparacao,{method:"Enviar", pCodOrcamento: codOrcamento},function(retorno){
							if (retorno = 1) {
								DevExpress.ui.notify("E-mail enviado com Sucesso!","success");
							}else{
								DevExpress.ui.notify(objRetorno.status,"warning");		
							}
						})				
				  }
				}).dxButton("instance");
			}
			
			function salvarOrcamento(){
				var pObservacao	= objOrcamento.getEditor("orcamentoObservacao").option("value"); 
				var pEmail			= objOrcamento.getEditor("orcamentoPacienteEmail").option("value"); 
				var pCodPlanoSaudeConvenio 	= objOrcamento.getEditor("codPlanoSaudeConvenio").option("value"); 
				var pCodPlanoSaude 					= objOrcamento.getEditor("codPlanoSaude").option("value"); 
				var pPlanoSaudeCarteirinha 	= objOrcamento.getEditor("planoSaudeCarteirinha").option("value"); 
				$.getJSON(urlPreparacao, {method: "ArmazenarOrcamento", pCodOrcamento: codOrcamento,
				pObservacao: pObservacao, pEmail: pEmail, pCodPlanoSaudeConvenio: pCodPlanoSaudeConvenio,
				pCodPlanoSaude: pCodPlanoSaude, pPlanoSaudeCarteirinha: pPlanoSaudeCarteirinha}, 
				function(objRetorno){ 
					if (objRetorno.status == 1) {
						DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
					}else{
						DevExpress.ui.notify(objRetorno.status,"warning");		
					}
				});
			}

			objOrcamentoAgendar = $("#divOrcamentoAgendar").dxButton({
			  icon	: "fas fa-calendar-plus",
			  text	: "Agendar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
					$.get(urlPreparacao,{method: "AgendarOrcamento", pCodOrcamento: codOrcamento},function(){
						var pForm = "VARCadAgendamento";
						var pDescricao = "Cadastro de Agendamento";
						var pYKEY = codOrcamento;
						strURL = "www.cls?EP=WWWFORM&YFORM="+pForm+"&YUCI=#($namespace)#&YBED="+YBED+"&YM=0"+
						"&YUSER="+YUSER+"&YKEY="+pYKEY;
						window.location.href = strURL
					});
			  }
			}).dxButton("instance");


			objOrcamentoCancelar = $("#divOrcamentoCancelar").dxButton({
			  icon	: "far fa-times-circle",
			  text	: "Cancelar",
			  type	: "danger",
			  stylingMode : "contained",
			  onClick	: function(){
					var result = DevExpress.ui.dialog.confirm("<i>Confirma o cancelamento?", "Confirmação?");
		    	result.done(function(dialogResult) {
	        	if (!dialogResult){
							return;
						}
						$.getJSON(urlPreparacao,{method: "CancelarOrcamento", pCodOrcamento: codOrcamento},
						function(objRetorno){
							if (objRetorno.status == 1) {
								DevExpress.ui.notify("Orçamento cancelado com sucesso!","success");
								limparOrcamento()
							}else{
								DevExpress.ui.notify(objRetorno.mensagem,"warning");		
							}
						})
		    	});
			  }
			}).dxButton("instance");

			objOrcamentoLimpar = $("#divOrcamentoLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  limparOrcamento();
			  }
			}).dxButton("instance");


			function consultarPreRequisito(pProcedimento) {
				codProcPreRequis = pProcedimento;
				dataSourcePreRequisito.reload();
				$("#divPreRequisito").dxPopup("show");
			}

			function limparOrcamento(){
				codOrcamento = "";
				objCodigoPaciente.option("value","");
				objSelPaciente.option("disabled", false);
				objOrcamento.option("disabled", true);
				objSelPaciente.resetValues();
				objOrcamento.resetValues();
				$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 0)
			  dataSourceProcedimentos.reload();
			  objCodigoPaciente.focus();
				listarOrcamentos();
			}
	
			function selecionarEscolherProfHorario(pCodProcedimento){
				var result = DevExpress.ui.dialog.confirm("<i>Horário sujeito a indisponibilidade no momento do agendamento!", "Alerta");
	    	result.done(function(dialogResult) {
					selCodProcedimento = pCodProcedimento;
					$("#divEscolherProfHorario").dxPopup("show");
					dataSourceEscolherProfissional.reload();
	    	});
			}

			dataSourceEscolherProfissional = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "GetPreferencia", pCodProcedimento: selCodProcedimento}, 
	        	function(objRetorno) {
		        	if (objRetorno.length > 0) {
			        	setTimeout(function(){
				       	 $("#divGridEscolherProf").dxDataGrid("instance").selectRowsByIndexes(0)
				        }, 500);
		        	}
	        	});
					},
				})
			});

			function colunaData(container, options) {
				var coluna 		= options.column.caption;
				var hora			=  options.data[coluna];	
				var reservado	=  options.data[coluna+"reservado"];	
				if (reservado == 1) {
					container.html(hora).css("background-color", "#ddedff");
				}else if (reservado == 2) {
					container.html(hora).css("background-color", "#ffcaca");
				}else{
					container.html(hora);
				}
				
			}

			function listarEscolherHorario() {
				if ($("#divGridEscolherHorarioLista")) $("#divGridEscolherHorarioLista").remove();
				$("#divGridEscolherHorario").html("<div id='divGridEscolherHorarioLista' style='width: 570px'></div>");

				pMethod = "GetHorarioProfissional";
				if (selCodProfissional.indexOf("||") != -1) pMethod = "GetHorarioSalaLeito";
				
				$.getJSON(urlPreparacao, {method: pMethod, pCodProcedimento: selCodProcedimento, 
				pCodProfissional: selCodProfissional}, function(objRetorno){
					objColuna = new Array;					
					for (var count = 0 ; count < objRetorno.colunas.length; count++){
						objColunaD = objRetorno.colunas[count];
						objColunaD.cellTemplate = colunaData;
						objColuna.push(objColunaD);
					}
					$("#divGridEscolherHorarioLista").dxDataGrid({
						dataSource: objRetorno.dados,
						columns: objColuna, //objRetorno.colunas,
						customizeColumns: function (columns) {
							$.each(columns, function (index, element) {
								element.headerCellTemplate = function (header, info) {
									$('<div>').html("<span style='font-size:14px;'>" + 
									info.column.caption+"<br>"+info.column.unidade+"</span>")
									.css('font-size', '16px').appendTo(header);
								};
							});
						},
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 450,
					});
		    });	
			}
			
			$("#divEscolherProfHorario").dxPopup({
				visible: false,
				title: "Horários Disponíveis",
				width: 1000,
				height:  500,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objFormEscolherProfHorario = $("<div id='divFormEscolherProfHorario'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						screenByWidth: function(width) { return "lg"; },
						labelLocation: "left",
						colCount: 5,
						items: [{
							colSpan: 2,
							itemType: "group",
							items: [{					
								template	: function (data, itemElement) {
									itemElement.append("<div id='divGridEscolherProf'>")
								}
							}]
						},{
							colSpan: 3,
							template	: function (data, itemElement) {
								itemElement.append("<div id='divGridEscolherHorario'>")
							}
						}]
					});
					e.append(objFormEscolherProfHorario);
					
					$("#divGridEscolherProf").dxDataGrid({
						dataSource: dataSourceEscolherProfissional,
						columns: [
							{	dataField: "nomeProfissional", caption: "Profissional/Sala - Leito", alignment: "center"},
						],
						selection: { mode: "single" },
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: false,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						hoverStateEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 450,
						onSelectionChanged: function (selectedItems) {
	            var data = selectedItems.selectedRowsData[0];
	            if (data) {
								selCodProfissional = data.codProfissional;
								listarEscolherHorario();
	            }
		        }
					});
				}
			});

			dataSourcePreRequisito = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						if (codProcPreRequis == "") return [];
	        	return $.getJSON(urlPreparacaoAgen, {method: "ListarPreRequisito", pCodProcedimento: codProcPreRequis});
					},
				})
			});
						
			$("#divPreRequisito").dxPopup({
				visible: false,
				title: "Pré Requisito",
				width: 700,
				height:  500,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objDetalheAgendamento = $("<div id='divGridDetalheAgendamento'>").dxDataGrid({
						dataSource: dataSourcePreRequisito,
						columns: [{	dataField: "preRequisito"}],
						rowTemplate: function(container, item) {
							var data 	= item.data;
							var markup = "<tbody class='employee dx-row dx-row1'>" +
								"<tr>" +
									"<td align='left' style='border:1px solid #dddddd;'>" + data.preRequisito + "</td>";
								"</tr>" +
							"</tbody>";
							container.append(markup);
						},
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:false,
						allowColumnReordering: false,
						columnAutoWidth: false,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: false,
						hoverStateEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 440,
					});
					e.append(objDetalheAgendamento);
				}
			});

			function validarCPF(pCPF){
				var Soma;
				var Resto;
				Soma = 0;
				if (objCodigoPaciente.option("value") != "NI000001") {
				  if (pCPF == "00000000000") return false;
				}
				for (i=1; i<=9; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (11 - i);
				Resto = (Soma * 10) % 11;
				if ((Resto == 10) || (Resto == 11))  Resto = 0;
				if (Resto != parseInt(pCPF.substring(9, 10)) ) return false;
	 	 		Soma = 0;
    		for (i = 1; i <= 10; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (12 - i);
    		Resto = (Soma * 10) % 11;
		    if ((Resto == 10) || (Resto == 11))  Resto = 0;
		    if (Resto != parseInt(pCPF.substring(10, 11) ) ) return false;
		    return true;
			}
			
		</script>
	</body>
</html>
