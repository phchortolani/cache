<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER = $get(%request.Data("YUSER", 1))
		set YBED = $get(%request.Data("YBED", 1))
		set YM = $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
		set PageName = %request.PageName
		set app = %request.Application
		set host = %request.CgiEnvs("HTTP_HOST")
		set url = "http://"_host_app

		set param="EP=1&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set paramEncrypt = $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)

		set URLPreparacao 		= "VAR.CSP.RegimesTerapeuticos.cls"
		set URLPreparacaoNew 	= "VAR.CSP.RegimesTerapeuticosNew.cls"
		set URLLogin 					= "COMLogin.cls"
		set nomeLocal 				= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Regimes Terapêuticos</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />

		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />



		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

		<style>

			.first-group,
				.second-group {
				padding: 10px;
			}

			.semBordasLaterais {
				padding-left:0px!important;
				padding-right:0px!important;
			}

		</style>

	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('#(YBED_" - "_YUSER)#Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divPopUpCiclo"></div>
		<div id="divPopUpMedicamento"></div>
		<div id="divExcecoesMedicamentos"></div>
	
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			$.ajaxSetup({headers: {'id_key': '#(paramEncrypt)#'}});

			var urlPreparacao 		= '#(URLPreparacao)#';
			var urlPreparacaoNew 	= '#(URLPreparacaoNew)#';
			
			toolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after", widget: "dxButton",
					options: {
						hint: "Exceções Medicamentos", type: "default", text: "Exceções Medicamentos",
						stylingMode : "contained", onClick: function(){
							$("#divExcecoesMedicamentos").dxPopup("instance").show()
						}
					}
				},{
					location: "after", widget: "dxButton",
					options: {
						icon: "save", hint: "Salvar os Dados", type: "success", text: "Salvar",
						stylingMode : "contained", onClick: function(){
							salvarDados()
						}
					}
				},{
					location: "after", widget: "dxButton",
					options: {
						icon: "fa fa-eraser", hint: "Limpar os Campos", type: "default",
						text: "Limpar", stylingMode: "contained",
						onClick: function(){ limpar(); }
					}
				}]
			}).dxToolbar("instance")			

			dSExcecoesMedicamentos = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					load: function(args) {
						return $.getJSON(urlPreparacaoNew,{method: "getExcecoes"},function(rs){console.log(rs)});
					},
					insert: function(args) {
						if (args.medicamenroCod == "" || args.viaAdministracao == "") {
							DevExpress.ui.notify("Favor informar o campo Medicamento e Via de Administração.","warning");
							return;	
						}
						console.log(args)
						return $.get(urlPreparacaoNew,{ method: "insertExcecoes", dados: JSON.stringify(args)},function(rs){console.log(rs)});
						
					},		                
					remove: function(args) {
						return $.get(urlPreparacaoNew,{ method: "delExcecoes", pMedicamento: args.medicamenroCod,
						pViaAdministracao: args.viaAdministracao });
					}
				})
			});

			$("#divExcecoesMedicamentos").dxPopup({
				width: "800",
				height: "500",
				showTitle: true,
				title: "Exceções Medicamentos",
				visible: false,
				dragEnabled: false,
				closeOnOutsideClick: false,
				toolbarItems: [{
					location:"before",
					toolbar :"top",
				},{
					widget: "dxButton",
					location:"after",
					toolbar:"bottom",
					options: { 
						width: "130px",
						type: "default",
						icon: "close",
						text: "Fechar", 
						onClick : function(){
							$("#divExcecoesMedicamentos").dxPopup("instance").hide()
						}
					}
				}],			        
				contentTemplate: function(e) {
					conteudoExcecoes = $("<div id='gridExcecoesMedicamentos'></div>")
					e.append(conteudoExcecoes);
					$("#gridExcecoesMedicamentos").dxDataGrid({
						dataSource: dSExcecoesMedicamentos,
						columns: [
							{ dataField: "medicamenroDesc", caption: "Medicamento", setCellValue: function (rowData, value) {
				        if (value == "" || value == null) return
				        objLinha = this;
				        var descMedicamento = value+" - "+#server(VAR.CSP.RegimesTerapeuticos.getDescMedicamento(value))#;
								objLinha.defaultSetCellValue(rowData, descMedicamento);
								rowData.medicamenroCod = value;	
						  	}
							}, { dataField: "viaAdministracao", caption: "Via de Administração", width: 160, lookup: {
                dataSource: {store: { type: 'array',
                	data: [{ id: 1, name: 'Via Oral' }, { id: 2, name: 'Via Endovenosa' }, { id: 3, name: 'Via Subcutânea' }],
                  key: "id"
                }},
                valueExpr: 'id',  displayExpr: 'name'
							}},
							{ dataField: "nome", caption: "Nome Exibir"},
						],
						onEditorPreparing: function(e) {
							if (e.parentType == "dataRow" && e.dataField == "medicamenroDesc") {
								e.editorName = "dxSelectBox"; 
								e.editorOptions.dataSource = new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacao,{ method:"listaMedicamentos", codigo: args });
										},
										load: function(args) {
											return $.getJSON(urlPreparacao,{ method: "listaMedicamentos", searchValue: args.searchValue, 
											filter: JSON.stringify(args.filter), skip: args.skip, take: args.take});
										}
									})
								});
								e.editorOptions.value = e.row.data.medicamenroCod;
								e.editorOptions.displayExpr = "DescMedicamento";
								e.editorOptions.valueExpr = "CodMedicamento";
								e.editorOptions.searchEnabled = true;
								e.editorOptions.onValueChanged = function(arg) {
									e.setValue(arg.value);
								}
							}
						},
						filterRow: { visible: false },
						hoverStateEnabled: true,
						paging: { enabled: false },
						editing: { mode: "batch", allowAdding	: true, allowDeleting: true, useIcons: true},					
						height: 400,
						selection: { mode: "single" },
						showBorders: true,
						showRowLines: true,
						rowAlternationEnabled: true,
					});
				}		
			})	
			

			//function carregaGridExcecoesMedicamentos(){
				/*var pCodTratamento = objForm.getEditor("tratameto").option("value");
				$.getJSON(urlPreparacaoNew,{method: "recDadosCiclo", pCodTratamento: pCodTratamento, ciclo: ciclo },
				function(retorno){
					$("#dvConteudoDialogCiclo").dxForm({
						formData: retorno.formData,
						scrollingEnabled: true,
						screenByWidth: function() { return "lg"; },
						activeStateEnabled:true,
						colCount: 10,
						items: [
							{ colSpan: 3, dataField: "ciclo", disabled: true, label: { text: "Número do Ciclo" }},
							{ colSpan: 3, dataField: "periodicidade", label: { text: "Periodicidade (dias)" },
								editorType: "dxNumberBox", editorOptions: { format: "#0", }
							},
							{ colSpan: 4, dataField: "continuoPeriodicidade", label: { alignment: "left", text: "Uso" },
								editorType: "dxSelectBox", editorOptions: { 
									showClearButton: true, valueExpr: "codigo", displayExpr: "desc", 
									dataSource: [{codigo:0,desc:"Cíclico"},{codigo:1,desc:"Contínuo"},{codigo:2,desc:"Até progressão de doença ou toxicidade"}]
								}
							},
							{ colSpan: 10, template: function (data, itemElement) { itemElement.append("<div id='gridCadCiclo'>") }}
						],
						onContentReady: function(){
							carregaGridCiclo(ciclo)
						},
						onFieldDataChanged: function(obj){
							alert()
							if (obj.value==undefined) return
							if (obj.dataField=="continuoPeriodicidade"){

							}
							var pCodTratamento = objForm.getEditor("tratameto").option("value");
							$.post(urlPreparacaoNew,{ method: "salvaDadosCiclo", pCodTratamento: pCodTratamento,
							ciclo: ciclo, campo: obj.dataField, valor: obj.value },'json')
						}			        
					})
				})*/
			//}


			function salvarDados(){
				var pCodTratamento = objForm.getEditor("tratameto").option("value");
				var pSituacao = objForm.getEditor("situacao").option("value");
				if (pCodTratamento == "Novo" || pCodTratamento == null) pCodTratamento = "";
				if (pSituacao == null) pSituacao = "";
				var flagValForm 	= objForm.validate().isValid; 
				var flagValDados 	= objDados.validate().isValid; 
				if (!flagValForm || !flagValDados){
					DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
					return;
				}
				$.getJSON(urlPreparacaoNew,{method: "salvarDados", pCodTratamento: pCodTratamento, pSituacao: pSituacao,
					pObjForm: JSON.stringify(objForm.option("formData")), pObjDados: JSON.stringify(objDados.option("formData"))
				},function(objRetorno){
					if (objRetorno.status==1){
						/*dataSourceProcedimento.reload();
						objProcedimento.option("value", objRetorno.codProcedimento);
						carregarDados(objRetorno.codProcedimento) */
						DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
					}else{
						DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
					}
				});
			}
			
			var tipoAnt = 0
			objForm = $("#divForm").dxForm({
				scrollingEnabled: true,
				screenByWidth: function(width) { return "lg"; },
				activeStateEnabled:true,
				colCount: 6,
				items: [{
					colSpan: 6,
					colCount: 4,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 3,	dataField: "tratameto", editorType: "dxSelectBox", editorOptions: {
							valueExpr: "codigo", displayExpr: "descricao", searchEnabled: true, placeholder: "Novo",
							showClearButton: true,
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({ 
									byKey: function(args) {
										return $.getJSON(urlPreparacaoNew,{ method: "listaTratamento", codigo: args });
									},
									load: function(args) {
										return $.getJSON(urlPreparacaoNew,{ method: "listaTratamento", searchValue: args.searchValue,
										skip: args.skip, take: args.take });
									}
								})
							}),	
							itemTemplate: function (data, itemIndex, element) {
								if (tipoAnt != data.terSuporte){
									retorno = "<b><i>Terapia de Suporte</i></b><br><br>"
									tipoAnt = data.terSuporte
									element.append(retorno)
								}
								return element.append(data.descricao)
							},		
							onValueChanged: function(e) {
								if (e.value == "" || e.value == null) {
									limpar();
									return;	
								}
								carregaTratamento(e.value);
							}
						}
					},{
						dataField: "situacao", label: { text: "Situação" }, validationRules: [{ type: "required" }],		   
						editorType: "dxSelectBox", editorOptions: {
							valueExpr: "value", displayExpr: "text", dataSource : [
								{ "text": "Ativo", "value": "1" },
								{ "text": "Inativo", "value": "0" }
							]
						},
					},{
						colSpan: 4, itemType: "tabbed", name: "abas", tabPanelOptions: {
		  				selectedIndex: 0, deferRendering: false, animationEnabled: false, showNavButtons:true,
						}, height:'10px', tabs:[{
							title: "Dados", items: [{ template: function (data, itemElement){ 
								itemElement.append("<div id='divDados'>")
							}}],
						},{
							title: "Ciclos", items: [{ template: function (data, itemElement) {
								itemElement.append("<div id='divCiclos'>")
							}}]
						},{
							title: "Vínculos", items: [{ template: function (data, itemElement){ 
								itemElement.append("<div id='divVinculos'>")
							}}],
						},{
							title: "Referências", items: [{ template: function (data, itemElement){ 
								itemElement.append("<div id='divReferencias'>")
							}}],
						}]
					}]
				}]
			}).dxForm("instance");
			
			function limpar() {
					objForm.getEditor("tratameto").option("value","");
					objForm.getEditor("situacao").option("value", "");
					objDados.resetValues();
					objDados.getEditor("terapiaSuporte").option("readOnly", 0);
					dSReferencia.reload();
					$("#divReferencias").dxDataGrid("instance").option("disabled", 1);
					dSCiclo.reload();
					$("#divCiclos").dxDataGrid("instance").option("disabled", 1);
					dSVinculo.reload();
					$("#divVinculos").dxDataGrid("instance").option("disabled", 1);
			}
			
			function carregaTratamento(pCodTratamento) {
				$.getJSON(urlPreparacaoNew,{ method:"getTratamento", pCodTratamento: pCodTratamento }, function(objRetorno){
					objForm.getEditor("situacao").option("value", objRetorno.situacao);
					objDados.option("formData", objRetorno.abaDados);
					objDados.getEditor("terapiaSuporte").option("readOnly", 1);
					dSReferencia.reload();
					$("#divReferencias").dxDataGrid("instance").option("disabled", 0);
					dSCiclo.reload();
					$("#divCiclos").dxDataGrid("instance").option("disabled", 0);
					dSVinculo.reload();
					$("#divVinculos").dxDataGrid("instance").option("disabled", 0);
				});	
			}
				
			objDados = $("#divDados").dxForm({
				scrollingEnabled: true,
				screenByWidth: function(width) { return "lg"; },
				height: function() { return window.innerHeight - 150;},
				activeStateEnabled:true,
				colCount: 6,
				items: [{
					colSpan: 6, dataField: "nome", validationRules: [{ type: "required" }],				   
					label: { text: "Nome", alignment: "right" },
				},{
					colSpan: 6, dataField: "observacoes", label: { text: "Observações", alignment: "right" },
					editorType: "dxTextArea", editorOptions: { height: 80 }
				},{
					colSpan: 2, dataField: "terapiaSuporte", label: { text: "Terapia de Suporte", alignment: "right" },
					editorType: "dxSelectBox", editorOptions: { searchEnabled: true, showClearButton: true,
						valueExpr: "value", displayExpr: "text", 
						dataSource : [{ "text": "Sim", "value": 1 }, { "text": "Não", "value": 0 }]
					}
				},{
					colSpan: 2, dataField: "terapiaComplementar", label: { text: "Terapia Complementar", alignment: "right" },
					editorType: "dxSelectBox", editorOptions: {
						valueExpr: "value", displayExpr: "text", dataSource : [
							{ "text": "Sim", "value": 1 }, { "text": "Não", "value": 0 }
						]
					},
				},{
					colSpan: 2
				},{
					colSpan: 6, dataField: "suporteDireto", label: { text: "Suporte direto ao medicamento", alignment: "right" },
					editorType: "dxSelectBox",  editorOptions: {
						searchEnabled: true, showClearButton: true, valueExpr: "CodMedicamento",  displayExpr: "DescMedicamento",
						searchEnabled: true, dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlPreparacao,{ method:"listaMedicamentos", codigo: args });
								},
								load: function(args) {
									return $.getJSON(urlPreparacao,{ method: "listaMedicamentos", searchValue: args.searchValue, 
									filter: JSON.stringify(args.filter), skip: args.skip, take: args.take});
								}
							})
						})
					}
				},{
					colSpan: 6, dataField: "ajusteDose", label: { text: "Ajuste de Dose", alignment: "right" },
					editorType: "dxSelectBox", editorOptions: { 
						searchEnabled: true, showClearButton: true, valueExpr: "CodMedicamento",  
						displayExpr: "DescMedicamento", searchEnabled: true,
						dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({ 
								byKey: function(args) {
									return $.getJSON(urlPreparacao,{ method: "listaMedicamentos", codigo: args });
								},
								load: function(args) {
									return $.getJSON(urlPreparacao,{ method: "listaMedicamentos", searchValue: args.searchValue,
									filter: JSON.stringify(args.filter), skip: args.skip, take: args.take });
								}
							})
						})
					}
				},{
					colSpan: 6, dataField: "precaucoes", label: { text: "Precauções", alignment: "right" }, 
					editorType: "dxTextArea", editorOptions: { height: 80 } 
				},{
					colSpan: 6, dataField: "principaisToxicidades", label: { text: "Principais Toxicidades", alignment: "right" },
					editorType: "dxTextArea", editorOptions: { height: 80 } 
				},{
					colSpan: 6, dataField: "examesControle", label: { text: "Exames de Controle", alignment: "right" },
					editorType: "dxTextArea", editorOptions: { height: 80 } 
				}]
			}).dxForm("instance");
			
			dSReferencia = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					load: function(args) {
						var pCodTratamento = objForm.getEditor("tratameto").option("value");
						if (pCodTratamento == "Novo" || pCodTratamento == null || pCodTratamento == "") return [];
						return $.getJSON(urlPreparacaoNew,{method: "getReferencias", pCodTratamento: pCodTratamento});
					},
					insert: function(args) {
						var pCodTratamento = objForm.getEditor("tratameto").option("value");
						return $.getJSON(urlPreparacaoNew,{ method: "insertReferencia", pCodTratamento: pCodTratamento,
						dados: JSON.stringify(args)});
					},
					update: function(args,args2) {
						var pCodTratamento = objForm.getEditor("tratameto").option("value");
						if (typeof args2.estudo != "undefined") args.estudo = args2.estudo;
						if (typeof args2.referencias != "undefined") args.referencias = args2.referencias;
						if (typeof args2.linkReferencia != "undefined") args.linkReferencia = args2.linkReferencia;
						if (typeof args2.codCID != "undefined") args.codCID = args2.codCID
						else args.codCID	= args.codCID.split(",")					
						if (args2.codTipoRegime) args.codTipoRegime = args2.codTipoRegime
						else args.codTipoRegime	= args.codTipoRegime.split(",")					
						if (args2.codGrupoTipoRegime) args.codGrupoTipoRegime = args2.codGrupoTipoRegime
						else args.codGrupoTipoRegime	= args.codGrupoTipoRegime.split(",")				
						return $.get(urlPreparacaoNew,{ method: "insertReferencia", pCodTratamento: pCodTratamento,
							dados: JSON.stringify(args)},function(rs){});
					},		                
					remove: function(args) {
						var pCodTratamento = objForm.getEditor("tratameto").option("value");
						return $.get(urlPreparacaoNew,{ method: "delReferencia", pCodTratamento: pCodTratamento,
						linha: args.id });
					}
				})
			});
			
			$("#divReferencias").dxDataGrid({
				disabled: 1,
				dataSource: dSReferencia,
				columns: [
					{ dataField: "estudo", caption: "Estudo"},
					{ dataField: "referencias", caption: "Referências do tratamento"},
					{ dataField: "linkReferencia", caption: "Link para a referência"},
					{ caption: "Restrição", columns: [ 
						{ dataField: "descCID", caption: "CID", setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
							rowData.codCID = value;	
				  	}},
						{ dataField: "descTipoRegime", caption: "Tipo Regime", setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
							rowData.codTipoRegime = value;	
				  	}},
						{ dataField: "descGrupoTipoRegime", caption: "Grupo Tipo Regime", setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
							rowData.codGrupoTipoRegime = value;	
				  	}},
					]}
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "descCID") {
						e.editorName = "dxTagBox"; 
						e.editorOptions.dataSource = [
							{ codCID: "C90.0", descCID: "(C90.0) Mieloma Múltiplo"},
			        { codCID: "C91.1", descCID: "(C91.1) Leucemia Linfocítica Crônica"}
						];
						if (e.row.data.codCID != "") {
							e.editorOptions.value = e.row.data.codCID.split(",");
						}
						e.editorOptions.displayExpr = "descCID";
						e.editorOptions.valueExpr = "codCID";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.showClearButton = 1;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
					if (e.parentType == "dataRow" && e.dataField == "descTipoRegime") {
						e.editorName = "dxTagBox"; 
						e.editorOptions.dataSource = [
							{ "text": "Preferencial", "value": "1" },
							{ "text": "Outras Possibilidades", "value": "2"},
					    { "text": "Regimes Recomendados", "value": "3" },
					    { "text": "Útil em determinadas circunstâncias", "value": "4" },
					    { "text": "Terapia de Suporte", "value": "9" }
						];
						if (e.row.data.codTipoRegime != "") {
							e.editorOptions.value = e.row.data.codTipoRegime.split(",");
						}
						e.editorOptions.displayExpr = "text";
						e.editorOptions.valueExpr = "value";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
					if (e.parentType == "dataRow" && e.dataField == "descGrupoTipoRegime") {
						e.editorName = "dxTagBox"; 
						e.editorOptions.dataSource = [
							{"value": "1.1", "text": "Mieloma Múltiplo - Terapia de Prevenção de Perda Óssea"},
							{"value": "1.2", "text": "Mieloma Múltiplo - Terapia de Primeira Linha para Candidatos a Transplante"},
							{"value": "1.3", "text": "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Fit"},
							{"value": "1.4", "text": "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Frágil"},
							{"value": "1.5", "text": "Mieloma Múltiplo - Terapia de Segunda Linha e Terapia Subsequente"},
							{"value": "2.1", "text": "Mieloma Indolente"},
							{"value": "3.1", "text": "Amiloidose de Cadeia Leve - Terapia de Primeira Linha"},
							{"value": "3.2", "text": "Amiloidose de Cadeia Leve - Terapia de Segunda Linha e Subsequente"}						
						];
						if (e.row.data.codGrupoTipoRegime != "") {
							e.editorOptions.value = e.row.data.codGrupoTipoRegime.split(",");
						}
						e.editorOptions.displayExpr = "text";
						e.editorOptions.valueExpr = "value";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},

				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: false },
				editing: { mode: "cell", allowUpdating: true, allowAdding	 : true, allowDeleting: true, useIcons: true},					
				height: function() { return window.innerHeight - 150;},
				selection: { mode: "single" },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
			});

			dSCiclo = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					load: function(args) {
						var pCodTratamento = objForm.getEditor("tratameto").option("value");
						if (pCodTratamento == "Novo" || pCodTratamento == null || pCodTratamento == "") return [];
						return $.getJSON(urlPreparacaoNew,{method:"getCiclos", pCodTratamento: pCodTratamento});
					},
					remove: function(args) {
						var pCodTratamento = objForm.getEditor("tratameto").option("value");
						return $.get(urlPreparacaoNew,{ method: "delCiclo", pCodTratamento: pCodTratamento, ciclo: args.ciclo});
					}
				})
			});

			$("#divCiclos").dxDataGrid({
				disabled: 1,
				dataSource: dSCiclo,
				columns: [
					{ dataField: "ciclo", caption: "Ciclo", alignment: "center" },
					{ dataField: "periodicidade", caption: "Periodicidade" },
					{ dataField: "medicamento", caption: "Medicamento" },
					{ dataField: "dose", caption: "Dose" },
					{ dataField: "viaAdministracao", caption: "Via de Administração" },
					{ dataField: "posologia", caption: "Posologia" },
					{ dataField: "diasTratamento", caption: "Dias de Tratamento" },
					{ dataField: "observacoes", caption: "Observações", width: "300px" }
				],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: true, pageSize: 25 },
				editing: { mode: "popup", allowUpdating: false, allowAdding	 : false, allowDeleting: true, useIcons: true },					
				height: function() { return window.innerHeight - 150;},
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						ciclo = selectedItems.selectedRowsData[0].ciclo
						addCiclo(ciclo)
					}
				},
				selection: { mode: "single" },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: { 
							icon: "add", text: "Inserir Ciclo", hint: "Inserir Ciclo", type: "default",
							stylingMode: "contained",
							onClick: function(e) {
								var pCodTratamento = objForm.getEditor("tratameto").option("value");
								if (pCodTratamento == "Novo" || pCodTratamento == null) pCodTratamento = "";
								if (pCodTratamento == "") {
									DevExpress.ui.notify("Favor informar o Tratamento!","warning");
									return;
								}
								$.getJSON(urlPreparacaoNew,{ method: "novoCiclo", pCodTratamento: pCodTratamento },function(retorno){
				    				addCiclo(retorno.ciclo)
			    			});
							}
						}
					})
				}			
			});

			function addCiclo(ciclo){
				$("#divPopUpCiclo").dxPopup({
					width: "90%",
					height: "90%",
					showTitle: true,
					title: "Adicionar/Editar Ciclo",
					visible: true,
					dragEnabled: false,
					closeOnOutsideClick: false,
					toolbarItems: [{
						location:"before",
						toolbar :"top",
					},{
						widget: "dxButton",
						location:"after",
						toolbar:"bottom",
						options: { 
							width: "130px",
							type: "default",
							icon: "fas fa-copy",
							text: "Copiar", 
							onClick : function(){
								var result = DevExpress.ui.dialog.confirm("<i>Confirma a copia do ciclo?", "Confirmação?");
								result.done(function(dialogResult) {
									if (!dialogResult) return;
									var pCodTratamento = objForm.getEditor("tratameto").option("value");
									$.get(urlPreparacaoNew, {method: "copyCiclo", pCodTratamento: pCodTratamento, ciclo: ciclo},function(rs){
										if (rs == 1) {
											DevExpress.ui.notify("Tratamento copiado com sucesso!","success");
										}else{
											DevExpress.ui.notify("Erro: "+rs,"error");
										}      	
									});
					    	});
							}
						}
					},{
						widget: "dxButton",
						location:"after",
						toolbar:"bottom",
						options: { 
							width: "130px",
							type: "default",
							icon: "close",
							text: "Fechar", 
							onClick : function(){
								$("#divPopUpCiclo").dxPopup("instance").hide()
							}
						}
					}],			        
					onHiding: function(){
						$("#divCiclos").dxDataGrid("instance").clearSelection()
						$("#divCiclos").dxDataGrid("instance").getDataSource().reload()
					},
					onContentReady: function(){
						carregaFormCiclo(ciclo)
					},
					contentTemplate: function(e) {
						conteudoDialog = $("<div id='dvConteudoDialogCiclo'></div>")
						e.append(conteudoDialog);
					}		
				})	
			}
			
			function carregaFormCiclo(ciclo){
				var pCodTratamento = objForm.getEditor("tratameto").option("value");
				$.getJSON(urlPreparacaoNew,{method: "recDadosCiclo", pCodTratamento: pCodTratamento, ciclo: ciclo },
				function(retorno){
					$("#dvConteudoDialogCiclo").dxForm({
						formData: retorno.formData,
						scrollingEnabled: true,
						screenByWidth: function() { return "lg"; },
						activeStateEnabled:true,
						colCount: 10,
						items: [
							{ colSpan: 3, dataField: "ciclo", disabled: true, label: { text: "Número do Ciclo" }},
							{ colSpan: 3, dataField: "periodicidade", label: { text: "Periodicidade (dias)" },
								editorType: "dxNumberBox", editorOptions: { format: "#0", }
							},
							{ colSpan: 4, dataField: "continuoPeriodicidade", label: { alignment: "left", text: "Uso" },
								editorType: "dxSelectBox", editorOptions: { 
									showClearButton: true, valueExpr: "codigo", displayExpr: "desc", 
									dataSource: [{codigo:0,desc:"Cíclico"},{codigo:1,desc:"Contínuo"},{codigo:2,desc:"Até progressão de doença ou toxicidade"}]
								}
							},
							{ colSpan: 10, template: function (data, itemElement) { itemElement.append("<div id='gridCadCiclo'>") }}
						],
						onContentReady: function(){
							carregaGridCiclo(ciclo)
						},
						onFieldDataChanged: function(obj){
							alert()
							if (obj.value==undefined) return
							if (obj.dataField=="continuoPeriodicidade"){

							}
							var pCodTratamento = objForm.getEditor("tratameto").option("value");
							$.post(urlPreparacaoNew,{ method: "salvaDadosCiclo", pCodTratamento: pCodTratamento,
							ciclo: ciclo, campo: obj.dataField, valor: obj.value },'json')
						}			        
					})
				})
			}

			function carregaGridCiclo(ciclo){
				$("#gridCadCiclo").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							load: function(args) {
								var pCodTratamento = objForm.getEditor("tratameto").option("value");
								return $.getJSON(urlPreparacaoNew,{ method: "recCiclo",pCodTratamento: pCodTratamento, ciclo: ciclo});
							},
							remove: function(args) {
								var pCodTratamento = objForm.getEditor("tratameto").option("value");
								return $.getJSON(urlPreparacaoNew,{ method: "delCicloSequencia",
									pCodTratamento: pCodTratamento, ciclo: args.ciclo, nseq: args.nseq });
							}
						})
					}),
					columns: [
						{ dataField: "medicamento", caption: "Medicamento" },
						{ dataField: "dose", caption: "Dose" },
						{ dataField: "viaAdministracao", caption: "Via de Administração" },
						{ dataField: "posologia", caption: "Posologia" },
						{ dataField: "diasTratamento", caption: "Dias de Tratamento" },
						{ dataField: "observacoes", caption: "Observações", width: "300px" }
					],
					filterRow: { visible: false },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 10 },
					editing: { mode: "popup", allowUpdating: false, allowAdding: false, allowDeleting: true, useIcons: true },					
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							ciclo = selectedItems.selectedRowsData[0].ciclo
							sequencia = selectedItems.selectedRowsData[0].nseq
							addMedicamento(ciclo,sequencia)
						}
					},
					selection: { mode: "single" },
					showBorders: true,
					showRowLines: true,
					height: function() { return window.innerHeight - 250;},
					rowAlternationEnabled: true,
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add", text: "Inserir Medicamento", hint: "Inserir Medicamento",
								type: "default", stylingMode: "contained", onClick: function(e) {
									var pCodTratamento = objForm.getEditor("tratameto").option("value");
									$.getJSON(urlPreparacaoNew,{ method: "novaSequencia", pCodTratamento: pCodTratamento,
									ciclo: ciclo },function(retorno){
										addMedicamento(ciclo,retorno.sequencia)
									})
								}
							}
						})
					}
				})			
			}

			function addMedicamento(ciclo,sequencia){
				$("#divPopUpMedicamento").dxPopup({
					width: "90%",
					height: "90%",
					showTitle: true,
					title: "Adicionar/Editar Medicamento",
					visible: true,
					dragEnabled: false,
					closeOnOutsideClick: false,
					toolbarItems: [{
						location:"before",
						toolbar :"top",
					},{
						widget: "dxButton",
						location:"after",
						toolbar:"bottom",
						options: { 
							width: "130px",
							type: "default",
							icon: "check",
							text: "Salvar", 
							onClick: function(){
								salvarMedicamento()
							}
						}
					},{
						widget: "dxButton",
						location:"after",
						toolbar:"bottom",
						options: { 
							width: "130px",
							type: "default",
							icon: "close",
							text: "Fechar", 
							onClick: function(){
								$("#divPopUpMedicamento").dxPopup("instance").hide()
							}
						}
					}],			        
					onHiding: function(){
						$("#gridCadCiclo").dxDataGrid("instance").clearSelection()
						$("#gridCadCiclo").dxDataGrid("instance").getDataSource().reload()
					},
					onContentReady: function(){
						carregaFormMedicamento(ciclo,sequencia)
					},
					contentTemplate: function(e) {
						conteudoDialog = $("<div id='dvConteudoDialogMed'></div>")
						e.append(conteudoDialog);
					}		
				})	
			}

			function carregaFormMedicamento(ciclo,sequencia){
				var pCodTratamento = objForm.getEditor("tratameto").option("value");
				$.getJSON(urlPreparacaoNew,{method: "recSequencia", pCodTratamento: pCodTratamento, 
				ciclo: ciclo, sequencia: sequencia },function(retorno){
					tipoRegime = objDados.getEditor("terapiaSuporte").option("value");
					$("#dvConteudoDialogMed").dxForm({
						formData: retorno.formData,
						scrollingEnabled: true,
						screenByWidth: function() { return "lg"; },
						activeStateEnabled: true,
						alignItemLabels: true,
						alignItemLabelsInAllGroups: true,
						onFieldDataChanged: function(obj){
							if (obj.value==undefined) return
							if (obj.dataField=="doseUnid"){
								$("#dvConteudoDialogMed").dxForm("instance").updateData("doseApresUnid",obj.value)
							}
							if (obj.dataField=="via"){
								obj.component.beginUpdate()
								if (obj.value==1){
									obj.component.itemOption("mudancas","visible",true)
									obj.component.itemOption("endovenosa","visible",false)
								}else{
									obj.component.itemOption("endovenosa","visible",true)
									obj.component.itemOption("mudancas","visible",false)
								}
								obj.component.endUpdate()
							}
							if (obj.dataField=="continuoDiaInicial"){
								formulario = $("#dvConteudoDialogMed").dxForm("instance")
								if (obj.value==true){
									formulario.updateData("diaInicial","")
									formulario.updateData("continuoDiaFinal",true)
									var editor = formulario.getEditor("diaInicial");
									editor.option("disabled",true)
									var editor = formulario.getEditor("continuoDiaFinal");
									editor.option("disabled",true)
								}else{
									var editor = formulario.getEditor("diaInicial");
									editor.option("disabled",false)
									var editor = formulario.getEditor("continuoDiaFinal");
									editor.option("disabled",false)
									formulario.updateData("continuoDiaFinal",false)
								}
							}
							if (obj.dataField=="continuoDiaFinal"){
								formulario = $("#dvConteudoDialogMed").dxForm("instance")
								if (obj.value==true){
									formulario.updateData("diaFinal","")
									var editor = formulario.getEditor("diaFinal");
									editor.option("disabled",true)
								}else{
									var editor = formulario.getEditor("diaFinal");
									editor.option("disabled",false)
								}
							}
						},
						items: [
							{ itemType: "group", colCount: 12, items:[
								{ colSpan: 2, dataField: "sequencia", disabled: true, label: { text: "Sequência" }},
								{ itemType: "empty", colSpan: 10 },
								{ colSpan: 12, dataField: "medicamento", label: { text: "Medicamento" },
									validationRules: [{ type: "required" }], editorType: "dxSelectBox",
									editorOptions: {
										searchEnabled: true, showClearButton: true, valueExpr: "CodMedicamento", 
										displayExpr: "DescMedicamento", searchEnabled: true,
										dataSource: new DevExpress.data.DataSource({
											store: new DevExpress.data.CustomStore({
												byKey: function(args) { 
													return $.getJSON(urlPreparacao,{ method:"listaMedicamentos", codigo: args });
												},
												load: function(args) {
													return $.getJSON(urlPreparacao,{ method:"listaMedicamentos", searchValue:args.searchValue, 
													filter:JSON.stringify(args.filter), skip:args.skip, take:args.take});
												}
											})
										})
									}
								},
								{ colSpan: 3, dataField: "dose", label: { text: "Dose" }, validationRules: [{ type: "required" }]},
								{ colSpan: 2, dataField: "doseUnid", cssClass: "semBordasLaterais", label: { visible : false },
									validationRules: [{ type: "required" }], editorType: "dxSelectBox", 
									editorOptions: {
										valueExpr: "Cod",  displayExpr: "Desc", searchEnabled: true,
										dataSource: new DevExpress.data.DataSource({
											store: new DevExpress.data.CustomStore({
												byKey: function(args) {
												  return $.getJSON(urlPreparacao,{method: "listaINPARA", chave: "UNIDDOSAGEM", codigo: args });
												},
												load: function(args) {
													return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "UNIDDOSAGEM",
													searchValue:args.searchValue, filter:JSON.stringify(args.filter), skip:args.skip, take:args.take});
												}
											})
										})
									}			
								},
								{ colSpan: 7, dataField: "via", label: { text: "Via de Administração" }, 
									validationRules: [{ type: "required" }], editorType: "dxSelectBox",
									editorOptions: {
										searchEnabled: true, showClearButton: true, valueExpr: "Cod", displayExpr: "Desc", searchEnabled: true,
											dataSource: new DevExpress.data.DataSource({
												store: new DevExpress.data.CustomStore({
													byKey: function(args) {
														return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "VIAADMINISTRACAO",
														codigo: args });
													},
													load: function(args) {
														return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "VIAADMINISTRACAO",
															searchValue:args.searchValue, filter:JSON.stringify(args.filter), skip:args.skip,
															take:args.take});
													}
												})
											})
										}			
								},
								{ colSpan: 4, dataField: "posologia", label: { text: "Posologia" }, 
									validationRules: [{ type: "required" }], editorType: tipoRegime=="1"?"dxTextBox":"dxSelectBox",
									editorOptions: {
										searchEnabled: true, showClearButton: true, valueExpr: "Cod", displayExpr: "Desc", searchEnabled: true,
										dataSource: new DevExpress.data.DataSource({
											store: new DevExpress.data.CustomStore({
												byKey: function(args) {
													return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "POSOLOGIA", codigo: args });
												},
												load: function(args) {
													return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "POSOLOGIA", 
														searchValue:args.searchValue, filter:JSON.stringify(args.filter), skip:args.skip, 
														take:args.take});
												}
											})
										})
									}			
								},
								{ colSpan: 3, dataField: "diaInicial", label: { text: "Dia Inicial" }, 
									validationRules: [{ type: "required" }], editorType: tipoRegime=="1"?"dxTextBox":"dxTextBox",
									editorOptions: {
										format: "#0", disabled : retorno.formData.continuoDiaInicial==1?true:false
									}
								},{
									colSpan: tipoRegime=="1"?5:1, dataField: "continuoDiaInicial",
									label: { alignment: "left", location: "right", text: "Uso Contínuo?", showColon: false },
									editorType: "dxCheckBox",
								},{
									colSpan: 3, visible: tipoRegime=="1"?false:true, dataField: "diaFinal", 
									validationRules: [{ type: "required" }], label: { text: "Dia Final" },
									editorType: tipoRegime=="1"?"dxTextBox":"dxNumberBox",
									editorOptions: { format: "#0", disabled : retorno.formData.continuoDiaFinal==1?true:false }
								},{
									dataField: "continuoDiaFinal",visible: tipoRegime=="1"?false:true,
									label: {alignment: "left",location: "right",text: "Uso Contínuo?",showColon: false},
									editorType: "dxCheckBox",
									editorOptions: { disabled : retorno.formData.continuoDiaInicial==1?true:false }
								},{
									colSpan: 12,itemType: "group",name: "mudancas",caption: "Apresentação",
									visible: retorno.formData.via==1?true:false,colCount: 12,
									items: [
										{ colSpan: 3,dataField: "doseApresentacao",label: {text: "Dose"},
											validationRules: [{type: "required"}]
										},
										{ colSpan: 2,dataField: "doseApresUnid",cssClass: "semBordasLaterais",
											label: { visible : false },validationRules: [{type: "required"}],				   
											editorType: "dxSelectBox", editorOptions: {
												readOnly: true,valueExpr: "Cod", displayExpr: "Desc", searchEnabled: true,
												dataSource: new DevExpress.data.DataSource({
													store: new DevExpress.data.CustomStore({
														byKey: function(args) {
															return $.getJSON(urlPreparacao,{method: "listaINPARA",chave: "UNIDDOSAGEM",codigo: args});
														},
														load: function(args) {
															return $.getJSON(urlPreparacao,{method: "listaINPARA",chave: "UNIDDOSAGEM",
															searchValue:args.searchValue,filter:JSON.stringify(args.filter),skip:args.skip,
															take:args.take,});
														}
													})
												})
											}			
										},
										{ colSpan: 7,dataField: "doseApresentacaoUnid",label: {text : "Unidade de Apresentação"},
											validationRules: [{type: "required"}],editorType: "dxSelectBox",
											editorOptions: { valueExpr: "Cod", displayExpr: "Desc", searchEnabled: true,
												dataSource: new DevExpress.data.DataSource({
													store: new DevExpress.data.CustomStore({
														byKey: function(args) {
															return $.getJSON(urlPreparacao,{method: "listaINPARA",chave: "UNIDDOSAGEMAPRESENTACAO",
																codigo: args });
														},
														load: function(args) {
															return $.getJSON(urlPreparacao,{method: "listaINPARA",chave: "UNIDDOSAGEMAPRESENTACAO",
																searchValue:args.searchValue,filter:JSON.stringify(args.filter),skip:args.skip,
																take:args.take,});
														}
													})
												})
											}			
										}
									]
								},
								{ colSpan: 12,itemType: "group",name: "endovenosa",caption: "Diluição",
									visible: retorno.formData.via==1?false:true, colCount: 12, 
									items: [
										{ colSpan: 3, dataField: "diluicao",label: {text: "Diluição (ml)"}, validationRules: [{type: "required"}]},
										{ colSpan: 2, dataField: "diluicaoEm", cssClass: "semBordasLaterais", label: { visible : false },
											validationRules: [{ type: "required" }], editorType: "dxSelectBox", 
											editorOptions: {
												valueExpr: "Cod", displayExpr: "Desc", searchEnabled: true, 
												dataSource: new DevExpress.data.DataSource({
													store: new DevExpress.data.CustomStore({
														byKey: function(args) {
															return $.getJSON(urlPreparacao,{method: "listaINPARA",chave: "MEIODILUICAO",codigo: args});
														},
														load: function(args) {
															return $.getJSON(urlPreparacao,{method: "listaINPARA",chave: "MEIODILUICAO",
															searchValue:args.searchValue, filter:JSON.stringify(args.filter),skip:args.skip,
															take:args.take,});
														}
													})
												})
											}			
										},
										{ colSpan: 7, dataField: "tempoInfusao", label: { text: "Tempo Infusão" },
											validationRules: [{ type: "required" }]
										}
									]
								}
							]
						}],
					})
				})
			}
			
			function salvarMedicamento(){
				formMedicamento = $("#dvConteudoDialogMed").dxForm("instance")
				if (!formMedicamento.validate().isValid){
					DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
					return
				}
				var pCodTratamento = objForm.getEditor("tratameto").option("value");
				$.post(urlPreparacaoNew,{ method:"salvaMedicamento", pCodTratamento: pCodTratamento,
				formulario: JSON.stringify(formMedicamento.option("formData"))},function(retorno){
					DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
					if (retorno.status==1){
						$("#divPopUpMedicamento").dxPopup("instance").hide()
					}
				},'json');
			}
			
			dSVinculo = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					load: function(args) {
						var pCodTratamento = objForm.getEditor("tratameto").option("value");
						if (pCodTratamento == "Novo" || pCodTratamento == null || pCodTratamento == "") return [];
						return $.getJSON(urlPreparacaoNew,{method:"getVinculos", pCodTratamento: pCodTratamento});
					},
					update: function(args,args2) {
						return $.get(urlPreparacaoNew,{ method: "setVinculo", codTratamento: args.codTratamento, 
						codCID: args.codCID, codVinculo: args.codVinculo, dados: JSON.stringify(args2), 
						codTipoRegime: args.codTipoRegime, grupoTipoRegime: args.grupoTipoRegime},function(rs){});
					},		                
				})
			});
			
			$("#divVinculos").dxDataGrid({
				disabled: 1,
				dataSource: dSVinculo,
				columns: [
					{ dataField: "descCID", caption: "CID", alignment: "center", groupIndex: 0, allowEditing: 0 },
					{ dataField: "descGrupoTipoRegime", caption: "Grupo Tipo de Regime", alignment: "center", groupIndex: 1, allowEditing: 0 },
					{ dataField: "descTipoRegime", caption: "Tipo de Regime", allowEditing: 0 },
					{ dataField: "flagAtivo", caption: "Vínculo", dataType: "boolean", width: "60px" },
					{ dataField: "terapiaSuporteDesc", caption: "Terapia de Suporte", width: "350px",
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descTerapia = #server(VAR.CSP.RegimesTerapeuticosNew.getDescRegTera(rowData.codCID, value))#;
							objLinha.defaultSetCellValue(rowData, descTerapia);
							rowData.terapiaSuporteCod = value;	
				  	}
					},
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "terapiaSuporteDesc") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								loadMode: "raw",
								byKey: function(args) {
									return $.getJSON(urlPreparacao,{ method: "listTratamento", cid: e.row.data.codCID,
										tipo: 9, codigo: e.row.data.terapiaSuporteCod });
								},
								load: function(args) {
									console.log(e.row.data.codCID)
									return $.getJSON(urlPreparacao,{ method: "listTratamento", cid: e.row.data.codCID,
										tipo: 9, searchValue: args.searchValue, filter: JSON.stringify(args.filter),
										skip: args.skip, take: args.take});
								}
							})	
						});
						e.editorOptions.value = (new Number(e.row.data.terapiaSuporteCod)+0);
						e.editorOptions.displayExpr = "Descricao";
						e.editorOptions.valueExpr = "Codigo";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: false, pageSize: 10 },
				editing: { mode: "cell", allowUpdating: true, allowAdding	 : false, allowDeleting: false, useIcons: true },					
				height: function() { return window.innerHeight - 150;},
				onEditingStart: function(e) {
					if (e.column.dataField == "terapiaSuporteDesc" && (e.data.codTipoRegime == 9 || e.data.flagAtivo == 0)) {
						e.cancel = 1
					}
				},
				onToolbarPreparing: function(e){
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-compress",
							hint: "Recolher",
							onClick: function(e) {
								var expanding = e.component.option("icon") === "fa fa-expand";
								if (expanding){
									$("#divVinculos").dxDataGrid("instance").expandAll();
								}else{
									$("#divVinculos").dxDataGrid("instance").collapseAll();	
								}
								e.component.option("hint", expanding ? "Recolher" : "Expandir");
								e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
							}
						}
					});
				},
				searchPanel: { visible: true },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
			});

			/*$(document).ready(function () {
				setTimeout(function(){
					objForm.getEditor("tratameto").option("value", "109")
				}, 500);
			});*/
		</script>
	</body>
</html>
