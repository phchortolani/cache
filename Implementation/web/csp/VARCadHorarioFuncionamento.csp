<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 			= $get(%request.Data("YBED", 1))
		set YM 				= $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 			= %request.Application
		set host 			= %request.CgiEnvs("HTTP_HOST")
		set url				= "http://"_host_app

		set URLPreparacao = "VAR.CSP.VARCadHorarioFuncionamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLLogin 			= "COMLogin.cls"
		set URLLink 			= "www.cls"
		set URLPreparacaoFat = "VAR.CSP.FATModeloLote.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"

		set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Horário de Funcionamento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<style>
	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	</style>	
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/exceljs.min.js"></script>
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/FileSaver.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		
		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>
		
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao 		= '#(URLPreparacao)#';
			var urlPreparacaoFat 	= '#(URLPreparacaoFat)#';
			var urlSearch					= '#(URLSearch)#';
			var urlLink 					= '#(URLLink)#';
			var YBED 							= '#(YBED)#';
			var YUSER 						= '#(YUSER)#';
			var YLOCATION 				= '#(YLOCATION)#';
			var nomeLocal 				= '#(nomeLocal)#';

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			$(document).ready(function () {
				limparTela();
			});
			
			function limparTela() {
				objGeral.resetValues();
				objFeriados.option("disabled",true);
				dataSourceFeriados.reload();
			}

			objToolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "save",
						hint	: "Salvar os Dados",
						type	: "success",
						stylingMode : "contained",
						onClick	: function(){
							var pCodLocal = objLocal.option("value");
              if (!pCodLocal) pCodLocal = ""
							var pNomeLocal = objGeral.getEditor("nomeLocal").option("value");
							var pCentroCusto = objGeral.getEditor("centroCusto").option("value");
							var pCorUnidade = objGeral.getEditor("corUnidade").option("value");
							var pOrganizacao = objGeral.getEditor("organizacao").option("value");
							var pSegundaSextaInicial = objGeral.getEditor("segundaSextaInicial").option("text");
							var pSegundaSextaFinal = objGeral.getEditor("segundaSextaFinal").option("text");
							var pFuncionaSabados = objGeral.getEditor("funcionaSabados").option("value");
							var pFuncionaSabadosInicial = objGeral.getEditor("funcionaSabadosInicial").option("text");
							var pFuncionaSabadosFinal = objGeral.getEditor("funcionaSabadosFinal").option("text");
							var pFuncionaDomingos = objGeral.getEditor("funcionaDomingos").option("value");
							var pFuncionaDomingosInicial = objGeral.getEditor("funcionaDomingosInicial").option("text");
							var pFuncionaDomingosFinal = objGeral.getEditor("funcionaDomingosFinal").option("text");
							
							var pLogradouro = objGeral.getEditor("logradouro").option("value");
							var pNumeroEndereco = objGeral.getEditor("numeroEndereco").option("value");
							var pComplemento = objGeral.getEditor("complemento").option("value");
							var pBairro = objGeral.getEditor("bairro").option("value");
							var pCidade = objGeral.getEditor("cidade").option("value");
							var pEstado = objGeral.getEditor("estado").option("value");
							var pCEP = objGeral.getEditor("cEP").option("value");
							var pTelefone = objGeral.getEditor("telefone").option("value");
							var pEmail = objGeral.getEditor("email").option("value");
							
							if (!objGeral.validate().isValid){
								DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
								return;
							}
							if (pFuncionaSabados) {
								if (pFuncionaSabadosInicial == "" || pFuncionaSabadosFinal == "") {
									DevExpress.ui.notify("Favor preencher os campos de horário de funcionamento aos sábados.","warning");
									return;
								}
							}
							if (pFuncionaDomingos) {
								if (pFuncionaDomingosInicial == "" || pFuncionaDomingosFinal == "") {
									DevExpress.ui.notify("Favor preencher os campos de horário de funcionamento aos domingos.","warning");
									return;
								}
							}
							
							if (pOrganizacao == null) pOrganizacao = "";
							
							$.getJSON(urlPreparacao,{
								method									: "SalvarDados",
								pCodLocal 							: pCodLocal,
								pNomeLocal 							: pNomeLocal,
								pCentroCusto 						: pCentroCusto,
								pCorUnidade							: pCorUnidade,
								pOrganizacao						: pOrganizacao,
								pSegundaSextaInicial 		: pSegundaSextaInicial,
								pSegundaSextaFinal 			: pSegundaSextaFinal,
								pFuncionaSabados 				: pFuncionaSabados,
								pFuncionaSabadosInicial : pFuncionaSabadosInicial,
								pFuncionaSabadosFinal 	: pFuncionaSabadosFinal,
								pFuncionaDomingos 			: pFuncionaDomingos,
								pFuncionaDomingosInicial: pFuncionaDomingosInicial,
								pFuncionaDomingosFinal 	: pFuncionaDomingosFinal,
								pLogradouro 						: pLogradouro,
								pNumeroEndereco 				: pNumeroEndereco,
								pComplemento 						: pComplemento,
								pBairro 								: pBairro,
								pCidade 								: pCidade,
								pEstado 								: pEstado,
								pCEP 										: pCEP,
								pTelefone 							: pTelefone,
								pEmail 									: pEmail
							},function(retorno){
								if (retorno.status==1){
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
									dataSourceLocal.reload();
									objLocal.option("value", retorno.codigo)
								}else{
									DevExpress.ui.notify("Erro: "+retorno.status,"error");
								}
							});
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fas fa-file-import",
						hint	: "Importar Cadastro de Unidade",
						type	: "default",
						stylingMode : "contained",
						onClick	: function(){
							importarArquivo('021', "dataSourceLocal.reload();");
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fa fa-eraser",
						hint	: "Limpar os Campos",
						type	: "default",
						stylingMode : "contained",
						onClick	: function(){
							objLocal.option("value", "");
						}
					}
				}]
			}).dxToolbar("instance")
		
			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) {
					return "lg";
				},
				screenByWidth: function(width) {
					return "lg";
				},
				height:function(){
					return window.innerHeight-60
				},
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colCount: 10,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 8,
						dataField: "local",
          	label		: {
							text	: "Local"
						},  
						template	: function (data, itemElement) {
							itemElement.append("<div id='divLocal'/>")
						},
					},{},{},{
						colSpan: 10,
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
							deferRendering: false,
							animationEnabled: false,
							showNavButtons:true,
							onSelectionChanged: function(e){

							}
						},	
							height:'10px',
							tabs:[{
								title	: "Geral",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divGeral'>")
									}
								}],
							}]
						}
					]
				}]
			}).dxForm("instance");			
		
			dataSourceLocal = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
      		load: function() {
          	return $.getJSON(urlSearch,{
							method						:	"GetLocal",
							pCodLocal					: "",
							pFlagUnidadeSaude	: 1,
							pFlagLocalAtivo		: 1
						});
      		}
  			})
			});
			
			objLocal = $("#divLocal").dxSelectBox({
				dataSource: dataSourceLocal,
				searchEnabled: true,
				valueExpr: "Location", 
				displayExpr: "LocationName",
				showClearButton: true,
		    placeholder: "+",
				onValueChanged: function(e) {
					if (!e.value) {
						limparTela(); 
					}else{
						carregarDados(e.value);
						carregarDados(e.value);
					}
				}
			}).dxSelectBox("instance");

			dataSourceCentroCusto = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function () {
						return $.getJSON(urlSearch, { method: "GetCentroCusto"});
					}
				})
			});

			objGeral = $("#divGeral").dxForm({
				disabled: false,
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() { return window.innerHeight - 150;},
				screenByWidth: function(width) {return "lg";},
				colCount: 7,
				items	: [{
					colSpan: 4,
					itemType: "group",
					items: [{
						itemType: "group",
						colCount: 2,
						cssClass: "second-group",
						items: [{
							colSpan: 2, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
						},{
							colSpan: 2,
							dataField	: "nomeLocal",
							editorType	: "dxTextBox",
							label		: {
								text:"Nome do Local:",
								alignment: "right"
							},
							validationRules: [{
								type: "required"
							}],
						},{
							dataField	: "centroCusto",
							editorType	: "dxSelectBox",
							label	: {
								text:"Centro de Custo:",
								alignment: "right"
							},
							editorOptions: {
								dataSource: dataSourceCentroCusto,
								width: 300,
								valueExpr: "Codigo",
								displayExpr: "Descricao",
								value: "",
								buttons: [{
									location:"after",
									name: "addPRocedimento",
									options:{
										icon: "fas fa-file-import",
										hint: "Importar Cadastro de Centro de Custo",
										type: "default",
										stylingMode : "contained",
										onClick	: function(){
											importarArquivo('020', "dataSourceCentroCusto.reload();");
										}
									}
								}]								
							}							
						},{
							dataField	: "corUnidade",
							editorType	: "dxColorBox",
							label	: {
								text:"Cor:",
								alignment: "right"
							},
							editorOptions: {
								width: 150,
							}
						},{
							colSpan: 2,
							dataField	: "organizacao",
							editorType	: "dxSelectBox",
							label	: {
								text:"Organização:",
								alignment: "right"
							},
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacaoFat,{
												method: "GetFATOrganizacao",
												pCodOrganizacao: args
											});
										},
										load: function(args) {
											return $.getJSON(urlPreparacaoFat,{
												method: "GetFATOrganizacao",
												skip: args.skip,
												take: args.take,
												searchValue: args.searchValue,
												pPrestadorServicos: 1
											});
										}
									})
								}),
								valueExpr: "Codigo",
								displayExpr: "Descricao",
								value: "",
							}							
						},{
							colSpan: 2, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
						}],	
					},{
						colSpan: 4,
						colCount: 4,
						itemType: "group",
						cssClass: "second-group",
						caption: "Endereço",
						items: [
							{colSpan: 4, dataField: "logradouro", label: { text:"Logradouro:", alignment: "right"}},
							{colSpan: 1, dataField: "numeroEndereco", label: { text:"Número:", alignment: "right"}, editorOptions: { width: 100} },
							{colSpan: 3, dataField: "complemento", label: { text:"Complemento:", alignment: "right"}},
							{colSpan: 2, dataField: "bairro", label: { text:"Bairro:", alignment: "right"}},
							{colSpan: 2, dataField: "cidade", label: { text:"Cidade:", alignment: "right"}},
							{ colSpan: 2,
								dataField: "estado",
								editorType: "dxSelectBox",
								label: {
									text:"Estado:",
									alignment: "right"
								},
								editorType: "dxSelectBox",
								editorOptions: {
									dataSource: new DevExpress.data.DataSource({
		          			store: new DevExpress.data.CustomStore({
		              		loadMode: "raw",   
		              		load: function() {
		                  	return $.getJSON(urlSearch,{method:"GetWWW102",pDescParametro:"BUNDESLAND"});
		              		}
		          			})
		      				}),
									searchEnabled: true,
									valueExpr: "Codigo", 
									displayExpr: "Descricao",
								}
							},
							{ colSpan: 2, dataField: "cEP", label: { text:"CEP:", alignment: "right"},
								editorOptions: { 
									mask: "00000000",
        					maskRules: {"X": /[02-9]/}
        				}
							},
							{ colSpan: 2, dataField: "telefone", 
								label: { text:"Telefone:", alignment: "right"}, 
								editorOptions: { 
									mask: "+00(00)0000-0000",
        					maskRules: {"X": /[02-9]/}
        				}
							},
							{ colSpan: 2, dataField: "email", label: { text:"E-mail:", alignment: "right"}},
						]
					},{
						colSpan: 4,
						colCount: 4,
						itemType: "group",
						cssClass: "second-group",
						caption: "Horários de Funcionamento",
						items: [{
							dataField	: "segundaSextaInicial",
							editorType	: "dxDateBox",
							label		: {
								text:"Segunda a Sexta:",
								alignment: "right"
							},
							validationRules: [{
								type: "required"
							}],	
							editorOptions: {
								type: "time",
								pickerType: "native",
								width: 150,
							},
						},{
							dataField	: "segundaSextaFinal",
							editorType	: "dxDateBox",
							label		: {
								visible	: false
							},
							validationRules: [{
								type: "required"
							}],	
							editorOptions: {
								width: 150,
								type: "time",
								pickerType: "native",
							},
						},{},{},{
							dataField	: "funcionaSabados",
							editorType	: "dxCheckBox",
							label		: {
								text:"Funciona aos Sábados:",
								alignment: "right"
							},
							editorOptions: {
								onValueChanged: function (e) {  
									if (e.value) {
										objGeral.getEditor("funcionaSabadosInicial").option({"readOnly": false, "value": ""});
										objGeral.getEditor("funcionaSabadosFinal").option({"readOnly": false, "value": ""});
									}else{
										objGeral.getEditor("funcionaSabadosInicial").option({"readOnly": true, "value": ""});
										objGeral.getEditor("funcionaSabadosFinal").option({"readOnly": true, "value": ""});
									}
								}
							}
						},{
							dataField	: "funcionaSabadosInicial",
							editorType	: "dxDateBox",
							label		: {
								text:"Horário:",
								alignment: "right"
							},
							editorOptions: {
								type: "time",
								pickerType: "native",
								width: 150,
								readOnly: true
							},
						},{
							dataField	: "funcionaSabadosFinal",
							editorType	: "dxDateBox",
							label		: {
								visible	: false
							},
							editorOptions: {
								width: 150,
								type: "time",
								pickerType: "native",
								readOnly: true
							},
						},{},{
							dataField	: "funcionaDomingos",
							editorType	: "dxCheckBox",
							label		: {
								text:"Funciona aos Domingos:",
								alignment: "right"
							},
							editorOptions: {
								onValueChanged: function (e) {  
									if (e.value) {
										objGeral.getEditor("funcionaDomingosInicial").option({"readOnly": false, "value": ""});
										objGeral.getEditor("funcionaDomingosFinal").option({"readOnly": false, "value": ""});
									}else{
										objGeral.getEditor("funcionaDomingosInicial").option({"readOnly": true, "value": ""});
										objGeral.getEditor("funcionaDomingosFinal").option({"readOnly": true, "value": ""});
									}
								}
							}
						},{
							dataField	: "funcionaDomingosInicial",
							editorType	: "dxDateBox",
							label		: {
								text:"Horário:",
								alignment: "right"
							},
							editorOptions: {
								type: "time",
								pickerType: "native",
								width: 150,
								readOnly: true
							},
							
						},{
							dataField	: "funcionaDomingosFinal",
							editorType	: "dxDateBox",
							label		: {
								visible	: false
							},
							editorOptions: {
								width: 150,
								type: "time",
								pickerType: "native",
								readOnly: true
							},
						}]
					}]
				},{
					colSpan: 3,
					itemType: "group",
					cssClass: "second-group",
						caption: "Dias em que Não Funciona",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divFeriados'>")
						}
					}]
				}]
			}).dxForm("instance");
		
			dataSourceFeriados = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "dataInterna",
		  		loadMode: "raw",   
		  		load: function() {
			  		var pCodLocal = objLocal.option("value");
		      	return $.getJSON(urlPreparacao,{method:"GetDiasUnidadeNaoFunciona",pCodLocal:pCodLocal});
		  		},
		  		insert: function (values) {
			  		var pCodLocal = objLocal.option("value");
		        objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								if (coluna == "data") {
									dateObj = new Date(valor)
									valor = dateObj.getDate()+"/"+(dateObj.getMonth()+1)+"/"+dateObj.getFullYear();
								}	
								objDados.push(coluna+"~"+valor);
							}
						}
						#server(VAR.CSP.VARCadHorarioFuncionamento.SalvarDiasUnidadeNaoFunciona(pCodLocal, "", objDados, YBED))#
		    	},
					update: function (key, values) {
			  		var pCodLocal = objLocal.option("value");
		        objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						#server(VAR.CSP.VARCadHorarioFuncionamento.SalvarDiasUnidadeNaoFunciona(pCodLocal, key, objDados, YBED))#;
					},
					remove: function (key) {
			  		var pCodLocal = objLocal.option("value");
						#server(VAR.CSP.VARCadHorarioFuncionamento.ApagarDiasUnidadeNaoFunciona(pCodLocal, key, YBED))#;
		    	}					
				})
			});

			objFeriados = $("#divFeriados").dxDataGrid({
				dataSource: dataSourceFeriados,
				columns: [
					{	dataField: "ano", caption: "Ano", alignment: "center", allowEditing: 0, groupIndex: 0, sortOrder: "desc" },
					{	dataField: "data", caption: "Data", alignment: "center", width: 120, dataType: "date"},
					{	dataField: "descricao", caption: "Descrição", alignment: "center" },
					{	dataField: "criadoPor", caption: "Criado Por", alignment: "center", allowEditing: 0, visible: 0 },
					{	dataField: "criadoEm", caption: "Criado Em", alignment: "center", allowEditing: 0, visible: 0 },
				],
				onEditingStart: function(e) {
					if (e.column.dataField == "data" && typeof e.data.ano != "undefined") {
						e.cancel = true;
					}
				},
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: true },
				height: function() {
					return 477;
				},
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fas fa-file-import",
							hint: "Importar Cadastro de Feriados",
							onClick: function (e) {
								importarArquivo('022', "dataSourceFeriados.reload();");
							}
						}
					})
				},
				export: { enabled: true },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
			}).dxDataGrid("instance");
			
			function carregarDados(pCodLocal) {
				$.getJSON(urlPreparacao, {	
					method		:	"GetDados",
					pCodLocal	: pCodLocal,
				},function(objRetorno){
					objFeriados.option("disabled",false);
					objGeral.option("formData", objRetorno)
					dataSourceFeriados.reload();
				});
			}
			
		</script>
	</body>
</html>
