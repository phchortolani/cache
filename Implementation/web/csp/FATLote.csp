<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR
  
		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 		= $get(%request.Data("YBED", 1))
		set YM 			= $get(%request.Data("YM", 1))
		set YLOCATION	= $get(%request.Data("YLOCATION", 1))

		set PortCache 	= $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 		= %request.Application
		set host 		= %request.CgiEnvs("HTTP_HOST")
		set url			= "http://"_host_app
		;
		set param="EP=1&YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set paramEncrypt = $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)
		
		set URLPreparacao	= "VAR.CSP.FATLote.cls"
		set URLLogin 		= "COMLogin.cls"

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Lotes de Faturamento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.light.compact.css" />

		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/ui/1.12.1/jquery-ui.css" />
		
	    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalincv2.css" id="style_color" />

	</head>
	<style>
		div.ui-tooltip {
		    max-width: 800px;
		}
	</style>

	<script type="text/javascript">

		var alterado = 0;
		var carregarDados = 1;
		var codRegraGlobal = "";
		var flVoltaCodigo = 0;

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="loadpanel"></div>
		<div id="divPrintRelatorio"></div>
		
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jquery.min.js"></script>
		
		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		
	    <!-- JQuery-UI -->
	    <script type="text/javascript" src=" #(YGIF)#global/plugins/ui/1.12.1/jquery-ui.js"></script>
		
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao	= '#(URLPreparacao)#';

			$.ajaxSetup({
			  headers : {   
			    'id_key' : '#(paramEncrypt)#'
			  }
			});

			DevExpress.localization.locale("pt");

			$(document)
				.ajaxSuccess(function(jqxhr, textStatus, error) {
					loadPanel.hide();
				})
				.ajaxError(function(jqxhr, textStatus, error) {
					var err = textStatus.status + ", " + textStatus.statusText;
		    		DevExpress.ui.notify("Problema no acesso à internet. Favor verificar (code: "+err+")", "error", 4000);
					loadPanel.hide();
				});	        
			
			setInterval(function () { verificaConexao(); }, 30000);


	        $(document).ready(function () {
		        carregaDataSources()
	        	montaTela()
	        	resizeMe()
	        	carregaLote("")
	        })
			$(window).resize(function() {
			  resizeMe()
			});	       
			
		  	function verificaConexao(){
		  		$.getJSON(urlPreparacao,{
			  		method:"validaSessao"
			  	},function(resp){
			        if (resp.status == 0) {
			            alert(resp.mensagem)
			            window.location.replace(URLLogin)
			        }
			  	})
		  	}
			
			function resizeMe(){
				$("#divForm").dxForm("instance").option("height",window.innerHeight - 60)
				var tamanhoAbas = window.innerHeight - 140
				if (tamanhoAbas<200) tamanhoAbas = 200
				$("#divGeral").dxForm("instance").option("height",tamanhoAbas)
				$("#divGerenciaFechamento").dxForm("instance").option("height",tamanhoAbas)
				$("#divControle").dxForm("instance").option("height",tamanhoAbas)
				
				var alturaGridFaturas = window.innerHeight - 320
				if (alturaGridFaturas<200) alturaGridFaturas = 200
				$("#divFaturas").dxDataGrid("instance").option("height",alturaGridFaturas)
				//
				
				$("#divNotaFiscal").dxDataGrid("instance").option("height",alturaGridFaturas-100)
			}
			
			function montaTela(){
				// Monta o LoadPanel
				loadPanel = $("#loadpanel").dxLoadPanel({
			        visible: true,
			        showIndicator: true,
			        showPane: true,
			        shading: true,
			        shadingColor:"rgba(255,255,255,.6)",
			        closeOnOutsideClick: false,
			    }).dxLoadPanel("instance");

				// Monta toolbar
				$("#toolbar").dxToolbar({
				    items: [{
				    	location: "after",
				        widget: "dxButton",
				        options: {
					        elementAttr: {
						      id: "botaoSalvar"  
					        },
				            icon: "save",
				            hint: "Salvar os Dados",
				            text: "Salvar",
				            type: "default",
				            stylingMode: "contained",
				            onClick: function () {
								salvarDados()
				            }
				        }
				    }, {
				    	location: "after",
				        widget: "dxButton",
				        options: {
				            icon: "trash",
				            hint: "Remover o Lote",
				            text: "Remover",
				            type: "danger",
				            stylingMode: "contained",
				            onClick: function () {
								removerDados()
				            }
				        }
				    }, {
				    	location: "after",
				        widget: "dxButton",
				        options: {
				            icon: "fas fa-dollar-sign",
				            hint: "Iniciar Fechamento",
				            text: "Iniciar Fechamento",
				            type: "default",
				            stylingMode: "contained",
				            onClick: function () {
								fecharLote()
				            }
				        }
				    }, {
				    	location: "after",
				        widget: "dxButton",
				        visible: false,
				        options: {
				            icon: "fas fa-dollar-sign",
				            hint: "Concluir Fechamento",
				            text: "Concluir Fechamento",
				            type: "success",
				            stylingMode: "contained",
				            onClick: function () {
								concluirLote()
				            }
				        }
				    }, {
				    	location: "after",
				        widget: "dxButton",
				        visible: false,
				        options: {
				            icon: "fas fa-ban",
				            hint: "Cancelar Fechamento",
				            text: "Cancelar Fechamento",
				            type: "danger",
				            stylingMode: "contained",
				            onClick: function () {
								cancelarFechamento()
				            }
				        }
				    }, {
				        location: "after",
				        widget: "dxButton",
				        options: {
				            icon: "fa fa-eraser",
				            hint: "Limpar os Campos",
				            type: "default",
							text: "Limpar",
				            stylingMode: "contained",
				            onClick: function () {
								if ($("#divForm").dxForm("instance").option("formData").lote!=undefined){
									$("#divForm").dxForm("instance").updateData("lote","")
								}else{
					            	carregaLote("")
								}
				            }
				        }
				    }]
				})

				// Monta formulário principal
				$("#divForm").dxForm({
				    activeStateEnabled: true,
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 60
				    },
				    onContentReady: function (){
						montaAbas()
					},
				    alignItemLabels: false,
				    alignItemLabelsInAllGroups: false,
				    items: [{
				        itemType: "group",
				        items: [{
	       			        cssClass: "first-group",
				            dataField: "lote",
						    label		: {
							    alignment: "right",
							    text	: "Lote"
						    },
						    editorType	: "dxSelectBox",
							editorOptions: {
								dataSource: dataSourceLote,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
								searchEnabled: true,
		                        width: "470px",
		                        onValueChanged: function(e){
			                        carregaLote(e.value)
			                    },
			                	buttons: [{
				                    name: "search",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "search",
				                        onClick: function() {
					                        abrePesquisaLote()
				                        }
				                    }
			                	},'dropDown']
			                }				            
				        },{
				            itemType: "tabbed",
				            cssClass	: "first-group",
				            name: "abas",
				            tabPanelOptions: {
				                deferRendering: false,
				            },
				            tabs: [{
				                title: "Geral",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divGeral'>")
				                    }
				                }],
				            }, {
				                title	: "Fechamento",
				                visible	: false,
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divGerenciaFechamento'>")
				                    }
				                }]
				            }, {
				                title: "Auditoria",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divControle'>")
				                    }
				                }]
				            }]
				        }]
				    }]
				})
			}			
			// Abre popup para pesquisar por organizações
			function abrePesquisaLote(){
				 popupOptions = {
			        width: "90%",
			        height: "90%",
			        showTitle: true,
			        title: "Pesquisa Lotes",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
				preparaPesquisaLote()
			}		
			
			function preparaPesquisaLote(){
		        $("#pesquisaPopup").dxDataGrid({
			        columns:[{
						dataField	: "CodigodoLote",
						caption		: "Número do Lote"
				   	},{
						dataField	: "ModelodeLote",
						caption		: "Modelo"
				   	},{
						dataField	: "DataInicial",
						caption		: "Data Inicial",
						dataType	: "date",
				   	},{
						dataField	: "DataFinal",
						caption		: "Data Final",
						dataType	: "date",
				   	},{
						dataField	: "Status",
						caption		: "Situação"
				   	},{
						dataField	: "Valor",
						caption:"Valor Total",
						dataType	: "number",
						format		: "R$ #,##0.00"
				   	}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		var deferred = $.Deferred()
				            $.getJSON(urlPreparacao,{
	        	            	method	:"pesquisaLote",
	        	            	filter	: JSON.stringify(args.filter),
	        	            	sort	: JSON.stringify(args.sort),
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
		        	    	},function(result){
								deferred.resolve(
									result.data, {
										totalCount: result.totalCount
									});
							});
							return deferred.promise();
	    	    		}	
	    			}),
	    			remoteOperations	: true,
		    		selection: { mode: "single" },
					filterRow: { visible: true },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 25 },
					pager: {
			            showPageSizeSelector: true,
	        		    allowedPageSizes: [10, 25, 50, 100],
						showInfo: true,
						showNavigationButtons: true,
	        		},				
					height: "100%",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							$("#divForm").dxForm("instance").updateData("lote",selectedItems.selectedRowKeys[0].CodigodoLote)
							$("#openPopup").dxPopup("instance").hide()
						}
					}
				}).dxDataGrid("instance")
			}
			
			function carregaLote(codigo){
				if (flVoltaCodigo) {
					flVoltaCodigo=0
					return
				}
				if (alterado){
					var result = DevExpress.ui.dialog.confirm("Há dados não salvos. Deseja prosseguir?", "Dados não salvos");
				    result.done(function(dialogResult) {
				        if (!dialogResult){
					        flVoltaCodigo=1
					        $("#divForm").dxForm("instance").updateData("lote",codRegraGlobal)
					        return
						}
						loadPanel.show()
						$.ajaxSetup({async: false});	
						setTimeout(function(){ 
							carregaLote2(codigo)
						},10)
				    })
				    result.fail(function(){
				        flVoltaCodigo=1
				        $("#divForm").dxForm("instance").updateData("lote",codRegraGlobal)
				        return
					})
				}else{
					loadPanel.show()
					setTimeout(function(){ 
						$.ajaxSetup({async: false});	
						carregaLote2(codigo)
					},10)
				}
			}
			function carregaLote2(codigo){	
				
				codRegraGlobal = codigo	
				$.getJSON(urlPreparacao,{
                    method:"recLote",
                    codigo: codigo
                },function(retorno){
	               	formGeral = $("#divGeral").dxForm("instance")
	               	formGeral.beginUpdate()
	               	formGeral.option("disabled",false)
	               	$("#toolbar").dxToolbar("instance").option("items[0].visible",true)
					$("#toolbar").dxToolbar("instance").option("items[0].options.disabled",false)
					$("#toolbar").dxToolbar("instance").option("items[1].visible",true)
					$("#toolbar").dxToolbar("instance").option("items[1].options.disabled",false)
					$("#toolbar").dxToolbar("instance").option("items[2].options.disabled",false)
					$("#toolbar").dxToolbar("instance").option("items[3].visible",false)
					$("#toolbar").dxToolbar("instance").option("items[4].visible",false)
					abas = $("#divForm").dxForm("instance").getEditor("abas")
		            abas.option("selectedIndex",0)
	                if (codigo==""){
		                $("#toolbar").dxToolbar("instance").option("items[1].options.disabled",true)
		                $("#toolbar").dxToolbar("instance").option("items[2].options.disabled",true)
						formGeral.itemOption("principal.modeloLote","disabled",false)
						formGeral.itemOption("principal.dataInicial","disabled",false)
						formGeral.itemOption("principal.dataFinal","disabled",false)
						formGeral.itemOption("faturas","visible",false)
						abas = $("#divForm").dxForm("instance").getEditor("abas")
			            abas.option("items[1].visible",false)
						
	                }else{
						abas = $("#divForm").dxForm("instance").getEditor("abas")
			            abas.option("items[1].visible",false)
						if (retorno.formGeral.codSituacao==1){
							$("#toolbar").dxToolbar("instance").option("items[0].options.disabled",false)
							$("#toolbar").dxToolbar("instance").option("items[1].options.disabled",false)
							$("#toolbar").dxToolbar("instance").option("items[2].options.disabled",false)
							$("#toolbar").dxToolbar("instance").option("items[2].visible",true)
						}else if (retorno.formGeral.codSituacao==2){
							abas = $("#divForm").dxForm("instance").getEditor("abas")
				            abas.option("items[1].visible",true)
				            $("#divGeral").dxForm("instance").option("disabled",true)
				            $("#divGerenciaFechamento").dxForm("instance").option("disabled",false)
							$("#toolbar").dxToolbar("instance").option("items[0].visible",false)
							$("#toolbar").dxToolbar("instance").option("items[1].visible",false)
							$("#toolbar").dxToolbar("instance").option("items[2].visible",false)
							$("#toolbar").dxToolbar("instance").option("items[3].visible",true)
							$("#toolbar").dxToolbar("instance").option("items[4].visible",true)
							$("#divRelatorios").dxDataGrid("instance").getDataSource().reload()
							$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
							$("#divGuias").dxDataGrid("instance").getDataSource().reload()
						}else if (retorno.formGeral.codSituacao==3){
							abas = $("#divForm").dxForm("instance").getEditor("abas")
				            abas.option("items[1].visible",true)
				            $("#divGeral").dxForm("instance").option("disabled",true)
							$("#divGerenciaFechamento").dxForm("instance").option("disabled",true)
							$("#toolbar").dxToolbar("instance").option("items[0].visible",false)
							$("#toolbar").dxToolbar("instance").option("items[1].visible",false)
							$("#toolbar").dxToolbar("instance").option("items[2].visible",false)
							$("#toolbar").dxToolbar("instance").option("items[3].visible",false)
							$("#toolbar").dxToolbar("instance").option("items[4].visible",true)
							$("#divRelatorios").dxDataGrid("instance").getDataSource().reload()
							$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
							$("#divGuias").dxDataGrid("instance").getDataSource().reload()
		               	}		               	
						formGeral.itemOption("principal.modeloLote","disabled",true)
						formGeral.itemOption("principal.dataInicial","disabled",true)
						formGeral.itemOption("principal.dataFinal","disabled",true)
						formGeral.itemOption("faturas","visible",true)
	                }
	                formGeral.endUpdate()
	                carregarDados = 1
	                $("#divGeral").dxForm("instance").resetValues()
	                $("#divGeral").dxForm("instance").option("formData",retorno.formGeral)
	                $("#divControle").dxForm("instance").option("formData",retorno.formControle)
					carregarDados = 0
					campoAlterado(0)
	                loadPanel.hide()
	                $.ajaxSetup({async: true});
	            });
			}
			
			function carregaDataSources(){
				dataSourceLote = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            byKey: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getLote",
	                        	lote:args
			                });
		                },
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getLote",
	                        	skip:args.skip,
	                        	take:args.take,
	                        	filter:JSON.stringify(args.filter),
	                        	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        

				dataSourceModeloLote = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            byKey: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	: "listModeloLote",
	                        	codigo	: args
			                });
		                },
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	: "listModeloLote",
	                        	skip	: args.skip,
	                        	take	: args.take,
	                        	searchValue : args.searchValue
			                });
		                }
		            })
				})


			}
			
			// Salva os dados da abas "Geral", "Endereço", "Contato"
			function salvarDados(){
				var lote		= $("#divForm").dxForm("instance").option("formData").lote
				var abaGeral	= $("#divGeral").dxForm("instance")
				if (!abaGeral.validate().isValid){
		        	DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
			        return
				}
				$.post(urlPreparacao,{
					method			: "salvar",
					lote			: lote,
					camposGeral		: JSON.stringify(abaGeral.option("formData"))
				},function(retorno){
					DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
					if (retorno.status==1){
						campoAlterado(0)
						dataSourceLote.reload()
						dataSourceLote.pageIndex(0)
						if ($("#divForm").dxForm("instance").option("formData").lote==retorno.lote){
							carregaLote(retorno.lote)
						}else{
							$("#divForm").dxForm("instance").updateData("lote",retorno.lote)
						}
					}
				},"json")
			}			
			
			
			// Iniciar o fechamento
			function fecharLote(){
				var lote	= $("#divForm").dxForm("instance").option("formData").lote
				var result	= DevExpress.ui.dialog.confirm("Deseja iniciar o fechamento do lote?", "Fechamento do Lote");
			    result.done(function(dialogResult) {
					if (!dialogResult){
						return
					}
					var lote		= $("#divForm").dxForm("instance").option("formData").lote
					var abaGeral	= $("#divGeral").dxForm("instance")
					if (!abaGeral.validate().isValid){
			        	DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
				        return
					}
					$.post(urlPreparacao,{
						method			: "salvar",
						lote			: lote,
						camposGeral		: JSON.stringify(abaGeral.option("formData"))
					},function(retorno){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
						if (retorno.status==1){
							$.post(urlPreparacao,{
								method			: "fecharLote",
								lote			: lote
							},function(retorno){
								DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
								if (retorno.status==1){
									campoAlterado(0)
									carregaLote(lote)
								}
							},"json")				
						}
					},"json")
			    })
			}

			// Cancelar o fechamento
			function cancelarFechamento(){
				var lote	= $("#divForm").dxForm("instance").option("formData").lote
				var result	= DevExpress.ui.dialog.confirm("Deseja <font color=red>CANCELAR</font> o fechamento do lote?", "Cancelar fechamento do Lote");
			    result.done(function(dialogResult) {
					if (!dialogResult){
						return
					}
					$.post(urlPreparacao,{
						method			: "cancelarFechamento",
						lote			: lote
					},function(retorno){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
						if (retorno.status==1){
							campoAlterado(0)
							carregaLote(lote)
						}
					},"json")				
			    })
			}

			// Iniciar o fechamento
			function concluirLote(){
				var lote	= $("#divForm").dxForm("instance").option("formData").lote
				var result	= DevExpress.ui.dialog.confirm("Deseja fechar do lote?", "Fechamento do Lote");
			    result.done(function(dialogResult) {
					if (!dialogResult){
						return
					}
					$.post(urlPreparacao,{
						method			: "concluirLote",
						lote			: lote
					},function(retorno){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
						if (retorno.status==1){
							campoAlterado(0)
							carregaLote(lote)
						}
					},"json")				
			    })
			}

			function removerDados(){
				var lote		= $("#divForm").dxForm("instance").option("formData").lote
				var result = DevExpress.ui.dialog.confirm("Deseja <font color=red>REMOVER</font> o Lote?", "Exclusão de Registro");
			    result.done(function(dialogResult) {
					if (!dialogResult){
						return
					}
					$.post(urlPreparacao,{
						method			: "removerLote",
						lote			: lote
					},function(retorno){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
						if (retorno.status==1){
							campoAlterado(0)
							$("#divForm").dxForm("instance").updateData("lote","")
							dataSourceLote.reload()
							dataSourceLote.pageIndex(0)
						}
					},"json")				
			    })
			}

			// Monta abas - chamado automaticamente ao término da montagem do form 'divForm'
			function montaAbas(){
				montaAbaGeral()
				montaAbaGerenciaFechamento()
				montaAbaControle()
			}
			
			
			// Monta aba 'Geral'
			function montaAbaGeral(){
				$("#divGeral").dxForm({
				    activeStateEnabled	: true,
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    height: function () {
				        return window.innerHeight - 170
				    },
				    onContentReady	: function(e){
					    montaGridFaturas()
				    },
				    minColWidth: 50,
				    onFieldDataChanged: function(e){
					    if (e.value==undefined) return
					    campoAlterado(1)
	 					if (e.dataField=="dataInicial"){
	 						var form = $("#divGeral").dxForm("instance");
	 						if (e.value == "" || e.value == null) {
								form.getEditor("dataFinal").option("min", null);
	 						}else{
								form.getEditor("dataFinal").option("min", e.value);
		 					}
	 					}
	 					if (e.dataField=="dataFinal"){
	 						var form = $("#divGeral").dxForm("instance");
	 						if (e.value == "" || e.value == null) {
								form.getEditor("dataInicial").option("max", null);
	 						}else{
								form.getEditor("dataInicial").option("max", e.value);
		 					}
	 					}
				    },
				    screenByWidth: function (width) {
				        return "lg";
				    },
					scrollingEnabled	: true,
				    items		: [{
					    itemType	: "group",
						colCount	: 12,    
					    cssClass	: "first-group",
					    name		: "principal",
						items 	: [{
						    colSpan		: 6,
						    dataField	:	"modeloLote",
						    label		: {
							    alignment: "right",
							    text	: "Modelo"
						    },
						    editorType	: "dxSelectBox",
							editorOptions: {
								onValueChanged: function (e) {
									if ($("#divForm").dxForm("instance").option("formData").lote){
										return
									}
				            		return $.getJSON(urlPreparacao,{
			        	            	method	:"getModeloLote",
			        	            	codigo	: e.value
				        	    	},function(retorno){
					        	    	formGeral = $("#divGeral").dxForm("instance")
					        	    	formGeral.updateData("dataReferencia",retorno.dataReferencia)
					        	    	formGeral.updateData("dataInicial",retorno.dataInicial)
					        	    	formGeral.updateData("dataFinal",retorno.dataFinal)
					        	    })
									
								},
								readOnly	: false,
								placeholder :"Selecione o Modelo...",
								dataSource	: dataSourceModeloLote,
			    		        valueExpr	: "codigo", 
								displayExpr	: "descricao",
								searchEnabled: true,
			                },
						},{
						    colSpan		: 6,
						    dataField	:	"situacao",
						    label		: {
							    alignment: "right",
							    text	: "Situação"
						    },
						    editorOptions:{
						    	readOnly	: true,
						    }
					    },{
						    colSpan		: 4,
						    dataField	:	"dataReferencia",
						    label		: {
							    alignment: "right",
							    text	: "Data de Referência do Pedido"
						    },
						    editorOptions:{
						    	readOnly	: true,
						    }
					    },{
							itemType	: "empty",
							colSpan		: 8
					    },{
						    colSpan		: 6,
						    dataField	: "dataInicial",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Data Inicial"
						    },
						    editorType	: "dxDateBox",
						    editorOptions: {
    		                	placeholder			:"Informe a data inicial...",
							    type				: "date",
							    openOnFieldClick	: true,
							    showClearButton		: true,
						    }
					    },{
						    colSpan		: 6,
						    dataField	:	"dataFinal",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Data Final"
						    },
						    editorType	: "dxDateBox",
						    editorOptions: {
    		                	placeholder:"Informe a data final...",
							    openOnFieldClick	: true,
							    showClearButton		: true,
							    onValueChanged: function (e) {
				 					var form = $("#divGeral").dxForm("instance");
				 					if (e.value == "" || e.value == null) {
            							form.getEditor("dataInicial").option("max", null);
				 					}else{
            							form.getEditor("dataInicial").option("max", e.value);
				 					}
        						}

						    }
					    }],
				    },{
					    itemType: "group",
					    caption	: "Faturas",
					    name	: "faturas",
					    cssClass: "second-group",
					    visible	: true,
					    items:[{
						    template	: "<div id='divFaturas'></div>"
					    }]
				    }]
				})
			}
			
			// Monta Grid Faturas
			function montaGridFaturas(){
				$("#divFaturas").dxDataGrid({
					columns: [{
						dataField:"numeroFatura",
						caption:"Número da Fatura",
						sortOrder: 'asc',
						sortIndex: 0,
					},{
						dataField	: "dataAbertura",
						caption		: "Data de Abertura",
						dataType	: "date",
					},{
						dataField:"paciente",
						caption:"Paciente"
					},{
						dataField:"carteirinha",
						caption:"Carteirinha"
					},{
						dataField:"convenioPlano",
						caption:"Convênio/Plano"
					},{
						dataField:"valorTotal",
						caption:"Valor Total",
						dataType	: "number",
						format		: "R$ #,##0.00"
					},{
						dataField:"situacao",
						caption:"",
						width:"40px",
						cellTemplate: function (container, options) { 
							if (options.data.invalido){
								conteudo = "<div class='custom-item'><i class='fas fa-info-circle' style='color:red;cursor:pointer'></i></div>";
							}else{
								conteudo = "<div class='custom-item'><i class='fas fa-info-circle' style='color:green;cursor:pointer'></i></div>";
							}
							container.append(
								$("<div style='text-align: center;' />")
									.html(conteudo)
									.attr("title", options.data.regras)
								    .tooltip({content:function () {
								        	return this.getAttribute("title");
								    	}
								    })
									.appendTo(container)
							);
						}
					},{
		        type: 'buttons',
		        width: 110,
		        buttons: [{
							hint: "Consultar",
							icon: "fas fa-eye",
							onClick: function(e) {
								$("#divPrintRelatorio").dxPopup("instance").option("title", "Relatório: Modelo Consultar Fatura")
			        	$("#divPrintRelatorio").dxPopup("show");
			        	$("#ifrPrintRelatorioConteudo").attr("src", "FATExtratoFaturamento.csp?YFORM=Consultar Fatura"+
			        		"&YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#&pDataInicial=#($ZDate($Horolog-365,3))#"+
			        		"&pDataFinal=#($ZDate($Horolog,3))#&pNumFatura="+e.row.data.numeroFatura+"");
							}
						},'delete'],
		      }],
		      summary: {
			      totalItems: [{
			        column: 'valorTotal',
			        summaryType: 'sum',
			        displayFormat: 'Total: {0}',
			        valueFormat: '#,##0.00',
			        /*editorOptions: {
				        format: '#,##0.00',
				      },*/
			      }],
			      },
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		return $.getJSON(urlPreparacao,{
	        	            	method	:"recFaturasLote"
		        	    	})
	    	    		},
	    	    		remove : function(args){
		            		return $.getJSON(urlPreparacao,{
	        	            	method			:"removeFaturasLote",
	        	            	numeroFatura	: args.numeroFatura
		        	    	},function(){
			        	    	campoAlterado(1)
			        	    })
	    	    		}
	    			}),
	    			editing: {
		            	mode: "cell",
		            	allowDeleting: true,
                    	useIcons: true,
	    			},
		    		selection: { mode: "single" },
					filterRow: { visible: true },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 100 },
					pager: {
			            showPageSizeSelector: true,
	        		    allowedPageSizes: [10, 25, 50, 100, 200],
						showInfo: true,
						showNavigationButtons: true,
	        		},				
					height: function (){
						return window.innerHeight - 320
					},	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								text: "Inserir Fatura",
								type: "default",
								hint: "Inserir Fatura no Lote",
								onClick: function(e) {
									insereFaturaLote()
								}
							}
						},{
							location: "after",
							widget: "dxButton",
							options: {
								icon: "refresh",
								text: "Atualizar",
								type: "default",
								hint: "Atualizar Dados",
								onClick: function(e) {
									$("#divFaturas").dxDataGrid("instance").getDataSource().reload()
								}
							}
						})
					},					
				})
			}
			
			// Abre popup para pesquisar por faturas para inserção no pré-lote
			function insereFaturaLote(){
				 popupOptions = {
			        width: "90%",
			        height: "90%",
			        showTitle: true,
			        title: "Pesquisa Faturas",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
				preparaPesquisaFaturaLote()
			}		
			
			function preparaPesquisaFaturaLote(){
		        $("#pesquisaPopup").dxDataGrid({
			        columns:[{
						dataField	: "Fatura",
						caption		: "Fatura"
				   	},{
						dataField	: "CodigodoPaciente",
						caption		: "Paciente"
				   	},{
						dataField	: "DataHoraAdmissao",
						caption		: "Data/Hora de Admissão",
						dataType	: "datetime",
				   	}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		var deferred = $.Deferred()
				            $.getJSON(urlPreparacao,{
	        	            	method	:"pesquisaFaturaLote",
	        	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
	        	            	filter	: JSON.stringify(args.filter),
	        	            	sort	: JSON.stringify(args.sort),
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
		        	    	},function(result){
			        	    	
								deferred.resolve(
									result.data, {
										totalCount: result.totalCount
									});
							});
							return deferred.promise();
	    	    		}	
	    			}),
	    			remoteOperations	: true,
		    		selection: { mode: "single" },
					filterRow: { visible: true },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 25 },
					pager: {
			            showPageSizeSelector: true,
	        		    allowedPageSizes: [10, 25, 50, 100],
						showInfo: true,
						showNavigationButtons: true,
	        		},				
					height: "100%",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
					  		$.getJSON(urlPreparacao,{
						  		method		:"insereFaturaLote",
						  		numeroFatura: selectedItems.selectedRowKeys[0].Fatura
						  	},function(resp){
							  	campoAlterado(1)
							  	$("#divFaturas").dxDataGrid("instance").getDataSource().reload()
								$("#openPopup").dxPopup("instance").hide()
						  	},'post')

						}
					}
				}).dxDataGrid("instance")
			}
			
			// Monta aba 'Gerenciamento de Fechamento'
			function montaAbaGerenciaFechamento(){
				$("#divGerenciaFechamento").dxForm({
				    activeStateEnabled	: true,
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    height: function () {
				        return window.innerHeight - 170
				    },
				    onContentReady	: function(){
					    montaGridNotasFiscais()
					    montaGridGuias()
					    montaGridRelatorios()
				    },
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
					scrollingEnabled	: true,
					colCount	: 2,
				    items		: [{
					    itemType	: "group",
					    caption		: "Guias",
					    name		: "guias",
					    cssClass	: "second-group",
						items 	: [{
						    template	: "<div id='divGuias'></div>",
						}],
				    },{
					    itemType	: "group",
					    caption		: "Relatórios",
					    name		: "relatorios",
					    cssClass	: "second-group",
						items 	: [{
						    template	: "<div id='divRelatorios'></div>",
						}],
				    },{
					    itemType	: "group",
					    caption		: "Notas Fiscais",
					    name		: "notasFiscais",
					    cssClass	: "second-group",
					    colSpan		: 2,
						items 	: [{
						    template	: "<div id='divNotaFiscal'></div>",
						}],
				    }]
				})
			}

			// Monta grid 'montaGridNotasFiscais'
			function montaGridNotasFiscais(){
				$("#divNotaFiscal").dxDataGrid({
					columns: [{
						dataField	:"NumerodaNotaFiscal",
						caption		:"Nota Fiscal",
						dataType	: "number",
						format		: "000000000",
						alignment	: "center",
						width		: "80px"
					},{
						dataField	: "DatadeEmissao",
						caption		: "Data de Emissão",
						dataType	: "datetime",
						alignment	: "center",
						width		: "110px"
					},{
						dataField	: "DatadeVencimento",
						caption		: "Data de Vencimento",
						dataType	: "date",
						alignment	: "center",
						width		: "120px"
					},{
						dataField	: "RPS",
						caption		: "RPS",
						dataType	: "number",
						format		: "000000000",
						alignment	: "center",
						width		: "80px"
					},{
						dataField	: "SeriedoRPS",
						caption		: "Série",
						dataType	: "number",
						format		: "000",
						alignment	: "center",
						width		: "50px"
					},{
						dataField	: "DatadeEmissaoProvisoria",
						caption		: "Emissão Provisória",
						dataType	: "date",
						alignment	: "center"
					},{
						dataField	: "TipodeNotaFiscal",
						caption		: "Tipo de NF",
						alignment	: "center",
						width		: "100px"
					},{
						dataField	: "FontePagadora",
						caption		: "Fonte Pagadora",
						width		: "150px"
					},{
						dataField	: "ValorTotaldaNF",
						caption		: "Valor",
						dataType	: "number",
						format		: "R$ #,##0.00",
						width		: "70px"
					},{
						dataField	: "ModelodaNotaFiscal",
						caption		: "Modelo de Nota Fiscal"
					},{
						dataField	: "StatusdaNotaFiscal",
						caption		: "Situação",
						width		: "210px",
					},{
						type		: "buttons",
						buttons: [{
		                    hint: "Editar",
		                    icon: "fas fa-edit",
		                    visible: function(e) {
			                    if (e.row.data.CodStatusdaNotaFiscal>2) return false
		                        return true
		                    },
		                    onClick: function(e) {
			                    insereNotaFiscal(e.row.data.codigoNota)
		                    }
		                },{
		                    hint: "Emissão manual da Nota Fiscal",
		                    icon: "far fa-file-alt",
		                    visible: function(e) {
			                    if (e.row.data.CodStatusdaNotaFiscal>2) return false
		                        return true
		                    },
		                    onClick: function(e) {
			                    emissaoManual(e.row.data.codigoNota)
		                        return
		                        var clonedItem = $.extend({}, e.row.data, { ID: ++maxID });

		                        employees.splice(e.row.rowIndex, 0, clonedItem);
		                        e.component.refresh(true);
		                        e.event.preventDefault();
		                    }
		                },{
		                    hint: "Excluir Nota Fiscal",
		                    icon: "fas fa-trash",
		                    visible: function(e) {
			                    if (e.row.data.CodStatusdaNotaFiscal>2) return false
		                        return true
		                    },
		                    onClick: function(e) {
								var result = DevExpress.ui.dialog.confirm("Confirma e exclusão da linha?", "Excluir linha");
							    result.done(function(dialogResult) {
							        if (!dialogResult){
								        return
									}
									loadPanel.show()
				            		$.getJSON(urlPreparacao,{
			        	            	method		:"removeNotaFiscal",
			        	            	codigoNota	: e.row.data.codigoNota,
				        	    	},function(retorno){
										if (retorno.status==0){
											DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
										}
					        	    	$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
					        	    	loadPanel.hide()
				        	    	})
	
							    })
		                    }
		                },{
		                    hint: "Cancelar Nota Fiscal",
		                    icon: "fas fa-ban",
		                    visible: function(e) {
			                    if (e.row.data.CodStatusdaNotaFiscal>2) return true
		                        return false
		                    },
		                    onClick: function(e) {
								var result = DevExpress.ui.dialog.confirm("Confirma o cancelamento da nota fiscal "+e.row.data.NumerodaNotaFiscal+"?", "Cancelar Nota Fiscal");
							    result.done(function(dialogResult) {
							        if (!dialogResult){
								        return
									}
									loadPanel.show()
				            		$.getJSON(urlPreparacao,{
			        	            	method		:"cancelaNotaFiscal",
			        	            	codigoNota	: e.row.data.codigoNota,
				        	    	},function(retorno){
										if (retorno.status==0){
											DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
										}
					        	    	$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
					        	    	loadPanel.hide()
				        	    	})
	
							    })
		                    }
		                }]						
					}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		return $.getJSON(urlPreparacao,{
	        	            	method	:"recNotasFiscais",
	        	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
		        	    	})
	    	    		}
	    			}),
					filterRow: { visible: false },
					hoverStateEnabled: true,
					paging: { enabled: false },
					height: function (){
						return "150px"
					},	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					selection : {
						allowSelectAll	: true,
						mode			:"multiple",
					},
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {							
			                    hint: "Emitir Nota Fiscal",
			                    text: "Emitir Nota Fiscal",
			                    type: "default",
			                    icon: "fas fa-file-invoice-dollar",
			                    onClick: function(e) {
				                    selecao = $("#divNotaFiscal").dxDataGrid("instance").getSelectedRowsData()
				                    var pendentes = []
				                    for (var i=0;i<selecao.length;i++){
					                    if (selecao[i].CodStatusdaNotaFiscal>2){
						                    continue
					                    }
					                    pendentes.push(selecao[i].codigoNota)
				                    }
				                    if (pendentes.length==0){
					                    DevExpress.ui.notify("Favor selecionar uma linha pendente de emissão/resposta", "warning", 4000);
					                    return
				                    }
			                        emiteNotaFiscal(pendentes)
			                    }
							}
		                },{
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								text: "Nova Nota Fiscal",
								type: "default",
								hint: "Inserir nova nota fiscal",
								onClick: function(e) {
									insereNotaFiscal("")
								}
							}
						})
					},					
				})
				return
			}		
			
			
			function emiteNotaFiscal(pendentes){
				 popupOptions = {
			        width: "350px",
			        height: "300px",
			        showTitle: true,
			        title: "Emissão de Nota Fiscal",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false,
			        onHiding	: function(){
			        	$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
			        	$("#divNotaFiscal").dxDataGrid("instance").clearSelection()
			        },
					toolbarItems: [{
						widget: "dxButton",
						location:"before",
						toolbar:"bottom",
						options: { 
							width	: "130px",
							type	: "default",
							icon	: "close",
                			text	: "Fechar", 
                			onClick : function(){
	                			$("#openPopup").dxPopup("hide")
	                		}
						}
					},{
						widget: "dxButton",
						location:"after",
						toolbar:"bottom",
						options: { 
							visible	: true,
							width	: "130px",
							type	: "success",
							icon	: "save",
                			text	: "Confirmar", 
                			onClick : function(){
								var formNota	= $("#pesquisaPopup").dxForm("instance")
								if (!formNota.validate().isValid){
						        	DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
							        return
								}
			            		$.post(urlPreparacao,{
		        	            	method	: "importaRespostaNF",
		        	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
		        	            	notas	: JSON.stringify($("#pesquisaPopup").dxForm("instance").option("formData").notas),
								},function(retorno){
									DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
									if (retorno.status==1){
										$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
										$("#openPopup").dxPopup("hide")
									}
								},"json")
	                		}
						}
					}]			        
			        
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
        		$.post(urlPreparacao,{
	            	method		: "emiteNotaFiscal",
	            	notas		: JSON.stringify(pendentes)
				},function(retorno){
					if (retorno.status==0){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
		    	    	$("#openPopup").hide()
		    	    	return
					}
			        $("#pesquisaPopup").dxForm({
				        scrollingEnabled	: true,
					    activeStateEnabled	: true,
					    formData	: {
						    notas	: pendentes
					    },
					    minColWidth	: 50,
					    screenByWidth: function (width) {
					        return "lg";
					    },
					    alignItemLabels: true,
					    alignItemLabelsInAllGroups: true,
					    items: [{
					        itemType	: "group",
					        items		: [{
						        template : "<a href=# onclick=geraArquivo()><center>Download do arquivo gerado<center></a>"
					        },{
						        dataField	: "resposta",
							    label		: {
								    alignment: "right",
								    text	: "Arquivo de Resposta"
							    },
							    editorType	: "dxFileUploader",
							    validationRules: [{ type: "required" }],
							    editorOptions : {
									selectButtonText: "Selecione o arquivo de resposta",
							        labelText: "",
							        accept: "",
							        uploadMode: "instantly",
									uploadHeaders: {
							            id_key: $.ajaxSetup().headers.id_key
							        },
							        uploadUrl: urlPreparacao+"?method=uploadArquivoResposta",
									onUploaded: function(e) {
										$.getJSON(urlPreparacao,{
											method		: "verificarArquivo"
										},function(retorno){
											if (retorno.mensagem){
												$("#pesquisaPopup").dxForm("instance").updateData("resposta","")
												DevExpress.ui.notify(retorno.mensagem, "warning", 4000);
											}
										})
							        }			        
							    }
					        }]
					    }]
			        })
    	    	})
			}
			
			// Monta formulário de inclusão de nota fiscal
			
			function insereNotaFiscal(codigo){
				 popupOptions = {
			        width: "90%",
			        height: "90%",
			        showTitle: true,
			        title: "Insere Nota Fiscal",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false,
			        onHiding	: function(){
				        $("#divNotaFiscal").dxDataGrid("instance").clearSelection()
			        },
					toolbarItems: [{
						widget: "dxButton",
						location:"before",
						toolbar:"bottom",
						options: { 
							width	: "130px",
							type	: "default",
							icon	: "close",
                			text	: "Fechar", 
                			onClick : function(){
	                			$("#openPopup").dxPopup("hide")
	                		}
						}
					},{
						widget: "dxButton",
						location:"after",
						toolbar:"bottom",
						options: { 
							visible	: true,
							width	: "130px",
							type	: "success",
							icon	: "save",
                			text	: "Salvar", 
                			onClick : function(){
								var formNota	= $("#pesquisaPopup").dxForm("instance")
								if (!formNota.validate().isValid){
						        	DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
							        return
								}
	                			
			            		$.post(urlPreparacao,{
		        	            	method	: "salvaNotaFiscal",
		        	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
		        	            	dados	: JSON.stringify(formNota.option("formData"))
								},function(retorno){
									DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
									if (retorno.status==1){
										$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
										$("#openPopup").dxPopup("hide")
									}
								},"json")

	                		}
						}
					}]			        
			        
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
				preparaFormNotaFiscal(codigo)
			}		
			
			function geraArquivo(pendentes){
				$.getJSON(urlPreparacao,{
					method		: "geraArquivo",
					lote		: $("#divForm").dxForm("instance").option("formData").lote,
					notas		: JSON.stringify($("#pesquisaPopup").dxForm("instance").option("formData").notas)
				},function(retorno){
				 	var link=document.createElement('a');
				 	var filePath = retorno.arquivo
				    link.href = filePath;
				    link.download = filePath.substr(filePath.lastIndexOf('/') + 1);
				    link.click();					
				})
			}

			function preparaFormNotaFiscal(codigo){
        		$.getJSON(urlPreparacao,{
	            	method	: "recPadraoNotaFiscal",
	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
	            	codigo	: codigo
    	    	},function(retorno){
	    	    	if (retorno.status==0){
		    	    	DevExpress.ui.notify(retorno.mensagem, "warning", 4000);
		    	    	$("#openPopup").hide()
		    	    	return
	    	    	}
			        $("#pesquisaPopup").dxForm({
				        scrollingEnabled	: true,
					    activeStateEnabled	: true,
					    formData	: retorno.formData,
					    minColWidth	: 50,
					    screenByWidth: function (width) {
					        return "lg";
					    },
					    alignItemLabels: true,
					    alignItemLabelsInAllGroups: true,
					    onContentReady	: function(e){
						    if (retorno.formData.discriminacao){
			            		$.getJSON(urlPreparacao,{
			    	            	method	: "getDiscriminacaoExterno",
			    	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
			    	            	texto	: e.component.option("formData").discriminacao,
			    	            	vencimento : JSON.stringify(e.component.option("formData").dataVencimento)
			        	    	},function(retorno){
			        	    		e.component.updateData("discriminacaoSaida",retorno.valor)	
			        	    	})
							    
						    }
					    },
					    onFieldDataChanged: function(e){
						    if (e.value==undefined) return
						    if (e.dataField=="valorTotal"||e.dataField=="modelo"){
			            		return $.getJSON(urlPreparacao,{
			    	            	method	: "calculaTributos",
			    	            	modelo	: e.component.option("formData").modelo,
			    	            	valor	: e.component.option("formData").valorTotal
			        	    	},function(retorno){
			        	    		e.component.getEditor("impostos").getDataSource().reload()
			        	    	})
						    }
						    if (e.dataField=="tipo"){
							    if (e.value==1){
								    if (e.component.itemOption("priGrupo.valorTotal").visible){
									    e.component.beginUpdate()
							    		e.component.itemOption("priGrupo.valorTotal","visible",false)
							    		e.component.itemOption("priGrupo.emptyValor","visible",true)
							    		e.component.itemOption("priGrupo.impostos","visible",false)
									    e.component.endUpdate()
							    	}
							    }else{
								    if (!e.component.itemOption("priGrupo.valorTotal").visible){
									    e.component.beginUpdate()
							    		e.component.itemOption("priGrupo.valorTotal","visible",true)
							    		e.component.itemOption("priGrupo.emptyValor","visible",false)
							    		e.component.itemOption("priGrupo.impostos","visible",true)
							    		e.component.endUpdate()
								    }
							    }
						    }
		 					if (e.dataField=="discriminacao"||e.dataField=="dataVencimento"){
			            		return $.getJSON(urlPreparacao,{
			    	            	method	: "getDiscriminacaoExterno",
			    	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
			    	            	texto	: e.component.option("formData").discriminacao,
			    	            	vencimento : JSON.stringify(e.component.option("formData").dataVencimento)
			        	    	},function(retorno){
			        	    		e.component.updateData("discriminacaoSaida",retorno.valor)	
			        	    	})
		 					}
					    },
					    items: [{
	       			        cssClass	: "first-group",
					        itemType	: "group",
					        name		: "priGrupo",
					        colCount	: 12,
					        items: [{
						        cssClass	: "first-group",
						        colSpan	 : 7,
					            dataField: "tipo",
							    label		: {
								    alignment: "right",
								    text	: "Tipo"
							    },
							    validationRules: [{ type: "required" }],
							    editorType	: "dxSelectBox",
							    visible		: retorno.formData.eParticular?false:true,
								editorOptions: {
									dataSource:  new DevExpress.data.CustomStore({
										loadMode: "raw",
					            		load: function(args) {
						            		return $.getJSON(urlPreparacao,{
						    	            	method	: "getINPARA",
						    	            	chave	: "FATTIPONOTAFISCAL"
						        	    	})
					    	    		}
					    			}),
				    		        valueExpr: "codigo", 
									displayExpr: "descricao",
				                }				            
					        },{
						        itemType : "empty",
						        colSpan	 : 5,
						        visible		: retorno.formData.eParticular?false:true,
					        },{
						        cssClass	: "first-group",
						        colSpan	 : 7,
					            dataField: "modelo",
					            validationRules: [{ type: "required" }],
							    label		: {
								    alignment: "right",
								    text	: "Modelo de Nota Fiscal"
							    },
							    editorType	: "dxSelectBox",
								editorOptions: {
									dataSource:  new DevExpress.data.CustomStore({
										loadMode: "raw",
					            		load: function(args) {
						            		return $.getJSON(urlPreparacao,{
						    	            	method	: "listModeloNotaFiscal"
						        	    	})
					    	    		}
					    			}),
				    		        valueExpr: "codigo", 
									displayExpr: "descricao",
									onValueChanged: function(e){
					            		$.getJSON(urlPreparacao,{
					    	            	method	: "recModeloNotaFiscal",
					    	            	codigo	: e.value
					        	    	},function(retorno){
							    	    	if (retorno.status==0){
								    	    	DevExpress.ui.notify(retorno.mensagem, "warning", 4000);
								    	    	$("#pesquisaPopup").dxForm("instance").updateData("modelo","")
								    	    	return
							    	    	}
							    	    	$("#pesquisaPopup").dxForm("instance").updateData("discriminacao",retorno.formData.discriminacao)
					        	    	})
									}
				                }				            
					        },{
						        itemType : "empty",
						        colSpan	 : 5
					        },{
						        cssClass	: "first-group",
						        colSpan	 : 7,
					            dataField: "fontePagadora",
					            validationRules: [{ type: "required" }],
							    label		: {
								    alignment: "right",
								    text	: "Fonte Pagadora"
							    },
							    editorType	: "dxSelectBox",
								editorOptions: {
									dataSource:  new DevExpress.data.CustomStore({
										loadMode: "raw",
					            		load: function(args) {
						            		return $.getJSON(urlPreparacao,{
						    	            	method	: "getFontePagadora",
						        	    	})
					    	    		}
					    			}),
				    		        valueExpr: "codigo", 
									displayExpr: "descricao",
									searchEnabled: true,
				                },
				                visible		: retorno.formData.eParticular?false:true,
				                
					        },{
						        itemType : "empty",
						        colSpan	 : 5,
						        visible		: retorno.formData.eParticular?false:true,
					        },{
						        cssClass	: "first-group",
						        colSpan	 : 6,
					            dataField: "dataEmissao",
					            validationRules: [{ type: "required" }],
							    label		: {
								    alignment: "right",
								    text	: "Data de Emissão Provisória"
							    },
							    editorType	: "dxDateBox",
							    visible		: retorno.formData.eParticular?false:true,
					        },{
						        cssClass	: "first-group",
						        colSpan	 : 6,
					            dataField: "dataVencimento",
					            validationRules: [{ type: "required" }],
							    label		: {
								    alignment: "right",
								    text	: "Data do Vencimento"
							    },
							    editorType	: "dxDateBox",
							    visible		: retorno.formData.eParticular?false:true,
					        },{
						        cssClass	: "first-group",
						        visible	 : retorno.formData.tipo==""?false:retorno.formData.tipo==1?false:true,
						        colSpan	 : 6,
					            dataField: "valorTotal",
							    label		: {
								    alignment: "right",
								    text	: "Valor Total da NF (R$)"
							    },
							    editorType	: "dxNumberBox",
							    editorOptions	: {
								    min		: 0,
								    format	: "#,##0.00"
							    }
					        },{
						        cssClass	: "first-group",
						        colSpan	 : 6,
					            dataField: "valorDeducoes",
							    label		: {
								    alignment: "right",
								    text	: "Valor Total das Deduções (R$)"
							    },
							    editorType	: "dxNumberBox",
							    editorOptions	: {
								    min		: 0,
								    format	: "#,##0.00"
							    },
							    visible		: retorno.formData.eParticular?false:true,
					        },{
						        visible	 : retorno.formData.eParticular?false:retorno.formData.tipo==""?true:retorno.formData.tipo==1?true:false,
						        itemType : "empty",
						        name	 : "emptyValor",
						        colSpan	 : 6
					        },{
						        cssClass	: "first-group",
						        visible	 : retorno.formData.tipo==""?false:retorno.formData.tipo==1?false:true,
						        name	 : "impostos",
						        colSpan	 : 12,
							    label		: {
								    alignment: "right",
								    text	: "Impostos"
							    },
						        editorType : "dxDataGrid",
						        editorOptions : {
									columns: [{
										dataField	:"tributo",
										caption		:"Tributo",
										visible		: false,
										formItem	: {
						                    colSpan		: 2,
											label		: {
												alignment: "right",
											    text	: "Tributo"
										    },						
										    validationRules: [{ type: "required" }],
					                        editorType: "dxSelectBox",
					                        editorOptions: {
							    		        valueExpr: "codigo", 
												displayExpr: "descricao",
												dataSource	: new DevExpress.data.DataSource({	
										            store: new DevExpress.data.CustomStore({
									                loadMode: "raw",
										            load: function(args) {
									                    return $.getJSON(urlPreparacao,{
									    	            	method	:"listTributos"
										                });
										                }
										            })
										        })											                        
					                        }											
										}
									},{
										dataField	:"tributoNome",
										caption		:"Nome Tributo",
										formItem	: {
											visible	: false
										}
									},{
										dataField	: "aliquota",
										caption		: "Alíquota",
										dataType	: "number",
										format		: "#,##0.00",
										setCellValue: function(newData, value, currentRowData) {
											if (currentRowData.aliquota==value) return
											baseCalculo = currentRowData.baseCalculo
											newData.aliquota = value
											if (baseCalculo==undefined) return
						                    newData.valor = baseCalculo * value /100;
						                },	
										formItem	: {
					                        validationRules: [{ type: "required" }],        
											label		: {
											    alignment: "right",
											    text	: "Alíquota"
										    },						                        
					                        editorType: "dxNumberBox",
					                        editorOptions: {
						                        min	: 0,
						                        max : 100,
						                        format : "##0.00"
					                        }
										}
									},{
										dataField	: "baseCalculo",
										caption		: "Base de Cálculo",
										dataType	: "number",
										format		: "#,##0.00",
										setCellValue: function(newData, value, currentRowData) {
											if (currentRowData.baseCalculo==value) return
											newData.baseCalculo = value
											//
											aliquota = currentRowData.aliquota
											if (aliquota==undefined) return
						                    newData.valor = value * aliquota /100;
						                },	
										formItem	: {
					                        validationRules: [{ type: "required" }],        
											label		: {
											    alignment: "right",
											    text	: "Base de Cálculo"
										    },						                        
					                        editorType: "dxNumberBox",
					                        editorOptions: {
						                        min	: 0,
						                        format : "#,##0.00"
					                        }
										}
									},{
										dataField	: "valor",
										caption		: "Valor",
										dataType	: "number",
										format		: "#,##0.00",
										allowEditing : false,

										formItem	: {
											label		: {
												alignment: "right",
												text	: "Valor do Tributo"
											},
											editorType: "dxNumberBox",
											editorOptions: {
												min			: 0,
												format 		: "#,##0.00"
											}
										}
									},{
										dataField	: "retidoFonte",
										caption		: "Retido na Fonte",
										dataType	: "boolean",
										formItem	: {
					                        editorType: "dxNumberBox",
										    label		: {
											    alignment: "right",
											    text	: "Retido na Fonte?",
											    showColon: false
										    },
					    					editorType	: "dxSwitch",
					    					editorOptions : {
						    					switchedOnText:"Sim",
						    					switchedOffText:"Não",
										    }
										}
									}],
									dataSource:  new DevExpress.data.CustomStore({
					            		insert : function(args){
						            		$.post(urlPreparacao,{
					        	            	method	:"salvaImpostoNota",
					        	            	dados	: JSON.stringify(args)
						        	    	},"json")
					            		},
										remove : function(args){
						            		$.getJSON(urlPreparacao,{
					        	            	method	:"removeImpostoNota",
					        	            	codigo	: args.tributo
						        	    	})
					            		},					            		
					            		update : function(argsOld,argsNew){
						            		var args = argsOld
						            		if (argsNew.tributo!=undefined) {
							            		args.tributo = argsNew.tributo
							            		args.tributoOld = argsOld.tributo
						            		}
						            		if (argsNew.aliquota!=undefined) {
							            		args.aliquota = argsNew.aliquota
						            		}
						            		if (argsNew.baseCalculo!=undefined) {
							            		args.baseCalculo = argsNew.baseCalculo
						            		}
						            		if (argsNew.valor!=undefined) {
							            		args.valor = argsNew.valor
						            		}
						            		if (argsNew.retidoFonte!=undefined) {
							            		args.retidoFonte = argsNew.retidoFonte
						            		}
						            		$.post(urlPreparacao,{
					        	            	method	:"salvaImpostoNota",
					        	            	dados	: JSON.stringify(args)
						        	    	},"json")
					            		},
					            		load: function(args) {
						            		return $.getJSON(urlPreparacao,{
					        	            	method	:"recImpostoNota"
						        	    	})
					    	    		}
					    			}),
									filterRow: { visible: false },
									hoverStateEnabled: true,
									paging: { enabled: false },
									height: function (){
										return "120px"
									},	
					    			editing: {
						            	mode: "popup",
						            	allowDeleting: true,
						            	allowUpdating: true,
						            	allowAdding: true,
				                    	useIcons: true,
							 			popup: {
							                title: "Tributos",
							                width	: "600px",
							                height	: "250px",
							                showTitle: true,
							            }
					    			},
									showBorders: true,
									showRowLines: true,
									rowAlternationEnabled: true,
						        }
					        },{
						        cssClass	: "first-group",
						        colSpan	 	: 6,
						        dataField	:	"discriminacao",
							    label		: {
								    alignment: "right",
								    text	: "Discriminação dos Serviços"
							    },
							    editorType : "dxTextArea",
							    editorOptions: {
								    height	: "150px"
							    }
						    },{
							    cssClass	: "first-group",
						        colSpan	 	: 6,
						        dataField	:	"discriminacaoSaida",
							    label		: {
								    visible	: false
							    },
							    editorType : "dxTextArea",
							    editorOptions: {
								    readOnly	: true,
								    height		: "150px"
							    }
						    }]
					    }]
					})
	    	    	
    	    	})
			}

			function emissaoManual(codigo){
				 popupOptions = {
			        width: "350px",
			        height: "300px",
			        showTitle: true,
			        title: "Emissão Manual de Nota Fiscal",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false,
			        onHiding	: function(){
			        	$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
			        },
					toolbarItems: [{
						widget: "dxButton",
						location:"before",
						toolbar:"bottom",
						options: { 
							width	: "130px",
							type	: "default",
							icon	: "close",
                			text	: "Fechar", 
                			onClick : function(){
	                			$("#openPopup").dxPopup("hide")
	                		}
						}
					},{
						widget: "dxButton",
						location:"after",
						toolbar:"bottom",
						options: { 
							visible	: true,
							width	: "130px",
							type	: "success",
							icon	: "save",
                			text	: "Confirmar", 
                			onClick : function(){
								var formNota	= $("#pesquisaPopup").dxForm("instance")
								if (!formNota.validate().isValid){
						        	DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
							        return
								}
			            		$.post(urlPreparacao,{
		        	            	method	: "salvaEmissaoManual",
		        	            	dados	: JSON.stringify(formNota.option("formData"))
								},function(retorno){
									DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
									if (retorno.status==1){
										$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
										$("#openPopup").dxPopup("hide")
									}
								},"json")
	                		}
						}
					}]			        
			        
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
        		$.getJSON(urlPreparacao,{
	            	method		: "recRPS",
	            	codigoNota	: codigo
    	    	},function(retorno){
					if (retorno.status==0){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
		    	    	$("#openPopup").hide()
		    	    	return
					}
	    	    	
			        $("#pesquisaPopup").dxForm({
				        scrollingEnabled	: true,
					    activeStateEnabled	: true,
					    minColWidth	: 50,
					    formData	: retorno.formData,
					    screenByWidth: function (width) {
					        return "lg";
					    },
					    alignItemLabels: true,
					    alignItemLabelsInAllGroups: true,
					    items: [{
					        cssClass	: "second-group",
					        itemType	: "group",
					        caption		: "Informações",
					        items		: [{
						        dataField	: "rps",
							    label		: {
								    alignment: "right",
								    text	: "RPS"
							    },
							    editorOptions: {
								    readOnly	: true
							    }
					        },{
						        dataField	: "serie",
							    label		: {
								    alignment: "right",
								    text	: "Série"
							    },
							    editorOptions: {
								    readOnly	: true
							    }
					        }]
					    },{
					        itemType	: "group",
					        items		: [{
						        dataField	: "NFe",
						        validationRules: [{ type: "required" }],        
							    label		: {
								    alignment: "right",
								    text	: "NF-e"
							    },
					        },{
						        dataField	: "codigo",
						        validationRules: [{ type: "required" }],        
							    label		: {
								    alignment: "right",
								    text	: "Código de Verificação"
							    },
						    }]
					    }]
			        })
    	    	})
			}		
			
			// Monta grid 'montaGridGuias'
			function montaGridGuias(){
				$("#divGuias").dxDataGrid({
					columns: [{
						dataField	:"FamiliadaTISS",
						caption		:"Família"
					},{
						dataField	: "quantidade",
						caption		: "Quantidade",
						dataType	: "number"
					},{
						dataField	: "valor",
						caption		: "Valor",
						dataType	: "number",
						format		: "R$ #,##0.00"
					},{
						dataField	: "erros",
						caption		: "Erros"
					},{
						dataField	: "situacao",
						caption		: "Situação",
						cellTemplate: function (container, options) { 
							if (options.data.errosTXT!=""){
								conteudo = "<div class='custom-item'><i class='fas fa-info-circle' style='color:red;cursor:pointer'></i> "+options.data.situacao+"</div>";
							}else{
								conteudo = "<div class='custom-item'>"+options.data.situacao+"</div>";
							}
							container.append(
								$("<div style='text-align: center;' />")
									.html(conteudo)
									.attr("title", options.data.errosTXT)
								    .tooltip({content:function () {
								        	return this.getAttribute("title");
								    	}
								    })
									.appendTo(container)
							);
						}
					},{
						type		: "buttons",
						width		: "40px",
						buttons: [{
		                    hint: "Baixar XMLs das guias",
		                    icon: "fas fa-download",
		                    onClick: function(e) {
			                    geraXMLGuias()
		                    }
		                }]
					}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		return $.getJSON(urlPreparacao,{
	        	            	method	: "recGuias",
	        	            	lote	: $("#divForm").dxForm("instance").option("formData").lote
		        	    	})
	    	    		}
	    			}),
					filterRow: { visible: false },
					hoverStateEnabled: true,
					paging: { enabled: false },
					height: "150px",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					onToolbarPreparing: function(e) {
						return
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								text: "Nova Guia",
								type: "default",
								hint: "Inserir nova guia",
								onClick: function(e) {
									insereGuia()
								}
							}
						})
					},					
				})
			}	
			
			function geraXMLGuias(){
				loadPanel.show()
	    		$.getJSON(urlPreparacao,{
	            	method	:"geraXMLGuia",
	            	lote	: $("#divForm").dxForm("instance").option("formData").lote,
		    	},function(retorno){
			    	loadPanel.hide()
					if (retorno.status==0){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
						return
					}
				 	var link=document.createElement('a');
				 	var filePath = retorno.arquivo
				    link.href = filePath;
				    link.download = filePath.substr(filePath.lastIndexOf('/') + 1);
				    link.click();					
			    })
				
			}
			
			function insereGuia(){
				loadPanel.show()
				$.post(urlPreparacao,{
					method			: "gerarGuia",
					lote			: $("#divForm").dxForm("instance").option("formData").lote,
				},function(retorno){
        	    	loadPanel.hide()
					if (retorno.status==0){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
						return
					}
        	    	$("#divNotaFiscal").dxDataGrid("instance").getDataSource().reload()
				},"json")
			}
			
			// Monta grid 'montaGridRelatorios'
			function montaGridRelatorios(){
				$("#divRelatorios").dxDataGrid({
					columns: [{
						dataField: "modelo", caption: "Modelo"
					},{
						type: "buttons",
						buttons: [{
							hint: "Visualizar",
							icon: "fas fa-eye",
							onClick: function(e) {
								$("#divPrintRelatorio").dxPopup("instance").option("title", "Relatório: Modelo "+e.row.data.modelo)
			        	$("#divPrintRelatorio").dxPopup("show");
			        	$("#ifrPrintRelatorioConteudo").attr("src", "FATExtratoFaturamento.csp?YFORM="+e.row.data.modelo+
			        		"&YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#&pDataInicial="+e.row.data.dataInicial+
			        		"&pDataFinal="+e.row.data.dataFinal+"&pNumLote="+e.row.data.lote+"");
							}
						}]
					}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		return $.getJSON(urlPreparacao,{
	        	            	method	:"getRelatorios",
	        	            	lote	: $("#divForm").dxForm("instance").option("formData").lote
		        	    	})
	    	    		}
	    			}),
					filterRow: { visible: false },
					hoverStateEnabled: true,
					paging: { enabled: false },
					height: function (){
						return "150px"
					},	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								text: "Novo Relatório",
								type: "default",
								hint: "Inserir novo relatório",
								onClick: function(e) {
									insereRelatorio()
								}
							}
						})
					},					
				})
				return
			}		
				

			// Monta aba 'Faturamento'
			function montaAbaFaturamento(){
				$("#divFaturamento").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled	: true,
				    minColWidth			: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    items		: [{
					    cssClass	: "first-group",
					    itemType	: "group",
					    name		: "primeiroGrupo",
					    colCount	: 12,
						items		: []
				    }]
				})
			}


			// Monta aba 'Controle'
			function montaAbaControle(){
				$("#divControle").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled: true,
				    minColWidth: 50,
				    readOnly	: true,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    items		: [{
					    cssClass	: "first-group",
					    itemType	: "group",
						items		: [{
						    dataField	:	"criadoEm",
						    label		: {
							    alignment: "right",
							    text	: "Criado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"criadoPor",
						    label		: {
							    alignment: "right",
							    text	: "Criado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"fechamentoIniciadoEm",
						    label		: {
							    alignment: "right",
							    text	: "Fechamento Iniciado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"fechamentoIniciadoPor",
						    label		: {
							    alignment: "right",
							    text	: "Fechamento Iniciado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"fechadoEm",
						    label		: {
							    alignment: "right",
							    text	: "Fechado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"fechadoPor",
						    label		: {
							    alignment: "right",
							    text	: "Fechado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						}]
				    }]
				})
			}

			function campoAlterado(flAlterado){
				if (carregarDados) return
				if (alterado != flAlterado){
					alterado = flAlterado
					if (alterado){
						$("#botaoSalvar").removeClass("dx-button-default").addClass("dx-button-success")
					}else{
						$("#botaoSalvar").removeClass("dx-button-success").addClass("dx-button-default")
					}
				}
			}
			
			$("#divPrintRelatorio").dxPopup({
				visible: false,
				title: "Relatório",
				width: 1000,
				height:  (window.innerHeight - 100),
				position: {
					my: "center", 
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<iframe id='ifrPrintRelatorioConteudo' width='980' height='"+(window.innerHeight - 100 - 52)+"'></iframe>")
					e.append(conteudo);
				}
			});
			
	</script>
	</body>
</html>
