<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 		= $get(%request.Data("YBED", 1))
		set YM 			= $get(%request.Data("YM", 1))
		set YLOCATION	= $get(%request.Data("YLOCATION", 1))

		set PortCache 	= $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 		= %request.Application
		set host 		= %request.CgiEnvs("HTTP_HOST")
		set url			= "http://"_host_app
		;
		set param="EP=1&YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set paramEncrypt = $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)
		
		set URLPreparacao	= "VAR.CSP.FATTabelaComercial.cls"
		set URLLogin 		= "COMLogin.cls"

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Tabelas Comerciais</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.light.compact.css" />

	    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalincv2.css" id="style_color" />

	</head>
	<script type="text/javascript">

		var alterado = 0;
		var carregarDados = 1;
		var codRegraGlobal = "";
		var flVoltaCodigo = 0;

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="loadpanel"></div>
		<div id="popover"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao	= '#(URLPreparacao)#';
			var paramEncrypt 	= '#(paramEncrypt)#';
			var YBED			= '#(YBED)#'
			var tipoTabelaAnt		= ""
			var unidadeMonetariaAnt	= ""
			var casasDecimaisAnt	= ""
			var linhasGrid			= 0
			$.ajaxSetup({
			  headers : {   
			    'id_key' : '#(paramEncrypt)#'
			  }
			});

			DevExpress.localization.locale("pt");

			$(document)
				.ajaxSuccess(function(jqxhr, textStatus, error) {
					//loadPanel.hide();
				})
				.ajaxError(function(jqxhr, textStatus, error) {
					var err = textStatus.status + ", " + textStatus.statusText;
		    		DevExpress.ui.notify("Problema no acesso à internet. Favor verificar (code: "+err+")", "error", 4000);
					loadPanel.hide();
				});	        
			
			setInterval(function () { verificaConexao(); }, 30000);


	        $(document).ready(function () {
		        carregaDataSources()
	        	montaTela()
	        	resizeMe()
	        	carregaTabela("")
	        })
			$(window).resize(function() {
			  resizeMe()
			});	       
			
		  	function verificaConexao(){
		  		$.getJSON(urlPreparacao,{
			  		method:"validaSessao"
			  	},function(resp){
			        if (resp.status == 0) {
			            alert(resp.mensagem)
			            window.location.replace(URLLogin)
			        }
			  	})
		  	}
			
			function resizeMe(){
				$("#divForm").dxForm("instance").option("height",window.innerHeight - 60)
				var tamanhoAbas = window.innerHeight - 140
				if (tamanhoAbas<200) tamanhoAbas = 200
				$("#divGeral").dxForm("instance").option("height",tamanhoAbas)
				$("#divCategorias").dxForm("instance").option("height",tamanhoAbas)
				$("#divTabela").dxForm("instance").option("height",tamanhoAbas)
				$("#divControle").dxForm("instance").option("height",tamanhoAbas)
				//
				var alturaTabela = tamanhoAbas-50
				if (alturaTabela<200) alturaTabela = 200
				$("#divGridArquivoEnviado").dxDataGrid("instance").option("height",alturaTabela)
				$("#divGridCategoriaEnviado").dxDataGrid("instance").option("height",alturaTabela)
				
				//
			}
			
			function montaTela(){
				// Monta o LoadPanel
				loadPanel = $("#loadpanel").dxLoadPanel({
			        visible: true,
			        showIndicator: true,
			        showPane: true,
			        shading: true,
			        shadingColor:"rgba(255,255,255,.6)",
			        closeOnOutsideClick: false,
			    }).dxLoadPanel("instance");

				// Monta toolbar
				$("#toolbar").dxToolbar({
					items: [{
				    	location: "after",
				        widget: "dxButton",
				        options: {
					        elementAttr: {
						      id: "botaoSalvar"  
					        },
				            icon: "save",
				            hint: "Salvar os Dados",
				            text: "Salvar",
				            type: "default",
				            stylingMode: "contained",
				            onClick: function () {
								salvarDados()
				            }
				        }
				    }, {
				        location: "after",
				        widget: "dxButton",
				        options: {
				            icon: "fa fa-eraser",
				            hint: "Limpar os Campos",
				            type: "default",
							text: "Limpar",
				            stylingMode: "contained",
				            onClick: function () {
								if ($("#divForm").dxForm("instance").option("formData").tabela!=undefined){
									$("#divForm").dxForm("instance").updateData("tabela","")
								}else{
					            	carregaTabela("")
								}
				            }
				        }
				    }]
				})

				// Monta formulário principal
				$("#divForm").dxForm({
				    activeStateEnabled: true,
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 60
				    },
				    onContentReady: function (){
						montaAbas()
					},
				    alignItemLabels: false,
				    alignItemLabelsInAllGroups: false,
				    items: [{
				        itemType: "group",
				        items: [{
	       			        cssClass: "first-group",
				            dataField: "tabela",
						    label		: {
							    alignment: "right",
							    text	: "Tabela Comercial"
						    },
						    editorType	: "dxSelectBox",
							editorOptions: {
								dataSource: dataSourceTabela,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
								searchEnabled: true,
		                        width: "470px",
		                        onValueChanged: function(e){
			                        carregaTabela(e.value)
			                    },
			                	buttons: ["dropDown",{
				                    name: "search",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "search",
				                        onClick: function() {
					                        abrePesquisaTabela()
				                        }
				                    }
			                	},{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "help",
				                        ajuda: "Selecione a tabela comercial<br><br><i>Tipo de campo: Cadastro de tabelas comerciais</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
			                }				            
				        },{
				            itemType: "tabbed",
				            cssClass	: "first-group",
				            name: "abas",
				            tabPanelOptions: {
				                deferRendering: false,
				                onOptionChanged: function(e){
					                if (e.name=="selectedItem"&&e.value){
					                	if (e.value.title=="Itens da Tabela Comercial"){
					                		dataSourceGridArquivo.reload()
					                	}
					                	
					                }
				                }
				            },
				            tabs: [{
				                title: "Geral",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divGeral'>")
				                    }
				                }],
				            }, {
				                title: "Categorias da Tabela Comercial",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divCategorias'>")
				                    }
				                }],
				            }, {
				                title: "Itens da Tabela Comercial",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divTabela'>")
				                    }
				                }],
				            }, {
				                title: "Auditoria",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divControle'>")
				                    }
				                }]
				            }]
				        }]
				    }]
				})
			}			
			// Abre popup para pesquisar por organizações
			function abrePesquisaTabela(){
				 popupOptions = {
			        width: "90%",
			        height: "90%",
			        showTitle: true,
			        title: "Pesquisa Tabelas Comerciais",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
				preparaPesquisaTabelas()
			}		
			
			function preparaPesquisaTabelas(){
		        $("#pesquisaPopup").dxDataGrid({
			        columns:[{
						dataField	: "CodigodaTabela",
						caption		: "Código",
						width		: "60px"
				   	},{
						dataField	: "Nome",
						caption		: "Nome",
						width		: "180px"
				   	},{
						dataField	: "Descricao",
						caption		: "Descrição"
				   	},{
						dataField	: "tipoTabela",
						caption		: "Tipo de Tabela",
						width		: "180px"
				   	},{
						dataField	: "unidadeMonetaria",
						caption		: "Unidade Monetária",
						width		: "180px"
				   	},{
						dataField	: "casasDecimais",
						caption		: "Casas Decimais",
						width		: "180px"
				   	},{
						dataField	: "Ativo",
						caption		: "Situação",
						width		: "120px"
				   	}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		var deferred = $.Deferred()
				            $.getJSON(urlPreparacao,{
	        	            	method	:"pesquisaTabelas",
	        	            	filter	: JSON.stringify(args.filter),
	        	            	sort	: JSON.stringify(args.sort),
	        	            	take	: args.take,
	        	            	skip	: args.skip,
	        	            	searchValue:args.searchValue
		        	    	},function(result){
								deferred.resolve(
									result.data, {
										totalCount: result.totalCount
									});
							});
							return deferred.promise();
	    	    		}	
	    			}),
	    			remoteOperations	: true,
		    		selection: { mode: "single" },
					filterRow: { visible: true },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 25 },
					pager: {
						showInfo				: true,
						showNavigationButtons 	: true,
			            showPageSizeSelector	: true,
	        		},		
					height: "100%",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							$("#divForm").dxForm("instance").updateData("tabela",selectedItems.selectedRowKeys[0].CodigodaTabela)
							$("#openPopup").dxPopup("instance").hide()
						}
					}
				}).dxDataGrid("instance")
			}
			
			function carregaTabela(codigo){
				if (flVoltaCodigo) {
					flVoltaCodigo=0
					return
				}
				if (alterado){
					var result = DevExpress.ui.dialog.confirm("Há dados não salvos. Deseja prosseguir?", "Dados não salvos");
				    result.done(function(dialogResult) {
				        if (!dialogResult){
					        flVoltaCodigo=1
					        $("#divForm").dxForm("instance").updateData("tabela",codRegraGlobal)
					        return
						}
						carregaTabela2(codigo)
				    })
				    result.fail(function(){
				        flVoltaCodigo=1
				        $("#divForm").dxForm("instance").updateData("tabela",codRegraGlobal)
				        return
					})
				}else{
					carregaTabela2(codigo)
				}
			}

			
			function carregaTabela2(codigo){
				loadPanel.show()
				codRegraGlobal = codigo
				$.getJSON(urlPreparacao,{
                    method:"recTabela",
                    codigo: codigo
                },function(retorno){
	                if (retorno.formGeral.xClienteTabela != "") {
		                retorno.formGeral.clienteTabela = retorno.formGeral.xClienteTabela.split(";")
	                }
	                carregarDados = 1
	                tipoTabelaAnt=""
	                unidadeMonetariaAnt=""
	                casasDecimaisAnt=""
	                linhasGrid=0
	                dataSourceVersaoTabela.reload()
	                $("#divGeral").dxForm("instance").resetValues()
	                $("#divGeral").dxForm("instance").option("formData",retorno.formGeral)
	                $("#divTabela").dxForm("instance").option("formData",retorno.formTabela)
	                $("#divControle").dxForm("instance").option("formData",retorno.formControle)
	                tipoTabelaAnt 		= retorno.formTabela.tipoTabela
	                unidadeMonetariaAnt	= retorno.formTabela.unidadeMonetaria
	                casasDecimaisAnt 	= retorno.formTabela.casasDecimais
	                dataSourceTabela.reload()
	                montaGridArquivoEnviado(0)
	                dataSourceGridArquivo.reload()
	                montaGridCategoriaEnviado()
	                dataSourceGridCategorias.reload()
					carregarDados = 0
					campoAlterado(0)
	                loadPanel.hide()
	            });
			}
			
			function carregaDataSources(){
				dataSourceTabela = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
						loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getTabelas",
	                        	skip:args.skip,
	                        	take:args.take,
	                        	filter:JSON.stringify(args.filter),
	                        	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        

				dataSourceVersaoTabela = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getVersaoTabela"
		                });
		                }
		            })
		        })		        

				dataSourceTipoTabela = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "TIPOSTABELACOMERCIAL"
		                });
		                }
		            })
		        })		        
				dataSourceUnidadeMonetaria = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "UNIDMONETARIATABELACOMERCIAL",
	    	            	showKey	: 1
		                });
		                }
		            })
		        })		        
 
 				dataSourceOrganizacao = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
						loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getOrganizacao"
			                });
		                }
		            })
		        })		        

				dataSourceGridArquivo = new DevExpress.data.DataSource({
					requireTotalCount: true,
		            store: new DevExpress.data.CustomStore({
	                	insert: function(args){
		                	campoAlterado(1)		                	
	                    	var dados = {}
	                    	if (args.valor!=undefined){dados.valor = args.valor}
	                    	if (args.codigo!=undefined){dados.codigo = args.codigo}
	                    	if (args.descricao!=undefined){dados.descricao = args.descricao}
	                    	if (args.categoria!=undefined){dados.categoria = args.categoria}
	                    	if (args.itensCobr!=undefined){dados.itensCobr = args.itensCobr}
	                    	$.get(urlPreparacao,{
		    	            	method	:"salvaTabelaComercial",
		    	            	versao	: $("#divTabela").dxForm("instance").option("formData").versaoTabela,
		    	            	dados	: JSON.stringify(dados)
			                },function(rs){});
		               	},
	                	loadMode: "raw",
		            	load: function(args) {
			            	linhasGrid = 0
	                    	return $.getJSON(urlPreparacao,{
		    	            	method	:"listTabelaComercial",
		    	            	versao	: $("#divTabela").dxForm("instance").option("formData").versaoTabela
			                },function(retorno){
				                linhasGrid = retorno.length
		    	            });
		        	    },
		        	    remove: function(e){
			        	    campoAlterado(1)		                	
	                    	$.getJSON(urlPreparacao,{
		    	            	method	:"removeTabelaComercial",
		    	            	versao	: $("#divTabela").dxForm("instance").option("formData").versaoTabela,
		    	            	codigo	: e.sequencia
			                });
			        	},
		        	    update: function(oldV,newV){
			        	    campoAlterado(1)		                	
	                    	var dados = oldV
	                    	if (newV.valor!=undefined){dados.valor = newV.valor}
	                    	if (newV.codigo!=undefined){dados.codigo = newV.codigo}
	                    	if (newV.descricao!=undefined){dados.descricao = newV.descricao}
	                    	if (newV.categoria!=undefined){dados.categoria = newV.categoria}
	                    	if (newV.itensCobr!=undefined){dados.itensCobr = newV.itensCobr}
	                    	$.getJSON(urlPreparacao,{
		    	            	method	:"salvaTabelaComercial",
		    	            	versao	: $("#divTabela").dxForm("instance").option("formData").versaoTabela,
		    	            	dados	: JSON.stringify(dados)
			                });
			        	}
		            })
		        })		        
				dataSourceGridCategorias = new DevExpress.data.DataSource({
					requireTotalCount: true,
		            store: new DevExpress.data.CustomStore({
	                	insert: function(args){
							campoAlterado(1)		                	
	                    	var dados = {}
	                    	if (args.codigo!=undefined){dados.codigo = args.codigo}
	                    	if (args.descricao!=undefined){dados.descricao = args.descricao}
	                    	if (args.categoriaPai!=undefined){dados.categoriaPai = args.categoriaPai}
	                    	$.getJSON(urlPreparacao,{
		    	            	method	:"salvaTabelaCategorias",
		    	            	dados	: JSON.stringify(dados)
			                });
		               	},
	                	loadMode: "raw",
		            	load: function(args) {
			            	linhasGrid = 0
	                    	return $.getJSON(urlPreparacao,{
		    	            	method	:"listTabelaCategorias"
			                },function(retorno){
				                linhasGrid = retorno.length
		    	            });
		        	    },
		        	    remove: function(e){
			        	    campoAlterado(1)		                	
	                    	$.getJSON(urlPreparacao,{
		    	            	method	:"removeTabelaCategorias",
		    	            	codigo	: e.codigo
			                });
			        	},
		        	    update: function(oldV,newV){
			        	    campoAlterado(1)		                	
	                    	var dados = oldV
	                    	if (newV.codigo!=undefined){dados.codigo = newV.codigo}
	                    	if (newV.descricao!=undefined){dados.descricao = newV.descricao}
	                    	if (newV.categoriaPai!=undefined){dados.categoriaPai = newV.categoriaPai}
	                    	$.getJSON(urlPreparacao,{
		    	            	method	:"salvaTabelaCategorias",
		    	            	codigoOld: oldV.codigo,
		    	            	dados	: JSON.stringify(dados)
			                });
			        	}
		            })
		        })		        
			

			}

			
			// Salva os dados da aba "Geral"
			function salvarDados(){
				var codTabela		= $("#divForm").dxForm("instance").option("formData").tabela
				var abaGeral		= $("#divGeral").dxForm("instance")
				var abaTabela		= $("#divTabela").dxForm("instance")
				var abaCategoria	= $("#divCategoria").dxForm("instance")
				var msg = "",cont=0
				if (!abaGeral.validate().isValid){
					msg = "geral"
					cont++
				}
				if (!abaTabela.validate().isValid){
					msg = "conteúdo da tabela comercial"
					cont++
				}
				if (msg!=""){
		        	DevExpress.ui.notify("Há campos pendentes de preenchimento na"+(cont>1?"s":"")+" aba"+(cont>1?"s":"")+": "+msg, "warning", 4000);
			        return
				}
				$.post(urlPreparacao,{
					method			: "salvar",
					codTabela		: codTabela,
					camposGeral		: JSON.stringify(abaGeral.option("formData")),
					camposTabela	: JSON.stringify(abaTabela.option("formData"))
				},function(retorno){
					DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
					if (retorno.status==1){
						campoAlterado(0)
						dataSourceTabela.reload()
						if ($("#divForm").dxForm("instance").option("formData").tabela==retorno.codTabela){
							carregaTabela(retorno.codTabela)
						}else{
							$("#divForm").dxForm("instance").updateData("tabela",retorno.codTabela)
						}
					}
				},"json")
			}			
			
			// Monta abas - chamado automaticamente ao término da montagem do form 'divForm'
			function montaAbas(){
				montaAbaGeral()
				montaAbaCategoria()
				montaAbaTabela()
				montaAbaControle()
			}
			
			
			// Monta aba 'Geral'
			function montaAbaGeral(){
				$("#divGeral").dxForm({
				    activeStateEnabled	: true,
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    height: function () {
				        return window.innerHeight - 170
				    },
				    onFieldDataChanged: function(e){
					    campoAlterado(1)
				    },
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
					scrollingEnabled	: true,
				    items		: [{
					    itemType	: "group",
					    cssClass	: "first-group",
					    colCount	: 12,
						items 	: [{
							colSpan		: 10,
						    dataField	:	"nome",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Nome"
						    },
						    editorOptions: {
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "help",
				                        ajuda: "Informe o nome da tabela comercial<br><br><i>Tipo de campo: Alfanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
					    },{
						    colSpan		: 2,
						    dataField	:	"situacao",
						    label		: {
							    alignment: "right",
							    text	: "Ativo?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
							    value	: 1
						    }
					    },{
						    colSpan		: 12,
						    dataField	: "descricao",
						    label		: {
							    alignment: "right",
							    text	: "Descrição"
						    },
						    editorOptions: {
								buttons: [{
									    name	: "btnHelp",
					                    location: "after",
					                    options: {
					                        stylingMode: "text",
					                        icon: "help",
					                        ajuda: "Informe a descrição da tabela comercial<br><br><i>Tipo de campo: Alfanumérico</i>",
					                        onClick: function(e) {
						                        exibeHelp(e)
					                        }
					                    }
				                	}]						    
						    }
					    },{
						    colSpan		: 12,
						    dataField	: "clienteTabela",
						    label		: {
							    alignment: "left",
							    text	: "Cliente da Tabela"
						    },
						    editorType	: "dxTagBox",
							editorOptions:{
								dataSource: dataSourceOrganizacao,
								displayExpr: "descricao",
								itemTemplate: function (data, itemIndex, element) {
									var espacos="";for (var i=0;i<data.nivel;i++){ espacos = espacos+"&nbsp; "}
									return element.append("<div>"+espacos+data.descricao+"<div>")
								},
								searchEnabled: true,
			    		        valueExpr: "codigo",
			    		        showClearButton	: true,
							    buttons: ['clear',{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "help",
				                        ajuda: "Informe a organização que terá acesso a essa tabela comercial durante o acordo comercial.<br>Caso não seja preenchido nenhum cliente, a tabela poderá ser utilizada por todos os clientes<br><br><i>Tipo de campo: Cadastro de Organizações</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	},"dropDown"]
							}
					    }]
				    }]
				})
			}

			// Monta aba 'Categoria da tabela comercial'
			function montaAbaCategoria(){
				$("#divCategorias").dxForm({
				    activeStateEnabled	: true,
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    height: function () {
				        return window.innerHeight - 170
				    },
				    minColWidth: 50,
				    onContentReady	: function(){
						montaGridCategoriaEnviado()
					},
				    screenByWidth: function (width) {
				        return "lg";
				    },
					scrollingEnabled	: true,
				    items		: [{
					    itemType	: "group",
					    cssClass	: "first-group",
					    name		: "principal",
						items 	: [{
						    itemType	:	"button",
							horizontalAlignment: "left",
				            buttonOptions: {
						        stylingMode: "outlined",
						        icon: "upload",
					    	    type: "normal",
					        	text: "Enviar Tabela de Categorias Comerciais",
					        	hint: "Realizar Upload da Planilha de Categorias Comerciais",
					        	onClick: function() {
					            	importarArquivo('033', "montaGridCategoriaEnviado();dataSourceGridArquivo.reload();");
					        	}
					        }
					    },{
						    template	: "<div id='divGridCategoriaEnviado'>",
						}]
				    }]
				})
			}

			function montaGridCategoriaEnviado(){
				campoAlterado(1)
				$("#divGridCategoriaEnviado").dxDataGrid({
					allowColumnReordering	: true,
					allowColumnResizing		: true,
					export: {
						enabled: true
					},
					cellHintEnabled		: true,
					columnChooser: {
						enabled: false
					},
					dataSource: dataSourceGridCategorias,
	        		editing: {
			            mode: "cell",
			            allowAdding		: true,
			            allowDeleting	: true,
			            allowUpdating	: true,
	                    useIcons		: true,
			        },					
					filterRow: { visible: true },
					groupPanel: {
						visible: false
					},
					headerFilter: {
						visible:true
					},		
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 25 },
					pager: {
						showInfo				: true,
						showNavigationButtons 	: true,
			            showPageSizeSelector	: true,
	        		},		
					rowAlternationEnabled: true,
					scrolling:{ showScrollbar: 'always',useNative : false},
					selection: { mode: "single" },
					showBorders: true,
					showRowLines: true,
					sorting:{mode:'single'},
					width: "100%",
					wordWrapEnabled:true,
				})				
			}

			// Monta aba 'Conteúdo da tabela comercial'
			function montaAbaTabela(){
				$("#divTabela").dxForm({
				    activeStateEnabled	: true,
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    height: function () {
				        return window.innerHeight - 170
				    },
				    minColWidth: 50,
				    onContentReady	: function(){
						montaGridArquivoEnviado(0)
					},
				    onFieldDataChanged: function(e){
					    if (e.dataField=="versaoTabela"){
						    dataSourceGridArquivo.reload()
							$.getJSON(urlPreparacao,{
								method	: "recTipIntervalo",
								versao	: e.value
							},function(retorno){
								if (retorno.status==0){
									DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
									return
								}
								$("#divTabela").dxForm("instance").updateData("situacao",retorno.situacao)
								campoAlterado(1)
								validade = $("#divTabela").dxForm("instance").getEditor("validade")
								if (retorno.comValidade){
									validade.option("type","danger")
								}else{
									validade.option("type","normal")
								}
								validade.option("hint",retorno.msgRetorno)
								$("#openPopup").dxPopup("hide")
							})
						    return
					    }
					    campoAlterado(1)
					    if (e.dataField=="tipoTabela"){
					    	if (e.value=="2"){
						    	if (!e.component.itemOption("principal.opcoesTabelaComercial.unidadeMonetaria").visible){
							    	e.component.beginUpdate()
					    			e.component.itemOption("principal.opcoesTabelaComercial.unidadeMonetaria","visible",true)
					    			e.component.itemOption("principal.opcoesTabelaComercial.casasDecimais","visible",true)
					    			e.component.endUpdate()
					    			montaGridArquivoEnviado(0)
						    	}
					    	}else{
						    	if (e.component.itemOption("principal.opcoesTabelaComercial.unidadeMonetaria").visible){
							    	e.component.beginUpdate()
					    			e.component.itemOption("principal.opcoesTabelaComercial.unidadeMonetaria","visible",false)
					    			e.component.itemOption("principal.opcoesTabelaComercial.casasDecimais","visible",false)
					    			e.component.endUpdate()
					    			montaGridArquivoEnviado(0)
						    	}
					    	}
					    }
					    if (linhasGrid>0){
						    if (e.dataField=="tipoTabela"&&e.value!=tipoTabelaAnt&&tipoTabelaAnt!=""&&tipoTabelaAnt!=undefined){
								confirmaMudancaCampo(e.dataField,tipoTabelaAnt)
						    }else if (e.dataField=="unidadeMonetaria"){
							//    confirmaMudancaCampo(e.dataField,unidadeMonetariaAnt)
								montaGridArquivoEnviado(0)
						    }else if (e.dataField=="casasDecimais"){
							//    confirmaMudancaCampo(e.dataField,casasDecimaisAnt)
								montaGridArquivoEnviado(0)
						    }
						    if (tipoTabelaAnt==""){
							    limpaTemporaria()
						    }
					    }
					    
					    
				    },
				    screenByWidth: function (width) {
				        return "lg";
				    },
					scrollingEnabled	: true,
				    items		: [{
					    itemType	: "group",
					    cssClass	: "first-group",
					    colCount	: 12,
					    name		: "principal",
						items 	: [{
						    colSpan		: 8,
						    dataField	: "versaoTabela",
						    label		: {
							    alignment: "right",
							    text	: "Versão da Tabela"
						    },
						    editorType	: "dxSelectBox",
						    validationRules: [{ type: "required" }],        
						    editorOptions : {
							    dataSource	: dataSourceVersaoTabela,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "help",
				                        ajuda: "Informe a versão da tabela comercial<br><br><i>Tipo de campo: Versões Importadas</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	},"dropDown"]
						    }
					    },{
						    dataField	:	"situacao",
						    label		: {
							    alignment: "right",
							    text	: "Ativo?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
							    value	: 1,
							    disabled: true,
						    }
					    },{
						    itemType	: "button",
						    name		: "validade",
							horizontalAlignment: "left",
					    	buttonOptions: {
						    	type	: "normal",
						    	icon	: "clock",
						    	hint	: "Sempre",
						    	onClick : function(){
							    	ativaIntervalo()
							    }
					    	}
						},{
							colSpan		: 2,
						    itemType	:	"button",
							horizontalAlignment: "left",
				            buttonOptions: {
						        stylingMode: "outlined",
						        icon: "upload",
						        type: "normal",
						        text: "Enviar Tabela Comercial",
						        hint: "Realizar Upload da Planilha",
						        onClick: function() {
							        var formTabela = $("#divTabela").dxForm("instance")
							        if (formTabela.option("formData").tipoTabela==undefined||formTabela.option("formData").tipoTabela==""){
								        DevExpress.ui.notify("Informe o tipo de tabela", "warning", 4000);
								        return
							        }
							        if (formTabela.option("formData").tipoTabela=="1"){
						            	importarArquivo('031', "montaGridArquivoEnviado(1);dataSourceGridArquivo.reload();");
							        }else{
								        importarArquivo('032', "montaGridArquivoEnviado(1);dataSourceGridArquivo.reload();");
							        }
						            return
						        }
				            }								
					    },{
						    colSpan		: 6,
						    dataField	: "tipoTabela",
						    label		: {
							    alignment: "right",
							    text	: "Tipo de Tabela"
						    },
						    editorType	: "dxSelectBox",
						    validationRules: [{ type: "required" }],        
						    editorOptions : {
							    dataSource	: dataSourceTipoTabela,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "help",
				                        ajuda: "Informe o tipo da tabela comercial<br>&nbsp;- Cadastro: Tabela que será utilizada como referência em regras comerciais para troca de código e/ou descrição do item<br>&nbsp;- Valor: Tabela com valores base a serem cobrados<br><br><i>Tipo de campo: Cadastro ou Valor</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	},"dropDown"]
						    }
					    },{
						    itemType	: "group",
						    colSpan		: 6,
						    colCount	: 6,
	   					    name		: "opcoesTabelaComercial",
						    items		: [{
							    visible		: false,
							    colSpan		: 4,
							    cssClass	: "cadAux",
							    dataField	: "unidadeMonetaria",
							    label		: {
								    alignment: "right",
								    text	: "Unidade Monetária"
							    },
							    editorType	: "dxSelectBox",
							    validationRules: [{ type: "required" }],        
							    editorOptions : {
								    dataSource	: dataSourceUnidadeMonetaria,
				    		        valueExpr: "codigo", 
									displayExpr: "descricao",
								    buttons: [{
									    name	: "btnHelp",
					                    location: "after",
					                    options: {
					                        stylingMode: "text",
					                        icon: "help",
					                        ajuda: "Informe a unidade monetária dos valores desta tabela<br><br><i>Tipo de campo: Cadastro de Paramêtros do Sistema (UNIDMONETARIATABELACOMERCIAL)</i>",
					                        onClick: function(e) {
						                        exibeHelp(e)
					                        }
					                    }
				                	},"dropDown"]  
							    }
						    },{
							    visible		: false,
							    colSpan		: 2,
							    dataField	: "casasDecimais",
							    label		: {
								    alignment: "right",
								    text	: "Casas Decimais"
							    },
							    editorType	: "dxNumberBox",
							    editorOptions: {
								    min:0,
								    max:10,
								    buttons: [{
									    name	: "btnHelp",
					                    location: "after",
					                    options: {
					                        stylingMode: "text",
					                        icon: "help",
					                        ajuda: "Informe o número de casas decimais dos itens desta tabela comercial<br><br><i>Tipo de campo: Numérico</i>",
					                        onClick: function(e) {
						                        exibeHelp(e)
					                        }
					                    }
				                	}]
							    }
						    }]
					    },{
						    template	: "<div id='divGridArquivoEnviado'>",
						    colSpan		: 12,
					    }]
				    }]
				})
			}
			
			function exibeHelp(e){
				texto = e.component.option("ajuda")
				$("#popover").dxPopover({
			        target: e.event.target,
			        contentTemplate: function(){
				        return $("<div />").append("<p style='text-align:left'>"+texto+"</p>")
			        }
			    });
	        	$("#popover").dxPopover("show");
			}		

			function ativaIntervalo(){
		  		$.getJSON(urlPreparacao,{
			  		method:"recIntervaloAtual",
			  		versao	: $("#divTabela").dxForm("instance").option("formData").versaoTabela
			  	},function(resp){
					popupOptions = {
				        width: "700px",
				        height: "300px",
				        showTitle: true,
				        title: "Alterar Vigência da Regra",
				        visible: true,
				        dragEnabled: false,
				        closeOnOutsideClick: false,
						toolbarItems: [{
							location:"before",
							toolbar :"top",
						},{
							widget: "dxButton",
							location:"before",
							toolbar:"bottom",
							options: { 
								width	: "130px",
								type	: "default",
								icon	: "close",
	                			text	: "Fechar", 
	                			onClick : function(){
		                			$("#openPopup").dxPopup("hide")
		                		}
							}
						},{
							widget: "dxButton",
							location:"after",
							toolbar:"bottom",
							options: { 
								visible	: true,
								width	: "130px",
								type	: "default",
								icon	: "check",
	                			text	: "Confirmar", 
	                			onClick : function(){
		                			intervalo = $("#pesquisaPopup").dxForm("instance")
		                			if (!intervalo.validate().isValid){
			                			DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
			                			return
		                			}
									$.post(urlPreparacao,{
										method	: "confirmaIntervalo",
										campos	: JSON.stringify(intervalo.option("formData")),
										versao	: $("#divTabela").dxForm("instance").option("formData").versaoTabela
									},function(retorno){
										if (retorno.status==0){
											DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
											return
										}
										campoAlterado(1)
										$("#divTabela").dxForm("instance").updateData("situacao",retorno.situacao)
										validade = $("#divTabela").dxForm("instance").getEditor("validade")
										if (retorno.comValidade){
											validade.option("type","danger")
										}else{
											validade.option("type","normal")
										}
										validade.option("hint",retorno.msgRetorno)
										$("#openPopup").dxPopup("hide")
									},'json')
		                		}
							}
						}]			        
				        
				    }	
				    $("#openPopup").remove()
				    $(document.body).append("<div id='openPopup'></div>")
		   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
					$("#openPopup").dxPopup(popupOptions)
					$("#pesquisaPopup").dxForm({
						scrollingEnabled	: true,
					    activeStateEnabled	: true,
					    screenByWidth		: function (width) {
					        return "lg";
					    },
					    formData	: resp.formData,
					    onFieldDataChanged: function(e){
						    if (e.value==undefined) return
						    if (e.dataField=="validoDe"){
							    e.component.getEditor("dataDe").option("disabled",!e.value)
						    }
						    if (e.dataField=="validoAte"){
								e.component.getEditor("dataAte").option("disabled",!e.value)
						    }
					    },
					    alignItemLabels: true,
					    alignItemLabelsInAllGroups: true,
					    colCount	: 2,
					    onContentReady: function(){
						    montaGridVigencias()
					    },
					    items		: [{
						    itemType	: "group",
						    items		: [{
							    dataField	: "validoDe",
							    label		: {
								    text	: "Válido de"
							    },
							    validationRules: [{ type: "required" }],        
							    editorType	: "dxRadioGroup",
							    editorOptions: {
								    dataSource : [{id:0,text:"Sempre"},{id:1,text:"Data"}],
								    valueExpr	: "id",
								    displayExpr : "text"
							    }
						    },{
							    dataField	: "dataDe",
							    editorType	: "dxDateBox",
							    label		: {
								    visible	: false
							    },
							    validationRules: [{ type: "required" }],        
							    editorOptions: {
								    disabled: !resp.formData.validoDe,
	    		                	placeholder:"Informe a data/hora inicial...",
								    type	: "datetime",
								    openOnFieldClick:true,
								    showAnalogClock:false,
								    showClearButton: true,
								    onValueChanged: function (e) {
					 					var form = $("#pesquisaPopup").dxForm("instance");
					 					if (e.value == "" || e.value == null) {
	            							form.getEditor("dataAte").option("min", null);
					 					}else{
	            							form.getEditor("dataAte").option("min", e.value);
					 					}
	        						}

							    }
						    }]
					    },{
						    itemType	: "group",
						    items		: [{
							    dataField	: "validoAte",
							    label		: {
								    text	: "Até"
							    },
							    validationRules: [{ type: "required" }],        
							    editorType	: "dxRadioGroup",
							    editorOptions: {
								    dataSource : [{id:0,text:"Sempre"},{id:1,text:"Data"}],
								    valueExpr	: "id",
								    displayExpr : "text"
							    }
						    },{
							    dataField	: "dataAte",
							    editorType	: "dxDateBox",
							    label		: {
								    visible	: false
							    },
							    validationRules: [{ type: "required" }],        
							    editorOptions: {
								    disabled: !resp.formData.validoAte,
	    		                	placeholder:"Informe a data/hora final...",
								    type	: "datetime",
								    openOnFieldClick:true,
								    showAnalogClock:false,
								    showClearButton: true,
								    onValueChanged: function (e) {
					 					var form = $("#pesquisaPopup").dxForm("instance");
					 					if (e.value == "" || e.value == null) {
	            							form.getEditor("dataDe").option("max", null);
					 					}else{
	            							form.getEditor("dataDe").option("max", e.value);
					 					}
	        						}
							    }
						    }]
					    },{
						    colSpan	: 2,
						    template: "<div id='divGridVigencia'>teste</div>"
					    }]
					})
			  	})
			}		
			
			function montaGridVigencias(){
				$("#divGridVigencia").dxDataGrid({
					columns: [{
						dataField	: "periodo",
						caption		: "Período",
					},{
						dataField	: "auditoria",
						width		: "300px"
					}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
				            return $.getJSON(urlPreparacao,{
	        	            	method	:"recuperaValidacoes",
	        	            	versao	: $("#divTabela").dxForm("instance").option("formData").versaoTabela
		        	    	});
	    	    		}	
	    			}),
		    		selection: { mode: "single" },
					hoverStateEnabled: true,
					paging: { enabled: false},
					height: "115px",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: false
			        }
				})
			}
				
			//
			// Exibe confirmação ao alterar um campo necessário para a importação dos dados
			function confirmaMudancaCampo(campo,valor){
				var resp = DevExpress.ui.dialog.confirm("Alterando este campo, será necessário reimportar o arquivo. Confirma?", "Reimportar arquivo?");
			    resp.done(function(dialogResult) {
					if (!dialogResult){
						$("#divTabela").dxForm("instance").updateData(campo,valor)
						return
					}
					limpaTemporaria()
			    })
			    resp.fail(function(dialogResult) {
					if (!dialogResult){
						$("#divTabela").dxForm("instance").updateData(campo,valor)
						return
					}
			    })
			}
			
			// Limpa temporária dos itens importados
			function limpaTemporaria(){
				tipoTabelaAnt="",unidadeMonetariaAnt="",casasDecimaisAnt=""
				$.getJSON(urlPreparacao,{
    	        	method	:"limpaTemporaria"
	            },function(){
		        	dataSourceGridArquivo.reload();
		        });
			}
			// Monta grid 'Arquivo Enviado'
			function montaGridArquivoEnviado(ultimo){
				dataSourceVersaoTabela.reload()
				if (ultimo){
					ultimaVersao = #server(VAR.CSP.FATTabelaComercial.recUltimaVersao())#
					if (ultimaVersao){
						$("#divTabela").dxForm("instance").updateData("versaoTabela",ultimaVersao*1)
					}
				}
				campoAlterado(1)
				/*$(".cadAux .dx-field-item-label-text")
					.css("cursor","pointer")
					.click(function(){
						abreCadastro("unidadeMonetaria")
					})*/
				var columns = []
				var linha = {};linha.dataField = "codigo";linha.caption="Código";linha.width="110px";columns.push(linha)
				var linha = {};linha.dataField = "descricao";linha.caption="Descrição";columns.push(linha)
				//
				var linha = {};
				linha.dataField = "categoria";linha.caption="Categoria";linha.width="230px";
				linha.cellTemplate = function (container, options) {
					if (options.value==undefined) return
					if (options.row.modified||options.row.isNewRow){
						container.append(#server(VAR.CSP.FATTabelaComercial.recDescricaoCategoria(options.value))#)
					}else{
						container.append(options.row.data.categoriaExterno)
					}
			  	}
				columns.push(linha)
				var formTabela = $("#divTabela").dxForm("instance")
				if (formTabela.option("formData").tipoTabela==2){
					var linha = {};linha.dataField = "valor";linha.caption="Valor";linha.dataType="number";linha.width="100px";
					var casasDecimais = formTabela.option("formData").casasDecimais
					var casas=""
					for (i=1;i<=casasDecimais;i++){
						casas = casas+"0"
					}
					if (casas!=""){
						casas = "."+casas
					}
					linha.format = formTabela.option("formData").unidadeMonetaria+" #,##0"+casas
					columns.push(linha)
				}
				var linha = {};
				linha.dataField = "itensCobr";linha.caption="Itens Cobráveis";
				linha.cellTemplate = function (container, options) {
					if (options.value==undefined) return
					if (options.row.modified||options.row.isNewRow){
						desc = #server(VAR.CSP.FATTabelaComercial.recDescricaoINART(options.value,0))#
						container.append(desc)
					}else{
						container.append(options.row.data.itensCobrExterno)
					}
			  	}
				columns.push(linha)
				//
				$("#divGridArquivoEnviado").dxDataGrid({
					allowColumnReordering	: true,
					allowColumnResizing		: true,
					export: {
						enabled: true
					},
					cellHintEnabled		: true,
					columnChooser: {
						enabled: false
					},
					onEditorPreparing: function(e,a) {
						if (e.parentType == "dataRow" && e.dataField == "categoria") {
							e.editorName = "dxSelectBox"; 
							e.editorOptions.dataSource =  	new DevExpress.data.DataSource({
		            			store: new DevExpress.data.CustomStore({
			            			loadMode: "raw",
		            				load: function(args) {
	                    				return $.getJSON(urlPreparacao,{
	    	            					method	:"getCategoria",
		                				});
		                			}
		            			})
		        			})	    
							e.editorOptions.displayExpr = "descricao";
							e.editorOptions.valueExpr = "codigo";
							e.editorOptions.searchEnabled = true;
						}
						if (e.parentType == "dataRow" && e.dataField == "itensCobr") {
							e.editorName = "dxTagBox"; 
							valores = []
							if (e.row.data.itensCobr&&e.row.data.itensCobr.length>0){
								valores = e.row.data.itensCobr.split(";")
							}
							e.editorOptions.value = valores;
							
							e.editorOptions.dataSource =  new DevExpress.data.DataSource({
											store: new DevExpress.data.CustomStore({
			            				load: function(args) {
	                    				return $.getJSON(urlPreparacao,{
	    	            					method	:"getINART",
	    	            					searchValue:args.searchValue,
	    	            					filter	: JSON.stringify(args.filter),
				        	            	take	: args.take,
				        	            	skip	: args.skip,
		                				});
		                			}
		            			})
		        			})	
		        			e.editorOptions.itemTemplate = function (data, itemIndex, element) {
								return element.append("<div style='color:"+(data.status==1?"red":"")+"'>"+data.descricao+"<div>")
							};   
							e.editorOptions.tagTemplate = function (itemData, tagElement) {  
								return $("<div />")
									.addClass("dx-tag-content")
									.append(
										$("<span style='color:"+(itemData.status==1?"red":"")+"' />").text(itemData.descricao),
										$("<div />").addClass("dx-tag-remove-button")
									);
				            },   
							e.editorOptions.displayExpr = "descricao";
							e.editorOptions.valueExpr = "codigo";
							e.editorOptions.searchEnabled = true;
							e.editorOptions.onValueChanged = function(arg) {
								valores = arg.value.join(";")
								e.setValue(valores);
							}
						}
					},
					columns:columns,
					dataSource: dataSourceGridArquivo,
	        		editing: {
			            mode: "cell",
			            allowAdding		: true,
			            allowDeleting	: true,
			            allowUpdating	: true,
	                    useIcons		: true,
			        },					
					filterRow: { visible: true },
					groupPanel: {
						visible: false
					},
					headerFilter: {
						visible:true
					},		
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 25 },
					pager: {
						allowedPageSizes: [25, 50, 100, 200],
						showInfo				: true,
						showNavigationButtons 	: true,
			            showPageSizeSelector	: true,
	        		},		
					rowAlternationEnabled: true,
					scrolling:{ showScrollbar: 'always',useNative : false},
					selection: { mode: "single" },
					showBorders: true,
					showRowLines: true,
					sorting:{mode:'single'},
					width: "100%",
					wordWrapEnabled:true,
					height: function () {
				        return window.innerHeight - 250
				    },
				})				
			}
			
			// Monta aba 'Controle'
			function montaAbaControle(){
				$("#divControle").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled	: true,
				    minColWidth			: 50,
				    readOnly			: true,
				    screenByWidth		: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    items		: [{
					    cssClass	: "first-group",
					    itemType	: "group",
						items		: [{
						    dataField	:	"criadoEm",
						    label		: {
							    alignment: "right",
							    text	: "Criado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"criadoPor",
						    label		: {
							    alignment: "right",
							    text	: "Criado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"alteradoEm",
						    label		: {
							    alignment: "right",
							    text	: "Alterado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"alteradoPor",
						    label		: {
							    alignment: "right",
							    text	: "Alterado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						}]
				    }]
				})
			} 
			function campoAlterado(flAlterado){
				if (carregarDados) return
				if (alterado != flAlterado){
					alterado = flAlterado
					if (alterado){
						$("#botaoSalvar").removeClass("dx-button-default").addClass("dx-button-success")
					}else{
						$("#botaoSalvar").removeClass("dx-button-success").addClass("dx-button-default")
					}
				}
			}

		</script>
	</body>
</html>
