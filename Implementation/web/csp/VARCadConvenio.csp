<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 			= $get(%request.Data("YBED", 1))
		set YM 				= $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 			= %request.Application
		set host 			= %request.CgiEnvs("HTTP_HOST")
		set url				= "http://"_host_app

		set URLPreparacao = "VAR.CSP.VARCadConvenio.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLLogin 			= "COMLogin.cls"
		set URLLink 			= "www.cls"

		set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Convênio</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao = '#(URLPreparacao)#';
			var urlSearch			= '#(URLSearch)#';
			var urlLink 			= '#(URLLink)#';
			var YBED 					= '#(YBED)#';
			var YUSER 				= '#(YUSER)#';
			var YLOCATION 		= '#(YLOCATION)#';
			var nomeLocal 		= '#(nomeLocal)#';

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			objToolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "save",
						hint	: "Salvar os Dados",
						type	: "success",
						stylingMode : "contained",
						onClick	: function(){
							var pCodConvenio = objConvenio.option("value");
							var flagForm = objForm.validate().isValid; 
							var flagGeral = objGeral.validate().isValid; 
							if (!flagForm || !flagGeral){
								DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
								return;
							}
							$.getJSON(urlPreparacao,{
								method				: "SalvarDados",
								pCodConvenio	: pCodConvenio,
								pSituacao 		: objForm.getEditor("situacao").option("value"),
								pObjGeral 		: JSON.stringify(objGeral.option("formData"))
							},function(objRetorno){
								console.log(objRetorno)
								if (objRetorno.status==1){
									dataSourceConvenio.reload();
									objConvenio.option("value", objRetorno.codConvenio);
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
								}else{
									DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
								}
							});
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fa fa-eraser",
						hint	: "Limpar os Campos",
						type	: "default",
						stylingMode : "contained",
						onClick	: function(){
							objConvenio.option("value", "");
						}
					}
				}]
			}).dxToolbar("instance")
		
			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) {
					return "lg";
				},
				screenByWidth: function(width) {
					return "lg";
				},
				height:function(){
					return window.innerHeight-60
				},
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colCount: 10,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 7,
						dataField: "convenio",
          	label		: {
							text	: "Convênio"
						},  
						template	: function (data, itemElement) {
							itemElement.append("<div id='divConvenio'/>")
						},
					},{
						colSpan: 2,
						dataField: "situacao",
						label		: {
							text:"Situação",
							alignment: "right"
						},
						editorType: "dxSelectBox",
						validationRules: [{
							type: "required"
						}],
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetWWW101",pDescParametro:"MEDPROVIDERSTA"});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					},{},{
						colSpan: 10,
						cssClass: "second-group",
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
							deferRendering: false,
							animationEnabled: false,
							showNavButtons:true,
							onSelectionChanged: function(e){

							}
						},	
							height:'10px',
							tabs:[{
								title	: "Geral",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divGeral'>")
									}
								}],
							},{
								title	: "Controle",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divControle'>")
									}
								}]
							}]
						}
					]
				}]
			}).dxForm("instance");			
		
			dataSourceConvenio = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlSearch,{
							method						:	"GetConvenio",
							pCodLocal					: args
						});
					},
					load: function(args) {
						return $.getJSON(urlSearch,{
							method						:	"GetConvenio",
							pSkip							:	args.skip,
							pTake							:	args.take,
							pSearchValue			:	args.searchValue
						});
					}
				})
			});
		
			objConvenio = $("#divConvenio").dxSelectBox({
				dataSource: dataSourceConvenio,
				placeholder: "+",
				searchEnabled: true,
				valueExpr: "Codigo", 
				displayExpr: "Nome",
				showClearButton: true,
				onValueChanged: function(e) {
					if (!e.value) {
						objGeral.resetValues();
						objControle.resetValues();
						objForm.getEditor("situacao").option("value", "");
						objPlanoSaude.option("disabled", true);
						dataSourcePlanoSaude.reload();
					}else{
						carregarDados(e.value);
					}
				}
			}).dxSelectBox("instance");

			objGeral = $("#divGeral").dxForm({
				//disabled: true,
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() {
					return window.innerHeight - 200;
				},
				screenByWidth: function(width) {
					return "lg";
				},
				colCount: 2,
				items	: [{
					colCount: 2,
					itemType: "group",
					items: [
						{colSpan: 2, dataField: "nome",
							validationRules: [{
								type: "required"
							}],
							label		: {
								text:"Nome:",
								alignment: "right"
							}
						},
						{colSpan: 2, dataField: "razaoSocial",
							validationRules: [{
								type: "required"
							}],
							label		: {
								text:"Razão Social:",
								alignment: "right"
							}
						},
						{dataField: "cNPJ",
							label		: {
								text:"CNPJ:",
								alignment: "right"
							}
						},
						{dataField: "registroANS",
							label		: {
								text:"Registro ANS:",
								alignment: "right"
							}
						},
						{	colSpan: 2,
							colCount: 2,
							caption: "Contato",
							itemType: "group",
							items: [
								{colSpan: 2, dataField: "contatoNome",
									label		: {
										text:"Nome:",
										alignment: "right"
									}
								},
								{dataField: "contatoCargo",
									label		: {
										text:"Cargo:",
										alignment: "right"
									}
								},
								{dataField: "contatoTelefone",
									label		: {
										text:"Telefone:",
										alignment: "right"
									}
								},
								{colSpan: 2, dataField: "contatoEMail",
									label		: {
										text:"E-mail:",
										alignment: "right"
									}
								}
							]
						}
					]
				},{
					colCount: 2,
					itemType: "group",
					caption: "Endereço",
					items: [
						{colSpan: 2, dataField: "logradouro",
							label		: {
								text:"Logradouro:",
								alignment: "right"
							}
						},
						{dataField: "numero",
							label		: {
								text:"Número:",
								alignment: "right"
							}
						},
						{dataField: "complemento",
							label		: {
								text:"Complemento:",
								alignment: "right"
							}
						},
						{dataField: "bairro",
							label		: {
								text:"Bairro:",
								alignment: "right"
							}
						},
						{dataField: "cidade",
							label		: {
								text:"Cidade:",
								alignment: "right"
							}
						},
						{dataField: "estado",
							label		: {
								text:"Estado:",
								alignment: "right"
							}
						},
						{dataField: "cEP",
							label		: {
								text:"CEP:",
								alignment: "right"
							}
						},
						{colSpan: 2, dataField: "telefone",
							label		: {
								text:"Telefone:",
								alignment: "right"
							}
						},
						{colSpan: 2, dataField: "eMail",
							label		: {
								text:"E-mail:",
								alignment: "right"
							}
						},
					]					
				},{
					colSpan: 2,
					itemType: "group",
					caption: "Plano de Saúde",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPlanoSaude'>")
						}
					}]
				}]
			}).dxForm("instance");

			dataSourcePlanoSaude = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "codigoPlanodeSaude",
		  		loadMode: "raw",   
		  		load: function() {
			  		var pCodConvenio = objConvenio.option("value");
			  		if (pCodConvenio == null) {
				  		var pCodConvenio = "";
			  		}	
		      	return $.getJSON(urlPreparacao,{method:"GetPlanoSaude",pCodConvenio:pCodConvenio});
		  		},
		  		insert: function (values) {
			  		var pCodConvenio = objConvenio.option("value");
		      	if (pCodConvenio == "" || pCodConvenio == "+") {
		      		return;
		      	}
		        objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARCadConvenio.ArmPlanoSaude(pCodConvenio, "", objDados, YBED))#;
		    	},
					update: function (key, values) {
			  		var pCodConvenio = objConvenio.option("value");
		      	if (pCodConvenio == "" || pCodConvenio == "+") {
		      		return;
		      	}
    				var idRow = key;
						objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARCadConvenio.ArmPlanoSaude(pCodConvenio, idRow, objDados, YBED))#;
					}
				})
			});
			
			objPlanoSaude = $("#divPlanoSaude").dxDataGrid({
				dataSource: dataSourcePlanoSaude,
				disabled: true,
				columns: [
					{	dataField: "descricao", caption: "Descrição", alignment: "center"},
					{ dataField: "registroANS", caption: "Registro ANS", alignment: "center"},
					{	dataField: "acomodacaoDesc", caption: "Acomodação", alignment: "center", 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descSituacao = #server(User.Search.PesquisasJson.GetDescricaoVARPARA("TIPOACOMODACAO", value))#;
							objLinha.defaultSetCellValue(rowData, descSituacao);
							rowData.acomodacao = value;	
				  	}
				  },
					{	dataField: "situacaoDesc", caption: "Situação", alignment: "center", 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descSituacao = #server(User.Search.PesquisasJson.GetDescricaoWWW101("MEDPROVIDERSTA", value))#;
							objLinha.defaultSetCellValue(rowData, descSituacao);
							rowData.situacao = value;	
				  	}, 
					},
					{	dataField: "criadoPor", caption: "Criado Por", alignment: "center", allowEditing: 0, visible: 0 },
					{	dataField: "criadoEm", caption: "Criado Em", alignment: "center", allowEditing: 0, visible: 0 },
					{	dataField: "alteradoPor", caption: "Alterado Por", alignment: "center", allowEditing: 0, visible: 0 },
					{	dataField: "alteradoEm", caption: "Alterado Em", alignment: "center", allowEditing: 0, visible: 0 },
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "situacaoDesc") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
        			store: new DevExpress.data.CustomStore({
            		loadMode: "raw",   
            		load: function() {
                	return $.getJSON(urlSearch,{method:"GetWWW101",pDescParametro:"MEDPROVIDERSTA"});
            		}
        			})
    				});
						e.editorOptions.value = e.row.data.situacao;
						e.editorOptions.displayExpr = "Descricao";
						e.editorOptions.valueExpr = "Codigo";
						e.editorOptions.searchEnabled = false;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
					if (e.parentType == "dataRow" && e.dataField == "acomodacaoDesc") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
        			store: new DevExpress.data.CustomStore({
            		loadMode: "raw",   
            		load: function() {
                	return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"TIPOACOMODACAO"});
            		}
        			})
    				});
						e.editorOptions.value = e.row.data.situacao;
						e.editorOptions.displayExpr = "Descricao";
						e.editorOptions.valueExpr = "Codigo";
						e.editorOptions.searchEnabled = false;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: true },
				height: function() {
					return 300;
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
			}).dxDataGrid("instance");

			objControle = $("#divControle").dxForm({
				activeStateEnabled:true,
				formData: {},
				scrollingEnabled	: true,
				height	:function() {
					return window.innerHeight - 210;
				},
				items: [{
					itemType: "group",
					colCount: 2,
					items:[{
						dataField	: "criadoPor",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "criadoEm",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "alteradoPor",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "alteradoEm",
						label		: {
							alignment: "right"
						},
						disabled	: true
					}]
				}]
			}).dxForm("instance");
			
			function carregarDados(pCodConvenio) {
				$.getJSON(urlPreparacao, {	
					method			:	"GetDados",
					pCodConvenio: pCodConvenio,
				},function(objRetorno){
					objGeral.option("formData", objRetorno.dadosGeral)
					objControle.option("formData", objRetorno.dadosControle)
					objForm.getEditor("situacao").option("value", objRetorno.situacao);
					objPlanoSaude.option("disabled", false);
					dataSourcePlanoSaude.reload();
				});
			}			
		</script>
	</body>
</html>
