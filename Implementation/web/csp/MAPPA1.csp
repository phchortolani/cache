<style> 
#divResultadosEvolutivosGraf {
	padding:0px;
	width:100%!important;
	height:100%!important;
}
#divResultadosEvolutivosGraf1 {
	width:100%!important;
	height:100%!important;
}
</style>

<script language='javascript'>

	function exibirPopoverDiagnostico(pOpcao, pObjeto){
		if (typeof popoverDiagnostico != 'undefined') {
			popoverDiagnostico.dispose();
			$("#dvPopoverDiag").remove();
		}

		if (pOpcao != 1 || $(pObjeto).attr("conteudo") == "") {
			return;
		}

		$("body").append("<div id='dvPopoverDiag' style='z-index=30000000'/>")

		popoverDiagnostico = $("#dvPopoverDiag").dxPopover({
			showEvent: "mouseenter",
			hideEvent: "mouseleave",
			position: "left",
			elementAttr: { class: 'tooltips' },
			visible: true,
			animation: { 
				show: { type: "pop", from: { scale: 0 }, to: { scale: 1 }},
				hide: { type: "fade", from: 1, to: 0}
			},
			width: $(pObjeto).attr("xWidth"),
			target: "#"+$(pObjeto).attr("id"),
			contentTemplate: function(){
				return "<span class='tbToolTipEsta'>"+$(pObjeto).attr("conteudo")+"</span>";
			}
		}).dxPopover("instance");
	}

	////	
    dSListaResultadoInt = new DevExpress.data.DataSource({
    	store: new DevExpress.data.CustomStore({
			load: function(args) {
				return $.getJSON(urlPreparacao,{
					method	: "listaResultados",
					paciente: codPacienteValor,
					mappa	: 1,
					codCID	: codCID,
					ficha	: ficha
				},function(rs){});
			},
			update: function (key, values) {
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						#server(VAR.CSP.MAPPA1.ArmResultaExame(key.id, coluna, values[coluna], YBED))#;
					}
				}
			}	
		}),
	});
	function funcResultHeight(e){
		var tamanho = window.innerHeight - 390
		if (tamanho < 300){
			tamanho = 300
		}
		return tamanho;
	}
	function funcResultOnCellClick(e){
		dtGridRes = e.component; 
		if (dtGridRes.getSelectedRowKeys().length > 6) {
			DevExpress.ui.notify("Limite de seleção superior a 6.", "warning", 4000);
			dtGridRes.deselectRows(e.key)
		}
	}
	function funcResultOnSelectionChanged(selectedItems) {
		data = selectedItems.selectedRowsData;
		$("#btGerarGraficoResultado").dxButton("instance").option("disabled",!data.length);
	}
	function funcResultOnEditorPreparing(e) {  
		if (e.parentType=='dataRow' && e.command=='select' && e.row.data.selecionar == 0) {  
			e.editorElement.remove();  
		}
		if (e.parentType=='headerRow' && e.command=='select') {  
			e.editorElement.remove();  
		}  
	}
	function funcResultOnEditingStart(e) {
		var coluna = e.column.dataField
		var colunaUsuario = coluna+"-Usuario"
		if (e.data[colunaUsuario] != undefined && e.data[colunaUsuario] != YBED) {
			e.cancel = true
		}else{
			e.cancel = false
		}
	}
	function funcResultWidth(e){
		xWidthRes = new Number($("#divFormAtendimentoClinicoSugestao").css("width").split("px")[0])-70;
		return xWidthRes
	}
	function funcResultOnCellHoverChanged(event){
		if (event.rowType != "data") {
			popup.hide();
			return;
		}
		var coluna = event.column.dataField
		var colunaHiLow = coluna+"-HiLow"
		var colunaValorReferencia = coluna+"-ValorReferencia"
		if (event.data[coluna] == undefined || event.data[colunaValorReferencia] == undefined || event.data[colunaHiLow] == undefined) {
			popup.hide();
			return;
		}
		if (event.data[colunaValorReferencia] != "" || event.data[colunaHiLow] != "") {
			var hintFormatado = "";
			hintFormatado += "<b>Resultado: </b>"+event.data[coluna]+"<br>";
			hintFormatado += "<b>Referência: </b>"+event.data[colunaValorReferencia]+"<br>";
			hintFormatado += "<b>Situação: </b>"+event.data[colunaHiLow]+"<br>";
			popup.hide();
			popup.option("contentTemplate", function(contentElement) {
				$("<span style='font-size:12px;'>")
					.append(hintFormatado)
					.appendTo(contentElement);         
			});
			popup.option({"target":event.cellElement});
			popup.show();
		}else{
			popup.hide();
		}						
	}

	var jImpFunc = 0;
	function colunaData(container, options) {
		if (!options.value) {
			return	
		}
		var corFont 		= "";
		var corBackground 	= "";
		var coluna 			= options.column.dataField
		var colunaHiLow 	= coluna+"-HiLow"
		var colunaUsuario 	= coluna+"-Usuario"
		if (options.data[colunaHiLow] != "NORMAL" && options.data[colunaHiLow] != "") {
			var corFont = "red";
		}				
		if (options.data[colunaUsuario] != "INTEGRACAO" && options.data[colunaUsuario] != "") {
			var corBackground = "#FFFFD9";
		}				
		
		var iconeTransp = ""
		if (options.data.campoEst != "") {
			colunaTrasp = "transp"+options.data.campoEst;		
			colorIcone = "#000000"
			if (options.data[colunaTrasp]==coluna) {
				colorIcone = "green"
			}
			idSpExTrans = "spExTransObj"+options.data.campoEst+coluna.split("/")[2]+coluna.split("/")[1]+coluna.split("/")[0];
			iconeTransp = "<span class='spExTransObj"+options.data.campoEst+"' id='"+idSpExTrans+"' " +
						  "style='border:0px solid red;cursor:pointer;color:"+colorIcone+";' " +
						  "data-campo='"+options.data.campoEst+"' data-value='"+options.value+"' data-date='"+coluna+"' " +
						  "onClick='trasportarCliqueIcone(this);'>" +
							"<i class='fas fa-file-import' title='Transportar Dados para Cálculo' ria-hidden='true'></i>" +
							" &nbsp;"+
						  "</span>";
		}
		
		if (options.value.length > 1000) {
			container.html("<i class='far fa-window-maximize' ria-hidden='true' style='cursor:pointer;' onClick=exibirTitle('"+options.data.id+"','"+options.column.dataField+"');></i>&nbsp; "+options.value).css("color", corFont).css("background-color", corBackground);				
		}else{
			container.html(iconeTransp+options.value).attr("title", options.value).css("background-color", corBackground).css("color", corFont);
		}
	}
	
	function trasportarCliqueIcone(pObjeto) {
		$("#gridResultadoExames").dxDataGrid("instance").cancelEditData();
		transportarDados(pObjeto.dataset.campo,pObjeto.dataset.value,0,pObjeto.dataset.date);
		dSListaResultadoInt.reload();
	}

	var headerTemplate = function (header, info) {
		$('<div>').html("<span onClick=transportarDadosGeral('"+info.column.caption+"',1); title='Transportar Dados para Cálculo'><i fas class='fas fa-file-import' style='cursor:pointer'></i> &nbsp; </span>"+info.column.caption).appendTo(header);
		//imprimirResultado()
	};

	function funcCustomizeColumns(columns) {
		$.each(columns, function (_, element) {
			if (element.caption != "MAPPA" && element.caption != "Perfil" && element.caption != "Composto" && element.caption != "Exame") {
				element.headerCellTemplate = headerTemplate;
			}
		});
	}
	function transportarDadosGeral(pData, p1){
		$.getJSON(urlPreparacao1,{
	        method		: "recResultadoCalculo",
	        codPaciente	: codPacienteValor,
	        codCID		: codCID,
	        dataExame	: pData,
	        ficha 		: ficha,
	        fichaSeq	: fichaSeq,
	        dataPEP		: dataPEP
		},function(rs){
			if (p1 == 1 && rs.length == 0) {
				DevExpress.ui.notify("Não há dados a serem transportado!","warning");
			}
			if (rs.length > 0) {
				if (rs[0].valorCampo == "") {
					transportarDados(rs[0].campoEst, rs[0].resultado, 0, pData);
					setTimeout(function(){ 
						transportarDadosGeral(pData, 0);
					},200)
					return
				}
				var result = DevExpress.ui.dialog.confirm("Deseja alterar o valor do Exame "+rs[0].exameDesc+" De "+rs[0].valorCampo+" Para "+rs[0].resultado+"?", "Trasportar Dados?");
			    $(".dx-overlay-content.dx-popup-normal.dx-popup-draggable.dx-resizable.dx-popup-inherit-height").css("z-index","100000")
				result.done(function(dialogResult) {
			        if (!dialogResult) return
					transportarDados(rs[0].campoEst, rs[0].resultado, 0, pData);
					setTimeout(function(){ 
						transportarDadosGeral(pData, 0);
					},200)
			    })
			    return
			}else{	
				dSListaResultadoInt.reload();
			}
		});
	}

	function transportarDados(pCampo, pValor, p1, pDataSel){
		$.ajaxSetup({async:false});
		$("#gridResultadoExames").dxDataGrid("instance").cancelEditData();
		$.getJSON(urlPreparacao,{
	        method			: "salvaPainel",
	        codPaciente		: codPacienteValor,
	        dataField		: pCampo,
	        valor			: JSON.stringify(pValor),
	        codCID			: codCID,
	        ficha 			: ficha,
	        fichaSeq		: fichaSeq,
	        dataPEP			: dataPEP,
	        pTransportar	: pDataSel
	    },function(){
		    $(".spExTransObj"+pCampo).css("color","#000000");
		    recuperaEstadiamento(codPacienteValor)
			atualizaGauge(codPacienteValor,campo)
			if (p1 == 0) {
				DevExpress.ui.notify("Valor(es) Transportado com Sucesso!","success");
				var idIcone = "spExTransObj"+pCampo+""+pDataSel.split("/")[2]+""+pDataSel.split("/")[1]+""+pDataSel.split("/")[0];
				$("#"+idIcone).css("color", "green");
			}
			$.ajaxSetup({async:true});
		});
	}
	
	function exibirTitle(p1,p2){
		$("#dvDialogResultado").css("z-index",20320);
		$("#dvDialogResultado").dxPopup("show");
		$("#dvConteudoDialogResultado").html(#server(VAR.CSP.MAPPA1.getResultado(p1,p2))#);
	}	

	function funcOnToolbarPreparing(e){
		e.toolbarOptions.items.unshift({
			location: "after",
			widget: "dxButton",
			options: {
				elementAttr: {
					id: "btGerarGraficoResultado",
				},
				disabled: 1,
				icon: "fas fa-chart-line",
				height: 36,
				width: 36,
				hint: "Gerar Gráfico",
				onClick: function(e) {
					$("#openResultadosEvolutivosGraf").css("z-index",20300);
					$("#openResultadosEvolutivosGraf").dxPopup("show");
					
					$("#divResultadosEvolutivosGraf").html("<div id='divResultadosEvolutivosGraf1'></div>")

			        $.get(urlPreparacao,{method: "ImpColunasResultados", codPaciente: codPacienteValor},function(retorno){
				        categoriaGrafResultado = [];
				        var objRetorno = eval(retorno);
				        for (var x = (objRetorno.length-1); x >= 0; x--){
					    	var obj = objRetorno[x];
					    	if (obj.caption.split("/").length > 1) {
						    	categoriaGrafResultado.push(obj.caption);
					    	}
				        }

					
						objGrid = $("#gridResultadoExames").dxDataGrid("instance");
						dadosGrid = objGrid.getSelectedRowsData();
						arraySerie = []; arrayyAxis = []
						for (var i=0; i<dadosGrid.length; i++ ) {
							objeto = dadosGrid[i];
							arrayData = [];
							for (var ii=0; ii<categoriaGrafResultado.length; ii++ ) {
								dtCat = categoriaGrafResultado[ii].split("/");
								dtForm = "Form"+dtCat[2]+""+dtCat[1]+""+dtCat[0];
								comando = "objeto."+dtForm;
								if (eval(comando)==undefined||eval(comando)=="") {
									arrayData.push(null);	
								}else{
									arrayData.push(+eval(comando));
								}
							}
							list = { 
								name: objeto.descExame, type: 'spline', data: [], connectNulls: 1,
								dataTudo: arrayData, tooltip: { valueSuffix: ' '+objeto.unidade }
							}
							if (i!=(dadosGrid.length-1)) list.yAxis = (i+1);
							arraySerie.push(list)
							list1 = {
										labels: { 
											format: '{value}'+objeto.unidade, 
											style: { color: colorsDash[i] }
										},
										title: {
											text: objeto.descExame,
											style: { color: colorsDash[i]}
										}
									};
							if ((i%2)==0) list1.opposite = false;
							else  list1.opposite = true;	
							arrayyAxis.push(list1)
						}
						categoriaGrafResultadoForm = []
						for (var i=0; i<categoriaGrafResultado.length; i++ ) {
							flagRemov = 1;
							for (var ii=0; ii<arraySerie.length; ii++ ) {
								if (arraySerie[ii].dataTudo[i]!=null) {
									flagRemov = 0;
								}
							}
							if (flagRemov == 0) {
								categoriaGrafResultadoForm.push(categoriaGrafResultado[i])	
								for (var ii=0; ii<arraySerie.length; ii++ ) {
									arraySerie[ii].data.push(arraySerie[ii].dataTudo[i]);
								}
							}
						}
						//		
						if (arrayyAxis.length==2) arrayyAxis.reverse();
						if (arrayyAxis.length==3) {
							nArrayyAxis = [];
							nArrayyAxis.push(arrayyAxis[2])
							nArrayyAxis.push(arrayyAxis[0])
							nArrayyAxis.push(arrayyAxis[1])
							arrayyAxis = [];
							arrayyAxis = nArrayyAxis;
						}
						if (arrayyAxis.length==4) {
							nArrayyAxis = [];
							nArrayyAxis.push(arrayyAxis[3])
							nArrayyAxis.push(arrayyAxis[0])
							nArrayyAxis.push(arrayyAxis[1])
							nArrayyAxis.push(arrayyAxis[2])
							arrayyAxis = [];
							arrayyAxis = nArrayyAxis;
						}
						if (arrayyAxis.length==5) {
							nArrayyAxis = [];
							nArrayyAxis.push(arrayyAxis[4])
							nArrayyAxis.push(arrayyAxis[0])
							nArrayyAxis.push(arrayyAxis[1])
							nArrayyAxis.push(arrayyAxis[2])
							nArrayyAxis.push(arrayyAxis[3])
							arrayyAxis = [];
							arrayyAxis = nArrayyAxis;
						}
						if (arrayyAxis.length==6) {
							nArrayyAxis = [];
							nArrayyAxis.push(arrayyAxis[5])
							nArrayyAxis.push(arrayyAxis[0])
							nArrayyAxis.push(arrayyAxis[1])
							nArrayyAxis.push(arrayyAxis[2])
							nArrayyAxis.push(arrayyAxis[3])
							nArrayyAxis.push(arrayyAxis[4])
							arrayyAxis = [];
							arrayyAxis = nArrayyAxis;
						}
						chartResultadosEvolutivos = Highcharts.chart("divResultadosEvolutivosGraf1", {
							chart: { 
								zoomType: 'xy', plotBackgroundColor: null, plotBorderWidth: null, 
								plotShadow: false, reflow: true, renderTo: 'chart', borderRadius: 1,
								backgroundColor: backGDash, borderColor: backGDash1, borderWidth: 1,
								spacingBottom: 80
							},
							colors: colorsDash,
							title: { text: 'Resultados / Evolutivo', align: 'left'},
							xAxis: [{
								categories: categoriaGrafResultadoForm,
								crosshair: true
							}],
							yAxis: arrayyAxis,
							tooltip: {
								shared: true
							},
							legend: {
								align: "center", verticalAlign: "bottom", y: 75, itemStyle: itemStyleDash,
								floating: true, borderWidth: 1, borderColor: "#cccccc", layout: "horizontal",
							},
							series: arraySerie,
							responsive: {
								rules: [{
									condition: {
										maxWidth: 500
									},
									chartOptions: {
										legend: {
											floating: false,
											layout: 'horizontal',
											align: 'center',
											verticalAlign: 'bottom',
											x: 0,
											y: 0
										},
										yAxis: [{
											labels: {
												align: 'right',
												x: 0,
												y: -6
											},
											showLastLabel: false
										}, {
											labels: {
												align: 'left',
												x: 0,
												y: -6
											},
											showLastLabel: false
										}, {
											visible: false
										}]
									}
								}]
							}							
						});
						setTimeout(function(){
							chartResultadosEvolutivos.reflow();
							chartResultadosEvolutivos.reflow();
						}, 400);
			        });
				}
			}
		},{
			location: "after",
			widget: "dxButton",
			options: {
				icon: "add",
				height: 36,
				width: 36,
				hint: "Adicionar Resultado",
				onClick: function(e) {
					#server(VAR.CSP.MAPPA1.LimparResultaExameAddNew(YBED))#
					$.get(urlPreparacao1,{
						method: "getExamesAdicionados",
						codPaciente: codPacienteValor,
						codCID: codCID,
						usuario: YBED
					},function(objRetorno){
						$("#dvAddResultado").css("z-index",20320);
						$("#dvAddResultado").dxPopup("show");
						var formAddResultado = $("#formAddResultado").dxForm("instance");
						formAddResultado.getEditor("exame").option("value","");
						formAddResultado.getEditor("data").option("value","");
						$("#dtGridAddResultado").dxDataGrid("instance").cancelEditData();
						$("#dtGridAddResultado").dxDataGrid("instance").expandAll();
						$("#dtGridAddResultado").dxDataGrid("instance").refresh();
						dSourceAddExameResultado.reload();
					});
				}
			}
		},{
			location: "after",
			widget: "dxButton",
			options: {
				icon: "fa fa-compress",
				height: 36,
				width: 36,
				hint: "Recolher",
				onClick: function(e) {
					var expanding = e.component.option("icon") === "fa fa-expand";
					if (expanding){
						$("#gridResultadoExames").dxDataGrid("instance").expandAll();
					}else{
						$("#gridResultadoExames").dxDataGrid("instance").collapseAll();	
					}
					e.component.option("hint", expanding ? "Recolher" : "Expandir");
					e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
				}
			}
		});
	}
	////
	var exameAdd = ""
	dSourceAddExameResultado = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			load: function(){
				return $.getJSON(urlPreparacao1, {method: "getExameAdd", codExame: exameAdd});
			},update: function (key, values) {
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						#server(VAR.CSP.MAPPA1.ArmResultaExameAddNew(key.id, values[coluna], YBED))#
					}
				}
			}					
		})
	})

	$("#dvAddResultado").dxPopup({
		visible: false,
		title: "Adicionar/Editar Resultado",
		width: 800,
		height:  580,
		position: {
			my: "center",
			at: "center",
			of: window
		},
		onHidden: function(){
			$("#dvDialogResultado").css("z-index","500");
			#server(VAR.CSP.MAPPA1.LimparResultaExameAddNew(YBED))#
			dSListaResultadoInt.reload();
		},
		dragEnabled: true,
        closeOnOutsideClick: false,
		toolbarItems: [{
			widget: "dxButton",
			location:"before",
			toolbar:"bottom",
			options: { 
				type: "default", icon: "close", text: "Fechar", 
    			onClick : function(){
					$("#dvAddResultado").dxPopup("hide");
        		}
			}
		},{
			widget: "dxButton",
			location:"after",
			toolbar:"bottom",
			options: { 
				type:"success", icon: "save", text: "Salvar", disabled: false, 
				onClick : function(){
					var formAddResultado 	= $("#formAddResultado").dxForm("instance");
					var fData 				= formAddResultado.getEditor("data").option("text");
					if (fData == "") {
						DevExpress.ui.notify("Favor informar o campo Data.", "warning", 4000);
						return
					}
					if ($("#dtGridAddResultado").dxDataGrid("instance").getController('editing').hasChanges()) {
						$("#dtGridAddResultado").dxDataGrid("instance").saveEditData();
					}
					var status = #server(VAR.CSP.MAPPA1.ArmResultaExameNew(codPacienteValor, fData, YBED))#;
					if (status == 1) {
						id = painelAtual
						painelAtual = ""
						abrePainelSub(id,xSubId,xFormulario,xTabbed,xFlVoltar);
						$("#dvAddResultado").dxPopup("hide");
						return
					}else{
						DevExpress.ui.notify(status, "warning", 4000);
						return
					}
				}
			}
		}],			        
		contentTemplate: function(e) {
			formAddExame= $("<div id='formAddResultado'>").dxForm({
				readOnly: false,
				alignItemLabels: true,
				showColonAfterLabel: true,
				screenByWidth: function(width) {
		            return "lg";
		        },
				labelLocation: "left",
				colCount: 6,
				items: [
					{dataField: "data", colSpan:2, editorType: "dxDateBox"
					,validationRules: [{ type: "required" }], 
					},{ colSpan: 4},
					{ dataField: "exame", colSpan: 5, label:{text:"Exame"}, editorType: "dxTagBox", 
						editorOptions: {
							onFocusOut: function(obj){
								obj.component.close()
							},
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
									  return $.getJSON(urlPreparacao1,{
									    method	: "listaPerfilExamesResultados",
									    codigo	: args
										});
									},
									load: function(args) {
									  return $.getJSON(urlPreparacao1,{
									    method	: "listaPerfilExamesResultados",
									    tipo	: 1,
								    	skip	: args.skip,
								    	take	: args.take,
								    	searchValue:args.searchValue
										});
									}
								})
							}),
							value: "",
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
						}
					},{ 
						itemType: "button", colSpan: 1, horizontalAlignment: "left", 
						buttonOptions: { 
							type:"default", text: "Adicionar", 
							onClick: function(){
								var tExames = $("#formAddResultado").dxForm("instance").getEditor("exame").option("value");
								if (tExames == "" || tExames == null) {
									DevExpress.ui.notify("Favor informar o exame.", "warning", 4000);
									return
								}
								tExames = tExames.join(",");
								$.get(urlPreparacao1,{
									method	: "addExameResultado",
									exame	: tExames
								},function(rs){
									$("#formAddResultado").dxForm("instance").getEditor("exame").option("value","")
									$("#dtGridAddResultado").dxDataGrid("instance").getDataSource().reload();
								});
							}
						}
					},{ 
						colSpan: 6, editorType: "dxDataGrid", 
						editorOptions: {
							elementAttr: {
								id: "dtGridAddResultado",
							},
							dataSource: dSourceAddExameResultado,
							columns: [
								{dataField: "descPerfil", caption: "Perfil", allowEditing: 0, groupIndex: 0, sortOrder: 0},
								{dataField: "descComposto", caption: "Composto", allowEditing: 0, groupIndex: 1, sortOrder: 1},
								{dataField: "descExame", caption: "Exame", allowEditing: 0},
								{dataField: "resultado", allowEditing: 1},
							],
							keyExpr: "id",
							grouping: {
								allowCollapsing: true,
								autoExpandAll: true,
							},
							editing: {
								mode: "batch",
								allowUpdating: true,
								useIcons: true
							},
							filterRow: {visible: 1},
							paging: { enabled:false },					
							height: 340,	
							showBorders: true,
							showRowLines: true,
						}
				    },
				]
			});
			e.append(formAddExame);
		}
	});
	
	////
	var categoriaGrafResultado = [];

	popup = $("#popup").dxPopover({showEvent: "mouseenter",hideEvent: "mouseleave"}).dxPopover("instance");

	$("#dvDialogResultado").dxPopup({
		visible: false,
		title: "Resultado",
		width: 800,
		height:  600,
		onHidden: function(){
			$("#dvDialogResultado").css("z-index","500");
		},
		position: {
			my: "center",
			at: "center",
			of: window
		},
		dragEnabled: true,
		contentTemplate: function(e) {
		conteudoDialog = $("<div id='dvConteudoDialogResultado' style='overflow-y:auto;height:500px;'></div>")
		e.append(conteudoDialog);
		}		
	});


	$("#openResultadosEvolutivos").dxPopup({
		width: '98%',
		height: '90%',
		showTitle: true,
		title: "Consulta Resultados / Evolutivo",
		visible: false,
		position: { at: "bottom", my: "bottom"},
		dragEnabled: true,
		closeOnOutsideClick: false,
		onHidden: function(){
			$("#openResultadosEvolutivos").css("z-index","500");
		},
		toolbarItems: [{
			widget: "dxButton",
			location:"before",
			toolbar:"bottom",
			options: { 
				width	: "140px",
				type	: "default",
				icon	: "close",
				text	: "Fechar", 
				onClick : function(){
					$("#openResultadosEvolutivos").dxPopup("hide");
				}
			}
		}],	
		contentTemplate: function(e) {
			height = window.innerHeight - (window.innerHeight*0.1) - 130;
			e.append(	"<div id='divResultadosEvolutivos' class='container-fluid' style='border: 0px solid red;padding:0px;overflow-y:auto;height:"+height+"px;'></div>");
		}			
	});

	function colunaGrafico(container, options) {
		container.html(options.value+"&nbsp;<i class='fas fa-tachometer-alt'></i>"+234);				
	}

	function montaResultadosEvolutivos(){
		$("#openResultadosEvolutivos").css("z-index",20200);
		$("#openResultadosEvolutivos").dxPopup("show");

		if ($("#divResultadosEvolutivosGrid").html()!="") $("#divResultadosEvolutivosGrid").remove();
			
		$("#divResultadosEvolutivos").html("<div id='divResultadosEvolutivosGrid'></div>");

        $.get(urlPreparacao,{method: "ImpColunasResultados", codPaciente: codPacienteValor},function(retorno){
	        categoriaGrafResultado = [];
	        var objRetorno = eval(retorno);
	        for (var x = (objRetorno.length-1); x >= 0; x--){
		    	var obj = objRetorno[x];
		    	if (obj.caption.split("/").length > 1) {
			    	categoriaGrafResultado.push(obj.caption);
		    	}
	        }
	        
			$("#divResultadosEvolutivosGrid").dxDataGrid({
				dataSource: new DevExpress.data.CustomStore({
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method	: "listaResultados",
							paciente: codPacienteValor,
						});
					}
				}),
				keyExpr: "id",
				columns: eval(retorno),
				hoverStateEnabled: true,
				onEditingStart: function(e) {
					var coluna = e.column.dataField
					var colunaUsuario = coluna+"-Usuario"
					if (e.data[colunaUsuario] != YBED) {
						e.cancel = true
					}
				},
				selection: { allowSelectAll: false, mode: 'multiple', showCheckBoxesMode:"always" },
				grouping: {
					allowCollapsing: true,
					autoExpandAll: true,
				},
				sorting: {
					mode: "multiple"
				},
				headerFilter: {
					visible:true
				},	
				searchPanel: {
					visible:false,
				},
				filterRow:{
					visible:true
				},
				groupPanel: {
					visible: true
				},
				height: function() {
					var tamanho = window.innerHeight - 250
					if (tamanho < 300){
						tamanho = 300
					}
					return tamanho;
				},
				paging: { enabled: false, pageSize: 10 },
				columnFixing: { enabled: true },
				showBorders: true,
				showRowLines: true,
				columnChooser: {
					enabled: true,
					mode: "dragAndDrop" 
				},
				onCellClick: function(e) {
					dtGridRes = e.component; 
					if (dtGridRes.getSelectedRowKeys().length > 6) {
						DevExpress.ui.notify("Limite de seleção superior a 6.", "warning", 4000);
						dtGridRes.deselectRows(e.key)
					}
				},
				onSelectionChanged: function(selectedItems) {
					data = selectedItems.selectedRowsData;
					$("#btGerarGraficoResultado").dxButton("instance").option("disabled",!data.length);
				},				
				stateStoring: {
					enabled: false
				},
				onEditorPreparing: function(e) {  
					if (e.parentType=='dataRow' && e.command=='select' && e.row.data.selecionar == 0) {  
						e.editorElement.remove();  
					}
					if (e.parentType=='headerRow' && e.command=='select') {  
						e.editorElement.remove();  
					}  
				}, 
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							elementAttr: {
								id: "btGerarGraficoResultado",
							},
							disabled: 1,
							icon: "fas fa-chart-line",
							height: 36,
							width: 36,
							hint: "Gerar Gráfico",
							onClick: function(e) {
								$("#openResultadosEvolutivosGraf").css("z-index",20300);
								$("#openResultadosEvolutivosGraf").dxPopup("show");
								
								$("#divResultadosEvolutivosGraf").html("<div id='divResultadosEvolutivosGraf1'></div>")
								
								objGrid = $("#divResultadosEvolutivosGrid").dxDataGrid("instance");
								dadosGrid = objGrid.getSelectedRowsData();
								arraySerie = []; arrayyAxis = []
								for (var i=0; i<dadosGrid.length; i++ ) {
									objeto = dadosGrid[i];
									arrayData = [];
									for (var ii=0; ii<categoriaGrafResultado.length; ii++ ) {
										dtCat = categoriaGrafResultado[ii].split("/");
										dtForm = "Form"+dtCat[2]+""+dtCat[1]+""+dtCat[0];
										comando = "objeto."+dtForm;
										if (eval(comando)==undefined||eval(comando)=="") {
											arrayData.push(null);	
										}else{
											arrayData.push(+eval(comando));
										}
									}
									list = { 
										name: objeto.descExame, type: 'spline', data: [], connectNulls: 1,
										dataTudo: arrayData, tooltip: { valueSuffix: ' '+objeto.unidade }
									}
									//if (i==0&&dadosGrid.length>1) list.type = 'column';
									if (i!=(dadosGrid.length-1)) list.yAxis = (i+1);
									//if (i==2) list.dashStyle = 'shortdot';
									//if (i==3) list.dashStyle = 'dashdot';
									arraySerie.push(list)
									list1 = {
												labels: { 
													format: '{value}'+objeto.unidade, 
													style: { color: colorsDash[i] }
												},
												title: {
													text: objeto.descExame,
													style: { color: colorsDash[i]}
												}
											};
									if ((i%2)==0) list1.opposite = false;
									else  list1.opposite = true;	
									arrayyAxis.push(list1)
								}
								categoriaGrafResultadoForm = []
								for (var i=0; i<categoriaGrafResultado.length; i++ ) {
									flagRemov = 1;
									for (var ii=0; ii<arraySerie.length; ii++ ) {
										if (arraySerie[ii].dataTudo[i]!=null) {
											flagRemov = 0;
										}
									}
									if (flagRemov == 0) {
										categoriaGrafResultadoForm.push(categoriaGrafResultado[i])	
										for (var ii=0; ii<arraySerie.length; ii++ ) {
											arraySerie[ii].data.push(arraySerie[ii].dataTudo[i]);
										}
									}
								}
								//		
								if (arrayyAxis.length==2) arrayyAxis.reverse();
								if (arrayyAxis.length==3) {
									nArrayyAxis = [];
									nArrayyAxis.push(arrayyAxis[2])
									nArrayyAxis.push(arrayyAxis[0])
									nArrayyAxis.push(arrayyAxis[1])
									arrayyAxis = [];
									arrayyAxis = nArrayyAxis;
								}
								if (arrayyAxis.length==4) {
									nArrayyAxis = [];
									nArrayyAxis.push(arrayyAxis[3])
									nArrayyAxis.push(arrayyAxis[0])
									nArrayyAxis.push(arrayyAxis[1])
									nArrayyAxis.push(arrayyAxis[2])
									arrayyAxis = [];
									arrayyAxis = nArrayyAxis;
								}
								chartResultadosEvolutivos = Highcharts.chart("divResultadosEvolutivosGraf1", {
									chart: { 
										zoomType: 'xy', plotBackgroundColor: null, plotBorderWidth: null, 
										plotShadow: false, reflow: true, renderTo: 'chart', borderRadius: 1,
										backgroundColor: backGDash, borderColor: backGDash1, borderWidth: 1,
										spacingBottom: 80
									},
									colors: colorsDash,
									title: { text: 'Resultados / Evolutivo', align: 'left'},
									xAxis: [{
										categories: categoriaGrafResultadoForm,
										crosshair: true
									}],
									yAxis: arrayyAxis,
									tooltip: {
										shared: true
									},
									legend: {
										align: "center", verticalAlign: "bottom", y: 75, itemStyle: itemStyleDash,
	        							floating: true, borderWidth: 1, borderColor: "#cccccc", layout: "horizontal",
									},
									series: arraySerie,
									responsive: {
										rules: [{
											condition: {
												maxWidth: 500
											},
											chartOptions: {
												legend: {
													floating: false,
													layout: 'horizontal',
													align: 'center',
													verticalAlign: 'bottom',
													x: 0,
													y: 0
												},
												yAxis: [{
													labels: {
														align: 'right',
														x: 0,
														y: -6
													},
													showLastLabel: false
												}, {
													labels: {
														align: 'left',
														x: 0,
														y: -6
													},
													showLastLabel: false
												}, {
													visible: false
												}]
											}
										}]
									}							
    							});
								setTimeout(function(){
									chartResultadosEvolutivos.reflow();
									chartResultadosEvolutivos.reflow();
								}, 400);
							}
						}
					},{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-expand",
							height: 36,
							width: 36,
							hint: "Expandir",
							onClick: function(e) {
								var expanding = e.component.option("icon") === "fa fa-expand";
								if (expanding){
									$("#divResultadosEvolutivosGrid").dxDataGrid("instance").expandAll();
								}else{
									$("#divResultadosEvolutivosGrid").dxDataGrid("instance").collapseAll();	
								}
								e.component.option("hint", expanding ? "Recolher" : "Expandir");
								e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
							}
						}
					})
				}				
			});
        });
	}
	
	$("#openResultadosEvolutivosGraf").dxPopup({
		width: '93%',
		height: '85%',
		showTitle: true,
		title: "Gráfico de Resultados/Evolutivo",
		visible: false,
		position: { at: "bottom", my: "bottom"},
		dragEnabled: true,
		closeOnOutsideClick: false,
		onHidden: function(){
			$("#openResultadosEvolutivosGraf").css("z-index","500");
		},
		toolbarItems: [{
			widget: "dxButton",
			location:"before",
			toolbar:"bottom",
			options: { 
				width	: "140px",
				type	: "default",
				icon	: "close",
				text	: "Fechar", 
				onClick : function(){
					$("#openResultadosEvolutivosGraf").dxPopup("hide");
				}
			}
		}],	
		contentTemplate: function(e) {
			height = window.innerHeight - (window.innerHeight * 0.305);
			e.append("<div id='divResultadosEvolutivosGraf'></div>");
		}			
	});
	
	$("#openExportacao").dxPopup({
		width: '98%',
		height: '90%',
		showTitle: true,
		title: "Exportar MAPPA",
		visible: false,
		position: { at: "bottom", my: "bottom"},
		dragEnabled: true,
		closeOnOutsideClick: false,
		onHidden: function(){
			$("#openExportacao").css("z-index","500");
		},
		toolbarItems: [{
			widget: "dxButton",
			location:"before",
			toolbar:"bottom",
			options: { 
				width	: "140px",
				type	: "default",
				icon	: "close",
				text	: "Fechar", 
				onClick : function(){
					$("#openExportacao").dxPopup("hide");
				}
			}
		}],	
		contentTemplate: function(e) {
			height = window.innerHeight - (window.innerHeight*0.1) - 140;
			e.append("<div id='divExportacao' class='container-fluid' style='border: 0px solid red;padding:0px;overflow-y:auto;height:"+height+"px;'></div>");
		}			
	});

	function exportarMAPPA(){
		//openExportacao
		$("#openExportacao").css("z-index",20200);
		$("#openExportacao").dxPopup("show");
		
		if ($("#divExportacaoGrid").html()!="") $("#divExportacaoGrid").remove();
			
		$("#divExportacao").html("<div id='divExportacaoGrid'></div>");

		loadPanel.show();
		$.getJSON(urlPreparacao1,{
            method		: "exportarMAPPA",
            paciente	: codPacienteValor,
            codCID		: codCID
        },function(retorno){
	    	$("#divExportacaoGrid").dxDataGrid({
				dataSource: retorno.dtSource,
				//keyExpr: "id",
				columns: retorno.Columns,
				hoverStateEnabled: true,
				grouping: { allowCollapsing: true, autoExpandAll: true},
				headerFilter: { visible:false },	
				searchPanel: { visible:false },
				filterRow:{ visible:true },
				groupPanel: { visible: true },
				height: function() {
					var tamanho = window.innerHeight - 250
					if (tamanho < 300){
						tamanho = 300
					}
					return tamanho;
				},
				paging: { enabled: false, pageSize: 10 },
				columnFixing: { enabled: true },
				showBorders: true,
				showRowLines: true,
				searchPanel: { visible: true},
				columnChooser: {
					enabled: false,
					mode: "dragAndDrop" 
				},
				export: { enabled: true },
				pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [20, 50, 100, 150, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 100 },
				stateStoring: { enabled: false },
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e){
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-compress",
							height: 36,
							width: 36,
							hint: "Recolher",
							onClick: function(e) {
								var expanding = e.component.option("icon") === "fa fa-expand";
								if (expanding){
									$("#divExportacaoGrid").dxDataGrid("instance").expandAll();
								}else{
									$("#divExportacaoGrid").dxDataGrid("instance").collapseAll();	
								}
								e.component.option("hint", expanding ? "Recolher" : "Expandir");
								e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
							}
						}
					});
				}
			});
	        loadPanel.hide();
	    });
	}

	function calculaRiscoTrombose(){
        loadPanel.show();
        $.getJSON(urlPreparacao1,{
            method		: "calculaRiscoTrombose",
            paciente	: codPacienteValor,
            dataPEP		: dataPEP,
            codCID		: codCID,
            ficha		: ficha
        },function(retorno){
			DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	        recuperaEstadiamento(codPacienteValor);
			loadPanel.hide();
	    });
	  }
	  
	function calculaDiagnostico(){
        loadPanel.show();
        $.getJSON(urlPreparacao1,{
            method		: "calculaTodosDiagnostico",
            paciente	: codPacienteValor,
            dataPEP		: dataPEP,
            codCID		: codCID,
            ficha		: ficha
        },function(retorno){
			DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	        recuperaEstadiamento(codPacienteValor);
			loadPanel.hide();
	    });
	  }
	  
	
	//////// Intercorrência Tratamento 
	$("#dvAddOcorrenciaTratamento").dxPopup({
		width: '98%',
		height: '590px',
		showTitle: true,
		title: "Intercorrência",
		visible: false,
		position: { at: "center", my: "center"},
		dragEnabled: true,
		closeOnOutsideClick: false,
		onHidden: function(){
			$("#dvAddOcorrenciaTratamento").css("z-index","500");
		},
		toolbarItems: [{
			widget: "dxButton",
			location:"before",
			toolbar:"bottom",
			options: { 
				width	: "140px",
				type	: "default",
				icon	: "close",
				text	: "Fechar", 
				onClick : function(){
					$("#dvAddOcorrenciaTratamento").dxPopup("hide");
				}
			}
		},{
			widget: "dxButton",
			location:"after",
			toolbar:"bottom",
			options: { 
				width	: "140px",
				type	: "success",
				icon	: "save",
				text	: "Salvar", 
				onClick : function(){
					var pSuspender = objformAddOcorrenciaTratamento.getEditor("suspender").option("value")
					if (pSuspender == true) pSuspender = 1;
					if (pSuspender == false) pSuspender = 0;
					
					$.get(urlPreparacao1,{
			            method		: "armIntercorrencia",
			            paciente	: codPacienteValor,
			            dataPEP		: dataPEP,
			            codCID		: codCID,
			            ficha		: ficha,
			            pChave		: objformAddOcorrenciaTratamento.getEditor("chave").option("value"),
			            pCodRegime	: objformAddOcorrenciaTratamento.getEditor("regime").option("value"), 
			            pCiclo		: objformAddOcorrenciaTratamento.getEditor("ciclo").option("value"),
			            pSuspender	: pSuspender,
			            pOcorrencia : objformAddOcorrenciaTratamento.getEditor("ocorrencia").option("value")
			        },function(retorno){
						if (retorno == 1) {
							DevExpress.ui.notify("Intercorrência cadastrada com sucesso!","success");
							dataSourceGridPrescricao.reload();
							$("#dvAddOcorrenciaTratamento").dxPopup("hide");
						}else{
							DevExpress.ui.notify("Erro no armazenamento: "+retorno, "error");
						}
			        });
				}
			}
		},{
			widget: "dxButton",
			location:"after",
			toolbar:"bottom",
			options: { 
				elementAttr:{
					class: "btExcluirInterc"
				},
				width	: "140px",
				type	: "danger",
				icon	: "trash",
				text	: "Excluir", 
				onClick : function(){
					var result = DevExpress.ui.dialog.confirm("Confirma a exclusão da intercorrência?", "Intercorrência");
				    result.done(function(dialogResult) {
						$.get(urlPreparacao1,{
				            method		: "delIntercorrencia",
				            paciente	: codPacienteValor,
				            dataPEP		: dataPEP,
				            codCID		: codCID,
				            ficha		: ficha,
				            pChave		: objformAddOcorrenciaTratamento.getEditor("chave").option("value"),
				            pCodRegime	: objformAddOcorrenciaTratamento.getEditor("regime").option("value"), 
				            pCiclo		: objformAddOcorrenciaTratamento.getEditor("ciclo").option("value"),
				        },function(retorno){
							if (retorno == 1) {
								DevExpress.ui.notify("Intercorrência excluida com sucesso!","success");
								dataSourceGridPrescricao.reload();
								$("#dvAddOcorrenciaTratamento").dxPopup("hide");
							}else{
								DevExpress.ui.notify("Erro na exclusão "+retorno, "error");
							}
				        });
				    })
				}
			}
		}],	
	   	contentTemplate: function(e) {
			formAddOcorrenciaTratamento = $("<div id='formAddOcorrenciaTratamento'>").dxForm({
				readOnly: false,
				alignItemLabels: true,
				showColonAfterLabel: true,
				screenByWidth: function(width) {
		            return "lg";
		        },
				labelLocation: "left",
				colCount: 12,
				items: [{ 
					colSpan: 4, dataField: "chave", visible: 0},
					{colSpan: 4, dataField: "regime", visible: 0},
					{colSpan: 4, dataField: "ciclo", visible: 0},
					{colSpan: 12, dataField: "medicamento", label: { text: "Medicamento", alignment: "right"},
					editorType	: "dxSelectBox",
            		editorOptions: {
                		searchEnabled: true, showClearButton: true, valueExpr: "CodMedicamento", 
						displayExpr: "DescMedicamento", searchEnabled: true, acceptCustomValue: true,
						readOnly: 1,
						onCustomItemCreating: function(e) { 
							if(!e.customItem) { 
								e.customItem = {CodMedicamento:e.text.toUpperCase(),DescMedicamento:e.text.toUpperCase()};
							} 
						}, itemTemplate: function (data, itemIndex, element) {
							retorno = "";
							if (data.Fav>0){
								retorno = "<i class='fa fa-star' title='Receitado "+data.Fav+" vezes'></i>"
							}
							return retorno+" "+data.DescMedicamento
				        }, 
				        dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlPreparacao,{
										method	:"listaMedicamentos",
										codigo	: args
									});
								},
								load: function(args) {
									return $.getJSON(urlPreparacao,{
										method	:"listaMedicamentos",
										searchValue:args.searchValue,
										filter:JSON.stringify(args.filter),
										skip:args.skip,
										take:args.take,

									});
								}
							})
						})
					}
    			},{
					colSpan: 4, dataField: "dose", label: { text: "Dose", alignment: "right" },
					editorOptions: { readOnly: 1},
				},{
					colSpan: 4, dataField: "unidade", label: { text: "Unidade", alignment: "right" },
					editorType: "dxSelectBox", editorOptions: { searchEnabled: true, showClearButton: false,
					readOnly: 1, valueExpr: "Codigo", displayExpr: "Descricao", 
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							loadMode: "raw",
							load: function(args) { 
								return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "UNIDDOSAGEM"});
							}
						})
					})}
				},{
					colSpan: 4, dataField: "via", label: { text: "Via", alignment: "right" }, editorType: "dxSelectBox",
					editorOptions: { value:"1", searchEnabled: true, showClearButton: false,
						readOnly: 1, valueExpr: "Codigo", displayExpr: "Descricao",
						dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								loadMode: "raw",
								load: function(args) {
									return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "VIAADMINISTRACAO" });
								}
							})
						})
					}
				},{
					colSpan: 4, dataField: "frequencia", label: { text: "Frequência", alignment: "right" }, editorType: "dxSelectBox",
					editorOptions: { acceptCustomValue: true, searchEnabled: true, showClearButton: false, 
					readOnly: 1, valueExpr: "Codigo", displayExpr: "Descricao", onCustomItemCreating: function(e) { 
						if(!e.customItem) { 
							e.customItem = {Codigo:e.text.toUpperCase(),Descricao:e.text.toUpperCase()};
						} 
					},
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							loadMode: "raw",
							load: function(args) {
								return $.getJSON(urlPreparacao,{ method: "listaINPARA", chave: "POSOLOGIA"});
							}
						})
					})}
				},{
					colSpan: 4, dataField: "duracao", label: { text: "Duração (dias)", alignment: "right" }, editorType: "dxTextBox",
					editorOptions: { readOnly: 1 }
				},{},{
					colSpan: 1, dataField: "continuo", cssClass: "semBordasLaterais", label: { location: "right", 
					text: "Uso Contínuo?", showColon: false, alignment: "left" }, editorType: "dxCheckBox",
					editorOptions: { readOnly: 1 }
				},{ colSpan: 2},{
					colSpan: 12, dataField: "observacoes", label: { text: "Observações", alignment: "right" },
					editorType: "dxTextArea", editorOptions: { height: 120, readOnly: 1 }
				},{},{
					colSpan: 1, dataField: "suspender", cssClass: "semBordasLaterais", label: { location: "right", 
					text: "Suspender?", showColon: false }, editorType: "dxCheckBox",
				},{colSpan: 10},
				{
					colSpan: 12, dataField: "ocorrencia", label: { text: "Ocorrência", alignment: "right" },
					editorType: "dxTextArea", editorOptions: { height: 120 }
				}]
			});
			e.append(formAddOcorrenciaTratamento);
		}
	});

	function ocorrenciaTratamento(pChave, pCodRegime, pCiclo){
		$("#dvAddOcorrenciaTratamento").css("z-index","20010");
		$.getJSON(urlPreparacao1,{
            method		: "getIntercorrencia",
            paciente	: codPacienteValor,
            dataPEP		: dataPEP,
            codCID		: codCID,
            ficha		: ficha,
            pChave		: pChave,
            pCodRegime	: pCodRegime, 
            pCiclo		: pCiclo
        },function(retorno){
	        $("#dvAddOcorrenciaTratamento").dxPopup("show");
			objformAddOcorrenciaTratamento = $("#formAddOcorrenciaTratamento").dxForm("instance");
			objformAddOcorrenciaTratamento.getEditor("chave").option("value", pChave);
			objformAddOcorrenciaTratamento.getEditor("regime").option("value", pCodRegime);
			objformAddOcorrenciaTratamento.getEditor("ciclo").option("value", pCiclo);
			objformAddOcorrenciaTratamento.getEditor("medicamento").option("value", retorno.medicamento);
			objformAddOcorrenciaTratamento.getEditor("dose").option("value", retorno.dose);
			objformAddOcorrenciaTratamento.getEditor("unidade").option("value", retorno.unidade);
			objformAddOcorrenciaTratamento.getEditor("via").option("value", retorno.via);
			objformAddOcorrenciaTratamento.getEditor("frequencia").option("value", retorno.frequencia);
			objformAddOcorrenciaTratamento.getEditor("duracao").option("value", retorno.duracao);
			objformAddOcorrenciaTratamento.getEditor("continuo").option("value", retorno.continuo);
			objformAddOcorrenciaTratamento.getEditor("observacoes").option("value", retorno.observacoes);
			objformAddOcorrenciaTratamento.getEditor("suspender").option("value", retorno.suspender);
			objformAddOcorrenciaTratamento.getEditor("ocorrencia").option("value", retorno.ocorrencia);
			$(".btExcluirInterc").dxButton("instance").option("disabled",!retorno.flagInter);
	    });
	}


	//////// Intercorrência Tratamento 
	dSIntercorrencia = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
            load: function(args) {
                return $.getJSON(urlPreparacao1,{
	            	method		:"GetIntercorrenciaGeral",
					paciente	: codPacienteValor,
					codCID		: codCID,
                });
            },
            remove: function (key) {
				var retorno = #server(VAR.CSP.MAPPA1.ExcIntercorrenciaGeral(codPacienteValor, codCID, key.sequencia))#;
			}
        })
    });
    
	$("#dvAddIntercorrencia").dxPopup({
		width: '60%',
		height: '690px',
		showTitle: true,
		title: "Intercorrência",
		visible: false,
		position: { at: "center", my: "center"},
		dragEnabled: true,
		closeOnOutsideClick: false,
		onHidden: function(){
			$("#dvAddIntercorrencia").css("z-index","500");
		},
		toolbarItems: [{
			widget: "dxButton",
			location:"after",
			toolbar:"bottom",
			options: { 
				width	: "140px",
				type	: "default",
				icon	: "close",
				text	: "Fechar", 
				onClick : function(){
					$("#dvAddIntercorrencia").dxPopup("hide");
				}
			}
		}],	
	   	contentTemplate: function(e) {
			formAddIntercorrencia = $("<div id='formAddIntercorrencia'>").dxForm({
				readOnly: false,
				alignItemLabels: true,
				showColonAfterLabel: true,
				screenByWidth: function(width) {
		            return "lg";
		        },
				labelLocation: "left",
				colCount: 6,
				items: [{
					colSpan: 6, dataField: "sequencia", visible: 0					
				},{	
					colSpan: 2, dataField: "data", editorType: "dxDateBox",
					label: { text:"Data", alignment: "right"},
					editorOptions : { 
						useMaskBehavior: true, 
						dateSerializationFormat: "yyyy-MM-dd"
					}
				},{colSpan: 4},{
					colSpan: 6, dataField: "ocorrencia", label: { text: "Ocorrência", alignment: "right" },
					editorType: "dxTextArea", editorOptions: { height: 120 }
				},{colSpan: 4},
				{
					dataField:"inserir" ,itemType: "button", horizontalAlignment: "left", buttonOptions: {
	           		text: "Inserir", type: "success", icon: "save",
					onClick: function(){
						objFormAddIntercorrencia = $("#formAddIntercorrencia").dxForm("instance");
						
						pSequencia = objFormAddIntercorrencia.getEditor("sequencia").option("value");
						pData = objFormAddIntercorrencia.getEditor("data").option("value");
						pOcorrencia = objFormAddIntercorrencia.getEditor("ocorrencia").option("value");
					
						if ((pData == "" || pData == null) || (pOcorrencia == "" || pOcorrencia == null)) {
							DevExpress.ui.notify("Favor informar a Data e a Ocorrência.","warning");
							return;
						}
							
						$.getJSON(urlPreparacao1,{method: "ArmIntercorrenciaGeral", paciente: codPacienteValor,
						codCID: codCID, pSequencia: pSequencia, pData: pData, pOcorrencia: pOcorrencia},
						function(retorno){
							if (retorno = 1) {
								DevExpress.ui.notify("Dados inserido com sucesso!","success");
								dSIntercorrencia.reload();
								objFormAddIntercorrencia.getEditor("data").option("value","");
								objFormAddIntercorrencia.getEditor("ocorrencia").option("value","");
								objFormAddIntercorrencia.getEditor("sequencia").option("value","");
							}else{
								DevExpress.ui.notify("Erro: "+retorno,"error");		
							}
						});
					}}
				},{
					dataField:"limpar" ,itemType: "button", horizontalAlignment: "right", buttonOptions: {
	           		text: "Limpar", type: "default", icon: "fas fa-eraser",
					onClick: function(){
						objFormAddIntercorrencia = $("#formAddIntercorrencia").dxForm("instance");
						
						objFormAddIntercorrencia.getEditor("sequencia").option("value", "");
						objFormAddIntercorrencia.getEditor("data").option("value", "");
						objFormAddIntercorrencia.getEditor("ocorrencia").option("value", "");
					}}
				},{
					colSpan: 6, editorType: "dxDataGrid", editorOptions : { 
						dataSource: dSIntercorrencia,
						columns: [
							{dataField: "data", caption: "Data", width: "90px", sortIndex: 1, sortOrder : "desc"},
							{dataField: "ocorrencia", caption: "Ocorrência"}
						],
						hoverStateEnabled: true,
						editing: { mode: "line", allowAdding: false, allowUpdating: false, allowDeleting: true, useIcons: true },
						grouping: { allowCollapsing: false, autoExpandAll: false},
						headerFilter: { visible:false },	
						searchPanel: { visible:false },
						filterRow:{ visible:true },
						groupPanel: { visible: false },
						height: 310,
						columnFixing: { enabled: true },
						showBorders: true,
						showRowLines: true,
						columnChooser: {
							enabled: false,
							mode: "dragAndDrop" 
						},
						onRowClick: function(objeto){
							objFormAddIntercorrencia = $("#formAddIntercorrencia").dxForm("instance");
							objFormAddIntercorrencia.getEditor("sequencia").option("value", objeto.data.sequencia);
							objFormAddIntercorrencia.getEditor("data").option("value", objeto.data.dataCampo);
							objFormAddIntercorrencia.getEditor("ocorrencia").option("value", objeto.data.ocorrencia);
							
						},
						wordWrapEnabled: false,
						stateStoring: { enabled: false },
						rowAlternationEnabled: true,
					}
				}]
			});
			e.append(formAddIntercorrencia);
		}
	});
	
	//////////////////////////////////////////////////////////
	
	function abreAnexos(){
		$("#dvAnexos").css("z-index","100000");
		
		$("#dvAnexos").dxPopup({
			visible: true,
			title: "Anexos",
			width: 400,
			height:  180,
			onHidden: function(){
				$("#dvAnexos").css("z-index","500");
			},
			position: {
				my: "center",
				at: "center",
				of: window
			},
			toolbarItems: [{
				location:"before",
				toolbar :"top",
			},{
				widget: "dxButton",
				location:"before",
				toolbar:"bottom",
				options: { 
					width	: "130px",
					type	: "default",
					icon	: "close",
	    			text	: "Fechar", 
	    			onClick : function(){
	        			$("#dvAnexos").dxPopup("instance").hide()
	        		}
				}
			}],				
			dragEnabled: true,
			contentTemplate: function(e) {
				conteudoDialog = $("<div id='dvAnexosDialog'></div>")
				e.append(conteudoDialog);
			},
			onContentReady : function(){
				$("#dvAnexosDialog").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
			        colCount: 2,
					items:[{
	                    itemType: "button",
						horizontalAlignment: "center",
						buttonOptions : {
				            icon: "fa fa-upload",
				            text: "Realizar Upload",
				            width: 160,
				            onClick: function() {
					            window.open("VARUploadArquivoMAPPAAnexo.csp?paciente="+codPacienteValor+"&YBED="+YBED+"&tema="+($("#tema").prop("checked")==true?1:0),"uploadArquivo","width=500,height=300,"+
								"scrollbars=0,resizable=0,menubar=0,location=0,top=0,left=100")
				            }
						}
					},{
	                    itemType: "button",
						horizontalAlignment: "center",
						buttonOptions : {
				            icon: "fa fa-search",
				            text: "Consultar Upload",
				            width: 160,
				            onClick: function() {
					            abreListaArquivosAnexo()
					            $("#dvAnexos").dxPopup("instance").hide()
				            }
						}
					}]					
				})
			}
		});
	}
	
	function abreListaArquivosAnexo(){
		 popupOptions = {
	        width: "700",
	        height: "500",
	        showTitle: true,
	        title: "Lista Arquivos",
	        visible: true,
	        dragEnabled: false,
	        closeOnOutsideClick: false,
	    }		
	    if ($("#dvListaAnexos").html()!=""){
	    	dvListaAnexos.dispose()
	    	pesquisaAnexos.dispose()
	    }
 		$("#dvListaAnexos").css({"position":"relative","zIndex":100001}).html("<div id='pesquisaAnexos'></div>")
		dvListaAnexos = $("#dvListaAnexos").dxPopup(popupOptions).dxPopup("instance")
		preparaPesquisaAnexos()
	}		
	
	function preparaPesquisaAnexos(){
      pesquisaAnexos = $("#pesquisaAnexos").dxDataGrid({
			dataSource:  new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function(){
						return $.getJSON(urlPreparacao1, {method: "getArquivosAnexos",codPaciente:codPacienteValor},function(retorno){
						});
					},
					remove : function(args){
						#server(VAR.CSP.MAPPA1.removerAnexo(args.arquivo,YBED))#
					}
				})
			}),
			editing: {
				mode: "row",
				allowDeleting: true,
				useIcons: true
			},
			columns: [
				{dataField: "nome"},
				{dataField: "data"},
			],	
			allowColumnReordering: true,
			columnAutoWidth: true,
			allowColumnResizing: true,
			height: "100%",	
			headerFilter: { visible: false },
			hoverStateEnabled: true,
			filterRow: { visible: true },
			showBorders: true,
			showRowLines: true,
			grouping: { autoExpandAll: false },
			searchPanel: { visible: false }, 
			groupPanel: { visible: false },
			export: { enabled: false },
			stateStoring: { enabled: false }, 
			columnChooser: { enabled: false, mode: "dragAndDrop" },
			sorting: { mode: "multiple" },
			rowAlternationEnabled: true,
			wordWrapEnabled:true,
			onRowClick: function(e){
				if (e.rowType == "data") {
					$.post(urlPreparacao1,{
						method	:"preparaAberturaAnexo",
						arquivo: e.key.arquivo
					},function(rs){
						window.open(rs,"Visualizar")
					});
				}
			},
			pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [20, 50, 100, 150, 200],
				showInfo: true,
				showNavigationButtons: true,
				visible: true 
			},
			paging: { enabled: true, pageSize: 20 }
		}).dxDataGrid("instance")
	}	
	
	function editAlturaPeso(){
		$.getJSON(urlPreparacao1,{ method: "GetAlturaPeso", codPaciente: codPacienteValor, ficha: ficha},function(retorno){
			$("#dvDialog").css("z-index","2000").dxPopup({
				visible: true,
				title: "Confirmar dados do paciente",
				width: 500,
				height:  200,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				toolbarItems: [{
					location:"before",
					toolbar :"top",
				},{
					widget: "dxButton",
					location:"before",
					toolbar:"bottom",
					options: { 
						width	: "130px",
						type	: "default",
						icon	: "close",
	        			text	: "Fechar", 
	        			onClick : function(){
	            			$("#dvDialog").dxPopup("instance").hide()
	            		}
					}
				},{
					widget: "dxButton",
					location:"after",
					toolbar:"bottom",
					options: { 
						width	: "130px",
						type	: "default",
						icon	: "check",
	        			text	: "Confirmar", 
	        			onClick : function(){
	            			formulario = $("#dvConteudoDialog").dxForm("instance")
	            			if (!formulario.validate().isValid){
						        DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
						        return
					        }
		        			$.getJSON(urlPreparacao,{
			                    method: "gravaST",
				                codPaciente : codPacienteValor,
						        ficha 		: ficha,
						        peso		: formulario.option("formData").peso,
						        altura		: formulario.option("formData").altura
		                    },function(retorno){
			                    if (retorno.status==1){
								    $("#dvDialog").dxPopup("instance").hide()
			                    }else{
				                	DevExpress.ui.notify(retorno.mensagem, "error", 4000);    
			                    }
			                })
	            		}
					}
				}],				
				dragEnabled: true,
				onHiding: function(){
					$("#dvDialog").css("z-index","997");
				},
				contentTemplate: function(e) {
					conteudoDialog = $("<div id='dvConteudoDialog' style='overflow-y:auto;height:500px;'></div>")
					e.append(conteudoDialog);
				},
				onContentReady : function(){
					loadPanel.hide()
					$("#dvConteudoDialog").dxForm({
						screenByWidth: function(width) {
				            return "lg";
				        },
				    	formData 		: retorno,
				    	colCount		: 2,
						items:[{
							dataField	: "altura",
							label		: {
								text	: "Altura (cm)"
							},
							validationRules: [{
			                    type: "required"
			                }],			
			                editorType	: "dxNumberBox",	            
							editorOptions: {
								min: "1",
								max: "399",
								format : "###",
							}
						},{
							dataField	: "peso",
							label		: {
								text	: "Peso (kg)"
							},
							validationRules: [{
			                    type: "required"
			                }],		
			                editorType	: "dxNumberBox",		            
							editorOptions: {
								format: "#,##0.###",
								min: "1",
								max: "1000"
							}
						}]					
					})
				}
			});
		});
	}
	
	
	
</script>