<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		Do ^WWWVAR

		Set YUSER 		= $Get(%request.Data("YUSER", 1))
		Set YBED 			= $Get(%request.Data("YBED", 1))
		Set YM 				= $Get(%request.Data("YM", 1))
		Set YLOCATION = $Get(%request.Data("YLOCATION", 1))
		Set YFORM			= $Get(%request.Data("YFORM", 1))

		Set PortCache = $Get(%request.CgiEnvs("SERVER_PORT"))
		Set PageURL 	= $Get(%request.CgiEnvs("CACHE_URL"))
		Set PageName 	= %request.PageName
		Set app 			= %request.Application
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		Set url				= "http://"_host_app

		Set URLRelPreparacao 			= "VAR.CSP.VARExtratoFaturamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLRelPreparacaoAgend = "VAR.CSP.VARCadAgendamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLRelPreparacaoOrc 	= "VAR.CSP.VARCadOrcamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLRelSearch					= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLLogin 							= "COMLogin.cls"
		Set URLLink 							= "www.cls"

		Set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		Set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)
		;
		Do ##Class(VAR.CSP.VARExtratoFaturamento).ConfColunasPrincipal()
		;
		Set exibirToolbar = $$$OK, exibirFiltros = $$$OK
		Set objVARExtratoFaturColunas = ""
		If (YFORM '= "") Set objVARExtratoFaturColunas = $Get(^VARExtratoFaturColunas(YM, YFORM, 1))
		Set exibirToolbar = +$Piece(objVARExtratoFaturColunas,"~",1)
		Set exibirFiltros = +$Piece(objVARExtratoFaturColunas,"~",2)
		;
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Extrato Faturamento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>

		<div id="toolbar"></div>
		<div class="col-md-12" style="margin-top:10px">
			<!-- Inicio do painel de filtros-->
			<div class="panel-group" id="accordion">
				<div class="panel panel-default" style='border:#($Select(exibirFiltros:"",1:"0px solid red;"))#'>
					<div class="panel-heading label-link" data-toggle="collapse" 
					style='background-color: rgba(1, 178, 169, 0.15);display:#($Select(exibirFiltros:"block",1:"none"))#;' href="#collapse1">
						<h4 class="panel-title">Filtros</h4>
					</div>
					<div id="collapse1" class="panel-collapse collapse in">
						<div class="panel-body">
	            <div id="divFiltro"></div>
						</div>
					</div>
				</div>
			</div>
			<div class="container-fluid" id="divRelatorio"></div>
		</div>
		<div id="divConfiguracao"></div>

		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx-gantt.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/exceljs.min.js"></script>
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/FileSaver.min.js"></script>
		
		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlRelPreparacao 			= "#(URLRelPreparacao)#";
			var urlRelPreparacaoAgend	= "#(URLRelPreparacaoAgend)#";
			var urlRelPreparacaoOrc		= "#(URLRelPreparacaoOrc)#";
			var urlRelSearch					= "#(URLRelSearch)#";
			var urlLink 							= "#(URLLink)#";
			var YBED 									= "#(YBED)#";
			var YUSER 								= "#(YUSER)#";
			var YFORM									= "#(YFORM)#";					
			var YLOCATION 						= "#(YLOCATION)#";
			var nomeLocal 						= "#(nomeLocal)#";
			var corBackground 				= "ededed";
			var exibirToolbar					= #(exibirToolbar)#;
			var exibirFiltros					= #(exibirFiltros)#;
			
			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			$("#toolbar").dxToolbar({
				visible: exibirToolbar,
				items: [{
					location: "after",
					widget: "dxButton",
					options: {
						icon: "search",
						text: "Pesquisar",
						stylingMode: "contained",
						type: "default",
						onClick: function(){
							listarRelatorio();	
						}
					}
				},{
					location: "after",
					widget: "dxButton",
					options: {
						icon: "fa fa-eraser",
						text: "Limpar",
						stylingMode: "contained",
						type: "default",
						onClick: function(){
							if ($("#gridRelatorio")) $("#gridRelatorio").remove();
							objFiltros.resetValues();
							$("#collapse1").collapse("show");
						}
					}
				},{
					location: "after",
					widget: "dxButton",
					options: {
						icon: "fas fa-cog",
						text: "Configurar",
						stylingMode: "contained",
						type: "default",
						onClick: function(){
							$("#divConfiguracao").dxPopup("show");
						}
					}
				}]
			});

			dSConvenio = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(args) {
						var pFontePag = objFiltros.getEditor("fontePagadora").option("value");
						return $.getJSON(urlRelSearch,{method: "GetConvenioOrganizacao", pSkip: args.skip, 
							pTake: args.take, pSearchValue:	args.searchValue, pCodConvenio: "", pParticular: "", 
							pFlagConvenio: 1, pConvenio : "", pFontePag: pFontePag});
					}
				})
			});

			dSPlanoSaude = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = objFiltros.getEditor("convenio").option("value");
						return $.getJSON(urlRelPreparacaoAgend,{method: "GetPlanoSaudeCampo", pCodOrganizacao: pCodConvenio});
					}
				})
			});
			var nomePaiOrganizacaoAnt = "";
			
			objFiltros = $("#divFiltro").dxForm({
				visible: exibirFiltros,
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				screenByWidth: function(width) { return "lg"; },
				colCount: 6,
				items:[{
					colSpan: 2,
					dataField: "numRequisicao", 
					label: { text:"Requisição:", alignment: "right"}
				},{
					dataField: "dataInicial", 
					label: { text:"Data Inicial:", alignment: "right"},
					validationRules: [{type: "required"}],
					editorType: "dxDateBox",
					editorOptions: {
						type: "date",
						width: 130,
						dateSerializationFormat: "yyyy-MM-dd",
						onValueChanged: function (e) {
							objFiltros.getEditor("dataFinal").option({"min": e.value});
						},
						value: "#($ZDate(+$Horolog-30,3))#"
					}
				},{
					dataField: "dataFinal", label: { text:"Final:", alignment: "right"},
					editorType: "dxDateBox",
					editorOptions: {
						type: "date",
						width: 130,
						dateSerializationFormat: "yyyy-MM-dd",
						onValueChanged: function (e) {
							objFiltros.getEditor("dataInicial").option({"max": e.value});
						},
						//value: "#($ZDate(+$Horolog,3))#"
					}
				},{
					colSpan: 2
				},{
					dataField: "fontePagadora", 
					colSpan: 2, 
					label: { text:"Fonte Pagadora:", alignment: "right"},
					editorType: "dxSelectBox", 
					editorOptions: {
						dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlRelSearch,{method: "GetConvenioOrganizacao", pCodConvenio: args});
								},
								load: function(args) {
									return $.getJSON(urlRelSearch,{method: "GetConvenioOrganizacao", pSkip: args.skip, 
										pTake: args.take, pSearchValue:	args.searchValue, pCodConvenio: "", pParticular: "", 
										pFlagConvenio: "", pConvenio : "", pFlagFontePag: 1});
								}
							})
						}),
						showClearButton: true,
						onValueChanged: function (e) {
							objFiltros.getEditor("convenio").option("value","");
							dSConvenio.reload();
						},
						displayExpr: "NomeOrganizacao",
						valueExpr: "CodOrganizacao",
						searchEnabled: true,
					}
				},{
					dataField: "convenio", 
					colSpan: 2, 
					label: { text:"Convênio:", alignment: "right"},
					editorType: "dxSelectBox", 
					editorOptions: {
						dataSource: dSConvenio,
						showClearButton: true,
						onValueChanged: function (e) {
							objFiltros.getEditor("planoSaude").option("value","");
							nomePaiOrganizacaoAnt = "";
							dSPlanoSaude.reload();
						},
						displayExpr: "NomeOrganizacao",
						valueExpr: "CodOrganizacao",
						searchEnabled: true,
					}
				},{
					dataField: "planoSaude", 
					colSpan: 2, 
					label: { text:"Plano de Saúde:", alignment: "right"},
					editorType: "dxTagBox", 
					editorOptions: {
						showClearButton: true,
						dataSource: dSPlanoSaude,
						itemTemplate: function (data, itemIndex, element) {
							if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
								retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
								nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
							}else{
								retorno = data.nomeOrganizacao;
							}
							return element.append(retorno)
						},
						displayExpr: "nomeOrganizacao",
						valueExpr: "codOrganizacao",
						searchEnabled: true,
					}
				},{
					dataField: "procedimento", 
					colSpan: 6, 
					label: { text:"Procedimento:", alignment: "right"},
					editorType: "dxTagBox", 
					editorOptions: {
						dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlRelPreparacaoAgend,{method: "GetProcedimento", pCodPaciente: args});
								},
								load: function(args) {
									return $.getJSON(urlRelPreparacaoAgend,{ method: "GetProcedimento", pSkip: args.skip, 
									pTake: args.take, pSearchValue: args.searchValue, pAlias: 1});
								}
							})
						}),
						searchEnabled: true,
						displayExpr: "Descricao",
						valueExpr: "Codigo",
						showClearButton: true,
					}
				},{
					dataField: "paciente", 
					colSpan: 3, 
					label: { text:"Paciente:", alignment: "right"},
					editorType: "dxTagBox",
					editorOptions: {
						dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlRelSearch,{method:	"GetPaciente", pCodPaciente: args});
								},
								load: function(args) {
									return $.getJSON(urlRelSearch,{method:	"GetPaciente", pSkip:	args.skip, pTake:	args.take, pSearchValue: args.searchValue});
								}
							})
						}),
						searchEnabled: true,
						valueExpr: "Codigo", 
						displayExpr: "Nome",
						showClearButton: true,
		        itemTemplate: function(data) {
			        return	"<div class='custom-item'>" +
			        					"<div>" + data.Nome + "</div>" +
			        					"<div style='color:red;font-size:10px'>Dt. Nasc.: " + data.Nascimento + 
			        					" &nbsp; Prontuário: " + data.Prontuario + " &nbsp; CPF: " + data.CPF +
			        					"</div>" +
			        				"</div>";
		        },
					}
				},{
					dataField: "medicoSolicitante", 
					colSpan: 3, 
					label: { text:"Médico Solicitante:", alignment: "right"},
					editorType: "dxTagBox",
					editorOptions: {
						dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								loadMode: "raw",   
			      		load: function() {
				        	return $.getJSON(urlRelPreparacaoAgend,{method:	"CarregaProfissional", pFlagExterno: "E"});
			      		}
							})
						}),
						valueExpr: "CodProvider", 
						displayExpr: "DescProvider", 
						searchEnabled: true,
					}
				}]
			}).dxForm("instance");
			
			function listarRelatorio() {
				corBackground = "ededed";
				var flagForm = objFiltros.validate().isValid; 
				if (!flagForm ){
					DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
					return;
				}
				if (exibirFiltros) {
					var pObjFiltros = objFiltros.option("formData");
				}else{
					var pObjFiltros = {
						dataInicial: "#($Get(%request.Data("pDataInicial",1)))#",
						dataFinal: "#($Get(%request.Data("pDataFinal",1)))#",
						numLote: "#($Get(%request.Data("pNumLote",1)))#",
						numRequisicao: "#($Get(%request.Data("pNumFatura",1)))#",
					};
				}				

				if ($("#gridRelatorio")) $("#gridRelatorio").remove();
				$("#divRelatorio").html("<div id='gridRelatorio'></div>");
				
				$.getJSON(urlRelPreparacao,{method: "ListarRelatorio", pObjFiltros : JSON.stringify(pObjFiltros),
				pTela: YFORM},function(objRetorno){
					console.log(objRetorno)
					$("#gridRelatorio").dxDataGrid({
						loadPanel: { enabled: true },
						dataSource: objRetorno.dados,
		        columnChooser: { enabled: true, mode: "dragAndDrop" },
						allowColumnReordering: true,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						hoverStateEnabled: true,
						showBorders: true,
						filterRow: {visible: true},
						searchPanel: { visible: true, width: 240, placeholder: "Pesquisar..." },
						headerFilter: { visible: true },
						groupPanel: { visible: true },
						columns: objRetorno.columns,
						height: function() { return window.innerHeight - (exibirFiltros ? 130 : 30);},
		    		export: { enabled: true },
						pager: {
							showPageSizeSelector: true,
							allowedPageSizes: [25, 50, 100, 200],
							showInfo: true,
							showNavigationButtons: true,
							visible: true 
						},
						paging: { enabled: true, pageSize: 25 },
		        wordWrapEnabled: true,
		        allowColumnResizing: true,
		        columnResizingMode: "widget",
		        stateStoring: { enabled: false },
						summary: {
							totalItems: [{
								column: "numAdmissao",
								displayFormat: "Total de Procedimento(s): {0}",
								summaryType: "count"
							}, {
								column: "valorTotal",
								displayFormat: "Total: {0}",
								summaryType: "sum",
								valueFormat: {type: "fixedPoint", precision: 2},
							}, {
								column: "valorPago",
								displayFormat: "Total Pago: {0}",
								summaryType: "sum",
								valueFormat: {type: "fixedPoint", precision: 2},
							}],
	            groupItems: [{
								column: "numAdmissao",
								displayFormat: "Total de Procedimento(s): {0}",
								summaryType: "count"
							}, {
								column: "valorTotal",
								displayFormat: "Total: {0}",
								summaryType: "sum",
								valueFormat: {type: "fixedPoint", precision: 2},
								alignByColumn: true
							}]
						},
        		onExporting: function(e) {
							if (typeof Object.assign !== 'function') {
							  // Must be writable: true, enumerable: false, configurable: true
							  Object.defineProperty(Object, "assign", {
							    value: function assign(target, varArgs) { // .length of function is 2
							      'use strict';
							      if (target === null || target === undefined) {
							        throw new TypeError('Cannot convert undefined or null to object');
							      }

							      var to = Object(target);

							      for (var index = 1; index < arguments.length; index++) {
							        var nextSource = arguments[index];

							        if (nextSource !== null && nextSource !== undefined) { 
							          for (var nextKey in nextSource) {
							            // Avoid bugs when hasOwnProperty is shadowed
							            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
							              to[nextKey] = nextSource[nextKey];
							            }
							          }
							        }
							      }
							      return to;
							    },
							    writable: true,
							    configurable: true
							  });
							}
							var workbook = new ExcelJS.Workbook();
							var worksheet = workbook.addWorksheet("Dados");
				      DevExpress.excelExporter.exportDataGrid({   
								worksheet: worksheet,
								component: e.component,
								topLeftCell: { row: 5, column: 1 },
							}).then(function() { 
								worksheet.getRow(1).getCell(1).value = "Data:"
								worksheet.getRow(1).getCell(2).value = "#($ZDate(+$Horolog,4))#";
								worksheet.getRow(2).getCell(1).value = "Hora:"
								worksheet.getRow(2).getCell(2).value = "#($ZTime($Piece($Horolog,",",2)))#";
								worksheet.getRow(3).getCell(1).value = "Usuário:"
								worksheet.getRow(3).getCell(2).value = YBED;
							}).then(function() {
								workbook.xlsx.writeBuffer().then(function(buffer) {   
									saveAs(
										new Blob(
											[buffer], { type: "application/octet-stream" }
										),
										"Extrato_Faturamento.xlsx"
									);
								});
							});
							e.cancel = true;
				 		},
					});
					$("#collapse1").collapse("hide");
				});
			}
			
			dSConfiguracao = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "relatorio",
		  		loadMode: "raw",   
		  		load: function() {
			  		return $.getJSON(urlRelPreparacao,{method:"GetRelatorio"});
		  		},
		  		insert: function (values) {
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						if (objDados.length <= 0) return;
						var retorno = #server(VAR.CSP.VARExtratoFaturamento.SetRelatorio("", objDados, YBED))#;
					},
		    	update: function (key, values) {
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARExtratoFaturamento.SetRelatorio(key, objDados, YBED))#;
		    	},									    	
					remove: function (key) {
						var retorno = #server(VAR.CSP.VARExtratoFaturamento.ExcRelatorio(key, YBED))#;
		    	}
	  		}),
			});
			
			$("#divConfiguracao").dxPopup({
				visible: false,
				title: "Configurar Colunas por Relatório",
				width: 1000,
				height:  600,
				position: {
					my: "center", 
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='formGuia'>").dxDataGrid({
						dataSource: dSConfiguracao,
						columns: [
							{dataField: "relatorio", caption: "Relatorio", width: 200, allowFixing: 1, fixed: 1},
							{dataField: "toolbar", caption: "Toolbar", width: 155, lookup: {
	              dataSource: function(options) { 
	              	return [{id: 1, text: "Exibir"},{id: 0, text: "Não Exibir"}]
	              },valueExpr: "id", displayExpr: "text"}
							},
							{dataField: "filtros", caption: "Filtros", width: 155, lookup: {
	              dataSource: function(options) { 
	              	return [{id: 1, text: "Exibir"},{id: 0, text: "Não Exibir"}]
	              },valueExpr: "id", displayExpr: "text"}
							},
							{caption: "Colunas", columns: [
								{dataField: "numAdmissao", caption: "No. Requisição (FA)", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "dtAdmissao", caption: "Data Admissão", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "hrAdmissao", caption: "Hora Admissão", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "numAgendamento", caption: "No. Agendamento", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "dtAgendamento", caption: "Data Agendamento", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "hrAgendamento", caption: "Hora Agendamento", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "prestador", caption: "Prestador", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{caption: "Paciente", columns: [
									{dataField: "pacienteNome", caption: "Nome", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "prontuario", caption: "Prontuário", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "dtNascimento", caption: "Data Nasc.", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "sexo", caption: "Sexo", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "nomeMae", caption: "Nome da Mãe", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "cpf", caption: "CPF", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "rg", caption: "RG", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "cns", caption: "CNS", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "telefone", caption: "Telefone", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "email", caption: "Email", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "enderecoLog", caption: "Endereço", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "enderecoBairro", caption: "Bairro", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "enderecoCidade", caption: "Cidade", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "enderecoEstado", caption: "Estado", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "enderecoCEP", caption: "CEP", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
								]},
								{dataField: "fontePagadora", caption: "Fonte Pagadora", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "convenio", caption: "Convênio", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "plano", caption: "Plano de Saúde", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "carteirinha", caption: "Carteirinha", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "solicitante", caption: "Médico Solicitante", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{caption: "Procedimento", columns: [
									{dataField: "codigoTISS", caption: "Código(Guia TISS)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "descricaoTISS", caption: "Descrição (Guia TISS)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "grupoSubGrupoItem", caption: "Grupo/Subgrupo do Item", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "codigoAlpha", caption: "Código (Item Cobrável)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "descricaoAlpha", caption: "Descrição (Item Cobrável)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "centroCusto", caption: "Centro de Custo", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "medicoAgendamento", caption: "Médico Agendamento", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "custodoItem", caption: "Custo do Item", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									}
								]},									
								{caption: "Composto", columns: [
									{dataField: "compostoCodigoTISS", caption: "Código(Guia TISS)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "compostoDescricaoTISS", caption: "Descrição (Guia TISS)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									/*{dataField: "compostoGrupoSubGrupoItem", caption: "Grupo/Subgrupo do Item", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},*/
									{dataField: "compostoCodigoAlpha", caption: "Código (Item Cobrável)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "compostoDescricaoAlpha", caption: "Descrição (Item Cobrável)", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "compostoCentroCusto", caption: "Centro de Custo", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "compostoValorUnitario", caption: "R$ Unitário", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "compostoCustodoItem", caption: "Custo do Item", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									}
								]},									
								{dataField: "nomeAcordo", caption: "Nome Acordo Comercial", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "tabelaAcordo", caption: "Tabela Comercial", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "qtde", caption: "Qtd.", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "valorUnitario", caption: "R$ Unitário", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "valorTotal", caption: "R$ Total", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "valorPago", caption: "R$ Pago", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "formaPagamento", caption: "Forma de Pagamento", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "dataPagamento", caption: "Data do Pagamento", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{dataField: "statusPagamento", caption: "Status Pagamento", width: 155, lookup: {
		              dataSource: function(options) { 
		              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
		              },valueExpr: "id", displayExpr: "text"}
								},
								{caption: "Lote", columns: [
									{dataField: "numLote", caption: "Número", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "periodoLoteFat", caption: "Período de Faturamento", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "statusLote", caption: "Status Lote", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
								]},
								{caption: "Nota Fiscal", columns: [
									{dataField: "numNF", caption: "Número", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "numRPS", caption: "No. RPS", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "dtEmissaoNF", caption: "Emissão", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "dtVencimentoNF", caption: "Vencimento", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "valorNF", caption: "R$", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									},
									{dataField: "valorImpostoNF", caption: "R$ Imposto", width: 155, lookup: {
			              dataSource: function(options) { 
			              	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
			              },valueExpr: "id", displayExpr: "text"}
									}
								]},	
							]}
						],
						onEditingStart: function(e) {
							if (e.column.dataField == "relatorio") {
								if (e.key) e.cancel = true;
								return
							}
							if (e.column.dataField == "toolbar" || e.column.dataField == "filtros") {
								if (e.key == "FATExtratoFaturamento") e.cancel = true;
								return;
							}							
							if (!e.data.relatorio) e.cancel = true;
						},
						editing: { mode: "cell", allowAdding: true, allowUpdating: true, allowDeleting: true, useIcons: true },
						columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						hoverStateEnabled: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 545
					});
					e.append(conteudo);
				}
			});
		
			$(document).ready(function () {
				if (!exibirFiltros) {
					listarRelatorio();
				}
			});
		</script>
	</body>
</html>
