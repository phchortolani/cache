<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
<script language="Cache" runat="server">
    do ^WWWVAR

	set YUSER = $get(%request.Data("YUSER", 1))
    set YBED = $get(%request.Data("YBED", 1))
    set YM = $get(%request.Data("YM", 1))
    set YLOCATION = $get(%request.Data("YLOCATION", 1))

    set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
    set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
    set PageName = %request.PageName
    set app = %request.Application
    set host = %request.CgiEnvs("HTTP_HOST")
    set url = "http://"_host_app

    set URLPreparacao = "VAR.CSP.WorkFlowAtendimento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
    set URLLogin = "COMLogin.cls"
    set URLLink = "www.cls"

    set nomeLocal = YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)
	//
	
	set ultimoCid = $get(^zzVARWorkFlowTemp(0,YBED,1))
    //Verifica se a sessão
    set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
</script>

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Cadastro de WorkFlow</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

    <!-- Custom Elements -->
    <link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
    <link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
    <link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

    <link type="text/css" rel="stylesheet" href="#(YGIF)#fonts/googlesans/googlesans.css">
    <!-- DevExtreme themes -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.css" />
    
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />

    
    
    <!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <style>
    
.first-group,
.second-group {
    padding: 10px;
}

</style>

</head>
    <script type="text/javascript">

        var status = '#(status)#';
        var URLLogin = '#(URLLogin)#';
        var ygif = '#(YGIF)#'

        if (status == 0) {
            alert('#(YBED_" - "_YUSER)#Usuário não está logado ou a sessão expirou.')
            window.location.replace(URLLogin)
        }

    </script>

<body>
<div id="toolbar"></div>
<div id="divForm"></div>
<div id="openPopupEstagio"></div>
<div id="openPopupCondicao"></div>
<div id="openPopupPontuacao"></div>
<div id="openPopupPontuacaoCondicao"></div>
<div id="openPopupPontuacaoCondicao2"></div>
<div id="openPopupSugestoes"></div>

<div id="openPopupDiagnostico"></div>
<div id="openPopupCondicaoDiagnostico"></div>
    <!-- REQUIRED JS SCRIPTS -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

	<!-- JSZip library -->
	<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

    <!-- A DevExtreme library -->
    <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>
    
    <!-- DevExtreme-Intl module -->
    <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>
    
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

    <!--Definições globais e criação de funcionalidades encapsuladas-->
    <script type="text/javascript">
        //Deixando variáveis disponíveis no cliente
        var urlPreparacao = '#(URLPreparacao)#';
        var urlLink = '#(URLLink)#';
        var YBED = '#(YBED)#';
        var YUSER = '#(YUSER)#';
        var YLOCATION = '#(YLOCATION)#';
        var nomeLocal = '#(nomeLocal)#';
		var codCID = ""
 		var codImagem = ""
 		var method = ""
		var prepareSearchInputs = (function () {
			// Prepara o formulário
			dados = ""

		 	toolBar = $("#toolbar").dxToolbar({
		        items: [{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "save",
				        hint	: "Salvar os Dados",
				        type	: "success",
				        stylingMode : "contained",
				        onClick	: function(){salvarDados()}
			        }
		        },{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "remove",
				        hint	: "Excluír os Dados",
				        type	: "danger",
				        stylingMode : "contained",
				        onClick	: function(){removerDados()}
			        }
		        },{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "save",
				        hint	: "Salvar os Dados",
				        type	: "success",
				        stylingMode : "contained",
				        onClick	: function(){salvarDadosEstadiamento()}
			        }
		        },{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "remove",
				        hint	: "Excluír os Dados",
				        type	: "danger",
				        stylingMode : "contained",
				        onClick	: function(){removerDadosEstadiamento()}
			        }
		        }, {
		            location: "after",
		            widget: "dxButton",
		            options: {
		                icon: "save",
		                hint: "Salvar os Dados",
		                type: "success",
		                stylingMode: "contained",
		                onClick: function () { salvarDadosDiagnostico() }
		            }
		        }, {
		            location: "after",
		            widget: "dxButton",
		            options: {
		                icon: "remove",
		                hint: "Excluír os Dados",
		                type: "danger",
		                stylingMode: "contained",
		                onClick: function () { removerDadosDiagnostico() }
		            }
		        },{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "fa fa-eraser",
				        hint	: "Limpar os Campos",
				        type	: "default",
				        stylingMode : "contained",
				        onClick	: function(){
					        formGeral.option("formData",{})
					    }
			        }
		        }]
		    }).dxToolbar("instance")
		 
		 
			formulario = $("#divForm").dxForm({
				activeStateEnabled:true,
		        items: [{
		            itemType: "group",
		            cssClass: "first-group",
		            colCount: 5,
		            items: [{
			            colSpan		: 2,
	                    dataField	: "cid",
						editorOptions: {
	                        width: "80%"
	                    },
						validationRules: [{
		                    type: "required"
		                }],				   
		                editorType: "dxSelectBox",
		            	editorOptions: {
							itemTemplate: function (data, itemIndex, element) {
								if (CategoriaAnt != data.Categoria){
									retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
									CategoriaAnt = data.Categoria
									element.append(retorno)
								}
								return element.append(data.Descricao)
					        },							
					        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
				                byKey: function(args) {
					                CategoriaAnt = ""
				                    return $.getJSON(urlPreparacao,{
					                    method:"getCID",
					                    codigo: args
					                });
				                },
					            load: function(args) {
						            CategoriaAnt = ""
				                    return $.getJSON(urlPreparacao,{
					                    method:"getCID",
			                        	usuario: YBED,
			                        	skip:args.skip,
			                        	take:args.take,
			                        	searchValue:args.searchValue
					                });
					                }
					            })
					        }),
							onValueChanged: function(e) {
								carregaWF(e.value)
							}
		            	}
	                },{
		                colSpan: 3,
	                    dataField	: "descricao",
	                    label		: {
							text	: "Descrição"
						},
	                }]
		        },{
			        cssClass: "second-group",
					itemType: "tabbed",
	                name 	: "abas",
	                
					tabPanelOptions: {
						onOptionChanged: function(e){
							if (e.name!="selectedItem"){
								return
							}
							if (e.value.title=="Estadiamento"){
		                        toolBar.option("items")[0].visible = false;
		                        toolBar.option("items")[1].visible = false;
		                        toolBar.option("items")[2].visible = true;
		                        toolBar.option("items")[3].visible = true;
		                        toolBar.option("items")[4].visible = false;
		                        toolBar.option("items")[5].visible = false;
							}else if (e.value.title == "Diagnóstico") {
		                        toolBar.option("items")[0].visible = false;
		                        toolBar.option("items")[1].visible = false;
		                        toolBar.option("items")[2].visible = false;
		                        toolBar.option("items")[3].visible = false;
		                        toolBar.option("items")[4].visible = true;
		                        toolBar.option("items")[5].visible = true;
			                 }else{
		                        toolBar.option("items")[0].visible = true;
		                        toolBar.option("items")[1].visible = true;
		                        toolBar.option("items")[2].visible = false;
		                        toolBar.option("items")[3].visible = false;
		                        toolBar.option("items")[4].visible = false;
		                        toolBar.option("items")[5].visible = false;
							}
							toolBar.repaint()
						},
						selectedIndex: 0,
						deferRendering: false,
			   		},		
					tabs:[{
						title	: "WorkFlow",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='geral'>")
                   		}}],
					},{
						title	: "Estadiamento",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='estadiamento'>")
                   		}}],
					},{
						title	: "Diagnóstico",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='diagnostico'>")
                   		}}],
					},{
						title	: "Risco de Trombose",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='riscoTrombose'>")
                   		}}],
					}/*,{
						title	: "Sugestões Terapêuticas",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='sugTerapeutica'>")
                   		}}],
					},{
						title	: "Relatórios",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='relatorios'>")
                   		}}],
					}*/]
				}]
	        }).dxForm("instance")
	        
	        //
        });


	    function carregaWF(ccid){
            $.getJSON(urlPreparacao,{
                method:"GetCIDDescricao",
                codigo: ccid
            },function(retorno){
	            formGeral.getEditor("id").getDataSource().reload()
	            if ($("#treeViewId").dxTreeView("instance")){
	            	$("#treeViewId").dxTreeView("instance").getDataSource().reload()
	            }
	            formGeral.getEditor("predecessor").getDataSource().reload()
	            if ($("#treeViewPredecessor").dxTreeView("instance")){
		           $("#treeViewPredecessor").dxTreeView("instance").getDataSource().reload()
	            }
	            formGeral.option("disabled",false)
	            formulario.updateData("descricao",retorno.desc)
	        });
	    }
	    
		function carregaGeral(){
			dataSourceIDsValidacao = new DevExpress.data.DataSource({
	            store	: new DevExpress.data.CustomStore({
		        loadMode: "raw",
	            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	:"GetWorkFlows",
                        	cid		: formulario.option("formData").cid,
                        	tipo	: 1 // Tipo Numerico
		                });
	                }
	            })
	        })

			
			dataSourceIDs = new DevExpress.data.DataSource({
	            store	: new DevExpress.data.CustomStore({
		        loadMode: "raw",
		        key: "Codigo",
	            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	:"GetWorkFlows",
                        	cid		: formulario.option("formData").cid,
		                });
	                }
	            })
	        })
			
			dataSourcePredecessor = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            key: "Codigo",
		            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method	:"GetPredecessor",
	                        	usuario	: YBED,
	                        	cid		: formulario.option("formData").cid,
	                        	idAtual: formGeral.option("formData").id
			                });
		                }
		            })
	        })

			dataSourceOpcaoGrupo = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method	:"GetOpcaoGrupo",
	                        	cid		: formulario.option("formData").cid,
	                        	pred	: formGeral.option("formData").predecessor
			                });
		                }
		            })
	        })
			
			dataSourceValores = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
                byKey: function(args) {
                    return $.getJSON(urlPreparacao,{
	                    method	:"GetValores",
	                    codigo	: args
	                });
                },
	            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	:"GetValores",
                        	skip	:args.skip,
                        	take	:args.take,
                        	searchValue:args.searchValue,
		                });
	                }
	            })
	        })		
			dataSourceImagens = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            load: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetImagens",
		                });
		            }
		        })
			})

			dataSourceImagemArea = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            load: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetImagemArea",
		                	codImagem : formGeral.option("formData").imagem
		                });
		            }
		        })
			})

	        	
			dataSourceExames = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            byKey: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetExames",
		                    codigo	: args
		                });
		            },
		            load: function(args) {
			            tipo = formGeral.option("formData").tipo
			            tipoExame = 1
			            if (tipo==12) {
				            tipoExame = 3
			            }
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetExames",
		                	skip	:args.skip,
		                	take	:args.take,
		                	searchValue:args.searchValue,
		                	tipo	: tipoExame,
		                	filter	: JSON.stringify(args.filter)
		                });
		            }
		        })
			})
			formGeral = $("#geral").dxForm({
				disabled	: true,
				activeStateEnabled:true,
				scrollingEnabled	: true,
			    height:function(){
					return window.innerHeight-190
				},
				colCount : 2,
				onFieldDataChanged	: function(obj){
					if (obj.value==undefined) {
						return
					}
					formGeral.beginUpdate()
					if (obj.dataField == "tipoReferencia"){
						if (obj.value=="2"){
							formGeral.itemOption("validacao.camposReferencia", "visible", true);
							formGeral.itemOption("validacao.numericoReferencia", "visible", false);
						}else{
							formGeral.itemOption("validacao.camposReferencia", "visible", false);
							formGeral.itemOption("validacao.numericoReferencia", "visible", true);
						}
					}
					if (obj.dataField == "composicao"){
						if (obj.value=="4"||obj.value=="7"||obj.value=="9"){
							formGeral.itemOption("valores.rotuloText", "visible", true);  
						}else{
							formGeral.itemOption("valores.rotuloText", "visible", false);  
						}
					}
					if (obj.dataField == "tipo"){
						formGeral.itemOption("icone","visible",false)
						if (obj.value==1||obj.value==15||obj.value==18){
							formGeral.itemOption("respPadrao","visible",false)
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false); 
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("somenteTexto", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);  
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);
							formGeral.itemOption("alertas", "visible", false)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("icone","visible",true)
						}else if (obj.value==4){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false);  
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("somenteTexto", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("textos", "visible", true);
							formGeral.itemOption("numericos", "visible", false) 
							formGeral.itemOption("alertas", "visible", false) 
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==5||obj.value==12){
							formGeral.itemOption("validacao", "visible", true);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", true);  
							formGeral.itemOption("imagem", "visible", false);  
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("somenteTexto", "visible", false);  
							formGeral.itemOption("nome", "visible", false);  
							formGeral.itemOption("valores", "visible", true);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan", 1);  
							formGeral.itemOption("unidadeExibicao", "visible", true);
							formGeral.itemOption("numericos", "visible", false) 
							formGeral.itemOption("alertas", "visible", false) 
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==3){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false);
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("somenteTexto", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores","visible", false);
							formGeral.itemOption("nome", "colSpan", 1);  
							formGeral.itemOption("exame", "colSpan", 2);  
							formGeral.itemOption("unidadeExibicao", "visible", true);
							formGeral.itemOption("numericos", "visible", true);
							formGeral.itemOption("alertas", "visible", true)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==7){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", true);  
							formGeral.itemOption("imagemArea", "visible", true);  
							formGeral.itemOption("somenteTexto", "visible", true);  
							formGeral.itemOption("nome", "visible", false);  
							formGeral.itemOption("valores","visible", false);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);  
							formGeral.itemOption("alertas", "visible", false);
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",false)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==9){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false);  
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("somenteTexto", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores","visible", false);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);  
							formGeral.itemOption("alertas", "visible", false) 
							formGeral.itemOption("opcoes", "visible", true) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==11){
							formGeral.itemOption("respPadrao","visible",true)
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false); 
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("somenteTexto", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);  
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);
							formGeral.itemOption("alertas", "visible", false)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
						}else{
							formGeral.itemOption("respPadrao","visible",false)
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false); 
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("somenteTexto", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);  
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);
							formGeral.itemOption("alertas", "visible", false)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
						}				
					}
					if (obj.dataField == "composicao"&&obj.value!=""){
						if (obj.value==1||obj.value==2){
							formGeral.itemOption("numericos", "visible", true) 
							formGeral.itemOption("alertas", "visible", true) 
						}else{
							formGeral.itemOption("numericos", "visible", false) 
							formGeral.itemOption("alertas", "visible", false) 
						}				
					}
					formGeral.endUpdate()
					//formGeral.repaint()
				},
			    alignItemLabels	: false,
			    alignItemLabelsInAllGroups : false,
		        items: [{
			        colSpan 		: 2,
					colCount		: 4,
					itemType		: "group",
					items: [/*{
			            dataField	: "id",
	                    label		: {
							text	: "Código"
						},
			            colSpan		: 1,
			            editorType: "dxSelectBox",
			            editorOptions: {
			            	placeholder	: "+",
	        		        valueExpr	: "Codigo", 
							displayExpr	: "Descricao",
							searchEnabled: true,
							dataSource	: dataSourceIDs,
	                        onValueChanged: function(e){
		                        if (e.value){
			                    	dataSourcePredecessor.reload()
				                    $.getJSON(urlPreparacao,{
					                    method	:"GetWorkFlows",
					                    cid		: formulario.option("formData").cid,
					                    nseq	: e.value
					                },function(retorno){
						                formGeral.option("formData",retorno[0].dxForm)
						            });
		                        }

		                    }
			            }
					}/*,{
			            dataField: "predecessor",
	                    label		: {
							text	: "Grupo Predecessor"
						},
	                    editorType: "dxSelectBox",
	                    colSpan		: 2,
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourcePredecessor
			            },
					}*/{
			            dataField	: "id",
	                    label		: {
							text	: "Código"
						},
			            colSpan		: 1,
			            editorType: "dxDropDownBox",
			            editorOptions: {
			            	placeholder	: "+",
	        		        valueExpr	: "Codigo", 
							displayExpr	: "Descricao",
							dataSource	: makeAsyncDataSourceID(),
	                        onValueChanged: function(e){
		                        codigoSequencia = e.value
		                        if (codigoSequencia!=""){
				                    $.getJSON(urlPreparacao,{
					                    method	:"GetWorkFlows",
					                    cid		: formulario.option("formData").cid,
					                    sequencia	: ""+codigoSequencia
					                },function(retorno){
      			                    	dataSourcePredecessor.reload()
						                formGeral.option("formData",retorno[0].dxForm)
						            });
		                        }
		                    },
							contentTemplate: function(e){
					            var value = e.component.option("value"),
					                $treeView = $("<div id='treeViewId'>").dxTreeView({
					                    dataSource: e.component.option("dataSource"),
					                    dataStructure: "plain",
					                    keyExpr: "Codigo",
					                    parentIdExpr: "categoryId",
					                    selectionMode: "single",
					                    displayExpr: "Descricao",
					                    selectByClick: true,
					                    onContentReady: function(args){
					                        syncTreeViewSelection(args.component, value);
					                    },
					                    selectNodesRecursive: false,
					                    onItemSelectionChanged: function(args){
					                        var nodes = args.component.getNodes(),
					                            value = getSelectedItemsKeys(nodes);
					                        e.component.option("value", value);
					                    }
					                });
					            
					            treeView1 = $treeView.dxTreeView("instance");
					            
					            e.component.on("valueChanged", function(args){
					                syncTreeViewSelection(treeView1, args.value);
					            });
					            return $treeView;
					        }							
			            }
					},{
			            dataField: "predecessor",
	                    label		: {
							text	: "Grupo Predecessor"
						},
	                    editorType: "dxDropDownBox",
	                    colSpan		: 2,
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							showClearButton: true,
							dataSource: new DevExpress.data.CustomStore({
					            loadMode: "raw",
					            key: "Codigo",
					            load: function(args) {
					                return $.getJSON(urlPreparacao,{
					                    method	:"GetPredecessor",
					                	usuario	: YBED,
					                	cid		: formulario.option("formData").cid,
					                	idAtual: formGeral.option("formData").id
					                });
					            }
					       }),
							contentTemplate: function(e){
					            var value = e.component.option("value"),
					                $treeView = $("<div id='treeViewPredecessor'>").dxTreeView({
					                    dataSource: e.component.option("dataSource"),
					                    dataStructure: "plain",
					                    keyExpr: "Codigo",
					                    parentIdExpr: "categoryId",
					                    selectionMode: "single",
					                    displayExpr: "Descricao",
					                    selectByClick: true,
					                    onContentReady: function(args){
					                        syncTreeViewSelection(args.component, value);
					                    },
					                    selectNodesRecursive: false,
					                    onItemSelectionChanged: function(args){
					                        var nodes = args.component.getNodes(),
					                            value = getSelectedItemsKeys(nodes);
					                        e.component.option("value", value);
					                    }
					                });
					            
					            treeView2 = $treeView.dxTreeView("instance");
					            
					            e.component.on("valueChanged", function(args){
					                syncTreeViewSelection(treeView2, args.value);
					            });
					            
					            return $treeView;
					        }							
			            },
					},{
			            dataField: "opcaoGrupo",
	                    label		: {
							text	: "Opção no Grupo"
						},
						visible		: false,
	                    editorType: "dxSelectBox",
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceOpcaoGrupo
			            },
					},{
			            dataField: "sequ",
	                    label		: {
							text	: "Sequência na Tela"
						},
			            editorType	: "dxNumberBox"
			        },{
			            dataField	: "tipo",
	                    label		: {
							text	: "Tipo"
						},
	                    editorType	: "dxSelectBox",
						validationRules: [{
		                    type: "required"
		                }],				            
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
						            loadMode: "raw",
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
						                    method	:"GetTipos",
				                        	usuario	: YBED,
						                });
					                }
					            })
					        })
						}
			        },{
			            dataField	: "nome",
	                    label		: {
							text	: "Nome"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                			            
			            colSpan		: 2
					},{
			            dataField	: "exame",
	                    label		: {
							text	: "Exame"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                visible		: false,
			            colSpan		: 2,
	                    editorType	: "dxTagBox",
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceExames,
						
						}
					},{
			            dataField	: "informacaoPermanente",
	                    label		: {
							text	: "Informação Permanente"
						},
					    editorType	: "dxSwitch",
					    editorOptions : {
						    switchedOnText:"Sim",
						    switchedOffText:"Não",
					    },
					},{
			            dataField	: "exibirCampo",
	                    label		: {
							text	: "Exibir Campo"
						},
					    editorType	: "dxSelectBox",
						editorOptions: {
	        		        valueExpr: "codigo", 
							displayExpr: "descricao",
							searchEnabled: true,
							items: [{
								"codigo":0,
								"descricao":"Sempre"
							},{
								"codigo":1,
								"descricao":"Apenas na primeira consulta"
							},{
								"codigo":2,
								"descricao":"Exceto na primeira consulta"
							}]

						
						}
					},{
			            dataField	: "respPadrao",
			            visible		: false,
		                label		: {
							text	: "Resposta Padrão"
						},
		                editorType	: "dxSelectBox",
		                editorOptions:{
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: false,
	  						items: [{
								"codigo":"",
								"descricao":"Sem Resposta Padrão"
							},{
								"codigo":"1",
								"descricao":"Sim (permite alteração automática) "
							},{
								"codigo":"0",
								"descricao":"Não (permite alteração automática)"
							},{
								"codigo":"1.1",
								"descricao":"Sim (não permite alteração automática)"
							},{
								"codigo":"0.1",
								"descricao":"Não (não permite alteração automática)"
							}]
		                }
					},{
			            dataField	: "unidadeExibicao",
			            visible		: false,
		                label		: {
							text	: "Unidade de Exibição"
						},
		                editorType	: "dxTextBox",
					},{
			            dataField	: "grupo",
	                    label		: {
							text	: "Agrupamento"
						},
			            colSpan		: 2,
	                    editorType	: "dxTextBox"
					},{
			            dataField	: "imagem",
	                    label		: {
							text	: "Imagem"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                visible		: false,
			            colSpan		: 1,
	                    editorType	: "dxSelectBox",
						editorOptions: {
							onValueChanged: function(e){
								dataSourceImagemArea.reload()
							},
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceImagens,
						
						}
					},{
			            dataField	: "imagemArea",
	                    label		: {
							text	: "Área da Imagem"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                visible		: false,
			            colSpan		: 2,
	                    editorType	: "dxSelectBox",
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceImagemArea,
						
						}
					},{
			            dataField	: "somenteTexto",
	                    label		: {
							text	: "Exibir somente texto?"
						},
		                visible		: false,
			            colSpan		: 2,
					    editorType	: "dxSwitch",
					    editorOptions : {
						    switchedOnText:"Sim",
						    switchedOffText:"Não",
					    },
					}
		        ]
		    },{
			    colSpan 	: 2,
			    colCount	: 3,
				itemType	: "group",
                name		: "valores",
                caption		: "Composição de Valores na Tela",
                visible		: false,
                items: [{
		            dataField	: "composicao",
                    label		: {
						text	: "Composição"
					},
					validationRules: [{
	                    type: "required"
	                }],	
	                editorType	: "dxSelectBox",
					editorOptions: {
	    		        valueExpr: "Codigo", 
						displayExpr: "Descricao",
						searchEnabled: true,
						dataSource: dataSourceValores
					}
				},{
		            dataField	: "rotuloText",
		            visible		: false,
                    label		: {
						text	: "Rótulo do Campo Texto"
					},
                    editorType	: "dxTextBox",
				}]
			},{
				colCount	: 3,
				itemType	: "group",
                name		: "numericos",
                caption		: "Formatação do campo 'Número'",
                visible		: false,
				items: [{
		            dataField	: "menorPermitido",
                    label		: {
						text	: "Menor Valor"
					},
                    editorType	: "dxNumberBox",
				},{
		            dataField	: "maiorPermitido",
                    label		: {
						text	: "Maior Valor"
					},
                    editorType	: "dxNumberBox",
				},{
		            dataField	: "casasDecimais",
                    label		: {
						text	: "Casas Decimais"
					},
                    editorType	: "dxNumberBox",
				}],
			},{
				colCount	: 2,
				itemType	: "group",
                name		: "alertas",
                caption		: "Valores Númericos de Alerta para o Diagnóstico",
                visible		: false,
				items: [{
		            dataField	: "ResultadoMenorQue",
                    label		: {
						text	: "Alertar para Valores Menores Que"
					},
                    editorType	: "dxNumberBox"
				},{
		            dataField	: "ResultadoMaiorQue",
                    label		: {
						text	: "Alertar para Valores Maiores Que"
					},
                    editorType	: "dxNumberBox"
				}],
			},{
				colCount	: 2,
				itemType	: "group",
                name		: "textos",
                caption		: "Formatação do Campo 'Texto'",
                visible		: false,
				items: [{
		            dataField	: "maximoDeCaracteres",
                    label		: {
						text	: "Máximo de Caracteres"
					},
                    editorType	: "dxNumberBox",
				},{
		            dataField	: "alturaDoCampo",
                    label		: {
						text	: "Altura do Campo"
					},
                    editorType	: "dxNumberBox",
				}],
			},{
				colSpan		: 2,
				colCount	: 2,
				itemType	: "group",
                name		: "opcoes",
                caption		: "Opções Possíveis",
                visible		: false,
				items: [{
					colSpan		: 2,
		            dataField	: "opcoes",
                    label		: {
						text	: "Opções (Separar por '|')"
					},
                    editorType	: "dxTextBox",
				},{
		            dataField	: "permiteSelecionarMaisQueUm",
                    label		: {
						text	: "Permitir Seleção Multipla?"
					},
                    editorType	: "dxCheckBox",
				},{
		            dataField	: "respPadrao2",
                    label		: {
						text	: "Resposta Padrão (informar a posição)"
					}
				}],
			},{
				colSpan		: 2,
                name		: "icone",
                itemType	: "group",
                visible		: false,
                items:[{
		            dataField	: "icone",
	                label		: {
						text	: "Ícone"
					}
                }]
			},{
				colSpan		: 2,
				colCount	: 3,
				itemType	: "group",
                name		: "validacao",
                caption		: "Validações do Campo",
                visible		: false,
				items: [{
					colSpan		: 3,
		            dataField	: "legendaCondicao",
                    label		: {
						text	: "Legenda"
					}
				},{
		            dataField	: "valorCondicao",
                    label		: {
						text	: "Valor deve Ser"
					},
                    editorType	: "dxSelectBox",
					editorOptions: {
        		        valueExpr	: "codigo", 
						displayExpr	: "descricao",
						searchEnabled: false,
						items: [{
							"codigo":">",
							"descricao":"> (Maior que)"
						},{
							"codigo":"<",
							"descricao":"< (Menor que)"
						},{
							"codigo":"=",
							"descricao":"= (Igual a)"
						},{
							"codigo":"<>",
							"descricao":"<> (Diferente de)"
						}],
					}
				},{
		            dataField	: "tipoReferencia",
                    label		: {
						text	: "Tipo do Campo de Referência"
					},
                    editorType	: "dxSelectBox",
					editorOptions: {
        		        valueExpr	: "codigo", 
						displayExpr	: "descricao",
						searchEnabled: true,
						items: [{
							"codigo":"1",
							"descricao":"Numérico"
						},{
							"codigo":"2",
							"descricao":"Campo de Workflow"
						}],
						value	: "1"

					},
				},{
		            dataField	: "numericoReferencia",
		            visible		: true,
                    label		: {
						text	: "Valor de Referência"
					}
				},{
		            dataField	: "camposReferencia",
		            visible		: false,
                    label		: {
						text	: "Campos"
					},
		            editorType: "dxTagBox",
		            editorOptions: {
		            	placeholder	: "+",
        		        valueExpr	: "Codigo", 
						displayExpr	: "Descricao",
						searchEnabled: true,
						dataSource	: dataSourceIDsValidacao,
		            }
				}],
			}]
			}).dxForm("instance")
		}

   var makeAsyncDataSourceID = function(){
        return new DevExpress.data.CustomStore({
	        loadMode: "raw",
	        key: "Codigo",
	        load: function(args) {
                return $.getJSON(urlPreparacao,{
                    method	:"GetWorkFlows",
                	cid		: formulario.option("formData").cid,
                });
            }
        })
	};

   var makeAsyncDataSourcePredecessor = function(){
        return new DevExpress.data.CustomStore({
            loadMode: "raw",
            key: "Codigo",
            load: function(args) {
                return $.getJSON(urlPreparacao,{
                    method	:"GetPredecessor",
                	usuario	: YBED,
                	cid		: formulario.option("formData").cid,
                	idAtual: formGeral.option("formData").id
                });
            }
       })
	};

	    var syncTreeViewSelection = function(treeView, value){
	        if (!value) {
	            treeView.unselectAll();
	        } else {
	            treeView.selectItem(value);
	        }
	    };

	    var getSelectedItemsKeys = function(items) {
	        var result = [];
	        items.forEach(function(item) {
	            if(item.selected) {
	                result.push(item.key);
	            }
	            if(item.items.length) {
	                result = result.concat(getSelectedItemsKeys(item.items));
	            }
	        });
	        return result;
	    };
    
		function carregaEstadiamento(){
			dataSourceEstadiamento = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
				loadMode: "raw",
	            load: function(args) {
                    return $.getJSON(urlPreparacao,{
	                    method		: "getEstadiamento",
	                    cid			: formulario.option("formData").cid
	                });
	                }
	            })
	        })
	        
	        dataSourceGridEstadiamento = new DevExpress.data.DataSource({
		        store: new DevExpress.data.CustomStore({
			        remove	: function(args){
			            return $.getJSON(urlPreparacao,{
	    	            	method			: "removeEstagio",
	    	            	cid				: formulario.option("formData").cid,
	    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
	    	            	codEstagio		: args.codigo
	        	    	});
			        },
	        		load	: function(args) {
			            return $.getJSON(urlPreparacao,{
	    	            	method			: "recuperaEstagios",
	    	            	cid				: formulario.option("formData").cid,
	    	            	codEstadiamento	: estadiamento.option("formData").estadiamento
	        	    	});
		    		}	
				})
	        })

			estadiamento = $("#estadiamento").dxForm({
				activeStateEnabled:true,
				scrollingEnabled	: true,
		    	height	:function() {
					return window.innerHeight-190
				},
		        items: [{
	            	itemType: "group",
	            	colCount: 3,
		           	items:[{
			            dataField	: "estadiamento",
		                editorType: "dxSelectBox",
		            	editorOptions: {
					        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceEstadiamento,
							placeholder: "+",
							onValueChanged: function(e) {
								recuperaEstadiamento(e.value)
							}
		            	}
			        },{
				        colSpan		: 2,
			            dataField	: "descricao",
	                    label		: {
							text	: "Descrição"
						},
			            validationRules: [{ type: "required" }]
			        },{
				        colSpan		: 3,
			            dataField	: "observacoes",
	                    label		: {
							text	: "Observações"
						},
						editorType	: "dxTextArea",
						editorOptions: {
							heigth  : 80
						}
			        },{
				        colSpan		: 3,
	                    template	: function (data, itemElement) {
		                	itemElement.append("<div id='estadiamentoGrid'>")
               			}
			        }]
		        }]
			}).dxForm("instance")
			
			estadiamentoGrid = $("#estadiamentoGrid").dxDataGrid({
				dataSource:  dataSourceGridEstadiamento,
				columns:[{
					dataField	: "estagio",
					caption	 	: "Estágio",
					width		: "30%"
				},{
					dataField	: "grupoRisco",
					caption	 	: "Grupo de Risco"
				}],
				editing: {
		            mode: "cell",
		            allowDeleting: true,
                    useIcons: true,
		        },	
				selection: { mode: "single" },
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						abrePopupEstagio(selectedItems.selectedRowKeys[0].codigo)
					}
				},
				hoverStateEnabled: true,
				paging: { enabled: false },
		    	height	:function() {
					return window.innerHeight-240
				},
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				columnFixing: {
		            enabled: true
		        },
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fas fa-calculator",
							height: 36,
							text: "Abrir Pontuadores",
							hint: "Adicionar Cálculos de Pontuação",
							onClick: function(e) {
								abrePopupPontuacao("")
							}
						}
					},{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "add",
							height: 36,
							text: "Novo Estágio",
							hint: "Adicionar Estágio",
							onClick: function(e) {
								abrePopupEstagio("")
							}
						}
					})
				}				
			}).dxDataGrid("instance")
		}
		
		function abrePopupEstagio(cod){
			
			 if (!estadiamento.option("formData").estadiamento){
				 if (estadiamento.option("formData").descricao){
					if (!formulario.validate().isValid){
						DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
						return
					}
					if (!estadiamento.validate().isValid){
						DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
						return
					}
				  	dadosCabecalho = formulario.option("formData")
				  	dadosEstadiamento = estadiamento.option("formData")
		            $.getJSON(urlPreparacao,{
		                method		:"salvaDadosEstadiamentoTemp",
		                formulario	: JSON.stringify(dadosCabecalho),
		                estadiamento: JSON.stringify(dadosEstadiamento),
		                codEstagio	: cod
		            },function(retorno){
			            if (retorno.status==1){
							dataSourceEstadiamento.reload()
							estadiamento.updateData("estadiamento",retorno.codigo)
							abrePopupEstagio(cod)
							return
			            }

			        });
			        return
				 }else{
					 DevExpress.ui.notify("Selecione um Estadiamento", "warning", 4000);
					 return
				 }
				 return
			 }
			 if (cod==""){
	            $.getJSON(urlPreparacao,{
	                method		:"salvaDadosEstadiamentoCondicaoTemp",
	                estadiamento: estadiamento.option("formData").estadiamento,
	                estagio		: JSON.stringify({})
	            },function(retorno){
		            if (retorno.status==1){
						abrePopupEstagio(retorno.codigo)
						return
		            }

		        });
		        return
			 }
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Adicionar Estágio",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHiding	: function(){
			        estadiamentoGrid.clearSelection()
			    	dataSourceGridEstadiamento.reload()
			    }
		    }		
		    if ($("#openPopupEstagio").html()!=""){
		    	openPopupEstagioConteudo.dispose()
		    	openPopupEstagio.dispose()
		    }
   			$("#openPopupEstagio").html("<div id='openPopupEstagioConteudo'></div>")
			openPopupEstagio = $("#openPopupEstagio").dxPopup(popupOptions).dxPopup("instance")
			preparaPopupEstagio(cod)
		}		

		function abrePopupPontuacao(cod){
			 if (!estadiamento.option("formData").estadiamento){
				 if (estadiamento.option("formData").descricao){
					if (!formulario.validate().isValid){
						DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
						return
					}
					if (!estadiamento.validate().isValid){
						DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
						return
					}
				  	dadosCabecalho = formulario.option("formData")
				  	dadosEstadiamento = estadiamento.option("formData")
		            $.getJSON(urlPreparacao,{
		                method		:"salvaDadosEstadiamentoTemp",
		                formulario	: JSON.stringify(dadosCabecalho),
		                estadiamento: JSON.stringify(dadosEstadiamento),
		            },function(retorno){
			            if (retorno.status==1){
							dataSourceEstadiamento.reload()
							estadiamento.updateData("estadiamento",retorno.codigo)
							abrePopupPontuacao(retorno.codigo)
							return
			            }

			        });
			        return
				 }else{
					 DevExpress.ui.notify("Selecione um Estadiamento", "warning", 4000);
					 return
				 }
			 }
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Adicionar Pontuação",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHiding	: function(){
			        pontuacaoGrid.clearSelection()
			    	dataSourcePontuacaoGrid.reload()
			    }
		    }		
		    if ($("#openPopupPontuacao").html()!=""){
		    	openPopupPontuacaoConteudo.dispose()
		    	openPopupPontuacao.dispose()
		    }
   			$("#openPopupPontuacao").html("<div id='openPopupPontuacaoConteudo'></div>")
			openPopupPontuacao = $("#openPopupPontuacao").dxPopup(popupOptions).dxPopup("instance")
			preparaPopupPontuacao()
		}		

		function preparaPopupPontuacao(){
			$.getJSON(urlPreparacao,{
            	method			: "getPontuacao",
            	cid				: formulario.option("formData").cid,
            	codEstadiamento	: estadiamento.option("formData").estadiamento
	    	},function(retorno){
		        openPopupPontuacaoConteudo = $("#openPopupPontuacaoConteudo").dxForm({
			        //formData : retorno,
					activeStateEnabled:true,
					scrollingEnabled	: true,
			    	height	:function() {
						return window.innerHeight-190
					},
			        items: [{
				        colCount : 2,
		            	itemType: "group",
			           	items:[{
					        colSpan		: 2,
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='pontuacaoGrid'>")
	               			}
				        }]
			        }]
				}).dxForm("instance")

		        dataSourcePontuacaoGrid = new DevExpress.data.DataSource({
			        store: new DevExpress.data.CustomStore({
		        		remove: function(args) {
				            return $.getJSON(urlPreparacao,{
		    	            	method			: "removePontuacao",
		    	            	cid				: formulario.option("formData").cid,
		    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
		    	            	codPontuacao	: args.codPontuacao
		        	    	});
			    		},
		        		load: function(args) {
				            return $.getJSON(urlPreparacao,{
		    	            	method			: "recuperaPontuacao",
		    	            	cid				: formulario.option("formData").cid,
		    	            	codEstadiamento	: estadiamento.option("formData").estadiamento
		        	    	});
			    		}	
					})
		        })

				pontuacaoGrid = $("#pontuacaoGrid").dxDataGrid({
					dataSource:  dataSourcePontuacaoGrid,
					columns:[{
						dataField	: "nomePontuacao",
						caption	 	: "Descrição"
					},{
						dataField	: "pontuacao",
						caption	 	: "Pontuação"
					}],
					editing: {
			            mode: "cell",
			            allowDeleting: true,
	                    useIcons: true,
			        },	
					selection: { mode: "single" },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							
							cod = selectedItems.selectedRowKeys[0].codPontuacao
							openPopupPontuacaoConteudo.updateData("codPontuacao",cod)
							abrePopupPontuacaoCondicao(cod)
						}
					},
					hoverStateEnabled: true,
					paging: { enabled: false },
			    	height	:function() {
						return window.innerHeight-200
					},
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								height: 36,
								text: "Nova Pontuação",
								hint: "Adicionar Pontuação",
								onClick: function(e) {
									openPopupPontuacaoConteudo.updateData("codPontuacao","")
									abrePopupPontuacaoCondicao("")
								}
							}
						})
					}				
				}).dxDataGrid("instance")
	    	})
			
			
		}

		function abrePopupPontuacaoCondicao(cod){
			 if (!openPopupPontuacaoConteudo.option("formData").codPontuacao){
	            $.getJSON(urlPreparacao,{
	                method		:"salvaDadosPontuacaoTemp",
	                codEstadiamento: estadiamento.option("formData").estadiamento,
	                pontuacao	: JSON.stringify(openPopupPontuacaoConteudo.option("formData"))
	            },function(retorno){
		            console.log(retorno)
		            if (retorno.status==1){
			            dataSourcePontuacaoGrid.reload()
						openPopupPontuacaoConteudo.updateData("codPontuacao",retorno.codigo)
						abrePopupPontuacaoCondicao(retorno.codigo)
						return
		            }

		        });
		        return
			 }
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Adicionar Condição",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHiding : function(){
			        pontuacaoGrid.clearSelection()
			    	dataSourcePontuacaoGrid.reload()
			    }
		    }		
		    if ($("#openPopupPontuacaoCondicao").html()!=""){
		    	openPopupPontuacaoCondicaoConteudo.dispose()
		    	openPopupPontuacaoCondicao.dispose()
		    }
   			$("#openPopupPontuacaoCondicao").html("<div id='openPopupPontuacaoCondicaoConteudo'></div>")
			openPopupPontuacaoCondicao = $("#openPopupPontuacaoCondicao").dxPopup(popupOptions).dxPopup("instance")
			preparaPopupPontuacaoCondicao(cod)
		}		
		

		function preparaPopupPontuacaoCondicao(cod){
			method = "GetWorkFlowsCondicao"
			dataSourceCamposWF = new DevExpress.data.DataSource({
	            store	: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	: method,
		                	cid		: formulario.option("formData").cid,
		                });
	                }
	            })
	        })
			$.getJSON(urlPreparacao,{
				method	 		:"recWorkFlowsPontuacao",
            	cid				: formulario.option("formData").cid,
            	codEstadiamento	: estadiamento.option("formData").estadiamento,
            	codCondicao		: cod
			},function(retorno){
		        openPopupPontuacaoCondicaoConteudo = $("#openPopupPontuacaoCondicaoConteudo").dxForm({
			        formData : retorno,
					activeStateEnabled	: true,
					scrollingEnabled	: true,
					onFieldDataChanged	: function(obj){
			            $.getJSON(urlPreparacao,{
	    	            	method			: "salvaDadosPontuacaoTemp",
	    	            	cid				: formulario.option("formData").cid,
	    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
	    	            	pontuacao		: JSON.stringify(obj.component.option("formData"))
	        	    	},function(retorno){
		        	    	if (retorno.status==1){
		        	    		obj.component.updateData("codCondicao",retorno.codigo)
		        	    	}
		        	   	});
					},				
			        items: [{
		            	itemType	: "group",
		            	colCount	: 2,
			           	items:[{
				            dataField	: "nomePontuacao",
		                    label		: {
								text	: "Descrição"
							},
				        },{
				            dataField	: "pontuacao",
		                    label		: {
								text	: "Pontuação"
							},
				        },{
					        colSpan		: 2,
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='addPontuacaoCondicaoGrid'>")
	               			}
				        }]
			        }]
				}).dxForm("instance")

		        dataSourcePontuacaoCondicaoGrid = new DevExpress.data.DataSource({
			        store: new DevExpress.data.CustomStore({
				        remove	: function(args) {
					            console.log(args)
				            return $.getJSON(urlPreparacao,{
		    	            	method			: "removePontuacaoCondicao",
		    	            	cid				: formulario.option("formData").cid,
		    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
		    	            	codPontuacao	: openPopupPontuacaoConteudo.option("formData").codPontuacao,
		    	            	codSeqOr		: args.codSeqOr
		        	    	});
				        },
		        		load	: function(args) {
				            return $.getJSON(urlPreparacao,{
		    	            	method			: "recuperaPontuacaoCondicao",
		    	            	cid				: formulario.option("formData").cid,
		    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
		    	            	codPontuacao	: openPopupPontuacaoConteudo.option("formData").codPontuacao
		        	    	});
			    		}	
					})
		        })

				addPontuacaoCondicaoGrid = $("#addPontuacaoCondicaoGrid").dxDataGrid({
					dataSource:  dataSourcePontuacaoCondicaoGrid,
					columns:[{
						dataField	: "condicao",
						caption	 	: "Condições (Basta cumprir uma das condições)"
					}],
					wordWrapEnabled:true,
					editing: {
			            mode: "cell",
			            allowDeleting: true,
	                    useIcons: true,
			        },	
					selection: { mode: "single" },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							codSeqOr = selectedItems.selectedRowKeys[0].codSeqOr
							abrePopupPontuacaoCondicao2(codSeqOr)
						}
					},
					hoverStateEnabled: true,
					paging: { enabled: false },
			    	height	:function() {
						return window.innerHeight-200
					},
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								height: 36,
								text: "Nova Condição",
								hint: "Adicionar Condição",
								onClick: function(e) {
									abrePopupPontuacaoCondicao2("")
								}
							}
						})
					}					
				}).dxDataGrid("instance")

			})			
			

			
		}



		function abrePopupPontuacaoCondicao2(cod){
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Adicionar Condição (Deve atender todas as condições abaixo para que a pontuação se aplique)",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHiding : function(){
			        addPontuacaoCondicaoGrid.clearSelection()
			    	dataSourcePontuacaoCondicaoGrid.reload()
			    }
		    }		
		    if ($("#openPopupPontuacaoCondicao2").html()!=""){
		    	openPopupPontuacaoCondicaoConteudo2.dispose()
		    	openPopupPontuacaoCondicao2.dispose()
		    }
   			$("#openPopupPontuacaoCondicao2").html("<div id='openPopupPontuacaoCondicaoConteudo2'></div>")
			openPopupPontuacaoCondicao2 = $("#openPopupPontuacaoCondicao2").dxPopup(popupOptions).dxPopup("instance")
			preparaPopupPontuacaoCondicao2(cod)
		}		
		

		function preparaPopupPontuacaoCondicao2(cod){
			method = "GetWorkFlowsCondicao"
			dataSourceCamposWF = new DevExpress.data.DataSource({
	            store	: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	: method,
		                	cid		: formulario.option("formData").cid,
		                });
	                }
	            })
	        })
	        openPopupPontuacaoCondicaoConteudo2 = $("#openPopupPontuacaoCondicaoConteudo2").dxForm({
				activeStateEnabled	: true,
				scrollingEnabled	: true,
				formData: {
					codPontuacaoOr	: cod
				},
				onFieldDataChanged	: function(obj){
					if (obj.value==undefined) {
						return
					}
					if (obj.dataField == "tipo"){
						obj.component.updateData("campo","")
						if (obj.value==0){
							method = "GetWorkFlowsCondicao"
							dataSourceCamposWF.reload()
						}else if (obj.value==1){
							method = "GetEstadiamentosCondicao"
							dataSourceCamposWF.reload()
						}else{
							method = "GetPacientesCondicao"
							dataSourceCamposWF.reload()
						}
					}
				},				
		        items: [{
	            	itemType	: "group",
	            	colCount	: 10,
		           	items:[{
			           	colSpan		: 5,
			            dataField	: "nseq",
	                    label		: {
							text	: "Sequência"
						},
	                    editorType	: "dxTextBox",
						editorOptions: {
							disabled	: true,
							placeholder	: "+"
						}
			        },{
			           	colSpan		: 5,
			            dataField	: "tipo",
	                    label		: {
							text	: "Tipo de Campo"
						},
	                    editorType	: "dxSelectBox",
						editorOptions: {
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: true,
							items: [{
								"codigo":0,
								"descricao":"Workflow"
							},{
								"codigo":1,
								"descricao":"Estadiamentos"
							},{
								"codigo":2,
								"descricao":"Dados do Paciente"
							}],
						}
			        },{
			           	colSpan		: 10,
			            dataField	: "campo",
	                    label		: {
							text	: "Campo"
						},
						validationRules: [{
		                    type: "required"
		                }],				   
	                    editorType	: "dxTagBox",
						editorOptions: {
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: true,
							dataSource: dataSourceCamposWF,
						}
			        },{
				        colSpan		: 3,
			            dataField	: "comparador",
	                    label		: {
							text	: "Comparador"
						},
						validationRules: [{
		                    type: "required"
		                }],				   
	                    editorType	: "dxSelectBox",
						editorOptions: {
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: true,
							items: [{
								"codigo":">",
								"descricao":"> (Maior que)"
							},{
								"codigo":"<",
								"descricao":"< (Menor que)"
							},{
								"codigo":"=",
								"descricao":"= (Igual a)"
							},{
								"codigo":"<>",
								"descricao":"<> (Diferente de)"
							}],
						}
			        },{
				        colSpan		: 2,
			            dataField	: "valor",
	                    label		: {
							text	: "Valor"
						},
	                    editorType	: "dxNumberBox",
			        },{
				        colSpan		: 5,
			            dataField	: "legenda",
	                    label		: {
							text	: "Legenda"
						}
	                    
			        },{
				        colSpan	: 10,
						itemType: "button",
						horizontalAlignment: "right",
			            buttonOptions: {
					        stylingMode: "contained",
					        icon: "add",
					        type: "success",
					        hint: "Adicionar",
					        text: "Adicionar",
					        onClick: function() {
								if (!openPopupPontuacaoCondicaoConteudo2.validate().isValid){
									DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
									return
								}
								dados = openPopupPontuacaoCondicaoConteudo2.option("formData")
								$.getJSON(urlPreparacao,{
									method	 		:"addPontuacaoCondicao",
			    	            	cid				: formulario.option("formData").cid,
			    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
			    	            	codPontuacao	: openPopupPontuacaoConteudo.option("formData").codPontuacao,
									dados			: JSON.stringify(dados)
								},function(retorno){
									if (retorno.status==1){
										DevExpress.ui.notify("Condição adicionada com Sucesso!", "success", 4000);
										dataSourcePontuacaoCondicaoGrid2.reload()
										addPontuacaoCondicaoGrid2.clearSelection()
										openPopupPontuacaoCondicaoConteudo2.resetValues()
										openPopupPontuacaoCondicaoConteudo2.updateData("codPontuacaoOr",retorno.codPontuacaoOr)
									}
								});
					        }
			            }								
			        },{
				        colSpan		: 10,
	                    template	: function (data, itemElement) {
		                	itemElement.append("<div id='addPontuacaoCondicaoGrid2'>")
               			}
			        }]
		        }]
			}).dxForm("instance")

	        dataSourcePontuacaoCondicaoGrid2 = new DevExpress.data.DataSource({
		        store: new DevExpress.data.CustomStore({
			        remove	: function(args) {
			            return $.getJSON(urlPreparacao,{
	    	            	method			: "removePontuacaoCondicao2",
	    	            	cid				: formulario.option("formData").cid,
	    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
	    	            	codPontuacao	: openPopupPontuacaoConteudo.option("formData").codPontuacao,
	    	            	codPontuacaoOr	: openPopupPontuacaoCondicaoConteudo2.option("formData").codPontuacaoOr,
	    	            	codSeq			: args.nseq
	        	    	});
			        },
	        		load	: function(args) {
			            return $.getJSON(urlPreparacao,{
	    	            	method			: "recuperaPontuacaoCondicao2",
	    	            	cid				: formulario.option("formData").cid,
	    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
	    	            	codPontuacao	: openPopupPontuacaoConteudo.option("formData").codPontuacao,
	    	            	codPontuacaoOr	: openPopupPontuacaoCondicaoConteudo2.option("formData").codPontuacaoOr,
	        	    	});
		    		}	
				})
	        })

			addPontuacaoCondicaoGrid2 = $("#addPontuacaoCondicaoGrid2").dxDataGrid({
				dataSource:  dataSourcePontuacaoCondicaoGrid2,
				columns:[{
					dataField	: "nseq",
					caption	 	: "Sequência",
					width		: "80px"
				},{
					dataField	: "descTipo",
					caption	 	: "Tipo de Campo",
					width		: "80px"
				},{
					dataField	: "descCampo",
					caption	 	: "Campo"
				},{
					dataField	: "comparador",
					caption	 	: "Comparador",
					width		: "80px"
				},{
					dataField	: "valor",
					caption	 	: "Valor",
					width		: "80px"
				},{
					dataField	: "legenda",
					caption	 	: "Legenda",
					width		: "150px"
				}],
				wordWrapEnabled:true,
				editing: {
		            mode: "cell",
		            allowDeleting: true,
                    useIcons: true,
		        },	
				selection: { mode: "single" },
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						var dados = selectedItems.selectedRowsData[0].form
						openPopupPontuacaoCondicaoConteudo2.updateData("nseq",dados.nseq)
						openPopupPontuacaoCondicaoConteudo2.updateData("tipo",dados.tipo)
						openPopupPontuacaoCondicaoConteudo2.updateData("campo",dados.campo)
						openPopupPontuacaoCondicaoConteudo2.updateData("comparador",dados.comparador)
						openPopupPontuacaoCondicaoConteudo2.updateData("legenda",dados.legenda)
						openPopupPontuacaoCondicaoConteudo2.updateData("valor",dados.valor)
					}
				},
				hoverStateEnabled: true,
				paging: { enabled: false },
		    	height	:function() {
					return window.innerHeight-200
				},
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
			}).dxDataGrid("instance")

		}


		function abrePopupCondicao(cod){
			 if (!openPopupEstagioConteudo.option("formData").codEstagio){
				 if (!openPopupEstagioConteudo.option("formData").codEstagio){
		            $.getJSON(urlPreparacao,{
		                method		:"salvaDadosEstadiamentoCondicaoTemp",
		                estadiamento: estadiamento.option("formData").estadiamento,
		                estagio		: JSON.stringify(openPopupEstagioConteudo.option("formData"))
		            },function(retorno){
			            if (retorno.status==1){
				            dataSourceGridEstadiamento.reload()
							openPopupEstagioConteudo.updateData("codEstagio",retorno.codigo)
							abrePopupCondicao("")
							return
			            }

			        });
			        return
				 }else{
					 DevExpress.ui.notify("Informe o Nome do Estágio", "warning", 4000);
					 return
				 }
			 }
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Adicionar Condição (Deve atender todas as condições abaixo para que a regra se aplique)",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHiding : function(){
			        estadiamentoCondicoesGrid.clearSelection()
			    	dataSourceCondicoesGridEstadiamento.reload()
			    }
		    }		
		    if ($("#openPopupCondicao").html()!=""){
		    	openPopupCondicaoConteudo.dispose()
		    	openPopupCondicao.dispose()
		    }
   			$("#openPopupCondicao").html("<div id='openPopupCondicaoConteudo'></div>")
			openPopupCondicao = $("#openPopupCondicao").dxPopup(popupOptions).dxPopup("instance")
			preparaPopupCondicao(cod)
		}		
		
		function preparaPopupEstagio(cod){
			$.getJSON(urlPreparacao,{
            	method			: "getEstagio",
            	cid				: formulario.option("formData").cid,
            	codEstadiamento	: estadiamento.option("formData").estadiamento,
            	codEstagio		: cod
	    	},function(retorno){
		    	console.log(retorno)
		        openPopupEstagioConteudo = $("#openPopupEstagioConteudo").dxForm({
			        formData : retorno,
			        onFieldDataChanged	: function(obj){
				        console.log(obj.component.option("formData"))
			            $.getJSON(urlPreparacao,{
			                method		:"salvaDadosEstadiamentoCondicaoTemp",
			                estadiamento: estadiamento.option("formData").estadiamento,
			                estagio		: JSON.stringify(obj.component.option("formData"))
			            });
			        },			        
					activeStateEnabled:true,
					scrollingEnabled	: true,
			    	height	:function() {
						return window.innerHeight-190
					},
			        items: [{
				        colCount : 2,
		            	itemType: "group",
			           	items:[{
				            dataField	: "nomeEstagio",
		                    label		: {
								text	: "Nome do Estágio"
							},
				        },{
				            dataField	: "risco",
		                    label		: {
								text	: "Grupo de Risco"
							},
				        },{
					        colSpan		: 2,
				            dataField	: "observacoes",
		                    label		: {
								text	: "Observações"
							},
							editorType	: "dxTextArea"
				        },{
					        colSpan		: 2,
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='estadiamentoCondicoesGrid'>")
	               			}
				        }]
			        }]
				}).dxForm("instance")

		        dataSourceCondicoesGridEstadiamento = new DevExpress.data.DataSource({
			        store: new DevExpress.data.CustomStore({
		        		remove: function(args) {
				            return $.getJSON(urlPreparacao,{
		    	            	method			: "removeEstadiamentoCondicoes",
		    	            	cid				: formulario.option("formData").cid,
		    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
		    	            	codEstagio		: openPopupEstagioConteudo.option("formData").codEstagio,
		    	            	codCondicao		: args.codCondicao
		        	    	});
			    		},
		        		load: function(args) {
				            return $.getJSON(urlPreparacao,{
		    	            	method			: "recuperaEstadiamentoCondicoes",
		    	            	cid				: formulario.option("formData").cid,
		    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
		    	            	codEstagio		: openPopupEstagioConteudo.option("formData").codEstagio,
		        	    	});
			    		}	
					})
		        })

				estadiamentoCondicoesGrid = $("#estadiamentoCondicoesGrid").dxDataGrid({
					dataSource:  dataSourceCondicoesGridEstadiamento,
					columns:[{
						dataField	: "condicao",
						caption	 	: "Condições (Basta cumprir uma das condições)"
					}],
					wordWrapEnabled:true,
					editing: {
			            mode: "cell",
			            allowDeleting: true,
	                    useIcons: true,
			        },	
					selection: { mode: "single" },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							cod = selectedItems.selectedRowKeys[0].codCondicao
							abrePopupCondicao(cod)
						}
					},
					hoverStateEnabled: true,
					paging: { enabled: false },
			    	height	:function() {
						return window.innerHeight-240
					},
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								height: 36,
								text: "Nova Condição",
								hint: "Adicionar Condição",
								onClick: function(e) {
									abrePopupCondicao("")
								}
							}
						})
					}				
				}).dxDataGrid("instance")
	    	})
			
		}

		function preparaPopupCondicao(cod){
			method = "GetWorkFlowsCondicao"
			dataSourceCamposWF = new DevExpress.data.DataSource({
	            store	: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	:method,
		                	cid		: formulario.option("formData").cid,
		                	codEstadiamento	: estadiamento.option("formData").estadiamento,
		                });
	                }
	            })
	        })
	        openPopupCondicaoConteudo = $("#openPopupCondicaoConteudo").dxForm({
		        formData : {
			        "codCondicao" : cod
		        },
				onFieldDataChanged	: function(obj){
					if (obj.value==undefined) {
						return
					}
					if (obj.dataField == "tipo"){
						if (obj.value==0){
							method = "GetWorkFlowsCondicao"
							dataSourceCamposWF.reload()
						}else if (obj.value==1){
							method = "GetPontuadores"
							dataSourceCamposWF.reload()
						}
					}
				},				
				activeStateEnabled	: true,
				scrollingEnabled	: true,
		        items: [{
	            	itemType	: "group",
	            	colCount	: 10,
		           	items:[{
			           	colSpan		: 5,
			            dataField	: "nseq",
	                    label		: {
							text	: "Sequência"
						},
	                    editorType	: "dxTextBox",
						editorOptions: {
							disabled	: true,
							placeholder	: "+"
						}
			  		},{
			           	colSpan		: 5,
			            dataField	: "tipo",
	                    label		: {
							text	: "Tipo de Campo"
						},
	                    editorType	: "dxSelectBox",
						editorOptions: {
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: true,
							items: [{
								"codigo":0,
								"descricao":"Workflow"
							},{
								"codigo":1,
								"descricao":"Pontuadores"
							}],
						}
					},{
			           	colSpan		: 10,
			            dataField	: "legenda",
	                    label		: {
							text	: "Legenda"
						}
			        },{
			           	colSpan		: 6,
			            dataField	: "campo",
	                    label		: {
							text	: "Campo"
						},
						validationRules: [{
		                    type: "required"
		                }],				   
	                    editorType	: "dxTagBox",
						editorOptions: {
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: true,
							dataSource: dataSourceCamposWF,
						}
			        },{
				        colSpan		: 2,
			            dataField	: "comparador",
	                    label		: {
							text	: "Comparador"
						},
						validationRules: [{
		                    type: "required"
		                }],				   
	                    editorType	: "dxSelectBox",
						editorOptions: {
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: true,
							items: [{
								"codigo":">",
								"descricao":"> (Maior que)"
							},{
								"codigo":"<",
								"descricao":"< (Menor que)"
							},{
								"codigo":"=",
								"descricao":"= (Igual a)"
							},{
								"codigo":"<>",
								"descricao":"<> (Diferente de)"
							}],
						}
			        },{
				        colSpan		: 2,
			            dataField	: "valor",
	                    label		: {
							text	: "Valor"
						},
	                    editorType	: "dxNumberBox",
			        },{
				        colSpan	: 10,
						itemType: "button",
						horizontalAlignment: "right",
			            buttonOptions: {
					        stylingMode: "contained",
					        icon: "add",
					        type: "success",
					        hint: "Adicionar",
					        text: "Adicionar",
					        onClick: function() {
								if (!openPopupCondicaoConteudo.validate().isValid){
									DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
									return
								}
								dados = openPopupCondicaoConteudo.option("formData")
								$.getJSON(urlPreparacao,{
									method	 		:"addCondicao",
			    	            	cid				: formulario.option("formData").cid,
			    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
			    	            	codEstagio		: openPopupEstagioConteudo.option("formData").codEstagio,
			    	            	codCondicao		: openPopupCondicaoConteudo.option("formData").codCondicao,
									dados			: JSON.stringify(dados)
								},function(retorno){
									if (retorno.status==1){
										openPopupCondicaoConteudo.updateData("codCondicao",retorno.codCondicao)
										DevExpress.ui.notify("Condição adicionada com Sucesso!", "success", 4000);
										dataSourceAddCondicoesGridEstadiamento.reload()
										openPopupCondicaoConteudo.resetValues()
									}
								});
					        }
			            }								
			        },{
				        colSpan		: 10,
	                    template	: function (data, itemElement) {
		                	itemElement.append("<div id='estadiamentoAddCondicaoGrid'>")
               			}
			        }]
		        }]
			}).dxForm("instance")
			
	        dataSourceAddCondicoesGridEstadiamento = new DevExpress.data.DataSource({
		        store: new DevExpress.data.CustomStore({
			        remove	: function(args) {
			            return $.getJSON(urlPreparacao,{
	    	            	method			: "removeEstadiamentoAddCondicoes",
	    	            	cid				: formulario.option("formData").cid,
	    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
	    	            	codEstagio		: openPopupEstagioConteudo.option("formData").codEstagio,
	    	            	codCondicao		: openPopupCondicaoConteudo.option("formData").codCondicao,
	    	            	nseq			: args.nseq
	        	    	});
			        },
	        		load	: function(args) {
			            return $.getJSON(urlPreparacao,{
	    	            	method			: "recuperaEstadiamentoAddCondicoes",
	    	            	cid				: formulario.option("formData").cid,
	    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
	    	            	codEstagio		: openPopupEstagioConteudo.option("formData").codEstagio,
	    	            	codCondicao		: openPopupCondicaoConteudo.option("formData").codCondicao,
	        	    	});
		    		}	
				})
	        })

			estadiamentoAddCondicoesGrid = $("#estadiamentoAddCondicaoGrid").dxDataGrid({
				dataSource:  dataSourceAddCondicoesGridEstadiamento,
				columns:[{
					dataField	: "nseq",
					caption	 	: "Seq.",
					width		: "60px",
					alignment	: "center"
				},{
					dataField	: "campo",
					caption	 	: "Campo(s)"
				},{
					dataField	: "comparador",
					caption	 	: "Comp.",
					width		: "80px",
					alignment	: "center"
				},{
					dataField	: "valor",
					caption	 	: "Valor",
					width		: "80px",
					alignment	: "center"
				}],
				editing: {
		            mode: "cell",
		            allowDeleting: true,
                    useIcons: true,
		        },	
				selection: { mode: "single" },
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						dados = selectedItems.selectedRowKeys[0].form
						openPopupCondicaoConteudo.option("formData",dados)
					}
				},
				hoverStateEnabled: true,
				paging: { enabled: false },
		    	height	:function() {
					return window.innerHeight-350
				},
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true
			}).dxDataGrid("instance")

			
		}
		
		function recuperaEstadiamento(codigo){
            $.getJSON(urlPreparacao,{
                method: "getEstadiamento",
                cid	  : formulario.option("formData").cid,
                codigo: codigo
            },function(retorno){
				dataSourceGridEstadiamento.reload()
	            estadiamento.updateData("descricao",retorno[0].Descricao2)
	            estadiamento.updateData("observacoes",retorno[0].Observacoes)
	        });
		}
		
		function salvarDados(){
			if (!formulario.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
			if (!formGeral.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
		  	dadosCabecalho = formulario.option("formData")
		  	dadosGeral = formGeral.option("formData")
            $.post(urlPreparacao,{
                method		:"salvaDados",
                formulario	: JSON.stringify(dadosCabecalho),
                geral		: JSON.stringify(dadosGeral),
            },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	            if (retorno.status==1){
		            dataSourceImagens.reload()
		            dataSourceImagemArea.reload()
		            dataSourceExames.pageIndex(0)
		            dataSourceExames.reload()
		            formGeral.getEditor("predecessor").getDataSource().reload()
		            formGeral.getEditor("id").getDataSource().reload()
		            //dataSourceIDs.reload()
		            //dataSourcePredecessor.reload()
		            formGeral.updateData("id","")
		            formGeral.updateData("sequ","")
		            formGeral.updateData("tipo","")
		            formGeral.updateData("nome","")
		            formGeral.updateData("informacaoPermanente",0)
		            formGeral.updateData("exibirCampo",0)
		            
	            }

	        },'json');
			
		}

		function removerDados(){
		  	cid = formulario.option("formData").cid
		  	id = formGeral.option("formData").id
		  	if (cid==""||id==""){
			  	DevExpress.ui.notify("Informe o CID e o ID para remoção", "warning", 4000);
		  	}
            $.getJSON(urlPreparacao,{
                method		:"removeDados",
                cid			: cid,
                id			: id,
            },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	            if (retorno.status==1){
		            dataSourceImagens.reload()
		            dataSourceImagemArea.reload()
		            dataSourceExames.pageIndex(0)
		            dataSourceExames.reload()
		            formGeral.getEditor("predecessor").getDataSource().reload()
		            formGeral.getEditor("id").getDataSource().reload()
		            formGeral.option("formData",{})
	            }

	        });
			
		}

		function salvarDadosEstadiamento(){
			if (!formulario.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
			if (!estadiamento.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
		  	dadosCabecalho = formulario.option("formData")
		  	dadosEstadiamento = estadiamento.option("formData")
            $.getJSON(urlPreparacao,{
                method		:"salvaDadosEstadiamento",
                formulario	: JSON.stringify(dadosCabecalho),
                estadiamento: JSON.stringify(dadosEstadiamento),
            },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	            if (retorno.status==1){
		            carregaWF(formulario.option("formData").cid)
					dataSourceEstadiamento.reload()
	            }

	        });
			
		}
		
		function carregaSugTerapeuticas(){
			dataSourceGridSugTerapeuticas = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
				loadMode: "raw",
	            load: function(args) {
                    return $.getJSON(urlPreparacao,{
	                    method		: "recSugestoes",
	                    cid			: formulario.option("formData").cid
	                });
	                }
	            })
	        })

			sugTerapeuticas = $("#sugTerapeutica").dxDataGrid({
				dataSource:  dataSourceGridSugTerapeuticas,
				columns:[{
					dataField	: "tratamento",
					caption	 	: "Linha de Tratamento",
					width		: "20%"
				},{
					dataField	: "descricao",
					caption	 	: "Descrição"
				}],
				selection: { mode: "single" },
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						abrePopupSugestao(1,selectedItems.selectedRowKeys[0].chave)
					}
				},
				hoverStateEnabled: true,
				paging: { enabled: false },
		    	height	:function() {
					return window.innerHeight-190
				},
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				columnFixing: {
		            enabled: true
		        },
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "add",
							height: 36,
							width: 36,
							hint: "Adicionar Nova Sugestão Terapêutica",
							onClick: function(e) {
								abrePopupSugestao(1,"")
							}
						}
					})
				}				
			}).dxDataGrid("instance")
		}
		
		function abrePopupSugestao(nivel,chave){
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: chave==""?"Adicionar Sugestão Terapêutica":"Editar Sugestão Terapêutica",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHiding	: function(){
			        sugTerapeuticas.clearSelection()
			    	dataSourceGridSugTerapeuticas.reload()
			    }
		    }		
		    if ($("#openPopupSugestoes"+nivel).html()==undefined){
			    $("body").append("<div id='openPopupSugestoes"+nivel+"'>")
		    }
		    if ($("#openPopupSugestoes"+nivel).html()!=""){
		    	$("#openPopupSugestoes"+nivel).dxForm("instance").dispose()
		    	$("#openPopupSugestoesConteudo"+nivel).dxForm("instance").dispose()
		    }
   			$("#openPopupSugestoes"+nivel).html("<div id='openPopupSugestoesConteudo"+nivel+"'></div>")
			$("#openPopupSugestoes"+nivel).dxPopup(popupOptions)
			if (nivel==1){
				preparaPopupSugestoes1(chave)
			}
		}		
		

		function preparaPopupSugestoes1(chave){
			$.getJSON(urlPreparacao,{
            	method			: "getSugestao",
            	cid				: formulario.option("formData").cid,
            	chave			: chave
	    	},function(retorno){
		        $("#openPopupSugestoesConteudo1").dxForm({
			        formData : retorno,
					activeStateEnabled:true,
					scrollingEnabled	: false,
			        items: [{
				        colCount : 2,
		            	itemType: "group",
			           	items:[{
				            dataField	: "codTrat",
		                    label		: {
								text	: "Linha de Tratamento"
							},
							editorType: "dxSelectBox",
			            	editorOptions: {
						        valueExpr: "Codigo", 
								displayExpr: "Descricao",
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
								        loadMode: "raw",
							            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
							                    method:"recLinhasTratamento"
							                });
							            }
						            })
						        }),
								onValueChanged: function(e) {
									
								}
			            	}
				        },{
				            dataField	: "codCate",
				            disabled	: true,
		                    label		: {
								text	: "Código da Categoria"
							},
				        },{
					        colSpan		: 2,
				            dataField	: "descricao",
		                    label		: {
								text	: "Descrição"
							},
							editorType: "dxTextArea",
				        },{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='openPopupSugestoesConteudoGrid1'>")
	               			}
				        },{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='openPopupSugestoesConteudoGrid2'>")
	               			}
				        }]
			        }]
				})

				$("#openPopupSugestoesConteudoGrid1").dxDataGrid({
					dataSource:  new DevExpress.data.DataSource({
				        store: new DevExpress.data.CustomStore({
					        loadMode: "raw",
			        		remove: function(args) {
				        		return
					            return $.getJSON(urlPreparacao,{
			    	            	method			: "removeEstadiamentoCondicoes",
			    	            	cid				: formulario.option("formData").cid,
			    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
			    	            	codEstagio		: $("#openPopupSugestoesConteudo1").dxForm("instance").option("formData").codEstagio,
			    	            	codCondicao		: args.codCondicao
			        	    	});
				    		},
			        		load: function(args) {
					            return $.getJSON(urlPreparacao,{
			    	            	method		: "recTerapiaCondicoes",
			    	            	cid			: formulario.option("formData").cid,
			    	            	codTrat		: $("#openPopupSugestoesConteudo1").dxForm("instance").option("formData").codTrat,
			    	            	codCate		: $("#openPopupSugestoesConteudo1").dxForm("instance").option("formData").codCate,
			        	    	});
				    		}	
						})
			        }),
					columns:[{
						dataField	: "condicao",
						caption	 	: "Condições (Deve cumprir todas as condições)"
					}],
					wordWrapEnabled:true,
					editing: {
			            mode: "cell",
			            allowDeleting: true,
	                    useIcons: true,
			        },	
					selection: { mode: "single" },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							chave = selectedItems.selectedRowKeys[0].chave
							abrePopupSugestao(2,chave)
						}
					},
					hoverStateEnabled: true,
					paging: { enabled: false },
			    	height	:function() {
						return window.innerHeight-270
					},
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								height: 36,
								text: "Nova Condição",
								hint: "Adicionar Condição",
								onClick: function(e) {
									abrePopupSugestao(2,"")
								}
							}
						})
					}				
				}).dxDataGrid("instance")
				//
				$("#openPopupSugestoesConteudoGrid2").dxDataGrid({
					dataSource:  new DevExpress.data.DataSource({
				        store: new DevExpress.data.CustomStore({
					        loadMode: "raw",
			        		remove: function(args) {
				        		return
					            return $.getJSON(urlPreparacao,{
			    	            	method			: "removeTerapiaMedicamentos",
			    	            	cid				: formulario.option("formData").cid,
			    	            	codEstadiamento	: estadiamento.option("formData").estadiamento,
			    	            	codEstagio		: $("#openPopupSugestoesConteudo1").dxForm("instance").option("formData").codEstagio,
			    	            	codCondicao		: args.codCondicao
			        	    	});
				    		},
			        		load: function(args) {
					            return $.getJSON(urlPreparacao,{
			    	            	method		: "recTerapiaMedicamentos",
			    	            	cid			: formulario.option("formData").cid,
			    	            	codTrat		: $("#openPopupSugestoesConteudo1").dxForm("instance").option("formData").codTrat,
			    	            	codCate		: $("#openPopupSugestoesConteudo1").dxForm("instance").option("formData").codCate,
			        	    	});
				    		}	
						})
			        }),
					columns:[{
						dataField	: "regime",
						caption	 	: "Regime Terapêutico",
						width		: "150px"
					},{
						dataField	: "sugestao",
						caption	 	: "Sugestão Terapêutica"
					}],
					editing: {
			            mode: "cell",
			            allowDeleting: true,
	                    useIcons: true,
			        },	
					selection: { mode: "single" },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							chave = selectedItems.selectedRowKeys[0].chave
							abrePopupSugestao(2,chave)
						}
					},
					hoverStateEnabled: true,
					paging: { enabled: false },
			    	height	:function() {
						return window.innerHeight-270
					},
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "add",
								height: 36,
								width: 36,
								text: "Nova Condição",
								hint: "Adicionar Condição",
								onClick: function(e) {
									abrePopupSugestao(2,"")
								}
							}
						})
					}				
				}).dxDataGrid("instance")

	    	})
			
		}


		
        DevExpress.localization.locale("pt");

        $(document).ready(function () {
            prepareSearchInputs();
            carregaGeral()
            carregaEstadiamento()
            carregaDiagnostico();
            carregaSugTerapeuticas()
            formulario.updateData("cid","#(ultimoCid)#")
        });
        
        
        //// Diagnostico
		function carregaDiagnostico(){	    
		
			dataSourceDiagnostico = new DevExpress.data.DataSource({
		        store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            load: function (args) {
		                return $.getJSON(urlPreparacao, {
		                    method: "getDiagnostico",
		                    cid: formulario.option("formData").cid
		                });
		            }
		        })
		    })

		    dataSourceGridDiagnostico = new DevExpress.data.DataSource({
		        store: new DevExpress.data.CustomStore({
		            remove: function (args) {
		                return $.get(urlPreparacao, {
		                    method: "removeDiagnostico",
		                    cid: formulario.option("formData").cid,
		                    codDiagnostico: diagnostico.option("formData").diagnostico,
		                    codSequencia: args.sequencia
		                });
		            },
		            load: function (args) {
		                return $.getJSON(urlPreparacao, {
		                    method: "recuperaDiagnostico",
		                    cid: formulario.option("formData").cid,
		                    codDiagnostico: diagnostico.option("formData").diagnostico,
		                });
		            }
		        })
		    })


			diagnostico = $("#diagnostico").dxForm({
		        activeStateEnabled: true,
		        scrollingEnabled: true,
		        labelLocation: "top",
		        height: function () { return window.innerHeight - 190 },
		        items: [{
		            itemType: "group",
		            colCount: 7,
		            items: [{
		                dataField: "diagnostico",
		                colSpan: 2,
		                editorType: "dxSelectBox",
		                editorOptions: {
		                    valueExpr: "Codigo",
		                    displayExpr: "Descricao",
		                    searchEnabled: true,
		                    dataSource: dataSourceDiagnostico,
		                    placeholder: "+",
		                    showClearButton: true,
		                    onValueChanged: function (e) {
		                    	if (e.value == "" || e.value == null) {
			    			        dataSourceGridDiagnostico.reload()
									diagnostico.updateData("descricao", "")
									diagnostico.updateData("resultado", "")
				                    diagnostico.updateData("exibir", "")
				                    return;	
		                    	}
		                    	recuperaDiagnostico(e.value)
		                    }
		                }
		            }, {
		                colSpan: 5,
		                dataField: "descricao",
		                label: {
		                    text: "Descrição"
		                },
		                validationRules: [{ type: "required" }]
		            }, {
		                colSpan: 5,
		                dataField: "resultado",
		                label: {
		                text: "Resultado caso nenhuma condição"
		                }
		            }
		            , {
		                colSpan: 2,
		                dataField: "exibir",
		                label: {
		                text: "Exibir?"
		            },
		            editorType: "dxSelectBox",
		                editorOptions: {
		                valueExpr: "codigo",
		                displayExpr: "descricao",
		                searchEnabled: true,
		                items: [{
		                    "codigo": "0",
		                    "descricao": "Não"
		                }, {
		                    "codigo": "1",
		                    "descricao": "Sim"
		                }],
		                }
		            },{
		                colSpan: 7,
		                template: function (data, itemElement) {
		                    itemElement.append("<div id='diagnosticoGrid'>")
		                }
		            }
		        	]
		        }]
		    }).dxForm("instance")

		    diagnosticoGrid = $("#diagnosticoGrid").dxDataGrid({
		        dataSource: dataSourceGridDiagnostico,
		        columns: [{
		            dataField: "sequencia",
		            caption: "Sequencia",
		            width: "15%"
		        }, {
		            dataField: "acao",
		            caption: "Ação",
		            width: "15%"
		        }, {
		            dataField: "descricao",
		            caption: "Descrição Caso Positivo"
		        }],
		        editing: {
		            mode: "cell",
		            allowDeleting: true,
		            useIcons: true,
		        },
		        selection: { mode: "single" },
		        onSelectionChanged: function (selectedItems) {
		            if (selectedItems.selectedRowsData.length > 0) {
		                abrePopupDiagnostico("",selectedItems.selectedRowKeys[0].sequencia)
		            }
		        },
		        hoverStateEnabled: true,
		        paging: { enabled: false },
		        height: function () {
		            return window.innerHeight - 340
		        },
		        showBorders: true,
		        showRowLines: true,
		        rowAlternationEnabled: true,
		        columnFixing: {
		            enabled: true
		        },
		        onToolbarPreparing: function (e) {
		            e.toolbarOptions.items.unshift({
		                location: "after",
		                widget: "dxButton",
		                options: {
		                    icon: "add",
		                    height: 36,
		                    width: 36,
		                    hint: "Adicionar Diagnóstico",
		                    onClick: function (e) {
		                        abrePopupDiagnostico("")
		                    }
		                }
		            })
		        },
		        wordWrapEnabled: true
		    }).dxDataGrid("instance")
			    

			function abrePopupDiagnostico(cod,codSequencia) {
			    if (!diagnostico.option("formData").diagnostico) {
			        if (diagnostico.option("formData").descricao) {
			            if (!formulario.validate().isValid) {
			                DevExpress.ui.notify("Há campos inválidos 1", "warning", 4000);
			                return
			            }
			            if (!diagnostico.validate().isValid) {
			                DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
			                return
			            }
			            dadosCabecalho = formulario.option("formData")
			            dadosDiagnostico = diagnostico.option("formData")
			            console.log(dadosDiagnostico)
			            $.getJSON(urlPreparacao, {
			                method: "salvaDadosDiagnosticoTemp",
			                formulario: JSON.stringify(dadosCabecalho),
			                diagnostico: JSON.stringify(dadosDiagnostico),
			            }, function (retorno) {
			                if (retorno.status == 1) {
			                    dataSourceDiagnostico.reload()
			                    diagnostico.updateData("diagnostico", retorno.codigo)
			                    abrePopupDiagnostico(retorno.codigo)
			                    return
			                }
			            });
			            return
			        } else {
			            DevExpress.ui.notify("Selecione um Diagnóstico", "warning", 4000);
			            return
			        }
			    }
			    popupOptions = {
			        width: "90%",
			        height: "90%",
			        showTitle: true,
			        title: "Adicionar Diagnóstico",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false,
			        onHiding: function () {
			            diagnosticoGrid.clearSelection()
			            dataSourceGridDiagnostico.reload()
			        }
			    }
			    if ($("#openPopupDiagnostico").html() != "") {
			        openPopupDiagnosticoConteudo.dispose()
			        openPopupDiagnostico.dispose()
			    }
			    $("#openPopupDiagnostico").html("<div id='openPopupDiagnosticoConteudo'></div>")
			    openPopupDiagnostico = $("#openPopupDiagnostico").dxPopup(popupOptions).dxPopup("instance")
			    preparaPopupDiagnostico(cod, codSequencia)
			}

			function recuperaDiagnostico(codigo) {
			    $.getJSON(urlPreparacao, {
			        method: "getDiagnostico",
			        cid: formulario.option("formData").cid,
			        codigo: codigo
			    }, function (retorno) {
			        console.log(retorno)
			        dataSourceGridDiagnostico.reload()
			        diagnostico.updateData("descricao", retorno[0].Descricao2)
			        diagnostico.updateData("resultado", retorno[0].resultado)
			        diagnostico.updateData("exibir", retorno[0].exibir)
			    });
			}
			
			function preparaPopupDiagnostico(cod, codSequencia) {
			    if (!codSequencia || codSequencia == "" || codSequencia == null) {
				   	codSequencia = ""; 
			    }
			    $.getJSON(urlPreparacao, {
			        method: "getSequenciaDiagnostico",
			        cid: formulario.option("formData").cid,
			        codDiagnostico: diagnostico.option("formData").diagnostico,
			        codSequencia: codSequencia
			    }, function (retorno) {
			        openPopupDiagnosticoConteudo = $("#openPopupDiagnosticoConteudo").dxForm({
			            formData: retorno,
			            activeStateEnabled: true,
			            scrollingEnabled: true,
    			        labelLocation: "top",
			            height: function () {
			                return window.innerHeight - 190
			            },
			            items: [{
			                colCount: 5,
			                itemType: "group",
			                items: [{
				                  dataField: "codSequencia",
			                  	editorOptions: {
					                	readOnly: true
			                  	}
				                },{
			                    dataField: "flagInterContinuar",
			                    label: {
		                        text: "Ação",
			                    },
			                    editorType: "dxSelectBox",
					                editorOptions: {
					                    valueExpr: "codigo",
					                    displayExpr: "descricao",
					                    searchEnabled: true,
					                    items: [{
					                        "codigo": "A",
					                        "descricao": "Acumular"
					                    },{
					                        "codigo": "C",
					                        "descricao": "Continuar"
					                    }, {
					                        "codigo": "I",
					                        "descricao": "Interromper"
					                    }],
					                }
			                }, {
			                    colSpan: 3,
			                    dataField: "descricao",
			                    label: {
			                        text: "Descrição Caso Positivo"
			                    },
			                }, {
			                    colSpan: 5,
			                    template: function (data, itemElement) {
			                        itemElement.append("<div id='diagnosticoCondicoesGrid'>")
			                    }
			                }]
			            }]
			        }).dxForm("instance")

			        dataSourceCondicoesGridDiagnostico = new DevExpress.data.DataSource({
			            store: new DevExpress.data.CustomStore({
				            key: "seqCondicao",
		                insert: function (values) {
                      xCodDiagnostico  	= diagnostico.option("formData").diagnostico;
                      xCodSequencia = openPopupDiagnosticoConteudo.option("formData").codSequencia;
							        objDados = new Array;
											for (var coluna in values) {
												if (values.hasOwnProperty(coluna)) {
													valor = values[coluna];
													objDados.push(coluna+"~"+valor);
												}
											}
											#server(VAR.CSP.WorkFlowAtendimento.addDiagnosticoCondicoes(xCodDiagnostico, xCodSequencia, "", objDados, YBED))#;
							   	 	},
										update: function (key, values) {
                      xCodDiagnostico  	= diagnostico.option("formData").diagnostico;
                      xCodSequencia = openPopupDiagnosticoConteudo.option("formData").codSequencia;
											idRow = key;
											objDados = new Array;
											for (var coluna in values) {
												if (values.hasOwnProperty(coluna)) {
													valor = values[coluna];
													objDados.push(coluna+"~"+valor);
												}
											}
											#server(VAR.CSP.WorkFlowAtendimento.addDiagnosticoCondicoes(xCodDiagnostico, xCodSequencia, idRow, objDados, YBED))#;
										},
			              remove: function (key) {
                      xCodDiagnostico  	= diagnostico.option("formData").diagnostico;
                      xCodSequencia = openPopupDiagnosticoConteudo.option("formData").codSequencia;
	                    #server(VAR.CSP.WorkFlowAtendimento.removeDiagnosticoCondicoes(xCodDiagnostico, xCodSequencia, key))#;
			              },
		                load: function (args) {
	                    return $.getJSON(urlPreparacao, {
	                        method: "recuperaDiagnosticoCondicoes",
	                        cid: formulario.option("formData").cid,
	                        codDiagnostico: diagnostico.option("formData").diagnostico,
	                        codSequencia: openPopupDiagnosticoConteudo.option("formData").codSequencia,
			                });
			              }
			            })
			        })
					listaDataGridCondicoesDiagnostico();
			    })
			}

			function listaDataGridCondicoesDiagnostico() {

				if ($("#diagnosticoCondicoesGrid").html() != "") {
					diagnosticoCondicoesGrid.dispose()
				}

				xCodSequencia = openPopupDiagnosticoConteudo.option("formData").codSequencia;
				var flagEdit = true
				if (xCodSequencia == "" || xCodSequencia == null) {
					flagEdit = false;
				}

				dataSourceCampoDiagnostico = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						key: "Sequencia",
						load: function (args) {
							return $.getJSON(urlPreparacao, {
								method: "getInputDiagnostico",
								cid: formulario.option("formData").cid,
								tipo: tipoCampoDiagnostico
							});
						},
						byKey: function(args) {
							return $.getJSON(urlPreparacao,{method:"getInputDiagnostico",
								cid: formulario.option("formData").cid,
								tipo: tipoCampoDiagnostico
							});
						}
					})
				})

				dataSourceExibirCampoDiagnostico = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						load: function (args) {
							return $.getJSON(urlPreparacao, {
								method: "getInputDiagnostico",
								cid: formulario.option("formData").cid,
								tipo: "I"
							});
						},
						byKey: function(args) {
							return $.getJSON(urlPreparacao,{method:"getInputDiagnostico",
								cid: formulario.option("formData").cid,
								tipo: "I"
							});
						}
					})
				})

				diagnosticoCondicoesGrid = $("#diagnosticoCondicoesGrid").dxDataGrid({
					dataSource: dataSourceCondicoesGridDiagnostico,
					columns: [
						{dataField: "tipoCampo", width: 80,
							setCellValue: function(rowData, value) {
								tipoCampoDiagnostico = value;
								rowData.tipoCampo = value;
								rowData.campo = null;
								rowData.campoDescricao = null;
								dataSourceCampoDiagnostico.reload();
							},
							lookup: {
								dataSource: [{"ID": "I", "Name": "Input"},{"ID": "O", "Name": "Diagnostico"},{"ID": "OD", "Name": "Diagnostico Indice"}],
								valueExpr: "ID", displayExpr: "Name"
							}
						},
						{dataField: "campoDescricao", caption: "Campo",
							setCellValue: function (rowData, value) {
								if (value == "" || value == null) return
								objLinha = this;
								var retorno = #server(VAR.CSP.WorkFlowAtendimento.recInputDiagnostico(formulario.option("formData").cid,tipoCampoDiagnostico, value))#;
								if (retorno == "") {
									return;	
								}
								objLinha.defaultSetCellValue(rowData, retorno);
								rowData.campo = value;	
							}
						},
						{dataField: "comparador", width: 80,
							setCellValue: function(rowData, value) {
								rowData.comparador = value;
								rowData.campo = null;
							},
							lookup: {
								dataSource: [
									{"ID": "'=", "Name": "Diferente"},{"ID": "[", "Name": "Contenha"},
									{"ID": "=", "Name": "Igual"},{"ID": ">", "Name": "Maior"},
									{"ID": ">=", "Name": "Maior Igual"},{"ID": "<", "Name": "Menor"},
									{"ID": "=<", "Name": "Menor Igual"},{"ID": "'[", "Name": "Não Contenha"}
								], valueExpr: "ID", displayExpr: "Name"
							}
						},
						{dataField: "valor", width: 80},
						{dataField: "novaCondicao", width: 80,
							setCellValue: function(rowData, value) {
								rowData.novaCondicao = value;
								rowData.campo = null;
							},
							lookup: {
								dataSource: [{"ID": "&&", "Name": "E"},{"ID": "||", "Name": "Ou"}],
								valueExpr: "ID", displayExpr: "Name"
							}
						},
						{dataField: "recuperaCampo", width: 80,
							setCellValue: function(rowData, value) {
								rowData.recuperaCampo = value;
								rowData.campo = null;
							},
							lookup: {
								dataSource: [
									{"ID": "C", "Name": "Campo"},{"ID": "V", "Name": "Valor"},{"ID": "V1", "Name": "Último Valor"},
								], valueExpr: "ID", displayExpr: "Name"
							}
						},
						{dataField: "exibirCampoDesc", caption: "Exibir Campo",
							setCellValue: function (rowData, value) {
								if (value == "" || value == null) return
								objLinha = this;
								var retorno = #server(VAR.CSP.WorkFlowAtendimento.recInputDiagnostico(formulario.option("formData").cid,"I", value))#;
								console.log(retorno)
								if (retorno == "") {
									return;	
								}
								objLinha.defaultSetCellValue(rowData, retorno);
								rowData.exibirCampo = value;	
							}
						}],
						onEditorPreparing: function(e) {
							if (e.parentType == "dataRow" && e.dataField == "campoDescricao") {
								e.editorName = "dxSelectBox"; 
								e.editorOptions.dataSource = dataSourceCampoDiagnostico;
								e.editorOptions.value = e.row.data.campo;
								e.editorOptions.displayExpr = "Nome";
								e.editorOptions.valueExpr = "Sequencia";
								e.editorOptions.searchEnabled = 1;
								e.editorOptions.showClearButton = 1;
								e.editorOptions.onValueChanged = function(arg) {
									e.setValue(arg.value);
								}
							}
							if (e.parentType == "dataRow" && e.dataField == "exibirCampoDesc") {
								e.editorName = "dxSelectBox"; 
								e.editorOptions.dataSource = dataSourceExibirCampoDiagnostico;
								e.editorOptions.value = e.row.data.exibirCampo;
								e.editorOptions.displayExpr = "Nome";
								e.editorOptions.valueExpr = "Sequencia";
								e.editorOptions.searchEnabled = 1;
								e.editorOptions.showClearButton = 1;
								e.editorOptions.onValueChanged = function(arg) {
								e.setValue(arg.value);
							}
						}
					},          
					editing: {
						mode: "batch",
						allowAdding: flagEdit,
						allowDeleting: flagEdit,
						allowUpdating: flagEdit,
						useIcons: true,
					},
					hoverStateEnabled: true,
					paging: { enabled: false },
					height: function () {
						return window.innerHeight - 280
					},
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
						enabled: true
					},
					wordWrapEnabled: true,
					onToolbarPreparing: function (e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "save",
								hint: "Salvar os Diagnóstico",
								type: "success",
								stylingMode: "contained",
								onClick: function () { 
									salvarDadosSeqDiagnostico() 
								}
							}
						})
					}
				}).dxDataGrid("instance")
			}


			function salvarDadosSeqDiagnostico(){
				xCID 			= formulario.option("formData").cid;
				xCodDiagnostico = diagnostico.option("formData").diagnostico;
				xCodSequencia 	= openPopupDiagnosticoConteudo.option("formData").codSequencia;
				xAcao 			= openPopupDiagnosticoConteudo.option("formData").flagInterContinuar;
				xDescicao 		= openPopupDiagnosticoConteudo.option("formData").descricao;
				xExibir 		= openPopupDiagnosticoConteudo.option("formData").exibir;
				if (xAcao == "" || xAcao == null || xDescicao == "" ||  xDescicao == null) {
					DevExpress.ui.notify("Informe a Ação e a Descrição Caso Positivo.", "warning", 4000);
					return
				}
				if (xCodSequencia == "" || xCodSequencia == null) {
					xCodSequencia = "";
				}
				$.getJSON(urlPreparacao, {
					method: "armazenaSequenciaDiagnostico",
					cid: xCID, codDiagnostico: xCodDiagnostico, codSequencia: xCodSequencia,
					acao: xAcao, descicao: xDescicao, exibir: xExibir,
				},function(objRetorno){
					if (objRetorno.codSequencia != "") {
						openPopupDiagnosticoConteudo.updateData("codSequencia", objRetorno.codSequencia)
						listaDataGridCondicoesDiagnostico();
					}  
				});
			}
		}
        
		function salvarDadosDiagnostico() {
		    if (!formulario.validate().isValid) {
		        DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
		        return
		    }
		    if (!diagnostico.validate().isValid) {
		        DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
		        return
		    }
		    dadosCabecalho 		= formulario.option("formData")
		    dadosDiagnostico 	= diagnostico.option("formData")
		    $.getJSON(urlPreparacao, {
		        method: "salvaDadosDiagnostico",
		        formulario: JSON.stringify(dadosCabecalho),
		        diagnostico: JSON.stringify(dadosDiagnostico),
		    }, function (retorno) {
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
		        if (retorno.status == 1) {
		            carregaWF(formulario.option("formData").cid)
		            dataSourceDiagnostico.reload()
		        }
		    });

		}

		function removerDadosDiagnostico(){
			var codDiagnostico = diagnostico.option("formData").diagnostico;
			if (codDiagnostico == "" || codDiagnostico == null) {
		        DevExpress.ui.notify("Selecionar um Diagnóstico.", "warning", 4000);
		        return
			}
		    $.get(urlPreparacao, {
		        method: "removerDadosDiagnosticoTemp",
		        codDiagnostico: codDiagnostico,
		    }, function (retorno) {
			    dataSourceDiagnostico.reload()
		        diagnostico.updateData("diagnostico", "")
		        diagnostico.updateData("descricao", "")
		        diagnostico.updateData("resultado", "")
		        diagnostico.updateData("exibir", "")
		        dataSourceGridDiagnostico.reload()
		    });
		}
        
        ////


    </script>
</body>
</html>
