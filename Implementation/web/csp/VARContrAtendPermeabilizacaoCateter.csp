<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR
 
		set YUSER = $get(%request.Data("YUSER", 1))
		set YBED = $get(%request.Data("YBED", 1))
		set YM = $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))
		set READONLY = $get(%request.Data("RO", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
		set PageName = %request.PageName
		set app = %request.Application
		set host = %request.CgiEnvs("HTTP_HOST") 
		set url = "http://"_host_app

		set URLPreparacao = "VAR.CSP.VARContrAtendPermeabilizacaoCateter.cls"
		set URLPreparacaoQui = "VAR.CSP.VARContrAtendQuimioterapico.cls"
    set URLPreparacaoPEP = "VAR.CSP.VARProntuarioEletronico.cls?EP=1&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set URLPreparacaoTransf = "VAR.CSP.VARContrAtendTransfusional.cls"
		set URLPreparacaoSangTer 	= "VAR.CSP.VARContrAtendSangriaTerapeutica.cls"
		set URLLogin = "COMLogin.cls"
		set URLLink = "www.cls"

		set nomeLocal = YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		
		set pAdmissao 			= $get(%request.Data("pAdmissao",1)) 
		set pCodProntuario 	= $get(%request.Data("pCodProntuario",1))
		
		Set flagUsuarioMedico = +$$GetChecaMedico^VARSQL(YBED)
	</script>
	<head>
		<title>Prontuário Permeabilização de Cateter</title>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">

		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- DevExtreme themes -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.css" />

		<style>
		*{
			font-family: Arial, Helvetica, sans-serif;
		}
		.normal {
			padding: 2px;
			border: 0px solid green;
			text-align: center;
		}
		.titulo {
			padding: 2px;
			padding-top: 5px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: right;
			font-weight: bold;
		}
		.tituloNormal {
			padding: 2px;
			padding-top: 5px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: left;
		}		
		.tituloRadio {
			padding: 2px;
			padding-top: 5px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: right;
			font-weight: bold;
		}
		.tituloRadioNormal {
			padding: 2px;
			padding-top: 3px;
			padding-right: 3px;
			border: 0px solid red;
			text-align: right;
		}
		.campo {
			padding: 2px;
			border: 0px solid blue;
		}
		.divAvatar {
		  position: absolute;
			margin-top: 10px;
			margin-left: 2px;	
		}
		.divCicleAvatar {
		  background-color: #aaa;
		  border-radius: 50%;
		  width: 100px;
		  height: 100px;
		  overflow: hidden;
		  position: relative;
	    border: 1px solid #e9e9e9;
		}
		.divAvatar img {
		  position: absolute;
		  bottom: 0;
		  width: 100%;
		  padding: 0px;
		}
		.dx-button-content {
			padding-top: 3px;
		}
		@keyframes fa-blink {
			0% { opacity: 1; }
			50% { opacity: 0.5; }
			100% { opacity: 0; }
		}
		.fa-blink {
			color: red;
			-webkit-animation: fa-blink 2.2s linear infinite;
			-moz-animation: fa-blink 2.2s linear infinite;
			-ms-animation: fa-blink 2.2s linear infinite;
			-o-animation: fa-blink 2.2s linear infinite;
			animation: fa-blink 2.2s linear infinite;
		}	
	</style>

		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />

	</head>
	<script type="text/javascript">
	var status = "#(status)#";
	var URLLogin = "#(URLLogin)#";
	if (status == 0) {
		alert("Usuário não está logado ou a sessão expirou.")
		window.location.replace(URLLogin)
	}
	</script>
	<body>
		<nav class="navbar navbar-default navbar-fixed-top">
			<div class="container-fluid">
				<div class="navbar-header">
					<a class="navbar-brand" href="#">Controle de Atendimento Ambulatorial - Permeabilização de Cateter</a>
				</div>
				<CSP:IF CONDITION="'READONLY"> <!-- quando apenas leitura não exibir botões -->
					<ul class="nav navbar-nav navbar-right">
						<li>
							<button type="button" class="btn btn-info navbar-btn" id="btnSalvar">
								<span class="fa fa-save"></span> Salvar
							</button>
						</li>
						<!--<li>
							<button type="button" class="btn btn-info navbar-btn" id="btnAssinar" style="display:#($Select(flagUsuarioMedico=0:"none",1:"block"))#">
								<span class="fas fa-signature" id="spAssinar"></span> <span id="spAssinarTexto">Assinar</span>
							</button>
						</li>-->
						<li>
							<button type="button" class="btn btn-info navbar-btn" id="btnFinalizar">
								&nbsp; Finalizar &nbsp;
							</button>
						</li>
						<li>
							<button type="button" class="btn btn-info navbar-btn" id="btnArquivos">
								&nbsp;Arquivos&nbsp;
							</button>
						</li>							
						<li>
							<button type="button" class="btn btn-info navbar-btn" id="btnFechar">
								<span class="fas fa-times"></span> Fechar
							</button>
						</li>
					</ul>
				</CSP:IF>
			</div>
		</nav>
		<div class="container-fluid" style="margin:2px; margin-top:58px;min-width: 1280px;">
			<div class="row">
				<div class="col-md-7">
					<div class="row">
						<div class="col-md-2 titulo">Prontuário/Código:</div>
						<div class="col-md-2 campo"><div id="textPronturario"></div></div>
						<div class="col-md-2 titulo">Admissão:</div>
						<div class="col-md-2 campo"><div id="textAdmissao"></div></div>
						<div class="col-md-2 titulo">Data/Hora:</div>
						<div class="col-md-2 campo"><div id="textDataHora"></div></div>
					</div>
					<div class="row">
						<div class="col-md-2 titulo">Sala:</div>
						<div class="col-md-4 campo"><div id="selectSala"></div></div>
						<div class="col-md-2 titulo">Leito:</div>
						<div class="col-md-4 campo"><div id="selectLeito"></div></div>
					</div>
					<div class="row">
						<div class="col-md-2 titulo">Paciente:</div>
						<div class="col-md-10 campo"><div id="textPaciente"></div></div>
					</div>
					<div class="row">
						<div class="col-md-3 titulo">Data Nascimento:</div>
						<div class="col-md-2 campo"><div id="textDataNascimento"></div></div>
						<div class="col-md-1 titulo">Idade:</div>
						<div class="col-md-2 campo"><div id="textIdade"></div></div>						
						<div class="col-md-1 titulo">Sexo:</div>
						<div class="col-md-3 campo"><div id="textSexo"></div></div>
					</div>
				</div>
				<div class="col-md-4">
					<div class="row">
						<div class="col-md-4 titulo">Diagnóstico:</div>
						<div class="col-md-8 campo"><div id="textDiagnostico"></div></div>
					</div>
					<div class="row">
						<div class="col-md-4 titulo">Médico Responsável:</div>
						<div class="col-md-6 campo"><div id="selectMedicoExterno"></div></div>
						<div class="col-md-2 campo"><div id="divMedicoExternoAdd"></div></div>
					</div>
					<div class="row">
						<div class="col-md-4 titulo" id="divExibirAssinaturaTitulo">&nbsp;</div>
						<div class="col-md-8 tituloNormal" id="divExibirAssinatura" style="text-align: left">&nbsp;</div>
					</div>
				</div>
				<div class="col-md-1">
					<div class="row">
						<div class="col-md-12 normal">
							<div id="divIcones"></div>
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-md-12" style="height:5px;"></div>
			</div>
			<div class="row">
				<div class="col-md-12">
					<div id="divAbas"></div>
				</div>
			</div>
		</div>	
		<div id="divCadastrarItem"></div>
		<div id="openPesquisaCID"></div>
		<div id="openPesquisaArquivo"></div>
		<div id="divCadastrarMedico"></div>
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

	  <!-- A DevExtreme library -->
	  <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.web.js"></script>
	  
	  <!-- DevExtreme-Intl module -->
	  <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
		//Deixando variáveis disponíveis no cliente
		var urlPreparacao 	 = "#(URLPreparacao)#";
		var urlPreparacaoQui = "#(URLPreparacaoQui)#";
		var urlPreparacaoPEP = "#(URLPreparacaoPEP)#";
		var urlPreparacaoTransf = "#(URLPreparacaoTransf)#";
		var urlPreparacaoSangTer = "#(URLPreparacaoSangTer)#";
		var urlLink 				 = "#(URLLink)#";
		var YBED 						 = "#(YBED)#";
		var YUSER 					 = "#(YUSER)#";
		var YLOCATION 			 = "#(YLOCATION)#";
		var nomeLocal 			 = "#(nomeLocal)#";
		var pAdmissao				 = "#(pAdmissao)#";
		var pCodProntuario	 = "#(pCodProntuario)#";
		var carregarTela		 = 1;
		var CategoriaAnt		= "";
		var flagUsuarioMedico = "#(flagUsuarioMedico)#";
		var READONLY 					= "#(READONLY)#";
		//
		var height = window.innerHeight - 260;
		//
		DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
		DevExpress.localization.locale("pt");
		//
		$(document).ready(function () {
			if (pCodProntuario != "") {
				recuperaProntuario(pCodProntuario);			
			}
			if (READONLY) {fnReadOnly(); setInterval(fnReadOnly, 1000);}
		});
		
		function fnReadOnly(){
			$('.dx-toolbar-button, .dx-button, .btn').css("visibility","hidden");
			$('#divReacaoTransfusional .dx-toolbar-button').css("visibility","hidden");
			$('.aba .dx-textbox').each(function(){ try { $(this).dxTextArea('instance').option('readOnly',true) } catch (ex) {} })
			$('.aba .dx-texteditor').each(function(){ try { $(this).dxTextBox('instance').option('readOnly',true) } catch (ex) {} })
			$('.aba .dx-checkbox').each(function(){ try { $(this).dxCheckBox('instance').option('readOnly',true) } catch (ex) {} })
			$('.aba .dx-selectbox').each(function(){ try { $(this).dxSelectBox('instance').option('readOnly',true) } catch (ex) {} })
			$('.aba .dx-selectbox').each(function(){ try { $(this).dxTagBox('instance').option('readOnly',true) } catch (ex) {} })
			$('.aba .dx-numberbox').each(function(){ try { $(this).dxNumberBox('instance').option('readOnly',true) } catch (ex) {} })
			$('.aba .dx-radiogroup').each(function(){ try { $(this).dxRadioGroup('instance').option('disabled',true) } catch (ex) {} })
			$('.aba .dx-checkbox-icon').each(function(){ try { $(this).dxCheckBox('instance').option('disabled',true) } catch (ex) {} })
			$('.aba .dx-datebox').each(function(){ try { $(this).dxDateBox('instance').option('disabled',true) } catch (ex) {} })
		}
		//
		campoProntuario = $("#textPronturario").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
		campoAdmissao = $("#textAdmissao").dxTextBox({readOnly: true, height: 27, value: pAdmissao}).dxTextBox("instance");
		campoDataHora = $("#textDataHora").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
		campoSala = $("#selectSala").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
		campoLeito = $("#selectLeito").dxSelectBox({
			valueExpr: "Codigo", displayExpr: "Descricao", height: 27, onValueChanged: function (e) {  
				if (e.value != "" && e.value != null && carregarTela != 1) {
					$.getJSON(urlPreparacaoQui,{method:"AlteraLeito",pCodProntuario:pCodProntuario,pAdmissao:pAdmissao,
						pCodLeito:e.value},function(objeto){
							if (objeto.status==1){
								DevExpress.ui.notify("Leito alterado com Sucesso!","success");
							}else{
								DevExpress.ui.notify("Erro: "+objeto.status,"error");
							}
					});
				}
				carregarTela = "";
			}
		}).dxSelectBox("instance");
		campoPaciente = $("#textPaciente").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
		campoDataNascimento = $("#textDataNascimento").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
		campoIdade = $("#textIdade").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
		campoSexo = $("#textSexo").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
		//
		campoDiagnostico = $("#textDiagnostico").dxTagBox({
			height: 60,
			valueExpr: "Codigo", 
			displayExpr: "Descricao",
			searchEnabled: true,
			buttons: [{
				name: "btnPesquisarDiagnostico",
				location: "before",
				options: {
					hint: "Pesquisar",
					icon: "fa fa-search",
					type: "normal",
					onClick: function() {
						abrePesquisaCID(campoDiagnostico, campoDiagnostico.option("value"));
					}
				}
			}],
			itemTemplate: function (data, itemIndex, element) {
				if (CategoriaAnt != data.Categoria){
					retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
					CategoriaAnt = data.Categoria
					element.append(retorno)
				}
				return element.append(data.Descricao)
      },							
			dataSource: new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlPreparacaoQui,{
							method:"getCID",
							codigo: args
						});
					},
					load: function(args) {
						return $.getJSON(urlPreparacaoQui,{
							method:"getCID",
							usuario: YBED,
							skip:args.skip,
							take:args.take,
							searchValue:args.searchValue
						});
					}
				})
			})
		}).dxTagBox("instance");
		dataSourceMedico = new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				load: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"CarregaProfissional", 
						pFiltro: args.searchValue,
						pTake: args.take, 
						pSkip: args.skip, 
						YLOCATION: YLOCATION, 
						//pFlagExterno: "E",
						pLicenseType: "2231"
					});
				},
				byKey: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"CarregaProfissional", 
						pKey: args, 
						YLOCATION: YLOCATION, 
						//pFlagExterno: "E"
					});
				}
			})
		});
		
		campoMedicoExterno = $("#selectMedicoExterno").dxSelectBox({
			dataSource: dataSourceMedico,
			valueExpr: "CodProvider", 
			displayExpr: "DescProvider", 
			height: 27,
			searchEnabled: true
		}).dxSelectBox("instance");
		
		buttonAddMedico = $("#divMedicoExternoAdd").dxButton({
			icon: "add",
			hint: "Adicionar Médico",
			type: "normal",
			height: 27,
			onClick: function(){
				$("#divCadastrarMedico").dxPopup("show");
			}
		}).dxButton("instance");	
		//
		campoAbas = $("#divAbas").dxForm({
			showColonAfterLabel: false,
			labelLocation: "left",
			showRequiredMark: false,
			items: [{
				itemType: "tabbed",
				tabPanelOptions: {
  			  deferRendering: false, 
  			  selectedIndex: 1,
				},
				tabs: [
					/// Aba Pendentes
					{ title: "Intercorrências", name: "tabEventosAdversos", items: [
						{ template: function (data, itemElement) {
								itemElement.append("<div id='divEventosAdversos' style='height:"+height+"px;border:0px solid red;overflow-Y: auto;'>")
	          	}		                           	
			    	}	
					]},
					{ title: "Dados", name: "tabDados", items: [
						{ template: function (data, itemElement) {
								itemElement.append("<div id='divDados' class='aba' style='height:"+height+"px;border:0px solid red;overflow-Y: auto;'>")
	          	}		                           	
			    	}	
					]},
					{ title: "Reação", name: "tabSinaisSintomas", visible: false, items: [
						{ template: function (data, itemElement) {
								itemElement.append("<div id='divSinaisSintomas' class='aba' style='height:"+height+"px;border:0px solid red;overflow-Y: auto;'>")
	          	}		                           	
			    	}	
					]},
					{ title: "Prescrição para Atendimento", name: "tabPrescricaoAtendimento", items: [
						{ template: function (data, itemElement) {
								itemElement.append("<div id='divPrescricaoAtendimento' class='aba' style='height:"+height+"px;border:0px solid red;overflow-Y: auto;'>")
	          	}		                           	
			    	}	
					]},{ title: "Receituário", name: "tabReceituario", items: [
						{ template: function (data, itemElement) {
								itemElement.append("<div id='divReceituario' class='aba' style='height:"+height+"px;border:0px solid red;overflow-Y: auto;'>")
	          	}		                           	
			    	}	
					]},{ title: "Relatório", name: "tabDeclaracao", visible: (flagUsuarioMedico == 0 ? false : true), items: [
						{ template: function (data, itemElement) {
								itemElement.append("<div id='divDeclaracao' style='height:"+height+"px;border:0px solid red;overflow-Y: auto;'>")
	          	}		                           	
			    	}	
					]}
				]
			}]
		});
		$("#divEventosAdversos").load("VARContrAtendEventosAdversos.csp?YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#");
		$("#divDados").load("VARContrAtendPermeabilizacaoCateterDados.csp?YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#");
		$("#divReceituario").load("VARContrAtendReceituario.csp?YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#&YGIF=#(YGIF)#");
		$("#divIntercorrencias").load("VARContrAtendIntercorrencias.csp?YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#&YGIF=#(YGIF)#");
		$("#divDeclaracao").load("VARContrAtendAtestado.csp?YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#&YGIF=#(YGIF)#");
		$("#divPrescricaoAtendimento").load("VARContrAtendPrescricaoAtendimento.csp?YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#");
		$("#divSinaisSintomas").load("VARContrAtendPermeabilizacaoCateterSinais.csp?YBED=#(YBED)#&YUSER=#(YUSER)#&YM=0&YLOCATION=#(YLOCATION)#&YGIF=#(YGIF)#");
		//
		function recuperaProntuario(pCodProntuario){
			$.getJSON(urlPreparacao,{method:"GetProntuario",pCodProntuario:pCodProntuario},function(objeto){
				campoProntuario.option("value",objeto.codPaciente);
				campoDataHora.option("value",objeto.dataHora);
				campoSala.option("value",objeto.codSala);
				campoLeito.option({dataSource: eval(objeto.dSLeito), value: eval(objeto.codLeito)});
				campoPaciente.option("value",objeto.paciente);
				campoDataNascimento.option("value",objeto.dataNascimento);
				campoIdade.option("value",objeto.idade);
				campoSexo.option("value",objeto.sexo);
				//
				campoDiagnostico.option("value",objeto.diagnostico);
				campoMedicoExterno.option("value",objeto.medicoExterno);				
				//
				/*if (objeto.dataHoraAssinatura != "") {
					$("#spAssinar").css("color","green")
					$("#btnAssinar").attr("title", "PEP assinado por: "+objeto.assinatura+" ("+objeto.dataHoraAssinatura+")");
					$("#spAssinarTexto").css("color","green");
					$("#btnFinalizar").attr("bloquear","0")
					$("#btnFinalizar").attr("title", "PEP assinado por: "+objeto.assinatura+" ("+objeto.dataHoraAssinatura+")");
					$("#divExibirAssinaturaTitulo").html("PEP assinado por:");
					$("#divExibirAssinatura").html(objeto.assinatura+" ("+objeto.dataHoraAssinatura+")");
				}else{
					$("#spAssinar").css("color","#ffffff");
					$("#spAssinarTexto").css("color","#ffffff");
					$("#btnAssinar").attr("title", "Assinar");
					$("#btnFinalizar").css("background-color","#Cccccc")
					$("#btnFinalizar").css("border-color","#cccccc");
					$("#btnFinalizar").attr("bloquear","1")
					$("#btnFinalizar").attr("title", "Prontuário pendente de assinatura do Médico.");
					$("#divExibirAssinaturaTitulo").html("");
					$("#divExibirAssinatura").html("");
				}*/
				///
				campoPortCath.option("value",objeto.portaCath);
				campoPICC.option("value",objeto.pICC);
				campoHickman.option("value",objeto.hickman);
				campoHickmanOutros.option("value",objeto.hickmanOutros);
				campoOutros.option("value",objeto.outros);
				campoPuncaoAgulha20Gx10.option("value",objeto.puncaoAgulha20Gx10);
				campoPuncaoAgulha20Gx075.option("value",objeto.puncaoAgulha20Gx075);
				campoPuncaoRefluxoPositivo.option("value",objeto.puncaoRefluxoPositivo);
				campoPuncaoRefluxoNegativo.option("value",objeto.puncaoRefluxoNegativo);
				campoPuncaoCheckOutros.option("value",objeto.puncaoOutros);
				campoPuncaoOutros.option("value",objeto.puncaoDescricaoOutros);
				campoInfusao20mlSF09.option("value",objeto.infusao20mlSF09);
				campoInfusao40mlSF09.option("value",objeto.infusao40mlSF09);
				campoInfusaoSeringaHeparina.option("value",objeto.infusaoSeringaHeparina);
				campoInfusaoBoaInfusao.option("value",objeto.boaInfusaoeFluxoLivre);
				campoInfusaoObstruido.option("value",objeto.infusaoObstruido);
				campoPele.option("value",objeto.pele);
				campoPeleOutros.option("value",objeto.peleOutros);
				campoLiberacao.option("value",objeto.liberacao);
				campoLiberacaoOutros.option("value",objeto.liberacaoOutros);
				campoSelAlergia.option("value",objeto.alergia);
				campoAlergia.option("value",objeto.alergiaAQue);
				//
//				campoRTSinaisPulsoMais.option("value",objeto.rTSinSintMaisPulso);
				campoRTSinaisFebre.option("value",objeto.rTSinSintFebre);
				campoRTSinaisVomito.option("value",objeto.rTSinSintVomito);
				campoRTSinaisDorTorax.option("value",objeto.rTSinSintDornoTorax);
				campoRTSinaisSangramentos.option("value",objeto.rTSinSintSangramentos);
				//campoRTSinaisPulsoMenos.option("value",objeto.rTSinSintMenosPulso);
				campoRTSinaisCalafrios.option("value",objeto.rTSinSintCalafrios);
				campoRTSinaisCianose.option("value",objeto.rTSinSintCianose);
				campoRTSinaisUrticaria.option("value",objeto.rTSinSintUrticaria);
				campoRTSinaisUrinaEscura.option("value",objeto.rTSinSintUrinaEscura);
//				campoRTSinaisPAMais.option("value",objeto.rTSinSintMaisPA);
				campoRTSinaisDispneia.option("value",objeto.rTSinSintDispneia);
				campoRTSinaisDorLombar.option("value",objeto.rTSinSintDorLombar);
				campoRTSinaisEritema.option("value",objeto.rTSinSintEritema);
				campoRTSinaisVolUrinario.option("value",objeto.rTSinSintMenosVolUrinario);
				//campoRTSinaisPAMenos.option("value",objeto.rTSinSintMenosPA);
				campoRTSinaisTremor.option("value",objeto.rTSinSintTremor);
				campoRTSinaisDorCabeca.option("value",objeto.rTSinSintDordeCabeca);
				campoRTSinaisPrurido.option("value",objeto.rTSinSintPrurido);
				campoRTSinaisOutros.option("value",objeto.rTSinSintOutros);
				campoRTDescricao.option("value",objeto.rTSinSintOutrosDescrica);
				//
				campoSSQueixaDorFlebotomia.option("value",objeto.sSIncidenteNomomentodaf);
				campoSSQueixaDorPosteriormente.option("value",objeto.sSIncidentePosteriormen);
				campoSSQueixaDorData.option("value",objeto.sSIncidentePostData);
				campoSSHematoma.option("value",objeto.sSIncidenteHematoma);
				campoSSHematomaEspecificacao.option("value",objeto.sSIncidenteHematomaDesc);
				campoSSDorPuncao.option("value",objeto.sSIncidenteDorexcepSSiva);
				campoSSDorBraco.option("value",objeto.sSIncDorOutLocBra);
				campoSSDorBracoEspecificacao.option("value",objeto.sSIncDorOutLocBraDesc);
				campoSSAdormecimento.option("value",objeto.sSIncidenteAdormeciment); 
				campoSSChoques.option("value",objeto.sSIncidenteChoques);
				campoSSHiperemia.option("value",objeto.sSIncidenteHiperemia);
				campoSSHiperemiaEspecificacao.option("value",objeto.sSIncidenteHiperemiaDes);
				campoSSPuncaoArterial.option("value",objeto.sSIncidentePopSSivelpunc);
				campoSSInfiltracao.option("value",objeto.sSIncidenteInfiltracao);
				campoSSInfiltracaoEspecificacao.option("value",objeto.sSIncidenteInfiltracaoD);
				campoSSQueda.option("value",objeto.sSIncidenteQueda);
				campoSSLesaoAparente.option("value",objeto.sSIncidenteNenhumalesao);
				campoSSPossivelLesao.option("value",objeto.sSIncPopSSivelLesao);
				campoSSPossivelLesaoEspecificacao.option("value",objeto.sSIncPopSSivelLesaoDesc);
				campoSSDescricaoIncidente.option("value",objeto.sSDescricaoIncidente);		
				campoSSConduta.option("value",objeto.sSConduta);		
				campoSSConclusao.option("value",objeto.sSConclusao);	
				//
				preencherIcones();
				PopulaEnvendo();
			});
		}
		
		$("#btnFechar").click(function(){
			window.opener.carregaSala();
			window.close();
		});
		$("#btnArquivos").click(function(){
			$("#openPesquisaArquivo").dxPopup("show");
		});				

		$("#btnFinalizar").click(function(){
			if ($("#btnFinalizar").attr("bloquear") == "1") {
				DevExpress.ui.notify("Prontuário pendente de assinatura do Médico.","warning",1500);
				return
			}

			var result = DevExpress.ui.dialog.confirm("<i>Confirmar a finalização do atendimento?</i>", "Confirmação?");
			result.done(function(dialogResult) {
				if (dialogResult) {
					$.getJSON(urlPreparacaoQui,{method:"ArmFinalizar",pCodProntuario:pCodProntuario,
					pAdmissao:pAdmissao,origem:"PC",	pTerminoPedido:1},function(rs){
						window.opener.carregaSala();
						window.close();
					});
				}
			});
		});
		
		$("#btnAssinar").click(function(){
			salvarDados(1);
			dataSourceDados.reload();
		});
		$("#btnSalvar").click(function(p1){
			salvarDados(1);
		});		

		
		function salvarDados(flagAssinar){
			var pCodLeito = campoLeito.option("value");
			var pDiagnostico = campoDiagnostico.option("value");
			var pMedicoExterno	= campoMedicoExterno.option("value");
			//
			pPortCath = campoPortCath.option("value");
			pPICC = campoPICC.option("value");
			pHickman = campoHickman.option("value");
			pHickmanOutros = campoHickmanOutros.option("value");
			pOutros = campoOutros.option("value");
			pPuncaoAgulha20Gx10 = campoPuncaoAgulha20Gx10.option("value");
			pPuncaoAgulha20Gx075 = campoPuncaoAgulha20Gx075.option("value");
			pPuncaoRefluxoPositivo = campoPuncaoRefluxoPositivo.option("value");
			pPuncaoRefluxoNegativo = campoPuncaoRefluxoNegativo.option("value");
			pPuncaoOutros = campoPuncaoCheckOutros.option("value");
			pPuncaoDescricaoOutros = campoPuncaoOutros.option("value");
			pInfusao20mlSF09 = campoInfusao20mlSF09.option("value");
			pInfusao40mlSF09 = campoInfusao40mlSF09.option("value");
			pInfusaoSeringaHeparina = campoInfusaoSeringaHeparina.option("value");
			pInfusaoBoaInfusao = campoInfusaoBoaInfusao.option("value");
			pInfusaoObstruido = campoInfusaoObstruido.option("value");
			pPele = campoPele.option("value");
			pPeleOutros = campoPeleOutros.option("value");
			pLiberacao = campoLiberacao.option("value");
			pLiberacaoOutros = campoLiberacaoOutros.option("value");
			pSelAlergia = campoSelAlergia.option("value");
			pAlergia = campoAlergia.option("value");
			//
			var pRTSinSintMaisPulso = "";//campoRTSinaisPulsoMais.option("value");
			var pRTSinSintMenosPulso = "" //campoRTSinaisPulsoMenos.option("value");
			var pRTSinSintMaisPA = ""; //campoRTSinaisPAMais.option("value");
			var pRTSinSintMenosPA = ""; //campoRTSinaisPAMenos.option("value");
			var pRTSinSintFebre = campoRTSinaisFebre.option("value");
			var pRTSinSintCalafrios = campoRTSinaisCalafrios.option("value");
			var pRTSinSintDispneia = campoRTSinaisDispneia.option("value");
			var pRTSinSintTremor = campoRTSinaisTremor.option("value");
			var pRTSinSintVomito = campoRTSinaisVomito.option("value");
			var pRTSinSintCianose = campoRTSinaisCianose.option("value");
			var pRTSinSintDorLombar = campoRTSinaisDorLombar.option("value");
			var pRTSinSintDordeCabeca = campoRTSinaisDorCabeca.option("value");
			var pRTSinSintDornoTorax = campoRTSinaisDorTorax.option("value");
			var pRTSinSintUrticaria = campoRTSinaisUrticaria.option("value");
			var pRTSinSintEritema = campoRTSinaisEritema.option("value");
			var pRTSinSintPrurido = campoRTSinaisPrurido.option("value");
			var pRTSinSintSangramentos = campoRTSinaisSangramentos.option("value");
			var pRTSinSintUrinaEscura = campoRTSinaisUrinaEscura.option("value");
			var pRTSinSintMenosVolUrinario = campoRTSinaisVolUrinario.option("value");
			var pRTSinSintOutros = campoRTSinaisOutros.option("value");
			var pRTSinSintOutrosDescrica = campoRTDescricao.option("value");
			//
			var pSSIncidenteNomomentodaf = campoSSQueixaDorFlebotomia.option("value");
			var pSSIncidentePosteriormen = campoSSQueixaDorPosteriormente.option("value");
			var pSSIncidentePostData = campoSSQueixaDorData.option("text");
			var pSSIncidenteHematoma = campoSSHematoma.option("value");
			var pSSIncidenteHematomaDesc = campoSSHematomaEspecificacao.option("value");
			var pSSIncidenteDorexcepSSiva = campoSSDorPuncao.option("value");
			var pSSIncDorOutLocBra = campoSSDorBraco.option("value");
			var pSSIncDorOutLocBraDesc = campoSSDorBracoEspecificacao.option("value");
			var pSSIncidenteAdormeciment = campoSSAdormecimento .option("value");
			var pSSIncidenteChoques = campoSSChoques.option("value");
			var pSSIncidenteHiperemia = campoSSHiperemia.option("value");
			var pSSIncidenteHiperemiaDes = campoSSHiperemiaEspecificacao.option("value");
			var pSSIncidentePopSSivelpunc = campoSSPuncaoArterial.option("value");
			var pSSIncidenteInfiltracao = campoSSInfiltracao.option("value");
			var pSSIncidenteInfiltracaoD = campoSSInfiltracaoEspecificacao.option("value");
			var pSSIncidenteQueda = campoSSQueda.option("value");
			var pSSIncidenteNenhumalesao = campoSSLesaoAparente.option("value");
			var pSSIncPopSSivelLesao = campoSSPossivelLesao.option("value");
			var pSSIncPopSSivelLesaoDesc = campoSSPossivelLesaoEspecificacao.option("value");
			var pSSDescricaoIncidente = campoSSDescricaoIncidente.option("value");
			var pSSConduta = campoSSConduta.option("value");
			var pSSConclusao = campoSSConclusao.option("value");
			//
			if (pDiagnostico) pDiagnostico = pDiagnostico.join(",");
			;
			$.getJSON(urlPreparacao,{method:"ArmProntuario",pCodProntuario:pCodProntuario,pAdmissao:pAdmissao,
				pCodLeito:pCodLeito,pDiagnostico:pDiagnostico,pAssinar: flagAssinar,pPortCath:pPortCath,pPICC:pPICC,pHickman:pHickman,
				pHickmanOutros:pHickmanOutros,pOutros:pOutros,pPuncaoAgulha20Gx10:pPuncaoAgulha20Gx10,
				pPuncaoAgulha20Gx075:pPuncaoAgulha20Gx075,pPuncaoRefluxoPositivo:pPuncaoRefluxoPositivo,
				pPuncaoRefluxoNegativo:pPuncaoRefluxoNegativo,pPuncaoOutros:pPuncaoOutros,
				pPuncaoDescricaoOutros:pPuncaoDescricaoOutros,
				pInfusao20mlSF09:pInfusao20mlSF09,pInfusao40mlSF09:pInfusao40mlSF09,
				pInfusaoSeringaHeparina:pInfusaoSeringaHeparina,pInfusaoBoaInfusao:pInfusaoBoaInfusao,
				pInfusaoObstruido:pInfusaoObstruido,pPele:pPele,pPeleOutros:pPeleOutros,pLiberacao:pLiberacao,
				pLiberacaoOutros:pLiberacaoOutros,YBED:YBED,pAlergia:pAlergia,pSelAlergia:pSelAlergia,
				pMedicoExterno:pMedicoExterno,

				pSSIncidenteNomomentodaf: pSSIncidenteNomomentodaf,pSSIncidentePosteriormen: pSSIncidentePosteriormen,
				pSSIncidentePostData: pSSIncidentePostData,pSSIncidenteHematoma: pSSIncidenteHematoma,
				pSSIncidenteDorexcepSSiva: pSSIncidenteDorexcepSSiva,pSSIncDorOutLocBra: pSSIncDorOutLocBra,
				pSSIncDorOutLocBraDesc: pSSIncDorOutLocBraDesc,pSSIncidenteAdormeciment: pSSIncidenteAdormeciment,
				pSSIncidenteChoques: pSSIncidenteChoques,pSSIncidenteHiperemia: pSSIncidenteHiperemia,
				pSSIncidenteHiperemiaDes: pSSIncidenteHiperemiaDes,pSSIncidentePopSSivelpunc: pSSIncidentePopSSivelpunc,
				pSSIncidenteInfiltracao: pSSIncidenteInfiltracao,pSSIncidenteQueda: pSSIncidenteQueda,
				pSSIncidenteNenhumalesao: pSSIncidenteNenhumalesao,pSSIncPopSSivelLesao: pSSIncPopSSivelLesao,
				pSSIncPopSSivelLesaoDesc: pSSIncPopSSivelLesaoDesc,pSSConclusao: pSSConclusao,
				pSSIncidenteInfiltracaoD: pSSIncidenteInfiltracaoD,
				pSSIncidenteHematomaDesc: pSSIncidenteHematomaDesc,
				pSSDescricaoIncidente:pSSDescricaoIncidente,pSSConduta:pSSConduta,pRTSinSintMaisPulso: pRTSinSintMaisPulso, pRTSinSintMenosPulso: pRTSinSintMenosPulso, 
				pRTSinSintMaisPA: pRTSinSintMaisPA, pRTSinSintMenosPA: pRTSinSintMenosPA, pRTSinSintFebre: pRTSinSintFebre, 
				pRTSinSintCalafrios: pRTSinSintCalafrios, pRTSinSintDispneia: pRTSinSintDispneia, pRTSinSintTremor: pRTSinSintTremor, 
				pRTSinSintVomito: pRTSinSintVomito, pRTSinSintCianose: pRTSinSintCianose, pRTSinSintDorLombar: pRTSinSintDorLombar, 
				pRTSinSintDordeCabeca: pRTSinSintDordeCabeca, pRTSinSintDornoTorax: pRTSinSintDornoTorax, pRTSinSintUrticaria: pRTSinSintUrticaria, 
				pRTSinSintEritema: pRTSinSintEritema, pRTSinSintPrurido: pRTSinSintPrurido, pRTSinSintSangramentos: pRTSinSintSangramentos, 
				pRTSinSintUrinaEscura: pRTSinSintUrinaEscura, pRTSinSintMenosVolUrinario: pRTSinSintMenosVolUrinario, 
				pRTSinSintOutros: pRTSinSintOutros, pRTSinSintOutrosDescrica: pRTSinSintOutrosDescrica				
				
				},function(objeto){
				if (objeto.status==1){
					if (objeto.dataHoraAssinatura != "") {
						$("#spAssinar").css("color","green")
						$("#btnAssinar").attr("title", "PEP assinado");
						$("#spAssinarTexto").css("color","green");
						$("#btnFinalizar").attr("bloquear","0")
						$("#btnFinalizar").css("background-color","")
						$("#btnFinalizar").css("border-color","");
						
						//LEAN-259
						//Bloqueia todos os campos de todas as abas, somente para visualização quando PEP estiver finalizado
						$('.aba .dx-toolbar-button, .aba .dx-button').css("visibility","hidden")
						$('.aba .dx-textbox').each(function(){ try { $(this).dxTextArea('instance').option('readOnly',true) } catch (ex) {} })
						$('.aba .dx-texteditor').each(function(){ try { $(this).dxTextBox('instance').option('readOnly',true) } catch (ex) {} })
						$('.aba .dx-checkbox').each(function(){ try { $(this).dxCheckBox('instance').option('readOnly',true) } catch (ex) {} })
						$('.aba .dx-selectbox').each(function(){ try { $(this).dxSelectBox('instance').option('readOnly',true) } catch (ex) {} })
						$('.aba .dx-selectbox').each(function(){ try { $(this).dxTagBox('instance').option('readOnly',true) } catch (ex) {} })
						$('.aba .dx-numberbox').each(function(){ try { $(this).dxNumberBox('instance').option('readOnly',true) } catch (ex) {} })
						$('.aba .dx-radiogroup').each(function(){ try { $(this).dxRadioGroup('instance').option('disabled',true) } catch (ex) {} })
						$('.aba .dx-checkbox-icon').each(function(){ try { $(this).dxCheckBox('instance').option('disabled',true) } catch (ex) {} })
						$('.aba .dx-datebox').each(function(){ try { $(this).dxDateBox('instance').option('disabled',true) } catch (ex) {} })
						
					}else{
						$("#spAssinar").css("color","#ffffff");
						$("#spAssinarTexto").css("color","#ffffff");
						$("#btnAssinar").attr("title", "Assinar");
						$("#btnFinalizar").css("background-color","#Cccccc")
						$("#btnFinalizar").css("border-color","#cccccc");
						$("#btnFinalizar").attr("bloquear","1")
						$("#btnFinalizar").attr("title", "Prontuário pendente de assinatura do Médico.");
						$("#divExibirAssinaturaTitulo").html("");
						$("#divExibirAssinatura").html("");
					}
					if (flagAssinar) {
						DevExpress.ui.notify("PEP Assinado com Sucesso!","success");
					}else{
						DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
					}
					preencherIcones();
				}else{
					DevExpress.ui.notify("Erro: "+objeto.status,"error");
				}
			});
		};		

		function preencherIcones(){
			$.get(urlPreparacaoQui,{method:"ImprimirIcones",pCodProntuario:pCodProntuario, pCodSetor: "PERMEABILIZACAOCATETER"},
			function(rs){
				$("#divIcones").html(rs);
			});
		}
		
		function alertaPrescricao(){
			var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.AlertaPrescricao(pCodProntuario))#;
			retorno = JSON.parse(retorno);
			
			$("#divAlertaPrescricao").html("&nbsp;");
			
			if (retorno.AA) {
				$("#divAlertaPrescricao").append("<div>Prescrição para Atendimento</div>");
			}
			if (retorno.CA) {
				$("#divAlertaPrescricao").append("<div>Prescrição Suspensa</div>");
			}
		}			

		function abrePesquisaCID(objRetornoCID, conteudoCampo){
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Pesquisa CID",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHidden: function(){
							var arrayCID	= [];
							openPesquisaCIDLista.getSelectedRowsData().then(function (rowData) {
								$.each(rowData, function(count, dados) {
									arrayCID.push(dados.CodigodoCID);
								});
							}).done(function(){
				      	objRetornoCID.option("value", arrayCID)  
							});
			      }
		    
		    }		
		    if ($("#openPesquisaCID").html()!=""){
		    	openPesquisaCID.dispose()
		    	openPesquisaCIDLista.dispose()
		    }
	 			$("#openPesquisaCID").html("<div id='openPesquisaCIDLista'></div>")
				openPesquisaCID = $("#openPesquisaCID").dxPopup(popupOptions).dxPopup("instance")
				preparaPesquisaCID(conteudoCampo)
		}		
		
		function preparaPesquisaCID(pConteudoCampo){
	      openPesquisaCIDLista = $("#openPesquisaCIDLista").dxDataGrid({
				dataSource:  new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						key: "CodigodoCID",
						loadMode: "raw",
						load: function(){
		        	var d = $.Deferred();
							$.getJSON(urlPreparacaoQui, {method: "getListCID"},function(retorno){
								d.resolve(retorno);
								openPesquisaCIDLista.selectRows(pConteudoCampo, true); 
							});
							return d.promise();
						}
					})
				}),
				columns: [
					{dataField: "CodigodoCID",caption: "Código"},
					{dataField: "DescricaoResumida", caption: "Descrição"},
					{dataField: "DescCategoria",caption: "Categoria", groupIndex: 0},
				],	
				allowColumnReordering: true,
				columnAutoWidth: true,
				selection: { mode: "multiple", deferred: true },
				allowColumnResizing: true,
				height: "100%",	
				headerFilter: { visible: false },
				hoverStateEnabled: true,
				filterRow: { visible: true },
				showBorders: true,
				showRowLines: true,
				grouping: { autoExpandAll: false },
				searchPanel: { visible: false }, 
				groupPanel: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				columnChooser: { enabled: false, mode: "dragAndDrop" },
				sorting: { mode: "multiple" },
				rowAlternationEnabled: true,
				wordWrapEnabled:true,
				pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [20, 50, 100, 150, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 20 }
			}).dxDataGrid("instance")
		}
		
		function PopulaEnvendo(){
			$.getJSON(urlPreparacaoQui,{method:"RecuperaUltimoEventoAdverso",pAdmissao:pAdmissao},function(objRetorno){
				campoDataEventosA.option({"value":objRetorno.data});
				campoHoraEventosA.option({"value":objRetorno.hora});
				campoDescicaoEventosA.option({"value":objRetorno.descricao});
				campoCondutaEventosA.option({"value":objRetorno.conduta});
			})
			
		}
		dataSourceArquivo = new DevExpress.data.DataSource({ 
			store: new DevExpress.data.CustomStore({
				loadMode: "raw",
				load: function(){
					return $.getJSON(urlPreparacaoQui, {method: "getArquivos", pAdmissao: pAdmissao, YGIF: #(YGIF)#},function(retorno){
					});
				},
				remove : function(args){
					#server(VAR.CSP.VARContrAtendQuimioterapico.removerArquivo(args.Arquivo))#
				}
			})
		});		
		$("#openPesquisaArquivo").dxPopup({
			visible: false,
			title: "Anexos",
			width: 650,
			height: 500,
			position: {
				my: "center",
				at: "center",
				of: window
			},
			dragEnabled: true,
			contentTemplate: function(e) {
				gridArquivos = $("<div id='gridArquivos'>").dxDataGrid({
					dataSource: dataSourceArquivo,
					columns: [
						{dataField: "Documento"},
						{dataField: "dataModificacao", caption: "Data"},
					],	
					editing: {
						mode: "row",
						allowDeleting: true,
						useIcons: true
					},
					allowColumnReordering: true,
					columnAutoWidth: true,
					allowColumnResizing: true,
					height: "100%",	
					headerFilter: { visible: false },
					hoverStateEnabled: true,
					filterRow: { visible: true },
					showBorders: true,
					showRowLines: true,
					grouping: { autoExpandAll: false },
					searchPanel: { visible: false }, 
					groupPanel: { visible: false },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					columnChooser: { enabled: false, mode: "dragAndDrop" },
					sorting: { mode: "multiple" },
					rowAlternationEnabled: true,
					wordWrapEnabled:true,
					onRowClick: function(e){
						if (e.rowType == "data") {
							window.open(e.key.Arquivo,"Visualizar")
						}
					},
					pager: {
						showPageSizeSelector: true,
						allowedPageSizes: [20, 50, 100, 150, 200],
						showInfo: true,
						showNavigationButtons: true,
						visible: true 
					},
					paging: { enabled: true, pageSize: 20 },
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift({
							location: "after",
							widget: "dxButton",
							options: {
								icon: "fa fa-upload",
								height: 36,
								width: 36,
								hint: "Upload de Prontuário",
								onClick: function(e) {
									window.open("VARUploadArquivoPEPEnfermagem.csp?pAdmissao="+pAdmissao,"uploadArquivo","width=450,height=200,"+
									"scrollbars=0,resizable=0,menubar=0,location=0,top=100,left=100")
									//uploadExames()
								}
							}
						})
					}
				});
				
				e.append(gridArquivos);
			}        		
		});

		$("#divCadastrarMedico").dxPopup({
			visible: false,
			title: "Cadastrar Médico",
			width: 650,
			height: 280,
			position: {
				my: "center",
				at: "center",
				of: window
			},
			dragEnabled: true,
			contentTemplate: function(e) {
				formCadastrarMedico = $("<div id='formCadastrarMedico'>").dxForm({
					readOnly: false,
					alignItemLabels: true,
					showColonAfterLabel: true,
					labelLocation: "top",
					colCount: 4,
					items: [
						{dataField: "Nome", label: { text: "Nome"}, colSpan: 4},
						{dataField: "CRMUF", label: { text: "U.F. CRM"}, colSpan: 1},
						{dataField: "CRMNumero", label: { text: "Número CRM"}, colSpan: 1, editorType: "dxNumberBox"},
						{},
						{},
						{},
						{itemType: "button", horizontalAlignment: "right", buttonOptions: {
	           	text: "Salvar", icon: "save",
							onClick: function(){
								var pNome = $("#formCadastrarMedico").dxForm("instance").getEditor("Nome").option("value");
								var pUFCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMUF").option("value");
								var pCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMNumero").option("value");
								//pré medicaçãoPreMedicacao
								if (pNome == "" || pUFCRM == "" || pCRM == "" ) {
									DevExpress.ui.notify("É obrigatório preencher todos os campos","warning",1500);
									return;
								}
								$.get(urlPreparacaoTransf,{method:"ArmMedico", pNome:pNome, 
									pUFCRM:pUFCRM, pCRM:pCRM,YBED:YBED},function(objeto){
									var array = objeto.split("|")
									if (array[0]==1){
										dataSourceMedico.reload();
										DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
										$("#divCadastrarMedico").dxPopup("hide");
										campoMedicoExterno.option("value",array[1])
								}else{
										DevExpress.ui.notify("Erro: "+array[0],"error");
									}
								});
							}}
						},
						{itemType: "button", horizontalAlignment: "left", buttonOptions: {
	          	text: "Fechar", icon: "close",
							onClick: function(){
								$("#divCadastrarMedico").dxPopup("hide");
							}}
						}
					]
				});
				
				e.append(formCadastrarMedico);
			}        		
		});
		
	</script>
	</body>
</html>