<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
<script language="Cache" runat="server">
    do ^WWWVAR

	set YUSER = $get(%request.Data("YUSER", 1))
    set YBED = $get(%request.Data("YBED", 1))
    set YM = $get(%request.Data("YM", 1))
    set YLOCATION = $get(%request.Data("YLOCATION", 1))

    set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
    set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
    set PageName = %request.PageName
    set app = %request.Application
    set host = %request.CgiEnvs("HTTP_HOST")
    set url = "http://"_host_app

	set param="EP=1&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
	set paramEncrypt = $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)

    set URLPreparacao = "VAR.CSP.RegimesTerapeuticos.cls"
    set URLLogin = "COMLogin.cls"
	set cid		 = $get(^TempRegimesTerapeuticos(0,YBED,1))
    set nomeLocal = YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

    //Verifica se a sessão
    set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
</script>

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Regimes Terapêuticos</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

    <!-- Custom Elements -->
    <link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
    <link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
    <link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

    <!-- Fonts Padrão IPP -->
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

    <!-- DevExtreme themes -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.css" />
    
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />

    
    
    <!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <style>
    
.first-group,
.second-group {
    padding: 10px;
}

.semBordasLaterais {
	padding-left:0px!important;
	padding-right:0px!important;
}

</style>

</head>
    <script type="text/javascript">

        var status = '#(status)#';
        var URLLogin = '#(URLLogin)#';
        var ygif = '#(YGIF)#'

        if (status == 0) {
            alert('#(YBED_" - "_YUSER)#Usuário não está logado ou a sessão expirou.')
            window.location.replace(URLLogin)
        }

    </script>

<body>
<div id="toolbar"></div>
<div id="divForm"></div>
<div id="dvCiclo"></div>
<div id="dvMedicamento"></div>

    <!-- REQUIRED JS SCRIPTS -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

	<!-- JSZip library -->
	<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

    <!-- A DevExtreme library -->
    <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>
    
    <!-- DevExtreme-Intl module -->
    <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>
    
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

    <!--Definições globais e criação de funcionalidades encapsuladas-->
    <script type="text/javascript">
        //Deixando variáveis disponíveis no cliente
		$.ajaxSetup({
		  headers : {   
		    'id_key' : '#(paramEncrypt)#'
		  }
		});
        
        var urlPreparacao = '#(URLPreparacao)#';
		var codCID = ""

		var prepareSearchInputs = (function () {
			// Prepara o formulário
			dados = ""
		 	toolBar = $("#toolbar").dxToolbar({
		        items: [{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "save",
				        hint	: "Salvar os Dados",
				        type	: "success",
				        text	: "Salvar",
				        stylingMode : "contained",
				        onClick	: function(){
					        salvarDados()
					    }
			        }
		        },{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "fa fa-eraser",
				        hint	: "Limpar os Campos",
				        type	: "default",
				        text	: "Limpar",
				        stylingMode : "contained",
				        onClick	: function(){
					        
					    }
			        }
		        }]
		    }).dxToolbar("instance")
		 
		 
			$("#divForm").dxForm({
				scrollingEnabled	: true,
				screenByWidth: function(width) {
		            return "lg";
		        },
				activeStateEnabled:true,
		        items: [{
		            itemType: "group",
		            cssClass: "first-group",
		            items: [{
	                    dataField	: "cid",
						editorOptions: {
	                        width: "80%"
	                    },
						validationRules: [{
		                    type: "required"
		                }],				   
		                editorType: "dxSelectBox",
		            	editorOptions: {
							itemTemplate: function (data, itemIndex, element) {
								if (CategoriaAnt != data.Categoria){
									retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
									CategoriaAnt = data.Categoria
									element.append(retorno)
								}
								return element.append(data.Descricao)
					        },							
					        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
				                byKey: function(args) {
					                CategoriaAnt = ""
				                    return $.getJSON(urlPreparacao,{
					                    method:"getCID",
					                    codigo: args
					                });
				                },
					            load: function(args) {
						            CategoriaAnt = ""
				                    return $.getJSON(urlPreparacao,{
					                    method:"getCID",
			                        	skip:args.skip,
			                        	take:args.take,
			                        	searchValue:args.searchValue
					                });
					                }
					            })
					        }),
							onValueChanged: function(e) {
								$("#divForm").dxForm("instance").updateData("tratamento","")
								$("#divForm").dxForm("instance").getEditor("tratamento").getDataSource().pageIndex(0)
								$("#divForm").dxForm("instance").getEditor("tratamento").getDataSource().reload()
							}
		            	}
	                },{
	                    dataField	: "tratamento",
						editorOptions: {
	                        width: "80%"
	                    },
		                editorType: "dxSelectBox",
		            	editorOptions: {
							itemTemplate: function (data, itemIndex, element) {
								if (tipoAnt != data.Tipo){
									retorno = "<b><i>"+data.Tipo+"</i></b><br><br>"
									tipoAnt = data.Tipo
									element.append(retorno)
								}
								return element.append(data.Descricao)
					        },							
			            	showClearButton	: true,
					        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							placeholder: "Novo",
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
						            loadMode: "raw",
						            load: function(args) {
							            tipoAnt = ""
					                    return $.getJSON(urlPreparacao,{
						                    method	: "listTratamento",
						                    cid		: $("#divForm").dxForm("instance").option("formData").cid
						                });
					                }
					            })
					        }),
							onValueChanged: function(e) {
								carregaTratamento()
							}
		            	}
	                }]
		        },{
			        cssClass: "second-group",
					itemType: "tabbed",
	                name 	: "abas",
	                
					tabPanelOptions: {
						deferRendering: false,
			   		},		
					tabs:[{
						title	: "Dados Gerais",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='geral'>")
                   			}
                   		}],
					},{
						title	: "Ciclos",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='ciclos'>")
                   		}}],
					}]
				}]
	        }).dxForm("instance")
	        
	        //
        });


	    function carregaTratamento(){
            $.getJSON(urlPreparacao,{
                method		: "getTratamento",
                cid			: $("#divForm").dxForm("instance").option("formData").cid,
                tratamento	: $("#divForm").dxForm("instance").option("formData").tratamento,
            },function(retorno){
	            console.log(retorno)
	            $("#ciclosTabela").dxDataGrid("instance").getDataSource().pageIndex(0)
	            $("#ciclosTabela").dxDataGrid("instance").getDataSource().reload()
	            if (retorno.status==0){
		            $("#geral").dxForm("instance").resetValues()
	            }else{
		            $("#geral").dxForm("instance").option("formData",retorno.formData)
	            }
	            $("#gridReferencias").dxDataGrid("instance").getDataSource().reload()
	        });
	    }
	    
		function carregaGeral(){
			$("#geral").dxForm({
				screenByWidth: function(width) {
		            return "lg";
		        },
				activeStateEnabled:true,
				scrollingEnabled	: true,
			    height:function(){
					return window.innerHeight-235
				},
				onContentReady : function(){
					montaGridReferencias()
				},
				colCount	: 6,
				items:[{
					colSpan		: 6,
					dataField	: "nome",
					validationRules: [{
	                    type: "required"
	                }],				   
                    label		: {
						text	: "Nome do Regime Terapêutico"
					},
				},{
					colSpan		: 6,
					dataField	: "observacoes",
                    label		: {
						text	: "Observações do Regime Terapêutico"
					},
					editorType: "dxTextArea", 
				},{
					colSpan		: 6,
					dataField	: "terapiaSuporte",
                    label		: {
						text	: "Terapia de Suporte"
					},
					editorType: "dxSelectBox", 
					editorOptions: {
		                searchEnabled: true,
		                showClearButton: true,
        		        valueExpr: "Codigo", 
						displayExpr: "Descricao",
						searchEnabled: true,
						dataSource: new DevExpress.data.DataSource({
				            store: new DevExpress.data.CustomStore({
					            loadMode: "raw",
				                byKey: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	: "listTratamento",
			        	            	cid		: $("#divForm").dxForm("instance").option("formData").cid,
			        	            	tipo	: 9,
					                    codigo	: args
					                });
				                },
					            load: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	: "listTratamento",
			        	            	cid		: $("#divForm").dxForm("instance").option("formData").cid,
			        	            	tipo	: 9,
										searchValue:args.searchValue,
										filter:JSON.stringify(args.filter),
			                        	skip:args.skip,
			                        	take:args.take,
					                });
				                }
				            })
						})
					}					
				},{
					colSpan		: 3,
					dataField	: "grupoTipoRegime",
                    label		: {
						text	: "Grupo Tipo de Regime"
					},
					editorType: "dxSelectBox", 
					editorOptions: {
						value:"1",
        		        valueExpr: "value", 
						displayExpr: "text",
			            dataSource : [
			            	{"value": "1.1", "text": "Mieloma Múltiplo - Terapia de Prevenção de Perda Óssea"},
							{"value": "1.2", "text": "Mieloma Múltiplo - Terapia de Primeira Linha para Candidatos a Transplante"},
							{"value": "1.3", "text": "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Fit"},
							{"value": "1.4", "text": "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Frágil"},
							{"value": "1.5", "text": "Mieloma Múltiplo - Terapia de Segunda Linha e Terapia Subsequente"},
							{"value": "2.1", "text": "Mieloma Indolente"},
							{"value": "3.1", "text": "Amiloidose de Cadeia Leve - Terapia de Primeira Linha"},
							{"value": "3.2", "text": "Amiloidose de Cadeia Leve - Terapia de Segunda Linha e Subsequente"}
					    ]
					}
				},{
					colSpan		: 3,
					dataField	: "tipoRegime",
                    label		: {
						text	: "Tipo de Regime"
					},
					validationRules: [{
	                    type: "required"
	                }],				   
					editorType: "dxSelectBox", 
					editorOptions: {
						value:"1",
        		        valueExpr: "value", 
						displayExpr: "text",
			            dataSource : [{
					        "text": "Preferencial",
					        "value": "1"
					    },{
					        "text": "Outras Possibilidades",
					        "value": "2"
					    },{
						    "text": "Regimes Recomendados",
					        "value": "3"
					    },{
						    "text": "Útil em determinadas circunstâncias",
					        "value": "4"
					    },{
					        "text": "Terapia de Suporte",
					        "value": "9"
					    }]
					}
				},{
					colSpan		: 3,
					dataField	: "terapiaComplementar",
                    label		: {
						text	: "Terapia Complementar"
					},
					editorType: "dxSelectBox", 
					editorOptions: {
						value:"1",
        		        valueExpr: "value", 
						displayExpr: "text",
			            dataSource : [{
					        "text": "Sim",
					        "value": 1
					    },{
					        "text": "Não",
					        "value": 0
					    }]
					},
				},{
					colSpan		: 3,
					dataField	: "situacao",
                    label		: {
						text	: "Situação"
					},
					validationRules: [{
	                    type: "required"
	                }],				   
					editorType: "dxSelectBox", 
					editorOptions: {
						value:"1",
        		        valueExpr: "value", 
						displayExpr: "text",
			            dataSource : [{
					        "text": "Ativo",
					        "value": "1"
					    },{
					        "text": "Inativo",
					        "value": "0"
					    }]
					},
				},{
					colSpan		: 3,
					dataField	: "suporteDireto",
                    label		: {
						text	: "Suporte direto ao medicamento"
					},
					editorType: "dxSelectBox", 
					editorOptions: {
		                searchEnabled: true,
		                showClearButton: true,
        		        valueExpr: "CodMedicamento", 
						displayExpr: "DescMedicamento",
						searchEnabled: true,
						dataSource: new DevExpress.data.DataSource({
				            store: new DevExpress.data.CustomStore({
				                byKey: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	:"listaMedicamentos",
					                    codigo	: args
					                });
				                },
					            load: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	:"listaMedicamentos",
										searchValue:args.searchValue,
										filter:JSON.stringify(args.filter),
			                        	skip:args.skip,
			                        	take:args.take,
										
					                });
				                }
				            })
						})
					}
				},{
					colSpan		: 3,
					dataField	: "ajusteDose",
                    label		: {
						text	: "Ajuste de Dose"
					},
					editorType: "dxSelectBox", 
					editorOptions: {
		                searchEnabled: true,
		                showClearButton: true,
        		        valueExpr: "CodMedicamento", 
						displayExpr: "DescMedicamento",
						searchEnabled: true,
						dataSource: new DevExpress.data.DataSource({
				            store: new DevExpress.data.CustomStore({
				                byKey: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	:"listaMedicamentos",
					                    codigo	: args
					                });
				                },
					            load: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	:"listaMedicamentos",
										searchValue:args.searchValue,
										filter:JSON.stringify(args.filter),
			                        	skip:args.skip,
			                        	take:args.take,
										
					                });
				                }
				            })
						})
					}
				},{
					colSpan		: 6,
					dataField	: "precaucoes",
                    label		: {
						text	: "Precauções"
					},
					editorType: "dxTextArea", 
				},{
					colSpan		: 6,
					dataField	: "principaisToxicidades",
                    label		: {
						text	: "Principais Toxicidades"
					},
					editorType: "dxTextArea", 
				},{
					colSpan		: 6,
					dataField	: "examesControle",
                    label		: {
						text	: "Exames de Controle"
					},
					editorType: "dxTextArea", 
				},{
					colSpan		: 6,
					itemType	: "group",
					caption		: "Referências",
					items		: [{
						template	: "<div id='gridReferencias'></div>", 
					}]
				}]
			}).dxForm("instance")
		}

		function montaGridReferencias(){
			$("#gridReferencias").dxDataGrid({
				dataSource	: new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method		:"getReferencias"
			                });
		                },
			            insert: function(args) {
				            console.log(args)
		                    return $.getJSON(urlPreparacao,{
			                    method	: "insertReferencia",
			                    dados	: JSON.stringify(args)
			                });
		                },
						update: function(args,args2) {
				            if (args2.estudo) args.estudo = args2.estudo
				            if (args2.referencias) args.referencias = args2.referencias
				            if (args2.linkReferencia) args.linkReferencia = args2.linkReferencia
		                    return $.getJSON(urlPreparacao,{
			                    method	: "insertReferencia",
			                    dados	: JSON.stringify(args)
			                });
		                },		                
		                remove: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method	: "delReferencia",
			                    linha	: args.id
			                });
		                }
			        })
				}),
				columns		: [{
					dataField	: "estudo",
					caption		: "Estudo", 
				},{
					dataField	: "referencias",
					caption		: "Referências do tratamento"
	       		},{
					dataField	: "linkReferencia",
					caption		: "Link para a referência"
	       		}],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: false },
				editing: {
		            mode: "cell",
		            allowUpdating: true,
		            allowAdding	 : true,
		            allowDeleting: true,
	                useIcons: true,
		        },					
				height: function() {
					return "300px";
				},	
				selection: { mode: "single" },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
			})

		}
		function carregaCiclos(){

			$("#ciclos").dxForm({
				activeStateEnabled:true,
				scrollingEnabled	: true,
		    	height	:function() {
					return window.innerHeight-235
				},
				items:[{
                    template	: function (data, itemElement) {
	                	itemElement.append("<div id='ciclosTabela'>")
           			}
				}]
			}).dxForm("instance")
			$("#ciclosTabela").dxDataGrid({
				dataSource	: new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method:"getCiclos",
	                        	tipoRegime : $("#geral").dxForm("instance").option("formData").tipoRegime
			                });
		                },
			            remove: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method	: "delCiclo",
			                    ciclo	: args.ciclo
			                });
		                }
			        })
				}),
				columns		: [{
					dataField: "ciclo",
					caption: "Ciclo", 
					alignment: "center"
				},{
					dataField	: "periodicidade",
					caption		: "Periodicidade"
	       		},{
					dataField	: "medicamento",
					caption		: "Medicamento"
	       		},{
					dataField	: "dose",
					caption		: "Dose"
	       		},{
					dataField	: "viaAdministracao",
					caption		: "Via de Administração"
	       		},{
					dataField	: "posologia",
					caption		: "Posologia"
	       		},{
					dataField	: "diasTratamento",
					caption		: "Dias de Tratamento"
	       		},{
					dataField	: "observacoes",
					caption		: "Observações",
					width		: "300px"
	       		}],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: true, pageSize: 10 },
				editing: {
		            mode: "popup",
		            allowUpdating: false,
		            allowAdding	 : false,
		            allowDeleting: true,
	                useIcons: true,
		        },					
				height: function() {
					return window.innerHeight - 235;
				},	
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						ciclo = selectedItems.selectedRowsData[0].ciclo
						addCiclo(ciclo)
					}
				},
				selection: { mode: "single" },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon	: "add",
							height	: 36,
							text	: "Inserir Ciclo",
							hint	: "Inserir Ciclo",
							type	: "default",
							stylingMode : "contained",
							onClick: function(e) {
								$.getJSON(urlPreparacao,{
							    	method:"novoCiclo"
			    				},function(retorno){
				    				addCiclo(retorno.ciclo)
				    			})

								
							}
						}
					})
				}				
	
			})
		}
		
		function addCiclo(ciclo){
			$("#dvCiclo").dxPopup({
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Adicionar/Editar Ciclo",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
				toolbarItems: [{
					location:"before",
					toolbar :"top",
				},{
					widget: "dxButton",
					location:"before",
					toolbar:"bottom",
					options: { 
						width	: "130px",
						type	: "default",
						icon	: "close",
            			text	: "Fechar", 
            			onClick : function(){
	            			$("#dvCiclo").dxPopup("instance").hide()
                		}
					}
				}],			        
		        onHiding	: function(){
			        $("#ciclosTabela").dxDataGrid("instance").clearSelection()
			        $("#ciclosTabela").dxDataGrid("instance").getDataSource().reload()
			    },
				onContentReady: function(){
					carregaFormCiclo(ciclo)
				},
				contentTemplate: function(e) {
					conteudoDialog = $("<div id='dvConteudoDialogCiclo'></div>")
					e.append(conteudoDialog);
				}		
		    })	
		}
		
		function carregaFormCiclo(ciclo){
            $.getJSON(urlPreparacao,{
                method:"recDadosCiclo",
                ciclo : ciclo
            },function(retorno){
	            console.log(retorno.formData)
				$("#dvConteudoDialogCiclo").dxForm({
					formData 			: retorno.formData,
					scrollingEnabled	: true,
					screenByWidth: function() {
			            return "lg";
			        },
					activeStateEnabled:true,
					colCount	: 10,
			        items: [{
				        colSpan		: 3,
			            dataField	: "ciclo",
			            disabled 	: true,
	                    label		: {
							text	: "Número do Ciclo"
						},
			        },{
				        colSpan		: 3,
			            dataField	: "periodicidade",
	                    label		: {
							text	: "Periodicidade (dias)"
						},
						editorType	: "dxNumberBox",
						editorOptions: {
							format: "#0",
							//disabled : retorno.formData.continuoPeriodicidade==1?true:false
						}
			        },{
				        colSpan		: 4,
					    dataField	: "continuoPeriodicidade",
						label		: {
							alignment	: "left",
							text		: "Uso"
						},
						editorType	: "dxSelectBox",
			            editorOptions: {
			                showClearButton: true,
	        		        valueExpr: "codigo", 
							displayExpr: "desc",
							dataSource: [{codigo:0,desc:"Cíclico"},{codigo:1,desc:"Contínuo"},{codigo:2,desc:"Até progressão de doença ou toxicidade"}]
			            
				        }
			        },{
				        colSpan		: 10,
				        template	: function (data, itemElement) {
				        	itemElement.append("<div id='gridCadCiclo'>")
	                   	}
			        }],
			        onContentReady: function(){
				        carregaGridCiclo(ciclo)
			        },
			    	onFieldDataChanged	: function(obj){
				    	if (obj.value==undefined) return
						if (obj.dataField=="continuoPeriodicidade"){
							/*formulario = $("#dvConteudoDialogCiclo").dxForm("instance")
							if (obj.value==true){
								var editor = formulario.getEditor("periodicidade");
								editor.option("disabled",true)
								formulario.updateData("periodicidade","")
							}else{
								var editor = formulario.getEditor("periodicidade");
								editor.option("disabled",false)
							}*/
						}
			            $.post(urlPreparacao,{
			                method	:"salvaDadosCiclo",
			                ciclo	: ciclo,
			                campo	: obj.dataField,
			                valor	: obj.value
			            },function(){},'json')
			    	}			        
				})
	        });
		}
		
		function carregaGridCiclo(ciclo){
			$("#gridCadCiclo").dxDataGrid({
				dataSource	: new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method:"recCiclo",
			                    ciclo : ciclo,
			                    tipoRegime : $("#geral").dxForm("instance").option("formData").tipoRegime
			                });
		                },
			            remove: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method	: "delCicloSequencia",
			                    ciclo	: args.ciclo,
			                    nseq	: args.nseq
			                });
		                }
			        })
				}),
				columns		: [{
					dataField	: "medicamento",
					caption		: "Medicamento"
	       		},{
					dataField	: "dose",
					caption		: "Dose"
	       		},{
					dataField	: "viaAdministracao",
					caption		: "Via de Administração"
	       		},{
					dataField	: "posologia",
					caption		: "Posologia"
	       		},{
					dataField	: "diasTratamento",
					caption		: "Dias de Tratamento"
	       		},{
					dataField	: "observacoes",
					caption		: "Observações",
					width		: "300px"
	       		}],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: true, pageSize: 10 },
				editing: {
		            mode: "popup",
		            allowUpdating: false,
		            allowAdding	 : false,
		            allowDeleting: true,
	                useIcons: true,
		        },					
				height: function() {
					//return window.innerHeight - 235;
				},	
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						ciclo = selectedItems.selectedRowsData[0].ciclo
						sequencia = selectedItems.selectedRowsData[0].nseq
						addMedicamento(ciclo,sequencia)
					}
				},
				selection: { mode: "single" },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon	: "add",
							height	: 36,
							text	: "Inserir Medicamento",
							hint	: "Inserir Medicamento",
							type	: "default",
							stylingMode : "contained",
							onClick: function(e) {
								//ciclo = $("#dvConteudoDialogCiclo").dxForm("instance").option("formData").ciclo
								$.getJSON(urlPreparacao,{
							    	method:"novaSequencia",
							    	ciclo : ciclo
			    				},function(retorno){
				    				addMedicamento(ciclo,retorno.sequencia)
				    			})
							}
						}
					})
				}
			})			
			
		}
		
		function addMedicamento(ciclo,sequencia){
			$("#dvMedicamento").dxPopup({
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Adicionar/Editar Medicamento",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
				toolbarItems: [{
					location:"before",
					toolbar :"top",
				},{
					widget: "dxButton",
					location:"before",
					toolbar:"bottom",
					options: { 
						width	: "130px",
						type	: "default",
						icon	: "close",
            			text	: "Fechar", 
            			onClick : function(){
	            			$("#dvMedicamento").dxPopup("instance").hide()
                		}
					}
				},{
					widget: "dxButton",
					location:"after",
					toolbar:"bottom",
					options: { 
						width	: "130px",
						type	: "default",
						icon	: "check",
            			text	: "Salvar", 
            			onClick : function(){
                			salvarMedicamento()
                		}
					}
				}],			        
		        onHiding	: function(){
			        $("#gridCadCiclo").dxDataGrid("instance").clearSelection()
			        $("#gridCadCiclo").dxDataGrid("instance").getDataSource().reload()
			    },
				onContentReady: function(){
					carregaFormMedicamento(ciclo,sequencia)
				},
				contentTemplate: function(e) {
					conteudoDialog = $("<div id='dvConteudoDialogMed'></div>")
					e.append(conteudoDialog);
				}		
		    })	
		}
		
		function carregaFormMedicamento(ciclo,sequencia){
			$.getJSON(urlPreparacao,{
				method		: "recSequencia",
				ciclo 		: ciclo,
				sequencia 	: sequencia
			},function(retorno){
				tipoRegime = $("#geral").dxForm("instance").option("formData").tipoRegime
				$("#dvConteudoDialogMed").dxForm({
					formData: retorno.formData,
					scrollingEnabled	: true,
					screenByWidth: function() {
			            return "lg";
			        },
					activeStateEnabled			: true,
		    		alignItemLabels 			: true,
		    		alignItemLabelsInAllGroups	: true,
			    	onFieldDataChanged	: function(obj){
				    	if (obj.value==undefined) return
				    	if (obj.dataField=="doseUnid"){
					    	$("#dvConteudoDialogMed").dxForm("instance").updateData("doseApresUnid",obj.value)
				    	}
				    	if (obj.dataField=="via"){
					    	obj.component.beginUpdate()
					    	if (obj.value==1){
					    		obj.component.itemOption("mudancas","visible",true)
					    		obj.component.itemOption("endovenosa","visible",false)
					    	}else{
					    		obj.component.itemOption("endovenosa","visible",true)
					    		obj.component.itemOption("mudancas","visible",false)
					    	}
					    	obj.component.endUpdate()
				    	}
						if (obj.dataField=="continuoDiaInicial"){
							formulario = $("#dvConteudoDialogMed").dxForm("instance")
							if (obj.value==true){
								formulario.updateData("diaInicial","")
								formulario.updateData("continuoDiaFinal",true)
								var editor = formulario.getEditor("diaInicial");
								editor.option("disabled",true)
								var editor = formulario.getEditor("continuoDiaFinal");
								editor.option("disabled",true)
							}else{
								var editor = formulario.getEditor("diaInicial");
								editor.option("disabled",false)
								var editor = formulario.getEditor("continuoDiaFinal");
								editor.option("disabled",false)
								formulario.updateData("continuoDiaFinal",false)
							}
						}
						if (obj.dataField=="continuoDiaFinal"){
							formulario = $("#dvConteudoDialogMed").dxForm("instance")
							if (obj.value==true){
								formulario.updateData("diaFinal","")
								var editor = formulario.getEditor("diaFinal");
								editor.option("disabled",true)
							}else{
								
								var editor = formulario.getEditor("diaFinal");
								editor.option("disabled",false)
							}
						}
			    	},
			        items: [{
				        itemType: "group",
			            colCount : 12,
			            items:[{
					        colSpan		: 2,
				            dataField	: "sequencia",
				            disabled 	: true,
		                    label		: {
								text	: "Sequência"
							},
			            },{
				            itemType	: "empty",
				            colSpan		: 10,
				        },{
					        colSpan		: 12,
				            dataField: "medicamento",
		                    label		: {
								text	: "Medicamento"
							},
							validationRules: [{
			                    type: "required"
			                }],				   
							editorType	: "dxSelectBox",
				            editorOptions: {
				                searchEnabled: true,
				                showClearButton: true,
		        		        valueExpr: "CodMedicamento", 
								displayExpr: "DescMedicamento",
								searchEnabled: true,
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
						                byKey: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	:"listaMedicamentos",
							                    codigo	: args
							                });
						                },
							            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	:"listaMedicamentos",
												searchValue:args.searchValue,
												filter:JSON.stringify(args.filter),
					                        	skip:args.skip,
					                        	take:args.take,
												
							                });
						                }
						            })
								})
					        }
				        },{
					        colSpan		: 3,
				            dataField: "dose",
		                    label		: {
								text	: "Dose"
							},
							validationRules: [{
			                    type: "required"
			                }],
				        },{
					        colSpan		: 2,
				            dataField	: "doseUnid",
				            cssClass	: "semBordasLaterais",
		                    label		: {
								visible : false
							},
							validationRules: [{
			                    type: "required"
			                }],				   
							editorType	: "dxSelectBox",
							editorOptions: {
		        		        valueExpr: "Cod", 
								displayExpr: "Desc",
								searchEnabled: true,
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
						                byKey: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	: "listaINPARA",
					        	            	chave	: "UNIDDOSAGEM",
							                    codigo	: args
							                });
						                },
							            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	: "listaINPARA",
					        	            	chave	: "UNIDDOSAGEM",
												searchValue:args.searchValue,
												filter:JSON.stringify(args.filter),
					                        	skip:args.skip,
					                        	take:args.take,
							                });
						                }
						            })
								})
							}			
				        },{
					        colSpan		: 7,
				            dataField: "via",
		                    label		: {
								text	: "Via de Administração"
							},
							validationRules: [{
			                    type: "required"
			                }],				   
							editorType	: "dxSelectBox",
							editorOptions: {
				                searchEnabled: true,
				                showClearButton: true,
		        		        valueExpr: "Cod", 
								displayExpr: "Desc",
								searchEnabled: true,
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
						                byKey: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	: "listaINPARA",
					        	            	chave	: "VIAADMINISTRACAO",
							                    codigo	: args
							                });
						                },
							            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	: "listaINPARA",
					        	            	chave	: "VIAADMINISTRACAO",
												searchValue:args.searchValue,
												filter:JSON.stringify(args.filter),
					                        	skip:args.skip,
					                        	take:args.take,
							                });
						                }
						            })
								})
							}			
				        },{
					        colSpan		: 4,
				            dataField: "posologia",
		                    label		: {
								text	: "Posologia"
							},
							validationRules: [{
			                    type: "required"
			                }],				   
							editorType	: tipoRegime=="9"?"dxTextBox":"dxSelectBox",
							editorOptions: {
				                searchEnabled: true,
				                showClearButton: true,
		        		        valueExpr: "Cod", 
								displayExpr: "Desc",
								searchEnabled: true,
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
						                byKey: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	: "listaINPARA",
					        	            	chave	: "POSOLOGIA",
							                    codigo	: args
							                });
						                },
							            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	: "listaINPARA",
					        	            	chave	: "POSOLOGIA",
												searchValue:args.searchValue,
												filter:JSON.stringify(args.filter),
					                        	skip:args.skip,
					                        	take:args.take,
							                });
						                }
						            })
								})
							}			
				        },{
					        colSpan		: 3,
				            dataField: "diaInicial",
		                    label		: {
								text	: "Dia Inicial"
							},
							validationRules: [{
			                    type: "required"
			                }],				   
							editorType	: tipoRegime=="9"?"dxTextBox":"dxTextBox",
							editorOptions: {
								format: "#0",
								disabled : retorno.formData.continuoDiaInicial==1?true:false
							}
				        },{
					        colSpan		: tipoRegime=="9"?5:1,
	   					    dataField	: "continuoDiaInicial",
							label		: {
								alignment	: "left",
				                location	: "right",
								text		: "Uso Contínuo?",
								showColon	: false
							},
							editorType	: "dxCheckBox",
				        },{
					        colSpan		: 3,
					        visible		: tipoRegime=="9"?false:true,
				            dataField: "diaFinal",
							validationRules: [{
			                    type: "required"
			                }],				   
		                    label		: {
								text	: "Dia Final"
							},
							editorType	: tipoRegime=="9"?"dxTextBox":"dxNumberBox",
							editorOptions: {
								format: "#0",
								disabled : retorno.formData.continuoDiaFinal==1?true:false
							}
				        },{
	   					    dataField	: "continuoDiaFinal",
	   					    visible		: tipoRegime=="9"?false:true,
							label		: {
								alignment	: "left",
				                location	: "right",
								text		: "Uso Contínuo?",
								showColon	: false
							},
							editorType	: "dxCheckBox",
							editorOptions: {
								disabled : retorno.formData.continuoDiaInicial==1?true:false
							}
				        },{
					        colSpan		: 12,
					        itemType	: "group",
					        name		: "mudancas",
					        caption		: "Apresentação",
					        visible		: retorno.formData.via==1?true:false,
					        colCount	: 12,
					        items		: [{
						        colSpan		: 3,
					            dataField: "doseApresentacao",
			                    label		: {
									text	: "Dose"
								},
								validationRules: [{
				                    type: "required"
				                }]
					        },{
						        colSpan		: 2,
					            dataField	: "doseApresUnid",
					            cssClass	: "semBordasLaterais",
			                    label		: {
									visible : false
								},
								validationRules: [{
				                    type: "required"
				                }],				   
								editorType	: "dxSelectBox",
								editorOptions: {
									readOnly	: true,
			        		        valueExpr	: "Cod", 
									displayExpr	: "Desc",
									searchEnabled: true,
									dataSource: new DevExpress.data.DataSource({
							            store: new DevExpress.data.CustomStore({
							                byKey: function(args) {
							                    return $.getJSON(urlPreparacao,{
						        	            	method	: "listaINPARA",
						        	            	chave	: "UNIDDOSAGEM",
								                    codigo	: args
								                });
							                },
								            load: function(args) {
							                    return $.getJSON(urlPreparacao,{
						        	            	method	: "listaINPARA",
						        	            	chave	: "UNIDDOSAGEM",
													searchValue:args.searchValue,
													filter:JSON.stringify(args.filter),
						                        	skip:args.skip,
						                        	take:args.take,
								                });
							                }
							            })
									})
								}			
					        },{
						        colSpan		: 7,
					            dataField	: "doseApresentacaoUnid",
			                    label		: {
									text : "Unidade de Apresentação"
								},
								validationRules: [{
				                    type: "required"
				                }],				   
								editorType	: "dxSelectBox",
								editorOptions: {
			        		        valueExpr: "Cod", 
									displayExpr: "Desc",
									searchEnabled: true,
									dataSource: new DevExpress.data.DataSource({
							            store: new DevExpress.data.CustomStore({
							                byKey: function(args) {
							                    return $.getJSON(urlPreparacao,{
						        	            	method	: "listaINPARA",
						        	            	chave	: "UNIDDOSAGEMAPRESENTACAO",
								                    codigo	: args
								                });
							                },
								            load: function(args) {
							                    return $.getJSON(urlPreparacao,{
						        	            	method	: "listaINPARA",
						        	            	chave	: "UNIDDOSAGEMAPRESENTACAO",
													searchValue:args.searchValue,
													filter:JSON.stringify(args.filter),
						                        	skip:args.skip,
						                        	take:args.take,
								                });
							                }
							            })
									})
								}			
				        	}]
				        },{
					        colSpan		: 12,
					        itemType	: "group",
					        name		: "endovenosa",
					        caption		: "Diluição",
					        visible		: retorno.formData.via==1?false:true,
					        colCount	: 12,
					        items		: [{
					        	colSpan		: 3,
				            	dataField: "diluicao",
		                    	label		: {
									text	: "Diluição (ml)"
								},
								validationRules: [{
			                    	type: "required"
			                	}]
				        	},{
					        	colSpan		: 2,
				            	dataField	: "diluicaoEm",
				            	cssClass	: "semBordasLaterais",
			                    label		: {
									visible : false
								},
								validationRules: [{
				                    type: "required"
				                }],				   
								editorType	: "dxSelectBox",
								editorOptions: {
			        		        valueExpr: "Cod", 
									displayExpr: "Desc",
									searchEnabled: true,
									dataSource: new DevExpress.data.DataSource({
							            store: new DevExpress.data.CustomStore({
							                byKey: function(args) {
							                    return $.getJSON(urlPreparacao,{
						        	            	method	: "listaINPARA",
						        	            	chave	: "MEIODILUICAO",
								                    codigo	: args
								                });
							                },
								            load: function(args) {
							                    return $.getJSON(urlPreparacao,{
						        	            	method	: "listaINPARA",
						        	            	chave	: "MEIODILUICAO",
													searchValue:args.searchValue,
													filter:JSON.stringify(args.filter),
						                        	skip:args.skip,
						                        	take:args.take,
								                });
							                }
							            })
									})
								}			
				        	},{
					        	colSpan		: 7,
				            	dataField	: "tempoInfusao",
		                    	label		: {
									text	: "Tempo Infusão"
								},
								validationRules: [{
			                    	type: "required"
			                	}]
				        	}]
				        }]
			        }],
				})
			})
		}
		
		function salvarMedicamento(){
			formMedicamento = $("#dvConteudoDialogMed").dxForm("instance")
			if (!formMedicamento.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
			$.post(urlPreparacao,{
                method		:"salvaMedicamento",
                formulario	: JSON.stringify(formMedicamento.option("formData"))
            },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	            if (retorno.status==1){
		            $("#dvMedicamento").dxPopup("instance").hide()
	            }
	        },'json');

			
		}
		
		function salvarDados(){
			formulario = $("#divForm").dxForm("instance")
			formGeral = $("#geral").dxForm("instance")
			if (!formulario.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
			if (!formGeral.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
		  	dadosCabecalho = formulario.option("formData")
		  	dadosGeral = formGeral.option("formData")
            $.post(urlPreparacao,{
                method		:"salvaDados",
                formulario	: JSON.stringify(dadosCabecalho),
                geral		: JSON.stringify(dadosGeral),
            },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	            if (retorno.status==1){
					formulario.updateData("tratamento",retorno.tratamento)
					formulario.getEditor("tratamento").getDataSource().pageIndex(0)
		            formulario.getEditor("tratamento").getDataSource().reload()
	            }
	        },'json');
			
		}

		
        DevExpress.localization.locale("pt");

        $(document).ready(function () {
            prepareSearchInputs();
            carregaGeral()
            carregaCiclos()
            carregaTratamento()
            if ("#(cid)#"!=""){
            	$("#divForm").dxForm("instance").updateData("cid","#(cid)#")
            }
        });


    </script>
</body>
</html>
