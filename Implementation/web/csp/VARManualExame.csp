<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER = $get(%request.Data("YUSER", 1))
		set YBED = $get(%request.Data("YBED", 1))
		set YM = $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
		set PageName = %request.PageName
		set app = %request.Application
		set host = %request.CgiEnvs("HTTP_HOST")
		set url = "http://"_host_app

		set URLPreparacao = "VAR.CSP.ManualExame.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLLogin = "COMLogin.cls"
		set URLLink = "www.cls"

		set nomeLocal = YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)

		//Recupera status Tela Leitura ou Edição
		Set statusTela = ##class(VAR.CSP.ManualExame).GetStatusTela(YBED)

	</script>
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Pacientes</title>
		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">
		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />
		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">
		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->
		<style>
			.first-group,
			.second-group {
				padding: 10px;
			}
		</style>
	</head>
	<script type="text/javascript">
		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'
		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}
	</script>
	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divSearch"></div>
		<div id="divAddExecutor"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>
		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>
		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>
		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>
		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>
		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao = '#(URLPreparacao)#';
			var urlLink = '#(URLLink)#';
			var YBED = '#(YBED)#';
			var YUSER = '#(YUSER)#';
			var YLOCATION = '#(YLOCATION)#';
			var nomeLocal = '#(nomeLocal)#';
			var statusTela = #(statusTela)#;
			var codExame = "";
			var codExecutor = "";

			var prepareSearchInputs = (function () {
				// Prepara o formulário
				dados = ""
				toolBar = $("#toolbar").dxToolbar({
					items: [{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "search",
							hint: "Pesquisar",
							type: "default",
							stylingMode: "contained",
							onClick: function(){
								$("#divSearch").dxPopup("show");
								montaSearchLista();
							}
						}
					},{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "save",
							hint: "Salvar os Dados",
							disabled: statusTela,
							type: "success",
							stylingMode: "contained",
							onClick: function(){
								if (!formulario.validate().isValid){
									DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
									return
								}
						  	dados = formulario.option("formData")
		            $.getJSON(
		            	urlPreparacao,
		            	{method: "SalvaDados", dados: JSON.stringify(dados)},
		            	function(retorno){
		        				DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
									}
								);
							}
						}
					},{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-eraser",
							hint: "Limpar os Campos",
							type: "default",
							stylingMode: "contained",
							onClick: function(){
								formulario.getEditor("exame").option("value",null);
								formulario.getEditor("executor").option("value",null);
								formulario.getEditor("descricaoDieta").option("value",null);
								formulario.getEditor("preco").option("value",null);
								formulario.getEditor("alteradoEm").option("value",null);
								formulario.getEditor("tempoResultado").option("value",null);
								formulario.getEditor("situacao").option("value",null);
								formulario.getEditor("descricaoPaciente").option("value",null);
								formulario.getEditor("descricaoColeta").option("value",null);
								formulario.getEditor("descricaoTecnica").option("value",null);
								codExame = "";
								codExecutor = "";
							}
						}
					}]
				}).dxToolbar("instance")

				dataSourceExecutor = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						loadMode: "raw", 
						load: function(args) {
							return $.getJSON(urlPreparacao,{
								method:"GetExecutor",
								statusTela: statusTela,
								codExame: codExame,
							});
						}
					})
				});
				if (statusTela == 1) {
					validationRules = [];
				}else{
					validationRules = [{type: "required"}];
				}

				formulario = $("#divForm").dxForm({
					activeStateEnabled: true,
					labelLocation: "top",
					showColonAfterLabel: false,
					items: [{
						itemType: "group",
						cssClass: "first-group",
						colCount: 2,
						items: [{
							dataField	: "exame",
							validationRules: validationRules,				   
							editorType: "dxSelectBox",
							editorOptions: {
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
								searchEnabled: true,
								dataSource: new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacao,{
												method:"GetExame",
												statusTela: statusTela,
												codigo: args
											});
										},
										load: function(args) {
											return $.getJSON(urlPreparacao,{
												method:"GetExame",
												statusTela: statusTela,
												skip:args.skip,
												take:args.take,
												searchValue:args.searchValue
											});
										}
									})
								}),
								onValueChanged: function(e) {
									formulario.getEditor("executor").option("value",null);
									codExecutor = "";
									codExame = e.value;
									dataSourceExecutor.reload();
									carregaDados();
								}
							}
						},{
							dataField: "executor",
							validationRules: validationRules,				   
							editorType: "dxSelectBox",
							editorOptions: {
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
								searchEnabled: true,
								dataSource: dataSourceExecutor,
								onValueChanged: function(e) {
									codExecutor = e.value;
									carregaDados();
								},
								buttons: [{
									name: "btnAddExecutor",
									location: "after",
									options: {
										hint: "Cadastrar Novo Executor",	
										icon: "add",
										type: "normal",
										disabled: statusTela,
										onClick: function(){
											$("#divAddExecutor").dxPopup("show");	
											$("#formAddExecutor").dxForm("instance").option("formData",[]);
										}
									}
								}],
							}
						}]
					},{
						cssClass: "second-group",
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
							deferRendering: false,
						},		
						tabs:[{
							title: "Dieta",
							items: [{
								itemType: "group",
								cssClass: "first-group",
								colCount: 4,
								items: [{
									colSpan: 3,
									itemType: "group",
									cssClass: "first-group",
									items: [{
										dataField: "descricaoDieta",
										label: {
											text: " "
										},
										editorType: "dxTextArea",
										editorOptions: {
											readOnly: statusTela,
											height: 268
										},
									},{
									 template	: function (data, itemElement) {
		                	itemElement.append("<div style='height:"+(window.innerHeight-540)+"px;'>")
	               		}
	               	}]
								},{
									itemType: "group",
									cssClass: "first-group",
									items: [{
										dataField: "preco",
										validationRules: validationRules,				   
										label: {
											text: "Preço"
										},
										editorType: "dxNumberBox",
										editorOptions: {
											readOnly: statusTela,
											format: "#,##0.00",
										},
									},{
										dataField: "alteradoEm",
										readOnly: true,
										label: {
											text: "Data Última Atualização"
										},
										editorOptions: {
											readOnly: true,
										},
									},{
										dataField: "tempoResultado",
										validationRules: validationRules,				   
										editorOptions: {
											readOnly: statusTela,
										},
										label: {
											text: "Tempo Resultado"
										}
									},{
										dataField: "situacao",
										validationRules: validationRules,	
										editorType: "dxSelectBox",			   
										editorOptions: {
											valueExpr: "Codigo", 
											displayExpr: "Descricao",
											dataSource: [{Codigo:"A",Descricao:"Ativo"},{Codigo:"I",Descricao:"Inativo"}],
											readOnly: statusTela,
										},
										label: {
											text: "Situação"
										}
									}]
								}]
							}],
						},{
							title: "Paciente",
							items: [{
								itemType: "group",
								cssClass: "first-group",
								items: [{
									dataField: "descricaoPaciente",
									label: {
										text: " "
									},
									editorType: "dxTextArea",
									editorOptions: {
										readOnly: statusTela,
										height: 268
									},
								},{
								 template	: function (data, itemElement) {
	                	itemElement.append("<div style='height:"+(window.innerHeight-520)+"px;'>")
               		}
               	}]
							}],
						},{
							title: "Coleta",
							items: [{
								itemType: "group",
								cssClass: "first-group",
								items: [{
									dataField: "descricaoColeta",
									label: {
										text: " "
									},
									editorType: "dxTextArea",
									editorOptions: {
										readOnly: statusTela,
										height: 268
									},
								},{
								 template	: function (data, itemElement) {
	                	itemElement.append("<div style='height:"+(window.innerHeight-520)+"px;'>")
               		}
               	}]
							}],
						},{
							title: "Técnica",
							items: [{
								itemType: "group",
								cssClass: "first-group",
								items: [{
									dataField: "descricaoTecnica",
									label: {
										text: " "
									},
									editorType: "dxTextArea",
									editorOptions: {
										readOnly: statusTela,
										height: 268
									},
								},{
								 template	: function (data, itemElement) {
	                	itemElement.append("<div style='height:"+(window.innerHeight-520)+"px;'>")
               		}
               	}]
							}],
						}]
					}]
				}).dxForm("instance");
			});
      DevExpress.localization.locale("pt");
	    $(document).ready(function () {
	      prepareSearchInputs();
	    });

		$("#divAddExecutor").dxPopup({
			visible: false,
			title: "Executor",
			width: 600,
			height:  200,
			position: {
				my: "center",
				at: "center",
				of: window
			},
			dragEnabled: true,
			contentTemplate: function(e) {
				formAddExecutor = $("<div id='formAddExecutor'>").dxForm({
					readOnly: false,
					alignItemLabels: true,
					showColonAfterLabel: true,
					labelLocation: "left",
					colCount: 2,
					items: [
						{ dataField: "executor", colSpan:2, label:{text:"Executor"}, validationRules: [{type: "required"}],
						},{
							itemType: "button",
							horizontalAlignment: "right",
							buttonOptions: {
								icon: "save",
								text: "Salvar",
								type: "success",
								onClick: function(){
									formAddExecutor = $("#formAddExecutor").dxForm("instance");
									if (!formAddExecutor.validate().isValid){
										DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
										return
									}
							  	dados = formAddExecutor.option("formData")
			            $.getJSON(
			            	urlPreparacao,
			            	{method: "SalvaExecutor", executor: dados.executor},
			            	function(retorno){
			        				DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
											if (retorno.tipo == "success") {
												dataSourceExecutor.reload();
												formulario.getEditor("executor").option("value",retorno.id);
												codExecutor = retorno.id;
												carregaDados();
												$("#divAddExecutor").dxPopup("hide");
											}
										}
									);
								}
							}
						},{
							itemType: "button",
							horizontalAlignment: "left",
							buttonOptions: {
								icon: "close",
								text: "Fechar",
								type: "default",
								onClick: function(){
									formulario.getEditor("executor").option("value",null);
									codExecutor = "";
									dataSourceExecutor.reload();
									carregaDados();
									$("#divAddExecutor").dxPopup("hide");
								}
							}
						},
					],
				});
				e.append(formAddExecutor);
			}
		});
		
		$("#divSearch").dxPopup({
			visible: false,
			title: "Consulta Resultados/Evolutivo",
			width: window.innerWidth - 20,
			height:  window.innerHeight - 20,
			position: {
				my: "center",
				at: "center",
				of: window
			},
			dragEnabled: true,
			contentTemplate: function(e) {
				divSearchLista = $("<div id='divSearchLista'><div id='divSearchListaDados'></div></div>")
				e.append(divSearchLista);
			}
		});

			function montaSearchLista(){
				if ($("#divSearchListaDados")) $("#divSearchListaDados").remove();

				$("#divSearchLista").html("<div id='divSearchListaDados'></div>");
				
				$("#divSearchListaDados").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							load: function(args) {
								return $.getJSON(urlPreparacao,{
									method:"GetSearch",
									statusTela: statusTela,
									codExame: codExame,
								});
							}
						})
					}),	
					columns: [
						{dataField: "descExame", caption: "Exame", alignment: "left", groupIndex: 0 },
						{dataField: "descExecutor", caption: "Executor", alignment: "left" },
						{dataField: "preco", caption: "Preço", editorType: "Number" },
						{dataField: "tempoResultado", caption: "Tempo Resultado", alignment: "center" },
						{dataField: "alteradoEm", caption: "Data Última Atualização", alignment: "center" },
						{dataField: "situacao", caption: "Situação", alignment: "center" },
						{dataField: "descricaoDieta", caption: "Descrição Dieta", alignment: "left" },
						{dataField: "descricaoPaciente", caption: "Descrição Paciente", alignment: "left" },
						{dataField: "descricaoColeta", caption: "Descrição Coleta", alignment: "left" },
						{dataField: "descricaoTecnica", caption: "Descrição Técnica", alignment: "left" },
					],
					filterRow: { visible: false },
					hoverStateEnabled: true,
					columnsAutoWidth: true,
					searchPanel: {
	          visible: true,
	          width: 240,
	        },
					grouping: {
						allowCollapsing: true,
						autoExpandAll: true,
					},
					sorting: {
	        	mode: "multiple"
	      	},
					headerFilter: {
						visible:true
					},		
					filterRow:{
						visible:true
					},
					groupPanel: {
						visible: true
					},	
					height: window.innerHeight - 120,				
					columnFixing: { enabled: true },
					showBorders: true,
					showRowLines: true,
					columnChooser: {
						enabled: false,
						mode: "dragAndDrop" 
					},
					stateStoring: {
			    	enabled: false
					},
					rowAlternationEnabled: true,
					selection: { mode: "single" },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							formulario.getEditor("exame").option("value",selectedItems.selectedRowKeys[0].codExame);
							formulario.getEditor("executor").option("value",selectedItems.selectedRowKeys[0].codExecutor);
							codExame = selectedItems.selectedRowKeys[0].codExame;
							codExecutor = selectedItems.selectedRowKeys[0].codExecutor;
							carregaDados();
							$("#divSearch").dxPopup("hide");
						}
					}
				});
			}
		
	    function carregaDados(){
		  	if (codExame == "" || codExame == null || codExecutor == "" || codExecutor == null) {
					formulario.getEditor("descricaoDieta").option("value",null);
					formulario.getEditor("preco").option("value",null);
					formulario.getEditor("alteradoEm").option("value",null);
					formulario.getEditor("tempoResultado").option("value",null);
					formulario.getEditor("situacao").option("value",null);
					formulario.getEditor("descricaoPaciente").option("value",null);
					formulario.getEditor("descricaoColeta").option("value",null);
					formulario.getEditor("descricaoTecnica").option("value",null);
					return;
		  	}  
	      $.getJSON(
	      	urlPreparacao,
	      	{method: "RecuperarDados", codExame: codExame, codExecutor: codExecutor},
	      	function(retorno){
						formulario.getEditor("descricaoDieta").option("value",retorno.descricaoDieta);
						formulario.getEditor("preco").option("value",retorno.preco);
						formulario.getEditor("alteradoEm").option("value",retorno.alteradoEm);
						formulario.getEditor("tempoResultado").option("value",retorno.tempoResultado);
						formulario.getEditor("situacao").option("value",retorno.situacao);
						formulario.getEditor("descricaoPaciente").option("value",retorno.descricaoPaciente);
						formulario.getEditor("descricaoColeta").option("value",retorno.descricaoColeta);
						formulario.getEditor("descricaoTecnica").option("value",retorno.descricaoTecnica);
					}
				);
		  	
		  }
	    
		</script>
	</body>
</html>