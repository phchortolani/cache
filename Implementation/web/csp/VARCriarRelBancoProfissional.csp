<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		Do ^WWWVAR
 
		Set YUSER 		= $Get(%request.Data("YUSER", 1))
		Set YBED 			= $Get(%request.Data("YBED", 1))
		Set YM 				= $Get(%request.Data("YM", 1))
		Set YLOCATION = $Get(%request.Data("YLOCATION", 1))

		Set PortCache = $Get(%request.CgiEnvs("SERVER_PORT"))
		Set PageURL 	= $Get(%request.CgiEnvs("CACHE_URL"))
		Set PageName 	= %request.PageName
		Set app 			= %request.Application  
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		set tipoPref 	= "HTTP" ;%request.CgiEnvs("HTTP_X_FORWARDED_PROTO")
		Set url				= tipoPref_"://"_host_app

		set param					= "EP=1&YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set paramEncrypt 	= $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)

		set URLPreparacao	= "VAR.CSP.VARCriarRelBancoProfissional.cls"
		Set URLSearch			= "User.Search.PesquisasJson.cls"
		set URLLogin 			= "COMLogin.cls"
		Set URLLink 			= "www.cls"

		Set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)
		
		Set dataMinLimite	= $ZDate(+$Horolog,3)

		//Verifica se a sessão
		Set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Criação de Relatórios</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var url	= '#(url)#';
		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}
	</script> 

	<style> 
	.cell-selected {
		background-color: #FFFFB9;
	}

	.dx-datagrid {
		user-select: none;
		-webkit-user-select: none;
	}		

	.dx-row2 { background-color: #F5F5F5; }
	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }

  .second-group-semBorda{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #FFFFFF;
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #FFFFFF;
		border-left: 1px solid #FFFFFF;
		border-right: 1px solid #FFFFFF;
		border-bottom: 1px solid #FFFFFF;
  }
  
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	

	</style>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="loadpanel"></div>
		<div id="informacao"></div>
		<div id="divGrupoColunas"></div>

				
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx-gantt.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			
			var urlPreparacao	= '#(URLPreparacao)#';
			var urlSearch			= '#(URLSearch)#';

			$.ajaxSetup({
			  headers : {   
			    'id_key' : '#(paramEncrypt)#'
			  }
			});

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");


			// Monta o LoadPanel
			loadPanel = $("#loadpanel").dxLoadPanel({
				visible: false,
				showIndicator: true,
				showPane: true,
				shading: true,
				shadingColor:"rgba(255,255,255,.6)",
				closeOnOutsideClick: false,
			}).dxLoadPanel("instance");

			// Monta toolbar
			objToolbar = $("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget: "dxButton",
					options: {
						elementAttr: { id: "botaoSalvar" },
						icon: "save", hint: "Salvar", text: "Salvar",
						type: "success", stylingMode: "contained",
						onClick: function () {
							if (!objGeral.validate().isValid){
				        DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
				        return
			        }
			        pCodRelatorio = objForm.getEditor("relatorio").option("value");
			        if (pCodRelatorio == null || pCodRelatorio == "+") pCodRelatorio = "";
			        
			        $.getJSON(urlPreparacao, {method: "ArmRelatorio", pCodRelatorio: pCodRelatorio, 
			        pObjDados: JSON.stringify(objGeral.option("formData"))}, function(objRetorno){
								if (objRetorno.status == 1){
									DevExpress.ui.notify("Dados armazenado com sucesso.", "success", 4000);
									if (pCodRelatorio == "") {
										dSRelatorio.reload();
										setTimeout(function(){objForm.getEditor("relatorio").option("value", objRetorno.codRelatorio);}, 30);
									}
								}else{
									DevExpress.ui.notify("Erro no armazenamento: " + objRetorno.status, "error", 4000);
								}
				      });
						}
					}
				}, {
					location: "after",
					widget: "dxButton",
					options: {
						icon: "fa fa-eraser", hint: "Limpar", type: "default",
						text: "Limpar", stylingMode: "contained",
						onClick: function () {
							objForm.getEditor("relatorio").option("value", "");
							objGeral.resetValues();
						}
					}
				}]
			}).dxToolbar("instance");
			
			dSRelatorio = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlPreparacao,{ method: "ListRelatorio", pCodRelatorio: args });
					},
					load: function(args) {
						return $.getJSON(urlPreparacao,{ method	: "ListRelatorio", pSkip: args.skip, pTake: args.take,
						pFilter: JSON.stringify(args.filter), pSearchValue:args.searchValue });
					}
				})
			})		     
			
			objForm = $("#divForm").dxForm({
				activeStateEnabled: true,
				minColWidth: 50,
				screenByWidth: function (width) { return "lg"; },
				height: function () { return window.innerHeight - 60 },
				alignItemLabels: false,
				alignItemLabelsInAllGroups: false,
				items: [{
					itemType: "group",
					items: [{
						cssClass: "first-group",
						dataField: "relatorio",
						label: { alignment: "right", text:"Relatório"},
						editorType: "dxSelectBox",
						editorOptions: {
							dataSource: dSRelatorio,
							valueExpr: "sequencia", 
							displayExpr: "nome",
							searchEnabled: true,
							width: "670px",
							onValueChanged: function(e){
								if (e.value == "" || e.value == null) {
									$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 0)
									objGeral.resetValues();
									dSGridFiltros.reload();
									objGridFiltros.option("disabled", 1);
									dSGridColunas.reload();
									objGridColunas.option("disabled", 1);
									//
									/*objAbaDashboard.option("disabled", 1);
									dSGridDashboard.reload();
									dSDashboardSerie.reload();
									dSDashboardCategoria.reload();
									objGridDashboard.option("disabled", 1);*/
									return;
								}
								$.getJSON(urlPreparacao, {method: "GetRelatorio", pCodRelatorio: e.value}, function(objRetorno){
									objGeral.option("formData",objRetorno);
									dSGridFiltros.reload();
									objGridFiltros.option("disabled", 0);
									dSGridColunas.reload();
									objGridColunas.option("disabled", 0);
									/*objAbaDashboard.option("disabled", 0);
									dSGridDashboard.reload();
									dSDashboardSerie.reload();
									dSDashboardCategoria.reload();
									objGridDashboard.option("disabled", 0);*/
								});
							},
							buttons: [{
								name: "search",
								location: "after",
								options: {
									stylingMode: "text",
									icon: "search",
									onClick: function() {
										
									}
								}
							},'dropDown']
						}				            
					},{
						itemType: "tabbed",
						cssClass: "first-group",
						name: "abas",
						tabPanelOptions: { selectedIndex: 0, deferRendering: false, animationEnabled: false, showNavButtons:true },
						tabs: [{
							title: "Geral", items: [{ template: function (data, itemElement) { itemElement.append("<div id='divGeral'>")} }],
						},{
							title	: "Filtros", items: [{ template	: function (data, itemElement) { itemElement.append("<div id='divAbaFiltros'>")} }]
						},{
							title	: "Colunas", items: [{ template	: function (data, itemElement) { itemElement.append("<div id='divAbaColunas'>")} }]
						},/*{
							//title	: "Dashboard", items: [{ template	: function (data, itemElement) { itemElement.append("<div id='divAbaDashboard'>")} }]
						}*/]
					}]
				}]
			}).dxForm("instance");
			
			//---------------------------------------------------------- Aba Geral
				
			objGeral = $("#divGeral").dxForm({
				activeStateEnabled: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function () { return window.innerHeight - 170 },
				minColWidth: 50,
				screenByWidth: function (width) { return "lg"; },
				scrollingEnabled: true,
				colCount: 2,
				items: [{
					itemType: "group", cssClass: "second-group-semBorda",
					items: [{
						itemType: "group", cssClass: "second-group", colCount: 3,
						items:[{
					 		template: function(data, itemElement) {
								itemElement.append("<div style='height:1px;'>")
							}, colSpan: 3
						},{
					  	dataField: "nome", validationRules: [{ type: "required" }],       
					    label: { alignment: "right", text: "Nome" }, colSpan: 2
						},{
					  	dataField: "desativado", label: { alignment: "right", text: "Desativado" }, colSpan: 2,
					  	editorType: "dxSwitch", editorOptions: { switchedOnText:"Sim", switchedOffText:"Não", value: 0}
						},{
					  	dataField: "descricao", label: { alignment: "right", text: "Descrição" }, 
					  	editorType: "dxTextArea", editorOptions: { height: 130}, colSpan: 3
						},{
					 		template: function(data, itemElement) {
								itemElement.append("<div style='height:1px;'>")
							}, colSpan: 3
						}]
					}]
				},{
					itemType: "group", cssClass: "second-group-semBorda",
					items:[{
						itemType: "group", caption: "Auditoria", cssClass: "second-group",
						alignItemLabels: true, alignItemLabelsInAllGroups: true,
						items:[{
							dataField: "criadoPor", label: { alignment: "right" }, disabled: true
						},{
							dataField: "criadoEm", label: { alignment: "right" }, disabled: true
						},{
							dataField: "alteradoPor", label: { alignment: "right" }, disabled: true
						},{
							dataField: "alteradoEm", label: { alignment: "right" }, disabled: true
						}]
					}]
				}]
			}).dxForm("instance");		


			//---------------------------------------------------------- Aba Filtros
			
			objAbaFiltros = $("#divAbaFiltros").dxForm({
				activeStateEnabled: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function () { return window.innerHeight - 170 },
				minColWidth: 50,
				screenByWidth: function (width) { return "lg"; },
				scrollingEnabled: true,
				items: [{ template: "<div id='divFiltros'></div>" }]
			}).dxForm("instance");		


			dSGridFiltros = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		load: function() {
			  		pCodRelatorio 	= objForm.getEditor("relatorio").option("value");
			  		if (pCodRelatorio == "" || pCodRelatorio == null) return [];
			  		return $.getJSON(urlPreparacao,{ method: "ListFiltros", pCodRelatorio: pCodRelatorio});
		  		},
		    	update: function (key, values) {
			  		$.ajaxSetup({async: true});
			  		pCodRelatorio = objForm.getEditor("relatorio").option("value");
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								conteudo = values[coluna];
								if (coluna == "ativo" || coluna == "obrigatorio") {
									if (conteudo) conteudo = 1;
									else conteudo =0;	
								}
								$.get(urlPreparacao,{ method: "SetFiltros", pCodRelatorio: pCodRelatorio, pCampo: key.codigo,
								pCouluna: coluna, pConteudo: conteudo});
							}
						}
						$.ajaxSetup({async: false});
		    	},									    	
	  		}),
			});
			
			objGridFiltros = $("#divFiltros").dxDataGrid({
				disabled: true,
				dataSource: dSGridFiltros,
				columns:[
					{ dataField: "grupo", caption: "Grupo", allowEditing: 0, groupIndex: 0, sortIndex: 0, sortOrder: "asc"  },
					{ dataField: "campo", caption: "Campo", allowEditing: 0, sortIndex: 1, sortOrder: "asc"  },
					{ dataField: "sequencia", caption: "Seq. Exibição", width: 60, dataType: "number"},
					{ dataField: "tipoDesc", caption: "Tipo", width: 110, 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var desc = (value == 1 ? "Simples" : value == 2 ? "De - Até" : value == 3 ? "Múltiplo" : "")
							objLinha.defaultSetCellValue(rowData, desc);
							rowData.tipo = value;	
				  	}
				  },
					{ dataField: "legFormulario", caption: "Legenda no Formulário", allowEditing: 1, width: 200 },
					{ dataField: "colSpan", caption: "Qtde. Colunas", width: 60, dataType: "number", editorOptions: { min: 1, max: 5 }},
					{ dataField: "obrigatorio", caption: "Obrigatório", width: 80, dataType: "boolean"},
					{ dataField: "ativo", caption: "Ativo", width: 50, dataType: "boolean"},
					{ width: 20, allowEditing: 0},
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "tipoDesc") {
						arrayDSTipo = [{codigo: 1, descricao: "Simples"}];
						if (e.row.key.tipoCampo == 1 || e.row.key.tipoCampo == 4 || e.row.key.tipoCampo == 12) {
							arrayDSTipo.push({codigo: 2, descricao: "De - Até"});
						}else if (e.row.key.permFilt.split("-")[0] = 2) {
							arrayDSTipo.push({codigo: 3, descricao: "Múltiplo"});
						} 					
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = arrayDSTipo;
						e.editorOptions.value = e.row.data.item;
						e.editorOptions.displayExpr = "descricao";
						e.editorOptions.valueExpr = "codigo";
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				height: function () { 
					var height = window.innerHeight - 170;
					if (height < 300) height = 300;
					return height;
				},
    		columnChooser: { enabled: false, mode: "dragAndDrop"},
    		editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: true, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: true },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
				paging: { enabled:false },
        onToolbarPreparing: function(e){
					var objGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-eraser",
							hint: "Limpar",
							onClick: function(e) {
								pCodRelatorio = objForm.getEditor("relatorio").option("value");
								var result = DevExpress.ui.dialog.confirm("Confirma a exclusão dos dados?", "Limpar dos dados");
								result.done(function(dialogResult) {
									if (!dialogResult){
										return
									}
									$.get(urlPreparacao,{ method: "LimparFiltros", pCodRelatorio: pCodRelatorio}, function(){
										DevExpress.ui.notify("Dados atualizados!", "success", 4000);
										dSGridFiltros.reload();
									});
								});
							}
						}
					},{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-compress",
							hint: "Recolher",
							onClick: function(e) {
								var expanding = e.component.option("icon") === "fa fa-expand";
								if (expanding){ objGridFiltros.expandAll();
								}else{ objGridFiltros.collapseAll(); }
								e.component.option("hint", expanding ? "Recolher" : "Expandir");
								e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
							}
						}
					});
        },
			}).dxDataGrid("instance");	

			//---------------------------------------------------------- Colunas
						
			objAbaColunas = $("#divAbaColunas").dxForm({
				activeStateEnabled: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function () { return window.innerHeight - 170 },
				minColWidth: 50,
				screenByWidth: function (width) { return "lg"; },
				scrollingEnabled: true,
				items: [{ template: "<div id='divColunas'></div>" }]
			}).dxForm("instance");		

			dSGridColunas = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		load: function() {
			  		pCodRelatorio 	= objForm.getEditor("relatorio").option("value");
			  		if (pCodRelatorio == "" || pCodRelatorio == null) return [];
			  		return $.getJSON(urlPreparacao,{ method: "ListColunas", pCodRelatorio: pCodRelatorio});
			  		
		  		},
		    	update: function (key, values) {
			  		$.ajaxSetup({async: true});
			  		pCodRelatorio = objForm.getEditor("relatorio").option("value");
			  		objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								conteudo = values[coluna];
								$.get(urlPreparacao,{ method: "SetColunas", pCodRelatorio: pCodRelatorio, 
								pCampo: key.codigo, pCouluna: coluna, pConteudo: conteudo}, function(){
									dSDashboardSerie.reload();
									dSDashboardCategoria.reload();
								});
							}
						}
						$.ajaxSetup({async: false});
		    	},									    	
	  		}),
			});

			objGridColunas = $("#divColunas").dxDataGrid({
				disabled: true,
				dataSource: dSGridColunas,
				columns:[
					{ dataField: "grupo", caption: "Grupo", groupIndex: 0, allowEditing: 0, sortIndex: 0, sortOrder: "asc",
						groupCellTemplate: function (container, options) {
   						if (options.data.items[0].grpHabil == 1) {
	              return $("<div class='row' />").append(
	              	$("<b class='col-sm-10' />").text(options.displayValue),
	              	$("<div class='col-sm-2 text-center pl-0' />").append(
		                $("<div>").dxCheckBox({
			                text: "Coluna Única",
			                value: options.data.items[0].selGrpHabil,
			                onValueChanged: function(e){
												pCodRelatorio 	= objForm.getEditor("relatorio").option("value");
												pTipo						= options.data.items[0].tipo;
												pCodLinha				= options.data.items[0].codigo;
												$.get(urlPreparacao,{ method: "SetGrpColunas", pCodRelatorio: pCodRelatorio, 
												pTipo: pTipo, pCampo: pCodLinha, pValue: e.value});
				              }
			              })
		            	)
	              );
   						}else{
	              return $("<div class='row' />").append(
	              	$("<b class='col-sm-10' />").text(options.displayValue)
	              );
   						}
						}
					},
					{ dataField: "idCampo", caption: "Identificador", visible: 0},
					{ dataField: "coluna", caption: "Coluna", allowEditing: 0  },
					{ dataField: "opcao", caption: "Opção", width: 180, lookup: {
            dataSource: function(options) { 
            	return [{id: 1, text: "Exibir"},{id: 2, text: "Oculto"},{id: 0, text: "Não Exibir"}]
            },valueExpr: "id", displayExpr: "text"}
					},
					{ dataField: "sequencia", caption: "Seq. Colunas", width: 60, dataType: "number"},
					{ width: 20, allowEditing: 0},
				],
				height: function () { 
					var height = window.innerHeight - 170;
					if (height < 300) height = 300;
					return height;
				},
    		columnChooser: { enabled: true, mode: "dragAndDrop"},
    		editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: false, useIcons: true },
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: true, allowCollapsing: 0 },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: true },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
				paging: { enabled:false },
        onToolbarPreparing: function(e){
					var objGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-eraser",
							hint: "Limpar",
							onClick: function(e) {
								pCodRelatorio = objForm.getEditor("relatorio").option("value");
								var result = DevExpress.ui.dialog.confirm("Confirma a exclusão dos dados?", "Limpar dos dados");
								result.done(function(dialogResult) {
									if (!dialogResult){
										return
									}
									$.get(urlPreparacao,{ method: "LimparColunas", pCodRelatorio: pCodRelatorio}, function(){
										DevExpress.ui.notify("Dados atualizados!", "success", 4000);
										dSGridColunas.reload();
									});
								});
							}
						}
					});
        },
			}).dxDataGrid("instance");

			//---------------------------------------------------------- Gráfico
			dSDashboardSerie = new DevExpress.data.DataSource({
  			store: new DevExpress.data.CustomStore({
      		loadMode: "raw",   
      		load: function() {
        		pCodRelatorio = objForm.getEditor("relatorio").option("value");
          	return $.getJSON(urlPreparacao,{method:"GetColunasSelecionadas", pCodRelatorio: pCodRelatorio });
      		}
  			})
			});
			
			dSDashboardCategoria = new DevExpress.data.DataSource({
  			store: new DevExpress.data.CustomStore({
      		loadMode: "raw",   
      		load: function() {
        		pCodRelatorio = objForm.getEditor("relatorio").option("value");
          	return $.getJSON(urlPreparacao,{method:"GetColunasSelecionadas", pCodRelatorio: pCodRelatorio });
      		}
  			})
			});

			var serieAnt = ""
			var categoriaAnt = ""

			objAbaDashboard = $("#divAbaDashboard").dxForm({
				disabled: true,
				activeStateEnabled: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function () { return window.innerHeight - 170 },
				minColWidth: 50,
				screenByWidth: function (width) { return "lg"; },
				scrollingEnabled: true,
				items: [{
					itemType: "group", cssClass: "second-group-semBorda", items: [{
						itemType: "group", cssClass: "second-group", colCount: 4,
						items:[
						{ template: function(data, itemElement) { itemElement.append("<div style='height:1px;'>") }, colSpan: 4
						},{
					  	dataField: "nome", validationRules: [{ type: "required" }], label: { alignment: "right", text: "Nome" }, colSpan: 2
						},{
					  	dataField: "tipoGrafico", validationRules: [{ type: "required" }], label: { alignment: "right", text: "Tipo de Gráfico" }, 
					  	colSpan: 2, editorType: "dxRadioGroup", editorOptions: { 
								dataSource: [
									//{Codigo: 1, Descricao: "Barra"}, 
									{Codigo: 2, Descricao: "Coluna"}, 
									//{Codigo: 3, Descricao: "Coluna e Linha"},
									{Codigo: 4, Descricao: "Linha"}, 
									{Codigo: 5, Descricao: "Pizza"}
								], valueExpr: "Codigo", displayExpr: "Descricao", layout: "horizontal",
								onValueChanged: function(e){
									if (e.value == 5) {
										objAbaDashboard.getEditor("categoria").option({readOnly: 1, value: ""});
									}else{
										objAbaDashboard.getEditor("categoria").option({readOnly: 0, value: ""});
									}	
								}
							}
						},{
					  	dataField: "serie", validationRules: [{ type: "required" }], label: { alignment: "right", text: "Série" }, 
					  	colSpan: 2, editorType: "dxSelectBox", editorOptions: { 
								dataSource: dSDashboardSerie, 
								itemTemplate: function (data, itemIndex, element) {
									if (serieAnt != data.grupo){
										retorno = "<br><b><i>"+data.grupo+"</i></b><br>"+data.descricao;
										serieAnt = data.grupo
									}else{
										retorno = data.descricao;
									}
									return element.append(retorno)
								}, valueExpr: "codigo", displayExpr: "descricao", searchEnabled: true,
							}
						},{
					  	dataField: "categoria", label: { alignment: "right", text: "Categoria" }, 
					  	colSpan: 2, editorType: "dxSelectBox", editorOptions: { 
								dataSource: dSDashboardCategoria, 
								itemTemplate: function (data, itemIndex, element) {
									if (categoriaAnt != data.grupo){
										retorno = "<br><b><i>"+data.grupo+"</i></b><br>"+data.descricao;
										categoriaAnt = data.grupo
									}else{
										retorno = data.descricao;
									}
									return element.append(retorno)
								}, valueExpr: "codigo", displayExpr: "descricao", searchEnabled: true,
							}
						},{
					  	colSpan: 4, template: function (data, itemElement) {
								itemElement.append("<div id='divDashboardAcao' style='text-align:right;'>")
							}
						},{
					 		template: function(data, itemElement) { itemElement.append("<div style='height:1px;'>") }, colSpan: 4
						}]
					},{
						template: "<div id='gridDashboard'></div>",
					}]
				}]
			}).dxForm("instance");		

			$("#divDashboardAcao").html("<table width='100%'>" +
																	"<tr>" +
																		"<td align='right' style='vertical-align:bottom;'>" + 
																			"<div id='divDashboardInserir'/>&nbsp;" +
																			"<div id='divDashboardLimpar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>");


			objDashboardInserir = $("#divDashboardInserir").dxButton({
			  icon: "add", text: "Inserir", type: "success", stylingMode: "contained",
			  onClick: function(){
				  if (!objAbaDashboard.validate().isValid){
		        DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
		        return
	        }
					$.get(urlPreparacao,{ method: "IsertDashboard", pCodRelatorio: pCodRelatorio, 
					pObjDados: JSON.stringify(objAbaDashboard.option("formData"))}, function(retorno){
						if (retorno == 1){
							DevExpress.ui.notify("Dados armazenado com sucesso.", "success", 4000);
							objAbaDashboard.getEditor("nome").option("value","");
							objAbaDashboard.getEditor("tipoGrafico").option("value",null);
							objAbaDashboard.getEditor("serie").option("value","");
							objAbaDashboard.getEditor("categoria").option("value","");
							dSGridDashboard.reload();
						}else{
							DevExpress.ui.notify("Erro no armazenamento: " + retorno, "error", 4000);
						};					
					});	
			  }
			}).dxButton("instance");

			objDashboardLimpar = $("#divDashboardLimpar").dxButton({
			  icon: "fa fa-eraser", text: "Limpar", type: "default", stylingMode: "contained",
			  onClick	: function(){
					objAbaDashboard.getEditor("nome").option("value","");
					objAbaDashboard.getEditor("tipoGrafico").option("value",null);
					objAbaDashboard.getEditor("serie").option("value","");
					objAbaDashboard.getEditor("categoria").option("value","");
				}
			}).dxButton("instance");

			dSGridDashboard = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		load: function() {
			  		pCodRelatorio = objForm.getEditor("relatorio").option("value");
			  		if (pCodRelatorio == "" || pCodRelatorio == null) return [];
			  		return $.getJSON(urlPreparacao,{ method: "ListDashboard", pCodRelatorio: pCodRelatorio});
		  		},									    	
		    	remove: function(args){
			  		$.ajaxSetup({async: true});
			  		pCodRelatorio = objForm.getEditor("relatorio").option("value");
						$.get(urlPreparacao,{ method: "DeleteDashboard", pCodRelatorio: pCodRelatorio, pNSeq: args.nSeq});
						$.ajaxSetup({async: false});
		    	}
				})
			});

			objGridDashboard = $("#gridDashboard").dxDataGrid({
				disabled: true,
				dataSource: dSGridDashboard,
				columns:[
			  	{ dataField: "nome", caption: "Nome" },
			  	{ dataField: "tipoGrafico", caption: "Tipo de Gráfico", width: 110 },
			  	{ dataField: "serie", caption: "Série" },
			  	{ dataField: "categoria", caption: "Categoria" },
				],
				height: function () { 
					var height = window.innerHeight - 315;
					if (height < 300) height = 300;
					return height;
				},
    		columnChooser: { enabled: false, mode: "dragAndDrop"},
    		editing: { mode: "row", allowAdding: false, allowUpdating: false, allowDeleting: true, useIcons: true },
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: false },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: true },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
				paging: { enabled:false },
			}).dxDataGrid("instance");
			
			//----------------------------------------------------------
			
			/*setTimeout(function(){
				objForm.getEditor("relatorio").option("value", 1)	
			}, 80);*/

		</script>
	</body>
</html>
