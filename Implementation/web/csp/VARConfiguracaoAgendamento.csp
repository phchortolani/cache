<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		Do ^WWWVAR

		Set YUSER 		= $Get(%request.Data("YUSER", 1))
		Set YBED 			= $Get(%request.Data("YBED", 1))
		Set YM 				= $Get(%request.Data("YM", 1))
		Set YLOCATION = $Get(%request.Data("YLOCATION", 1))

		Set PortCache = $Get(%request.CgiEnvs("SERVER_PORT"))
		Set PageURL 	= $Get(%request.CgiEnvs("CACHE_URL"))
		Set PageName 	= %request.PageName
		Set app 			= %request.Application
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		Set url				= "http://"_host_app

		Set URLPreparacao = "VAR.CSP.VARConfiguracaoAgendamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLLogin 			= "COMLogin.cls"
		Set URLLink 			= "www.cls"

		Set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		Set objWWW013 = $Get(^WWW013(YM, YBED, 1))
		Set flagAdmSistema = 0
		If ($Piece(objWWW013,Y,3) = 1) Set flagAdmSistema = 1

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Configuração do Sistema de Agendamento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<style>
	.cell-selected {
		background-color: #FFFFB9;
	}

	.dx-datagrid {
		user-select: none;
		-webkit-user-select: none;
	}		

	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	</style>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divCadastroAusencia"></div>
		<div id="divCadastroRestricao"></div>
		<div id="divOpcaoSelecao"></div>
		<div id="divCadastroExcecao"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx-gantt.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao 		= '#(URLPreparacao)#';
			var urlSearch					= '#(URLSearch)#';
			var urlLink 					= '#(URLLink)#';
			var YBED 							= '#(YBED)#';
			var YUSER 						= '#(YUSER)#';
			var YLOCATION 				= '#(YLOCATION)#';
			var nomeLocal 				= '#(nomeLocal)#';
			var flagAdmSistema		= '#(flagAdmSistema)#';
			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			objToolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "save",
						hint	: "Salvar os Dados",
						type	: "success",
						stylingMode : "contained",
						onClick	: function(){
							pFlagAdmissaoAntecipada = objDadosGerais.getEditor("flagAdmissaoAntecipada").option("value");
							pTempoAdmissaoAntecipada = objDadosGerais.getEditor("tempoAdmissaoAntecipada").option("text");
							pFlagReserva = objDadosGerais.getEditor("flagReserva").option("value");
							pTempoReserva = objDadosGerais.getEditor("tempoReserva").option("text");
							pFlagEdicaoAgendamento = objDadosGerais.getEditor("flagEdicaoAgendamento").option("value");
							pTempoEdicaoAgendamento = objDadosGerais.getEditor("tempoEdicaoAgendamento").option("text");
							pFlagConfirmacaoAplicativo = objDadosGerais.getEditor("flagConfirmacaoAplicativo").option("value");
							pTempoConfirmacaoAplicativo = objDadosGerais.getEditor("tempoConfirmacaoAplicativo").option("text");
							pFlagDiasPadraoAgendamento = objDadosGerais.getEditor("flagDiasPadraoAgendamento").option("value");
							pQtdeDiasPadraoAgendamento = objDadosGerais.getEditor("qtdeDiasPadraoAgendamento").option("value");
							pFlagEnvioEmailPaciente = objDadosGerais.getEditor("flagEnvioEmailPaciente").option("value");
							pMensagemEnvioEmailPaciente = ""; //objDadosGerais.getEditor("mensagemEnvioEmailPaciente").option("value");
							pFlagEnvioSMSPaciente = 0; //objDadosGerais.getEditor("flagEnvioSMSPaciente").option("value");
							pMensagemEnvioSMSPaciente = ""; //objDadosGerais.getEditor("mensagemEnvioSMSPaciente").option("value");
							pFlagEnvioSMSConfirmacao = objDadosGerais.getEditor("flagEnvioSMSConfirmacao").option("value");
							pHoraEnvioSMSConfirmacao = objDadosGerais.getEditor("horaEnvioSMSConfirmacao").option("text");
							pDiasEnvioSMSConfirmacao = objDadosGerais.getEditor("diasEnvioSMSConfirmacao").option("value");
							pCancelAutomaticoSMS = objDadosGerais.getEditor("flagCancelamentoAutomaticoSMS").option("value");
							pMsgEnvioSMSConfirmacao = objDadosGerais.getEditor("msgEnvioSMSConfirmacao").option("value");
							pFlagEnvioAgenda = 1; //objDadosGerais.getEditor("flagEnvioAgenda").option("value");
							pFlagEnvioAgendaDiario = objDadosGerais.getEditor("flagEnvioAgendaDiario").option("value");
							pHoraEnvioAgendaDiario = objDadosGerais.getEditor("horaEnvioAgendaDiario").option("text");
							pFlagEnvioAgendaSemanal = 0; //objDadosGerais.getEditor("flagEnvioAgendaSemanal").option("value");
							pHoraEnvioAgendaSemanal = ""; //objDadosGerais.getEditor("horaEnvioAgendaSemanal").option("text");
							pFlagEnvioAgendaMensal = 0; //objDadosGerais.getEditor("flagEnvioAgendaMensal").option("value");
							pHoraEnvioAgendaMensal = ""; //objDadosGerais.getEditor("horaEnvioAgendaMensal").option("text");
							pIntSistEstoque = objDadosGerais.getEditor("intSistEstoque").option("value");
							pIntSistFaturamento = objDadosGerais.getEditor("intSistFaturamento").option("value");
							pIntSistPEPMedico = objDadosGerais.getEditor("intSistPEPMedico").option("value");
							pPepMedicoFormulario = objDadosGerais.getEditor("pepMedicoFormulario").option("value");
							pIntSistPEPEnfermagem = objDadosGerais.getEditor("intSistPEPEnfermagem").option("value");
							pPepEnfermagemFormulario = objDadosGerais.getEditor("pepEnfermagemFormulario").option("value");
							pQtdeDiasOrcamento = objDadosGerais.getEditor("qtdeDiasOrcamento").option("value");
							pFlagEnvioEmailOrcamento = objDadosGerais.getEditor("flagEnvioEmailOrcamento").option("value");
							pMsgEnvioEmailOrcamento = "" //objDadosGerais.getEditor("mensagemEnvioEmailOrcamento").option("value");
							//
							pCobrancaRetorno = objDadosGerais.getEditor("cobrancaParaRetorno").option("value");
							pApenasUmRetorno = objDadosGerais.getEditor("apenasUmRetorno").option("value");
							pAgendRetroativo = objDadosGerais.getEditor("agendamentoRetroativo").option("value");
							//
							if (pTempoAdmissaoAntecipada == "" || pTempoAdmissaoAntecipada == null){
				        DevExpress.ui.notify("Favor preencher o campo de Tempo de Admissão Antecipada.","warning");
				        return
			        }
							if (pTempoReserva == "" || pTempoReserva == null){
				        DevExpress.ui.notify("Favor preencher o campo de Tempo de Reserva de Procedimento.","warning");
				        return
			        }
							if (pTempoAdmissaoAntecipada == "" || pTempoAdmissaoAntecipada == null){
				        DevExpress.ui.notify("Favor preencher o campo de Tempo de Edição de Agendamento.","warning");
				        return
			        }
							if (pQtdeDiasPadraoAgendamento == "" || pQtdeDiasPadraoAgendamento == null){
				        DevExpress.ui.notify("Favor preencher o campo de Qtde de Dias de Padrão de Agendamento.","warning");
				        return
			        }
							if (pFlagConfirmacaoAplicativo == 1 && (pTempoConfirmacaoAplicativo == "" || pTempoConfirmacaoAplicativo == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Tempo para Confirmação do Aplicativo.","warning");
				        return
			        }
							if (pFlagConfirmacaoAplicativo == 1 && (pTempoConfirmacaoAplicativo == "" || pTempoConfirmacaoAplicativo == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Tempo para Confirmação do Aplicativo.","warning");
				        return
			        }
			        //if (pFlagEnvioEmailPaciente == 1 && (pMensagemEnvioEmailPaciente == "" || pMensagemEnvioEmailPaciente == null)){
				      //  DevExpress.ui.notify("Favor preencher o campo de Mensagem para E-mail Término do Agendamento.","warning");
				      //  return
			        //}
			        /*if (pFlagEnvioSMSPaciente == 1 && (pMensagemEnvioSMSPaciente == "" || pMensagemEnvioSMSPaciente == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Mensagem para SMS Término do Agendamento.","warning");
				        return
			        }*/
			        if (pFlagEnvioSMSConfirmacao == 1 && (pFlagEnvioSMSConfirmacao == "" || pFlagEnvioSMSConfirmacao == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Hora de Envio para SMS Confirmação Agendamento.","warning");
				        return
			        }
			        if (pFlagEnvioSMSConfirmacao == 1 && (pHoraEnvioSMSConfirmacao == "" || pHoraEnvioSMSConfirmacao == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Dias de Antecedência para SMS Confirmação Agendamento.","warning");
				        return
			        }
			        if (pFlagEnvioSMSConfirmacao == 1 && (pMsgEnvioSMSConfirmacao == "" || pMsgEnvioSMSConfirmacao == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Mensagem para SMS Confirmação Agendamento.","warning");
				        return
			        }
			        
			        if (pFlagEnvioAgendaDiario == 1 && (pHoraEnvioAgendaDiario == "" || pHoraEnvioAgendaDiario == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Hora para Envio do E-mail com Agenda Diária.","warning");
				        return
			        }
			        /*if ( pFlagEnvioAgendaSemanal == 1 && (pHoraEnvioAgendaSemanal == "" || pHoraEnvioAgendaSemanal == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Hora para Envio do E-mail com Agenda Semanal.","warning");
				        return
			        }
			        if (pFlagEnvioAgendaMensal == 1 && (pHoraEnvioAgendaMensal == "" || pHoraEnvioAgendaMensal == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Hora para Envio do E-mail com Agenda Mensal.","warning");
				        return
			        }*/
			        if ( pIntSistPEPMedico == 1 && (pPepMedicoFormulario == "" || pPepMedicoFormulario == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Formulário para Integração com o Sistema de PEP Médico.","warning");
				        return
			        }
			        if (pIntSistPEPEnfermagem == 1 && (pPepEnfermagemFormulario == "" || pPepEnfermagemFormulario == null)){
				        DevExpress.ui.notify("Favor preencher o campo de Formulário para Integração com o Sistema de PEP Enfermagem.","warning");
				        return
			        }
			        /*if (pFlagEnvioEmailOrcamento == 1 && (pMsgEnvioEmailOrcamento == "" || pMsgEnvioEmailOrcamento == null)){
				        DevExpress.ui.notify("Favor preencher a campo Mensagem para Envio do Orçamento por E-Mail.","warning");
				        return
			        }*/
			        if (pCobrancaRetorno == "" || pCobrancaRetorno == null) {
				        DevExpress.ui.notify("Favor preencher o campo Cobrança para Retorno.","warning");
				        return
			        }
			        
			        $.get(urlPreparacao,{method: "ArmConfiguracao", pFlagAdmissaoAntecipada: pFlagAdmissaoAntecipada,
								pTempoAdmissaoAntecipada: pTempoAdmissaoAntecipada,	pFlagReserva: pFlagReserva,
								pTempoReserva: pTempoReserva,	pFlagEdicaoAgendamento: pFlagEdicaoAgendamento,
								pTempoEdicaoAgendamento: pTempoEdicaoAgendamento,	pFlagConfirmacaoAplicativo: pFlagConfirmacaoAplicativo,
								pTempoConfirmacaoAplicativo: pTempoConfirmacaoAplicativo,	pFlagDiasPadraoAgendamento: pFlagDiasPadraoAgendamento,
								pQtdeDiasPadraoAgendamento: pQtdeDiasPadraoAgendamento,	pFlagEnvioEmailPaciente: pFlagEnvioEmailPaciente,
								pMensagemEnvioEmailPaciente: pMensagemEnvioEmailPaciente,	pFlagEnvioSMSPaciente: pFlagEnvioSMSPaciente,
								pMensagemEnvioSMSPaciente: pMensagemEnvioSMSPaciente, pFlagEnvioSMSConfirmacao: pFlagEnvioSMSConfirmacao,
								pHoraEnvioSMSConfirmacao: pHoraEnvioSMSConfirmacao, pDiasEnvioSMSConfirmacao: pDiasEnvioSMSConfirmacao,
								pMsgEnvioSMSConfirmacao: pMsgEnvioSMSConfirmacao, pFlagEnvioAgenda: pFlagEnvioAgenda,
								pFlagEnvioAgendaDiario: pFlagEnvioAgendaDiario, pHoraEnvioAgendaDiario: pHoraEnvioAgendaDiario,
								pFlagEnvioAgendaSemanal: pFlagEnvioAgendaSemanal, pHoraEnvioAgendaSemanal: pHoraEnvioAgendaSemanal,
								pFlagEnvioAgendaMensal: pFlagEnvioAgendaMensal,	pHoraEnvioAgendaMensal: pHoraEnvioAgendaMensal,
								pIntSistEstoque: pIntSistEstoque,	pIntSistFaturamento: pIntSistFaturamento,
								pIntSistPEPMedico: pIntSistPEPMedico,	pPepMedicoFormulario: pPepMedicoFormulario,
								pIntSistPEPEnfermagem: pIntSistPEPEnfermagem,	pPepEnfermagemFormulario: pPepEnfermagemFormulario,
								pQtdeDiasOrcamento: pQtdeDiasOrcamento, pFlagEnvioEmailOrcamento: pFlagEnvioEmailOrcamento,
								pMsgEnvioEmailOrcamento: pMsgEnvioEmailOrcamento, pCobrancaRetorno: pCobrancaRetorno,
								pApenasUmRetorno: pApenasUmRetorno, pCancelAutomaticoSMS: pCancelAutomaticoSMS,
								pAgendRetroativo: pAgendRetroativo
			        },function(objRetorno){
								if (objRetorno !=  1) {
									DevExpress.ui.notify("Erro: "+objRetorno,"error");
								}else {
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
								}
			        });
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fa fa-eraser",
						hint	: "Limpar os Campos",
						type	: "default",
						stylingMode : "contained",
						onClick	: function(){
							carregarDados();
						}
					}
				}]
			}).dxToolbar("instance")
		
			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) { return "lg"; },
				screenByWidth: function(width) { return "lg"; },
				height:function(){ return window.innerHeight - 45 },
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colSpan: 10,
					itemType: "tabbed",
					name : "abas",
					tabPanelOptions: {
	  			  selectedIndex: 0,
						deferRendering: false,
						animationEnabled: false,
						showNavButtons:true
					},	
						height:'10px',
						tabs:[{
							title	: "Configurações",
							items: [{
								template	: function (data, itemElement) {
									itemElement.append("<div id='divDadosGerais'>")
								}
							}],
						},{
							title	: "Auditoria",
							items: [{
								template	: function (data, itemElement) {
									itemElement.append("<div id='divControle'>")
								}
							}]
						}]
					}
				]
			}).dxForm("instance");
			
			dataSourceFormPEPMed = new DevExpress.data.DataSource({
  			store: new DevExpress.data.CustomStore({
      		loadMode: "raw",   
      		load: function() {
          	return $.getJSON(urlSearch,{method:"GetWWW120"});
      		}
  			})
			});
			
			dataSourceFormPEPEnf = new DevExpress.data.DataSource({
  			store: new DevExpress.data.CustomStore({
      		loadMode: "raw",   
      		load: function() {
          	return $.getJSON(urlSearch,{method:"GetWWW120"});
      		}
  			})
			});
			
			objDadosGerais = $("#divDadosGerais").dxForm({
				scrollingEnabled: true,
				showColonAfterLabel: true,
				alignItemLabels: true,
				alignItemLabelsInAllGroups: true,
				height: function() { return window.innerHeight - 110;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 2,
				items: [{
					colCount: 2,
					itemType: "group",
					cssClass: "second-group",
					alignItemLabels: true,
					alignItemLabelsInAllGroups: true,
					caption: "Agendamento",
					items: [{
						colSpan: 1, 
						dataField: "flagAdmissaoAntecipada",
						label: { text: "Admissão Antecipada ", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("tempoAdmissaoAntecipada").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("tempoAdmissaoAntecipada").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 1, 
						dataField: "tempoAdmissaoAntecipada",
						label: { text: "Tempo", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 150 },
					},{
						colSpan: 1, 
						dataField: "flagReserva",
						label: { text: "Reserva de Procedimento", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0,switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("tempoReserva").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("tempoReserva").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 1, 
						dataField: "tempoReserva",
						label: { text: "Tempo", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 150 }
					},{
						colSpan: 1, 
						dataField: "flagEdicaoAgendamento",
						label: { text: "Edição de Agendamento", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0,switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("tempoEdicaoAgendamento").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("tempoEdicaoAgendamento").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 1, 
						dataField: "tempoEdicaoAgendamento",
						label: { text: "Tempo", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 150 }
					},{
						colSpan: 1, 
						dataField: "flagConfirmacaoAplicativo",
						label: { text: "Confirmação do Aplicativo", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("tempoConfirmacaoAplicativo").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("tempoConfirmacaoAplicativo").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 1, 
						dataField: "tempoConfirmacaoAplicativo",
						label: { text: "Tempo", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 150 }
					},{
						colSpan: 1, 
						dataField: "flagDiasPadraoAgendamento",
						label: { text: "Dias Padrão Agendamento", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("qtdeDiasPadraoAgendamento").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("qtdeDiasPadraoAgendamento").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 1, 
						dataField: "qtdeDiasPadraoAgendamento",
						label: { text: "Qtde. Dias", alignment: "right"},
						editorType: "dxNumberBox",
						editorOptions: { readOnly: true, min: 1, width: 150 }
					},{
						colSpan: 1, 
						dataField: "cobrancaParaRetorno",
						label: { text: "Cobrança para Retorno", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: { 
							dataSource: [
								{Codigo: 1, Descricao: "Fonte Pagadora"},
								{Codigo: 2, Descricao: "Convênio"},
								{Codigo: 3, Descricao: "Plano de Saúde"}
							],
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
 						}
					},{
						colSpan: 1, 
						dataField: "apenasUmRetorno",
						label: { text: "Apenas um Retorno", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: { 
							dataSource: [
								{Codigo: 0, Descricao: "Não"},
								{Codigo: 1, Descricao: "Sim"},
							],
							buttons: [{
								location:"after",
								name: "addProcedimento",
								options:{
									icon	: "fas fa-exclamation-triangle",
									hint	: "Cadastrar Exceção",
									type	: "default",
									stylingMode : "contained",
									onClick	: function(){
										$.get(urlPreparacao,{method: "GetConfMedicoExcecao"},function(retorno){
											$("#divCadastroExcecao").dxPopup("show");
											$("#divFormCadastroExcecao").dxForm("instance").getEditor("medico").option("value", retorno.split(";"))
										})
									}
								}
							}],
							width: 150,
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
 						}
					},{
						colSpan: 1, 
						dataField: "agendamentoRetroativo",
						label: { text: "Agendar Retroativo", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim"}
					}]
				},{
					colCount: 5,
					itemType: "group",
					cssClass: "second-group",
					caption: "Notificação ao Paciente",
					items: [{
						colSpan: 1, 
						dataField: "flagEnvioEmailPaciente",
						label: { text: "E-mail Término do Agendamento", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim"/*, onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("mensagemEnvioEmailPaciente").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("mensagemEnvioEmailPaciente").option({value: "", readOnly: false});
							}
						}*/}
					},{colSpan: 4},{
						visible: false,
						colSpan: 4, 
						dataField: "mensagemEnvioEmailPaciente",
						label: { text: "Mensagem", alignment: "right"},
						editorType: "dxTextArea",
						editorOptions: { readOnly: true }
					},{
						colSpan: 1,
						visible: false, 
						dataField: "flagEnvioSMSPaciente",
						label: { text: "SMS Término do Agendamento", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("mensagemEnvioSMSPaciente").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("mensagemEnvioSMSPaciente").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 4, 
						visible: false,
						dataField: "mensagemEnvioSMSPaciente",
						label: { text: "Mensagem", alignment: "right"},
						editorType: "dxTextArea",
						editorOptions: { readOnly: true }
					},{
						colSpan: 1, 
						dataField: "flagEnvioSMSConfirmacao",
						label: { text: "SMS Confirmação Agendamento", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("horaEnvioSMSConfirmacao").option({value: "", readOnly: true});
								objDadosGerais.getEditor("diasEnvioSMSConfirmacao").option({value: "", readOnly: true});
								objDadosGerais.getEditor("msgEnvioSMSConfirmacao").option({value: "", readOnly: true});
								objDadosGerais.getEditor("flagCancelamentoAutomaticoSMS").option({value: 0, readOnly: true});
							}else{
								objDadosGerais.getEditor("horaEnvioSMSConfirmacao").option({value: "", readOnly: false});
								objDadosGerais.getEditor("diasEnvioSMSConfirmacao").option({value: "", readOnly: false});
								objDadosGerais.getEditor("msgEnvioSMSConfirmacao").option({value: "", readOnly: false});
								objDadosGerais.getEditor("flagCancelamentoAutomaticoSMS").option({readOnly: false});
							}
						}}
					},{
						colSpan: 1, 
						dataField: "horaEnvioSMSConfirmacao",
						label: { text: "Hora de Envio", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 70 }
					},{
						colSpan: 1, 
						dataField: "diasEnvioSMSConfirmacao",
						label: { text: "Dias de Antecedência", alignment: "right"},
						editorType: "dxNumberBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 30 }
					},{colSpan: 2},{
						colSpan: 1, 
						dataField: "flagCancelamentoAutomaticoSMS",
						label: { text: "Cancelamento Automático", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { readOnly: true, value: 0, switchedOffText:"Não", switchedOnText:"Sim"}
					},{colSpan: 4},{
						colSpan: 5, 
						dataField: "msgEnvioSMSConfirmacao",
						label: { text: "Mensagem", alignment: "right"},
						editorType: "dxTextArea",
						editorOptions: { readOnly: true, height: 101 }
					},{},{
						colSpan: 4, 
						template	: function (data, itemElement) {
							itemElement.append("<div id='divMsgEnvioSMSConfirmacao' style='width:100%;'>")
						}
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Orçamento",
					colCount: 5,
					items: [{
						colSpan: 5, 
						dataField: "qtdeDiasOrcamento",
						label: { text: "Validade Dias", alignment: "right"},
						editorType: "dxNumberBox",
						editorOptions: { 
							min: 1, width: 150, onValueChanged: function(e) { 
								if (!e.value) {
									objDadosGerais.getEditor("qtdeDiasOrcamento").option("value", 1);
								}
							} 
						}
					},{
						colSpan: 1, 
						dataField: "flagEnvioEmailOrcamento",
						label: { text: " Enviar por E-mail", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", /*onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("mensagemEnvioEmailOrcamento").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("mensagemEnvioEmailOrcamento").option({value: "", readOnly: false});
							}
						}*/}
					}/*,{
						colSpan: 4, 
						dataField: "mensagemEnvioEmailOrcamento",
						label: { text: "Mensagem", alignment: "right"},
						editorType: "dxTextArea",
						editorOptions: { readOnly: true, height: 80 }
					},*/]
				},{
					colCount: 5,
					itemType: "group",
					cssClass: "second-group",
					caption: "Notificação ao Médico",
					items: [/*{
						colSpan: 1, 
						dataField: "flagEnvioAgenda",
						label: { text: "E-mail com Agenda", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("flagEnvioAgendaDiario").option({value: 0, disabled: true});
								objDadosGerais.getEditor("flagEnvioAgendaSemanal").option({value: 0, disabled: true});
								objDadosGerais.getEditor("flagEnvioAgendaMensal").option({value: 0, disabled: true});
							}else{
								objDadosGerais.getEditor("flagEnvioAgendaDiario").option({value: 0, disabled: false});
								objDadosGerais.getEditor("flagEnvioAgendaSemanal").option({value: 0, disabled: false});
								objDadosGerais.getEditor("flagEnvioAgendaMensal").option({value: 0, disabled: false});
							}
						}}
					},{colSpan: 4},*/{
						colSpan: 1, 
						dataField: "flagEnvioAgendaDiario",
						label: { text: "Diário", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("horaEnvioAgendaDiario").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("horaEnvioAgendaDiario").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 4, 
						dataField: "horaEnvioAgendaDiario",
						label: { text: "Hora", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 150 }
					}/*,{
						colSpan: 1, 
						dataField: "flagEnvioAgendaSemanal",
						label: { text: "Semanal", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { disabled: true, value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("horaEnvioAgendaSemanal").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("horaEnvioAgendaSemanal").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 4, 
						dataField: "horaEnvioAgendaSemanal",
						label: { text: "Hora", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 150 }
					},{
						colSpan: 1, 
						dataField: "flagEnvioAgendaMensal",
						label: { text: "Mensal", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { disabled: true, value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("horaEnvioAgendaMensal").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("horaEnvioAgendaMensal").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 4, 
						dataField: "horaEnvioAgendaMensal",
						label: { text: "Hora", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: { readOnly: true, type: "time", pickerType: "native", width: 150 }
					}*/,{
						colSpan: 4, template: function (data, itemElement) { itemElement.append("<div style='height:26px;border:0px solid red;text-align:right'>")}
					}]
				},{
					colSpan: 2,
					colCount: 4,
					itemType: "group",
					cssClass: "second-group",
					caption: "Integração entre sistemas",
					visible: (flagAdmSistema == 1 ? true : false),
					items: [{
						colSpan: 1, 
						dataField: "intSistEstoque",
						label: { text: "Estoque", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim"}
					},{
						colSpan: 1, 
						dataField: "intSistFaturamento",
						label: { text: "Faturamento", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim"}
					},{},{},{
						colSpan: 1, 
						dataField: "intSistPEPMedico",
						label: { text: "PEP Médico", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("pepMedicoFormulario").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("pepMedicoFormulario").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 3, 
						dataField: "pepMedicoFormulario",
						label: { text: "Formulário", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: { 
							readOnly: true, 
							dataSource: dataSourceFormPEPMed,
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					},{
						colSpan: 1, 
						dataField: "intSistPEPEnfermagem",
						label: { text: "PEP Enfermagem", alignment: "right"},
						editorType: "dxSwitch",
						editorOptions: { value: 0, switchedOffText:"Não", switchedOnText:"Sim", onValueChanged: function(e) {
							if (e.value == 0) {
								objDadosGerais.getEditor("pepEnfermagemFormulario").option({value: "", readOnly: true});
							}else{
								objDadosGerais.getEditor("pepEnfermagemFormulario").option({value: "", readOnly: false});
							}
						}}
					},{
						colSpan: 3, 
						dataField: "pepEnfermagemFormulario",
						label: { text: "Formulário", alignment: "right"},
						editorType: "dxSelectBox",
						editorOptions: { 
							readOnly: true, 
							dataSource: dataSourceFormPEPEnf,
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					}]
				}]
			}).dxForm("instance");

			$("#divMsgEnvioSMSConfirmacao").html("<b>Obs.:</b> O sistema irá trocar as palavas em negrito " + 
			"por dados da admissão <b>EMPRESA</b>, <b>NOME</b>, <b>DATA</b> e <b>HORA</b>. Não pode usar acentuação.")

			objControle = $("#divControle").dxForm({
				activeStateEnabled:true,
				formData: {},
				scrollingEnabled	: true,
				height	:function() { return window.innerHeight - 110; },
				items: [{
					itemType: "group",
					colCount: 2,
					items:[{
						dataField	: "criadoPor",
						label: { alignment: "right" },
						disabled	: true
					},{
						dataField	: "criadoEm",
						label: { alignment: "right" },
						disabled	: true
					},{
						dataField	: "alteradoPor",
						label: { alignment: "right" },
						disabled	: true
					},{
						dataField	: "alteradoEm",
						label: { alignment: "right" },
						disabled	: true
					}]
				}]
			}).dxForm("instance");
			
			$(document).ready(function () {
				carregarDados();
			});
			
			function carregarDados(){
				$.getJSON(urlPreparacao,{method: "GetConfiguracao"},function(objRetorno){
					objDadosGerais.getEditor("flagAdmissaoAntecipada").option("value", objRetorno.flagAdmissaoAntecipada);
					objDadosGerais.getEditor("tempoAdmissaoAntecipada").option("value", objRetorno.tempoAdmissaoAntecipada);
					objDadosGerais.getEditor("flagReserva").option("value", objRetorno.flagReserva);
					objDadosGerais.getEditor("tempoReserva").option("value", objRetorno.tempoReserva);
					objDadosGerais.getEditor("flagEdicaoAgendamento").option("value", objRetorno.flagEdicaoAgendamento);
					objDadosGerais.getEditor("tempoEdicaoAgendamento").option("value", objRetorno.tempoEdicaoAgendamento);
					objDadosGerais.getEditor("flagConfirmacaoAplicativo").option("value", objRetorno.flagConfirmacaoAplicativo);
					objDadosGerais.getEditor("tempoConfirmacaoAplicativo").option("value", objRetorno.tempoConfirmacaoAplicativo);
					objDadosGerais.getEditor("flagDiasPadraoAgendamento").option("value", objRetorno.flagDiasPadraoAgendamento);
					objDadosGerais.getEditor("qtdeDiasPadraoAgendamento").option("value", objRetorno.qtdeDiasPadraoAgendamento);
					objDadosGerais.getEditor("flagEnvioEmailPaciente").option("value", objRetorno.flagEnvioEmailPaciente);
					//objDadosGerais.getEditor("mensagemEnvioEmailPaciente").option("value", objRetorno.mensagemEnvioEmailPaciente);
					//objDadosGerais.getEditor("flagEnvioSMSPaciente").option("value", objRetorno.flagEnvioSMSPaciente);
					//objDadosGerais.getEditor("mensagemEnvioSMSPaciente").option("value", objRetorno.mensagemEnvioSMSPaciente);
					objDadosGerais.getEditor("flagEnvioSMSConfirmacao").option("value", objRetorno.flagEnvioSMSConfirmacao);
					objDadosGerais.getEditor("horaEnvioSMSConfirmacao").option("value", objRetorno.horaEnvioSMSConfirmacao);
					objDadosGerais.getEditor("diasEnvioSMSConfirmacao").option("value", objRetorno.diasEnvioSMSConfirmacao);
					objDadosGerais.getEditor("flagCancelamentoAutomaticoSMS").option("value", objRetorno.cancelAutomaticoSMS);
					objDadosGerais.getEditor("msgEnvioSMSConfirmacao").option("value", objRetorno.msgEnvioSMSConfirmacao);
					//objDadosGerais.getEditor("flagEnvioAgenda").option("value", objRetorno.flagEnvioAgenda);
					objDadosGerais.getEditor("flagEnvioAgendaDiario").option("value", objRetorno.flagEnvioAgendaDiario);
					objDadosGerais.getEditor("horaEnvioAgendaDiario").option("value", objRetorno.horaEnvioAgendaDiario);
					//objDadosGerais.getEditor("flagEnvioAgendaSemanal").option("value", objRetorno.flagEnvioAgendaSemanal);
					//objDadosGerais.getEditor("horaEnvioAgendaSemanal").option("value", objRetorno.horaEnvioAgendaSemanal);
					//objDadosGerais.getEditor("flagEnvioAgendaMensal").option("value", objRetorno.flagEnvioAgendaMensal);
					//objDadosGerais.getEditor("horaEnvioAgendaMensal").option("value", objRetorno.horaEnvioAgendaMensal);
					objDadosGerais.getEditor("intSistEstoque").option("value", objRetorno.intSistEstoque);
					objDadosGerais.getEditor("intSistFaturamento").option("value", objRetorno.intSistFaturamento);
					objDadosGerais.getEditor("intSistPEPMedico").option("value", objRetorno.intSistPEPMedico);
					objDadosGerais.getEditor("pepMedicoFormulario").option("value", objRetorno.pepMedicoFormulario);
					objDadosGerais.getEditor("intSistPEPEnfermagem").option("value", objRetorno.intSistPEPEnfermagem);
					objDadosGerais.getEditor("pepEnfermagemFormulario").option("value", objRetorno.pepEnfermagemFormulario);
					objDadosGerais.getEditor("qtdeDiasOrcamento").option("value", objRetorno.qtdeDiasOrcamento);
					objDadosGerais.getEditor("flagEnvioEmailOrcamento").option("value", objRetorno.flagEnvioEmailOrcamento);
					//objDadosGerais.getEditor("mensagemEnvioEmailOrcamento").option("value", objRetorno.mensagemEnvioEmailOrcamento);
					objDadosGerais.getEditor("cobrancaParaRetorno").option("value", objRetorno.cobrancaParaRetorno);
					objDadosGerais.getEditor("apenasUmRetorno").option("value", objRetorno.apenasUmRetorno);
					objDadosGerais.getEditor("agendamentoRetroativo").option("value", objRetorno.agendRetroativo);

					objControle.getEditor("criadoPor").option("value", objRetorno.criadoPor);
					objControle.getEditor("criadoEm").option("value", objRetorno.criadoEm);
					objControle.getEditor("alteradoEm").option("value", objRetorno.alteradoEm);
					objControle.getEditor("alteradoPor").option("value", objRetorno.alteradoPor);


					//Campos sem permisão de edição
					objDadosGerais.getEditor("flagAdmissaoAntecipada").option("disabled", true);
					objDadosGerais.getEditor("flagReserva").option("disabled", true);
					objDadosGerais.getEditor("flagEdicaoAgendamento").option("disabled", true);
					objDadosGerais.getEditor("flagDiasPadraoAgendamento").option("disabled", true);

				});				
			}

			$("#divCadastroExcecao").dxPopup({
				visible: false,
				title: "Cadastro de Exceção",
				width: 1000,
				height:  380,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objFormCadastroExcecao = $("<div id='divFormCadastroExcecao'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						screenByWidth: function(width) { return "lg"; },
						labelLocation: "top",
						items: [{
							dataField: "medico",
							editorType: "dxTagBox",
							label: { text:"Médico:"},
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlPreparacao,{method:"GetMedicoExcecao"});
	              		}
	          			})
	      				}),
								onValueChanged: function (e) {
									var pCodMedicos = e.value;
									if (!e.value) var pCodMedicos = "";
									$.get(urlPreparacao,{method: "SetConfMedicoExcecao", pCodMedicos: JSON.stringify(pCodMedicos)},
									function(objRetorno){ });
								},
	      				height: 300,
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Nome",
							}
						}]
					});
					e.append(objFormCadastroExcecao);
				}
			});
		</script>
	</body>
</html>
