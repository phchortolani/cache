<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		Do ^WWWVAR
 
		Set YUSER 		= $Get(%request.Data("YUSER", 1))
		Set YBED 			= $Get(%request.Data("YBED", 1))
		Set YM 				= $Get(%request.Data("YM", 1))
		Set YLOCATION = $Get(%request.Data("YLOCATION", 1))

		Set PortCache = $Get(%request.CgiEnvs("SERVER_PORT"))
		Set PageURL 	= $Get(%request.CgiEnvs("CACHE_URL"))
		Set PageName 	= %request.PageName
		Set app 			= %request.Application 
		Set host 			= %request.CgiEnvs("HTTP_HOST")
		Set url				= "http://"_host_app

		Set URLPreparacao 	= "VAR.CSP.VARCadAgendamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLPreparacaoOrc= "VAR.CSP.VARCadOrcamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLPreparacaoSal= "VAR.CSP.VARCadastroSalas.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLSearch				= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		Set URLLogin 				= "COMLogin.cls"
		Set URLLink 				= "www.cls"

		Set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)

		Set dataMinLimite	= $ZDate(+$Horolog,3)

		//Verifica se a sessão Teste
		Set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	
		Set objGetPadraoAgendamento = ##Class(VAR.CSP.VARConfiguracaoAgendamento).GetPadraoAgendamento() 
		Set dtPadInicialAgen	= objGetPadraoAgendamento.dtPadInicialAgen
		Set dtPadFinalAgen		= objGetPadraoAgendamento.dtPadFinalAgen
		Set dtPadRetInicialAgen = objGetPadraoAgendamento.dtPadRetInicialAgen
		Set dtPadRetFinalAgen 	= objGetPadraoAgendamento.dtPadRetFinalAgen
		Set hrPadInicalAgen		= objGetPadraoAgendamento.hrPadInicalAgen
		Set hrPadFinalAgen		= objGetPadraoAgendamento.hrPadFinalAgen
		Set envioDocumento 		= objGetPadraoAgendamento.envioDocumento
		Set padValReservaMin 	= objGetPadraoAgendamento.valReservaMin
		Set orcEnvioEmail			= objGetPadraoAgendamento.orcEnvioEmail
		set agendRetroativa		= objGetPadraoAgendamento.agendRetroativa
		set dtMax							= objGetPadraoAgendamento.dtMax
	
		Set numOrcamento = ""
		If ($Data(^mtemp.Orcamento(YBED))) {
			Set numOrcamento = ^mtemp.Orcamento(YBED)
		}
		Kill ^mtemp.Orcamento(YBED)
	
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Agendamento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script> 

	<style> 
	.cell-selected {
		background-color: #FFFFB9;
	}

	.dx-datagrid {
		user-select: none;
		-webkit-user-select: none;
	}		

	.dx-row2 { background-color: #F5F5F5; }
	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }

  .second-group-semBorda{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: #FFFFFF;
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #FFFFFF;
		border-left: 1px solid #FFFFFF;
		border-right: 1px solid #FFFFFF;
		border-bottom: 1px solid #FFFFFF;
  }
  
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	@keyframes fa-blink {
		0% { opacity: 1; }
		50% { opacity: 0.5; }
		100% { opacity: 0; }
	}
	.fa-blink {
		color: red;
		-webkit-animation: fa-blink 2.2s linear infinite;
		-moz-animation: fa-blink 2.2s linear infinite;
		-ms-animation: fa-blink 2.2s linear infinite;
		-o-animation: fa-blink 2.2s linear infinite;
		animation: fa-blink 2.2s linear infinite;
	}	
	</style>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divPreferenciaProfissional"></div>
		<div id="divEscolherProfHorario"></div>
		<div id="divLoad"></div>
		<div id="divDetalhe"></div>
		<div id="divPreRequisito"></div>
		<div id="divCadastrarMedico"></div>
		<div id="divTentativaContato"></div>
		<div id="divMotivoRemarcacao"></div>
		<div id="divPlanoSaude"></div>
		
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx-gantt.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			
			var urlPreparacao 		= '#(URLPreparacao)#';
			var urlPreparacaoOrc 	= '#(URLPreparacaoOrc)#';
			var urlPreparacaoSal	= '#(URLPreparacaoSal)#';
			var urlSearch					= '#(URLSearch)#';
			var urlLink 					= '#(URLLink)#';
			var YBED 							= '#(YBED)#';
			var YUSER 						= '#(YUSER)#';
			var YLOCATION 				= '#(YLOCATION)#';
			var nomeLocal 				= '#(nomeLocal)#';
			var dtPadInicialAgen	= '#(dtPadInicialAgen)#';
			var dtPadFinalAgen		= '#(dtPadFinalAgen)#';
			var dtPadRetInicialAgen = '#(dtPadRetInicialAgen)#';
			var dtPadRetFinalAgen 	= '#(dtPadRetFinalAgen)#';
			var dtMax							= '#(dtMax)#';
			var hrPadInicalAgen		= '#(hrPadInicalAgen)#';
			var hrPadFinalAgen		= '#(hrPadFinalAgen)#';
			var envioDocumento 		= '#(envioDocumento)#';
			var padValReservaMin	= #(padValReservaMin)#;
			var agendRetroativa		= #(agendRetroativa)#;
			var codProcPreRequis	= "";
			var numOrcamento			= '#(numOrcamento)#';
			var numAgendTentCont	= "";

			var flagEdicaoAgend		= 0;
			var motivoEdicao			= "";

			var selectRangeSemana = [];
			var isSelectStopSemana;
			var codAgendamento		= "";
			var codAgendamentoImp	= "";
			var qtdeProcedSelec		= 0;
			var qtdeHorarioAgend	= 0;
			var selCodProcedimento= "";
			var selCodProfissional= "";
			var timeOut = "";
			var valReservaMin 		= padValReservaMin;
			var valReservaSeg 		= 0;
			var dSSolicitante 		= [];
			
			var codUltimoMedicoSol = "";

			var codProcPS					= "";
			var codConvenioPS			= "";
			var dataSourcePS			= [];
			
			var arraySelProc			= [];
			var qtdeSelProc				= 0;
			var qtdeSelProcDe			= 0;
			
			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			$(document).ready(function () {
				limparPaciente();
				if (numOrcamento != "") {
					$.getJSON(urlPreparacao, {method: "PreparaAgendOrcamento", pCodOrcamento: numOrcamento},
			    function(objRetorno){
						objCodigoPaciente.option("value",objRetorno.codPaciente);
						codAgendamento = objRetorno.codAgendamento;
						objSelPaciente.option("disabled", true);
						objAgendamento.option("disabled", false);
						$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 1)
						setTimeout(function(){
							objAgendamento.getEditor("agendProcDataInicial").option("value", dtPadInicialAgen);
							objAgendamento.getEditor("agendProcDataInicial").option("min", dtPadInicialAgen);
							objAgendamento.getEditor("agendProcDataFinal").option("value", dtPadFinalAgen);
							objAgendamento.getEditor("agendProcDataFinal").option("min", dtPadInicialAgen);
							objAgendamento.getEditor("agendProcHoraInicial").option("value", hrPadInicalAgen);
							objAgendamento.getEditor("agendProcHoraFinal").option("value", hrPadFinalAgen);
							objAgendamento.getEditor("codPlanoSaudeConvenio").option("value", objRetorno.codConvenio); 
							objAgendamento.getEditor("planoSaudeCarteirinha").option("value", objRetorno.codCarteirinha); 
							objAgendamento.getEditor("agendObservacao").option("value", objRetorno.observacao); 
							dataSourceProcedimentosBusca.reload();
							objAgendamento.getEditor("codPlanoSaude").option("value", objRetorno.codPlanoSaude); 
							setTimeout(function(){
								buscarHorarios();
			      	}, 500);
			      }, 500);				  	  
				  });			
			  }
				//$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 2)
				//objCodigoPaciente.option("value","1");
				/*codAgendamento = '21/0000000343';
				objSelPaciente.option("disabled", true);
				objAgendamento.option("disabled", false);
				setTimeout(function(){
					objAgendamento.getEditor("agendProcDataInicial").option("value", dtPadInicialAgen);
					objAgendamento.getEditor("agendProcDataFinal").option("value", dtPadFinalAgen);
					objAgendamento.getEditor("agendProcHoraInicial").option("value", hrPadInicalAgen);
					objAgendamento.getEditor("agendProcHoraFinal").option("value", hrPadFinalAgen);
					dataSourceProcedimentosBusca.reload();
	      }, 500);*/
	      
	      	if (YBED == "JULIO") { 
		      	//editarAgendamento('21/0000000030')
			}
				//listarRemarcacao();
			});

    	objLoad = $("#divLoad").dxLoadPanel({
	    	visible: false,
				message:"Buscando Horários, Favor aguarde.",
				width: 300,
				heigth: 150
		  }).dxLoadPanel("instance");

			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) { return "lg"; },
				screenByWidth: function(width) { return "lg"; },
				height:function(){ 20},
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colCount: 10,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 10,
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
		  			  selectedIndex: 0,
							deferRendering: false,
							animationEnabled: false,
							showNavButtons:true,
							onSelectionChanged: function(e){
								if (e.addedItems[0].title == "Remarcação");{
									listarRemarcacao();	
								}
							}
						},	
							height:'10px',
							tabs:[{
								title	: "Pesquisar Paciente",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divSelPaciente'>")
									}
								}],
							},{
								title	: "Realizar Agendamento",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divAgendamento'>")
									}
								}]
							},{
								title	: "Pendência Remarcação",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divRemarcacao'>")
									}
								}]
							},{
								title	: "Pesquisar Agendamento",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divRelatorio'>")
									}
								}]
							}]
						}
					]
				}]
			}).dxForm("instance");

			objSelPaciente = $("#divSelPaciente").dxForm({
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 2,
				items	: [{
					colCount: 6,
					itemType: "group",
					cssClass: "second-group",
					items: [{
						colSpan: 6, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
					},{
						colSpan: 6, 
						dataField: "pacienteCodigo",
						label: { text:"Pesquisar:", alignment: "right"},
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPacienteCodigo'>")
						}
					},{
						colSpan: 6, 
						dataField: "pacienteNome",
						label: { text:"Nome:", alignment: "right"},
						validationRules: [{type: "required"}],	
					},{
						colSpan: 2, 
						dataField: "pacienteProntuario",
						label: { text:"Prontuário:", alignment: "right" },
					},{
						colSpan: 2, 
						dataField: "pacienteDataNascimento",
						editorType: "dxDateBox",
						label: { text:"Nascimento:", alignment: "right" },
						validationRules: [{type: "required"}],	
						editorOptions : { useMaskBehavior: true, width: 120 }
					},{
						colSpan: 2, 
						dataField: "pacienteSexo",
						editorType: "dxSelectBox",
						label: { text:"Sexo:", alignment: "right" },
						editorType: "dxSelectBox",
						validationRules: [{type: "required"}],	
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetWWW101",pDescParametro:"SEX"});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					},{
						colSpan: 6, 
						dataField: "pacienteNomeMae",
						label: { text:"Nome Mãe:", alignment: "right"},
						//validationRules: [{type: "required"}],	
					},{
						colSpan: 2, dataField: "pacienteCPF", 
						label: { text:"CPF:", alignment: "right"},
						editorOptions: {
							maxLength: 11,
							onValueChanged: function (e) {
								if (!e.value) return;
								if (!validarCPF(e.value)) {
									DevExpress.ui.notify("CPF invalido.","warning");	
									objSelPaciente.getEditor("pacienteCPF").option("value", "");
									objSelPaciente.getEditor("pacienteCPF").focus();  
								}
							}
						}, 
						validationRules: [{type: "required"}, ]
					},{colSpan: 2, dataField: "pacienteRG", label: { text:"RG:", alignment: "right"}},
					{colSpan: 2, dataField: "pacienteCNS", label: { text:"CNS:", alignment: "right"}},
					{colSpan: 3, dataField: "pacienteTelefone", label: { text:"Telefone:", alignment: "right"}, editorOptions:{mask:"(99)9999-9999"}},
					{colSpan: 3, dataField: "pacienteCelular", label: { text:"Celular:", alignment: "right"}, editorOptions:{mask:"(99)99999-9999"}},
					{colSpan: 6, dataField: "pacienteEmail", label: { text:"E-mail:", alignment: "right"}},
					{colSpan: 6, template: function (data, itemElement) { itemElement.append("<div style='height:3px;border:0px solid red;text-align:right'>")}},
				]},{
					colCount: 2,
					itemType: "group",
					cssClass: "second-group",
					caption: "Endereço",
					items: [
						{dataField: "pacienteCEP", label: { text:"CEP:", alignment: "right"},
							editorOptions: {
								onValueChanged: function(e) {
									if (e.value) {
										$.getJSON(urlPreparacao,{method: "GetCEP", pCEP: e.value}, function(objRetorno){
											if (objRetorno.Logradouro != "") {
												objSelPaciente.getEditor("pacienteLogradouro").option("value",objRetorno.Logradouro);
												objSelPaciente.getEditor("pacienteBairro").option("value",objRetorno.Bairro);
												objSelPaciente.getEditor("pacienteCidade").option("value",objRetorno.Cidade);
												objSelPaciente.getEditor("pacienteEstado").option("value",objRetorno.UF);
											}
										});
									}
								}
							}
						},{},
						{colSpan: 2, dataField: "pacienteLogradouro", label: { text:"Logradouro:", alignment: "right"}},
						{dataField: "pacienteNumeroEndereco", label: { text:"Número:", alignment: "right"}},
						{dataField: "pacienteComplemento", label: { text:"Complemento:", alignment: "right"}},
						{dataField: "pacienteBairro", label: { text:"Bairro:", alignment: "right"}},
						{dataField: "pacienteCidade", label: { text:"Cidade:", alignment: "right"}},
						{
							dataField: "pacienteEstado",
							editorType: "dxSelectBox",
							label: {
								text:"Estado:",
								alignment: "right"
							},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetWWW102",pDescParametro:"BUNDESLAND"});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}
						},
						{},
						{colSpan: 2, template: function (data, itemElement) { itemElement.append("<div style='height:33px;border:0px solid red;text-align:right'>")}},
					]
				},{
					colSpan: 2,							
					template	: function (data, itemElement) {
						itemElement.append("<div id='divPacienteAcao' style='text-align:right;border: 0px solid red;'>")
					}
				},{
					colSpan: 2,
					itemType: "group",
					cssClass: "second-group",
					caption: "Agendamento/Admissões",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divPacienteAgendamentoAdmissoes' style='text-align:right;border: 0px solid red;'>")
						}
					}]
				}]
			}).dxForm("instance");

			dataSourcePaciente = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlSearch,{
							method				:	"GetPaciente",
							pCodPaciente	: args,
						});
					},
					load: function(args) {
						return $.getJSON(urlSearch,{
							method				:	"GetPaciente",
							pSkip					:	args.skip,
							pTake					:	args.take,
							pSearchValue	:	args.searchValue,
						});
					}
				})
			});	

			objCodigoPaciente = $("#divPacienteCodigo").dxSelectBox({
				dataSource: dataSourcePaciente,
				placeholder: "+",
				searchEnabled: true,
				valueExpr: "Codigo", 
				displayExpr: "Nome",
				showClearButton: true,
        itemTemplate: function(data) {
	        return	"<div class='custom-item'>" +
	        					"<div>" + data.Nome + "</div>" +
	        					"<div style='color:red;font-size:10px'>Dt. Nasc.: " + data.Nascimento + 
	        					" &nbsp; Prontuário: " + data.Prontuario + " &nbsp; CPF: " + data.CPF +
	        					"</div>" +
	        				"</div>";
        },
				onValueChanged: function(e) {
					if (!e.value) {
						objSelPaciente.resetValues();
					}else{
						carregarPaciente(e.value);
					}
					listarAgendamentoAdmissoes();
				}
			}).dxSelectBox("instance");


			function listarAgendamentoAdmissoes(){
				if ($("#divPacienteAgendamentoAdmissoesLista")) $("#divPacienteAgendamentoAdmissoesLista").remove();
				$("#divPacienteAgendamentoAdmissoes").html("<div id='divPacienteAgendamentoAdmissoesLista'></div>");

				pCodPaciente = objCodigoPaciente.option("value");
				if (pCodPaciente == "" || pCodPaciente == null) return;

				$("#divPacienteAgendamentoAdmissoesLista").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							loadMode: "raw",   
							load: function(){
			        	return $.getJSON(urlPreparacao, {method: "GetAgendamentoNew", pCodPaciente: pCodPaciente});
							},
						})
					}),
					columns: [
						{dataField: "numeroAgendDt", caption: "Número Agendamento", alignment: "center", width: 120, groupIndex:0, sortIndex: 0, sortOrder: "desc"},
						{dataField: "descProcedimento", caption: "Procedimento", alignment: "center", width: 250},
						{dataField: "dataHoraAtend", caption: "Data/Hora Atendimento", alignment: "center", width: 150, 
						cellTemplate: function(container, options){
								if (options.data.dataHoraAdmissao != "") {
									container.html("<span style='height:20px;width:100%;text-align:center;display:inline-block;"+
																 "vertical-align: middle;'>&nbsp; "+options.data.dataHoraAdmissaoForm+" &nbsp;</span>"+
																 "<br><b><span style='height:20px;width:100%;background-color:#d9ffd9;text-align:center;"+ 
																 "border-radius:2px;display:inline-block;vertical-align: middle;'>"+
						 										 "&nbsp; Admitido &nbsp;</span></b>");
								}else if (options.data.flagRemarcacao == 1) {
									container.html("<span style='height:20px;width:100%;text-align:center;display:inline-block;"+
																 "vertical-align: middle;'>&nbsp; "+options.data.dataHoraAtend+" &nbsp;</span>"+
																 "<br><b><span style='height:20px;width:100%;background-color:#ffcaca;text-align:center;"+ 
																 "border-radius:2px;display:inline-block;vertical-align: middle;'>"+
						 										 "&nbsp; Remarcação &nbsp;</span></b>");
								}else{
									container.html(options.data.dataHoraAtend);
								}
						}},
						{dataField: "nomeProfissional", caption: "Profissional", alignment: "center", width: 200},
						{dataField: "descSala", caption: "Local", alignment: "center"},
						{dataField: "acaoEditar", caption: "E", alignment: "center", width: 30, 
						cellTemplate: function(container, options){
							if (options.data.flagEdicao == 1) {
								container.html("<span onClick=editarAgendamento('"+options.data.numeroAgend+"','0');>" +
																"<i class='fas fa-edit' title='Editar' style='color:#337AB7;cursor:pointer;' />"+
															 "</span>");
							}
						}},
						{dataField: "acaoCancelar", caption: "C", alignment: "center", width: 30, 
						cellTemplate: function(container, options){
							if (options.data.flagCancelar == 1) {
								container.html("<span onClick=cancelarAgendamento('"+options.data.numeroAgend+"','"+options.data.sequencia+"');>" +
																	"<i class='far fa-times-circle' title='Cancelar' style='color:red;cursor:pointer;' />" +
															 "</span>");
							}
						}},
					],
	    		columnChooser: { enabled: false, mode: "dragAndDrop"},
					showColumnHeaders:true,
					allowColumnReordering: false,
					columnAutoWidth: true,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: true },
					groupPanel: { visible: false, allowColumnDragging: true },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					height: function() { 
						var height = window.innerHeight - 490;
						return (height < 300 ? 300 : height) 
					},
				});
			}
			
			function editarAgendamento(pNumeroAgend,pRemarcacao) {
				$.getJSON(urlPreparacao,{method: "EditarAgendamento", pCodAgendamento: pNumeroAgend},function(objRetorno){
					flagEdicaoAgend		= 1;
					if (pRemarcacao == 1) {
						motivoEdicao = "-RP-";
					}
					objCodigoPaciente.option("value", objRetorno.codPaciente);
					codAgendamento = pNumeroAgend;
					objSelPaciente.option("disabled", true);
					objAgendamento.option("disabled", false);
					$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 1)
					setTimeout(function(){
						objAgendamento.getEditor("pacienteEnviar").option("value", objRetorno.pacienteEnviar);
						objAgendamento.getEditor("agendProcDataInicial").option("value", dtPadInicialAgen);
						objAgendamento.getEditor("agendProcDataInicial").option("min", dtPadInicialAgen);
						objAgendamento.getEditor("agendProcDataFinal").option("value", dtPadFinalAgen);
						objAgendamento.getEditor("agendProcDataFinal").option("min", dtPadInicialAgen);
						objAgendamento.getEditor("agendProcHoraInicial").option("value", hrPadInicalAgen);
						objAgendamento.getEditor("agendProcHoraFinal").option("value", hrPadFinalAgen);
						objAgendamento.getEditor("codPlanoSaudeConvenio").option("value", objRetorno.codConvenio); 
						objAgendamento.getEditor("planoSaudeCarteirinha").option("value", objRetorno.codCarteirinha); 
						objAgendamento.getEditor("dataVencimentoCarteirinha").option("value", objRetorno.vencCarteirinha); 
						objAgendamento.getEditor("planoSaudeEmpContratante").option("value", objRetorno.empresaContratante); 
						objAgendamento.getEditor("codPlanoSaude").option("value", objRetorno.codPlanoSaude); 
						dataSourceMedicoExterno.reload();
						if (objRetorno.solicitante != "") {
							objAgendamento.getEditor("agendSolicitante").option("value", objRetorno.solicitante.split(",")); 
						}
						objAgendamento.getEditor("agendObservacao").option("value", objRetorno.observacao); 
						dataSourceListarHorarios.reload();
		      }, 500);
				  dataSourceProcedimentosBusca.reload();
				});
			}
			
			function cancelarAgendamento(pNumeroAgend, pSequencia){
				var result = DevExpress.ui.dialog.confirm("<i>Confirma o cancelamento?", "Confirmação?");
	    	result.done(function(dialogResult) {
        	if (!dialogResult){
						return;
					}
					$.getJSON(urlPreparacao,{method: "CancelarAgendamento", pCodAgendamento: pNumeroAgend, 
					pSequencia: pSequencia},function(objRetorno){
						if (objRetorno.status == 1) {
							DevExpress.ui.notify("Agendamento cancelado com sucesso!","success");
							listarAgendamentoAdmissoes();
							listarRemarcacao();
						}else{
							DevExpress.ui.notify(objRetorno.mensagem,"warning");		
						}
					})
	    	});
			}

			$("#divPacienteAcao").html("<table width='100%'>" +
																	"<tr>" +
																		"<td align='right' style='vertical-align:bottom;'>" + 
																			"<div id='divPacienteSalvar'/>&nbsp;" +
																			"<div id='divPacienteAgendar'/>&nbsp;" +
																			"<div id='divPacienteLimpar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>");


			objPacienteSalvar = $("#divPacienteSalvar").dxButton({
			  icon	: "save",
			  text	: "Salvar e Agendar",
			  type	: "success",
			  stylingMode : "contained",
			  onClick	: function(){
				  pacienteCodigo = objCodigoPaciente.option("value")
	        if (!pacienteCodigo) pacienteCodigo = "";
	        if (!objSelPaciente.validate().isValid){
		        DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
		        return
	        }
	        $.getJSON(urlPreparacao,{method: "SalvarPaciente", chave: pacienteCodigo, 
	        dados: JSON.stringify(objSelPaciente.option("formData"))},function(objRetorno){
						if (objRetorno.status ==  -1) {
							DevExpress.ui.notify(objRetorno.mensagem,"warning");		
						}else if (objRetorno.status ==  1) {
							DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
							objCodigoPaciente.option("value",objRetorno.codigo)
							carregarPaciente(objRetorno.codigo);
							gerarAgendamento();
						}else{
							DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
						}
					})
			  }
			}).dxButton("instance");

			objPacienteAgendar = $("#divPacienteAgendar").dxButton({
			  icon	: "fas fa-calendar-plus",
			  text	: "Agendar",
			  type	: "default",
			  visible: false,
			  stylingMode : "contained",
			  onClick	: function(){
				  pacienteCodigo = objCodigoPaciente.option("value")
	        if (!pacienteCodigo) {
						DevExpress.ui.notify("Favor informar o paciente.","warning");		
		      	return;  
	        }
	        gerarAgendamento();
				 }
			}).dxButton("instance");

			objPacienteLimpar = $("#divPacienteLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  limparPaciente()
			  }
			}).dxButton("instance");

			function limparPaciente(){
				objSelPaciente.resetValues();
				objCodigoPaciente.option("value","");
				objSelPaciente.option("disabled", false);
				objAgendamento.option("disabled", true);
				listarAgendamentoAdmissoes();
			}

			function carregarPaciente(pCodPaciente){
				$.getJSON(urlPreparacao,{method: "GetDadosPaciente", pCodPaciente: pCodPaciente}, function(objRetorno){
					objSelPaciente.option("formData", objRetorno);
					objAgendamento.resetValues();
					objAgendamento.getEditor("agendamentoPaciente").option("value", objRetorno.pacienteNome)
					objAgendamento.getEditor("agendamentoPacienteProntuario").option("value", objRetorno.pacienteProntuario)
					objAgendamento.getEditor("agendamentoPacienteSexo").option("value", objRetorno.pacienteSexoF)
					objAgendamento.getEditor("agendamentoPacienteNascimento").option("value", objRetorno.pacienteDataNascimentoF)
					objAgendamento.getEditor("agendamentoPacienteEmail").option("value", objRetorno.pacienteEmail)
					objAgendamento.getEditor("pacienteEnviar").option("value", 0)
				});
			}

			dataSourceMedicoExterno = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
      		load: function() {
	        	return $.getJSON(urlPreparacao,{
							method			:	"CarregaProfissional",
							pFlagExterno: "EI"
						});
      		}
				})
			});

			///// Aba Agendamento
			dSPlanoSaude = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pCodConvenio = objAgendamento.getEditor("codPlanoSaudeConvenio").option("value");
						return $.getJSON(urlPreparacao,{
							method:	"GetPlanoSaudeCampo",
							pCodOrganizacao: pCodConvenio
						});
					}
				})
			});

			var convenioAnt = "";
			var nomePaiOrganizacaoAnt = "";
			objAgendamento = $("#divAgendamento").dxForm({
				disabled: true,
				scrollingEnabled	: true,
				showColonAfterLabel	: true,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 14,
				items: [{
					itemType: "group",
					caption: "Paciente",
					cssClass: "second-group",
					colSpan: 4,
					colCount: 4,
					items: [{
						dataField: "agendamentoPaciente", colSpan: 4,
						label: { text:"Paciente", alignment: "right"},
						editorOptions: {readOnly: true}
					},{
						itemType: "group",
						colSpan: 4,
						colCount: 3,
						items: [{
							dataField: "agendamentoPacienteProntuario",
							label: { text:"Prontuário", alignment: "right"},
							editorOptions: { width: 120, readOnly: true}
						},{
							dataField: "agendamentoPacienteSexo",
							label: { text:"Sexo", alignment: "right"},
							editorOptions: { width: 100, readOnly: true}
						},{
							dataField: "agendamentoPacienteNascimento",
							label: { text:"Nascimento", alignment: "right"},
							editorOptions: { width: 80, readOnly: true}
						}]
					}, {
						dataField: "agendamentoPacienteEmail", colSpan: 3,
						label: { text:"E-mail", alignment: "right"},
					}, {
						dataField: "pacienteEnviar", 
						label: { text:"", alignment: "right", visible: false},
						editorType: "dxCheckBox",
						editorOptions: {
							disabled: !envioDocumento,
							text: "Enviar documento",
							onValueChanged: function(e) {
							}
						}					
					}]
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Plano de Saúde",
					colSpan: 10,
					colCount: 4,
					items: [{
						dataField: "codPlanoSaudeConvenio", colSpan: 2,
						label: { text:"Convênio", alignment: "right"},
						editorType: "dxSelectBox", 
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										return $.getJSON(urlPreparacaoOrc,{
											method:	"GetConvenio",
											pCodConvenio: args
										});
									},
									load: function(args) {
										return $.getJSON(urlPreparacaoOrc,{
											method				:	"GetConvenio",
											pSkip					:	args.skip,
											pTake					:	args.take,
											pSearchValue	:	args.searchValue,
											pCodConvenio  : "",
											pParticular 	: "",
											pFlagConvenio : 1,
											pConvenio 		: ""

										});
									}
								})
							}),
							showClearButton: true,
							onValueChanged: function (e) {
								objAgendamento.getEditor("codPlanoSaude").option("value","");
								dSPlanoSaude.reload();
							},
							displayExpr: "NomeOrganizacao",
							valueExpr: "CodOrganizacao",
							searchEnabled: true,
						}
					},{
						dataField: "codPlanoSaude", colSpan: 2,
						label: { text:"Plano de Saúde", alignment: "right"},
						editorType: "dxSelectBox", 
						editorOptions: {
							showClearButton: true,
							dataSource: dSPlanoSaude,
							itemTemplate: function (data, itemIndex, element) {
								if (nomePaiOrganizacaoAnt != data.nomePaiOrganizacao){
									retorno = "<br><b><i>"+data.nomePaiOrganizacao+"</i></b><br>"+data.nomeOrganizacao;
									nomePaiOrganizacaoAnt = data.nomePaiOrganizacao
								}else{
									retorno = data.nomeOrganizacao;
								}
								return element.append(retorno)
							},
							onValueChanged: function (e) {
								dataSourceListarHorarios.reload();
							},
							displayExpr: "nomeOrganizacao",
							valueExpr: "codOrganizacao",
							searchEnabled: true,
						}
					},{
						colSpan: 2,
						dataField: "planoSaudeCarteirinha",
						editorType: "dxTextBox", 
						label: { text:"Nº da Carteirinha", alignment: "right"},
					},{
						colSpan: 2,
						dataField: "dataVencimentoCarteirinha",
						editorType: "dxDateBox", 
						label: { text:"Vencimento da Carterinha", alignment: "right"},
						editorOptions: {
							type: "date",
							width: 130,
							dateSerializationFormat: "yyyy-MM-dd",
						}
					},{
						colSpan: 4,
						dataField: "planoSaudeEmpContratante",
						editorType: "dxSelectBox", 
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"VAREMPRESACONTRATANTE",pExibirCod:0});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						},
						label: { text:"Empresa Contratante", alignment: "right"},
					}]
				},{
					colSpan: 14,
					itemType: "group",
					cssClass: "second-group",
					caption: "Solicitante",
					items: [{ 
						dataField: "agendSolicitante",
						editorType: "dxTagBox",
						label: { visible	: false},
						editorOptions: {
							dataSource: dataSourceMedicoExterno,
							valueExpr: "CodProvider", 
							displayExpr: "DescProvider", 
							searchEnabled: true,
							onValueChanged: function(e) {
								var pSolicitante = e.value;
								if (e.value.length > 0) {
									codUltimoMedicoSol = e.value[e.value.length-1];
								}else{
									codUltimoMedicoSol = "";
								}
								if (pSolicitante) pSolicitante = pSolicitante.join(",");
								$.get(urlPreparacao,{method: "ArmSolicitante", pCodAgendamento: codAgendamento,
								pSolicitante: pSolicitante}, function(){
									dataSourceListarHorarios.reload();
								});
							},
							buttons: [{
								location:"after",
								name: "addPRocedimento",
								options:{
									icon	: "add",
									hint	: "Adicionar Médico",
									type	: "default",
									stylingMode : "contained",
									onClick	: function(){
										$("#divCadastrarMedico").dxPopup("show");
									}
								}
							}]									
						}
					}]
				},{
					itemType: "group",
					colSpan: 14,
					items: [{
						itemType: "group",
						cssClass: "second-group",
						caption: "Agendamento", //"Procedimentos",
						colCount: 8,
						items: [{
							itemType: "group",
							colSpan: 4,
							items: [{
								dataField: "agendProcLocal",
								label: { text:"Unidade", alignment: "right"},
								editorType: "dxTagBox", 
								editorOptions: {
									height: 65,
									dataSource: new DevExpress.data.DataSource({
										store: new DevExpress.data.CustomStore({
											loadMode: "raw",   
											load: function() {
												return $.get(urlSearch,{
													method						:	"GetLocal",
													pCodLocal					: "",
													pFlagUnidadeSaude	: 1,
													pFlagLocalAtivo		: 1
												});
											}
										})
									}),				
									valueExpr: "Location", 
									displayExpr: "LocationName",
									searchEnabled: true
								}
							}]
						},{
							itemType: "group",
							colSpan: 4,
							colCount: 4,
							items: [{
								dataField: "agendProcDataInicial",
								label: { text: "Data", alignment: "right"},
								editorType: "dxDateBox",
								editorOptions: {
									type: "date", width: 110, dateSerializationFormat: "yyyy-MM-dd",
									value: dtPadInicialAgen, mim: dtPadInicialAgen
								}
							},{
								dataField: "agendProcDataFinal",
								label: { alignment: "right", visible: false},
								editorType: "dxDateBox",
								editorOptions: {
									type: "date", width: 110, dateSerializationFormat: "yyyy-MM-dd",
									value: dtPadFinalAgen, mim: dtPadInicialAgen
								}
							},{
								colSpan: 2,
								template: function (data, itemElement) {
									itemElement.append("<div id='divAgendProcSemana'>")
								}
							},{
								dataField: "agendProcHoraInicial",
								label: { text: "Hora", alignment: "right"},
								editorType: "dxDateBox",
								editorOptions: {
									type: "time", pickerType: "native", width: 110,
									value: hrPadInicalAgen
								}
							},{
								dataField: "agendProcHoraFinal",
								label: { alignment: "right", visible: false},
								editorType: "dxDateBox",
								editorOptions: {
									type: "time", pickerType: "native", width: 110,
									value: hrPadFinalAgen
								}
							},{
								colSpan: 1,
								dataField: "agendProcAgendarSeparado",
								label: { alignment: "right", visible: false},
								editorType: "dxCheckBox",
								editorOptions: { text: "Agendar Separado",  width: 120}
							},{
								colSpan: 1,
								dataField: "agendProcRetroativo",
								label: { alignment: "right", visible: false},
								editorType: "dxCheckBox",
								editorOptions: { 
									text: "Retroativo",  width: 100, visible: agendRetroativa,
									onValueChanged: function(e) {
										if (e.value) {
											objAgendamento.getEditor("agendProcDataFinal").option("min", "");
											objAgendamento.getEditor("agendProcDataFinal").option("max", dtPadRetFinalAgen);
											objAgendamento.getEditor("agendProcDataInicial").option("min", "");
											objAgendamento.getEditor("agendProcDataInicial").option("max", dtPadRetFinalAgen);
											objAgendamento.getEditor("agendProcDataInicial").option("value", dtPadRetInicialAgen);
											objAgendamento.getEditor("agendProcDataFinal").option("value", dtPadRetFinalAgen);
										}else{
											objAgendamento.getEditor("agendProcDataInicial").option("min", dtPadInicialAgen);
											objAgendamento.getEditor("agendProcDataInicial").option("max", dtMax);
											objAgendamento.getEditor("agendProcDataFinal").option("min", dtPadInicialAgen);
											objAgendamento.getEditor("agendProcDataFinal").option("max", dtMax);
											objAgendamento.getEditor("agendProcDataInicial").option("value", dtPadInicialAgen);
											objAgendamento.getEditor("agendProcDataFinal").option("value", dtPadFinalAgen);
										}
									}
								}
							}]
						},{
							colSpan: 8,
							dataField: "agendProcProcedimento",
							label: { text:"Procedimento", alignment: "right"},
							editorType: "dxSelectBox", 
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacao,{
												method				:	"GetProcedimento",
												pCodPaciente	: args,
											});
										},
										load: function(args) {
											return $.getJSON(urlPreparacao,{
												method				:	"GetProcedimento",
												pSkip					:	args.skip,
												pTake					:	args.take,
												pSearchValue	:	args.searchValue,
												pAlias				: 1,
												pItemPedido		: 2
											});
										}
									})
								}),
								onKeyDown: function (e) {
									var pCodProcedimento = objAgendamento.getEditor("agendProcProcedimento").option("value");
									if ((e.event.keyCode == 9 || e.event.keyCode == 13) && pCodProcedimento != "") {
										$.get(urlPreparacao, {method: "InserirProcedimentoBuscar", pCodAgendamento: codAgendamento,
										pCodProcedimento:pCodProcedimento},function(retorno){
											dataSourceProcedimentosBusca.reload();
											objAgendamento.getEditor("agendProcProcedimento").option("value", "");
											objAgendamento.getEditor("agendProcProcedimento").focus();  
										});
									}
								},							
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
								showClearButton: true,
								buttons: [{
									location:"after",
									name: "addPRocedimento",
									options:{
										icon	: "add",
										hint	: "adicionar",
										type	: "default",
										stylingMode : "contained",
										onClick	: function(){
											var pCodProcedimento = objAgendamento.getEditor("agendProcProcedimento").option("value");
											if (pCodProcedimento == "" || pCodProcedimento == null) {
												DevExpress.ui.notify("Favor informar o procedimento.","warning");	
												return;
											}
											$.get(urlPreparacao, {method: "InserirProcedimentoBuscar", pCodAgendamento: codAgendamento,
											pCodProcedimento:pCodProcedimento},function(retorno){
												dataSourceProcedimentosBusca.reload();
												objAgendamento.getEditor("agendProcProcedimento").option("value", "");	
											});
										}
									}
								}]
							}
						},{
							colSpan: 8,
							template	: function (data, itemElement) {
								itemElement.append("<div id='divAgendProcProcedimento' style='width:99%' >")
							}
						},{
							colSpan: 8,
							template	: function (data, itemElement) {
								itemElement.append("<div id='divAgendProcAcao' style='text-align:right;border: 0px solid red;'>")
							}
						}]
					},{
						itemType: "group",
						cssClass: "second-group",
						caption: "Horários",
						items: [
							{template	: function (data, itemElement) {
								itemElement.append("<div id='divAgendHorariosValidade'>")
							}},
							{template	: function (data, itemElement) {
								itemElement.append("<div id='divAgendHorarios' style='width:99%'>")
							}},
						]
					},{
						itemType: "group",
						colCount: 1,
						items: [{
							itemType: "group",
							caption: "Observações",
							cssClass: "second-group",
							items: [{
								dataField: "agendObservacao",
								editorType: "dxTextArea",
								label: { visible	: false},
								editorOptions: {height	: 55,}
							}]
						}]
					},{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divAgendAcao' style='text-align:right;border: 0px solid red;'>")
						}
					}]
				}]
			}).dxForm("instance");

			$("#divAgendAcao").html("<table width='100%'>" +
																	"<tr>" +
																		"<td align='right' style='vertical-align:bottom;'>" + 
																			"<div id='divAgendPreRequisito'/>&nbsp;" +
																			"<div id='divAgendSalvar'/>&nbsp;" +
																			"<div id='divAgendCancelar'/>&nbsp;" +
																			"<div id='divAgendLimpar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>");

			objPacientePreRequisito= $("#divAgendPreRequisito").dxButton({
			  icon	: "far fa-clipboard-list",
			  text	: "Pré Requisito",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
					consultarPreRequisito("");
			  }
			}).dxButton("instance");
			
			objPacienteSalvar = $("#divAgendSalvar").dxButton({
			  icon	: "save",
			  text	: "Salvar",
			  type	: "success",
			  stylingMode : "contained",
			  onClick	: function(){
					var arrayProcedimentoArm = [];
					$(".confAgendamento").each(function( index ) {
						if ($(this).dxCheckBox("instance").option("value") == 1){
							arrayProcedimentoArm.push($(this).attr('procedimento'));
						};
					});
					if (arrayProcedimentoArm.length == 0) {
						DevExpress.ui.notify("Não há horários selecionados para o agendamento.","warning");		
						return;
					}
					if (valReservaMin < 0) {
						DevExpress.ui.notify("Favor checar as reservas, Horário(s) disponibilizado no sistema.","warning");		
						return;
					}
					atualizarReserva();
					var pEmailPaciente		= objAgendamento.getEditor("agendamentoPacienteEmail").option("value");
					var pEnviarDocumento 	= objAgendamento.getEditor("pacienteEnviar").option("value");

					var pArrayProcedimentoArm = "";
					if (arrayProcedimentoArm.length > 0) {
						var pArrayProcedimentoArm = arrayProcedimentoArm.join(",");
					}
					var pCodPlanoSaudeConvenio 	= objAgendamento.getEditor("codPlanoSaudeConvenio").option("value"); 
					var pCodPlanoSaude 					= objAgendamento.getEditor("codPlanoSaude").option("value"); 
					var pPlanoSaudeCarteirinha 	= objAgendamento.getEditor("planoSaudeCarteirinha").option("value"); 
					var pVencimentoCarteirinha 	= objAgendamento.getEditor("dataVencimentoCarteirinha").option("value"); 
					var pEmpresaContratante	= objAgendamento.getEditor("planoSaudeEmpContratante").option("value"); 
					var pSolicitante				= objAgendamento.getEditor("agendSolicitante").option("value"); 
					var pObservacao					= objAgendamento.getEditor("agendObservacao").option("value"); 
					if (pSolicitante) pSolicitante = pSolicitante.join(",");
					$.get(urlPreparacao, {method: "ChecaPlanoSaude", pCodAgendamento: codAgendamento,
					pCodPlanoSaude: pCodPlanoSaude, pArrayProcedimentoArm: pArrayProcedimentoArm}, 
					function(strStatus){
						if (strStatus == 1) {
							$.getJSON(urlPreparacao, {method: "ArmazenarAgendamento", pCodAgendamento: codAgendamento,
							pCodPlanoSaudeConvenio: pCodPlanoSaudeConvenio, pCodPlanoSaude: pCodPlanoSaude, 
							pPlanoSaudeCarteirinha: pPlanoSaudeCarteirinha, pVencimentoCarteirinha: pVencimentoCarteirinha,
							pEmpresaContratante: pEmpresaContratante, pArrayProcedimentoArm: pArrayProcedimentoArm, 
							pSolicitante: pSolicitante, pObservacao: pObservacao, pEmailPaciente: pEmailPaciente, 
							pEnviarDocumento: pEnviarDocumento, pMotivoEdicao: motivoEdicao},
		      		function(objRetorno){ 
								if (objRetorno.status == 1) {
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
									codAgendamentoImp = codAgendamento;
									$("#divDetalhe").dxPopup("show");
									dataSourceDetalhe.reload();
									setTimeout(function(){
						      	limparAgendamento()
						      }, 500);							
								}else{
									DevExpress.ui.notify(objRetorno.status,"warning");		
								}
		    			});
						}else{
							DevExpress.ui.notify(strStatus,"warning");		
						}
					});
			  }
			}).dxButton("instance");

			objAgendCancelar = $("#divAgendCancelar").dxButton({
			  icon	: "far fa-times-circle",
			  text	: "Cancelar",
			  type	: "danger",
			  stylingMode : "contained",
			  onClick	: function(){
				var result = DevExpress.ui.dialog.confirm("<i>Confirma o cancelamento?", "Confirmação?");
		    	result.done(function(dialogResult) {
	        	if (!dialogResult){
							return;
						}
						$.getJSON(urlPreparacao,{method: "CancelarAgendamento", pCodAgendamento: codAgendamento},
						function(objRetorno){
							if (objRetorno.status == 1) {
								DevExpress.ui.notify("Agendamento cancelado com sucesso!","success");
								limparAgendamento()
							}else{
								DevExpress.ui.notify(objRetorno.mensagem,"warning");		
							}
						})
		    	});
			  }
			}).dxButton("instance");

			objPacienteLimpar = $("#divAgendLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  limparAgendamento();
			  }
			}).dxButton("instance");

			dataSourceProcedimentosBusca = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						if (codAgendamento == "") return []
	        	return $.getJSON(urlPreparacao, {method: "GetProcedimentoBuscar", pCodAgendamento: codAgendamento},
	        	function(objRetorno){ qtdeProcedSelec = objRetorno.length; });
					},
					update: function (key, values) {
						var qtdeAgenda = "";
						var codProcedimento = key.procedimento;
						for (var coluna in values) {
							if (coluna == "qtdeAgenda") {
								qtdeAgenda = values[coluna]
							}
						}
						#server(VAR.CSP.VARCadAgendamento.QtdeProcedimentoBuscar(codAgendamento, codProcedimento, qtdeAgenda))#;
		    	},
					remove : function(args){
						#server(VAR.CSP.VARCadAgendamento.RemoverProcedimentoBuscar(codAgendamento, args.procedimento))#;
					},
				})
			});
			
			function limparAgendamento(){
				#server(VAR.CSP.VARCadAgendamento.LimparTemporaria(codAgendamento))#;
				codAgendamento = "";
				codUltimoMedicoSol = "";
				objCodigoPaciente.option("value","");
				objSelPaciente.option("disabled", false);
				objAgendamento.option("disabled", true);
				objSelPaciente.resetValues();
				objAgendamento.resetValues();
				$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 0)
				selectRangeSemana = [];
				isSelectStopSemana;
				$("#divAgendProcSemana").dxDataGrid("instance").element().find(".cell-selected").removeClass("cell-selected");
				codAgendamento		= "";
				qtdeProcedSelec		= 0;
				qtdeHorarioAgend	= 0;
				selCodProcedimento= "";
				selCodProfissional= "";
				valReservaMin 		= padValReservaMin;
				valReservaSeg 		= 0;
    		if (timeOut != "") {clearTimeout(timeOut);}
				timeOut = "";
    		$("#tdHorariosValidade").html("");					
			  dataSourceProcedimentosBusca.reload();
			  dataSourceListarHorarios.reload();
				objCodigoPaciente.focus();
				listarAgendamentoAdmissoes();
				flagEdicaoAgend		= 0;
				motivoEdicao			= "";
			}
		
			///////Procedimento
			$("#divAgendProcProcedimento").dxDataGrid({
				dataSource: dataSourceProcedimentosBusca,
				columns: [
					{	dataField: "procedimento", allowEditing: 0, alignment: "center", cellTemplate: function (container, options) { 
						if (options.data.grupoAgendamento == "" || options.data.grupoAgendamento == null ) {
							conteudo = "<div class='custom-item'><b>" + options.data.procedimentoDesc +" </b>" +
								 					"<span style='color:red;'>&nbsp; (Não requer agendamento)</span></div>";
						}else{
							conteudo = "<div class='custom-item'><b>" + options.data.grupoAgendamentoDesc +" </b><br>&nbsp; &nbsp;" +
							    				options.data.procedimentoDesc + "</div>";
						}
						container.append(
							$("<div style='text-align: left;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "qtdeAgenda", caption: "Qtde.", alignment: "center", width: "60px", dataType: "number",
						editorOptions: {
							min: 1,
							max: 10
						}
					},
					{	dataField: "umAgendamento", allowEditing: 0, caption: "Agenda Única", alignment: "center", width: "60px", 
						cellTemplate: function (container, options) { 
							if (options.data.qtdeAgenda > 1) {
								conteudo =  "<div id='divUmAgendamento"+options.data.procedimento+"'></div>"
								container.append($("<div/>").html(conteudo).appendTo(container));
								$("#divUmAgendamento"+options.data.procedimento).dxCheckBox({
									text: "",
									onValueChanged: function(e) {
										var flagSel = e.value;
										if (!flagSel) flagSel = "";
										else flagSel = 1;
										#server(VAR.CSP.VARCadAgendamento.AgendaUnica(codAgendamento, options.data.procedimento, flagSel))#
									}
								});
							}
						}
					},
					{	caption: "Preferência de Executores", alignment: "center", width: "40%", columns: [
						{	dataField: "profissional", allowEditing: 0, caption: "Profissional", alignment: "center", 
							cellTemplate: function (container, options) { 
								if (options.data.flagEscolher != 0) {
									conteudo = "<div class='custom-item' style='width:100%'><div class='row'><div class='col-md-10'>"; 
									for (var count = 0 ; count <  options.data.profissional.length ; count ++ ) {
										conteudo += "<span style='background-color:#bfdfff;height:19px;text-align:center;border-radius: 4px;'>&nbsp;"	
										+ options.data.profissional[count].nomeProfissional + "&nbsp;</span>&nbsp;"
									}
									conteudo += "</div><div class='col-md-2'>"  
									+ "<div style='background-color:#337AB7;width:26px;height:19px;text-align:center;border-radius: 4px;'>"
									+ "<span><i class='fas fa-sync-alt' title='Alterar profissional' style='color:#ffffff;cursor:pointer;' " 
									+ "onClick=selecionarProfissionalPref('"+options.data.procedimento+"');/>" 
									+"</span></div></div></div></div>";
									container.append(
										$("<div style='text-align: center;width:100%' />")
											.html(conteudo)
											.appendTo(container)
									);
								}
							}
						},
						{	dataField: "sexo", allowEditing: 0, caption: "Sexo", alignment: "center", width: "170px", 
							cellTemplate: function (container, options) { 
								if (options.data.flagEscolher != 0) {
									conteudo =  "<div id='divSelSexoProcM"+options.data.procedimento+"'></div>&nbsp; &nbsp;" +
															"<div id='divSelSexoProcF"+options.data.procedimento+"'></div>"
									container.append($("<div/>").html(conteudo).appendTo(container));
									$("#divSelSexoProcM"+options.data.procedimento).dxCheckBox({
										text: "Masculino",
										onValueChanged: function(e) {
											var flagSel = e.value;
											#server(VAR.CSP.VARCadAgendamento.ArmPreferenciaSexo(codAgendamento, options.data.procedimento, "SEXO", "M", flagSel))#
										}
									});
									$("#divSelSexoProcF"+options.data.procedimento).dxCheckBox({
										text: "Feminino",
										onValueChanged: function(e) {
											var flagSel = e.value;
											#server(VAR.CSP.VARCadAgendamento.ArmPreferenciaSexo(codAgendamento, options.data.procedimento, "SEXO", "F", flagSel))#
										}
									});
								}
							}
						},
					]}
				],
    		columnChooser: { enabled: false, mode: "dragAndDrop"},
    		editing: { mode: "cell", allowAdding: false, allowUpdating: true, allowDeleting: true, useIcons: true },
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: false },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: false }, 
				height: 150	
			});
			
			$("#divAgendProcSemana").dxDataGrid({
				dataSource: [{"domingo": "D", "segunda": "S", "terca": "T", "quarta": "Q", 
											"quinta": "Q", "sexta": "S", "sabado": "S"}],
				columns: [
					{	dataField: "domingo", alignment: "center"},
					{	dataField: "segunda", alignment: "center"},
					{	dataField: "terca", alignment: "center"},
					{	dataField: "quarta", alignment: "center"},
					{	dataField: "quinta", alignment: "center"},
					{	dataField: "sexta", alignment: "center"},
					{	dataField: "sabado", alignment: "center"},
				],
				scrolling: { showScrollbar: "never" },
		    onCellClick: function(e) {
			    var array = [];
			    var flagInc = 1;
			    for (count = 0; count < selectRangeSemana.length ; count ++ ){
				    if (selectRangeSemana[count] == e.columnIndex) {
					    var flagInc = 0;
			        continue
				    }
				    array.push(selectRangeSemana[count]);
			    }
			    selectRangeSemana = array;
					if (flagInc) {
						selectRangeSemana.push(e.columnIndex); 
					}
		      showSelectionSemana(e.component, selectRangeSemana);
		    },
    		columnChooser: { enabled: false, mode: "dragAndDrop"},
				allowColumnReordering: false,
				showColumnHeaders:false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: false },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: 28,
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: false,
				searchPanel: { visible: false }, 
			}).dxDataGrid("instance");
			
			function showSelectionSemana(component, selectRangeSemana) {
				component.element().find(".cell-selected").removeClass("cell-selected");
		    for (count = 0; count < selectRangeSemana.length ; count ++ ){
			    var xSelecao = new Number(selectRangeSemana[count]);
			    if (isNaN(xSelecao)) continue
			    component.getCellElement(0, xSelecao).addClass("cell-selected");
		    };
			}
			
			$("#divAgendProcAcao").html("<table width='100%'>" +
																	"<tr>" +
																		"<td align='right' style='vertical-align:bottom;'>" + 
																			"<div id='divAgendProcBuscar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>")
			
			$("#divAgendProcBuscar").dxButton({
				text	: "Buscar Horário",
				type	: "default",
				stylingMode : "contained",
				onClick	: function(){
					buscarHorarios();
				}
			});
			
			///////Horários

			function buscarHorarios(){
				var pUnidade 					= objAgendamento.getEditor("agendProcLocal").option("value"); 
				var pDataInicial			= objAgendamento.getEditor("agendProcDataInicial").option("value");
				var pDataFinal				= objAgendamento.getEditor("agendProcDataFinal").option("value");
				var pHoraInicial			= objAgendamento.getEditor("agendProcHoraInicial").option("value");
				var pHoraFinal				=	objAgendamento.getEditor("agendProcHoraFinal").option("value");
				var pAgendarSeparado 	= objAgendamento.getEditor("agendProcAgendarSeparado").option("value");
				var pRetroativo 			= objAgendamento.getEditor("agendProcRetroativo").option("value");
				var pSolicitante			= objAgendamento.getEditor("agendSolicitante").option("value"); 
				if (pSolicitante) pSolicitante = pSolicitante.join(",");
				if (pAgendarSeparado) pAgendarSeparado = 1;
				else  pAgendarSeparado = 0; 
				if (pRetroativo) pRetroativo = 1;
				else  pRetroativo = 0; 
				if (pUnidade) pUnidade = pUnidade.join(",");
				var pSelectRangeSemana = "";
				if (selectRangeSemana.length > 0) {
					var pSelectRangeSemana = selectRangeSemana.join(",");
				}
				if (qtdeProcedSelec <= 0) {
					DevExpress.ui.notify("Favor informar o procedimento.","warning");	
					return;	
				}
				//console.log("Buscar Horário"+codUltimoMedicoSol)
				if (qtdeHorarioAgend > 0) {
					var result = DevExpress.ui.dialog.confirm("<i>Os horários já reservados serão liberados. Confirma  busca de novos horários?", "Confirmação?");
		    	result.done(function(dialogResult) {
	        	if (!dialogResult){
							return;
						}
		    	});
					objLoad.show();
					$.get(urlPreparacao,{method: "GetHorarios", pCodAgendamento: codAgendamento, pUnidade: pUnidade, 
					pDataInicial: pDataInicial, pDataFinal: pDataFinal, pHoraInicial: pHoraInicial, pHoraFinal: pHoraFinal,
					pSelectRangeSemana: pSelectRangeSemana, pAgendarSeparado: pAgendarSeparado, pSolicitante: pSolicitante,
					pRetroativo: pRetroativo, pCcodUltimoMedicoSol: codUltimoMedicoSol},
        	function(objRetorno){
	        	//console.log(objRetorno)
	        	dataSourceListarHorarios.reload();
						objLoad.hide();
					});
				}else{
					objLoad.show();
					$.get(urlPreparacao,{method: "GetHorarios", pCodAgendamento: codAgendamento, pUnidade: pUnidade, 
					pDataInicial: pDataInicial, pDataFinal: pDataFinal, pHoraInicial: pHoraInicial, pHoraFinal: pHoraFinal,
					pSelectRangeSemana: pSelectRangeSemana, pAgendarSeparado: pAgendarSeparado, pSolicitante: pSolicitante,
					pRetroativo: pRetroativo, pCcodUltimoMedicoSol: codUltimoMedicoSol},
        	function(objRetorno){
	        	//console.log(objRetorno)
	        	dataSourceListarHorarios.reload();
						objLoad.hide();
					});
				}
			}

			
			dataSourceListarHorarios = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						dSSolicitante = [];
						if (codAgendamento == "") return []
						var pCodConvenio = objAgendamento.getEditor("codPlanoSaudeConvenio").option("value"); 
	        	if (pCodConvenio == null) pCodConvenio = "";
						var pCodPlanoSaude = objAgendamento.getEditor("codPlanoSaude").option("value"); 
	        	if (pCodPlanoSaude == null) pCodPlanoSaude = "";
	        	return $.getJSON(urlPreparacao, {method: "GetListarHorarios", pCodAgendamento: codAgendamento,pCodPlanoSaude: pCodPlanoSaude,pCodConvenio:pCodConvenio},
	        	function(objRetorno){ 
	        		//console.log(objRetorno)
	        		if (objRetorno.length > 0) {
								if (timeOut != "") {
									clearTimeout(timeOut);	
								} 
								valReservaMin = padValReservaMin;
								valReservaSeg = 0;
								horariosValidade();
		        		flagPreRequsito = 1;
		        		for (count = 0 ; count < objRetorno.length ; count++)  {
			        		if (objRetorno[count].flagPreReq != 0) {
				        		flagPreRequsito = 0;
				        		break;
		        			}
		        		}
		        		objPacientePreRequisito.option({disabled: flagPreRequsito});
	        		}else{
		        		if (timeOut != "") {clearTimeout(timeOut);}
		        		$("#tdHorariosValidade").html("");
		        		objPacientePreRequisito.option({disabled: 1});
	        		}
	        	});
					},
				})
			});
		
			$("#divAgendHorariosValidade").html("<table border=0 width='100%'>" +
											"<tr>" +
												"<td width='100%' id='tdHorariosValidade' style='text-align:right;padding-right: 40px;'>&nbsp;</td>" + 
											"</tr>" +
										"</table>");

			$("#divAgendHorarios").dxDataGrid({
				dataSource: dataSourceListarHorarios,
				columns: [
					{	dataField: "grupo", caption: "Grupo", alignment: "center", width: "50px", groupIndex: 0},
					{	dataField: "confirmar", caption: " ", alignment: "center", width: "50px",
					cellTemplate: function (container, options) { 
						if (options.data.dataAtendimento == "" && options.data.procedAgendado == 1) {
							container.append(
								$("<div class='confAgendamento' procedimento='"+options.data.procedimento+"'/>").dxCheckBox({
										value: 0,
										disabled: true,
									}).appendTo(container)
							);
						}else{
						container.append(
							$("<div class='confAgendamento' procedimento='"+options.data.procedimento+"'/>").dxCheckBox({
									value: 1
								}).appendTo(container)
						);
						}						
					}},{
						dataField: "codigoTISS", caption: "Cod. TISS", alignment: "center", width: "80px",
					},{	
						dataField: "procedimento", alignment: "center", cellTemplate: function (container, options) { 
						if (options.data.procedAgendado == 0) {
							conteudo = "<div class='custom-item'><b>" + options.data.procedimentoDesc +" </b>";
							if (options.data.trocarItem != "") {
								conteudo += "<br>&nbsp; &nbsp;"+"<span style='color:red;'>Procedimento será alterado para Retorno (Limite: "+options.data.dataFinAteTroc+")</span>";
							}
							conteudo += "</div>";
						}else{
							conteudo = "<div class='custom-item'><b>" + options.data.grupoAgendamentoDesc +" </b><br>&nbsp; &nbsp;" +
							    				options.data.procedimentoDesc + " - (" + options.data.descTempoAtendimento  + ")";
							if (options.data.trocarItem != "") {
								conteudo += "<br>&nbsp; &nbsp;"+"<span style='color:red;'>Procedimento será alterado para Retorno (Limite: "+options.data.dataFinAteTroc+")</span>";
							}
							conteudo += "</div>";
						}
						container.append(
							$("<div style='text-align: left;' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "local", caption: "Local do Atendimento", alignment: "center", width: "180px", cellTemplate: function (container, options) { 
						conteudo = "<div class='custom-item' style='width:100%'>" + options.data.unidadeDesc +" - " + options.data.salaDesc + "</div>";
						container.append(
							$("<div style='text-align: center;width:97%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "horario", caption: "Horário", alignment: "center", width: "120px", cellTemplate: function (container, options) { 
						conteudo = "<div class='custom-item' style='width:100%'>" + options.data.horario; 
						if (options.data.ausencia == 1) {
							conteudo += "<br> <span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
																"display: inline-block;vertical-align: middle;'>&nbsp; Cancelado &nbsp;</span>";
						}
						if (options.data.encaixe != 0) {
							conteudo += "<br> <span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
																"display: inline-block;vertical-align: middle;'>&nbsp; Encaixe &nbsp;</span>";
						}
						conteudo += "</div>";
						container.append(
							$("<div style='text-align: center;width:100%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "executor", alignment: "center", width: "200px", cellTemplate: function (container, options) { 
						conteudo = "<div class='custom-item' style='width:100%'><div class='row'><div class='col-md-9'>"
						if (options.data.profissionalNome != "") {
							codProcedimento = options.data.procedimento;
							codProfissional = options.data.profissional;
							icone = "far fa-star";
							if (options.data.favorito == 1) {
								icone = "fas fa-star";
							}
							conteudo += "<span><i class='"+icone+"' title='Favorito' style='color:#FFBF00;cursor:pointer;' " +
													"codProcedimento='"+codProcedimento+"' codProfissional='"+codProfissional+"' " +
													"onClick='selecionarFavorito(this);' />" +
													"</span> &nbsp;";
						}
						conteudo += options.data.profissionalNome +"<br>CRM/"+options.data.profissionalCRMEsta+": " + options.data.profissionalCRM + "</div><div class='col-md-3'>"  
						+ "<div style='background-color:#337AB7;width:26px;height:19px;text-align:center;border-radius: 4px;'>";
						if (options.data.flagProcedimento == 0) {
							conteudo += "<span><i class='fas fa-sync-alt' title='Alterar Profissional / Horário' style='color:#ffffff;"; 
						}else{
							conteudo += "<span><i class='fas fa-sync-alt' title='Alterar Horário' style='color:#ffffff;"; 
						}
						conteudo += "cursor:pointer;' onClick=selecionarEscolherProfHorario('"+options.data.procedimento+"','"+options.data.profissional+"')/>"; 
						+ "</span></div></div></div></div>";
						if (options.data.procedAgendado == 0) {
							conteudo = "-";
						}
						container.append(
							$("<div style='text-align: center;width:100%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "solicitante", caption: "Solicitante", alignment: "center", width: "200px", cellTemplate: function (container, options) { 
						if (dSSolicitante.length == 0) {
							var xDSSolicitante = objAgendamento.getEditor("agendSolicitante").option("value");
							for ( var count = 0 ; count < xDSSolicitante.length; count++) {
								descProvider = #server(VAR.CSP.VARCadAgendamento.GetMEDProviderForm(xDSSolicitante[count]))#;
								listSolicitante = {CodProvider: xDSSolicitante[count], DescProvider: descProvider}		
								dSSolicitante.push(listSolicitante);
							}
						}
						if (options.data.dataAtendimento == "" && options.data.procedAgendado == 1) {
							container.append(
								$("<div class='selSolicitante' procedimento='"+options.data.procedimento+"'/>").dxSelectBox({
									dataSource: dSSolicitante,
									valueExpr: "CodProvider", 
									displayExpr: "DescProvider", 
									searchEnabled: true,
									onValueChanged: function(e) {
										$.get(urlPreparacao,{method: "ArmSolicitanteProc", pCodAgendamento: codAgendamento,
										pProcedimento: options.data.procedimento, pSolicitante: e.value});
									},
									value: options.data.solicitante
								}).appendTo(container)
							);
						}else{
							$("<div class='selSolicitante' procedimento='"+options.data.procedimento+"'/>").dxSelectBox({
								dataSource: dSSolicitante,
								valueExpr: "CodProvider", 
								displayExpr: "DescProvider", 
								searchEnabled: true,
								onValueChanged: function(e) {
									$.get(urlPreparacao,{method: "ArmSolicitanteProc", pCodAgendamento: codAgendamento,
									pProcedimento: options.data.procedimento, pSolicitante: e.value});
								},
								value: options.data.solicitante
							}).appendTo(container)
						}						
					}},
					{	dataField: "preRequisito", caption: " ", alignment: "center", width: "30px", cellTemplate: function (container, options) { 
						if (options.data.flagPreReq == 0) {
							conteudo = "&nbsp;"
						}else{
							conteudo = "<i class='far fa-clipboard-list' title='Pré Requisito' " +
												 "style='color:#337AB7;cursor:pointer;font-size:14px;' " +
												 "onClick=consultarPreRequisito('"+options.data.procedimento+"');/></span>";
						}
						container.append(
							$("<div style='text-align: center;width:100%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "convenio", caption: " ", alignment: "center", width: "30px", cellTemplate: function (container, options) { 
						if (options.data.problemaConvenio == "") {
							conteudo = "<i class='far fa-hospital' title='Plano de Saúde' " +
												 "style='color:#337AB7;cursor:pointer;font-size:14px;' " +
												 "onClick=planoSaude('"+options.data.procedimento+"');/></span>";
						}else{
							conteudo = "<i class='fa-blink fas fa-exclamation-triangle' title='"+options.data.problemaConvenio+"' " +
												 "style='color:red;cursor:pointer;font-size:14px;' " +
												 "onClick=planoSaude('"+options.data.procedimento+"');/></span>";
						}
						container.append(
							$("<div style='text-align: center;width:100%' />")
								.html(conteudo)
								.appendTo(container)
						);
					}},
					{	dataField: "espaco", caption: " ", alignment: "center", width: "15px"}
						
				],
				/*onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "solicitanteNome") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								loadMode: "raw",   
								load: function(){
									return []
								}
							})
						});
						e.editorOptions.value = e.row.data.solicitante;
						e.editorOptions.displayExpr 		= "DescProduto";
						e.editorOptions.valueExpr 			= "CodProduto";
						e.editorOptions.searchEnabled 	= true;
						e.editorOptions.onValueChanged 	= function(arg) {
							e.setValue(arg.value);
						}
					}
				},*/
    		columnChooser: { enabled: false, mode: "dragAndDrop"},
				allowColumnReordering: false,
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: false,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: false },
				height: 150,
			});
			
			function planoSaude(pProcedimento){
				//console.log(pProcedimento)
				$.getJSON(urlPreparacao,{method: "GetPlanoSaude", pCodAgendamento: codAgendamento, 
				pProcedimento: pProcedimento}, function(objRetorno){
					dataSourcePS 	= objRetorno.arrayDS
					codProcPS			= pProcedimento;
					codConvenioPS	= "";
					$("#divPlanoSaude").dxPopup("show");
					$("#formPlanoSaude").dxForm("instance").getEditor("procedimento").option("value",objRetorno.descProcedimento);
					dataSourcePSCad.reload();
				});
			}
			
			function consultarPreRequisito(pProcedimento) {
				codProcPreRequis = pProcedimento;
				dataSourcePreRequisito.reload();
				$("#divPreRequisito").dxPopup("show");
			}
			
			function selecionarFavorito(pObjeto) {
				if ($(pObjeto).attr("class") == "far fa-star") {
					add = 1;
					$(pObjeto).attr("class","fas fa-star")
				}else{
					add = 0;
					$(pObjeto).attr("class","far fa-star")
				}
				#server(VAR.CSP.VARCadAgendamento.ArmFavorito(codAgendamento, $(pObjeto).attr("codProcedimento"), $(pObjeto).attr("codProfissional"), add))#
			}
			
			function gerarAgendamento() {
				$.getJSON(urlPreparacao,{method: "GerarAgendamento", pCodPaciente: objCodigoPaciente.option("value")}, 
				function(objRetorno){
					if (objRetorno.status != 1) {
						codAgendamento = "";
						codUltimoMedicoSol = "";
						qtdeHorarioAgend
						DevExpress.ui.notify("Erro na geração do agendamento: "+objRetorno.status,"error");
					}else{
						codAgendamento = objRetorno.codAgendamento;
						objSelPaciente.option("disabled", true);
						objAgendamento.option("disabled", false);
						$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 1)
						setTimeout(function(){
							objAgendamento.getEditor("codPlanoSaudeConvenio").option("value", objRetorno.codConvenio); 
							objAgendamento.getEditor("codPlanoSaude").option("value", objRetorno.codPlanoSaude); 
							objAgendamento.getEditor("planoSaudeCarteirinha").option("value", objRetorno.carteirinha); 
							objAgendamento.getEditor("dataVencimentoCarteirinha").option("value", objRetorno.dtVencCart); 
							objAgendamento.getEditor("agendProcDataInicial").option("value", dtPadInicialAgen);
							objAgendamento.getEditor("agendProcDataInicial").option("min", dtPadInicialAgen);
							objAgendamento.getEditor("agendProcDataFinal").option("value", dtPadFinalAgen);
							objAgendamento.getEditor("agendProcDataFinal").option("min", dtPadInicialAgen);
							objAgendamento.getEditor("agendProcHoraInicial").option("value", hrPadInicalAgen);
							objAgendamento.getEditor("agendProcHoraFinal").option("value", hrPadFinalAgen);
			      }, 500);
						objAgendamento.getEditor("agendProcDataInicial").option("value", dtPadInicialAgen);
						objAgendamento.getEditor("agendProcDataInicial").option("min", dtPadInicialAgen);
						objAgendamento.getEditor("agendProcDataFinal").option("value", dtPadFinalAgen);
						objAgendamento.getEditor("agendProcDataFinal").option("min", dtPadInicialAgen);
						objAgendamento.getEditor("agendProcHoraInicial").option("value", hrPadInicalAgen);
						objAgendamento.getEditor("agendProcHoraFinal").option("value", hrPadFinalAgen);
					}
				});
			}		
			
			function selecionarProfissionalPref(pCodProcedimento){
				selCodProcedimento = pCodProcedimento;
				$("#divPreferenciaProfissional").dxPopup("show");
				dataSourcePreferenciaProfissional.reload();
			}
			
			dataSourcePreferenciaProfissional = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	pCodUnidade = objAgendamento.getEditor("agendProcLocal").option("value");
	        	if (pCodUnidade) pCodUnidade = pCodUnidade.join(",");
	        	return $.getJSON(urlPreparacao, {method: "GetPreferenciaProfissional", 
	        	pCodAgendamento: codAgendamento, pCodProcedimento: selCodProcedimento,
	        	pCodUnidade: pCodUnidade});
					},
				})
			});
			
			$("#divPreferenciaProfissional").dxPopup({
				visible: false,
				title: "Preferência por Profissional",
				width: 600,
				height:  500,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				onHiding: function(e) {
					dataSourceProcedimentosBusca.reload();
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objPreferenciaProfissional = $("<div id='divGridPreferenciaProfissional'>").dxDataGrid({
						dataSource: dataSourcePreferenciaProfissional,
						columns: [
							{	dataField: "selecionar", caption: " ", alignment: "center", width: "50px",
							cellTemplate: function (container, options) { 
								container.append(
									$("<div class='confAgendamento'/>").dxCheckBox({
											value: options.data.selecionado,
											onValueChanged: function(e) {
												var flagSel = e.value;
												#server(VAR.CSP.VARCadAgendamento.ArmPreferenciaSexo(codAgendamento, selCodProcedimento, "PROF", options.data.codProfissional, flagSel))#
											}
										}).appendTo(container)
								);
								
							}},
							{	dataField: "nomeProfissional", caption: "Profissional", alignment: "center", sortIndex: 0, sortOrder: "asc"},
							{	dataField: "sexo", caption: "Sexo", alignment: "center", width: 100},
							{	dataField: "primAtendimento", caption: "1ª Atendimento", alignment: "center", width: 100},
						],
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						allowColumnReordering: false,
						columnAutoWidth: false,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						hoverStateEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: true },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 450,
					});
					e.append(objPreferenciaProfissional);
				}
			});
			
			function selecionarEscolherProfHorario(pCodProcedimento, pCodProfissional){
				selCodProcedimento = pCodProcedimento;
				selCodProfissional = pCodProfissional;
				if (selCodProfissional.indexOf("||") == -1) {
					$("#divEscolherProfHorario").dxPopup("instance").option("title","Escolha de Horário/Profissional");
				}else{
					$("#divEscolherProfHorario").dxPopup("instance").option("title","Escolha de Horário");
				}
				$("#divEscolherProfHorario").dxPopup("show");
				$("#divFormEscolherProfHorario").dxForm("instance").getEditor("escolherProfHorarioForcado").option("value",0);
				if (selCodProfissional.indexOf("||") != -1) {
					$("#divFormEscolherProfHorario").dxForm("instance").getEditor("escolherProfHorarioForcado").option("disabled",true);
				}else{
					$("#divFormEscolherProfHorario").dxForm("instance").getEditor("escolherProfHorarioForcado").option("disabled",false);
				}
				dataSourceEscolherProfissional.reload();
			}

			dataSourceEscolherProfissional = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "GetPreferenciaProfissional", 
	        	pCodAgendamento: codAgendamento, pCodProcedimento: selCodProcedimento, 
	        	pCodProfissional: selCodProfissional}, function(objRetorno) {
		        	if (objRetorno.length > 0) {
			        	setTimeout(function(){
				       	 $("#divGridEscolherProf").dxDataGrid("instance").selectRowsByIndexes(1)
				       	 $("#divGridEscolherProf").dxDataGrid("instance").selectRowsByIndexes(0)
				        }, 500);
		        	}
	        	});
					},
				})
			});

			function colunaData(container, options) {
				var coluna 		= options.column.caption;
				var hora			=  options.data[coluna];	
				var reservado	=  options.data[coluna+"reservado"];	
				if (reservado == 1) {
					container.html(hora).css("background-color", "#ddedff");
				}else if (reservado == 2) {
					container.html(hora).css("background-color", "#ffcaca");
				}else{
					container.html(hora);
				}
				
			}

			function listarEscolherHorario() {
				if ($("#divGridEscolherHorarioLista")) $("#divGridEscolherHorarioLista").remove();
				$("#divGridEscolherHorario").html("<div id='divGridEscolherHorarioLista' style='width: 570px'></div>");

				xRetroativo = objAgendamento.getEditor("agendProcRetroativo").option("value");
				if (xRetroativo) xRetroativo = 1;
				else  xRetroativo = 0; 

				pForcarEncaixe  = $("#divFormEscolherProfHorario").dxForm("instance").getEditor("escolherProfHorarioForcado").option("value");
				//if (pForcarEncaixe) pForcarEncaixe = 1;
  				//else  pForcarEncaixe = 0; 

				var pSelectRangeSemana = "";
				if (selectRangeSemana.length > 0) {
					var pSelectRangeSemana = selectRangeSemana.join(",");
				}

				pMethod = "GetHorarioProfissional";
				if (selCodProfissional.indexOf("||") != -1) pMethod = "GetHorarioSalaLeito";

				//console.log(pForcarEncaixe)
				/*$.get(urlPreparacao, {method: pMethod, pCodAgendamento: codAgendamento, 
				pCodProcedimento: selCodProcedimento, pCodProfissional: selCodProfissional, 
				pForcarEncaixe: pForcarEncaixe, pSelectRangeSemana: pSelectRangeSemana, pRetroativo: xRetroativo}, 
				function(objRetorno){
					//console.log(objRetorno)
				});*/ 
				
				$.getJSON(urlPreparacao, {method: pMethod, pCodAgendamento: codAgendamento, 
				pCodProcedimento: selCodProcedimento, pCodProfissional: selCodProfissional, 
				pForcarEncaixe: pForcarEncaixe, pSelectRangeSemana: pSelectRangeSemana, pRetroativo: xRetroativo}, 
				function(objRetorno){
					qtdeSelProc = new Number(0);
					arraySelProc = [];
					qtdeSelProcDe	= new Number(objRetorno.qtdeAgendaDe);

					objColuna = new Array;					
					for (var count = 0 ; count < objRetorno.colunas.length; count++){
						objColunaD = objRetorno.colunas[count];
						objColunaD.cellTemplate = colunaData;
						objColuna.push(objColunaD);
					}
					$("#divGridEscolherHorarioLista").dxDataGrid({
						dataSource: objRetorno.dados,
						columns: objColuna, //objRetorno.colunas,
						customizeColumns: function (columns) {
							$.each(columns, function (index, element) {
								element.headerCellTemplate = function (header, info) {
									$('<div>').html("<span style='font-size:14px;'>" + 
									info.column.caption+"<br>"+info.column.unidade+"</span>")
									.css('font-size', '16px').appendTo(header);
								};
							});
						},
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 450,
						onCellClick: function(e){
							if (e.cellElement.css("background-color") == "rgb(255, 255, 185)") {
								return;	
							}
							if (e.rowType == "data") {
								pEncaixe = $("#divFormEscolherProfHorario").dxForm("instance").getEditor("escolherProfHorarioForcado").option("value");
								var coluna 		= e.column.caption;
								var reservado	= e.data[coluna+"reservado"];	
								
								console.log(coluna, e) 
								
								if (reservado == 0) pEncaixe = 0;
								if (pEncaixe == 0 && reservado != 0) {
									return;	
								}
								if (pEncaixe != 0 && reservado == 2) {
									return;	
								}
								console.log(pEncaixe)
								qtdeSelProc = qtdeSelProc + 1
								$("#spAgendaQtde").html(qtdeSelProc);
								e.cellElement.css("background-color", "#FFFFB9");
								arraySelProc.push(e.column.caption+"~"+e.value+"~"+e.column.tempoAtendimento+"~"+pEncaixe);
								if (qtdeSelProc < qtdeSelProcDe) return
								if (qtdeSelProcDe > 1) {
									var result = DevExpress.ui.dialog.confirm("<i>Confirma o agendamento para os horários selecionados?", "Confirmação?");
								}else{
									var result = DevExpress.ui.dialog.confirm("<i>Confirma o agendamento para "+e.column.caption+" as "+e.value+", na unidade "+e.column.unidade+"?", "Confirmação?");
								}
					    	result.done(function(dialogResult) {
				        	if (dialogResult){ 
										$.getJSON(urlPreparacao, {method: "SelecionaDataHora", 
							      pCodAgendamento: codAgendamento, pCodProcedimento: selCodProcedimento,
		      					pCodProfissional: selCodProfissional, pDataAtendimento: e.column.caption, 
		      					pHoraAtendimento: e.value, pTempoAtendimento: e.column.tempoAtendimento,
		      					pEncaixe: pEncaixe, pQtdeSelProcDe: qtdeSelProcDe, pArrayDatas: arraySelProc.join(",")}, 
		      					function(objRetorno){
											if (objRetorno.status == 1) {
												$("#divEscolherProfHorario").dxPopup("hide");
												dataSourceListarHorarios.reload();
												if (flagEdicaoAgend == 1 && motivoEdicao == "") {
													$("#divMotivoRemarcacao").dxPopup("show");
													$("#formMotivoRemarcacao").dxForm("instance").getEditor("Motivo").option("value","");
												}
											}else{
												listarEscolherHorario();
												DevExpress.ui.notify(objRetorno.mensagem,"warning");	
											}
		      					})
									}else{
										listarEscolherHorario();
									}
					    	});
							}
						},
						onToolbarPreparing: function(e) {
			    		var dataGrid = e.component;
			        e.toolbarOptions.items.unshift({
								location: "before",
		            template	: function () {
									return	$("<div style='width:500px;text-align:left;'/>").append(
														$("<span><b>Legenda: &nbsp;</b></span>" + 
															"<span style='height: 20px; background-color: #ffffff;border: 1px solid #d0d0d0;border-radius: 2px;" + 
															"display: inline-block;vertical-align: middle;'>&nbsp; Horário Livre &nbsp;</span>" + 
															"<span>&nbsp; <span>" +
															"<span style='height: 20px; background-color: #ddedff;border-radius: 2px;" + 
															"display: inline-block;vertical-align: middle;'>&nbsp; Horário com Paciente &nbsp;</span>" + 
															"<span>&nbsp; <span>" +
															"<span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
															"display: inline-block;vertical-align: middle;'>&nbsp; Horário com Encaixe &nbsp;</span>"+
															"<span>&nbsp; <span>" +
															"<span style='height: 20px; background-color: #FFFFB9;border-radius: 2px; " +
															"display: inline-block;vertical-align: middle;'>&nbsp; Agenda: " +
															"<span id='spAgendaQtde'>"+qtdeSelProc+"</span>/<span id='spAgendaQtdeDe'>"+qtdeSelProcDe+"</span> &nbsp;</span>"
															  
														)
													);
		          	}
							})
			    	}
					});
		    });	
			}

			$("#divEscolherProfHorario").dxPopup({
				visible: false,
				title: "Escolha de Horário/Profissional",
				width: 1000,
				height:  500,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objFormEscolherProfHorario = $("<div id='divFormEscolherProfHorario'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						screenByWidth: function(width) { return "lg"; },
						labelLocation: "left",
						colCount: 5,
						items: [{
							colSpan: 2,
							itemType: "group",
							items: [{
								dataField: "escolherProfHorarioForcado", 
								label: { text:"Encaixe:", alignment: "right", visible: true},
								editorType: "dxRadioGroup",
								editorOptions: {
									dataSource: [{id: 0, text: "Não"},{id: 1, text: "Sim"},{id: 2, text: "Forçado"}],
									layout:"horizontal",
									valueExpr: "id", 
									displayExpr: "text",
									onValueChanged: function(e) {
										listarEscolherHorario();
									}
								}
							},{					
								template	: function (data, itemElement) {
									itemElement.append("<div id='divGridEscolherProf'>")
								}
							}]
						},{
							colSpan: 3,
							template	: function (data, itemElement) {
								itemElement.append("<div id='divGridEscolherHorario'>")
							}
						}]
					});
					e.append(objFormEscolherProfHorario);
					
					$("#divGridEscolherProf").dxDataGrid({
						dataSource: dataSourceEscolherProfissional,
						columns: [
							{	dataField: "nomeProfissional", caption: "Profissional/Sala - Leito", alignment: "center", sortIndex: 0, sortOrder: "asc"},
							{	dataField: "primAtendimento", caption: "1ª Atendimento", alignment: "center", width: 120},
						],
						selection: { mode: "single" },
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: false,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						hoverStateEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 420,
						onSelectionChanged: function (selectedItems) {
	            var data = selectedItems.selectedRowsData[0];
	            if (data) {
								selCodProfissional = data.codProfissional;
								listarEscolherHorario();
	            }
		        }
					});
				}
			});
			
			function horariosValidade() {
				valReservaSeg = valReservaSeg - 1;
				if (valReservaSeg < 0) {
					valReservaSeg = 59
					valReservaMin = valReservaMin - 1;
				}
				conteudo = "";
				if (valReservaMin < 0) {
					conteudo = "Horário(s) disponibilizado no sistema";	
					$("#tdHorariosValidade").html("<span'>"+conteudo+"</span>");
					return;
				}else{
					if (valReservaMin > 0) conteudo += valReservaMin+"m ";
					if (valReservaSeg > 0) conteudo += valReservaSeg+"s ";
				}
				$("#tdHorariosValidade").html("<b>Validade das reservas: </b>"+conteudo+
				" <span><i class='fas fa-stopwatch' title='Atualizar' style='color:green;cursor:pointer;' " 
				+ "onClick='atualizarReserva();'/></span>");
				timeOut = setTimeout(function(){ horariosValidade(); }, 1000);	
			}
			
			function atualizarReserva(){
				$.get(urlPreparacao, {method: "AtualizarReserva", pCodAgendamento: codAgendamento},function(objRetorno){
					if (timeOut != "") {
						clearTimeout(timeOut);	
					} 
					valReservaMin = padValReservaMin;
					valReservaSeg = 0;
					horariosValidade();
				});				
			}
			
			dataSourceDetalhe = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
						if (codAgendamento == "") return [];
	        	return $.getJSON(urlPreparacao, {method: "ListarDetalhe", pCodAgendamento: codAgendamento});
					},
				})
			});
			
			$("#divDetalhe").dxPopup({
				visible: false,
				title: "Detalhe do Agendamento",
				width: 450,
				height:  500,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				toolbarItems: [{
					widget: "dxButton",
					location:"center",
					toolbar:"bottom",
					options: { 
						width	: "100px",
						type	: "default",
						icon	: "print",
						text	: "Imprimir", 
						onClick : function(){
							window.open("VARCadAgendamentoImp.csp?pCodAgendamento="+codAgendamentoImp+"&YBED="+YBED,
							"Agendamento","toolbar=yes,scrollbars=yes,resizable=yes,top=10,left=10,width=800,height=500");
						}
					}
				},{
					widget: "dxButton",
					location:"center",
					toolbar:"bottom",
					options: { 
						width	: "100px",
						type	: "default",
						icon	: "close",
						text	: "Fechar", 
						onClick : function(){
							$("#divDetalhe").dxPopup("hide");
						}
					}
				}],
				dragEnabled: true,
				contentTemplate: function(e) {
					objDetalheAgendamento = $("<div id='divGridDetalheAgendamento'>").dxDataGrid({
						dataSource: dataSourceDetalhe,
						columns: [{	dataField: "detalhe"}],
						rowTemplate: function(container, item) {
							var data 	= item.data;
							if (data.procedimento == 0) {
								var markup = "<tbody class='employee dx-row " + ((item.rowIndex % 2) ? 'dx-row1' : 'dx-row2') + "'>" +
									"<tr>" +
										"<td align='left' style='border:1px solid #dddddd;'><b>Paciente: </b>" + data.nomePaciente + "</td>";
							}else{
								var markup = "<tbody class='employee dx-row " + ((item.rowIndex % 2) ? 'dx-row1' : 'dx-row2') + "'>" +
									"<tr>" +
										"<td align='left' style='border:1px solid #dddddd;'>" +
											"<b>Procedimento: </b>" + 
												data.descGrupoAgendamento + " - " + data.descProcedimento + "<br>" + 
											"<b>Data/Hora de Agendamento: </b>" + 
												data.dataAtend + " - " + data.horaAtend + "<br>" + 
											"<b>Profissional: </b>" + data.nomeProfissional + "<br>" + 
											"<table><tr><td style='vertical-align:top;'><b>Local:&nbsp;</b></td><td>" + data.descSala + "</td></tr></table>"; 
								if (data.preRequisitoResumo !=  "") {
									markup += "<b>Pré Requisito: </b>" + data.preRequisitoResumo + "<br>";			
								}
								markup += "</td>" ;
							}
							markup += 
								"</tr>" +
							"</tbody>";
							container.append(markup);
						},
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:false,
						allowColumnReordering: false,
						columnAutoWidth: false,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						hoverStateEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 400,
					});
					e.append(objDetalheAgendamento);
				}
			});

			function validarCPF(pCPF){
				var Soma;
				var Resto;
				Soma = 0;
			  if (pCPF == "00000000000") return false;
				for (i=1; i<=9; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (11 - i);
				Resto = (Soma * 10) % 11;
				if ((Resto == 10) || (Resto == 11))  Resto = 0;
				if (Resto != parseInt(pCPF.substring(9, 10)) ) return false;
	 	 		Soma = 0;
    		for (i = 1; i <= 10; i++) Soma = Soma + parseInt(pCPF.substring(i-1, i)) * (12 - i);
    		Resto = (Soma * 10) % 11;
		    if ((Resto == 10) || (Resto == 11))  Resto = 0;
		    if (Resto != parseInt(pCPF.substring(10, 11) ) ) return false;
		    return true;
			}

			function listarRemarcacao() {
				
				if ($("#divRemarcacaoLista")) $("#divRemarcacaoLista").remove();
				$("#divRemarcacao").html("<div id='divRemarcacaoLista'></div>");

				$("#divRemarcacaoLista").dxDataGrid({
					dataSource: new DevExpress.data.DataSource({
						store: new DevExpress.data.CustomStore({
							loadMode: "raw",   
							load: function(){
			        	return $.getJSON(urlPreparacao, {method: "GetRemarcacao"});
							},
						})
					}),
					columns: [
						{dataField: "nomePaciente", caption: "Nome do Paciente", alignment: "center", width: 200},
						{dataField: "dataNascimento", caption: "Nascimento", alignment: "center", width: 100},
						{dataField: "sexo", caption: "Sexo", alignment: "center", width: 70},
						{dataField: "descProcedimento", caption: "Procedimento", alignment: "center", width: 250},
						{dataField: "dataAtend", caption: "Data/Hora Atendimento", alignment: "center", width: 150},
						{dataField: "nomeProfissional", caption: "Profissional", alignment: "center", width: 200},
						{dataField: "motivoRemarcacao", caption: "Motivo da Remarcação", alignment: "center", width: 200},
						{dataField: "local", caption: "Local", alignment: "center"},
						{dataField: "acaoRegistrar", caption: "R", alignment: "center", width: 30},
						{dataField: "acaoEditar", caption: "E", alignment: "center", width: 30},
						{dataField: "acaoCancelar", caption: "C", alignment: "center", width: 30},
					],
					rowTemplate: function(container, item) {
						var data 		= item.data;
						var rowSpan = data.procedimentos.length;
						var markup = "<tbody class='employee dx-row " + ((item.rowIndex % 2) ? 'dx-row1' : 'dx-row2') + "'>" +
							"<tr>" ;
							markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" +
									"<span style='font-size:12px;'>"+data.nomePaciente+"</span>" +
									(data.fonePaciente== "" ? "" : "<br><span style='font-size:10px;'>"+data.fonePaciente+"</span>")+ 
								"</td>" +  
								"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.dataNascimento + "</td>" +  
								"<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" + data.sexo + "</td>";  
				    		for (count = 0; count < rowSpan ; count ++ ){
									if (count > 0) {
										markup += "</tr><tr>";
									}
									markup += "<td align='left' style='border:1px solid #dddddd;'><b>"; 
									if (data.procedimentos[count].procedAgendado == 1) {
										markup += data.procedimentos[count].descGrupoAgendamento + "</b><br>&nbsp; &nbsp;" + 
										data.procedimentos[count].descProcedimento;
									}else{
										markup += data.procedimentos[count].descProcedimento + "</b>";
									}	
									markup += "</td>" +
									"<td align='center' style='border:1px solid #dddddd;'>";
										if (data.procedimentos[count].procedAgendado == 1) {
											markup += data.procedimentos[count].dataAtend + " - " +
											data.procedimentos[count].horaAtend +
											(
												data.procedimentos[count].flagRemarcacao == 0 
												? "" 
												: "<br> <span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
													"display: inline-block;vertical-align: middle;'>&nbsp; Remarcação &nbsp;</span>"
											);
										}else{
											markup += "";
										}
									markup += "</td>" +
									"<td align='left' style='border:1px solid #dddddd;'>" +
										data.procedimentos[count].nomeProfissional +
									"</td>" +
									"<td align='center' style='border:1px solid #dddddd;'>";
										if (data.procedimentos[count].procedAgendado == 1) {
											markup += data.procedimentos[count].motivoRemarcacao;
										}
									markup += "</td>" + 
									"<td align='center' style='border:1px solid #dddddd;'>" +
										data.procedimentos[count].descSala +
									"</td>";
									if (count == 0) {
										markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" +
											"<span onClick=tentativaContato('"+data.numeroAgend+"');>" +
												"<i class='fas fa-comment-dots' title='Registrar Tentativa de Contato' style='color:#337AB7;cursor:pointer;' />" +
											"</span>" +
										"</td>";
									}
									if (count == 0) {
										if  (data.flagEdicao == 0) {
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'></td>";
										}else{
											markup += "<td rowSpan='"+rowSpan+"' align='center' style='border:1px solid #dddddd;'>" +
												"<span onClick=editarAgendamento('"+data.numeroAgend+"',1);>" +
													"<i class='fas fa-edit' title='Editar' style='color:#337AB7;cursor:pointer;' />" +
												"</span>" +
											"</td>";
										}
									}
									if  (data.procedimentos[count].flagCancelar == "0") {
										markup += "<td align='center' style='border:1px solid #dddddd;'></td>";
									}else{
										markup += "<td align='center' style='border:1px solid #dddddd;'>" +
											"<span onClick=cancelarAgendamento('"+data.numeroAgend+"','"+data.procedimentos[count].sequencia+"');>" +
												"<i class='far fa-times-circle' title='Cancelar' style='color:red;cursor:pointer;' />" +
											"</span>" +
										"</td>";
									}
				    		}
						markup += 
							"</tr>" +
						"</tbody>";
						container.append(markup);
					},
	    		columnChooser: { enabled: false, mode: "dragAndDrop"},
					showColumnHeaders:true,
					allowColumnReordering: false,
					columnAutoWidth: true,
					showColumnLines: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					showBorders: true,
					headerFilter: { visible: false },
					grouping: { autoExpandAll: false },
					groupPanel: { visible: false, allowColumnDragging: true },
					columnFixing: { enabled: false },
					filterRow: { visible: false },
					export: { enabled: false },
					stateStoring: { enabled: false }, 
					wordWrapEnabled: true,
					searchPanel: { visible: true },
					height: function() { return window.innerHeight - 95;},
				});
			}
			
			$("#divCadastrarMedico").dxPopup({
				visible: false,
				title: "Cadastrar Médico Solicitante",
				width: 650,
				height: 200,
				position: { my: "center", at: "center", of: window},
				dragEnabled: true,
				contentTemplate: function(e) {
					formCadastrarMedico = $("<div id='formCadastrarMedico'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "top",
						colCount: 4,
						items: [
							{dataField: "Nome", label: { text: "Nome"}, colSpan: 4},
							{dataField: "CRMUF", label: { text: "U.F. CRM"}, colSpan: 1},
							{dataField: "CRMNumero", label: { text: "Número CRM"}, colSpan: 1, editorType: "dxNumberBox"},
							{dataField: "CBO", colSpan: 2, label: { text: "CBO"}, editorType: "dxSelectBox",
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"CBO",pExibirCod:1});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}},
							{},
							{itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save",
								onClick: function(){
									var pNome = $("#formCadastrarMedico").dxForm("instance").getEditor("Nome").option("value");
									var pUFCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMUF").option("value");
									var pCRM = $("#formCadastrarMedico").dxForm("instance").getEditor("CRMNumero").option("value");
									var pCBO = $("#formCadastrarMedico").dxForm("instance").getEditor("CBO").option("value");
									if (pCBO == null) pCBO = "";
									//pré medicaçãoPreMedicacao
									if (pNome == "" || pUFCRM == "" || pCRM == "" || pCBO == "") {
										DevExpress.ui.notify("É obrigatório preencher todos os campos","warning",1500);
										return;
									}
									$.get(urlPreparacao,{method:"ArmMedico", pNome:pNome, 
										pUFCRM:pUFCRM, pCRM:pCRM,YBED:YBED,pCBO:pCBO},function(objeto){
										var array = objeto.split("|")
										if (array[0]==1){
											dataSourceMedicoExterno.reload();
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											$("#divCadastrarMedico").dxPopup("hide");
											objAgendamento.getEditor("agendSolicitante").option("value", array[1].split(","));
										}else{
											DevExpress.ui.notify("Erro: "+array[0],"error");
										}
									});
								}}
							},
							{itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									$("#divCadastrarMedico").dxPopup("hide");
								}}
							}
						]
					});
					
					e.append(formCadastrarMedico);
				}        		
			});
			

			dataSourcePreRequisito = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return $.getJSON(urlPreparacao, {method: "ListarPreRequisito", pCodAgendamento: codAgendamento, 
	        	pCodProcedimento: codProcPreRequis});
					},
				})
			});

			
			$("#divPreRequisito").dxPopup({
				visible: false,
				title: "Pré Requisito",
				width: 700,
				height:  500,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objDetalheAgendamento = $("<div id='divGridDetalheAgendamento'>").dxDataGrid({
						dataSource: dataSourcePreRequisito,
						columns: [
							{	dataField: "procedimento",  groupIndex:0, width: 100},
							{	dataField: "preRequisito", cellTemplate: function(container, options){
								container.html(options.data.preRequisito);
							}},
						],
						/*rowTemplate: function(container, item) {
							var data 	= item.data;
							var markup = "<tbody class='employee dx-row dx-row1'>" +
								"<tr>" +
									"<td align='left' style='border:1px solid #dddddd;'>" + data.preRequisito + "</td>";
								"</tr>" +
							"</tbody>";
							container.append(markup);
						},*/
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:false,
						allowColumnReordering: false,
						columnAutoWidth: false,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: false,
						hoverStateEnabled: false,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: true },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 440,
					});
					e.append(objDetalheAgendamento);
				}
			});
			
			function tentativaContato(pNumAgendamento){
				numAgendTentCont = pNumAgendamento;
				$("#divTentativaContato").dxPopup("show");
				dSTentContato.reload();
			}
			
			dSTentContato = new DevExpress.data.DataSource({
  			store: new DevExpress.data.CustomStore({
      		loadMode: "raw",   
      		load: function() {
          	return $.getJSON(urlPreparacao,{method:"GetTentContato",pCodAgendamento:numAgendTentCont});
      		}
  			})
			});
			
			$("#divTentativaContato").dxPopup({
				visible: false,
				title: "Registro de Tentativa de Contato",
				width: 800,
				height:  500,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='formTentativaContato'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						labelLocation: "top",
						colCount: 6,
						items: [
							{
								dataField: "Registro", label: { text: "Registro:"}, colSpan: 6, 
								editorType: "dxTextArea",
								editorOptions: {height: 80}
							},
							{colSpan: 4},
							{itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save",
								onClick: function(){
									var pObservacao = $("#formTentativaContato").dxForm("instance").getEditor("Registro").option("value");
									if (pObservacao == "") {
										DevExpress.ui.notify("É obrigatório preencher o campo registro.","warning",1500);
										return;
									}
									$.get(urlPreparacao,{method:"ArmTentContato", pCodAgendamento:numAgendTentCont, 
										pObservacao:pObservacao},function(retorno){
										if (retorno==1){
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
											$("#formTentativaContato").dxForm("instance").getEditor("Registro").option("value","")
											dSTentContato.reload();
										}else{
											DevExpress.ui.notify("Erro: "+retorno,"error");
										}
									});
								}}
							},
							{itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
									$("#divTentativaContato").dxPopup("hide");
								}}
							},{
								colSpan: 6,
								template	: function (data, itemElement) {
									itemElement.append("<div id='gridTentativaContato'>")
								}
							}
						]
					});
					e.append(conteudo);
					$("#gridTentativaContato").dxDataGrid({
						dataSource:dSTentContato,
						columns: [
							{dataField: "dataHora", caption: "Data/Hora", alignment: "center", width: 130},
							{dataField: "usuario", caption: "Responsável", alignment: "center", width: 200},
							{dataField: "registro", caption: "Registro", alignment: "center"},
						],
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 300
					});
				}
			});
			
			$("#divMotivoRemarcacao").dxPopup({
				visible: false,
				title: "Motivo da Alteração",
				width: 800,
				height:  200,
				onHidden: function(e){
					if (motivoEdicao == "") {
						$("#divMotivoRemarcacao").dxPopup("show");
						DevExpress.ui.notify("É obrigatório preencher o campo motivo","warning",1500);
					}
				},
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='formMotivoRemarcacao'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						labelLocation: "top",
						colCount: 1,
						items: [
							{
								dataField: "Motivo", label: { text: "Motivo:"}, 
								editorType: "dxTextArea",
								editorOptions: {height: 80}
							},
							{itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save",
								onClick: function(){
									var pMotivo = $("#formMotivoRemarcacao").dxForm("instance").getEditor("Motivo").option("value");
									if (pMotivo == "") {
										DevExpress.ui.notify("É obrigatório preencher o campo motivo","warning",1500);
										return;
									}
									motivoEdicao = pMotivo;
									$("#divMotivoRemarcacao").dxPopup("hide");									
								}}
							}
						]
					});
					e.append(conteudo);
				}
			});
			
			dataSourcePSCad = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function(){
	        	return dataSourcePS;
					},
					insert: function (values) {
			  		objeto = {
				  		"id": values.codConvenio+"~"+values.codPlanoSaude+"~"+values.carteirinha+"~"+values.vencimento,
				  		"carteirinha":  values.carteirinha,
							"codConvenio": values.codConvenio,
							"codPlanoSaude": values.codPlanoSaude,
							"descConvenio": values.descConvenio,
							"descPlanoSaude": values.descPlanoSaude,
							"vencimento": values.vencimento
			  		}
		    		dataSourcePS.push(objeto);
		    	},
				})
			});
			
			dataSourcePSPlanSau = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlPreparacaoOrc,{
							method:	"GetConvenio",
							pCodConvenio: args
						});
					},
					load: function(args) {
						var pCodConvenio = objAgendamento.getEditor("codPlanoSaudeConvenio").option("value");
						return $.getJSON(urlPreparacaoOrc,{
							method				:	"GetConvenio",
							pSkip					:	args.skip,
							pTake					:	args.take,
							pSearchValue	:	args.searchValue,
							pCodConvenio  : "",
							pParticular 	: "",
							pFlagConvenio : "",
							pConvenio 		: codConvenioPS
						});
					}
				})
			});

			
			$("#divPlanoSaude").dxPopup({
				visible: false,
				title: "Plano de Saúde",
				width: 1100,
				height:  400,
				onHidden: function(e){
					dataSourcePS 	= [];
					codProcPS			= "";
					codConvenioPS	= "";
				},
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					conteudo = $("<div id='formPlanoSaude'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						labelLocation: "top",
						colCount: 2,
						items: [{
							colSpan: 2,
							dataField: "procedimento",
							editorType: "dxTextBox", 
							label: { text:"Procedimento:"},
							editorOptions: {readOnly: true}
						},{
							colSpan: 2,
							template	: function (data, itemElement) {
								itemElement.append("<div id='gridPlanos'>")
							}
						},
							{itemType: "button", horizontalAlignment: "right", buttonOptions: {
		           	text: "Salvar",type	: "success", icon: "save",
								onClick: function(){
									objDG = $("#gridPlanos").dxDataGrid("instance");
									var pCodConvenio = "";
									var pCodPlanSaud = "";
									var pCarteirinha = "";
									var pVencimento  = "";
									if (objDG.getSelectedRowsData().length > 0) {
										var objeto = objDG.getSelectedRowsData();
										pCodConvenio = objeto[0].codConvenio;
										pCodPlanSaud = objeto[0].codPlanoSaude;
										pCarteirinha = objeto[0].carteirinha;
										pVencimento  = objeto[0].vencimento;
									}else{
										DevExpress.ui.notify("Selecione uma linha na tabela.","warning");	
										return;
									}
									$.get(urlPreparacao,{ method:	"SetPlanoSaude", pCodAgendamento: codAgendamento, 
									pProcedimento: codProcPS,	pCodConvenio: pCodConvenio, pCodPlanSaud: pCodPlanSaud,
									pCarteirinha: pCarteirinha, pVencimento: pVencimento}, function(objRetorno){
										dataSourcePS 	= [];
										codProcPS			= "";
										codConvenioPS	= "";
										dataSourceListarHorarios.reload();
										$("#divPlanoSaude").dxPopup("hide");
									});
								}
							}},
							{itemType: "button", horizontalAlignment: "left", buttonOptions: {
		          	type	: "default", text: "Fechar", icon: "close",
								onClick: function(){
										dataSourcePS 	= [];
										codProcPS			= "";
										codConvenioPS	= "";
									$("#divPlanoSaude").dxPopup("hide");
								}}
							}]	
					});
					e.append(conteudo);
					$("#gridPlanos").dxDataGrid({
						dataSource: dataSourcePSCad,
						selection: {
            	mode: "single"
        		},
						columns: [
							{	dataField: "descConvenio", caption: "Convênio", alignment: "center",
								setCellValue: function (rowData, value) {
			        		if (value == "" || value == null) return
		        			objLinha = this;
		        			var descConvenio = #server(User.Search.PesquisasJson.GetOrganizacaoNome(value))#;
									objLinha.defaultSetCellValue(rowData, descConvenio);
									codConvenioPS = value;
									dataSourcePSPlanSau.reload();
									rowData.codPlanoSaude 	= "";	
									rowData.descPlanoSaude 	= "";	
									rowData.codConvenio = value;	
					  		}
					  	},
							{dataField: "descPlanoSaude", caption: "Plano de Saúde", alignment: "center",
								setCellValue: function (rowData, value) {
			        		if (value == "" || value == null) return
		        			objLinha = this;
		        			var descPlanoSaude = #server(User.Search.PesquisasJson.GetOrganizacaoNome(value))#;
									objLinha.defaultSetCellValue(rowData, descPlanoSaude);
									rowData.codPlanoSaude = value;
					  		}
					  	},
							{dataField: "carteirinha", caption: "Nº da Carteirinha", alignment: "center"},
							{dataField: "vencimento", caption: "Vencimento da Carteirinha", alignment: "center", dataType: "date", width: 130},
						],
						onEditorPreparing: function(e) {
							if (e.parentType == "dataRow" && e.dataField == "descConvenio") {
								e.editorName = "dxSelectBox"; 
								e.editorOptions.dataSource = new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacaoOrc,{
												method:	"GetConvenio",
												pCodConvenio: args
											});
										},
										load: function(args) {
											return $.getJSON(urlPreparacaoOrc,{
												method				:	"GetConvenio",
												pSkip					:	args.skip,
												pTake					:	args.take,
												pSearchValue	:	args.searchValue,
												pCodConvenio  : "",
												pParticular 	: "",
												pFlagConvenio : 1,
												pConvenio 		: ""

											});
										}
									})
								});
								e.editorOptions.value = e.row.data.codConvenio;
								e.editorOptions.displayExpr = "NomeOrganizacao";
								e.editorOptions.valueExpr = "CodOrganizacao";
								e.editorOptions.searchEnabled = true;
								e.editorOptions.onValueChanged = function(arg) {
									e.setValue(arg.value);
								}
							}
							if (e.parentType == "dataRow" && e.dataField == "descPlanoSaude") {
								e.editorName = "dxSelectBox"; 
								e.editorOptions.dataSource = dataSourcePSPlanSau;
								e.editorOptions.value = e.row.data.codConvenio;
								e.editorOptions.displayExpr = "NomeOrganizacao";
								e.editorOptions.valueExpr = "CodOrganizacao";
								e.editorOptions.searchEnabled = true;
								e.editorOptions.onValueChanged = function(arg) {
									e.setValue(arg.value);
								}
							}
						},
		    		columnChooser: { enabled: false, mode: "dragAndDrop"},
						showColumnHeaders:true,
						editing: { mode: "batch", allowAdding: true, allowUpdating: false, allowDeleting: false, useIcons: true },
						allowColumnReordering: false,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: false },
						filterRow: { visible: false },
						export: { enabled: false },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: false },
						height: 250
					});
				}
			});
			
			
			///Relatório - Pesquisar Agendamento
			objRelatorio = $("#divRelatorio").dxForm({
				scrollingEnabled	: true,
				showColonAfterLabel	: true,
				height	:function() { return window.innerHeight - 95;},
				screenByWidth: function(width) { return "lg"; },
				items: [{
					itemType: "group",
					caption: "Filtro",
					cssClass: "second-group",
					colCount: 4,
					items: [{
						dataField: "relatorioDtInicial",
						label: { text:"Data Inicial", alignment: "right"},
						validationRules: [{type: "required"}],	
						editorType: "dxDateBox",
						editorOptions: {
							type: "date", width: 110, dateSerializationFormat: "yyyy-MM-dd",
							value: "#($ZDate(+$Horolog,3))#"
						}
					},{
						dataField: "relatorioDtFinal",
						label: { text:"Data Final", alignment: "right"},
						editorType: "dxDateBox",
						editorOptions: {
							type: "date", width: 110, dateSerializationFormat: "yyyy-MM-dd",
						}
					},{
						colSpan: 2
					},{
						dataField: "relatorioMedico", colSpan: 2,
						label: { text:"Médico", alignment: "right"},
						editorType: "dxTagBox",
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlPreparacao,{method:"GetMedicoComAgenda"});
              		}
          			})
      				}),
							searchEnabled: true,
							showClearButton: true,
							valueExpr: "codigo", 
							displayExpr: "nome",
						}
					},{
						dataField: "relatorioProcedimento", colSpan: 2,
						label: { text:"Procedimento", alignment: "right"},
							editorType: "dxTagBox", 
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
									store: new DevExpress.data.CustomStore({
										byKey: function(args) {
											return $.getJSON(urlPreparacao,{
												method				:	"GetProcedimento",
												pCodPaciente	: args,
											});
										},
										load: function(args) {
											return $.getJSON(urlPreparacao,{
												method				:	"GetProcedimento",
												pSkip					:	args.skip,
												pTake					:	args.take,
												pSearchValue	:	args.searchValue,
												pAlias				: 1
											});
										}
									})
								}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
								showClearButton: true,
							}
					},{
						dataField: "relatorioSala", colSpan: 4,
						label: { text:"Sala", alignment: "right"},
						editorType: "dxTagBox", 
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									loadMode: "raw",
									load: function () {
										return $.getJSON(urlPreparacaoSal, { method: "ListaSala" });
									}
								}),
							}),
							searchEnabled: true,
							showClearButton: true,
							valueExpr: "Codigo",
							displayExpr: "Descricao",
						}
					},{
						colSpan: 4,							
						template	: function (data, itemElement) {
							itemElement.append("<div id='divRelatorioAcao' style='text-align:right;border: 0px solid red;'>")
						}
					}]
				},{
					template	: function (data, itemElement) {
						itemElement.append("<div id='divRelatorioLista' style='width:"+(window.innerWidth-45)+"px;'>")
					}
				}]
			}).dxForm("instance");

			$("#divRelatorioAcao").html("<table width='100%'>" +
																		"<tr>" +
																			"<td align='right' style='vertical-align:bottom;'>" + 
																				"<div id='divRelatorioPesquisar'/>&nbsp;" +
																				"<div id='divRelatorioLimpar'/>&nbsp;" +
																			"</td>" +
																		"</tr>" +
																"</table>");

			objRelatorioPesq = $("#divRelatorioPesquisar").dxButton({
			  icon	: "search",
			  text	: "Pesquisar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
					if (!objRelatorio.validate().isValid){
		        DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
		        return
	        }
					
					if ($("#gridRelatorioLista")) $("#gridRelatorioLista").remove();
					$("#divRelatorioLista").html("<div id='gridRelatorioLista'></div>");
			
	        $("#gridRelatorioLista").dxDataGrid({
						loadPanel: { enabled: true },
						dataSource: new DevExpress.data.DataSource({
							store: new DevExpress.data.CustomStore({
								loadMode: "raw",
								load: function () {
									return $.getJSON(urlPreparacao, { method: "ListarRelatorio", 
									dados: JSON.stringify(objRelatorio.option("formData"))});
								}
							}),
						}),
		        columnChooser: { enabled: true, mode: "dragAndDrop" },
						allowColumnReordering: true,
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						hoverStateEnabled: true,
						showBorders: true,
						filterRow: {visible: true},
						searchPanel: { visible: true, width: 240, placeholder: "Pesquisar..." },
						headerFilter: { visible: true },
						groupPanel: { visible: true },
						columns: [
							{dataField: "prontuario", caption: "No. Prontuário", alignment: "center", width: 110},
							{dataField: "paciente", caption: "Nome Paciente",  minWidth: 250},
							{dataField: "agendamento", caption: "No. Agendamento", alignment: "center", width: 130},
							{dataField: "procedimento", caption: "Procedimento Agendado", width: 250},
							{dataField: "medico", caption: "Médico Agendado", alignment: "center", width: 250},
							{dataField: "sala", caption: "Sala", alignment: "center", width: 200},
							{caption: "Agendamento",  alignment: "center", columns: [
								{dataField: "dtAgendamento", caption: "Data", alignment: "center", width: 100},
								{dataField: "hrAgendamento", caption: "Hora", alignment: "center", width: 100},
							]},
							{caption: "Admissão",  alignment: "center", visible: 0, columns: [
								{dataField: "dtAdmissao", caption: "Data", alignment: "center", width: 90, visible: 0},
								{dataField: "hrAdmissao", caption: "Hora", alignment: "center", width: 80,  visible: 0},
							]},
						],
						height: function() { 
							var height = window.innerHeight - 320;
							return (height < 300 ? 300 : height) 
						},
		    		export: { enabled: true },
						pager: {
							showPageSizeSelector: true,
							allowedPageSizes: [25, 50, 100, 200],
							showInfo: true,
							showNavigationButtons: true,
							visible: true 
						},
						paging: { enabled: true, pageSize: 25 },
		        wordWrapEnabled: true,
		        allowColumnResizing: true,
		        columnResizingMode: "widget",
		        stateStoring: { enabled: false },
		      });
			  }
			}).dxButton("instance");

			objRelatorioLimpar = $("#divRelatorioLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				   
			  }
			}).dxButton("instance");

			
		</script>
	</body>
</html>
