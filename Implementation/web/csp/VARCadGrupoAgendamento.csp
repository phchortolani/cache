<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 			= $get(%request.Data("YBED", 1))
		set YM 				= $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 			= %request.Application
		set host 			= %request.CgiEnvs("HTTP_HOST")
		set url				= "http://"_host_app

		set URLPreparacao = "VAR.CSP.VARCadGrupoAgendamento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLLogin 			= "COMLogin.cls"
		set URLLink 			= "www.cls"

		set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)
	</script>

	<head>
 
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Grupo de Agendamento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>
	<style>
	.dx-scheduler-view-switcher {  
		visibility: hidden  
	}
	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	</style>
	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divCadastroAusencia"></div>
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<!--<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>-->
		<script src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/exceljs.min.js"></script>
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/FileSaver.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao = '#(URLPreparacao)#';
			var urlSearch			= '#(URLSearch)#';
			var urlLink 			= '#(URLLink)#';
			var YBED 					= '#(YBED)#';
			var YUSER 				= '#(YUSER)#';
			var YLOCATION 		= '#(YLOCATION)#';
			var nomeLocal 		= '#(nomeLocal)#';
			var pDataAgenda		= new Number("#(+$Horolog)#");
			var codSalaAus		= ""; 
			var codLeitoAus		= "";
			var tipoVisual		= "DI";

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			objToolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "save",
						hint	: "Salvar os Dados",
						type	: "success",
						stylingMode : "contained",
						onClick	: function(){
							var pCodGrupo = objGrupo.option("value");
							var flagForm = objForm.validate().isValid; 
							var flagGeral = objGeral.validate().isValid; 
							if (!flagForm || !flagGeral){
								DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
								return;
							}
							var pTempo = objGeral.getEditor("tempo").option("text");
							qtdeAdmissao = 0;
							if (pCodGrupo != "" && pCodGrupo != null) {
								qtdeAdmissao = new Number(#server(VAR.CSP.VARCadGrupoAgendamento.ChecaAgendamentoEdicao(pCodGrupo, pTempo))#);
							}
							if (qtdeAdmissao > 0) {
								var result = DevExpress.ui.dialog.confirm("<i>Existe(m) "+qtdeAdmissao+" agendamento(s), confirma a alteração?", "Confirmação");
								result.done(function(dialogResult) {
									if (!dialogResult) return
									$.getJSON(urlPreparacao,{
										method					: "SalvarDados",
										pCodGrupo				: pCodGrupo,
										pSituacao 			: objForm.getEditor("situacao").option("value"),
										pTempo					: pTempo,
										pObjGeral 			: JSON.stringify(objGeral.option("formData"))
									},function(objRetorno){
										if (objRetorno.status==1){
											dataSourceGrupo.reload();
											objGrupo.option("value", objRetorno.codigo);
											carregarDados(objRetorno.codigo) 
											DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
										}else{
											DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
										}
									});
								});
							}else{
								$.getJSON(urlPreparacao,{
									method					: "SalvarDados",
									pCodGrupo				: pCodGrupo,
									pSituacao 			: objForm.getEditor("situacao").option("value"),
									pTempo					: pTempo,
									pObjGeral 			: JSON.stringify(objGeral.option("formData"))
								},function(objRetorno){
									if (objRetorno.status==1){
										dataSourceGrupo.reload();
										objGrupo.option("value", objRetorno.codigo);
										carregarDados(objRetorno.codigo) 
										DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
									}else{
										DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
									}
								});
							}
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fas fa-file-import",
						hint	: "Importar Cadastro de Grupo de Agendamento",
						type	: "default",
						stylingMode : "contained",
						onClick	: function(){
							importarArquivo('026', "dataSourceGrupo.reload();");
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fa fa-eraser",
						hint	: "Limpar os Campos",
						type	: "default",
						stylingMode : "contained",
						onClick	: function(){
							objGrupo.option("value", "");
						}
					}
				}]
			}).dxToolbar("instance")
		
			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) {
					return "lg";
				},
				screenByWidth: function(width) {
					return "lg";
				},
				height:function(){
					return window.innerHeight-40
				},
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colCount: 10,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 7,
						dataField: "convenio",
          	label		: {
							text	: "Grupo de Agendamento"
						},  
						template	: function (data, itemElement) {
							itemElement.append("<div id='divGrupoAgendamento'/>")
						},
					},{
						colSpan: 2,
						dataField: "situacao",
						label		: {
							text:"Situação",
							alignment: "right"
						},
						editorType: "dxSelectBox",
						validationRules: [{
							type: "required"
						}],
						editorOptions: {
              dataSource: new DevExpress.data.DataSource({
                  store: new DevExpress.data.CustomStore({
                      loadMode: "raw",
                      load: function () {
                          return $.getJSON(urlSearch, { method: "GetWWW101", pDescParametro: "MEDPROVIDERSTA" });
                      }
                  })
              }),
              searchEnabled: false,
              valueExpr: "Codigo",
              displayExpr: "Descricao",
						}
					},{},{
						colSpan: 10,
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
							deferRendering: false,
							animationEnabled: false,
							showNavButtons:true,
							selectedIndex: 0,
							onSelectionChanged: function(e){
								if (e.addedItems[0].title == "Agenda");{
									listarAgenda();	
								}
							}
						},	
							height:'10px',
							tabs:[{
								title	: "Geral",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divGeral'>")
									}
								}],
							},{
								title	: "Agenda",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divAgenda'>")
									}
								}]
							},{
								title	: "Auditoria",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divControle'>")
									}
								}]
							}]
						}
					]
				}]
			}).dxForm("instance");			
		
			dataSourceGrupo = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlSearch,{
							method:	"GetGrupoAgendamento",
							pCodGrupo: args
						});
					},
					load: function(args) {
						return $.getJSON(urlSearch,{
							method:	"GetGrupoAgendamento",
							pSkip:	args.skip,
							pTake:	args.take,
							pSearchValue:	args.searchValue
						});
					}
				})
			});
		
			objGrupo = $("#divGrupoAgendamento").dxSelectBox({
				dataSource: dataSourceGrupo,
				placeholder: "+",
				searchEnabled: true,
				valueExpr: "Codigo", 
				displayExpr: "Descricao",
				showClearButton: true,
				onValueChanged: function(e) {
					if (!e.value) {
						objGeral.resetValues();
						objGeral.getEditor("qtdeProcedimento").option("value", 1);
						objGeral.getEditor("cor").option("value", 1);
						objGeral.getEditor("qtdeHorario").option("value", 1);
						objControle.resetValues();
						objForm.getEditor("situacao").option("value", "");
						objLocAtendUnidade.option("disabled", true);
						objLocAtendSala.option("disabled", true);
						objLocAtendLeito.option("disabled", true);
						objLocAtendInserir.option("disabled", true);
						dataSourceSalaAtendimento.reload();
						objLocalAtendimento.option("disabled", true);
						dataSourceLocalAtendimento.reload();
						objRestricaoConvenio.option("disabled", true);
						dataSourceRestricaoConvenio.reload();
						objRestricao.option("disabled", true);
						dataSourceRestricao.reload();
						pDataAgenda = new Number("#(+$Horolog)#");
						dataSourceLocalAtendimento.reload();
						if ($("#divAgendaListar")) $("#divAgendaListar").remove();
						$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 0)
					}else{
						carregarDados(e.value);
					}
				}
			}).dxSelectBox("instance");
			
			dataSourceProcedimentos = new DevExpress.data.DataSource({
  			store: new DevExpress.data.CustomStore({
      		loadMode: "raw",   
      		load: function() {
          	return $.getJSON(urlSearch,{
							method			:	"GetINARTT",
							pCodProduto	: "",
							pRequerAgendamento: 1,
						});
      		}
  			})
			});
			
			objGeral = $("#divGeral").dxForm({
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() { return window.innerHeight - 150;},
				screenByWidth: function(width) { return "lg"; },
				colCount: 2,
				items	: [{
					colSpan: 2,
					colCount: 10,
					itemType: "group",
					items: [{
						colSpan: 10, 
						dataField: "descricao",
						validationRules: [{ type: "required" }],
						label: { text:"Descrição:", alignment: "right" }
					},{
						colSpan: 2, 
						dataField: "tipo",
						label: { text:"Tipo:", alignment: "right" },
						editorType: "dxSelectBox",
						validationRules: [{ type: "required" }],
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetVARPARA",DescParametro:"TIPOGRUPOAGENDAMENTO"});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					},{
						colSpan: 2, 
						dataField: "qtdeHorario",
						editorType: "dxNumberBox",
						label: { text:"Qtde. de Horário:", alignment: "right" },
						validationRules: [{ type: "required" }],	
						editorOptions: {
							min: 1,
							value: 1,
             	showSpinButtons: true,
							width: 70,
						}
					},{
						colSpan: 2, 
						dataField: "qtdeProcedimento",
						editorType: "dxNumberBox",
						label: { text:"Qtde. de Procedimento:", alignment: "right" },
						validationRules: [{ type: "required" }],	
						editorOptions: {
							min: 1,
							value: 1,
             	showSpinButtons: true,
							width: 70,
						}
					},{
						colSpan: 2, 
						dataField: "tempo",
						editorType: "dxDateBox",
						label: { text:"Tempo:", alignment: "right" },
						validationRules: [{ type: "required" }],	
						editorOptions: {
							type: "time",
							pickerType: "native",
							width: 80,
						}
					},{
						colSpan: 2, 
						dataField	: "cor",
						editorType	: "dxColorBox",
						label	: {
							text:"Cor:",
							alignment: "right"
						},
						editorOptions: {
							width: 110,
						}
					},{
						colSpan: 10, 
						dataField: "itens",
						editorType: "dxTagBox",
						label: { text:"Procedimentos:", alignment: "right" },
						editorOptions: {
							dataSource: dataSourceProcedimentos,
							displayExpr: "DescProduto",
							valueExpr: "CodProduto",
							searchEnabled: true,
							onValueChanged: function(e){
								var tCodProduto = e.value;
								if (tCodProduto.length == 0) return;
								var xCodProduto = tCodProduto[tCodProduto.length-1];
								if (xCodProduto == "") return;
								if (objGrupo.option("value") == "" || objGrupo.option("value") == null) return;
								$.get(urlPreparacao, {method:"GetGrupo", pCodProduto: xCodProduto, 
								pCodGrupo: objGrupo.option("value")}, function(retorno){
									if (retorno != "") DevExpress.ui.notify(retorno,"warning");	
								});
							},
							buttons: [{
								location:"after",
								name: "addPRocedimento",
								options:{
									icon: "fas fa-file-import",
									hint: "Importar Vinculação do Grupo de Agendamento com Procedimentos",
									type: "default",
									stylingMode : "contained",
									onClick	: function(){
										importarArquivo('027', "dataSourceProcedimentos.reload();");
									}
								}
							}]								
						}
					}]
				},{
					colSpan: 2,
					itemType: "group",
					cssClass: "second-group",
					caption: "Local de Atendimento (Procedimentos)",
					colCount: 2,
					items: [{
						itemType: "group",
						items: [{
							label		: {
								text:"Unidade:",
								alignment: "right"
							},
							template	: function (data, itemElement) {
								itemElement.append("<div id='divLocAtendUnidade'>")
							}
						},{
							label		: {
								text:"Sala:",
								alignment: "right"
							},
							template	: function (data, itemElement) {
								itemElement.append("<div id='divLocAtendSala'>")
							}
						},{
							label		: {
								text:"Leito/Equipamento:",
								alignment: "right"
							},
							template	: function (data, itemElement) {
								itemElement.append("<div id='divLocAtendLeito'>")
							}
						},{
							template	: function (data, itemElement) {
								itemElement.append("<div id='divLocAtendAcao'>")
							}
						}]
					},{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divLocalAtendimento'>")
						}
					}]
				},{
					colSpan: 4,
					itemType: "group",
					cssClass: "second-group",
					caption: "Restrição de Procedimento em Sequência",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divRestricao'>")
						}
					}]
				},{
					colSpan: 4,
					itemType: "group",
					cssClass: "second-group",
					caption: "Restrição de Convênio/Plano de Saúde",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divRestricaoConvenio'>")
						}
					}]					
				}]
			}).dxForm("instance");

			objAgenda = $("#divAgenda").dxForm({
				activeStateEnabled:true,
				formData: {},
				scrollingEnabled	: true,
				height	:function() { return window.innerHeight - 150;},
				items: [{
					template	: function (data, itemElement) {
						itemElement.append("<div id='divAgendaMain'>")
					}
				}]
			}).dxForm("instance");

			function listarAgenda() {
				var pCodGrupo = objGrupo.option("value");
			
				
				if ($("#divAgendaListar")) {
					$("#divAgendaListar").remove();
					$("#divAgendaCabecalho").remove();
					$("#divAgendaRodape").remove();
				}
				$("#divAgendaMain").html(
					"<div id='divAgendaCabecalho' style='width:"+(window.innerWidth - 63)+"px; font-size:12px; " +
					"border:1px solid #e0e0e0; text-align: left;padding-top:5px;padding-right:15px;height: 38px; " +
					"color: #333333' >" +
						"<table border=0 width='"+((window.innerWidth - 63) < 839 ? 839 : (window.innerWidth - 63))+"px;'><tr><td width='450px'>" +
						"<span style='color: #333333;'> &nbsp;<b>Legenda: &nbsp;</b></span>" + 
						"<span style='height: 20px;color: #333333; background-color: #A9C8DE;border-radius: 2px;display: inline-block;vertical-align: middle;'>" +
							"&nbsp;Horário Livre&nbsp;</span> " +
						"<span>&nbsp; </span>" +
						"<span style='height: 20px;color: #333333; background-color: #C4FFC4;border-radius: 2px;display: inline-block;vertical-align: middle;'>" +
							"&nbsp;Horário c/ Paciente&nbsp;" +
						"</span>" +
						"<span>&nbsp; </span>" +
						"<span style='height: 20px;color: #333333; background-color: #ffcaca;border-radius: 2px;display: inline-block;vertical-align: middle;'>" +
							"&nbsp;Bloqueado&nbsp;" +
						"</span>" +
						"<span>&nbsp; </span>" +
						"<span style='height: 20px;color: #333333; background-color: #d0d0d0;border-radius: 2px;display: inline-block;vertical-align: middle;'>" +
							"&nbsp;Leito s/ Horário&nbsp;" +
						"</span>" +
						"</td><td style='text-align:right;padding-bottom:4px;'>Tipo Visualização: &nbsp;</td>" +
						"<td width='165px' style='text-align:right;padding-right:15px;'><div id='divTipoListagem'></div></td>" +
						"<td width='110px' style='text-align:right;padding-right:10px;'><div id='divAusencia'></div></td></tr></table>" +
	    		"</div>" +
					"<div id='divAgendaListar' style='width:"+(window.innerWidth - 63)+"px; margin-top: 3px; overflow: auto; '>"+
					"<div id='divAgendaListar1' style='width:"+(window.innerWidth - 63)+"px;'></div>" +
					"</div>" +
					"<div id='divAgendaRodape' style='width:"+(window.innerWidth - 63)+"px; font-size:12px; margin-top: 2px; border:1px solid #e0e0e0; " +
	    			"text-align: right;padding-top:5px;padding-right:15px;height: 30px; color: #333333'></div>"
				);

				$("#divTipoListagem").dxRadioGroup(
					{dataSource: [{idTipo: "DI", text: "Diário"},{idTipo: "SE", text: "Semanal"}],
					layout: "horizontal",
					displayExpr: "text",
					valueExpr: "idTipo",
					value: tipoVisual,
					onValueChanged: function(e){
						tipoVisual = e.value;
						
						listarAgenda();
					}
				});
				
				$("#divAusencia").dxButton({
					icon: "fas fa-calendar-times",
					text: "Bloquear",
					type: "danger",
				  stylingMode : "contained",
				  onClick	: function(){
						$("#divCadastroAusencia").dxPopup("show");	
						if (tipoVisual == "DI"){
							objFormAddAusencia = $("#divFormAddAusencia").dxForm("instance");
							objFormAddAusencia.getEditor("data").option("value", #server(VAR.CSP.VARAgendaMedica.GetDataFormatada(""+pDataAgenda, 1))#);
						}
				  }
				});

				pDataAgendaF = #server(VAR.CSP.VARAgendaMedica.GetDataFormatada(""+pDataAgenda, 3))#;
				dia = new Number(pDataAgendaF.split("-")[2]);
				mes = new Number(pDataAgendaF.split("-")[1]);
				ano = new Number(pDataAgendaF.split("-")[0]);
				
				$.getJSON(urlPreparacao, {method:	"ListarAgendaScheduler", pCodGrupo: pCodGrupo, 
				pDataInicio: pDataAgenda, pTipoVisual: tipoVisual},function(objRetorno){
					for (count = 0 ; count < objRetorno.dados.length ; count ++) {
						objRetorno.dados[count].inicio =	new Date(
																								objRetorno.dados[count].Ano,
																								objRetorno.dados[count].Mes,
																								objRetorno.dados[count].Dia,
																								objRetorno.dados[count].iHr,
																								objRetorno.dados[count].iMin,
																								0	
																							);
						objRetorno.dados[count].fim =	new Date(
																						objRetorno.dados[count].Ano,
																						objRetorno.dados[count].Mes,
																						objRetorno.dados[count].Dia,
																						objRetorno.dados[count].fHr,
																						objRetorno.dados[count].fMin,
																						0	
																					);
					}
					var list = {
						timeZone: 'America/Sao_Paulo',
						editing: false,
						cellDuration: 20,
						onOptionChanged: function(e) {
							if(e.name === "currentDate") {
								var data = e.value;
		           	var dia = data.getDate();
		           	var mes = data.getMonth() + 1;
	           		var ano = data.getFullYear();
		           	pDataAgenda = #server(VAR.CSP.VARAgendaMedica.GetDataFormatada(ano+"-"+mes+"-"+dia, 0))#;
		           	listarAgenda()
							}
	        	},
						resources: [{
							fieldExpr: "idGrupo", 
							allowMultiple: false,
							dataSource: objRetorno.resources
						}],
						appointmentTemplate: function(model) {
							if (model.appointmentData.numAdmissao == "" || model.appointmentData.numAdmissao == null) {
								conteudo = "<span style='font-size: 10px; text-align: left'>"+model.appointmentData.hora+" - "+
													 model.appointmentData.descUnidade+"</span>" +
													 "<br><span style='font-size: 10px; text-align: left'>"+model.appointmentData.descSala + " - "+ 
													 model.appointmentData.descLeito+"</span>";
							}else{
								conteudo = "<span style='font-size: 10px; text-align: left'>"+model.appointmentData.hora+" - "+
													 model.appointmentData.descUnidade+"</span>" +
													 "<br><span style='font-size: 10px; text-align: left'>"+model.appointmentData.descSala + " - "+ 
													 model.appointmentData.descLeito+"</span>" + 
													 "<br><span style='font-size: 10px;'><b>"+model.appointmentData.nomePaciente+"</b></span>"; 
								if (model.appointmentData.telefone != "") {
									conteudo += "<br><span style='font-size: 10px;'>"+model.appointmentData.telefone+"</span>";
								}
							}
							return $("<div style='color:black;'>" + conteudo + "</div>");
						},
						onContentReady: function(e) {
							var currentHour = new Date().getHours() - 1;
							e.component.scrollToTime(currentHour, 30, new Date());
						},
						onAppointmentClick: function(e) {
							e.cancel = true;
						},
						onAppointmentDblClick: function(e) {
							e.cancel = true;
						},
						shadeUntilCurrentTime: true,
						firstDayOfWeek: 1,
						views: [(tipoVisual == "DI" ? "day" : "week")],
						currentView: (tipoVisual == "DI" ? "day" : "week"),
						currentDate: new Date(ano, mes, dia),
						startDayHour: objRetorno.menorTempoAtend,
						endDayHour: objRetorno.maiorTempoAtend,
						height: function() { 
							var xHeight = window.innerHeight - 240;
							return (xHeight < 600 ? 600 : xHeight); 
						},
						textExpr: "text",
						startDateExpr: "inicio",
						endDateExpr: "fim", 
						CellsAutoHeightOption: true,
						CrossScrollingEnabled: true,
						maxAppointmentsPerCell: "unlimited",
						dateSerializationFormat: "yyyy-MM-ddTHH:mm:ss",
						showAllDayPanel: false,
						dataSource: objRetorno.dados
					};
					if (tipoVisual == "SE" && (objRetorno.qtdeColunas > window.innerWidth)) {
						list.width = objRetorno.qtdeColunas;
					}		
					objAgendaLista = $("#divAgendaListar1").dxScheduler(list).dxScheduler("instance");
					$("#divAgendaRodape").css("display", "block").html("<b>Ocupação: "+objRetorno.percOcupacao+"%</b>");
				});
				
				return 
				$.getJSON(urlPreparacao, {method:	"ListarAgenda", pCodGrupo: pCodGrupo, 
				pDataInicio: pDataAgenda},function(objRetorno){
					objAgendaLista = $("#divAgendaListar").dxDataGrid({
						dataSource: objRetorno.Dados,
						columns: objRetorno.Columns,
						rowTemplate: function(container, item) {
							var data = item.data;
							var markup = "<tbody class='employee dx-row dx-row1'>" +
								"<tr>" +
									"<td align='center' style='border:1px solid #dddddd;'>" + data.horadeAtendimento + "</td>";  
					    for (count = 1; count < objRetorno.Columns.length ; count ++ ){
								if (objRetorno.Columns[count].descosid == 1) {
									markup += "<td align='center' style='border:1px solid #dddddd;'></td>";
								}else{
									for (countSeq = 0; countSeq < objRetorno.Columns[count].columns.length ; countSeq ++ ){
										var dataField = objRetorno.Columns[count].columns[countSeq].dataField;
										if (typeof data[dataField] != "undefined"){
											var backGround = data[dataField+"backGround"];
											var corBorder = "#dddddd";
											if (backGround == "#d9ffd9") var corBorder = "green";
											if (backGround == "#ddedff") var corBorder = "blue";
											if (backGround == "#ffcaca") var corBorder = "red";
											var conteudo = data[dataField];
											aConteudo = conteudo.split("~");
											if (aConteudo[0]=="") {
												var xConteudo = "";	
											}else{
												var xConteudo = "<span style='font-size:12px;'>"+aConteudo[1]+"</span>"+
																				(aConteudo[2] == "" ? "" : "<br><span style='font-size:10px;'>"+aConteudo[2]+"</span>")+	
																				"<br><span style='font-size:9px;'>"+aConteudo[3]+"</span>";
											}
											markup += "<td align='center' style='background:"+backGround+";" + 
											"border-top:1px solid "+corBorder+";border-left:1px solid "+corBorder+";" +
											"border-right:1px solid "+corBorder+";";
											if (data[dataField+"rowSpan"] == 1) {
												markup += "border-bottom:1px solid "+corBorder+";"
											}
											markup += "'>";
											if (data[dataField+"restricao"] != "") {
												markup += "<i class='fas fa-exclamation-circle' title='Restrição: "+data[dataField+"restricao"]+"'></i>&nbsp;"
											}
											markup += xConteudo+"</td>";
										}else{
											var backGround = data[dataField+"backGround"];
											var corBorder = "#dddddd";
											if (backGround == "#d9ffd9") var corBorder = "green";
											if (backGround == "#ddedff") var corBorder = "blue";
											if (backGround == "#ffcaca") var corBorder = "red";
											markup += "<td align='center' style='background:"+backGround+";" +  
											"border-left:1px solid "+corBorder+";border-right:1px solid "+corBorder+";";
											if (data[dataField+"rowSpan"] == 1 && backGround == "#ffffff") {
												markup += "border-top:1px solid "+corBorder+";"
											}
											if (data[dataField+"rowSpan"] == 1) {
												markup += "border-bottom:1px solid "+corBorder+";"
											}
											markup += "'></td>";
										}
									}
								}
					    }
							markup += 
								"</tr>" +
							"</tbody>";
							container.append(markup);
						},
						customizeColumns: function (columns) {
							$.each(columns, function (index, element) {
								if (element.caption.indexOf("/") != -1) {
									element.headerCellTemplate = function (header, info) {
										if (element.descosid == 1 || element.dataAtual > element.dataAgend ) {
											$('<div>').html("<span style='font-size:12px;'>" + 
											info.column.caption+"</span>").css('font-size', '12px').appendTo(header);
										}else{
											$('<div>').html("<span style='font-size:12px;'>" + 
											info.column.caption + "</span>").css('font-size', '12px').appendTo(header);
										}
									};
								}else if (element.dataField != "horadeAtendimento") {
										element.headerCellTemplate = function (header, info) {
											conteudo = "<table width='100%'>" +
																		"<tr>" +
																			"<td align='center' width='110px'>" + 
																				"<span style='font-size:11px;'>"+info.column.descUnidad+"</span> - "+
																				"<span style='font-size:11px;'>"+info.column.descSala +"</span> - "+	
																				"<span style='font-size:12px;'>"+info.column.descLeito+"</span>" +
																			"</td>" +
																			"<td align='center' width='20px'><i fas class='fas fa-calendar-times' " + 
																				"title='Cadastrar ausência' style='color:#337ab7;cursor:pointer' " +
																				 "onClick=cadastrarAusencia('"+info.column.codSala+"','"+info.column.codLeito+"','"+element.dataAgend+"') " +
																				 "/></span>" + 
																			"</td>" +
																		"</tr>" +
																"</table>";
											$('<div>').html(conteudo).css('font-size', '12px').appendTo(header);
									};
								}else if (element.dataField == "horadeAtendimento") {
										element.headerCellTemplate = function (header, info) {
											$('<div>').html("<span style='font-size:12px;'>" + 
												info.column.caption+"</span>").css('font-size', '12px').appendTo(header);
									};
								}									
							});
						},
						summary: {
          		totalItems: objRetorno.Summary,
							calculateCustomSummary: function (options) {
								options.totalValue = objRetorno.PercOcupacao+"%";
							}
						},
						columnChooser: { enabled: false, mode: "dragAndDrop"},
						allowColumnReordering: false,
						editing: { mode: "popup", allowAdding: false, allowUpdating: false, allowDeleting: false, useIcons: true},
						columnAutoWidth: true,
						showColumnLines: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						hoverStateEnabled: true,
						showBorders: true,
						headerFilter: { visible: false },
						grouping: { autoExpandAll: false },
						groupPanel: { visible: false, allowColumnDragging: true },
						columnFixing: { enabled: true },
						filterRow: { visible: false },
						sorting: {mode:"none"},
						height: function() { 
							var xHeight = window.innerHeight - 150;
							return (xHeight < 310 ? 310 : xHeight); 
						},
						export: { enabled: true },
						stateStoring: { enabled: false }, 
						wordWrapEnabled: true,
						searchPanel: { visible: true }, 
						paging: { enabled: false},
						onToolbarPreparing: function(e) {
			    		var dataGrid = e.component;
			        e.toolbarOptions.items.unshift({
								location: "before",
                template	: function () {
									return	$("<div style='width:500px;text-align:left;'/>").append(
														$("<span><b>Legenda: &nbsp;</b></span>" + 
															"<span style='height: 20px; background-color: #d9ffd9;border-radius: 2px;" + 
															"display: inline-block;vertical-align: middle;'>&nbsp; Horário Livre &nbsp;</span>" + 
															"<span>&nbsp; <span>" +
															"<span style='height: 20px; background-color: #ddedff;border-radius: 2px;" + 
															"display: inline-block;vertical-align: middle;'>&nbsp; Horário c/ Paciente &nbsp;</span>" + 
															"<span>&nbsp; <span>" +
															"<span style='height: 20px; background-color: #ffcaca;border-radius: 2px;" + 
															"display: inline-block;vertical-align: middle;'>&nbsp; Bloqueado &nbsp;</span>"  
														)
													);
              	}
							},{
								location: "after",
								widget: "dxButton",
								options: {
									icon: "chevrondoubleleft",
									hint: "Semana Anterior",
									onClick: function(e) {
										dataAtual = new Number("#(+$Horolog)#");
										if ((pDataAgenda - 7) >= dataAtual) {
											pDataAgenda	= pDataAgenda - 7;
											listarAgenda()
										}
									}
								}
							},{
								location: "after",
								widget: "dxButton",
								options: {
									icon: "chevrondoubleright",
									hint: "Próxima Semana",
									onClick: function(e) {
										pDataAgenda	= pDataAgenda + 7;
										listarAgenda()
									}
								}
							})
			    	}
					}).dxDataGrid("instance");
				});
			}

			function cadastrarAusencia(pCodSala, pCodLeito, pData) {
	  		pCodGrupo = objGrupo.option("value");
				codSalaAus	= pCodSala; 
				codLeitoAus	= pCodLeito;
				$.getJSON(urlPreparacao, {	
					method	:	"GetCadastrarAusencia",
					pCodGrupo: pCodGrupo,
					pCodSala: pCodSala, 
					pCodLeito: pCodLeito,
					pData: pData,
				},function(objRetorno){
					$("#divCadastroAusencia").dxPopup("show");	
					objFormAddAusencia = $("#divFormAddAusencia").dxForm("instance");
					objFormAddAusencia.getEditor("sala").option("value", objRetorno.descSala);
					objFormAddAusencia.getEditor("leito").option("value", objRetorno.descLeito);
					objFormAddAusencia.getEditor("data").option("value", objRetorno.data);
					objFormAddAusencia.getEditor("dia").option("value", objRetorno.indicadordoDia);
					objFormAddAusencia.getEditor("horaInicial").option("value", objRetorno.horaInicial);
					objFormAddAusencia.getEditor("horaFinal").option("value", objRetorno.horaFinal);
					objFormAddAusencia.getEditor("descricao").option("value", objRetorno.descricao);
					if (objRetorno.flagExcluir == 1) {
						objAusenciaExcluir.option("disabled", false);
					}else{
						objAusenciaExcluir.option("disabled", true);
					}
				});
			}	

			dataSourceSalaLeito = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
				  loadMode: "raw",
				  load: function () {
				  	var pCodGrupo = objGrupo.option("value");
				  	var pData 		= $("#divFormAddAusencia").dxForm("instance").getEditor("data").option("text");
				  	if (pData == "" || pData == null) return [];
				  	return $.getJSON(urlPreparacao, { method: "GetSalaLeito", pCodGrupo: pCodGrupo, pData: pData});
				  }
				})
			});

			$("#divCadastroAusencia").dxPopup({
				visible: false,
				title: "Bloqueio/Desbloqueio",
				width: 500,
				height:  280,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					objAddAusencia= $("<div id='divFormAddAusencia'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: false,
						screenByWidth: function(width) { return "lg"; },
						labelLocation: "left",
						colCount: 5,
						items: [{
							dataField: "data", 
							colSpan: 3,
							label: { text: "Data:", alignment: "right"},
							editorType: "dxDateBox",
							editorOptions: {
								value: (tipoVisual == "DI" ? #server(VAR.CSP.VARAgendaMedica.GetDataFormatada(""+pDataAgenda, 1))# : ""),
								onValueChanged: function(e) {
									$("#divFormAddAusencia").dxForm("instance").getEditor("salaLeito").option("value", "");
									dataSourceSalaLeito.reload();
								}
							}
						},{
							dataField: "dia", 
							colSpan: 2,
							label: { text: "O dia:", alignment: "right"},
							editorType: "dxCheckBox",
							editorOptions: {
								onValueChanged: function(e) {
									objForm = $("#divFormAddAusencia").dxForm("instance");
									if (e.value) {
										objForm.getEditor("horaInicial").option({readOnly: true, value: ""});
										objForm.getEditor("horaFinal").option({readOnly: true, value: ""});
									}else{
										objForm.getEditor("horaInicial").option({readOnly: false, value: ""});
										objForm.getEditor("horaFinal").option({readOnly: false, value: ""});
									}
								}
							}
						},{
							dataField: "salaLeito", 
							colSpan: 5,
							label: { text: "Sala/Leito:", alignment: "right"},
							editorType: "dxSelectBox",
							editorOptions: {
								dataSource: dataSourceSalaLeito,
				        itemTemplate: function(data) {
					        conteudo = 	"<div class='custom-item'>" +
					        							"<div>" + data.text + "</div>";
					        							if (data.ausencia != "" && data.ausencia != null) {
						        							conteudo += "<div style='color:red;font-size:10px'>Descrição: " + 
						        													data.ausencia + "</div>";
					        							}
					        conteudo += "</div>";
					        return conteudo;
				        },
								onValueChanged: function(e) {
									objForm = $("#divFormAddAusencia").dxForm("instance");
									objForm.getEditor("dia").option("value", false);
									objForm.getEditor("horaInicial").option({readOnly: false, value: ""});
									objForm.getEditor("horaFinal").option({readOnly: false, value: ""});
									objForm.getEditor("descricao").option("value", "");
									if (e.value) {
										var pCodGrupo = objGrupo.option("value");
								  	var pData 		= objForm.getEditor("data").option("text");
										var pCodSala	= e.value.split("~")[0];
										var pCodLeito	= e.value.split("~")[1];
										$.getJSON(urlPreparacao, {	
											method	:	"GetCadastrarAusencia",
											pCodGrupo: pCodGrupo,
											pCodSala: pCodSala, 
											pCodLeito: pCodLeito,
											pData: pData,
										},function(objRetorno){
											objFormAddAusencia = $("#divFormAddAusencia").dxForm("instance");
											objFormAddAusencia.getEditor("dia").option("value", objRetorno.indicadordoDia);
											objFormAddAusencia.getEditor("horaInicial").option("value", objRetorno.horaInicial);
											objFormAddAusencia.getEditor("horaFinal").option("value", objRetorno.horaFinal);
											objFormAddAusencia.getEditor("descricao").option("value", objRetorno.descricao);
											if (objRetorno.flagExcluir == 1) {
												objAusenciaExcluir.option("disabled", false);
											}else{
												objAusenciaExcluir.option("disabled", true);
											}
										});
									}
								},
								valueExpr: "id", 
								displayExpr: "text",
							}
						},{
							dataField: "horaInicial", 
							colSpan: 2,
							label: { text: "Hora:", alignment: "right"},
							editorType: "dxDateBox",
							editorOptions: {
								type: "time",
	              pickerType: "native",
	              width: 110,
							}
						},{
							colSpan: 2,
							dataField: "horaFinal",
							label: { text:"Hora Atend.:", alignment: "right", visible: false},
							editorType: "dxDateBox",
							editorOptions: {
								type: "time",
	              pickerType: "native",
	              width: 110,
							}
						},{colSpan: 1},{
							dataField: "descricao", 
							colSpan: 5,
							label: { text: "Descrição:", alignment: "right"},
							editorType: "dxTextArea",
							editorOptions: {height	: 75,}
						},{ 
							colSpan: 5,
							template	: function (data, itemElement) {
								itemElement.append("<div id='divAusenciaAcao'>")
							}
						}]
					});
					e.append(objAddAusencia);

					$("#divAusenciaAcao").html("<table width='100%'>" +
																		"<tr>" +
																			"<td align='right' width='100%'>" + 
																			"<td align='right' style='padding-right:3px;'>" + 
																				"<div id='divAusenciaSalvar'/>&nbsp;" +
																			"</td>" +
																			"<td align='right' style='padding-right:3px;'>" + 
																				"<div id='divAusenciaExcluir'/>&nbsp;" +
																			"</td>" +
																			"<td align='right' style='padding-right:3px;'>" + 
																				"<div id='divAusenciaCancelar'/>" + 
																			"</td>" +
																		"</tr>" +
																"</table>");

					objAusenciaSalvar = $("#divAusenciaSalvar").dxButton({
					  icon	: "save",
					  text	: "Salvar",
					  type	: "success",
					  stylingMode : "contained",
					  onClick	: function(){
						  pCodGrupo = objGrupo.option("value");
							objForm = $("#divFormAddAusencia").dxForm("instance");
							pData 				= objForm.getEditor("data").option("text");
							pDia 					= objForm.getEditor("dia").option("value");
							pSalaLeito 		= objForm.getEditor("salaLeito").option("value");
							pHoraInicial 	= objForm.getEditor("horaInicial").option("text");
							pHoraFinal 		= objForm.getEditor("horaFinal").option("text");
							pDescricao 		= objForm.getEditor("descricao").option("value");
							if (pData == "") {
								DevExpress.ui.notify("Favor informar a Data.","warning");
								return	
							}
							if (pSalaLeito == "" || pSalaLeito == null) {
								DevExpress.ui.notify("Favor informar a Sala/Leito.","warning");
								return	
							}
							if (pDia == "" && (pHoraInicial == "" || pHoraFinal == "")) {
								DevExpress.ui.notify("Favor informar o horário do Bloqueio ou O Dia.","warning");
								return	
							}
							var pCodSala	= pSalaLeito.split("~")[0];
							var pCodLeito	= pSalaLeito.split("~")[1];
							$.get(urlPreparacao, { method:	"SalvarCadastrarAusencia", pCodGrupo: pCodGrupo,
								pCodSala: pCodSala, pCodLeito: pCodLeito, pData: pData, pIndicadordoDia: pDia, 
								pHoraInicial: pHoraInicial, pHoraFinal: pHoraFinal, pDescricao: pDescricao,
							},function(strRetorno){
								if (strRetorno == 1) {
									dataSourceSalaLeito.reload();
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
									listarAgenda();
								}else{
									DevExpress.ui.notify("Erro: "+strRetorno,"warning");
									return	
								}
							});
					  }
					}).dxButton("instance");	

					objAusenciaExcluir = $("#divAusenciaExcluir").dxButton({
						icon: "trash",
						text: "Excluir",
						disabled: true,
						type: "danger",
					  stylingMode : "contained",
					  onClick	: function(){
						  pCodGrupo = objGrupo.option("value");
							objForm 	= $("#divFormAddAusencia").dxForm("instance");
							pSalaLeito= objForm.getEditor("salaLeito").option("value");
							pCodSala	= pSalaLeito.split("~")[0];
							pCodLeito	= pSalaLeito.split("~")[1];
							pData 				= objForm.getEditor("data").option("text");
							$.get(urlPreparacao, { method:	"ExcluirCadastrarAusencia", pCodGrupo: pCodGrupo,
							pCodSala: pCodSala, pCodLeito: pCodLeito, pData: pData},function(strRetorno){
								if (strRetorno == 1) {
									listarAgenda();
									$("#divCadastroAusencia").dxPopup("hide");	
								}else{
									DevExpress.ui.notify("Erro: "+strRetorno,"warning");
									return	
								}
							});
					  }
					}).dxButton("instance");	

					objAusenciaCancelar = $("#divAusenciaCancelar").dxButton({
					  text	: "Cancelar",
					  type	: "default",
					  stylingMode : "contained",
					  onClick	: function(){
						  objForm = $("#divFormAddAusencia").dxForm("instance");
						  objForm.resetValues();
							$("#divCadastroAusencia").dxPopup("hide");	
					  }
					}).dxButton("instance");

				}
			});

			objControle = $("#divControle").dxForm({
				activeStateEnabled:true,
				formData: {},
				scrollingEnabled	: true,	
				height	:function() { return window.innerHeight - 150;},
				items: [{
					itemType: "group",
					colCount: 2,
					items:[{
						dataField	: "criadoPor",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "criadoEm",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "alteradoPor",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "alteradoEm",
						label		: {
							alignment: "right"
						},
						disabled	: true
					}]
				}]
			}).dxForm("instance");

			objLocAtendUnidade = $("#divLocAtendUnidade").dxSelectBox({
				disabled: true,
				dataSource: new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						loadMode: "raw",   
						load: function() {
							return $.get(urlSearch,{
								method						:	"GetLocal",
								pCodLocal					: "",
								pFlagUnidadeSaude	: 1,
								pFlagLocalAtivo		: 1
							});
						}
					})
				}),				
				onValueChanged: function(e) {
					dataSourceSalaAtendimento.reload();
				},
				valueExpr: "Location", 
				displayExpr: "LocationName",
				searchEnabled: true
			}).dxSelectBox("instance");	

			dataSourceSalaAtendimento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pUnidade = objLocAtendUnidade.option("value");
						if (pUnidade == null || pUnidade == "") {
							return [{CodigoSala: "", Nome: "Selecione a Unidade"}];	
						}
						return $.getJSON(urlSearch,{method:"GetSalasAtendimentos",pCodUnidade:pUnidade});
					}
				})
			});			

			objLocAtendSala = $("#divLocAtendSala").dxSelectBox({
				disabled: true,
				dataSource: dataSourceSalaAtendimento, 
				valueExpr: "CodigoSala", 
				displayExpr: "Nome",
				onValueChanged: function(e) {
					dataSourceLeitoAtendimento.reload();
				},
				searchEnabled: true,			
			}).dxSelectBox("instance");	
			
			dataSourceLeitoAtendimento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",   
					load: function() {
						var pUnidade = objLocAtendUnidade.option("value");
						var pSala 	 = objLocAtendSala.option("value");
						if (pUnidade == null || pUnidade == "" || pSala == null || pSala == "") {
							return [{CodigodoLeito: "T", Descricao: "Todos"}];	
						}
						return $.getJSON(urlPreparacao,{method:"GetLeitoAtendimentos",pCodUnidade:pUnidade,pCodSala:pSala});
					}
				})
			});			
			
			objLocAtendLeito = $("#divLocAtendLeito").dxSelectBox({
				disabled: true,
				dataSource: dataSourceLeitoAtendimento, 
				valueExpr: "CodigodoLeito", 
				displayExpr: "Descricao",
				searchEnabled: true,			
			}).dxSelectBox("instance");	
			
			$("#divLocAtendAcao").html("<table width='100%'>" +
																		"<tr>" +
																			"<td align='right'><div id='divLocAtendInserir'/></td>" +
																		"</tr>" +
																"</table>")
			
			objLocAtendInserir = $("#divLocAtendInserir").dxButton({
				disabled: true,
        icon	: "add",
        text	: "Inserir",
        type	: "success",
        stylingMode : "contained",
        onClick	: function(){
		  		pCodGrupo = objGrupo.option("value");
	      	pUnidade 	= objLocAtendUnidade.option("value");  
	      	pSala			= objLocAtendSala.option("value");
	      	pLeito		= objLocAtendLeito.option("value");
					if (pUnidade == null || pUnidade == "" || pSala == null || pSala == ""){
						DevExpress.ui.notify("Favor preencher os campos Unidade e Sala.","warning");
						return;
					}
	      	$.getJSON(urlPreparacao,{
		      	method:"SalvarLocalAtendimento",
		      	pCodGrupo:pCodGrupo,
		      	pUnidade:pUnidade,
		      	pSala:pSala,
		      	pLeito:pLeito
					},function(objRetorno){
						if (objRetorno.status==1){
			      	objLocAtendUnidade.option("value","");  
			      	objLocAtendSala.option("value","");
			      	objLocAtendLeito.option("value","");
							dataSourceLocalAtendimento.reload();
							DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
						}else{
							DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
						}
					});
	      }
			}).dxButton("instance");	

			dataSourceLocalAtendimento = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "id",
		  		loadMode: "raw",   
		  		load: function() {
			  		var pCodGrupo = objGrupo.option("value");
			  		if (pCodGrupo == null) {
				  		var pCodGrupo = "";
			  		}	
		      	return $.getJSON(urlPreparacao,{method:"GetLocalAtendimento",pCodGrupo:pCodGrupo});
		  		}					
				})
			});

			function excluirLeito(pCodUnidade, pCodSala, pCodLeito){
	  		var pCodGrupo = objGrupo.option("value");
				qtdeAdmissao = new Number(#server(VAR.CSP.VARCadGrupoAgendamento.ChecaAgendamento(pCodGrupo, pCodSala, pCodLeito))#);
				if (qtdeAdmissao > 0) {
					var result = DevExpress.ui.dialog.confirm("<i>Existe(m) "+qtdeAdmissao+" agendamento(s) para o leito, confirma e exclusão do leito?", "Confirmação");
					result.done(function(dialogResult) {
						if (!dialogResult) return
						var retorno = #server(VAR.CSP.VARCadGrupoAgendamento.ExcLocalAtendimento(pCodGrupo, pCodUnidade, pCodSala, pCodLeito, YBED))#;	
						if (retorno == 1) {
							dataSourceLocalAtendimento.reload()
						}else{
							DevExpress.ui.notify("Erro: "+retorno,"warning");
						}
					});
				}else{
					var result = DevExpress.ui.dialog.confirm("<i>Confirma e exclusão do leito?", "Confirmação");
					result.done(function(dialogResult) {
						if (!dialogResult) return
						$.get(urlPreparacao,{method:"ExcLocalAtendimento", pCodGrupo:pCodGrupo, pCodUnidade:pCodUnidade,
						pCodSala:pCodSala, pCodLeito:pCodLeito},function(retorno){
							if (retorno == 1) {
								dataSourceLocalAtendimento.reload()
							}else{
								DevExpress.ui.notify("Erro: "+retorno,"warning");
							}
						});	
					});
				}
			}

			objLocalAtendimento = $("#divLocalAtendimento").dxDataGrid({
				dataSource: dataSourceLocalAtendimento,
				disabled: true,
				columns: [
					{	dataField: "unidade", caption: "Unidade", alignment: "center",  groupIndex: 0},
					{	dataField: "sala", caption: "Sala", alignment: "center"},
					{	dataField: "leito", caption: "Leito/Equipamento", alignment: "center"},
	        {
	            dataField: "acao", caption: " ", alignment: "center", width: 100,
	            cellTemplate: function (contConf, optConf) {
	                contConf.html("<div style='width:80px;'>" +
	                    "<span onClick=excluirLeito('"+ optConf.data.codUnidade + "','"+ optConf.data.codSala + "','"+ optConf.data.codLeito + "');>" +
	                    "<i class='fas fa-trash-alt' title='Excluir Leito' style='color:#337AB7;cursor:pointer;' />" +
	                    "</span>" +
	                    "</div>");
	            }
	        }
				],
				columnChooser: { enabled: false, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "line", allowAdding: false, allowUpdating: false, allowDeleting: false, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: false },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() {
					return 250;
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: false }, 
			}).dxDataGrid("instance");

			dataSourceRestricaoConvenio = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "codigos",
		  		loadMode: "raw",   
		  		load: function() {
			  		var pCodGrupo = objGrupo.option("value");
			  		if (pCodGrupo == null) {
				  		var pCodGrupo = "";
			  		}	
		      	return $.getJSON(urlPreparacao,{method:"GetRestricaoConvenio",pCodGrupo:pCodGrupo});
		  		},
		  		insert: function (values) {
			  		var pCodGrupo = objGrupo.option("value");
		      	if (pCodGrupo == "" || pCodGrupo == "+") {
		      		return;
		      	}
		        objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARCadGrupoAgendamento.ArmRestricaoConvenio(pCodGrupo, objDados, YBED))#;
		    	},
					remove: function (key) {
			  		var pCodGrupo = objGrupo.option("value");
		      	if (pCodGrupo == "" || pCodGrupo == "+") {
		      		return;
		      	}
						var retorno = #server(VAR.CSP.VARCadGrupoAgendamento.ExcRestricaoConvenio(pCodGrupo, key, YBED))#;
		    	}					
				})
			});

			objRestricaoConvenio = $("#divRestricaoConvenio").dxDataGrid({
				dataSource: dataSourceRestricaoConvenio,
				disabled: true,
				columns: [
					{	dataField: "descConvenio", caption: "Convênio", alignment: "center",  groupIndex: 0},
					{	dataField: "descPlanoSaude", caption: "Plano de Saúde", alignment: "center", validationRules: [{ type: "required" }], 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descPlanoSaude = #server(User.Search.PesquisasJson.GetDescricaoPlanoSaude(value.split("~")[0], value.split("~")[1]))#;
							objLinha.defaultSetCellValue(rowData, descPlanoSaude);
							rowData.planoSaude = value;	
				  	}
				  },
					{	dataField: "criadoPor", caption: "Criado Por", alignment: "center", allowEditing: 0, visible: 0 },
					{	dataField: "criadoEm", caption: "Criado Em", alignment: "center", allowEditing: 0, visible: 0 },
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && e.dataField == "descPlanoSaude") {
						convenioAnt = "";
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlSearch,{
										method			:	"GetPlanoSaude",
										pCodProduto	: args
									});
								},
								load: function(args) {
									return $.getJSON(urlSearch,{
										method				:	"GetPlanoSaude",
										pSkip					:	args.skip,
										pTake					:	args.take,
										pSearchValue	:	args.searchValue
									});
								}
							})
						});
						e.editorOptions.value = e.row.data.codigos;
						e.editorOptions.displayExpr = "descPlanodeSaude";
						e.editorOptions.valueExpr = "codConvenioPlanodeSaude";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.itemTemplate = function (data, itemIndex, element) {
							if (convenioAnt != data.codConvenio){
								retorno = "<b><i>"+data.descConvenio+"</i></b><br><br>"
								convenioAnt = data.codConvenio
								element.append(retorno)
							}
							return element.append(data.descPlanoSaude);
						};
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: false, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() {
					return 250;
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
			}).dxDataGrid("instance");

			dataSourceRestricao = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "id",
		  		loadMode: "raw",   
		  		load: function() {
			  		var pCodGrupo = objGrupo.option("value");
			  		if (pCodGrupo == null) {
				  		var pCodGrupo = "";
			  		}	
		      	return $.getJSON(urlPreparacao,{method:"GetRestProcedSeq",pCodGrupo:pCodGrupo});
		  		},
		  		insert: function (values) {
			  		var pCodGrupo = objGrupo.option("value");
		      	if (pCodGrupo == "" || pCodGrupo == "+") {
		      		return;
		      	}
		      	var xCodGrupoRest = ""
		        objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								if (coluna == "procedimento") {
									var xCodGrupoRest = valor	
								}
								objDados.push(coluna+"~"+valor);
							}
						}
						if (xCodGrupoRest == pCodGrupo) {
							DevExpress.ui.notify("Erro: Grupo de Agendamento de Restrição inválido.","error");
							return
						}
						var retorno = #server(VAR.CSP.VARCadGrupoAgendamento.ArmRestProcedSeq(pCodGrupo, objDados, YBED))#;
		    	},
					remove: function (key) {
						var pCodGrupo = objGrupo.option("value");
		      	if (pCodGrupo == "" || pCodGrupo == "+") {
		      		return;
		      	}
		      	
						var retorno = #server(VAR.CSP.VARCadGrupoAgendamento.ExcRestProcedSeq(pCodGrupo, key, YBED))#;
		    	}					
				})
			});
			
			objRestricao = $("#divRestricao").dxDataGrid({
				dataSource: dataSourceRestricao,
				disabled: true,
				columns: [
					{	dataField: "procedimentoDesc", caption: "Procedimento", alignment: "center", validationRules: [{ type: "required" }], 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descItem = #server(User.Search.PesquisasJson.GetDescricaoINART(value))#;
							objLinha.defaultSetCellValue(rowData, descItem);
							rowData.procedimento = value;	
				  	}
				  },
					{	dataField: "tipo", caption: "Tipo", validationRules: [{ type: "required" }], alignment: "center", width: "120px",  
						lookup: {
							dataSource: {
								store: {
									type: 'array',
									data: [
										{ id: "B", name: 'Antes' },
										{ id: "L", name: 'Depois' },
									],
									key: "id" 
								},
							},
							valueExpr: 'id',
							displayExpr: 'name'
						}
					},
					{	dataField: "tempo", width: "120px", caption: "Tempo", validationRules: [{ type: "required" }], alignment: "center"},
					{	dataField: "criadoPor", caption: "Criado Por", alignment: "center", allowEditing: 0, visible: 0 },
					{	dataField: "criadoEm", caption: "Criado Em", alignment: "center", allowEditing: 0, visible: 0 },
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && (e.dataField == "tempo")) {
				    e.editorName = "dxTextBox";
				    e.editorOptions.mask = "99:99";
				    e.editorOptions.maxLength = 5
			    	e.editorOptions.value = e.row.data.tempo;
			    	e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.component._textValue);
						}
		      }  
					if (e.parentType == "dataRow" && e.dataField == "procedimentoDesc") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									var pCodGrupo = objGrupo.option("value");
			          	return $.getJSON(urlSearch,{
										method			:	"GetINARTT",
										pCodProduto	: "",
										pRequerAgendamento: 1
									});
								},
								load: function(args) {
									var pCodGrupo = objGrupo.option("value");
			          	return $.getJSON(urlSearch,{
										method			:	"GetINARTT",
										pCodProduto	: "",
										pRequerAgendamento: 1
									});
								}
							})
						});
						e.editorOptions.value = e.row.data.procedimento;
						e.editorOptions.displayExpr = "DescProduto";
						e.editorOptions.valueExpr = "CodProduto";						
						e.editorOptions.searchEnabled = true;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: false, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: function() {
					return 250;
				},
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fas fa-file-import",
							hint: "Importar Restrição de Procedimento em Sequência",
							onClick: function (e) {
								importarArquivo('028', "dataSourceRestricao.reload();");
							}
						}
					})
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
			}).dxDataGrid("instance");	
			
			function carregarDados(pCodGrupo) {
				$.getJSON(urlPreparacao, {	
					method	:	"GetDados",
					pCodGrupo: pCodGrupo,
				},function(objRetorno){
					console.log(objRetorno)
					$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 0)
					objGeral.option("formData", objRetorno.dadosGeral)
					objControle.option("formData", objRetorno.dadosControle)
					objForm.getEditor("situacao").option("value", objRetorno.situacao);
					//objGeral.getEditor("itens").option("value",objRetorno.dadosGeral.itens);
					if (objRetorno.dadosGeral.tipo == "PROCEDIMENTO") {
						objLocAtendUnidade.option("disabled", false);
						objLocAtendSala.option("disabled", false);
						objLocAtendLeito.option("disabled", false);
						objLocAtendInserir.option("disabled", false);
						dataSourceSalaAtendimento.reload();
						objLocalAtendimento.option("disabled", false);
						dataSourceLocalAtendimento.reload();
					}else{
						objLocAtendUnidade.option("disabled", true);
						objLocAtendSala.option("disabled", true);
						objLocAtendLeito.option("disabled", true);
						objLocAtendInserir.option("disabled", true);
						dataSourceSalaAtendimento.reload();
						objLocalAtendimento.option("disabled", true);
						dataSourceLocalAtendimento.reload();						
					}
					objRestricaoConvenio.option("disabled", false);
					dataSourceRestricaoConvenio.reload();
					objRestricao.option("disabled", false);
					dataSourceRestricao.reload();
				});
			}		

			/*$(document).ready(function () {
				objGrupo.option("value", "DESKTOP-L3OGMKA0000007");
				setTimeout(function(){
					$(".dx-tabpanel").dxTabPanel("instance").option("selectedIndex", 1);
					listarAgenda();
				}, 500);
			});*/
		</script>
	</body>
</html>
