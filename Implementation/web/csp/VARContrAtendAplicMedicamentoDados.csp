<div class="container-fluid">
	<div class="row">
		<div class="col-md-12 tituloRadio">
			<button onClick="exibirHistDadosVitais()" class="btn btn-info navbar-btn">
				Exibir Histórico
			</button>
		</div>
	</div>
	<div class="panel-body">
		<!--<div class="row">
			<div class="col-md-3 tituloRadio">Diagnóstico: Anemia Ferropriva:</div>
			<div class="col-md-2 campo"><div id="checkDiagnosticoPerdaSanguinea"></div></div>
			<div class="col-md-2 campo"><div id="checkDiagnosticoBariatrica"></div></div>
			<div class="col-md-2 campo"><div id="checkDiagnosticoOutros"></div></div>
		</div>
		<div class="row">
			<div class="col-md-2 tituloRadio">&nbsp;</div>
			<div class="col-md-1 tituloRadioNormal">Outros: </div>
			<div class="col-md-8 campo"><div id="textDiagnosticoOutros"></div></div>
		</div>-->
		<div class="row">
			<div class="col-md-2 titulo">Alergia:</div>
			<div class="col-md-1 campo"><div id="radioAlergia"></div></div>
			<div class="col-md-1 titulo">A que?:</div>
			<div class="col-md-6 campo"><div id="textAlergia"></div></div>
			<div class="col-md-1 campo"></div>
			<div class="col-md-1 campo fa-blink" style='font-weight: bold;text-align:center' id="divAlertaPrescricao">&nbsp;</div>
		</div>
		<div class="row">
			<div class="col-md-2 tituloRadio">Alerta</div>
			<div class="col-md-8 campo"><div id="textApliMedAlerta"></div></div>
		</div>
		<div class="row">
			<div class="col-md-2 tituloRadio">Diagnostico Secundário:</div>
			<div class="col-md-8 campo"><div id="textApliMedDiagnostico"></div></div>
		</div>
		<div class="row">
			<div class="col-md-12" Style="height:5px"></div>
		</div>
		<div class="row">
			<div class="col-md-10">
				<div class="row">
					<div class="col-md-2 titulo">Medicamento:</div>
					<div class="col-md-2 campo"><div id="selectDVItem"></div></div>
					<div class="col-md-2 campo"><div id="btnApliMedAdcionarItem" style="padding: 0px;"></div>&nbsp;<div id="btnDVExcluir" style="padding: 0px;"></div>&nbsp;<div id="btnDVImprimir" style="padding: 0px;"></div></div>
					<div class="col-md-6 campo"><div id="textApliMedMedicamento"></div></div>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				<div id="divMedicamento"><div id="divMedicamentoExibir"></div></div>
			</div>	
		</div>
	</div>
</div>
<div id="divExibirHistoricoDados"></div>
<script type="text/javascript">
	var medicamentoDados = "";
	var solucaoDados = "";
	
	dataSourceAplicMedicamento = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		key: "sequencia",
  		loadMode: "raw",   
  		load: function() {
	  		preencherIcones();
      	var pItem = campoDVItem.option("value");
      	return $.getJSON(urlPreparacao,{method:"GetAplicMedicamento",pCodProntuario:pCodProntuario,pItem:pItem});
  		},
  		insert: function (values) {
	  		console.log(values)
      	var pItem = campoDVItem.option("value");
        objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendAplicMedicamento.ArmAplicMedicamento(pCodProntuario, pItem, "", objDados, YBED))#;
    	},
			update: function (key, values) {
      	console.log(values)
      	var pItem = campoDVItem.option("value");
				var idRow = key;
				objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendAplicMedicamento.ArmAplicMedicamento(pCodProntuario, pItem, idRow, objDados, YBED))#;
			},
			remove: function (key) {
      	var pItem = campoDVItem.option("value");
				#server(VAR.CSP.VARContrAtendAplicMedicamento.ExcluirAplicMedicamento(pCodProntuario, pItem, key, YBED))#;
    	}					
		})
	});
	
	dataSourceReacao = [{id: 0, descricao: "Não"},{id: 1, descricao: "Sim"}]
	
	dataSourceRespAplMedicamento = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			load: function(args) {
				return $.getJSON(urlPreparacaoQui,{method:"CarregaProfissional", pFiltro: args.searchValue,
					pTake: args.take, pSkip: args.skip, YLOCATION: YLOCATION});
			},
			byKey: function(args) {
				return $.getJSON(urlPreparacaoQui,{method:"CarregaProfissional", pKey: args, YLOCATION: YLOCATION});
			}
		})
	});

	dataSourceDroga = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			load: function(args) {
				return $.getJSON(urlPreparacaoQui,{method:"CarregaProdutos", pFiltro: args.searchValue,
					pTake: args.take, pSkip: args.skip, YLOCATION: YLOCATION});
			},
			byKey: function(args) {
				return $.getJSON(urlPreparacaoQui,{method:"CarregaProdutos", pKey: args, YLOCATION: YLOCATION});
			}
		})
	});

	/*campoDiagnosticoPerdaSanguinea = $("#checkDiagnosticoPerdaSanguinea").dxCheckBox({text: " Perda Sanguínea (D50.0)"}).dxCheckBox("instance");
	campoDiagnosticoBariatrica = $("#checkDiagnosticoBariatrica").dxCheckBox({text: " Bariátrica (D50.8 + E66)"}).dxCheckBox("instance");
	campoDiagnosticoOutros = $("#checkDiagnosticoOutros").dxCheckBox({text: " Outros D50.9"}).dxCheckBox("instance");
	campoTextDiagnosticoOutros = $("#textDiagnosticoOutros").dxTextBox({height: 27}).dxTextBox("instance");*/
	campoSelAlergia = $("#radioAlergia").dxRadioGroup({
		dataSource: [{text: "Não", value: "0"},{text: "Sim", value: "1"}], 
		layout: "horizontal", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoAlergia.option({disabled: 0});
			}else{
				campoAlergia.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoAlergia = $("#textAlergia").dxTextArea({visible:true,disabled: 1}).dxTextArea("instance");
	campoApliMedAlerta = $("#textApliMedAlerta").dxTextBox({height: 27}).dxTextBox("instance");
	campoApliMedDiagnostico = $("#textApliMedDiagnostico").dxTagBox({
		valueExpr: "Codigo", 
		displayExpr: "Descricao",
		searchEnabled: true,
		buttons: [{
			name: "btnPesquisarApliMedDiagnostico",
			location: "before",
			options: {
				hint: "Pesquisar",
				icon: "fa fa-search",
				type: "normal",
				onClick: function() {
					abrePesquisaCID(campoApliMedDiagnostico, campoApliMedDiagnostico.option("value"));
				}
			}
		}],
		itemTemplate: function (data, itemIndex, element) {
			if (CategoriaAnt != data.Categoria){
				retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
				CategoriaAnt = data.Categoria
				element.append(retorno)
			}
			return element.append(data.Descricao)
    },							
		dataSource: new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				byKey: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"getCID",
						codigo: args
					});
				},
				load: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"getCID",
						usuario: YBED,
						skip:args.skip,
						take:args.take,
						searchValue:args.searchValue
					});
				}
			})
		})
	}).dxTagBox("instance");

	dataSourceItem = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			load: function(args) {
				return $.getJSON(urlPreparacao,{method:"GetItem",pCodProntuario:pCodProntuario});
			}
		})
	});

	campoDVItem = $("#selectDVItem").dxSelectBox({
		dataSource: dataSourceItem, valueExpr: "item", displayExpr: "item", 
		 showClearButton: 1, onValueChanged: function (e) {  
			if (e.value != "" && e.value != null) {
				buttonDVExcluir.option("disabled",false);
				buttonDVImprimir.option("disabled",false);
				medicamentoDados = "";
				solucaoDados = "";
				$.getJSON(urlPreparacao,{method:"GetDadosItem",pCodProntuario:pCodProntuario,
				pItem:e.value},function(objetoRetorno){
					medicamentoDados = objetoRetorno.descMedicamento;
					solucaoDados = objetoRetorno.sf;
					$("#textApliMedMedicamento").html(
						"<b>Medicamento:</b> " + objetoRetorno.descMedicamento + "<br>" +
						"<b>Lote:</b> " + objetoRetorno.lote +
						" &nbsp;<b>Validade:</b> " + objetoRetorno.validade + 
						" &nbsp;<b>Quantidade:</b> " + objetoRetorno.qtde +"<br>" +
						"<b>Solução:</b> " + objetoRetorno.sf + "" +
						" &nbsp;<b>Via de Infusão:</b> " + objetoRetorno.viadeInfusao +
						" &nbsp;<b>Tempo de Infusão:</b> " + objetoRetorno.tempodeInfusao + "<br>" +
						"<b>Data/Hora de Início:</b> " + objetoRetorno.dataInicio + " " + objetoRetorno.horaInicio +
						" &nbsp;<b>Data/Hora de Término:</b> " + objetoRetorno.dataTermino + " " + objetoRetorno.horaTermino
					);
					//campoApliMedMedicamento.option("value",objetoRetorno.descMedicamento);
					dataSourceAplicMedicamento.reload();
					listaGrid()
					//$("#divDados").dxDataGrid("instance").option("disabled",objetoRetorno.status);
				});
			}else{
				medicamentoDados = "";
				solucaoDados = "";
				buttonDVExcluir.option("disabled",true);
				buttonDVImprimir.option("disabled",true);
				$("#textApliMedMedicamento").html("");
				dataSourceAplicMedicamento.reload();
				listaGrid()
				//$("#divDados").dxDataGrid("instance").option("disabled",1);
			}
		}	
	}).dxSelectBox("instance");
	//campoApliMedMedicamento = $("#textApliMedMedicamento").dxTextBox({ readOnly: 1}).dxTextBox("instance");
	buttonApliMedAdcionar = $("#btnApliMedAdcionarItem").dxButton({
		icon:"add",onClick: function(){
			pItem = campoDVItem.option("value");
			$.getJSON(urlPreparacao,{method:"GetDadosItem",pCodProntuario:pCodProntuario,
			pItem:pItem},function(objetoRetorno){
				$("#divCadastrarItem").dxPopup("show");
				$("#formCadastrarItem").dxForm("instance").getEditor("Item").option("value",pItem);
				$("#formCadastrarItem").dxForm("instance").getEditor("Medicamento").option("value",objetoRetorno.medicamento);
				$("#formCadastrarItem").dxForm("instance").getEditor("Quantidade").option("value",objetoRetorno.qtde);
				$("#formCadastrarItem").dxForm("instance").getEditor("SF").option("value",objetoRetorno.sf);
				$("#formCadastrarItem").dxForm("instance").getEditor("ViaInfusao").option("value",objetoRetorno.viadeInfusao);
				$("#formCadastrarItem").dxForm("instance").getEditor("TempoInfusao").option("value",objetoRetorno.tempodeInfusao);
				$("#formCadastrarItem").dxForm("instance").getEditor("DataInicio").option("value",objetoRetorno.dataInicio);
				$("#formCadastrarItem").dxForm("instance").getEditor("HoraInicio").option("value",objetoRetorno.horaInicio);
				$("#formCadastrarItem").dxForm("instance").getEditor("DataTermino").option("value",objetoRetorno.dataTermino);
				$("#formCadastrarItem").dxForm("instance").getEditor("HoraTermino").option("value",objetoRetorno.horaTermino);
				$("#formCadastrarItem").dxForm("instance").getEditor("Lote").option("value",objetoRetorno.lote);
				$("#formCadastrarItem").dxForm("instance").getEditor("Validade").option("value",objetoRetorno.validade);
			});
		}
	}).dxButton("instance");

	buttonDVExcluir = $("#btnDVExcluir").dxButton({
		icon:"trash",hint:"Excluir Item",disabled:true,onClick: function(){
			var result = DevExpress.ui.dialog.confirm("<i>Confirmar a exclusão da Sequência de Medicamento?</i>", "Confirmação?");
				result.done(function(dialogResult) {
				if (!dialogResult) {
					return;	
				}
				pItem = campoDVItem.option("value");
				$.get(urlPreparacao,{method:"ApagarItem",pCodProntuario:pCodProntuario,
				pItem:pItem},function(objetoRetorno){
					dataSourceItem.reload();
					dataSourceMedicamentoReacao.reload();
					campoDVItem.option("value",null);
					DevExpress.ui.notify("Item excluido com sucesso!","success");
				});
			});
		}
	}).dxButton("instance");

	buttonDVImprimir = $("#btnDVImprimir").dxButton({
		icon:"print",hint:"Imprimir Etiqueta",disabled:true,onClick: function(){
			$("#divImprimirEtiquetaDados").dxPopup("show");
		}
	}).dxButton("instance");


	function listaGrid(){
		columnsArray = [
			{	dataField: "sequenciaLivre", caption: "Seq.", alignment: "center", allowEditing: 1, width: 80}, 
			{	dataField: "data", caption: "Data", alignment: "center", allowEditing: 1, 
				dataType: "date", width: 100 },
			{	dataField: "hora", caption: "Hora", alignment: "center", allowEditing: 1, 
				width: 70, },
			{	dataField: "pressaoArterial", caption: "Presão Arterial", alignment: "center", 
				width: 80,  },
			{	dataField: "pulso", caption: "Pulso", alignment: "center", dataType: "number", 
				width: 80,  },
			{	dataField: "temperatura", caption: "Tempera- tura", alignment: "center", dataType: "number", 
				width: 80,  },
			{	dataField: "reacao", caption: "Reação", alignment: "center", width: 80, 
	       lookup: { 
	      	dataSource: dataSourceReacao,
	        valueExpr: "id",
	        displayExpr: "descricao"
	      }
			},
			{	dataField: "alergia", caption: "Alergia", alignment: "center", width: 80, 
	      lookup: { 
	      	dataSource: dataSourceReacao,
	        valueExpr: "id",
	        displayExpr: "descricao"
	      }
			},
			{	dataField: "tipoAlergia", caption: "Tipo de Alergia", width: 200},
			{	dataField: "funcionarioNome", caption: "Funcionário", alignment: "center", 
				validationRules: [{ type: "required" }], setCellValue: function (rowData, value) {
	        if (value == "" || value == null) return
	        objLinha = this;
	        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaProfissional(value))#;
	        retorno = retorno.split("~"); 
					if (retorno[0] == 0) {
						DevExpress.ui.notify(retorno[1],"warning",2000);
						return;	
					}
					objLinha.defaultSetCellValue(rowData, retorno[2]);
					rowData.funcionario = retorno[1];	
		  	}, }

		];
	 	flagEdicao = true;
		if (campoDVItem.option("value") == "" || campoDVItem.option("value") == null) {
			flagEdicao = false;
			columnsArray = [
				{	dataField: "item", caption: "Medicamento", alignment: "center", allowEditing: 0, groupIndex: 0 },
				{	dataField: "sequenciaLivre", caption: "Seq.", alignment: "center", allowEditing: 1, width: 100}, 
				{	dataField: "data", caption: "Data", alignment: "center", allowEditing: 1, 
					dataType: "date", width: 100, validationRules: [{ type: "required" }] },
				{	dataField: "hora", caption: "Hora", alignment: "center", allowEditing: 1, 
					width: 70, validationRules: [{ type: "required" }] },
				{	dataField: "pressaoArterial", caption: "Presão Arterial", alignment: "center", 
					width: 80, validationRules: [{ type: "required" }] },
				{	dataField: "pulso", caption: "Pulso", alignment: "center", dataType: "number", 
					width: 80, validationRules: [{ type: "required" }] },
				{	dataField: "temperatura", caption: "Tempera- tura", alignment: "center", dataType: "number", 
					width: 80, validationRules: [{ type: "required" }] },
				{	dataField: "reacao", caption: "Reação", alignment: "center", width: 80, 
		      validationRules: [{ type: "required" }], lookup: { 
		      	dataSource: dataSourceReacao,
		        valueExpr: "id",
		        displayExpr: "descricao"
		      }
				},
				{	dataField: "alergia", caption: "Alergia", alignment: "center", width: 80, 
		      validationRules: [{ type: "required" }], lookup: { 
		      	dataSource: dataSourceReacao,
		        valueExpr: "id",
		        displayExpr: "descricao"
		      }
				},
				{	dataField: "tipoAlergia", caption: "Tipo de Alergia", width: 200},
				{	dataField: "funcionarioNome", caption: "Funcionário", alignment: "center", 
					validationRules: [{ type: "required" }], setCellValue: function (rowData, value) {
		        if (value == "" || value == null) return
		        objLinha = this;
		        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaProfissional(value))#;
		        retorno = retorno.split("~"); 
						if (retorno[0] == 0) {
							DevExpress.ui.notify(retorno[1],"warning",2000);
							return;	
						}
						objLinha.defaultSetCellValue(rowData, retorno[2]);
						rowData.funcionario = retorno[1];	
			  	}, 
			  }
			];
		}		
		if ($("#divMedicamentoExibir")) $("#divMedicamentoExibir").remove();
		$("#divMedicamento").html("<div class='col-md-12' id='divMedicamentoExibir'></div>");
		$("#divMedicamentoExibir").dxDataGrid({
		dataSource: dataSourceAplicMedicamento,
		columns: columnsArray,
		onEditingStart: function(e) {
			var situacao = e.data.alergia;
			if (situacao != 1 && e.column.dataField == "tipoAlergia"){
				e.cancel = true;
			}
		},		
		onEditorPreparing: function(e) {
			if (e.parentType == "dataRow" && (e.dataField == "tipoAlergia")) {
				e.editorName = "dxTextArea"; 
      }  
			if (e.parentType == "dataRow" && e.dataField == "medicacaoDesc") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceDroga;
				e.editorOptions.value = e.row.data.medicacao;
				e.editorOptions.displayExpr = "DescProduto";
				e.editorOptions.valueExpr = "CodProduto";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.showClearButton = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}
	    if (e.parentType == "dataRow" && e.dataField == "hora") {
		    e.editorName = "dxTextBox";
		    e.editorOptions.mask = "99:99";
		    e.editorOptions.maxLength = 5
	    	e.editorOptions.value = e.row.data.hora;
	    	e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.component._textValue);
				}
	    }
	    if (e.parentType == "dataRow" && e.dataField == "pressaoArterial") {
		    e.editorName = "dxTextBox";
		    e.editorOptions.mask = "999/999";
		    e.editorOptions.maxLength = 5
	    	e.editorOptions.value = "";
	    	e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.component._textValue);
				}
	    }
	    if (e.parentType == "dataRow" && e.dataField == "funcionarioNome") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceRespAplMedicamento;
				e.editorOptions.value = e.row.data.funcionario;
				e.editorOptions.displayExpr = "DescProvider";
				e.editorOptions.valueExpr = "CodProvider";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.showClearButton = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}
		},
		onRowPrepared: function(e) {
			if (e.rowType == 'group' && e.values[0] == 'NC') {
				e.rowElement.addClass('group-nao-compareceu')
				.children().addClass('group-nao-compareceu');
				
				e.rowElement.find("td:eq(1)").text("Não compareceu");
			}
			else if (e.rowType == 'data' && e.data.status == 4) {
				e.rowElement.addClass('nao-compareceu')
				.children().addClass('nao-compareceu');
				preencherIcones();
			}
			
		},
		columnChooser: { enabled: false, mode: "dragAndDrop"},
		allowColumnReordering: false,
		editing: {
			mode: "batch", // Specifying the edit mode
			allowAdding: flagEdicao, // Enable editing
			allowUpdating: flagEdicao, // Enable editing
			allowDeleting: flagEdicao,
			useIcons: true
		},
		columnAutoWidth: false,
		showColumnLines: true,
		showRowLines: true,
		rowAlternationEnabled: true,
		hoverStateEnabled: true,
		showBorders: true,
		headerFilter: { visible: false },
		groupPanel: { visible: false, allowColumnDragging: true },
		columnFixing: { enabled: false },
		filterRow: { visible: false },		height: 400,
		export: { enabled: false },
		stateStoring: { enabled: false }, 
			wordWrapEnabled: true,
			onToolbarPreparing: function(e) {
				e.toolbarOptions.items.unshift({
					location: "after",
					widget: "dxButton",
					options: {
						icon: "fas fa-check-double",
						height: 36,
						width: 36,
						hint: "Finalizar a Medicação",
						onClick: function(e) {
							if (campoDVItem.option("value") == "" || campoDVItem.option("value") == null) {
								DevExpress.ui.notify("Selecione a Medicação.","warning",1500);
								return;
							}
							
							var result = DevExpress.ui.dialog.confirm("<i>Confirmar a finalização da bolsa?</i>", "Confirmação?");
							result.done(function(dialogResult) {
								if (dialogResult) {
									$.get(urlPreparacao,{method:"ArmFinalizarItem",pCodProntuario:pCodProntuario,
									pItem:campoDVItem.option("value")},function(rs){
										campoDVItem.option("value",null);
										DevExpress.ui.notify("Medicação finalizada com sucesso!","success");
									});
								}
							});
						}
					}
				})
			}
	});	
	}
	listaGrid();
	
	function exibirHistDadosVitais() {
		$("#divExibirHistoricoDados").dxPopup("show");
		dataSourceHistDadosVitais.reload();
	}
	
	var dataSourceHistDadosVitais = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			loadMode: "raw",   
			load: function(){
				var deferred = $.Deferred();
				return $.getJSON(urlPreparacao, { 
					method: "historicoDadosVitais",
					pCodProntuario: pCodProntuario
				},
				function(data){
					console.log(data);
					deferred.resolve(data.map(function(item){
						if (item.admissao) {
							var text = $('<i>').html(item.admissao + " &bull; " + item.dataHora).html();
							item.admissao = text;
						}
						return item;
					}));
				});
				return deferred.promise();
			},
		})
	});
	
	$("#divExibirHistoricoDados").dxPopup({
		visible: false,
		title: "Exibir Histórico",
		closeOnOutsideClick : true,
		width: 1100,
		height: 580,
		position: {
			my: "center",
			at: "center",
			of: window
		},
		dragEnabled: true,
		contentTemplate: function(e) {
			var form = $("<div id='formExibirHistoricoDadosVitais'>").dxDataGrid({
				dataSource: dataSourceHistDadosVitais,
				columns: [
					{dataField: "admissao", caption: "Admissão", alignment: "left", width: 120, fixed: 0, fixedPosition: 'left', alignment: "center", groupIndex: 0 },
//					{dataField: "dataHora", caption: "Data/Hora", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					
//					{dataField: "alergia", caption: "Alergia", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
//					{dataField: "alerta", caption: "Alerta", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
//					{dataField: "diagnostico", caption: "Diagnóstico", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
//					{dataField: "diagnosticoSecundario", caption: "Diagnóstico Secund.", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					
					{dataField: "medicamento", caption: "Medicamento", width: 350, fixed: 0, fixedPosition: 'left',alignment: "right" },
					{dataField: "quantidade", caption: "Quantidade", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "lote", caption: "Lote", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "validade", caption: "Validade", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "solucao", caption: "Solução", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "viadeInfusao", caption: "Via de Infusão", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "tempoInfusao", caption: "Tempo Infusão", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "datadeInicio", caption: "Dt. Início", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "datadeTermino", caption: "Dt. Término", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					
				],
				editing:{allowEditing : false},
				allowColumnReordering: true,
				columnAutoWidth: true,
				allowColumnResizing: true,
				height: "100%",	
				headerFilter: { visible: false },
				hoverStateEnabled: true,
				filterRow: { visible: false },
				showBorders: true,
				showRowLines: true,
				grouping: { autoExpandAll: false },
				searchPanel: { visible: false }, 
				groupPanel: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				columnChooser: { enabled: false, mode: "dragAndDrop" },
				sorting: { mode: "multiple" },
				rowAlternationEnabled: true,
				wordWrapEnabled:true,
				pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [20, 50, 100, 150, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 20 },
	    	grouping: {
		      autoExpandAll: true,
		    }
			});
			
			e.append(form);
		}        		
	});
</script>
