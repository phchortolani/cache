<script language="Cache" runat="server">
	Set YBED = $get(%request.Data("YBED", 1))
	Set flagUsuarioMedico = +$$GetChecaMedico^VARSQL(YBED)
</script>
<div class="container-fluid">
	<div class="row">
		<div class="col-md-12 tituloRadio">
			<button onClick="exibirHistDadosVitais()" class="btn btn-info navbar-btn">
				Exibir Histórico
			</button>
		</div>
	</div>
	<div class="row">
		<div class="col-md-2 titulo">Medicamentos em Uso:</div>
		<div class="col-md-8 campo"><div id="textMedicacoes"></div></div>
		<div class="col-md-1 campo"></div>
		<div class="col-md-1 campo fa-blink" style='font-weight: bold;text-align:center' id="divAlertaPrescricao">&nbsp;</div>
	</div>
	<div class="row">
		<div class="col-md-2 titulo">Observações Médicas:</div>
		<div class="col-md-8 campo"><div id="textOrientacoes"></div></div>
		<div class="col-md-2 campo"></div>
	</div>
	<div class="row">
		<div class="col-md-2 titulo">Alergia:</div>
		<div class="col-md-1 campo"><div id="radioAlergia"></div></div>
		<div class="col-md-1 titulo">A que?:</div>
		<div class="col-md-6 campo"><div id="textAlergia"></div></div>
		<div class="col-md-2 campo"></div>
	</div>
	<div class="row">
		<div class="col-md-12" style="height:5px"></div>
	</div>
	<div class="row">
		<div class="col-md-12">
			<div id="divDadosLanc"></div>
		</div>	
	</div>
</div>
<div id="divExibirHistoricoDados"></div>
<script type="text/javascript">
	var flagUsuarioMedico = "#(flagUsuarioMedico)#";
	dataSourceDados = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		key: "sequencia",
  		loadMode: "raw",   
  		load: function() {
      	return $.getJSON(urlPreparacao,{method:"GetDados",pCodProntuario:pCodProntuario});
  		},
  		insert: function (values) {
        objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendSangriaTerapeutica.ArmDados(pCodProntuario, "", objDados, YBED))#;
    		preencherIcones();
    	},
			update: function (key, values) {
				var idRow = key;
				objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendSangriaTerapeutica.ArmDados(pCodProntuario, idRow, objDados, YBED))#;
				preencherIcones();
			},
			remove: function (key) {
				#server(VAR.CSP.VARContrAtendSangriaTerapeutica.ExcluirDados(pCodProntuario, key, YBED))#;
    		preencherIcones();
    	}					
		})
	});
	dataSourceResponsavel = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			load: function(args) {
				return $.getJSON(urlPreparacaoQui,{method:"CarregaProfissional", pFiltro: args.searchValue,
					pTake: args.take, pSkip: args.skip, YLOCATION: YLOCATION});
			},
			byKey: function(args) {
				return $.getJSON(urlPreparacaoQui,{method:"CarregaProfissional", pKey: args, YLOCATION: YLOCATION});
			}
		})
	});
	//
	campoMedicacoes = $("#textMedicacoes").dxTextArea({visible:true,readOnly: (flagUsuarioMedico == 0 ? true : false),}).dxTextArea("instance");
	campoOrientacoes = $("#textOrientacoes").dxTextArea({
		readOnly: (flagUsuarioMedico == 0 ? true : false),
	}).dxTextArea("instance");
	campoSelAlergia = $("#radioAlergia").dxRadioGroup({
		dataSource: [{text: "Não", value: "0"},{text: "Sim", value: "1"}], 
		layout: "horizontal", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoAlergia.option({disabled: 0});
			}else{
				campoAlergia.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoAlergia = $("#textAlergia").dxTextArea({visible:true,disabled: 1}).dxTextArea("instance");
	//
	$("#text").find("input").css({ "background": "red" });
	//
	$("#divDadosLanc").dxDataGrid({
		dataSource: dataSourceDados,
		columns: [
			{	dataField: "sequenciaLivre", caption: "Seq", allowEditing: 1, width: 100 },
			{	dataField: "data", caption: "Data", alignment: "center", allowEditing: 1, 
				dataType: "date", width: 100 },
			{	dataField: "hora", caption: "Hora", alignment: "center", allowEditing: 1, 
				width: 70 },
			{	dataField: "peso", caption: "Peso", alignment: "center", allowEditing: 1, 
				dataType: "number", width: 100 },
			{	dataField: "hbHt", caption: "Hb/Ht", alignment: "center", allowEditing: 1, 
				width: 100 },
			{	dataField: "volumeRetirado", caption: "Vol. Retirado", alignment: "center", allowEditing: 1, 
				dataType: "number", width: 100 },
			{	dataField: "sF09", caption: "SF 0,9%", alignment: "center", allowEditing: 1, 
				dataType: "number", width: 100 },
			{	dataField: "pAPre", caption: "PA (Pré)", alignment: "center", allowEditing: 1, 
				width: 100 },
			{	dataField: "fCPre", caption: "FC (Pré)", alignment: "center", allowEditing: 1, 
				width: 100 },
			{	dataField: "temperaturaPre", caption: "Temp (Pré)", alignment: "center", allowEditing: 1, 
				dataType: "number", width: 100 },
			{	dataField: "pAPos", caption: "PA (Pós)", alignment: "center", allowEditing: 1, 
				width: 100 },
			{	dataField: "fCPos", caption: "FC (Pós)", alignment: "center", allowEditing: 1, 
				width: 100 },
			{	dataField: "func", caption: "Func", alignment: "center", allowEditing: 0, 
				width: 200 },
			{	dataField: "medico", caption: "Médico", alignment: "center", allowEditing: 0,
				width: 300
		  },
			{	dataField: "situacaoDesc", caption: "Situação", alignment: "center", width: 80, 
				setCellValue: function (rowData, value) {
	        if (value == "" || value == null) {
		        var situacaoDesc = "Ativo"
		        var situacao = "A"
	        }else{
		      	if (value == "A") {
			        var situacaoDesc = "Ativo"
			        var situacao = "A"
		      	}else{
			        var situacaoDesc = "Inativo"
			        var situacao = "I"
		      	}
	        }
	        objLinha = this;
					objLinha.defaultSetCellValue(rowData, situacaoDesc);
					rowData.situacao = situacao;	
		  	},
			} 
		],
		onEditorPreparing: function(e) {
			if (e.parentType == "dataRow" && e.dataField == "nomeMedico") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceResponsavel;
				e.editorOptions.value = e.row.data.responsavel;
				e.editorOptions.displayExpr = "DescProvider";
				e.editorOptions.valueExpr = "CodProvider";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
	    }
			if (e.parentType == "dataRow" && e.dataField == "situacaoDesc") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = [{"id":"A","text":"Ativo"},{"id":"I","text":"Inativo"}];
				e.editorOptions.value = e.row.data.responsavel;
				e.editorOptions.displayExpr = "text";
				e.editorOptions.valueExpr = "id";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
	    }
	    if (e.parentType == "dataRow" && e.dataField == "hora") {
		    e.editorName = "dxTextBox";
		    e.editorOptions.mask = "99:99";
		    e.editorOptions.maxLength = 5
	    	e.editorOptions.value = e.row.data.hora;
	    	e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.component._textValue);
				}
	    }
	    if (e.parentType == "dataRow" && (e.dataField == "pAPre")) {
		    e.editorName = "dxTextBox";
		    e.editorOptions.mask = "999/999";
		    e.editorOptions.maxLength = 5
	    	e.editorOptions.value = e.row.data.pAPre;
	    	e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.component._textValue);
				}
	    }
	    if (e.parentType == "dataRow" && (e.dataField == "pAPos")) {
		    e.editorName = "dxTextBox";
		    e.editorOptions.mask = "999/999";
		    e.editorOptions.maxLength = 5
	    	e.editorOptions.value = e.row.data.pAPos;
	    	e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.component._textValue);
				}
	    }
		},
		columnChooser: { enabled: false, mode: "dragAndDrop"},
		allowColumnReordering: false,
		editing: {
			mode: "batch", // Specifying the edit mode
			allowAdding: true, // Enable editing
			allowUpdating: true, // Enable editing
			allowDeleting: false,
			useIcons: true
		},
		onEditingStart: function(e) {
			var situacao = e.data.situacao;
			var codigoProntuarioEletronic = e.data.codigoProntuarioEletronic;
			if (situacao == "I" || (typeof codigoProntuarioEletronic!="undefined" && codigoProntuarioEletronic != pCodProntuario)){
				e.cancel = true;
			}
		},
		onRowPrepared: function(e){
			if (e.rowType == "data" && e.data.status == 4 && e.data.codigoProntuarioEletronic == "") {
				e.rowElement.addClass("nao-compareceu")
				.children().addClass("nao-compareceu");
				e.rowElement.children().eq(3).text("Não compareceu");
				preencherIcones();
			}
		},	
		columnAutoWidth: false,
		showColumnLines: true,
		showRowLines: true,
		rowAlternationEnabled: true,
		hoverStateEnabled: true,
		showBorders: true,
		headerFilter: { visible: false },
		groupPanel: { visible: false, allowColumnDragging: true },
		columnFixing: { enabled: false },
		filterRow: { visible: false },
		height:function(){
			return window.innerHeight-420
		},
		export: { enabled: false },
		stateStoring: { enabled: false }, 
		wordWrapEnabled: true
	});
	
	function exibirHistDadosVitais() {
		$("#divExibirHistoricoDados").dxPopup("show");
		dataSourceHistDadosVitais.reload();
	}
	
	var dataSourceHistDadosVitais = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			loadMode: "raw",   
			load: function(){
				return $.getJSON(urlPreparacao, { 
					method: "historicoDadosVitais",
					pCodProntuario: pCodProntuario
				},
				function(data){
					//console.log(data);
				});
			},
		})
	});
	
	$("#divExibirHistoricoDados").dxPopup({
		visible: false,
		title: "Exibir Histórico",
		closeOnOutsideClick : true,
		width: 1100,
		height: 580,
		position: {
			my: "center",
			at: "center",
			of: window
		},
		dragEnabled: true,
		contentTemplate: function(e) {
			var form = $("<div id='formExibirHistoricoDadosVitais'>").dxDataGrid({
				dataSource: dataSourceHistDadosVitais,
				columns: [
					{dataField: "admissao", caption: "Admissão", alignment: "left", width: 120, fixed: 0, fixedPosition: 'left', alignment: "center" },
					{dataField: "dataHora", caption: "Data/Hora", width: 130, fixed: 0, fixedPosition: 'left',alignment: "center" },
					
					{dataField: "diagnostico", caption: "Diagnóstico", width: 300, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "medicacoes", caption: "Medicações", width: 300, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "orientacoesReacoesAlertas", caption: "Observações Med.", width: 300, fixed: 0, fixedPosition: 'left',alignment: "center" },
					{dataField: "alergia", caption: "Alergia", width: 200, fixed: 0, fixedPosition: 'left',alignment: "center" },
				],
				editing:{allowEditing : false},
				allowColumnReordering: true,
				columnAutoWidth: true,
				allowColumnResizing: true,
				height: "100%",	
				headerFilter: { visible: false },
				hoverStateEnabled: true,
				filterRow: { visible: false },
				showBorders: true,
				showRowLines: true,
				grouping: { autoExpandAll: false },
				searchPanel: { visible: false }, 
				groupPanel: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				columnChooser: { enabled: false, mode: "dragAndDrop" },
				sorting: { mode: "multiple" },
				rowAlternationEnabled: true,
				wordWrapEnabled:true,
				pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [20, 50, 100, 150, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 20 },
			});
			
			e.append(form);
		}        		
	});
	//
</script>
