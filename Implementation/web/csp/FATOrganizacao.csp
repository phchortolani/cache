<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 		= $get(%request.Data("YBED", 1))
		set YM 			= $get(%request.Data("YM", 1))
		set YLOCATION	= $get(%request.Data("YLOCATION", 1))

		set PortCache 	= $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 		= %request.Application
		set host 		= %request.CgiEnvs("HTTP_HOST")
		set url			= "http://"_host_app
		;
		set param="EP=1&YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set paramEncrypt = $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)
		
		set URLPreparacao	= "VAR.CSP.FATOrganizacao.cls"
		set URLLogin 		= "COMLogin.cls"

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Organizações</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme20.2.4/Lib/css/dx.light.compact.css" />

	    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalincv2.css" id="style_color" />

	</head>
	<script type="text/javascript">

		var alterado = 0;
		var carregarDados = 1;
		var codRegraGlobal = "";
		var flVoltaCodigo = 0;

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'
		var YBED = '#(YBED)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="loadpanel"></div>
		<div id="popover"></div>
		
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao	= '#(URLPreparacao)#';

			$.ajaxSetup({
			  headers : {   
			    'id_key' : '#(paramEncrypt)#'
			  }
			});

			DevExpress.localization.locale("pt");

			$(document)
				.ajaxSuccess(function(jqxhr, textStatus, error) {
					loadPanel.hide();
				})
				.ajaxError(function(jqxhr, textStatus, error) {
					var err = textStatus.status + ", " + textStatus.statusText;
		    		DevExpress.ui.notify("Problema no acesso à internet. Favor verificar (code: "+err+")", "error", 4000);
					loadPanel.hide();
				});	        
			
			setInterval(function () { verificaConexao(); }, 30000);


	        $(document).ready(function () {
		        carregaDataSources()
	        	montaTela()
	        	resizeMe()
	        	carregaOrganizacao("")
	        })
			$(window).resize(function() {
			  resizeMe()
			});	       
			
		  	function verificaConexao(){
		  		$.getJSON(urlPreparacao,{
			  		method:"validaSessao"
			  	},function(resp){
			        if (resp.status == 0) {
			            alert(resp.mensagem)
			            window.location.replace(URLLogin)
			        }
			  	})
		  	}
			
			function resizeMe(){
				$("#divForm").dxForm("instance").option("height",window.innerHeight - 60)
				var tamanhoAbas = window.innerHeight - 140
				if (tamanhoAbas<200) tamanhoAbas = 200
				$("#divGeral").dxForm("instance").option("height",tamanhoAbas)
				$("#divEndereco").dxForm("instance").option("height",tamanhoAbas)
				$("#divContato").dxForm("instance").option("height",tamanhoAbas)
				$("#divFaturamento").dxForm("instance").option("height",tamanhoAbas)
				$("#divControle").dxForm("instance").option("height",tamanhoAbas)
				//
				var alturaGridEndereco = window.innerHeight - 260
				if (alturaGridEndereco<200) alturaGridEndereco = 200
				$("#enderecoGrid").dxDataGrid("instance").option("height",alturaGridEndereco)
				//
				var alturaGridContato = window.innerHeight - 224
				if (alturaGridContato<200) alturaGridEndereco = 200
				$("#contatoGrid").dxDataGrid("instance").option("height",alturaGridContato)
			}
			
			function montaTela(){
				// Monta o LoadPanel
				loadPanel = $("#loadpanel").dxLoadPanel({
			        visible: true,
			        showIndicator: true,
			        showPane: true,
			        shading: true,
			        shadingColor:"rgba(255,255,255,.6)",
			        closeOnOutsideClick: false,
			    }).dxLoadPanel("instance");

				// Monta toolbar
				$("#toolbar").dxToolbar({
				    items: [{
				    	location: "after",
				        widget: "dxButton",
				        options: {
					        elementAttr: {
						      id: "botaoSalvar"  
					        },
				            icon: "save",
				            hint: "Salvar os Dados",
				            text: "Salvar",
				            type: "default",
				            stylingMode: "contained",
				            onClick: function () {
								salvarDados()
				            }
				        }
				    }, {
				        location: "after",
				        widget: "dxButton",
				        options: {
				            icon: "fas fa-file-import",
				            hint: "Importar Organizações",
				            type: "default",
							text: "Importar",
				            stylingMode: "contained",
				            onClick: function () {
					            importarArquivo('034', "dataSourceOrganizacao.reload();");
				            }
				        }
				    }, {
				        location: "after",
				        widget: "dxButton",
				        options: {
				            icon: "fa fa-eraser",
				            hint: "Limpar os Campos",
				            type: "default",
							text: "Limpar",
				            stylingMode: "contained",
				            onClick: function () {
								if ($("#divForm").dxForm("instance").option("formData").organizacao!=undefined){
									$("#divForm").dxForm("instance").updateData("organizacao","")
								}else{
					            	carregaOrganizacao("")
								}
				            }
				        }
				    }]
				})

				// Monta formulário principal
				$("#divForm").dxForm({
				    activeStateEnabled: true,
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 60
				    },
				    onContentReady: function (){
						montaAbas()
					},
				    alignItemLabels: false,
				    alignItemLabelsInAllGroups: false,
				    items: [{
				        itemType: "group",
				        items: [{
	       			        cssClass: "first-group",
				            dataField: "organizacao",
						    label		: {
							    alignment: "right",
							    text	: "Organização"
						    },
						    editorType	: "dxSelectBox",
							editorOptions: {
								dataSource: dataSourceOrganizacao,
								itemTemplate: function (data, itemIndex, element) {
									var espacos="";for (var i=0;i<data.nivel;i++){ espacos = espacos+"&nbsp; "}
									return element.append("<div>"+espacos+data.descricao+"<div>")
								},
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
								searchEnabled: true,
		                        width: "470px",
		                        onValueChanged: function(e){
			                        carregaOrganizacao(e.value)
			                    },
			                	buttons: ["dropDown",{
				                    name: "search",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "search",
				                        onClick: function() {
					                        abrePesquisaOrganizacoes()
				                        }
				                    }
			                	},{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Selecione a organização para edição<br><br><i>Tipo de campo: Cadastro de Organizações</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
			                }				            
				        },{
				            itemType: "tabbed",
				            cssClass	: "first-group",
				            name: "abas",
				            tabPanelOptions: {
				                deferRendering: false,
				            },
				            tabs: [{
				                title: "Geral",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divGeral'>")
				                    }
				                }],
				            },{
				                title: "Endereço",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divEndereco'>")
				                    }
				                }],
				            },{
				                title: "Contato",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divContato'>")
				                    }
				                }],
				            },{
				                title: "Faturamento",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divFaturamento'>")
				                    }
				                }],
				            }, {
				                title: "Auditoria",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divControle'>")
				                    }
				                }]
				            }]
				        }]
				    }]
				})
			}			
			// Abre popup para pesquisar por organizações
			function abrePesquisaOrganizacoes(){
				 popupOptions = {
			        width: "90%",
			        height: "90%",
			        showTitle: true,
			        title: "Pesquisa Organizações",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
				preparaPesquisaOrganizacoes()
			}		
			
			function preparaPesquisaOrganizacoes(){
		        $("#pesquisaPopup").dxDataGrid({
			        columns:[{
						dataField	: "CodigodaOrganizacao",
						caption		: "Código",
						width		: "60px"
				   	},{
						dataField	: "Sigla",
						caption		: "Sigla",
						width		: "100px"
				   	},{
						dataField	: "Nome",
						caption		: "Nome",
						width		: "180px"
				   	},{
						dataField	: "RazaoSocial",
						caption		: "Razão Social",
						width		: "180px"
				   	},{
						dataField	: "OrganizacaoPai",
						caption		: "Organização Pai",
						width		: "280px"
				   	},{
						dataField	: "CNPJ",
						caption		: "CNPJ",
						width		: "140px",
						format: function (value) {
							var formattedValue = value
							if (value.length==14){
								formattedValue = value.slice(0,2)+"."+value.slice(2,5)+"."+value.slice(5,8)+"/"+value.slice(8,12)+"-"+value.slice(12,14)
							}
							return formattedValue;
						}
				   	},{
						dataField	: "InscricaoEstadual",
						caption		: "Inscrição Estadual",
						width		: "130px"
				   	},{
						dataField	: "InscricaoMunicipal",
						caption		: "Inscrição Municipal",
						width		: "130px"
				   	},{
						dataField	: "CNES",
						caption		: "CNES",
						width		: "130px"
				   	},{
						dataField	: "Registro ANS",
						caption		: "Registro ANS",
						width		: "130px"
				   	},{
						dataField	: "Ativo",
						caption		: "Situação",
						width		: "120px"
				   	}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		var deferred = $.Deferred()
				            $.getJSON(urlPreparacao,{
	        	            	method	:"pesquisaOrganizacoes",
	        	            	filter	: JSON.stringify(args.filter),
	        	            	sort	: JSON.stringify(args.sort),
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
		        	    	},function(result){
								deferred.resolve(
									result.data, {
										totalCount: result.totalCount
									});
							});
							return deferred.promise();
	    	    		}	
	    			}),
	    			remoteOperations	: true,
		    		selection: { mode: "single" },
					filterRow: { visible: true },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 25 },
					pager: {
			            showPageSizeSelector: true,
	        		    allowedPageSizes: [10, 25, 50, 100],
						showInfo: true,
						showNavigationButtons: true,
	        		},				
					height: "100%",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							$("#divForm").dxForm("instance").updateData("organizacao",selectedItems.selectedRowKeys[0].CodigodaOrganizacao)
							$("#openPopup").dxPopup("instance").hide()
						}
					}
				}).dxDataGrid("instance")
			}
			
			function carregaOrganizacao(codigo){
				if (flVoltaCodigo) {
					flVoltaCodigo=0
					return
				}
				if (alterado){
					var result = DevExpress.ui.dialog.confirm("Há dados não salvos. Deseja prosseguir?", "Dados não salvos");
				    result.done(function(dialogResult) {
				        if (!dialogResult){
					        flVoltaCodigo=1
					        $("#divForm").dxForm("instance").updateData("organizacao",codRegraGlobal)
					        return
						}
						loadPanel.show()
						$.ajaxSetup({async: false});	
						setTimeout(function(){ 
							carregaOrganizacao2(codigo)
						},10)
				    })
				    result.fail(function(){
				        flVoltaCodigo=1
				        $("#divForm").dxForm("instance").updateData("organizacao",codRegraGlobal)
				        return
					})
				}else{
					loadPanel.show()
					$.ajaxSetup({async: false});	
					setTimeout(function(){ 
						carregaOrganizacao2(codigo)
					},10)
				}
			}
			function carregaOrganizacao2(codigo){	
				
				codRegraGlobal = codigo	
				$.getJSON(urlPreparacao,{
                    method:"recOrganizacao",
                    codigo: codigo
                },function(retorno){
	                carregarDados = 1
	                $("#divGeral").dxForm("instance").resetValues()
	                $("#divGeral").dxForm("instance").option("formData",retorno.formGeral)
	                dataSourceOrganizacaoPai.reload()
	                dataSourceOrganizacaoPai.pageIndex(0)
	                //
	                $("#divEndereco").dxForm("instance").option("formData",{})
	                $("#enderecoGrid").dxDataGrid("instance").clearSelection()
	                //
	                $("#divContato").dxForm("instance").option("formData",{})
	                $("#contatoGrid").dxDataGrid("instance").clearSelection()
	                //
	                $("#divFaturamento").dxForm("instance").option("formData",retorno.formFaturamento)
	                $("#divControle").dxForm("instance").option("formData",retorno.formControle)
	                dataSourceGridEnderecos.reload()
	                dataSourceGridEnderecos.pageIndex(0)
	                dataSourceGridContatos.reload()
	                dataSourceGridContatos.pageIndex(0)
					carregarDados = 0
					campoAlterado(0)
	                loadPanel.hide()
	                $.ajaxSetup({async: true});
	            });
			}
			
			function carregaDataSources(){
				dataSourceOrganizacao = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
						loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getOrganizacao",
	                        	skip:args.skip,
	                        	take:args.take,
	                        	filter:JSON.stringify(args.filter),
	                        	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        

				dataSourceOrganizacaoPai = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
						loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getOrganizacao",
		    	            	codOrganizacao: $("#divForm").dxForm("instance").option("formData").organizacao,
	                        	skip:args.skip,
	                        	take:args.take,
	                        	filter:JSON.stringify(args.filter),
	                        	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        
				
				dataSourceVersaoTISS = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "FATVERSAOTISS"
		                });
		                }
		            })
		        })		        
				
				dataSourceTipoLogradouro = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "FATTIPOLOGRADOURO"
		                });
		                }
		            })
		        })		        
				

				dataSourceUF = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "UF"
		                });
		                }
		            })
		        })		        
				
				
				
				dataSourceTipoEndereco = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "FATTIPOENDERECO"
		                });
		                }
		            })
		        })		        

				dataSourceGridEnderecos = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	: "listTemporaria",
		    	            	tipo	: "enderecos"
			                });
		                },
						remove : function(args){
							campoAlterado(1)
							$.getJSON(urlPreparacao,{
								method	 	: "deletaTemporaria",
								tipo		: "enderecos",
								sequencia	: args.sequencia
							});
						},
		            })
		        })		        

				dataSourceGridContatos = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	: "listTemporaria",
		    	            	tipo	: "contatos"
			                });
		                },
						remove : function(args){
							campoAlterado(1)
							$.getJSON(urlPreparacao,{
								method	 	: "deletaTemporaria",
								tipo		: "contatos",
								sequencia	: args.sequencia
							});
						},
		            })
		        })		        
			

			}
			
			// Salva os dados da abas "Geral", "Endereço", "Contato"
			function salvarDados(){
				var codOrganizacao	= $("#divForm").dxForm("instance").option("formData").organizacao
				var abaGeral		= $("#divGeral").dxForm("instance")
				var abaEndereco		= $("#divEndereco").dxForm("instance")
				var abaContato		= $("#divContato").dxForm("instance")
				var abaFaturamento	= $("#divFaturamento").dxForm("instance")
				var msg = "",cont=0
				if (!abaGeral.validate().isValid){
					msg = "geral"
					cont++
				}
				if (msg!=""){
		        	DevExpress.ui.notify("Há campos pendentes de preenchimento na"+(cont>1?"s":"")+" aba"+(cont>1?"s":"")+": "+msg, "warning", 4000);
			        return
				}
	            var endereco = $("#divEndereco").dxForm("instance")
	            if (endereco.option("formData").tipoEndereco!=undefined){
					if (endereco.validate().isValid){
						addEndereco()
					}
	            }
	            var contato = $("#divContato").dxForm("instance")
	            if (contato.option("formData").contato!=undefined){
					if (contato.validate().isValid){
						addContato()
					}
	            }
				$.post(urlPreparacao,{
					method			: "salvar",
					codOrganizacao	: codOrganizacao,
					camposGeral		: JSON.stringify(abaGeral.option("formData")),
					camposFaturamento: JSON.stringify(abaFaturamento.option("formData"))
				},function(retorno){
					DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
					if (retorno.status==1){
						campoAlterado(0)
						dataSourceOrganizacao.reload()
						if ($("#divForm").dxForm("instance").option("formData").organizacao==retorno.codOrganizacao){
							carregaOrganizacao(retorno.codOrganizacao)
						}else{
							$("#divForm").dxForm("instance").updateData("organizacao",retorno.codOrganizacao)
						}
					}
				},"json")
			}			
			
			// Monta abas - chamado automaticamente ao término da montagem do form 'divForm'
			function montaAbas(){
				montaAbaGeral()
				montaAbaEndereco()
				montaAbaContatos()
				montaAbaFaturamento()
				montaAbaControle()
			}
			
			
			// Monta aba 'Geral'
			function montaAbaGeral(){
				$("#divGeral").dxForm({
				    activeStateEnabled	: true,
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    height: function () {
				        return window.innerHeight - 170
				    },
				    minColWidth: 50,
				    onFieldDataChanged: function(e){
					    if (e.value==undefined) return
					    campoAlterado(1)
					    if (e.dataField=="organizacaoPai"){
					    	if (!e.component.itemOption("papeis.ativoFontePagadora")) return
					    	if (!e.value){
						    	if (!e.component.itemOption("papeis.ativoFontePagadora").visible){
							    	e.component.beginUpdate()
					    			e.component.itemOption("papeis.ativoFontePagadora","visible",true)
					    			e.component.endUpdate()
						    	}
					    	}else{
						    	if (e.component.itemOption("papeis.ativoFontePagadora").visible){
					    			e.component.beginUpdate()
					    			e.component.itemOption("papeis.ativoFontePagadora","visible",false)
					    			e.component.endUpdate()
						    	}
					    	}
					    	if (e.value){
						  		$.getJSON(urlPreparacao,{
							  		method		:"getDadosFaturamento",
							  		codigo		: $("#divForm").dxForm("instance").option("formData").organizacao,
							  		codigoPai	: e.value
							  	},function(retorno){
								  	$("#divFaturamento").dxForm("instance").option("formData",retorno.formFaturamento)
							  	})
					    	}
					    }
					    if (e.dataField=="ativoParticular"){
  					    	faturamento = $("#divFaturamento").dxForm("instance")
  					    	faturamento.beginUpdate()
  					    	if (!e.value){
  					    		faturamento.itemOption("primeiroGrupo.grpParticular","visible",false)
  					    		faturamento.itemOption("primeiroGrupo.grpConvenio","visible",true)
  					    		//faturamento.itemOption("primeiroGrupo.grpLote","visible",true)
  					    		faturamento.itemOption("primeiroGrupo.grpTISS","visible",true)
  					    	}else{
  					    		faturamento.itemOption("primeiroGrupo.grpParticular","visible",true)
  					    		faturamento.itemOption("primeiroGrupo.grpConvenio","visible",false)
  					    		//faturamento.itemOption("primeiroGrupo.grpLote","visible",false)
  					    		faturamento.itemOption("primeiroGrupo.grpTISS","visible",false)
  					    	}
  					    	faturamento.endUpdate()

					    }
					    
				    },
				    screenByWidth: function (width) {
				        return "lg";
				    },
					scrollingEnabled	: true,
				    items		: [{
					    itemType	: "group",
						colCount	: 12,    
					    cssClass	: "first-group",
						items 	: [{
						    colSpan		: 4,
						    dataField	:	"sigla",
						    label		: {
							    alignment: "right",
							    text	: "Sigla"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Insira uma sigla para identificação da organização<br><br><i>Tipo de campo: Alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
					    },{
						    colSpan		: 4,
						    dataField	: "nome",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Nome"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Insira o nome da organização<br><br><i>Tipo de campo: Alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
					    },{
						    colSpan		: 4,
						    dataField	:	"razaoSocial",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Razão Social"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Insira a razão social da organização<br><br><i>Tipo de campo: Alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
					    },{
						    colSpan		: 6,
						    dataField	:	"organizacaoPai",
						    label		: {
							    alignment: "right",
							    text	: "Organização Pai"
						    },
						    editorType	: "dxSelectBox",
							editorOptions:{
							    buttons: ["dropDown",{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informa a organização pai desta organização. Caso não tenha, deixei em branco<br><br><i>Tipo de campo: Cadastro de Organizações</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}],
			                	placeholder :"Selecione a organização pai...",
								dataSource: dataSourceOrganizacaoPai,
								displayExpr: "descricao",
								itemTemplate: function (data, itemIndex, element) {
									var espacos="";for (var i=0;i<data.nivel;i++){ espacos = espacos+"&nbsp; "}
									return element.append("<div>"+espacos+data.descricao+"<div>")
								},
								searchEnabled: true,
			    		        valueExpr: "codigo" 
							}
					    },{
						    itemType 	: "empty",
						    colSpan		: 6,
					    },{
						    colSpan		: 4,
						    dataField	:	"cnpj",
						    label		: {
							    alignment: "right",
							    text	: "CNPJ"
						    },
						    editorOptions:{
							    mask: "00.000.000/0000-00",
								buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o CNPJ da organização. Obrigatório quando a organização for do tipo 'FONTE PAGADORA'.<br><br><i>Tipo de campo: Numérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}],
						    }
					    },{
						    colSpan		: 4,
						    dataField	:	"inscricaoEstadual",
						    label		: {
							    alignment: "right",
							    text	: "Inscrição Estadual"
						    },
						    editorType	: "dxNumberBox",
							editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informa o número da inscrição estadual da organização.<br><br><i>Tipo de campo: Numérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}],
							}						    
					    },{
						    colSpan		: 4,
						    dataField	:	"inscricaoMunicipal",
						    label		: {
							    alignment: "right",
							    text	: "Inscrição Municipal"
						    },
						    editorType	: "dxNumberBox",
							editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informa o número da inscrição municipal da organização.<br><br><i>Tipo de campo: Numérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}],
							}						    
					    },{
						    colSpan		: 5,
						    dataField	:	"cnes",
						    label		: {
							    alignment: "right",
							    text	: "CNES"
						    },
						    editorType	: "dxNumberBox",
							editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informa o número CNES da organização.<br><br><i>Tipo de campo: Numérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}],
							}						    
						    
					    },{
						    colSpan		: 5,
						    dataField	:	"ans",
						    label		: {
							    alignment: "right",
							    text	: "Registro ANS"
						    },
						    //editorType	: "dxNumberBox",
							editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informa o registro da ANS da organização.<br><br><i>Tipo de campo: Numérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}],
							}						    
						    
					    },{
						    colSpan		: 2,
						    dataField	:	"situacao",
						    label		: {
							    alignment: "right",
							    text	: "Ativo?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
							    value	: 1
						    }
					    }]
				    },{
					    itemType: "group",
					    caption	: "Papéis",
					    name	: "papeis",
					    cssClass: "second-group",
					    colCount: 3,
					    items:[{
						    colSpan		: 3,
						    dataField	:	"ativoFontePagadora",
						    label		: {
							    alignment: "right",
							    text	: "Fonte Pagadora?",
							    showColon: false
						    },
						    visible		: true,
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
						    }
					    },{
						    dataField	:	"ativoConvenio",
						    label		: {
							    alignment: "right",
							    text	: "Convênio?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
						    }
					    },{
						    dataField	:	"ativoPlanoSaude",
						    label		: {
							    alignment: "right",
							    text	: "Plano de Saúde?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
						    }
					    },{
						    dataField	:	"ativoParticular",
						    label		: {
							    alignment: "right",
							    text	: "Particular?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
						    }
					    },{
						    dataField	:	"ativoPrestadorServico",
						    label		: {
							    alignment: "right",
							    text	: "Prestador de Serviços?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
						    }
					    },{
						    dataField	:	"ativoRecebedor",
						    label		: {
							    alignment: "right",
							    text	: "Recebedor?",
							    showColon: false
						    },
						    editorType	: "dxSwitch",
						    editorOptions : {
							    switchedOnText:"Sim",
							    switchedOffText:"Não",
						    }
					    }]
				    }]
				})
			}
			
			// Monta aba 'Endereços'
			function montaAbaEndereco(){
				$("#divEndereco").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled: true,
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    onContentReady : function(){
						montaGridEndereco()
					},
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    items		: [{
					    itemType	: "group",
					    colCount	: 12,  	
					    cssClass	: "first-group",	
						items		: [{
						    colSpan		: 6,
						    dataField	:	"tipoEndereco",
						    label		: {
							    alignment: "right",
							    text	: "Tipo de Endereço"
						    },
						    editorType	: "dxSelectBox",
						    validationRules: [{ type: "required" }],        
						    editorOptions : {
							    dataSource	: dataSourceTipoEndereco,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
			                    placeholder :"Endereço Comercial, Cobrança, ...",
							    buttons: ["dropDown",{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o tipo de endereço<br><br><i>Tipo de campo: Cadastro de Tipos de Endereços (INPARA)</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
								
						    }
						},{
						    colSpan		: 6,
						    itemType	: "empty"
						},{
						    colSpan		: 2,
						    dataField	:	"cep",
						    label		: {
							    alignment: "right",
							    text	: "CEP"
						    },
						    editorOptions:{
							    width	: "100px",
							    mask: "00000-000",
		                        onValueChanged: function(e){
			                        carregaCEP(e.value)
			                    },
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o CEP<br><br><i>Tipo de campo: Campo numérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						    
						},{
							colSpan		: 3,
							dataField	: "tipoLogradouro",
							validationRules	: [{type: "required"}],
							label		: {
								alignment	: "right",
								text	: "Tipo de Logradouro"
							},
							editorType	: "dxSelectBox",
							editorOptions : {
								dataSource	: dataSourceTipoLogradouro,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
			                    placeholder :"Rua, Avenida,...",
							    buttons: ["dropDown",{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o tipo de logradouro<br><br><i>Tipo de campo: Cadastro de Tipos de Logradouros (INPARA)</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
							}
								
						},{
						    colSpan		: 4,
						    dataField	:	"logradouro",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Logradouro"
						    },
						    editorOptions : {
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o logradouro<br><br><i>Tipo de campo: Campo Alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						},{
						    colSpan		: 3,
						    dataField	:	"numero",
						    label		: {
							    alignment: "right",
							    text	: "Número"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o número<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						},{
						    colSpan		: 3,
						    dataField	:	"complemento",
						    label		: {
							    alignment: "right",
							    text	: "Complemento"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o complemento<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						},{
						    colSpan		: 3,
						    dataField	:	"bairro",
						    label		: {
							    alignment: "right",
							    text	: "Bairro"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o bairro<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						},{
						    colSpan		: 3,
						    dataField	:	"cidade",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Cidade"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe a cidade<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						},{
						    colSpan		: 3,
						    dataField	:	"estado",
						    validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Estado"
						    },
							editorType	: "dxSelectBox",
							editorOptions : {
								dataSource	: dataSourceUF,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
							    buttons: ["dropDown",{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe a unidade federativa<br><br><i>Tipo de campo: Campo cadastro de unidades federativas (INPARA)</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
							}
						}]
				    },{
					    template	: "<div id='enderecoGrid'>",
					}]
				})
			}
			
			function carregaCEP(cep){
				if (cep=="") return
				$.getJSON(urlPreparacao,{
					method	: "getCEP",
					cep		: cep
				},function(retorno){
					if (retorno.achou){
						$("#divEndereco").dxForm("instance").updateData("tipoLogradouro",retorno.tipoLogradouro)
						$("#divEndereco").dxForm("instance").updateData("logradouro",retorno.logradouro)
						$("#divEndereco").dxForm("instance").updateData("bairro",retorno.bairro)
						$("#divEndereco").dxForm("instance").updateData("cidade",retorno.cidade)
						$("#divEndereco").dxForm("instance").updateData("estado",retorno.uf)
					}else{
						$("#divEndereco").dxForm("instance").updateData("cep","")
						DevExpress.ui.notify("CEP não localizado", "warning", 4000);
					}
				})
			}
			
			// Função para adicionar o endereço na temporária
			function addEndereco(){
				var endereco = $("#divEndereco").dxForm("instance")
				$.post(urlPreparacao,{
					method			: "addEndereco",
					endereco		: JSON.stringify(endereco.option("formData"))
				},function(retorno){
					if (retorno.status==0){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
					}
					if (retorno.status==1){
						$("#divEndereco").dxForm("instance").option("formData",{})
						$("#enderecoGrid").dxDataGrid("instance").clearSelection()
						dataSourceGridEnderecos.reload()
						dataSourceGridEnderecos.pageIndex(0)
					}
				},"json")
			}			
			
			// Monta grid da aba 'Endereço' - Chamado automaticamente ao término da montagem do form 'divEndereco'
			function montaGridEndereco(){
				$("#enderecoGrid").dxDataGrid({
					allowColumnResizing	: true,
					cellHintEnabled		: true,
					columnChooser: {
						enabled: false
					},
					columns:[{
						dataField	: "tipoEnderecoExt",
						caption		: "Tipo de Endereço",
						width		: "180px"
					},{
						dataField	: "tipoLogradouroExt",
						caption		: "Tipo Logr."
					},{
						dataField	: "logradouro",
						caption		: "Logradouro"
					},{
						dataField	: "numero",
						caption		: "Número",
						width		: "70px"
					},{
						dataField	: "complemento",
						caption		: "Complemento"
					},{
						dataField	: "cep",
						caption		: "CEP",
						width		: "80px"
					},{
						dataField	: "bairro",
						caption		: "Bairro"
					},{
						dataField	: "cidade",
						caption		: "Cidade"
					},{
						dataField	: "estadoExt",
						caption		: "Estado",
						width		: "120px"
					}],
					dataSource: dataSourceGridEnderecos,
	        		editing: {
			            mode: "cell",
			            allowDeleting: true,
	                    useIcons: true,
			        },					
					filterRow: { visible: false },
					groupPanel: {
						visible: false
					},
					headerFilter: {
						visible:false
					},		
					hoverStateEnabled: true,
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							$("#divEndereco").dxForm("instance").option("formData",selectedItems.selectedRowsData[0])
						}
					},
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift(
							{
								location: "after",
								widget: "dxButton",
								options: {
						            icon: "add",
						            text: "Adicionar",
						            type: "default",
						            onClick: function() {
							            var endereco = $("#divEndereco").dxForm("instance")
										if (!endereco.validate().isValid){
											DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
											return
										}
										campoAlterado(1)
										addEndereco()
						            }
								}
							},{
								location: "after",
								widget: "dxButton",
								options: {
						            icon: "fa fa-eraser",
						            text: "Limpar",
						            type: "default",
						            onClick: function() {
										$("#divEndereco").dxForm("instance").option("formData",{})
										$("#enderecoGrid").dxDataGrid("instance").clearSelection()
						            }
								}
							}
						)
					},					
					paging: { enabled: false },
					rowAlternationEnabled: true,
					scrolling:{ showScrollbar: 'always',useNative : false},
					selection: { mode: "single" },
					showBorders: true,
					showRowLines: true,
					sorting:{mode:'single'},
					width: "100%",
					wordWrapEnabled:true,
				})
			}
			
			// Monta aba 'Contatos'
			function montaAbaContatos(){
				$("#divContato").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled: true,
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    onContentReady : function(){
					    montaGridContatos()
					},
				    items		: [{
					    cssClass	: "first-group",
					    itemType	: "group",
						colCount	: 12,  		
						items		: [{
						    colSpan		: 4,
						    dataField	:	"contato",
						    //validationRules: [{ type: "required" }],        
						    label		: {
							    alignment: "right",
							    text	: "Contato"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o nome do contato<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						},{
							itemType	: "empty",
							colSpan		: 8
						},{
						    colSpan		: 3,
						    dataField	:	"telefone",
						    label		: {
							    alignment: "right",
							    text	: "Telefone"
						    },
						    editorOptions:{
							    mask: "(00)999999999",
							    maskChar: " ",
							    onFocusIn: function(obj){
									obj.component.option("mask","(00)999999999")
							    },
							    onFocusOut: function(obj){
									if (obj.component._value.trim().length>10){
										obj.component.option("mask","(00)00000-0000")
									}else{
										obj.component.option("mask","(00)0000-0000")
									}
								},
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o número de telefone<br><br><i>Tipo de campo: Campo numérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    },
						},{
						    colSpan		: 3,
						    dataField	:	"celular",
						    label		: {
							    alignment: "right",
							    text	: "Celular"
						    },
						    editorOptions:{
							    mask: "(00)999999999",
							    maskChar: " ",
							    onFocusIn: function(obj){
									obj.component.option("mask","(00)999999999")
							    },
							    onFocusOut: function(obj){
									if (obj.component._value.trim().length>10){
										obj.component.option("mask","(00)00000-0000")
									}else{
										obj.component.option("mask","(00)0000-0000")
									}
								},
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o número de celular<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    },
						},{
						    colSpan		: 3,
						    dataField	:	"email",
						    label		: {
							    alignment: "right",
							    text	: "E-mail"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o endereço de e-mail<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						},{
						    colSpan		: 3,
						    dataField	:	"website",
						    label		: {
							    alignment: "right",
							    text	: "Website"
						    },
						    editorOptions:{
							    buttons: [{
								    name	: "btnHelp",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "far fa-question-circle",
				                        ajuda: "Informe o website<br><br><i>Tipo de campo: Campo alphanumérico</i>",
				                        onClick: function(e) {
					                        exibeHelp(e)
				                        }
				                    }
			                	}]
						    }
						}]
				    },{
					    template	: "<div id='contatoGrid'>"
				    }]
				})
			}

			// Função para adicionar o contato na temporária
			function addContato(){
				var contato = $("#divContato").dxForm("instance")
				$.post(urlPreparacao,{
					method		: "addContato",
					contato		: JSON.stringify(contato.option("formData"))
				},function(retorno){
					if (retorno.status==0){
						DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
					}
					if (retorno.status==1){
						$("#divContato").dxForm("instance").option("formData",{})
						$("#contatoGrid").dxDataGrid("instance").clearSelection()
						dataSourceGridContatos.reload()
						dataSourceGridContatos.pageIndex(0)
					}
				},"json")
			}			

			// Monta grid da aba 'Contato' - Chamado automaticamente ao término da montagem do form 'divContato'
			function montaGridContatos(){
				$("#contatoGrid").dxDataGrid({
					allowColumnResizing	: true,
					cellHintEnabled		: true,
					columnChooser: {
						enabled: false
					},
					columns:[{
						dataField	: "contato",
						caption		: "Contato"
					},{
						dataField	: "telefoneExt",
						caption		: "Telefone"
					},{
						dataField	: "celularExt",
						caption		: "Celular"
					},{
						dataField	: "email",
						caption		: "E-mail"
					},{
						dataField	: "website",
						caption		: "Website"
					}],
					dataSource: dataSourceGridContatos,
	        		editing: {
			            mode: "cell",
			            allowDeleting: true,
	                    useIcons: true,
			        },					
					filterRow: { visible: false },
					groupPanel: {
						visible: false
					},
					headerFilter: {
						visible:false
					},		
					hoverStateEnabled: true,
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							$("#divContato").dxForm("instance").option("formData",selectedItems.selectedRowsData[0])
						}
					},
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift(
							{
								location: "after",
								widget: "dxButton",
								options: {
						            icon: "add",
						            text: "Adicionar",
						            type: "default",
						            onClick: function() {
							            var contato = $("#divContato").dxForm("instance")
										if (!contato.validate().isValid){
											DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
											return
										}
										campoAlterado(1)
										addContato()
						            }
								}
							},{
								location: "after",
								widget: "dxButton",
								options: {
						            icon: "fa fa-eraser",
						            text: "Limpar",
						            type: "default",
						            onClick: function() {
										$("#divContato").dxForm("instance").option("formData",{})
										$("#contatoGrid").dxDataGrid("instance").clearSelection()
						            }
								}
							}
						)
					},					
					paging: { enabled: false },
					rowAlternationEnabled: true,
					scrolling:{ showScrollbar: 'always',useNative : false},
					selection: { mode: "single" },
					showBorders: true,
					showRowLines: true,
					sorting:{mode:'single'},
					width: "100%",
					wordWrapEnabled:true,
				})
			}

			// Monta aba 'Faturamento'
			function montaAbaFaturamento(){
				$("#divFaturamento").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled	: true,
				    minColWidth			: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    onFieldDataChanged: function(e){
					    campoAlterado(1)
					},
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    items		: [{
					    cssClass	: "first-group",
					    itemType	: "group",
					    name		: "primeiroGrupo",
					    colCount	: 12,
						items		: [{
							itemType	: "group",
							name		: "grpParticular",
							visible		: false,
							colSpan		: 12,
							colCount	: 12,
							items		: [{
							dataField	: "limiteDesconto",
							    colSpan		: 4,
							    label		: {
								    alignment: "right",
								    text	: "Limite de Desconto (%)"
							    },
							    editorType	: "dxNumberBox",
							},{
								itemType	: "empty",
								colSpan		: 8
							},{
								colSpan		: 12,
								dataField	: "nfDetalhe",
							    label		: {
								    alignment: "right",
								    text	: "NF deve apresentar o detalhamento da conta?",
								   	showColon: false
							    },
							    editorType	: "dxSwitch",
							    editorOptions : {
								    switchedOnText:"Sim",
								    switchedOffText:"Não",
							    }
							}]
						},{
							colSpan		: 12,
							itemType	: "group",
							caption		: "Carteirinha",
							cssClass	: "second-group",
							name		: "grpConvenio",
							colCount	: 12,
							items		: [{
								colSpan		: 3,
								dataField	: "obrigatorioNumCarteirinha",
							    label		: {
								    alignment: "right",
								    text	: "Obrigatório o nº da carteirina?",
								    showColon: false
							    },
							    editorType	: "dxSwitch",
							    editorOptions : {
								    switchedOnText:"Sim",
								    switchedOffText:"Não",
							    }
							},{
								colSpan		: 3,
								dataField	: "mascara",
							    label		: {
								    alignment: "right",
								    text	: "Máscara"
							    },
							    editorOptions:{
								    buttons: [{
									    name	: "btnHelp",
					                    location: "after",
					                    options: {
					                        stylingMode: "text",
					                        icon: "far fa-question-circle",
					                        ajuda: "Informe a máscara da carteirinha. Utilize 'A' para permitir letras e '0' para permitir números.<br>Ex.: Para uma carteinha AZS-8891.0098.1222, utilize como máscara AAA-0000.0000.0000<br><br><i>Tipo de campo: Campo alphanumérico</i>",
					                        onClick: function(e) {
						                        exibeHelp(e)
					                        }
					                    }
				                	}]
							    }
							    
							},{
								colSpan		: 3,
								dataField	: "minimoCaracteres",
							    label		: {
								    alignment: "right",
								    text	: "Mínimo de Caracteres"
							    },
							    editorType	: "dxNumberBox",
							    editorOptions:{
								    min	: 0,
								    buttons: [{
									    name	: "btnHelp",
					                    location: "after",
					                    options: {
					                        stylingMode: "text",
					                        icon: "far fa-question-circle",
					                        ajuda: "Informe o mínimo de caracteres da carteirinha<br><br><i>Tipo de campo: Campo numérico</i>",
					                        onClick: function(e) {
						                        exibeHelp(e)
					                        }
					                    }
				                	}]
							    }

							},{
								colSpan		: 3,
								dataField	: "maximoCaracteres",
							    label		: {
								    alignment: "right",
								    text	: "Máximo de Caracteres"
							    },
							    editorType	: "dxNumberBox",
							    editorOptions:{
								    min	: 0,
								    buttons: [{
									    name	: "btnHelp",
					                    location: "after",
					                    options: {
					                        stylingMode: "text",
					                        icon: "far fa-question-circle",
					                        ajuda: "Informe o máximo de caracteres da carteirinha<br><br><i>Tipo de campo: Campo numérico</i>",
					                        onClick: function(e) {
						                        exibeHelp(e)
					                        }
					                    }
				                	}]
							    }
							}]
						},{
							colSpan		: 12,
							itemType	: "group",
							caption		: "Lote de Faturamento",
							cssClass	: "second-group",
							name		: "grpLote",
							visible		: false,
							colCount	: 12,
							items		: [{
								colSpan		: 3,
								dataField	: "faturaRetroativa",
							    label		: {
								    alignment: "right",
								    text	: "Permitir a inclusão de faturas retroativas?",
							    	showColon: false
							    },
							    editorType	: "dxSwitch",
							    editorOptions : {
								    switchedOnText:"Sim",
								    switchedOffText:"Não",
							    }
							},{
								colSpan		: 3,
								dataField	: "diasFaturaRetroativa",
							    label		: {
								    alignment: "right",
								    text	: "Tempo (em dias) para faturas retroativas",
							    },
							    editorType	: "dxNumberBox",
							},{
								colSpan		: 6,
								dataField	: "fechamentoData",
							    label		: {
								    alignment: "right",
								    text	: "Fechamento nas datas"
							    },
							},{
								colSpan		: 4,
								dataField	: "conferenciaFA",
							    label		: {
								    alignment: "right",
								    text	: "Obrigatório Conferência das FA's?",
							    	showColon: false
							    },
							    editorType	: "dxSwitch",
							    editorOptions : {
								    switchedOnText:"Sim",
								    switchedOffText:"Não",
							    }
							},{
								colSpan		: 4,
								dataField	: "nfGeradaCredenciado",
							    label		: {
								    alignment: "right",
								    text	: "NF deve ser gerada para o credenciado?",
							    	showColon: false
							    },
							    editorType	: "dxSwitch",
							    editorOptions : {
								    switchedOnText:"Sim",
								    switchedOffText:"Não",
							    }
							},{
								colSpan		: 4,
								dataField	: "nfGeracaoAutomatica",
							    label		: {
								    alignment: "right",
								    text	: "Geração automática do lote?",
							    	showColon: false
							    },
							    editorType	: "dxSwitch",
							    editorOptions : {
								    switchedOnText:"Sim",
								    switchedOffText:"Não",
							    }
							}]
						},{
							colSpan		: 12,
							itemType	: "group",
							caption		: "Configurações TISS",
							cssClass	: "second-group",
							name		: "grpTISS",
							colCount	: 12,
							items		: [{
								colSpan		: 12,
								dataField	: "versaoTISS",
							    label		: {
								    alignment: "right",
								    text	: "Versão da Guia TISS"
							    },
							    editorType	: "dxSelectBox",
							    editorOptions : {
								    dataSource	: dataSourceVersaoTISS,
				    		        valueExpr: "codigo", 
									displayExpr: "descricao",
								    buttons: ["dropDown",{
									    name	: "btnHelp",
					                    location: "after",
					                    options: {
					                        stylingMode: "text",
					                        icon: "far fa-question-circle",
					                        ajuda: "Informe a versão da guia TISS<br><br><i>Tipo de campo: Cadastro de Guias TISS (INPARA)</i>",
					                        onClick: function(e) {
						                        exibeHelp(e)
					                        }
					                    }
				                	}]
									
							    }
							    
							}]
						},{
							colSpan		: 3,
							itemType	: "group",
							caption		: "Consultas",
							cssClass	: "second-group",
							items		: [{
								dataField	: "guiaAutorizacaoConsulta",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Guia de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "senhaAutorizacaoConsulta",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Senha de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "numGuiaOperadoraConsulta",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Nº Guia Operadora?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "codigoPrestadorConsulta",
						    	label		: {
							    	alignment: "right",
							    	text	: "Possuí código do prestador?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							}]
						},{
							colSpan		: 3,
							itemType	: "group",
							caption		: "SP/SADT",
							cssClass	: "second-group",
							items		: [{
								dataField	: "guiaAutorizacaoSPSADT",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Guia de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "senhaAutorizacaoSPSADT",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Senha de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "numGuiaOperadoraSPSADT",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Nº Guia Operadora?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "codigoPrestadorSPSADT",
						    	label		: {
							    	alignment: "right",
							    	text	: "Possuí código do prestador?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							}]
						},{
							colSpan		: 3,
							itemType	: "group",
							caption		: "Honorários",
							cssClass	: "second-group",
							items		: [{
								dataField	: "guiaAutorizacaoHonorarios",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Guia de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "senhaAutorizacaoHonorarios",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Senha de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "numGuiaOperadoraHonorarios",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Nº Guia Operadora?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "codigoPrestadorHonorarios",
						    	label		: {
							    	alignment: "right",
							    	text	: "Possuí código do prestador?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							}]
						},{
							colSpan		: 3,
							itemType	: "group",
							caption		: "Outras Despesas",
							cssClass	: "second-group",
							items		: [{
								dataField	: "guiaAutorizacaoOutras",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Guia de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "senhaAutorizacaoOutras",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Senha de autorização?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "numGuiaOperadoraOutras",
						    	label		: {
							    	alignment: "right",
							    	text	: "Obrigatório Nº Guia Operadora?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							},{
								dataField	: "codigoPrestadorOutras",
						    	label		: {
							    	alignment: "right",
							    	text	: "Possuí código do prestador?",
						    		showColon: false
						    	},
						    	editorType	: "dxSwitch",
						    	editorOptions : {
							    	switchedOnText:"Sim",
							    	switchedOffText:"Não",
						    	}
							}]
						}]
				    }]
				})
			}


			// Monta aba 'Controle'
			function montaAbaControle(){
				$("#divControle").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled: true,
				    minColWidth: 50,
				    readOnly	: true,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    items		: [{
					    cssClass	: "first-group",
					    itemType	: "group",
						items		: [{
						    dataField	:	"criadoEm",
						    label		: {
							    alignment: "right",
							    text	: "Criado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"criadoPor",
						    label		: {
							    alignment: "right",
							    text	: "Criado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"alteradoEm",
						    label		: {
							    alignment: "right",
							    text	: "Alterado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"alteradoPor",
						    label		: {
							    alignment: "right",
							    text	: "Alterado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						}]
				    }]
				})
			}

			function campoAlterado(flAlterado){
				if (carregarDados) return
				if (alterado != flAlterado){
					alterado = flAlterado
					if (alterado){
						$("#botaoSalvar").removeClass("dx-button-default").addClass("dx-button-success")
					}else{
						$("#botaoSalvar").removeClass("dx-button-success").addClass("dx-button-default")
					}
				}
			}
			
			function exibeHelp(e){
				texto = e.component.option("ajuda")
				$("#popover").dxPopover({
			        target: e.event.target,
			        contentTemplate: function(){
				        return $("<span style='font-size:12px;'>").append(texto)
			        }
			    });
	        	$("#popover").dxPopover("show");
			}
			
		</script>
	</body>
</html>
