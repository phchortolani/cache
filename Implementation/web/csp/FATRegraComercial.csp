<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 		= $get(%request.Data("YBED", 1))
		set YM 			= $get(%request.Data("YM", 1))
		set YLOCATION	= $get(%request.Data("YLOCATION", 1))

		set PortCache 	= $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 		= %request.Application
		set host 		= %request.CgiEnvs("HTTP_HOST")
		set url			= "http://"_host_app
		;
		set param="EP=1&YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		set paramEncrypt = $piece(##class(COM.fwk.ui.csp.CSPUtil).encrypt(param),"id_key=",2)
		
		set URLPreparacao	= "VAR.CSP.FATRegraComercial.cls"
		set URLLogin 		= "COMLogin.cls"

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Regras Comerciais</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />

	    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalincv2.css" id="style_color" />

	</head>
	<script type="text/javascript">
		var alterado = 0;
		var carregarDados = 1;
		var codRegraGlobal = "";
		var flVoltaCodigo = 0;
		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'
		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>
	<style>
	.destaque{
		font-size: 15px;
		border:1px solid #337ab7;
		border-radius: 5px;
		height: 110px;
		padding: 15px;
	}
	</style>
	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="loadpanel"></div>
		
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao	= '#(URLPreparacao)#';
			var paramEncrypt 	= '#(paramEncrypt)#';
			var YBED			= '#(YBED)#'
			$.ajaxSetup({
			  headers : {   
			    'id_key' : '#(paramEncrypt)#'
			  }
			});

			DevExpress.localization.locale("pt");

			$(document)
				.ajaxSuccess(function(jqxhr, textStatus, error) {
					//loadPanel.hide();
				})
				.ajaxError(function(jqxhr, textStatus, error) {
					var err = textStatus.status + ", " + textStatus.statusText;
		    		DevExpress.ui.notify("Problema no acesso à internet. Favor verificar (code: "+err+")", "error", 4000);
					loadPanel.hide();
				});	        
			
			setInterval(function () { verificaConexao(); }, 30000);


	        $(document).ready(function () {
		        carregaDataSources()
	        	montaTela()
	        	resizeMe()
	        	carregaRegra("")
	        	loadPanel.hide()
	        })
			$(window).resize(function() {
			  resizeMe()
			});	       
			
		  	function verificaConexao(){
		  		$.getJSON(urlPreparacao,{
			  		method:"validaSessao"
			  	},function(resp){
			        if (resp.status == 0) {
			            alert(resp.mensagem)
			            window.location.replace(URLLogin)
			        }
			  	})
		  	}
			
			function resizeMe(){
				$("#divForm").dxForm("instance").option("height",window.innerHeight - 60)
				var tamanhoAbas = window.innerHeight - 140
				if (tamanhoAbas<200) tamanhoAbas = 200
				$("#divGeral").dxForm("instance").option("height",tamanhoAbas)
				$("#divControle").dxForm("instance").option("height",tamanhoAbas)
				//
			}
			
			function montaTela(){
				// Monta o LoadPanel
				loadPanel = $("#loadpanel").dxLoadPanel({
			        visible: true,
			        showIndicator: true,
			        showPane: true,
			        shading: true,
			        shadingColor:"rgba(255,255,255,.6)",
			        closeOnOutsideClick: false,
			    }).dxLoadPanel("instance");

				// Monta toolbar
				$("#toolbar").dxToolbar({
				    items: [{
				    	location: "after",
				        widget: "dxButton",
				        name  : "btnSalvar",
				        options: {
					        elementAttr: {
						      id: "botaoSalvar"  
					        },
				            icon: "save",
				            hint: "Salvar os Dados",
				            text: "Salvar",
				            type: "default",
				            stylingMode: "contained",
				            onClick: function () {
								salvarDados()
				            }
				        }
				    }, {
				        location: "after",
				        widget: "dxButton",
				        options: {
				            icon: "fa fa-eraser",
				            hint: "Limpar os Campos",
				            type: "default",
							text: "Limpar",
				            stylingMode: "contained",
				            onClick: function () {
								if ($("#divForm").dxForm("instance").option("formData").regra!=undefined){
									$("#divForm").dxForm("instance").updateData("regra","")
								}else{
					            	carregaRegra("")
								}
				            }
				        }
				    }]
				})

				// Monta formulário principal
				$("#divForm").dxForm({
				    activeStateEnabled: true,
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 60
				    },
				    onContentReady: function (){
						montaAbas()
					},
				    alignItemLabels: false,
				    alignItemLabelsInAllGroups: false,
				    items: [{
				        itemType: "group",
				        items: [{
	       			        cssClass: "first-group",
				            dataField: "regra",
						    label		: {
							    alignment: "right",
							    text	: "Regra Comercial"
						    },
						    editorType	: "dxSelectBox",
							editorOptions: {
								dataSource: dataSourceRegra,
			    		        valueExpr: "codigo", 
								displayExpr: "descricao",
								searchEnabled: true,
		                        width: "470px",
		                        onValueChanged: function(e){
			                        carregaRegra(e.value)
			                    },
			                	buttons: [{
				                    name: "search",
				                    location: "after",
				                    options: {
				                        stylingMode: "text",
				                        icon: "search",
				                        onClick: function() {
					                        abrePesquisaRegra()
				                        }
				                    }
			                	}]
			                }				            
				        },{
				            itemType: "tabbed",
				            cssClass	: "first-group",
				            name: "abas",
				            tabPanelOptions: {
				                deferRendering: false,
				            },
				            tabs: [{
				                title: "Geral",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divGeral'>")
				                    }
				                }],
				            }, {
				                title: "Auditoria",
				                items: [{
				                    template: function (data, itemElement) {
				                        itemElement.append("<div id='divControle'>")
				                    }
				                }]
				            }]
				        }]
				    }]
				})
			}			
			// Abre popup para pesquisar por organizações
			function abrePesquisaRegra(){
				 popupOptions = {
			        width: "90%",
			        height: "90%",
			        showTitle: true,
			        title: "Pesquisa Regras Comerciais",
			        visible: true,
			        dragEnabled: false,
			        closeOnOutsideClick: false
			    }	
			    $("#openPopup").remove()
			    $(document.body).append("<div id='openPopup'></div>")
	   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
				$("#openPopup").dxPopup(popupOptions)
				preparaPesquisaRegras()
			}		
			
			function preparaPesquisaRegras(){
		        $("#pesquisaPopup").dxDataGrid({
			        columns:[{
						dataField	: "CodigodaRegra",
						caption		: "Código",
						width		: "60px"
				   	},{
						dataField	: "Nome",
						caption		: "Nome",
						width		: "180px"
				   	},{
						dataField	: "Descricao",
						caption		: "Descrição"
				   	},{
						dataField	: "TipodaRegra",
						caption		: "Tipo da Regra",
				   	},{
						dataField	: "Ativo",
						caption		: "Situação",
						width		: "120px"
				   	}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
		            		var deferred = $.Deferred()
				            $.getJSON(urlPreparacao,{
	        	            	method	:"pesquisaRegras",
	        	            	filter	: JSON.stringify(args.filter),
	        	            	sort	: JSON.stringify(args.sort),
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
		        	    	},function(result){
								deferred.resolve(
									result.data, {
										totalCount: result.totalCount
									});
							});
							return deferred.promise();
	    	    		}	
	    			}),
	    			remoteOperations	: true,
		    		selection: { mode: "single" },
					filterRow: { visible: true },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 25 },
					pager: {
			            showPageSizeSelector: true,
	        		    allowedPageSizes: [10, 25, 50, 100],
						showInfo: true,
						showNavigationButtons: true,
	        		},				
					height: "100%",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: true
			        },
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							$("#divForm").dxForm("instance").updateData("regra",selectedItems.selectedRowKeys[0].CodigodaRegra)
							$("#openPopup").dxPopup("instance").hide()
						}
					}
				}).dxDataGrid("instance")
			}
			
			function carregaRegra(codigo){
				if (flVoltaCodigo) {
					flVoltaCodigo=0
					return
				}
				if (alterado){
					var result = DevExpress.ui.dialog.confirm("Há dados não salvos. Deseja prosseguir?", "Dados não salvos");
				    result.done(function(dialogResult) {
				        if (!dialogResult){
					        flVoltaCodigo=1
					        $("#divForm").dxForm("instance").updateData("regra",codRegraGlobal)
					        return
						}
						carregaRegra2(codigo)
				    })
				    result.fail(function(){
				        flVoltaCodigo=1
				        $("#divForm").dxForm("instance").updateData("regra",codRegraGlobal)
				        return
					})
				}else{
					carregaRegra2(codigo)
				}
			}
			
			function carregaRegra2(codigo){
				loadPanel.show()
				codRegraGlobal = codigo
				$.getJSON(urlPreparacao,{
                    method:"recRegra",
                    codigo: codigo
                },function(retorno){
	                carregarDados = 1
	                $("#divGeral").dxForm("instance").resetValues()
	                $("#divGeral").dxForm("instance").option("formData",retorno.formGeral)
	                $("#divControle").dxForm("instance").option("formData",retorno.formControle)
					validade = $("#divGeral").dxForm("instance").getEditor("validade")
					if (retorno.comValidade){
						validade.option("type","danger")
					}else{
						validade.option("type","normal")
					}
					validade.option("hint",retorno.msgRetorno)
					carregarDados = 0
					campoAlterado(0)
	                loadPanel.hide()
	            });
			}
			
			function carregaDataSources(){
				dataSourceRegra = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
						loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getRegras",
	                        	skip:args.skip,
	                        	take:args.take,
	                        	filter:JSON.stringify(args.filter),
	                        	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        

				dataSourceTipoRegra = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "TIPOSREGRASCOMERCIAIS"
		                });
		                }
		            })
		        })		        

				dataSourceAreasAplicacao = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			        loadMode: "raw",
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
	    	            	method	:"getINPARA",
	    	            	chave	: "FATURAMENTOETAPAS",
        	            	take	: JSON.stringify(args.take),
        	            	skip	: JSON.stringify(args.skip),
        	            	searchValue:args.searchValue
		                });
		                }
		            })
		        })	

				dataSourceRecebedor = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getFontePagadora",
		    	            	campo	: "RecebedorAtivo",
	                        	skip	:args.skip,
	                        	take	:args.take,
	                        	filter	:JSON.stringify(args.filter),
	                        	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        

				dataSourceMoeda = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getINPARA",
		    	            	chave	: "UNIDMONETARIATABELACOMERCIAL",
		    	            	showKey	: 1
			                });
		                }
		            })
		        })		        

				dataSourceTabelaComercial = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            byKey: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getTabelaComercial",
	        	            	codigo	: args
			                });
		                },
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getTabelaComercial",
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
	        	            	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        

				dataSourceItemTabelaComercial = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            byKey: function(args) {
				            var tabela = $("#divSubRegra").dxForm("instance").option("formData").tabelaComercial
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getTabelaComercialItens",
		    	            	tabela	: tabela,
	        	            	codigo	: args
			                });
		                },
			            load: function(args) {
				            var tabela = $("#divSubRegra").dxForm("instance").option("formData").tabelaComercial
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getTabelaComercialItens",
		    	            	tabela	: tabela,
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
	        	            	searchValue:args.searchValue
			                });
		                }
		            })
		        })		        

				dataSourceTipoGuia = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getINPARA",
		    	            	chave	: "FATTIPODEGUIA",
		    	            	showKey	: 0
			                });
		                }
		            })
		        })		        

				dataSourceTipoAtendimento = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
						byKey: function(args) {
				            var tabela = $("#divSubRegra").dxForm("instance").option("formData").tipoGuia
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getTipoAtendimentoDataSource",
		    	            	tabela	: "FATTIPODEGUIAATEN"+tabela,
	        	            	codigo	: args
			                });
		                },
			            load: function(args) {
				            var tabela = $("#divSubRegra").dxForm("instance").option("formData").tipoGuia
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getTipoAtendimentoDataSource",
		    	            	tabela	: "FATTIPODEGUIAATEN"+tabela,
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
	        	            	searchValue:args.searchValue
			                });
		                }			            
		            })
		        })		        

				dataSourceStatusCobranca = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getINPARA",
		    	            	chave	: "STATUSCOBRANCAFAT",
		    	            	showKey	: 0
			                });
		                }
		            })
		        })		        

				dataSourceDocumentos = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            cacheRawData: true,
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getINPARA",
		    	            	chave	: "TIPOSDOCUMENTOS",
	        	            	take	: JSON.stringify(args.take),
	        	            	skip	: JSON.stringify(args.skip),
		    	            	showKey	: 0
			                });
		                }
		            })
		        })		
		        
				dataSourceINARTProcedimento = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            byKey: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getINARTProcedimento",
	                        	codigo	: args
			                });
		                },
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getINARTProcedimento",
	                        	skip	: args.skip,
	                        	take	: args.take,
	                        	filter	: JSON.stringify(args.filter),
	                        	searchValue:args.searchValue
			                });
		                }
		            })
		        })	

				dataSourceINARTProcedimentoComposto = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
				            var itemINART = $("#divSubRegra").dxForm("instance").option("formData").itemINART
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getINARTProcedimentoComposto",
		    	            	procedimento	: itemINART,
			                });
		                }
		            })
		        })	

				dataSourceGrupoPermissao = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
			            loadMode: "raw",
			            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
		    	            	method	:"getGrupoPermissao"
			                });
		                }
		            })
		        })	
		        	        

			}
			
			function ocultaExibe(camposOcultar,campoExibir){
				var camposOcultar = camposOcultar.split("^")
				var formulario = $("#divSubRegra").dxForm("instance")
				formulario.beginUpdate()
				for (var i=0;i<camposOcultar.length;i++){
					formulario.itemOption("regra."+camposOcultar[i],"visible",false)
				}
				formulario.itemOption("regra."+campoExibir,"visible",true)
				formulario.endUpdate()
				return
			}

			function exibir(campo){
				$("#divSubRegra").dxForm("instance").itemOption("regra."+campo,"visible",true)
			}

			// Salva os dados da aba "Geral"
			function salvarDados(){
				var codRegra		= $("#divForm").dxForm("instance").option("formData").regra
				var abaGeral		= $("#divGeral").dxForm("instance")
				var msg = "",cont=0
				if (!abaGeral.validate().isValid){
					msg = "geral"
					cont++
				}
				if (msg!=""){
		        	DevExpress.ui.notify("Há campos pendentes de preenchimento na"+(cont>1?"s":"")+" aba"+(cont>1?"s":"")+": "+msg, "warning", 4000);
			        return
				}
				var abaRegra		= $("#divSubRegra").dxForm("instance")
				$.post(urlPreparacao,{
					method			: "salvar",
					codRegra		: codRegra,
					camposGeral		: JSON.stringify(abaGeral.option("formData")),
					camposRegra		: JSON.stringify(abaRegra.option("formData")),
				},function(retorno){
					DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
					if (retorno.status==1){
						campoAlterado(0)
						dataSourceRegra.reload()
						if ($("#divForm").dxForm("instance").option("formData").regra==retorno.codRegra){
							carregaRegra(retorno.codRegra)
						}else{
							$("#divForm").dxForm("instance").updateData("regra",retorno.codRegra)
						}
					}
				},"json")
			}			
			
			// Monta abas - chamado automaticamente ao término da montagem do form 'divForm'
			function montaAbas(){
				montaAbaGeral()
				montaAbaControle()
			}
			
			
			// Monta aba 'Geral'
			function montaAbaGeral(){
				$("#divGeral").dxForm({
				    activeStateEnabled	: true,
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    height: function () {
				        return window.innerHeight - 170
				    },
				    minColWidth: 50,
				    screenByWidth: function (width) {
				        return "lg";
				    },
				    scrollingEnabled	: true,
				    onFieldDataChanged: function(e){
					    campoAlterado(1)
					    if (e.dataField=="tipo"){
						    abreRegra(e.value)
					    }
					},
					scrollingEnabled	: true,
				    items		: [{
					    itemType	: "group",
					    cssClass	: "first-group",
					    colCount	: 12,
					    items		: [{
						    itemType	: "group",
						    cssClass	: "first-group",
						    colSpan		: 6,
						    colCount	: 12,
							items 	: [{
								colSpan		: 12,
							    dataField	:	"tipo",
							    validationRules: [{ type: "required" }],        
							    label		: {
								    alignment: "right",
								    text	: "Tipo de Regra"
							    },
							    editorType	: "dxSelectBox",
								editorOptions: {
									dataSource: dataSourceTipoRegra,
				    		        valueExpr: "codigo", 
									displayExpr: "descricao",
									searchEnabled: true
				                }				            

						    },{
								colSpan		: 10,
							    dataField	:	"nome",
							    validationRules: [{ type: "required" }],        
							    label		: {
								    alignment: "right",
								    text	: "Nome"
							    }
						    },{
							    dataField	:	"situacao",
							    label		: {
								    alignment: "right",
								    text	: "Ativo?",
								    showColon: false
							    },
							    editorType	: "dxSwitch",
							    editorOptions : {
								    switchedOnText:"Sim",
								    switchedOffText:"Não",
								    value	: 1
							    }
						    },{
							    itemType	: "button",
							    name		: "validade",
								horizontalAlignment: "left",
						    	buttonOptions: {
							    	type	: "normal",
							    	icon	: "clock",
							    	hint	: "Sempre",
							    	onClick : function(){
								    	ativaIntervalo()
								    }
						    	}
							    
						    },{
							    colSpan		: 12,
							    dataField	: "descricao",
							    label		: {
								    alignment: "right",
								    text	: "Descrição"
							    }
						    }]
					    },{
						    colSpan		: 6,
						    template	: "<div id='ajuda'></div>"
					    }]
				    },{
					    colSpan		: 12,
					    template	: "<div id='divRegra'>"
				    },{
					    colSpan		: 12,
					    template	: "<div id='divRegraAplicada'>"
				    }]
				})
			}

			function ativaIntervalo(){
		  		$.getJSON(urlPreparacao,{
			  		method:"recIntervaloAtual"
			  	},function(resp){
					popupOptions = {
				        width: "700px",
				        height: "300px",
				        showTitle: true,
				        title: "Alterar Vigência da Regra",
				        visible: true,
				        dragEnabled: false,
				        closeOnOutsideClick: false,
						toolbarItems: [{
							location:"before",
							toolbar :"top",
						},{
							widget: "dxButton",
							location:"before",
							toolbar:"bottom",
							options: { 
								width	: "130px",
								type	: "default",
								icon	: "close",
	                			text	: "Fechar", 
	                			onClick : function(){
		                			$("#openPopup").dxPopup("hide")
		                		}
							}
						},{
							widget: "dxButton",
							location:"after",
							toolbar:"bottom",
							options: { 
								visible	: true,
								width	: "130px",
								type	: "default",
								icon	: "check",
	                			text	: "Confirmar", 
	                			onClick : function(){
		                			intervalo = $("#pesquisaPopup").dxForm("instance")
		                			if (!intervalo.validate().isValid){
			                			DevExpress.ui.notify("Há campos pendentes de preenchimento", "warning", 4000);
			                			return
		                			}
									$.post(urlPreparacao,{
										method			: "confirmaIntervalo",
										campos			: JSON.stringify(intervalo.option("formData"))
									},function(retorno){
										if (retorno.status==0){
											DevExpress.ui.notify(retorno.mensagem, retorno.type, 4000);
											return
										}
										campoAlterado(1)
										validade = $("#divGeral").dxForm("instance").getEditor("validade")
										if (retorno.comValidade){
											validade.option("type","danger")
										}else{
											validade.option("type","normal")
										}
										validade.option("hint",retorno.msgRetorno)
										$("#openPopup").dxPopup("hide")
									},'json')
		                		}
							}
						}]			        
				        
				    }	
				    $("#openPopup").remove()
				    $(document.body).append("<div id='openPopup'></div>")
		   			$("#openPopup").html("<div id='pesquisaPopup'></div>")
					$("#openPopup").dxPopup(popupOptions)
					$("#pesquisaPopup").dxForm({
						scrollingEnabled	: true,
					    activeStateEnabled	: true,
					    screenByWidth		: function (width) {
					        return "lg";
					    },
					    formData	: resp.formData,
					    onFieldDataChanged: function(e){
						    if (e.value==undefined) return
						    if (e.dataField=="validoDe"){
							    e.component.getEditor("dataDe").option("disabled",!e.value)
						    }
						    if (e.dataField=="validoAte"){
								e.component.getEditor("dataAte").option("disabled",!e.value)
						    }
					    },
					    alignItemLabels: true,
					    alignItemLabelsInAllGroups: true,
					    colCount	: 2,
					    onContentReady: function(){
						    montaGridVigencias()
					    },
					    items		: [{
						    itemType	: "group",
						    items		: [{
							    dataField	: "validoDe",
							    label		: {
								    text	: "Válido de"
							    },
							    validationRules: [{ type: "required" }],        
							    editorType	: "dxRadioGroup",
							    editorOptions: {
								    dataSource : [{id:0,text:"Sempre"},{id:1,text:"Data"}],
								    valueExpr	: "id",
								    displayExpr : "text"
							    }
						    },{
							    dataField	: "dataDe",
							    editorType	: "dxDateBox",
							    label		: {
								    visible	: false
							    },
							    validationRules: [{ type: "required" }],        
							    editorOptions: {
								    disabled: !resp.formData.validoDe,
	    		                	placeholder:"Informe a data/hora inicial...",
								    type	: "datetime",
								    openOnFieldClick:true,
								    showAnalogClock:false,
								    showClearButton: true,
								    onValueChanged: function (e) {
					 					var form = $("#pesquisaPopup").dxForm("instance");
					 					if (e.value == "" || e.value == null) {
	            							form.getEditor("dataAte").option("min", null);
					 					}else{
	            							form.getEditor("dataAte").option("min", e.value);
					 					}
	        						}

							    }
						    }]
					    },{
						    itemType	: "group",
						    items		: [{
							    dataField	: "validoAte",
							    label		: {
								    text	: "Até"
							    },
							    validationRules: [{ type: "required" }],        
							    editorType	: "dxRadioGroup",
							    editorOptions: {
								    dataSource : [{id:0,text:"Sempre"},{id:1,text:"Data"}],
								    valueExpr	: "id",
								    displayExpr : "text"
							    }
						    },{
							    dataField	: "dataAte",
							    editorType	: "dxDateBox",
							    label		: {
								    visible	: false
							    },
							    validationRules: [{ type: "required" }],        
							    editorOptions: {
								    disabled: !resp.formData.validoAte,
	    		                	placeholder:"Informe a data/hora final...",
								    type	: "datetime",
								    openOnFieldClick:true,
								    showAnalogClock:false,
								    showClearButton: true,
								    onValueChanged: function (e) {
					 					var form = $("#pesquisaPopup").dxForm("instance");
					 					if (e.value == "" || e.value == null) {
	            							form.getEditor("dataDe").option("max", null);
					 					}else{
	            							form.getEditor("dataDe").option("max", e.value);
					 					}
	        						}
							    }
						    }]
					    },{
						    colSpan	: 2,
						    template: "<div id='divGridVigencia'>teste</div>"
					    }]
					})
			  	})
			}		
			
			function montaGridVigencias(){
				$("#divGridVigencia").dxDataGrid({
					columns: [{
						dataField	: "periodo",
						caption		: "Período",
					},{
						dataField	: "auditoria",
						width		: "300px"
					}],
					dataSource:  new DevExpress.data.CustomStore({
	            		load: function(args) {
				            return $.getJSON(urlPreparacao,{
	        	            	method	:"recuperaValidacoes"
		        	    	});
	    	    		}	
	    			}),
		    		selection: { mode: "single" },
					hoverStateEnabled: true,
					paging: { enabled: false},
					height: "115px",	
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
					columnFixing: {
			            enabled: false
			        }
				})
			}
			function abreRegra(regra){
				$("#ajuda").empty()
				if (!regra){
					$("#divSubRegra").remove()
					return
				}
				$("#divRegra").html("<div id='divSubRegra'></div>")
				$("#divRegraAplicada").html("<div id='divSubRegraAplicada'></div>")
		  		$.get(urlPreparacao,{
			  		method		: "recRegraTipo",
			  		codRegra	: $("#divForm").dxForm("instance").option("formData").regra,
			  		tipo		: regra
			  	},function(retorno){
				  	eval("var retorno = "+retorno)
				  	if (retorno.helpText){
				  		$("#ajuda").html("<div class='destaque'><i class='fas fa-info-circle' style='font-size:18px;color:#337ab7'></i>&nbsp;&nbsp;"+retorno.helpText+"</div>")
				  	}
					$("#divSubRegra").dxForm({
						scrollingEnabled	: true,
					    activeStateEnabled	: true,
					    minColWidth			: 50,
					    formData			: retorno.formData,
					    screenByWidth		: function (width) {
					        return "lg";
					    },
					    onFieldDataChanged: function(e){
						    if (e.value==undefined) return
						    campoAlterado(1)
						    var obj = e.component.itemOption("regra."+e.dataField)
						    if (obj==undefined) return
						    if (obj.elementAttr){
							    if (obj.elementAttr.ocultaExibe){
								    var oculta = obj.elementAttr.ocultaExibe
								    ocultaExibe(oculta,oculta.split("^")[e.value-1])
							    }
							    if (obj.elementAttr.atualizaDataSource){
								    var dados = obj.elementAttr.atualizaDataSource.split("^")
								    var formulario = $("#divSubRegra").dxForm("instance")
								    e.component.updateData(dados[0],"")
								    editor = e.component.getEditor(dados[0])
								    editor.option("disabled",false)
								    //eval(dados[1]+"="+e.value)
								    eval("dataSource"+dados[2]+".pageIndex(0)")
								    eval("dataSource"+dados[2]+".reload()")
							    }
							    
						    }
						},
					    alignItemLabels: true,
					    alignItemLabelsInAllGroups: true,
					    items		: retorno.items
					})

					$("#divSubRegraAplicada").dxForm({
						items		: [{
							itemType : "group",
							caption : "Regra Aplicada Em",
							cssClass : "second-group",
							colCount : 12,
							items : [{
								colSpan	: 12,
								template : "<div id='divSubRegraAplicadaGrid'>"
							}]
						}]
					})
					

					$("#divSubRegraAplicadaGrid").dxDataGrid({
				        columns:[{
							dataField	: "acordoComercial",
							caption		: "Acordo Comercial",
							width		: "250px",
					   	},{
							dataField	: "ponto",
							caption		: "Ponto de Aplicação"
					   	}],
						dataSource	: retorno.pontoAplicacao,
						showBorders: true,
						showRowLines: true,
						rowAlternationEnabled: true,
						wordWrapEnabled: true,					
					})
				  	
			  	})
			}
			// Monta aba 'Controle'
			function montaAbaControle(){
				$("#divControle").dxForm({
					scrollingEnabled	: true,
				    activeStateEnabled	: true,
				    minColWidth			: 50,
				    readOnly			: true,
				    screenByWidth		: function (width) {
				        return "lg";
				    },
				    height: function () {
				        return window.innerHeight - 170
				    },
				    alignItemLabels: true,
				    alignItemLabelsInAllGroups: true,
				    items		: [{
					    cssClass	: "first-group",
					    itemType	: "group",
						items		: [{
						    dataField	:	"criadoEm",
						    label		: {
							    alignment: "right",
							    text	: "Criado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"criadoPor",
						    label		: {
							    alignment: "right",
							    text	: "Criado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"alteradoEm",
						    label		: {
							    alignment: "right",
							    text	: "Alterado Em"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						},{
						    dataField	:	"alteradoPor",
						    label		: {
							    alignment: "right",
							    text	: "Alterado Por"
						    },
						    editorOptions: {
							    width: "300px"
						    }
						}]
				    }]
				})
			}
			
			function campoAlterado(flAlterado){
				if (carregarDados) return
				if (alterado != flAlterado){
					alterado = flAlterado
					if (alterado){
						$("#botaoSalvar").removeClass("dx-button-default").addClass("dx-button-success")
					}else{
						$("#botaoSalvar").removeClass("dx-button-success").addClass("dx-button-default")
					}
				}
			}
		</script>
	</body>
</html>
