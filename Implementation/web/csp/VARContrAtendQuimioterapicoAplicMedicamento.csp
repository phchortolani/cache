<div class="panel-body">
	<!--<div class="row">
		<div class="col-md-3 tituloRadio">Diagnóstico: Anemia Ferropriva:</div>
		<div class="col-md-2 campo"><div id="checkDiagnosticoPerdaSanguinea"></div></div>
		<div class="col-md-2 campo"><div id="checkDiagnosticoBariatrica"></div></div>
		<div class="col-md-2 campo"><div id="checkDiagnosticoOutros"></div></div>
	</div>
	<div class="row">
		<div class="col-md-2 tituloRadio">&nbsp;</div>
		<div class="col-md-1 tituloRadioNormal">Outros: </div>
		<div class="col-md-8 campo"><div id="textDiagnosticoOutros"></div></div>
	</div>-->
	<div class="row">
		<div class="col-md-2 tituloRadio">Alerta:</div>
		<div class="col-md-8 campo"><div id="textApliMedAlerta"></div></div>
	</div>
	<div class="row">
		<div class="col-md-2 tituloRadio">Diagnostico Secundário:</div>
		<div class="col-md-8 campo"><div id="textApliMedDiagnostico"></div></div>
	</div>
	<div class="row">
		<div class="col-md-12" Style="height:5px"></div>
	</div>
		
	<div class="row">
		<div class="col-md-12">
			<div id="divMedicamento"></div>
		</div>	
	</div>
</div>

<script type="text/javascript">
	dataSourceAplicMedicamento = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		key: "sequencia",
  		loadMode: "raw",   
  		load: function() {
      	return $.getJSON(urlPreparacao,{method:"GetAplicMedicamento",pCodProntuario:pCodProntuario});
  		},
  		insert: function (values) {
        objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendQuimioterapico.ArmAplicMedicamento(pCodProntuario, "", objDados, YBED))#;
    	},
			update: function (key, values) {
				var idRow = key;
				objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendQuimioterapico.ArmAplicMedicamento(pCodProntuario, idRow, objDados, YBED))#;
			},
			remove: function (key) {
				#server(VAR.CSP.VARContrAtendQuimioterapico.ExcluirAplicMedicamento(pCodProntuario, key, YBED))#;
    	}					
		})
	});
	
	dataSourceReacao = [{id: 0, descricao: "Não"},{id: 1, descricao: "Sim"}]
	
	dataSourceRespAplMedicamento = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			load: function(args) {
				return $.getJSON(urlPreparacao,{method:"CarregaProfissional", pFiltro: args.searchValue,
					pTake: args.take, pSkip: args.skip, YLOCATION: YLOCATION});
			},
			byKey: function(args) {
				return $.getJSON(urlPreparacao,{method:"CarregaProfissional", pKey: args, YLOCATION: YLOCATION});
			}
		})
	});

	/*campoDiagnosticoPerdaSanguinea = $("#checkDiagnosticoPerdaSanguinea").dxCheckBox({text: " Perda Sanguínea (D50.0)"}).dxCheckBox("instance");
	campoDiagnosticoBariatrica = $("#checkDiagnosticoBariatrica").dxCheckBox({text: " Bariátrica (D50.8 + E66)"}).dxCheckBox("instance");
	campoDiagnosticoOutros = $("#checkDiagnosticoOutros").dxCheckBox({text: " Outros D50.9"}).dxCheckBox("instance");
	campoTextDiagnosticoOutros = $("#textDiagnosticoOutros").dxTextBox({height: 27}).dxTextBox("instance");*/
	campoApliMedAlerta = $("#textApliMedAlerta").dxTextBox({height: 27}).dxTextBox("instance");
	campoApliMedDiagnostico = $("#textApliMedDiagnostico").dxTagBox({
		valueExpr: "Codigo", 
		displayExpr: "Descricao",
		searchEnabled: true,
		buttons: [{
			name: "btnPesquisarApliMedDiagnostico",
			location: "before",
			options: {
				hint: "Pesquisar",
				icon: "fa fa-search",
				type: "normal",
				onClick: function() {
					abrePesquisaCID(campoApliMedDiagnostico, campoApliMedDiagnostico.option("value"));
				}
			}
		}],
		itemTemplate: function (data, itemIndex, element) {
			if (CategoriaAnt != data.Categoria){
				retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
				CategoriaAnt = data.Categoria
				element.append(retorno)
			}
			return element.append(data.Descricao)
    },							
		dataSource: new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				byKey: function(args) {
					return $.getJSON(urlPreparacao,{
						method:"getCID",
						codigo: args
					});
				},
				load: function(args) {
					return $.getJSON(urlPreparacao,{
						method:"getCID",
						usuario: YBED,
						skip:args.skip,
						take:args.take,
						searchValue:args.searchValue
					});
				}
			})
		})
	}).dxTagBox("instance");

	$("#divMedicamento").dxDataGrid({
		dataSource: dataSourceAplicMedicamento,
		columns: [
			{	dataField: "sequencia", caption: "Nº", alignment: "center", allowEditing: 0, width: 50 },
			{	dataField: "data", caption: "Data", alignment: "center", allowEditing: 1, 
				dataType: "date", width: 100, validationRules: [{ type: "required" }] },
			{	dataField: "hora", caption: "Hora", alignment: "center", allowEditing: 1, 
				width: 70, validationRules: [{ type: "required" }] },
			{	dataField: "pressaoArterial", caption: "Presão Arterial", alignment: "center", 
				width: 80, validationRules: [{ type: "required" }] },
			{	dataField: "pulso", caption: "Pulso", alignment: "center", dataType: "number", 
				width: 80, validationRules: [{ type: "required" }] },
			{	dataField: "temperatura", caption: "Tempera- tura", alignment: "center", dataType: "number", 
				width: 80, validationRules: [{ type: "required" }] },
			{	dataField: "medicacaoDesc", caption: "Medicação", alignment: "center", 
				validationRules: [{ type: "required" }], setCellValue: function (rowData, value) {
	        if (value == "" || value == null) return
	        objLinha = this;
	        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaProduto(value))#;
	        retorno = retorno.split("~"); 
					if (retorno[0] == 0) {
						DevExpress.ui.notify(retorno[1],"warning",2000);
						return;	
					}
					objLinha.defaultSetCellValue(rowData, retorno[2]);
					rowData.medicacao = retorno[1];	
		  	},
		  },
		  {	dataField: "qtde", caption: "Qtde.", alignment: "center", dataType: "number", 
		  	width: 80, validationRules: [{ type: "required" }] },
			{	dataField: "solucaoFisiologica", caption: "SF(ml)", alignment: "center", dataType: "number", 
				width: 80, validationRules: [{ type: "required" }] },
			{	dataField: "reacao", caption: "Reação", alignment: "center", width: 80, 
	      validationRules: [{ type: "required" }], lookup: { 
	      	dataSource: dataSourceReacao,
	        valueExpr: "id",
	        displayExpr: "descricao"
	      }
			},
			{	dataField: "funcionarioNome", caption: "Funcionário", alignment: "center", 
				validationRules: [{ type: "required" }], setCellValue: function (rowData, value) {
	        if (value == "" || value == null) return
	        objLinha = this;
	        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaProfissional(value))#;
	        retorno = retorno.split("~"); 
					if (retorno[0] == 0) {
						DevExpress.ui.notify(retorno[1],"warning",2000);
						return;	
					}
					objLinha.defaultSetCellValue(rowData, retorno[2]);
					rowData.funcionario = retorno[1];	
		  	}, }

		],
		onEditorPreparing: function(e) {
			if (e.parentType == "dataRow" && e.dataField == "medicacaoDesc") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceDroga;
				e.editorOptions.value = e.row.data.medicacao;
				e.editorOptions.displayExpr = "DescProduto";
				e.editorOptions.valueExpr = "CodProduto";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.showClearButton = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}
			if (e.parentType == "dataRow" && e.dataField == "funcionarioNome") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceRespAplMedicamento;
				e.editorOptions.value = e.row.data.funcionario;
				e.editorOptions.displayExpr = "DescProvider";
				e.editorOptions.valueExpr = "CodProvider";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.showClearButton = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}
		},
		columnChooser: { enabled: false, mode: "dragAndDrop"},
		allowColumnReordering: false,
		editing: {
			mode: "batch", allowAdding: true, allowUpdating: true, 
			allowDeleting: true, useIcons: true
		},
		columnAutoWidth: false,
		showColumnLines: true,
		showRowLines: true,
		rowAlternationEnabled: true,
		hoverStateEnabled: true,
		showBorders: true,
		headerFilter: { visible: false },
		groupPanel: { visible: false, allowColumnDragging: true },
		columnFixing: { enabled: false },
		filterRow: { visible: false },		height: 400,
		export: { enabled: false },
		stateStoring: { enabled: false }, 
		wordWrapEnabled: true
	});	
	
</script>
