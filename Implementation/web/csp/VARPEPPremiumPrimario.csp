<script language='javascript'>
		fichaPEPGlobal = ""
		tipoPEPGlobal = ""
		function abrePEPPrimario(){
	        if (codPacienteValor==""){
		        DevExpress.ui.notify("Informe o paciente", "warning", 4000);
		        return
	        }
			loadPanel.show();
		    if ($("#openPesquisaSub").html()!=""){
		    	pesquisaExamesSub.dispose()
		    	openPesquisaSub.dispose()
		    }
		    $("#openPesquisaSub").removeClass("Layout"+layout)
   			$("#openPesquisaSub").html("<div id='pesquisaExamesSub'></div>")
			preparaPEPPrimario(ficha,1)

		}
	    
	    function salvarPEPPrimario(impressao){
			if (!pesquisaExamesSub.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
			dadosPEPPrimario = pesquisaExamesSub.option("formData")
	        $.getJSON(urlPreparacao,{
	            method		: "salvarPEPPrimario",
	            paciente	: codPacienteValor,
		        codCID		: codCID,
		        ficha 		: ficha,
		        fichaSeq	: fichaSeq,
	            dados		: JSON.stringify(dadosPEPPrimario)
	        },function(retorno){
		        if (impressao==1){
			        imprimir(1,"Prontuário Primário")
		        }else{
		        	DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
		        }
		        carregarPaciente(codPacienteValor)
		    });

		}

	    
        function preparaPEPPrimario(fichaPEP,tipoPEP){
	        fichaPEPGlobal = fichaPEP
	        tipoPEPGlobal = tipoPEP
            $.getJSON(urlPreparacao,{
                method	:"getPEPPrimario",
                paciente: codPacienteValor,
                dataPEP	: dataPEP,
	        	ficha	: fichaPEP,
	        	tipo	: tipoPEP
            },function(retorno){
		    	if ($("#pesquisaExamesSub")[0].classList[0]=="dx-form"){
			    	pesquisaExamesSub.option("formData",retorno.formData)
			    	openPesquisaSub.option("toolbarItems[2].options.disabled",retorno.disabled)
			    	openPesquisaSub.option("toolbarItems[0].html",retorno.title)
			    	loadPanel.hide()
			    	return
		    	}
	            DevExpress.localization.locale("pt");
		    	pesquisaExamesSub = $("#pesquisaExamesSub").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
			    	onContentReady: function(){
	    				openPesquisaSub = $("#openPesquisaSub").dxPopup({
					        width: '95%',
					        height: '90%',
					        showTitle: true,
					        visible: true,
					        dragEnabled: false,
					        closeOnOutsideClick: false,
							toolbarItems: [{
								location:"before",
								toolbar :"top",
								html: retorno.title
							},{
								widget: "dxButton",
								location:"before",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "close",
			            			text	: "Fechar", 
			            			onClick : function(){
			                			openPesquisaSub.hide()
			                		}
								}
							},{
								widget: "dxButton",
								location:"after",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "check",
			            			text	: "Salvar", 
			            			disabled: retorno.disabled,
			            			onClick : function(){
			                			salvarPEPPrimario(0)
			                		}
								}
							}],			        

	    				}).dxPopup("instance")
	    				loadPanel.hide();

				    },
			    	formData	: retorno.formData,
					scrollingEnabled	: true,
					showColonAfterLabel	: false,
					onFieldDataChanged	: function(obj){
						if (obj.dataField=="peso"){
							peso = Number(obj.value)
							altura = Number(pesquisaExamesSub.option("formData").altura)
							alturaIMC = altura*altura
							imc = ""
							if (alturaIMC!=0){
								imc = peso/alturaIMC
								imc = imc.toFixed(2)
							}
							sc = 0.007184 * Math.pow(altura*100,.725) * Math.pow(peso,.425)
							sc = sc.toFixed(3)
							//
							pesquisaExamesSub.updateData("sc",Number(sc))
							pesquisaExamesSub.updateData("imc",Number(imc))

						}
						if (obj.dataField=="altura"){
							altura = Number(obj.value)
							peso = Number(pesquisaExamesSub.option("formData").peso)
							alturaIMC = altura*altura
							imc = ""
							if (alturaIMC!=0){
								imc = peso/alturaIMC
								imc = imc.toFixed(2)
							}
							sc = 0.007184 * Math.pow(altura*100,.725) * Math.pow(peso,.425)
							sc = sc.toFixed(3)
							//
							pesquisaExamesSub.updateData("sc",Number(sc))
							pesquisaExamesSub.updateData("imc",Number(imc))
						}
						if (obj.dataField=="antecedentesCirurgicos"){
							if (obj.value==1){
								var editor = pesquisaExamesSub.getEditor("antecedentesCirurgicosTexto");
								editor.option("disabled",false)
							}else{
								pesquisaExamesSub.updateData("antecedentesCirurgicosTexto","")
								var editor = pesquisaExamesSub.getEditor("antecedentesCirurgicosTexto");
								editor.option("disabled",true)
							}
						}
						if (obj.dataField=="paiFalecido"){
							if (obj.value==1){
								var editor = pesquisaExamesSub.getEditor("causaFalecimentoPai");
								editor.option("disabled",false)
							}else{
								var editor = pesquisaExamesSub.getEditor("causaFalecimentoPai");
								editor.option("disabled",false)
							}
						}
						if (obj.dataField=="maeFalecida"){
							if (obj.value==1){
								var editor = pesquisaExamesSub.getEditor("causaFalecimentoMae");
								editor.option("disabled",false)
							}else{
								var editor = pesquisaExamesSub.getEditor("causaFalecimentoMae");
								editor.option("disabled",false)
							}
						}
						if (obj.dataField=="antecedentesGestacionais"){
							if ($("#btDatasGest").html()==undefined){
								return
							}
							if (obj.value){
								btDatasGest.option("disabled",false)
							}else{
								btDatasGest.option("disabled",true)
								pesquisaExamesSub.resetValues()
							}
						}
					},
			        items	:  [{
   			            itemType: "group",
			            colCount: 2,
						items : [{
							itemType: "button",
							horizontalAlignment: "left",
				            buttonOptions: {
						        stylingMode: "contained",
						        icon: "fa fa-search",
						        hint: "Exibir Histórico de Passagens do Paciente",
						        text: "Histórico de Passagens",
						        onClick: function() {
							        listarPassagens()
						        }
				            }
				        },{
							itemType: "button",
							horizontalAlignment: "right",
				            buttonOptions: {
						        stylingMode: "contained",
						        icon: "fa fa-print",
						        hint: "Imprimir Prontuário do Paciente",
						        text: "Imprimir",
						        onClick: function() {
							        if (openPesquisaSub.option("toolbarItems[2].options.disabled")==1){
							        	imprimir(7,"Prontuário Primário")
							        }else{
							        	salvarPEPPrimario(1)
							        }
							        
						        }
				            }
				        }]
		    		},{
			    		alignItemLabels : false,
			    		alignItemLabelsInAllGroups:false,
			            itemType: "group",
			            caption: "Exame Físico",
			            colCount: 7,
			            items 	: [{
				            itemType: "group",
				            colCount:2,
				            items :[{
								dataField	: "pa1",
								editorType	: "dxNumberBox",
								cssClass:"Padding-R4",
								editorOptions: {
									width		: "60px",	
								},
								label		: {
									text	: "PA:"
								}
							},{
								cssClass:"Padding-L4",
								editorType	: "dxNumberBox",
								dataField	: "pa2",
								editorOptions: {
									width		: "60px",	
								},
								label		: {
									text	: "X"
								}
							}]
						},{
							dataField	: "pulso",
							editorType	: "dxNumberBox",
							label		: {
								text	: "Pulso:"
							},
							editorOptions: {
								max: "200"
							}
						},{
							dataField	: "temp",
							editorType	: "dxNumberBox",
							label		: {
								text	: "Temp/°C:"
							},
							editorOptions: {
								format: "#0.##",
								max: "99"
							}

						},{
							dataField	: "peso",
							editorType	: "dxNumberBox",
							label		: {
								text	: "Peso/Kg:"
							},
							editorOptions: {
								format: "#,##0.###",
								max: "1000"
							}
						},{
							dataField	: "altura",
							editorType	: "dxNumberBox",
							label		: {
								text	: "Altura/cm:"
							},
							editorOptions: {
								format: "0.##",
								max: "3",
							}

						},{
							dataField	: "sc",
							editorType	: "dxNumberBox",
							editorOptions: {
								readOnly	: true,
								format: "0.000",
							},
							label		: {
								text	: "SC m²:"
							}
						},{
							dataField	: "imc",
							editorOptions: {
								readOnly	: true,
								format: "#,###.##",
							},
							editorType	: "dxNumberBox",
							label		: {
								text	: "IMC:"
							}
						}]
			        },{
   			            itemType: "group",
   			            items:[{
				        	dataField : "cabecaPescoco",
							label		: {
								text	: "Cabeça e Pescoço:"
							}
   			            }]
			        },{
			            itemType: "group",
			            colCount: 2,
			            items 	: [{
							dataField	: "torax",
							label		: {
								text	: "Tórax:"
							},
							editorType	: "dxTextArea",
		                    editorOptions: {
			                 	height: "80",
			                 	maxLength: 1000
		                    }

						},{
							itemType: "group",
			            	items	:[{
								dataField	: "coracao",
								label		: {
									text	: "Coração:"
								}
			            	},{
				            	dataField	: "pulmoes",
								label		: {
									text	: "Pulmões:"
								}
			            	}]
						}]
			        },{
			            itemType: "group",
			            colCount: 2,
			            items 	: [{
							dataField	: "abdomen",
							label		: {
								text	: "Abdômen:"
							},
							editorType	: "dxTextArea",
		                    editorOptions: {
			                 	height: "80",
			                 	maxLength: 1000
		                    }

						},{
							itemType: "group",
			            	items	:[{
								dataField	: "figado",
								label		: {
									text	: "Fígado:"
								}
			            	},{
				            	dataField	: "baco",
								label		: {
									text	: "Baço:"
								}
			            	}]
						}]
			        },{
			            itemType: "group",
			            colCount: 2,
			            items 	: [{
							dataField	: "mmss",
							label		: {
								text	: "MMSS:"
							}
						},{
							itemType: "group",
							items	: [{
								dataField	: "mmii",
								label		: {
									text	: "MMII:"
								}
							}]
						}]
			        },{
				        itemType: "group",
		               	caption: "Queixas",
						items: [{
							dataField	: "historiaSintomas",
	                    	editorType	: "dxTextArea",
	                    	label		: {
		                    	text	: "História e Sintomas",
		                    	visible	: true
		                    },
						    editorOptions: {
            					height:65,
            					maxLength: 1000
        					}
						}]
    	            },{
				        itemType: "group",
	                    caption	: "Antecedentes Pessoais",
	                    name	: "AntecPessoais",
			            colCount: 10,
						items: [{
							colSpan		: 5,
							dataField	: "molestiasPregressasAtuais",
							label		: {
								text	: "Moléstias Pregr. e Atuais:"
							},
							editorType	: "dxTagBox",
				            editorOptions: {
								itemTemplate: function (data, itemIndex, element) {
									if (CategoriaAnt != data.Categoria){
										retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
										CategoriaAnt = data.Categoria
										element.append(retorno)
									}
									return element.append(data.Descricao)
						        },

							buttons: [{
									name: "btnPesquisarMolestiasPregressasAtuais",
									location: "after",
									options: {
										stylingMode: "text",
										hint: "Pesquisar",
										icon: "fa fa-search",
										onClick: function() {
											abrePesquisaCID(pesquisaExamesSub.getEditor("molestiasPregressasAtuais"), pesquisaExamesSub.getEditor("molestiasPregressasAtuais").option("value"));
										}
									}
					      }],							
	            		        valueExpr: "Codigo", 
								displayExpr: "Descricao",
								searchEnabled: true,
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
					                byKey: function(args) {
					                    return $.getJSON(urlPreparacao,{
						                    method:"getCID",
						                    codigo: args
						                });
					                },
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
						                    method:"getCID",
				                        	usuario: YBED,
				                        	skip:args.skip,
				                        	take:args.take,
				                        	filter:JSON.stringify(args.filter),
				                        	searchValue:args.searchValue
						                });
						                }
						            })
						        })
				            },				            

						},{
							visible		: sexoPaciente==2?true:false,
							colSpan		: 5,
							itemType: "group",
				            colCount: 5,
				            label	: {
								text	: "Antec. Gestacionais:"
							},
							items: [{
								cssClass:"Padding-L0",
								dataField	: "antecedentesGestacionais",
								label		: {
									text	: "Antec. Gestacionais:",
									visible	: false
								},
								editorType	: "dxCheckBox"
							},{
								colSpan		: 3,
								label		: {
									text	: "Datas Gestacionais:"
								},
								cssClass:"Padding-R0",
								template: "<div id='btDatasGest'></div>"
							},{
								colSpan	: 2,
								cssClass:"Padding-L0",
								dataField	: "datasGestacionais",
								readOnly	: true,
								label		: {
									visible	: false
								},
								editorType	: "dxTagBox",
			                    editorOptions: {
				                    width:'220px',
			                        readOnly: true
			                    }
								
							}]
						},{
							visible		: sexoPaciente==2?true:false,
							colSpan		: 5,
							dataField	: "historiaMenstrual",
							label		: {
								text	: "História Menstrual:"
							}
						},{
							colSpan		: 5,
							dataField	: "descendencia",
							label		: {
								text	: "Descendência:"
							}
						},{
							colSpan		: 4,
							dataField	: "antecedentesCirurgicos",
							label		: {
								text	: "Antec. Cirúrgicos?:"
							},
				            editorType	: "dxRadioGroup",
				            editorOptions: {
					            layout:"horizontal",
	            		        valueExpr: "value", 
								displayExpr: "text",
					            dataSource : [{
							        "text": "Sim",
							        "value": "1"
							    },
							    {
							        "text": "Não",
							        "value": "0"
							    },
							    {
							        "text": "Não Sabe",
							        "value": "2"
							    }]
				            }
					    },{
						    colSpan		: 6,
					        dataField	: "antecedentesCirurgicosTexto",
							label		: {
								text	: "Qual Antecedente?:",
							},
				            editorType	: "dxTextBox",
				            editorOptions: {
					            disabled : retorno.formData.antecedentesCirurgicos==1?false:true,
				            }							
						},{
							colSpan		: 10,
							dataField	: "habitosVicios",
							label		: {
								text	: "Hábitos e Vícios:"
							}
						}]
    	            },{
				        itemType: "group",
	                    caption: "Antecedentes Familiares",
	                    colCount:10,
						items: [{
							colSpan		: 3,
							dataField	: "paiFalecido",
							label		: {
								text	: "Pai Falecido?"
							},
				            editorType	: "dxRadioGroup",
				            editorOptions: {
					            layout		: "horizontal",
	            		        valueExpr	: "value", 
								displayExpr	: "text",
					            dataSource	: [{
							        "text"	: "Sim",
							        "value"	: "1"
							    },{
							        "text"	: "Não",
							        "value"	: "0"
							    }]
				            }
						},{
							colSpan	: 4,
							dataField	: "cidFalecimentoPai",
							label		: {
								text	: "CID:"
							},
							editorType	: "dxTagBox",
							editorOptions: {
								valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							buttons: [{
									name: "btnPesquisarcidFalecimentoPai",
									location: "after",
									options: {
										hint: "Pesquisar",
										icon: "fa fa-search",
										stylingMode: "text",
										onClick: function() {
											abrePesquisaCID(pesquisaExamesSub.getEditor("cidFalecimentoPai"), pesquisaExamesSub.getEditor("cidFalecimentoPai").option("value"));
										}
									}
					      }],
							itemTemplate: function (data, itemIndex, element) {
								if (CategoriaAnt != data.Categoria){
									retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
									CategoriaAnt = data.Categoria
									element.append(retorno)
								}
								return element.append(data.Descricao)
							},							
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlPreparacao,{
										method:"getCID",
										codigo: args});
								},
								load: function(args) {
										return $.getJSON(urlPreparacao,{
											method:"getCID",
											usuario: YBED,
											skip:args.skip,
											take:args.take,
											filter:JSON.stringify(args.filter),
											searchValue:args.searchValue
										});
									}
								})
							})
							}}
						
						,{
							colSpan		: 3,
					        dataField	: "causaFalecimentoPai",
							label		: {
								text	: "Causa do Falecimento:",
							},
				            editorType	: "dxTextBox",
				            editorOptions: {
					            disabled : !retorno.formData.paiFalecido,
				            }							
						},{
							colSpan		: 3,
							dataField	: "maeFalecida",
							label		: {
								text	: "Mãe Falecida?"
							},
				            editorType	: "dxRadioGroup",
				            editorOptions: {
					            layout		: "horizontal",
	            		        valueExpr	: "value", 
								displayExpr	: "text",
					            dataSource	: [{
							        "text"	: "Sim",
							        "value"	: "1"
							    },{
							        "text"	: "Não",
							        "value"	: "0"
							    }]
				            }
						},
						{
							colSpan	: 4,
							dataField	: "cidFalecimentoMae",
							label		: {
								text	: "CID:"
							},
							editorType	: "dxTagBox",
							editorOptions: {
								valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							buttons: [{
									name: "btnPesquisarcidFalecimentoMae",
									location: "after",
									options: {
										hint: "Pesquisar",
										icon: "fa fa-search",
										stylingMode: "text",
										onClick: function() {
											abrePesquisaCID(pesquisaExamesSub.getEditor("cidFalecimentoMae"), pesquisaExamesSub.getEditor("cidFalecimentoMae").option("value"));
										}
									}
					      }],
							itemTemplate: function (data, itemIndex, element) {
								if (CategoriaAnt != data.Categoria){
									retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
									CategoriaAnt = data.Categoria
									element.append(retorno)
								}
								return element.append(data.Descricao)
							},							
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlPreparacao,{
										method:"getCID",
										codigo: args
									});
								},
								load: function(args) {
										return $.getJSON(urlPreparacao,{
											method:"getCID",
											usuario: YBED,
											skip:args.skip,
											take:args.take,
											filter:JSON.stringify(args.filter),
											searchValue:args.searchValue
										});
									}
								})
							})
						}}
						
						,{
							colSpan		: 3,
					        dataField	: "causaFalecimentoMae",
							label		: {
								text	: "Causa do Falecimento:",
							},
				            editorType	: "dxTextBox",
				            editorOptions: {
					            disabled : !retorno.formData.maeFalecida,
				            }
						},{
							colSpan		: 10,
					        dataField	: "outrosFalecimento",
							label		: {
								text	: "Outros:",
							},
				            editorType	: "dxTextArea",
				            editorOptions: {
					            height : 60,
				            }
						}]
    	            },{
				        itemType: "group",
   			            items:[{
			            	dataField	: "conduta",
							label		: {
								text	: "Conduta:"
							},
							editorType	: "dxTextArea",
					        editorOptions: {
           						height:80,
           						maxLength: 1000
					        }
   			            }]
			        },{
				        itemType: "group",
   			            items:[{
							dataField	: "hd",
							label		: {
								text	: "HD:"
							},
							validationRules: [{ type: "required" }],
							editorType	: "dxTagBox",
				            editorOptions: {
	            		        valueExpr: "Codigo", 
								displayExpr: "Descricao",
								searchEnabled: true,
								buttons: [{
									name: "btnPesquisarHD",
									location: "after",
									options: {
										hint: "Pesquisar",
										icon: "fa fa-search",
										stylingMode: "text",
										onClick: function() {
											abrePesquisaCID(pesquisaExamesSub.getEditor("hd"), pesquisaExamesSub.getEditor("hd").option("value"));
										}
									}
					      		}],
								itemTemplate: function (data, itemIndex, element) {
									if (CategoriaAnt != data.Categoria){
										retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
										CategoriaAnt = data.Categoria
										element.append(retorno)
									}
									return element.append(data.Descricao)
						        },							
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
					                byKey: function(args) {
					                    return $.getJSON(urlPreparacao,{
						                    method:"getCID",
						                    codigo: args
						                });
					                },
						            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
							                    method:"getCID",
					                        	usuario: YBED,
					                        	skip:args.skip,
					                        	take:args.take,
					                        	filter:JSON.stringify(args.filter),
					                        	searchValue:args.searchValue
							                });
						                }
						            })
						        })
				            },				            
   			            }]
			        },{
				        itemType: "group",
	                    caption: "Medicações Utilizadas",
						items: [{
							dataField	: "medicacoesUtilizadas",
	                    	//editorType	: "dxTextArea",
	                    	label		: {
		                    	visible	: false
		                    },
		                    
		                    
		                    
				            editorType	: "dxTagBox",
				            editorOptions: {
				                searchEnabled: true,
				                showClearButton: true,
		        		        valueExpr: "CodMedicamento", 
								displayExpr: "DescMedicamento",
								searchEnabled: true,
								itemTemplate: function (data, itemIndex, element) {
									retorno = "";
									if (data.Fav>0){
										retorno = "<i class='fa fa-star' title='Receitado "+data.Fav+" vezes'></i>"
									}
									return retorno+" "+data.DescMedicamento
						        },							
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
					                byKey: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaMedicamentos",
						                    codigo	: args
						                });
					                },
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaMedicamentos",
											searchValue:args.searchValue,
											filter:JSON.stringify(args.filter),
				                        	skip:args.skip,
				                        	take:args.take,
											
						                });
						                }
						            })
						        })
				            }
						}]
    	            }]
		    	}).dxForm("instance")
		    	
		    	btDatasGest = $("#btDatasGest").dxButton({
					hint: "Adicionar datas gestacionais",
					disabled	: !retorno.formData.antecedentesGestacionais,
					icon: "add",
			        stylingMode: "outlined",
					type: "default",
					onClick: function() {
						addDatasGestacionais()
					}
				}).dxButton("instance")

					/*if (retorno.copiadoDe == "") {
		    		$("#divCopiarAnamnese").html("")
					}else{
		    		$("#divCopiarAnamnese").html("Preenchido em "+retorno.copiadoDe+" | <a href='#' onClick='limparAnamnese();'>Limpar</a>&nbsp; &nbsp; &nbsp; ")
					}*/
		    	
		    	//.html()
            })
		}
	
		function listarPassagens(){
	        if (codPacienteValor==""){
		        DevExpress.ui.notify("Informe o paciente", "warning", 4000);
		        return
	        }
		    if ($("#openPesquisa2").html()!=""){
		    	pesquisaExames2.dispose()
		    	openPesquisa2.dispose()
		    }
		    $("#openPesquisa2").removeClass("Layout"+layout)
   			$("#openPesquisa2").html("<div id='pesquisaExames2'></div>")
			preparaListaPassagens()
		}
		function preparaListaPassagens(){
			pesquisaExames2 = $("#pesquisaExames2").dxDataGrid({
		    	onContentReady: function(){
    				openPesquisa2 = $("#openPesquisa2").dxPopup({
				        width: '95%',
				        height: '90%',
				        showTitle: true,
				        title: "Listar Passagens",
				        visible: true,
				        dragEnabled: false,
				        closeOnOutsideClick: false,
						toolbarItems: [{
							location:"before",
							toolbar :"top",
						},{
							widget: "dxButton",
							location:"before",
							toolbar:"bottom",
							options: { 
								width	: "130px",
								type	: "default",
								icon	: "close",
		            			text	: "Fechar", 
		            			onClick : function(){
		                			openPesquisa2.hide()
		                		}
							}
						}],			        

    				}).dxPopup("instance")
			    },
				dataSource:  new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						loadMode: "raw",
						load: function(){
							return $.getJSON(urlPreparacao, {
								method: "listaPassagens",
								paciente: codPacienteValor
							})
						}
					})
				}),
				columns: [
					{dataField: "Consulta",caption: "Consulta", alignment: "center"},
					{dataField: "DescTipo",caption: "Tipo", alignment: "center"},
					{dataField: "Status",caption: "Status", alignment: "center"},
					{dataField: "DataAdmissao",caption: "Data da Admissão", sortIndex:0,sortOrder:"desc",dataType:"date", alignment: "center"},
					{dataField: "HoraAdmissao",caption: "Hora da Admissão", alignment: "center"},
					{dataField: "DataAlta",caption: "Data da Finalização", dataType:"date", alignment: "center"},
					{dataField: "HoraAlta",caption: "Hora da Finalização", alignment: "center",
						cellTemplate: function(container, options) {
							if(options.data.Consulta=="Registros Anteriores"){
								container.append("<i class='text-success fa fa-search' title='Visualizar Históricos Anteriores' style='cursor:pointer'/>")
							}else{
								container.append(options.value)
							}
	                	}
	                }
				],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: true, pageSize: 10 },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				selection: { mode: "single" },
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						consulta 	= selectedItems.selectedRowKeys[0].Consulta
						tipo 		= selectedItems.selectedRowKeys[0].Tipo
						loadPanel.show()
						preparaPEPPrimario(consulta,tipo)
						openPesquisa2.hide()
					}					
				}
			}).dxDataGrid("instance")
		}	

			
		function abrePesquisaCID(objRetornoCID, conteudoCampo){
			 popupOptions = {
		        width: "90%",
		        height: "90%",
		        showTitle: true,
		        title: "Pesquisa CID",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		        onHidden: function(){
							var arrayCID	= [];
							openPesquisaCIDLista.getSelectedRowsData().then(function (rowData) {
								$.each(rowData, function(count, dados) {
									arrayCID.push(dados.CodigodoCID);
								});
							}).done(function(){
				      	objRetornoCID.option("value", arrayCID)  
							});
			      }
		    
		    }		
		    if ($("#openPesquisa2").html()!=""){
		    	openPesquisaCID.dispose()
		    	openPesquisaCIDLista.dispose()
		    }
	 			$("#openPesquisa2").html("<div id='openPesquisaCIDLista'></div>")
				openPesquisaCID = $("#openPesquisa2").dxPopup(popupOptions).dxPopup("instance")
				preparaPesquisaCID(conteudoCampo)
		}		
		
		function preparaPesquisaCID(pConteudoCampo){
	      openPesquisaCIDLista = $("#openPesquisaCIDLista").dxDataGrid({
				dataSource:  new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						key: "CodigodoCID",
						loadMode: "raw",
						load: function(){
		        	var d = $.Deferred();
							$.getJSON(urlPreparacao, {method: "getListCID"},function(retorno){
								d.resolve(retorno);
								openPesquisaCIDLista.selectRows(pConteudoCampo, true); 
							});
							return d.promise();
						}
					})
				}),
				columns: [
					{dataField: "CodigodoCID",caption: "Código"},
					{dataField: "DescricaoResumida", caption: "Descrição"},
					{dataField: "DescCategoria",caption: "Categoria", groupIndex: 0},
				],	
				allowColumnReordering: true,
				columnAutoWidth: true,
				selection: { mode: "multiple", deferred: true },
				allowColumnResizing: true,
				height: "100%",	
				headerFilter: { visible: false },
				hoverStateEnabled: true,
				filterRow: { visible: true },
				showBorders: true,
				showRowLines: true,
				grouping: { autoExpandAll: false },
				searchPanel: { visible: false }, 
				groupPanel: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				columnChooser: { enabled: false, mode: "dragAndDrop" },
				sorting: { mode: "multiple" },
				rowAlternationEnabled: true,
				wordWrapEnabled:true,
				pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [20, 50, 100, 150, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 20 }
			}).dxDataGrid("instance")
		}

		function addDatasGestacionais(){
			 if (toolBar.option("items")[0].disabled){
				 return
			 }
			 popupOptions = {
		        width: 400,
		        height: 450,
		        showTitle: true,
		        title: "Adicionar Datas Gestacionais",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false
		    }		
		    if ($("#openPesquisa2").html()!=""){
		    	pesquisaExames2.dispose()
		    	openPesquisa2.dispose()
		    	$("#pesquisaExames2").remove();
		    }
   			$("#openPesquisa2").html("<div id='pesquisaExames2'></div><br><div id='divExamesDetalhesPopupx'></div>")
			openPesquisa2 = $("#openPesquisa2").dxPopup(popupOptions).dxPopup("instance")
			preparaDatasGestacionaisPopup()
		}
		
        function preparaDatasGestacionaisPopup(){
	        {
		        pesquisaExames2 = $("#pesquisaExames2").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
		            itemType: "group",
        			cssClass: "first-group",
        			colCount: 1,
                    items: [{
	                    dataField: "DataGestacional",
	                    editorOptions: {
             				width: "100%",
							showClearButton: true,
							useMaskBehavior: true,
             				max		: new Date()
            			},
						editorType	: "dxDateBox",
						validationRules: [{ type: "required" }],
						
                    },{
						itemType: "button",
						horizontalAlignment: "right",
			            buttonOptions: {
					        stylingMode: "contained",
					        icon: "add",
					        type: "success",
					        hint: "Adicionar Data Gestacional",
					        text: "Adicionar",
					        onClick: function() {
								if (!pesquisaExames2.validate().isValid){
									DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
									return
								}
								dados = pesquisaExames2.option("formData")
								$.getJSON(urlPreparacao,{
									method	 	:"salvaDataGestacional",
									dados		: JSON.stringify(dados)
								},function(ret){
						            DevExpress.ui.notify("Data gestacional adicionada com sucesso!", "success", 4000);
					            	pesquisaExames2.resetValues()
					            	dataSourceGridDataGestacional.pageIndex(0)
					            	dataSourceGridDataGestacional.reload()
								});
					        }
			            }								

					}]
	            }).dxForm("instance")

			dataSourceGridDataGestacional = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					remove : function(args){
						alteracao=1
						$.getJSON(urlPreparacao,{
							method	 	:"deletaDataGestacional",
							data		: args.DataO
						});
					},
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method	  : "recDataGestacional"
						},function(ret){
							vetor = []
							for (cont=0;cont<ret.length;cont++){
								vetor.push(ret[cont].DataF)
							}
							pesquisaExamesSub.updateData("datasGestacionais",vetor)
						});
					}	
				})
			})

		    	divExamesDetalhesPopup = $("#divExamesDetalhesPopupx").dxDataGrid({
					columns		: [{
						dataField: "Data",
						caption: "Data Gestacional", 
						alignment: "center",
		                allowEditing: false,
		                dataType:"date"
					}],
					editing: {
			            mode: "cell",
			            allowDeleting: !toolBar.option("items")[0].disabled,
	                    useIcons: true,
			        },					
					filterRow: { visible: false },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 10 },	
					showBorders: true,
					height: "240",
					showRowLines: true,
					rowAlternationEnabled: true,
				}).dxDataGrid("instance")
	            divExamesDetalhesPopup.option("dataSource",dataSourceGridDataGestacional)

	        }
	    }


		function abreMedicamentos(){
	        if (codPacienteValor==""){
		        DevExpress.ui.notify("Informe o paciente", "warning", 4000);
		        return
	        }
			loadPanel.show()
		    if ($("#openPesquisaSub").html()!=""){
		    	pesquisaExamesSub.dispose()
		    	openPesquisaSub.dispose()
		    }
		    $("#openPesquisaSub").removeClass("Layout"+layout)
   			$("#openPesquisaSub").html("<div id='pesquisaExamesSub'></div>")
			carregaMedicamentos()
			
		}
		
		
		function carregaMedicamentos(){
            $.getJSON(urlPreparacao,{
                method		: "carregaMedicamentos",
                codPaciente	: codPacienteValor
            },function(retorno){
	            carregaDataSourceReceitas()
		    	pesquisaExamesSub = $("#pesquisaExamesSub").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
			    	onContentReady: function(){
						openPesquisaSub = $("#openPesquisaSub").dxPopup({
							width: '95%',
					        height: '90%',
					        showTitle: true,
					        title: "Prescrição de Medicamentos",
					        visible: true,
					        dragEnabled: false,
					        closeOnOutsideClick: false,
							toolbarItems: [{
								location:"before",
								toolbar :"top",
							},{
								widget: "dxButton",
								location:"before",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "close",
			            			text	: "Fechar", 
			            			onClick : function(){
			                			openPesquisaSub.hide()
			                		}
								}
							},{
								widget: "dxButton",
								location:"after",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "check",
			            			text	: "Salvar", 
			            			onClick : function(){
			                			salvarMedicamentos()
			                		}
								}
							}],			        
					    }).dxPopup("instance")
					    loadPanel.hide()
				    },
			        scrollingEnabled	: true,
					colCount	: 2,
			    	items	:  [{
  					    alignItemLabels:false,
					    alignItemLabelsInAllGroups:false,
				    	itemType: "group",
				    	colCount	: 20,
			    		items	:[{
				    		colSpan	: 20,
							template: "<div id='divReceituarioHeader'></div>"
					    },{
						    colSpan	: 18,
					    	cssClass	: "negrito",
					    	dataField	: "medicamento",
							label		: {
								text	: "Medicamento"
							},
				            editorType	: "dxSelectBox",
				            editorOptions: {
				                searchEnabled: true,
				                showClearButton: true,
		        		        valueExpr: "CodMedicamento", 
								displayExpr: "DescMedicamento",
								searchEnabled: true,
								itemTemplate: function (data, itemIndex, element) {
									retorno = "";
									if (data.Fav>0){
										retorno = "<i class='fa fa-star' title='Receitado "+data.Fav+" vezes'></i>"
									}
									return retorno+" "+data.DescMedicamento
						        },							
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
					                byKey: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaMedicamentos",
						                    codigo	: args
						                });
					                },
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaMedicamentos",
											searchValue:args.searchValue,
											filter:JSON.stringify(args.filter),
				                        	skip:args.skip,
				                        	take:args.take,
											
						                });
						                }
						            })
						        })
				            }
					    },{
						    cssClass	: "Padding-L0",
						    itemType: "button",
							horizontalAlignment: "right",
				            buttonOptions: {
						        stylingMode: "contained",
						        icon: "add",
						        type: "default",
						        hint: "Adicionar Medicamento na receita",
						        onClick: function() {
							        var editor = pesquisaExamesSub.getEditor("medicamento");
							        var med = pesquisaExamesSub.option("formData").medicamento
							        pesquisaExamesSub.updateData("medicamento","")
							        if (med==null||med==""){
								        return
							        }
							        medicamento = editor.option("displayValue")
						            $.getJSON(urlPreparacao,{
						                method	:"addMedicamento",
						                med		: med
						            })			
							        //
							        receita = pesquisaExamesSub.option("formData").receituario
							        
									if (receita==""||receita==null){
										pesquisaExamesSub.updateData("receituario","1 - "+medicamento)
									}else{
										if (receita.indexOf("\n")<0){
											receita = receita+"\n"+"2 - "+medicamento
										}else{
											rec = receita.split("\n")
											ultimalinha = rec[rec.length-1].split(" - ")
											ultimoContador = ultimalinha[0]*1
											if (ultimoContador==undefined){
												conta=1;
											}else{
												conta=(ultimoContador*1)+1;
											}
											if (rec.length<=30){
												receita = receita+"\n"+conta+" - "+medicamento
											}
										}
										pesquisaExamesSub.updateData("receituario",receita)
									}
						        }
				            }
					    },{
						    cssClass	: "Padding-L0",
						    itemType: "button",
							horizontalAlignment: "right",
				            buttonOptions: {
						        stylingMode: "contained",
						        icon: "clear",
						        type: "default",
						        hint: "Limpar Receituário",
						        onClick: function() {
									divReceitasGrid.clearSelection()
									$("#dvSeqReceitaCod").html("")
									$("#dvSeqReceitaTexto").html("&nbsp;")
									pesquisaExamesSub.resetValues()
						        }
				            }
						},{
						    colSpan	: 20,
					    	cssClass	: "negrito",
					    	dataField	: "receituario",
							label		: {
								text	: "Receituário"
							},
				            editorType	: "dxTextArea",
					        editorOptions: {
								height:250,
								onKeyDown:function(e){
									receituario = this._options.text
									if (receituario==""){
										pesquisaExamesSub.updateData("receituario","1 - ")
									}
									rec = receituario.split("\n")
									if (rec.length>30){
										DevExpress.ui.notify("Máximo de 30 linhas por receituário", "warning", 4000);
										var receituario = ""
										for (var i=0;i<30;i++){
											if (receituario!="") {
												receituario = receituario +"\n"
											}
											receituario = receituario + rec[i]
										}
										pesquisaExamesSub.updateData("receituario",receituario)
										return
									}									
								},
								onEnterKey: function (e) {
									receituario = this._options.text
									rec = receituario.split("\n")
									ultimalinha = rec[rec.length-2].split("-")
									ultimoContador = ultimalinha[ultimalinha.length-2]
									if (ultimoContador==undefined){
										conta=1;
									}else{
										conta=(ultimoContador*1)+1;
									}
									if (rec.length<=30){
										receituario = receituario+conta+" - "
									}
									pesquisaExamesSub.updateData("receituario",receituario)

					        	}								
							}
					    },{
						    itemType: "empty"
					    },{
						    colSpan	: 18,
						    dataField	: "removeDataHoraImp",
							label		: {
								text	: "Remover Data/Hora da Impressão?"
							},
				            editorType	: "dxRadioGroup",
				            editorOptions: {
					            value		: "0",
					            layout		:"horizontal",
	            		        valueExpr	: "value", 
								displayExpr	: "text",
					            dataSource 	: [{
							        "text": "Sim",
							        "value": 1
							    },
							    {
							        "text": "Não",
							        "value": 0
							    }]
				            }
					    }]
				    },{
						template: "<div id='divReceitasGrid'></div>"
					}]
		    	}).dxForm("instance")
		    	carregaDataGridReceitas()
		    	$("#divReceituarioHeader").html("<table width='100%'><tr><td align=right><b><div id='dvSeqReceitaCod' style='display:none' /><div id='dvSeqReceitaTexto'>&nbsp;</div>")
		    	$(".negrito.dx-field-item-label-text").attr("style","font-weight:900")

            })
        }        

		function abrePrescricao(){
	        if (codPacienteValor==""){
		        DevExpress.ui.notify("Informe o paciente", "warning", 4000);
		        return
	        }
			loadPanel.show()
		    if ($("#openPesquisaSub").html()!=""){
		    	pesquisaExamesSub.dispose()
		    	openPesquisaSub.dispose()
		    }
		    $("#openPesquisaSub").removeClass("Layout"+layout)
   			$("#openPesquisaSub").html("<div id='pesquisaExamesSub'></div>")
			carregaPrescricao()
			
		}
		
		function carregaSugestaoPrescricao(sequencia){
            $.getJSON(urlPreparacao,{
                method		: "carregaSugestaoPrescricao",
                codPaciente : codPacienteValor,
                dataPEP		: dataPEP,
                codCID		: codCID,
		        ficha 		: ficha,
		        fichaSeq	: fichaSeq,
				sequencia	: sequencia,
            },function(ret){
	            if (ret.erro){
		            DevExpress.ui.notify(ret.mensagem, "warning", 4000);
		            return
	            }
	            abrePrescricao()
	        })
		}
		
		function carregaPrescricao(){
            $.getJSON(urlPreparacao,{
                method		: "carregaPrescricoes",
                codPaciente : codPacienteValor,
                dataPEP		: dataPEP,
		        ficha 		: ficha,
		        fichaSeq	: fichaSeq,
                codCID		: codCID,
            },function(retorno){
	            carregaDataSourcePrescricao()
		    	pesquisaExamesSub = $("#pesquisaExamesSub").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
			    	formData 		: retorno,
			    	onFieldDataChanged	: function(obj){
				    	if (obj.value==undefined) return
						if (obj.dataField=="continuo"){
							if (obj.value==true){
								pesquisaExamesSub.updateData("duracao","")
								var editor = pesquisaExamesSub.getEditor("duracao");
								editor.option("disabled",true)
							}else{
								
								var editor = pesquisaExamesSub.getEditor("duracao");
								editor.option("disabled",false)
							}
						}
						if (obj.dataField=="variavel"){
							if (obj.value==true){
								pesquisaExamesSub.updateData("dose","")
								var editor = pesquisaExamesSub.getEditor("dose");
								editor.option("disabled",true)
							}else{
								
								var editor = pesquisaExamesSub.getEditor("dose");
								editor.option("disabled",false)
							}
						}
				    },
			    	onContentReady : function(){
						openPesquisaSub = $("#openPesquisaSub").dxPopup({
							width: '95%',
					        height: '90%',
					        showTitle: true,
					        title: "Prescrição de Medicamentos",
					        visible: true,
					        dragEnabled: false,
					        closeOnOutsideClick: false,
							toolbarItems: [{
								location:"before",
								toolbar :"top",
							},{
								widget: "dxButton",
								location:"before",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "close",
			            			text	: "Fechar", 
			            			onClick : function(){
			                			openPesquisaSub.hide()
			                		}
								}
							},{
								widget: "dxButton",
								location:"after",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "print",
			            			text	: "Imprimir", 
			            			onClick : function(){
			                			imprimir(5,"Prescrição Médica")
			                		}
								}
							}],			        
					    }).dxPopup("instance")
					    loadPanel.hide()
				    },
				    colCount:12,
		    		items :[{
			    		colSpan:12,
			    		dataField	: "codPrescricao",
						label		: {
							text	: "Prescrição"
						},
						visible 	: false,
						disabled	: true,
						editorOptions: {
							
							width	: "200px"
						}
		    		},{
			    		colSpan:10,
			    		dataField	: "tratamento",
						label		: {
							text	: "Tratamento"
						},
						editorType	: "dxTextArea",
		    		},{
			    		colSpan:2,
			    		dataField	: "data",
						label		: {
							text	: "Data"
						},
						editorType	: "dxDateBox",
		    		},{
			    		colSpan:12,
			    		template	: "<hr class='hrClass' >"
		    		},{
			    		colSpan:12,
					    dataField	: "medicamento",
						label		: {
							text	: "Medicamento"
						},
						validationRules: [{
		                    type: "required"
		                }],				            
			            editorType	: "dxSelectBox",
			            editorOptions: {
			                searchEnabled: true,
			                showClearButton: true,
	        		        valueExpr: "CodMedicamento", 
							displayExpr: "DescMedicamento",
							searchEnabled: true,
							itemTemplate: function (data, itemIndex, element) {
								retorno = "";
								if (data.Fav>0){
									retorno = "<i class='fa fa-star' title='Receitado "+data.Fav+" vezes'></i>"
								}
								return retorno+" "+data.DescMedicamento
					        },							
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
				                byKey: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	:"listaMedicamentos",
					                    codigo	: args
					                });
				                },
					            load: function(args) {
				                    return $.getJSON(urlPreparacao,{
			        	            	method	:"listaMedicamentos",
										searchValue:args.searchValue,
										filter:JSON.stringify(args.filter),
			                        	skip:args.skip,
			                        	take:args.take,
										
					                });
					                }
					            })
					        })
			            }
			    	},{
				    	colSpan		: 2,
					    dataField	: "dose",
						label		: {
							text	: "Dose"
						},
			            editorType	: "dxNumberBox",
			            editorOptions : {
			            	format : "#,###.#"
			            }
			        },{
				        cssClass	: "semBordasLaterais",
   					    dataField	: "variavel",
						label		: {
			                location: "right",
							text	: "Dose Variável?",
							showColon: false
						},
						editorType	: "dxCheckBox",
				    },{
				        colSpan		: 2,
					    dataField	: "unidade",
						label		: {
							text	: "Unidade"
						},
			            editorType	: "dxSelectBox",
			            editorOptions: {
			                searchEnabled: true,
			                showClearButton: false,
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
						            loadMode: "raw",
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaUnidades",
						                });
					                }
					            })
					        })
			            }
			        },{
				        colSpan		: 2,
					    dataField	: "via",
						label		: {
							text	: "Via"
						},
			            editorType	: "dxSelectBox",
			            editorOptions: {
			                searchEnabled: true,
			                showClearButton: false,
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
						            loadMode: "raw",
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaVias",
						                });
					                }
					            })
					        })
			            }
			        },{
				        colSpan		: 2,
					    dataField	: "frequencia",
						label		: {
							text	: "Frequência"
						},
			            editorType	: "dxSelectBox",
			            editorOptions: {
			                searchEnabled: true,
			                showClearButton: false,
	        		        valueExpr: "CodFrequencia", 
							displayExpr: "DescFrequencia",
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
						            loadMode: "raw",
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaFrequencia",
						                });
					                }
					            })
					        })
			            }
			        },{
				        colSpan		: 2,
   					    dataField	: "duracao",
						label		: {
							text	: "Duração (dias)"
						},
						editorType	: "dxNumberBox",
			            editorOptions : {
			            	format : "#,###"
			            }

				    },{
   					    dataField	: "continuo",
   					    cssClass	: "semBordasLaterais",
						label		: {
			                location: "right",
							text	: "Uso Contínuo?",
							showColon: false
						},
						editorType	: "dxCheckBox",
				    },{
				        colSpan		: 11,
					    dataField	: "observacoes",
						label		: {
							text	: "Observações"
						},
			            editorType	: "dxTextArea"
			        },{
				        colSpan		: 1,
					    itemType: "button",
						horizontalAlignment: "right",
			            buttonOptions: {
					        stylingMode: "contained",
					        icon: "check",
					        type: "default",
					        text: "Adicionar",
					        hint: "Adicionar Medicamento na prescrição",
					        onClick: function() {
  						        dados = pesquisaExamesSub.option("formData")
								$.getJSON(urlPreparacao,{
									method	 	:"salvaPrescricao",
					                codPaciente : codPacienteValor,
					                dataPEP		: dataPEP,
					                codCID		: codCID,
							        ficha 		: ficha,
							        fichaSeq	: fichaSeq,
									dados		: JSON.stringify(dados)
								})
						        if (!pesquisaExamesSub.validate().isValid){
							        DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
							        return
						        }
								$.getJSON(urlPreparacao,{
									method	 	:"addPrescricao",
					                codPaciente : codPacienteValor,
					                dataPEP		: dataPEP,
					                codCID		: codCID,
							        ficha 		: ficha,
							        fichaSeq	: fichaSeq,
									dados		: JSON.stringify(dados)
								},function(ret){
									if (ret==0){
										DevExpress.ui.notify("Medicamento já consta na lista!", "error", 4000);
										return
									}
						            DevExpress.ui.notify("Medicação adicionada com sucesso!", "success", 4000);
						            tratamento 	= pesquisaExamesSub.option("formData").tratamento
						            data 		= pesquisaExamesSub.option("formData").data
						            pesquisaExamesSub.resetValues()
									pesquisaExamesSub.updateData("codPrescricao",ret.codPrescricao)
									pesquisaExamesSub.updateData("tratamento",tratamento)
									pesquisaExamesSub.updateData("data",data)
						            dataSourceGridPrescricao.pageIndex(0)
					            	dataSourceGridPrescricao.reload()
					            	divReceitasGrid.clearSelection()
								});
						        return
					        }
			            }
				    },{
				        colSpan		: 12,
					    template	: "<div id='dvPrescricaoGrid'></div>"
			        }]
		    	}).dxForm("instance")
		    	divReceitasGrid = $("#dvPrescricaoGrid").dxDataGrid({
					dataSource	: dataSourceGridPrescricao,
					height: function() {
						tamanho = Math.round((window.innerHeight*.9) -350)
					    return tamanho+"px";
					},
					columns		: [{
						dataField	: "numerodalinha",
						caption		: "N. Linha", 
						alignment	: "left",
						width		: "70px"
					},{
						dataField	: "medicamento",
						caption		: "Medicamento", 
						alignment	: "left",
					},{
						dataField	: "dose",
						caption		: "Dose",
						width		: "10%"
	           		},{
						dataField	: "unidade",
						caption		: "Unidade",
						width		: "10%"
	           		},{
						dataField	: "via",
						caption		: "Via",
						width		: "10%"
	           		},{
						dataField	: "frequencia",
						caption		: "Frequência",
						width		: "10%"
	           		},{
						dataField	: "duracao",
						caption		: "Duração (dias)",
						width		: "10%"
	           		}],
					filterRow: { visible: false },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 10 },
					editing: {
			            //mode: "batch",
			            mode: "popup",
			            allowUpdating: false,
			            allowAdding	 : false,
			            allowDeleting: true,
	                    useIcons: true,
			        },					
					onSelectionChanged: function(selectedItems) {
						if (selectedItems.selectedRowsData.length>0){
							pesquisaExamesSub.updateData("medicamento",selectedItems.selectedRowsData[0].codMedicamento)
							pesquisaExamesSub.updateData("via",selectedItems.selectedRowsData[0].codVia)
							pesquisaExamesSub.updateData("dose",selectedItems.selectedRowsData[0].codDose)
							pesquisaExamesSub.updateData("unidade",selectedItems.selectedRowsData[0].codUnidade)
							pesquisaExamesSub.updateData("frequencia",selectedItems.selectedRowsData[0].codFrequencia)
							pesquisaExamesSub.updateData("duracao",selectedItems.selectedRowsData[0].codDuracao)
							pesquisaExamesSub.updateData("observacoes",selectedItems.selectedRowsData[0].observacoes)
							pesquisaExamesSub.updateData("continuo",selectedItems.selectedRowsData[0].continuo)
							pesquisaExamesSub.updateData("variavel",selectedItems.selectedRowsData[0].variavel)
						}
					},
					selection: { mode: "single" },
					showBorders: true,
					showRowLines: true,
					rowAlternationEnabled: true,
				}).dxDataGrid("instance")
				return
		    	pesquisaExamesSub = $("#pesquisaExamesSub").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
			    	onContentReady: function(){
						openPesquisaSub = $("#openPesquisaSub").dxPopup({
							width: '95%',
					        height: '90%',
					        showTitle: true,
					        title: "Prescrição de Medicamentos v2",
					        visible: true,
					        dragEnabled: false,
					        closeOnOutsideClick: false,
							toolbarItems: [{
								location:"before",
								toolbar :"top",
							},{
								widget: "dxButton",
								location:"before",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "close",
			            			text	: "Fechar", 
			            			onClick : function(){
			                			openPesquisaSub.hide()
			                		}
								}
							},{
								widget: "dxButton",
								location:"after",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "check",
			            			text	: "Salvar", 
			            			onClick : function(){
			                			salvarMedicamentos()
			                		}
								}
							}],			        
					    }).dxPopup("instance")
					    loadPanel.hide()
				    },
			        scrollingEnabled	: true,
					colCount	: 2,
			    	items	:  [{
  					    alignItemLabels:false,
					    alignItemLabelsInAllGroups:false,
				    	itemType: "group",
				    	colCount	: 20,
			    		items	:[{
				    		colSpan	: 20,
							template: "<div id='divReceituarioHeader'></div>"
					    },{
						    colSpan	: 18,
					    	cssClass	: "negrito",
					    	dataField	: "medicamento",
							label		: {
								text	: "Medicamento"
							},
				            editorType	: "dxSelectBox",
				            editorOptions: {
				                searchEnabled: true,
				                showClearButton: true,
		        		        valueExpr: "CodMedicamento", 
								displayExpr: "DescMedicamento",
								searchEnabled: true,
								itemTemplate: function (data, itemIndex, element) {
									retorno = "";
									if (data.Fav>0){
										retorno = "<i class='fa fa-star' title='Receitado "+data.Fav+" vezes'></i>"
									}
									return retorno+" "+data.DescMedicamento
						        },							
								dataSource: new DevExpress.data.DataSource({
						            store: new DevExpress.data.CustomStore({
					                byKey: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaMedicamentos",
						                    codigo	: args
						                });
					                },
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
				        	            	method	:"listaMedicamentos",
											searchValue:args.searchValue,
											filter:JSON.stringify(args.filter),
				                        	skip:args.skip,
				                        	take:args.take,
											
						                });
						                }
						            })
						        })
				            }
					    },{
						    cssClass	: "Padding-L0",
						    itemType: "button",
							horizontalAlignment: "right",
				            buttonOptions: {
						        stylingMode: "contained",
						        icon: "add",
						        type: "default",
						        hint: "Adicionar Medicamento na receita",
						        onClick: function() {
							        var editor = pesquisaExamesSub.getEditor("medicamento");
							        var med = pesquisaExamesSub.option("formData").medicamento
							        pesquisaExamesSub.updateData("medicamento","")
							        if (med==null||med==""){
								        return
							        }
							        medicamento = editor.option("displayValue")
						            $.getJSON(urlPreparacao,{
						                method	:"addMedicamento",
						                med		: med
						            })			
							        //
							        receita = pesquisaExamesSub.option("formData").receituario
							        
									if (receita==""||receita==null){
										pesquisaExamesSub.updateData("receituario","1 - "+medicamento)
									}else{
										if (receita.indexOf("\n")<0){
											receita = receita+"\n"+"2 - "+medicamento
										}else{
											rec = receita.split("\n")
											ultimalinha = rec[rec.length-1].split(" - ")
											ultimoContador = ultimalinha[0]*1
											if (ultimoContador==undefined){
												conta=1;
											}else{
												conta=(ultimoContador*1)+1;
											}
											if (rec.length<=30){
												receita = receita+"\n"+conta+" - "+medicamento
											}
										}
										pesquisaExamesSub.updateData("receituario",receita)
									}
						        }
				            }
					    },{
						    cssClass	: "Padding-L0",
						    itemType: "button",
							horizontalAlignment: "right",
				            buttonOptions: {
						        stylingMode: "contained",
						        icon: "clear",
						        type: "default",
						        hint: "Limpar Receituário",
						        onClick: function() {
									divReceitasGrid.clearSelection()
									$("#dvSeqReceitaCod").html("")
									$("#dvSeqReceitaTexto").html("&nbsp;")
									pesquisaExamesSub.resetValues()
						        }
				            }
						},{
						    colSpan	: 20,
					    	cssClass	: "negrito",
					    	dataField	: "receituario",
							label		: {
								text	: "Receituário"
							},
				            editorType	: "dxTextArea",
					        editorOptions: {
								height:250,
								onKeyDown:function(e){
									receituario = this._options.text
									if (receituario==""){
										pesquisaExamesSub.updateData("receituario","1 - ")
									}
									rec = receituario.split("\n")
									if (rec.length>30){
										DevExpress.ui.notify("Máximo de 30 linhas por receituário", "warning", 4000);
										var receituario = ""
										for (var i=0;i<30;i++){
											if (receituario!="") {
												receituario = receituario +"\n"
											}
											receituario = receituario + rec[i]
										}
										pesquisaExamesSub.updateData("receituario",receituario)
										return
									}									
								},
								onEnterKey: function (e) {
									receituario = this._options.text
									rec = receituario.split("\n")
									ultimalinha = rec[rec.length-2].split("-")
									ultimoContador = ultimalinha[ultimalinha.length-2]
									if (ultimoContador==undefined){
										conta=1;
									}else{
										conta=(ultimoContador*1)+1;
									}
									if (rec.length<=30){
										receituario = receituario+conta+" - "
									}
									pesquisaExamesSub.updateData("receituario",receituario)

					        	}								
							}
					    },{
						    itemType: "empty"
					    },{
						    colSpan	: 18,
						    dataField	: "removeDataHoraImp",
							label		: {
								text	: "Remover Data/Hora da Impressão?"
							},
				            editorType	: "dxRadioGroup",
				            editorOptions: {
					            value		: "0",
					            layout		:"horizontal",
	            		        valueExpr	: "value", 
								displayExpr	: "text",
					            dataSource 	: [{
							        "text": "Sim",
							        "value": 1
							    },
							    {
							        "text": "Não",
							        "value": 0
							    }]
				            }
					    }]
				    },{
						template: "<div id='divReceitasGrid'></div>"
					}]
		    	}).dxForm("instance")
		    	carregaDataGridReceitas()
		    	$("#divReceituarioHeader").html("<table width='100%'><tr><td align=right><b><div id='dvSeqReceitaCod' style='display:none' /><div id='dvSeqReceitaTexto'>&nbsp;</div>")
		    	$(".negrito.dx-field-item-label-text").attr("style","font-weight:900")

            })
        }        
		function carregaDataSourcePrescricao(){
			dataSourceGridPrescricao = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					remove : function(args){
						$.getJSON(urlPreparacao,{
							method	 	:"deletaPrescricao",
							chave		: args.chave
						});
					},
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method	  	: "recPrescricao",
							codPrescricao : pesquisaExamesSub.option("formData").codPrescricao
						});
					}	
				})
			})

		}
        
		function carregaDataSourceReceitas(){
			dataSourceGridReceitas = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					remove : function(args){
						alteracao=1
						$.getJSON(urlPreparacao,{
							method	 	:"deletaReceita",
			                codPaciente : codPacienteValor,
			                dataPEP		: dataPEP,
							codigo		: args.SeqReceita
						});
					},
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method	  	: "recReceitas"
						});
					}	
				})
			})

		}
		function carregaDataGridReceitas(){
	    	divReceitasGrid = $("#divReceitasGrid").dxDataGrid({
				dataSource	: dataSourceGridReceitas,
				columns		: [{
					dataField: "SeqReceita",
					caption: "Seq", 
					alignment: "left"
				},{
					dataField	: "Receituario",
					caption		: "Receituário",
					width		: "60%"
           		},{
					dataField	: "removeDataHoraImpExt",
					caption		: "Data/Hora na Impressão?",
					width		: "10%"
           		}],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: true, pageSize: 10 },
				editing: {
		            //mode: "batch",
		            mode: "popup",
		            allowUpdating: false,
		            allowAdding	 : false,
		            allowDeleting: true,
                    useIcons: true,
		        },					
				height: function() {
					//return window.innerHeight - tamanhoForm;
				},	
				onSelectionChanged: function(selectedItems) {
					if (selectedItems.selectedRowsData.length>0){
						$("#dvSeqReceitaCod").html(selectedItems.selectedRowsData[0].SeqReceita)
						$("#dvSeqReceitaTexto").html("Seq.: "+selectedItems.selectedRowsData[0].SeqReceita)
						pesquisaExamesSub.updateData("receituario",selectedItems.selectedRowsData[0].Receituario)
						pesquisaExamesSub.updateData("removeDataHoraImp",selectedItems.selectedRowsData[0].removeDataHoraImp)
					}
				},
				selection: { mode: "single" },
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-print",
							height: 36,
							width: 36,
							hint: "Imprimir Receitas",
							onClick: function(e) {
								imprimir(4,"Receita Médica")
							}
						}
					})
				}				
			}).dxDataGrid("instance")
		}
		
        
		function salvarMedicamentos(){
            $.getJSON(urlPreparacao,{
                method	:"addReceita",
                codPaciente : codPacienteValor,
                dataPEP	: dataPEP,
                nseq	: $("#dvSeqReceitaCod").html(),
                receita	: pesquisaExamesSub.option("formData").receituario,
                impressao: pesquisaExamesSub.option("formData").removeDataHoraImp
            },function(retorno){
				$("#dvSeqReceitaCod").html("")
				$("#dvSeqReceitaTexto").html("&nbsp;")
	            pesquisaExamesSub.resetValues()
	            dataSourceGridReceitas.pageIndex(0)
	            dataSourceGridReceitas.reload()
	            divReceitasGrid.clearSelection()
            })			
		}

		function abreExames(tipo){
	        if (codPacienteValor==""){
		        DevExpress.ui.notify("Informe o paciente", "warning", 4000);
		        return
	        }
			loadPanel.show()
		    if ($("#openPesquisaSub").html()!=""){
		    	pesquisaExamesSub.dispose()
		    	openPesquisaSub.dispose()
		    }
		    $("#openPesquisaSub").removeClass("Layout"+layout)
   			$("#openPesquisaSub").html("<div id='pesquisaExamesSub'></div>")
			preparaExames(tipo)
		}
		
		function salvarExames(impressao){
	        $.getJSON(urlPreparacao,{
	            method	: "salvarExames",
	            paciente: codPacienteValor
	        },function(retorno){
		        if (impressao){
			        imprimir(impressao,"Solicitação de Exames")
			        return
		        }
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
		    });
		}
		
		function preparaExames(tipo){		
            $.getJSON(urlPreparacao,{
                method		:"carregaReqExames",
                codPaciente	: codPacienteValor,
                dataPEP		: dataPEP,
                tipo		: tipo
            },function(retorno){
	            carregaDataSourcesExames()
		    	pesquisaExamesSub = $("#pesquisaExamesSub").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
			    	onContentReady: function(){
						openPesquisaSub = $("#openPesquisaSub").dxPopup({
					        width: '95%',
					        height: '90%',
					        showTitle: true,
					        title: "Solicitação de Exames",
					        visible: true,
					        dragEnabled: false,
					        closeOnOutsideClick: false,
							toolbarItems: [{
								location:"before",
								toolbar :"top",
							},{
								widget: "dxButton",
								location:"before",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "close",
			            			text	: "Fechar", 
			            			onClick : function(){
			                			openPesquisaSub.hide()
			                		}
								}
							},{
								widget: "dxButton",
								location:"after",
								toolbar:"bottom",
								options: { 
									width	: "140px",
									type	: "default",
									icon	: "search",
			            			text	: "Resultados", 
			            			onClick : function(){
			                			carregaResultados()
			                		}
								}
							},{
								widget: "dxButton",
								location:"after",
								toolbar:"bottom",
								options: { 
									width	: "130px",
									type	: "default",
									icon	: "check",
			            			text	: "Salvar", 
			            			onClick : function(){
			                			salvarExames(0)
			                		}
								}
							}],			        
					    }).dxPopup("instance")
					    loadPanel.hide()
				    },
			    	items		:  [{
				    	itemType: "group",
				    	alignItemLabels : true,
				    	colCount: 2,
				        items	:  [{
				            itemType: "group",
				            colCount: 15,
				            items 	: [{
					            cssClass:"Padding-R4",
					            colSpan		: 14,
								dataField	: "ExamesLaboratorio",
								label		: {
									text	: "Exames Laboratório"
								},
								editorType	: "dxSelectBox",
					            editorOptions: {
									dataSource: new DevExpress.data.DataSource({
							            store: new DevExpress.data.CustomStore({
						                byKey: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	:"listaExames",
					        	            	tipo	: 1,
							                    codigo	: args
							                });
						                },
							            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	:"listaExames",
					        	            	tipo	: 1,
												searchValue:args.searchValue,
					                        	skip:args.skip,
					                        	take:args.take,
							                });
							                }
							            })
							        }),
							        valueExpr: "CodExame", 
									displayExpr: "DescExame",
									showClearButton: true,
									searchEnabled: true,
									onValueChanged:function(e){
										addExames(e.value,1)
									}
					            }	
							},{
								cssClass:"Padding-L0",
								itemType: "button",
								horizontalAlignment: "right",
					            buttonOptions: {
							        stylingMode: "outlined",
							        //icon: "favorites",
							        icon: "add",
							        type: "normal",
							        //hint: "Criar/Editar Protocolos de Exames Laboratorial",
							        hint: "Incluir Exame",
							        onClick: function() {
								        codExame = pesquisaExamesSub.option("formData").ExamesLaboratorio
								        if (codExame){
								        	addExames(codExame,1)
								        }
								        //editaProtocolos(1)
							        }
					            }								
							},{
								colSpan		: 15,
			                    template	: function (data, itemElement) {
				                	itemElement.append("<div id='divExamesDetalhes'>")
			                    },
							}]
				        },{
				            itemType: "group",
				            colCount: 15,
				            items 	: [{
					            colSpan		: 14,
					            cssClass:"Padding-R4",
								dataField	: "ExamesImagem",
								label		: {
									text	: "Exames Imagem"
								},
								editorType	: "dxSelectBox",
					            editorOptions: {
									dataSource: new DevExpress.data.DataSource({
							            store: new DevExpress.data.CustomStore({
						                byKey: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	:"listaExames",
					        	            	tipo	: 2,
							                    codigo	: args
							                });
						                },
							            load: function(args) {
						                    return $.getJSON(urlPreparacao,{
					        	            	method	:"listaExames",
					        	            	tipo	: 2,
												searchValue:args.searchValue,
					                        	skip:args.skip,
					                        	take:args.take,
							                });
							                }
							            })
							        }),
							        valueExpr: "CodExame", 
									displayExpr: "DescExame",
									showClearButton: true,
									searchEnabled: true,
									onValueChanged:function(e){
										addExames(e.value,2)
									}
					            }	
			                    
							},{
								cssClass:"Padding-L0",
								itemType: "button",
								horizontalAlignment: "right",
					            buttonOptions: {
							        stylingMode: "outlined",
							        //icon: "favorites",
							        icon: "add",
							        type: "normal",
							        //hint: "Criar/Editar Protocolo de Outros Exames",
							        hint: "Incluir Exame",
							        onClick: function() {
								        codExame = pesquisaExamesSub.option("formData").ExamesImagem
								        if (codExame){
								        	addExames(codExame,2)
								        }
								        //editaProtocolos(2)
							        }
					            }								
							},{
								colSpan		: 15,
			                    template	: function (data, itemElement) {
				                	itemElement.append("<div id='divExamesDiversosDetalhes'>")
			                    },
							}]
				        }]
			    	},{
						    dataField	: "removeDataHoraImpRequisicao",
								label		: {
									text	: "Remover Data/Hora da Impressão?"
								},
				            editorType	: "dxRadioGroup",
				            editorOptions: {
					            value		: "0",
					            layout		:"horizontal",
	            		        valueExpr	: "value", 
								displayExpr	: "text",
					            dataSource 	: [{
							        "text": "Sim",
							        "value": 1
							    },
							    {
							        "text": "Não",
							        "value": 0
							    }]
				            }
					    
				    }]
		    	}).dxForm("instance")
	            carregaDataGridExames()

            })
			
		}

        function carregaResultados(){
			loadPanel.show()
		    if ($("#openPesquisa2").html()!=""){
		    	pesquisaExames2.dispose()
		    	openPesquisa2.dispose()
		    }
		    $("#openPesquisa2").removeClass("Layout"+layout)
   			$("#openPesquisa2").html("<div id='pesquisaExames2'></div>")

	    	pesquisaExames2 = $("#pesquisaExames2").dxForm({
				screenByWidth: function(width) {
		            return "lg";
		        },
		    	onContentReady: function(){
    				openPesquisa2 = $("#openPesquisa2").dxPopup({
				        width: '95%',
				        height: '90%',
				        showTitle: true,
				        title: "Resultados de Exames",
				        visible: true,
				        dragEnabled: false,
				        closeOnOutsideClick: false,
						toolbarItems: [{
							location:"before",
							toolbar :"top",
						},{
							widget: "dxButton",
							location:"before",
							toolbar:"bottom",
							options: { 
								width	: "130px",
								type	: "default",
								icon	: "close",
		            			text	: "Fechar", 
		            			onClick : function(){
		                			openPesquisa2.hide()
		                		}
							}
						}],			        

    				}).dxPopup("instance")
    				loadPanel.hide();
		    	},			    	
		    	items	:  [{
		            template: "<div id='divResultados'></div>"
			    }]
	    	}).dxForm("instance")

				$("#divResultados").dxDataGrid({
					dataSource: dataSourceResultado,
					keyExpr: "id",
					columns: eval(#server(VAR.CSP.VARPEPPremium.ImpColunasResultados(codPacienteValor))#),
					filterRow: { visible: false },
					hoverStateEnabled: true,
					grouping: {
						allowCollapsing: true,
						autoExpandAll: true,
					},
					sorting: {
          	mode: "multiple"
        	},
					headerFilter: {
						visible:true
					},		
					filterRow:{
						visible:true
					},
					groupPanel: {
						visible: true
					},
					editing: {
						mode: "batch",
						allowUpdating: true,
						//allowAdding: true,
						useIcons: true
					},	
					height: function() {
						var tamanho = window.innerHeight - 250
						if (tamanho < 300){
							tamanho = 300
						}
						return tamanho;
					},
					paging: { enabled: false, pageSize: 10 },
					columnFixing: { enabled: true },
					showBorders: true,
					showRowLines: true,
					columnChooser: {
						enabled: true,
						mode: "dragAndDrop" 
					},
					stateStoring: {
			    	enabled: false
					},
					rowAlternationEnabled: true,
					onToolbarPreparing: function(e) {
						e.toolbarOptions.items.unshift(
							{
								location: "after",
								widget: "dxButton",
								options: {
									icon: "fa fa-expand",
									height: 36,
									width: 36,
									hint: "Expandir",
									onClick: function(e) {
										var expanding = e.component.option("icon") === "fa fa-expand";
										if (expanding){
											$("#divResultados").dxDataGrid("instance").expandAll();
										}else{
											$("#divResultados").dxDataGrid("instance").collapseAll();	
										}
										e.component.option("hint", expanding ? "Recolher" : "Expandir");
										e.component.option("icon", expanding ? "fa fa-compress" : "fa fa-expand");
									}
								}
							},{
								location: "after",
								widget: "dxButton",
								options: {
									icon: "fa fa-upload",
									height: 36,
									width: 36,
									hint: "Upload de Exames",
									onClick: function(e) {
										window.open("VARUploadArquivoPEPPremium.csp?paciente="+codPacienteValor,"uploadArquivo","width=550,height=400,"+
										"scrollbars=0,resizable=0,menubar=0,location=0,top=0,left=100")

										//uploadExames()
									}
								}
							},{
								location: "after",
								widget: "dxButton",
								options: {
									icon: "fas fa-folder-open",
									height: 36,
									width: 36,
									hint: "Arquivos",
									onClick: function(e) {
										abreListaArquivos()
									}
								}
							},{
								location: "after",
								widget: "dxButton",
								options: {
									icon: "add",
									height: 36,
									width: 36,
									hint: "Adicionar Resultado",
									onClick: function(e) {
										addResultado()
									}
								}
							})
						}				
					})
        }        

		function addResultado(){
		    if ($("#openPesquisa3").html()!=""){
		    	openPesquisa3.dispose()
		    	pesquisaExames3.dispose()
		    }
		    $("#openPesquisa3").html("<div id='pesquisaExames3'></div>")
			openPesquisa3 = $("#openPesquisa3").dxPopup({
				visible: true,
				title: "Adicionar/Editar Resultado",
				width: 800,
				height:  580,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
			}).dxPopup("instance");
			
			exameAdd=""
		dataSourceAddExame = new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				load: function(){
        	return $.getJSON(urlPreparacao, {method: "getExameAdd", codExame: exameAdd},function(retorno){
					});
				},update: function (key, values) {
					var fData 					 = pesquisaExames3.getEditor("data").option("text");	
					if (fData == "") {
						DevExpress.ui.notify("Favor informar a Data.", "warning", 4000);
						return
					}
					for (var coluna in values) {
						if (values.hasOwnProperty(coluna)) {
							#server(VAR.CSP.VARPEPPremium.ArmResultaExameAdd(codPacienteValor, key.id, fData, values[coluna]))#
						}
					}
					DevExpress.ui.notify("Resultado Armazenado com sucesso.", "success", 4000);
					obj = $("#divResultados").dxDataGrid("instance")
					obj.option("columns",eval(#server(VAR.CSP.VARPEPPremium.ImpColunasResultados(codPacienteValor))#))
					dataSourceResultado.reload()
					openPesquisa3.hide()
				}					
			})
		})
			pesquisaExames3 = $("#pesquisaExames3").dxForm({
				screenByWidth: function(width) {
		            return "lg";
		        },
				readOnly: false,
				alignItemLabels: true,
				showColonAfterLabel: true,
				labelLocation: "left",
				colCount: 6,
				items: [
					{ dataField: "exame", colSpan:6, label:{text:"Exame"}, editorType: "dxSelectBox", 
						editorOptions: {
							searchEnabled: true,
							dataSource: new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
									byKey: function(args) {
										return $.getJSON(urlPreparacao,{
											method	:"listaExames",
											tipo	: 1,
											codigo	: args
										});
									},
									load: function(args) {
										return $.getJSON(urlPreparacao,{
											method	:"listaExames",
											tipo	: 1,
											searchValue:args.searchValue,
											skip:args.skip,
											take:args.take,
										});
									}
								})
							}),
							onValueChanged: function(e){
								if (e.value == "" || e.value == null) {
									exameAdd = "";
									dataSourceAddExame.reload();
									pesquisaExames3.getEditor("resultado").option("readOnly", true);
									$("#btnSalvarAddExame").dxButton("instance").option("disabled", true);
								}else{
									if (#server(VAR.CSP.VARPEPPremium.TipoCampoExame(e.value))# == 0) {
										exameAdd = "";
										dataSourceAddExame.reload();										
										pesquisaExames3.getEditor("resultado").option("readOnly", false);
										$("#btnSalvarAddExame").dxButton("instance").option("disabled", false);
									}else{
										exameAdd = e.value;
										dataSourceAddExame.reload();
										pesquisaExames3.getEditor("resultado").option("readOnly", true);
										$("#btnSalvarAddExame").dxButton("instance").option("disabled", true);	
									}
								}
							},
							value: "",
							searchEnabled: true,
							valueExpr: "CodExame", 
							displayExpr: "DescExame",
							searchEnabled: true,
						}
					},
					{dataField: "data", colSpan:2, editorType: "dxDateBox"
					,validationRules: [{ type: "required" }], 
					},

					{ dataField: "resultado", colSpan:4, editorType: "dxTextBox", 
						editorOptions: {
				    	readOnly: true                    
				  	}
				  },{ 
						colSpan: 6, editorType: "dxDataGrid", editorOptions: {
							dataSource: dataSourceAddExame,
							columns: [
								{dataField: "descPerfil", caption: "Perfil", allowEditing: 0, groupIndex: 0, sortOrder: 0},
								{dataField: "descComposto", caption: "Composto", allowEditing: 0, groupIndex: 1, sortOrder: 1},
								{dataField: "descExame", caption: "Exame", allowEditing: 0},
								{dataField: "resultado", allowEditing: 1},
							],
							keyExpr: "id",
							grouping: {
								allowCollapsing: true,
								autoExpandAll: true,
							},
							editing: {
								mode: "batch",
								allowUpdating: true,
								useIcons: true
							},
							paging: { enabled:false },					
							height: 340,	
							showBorders: true,
							showRowLines: true,
							//rowAlternationEnabled: true,
						}                   	
					},{},{},
					{ template	: function (data, itemElement) {
					  	itemElement.append("<div id='btnSalvarAddExame'/>")
				    },
					},{ 
						itemType: "button", colSpan: 3, horizontalAlignment: "left", 
						buttonOptions: { 
							type:"default", icon: "close", text: "Fechar", 
							onClick: function(){
								openPesquisa3.hide()
							}
						}
					}	
				]
				}).dxForm("instance");
				$("#btnSalvarAddExame").dxButton({ 
					type:"success", icon: "save", text: "Salvar", disabled: true, 
					onClick: function(){
						var fExame 			= pesquisaExames3.getEditor("exame").option("value");
						var fData 			= pesquisaExames3.getEditor("data").option("text");	
						var fResultado	= pesquisaExames3.getEditor("resultado").option("value");

						if (fExame == "" || fData == "") {
							DevExpress.ui.notify("Favor informar os campos Exame e Data.", "warning", 4000);
							return
						}
						
						fExame = "||SEMPERFIL||SEMCOMPOSTO||"+fExame

						var status = #server(VAR.CSP.VARPEPPremium.ArmResultaExame(codPacienteValor, fExame, fData, fResultado))#;
						if (status == 1) {
							obj = $("#divResultados").dxDataGrid("instance")
							obj.option("columns",eval(#server(VAR.CSP.VARPEPPremium.ImpColunasResultados(codPacienteValor))#))
							dataSourceResultado.reload()
							openPesquisa3.hide()
							return
						}else{
							DevExpress.ui.notify(status, "warning", 4000);
							return
						}

					}
			})				
		}		
		$("#dvDialog").dxPopup({
			visible: false,
			title: "Resultado",
			width: 800,
			height:  600,
			position: {
				my: "center",
				at: "center",
				of: window
			},
			dragEnabled: true,
			contentTemplate: function(e) {
				conteudoDialog = $("<div id='dvConteudoDialog' style='overflow-y:auto;height:500px;'></div>")
				e.append(conteudoDialog);
			}		
		});
			
				function colunaData(container, options) {
					if (!options.value) {
						return	
					}
					if (options.value.length > 1000) {
						container.html("<span onMouseOver=exibirTitle('"+options.data.id+"','"+options.column.dataField+"');>"+options.value+"</span>");				
					}else{
						container.html(options.value).attr("title", options.value);
					}
				}
				function exibirTitle(p1,p2){
					$("#dvDialog").dxPopup("show");
					$("#dvConteudoDialog").html(#server(VAR.CSP.VARProntuarioEletronico.getResultado(p1,p2))#);
				}

		function abreListaArquivos(){
			 popupOptions = {
		        width: "700",
		        height: "500",
		        showTitle: true,
		        title: "Lista Arquivos",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false,
		    }		
		    if ($("#openPesquisa3").html()!=""){
		    	openPesquisa3.dispose()
		    	pesquisaExames3.dispose()
		    }
	 		$("#openPesquisa3").html("<div id='pesquisaExames3'></div>")
			openPesquisa3 = $("#openPesquisa3").dxPopup(popupOptions).dxPopup("instance")
			preparaPesquisaArquivo()
		}		
		
		function preparaPesquisaArquivo(){
	      pesquisaExames3 = $("#pesquisaExames3").dxDataGrid({
				dataSource:  new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
						loadMode: "raw",
						load: function(){
							return $.getJSON(urlPreparacao, {method: "getArquivosResultadosExames",codPaciente:codPacienteValor},function(retorno){
							});
						}
					})
				}),
				columns: [
					{dataField: "DataDoExame"},
					{dataField: "Exame"},
				],	
				allowColumnReordering: true,
				columnAutoWidth: true,
				allowColumnResizing: true,
				height: "100%",	
				headerFilter: { visible: false },
				hoverStateEnabled: true,
				filterRow: { visible: true },
				showBorders: true,
				showRowLines: true,
				grouping: { autoExpandAll: false },
				searchPanel: { visible: false }, 
				groupPanel: { visible: false },
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				columnChooser: { enabled: false, mode: "dragAndDrop" },
				sorting: { mode: "multiple" },
				rowAlternationEnabled: true,
				wordWrapEnabled:true,
				onRowClick: function(e){
					if (e.rowType == "data") {
						$.post(urlPreparacao,{
							method	:"preparaAberturaResultado",
							arquivo: e.key.Arquivo
						},function(rs){
							window.open(rs,"Visualizar")
						});
					}
				},
				pager: {
					showPageSizeSelector: true,
					allowedPageSizes: [20, 50, 100, 150, 200],
					showInfo: true,
					showNavigationButtons: true,
					visible: true 
				},
				paging: { enabled: true, pageSize: 20 }
			}).dxDataGrid("instance")
		}

			dataSourceResultado = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method	:"listaResultados",
							paciente: codPacienteValor
						},function(rs){});
					},
					update: function (key, values) {
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								#server(VAR.CSP.VARPEPPremium.ArmResultaExame(codPacienteValor, key.id, coluna, values[coluna]))#;
							}
						}
					}					
				})
			});


		var templateEdit = function(container, options) {
		    var campo=options.column.dataField
		    container
		    .html(options.text+"&nbsp;&nbsp;<i fas class='fa fa-search' onclick='visualizaResultados()' style='cursor:pointer'>")
		};




		function carregaDataSourcesExames(){
			dataSourceProtocoloExames = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	: "listaPerfilExames",
		                    tipo	: "1",
                        	skip	: args.skip,
                        	take	: args.take,
                        	searchValue:args.searchValue
		                });
	                }
	            })
	        })
		    //
			dataSourceProtocoloDiversos = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	: "listaPerfilExames",
		                    tipo	: "2",
                        	skip	: args.skip,
                        	take	: args.take,
                        	searchValue:args.searchValue
		                });
	                }
	            })
	        })
		    
			dataSourceGridProtocoloExames = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					insert : function(args){
						alteracao=1
						$.getJSON(urlPreparacao,{
							method	 	:"salvaExame",
							tipo	  	: 1,
							dataNew		: JSON.stringify(args)
						});
					},
					remove : function(args){
						alteracao=1
						$.getJSON(urlPreparacao,{
							method	 	:"deletaExame",
							tipo	  	: 1,
							codigo		: args.CodExame
						});
					},
					update : function(argsOld,argsNew){
						alteracao=1
						if (argsNew.CodExame==undefined){
							argsNew.CodExame = argsOld.CodExame
						}
						if (argsNew.Observacoes==undefined){
							argsNew.Observacoes = argsOld.Observacoes
						}
						$.getJSON(urlPreparacao,{
							method 	:"salvaExame",
							tipo	: 1,
							edit	: 1,
							dataOld	: JSON.stringify(argsOld),
							dataNew	: JSON.stringify(argsNew)
						});
					},					
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method	  : "recExames",
							tipo	  : 1
						});
					}	
				})
			})
		        
				
			dataSourceGridProtocoloDiversos = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
					insert : function(args){
						alteracao=1
						$.getJSON(urlPreparacao,{
							method	 	:"salvaExame",
							tipo	  	: 2,
							dataNew		: JSON.stringify(args)
						});
					},
					remove : function(args){
						alteracao=1
						$.getJSON(urlPreparacao,{
							method	 	:"deletaExame",
							tipo	  	: 2,
							codigo		: args.CodExame
						});
					},					
					update : function(argsOld,argsNew){
						alteracao=1
						if (argsNew.CodExame==undefined){
							argsNew.CodExame = argsOld.CodExame
						}
						if (argsNew.Observacoes==undefined){
							argsNew.Observacoes = argsOld.Observacoes
						}
						$.getJSON(urlPreparacao,{
							method 	:"salvaExame",
							tipo	: 2,
							edit	: 1,
							dataOld	: JSON.stringify(argsOld),
							dataNew	: JSON.stringify(argsNew)
						});
					},					
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method	  : "recExames",
							tipo	  : 2
						});
					}	
        		})
        	})

		}
		
		function carregaDataGridExames(){
	    	divExamesDiversosDetalhes = $("#divExamesDiversosDetalhes").dxDataGrid({
				dataSource	: dataSourceGridProtocoloDiversos,
				disabled	: toolBar.option("items")[0].disabled,
				columns		: [{
					dataField: "Descricao",
					caption: "Exame", 
					alignment: "left",
	                allowEditing: false,
				},{
					dataField	: "Observacoes",
					caption		: "Observações",
					width		: "50%"
					
        		}],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: true, pageSize: 10 },
				editing: {
		            //mode: "batch",
		            mode: "cell",
		            allowUpdating: true,
		            allowDeleting: true,
                    useIcons: true,
		        },					
				height: function() {
					return window.innerHeight - 290;
				},	
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-print",
							height: 36,
							width: 36,
							hint: "Imprimir Requisição de Exames",
							onClick: function(e) {
								salvarExames(3,"Solicitação de Exames")
							}
						}
					}/*,{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "add",
							height: 36,
							width: 36,
							hint: "Adicionar Exames",
							onClick: function(e) {
								addExamesPopup(2)
							}
						}
					}*/)
				}				
			}).dxDataGrid("instance")
			
	    	divExamesDetalhes = $("#divExamesDetalhes").dxDataGrid({
				dataSource	: dataSourceGridProtocoloExames,
				disabled	: toolBar.option("items")[0].disabled,
				columns		: [{
					dataField: "Descricao",
					caption: "Exame", 
					alignment: "left",
	                allowEditing: false,
				},{
					dataField	: "Observacoes",
					caption		: "Observações",
					width		: "50%"
					
        		}],
				filterRow: { visible: false },
				hoverStateEnabled: true,
				paging: { enabled: true, pageSize: 10 },
				editing: {
		            mode: "cell",
		            allowUpdating: true,
		            allowDeleting: true,
                    useIcons: true
		        },					
				height: function() {
					return window.innerHeight - 290;
				},	
				showBorders: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				onToolbarPreparing: function(e) {
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fa fa-print",
							height: 36,
							width: 36,
							hint: "Imprimir Requisição de Exames",
							onClick: function(e) {
								salvarExames(2,"Solicitação de Exames")
							}
						}
					}/*,{
						location: "after",
						widget: "dxButton",
						options: {
							icon: "add",
							height: 36,
							width: 36,
							hint: "Adicionar Exames",
							onClick: function(e) {
								addExamesPopup(1)
							}
						}
					}*/)
				}				
			}).dxDataGrid("instance")
			
		}
		
		function addExames(codExame,tipoPerfil){
			//
			$.getJSON(urlPreparacao,{
				method	 	:"salvaExame",
				codExame	: codExame,
				tipo	  	: tipoPerfil
			},function(ret){
				if (ret==0){
					DevExpress.ui.notify("Exame já consta na lista!", "error", 4000);
					return
				}
	            DevExpress.ui.notify("Exame adicionado com sucesso!", "success", 4000);
	            if (tipoPerfil==1){
		            pesquisaExamesSub.updateData("ExamesLaboratorio","")
		            dataSourceGridProtocoloExames.pageIndex(0)
	            	dataSourceGridProtocoloExames.reload()
	            }else{
		            pesquisaExamesSub.updateData("ExamesImagem","")
		            dataSourceGridProtocoloDiversos.pageIndex(0)
	        		dataSourceGridProtocoloDiversos.reload()
	            }
			});
			/*			
			//
			$.getJSON(urlPreparacao,{
                method	:"addExames",
                codigo	: codPerfil,
                tipo	: tipoPerfil
            },function(){
	            alteracao=1
	            if (tipoPerfil==1){
	            	dataSourceGridProtocoloExames.pageIndex(0)
	            	dataSourceGridProtocoloExames.reload()
	            }else{
		            dataSourceGridProtocoloDiversos.pageIndex(0)
	        		dataSourceGridProtocoloDiversos.reload()
	            }
	        });*/
		}
		

		function addExamesPopup(tipo){
			 popupOptions = {
		        width: 800,
		        height: 450,
		        showTitle: true,
		        title: "Adicionar Exames",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false
		    }		
		    if ($("#openPesquisa2").html()!=""){
		    	pesquisaExames2.dispose()
		    	openPesquisa2.dispose()
		    	$("#pesquisaExames2").remove();
			    if (typeof divExamesDetalhesPopup!="undefined"){
				    divExamesDetalhesPopup.dispose()
				    $("#divExamesDetalhesPopupx").remove();
			    }
		    }
   			$("#openPesquisa2").html("<div id='pesquisaExames2'></div><br><div id='divExamesDetalhesPopupx'></div>")
			openPesquisa2 = $("#openPesquisa2").dxPopup(popupOptions).dxPopup("instance")
			preparaExamesPopup(tipo)
		}

		
        function preparaExamesPopup(tipo){
			dataSourceExame = 	new DevExpress.data.DataSource({
		            store: new DevExpress.data.CustomStore({
	                byKey: function(args) {
	                    return $.getJSON(urlPreparacao,{
        	            	method	:"listaExames",
        	            	tipo	: tipo,
		                    codigo	: args
		                });
	                },
		            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
        	            	method	:"listaExames",
        	            	tipo	: tipo,
							searchValue:args.searchValue,
                        	skip:args.skip,
                        	take:args.take,
		                });
		                }
		            })
		        })		        
		        pesquisaExames2 = $("#pesquisaExames2").dxForm({
					screenByWidth: function(width) {
			            return "lg";
			        },
		            itemType: "group",
        			cssClass: "first-group",
        			colCount: 20,
                    items: [{
	                    colSpan		: 19,
	                    cssClass:"Padding-R4",
	                    dataField	: "CodExame",
						label		: {
							text	: "Código Exame"
						},
	                    editorOptions: {
             				width: "100%"
            			},
						editorType	: "dxSelectBox",
						validationRules: [{ type: "required" }],
			            editorOptions: {
	        		        valueExpr: "CodExame", 
							displayExpr: "DescExame",
							searchEnabled: true,
							dataSource: dataSourceExame
			            }
                    },{
						colSpan : 20,
						itemType: "button",
						horizontalAlignment: "right",
			            buttonOptions: {
					        stylingMode: "contained",
					        icon: "add",
					        type: "success",
					        hint: "Adicionar Exame",
					        text: "Adicionar",
					        onClick: function() {
								if (!pesquisaExames2.validate().isValid){
									DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
									return
								}
								dados = pesquisaExames2.option("formData")
								alteracao=1
								$.getJSON(urlPreparacao,{
									method	 	:"salvaExame",
									tipo	  	: tipo,
									dataNew		: JSON.stringify(dados)
								},function(ret){
									if (ret==0){
										DevExpress.ui.notify("Exame já consta na lista!", "error", 4000);
										return
									}
						            DevExpress.ui.notify("Exame adicionado com sucesso!", "success", 4000);
						            pesquisaExamesSub.resetValues()
						            if (tipo==1){
							            dataSourceGridProtocoloExames.pageIndex(0)
						            	dataSourceGridProtocoloExames.reload()
						            }else{
							            dataSourceGridProtocoloDiversos.pageIndex(0)
						        		dataSourceGridProtocoloDiversos.reload()
						            }
						            
								});
					        }
			            }								

					}]
	            }).dxForm("instance")

		    	divExamesDetalhesPopup = $("#divExamesDetalhesPopupx").dxDataGrid({
					columns		: [{
						dataField	: "Descricao",
						caption		: "Exame", 
						alignment	: "left",
		                allowEditing: false,
					},{
						dataField	: "Observacoes",
						caption		: "Observações",
						width		: "50%"
						
		    		}],
					editing: {
			            mode: "cell",
			            allowUpdating: !toolBar.option("items")[0].disabled,
			            allowDeleting: !toolBar.option("items")[0].disabled,
	                    useIcons: true,
			        },					
					filterRow: { visible: false },
					hoverStateEnabled: true,
					paging: { enabled: true, pageSize: 10 },	
					showBorders: true,
					height: "290",
					showRowLines: true,
					rowAlternationEnabled: true,
				}).dxDataGrid("instance")
	            if (tipo==1){
	            	divExamesDetalhesPopup.option("dataSource",dataSourceGridProtocoloExames)
	            }else{
		            divExamesDetalhesPopup.option("dataSource",dataSourceGridProtocoloDiversos)
	            }

	    }
		
		
	    function cadastraExames(tipo){
			 popupOptions = {
		        width: 700,
		        height: 200,
		        showTitle: true,
		        title: "Cadastrar Exames",
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false
		    }		
		    if ($("#openPesquisa3").html()!=""){
		    	pesquisaExames3.dispose()
		    	openPesquisa3.dispose()
		    }
   			$("#openPesquisa3").html("<div id='pesquisaExames3'></div>")
			openPesquisa3 = $("#openPesquisa3").dxPopup(popupOptions).dxPopup("instance")
			preparaCadastraExame(tipo)
		}

        function preparaCadastraExame(tipo){
	        pesquisaExames3 = $("#pesquisaExames3").dxForm({
				screenByWidth: function(width) {
		            return "lg";
		        },
		        scrollingEnabled	: true,
				items:[{
					itemType: "group",
					items	: [{
						dataField	: "descricao",
						label		: {
							text	: "Descrição do Exame"
						},
					}]
				},{
					itemType: "button",
					horizontalAlignment: "right",
		            buttonOptions: {
				        stylingMode: "contained",
				        icon: "save",
				        type: "success",
				        hint: "Salvar",
				        text: "Salvar",
				        onClick: function() {
	   			            $.getJSON(urlPreparacao,{
	        	            	method		: "salvarExame",
	        	            	descricao	: pesquisaExames3.option("formData").descricao,
	        	            	tipo		: tipo
		        	    	},function(result){
			        	    	if (result.status==0){
				        	    	DevExpress.ui.notify(result.retorno, "warning", 4000);
				        	    	return
			        	    	}
			        	    	DevExpress.ui.notify(result.retorno, "sucess", 4000);
			        	    	dataSourceExame.pageIndex(0)
			        	    	dataSourceExame.reload()
			        	    	openPesquisa3.hide()
		        	    	})

				        }
		            }								

				}]
					
		        }).dxForm("instance")
	    }

	    function editaProtocolos(tipo){
		    if (tipo==1){
		    	titulo = "Criar/Editar Protocolos de Exames Laboratorial"
		    }else{
		    	titulo = "Criar/Editar Protocolos de Outros Exames"
		    }
			 popupOptions = {
		        width: 600,
		        height: 350,
		        showTitle: true,
		        title: titulo,
		        visible: true,
		        dragEnabled: false,
		        closeOnOutsideClick: false
		    }		
		    if ($("#openPesquisa2").html()!=""){
		    	pesquisaExames2.dispose()
		    	openPesquisa2.dispose()
		    }
   			$("#openPesquisa2").html("<div id='pesquisaExames2'></div>")
			openPesquisa2 = $("#openPesquisa2").dxPopup(popupOptions).dxPopup("instance")
			preparaProtocolos(tipo)
		}

        function preparaProtocolos(tipo){
	        pesquisaExames2 = $("#pesquisaExames2").dxForm({
				screenByWidth: function(width) {
		            return "lg";
		        },
		        scrollingEnabled	: true,
				colCount	: 15,
				items:[{
					colSpan		: 15,
					dataField	: "codigo",
					label		: {
						text	: "Código do Protocolo"
					},
					editorType	: "dxSelectBox",
		            editorOptions: {
        		        valueExpr			: "Codigo", 
        		        acceptCustomValue	: false,
						displayExpr			: "Descricao",
						placeholder 		: "+",
						showClearButton		: true,
						searchEnabled		: true,
						onValueChanged		: function(valor){
							recProtocolo(valor.value)
						},
						dataSource: new DevExpress.data.DataSource({
				            store: new DevExpress.data.CustomStore({
			                byKey: function(args) {
			                    return $.getJSON(urlPreparacao,{
				                    method	:"listaPerfilExames",
				                    tipo	: tipo,
				                    codigo	: args
				                });
			                },
				            load: function(args) {
				                    return $.getJSON(urlPreparacao,{
					                    method	: "listaPerfilExames",
					                    tipo	: tipo,
			                        	skip	: args.skip,
			                        	take	: args.take,
			                        	searchValue:args.searchValue
					                });
				                }
				            })
				        })
		            }
				},{
					colSpan		: 15,
					dataField	: "descricao",
					validationRules: [{ type: "required" }],
					label		: {
						text	: "Descrição"
					},
				},{
					colSpan		: 15,
					dataField	: "exames",
					label		: {
						text	: "Exames"
					},
					editorType	: "dxTagBox",
					validationRules: [{ type: "required" }],
		            editorOptions: {
			            showSelectionControls: true,
		                selectionMode: "multiple",
		                searchEnabled: true,
        		        valueExpr: "CodExame", 
						displayExpr: "DescExame",
						searchEnabled: true,
						dataSource: new DevExpress.data.DataSource({
				            store: new DevExpress.data.CustomStore({
			                byKey: function(args) {
			                    return $.getJSON(urlPreparacao,{
		        	            	method	:"listaExames",
		        	            	tipo	: tipo,
				                    codigo	: args
				                });
			                },
				            load: function(args) {
			                    return $.getJSON(urlPreparacao,{
		        	            	method	:"listaExames",
		        	            	tipo	: tipo,
									searchValue:args.searchValue,
		                        	skip:args.skip,
		                        	take:args.take,
									
				                });
				                }
				            })
				        })
		            }
				},{
					colSpan		: 14,
					itemType	: "button",
					horizontalAlignment: "right",
					buttonOptions: {
						stylingMode	: "contained",
						icon		: "save",
						text		: "Salvar",
						type		: "success",
						hint		: "Salvar Protocolo",
						onClick: function() {
							salvaProtocolo(tipo)
						}
					}								
				},{
					itemType	: "button",
					horizontalAlignment: "right",
					buttonOptions: {
						stylingMode	: "contained",
						icon		: "remove",
						text		: "Excluir",
						type		: "danger",
						hint		: "Excluir Protocolo",
						onClick: function() {
							excluirProtocolo()
						}
					}								
				}]
				
	        }).dxForm("instance")
		}
		
		function salvaProtocolo(tipo){
			if (!pesquisaExames2.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
			dadosProtocolo = pesquisaExames2.option("formData")
	        $.getJSON(urlPreparacao,{
	            method	: "salvaProtocolo",
	            tipo	: tipo,
	            dados	: JSON.stringify(dadosProtocolo)
	        },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
		        if (retorno.status==1){
		        	pesquisaExames2.updateData("codigo",retorno.codigo)
		        	dataSourceProtocoloExames.pageIndex(0)
		        	dataSourceProtocoloExames.reload()
		        	dataSourceProtocoloDiversos.pageIndex(0)
		        	dataSourceProtocoloDiversos.reload()
		        }
		    });

		}

		function excluirProtocolo(){
			codigo = pesquisaExames2.option("formData").codigo
	        if (codigo==""||codigo==undefined){
		        DevExpress.ui.notify("Informe um Protocolo", "warning", 4000);
		        return
	        }
	        $.getJSON(urlPreparacao,{
	            method	: "excluirProtocolo",
	            codigo	: codigo
	        },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
		        if (retorno.status==1){
		        	pesquisaExames2.updateData("codigo","")
		        	dataSourceProtocoloExames.pageIndex(0)
		        	dataSourceProtocoloExames.reload()
		        	dataSourceProtocoloDiversos.pageIndex(0)
		        	dataSourceProtocoloDiversos.reload()
		        }

		    });

		}
		
		function recProtocolo(codProtocolo){
	        $.getJSON(urlPreparacao,{
	            method	:"getPerfilExames",
	            codigo	: codProtocolo
	        },function(retorno){
		        pesquisaExames2.updateData("descricao",retorno.descricao)
		        pesquisaExames2.updateData("exames",retorno.exames)
		    });
			
		}

</script>