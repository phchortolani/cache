<script language="Cache" runat="server">
	Set YBED = $get(%request.Data("YBED", 1))
	Set flagUsuarioMedico = +$$GetChecaMedico^VARSQL(YBED)
</script>
<div class="container-fluid">
	<div class="row">
		<div class="col-md-2 tituloRadio">Nome do Meticamento:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeMedicamento"></div></div>
		<div class="col-md-2 tituloRadio">Nome Fabricante:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
	</div>
	<div class="row">
		<div class="col-md-3 tituloRadio">Data do Início do uso do Medicamento:</div>
		<div class="col-md-3 campo"><div id="textReacaoMedNomeMedicamento"></div></div>
		<div class="col-md-3 tituloRadio">Data do Aparecimento dos Sintomas:</div>
		<div class="col-md-3 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
	</div>
	<div class="row">
		<div class="col-md-2 tituloRadio">Lote:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeMedicamento"></div></div>
		<div class="col-md-2 tituloRadio">Validade:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
	</div>
	<div class="row">
		<div class="col-md-2 tituloRadio">Peso:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeMedicamento"></div></div>
		<div class="col-md-2 tituloRadio">Alt:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
	</div>
	<div class="row">
		<div class="col-md-2 tituloRadio">Já recebeu medicamento antes:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeMedicamento"></div></div>
		<div class="col-md-2 tituloRadio">Qual Frequência:</div>
		<div class="col-md-4 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
	</div>
	<div class="row">
		<div class="col-md-12"></div>
	</div>
	<div class="row">
		<div class="col-md-12">
			<fieldset>
				<legend>&nbsp;Modo de Aplicação:&nbsp;</legend>
				<div class="row">
					<div class="col-md-1 campo" style="text-align:right;"><div id="checkConferirPaciente"></div></div>
					<div class="col-md-3 tituloRadioNormal" style="text-align:left;">
						&nbsp;I.V. infusão por gotejamento
					</div>
					<div class="col-md-2 tituloRadio">Diluição:</div>
					<div class="col-md-1 campo"><div id="textReacaoMedNomeMedicamento"></div></div>
					<div class="col-md-1 tituloRadioNormal" style="text-align:left;">
						&nbsp;mL em
					</div>
					<div class="col-md-1 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
					<div class="col-md-2 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
				</div>
				<div class="row">
					<div class="col-md-1 campo" style="text-align:right;"><div id="checkConferirPaciente"></div></div>
					<div class="col-md-3 tituloRadioNormal" style="text-align:left;">
						&nbsp;I.V. infusão em bolus
					</div>
					<div class="col-md-2 tituloRadio">Duração da administração:</div>
					<div class="col-md-2 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
				</div>
				<div class="row">
					<div class="col-md-1 campo" style="text-align:right;"><div id="checkConferirPaciente"></div></div>
					<div class="col-md-3 tituloRadioNormal" style="text-align:left;">
						&nbsp;Intramoscular
					</div>
					<div class="col-md-2 tituloRadio">Duração da administração:</div>
					<div class="col-md-2 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
				</div>
				<div class="row">
					<div class="col-md-1 campo" style="text-align:right;"><div id="checkConferirPaciente"></div></div>
					<div class="col-md-3 tituloRadioNormal" style="text-align:left;">
						&nbsp;Oral
					</div>
					<div class="col-md-2 tituloRadio">Posologia:</div>
					<div class="col-md-2 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
				</div>
				<div class="row">
					<div class="col-md-12 tituloRadio" style="text-align:left;">&nbsp; Ingestão/Infusão de Outros Medicamento concomitantes (citar todos os medicamentos que faz uso):</div>
				</div>
				<div class="row">
					<div class="col-md-12 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
				</div>
				<div class="row">
					<div class="col-md-12 tituloRadio" style="text-align:left;">&nbsp; Sinais e Sintomas:</div>
				</div>
				<div class="row">
					<div class="col-md-12 campo"><div id="textReacaoMedNomeFabriacente"></div></div>
				</div>
				<div class="row">
					<div class="col-md-2 tituloRadio">Incidente Local:</div>
					<div class="col-md-10 campo">
						<div class="row">	
							<div class="col-md-3 campo"><div id="checkComorbidadesDM"></div></div>
							<div class="col-md-3 campo"><div id="checkComorbidadesHAS"></div></div>
							<div class="col-md-6 campo"><div id="checkComorbidadesIRC"></div></div>
						</div>
					</div>	
				</div>
				<div class="row">
					<div class="col-md-4 tituloRadioNormal">Descrição:</div>
					<div class="col-md-8 campo"><div id="textComorbidadesOutros"></div></div>
				</div>
				<div class="row">
					<div class="col-md-2 tituloRadio">Uso de Compressa:</div>
					<div class="col-md-10 campo">
						<div class="row">	
							<div class="col-md-3 campo"><div id="checkComorbidadesDM"></div></div>
							<div class="col-md-3 campo"><div id="checkComorbidadesHAS"></div></div>
							<div class="col-md-6 campo"><div id="checkComorbidadesIRC"></div></div>
						</div>
					</div>	
				</div>
			</fieldset>
		</div>
	</div>
</div>

<script type="text/javascript">
	var codSintomasTox = ""; 
	dataSourceRadio = [{text: "Não", value: "0"},{text: "Sim", value: "1"}];
	dataSourceRadioNA = [{text: "Sim", value: "1"},{text: "NA", value: "0"}];
	dataSourceAvaliacao = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		key: "sequencia",
  		loadMode: "raw",   
  		load: function() {
      	return $.getJSON(	"VAR.CSP.VARContrAtendQuimioterapico.cls",{method:"GetAvaliacaoToxicidade",
      										pCodProntuario:pCodProntuario});
  		},
  		insert: function (values) {
        objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendQuimioterapico.ArmAvaliacaoToxicidade(pCodProntuario, "", objDados, YBED))#;
    	},
			update: function (key, values) {
				var idRow = key;
				objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendQuimioterapico.ArmAvaliacaoToxicidade(pCodProntuario, idRow, objDados, YBED))#;
			},					
			remove: function (key) {
				#server(VAR.CSP.VARContrAtendQuimioterapico.ExcluirAvaliacaoToxicidade(pCodProntuario, key, YBED))#;
    	}				
		})
	});
	dataSourceIntMedicamentosa = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		key: "sequencia",
  		loadMode: "raw",   
  		load: function() {
      	return $.getJSON(	"VAR.CSP.VARContrAtendQuimioterapico.cls",{method:"GetInteracaoMedicamentosa",
      										pCodProntuario:pCodProntuario});
  		},
  		insert: function (values) {
        objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendQuimioterapico.ArmInteracaoMedicamentosa(pCodProntuario, "", objDados, YBED))#;
    	},
    	
			update: function (key, values) {
				var idRow = key;
				objDados = new Array;
				for (var coluna in values) {
					if (values.hasOwnProperty(coluna)) {
						valor = values[coluna];
						objDados.push(coluna+"~"+valor);
					}
				}
				#server(VAR.CSP.VARContrAtendQuimioterapico.ArmInteracaoMedicamentosa(pCodProntuario, idRow, objDados, YBED))#;
			},
			remove: function (key) {
				#server(VAR.CSP.VARContrAtendQuimioterapico.ExcluirInteracaoMedicamentosa(pCodProntuario, key, YBED))#;
    	}					
		})
	});
	dataSourceDroga = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
			load: function(args) {
				return $.getJSON(urlPreparacao,{method:"CarregaProdutos", pFiltro: args.searchValue,
					pTake: args.take, pSkip: args.skip, YLOCATION: YLOCATION});
			},
			byKey: function(args) {
				return $.getJSON(urlPreparacao,{method:"CarregaProdutos", pKey: args, YLOCATION: YLOCATION});
			}
		})
	});
	//
	campoCID = $("#selectCID").dxTagBox({
		valueExpr: "Codigo", 
		displayExpr: "Descricao",
		searchEnabled: true,
		buttons: [{
			name: "btnPesquisarDiagnostico",
			location: "before",
			options: {
				hint: "Pesquisar",
				icon: "fa fa-search",
				type: "normal",
				onClick: function() {
					abrePesquisaCID(campoCID, campoCID.option("value"));
				}
			}
		}],
		itemTemplate: function (data, itemIndex, element) {
			if (CategoriaAnt != data.Categoria){
				retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
				CategoriaAnt = data.Categoria
				element.append(retorno)
			}
			return element.append(data.Descricao)
    },							
		dataSource: new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				byKey: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"getCID",
						codigo: args
					});
				},
				load: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"getCID",
						usuario: YBED,
						skip:args.skip,
						take:args.take,
						searchValue:args.searchValue
					});
				}
			})
		})
	}).dxTagBox("instance");
	//
	campoDataEventosA = $("#textAnamseneDataEventosA").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
	campoHoraEventosA = $("#textAnamseneHoraEventosA").dxTextBox({readOnly: true, height: 27}).dxTextBox("instance");
	campoDescicaoEventosA = $("#textAnamseneDescicaoEventosA").dxTextArea({readOnly: true}).dxTextArea("instance");
	campoCondutaEventosA = $("#textAnamseneCondutaEventosA").dxTextArea({readOnly: true}).dxTextArea("instance");
	//
	campoMolestiaPregressas = $("#textMolestiaPregressas").dxTagBox({
		valueExpr: "Codigo", 
		displayExpr: "Descricao",
		searchEnabled: true,
		buttons: [{
			name: "btnPesquisarMolestiaPregressas",
			location: "before",
			options: {
				hint: "Pesquisar",
				icon: "fa fa-search",
				type: "normal",
				onClick: function() {
					abrePesquisaCID(campoMolestiaPregressas, campoMolestiaPregressas.option("value"));
				}
			}
		}],
		itemTemplate: function (data, itemIndex, element) {
			if (CategoriaAnt != data.Categoria){
				retorno = "<b><i>"+data.Categoria+"</i></b><br><br>"
				CategoriaAnt = data.Categoria
				element.append(retorno)
			}
			return element.append(data.Descricao)
    },							
		dataSource: new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				byKey: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"getCID",
						codigo: args
					});
				},
				load: function(args) {
					return $.getJSON(urlPreparacaoQui,{
						method:"getCID",
						usuario: YBED,
						skip:args.skip,
						take:args.take,
						searchValue:args.searchValue
					});
				}
			})
		})
	}).dxTagBox("instance");
	
	/*campoComorbidades = $("#radioComorbidades").dxRadioGroup({
		dataSource: dataSourceRadio, displayExpr:"text", valueExpr:"value", layout: "vertical", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoComorbidadesDM.option({disabled: 0});
				campoComorbidadesHAS.option({disabled: 0});
				campoComorbidadesIRC.option({disabled: 0});
				campoComorbidadesICC.option({disabled: 0});
				campoComorbidadesAVC.option({disabled: 0});
				campoComorbidadesCodronariopatia.option({disabled: 0});
				campoComorbidadesOutros.option({disabled: 0});
			}else{
				campoComorbidadesDM.option({disabled: 1, value: ""});
				campoComorbidadesHAS.option({disabled: 1, value: ""});
				campoComorbidadesIRC.option({disabled: 1, value: ""});
				campoComorbidadesICC.option({disabled: 1, value: ""});
				campoComorbidadesAVC.option({disabled: 1, value: ""});
				campoComorbidadesCodronariopatia.option({disabled: 1, value: ""});
				campoComorbidadesOutros.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoComorbidadesDM = $("#checkComorbidadesDM").dxCheckBox({text: " DM", disabled: 1}).dxCheckBox("instance");
	campoComorbidadesHAS = $("#checkComorbidadesHAS").dxCheckBox({text: " HAS", disabled: 1}).dxCheckBox("instance");
	campoComorbidadesIRC = $("#checkComorbidadesIRC").dxCheckBox({text: " IRC", disabled: 1}).dxCheckBox("instance");
	campoComorbidadesICC = $("#checkComorbidadesICC").dxCheckBox({text: " ICC", disabled: 1}).dxCheckBox("instance");
	campoComorbidadesAVC = $("#checkComorbidadesAVC").dxCheckBox({text: " AVC", disabled: 1}).dxCheckBox("instance");
	campoComorbidadesCodronariopatia = $("#checkComorbidadesCodronariopatia").dxCheckBox({text: " Codronariopatia", disabled: 1}).dxCheckBox("instance");
	campoComorbidadesOutros = $("#textComorbidadesOutros").dxTextArea({disabled: 1}).dxTextArea("instance");*/
	//
	campoCirugiasAnteriores = $("#radioCirugiasAnteriores").dxRadioGroup({
		dataSource: dataSourceRadio, layout: "vertical", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoCirugiasAnterioresOnde.option({disabled: 0});
			}else{
				campoCirugiasAnterioresOnde.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoCirugiasAnterioresOnde = $("#textCirugiasAnteriores").dxTextArea({disabled: 1}).dxTextArea("instance");
	//
	campoAlergia = $("#radioAlergia").dxRadioGroup({
		dataSource: dataSourceRadio, layout: "vertiacal", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoAlergiaAQue.option({disabled: 0});
			}else{
				campoAlergiaAQue.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoAlergiaAQue = $("#textAlergia").dxTextArea({disabled: 1}).dxTextArea("instance");
	//
	campoInfusaoVeiaPeriferica = $("#checkInfusaoVeiaPeriferica").dxCheckBox({text: " Veia Periférica"}).dxCheckBox("instance");
	campoInfusao = $("#textInfusao").dxTextArea({}).dxTextArea("instance");
	campoInfusaoPort = $("#checkInfusaoPort").dxCheckBox({text: " Port-a-cath"}).dxCheckBox("instance");
	campoInfusaoPICC = $("#checkInfusaoPICC").dxCheckBox({text: " PICC"}).dxCheckBox("instance");
	campoInfusaoSC = $("#checkInfusaoSC").dxCheckBox({text: " SC"}).dxCheckBox("instance");
	campoInfusaoIM = $("#checkInfusaoIM").dxCheckBox({text: " IM"}).dxCheckBox("instance");
	//
	campoFluxoCateter = $("#radioFluxoCateter").dxRadioGroup({dataSource: [{text: "Ótimo", value: "1"},
											{text: "Ruim", value: "0"}], displayExpr:"text", valueExpr:"value", 
											layout: "horizontal"}).dxRadioGroup("instance");
	//
	campoFinalizacao = $("#radioFinalizacao").dxRadioGroup({dataSource: [{text: "Heparinização", value: "0"},
										 {text: "Salinização", value: "1"}], displayExpr:"text", valueExpr:"value", 
										 layout: "horizontal"}).dxRadioGroup("instance");
	//
	campoIncidente = $("#radioIncidente").dxRadioGroup({
		dataSource: dataSourceRadio, layout: "horizontal", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoIncidenteQual.option({disabled: 0});
			}else{
				campoIncidenteQual.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoIncidenteQual = $("#textIncidente").dxTextArea({disabled: 1}).dxTextArea("instance");
	//
	campoPeso = $("#textPeso").dxNumberBox({height: 27, min: 0}).dxNumberBox("instance");
	campoAltura = $("#textAltura").dxNumberBox({height: 27, min: 0}).dxNumberBox("instance");
	campoSC	= $("#textSC").dxNumberBox({height: 27, min: 0}).dxNumberBox("instance");
	//
	campoRiscoFlebite = $("#radioRiscoFlebite").dxRadioGroup({dataSource: dataSourceRadio, displayExpr:"text", 
											valueExpr:"value", layout: "horizontal"}).dxRadioGroup("instance");
	//
	campoNeuropsiquiatrico = $("#selectNeuropsiquiatrico").dxSelectBox({height: 27, valueExpr: "Codigo", displayExpr: "Descricao",
		dataSource: new DevExpress.data.DataSource({
	  	store: new DevExpress.data.CustomStore({
	    	loadMode: "raw",   
      	load: function() {
        	return $.getJSON("VAR.CSP.VARCadastroSalas.cls",{method:"GetVARPARA",DescParametro:"NEUROPSIQUIATRICO"}); 
        }
      })
	  }),
	}).dxSelectBox("instance");
	//
	campoPadraoRespiratorio = $("#selectPadraoRespiratorio").dxSelectBox({height: 27, valueExpr: "Codigo", displayExpr: "Descricao",
		dataSource: new DevExpress.data.DataSource({
	  	store: new DevExpress.data.CustomStore({
	    	loadMode: "raw",   
      	load: function() {
        	return $.getJSON("VAR.CSP.VARCadastroSalas.cls",{method:"GetVARPARA",DescParametro:"PADRAORESPIRATORIO"}); 
        }
      })
	  }),
	}).dxSelectBox("instance");
	//
	campoRitmoCardiaco = $("#selectRitmoCardiaco").dxSelectBox({height: 27, valueExpr: "Codigo", displayExpr: "Descricao",
		dataSource: new DevExpress.data.DataSource({
	  	store: new DevExpress.data.CustomStore({
	    	loadMode: "raw",   
      	load: function() {
        	return $.getJSON("VAR.CSP.VARCadastroSalas.cls",{method:"GetVARPARA",DescParametro:"RITMOCARDIACO"}); 
        }
      })
	  }),
	}).dxSelectBox("instance");
	//
	campoPeleMucosa = $("#selectPeleMucosa").dxSelectBox({height: 27, valueExpr: "Codigo", displayExpr: "Descricao",
		dataSource: new DevExpress.data.DataSource({
	  	store: new DevExpress.data.CustomStore({
	    	loadMode: "raw",   
      	load: function() {
        	return $.getJSON("VAR.CSP.VARCadastroSalas.cls",{method:"GetVARPARA",DescParametro:"PELEEMUCOSA"}); 
        }
      })
	  }),
	}).dxSelectBox("instance");
	//
	campoDor = $("#radioDor").dxRadioGroup({
		dataSource: dataSourceRadio, layout: "vertical", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoDorDescricao.option({disabled: 0});
			}else{
				campoDorDescricao.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoDorDescricao = $("#textDorDescricao").dxTextArea({disabled: 1}).dxTextArea("instance");
	//
	campoRedeVenoso = $("#radioRedeVenoso").dxRadioGroup({
		dataSource: dataSourceRadio, layout: "vertical", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoRedeVenosoDescricao.option({disabled: 0});
			}else{
				campoRedeVenosoDescricao.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoRedeVenosoDescricao = $("#textRedeVenosoDescricao").dxTextArea({disabled: 1}).dxTextArea("instance");
	//
	campoMedoApreensao = $("#radioMedoApreensao").dxRadioGroup({
		dataSource: dataSourceRadio, layout: "vertical", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoMedoApreensaoDescricao.option({disabled: 0});
			}else{
				campoMedoApreensaoDescricao.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoMedoApreensaoDescricao = $("#textMedoApreensaoDescricao").dxTextArea({disabled: 1}).dxTextArea("instance");
	//
	campoInternacaoSocial = $("#radioInternacaoSocial").dxRadioGroup({
		dataSource: dataSourceRadio, layout: "vertical", displayExpr:"text", valueExpr:"value", 
		onValueChanged: function (e) {  
			if (e.value == "1") {
				campoInternacaoSocialDescricao.option({disabled: 0});
			}else{
				campoInternacaoSocialDescricao.option({disabled: 1, value: ""});
			}
		}
	}).dxRadioGroup("instance");
	campoInternacaoSocialDescricao = $("#textInternacaoSocialDescricao").dxTextArea({disabled: 1}).dxTextArea("instance");
	//
	campoHemograma = $("#radioHemograma").dxRadioGroup({dataSource: dataSourceRadioNA, displayExpr:"text", 
									valueExpr:"value", layout: "horizontal"}).dxRadioGroup("instance");
	//
	campoFuncaoRenal = $("#radioFuncaoRenal").dxRadioGroup({dataSource: dataSourceRadioNA, displayExpr:"text", 
										valueExpr:"value", layout: "horizontal"}).dxRadioGroup("instance");
	//
	campoHipatica = $("#radioHipatica").dxRadioGroup({dataSource: dataSourceRadioNA, displayExpr:"text", 
										valueExpr:"value", layout: "horizontal"}).dxRadioGroup("instance");
	//
	campoNeurologicas = $("#radioNeurologicas").dxRadioGroup({dataSource: dataSourceRadioNA, displayExpr:"text", 
											valueExpr:"value", layout: "horizontal"}).dxRadioGroup("instance");
	//
	campoConferirPaciente = $("#checkConferirPaciente").dxCheckBox({}).dxCheckBox("instance");
	//
	campoConferirPrescricao = $("#checkConferirPrescricao").dxCheckBox({}).dxCheckBox("instance");
	//
	campoConferirEtiqueta = $("#checkConferirEtiqueta").dxCheckBox({}).dxCheckBox("instance");
	//
	campoConferirSinais = $("#checkConferirSinais").dxCheckBox({}).dxCheckBox("instance");
	//
	dataSourceToxicidade = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		loadMode: "raw",   
  		load: function() {
      	return $.getJSON("VAR.CSP.VARCadastroSalas.cls",
      		{method:"GetVARPARA",DescParametro:"GRADUACAOTOXICIDADE"});
  		}
		})
	});
  //
  dataSourceGrauToxicidade = new DevExpress.data.DataSource({
		store: new DevExpress.data.CustomStore({
  		loadMode: "raw",   
  		load: function() {
      	return $.getJSON("VAR.CSP.VARContrAtendQuimioterapico.cls",
      		{method:"GetGraduacaoToxicidade",codSintomas: codSintomasTox});
  		}
		})
	});		
	//
	gridAvaliacao = $("#divAvaliacao").dxDataGrid({
		dataSource: dataSourceAvaliacao,
		columns: [
			{	dataField: "toxicidadeDesc", caption: "Toxicidade", alignment: "center", width: 250, 
				setCellValue: function (rowData, value) {
	        rowData.grauDesc = null;
	        rowData.grau = null;
	        codSintomasTox = value;
	        if (value == "" || value == null) {
		        codSintomasTox = "";
	        }
	        dataSourceGrauToxicidade.reload();
	        if (value == "" || value == null) return
	        objLinha = this;
	        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaGraduacaoToxicidade(value))#;
	        objLinha.defaultSetCellValue(rowData, retorno);
					rowData.toxicidadeDesc = retorno;	
					rowData.toxicidade = value;
		  	},
			},
			{	dataField: "grauDesc", caption: "Grau", alignment: "center", validationRules: [{ type: "required" }], 
				setCellValue: function (rowData, value) {
	        if (value == "" || value == null) return
	        objLinha = this;
	        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaGrauGraduacaoToxicidade(value))#;
	        objLinha.defaultSetCellValue(rowData, retorno);
					rowData.grauDesc = retorno;
					rowData.grau = value;
		  	},
		  },
			{	dataField: "medicacao", caption: "Medicação" }
		],
		keyExpr: "sequencia",
		onEditorPreparing: function(e) {
			if (e.parentType == "dataRow" && (e.dataField == "graduacao" || e.dataField == "medicacao")) {
				e.editorName = "dxTextArea"; 
      }  
			if (e.parentType == "dataRow" && e.dataField == "toxicidadeDesc") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceToxicidade;
				e.editorOptions.value = e.row.data.toxicidade;
				e.editorOptions.displayExpr = "Descricao";
				e.editorOptions.valueExpr = "Codigo";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}
			if (e.parentType == "dataRow" && e.dataField == "grauDesc") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceGrauToxicidade;
				e.editorOptions.value = e.row.data.grau;
				e.editorOptions.displayExpr = "grau";
				e.editorOptions.valueExpr = "sequencia";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}
		},
		columnChooser: { enabled: false, mode: "dragAndDrop"},
		allowColumnReordering: false,
		editing: { 
			mode: "batch", allowAdding: true, allowUpdating: true, 
			allowDeleting: true, useIcons: true 
		},
		columnAutoWidth: false,
		showColumnLines: true,
		showRowLines: true,
		rowAlternationEnabled: true,
		hoverStateEnabled: true,
		showBorders: true,
		headerFilter: { visible: false },
		groupPanel: { visible: false, allowColumnDragging: true },
		columnFixing: { enabled: false },
		filterRow: { visible: false }, height: 410,
		export: { enabled: false },
		stateStoring: { enabled: false }, 
		wordWrapEnabled: true
	}).dxDataGrid("instance");
	///
	/*gridInteracao = $("#divInteracao").dxDataGrid({
		dataSource: dataSourceIntMedicamentosa,	
		columns: [
			{	dataField: "descDroga", caption: "Droga", alignment: "center", validationRules: [{ type: "required" }],
				width: 400, setCellValue: function (rowData, value) {
	        if (value == "" || value == null) return
	        objLinha = this;
	        var retorno = #server(VAR.CSP.VARContrAtendQuimioterapico.RecuperaProduto(value))#;
	        retorno = retorno.split("~"); 
					if (retorno[0] == 0) {
						DevExpress.ui.notify(retorno[1],"warning",2000);
						return;	
					}
					objLinha.defaultSetCellValue(rowData, retorno[2]);
					rowData.droga = retorno[1];	
		  	},
		  },
			{	dataField: "dose", alignment: "center", width: 100 },
			{	dataField: "viaAdm", alignment: "center", width: 100 },
			{	dataField: "frequencia", caption: "Freq", alignment: "center", width: 100 },
			{	dataField: "motivo", alignment: "center" },
			{	dataField: "interacao", caption: "Interação", alignment: "center" },
			{	dataField: "conduta", alignment: "center" }
		],
		columnChooser: { enabled: false, mode: "dragAndDrop"},
		allowColumnReordering: false,
		editing: {
			mode: "batch", allowAdding: true, allowUpdating: true, 
			allowDeleting: true, useIcons: true
		},
		keyExpr: "sequencia",
		onEditorPreparing: function(e) {
			if (e.parentType == "dataRow" && (e.dataField == "motivo" || e.dataField == "interacao" || 
					e.dataField == "conduta")) {
				e.editorName = "dxTextArea"; 
      }
			if (e.parentType == "dataRow" && e.dataField == "descDroga") {
				e.editorName = "dxSelectBox"; 
				e.editorOptions.dataSource = dataSourceDroga;
				e.editorOptions.value = e.row.data.droga;
				e.editorOptions.displayExpr = "DescProduto";
				e.editorOptions.valueExpr = "CodProduto";
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.searchEnabled = 1;
				e.editorOptions.showClearButton = 1;
				e.editorOptions.onValueChanged = function(arg) {
					e.setValue(arg.value);
				}
			}
  
		},
		columnAutoWidth: false,
		showColumnLines: true,
		showRowLines: true,
		rowAlternationEnabled: true,
		hoverStateEnabled: true,
		showBorders: true,
		headerFilter: { visible: false },
		groupPanel: { visible: false, allowColumnDragging: true },
		columnFixing: { enabled: false },
		filterRow: { visible: false },		height: 250,
		export: { enabled: false },
		stateStoring: { enabled: false }, 
		wordWrapEnabled: true
	}).dxDataGrid("instance");*/

</script>