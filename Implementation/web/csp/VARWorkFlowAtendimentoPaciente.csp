<!DOCTYPE html>  
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
<script language="Cache" runat="server">
    do ^WWWVAR

	set YUSER = $get(%request.Data("YUSER", 1))
    set YBED = $get(%request.Data("YBED", 1))
    set YM = $get(%request.Data("YM", 1))
    set YLOCATION = $get(%request.Data("YLOCATION", 1))

    set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
    set PageURL = $get(%request.CgiEnvs("CACHE_URL"))
    set PageName = %request.PageName
    set app = %request.Application
    set host = %request.CgiEnvs("HTTP_HOST")
    set url = "http://"_host_app

    set URLPreparacao = "VAR.CSP.WorkFlowAtendimentoPaciente.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
    set URLLogin = "COMLogin.cls"
    set URLLink = "www.cls"

    set nomeLocal = YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

    //Verifica se a sessão
    set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
</script>

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>WorkFlow do Paciente</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

    <!-- Custom Elements -->
    <link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
    <link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
    <link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
    <link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

    <!-- Fonts Padrão IPP -->
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

    <!-- DevExtreme themes -->
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.css" />
    
    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />

    
    
    <!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->

    <style>
    
.first-group,
.second-group {
    padding: 10px;
}

</style>

</head>
    <script type="text/javascript">

        var status = '#(status)#';
        var URLLogin = '#(URLLogin)#';
        var ygif = '#(YGIF)#'

        if (status == 0) {
            alert('#(YBED_" - "_YUSER)#Usuário não está logado ou a sessão expirou.')
            window.location.replace(URLLogin)
        }

    </script>

<body>
	<div id="toolbar"></div>
	<div id="divForm"></div>

    <!-- REQUIRED JS SCRIPTS -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

	<!-- JSZip library -->
	<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

    <!-- A DevExtreme library -->
    <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>
    
    <!-- DevExtreme-Intl module -->
    <script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>
    
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

    <!--Definições globais e criação de funcionalidades encapsuladas-->
    <script type="text/javascript">
        //Deixando variáveis disponíveis no cliente
        var urlPreparacao = '#(URLPreparacao)#';
        var urlLink = '#(URLLink)#';
        var YBED = '#(YBED)#';
        var YUSER = '#(YUSER)#';
        var YLOCATION = '#(YLOCATION)#';
        var nomeLocal = '#(nomeLocal)#';
		var codCID = ""
 		var codImagem = ""
 		var method = ""
		var prepareSearchInputs = (function () {
			// Prepara o formulário
			dados = ""

		 	toolBar = $("#toolbar").dxToolbar({
		        items: [{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "save",
				        hint	: "Salvar os Dados",
				        type	: "success",
				        stylingMode : "contained",
				        onClick	: function(){salvarDados()}
			        }
		        },{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "remove",
				        hint	: "Excluír os Dados",
				        type	: "danger",
				        stylingMode : "contained",
				        onClick	: function(){removerDados()}
			        }
		        },{
			        location: "after",
			        widget	: "dxButton",
			        options	: {
				        icon	: "fa fa-eraser",
				        hint	: "Limpar os Campos",
				        type	: "default",
				        stylingMode : "contained",
				        onClick	: function(){
					        formGeral.option("formData",{})
					    }
			        }
		        }]
		    }).dxToolbar("instance")
		 
		 
			formulario = $("#divForm").dxForm({
				activeStateEnabled:true,
		        items: [{
		            itemType: "group",
		            cssClass: "first-group",
		            items: [{
	                    dataField	: "diagnostico",
						editorOptions: {
	                        width: "80%"
	                    },
						validationRules: [{
		                    type: "required"
		                }],				   
		                editorType: "dxSelectBox",
		            	editorOptions: {
					        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
				                byKey: function(args) {
					                CategoriaAnt = ""
				                    return $.getJSON(urlPreparacao,{
					                    method:"getCID",
					                    codigo: args
					                });
				                },
					            load: function(args) {
						            CategoriaAnt = ""
				                    return $.getJSON(urlPreparacao,{
					                    method:"getCID",
			                        	usuario: YBED,
			                        	skip:args.skip,
			                        	take:args.take,
			                        	searchValue:args.searchValue
					                });
					                }
					            })
					        }),
							onValueChanged: function(e) {
								carregaWF(e.value)
							}
		            	}
	                }]
		        },{
			        cssClass: "second-group",
					itemType: "tabbed",
	                name 	: "abas",
	                
					tabs:[{
						title	: "WorkFlow",
						items: [{
		                    template	: function (data, itemElement) {
			                	itemElement.append("<div id='geral'>")
                   		}}],
					}]
				}]
	        }).dxForm("instance")
	        
	        //
        });


	    function carregaWF(ccid){
		    formGeral.option("disabled",true)
            $.getJSON(urlPreparacao,{
                method:"recCID",
                codigo: ccid
            },function(retorno){
	            if (retorno.achou){
	            	dataSourceIDs.reload()
	            	dataSourcePredecessor.reload()
	            	formGeral.option("disabled",false)
	            }
	        });
	    }
	    
		function carregaGeral(){
			dataSourceIDsValidacao = new DevExpress.data.DataSource({
	            store	: new DevExpress.data.CustomStore({
		        loadMode: "raw",
	            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	:"GetWorkFlows",
                        	cid		: formulario.option("formData").diagnostico,
                        	tipo	: 1 // Tipo Numerico
		                });
	                }
	            })
	        })

			
			dataSourceIDs = new DevExpress.data.DataSource({
	            store	: new DevExpress.data.CustomStore({
		        loadMode: "raw",
		        key: "Codigo",
	            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	:"GetWorkFlows",
                        	cid		: formulario.option("formData").diagnostico,
		                });
	                }
	            })
	        })
			
			dataSourcePredecessor = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            key: "Codigo",
		            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method	:"GetPredecessor",
	                        	usuario	: YBED,
	                        	cid		: formulario.option("formData").diagnostico,
	                        	idAtual: formGeral.option("formData").id
			                });
		                }
		            })
	        })

			dataSourceOpcaoGrupo = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            load: function(args) {
		                    return $.getJSON(urlPreparacao,{
			                    method	:"GetOpcaoGrupo",
	                        	cid		: formulario.option("formData").diagnostico,
	                        	pred	: formGeral.option("formData").predecessor
			                });
		                }
		            })
	        })
			
			dataSourceValores = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
                byKey: function(args) {
                    return $.getJSON(urlPreparacao,{
	                    method	:"GetValores",
	                    codigo	: args
	                });
                },
	            load: function(args) {
	                    return $.getJSON(urlPreparacao,{
		                    method	:"GetValores",
                        	skip	:args.skip,
                        	take	:args.take,
                        	searchValue:args.searchValue,
		                });
	                }
	            })
	        })		
			dataSourceImagens = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            load: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetImagens",
		                });
		            }
		        })
			})

			dataSourceImagemArea = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            loadMode: "raw",
		            load: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetImagemArea",
		                	codImagem : formGeral.option("formData").imagem
		                });
		            }
		        })
			})

	        	
			dataSourceExames = new DevExpress.data.DataSource({
	            store: new DevExpress.data.CustomStore({
		            byKey: function(args) {
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetExames",
		                    codigo	: args
		                });
		            },
		            load: function(args) {
			            tipo = formGeral.option("formData").tipo
			            tipoExame = 1
			            if (tipo==12) {
				            tipoExame = 3
			            }
		                return $.getJSON(urlPreparacao,{
		                    method	:"GetExames",
		                	skip	:args.skip,
		                	take	:args.take,
		                	searchValue:args.searchValue,
		                	tipo	: tipoExame,
		                	filter	: JSON.stringify(args.filter)
		                });
		            }
		        })
			})
			formGeral = $("#geral").dxForm({
				disabled	: true,
				activeStateEnabled:true,
				scrollingEnabled	: true,
			    height:function(){
					return window.innerHeight-190
				},
				colCount : 2,
				onFieldDataChanged	: function(obj){
					if (obj.value==undefined) {
						return
					}
					formGeral.beginUpdate()
					if (obj.dataField == "tipoReferencia"){
						if (obj.value=="2"){
							formGeral.itemOption("validacao.camposReferencia", "visible", true);
							formGeral.itemOption("validacao.numericoReferencia", "visible", false);
						}else{
							formGeral.itemOption("validacao.camposReferencia", "visible", false);
							formGeral.itemOption("validacao.numericoReferencia", "visible", true);
						}
					}
					if (obj.dataField == "composicao"){
						if (obj.value=="4"||obj.value=="7"||obj.value=="9"){
							formGeral.itemOption("valores.rotuloText", "visible", true);  
						}else{
							formGeral.itemOption("valores.rotuloText", "visible", false);  
						}
					}
					if (obj.dataField == "tipo"){
						formGeral.itemOption("icone","visible",false)
						if (obj.value==1||obj.value==15||obj.value==18){
							formGeral.itemOption("respPadrao","visible",false)
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false); 
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);  
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);
							formGeral.itemOption("alertas", "visible", false)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("icone","visible",true)
						}else if (obj.value==4){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false);  
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("textos", "visible", true);
							formGeral.itemOption("numericos", "visible", false) 
							formGeral.itemOption("alertas", "visible", false) 
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==5||obj.value==12){
							formGeral.itemOption("validacao", "visible", true);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", true);  
							formGeral.itemOption("imagem", "visible", false);  
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("nome", "visible", false);  
							formGeral.itemOption("valores", "visible", true);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan", 1);  
							formGeral.itemOption("unidadeExibicao", "visible", true);
							formGeral.itemOption("numericos", "visible", false) 
							formGeral.itemOption("alertas", "visible", false) 
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==3){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false);
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores","visible", false);
							formGeral.itemOption("nome", "colSpan", 1);  
							formGeral.itemOption("exame", "colSpan", 2);  
							formGeral.itemOption("unidadeExibicao", "visible", true);
							formGeral.itemOption("numericos", "visible", true);
							formGeral.itemOption("alertas", "visible", true)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==7){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", true);  
							formGeral.itemOption("imagemArea", "visible", true);  
							formGeral.itemOption("nome", "visible", false);  
							formGeral.itemOption("valores","visible", false);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);  
							formGeral.itemOption("alertas", "visible", false);
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",false)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==9){
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false);  
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores","visible", false);
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);  
							formGeral.itemOption("alertas", "visible", false) 
							formGeral.itemOption("opcoes", "visible", true) 
							formGeral.itemOption("grupo","visible",true)
							formGeral.itemOption("respPadrao","visible",false)
						}else if (obj.value==11){
							formGeral.itemOption("respPadrao","visible",true)
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false); 
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);  
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);
							formGeral.itemOption("alertas", "visible", false)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
						}else{
							formGeral.itemOption("respPadrao","visible",false)
							formGeral.itemOption("validacao", "visible", false);  
							formGeral.itemOption("textos", "visible", false);
							formGeral.itemOption("exame", "visible", false);  
							formGeral.itemOption("imagem", "visible", false); 
							formGeral.itemOption("imagemArea", "visible", false);  
							formGeral.itemOption("nome", "visible", true);  
							formGeral.itemOption("valores", "visible", false);  
							formGeral.itemOption("nome", "colSpan", 2);  
							formGeral.itemOption("exame", "colSpan",2);  
							formGeral.itemOption("unidadeExibicao", "visible", false);
							formGeral.itemOption("numericos", "visible", false);
							formGeral.itemOption("alertas", "visible", false)   
							formGeral.itemOption("opcoes", "visible", false) 
							formGeral.itemOption("grupo","visible",true)
						}				
					}
					if (obj.dataField == "composicao"){
						if (obj.value==1||obj.value==2){
							formGeral.itemOption("numericos", "visible", true) 
							formGeral.itemOption("alertas", "visible", true) 
						}else{
							formGeral.itemOption("numericos", "visible", false) 
							formGeral.itemOption("alertas", "visible", false) 
						}				
					}
					formGeral.endUpdate()
					//formGeral.repaint()
				},
		        items: [{
			        colSpan 		: 2,
					colCount		: 4,
					itemType		: "group",
					items: [{
			            dataField	: "id",
	                    label		: {
							text	: "Código"
						},
			            colSpan		: 1,
			            editorType: "dxDropDownBox",
			            editorOptions: {
			            	placeholder	: "+",
	        		        valueExpr	: "Codigo", 
							displayExpr	: "Descricao",
							dataSource	: makeAsyncDataSourceID(),
	                        onValueChanged: function(e){
		                        codigoSequencia = e.value
		                        if (codigoSequencia!=""){
				                    $.getJSON(urlPreparacao,{
					                    method	:"GetWorkFlows",
					                    cid		: formulario.option("formData").diagnostico,
					                    sequencia	: ""+codigoSequencia
					                },function(retorno){
      			                    	dataSourcePredecessor.reload()
						                formGeral.option("formData",retorno[0].dxForm)
						            });
		                        }
		                    },
							contentTemplate: function(e){
					            var value = e.component.option("value"),
					                $treeView = $("<div>").dxTreeView({
					                    dataSource: e.component.option("dataSource"),
					                    dataStructure: "plain",
					                    keyExpr: "Codigo",
					                    parentIdExpr: "categoryId",
					                    selectionMode: "single",
					                    displayExpr: "Descricao",
					                    selectByClick: true,
					                    onContentReady: function(args){
					                        syncTreeViewSelection(args.component, value);
					                    },
					                    selectNodesRecursive: false,
					                    onItemSelectionChanged: function(args){
					                        var nodes = args.component.getNodes(),
					                            value = getSelectedItemsKeys(nodes);
					                        e.component.option("value", value);
					                    }
					                });
					            
					            treeView1 = $treeView.dxTreeView("instance");
					            
					            e.component.on("valueChanged", function(args){
					                syncTreeViewSelection(treeView1, args.value);
					            });
					            return $treeView;
					        }							
			            }
					},{
			            dataField: "predecessor",
	                    label		: {
							text	: "Grupo Predecessor"
						},
	                    editorType: "dxDropDownBox",
	                    colSpan		: 2,
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							showClearButton: true,
							dataSource: makeAsyncDataSourcePredecessor(),
							contentTemplate: function(e){
					            var value = e.component.option("value"),
					                $treeView = $("<div>").dxTreeView({
					                    dataSource: e.component.option("dataSource"),
					                    dataStructure: "plain",
					                    keyExpr: "Codigo",
					                    parentIdExpr: "categoryId",
					                    selectionMode: "single",
					                    displayExpr: "Descricao",
					                    selectByClick: true,
					                    onContentReady: function(args){
					                        syncTreeViewSelection(args.component, value);
					                    },
					                    selectNodesRecursive: false,
					                    onItemSelectionChanged: function(args){
					                        var nodes = args.component.getNodes(),
					                            value = getSelectedItemsKeys(nodes);
					                        e.component.option("value", value);
					                    }
					                });
					            
					            treeView2 = $treeView.dxTreeView("instance");
					            
					            e.component.on("valueChanged", function(args){
					                syncTreeViewSelection(treeView2, args.value);
					            });
					            
					            return $treeView;
					        }							
			            },
					},{
			            dataField: "opcaoGrupo",
	                    label		: {
							text	: "Opção no Grupo"
						},
						visible		: false,
	                    editorType: "dxSelectBox",
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceOpcaoGrupo
			            },
					},{
			            dataField: "sequ",
	                    label		: {
							text	: "Sequência na Tela"
						},
			            editorType	: "dxNumberBox"
			        },{
			            dataField	: "tipo",
	                    label		: {
							text	: "Tipo"
						},
	                    editorType	: "dxSelectBox",
						validationRules: [{
		                    type: "required"
		                }],				            
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: new DevExpress.data.DataSource({
					            store: new DevExpress.data.CustomStore({
						            loadMode: "raw",
						            load: function(args) {
					                    return $.getJSON(urlPreparacao,{
						                    method	:"GetTipos",
				                        	usuario	: YBED,
						                });
					                }
					            })
					        })
						}
			        },{
			            dataField	: "nome",
	                    label		: {
							text	: "Nome"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                			            
			            colSpan		: 2
					},{
			            dataField	: "exame",
	                    label		: {
							text	: "Exame"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                visible		: false,
			            colSpan		: 2,
	                    editorType	: "dxTagBox",
						editorOptions: {
	        		        valueExpr: "CodigodoExame", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceExames,
						
						}
					},{
			            dataField	: "respPadrao",
			            visible		: false,
		                label		: {
							text	: "Resposta Padrão"
						},
		                editorType	: "dxSelectBox",
		                editorOptions:{
	        		        valueExpr	: "codigo", 
							displayExpr	: "descricao",
							searchEnabled: false,
	  						items: [{
								"codigo":"",
								"descricao":"Sem Resposta Padrão"
							},{
								"codigo":"1",
								"descricao":"Sim"
							},{
								"codigo":"0",
								"descricao":"Não"
							}]
		                }
					},{
			            dataField	: "unidadeExibicao",
			            visible		: false,
		                label		: {
							text	: "Unidade de Exibição"
						},
		                editorType	: "dxTextBox",
					},{
			            dataField	: "grupo",
	                    label		: {
							text	: "Agrupamento"
						},
			            colSpan		: 2,
	                    editorType	: "dxTextBox"
					},{
			            dataField	: "imagem",
	                    label		: {
							text	: "Imagem"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                visible		: false,
			            colSpan		: 1,
	                    editorType	: "dxSelectBox",
						editorOptions: {
							onValueChanged: function(e){
								dataSourceImagemArea.reload()
							},
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceImagens,
						
						}
					},{
			            dataField	: "imagemArea",
	                    label		: {
							text	: "Área da Imagem"
						},
						validationRules: [{
		                    type: "required"
		                }],	
		                visible		: false,
			            colSpan		: 2,
	                    editorType	: "dxSelectBox",
						editorOptions: {
	        		        valueExpr: "Codigo", 
							displayExpr: "Descricao",
							searchEnabled: true,
							dataSource: dataSourceImagemArea,
						
						}
					}
		        ]
		    },{
			    colSpan 	: 2,
			    colCount	: 3,
				itemType	: "group",
                name		: "valores",
                caption		: "Composição de Valores na Tela",
                visible		: false,
                items: [{
		            dataField	: "composicao",
                    label		: {
						text	: "Composição"
					},
					validationRules: [{
	                    type: "required"
	                }],	
	                editorType	: "dxSelectBox",
					editorOptions: {
	    		        valueExpr: "Codigo", 
						displayExpr: "Descricao",
						searchEnabled: true,
						dataSource: dataSourceValores
					}
				},{
		            dataField	: "rotuloText",
		            visible		: false,
                    label		: {
						text	: "Rótulo do Campo Texto"
					},
                    editorType	: "dxTextBox",
				}]
			},{
				colCount	: 3,
				itemType	: "group",
                name		: "numericos",
                caption		: "Formatação do campo 'Número'",
                visible		: false,
				items: [{
		            dataField	: "menorPermitido",
                    label		: {
						text	: "Menor Valor"
					},
                    editorType	: "dxNumberBox",
				},{
		            dataField	: "maiorPermitido",
                    label		: {
						text	: "Maior Valor"
					},
                    editorType	: "dxNumberBox",
				},{
		            dataField	: "casasDecimais",
                    label		: {
						text	: "Casas Decimais"
					},
                    editorType	: "dxNumberBox",
				}],
			},{
				colCount	: 2,
				itemType	: "group",
                name		: "alertas",
                caption		: "Valores Númericos de Alerta para o Diagnóstico",
                visible		: false,
				items: [{
		            dataField	: "ResultadoMenorQue",
                    label		: {
						text	: "Alertar para Valores Menores Que"
					},
                    editorType	: "dxNumberBox"
				},{
		            dataField	: "ResultadoMaiorQue",
                    label		: {
						text	: "Alertar para Valores Maiores Que"
					},
                    editorType	: "dxNumberBox"
				}],
			},{
				colCount	: 2,
				itemType	: "group",
                name		: "textos",
                caption		: "Formatação do Campo 'Texto'",
                visible		: false,
				items: [{
		            dataField	: "maximoDeCaracteres",
                    label		: {
						text	: "Máximo de Caracteres"
					},
                    editorType	: "dxNumberBox",
				},{
		            dataField	: "alturaDoCampo",
                    label		: {
						text	: "Altura do Campo"
					},
                    editorType	: "dxNumberBox",
				}],
			},{
				colSpan		: 2,
				colCount	: 10,
				itemType	: "group",
                name		: "opcoes",
                caption		: "Opções Possíveis",
                visible		: false,
				items: [{
					colSpan		: 9,
		            dataField	: "opcoes",
                    label		: {
						text	: "Opções (Separar por '|')"
					},
                    editorType	: "dxTextBox",
				},{
		            dataField	: "permiteSelecionarMaisQueUm",
                    label		: {
						text	: "Permitir Seleção Multipla?"
					},
                    editorType	: "dxCheckBox",
				}],
			},{
				colSpan		: 2,
                name		: "icone",
                itemType	: "group",
                visible		: false,
                items:[{
		            dataField	: "icone",
	                label		: {
						text	: "Ícone"
					}
                }]
			},{
				colSpan		: 2,
				colCount	: 3,
				itemType	: "group",
                name		: "validacao",
                caption		: "Validações do Campo",
                visible		: false,
				items: [{
					colSpan		: 3,
		            dataField	: "legendaCondicao",
                    label		: {
						text	: "Legenda"
					}
				},{
		            dataField	: "valorCondicao",
                    label		: {
						text	: "Valor deve Ser"
					},
                    editorType	: "dxSelectBox",
					editorOptions: {
        		        valueExpr	: "codigo", 
						displayExpr	: "descricao",
						searchEnabled: false,
						items: [{
							"codigo":">",
							"descricao":"> (Maior que)"
						},{
							"codigo":"<",
							"descricao":"< (Menor que)"
						},{
							"codigo":"=",
							"descricao":"= (Igual a)"
						},{
							"codigo":"<>",
							"descricao":"<> (Diferente de)"
						}],
					}
				},{
		            dataField	: "tipoReferencia",
                    label		: {
						text	: "Tipo do Campo de Referência"
					},
                    editorType	: "dxSelectBox",
					editorOptions: {
        		        valueExpr	: "codigo", 
						displayExpr	: "descricao",
						searchEnabled: true,
						items: [{
							"codigo":"1",
							"descricao":"Numérico"
						},{
							"codigo":"2",
							"descricao":"Campo de Workflow"
						}],
						value	: "1"

					},
				},{
		            dataField	: "numericoReferencia",
		            visible		: true,
                    label		: {
						text	: "Valor de Referência"
					}
				},{
		            dataField	: "camposReferencia",
		            visible		: false,
                    label		: {
						text	: "Campos"
					},
		            editorType: "dxTagBox",
		            editorOptions: {
		            	placeholder	: "+",
        		        valueExpr	: "Codigo", 
						displayExpr	: "Descricao",
						searchEnabled: true,
						dataSource	: dataSourceIDsValidacao,
		            }
				}],
			}]
			}).dxForm("instance")
		}

   var makeAsyncDataSourceID = function(){
        return new DevExpress.data.CustomStore({
	        loadMode: "raw",
	        key: "Codigo",
	        load: function(args) {
                return $.getJSON(urlPreparacao,{
                    method	:"GetWorkFlows",
                	cid		: formulario.option("formData").diagnostico,
                });
            }
        })
	};

   var makeAsyncDataSourcePredecessor = function(){
        return new DevExpress.data.CustomStore({
            loadMode: "raw",
            key: "Codigo",
            load: function(args) {
                return $.getJSON(urlPreparacao,{
                    method	:"GetPredecessor",
                	usuario	: YBED,
                	cid		: formulario.option("formData").diagnostico,
                	idAtual: formGeral.option("formData").id
                });
            }
       })
	};

	    var syncTreeViewSelection = function(treeView, value){
	        if (!value) {
	            treeView.unselectAll();
	        } else {
	            treeView.selectItem(value);
	        }
	    };

	    var getSelectedItemsKeys = function(items) {
	        var result = [];
	        items.forEach(function(item) {
	            if(item.selected) {
	                result.push(item.key);
	            }
	            if(item.items.length) {
	                result = result.concat(getSelectedItemsKeys(item.items));
	            }
	        });
	        return result;
	    };
    
		
		function salvarDados(){
			if (!formulario.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
			if (!formGeral.validate().isValid){
				DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
				return
			}
		  	dadosCabecalho = formulario.option("formData")
		  	dadosGeral = formGeral.option("formData")
            $.getJSON(urlPreparacao,{
                method		:"salvaDados",
                formulario	: JSON.stringify(dadosCabecalho),
                geral		: JSON.stringify(dadosGeral),
            },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	            if (retorno.status==1){
		            dataSourceImagens.reload()
		            dataSourceImagemArea.reload()
		            dataSourceExames.pageIndex(0)
		            dataSourceExames.reload()
		            makeAsyncDataSourcePredecessor()
		            makeAsyncDataSourceID()
		            formGeral.updateData("id","")
		            formGeral.updateData("sequ","")
		            formGeral.updateData("tipo","")
		            formGeral.updateData("nome","")
	            }

	        });
			
		}

		function removerDados(){
		  	cid = formulario.option("formData").diagnostico
		  	id = formGeral.option("formData").id
		  	if (cid==""||id==""){
			  	DevExpress.ui.notify("Informe o CID e o ID para remoção", "warning", 4000);
		  	}
            $.getJSON(urlPreparacao,{
                method		:"removeDados",
                cid			: cid,
                id			: id,
            },function(retorno){
		        DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
	            if (retorno.status==1){
		            dataSourceImagens.reload()
		            dataSourceImagemArea.reload()
		            dataSourceExames.pageIndex(0)
		            dataSourceExames.reload()
		            dataSourceIDs.reload()
		            dataSourcePredecessor.reload()
		            formGeral.option("formData",{})
	            }

	        });
			
		}

		

		
        DevExpress.localization.locale("pt");

        $(document).ready(function () {
            prepareSearchInputs();
            carregaGeral()
            formulario.updateData("diagnostico","C91.1")
        });


    </script>
</body>
</html>
