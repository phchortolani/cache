<!DOCTYPE html> 
<html xmlns="http://www.w3.org/1999/xhtml" lang="pt-br">
	<script language="Cache" runat="server">
		do ^WWWVAR

		set YUSER 		= $get(%request.Data("YUSER", 1))
		set YBED 			= $get(%request.Data("YBED", 1))
		set YM 				= $get(%request.Data("YM", 1))
		set YLOCATION = $get(%request.Data("YLOCATION", 1))

		set PortCache = $get(%request.CgiEnvs("SERVER_PORT"))
		set PageURL 	= $get(%request.CgiEnvs("CACHE_URL"))
		set PageName 	= %request.PageName
		set app 			= %request.Application
		set host 			= %request.CgiEnvs("HTTP_HOST")
		set url				= "http://"_host_app

		set URLPreparacao = "VAR.CSP.VARCadProcedimento.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLSearch			= "User.Search.PesquisasJson.cls?YM="_YM_"&YBED="_YBED_"&YUSER="_YUSER_"&EP=1"
		set URLLogin 			= "COMLogin.cls"
		set URLLink 			= "www.cls"

		set nomeLocal 		= YLOCATION_" - "_$$SQLGetLocationName^VARSQL(YLOCATION)

		//Verifica se a sessão
		set status = $$VerifySession^VARCSPUtils(YBED, YUSER, url)
		Do ##Class(VAR.CSP.VARConfiguracaoAgendamento).InicializaConfiguracao(YBED)
	</script>

	<head>

		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
		<title>Cadastro de Procedimento</title>

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/bootstrap/css/bootstrap.min.css">
		<!-- Font Awesome -->
		<link href=" #(YGIF)#global/plugins/fontawesome/5.4.1/css/all.css" rel="stylesheet" type="text/css">

		<!-- Custom Elements -->
		<link href=" #(YGIF)#global/css/components-rounded.css" rel="stylesheet" id="style_components" type="text/css" />
		<link href=" #(YGIF)#global/css/plugins.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/layout.css" rel="stylesheet" type="text/css" />
		<link href=" #(YGIF)#global/css/themes/light.css" rel="stylesheet" type="text/css" id="style_color" />
		<link href=" #(YGIF)#global/css/custom.min.css" rel="stylesheet" type="text/css" />

		<!-- Fonts Padrão IPP -->
		<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800">

		<!-- DevExtreme themes -->
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.common.css" />
		<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />
		<!--<link rel="stylesheet" type="text/css" href=" #(YGIF)#global/plugins/extreme19.2.4/css/dx.light.compact.css" />-->


    <link rel="stylesheet" type="text/css" href=" #(YGIF)#global/themes/css/alphalinc.css" id="style_color" />
	</head>
	<style>
	.selected-container {
		padding: 20px;
		margin-left: 20px;
		background-color: rgba(191, 191, 191, 0.15);
		font-size: 115%;
		font-weight: bold;
	}
  .first-group {
		background-color: #ffffff;
  }
  .second-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 3px !important;
		margin-bottom: 3px !important;
		margin-left: 3px !important;
		margin-right: 0px !important;
		background-color: rgba(1, 178, 169, 0.15);
		border-top-right-radius: 5px;
		border-top-left-radius: 5px;
		border-top: 1px solid #E0E0E0;
		border-left: 1px solid #E0E0E0;
		border-right: 1px solid #E0E0E0;
		border-bottom: 1px solid #E0E0E0;
  }
  .third-group{
		padding-top: 0px !important;
		padding-bottom: 0px !important;
		padding-left: 0px !important;
		padding-right: 0px !important;
		margin-top: 0px !important;
		margin-bottom: 0px !important;
		margin-left: 0px !important;
		margin-right: 0px !important;
		background-color: #ffffff;
		border: 0px solid #E0E0E0;
  }
  .second-group .dx-form-group-caption {
		border: 0px solid red;
		margin-left: 3px !important;
		padding-top: 3px !important;
  }	
  .second-group .dx-form-group-content {
		background-color: #ffffff;
		color: red; 
		padding-left: 5px !important;
		padding-right: 5px !important;
  }	
	</style>
	<script type="text/javascript">

		var status = '#(status)#';
		var URLLogin = '#(URLLogin)#';
		var ygif = '#(YGIF)#'

		if (status == 0) {
			alert('Usuário não está logado ou a sessão expirou.')
			window.location.replace(URLLogin)
		}

	</script>

	<body>
		<div id="toolbar"></div>
		<div id="divForm"></div>
		<div id="divAddExecutor"></div>		
		<!-- REQUIRED JS SCRIPTS -->
		<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
		<script src=" #(YGIF)#global/plugins/extreme19.2.4/js/jquery.min.js"></script>

		<!-- JSZip library -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/jszip.min.js"></script>

		<!-- A DevExtreme library -->
		<!--<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/dx.all.js"></script>-->
		<script src=" #(YGIF)#global/plugins/extremeQuill/dx-quill.min.js"></script>
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extremeQuill/dx.all.js"></script>		

		<!-- DevExtreme-Intl module -->
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme19.2.4/js/localization/dx.messages.pt.js"></script>

		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/exceljs.min.js"></script>
		<script type="text/javascript" src=" #(YGIF)#global/plugins/extreme20.2.4/Lib/js/FileSaver.min.js"></script>

		<!-- Include all compiled plugins (below), or include individual files as needed -->
		<script src=" #(YGIF)#global/plugins/bootstrap-3.3.7/js/bootstrap.min.js"></script>

		<!-- Tag para implantação da funcionalidade de importação de Arquivos --> 
		<VARImportacaoArquivo>

		<!--Definições globais e criação de funcionalidades encapsuladas-->
		<script type="text/javascript">
			//Deixando variáveis disponíveis no cliente
			var urlPreparacao = '#(URLPreparacao)#';
			var urlSearch			= '#(URLSearch)#';
			var urlLink 			= '#(URLLink)#';
			var YBED 					= '#(YBED)#';
			var YUSER 				= '#(YUSER)#';
			var YLOCATION 		= '#(YLOCATION)#';
			var nomeLocal 		= '#(nomeLocal)#';

			DevExpress.config({decimalSeparator: ",",thousandsSeparator: "."});
			DevExpress.localization.locale("pt");

			var widthPreRequisito = (window.innerWidth/2)-53;

			objToolBar = $("#toolbar").dxToolbar({
				items: [{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "save",
						hint	: "Salvar os Dados",
						type	: "success",
						stylingMode : "contained",
						elementAttr: {
				      id: "botaoSalvar"  
		        },
						onClick	: function(){
							var pCodProcedimento = objProcedimento.option("value");
							if (pCodProcedimento == "+") pCodProcedimento = "";
							var flagForm = objForm.validate().isValid; 
							var flagGeral = objGeral.validate().isValid; 
							if (!flagForm || !flagGeral){
								DevExpress.ui.notify("Favor preencher os campos obrigatórios","warning");
								return;
							}
							$.getJSON(urlPreparacao,{
								method					: "SalvarDados",
								pCodProcedimento: pCodProcedimento,
								pSituacao 			: objForm.getEditor("situacao").option("value"),
								pObjGeral 			: JSON.stringify(objGeral.option("formData")),
								pPreRequisito		: ""
							},function(objRetorno){
								if (objRetorno.status==1){
									dataSourceProcedimento.reload();
									objProcedimento.option("value", objRetorno.codProcedimento);
									carregarDados(objRetorno.codProcedimento) 
									DevExpress.ui.notify("Dados Salvos com Sucesso!","success");
								}else{
									DevExpress.ui.notify("Erro: "+objRetorno.status,"error");
								}
							});
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fas fa-file-import",
						hint	: "Importar Cadastro de Procedimentos",
						type	: "default",
						stylingMode : "contained",
						onClick	: function(){
							if ($("#botaoSalvar").dxButton("instance").option("disabled") == false) {
								importarArquivo('024', "dataSourceProcedimento.reload();");
							}else{
								importarArquivo('043', "");
							}
						}
					}
				},{
					location: "after",
					widget	: "dxButton",
					options	: {
						icon	: "fa fa-eraser",
						hint	: "Limpar os Campos",
						type	: "default",
						elementAttr: {
				      id: "botaoLimpar"  
		        },
						stylingMode : "contained",
						onClick	: function(){
							objProcedimento.option("value", "");
						}
					}
				}]
			}).dxToolbar("instance")
		
			objForm = $("#divForm").dxForm({
				activeStateEnabled:true,
				minColWidth: 50,
				screenByWidth: function(width) { return "lg"; },
				screenByWidth: function(width) { return "lg"; },
				height:function(){ return window.innerHeight - 60 },
				alignItemLabels:false,
				alignItemLabelsInAllGroups:false,
				items: [{
					colCount: 10,
					itemType: "group",
					cssClass: "first-group",
					items: [{
						colSpan: 7,
						dataField: "procedimento",
          	label		: {
							text	: "Procedimento"
						},  
						template	: function (data, itemElement) {
							itemElement.append("<div id='divProcedimento'/>")
						},
					},{
						colSpan: 2,
						dataField: "situacao",
						label		: {
							text:"Situação",
							alignment: "right"
						},
						editorType: "dxSelectBox",
						validationRules: [{
							type: "required"
						}],
						editorOptions: {
							dataSource: new DevExpress.data.DataSource({
          			store: new DevExpress.data.CustomStore({
              		loadMode: "raw",   
              		load: function() {
                  	return $.getJSON(urlSearch,{method:"GetINItemStatus"});
              		}
          			})
      				}),
							searchEnabled: true,
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
						}
					},{},{
						colSpan: 10,
						itemType: "tabbed",
						name 	: "abas",
						tabPanelOptions: {
							deferRendering: false,
							animationEnabled: false,
							showNavButtons:true,
							selectedIndex: 0,
							onSelectionChanged: function(e){
								if (e.addedItems[0].title == "Geral"){
									$("#botaoSalvar").dxButton("instance").option("disabled", false);
									$("#botaoLimpar").dxButton("instance").option("disabled", false);
								}else{
									$("#botaoSalvar").dxButton("instance").option("disabled", true);
									$("#botaoLimpar").dxButton("instance").option("disabled", true);
								}
							}
						},	
							height:'10px',
							tabs:[{
								title	: "Geral",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divGeral'>")
									}
								}],
							},{
								title	: " Manual de Informações Sobre Exames ",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divManual'>")
									}
								}]
							},{
								title	: "Auditoria",
								items: [{
									template	: function (data, itemElement) {
										itemElement.append("<div id='divControle'>")
									}
								}]
							}]
						}
					]
				}]
			}).dxForm("instance");			
		
			dataSourceProcedimento = new DevExpress.data.DataSource({
					store: new DevExpress.data.CustomStore({
					byKey: function(args) {
						return $.getJSON(urlSearch,{
							method			:	"GetINART",
							pCodProduto	: args
						});
					},
					load: function(args) {
						return $.getJSON(urlSearch,{
							method				:	"GetINART",
							pSkip					:	args.skip,
							pTake					:	args.take,
							pSearchValue	:	args.searchValue,
							pAlias				: 1,
							pItemPedido		: 2
						});
					}
				})
			});
		
			objProcedimento = $("#divProcedimento").dxSelectBox({
				dataSource: dataSourceProcedimento,
				placeholder: "+",
				searchEnabled: true,
				valueExpr: "CodProduto", 
				displayExpr: "DescProduto",
				showClearButton: true,
				onValueChanged: function(e) {
					if (!e.value) {
						objGeral.resetValues();
						objControle.resetValues();
						objForm.getEditor("situacao").option("value", "");
						objItensUtilizados.option("disabled", true);
						objAlias.option("disabled", true);
						objManual.option("disabled", true);
						dataSourceItensUtilizadados.reload();
						dataSourceAlias.reload();
						objManualExecutor.option("value","")
						dataSourceExecutor.reload();
					}else{
						carregarDados(e.value);
						objManualExecutor.option("value","")
						dataSourceExecutor.reload();
					}
				}
			}).dxSelectBox("instance");

			dataSourceCentroCusto = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw",
					load: function () {
						return $.getJSON(urlSearch, { method: "GetCentroCusto"});
					}
				})
			});
			
			objGeral = $("#divGeral").dxForm({
				//disabled: true,
				scrollingEnabled	: true,
				showColonAfterLabel	: false,
				height	:function() { return window.innerHeight - 150; },
				screenByWidth: function(width) { return "lg"; },
				colCount: 2,
				items	: [{
					itemType: "group",
					items: [{
						itemType: "group",
						cssClass: "second-group",
						colCount: 2,
						items: [{
							colSpan: 2, template: function (data, itemElement) { itemElement.append("<div style='height:5px;border:0px solid red;text-align:right'>")}
						},{
							colSpan: 2, 
							dataField: "descricaoItemPedido",
							label		: {
								text:"Descrição Item de Pedido:",
								alignment: "right"
							},
							validationRules: [{
								type: "required"
							}],
						},{
							colSpan: 2, 
							dataField: "descricaoResumida",
							validationRules: [{
								type: "required"
							}],
							label		: {
								text:"Descrição Resumida:",
								alignment: "right"
							}
						},{
							colSpan: 2,
							dataField: "descricaoCompleta",
							validationRules: [{
								type: "required"
							}],
							editorType	: "dxTextArea",
							label		: {
								text:"Descrição Completa:",
								alignment: "right"
							}
						},{
							colSpan: 2,
							dataField: "grupo",
							editorType	: "dxSelectBox",
							label		: {
								text:"Grupo/Subgrupo:",
								alignment: "right"
							},
							validationRules: [{
								type: "required"
							}],
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetINItemGroup"});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}
						},{
							dataField: "jejum",
							editorType: "dxSelectBox",
							label: { text:"Necessita de Jejum:", alignment: "right" },
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetWWW100",pDescParametro:"JA/NEIN"});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}
						},{
							dataField: "requerAgendamento",
							editorType: "dxSelectBox",
							label: { text:"Requer Agendamento:", alignment: "right" },
							editorOptions: {
								dataSource: new DevExpress.data.DataSource({
	          			store: new DevExpress.data.CustomStore({
	              		loadMode: "raw",   
	              		load: function() {
	                  	return $.getJSON(urlSearch,{method:"GetWWW100",pDescParametro:"JA/NEIN"});
	              		}
	          			})
	      				}),
								searchEnabled: true,
								valueExpr: "Codigo", 
								displayExpr: "Descricao",
							}
						},{
							dataField: "valor",
							editorType: "dxNumberBox",
							label: { text:"Valor R$:", alignment: "right" },
							editorOptions: {
								format: "#,##0.00",
							}
						},{
							dataField	: "centroCusto",
							editorType	: "dxSelectBox",
							label	: {
								text:"Centro de Custo:",
								alignment: "right"
							},
							editorOptions: {
								dataSource: dataSourceCentroCusto,
								valueExpr: "Codigo",
								displayExpr: "Descricao",
								value: "",
								buttons: [{
									location:"after",
									name: "addPRocedimento",
									options:{
										icon: "fas fa-file-import",
										hint: "Importar Cadastro de Centro de Custo",
										type: "default",
										stylingMode : "contained",
										onClick	: function(){
											importarArquivo('020', "dataSourceCentroCusto.reload();");
										}
									}
								}]								
							}							
						},{
							colSpan: 2,
							dataField: "preRequisitoResumo",
							editorType: "dxTextArea",
							label: { text:"Resumo do Pré Requisito:", alignment: "right" },
							editorOptions: { height: 80 }
						},{
							colSpan: 2, template: function (data, itemElement) { itemElement.append("<div style='height:2px;border:0px solid red;text-align:right'>")}
						}]
					},{
						itemType: "group",
						cssClass: "second-group",
						caption: "Aliás",
						items: [{
							template	: function (data, itemElement) {
								itemElement.append("<div id='divAlias'>")
							}
						}]
					}]	
				},{
					itemType: "group",
					cssClass: "second-group",
					caption: "Itens Utilizados",
					items: [{
						template	: function (data, itemElement) {
							itemElement.append("<div id='divItensUtilizados'>")
						}
					}]
				}]
			}).dxForm("instance");

			////////////////////////////////
			dataSourceAlias = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "sequencia",
		  		loadMode: "raw",   
		  		load: function() {
			  		var pCodProcedimento = objProcedimento.option("value");
			  		if (pCodProcedimento == null) { var pCodProcedimento = ""; }	
		      	return $.getJSON(urlPreparacao,{method:"GetAlias",pCodProcedimento:pCodProcedimento});
		  		},
		  		insert: function (values) {
			  		var pCodProcedimento = objProcedimento.option("value");
		      	if (pCodProcedimento == "" || pCodProcedimento == "+") {
		      		return;
		      	}
		        objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARCadProcedimento.ArmAlias(pCodProcedimento, objDados, YBED))#;
		    	},
					remove: function (key) {
			  		var pCodProcedimento = objProcedimento.option("value");
		      	if (pCodProcedimento == "" || pCodProcedimento == "+") {
		      		return;
		      	}
						var retorno = #server(VAR.CSP.VARCadProcedimento.ExcAlias(pCodProcedimento, key, YBED))#;
		    	}					
				})
			});

			objAlias = $("#divAlias").dxDataGrid({
				dataSource: dataSourceAlias,
				disabled: true,
				columns: [
					{	dataField: "sinonimo", caption: "Sinônimo", alignment: "left"},
				],
				columnChooser: { enabled: false, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: false, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: false },
				grouping: { autoExpandAll: false },
				groupPanel: { visible: false, allowColumnDragging: false },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: 150,
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: false },
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fas fa-file-import",
							hint: "Importar Cadastro de Aliás",
							onClick: function (e) {
								importarArquivo('042', "dataSourceAlias.reload();");
							}
						}
					})
				}, 
			}).dxDataGrid("instance");				
			
			////////////////////////////////

			dataSourceExecutor = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
					loadMode: "raw", 
					load: function(args) {
						return $.getJSON(urlPreparacao,{
							method:"GetExecutor",
							codExame: objProcedimento.option("value"),
						});
					}
				})
			});
			
			objManual = $("#divManual").dxForm({
				disabled: true,
				activeStateEnabled:true,
				formData: {},
				scrollingEnabled	: true,
				height	:function() { return window.innerHeight - 150;},
				items: [{
					itemType: "group",
					colCount: 8,
					items:[{
						colSpan: 6,
						label: { text:"Executor", alignment: "right" },
						template	: function (data, itemElement) {
							itemElement.append("<div id='divManualExecutor'>")
						}						
					},{
						colSpan: 2,
						dataField	: "manualSituacao",
						label: { text:"Situação", alignment: "right" },
						editorType: "dxSelectBox",			   
						editorOptions: {
							valueExpr: "Codigo", 
							displayExpr: "Descricao",
							dataSource: [{Codigo:"A",Descricao:"Ativo"},{Codigo:"I",Descricao:"Inativo"}],
						},
						validationRules: [{type: "required"}],
					},{
						colSpan: 2,
						dataField	: "manualPreco",
						label: { text:"Preço de Custo", alignment: "right" },
						editorType: "dxNumberBox",
						editorOptions: { format: "#,##0.00"},
						validationRules: [{type: "required"}],
					},{
						colSpan: 2,
						dataField	: "manualTempoResultado",
						label: { text:"Tempo para o Resultado", alignment: "right" },
						editorOptions: { width: 120, mask: "00:00"},
						validationRules: [{type: "required"}],
					},{
						colSpan: 2,
						dataField	: "manualCodExecutor",
						label: { text:"Cód. Item no Executor", alignment: "right" },
					},{
						colSpan: 2,
						dataField	: "manualAtualizacao",
						label: { text:"Ultima Atualização", alignment: "right" },
						editorOptions: { readOnly: true},						
					},{
						colSpan: 4,
						itemType: "group",
						cssClass: "second-group",
						caption: "Dieta",
						items: [{
							template	: function (data, itemElement) {
								itemElement.append("<div id='divManualDieta' style='width: "+widthPreRequisito+"px;'>")
							}
						}]
					},{
						colSpan: 4,
						itemType: "group",
						cssClass: "second-group",
						caption: "Paciente",
						items: [{
							template	: function (data, itemElement) {
								itemElement.append("<div id='divManualPaciente' style='width: "+widthPreRequisito+"px;'>")
							}
						}]
					},{
						colSpan: 4,
						itemType: "group",
						cssClass: "second-group",
						caption: "Coleta",
						items: [{
							template	: function (data, itemElement) {
								itemElement.append("<div id='divManualColeta' style='width: "+widthPreRequisito+"px;'>")
							}
						}]
					},{
						colSpan: 4,
						itemType: "group",
						cssClass: "second-group",
						caption: "Técnica",
						items: [{
							template	: function (data, itemElement) {
								itemElement.append("<div id='divManualTecnica' style='width: "+widthPreRequisito+"px;'>")
							}
						}]
					},{
						colSpan: 8,	
						template	: function (data, itemElement) {
							itemElement.append("<div id='divManualAcao' style='width: 100%;'>")
						}
					}]
				}]
			}).dxForm("instance");

			objManualExecutor = $("#divManualExecutor").dxSelectBox({
				valueExpr: "Codigo", 
				displayExpr: "Descricao",
				searchEnabled: true,
				dataSource: dataSourceExecutor,
	      itemTemplate: function(data) {
	       	conteudo = "<div class='custom-item'><div><b>" + data.Descricao + "</b>"; 
	      	if (data.Situacao != "") {
		      	conteudo += "&nbsp; - <span style='font-size:12px'>Situação: " + data.Situacao + 
	        							"&nbsp; Atualização: " + data.Atualizacao + "</span>";	
	      	}
	      	conteudo += "</div></div>";
	        return conteudo;
	      },
				onValueChanged: function(e) {
					if (!e.value) {
						objManual.getEditor("manualSituacao").option("value","");
						objManual.getEditor("manualPreco").option("value",0);
						objManual.getEditor("manualTempoResultado").option("value","");
						objManual.getEditor("manualCodExecutor").option("value","");
						objManual.getEditor("manualAtualizacao").option("value","");
						objManualDieta.option("value","");
						objManualPaciente.option("value","");
						objManualColeta.option("value","");
						objManualTecnica.option("value","");
						return;
					}
					$.getJSON(urlPreparacao,{method:"RecuperarDadosManual", 
					codExame: objProcedimento.option("value"), codExecutor: e.value},
					function(retorno){
						objManual.getEditor("manualSituacao").option("value",retorno.situacao);
						objManual.getEditor("manualPreco").option("value",retorno.preco);
						objManual.getEditor("manualTempoResultado").option("value",retorno.tempoResultado);
						objManual.getEditor("manualCodExecutor").option("value",retorno.codExecutor);
						objManual.getEditor("manualAtualizacao").option("value",retorno.alteradoEm);
						objManualDieta.option("value",retorno.descricaoDieta);
						objManualPaciente.option("value",retorno.descricaoPaciente);
						objManualColeta.option("value",retorno.descricaoColeta);
						objManualTecnica.option("value",retorno.descricaoTecnica);
					});
				},
				buttons: [{
					name: "btnAddExecutor",
					location: "after",
					options: {
						hint: "Cadastrar Novo Executor",	
						icon: "add",
						type: "normal",
						onClick: function(){
							$("#divAddExecutor").dxPopup("show");	
							$("#formAddExecutor").dxForm("instance").option("formData",[]);
						}
					}
				}],
			}).dxSelectBox("instance");


			$("#divManualAcao").html("<table width='99%'>" +
																	"<tr>" +
																		"<td align='right' style='vertical-align:bottom;'>" + 
																			"<div id='divManualSalvar'/>&nbsp;" +
																			"<div id='divManualLimpar'/>&nbsp;" +
																		"</td>" +
																	"</tr>" +
															"</table>");

			objManualSalvar = $("#divManualSalvar").dxButton({
			  icon	: "save",
			  text	: "Salvar",
			  type	: "success",
			  stylingMode : "contained",
			  onClick	: function(){
					if (objManualExecutor.option("value") == "" || objManualExecutor.option("value") == null) {
						DevExpress.ui.notify("Selecione o executor.", "warning", 4000);
						return;	
					}
					if (!objManual.validate().isValid){
						DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
						return
					}
			  	dados = objManual.option("formData");
	        console.log(dados)
	        $.getJSON(urlPreparacao, {method: "SalvaDadosExecutor", codExame: objProcedimento.option("value"),
	        codExecutor: objManualExecutor.option("value"), dados: JSON.stringify(dados),
	        pTempo: objManual.getEditor("manualTempoResultado").option("text"),
	        pCodExecutor: objManual.getEditor("manualCodExecutor").option("text"),
	        pDieta: objManualDieta.option("value"), pPaciente: objManualPaciente.option("value"), 
	        pColeta: objManualColeta.option("value"), pTecnica: objManualTecnica.option("value")},
	        function(retorno){
	    			DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
					});
			  }
			}).dxButton("instance");

			objManualLimpar = $("#divManualLimpar").dxButton({
			  icon	: "fa fa-eraser",
			  text	: "Limpar",
			  type	: "default",
			  stylingMode : "contained",
			  onClick	: function(){
				  objManualExecutor.option("value","");
					objManual.getEditor("manualSituacao").option("value","");
					objManual.getEditor("manualPreco").option("value",0);
					objManual.getEditor("manualTempoResultado").option("value","");
					objManual.getEditor("manualCodExecutor").option("value","");
					objManual.getEditor("manualAtualizacao").option("value","");
					objManualDieta.option("value","");
					objManualPaciente.option("value","");
					objManualColeta.option("value","");
					objManualTecnica.option("value","");
			  }
			}).dxButton("instance");

			$("#divManualDieta").html("<div id='divManualDietaCampo'></div>")

			objManualDieta = $("#divManualDietaCampo").dxHtmlEditor({
				height: 200,
				width: function() {return widthPreRequisito;},				
				toolbar: {
					items: [
						"undo","redo","separator",
						"bold","italic","underline","separator",
						{formatName: "size", formatValues: ["8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt"]},"separator",
						,"increaseIndent","decreaseIndent","orderedList","bulletList","separator",
						"alignLeft","alignCenter",
					],
					multiline: 1
				}
			}).dxHtmlEditor("instance");

			$("#divManualPaciente").html("<div id='divManualPacienteCampo'></div>")

			objManualPaciente = $("#divManualPacienteCampo").dxHtmlEditor({
				height: 200,
				width: function() { return widthPreRequisito; },				
				toolbar: {
					items: [
						"undo","redo","separator",
						"bold","italic","underline","separator",
						{formatName: "size", formatValues: ["8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt"]},"separator",
						,"increaseIndent","decreaseIndent","orderedList","bulletList","separator",
						"alignLeft","alignCenter",
					],
					multiline: 1
				}
			}).dxHtmlEditor("instance");
			

			$("#divManualColeta").html("<div id='divManualColetaCampo'></div>")

			objManualColeta = $("#divManualColetaCampo").dxHtmlEditor({
				height: 200,
				width: function() {return widthPreRequisito;},				
				toolbar: {
					items: [
						"undo","redo","separator",
						"bold","italic","underline","separator",
						{formatName: "size", formatValues: ["8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt"]},"separator",
						,"increaseIndent","decreaseIndent","orderedList","bulletList","separator",
						"alignLeft","alignCenter",
					],
					multiline: 1
				}
			}).dxHtmlEditor("instance");

			$("#divManualTecnica").html("<div id='divManualTecnicaCampo'></div>")

			objManualTecnica = $("#divManualTecnicaCampo").dxHtmlEditor({
				height: 200,
				width: function() { return widthPreRequisito; },				
				toolbar: {
					items: [
						"undo","redo","separator",
						"bold","italic","underline","separator",
						{formatName: "size", formatValues: ["8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt"]},"separator",
						,"increaseIndent","decreaseIndent","orderedList","bulletList","separator",
						"alignLeft","alignCenter",
					],
					multiline: 1
				}
			}).dxHtmlEditor("instance");

			objControle = $("#divControle").dxForm({
				activeStateEnabled:true,
				formData: {},
				scrollingEnabled	: true,
				height	:function() { return window.innerHeight - 150;},
				items: [{
					itemType: "group",
					colCount: 2,
					items:[{
						dataField	: "criadoPor",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "criadoEm",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "alteradoPor",
						label		: {
							alignment: "right"
						},
						disabled	: true
					},{
						dataField	: "alteradoEm",
						label		: {
							alignment: "right"
						},
						disabled	: true
					}]
				}]
			}).dxForm("instance");

			dataSourceItensUtilizadados = new DevExpress.data.DataSource({
				store: new DevExpress.data.CustomStore({
		  		key: "item",
		  		loadMode: "raw",   
		  		load: function() {
			  		var pCodProcedimento = objProcedimento.option("value");
			  		if (pCodProcedimento == null) {
				  		var pCodProcedimento = "";
			  		}	
		      	return $.getJSON(urlPreparacao,{method:"GetItensUtilizados",pCodProcedimento:pCodProcedimento});
		  		},
		  		insert: function (values) {
			  		var pCodProcedimento = objProcedimento.option("value");
		      	if (pCodProcedimento == "" || pCodProcedimento == "+") {
		      		return;
		      	}
		        objDados = new Array;
						for (var coluna in values) {
							if (values.hasOwnProperty(coluna)) {
								valor = values[coluna];
								objDados.push(coluna+"~"+valor);
							}
						}
						var retorno = #server(VAR.CSP.VARCadProcedimento.ArmItensUtilizados(pCodProcedimento, objDados, YBED))#;
		    	},
					remove: function (key) {
			  		var pCodProcedimento = objProcedimento.option("value");
		      	if (pCodProcedimento == "" || pCodProcedimento == "+") {
		      		return;
		      	}
						var retorno = #server(VAR.CSP.VARCadProcedimento.ExcItensUtilizados(pCodProcedimento, key, YBED))#;
		    	}					
				})
			});

			objItensUtilizados = $("#divItensUtilizados").dxDataGrid({
				dataSource: dataSourceItensUtilizadados,
				disabled: true,
				columns: [
					{	dataField: "itemDesc", caption: "Item", alignment: "center", validationRules: [{ type: "required" }], 
						setCellValue: function (rowData, value) {
			        if (value == "" || value == null) return
			        objLinha = this;
			        var descItem = #server(User.Search.PesquisasJson.GetDescricaoINART(value))#;
							objLinha.defaultSetCellValue(rowData, "("+value+") "+descItem);
							rowData.item = value;	
				  	}
				  },
					{	dataField: "qtde", width: "120px", caption: "Quantidade",  validationRules: [{ type: "required" }], alignment: "center"},
					{	dataField: "criadoPor", caption: "Criado Por", alignment: "center", allowEditing: 0, visible: 0 },
					{	dataField: "criadoEm", caption: "Criado Em", alignment: "center", allowEditing: 0, visible: 0 },
				],
				onEditorPreparing: function(e) {
					if (e.parentType == "dataRow" && (e.dataField == "qtde")) {
						e.editorName = "dxNumberBox"; 
		      }  
					if (e.parentType == "dataRow" && e.dataField == "itemDesc") {
						e.editorName = "dxSelectBox"; 
						e.editorOptions.dataSource = new DevExpress.data.DataSource({
								store: new DevExpress.data.CustomStore({
								byKey: function(args) {
									return $.getJSON(urlSearch,{
										method			:	"GetINART",
										pCodProduto	: args
									});
								},
								load: function(args) {
									return $.getJSON(urlSearch,{
										method				:	"GetINART",
										pSkip					:	args.skip,
										pTake					:	args.take,
										pSearchValue	:	args.searchValue,
										pAlias				: 1,
										pItemPedido		: 2
									});
								}
							})
						});
						e.editorOptions.value = e.row.data.item;
						e.editorOptions.displayExpr = "DescProduto";
						e.editorOptions.valueExpr = "CodProduto";
						e.editorOptions.searchEnabled = true;
						e.editorOptions.onValueChanged = function(arg) {
							e.setValue(arg.value);
						}
					}
				},
				columnChooser: { enabled: true, mode: "dragAndDrop"},
				allowColumnReordering: false,
				editing: { mode: "batch", allowAdding: true, allowUpdating: false, allowDeleting: true, useIcons: true },
				columnAutoWidth: false,
				showColumnLines: true,
				showRowLines: true,
				rowAlternationEnabled: true,
				hoverStateEnabled: true,
				showBorders: true,
				headerFilter: { visible: true },
				grouping: { autoExpandAll: true },
				groupPanel: { visible: false, allowColumnDragging: true },
				columnFixing: { enabled: false },
				filterRow: { visible: false },
				height: 497,
				onToolbarPreparing: function (e) {
					var dataGrid = e.component;
					e.toolbarOptions.items.unshift({
						location: "after",
						widget: "dxButton",
						options: {
							icon: "fas fa-file-import",
							hint: "Importar Cadastro de Itens Utilizados",
							onClick: function (e) {
								importarArquivo('025', "dataSourceItensUtilizadados.reload();");
							}
						}
					})
				},
				export: { enabled: false },
				stateStoring: { enabled: false }, 
				wordWrapEnabled: true,
				searchPanel: { visible: true }, 
			}).dxDataGrid("instance");			
			
			function carregarDados(pCodProcedimento) {
				$.getJSON(urlPreparacao, {	
					method	:	"GetDados",
					pCodProcedimento: pCodProcedimento,
				},function(objRetorno){
					objGeral.option("formData", objRetorno.dadosGeral)
					objControle.option("formData", objRetorno.dadosControle)
					objForm.getEditor("situacao").option("value", objRetorno.situacao);
					objItensUtilizados.option("disabled", false);
					objAlias.option("disabled", false);
					objManualExecutor.option("value",objRetorno.codExecutor);
					objManual.option("disabled", false);
					dataSourceItensUtilizadados.reload();
					dataSourceAlias.reload();
				});
			}	
			
			$("#divAddExecutor").dxPopup({
				visible: false,
				title: "Executor",
				width: 600,
				height:  200,
				position: {
					my: "center",
					at: "center",
					of: window
				},
				dragEnabled: true,
				contentTemplate: function(e) {
					formAddExecutor = $("<div id='formAddExecutor'>").dxForm({
						readOnly: false,
						alignItemLabels: true,
						showColonAfterLabel: true,
						labelLocation: "left",
						colCount: 2,
						items: [
							{ dataField: "executor", colSpan:2, label:{text:"Executor"}, validationRules: [{type: "required"}],
							},{
								itemType: "button",
								horizontalAlignment: "right",
								buttonOptions: {
									icon: "save",
									text: "Salvar",
									type: "success",
									onClick: function(){
										formAddExecutor = $("#formAddExecutor").dxForm("instance");
										if (!formAddExecutor.validate().isValid){
											DevExpress.ui.notify("Há campos inválidos", "warning", 4000);
											return
										}
								  	dados = formAddExecutor.option("formData")
				            $.getJSON(
				            	urlPreparacao,
				            	{method: "SalvaExecutor", executor: dados.executor},
				            	function(retorno){
				        				DevExpress.ui.notify(retorno.mensagem, retorno.tipo, 4000);
												if (retorno.tipo == "success") {
													dataSourceExecutor.reload();
													objManualExecutor.option("value",retorno.id);
													$("#divAddExecutor").dxPopup("hide");
												}
											}
										);
									}
								}
							},{
								itemType: "button",
								horizontalAlignment: "left",
								buttonOptions: {
									icon: "close",
									text: "Fechar",
									type: "default",
									onClick: function(){
										dataSourceExecutor.reload();
										objManualExecutor.option("value","");
										$("#divAddExecutor").dxPopup("hide");
									}
								}
							},
						],
					});
					e.append(formAddExecutor);
				}
			});

			/*$(document).ready(function () {
				setTimeout(function(){
					objProcedimento.option("value","MIELO");
				}, 500);
			});*/				
		</script>
	</body>
</html>
