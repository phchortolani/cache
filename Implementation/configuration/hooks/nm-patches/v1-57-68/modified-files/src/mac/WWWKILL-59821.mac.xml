<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="Cache for Windows NT (Intel) 5.0.20 (Build 6305)">
<Routine name="WWWKILL" type="MAC" languagemode="0"><![CDATA[
WWWKILL(YDATEI,YKEY,YEINMAL)
#include COMSYS
#include WWWConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		LOESCHEN SATZ
	;	D ^WWWKILL(YDATEI,YKEY) ACHTUNG YFORM BEACHTEN GGF NEW
	;	D SUBKILL^WWWKILL = wenn bei execute nach löschen die sub Formdaten
	;	                    ebenfalls gelöscht werden sollen
	;
	; Inputs : 
	;	YDATEI		YDATEI
	;	YKEY		SCHLUESSEL KEY1,KEY2,KEYn
	;	YEINMAL=1	UNTERWERFEN SIE NICHT ZU DCM WIEDER
	;				Once Only - Do not resubmit to DCM  ;GRF;SR11363;10.01.2005
	;
	; NOTE : Performs Transaction processing TSTART/TCOMMIT - Take care if
	;        called from within another such block.
	;        Deletion failures are currently being logged under the following conditions:
	;        	(1) We entered WWWKILL while inside a transaction
	;        	(2) ^SysSetup(15134) is not 'true'
	;        To turn off the logging: set ^SysSetup(15134) = 1
	;        
	;
	; ByRef : 		see new (...)
	;
	; Returns : 	status
	;
	; History :
    ; 07-Oct-2008	FIS		SR15947: Transaction Wrapper for "Execute After Delete" implemented
    ; 								 Transaction Wrapper for "Execute Before Delete" implemented
	; 22-Feb-2008	GRF		SR15622: Version 1 => Version 2 conversion for selected classes
	; 02-Jan-2007	GRF		SR15134: Removed obsolete code per note
	; 14-Dec-2006	JW		BR014285: Allow for error message from OnBeforeDelete
	; 14-Dec-2006	Steve S	SR15316 Run class hooks
	; 23-Oct-2006	JW		SR15134: Made transaction smaller. Rewrote in brace syntax.
	; 						Look at DCM/kill statuses. Logging.
	; 05-Oct-2006	JW		SR15098: Fixed transaction. Don't always DCM.
	; 						Reverted incorrect changes of SR14414. Doco.
	; 24-Aug-2006	GRF		Doco; quits
	; 07-Jul-2006	RPW		SR12522: Delete any Quick Search if required
	; 26-Apr-2006	SC		Return strStatus for VARHooks error messages.
	; 13-Apr-2006	JW		Removed + from user id's in lock check
	; 10-Apr-2006	SC		SR14414: Check VARHooks for OnBeforeDelete.
	; 22-Dec-2005	RPW		SR13899: New schluessel
	; 30-Mar-2005	JW		Copied LC and UC definitions from WWWSKILL - undefined error.
	; 08.08.1997	DT		(C) BY DITMAR TYBUSSEK
	;-------------------------------------------------------------------------------
	NEW (SPRACHE,LANGUAGE,YM,YBED,YUSER,YFORM,YDATEI,YKEY,YFELD,YFELD1,YLOCATION,YTIMEFORM,YOPEN,YYFELD,YYKEY,YUCI,YANZ,YHYPER,YEINMAL,%request,%session,%KEY,%,%ZCS,%CGIEVAR)   ;TYBD;22.07.2003; FEHLENDE VARIABLEN FÜR FORM UND CSP...;23959; + YHYPER;FIS;27.05.04;25460
	
	set strStatus=$$$OK
	
	DO ^WWWVORG
	if ($data(LC)#2=0) set LC="ÜÄÖüäöß][\}{|abcdefghijklmnopqrstuvwxyz,()@#$%^&*_=+<>?/"_$CHAR(128)_""" "   ; JW 30-Mar-2005
	if ($data(UC)#2=0) set UC="UAOUAOSUAOUAOABCDEFGHIJKLMNOPQRSTUVWXYZ                   "
	;
	if YDATEI'="" {
		set idxYDATEI = $$^WWWUMLAU(YDATEI,1)
		if $ORDER(^WWW0011s(0,1,idxYDATEI,""))'="" set YDATEI=$ORDER(^WWW0011s(0,1,idxYDATEI,""))  ;tybd;16,2,2005;27239;ALTERNATIVE CLASS
	}
	if $GET(YUCI)="" set YUCI=$ZUTIL(5)
	
	;--------------------------------------------------------------------------------------------------------
	
	// SR15134: Moved tstart to just before OnBeforeDelete
	//TSTART
 
	if YDATEI'="" {
		set blnOk = $$BuildGlobal(YDATEI,YKEY,.SCHLUESSEL,.YDATA,.MAXYKEY)	//SR15134
		if blnOk {
			set blnLog = '$get(^SysSetup(15134)) && ($tlevel>0)		// SR15134 - Logging
			
			;------- TSTART ------------------------
			set blnTUnit = $$$NO  ;SR15947
			;vvvvvvv  ;SR15947 Transaction Units rather manual tstart/tcommit
			if (0) {  // INACTIVE -> ACTIVATE AFTER THE BUILD !!!   ($$$WWWTransactionActive1($get(^WWWTransaction(0,YFORM,"ExecuteAfterDelete",1)))=$$$YES) {  ;SR15947
				set blnTUnit = $$$YES
				set strTZtrap=$ztrap,$ztrap="TransactionUnitError^COMTransaction"       //change error handler
				set strTStatus=$$StartUnit^COMTransaction(YFORM,"ExecuteAfterDelete")  //start transaction
			} else {
				tstart  //dflt. transaction control
			}
			;^^^^^^^^^^
			;tstart
			;---------------------------------------
			set Q=$$$QDelete
			set strForm = $get(YFORM)
			
			;---------------------------------------
			;  On Before Delete                            *** EXECUTE ? ***
			;---------------------------------------
			set YFELD=$$^WWWSETL(SCHLUESSEL)
			
			if strForm'="" {
				set YVOR=$GET(^WWW120(0,YFORM,1))
				set strExec = $$$WWW120ExecuteBeforeDeletionData(YVOR)
				if ((strExec'="") || ($data(^WWWTransactionLine(0,YFORM,"ExecuteBeforeDelete")))) && ($GET(YTIMEFORM)'=1) {  ;SR15947
					XECUTE $$$WWW120ExecuteBeforeDeletionData(YVOR)  ;EXECUTE VOR LÖSCHEN WENN NICHT LÖSCHEN, DANN Q=1
					
					set strStatus = $$TransactionUnit^COMTransaction(YFORM,"ExecuteBeforeDelete",blnTUnit,.strTError,.Q)  ;SR15947
					
					// BR014285: Allow for error message
					if $extract(Q,2,999)'="" set strStatus = $extract(Q,2,999)
					set Q = +Q
				}
			}
			
			;---------------------------------------
			;  On Before Delete Hook                       *** EXECUTE ? ***
			;---------------------------------------
			if Q=$$$QDelete {
				//SR15316 Commented: Handled in WWW001Hook
				//set strStatus = $$ExecuteVARHook^WWW001VARHooks(YDATEI,$$$EnumWWWEVENTTYPEOnBeforeDelete,YKEY,YFELD,strForm)	// SR14414
				//if $$$ISOK(strStatus) { //SR15316
				set strStatus = $$ExecuteHook^WWW001Hook(YDATEI,$$$EnumWWWEVENTTYPEOnBeforeDelete,YKEY,YFELD,strForm)	// SR14414
				//}
				if $$$ISERR(strStatus) set Q=$$$QDontDelete
			}
			
			if (Q=$$$QDelete) && (strForm'="") {	;Check user access to current location
				if $$$WWW120DataItemOfLocation(YVOR)'="" {
					if $$^WWWLOCATION($GET(YLOCATION),YFORM,YFELD)'=1 {
						set Q=$$$QDontDelete   ;No authorisation
					}
				}
			}
			
			;-------------------------------
			; SR15622 Version 1 => Version 2
			;-------------------------------
			if Q=$$$QDelete {
				set strStatus = $$ConvertOnDelete^COMConversion(YDATEI,YKEY)  
				if $$$ISERR(strStatus) set Q=$$$QDontDelete
			}
			
			if Q=$$$QDontDelete {	// Do not delete !!		SR15098 - cleaned up
				set:$GET(YFORM)="" YFORM=""
				set YOPEN="OLD"
				set:$GET(YKEY)'="" YYKEY=$GET(YKEY)
				set:$GET(YFELD)'="" YYFELD=$GET(YFELD)
				set:(YFELD="")&&(YFORM'="") YYFELD=$GET(^WWWUSE(0,YUSER,YFORM,"D",1))
				set YFELD=YYFELD
				set YKEY=YYKEY
			} else {
				;------ DELETE data record  -------------
				set %FELD1=$$^WWWSETK(SCHLUESSEL) 
				;----------------------------------------
				
				;BITMAP;18.06.2003;TYBD ;bit map 
				if $$$WWW001BitMapIndexActive(YDATA) || ($$$WWW001BitmapXREFClass(YDATA)'="") {
					set OK=$$^WWWBITSET(YDATEI,YKEY,0,%FELD1,1,,,,$piece(YDATA,Y,25))   ;BITMAP;18.06.2003;TYBD ;bit map 
				}
				set YFELD=%FELD1
				if $GET(YTIMEFORM)'=1 {  ;NUR ZEITABHÄNGIGE ERFASSUNG ;only logging 
					if ($GET(YFORM)'="") && ($piece($GET(^WWW120(0,YFORM,1)),Y,29)=1) {  ;PROTOKOLLDATEI
						set YUHR=$piece($HOROLOG,",",2)
						set strKeyPRO = $TRANSLATE(YKEY,"/",",")
						while ($DATA(^WWWPRO(YM,YDATEI,+$HOROLOG,YUHR,YBED,strKeyPRO,0,1))) {
							set YUHR=YUHR+.1
						}
						set ^WWWPRO(YM,YDATEI,+$HOROLOG,YUHR,YBED,strKeyPRO,0,1) = %FELD1
						set ^WWWPRO(YM,YDATEI,+$HOROLOG,YUHR,YBED,strKeyPRO,1,1) = ""
					}
				}
				do Indexes()		//SR15134
				
				if $GET(YTIMEFORM)'=1 {
					if strForm'="" {
						DO ^WWWFORM5
			;---------------------------------------
			;  On After Delete                            *** EXECUTE ? ***
			;---------------------------------------
						set strExec = $$$WWW120ExecuteAfterDeletionOfDat(YVOR)
						if strExec'="" {
							xecute strExec
						}
						if ($data(^WWWTransactionLine(0,YFORM,"ExecuteAfterDelete"))) {  ;SR15947
							set strStatus = $$TransactionUnit^COMTransaction(YFORM,"ExecuteAfterDelete",blnTUnit,.strTError)
						}
						if (strExec="") || $$$WWW120DeleteSubformsRegardlessO(YVOR) {
							if $$$WWW120DeleteAlsoSubforms(YVOR) {
								DO SUBKILL
							}
							if $$$WWW120DeleteAlsoTheFollowingSub(YVOR)'="" {
								DO SUBKILL1
							}
						}
					}
				}
			}
			
			;--------- DCM ------------------------------ SR15098: Do not always try DCM - check Q (if kill occurred) first.
			
			if (Q=$$$QDelete) && ($GET(YEINMAL)'=$$$YES) {
				set strStatus = $$DeleteIndex^COMQuickSearch(YDATEI,YKEY) // SR12522	SR15134
				
				if $$$ISOK(strStatus) {
					; Now run function that identifies what, if any, event(s) need to be added to the queue
					
					set intTlevel = $tlevel				//SR15134 vvvvvvvv Check transaction level
					set strStatusDCM = $$setRelevantEvents^COMDCMControlModule("INTRAPREND",YDATEI,"delete",YKEY)  ;INTRAPREND=KENNUNG FÜR @-NET MANAGER ;to 
					if (intTlevel '= $tlevel) {			//SR15134 ^^^^^^^^
						set strStatus = $listbuild("Com00261",$piece(strStatusDCM,Y,2))  ;Transaction Level not maintained by DCM. Contact Support. Status: %1
						
					} elseif '$piece(strStatusDCM,Y,1) && ($GET(YBED)'="") && ($GET(YFORM)'="") {	// Log only
						set ^WWWWV(YM,YBED,+$HOROLOG,YFORM,YKEY,1)=+$HOROLOG_Y_$piece($HOROLOG,",",2)_Y_YBED_Y_$piece(strStatusDCM,Y,2)
					}
				}
				if $$$ISERR(strStatus) {
					set Q=$$$QDontDelete
				}
			}	
			
			;--- COMMIT / ROLLBACK -------------------- SR15098 Do not always tcommit. Check tlevel and Q (if kill occurred).
			
			if (Q=$$$QDelete) {
				;vvvvvvv  ;SR15947 Transaction Units rather manual tstart/tcommit
				if (blnTUnit =$$$YES) {
					if $$$ISOK(strTStatus) {
						set strTStatus=$$EndUnit^COMTransaction(YFORM,"ExecuteAfterDelete",strTStatus,$get(strTError))
						if '$$$ISOK(strTStatus) set strStatus = $$$NO  ;strTStatus  // set error if rolling back due to strTError
					}
					set $ztrap=strTZtrap
				}
				else {
					if $tlevel>0 tcommit  //dflt. tcommit
					//Either deletes the object or exports its parent
					do ##class(SourceControl.Exporter).DeleteArtifactByNameKey(YDATEI,YKEY)
				}
				;^^^^^^^^^^
				;if $tlevel>0 tcommit
			} else {
				if blnLog do StackDump^COMDebug("WWWKILL","Class: "_YDATEI_", Key: "_YKEY _",Status: "_strStatus)		//SR15134 - logging
				;vvvvvvv  ;SR15947 Transaction Units rather manual tstart/tcommit
				if (blnTUnit =$$$YES) {
					if $$$ISOK(strTStatus) { set strTStatus=$$EndUnit^COMTransaction(YFORM,"ExecuteAfterDelete",strTStatus,$listbuild("WWW00044",YDATEI,YKEY)) } 	 ;System deletion failed. Class: %1, Key: %2
					set $ztrap=strTZtrap
				}
				else {
					trollback  //dflt. trollback
				}
				;^^^^^^^^^^
				;trollback
				if $$$ISOK(strStatus) {		// We are rolling back but don't have an error status, so return default error.
					set strStatus = $listbuild("WWW00044",YDATEI,YKEY) 	 ;System deletion failed. Class: %1, Key: %2
				}
			}
			;---------------------------------------
		}
	}
	quit strStatus
	
BuildGlobal(pidClass,pstrKey,&pstrGlobal,&pobjClass,&pintKeys)
	;-------------------------------------------------------------------------------
	; Build the global string
	;
	; Params:	pidClass	- WWW001 id
	; 			pstrKey		- key of the class
	;
	; ByRefs:	pstrGlobal	- the constructed string
	; 			pobjClass	- WWW001 data
	; 			pintKeys	- number of keys in the class
	;
	; Returns:	boolean - whether global could be formed properly
	;
	; History:
	; 23-Feb-2007	JW		SR15452: Quote the company
	; 23-Oct-2006	JW		SR15134: Created
	;-------------------------------------------------------------------------------
	new intKey,blnOk,idKey
	
	set blnOk = $$$YES
	
	set pobjClass = $get(^WWW001(0,pidClass,1))
	set pintKeys = +$order(^WWW002(0,pidClass,""),-1)
	if pintKeys=0 set pintKeys=1
	
	set pstrGlobal="^"_pidClass
 
	if $get(YTIMEFORM)=1 {		// time-dependent change
		$$$Append(pstrGlobal,"t")
		set pintKeys = pintKeys+1
	}
	$$$Append(pstrGlobal,"("_$$$QUOTE($$^WWWYM(pidClass)))	//SR15452
	
	for intKey = 1:1:pintKeys {
		set idKey = $$$DEQUOTE($piece(pstrKey,",",intKey))
		if idKey="" {
			set blnOk = $$$NO
		} else {
			$$$Append(pstrGlobal,","""_idKey_"""")
		}
	}
	if blnOk {
		if $$$WWW001AltSaveProcedure(pobjClass)'=4 {
			$$$Append(pstrGlobal,",1")
		}
		$$$Append(pstrGlobal,")")
	}
	quit blnOk
	
	
Indexes()
	;-------------------------------------------------------------------------------
	; Re-index after the deletion		;SORTKEYS BEARBEITEN
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 23-Oct-2006	JW		SR15134: Created. Encapsulated from main routine
	;-------------------------------------------------------------------------------
	
	if $$$WWW001AltSaveProcedure($GET(YDATA))'=4 do 	;NICHT BEI CACHÉ ;next to 
	. DO ^WWWSORTKEY(YDATEI)  ;SKEY BESTIMMEN ;ordain 
	. IF $DATA(YSKEY) DO
	. . SET YYYM(0)=$$^WWWYM(YDATEI,0)
	. . SET YYYM(1)=$$^WWWYM(YDATEI,1)
	. . IF $PIECE($GET(^WWW001(0,YDATEI,1)),Y,8)=7 DO ^WWWKILL7 QUIT  ;SQLSTORAGE
	. . IF $PIECE($GET(^WWW001(0,YDATEI,1)),Y,8)=6              QUIT  ;ABACUS
	. . SET SKEY=""
	. . FOR  SET SKEY=$ORDER(YSKEY(SKEY)) QUIT:SKEY=""  DO
	. . . NEW YQ,YMAX,YMAX1,YMAX2
	. . . NEW YFILES
	. . . SET YFILES=YDATEI_"s"
	. . . IF $PIECE(YDATA,Y,23)'="" SET YFILES=$PIECE(YDATA,Y,23)  ;ANDERE DATEI ;data file 
	. . . KILL YSFELD,YSDATEI
	. . . SET YSDATEI="^"_YFILES_"("_YYYM(1)_SKEY
	. . . IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI UND VOL ;UCI And 
	. . . . SET YSDATEI="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YSDATEI,"^",2,999)
	. . . ;
	. . . SET YMAX=1
	. . . SET YSDATEI(YMAX)=YSDATEI
	. . . FOR YI=1:1 SET YLFN=$PIECE(YSKEY(SKEY),",",YI) QUIT:YLFN=""  DO
	. . . . IF $EXTRACT(YLFN)="F" SET YSFELD(YI)=$PIECE(%FELD1,Y,+$EXTRACT(YLFN,2,9))
	. . . . IF $EXTRACT(YLFN)="K" SET YSFELD(YI)=$PIECE(YKEY,",",+$EXTRACT(YLFN,2,9))
	. . . . IF YI=1 DO   ;WENN ERSTER KEY ;when premier KEY 
	. . . . . FOR  QUIT:$EXTRACT(YSFELD(YI))'=";"  SET YSFELD(YI)=$EXTRACT(YSFELD(YI),2,200)
	. . . . . IF $EXTRACT($REVERSE(YSFELD(YI)))=";" FOR  QUIT:$EXTRACT($REVERSE(YSFELD(YI)))'=";"  SET YSFELD(YI)=$REVERSE($EXTRACT($REVERSE(YSFELD(YI)),2,200))
	. . . . . SET YMAX=$LENGTH(YSFELD(YI),";")  ;ANZAHL DER ";" FELDER IM FELD
	. . . . . FOR YMAX1=1:1:YMAX SET YSDATEI(YMAX1)=YSDATEI
	. . . . ;
	. . . . IF YSFELD(YI)="" SET YSFELD(YI)=" "
	. . . . FOR YMAX1=1:1:YMAX DO
	. . . . . SET YMAX2=YMAX1
	. . . . . IF YMAX=1 SET YMAX2=200  ;ANZAHL DER ";" FELDER IN DATENFELD
	. . . . . IF YI=1 DO
	. . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU($PIECE(YSFELD(YI),";",YMAX1,YMAX2),1),1,150)     ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE($PIECE(YSFELD(YI),";",YMAX1,YMAX2),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","_""""_YSFELD(YMAX1,YI)_""""
	. . . . . ;
	. . . . . IF YI'=1 DO  ;TYBD;NEU WEGEN FEHLER; WENN MEHRFACH UND UNTERSORT, DANN WURDE NUR DAS ERSTE FELD GENOMMEN
	. . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)     ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","_""""_YSFELD(YMAX1,YI)_""""
	. . . ;
	. . . FOR YMAX1=1:1:YMAX DO
	. . . . SET YQ=1
	. . . . ;FOR YI=1:1:MAXYKEY SET KEY=$PIECE(YKEY,",",YI) SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","_""""_KEY_"""" IF KEY="" SET YQ=0
	. . . . FOR YI=1:1:MAXYKEY SET KEY=$TR($PIECE(YKEY,",",YI),"""") SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","_""""_KEY_"""" IF KEY="" SET YQ=0  ;FIS;06.08.04;26208; ALPHAN. KEY (IN ANFÜHRUNGSZEICHEN)
	. . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_")"
	. . . . QUIT:YQ=0
	. . . . KILL @YSDATEI(YMAX1)
	
	quit
	
	
SUBKILL
	;-------------------------------------------------------------------------------
	; Delete subforms from buttons
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 23-Oct-2006	JW		SR15134: Newed variables
	;-------------------------------------------------------------------------------
	new YLFN,YXXFORM,YXXDATEI	//SR15134
	
	SET YLFN=""
	
	$$$Order4(^WWW124,0,YFORM,SPRACHE,YLFN)
		set YXXFORM=$$$WWW124NewFormOnClick($get(^WWW124(0,YFORM,SPRACHE,YLFN,1)))
		if YXXFORM'="" {
			if $$$WWW121FixedInputForHiddenField($get(^WWW121(0,YXXFORM,1,1)))=1 {
				set YXXDATEI=""
				for YI=1:1:MAXYKEY {
					set KEY=$piece(YKEY,$$$COMMA,YI)
					set:KEY'="" YXXDATEI=YXXDATEI_","_""""_KEY_""""
				}
				set YXXDATEI=$extract(YXXDATEI,2,999)
				do ^WWWSKILL($$$WWW120ClassUsedInForm($get(^WWW120(0,YXXFORM,1))),YXXDATEI)
			}
		}
	$$$End
	
	/*
	FOR  SET YLFN=$ORDER(^WWW124(0,YFORM,SPRACHE,YLFN)) QUIT:YLFN=""  DO
	. SET YXXFORM=$PIECE($GET(^WWW124(0,YFORM,SPRACHE,YLFN,1)),Y,7)
	. IF YXXFORM'="" DO
	. . IF $PIECE($GET(^WWW121(0,YXXFORM,1,1)),Y,16)=1 DO   ;WENN FIX PRIMÄRSCHLÜSSEL AUS VORDATEI ;when skillful out of 
	. . . SET YXXDATEI=""
	. . . FOR YI=1:1:MAXYKEY SET KEY=$PIECE(YKEY,",",YI) IF KEY'="" SET YXXDATEI=YXXDATEI_","_""""_KEY_""""
	. . . SET YXXDATEI=$EXTRACT(YXXDATEI,2,999)  ;OHNE KOMMA ;without comma 
	. . . DO ^WWWSKILL($PIECE($GET(^WWW120(0,YXXFORM,1)),Y,11),YXXDATEI)  ;LÖSCHEN MIT SORTKEY ;Delete by means of 
	*/
	
	QUIT
	
SUBKILL1
	;-------------------------------------------------------------------------------
	; Delete subforms that are specified on form def
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 23-Oct-2006	JW		SR15134: Newed variables
	;-------------------------------------------------------------------------------
	new YLFN,YXXFORM,YXXDATEI,YF,YI	//SR15134
	
	for YF=1:1 {
		SET YXXFORM=$PIECE($TRANSLATE($PIECE(YVOR,Y,127),",",";"),";",YF)
		quit:YXXFORM=""
		
		if $$$WWW121FixedInputForHiddenField($GET(^WWW121(0,YXXFORM,1,1)))=1 {
			set YXXDATEI=""
			for YI=1:1:MAXYKEY {
				set KEY=$piece(YKEY,$$$COMMA,YI)
				if KEY'="" {
					set:YXXDATEI'="" YXXDATEI=YXXDATEI_","
					set YXXDATEI=YXXDATEI_""""_KEY_""""
				}
			}
			
			do ^WWWSKILL($$$WWW120ClassUsedInForm($get(^WWW120(0,YXXFORM,1))),YXXDATEI)
		}
	}
	
	/*
	FOR YF=1:1 QUIT:$PIECE($TRANSLATE($PIECE(YVOR,Y,127),",",";"),";",YF,999)=""  SET YXXFORM=$PIECE($TRANSLATE($PIECE(YVOR,Y,127),",",";"),";",YF) DO 
	. IF YXXFORM'="" DO
	. . IF $$$WWW121FixedInputForHiddenField($GET(^WWW121(0,YXXFORM,1,1)))=1 DO   ;WENN FIX PRIMÄRSCHLÜSSEL AUS VORDATEI ;when skillful out of 
	. . . SET YXXDATEI=""
	. . . FOR YI=1:1:MAXYKEY SET KEY=$PIECE(YKEY,",",YI) IF KEY'="" SET:YXXDATEI'="" YXXDATEI=YXXDATEI_"," SET YXXDATEI=YXXDATEI_""""_KEY_""""
	. . . DO ^WWWSKILL($PIECE($GET(^WWW120(0,YXXFORM,1)),Y,11),YXXDATEI)  ;LÖSCHEN MIT SORTKEY ;Delete by means of 
	*/
	
	QUIT
	
	
]]></Routine><![CDATA[
]]></Export>