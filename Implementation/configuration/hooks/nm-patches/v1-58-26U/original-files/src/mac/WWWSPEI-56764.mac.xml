<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache for Windows (x86-32) 2008.2 (Build 615U)">
<Routine name="WWWSPEI" type="MAC" languagemode="0"><![CDATA[
#include COMSYS
#include WWWConst
#include INConst
	
WWWSPEI(YDATEI,YKEY,YFELD,YFIX,YNEWSORT,YEINMAL,&strStatus,pblnDoOnBeforeSave=$$$YES)
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		SPEICHERN DATENSATZ
	;		"Save Data Record"
	; S YOK=$$^WWWSPEI(YDATEI,YKEY,YFELD,1) ;     ACHTUNG YFORM UND YVOR BEACHTEN
	;
	; Inputs : 
	;	YDATEI		DATEI                          ; Class 
	;	YKEY		SCHLUESSEL                     ; KEY1,KEY2,KEYn
	;	YFELD		DATENSATZ                      ; data record XX~XX~XX~
	;	YFIX		=1 IMMER SPEICHERN             ; Always Save 
	;	YNEWSORT	=1 SORTKEY IMMER NEU AUFBAUEN  ; Always recent construct 
	;	YEINMAL		=1 Once Only - Do not resubmit to DCM         FIS;31.01.05;GRF;SR11363;10.01.2005
	; 	strStatus	(byref) Optional status str for VARHook routines to return an error msg. 
	; ByRef :
	;   YVOR		objWWW120
	;	YTIMEFORM	=1 DANN WIRD IN DATEI_"t" gespeichert
	;
	; Returns :
	;     0= NOT OK ;$$$HardFail    
	;     9= NOT OK ;$$$SoftFail  - still save if YFIX = $$$YES
	;     1= OK     ;$$$SaveOkay 
	;
	;---------------------
	; FIXME : SORTCHANGE never anything but $$$YES so can remove all tests? <GRF>
	;---------------------
	;
	; History :
	; 30-Sep-2008	GRF		SR15947: reversion of FIS change and correction
	; 17-Sep-2008   Luke	SR15833: Corrected the TCOMMIT to check fot TLevel 
	; 08-Aug-2008	FIS		SR15835: implement transaction process control for save transaction
	; 06-Aug-2008	FIS		SR15828: Two correction for softfail
	; 30-Jun-2008	shobby	SRBR014960: Save should fail if OnBeforeSave returnes an error.
	; 25-Feb-2008	GRF		SRBR014901: bypass logging if class or userid (YBED) are null.
	; 22-Feb-2008	GRF		SR15622: Version 1 => Version 2 conversion for selected classes
	; 13-Jul-2007	RPW		SR15571: Get the status in case there is a Cache error.
	; 31-May-2007	HeberB	BR014465:Add new characters
	; 23-May-2007	RGB		SRBR014456: Added a check to see if the call was made from a
	; 						form so it wouldn't run the varhook onbefore save call twice.
	; 16-May-2007	shobby	SR14365: WWWSPEI was passing the checksum in on the wrong
	; 						parameter in to the HandleRelevantEvents routine.
	; 23-Feb-2007	JW		SR15452: Quote the company
	; 29-Jan-2007	JW		SR15304: Added old record parameter to class hooks
	; 02-Jan-2007	GRF		SR15337: Doco; single calculation of key translation and
	; 						today's date; comment out impossible combination; boolean
	; 						macros; use blnCreated rather than %FELD1=""; replace data
	; 						field location lookups with fldDateModified, fldModifiedBy,
	; 						fldEntryDate, fldEnteredBy, fldCreateLocn; ineffective block
	; 						commented; sort new list; use idClassTR; use DO so don't
	; 						repeat F/K tests.
	; 14-Dec-2006	Steve S	SR15316 Run Class Hook
	; 13-Dec-2006	JW		SR15308: Fixed SR14599 errors - dot level, wrong piece.
	; 24-Nov-2006	HeberB	BR014334: VarHook on After Save
	; 23-Nov-2006	RPW		SR15245: If we are not going to save because there is no
	; 						change to save, then set YCHANGED to 0 so DCM is not called
	; 11-Oct-2006	GRF		SR15110: Removed unnecessary NEW; parenthesis in if tests
	; 22-Sep-2006	PO		SR15069: Added logging for demands
	; 19-Sep-2006	shobby	SR14365: Call to GetChecksum routine.
	; 12-Jul-2006	FIS		SR14834: If unknown form, try using classname as formname
	; 07-Jul-2006	RPW		SR12522: Save any Quick Search if required
	; 08-Jun-2006	shobby	SR14365: Pass a checksum for the previous value into
	; 						the setRelevantEvents routine.  This can be used to determine
	; 						if the record at both sites was the same before modification.
	; 08-Jun-2006	GRF		Doco
	; 09-May-2006	Steve S	SR14508: Only perform a lock check for appropriate classes
	; 03-May-2006	RPW		SR14599: If the field is a %Date, use +$h not $h.
	; 01-May-2006	shobby	SRBR014015: Pass YFELD into VARHook routine by reference
	; 						so it can be modified.
	; 26-Apr-2006	SC		SR14414: Check for and run VARHooks routines. Added
	; 						strStatus byref. 
	; 12-Jan-2006	Steve S	SR14114: Return YOK=9 (error) if no set occurs
	; 22-Dec-2005	RPW		SR13899: New schluessel
	; 07-Jul-2005	shobby	SR12892: WWW1261 is no longer shared.
	; 07-Jun-2005	SCR		Removed ^COMLOG entry
	; 31.07.1997	DT
	;-----------------------------------------------------------------------------*/
	NEW (%,%FELD,%SCHLUESSEL,LANGUAGE,SPRACHE,strStatus,Y,YAEND,YBED,YDATEI,YEINMAL,YFELD,YFIX,YFORM,YKEY,YKOMMA,YLOCATION,YM,YMANDANT,YNEWSORT,YOPEN,YSKEY,YTIMEFORM,YUMLAU,YURL,YUSER,YVOR,pblnDoOnBeforeSave)
	
	; already have exclusive NEW - don't need INCLUSIVE version as well 11-Oct-2006
	;new SCHLUESSEL,OK,dteDate
	
	;UMLAUTE IN $TR ; TYBD;30,9,2004
	;BR014465
	;SET LC="ÜÄÖüäöß][\}{|abcdefghijklmnopqrstuvwxyz,()@#$%^&*_=+<>?/"_$CHAR(128)_""" "   ;SPEEDUP;TYBD;25.09.2004
	;SET UC="UAOUAOSUAOUAOABCDEFGHIJKLMNOPQRSTUVWXYZ                   "
	SET LC="áàãâéèêíìîóòõôúùûçÜÄÖüäöß][\}{|abcdefghijklmnopqrstuvwxyz,()@#$%^&*_=+<>?/"_$CHAR(128)_""" "   ;SPEEDUP;TYBD;25.09.2004
	SET UC="ÁÀÃÂÉÈÊÍÌÎÓÒÕÔÚÙÛÇUAOUAOSUAOUAOABCDEFGHIJKLMNOPQRSTUVWXYZ                   "
 
	set strStatus=$$$OK
	;--------------------------------------------------------------------------------------------------------
	IF $GET(YUCI)="" SET YUCI=$ZUTIL(5)    ; namespace                        ;BEC;25080;09.02.04
	;IF $DATA(^COMLogM) DO SAVE^COMLOG     ;CHECK IF COMPILED ROUTINE EXISTS. ;Bec;05.12.03;24774
	SET YVOR   = $GET(YVOR)
	SET YUMLAU = $GET(YUMLAU)              ;BEC;26742;10.11.04
	SET YAEND  = $$$NO
	
	set idxYDATEI = " "
	IF YDATEI'="" {
		set idxYDATEI = $$^WWWUMLAU(YDATEI,1)
		IF $ORDER(^WWW0011s(0,1,idxYDATEI,""))'="" {
			SET YDATEI=$ORDER(^WWW0011s(0,1,idxYDATEI,""))  ;tybd;16,2,2005;27239;ALTERNATIVE CLASS
		}
	}
	
	IF '$DATA(%SCHLUESSEL) SET %SCHLUESSEL=""
	IF '$DATA(YFIX) SET YFIX=0  ;NICHT FIX SPEICHERN ;Not skillful Save 
	SET YKEY=$TRANSLATE(YKEY,"""")
	;IF $GET(YFORM)'="" IF YKEY'="" IF $GET(YBED)'="" DO
	;.KILL ^WWWWV(YM,YBED,+$HOROLOG,YFORM,$TRANSLATE(YKEY,",","/"))  ;LÖSCHEN DER WIEDERVORLAGEN 
	
	SET YFORM1 = $GET(YFORM)
	SET YVOR1  = $GET(YVOR)       ; this is tmpYVOR or tmpobjWWW120, not YVOR1 = objWWW012
	NEW YFORM,YVOR
	SET YFORM  = YFORM1
	SET YVOR   = YVOR1
	
	IF YFORM="" SET YVOR=""  ;WENN KEINE FORMUALR, DANN AUCH KEINE ÄNDERUNG;TYBD;16,12,2003;
	;DO ^WWWVORG  ;STANDARD VARIABLEN ;KEINE UMLAUTE UND SPEED-UP;TYBD;6,10,2004;26526
	
	;PRUEFEN OB DATEI MIT FORM RICHTIG IST ;check whether class matches form
	IF $GET(YFORM)="" SET YFORM=$GET(YDATEI)  ;TYBD/BEC;27963;11.07.05;IF UNKNOWN TRY SAME AS CLASS  ;BUGFIX;FIS;SR14834;12-Jul-2006
	IF YFORM'="" DO
	. IF $GET(YDATEI)'="" DO
	. . IF $$$WWW120ClassUsedInForm($GET(^WWW120(0,YFORM,1)))'=YDATEI DO
	. . . IF $DATA(^WWW120(0,YDATEI,1)) SET YFORM=YDATEI,YVOR="" QUIT
	. . . SET YFORM=""
	. . . SET YVOR="" 
	
	SET YOK      = $$$HardFail   ;SPEICHERUNG NICHT OK ;Not 
	SET YCHANGED = $$$YES        ;CHANGES IN FIELDS; TYBD;12,2,2004
	IF '$DATA(%FELD1) SET %FELD1=""
	
	;vvvvvvv;start save transaction;FIS;07-Aug-2008;SR15835
	SET strZTRAP=$ZTRAP
	SET $ZTRAP="OnSaveError"
	
	;+++++++++++++++++++++++++++++++++++++++
	TSTART  ;start save transaction
	;+++++++++++++++++++++++++++++++++++++++
	;^^^^^^^
	IF YDATEI'="" DO
	. //SET WWWYM  = $$^WWWYM(YDATEI,1)	SR15452
	. set WWWYM = $$^WWWYM(YDATEI)
	. set strYM = $$$QUOTE(WWWYM)_","
	. set WWWYM = WWWYM_","
	. ;
	. SET YDATA  = $GET(^WWW001(0,YDATEI,1))          ; objClass
	. SET MAXKEY = +$ORDER(^WWW002(0,YDATEI,""),-1)
	. IF MAXKEY=0 SET MAXKEY=1                                   ;KEIN KEY = AUTOMATISCH LFN ;no KEY automatic 
	. ;
	. //SR15452
	. SET SCHLUESSEL="^"_YDATEI_"("_strYM                        		;NORMALER SAVE
	. IF $GET(YTIMEFORM)=$$$YES SET SCHLUESSEL="^"_YDATEI_"t("_strYM  ;ZEITABHÄNGIGER SAVE
	. //SET SCHLUESSEL="^"_YDATEI_"("_WWWYM                        ;NORMALER SAVE
	. //IF $GET(YTIMEFORM)=$$$YES SET SCHLUESSEL="^"_YDATEI_"t("_WWWYM  ;ZEITABHÄNGIGER SAVE
	. ;
	. FOR YI=1:1:MAXKEY SET KEY=$PIECE(YKEY,",",YI) SET SCHLUESSEL=SCHLUESSEL_""""_KEY_""","
	. IF $GET(YTIMEFORM)=$$$YES DO
	. . NEW YABDATE
	. . IF $GET(YQUERY)="" SET YQUERY="%KEY"   ;TYBD;26751;9.11.2004;
	. . SET YABDATE=$GET(%(YQUERY,"Y"_$GET(YFORM)_"P"_(MAXKEY+1)))
	. . IF YABDATE="" SET YABDATE=$$^WWWDATE($HOROLOG+1)
	. . SET SCHLUESSEL=SCHLUESSEL_+$$^WWWDATE1(YABDATE)_","
	. . SET YFIX=$$$YES                                            ;IMMER SPEICHERN ;Always Save
	. . ; 
	. . DO  ;SAVE SATZ2 BEI ZEITABHÄNGIGER ERFASSUNG = ^DATEIt(0,key,2)=alter datensatz
	. . . NEW SCHLUESSEL2,YDATEI,YTIMEFORM,YFELD
	. . . SET YDATEI=$PIECE($PIECE(SCHLUESSEL,"^",2),"t(",1)
	. . . QUIT:YDATEI=""
	. . . SET YFELD=""
	. . . DO ^WWWLESE(YDATEI,YKEY)
	. . . QUIT:YFELD=""
	. . . SET SCHLUESSEL2=SCHLUESSEL_"2)"
	. . . SET YFELD=$$^WWWSETS(SCHLUESSEL2,YFELD)
	. ;
	. ; WWW001 : D8 : Alternate Save Procedure : 4="Caché Object"
	. IF $PIECE(YDATA,Y,8)'=4 SET SCHLUESSEL=SCHLUESSEL_"1"
	. IF $PIECE(YDATA,Y,8)=4 IF $EXTRACT(SCHLUESSEL,$LENGTH(SCHLUESSEL))="," SET SCHLUESSEL=$EXTRACT(SCHLUESSEL,1,$LENGTH(SCHLUESSEL)-1)
	. SET SCHLUESSEL=SCHLUESSEL_")"
	. ;
	. SET NEU=0,YOK=$$$SaveOkay                    ;NEUER SATZ+SPEICHERN OK
	. ;
	. ;-------------------------------------
	. ; Get original record and check if trying to create
	. ; If only permitted to modify, and not in Fix mode ...
	. ;-------------------------------------
	. SET %FELD1=$$^WWWSETL(SCHLUESSEL)            ; SUCHEN ALTEN WERT ; retrieve old value 
	. set blnCreated = (%FELD1="")                 ; if not created then has been modified     ; 02-Jan-2007
	. IF YFIX'=$$$YES IF blnCreated IF $PIECE(YVOR,Y,23)=4 SET NEU=9,YOK=$$$SoftFail QUIT  ;NUR AENDERUNG ERLAUBT ! SATZ NICHT VORHANDEN!  ;FIS;05-Aug-2008:YOK=$$$SoftFail added;SR15828
	. ;
	. ;-------------------------------------
	. ; Modifying record;                    ;DATENSATZ VORHANDEN
	. ; 1. If location matching in use,  check if match occurs.
	. ; 2. Only permitted to create.
	. ; 3. Lock management (WWW006)
	. ; 4. Lock timeout (Number of seconds) - not functional
	. ;-------------------------------------
	. ;IF 'blnCreated SET YAEND=$$$YES,YOK=$$$SaveOkay DO      ; 02-Jan-2007 YOK already set
	. IF 'blnCreated DO 
	. . new dteToday,strKeyTR
	. . SET YAEND=$$$YES
	. . IF YFIX'=$$$YES IF $GET(YFORM)'="" IF $$^WWWLOCATION($GET(YLOCATION),YFORM,YFELD)'=$$$YES SET YOK=$$$SoftFail QUIT   ;KEINE BERECHTIGUNG, DA FALSCHER BETRIEB;9.4.2003;TYBD 
	. . IF $PIECE(YVOR,Y,23)=3 SET NEU=9,YOK=$$$SoftFail QUIT   ;AENDERUNG NICHT ERLAUBT  ;FIS;05-Aug-2008:YOK=$$$SoftFail added;SR15828
	. . set strKeyTR = $translate(SCHLUESSEL,",()""",".//")
	. . set dteToday = +$horolog
	. . IF YFIX=$$$YES KILL ^WWW006(0,dteToday,strKeyTR) ;WENN FIX DANN KILL;TYBD;1,12,2003;
	. . //SR14508: Only do a lock check if the class allows locking!
	. . IF YFIX'=$$$YES IF '$$$WWW001NoLocking(YDATA)&&('$DATA(^WWW006(0,dteToday,strKeyTR))) SET YOK=$$$SoftFail QUIT  ;KEIN EIGENTÜMER DES SATZES ;no 
	. . IF YFIX'=$$$YES IF $DATA(^WWW006(0,dteToday,strKeyTR)) IF $PIECE($GET(^WWW006(0,dteToday,strKeyTR,1)),Y,1)'=$GET(YUSER) SET YOK=$$$SoftFail QUIT  ;NICHT DER EIGENTÜMER ;Not the 
	. . ;;;;;;;I YFIX'=1 I SCHLUESSEL=%SCHLUESSEL I %FELD=%FELD1 S NEU=9,YOK=$$$SaveOkay Q   ;KEINE ÄNDERUNG DES SATZES ; record not altered
	. . ;;;;;;;S %FELD1=$$^WWWSETL(SCHLUESSEL)
	. . ;vvvvv 02-Jan-2007 rendered disabled
	. . ;IF YFIX'=$$$YES IF $TRANSLATE(SCHLUESSEL,"""")'="" IF +$PIECE($GET(^WWW001(0,YDATEI,1)),Y,6)'=0 DO  QUIT:YOK=$$$HardFail   ;LOCK PRUEFEN 
	. . ;. ;IF '$DATA(^WWW006(0,dteToday,strKeyTR,1))                         SET YOK=$$$SoftFail QUIT  ;KEIN BESIZER
	. . ;. ;IF +$PIECE($GET(^WWW006(0,dteToday,strKeyTR,1)),Y,1)=+$GET(YUSER) SET YOK=$$$SaveOkay QUIT
	. . ;. ;SET YOK=$$$HardFail         ;LOCK FILE AKTIV ;table-mat ENABLED 
	. . ;. SET YOK=$$$SaveOkay          ;PRUEFUNG SCHON FRÜHER  ;yet sooner 
	. . ;^^^^^ 02-Jan-2007 block end
	. . SET NEU=1
	. ;
	. ;-------------------------------------
	. ; Quit if attempting to modify/change inappropriately
	. ; Quit if Hard Fail or if Soft Fail and not in Fix Mode
	. ; Quit if Soft Fail on create
	. ;-------------------------------------
	. QUIT:NEU=9  ;KEINE AENDERUNG ;no 
	. QUIT:(YOK=$$$HardFail)||((YFIX'=$$$YES)&&(YOK=$$$SoftFail))  ;SR14114: Bail out if YOK=9 (error)
	. ;IF YFIX=$$$YES IF YOK=$$$SoftFail IF blnCreated QUIT  ;NICHT ABSPEICHERN OBWOHL FIX SPEICHER ;don't store if new   ; 02-Jan-2007 Can never be called
	. ;
	. //SR14414
	. //vvvvv SR15316: Commented: Handled in WWW001Hook
	. //set strStatus = $$ExecuteVARHook^WWW001VARHooks(YDATEI,$$$EnumWWWEVENTTYPEOnBeforeSave,YKEY,.YFELD,YFORM)
	. //if $$$ISERR(strStatus) set YOK = $$$HardFail  QUIT  
	. ;
	. if pblnDoOnBeforeSave do
	. . set strStatus = $$ExecuteHook^WWW001Hook(YDATEI,$$$EnumWWWEVENTTYPEOnBeforeSave,YKEY,.YFELD,YFORM,%FELD1)		//SR15304
	. if $$$ISERR(strStatus) set YOK = $$$HardFail  QUIT    ;BR014960 (remove dot level so quit is to outer level)
	. //^^^^^ SR15316
	. ;
	. ;-------------------------------------
	. ; Update Creation/Modification details
	. ;-------------------------------------
	. IF $DATA(YFORM) IF YFORM'="" SET YVOR=$GET(^WWW120(0,YFORM,1)) DO  ;ERFASSUNGSDATUM/MITARBEITER
	. . QUIT:$PIECE(YVOR,Y,11)'=YDATEI                   ;FALSCHE VORGABE DER DATEI;TYBD;31,1,2004;
	. . IF $GET(YQUERY)="" NEW YQUERY SET YQUERY="%KEY"  ;FIS;15.02.05;26751
	. . set dteDate=$horolog                             // SR14599
	. . if $GET(%(YQUERY,"YTIMEFORM"))=$$$YES do  quit   ;KEIN NEUER DATENSATZ, SONDERN ZEITABHÄNGIGE ÄNDERUNG;FIS;15.02.05;26751
	. . . set fldDateModified = +$piece(YVOR,Y,27)       ; 02-Jan-2007
	. . . set fldModifiedBy   = +$piece(YVOR,Y,28)
	. . . if fldDateModified do  			             //SR15308
	. . . . if $piece($get(^WWW003(0,YDATEI,fldDateModified,1)),Y,3)=1 set dteDate=+dteDate // SR14599
	. . . . set $piece(YFELD,Y,fldDateModified)=dteDate // SR14599
	. . . if fldModifiedBy set $piece(YFELD,Y,fldModifiedBy)=$get(YBED)
	. . ;
	. . ;IF +$PIECE(YVOR,Y,25)'=0 IF $PIECE(YFELD,Y,$PIECE(YVOR,Y,25))=""!(%FELD1="") SET $PIECE(YFELD,Y,$PIECE(YVOR,Y,25))=$HOROLOG
	. . set fldEntryDate  = +$piece(YVOR,Y,25)           ; 02-Jan-2007
	. . set fldEnteredBy  = +$piece(YVOR,Y,26)
	. . set fldCreateLocn = +$piece(YVOR,Y,132)
	. . if fldEntryDate if ($piece(YFELD,Y,fldEntryDate)="") || blnCreated do // SR14599
	. . . set dteDate=$horolog // SR14599
	. . . if $piece($get(^WWW003(0,YDATEI,fldEntryDate,1)),Y,3)=1 set dteDate=+dteDate // SR14599
	. . . set $piece(YFELD,Y,fldEntryDate)=dteDate // SR14599
	. . if fldEnteredBy  if ($piece(YFELD,Y,fldEnteredBy)="")  || blnCreated set $piece(YFELD,Y,fldEnteredBy)  = $get(YBED)       ;TYBD 07.05.2002
	. . if fldCreateLocn if ($piece(YFELD,Y,fldCreateLocn)="") || blnCreated set $piece(YFELD,Y,fldCreateLocn) = $get(YLOCATION)  ;TYBD;09.04.2003;23440;Speichern Betrieb
	. ;
	. ;-------------------------------------
	. ;FALSCHER DATENSATZ; LEERER DATENSATZ AUF GESPEICHERTE DATEIN --> Wrong datarecord; or empty
	. ; Save Without Data; FormType = Standard or Grid; Empty...
	. IF YFIX'=$$$YES IF $GET(YFORM)'="" IF $PIECE(YVOR,Y,80)'=$$$YES IF $PIECE(YVOR,Y,2)=1||($PIECE(YVOR,Y,2)=3) IF ($TRANSLATE(YFELD,Y)="")||($TRANSLATE(YFELD,Y)=$GET(^WWW1261(YM,YFORM,1))) IF $TRANSLATE(%FELD1,Y)'="" IF $TRANSLATE(%FELD1,Y)'=$GET(^WWW1261(YM,YFORM,1)) set YCHANGED=$$$NO QUIT  ;NICHT ;GEÄNDERT (80) TYBD;01.05.2003;TYBD;7,1,2004 // SR15245
	. ;
	. ;IF YFIX'=1 IF $GET(YNEWSORT)'=1 IF $TRANSLATE(YFELD,".|;,"_Y_"""")'="" QUIT:$TRANSLATE($GET(YFELD),".|;,"_Y_"""")=$TRANSLATE($GET(%FELD1),".|;,"_Y_"""")  ;GLEICH;TYBD;7,1,2004
	. IF YFIX'=$$$YES IF $GET(YNEWSORT)'=1 IF $TRANSLATE(YFELD,".|;,"_Y_"""")'="" QUIT:$GET(YFELD)=$GET(%FELD1)  ;GLEICH;TYBD;11,3,2004
	. ;
	. IF YDATEI="WWW013" IF $PIECE(YFELD,Y,2)'="" SET $PIECE(YFELD,Y,2)=$$SET^WWWPWDCHECK($PIECE(YFELD,Y,2))  ;TYBD;7,1,2004;VERSCHLUESSSELN PASSWORT
	. ;
	. ;
	. ;W SCHLUESSEL,"/",KEY,"/",YFELD
	. ;ONLY NEW IF SORTKEY;TYBD;28,10,2004
	. IF $GET(YUMLAU)'="" IF $GET(YSKEY)'=YDATEI IF $DATA(^WWW002s(0,4,idxYDATEI))||($DATA(^WWW003s(0,4,idxYDATEI))) DO ^WWWSORTKEY(YDATEI)   ;SORTKEY SUCHEN ;seek 
	. IF $GET(YUMLAU)=""  IF $GET(YSKEY)'=YDATEI DO
	. . set idClassTR = $translate(YDATEI,LC,UC)                  ; 02-Jan-2007
	. . IF $DATA(^WWW002s(0,4,idClassTR)) || ($DATA(^WWW003s(0,4,idClassTR))) DO ^WWWSORTKEY(YDATEI)   ;SORTKEY SUCHEN ;seek 
	. ;
	. //SET SORTCHANGE=$$$NO   ;INDEX NICHT GEÄNDERT;TYBD;21,11,2003
	. SET SORTCHANGE=$$$YES    ;IMMER SAVE ;always save
	. ;IF %FELD1="" SET SORTCHANGE=$$$YES  ;NEU
	. ;IF SORTCHANGE=$$$NO SET SKEY="" FOR  SET SKEY=$ORDER(YSKEY(SKEY)) QUIT:SKEY=""  DO  QUIT:SORTCHANGE=$$$YES
	. ;. FOR YI=1:1 SET YLFN=$PIECE(YSKEY(SKEY),",",YI) QUIT:YLFN=""  DO  QUIT:SORTCHANGE=$$$YES
	. ;. . IF $EXTRACT(YLFN)="F" IF $PIECE(YFELD,Y,+$EXTRACT(YLFN,2,9))'=$PIECE(%FELD1,Y,+$EXTRACT(YLFN,2,9)) SET SORTCHANGE=$$$YES  ;TYBD;21,11,2003
	. ;IF SORTCHANGE=$$$NO  DO       ;TYBD;24,11,2003;NUR BESTIMMTE BITS
	. ;. SET YLFN=""
	. ;. FOR  SET YLFN=$ORDER(^WWW001B(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. ;. . IF $PIECE(YFELD,Y,YLFN)'=$PIECE(%FELD1,Y,YLFN) DO
	. ;. . . SET SORTCHANGE=$$$YES
	. ;. . . SET YBITLIST=$GET(YBITLIST)_YLFN_","
	. ;-------------------------------------
	. ;BITMAP - Kill for old record         ;18.06.2003;TYBD
	. ;	WWW001 : D12 : Other UCI                       D13 : Other Volume
	. ;	(YDATA)  D23 : Save Index Key In File          D24 : Bit Map Index Active (bln)          D25 : Bitmap XREF Class
	. ;-------------------------------------
	. IF SORTCHANGE=$$$YES IF (+$PIECE(YDATA,Y,24)=$$$YES) || ($DATA(^WWW001B(0,YDATEI))) || ($PIECE(YDATA,Y,25)'="") DO
	. . SET OK=$$^WWWBITSET(YDATEI,YKEY,$$$BitMapKill,%FELD1,,$GET(YBITLIST),,WWWYM,$PIECE(YDATA,Y,25))   ;BITMAP;18.06.2003;TYBD ;bit map 
	. ;
	. IF SORTCHANGE=$$$YES IF $PIECE($GET(YDATA),Y,8)'=4 DO  ;ALTEN SORTKEY LÖSCHEN  ;WENN NICHT CACHÉ ;when net using cache object
	. . QUIT:$GET(YTIMEFORM)=$$$YES     ;ZEITABHÄNIGE
	. . IF $DATA(YSKEY) DO         ;SORTKEY SETZEN
	. . . IF $PIECE(YDATA,Y,8)=6 QUIT                                ;ABACUS
	. . .;IF $PIECE(YDATA,Y,8)=6 DO ^WWWSPEI7 QUIT  ;SQLSTORAGE   18-Jul-2005 JW - Line is never executed
	. . . ;QUIT:%FELD1=""  ;ALTER DATENSATZ LÖSCHEN ALTEN SORTIERSCHLÜSSEL;MUSS IMMER SESETZT WERDEN,WENN DATENSATZ "";26563;TYBD;12,10,2004
	. . . SET SKEY=""
	. . . FOR  SET SKEY=$ORDER(YSKEY(SKEY)) QUIT:SKEY=""  DO
	. . . . KILL YSFELD
	. . . . KILL YSDATEI
	. . . . NEW YMAX,YMAX1,YMAX2,YFILES
	. . . . SET YFILES=YDATEI_"s"
	. . . . IF $PIECE(YDATA,Y,23)'="" SET YFILES=$PIECE(YDATA,Y,23)  ;ANDERE DATEI ;data file 
	. . . . //SET YSDATEI="^"_YFILES_"("_WWWYM_SKEY		SR15452
	. . . . SET YSDATEI="^"_YFILES_"("_strYM_SKEY
	. . . . IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI UND VOL ;UCI And 
	. . . . . SET YSDATEI="^["""_$PIECE(YDATA,Y,12)_""","""_$PIECE(YDATA,Y,13)_"""]"_$PIECE(YSDATEI,"^",2,999)
	. . . . SET YMAX=1
	. . . . SET YSDATEI(YMAX)=YSDATEI
	. . . . FOR YI=1:1 SET YLFN=$PIECE(YSKEY(SKEY),",",YI) QUIT:YLFN=""  DO
	. . . . . ;IF $EXTRACT(YLFN)="F" I $PIECE(YFELD,Y,+$EXTRACT(YLFN,2,9))=$PIECE(%FELD1,Y,+$EXTRACT(YLFN,2,9)) Q  ;TYBD;21,11,2003
	. . . . . IF $EXTRACT(YLFN)="F" SET YSFELD(YI)=$PIECE(%FELD1,Y,+$EXTRACT(YLFN,2,9))
	. . . . . IF $EXTRACT(YLFN)="K" SET YSFELD(YI)=$PIECE(YKEY,",",+$EXTRACT(YLFN,2,9))
	. . . . . IF YI=1 DO   ;WENN ERSTER KEY ;when premier KEY 
	. . . . . . FOR  QUIT:$EXTRACT(YSFELD(YI))'=";"  SET YSFELD(YI)=$EXTRACT(YSFELD(YI),2,200)
	. . . . . . IF $EXTRACT($REVERSE(YSFELD(YI)))=";" FOR  QUIT:$EXTRACT($REVERSE(YSFELD(YI)))'=";"  SET YSFELD(YI)=$RE($EXTRACT($RE(YSFELD(YI)),2,200))  ;TYBD;23,10,2004
	. . . . . . SET YMAX=$LENGTH(YSFELD(YI),";")  ;ANZAHL DER ";" FELDER IM FELD
	. . . . . . FOR YMAX1=1:1:YMAX SET YSDATEI(YMAX1)=YSDATEI
	. . . . . IF YSFELD(YI)="" SET YSFELD(YI)=" "
	. . . . . FOR YMAX1=1:1:YMAX DO
	. . . . . . SET YMAX2=YMAX1
	. . . . . . IF YMAX=1 SET YMAX2=200  ;ANZAHL DER ";" FELDER IN DATENFELD
	. . . . . . IF YI=1 DO
	. . . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU($PIECE(YSFELD(YI),";",YMAX1,YMAX2),1),1,150)  ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE($PIECE(YSFELD(YI),";",YMAX1,YMAX2),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","""_YSFELD(YMAX1,YI)_""""
	. . . . . . IF YI'=1 DO  ;TYBD;NEU WEGEN FEHLER; WENN MEHRFACH UND UNTERSORT, DANN WURDE NUR DAS ERSTE FELD GENOMMEN
	. . . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)  ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","""_YSFELD(YMAX1,YI)_""""
	. . . . FOR YMAX1=1:1:YMAX DO
	. . . . . SET YQ=1
	. . . . . FOR YI=1:1:MAXKEY SET KEY=$PIECE(YKEY,",",YI) SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","""_KEY_"""" IF KEY="" SET YQ=0
	. . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_")"
	. . . . . QUIT:YQ=0
	. . . . . KILL @YSDATEI(YMAX1)
	. ;-------------------------------------
	. ;IF $GET(%FELD1)'="" IF $GET(YFORM)'=""  SET YVOR=$GET(^WWW120(0,YFORM,1)) DO   ;Change Date
	. SET $PIECE(YVOR,Y,29)=$$$YES  ;When no YFORM, always log changes ; TYBD;18,11,2003
	. IF $GET(YFORM)'=""  SET YVOR=$GET(^WWW120(0,YFORM,1)) 
	. DO                            ;Change Date ;FIS;14.11.03;24627
	. . NEW YI,YCHECK
	. . SET YCHANGED = $$$NO  ;NICHT GEÄNDERT ;Not 
	. . ;QUIT:$TRANSLATE($GET(YFELD),".0|, """)=$TRANSLATE($GET(%FELD1),".0|, """)  ;GLEICH
	. . QUIT:$GET(YFELD)=$GET(%FELD1)  ;KEINE ÄNDERUNG;FIS;20.07.04 ;no alteration 
	. . SET YCHANGED = $$$YES  ;GEÄNDERT
	. . ;QUIT:$TRANSLATE($GET(YFELD),".|, """)=$TRANSLATE($GET(%FELD1),".|, """)  ;UNWESENTLICHE ÄNDERUNG;FIS;20.07.04
	. . SET YCHECK(1)=$TRANSLATE($GET(YFELD),".|, """)
	. . SET YCHECK(2)=$TRANSLATE($GET(%FELD1),".|, """)
	. . ;
	. . set fldDateModified = +$piece(YVOR,Y,27)       ; 02-Jan-2007
	. . set fldModifiedBy   = +$piece(YVOR,Y,28)
	. . FOR YI=1,2 IF fldDateModified SET $PIECE(YCHECK(YI),Y,fldDateModified)=""  ;PRÜFUNG OHNE ÄNDERUNGSDATUM, DA MEISTENS $H -> +$H GEWANDELT ;FIS;27.08.04;26327
	. . QUIT:YCHECK(1)=YCHECK(2)  ;UNWESENTLICHE ÄNDERUNG;FIS;27.08.04;26327
	. . QUIT:$PIECE(YVOR,Y,11)'=YDATEI  ;FALSCHE VORGABE DER DATEI;TYBD;31,1,2004;
	. . IF $GET(%FELD1)'="" IF fldDateModified SET $PIECE(YFELD,Y,fldDateModified) = $HOROLOG
	. . IF $GET(%FELD1)'="" IF fldModifiedBy   SET $PIECE(YFELD,Y,fldModifiedBy)   = $GET(YBED)
	. . ;
	. . if $get(^SysSetup(15069))&&($get(YDATEI)="INDRPDEMAND")&&$$$INDRPDEMANDDemandClosed(YFELD)&&'$$$INDRPDEMANDDemandClosed(%FELD1) do StackDump^COMDebug(+$h_" Demand closed",YKEY) // SR15069
	. . ;
	. . IF $PIECE(YVOR,Y,29)=$$$YES DO  ;PROTOKOLLDATEI   ; $$$WWW120ModificationsProtocol
	. . . QUIT:YKEY=""                 ;TYBD;12,10,2004
	. . . quit:YDATEI=""               ; SRBR014901
	. . . quit:$get(YBED)=""           ; SRBR014901
	. . . NEW dteToday,strKeyTR,tmeToday
	. . . set dteToday = $horolog                              ; 02-Jan-2007
	. . . set tmeToday = $piece(dteToday,",",2),dteToday = +dteToday
	. . . set strKeyTR = $translate(YKEY,"/",",")
	. . . FOR  QUIT:'$DATA(^WWWPRO(YM,YDATEI,dteToday,tmeToday,YBED,strKeyTR,0,1))  SET tmeToday=tmeToday+.1
	. . . SET ^WWWPRO(YM,YDATEI,dteToday,tmeToday,YBED,strKeyTR,0,1) = $GET(%FELD1)   ; old version
	. . . SET ^WWWPRO(YM,YDATEI,dteToday,tmeToday,YBED,strKeyTR,1,1) = YFELD          ; new version
	. . . SET ^WWWLAST(YM,YDATEI,strKeyTR,$HOROLOG,1)                = YFELD
	. ;
	. ;-------------------------------------
	. ;  ACTUAL SAVE
	. ;-------------------------------------
	. SET YA=$$^WWWSETS(SCHLUESSEL,YFELD,.strStatus)                ;SPEICHERN DATENSATZ ;Save data record  ; SR15571
	. if $$$ISERR(strStatus) || (YA'=$$$QSave) set YOK = $$$HardFail QUIT                                   ; SR15571, SR14114
	. set strStatus = $$ConvertOnSave^COMConversion(YDATEI,YKEY)   ; SR15622 Version 1 => Version 2
	. if $$$ISERR(strStatus) set YOK = $$$HardFail QUIT
	. ;
	. ;-------------------------------------
	. ;
	. ;BITMAP - Save for new record      ;18.06.2003;TYBD
	. ; WWW001 (YDATA) : D24 : Bit Map Index Active (bln)          D25 : Bitmap XREF Class
	. ;-------------------------------------
	. IF SORTCHANGE=$$$YES IF (+$PIECE(YDATA,Y,24)=$$$YES) || ($DATA(^WWW001B(0,YDATEI))) || ($PIECE(YDATA,Y,25)'="") DO
	. . SET OK=$$^WWWBITSET(YDATEI,YKEY,$$$BitMapSet,YFELD,,$GET(YBITLIST),,WWWYM,$PIECE(YDATA,Y,25))   ;BITMAP;18.06.2003;TYBD ;bit map 
	. IF $GET(YUSER)'="" IF $GET(YFIX)'=1 SET ^WWW006(0,+$HOROLOG,$TRANSLATE(SCHLUESSEL,",()""",".//"),1)=YUSER_Y_$PIECE($HOROLOG,",",2)
	. ;-------------------------------------
	. SET YOK = $$$SaveOkay
	. ;IF YOK = $$$SaveOkay IF NEU'=0 SET YOK=NEU  ;KEINE AENDERUNG DES DATENSATZES ; 02-Jan-2007
	. IF NEU'=0 SET YOK=NEU  ;KEINE AENDERUNG DES DATENSATZES   ; record not changed
	. IF SORTCHANGE=$$$YES IF $PIECE($GET(YDATA),Y,8)'=4 DO  ;NICHT BEI CACHÉ ;Not next to 
	. . ;IF '$DATA(YSKEY) DO ^WWWSORTKEY(YDATEI) ;IST SCHON GESETZT;TYBD;28,10,2004
	. . QUIT:$GET(YTIMEFORM)=$$$YES                      ;ZEITABHÄNIGE
	. . IF $PIECE($GET(^WWW001(0,YDATEI,1)),Y,8)=6 QUIT  ;ABACUS
	. . ;S %FELD1=@SCHLUESSEL
	. . ;SET %FELD1=$$^WWWSETL(SCHLUESSEL)  ;TYBD;21,11,2003; JETZT YFELD
	. . SET SKEY=""
	. . FOR  SET SKEY=$ORDER(YSKEY(SKEY)) QUIT:SKEY=""  DO
	. . . KILL YSFELD
	. . . KILL YSDATEI
	. . . NEW YMAX,YMAX1,YMAX2,YFILES
	. . . SET YFILES=YDATEI_"s"
	. . . IF $PIECE(YDATA,Y,23)'="" SET YFILES=$PIECE(YDATA,Y,23)  ;ANDERE DATEI ;data file 
	. . . //SET YSDATEI="^"_YFILES_"("_WWWYM_SKEY
	. . . SET YSDATEI="^"_YFILES_"("_strYM_SKEY
	. . . IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI UND VOL ;UCI And 
	. . . . SET YSDATEI="^["""_$PIECE(YDATA,Y,12)_""","""_$PIECE(YDATA,Y,13)_"""]"_$PIECE(YSDATEI,"^",2,999)
	. . . SET YMAX=1
	. . . SET YSDATEI(YMAX)=YSDATEI
	. . . FOR YI=1:1 SET YLFN=$PIECE(YSKEY(SKEY),",",YI) QUIT:YLFN=""  DO
	. . . . ;IF $EXTRACT(YLFN)="F" I $PIECE(YFELD,Y,+$EXTRACT(YLFN,2,9))=$PIECE(%FELD1,Y,+$EXTRACT(YLFN,2,9)) Q  ;TYBD;21,11,2003
	. . . . IF $EXTRACT(YLFN)="F" SET YSFELD(YI)=$PIECE(YFELD,Y,+$EXTRACT(YLFN,2,9))  ;TYBD;JETZT YFELD ;presently 
	. . . . IF $EXTRACT(YLFN)="K" SET YSFELD(YI)=$PIECE(YKEY,",",+$EXTRACT(YLFN,2,9))
	. . . . IF YI=1 DO                                          ;WENN ERSTER KEY ;when first KEY 
	. . . . . FOR  QUIT:$EXTRACT(YSFELD(YI))'=";"  SET YSFELD(YI)=$EXTRACT(YSFELD(YI),2,200)
	. . . . . IF $EXTRACT($REVERSE(YSFELD(YI)))=";" FOR  QUIT:$EXTRACT($REVERSE(YSFELD(YI)))'=";"  SET YSFELD(YI)=$REVERSE($EXTRACT($REVERSE(YSFELD(YI)),2,200))
	. . . . . SET YMAX=$LENGTH(YSFELD(YI),";")                  ;ANZAHL DER ";" FELDER IM FELD
	. . . . . FOR YMAX1=1:1:YMAX SET YSDATEI(YMAX1)=YSDATEI
	. . . . IF YSFELD(YI)="" SET YSFELD(YI)=" "
	. . . . FOR YMAX1=1:1:YMAX DO
	. . . . . SET YMAX2=YMAX1
	. . . . . IF YMAX=1 SET YMAX2=200  ;ANZAHL DER ";" FELDER IN DATENFELD
	. . . . . ; 02-Jan-2007 use DO so don't repeat F/K tests
	. . . . . IF YI=1 DO
	. . . . . . IF $EXTRACT(YLFN)="F" DO
	. . . . . . . IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU($PIECE(YSFELD(YI),";",YMAX1,YMAX2),1),1,150)     ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . . IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE($PIECE(YSFELD(YI),";",YMAX1,YMAX2),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . IF $EXTRACT(YLFN)="K" DO
	. . . . . . . IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . . . IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","""_YSFELD(YMAX1,YI)_""""
	. . . . . ;
	. . . . . IF YI'=1 DO  ;TYBD;NEU WEGEN FEHLER; WENN MEHRFACH UND UNTERSORT, DANN WURDE NUR DAS ERSTE FELD GENOMMEN
	. . . . . . IF $EXTRACT(YLFN)="F" DO
	. . . . . . . IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)     ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . . IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . . IF $EXTRACT(YLFN)="K" DO
	. . . . . . . IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . . . IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","""_YSFELD(YMAX1,YI)_""""
	. . . ;
	. . . FOR YMAX1=1:1:YMAX DO
	. . . . SET YQ=1
	. . . . FOR YI=1:1:MAXKEY DO
	. . . . . SET KEY=$PIECE(YKEY,",",YI)
	. . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","""_KEY_""""
	. . . . . IF KEY="" SET YQ=0
	. . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_")"
	. . . . QUIT:YQ=0
	. . . . SET @YSDATEI(YMAX1)=""
	
	;vvvvvvv;end save transaction;FIS;08-Aug-2008;SR15835
	;+++++++++++++++++++++++++++++++++++++++
	; VVVVV :SR15833  ; GRF SR15947 reversion and correction
	if $$$ISERR(strStatus) && (YOK = $$$HardFail) {
		do ForceRollBack(.strStatus)
	} else {
		if $TLEVEL>0 TCOMMIT
	}
	set $ZTRAP=strZTRAP
	;+++++++++++++++++++++++++++++++++++++++
	;^^^^^^ :SR15833 
	
	;---------------------------------------
	; Post-Save Processing
	;---------------------------------------
	
	;IF (YOK'=$$$HardFail) && (YOK'=$$$SoftFail) { ;ONLY WHEN SAVE OK;TYBD;12,2,2004   ;TYBD;31,5,2004;NOT 9;
	if YOK=$$$SaveOkay {
		if (YCHANGED=$$$YES) && ($get(YEINMAL)'=1) {
			do PopulateIndex^COMQuickSearch(YDATEI,YKEY) // SR12522
			
			SET OK=$$handleRelevantEvents^COMDCMControlModule("INTRAPREND",YDATEI,"save",YKEY,YFELD,,$$GetCheckSum^COMDCMUtilities($get(%FELD1),YVOR))  ;INTRAPREND=KENNUNG FÜR @-NET MANAGER ;to   ;SR14365
			;SET OK=$$setRelevantEvents^COMDCMControlModule("INTRAPREND",YDATEI,"save",YKEY,YFELD)  ;INTRAPREND=KENNUNG FÜR @-NET MANAGER ;to 
			IF '$PIECE(OK,Y,1) IF $GET(YBED)'="" IF $GET(YFORM)'="" SET ^WWWWV(YM,YBED,$PIECE($HOROLOG,",",1),YFORM,YKEY,1)=$PIECE($HOROLOG,",",1)_Y_$PIECE($HOROLOG,",",2)_Y_YBED_Y_$PIECE(OK,Y,2)
		}
	
		; BR014334
		; SR15316: Commented: Handled in WWW001Hook
		//set strStatus = $$ExecuteVARHook^WWW001VARHooks(YDATEI,$$$EnumWWWEVENTTYPEOnAfterSave,YKEY,.YFELD,YFORM)
		; should WWWSPEI return YOK = 0 if OnAfterSave returns error?
		;if $$$ISERR(strStatus) set YOK = 0 
		
		// SR15316
		set strStatus = $$ExecuteHook^WWW001Hook(YDATEI,$$$EnumWWWEVENTTYPEOnAfterSave,YKEY,.YFELD,YFORM,%FELD1)		//SR15304
		// FIXME : should postprocessing failure lead to rollback of save? (We are after TCOMMIT/TROLLBACK here)
		//         How do we resubmit post-processing in the event of a failure?
	}
	
	QUIT YOK
	
	
ForceRollBack(&strStatus) ; Manual rollback enty point 
	;-------------------------------------------------------------------------------
	; History:
	; 30-Sep-2008	GRF		SR15947: reset $zerror
	; 17-Sep-2008	Luke	SR15833: created
	;-------------------------------------------------------------------------------
	;+++++++++++++++++++++++++++++++++++++++
	TROLLBACK	
	;+++++++++++++++++++++++++++++++++++++++
 
	set $ZERROR = strStatus
	do BACKGROUND^WWWERROR  ;save error log
	set $ZERROR = ""
	
	quit 
	
	
OnSaveError
	;-------------------------------------------------------------------------------
	;  Handle Syntax Error during Save Transaction
	;
	; ByRefs:  strStatus (Error Text to handle in WWWSAVE)
	;          strZTRAP  (Original Error Handling)
	;
	; Returns: $$$HardFail
	;
	; History:
	; 08-Aug-2008	FIS		SR15835: created
	;-------------------------------------------------------------------------------
	new strError
	
	set strError = $ZERROR
	;+++++++++++++++++++++++++++++++++++++++
	TROLLBACK	
	;+++++++++++++++++++++++++++++++++++++++
	if (strError = "") {  //save failed without real error
		quit $$$SoftFail          ; FIXME : <GRF> Is this reaso]]><![CDATA[nable?  May be syntax error or similar in ExecuteOn... command.
	}	
	set $ZERROR = strError
	do BACKGROUND^WWWERROR  ;save error log
	; "An Internal ERROR Has Occurred In Your Application."
	set strStatus = $$$MakeStatus($$^WWWTEXT(387)_"|Info : "_$piece($piece($ZERROR,"<",2),">",1)_"|Prog.: "_$piece($ZERROR,">",2,9))  ;display error message in WWWSAVE
	;set $ZTRAP  = strZTRAP
	set $ZERROR = ""
	quit $$$HardFail
	
	
SAVE(YDATEI,YKEY,YFELD,YFIX,YNEWSORT,YEINMAL)
	;-------------------------------------------------------------------------------
	;   same as normal
	; 
	; Params:
	; FIXME : Should this have strStatus as well? <GRF>
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 28-Aug-2006	JW		SR14803: Return YOK
	;-------------------------------------------------------------------------------
	NEW YFORM,YVOR,YOK,YSKEY
	
	SET YOK=$$WWWSPEI($GET(YDATEI),$GET(YKEY),$GET(YFELD),$GET(YFIX),$GET(YNEWSORT),$GET(YEINMAL))
	QUIT YOK
	
]]></Routine>
</Export>