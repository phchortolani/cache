<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMConst" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMConst
	#include COMSYS
	#include COMConst
	#include WWWConst
	
AlertInScript(str)
	;-------------------------------------------------------------------------------
    ; Display a message box in script tags..
    ;
    ; Returns:
    ;
    ; History:
    ; 29-Jun-2005	RobertW	SR12230: Put type parameter in.
    ; 26-May-2005	shobby	Moved from FINSYS (SR12279)
    ; 22-Feb-2005	JW		SR11405: Created
	;-------------------------------------------------------------------------------
	set str = ##class(%CSP.Page).QuoteJS($get(str))
	;write "<script type='text/javascript'>alert("_str_");</script>"
	$$$StartScript()
	write "alert("_str_");"
	$$$EndScript()
	quit
 
 
	
Alert(str)
	;-------------------------------------------------------------------------------
    ; Display a message box
    ;
    ; Returns:
    ;
    ; History:
    ; 26-May-2005	shobby	Moved from FINSYS (SR12279)
    ; 02-Mar-2004	shobby	Created (Stole from Sale)
	;-------------------------------------------------------------------------------
	set str = ##class(%CSP.Page).QuoteJS(str)
	$$$StartScript()
	write "alert("_str_");"
	$$$EndScript()
 
	quit
 
VBConfirm(str,type,heading)
	; Not used yet
	set str = ##class(%CSP.Page).QuoteJS(str)
	set heading = ##class(%CSP.Page).QuoteJS(heading)
	&js<var x=VBConfirm(#(str)#,#(type)#,#(heading)#);>
	quit
 
 
ShowPrompt(pstrPrompt,pstrCallback,pstrParam)
	;-------------------------------------------------------------------------------
    ; Prompts the user for input
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Mar-2007	shobby	SRBR014399
	;-------------------------------------------------------------------------------
	;
	set pstrPrompt=$$$JSText(pstrPrompt)
	set pstrParam=$$$JSText(pstrParam)
	&js<var strResult=prompt('#(pstrPrompt)#',#(pstrParam)#,'');
	if (strResult!='') CallBackNow('#(pstrCallback)#',strResult);
	>
	quit
	
	 
Data(pintPos,FieldName,%obj,%value)
	;-------------------------------------------------------------------------------
	; See new macro definitions in *Const.inc files for faster set/get processing
	; This routine takes approximately 3.5 times longer to perform those actions.
	;-------------------------------------------------------------------------------
	if $data(%value) {
		set $piece(%obj,Y,pintPos)=%value
		quit %obj
	} elseif $data(%obj) {
		quit $piece(%obj,Y,pintPos)
	} else {
		quit FieldName
	}
	quit
	
GetPropertyName(pidClass,pintField="",pintKey="",pintCalcField="")
	;-------------------------------------------------------------------------------
	; Used by macros with "Str" prefix to get property names.
	; Can return either primary keys or data fields.
	;
	; Returns:String
	;
	; History:
	; 08-Feb-2006	Steve S	SR13474: Support Calculated fields
	; 17-Aug-2005	JW&SS	Actually get a piece.
	; 15-Jul-2005	shobby	SR12754:Replaced LANGUAGE global (not always reliable)
	; 09-Dec-2004	Paul K	Added ^LanguageTest global for debug purposes (SR11196)
	; 04-May-2004   Paul K	Created
	;-------------------------------------------------------------------------------
	new strName
 
	; FIXME: This routine is incorrect. This should be just be calling WWWFELDNAME to take into
	; 		 account customisations.
	
	if $get(SPRACHE)="" do ^WWWVAR
	set strName=""
	if pidClass'="" {
		if pintField'="" {
			set strName=$$$WWW0031PropertyDescription($get(^WWW0031(0,pidClass,pintField,SPRACHE,1)))
			if strName="" set strName=$$$WWW002TextInForms($get(^WWW003(0,pidClass,pintField,1)))
		} elseif pintKey'="" {
			set strName=$$$WWW0021PropertyDescription($get(^WWW0021(0,pidClass,pintKey,SPRACHE,1)))
			if strName="" set strName=$$$WWW002TextInForms($get(^WWW002(0,pidClass,pintKey,1)))
		} elseif pintCalcField'="" { ;SR13474
			set strName=$$$WWW003CalcLangDescription($get(^WWW003CalcLang(0,pidClass,pintCalcField,SPRACHE,1)))
			if strName="" set strName=$$$WWW003CalcCaption($get(^WWW003Calc(0,pidClass,pintCalcField,1)))
		}
	}
	
	if $get(^LanguageTest)=1 {
		set strName="<span title='Class: "_pidClass_" Field: "_pintField_" Key: "_pintKey_"' style='color:green'>"_strName_"</span>"
	}
	
	quit strName
 
 
GetClassName(pidClass="")
	;-------------------------------------------------------------------------------
	; Return class name (internationalised)
	;
	; Returns:String
	;
	; History:
	; 17-Aug-2005	JW&SS	SR13272: Created (copied from GetPropertyName)
	;-------------------------------------------------------------------------------
	new strName
	
	if $get(SPRACHE)="" do ^WWWVAR
	set strName=""
	if pidClass'="" {
		set strName=$$$WWW0011ClassDescription($get(^WWW0011(0,pidClass,SPRACHE,1)))
		if strName="" set strName=$$$WWW001ClassDescription($get(^WWW001(0,pidClass,1)))
	}
	if $get(^LanguageTest)=1 {
		set strName="<span title='Class: "_pidClass_"' style='color:green'>"_strName_"</span>"
	}
	quit strName
 
 
Generate(pidModule="")
	;-------------------------------------------------------------------------------
	; When changes are made to the class structures in @NetManager the macros
	; in the *Const.inc files are updated with the appropriate values.
	;
	; History:
	; 19-Jan-2007	RPW		SR15121: Create macros for COMParameters
	; 07-Apr-2006	SC		SR14196: Modified to allow COMConst to remove Ampersand character.
	; 05-Jan-2004	GRF		SR11415: Remove repeated translation; Single quote
	; 						already in translation string; macro used
	; 20-Dec-2004	GRF		Force WWWVAR if not set up when run from command line
	; 28-Oct-2004	GRF		SR10478: Add Class prefix "CST"
	; 05-Oct-2004	SCR		Added "'" to strip list for Enums (SR10522)
	; 29-Sep-2004	Paul K	Added param to speed up Constant creation
	; 05-May-2004	GRF		Remove "Sale" from idClasses; Use $increment
	; 12-Apr-2003	Paul K	Added INAUFLAYBY
	; 05-Apr-2004	lw		Added WF
	; 05-apr-2004	lw		Added VAR
	; 20-jan-2004	lwaugh	Added AEP
	; 11-Aug-2003   Paul K	Added "/" to strip list for Enums
	; 04-Jul-2003	Paul K	Pass YM into SaveGlobal
	; 01-Jul-2003	Paul K	Added Save^SALUtils
	; 29-May-2003	paul k	Added Quotes around Enums
	; 23-May-2003	shobby	stripped out () and simplified code
	; 23-May-2003	shobby	Included REP
	;-------------------------------------------------------------------------------
	new idModule,gINC,lang,idClass,idParam,intParamNum,strParam,strClass,arrModules,strParamKey,strQuery
	new intLength
	
	if $get(Y)="" do ^WWWVAR
	
	do GetClassesForModule(pidModule,.arrModules)
	
	if pidModule="" {
		kill ^rINC("Const",0)
		set ^rINC("Const",0)=$horolog
		set ^rINC("Const",0,$increment(^rINC("Const",0,0)))=" ; All Include Files"
	}
	set idModule=""
	for {
		set idModule=$order(arrModules(idModule))
		quit:idModule=""
		
		set intLength=$length(idModule) // SR15121
		
		set lang="EN"
		if pidModule="" {
			set ^rINC("Const",0,$increment(^rINC("Const",0,0)))="#include "_idModule_"Const"
		}
		set gINC="^rINC("""_idModule_"Const"",0)"
		kill @gINC
		set @gINC=$horolog
		set @gINC@($increment(@gINC@(0)))=" ; Enumerated values for Cache Datatypes"
		set @gINC@($increment(@gINC@(0)))=" ; Generated on "_$zdate($horolog,2)_" at "_$ztime($piece($horolog,",",2))
		set @gINC@($increment(@gINC@(0)))=" ;"
		set @gINC@($increment(@gINC@(0)))="#def1arg SaveGlobal(%obj) $$Save^SALUtils(YM,%obj)"
		set @gINC@($increment(@gINC@(0)))="#define Index(%obj) $$Index^COMUtils(%obj)"
		
		set idClass=""
		for {
			set idClass=$order(arrModules(idModule,idClass))
			quit:idClass=""
			
			do GenerateForClass(gINC,idClass)
	 	}
		set idParam=idModule
		for {
			set idParam=$order(^WWW101(0,idParam))
			quit:$extract(idParam,1,intLength)'=idModule // SR15121
			
			set intParamNum=""
			for {
				set intParamNum=$order(^WWW101(0,idParam,lang,intParamNum))
				quit:intParamNum=""
				
				set strParam=$piece($get(^WWW101(0,idParam,lang,intParamNum,1)),"~",1) //SR14196
				set strParam=$translate(strParam,"³_+@-.[],()/'´ &") //SR14196
				set strClass=$translate(idParam,"³_+@-.[],()/")
				set @gINC@($increment(@gINC@(0)))="#define Enum"_strClass_strParam_" """_intParamNum_""""
			}
		}
		
		// SR15121
		set strQuery="^COMParameter(0,"""_idModule_""")"
		for {
			set strQuery=$query(@strQuery)
			quit:strQuery=""
			set idParam=$qsubscript(strQuery,2)
			set strParamKey=$qsubscript(strQuery,3)
			quit:$extract(idParam,1,intLength)'=idModule
			set strParam=$piece($get(^COMParameter(0,idParam,strParamKey,1)),"~",1) //SR14196
			set strParam=$translate(strParam,"³_+@-.[],()/'´ &") //SR14196
			set strClass=$translate(idParam,"³_+@-.[],()/")
			
			set @gINC@($increment(@gINC@(0)))="#define CPEnum"_strClass_strParam_" """_strParamKey_"""" // Use CP so that we can have same names as Application Parameters
		}

		// Export the related Cache include to the file system
		do ##class(SourceControl.data.SourceBase).ExportAsCleanXML(idModule_"Const.INC")
	}
 	do ROUTINE^%R(idModule_"Const.INC",,,"LCS")
	quit
	
GenerateForClass(gINC,pidClass)
    ;-------------------------------------------------------------------------------
    ;
    ;-------------------------------------------------------------------------------
	new FieldName,FormName,intField
	
	if pidClass'="" {
		set intField=""
		for {
			set intField=$order(^WWW003(0,pidClass,intField))
			quit:intField=""
			
			set FieldName=$piece($get(^WWW003(0,pidClass,intField,1)),"~",25)  ; Property Name
			set FormName =$piece($get(^WWW003(0,pidClass,intField,1)),"~",2)   ; Caption in Forms
			do DefineConst(gINC,intField,pidClass,FieldName,FormName,1)
		}
		
		set intField=""
		for {
			set intField=$order(^WWW002(0,pidClass,intField))
			quit:intField=""
			
			set FieldName=$piece($get(^WWW002(0,pidClass,intField,1)),"~",25)  ; Property Name
			set FormName =$piece($get(^WWW002(0,pidClass,intField,1)),"~",2)   ; Caption in Forms
			do DefineConst(gINC,intField,pidClass,FieldName,FormName)
		}
		set @gINC@($increment(@gINC@(0)))=""
	}
	quit
	
DefineConst(gINC,intField,idClass,FieldName,FormName,pblnField=0)
	;-------------------------------------------------------------------------------
	; Accommodates both old and new methods setting records.
	;
	; History:
	; 29-Dec-2004	Paul K	Added 'Fld' definitions for primary keys.
	; 01-Dec-2004	shobby	Include INLIEF (SR10061)
	; 11-Oct-2004	SCR		Handle ´_´ in Field Name (SR10581)
	; 05-May-2004	GRF		Use $increment
	; 04-May-2004   Paul K	Created
	;-------------------------------------------------------------------------------
	set idClass  =$translate(idClass,".","")
	set FieldName=$translate(FieldName,"_","")
	
	;if ($extract(idClass,1,3)'="INA")&&($extract(idClass,1,3)'="INW")&&($extract(idClass,1,3)'="INE")&&($extract(idClass,1,3)'="INL") {
	;	set @gINC@($increment(@gINC@(0)))="#def1arg Dt"_idClass_FieldName_"(%obj) $$Data^COMConst("_intField_","""_FormName_""",%obj)"
	;}
	
	if pblnField {
		set @gINC@($increment(@gINC@(0)))="#define "_idClass_FieldName_"(%obj) $piece(%obj,"""_Y_""","_intField_")"
		set @gINC@($increment(@gINC@(0)))="#define Fld"_idClass_FieldName_" "_intField
		set @gINC@($increment(@gINC@(0)))="#define Str"_idClass_FieldName_" $$GetPropertyName^COMConst("""_idClass_""","_intField_")"
	} else {
		set @gINC@($increment(@gINC@(0)))="#define Fld"_idClass_FieldName_" "_intField
		set @gINC@($increment(@gINC@(0)))="#define Str"_idClass_FieldName_" $$GetPropertyName^COMConst("""_idClass_""",,"_intField_")"
	}
	quit
	
SetAutoGenerate()
	;-------------------------------------------------------------------------------
	; Turns on the auto generation of the SALConst.INC, COMConst.INC
	; and FINConst.INC.
	; 
	; History:
	; 13-Jan-2004	Paul K	Added Setting of WWW101 after save.
	; 22-Sep-2003   ms-sh	Added call to GenerateSaleLineTypes
	;-------------------------------------------------------------------------------
	set $piece(^WWW120(0,"WWW003",1),"~",16)="do ^WWW003 do Generate^COMConst(YKEY)"
	set $piece(^WWW120(0,"WWW101",1),"~",16)="do Generate^COMConst(YKEY)"
	quit 1
 
GetClassesForModule(pstrModule,parrModules) 
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
    ; 19-Jan-2007	RPW			SR15121: Use Module call as it's doing the same thing.
    ; 10-Apr-2006	shobby		SR014007: Include Module TS
    ;-------------------------------------------------------------------------------*/
	;
	new idConst,lstClasses,idClass,objConst
	
	set lstClasses=""
	
	set pstrModule=$$Module(pstrModule) // SR15121
		
	if pstrModule="" {
		set idConst=""
	} else {
		set idConst=$order(^COMConst(0,pstrModule),-1)
	}
	for {
		set idConst=$order(^COMConst(0,idConst))
		quit:$extract(idConst,1,$length(pstrModule))'=pstrModule
		quit:idConst=""
		
		set objConst=$get(^COMConst(0,idConst,1))
		if $$$COMConstGenerate(objConst) {
			if $$$COMConstSubClasses(objConst) {
				set idClass=$order(^WWW002(0,idConst),-1)
				for {
					set idClass=$order(^WWW002(0,idClass))
					quit:$extract(idClass,1,$length(idConst))'=idConst
					
					set parrModules($$Module(idClass),idClass)=""
				}
			} else {
				set parrModules($$Module(idConst),idConst)=""
			}
		}
		
	}
	quit lstClasses
 
Module(pidClass) 
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Apr-2006	shobby		SR014007: Include Module TS
    ;-------------------------------------------------------------------------------*/
	;
	if $extract(pidClass,1,2)="IN" {
		set pidClass="IN"
	} elseif $extract(pidClass,1,2)="TS" {
		set pidClass="TS"
	} elseif $extract(pidClass,1,2)="WF" {
		set pidClass="WF"
	} else {
		set pidClass=$extract(pidClass,1,3)
	}
	quit pidClass
	
]]></Routine>
</Export>