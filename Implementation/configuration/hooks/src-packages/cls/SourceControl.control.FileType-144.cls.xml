<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.control.FileType">
<ClassType/>
<Import>VAR.infra.util</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>
<UDLText name="T">
<Content>
/*****************
 * Types of files
 *   Access like this: 
 *   ##class(SourceControl.FileType).%GetParameter("DEBUG")
 ********************/
</Content>
</UDLText>


<Parameter name="UNKNOWN">
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Parameter name="TXTUNKNOWN">
<Type>%String</Type>
<Default>0</Default>
</Parameter>


<Parameter name="MAC">
<Type>%Integer</Type>
<Default>1</Default>
</Parameter>


<Parameter name="TXTMAC">
<Type>%String</Type>
<Default>mac</Default>
</Parameter>


<Parameter name="INC">
<Type>%Integer</Type>
<Default>2</Default>
</Parameter>


<Parameter name="TXTINC">
<Type>%String</Type>
<Default>inc</Default>
</Parameter>


<Parameter name="CLS">
<Type>%Integer</Type>
<Default>3</Default>
</Parameter>


<Parameter name="TXTCLS">
<Type>%String</Type>
<Default>cls</Default>
</Parameter>


<Parameter name="GBL">
<Type>%Integer</Type>
<Default>4</Default>
</Parameter>


<Parameter name="TXTGBL">
<Type>%String</Type>
<Default>gbl</Default>
</Parameter>


<Parameter name="PRJ">
<Type>%Integer</Type>
<Default>5</Default>
</Parameter>


<Parameter name="TXTPRJ">
<Type>%String</Type>
<Default>prj</Default>
</Parameter>


<Parameter name="MENU">
<Type>%Integer</Type>
<Default>6</Default>
</Parameter>


<Parameter name="TXTMENU">
<Type>%String</Type>
<Default>menu</Default>
</Parameter>


<Parameter name="NMCLASS">
<Type>%Integer</Type>
<Default>7</Default>
</Parameter>


<Parameter name="TXTNMCLASS">
<Type>%String</Type>
<Default>nmclass</Default>
</Parameter>


<Parameter name="TXTCUSTOMNMCLASS">
<Type>%String</Type>
<Default>nmcustomclass</Default>
</Parameter>


<Parameter name="LANGUAGETEXT">
<Type>%Integer</Type>
<Default>8</Default>
</Parameter>


<Parameter name="TXTLANGUAGETEXT">
<Type>%String</Type>
<Default>languagetext</Default>
</Parameter>


<Parameter name="FORM">
<Type>%Integer</Type>
<Default>9</Default>
</Parameter>


<Parameter name="TXTFORM">
<Type>%String</Type>
<Default>form</Default>
</Parameter>


<Parameter name="TXTCUSTOMFORM">
<Type>%String</Type>
<Default>customform</Default>
</Parameter>


<Parameter name="HELP">
<Type>%Integer</Type>
<Default>10</Default>
</Parameter>


<Parameter name="TXTHELP">
<Type>%String</Type>
<Default>help</Default>
</Parameter>


<Parameter name="PARAMETERS">
<Type>%Integer</Type>
<Default>11</Default>
</Parameter>


<Parameter name="TXTPARAMETERS">
<Type>%String</Type>
<Default>parameters</Default>
</Parameter>


<Parameter name="CUSTOMPARAMETERS">
<Type>%Integer</Type>
<Default>12</Default>
</Parameter>


<Parameter name="TXTCUSTOMPARAMETERS">
<Type>%String</Type>
<Default>customparameters</Default>
</Parameter>


<Parameter name="CHARPARAMETERS">
<Type>%Integer</Type>
<Default>13</Default>
</Parameter>


<Parameter name="TXTCHARPARAMETERS">
<Type>%String</Type>
<Default>charParameters</Default>
</Parameter>


<Parameter name="APPPARAMETERS">
<Type>%Integer</Type>
<Default>14</Default>
</Parameter>


<Parameter name="TXTAPPPARAMETERS">
<Type>%String</Type>
<Default>appParameters</Default>
</Parameter>


<Parameter name="SYSPARAMETERS">
<Type>%Integer</Type>
<Default>15</Default>
</Parameter>


<Parameter name="TXTSYSPARAMETERS">
<Type>%String</Type>
<Default>sysParameters</Default>
</Parameter>


<Parameter name="USERPARAMETERS">
<Type>%Integer</Type>
<Default>16</Default>
</Parameter>


<Parameter name="TXTUSERPARAMETERS">
<Type>%String</Type>
<Default>userParameters</Default>
</Parameter>


<Parameter name="TXTCUSTOMUSERPARAMETERS">
<Type>%String</Type>
<Default>customUserParameters</Default>
</Parameter>


<Parameter name="TXTDICTIONARY">
<Type>%String</Type>
<Default>dictionary</Default>
</Parameter>


<Parameter name="CSP">
<Type>%Integer</Type>
<Default>17</Default>
</Parameter>

<UDLText name="T">
<Content>
//CSP,CSR,CSS,XML,JS all are in the same directory (csp), when edited by Studio

</Content>
</UDLText>


<Parameter name="TXTCSP">
<Type>%String</Type>
<Default>csp</Default>
</Parameter>


<Parameter name="CSR">
<Type>%Integer</Type>
<Default>18</Default>
</Parameter>


<Parameter name="TXTCSR">
<Type>%String</Type>
<Default>csr</Default>
</Parameter>


<Parameter name="CSS">
<Type>%Integer</Type>
<Default>19</Default>
</Parameter>


<Parameter name="TXTCSS">
<Type>%String</Type>
<Default>css</Default>
</Parameter>


<Parameter name="XML">
<Type>%Integer</Type>
<Default>20</Default>
</Parameter>


<Parameter name="TXTXML">
<Type>%String</Type>
<Default>xml</Default>
</Parameter>


<Parameter name="JS">
<Type>%Integer</Type>
<Default>21</Default>
</Parameter>


<Parameter name="TXTJS">
<Type>%String</Type>
<Default>js</Default>
</Parameter>


<Parameter name="METADATA">
<Type>%Integer</Type>
<Default>22</Default>
</Parameter>


<Parameter name="TXTMETADATA">
<Type>%String</Type>
<Default>metadata</Default>
</Parameter>


<Parameter name="FAVORITES">
<Type>%Integer</Type>
<Default>23</Default>
</Parameter>


<Parameter name="TXTFAVORITES">
<Type>%String</Type>
<Default>favorites</Default>
</Parameter>


<Parameter name="TXTCUSTOMFAVORITES">
<Type>%String</Type>
<Default>customfavorites</Default>
</Parameter>


<Parameter name="TXTRESOURCES">
<Type>%String</Type>
<Default>resources</Default>
</Parameter>


<Parameter name="TXTREPORTDEFINITIONS">
<Type>%String</Type>
<Default>jrxml</Default>
</Parameter>


<Parameter name="TXTCOMPILEDREPORTS">
<Type>%String</Type>
<Default>jasper</Default>
</Parameter>


<Parameter name="TXTJAVALIBS">
<Type>%String</Type>
<Default>jar</Default>
</Parameter>


<Method name="GetType">
<Description><![CDATA[
Find out the type of file from its internal name]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>internalName:%String="&quot;</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set type = ..#UNKNOWN
	set name = ##class(Strings).LowerCase(internalName)
	set d = "." // Dot

	if (##class(Strings).EndsWith(name, d_..#TXTMAC)) {
		set type = ..#MAC
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCLS)) {
		set type = ..#CLS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTINC)) {
		set type = ..#INC
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTGBL)) {
		set type = ..#GBL
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTPRJ)) {
		set type = ..#PRJ
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCSP)) {
		set type = ..#CSP
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCSR)) {
		set type = ..#CSR
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCSS)) {
		set type = ..#CSS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTXML)) {
		set type = ..#XML
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTJS)) {
		set type = ..#JS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTFAVORITES)) {
		set type = ..#FAVORITES
	}

	quit type
]]></Implementation>
</Method>

<Method name="GetTypeByExternalName">
<Description><![CDATA[
Find out the type of file from its external name
Examples: abc.mac.xml -> mac, abc.menu -> menu, etc 

Warning: not all properties are coverded by this method. You may have to add new values to it.
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>name:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set type = ..#UNKNOWN
	set name = ##class(Strings).LowerCase(name)
	set d = "."
	set xml = ".xml"

	if (##class(Strings).EndsWith(name, d_..#TXTMAC_xml)) {
		set type = ..#MAC
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCLS_xml)) {
		set type = ..#CLS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTINC_xml)) {
		set type = ..#INC
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTGBL_xml)) {
		set type = ..#GBL
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTPRJ_xml)) {
		set type = ..#PRJ
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTMENU)) {
		set type = ..#MENU
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTNMCLASS)) {
		set type = ..#NMCLASS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCUSTOMNMCLASS)) {
		set type = ..#NMCLASS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTLANGUAGETEXT)) {
		set type = ..#LANGUAGETEXT
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTFORM)) {
		set type = ..#FORM
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCUSTOMFORM)) {
		set type = ..#FORM
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTFAVORITES)) {
		set type = ..#FAVORITES
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCUSTOMFAVORITES)) {
		set type = ..#FAVORITES
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTHELP)) {
		set type = ..#HELP
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTPARAMETERS)) {
		set type = ..#PARAMETERS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCUSTOMPARAMETERS)) {
		set type = ..#CUSTOMPARAMETERS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCSP)) {
		set type = ..#CSP
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCSR)) {
		set type = ..#CSR
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTCSS)) {
		set type = ..#CSS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTXML)) {
		set type = ..#XML
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTJS)) {
		set type = ..#JS
	}
	elseif (##class(Strings).EndsWith(name, d_..#TXTMETADATA)) {
		set type = ..#METADATA
	}

	quit type
]]></Implementation>
</Method>

<Method name="IsCustomByExternalName">
<Description><![CDATA[
Find out if the file has customization metadata
Examples: abc.nmcustomclass, def.customform
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>name:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set custom = 0
	set name = ##class(Strings).LowerCase(name)
	set dot = "."

	if ((##class(Strings).EndsWith(name, dot_..#TXTCUSTOMNMCLASS)) ||
		(##class(Strings).EndsWith(name, dot_..#TXTCUSTOMFORM)) ||
		(##class(Strings).EndsWith(name, dot_..#TXTCUSTOMFAVORITES)) ||
		(##class(Strings).EndsWith(name, dot_..#TXTCUSTOMPARAMETERS))) {
		set custom = 1
	}

	quit custom
]]></Implementation>
</Method>

<Method name="GetExtensionFromType">
<Description><![CDATA[
Gets the extension name from its type (ex: "MAC")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>type:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	quit $case(type,
		(..#MAC):(..#TXTMAC),
		(..#CLS):(..#TXTCLS),
		(..#INC):(..#TXTINC),
		(..#GBL):(..#TXTGBL),
		(..#PRJ):(..#TXTPRJ),

		(..#CSP):(..#TXTCSP),
		(..#CSR):(..#TXTCSR),
		(..#XML):(..#TXTXML),
		(..#JS):(..#TXTJS),

		(..#MENU):(..#TXTMENU),
		(..#NMCLASS):(..#TXTNMCLASS),
		(..#LANGUAGETEXT):(..#TXTLANGUAGETEXT),
		(..#FORM):(..#TXTFORM),
		(..#HELP):(..#TXTHELP),
		(..#PARAMETERS):(..#TXTPARAMETERS),
		(..#CUSTOMPARAMETERS):(..#TXTCUSTOMPARAMETERS),
		(..#FAVORITES):(..#TXTFAVORITES),

		(..#METADATA):(..#TXTMETADATA),

		:"UNKNOWN")
]]></Implementation>
</Method>

<Method name="IsIgnored">
<Description><![CDATA[
Tests to see if this internal artifact is to be ignored]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>internalName:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set type = ..GetType(internalName)

	// Is it an ignored Type or name ?
	quit ((..IsIgnoredType(type, internalName)) ||
		  (..IsIgnoredName(type, internalName)))
]]></Implementation>
</Method>

<Method name="IsIgnoredType">
<Description><![CDATA[
Tests to see if this internal artifact has a type that should be ignored]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>type:%Integer,internalName:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	// Everything that is not prj, class, mac routine, include or global
	// should be ignored
	quit $case(type, (..#MAC):$$$NO,
					 (..#CLS):$$$NO,
					 (..#INC):$$$NO,
					 (..#GBL):$$$NO,
					 (..#PRJ):$$$NO,
					 :$$$YES)
]]></Implementation>
</Method>

<Method name="IsIgnoredName">
<Description><![CDATA[
Tests to see if this internal artifact is in any ignore list]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>type:%Integer,internalName:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	quit $case(type, (..#MAC):##class(Config).IsInIgnoredList(..#TXTMAC, internalName),
					 (..#CLS):##class(Config).IsInIgnoredList(..#TXTCLS, internalName),
					 (..#INC):##class(Config).IsInIgnoredList(..#TXTINC, internalName),
					 (..#GBL):##class(Config).IsInIgnoredList(..#TXTGBL, internalName),
					 (..#PRJ):##class(Config).IsInIgnoredList(..#TXTPRJ, internalName),
					 :$$$YES)
]]></Implementation>
</Method>
</Class>
</Export>