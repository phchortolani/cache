<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.control.FileValidator">
<ClassType/>
<Import>SourceControl.data,VAR.infra.util</Import>
<ProcedureBlock>0</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="ListGeneratedRoutines">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	// Get all the routine (MAC) names
	set idMac = ""
	for {
		set idMac = $order(^rMAC(idMac))
		quit:(idMac = "")

		// Since this is the rMAC global, it only has MAC routines
		set internalName = idMac_"."_##class(FileType).%GetParameter("TXTMAC")
		set externalFileName = ##class(FileControl).GetExternalFileName(internalName)

		if (##class(%File).Exists(externalFileName) &&
			('##class(Strings).StartsWith(internalName, "%")) &&
			##class(SourceBase).IsGeneratedSource(internalName)) {
			write !, "Generated MAC: "_internalName
		}
	}
]]></Implementation>
</Method>

<Method name="ListGeneratedClasses">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	// Get all the class names
	set rs = ##class(%ResultSet).%New("%Dictionary.ClassDefinition:Summary")
 	do rs.Execute()
 	while (rs.Next()) {
    	set id = rs.Data("Name")

    	// Check if the name of class exists
    	if (id '= "") {
	    	// Check if the class *really* exists (source code)
	    	set cd = ##class(%Dictionary.ClassDefinition).%OpenId(id)
	    	if ((cd '= "") && ('cd.Deployed)) {
				set internalName = id_"."_##class(FileType).%GetParameter("TXTCLS")
				set externalFileName = ##class(FileControl).GetExternalFileName(internalName)

				if (##class(%File).Exists(externalFileName) &&
					('##class(Strings).StartsWith(internalName, "%")) &&
					##class(SourceBase).IsGeneratedSource(internalName)) {
					write !, "Generated CLS: "_internalName
				}
	    	}
    	}
	}
]]></Implementation>
</Method>
</Class>
</Export>