<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.data.global.NetManagerGeneralMetadata">
<Description><![CDATA[
Mainly for SQL Reserved Words]]></Description>
<ClassType/>
<Import>SourceControl.control,SourceControl.data</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>GlobalBase</Super>

<Method name="ExportAll">
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set strStatus = $$$OK

	set nErrors = 0
	set nExported = 0

	// Get all the globals that ara known to be general metada
	set globals = ..GetGlobals()
	set n = $listlength(globals)
	for i = 1:n:1 {
		set strStatus = ..Export($list(globals, i), 2)
		if ($$$ISERR(strStatus)) {
			set nErrors = nErrors + 1
		}
		else {
			set nExported = nExported + 1
		}
	}

	write !, "Number of exported files: "_nExported
	write !, "Number of errors during export: "_nErrors

	quit nErrors
]]></Implementation>
</Method>

<Method name="Export">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,printMessage:%Boolean=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$YES

	if ($get(id) = "") {
		quit ##class(Errors).MakeAndPrintErrorStatus("Empty metadata global "_
			"name! Skipping it.", printMessage)
	}

	set fileName = ##class(DirectoryFile).ConcatPath(
		##class(Config).GetExternalNMGeneralMetadataDir(),
		##class(FileControl).GetSafeFilename(id)_"."_
		##class(FileType).%GetParameter("TXTMETADATA"))

	// Empty ignored list
	set ignoredList = ""

	// Fixes the name of the global
	if ('##class(Strings).StartsWith(id, "^")) {
		set id = "^"_id
	}

	// Are we exporting it or removing it? 
	if ($data(@id)) {
		// Exporting
		set globalList = $listbuild(id)

		// The whole global
		set subs = $listbuild("""""")
		set sc = ..ExportGlobalNode(fileName, id, globalList, subs,
			ignoredList, printMessage=2, .ignored, 0)

		if ($$$ISOK(sc) && ('ignored)) {
			if (printMessage) {
				write !, "@NM general system metadata '"_id_"' "_
					"successfully exported as '"_fileName_"'"
			}

			// Update the timstamp, so that the source control can use it
			// to prevent the same file from being loaded again.
			do ##class(FileControl).UpdateTimeStamp(fileName)
		}
	}
	else {
		// Removing it (exporting the deletion)
		set sc = ##class(DirectoryFile).Delete(fileName, printMessage)
	}

	quit sc
]]></Implementation>
</Method>

<Method name="GetGlobals">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit $listbuild("^WWWRES","^WWWStatus")
]]></Implementation>
</Method>
</Class>
</Export>