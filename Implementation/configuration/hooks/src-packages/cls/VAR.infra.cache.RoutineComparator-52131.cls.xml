<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="Cache for Windows NT (Intel) 5.0.21 (Build 6408)">
<Class name="VAR.infra.cache.RoutineComparator">
<ClassType/>
<Import>VAR.common</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>
<ClassDefinitionError>0</ClassDefinitionError>

<Method name="CompareNamespaces">
<ClassMethod>1</ClassMethod>
<FormalSpec>namespace1:%String,namespace2:%String,pref:%String,hide:%Boolean</FormalSpec>
<ReturnType>%ListOfObjects</ReturnType>
<Implementation><![CDATA[
	set list = ##class(%ListOfObjects).%New()

	set routine = "" 
	while (1)
	{
		set routine = $order(^[namespace1]rMAC(routine))
		quit:($length(routine) = 0)

		if ($extract(routine, 1, $length(pref)) = pref)
		{
			set routineDiff = $$$NULLOREF
			if ('hide)
			{
				set routineDiff = ##class(RoutineDiff).%New()
				set routineDiff.name = routine
				set routineDiff.isDifferent = ('..CompareRoutines(namespace1, namespace2, routine, .strMessage))
				set routineDiff.date1 = $get(^[namespace1]rMAC(routine, 0))
				set routineDiff.date2 = $get(^[namespace2]rMAC(routine, 0))
			}
			
			if (routineDiff '= $$$NULLOREF)
			{
				do list.Insert(routineDiff)
			}
		}
	}
	
	quit list
]]></Implementation>
    </Method>
    <Method name="CompareRoutines">
<ClassMethod>1</ClassMethod>
<FormalSpec>namespace1:%String,namespace2:%String,name:%String,&amp;error:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set error = ""

	if ($get(^[namespace1]rMAC(name, 0)) = $get(^[namespace2]rMAC(name, 0)))
	{
		// If the above things match, don't check all the lines
	}
	else
	{
		set line = 0
		while (1)
		{
			set line = $order(^[namespace1]rMAC(name, 0, line))
			quit:($length(line) = 0)

			if ($get(^[namespace1]rMAC(name, 0, line)) '=
			      $get(^[namespace2]rMAC(name, 0, line)))
			{
				set error = "Difference on line "_line_"."
				quit
			}
		}

		if (error = "")
		{
			if ($get(^[namespace1]rMAC(name, 0, 0)) '=
			      $get(^[namespace2]rMAC(name, 0, 0)))
			{
				set error = "Different number of lines."
			}
		}
	}

	quit ($length(error) = 0)
]]></Implementation>
    </Method>
  </Class>
</Export>