<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache for Windows (x86-32) 2008.2 (Build 615U)">
<Class name="VAR.infra.util.CompressTool">
<Description><![CDATA[
Compress Tool methods.<br>
&nbsp;<br>
History:<br>
2012-Jun-20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Created by Pablo]]></Description>
    <ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>
<Method name="ValidateInstallation">
<Description><![CDATA[
Validates if the zip tool is installed.<br>
&nbsp;<br>
Returns: success or not]]></Description>
      <ClassMethod>1</ClassMethod>
<FormalSpec>printMessage:%Boolean=1</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	if ('##class(DirectoryFile).Exists(..GetZipToolPath())) {
		if (printMessage) {
			write !, "Zip tool not found: '"_..GetZipToolPath()_"'"
		}
		quit 0
	}
	elseif (##class(Util).IsNix()) {
		set command = "chmod +x "_..GetZipToolPath()
		set result = ##class(Util).ExecExternalProgram(command)
		if (result) {
			if (printMessage) {
				write !, "Error while trying to run the command '"_command_"'"
			}
			quit 0
		}
	}

	quit 1
]]></Implementation>
    </Method>
    <Method name="ExecCompressTool">
<Description><![CDATA[
Executes the zip tool with some arguments.<br>
&nbsp;<br>
Returns: the return code]]></Description>
      <ClassMethod>1</ClassMethod>
<FormalSpec>pstrArguments:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set zipToolPath = ..GetZipToolPath()
	if ('##class(DirectoryFile).Exists(zipToolPath)) quit -1

	quit ##class(Util).ExecExternalProgram(zipToolPath_" "_pstrArguments)
]]></Implementation>
    </Method>
    <Method name="GetZipToolPath">
<Description><![CDATA[
Gets the zip tool path.<br>
&nbsp;<br>
Returns: the 7-zip tool path]]></Description>
      <ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set zipToolPath = ##class(DirectoryFile).GetOSDir(
		##class(DirectoryFile).GetNamespaceSubdir("util"))

	if (##class(Util).IsNix()) {
		set zipToolPath = zipToolPath_"p7zip/7za"
	}
	else {
		set zipToolPath = zipToolPath_"7zip\7za.exe"
	}

	quit zipToolPath
]]></Implementation>
    </Method>
  </Class>
</Export>