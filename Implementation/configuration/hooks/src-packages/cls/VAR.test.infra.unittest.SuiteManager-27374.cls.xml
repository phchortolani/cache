<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache for Windows (x86-32) 2008.2.3 (Build 933U)">
<Class name="VAR.test.infra.unittest.SuiteManager">
<ClassType/>
<Import>%UnitTest,VAR.infra.util</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>Manager</Super>
<Method name="IsDebug">
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	quit +$get(^VAR.test.infra.unittest.SuiteManager("debug"))
]]></Implementation>
    </Method>
    <Method name="SetDebug">
<ClassMethod>1</ClassMethod>
<FormalSpec>pblnDebug:%Boolean</FormalSpec>
<Implementation><![CDATA[
	set ^VAR.test.infra.unittest.SuiteManager("debug") = +pblnDebug

	write !, "Debug: ", +pblnDebug
]]></Implementation>
    </Method>
    <Method name="RunTestCase">
<Description><![CDATA[
Runs a Test Case.<br>
&nbsp;<br>
Params:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pstrClass: Test Case class<br>
&nbsp;<br>
Returns: the status]]></Description>
      <ClassMethod>1</ClassMethod>
<FormalSpec>pstrClass:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ^UnitTestRoot = ##class(DirectoryFile).GetNamespaceSubdir("")

	quit ..RunTest(pstrClass_":"_pstrClass,
		"/nodebug/display=all/noload/run/norecursive", "")
]]></Implementation>
    </Method>
    <Method name="RunTestSuite">
<Description><![CDATA[
Reimplemented method changing the %New() call so that it instantiate the
correct Test Manager.<br>
&nbsp;<br>
Params: defined in the original Test Manager (%UnitTest.Manager)<br>
&nbsp;<br>
Returns: the status]]></Description>
      <ClassMethod>1</ClassMethod>
<FormalSpec>testspec:%String,qualifiers,userparam</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set manager = ..%New()
	if (manager = $$$NULLOREF) quit %objlasterror

	do ..ParseQualifiers(.qualifiers, "/nodebug/display=all/load/run/recursive")
	set manager.Debug = +qualifiers("debug")
	set manager.Display = qualifiers("display")
	set manager.UserParam = userparam

	set root = $get(^UnitTestRoot, "w:\UnitTest\")
	if ($extract(root, 2, 2) '= ":") {
		set root = ##class(DirectoryFile).GetNamespaceSubdir(root)
	}
	set testsuite = $piece(testspec, ":", 1)

	if ($zversion(1) = 1) ; this is VMS
	{
		set root = $piece(root, "]")_".]"
		set testsuite = "["_testsuite_"]"
	}
	if (qualifiers("recursive") = 0)
	{
		if ($extract(root, 2, 2) '= ":") {
			set subdirs(##class(DirectoryFile).GetNamespaceSubdir(root_testsuite)) = testsuite
		}
		else {
			set subdirs(root_testsuite) = testsuite
		}
	}
	else
	{
		if ($extract(root, 2, 2) '= ":") {
			set sc = ..GetSubDirectories(root,
				##class(DirectoryFile).GetNamespaceSubdir(root_testsuite), 1, .subdirs)
		}
		else {
			set sc = ..GetSubDirectories(root, root_testsuite, 1, .subdirs)
		}
		quit:($$$ISERR(sc)) sc
	}

	set dir = ""
	while (1)
	{
		set dir = $order(subdirs(dir))
		quit:(dir = "")

		do manager.RunOneDirTest(dir, subdirs(dir), testspec, .qualifiers)
	}

	do manager.SaveLog()
	set manager.Display = "all"
	do manager.PrintURL()

	quit $$$OK
]]></Implementation>
    </Method>
    <Method name="ParseQualifiers">
<Description><![CDATA[
Reimplemented method printing at the end all qualifiers defined.<br>
&nbsp;<br>
Params: defined in the original Test Manager (%UnitTest.Manager)<br>
&nbsp;<br>
Returns:]]></Description>
      <ClassMethod>1</ClassMethod>
<FormalSpec>qualifiers,defaults</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[
	if ($SYSTEM.Version.GetNumber() < 2010.1) {
		do ##class(%UnitTest.Manager).ParseQualifiers(.qualifiers, defaults)
	}
	else {
		set sc = $$$qualifierParse("UnitTest", .qspec, .qstruct)
		if ($$$ISERR(sc)) quit
	}

	write "Qualifiers:", !
	set i = ""
	while ($length($order(qualifiers(i))) > 0)
	{
		set i = $order(qualifiers(i))
		write "- ", i, " = ", qualifiers(i), !
	}
]]></Implementation>
    </Method>
    <Method name="PrintURL">
<Description><![CDATA[
Reimplemented method printing the correct namespace in the URL.<br>
&nbsp;<br>
Params:<br>
&nbsp;<br>
Returns:]]></Description>
      <Implementation><![CDATA[
	set port = $get(^%SYS("WebServer","Port"), 1972)

	do ..PrintLine("Use the following URL to view the result:")
	do ..PrintLine("http://127.0.0.1:"_port_"/csp/"_$znspace_"/%25UnitTest.Report.cls?NS="_##class(%CSP.Page).EscapeURL($znspace)_" => Test Index "_i%LogIndex_" OR")
	do ..PrintLine("http://127.0.0.1:"_port_"/csp/"_$znspace_"/%25UnitTest.Report.cls?NS="_##class(%CSP.Page).EscapeURL($znspace)_"&INDEX="_i%LogIndex)
]]></Implementation>
    </Method>
  </Class>
</Export>