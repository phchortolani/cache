<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.xml.XMLClassInterpreter">
<Description><![CDATA[
This class reads and interprets class files.]]></Description>
<ClassType/>
<Import>SourceControl.control,VAR.infra.xml,VAR.infra.util</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>Base</Super>

<Method name="HasClassType">
<Description><![CDATA[
This method verifies if the class file has a classtype tag
(it doesn't matter if the tag is empty)]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>sourceFileName:%String="&quot;</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set ret = $$$NO

	// Quick verification
	if (sourceFileName = "") quit $$$NO

	if ('##class(%File).Exists(sourceFileName)) {
		write !, "The source file '"_sourceFileName_"' was not found!"
		quit $$$NO
	}

	// Create an instance of %XML.TextReader (returned by reference)
    set sc = ##class(XMLReader).ParseFile(sourceFileName, .reader)
	if (##class(Errors).IsError(sc)) quit $$$NO

    // Read all elements within the document
    while (reader.Read()) {
        set nodeType = reader.NodeType

        // Process an element 
        if (nodeType = "element") {
            set name = reader.Name

			if (name = "ClassType") {
				set ret = $$$YES
				quit
			}
			if ((name = "Import") ||
				(name = "IncludeCode") ||
				(name = "ProcedureBlock") ||
				(name = "StorageStrategy") ||
				(name = "Super") ||
				(name = "Property") ||
				(name = "Index") ||
				(name = "Method")) {
				quit
			}
        }
	}

	quit ret
]]></Implementation>
</Method>

<Method name="HasProcedureBlock">
<Description><![CDATA[
This method verifies if the class file has a procedureblock tag
(it doesn't matter if the tag is empty)]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>sourceFileName:%String="&quot;</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set ret = $$$NO

	// Quick verification
	if (sourceFileName = "") quit $$$NO

	if ('##class(%File).Exists(sourceFileName)) {
		write !, "The source file '"_sourceFileName_"' was not found!"
		quit $$$NO
	}

	// Create an instance of %XML.TextReader (returned by reference)
    set sc = ##class(XMLReader).ParseFile(sourceFileName, .reader)
	if (##class(Errors).IsError(sc)) quit $$$NO

    // Read all elements within the document
    while (reader.Read()) {
        set nodeType = reader.NodeType

        // Process an element 
        if (nodeType = "element") {
            set name = reader.Name

			if (name = "ProcedureBlock") {
				set ret = $$$YES
				quit
			}
			if ((name = "StorageStrategy") ||
				(name = "Super") ||
				(name = "Property") ||
				(name = "Index") ||
				(name = "Method")) {
				quit
			}
        }
	}

	quit ret
]]></Implementation>
</Method>
</Class>
</Export>