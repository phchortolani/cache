<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.data.global.NetManagerMenu">
<ClassType/>
<Import>SourceControl.control,SourceControl.data</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>GlobalBase</Super>

<Method name="ExportAll">
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set strStatus = $$$OK

	set nErrors = 0
	set nExported = 0

	// Get all the forms
	set id = ""
	for {
		set id = $order(^WWW004(0, id))
		quit:(id = "")

		set strStatus = ..Export(id, 2)
		if ($$$ISERR(strStatus)) {
			set nErrors = nErrors + 1
		}
		else {
			set nExported = nExported + 1
		}
	}

	write !, "Number of exported files: "_nExported
	write !, "Number of errors during export: "_nErrors

	quit nErrors
]]></Implementation>
</Method>

<Method name="Export">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,printMessage:%Boolean=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK

	if ($get(id) = "") {
		quit ##class(Errors).MakeAndPrintErrorStatus("Empty menu name! "_
			"Skipping it.", printMessage)
	}

	if ('$data(^WWW004(0, id))) {
		quit ##class(Errors).MakeAndPrintErrorStatus("Net Manager menu "_
			"definition not found:"_id_". Skipping it.", printMessage)
	}

	set fileName = ##class(DirectoryFile).ConcatPath(
		##class(Config).GetExternalNMMenuDir(),
		##class(FileControl).GetSafeFilename(id)_"."_
		##class(FileType).%GetParameter("TXTMENU"))

	// Empty ignored list
	set ignoredList = ""

	set subs = $listbuild("0,"_##class(Strings).QuoteString(id))
	set sc = ..ExportGlobalNode(fileName, id, ..GetGlobals(),
		subs, ignoredList, printMessage=2, .ignored, 0)

	if ($$$ISOK(sc) && ('ignored)) {
		if (printMessage) {
			write !, "@NM menu definition '"_id_"' successfully exported "_
				"as '"_fileName_"'"
		}

		// Update the timstamp, so that the source control can use it to
		// prevent the same file from being loaded again.
		do ##class(FileControl).UpdateTimeStamp(fileName)
	}

	quit sc
]]></Implementation>
</Method>

<Method name="GetGlobals">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit $listbuild("^WWW004", "^WWW0041", "^WWW00411")
]]></Implementation>
</Method>
</Class>
</Export>