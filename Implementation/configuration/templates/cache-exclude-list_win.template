; This script sets up all artifacts that reside inside Cache but must be excluded from version control.
; Some tokens are replaced with values from local.properties automatically by the system.
;
;History:
;2008-Jul-21	Soeiro	Created
;
timer 60
logfile: @cacheLog@
on error: $ERROR
@bypassAuthentication@

multiwait for: =Username:=Usuário:
send: @cacheUsername@<CR>

multiwait for: =Password:=Senha:
send: @cachePassword@<CR>

; Start of the script
$BEGIN:

; Set all Alphalinc globals
wait for: >
timer 30
on error: $ERROR
send: zn "@namespaceCapitalized@"<CR>

; Erases everything in the exclude list
wait for: @namespaceCapitalized@>
send: kill ^SourceControl("excludeList")<CR>

; Create on line for each exclusion *prefix*. You can have any number of lines for mac,inc,gbl and cls
wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","mac","idx.")=""<CR>

wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","mac","CacheSql")=""<CR>

wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","inc","%")=""<CR>

wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","cls","%")=""<CR>

; Classes that are in the package csp are to be ignored 
wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","cls","csp.")=""<CR>

; Ensemble classes are to be ignored 
wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","cls","Ens")=""<CR>

;Projects that start with "user-" are ignored.
wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","prj","user-")=""<CR>

;Projects that start with "Default" are ignored.
wait for: @namespaceCapitalized@>
send: set ^SourceControl("excludeList","prj","Default")=""<CR>

;Now the code checks if there is a NM class with this name
;wait for: @namespaceCapitalized@>
;send: set ^SourceControl("excludeList","cls","User.")=""<CR>

; wait for: @namespaceCapitalized@>
; send: set ^SourceControl("excludeList","gbl","yyy")=""<CR>

;Exceptions. Items in this list will not be ignored (it overrides the excludeList)
;Notice that the extension *MUST BE* in UPPERCASE letters for this case:
;Also notice that this list also overrides other methods of ignoring files
wait for: @namespaceCapitalized@>
send: kill ^SourceControl("excludeExceptions")<CR>

;This table is generated by @NM but must be present to allow it to generate others!
;wait for: @namespaceCapitalized@>
;send: set ^SourceControl("excludeExceptions","User.COMQuickSearch.CLS")=""<CR>

; Write the ok file (without using Source control because it might not be loaded yet)
wait for: @namespaceCapitalized@>
send: set file=##class(%File).%New(##class(VAR.infra.util.DirectoryFile).ConcatPath(^SourceControl("projectDir"), "build\cache-exclude-list.ok"))<CR>

wait for: @namespaceCapitalized@>
send: w file.Open("WSN")<CR>

wait for: @namespaceCapitalized@>
send: w file.WriteLine("Finished ok at: "_$zdatetime($horolog))<CR>

wait for: @namespaceCapitalized@>
send: do file.Close()<CR>

wait for: @namespaceCapitalized@>
send: set file=""<CR>


$SAIDA:
wait for: @namespaceCapitalized@>
send: WRITE "Configuration finished."<CR>

wait for: @namespaceCapitalized@>
send: WRITE $ZDATETIME($ZTIMESTAMP,3,1,6)<CR>

wait for: @namespaceCapitalized@>
closelog
send: HALT<CR>
terminate

$ERROR:
send: w "An error occured during configuration. Please check the log file.",!
goto $SAIDA