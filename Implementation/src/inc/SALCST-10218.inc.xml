<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="SALCST" type="INC" timestamp="58440,0"><![CDATA[
#; SALCST.inc
	;-------------------------------------------------------------------------------
	; POS Include File
	;
	; History:
	; 24-Mar-2011	GRF		*Const.inc files include COMSYS
	; 12-Nov-2009	shobby	SR17027: SALLOCDEL
	; 14-May-2007	GRF		Move SCH debug to COMDebug.inc
	; 21-Jan-2005	GRF		Standardise DevUser macros in COMSYS
	; 							IP addressing is now dynamic - Use YBED instead
	; 05-Jan-2005	GRF		Remove definitions already in COMSYS
	; 11-Aug-2004	shobby	Removed NODATA 10237.
	; 18-May-2004	GRF		Simplify ANY - always hardcoded
	; 06-May-2004	GRF		Preserve useful time entries
	; 04-May-2004	PK		Fld* macros moved to *Const.inc
	; 09-Jan-2004	shobby	defined Prompt.
	; 01-Dec-2003	GRF		Extra Fld definitions for sale line
	; 10 Oct 2003	PK		Added CSTCache for Generic caching of data.
	;-------------------------------------------------------------------------------
	
#include SALConst
#include WWWConst
#include COMConst
#include SALRule
	
#define SALLOCDEL			"_"

#def1arg Get(%obj) 			$$Get^SALUtils(YM,%obj)
	
#def1arg Kill(%obj) 		$$Kill^SALUtils(%obj)
#define	Alert(%str)			do Alert^SALCSTIntSystem(%str)
#define	Prompt(%str)		quit Prompt^SALCSTIntSystem(%str)
#define Debug				$get(^SALCSTLog("o"))
	
#define Font(%obj) 			$$SystemParam^SALCSTIntButton(%obj,"SCHRIFTART")
 
 // Standard @NM & APM variables and classes
 // #define PublicANMVars     APMCO,APMLANG,APMNAMESPACE,APMQUERY,APMUSER,Y,YC,YM,YUCI no longer used PJK
	
 // Order Processing definitions
#define OrderLineLocked		"locked" 
#define OrderLineNew		"new" 
	
 // this is as per AUFTRAGSART definition in IN
#define OrderTypeCustomer	"0"
	
 // String functions
#define SPFILL				$justify("",200)
#define SPC(%1)				$justify("",%1)
	
 // Date Functions
#def1arg TimeStampAsDate(%obj)		+$zdth(%obj,3)
#def1arg TimeStampAsTime(%obj)		+$zth($piece(%obj," ",2),3)
#def1arg DateAsTimeStamp(%obj)		$zdt(%obj_",0",3)
#def1arg TimeStampAsHorolog(%obj)	$zdth(%obj,3)
 
 // ^CacheTemp Storage
#define CSTAll				"^CacheTempSALCST"
#define CSTSession			"^CacheTempSALCST(YUSER)"
#define CSTCache			"^CacheTempSALCST(YUSER,""Cache"")"
#define CSTObject			"^CacheTempSALCST(YUSER,""o"")"
#define CSTSaleTrack		"^CacheTempSALCST(YUSER,""Sale"")"
#define CSTSale				"^CacheTempSALCST(YUSER,""Sale"",+$get(^CacheTempSALCST(YUSER,""Sale"")))"
#define CSTATP				"^CacheTempSALCST(YUSER,""Sale"",+$get(^CacheTempSALCST(YUSER,""Sale"")),""ATP"")"
#define CSTOrder			"^CacheTempSALCST(YUSER,""Sale"",+$get(^CacheTempSALCST(YUSER,""Sale"")),""Order"")"
#define CSTOrderSave		"^CacheTempSALCST(YUSER,""Sale"",+$get(^CacheTempSALCST(YUSER,""Sale"")),""OrderSave"")"
#define CSTVariable			"^CacheTempSALCST(YUSER,""Variable"")"
#define CSTElement			"^CacheTempSALCSTOut(YUSER)"
#define CSTSearch			"^CacheTempSALCSTSearch(YUSER)"
 
#define NewGrid				$data(^NewGrid($get(@$$$CSTSession@("ip"))))

#define ButtonId(%1)		"But"_%1

 // ATP Processing definitions
 // Value "ANY" is hardcoded in INATP1 - Display value changes for display in SALCSTATP
#define ANY					"ANY"
#define SPLIT				0 
#define CONSOLIDATE			1 
#define AQOHNEGATIVE		$$$NO
#define ATPNEGATIVE			$$$NO
 
 // WP utils
#define WPEmpty				($order(@$$$CSTSale@("Line","")) = "")
 
 // Currently implemented Data Locations
 //		Please keep up to date and check when creating
 //		new entries to avoid inappropriate re-use.
 
 //	@$$$CSTSession@()
 //		("ActiveData",Object,"Code")
 //		("ActiveGridPrevious"
 //		("ActiveGrid")							; No longer used.
 //		("ActiveGridPrevious")					; No longer used.
 //		("ActiveLayerPrevious")					
 //		("ActiveObjectPrevious")				; No longer used.
 //		("ActiveSegment")						; GetActiveSegment^SALCSTIntSegment, SetActiveSegment^SALCSTIntSegment
 //		("ActiveSegmentPrevious")				; No longer used.
 //		("ActiveSegmentPreviousAppearance")
 //		("ATPQuery")
 //		("ButtonEdit","Object")
 //		("CurrentGrid",property)					ButtonId/Key
 //		("CurrentInfo",infoCommand)
 //		("CurrentInfoLayer",infoSegment)
 //		("CurrentTxn")
 //		("CustomerSearchMode")
 //		("Debug")
 //		("Designer")
 //		("Designer","NewButton")
 //		("Designer","Set",id)
 //		("Designer","Tool",id)
 //		("DisplaySale")
 //		("Focus")
 //		("Form",form,"Fld",fieldId)
 //		("Form",form,"Fld",fieldId,"Value")
 //		("FormCurrent")
 //		("FormCurrentId")
 //		("Grid",Grid,"AddLineCount")
 //		("Grid",Grid,"Att",property)				SearchKey
 //		("Grid",Grid,"Caption")
 //		("Grid",Grid,"CallBack")
 //		("Grid",Grid,"CellCallBack")
 //		("Grid",Grid,"Col",column,property)			Align/DataCode/DataType/Desc/Field
 //		("Grid",Grid,"Cols")
 //		("Grid",Grid,"Columns")
 //		("Grid",Grid,"Controls")
 //		("Grid",Grid,"CurrentLine")
 //		("Grid",Grid","DefColSort")                 Default column sort (column number, not field number)
 //		("Grid",Grid,"End")
 //		("Grid",Grid,"Height")
 //		("Grid",Grid,"Key")
 //		("Grid",Grid,"LastLineAdded")
 //		("Grid",Grid,"Lines")
 //		("Grid",Grid,"Lines",lineNo)
 //		("Grid",Grid,"Lines",lineNo,"Ref")
 //		("Grid",Grid,"MaxLines")
 //		("Grid",Grid,"Search")
 //		("Grid",Grid,"Seg")
 //		("Grid",Grid,"SortBy")
 //		("Grid",Grid,"Start")
 //		("Grid",Grid,"Type")
 //		("Grid",Grid,"id")
 //		("GridEdit",property)						Class/Object/OldData/Prompt
 //		("GridLines",Grid)
 //		("GridShow",Segment)						Name of grid flagged to be shown in that segment (Info Panel)
 //		("LastActive")								Flag to determine when this session was last used.
 //		("LastEvent","Class")
 //		("LastEvent","Event")
 //		("LastEvent","Object")
 //		("LastEvent","Parameters")
 //		("LastSaleID")								Last Sale Id ( Used for Receipt print
 //		("Logon",property)							MaxTries/Tries
 //		("Menu",Menu)
 //		("Menu",Menu,"Option",id)
 //		("MenuRender",Button)
 //		("Menus",Menu)
 //		("Modal",ModalForm&Field)
 //		("Number")
 //		("Pos")
 //		("PromptId")
 //		("PromptValue")
 //		("ReserveLog")
 //		("RoundAmount")
 //		("RoundMethod")
 //		("SaleHistorySale")							// Sale id selected from sale history grid
 //		("Seg",type,segment)
 //		("Segment",segment,"Layer")
 //		("Segment",segment,"Size")
 //		("Segment",segment,"Header")
 //		("Segment",segment,"Controls")
 //		("Status")
 //		("Template")
 //		("User")
 //		("Value",id)
 //		("Value",id,property)						Format/Function
 //		("ip")
 //		("url")
 
 //	@$$$CSTObject@()
 //		("arc",id)									But##
 //		("arct",ActiveRenderType,id)
 //		("d",id)						<			But##/Div##/menu##/SegLines/SegLinesBody/
 //		("d",id,"arcbc")							BackColour of item
 //		("d",id,"Code")					<			SegLinesHead/SegMenuButtons/
 //		("d",id,"Invisible")			<			SegMenuButtonsBody/SegSearch/
 //		("d",id,"Parent")				<			SegSearchBody/SegSearchHead/segMenu
 //		("p",parent,id)
 //		("sm",id)									System Menu item
 
 //	@$$$CSTSale@()
 //		("ATP",...)
 //				"ATPAllocCounter"					[ e.g. 1 ]
 //				"ATPCurentAllocNo"					[ e.g. 1 ]
 //		("BankUpdate")								Yes/No (have bank details already been updated in this sale?)
 //		("Caption")									e.g.  Sub Total $$$$$<BR>Tax $$$$$
 //		("ClockingWarned")                          Yes/No has the user been warned that no one has clocked in for this sale?
 //		("CreditLimitExceeded",CustomerID)			Yes/No 
 //		("CustOSOrders",CustomerID)					Outstanding orders total for customer - cache to reduce processing time
 //		("CustomerSearchMode")						"AltCE" if selecting alternate credit entity
 //		("CurrentLine")
 //		("Customer")
 //		("Errors",Function,LineNo)					Boolean
 //		("HistoryMode")								"Copy" or "Return" - from Sale History grid controls
 //		("IN",ST,SF,SD)								Back Office Order No
 //		("InfoData",ID)								Info Data for Sale Header
 //					"AltDelDelNotes",SUNo	<=>	@$$$CSTOrder@("SU",SU,"SUDelNote")
 //					"AltDelIntNotes",SUNo	<=>	@$$$CSTOrder@("SU",SU,"SUIntNote")
 //					"OrderPriority"			<=>	@$$$CSTOrder@("SU",SU,"Priority")
 //		("Line",LineNo)								Fields Defined by SALCSTSaleLine
 //		("Line",LineNo,"AllocationText")			Qty allocated 'of' qty requested
 //		("Line",LineNo,"AltDelivery",ButtonCommand)	Alternative ship to details
 //		("Line",LineNo,"Aqoh#Res")					AQOH '#' Reserved Quantities
 //		("Line",LineNo,"ATPNegOSLT")				Colour to display (error colour) if stock level would drop below zero outside lead time
 //		("Line",LineNo,"atpParent")					Pointer to the atp parent line; parents point to themselves; a parent may not be deleted unless all atp kids have been removed
 //		("Line",LineNo,"AutoReserve")				"DONT", "new Line", reqDate_Y_SF_Y_qty
 //		("Line",LineNo,"DiscountRefColour")         Colour to display (error colour) line no column in, for discount reference required error
 //		("Line",LineNo,"History",FieldNo,Increment) User~OldValue~NewValue~$h     //Audit history of changes to FieldNo in LineNo
 //		("Line",LineNo,"InfoData",ID)				Info Data for Sale Line
 //		("Line",LineNo,"Invoice",InvoiceNo)			Account Payment invoices associated with sale line.
 //		("Line",LineNo,"LeadTime",Date)    			Qty this Line has as a "future supply"
 //		("Line",LineNo,"LinkedTo",DiscountLoop)		Line Number (of some sort) _Y_ "Discount/Surcharge" (& others?)
 //		("Line",LineNo,"Permission")				Permission indicator for each piece of the sale line "I"=increase only, "L"=lock (no edit), ""=FullEdit
 //		("Line",LineNo,"Reserve",Date)    			Amount this Line has reserved against BO quantities
 //		("Line",LineNo,"Security","Function",Function)  = Authorisation Code _Y_ User_Y_$h_Y_SessionUser
 //		("Line",LineNo,"Security","Button",Button)      = Authorisation Code _Y_ User_Y_$h_Y_SessionUser
 //		("Line",LineNo,"SellBelowCostColour")		Colour to display (warning/error) price column in, for sell below cost authority required
 //		("Line",LineNo,"Status")					Status 1 = Can Edit, 2 = Completed, 3 = Locked by others, 4 = Not locked by you (Can not edit)
 //		("Line",LineNo,"Tax",???)
 //		("Line",LineNo,"TempAltDelivery",ButtonCommand)  Temporary storage of alternate ship to details, stored prior to ok button
 //		("Line",LineNo,"Visible")					Yes / No
 //		("OrderBlock")								Yes / No - allow save of order but send through "Blocked" flag
 //		("ProductValueWarned")						Yes / No - has user been warned that product value is over $limit and no cust details captured
 //		("ReturnMode")
 //		("SaleId")									Sale Number
 //		("SortBy")									Grid Sort
 //		("TaxLine",LineNo)
 //		("UserCode")								Order Locking code.
	
 //	@$$$CSTOrder@()
 //		("ApplyToAll")
 //		("Default",property)						DueDate/SB/SF/ST + ReqDate
 //		("NextSUNumber")
 //		("SelectedSU")
 //		("SU",SU,"CEOverride")						Account No for alternate credit entity override
 //		("SU",SU,"Line",LineNo)
 //		("SU",SU,"Line",LineNo,"status")			May be obsolete
 //		("SU",SU,"OrderDate")
 //		("SU",SU,"PartRelease")
 //		("SU",SU,"Priority")
 //		("SU",SU,"SUDelNote")
 //		("SU",SU,"SUIntNote")
 //		("SU",SU,"SUNote")
 //		("SU",SU,"tuple")							SF~ST~Date~Date
 //		("SU",SU,"visible")
	
 //	@$$$CSTCache@()
 //		("AQOHSearch",LineNo)
 //		("ATPSearch",atpDate)
 //		("OrderSearch",idOrder)
 //		("OrderLineSearch",idOrder,OrderLine)
 //		("QuoteSearch",idQuote)
 //		("Product",pidProduct,"Location",idLocation,"ATPNOSLT")		Boolean - allow negative outside lead time
	
 // **********************************************************
 
 //   @$$$CSTSession@("ATPQuery")
 //		("locId")=locId
 //		("locId", "AQOH")=aqohVal
 //		("locId", "Date",$hFormattedDate)=atpQty
 //			...
 //		("locId", "Date",$hFormattedDate)=atpQty
 //		("locId", "Date",$hFormattedDate)="ANY"		after the Lead Time
 
 // Example:
 //		arrAtp("1")="1"
 //		arrAtp("1","AQOH")="87"
 //		arrAtp("1","Date",59490)="86"
 //		arrAtp("1","Date",59504)="ANY"             //
 //		arrAtp("2")="2"
 //		arrAtp("2","AQOH")="0"
 //		arrAtp("2","Date",59504)="ANY"             // 
 //		arrAtp("1-1")="1-1"
 //		arrAtp("1-1","AQOH")="0"
 //		arrAtp("1-1","Date",59490)="ANY"           // 
 //		arrAtp("1-1-1")="1-1-1"
 //		arrAtp("1-1-1","AQOH")="0"
 //		arrAtp("1-1-1","Date",59504)="ANY"         // 
 //		arrAtp("1-1-2")="1-1-2"
 //		arrAtp("1-1-2","AQOH")="0"
 //		arrAtp("1-1-2","Date",59490)="ANY"         //
 //		arrAtp("1-2")="1-2"
 //		arrAtp("1-2","AQOH")="0"
 //		arrAtp("1-2","Date",59490)="ANY"           //
	
 // **********************************************************

]]></Routine>
</Export>