<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMSYSNum" type="INC" timestamp="58440,0"><![CDATA[
#; COMSYSNum.inc	Macros for number-related functions
 
#define GetNumDecimalPoints(%1)		$$GetDecimalPoints^WWWZAHL(%1)
#define RoundToDecimalPoints(%1,%2)	$fnumber(%2,"",$$$GetNumDecimalPoints(%1))
 
 
#define IsNum(%str)			((+$get(%str))=$get(%str))
#define NumberOfDP(%flt)	$length($piece($get(%flt),".",2))
 
 
#define Min(%1,%2)			$select((%1)>(%2):%2,1:%1)
#define Max(%1,%2)			$select((%1)>(%2):%1,1:%2)
 
#define IsPosInt(%1)		((%1>0)&&(%1\1=%1))
 
 
#; Foreign Currency
#; Bracketed second argument to handle case where %amt2 is in the form AMTa OP AMTb
#; 11-Jul-2005	JW		SR12811: Changed FINSYSFC to COMSYSFC
#; 07-Mar-2007	JW		SR15459: Added FCInc,FCDec,FCADD,FCSUB - can put fns in these macros.
 
#define FCInc(%amt1,%amt2)		set %2=%amt2,%amt1=$$$FCAdd(%amt1,%2)
#define FCDec(%amt1,%amt2)		set %2=%amt2,%amt1=$$$FCSub(%amt1,%2)
#define FCADD(%amt1,%amt2,%res)	set %1=%amt1,%2=%amt2,%res=$$$FCAdd(%1,%2)
#define FCSUB(%amt1,%amt2,%res)	set %1=%amt1,%2=%amt2,%res=$$$FCSub(%1,%2)
 
#define FCGetAmountText(%amt)	$$GetAmountText^COMSYSFC(%amt)
#define FCMult(%amt1,%amt2)		$select((%amt1["@"):$$Mult^COMSYSFC(%amt1,%amt2),1:%amt1*(%amt2))
#define FCMult2(%amt1,%amt2)	$select((%amt1["@"):$$Mult2^COMSYSFC(%amt1,%amt2),1:%amt1*(%amt2))
#define FCDivd(%amt1,%amt2)		$select((%amt1["@"):$$Divd^COMSYSFC(%amt1,%amt2),1:%amt1/(%amt2))
#define FCDivd2(%amt1,%amt2)	$select((%amt1["@"):$$Divd2^COMSYSFC(%amt1,%amt2),1:%amt1/(%amt2))
#define FCAdd(%amt1,%amt2)		$select((%amt1["@")||(%amt2["@"):$$Add^COMSYSFC(%amt1,%amt2),1:%amt1+(%amt2))
#define FCSub(%amt1,%amt2)		$select((%amt1["@")||(%amt2["@"):$$Sub^COMSYSFC(%amt1,%amt2),1:%amt1-(%amt2))
#define FCSign(%amt)			$select(%amt["@":$$Sign^COMSYSFC(%amt),1:-(%amt))
#define FCur(%amt)				$select(%amt["@":$$Cur^COMSYSFC(%amt),1:"") 
#def1arg FCRound(%amt) 			$$Round^COMSYSFC(%amt)
#define FCBase(%amt) 			$select(%amt["@":$$FCBase^COMSYSFC(%amt),1:%amt)
#define	FCAmount(%amt) 			$select(%amt["@":$$FCAmount^COMSYSFC(%amt),1:%amt)
#define FCRate(%amt) 			$select(%amt["@":$$FCRate^COMSYSFC(%amt),1:"")
#define FCZero(%amt) 			$select(%amt["@":$$FCZero^COMSYSFC(%amt),1:'(%amt))
#define FCGTZero(%amt) 			$select(%amt["@":$$FCGTZero^COMSYSFC(%amt),1:%amt>0)
#define FCLTZero(%amt) 			$select(%amt["@":$$FCLTZero^COMSYSFC(%amt),1:%amt<0)
#define FCIsEqual(%amt1,%amt2)	$select((%amt1["@")&&(%amt2["@"):$$FCIsEqual^COMSYSFC(%amt1,%amt2),1:+%amt1=+(%amt2))
#define FCUpdate(%amt,%rate,%mode)	$select(%amt["@":$$FCUpdate^COMSYSFC(%amt,%rate,%mode),1:+(%amt))
#define FCMake(%base,%code,%rate)	$$FCMake^COMSYSFC(%base,%code,%rate)
#define FCJoin(%base,%foreign,%code,%rate)			$$Join^COMSYSFC(%base,%foreign,%code,%rate)
#define FCSplit(%amt,%base,%foreign,%code,%rate)	do Split^COMSYSFC(%amt,%base,%foreign,%code,%rate)
#define AmountIsFC(%amt)			$$AmountIsFC^COMSYSFC(%amt)
#define CurIsFC(%amt)				$$CurIsFC^COMSYSFC(%amt)
#define CurrencyToUse				$get(^CacheTemp(YUSER,$get(^CacheTemp(YUSER,"Grid","Container")," "),"Toggles","Currency"))
 
#define GetAmount(%idAccount,%curAmount)	$select($$GetFCCode^FINGLFC(%idAccount)="":$$$FCBase(%curAmount),1:%curAmount)
 
 
]]></Routine>
</Export>