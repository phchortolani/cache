<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31Interface" type="INC" timestamp="58440,0"><![CDATA[
#; COMGridEdit31Interface.inc
#;##############################

#def1arg GRIDStart(%args)	do Start^COMGridEdit31(%args)
 
#define GRIDContainer	$get(^CacheTemp(YUSER,"Grid","Container"))
 
 
#; Note: Count DOES include Total Row (3WM)
#; SR13634: WWWDATEN is NOT shared.
#; SR13659: Edited to look on disk
#;define EDITGRIDROWCOUNT(%f,%key)	$$$GetGlobal(^WWWDATEN(0,+$h,YUSER,%f,"V","ROWCOUNT"),$$DiskCount^COMGridEdit31Globals(%f,%key))
 
#def1arg GRIDGetRowCount(%args)	$$RowCount^COMGridEdit31Globals(%args)
 
 
 
	// Constants 
#define GRIDAllowLinkedLines			+$get(^CacheTemp(YUSER,"Grid","ExpandLines"))
 
 
 	// Update
#def1arg GRIDUpdateManualField(%args)	do UpdateManualField^COMGridEdit31G(%args)
 
 
 
#define GRIDAddBatchStart				set ^CacheTemp(YUSER,"Grid","AddBatch") = $$$YES
#define GRIDAddBatchStop				do DisplayBatchLines^COMGridEdit31Add()
#define GRIDAddBatchStopNoDraw			do DisplayBatchLines^COMGridEdit31Add($$$NO)
 
#def1arg GRIDAddLine(%args)				do AddLine^COMGridEdit31Add(%args)
#def1arg GRIDInsertLine(%args)			do InsertLine^COMGridEdit31Add(%args)
 
#def1arg GRIDHideShowRows(%args)		do HideShowRows^COMGridEdit31R(%args)
#def1arg GRIDHideShowColumns(%args)		do HideShowColumns^COMGridEdit31R(%args)
 
#define GRIDGetCurrentYKEY				$$GetKey^COMGridEdit31G()
#define GRIDGetYFELD(%key)				$$GetYFELDEX^COMGridEdit31G(,%key)
#def1arg GRIDGetContents(%args)			do GetGridContents^COMGridEdit31G(%args)
#def1arg GRIDSetContents(%args)			do SetGridContents^COMGridEdit31G(%args)
 
#;SR13305
#define GRIDName						$get(^CacheTemp(YUSER,"Grid","Name"))
 
#define GRIDYKEYContainer				$$GetYKEYContainer^COMGridEdit31Interface()
#define GRIDYFELDContainer				$$GetYFELDContainer^COMGridEdit31G()
#define GRIDYMFELDContainer				$$GetYMFELDContainer^COMGridEdit31G()
#define GRIDPREVYMFELDContainer			$$GetYMFELDContainer^COMGridEdit31G(2)
 
#def1arg GRIDGoToForm(%args)			do GoToForm^COMGridEdit31G(%args)
#def1arg GRIDReloadForm(%args)			do ReloadForm^COMGridEdit31G(%args)
 
#def1arg GRIDSave(%args)				$$SAVE^COMGridEdit31Save(%args)
#define GRIDDelete						do DELETE^COMGridEdit31R()
#define GRIDSplitKey(%dat,%1,%2)		set %2=$piece(%dat,"_",2) set %1=$translate($piece(%dat,"_",1),"tdY")
 
#; FIXME : <GRF> $$Duplicate not Duplicate - macro only in INReqCommon 
#;define GRIDDuplicate					do Duplicate^COMGridEdit31Add() ; SR15739
#define GRIDDuplicate					do Duplicate^COMGridEdit31Copy()
#define GRIDGetOriginalValue			$get(^WWWDATEN(0,+$h,YUSER,YFORM,"V",YLFDAT,2))
#define GRIDGetPreviousValue			$get(^WWWDATEN(0,+$h,YUSER,YFORM,"V",YLFDAT,"Previous"))
#define GRIDSetPreviousValue(%1)		set ^WWWDATEN(0,+$h,YUSER,YFORM,"V",YLFDAT,"Previous")=%1
#define GRIDIsPreviousValueSet			'$data(^WWWDATEN(0,+$h,YUSER,YFORM,"V",YLFDAT,"Previous"))
#define GRIDGetTempValue				$get(^WWWDATEN(0,+$h,YUSER,YFORM,"V",YLFDAT,"Temp"))
#define GRIDSetTempValue(%1)			set ^WWWDATEN(0,+$h,YUSER,YFORM,"V",YLFDAT,"Temp")=%1
#define GRIDIsTempValueSet				'$data(^WWWDATEN(0,+$h,YUSER,YFORM,"V",YLFDAT,"Temp"))
#define GRIDColumnOrder					$get(^CacheTemp(YUSER,"Grid",YFORM,"COLUMNORDER"))
]]></Routine>
</Export>