<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMSYSWWW" type="INC" timestamp="58440,0"><![CDATA[
#; COMSYSWWW.inc		Macros for @Net functions
#include WWWConst
 
#define	ParentSeparator				"x"
#define GetParentUser(%u)			($piece(%u,$$$ParentSeparator,1,$select($length(%u,$$$ParentSeparator)=1:1,1:($length(%u,$$$ParentSeparator)-1))))
#define GetTopUser(%u)				(+%u)
#define IsTopUser(%u)				(%u = $$$GetTopUser(%u))
 
#def1arg StartFrameSet(%args)		do StartFrameSet^WWWSession(%args)
#define EndFrameSet					write "</FRAMESET>"
	
	;-------------------------------------------------------------------------------
	; 10-Jul-2009 	DWR	SR16565: added missing key in definition of GetClass
	; 22-Jan-2007	PO	SR15316: Created IsUsedElsewhere - I don't have lock, nor does anyone else
	;-------------------------------------------------------------------------------
	
	;#if it's not locked by anyone or by someone else, consider this as bad.
#define InUseElsewhere(%1,%2,%3,%4)	$case($$GetLockUser^WWWMultiLock(%1,%2,%3),%4:0,"":1,:1)
 
 
#; Returns 0 or YM depending on whether a class is shared
#define WWWYM(%class)				$select($$$WWW001SharedFile($get(^WWW001(0,%class,1))):0,1:YM)
 
#; Returns "" or ",1" depending on 'alternative save procedure'
#define Add1(%class)				$select($$$WWW001AltSaveProcedure($get(^WWW001(0,%class,1)))=4:"",1:",1")
 
#; Create global string
#define GlobalString(%class,%keys)	"^"_%class_"("_$$^WWWKEYBUILD($$$WWWYM(%class)_$select(%keys'="":","_%keys,1:""))_")"
 
#; Create full @net node string
#define NodeString(%c,%k)			"^"_%c_"("""_$$$WWWYM(%c)_""""_$$$COMMA_%k_$$$Add1(%c)_")"
 
#define DATA(%1,%2)					@("^"_%1_"("_$$^WWWKEYBUILD($$$WWWYM(%1)_$$$COMMA_%2_",1")_")")
 
 
#; Translates form field index into class field index and vice versa
#define GetClass(%form)					$piece($get(^WWW120(0,%form,1)),Y,11)

#define GetClassField(%form,%frmfield)	$piece($get(^WWW122(0,%form,+%frmfield,1)),Y,1)
#define GetFormField(%form,%clsfield)	$order(^WWW122s(0,4,+%clsfield,%form,""))
#define GetUserID(%1)					$piece($get(^WWWUSER(0,%1,1)),Y,2) 
 
#define GetFormData(%form,%type)		$get(^WWWDATEN(0,+$horolog,YUSER,%form,%type,1))
#define GetFormDataOld(%form,%type)		$get(^WWWDATEN(0,+$horolog,YUSER,%form,%type,2))
 
#; Common @Net Manager functions
#define NextKey(%str)					$$^WWWNEXT(%str)
#define FormatDate(%str)				$$^WWWDATE(%str)
#define FormatTime(%time)				$$^WWWTIME(%time)
#define FormatTimeStamp(%str)			$$^WWWDATE($piece(%str,",",1))_" "_$$^WWWTIME($piece(%str,",",2))
#define FieldName(%Form,%Type,%Number)	$$^WWWFELDNAME(%Form,%Type,%Number)
#define FormName(%1)					$$^WWWFORMNAME(%1)
 
#define	KEY1(%1)		$piece(%1,$$$COMMA,1)
#define KEY2(%1)		$piece(%1,$$$COMMA,2)
#define KEY3(%1)		$piece(%1,$$$COMMA,3)
#define KEY4(%1)		$piece(%1,$$$COMMA,4)
#define KEY5(%1)		$piece(%1,$$$COMMA,5)
#define KEY6(%1)		$piece(%1,$$$COMMA,6)
#define KEY(%1,%2)		$piece(%1,$$$COMMA,%2)
#define KEYMAX(%1)		$piece(%1,$$$COMMA,$length(%1,$$$COMMA))
 
#define CopyIncrement	0.01
 
#; Return descriptions from Application/System Parameters
#define AppEnum(%str1,%str2) $$GetEnumDescription^COMUtils(%str1,%str2)
#define SysEnum(%str1,%str2) $$GetEnumDescription^COMUtils(%str1,%str2,$$$YES)
 
	// ***********************************************
	// Various Execution tests in @netManager Form definition
	// Variable Q               :    0                :   1
	// BeforeSaveDataRecord     :  Save changes       : Don't save changes
	// BeforeDeletePossibility  :  Show Delete Button : Don't Show it
	// BeforeDeletionDataRecord :  Allow Deletion     : Don't allow deletion
#define QDontSave	1
#define QSave		0
#define QDontDelete	1
#define QDelete		0
 
	// Execution tests for @netManager buttons
#define YQEnable			0
#define YQDisable(%obj)		1_$$DecodeError^COMUtilError(%obj)
	// ***********************************************
 
 
#define MadeChangeText		" if (document.WWW.YBEARB!=null) BEARB("""_$GET(^WWW100(0,"BEARBEITUNG",SPRACHE,2,1))_""");"
 
#;	SR15339 vvv
#define	DYNTABLEGridLineFocusForm(%1)		$piece(%1,$char(31),1)
#define	DYNTABLEGridLineFocusGrid(%1)		$piece(%1,$char(31),2)
#define	DYNTABLEGridLineFocusDynTable(%1)	$piece(%1,$char(31),3)
#define	DYNTABLEGridLineFocusRow(%1)		$piece(%1,$char(31),4)
 
#; FIXME : Should this be 1,3,4 rather than 1,2,3? <GRF> 
#define	DYNTABLEAfterDataFieldsForm(%1)		$piece(%1,$char(31),1)
#define	DYNTABLEAfterDataFieldsDynTable(%1)	$piece(%1,$char(31),2)
#define	DYNTABLEAfterDataFieldsKey(%1)		$piece(%1,$char(31),3)
#;	SR15339 ^^^
 
#;	SR15442 vvv
#define New		1
#define Changed	2
#define Saved	3
#define InUse	4
#;	SR15442 ^^^
 
 
#;	SR15384 vvv
#define FLDHidden		0
#define FLDDate			1
#define FLDBoolean		2
#define FLDMemo			3
#define FLDNumeric		4
#define FLDPassword		5
#define FLDText			6
#define FLDTime			7
#define FLDCurrency		8
#define FLDCounter		9
#define FLDFile			10
#define FLDDraw			11
#define FLDFloating		12
#define FLDIP			13
#define FLDTimestamp	14
#define FLDCollection	15
#define FLDEmbedded		16
#define FLDDate2		17
#define FLDExchange		18
#;	SR15384 ^^^
 
#define	FIELDENABLED	set YHID=0
#define FIELDPARTIAL	set YHID=1
#define FIELDDISABLED	set YHID=2
 
#; condition for a class field be maskable: text or date and not a key
#define IsToMask(%1,%2)  ((%1'="P")&&((%2=6)||(%2=1)))
]]></Routine>
</Export>