<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alMAN.dUManIssueLine">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>alISS.dUIssueLine</Super>
<UDLText name="T">
<Content>
/*----------------------------------------------------------------------------------
; 11-Jun-2014	SCR		SESDF-1326: Force Compile
; 23-Jul-2009	PPP		SR16753: Created
/---------------------------------------------------------------------------------*/
</Content>
</UDLText>


<Method name="%OnDelete">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Delete</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being deleted.

<P>If this method returns an error then the object will not be deleted.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	quit sc
]]></Implementation>
</Method>

<Method name="IssueGet">
<ReturnType>alISS.dUIssue</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 23-Jul-2009	PPP		SR16753: Created
	;-------------------------------------------------------------------------------
	if (i%Issue = $$$NULLOREF) && (%this.IssueNumber '= "") {
		set i%Issue = ##class(alMAN.dUManIssue).%OpenId("0||"_%this.IssueNumber)
	}
	quit i%Issue
]]></Implementation>
</Method>

<Method name="CreateMovement">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 11-Aug-2010	GRF		SR16753: Add ParentItem, Order and OrderLine
	; 23-Jul-2009	PPP		SR16753: Created
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	
	set objMove   = ##class(alDRP.dMovement).%New()
	set objMove.MovementType = ##class(alDRP.dMovementType.ManufacturingIssue).%New()
	
	// Covert to full V2 Objects via interfaces 
	set objMove.Item        = ##class(alINV.iUINV).GetItem(%this.Item)   ; FIXME ,.sc	
	set objMove.FromLocn    = ##class(alLOC.iLOC).GetLocation(%this.Issue.FromLocn.Location)	
	set objMove.ToLocn      = ##class(alLOC.iLOC).GetLocation(%this.Issue.ToLocn.Location)

	set objMove.FromStorage = ##class(alLOC.iLOC).GetStorage(%this.Issue.FromLocn.Location,%this.FromStorage.StockLocation)
	set objMove.ToStorage   = ##class(alLOC.iLOC).GetStorage(%this.Issue.ToLocn.Location,%this.ToStorage.StockLocation)
 	set objMove.Bundle      = ##class(alSOH.dBundle).%OpenId(%this.Bundle)
 	
 	//	set objMove.DueDate     = %this.                      ; Not Implemented yet
	set objMove.Reference   = %this.IssueNumber
	set objMove.LineNumber  = %this.LineNumber
	set objMove.QtyPicked   = %this.QtyIssued
	set objMove.QtyReceived = 0
	set objMove.QtyRequired = %this.QtyRequired
	set objMove.Supply      = %this.Supply
	set objMove.Demand      = %this.Demand
	set objMove.Completed   = $$$NO
 
 	set objMove.ParentItem  = ##class(alINV.iUINV).GetItem(%this.Issue.FinishedGoodItemCode,.sc)
 //	set objMove.OrderNumber = %this.Issue.ProductionOrder
 //	set objMove.OrderLine   = %this.LineNumber\1
	
	if $$$ISOK(sc) {
		set sc = objMove.ChangeState(4)
	}
	quit sc
]]></Implementation>
</Method>

<Method name="FirmIssue">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;------------------------------------------------------------------------------- 
	; History: 
	; 23-Jul-2009	PPP		SR16753: Created
	;------------------------------------------------------------------------------- 
	set sc = ##super()

	; Req processing
	if ($$$ISOK(sc)) {
		
	}
	quit sc
]]></Implementation>
</Method>

<Method name="AutoClose">
<Description><![CDATA[
<p>Attempts to set this record's Status Property to Auto - Close(9)</p>
<p>On success, attempt to Auto - Close the header</p>
<p>Returns a <class>%Status</class> value indicating success or failure.</p>]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;------------------------------------------------------------------------------- 
	; History: 
	; 23-Jul-2009	PPP		SR16753: Created
	;------------------------------------------------------------------------------- 
	set sc = $$$OK

	quit sc
]]></Implementation>
</Method>
<Storage name="StorageAtNet">
<Type>%Library.CacheSQLStorage</Type>

<Property name="AverageCost"/>

<Property name="Bundle"/>

<Property name="Company"/>

<Property name="Demand"/>

<Property name="DespatchStorage"/>

<Property name="FREE1"/>

<Property name="FREE10"/>

<Property name="FREE2"/>

<Property name="FREE3"/>

<Property name="FREE4"/>

<Property name="FREE5"/>

<Property name="FREE6"/>

<Property name="FREE7"/>

<Property name="FREE8"/>

<Property name="FREE9"/>

<Property name="FromStorage"/>

<Property name="IssueNumber"/>

<Property name="Item"/>

<Property name="LineNumber"/>

<Property name="LocationInventory"/>

<Property name="NetworkInventory"/>

<Property name="QtyIssued"/>

<Property name="QtyPicked"/>

<Property name="QtyRequired"/>

<Property name="ReasonCode"/>

<Property name="Reference"/>

<Property name="Status"/>

<Property name="ToStorage"/>

<Property name="Unit"/>

<Property name="UnitCost"/>
</Storage>
</Class>
</Export>