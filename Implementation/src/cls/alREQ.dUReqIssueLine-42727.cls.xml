<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alREQ.dUReqIssueLine">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>alISS.dUIssueLine</Super>
<UDLText name="T">
<Content>
/*----------------------------------------------------------------------------------
; 11-Jun-2014	SCR		SESDF-1326: Force Compile
; 05-Apr-2013	SCR		HEVA-811:Disable Zero check - Force Compile
; 30-Jan-2008	HQN		SR15625 Copied from dREQIssueLine
; 24-Jan-2008 	HQN		SR15625 Changed class signature dREQLine to dUReqLine
;							and dINIssueLine to dUIssueLine
/---------------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="ReqLine">
<Type>alREQ.dUReqLine</Type>
<Transient>1</Transient>

<Parameter name="CAPTION" value="AL00204"/>
</Property>

<UDLText name="T">
<Content>
// ++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="%OnDelete">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Delete</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being deleted.

<P>If this method returns an error then the object will not be deleted.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	quit sc
]]></Implementation>
</Method>

<Method name="IssueGet">
<ReturnType>alISS.dUIssue</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 30-Jan-2008	HQN		SR15625 Changed class signature dREQIssue to dUReqIssue
	; 24-Jan-2008	HQN		SR15625 Changed class signature dINIssue to dUIssue
	;-------------------------------------------------------------------------------
	if (i%Issue = $$$NULLOREF) && (%this.IssueNumber '= "") {
		set i%Issue = ##class(alREQ.dUReqIssue).%OpenId("0||"_%this.IssueNumber)
	}
	quit i%Issue
]]></Implementation>
</Method>

<Method name="ReqLineGet">
<ReturnType>alREQ.dUReqLine</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
 	; History:
	; 24-Jan-2008 	HQN		SR15625 Changed class signature dREQLine to dUReqLine
	;-------------------------------------------------------------------------------
	if (i%ReqLine = $$$NULLOREF)                &&
	   (%this.Issue.Requisition '= $$$NULLOREF) &&
	   (%this.Reference '= "")            { 
		set i%ReqLine = ##class(alREQ.dUReqLine).%OpenId("0||"_%this.Issue.Requisition.ReqNum_"||"_%this.Reference)
	}
	quit i%ReqLine
]]></Implementation>
</Method>

<Method name="CreateMovement">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 04-Jun-2009	PPP		SR16544: If type = 4, The From Storage is the Despatch Storage
	; 09-sep-2008 	Luke	SR15897 Reverted SR15800:
	; 16-Jul-2008   Luke    SR15800: Add check if the Conversion has been run
	; 22-Apr-2008	HQN		SR15673: Corrected reference to iUINV
	; 04-Apr-2008	HQN		SR15625: Corrected bundle handling,
	; 						should lookat bundles that are at the ToStorage
	; 07-Mar-2008   Luke	Upgraded to State engine for movment
	; 22-Feb-2008	Luke	SR15634: change to object V2 processing
	; 05-Dec-2007	HQN		Fixed Picked Qty to match Issued Qty
	; 14-Nov-2007	LB		SR15598: Created [was (alDRP.piMovement).MovementIssue]
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	
	set objMove   = ##class(alISS.dMovement).%New()
	
	// Covert to full V2 Objects via interfaces 
	set objMove.Item        = ##class(alINV.iUINV).GetItem(%this.Item)   ; FIXME ,.sc // SR15673
	set objMove.FromLocn    = ##class(alLOC.iLOC).GetLocation(%this.Issue.FromLocn.Location)	
	set objMove.ToLocn      = ##class(alLOC.iLOC).GetLocation(%this.Issue.ToLocn.Location)

	//SR16544 - if Issue Type = 4 (Kits) ; this is actually release
	if %this.Issue.Type = 4 {
		set objMove.FromStorage = ##class(alLOC.iLOC).GetStorage(%this.Issue.FromLocn.Location,%this.DespatchStorage.StockLocation)
	} else {
		set objMove.FromStorage = ##class(alLOC.iLOC).GetStorage(%this.Issue.FromLocn.Location,%this.FromStorage.StockLocation)
	}
	//set objMove.FromStorage = ##class(alLOC.iLOC).GetStorage(%this.Issue.FromLocn.Location,%this.FromStorage.StockLocation)
	set objMove.ToStorage   = ##class(alLOC.iLOC).GetStorage(%this.Issue.ToLocn.Location,%this.ToStorage.StockLocation)
 	set objMove.Bundle      = ##class(alSOH.dBundle).%OpenId(%this.Bundle)
 	; FIXME, should create bundle at receiving side
 	
 	//	set objMove.DueDate     = %this.                      ; Not Implemented yet
	set objMove.Reference   = %this.IssueNumber
	set objMove.LineNumber  = %this.LineNumber
	set objMove.QtyPicked   = %this.QtyIssued
	set objMove.QtyReceived = 0
	set objMove.QtyRequired = %this.QtyRequired
	set objMove.Supply      = %this.Supply
	set objMove.Demand      = %this.Demand
	set objMove.Completed   = $$$NO
	
	if $$$ISOK(sc) {
		set sc = objMove.ChangeState(4)
		
	}
	quit sc
]]></Implementation>
</Method>

<Method name="FirmIssue">
<Description><![CDATA[
<p>Updates the Status Field on the IssueLine</p>
<ul>
	<li>Creates Movement records</li>
	<li>Updates ReqLine::QtyIssued</li>
	<li>Updates ReqLine::Status to firmed</li>
</ul>]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;------------------------------------------------------------------------------- 
	; History: 
	; 02-Feb-2010	PPP		SR17145: Only change status to 7 if no Outstanding Qty
	; 12-May-2009	PPP		SR16199: POS Issue does not have a Requisition
	; 02-Oct-2008	Luke	SR15980 added check and force on Act/Pnd status on the issueline 
	; 18-Dec-2007	HQN		Corrected logic to have ReqLine to be Act/Pnd when
	; 							QtyReceived is still outstanding
	; 12-Dec-2007	LB		Changed Reqline Status to Act/Pnd (7)
	; 03-Dec-2007	HQN		Added Auto - Close to header
	; 27-Nov-2007	HQN		Created
	;------------------------------------------------------------------------------- 

	set sc = ##super()

	; Req processing
	if ($$$ISOK(sc)) {
		//16199
		if %this.ReqLine'=$$$NULLOREF {
			set %this.ReqLine.QtyIssued = %this.ReqLine.QtyIssued + %this.QtyIssued
			
			//SR17145
			if (%this.ReqLine.QtyIssued >= %this.ReqLine.QtyRequired) {
				set %this.ReqLine.Status = 7         ; Act/Pnd
			} else {
				set %this.ReqLine.Status = 3
			}
			
			if (%this.Status.StatusCode = 9) {
				set %this.ReqLine.QtyReceived = %this.ReqLine.QtyIssued
			}
			if %this.ReqLine.QtyReceived >= %this.ReqLine.QtyRequired {
				set %this.ReqLine.Status = 9         ; Auto - Close
			}
			//if (%this.Status.StatusCode = 7) {
			//	set %this.ReqLine.Status = 7             ; Act/Pnd  //SR15980
			//}
			set sc = %this.ReqLine.%Save()
	
		}

		//Update Demands only if a Reference Exists
		if $$$ISOK(sc) {
			if (%this.Issue.Requisition'=$$$NULLOREF) {
				set sc = %this.UpdateDemand()
			}
		}
		
	}
	
	quit sc
]]></Implementation>
</Method>

<Method name="AutoClose">
<Description><![CDATA[
<p>Attempts to set this record's Status Property to Auto - Close(9)</p>
<p>On success, attempt to Auto - Close the header</p>
<p>Returns a <class>%Status</class> value indicating success or failure.</p>]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;------------------------------------------------------------------------------- 
	; History: 
	; 01-Aug-2008	Luke	SR15814: Corrected sc formation and use of $$$Tex
	; 26-Feb-2008	GRF		Error code; $$$MakeStatus
	; 19-Dec-2007	HQN		Corrected status setter
	;------------------------------------------------------------------------------- 
	set sc = $$$OK
	
	//Only able to autoclose Active/Pending Lines
	if %this.IsClosable() && (%this.Status.StatusCode = 7) {
		set %this.Status = 9                     ; Auto - Close
		set sc = %this.%Save()
		if $$$ISOK(sc) {
			//updates INReqLine
			do %this.ReqLine.AutoClose()
			do %this.Issue.AutoClose()
		}
	} else {
		
		set strMessage = $$$Text("IN00731")      // SR15814:
		set sc =$$$ERROR($$$GeneralError,strMessage)
	}
	quit sc
]]></Implementation>
</Method>

<Method name="UpdateQTY">
<Description><![CDATA[
<p>Updates the Status Field on the IssueLine</p>
<ul>
	<li>Creates Movement records</li>
	<li>Updates ReqLine::QtyIssued</li>
	<li>Updates ReqLine::Status to firmed</li>
</ul>]]></Description>
<FormalSpec>&amp;pQtyRecd:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;------------------------------------------------------------------------------- 
	; FIXME : pQtyRecd - should this be Float rather than String?
	; 
	; History: 
	; 17-Dec-2007	LB		added checks to QtyIssued
	; 14-Dec-2007	LB		created
	;------------------------------------------------------------------------------- 
	set sc = $$$OK
	if (pQtyRecd <= %this.QtyIssued) {
		set %this.ReqLine.QtyReceived = %this.ReqLine.QtyReceived + pQtyRecd
	} else {
		set %this.ReqLine.QtyReceived = %this.ReqLine.QtyReceived + %this.QtyIssued
	}
	set pQtyRecd = pQtyRecd - %this.ReqLine.QtyReceived 
	
	set sc = %this.ReqLine.%Save()
	quit sc
]]></Implementation>
</Method>

<Method name="DemandGet">
<ReturnType>alDRP.dUDemand</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 24-Jan-2008	HQN		SR15625 
	;-------------------------------------------------------------------------------
	if (i%Demand '= $$$NULLOREF) && (i%objDemand = $$$NULLOREF) {
		set objDemand = ##class(alDRP.dUDemand).%OpenId("0||"_%this.ReqLine.FromStockLocn.Location_"||"_i%Demand)
		if '$$$ISERR(objDemand) {
			set i%objDemand = objDemand
		}
	}
	quit i%objDemand
]]></Implementation>
</Method>
<Storage name="StorageAtNet">
<Type>%Library.CacheSQLStorage</Type>

<Property name="AverageCost"/>

<Property name="Bundle"/>

<Property name="Company"/>

<Property name="Demand"/>

<Property name="DespatchStorage"/>

<Property name="FREE1"/>

<Property name="FREE10"/>

<Property name="FREE2"/>

<Property name="FREE3"/>

<Property name="FREE4"/>

<Property name="FREE5"/>

<Property name="FREE6"/>

<Property name="FREE7"/>

<Property name="FREE8"/>

<Property name="FREE9"/>

<Property name="FromStorage"/>

<Property name="IssueNumber"/>

<Property name="Item"/>

<Property name="LineNumber"/>

<Property name="LocationInventory"/>

<Property name="NetworkInventory"/>

<Property name="QtyIssued"/>

<Property name="QtyPicked"/>

<Property name="QtyRequired"/>

<Property name="ReasonCode"/>

<Property name="Reference"/>

<Property name="Status"/>

<Property name="ToStorage"/>

<Property name="Unit"/>

<Property name="UnitCost"/>
</Storage>
</Class>
</Export>