<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARAdmission">
<ClassType/>
<IncludeCode>MEDConst,VARConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ^WWWVAR
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="recAdmissao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codAdmissao = $get(%request.Data("codAdmissao",1))
	if codAdmissao="" quit
	set obj = $get(^MEDAdmission(0,codAdmissao,1))
	set fia = $$$MEDAdmissionFREE4(obj)
	set baa = $$$MEDAdmissionFREE5(obj)
	set paciente = $$$MEDAdmissionPatient(obj)
	set local = $$$MEDAdmissionLocation(obj)
	set setor = $$$MEDAdmissionFREE1(obj)
	set quarto = $$$MEDAdmissionRoom(obj)
	set leito = $$$MEDAdmissionBed(obj)
	set dataAdmissao = $$$MEDAdmissionDateAdmitted(obj)
	set horaAdmissao = $$$MEDAdmissionTimeAdmitted(obj)
	set dataAlta = $$$MEDAdmissionDateDischarged(obj)
	set horaAlta = $$$MEDAdmissionTimeDischarged(obj)
	set resumo	 = $$$MEDAdmissionFREE2(obj)
	;
	set criadoEm	=	$$$MEDAdmissionCreatedDate(obj)
	set criadoPor	=	$$$MEDAdmissionCreatedBy(obj)
	set alteradoEm	=	$$$MEDAdmissionChangedDate(obj)
	set alteradoPor	=	$$$MEDAdmissionChangedBy(obj)
	;
	set geral = {}
	set geral.FIA 		= fia
	set geral.BAA		= baa
	set geral.Paciente	= paciente
	set geral.Local		= local
	set geral.Setor		= setor
	set geral.Quarto	= quarto
	set geral.Leito		= leito
	set geral.DataDeAdmissão	= $select(dataAdmissao="":"",1:$zd(dataAdmissao,3))
	set geral.HoraDeAdmissão	= $select(horaAdmissao="":"",1:$zt(horaAdmissao))
	set geral.DataDaAlta	= $select(dataAlta="":"",1:$zd(dataAlta,3))
	set geral.HoraDaAlta	= $select(horaAlta="":"",1:$zt(horaAlta))
	set geral.ResumoDaAlta		= resumo
	;
	set controle={}
	set controle.CriadoEm	= $select(criadoEm="":"",1:$zdate(criadoEm,1))
	set controle.CriadoPor	= criadoPor
	set controle.AlteradoEm	= $select(alteradoEm="":"",1:$zdate(alteradoEm,1))
	set controle.AlteradoPor	= alteradoPor
	;
	set retorno = {}
	set retorno.geral = geral
	set retorno.controle = controle
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetAdmissao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	do ^WWWVAR
	set contador = 0
	set SQL($increment(contador)) = " SELECT AdmissionID "
	set SQL($increment(contador)) = " FROM MEDAdmission "
	set SQL($increment(contador)) = " where Company = 0 "
	if codigo '= "" set SQL($increment(contador)) = "and AdmissionID = '"_codigo_"'"
	set SQL($increment(contador)) = " Order By AdmissionID desc "
	set SQL = $order(SQL(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.SQL)
	set array = []
	while(rs.%Next()){
		set ID=rs.%Get("AdmissionID")
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = ID
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="GetPacientes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	do ^WWWVAR
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set contador = 0
	set SQL = " SELECT PatientID, Name FROM MEDPatient where company=0 "
	if codigo '= "" set SQL = SQL_"and PatientID = '"_codigo_"'"
	e  if searchValue'="" set SQL = SQL_"where %upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%')"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	while(rs.%Next()){
		set ID=rs.%Get("PatientID")
		set Name=rs.%Get("Name")
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="GetLocais">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;	
	do ^WWWVAR
	set contador = 0
	set SQL = " SELECT Location, LocationName FROM WWW0121 "
	if codigo '= "" set SQL = SQL_"where Location = '"_codigo_"'"
	e  if searchValue'="" set SQL = SQL_"where %upper(Location) like %upper('%"_searchValue_"%') or %upper(LocationName) like %upper('%"_searchValue_"%')"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	while(rs.%Next()){
		set ID=rs.%Get("Location")
		set Name=rs.%Get("LocationName")
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="salvarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	do ^WWWVAR
	tstart
	set strStatus=""
	set erro=0
	try{
		set chave 	= $get(%request.Data("chave",1))
		set dados 	= $get(%request.Data("dados",1))
		if chave="+" set chave = ""
		set dados = [].%FromJSON(dados)
		set obj = ""
		if chave'="" set obj = $get(^MEDAdmission(0,chave,1))
		if dados.DataDaAlta=""{
			set rs = ##class(%SQL.Statement).%ExecDirect("","select top 1 AdmissionID from MEDAdmission where company=0 and Patient=? and TimeDischarged is null",dados.Paciente)
			if rs.%Next(){
				;set strStatus="Paciente possui uma admissão em aberto"
				;quit
			}
		}
		set dataAdm = $zdateh($replace(dados.DataDeAdmissão,"/","-"),3,,,,,,,"")
		set horaAdm = $ztimeh(dados.HoraDeAdmissão,,"")
		set dataAlta = $zdateh($replace(dados.DataDaAlta,"/","-"),3,,,,,,,"")
		set horaAlta = $ztimeh(dados.HoraDaAlta,,"")
		if dataAlta'="",dataAdm>dataAlta{
			set strStatus="Data da Alta ("_dados.DataDaAlta_" - "_dataAlta_") não deve ser menor que a data da admissão ("_dados.DataDeAdmissão_" - "_dataAdm_")"
			quit
		}elseif dataAdm=dataAlta,horaAdm>horaAlta{
			set strStatus="Hora da Alta ("_dados.HoraDaAlta_" - "_horaAlta_") não deve ser menor que a hora da admissão ("_dados.HoraDaAdmissão_" - "_horaAdm_")"
			quit
		}
		if dataAdm=""{
			set strStatus="Data da Admissão ("_dados.DataDaAdmissão_" - "_dataAdm_") é obrigatório"
			quit
		}
		if horaAdm=""{
			set strStatus="Hora da Admissão ("_dados.HoraDeAdmissão_" - "_horaAdm_") é obrigatório"
			quit
		}
		if dataAlta'="",horaAlta=""{
			set strStatus="Hora da Alta é obrigatório"
			quit
		}
		set $$$MEDAdmissionFREE4(obj) = dados.FIA
		set $$$MEDAdmissionFREE5(obj) = dados.BAA
		set $$$MEDAdmissionPatient(obj) = dados.Paciente
		set $$$MEDAdmissionLocation(obj) = dados.Local
		set $$$MEDAdmissionFREE1(obj) = dados.Setor
		set $$$MEDAdmissionRoom(obj) = dados.Quarto
		set $$$MEDAdmissionBed(obj) = dados.Leito
		set $$$MEDAdmissionDateAdmitted(obj) = dataAdm
		set $$$MEDAdmissionTimeAdmitted(obj) = horaAdm
		set $$$MEDAdmissionDateDischarged(obj) = dataAlta
		set $$$MEDAdmissionTimeDischarged(obj) = horaAlta
		set $$$MEDAdmissionFREE2(obj) = dados.ResumoDaAlta
		;
		if chave=""{
			set chave = $$GetNextNumber^COMUtils("MEDAdmission","")
			set $$$MEDAdmissionCreatedDate(obj) = $horolog
			set $$$MEDAdmissionCreatedBy(obj) = YBED
		}else{
			set $$$MEDAdmissionChangedDate(obj) = $horolog
			set $$$MEDAdmissionChangedBy(obj) = YBED
		}
		
		set strStatus = $$$Save("MEDAdmission",chave,obj,$$$YES)
	}
	catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro=err
	}
	set retorno = {}
	if 'erro{
		tcommit
		set retorno.codigo = chave
		set retorno.status = strStatus
	}else{
		trollback
		set retorno.status = strStatus
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>
</Class>
</Export>