<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.update.ScriptRelease03r00">
<ClassType/>
<Import>VAR.infra.util</Import>
<IncludeCode>VARConst,COMSYS,VARLog,INConst,MEDConst,COMConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>VAR.update.ScriptRelease</Super>

<Parameter name="PARAMCORE138">
<Type>%String</Type>
<Default>CORE-138</Default>
</Parameter>

<Parameter name="PARAMCORE161">
<Type>%String</Type>
<Default>CORE-161</Default>
</Parameter>

<Parameter name="PARAMCORE166">
<Type>%String</Type>
<Default>CORE-166</Default>
</Parameter>

<Parameter name="PARAMCORE167">
<Type>%String</Type>
<Default>CORE-167</Default>
</Parameter>

<Parameter name="PARAMCORE170">
<Type>%String</Type>
<Default>CORE-170</Default>
</Parameter>

<Parameter name="PARAMCORE171">
<Type>%String</Type>
<Default>CORE-171</Default>
</Parameter>

<Parameter name="PARAMCORE178">
<Type>%String</Type>
<Default>CORE-178</Default>
</Parameter>

<Parameter name="PARAMCORE206">
<Type>%String</Type>
<Default>CORE-206</Default>
</Parameter>

<Parameter name="PARAMCORE225">
<Type>%String</Type>
<Default>CORE-225</Default>
</Parameter>

<Parameter name="PARAMCORE226">
<Type>%String</Type>
<Default>CORE-226</Default>
</Parameter>

<Parameter name="PARAMCORE76">
<Type>%String</Type>
<Default>CORE-76</Default>
</Parameter>

<Parameter name="PARAMNEWLICENSEALLOCATION">
<Type>%String</Type>
<Default>PARAM_NEW_LICENSE_ALLOCATION</Default>
</Parameter>

<Parameter name="PARAMSETLICENSEUSERID">
<Type>%String</Type>
<Default>PARAM_SET_LICENSE_USER_ID</Default>
</Parameter>

<Parameter name="PARAMPRAZOALERTACONTRATOS">
<Type>%String</Type>
<Default>PARAM_PRAZO_ALERTA_CONTRATOS</Default>
</Parameter>

<Parameter name="PARAMUNIDADEMEDIDADOSADOR">
<Type>%String</Type>
<Default>PARAM_UNIDADE_MEDIDA_DOSADOR</Default>
</Parameter>

<Parameter name="PARAMRECOMPILEWWWFORMHOTKEY">
<Type>%String</Type>
<Default>PARAM_RECOMPILE_WWWFORMHOTKEY</Default>
</Parameter>

<Parameter name="PARAMCORE247">
<Type>%String</Type>
<Default>CORE-247</Default>
</Parameter>

<Parameter name="PARAMCORE241">
<Type>%String</Type>
<Default>CORE-241</Default>
</Parameter>

<Parameter name="PARAMHEVA1164">
<Type>%String</Type>
<Default>HEVA-1164</Default>
</Parameter>

<Parameter name="PARAMHEVA1164A">
<Type>%String</Type>
<Default>HEVA-1164A</Default>
</Parameter>

<Parameter name="PARAMHEVA1164B">
<Type>%String</Type>
<Default>HEVA-1164B</Default>
</Parameter>

<Parameter name="PARAMCORE266">
<Type>%String</Type>
<Default>CORE-266</Default>
</Parameter>

<Parameter name="PARAMCORE93">
<Type>%String</Type>
<Default>CORE-93</Default>
</Parameter>

<Parameter name="IPIRANGA164">
<Type>%String</Type>
<Default>IPIRANGA-164</Default>
</Parameter>

<Parameter name="PARAMHEVA1116">
<Type>%String</Type>
<Default>HEVA-1116</Default>
</Parameter>

<Parameter name="PARAMCORE93A">
<Type>%String</Type>
<Default>CORE-93A</Default>
</Parameter>

<Parameter name="PARAMCORE93B">
<Type>%String</Type>
<Default>CORE-93B</Default>
</Parameter>

<Parameter name="PARAMCORE93C">
<Type>%String</Type>
<Default>CORE-93C</Default>
</Parameter>

<Parameter name="PARAMHEVA1208">
<Type>%String</Type>
<Default>HEVA-1208</Default>
</Parameter>

<Parameter name="PARAMCORE266A">
<Type>%String</Type>
<Default>CORE-266A</Default>
</Parameter>

<Parameter name="PARAMCORE266B">
<Type>%String</Type>
<Default>CORE-266B</Default>
</Parameter>

<Parameter name="PARAMCORE266C">
<Type>%String</Type>
<Default>CORE-266B</Default>
</Parameter>

<Parameter name="PARAMHEVA1148">
<Type>%string</Type>
<Default>HEVA-1148</Default>
</Parameter>

<Parameter name="PARAMHEVA11483">
<Type>%string</Type>
<Default>HEVA-1148.3</Default>
</Parameter>

<Parameter name="PARAMHEVA11486">
<Type>%string</Type>
<Default>HEVA-1148.6</Default>
</Parameter>

<Parameter name="PARAMHEVA11488">
<Type>%string</Type>
<Default>HEVA-1148.10</Default>
</Parameter>

<Parameter name="PARAMCORE669">
<Type>%String</Type>
<Default>CORE-669</Default>
</Parameter>

<Parameter name="PARAMCORE669A">
<Type>%String</Type>
<Default>CORE-669A</Default>
</Parameter>

<Parameter name="PARAMSESDF669B">
<Type>%String</Type>
<Default>SESDF-669B</Default>
</Parameter>

<Parameter name="PARAMSESDF669C">
<Type>%String</Type>
<Default>SESDF-669C</Default>
</Parameter>

<Parameter name="PARAMSESDF669D">
<Type>%String</Type>
<Default>SESDF-669D</Default>
</Parameter>

<Parameter name="PARAMSESDF681">
<Type>%String</Type>
<Default>SESDF-681</Default>
</Parameter>

<Parameter name="PARAMSESDF681B">
<Type>%String</Type>
<Default>SESDF-681B</Default>
</Parameter>

<Parameter name="PARAMSESDF681C">
<Type>%String</Type>
<Default>SESDF-681C</Default>
</Parameter>

<Parameter name="PARAMSESDF681D">
<Type>%String</Type>
<Default>SESDF-681D</Default>
</Parameter>

<Parameter name="PARAMHEVA1265">
<Type>%String</Type>
<Default>HEVA-1265</Default>
</Parameter>

<Parameter name="PARAMCORE288">
<Type>%String</Type>
<Default>CORE-288</Default>
</Parameter>

<Parameter name="REVERTTITLE">
<Type>%String</Type>
<Default>REVERT-TITLE</Default>
</Parameter>

<Parameter name="PARAMSESDF655">
<Type>%String</Type>
<Default>SESDF-655</Default>
</Parameter>

<Parameter name="PARAMUFH12">
<Type>%String</Type>
<Default>UFH-12</Default>
</Parameter>

<Parameter name="PARAMHEVA1365">
<Type>%String</Type>
<Default>HEVA-1365</Default>
</Parameter>

<Parameter name="PARAMHEVA1505A">
<Type>%String</Type>
<Default>HEVA-1505A</Default>
</Parameter>

<Parameter name="PARAMHEVA1522">
<Type>%String</Type>
<Default>HEVA-1522</Default>
</Parameter>

<Parameter name="PARAMHEVA1775">
<Type>%String</Type>
<Default>HEVA-1775</Default>
</Parameter>

<Parameter name="PARAMHEVA1514">
<Type>%String</Type>
<Default>HEVA-1514</Default>
</Parameter>

<Method name="UpdateBuild005">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
    if (+..GetParameter(..#PARAMHEVA1522) = 0) {
     	$$$VAR
   		set VORG(1) = "INIssue"
		do ^WWWSORT
   		set VORG(1) = "MEDPrescription"
		do ^WWWSORT
    	do ..SetParameter(..#PARAMHEVA1522, 1) 
	}
	
	if (+..GetParameter(..#PARAMHEVA1775) = 0) {
     	do ##class(VAR.infra.prescription.AtualizaRelatorioSCIH).Register()
    	do ..SetParameter(..#PARAMHEVA1775, 1) 
	}
    if (+..GetParameter(..#PARAMHEVA1514) = 0) {
     	set ^VARPARA(0,"FAIXAETARIA","PT",7,1)="â‰¥ 60 anos~"
    	do ..SetParameter(..#PARAMHEVA1514, 1) 
	}	 
	 quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild004">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
	if (+..GetParameter(..#PARAMHEVA1365) = 0) {
		do RunAll^VARCMM
    		do ..SetParameter(..#PARAMHEVA1365, 1)
	}
	if (+..GetParameter(..#PARAMCORE288) = 0) {
		$$$VAR
		set strStatus = $$Save^COMUtils("COMConst", "TSUtilityFormUsage", "1", 1)
		set strStatus = $$Save^COMUtils("COMConst", "TSUtilityFormUsageLine", "1", 1)
		do Generate^COMConst("TS")
    	if strStatus do ..SetParameter(..#PARAMCORE288, 1)
	}
    if (+..GetParameter(..#REVERTTITLE) = 0) {
		$$$VAR
		set $$$WWW012HideLogoSpacer(^WWW012(0,0,1)) = 1
		set $$$WWW012ColorCodeForHeaderLeft(^WWW012(0,0,1)) = 45
		set $$$WWW012ColorCodeForHeaderRight(^WWW012(0,0,1)) = 45
		set $$$WWW012CompanyName(^WWW012(0,0,1)) = "HEVA"
		set $$$WWWClientParamTitleofLoginForm(^WWWClientParam(0,0,1)) = "HEVA"
		do ..SetParameter(..#REVERTTITLE, 1)
	}
    if (+..GetParameter(..#PARAMHEVA1505A) = 0) {
     	$$$VAR    	
     	set ^CacheTempSCR($i(^CacheTempSCR))="PARAMHEVA1505A"
     	set objWWW120Scan="Dispense Pick Lines~~INART~AddScanLine^VARMEDDispenseManPickLineScan(pidScan)"
     	set strStatus=$$Save^COMUtils("WWW120Scan","VARMEDDispenseManPickLine",objWWW120Scan,1)
    	if $$$ISOK(strStatus) {
	    	set objWWWSystemSetup=$get(^WWWSystemSetup(0,YM,1))
     		set strScanning=$$$WWWSystemSetupEnableScanning(objWWWSystemSetup)
     		if strScanning="" {
	     		set $$$WWWSystemSetupEnableScanning(objWWWSystemSetup)="VARMEDDispenseManPickLine"
     		} elseif (";"_strScanning_";")'[(";VARMEDDispenseManPickLine;") {
	     	set $$$WWWSystemSetupEnableScanning(objWWWSystemSetup)=strScanning_";VARMEDDispenseManPickLine"
     		}
    	}
     	set strStatus=$$Save^COMUtils("WWWSystemSetup",YM,objWWWSystemSetup,1)
    	if $$$ISOK(strStatus) do ..SetParameter(..#PARAMHEVA1505A, 1) 
	}
	
	do ..IncBuild()

    quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild003">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
    set ^CacheTempSCR($i(^CacheTempSCR))="UpdateBuild003"
    if (+..GetParameter(..#PARAMHEVA1208) = 0) {
    	$$$VAR
		set VORG(1) = "MEDDispense"
		do ^WWWSORTGEN
    	do ..SetParameter(..#PARAMHEVA1208, 1)
    	
    	do ResetConformityCalculation^VARDesempAtendPresc()
	}    
    
    if (+..GetParameter(..#PARAMHEVA1148) = 0) {
     	$$$VAR
   		set VORG(1) = "VARProdutoManipulado"
		do ^WWWSORT
	
		set strStatus=$$$OK	
		if '$data(^WWW128(YM,"VARManipulacaoMagistral")) {
			set strStatus=$$Save^COMUtils("WWW128","VARManipulacaoMagistral","YYYY/000000~~1~2013",1)
		}
    	do ..SetParameter(..#PARAMHEVA1148, 1) 
	}
    if (+..GetParameter(..#PARAMHEVA11483) = 0) {
     	$$$VAR
     	
     	set objWWWSystemSetup=$get(^WWWSystemSetup(0,YM,1))
     	set strScanning=$$$WWWSystemSetupEnableScanning(objWWWSystemSetup)
     	if strScanning="" {
	     	set $$$WWWSystemSetupEnableScanning(objWWWSystemSetup)="VARManipulacaoMagistralLine"
     	} elseif (";"_strScanning_";")'[(";VARManipulacaoMagistralLine;") {
	     	set $$$WWWSystemSetupEnableScanning(objWWWSystemSetup)=strScanning_";VARManipulacaoMagistralLine"
     	}
     	set strStatus=$$Save^COMUtils("WWWSystemSetup",YM,objWWWSystemSetup,1)
    	if $$$ISOK(strStatus) do ..SetParameter(..#PARAMHEVA11483, 1) 
	}
    if (+..GetParameter(..#PARAMHEVA11486) = 0) {
     	$$$VAR
     	
     	set objWWW120Scan="Ordem de ManipulaÃ§Ã£o Magistral Line~~INART~AddScanLine^VARManipulacaoMagistralLineScan(pidScan)"
     	set strStatus=$$Save^COMUtils("WWW120Scan","VARManipulacaoMagistralLine",objWWW120Scan,1)
    	if $$$ISOK(strStatus) do ..SetParameter(..#PARAMHEVA11486, 1) 
	}
    if (+..GetParameter(..#PARAMHEVA11488) = 0) {
     	$$$VAR
   		set VORG(1) = "VARManipulacaoMagistral"
		do ^WWWSORT
    	do ..SetParameter(..#PARAMHEVA11488, 1) 
	}
	if (+..GetParameter(..#PARAMCORE669) = 0) {
    	$$$VAR
 		set idReq=""
 		for {  
 			set idReq	= $o(^INReq(YM,idReq)) 
 			quit:idReq=""  
 			set objReq	= $get(^INReq(YM,idReq,1))
 			set idToLoc	= $$$INReqToLocn(objReq)
 			set idLine	= ""
 			for {
	 			set idLine	= $order(^INReqLine(YM,idReq,idLine))
	 			quit:idLine=""
	 			set objLine	= $get(^INReqLine(YM,idReq,idLine,1))
	 			set $$$INReqLineToLocation(objLine)	= idLine
				set strStatus = $$Save^COMUtils("INReqLine",idReq_","_idLine,objLine,1)
 			}
 		}
    	do ..SetParameter(..#PARAMCORE669, 1) 
	}
	if (+..GetParameter(..#PARAMCORE669A) = 0) {
    	$$$VAR
    	do ReIndex^COMIndex("INReqLine",1)
    	do ..SetParameter(..#PARAMCORE669A, 1) 
	}
	if (+..GetParameter(..#PARAMSESDF669B) = 0) {
    	$$$VAR
    	do ReIndex^COMIndex("WWW124",1)
    	do ..SetParameter(..#PARAMSESDF669B, 1) 
	}

	if (+..GetParameter(..#PARAMSESDF669C) = 0) {
    	$$$VAR
    	do ReIndex^COMIndex("INTFR",1)
    	do ..SetParameter(..#PARAMSESDF669C, 1) 
	}

	if (+..GetParameter(..#PARAMSESDF669D) = 0) {
		$$$VAR
		set strStatus = $$Save^COMUtils("COMConst", "INRECTFRSearch", "1", 1)
		do Generate^COMConst("IN")
    	if strStatus do ..SetParameter(..#PARAMSESDF669D, 1)
	}
	
	if (+..GetParameter(..#PARAMSESDF681) = 0) {
    	$$$VAR
    	do ReIndex^COMIndex("INReq",1)
    	do ..SetParameter(..#PARAMSESDF681, 1) 
	}

	if (+..GetParameter(..#PARAMSESDF681B) = 0) {
    	$$$VAR
    	do ..Create("INReqItemViewLine","Do OnBeforeFormat^INReqItemViewLine(YFIELDNAME,"""",YFELD)")
    	do ..SetParameter(..#PARAMSESDF681B, 1) 
	}
	do ..IncBuild()

	if (+..GetParameter(..#PARAMSESDF681C) = 0) {
    	$$$VAR
    	do ..Create("INReqItemViewLine","OnBeforeFormat^INReqItemViewLine(YFIELDNAME,"""",YFELD)")
    	do ..SetParameter(..#PARAMSESDF681C, 1) 
	}
	if (+..GetParameter(..#PARAMSESDF655) = 0) {
    	$$$VAR
    	do ReIndex^COMIndex("INReq",1)
    	do ..SetParameter(..#PARAMSESDF655, 1) 
	}
	if (+..GetParameter(..#PARAMHEVA1265) = 0) {
    	$$$VAR
		do FixReservation^INReservation(1)
    	do ..SetParameter(..#PARAMHEVA1265, 1) 
	}
	
	if (+..GetParameter(..#PARAMUFH12) = 0) {
		$$$VAR
		Do Purge^%apiSQL(0)
		do ##class(alSOH.dStockHistory).%PurgeIndices()
		do ##class(alSOH.dStockHistory).%BuildIndices()
		do CreateAndCompileProject^COMObject("al",1)
    	do ..SetParameter(..#PARAMUFH12, 1)
	}
	
	do ..IncBuild()

    quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild002">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
    
    if (+..GetParameter(..#PARAMCORE93A) = 0) {
    	$$$VAR
 		set objINVORG = $get(^INVORG(YM,0,1))  ; CORE-93
 		if '$$$INVORGNumberofDaystoSearch(objINVORG) {
	 		set $$$INVORGNumberofDaystoSearch(objINVORG)=90
	 		set strStatus = $$Save^COMUtils("INVORG",0,objINVORG,1)
 		}
    	do ..SetParameter(..#PARAMCORE93A, 1) 
	}
    
    if (+..GetParameter(..#IPIRANGA164) = 0) {
    	$$$VAR
    	set objWWW012=$get(^WWW012(0,YM,1))
    	set $$$WWW012FixedColumns(objWWW012)=$$$YES
    	set strStatus = $$Save^COMUtils("WWW012",YM,objWWW012,1)
    	if strStatus do ..SetParameter(..#IPIRANGA164, 1) 
	}

	if (+..GetParameter(..#PARAMHEVA1164B) = 0) {
		set strStatus = ..HEVA1164B()
		if strStatus do ..SetParameter(..#PARAMHEVA1164B, 1)
	}

	if (+..GetParameter(..#PARAMCORE266) = 0) {
    	$$$VAR
 		do CreateAndCompileProject^COMObject("al",1)
    	do ..SetParameter(..#PARAMCORE266, 1) 
	}

	if (+..GetParameter(..#PARAMCORE93) = 0) {
    	$$$VAR
 		set idDisp = ""  ; HEVA-93
 		write !,"****** Setting Patient Field on all MEDDispenses *****",!
 		for {
	 		set idDisp = $order(^MEDDispense(YM,idDisp))
	 		quit:idDisp=""
	 		set objDisp = $get(^MEDDispense(YM,idDisp,1))
	 		do OnBeforeSaveHook^MEDDispense(idDisp,.objDisp)
	 		set strStatus = $$Save^COMUtils("MEDDispense",idDisp,objDisp,1)
 		}
    	do ..SetParameter(..#PARAMCORE93, 1) 
	}
	
	if (+..GetParameter(..#PARAMHEVA1116) = 0) {
    	$$$VAR
    	set strStatus = $$$OK
		if $$$ISOK(strStatus){
			set objWWW122 = $get(^WWW122(0,"MEDPrescriptionSetup",80,1))
			set $$$WWW122OnlyShowIfOptionYOPTION1(objWWW122) = ""
			set strStatus = $$Save^COMUtils("WWW122","MEDPrescriptionSetup"_","_80,objWWW122,1)
		}
		if $$$ISOK(strStatus){
			set objWWW122 = $get(^WWW122(0,"MEDPrescriptionSetup",81,1))
			set $$$WWW122OnlyShowIfOptionYOPTION1(objWWW122) = ""
			set strStatus = $$Save^COMUtils("WWW122","MEDPrescriptionSetup"_","_81,objWWW122,1)
		}	
    	if $$$ISOK(strStatus) do ..SetParameter(..#PARAMHEVA1116, 1) 
	}
	
	if (+..GetParameter(..#PARAMCORE93B) = 0) {
    	$$$VAR
		set objSystemSetup = $get(^WWWSystemSetup(0,0,1))
		set $$$WWWTransactionTransactionControl(objSystemSetup) = $$$WWWTransactionTransactionControl(objSystemSetup)_";"_
																	"INIssueRevLineSearch"
																	
		set strStatus = $$$Save("WWWSystemSetup","0",objSystemSetup,1)
    	do ..SetParameter(..#PARAMCORE93B, 1) 
	}
	
	if (+..GetParameter(..#PARAMCORE93C) = 0) {
    	$$$VAR
    	set strStatus	= $$$OK
		set keyMeta = "INIssueRevLineSearch"
		set objMeta = "INIssue Rev Line~~INART~AddScanLine^INIssueRevLineScan(pidScan)"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWW120Scan",keyMeta,objMeta,1)
		}
    	do ..SetParameter(..#PARAMCORE93C, 1) 
	}
	if (+..GetParameter(..#PARAMCORE266A) = 0) {
    	$$$VAR
    	if ($zu(110)="ruiva") && ($znspace="HEVA") {  ; HEVA test location setup
    		set strStatus	= $$$OK
			for keyMeta = "0,4","0,4.01","0,4.02" {
				quit:$$$ISERR(strStatus)
				set objMeta = $get(^WWW0121(YM,0,4,1))
				set $piece(objMeta,"~",97)=1
				if $$$ISOK(strStatus) {
					set strStatus = $$Save^COMUtils("WWW0121",keyMeta,objMeta,1)
				}
			}
    	}
    	do ..SetParameter(..#PARAMCORE266A, 1) 
	}
	if (+..GetParameter(..#PARAMCORE266B) = 0) {
    	$$$VAR
    	if ($zu(110)="ruiva") && ($znspace="SESDF-V3") {  ; SESDF test location setup
    		set strStatus	= $$$OK
			for keyMeta = "0,4","0,4.01","0,4.02" {
				quit:$$$ISERR(strStatus)
				set objMeta = $get(^WWW0121(YM,0,4,1))
				set $piece(objMeta,"~",97)=1
				if $$$ISOK(strStatus) {
					set strStatus = $$Save^COMUtils("WWW0121",keyMeta,objMeta,1)
				}
			}
    	}
    	do ..SetParameter(..#PARAMCORE266B, 1) 
	}
	if (+..GetParameter(..#PARAMCORE266C) = 0) {
    	$$$VAR
 		set idPolicy=""
 		for {  
 			set idPolicy=$o(^INItemPolicy(YM,idPolicy)) 
 			quit:idPolicy=""  
 			do ##class(alSOH.dUSourcingPolicy).ConvertOnSave(idPolicy)
 		}
    	do ..SetParameter(..#PARAMCORE266C, 1)	
	}
	
	do ..IncBuild()

    quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild001">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
    
	if (+..GetParameter(..#PARAMNEWLICENSEALLOCATION) = 0) {
	    //do setLicenseUserIdentification^COMSTARTZstart("")
		do ..SetParameter(..#PARAMNEWLICENSEALLOCATION, 1)
	}
    
	if (+..GetParameter(..#PARAMCORE247) = 0) {
		$$$VAR
		set keyMeta = "WWW120VARHook"
		set objMeta = "1"
		set strStatus = $$$OK
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("COMConst",keyMeta,objMeta,1)
		}
		do Generate^COMConst()
   		do ROUTINE^%R("WWW120VARHook",,,"LCS")
    	if strStatus do ..SetParameter(..#PARAMCORE247, 1)
	}
	
	if (+..GetParameter(..#PARAMCORE241) = 0) {
		set strStatus = $$Execute^COMPL17846(1)
		if strStatus do ..SetParameter(..#PARAMCORE241, 1)
	}

	if (+..GetParameter(..#PARAMHEVA1164) = 0) {
		set strStatus = ##class(IN.update.ScriptRelease01r70).HEVA1164()
		if strStatus do ..SetParameter(..#PARAMHEVA1164, 1)
	}

	if (+..GetParameter(..#PARAMHEVA1164A) = 0) {
		set strStatus = ##class(IN.update.ScriptRelease01r70).HEVA1164A()
		if strStatus do ..SetParameter(..#PARAMHEVA1164A, 1)
	}

	if (+..GetParameter(..#PARAMRECOMPILEWWWFORMHOTKEY) = 0) {
		do Generate^COMConst("WWW")
		set sc = $System.OBJ.CompileList("WWWFORMHOTKEY.mac", "cfkv")
		if ($$$ISOK(sc)) do ..SetParameter(..#PARAMRECOMPILEWWWFORMHOTKEY, 1)
	}

    do ..IncBuild()

    quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild000">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
    
	if (+..GetParameter(..#PARAMNEWLICENSEALLOCATION) = 0) {
        $$$VAR
        
        set strStatus = $$$OK
        
        set keyParametroCliente = YM
        set objParametroCliente = $get(^VARParametroCliente(YM,YM,1))
        
        //do setLicenseUserIdentification^COMSTARTZstart($$$YES)
		set $$$VARParametroClienteIDsUsuariosPadraoLicencas(objParametroCliente) = "DEFAULT;DEFAULT2;DEFAULT3"
		
		set strStatus = $$$Save("VARParametroCliente",keyParametroCliente,objParametroCliente,$$$YES)
		        
		if ($$$ISOK(strStatus)) {
			do ..SetParameter(..#PARAMNEWLICENSEALLOCATION, 1)
		} else {
			write !, "Erro ao criar os parametros das novas licenÃ§as!", !
		}
    }  
    
	if (+..GetParameter(..#PARAMSETLICENSEUSERID) = 0) {
        $$$VAR       
		
		set strStatus = ..UpdateLicenseUserIdOfUsers()	
		
		if ($$$ISOK(strStatus)) {
			w "Update User/LicenseUserId successful ",!
			do ..SetParameter(..#PARAMSETLICENSEUSERID, 1)
		} else {
			w "Update User/LicenseUserId error: "_strStatus,!
		}
    }   

	if (+..GetParameter(..#PARAMCORE138) = 0) {
    	$$$VAR
 		do CreateAndCompileProject^COMObject("al",1)
 		w ##class(alDRP.dMovement).%PurgeIndices()
		w ##class(alDRP.dMovement).%BuildIndices()
		w ##class(alDRP.dPlannedMovement).%PurgeIndices()
		w ##class(alDRP.dPlannedMovement).%BuildIndices()
		w ##class(alDRP.iMovement).%PurgeIndices()
		w ##class(alDRP.iMovement).%BuildIndices()
		Do $system.SQL.Purge(0)
    	do ..SetParameter(..#PARAMCORE138, 1) 
	}
	
	if (+..GetParameter(..#PARAMCORE161) = 0) {
    	$$$VAR
    	do Execute^COMPIT17929(0)
    	do ..SetParameter(..#PARAMCORE161, 1) 
	}
	
	if (+..GetParameter(..#PARAMCORE166) = 0) {
    	$$$VAR
    	set strStatus=$$CheckMidnight^WWWDASHBOARD()
    	if strStatus do ..SetParameter(..#PARAMCORE166, 1) 
	}
	
	if (+..GetParameter(..#PARAMCORE167) = 0) {
		set sc=##class(IN.update.ScriptRelease01r70).SR18018()
		if $$$ISOK(sc) do ..SetParameter(..#PARAMCORE167, 1)
	}
	
	if (+..GetParameter(..#PARAMCORE170) = 0) {
		set sc=##class(alLOC.dStorage).%BuildIndices()
		if $$$ISOK(sc) do ..SetParameter(..#PARAMCORE170, 1)
	}
	
	if (+..GetParameter(..#PARAMCORE171) = 0) {
		$$$VAR
		new objWWW012
		
		set strStatus=$$$OK
		if (+$$$WWWClientParamCoreChangesTCI($get(^WWWClientParam(YM,YM,1)))) {
			set objWWW012=$get(^WWW012(0,YM,1))
			set $$$WWW012LoginImage(objWWW012)="VARelem4.gif"
			set strStatus=$$$Save("WWW012",YM,objWWW012,1)
		}
		if $$$ISOK(strStatus) do ..SetParameter(..#PARAMCORE171, 1)
	}
	
	if (+..GetParameter(..#PARAMCORE178) = 0) {
		do ^WWWVAR
		set strStatus = $$$OK
		set keyMeta = "BACK"
		set objMeta = "~~~~115"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		set keyMeta = "FIRST RECORD"
		set objMeta = "Go to the first record~~1~~118"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		set keyMeta = "HELP"
		set objMeta = "Popup the Help Screen~~~~112~"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		set keyMeta = "LAST RECORD"
		set objMeta = "Go to the last record~~1~~119"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		set keyMeta = "NEXT RECORD"
		set objMeta = "Go to the next record.~~~~119~"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		set keyMeta = "PREV RECORD"
		set objMeta = "Go to the Previous Record~~~~118~"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		set keyMeta = "SAVE"
		set objMeta = "Save the current Record~~~~123"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		set keyMeta = "SEARCH"
		set objMeta = "Open the COMView search panel~~~~120"
		if $$$ISOK(strStatus) {
			set strStatus = $$Save^COMUtils("WWWFORMHOTKEY",keyMeta,objMeta,1)
		}
		if $$$ISOK(strStatus) do ..SetParameter(..#PARAMCORE178, 1)
	}    

	if (+..GetParameter(..#PARAMCORE206) = 0) {
		do ^WWWVAR
		set YQ=1
		set VORG(2)=1
		set VORG(3)=1
	
		set VORGX="WWW120DynTableLine"
		do DEL1^WWWDLOE
	
		set VORGX="WWW120DynTableLine"
		do DEL1^WWWFLOE
		
		do ##class(%Library.Routine).Delete("idx.WWW120DynTableLine.MAC",0)
		do ##class(%Library.Routine).Delete("WWW120DynTableLine.MAC",0)
		do ..SetParameter(..#PARAMCORE206, 1)
	}
	
	if (+..GetParameter(..#PARAMCORE225) = 0) {
		set strStatus = $$Save^COMUtils("FININTInterfaceType","CONEX","~~~~Consumption Expense~1~",1)
 		do CreateAndCompileProject^COMObject("al",1)
		do ..SetParameter(..#PARAMCORE225, 1)
	}

	if (+..GetParameter(..#PARAMCORE226) = 0) {
		do ^WWWVAR

		set YQ=1
		set VORG(2)=1
		set VORG(3)=1
	
		set VORGX="WWWEDIT"
		do DEL1^WWWFLOE
		
		set objWWW012=$get(^WWW012(0,YM,1))
		for strDirectory="\htmlarea\images\","\htmlarea\popups\","\htmlarea\" {
			set strDirectory=$$$WWW012PhysicalWWWDirectory(objWWW012)_strDirectory		
			set strDirectory=##Class(%File).NormalizeDirectory(strDirectory)
			w ##class(%Library.File).ComplexDelete(strDirectory_"*.*")
			w ##class(%Library.File).RemoveDirectory(strDirectory)
		}
		
		do ..SetParameter(..#PARAMCORE226, 1)
	}

	if (+..GetParameter(..#PARAMCORE76) = 0) {
		$$$VAR
		set strStatus=$$$OK
    	set objWWW012=$get(^WWW012(0,YM,1))
    	if '$$$WWW012ApplyGeneralDateMasking(objWWW012) {
	    	set $$$WWW012ApplyGeneralDateMasking(objWWW012)=1
	    	set strStatus= $$Save^COMUtils("WWW012",YM,objWWW012,1)
    	}
    	if strStatus do ..SetParameter(..#PARAMCORE76, 1)
	}

	if (+..GetParameter(..#PARAMPRAZOALERTACONTRATOS) = 0) {
    	$$$VAR
    	set objContratoParamEmail = $get(^VARContratoParametrosEmail(0,0,1))
    	if ($znspace = "AME"){
    		set $$$VARContratoParametrosEmailPrazoAlertaTerminoVigencia(objContratoParamEmail) = "75"
    	} else {
	    	set $$$VARContratoParametrosEmailPrazoAlertaTerminoVigencia(objContratoParamEmail) = "90"
    	}
    	set strStatus = $$Save^COMUtils("VARContratoParametrosEmail",YM,objContratoParamEmail,1)
    	if strStatus do ..SetParameter(..#PARAMPRAZOALERTACONTRATOS, 1) 
	}
	
	if (+..GetParameter(..#PARAMUNIDADEMEDIDADOSADOR) = 0) {
    	$$$VAR
    			
		set novaUnidade = "911"	
		set objUnidade 	= $get(^WWW101(0,"EINHEIT","PT",novaUnidade,1))
		
		if (objUnidade '= ""){
			do ..SetParameter(..#PARAMUNIDADEMEDIDADOSADOR, 1) 
		} else {
	
			set key = "EINHEIT"_$$$COMMA_"PT"_$$$COMMA_novaUnidade
			set $$$WWW101Text(objUnidade) = "DOS - DOSADOR"
	
			set strStatus = $$$Save("WWW101",key,objUnidade,1)
		
			w !!,"Nova unidade criada com sucesso!"
	
			if (($znspace = "HEVA") || ($znspace = "TREINA-HEVA") || ($znspace = "HEVA-PREV")){
				if ($$$ISOK(strStatus)){
					set keyAtivar = "WWW101"_$$$COMMA_"EINHEIT"_$$$COMMA_novaUnidade
					set objVARParametroAtivar = ""
					set $piece(objVARParametroAtivar,Y,1) = $$$YES
			
					set strStatus = $$$Save("VARParametroAtivar",keyAtivar,objVARParametroAtivar,1)	
			
					w:$$$ISOK(strStatus) !,"Nova unidade ativada com sucesso!"
				}
			}
	    	if strStatus do ..SetParameter(..#PARAMUNIDADEMEDIDADOSADOR, 1) 
		}
	}

	do ..IncBuild()
	
    quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateLicenseUserIdOfUsers">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	new keyUser, isDiscSuport, objUser, strStatus
	
	set keyUser 	 = ""
	set isDiscSuport = ""
	set objUser		 = ""
	set strStatus	 = $$$OK

	&sql( DECLARE usuarios CURSOR FOR
	SELECT UserName, isDiscSuport
	INTO :keyUser, :isDiscSuport  
	FROM (
		SELECT UserName,
		CASE
		WHEN UserName IN (
			SELECT UserName
			FROM SQLUser.WWW013 
			WHERE
				UserName NOT IN ("B.GUILHERMETTI","BRUNO.MARANO","CARLOS.DOMINGOS","EVANIA.SILVA","FELIPE.MORAES","GUILHERME.LIRA","LUCAS.BARBOSA","LUCAS.MORAES","MARCELO.SILVA","NATALIA.MARTINS","NATALIA.SILVA","RUBENS.SANTOS","THIAGO.CAMPOS","VANIA.ALVES","VANIA.MERCES","VITOR.TELINI","LAIS.RAYMUNDO","RODRIGO.BONCI","RODRIGO.LONGO","ADMINISTRADOR","FELIPESANTOS","CARLOSBORGES","RODRIGOGOUVEIA","RUBENSOLIVEIRA","JOSE.ESTEVES","CARLOS.AUGUSTO","CARLOSHENRIQUES","FELIPE SCHUBERT","USUARIO.TGV","TESTERAMOS","BRUNO.BARROS","BRUNO.EDUARDO","CARLOS.ANDRE","CARLOS.FILHO","CARLOS.URQUIZA","LAIS.HERCULANO","LAIS.SANTIAGO","DANILO.TESTE","ERIKSON.TESTE","ERIKSON.TESTE2","GERALDO.JORGE","MARCELO.MATOS","PABLO.CARRAZZONI","PABLO.TESTE","NOME.USUARIO","ROBERTO.TESTE","RODRIGO.LUCAS","THIAGO.BALTAZAR","THIAGO.BORBA","THIAGO.SOUZA","VLADYSON.TESTE","WALDECK.TESTE","VICTOR.BRUNO","JOAOTESTE","JESTEVES")
				AND (
					   UserName LIKE "%TULIO%" 
					OR UserName LIKE "%USUARIO%"
					OR UserName LIKE "%GUSTAVO%"
					OR UserName LIKE "%MARCELO%"
					OR UserName LIKE "%GUILHERME%"
					OR UserName LIKE "%PABLO%"
					OR UserName LIKE "%NATALIA%"
					OR UserName LIKE "%CAIO%"
					OR UserName LIKE "%SOSTHENES%"
					OR UserName LIKE "%THIAGO%"
					OR UserName LIKE "%LUCAS%"
					OR UserName LIKE "%VITOR%"
					OR UserName LIKE "%BRUNO%"
					OR UserName LIKE "%FELIPE%"
					OR UserName LIKE "%RUBENS%"
					OR UserName LIKE "%ADMIN%"
					OR UserName LIKE "%SHADOW%"
					OR UserName LIKE "%VANIA%"
					OR UserName LIKE "%CARLOS%"
					OR UserName LIKE "%LAIS%"
					OR UserName LIKE "%RODRIGO%"
					OR UserName LIKE "%KARINE%"
					OR UserName LIKE "%JORGE%"
					OR UserName LIKE "%CHO%"
					OR UserName LIKE "%JARDIM%"
					OR UserName LIKE "%STEVE%"
					OR UserName LIKE "%SHOBBY%"
					OR UserName LIKE "%TESTE%"
					OR UserName LIKE "%BERGFELD%"
					OR UserName LIKE "%GFIUZA%"
					OR UserName = "PATRICIA.BENITES"
					OR UserName = "CARLOS.COSTA"
					OR UserName = "PATRICIA"
					OR UserName = "KAKO"
					OR UserName = "MAGNO"
					OR UserName LIKE "%FRANK%"
					OR UserName LIKE "%SOEIRO%"
					OR UserName LIKE "%SOBREIRO%"
					)
			)
			THEN '1'
			ELSE '0'
			END AS isDiscSuport
			FROM SQLUser.WWW013
		)
	)
	
	&sql(OPEN usuarios)
	&sql(FETCH usuarios)

	while (SQLCODE = 0) {
		set objUser = $get(^WWW013(0,keyUser,1))

        if (isDiscSuport = 1){
	        set $$$WWW013LicenseUserId(objUser) = "DISCLINCSUPPORT"
        } else {
	        set $$$WWW013LicenseUserId(objUser) = keyUser
        }
    
		set strStatus = $$$Save("WWW013",keyUser,objUser,$$$YES)
		quit:$$$ISERR(strStatus)
	
		&sql(FETCH usuarios)
	}
	
	&sql(ClOSE usuarios)
	
	quit strStatus]]></Implementation>
</Method>

<Method name="Create">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrForm,pstrCode</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	set keyMeta = pstrForm_",11"
	set strStatus = $$Save^COMUtils("WWW120Hook",keyMeta,pstrCode,1)
	if $$$ISOK(strStatus) write !,keyMeta_" Updated."
	quit strStatus]]></Implementation>
</Method>

<Method name="HEVA1164B">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set strStatus=$$$OK
    if $$$ISOK(strStatus) if $data(^WWW120(0,"INMOVLine2")) set strStatus=..Create("INMOVLine2","OnBeforeFormat^INMOVLine2(YFIELDNAME,"""",YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"INMOVPallet")) set strStatus=..Create("INMOVPallet","OnBeforeFormat^INMOVPallet(YFIELDNAME,"""",YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"INReceiptLine")) set strStatus=..Create("INReceiptLine","OnBeforeFormat^INReceiptLine(YFIELDNAME,"""",YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"INRECTFRLine")) set strStatus=..Create("INRECTFRLine","OnBeforeFormat^INRECTFRLine(YFIELDNAME,"""",YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"INTFRReqLine")) set strStatus=..Create("INTFRReqLine","OnBeforeFormat^INTFRReqLine(YFIELDNAME,"""",YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"MEDDispenseLine")) set strStatus=..Create("MEDDispenseLine","OnBeforeFormat^MEDDispenseLine(YFIELDNAME,YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"MEDDispensePickLine")) set strStatus=..Create("MEDDispensePickLine","OnBeforeFormat^MEDDispensePickLine(YFIELDNAME,YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"MEDPrescriptionLine")) set strStatus=..Create("MEDPrescriptionLine","OnBeforeFormat^MEDPrescriptionLine(YFIELDNAME,"""",YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"MEDPresDispLine")) set strStatus=..Create("MEDPresDispLine","OnBeforeFormat^MEDPresDispLine(YFIELDNAME,"""",YFELD)")
    if $$$ISOK(strStatus) if $data(^WWW120(0,"WWW120DynTable")) set strStatus=..Create("WWW120DynTable","OnBeforeFormat^WWW120DynTable(YFIELDNAME,"""",YFELD)")
	quit strStatus]]></Implementation>
</Method>
</Class>
</Export>