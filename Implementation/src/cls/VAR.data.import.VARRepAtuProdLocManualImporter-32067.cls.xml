<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.VARRepAtuProdLocManualImporter">
<ClassType/>
<IncludeCode>VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

DASA-155 Carga de parâmetros da SAZONAL - Somente para parâmetros que já existem
Carrega para o mês atual o parâmetro da SAZONAL do mês corrente

Command: 
> do ##class(VAR.data.import.VARRepAtuProdLocManualImporter).importFile(arquivo)

Fields
		ItemNumber,FREE33,SearchName,CostumerTextorItemTextNo,ItemGroup,ItemType,UnitofMeasure,HoldReason,FREE7,FREE18
			,FREE2,FREE6,FREE17,FREE9,DangerousGoodsCategory,FREE10,FREE5,FREE11,FREE12,FREE15,MultidoseInjectable,FREE13,
			FREE25,FREE22,FREE14,FREE32,ItemPolicy,BaseUnit
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	if ($get(arquivo) = "") quit "Parãmetros obrigatórios (arquivo) não informados"
	
	quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_arquivo)
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0
	$$$VAR
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	set strStatus = $$$OK

	set $$$KEY1(key)	= ..getField(pstrLinha, 1) // Local
	set $$$KEY2(key)	= ..getField(pstrLinha, 2) // Produto
	
	// Registra erro caso o parâmetro não foi encontrado
	if ('$data(^VARReposicaoLocalProduto(YM,$$$KEY1(key),$$$KEY2(key)))) {
		set strStatus = "Parâmtro do Local " _ $$$KEY1(key) _ " para o produto " _ $$$KEY2(key) _ " não foi encontrado."
		quit strStatus
	}
	
	set idRepo = ""
	set strErro = ""
	for {
		set idRepo = $order(^VARReposicaoLocalProduto(YM,$$$KEY1(key),$$$KEY2(key),idRepo))
		quit:(idRepo = "")
		
		set $$$KEY3(key) = idRepo
		
		set objRepo = $get(^VARReposicaoLocalProduto(YM,$$$KEY1(key),$$$KEY2(key),$$$KEY3(key),1))
		
		if (objRepo = "") {
			set strErro = strErro _ "Parâmtro do Local " _ $$$KEY1(key) _ " para o produto " _ $$$KEY2(key) _ " não foi encontrado."
		}
		
		set paramMes = $piece($zdate(+$horolog,4),"/",2) + 9 ; Recupera o piece correto para o mês DMMI da sazonalidade
		
		set $piece(objRepo,"~",paramMes) = ..getField(pstrLinha, 3)
		
		set strStatus = $$$Save("VARReposicaoLocalProduto", key, objRepo, 1)
		
		if (strStatus = $$$OK) {
			; Utilizado para ser limpo o parâmetro posteriormente
			set ^VARRepLocalProdutoLimpaDMMI(+$horolog,$increment(^VARRepLocalProdutoLimpaDMMI)) = paramMes _"~"_ key
		}
	}
	
	if (strErro '= "") {
		set strStatus = strErro
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
]]></Implementation>
</Method>

<Method name="LimpaParamSazonal">
<ClassMethod>1</ClassMethod>
<FormalSpec>pData:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	; DASA-155	Limpa os parâmetros da sazonalidade definidos no dia anterior
	new (pData)
	$$$VAR
	set cont = ""
	
	if ($get(pData) '= "") {
		set paramData = +pData
	}
	else {
		set paramData = +$horolog-1
	}
	for {
		set cont = $order(^VARRepLocalProdutoLimpaDMMI(paramData,cont))
		quit:(cont = "")
		
		set key = $piece($get(^VARRepLocalProdutoLimpaDMMI(paramData,cont)),"~",2)
		
		set objRepo = $get(^VARReposicaoLocalProduto(YM,$$$KEY1(key),$$$KEY2(key),$$$KEY3(key),1))
		
		set paramMes = $piece($get(^VARRepLocalProdutoLimpaDMMI(paramData,cont)),"~",1) ; Recupera o piece correto para o mês DMMI da sazonalidade
		set $piece(objRepo,"~",paramMes) = ""
		set strStatus = $$$Save("VARReposicaoLocalProduto", key, objRepo, 1)
		if (strStatus = $$$OK) {
			kill ^VARRepLocalProdutoLimpaDMMI(paramData,cont)
		}
	}
]]></Implementation>
</Method>
</Class>
</Export>