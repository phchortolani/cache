<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.dcm.DcmRunner">
<ClassType/>
<IncludeCode>VARLog,VARService</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>VAR.infra.services.ServiceRunner</Super>

<Method name="Register">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit ..RegisterRunner($$$ServiceIdDCM, $$$ServiceFrequencyHourly, $$$ServicePriorityHighMedium, ..%ClassName(1), "DCM Service")]]></Implementation>
</Method>

<Method name="Unregister">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit ..UnregisterRunner($$$ServiceIdDCM, "DCM Service")]]></Implementation>
</Method>

<Method name="Execute">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	if (..IsIntegrationNamespace()) quit $$$OK

	set strStatus = $$$OK

	if ('##class(VAR.infra.shadow.ShadowRunner).IsFunctional()) {
		if (..IsRunning()) {
			do Stop^COMSchedule
			$$$VARLOGINFO("DCM Stopped on shadow computer")
		}	
	}
	else {
		if (..IsRunning()) quit strStatus

		$$$VARLOGWARNING("Starting DCM ...")
		do Start^COMSchedule

		if ('..IsRunning()) {
			$$$VARLOGERROR("Error while trying to start DCM")
			set strStatus = '$$$OK
		}
	}

	quit strStatus]]></Implementation>
</Method>

<Method name="Finalize">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	if (..IsIntegrationNamespace()) quit $$$OK

	if (..IsRunning()) {
		do Stop^COMSchedule
		$$$VARLOGINFO("DCM Stopped on shadow computer")
	}

	quit $$$OK]]></Implementation>
</Method>

<Method name="IsRunning">
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	#define EnumCOMSHEDULESTATUSRunning "1"

	quit ($$GetScheduleStatus^COMSchedule() = $$$EnumCOMSHEDULESTATUSRunning)]]></Implementation>
</Method>
</Class>
</Export>