<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.FATTributo">
<ClassType/>
<IncludeCode>VARConst,INConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	#dim %request as %CSP.Request
	#dim %response as %CSP.Response
	quit:$$$ISERR(..validaSessao(1)) %response
	set job = %session.SessionId
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getINPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave = $get(%request.Data("chave",1))
	set retorno = []
	set codigo=""
	for{
		set codigo 	= $order(^INPARA(0,chave,"PT",codigo)) quit:codigo=""
		set obj 	= $get(^INPARA(0,chave,"PT",codigo,1)) 
		set linha = {}
		set linha.codigo = codigo
		set linha.descricao = $$$INPARAText(obj)
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="pesquisaTributos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set contador = 0
	set select1 = "select CodigodoTributo,Nome,Descricao,Case when Ativo=1 then 'Ativo' else 'Inativo' end Ativo"
	set select1 = select1_" from  FATTributo"
	set select1 = select1_" where Company=0 "
	if codigo '= "" set select1 = select1_" and CodigodoTributo = '"_codigo_"' "
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set CodigodoTributo		= rs.%Get("CodigodoTributo")
		set Nome				= rs.%Get("Nome")
		set Descricao			= rs.%Get("Descricao")
		set Ativo				= rs.%Get("Ativo")
		set totalCount			= rs.%Get("totalCount")
		set linha = {}
		set linha.codigodotributo	= CodigodoTributo
		set linha.nome 				= Nome
		set linha.descricao			= Descricao
		set linha.ativo				= Ativo
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="recTributo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set formGeral = {}
	set formControle = {}
	set formGeral.situacao		= 1
	set formGeral.baseCalculo	= 100
	if codigo'=""{
		set objTributo = $get(^FATTributo(YM,codigo,1))
		set formGeral.nome			= $$$FATTributoNome(objTributo)
		set formGeral.descricao 	= $$$FATTributoDescricao(objTributo)
		set formGeral.situacao		= +$$$FATTributoAtivo(objTributo)
		set formGeral.aliquota		= $$$FATTributoAliquota(objTributo)			
		set formGeral.baseCalculo	= $$$FATTributoBasedeCalculo(objTributo)		
		set formGeral.retencao		= $$$FATTributoRetencaonaFonte(objTributo)
		set formGeral.arredondamento= $$$FATTributoTipodeArredondamento(objTributo)
		set formGeral.regime		= $$$FATTributoRegimedeTributacao(objTributo)
		set formGeral.vencimento	= $$$FATTributoVencimento(objTributo)
		set formGeral.tipo			= $$$FATTributoTipodeImposto(objTributo)
		
		;
		set formControle.criadoEm				= $$$FATTributoCriadoEm(objTributo)
		if formControle.criadoEm'="" set formControle.criadoEm = $zdatetime(formControle.criadoEm,4)
		set formControle.criadoPor				= $$$FATTributoCriadoPor(objTributo)
		set formControle.alteradoEm				= $$$FATTributoAlteradoEm(objTributo)
		if formControle.alteradoEm'="" set formControle.alteradoEm = $zdatetime(formControle.alteradoEm,4)
		set formControle.alteradoPor			= $$$FATTributoAlteradoPor(objTributo)
	}
	set retorno = {}
	set retorno.formGeral 		= formGeral
	set retorno.formControle 	= formControle
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getTributos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set select = "select Codigodotributo,Nome from  FATTributo where Company=0 "
	set retorno = []
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		set linha={}
		set linha.codigo = rs.%Get("Codigodotributo")
		set linha.descricao = "("_linha.codigo_") "_rs.%Get("Nome")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="salvar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tributo			= $get(%request.Data("tributo",1))
	set camposGeral		= $get(%request.Data("camposGeral",1))
	set strStatus = $$$OK
	tstart
	try{
		set camposGeral		= [].%FromJSON(camposGeral)
		;
		if '$data(^WWW128(0,"FATTributo")){
			set obj = "T000000000"
			set strStatus = $$$Save("WWW128","FATTributo",obj,$$$YES)
			quit:$$$ISERR(strStatus)
		}		
		if tributo="" Set tributo = $$GetNextNumber^COMUtils("FATTributo","")
		;
		set nome = $zconvert(camposGeral.nome,"U")
		set nome = $zstrip(nome,"<>w")
		set descricao = $zconvert(camposGeral.descricao,"U")
		set descricao = $zstrip(descricao,"<>w")
		;
		set objTributo = $get(^FATTributo(YM,tributo,1))
		set $$$FATTributoNome(objTributo)				= nome
		set $$$FATTributoDescricao(objTributo)			= descricao
		set $$$FATTributoAtivo(objTributo)				= camposGeral.situacao
		set $$$FATTributoAliquota(objTributo)			= camposGeral.aliquota
		set $$$FATTributoBasedeCalculo(objTributo)		= camposGeral.baseCalculo
		set $$$FATTributoRetencaonaFonte(objTributo)	= camposGeral.retencao
		set $$$FATTributoTipodeArredondamento(objTributo)	= camposGeral.arredondamento
		set $$$FATTributoRegimedeTributacao(objTributo)	= camposGeral.regime
		set $$$FATTributoVencimento(objTributo)			= camposGeral.vencimento
		set $$$FATTributoTipodeImposto(objTributo)		= camposGeral.tipo
		set strStatus = $$$Save("FATTributo",tributo,objTributo,$$$YES)
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set strStatus="Dados salvos com sucesso!"
		set retorno.status = 1
		do retorno.%Set("tributo",tributo,"String")
		set retorno.type = "success"
		set retorno.mensagem = strStatus
	}else{
		trollback
		set retorno.status = 0
		set retorno.type = "error"
		set retorno.mensagem = $$$Text(strStatus)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<FormalSpec>callMode=""</FormalSpec>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set %response.Status="401 Unauthorized"
		set resp={}
		set resp.status=0
		set resp.mensagem="Usuário não está logado ou a sessão expirou."
		write resp.%ToJSON()
	}elseif callMode=""{
		set resp={}
		set resp.status=1
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>
</Class>
</Export>