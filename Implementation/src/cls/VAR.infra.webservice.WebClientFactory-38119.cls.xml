<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.webservice.WebClientFactory">
<Description><![CDATA[This class controls which will be called ws-class client in accordance with
the environment in which it is running]]></Description>
<ClassType/>
<Import>VAR.common,VAR.infra.environment,VAR.infra.util</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="CreateClient">
<ClassMethod>1</ClassMethod>
<FormalSpec>company:%String,targetMachine:%String,targetNamespace:%String,className:%String,timeOut:%String</FormalSpec>
<ReturnType>WebClientAbstract</ReturnType>
<Implementation><![CDATA[	set classDefinition = ##class(%Dictionary.ClassDefinition).%OpenId(className)
	if ('$isObject(classDefinition)) {
		quit ##class(Errors).MakeErrorStatus("Classe não existe")
	}

	set classInstance = $zobjclassmethod(className, "%New")
	if ('$isObject(classInstance)) {
		quit ##class(Errors).MakeErrorStatus("Classe não tem método %New")
	}

	if (classInstance.%IsA("%SOAP.WebClient")) {   
		set location = ..GetLocation(company, targetMachine, targetNamespace, className)
		if ($length(location) > 0) set classInstance.Location = location
	}

	set classInstance.Timeout = timeOut

	quit classInstance]]></Implementation>
</Method>

<Method name="GetLocation">
<ClassMethod>1</ClassMethod>
<FormalSpec>company:%String,targetMachine:%String,targetNamespace:%String,className:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	#define VARParametrosWebClientLocation(%obj) $piece(%obj, "~", 1)
	#define VARParametrosWebClientServiceName(%obj) $piece(%obj, "~", 2)

	if ($length(targetMachine) = 0) {
		set targetMachine = ##class(Util).GetComputerName()
		set targetMachine = $piece(targetMachine, ".", 1)
	}
	if ($length(targetNamespace) = 0) {
		set targetNamespace = ##class(Util).GetNamespace()
	}

	set envIdSrc = ##class(Control).GetCurEnvId()
	set envIdReq = ##class(Control).GetEnvId(targetMachine, targetNamespace)

	&sql(SELECT EnvironmentIdFinal
	     INTO   :envIdFinal
	     FROM   WebServiceTargetTranslation
	     WHERE  EnvironmentIdSource = :envIdSrc
		 AND    EnvironmentIdRequired = :envIdReq)
	if (SQLCODE) set envIdFinal = 0

	set location = ""
	if ($data(^VARParametrosWebClient(company, envIdFinal, className, 1))) {
		set parametros = $get(^VARParametrosWebClient(company, envIdFinal, className, 1))
		set location = $$$VARParametrosWebClientLocation(parametros)
	}

	quit location]]></Implementation>
</Method>
</Class>
</Export>