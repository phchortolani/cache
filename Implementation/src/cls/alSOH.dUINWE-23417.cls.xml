<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.dUINWE">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>User.INWE</Super>

<Property name="Company">
<Type>%String</Type>
<Required>1</Required>

<Parameter name="MAXLEN" value="30"/>

<Parameter name="XMLPROJECTION" value="attribute"/>
</Property>


<Property name="GoodsReceipt">
<Description><![CDATA[
Goods Receipt]]></Description>
<Type>WWW.DiscDate</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="Goods Receipt"/>

<Parameter name="XMLPROJECTION" value="attribute"/>
</Property>


<Property name="Item">
<Description><![CDATA[
Item ]]></Description>
<Type>%String</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="Item "/>

<Parameter name="COLLATION" value="EXACT"/>

<Parameter name="MAXLEN" value="10"/>

<Parameter name="XMLPROJECTION" value="attribute"/>
</Property>


<Property name="Location">
<Description><![CDATA[
Location  ]]></Description>
<Type>%String</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="Location  "/>

<Parameter name="COLLATION" value="EXACT"/>

<Parameter name="MAXLEN" value="10"/>

<Parameter name="XMLPROJECTION" value="attribute"/>
</Property>


<Property name="StockLocation">
<Description><![CDATA[
Stock Location  ]]></Description>
<Type>%String</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="Stock Location  "/>

<Parameter name="COLLATION" value="EXACT"/>

<Parameter name="MAXLEN" value="10"/>

<Parameter name="XMLPROJECTION" value="attribute"/>
</Property>


<Property name="Movement">
<Type>alDRP.dMovement</Type>
<Calculated>1</Calculated>
</Property>


<Method name="GetBundle">
<ReturnType>alSOH.dBundle</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; OUT OF DATE?
	; 
	; 
	; History
	; 24-Apr-2008	Luke 	SR15688 removed the storages for the default bundle 
	; 22-Apr-2008	HQN		Created, copied logic from alSOH.iSOH::OnBuild()
	;-------------------------------------------------------------------------------
	set objBundle = ""
	; setup search hash
	set objItem     = ##class(alINV.iUINV).GetItem(%this.Item)
	set objLocation = ##class(alLOC.iULOC).GetLocation(%this.Location)
	set objStorage  = ##class(alLOC.iULOC).GetStorage(%this.Location, %this.StockLocation)
	
	set hashmap = ##class(%ArrayOfDataTypes).%New()
	
	if objItem.ItemPolicy.Description = "Default Policy" {
		set itemcost = %this.UnitPrice
		do hashmap.SetAt(itemcost,"Purchase Cost")
		
		//do hashmap.SetAt(%this.StockLocation,"Storage") //SR15688
		
		set tempDate = $piece(%this.GoodsReceipt,".",1)
		do hashmap.SetAt(tempDate,"ReceiveDate")
		
		set tempHashVal = $piece(%this.GoodsReceipt,".",2)
		if tempHashVal = "" set tempHashVal = 0
		do hashmap.SetAt(tempHashVal,"ReceiptNo")
	
	} elseif objItem.ItemPolicy.Description = "Lot Num Policy" {
		set itemcost = %this.UnitPrice
		//set itemcost = $$GetCostV2^INARTKOST(%this.Item)  //SR15676:
		do hashmap.SetAt(itemcost,"Purchase Cost")
		
		set tempHashVal = $piece(%this.GoodsReceipt,".",2)
		if tempHashVal = "" set tempHashVal = 0
		do hashmap.SetAt(tempHashVal,"Lot Number")
		
	} elseif objItem.ItemPolicy.Description = "Use By Date Policy" {
		set itemcost = %this.UnitPrice
		do hashmap.SetAt(itemcost,"Purchase Cost")		
		
		set tempHashVal = $piece(%this.GoodsReceipt,".",2)
		if tempHashVal = "" set tempHashVal = 0
		do hashmap.SetAt(tempHashVal,"Lot Number")
		
		set tempHashVal = %this.UseableUntilDate
		if tempHashVal = "" set tempHashVal = +$horolog
		do hashmap.SetAt(tempHashVal,"Use By Date")
		
	} elseif objItem.ItemPolicy.Description = "Blank Policy" {
		set itemcost = %this.UnitPrice
		do hashmap.SetAt(itemcost,"Purchase Cost")
		
	} else {
		set itemcost = %this.UnitPrice
		do hashmap.SetAt(itemcost,"Purchase Cost")
		
		do hashmap.SetAt(%this.StockLocation,"Storage")
		
		set tempDate = $piece(%this.GoodsReceipt,".",1)
		do hashmap.SetAt(tempDate,"ReceiveDate")
		
		set tempHashVal = $piece(%this.GoodsReceipt,".",2)
		if tempHashVal = "" set tempHashVal = 0
		do hashmap.SetAt(tempHashVal,"ReceiptNo")
	}
	
	set objBundle = ##class(alSOH.iSOH).GetBundle(objItem.%Id(),.hashmap)
	do hashmap.%Close()
					
	quit objBundle
]]></Implementation>
</Method>

<Method name="IsSynced">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	set:(%this.Movement = $$$NULLOREF) sc = $system.Status.Error(5001,"No Movement found")
	quit sc
]]></Implementation>
</Method>

<Method name="MovementGet">
<ReturnType>alDRP.dMovement</ReturnType>
<Implementation><![CDATA[	quit ##class(alSOH.iUSOH).GetMovementViaINWE(%this.Company,%this.Item,%this.Location,%this.StockLocation,%this.GoodsReceipt)
]]></Implementation>
</Method>
<Storage name="StorageAtNet">
<Type>%Library.CacheSQLStorage</Type>
</Storage>
</Class>
</Export>