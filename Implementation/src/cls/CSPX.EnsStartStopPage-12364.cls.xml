<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsStartStopPage">
<Description><![CDATA[
CSP Page for starting/stopping an Ensemble production.]]></Description>
<ClassType/>
<IncludeCode>Ensemble,EnsUI</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.AutoPage</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tProdName = $G(%request.Data("$ID1",1))
	Set tMode = $G(%request.Data("MODE",1),"start")
	// if URL is defined, go there
	Set tURL = $G(%request.Data("URL",1))
	Set StartStopTitle = $$$LocalizeText("Ensemble","StartStopTitle","Ensemble Start / Stop Page")
	&html<<html>
	<head>
	<title>#(StartStopTitle)#</title>
	<link rel="stylesheet" type="text/css" href="/csp/sys/csputils.css" title="Standard Style" >

	<script language="javascript">

	function gotoNextLocation()
	{
		self.document.location = '#(..Link(tURL))#';
		return true;
	}

  	// close button for end of popup
	function popupClose()
	{
		if (opener) {
			opener.autopagePopupWindow = null;
			opener.document.location.reload();
			window.close();
		}
		else {
			self.document.location = '#(..Link("UtilEnsHome.csp"))#';
		}
		return true;
	}
	</script>

	<style>

pre {
	border: 1px black solid;
	background: white;
	margin: 20px;
	padding: 4px;
	font-size: 12pt;
}	

div.buttons {
	margin-left: 20px;
	margin-top: 0px;
}

table.subtitle {
	margin-left: 20px;
	margin-top: 20px;
}

span.statusSpan {
	color: blue;
}

	</style>>

	&html<</head>
	<body onload="self.document.getElementById('theButton').focus();">>

	Set tTitle = $$$LocalizeText("Ensemble","Ensemble","Ensemble")  // should never happen
	Set tSubTitle = ""
	Set tStatusMsg = $$$LocalizeText("Ensemble","Status","Status")
	Set tRunningMsg = ""
	Set tFinishedMsg = $$$LocalizeText("Ensemble","Finished","Finished")

	If (tMode = "start") {
		Set tTitle = $$$LocalizeText("Ensemble","StartProduction","Ensemble Production Start")
		If (tProdName = "") {
			Set tMode = $$$LocalizeText("Ensemble","missing","missing")
			Set tSubTitle = $$$LocalizeText("Ensemble","NoProductionName","No production name specified.")
			Set tFinishedMsg = $$$LocalizeText("Ensemble","MissingProd","Missing Production")
		}
		Else {
			Set tSubTitle = $$$LocalizeText("Ensemble","StartingProduction","Starting production: ")_"&nbsp;<b>" _ tProdName _ "</b>"
			Set tRunningMsg = "<i>"_$$$LocalizeText("Ensemble","Starting","Starting...")_"</i>"
		}
	}
	ElseIf (tMode = "stop"){
		Set tTitle = $$$LocalizeText("Ensemble","StopProduction","Ensemble Production Stop")
		Set a = $G($$$EnsRuntime("Name"))
		Set tSubTitle = $$$LocalizeText("Ensemble","StoppingProduction","Stopping Production: ")
		Set tSubTitle = tSubTitle_" <b>" _ a _ "</b>"
		Set tRunningMsg = "<i>"_$$$LocalizeText("Ensemble","Stopping","Stopping...")_"</i>"
	}
	ElseIf (tMode = "update") {
		Set tTitle = $$$LocalizeText("Ensemble","ProductionUpdate","Ensemble Production Update")
		Set tSubTitle = $$$LocalizeText("Ensemble","UpdatingProduction","Updating production: ")_"&nbsp;<b>" _ $G($$$EnsRuntime("Name")) _ "</b>"
		Set tRunningMsg = "<i>"_$$$LocalizeText("Ensemble","Updating","Updating...")_"</i>"
	}
	ElseIf (tMode = "force") {
		Set tTitle = $$$LocalizeText("Ensemble","ForceStopProduction","Ensemble Production Force Stop")
		Set a = $G($$$EnsRuntime("Name"))
		Set tSubTitle = $$$LocalizeText("Ensemble","StoppingProduction","Stopping Production: ")
		Set tSubTitle = tSubTitle_" <b>" _ a _ "</b>"
		Set tRunningMsg = "<i>"_$$$LocalizeText("Ensemble","Stopping","Stopping...")_"</i>"
	}

	// title	
	&html<
	<table border="0" class="LayoutMain" width="100%" cellpadding="0" cellspacing="0">
	<TR><TD COLSPAN="2" CLASS="Title" WIDTH="100%">
	<DIV CLASS="TitleText">&nbsp;#(tTitle)#</DIV>
	</TD></TR>
	</table>
	<table class="subtitle" border="0" cellspacing="0" cellpadding="0">
	<tr><td>#(tSubTitle)#</td>
	<td width="10%">&nbsp;</td>
	<td>#(tStatusMsg)#:&nbsp<span class="statusSpan" id="status">#(tRunningMsg)#</span></td>
	</tr></table>
	</div><hr>
	>

	Do %response.Flush()
	Hang 0.1

	Set tSC = $$$OK
	If (tMode '= "missing") {
		&html<<pre>>
		If (tMode = "start") {
			Set tSC = ..StartProduction(tProdName)
		}
		ElseIf (tMode = "stop"){
			Set tSC = ..StopProduction($G($$$ConfigProdSetting("ShutdownTimeout"),120),0)
		}
		ElseIf  (tMode = "update") {
			Set tSC = ..UpdateProduction($G($$$ConfigProdSetting("UpdateTimeout"),10),0)
		}
		ElseIf  (tMode = "force") {
			Set tSC = ..StopProduction(10,1)
		}
		
		If ($$$ISERR(tSC)) {
			Set Err = $$$LocalizeText("Ensemble","Err","Error")
			Set tFinishedMsg = "<span style=""color:red;"">"_Err_"</span>"
		}
		&html<</pre>>
	}
	
	&html<<hr>
		<form>
		<div class="buttons">
	>
	
	If (tURL = "") {
		// popup mode
		&html<<input id="theButton" type="button" name="btnClose" value="Close" Domain="Ensemble" TextId="Close" onclick="popupClose();">>
	}
	Else {
		&html<<input id="theButton" type="button" name="btnOK" value=" OK " Domain="Ensemble" TextId="btnOK" onclick="gotoNextLocation();">>
	}

	&html<
		</div>
		</form>
		<script language="javascript">
		var stat = self.document.getElementById("status");
		if (stat) {
			stat.innerHTML = '#(tFinishedMsg)#';
		}
		</script>
	>
	
	&html<</body>
	</html>>
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="StartProduction">
<Description><![CDATA[
Start a production]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set $ZT = "Trap"
	Set tSC = $$$OK

	Do {	
		Set tSC = ##class(Ens.Director).StartProduction(pName)
		
		If ($$$ISERR(tSC)) {
			Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","Production","Production")_" "_pName_" "_$$FormatMessage^%occMessages(%response.Language,"Ensemble","notstarted","not started")_":","O","HTML"),!
			Write $ZCVT($system.Status.GetErrorText(tSC),"O","HTML"),!
			Quit
		}
		Else {
			Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","Production","Production")_" "_pName_" "_$$FormatMessage^%occMessages(%response.Language,"Ensemble","started","started")_".","O","HTML"),!
		}
	} While(0)

Done
	Write !
	Quit tSC
	
Trap
	Set $ZT=""
	Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","ErrorStartProduction","Error starting production")_".","O","HTML"),!
	Goto Done
]]></Implementation>
</Method>

<Method name="StopProduction">
<Description><![CDATA[
Stop a production]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pTimeout,pForce</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set $ZT = "Trap"
	Set tSC = $$$OK

	Do {
		Write $ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","StoppingProduction","Stopping Production")_"...","O","HTML"),!
		Do %response.Flush()
		Hang 0.1
		Set tSC = ##class(Ens.Director).StopProduction(pTimeout,pForce)
		If ($$$ISERR(tSC)) {
			Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","ProductionNotStopped","Production not stopped")_":","O","HTML"),!
			Write $ZCVT($system.Status.GetErrorText(tSC),"O","HTML"),!
			Set btnForce = $$$TextHTML("Yes - Force to Shut Down","Ensemble")
			&html<
				<form>
				<input type="hidden" name="MODE" id="MODE" value="force">
				<h2>#($$$TextHTML("Production could not stop, do you want to force a shut down?","Ensemble"))#</h2>
				<input type="submit" value="#(btnForce)#">
				</form>
			>
			Quit
		}
		Else {
			Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","ProductionStopped","Production stopped")_".","O","HTML"),!
		}
	} While (0)

Done
	Write !
	Quit tSC
	
Trap
	Set $ZT=""	
	Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","ErrorStopProduction","Error stopping production")_".","O","HTML"),!
	Goto Done
]]></Implementation>
</Method>

<Method name="UpdateProduction">
<Description><![CDATA[
Update a production]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pTimeout,pForce</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set $ZT = "Trap"
	Set tSC = $$$OK

	Do {	
		Set tSC = ##class(Ens.Director).UpdateProduction(pTimeout,pForce)
		If ($$$ISERR(tSC)) {
			Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","ProductionUpdateFail","Production update failed")_":","O","HTML"),!
			Write $ZCVT($system.Status.GetErrorText(tSC),"O","HTML"),!
			Quit
		}
		Else {
			//Write "Production updated.",!
		}
	} While (0)

Done
	Write !
	Quit tSC
	
Trap
	Set $ZT=""	
	Write !,$ZCVT($$FormatMessage^%occMessages(%response.Language,"Ensemble","ErrorUpdateProduction","Error updating production")_".","O","HTML"),!
	Goto Done
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Set tResult = ##super()
	
	If %response.Redirect = "" {
		// Set the timeout for 5 minutes for a start/stop
		Set %response.Timeout = 5*60
	}
	
	Quit tResult
]]></Implementation>
</Method>
</Class>
</Export>