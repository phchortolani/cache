<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.util.TimeUtil">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="dateTimeAtGMT">
<Description><![CDATA[

The method <METHOD>dateTimeAtGMT()</METHOD> returns the date and time at GMT 
(Greenwich Meridian Time) corresponding to the argument date and time.

To understand the differences between <VAR>$HOROLOG</VAR> and <VAR>$ZTIMESTAMP</VAR> refer 
to the following documents: 
<A HREF=http://platinum.intersystems.com/csp/docbook/DocBook.UI.Page.cls?KEY=RCOS_vztimestamp#RCOS_vztimestamp37>Doc 1</A>
<A HREF=http://platinum.intersystems.com/csp/docbook/DocBook.UI.Page.cls?KEY=RCOS_vztimestamp#RCOS_C33233>Doc 2</A>
]]></Description>
<Final>1</Final>
<ClassMethod>1</ClassMethod>
<FormalSpec>argDateTime:%TimeStamp</FormalSpec>
<ReturnType>%TimeStamp</ReturnType>
<Implementation><![CDATA[
	if ($get(argDateTime) = "") { quit "" }

	set days = $p(argDateTime,",",1)
	set seconds = $p(argDateTime,",",2)

	set secondsToGMT = $SYSTEM.SYS.TimeZone()*60
	set secondsPerDay = 24*60*60

	set secondsAtGMT = seconds + secondsToGMT

	if (secondsAtGMT >= secondsPerDay) {
		set dayOffset = secondsAtGMT\secondsPerDay
		set daysAtGMT = days + dayOffset
		set remainingSecondsAtGMT = secondsAtGMT#secondsPerDay
		set dateTimeAtGMT = daysAtGMT_","_remainingSecondsAtGMT
	}
	else {
		set dayOffset = secondsAtGMT\secondsPerDay-1
		set daysAtGMT = days + dayOffset
		set remainingSecondsAtGMT = secondsPerDay + secondsAtGMT#secondsPerDay
		set dateTimeAtGMT = daysAtGMT_","_remainingSecondsAtGMT
	}
	
	quit dateTimeAtGMT
]]></Implementation>
</Method>

<Method name="dateTimeAtDestination">
<Description><![CDATA[
The method <METHOD>dateTimeAtDestination()</METHOD> returns the date and time at another 
time zone corresponding to the argument date and time.
The time zone argument is the number of hours FROM GMT at destination. For instance, 
Brasilia, Brazil is -3 hours from GMT, Adelaide, Australia is +9.5 hours from GMT.

To understand the differences between <VAR>$HOROLOG</VAR> and <VAR>$ZTIMESTAMP</VAR> refer 
to the following documents: 
<A HREF=http://platinum.intersystems.com/csp/docbook/DocBook.UI.Page.cls?KEY=RCOS_vztimestamp#RCOS_vztimestamp37>Doc 1</A>
<A HREF=http://platinum.intersystems.com/csp/docbook/DocBook.UI.Page.cls?KEY=RCOS_vztimestamp#RCOS_C33233>Doc 2</A>
]]></Description>
<Final>1</Final>
<ClassMethod>1</ClassMethod>
<FormalSpec>argDateTime:%TimeStamp,argDestTimeZone:%Float</FormalSpec>
<ReturnType>%TimeStamp</ReturnType>
<Implementation><![CDATA[
	if ($get(argTimeStamp) = "") { quit "" }
	if ($get(argDestTimeZone) = "") { quit "" }
	
	set days = $p(argDateTime,",",1)
	set seconds = $p(argDateTime,",",2)

	set secondsFromLocalToGMT = $SYSTEM.SYS.TimeZone()*60 // for instance, in Brasilia, Brazil = +3
	set secondsFromDestinationToGMT = -argDestTimeZone*60*60 // for instance, in Adelaide, Australia = -9.5, or in New York = +4
	set secondsToDestination = secondsFromLocalToGMT - secondsFromDestinationToGMT // then Brasilia - Adelaide = 12.5 or Brasilia - New York = -1
	
	set secondsPerDay = 24*60*60

	set secondsAtDestination = seconds + secondsToDestination

	if (secondsAtDestination >= secondsPerDay) {
		set dayOffset = secondsAtDestination\secondsPerDay
		set daysAtDestination = days + dayOffset
		set remainingSecondsAtDest = secondsAtDestination#secondsPerDay
		set timeStampAtDest = daysAtDestination_","_remainingSecondsAtDest
	}
	else {
		set dayOffset = secondsAtDestination\secondsPerDay-1
		set daysAtDestination = days + dayOffset
		set remainingSecondsAtDest = secondsPerDay + secondsAtDestination#secondsPerDay
		set timeStampAtDest =daysAtDestination_","_remainingSecondsAtDest
	}
	quit timeStampAtDest
]]></Implementation>
</Method>
</Class>
</Export>