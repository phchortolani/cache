<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alREC.dReceiptLine.ReceivedState">
<ClassType>persistent</ClassType>
<IncludeCode>INConst,COMSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>alSYS.State.dState</Super>

<Property name="StateId">
<Type>alSYS.dt.dtInteger</Type>
<Final>1</Final>
<InitialExpression>"2&quot;</InitialExpression>
<Required>1</Required>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="IsValid">
<Description><![CDATA[
Must be overridden, returns whether the instance can be changed to this state
Do additional field validation on iStateMachine
]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	/*------------------------------------------------------------------------------
	; History: 
	; 01-Aug-2008	Luke	SR15814: Corrected sc formation and use of $$$Text
	; 02-May-2008	Luke	SR15699: Language codes for errors 
	; 29-Apr-2008 	Luke 	SR15700  Corrected Bundle Checking 
	; 24-Apr-2008 	Luke 	SR15689  added bundle null check and comprehensive 
	; 								 bundle check between Policy and created Bundle
	; 24-Apr-2008 	Luke 	SR15687  removed bundle null check
	; 18-Mar-2008	HQN		SR15640: Created
	;-----------------------------------------------------------------------------*/

	set sc = $$$OK
	
	set sc = %this.StateMachine.%ValidateObject()
	if $$$ISOK(sc) {
		if %this.StateMachine.QtyReceived = "" {
			set sc = $$Error^%apiOBJ(5659,"QtyReceived") ; Required Property
		}
		//TODO VVV Is this error correct in its formating. Differing from above <Luke>
		if %this.StateMachine.QtyReceived = 0 {
			set strMessage = $$$Text("alREC0005")      // SR15814:
			set sc =$$$ERROR($$$GeneralError,strMessage)
			//set sc= $$$MakeStatus("alREC0005") ;"Unable to receive zero quantities" //SR15699
		}
		///Bundle check  SR15689 
		if %this.StateMachine.Bundle = $$$NULLOREF {
			set sc = $$Error^%apiOBJ(5659,"Bundle") ; Required Property
		} else {
			set intBundleCount = %this.StateMachine.Bundle.Attributes.Count()  //SR15700
			set intPolicyCount = %this.StateMachine.Item.ItemPolicy.Attributes.Count()
			if intBundleCount '= intPolicyCount {
				set sc =$system.Status.AppendStatus(($$$ERROR($$$GeneralError,"Bundles are incorrectly formed")),sc)

			} else {
				for loopi = 1:1:%this.StateMachine.Item.ItemPolicy.Attributes.Count() {   //SR15700
					set tempAtt = %this.StateMachine.Item.ItemPolicy.Attributes.GetAt(loopi) 
					for loopj = 1:1:%this.StateMachine.Bundle.Attributes.Count() {
						set tempBunAtt = %this.StateMachine.Bundle.Attributes.GetAt(loopi)
						if tempAtt.Attribute.Name = tempBunAtt.AttributeName {
							set intPolicyCount = intPolicyCount - 1
							quit
						}
					}		
				}
				if intPolicyCount > 0 {
					set sc =$system.Status.AppendStatus(($$$ERROR($$$GeneralError,"Bundles are incorrectly formed"_intPolicyCount)),sc)
				}
			}
			
			
			
		}
	}
	quit sc
]]></Implementation>
</Method>

<Method name="OnStateChange">
<Description><![CDATA[
Must be overridden, returns whether the instance successfully changed to this state
]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	/*------------------------------------------------------------------------------
	; History: 
	; 30-Apr-2008 	Luke	SR15641: Corrected Bundle setting 
	; 28-Apr-2008 	Luke	SR15689: removed the bundle formation 
	; 24-Apr-2008 	Luke 	SR15687  move bundle creation here 
	; 18-Mar-2008	HQN		SR15640: Created
	;-----------------------------------------------------------------------------*/
	set sc = $$$OK

	set objMove   = ##class(alREC.dMovement).%New()

	// Covert to full V2 Objects via interfaces 
	set objMove.Item        = %this.StateMachine.Item
	set objMove.FromLocn    = "" //##class(alLOC.iLOC).GetLocation(%this.StateMachine.Receipt.Location)
	set objMove.ToLocn      = %this.StateMachine.Receipt.Location
	set objMove.FromStorage = "" //##class(alLOC.iLOC).GetStorage(%this.Issue.FromLocn.Location,%this.FromStorage.StockLocation)
	set objMove.ToStorage   = %this.StateMachine.Storage
	
 //	set objMove.DateTimeCreated = $horolog
    //set objMove.Status          = ##class(alSYS.Status.dUStatus).%OpenId("0||INMOV||2") //SR15626
 	set objMove.Bundle          = %this.StateMachine.Bundle  //SR15641
 	
 //	set objMove.DueDate         = %this.                      ; Not Implemented yet

	set objMove.Reference       = %this.StateMachine.Receipt.ReceiptNumber
	set objMove.LineNumber      = %this.StateMachine.%Id()
	set objMove.QtyPicked       = 0
	set objMove.QtyReceived     = %this.StateMachine.QtyReceived
	set objMove.QtyRequired     = 0
	set objMove.Supply          = ""
	set objMove.Demand          = ""
	set objMove.Completed       = $$$NO

	set sc = objMove.ChangeState(4)
	
	quit sc
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>
</Export>