<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alDRP.dPlannedMovement">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>alDRP.iMovement,alSYS.State.iStateMachine</Super>
<UDLText name="T">
<Content>
/*------------------------------------------------------------------------------
; History:
; 30-Aug-2012	SCR		SR18097: Exclude 0 Reservations in Queryies (CORE-138)
; 05-Nov-2011	shobby	SR17926: Added to indices to speed up webservice request times.(CORE-138)
; 09-Mar-2011	PPP		SR17681:Added CustomerAccount as %String
; 05-Nov-2009	GRF		SR16871: Add TransferDate
; 30-Apr-2009	PPP		Captions automatically added
; 29-Oct-2008	GRF		SR16070: Queries based on ListReservations^INDRPRUN4
;-----------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="Item">
<Type>alINV.dItem</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00164"/>
</Property>


<Property name="Bundle">
<Type>alSOH.dBundle</Type>

<Parameter name="CAPTION" value="AL00157"/>
</Property>


<Property name="DueDate">
<Type>%Date</Type>

<Parameter name="CAPTION" value="AL00161"/>
</Property>


<Property name="FromLocn">
<Type>alLOC.dLocation</Type>

<Parameter name="CAPTION" value="AL00162"/>
</Property>


<Property name="FromStorage">
<Type>alLOC.dStorage</Type>

<Parameter name="CAPTION" value="AL00163"/>
</Property>


<Property name="ToLocn">
<Type>alLOC.dLocation</Type>

<Parameter name="CAPTION" value="AL00172"/>
</Property>


<Property name="ToStorage">
<Type>alLOC.dStorage</Type>

<Parameter name="CAPTION" value="AL00173"/>
</Property>


<Property name="Reference">
<Type>%String</Type>

<Parameter name="CAPTION" value="AL00169"/>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Property name="LineNumber">
<Type>%String</Type>

<Parameter name="CAPTION" value="AL00165"/>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Property name="QtyRequired">
<Type>%Float</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00168"/>
</Property>


<Property name="QtyConfirmed">
<Type>%Float</Type>

<Parameter name="CAPTION" value="AL00167"/>
</Property>


<Property name="State">
<Description><![CDATA[
Corrected initial value to point at alDRP.dMovement.State]]></Description>
<Type>alSYS.State.dState</Type>
<InitialExpression>##class(alDRP.dMovement.State.Building).%New()</InitialExpression>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00170"/>
</Property>


<Property name="Supply">
<Type>alDRP.dUSupply</Type>

<Parameter name="CAPTION" value="AL00171"/>
</Property>


<Property name="Demand">
<Type>alDRP.dUDemand</Type>

<Parameter name="CAPTION" value="AL00160"/>
</Property>


<Property name="DateTimeCreated">
<Type>%TimeStamp</Type>
<InitialExpression>$zdt($horolog,3)</InitialExpression>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00159"/>
</Property>


<Property name="Completed">
<Type>%Boolean</Type>

<Parameter name="CAPTION" value="AL00158"/>
</Property>


<Property name="MovementType">
<Type>alDRP.dMovementType</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00166"/>

<Parameter name="CLASSNAME" value="1"/>
</Property>


<Property name="TransferDate">
<Type>%Date</Type>

<Parameter name="CAPTION" value="AL00569"/>
</Property>


<Property name="CustomerAccount">
<Type>%String</Type>

<Parameter name="CAPTION" value="AL00762"/>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<UDLText name="T">
<Content>
// ++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="AvailableQtyIDX">
<Properties>Bundle,FromStorage,Item</Properties>
</Index>

<Index name="ItemPMIDX">
<Properties>Item</Properties>
</Index>

<Index name="ItemFromLocnPMIDX">
<Properties>Item,FromLocn</Properties>
</Index>

<UDLText name="T">
<Content>
// ++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Query name="GetAllReserved">
<Type>%SQLQuery</Type>
<FormalSpec>pidItem:alINV.dItem</FormalSpec>
<SqlQuery>SELECT %ID, FromStorage-&gt;Code as Storage, QtyRequired, Reference, DateTimeCreated, DueDate, MovementType_MovementTypeId, Bundle, FromLocn
 FROM alDRP.dPlannedMovement
 WHERE (Item              = :pidItem) 	AND
       (State-&gt;StateId    = 3) 			AND
       (QtyRequired != 0)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<Query name="GetReservedForLocn">
<Type>%SQLQuery</Type>
<FormalSpec>pidItem:alINV.dItem,pidLocn:alLOC.dLocation</FormalSpec>
<SqlQuery>SELECT %ID, FromStorage-&gt;Code as Storage, QtyRequired, Reference, DateTimeCreated, DueDate, MovementType_MovementTypeId, Bundle, FromLocn
 FROM alDRP.dPlannedMovement
 WHERE (Item              = :pidItem)	AND
       (FromLocn          = :pidLocn)	AND
       (State-&gt;StateId    = 3) 			AND
       (QtyRequired != 0)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<Query name="GetReservedForBundle">
<Type>%SQLQuery</Type>
<FormalSpec>pidItem:alINV.dItem,pidLocn:alLOC.dLocation,pidBundle:alSOH.dBundle</FormalSpec>
<SqlQuery>SELECT %ID, FromStorage-&gt;Code as Storage, QtyRequired, Reference, DateTimeCreated, DueDate, MovementType_MovementTypeId
 FROM alDRP.dPlannedMovement
 WHERE (Item              = :pidItem)	AND
       (FromLocn          = :pidLocn)	AND
       (State-&gt;StateId    = 3)			AND
       (Bundle            = :pidBundle)	AND
       (QtyRequired != 0)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<Query name="GetReservedForBundleStore">
<Type>%SQLQuery</Type>
<FormalSpec>pidItem:alINV.dItem,pidLocn:alLOC.dLocation,pidStore:alSYS.dt.dtString,pidBundle:alSOH.dBundle</FormalSpec>
<SqlQuery>SELECT %ID, FromStorage-&gt;Code as Storage, QtyRequired, Reference, DateTimeCreated, DueDate, MovementType_MovementTypeId
 FROM alDRP.dPlannedMovement
 WHERE (Item              = :pidItem)	AND
       (FromLocn          = :pidLocn)	AND
       (State-&gt;StateId    = 3)			AND
       (FromStorage-&gt;Code = :pidStore)	AND
       (Bundle            = :pidBundle)	AND
       (QtyRequired != 0)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<Query name="GetReservedForStore">
<Type>%SQLQuery</Type>
<FormalSpec>pidItem:alINV.dItem,pidLocn:alLOC.dLocation,pidStore:alSYS.dt.dtString</FormalSpec>
<SqlQuery>SELECT %ID, FromStorage-&gt;Code as Storage, QtyRequired, Reference, DateTimeCreated, DueDate, MovementType_MovementTypeId
 FROM alDRP.dPlannedMovement
 WHERE (Item              = :pidItem)	AND
       (FromLocn          = :pidLocn)	AND
       (State-&gt;StateId    = 3)			AND
       (FromStorage-&gt;Code = :pidStore)	AND
       (QtyRequired != 0)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<UDLText name="T">
<Content>
// ++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="StatesGet">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History
	; 18-Sep-2008	HQN		SR15808: Created
	;-------------------------------------------------------------------------------
	set objStates = ##class(%Library.ArrayOfObjects).%New()
	set objState(0) = ##class(alSYS.State.dState).%OpenId(%this.%ClassName(1)_"||1",0,.sc)
	if objState(0) = $$$NULLOREF {
		set objState(0) = ##class(alDRP.dMovement.State.Building).%New()
		set objState(0).SMClassName = %this.%ClassName(1)
		do objState(0).%Save()
		do objState(0).SetNext(objState(0))
		do objState(0).%Save()
	}
	
	set:%this.State=$$$NULLOREF %this.State = objState(0)
	
	set objState(1) = ##class(alSYS.State.dState).%OpenId(%this.%ClassName(1)_"||3",0,.sc)
	if objState(1) = $$$NULLOREF {
		set objState(1) = ##class(alDRP.dPlannedMovement.State.InProgress).%New()
		set objState(1).SMClassName = %this.%ClassName(1)
		do objState(1).SetPrev(objState(0))
		do objState(1).%Save()
	}
	
	set objState(2) = ##class(alSYS.State.dState).%OpenId(%this.%ClassName(1)_"||4",0,.sc)
	if objState(2) = $$$NULLOREF {
		set objState(2) = ##class(alDRP.dPlannedMovement.State.Completed).%New()
		set objState(2).SMClassName = %this.%ClassName(1)
		do objState(2).SetPrev(objState(0))
		do objState(2).SetPrev(objState(1))
		do objState(2).%Save()
	}
	
	do objStates.SetAt(objState(0),objState(0).StateId)
	do objStates.SetAt(objState(1),objState(1).StateId)
	do objStates.SetAt(objState(2),objState(2).StateId)
	
	set objState(0).StateMachine = %this
	set objState(1).StateMachine = %this
	set objState(2).StateMachine = %this
	quit objStates
]]></Implementation>
</Method>

<Method name="%OnNew">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%New</METHOD> method to 
provide notification that a new instance of an object is being created.

<P>If this method returns an error then the object will not be created.]]></Description>
<FormalSpec>initvalue:%CacheString</FormalSpec>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-----------------------------------------------
	; History
	; 24-Jul-2009 PPP	SR16796 : Do not pass the sc back as an error
	;-----------------------------------------------
	
	//set %this.State = ##class(alSYS.State.dState).%OpenId(%this.%ClassName(1)_"||1",0,.sc)
	//quit sc
	
	set %this.State = ##class(alSYS.State.dState).%OpenId(%this.%ClassName(1)_"||1",0)	//SR16796
	quit 1
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>dPlannedMovementDefaultData</DefaultData>
<Data name="dPlannedMovementDefaultData">
<Subscript>"dPlannedMovement"</Subscript>
<Value name="1">
<Value>DueDate</Value>
</Value>
<Value name="2">
<Value>MovementType</Value>
</Value>
<Value name="3">
<Value>QtyRequired</Value>
</Value>
<Value name="4">
<Value>TransferDate</Value>
</Value>
<Value name="5">
<Value>CustomerAccount</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>