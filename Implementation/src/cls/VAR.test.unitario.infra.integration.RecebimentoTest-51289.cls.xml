<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.test.unitario.infra.integration.RecebimentoTest">
<ClassType/>
<Import>%UnitTest,VAR.test.infra.unittest,VAR.integration</Import>
<IncludeCode>COMSYS,WWWConst,INConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>TestCase</Super>

<Parameter name="RecebimentoTEMPORARYID">
<Type>%String</Type>
<Default>99/000001</Default>
</Parameter>

<Parameter name="RecebimentoLinhaTEMPORARYID">
<Type>%String</Type>
<Default>1</Default>
</Parameter>

<Parameter name="EntidadeAIntegrar">
<Type>%String</Type>
<Default>RECEBIMENTO</Default>
</Parameter>

<Parameter name="TimerIntegracao">
<Type>%Integer</Type>
<Default>180</Default>
</Parameter>

<Method name="Run">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	do ##class(SuiteManager).RunTestCase(..%ClassName(1))]]></Implementation>
</Method>

<Method name="Test1Insert">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, idINRECSummary, idINRECSummaryLinha, objINREC, objINRECSummary, strStatus
	do ^WWWVAR

	do $$$AssertNotTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))

	kill ^INREC(0, ..#RecebimentoTEMPORARYID, 1)
	kill ^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)

	set idINREC  = ..#RecebimentoTEMPORARYID
	set objINREC = $get(^INREC(0, ..#RecebimentoTEMPORARYID, 1))
	
	set strStatus = $$$Save("INREC", idINREC, objINREC, 1)
	
	set idINRECSummary  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECSummary = $get(^INRECSummary(0, ..#RecebimentoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	
	set strStatus = $$$Save("INRECSummary", idINRECSummary, objINRECSummary, 1)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))]]></Implementation>
</Method>

<Method name="Test2UpdateToConfirm">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, idINRECSummary, idINRECSummaryLinha, objINREC, objINRECSummary, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))

	set idINREC  = ..#RecebimentoTEMPORARYID
	set objINREC = $get(^INREC(0, ..#RecebimentoTEMPORARYID, 1))
	set $$$INRECType(objINREC) 			= 2
	set $$$INRECLocation(objINREC) 		= 1.3
	set $$$INRECStatus(objINREC) 		= 0
	set $$$INRECSupplier(objINREC) 		= 3
	set $$$INRECInvoiceNumber(objINREC) = 1999999
	set $$$INRECInvoiceDate(objINREC) 	= 62630
	set $$$INRECInvoiceTotal(objINREC) 	= 1
	set $$$INRECFREE3(objINREC) 		= 1
	set $$$INRECSummaryTotal(objINREC) 	= 1
	
	set strStatus = $$$Save("INREC", idINREC, objINREC, 1)
	
	set idINRECSummary  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECSummary = $get(^INRECSummary(0, ..#RecebimentoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	set $$$INRECSummaryStatus(objINRECSummary) 			 = 0
	set $$$INRECSummaryFlag(objINRECSummary) 			 = 1
	set $$$INRECSummaryItem(objINRECSummary) 			 = 700
	set $$$INRECSummaryQuantityOrdered(objINRECSummary)  = 2
	set $$$INRECSummaryQuantityReceived(objINRECSummary) = 2
	set $$$INRECSummaryUnitQtyReceived(objINRECSummary)  = 2
	set $$$INRECSummaryLineType(objINRECSummary) 		 = 0
	set $$$INRECSummaryInventoryUnit(objINRECSummary) 	 = 290
	set $$$INRECSummaryOrderedUnit(objINRECSummary) 	 = 290
	set $$$INRECSummaryReceivedUnit(objINRECSummary) 	 = 290
	set $$$INRECSummaryUnitCost(objINRECSummary) 	 	 = 1
	
	set strStatus = $$$Save("INRECSummary", idINRECSummary, objINRECSummary, 1)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))]]></Implementation>
</Method>

<Method name="Test3Confirm">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	
	set idINREC  = ..#RecebimentoTEMPORARYID
	
	set strStatus = $$FirmReceipt^INReceipt(idINREC)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertEquals(strStatus,1) // Verifica a transação de confirmação]]></Implementation>
</Method>

<Method name="Test4UpdateToProcess">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, idINRECLine, objINREC, objINRECLine, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	
	set idINRECLine  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECLine = $get(^INRECLine(0, ..#RecebimentoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	set $$$INRECLineLotNumber(objINRECLine) 	 = 1
	set $$$INRECLineSupplier(objINRECLine) 	 	 = 1
	set $$$INRECLineExpirationDate(objINRECLine) = 62842
	set $$$INRECLineBrand(objINRECLine) 		 = 1
	
	set strStatus = $$$Save("INRECLine", idINRECLine, objINRECLine, 1)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))]]></Implementation>
</Method>

<Method name="Test5Process">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	
	set idINREC  = ..#RecebimentoTEMPORARYID
	set objINREC = $get(^INREC(0, ..#RecebimentoTEMPORARYID, 1))
	
	set strStatus = $$PostTxn^INReceiptButtonP(idINREC,objINREC)
	
	if $$$ISOK(strStatus){
		do ##class(VAR.infra.integracao.GerenciaFilaPendencias).RegistraEvento(
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("ENTIDADERECEBIMENTO"),
					idINREC,
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("ACAOPROCESSAR")
	    		   )
	}
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertEquals(strStatus,1) // Verifica a transação de processamento]]></Implementation>
</Method>

<Method name="Test6DadoAIntegrar">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idVARDadoAIntegrar
	do ^WWWVAR
	
	set stIntegrado    = ""
	set recebimento    = ""
	set entidade       = ..#EntidadeAIntegrar
	set idRecebimento  = ..#RecebimentoTEMPORARYID
	
	&sql(
		select Chave1Entidade
		into :recebimentoo
		from SQLUser.VARDadoAIntegrar
		where Entidade = :entidade and Chave1Entidade = :idRecebimento
	)
	
	if 'SQLCODE {
		set recebimento = recebimentoo
	}
	
	do $$$AssertEquals(recebimento,idRecebimento) // Verifica se está na lista de dados a integrar
	
	if (recebimento = idRecebimento){
		hang ..#TimerIntegracao // Espera o tempo necessário para o WebService fazer a integração e alterar o status
	}
	
	&sql(
		select Integrado
		into :integrado
		from SQLUser.VARDadoAIntegrar
		where Entidade = :entidade and Chave1Entidade = :idRecebimento
	)
	
	if 'SQLCODE {
		set stIntegrado = integrado
	}

	do $$$AssertEquals(stIntegrado,"S") // Verifica a integração realizada]]></Implementation>
</Method>

<Method name="Test7Delete">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	;/*
	new idINREC, idINRECLine, idINRECSummary, idINRECSummaryLinha, objINREC, objINRECLine, objINRECSummary, strStatus
	do ^WWWVAR
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))

	set paramDelete  = ""
	set idINREC 	 = ..#RecebimentoTEMPORARYID
	set idLine 		 = ..#RecebimentoLinhaTEMPORARYID
	set idINRECLine  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set entidade 	 = ..#EntidadeAIntegrar
	
	set strStatus = $$$Kill("INRECLine", idINRECLine)
	
	&sql(
		delete
		from SQLUser.INRECSummary
		where ReceiptNumber = :idINREC and LineNumber = :idLine
	)
	
	&sql(
		delete
		from SQLUser.INREC
		where ReceiptNumber = :idINREC
	)
	
	&sql(
		delete
		from SQLUser.VARDadoAIntegrar
		where Entidade = :entidade and Chave1Entidade = :idINREC
	)
	
	if 'SQLCODE {
		set paramDelete = 1
	}
	
	// Verifica exclusões
	do $$$AssertNotTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertEquals(paramDelete,1)
	;*/]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^VAR.test.un32F.Recebimento59DBD</DataLocation>
<DefaultData>RecebimentoTestDefaultData</DefaultData>
<IdLocation>^VAR.test.un32F.Recebimento59DBD</IdLocation>
<IndexLocation>^VAR.test.un32F.Recebimento59DBI</IndexLocation>
<StreamLocation>^VAR.test.un32F.Recebimento59DBS</StreamLocation>
<Data name="RecebimentoTestDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>