<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsBPLPane">
<Description><![CDATA[
An AutoPage pane that displays an SVG BPL Diagram.]]></Description>
<ClassType/>
<IncludeCode>EnsUI</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.Pane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Method name="DrawHEAD">
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// override table style
	&html<
<style>
TABLE.LayoutMain TD.LayoutContentCol {
	background: #EEFFFF;
	padding-left: 0px;
	vertical-align: top;
}
</style>>

	&html<
	
<!-- detect svg -->
<script language="JavaScript" src="svgcheck.js"></script>
<script language="VBScript" src="svgcheck.vbs"></script>
	
<script language="javascript">

// external API

// save contents of this document
// place answer in "results" element
function document_save()
{
	self.getCanvas().invokeOperation("saveDiagram",null);
}

// open a new document using the data in *state*
function document_open(state)
{
	self.getCanvas().invokeOperation("openDiagram",state);
}

// delete current item in the editor
function document_delete()
{
	self.getCanvas().invokeOperation("deleteItem",null);
}

// arrange shapes in the editor
function document_arrange()
{
	self.getCanvas().invokeOperation("arrangeShapes",null);
}

// set the value of the given property for the current selected shape
function document_setProperty(prop, val)
{
	self.getCanvas().invokeOperation("setProperty",prop,val);
}

function document_listItems(val)
{
	self.getCanvas().invokeOperation("listItems",val);
}

// -------------------------------------------------------------------
// internal functions

// get the SVG canvas element
function getCanvas()
{
	return self.document.getElementById("SVGEmbed").getSVGDocument().getElementById("canvas");
}

// notification that something has happened in the editor
function raiseEvent(type)
{
	var results = self.document.getElementById("results");
	var text = results.innerHTML;

	// make sure encoding uses UTF8
	text = cspEncodeUTF8(text);
	
	self.top.Info.document.location = '#(##class(%CSP.Page).Link("UtilEnsBPDefinition.csp?$FRAME=Info"))#' + '&$ID1=' + text;
}

</script>
	>
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawBODY">
<Description><![CDATA[
Draw the BODY of the detail pane]]></Description>
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If (%request.UserAgent '[ "MSIE") {
		Write "<div style=""padding-left:20px;"">",$$$TextHTML("At this time, this page is only visible with Internet Explorer."),"</div>"
		Quit $$$OK
	}

	// get page ID values
	Merge tID = pInstance.IDValues
	Set bpcls = $G(tID(1))
	
	&html<	
		<!-- detect svg (IE) -->
		<script language="JavaScript">
if (navigator && navigator.userAgent && (navigator.userAgent.indexOf('MSIE')!=-1)) {
	checkAndGetSVGViewer();
}
		</script>
	>

	If (bpcls '= "") {
		// try to open the given BPL diagram
		// and place its data into a hidden div...
		&html<<!--#(bpcls)#-->>

		// create a diagram object
		Set tSC = ##class(Ens.BPL.UI.Diagram).Open(bpcls,.tDiagram)
		If ($$$ISOK(tSC) && $IsObject(tDiagram)) {
			
			// set last mod time from class
			Set tDiagram.LastModified = $ZDT(##class(%Dictionary.ClassDefinition).%OpenId(bpcls).TimeChanged,3)
	
			// now serialize and display
			Set stream = ##class(%GlobalCharacterStream).%New()
			Do tDiagram.Serialize(stream)
		
			// load the serialized data into the viewer
			&html<<xml id="initialState">>
			Do stream.OutputToDevice()
			&html<</xml>>
		}
		Else {
			Set msg = $$$LocalizeText("Ensemble","NoBPL","There is no BPL diagram available for class")
			
			&html<&nbsp;#(msg)#: #(bpcls)#>
			Quit $$$OK
		}
	}

	// set to read-only mode
	&html<<xml id="results" style="display:none;">readonly</xml>>

	// loading message
	&html<<div id='loading' style='background: white; color: blue; font-size: 14pt; font-family: courier new' Domain="%Ensemble" TextId="GenBPL">Generating BPL Diagram...</div>>

	//&html<<embed id="SVGEmbed" name="SVGEmbed" type="image/svg-xml" src="ensbplcanvas.svg" height="2000" width="2000">>
	&html<<embed id="SVGEmbed" name="SVGEmbed" type="image/svg+xml" src="#(##class(%CSP.Page).Link("CSPX.EnsBPLSVG.cls"))#" height="2000" width="2000">>

	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>