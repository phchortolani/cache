<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alADJ.dUAdjustment">
<ClassType>persistent</ClassType>
<CompileAfter>alADJ.dUAdjustmentLine</CompileAfter>
<ProcedureBlock>1</ProcedureBlock>
<Super>User.INADJ</Super>
<UDLText name="T">
<Content>/* SR15660 */
</Content>
</UDLText>


<Property name="AdjLines">
<Description><![CDATA[
Pseudo relation to Implement better object relations under a @nM enviroment<br>
The Transient swizzled Pseudo object property to represent AdjustmentLines, the 
relationship between Adjustment and AdjustmentLine (head and lines)  ]]></Description>
<Type>alADJ.dUAdjustmentLine</Type>
<Collection>list</Collection>
<Transient>1</Transient>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Query name="GetAdjLines">
<Description><![CDATA[
Bundle
Pseudo relation. <br>
This is an over-ride of the getter to create the relationship between the Header 
and its lines <p>
This query is automatically called when you call the <code>AdjustmentLines</code> 
 Params:<br>
 
 Returns: <br>
 	<class>%ListOfObjects</class>
Use in the Pseudo relation between the Adjustment header and its lines. <br>
It is run when the property AdjLines is called.]]></Description>
<Type>%SQLQuery</Type>
<FormalSpec>pidAdjustment:%String</FormalSpec>
<SqlQuery>	SELECT %ID,StockAdjustmentNumber FROM alADJ.dUAdjustmentLine WHERE (StockAdjustmentNumber = :pidAdjustment)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>


<Method name="%OnOpen">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Open</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being opened.

<P>If this method returns an error then the object will not be opened.]]></Description>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	set objResultSet = ##class(%Library.ResultSet).%New("alADJ.dUAdjustment:GetAdjLines") ; 03-Nov-2008
	set sc = objResultSet.Execute(%this.StockAdjustmentNumber)
	if $$$ISOK(sc) {
		while objResultSet.Next(.sc) {
			do %this.AdjLines.InsertObjectId(objResultSet.Data("ID"))
		}
	}
	quit sc
]]></Implementation>
</Method>
<Storage name="StorageAtNet">
<Type>%Library.CacheSQLStorage</Type>
</Storage>
</Class>
</Export>