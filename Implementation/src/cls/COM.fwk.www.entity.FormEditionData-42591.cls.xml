<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.www.entity.FormEditionData">
<Description><![CDATA[

Represents the User.WWWDATEN.cls and contains
queries used for the entity.

<p>

This class stores data edited in the form, but that
has not been saved yet. This is a functionality of
net manager, so the user can change between tabs
without loosing edition data.

<p>

The primary key is defined: the company, the date of 
the edition, the session id that the user was logged, the 
form name and the data type stored (D for data fields, P for 
primary key and M for manual (not class automatic) form fields. 

<p>

The data field is defined according to the form in edition.
The data field is exactly like the data field of the class
of the form. So, the number of data fields varies with the
form being edited.

<p>

So, as this global has no predetermined number of fields, 
there's no way to model a class to map it. That's 
the problem. 

<p>

There's a field called "Datarecord" that, according to its
name, should contain all the data fields, but it maps only
to the first data field.

<p>

Because of that, the method DatarecordGet() was reimplemented to
return all the global record, in the global format, so the record
can be passed to net manager and be saved in the real class used
by the form.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>User.WWWDATEN,COM.fwk.entity.Persistent</Super>

<Parameter name="EXTENTSIZE">
<Default>161</Default>
</Parameter>


<Method name="findLastDataBySessionAndForm">
<Description><![CDATA[

Loads a FormEditionData based on the sessionId of the user logged
and the form name.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>sessionId:%String,formName:%String</FormalSpec>
<ReturnType>COM.fwk.www.entity.FormEditionData</ReturnType>
<Implementation><![CDATA[
	
	set company = ..getSession().getCurrentCompanyCode()

	set rs = ..prepareQuery(" select Id from SQLUser.WWWDATEN "
	                      _ " where DataType = ?              "
	                      _ "   and Company = ?               "
	                      _ "   and Form = ?                  "
	                      _ "   and User1 = ?                 "
	                      _ " order by Date1 desc             ")
	     
	// the D stands for data fields
	do rs.Execute("D", company, formName, sessionId)

	set last = ""
	if (rs.Next()) {
		set last = ..%OpenId(rs.GetData(1))
	}
	
	do ..closeQuery(rs)

	if $isObject(last)
	{
		quit last
	}
	else
	{
		quit $$$NULLOREF
	}
]]></Implementation>
</Method>

<Method name="listTodaysDataFieldsByFormAndPK">
<Description><![CDATA[

For a specific form and a form primary key,
finds all editions being made over this form
for the current day. 

<p>

Returns a list of FormDataFields.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>formName:%String,pk:%String</FormalSpec>
<ReturnType>COM.fwk.www.entity.FormEditionData</ReturnType>
<Implementation><![CDATA[
	
	quit ..listEntities(
			" select fields.Id "
 		  _ " from WWWDATEN pks, WWWDATEN fields "
 		  _ " where pks.Company = 0 "
 		  _ "   and pks.DataType = ? "
 		  _ "   and pks.Date1 = ? "
 		  _ "   and pks.Form = ? "
 		  _ "   and pks.DataRecord = ? "
 		  _ "   and fields.Company = pks.Company "
 		  _ "   and fields.DataType = ? "
 		  _ "   and fields.Date1 = pks.Date1 "
 		  _ "   and fields.Form = pks.Form  "
 		  _ "   and fields.User1 = pks.User1 ",
 		  "P", +$horolog, formName, pk, "D")
]]></Implementation>
</Method>

<Method name="loadEditionData">
<Description><![CDATA[

Returns all the data record of the form being edited. 
Read the class documentation to a complete explanation 
of why it is returning a global format.

<p>

This method should not be called after setting a value
to the data record, because it will restore the original
value from the database. Always after setting the record
data, save it.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<Implementation><![CDATA[	set ..DataRecord =  ^WWWDATEN(..CompanyGet(), ..Date1Get(), ..User1Get(), ..FormGet(), ..DataTypeGet(), 1)
]]></Implementation>
</Method>

<Method name="setData">
<Description><![CDATA[

Sets a field value in the edition data record.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>pieceNumber:%Integer,newValue:%String</FormalSpec>
<Implementation><![CDATA[	set $piece(i%DataRecord, "~", pieceNumber) = newValue
]]></Implementation>
</Method>
<Storage name="StorageAtNet">
<Type>%Library.CacheSQLStorage</Type>

<Property name="Company"/>

<Property name="DataRecord"/>

<Property name="DataType"/>

<Property name="Date1"/>

<Property name="Form"/>

<Property name="User1"/>
</Storage>
</Class>
</Export>