<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARManual">
<ClassType/>
<IncludeCode>COMSYS,COMConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	#Dim %request As %CSP.Request
	#Dim %response As %CSP.Response
	Set Method 	= $Get(%request.Data("method",1))
	Xecute "do .."_Method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="renderIntro">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set currentRow = ""
    set obj = {}
    set htmlArray = []
    
    for{
	    set currentRow = $order(^introGlobal(currentRow))
	    quit:(currentRow="")
	    set element = ^introGlobal(currentRow)
		d htmlArray.%Push(element)
	}
	
 	set obj.intro = htmlArray
 	w obj.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="saveIntro">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set obj = {}
	Do ^WWWVAR
	set Y = "~"
	set html	=  $Get(%request.Data("html",1))
	set kglobal =  $Get(%request.Data("kglobal",1))
	set objFilter = [].%FromJSON(html)
	set YBED =   $Get(%request.Data("YBED",1))
	set session =  $Get(%request.Data("YUSER",1))
	quit:+$$^WWWBEDBER($piece($get(^WWWUSER(0,session,1)),"~" ,2))=0 // se não for administrador não edita
	
	if (kglobal = 1){
		k ^introGlobal
		set status = 1
	} else{
		
	k ^introGlobal
	set status = 0
	set counter = 1
	for {
		set campo = objFilter.%Pop()
		quit:campo=""
		set ^introGlobal(counter) = campo
		set counter = (counter + 1)
	}

	set status = 1
		
 
	}
	
	set obj.status = status
 	w obj.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="editField">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Do ^WWWVAR
	Set Y 			= "~"
	
	set id	=  $Get(%request.Data("id",1))
	set global	=  $Get(%request.Data("global",1))
	set form	=  $Get(%request.Data("YFORM",1))
	set title	=  $Get(%request.Data("title",1))
	set html	=  $Get(%request.Data("html",1))
	set YBED =   $Get(%request.Data("YBED",1))
	set LANGUAGE = "PT"
	
	quit:+$$^WWWBEDBER(YBED)=0 // se não for administrador não edita
	set status = $$$OK
	
	if ((global '= "") && (html '= "")){
		
 //edita campos	
		try{
				
			if (global = "WWW120"){	//edita a descrição principal
				set objWWW120 = $Get(^WWW120(0,form,1))
				set $$$WWW120HelpManual(objWWW120) = html	
				set status = $$Save^COMUtils("WWW120",form,objWWW120,1)		
			}
			if (global = "WWW122"){	//edita Campos
				set objWWW122 = $Get(^WWW122(0,form,id,1))
				set $$$WWW122HelpManual(objWWW122) = html				
				set status = $$Save^COMUtils("WWW122",form_","_id,objWWW122,1)		
			}
			if (global = "WWW121"){	 //edita IDS
				set objWWW121 = $Get(^WWW121(0,form,id,1))
				set $$$WWW121HelpManual(objWWW121) = html				
				set status = $$Save^COMUtils("WWW121",form_","_id,objWWW121,1)		
			}
			if (global = "WWW124"){	//edita Botões
				set objWWW124 = $Get(^WWW124(0,form,LANGUAGE,id,1))
				set $$$WWW124HelpManual(objWWW124) = html
								
				set status = $$Save^COMUtils("WWW124",form_","_LANGUAGE_","_id,objWWW124,1)		
			}
			if (global = "WWW1203"){	//edita abas
				set objWWW1203 = $Get(^WWW1203(0,form,LANGUAGE,id,1))
				set $$$WWW1203HelpManual(objWWW1203) = html
								
				set status = $$Save^COMUtils("WWW1203",form_","_LANGUAGE_","_id,objWWW1203,1)		
			}
			if (global = "WWWCustomManual"){
				set YMANUAL = "||~~||"
				
					//edita campos manuais
				if (id = 0){
					if ($data(^CustomManual) = 0){
						set ^CustomManual(0,form,$I(id)) = title_YMANUAL_html_YMANUAL_YBED_YMANUAL_$h_YMANUAL_"show"
					}else{
						set lastId = 0
						set currentId = ""
						for{
							set currentId = $order(^CustomManual(0,form,lastId))
							quit:currentId=""
							set lastId = currentId	
						}
						set ^CustomManual(0,form,$Increment(lastId)) = title_YMANUAL_html_YMANUAL_YBED_YMANUAL_$h_YMANUAL_"show"
					}
				}else{
					set title = $p(^CustomManual(0,form,id),YMANUAL,1) 
					set ^CustomManual(0,form,id) = title_YMANUAL_html_YMANUAL_YBED_YMANUAL_$h_YMANUAL_"show"
				}
				
				set status = $$$OK	
				

			}				
				
			}catch objError{
				Set status = objError.Code
			}
			
			w status
			quit
	}]]></Implementation>
</Method>

<Method name="hiddenField">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	//este método de hiddenField é referente ao campo DisableHelpManual do form e não referente ao campo oculto do formulário.
	Do ^WWWVAR
	Set Y 			= "~"
	
	set id	=  $Get(%request.Data("id",1))
	set global	=  $Get(%request.Data("global",1))
	set primaryForm	=  $Get(%request.Data("YFORM",1))
	set secondaryForm	=  $Get(%request.Data("formulario",1))
	set YBED = $Get(%request.Data("YBED",1))
	set LANGUAGE = "PT"
	
	quit:+$$^WWWBEDBER(YBED)=0 // se não for administrador não edita
	set status = $$$OK
	
	if ((global '= "")){
	try{	
			if (secondaryForm '= ""){
				set primaryForm = secondaryForm
			}
			
			if (global = "WWW120"){	//edita a descrição principal
				set objWWW120 = $Get(^WWW120(0,primaryForm,1))
				set DisableHelpManual = $$$WWW120DisableHelpManual(objWWW120)
				set $$$WWW120DisableHelpManual(objWWW120) = ('DisableHelpManual)	
				set status = $$Save^COMUtils("WWW120",primaryForm,objWWW120,1)		
			}
			
			
			if (global = "WWW122"){	//edita Campos
				set objWWW122 = $Get(^WWW122(0,primaryForm,id,1))
				set DisableHelpManual = $$$WWW122DisableHelpManual(objWWW122)
				set $$$WWW122DisableHelpManual(objWWW122) = ('DisableHelpManual)			
				set status = $$Save^COMUtils("WWW122",primaryForm_","_id,objWWW122,1)		
			}
			
			
			
			if (global = "WWW121"){	 //edita IDS
				set objWWW121 = $Get(^WWW121(0,primaryForm,id,1))
				set DisableHelpManual = $$$WWW121DisableHelpManual(objWWW121)
				set $$$WWW121DisableHelpManual(objWWW121) = ('DisableHelpManual)				
				set status = $$Save^COMUtils("WWW121",primaryForm_","_id,objWWW121,1)		
			}
			if (global = "WWW124"){	//edita Botões
				set objWWW124 = $Get(^WWW124(0,primaryForm,LANGUAGE,id,1))
				set DisableHelpManual = $$$WWW124DisableHelpManual(objWWW124)
				set $$$WWW124DisableHelpManual(objWWW124) = ('DisableHelpManual)		
				set status = $$Save^COMUtils("WWW124",primaryForm_","_LANGUAGE_","_id,objWWW124,1)		
			}
			if (global = "WWW1203"){	//edita abas
				set objWWW1203 = $Get(^WWW1203(0,primaryForm,LANGUAGE,id,1))
				
				set DisableHelpManual = $$$WWW1203DisableHelpManual(objWWW1203)
				set $$$WWW1203DisableHelpManual(objWWW1203) = ('DisableHelpManual)
								
				set status = $$Save^COMUtils("WWW1203",primaryForm_","_LANGUAGE_","_id,objWWW1203,1)		
			}
			if (global = "WWWCustomManual"){	//edita campos manuais
				set YMANUAL = "||~~||"
				
				set CustomManualObj = ^CustomManual(0,primaryForm,id)
				
				if ($p(CustomManualObj,YMANUAL,5) = "hidden"){
					set $piece(^CustomManual(0,primaryForm,id),YMANUAL,5) = "show"
				}else {
					set $piece(^CustomManual(0,primaryForm,id),YMANUAL,5) = "hidden"
				}
				
				set status = $$$OK	
				

			}				
				
			}catch objError{
				Set status = objError.Code
			}
			
			w status
			quit
	
	
	
	}]]></Implementation>
</Method>

<Method name="editGrid">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Do ^WWWVAR
	Set Y 			= "~"
	
	set id	=  $Get(%request.Data("id",1))
	set global	=  $Get(%request.Data("global",1))
	set form	=  $Get(%request.Data("formulario",1))
	set html	=  $Get(%request.Data("html",1))
	set YBED = $Get(%request.Data("YBED",1))
	
	
	set status = 0
	quit:+$$^WWWBEDBER(YBED)=0 // se não for administrador não edita
	set status = $$$OK
	
	if ((global '= "") && (html '= "")){
		
 	//edita campos	do grid
		try{
				
			if (global = "WWW122"){	//edita Campos
				set objWWW122 = $Get(^WWW122(0,form,id,1))
				set $$$WWW122HelpManual(objWWW122) = html				
				set status = $$Save^COMUtils("WWW122",form_","_id,objWWW122,1)		
			}
			if (global = "WWW121"){	 //edita IDS
				set objWWW121 = $Get(^WWW121(0,form,id,1))
				set $$$WWW121HelpManual(objWWW121) = html				
				set status = $$Save^COMUtils("WWW121",form_","_id,objWWW121,1)		
			}			
				
			}catch objError{
				Set status = objError.Code
			}
			
			w status
			quit
	}]]></Implementation>
</Method>

<Method name="DeleteCustomManual">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set id	=  $Get(%request.Data("id",1))
	 set form	=  $Get(%request.Data("YFORM",1))
	 
	 set status = $$$OK
	 
	 try{
		 k ^CustomManual(0,form,id)
		 
		}catch objError{
		
		Set status = objError.Code
		
		}
		w status 
		quit]]></Implementation>
</Method>

<Method name="getRel">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set form	=  $Get(%request.Data("YFORM",1))
	Set menu	=  $Get(%request.Data("YANZ",1))
	Set YBED	=  $Get(%request.Data("YBED",1))
		
   	set idApplicn= $$$WWW013MegaMenuApplicationName($get(^WWW013(0,YBED,1)))

	set menu = idApplicn
	
	set LANGUAGE = "PT" //PT ou DE
	
	set WWW120 = $Get(^WWW120(0,form,1),1)
	set principalDescription = $$$WWW120HelpManual(WWW120)
	set principalDesativeHelpManual = $$$WWW120DisableHelpManual(WWW120)
	

	//pega os campos de ID
	set ids = []
	do ..generateIdFields(form,LANGUAGE,YBED,.ids)
	
	//pega as abas se houver
	set tabs = []
	set currentTab = ""
	for{
		set currentTab = $order(^WWW1203(0,form,LANGUAGE,currentTab))
		quit:currentTab=""
		
		
		set WWW1203 = $Get(^WWW1203(0,form,LANGUAGE,currentTab,1))
		
		set tab = {}
		set tab.id = currentTab
		set tab.description = $p(^WWW1203(0,form,LANGUAGE,currentTab,1),"~",1)
		set tabHelpDescription = $$$WWW1203HelpManual(WWW1203)
		set DesativeHelpManual = $$$WWW1203DisableHelpManual(WWW1203)
		set UsersAccess = $$$WWW1203UsersAccess(WWW1203)
		set tab.globalEditPath = "1203"
		
		set tab.tabHelpDescription = tabHelpDescription
		set tab.DesativeHelpManual = DesativeHelpManual
		
		//Se o campo de desativar o menu na propriedade estiver marcado, ela não enviara o campo para a tela para usuario comum
		
		//set dontShowProp = ((DesativeHelpManual = "1")&&(+$$^WWWBEDBER(YBED) = 0))
		
		set ACCESS = 1
		
		if (UsersAccess '= ""){
			set permissionSearch = UsersAccess
			IF ($FIND(","_$$^WWWBEDBER(YBED)_",",","_permissionSearch_",") > 0){
				 SET ACCESS=1
			}else {
				 SET ACCESS=0
			}
			
		}
		
		if ((DesativeHelpManual = 1) && (+$$^WWWBEDBER(YBED) '= 1)){
					SET ACCESS=0
		}
		
		if (ACCESS > 0){
			d tabs.%Push(tab)
		}
				
	}
	

	//pega os demais campos por abas
	set fields = []
	
	do ..generateFields(form,LANGUAGE,YBED,.fields)

	//verifica se tem agrupamento na customizacao
		
	
	set sql = "select * from www122D where FormName = '"_form_"' order by linePosition"
	
	set rset = ##class(%SQL.Statement).%ExecDirect("",sql)
	
	set idsGroups = []
	set LastGroupName = ""
	
	while(rset.%Next()){
			set idGroup = {}
			set GroupName = rset.%Get("GroupName")
			
			if (GroupName '= ""){
				set idGroup.GroupName = GroupName
				set LastGroupName = GroupName
				
			}else{
				set idGroup.GroupName = LastGroupName
			}
			
			if (idGroup '= "" && idGroup.GroupName '= ""){
				set grp =  idGroup.GroupName
				if (grp '= ""){
					set translationGroupName = $Get(^WWW009(0,LANGUAGE, grp,1),"")
				
				if (translationGroupName '= ""){
				set idGroup.GroupName = $p(translationGroupName,"~",1)
				}
				
			}
		}
			set idGroup.FieldNumber = rset.%Get("FieldNumber")
			
			d idsGroups.%Push(idGroup) 
	}
	
	set MenuDescription = ""
	//obtem as informaçõe principais do formulario
	set WWW1201 = $Get(^WWW1201(0,form,LANGUAGE,1),0)
	
	if ('WWW1201){
		set MenuDescription	= $$$Text(WWW1201)
	}
	

	
	set sql = "select MenuDescription,MenuItemNumber from WWW004 where FormName like '"_form_"' and ApplicationName like '"_menu_"'"
	
	set rset = ##class(%SQL.Statement).%ExecDirect("",sql)
	
	
	set MenuItemNumber = ""
	
	while(rset.%Next()){
	
	if (MenuDescription = ""){
		set MenuDescription = rset.%Get("MenuDescription") 
	}
		set MenuItemNumber = rset.%Get("MenuItemNumber") 
	}
	
	
	//obtem o caminho do acesso	
	set count = 1
	set paths = []
	set lastPath = ""
	for {
		set menuPath = $piece(MenuItemNumber,".",count)
		quit:menuPath=""
		set count = $Increment(count)
		
		set WWW004 = $get(^WWW004(0,menu,lastPath_menuPath_".",1))
		
		if (WWW004 = ""){
			set WWW004 = $get(^WWW004(0,menu,lastPath_menuPath,1))
			set lastPath = lastPath_menuPath
		}else {
			set lastPath = lastPath_menuPath_"."
		}
		
		set path = $$$WWW004MenuDescription(WWW004)
		
		do paths.%Push(path)
		
	}
	
	
	//obtem botões
	set buttons = []
	set currentButton = ""
	for{
		set currentButton = $order(^WWW124(0,form,LANGUAGE,currentButton))
		quit:currentButton=""
		
		set button = {}
		
		set WWW124 = $Get(^WWW124(0,form,LANGUAGE,currentButton,1),"")
		
		if (WWW124 '= ""){
			set ButtonDescription = $$$WWW124HelpManual(WWW124)
			set DesativeHelpManual = $$$WWW124DisableHelpManual(WWW124)
			set Authorization1 = $$$WWW124Authorization1(WWW124)
			set img = $$$WWW124PictureFileOnButton(WWW124)
			
			set objImg = ""
	
			set objImg = $get(^WWW012(0,0,1))
			set ImgPath = $$$WWW012PhysicalFTPDirectory(objImg)
			set PhysicalDTDTable = $$$WWW012PhysicalDTDTable(objImg)
		
			if ($extract(ImgPath, $length(ImgPath)) '= "\") {
				set ImgPath = PhysicalDTDTable_"/"_img
				
			}
	
			set button.ButtonNumber =  currentButton
			set button.globalEditPath = "124"
			set button.PropIDDescription = ButtonDescription
			set button.NameTranslate = $$$WWW124ButtonDescription(WWW124)
			set button.InputType = "Botão"
			set button.InputSize = ""
			set button.hiddenField = 0
			set button.DesativeHelpManual = DesativeHelpManual
			set button.src = ImgPath
	
		//set dontShowProp = (DesativeHelpManual = "1")&&(+$$^WWWBEDBER(YBED) = 0)
				 //Se o campo de desativar o menu na propriedade estiver marcado, ela não enviara o campo para a tela para usuario comum
				 
				 
		set ACCESS = 1
		
		if (Authorization1 '= ""){
			set permissionSearch = Authorization1
			IF ($FIND(","_$$^WWWBEDBER(YBED)_",",","_permissionSearch_",") > 0){
				 SET ACCESS=1
			}else {
				 SET ACCESS=0
			}	
		}
		if ((DesativeHelpManual = 1) && (+$$^WWWBEDBER(YBED) '= 1)){
				SET ACCESS=0
		} 
		if (ACCESS > 0){
			d buttons.%Push(button)	
		}
	}
		
	}
	
	
	//obtem campos incluídos manualmente através do Manual
	
	set YMANUAL = "||~~||"
	set manualPropsList = []
	set currentManualProps = ""
	for{
		set currentManualProps = $order(^CustomManual(0,form,currentManualProps))
		quit:currentManualProps=""
		
		set ManualProps = {}
		set DesativeHelpManual = $case($p(^CustomManual(0,form,currentManualProps),YMANUAL,5), "show": "", "hidden": "1")
		
		set ManualProps.idManualProps =  currentManualProps
		set ManualProps.globalEditPath = "999989"
		set ManualProps.PropIDDescription = $p(^CustomManual(0,form,currentManualProps),YMANUAL,2)
		set ManualProps.NameTranslate = $p(^CustomManual(0,form,currentManualProps),YMANUAL,1)
		set ManualProps.InputType = "Campo de informação"
		set ManualProps.InputSize = ""
		set ManualProps.hiddenField = 0
		set ManualProps.EditedBy = $p(^CustomManual(0,form,currentManualProps),YMANUAL,3)
		set ManualProps.EditedAt = $zdt($p(^CustomManual(0,form,currentManualProps),YMANUAL,4),4)
		set ManualProps.DesativeHelpManual = DesativeHelpManual
		
		set dontShowProp = (DesativeHelpManual = "1")&&(+$$^WWWBEDBER(YBED) = 0)
				 //Se o campo de desativar o menu na propriedade estiver marcado, ela não enviara o campo para a tela para usuario comum
		
		if ('dontShowProp){
		d manualPropsList.%Push(ManualProps)	
		}
			
	}
	
	set anexos = []
	
	set anexo = ""
	for{
		set anexo = $order(^mtemp.ManualArquivo(anexo))
		quit:anexo=""
		set anexoObj = {}
		set anexoObj.path = ^mtemp.ManualArquivo(anexo)
		set anexoObj.image = anexo
		d anexos.%Push(anexoObj)
	}
	
	set objReturn = {}
	
	set objReturn.principalDescription = principalDescription
	set objReturn.MenuDescription = MenuDescription
	set objReturn.MenuItemNumber = "("_menu_" - "_MenuItemNumber_")"
	set objReturn.path =  paths
	set objReturn.ids = ids
	set objReturn.tabs = tabs
	set objReturn.fields = fields
	set objReturn.idsGroups = idsGroups
	set objReturn.buttons = buttons
	set objReturn.Adm = +$$^WWWBEDBER(YBED) //administradores
	set objReturn.manualPropsList = manualPropsList
	set objReturn.principalDesativeHelpManual = principalDesativeHelpManual
	set objReturn.anexos = anexos

	
	write objReturn.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="generateIdFields">
<ClassMethod>1</ClassMethod>
<FormalSpec>form,LANGUAGE,YBED,*ids</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set currentId = ""
	for{
		set currentId = $order(^WWW002(0,form,currentId))
		quit:currentId=""
		
		set WWW002 = ^WWW002(0,form,currentId,1)
		
		set InputSize = $$$WWW002InputSize(WWW002)
		set InputType = $$$WWW002InputType(WWW002)
		set textInForms = $$$WWW002TextInForms(WWW002) 
		
		
		set WWW121 = $Get(^WWW121(0,form,currentId,1),1)
		set propIdDescription = $$$WWW121HelpManual(WWW121)
		set DesativeHelpManual = $$$WWW121DisableHelpManual(WWW121)
		
	

		if (InputSize '= "" && InputType '= ""){
				
				set nameTranslate = $Get(^WWW0021(0,form,currentId,LANGUAGE,1),"")
				set inputtype = ^WWW100(0,"FELDTYP",LANGUAGE,InputType,1)
				
				if (nameTranslate = "" && (textInForms '= "")){
					set nameTranslate = textInForms
				}
				
				set objId = {}
				set objId.id = currentId
				set objId.NameTranslate = nameTranslate
				set objId.InputSize = InputSize
				set objId.InputType = $p(inputtype,"~",1)
				set objId.PropIDDescription = propIdDescription
				//set objId.IsRequired = 1
				set objId.hiddenField = 0
				set objId.globalEditPath = "121"
				set objId.DesativeHelpManual = DesativeHelpManual
				
				
				set oldHelp = $get(^WWW127(0,form,"D",currentId,LANGUAGE,1),"")
				set objId.OldHelp = $p(oldHelp,"~",1)
				
				//set dontShowProp = (DesativeHelpManual = "1")&&(+$$^WWWBEDBER(YBED) = 0)
				 //Se o campo de desativar o menu na propriedade estiver marcado, ela não enviara o campo para a tela para usuario comum
				 set ACCESS = 1
				 
				if ((DesativeHelpManual = 1) && (+$$^WWWBEDBER(YBED) '= 1)){
					SET ACCESS=0
				}
				 
				 set WWW121D = $Get(^WWW121D(0,form,currentId,0,1),"")
		
				 set CustomIdSize = $$$WWW121DFieldLength(WWW121D)
		 		 set CustomIdFieldDescription = $$$WWW121DFieldDescription(WWW121D)
		 		 set CustomIDDefaultVariableInput = $$$WWW121DDefaultVariableInput(WWW121D)
		 		 
		 		 if (CustomIdSize '= ""){
			 		 	set objId.InputSize = CustomIdSize
			 	  }
			 	  if (CustomIdFieldDescription '= ""){
				 	 	set objId.NameTranslate = CustomIdFieldDescription
				  }
				  
				  if (CustomIDDefaultVariableInput '= "") {
						set objId.defaultVariable = CustomIDDefaultVariableInput
				}
					
				if (ACCESS > 0){
					d ids.%Push(objId)
				}
		}
	
	}]]></Implementation>
</Method>

<Method name="generateFields">
<ClassMethod>1</ClassMethod>
<FormalSpec>form,LANGUAGE,YBED,*fields</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set InputType = ""
	set currentField = ""
	for{
		set currentField = $order(^WWW122(0,form,currentField))
		quit:currentField=""
		
		set WWW122 = $Get(^WWW122(0,form,currentField,1),"")
		
		set DisplayOnPageNumber = $$$WWW122DisplayOnPageNumber(WWW122)
		set SequenceNumber = $$$WWW122SequenceNumber(WWW122)
		set ManualCaption = $$$WWW122ManualCaption(WWW122)
		set MandatoryInputItem = $$$WWW122MandatoryInputItem(WWW122)
		set PropIDDescription = $$$WWW122HelpManual(WWW122)
		set DesativeHelpManual = $$$WWW122DisableHelpManual(WWW122)
		set RowPosition = $$$WWW122RowPosition(WWW122)
		set DataInputType = $$$WWW122DataInputType(WWW122)
		
		set WWW003 = $Get(^WWW003(0,form,currentField,1),"")
		
		set InputLength = $$$WWW003InputLength(WWW003)
		set RelationClass = ""
		
		set RelationalPrimaryKeys = ""
		set RelationalPrimaryKeys = $$$WWW003RelationalPrimaryKeys(WWW003)
		
		set InputType = $$$WWW003InputType(WWW003)
		if (InputType '= ""){
			set InputType = ^WWW100(0,"FELDTYP",LANGUAGE,InputType,1)	
		}
	
		if ($L(RelationalPrimaryKeys) = 0)
		{
			set RelationClass = $$$WWW003RelationDatabase(WWW003)
			
		}
		set field = {}
		
		set field.id = currentField
		set field.RelationClass = RelationClass
		set field.tab = $p(DisplayOnPageNumber,".",1)
		if (SequenceNumber '= ""){
			set field.NameTranslate = $Get(^WWW0031(0,form,SequenceNumber,LANGUAGE,1),"")
		} elseif(currentField '= ""){
			set tempTranslate = $get(^WWW1221(0,form,currentField,LANGUAGE,1),"")
			if (tempTranslate '= ""){
				set field.NameTranslate = tempTranslate
			} 
		}
		
		if (field.NameTranslate = ""){
			set field.NameTranslate = ManualCaption
		}
		set field.InputType = $p(InputType,"~",1)
		set field.InputSize = InputLength
		set field.IsRequired = MandatoryInputItem
		set field.PropIDDescription = PropIDDescription
		set field.hiddenField = 0
		set field.defaultVariable = ""
		set field.globalEditPath = "122"
		set field.parentForm = form
		
		set oldHelp = $get(^WWW127(0,form,"D",currentField,LANGUAGE,1),"")
		set field.OldHelp = $p(oldHelp,"~",1)
		
		
		//verifica se tem customização e se tiver da preferencia a ela.
		
		set WWW122D = $Get(^WWW122D(0,form,currentField,0,1),"")
		
		 set CustomSize = $$$WWW122DFieldLength(WWW122D)
		 set CustomhiddenField = $$$WWW122DHiddenField(WWW122D)
		 set CustomFieldDescription = $$$WWW122DFieldDescription(WWW122D)
		 set CustomDisplayOnPage  = $$$WWW122DDisplayOnPage(WWW122D)
		 set CustomLine = $$$WWW122DLinePosition(WWW122D)
		 set CustomInputType  = $$$WWW122DInputType(WWW122D)
		 set CustomDefaultVariableInput = $$$WWW122DDefaultVariableInput(WWW122D)
		 set CustomMandatoryField = $$$WWW122DMandatoryField(WWW122D)
		 
	
		if (CustomDefaultVariableInput '= "") {
			set field.defaultVariable = CustomDefaultVariableInput
		}
		if (CustomMandatoryField '= ""){
			 set field.IsRequired = CustomMandatoryField //verifica se o campo é obrigatorio nas customizações
		 }
		if (CustomInputType '= ""){
			set CustomInputType = ^WWW100(0,"FELDTYP",LANGUAGE,CustomInputType,1)	//verifica se o tipo do campo nas customizações
			set field.InputType = $p(CustomInputType,"~",1)
		}
		if (CustomDisplayOnPage '= ""){
		 	set field.tab = CustomDisplayOnPage //verifica a TAB nas customizações
		}
		if (CustomhiddenField){
			 set field.hiddenField = 1 //verifica se o campo é oculto nas customizações
		}
		if (CustomFieldDescription '= ""){
			set field.NameTranslate = CustomFieldDescription  //verifica se o campo tem descrições nas customizações
		}
		if (CustomSize '= ""){
			set field.InputSize = CustomSize	//verifica o tamanho do campo nas customizações 
		}
		
		if (CustomLine '= ""){
			set RowPosition = CustomLine
		}
			set field.DesativeHelpManual = DesativeHelpManual
			
		//	set dontShowProp = (DesativeHelpManual = "1")&&(+$$^WWWBEDBER(YBED) = 0)
			
			
			set ACCESS = 1
				 
			if ((DesativeHelpManual = 1) && (+$$^WWWBEDBER(YBED) '= 1)){
				SET ACCESS=0
			}
			
			
			if (ACCESS > 0){
					if (field.NameTranslate '= ""){
						if (($Extract(field.NameTranslate,1,5) '= "_FREE") && (DataInputType '= 15)){ //DataInputType 15 = tipo oculto
							d fields.%Push(field)
						}
					}
					
			//	if (RowPosition) {	
			// d fields.%Push(field)
			// }
			}
			 //Se o campo de desativar o menu na propriedade estiver marcado, ela não enviara o campo para a tela para usuario comum
		
		
	}]]></Implementation>
</Method>

<Method name="getGrid">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set form	=  $Get(%request.Data("YFORM",1))
	
	Set menu	=  $Get(%request.Data("YANZ",1))
	Set YBED	=  $Get(%request.Data("YBED",1))
		
   	set idApplicn= $$$WWW013MegaMenuApplicationName($get(^WWW013(0,YBED,1)))

	set menu = idApplicn
	
	
	
	set menu = $p(menu,",",1)
	set LANGUAGE = "PT" //PT ou DE
	
	if (form '= ""){
		
		set sql = "select t1.class as class from www003 t1 "_
		"inner join www120 t2 "_
		"on t1.class = t2.ClassUsedInForm "_
		"and t1.class like '"_form_"%' and t1.class != '"_form_"' and t2.FormType = 12 group by class"
		
		set rset = ##class(%SQL.Statement).%ExecDirect("",sql)
		set classes = []
		
		while(rset.%Next()){
			set class = rset.%Get("class")
			quit:class=""
			
			//pega os campos de id
			set ids = []
			do ..generateIdFields(class,LANGUAGE,YBED,.ids)
			
			
			//pega os demais campos
			set fields = []
			do ..generateFields(class,LANGUAGE,YBED,.fields)
			
			set WWW120 = $Get(^WWW120(0,class,1),1)
			set GridDescription = $$$WWW120HelpManual(WWW120)
			set GridDesativeHelpManual = $$$WWW120DisableHelpManual(WWW120)
		
			
			set obj = {}
			set obj.class = class
			set obj.noFormName = $Replace(class, form, "")
			set obj.ids = ids
			set obj.fields = fields
			set obj.IsGrid = 1
			set obj.GridDescription = GridDescription
			set obj.GridDesativeHelpManual = GridDesativeHelpManual
			set obj.ShowHiddenTabButton = +$$^WWWBEDBER(YBED)
			set obj.parentForm = form
			
			set dontShowProp = (GridDesativeHelpManual = "1")&&(+$$^WWWBEDBER(YBED) = 0)
			 //Se o campo de desativar o menu na propriedade estiver marcado, ela não enviara o campo para a tela para usuario comum
		
			if ('dontShowProp){
				d classes.%Push(obj)
			}
				
		}
		
		w classes.%ToJSON()
		quit
		
	}]]></Implementation>
</Method>

<Method name="uploadPhoto">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set YM	=   0
	
	set status = $$$OK
	set obj = ""
	
		set obj = $get(^WWW012(YM,YM,1))
		set caminho = $$$WWW012PhysicalFTPDirectory(obj)
		set PhysicalDTDTable = $$$WWW012PhysicalDTDTable(obj)
		
		if ($extract(caminho, $length(caminho)) '= "\") {
			set caminho = caminho_"\"
		}
	
		set caminho = caminho_"manual\"
	
		//checa e cria se não houver, o diretorio
		if ('##class(%File).DirectoryExists(caminho)) {
			do ##class(%File).CreateDirectoryChain(caminho)
		}
	
		;
		set fname = %request.MimeData("files[]",1).FileName
		set fname= $REPLACE(fname," ","_")
		Set stream=##class(%FileBinaryStream).%New()
		Set stream.Filename= caminho_fname
		do stream.CopyFrom(%request.MimeData("files[]",1))
		do stream.Flush()

		;
		set arquivoAnt = $get(^mtemp.ManualArquivo(fname))
		set obj = {}
		
		if (arquivoAnt = ""){
			set status = stream.SaveStream()
			set ^mtemp.ManualArquivo(fname) =  PhysicalDTDTable_"manual/" 
			set obj.status = status	
		}else{
			set obj.status = 2
		}
		
		set obj.path = PhysicalDTDTable_"manual/" 
		set obj.image = fname
		w obj.%ToJSON()
		quit]]></Implementation>
</Method>

<Method name="deletePhoto">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set YM	=   0
	set fname = $Get(%request.Data("image",1))
	set status = $$$OK
	set retorno = {}
	
	try{
		set obj = $get(^WWW012(YM,YM,1))
		set caminho = $$$WWW012PhysicalFTPDirectory(obj)
		if ($extract(caminho, $length(caminho)) '= "\") {
			set caminho = caminho_"\"
		}
		set caminho = caminho_"manual\"
	
		do ##class(%File).Delete(caminho_fname)
		
		k ^mtemp.ManualArquivo(fname)
		
		set retorno.msg = "Imagem excluída com sucesso"
		
	}catch objError{
		set status = objError.Code
		set retorno.msg = "Erro ao excluir a imagem"
	}

	
	set retorno.status = status
	w retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getAllRels">
<ClassMethod>1</ClassMethod>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set session =  $Get(%request.Data("YUSER",1))
	set YLOCATION =  $Get(%request.Data("YLOCATION",1))
	set YBED = $Get(%request.Data("YBED",1))
	set user = $piece($get(^WWWUSER(0,session,1)),"~" ,2)
	set LANGUAGE = "PT"
	set retorno = {}
	
	if (user = "") {
		set retorno.status = 0
		set retorno.msg = "Timeout de sessão: favor reconectar-se ao sistema ou abrir novamente a janela do manual de ajuda"
		w retorno.%ToJSON()
		quit
	} else {	
		if $data(^WWW013(0,user,1)) = 0 {	
			set retorno.status = 0
			set retorno.msg = "Usuário inexistente: favor reconectar-se ao sistema ou abrir novamente a janela do manual de ajuda"
			w retorno.%ToJSON()
			quit
		}
	}
	
	set WWW013 = $get(^WWW013(0,user,1))
	set MenusOfUser    =  $$$WWW013UserAccess(WWW013) 
	set MegaMenuApplicationName = $$$WWW013MegaMenuApplicationName(WWW013) 
	set menuToDisplay = MegaMenuApplicationName
	set itemMenu      = ""
	set cnt           = ""	
	set strMenu 	  = ""
	set DirectoryURL = $translate($piece($get(^WWW012(0,0,1)),"~",47),"\","/")
	
	for {
		set itemMenu = $order(^WWW004(0,menuToDisplay,itemMenu))   
		quit:(itemMenu = "")

		set objMenu = $get(^WWW004(0,menuToDisplay,itemMenu,1))
		set menuProfiles = ";"_$$$WWW004UserAccess(objMenu)_";"

		for cnt = 1:1:$length(MenusOfUser,";") {
			
			set profile = $piece(MenusOfUser,";",cnt)
		
			set strMenuLink = $$$WWW004Description(objMenu)

			if $find(menuProfiles,profile) {
																	
				if strMenu = "" { 
					if $piece(itemMenu,".",2) '= "" {
				
						set strMenu = $piece(itemMenu,".",1)_"."_";"_itemMenu   
						
					}					
				}
				elseif '$find(strMenu,itemMenu) {
					if $piece(itemMenu,".",2) '= "" {    
						set Prefixo = $piece(itemMenu,".",1)_"."
						
						if '$find(strMenu,Prefixo) {
								set strMenu = strMenu_";"_Prefixo
							
						}						
							set strMenu = strMenu_";"_itemMenu					
						
					}
				}								
			}
		}	
	}
	
	set retorno.data = []	
	set titulo = ""
	
	if strMenu '= "" {	
		for cnt2 = 1:1:$length(strMenu,";") {
			set userMenu = $piece(strMenu,";",cnt2)	
			
			set WWW004  = $get(^WWW004(0,menuToDisplay,userMenu,1))
			set WWW0041 = $get(^WWW0041(0,menuToDisplay,userMenu,LANGUAGE,1))				
			set menuDescription  = $$$WWW0041Description(WWW0041)
			
			if menuDescription = "" {
				set menuDescription  = $$$WWW004MenuDescription(WWW004)
			}
			
			set tobj = {}
			
			set menuImageOrIcon   = $piece(WWW004,"~",8)		
			set ajuda = $piece(WWW004,"~",15)
			set menuLink = $piece(ajuda,";",1)
			set helpText = $piece(ajuda,";",2)
			set formname = $$$WWW004FormName(WWW004)
			
			set tobj.userMenu = userMenu
			if $piece(userMenu,".",2) = "" {
				set tobj.menuDescription = menuDescription
				//set titulo = menuDescription
				set tobj.titulo = 1					
			}	
			elseif $piece(userMenu,".",2) '= "" {
				set tobj.menuDescription = menuDescription
				set tobj.img = DirectoryURL_menuImageOrIcon
				set tobj.menuLink = menuLink
				
				set tobj.helpText = helpText
				
				if (formname '= ""){
						set WWW120 = $get(^WWW120(0,formname,1))
						if (WWW120 '= ""){
						if ($$$WWW120HelpManual(WWW120) '= ""){	
							if '($$$WWW120HelpManual(WWW120) = "Nenhum texto de ajuda foi adicionado a este campo."){
							set tobj.helpText = $$$WWW120HelpManual(WWW120)	
							}	
							 
					}
					
				}
				}
			
				
				set tobj.form = formname
				set tobj.titulo = 0
				
				set tobj.link = "/csp"_DirectoryURL_"VARManual.csp?YBED="_user_"&YUSER="_session_"&YM=0&YLOCATION="_YLOCATION_"&YFORM="_formname
				
			}
				
				do retorno.data.%Push(tobj)
		}
	}
			set retorno.status = 1
			set retorno.msg = ""
			
			
			set anexos = []
			set anexo = ""
			for{
				set anexo = $order(^mtemp.ManualArquivo(anexo))
				quit:anexo=""
				set anexoObj = {}
				set anexoObj.path = ^mtemp.ManualArquivo(anexo)
				set anexoObj.image = anexo
				d anexos.%Push(anexoObj)
			}	
		
			set retorno.adm = +$$^WWWBEDBER($piece($get(^WWWUSER(0,session,1)),"~" ,2))
			set retorno.anexos = anexos
			
			w retorno.%ToJSON()
			quit]]></Implementation>
</Method>
</Class>
</Export>