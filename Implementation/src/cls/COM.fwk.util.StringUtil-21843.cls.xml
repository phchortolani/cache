<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.util.StringUtil">
<Abstract>1</Abstract>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>

<Method name="substituteString">
<ClassMethod>1</ClassMethod>
<FormalSpec>str:%String,stringToBeReplaced:%String,replacementString:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 
	; History
	; 
	; 22-Mar-2006	hjrb	SR14178:Last element was being incorrectly removed	
	; 
	;-------------------------------------------------------------------------------
	;
	quit:stringToBeReplaced="" str

	 set strFinalString = ""
	 set strRemaining = str
	 
	 while strRemaining '= "" {
	 
		 set strPiece = $piece(strRemaining, stringToBeReplaced, 1)
	  	 set strFinalString = strFinalString_strPiece
	  	 if $length(strPiece) < $length(strRemaining) {
	   	 set strFinalString = strFinalString_replacementString
	 }
	
	 if strPiece '= "" {
	 	//set strRemaining = $piece(strRemaining, strPiece, 2) SR14178
	 	set strRemaining = $extract(strRemaining, $length(strPiece) + 1, $length(strRemaining))
	 }
	 	set strRemaining = $extract(strRemaining, $length(stringToBeReplaced) + 1, $length(strRemaining))
	 }
	 
	 /*
	 set stringToBeRemovedPosition = $find(str, stringToBeReplaced) 
	 
	 while (stringToBeRemovedPosition '= 0) {
	  
	  set $extract(str, stringToBeRemovedPosition - $length(stringToBeReplaced), stringToBeRemovedPosition - 1) = replacementString
	  
	  set stringToBeRemovedPosition = $find(str, stringToBeReplaced) 
	 }
	 */
	 
	 quit strFinalString
]]></Implementation>
</Method>

<Method name="startsWith">
<ClassMethod>1</ClassMethod>
<FormalSpec>str:%String,start:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	
	set startLength = $length(start)
	
	if ((startLength = 0) || ($length(str) = 0)) {
		quit 0
	}
		
	if ($extract(str, 1, startLength) '= start) {
		quit 0
	}
	
	quit 1
]]></Implementation>
</Method>

<Method name="endsWith">
<ClassMethod>1</ClassMethod>
<FormalSpec>str:%String,end:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	
	set endLength = $length(end)
	set totalLength = $length(str)
	
	if ((endLength = 0) || (totalLength = 0)) {
		quit 0
	}
		
	if ($extract(str, totalLength - endLength + 1, totalLength) = end) {
		quit 1
	}
	
	quit 0
]]></Implementation>
</Method>

<Method name="trim">
<ClassMethod>1</ClassMethod>
<FormalSpec>str:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// maybe there is a better algorithm, but...
	
	while ($extract(str, 1) = " ") {
		set $extract(str, 1) = ""
	}

	while ($extract(str, $length(str)) = " ") {
		set $extract(str, $length(str)) = ""
	}
	
	quit str
]]></Implementation>
</Method>
</Class>
</Export>