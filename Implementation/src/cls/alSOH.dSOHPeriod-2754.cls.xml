<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.dSOHPeriod">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>
<UDLText name="T">
<Content>
/*------------------------------------------------------------------------------
; History: 
; 14-Apr-2009	PPP		SR16468:Captions for Properies
; 25-Jan-2008	LB		SR15626 Created 
;-----------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="Description">
<Type>alSYS.dt.dtString</Type>

<Parameter name="CAPTION" value="AL00109"/>
</Property>


<Property name="StartDate">
<Type>alSYS.dt.dtDate</Type>

<Parameter name="CAPTION" value="AL00112"/>
</Property>


<Property name="EndDate">
<Type>alSYS.dt.dtDate</Type>

<Parameter name="CAPTION" value="AL00110"/>
</Property>


<Property name="CurrentPeriod">
<Type>alSYS.dt.dtBoolean</Type>

<Parameter name="CAPTION" value="AL00108"/>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Property name="PeriodType">
<Type>alSOH.dPeriodType</Type>
<Cardinality>parent</Cardinality>
<Inverse>Periods</Inverse>
<Relationship>1</Relationship>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00111"/>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="PeriodTypeIndex">
<Properties>PeriodType</Properties>
</Index>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="%OnNew">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%New</METHOD> method to 
provide notification that a new instance of an object is being created.

<P>If this method returns an error then the object will not be created.]]></Description>
<FormalSpec>PeriodType:alSOH.dPeriodType</FormalSpec>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History: 
	; 14-Aug-2008	HQN		SR15801: Created
	;-------------------------------------------------------------------------------
	if $get(PeriodType) '= $$$NULLOREF {
		set objLastPeriod = PeriodType.Periods.GetAt(PeriodType.Periods.Count())
		if objLastPeriod '= $$$NULLOREF {
			set %this.StartDate = objLastPeriod.EndDate + 1   /* Starts the day after the last day */
		} else {
			set %this.StartDate = PeriodType.StartDate
		}
		set %this.EndDate = PeriodType.GetEndDate(%this.StartDate)
		do PeriodType.Periods.Insert(%this)
	}
	quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnDelete">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Delete</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being deleted.

<P>If this method returns an error then the object will not be deleted.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History: 
	; 24-Oct-2008	HQN		SR16068: Created, Delete PeriodBalances
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set objSOHPeriod = ..%Open(oid)
	set objResultSet = ##class(%Library.ResultSet).%New()
	set sc = objResultSet.Prepare("SELECT ID FROM alSOH.dPeriodBalance WHERE SOHPeriod = ?")
	if $$$ISOK(sc) {
		set sc = objResultSet.Execute(objSOHPeriod.%Id())
		if $$$ISOK(sc) {
			while objResultSet.Next(.sc) {
				set sc = ##class(alSOH.dPeriodBalance).%DeleteId(objResultSet.Data("ID"))
				quit:$$$ISERR(sc)
			}
		}
	}
	quit sc
]]></Implementation>
</Method>

<Method name="PeriodsExist">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidPeriodType:alSOH.dPeriodType</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History: 
	; 28-Apr-2009	PPP		SR16484: Check for Existance of Periods for a Period Type
	;-------------------------------------------------------------------------------

	&SQL(SELECT TOP 1 ID FROM alSOH.dSOHPeriod WHERE PeriodType = :pidPeriodType)

	quit 'SQLCODE
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alSOH.dSOHPeriodD</DataLocation>
<DefaultData>dSOHPeriodDefaultData</DefaultData>
<IdLocation>^alSOH.dSOHPeriodD</IdLocation>
<IndexLocation>^alSOH.dSOHPeriodI</IndexLocation>
<StreamLocation>^alSOH.dSOHPeriodS</StreamLocation>
<Data name="dSOHPeriodDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>CurrentPeriod</Value>
</Value>
<Value name="3">
<Value>Description</Value>
</Value>
<Value name="4">
<Value>EndDate</Value>
</Value>
<Value name="5">
<Value>PeriodType</Value>
</Value>
<Value name="6">
<Value>StartDate</Value>
</Value>
<Value name="7">
<Value>EndDate2</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>