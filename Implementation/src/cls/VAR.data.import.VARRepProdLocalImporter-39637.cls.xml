<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.VARRepProdLocalImporter">
<ClassType/>
<IncludeCode>VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Command: 
> do ##class(VAR.data.import.VARRepProdLocalImporter).importFile()

Fields
		ItemNumber,FREE33,SearchName,CostumerTextorItemTextNo,ItemGroup,ItemType,UnitofMeasure,HoldReason,FREE7,FREE18
			,FREE2,FREE6,FREE17,FREE9,DangerousGoodsCategory,FREE10,FREE5,FREE11,FREE12,FREE15,MultidoseInjectable,FREE13,
			FREE25,FREE22,FREE14,FREE32,ItemPolicy,BaseUnit
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo:%String,local:%String,Diretorio:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	if (($get(arquivo) = "") || ($get(Diretorio) = "")) quit "Parãmetros obrigatórios (arquivo) não informados"
		
	;quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_arquivo)
	
	
	;Copiado do import.INARTImporter.cls
	;CARLOS: Se local veio nulo autoriza o item somente para o 997 (CD Alphaville do DASA)
	if $get(local) = "" set local = 997

	set ^VARINARTImporter("Local") = $get(local)
	
			
	quit ..import(Diretorio_arquivo)
		;"VARRepProdLocal_DASA.csv")
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0
	
	;kill ^VARReposicaoLocalProduto
	;kIll ^VARReposicaoLocalProdutos
	;set ^WWW128(YM, "VARReposicaoLocalProduto", 1) = 0
	
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	set strStatus = $$$OK
    set local 	  = ""
	set produto   = ""
	set id		  = ""
			
	set local 	= ..getField(pstrLinha, 3) // Local
	set produto = ..getField(pstrLinha, 1) // Produto
	
	;DASA-228 -Durante a importação de parametros, autorizar os itens por local
	if ($data(^INDRPITEM(0,local,produto)) = 0) {
		do ^VARIncluirProdLocal(produto,local)
	}
	
	;DASA-79 - Se tiver o mesmo código e local, atualizar o mesmo registro...
	if $data(^VARReposicaoLocalProduto(YM,local,produto)) {
		for {
			set id = $order(^VARReposicaoLocalProduto(YM,local,produto,id))
			
			if (id = "") {
				quit
			}
								
			set $piece(key,",",1) = local
			set $piece(key,",",2) = produto
			set $piece(key,",",3) = id						
						
			set obj = $get(^VARReposicaoLocalProduto(YM,key,1))
						
			set $piece(obj,"~",38)	= $replace(..getField(pstrLinha,5),",",".")	//Estoque de Segurança em dias
			set $piece(obj,"~",39)	= $replace(..getField(pstrLinha,6),",",".")	//Ponto de Ressuprimento em dias
			set $piece(obj,"~",40)	= $replace(..getField(pstrLinha,7),",",".")	//Estoque Máximo em dias
			set $piece(obj,"~",9)	= $replace(..getField(pstrLinha,4),",",".")	//Demanda Média Mensal Informada
			set $piece(obj,"~",37)	= $replace(..getField(pstrLinha,8),",",".") //Meses para Média(DASA-375)
			set $piece(obj,"~",42)	= $replace(..getField(pstrLinha,9),",",".") //Observação(DASA-381)
			set $piece(obj,"~",35)	= 1 // Variáveis de Estoque
			set $piece(obj,"~",8)	= 1
			set $piece(obj,"~",1)	= $$GetDaysInMonths^VARReposicaoForm($piece(obj,"~",38))
			set $piece(obj,"~",2)	= $$GetDaysInMonths^VARReposicaoForm($piece(obj,"~",39))
			set $piece(obj,"~",3)	= $$GetDaysInMonths^VARReposicaoForm($piece(obj,"~",40))
			
			if (..#DEBUG) {
				do ..print(..lineBreak_"key="_key_", obj="_obj) // VERIFICAR ESSA LINHA
			} else {
				set strStatus = $$Save^COMUtils("VARReposicaoLocalProduto", key, obj, 1)	
			}
		}
	} else { ; ...Se não, criar um novo registro.	 
	
		set $$$KEY1(key)	= ..getField(pstrLinha, 3) // Local
		set $$$KEY2(key)	= ..getField(pstrLinha, 1) // Produto
		set $$$KEY3(key)	= $$^WWWNEXT1("VARReposicaoLocalProduto",key,3) // Numerador
	
		set obj = $get(^VARReposicaoLocalProduto(YM,key,1))
	
		// Não atualiza o registro caso ele já exista
		if (obj '= "") {
			quit strStatus
		}
		
		if ('$data(^WWW0121(YM,YM,$$$KEY1(key),1))) {
			set strStatus = "Local não existe " _ $$$KEY1(key)
			quit strStatus
		}
	
		if ('$data(^INART(YM,$$$KEY2(key),1))) {
			set strStatus = "Produto não existe " _ $$$KEY2(key)
			quit strStatus
		}
														// key				//Código (Sistema) 
		set $$$VARReposicaoLocalProdutoESDias(obj)						= $replace(..getField(pstrLinha,5),",",".")	//Estoque de Segurança em dias
		set $$$VARReposicaoLocalProdutoPRDias(obj)						= $replace(..getField(pstrLinha,6),",",".")	//Ponto de Ressuprimento em dias
		set $$$VARReposicaoLocalProdutoEMDias(obj)						= $replace(..getField(pstrLinha,7),",",".")	//Estoque Máximo em dias
		set $$$VARReposicaoLocalProdutoDMMI(obj)						= $replace(..getField(pstrLinha,4),",",".")	//Demanda Média Mensal Informada
		set $$$VARReposicaoLocalProdutoMesesparaMedia(obj)				= $replace(..getField(pstrLinha,8),",",".") //Meses para Média (DASA-375)
		set $$$VARReposicaoLocalProdutoObservacao(obj)					= $replace(..getField(pstrLinha,9),",",".") //Observação (DASA-381)
		set $$$VARReposicaoLocalProdutoVariaveisdeEstoque(obj)			= 1 // Variáveis de Estoque
		set $$$VARReposicaoLocalProdutoAtivo(obj)						= 1
			
		set $$$VARReposicaoLocalProdutoEstoquedeSeguranca(obj)			= $$GetDaysInMonths^VARReposicaoForm($$$VARReposicaoLocalProdutoESDias(obj))
		set $$$VARReposicaoLocalProdutoPontodeRessuprimento(obj)		= $$GetDaysInMonths^VARReposicaoForm($$$VARReposicaoLocalProdutoPRDias(obj))
		set $$$VARReposicaoLocalProdutoEstoqueMaximo(obj)			 	= $$GetDaysInMonths^VARReposicaoForm($$$VARReposicaoLocalProdutoEMDias(obj))
		
	
		if (..#DEBUG) {
			do ..print(..lineBreak_"key="_key_", obj="_obj)
		}
		else {
			set strStatus = $$$Save("VARReposicaoLocalProduto", key, obj, 1)
		}
		}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
]]></Implementation>
</Method>
</Class>
</Export>