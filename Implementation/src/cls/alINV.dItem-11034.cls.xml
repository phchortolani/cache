<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alINV.dItem">
<ClassType>persistent</ClassType>
<CompileAfter>alINV.dItemPolicy</CompileAfter>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>
<UDLText name="T">
<Content>
/*----------------------------------------------------------------------------------
;   History  
; 23-Aug-2011	SCR		SR17881: Changed MAXLEN on picture to 1000        
; 07-nov-2008	HQN		SR16124: SearchName no longer [required]
; 23-Sep-2008	GRF		SR15810: Add IsSerialNo
; 30-Jul-2008	Luke	SR15817: Add Units data, (unit policy, UnitOfMeasure Overides)
/--------------------------------------------------------------------------------*/
</Content>
</UDLText>

<UDLText name="T">
<Content>
/*----------------------------------------------------------------------------------
;   AtNet Manager Element Mappings
;-----------------------------------------------------------------------------------
; Number	V1 Description						Input Type               
;-----------------------------------------------------------------------------------
;	D1		Search Name						 6 - Text
;	D2		UPC Code						 6 - Text
;	D253	Internal Notes					 3 - Memo
;	D210	Description						 6 - Text
;	D54		Picture							10 - File Name
;	D44		Volume							12 - Floating
;	D43		Weight							 2 - Floating
;	D31		Revenue Account Inland			 6 - Text
/--------------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="ItemId">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00143"/>
</Property>


<Property name="Bundle">
<Type>alSOH.dBundle</Type>
<Calculated>1</Calculated>

<Parameter name="CAPTION" value="AL00138"/>
</Property>


<Property name="SearchName">
<Type>alSYS.dt.dtString</Type>

<Parameter name="CAPTION" value="AL00146"/>

<Parameter name="MAXLEN" value="1000"/>
</Property>


<Property name="UPCCode">
<Type>alSYS.dt.dtString</Type>

<Parameter name="CAPTION" value="AL00148"/>
</Property>


<Property name="InternalNotes">
<Type>alSYS.dt.dtString</Type>

<Parameter name="CAPTION" value="AL00140"/>

<Parameter name="MAXLEN" value="1000"/>
</Property>


<Property name="Description">
<Type>alSYS.dt.dtString</Type>

<Parameter name="CAPTION" value="AL00139"/>
</Property>


<Property name="ItemGroup">
<Type>alINV.dItemGroup</Type>

<Parameter name="CAPTION" value="AL00142"/>
</Property>


<Property name="Picture">
<Type>alSYS.dt.dtString</Type>

<Parameter name="CAPTION" value="AL00145"/>

<Parameter name="MAXLEN" value="1000"/>
</Property>


<Property name="SourceType">
<Type>alINV.dItemSourceType</Type>

<Parameter name="CAPTION" value="AL00147"/>
</Property>


<Property name="UnitPolicy">
<Type>dUnitPolicy</Type>

<Parameter name="CAPTION" value="AL00150"/>
</Property>


<Property name="Volume">
<Type>alSYS.dt.dtFloat</Type>

<Parameter name="CAPTION" value="AL00151"/>
</Property>


<Property name="Weight">
<Type>alSYS.dt.dtFloat</Type>

<Parameter name="CAPTION" value="AL00152"/>
</Property>


<Property name="UnitOfMeasure">
<Type>alSYS.dt.dtString</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {UnitOfMeasure}=##class(alINV.dUnitPolicy).%OpenId({UnitPolicy}).BaseUnit</SqlComputeCode>
<SqlComputed>1</SqlComputed>

<Parameter name="CAPTION" value="AL00149"/>
</Property>


<Property name="IsSerialNumber">
<Type>alSYS.dt.dtBoolean</Type>

<Parameter name="CAPTION" value="AL00141"/>
</Property>

<UDLText name="T">
<Content>
/*
 Property ItemNumber As %String [ Required ];

Property CatalogAllocation As %String;

/// TODO need this to be a swizzled psuedo object on  INPARA
///   can be a list, 
Property Category As %String;

/// TODO need this to be a swizzled psuedo object on  INPARA
Property DangerousGoodsCategory As %String;

/// TODO need this to be a swizzled psuedo object on  WWW0124
Property Department As %String;

/// possibly not needed as a check on DangerousGoodsCategory for null
/// would perform the same function 
Property HazardousMaterial As %Boolean;

Property InternalNotes As %String;

//Property ItemGroup As %String;

/// TODO need this to be a swizzled psuedo object on  INItemGroup
Property ItemGroup As alINV.dItemGroup;

/// TODO need this to be a swizzled psuedo object on  WWW101("ARTIKEL-ART")
Property ItemType As %String;

Property Picture As %String;

Property Remarks As %Stream;

Property SearchName As %String;

Property UPCCode As %String;

/// TODO need this tobe a swizzled psuedo object on  WWW101("EINHEIT")
Property UnitofMeasure As %String;

Property Volume As %Float;

Property Weight As %Float;

Property FinanceDetails As alINV.dItemFin;
*/
</Content>
</UDLText>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Property name="ItemPolicy">
<Type>alINV.dItemPolicy</Type>
<Cardinality>one</Cardinality>
<Inverse>InventoryItems</Inverse>
<Relationship>1</Relationship>

<Parameter name="CAPTION" value="AL00144"/>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="Index">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>ItemId</Properties>
<Unique>1</Unique>
</Index>

<Index name="ItemPolicyIndex">
<Properties>ItemPolicy</Properties>
</Index>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="UnitOfMeasureGet">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// SR15817: Over ride on the getter of the property 
	quit this.UnitPolicy.BaseUnit
]]></Implementation>
</Method>
<UDLText name="T">
<Content>
/*
/// This callback method is invoked by the &lt;METHOD&gt;%Open&lt;/METHOD&gt; method to 
/// provide notification that the object specified by &lt;VAR&gt;oid&lt;/VAR&gt; is being opened.
/// 
/// &lt;P&gt;If this method returns an error then the object will not be opened.
Method %OnOpen() As %Status [ Private ]
{
	;-------------------------------------------------------------------------------
	; 21-Oct-2008	HQN		SR16028: Removed setting of instance variable to default
	; 							ItemGroup. Stops subsequent saves from overwriting
	; 							the ItemGroup if it was set blank
	; 13-Oct-2008	Luke	SR16028: Created
	;-------------------------------------------------------------------------------

	set sc = $$$OK 
	;if %this.ItemGroup = $$$NULLOREF {
	;	set %this.ItemGroup = ##class(alINV.dItemGroup).GetDefaultItemGroup()
	;}
	
	quit sc
}
*/
</Content>
</UDLText>


<Method name="ItemGroupGet">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 22-Oct-2008	HQN		SR16060: Always return a valid OREF, it it hasn't been
	; 							swizzled, do it.
	; 21-Oct-2008	HQN		SR16028: Created
	;-------------------------------------------------------------------------------
	set objItemGroup = ""
	if (r%ItemGroup'="") {
		set objItemGroup = r%ItemGroup
		
	} elseif (i%ItemGroup'="") {
		set objItemGroup = ..ItemGroupGetSwizzled()
		
	} else {
		set objItemGroup = ##class(alINV.dItemGroup).GetDefaultItemGroup()
	}
	quit objItemGroup
]]></Implementation>
</Method>

<Method name="%OnDelete">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Delete</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being deleted.

<P>If this method returns an error then the object will not be deleted.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 07-Nov-2008	HQN		SR16124: Added UnitPolicy removal
	; 21-Oct-2008	GRF		SR16051: Delete dItemFin if dItem is deleted
	;-------------------------------------------------------------------------------
	set objItem = ##class(alINV.dItem).%Open(oid)
	set sc = ##class(alINV.dItemFin).%DeleteId(objItem.%Id())
	set sc = $$$ADDSC(##class(alINV.dUnitPolicy).%DeleteId(objItem.%Id()),sc)
	quit sc
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alINV.dItemD</DataLocation>
<DefaultData>dItemDefaultData</DefaultData>
<IdLocation>^alINV.dItemD</IdLocation>
<IndexLocation>^alINV.dItemI</IndexLocation>
<StreamLocation>^alINV.dItemS</StreamLocation>
<Data name="dItemDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Description</Value>
</Value>
<Value name="3">
<Value>InternalNotes</Value>
</Value>
<Value name="4">
<Value>ItemGroup</Value>
</Value>
<Value name="5">
<Value>ItemPolicy</Value>
</Value>
<Value name="6">
<Value>Picture</Value>
</Value>
<Value name="7">
<Value>SearchName</Value>
</Value>
<Value name="8">
<Value>SourceType</Value>
</Value>
<Value name="9">
<Value>UPCCode</Value>
</Value>
<Value name="10">
<Value>UnitPolicy</Value>
</Value>
<Value name="11">
<Value>Volume</Value>
</Value>
<Value name="12">
<Value>Weight</Value>
</Value>
<Value name="13">
<Value>IsSerialNumber</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>