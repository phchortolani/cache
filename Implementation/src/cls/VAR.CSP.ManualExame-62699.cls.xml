<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.ManualExame">
<ClassType/>
<IncludeCode>COMSYS,COMConst,VARConst,INConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>

<Parameter name="CONTENTTYPE">
<Default>application/json</Default>
</Parameter>

<Parameter name="CHARSET">
<Default>utf-8</Default>
</Parameter>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	#dim %request As %CSP.Request
	#dim %response As %CSP.Response
	Set Method 	= $Get(%request.Data("method",1))
	Xecute "do .."_Method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="GetStatusTela">
<ClassMethod>1</ClassMethod>
<FormalSpec>pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set flagBloqTela = 0
	Set rotina = "VARManualExame"
	Set objWWW013 = $Get(^WWW013(YM, pYBED, 1))
	Set perfil = $$$WWW013FREE7(objWWW013)
	If (perfil '= "" && ($Data(^VARPerfilModelo(YM, perfil, 1)))) {
		Set objPerfilModelo = $Get(^VARPerfilModelo(YM, perfil, 1))
		Set vCodPerfil = $$$VARPerfilModeloPerfisAplicados(objPerfilModelo)
		Set mult = 0
		If vCodPerfil'=""{
			For piece=1:1:$Length(vCodPerfil,";"){
				Set codPerfil = $Piece(vCodPerfil,";",piece)
				Set vCodPerfil(piece) = ";"_codPerfil_";"	
				Set mult=mult+1
			}
		}
		Set objRotina = $Get(^WWW120(0,rotina,1))
		Set nivelAcesso = ";"_$$$WWW120UserAccess(objRotina)_";"
		Set somenteLeitura = ";"_$$$WWW120ViewAccess(objRotina)_";"
		Set permissao=0
		Set contPerfil = ""
		For {
			Set contPerfil = $Order(vCodPerfil(contPerfil)) 
			Quit:contPerfil=""
			Set codPerfil = vCodPerfil(contPerfil)
			If ($Length(somenteLeitura,codPerfil) > 1){
				Set permissao=1
				Quit
			}ElseIf ($Length(nivelAcesso,codPerfil) > 1){
				Set permissao=2
				Quit
			}
		}
		if (permissao '= 2) {
			Set flagBloqTela = 1
		}
	}
	Return flagBloqTela]]></Implementation>
</Method>

<Method name="GetExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set statusTela 	= $Get(%request.Data("statusTela",1))
	Set codigo 			= $Get(%request.Data("codigo",1))
	Set take 				= $Get(%request.Data("take",1))
	Set skip 				= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set top = take
	If top<=0 Set top = 1
	Set contador = 0
	
	If (statusTela = 1) {
		Set SQL = "Select CodigoExame As ItemNumber, $$SQLGetDescricaoProduto^VARSQL(CodigoExame) As SearchName "
		Set SQL = SQL _ "From SQLUser.VARManualExame Where Company = 0 And  Situacao = 'A' "
		If codigo '= "" {
			Set SQL = SQL_" And CodigoExame = '"_codigo_"' "
		}Else{  
			If (searchValue '= "") {
				Set SQL = SQL_" And (%upper(CodigoExame) Like %Upper('%"_searchValue_"%') Or %Upper($$SQLGetDescricaoProduto^VARSQL(CodigoExame)) Like %Upper('%"_searchValue_"%'))"
			}
		}
		Set SQL = SQL _ "Group By CodigoExame "
	}Else{
		Set SQL = "Select Count(*) as totalCount, ItemNumber, SearchName From SQLUser.INART "
		Set SQL = SQL _ "Where Company = 0 And HoldReason In (2) "
		If codigo '= "" {
			Set SQL = SQL_" And ItemNumber = '"_codigo_"' "
		}Else{  
			If (searchValue '= "") {
				Set SQL = SQL_" And (%upper(ItemNumber) Like %Upper('%"_searchValue_"%') Or %Upper(SearchName) Like %Upper('%"_searchValue_"%'))"
			}
		}
	}
	Set meuSelect = "select * from ("_SQL_")"
	If (skip '= "") {
		Set meuSelect = meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	}
	Set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	Set array = []
	Set Total = 0
	While(rs.%Next()){
		Set linha = {}
		Set linha.Codigo = rs.%Get("ItemNumber")
		Set linha.Descricao = "("_rs.%Get("ItemNumber")_") " _ rs.%Get("SearchName")
		Do array.%Push(linha)
	}
	Write array.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetExecutor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set statusTela 	= $Get(%request.Data("statusTela",1))
	Set codExame		= $Get(%request.Data("codExame",1))
	If (statusTela = 1) {
		Set meuSelect = "Select Executor As Codigo From SQLUser.VARManualExame Where Company = 0 And  Situacao = 'A' "
		If (codExame '= "") {
			Set meuSelect = meuSelect _ "And CodigoExame = '"_codExame_"' "
		}
		Set meuSelect = meuSelect _ "Group By Executor "
	}Else{
		set meuSelect = "Select SearchWord As Codigo From SQLUser.VARPARA Where Company = 0 And "
		set meuSelect = meuSelect _ "Language1 = 'PT' And ParameterName = 'EXECUTOR'"
	}
	Set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	Set array = []
	Set Total = 0
	While(rs.%Next()){
		Set codigo = rs.%Get("Codigo")
		Set descricao = $$SQLGetUserParamDescVAR^VARSQL("EXECUTOR~"_codigo)
		Set linha = {}
		Set linha.Codigo = codigo
		Set linha.Descricao = descricao
		Do array.%Push(linha)
	}
	Write array.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 			= 0
	Set Y 			= "~"
	Set YBED 	 	= $Get(%request.Data("YBED",1))
	Set pDados 	= $Get(%request.Data("dados",1))
	Set oDados 	= [].%FromJSON(pDados)
	Try {
		Tstart
		Set objVARManualExame = $Get(^VARManualExame(YM, oDados.exame, oDados.executor, 1))
		Set $$$VARManualExamePreco(objVARManualExame) = oDados.preco
		Set $$$VARManualExameTempoResultado(objVARManualExame) = oDados.tempoResultado
		Set $$$VARManualExameSituacao(objVARManualExame) = oDados.situacao
		Set $$$VARManualExameDescricaoDieta(objVARManualExame) = oDados.descricaoDieta
		Set $$$VARManualExameDescricaoPaciente(objVARManualExame) = oDados.descricaoPaciente
		Set $$$VARManualExameDescricaoColeta(objVARManualExame) = oDados.descricaoColeta
		Set $$$VARManualExameDescricaoTecnica(objVARManualExame) = oDados.descricaoTecnica
		If ($$$VARManualExameCriadoEm(objVARManualExame) = "") {
			Set $$$VARManualExameCriadoEm(objVARManualExame) = $Horolog
			Set $$$VARManualExameCriadoPor(objVARManualExame) = YBED
		}Else{
			Set $$$VARManualExameAlteradoEm(objVARManualExame) = $Horolog
			Set $$$VARManualExameAlteradoPor(objVARManualExame) = YBED
		}
		Set strStatus = $$$Save("VARManualExame", oDados.exame_","_oDados.executor, objVARManualExame, 1)
	}
	Catch(exception){
		Trollback
		Set strStatus = exception.AsStatus()
	}
	Set retorno = {}
	If $$$ISERR(strStatus){
		If $tl Trollback
		Set retorno.status = 0
		Set retorno.mensagem = $Piece(strStatus," ",2,$Length(strStatus," "))
		Set retorno.tipo = "error"
	}Else{
		Tcommit
		Set retorno.status = 1
		Set retorno.mensagem = "Dados Salvos com Sucesso!"
		Set retorno.tipo = "success"
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="RecuperarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 					= 0
	Set Y 					= "~"
	Set codExame 	 	= $Get(%request.Data("codExame",1))
	Set codExecutor = $Get(%request.Data("codExecutor",1))

	Set listRetorno = {}
	Set objVARManualExame = $Get(^VARManualExame(YM, codExame, codExecutor, 1))
	Do listRetorno.%Set("preco", +$Fnumber($$$VARManualExamePreco(objVARManualExame),"",2))
	Set listRetorno.tempoResultado 		= $$$VARManualExameTempoResultado(objVARManualExame)
	Set listRetorno.situacao 					= $$$VARManualExameSituacao(objVARManualExame)
	Set listRetorno.descricaoDieta 		= $$$VARManualExameDescricaoDieta(objVARManualExame)
	Set listRetorno.descricaoPaciente = $$$VARManualExameDescricaoPaciente(objVARManualExame)
	Set listRetorno.descricaoColeta 	= $$$VARManualExameDescricaoColeta(objVARManualExame)
	Set listRetorno.descricaoTecnica 	= $$$VARManualExameDescricaoTecnica(objVARManualExame)
	If ($$$VARManualExameAlteradoEm(objVARManualExame) = "") {
		Set listRetorno.alteradoEm 			= $$$VARManualExameCriadoEm(objVARManualExame)
		If (listRetorno.alteradoEm'="") {
			Set listRetorno.alteradoEm		= $Zdatetime(listRetorno.alteradoEm,4,2) 
		}
	}Else{
		Set listRetorno.alteradoEm 			= $Zdatetime($$$VARManualExameAlteradoEm(objVARManualExame),4,2) 
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetSearch">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 					= 0
	Set Y 					= "~"

	Set meuSelect = "Select * From SQLUser.VARManualExame Where Company = 0 "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	Set array = []
	While(rSet.%Next()){
		Set listRetorno = {}
		Set listRetorno.codExame 					= rSet.%Get("CodigoExame")
		Set listRetorno.descExame 				= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("CodigoExame"))
		Set listRetorno.codExecutor 			= rSet.%Get("Executor")
		Set listRetorno.descExecutor			= $$SQLGetUserParamDescVAR^VARSQL("EXECUTOR~"_rSet.%Get("Executor"))
		Do listRetorno.%Set("preco", +$Fnumber(rSet.%Get("Preco"),"",2))
		Set listRetorno.tempoResultado 		= rSet.%Get("TempoResultado")
		Set listRetorno.situacao 					= $Select(rSet.%Get("Situacao")="A":"Ativo",1:"Inativo")
		Set listRetorno.descricaoDieta 		= rSet.%Get("DescricaoDieta")
		Set listRetorno.descricaoPaciente = rSet.%Get("DescricaoPaciente")
		Set listRetorno.descricaoColeta 	= rSet.%Get("DescricaoColeta")
		Set listRetorno.descricaoTecnica 	= rSet.%Get("DescricaoTecnica")
		If (rSet.%Get("AlteradoEm") = "") {
			Set listRetorno.alteradoEm			= $Zdatetime(rSet.%Get("CriadoEm"),4,2)
		}Else{
			Set listRetorno.alteradoEm 			= $Zdatetime(rSet.%Get("AlteradoEm"),4,2) 
		}
		Do array.%Push(listRetorno)
	}
	Write array.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvaExecutor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set YBED 	 		= $Get(%request.Data("YBED",1))
	Set pExecutor = $Get(%request.Data("executor",1))
	Try {
		Tstart
		Set id = $Order(^VARPARA(0,"EXECUTOR","PT",""),-1) + 1
		Set objVARPARA = ""
		Set $$$VARPARAText(objVARPARA) = $Zconvert(pExecutor,"U")
		Set strStatus = $$$Save("VARPARA", "EXECUTOR"_","_"PT"_","_id, objVARPARA, 1)
	}
	Catch(exception){
		Trollback
		Set strStatus = exception.AsStatus()
	}
	Set retorno = {}
	If $$$ISERR(strStatus){
		If $tl Trollback
		Set retorno.status = 0
		Set retorno.mensagem = $Piece(strStatus," ",2,$Length(strStatus," "))
		Set retorno.tipo = "error"
		Set retorno.id = ""
	}Else{
		Tcommit
		Set retorno.status = 1
		Set retorno.mensagem = "Dados Salvos com Sucesso!"
		Set retorno.tipo = "success"
		set retorno.id = id
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>