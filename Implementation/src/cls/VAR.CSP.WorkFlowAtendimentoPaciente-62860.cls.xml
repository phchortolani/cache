<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.WorkFlowAtendimentoPaciente">
<ClassType/>
<IncludeCode>VARConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	set job = %session.SessionId
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set top = take
	if top<=0 set top = 1
	set contador = 0
	set SQL = "Select VARCID.CodigodoCID, VARCID.DescricaoCompleta, VARCID.DescricaoResumida, VARCID.Categoria FROM VARWorkflowPEP inner join VARCID on VARCID.CodigodoCID = VARWorkflowPEP.CodigodoCID Where VARCID.Company=0 "
	if codigo '= "" set SQL = SQL_" and VARCID.CodigodoCID = '"_codigo_"' "
	e  if searchValue'="" set SQL = SQL_" and (%upper(VARCID.CodigodoCID) like %upper('%"_searchValue_"%') or %upper(VARCID.DescricaoCompleta) like %upper('%"_searchValue_"%'))"
	set SQL = SQL_" group by VARWorkflowPEP.CodigodoCID"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	set ^zzsilmar = meuSelect
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID=rs.%Get("CodigodoCID")
		set DescR=rs.%Get("DescricaoResumida")
		set Name=rs.%Get("DescricaoCompleta")
		if Name="" set Name = DescR
		set Categoria=rs.%Get("Categoria")
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		;
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		set linha.Categoria = descCat
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set achou = 0
	if codigo'=""{
		if $data(^VARWorkFlowCID(0,codigo,1)) set achou=1
	}
	set retorno = {}
	set retorno.achou = achou
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetTipos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set SQL = " SELECT SearchWord, Text FROM VARPARA where company = 0 and %upper(language1)='PT' and %upper(parametername)='WORKFLOWTIPOS' "
	set SQL = SQL_" order by Text"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID=rs.%Get("SearchWord")
		set Text=rs.%Get("Text")
		set linha = {}
		set linha.Codigo 	= ID
		set linha.Descricao = Text
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetValores">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set top = take
	if top<=0 set top = 1
	set contador = 0
	set SQL = " SELECT SearchWord, Text FROM VARPARA where company = 0 and %upper(language1)='PT' and %upper(parametername)='WORKFLOWVALORES' "
	if codigo '= "" set SQL = SQL_" and SearchWord = '"_codigo_"' "
	e  if searchValue'="" set SQL = SQL_" and %upper(Text) like %upper('%"_searchValue_"%')"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID=rs.%Get("SearchWord")
		set Text=rs.%Get("Text")
		set linha = {}
		set linha.Codigo 	= ID
		set linha.Descricao = Text
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetWorkFlows">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set sequencia 	= $get(%request.Data("sequencia",1))
	set numerico	= $get(%request.Data("numerico",1))
	;
	set contador = 0
	if sequencia'=""{
		set SQL = "Select * FROM VARWorkFlowPEPPaciente where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Sequencia) = '"_sequencia_"'"
	}else{
		set SQL = "Select * FROM VARWorkFlowPEPPaciente "
		set SQL = SQL_" where company = 0 and %upper(CodigodoCID)='"_cid_"' "
		if numerico'="" {
			set SQL = SQL_" and TipodeWorkflow in (3,6,12) "
		}
		set SQL = SQL_" order by SequenciadeExibicao,Sequencia"
	}
	;
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set ^zzsilmar($now()) = SQL_"|"_sequencia
	set array = []
	set Total = 0
	while(rs.%Next()){
		set Sequencia		= rs.%Get("Sequencia")
		set Nome			= rs.%Get("Nome")
		set Predecessor		= rs.%Get("Predecessor")
		set SequenciadeExibicao= rs.%Get("SequenciadeExibicao")
		set TipodeWorkflow	= rs.%Get("TipodeWorkflow")
		set MenorPermitido	= rs.%Get("NumericoMenor")
		set MaiorPermitido	= rs.%Get("NumericoMaior")
		set CasasDecimais	= rs.%Get("NumericoCasasDecimais")
		set ComposicaoExames= rs.%Get("ComposicaoValoresExames")
		set AlertaResultadoMenorQue = rs.%Get("AlertaResultadoMenorQue")
		set AlertaResultadoMaiorQue = rs.%Get("AlertaResultadoMaiorQue")
		set TextoAlturadoCampo = rs.%Get("TextoAlturadoCampo")
		set TextoMaximodeCaracteres = rs.%Get("TextoMaximodeCaracteres")
		set ExamesUnidadedeExibicao = rs.%Get("ExamesUnidadedeExibicao")
		set Opcoes = rs.%Get("Opcoes")
		set PermitirSelecionarMaisQue = rs.%Get("PermitirSelecionarMaisQue")
		set grupo = rs.%Get("GrupodeExibicaonaTela")
		set RotulodosCamposTexto = rs.%Get("RotulodosCamposTexto")
		set ValidacaoComparador = rs.%Get("ValidacaoComparador")
		set ValidacaoTipodeReferenci = rs.%Get("ValidacaoTipodeReferenci")
		set ValidacaoValordeReferenc = rs.%Get("ValidacaoValordeReferenc")
		set ValidacaoLegenda = rs.%Get("ValidacaoLegenda")
		set OpcaodoPrecedessor = rs.%Get("OpcaodoPrecedessor")
		set RespostaPadrao = rs.%Get("RespostaPadrao")
		set Icone = rs.%Get("Icone")
		;
		set PredecessorTree = Predecessor
		set linha = {}
		set linha.Codigo = Sequencia
		set linha.Descricao = "("_Sequencia_") "_Nome
		set:PredecessorTree'="" linha.categoryId = PredecessorTree
		;
		if TipodeWorkflow=5||(TipodeWorkflow=12){
			set NomeExame = ""
			for i=1:1:$length(Nome,";"){
				if $piece(Nome,";",i)="" continue
				if NomeExame'="" set NomeExame = NomeExame_"/"
				set objExames = $get(^VARExames(0,$piece(Nome,";",i),1))
				set descExame = $$$VARExamesDescricaodoExame(objExames)
				set NomeExame = NomeExame_descExame
			}
			set NomeExame = "Exames: "_NomeExame
			set linha.Descricao = "("_Sequencia_") "_NomeExame
		}
		if TipodeWorkflow=7{
			set codImagem = $piece(Nome,";",1)
			set codArea = $piece(Nome,";",2)
			set descImagem = $piece($get(^VARWorkFlowImagens(0,codImagem,1)),"~",1)
			set descArea = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			set linha.Descricao = "("_Sequencia_") "_descImagem_" - "_descArea
		}
		;
		set dxForm = {}
		set dxForm.id = Sequencia
		set dxForm.predecessor = Predecessor
		if OpcaodoPrecedessor'="" set dxForm.predecessor = Predecessor_";"_OpcaodoPrecedessor
		set dxForm.sequ = SequenciadeExibicao
		set dxForm.tipo = TipodeWorkflow
		if TipodeWorkflow=5||(TipodeWorkflow=12){
			set exame=[]
			for i=1:1:$length(Nome,";"){
				if $piece(Nome,";",i)="" continue
				do exame.%Push($piece(Nome,";",i))
			}
			set dxForm.exame = exame
		}elseif TipodeWorkflow=7{
			set dxForm.imagem = $piece(Nome,";",1)
			set dxForm.imagemArea = $piece(Nome,";",2)
		}else{
			set dxForm.nome = Nome
		}
		set dxForm.menorPermitido	= MenorPermitido
		set dxForm.maiorPermitido	= MaiorPermitido
		set dxForm.casasDecimais	= CasasDecimais
		set dxForm.ResultadoMenorQue = AlertaResultadoMenorQue
		set dxForm.ResultadoMaiorQue = AlertaResultadoMaiorQue
		set dxForm.composicao		= ComposicaoExames
		set dxForm.maximoDeCaracteres = TextoMaximodeCaracteres
		set dxForm.alturaDoCampo = TextoAlturadoCampo
		set dxForm.unidadeExibicao = ExamesUnidadedeExibicao
		set dxForm.permiteSelecionarMaisQueUm = PermitirSelecionarMaisQue
		set dxForm.opcoes = Opcoes
		set dxForm.grupo = grupo
		set dxForm.rotuloText = RotulodosCamposTexto
		set dxForm.valorCondicao = ValidacaoComparador
		set dxForm.tipoReferencia = ValidacaoTipodeReferenci
		set dxForm.legendaCondicao = ValidacaoLegenda
		set dxForm.respPadrao = RespostaPadrao
		set dxForm.icone = Icone
		if ValidacaoTipodeReferenci=1{
			set dxForm.numericoReferencia = ValidacaoValordeReferenc
		}else{
			set camposRef=[]
			for i=1:1:$length(ValidacaoValordeReferenc,";"){
				if $piece(ValidacaoValordeReferenc,";",i)="" continue
				do camposRef.%Push($piece(ValidacaoValordeReferenc,";",i))
			}
			set dxForm.camposReferencia = camposRef
		}
		;
		set linha.dxForm = dxForm
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetWorkFlowsCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set nseq 	= $get(%request.Data("nseq",1))
	set SQL = "Select * FROM VARWorkFlowPEPPaciente "
	set SQL = SQL_" where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	set SQL = SQL_" and TipodeWorkFlow in (2,3,11,5,12,9)"
	set SQL = SQL_" order by SequenciadeExibicao,Sequencia"
	;
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set Sequencia		= rs.%Get("Sequencia")
		set Nome			= rs.%Get("Nome")
		set TipodeWorkflow	= rs.%Get("TipodeWorkflow")
		set Predecessor		= rs.%Get("Predecessor")
		set Opcoes			= rs.%Get("Opcoes")
		set ComposicaoValoresExames = rs.%Get("ComposicaoValoresExames")
		set OpcaodoPrecedessor = rs.%Get("OpcaodoPrecedessor")
		;
		if Predecessor'=""{
			if OpcaodoPrecedessor'="" set Predecessor = Predecessor_";"_OpcaodoPrecedessor
		}
		if Opcoes'=""{
			set tituloCompleto = ..recTituloCompleto(cid,Sequencia)
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set linha = {}
				set linha.codigo = Sequencia_";"_+cont
				set linha.descricao = tituloCompleto_" - "_valorSub
				set:Predecessor'="" linha.categoryId = Predecessor
				set linha.TipodeWorkflow = TipodeWorkflow
				do array.%Push(linha)
			}
			continue
		}
		if ComposicaoValoresExames=9{
			set tituloCompleto = ..recTituloCompleto(cid,Sequencia)
			for cont=1,0,2{
				set valorSub = $select(cont=1:"Mutado",cont=2:"Não Mutado",1:"Não Fez o Teste")
				if valorSub="" continue
				set linha = {}
				set linha.codigo = Sequencia_";"_+cont
				set linha.descricao = tituloCompleto_" - "_valorSub
				set:Predecessor'="" linha.categoryId = Predecessor
				set linha.TipodeWorkflow = TipodeWorkflow
				do array.%Push(linha)
			}
			continue			
		}
		set linha = {}
		set linha.codigo = Sequencia
		set tituloCompleto = ..recTituloCompleto(cid,Sequencia)
		set linha.descricao = tituloCompleto
		set:Predecessor'="" linha.categoryId = Predecessor
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recSugestoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set array=[]
	set codTrat = ""
	for {
		set codTrat = $order(^VARWorkFlowTerapia(YM,cid,codTrat)) quit:codTrat=""
		set obj = $get(^VARPARA(YM,"TIPODETRATAMENTOPEP",SPRACHE,codTrat,1))
		set tratamento = $$$VARPARAText(obj)
		set codCate = ""
		for {
			set codCate = $order(^VARWorkFlowTerapia(YM,cid,codTrat,codCate)) quit:codCate=""
			set obj = $get(^VARWorkFlowTerapia(YM,cid,codTrat,codCate,1))
			set descricao = $$$VARWorkFlowTerapiaDescricaodaTerapia(obj)
			set linha = {}
			set linha.chave = codTrat_";"_codCate
			set linha.tratamento = tratamento
			set linha.descricao = codCate_" - "_descricao
			do array.%Push(linha)
			
		}
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recTerapiaCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set codTrat	= $get(%request.Data("codTrat",1))
	set codCate	= $get(%request.Data("codCate",1))
	set array=[]
	set cond = ""
	for {
		set cond = $order(^VARWorkFlowTerapiaCondicoes(YM,cid,codTrat,codCate,cond)) quit:cond=""
		set linha = {}
		set linha.chave = codTrat_";"_codCate_";"_cond
		set linha.condicao = cond
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recTerapiaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set codTrat	= $get(%request.Data("codTrat",1))
	set codCate	= $get(%request.Data("codCate",1))
	set array=[]
	set tera = ""
	for {
		set tera = $order(^VARWorkFlowTerapiaMedicacao(YM,cid,codTrat,codCate,tera)) quit:tera=""
		set obj = $get(^VARWorkFlowTerapiaMedicacao(YM,cid,codTrat,codCate,tera,1))
		set descricao = $$$VARWorkFlowTerapiaMedicacaoDescricaodoTratamento(obj)
		set regime = $$$VARWorkFlowTerapiaMedicacaoRegimeTerapeutico(obj)
		set obj = $get(^VARPARA(YM,"REGIMETERAPEUTICO",SPRACHE,regime,1))
		set regime = $$$VARPARAText(obj)
		set linha = {}
		set linha.chave = codTrat_";"_codCate_";"_tera
		set linha.sugestao = descricao
		set linha.regime = regime
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recLinhasTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set array = []
	set query = "Select * from VARPARA where ParameterName = 'TIPODETRATAMENTOPEP' and Language1 = '"_SPRACHE_"' order by SearchWord"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set linha={}
		set linha.Codigo = rs.%Get("SearchWord")
		set linha.Descricao = "("_linha.Codigo_") "_rs.%Get("Text")
		do array.%Push(linha)
	}
	write array.%ToJSON()]]></Implementation>
</Method>

<Method name="getSugestao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set chave	= $get(%request.Data("chave",1))
	set retorno	= {}
	set retorno.codCate = "+"
	if chave'=""{
		set codTrat = $piece(chave,";",1)
		set codCate = $piece(chave,";",2)
		set obj = $get(^VARWorkFlowTerapia(YM,cid,codTrat,codCate,1))
		set descricao = $$$VARWorkFlowTerapiaDescricaodaTerapia(obj)
		set retorno.codTrat = codTrat
		set retorno.codCate = codCate
		set retorno.descricao = descricao
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetEstadiamentosCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set array=[]
	set codEst = ""
	for {
		set codEst = $order(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst)) quit:codEst=""
		set estadiamento = $piece($get(^VARWorkFlowEstadiamento(YM,cid,codEst,1)),"~",1)
		set codEstagio = ""
		for {
			set codEstagio = $order(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst,codEstagio)) quit:codEstagio=""
			set estagio = $piece($get(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst,codEstagio,1)),"~",1)
			set linha = {}
			set linha.codigo = codEst_";"_codEstagio
			set linha.descricao = estadiamento_" - "_estagio
			do array.%Push(linha)
			
		}
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetPacientesCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set array=[]
	set linha = {}
	set linha.codigo = 1
	set linha.descricao = "Idade"
	do array.%Push(linha)
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetPontuadores">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set codEst	= $get(%request.Data("codEstadiamento",1))
	set array=[]
	set pontuacao = ""
	for {
		set pontuacao = $order(^VARWorkFlowEstPont(YM,cid,codEst,pontuacao)) quit:pontuacao=""
		set desc = $piece(^(pontuacao,1),"~",1)
		set linha = {}
		set linha.codigo = pontuacao
		set linha.descricao = desc
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetPredecessor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set idAtual = $get(%request.Data("idAtual",1))
	set codigo 	= $get(%request.Data("codigo",1))
	set contador = 0
	
	set SQL = " SELECT Sequencia, Nome,TipodeWorkflow,Opcoes,Predecessor,OpcaodoPrecedessor FROM VARWorkFlowPEPPaciente where company = 0 and %upper(CodigodoCID)='"_cid_"' and (TipodeWorkflow in (1,2,7,8,9,10,11,15,18,19,21) or (TipodeWorkflow in (5,12) and ComposicaoValoresExames=3))"
	;if idAtual '="" set SQL = SQL_" and Sequencia <> '"_idAtual_"' "
	set SQL = SQL_" order by SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set Sequencia=rs.%Get("Sequencia")
		set Nome=rs.%Get("Nome")
		set TipodeWorkflow=rs.%Get("TipodeWorkflow")
		set Opcoes = rs.%Get("Opcoes")
		set Predecessor = rs.%Get("Predecessor")
		set OpcaodoPrecedessor = rs.%Get("OpcaodoPrecedessor")
		if Predecessor'=""{
			if OpcaodoPrecedessor'="" set Predecessor = Predecessor_";"_OpcaodoPrecedessor
		}
		if TipodeWorkflow=5||(TipodeWorkflow=12){
			set NomeExame = ""
			for i=1:1:$length(Nome,";"){
				if $piece(Nome,";",i)="" continue
				if NomeExame'="" set NomeExame = NomeExame_"/"
				set objExames = $get(^VARExames(0,$piece(Nome,";",i),1))
				set descExame = $$$VARExamesDescricaodoExame(objExames)
				set NomeExame = NomeExame_descExame
			}
			;
			set linha = {}
			set linha.Codigo = Sequencia_";1"
			set linha.Descricao = "("_Sequencia_") "_NomeExame_" - Positivo"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)
			;
			set linha = {}
			set linha.Codigo = Sequencia_";0"
			set linha.Descricao = "("_Sequencia_") "_NomeExame_" - Negativo"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)
			continue
		}

		if TipodeWorkflow=2||(TipodeWorkflow=11)||(TipodeWorkflow=21){
			set linha = {}
			set linha.Codigo = Sequencia_";1"
			set linha.Descricao = "("_Sequencia_") "_Nome_" - Sim"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)
			;			
			set linha = {}
			set linha.Codigo = Sequencia_";0"
			set linha.Descricao = "("_Sequencia_") "_Nome_" - Não"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)

			continue
		}
		if TipodeWorkflow=9{
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set linha = {}
				set linha.Codigo = Sequencia_";"_+cont
				set linha.Descricao = "("_Sequencia_") "_Nome_" - "_valorSub
				set linha.TipodeWorkflow = TipodeWorkflow
				set:Predecessor'="" linha.categoryId = Predecessor
				do array.%Push(linha)
			}
			continue
		}

		set linha = {}
		set linha.Codigo = Sequencia
		set linha.Descricao = "("_Sequencia_") "_Nome
		set linha.TipodeWorkflow = TipodeWorkflow
		set:Predecessor'="" linha.categoryId = Predecessor
		;
		;
		if TipodeWorkflow=7{
			set codImagem = $piece(Nome,";",1)
			set codArea = $piece(Nome,";",2)
			set descImagem = $piece($get(^VARWorkFlowImagens(0,codImagem,1)),"~",1)
			set descArea = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			set linha.Descricao = "("_Sequencia_") "_descImagem_" - "_descArea
		}
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set formulario = $get(%request.Data("formulario",1))
	set geral = $get(%request.Data("geral",1))
	set formObj = [].%FromJSON(formulario)
	set geralObj = [].%FromJSON(geral)
	try {
		tstart
		if $isObject(geralObj.predecessor){
			if geralObj.predecessor.%Size()>0{
				set predecessor = geralObj.predecessor.%Pop()
			}
			set geralObj.predecessor = predecessor
			
		}
		set cid 			= formObj.diagnostico
		set idSeq 			= geralObj.id
		set nome 			= geralObj.nome
		set predecessor		= geralObj.predecessor
		set tipo			= geralObj.tipo
		set sequ			= geralObj.sequ
		set menorPermitido	= geralObj.menorPermitido
		set maiorPermitido	= geralObj.maiorPermitido
		set casasDecimais	= geralObj.casasDecimais
		set imagem			= geralObj.imagem
		set imagemArea		= geralObj.imagemArea
		set alertMenor		= geralObj.ResultadoMenorQue
		set alertMaior		= geralObj.ResultadoMaiorQue
		set composicaoExame = geralObj.composicao
		set maximoDeCaracteres = geralObj.maximoDeCaracteres
		set alturaDoCampo = geralObj.alturaDoCampo
		set unidadeExibicao = geralObj.unidadeExibicao
		set opcoes = geralObj.opcoes
		set permiteSelecionarMaisQueUm = geralObj.permiteSelecionarMaisQueUm
		set grupo = geralObj.grupo
		set rotuloText = geralObj.rotuloText
		set valorCondicao = geralObj.valorCondicao
		set tipoReferencia = geralObj.tipoReferencia
		set numericoReferencia = geralObj.numericoReferencia
		set camposReferencia = geralObj.camposReferencia
		set legendaCondicao = geralObj.legendaCondicao
		set respPadrao = geralObj.respPadrao
		set icone = geralObj.icone
		;
		if idSeq="" {
			set idSeq = $order(^VARWorkFlowPEPPaciente(YM,cid,""),-1)+1
		}
		if sequ="" set sequ = idSeq*10
		set objVARWorkFlowPEP = $get(^VARWorkFlowPEPPaciente(YM,cid,idSeq,1))
		// Se não for tipo Exame , limpa a composição
		if tipo'=5,tipo'=12 {
			set composicaoExame = ""
		}
		set $$$VARWorkFlowPEPPacienteIcone(objVARWorkFlowPEP) = icone
		if tipo=1||(tipo=15)||(tipo=18){
			set $$$VARWorkFlowPEPPacienteIcone(objVARWorkFlowPEP) = icone
		}
		//
		// Para campos númericos
		// Tipo 3 - Numerico
		// Composicao 1 - Numerico
		if (tipo=3||(composicaoExame=1)||(composicaoExame=2)){
			set $$$VARWorkFlowPEPPacienteNumericoMenor(objVARWorkFlowPEP) = menorPermitido
			set $$$VARWorkFlowPEPPacienteNumericoMaior(objVARWorkFlowPEP) = maiorPermitido
			set $$$VARWorkFlowPEPPacienteNumericoCasasDecimais(objVARWorkFlowPEP) = casasDecimais
			set $$$VARWorkFlowPEPPacienteAlertaResultadoMenorQue(objVARWorkFlowPEP) = alertMenor
			set $$$VARWorkFlowPEPPacienteAlertaResultadoMaiorQue(objVARWorkFlowPEP) = alertMaior
		}else{
			set $$$VARWorkFlowPEPPacienteNumericoMenor(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPPacienteNumericoMaior(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPPacienteNumericoCasasDecimais(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPPacienteAlertaResultadoMenorQue(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPPacienteAlertaResultadoMaiorQue(objVARWorkFlowPEP) = ""
		}
		// Tipo 11 - Sim/Não
		if (tipo=11){
			set $$$VARWorkFlowPEPPacienteRespostaPadrao(objVARWorkFlowPEP) = respPadrao
		}else{
			set $$$VARWorkFlowPEPPacienteRespostaPadrao(objVARWorkFlowPEP) = ""
		
		}
		// Tipo 4 - Texto
		if (tipo=4){
			set $$$VARWorkFlowPEPPacienteTextoAlturadoCampo(objVARWorkFlowPEP) = alturaDoCampo
			set $$$VARWorkFlowPEPPacienteTextoMaximodeCaracteres(objVARWorkFlowPEP) = maximoDeCaracteres
		}else{
			set $$$VARWorkFlowPEPPacienteTextoAlturadoCampo(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPPacienteTextoMaximodeCaracteres(objVARWorkFlowPEP) = ""
		}
		set $$$VARWorkFlowPEPPacienteTipodeWorkflow(objVARWorkFlowPEP) = tipo
		set $$$VARWorkFlowPEPPacientePredecessor(objVARWorkFlowPEP) = $piece(predecessor,";",1)
		set $$$VARWorkFlowPEPPacienteOpcaodoPrecedessor(objVARWorkFlowPEP) = $piece(predecessor,";",2)
		set $$$VARWorkFlowPEPPacienteSequenciadeExibicao(objVARWorkFlowPEP) = sequ
		set $$$VARWorkFlowPEPPacienteGrupodeExibicaonaTela(objVARWorkFlowPEP) = grupo
		set $$$VARWorkFlowPEPPacienteNome(objVARWorkFlowPEP) = nome
		set $$$VARWorkFlowPEPPacienteRotulodosCamposTexto(objVARWorkFlowPEP) = rotuloText
		set $$$VARWorkFlowPEPPacienteComposicaoValoresExames(objVARWorkFlowPEP) = ""
		set $$$VARWorkFlowPEPPacienteExamesUnidadedeExibicao(objVARWorkFlowPEP) = unidadeExibicao
		;
		set $$$VARWorkFlowPEPPacienteValidacaoComparador(objVARWorkFlowPEP) = ""
		set $$$VARWorkFlowPEPPacienteValidacaoTipodeReferenci(objVARWorkFlowPEP) = ""
		set $$$VARWorkFlowPEPPacienteValidacaoValordeReferenc(objVARWorkFlowPEP) = ""
		set $$$VARWorkFlowPEPPacienteValidacaoLegenda(objVARWorkFlowPEP) = ""
		// 7 - Mapeamento de Imagem
		if (tipo=7){
			set $$$VARWorkFlowPEPPacienteNome(objVARWorkFlowPEP) = imagem_";"_imagemArea
		}			
		//
		set campoRef = numericoReferencia
		if tipoReferencia="2"{	
			set campoRef = ""		
			if camposReferencia'=""{
				if camposReferencia.%Size()>0{
					for {
						set valores = camposReferencia.%Pop()
						quit:valores=""
						set:campoRef'="" campoRef=campoRef_";"
						set campoRef=campoRef_valores
					}
				}
			}
		}
		
		// 5 e 12 - Tipo Exames
		if (tipo=5||(tipo=12)){ 
			set exame = ""
			if geralObj.exame'=""{
				if geralObj.exame.%Size()>0{
					for {
						set valores = geralObj.exame.%Pop()
						quit:valores=""
						set:exame'="" exame=exame_";"
						set exame=exame_valores
					}
				}
			}
			set $$$VARWorkFlowPEPPacienteNome(objVARWorkFlowPEP) = exame
			set $$$VARWorkFlowPEPPacienteComposicaoValoresExames(objVARWorkFlowPEP) = composicaoExame
			;
			set $$$VARWorkFlowPEPPacienteValidacaoComparador(objVARWorkFlowPEP) = valorCondicao
			set $$$VARWorkFlowPEPPacienteValidacaoTipodeReferenci(objVARWorkFlowPEP) = tipoReferencia
			set $$$VARWorkFlowPEPPacienteValidacaoValordeReferenc(objVARWorkFlowPEP) = campoRef
			set $$$VARWorkFlowPEPPacienteValidacaoLegenda(objVARWorkFlowPEP) = legendaCondicao
		}
		
		// Tipo 9 - Lista de Opções
		if (tipo=9){
			set $$$VARWorkFlowPEPPacienteOpcoes(objVARWorkFlowPEP) = opcoes
			set $$$VARWorkFlowPEPPacientePermitirSelecionarMaisQue(objVARWorkFlowPEP) = permiteSelecionarMaisQueUm
		}else{
			set $$$VARWorkFlowPEPPacienteOpcoes(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPPacientePermitirSelecionarMaisQue(objVARWorkFlowPEP) = ""
		}
		set ret = $$$Save("VARWorkFlowPEPPaciente",cid_","_idSeq,objVARWorkFlowPEP,1)
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid = $get(%request.Data("cid",1))
	set id = $get(%request.Data("id",1))
	try {
		tstart
		set ret = $$$Kill("VARWorkFlowPEPPaciente",cid_","_id)
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Removidos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	;
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set top = take+skip
	if top<=0 set top = 200
	set contador=0
	if codigo'=""{
		set meuSelect= "select CodigodoExame,DescricaodoExame,Unidade from VARExames where company=0  and CodigodoExame='"_codigo_"'"
	}else{
		set SQL  = "select top "_(top)_" CodigodoExame,DescricaodoExame,Unidade from VARExames where company=0 "
		if tipo'=""{
			set SQL = SQL_" and TipodoExame='"_tipo_"'"
		}
		if searchValue'="" {
			set SQL = SQL_" and (%upper(CodigodoExame) like %upper('%"_searchValue_"%') or %upper(DescricaodoExame) like %upper('%"_searchValue_"%')) "
		}
		if wherefilter'=""{
			set SQL = SQL_" and ("_wherefilter_")"
		}
		set SQL = SQL_" order by DescricaodoExame "
		;
		set meuSelect = "select * from ("_SQL_")"
		if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	}
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set exame = rsLinha.%Get("CodigodoExame")
		set descr = rsLinha.%Get("DescricaodoExame")
		set unid = rsLinha.%Get("Unidade")
		set linha = {}
		set linha.CodigodoExame = exame
		set linha.Descricao = descr_$select(unid="":"",1:" ("_unid_")")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetImagens">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	if codigo'="" {
		set SQL = " SELECT CodigodaImagem, DescricaodaImagem FROM VARWorkFlowImagens where company = 0 and CodigodaImagem = '"_codigo_"'"
	}else{
		set SQL  = " SELECT CodigodaImagem, DescricaodaImagem FROM VARWorkFlowImagens where company = 0 "
	}
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("CodigodaImagem")
		set descr = rsLinha.%Get("DescricaodaImagem")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = "("_codigo_") "_descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetImagemArea">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo 		= $get(%request.Data("tipo",1))
	set codImagem 	= $get(%request.Data("codImagem",1))
	set codigo 		= $get(%request.Data("codigo",1))
	;
	if codigo'="" {
		set SQL = "select CodigodoMapeamento,descricao from VARWorkFlowImagensDetalhes where company = 0 and %upper(CoddaImagem) = '"_codImagem_"' and CodigodoMapeamento = '"_codigo_"'"
	}else{
		set SQL  = "select CodigodoMapeamento,descricao from VARWorkFlowImagensDetalhes where company = 0 and %upper(CoddaImagem) = '"_codImagem_"'"
		set SQL = SQL_" order by descricao "
	}
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("CodigodoMapeamento")
		set descr = rsLinha.%Get("descricao")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getEstadiamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 		= $get(%request.Data("cid",1))
	set codigo 		= $get(%request.Data("codigo",1))
	;
	set retorno = []
	set codEsta = ""
	for {
		set codEsta = $order(^mtemp.VARWorkFlowEstadiamento(job,codEsta)) quit:codEsta=""
		set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEsta))
		if $piece(obj,"^",2)=1 continue
		set obj = $piece(obj,"^",1)
		set descr = $piece(obj,"~",1)
		if codigo'="",codEsta'=codigo continue
		set linha = {}
		set linha.Codigo = +codEsta
		set linha.Descricao = "("_codEsta_") "_descr
		set linha.Descricao2 = descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="getEstagio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set retorno = {}
	if codEstagio'=""{
		set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio))
		set descricao = $piece(obj,"~",1)
		set risco = $piece(obj,"~",2)
		set retorno.codEstagio = codEstagio
		set retorno.nomeEstagio = descricao
		set retorno.risco = risco

	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getPontuacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	w 1
	quit]]></Implementation>
</Method>

<Method name="recuperaPontuacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set dados = []
	if codEstadiamento'=""{
		set codPontuacao = ""
		for {
			set codPontuacao = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao)) quit:codPontuacao=""
			set obj = $get(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			set descricao = $piece(obj,"~",1)
			set pontos = $piece(obj,"~",2)
			set linha = {}
			set linha.codPontuacao = codPontuacao
			set linha.nomePontuacao = descricao
			set linha.pontuacao = pontos
			set form = {}
			set form.codPontuacao = linha.codigo
			set form.nomePontuacao = linha.estagio
			set form.pontuacao = linha.pontos
			set linha.form = form
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaPontuacaoCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set codPontuacaoCondicao = $get(%request.Data("codPontuacaoCondicao",1))
	set dados = []
	if codPontuacaoCondicao'=""{
		set sequ = ""
		for {
			set sequ = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codPontuacaoCondicao,sequ)) quit:sequ=""
			set obj = $get(^(sequ))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			;
			set linha = {}
			set linha.nseq = sequ
			set linha.comparador = $piece(obj,"~",2)
			set linha.valor = $piece(obj,"~",3)
			set linha.tipo= $piece(obj,"~",4)
			set form = {}
			set form.codCondicao = codPontuacao
			set form.nseq = linha.nseq
			set form.comparador = linha.comparador
			set form.valor = linha.valor
			set form.tipo = +linha.tipo
			;
			set campos = $piece(obj,"~",1)
			set campo = []
			set tituloCompleto=""
			for i=1:1:$length(campos,"|"){
				set valor = $piece(campos,"|",i)
				if valor="" continue
				do campo.%Push(valor)
				;
				if tituloCompleto'="" set tituloCompleto = tituloCompleto_" + "
				set tituloCompleto = tituloCompleto_..recTituloCompleto(cid,valor)
			}
			set linha.campo = tituloCompleto
			set form.campo = campo
			;
			set linha.form = form
			do dados.%Push(linha)
			;
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaEstagios">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set dados = []
	if codEstadiamento'=""{
		set codEstagio = ""
		for {
			set codEstagio = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio)) quit:codEstagio=""
			set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			set descricao = $piece(obj,"~",1)
			set linha = {}
			set linha.codigo = codEstagio
			set linha.estagio = descricao
			set linha.condicoes = ""
			set form = {}
			set form.codigo = linha.codigo
			set form.descricao = linha.estagio
			set linha.form = form
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removePontuacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento	= $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set $piece(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="removeEstagio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento	= $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set $piece(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="recuperaEstadiamentoCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set dados = []
	if codEstagio'=""{
		set codCondicao = ""
		for {
			set codCondicao = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao)) quit:codCondicao=""
			set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao))
			if $piece(obj,"^",2)=1 continue
			set linha = {}
			set linha.codCondicao = codCondicao
			set condicao = ""
			set sequ = ""
			for {
				set sequ = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,sequ)) quit:sequ=""
				set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,sequ))
				if $piece(obj,"^",2)=1 continue
				set obj = $piece(obj,"^",1)
				set campos = $piece(obj,"~",1)
				set comparador = $piece(obj,"~",2)
				set valorC = $piece(obj,"~",3)
				;
				set tituloCompleto=""
				for i=1:1:$length(campos,"|"){
					set valor = $piece(campos,"|",i)
					if valor="" continue
					if tituloCompleto'="" set tituloCompleto = tituloCompleto_" + "
					set tituloCompleto = tituloCompleto_..recTituloCompleto(cid,valor)
				}
				if condicao'="" set condicao = condicao_" e "
				set condicao = condicao_"("""_tituloCompleto_""" "_comparador_" "_valorC_")"

			}
			set linha.condicao = condicao
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeEstadiamentoCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
    set $piece(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="recuperaEstadiamentoAddCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set dados = []
	if codCondicao'=""{
		set sequ = ""
		for {
			set sequ = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,sequ)) quit:sequ=""
			set obj = $get(^(sequ))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			;
			set linha = {}
			set linha.nseq = sequ
			set linha.comparador = $piece(obj,"~",2)
			set linha.valor = $piece(obj,"~",3)
			set linha.legenda = $piece(obj,"~",4)
			set linha.tipo = +$piece(obj,"~",5)
			set form = {}
			set form.codCondicao = codCondicao
			set form.nseq = linha.nseq
			set form.comparador = linha.comparador
			set form.valor = linha.valor
			set form.legenda = linha.legenda
			set form.tipo = linha.tipo
			;
			set campos = $piece(obj,"~",1)
			set campo = []
			set tituloCompleto=""
			for i=1:1:$length(campos,"|"){
				set valor = $piece(campos,"|",i)
				if valor="" continue
				do campo.%Push(valor)
				;
				if tituloCompleto'="" set tituloCompleto = tituloCompleto_" + "
				set tituloCompleto = tituloCompleto_..recTituloCompleto(cid,valor)
			}
			set linha.campo = tituloCompleto
			set form.campo = campo
			;
			set linha.form = form
			do dados.%Push(linha)
			;
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeEstadiamentoAddCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set nseq			= $get(%request.Data("nseq",1))
	set $piece(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,nseq),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="addPontuacaoCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set dados 			= $get(%request.Data("dados",1))
	set dadosObj 		= [].%FromJSON(dados)
	set nseq 			= dadosObj.nseq
	set comparador 		= dadosObj.comparador
	set valor 			= dadosObj.valor
	set tipo 			= dadosObj.tipo
	;
	set campo = ""
	if dadosObj.campo'=""{
		if dadosObj.campo.%Size()>0{
			for {
				set valores = dadosObj.campo.%Pop()
				quit:valores=""
				set:campo'="" campo=campo_"|"
				set campo=campo_valores
			}
		}
	}
	;
	if codCondicao = "" set codCondicao = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,""),-1)+1
	;
	if nseq = "" set nseq = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codCondicao,""),-1)+1
	set ^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codCondicao,nseq) = campo_"~"_comparador_"~"_valor_"~"_tipo
	set retorno = {}
	set retorno.status = 1
	set retorno.codCondicao = codCondicao
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="addCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set dados 			= $get(%request.Data("dados",1))
	set dadosObj 		= [].%FromJSON(dados)
	set nseq 			= dadosObj.nseq
	set legenda			= dadosObj.legenda
	set comparador 		= dadosObj.comparador
	set valor 			= dadosObj.valor
	set tipo 			= dadosObj.tipo
	;
	set campo = ""
	if dadosObj.campo'=""{
		if dadosObj.campo.%Size()>0{
			for {
				set valores = dadosObj.campo.%Pop()
				quit:valores=""
				set:campo'="" campo=campo_"|"
				set campo=campo_valores
			}
		}
	}
	;
	if codCondicao = "" set codCondicao = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,""),-1)+1
	;
	if nseq = "" set nseq = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,""),-1)+1
	set ^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,nseq) = campo_"~"_comparador_"~"_valor_"~"_legenda_"~"_tipo
	set retorno = {}
	set retorno.status = 1
	set retorno.codCondicao = codCondicao
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recTituloCompleto">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,codPainel</FormalSpec>
<Implementation><![CDATA[	new (cid,codPainel)
	set nivel = 1
	set titulo  = ""
	for {
		set obj = $get(^VARWorkFlowPEPPaciente(0,cid,codPainel,1))
		set desc = $$$VARWorkFlowPEPPacienteNome(obj)
		set tipo = $$$VARWorkFlowPEPPacienteTipodeWorkflow(obj)
		set nivel = nivel + 1
		if nivel>4 {
			set codPainel  = $$$VARWorkFlowPEPPacientePredecessor(obj)
			quit:codPainel=""
			continue
		}
		;
		if tipo=5||(tipo=12){
			set NomeExame = ""
			for i=1:1:$length(desc,";"){
				if $piece(desc,";",i)="" continue
				if NomeExame'="" set NomeExame = NomeExame_"/"
				set objExames = $get(^VARExames(0,$piece(desc,";",i),1))
				set descExame = $$$VARExamesDescricaodoExame(objExames)
				set NomeExame = NomeExame_descExame
			}
			set desc = NomeExame
		}
		;
		if tipo=7{
			set codImagem = $piece(desc,";",1)
			set codArea = $piece(desc,";",2)
			set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",1)
		}
		;
		set descExib = desc
		set:titulo'="" titulo=" » "_titulo
		set titulo = desc_titulo
		set codPainel  = $$$VARWorkFlowPEPPacientePredecessor(obj)
		quit:codPainel=""
	}
	if nivel>4 set titulo = desc_" » ... » "_titulo
	quit titulo]]></Implementation>
</Method>

<Method name="inicializa">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	if '$data(^VARPARA(0,"WORKFLOWTIPOS","PT")){
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",1","Grupo~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",2","Sim/Não (Botões)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",3","Numérico~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",4","Texto~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",5","Exame de Sangue~",1)
		;set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",6","Exame de Imagem~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",7","Imagem~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",8","Sub-Grupo~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",9","Lista de Opções~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",10","Aba~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",11","Sim/Não (Formulário)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",12","Exame Molecular~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",13","Data~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",14","Multiplos Textos~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",15","Tratamento e Seguimento (Ficha Diagnóstico)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",16","Recomendação Terapêutica~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",17","Relatório~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",18","Botão~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",19","Tratamento / Resposta / Toxicidade (Ficha de Segmento)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",20","Informativo~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",21","Tratamento~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",22","Exames~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",23","Retorno de Tratamento~",1)
	}
	if '$data(^VARPARA(0,"WORKFLOWVALORES","PT")){
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",1","Númerico",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",2","Númerico/Data do Exame",1)
		;set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",2","Percentual",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",3","Positivo/Negativo",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",12","Positivo/Negativo/Data",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",4","Positivo/Negativo/Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",5","Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",6","Mutado/Não Mutado",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",7","Mutado/Não Mutado/Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",8","Mutado/Não Mutado/Não Fez o Teste",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",9","Mutado/Não Mutado/Não Fez o Teste/Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",10","Sim/Não/Não Avaliado",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",11","Sim/Não/Não Avaliado/Texto",1)
	}
	quit]]></Implementation>
</Method>
</Class>
</Export>