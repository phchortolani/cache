<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.dTransactionType">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>
<UDLText name="T">
<Content>
/*----------------------------------------------------------------------------------
; History:
; 14-Apr-2009	PPP		SR16468:Captions for Properies
;---------------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="TxnID">
<Type>alSYS.dt.dtInteger</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00089"/>
</Property>


<Property name="TransactionType">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00088"/>
</Property>


<Property name="PeriodBalancePropertyIn">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00085"/>
</Property>


<Property name="PeriodBalancePropertyOut">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00086"/>
</Property>


<Property name="PeriodBalanceValueIn">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL0297"/>
</Property>


<Property name="PeriodBalanceValueOut">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL0298"/>
</Property>


<Property name="Source">
<Type>alSYS.dt.dtString</Type>

<Parameter name="CAPTION" value="AL00087"/>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="Index">
<IdKey>1</IdKey>
<Properties>TxnID</Properties>
<Unique>1</Unique>
</Index>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="RebuildTypes">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Call with
	; 	set sc=##class(alSOH.dTransactionType).RebuildTypes()
	; 	write sc
	; 	
	; 14-Jan-2009   DavidR	SR16297: Created.
	;-------------------------------------------------------------------------------
	set sc = ##class(alSOH.dTransactionType).%KillExtent()
	if $$$ISOK(sc) set sc = ##class(alSOH.dTransactionType).Populate()
	quit sc
]]></Implementation>
</Method>

<Method name="Populate">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 16-Jun-2009	DWR		SR16473: added periodBalanceValueIn and periodBalanceValueOut
	; 17-Apr-2009	PPP		SR16483:
	; 							1. Remove Invalid Transaction Type 10, 11, 12
	; 							2. Added Transaction Type 10 (TransferInTransit)
	; 							3. Updated Period Balance Info for Transaction Types 7,8
	; 03-Feb-2009	HQN		SR16341 :Modified TransferIssue/TransferReverese to utilise
	; 							QtyInTransit
	; 						Added TransferReverse TxType
	; 27-Jan-2009	DavidR	SR16303: added Transaction for Dispense to Patient
	; 14-Jan-2009   DavidR	SR16297: Added Source proprtie to track back to from 
	;                             if required in stock History.
	; 15-Aug-2008	HQN		SR15801: Added PeriodBalance properties
	; 15-Aug-2008 	Luke	SR15813: corrected population so can be run many times
	; 							and check existence  
	; 12-Aug-2008 	Luke	SR15813: created 
	;-------------------------------------------------------------------------------
	set sc = $$$OK 
	if '##class(alSOH.dTransactionType).%ExistsId(1) {
		set ob1 = ##class(alSOH.dTransactionType).%New()
		set ob1.TxnID = 1
		set ob1.TransactionType          = "SupplierReturn"
		set ob1.PeriodBalancePropertyIn  = "QtySupplierReturn"
		set ob1.PeriodBalancePropertyOut = "QtySupplierReturn"
		set ob1.PeriodBalanceValueIn     = "ValueSupplierReturn"
		set ob1.PeriodBalanceValueOut    = "ValueSupplierReturn"
		set ob1.Source                   = ""
		set sc = ob1.%Save()
	}
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(2)) {
		set ob2 = ##class(alSOH.dTransactionType).%New()
		set ob2.TxnID = 2
		set ob2.TransactionType          = "SupplierReceipt"
		set ob2.PeriodBalancePropertyIn  = "QtySupplierReceipt"
		set ob2.PeriodBalancePropertyOut = "QtySupplierReceipt"
		set ob2.PeriodBalanceValueIn     = "ValueSupplierReceipt"
		set ob2.PeriodBalanceValueOut    = "ValueSupplierReceipt"
		set ob2.Source                   = "INREC"
		set sc = ob2.%Save()
	}	
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(3)) {
		set ob3 = ##class(alSOH.dTransactionType).%New()
		set ob3.TxnID = 3
		set ob3.TransactionType          = "Sale"
		set ob3.PeriodBalancePropertyIn  = "QtySale"
		set ob3.PeriodBalancePropertyOut = "QtySale"
		set ob3.PeriodBalanceValueIn     = "ValueSale"
		set ob3.PeriodBalanceValueOut    = "ValueSale"
		set ob3.Source                   = ""
		set sc = ob3.%Save()
	}	
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(4)) {
		set ob4 = ##class(alSOH.dTransactionType).%New()
		set ob4.TxnID = 4
		set ob4.TransactionType          = "CustReturns"
		set ob4.PeriodBalancePropertyIn  = "QtyCustomerReturn"
		set ob4.PeriodBalancePropertyOut = "QtyCustomerReturn"
		set ob4.PeriodBalanceValueIn     = "ValueCustomerReturn"
		set ob4.PeriodBalanceValueOut    = "ValueCustomerReturn"
		set ob4.Source                   = ""
		set sc = ob4.%Save()
	}
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(5)) {
		set ob5 = ##class(alSOH.dTransactionType).%New()
		set ob5.TxnID = 5
		set ob5.TransactionType          = "ManufacturingIssue"
		set ob5.PeriodBalancePropertyIn  = "QtyManufacturingIssue"
		set ob5.PeriodBalancePropertyOut = "QtyManufacturingIssue"
		set ob5.PeriodBalanceValueIn     = "ValueManufacturingIssue"
		set ob5.PeriodBalanceValueOut    = "ValueManufacturingIssue"
		set ob5.Source                   = ""
		set sc = ob5.%Save()
	}
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(6)) {
		set ob6 = ##class(alSOH.dTransactionType).%New()
		set ob6.TxnID = 6
		set ob6.TransactionType          = "ManufacturingReceipt"
		set ob6.PeriodBalancePropertyIn  = "QtyManufacturingReceipt"
		set ob6.PeriodBalancePropertyOut = "QtyManufacturingReceipt"
		set ob6.PeriodBalanceValueIn     = "ValueManufacturingReceipt"
		set ob6.PeriodBalanceValueOut    = "ValueManufacturingReceipt"
		set ob6.Source                   = ""
		set sc = ob6.%Save()
	}
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(7)) {
		set ob7 = ##class(alSOH.dTransactionType).%New()
		set ob7.TxnID = 7
		set ob7.TransactionType          = "TransferIssue"
	;	set ob7.PeriodBalancePropertyIn  = "QtyTransferIssue"		//SR16483
	;	set ob7.PeriodBalancePropertyIn  = "QtyInTransit"			//SR16483
		set ob7.PeriodBalancePropertyIn  = "QtyTransferIssue"
		set ob7.PeriodBalancePropertyOut = "QtyTransferIssue"
		set ob7.PeriodBalanceValueIn     = "ValueTransferIssue"
		set ob7.PeriodBalanceValueOut    = "ValueTransferIssue"
		set ob7.Source                   = "INTFR"
		set sc = ob7.%Save()
	}
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(8)) {
		set ob8 = ##class(alSOH.dTransactionType).%New()
		set ob8.TxnID = 8
		set ob8.TransactionType          = "TransferReceipt"
		set ob8.PeriodBalancePropertyIn  = "QtyTransferReceipt"
	;	set ob8.PeriodBalancePropertyOut = "QtyTransferReceipt"		//SR16483
	;	set ob8.PeriodBalancePropertyOut = "QtyInTransit"			//SR16483
		set ob8.PeriodBalancePropertyOut = "QtyTransferReceipt"
	;	set ob8.Source                   = "INTFR"
		set ob8.PeriodBalanceValueIn     = "ValueTransferReceipt"
		set ob8.PeriodBalanceValueOut    = "ValueTransferReceipt"
		set ob8.Source                   = "INRECTFR"
		set sc = ob8.%Save()
	}

	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(9)) {
		set ob9 = ##class(alSOH.dTransactionType).%New()
		set ob9.TxnID = 9
		set ob9.TransactionType          = "Adjustment"
		set ob9.PeriodBalancePropertyIn  = "QtyAdjustmentIn"
		set ob9.PeriodBalancePropertyOut = "QtyAdjustmentOut"
		set ob9.PeriodBalanceValueIn     = "ValueAdjustmentIn"
		set ob9.PeriodBalanceValueOut    = "ValueAdjustmentOut"
		set ob9.Source                   = "INADJ"
		set sc = ob9.%Save()
	}
	
	//SR16483
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(10)) {
		set ob10 = ##class(alSOH.dTransactionType).%New()
		set ob10.TxnID = 10
		set ob10.TransactionType          = "TransferInTransit"
		set ob10.PeriodBalancePropertyIn  = "QtyInTransit"
		set ob10.PeriodBalancePropertyOut = "QtyInTransit"
		set ob10.PeriodBalanceValueIn     = "ValueInTransit"
		set ob10.PeriodBalanceValueOut    = "ValueInTransit"
		set ob10.Source                   = "INTFR"
		set sc = ob10.%Save()
	}
	
	/* SR16483
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(10)) {
		set ob10 = ##class(alSOH.dTransactionType).%New()
		set ob10.TxnID = 10
		set ob10.TransactionType          = "Sale"
		set ob10.PeriodBalancePropertyIn  = "QtySale"
		set ob10.PeriodBalancePropertyOut = "QtySale"
		set ob10.Source                   = "INDispenseToPatient"
		set sc = ob10.%Save()
	}
	
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(11)) {
		set objTransactionReverse = ##class(alSOH.dTransactionType).%New()
		set objTransactionReverse.TxnID = 11
		set objTransactionReverse.TransactionType          = "TransferReverse"
		set objTransactionReverse.PeriodBalancePropertyIn  = "QtyTransferIssue"
		set objTransactionReverse.PeriodBalancePropertyOut = "QtyInTransit"
		set objTransactionReverse.Source                   = "INTFRRev"
		set sc = objTransactionReverse.%Save()
	}
	
	if ($$$ISOK(sc) && '##class(alSOH.dTransactionType).%ExistsId(12)) {
		set objRequisitionIssue = ##class(alSOH.dTransactionType).%New()
		set objRequisitionIssue.TxnID = 12
		set objRequisitionIssue.TransactionType          = "RequisitionIssue"
		set objRequisitionIssue.PeriodBalancePropertyIn  = "QtyTransferReceipt"
		set objRequisitionIssue.PeriodBalancePropertyOut = "QtyTransferIssue"
		set objRequisitionIssue.Source                   = "INIssue"
		set sc = objRequisitionIssue.%Save()
	}
	*/
	
	quit sc
]]></Implementation>
</Method>

<Method name="PeriodBalancePropertyInIsValid">
<ClassMethod>1</ClassMethod>
<FormalSpec>property:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 15-Aug-2008	HQN	SR15801: Created
	;-------------------------------------------------------------------------------
	quit ##class(%Dictionary.PropertyDefinition).%ExistsId("alSOH.dPeriodBalance||"_property)
]]></Implementation>
</Method>

<Method name="PeriodBalancePropertyOutIsValid">
<ClassMethod>1</ClassMethod>
<FormalSpec>property:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 15-Aug-2008	HQN	SR15801: Created
	;-------------------------------------------------------------------------------
	quit ##class(%Dictionary.PropertyDefinition).%ExistsId("alSOH.dPeriodBalance||"_property)
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alSOH.dTransactionTypeD</DataLocation>
<DefaultData>dTransactionTypeDefaultData</DefaultData>
<IdLocation>^alSOH.dTransactionTypeD</IdLocation>
<IndexLocation>^alSOH.dTransactionTypeI</IndexLocation>
<StreamLocation>^alSOH.dTransactionTypeS</StreamLocation>
<Data name="dTransactionTypeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>TransactionType</Value>
</Value>
<Value name="3">
<Value>PeriodBalancePropertyIn</Value>
</Value>
<Value name="4">
<Value>PeriodBalancePropertyOut</Value>
</Value>
<Value name="5">
<Value>Source</Value>
</Value>
<Value name="6">
<Value>PeriodBalanceValueIn</Value>
</Value>
<Value name="7">
<Value>PeriodBalanceValueOut</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>