<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.AjusteDose">
<ClassType/>
<IncludeCode>VARConst,WWWConst,INConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	set job = %session.SessionId 
	quit:$$$ISERR(..validaSessao()) $$$OK
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set resp={}
		set resp.erro=1
		set resp.mensagem="SessÃ£o Expirou"
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>

<Method name="getCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set top = take
	if top<=0 set top = 1
	set contador = 0
	set SQL = " SELECT Count(*) as totalCount,CodigodoCID, DescricaoCompleta,DescricaoResumida,Categoria FROM VARCID where company = 0 "
	if codigo '= "" set SQL = SQL_" and CodigodoCID = '"_codigo_"' "
	e  if searchValue'="" set SQL = SQL_" and (%upper(CodigodoCID) like %upper('%"_searchValue_"%') or %upper(DescricaoCompleta) like %upper('%"_searchValue_"%'))"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set totalCount=rs.%Get("totalCount")
		set ID=rs.%Get("CodigodoCID")
		set DescR=rs.%Get("DescricaoResumida")
		set Name=rs.%Get("DescricaoCompleta")
		if Name="" set Name = DescR
		set Categoria=rs.%Get("Categoria")
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		;
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		set linha.Categoria = descCat
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getAjusteDose">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid			= $get(%request.Data("cid",1))
	set medicamento	= $get(%request.Data("medicamento",1))
	kill ^mtemp.VARAjusteDose(job)
	set retorno = {}
	set retorno.status=0
	if cid'="" set ^TempAjusteDose(0,YBED,1) = cid
	if cid'="",medicamento'="",$data(^VARWorkFlowRegTeraAD(YM,cid,medicamento,1)){
		set obj = $get(^VARWorkFlowRegTeraAD(YM,cid,medicamento,1))
		set formData = {}
		set formData.observacoes 	= $$$VARWorkFlowRegTeraADObservacoes(obj)
		set formData.situacao 		= $$$VARWorkFlowRegTeraADAtivo(obj)
		set retorno.status			= 1
		set retorno.formData = formData
		;
		
		merge ^mtemp.VARAjusteDose(job) = ^VARWorkFlowRegTeraADRegra(YM,cid,medicamento)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getRegras">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = []
	set linha=""
	for {
		set linha = $order(^mtemp.VARAjusteDose(job,linha)) quit:linha=""
		set obj = $get(^mtemp.VARAjusteDose(job,linha,1))
		set linhaObj = {}
		set linhaObj.id 		= linha
		set linhaObj.regra 		= $$$VARWorkFlowRegTeraADRegraNomedaRegra(obj)
		set linhaObj.calculo 	= $$$VARWorkFlowRegTeraADRegraCalculodaRegra(obj)
		set linhaObj.acaoRegra	= $$$VARWorkFlowRegTeraADRegraAcaodaRegra(obj)
		set linhaObj.mensagem 	= $$$VARWorkFlowRegTeraADRegraMensagemdeExibicao(obj)
		set linhaObj.continua	= +$$$VARWorkFlowRegTeraADRegraPermiteContinuar(obj)
		do retorno.%Push(linhaObj)
		
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="insertRegras">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set dados		= $get(%request.Data("dados",1))
	set strStatus = $$$OK
	try{
		set dados = [].%FromJSON(dados)
		set id 			= dados.id
		set regra 		= dados.regra
		set calculo 	= dados.calculo
		set acaoRegra 	= dados.acaoRegra
		set mensagem	= dados.mensagem
		set continua	= +dados.continua
		if id="" set id = $order(^mtemp.VARAjusteDose(job,""),-1)+1
		set obj = $get(^mtemp.VARAjusteDose(job,id,1))
		set $$$VARWorkFlowRegTeraADRegraNomedaRegra(obj) 		= regra
		set $$$VARWorkFlowRegTeraADRegraCalculodaRegra(obj) 	= calculo
		set $$$VARWorkFlowRegTeraADRegraAcaodaRegra(obj) 		= acaoRegra
		set $$$VARWorkFlowRegTeraADRegraMensagemdeExibicao(obj)	= mensagem
		set $$$VARWorkFlowRegTeraADRegraPermiteContinuar(obj)	= continua
		set ^mtemp.VARAjusteDose(job,id,1) = obj
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		set retorno.status 	= 1
		set retorno.type 	= "success"
		set retorno.mensagem="Dados salvos com sucesso!"
	}else{
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="delRegras">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set linha	= $get(%request.Data("linha",1))
	kill ^mtemp.VARAjusteDose(job,linha)
	write 1
	quit]]></Implementation>
</Method>

<Method name="salvaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set formulario	= $get(%request.Data("formulario",1))
	set geral		= $get(%request.Data("geral",1))

	set strStatus = $$$OK
	tstart
	try{
		set objFormulario = [].%FromJSON(formulario)
		set objGeral 	= [].%FromJSON(geral)
		set cid 		= objFormulario.cid
		set medicamento	= objFormulario.medicamento
		set observacoes = $replace(objGeral.observacoes,"~"," ")
		set situacao 	= objGeral.situacao
		set key = cid_","_medicamento
		set obj = $get(^VARWorkFlowRegTeraAD(YM,cid,medicamento,1))
		set $$$VARWorkFlowRegTeraADObservacoes(obj) 	= observacoes
		set $$$VARWorkFlowRegTeraADAtivo(obj)			= situacao
		set strStatus = $$$Save("VARWorkFlowRegTeraAD",key,obj,$$$YES)
		;
		if $$$ISOK(strStatus){
			kill linhas
			set linha = ""
			for {
				set linha = $order(^mtemp.VARAjusteDose(job,linha)) quit:linha=""
				set obj = $get(^mtemp.VARAjusteDose(job,linha,1))
				set key = cid_","_medicamento_","_linha
				set linhas(linha)=""
				set strStatus = $$$Save("VARWorkFlowRegTeraADRegra",key,obj,$$$YES)
				quit:'$$$ISOK(strStatus)
			}
		}
		if $$$ISOK(strStatus){
			set linha = ""
			for {
				set linha = $order(^VARWorkFlowRegTeraADRegra(YM,cid,medicamento,linha)) quit:linha=""
				if $data(linhas(linha)) continue
				set key = cid_","_medicamento_","_linha
				set strStatus = $$$Kill("VARWorkFlowRegTeraADRegra",key)
				quit:'$$$ISOK(strStatus)
			}
		}
	}
	catch e {
		set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	set retorno = {}
	if strStatus=$$$OK{
		job ##class(SourceControl.data.global.MAPPA).ExportAll()
		tcommit
		set retorno.status 		= 1
		set retorno.tipo		= "success"
		set retorno.mensagem	= "Dados salvos com sucesso!"
	}else{
		set retorno.status 		= 0
		set retorno.tipo		= "error"
		set retorno.mensagem 	= strStatus
		if $t trollback
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	Set YBED 	= $Get(%request.Data("YBED",1))
	if take<20 set take = 20
	;
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="CodMedicamento" set campo="Codigo"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="CodMedicamento" set campo1="Codigo"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	;
	set contador = 0
	set select = "Codigo,NomeAlpha"
	set classe = "VARMedicamento"
	set where = "company = 0 "
	if codigo '= "" {
		set where = where_" and Codigo = '"_codigo_"' "
	}elseif filter'=""{
		set where = where_" and ("_filter_")"
	}else{
		if searchValue'="" set where = where_" and (%upper(NomeAlpha) like %upper('%"_searchValue_"%'))"
	}
	;
	if where'="" set where = "where "_where
	set orderBy = "Order By NomeAlpha"
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_(top*2)_" * "
	set meuSelect=meuSelect_" from (select "_select_" from "_classe_" principal "_where_" Group By NomeAlpha) "_orderBy
	set meuSelect=meuSelect_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect_") group by Codigo) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set NomeAlpha = rsLinha.%Get("NomeAlpha")
		set linha = {}
		set linha.CodMedicamento = codigo
		set linha.DescMedicamento = NomeAlpha
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaINPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave  = $get(%request.Data("chave",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	if take<20 set take = 20
	;
	set contador = 0
	set select = "SearchWord,Text"
	set classe = "VARMedicamento"
	set where = "company = 0 and Language1='PT' and ParameterName='"_chave_"'"
	if codigo '= "" {
		set where = where_" and SearchWord = '"_codigo_"' "
	}else{
		if searchValue'="" set where = where_" and (%upper(Text) like %upper('%"_searchValue_"%'))"
	}
	;
	if where'="" set where = "where "_where
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_(top*2)_" * "
	set meuSelect=meuSelect_" from (select SearchWord,Text from INPARA "_where_") Order By Text"
	set meuSelect=meuSelect_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect_")) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchWord")
		set texto = rsLinha.%Get("Text")
		set linha = {}
		set linha.Cod = codigo
		set linha.Desc = texto
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>
</Class>
</Export>