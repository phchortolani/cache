<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.RegimesTerapeuticos">
<ClassType/>
<IncludeCode>VARConst,WWWConst,INConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	set job = %session.SessionId 
	quit:$$$ISERR(..validaSessao()) $$$OK
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set resp={}
		set resp.erro=1
		set resp.mensagem="Sessão Expirou"
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>

<Method name="copiaTratamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,codOrigem,nome</FormalSpec>
<Implementation><![CDATA[	do ^WWWVAR
	tstart
	set YM=0
	set tratamento = $order(^VARWorkFlowRegTera(YM,cid,""),-1)+1
	set key = cid_","_tratamento
	set obj = $get(^VARWorkFlowRegTera(YM,cid,codOrigem,1))
	set $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(obj) 	= nome
	set strStatus = $$$Save("VARWorkFlowRegTera",key,obj,$$$YES)
	;
	if $$$ISOK(strStatus){
		kill linhas
		set linha = ""
		for {
			set linha = $order(^VARWorkFlowRegTeraRefe(0,cid,codOrigem,linha)) quit:linha=""
			set obj = $get(^VARWorkFlowRegTeraRefe(0,cid,codOrigem,linha,1))
			set key = cid_","_tratamento_","_linha
			set strStatus = $$$Save("VARWorkFlowRegTeraRefe",key,obj,$$$YES)
			quit:'$$$ISOK(strStatus)
		}
	}
	;
	if $$$ISOK(strStatus){
		set ciclo=""
		for {
			set ciclo = $order(^VARWorkFlowRegTeraCiclo(0,cid,codOrigem,ciclo)) quit:ciclo=""
			set obj = $get(^VARWorkFlowRegTeraCiclo(0,cid,codOrigem,ciclo,1))
			set key = cid_","_tratamento_","_ciclo
			set strStatus = $$$Save("VARWorkFlowRegTeraCiclo",key,obj,$$$YES)
			quit:'$$$ISOK(strStatus)
		}
	}
	if $$$ISOK(strStatus){
		set ciclo=""
		for {
			set ciclo = $order(^VARWorkFlowRegTeraCicloMed(0,cid,codOrigem,ciclo)) quit:ciclo=""
			set nseq = ""
			for {
				set nseq = $order(^VARWorkFlowRegTeraCicloMed(0,cid,codOrigem,ciclo,nseq)) quit:nseq=""
				set obj = $get(^VARWorkFlowRegTeraCicloMed(0,cid,codOrigem,ciclo,nseq,1))
				set key = cid_","_tratamento_","_ciclo_","_nseq
				set strStatus = $$$Save("VARWorkFlowRegTeraCicloMed",key,obj,$$$YES)
				quit:'$$$ISOK(strStatus)
			}
			quit:'$$$ISOK(strStatus)
		}
	}
	if $$$ISOK(strStatus) {
		tcommit
		W !,key
		quit strStatus
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="copiaCiclos">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,tratamento,cicloOrigem,numeroCiclos=1</FormalSpec>
<Implementation><![CDATA[	do ^WWWVAR
	tstart
	set YM=0
	;
	set strStatus = 1
	if $$$ISOK(strStatus){
		set obj = $get(^VARWorkFlowRegTeraCiclo(0,cid,tratamento,cicloOrigem,1))
		for i=1:1:numeroCiclos{
			set key = cid_","_tratamento_","_(cicloOrigem+i)
			set strStatus = $$$Save("VARWorkFlowRegTeraCiclo",key,obj,$$$YES)
			quit:'$$$ISOK(strStatus)
		}
	}
	if $$$ISOK(strStatus){
		set nseq = ""
		for {
			set nseq = $order(^VARWorkFlowRegTeraCicloMed(0,cid,tratamento,cicloOrigem,nseq)) quit:nseq=""
			set obj = $get(^VARWorkFlowRegTeraCicloMed(0,cid,tratamento,cicloOrigem,nseq,1))
			;
			w !,numeroCiclos
			for i=1:1:numeroCiclos{
				
				set key = cid_","_tratamento_","_(cicloOrigem+i)_","_nseq
				set strStatus = $$$Save("VARWorkFlowRegTeraCicloMed",key,obj,$$$YES)
				quit:'$$$ISOK(strStatus)
			}
			quit:'$$$ISOK(strStatus)
		}
	}
	if $$$ISOK(strStatus) {
		;tcommit
		quit strStatus
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="getReferencias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = []
	set linha = ""
	for {
		set linha = $order(^mtemp.VARCSPRegimeCicloRefe(job,linha)) quit:linha=""
		set obj = $get(^mtemp.VARCSPRegimeCicloRefe(job,linha,1))
		set linhaTb = {}
		set linhaTb.id = linha
		set linhaTb.estudo 			= $$$VARWorkFlowRegTeraRefeEstudo(obj)
		set linhaTb.referencias 		= $$$VARWorkFlowRegTeraRefeReferenciadoTratamento(obj)
		set linhaTb.linkReferencia 	= $$$VARWorkFlowRegTeraRefeLinkparaaReferencia(obj)
		do retorno.%Push(linhaTb)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="insertReferencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set dados = $get(%request.Data("dados",1))
	set dados = [].%FromJSON(dados)
	set obj = ""
	set $$$VARWorkFlowRegTeraRefeEstudo(obj) 					= $replace(dados.estudo,"~"," ")
	set $$$VARWorkFlowRegTeraRefeReferenciadoTratamento(obj) 	= $replace(dados.referencias,"~"," ")
	set $$$VARWorkFlowRegTeraRefeLinkparaaReferencia(obj) 		= $replace(dados.linkReferencia,"~"," ")
	if dados.id="" set dados.id = $order(^mtemp.VARCSPRegimeCicloRefe(job,""),-1)+1
	set ^mtemp.VARCSPRegimeCicloRefe(job,dados.id,1) = obj
	write 1
	quit]]></Implementation>
</Method>

<Method name="getCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set top = take
	if top<=0 set top = 1
	set contador = 0
	set SQL = " SELECT Count(*) as totalCount,CodigodoCID, DescricaoCompleta,DescricaoResumida,Categoria FROM VARCID where company = 0 "
	if codigo '= "" set SQL = SQL_" and CodigodoCID = '"_codigo_"' "
	e  if searchValue'="" set SQL = SQL_" and (%upper(CodigodoCID) like %upper('%"_searchValue_"%') or %upper(DescricaoCompleta) like %upper('%"_searchValue_"%'))"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set totalCount=rs.%Get("totalCount")
		set ID=rs.%Get("CodigodoCID")
		set DescR=rs.%Get("DescricaoResumida")
		set Name=rs.%Get("DescricaoCompleta")
		if Name="" set Name = DescR
		set Categoria=rs.%Get("Categoria")
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		;
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		set linha.Categoria = descCat
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set tipo 	= $get(%request.Data("tipo",1))
	set codigo 	= $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set top = take
	if top<=0 set top = 1
	set contador = 0
	set SQL = " SELECT CodigodoRegimeTerapeutico, DescricaodoRegimeTerapeutico,TipodeRegime,Situacao FROM VARWorkFlowRegTera "
	set SQL = SQL_" where company = 0 and %upper(CodigodoCID) = '"_cid_"' "
	set:tipo'="" SQL = SQL_" and TipodeRegime = '"_tipo_"'"
	set:codigo'="" SQL = SQL_" and CodigodoRegimeTerapeutico = '"_codigo_"'"
	set SQL = SQL_" order by Situacao desc,TipodeRegime,DescricaodoRegimeTerapeutico"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID			 = rs.%Get("CodigodoRegimeTerapeutico")
		set Name		 = rs.%Get("DescricaodoRegimeTerapeutico")
		set TipodeRegime = rs.%Get("TipodeRegime")
		set Situacao = rs.%Get("Situacao")
		set linha = {}
		set linha.Codigo = +ID
		set linha.Descricao = "("_ID_") "_Name
		if TipodeRegime="1"{
			set linha.Tipo = "Regime Preferencial"
		}elseif TipodeRegime=2{
			set linha.Tipo = "Outras Possibilidades"
		}elseif TipodeRegime=4{
			set linha.Tipo = "Útil em determinadas circunstâncias"
		}else{
			set linha.Tipo = "Terapia de Suporte"
		}
		if +Situacao=0 set linha.Tipo = "Desativado"
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid			= $get(%request.Data("cid",1))
	set tratamento 	= $get(%request.Data("tratamento",1))
	set retorno = {}
	set retorno.status=0
	kill ^mtemp.VARCSPRegimeCiclos(job)
	kill ^mtemp.VARCSPRegimeCicloDados(job)
	kill ^mtemp.VARCSPRegimeCicloRefe(job)
	set ^TempRegimesTerapeuticos(0,YBED,1) = cid
	if cid'="",tratamento'="",$data(^VARWorkFlowRegTera(YM,cid,tratamento,1)){
		set obj = $get(^VARWorkFlowRegTera(YM,cid,tratamento,1))
		set formData = {}
		set formData.nome 			= $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(obj)
		set formData.observacoes 	= $$$VARWorkFlowRegTeraObservacoes(obj)
		set formData.situacao 		= $$$VARWorkFlowRegTeraSituacao(obj)
		set formData.tipoRegime		= $$$VARWorkFlowRegTeraTipodeRegime(obj) 
		set formData.terapiaComplementar = +$$$VARWorkFlowRegTeraTerapiaComplementar(obj)
		set formData.grupoTipoRegime= $$$VARWorkFlowRegTeraGrupoTipodeRegime(obj) 
		set formData.terapiaSuporte	= +$$$VARWorkFlowRegTeraTerapiadeSuporte(obj) 
		set formData.suporteDireto	= $$$VARWorkFlowRegTeraSuporteDireto(obj)
		set formData.ajusteDose		= $$$VARWorkFlowRegTeraAjustedeDose(obj)
		set formData.precaucoes		= $$$VARWorkFlowRegTeraPrecaucoes(obj)
		set formData.principaisToxicidades = $$$VARWorkFlowRegTeraPrincipaisToxicidades(obj)
		set formData.examesControle	= $$$VARWorkFlowRegTeraExamesdeControle(obj)
		
		set retorno.status			= 1
		set retorno.formData = formData
		set ciclo=""
		for {
			set ciclo = $order(^VARWorkFlowRegTeraCiclo(YM,cid,tratamento,ciclo)) quit:ciclo=""
			set ^mtemp.VARCSPRegimeCicloDados(job,ciclo) = $get(^VARWorkFlowRegTeraCiclo(YM,cid,tratamento,ciclo,1))
		}
		set ciclo=""
		for {
			set ciclo = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,tratamento,ciclo)) quit:ciclo=""
			set nseq=""
			for {
				set nseq = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,tratamento,ciclo,nseq)) quit:nseq=""
				set ^mtemp.VARCSPRegimeCiclos(job,ciclo,nseq) = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,tratamento,ciclo,nseq,1))
			}
		}
		merge ^mtemp.VARCSPRegimeCicloRefe(job) = ^VARWorkFlowRegTeraRefe(YM,cid,tratamento)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getCiclos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipoRegime			= $get(%request.Data("tipoRegime",1))
	set array = []
	set ciclo=""
	for {
		set ciclo = $order(^mtemp.VARCSPRegimeCiclos(job,ciclo)) quit:ciclo=""
		set nseq=""
		for {
			set nseq = $order(^mtemp.VARCSPRegimeCiclos(job,ciclo,nseq)) quit:nseq=""
			set linha = ..recCicloMed(ciclo,nseq,tipoRegime)
			do array.%Push(linha)
		}
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recDadosCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo			= $get(%request.Data("ciclo",1))
	set formData = {}
	if '$data(^mtemp.VARCSPRegimeCicloDados(job,ciclo)){
		set ^mtemp.VARCSPRegimeCicloDados(job,ciclo) = ""
	}
	set periodicidade = $piece($get(^mtemp.VARCSPRegimeCicloDados(job,ciclo)),"~",1)
	set continuoPeriodicidade = $piece($get(^mtemp.VARCSPRegimeCicloDados(job,ciclo)),"~",2)
	set formData.ciclo 		   = ciclo
	set formData.periodicidade = periodicidade
	set formData.continuoPeriodicidade = +continuoPeriodicidade
	set retorno = {}
	set retorno.formData = formData
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDadosCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo		= $get(%request.Data("ciclo",1))
	set campo	 	= $get(%request.Data("campo",1))
	set valor	 	= $get(%request.Data("valor",1))
	if campo="periodicidade"{
		set $piece(^mtemp.VARCSPRegimeCicloDados(job,ciclo),"~",1) = valor
	}
	if campo="continuoPeriodicidade"{
		set $piece(^mtemp.VARCSPRegimeCicloDados(job,ciclo),"~",2) = +valor
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="recCicloMed">
<ClassMethod>1</ClassMethod>
<FormalSpec>ciclo,nseq,tipoRegime</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0,job = %session.SessionId
	set objRetorno = {}
	set objRetorno.ciclo = ciclo
	set objRetorno.nseq = nseq
	set obj = $get(^mtemp.VARCSPRegimeCiclos(job,ciclo,nseq))
	set medicamento 		= $$$VARWorkFlowRegTeraCicloMedMedicamento(obj)
	set objRetorno.medicamento		= $$GetDescMedicamentos^VARSQL(medicamento,1)
	set dose = $$$VARWorkFlowRegTeraCicloMedDose(obj)
	set doseUnid		 		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(obj)
	set objINPARA				= ""
	if doseUnid'=""{
		set objINPARAUnid			= $get(^INPARA(YM,"UNIDDOSAGEM","PT",doseUnid,1))
	}
	set doseTxt = ""
	for i=1:1:$length(dose,"/"){
		set doseA = $piece(dose,"/",i)
		if doseA="" continue
		if doseTxt'="" set doseTxt = doseTxt_" / "
		set doseTxt = doseTxt_$fnumber(doseA,".")_" "_$$$INPARAText(objINPARAUnid)
	}
	set objRetorno.dose				= doseTxt
	;
	set via						= $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(obj) 
	set objINPARA				= ""
	if via'=""{
		set objINPARA			= $get(^INPARA(YM,"VIAADMINISTRACAO","PT",via,1))
	}
	set objRetorno.viaAdministracao	= $$$INPARAText(objINPARA)
	;
	set posologia	 			= $$$VARWorkFlowRegTeraCicloMedPosologia(obj)
	set objINPARA				= ""
	if posologia'="" {
		set objINPARA			= $get(^INPARA(YM,"POSOLOGIA","PT",posologia,1))
	}
	if tipoRegime=9 {
		set objRetorno.posologia			= posologia
	}else{
		set objRetorno.posologia			= $$$INPARAText(objINPARA)
	}

	set diaInicial				= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(obj) 
	set diaFinal	 			= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(obj)
	if tipoRegime=9 {
		set dias = diaInicial
	}else{
		if diaInicial=diaFinal {
			if diaInicial="" set dias = "Contínuo"
			else  set dias = "Dia "_diaInicial
		}else{
			if diaFinal="" set dias = "Dia "_diaInicial_" - Contínuo"
			else  set dias = "Dia "_diaInicial_" a "_diaFinal
		}
	}
	set objRetorno.diasTratamento	= dias
	;
	set periodicidade 			= $piece($get(^mtemp.VARCSPRegimeCicloDados(job,ciclo)),"~",1)
	set periodicidadeContinuo	= $piece($get(^mtemp.VARCSPRegimeCicloDados(job,ciclo)),"~",2)
	if periodicidadeContinuo=1{
		if periodicidade=""{
			set objRetorno.periodicidade 	= "Contínuo"
		}else{
			set objRetorno.periodicidade 	= "Contínuo (A cada "_periodicidade_$select(periodicidade>1:" dias",1:"dia")_")"
		}
	}elseif periodicidadeContinuo=2{
		set objRetorno.periodicidade	= "Até progressão de doença ou toxicidade (A cada "_periodicidade_$select(periodicidade>1:" dias)",1:"dia)")
	}else{
		set objRetorno.periodicidade	= "A cada "_periodicidade_$select(periodicidade>1:" dias",1:"dia")
	}
	set objRetorno.terapiaSuporte	= $$$VARWorkFlowRegTeraCicloMedTerapiadeSuporte(obj)
	set observacoes = ""
	if via=1{
		if $$$VARWorkFlowRegTeraCicloMedDosedeApresentacao(obj)'=""{
			set unidAp = $$$VARWorkFlowRegTeraCicloMedUnidadedaDosedeApresentac(obj)
			if unidAp'="" set unidAp = $$$INPARAText($get(^INPARA(0,"UNIDDOSAGEMAPRESENTACAO","PT",unidAp,1)))
			set observacoes = "Dose de Apresentação: "_$$$VARWorkFlowRegTeraCicloMedDosedeApresentacao(obj)_$$$INPARAText(objINPARAUnid)_" ("_unidAp_")"
		}
	}else{
		if $$$VARWorkFlowRegTeraCicloMedDiluicao(obj)'=""{
			set meio = $$$VARWorkFlowRegTeraCicloMedMeiodaDiluicao(obj)
			if meio'="" set meio = $$$INPARAText($get(^INPARA(0,"MEIODILUICAO","PT",meio,1)))
			set observacoes = "Diluição: "_$$$VARWorkFlowRegTeraCicloMedDiluicao(obj)_"mL "_meio_" ("_$$$VARWorkFlowRegTeraCicloMedTempodaInfusao(obj)_")"
		}
	}
	set objRetorno.observacoes = observacoes
	quit objRetorno]]></Implementation>
</Method>

<Method name="novoCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo = $order(^mtemp.VARCSPRegimeCiclos(job,""),-1)+1
	set retorno = {}
	set retorno.ciclo = ciclo
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="novaSequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo  = $get(%request.Data("ciclo",1))
	set sequencia = $order(^mtemp.VARCSPRegimeCiclos(job,ciclo,""),-1)+1
	set retorno = {}
	set retorno.sequencia = sequencia
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo  = $get(%request.Data("ciclo",1))
	set tipoRegime  = $get(%request.Data("tipoRegime",1))
	set array = []
	set nseq=""
	for {
		set nseq = $order(^mtemp.VARCSPRegimeCiclos(job,+ciclo,nseq)) quit:nseq=""
		set linha = ..recCicloMed(ciclo,nseq,tipoRegime)
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="delCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo  = $get(%request.Data("ciclo",1))
	kill ^mtemp.VARCSPRegimeCiclos(job,ciclo)
	kill ^mtemp.VARCSPRegimeCicloDados(job,ciclo)
	write 1
	quit]]></Implementation>
</Method>

<Method name="delCicloSequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo  = $get(%request.Data("ciclo",1))
	set nseq  = $get(%request.Data("nseq",1))
	kill ^mtemp.VARCSPRegimeCiclos(job,ciclo,nseq)
	write 1
	quit]]></Implementation>
</Method>

<Method name="recSequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set ciclo		= $get(%request.Data("ciclo",1))
	set sequencia	= $get(%request.Data("sequencia",1))
	set formData = {}
	set formData.sequencia 	 = sequencia
	set formData.ciclo		 = ciclo
	;
	set obj = $get(^mtemp.VARCSPRegimeCiclos(job,ciclo,sequencia))
	set formData.medicamento = $$$VARWorkFlowRegTeraCicloMedMedicamento(obj)
	set formData.dose		 = $$$VARWorkFlowRegTeraCicloMedDose(obj)
	set formData.doseUnid	 = $$$VARWorkFlowRegTeraCicloMedDoseunidade(obj)
	set formData.via		 = $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(obj) 
	set formData.posologia	 = $$$VARWorkFlowRegTeraCicloMedPosologia(obj)
	set formData.diaInicial  = $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(obj) 
	if formData.diaInicial=""{
		set formData.continuoDiaInicial = 1
	}
	set formData.diaFinal	 = $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(obj)
	if formData.diaFinal=""{
		set formData.continuoDiaFinal = 1
	}
	set formData.terapiaSuporte	= $$$VARWorkFlowRegTeraCicloMedTerapiadeSuporte(obj)
	;set formData.estudo			= $$$VARWorkFlowRegTeraCicloMedEstudo(obj)
	;set formData.referencias	= $$$VARWorkFlowRegTeraCicloMedReferencias(obj)
	;set formData.link			= $$$VARWorkFlowRegTeraCicloMedLinkparaaReferencia(obj)
	;
	
	set formData.doseApresentacao		= $$$VARWorkFlowRegTeraCicloMedDosedeApresentacao(obj)
	set formData.doseApresUnid			= formData.doseUnid
	set formData.doseApresentacaoUnid	= $$$VARWorkFlowRegTeraCicloMedUnidadedaDosedeApresentac(obj)
	set formData.diluicao				= $$$VARWorkFlowRegTeraCicloMedDiluicao(obj)
	set formData.diluicaoEm				= $$$VARWorkFlowRegTeraCicloMedMeiodaDiluicao(obj)
	set formData.tempoInfusao			= $$$VARWorkFlowRegTeraCicloMedTempodaInfusao(obj)
	
	;
	set retorno = {}
	set retorno.formData = formData
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaMedicamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set formulario	= $get(%request.Data("formulario",1))
	set strStatus = $$$OK
	tstart
	try{
		set objFormulario = [].%FromJSON(formulario)
		set ciclo	= objFormulario.ciclo
		set sequencia	= objFormulario.sequencia
		;
		set medicamento = objFormulario.medicamento
		set dose 		= objFormulario.dose
		set doseUnid 	= objFormulario.doseUnid
		set via		 	= objFormulario.via
		set posologia 	= objFormulario.posologia
		set diaInicial 	= objFormulario.diaInicial
		set diaFinal 	= objFormulario.diaFinal
		;set periodicidade 	= objFormulario.periodicidade
		set terapiaSuporte 	= objFormulario.terapiaSuporte
		set estudo		 	= objFormulario.estudo
		set referencias 	= objFormulario.referencias
		set link		 	= objFormulario.link
		set diaInicialx = diaInicial
		for piece = 1:1:$length(diaInicialx,","){
			set diaInicial = $piece(diaInicialx,",",piece)
			if diaInicialx'="",diaInicial="" continue
			if diaInicialx["," set diaFinal = diaInicial
			if piece'=1 set sequencia = $order(^mtemp.VARCSPRegimeCiclos(job,ciclo,""),-1)+1
			;
			set (doseApresentacao,doseApresentacaoUnid,diluicao,diluicaoEm,tempoInfusao)=""
			if via=1{
				set doseApresentacao 	= objFormulario.doseApresentacao
				set doseApresentacaoUnid= objFormulario.doseApresentacaoUnid
			}else{
				set diluicao			= objFormulario.diluicao
				set diluicaoEm			= objFormulario.diluicaoEm
				set tempoInfusao		= objFormulario.tempoInfusao
			}
			;
			set obj = $get(^mtemp.VARCSPRegimeCiclos(job,ciclo,sequencia))
			set $$$VARWorkFlowRegTeraCicloMedMedicamento(obj) = medicamento
			set $$$VARWorkFlowRegTeraCicloMedDose(obj) = dose
			set $$$VARWorkFlowRegTeraCicloMedDoseunidade(obj) = doseUnid
			set $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(obj) = via
			set $$$VARWorkFlowRegTeraCicloMedPosologia(obj) = posologia
			set $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(obj) = diaInicial
			set $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(obj) = diaFinal
			;set $$$VARWorkFlowRegTeraCicloMedPeriodicidade(obj) = periodicidade
			set $$$VARWorkFlowRegTeraCicloMedTerapiadeSuporte(obj) = terapiaSuporte
			;set $$$VARWorkFlowRegTeraCicloMedEstudo(obj) = estudo
			;set $$$VARWorkFlowRegTeraCicloMedReferencias(obj) = referencias
			;set $$$VARWorkFlowRegTeraCicloMedLinkparaaReferencia(obj) = link
			;
			set $$$VARWorkFlowRegTeraCicloMedDosedeApresentacao(obj)		= doseApresentacao
			set $$$VARWorkFlowRegTeraCicloMedUnidadedaDosedeApresentac(obj) = doseApresentacaoUnid
			set $$$VARWorkFlowRegTeraCicloMedDiluicao(obj)					= diluicao
			set $$$VARWorkFlowRegTeraCicloMedMeiodaDiluicao(obj)			= diluicaoEm
			set $$$VARWorkFlowRegTeraCicloMedTempodaInfusao(obj)			= tempoInfusao
			;
			set ^mtemp.VARCSPRegimeCiclos(job,ciclo,sequencia) = obj
		}
	}
	catch e {
		set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set retorno.status 		= 1
		set retorno.tipo		= "success"
		set retorno.mensagem	= "Dados salvos com sucesso!"
	}else{
		set retorno.status 		= 0
		set retorno.tipo		= "error"
		set retorno.mensagem 	= strStatus
		if $t trollback
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set formulario	= $get(%request.Data("formulario",1))
	set geral		= $get(%request.Data("geral",1))

	set strStatus = $$$OK
	tstart
	try{
		set objFormulario = [].%FromJSON(formulario)
		set objGeral 	= [].%FromJSON(geral)
		set cid 		= objFormulario.cid
		set tratamento 	= objFormulario.tratamento
		set nome 		= objGeral.nome
		set observacoes = objGeral.observacoes
		set situacao 	= objGeral.situacao
		set tipoRegime 	= objGeral.tipoRegime
		set terapiaComplementar = +objGeral.terapiaComplementar
		set grupoTipoRegime = objGeral.grupoTipoRegime
		set terapiaSuporte 	= objGeral.terapiaSuporte
		set suporteDireto 	= objGeral.suporteDireto
		set ajusteDose	 	= objGeral.ajusteDose
		set principaisToxicidades = $replace(objGeral.principaisToxicidades,"~"," ")
		set precaucoes		= $replace(objGeral.precaucoes,"~"," ")
		set examesControle	= $replace(objGeral.examesControle,"~"," ")
		if tratamento=""{
			set tratamento = $order(^VARWorkFlowRegTera(YM,cid,""),-1)+1
		}
		set key = cid_","_tratamento
		set obj = $get(^VARWorkFlowRegTera(YM,cid,tratamento,1))
		set $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(obj) 	= nome
		set $$$VARWorkFlowRegTeraObservacoes(obj) 					= observacoes
		set $$$VARWorkFlowRegTeraSituacao(obj) 						= situacao
		set $$$VARWorkFlowRegTeraTipodeRegime(obj) 					= tipoRegime
		set $$$VARWorkFlowRegTeraGrupoTipodeRegime(obj) 			= grupoTipoRegime
		set $$$VARWorkFlowRegTeraTerapiadeSuporte(obj) 				= terapiaSuporte
		Set $$$VARWorkFlowRegTeraTerapiaComplementar(obj)			= terapiaComplementar
		set $$$VARWorkFlowRegTeraSuporteDireto(obj) 				= suporteDireto
		;
		set $$$VARWorkFlowRegTeraAjustedeDose(obj)					= ajusteDose
		set $$$VARWorkFlowRegTeraPrecaucoes(obj)					= precaucoes
		set $$$VARWorkFlowRegTeraPrincipaisToxicidades(obj)			= principaisToxicidades
		set $$$VARWorkFlowRegTeraExamesdeControle(obj)				= examesControle
		;
		set strStatus = $$$Save("VARWorkFlowRegTera",key,obj,$$$YES)
		set codTratamento = tratamento
		;
		if $$$ISOK(strStatus){
			kill linhas
			set linha = ""
			for {
				set linha = $order(^mtemp.VARCSPRegimeCicloRefe(job,linha)) quit:linha=""
				set obj = $get(^mtemp.VARCSPRegimeCicloRefe(job,linha,1))
				set key = cid_","_tratamento_","_linha
				set linhas(linha)=""
				set strStatus = $$$Save("VARWorkFlowRegTeraRefe",key,obj,$$$YES)
				quit:'$$$ISOK(strStatus)
			}
		}
		if $$$ISOK(strStatus){
			set linha = ""
			for {
				set linha = $order(^VARWorkFlowRegTeraRefe(YM,cid,tratamento,linha)) quit:linha=""
				if $data(linhas(linha)) continue
				set key = cid_","_tratamento_","_linha
				set strStatus = $$$Kill("VARWorkFlowRegTeraRefe",key)
				quit:'$$$ISOK(strStatus)
			}
		}
		;
		if $$$ISOK(strStatus){
			set ciclo=""
			for {
				set ciclo = $order(^mtemp.VARCSPRegimeCicloDados(job,ciclo)) quit:ciclo=""
				set obj = $get(^mtemp.VARCSPRegimeCicloDados(job,ciclo))
				set key = cid_","_tratamento_","_ciclo
				set strStatus = $$$Save("VARWorkFlowRegTeraCiclo",key,obj,$$$YES)
				quit:'$$$ISOK(strStatus)
			}
		}
		if $$$ISOK(strStatus){
			kill sequenciasSalvas
			set ciclo=""
			for {
				set ciclo = $order(^mtemp.VARCSPRegimeCiclos(job,ciclo)) quit:ciclo=""
				set nseq = ""
				for {
					set nseq = $order(^mtemp.VARCSPRegimeCiclos(job,ciclo,nseq)) quit:nseq=""
					set obj = $get(^mtemp.VARCSPRegimeCiclos(job,ciclo,nseq))
					set key = cid_","_tratamento_","_ciclo_","_nseq
					set sequencias(ciclo,nseq) = ""
					set strStatus = $$$Save("VARWorkFlowRegTeraCicloMed",key,obj,$$$YES)
					quit:'$$$ISOK(strStatus)
				}
				quit:'$$$ISOK(strStatus)
			}
			if $$$ISOK(strStatus){
				set ciclo=""
				for {
					set ciclo = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,tratamento,ciclo)) quit:ciclo=""
					set nseq = ""
					for {
						set nseq = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,tratamento,ciclo,nseq)) quit:nseq=""
						if $data(sequencias(ciclo,nseq)) continue
						set key = cid_","_tratamento_","_ciclo_","_nseq
						set strStatus = $$$Kill("VARWorkFlowRegTeraCicloMed",key)
						quit:'$$$ISOK(strStatus)
					}
					quit:'$$$ISOK(strStatus)
				}				
			}
		}
	}
	catch e {
		set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	set retorno = {}
	if strStatus=$$$OK{
		job ##class(SourceControl.data.global.MAPPA).ExportAll()
		tcommit
		set retorno.status 		= 1
		set retorno.tipo		= "success"
		set retorno.mensagem	= "Dados salvos com sucesso!"
		set retorno.tratamento	= codTratamento
	}else{
		set retorno.status 		= 0
		set retorno.tipo		= "error"
		set retorno.mensagem 	= strStatus
		if $t trollback
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getDescMedicamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodMedicamento</FormalSpec>
<Implementation><![CDATA[	If (pCodMedicamento = "") Return ""
	Return $$SQLMedicamentos^VARSQL(pCodMedicamento)]]></Implementation>
</Method>

<Method name="listaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	Set YBED 	= $Get(%request.Data("YBED",1))
	if take<20 set take = 20
	;
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="CodMedicamento" set campo="Codigo"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="CodMedicamento" set campo1="Codigo"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	;
	set contador = 0
	set select = "Codigo,NomeAlpha"
	set classe = "VARMedicamento"
	set where = "company = 0 "
	if codigo '= "" {
		set where = where_" and Codigo = '"_codigo_"' "
	}elseif filter'=""{
		set where = where_" and ("_filter_")"
	}else{
		if searchValue'="" set where = where_" and (%upper(NomeAlpha) like %upper('%"_searchValue_"%'))"
	}
	;
	if where'="" set where = "where "_where
	set orderBy = "Order By NomeAlpha"
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_(top*2)_" * "
	set meuSelect=meuSelect_" from (select "_select_" from "_classe_" principal "_where_" Group By NomeAlpha) "_orderBy
	set meuSelect=meuSelect_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect_") group by Codigo) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set NomeAlpha = rsLinha.%Get("NomeAlpha")
		set linha = {}
		set linha.CodMedicamento = codigo
		set linha.DescMedicamento = codigo_" - "_NomeAlpha
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaINPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave  = $get(%request.Data("chave",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	if take<20 set take = 20
	;
	set contador = 0
	set select = "SearchWord,Text"
	set classe = "VARMedicamento"
	set where = "company = 0 and Language1='PT' and ParameterName='"_chave_"'"
	if codigo '= "" {
		set where = where_" and SearchWord = '"_codigo_"' "
	}else{
		if searchValue'="" set where = where_" and (%upper(Text) like %upper('%"_searchValue_"%'))"
	}
	;
	if where'="" set where = "where "_where
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_(top*2)_" * "
	set meuSelect=meuSelect_" from (select SearchWord,Text from INPARA "_where_") Order By Text"
	set meuSelect=meuSelect_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect_")) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchWord")
		set texto = rsLinha.%Get("Text")
		set linha = {}
		set linha.Cod = codigo
		set linha.Desc = texto
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaVias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set contador = 0
	set meuSelect  = "select SearchWord,Text from INPARA where company=0 and parametername='MEDROUTEADMIN' and language1='PT' order by Text"
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchWord")
		set nome = rsLinha.%Get("Text")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = nome
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaTerapiaSuporte">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	set retorno = {}	
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>
</Class>
</Export>