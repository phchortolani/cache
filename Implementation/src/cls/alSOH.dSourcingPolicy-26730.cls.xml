<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.dSourcingPolicy">
<ClassType>persistent</ClassType>
<Super>alINV.dItemPolicy</Super>

<Property name="SourceAttribute">
<Type>alINV.dAttribute</Type>

<Parameter name="CAPTION" value="AL00318"/>
</Property>


<Property name="SourceType">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00319"/>

<Parameter name="VALUELIST" value=",Storage,FIFO,LIFO,FEFO,LEFO"/>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Query name="GetViaType">
<Type>%SQLQuery</Type>
<FormalSpec>strDescription:%String,strSourceType:%String</FormalSpec>
<SqlQuery>SELECT %ID FROM dSourcingPolicy
 WHERE (Description = :strDescription AND SourceType = :strSourceType)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<UDLText name="T">
<Content>
// 15-Jun-2009 	PPP 	SR16510: Created

</Content>
</UDLText>

<Query name="GetViaKey">
<Type>%SQLQuery</Type>
<FormalSpec>pstrKey:%String</FormalSpec>
<SqlQuery>SELECT %ID FROM dSourcingPolicy
 WHERE (KeyName = :pstrKey)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="GetPolicy">
<ClassMethod>1</ClassMethod>
<FormalSpec>strDesc:%String,strSourceType:%String</FormalSpec>
<ReturnType>alSOH.dSourcingPolicy</ReturnType>
<Implementation><![CDATA[
	set objPolicy = ""
	set rs = ##class(%Library.ResultSet).%New("alSOH.dSourcingPolicy:GetViaType")
	if $$$ISOK(rs.Execute(strDesc,strSourceType)) {
		for {
			quit:'rs.Next()
			
			set objPolicy = ##class(alSOH.dSourcingPolicy).%OpenId(rs.Data("ID"))
		}
	}
	do rs.%Close()
	quit objPolicy
]]></Implementation>
</Method>
<UDLText name="T">
<Content>
// 15-Jun-2009 	PPP 	SR16510: Created

</Content>
</UDLText>


<Method name="GetPolicyByKey">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrKey:%String</FormalSpec>
<ReturnType>alSOH.dSourcingPolicy</ReturnType>
<Implementation><![CDATA[
	set objPolicy = ""
	set rs = ##class(%Library.ResultSet).%New("alSOH.dSourcingPolicy:GetViaKey")
	if $$$ISOK(rs.Execute(pstrKey)) {
		for {
			quit:'rs.Next()
			
			set objPolicy = ##class(alSOH.dSourcingPolicy).%OpenId(rs.Data("ID"))
		}
	}
	do rs.%Close()
	quit objPolicy
]]></Implementation>
</Method>

<Method name="CheckExists">
<ClassMethod>1</ClassMethod>
<FormalSpec>strDesc:%String,strSourceType:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set blnReturn = $$$NO
	set rs = ##class(%Library.ResultSet).%New("alSOH.dSourcingPolicy:GetViaType")
	if $$$ISOK(rs.Execute(strDesc,strSourceType)) {		
		for {
			quit:'rs.Next()
			
			set blnReturn = $$$YES
		}
	}
	quit blnReturn
]]></Implementation>
</Method>
<UDLText name="T">
<Content>
// 15-Jun-2009 	PPP 	SR16510: Created

</Content>
</UDLText>


<Method name="CheckExistsByKey">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrKey:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set blnReturn = $$$NO
	set rs = ##class(%Library.ResultSet).%New("alSOH.dSourcingPolicy:GetViaKey")
	if $$$ISOK(rs.Execute(pstrKey)) {		
		for {
			quit:blnReturn

			quit:'rs.Next()
			set blnReturn = $$$YES
		}
	}
	quit blnReturn
]]></Implementation>
</Method>

<Method name="%OnValidateObject">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%ValidateObject</METHOD> method to 
provide notification that the current object is being validated.

<P>If this method returns an error then <METHOD>%ValidateObject</METHOD> will fail.]]></Description>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	if (%this.SourceType = "FEFO") || (%this.SourceType = "LEFO") {
		if %this.SourceAttribute = $$$NULLOREF {
			set sc = $$Error^%apiOBJ(5802,"alSOH.dSourcingPolicy.SourceAttribute")
		}
		if $$$ISOK(sc) && (%this.SourceAttribute.DataType '= "%Date") {
			set sc = $$Error^%apiOBJ(5802,"alSOH.dSourcingPolicy.SourceAttribute")
		}
	}
	quit sc
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>dSourcingPolicyDefaultData</DefaultData>
<StreamLocation>^alSOH.dSourcingPolicyS</StreamLocation>
<Data name="dSourcingPolicyDefaultData">
<Subscript>"dSourcingPolicy"</Subscript>
<Value name="1">
<Value>SourceAttribute</Value>
</Value>
<Value name="2">
<Value>SourceType</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>