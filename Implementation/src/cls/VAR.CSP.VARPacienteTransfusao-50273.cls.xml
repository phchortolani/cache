<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARPacienteTransfusao">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Parameter name="CONTENTTYPE">
<Default>application/json</Default>
</Parameter>

<Parameter name="CHARSET">
<Default>utf-8</Default>
</Parameter>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarRelatorio">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	#Dim json As %Library.DynamicArray
	
	Set YBED 				= $Get(%request.Data("YBED",1))
	Set pObjFiltros = $Get(%request.Data("pObjFiltros",1))
	
	Set sql = "SELECT "
					_		"A.AdmissionID,"
					_		"TE.*,"
					_		"PA.DOB AS birthday,"
					_		"$$GetDescDiagnostico^VARSQL(TRA.Diagnostico) AS Diagnostico,"
					_		"A.DateAdmitted dtAdmissao,"
					_		"A.TimeAdmitted AS hrAdmissao,"
					_		"PA.Name AS Paciente "
					_ "FROM SQLUser.VARPEPTransfuncionalEtiqueta AS TE "
					_		"INNER JOIN SQLUser.VARProntuarioEletronico PR ON PR.Codigo = TE.CodigoProntuarioEletronic "
					_		"INNER JOIN SQLUser.MEDAdmission AS A ON A.AdmissionID = PR.NumeroAdmisao "
					_		"LEFT JOIN SQLUser.MEDPatient AS PA ON PA.PatientID = A.Patient "
					_		"LEFT JOIN SQLUser.VARPEPTransfuncional TRA ON PR.Codigo = TRA.CodigoProntuarioEletronic "
					_ "WHERE 1=1 "
					_ 	"AND TE.Status = 1 "
					
					
	//
	// FILTROS
	//
	Set objFiltros = [].%FromJSON(pObjFiltros)
	
	// Datas Inicial/Final
	if (objFiltros.dataInicial '= "")
	{
		Set dataInicial = $ZDateH(objFiltros.dataInicial,3)
		if (objFiltros.dataFinal = "") Set dataFinal = dataInicial
		else  Set dataFinal = $ZDateH(objFiltros.dataFinal,3)
		
		Set sql = sql _ "AND A.DateAdmitted BETWEEN '"_dataInicial_"' AND '"_dataFinal_"' "
	}
	
	// CID
	If (objFiltros.cid '= "") && (objFiltros.cid.%Size() > 0)
	{
		Set cid  = objFiltros.cid
		Set lb   = $li($lb(),2,*)	// cria ListBuild vazio
		
		For i=0:1:(cid.%Size()-1)
		{
			// Exp: ';'||TRA.Diagnostico||';' LIKE '%;A02;%'
			Set $li(lb,*+1) = "';'||TRA.Diagnostico||';' LIKE '%;"_cid.%Get(i)_";%'"
		}
		
		Set sql = sql _ "AND ("_$lts(lb," AND ", 1)_") "
	}
	
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("", sql)
	Set json = []
	While rSet.%Next()
	{
		Set row = {}
		Set row.id 												= rSet.ID
		Set row.admissao									= rSet.AdmissionID
		Set row.codigoProntuarioEletroic	= rSet.CodigoProntuarioEletronic
		Set row.etiqueta									= rSet.Etiqueta
		Set row.paciente									= rSet.Paciente
		Set row.dtNasc										= $ZDate(rSet.birthday,4)
		Set row.idade											= ..GetIdate(rSet.birthday)
		Set row.aboRH											= rSet.NodaBolsa
		Set row.aboRHPaciente							= rSet.AboRHPaciente
		Set row.dataAdmissao							= $ZDate(rSet.dtAdmissao,4)
		Set row.horaAdmissao							= $ZTime(rSet.hrAdmissao,2)
		Set row.dataPreparo								= $ZDate(rSet.DataPreparo,4)
		Set row.horaPreparo								= $ZTime(rSet.HoraPreparo,2)
		Set row.diagnostico								= rSet.Diagnostico
		Set row.hemocomponentes						= rSet.Hemocomponentes
		Set row.responsavelPreparo				= rSet.ResponsavelpeloPreparo
		Set row.testeCompatibilidade			= rSet.TestedeCompatibilidade
		Set row.volume										= rSet.Volume
		
		Do json.%Push(row)
	}
	
	Do json.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetIdate">
<ClassMethod>1</ClassMethod>
<FormalSpec>birthday</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[	New dtNasc, dtNow, diaNasc, mesNasc, anoNasc, diaNow, mesNow, anoNow, idade
	
	Set dtNasc = $ZDate(birthday,3)
	Set dtNow  = $ZDate($h,3)
	
	Set diaNasc = +$p(dtNasc,"/",3)		// dia Nascimento
	Set mesNasc = +$p(dtNasc,"/",2)		// mes Nascimento
	Set anoNasc = +$p(dtNasc,"/",1)		// ano Nascimento
	
	Set diaNow = +$p(dtNow,"/",3)			// dia Atual
	Set mesNow = +$p(dtNow,"/",2)			// mes Atual
	Set anoNow = +$p(dtNow,"/",1)			// ano Atual
	
	Set idade = anoNow - anoNasc
	
	if (mesNow < mesNasc) || ((mesNow = mesNasc) && (diaNow < diaNasc)) {
		Set idade = idade - 1
	}
	
	Return $Select(idade < 0:0,1:idade)]]></Implementation>
</Method>
</Class>
</Export>