<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSYS.Session.Session">
<Abstract>0</Abstract>
<ClassType>persistent</ClassType>
<IncludeCode>%occInclude</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>

<Property name="Var">
<Type>%String</Type>
<MultiDimensional>1</MultiDimensional>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Method name="Capture">
<Description><![CDATA[
Capture Session Variables]]></Description>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 26-Oct-2007	SCR		SR15606: Created
	;-------------------------------------------------------------------------------
	new blnLogging,blnOk,intCount,intEntry,sc,strStart,strVar
	set sc=$$$OK  ; OK		
	
	kill ..Var			; Kill Existing
	
	set intCount=0		; Used for Logging
	set strStart=$zh	; Used for Logging
	set blnLogging=0	; Used for Logging
	
	set strVar="%"  ; Start of Variables
	for {
		set strVar=$order(@strVar)  ; get next var
		quit:strVar=""
		
		set blnOk=0  ; Assume the Variable is not ok to Load into the Var array
		
		if $extract(strVar)="Y"	set blnOk=1		; Load all Y vars
		if strVar="LANGUAGE" 	set blnOk=1		; Include Language
		if strVar="SPRACHE"		set blnOk=1		; Include Language
		
		if blnOk=1 {
			set intCount=intCount+1
			merge ..Var(strVar)=@strVar
		}
	}
	if blnLogging {
		set intEntry=$increment(^CacheTemp("alSession"))
		set ^CacheTemp("alSession",intEntry)="Capture|"_($zh-strStart)_"|"_intCount
	}
	quit sc
]]></Implementation>
</Method>

<Method name="Set">
<Description><![CDATA[
Set the Variables from the Var property]]></Description>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 26-Oct-2007	SCR		SR15606: Created
	;-------------------------------------------------------------------------------
	new blnLogging,intEntry,sc,strStart,strVar
	
	set sc=$$$OK
	
	set intCount=0		; Used for Logging
	set strStart=$zh	; Used for Logging
	set blnLogging=0	; Used for Logging

	set strVar=""		; Start Pos
	
	for intCount=0:1 {
		set strVar=$order(..Var(strVar))
		quit:strVar=""
		
		merge @strVar=..Var(strVar)	; Restore Variable
	}
	if blnLogging {
		set intEntry=$increment(^CacheTemp("alSession"))
		set ^CacheTemp("alSession",intEntry)="Set|"_($zh-strStart)_"|"_intCount
	}
	quit sc
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alSYS.Session.SessionD</DataLocation>
<DefaultData>SessionDefaultData</DefaultData>
<IdLocation>^alSYS.Session.SessionD</IdLocation>
<IndexLocation>^alSYS.Session.SessionI</IndexLocation>
<StreamLocation>^alSYS.Session.SessionS</StreamLocation>
<Data name="SessionDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>