<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARExtratoFaturamento">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Do ..ConfColunasPrincipal()
	Set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="ConfColunasPrincipal">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	If ('$Data(^VARExtratoFaturColunas(0, "FATExtratoFaturamento",1))) {
		Set ^VARExtratoFaturColunas(0, "FATExtratoFaturamento",1)="1~1~~~~~~~~~1~1~1~1~~~0~1~0~~~~~~~~~~~~~~0~1~1~1~1~1~1~0~~~~1~1~1~~~~1~1~1~1~1~0~1~1"
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarRelatorio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y		= "~"
	;
	Set YBED 				= $Get(%request.Data("YBED",1))
	Set pObjFiltros = $Get(%request.Data("pObjFiltros",1))
	Set pTela 			= $Get(%request.Data("pTela",1))
	;
	Set flagColunasComposto = 0
	Set objVARExtratoFaturColunas = $Get(^VARExtratoFaturColunas(YM, pTela, 1))
	If (+$$$VARExtratoFaturColunascompostoCodigoTISS(objVARExtratoFaturColunas)>0 ||
		 (+$$$VARExtratoFaturColunascompostoDescricaoTISS(objVARExtratoFaturColunas)>0)||
		 ;(+$$$VARExtratoFaturColunascompostoGrupoSubGrupoItem(objVARExtratoFaturColunas)>0)||
		 (+$$$VARExtratoFaturColunascompostoCodigoAlpha(objVARExtratoFaturColunas)>0)||
		 (+$$$VARExtratoFaturColunascompostoDescricaoAlpha(objVARExtratoFaturColunas)>0)||
		 (+$$$VARExtratoFaturColunascompostoCentroCusto(objVARExtratoFaturColunas)>0)||
		 (+$$$VARExtratoFaturColunascompostoValorUnitario(objVARExtratoFaturColunas)>0)||
		 (+$$$VARExtratoFaturColunascompostoCustodoItem(objVARExtratoFaturColunas)>0)
	) {
		Set flagColunasComposto = 1
	}
	;
	Set pObjFiltros = [].%FromJSON(pObjFiltros)
	;
	Set pNumRequisicao 			= pObjFiltros.numRequisicao
	Set pDataInicial 				= pObjFiltros.dataInicial
	Set pDataFinal 					= pObjFiltros.dataFinal
	Set pFontePagadora 			= pObjFiltros.fontePagadora
	Set pConvenio 					= pObjFiltros.convenio
	Set pPlanoSaude 				= pObjFiltros.planoSaude
	Set pProcedimento 			= pObjFiltros.procedimento
	Set pPaciente 					= pObjFiltros.paciente
	Set pMedicoSolicitante 	= pObjFiltros.medicoSolicitante
	Set pNumLote 						= pObjFiltros.numLote
	
	Set pDataInicial 				= $ZDateH(pDataInicial,3)
	If (pDataFinal = "") Set pDataFinal = pDataInicial
	Else  Set pDataFinal = $ZDateH(pDataFinal,3)
	;
	Set arrayDados	= []
	Set meuSQL = "Select Agend.DatadeAdmissaoRetroativa, Adm.CodigodaAdmissao, Adm.CriadoData, Adm.CriadoHora, Adm.NumerodoAgendamento, "
	Set meuSQL = meuSQL _ "Case When Agend.AlteradoEm Is Null Then Agend.CriadoEm Else Agend.AlteradoEm End As dtHrAgend, "
	Set meuSQL = meuSQL _ "Proc.Sequencia, Agend.CodigodoPaciente, Proc.Convenio, Proc.PlanodeSaude, "
	Set meuSQL = meuSQL _ "Proc.NumdaCarteirinha, Proc.Solicitante, Proc.GrupoAgendamento, Proc.Procedimento, "
	Set meuSQL = meuSQL _ "$$GetCentroCustoItem^VARSQL(Proc.Procedimento) As CentroCusto, Proc.QtdeProcedimento, "
	Set meuSQL = meuSQL _ "Proc.Valor, Proc.Profissional, Adm.PagamentoValorDesconto, Adm.PagamentoPercentualDescon "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamentoAdmissao As Adm "
	Set meuSQL = meuSQL _ "Join SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "On Agend.Company = 0 And Agend.Numero = Adm.NumerodoAgendamento "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And PRoc.ControleAdmissao = Adm.CodigodaAdmissao "
	Set meuSQL = meuSQL _ "Where 1=1 "
	If (pNumRequisicao '= "") {
		Set meuSQL = meuSQL _ "And Adm.CodigodaAdmissao = '"_pNumRequisicao_"' "
	}Else{
		;Set meuSQL = meuSQL _ "And Adm.CriadoData Between '"_pDataInicial_"' And '"_pDataFinal_"' "
		
		Set meuSQL = meuSQL _ "And ( "
		Set meuSQL = meuSQL _ "(NVL(%Internal(Agend.DatadeAdmissaoRetroativa),0) = 0 And Adm.CriadoData Between '"_pDataInicial_"' And '"_pDataFinal_"') "
		Set meuSQL = meuSQL _ "Or "
		Set meuSQL = meuSQL _ "(NVL(%Internal(Agend.DatadeAdmissaoRetroativa),0) > 0 And Agend.DatadeAdmissaoRetroativa Between '"_pDataInicial_"' And '"_pDataFinal_"') "
		Set meuSQL = meuSQL _ ") "
		
		If (pConvenio '= "") {
			Set meuSQL = meuSQL _ "And Proc.Convenio = '"_pConvenio_"' "
		}
		If (pPlanoSaude '= "" && (pPlanoSaude.%Size() > 0)) {
			Set meuSQL = meuSQL _ "And Proc.PlanodeSaude In ("
			For i = 0 : 1 : (pPlanoSaude.%Size()-1) {
				Set meuSQL = meuSQL _ $Select(i=0:"",1:",") _ "'"_pPlanoSaude.%Get(i)_"'"
			}
			Set meuSQL = meuSQL _ ") "
		}
		If (pProcedimento '= "" && (pProcedimento.%Size() > 0)) {
			Set meuSQL = meuSQL _ "And Proc.Procedimento In ("
			For i = 0 : 1 : (pProcedimento.%Size()-1) {
				Set meuSQL = meuSQL _ $Select(i=0:"",1:",") _ "'"_pProcedimento.%Get(i)_"'"
			}
			Set meuSQL = meuSQL _ ") "
		}
		If (pPaciente '= "" && (pPaciente.%Size() > 0)) {
			Set meuSQL = meuSQL _ "And Agend.CodigodoPaciente In ("
			For i = 0 : 1 : (pPaciente.%Size()-1) {
				Set meuSQL = meuSQL _ $Select(i=0:"",1:",") _ "'"_pPaciente.%Get(i)_"'"
			}
			Set meuSQL = meuSQL _ ") "
		}
		If (pMedicoSolicitante '= "" && (pMedicoSolicitante.%Size() > 0)) {
			Set meuSQL = meuSQL _ "And Proc.Solicitante In ("
			For i = 0 : 1 : (pMedicoSolicitante.%Size()-1) {
				Set meuSQL = meuSQL _ $Select(i=0:"",1:",") _ "'"_pMedicoSolicitante.%Get(i)_"'"
			}
			Set meuSQL = meuSQL _ ") "
		}
	}
	K ^zzJULIO
	s ^zzJULIO = meuSQL
	Set rSet 	 = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)	;
	While (rSet.%Next()) {
		;
		Set objMEDPatient 		= $Get(^MEDPatient(YM, rSet.%Get("CodigodoPaciente"), 1))
		Set objMEDProvider 		= ""
		Set:rSet.%Get("Solicitante")'="" objMEDProvider = $Get(^MEDProvider(YM, rSet.%Get("Solicitante"), 1))
		Set objFATOrganizacao = ""
		Set:rSet.%Get("Convenio")'="" objFATOrganizacao = $Get(^FATOrganizacao(YM, rSet.%Get("Convenio"), 1))
		If ($$$FATOrganizacaoFontePagadoraAtivo(objFATOrganizacao)) {
			Set codFontePagadora	= rSet.%Get("Convenio")
		}Else{
			Set codFontePagadora	= $$$FATOrganizacaoOrganizacaoPai(objFATOrganizacao)
		}
		;
		If (pFontePagadora'="" && (pFontePagadora '= codFontePagadora)) Continue
		;
		Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(rSet.%Get("Procedimento"), rSet.%Get("PlanodeSaude"), rSet.%Get("NumerodoAgendamento"), rSet.%Get("Sequencia"))
		;
		Set objFATAcordoComercial = ""
		Set objFATRegraComercial = ""
		If ($IsObject(objRegraComercial)) {
			Set:objRegraComercial.AcordoComercial'="" objFATAcordoComercial = $Get(^FATAcordoComercial(YM, objRegraComercial.AcordoComercial, 1 ))
			Set:objRegraComercial.CodigoTabela'="" objFATRegraComercial = $Get(^FATRegraComercial(YM, objRegraComercial.CodigoTabela, 1))
		}
		;
		Set objPagamento = ..GetPagamento(rSet.%Get("CodigodaAdmissao"))
		Set strPagamento = "-"
		If (##Class(VAR.CSP.VARCadAdmissao).GetOrganizacaoEParticular(rSet.%Get("PlanodeSaude"))) {
			Set strPagamento = "Pendente"
			Set valorTotalAdm = $$GetValorTotalAdmissao^VARSQL(rSet.%Get("NumerodoAgendamento"), rSet.%Get("CodigodaAdmissao"), YBED)
			Set valorPago 		= objPagamento.valorPago
			If (+rSet.%Get("PagamentoValorDesconto") > 0) {
				Set valorTotalAdm = valorTotalAdm - rSet.%Get("PagamentoValorDesconto")
			}
			If (+rSet.%Get("PagamentoPercentualDescon") > 0) {
				Set valorTotalAdm = valorTotalAdm - ((valorTotalAdm * rSet.%Get("PagamentoValorDesconto")) / 100)
			}
			If (valorPago >= valorTotalAdm) Set strPagamento = "Conclu√≠do"
		}
		;
		Set (numLote, strLote, pDtIniFecLote, pDtFinFecLote) = ""
		If (rSet.%Get("Sequencia")'=""&&($Data(^FATLoteFaturass(YM,1,$Replace(rSet.%Get("NumerodoAgendamento"),"/"," "),rSet.%Get("Sequencia"))))) {
			Set numLote = $Order(^FATLoteFaturass(YM,1,$Replace(rSet.%Get("NumerodoAgendamento"),"/"," "),rSet.%Get("Sequencia"),""))	
			Set objFATLote = $Get(^FATLote(YM, numLote, 1))
			Set pDtIniFecLote = $$$FATLoteDataInicial(objFATLote)
			Set pDtFinFecLote = $$$FATLoteDataFinal(objFATLote)
			Set strLote = $$SQLGetUserParamDesc^VARSQL("FATLOTESTATUS~"_$$$FATLoteStatus(objFATLote))
		}
		;
		Set custoItem = 0, codExecutor = ""
		If (rSet.%Get("Procedimento")'=""&&($Data(^VARManualExames(0,5,"A",rSet.%Get("Procedimento"))))) {
			Set codExecutor = $Order(^VARManualExames(0,5,"A",rSet.%Get("Procedimento"),""))
		}ElseIf (rSet.%Get("Procedimento")'=""&&($Data(^VARManualExames(0,5," ",rSet.%Get("Procedimento"))))) {
			Set codExecutor = $Order(^VARManualExames(0,5," ",rSet.%Get("Procedimento"),""))
		}		
		If (codExecutor '= "") {
			Set custoItem = $$$VARManualExamePreco($Get(^VARManualExame(YM, rSet.%Get("Procedimento"), codExecutor, 1)))		
		}
		;
		If (pNumLote '= "" && (pNumLote '= numLote)) Continue
		;
		Set isParticular = ##Class(VAR.CSP.VARCadAdmissao).GetOrganizacaoEParticular(rSet.%Get("PlanodeSaude"))
		Set objNFeRPS = ..GetNFeRPS(rSet.%Get("CodigodaAdmissao"), numLote, +isParticular)
		;
		Set list = {}
		Set list.numAdmissao 			= rSet.%Get("CodigodaAdmissao")
		If (rSet.%Get("DatadeAdmissaoRetroativa")'="") {
			Set list.dtAdmissao 			= $ZDate(rSet.%Get("DatadeAdmissaoRetroativa"),4)
		}Else{
			Set list.dtAdmissao 			= $ZDate(rSet.%Get("CriadoData"),4)
		}
		Set list.hrAdmissao 			= $ZTime(rSet.%Get("CriadoHora"),2)
		Set list.numAgendamento 	= rSet.%Get("NumerodoAgendamento")
		Set list.dtAgendamento 		= $ZDate(+rSet.%Get("dtHrAgend"),4)
		Set list.hrAgendamento 		= $ZTime($Piece(rSet.%Get("dtHrAgend"),",",2),2)
		Set list.prestador 				= ..GetPrestador(rSet.%Get("NumerodoAgendamento"), rSet.%Get("Sequencia"))
		Set list.pacienteNome 		= $$$MEDPatientName(objMEDPatient)
		Set list.prontuario 			= $$$MEDPatientPID(objMEDPatient)
		Set list.dtNascimento 		= $ZDate($$$MEDPatientDOB(objMEDPatient),4,,4)
		Set list.sexo 						= ##Class(User.Search.PesquisasJson).GetDescricaoWWW101("SEX",$$$MEDPatientGender(objMEDPatient))
		Set list.nomeMae 					= $$$MEDPatientMothersName(objMEDPatient)
		Set list.cpf 							= $$$MEDPatientSSN(objMEDPatient)
		Set list.rg 							= $$$MEDPatientFREE7(objMEDPatient)
		Set list.cns 							= $$$MEDPatientCartaoNacionaldeSaude(objMEDPatient)
		Set list.telefone 				= $$$MEDPatientFREE2(objMEDPatient)_$Select($$$MEDPatientTel(objMEDPatient)'="":"/"_$$$MEDPatientTel(objMEDPatient),1:"")
		Set list.email 						= $$$MEDPatientEmail(objMEDPatient)
		Set list.enderecoLog 			= $$$MEDPatientStreet(objMEDPatient)_", "_$$$MEDPatientFREE4(objMEDPatient)_" "_$$$MEDPatientFREE3(objMEDPatient)
		Set list.enderecoBairro 	= $$$MEDPatientFREE6(objMEDPatient)
		Set list.enderecoCidade 	= $$$MEDPatientCity(objMEDPatient)
		Set list.enderecoEstado 	= $$$MEDPatientState(objMEDPatient)
		Set list.enderecoCEP 			= $$$MEDPatientZipCode(objMEDPatient)
		Set list.fontePagadora 		= ##Class(User.Search.PesquisasJson).GetOrganizacaoNome(codFontePagadora)
		Set list.convenio 				= ##Class(User.Search.PesquisasJson).GetOrganizacaoNome(rSet.%Get("Convenio"))
		Set list.plano 						= ##Class(User.Search.PesquisasJson).GetOrganizacaoNome(rSet.%Get("PlanodeSaude"))
		Set list.carteirinha 			= rSet.%Get("NumdaCarteirinha")
		Set list.solicitante 			= $$$MEDProviderName(objMEDProvider)_" CRM: "_$$$MEDProviderFREE3(objMEDProvider)_"/"_$$$MEDProviderLicenseNumber(objMEDProvider)
		Set list.codigoTISS 			= $Select($IsObject(objRegraComercial):objRegraComercial.CodigodoItem,1:"")
		Set list.descricaoTISS 		= $Select($IsObject(objRegraComercial):objRegraComercial.DescricaoDoItem,1:"")
		Set list.grupoSubGrupoItem= $$GetDescGrupoAgendamento^VARSQL(rSet.%Get("GrupoAgendamento"))
		Set list.codigoAlpha 			= rSet.%Get("Procedimento")
		Set list.descricaoAlpha 	= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"),1)
		Set list.centroCusto 			= $$SQLGetCentroCustoDesc^VARSQL(rSet.%Get("CentroCusto"))
		Set list.medicoAgendamento= $$GetNomeMedico^VARSQL(rSet.%Get("Profissional"))
		Set list.custodoItem			= custoItem
		Set list.nomeAcordo 			= $$$FATAcordoComercialNome(objFATAcordoComercial)
		Set list.tabelaAcordo 		= $Select($IsObject(objRegraComercial):objRegraComercial.CodigoTabela,1:"")
		Set list.qtde 						= +rSet.%Get("QtdeProcedimento")
		If (##Class(VAR.CSP.VARCadAdmissao).GetOrganizacaoEParticular(rSet.%Get("PlanodeSaude"))) {
			Set list.valorUnitario 	= +rSet.%Get("Valor")
			Set list.valorTotal 		= +(list.qtde * list.valorUnitario)
		}Else{
			Set list.valorUnitario 	= +$Select($IsObject(objRegraComercial):objRegraComercial.ValorUnitario	,1:0)
			Set list.valorTotal 		= +$Select($IsObject(objRegraComercial):objRegraComercial.Valor,1:0)
			If ($IsObject(objRegraComercial)) {
				For count = 1 : 1 : objRegraComercial.Componentes.Count() {
					Set objRegraComerCompont = objRegraComercial.Componentes.GetAt(count)
					If ($Data(^VARAgendamentoItensDesc(YM,rSet.%Get("NumerodoAgendamento"),rSet.%Get("Sequencia"),objRegraComerCompont.Procedimento))) Continue 
					;If ($Data(^VARAgendamentoItensQtdeAlterada(YM,rSet.%Get("NumerodoAgendamento"),rSet.%Get("Sequencia"),objRegraComerCompont.Procedimento))) Continue
					;Set list.valorUnitario 	= list.valorUnitario + objRegraComerCompont.ValorUnitario	
					;Set list.valorTotal 		= list.valorTotal  + objRegraComerCompont.Valor
				}			
			}
		}
		
		Set list.valorPago 				= $Select(isParticular=1:objPagamento.valorPago,1:"")
		Set list.formaPagamento 	= $Select(isParticular=1:objPagamento.formPag,1:"")
		Set list.dataPagamento 		= $Select(isParticular=1:objPagamento.dtPag,1:"")
		Set list.statusPagamento 	= $Select(isParticular=1:strPagamento,1:"")
		Set list.numLote 					= numLote
		Set list.periodoLoteFatIni= $Select(pDtIniFecLote="":"",1:$ZDate(pDtIniFecLote,4))
		Set list.periodoLoteFatFin= $Select(pDtFinFecLote="":"",1:$ZDate(pDtFinFecLote,4))
		Set list.numRPS 					= objNFeRPS.numRPS
		Set list.statusLote 			= strLote
		Set list.numNF 						= objNFeRPS.numNF
		Set list.dtEmissaoNF 			= objNFeRPS.dtEmisNF
		Set list.dtVencimentoNF 	= objNFeRPS.dtVencNF
		Set list.valorNF 					= objNFeRPS.valorNF
		Set list.valorImpostoNF 	= objNFeRPS.valorImpostoNF
		If ('flagColunasComposto) {
			Do arrayDados.%Push(list)
		}Else{
			If ($IsObject(objRegraComercial) && (objRegraComercial.Componentes.Count()>0)) {
				Do arrayDados.%Push(list)
				For xCount = 1 : 1 : objRegraComercial.Componentes.Count() {
					Set objRegraComerCompont = objRegraComercial.Componentes.GetAt(xCount)
					;
					If ($Data(^VARAgendamentoItensQtdeAlterada(YM,rSet.%Get("NumerodoAgendamento"),rSet.%Get("Sequencia"),objRegraComerCompont.Procedimento))){
						Set qtdeAlterada = $Piece(^VARAgendamentoItensQtdeAlterada(YM,rSet.%Get("NumerodoAgendamento"),rSet.%Get("Sequencia"),objRegraComerCompont.Procedimento,1),"~",1)
						If (qtdeAlterada <= 0) Continue
					} 
					Set compostoCustoItem = 0, compostoCodExecutor = ""
					If ($Data(^VARManualExames(0,5,"A",objRegraComerCompont.Procedimento))) {
						Set compostoCodExecutor = $Order(^VARManualExames(0,5,"A",objRegraComerCompont.Procedimento,""))
					}ElseIf ($Data(^VARManualExames(0,5," ",objRegraComerCompont.Procedimento))) {
						Set compostoCodExecutor = $Order(^VARManualExames(0,5," ",objRegraComerCompont.Procedimento,""))
					}		
					If (compostoCodExecutor '= "") {
						Set compostoCustoItem = $$$VARManualExamePreco($Get(^VARManualExame(YM, objRegraComerCompont.Procedimento, codExecutor, 1)))		
					}
					;
					Set listC = {}
					Set iter = list.%GetIterator()
					While iter.%GetNext(.key , .value ) {
						Do listC.%Set(key, value)
					}					
					Set listC.compostoCodigoTISS = objRegraComerCompont.CodigodoItem
					Set listC.compostoDescricaoTISS = objRegraComerCompont.DescricaoDoItem
					Set listC.compostoCodigoAlpha = objRegraComerCompont.Procedimento
					Set listC.compostoDescricaoAlpha = $$SQLGetDescricaoProduto^VARSQL(objRegraComerCompont.Procedimento,1)
					Set listC.compostoCentroCusto = $$SQLGetCentroCustoDesc^VARSQL(objRegraComerCompont.Procedimento)
					;If (xCount = 1) {
					;	Set listC.valorTotal 			= listC.valorUnitario + objRegraComerCompont.ValorUnitario
					;}Else{
						Set listC.valorUnitario 	= 0
						Set listC.valorTotal 			= objRegraComerCompont.ValorUnitario
					;}
					Set listC.compostoValorUnitario = objRegraComerCompont.ValorUnitario	
					Set listC.compostoCustodoItem = compostoCustoItem
					Do arrayDados.%Push(listC)
				}	
			}Else{
				Do arrayDados.%Push(list)
			}
		}
	}
	;
	Set listRetorno = {}
	Set listRetorno.columns = ..GetColumns(pTela)
	Set listRetorno.dados 	= arrayDados
	Set listRetorno.sql			= meuSQL
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetNFeRPS">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAdmissao,pNumLote,pIsParticular</FormalSpec>
<ReturnType>%Library.DynamicObject</ReturnType>
<Implementation><![CDATA[	New (pCodAdmissao, pNumLote, pIsParticular)
	;
	Set YM = 0
	Set listRetorno = {}
	Set listRetorno.numRPS 					= ""
	Set listRetorno.numNF 					= ""
	Set listRetorno.dtEmisNF				= ""
	Set listRetorno.dtVencNF 				= ""
	Set listRetorno.valorNF 				= 0
	Set listRetorno.valorImpostoNF 	= 0
	;
	If (pIsParticular) {
		Set objVARAgendamentoAdmissao = $Get(^VARAgendamentoAdmissao(YM, pCodAdmissao, 1))
		Set numRPS 		= $$$VARAgendamentoAdmissaoNumeroRPS(objVARAgendamentoAdmissao)
		Set serieRPS 	= 1
		Set:numRPS'="" listRetorno.numRPS = numRPS_"/"_serieRPS
		If (numRPS '= "") {
			Set numNF	= ""
			For {
				Set numNF = $Order(^FATNotaFiscals(YM, 3, numRPS, serieRPS, numNF))
				Quit:numNF=""
				
				Set objeto = $Get(^FATNotaFiscal(YM, numNF, 1))
				
				Set listRetorno.numNF 		= listRetorno.numNF _$Select(listRetorno.numNF="":"",1:"; ")_ $$$FATNotaFiscalNumerodaNotaFiscal(objeto)
				Set listRetorno.dtEmisNF 	= listRetorno.dtEmisNF _$Select(listRetorno.dtEmisNF="":"",1:"; ")_ 
																		$Select($$$FATNotaFiscalDatadeEmissao(objeto)="":"",1:$ZDate($$$FATNotaFiscalDatadeEmissao(objeto),4))
				Set listRetorno.dtVencNF 	= listRetorno.dtVencNF _$Select(listRetorno.dtVencNF="":"",1:"; ")_ 
																		$Select($$$FATNotaFiscalDatadeVencimento(objeto)="":"",1:$ZDate($$$FATNotaFiscalDatadeVencimento(objeto),4))
				;Considerar apenas NF com status de Emitida
				If ($$$FATNotaFiscalStatusdaNotaFiscal(objeto) '= 3) Continue
				Set listRetorno.valorNF 				= listRetorno.valorNF + $$$FATNotaFiscalValorTotaldaNF(objeto)
				Set listRetorno.valorImpostoNF 	= listRetorno.valorImpostoNF + $$$FATNotaFiscalValorTotaldasDeducoes(objeto)
			}
		}	
	}ElseIf (pNumLote '= "") {
		Set numNF	= ""
		For {
			Set numNF = $Order(^FATNotaFiscals(YM, 1, pNumLote, numNF))
			Quit:numNF=""
			
			Set objeto = $Get(^FATNotaFiscal(YM, numNF, 1))
			
			Set listRetorno.numRPS 		= listRetorno.numRPS _$Select(listRetorno.numRPS="":"",1:"; ")_ $$$FATNotaFiscalRPS(objeto)_"/"_$$$FATNotaFiscalSeriedoRPS(objeto)
			Set listRetorno.numNF 		= listRetorno.numNF _$Select(listRetorno.numNF="":"",1:"; ")_ $$$FATNotaFiscalNumerodaNotaFiscal(objeto)
			Set listRetorno.dtEmisNF 	= listRetorno.dtEmisNF _$Select(listRetorno.dtEmisNF="":"",1:"; ")_ 
																	$Select($$$FATNotaFiscalDatadeEmissao(objeto)="":"",1:$ZDate($$$FATNotaFiscalDatadeEmissao(objeto),4))
			Set listRetorno.dtVencNF 	= listRetorno.dtVencNF _$Select(listRetorno.dtVencNF="":"",1:"; ")_ 
																	$Select($$$FATNotaFiscalDatadeVencimento(objeto)="":"",1:$ZDate($$$FATNotaFiscalDatadeVencimento(objeto),4))
			;Considerar apenas NF com status de Emitida
			If ($$$FATNotaFiscalStatusdaNotaFiscal(objeto) '= 3) Continue
			Set listRetorno.valorNF 	= listRetorno.valorNF + $$$FATNotaFiscalValorTotaldaNF(objeto)
		}
	} 
	;
	Return listRetorno]]></Implementation>
</Method>

<Method name="GetPagamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAdmissao</FormalSpec>
<ReturnType>%Library.DynamicObject</ReturnType>
<Implementation><![CDATA[	New (pCodAdmissao)
	Set listRetorno = {}
	Set listRetorno.valorPago = 0
	Set listRetorno.formPag 	= ""
	Set listRetorno.dtPag 		= ""

	If ($Data(^VARAgendamentoPagamentos(0, pCodAdmissao))) {
		Set contador = ""
		For {
			Set contador = $Order(^VARAgendamentoPagamentos(0, pCodAdmissao, contador))
			Quit:contador=""
			
			Set objeto = $Get(^VARAgendamentoPagamentos(0, pCodAdmissao, contador, 1))
			Set listRetorno.valorPago = listRetorno.valorPago + $$$VARAgendamentoPagamentosValor(objeto)
			Set listRetorno.formPag 	= listRetorno.formPag _ $Select(listRetorno.formPag="":"",1:"; ")_$$SQLGetUserParamDescVAR^VARSQL("FORMAPAGAMENTO~"_$$$VARAgendamentoPagamentosTipodePagamento(objeto))
			Set listRetorno.dtPag 		= listRetorno.dtPag _ $Select(listRetorno.dtPag="":"",1:"; ")_$ZDate($$$VARAgendamentoPagamentosDataTransacao(objeto),4)
		}		
	}

	Return listRetorno]]></Implementation>
</Method>

<Method name="GetPrestador">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pSeqProcedimento</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	New (pCodAgendamento, pSeqProcedimento)
	;
	If (pCodAgendamento = "" || (pSeqProcedimento = "")) Return ""
	;
	Set YM 					= 0	
	Set Y 					= "~"	
	Set rPrestador	= ""
	;
	Set objVARAgendProc = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSeqProcedimento, 1))
	Set procedAgendado 	= +$$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendProc)
	Set codAdmissao 		= $$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendProc)
	If (procedAgendado '= 1) {
		Set xSeqProcedimento = ""
		If (codAdmissao '= "") {
			Set xSeqProcedimento = ""
			&Sql(
				Select Sequencia 
				Into :xSeqProcedimento 
				From SQLUser.VARAgendamentoProcedimentos
				Where Company = 0 And ProcedimentoAgendado = 1
				And ControleAdmissao = :codAdmissao
			)
		}
		If (xSeqProcedimento = "" && (codAdmissao '= "")) {
			Set objVARAgendAdm 	= $Get(^VARAgendamentoAdmissao(YM, codAdmissao, 1))
			Set criadoPor 		 	= $$$VARAgendamentoAdmissaoCriadoPor(objVARAgendAdm)
			Set objWWW013				= $Get(^WWW013(YM, criadoPor, 1))
			Set codLocal				= $$$WWW013HomeLocation(objWWW013)
			Set rPrestador			= $$SQLGetLocationName^VARSQL(codLocal)
			Return rPrestador
		}
		Set objVARAgendProc = ""
		Set:xSeqProcedimento'="" objVARAgendProc = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSeqProcedimento, 1))
		Set procedAgendado 	= +$$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendProc)
		Set codAdmissao 		= $$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendProc)
	}
	Set codProfissional = $$$VARAgendamentoProcedimentosProfissional(objVARAgendProc)
	Set dtAtendimento 	= +$$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendProc)
	Set hrAtendimento 	= +$$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendProc)
	Set codSala 				= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendProc)
	Set codLeito 				= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendProc)
	Set codProfissional	= codProfissional
	If (codProfissional = "") {
		Set objVARSalasAtendimentos = ""
		Set:codSala'="" objVARSalasAtendimentos = $Get(^VARSalasAtendimentos(0, codSala, 1))
		Set codUnidade	= $$$VARSalasAtendimentosUnidade(objVARSalasAtendimentos)
		Set rPrestador	= $$SQLGetLocationName^VARSQL(codUnidade)
	}Else{
		Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, codProfissional, dtAtendimento, hrAtendimento, 1))
		Set referenciaPai = $$$MEDProviderAgendaHorarioReferenciaPai(objMEDProviderAgendaHorario)
		Set objMEDProviderAgenda = ""
		If (referenciaPai '= "") Set objMEDProviderAgenda = $Get(^MEDProviderAgenda(YM, codProfissional, referenciaPai, 1))
		Set codUnidade	= $$$MEDProviderAgendaUnidade(objMEDProviderAgenda)
		Set rPrestador	= $$SQLGetLocationName^VARSQL(codUnidade)
	}		
	;
	Return rPrestador]]></Implementation>
</Method>

<Method name="GetColumns">
<ClassMethod>1</ClassMethod>
<FormalSpec>pRelatorio</FormalSpec>
<ReturnType>%Library.DynamicArray</ReturnType>
<Implementation><![CDATA[	; 1: DataField |  2: Caption  |  3: Referencia Pai |  4: Final Referencia Pai |  5: alignment |  6: dataType |  
	; 7: width		 |  8: minWidth |  9: Format  			 | 10: 	Nome da Propriedade Tabela					|  
	Set columns(+005) = "numAdmissao~No. Requisi√ß√£o (FA)~~0~center~~120~~~"
	Set columns(+010) = "dtAdmissao~Data Admiss√£o~~0~center~~100~~~"
	Set columns(+015) = "hrAdmissao~Hora Admiss√£o~~0~center~~100~~~"
	Set columns(+020) = "numAgendamento~No. Agendamento~~0~center~~130~~~"
	Set columns(+025) = "dtAgendamento~Data Agenda- mento~~0~center~~100~~~"
	Set columns(+030) = "hrAgendamento~Hora Agenda- mento~~0~center~~100~~~"
	Set columns(+035) = "prestador~Prestador~~0~~~250~~~"
	;
	Set columns(+040) = "~Paciente~~0"
	Set columns(+045) = "pacienteNome~Nome~8~0~~~250~~~"
	Set columns(+050) = "prontuario~Prontu√°rio~8~0~center~~120~~~"	
	Set columns(+055) = "dtNascimento~Data Nasc.~8~0~center~~100~~~"
	Set columns(+060) = "sexo~Sexo~8~0~center~~100~~~"
	Set columns(+065) = "nomeMae~Nome da M√£e~8~0~~~250~~~"
	Set columns(+070) = "cpf~CPF~8~0~center~~150~~~"
	Set columns(+075) = "rg~RG~8~0~center~~150~~~"
	Set columns(+080) = "cns~CNS~8~0~center~~150~~~"
	Set columns(+085) = "telefone~Telefone~8~0~center~~200"
	Set columns(+090) = "email~Email~8~0~center~~250"
	Set columns(+095) = "enderecoLog~Endere√ßo~8~0~~~250"
	Set columns(+100) = "enderecoBairro~Bairro~8~0~~~200"
	Set columns(+105) = "enderecoCidade~Cidade~8~0~~~200"
	Set columns(+110) = "enderecoEstado~Estado~8~0~~~100"
	Set columns(+115) = "enderecoCEP~CEP~8~1~~~80"
	Set columns(+120) = "fontePagadora~Fonte Pagadora~~0~~~200"
	Set columns(+125) = "convenio~Conv√™nio~~0~~~200~~~"
	Set columns(+130) = "plano~Plano de Sa√∫de~~0~~~200~~~"
	Set columns(+135) = "carteirinha~Carteirinha~~0~~~120~~~"
	Set columns(+140) = "solicitante~M√©dico Solicitante~~0~~~250~~~"
	;
	Set columns(+145) = "~Procedimento~~0"
	Set columns(+148) = "codigoTISS~C√≥digo(Guia TISS)~145~0~~~100~~~"
	Set columns(+151) = "descricaoTISS~Descri√ß√£o (Guia TISS)~145~0~~~250~~~"
	Set columns(+154) = "grupoSubGrupoItem~Grupo/Subgrupo do Item~145~0~~~250~~~"
	Set columns(+157) = "codigoAlpha~C√≥digo (Item Cobr√°vel)~145~0~~~100~~~"
	Set columns(+160) = "descricaoAlpha~Descri√ß√£o (Item Cobr√°vel)~145~0~~~250~~~"
	Set columns(+163) = "centroCusto~Centro de Custo~145~0~~~120~~~"
	Set columns(+166) = "medicoAgendamento~M√©dico Agendamento~145~0~~~250~~~"
	Set columns(+169) = "custodoItem~Custo do Item~145~1~~number~100~~#,##0.00~"
	;
	Set columns(+172) = "~Composto~~0"
	Set columns(+174) = "compostoCodigoTISS~C√≥digo(Guia TISS)~172~0~~~100~~~"
	Set columns(+176) = "compostoDescricaoTISS~Descri√ß√£o (Guia TISS)~172~0~~~250~~~"
	;Set columns(+188) = "compostoGrupoSubGrupoItem~Grupo/Subgrupo do Item~172~0~~~250~~~"
	Set columns(+180) = "compostoCodigoAlpha~C√≥digo (Item Cobr√°vel)~172~0~~~100~~~"
	Set columns(+182) = "compostoDescricaoAlpha~Descri√ß√£o (Item Cobr√°vel)~172~0~~~250~~~"
	Set columns(+184) = "compostoCentroCusto~Centro de Custo~172~0~~~120~~~"
	Set columns(+186) = "compostoValorUnitario~R$ Unit√°rio~172~0~~number~100~~#,##0.00~"
	Set columns(+188) = "compostoCustodoItem~Custo do Item~172~1~~number~100~~#,##0.00~"
	;
	Set columns(+196) = "nomeAcordo~Nome Acordo Comercial~~0~~~200~~~"
	Set columns(+199) = "tabelaAcordo~Tabela Comercial~~0~~~150~~~"
	Set columns(+202) = "qtde~Qtd.~~0~~number~100~~~"
	Set columns(+205) = "valorUnitario~R$ Unit√°rio~~0~~number~100~~#,##0.00~"
	Set columns(+208) = "valorTotal~R$ Total~~0~~number~100~~#,##0.00~"
	Set columns(+210) = "valorPago~R$ Pago~~0~~~100~~#,##0.00~"
	Set columns(+215) = "formaPagamento~Forma de Pagamento~~0~~~250~~~"
	Set columns(+220) = "dataPagamento~Data do Pagamento~~0~~~200~~~"
	Set columns(+225) = "statusPagamento~Status Pagamento~~0~~~150~~~"
	;
	Set columns(+230) = "~Lote de Faturamento~~0"
	Set columns(+235) = "numLote~N√∫mero~230~0~~~100~~~"
	Set columns(+240) = "periodoLoteFatIni~Per√≠odo Inicial~230~0~center~~120~~~periodoLoteFat"
	Set columns(+245) = "periodoLoteFatFin~Per√≠odo Final~230~0~center~~120~~~periodoLoteFat"
	Set columns(+250) = "statusLote~Status~230~1~~~150~~~"
	;
	Set columns(+255) = "~Nota Fiscal~~0"
	Set columns(+260) = "numNF~N√∫mero~255~0~~~100~~~"
	Set columns(+265) = "numRPS~No. RPS~255~0~~~100~~~"
	Set columns(+270) = "dtEmissaoNF~Emiss√£o~255~0~center~~100~~~"
	Set columns(+275) = "dtVencimentoNF~Vencimento~255~0~center~~120~~~"
	Set columns(+280) = "valorNF~R$~255~0~~number~100~~#,##0.00~"
	Set columns(+285) = "valorImpostoNF~R$ Imposto~255~1~~number~100~~#,##0.00~"
	;
	Set arrayColumns = []
	Set numColuna = ""
	For {
		Set numColuna = $Order(columns(numColuna))
		Quit:numColuna=""
		
		If ($Piece(columns(numColuna),"~",1) = "") {
			Set captionSubTitulo 	= $Piece(columns(numColuna),"~",2)
			Set arraySubTitulo 		= []
		}Else{
			Set list = {}
			Set list.dataField 	= $Piece(columns(numColuna),"~",1)
			Set list.caption		= $Piece(columns(numColuna),"~",2)
			Set:$Piece(columns(numColuna),"~",5)'="" list.alignment	= $Piece(columns(numColuna),"~",5)
			Set:$Piece(columns(numColuna),"~",6)'="" list.dataType	= $Piece(columns(numColuna),"~",6)
			Set:$Piece(columns(numColuna),"~",7)'="" list.width			= $Piece(columns(numColuna),"~",7)
			Set:$Piece(columns(numColuna),"~",8)'="" list.minWidth	= $Piece(columns(numColuna),"~",8)
			Set:$Piece(columns(numColuna),"~",9)'="" list.format		= $Piece(columns(numColuna),"~",9)
			;
			If ($Piece(columns(numColuna),"~",10)'="") {
				Set strColuna = ..GetStatusColuna(pRelatorio, $Piece(columns(numColuna),"~",10))
			}Else{
				Set strColuna = ..GetStatusColuna(pRelatorio, list.dataField )
			}
			If (strColuna = 2) Continue
			Set list.visible = strColuna
			;	
			If ($Piece(columns(numColuna),"~",3) '= "") {
				Do arraySubTitulo.%Push(list)
				If ($Piece(columns(numColuna),"~",4) = 1) {
					Set list = {}
					Set list.caption	= captionSubTitulo
					Set list.columns	= arraySubTitulo
					Do arrayColumns.%Push(list)
				}
			}Else{
				Do arrayColumns.%Push(list)
			}
		}
	}	
	Return arrayColumns]]></Implementation>
</Method>

<Method name="GetStatusColuna">
<ClassMethod>1</ClassMethod>
<FormalSpec>pRelatorio,pColuna</FormalSpec>
<Implementation><![CDATA[	New (pRelatorio, pColuna)
	Set YM = 0
	Set Y  = "~"
	Set piece = $Order(^WWW003s(YM,3,"VAREXTRATOFATURCOLUNAS",$ZConvert(pColuna,"U"),"VARExtratoFaturColunas",""))
	Return +$Piece($Get(^VARExtratoFaturColunas(YM, pRelatorio, 1)),Y,piece)]]></Implementation>
</Method>

<Method name="GetRelatorio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y		= "~"
	;
	Set YBED 		= $Get(%request.Data("YBED",1))
	Set retorno = []
	;
	Set meuSQL = "Select * From SQLUser.VARExtratoFaturColunas Where Company = 0 "
	Set rSet 	 = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)	;
	While (rSet.%Next()) {
		Set list = {}
		Set list.relatorio = rSet.%Get("Relatorio")
		Set list.toolbar = +rSet.%Get("toolbar")
		Set list.filtros = +rSet.%Get("filtros")
		Set list.numAdmissao = +rSet.%Get("numAdmissao")
		Set list.dtAdmissao = +rSet.%Get("dtAdmissao")
		Set list.hrAdmissao = +rSet.%Get("hrAdmissao")
		Set list.numAgendamento = +rSet.%Get("numAgendamento")
		Set list.dtAgendamento = +rSet.%Get("dtAgendamento")
		Set list.hrAgendamento = +rSet.%Get("hrAgendamento")
		Set list.prestador = +rSet.%Get("prestador")
		Set list.pacienteNome = +rSet.%Get("pacienteNome")
		Set list.prontuario = +rSet.%Get("prontuario")
		Set list.dtNascimento = +rSet.%Get("dtNascimento")
		Set list.sexo = +rSet.%Get("sexo")
		Set list.nomeMae = +rSet.%Get("nomeMae")
		Set list.cpf = +rSet.%Get("cpf")
		Set list.rg = +rSet.%Get("rg")
		Set list.cns = +rSet.%Get("cns")
		Set list.telefone = +rSet.%Get("telefone")
		Set list.email = +rSet.%Get("email")
		Set list.enderecoLog = +rSet.%Get("enderecoLog")
		Set list.enderecoBairro = +rSet.%Get("enderecoBairro")
		Set list.enderecoCidade = +rSet.%Get("enderecoCidade")
		Set list.enderecoEstado = +rSet.%Get("enderecoEstado")
		Set list.enderecoCEP = +rSet.%Get("enderecoCEP")
		Set list.fontePagadora = +rSet.%Get("fontePagadora")
		Set list.convenio = +rSet.%Get("convenio")
		Set list.plano = +rSet.%Get("plano")
		Set list.carteirinha = +rSet.%Get("carteirinha")
		Set list.solicitante = +rSet.%Get("solicitante")
		Set list.codigoTISS = +rSet.%Get("codigoTISS")
		Set list.descricaoTISS = +rSet.%Get("descricaoTISS")
		Set list.grupoSubGrupoItem = +rSet.%Get("grupoSubGrupoItem")
		Set list.codigoAlpha = +rSet.%Get("codigoAlpha")
		Set list.descricaoAlpha = +rSet.%Get("descricaoAlpha")
		Set list.centroCusto = +rSet.%Get("centroCusto")
		Set list.medicoAgendamento = +rSet.%Get("medicoAgendamento")
		Set list.custodoItem = +rSet.%Get("custodoItem")
		Set list.nomeAcordo = +rSet.%Get("nomeAcordo")
		Set list.tabelaAcordo = +rSet.%Get("tabelaAcordo")
		Set list.qtde = +rSet.%Get("qtde")
		Set list.valorUnitario = +rSet.%Get("valorUnitario")
		Set list.valorTotal = +rSet.%Get("valorTotal")
		Set list.valorPago = +rSet.%Get("valorPago")
		Set list.formaPagamento = +rSet.%Get("formaPagamento")
		Set list.dataPagamento = +rSet.%Get("dataPagamento")
		Set list.statusPagamento = +rSet.%Get("statusPagamento")
		Set list.numLote = +rSet.%Get("numLote")
		Set list.periodoLoteFat = +rSet.%Get("periodoLoteFat")
		Set list.numRPS = +rSet.%Get("numRPS")
		Set list.statusLote = +rSet.%Get("statusLote")
		Set list.numNF = +rSet.%Get("numNF")
		Set list.dtEmissaoNF = +rSet.%Get("dtEmissaoNF")
		Set list.dtVencimentoNF = +rSet.%Get("dtVencimentoNF")
		Set list.valorNF = +rSet.%Get("valorNF")
		Set list.valorImpostoNF = +rSet.%Get("valorImpostoNF")
		;
		Set list.compostoCodigoTISS = +rSet.%Get("compostoCodigoTISS")
		Set list.compostoDescricaoTISS = +rSet.%Get("compostoDescricaoTISS")
		;Set list.compostoGrupoSubGrupoItem = +rSet.%Get("compostoGrupoSubGrupoItem")
		Set list.compostoCodigoAlpha = +rSet.%Get("compostoCodigoAlpha")
		Set list.compostoDescricaoAlpha = +rSet.%Get("compostoDescricaoAlpha")
		Set list.compostoCentroCusto = +rSet.%Get("compostoCentroCusto")
		Set list.compostoValorUnitario = +rSet.%Get("compostoValorUnitario")
		Set list.compostoCustodoItem = +rSet.%Get("compostoCustodoItem")
		;
		Do retorno.%Push(list)
	}
	;
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SetRelatorio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pID,pObjDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y			= "~"
	Set YBED 	= pYBED
	
	Set relatorio = pID
	Set objeto 		= ""
	If (relatorio '= "") Set objeto = $Get(^VARExtratoFaturColunas(YM, relatorio, 1)) 
	
	Set index = "" 
	For {
		Set index = $Order(pObjDados(index)) 
		Quit:index=""

		Set campo = $ZConvert($Piece(pObjDados(index),"~",1),"U")
		Set valor = $Piece(pObjDados(index),"~",2)
		
		If (campo = "RELATORIO") {
			Set relatorio = valor
			Continue
		}
		
		Set piece = $Order(^WWW003s(YM,3,"VAREXTRATOFATURCOLUNAS",campo,"VARExtratoFaturColunas",""))
		If (piece'="") {
			Set $Piece(objeto,Y,piece) = valor
		}		
	}
	Return $$$Save("VARExtratoFaturColunas", relatorio, objeto, $$$YES)]]></Implementation>
</Method>

<Method name="ExcRelatorio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pID,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y			= "~"
	Set YBED 	= pYBED
	
	Return $$$Kill("VARExtratoFaturColunas", pID)]]></Implementation>
</Method>
</Class>
</Export>