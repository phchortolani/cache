<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsMsgSearchForm">
<Description><![CDATA[
An autoform for gathering Message Filter info]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject,%CSP.Util.AutoForm</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Property name="Query">
<Description><![CDATA[
Message status]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="Query"/>

<Parameter name="MAXLEN" value="500"/>
</Property>

<UDLText name="T">
<Content>
// Number of rows to display

</Content>
</UDLText>


<Property name="MaxRows">
<Type>%Integer</Type>

<Parameter name="MINVAL" value="1"/>
</Property>


<Method name="CreateInstance">
<Description><![CDATA[
Number of rows to display]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pID:%String</FormalSpec>
<ReturnType>%CSP.Util.AutoForm</ReturnType>
<Implementation><![CDATA[
#define SetPropVal(%prop)	Set tObj.%prop = $G(%request.Data("%prop",1))

	Set tObj = ..%New()

	$$$SetPropVal(MaxRows)
	
	Set tObj.Query = $G(%session.Data("MsgSearch","Query"))
	
	If (+tObj.MaxRows <= 0) {
		Set tObj.MaxRows = 100
	}

	Quit tObj
]]></Implementation>
</Method>

<Method name="OnSubmit">
<FormalSpec>&amp;pID:%String,pSubmit:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
#define GetPropVal(%prop) Set ..%prop=$ZStrip(..%prop,"<>W") Set:..%prop'="" %response.Context("%prop") = ..%prop

	$$$GetPropVal(MaxRows)

	// Place query into Session, not URL
	Set %session.Data("MsgSearch","Query") = ..Query

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnDefineButtons">
<Description><![CDATA[
define buttons]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pButtons:%CSP.Util.FormButton</FormalSpec>
<Implementation><![CDATA[
	Set pButtons(1) = ##class(%CSP.Util.FormButton).%New()
	Set pButtons(1).Name = "$AUTOFORM_SEARCH"
	Set pButtons(1).Caption = $$$Text("Search")
	Set tPortNumber = ##class(%SQL.Manager.API).GetPort()
	//Set tHost = $G(%request.CgiEnvs("HTTP_HOST"),"127.0.0.1:"_tPortNumber)
	Set pButtons(2) = ##class(%CSP.Util.FormButton).%New()
	Set pButtons(2).Name = "$AUTOFORM_QUERYBUILER"
	Set pButtons(2).Caption = $$$Text("Query Builder")
	//Set pButtons(2).HREF = "http://"_tHost_"/csp/cachelib/UtilQueryBuilder.csp?ClassFilter=Ens.MessageBody&ColumnType=1"
	Set pButtons(2).OnClick = "launchPopupWindow('%CSP.UI.SQL.QueryBuilderWindow.cls?ClassFilter=Ens.MessageBody&ColumnType=2&$NAMESPACE="_$zu(5)_"','resizable','QueryBuilder');"

	Set pButtons(2).Type = "popup"
]]></Implementation>
</Method>

<Method name="DrawHTMLForm">
<Description><![CDATA[
Draw an HTML form for this form object.<BR>
<var>pObj</var> is an instance of the form object that
provides the initial values for the form.<BR>
<var>pActionURL</var> is the URL to submit this form to.<BR>
<var>pButtons</var> is an array of submit buttons to display for the form. If 
not provided, the default <I>Save</I> and <I>Cancel</I> buttons are shown.
<var>pButtons</var> is an integer-subscripted array of <class>FormButton</class> objects.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<FormalSpec>pObj:%RegisteredObject,&amp;pID:%String,pActionURL:%String="&quot;,&amp;pButtons:FormButton,pTarget:%String="&quot;</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// test if object is valid
	//Do %code.WriteLine(" If ('$IsObject(pObj)) {")
	//Do %code.WriteLine(" 	Quit $$$ERROR($$$GeneralError,""Invalid object."")")
	//Do %code.WriteLine(" }")

	// Specific for this form:
	Do %code.WriteLine( " &js<<script language=""javascript"">")
	Do %code.WriteLine( " function loadQuery(statement)")
	Do %code.WriteLine( " {")
	Do %code.WriteLine( "   if (statement != """") document.theForm.Query.value = statement;")
	Do %code.WriteLine( " }")
	Do %code.WriteLine( " </script>>")
	
	// generate FORM/TABLE headers
	Do %code.WriteLine(" &html<<FORM ACTION=""#(pActionURL)#"" METHOD=""POST"" NAME=""theForm"" TARGET=""#(pTarget)#"">>")

	Do %code.WriteLine(" &html<<INPUT TYPE=""HIDDEN"" NAME=""$CLASS"" VALUE=""" _ %class.Name _ """>>")
	Do %code.WriteLine(" &html<<INPUT TYPE=""HIDDEN"" NAME=""$FRAME"" VALUE=""#(pTarget)#"">>")
	Do %code.WriteLine(" &html<<input type=""HIDDEN"" name=""CSPCHD"" VALUE=""#(%session.CSPSessionCookie)#"">>")

	Do %code.WriteLine(" Set id = $O(pID(""""))")
	Do %code.WriteLine(" While (id '= """") {")
	Do %code.WriteLine(" 	&html<<INPUT TYPE=""HIDDEN"" NAME=""$ID#(id)#"" VALUE=""#($ZCVT(pID(id),""O"",""HTML""))#"">>")
	Do %code.WriteLine(" 	Set id = $O(pID(id))")
	Do %code.WriteLine(" }")
	
	// do not create fields for ourself...
	If ('$G(%parameter("COMMANDFORM"))) {
		If (%class.Name '= "%CSP.Util.AutoForm") {
			Do %code.WriteLine(" &html<<TABLE CLASS=""AutoForm"">>")
		
			// now generate HTML for all of our properties
			Set tCol = 0
			Set sc = ##class(%CSP.Util.AutoFormGenerator).GenerateHTMLForm(%class.Name,%code,.tCol,$G(%parameter("FORMCOLUMNS"),1))
			If ($$$ISERR(sc)) {
				Quit sc
			}
			Do %code.WriteLine(" &html<<TR><TD CLASS=""AutoFormLabel"">&nbsp;</TD>>")
			Do %code.WriteLine(" &html<<TD CLASS=""AutoFormButton"">>")
		}
	}
	Else {
		// command form
	}
	
	// test for user-provided buttons method
	If $$$comMemberKeyGet(%class.Name,$$$cCLASSmethod,"OnDefineButtons",$$$cMETHrunnable) {
		Do %code.WriteLine(" If ('$D(pButtons)) {")
		Do %code.WriteLine(" 	Do ..OnDefineButtons(.pButtons)")
		Do %code.WriteLine(" }")
	}
	
	// button(s)
	Do %code.WriteLine(" Do ..DrawFormButtons(.pButtons)")
	
	If ('$G(%parameter("COMMANDFORM"))) {
		If (%class.Name '= "%CSP.Util.AutoForm") {
			Do %code.WriteLine(" &html<</TD></TR></TABLE>>")
		}
	}
	Do %code.WriteLine(" &html<</FORM>>")
	Do %code.WriteLine(" Quit $$$OK")
	
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>