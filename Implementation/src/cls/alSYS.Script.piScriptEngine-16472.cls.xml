<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSYS.Script.piScriptEngine">
<Description><![CDATA[
Private Interface for The Scripting Tool<br>
This provides basic logic for the scripting tool that does not need or want to be
in the major interface (IScript or IScriptEngine)
<br>
	The Methods within this class are called only from the within the package. That is 
	to say anything within <code>alSYS.Script</code>.<br>
	
]]></Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>

<Method name="GetAllowedObject">
<ClassMethod>1</ClassMethod>
<FormalSpec>pPackage:%String</FormalSpec>
<ReturnType>alSYS.Script.data.dScriptAllowedObjs</ReturnType>
<Implementation><![CDATA[	quit ##class(alSYS.Script.data.dScriptAllowedObjs).%OpenId(pPackage)
]]></Implementation>
</Method>

<Method name="compile">
<Description><![CDATA[
Compiles the Script<br>
Calls the <code>compileScript</code> method with the <code>alSYS.Compile.iCompile</code>
 class. This handles the creation of the class and scripts. <b>See alSYS.Compile.iCompile</b>
for more details. 
<p>

 Params:<br>
 pScriptClass					The ScripClass <code>alSYS.Script.data.dScriptClass</code><br>

 Returns: <br>
 a status of the compilation<br>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pScriptClass:alSYS.Script.data.dScriptClass</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 17-Oct-2007	LB		SR15616: Moved from iTUI 
	; 10-Oct-2007	LB		SR15616: Created 
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	if pScriptClass '= "" {
		set sc = ##class(alSYS.Compile.iCompile).compileScript(pScriptClass)
	}
	quit sc
]]></Implementation>
</Method>

<Method name="getScriptTypeOnScreen">
<Description><![CDATA[
Returns On Screen Text for a given Type<br>
Opens and returns the onscreen value of <code>alSYS.Script.data.dScriptType</code>
 <br>
 
 TODO<br> 
 Make changes here to handle internationalisation 
<p>

 Params:<br>
 piValue			the Index of the class to open 

 Returns: <br>
The string value of the onscreen text<br>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>piValue:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 10-Oct-2007	LB		SR15616: Created 
	;-------------------------------------------------------------------------------
	set objType=##class(alSYS.Script.data.dScriptType).%OpenId(piValue)
	quit objType.OScreenText
]]></Implementation>
</Method>

<Method name="getStartNode">
<ClassMethod>1</ClassMethod>
<ReturnType>alSYS.Script.data.dScriptType</ReturnType>
<Implementation><![CDATA[
	set rs = ##class(%ResultSet).%New()
	do rs.Prepare("SELECT %ID FROM alSYS_Script_data.dScriptType WHERE type ='0' ")
	set returnval = ""
	do rs.Execute()
	
	while (rs.Next(.sc)) {
		if ($SYSTEM.Status.IsOK(sc)) {
			set returnval=##class(alSYS.Script.data.dScriptType).%OpenId(rs.Data("ID"))
		}
	}
	
	quit returnval
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alSYS.Script.piScriptEngineD</DataLocation>
<DefaultData>piScriptEngineDefaultData</DefaultData>
<IdLocation>^alSYS.Script.piScriptEngineD</IdLocation>
<IndexLocation>^alSYS.Script.piScriptEngineI</IndexLocation>
<StreamLocation>^alSYS.Script.piScriptEngineS</StreamLocation>
<Data name="piScriptEngineDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>