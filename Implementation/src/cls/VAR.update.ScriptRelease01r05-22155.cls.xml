<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.update.ScriptRelease01r05">
<ClassType/>
<Import>alWEB.WS,VAR.infra.webservice.alphalinc,VAR.infra.integracao</Import>
<IncludeCode>VARConst,COMSYS,WWWConst,VARLog,INConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>VAR.update.ScriptRelease</Super>

<Parameter name="PARAMMODCONTRATO">
<Type>%String</Type>
<Default>PARAM_MODULO_CONTRATO</Default>
</Parameter>

<Parameter name="PARAMMODPACIENTE">
<Type>%String</Type>
<Default>PARAM_MODULO_PACIENTE</Default>
</Parameter>

<Parameter name="PARAMDUALCREATION">
<Type>%String</Type>
<Default>PARAM_DUAL_CREATION</Default>
</Parameter>

<Parameter name="PARAMMEDINDEX">
<Type>%String</Type>
<Default>PARAM_MED_INDEX</Default>
</Parameter>

<Parameter name="PARAMMEDTOLERANCIA">
<Type>%String</Type>
<Default>PARAM_MED_TOLERANCIA</Default>
</Parameter>

<Parameter name="PARAMMODTRANSFERENCIA">
<Type>%String</Type>
<Default>PARAM_MODULO_TRANSFERENCIA</Default>
</Parameter>

<Parameter name="PARAMDESATIVARGERLOGCODIGO">
<Type>%String</Type>
<Default>PARAM_DESATIVAR_GER_LOG_CODIGO</Default>
</Parameter>

<Parameter name="PARAMOUTRASSAIDAS">
<Type>%String</Type>
<Default>PARAM_MODULO_OUTRAS_SAIDAS</Default>
</Parameter>

<Parameter name="PARAMIMAGEMLOGIN">
<Type>%String</Type>
<Default>PARAM_IMAGEM_LOGIN</Default>
</Parameter>

<Parameter name="PARAMPROCESSRECEIPT">
<Type>%String</Type>
<Default>PARAM_PROCESS_RECEIPT</Default>
</Parameter>

<Parameter name="PARAMFORNECEDOROCORRENCIA">
<Type>%String</Type>
<Default>PARAM_MODULO_FORNECEDOR_OCORRENCIA</Default>
</Parameter>

<Parameter name="CONTROLEVIRTUALIP">
<Type>%String</Type>
<Default>CONTROLE_VIRTUAL_IP</Default>
</Parameter>

<Parameter name="PARAMMODULO">
<Type>%String</Type>
<Default>PARAM_MODULO</Default>
</Parameter>

<Parameter name="PARAMLIMPEZASERVICOSSES">
<Type>%String</Type>
<Default>PARAM_LIMPEZA_SERVICOS_SES</Default>
</Parameter>

<Parameter name="PARAMSEQWWW128">
<Type>%String</Type>
<Default>PARAM_SEQ_WWW128</Default>
</Parameter>

<Parameter name="PARAMPARAMETROCLIENTE">
<Type>%String</Type>
<Default>PARAM_PARAMETRO_CLIENTE</Default>
</Parameter>

<Parameter name="PARAMFOCOPACIENTE">
<Type>%String</Type>
<Default>PARAM_FOCO_PACIENTE</Default>
</Parameter>

<Parameter name="PARAMINDEXINAUF">
<Type>%String</Type>
<Default>PARAM_INDEX_INAUF</Default>
</Parameter>

<Parameter name="PARAMINDEXMEDADMISSION">
<Type>%String</Type>
<Default>PARAM_INDEX_MEDADMISSION</Default>
</Parameter>

<Parameter name="PARAMITEMSTATUS">
<Type>%String</Type>
<Default>PARAM_ITEM_STATUS</Default>
</Parameter>

<Parameter name="PARAMNEWFORMSCAN">
<Type>%String</Type>
<Default>PARAM_NEW_FORM_SCAN</Default>
</Parameter>

<Parameter name="PARAMBUYINGDISCOUNT">
<Type>%String</Type>
<Default>PARAM_BUYING_DISCOUNT_V2</Default>
</Parameter>

<Parameter name="PARAMDEFINECODINFOSAUDEPEDIDOCOMPRA">
<Type>%String</Type>
<Default>PARAM_DEFINE_COD_INFOSAUDE_PEDIDOCOMPRA</Default>
</Parameter>

<Parameter name="PARAMREBUILDINRECINDEXES">
<Type>%String</Type>
<Default>PARAM_REBUILD_INREC_INDEXES_V2</Default>
</Parameter>

<Parameter name="PARAMDEFINENROINFOSAUDEOCORRENCIA">
<Type>%String</Type>
<Default>PARAM_DEFINE_NRO_INFOSAUDE_OCORRENCIA</Default>
</Parameter>

<Parameter name="PARAMLIMPEZACLASSEENVIRONMENT">
<Type>%String</Type>
<Default>PARAM_LIMPEZA_CLASSE_ENVIRONMENT</Default>
</Parameter>

<Parameter name="PARAMWWW128VARCONFIGIMPETIQUETA">
<Type>%String</Type>
<Default>PARAM_WWW128_VAR_CONFIG_IMP_ETIQUETA</Default>
</Parameter>

<Parameter name="PARAMCORRECAOFREE4INISSUE">
<Type>%String</Type>
<Default>PARAM_CORRECAO_FREE4_INISSUE</Default>
</Parameter>

<Parameter name="PARAMREGERARJAVASCRIPTS">
<Type>%String</Type>
<Default>PARAM_REGERAR_JAVASCRIPTS</Default>
</Parameter>

<Method name="UpdateBuild009">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
	if (+..GetParameter(..#PARAMREGERARJAVASCRIPTS) = 0) {
		$$$VAR
		SET SPRACHE="PT"
		do CreateJSFiles^COMUpgradeHandler("")
		do ..SetParameter(..#PARAMREGERARJAVASCRIPTS, 1)
	}
	
	do ..IncMinorRelease()
	
	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild008">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
	if (+..GetParameter(..#PARAMCORRECAOFREE4INISSUE) = 0) {
		// Correção do campo FREE4(local de admissão) das dispensações 
		// que estava gravando o nome do local ao invés do código do local
		// Esse SQL faz a manutenção das antigas dispensações, as novas ja estão salvando o código.
		&sql(
			UPDATE SQLUser.INIssue
			SET FREE4 = (SELECT Location FROM SQLUser.WWW0121 WHERE LocationName = INIssue.FREE4)
			WHERE FREE4 <> ''
			AND Type = 3
		)
		if ('SQLCODE) { 
			do ..SetParameter(..#PARAMCORRECAOFREE4INISSUE, 1)
		}
	}
	
	do ..IncBuild()

	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild007">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
	
	if (+..GetParameter(..#PARAMIMAGEMLOGIN) = 0) {
		$$$VAR
		new idEmpresa,objEmpresa,namespace
		set idEmpresa  = YM
		set objEmpresa = $get(^WWW012(YM,YM,1))
		set namespace  = $znspace

		set $$$WWW012LogoPicture(objEmpresa) = "VARLoginLeft_"_namespace_".jpg"
		set strStatus = $$$Save("WWW012",idEmpresa,objEmpresa,$$$YES)

		if ($$$ISOK(strStatus)){
			do ..SetParameter(..#PARAMIMAGEMLOGIN, 1)	
		} else {
			write !,strStatus,!
		}
	}

	if (+..GetParameter(..#PARAMPROCESSRECEIPT) = 0) {
		$$$VAR
		set ScanReceipt = ##class(%ResultSet).%New()  ;Create Result Set Object
		set mySql = ""
	 	set mySql = mySql_"SELECT ReceiptNumber "
		set mySql = mySql_"FROM   INREC INNER JOIN INAUF as INAUF ON OrderNumber  = INREC.FREE10 "
		set mySql = mySql_"WHERE  INAUF.FREE14 = '3' AND INREC.Firmed = '1' "
	
		do ScanReceipt.Prepare(mySql)  ;Prepare Query
		do ScanReceipt.Execute()       ;Execute Query	

		set strStatus = $$$NO
		while (ScanReceipt.Next()) {
			set Recebimento = ScanReceipt.GetData(1)		
			set strStatus =  $$OnAfterSave^VARINReceipt(Recebimento)
		}

		do ScanReceipt.Close()

		if ($$$ISOK(strStatus)){
			do ..SetParameter(..#PARAMPROCESSRECEIPT, 1)	
		}
		else {
			write !,strStatus_" não ok",!
		}
	}

	if (+..GetParameter(..#PARAMFORNECEDOROCORRENCIA) = 0) {
	 	$$$VAR
		// Criação do módulo de Ocorrencia de Fornecedor
		new idModulo, objModulo
		set idModulo = 9
		set $$$VARBRModuloNomeModulo(objModulo) = "FornecedorOcorrencia"
		set $$$VARBRModuloSiglaModulo(objModulo) = "FOC"
		set strStatus = $$$Save("VARBRModulo",idModulo,objModulo,$$$YES)
		if (strStatus = 1) { 
			// Criação do Diretórios para Arquivos do módulo de Ocorrencia de Fornecedor
			new idDiretorio, objDiretorio
			set idDiretorio = 9
			set $$$VARBRDiretoriosDiretorioFisico(objDiretorio) = "FornecedorOcorrencia"
			set $$$VARBRDiretoriosDescricao(objDiretorio) = "Arquivo de Ocorrencia de Fornecedor"
			set $$$VARBRDiretoriosDiretorioVirtual(objDiretorio) = "FornecedorOcorrencia"
			set $$$VARBRDiretoriosDiretorioPai(objDiretorio) = 0
			set strStatus = $$$Save("VARBRDiretorios",idDiretorio,objDiretorio,$$$YES)
	
			// Cria o novo diretório para Outras Saidas
			do ##class(%File).CreateDirectory($$GetDiretorioFisico^VARBRDiretorios(0,0)_"\FornecedorOcorrencia")
		}
		if (strStatus = 1) { 
			do ..SetParameter(..#PARAMFORNECEDOROCORRENCIA, 1)
		}
	}

	if (+..GetParameter(..#CONTROLEVIRTUALIP) = 0) {
		do ..SetShadowComputers("AMEDISC2")

		if (..IsShadowComputer()) {
			set objVARParametroCliente = ^VARParametroCliente(0,0,1)
			set $$$VARParametroClienteCaminhoVirtualIP(objVARParametroCliente) = "D:\Alphalinc\virtualip\bin\"
			set strStatus = $$$Save("VARParametroCliente",0,objVARParametroCliente,$$$YES)
			if ($$$ISOK(strStatus)) { 
				$$$VARLOGINFO("Caminho do virtual IP configurado com sucesso!")
			}
			else {
				$$$VARLOGERROR("Erro ao gravar o Caminho do virtual IP na máquina shadow")
			}
		}
		do ..SetParameter(..#CONTROLEVIRTUALIP, 1)
	}

	if ('+..GetParameter(..#PARAMLIMPEZASERVICOSSES)) {
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.integration.FaturamentoRunner")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infra.integration.FaturamentoRunner")
		}
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.integration.FinalizaPrescRunner")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infra.integration.FinalizaPrescRunner")
		}
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.mail.MailDifCoreVarRunner")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infra.mail.MailDifCoreVarRunner")
		}
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.stock.AbcRunner")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infra.stock.AbcRunner")
		}
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.stock.BalanceteRunner")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infra.stock.BalanceteRunner")
		}
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.stock.StockHistoryRunner")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infra.stock.StockHistoryRunner")
		}
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.transfer.AutoCloseSolicRunner")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infra.transfer.AutoCloseSolicRunner")
		}

		do ..SetParameter(..#PARAMLIMPEZASERVICOSSES, 1)
	}

	if ('+..GetParameter(..#PARAMSEQWWW128)) {
		set ^WWW128(0,"VARFechamentoContabil",1) = "YEAR/000000~1~1~2012"
		do ..SetParameter(..#PARAMSEQWWW128, 1)
	}
	
	if ('+..GetParameter(..#PARAMFOCOPACIENTE)) {
		$$$VAR
		new idForm,objWWW120,strStatus
		set idForm  	= "INDispenseToPatient"
		set objWWW120 	= $get(^WWW120(YM,idForm,1))

		set $$$WWW120FirstFocusToDataFieldNumb(objWWW120) = $$$FldINIssueCustomerName
		set strStatus = $$$Save("WWW120",idForm,objWWW120,$$$YES)
		
		if ($$$ISOK(strStatus)){
			do ..SetParameter(..#PARAMFOCOPACIENTE, 1)	
			write !,"Definido o foco no campo de paciente com sucesso!",!
		} else {
			write !,"Falha ao definir o foco no campo de paciente!",!
		}
	}
	
	if ('+..GetParameter(..#PARAMINDEXINAUF)) {
		do ^WWWVAR
		set VORG(1) = "INAUF"
		do ^WWWSORT
		
		do ..SetParameter(..#PARAMINDEXINAUF, 1)
	}

	if ('+..GetParameter(..#PARAMINDEXMEDADMISSION)) {
		do ^WWWVAR
		set VORG(1) = "MEDAdmission"
		do ^WWWSORT
		
		do ..SetParameter(..#PARAMINDEXMEDADMISSION, 1)
	}
	
	if ('+..GetParameter(..#PARAMITEMSTATUS)) {
		//	^INItemStatus(0,0,1)="Ativo~1~1~1~1~1~1~1~1~1~CARLOS~61963,70445~NATALIA~62369,41488~~~~~~15"
		//	^INItemStatus(0,1,1)="Ativo (Compra Suspensa)~~~~1~1~1~1~1~1~CARLOS~61963,70445~MARCELO~62333,61010~~~~~~49"
		//	^INItemStatus(0,2,1)="Ativo (Reposição Suspensa)~~~~1~~~1~1~1~MARCELO~62333,60810~MARCELO~62333,61024~~~~~~30"
		//	^INItemStatus(0,3,1)="Inativo~~~~~~~~~~MARCELO~62333,60804~MARCELO~62333,61043~~~~~~101"
		do ^WWWVAR
		kill ^INItemStatus(0,2,1)
		kill ^INItemStatus(0,3,1)
		set ^INItemStatus(0,0,1)="Ativo~1~1~1~1~1~1~1~~1~CARLOS~61963,70445"
		set ^INItemStatus(0,1,1)="Inativo~~~~~~~~~~CARLOS~61963,70445"
		set VORG(1) = "INItemStatus"
		do ^WWWSORT
		
		set status = $$$OK
		set key = ""
		for {
			set key = $order(^INART(YM,key))
			if ($length(key) = 0) quit
			set objINART = ^INART(YM,key,1)
			if (+$$$INARTHoldReason(objINART) > 1) {
				set $$$INARTHoldReason(objINART) = 1
				set status = $$$Save("INART",key,objINART,$$$YES)
				if $$$ISERR(status) quit
			}
		}
		if ($$$ISOK(status)){
			do ..SetParameter(..#PARAMITEMSTATUS, 1)
		}
	}
	
	if (+..GetParameter(..#PARAMNEWFORMSCAN) = 0) {
		;----------------------------------------------------------
		; INIssueRevLine
		;----------------------------------------------------------
		;Acrescentando um AddLineScan no form INIssueRevLine
		set objIssueRevLine = ""
		set $$$WWW120ScanOperation(objIssueRevLine) = "INIssue Rev Line"
		set $$$WWW120ScanEnableScanning(objIssueRevLine) = "1"
		set $$$WWW120ScanScanClass(objIssueRevLine) = "INART"
		set $$$WWW120ScanExecuteOnScan(objIssueRevLine) = "AddScanLine^INIssueRevLineScan(pidScan)"
		set strStatus = $$$Save("WWW120Scan","INIssueRevLine",objIssueRevLine,1)

		if $$$ISERR(strStatus) {
			set strStatus = "Erro ao atualizar o form para scan INIssueRevLine = "_$$DecodeError^COMUtilError(strStatus,$$$YES)
			quit strStatus
		}
	
		;----------------------------------------------------------
		; INADJLine
		;----------------------------------------------------------
		;Acrescentando um AddLineScan no form INADJLine
		set objINADJLine = ""
		set $$$WWW120ScanOperation(objINADJLine) = "INADJ Line"
		set $$$WWW120ScanEnableScanning(objINADJLine) = "1"
		set $$$WWW120ScanScanClass(objINADJLine) = "INART"
		set $$$WWW120ScanExecuteOnScan(objINADJLine) = "AddScanLine^INADJLineScan(pidScan)"
		set strStatus = $$$Save("WWW120Scan","INADJLine",objINADJLine,1)

		if $$$ISERR(strStatus) {
			set strStatus = "Erro ao atualizar o form para scan INADJLine = "_$$DecodeError^COMUtilError(strStatus,$$$YES)
			quit strStatus
		}
		
		;----------------------------------------------------------
		; VARINADJLinha
		;----------------------------------------------------------
		;Acrescentando um AddLineScan no form VARINADJLinha
		set objINADJLinha = ""
		set $$$WWW120ScanOperation(objINADJLinha) = "INADJ Line"
		set $$$WWW120ScanEnableScanning(objINADJLinha) = "1"
		set $$$WWW120ScanScanClass(objINADJLinha) = "INART"
		set $$$WWW120ScanExecuteOnScan(objINADJLinha) = "AddScanLine^INADJLineScan(pidScan)"
		set strStatus = $$$Save("WWW120Scan","VARINADJLinha",objINADJLinha,1)

		if $$$ISERR(strStatus) {
			set strStatus = "Erro ao atualizar o form para scan VARINADJLinha = "_$$DecodeError^COMUtilError(strStatus,$$$YES)
			quit strStatus
		}
		
		;----------------------------------------------------------
		; VARINADJDoacaoLinha
		;----------------------------------------------------------
		;Acrescentando um AddLineScan no form VARINADJDoacaoLinha
		set objINADJDoacaoLinha = ""
		set $$$WWW120ScanOperation(objINADJDoacaoLinha) = "INADJ Line"
		set $$$WWW120ScanEnableScanning(objINADJDoacaoLinha) = "1"
		set $$$WWW120ScanScanClass(objINADJDoacaoLinha) = "INART"
		set $$$WWW120ScanExecuteOnScan(objINADJDoacaoLinha) = "AddScanLine^INADJLineScan(pidScan)"
		set strStatus = $$$Save("WWW120Scan","VARINADJDoacaoLinha",objINADJDoacaoLinha,1)

		if $$$ISERR(strStatus) {
			set strStatus = "Erro ao atualizar o form para scan INADJLine = "_$$DecodeError^COMUtilError(strStatus,$$$YES)
			quit strStatus
		}
		
		
		set objSystemSetup = $get(^WWWSystemSetup(0,0,1))
		set $$$WWWTransactionTransactionControl(objSystemSetup) = $$$WWWTransactionTransactionControl(objSystemSetup)_";"_
																	"INADJLine"_";"_
																	"INIssueRevLine"_";"_
																	"VARINADJDoacaoLinha"_";"_
																	"VARINADJLinha"
																	
		set strStatus = $$$Save("WWWSystemSetup","0",objSystemSetup,1)
																	
		
		if $$$ISOK(strStatus) {
			do ..SetParameter(..#PARAMNEWFORMSCAN, 1)
		}
	}

	if (+..GetParameter(..#PARAMBUYINGDISCOUNT) = 0) {
		$$$VAR

		set strStatus = $$$Kill("INSUPBuyingDiscount", "FR")
		if ($$$ISOK(strStatus)) {
			set strStatus = $$$Kill("INSUPBuyingDiscount", "TAX")
		}
		if ($$$ISOK(strStatus)) {
			set strStatus = $$$Kill("INSUPBuyingDiscount", "DescontoPerc")
		}
		if ($$$ISOK(strStatus)) {
			set strStatus = $$$Kill("INSUPBuyingDiscount", "IPIPerc")
		}

		if ($$$ISOK(strStatus)) {
			set idINSUPBuyingDiscount = "Acrescimos"
			set objINSUPBuyingDiscount = ""
			set $$$INSUPBuyingDiscountDescription(objINSUPBuyingDiscount) = "Acréscimos"
			set $$$INSUPBuyingDiscountSurcharge(objINSUPBuyingDiscount) = 1
			set $$$INSUPBuyingDiscountCostAllocation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountAmountCalculation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountCostDistribution(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountChargeGroup(objINSUPBuyingDiscount) = 5
			set strStatus = $$$Save("INSUPBuyingDiscount", idINSUPBuyingDiscount, objINSUPBuyingDiscount, 1)
		}

		if ($$$ISOK(strStatus)) {
			set idINSUPBuyingDiscount = "CIF"
			set objINSUPBuyingDiscount = ""
			set $$$INSUPBuyingDiscountDescription(objINSUPBuyingDiscount) = "CIF"
			set $$$INSUPBuyingDiscountSurcharge(objINSUPBuyingDiscount) = 1
			set $$$INSUPBuyingDiscountCostAllocation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountAmountCalculation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountCostDistribution(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountChargeGroup(objINSUPBuyingDiscount) = 4
			set strStatus = $$$Save("INSUPBuyingDiscount", idINSUPBuyingDiscount, objINSUPBuyingDiscount, 1)
		}

		if ($$$ISOK(strStatus)) {
			set idINSUPBuyingDiscount = "DescontoValor"
			set objINSUPBuyingDiscount = ""
			set $$$INSUPBuyingDiscountDescription(objINSUPBuyingDiscount) = "Desconto R$"
			set $$$INSUPBuyingDiscountCostAllocation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountAmountCalculation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountCostDistribution(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountChargeGroup(objINSUPBuyingDiscount) = 1
			set strStatus = $$$Save("INSUPBuyingDiscount", idINSUPBuyingDiscount, objINSUPBuyingDiscount, 1)
		}

		if ($$$ISOK(strStatus)) {
			set idINSUPBuyingDiscount = "FOB"
			set objINSUPBuyingDiscount = ""
			set $$$INSUPBuyingDiscountDescription(objINSUPBuyingDiscount) = "FOB"
			set $$$INSUPBuyingDiscountSurcharge(objINSUPBuyingDiscount) = 1
			set $$$INSUPBuyingDiscountCostAllocation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountAmountCalculation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountCostDistribution(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountChargeGroup(objINSUPBuyingDiscount) = 4
			set strStatus = $$$Save("INSUPBuyingDiscount", idINSUPBuyingDiscount, objINSUPBuyingDiscount, 1)
		}

		if ($$$ISOK(strStatus)) {
			set idINSUPBuyingDiscount = "IPIValor"
			set objINSUPBuyingDiscount = ""
			set $$$INSUPBuyingDiscountDescription(objINSUPBuyingDiscount) = "IPI R$"
			set $$$INSUPBuyingDiscountSurcharge(objINSUPBuyingDiscount) = 1
			set $$$INSUPBuyingDiscountCostAllocation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountAmountCalculation(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountCostDistribution(objINSUPBuyingDiscount) = 0
			set $$$INSUPBuyingDiscountChargeGroup(objINSUPBuyingDiscount) = 3
			set strStatus = $$$Save("INSUPBuyingDiscount", idINSUPBuyingDiscount, objINSUPBuyingDiscount, 1)
		}

		if ($$$ISOK(strStatus)) {
			do ..SetParameter(..#PARAMBUYINGDISCOUNT, 1)
		}
	}

	if (+..GetParameter(..#PARAMDEFINECODINFOSAUDEPEDIDOCOMPRA) = 0) {
		$$$VAR

		set idPedidoCompra = $order(^VARPedidoCompra(YM, ""))
		while ($length(idPedidoCompra) > 0) {
			set objPedidoCompra = ^VARPedidoCompra(YM, idPedidoCompra, 1)
			set objDadoAIntegrar = $get(^VARDadoAIntegrar(YM,
				##class(GerenciaFilaPendencias).%GetParameter("ENTIDADEPEDIDOCOMPRA"),
				idPedidoCompra, "---", "---", "---", "---", 1))

			if (($length($$$VARPedidoCompraNDocIntegrado(objPedidoCompra)) = 0) &&
				($$$VARDadoAIntegrarIntegrado(objDadoAIntegrar) = "S")) {
				set $$$VARPedidoCompraNDocIntegrado(objPedidoCompra) = $piece(idPedidoCompra, "/", 1)_"/"_
					(+$piece(idPedidoCompra, "/", 2))
				set strStatus = $$$Save("VARPedidoCompra", idPedidoCompra, objPedidoCompra, 1)
				if ($$$ISERR(strStatus)) quit
			}

			set idPedidoCompra = $order(^VARPedidoCompra(YM, idPedidoCompra))
		}

		if ($$$ISOK(strStatus)) {
			do ..SetParameter(..#PARAMDEFINECODINFOSAUDEPEDIDOCOMPRA, 1)
		}
	}

	if (+..GetParameter(..#PARAMREBUILDINRECINDEXES) = 0) {
		$$$VAR

		set VORG(1) = "INREC"
		do ^WWWSORT

		do ..SetParameter(..#PARAMREBUILDINRECINDEXES, 1)
	}

	if (+..GetParameter(..#PARAMDEFINENROINFOSAUDEOCORRENCIA) = 0) {
		$$$VAR

		set codFornecedor = $order(^VARFornecedorOcorrencia(YM, ""))
		while ($length(codFornecedor) > 0) {
			set nroOcorrencia = $order(^VARFornecedorOcorrencia(YM, codFornecedor, ""))

			while ($length(nroOcorrencia) > 0) {
				set objFornecedorOcorrencia = ^VARFornecedorOcorrencia(YM, codFornecedor, nroOcorrencia, 1)
				set objDadoAIntegrar = $get(^VARDadoAIntegrar(YM,
					##class(GerenciaFilaPendencias).%GetParameter("ENTIDADEOCORRENCIA"),
					codFornecedor, nroOcorrencia, "---", "---", "---", 1))

				if (($length($$$VARFornecedorOcorrenciaNDocIntegrado(objFornecedorOcorrencia)) = 0) &&
					($$$VARDadoAIntegrarIntegrado(objDadoAIntegrar) = "S")) {
					set $$$VARFornecedorOcorrenciaNDocIntegrado(objFornecedorOcorrencia) = nroOcorrencia
					set strStatus = $$$Save("VARFornecedorOcorrencia", codFornecedor_$$$COMMA_nroOcorrencia, objFornecedorOcorrencia, 1)
					if ($$$ISERR(strStatus)) quit
				}

				set nroOcorrencia = $order(^VARFornecedorOcorrencia(YM, codFornecedor, nroOcorrencia))
			}

			set codFornecedor = $order(^VARFornecedorOcorrencia(YM, codFornecedor))
		}

		if ($$$ISOK(strStatus)) {
			do ..SetParameter(..#PARAMDEFINENROINFOSAUDEOCORRENCIA, 1)
		}
	}

	if (+..GetParameter(..#PARAMLIMPEZACLASSEENVIRONMENT) = 0) {
		if (##class(%Dictionary.ClassDefinition).%ExistsId("VAR.infra.webservice.Environment")) {
			do ##class(%Dictionary.ClassDefinition).%DeleteId("VAR.infr]]><![CDATA[a.webservice.Environment")
		}

		do ..SetParameter(..#PARAMLIMPEZACLASSEENVIRONMENT, 1)
	}

	if (+..GetParameter(..#PARAMPARAMETROCLIENTE) = 0) {
		$$$VAR
		set objVARParametroCliente = ^VARParametroCliente(0,0,1)
		set $$$VARParametroClienteFrequenciaValidadeProduto(objVARParametroCliente)	= 1
		set $$$VARParametroClienteDiasdasemanaproduto(objVARParametroCliente)		= ""
		set $$$VARParametroClienteDiasdomesproduto(objVARParametroCliente)			= ""
		set $$$VARParametroClienteHoradeexecucaoproduto(objVARParametroCliente)		= "08:00"
		set $$$VARParametroClienteFrequenciaValidadeAta(objVARParametroCliente)		= 1
		set $$$VARParametroClienteDiasdasemanaata(objVARParametroCliente)			= ""
		set $$$VARParametroClienteDiasdomesata(objVARParametroCliente)				= ""
		set $$$VARParametroClienteHoradeexecucaoata(objVARParametroCliente)			= "08:00"
		set strStatus = $$$Save("VARParametroCliente",0,objVARParametroCliente,$$$YES)
		if ($$$ISOK(strStatus)) { 
			do ..SetParameter(..#PARAMPARAMETROCLIENTE, 1)
		}
	}
	
	if ('+..GetParameter(..#PARAMWWW128VARCONFIGIMPETIQUETA)) {
		set ^WWW128(0,"VARConfigImpEtiqueta",1) = "0~~~"
		do ..SetParameter(..#PARAMWWW128VARCONFIGIMPETIQUETA, 1)
	}
	
	do ..IncBuild()

	quit strStatus]]></Implementation>
</Method>

<Method name="UpdateBuild006">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()

	do ..IncBuild()

	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild005">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()

	do ..IncBuild()

	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild004">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()

	do ..IncBuild()			;Incrementando para a versão 1.5.5

	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild003">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()

	if (+..GetParameter(..#PARAMDESATIVARGERLOGCODIGO) = 0) {
		#define WWWTAGExecute1(%obj) $piece(%obj,"~",1)

		$$$VAR

		set idWWWTAG = $order(^WWWTAG(YM, ""))
		while ($length(idWWWTAG) > 0) {
			set objWWWTAG = ^WWWTAG(YM, idWWWTAG, 1)
			if ($$$WWWTAGExecute1(objWWWTAG) = "d Build^COMUtilCallBacks()") {
				set strStatus = $$$Kill("WWWTAG", idWWWTAG)
			}

			set idWWWTAG = $order(^WWWTAG(YM, idWWWTAG))
		}

		do ..SetParameter(..#PARAMDESATIVARGERLOGCODIGO, 1)
	}

	if (+..GetParameter(..#PARAMMEDINDEX) = 0) {
		$$$VAR
		set strStatus = $$$OK
		set ^WWW003CustomIndex(0,"INREC",200,1)="OrdemCompra~4"
		set ^WWW003CustomIndexLine(0,"INREC",200,1,1)="30~1"
		set strStatus = $$LoadIndex^WWW003CustomIndex("INREC",200)
		do CompileClass^COMClassCompile("INREC")
		hang 2
		do ReIndex^COMIndex("INREC")
		hang 2

		if $$$ISOK(strStatus) {
			do ..SetParameter(..#PARAMMEDINDEX, 1)
		}
		else {
			write !,strStatus,!
		}
	}

	if (+..GetParameter(..#PARAMOUTRASSAIDAS) = 0) {
	 	$$$VAR
		// Criação do módulo de Outras Saídas
		new idModulo, objModulo
		set idModulo = 8
		set $$$VARBRModuloNomeModulo(objModulo) = "OutrasSaidas"
		set $$$VARBRModuloSiglaModulo(objModulo) = "OSA"
		set strStatus = $$$Save("VARBRModulo",idModulo,objModulo,$$$YES)
		if (strStatus = 1) { 
			// Criação do Diretórios para Arquivos do módulo de Outras Saídas
			new idDiretorio, objDiretorio
			set idDiretorio = 8
			set $$$VARBRDiretoriosDiretorioFisico(objDiretorio) = "OutrasSaidas"
			set $$$VARBRDiretoriosDescricao(objDiretorio) = "Arquivo de Outras Saidas"
			set $$$VARBRDiretoriosDiretorioVirtual(objDiretorio) = "OutrasSaidas"
			set $$$VARBRDiretoriosDiretorioPai(objDiretorio) = 0
			set strStatus = $$$Save("VARBRDiretorios",idDiretorio,objDiretorio,$$$YES)
	
			// Cria o novo diretório para Outras Saidas
			do ##class(%File).CreateDirectory($$GetDiretorioFisico^VARBRDiretorios(0,0)_"\OutrasSaidas")
		}
		if (strStatus = 1) { 
			do ..SetParameter(..#PARAMMODTRANSFERENCIA, 1)
		}
	}

	do ..IncBuild()			;Incrementando para a versão 1.5.4

	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild002">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()

	do ..IncBuild()

	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild001">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()

	if (+..GetParameter(..#PARAMMODTRANSFERENCIA) = 0) {
		// Criação do módulo de Transferencia
		new idModulo, objModulo
		set idModulo = 7
		set $$$VARBRModuloNomeModulo(objModulo) = "Transferencias"
		set $$$VARBRModuloSiglaModulo(objModulo) = "TRA"
		set strStatus = $$$Save("VARBRModulo",idModulo,objModulo)

		// Criação do Diretórios para Arquivos do módulo de Transferencias
		new idDiretorio, objDiretorio
		set idDiretorio = 7
		set $$$VARBRDiretoriosDiretorioFisico(objDiretorio) = "Transferencias"
		set $$$VARBRDiretoriosDescricao(objDiretorio) = "Arquivo de Transferencias"
		set $$$VARBRDiretoriosDiretorioVirtual(objDiretorio) = "Transferencias"
		set $$$VARBRDiretoriosDiretorioPai(objDiretorio) = 0
		set strStatus = $$$Save("VARBRDiretorios",idDiretorio,objDiretorio)
		
		// Cria o novo diretório para Transferencias
		do ##class(%File).CreateDirectory($$GetDiretorioFisico^VARBRDiretorios(0,0)_"\Transferencias")
		do ..SetParameter(..#PARAMMODTRANSFERENCIA, 1)
	}

	if (+..GetParameter(..#PARAMMODCONTRATO) = 0) {
		// Criação do módulo de Contrato
		new idModulo, objModulo
		set idModulo = 6
		set $$$VARBRModuloNomeModulo(objModulo) = "Contratos"
		set $$$VARBRModuloSiglaModulo(objModulo) = "CON"
		set strStatus = $$$Save("VARBRModulo",idModulo,objModulo)

		// Criação do Diretórios para Arquivos do módulo de contratos
		new idDiretorio, objDiretorio
		set idDiretorio = 6
		set $$$VARBRDiretoriosDiretorioFisico(objDiretorio) = "Contratos"
		set $$$VARBRDiretoriosDescricao(objDiretorio) = "Arquivo de Contratos"
		set $$$VARBRDiretoriosDiretorioVirtual(objDiretorio) = "Contratos"
		set $$$VARBRDiretoriosDiretorioPai(objDiretorio) = 0
		set strStatus = $$$Save("VARBRDiretorios",idDiretorio,objDiretorio)
		
		// Cria o novo diretório para Contratos
		do ##class(%File).CreateDirectory($$GetDiretorioFisico^VARBRDiretorios(0,0)_"\Contratos")
		do ..SetParameter(..#PARAMMODCONTRATO, 1)
	}	

	do ..IncBuild()			;Incrementando para a versão 1.5.2

	quit $$$OK]]></Implementation>
</Method>

<Method name="UpdateBuild000">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	write !, "Current Version: ", ..GetCurrentVersion()
	
	if (+..GetParameter(..#PARAMMODPACIENTE) = 0) {
		// Criação do módulo de paciente
		new idModulo, objModulo
		set idModulo = 5
		set $$$VARBRModuloNomeModulo(objModulo) = "Pacientes"
		set $$$VARBRModuloSiglaModulo(objModulo) = "Pacientes"
		set strStatus = $$$Save("VARBRModulo",idModulo,objModulo)

		// Criação do Diretórios para Arquivos do módulo de paciente
		new idDiretorio, objDiretorio
		set idDiretorio = 5
		set $$$VARBRDiretoriosDiretorioFisico(objDiretorio) = "Pacientes"
		set $$$VARBRDiretoriosDescricao(objDiretorio) = "Foto de Pacientes"
		set $$$VARBRDiretoriosDiretorioVirtual(objDiretorio) = "Pacientes"
		set $$$VARBRDiretoriosDiretorioPai(objDiretorio) = 0
		set strStatus = $$$Save("VARBRDiretorios",idDiretorio,objDiretorio)
		
		// Cria o novo diretório para as fotos dos pacientes e copia os avatares feminino e masculinos para dentro da pasta
		do ##class(%File).CreateDirectory($$GetDiretorioFisico^VARBRDiretorios(0,0)_"\Pacientes")
		do ##class(%File).CopyFile($$$WWW012PhysicalWWWDirectory(^WWW012(0,0,1))_"\avatar_masculino.jpg",$$GetDiretorioFisico^VARBRDiretorios(0,0)_"\Pacientes\avatar_masculino.jpg")
		do ##class(%File).CopyFile($$$WWW012PhysicalWWWDirectory(^WWW012(0,0,1))_"\avatar_feminino.jpg",$$GetDiretorioFisico^VARBRDiretorios(0,0)_"\Pacientes\avatar_feminino.jpg")
		
		do ..SetParameter(..#PARAMMODPACIENTE, 1)
	}
	
	if (+..GetParameter(..#PARAMDUALCREATION) = 0) {
		
		&sql(INSERT INTO  SQLUser.VARDual VALUES ("1"))
		
		do ..SetParameter(..#PARAMDUALCREATION, 1)
	}
	
	if (+..GetParameter(..#PARAMMEDINDEX) = 0) {
		
		$$$VAR
		set strStatus = $$$OK
		set ^WWW003CustomIndex(0,"MEDAdmission",200,1)="Paciente internado ativo~4"
		set ^WWW003CustomIndexLine(0,"MEDAdmission",200,1,1)="1~1"
		set ^WWW003CustomIndexLine(0,"MEDAdmission",200,2,1)="8~2"
		set strStatus = $$LoadIndex^WWW003CustomIndex("MEDAdmission",200)
		do CompileClass^COMClassCompile("MEDAdmission")
		hang 2
		do ReIndex^COMIndex("MEDAdmission")
		hang 2
		
		if $$$ISOK(strStatus) {
			do ..SetParameter(..#PARAMMEDINDEX, 1)
		}else{
			write !,strStatus,!
		}
	}
	
	if (+..GetParameter(..#PARAMMEDTOLERANCIA) = 0) {
		// Valor default da tolerância de tempo da dosagem
		$$$VAR
		new idCliente,objCliente
		set idCliente = YM
		set objCliente = $get(^VARParametroCliente(YM,YM,1))

		set $$$VARParametroClienteToleranciaDosagem(objCliente) = 15
		set strStatus = $$$Save("VARParametroCliente",idCliente,objCliente,$$$YES)
		
		if $$$ISOK(strStatus) {
			do ..SetParameter(..#PARAMMEDTOLERANCIA, 1)
		}else{
			write !,strStatus,!
		}
		
	}

	do ..IncBuild()			;Incrementando para a versão 1.5.1
	quit $$$OK]]></Implementation>
</Method>
</Class>
</Export>