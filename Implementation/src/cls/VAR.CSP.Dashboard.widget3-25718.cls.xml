<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.Dashboard.widget3">
<ClassType/>
<IncludeCode>COMSYS,COMConst,VARConst,INConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>

<Parameter name="CHARSET">
<Default>utf-8</Default>
</Parameter>


<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#dim %request As %CSP.Request
	#dim %response As %CSP.Response
	
	Set Method 	= $Get(%request.Data("method",1))

	xecute "do .."_Method_"()"
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="Preparar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	$$$VAR
	set YM 	= 0
	set Y 	= "~"
	kill ^DashboardDados(YM,"W3")
	kill ^DashboardDadosW3(YM)
	kill ^DashboardDadosW3Fornecedor(YM)
	
	set $piece(^DashboardDados(YM,"W3"),Y,1) = $horolog

	set dataHoje 		= +$horolog	;
	set dataFinal		= dataHoje + 90

	set meuSQL = "Select Pag.DataPagamento, Supplier, (Rec.InvoiceTotal / $$SQLGetQtdeParcelas^VARSQL(FREE14)) As Valor "
	set meuSQL = meuSQL_"From SQLUser.INRECDataPagamento As Pag, SQLUser.INREC As Rec "
	set meuSQL = meuSQL_"Where Pag.Company = 0 And Rec.ReceiptNumber = Pag.Recebimento And "
	set meuSQL = meuSQL_"Rec.InvoiceTotal > 0 And Rec.FREE14 <> '' And Status = 1 And "
	set meuSQL = meuSQL_"Pag.DataPagamento Between '"_dataHoje_"' And '"_dataFinal_"'"
	;
	set objStatement	= ##class(%SQL.Statement).%New() 
	set qStatus 			= objStatement.%Prepare(meuSQL)
	set rSet 					= objStatement.%Execute()
 	while (rSet.%Next()) {
	 	set dataPagamento 	= rSet.%Get("DataPagamento")
		set fornecedor		 	= rSet.%Get("Supplier")
		set valor						= rSet.%Get("Valor")
		;
		set $piece(^DashboardDadosW3(YM,dataPagamento),Y,1) = $piece($get(^DashboardDadosW3(YM,dataPagamento)),Y,1) + valor
		;		
		set $piece(^DashboardDadosW3Fornecedor(YM,dataPagamento,fornecedor),Y,1) = $piece($get(^DashboardDadosW3Fornecedor(YM,dataPagamento,fornecedor)),Y,1) + valor
 	}	
 	;
	set $piece(^DashboardDados(YM,"W3"),Y,2) = $horolog
	;
	quit $$$OK
]]></Implementation>
</Method>

<Method name="RecuperaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	$$$VAR
	set YM 	= 0
	set Y 	= "~"
	
	set dataHoraPreparacao	= $piece($get(^DashboardDados(YM,"W3")),Y,2) 
	set arraySerie = []
	set arrayDrilldown = []
	if (dataHoraPreparacao '= "") {
		set dataPagamento = ""
		for {
			set dataPagamento = $order(^DashboardDadosW3(YM,dataPagamento))
			quit:dataPagamento=""
		
			set valor = $piece(^DashboardDadosW3(YM,dataPagamento),Y,1)
			
			set listDados = {}
	    do listDados.%Set("name", $zdate(dataPagamento,4))
	    do listDados.%Set("y", "'"_valor_"'")
	    do listDados.%Set("drilldown", dataPagamento)
			
			do arraySerie.%Push(listDados)

			set arrayFornecedor = []
			set fornecedor = ""
			for {
				set fornecedor = $order(^DashboardDadosW3Fornecedor(YM,dataPagamento,fornecedor))
				quit:fornecedor=""

				set valor = $piece(^DashboardDadosW3Fornecedor(YM,dataPagamento,fornecedor),Y,1)
				set descFornecedor = $$SQLGetDescFornecedor^VARSQL(fornecedor)

				set listFornecedor = {}
				do listFornecedor.%Set("name", fornecedor)
				do listFornecedor.%Set("y", "'"_valor_"'")
				do listFornecedor.%Set("descFornecedor", descFornecedor)
				do arrayFornecedor.%Push(listFornecedor)
				
			}
			set listDrilldown = {}
	    do listDrilldown.%Set("name", $zdate(dataPagamento,4))
	    do listDrilldown.%Set("id", dataPagamento)
	    do listDrilldown.%Set("data", arrayFornecedor)
			
			do arrayDrilldown.%Push(listDrilldown)

		}
		set listRetorno = {}
		do listRetorno.%Set("Dados", arraySerie)
		do listRetorno.%Set("Drilldown", arrayDrilldown)
		do listRetorno.%Set("DataHoraPreparacao", $zdatetime(dataHoraPreparacao,4,2))
	}else{
		set listRetorno = {}
		do listRetorno.%Set("DataHoraPreparacao", "")
	}

	write $replace($replace(listRetorno.%ToJSON(),"""'",""),"'""","")
	
	quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>