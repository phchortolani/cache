<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Report.Query.FINGLTB">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>

<Method name="FINGLTBClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>FINGLTBExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Nothing to do at this stage
	;
	; Params:
	; qHandle - Object to pass around required data, eg. current record id
	;
	; ByRefs: qHandle
	;
	; Returns:
	;
	; History:
	; 05-Sep-2006	PO		SR14877: Commented
	;-------------------------------------------------------------------------------

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FINGLTBExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,CompanyNumber:%String(MAXLEN=30),YUSER:%String(MAXLEN=15),PeriodType:%String(MAXLEN=30),YearEnd:%String(MAXLEN=4),FromPeriod:%Integer,ToPeriod:%Integer,IncludeZero:%String(MAXLEN=1),ParentOnly:%String(MAXLEN=1),SortBy:%String(MAXLEN=2)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	; History:
	; 05-Sep-2006	PO			SR14877: Use YUSER instead of $job
	; 19-Jul-2006	RPW			SR14877: Do NOT use a local array, the data amount is UNKNOWN.
	; 							Also use $sortbegin to speed the population of the data.
	kill ^CacheTempQuery(YUSER)
	
	do TrialBalance^FINRPGLTB(CompanyNumber,YUSER,PeriodType,YearEnd,FromPeriod,ToPeriod,IncludeZero,ParentOnly)
	
	set ret = $sortbegin(^CacheTempQueryOrder) // SR14877
	
	set curBeginningBalance = 0
	set curActivity = 0
	set curEndingBalance = 0
	
	set idx = ""
	for {
		set idx = $order(^CacheTempQuery(YUSER,idx)) // SR14877
		quit:(idx="")
		
		set lstRow = $get(^CacheTempQuery(YUSER,idx)) // SR14877
		
		set curBeginningBalance = curBeginningBalance + $listget(lstRow,4)
		set curActivity = curActivity + $listget(lstRow,5)
		set curEndingBalance = curEndingBalance + $listget(lstRow,6)
		
		if SortBy = 1 { // type & number
			set strType = $listget(lstRow,3)_$listget(lstRow,1)
			if strType = "" set strType = " " // should never happen
			set ^CacheTempQueryOrder(YUSER,strType,idx)=lstRow // SR14877
			
		} else { //number
			set idAcc = $listget(lstRow,1)
			if idAcc = "" set idAcc = " " // should never happen
			set ^CacheTempQueryOrder(YUSER,idAcc,idx) = lstRow // SR14877
		}
	}
	
	set ^CacheTempGLTBSummary(YUSER,1) = $listbuild(curBeginningBalance,curActivity,curEndingBalance) // SR14877
	
	set ret = $sortend(^CacheTempQueryOrder) // SR14877
	
	set ret = $sortbegin(^CacheTempRow) // SR14877

	set intRow = 0
	set strLoop = ""
	for {
		set strLoop = $order(^CacheTempQueryOrder(YUSER,strLoop)) // SR14877
		quit:(strLoop="")
		
		set idx = ""
		for {
			set idx = $order(^CacheTempQueryOrder(YUSER,strLoop,idx)) // SR14877
			quit:(idx="")
			
			set intRow = intRow + 1
			
			set ^CacheTempRow(YUSER,intRow) = $get(^CacheTempQueryOrder(YUSER,strLoop,idx)) // SR14877
		}
	}

	set ret=$sortend(^CacheTempRow) // SR14877
	
	kill ^CacheTempQuery(YUSER) // SR14877
	kill ^CacheTempQueryOrder(YUSER) // SR14877
	
	set qHandle("Item") = ""
	set qHandle("YUSER") = YUSER // SR14877
	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="FINGLTBFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>FINGLTBExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Retrieve a row of the result
	;
	; Params:
	; qHandle - Object to pass around required data, eg. current record id
	; Row - Record to return
	; AtEnd - When last record then 1
	;
	; ByRefs: qHandle, ByRef & AtEnd
	;
	; Returns: $$$OK
	;
	; History:
	; 05-Sep-2006	PO		SR14877: Commented & use YUSER
	;-------------------------------------------------------------------------------

	set YUSER = qHandle("YUSER") // SR14877
	set qHandle("Item") = $order(^CacheTempRow(YUSER,qHandle("Item"))) // SR14877
	
	if qHandle("Item") '= "" {
		set Row = ^CacheTempRow(YUSER,qHandle("Item")) // SR14877
	} else {
		set AtEnd = 1
		set Row = ""
		kill ^CacheTempRow(YUSER) // SR14877
	}
	
	Quit $$$OK
]]></Implementation>
</Method>
<Query name="FINGLTB">
<Type>%Query</Type>
<FormalSpec>CompanyNumber:%String(MAXLEN=30),YUSER:%String(MAXLEN=15),PeriodType:%String(MAXLEN=30),YearEnd:%String(MAXLEN=4),FromPeriod:%Integer,ToPeriod:%Integer,IncludeZero:%String(MAXLEN=1),ParentOnly:%String(MAXLEN=1),SortBy:%String(MAXLEN=2)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="AccountNumber:%String(MAXLEN=100),AccountDescription:%String(MAXLEN=100),AccountType:%String(MAXLEN=2),BeginningBalance:%Float,Activity:%Float,EndingBalance:%Float"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Report.Query.FINGLTBD</DataLocation>
<DefaultData>FINGLTBDefaultData</DefaultData>
<IdLocation>^Report.Query.FINGLTBD</IdLocation>
<IndexLocation>^Report.Query.FINGLTBI</IndexLocation>
<StreamLocation>^Report.Query.FINGLTBS</StreamLocation>
<Data name="FINGLTBDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>