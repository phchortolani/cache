<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.webservice.Installer">
<ClassType/>
<Import>VAR.common,VAR.infra.environment</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="Install">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set status = $$$OK
    &sql(DELETE
    	 FROM   WebServiceTargetTranslation)
    do ##class(VAR.common.WebServiceTargetTranslation).%KillExtent()
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("MORENA", "HEVA"),
		##class(Control).GetEnvId("MORENA", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("MORENA", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("MORENA", "HEVA-PREV"),
		##class(Control).GetEnvId("MORENA", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("MORENA", "HEVA-INTEGRACAO-PREV"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC1", "TREINA-HEVA"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC1", "TREINA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC1", "TREINA-AME"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC1", "TREINA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC1", "TREINA-SEDI"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC1", "TREINA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC1", "HEVA"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC1", "AME"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC1", "SEDI"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC1", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC2", "TREINA-HEVA"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC2", "TREINA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC2", "TREINA-AME"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC2", "TREINA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC2", "TREINA-SEDI"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC2", "TREINA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC2", "HEVA"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC2", "AME"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("AMEDISC2", "SEDI"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("AMEDISC2", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("PABLODISC", "HEVA"),
		##class(Control).GetEnvId("PABLODISC", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("PABLODISC", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("GUILHERMEDISC", "HEVA"),
		##class(Control).GetEnvId("GUILHERMEDISC", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("GUILHERMEDISC", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("ADRIEUDISC", "HEVA"),
		##class(Control).GetEnvId("ADRIEUDISC", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("ADRIEUDISC", "HEVA-INTEGRACAO"))
	do ..DefineTargetEnv(
		##class(Control).GetEnvId("LUCASDISC", "HEVA"),
		##class(Control).GetEnvId("LUCASDISC", "HEVA-INTEGRACAO"),
		##class(Control).GetEnvId("LUCASDISC", "HEVA-INTEGRACAO"))
		
	kill ^VARParametrosWebClient

	do ..RegisterClient("Demo",
		"VAR.test.webservice.Demo",
		"VAR.test.webservice.DemoClient", 1)
	do ..RegisterClient("ValidaRecebimentoEnsembleServiceHEVA",
		"disclinc.heva.integracaorecebimento.ValidaRecebimentoEnsembleServiceHEVA",
		"VAR.infra.webservice.ensemble.ValidaRecebimentoHEVAClient", 1)
	do ..RegisterClient("ValidaRecebimentoEnsembleServiceAME",
		"disclinc.heva.integracaorecebimento.ValidaRecebimentoEnsembleServiceAME",
		"VAR.infra.webservice.ensemble.ValidaRecebimentoAMEClient", 1)
	do ..RegisterClient("ValidaRecebimentoEnsembleServiceSEDI",
		"disclinc.heva.integracaorecebimento.ValidaRecebimentoEnsembleServiceSEDI",
		"VAR.infra.webservice.ensemble.ValidaRecebimentoSEDIClient", 1)		

	quit status]]></Implementation>
</Method>

<Method name="DefineTargetEnv">
<ClassMethod>1</ClassMethod>
<FormalSpec>environmentIdSource:%Integer,environmentIdRequired:%Integer,environmentIdFinal:%Integer</FormalSpec>
<Implementation><![CDATA[	&sql(SELECT COUNT(*)
    	 INTO   :existe
    	 FROM   WebServiceTargetTranslation
    	 WHERE  EnvironmentIdSource = :environmentIdSource
    	 AND    EnvironmentIdRequired = :environmentIdRequired)

    if ('+existe) {
        &sql(INSERT
        	 INTO   WebServiceTargetTranslation
        	        (EnvironmentIdSource, EnvironmentIdRequired, EnvironmentIdFinal)
        	 VALUES
        	        (:environmentIdSource, :environmentIdRequired, :environmentIdFinal))
    }
    else {
        &sql(UPDATE WebServiceTargetTranslation
        	 SET    EnvironmentIdFinal = :environmentIdFinal
        	 WHERE  EnvironmentIdSource = :environmentIdSource
        	 AND    EnvironmentIdRequired = :environmentIdRequired)
    }]]></Implementation>
</Method>

<Method name="RegisterClient">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name:%String,ServerClassName:%String,ClientClassName:%String,Integration:%Boolean</FormalSpec>
<Implementation><![CDATA[	&sql(DECLARE cursorRegisterClient CURSOR FOR
		 SELECT  Id, Machine, Namespace
	     INTO    :envId, :machine, :namespace
	     FROM    Environment)
	&sql(OPEN cursorRegisterClient)
	&sql(FETCH cursorRegisterClient)

	set integrationNamespaceSuffix =
		##class(Environment).%GetParameter("INTEGRATIONNAMESPACESUFFIX")

	while ('SQLCODE) {
		set register = 1
		if ((('Integration) && (namespace [ integrationNamespaceSuffix)) ||
			(Integration && ('(namespace [ integrationNamespaceSuffix)))) {
			set register = 0
		}

		if (machine = "MORENA") {
			set port = 57773
		}
		elseif (((machine = "AMEDISC1") || (machine = "AMEDISC2")) &&
				 ($extract(namespace, 1, $length("TREINA-")) '= "TREINA-")) {
			set port = 57772
		}
		elseif (((machine = "AMEDISC1") || (machine = "AMEDISC2")) &&
				 ($extract(namespace, 1, $length("TREINA-")) = "TREINA-")) {
			set port = 57773
		}
		elseif ((machine = "PABLODISC") || (machine = "GUILHERMEDISC") || (machine = "LUCASDISC")) {
			set port = 57773
		}
		elseif (machine = "ADRIEUDISC") {
			set port = 57774
		}
		else {
			set register = 0
		}

		if (register) {
			set ^VARParametrosWebClient(0, envId, ClientClassName, 1) =
				"http://"_machine_":"_port_"/csp/"_namespace_"/"_ServerClassName_".cls~"_Name
		}

		&sql(FETCH cursorRegisterClient)
	}

	&sql(CLOSE cursorRegisterClient)]]></Implementation>
</Method>
</Class>
</Export>