<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.util.FATRegrasComerciais">
<ClassType/>
<IncludeCode>FATConst,VARConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Parameter name="COMPILETIME"/>

<Property name="Procedimento">
<Description><![CDATA[Código do Procedimento (Cadastrado na INART)]]></Description>
<Type>%String</Type>
</Property>

<Property name="PlanoSaude">
<Description><![CDATA[Código do Plano de Saúde (Cadastrado na FATOrganizacao)]]></Description>
<Type>%String</Type>
</Property>

<Property name="CodigoDoAgendamento">
<Description><![CDATA[Código do Agendamento (Para validação de regras)]]></Description>
<Type>%String</Type>
</Property>

<Property name="SequenciaDoAgendamento">
<Description><![CDATA[Sequencia do Agendamento (Para validação de regras)]]></Description>
<Type>%String</Type>
</Property>

<Property name="isInelegivel">
<Description><![CDATA[Item é inelegivel para o plano?]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="AcordoComercial">
<Description><![CDATA[Código do Acordo Comercial para o procedimento no plano de saúde]]></Description>
<Type>%String</Type>
</Property>

<Property name="UnidadeMedida">
<Description><![CDATA[Unidade de Medida do item (cadastrado na INART)]]></Description>
<Type>%String</Type>
</Property>

<Property name="CodigoTabela">
<Description><![CDATA[Código do Tabela comercial onde a regra foi aplicada]]></Description>
<Type>%String</Type>
</Property>

<Property name="CodigodoItem">
<Description><![CDATA[Código do Procedimento no Convênio]]></Description>
<Type>%String</Type>
</Property>

<Property name="DescricaoDoItem">
<Description><![CDATA[Descrição do Procedimento no Convênio]]></Description>
<Type>%String</Type>
</Property>

<Property name="CodigodaCategoria">
<Description><![CDATA[Categoria do Procedimento no Convênio]]></Description>
<Type>%String</Type>
</Property>

<Property name="Categoria">
<Description><![CDATA[Descrição da categoria do Procedimento no Convênio]]></Description>
<Type>%String</Type>
</Property>

<Property name="Quantidade">
<Description><![CDATA[Quantidade do Procedimento no Convênio]]></Description>
<Type>%Float</Type>
</Property>

<Property name="QuantidadeRegra">
<Description><![CDATA[Quantidade do Procedimento no Convênio (Regra Comercial)]]></Description>
<Type>%Float</Type>
</Property>

<Property name="ValorUnitario">
<Description><![CDATA[Valor unitário do procedimento a ser cobrado do convênio pelo procedimento]]></Description>
<Type>%Float</Type>
</Property>

<Property name="ValorUnitarioRegra">
<Description><![CDATA[Valor unitário do procedimento a ser cobrado do convênio pelo procedimento (Regra Comercial)]]></Description>
<Type>%Float</Type>
</Property>

<Property name="Valor">
<Description><![CDATA[Valor a ser cobrado do convênio pelo procedimento]]></Description>
<Type>%Float</Type>
</Property>

<Property name="ItensCobraveis">
<Description><![CDATA[Relação de todos os itens cobraveis deste item na tabela comercial]]></Description>
<Type>%String</Type>
</Property>

<Property name="isCarteirinhaObrigatoria">
<Description><![CDATA[Número da Carteirinha Obrigatória?]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="CarteirinhaMascara">
<Description><![CDATA[Máscara da carteirinha]]></Description>
<Type>%String</Type>
</Property>

<Property name="CarteirinhaMin">
<Description><![CDATA[Mínimo de Caracteres da Carteirinha]]></Description>
<Type>%Integer</Type>
</Property>

<Property name="CarteirinhaMax">
<Description><![CDATA[Máximo de Caracteres da Carteirinha]]></Description>
<Type>%Integer</Type>
</Property>

<Property name="CategoriaTISS">
<Description><![CDATA[Categoria TISS]]></Description>
<Type>%String</Type>
</Property>

<Property name="VersaoDaTISS">
<Description><![CDATA[versão da TISS]]></Description>
<Type>%String</Type>
</Property>

<Property name="FamiliaTISS">
<Description><![CDATA[Família na TISS]]></Description>
<Type>%String</Type>
</Property>

<Property name="CodigoANS">
<Description><![CDATA[Código ANS do convênio]]></Description>
<Type>%String</Type>
</Property>

<Property name="isObrigatorioGuiaAutorizacao">
<Description><![CDATA[Obrigatória a guia de autorização?]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="isObrigatorioSenhaAutorizacao">
<Description><![CDATA[Obrigatória a senha de autorização?]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="isObrigatorioNumeroGuiaOperadora">
<Description><![CDATA[Obrigatório o número da guia da operadora de autorização?]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="isPossuiCodigoDoPrestador">
<Description><![CDATA[Possuí código do prestador?]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="Regras">
<Description><![CDATA[Arrays com as Regras Encontradas]]></Description>
<Type>%DynamicAbstractObject</Type>
</Property>

<Property name="InvalidoPorRegras">
<Description><![CDATA[Registro Inválido Com Base nas Regras aplicadas]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="RegrasInvalidas">
<Description><![CDATA[Arrays com a validação de Regras Inválidas]]></Description>
<Type>%String</Type>
<Collection>array</Collection>
</Property>

<Property name="possuiComponentes">
<Description><![CDATA[Indicador caso possua componentes]]></Description>
<Type>%Boolean</Type>
</Property>

<Property name="Componentes">
<Description><![CDATA[Array com os Componentes a serem cobrados]]></Description>
<Type>VAR.util.FATRegrasComerciais</Type>
<Collection>array</Collection>
</Property>

<Property name="CodExecutante">
<Description><![CDATA[Código do Executante]]></Description>
<Type>%String</Type>
<Private>1</Private>
</Property>

<Property name="CodigoExecutante">
<Description><![CDATA[Código do Executante]]></Description>
<Type>%String</Type>
</Property>

<Property name="NomeExecutante">
<Description><![CDATA[Nome do Executante]]></Description>
<Type>%String</Type>
</Property>

<Property name="CNESExecutante">
<Description><![CDATA[CNES do Executante]]></Description>
<Type>%String</Type>
</Property>

<Property name="ANSExecutante">
<Description><![CDATA[ANS do Executante]]></Description>
<Type>%String</Type>
</Property>

<Property name="InscricaoEstadualExecutante">
<Description><![CDATA[Inscrição Estadual]]></Description>
<Type>%String</Type>
</Property>

<Property name="InscricaoMunicipalExecutante">
<Description><![CDATA[Inscrição Municipal]]></Description>
<Type>%String</Type>
</Property>

<Property name="IdentificacaoRecebedorNaFontePagadora">
<Description><![CDATA[Identificação do recebedor na fonte pagadora]]></Description>
<Type>%String</Type>
</Property>

<Property name="TipoDaGuia">
<Description><![CDATA[Identificação do tipo da guia]]></Description>
<Type>%String</Type>
</Property>

<Property name="TipoDeAtendimento">
<Description><![CDATA[Identificação do tipo de atendimento]]></Description>
<Type>%String</Type>
</Property>

<Property name="Descontos">
<Description><![CDATA[Arrays com os descontos permitidos]]></Description>
<Type>%DynamicAbstractObject</Type>
</Property>

<Property name="CodigoItemTroca">
<Description><![CDATA[Item - Troca de Item por Limite de Tempo]]></Description>
<Type>%String</Type>
</Property>

<Property name="TempoTrocaItem">
<Description><![CDATA[Tempo - Troca de Item por Limite de Tempo]]></Description>
<Type>%Integer</Type>
</Property>

<Property name="dataVigencia">
<Description><![CDATA[Data da vigência]]></Description>
<Type>%String</Type>
</Property>

<Property name="horaVigencia">
<Description><![CDATA[Horário da vigência]]></Description>
<Type>%String</Type>
</Property>

<Method name="%OnNew">
<FormalSpec>Procedimento:%String="",PlanoSaude:%String="",CodAgendamento:%String="",SequenciaAgendamento:%String="",pDescCom=0</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[	do ##class(VAR.CSP.FATRegraComercial).aplicaRegrasVigencia()
	set ..dataVigencia = ""
	set ..horaVigencia = ""
	if CodAgendamento'="",SequenciaAgendamento'=""{
		Set objVARAgendamento	= $Get(^VARAgendamento(0, CodAgendamento, 1))
		;Set PlanoSaude			= $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
		;Set objAgenProc			= $Get(^VARAgendamentoProcedimentos(0, CodAgendamento, SequenciaAgendamento, 1))
		;set Procedimento		= $$$VARAgendamentoProcedimentosProcedimento(objAgenProc)
		set ..CodigoDoAgendamento 	 = CodAgendamento
		set ..SequenciaDoAgendamento = SequenciaAgendamento

		set numAdmissao = $order(^VARAgendamentoAdmissaos(0,1,$replace(CodAgendamento,"/"," "),""),-1)
		if numAdmissao'=""{
			set objAdmissao = $get(^VARAgendamentoAdmissao(0,numAdmissao,1))
			set ..dataVigencia = $$$VARAgendamentoAdmissaoCriadoData(objAdmissao)
			set ..horaVigencia = $$$VARAgendamentoAdmissaoCriadoHora(objAdmissao)
		}
		set rs = ##class(%SQL.Statement).%ExecDirect(,.query)
		while(rs.%Next()){
			set linha={}
			set linha.Admissao = rs.%Get("AdmissionID")
		}

	}
	if PlanoSaude'="",Procedimento=""{
		set job = $job
		kill ^mtemp.FATAcordoComercial(0,job)
		set $$$FATAcordoComercialOrganizacaoCodigodaOrganizacao(objConvenio) = PlanoSaude
		set ^mtemp.FATAcordoComercial(0,job,"clienteComercial",1,1) = objConvenio
		set retorno = ##class(VAR.CSP.FATAcordoComercial).recRegraFatAplicadaOrganizacao(PlanoSaude,job)
		kill ^mtemp.FATAcordoComercial(0,job)
		set retornoRegrasFat = ##class(VAR.CSP.FATAcordoComercial).converteRegrasFaturamento(retorno)
		set ..isCarteirinhaObrigatoria		 = +retornoRegrasFat.carteirinha
		set ..CarteirinhaMascara = retornoRegrasFat.carteirinhaMascara
		set ..CarteirinhaMin	 = retornoRegrasFat.carteirinhaMin
		set ..CarteirinhaMax	 = retornoRegrasFat.carteirinhaMax
		quit $$$OK
		
	}
	if (Procedimento="")||(PlanoSaude="") quit $$$NO
	set ..Procedimento 		= Procedimento
	set ..PlanoSaude 		= PlanoSaude
	set retorno = {}
	;
	if ..AcordoComercial'=""{
		set job = $job
		kill ^mtemp.FATAcordoComercial(0,job)
		merge ^mtemp.FATAcordoComercial(0,job,"clienteComercial") = ^FATAcordoComercialOrganizacao(0,..AcordoComercial)
		merge ^mtemp.FATAcordoComercial(0,job,"tabelaComercial") = ^FATAcordoComercialTabela(0,..AcordoComercial)
		;
		;merge ^mtemp.FATAcordoComercial(0,job,"regrasItems")=^FATAcordoComercialRegraItem(0,..AcordoComercial)
		;merge ^mtemp.FATAcordoComercial(0,job,"regrasCategoria")=^FATAcordoComercialRegraCat(0,..AcordoComercial)
		;merge ^mtemp.FATAcordoComercial(0,job,"regrasTabela")=^FATAcordoComercialRegraTabela(0,..AcordoComercial)
		;merge ^mtemp.FATAcordoComercial(0,job,"regrasAcordo")=^FATAcordoComercialRegraAcordo(0,..AcordoComercial)
		
		; Cria temporária com regras do acordo		
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraAcordo(0,..AcordoComercial,convenio)) quit:convenio=""
			set regra = ""
			for {
				set regra = $order(^FATAcordoComercialRegraAcordo(0,..AcordoComercial,convenio,regra)) quit:regra=""
				set obj = ^FATAcordoComercialRegraAcordo(0,..AcordoComercial,convenio,regra,1)
				;
				; Verifica vigência 
				if ..dataVigencia'=""{
					set dataVigenciaTmp = ..dataVigencia
					set horaVigenciaTmp = ..horaVigencia
					if dataVigenciaTmp'=""{
						set horaVigenciaTmp = $order(^FATAcordoComercialRegraAcHist(0,..AcordoComercial,convenio,regra,dataVigenciaTmp,horaVigenciaTmp+1),-1)
						if horaVigenciaTmp=""{
							set dataVigenciaTmp = $order(^FATAcordoComercialRegraAcHist(0,..AcordoComercial,convenio,regra,dataVigenciaTmp),-1)
							if dataVigenciaTmp'=""{
								set horaVigenciaTmp = $order(^FATAcordoComercialRegraAcHist(0,..AcordoComercial,convenio,regra,dataVigenciaTmp,""),-1)
							}
						}
						if dataVigenciaTmp'="",horaVigenciaTmp'=""{
							set $$$FATAcordoComercialRegraAcordoInativa(obj) = $piece(^FATAcordoComercialRegraAcHist(0,..AcordoComercial,convenio,regra,dataVigenciaTmp,horaVigenciaTmp,"Inativa",1),"~",2)
						}
					}
				}
				set ^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio,regra,1)=obj
			}	
		}

		; Cria temporária com regras da tabela
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraTabela(0,..AcordoComercial,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATAcordoComercialRegraTabela(0,..AcordoComercial,convenio,tabela)) quit:tabela=""
				set regra = ""
				for {
					set regra = $order(^FATAcordoComercialRegraTabela(0,..AcordoComercial,convenio,tabela,regra)) quit:regra=""
					set obj = ^FATAcordoComercialRegraTabela(0,..AcordoComercial,convenio,tabela,regra,1)
					;
					; Verifica vigência 
					if ..dataVigencia'=""{
						set dataVigenciaTmp = ..dataVigencia
						set horaVigenciaTmp = ..horaVigencia
						if dataVigenciaTmp'=""{
							set horaVigenciaTmp = $order(^FATAcordoComercialRegraTabHist(0,..AcordoComercial,convenio,tabela,regra,dataVigenciaTmp,horaVigenciaTmp+1),-1)
							if horaVigenciaTmp=""{
								set dataVigenciaTmp = $order(^FATAcordoComercialRegraTabHist(0,..AcordoComercial,convenio,tabela,regra,dataVigenciaTmp),-1)
								if dataVigenciaTmp'=""{
									set horaVigenciaTmp = $order(^FATAcordoComercialRegraTabHist(0,..AcordoComercial,convenio,tabela,regra,dataVigenciaTmp,""),-1)
								}
							}
							if dataVigenciaTmp'="",horaVigenciaTmp'=""{
								set $$$FATAcordoComercialRegraTabelaInativa(obj) = $piece(^FATAcordoComercialRegraTabHist(0,..AcordoComercial,convenio,tabela,regra,dataVigenciaTmp,horaVigenciaTmp,"Inativa",1),"~",2)
							}
						}
					}
					set ^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,regra,1) = obj
				}	
			}
		}
		; Cria temporária com regras da categoria
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela)) quit:tabela=""
				set categoria = ""
				for {
					set categoria = $order(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela,categoria)) quit:categoria=""
					set regra = ""
					for {
						set regra = $order(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela,categoria,regra)) quit:regra=""
						set obj = ^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela,categoria,regra,1)
						;
						; Verifica vigência 
						if ..dataVigencia'=""{
							set dataVigenciaTmp = ..dataVigencia
							set horaVigenciaTmp = ..horaVigencia
							if dataVigenciaTmp'=""{
								set horaVigenciaTmp = $order(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela,categoria,regra,dataVigenciaTmp,horaVigenciaTmp+1),-1)
								if horaVigenciaTmp=""{
									set dataVigenciaTmp = $order(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela,categoria,regra,dataVigenciaTmp),-1)
									if dataVigenciaTmp'=""{
										set horaVigenciaTmp = $order(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela,categoria,regra,dataVigenciaTmp,""),-1)
									}
								}
								if dataVigenciaTmp'="",horaVigenciaTmp'=""{
									set $$$FATAcordoComercialRegraCatInativa(obj) = $piece(^FATAcordoComercialRegraCat(0,..AcordoComercial,convenio,tabela,categoria,regra,dataVigenciaTmp,horaVigenciaTmp,"Inativa",1),"~",2)
								}
							}
						}
						
						set ^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categoria,regra,1) = obj
					}	
				}
			}
		}
		; Cria temporária com regras dos itens
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraItem(0,..AcordoComercial,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATAcordoComercialRegraItem(0,..AcordoComercial,convenio,tabela)) quit:tabela=""
				set item = ""
				for {
					set item = $order(^FATAcordoComercialRegraItem(0,..AcordoComercial,convenio,tabela,item)) quit:item=""
					set regra = ""
					for {
						set regra = $order(^FATAcordoComercialRegraItem(0,..AcordoComercial,convenio,tabela,item,regra)) quit:regra=""
						set obj = ^FATAcordoComercialRegraItem(0,..AcordoComercial,convenio,tabela,item,regra,1)
						;
						; Verifica vigência 
						if ..dataVigencia'=""{
							set dataVigenciaTmp = ..dataVigencia
							set horaVigenciaTmp = ..horaVigencia
							if dataVigenciaTmp'=""{
								set horaVigenciaTmp = $order(^FATAcordoComercialRegraItemHist(0,..AcordoComercial,convenio,tabela,item,regra,dataVigenciaTmp,horaVigenciaTmp+1),-1)
								if horaVigenciaTmp=""{
									set dataVigenciaTmp = $order(^FATAcordoComercialRegraItemHist(0,..AcordoComercial,convenio,tabela,item,regra,dataVigenciaTmp),-1)
									if dataVigenciaTmp'=""{
										set horaVigenciaTmp = $order(^FATAcordoComercialRegraItemHist(0,..AcordoComercial,convenio,tabela,item,regra,dataVigenciaTmp,""),-1)
									}
								}
								if dataVigenciaTmp'="",horaVigenciaTmp'=""{
									set $$$FATAcordoComercialRegraItemInativa(obj) = $piece(^FATAcordoComercialRegraItemHist(0,..AcordoComercial,convenio,tabela,item,regra,dataVigenciaTmp,horaVigenciaTmp,"Inativa",1),"~",2)
								}
							}
						}
						set ^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item,regra,1) =obj
						
					}	
				}
			}
		}
		;
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatItems")=^FATRegrasFatItem(0,..AcordoComercial)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria")=^FATRegrasFatCategoria(0,..AcordoComercial)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatTabela")=^FATRegrasFatTabela(0,..AcordoComercial)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo")=^FATRegrasFatAcordo(0,..AcordoComercial)
		set retorno = ##class(VAR.CSP.FATAcordoComercial).getRegrasItem(..PlanoSaude,..AcordoComercial,..Procedimento,..PlanoSaude,..dataVigencia,..horaVigencia,1,job)
		kill ^mtemp.FATAcordoComercial(0,job)
		set ..CodigoTabela		 = retorno.codigoTabela
		set ..CodigodoItem		 = retorno.codigoItem
		set ..DescricaoDoItem	 = retorno.descricaoItem
		set ..CodigodaCategoria	 = retorno.codCategoria
		set ..Categoria			 = retorno.categoria
		set ..QuantidadeRegra		 = retorno.qtde
		set ..ValorUnitarioRegra = retorno.valor
		if +retorno.qtde'=0{
			set ..ValorUnitario = retorno.valor/retorno.qtde
		}
		set ..ItensCobraveis	 = retorno.itensCobraveis
		set ..isCarteirinhaObrigatoria		 = +retorno.carteirinha
		set ..CarteirinhaMascara = retorno.carteirinhaMascara
		set ..CarteirinhaMin	 = retorno.carteirinhaMin
		set ..CarteirinhaMax	 = retorno.carteirinhaMax
		set ..CategoriaTISS		 = retorno.categoriaTISS
		set ..VersaoDaTISS		 = retorno.versaoTISS
		set ..FamiliaTISS		 = retorno.familiaTISS
		set ..TipoDaGuia		 = retorno.tipoDaGuia
		set ..TipoDeAtendimento	 = retorno.tipoAtendimento
		set ..IdentificacaoRecebedorNaFontePagadora = retorno.identificacaoRecebedorNaFontePagadora
		set ..Regras			 = retorno.regras
		set ..Descontos			 = retorno.descontos
		set ..CodigoItemTroca = retorno.itemTroca
		set ..TempoTrocaItem = retorno.tempoLimeteTroca
		;
		if ..CategoriaTISS="CONSULTA"{
			set ..isObrigatorioGuiaAutorizacao 		= +retorno.consultaGuiaAutorizacao
			set ..isObrigatorioSenhaAutorizacao 	= +retorno.consultaSenhaAutorizacao
			set ..isObrigatorioNumeroGuiaOperadora 	= +retorno.consultaNGuiaOperadora
			set ..isPossuiCodigoDoPrestador 		= +retorno.consultaPossuiPrestador
		}elseif ..CategoriaTISS="PROCEDIMENTOS"{
			set ..isObrigatorioGuiaAutorizacao 		= +retorno.SPSADTGuiaAutorizacao
			set ..isObrigatorioSenhaAutorizacao 	= +retorno.SPSADTSenhaAutorizacao
			set ..isObrigatorioNumeroGuiaOperadora 	= +retorno.SPSADTNGuiaOperadora
			set ..isPossuiCodigoDoPrestador 		= +retorno.SPSADTPossuiPrestador
		}else{
			set ..isObrigatorioGuiaAutorizacao 		= +retorno.outrasGuiaAutorizacao
			set ..isObrigatorioSenhaAutorizacao 	= +retorno.outrasSenhaAutorizacao
			set ..isObrigatorioNumeroGuiaOperadora 	= +retorno.outrasNGuiaOperadora
			set ..isPossuiCodigoDoPrestador 		= +retorno.outrasPossuiPrestador
		}
		;
		if ..CodigoDoAgendamento'=""{
			do ..validaRegras(..CodigoDoAgendamento,..SequenciaDoAgendamento)
		}
		if +retorno.possuiCompostos{
			do:+pDescCom=0 ..recuperaComponentes(retorno.desconsiderarNoComposto)
		}
		
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="recuperaComponentes">
<FormalSpec>itensDesconsiderar</FormalSpec>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set itensDesconsiderar = $replace(itensDesconsiderar,";","','")
	set select = "select CodigoItem,Quantidade from  VARProcedItensUtilizados where Company=0"
	set select = select_" and CodigoProcedimento = '"_..Procedimento_"'"
	set select = select_" and CodigoItem in ('"_itensDesconsiderar_"')"
	set componente = 0
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	do ..Componentes.Clear()
	while(rs.%Next()){
		set CodigoItem = rs.%Get("CodigoItem")
		set Quantidade = rs.%Get("Quantidade")
		;
		IF (..CodigoDoAgendamento '= "" && (..SequenciaDoAgendamento '= "")) {
			If ($Data(^VARAgendamentoItensDesc(0,..CodigoDoAgendamento,..SequenciaDoAgendamento,CodigoItem))) Continue 
		}
		;
		set obj	= ##class(FATRegrasComerciais).%New(CodigoItem,..PlanoSaude, ..CodigoDoAgendamento, ..SequenciaDoAgendamento, 1)
		set valorUnit = 0
		set obj.Quantidade 	= obj.Quantidade * Quantidade
		do ..Componentes.SetAt(obj,$increment(componente))
	}
	quit]]></Implementation>
</Method>

<Method name="DescricaoDoItemGet">
<Implementation><![CDATA[	if i%DescricaoDoItem'="" {
		quit i%DescricaoDoItem 
	}
	set descricao = $$SQLGetDescricaoProduto^VARSQL(..Procedimento)
	quit descricao]]></Implementation>
</Method>

<Method name="CodigoANSGet">
<Implementation><![CDATA[	if i%CodigoANS'="" {
		quit i%CodigoANS 
	}

	if ..PlanoSaude = "" quit ""
	set planoSaude = ..PlanoSaude
	set codigoANS = ""
	for {
		quit:planoSaude=""
		set objOrganizacao = $get(^FATOrganizacao(0,planoSaude,1))
		set codigoANS = $$$FATOrganizacaoRegistroANS(objOrganizacao)
		if codigoANS'="" quit
		set planoSaude=$$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	}
	set i%CodigoANS = codigoANS
	quit codigoANS]]></Implementation>
</Method>

<Method name="AcordoComercialGet">
<Implementation><![CDATA[	if i%AcordoComercial'="" {
		quit i%AcordoComercial 
	}
	set codigoAcordo = ""
	set convenio = ..PlanoSaude
	for {
		quit:convenio=""
		set query = "select FATAcordoComercial.CodigodoAcordo CodigoAcordo from FATAcordoComercialOrganizacao "
		set query = query_" inner join FATAcordoComercial on FATAcordoComercial.Company=0 and FATAcordoComercial.CodigodoAcordo = FATAcordoComercialOrganizacao.CodigodoAcordo"
		set query = query_" where FATAcordoComercialOrganizacao.Company=0 and FATAcordoComercial.Ativo=1"
		set query = query_" and  CodigodaOrganizacao='"_convenio_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		while(rs.%Next()){
			set codigoAcordo = rs.%Get("CodigoAcordo")
		}
		quit:codigoAcordo'=""
		set obj = $get(^FATOrganizacao(0,convenio,1))
		set convenioPai = $$$FATOrganizacaoOrganizacaoPai(obj)
		set convenio = convenioPai
	}
	set i%AcordoComercial = codigoAcordo
	quit codigoAcordo]]></Implementation>
</Method>

<Method name="isInelegivelGet">
<Implementation><![CDATA[	if ..CodigodoItem="" quit $$$YES
	quit $$$NO]]></Implementation>
</Method>

<Method name="validaRegras">
<FormalSpec>codAgendamento,sequenciaAgendamento</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ..CodigoDoAgendamento = codAgendamento
	set ..SequenciaDoAgendamento = sequenciaAgendamento
	;
	Set objVARAgendamento	= $Get(^VARAgendamento(0, codAgendamento, 1))
	Set codPaciente			= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
	Set codPlanoSaude		= $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
	Set codConvenio			= $$$VARAgendamentoConvenio(objVARAgendamento)
	Set codCarteirinha		= $$$VARAgendamentoCarteirinha(objVARAgendamento)
	;
	;Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(0, codAgendamento, sequenciaAgendamento, 1))
	set regras = 0
	if ..VersaoDaTISS=""{
		do ..RegrasInvalidas.SetAt("Procedimento "_..Procedimento_" sem versão TISS cadastrada",$increment(regras))
	}
	if ..CategoriaTISS=""{
		do ..RegrasInvalidas.SetAt("Procedimento "_..Procedimento_" sem categoria TISS cadastrada",$increment(regras))
	}
	if codCarteirinha="",..isCarteirinhaObrigatoria{
		do ..RegrasInvalidas.SetAt("Obrigatório o número da carteirinha",$increment(regras))
	}else{
		if '..isMascaraValida(codCarteirinha){
			do ..RegrasInvalidas.SetAt("Máscara da carteirinha inválida ("_..CarteirinhaMascara_")",$increment(regras))
		}
		if ..CarteirinhaMin'="",$length(codCarteirinha)<..CarteirinhaMin{
			do ..RegrasInvalidas.SetAt("Mínimo de caracteres da carteirinha inválida ("_..CarteirinhaMin_")",$increment(regras))
		}
		if ..CarteirinhaMax'="",$length(codCarteirinha)>..CarteirinhaMax{
			do ..RegrasInvalidas.SetAt("Máximo de caracteres da carteirinha inválida ("_..CarteirinhaMax_")",$increment(regras))				
		}
	}
	quit ..InvalidoPorRegras]]></Implementation>
</Method>

<Method name="possuiComponentesGet">
<Implementation><![CDATA[	if ..Componentes.Count()>0 quit $$$YES
	quit $$$NO]]></Implementation>
</Method>

<Method name="InvalidoPorRegrasGet">
<Implementation><![CDATA[	if ..RegrasInvalidas.Count()>0 quit $$$YES
	if ..isInelegivel = 1 quit $$$YES
	quit $$$NO]]></Implementation>
</Method>

<Method name="RegrasInvalidasToString">
<Implementation><![CDATA[	set retorno = ""
	for {
		set linha = ..RegrasInvalidas.GetNext(.chave)
		quit:chave=""
		if retorno'="" set retorno = retorno_$c(10)
		set retorno = retorno_linha
	}
	quit retorno]]></Implementation>
</Method>

<Method name="isMascaraValida">
<FormalSpec>numeroCarteirinha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set strStatus = $$$YES
	if ..CarteirinhaMascara'=""{
		set posicaoCarteirinha = 1
		for posicao=1:1:$length(..CarteirinhaMascara){
			set carCarteirinha 	= $extract(numeroCarteirinha,posicaoCarteirinha)
			set carMascara		= $extract(..CarteirinhaMascara,posicao)
			if carMascara?1P continue
			if carMascara="A"{
				i carCarteirinha'?1A set strStatus = $$$NO quit
			}
			if carMascara="0"{
				i carCarteirinha'?1N set strStatus = $$$NO quit
			}
			set posicaoCarteirinha = posicaoCarteirinha+1
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="aplicaMascaraCarteirinha">
<FormalSpec>numeroCarteirinha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set carteirinha = numeroCarteirinha
	set strStatus = ..isMascaraValida(numeroCarteirinha)
	if $$$ISOK(strStatus),..CarteirinhaMascara'=""{
		set carteirinha = ""
		set posicaoCarteirinha = 1
		for posicao=1:1:$length(..CarteirinhaMascara){
			set carCarteirinha 	= $extract(numeroCarteirinha,posicaoCarteirinha)
			set carMascara		= $extract(..CarteirinhaMascara,posicao)
			if carMascara'?1P {
				set carteirinha = carteirinha_carCarteirinha 
				set posicaoCarteirinha = posicaoCarteirinha + 1
			}else{
				set carteirinha = carteirinha_carMascara 
			}
			
		}
	}
	quit carteirinha]]></Implementation>
</Method>

<Method name="recDadosExecutante">
<FormalSpec>codExecutante</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ..CodExecutante = codExecutante
	quit $$$OK]]></Implementation>
</Method>

<Method name="CodigoExecutanteGet">
<Implementation><![CDATA[	if ..IdentificacaoRecebedorNaFontePagadora'="" quit ..IdentificacaoRecebedorNaFontePagadora
	if ..CodExecutante="" {
		If (..CodigoDoAgendamento '= "" && (..SequenciaDoAgendamento'="")) {
			Set objFATAgendProc = $Get(^VARAgendamentoProcedimentos(0, ..CodigoDoAgendamento, ..SequenciaDoAgendamento, 1))
			Set numFatura = $Replace($$$VARAgendamentoProcedimentosControleAdmissao(objFATAgendProc),"/"," ")
			Quit:(numFatura="") ""
			Set numLote = $Order(^FATLoteFaturass(0,1,numFatura,1,""))	
			Quit:(numLote="") ""
			Set modLote = $$$FATLoteModelodeLote($Get(^FATLote(0,numLote,1)))
			Quit:(modLote="") ""
			Set codReceb = $$$FATModeloLoteRecebedor($Get(^FATModeloLote(0,modLote,1)))
			Quit:(codReceb="") ""
			Quit $$$FATOrganizacaoCNPJ($Get(^FATOrganizacao(0,codReceb,1)))
		}
		quit ""
	}
	set codExecutante = ..CodExecutante
	set cnpj = ""
	for {
		quit:codExecutante=""
		set objOrganizacao = $get(^FATOrganizacao(0,codExecutante,1))
		set cnpj = $$$FATOrganizacaoCNPJ(objOrganizacao)
		if cnpj'="" quit
		set codExecutante=$$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	}
	quit cnpj]]></Implementation>
</Method>

<Method name="NomeExecutanteGet">
<Implementation><![CDATA[	if ..CodExecutante="" quit ""
	set obj = $get(^FATOrganizacao(0,..CodExecutante,1))
	quit $$$FATOrganizacaoRazaoSocial(obj)]]></Implementation>
</Method>

<Method name="CNESExecutanteGet">
<Implementation><![CDATA[	if ..CodExecutante="" quit ""
	set codExecutante = ..CodExecutante
	set cnes = ""
	for {
		quit:codExecutante=""
		set objOrganizacao = $get(^FATOrganizacao(0,codExecutante,1))
		set cnes = $$$FATOrganizacaoCNES(objOrganizacao)
		if cnes'="" quit
		set codExecutante=$$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	}
	quit cnes]]></Implementation>
</Method>

<Method name="ANSExecutanteGet">
<Implementation><![CDATA[	if ..CodExecutante="" quit ""
	set codExecutante = ..CodExecutante
	set ans = ""
	for {
		quit:codExecutante=""
		set objOrganizacao = $get(^FATOrganizacao(0,codExecutante,1))
		set ans = $$$FATOrganizacaoRegistroANS(objOrganizacao)
		if ans'="" quit
		set codExecutante=$$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	}
	quit ans]]></Implementation>
</Method>

<Method name="InscricaoEstadualExecutanteGet">
<Implementation><![CDATA[	if ..CodExecutante="" quit ""
	set codExecutante = ..CodExecutante
	set inscEst = ""
	for {
		quit:codExecutante=""
		set objOrganizacao = $get(^FATOrganizacao(0,codExecutante,1))
		set inscEst = $$$FATOrganizacaoInscricaoEstadual(objOrganizacao)
		if inscEst'="" quit
		set codExecutante=$$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	}
	quit inscEst]]></Implementation>
</Method>

<Method name="InscricaoMunicipalExecutanteGet">
<Implementation><![CDATA[	if ..CodExecutante="" quit ""
	set codExecutante = ..CodExecutante
	set inscMunic = ""
	for {
		quit:codExecutante=""
		set objOrganizacao = $get(^FATOrganizacao(0,codExecutante,1))
		set inscMunic = $$$FATOrganizacaoInscricaoMunicipal(objOrganizacao)
		if inscMunic'="" quit
		set codExecutante=$$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	}
	quit inscMunic]]></Implementation>
</Method>

<Method name="ValorGet">
<Implementation><![CDATA[	set valor = ..Quantidade*..ValorUnitario
	quit valor]]></Implementation>
</Method>

<Method name="ValorUnitarioGet">
<Implementation><![CDATA[	Set valor = ..ValorUnitarioRegra
	If (..CodigoDoAgendamento'=""&&(..SequenciaDoAgendamento'="")&&(+$Piece(^VARAgendamentoProcedimentos(0,..CodigoDoAgendamento,..SequenciaDoAgendamento,1),"~",22)>0)) {
		Set valor = +$Piece(^VARAgendamentoProcedimentos(0,..CodigoDoAgendamento,..SequenciaDoAgendamento,1),"~",22)
	}
	quit valor]]></Implementation>
</Method>

<Method name="QuantidadeGet">
<Implementation><![CDATA[	Set qtde = ..QuantidadeRegra
	If (..CodigoDoAgendamento '= "" && (..SequenciaDoAgendamento '= "") && (..Procedimento '= "") && ($Data(^VARAgendamentoItensQtdeAlterada(0,..CodigoDoAgendamento,..SequenciaDoAgendamento,..Procedimento)))){
		Set qtde = $Piece(^VARAgendamentoItensQtdeAlterada(0,..CodigoDoAgendamento,..SequenciaDoAgendamento,..Procedimento,1),"~",1)
	}
	Quit qtde]]></Implementation>
</Method>

<Method name="UnidadeMedidaGet">
<Implementation><![CDATA[	if ..Procedimento quit ""
	set unid = $$SQLGetUnitSigla^VARSQL(..Procedimento)
	quit unid]]></Implementation>
</Method>
</Class>
</Export>