<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.www.bo.ModuleBO">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="getModuleAbbreviation">
<Description><![CDATA[

For a moduleName, gets the module abbreviation.
<p>
If the language is not specified, returns the definition,
that is the EN language.
<p>
The module name should not contain the underline character, if so
the system will change it to a blank space.
<p>
@author: Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>moduleName:%Library.String,language:%Library.String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
	
	if ('$data(language)) {
		set language = "EN"
	}
	
	set moduleName = ##class(COM.fwk.util.StringUtil).substituteString(moduleName, "_", " ")
	
	quit ##class(COM.fwk.www.bo.ApplicationParameterBO).%New().getParameterSearchValue("MODULE", language, moduleName)
]]></Implementation>
</Method>

<Method name="getModuleName">
<Description><![CDATA[

For a moduleAbbreviation, gets the module name, 
with the underline character on the place of the spaces.

If the language is not specified, returns the definition,
that is the EN language.

@author: Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>moduleAbbreviation:%Library.String,language:%Library.String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
	if ('$data(language)) {
		set language = "EN"
	}
	
	quit ##class(COM.fwk.www.bo.ApplicationParameterBO).%New().getParameterText("MODULE", language, moduleAbbreviation)
]]></Implementation>
</Method>
</Class>
</Export>