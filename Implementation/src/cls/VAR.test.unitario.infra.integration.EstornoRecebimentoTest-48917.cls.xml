<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.test.unitario.infra.integration.EstornoRecebimentoTest">
<ClassType/>
<Import>%UnitTest,VAR.test.infra.unittest,VAR.integration</Import>
<IncludeCode>COMSYS,WWWConst,INConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>TestCase</Super>

<Parameter name="RecebimentoTEMPORARYID">
<Type>%String</Type>
<Default>99/000002</Default>
</Parameter>

<Parameter name="EstornoTEMPORARYID">
<Type>%String</Type>
<Default>E99/000001</Default>
</Parameter>

<Parameter name="RecebimentoLinhaTEMPORARYID">
<Type>%String</Type>
<Default>1</Default>
</Parameter>

<Parameter name="EntidadeAIntegrar">
<Type>%String</Type>
<Default>RECEBIMENTO</Default>
</Parameter>

<Parameter name="TimerIntegracao">
<Type>%Integer</Type>
<Default>180</Default>
</Parameter>

<Method name="Run">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	do ##class(SuiteManager).RunTestCase(..%ClassName(1))]]></Implementation>
</Method>

<Method name="Test1Insert">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, idINRECSummary, idINRECSummaryLinha, objINREC, objINRECSummary, strStatus
	do ^WWWVAR

	do $$$AssertNotTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))

	kill ^INREC(0, ..#RecebimentoTEMPORARYID, 1)
	kill ^INREC(0, ..#EstornoTEMPORARYID, 1)
	kill ^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)

	set idINRECRerverse  = ..#EstornoTEMPORARYID
	set objINRECReverse = $get(^INREC(0, ..#EstornoTEMPORARYID, 1))
	
	set strStatus = $$$Save("INREC", idINRECRerverse, objINRECReverse, 1)
	
	set idINREC  = ..#RecebimentoTEMPORARYID
	set objINREC = $get(^INREC(0, ..#RecebimentoTEMPORARYID, 1))
	
	set strStatus = $$$Save("INREC", idINREC, objINREC, 1)
	
	set idINRECSummary  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECSummary = $get(^INRECSummary(0, ..#RecebimentoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	
	set strStatus = $$$Save("INRECSummary", idINRECSummary, objINRECSummary, 1)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))]]></Implementation>
</Method>

<Method name="Test2UpdateToConfirm">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, idINRECSummary, idINRECSummaryLinha, objINREC, objINRECSummary, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))

	set idINREC  = ..#RecebimentoTEMPORARYID
	set objINREC = $get(^INREC(0, ..#RecebimentoTEMPORARYID, 1))
	set $$$INRECType(objINREC) 			  = 2
	set $$$INRECTypeofReceiving(objINREC) = 2
	set $$$INRECLocation(objINREC) 		  = 1.1
	set $$$INRECStatus(objINREC) 		  = 0
	set $$$INRECSupplier(objINREC) 		  = 3
	set $$$INRECInvoiceNumber(objINREC)   = 1999999
	set $$$INRECInvoiceDate(objINREC) 	  = 62630
	set $$$INRECInvoiceTotal(objINREC) 	  = 1
	set $$$INRECFREE3(objINREC) 		  = 1
	set $$$INRECSummaryTotal(objINREC) 	  = 1
	
	set strStatus = $$$Save("INREC", idINREC, objINREC, 1)
	
	set idINRECSummary  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECSummary = $get(^INRECSummary(0, ..#RecebimentoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	set $$$INRECSummaryStatus(objINRECSummary) 			 = 0
	set $$$INRECSummaryFlag(objINRECSummary) 			 = 1
	set $$$INRECSummaryItem(objINRECSummary) 			 = 700
	set $$$INRECSummaryQuantityOrdered(objINRECSummary)  = 2
	set $$$INRECSummaryQuantityReceived(objINRECSummary) = 2
	set $$$INRECSummaryUnitQtyReceived(objINRECSummary)  = 2
	set $$$INRECSummaryLineType(objINRECSummary) 		 = 0
	set $$$INRECSummaryInventoryUnit(objINRECSummary) 	 = 290
	set $$$INRECSummaryOrderedUnit(objINRECSummary) 	 = 290
	set $$$INRECSummaryReceivedUnit(objINRECSummary) 	 = 290
	set $$$INRECSummaryUnitCost(objINRECSummary) 	 	 = 1
	
	set strStatus = $$$Save("INRECSummary", idINRECSummary, objINRECSummary, 1)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))]]></Implementation>
</Method>

<Method name="Test3Confirm">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	
	set idINREC  = ..#RecebimentoTEMPORARYID
	
	set strStatus = $$FirmReceipt^INReceipt(idINREC)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertEquals(strStatus,1) // Verifica a transação de confirmação]]></Implementation>
</Method>

<Method name="Test4UpdateToProcess">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, idINRECLine, objINREC, objINRECLine, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	
	set idINRECLine  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECLine = $get(^INRECLine(0, ..#RecebimentoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	set $$$INRECLineLotNumber(objINRECLine) 	 = 1
	set $$$INRECLineSupplier(objINRECLine) 	 	 = 3
	set $$$INRECLineExpirationDate(objINRECLine) = 62842
	set $$$INRECLineBrand(objINRECLine) 		 = 1
	
	set strStatus = $$$Save("INRECLine", idINRECLine, objINRECLine, 1)
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))]]></Implementation>
</Method>

<Method name="Test5Process">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	
	set idINREC  = ..#RecebimentoTEMPORARYID
	set objINREC = $get(^INREC(0, ..#RecebimentoTEMPORARYID, 1))
	
	set strStatus = $$PostTxn^INReceiptButtonP(idINREC,objINREC)
	
	if $$$ISOK(strStatus){
		do ##class(VAR.infra.integracao.GerenciaFilaPendencias).RegistraEvento(
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("ENTIDADERECEBIMENTO"),
					idINREC,
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
					##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("ACAOPROCESSAR")
	    		   )
	}
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertEquals(strStatus,1) // Verifica a transação de processamento]]></Implementation>
</Method>

<Method name="Test6UpdateToEstornar">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINREC, idINRECReverse, objINREC, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	
	set idINREC  	   = ..#RecebimentoTEMPORARYID
	set idINRECReverse = ..#EstornoTEMPORARYID
	set objINREC 	   = $get(^INREC(0, ..#EstornoTEMPORARYID, 1))
	
	set $$$INRECReceiptSourceNo(objINREC) = idINREC
	set $$$INRECType(objINREC) 			  = 5
	set $$$INRECFREE29(objINREC)		  = 2
	set $$$INRECStatus(objINREC) 		  = 0
	set $$$INRECLocation(objINREC)		  = 1.1
	
	set strStatus = $$$Save("INREC", idINRECReverse, objINREC, 1)
	
	set idINRECLine  = ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECLine = $get(^INRECLine(0, ..#RecebimentoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	
	set strStatus = $$$Save("INRECLine", idINRECLine, objINRECLine, 1)
	
	set idINRECReverseLine  = ..#EstornoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set objINRECReverseLine = $get(^INRECLine(0, ..#EstornoTEMPORARYID,..#RecebimentoLinhaTEMPORARYID, 1))
	set $$$INRECLineFREE14(objINRECReverseLine) 	    = ""
	set $$$INRECLineLocation(objINRECReverseLine) 	    = 1.1
	set $$$INRECLineCacheLink(objINRECReverseLine)      = "P12749"
	set $$$INRECLineItem(objINRECReverseLine)		    = 700
	set $$$INRECLineQuantity(objINRECReverseLine) 	    = 2
	set $$$INRECLineReceivedUnit(objINRECReverseLine)   = 290
	set $$$INRECLineOrderedUnit(objINRECReverseLine)    = 290
	set $$$INRECLineReceiptDate(objINRECReverseLine)    = 62613
	set $$$INRECLineLotNumber(objINRECReverseLine) 	    = 1
	set $$$INRECLineSupplier(objINRECReverseLine) 	    = 3
	set $$$INRECLineBrand(objINRECReverseLine) 		    = 1
	set $$$INRECLineStockLocation(objINRECReverseLine)  = "UNIT-AGUARD"
	set $$$INRECLineTotal(objINRECReverseLine)		    = 2
	set $$$INRECLineUnit(objINRECReverseLine)		    = 290
	set $$$INRECLineUnitQuantity(objINRECReverseLine)   = 2
	set $$$INRECLineAverageCost(objINRECReverseLine)    = 1
	set $$$INRECLineEach(objINRECReverseLine)  		    = 1
	set $$$INRECLineExpirationDate(objINRECReverseLine) = 62842
	set $$$INRECLineReverseStatus(objINRECReverseLine)  = 0
	set $$$INRECLineReversesLine(objINRECReverseLine) 	= ..#RecebimentoLinhaTEMPORARYID
	set $$$INRECLineReversesREC(objINRECReverseLine) 	= ..#RecebimentoTEMPORARYID
	
	set strStatus = $$$Save("INRECLine", idINRECReverseLine, objINRECReverseLine, 1)
		
	do $$$AssertTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#EstornoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))]]></Implementation>
</Method>

<Method name="Test7EstornarProcess">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idINRECReverse, strStatus
	do ^WWWVAR

	do $$$AssertTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	
	set idINRECReverse  = ..#EstornoTEMPORARYID
	
	set strStatus = $$ReverseTxn^INRECReverse(idINRECReverse)
	
	if $$$ISOK(strStatus){
		do ##class(VAR.infra.integracao.GerenciaFilaPendencias).RegistraEvento(
				##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("ENTIDADERECEBIMENTO"),
				idINRECReverse,
				##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(VAR.infra.integracao.GerenciaFilaPendencias).%GetParameter("ACAOESTORNAR")
    		   )
	}
	
	do $$$AssertTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	do $$$AssertEquals(strStatus,1) // Verifica a transação de processamento]]></Implementation>
</Method>

<Method name="Test8DadoAIntegrar">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	new idVARDadoAIntegrar
	do ^WWWVAR
	
	set stIntegrado    = ""
	set estorno	       = ""
	set entidade       = ..#EntidadeAIntegrar
	set idEstorno	   = ..#EstornoTEMPORARYID
	
	&sql(
		select Chave1Entidade
		into :estornoo
		from SQLUser.VARDadoAIntegrar
		where Entidade = :entidade and Chave1Entidade = :idEstorno and Acao = 'estornar'
	)
	
	if 'SQLCODE {
		set estorno = estornoo
	}
	
	do $$$AssertEquals(estorno,idEstorno) // Verifica se está na lista de dados a integrar
	
	if (estorno = idEstorno){
		hang ..#TimerIntegracao // Espera o tempo necessário para o WebService fazer a integração e alterar o status
	}
	
	&sql(
		select Integrado
		into :integrado
		from SQLUser.VARDadoAIntegrar
		where Entidade = :entidade and Chave1Entidade = :idEstorno
	)
	
	if 'SQLCODE {
		set stIntegrado = integrado
	}

	do $$$AssertEquals(stIntegrado,"S") // Verifica a integração realizada]]></Implementation>
</Method>

<Method name="Test9Delete">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	;/*
	new idINREC, idINRECLine, idINRECSummary, idINRECSummaryLinha, objINREC, objINRECLine, objINRECSummary, strStatus
	do ^WWWVAR
	
	do $$$AssertTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))

	set paramDelete 	= ""
	set idINREC 		= ..#RecebimentoTEMPORARYID
	set idINRECReverse  = ..#EstornoTEMPORARYID
	set idLine 			= ..#RecebimentoLinhaTEMPORARYID
	set idINRECLine  	= ..#RecebimentoTEMPORARYID_$$$COMMA_..#RecebimentoLinhaTEMPORARYID
	set entidade 		= ..#EntidadeAIntegrar
	
	set strStatus = $$$Kill("INRECLine", idINRECLine)
	
	&sql(
		delete
		from SQLUser.INREC
		where ReceiptNumber = :idINRECReverse
	)
	
	&sql(
		delete
		from SQLUser.INRECSummary
		where ReceiptNumber = :idINREC and LineNumber = :idLine
	)
	
	&sql(
		delete
		from SQLUser.INREC
		where ReceiptNumber = :idINREC
	)
	
	&sql(
		delete
		from SQLUser.VARDadoAIntegrar
		where Entidade = :entidade and Chave1Entidade = :idINREC
	)
	
	&sql(
		delete
		from SQLUser.VARDadoAIntegrar
		where Entidade = :entidade and Chave1Entidade = :idINRECReverse
	)
	
	if 'SQLCODE {
		set paramDelete = 1
	}
	
	// Verifica exclusões
	do $$$AssertNotTrue($data(^INREC(0, ..#RecebimentoTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INREC(0, ..#EstornoTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INRECSummary(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertNotTrue($data(^INRECLine(0, ..#RecebimentoTEMPORARYID, ..#RecebimentoLinhaTEMPORARYID, 1)))
	do $$$AssertEquals(paramDelete,1)
	;*/]]></Implementation>
</Method>
</Class>
</Export>