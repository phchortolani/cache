<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.data.global.MAPPA">
<ClassType/>
<Import>SourceControl.control,SourceControl.data</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>GlobalBase</Super>
<Method name="ExportAll">
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set strStatus = $$$OK

	set nErrors = 0
	set nExported = 0

	// Get all the forms
	set id = ""
	for {
		set id = $order(^VARWorkFlowPEP(0, id))
		quit:(id = "")

		set strStatus = ..Export(id, 2)
		if ($$$ISERR(strStatus)) {
			set nErrors = nErrors + 1
		}
		else {
			set nExported = nExported + 1
		}
	}

	set id = ""
	for {
		set id = $order(^VARWorkFlowImagens(0, id))
		quit:(id = "")

		set strStatus = ..Export2(id, 2)
		if ($$$ISERR(strStatus)) {
			set nErrors = nErrors + 1
		}
		else {
			set nExported = nExported + 1
		}
	}

	write !, "Number of exported files: "_nExported
	write !, "Number of errors during export: "_nErrors

	quit nErrors
]]></Implementation>
</Method>
<Method name="Export">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,printMessage:%Boolean=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK

	if ($get(id) = "") {
		quit ##class(Errors).MakeAndPrintErrorStatus("Empty form "_
			"name!", printMessage)
	}

	if ('$data(^VARWorkFlowPEP(0, id))) {
		quit ##class(Errors).MakeAndPrintErrorStatus("MAPPA "_
			"form definition not found: "_id_". Skipping "_
			"it.", printMessage)
	}

	// Empty ignored list
	set ignoredList = ""
	set dir = ##class(DirectoryFile).ConcatPath(##class(SourceControl.control.Config).GetProjectDir(), "globals/nm/mappa/")
	
	set fileName = ##class(DirectoryFile).ConcatPath(
		dir,##class(FileControl).GetSafeFilename(id)_"."_"mappa")
	
	if ($data(^VARWorkFlowPEP(0, id))) {
		set subs = $listbuild("0,"_##class(Strings).QuoteString(id))
		set globalList = $listbuild("^VARWorkFlowPEP","^VARWorkFlowCID","^VARWorkFlowEstPont","^VARWorkFlowEstPontCondicao","^VARWorkFlowEstadiamento","^VARWorkFlowEstadiamentoEstagio","^VARWorkFlowEstEstagioC","^VARWorkFlowTerapia","^VARWorkFlowTerapiaCondicoes","^VARWorkFlowTerapiaMedicacao","^VARWorkFlowRegTera","^VARWorkFlowRegTeraCiclo","^VARWorkFlowRegTeraCicloMed")
		set sc = ..ExportGlobalNode(fileName, id, globalList, subs,
			ignoredList, printMessage=2, .ignored, 0)

		if ($$$ISOK(sc) && ('ignored)) {
			if (printMessage) {
				write !, "MAPPA '"_id_"' successfully "_
					"exported as '"_fileName_"'" 
			}

			// Update the timestamp, so that the source control can use
			// it to prevent the same file from being loaded again.
			do ##class(FileControl).UpdateTimeStamp(fileName)
		}
	} else {
		// Removing it (exporting the deletion)
		set sc = ##class(DirectoryFile).Delete(fileName, printMessage)
	}


	quit sc
]]></Implementation>
</Method>
<Method name="Export2">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,printMessage:%Boolean=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK

	if ($get(id) = "") {
		quit ##class(Errors).MakeAndPrintErrorStatus("Empty form "_
			"name!", printMessage)
	}

	if ('$data(^VARWorkFlowImagens(0, id))) {
		quit ##class(Errors).MakeAndPrintErrorStatus("MAPPA "_
			"form definition not found: "_id_". Skipping "_
			"it.", printMessage)
	}

	// Empty ignored list
	set ignoredList = ""
	set dir = ##class(DirectoryFile).ConcatPath(##class(SourceControl.control.Config).GetProjectDir(), "globals/nm/mappa/")
	
	set fileName = ##class(DirectoryFile).ConcatPath(
		dir,"Imagens_"_##class(FileControl).GetSafeFilename(id)_"."_"mappa")
	
	if ($data(^VARWorkFlowImagens(0, id))) {
		set subs = $listbuild("0,"_##class(Strings).QuoteString(id))
		set globalList = $listbuild("^VARWorkFlowImagens","^VARWorkFlowImagensDetalhes")
		set sc = ..ExportGlobalNode(fileName, id, globalList, subs,
			ignoredList, printMessage=2, .ignored, 0)

		if ($$$ISOK(sc) && ('ignored)) {
			if (printMessage) {
				write !, "MAPPA '"_id_"' successfully "_
					"exported as '"_fileName_"'" 
			}

			// Update the timestamp, so that the source control can use
			// it to prevent the same file from being loaded again.
			do ##class(FileControl).UpdateTimeStamp(fileName)
		}
	} else {
		// Removing it (exporting the deletion)
		set sc = ##class(DirectoryFile).Delete(fileName, printMessage)
	}


	quit sc
]]></Implementation>
</Method>
<Method name="IsToIgnore">
<ClassMethod>1</ClassMethod>
<FormalSpec>globalName:%String,node:%String,custom:%Boolean</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set id = ""
	set subId = ""
	if ((globalName = "^COMView") ||
		(globalName = "^COMViewColumn") ||
		(globalName = "^COMViewFilter")) {
		set id = $qsubscript(node, 2)
		set subId = $qsubscript(node, 3)
	}
	elseif (globalName = "^COMViewLang") {
		set id = $qsubscript(node, 2)
		set subId = $qsubscript(node, 4)
	}

	set ignore = ..IsDeleted(id, subId)

	if ('ignore) {
		set ignore = ..IsPrivate(id, subId)
	}

	if ('ignore) {
		set favCustom = ..IsCustom(id, subId)

		if ((('custom) && favCustom) ||
			(custom && ('favCustom))) {
			set ignore = 1
		}
	}

	quit ignore
]]></Implementation>
</Method>
<Method name="IsDeleted">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,subId:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	if (($length(id) '= 0) && ($length(subId) '= 0) &&
		('$data(^COMView(0, id, subId, 1)))) {
		quit 1
	}

	quit 0
]]></Implementation>
</Method>
<Method name="IsPrivate">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,subId:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	#define COMViewUser1(%obj) $piece(%obj,"~",3)

	if (($length(id) = 0) || ($length(subId) = 0) ||
		('$data(^COMView(0, id, subId, 1)))) {
		quit 0
	}

	set favorite = $get(^COMView(0, id, subId, 1))

	quit ($length($$$COMViewUser1(favorite)) > 0)
]]></Implementation>
</Method>
<Method name="IsCustom">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,subId:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	#define COMViewDistribute(%obj) $piece(%obj,"~",5)

	if (($length(id) = 0) || ($length(subId) = 0) ||
		('$data(^COMView(0, id, subId, 1)))) {
		quit 0
	}

	set favorite = $get(^COMView(0, id, subId, 1))

	quit (+$$$COMViewDistribute(favorite) = $$$NO)
]]></Implementation>
</Method>
<Method name="GetGlobals">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// Lista de favoritos
	quit $listbuild("^VARWorkFlowPEP")
]]></Implementation>
</Method>
<Method name="GetCustomGlobals">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit ..GetGlobals()
]]></Implementation>
</Method>
</Class>
</Export>