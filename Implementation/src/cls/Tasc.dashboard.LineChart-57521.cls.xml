<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Tasc.dashboard.LineChart">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Chart</Super>

<Property name="tickInterval">
<Type>%Integer</Type>
<InitialExpression>0</InitialExpression>
</Property>


<Property name="logaritmico">
<Type>%String</Type>
<InitialExpression>"    type: 'logarithmic',"</InitialExpression>
</Property>


<Property name="ExibirEmData">
<Type>%Boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>


<Method name="GetCategorias">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	if ($L(..CategoriasX) > 0) { 
		quit ..CategoriasX
	}
	else {
		quit ..GetSubCategorias(..Series.GetAt(1).SubSeries,1)
	}
]]></Implementation>
</Method>

<Method name="Print">
<Implementation><![CDATA[
	
	write "<script type=""text/javascript"">" ,!
    set numChart = "chart"_$p($now(),".",2)
    write "var "_numChart_";" ,!
    write " $(document).ready(function() { " ,!
    write "     "_numChart_" = new Highcharts.Chart({ ",!
    write "     chart: { ",!
    write "         renderTo: '"_..DivName_"', ",!
    write "         defaultSeriesType: 'spline', " ,!
    write "         backgroundColor: '"_..CorDeFundo_"', ",!
    write "         borderWidth: 1, " ,!
    write "         borderColor: '#dfe9c9'" ,!
    write "     }," ,!
    write "     title: {" ,!
    write "         text: '"_..Titulo_"'" ,!
    write "     }," ,!
    write "     credits: {" ,!
    write "         enabled: 0" ,!
    write "     }," ,!
    write "		tooltip: {" ,!
    if (1) {
     write "		    crosshairs: true," ,!
	 ;write "			shared: true," ,!
    }
    if (' ..ExibirEmData) {
     write "			formatter: function() {" ,!
     write "				return '<strong>' + this.x + '/' + this.series.name + ':</strong> "_..Prefixo_"' + Highcharts.numberFormat(this.y, 2, ',', '.')+'"_..Sufixo_"';" ,!
     write "			}" ,!
    }
    else {
     write " pointFormat: '{point.x:%e. %b}: R${point.y:.2f}'",!
    }
    write "		}," ,!    
    write "		xAxis: {" ,!
   if ('..ExibirEmData) {
    write "     categories: "_..GetCategorias() ,!
    write "     title: {",!
	write "          text: '"_..TituloX_"'",!
	write "     }",!
   }
   else {
	write "          type: 'datetime',",!
	write "          dateTimeLabelFormats: { // don't display the dummy year",!
	write "              month: '%e. %b',",!
	write "             year: '%b'",!
	write "         },",!
	write "           title: {",!
	write "          text: 'Date'",!
	write "     }",!
   }
    write "     }," ,!
    write "     yAxis: {" ,!
    write "         min: 0," ,!
    if (..tickInterval > 0) {
    	write "         tickInterval: "_..tickInterval_"," ,!
    	
    }
    write "         title: {" ,!
    write "             text: '"_..TituloY_"'" ,!
    write "         }," ,!
    write "			labels: {" ,!
    write "				formatter: function() {" ,!
	write "					return Highcharts.numberFormat(this.value, 2, ',', '.')" ,!
	write "				}" ,!
	write "			}" ,!
    write "     }," ,!
   
	
		write "	plotOptions: {",!
		write "     spline: {",!
        write "        marker: {",!
        write "            radius: 4,",!
        write "            lineColor: '#666666',",!
        write "            lineWidth: 1",!
        write "        }",!
        if (0) {
	        write "         dataLabels: {",!
	        write "            enabled: true,",!
	        write "				formatter: function() {" ,!
			write "					return Highcharts.numberFormat(this.yAxis.Value, 2, ',', '.')" ,!
			write "				}" ,!
      
       		write "         },",!
        	write "         enableMouseTracking: false",!
        }
        	write "    },",!
   
     if (..Clickable) {
		write "		series: {",!
		write "			cursor: 'pointer',",!
		write "			events: {",!
		write "					click: function (event) {",!
		write "					abreLink('?serie='+this.name);",!
		write "				}",!
		write "			}",!
		write "		}",!
	}
		write "	},",!
	

    write "     series: [",!
    
    For i = 1:1:..Series.Count() {
		if (i = ..Series.Count()) {
			set fim = "}"
		}
		else {
			set fim = "},"
		}
		set Valores = ..GetSubValores(..Series.GetAt(i).SubSeries,1)
		set Titulo = ..Series.GetAt(i).Titulo
		do ..PrintSeries(Titulo,Valores)
		w fim
	}
    write "     ]" ,!
    write " });" ,!
    write "});" ,!
    
	w "</"_"script>",!
	
	do ##super()
]]></Implementation>
</Method>

<Method name="PrintSeries">
<FormalSpec>nome,data</FormalSpec>
<Implementation><![CDATA[
  	write "		{" ,!
    write "         name: '"_nome_"'," ,!
    write "         data: "_data ,!
]]></Implementation>
</Method>
</Class>
</Export>