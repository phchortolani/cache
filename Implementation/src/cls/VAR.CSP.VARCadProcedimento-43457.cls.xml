<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARCadProcedimento">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Quit:$$$ISERR(..ValidaSessao()) %response
	Set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="ValidaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	If (status = 0 || (YBED = "UNKNOWN")){
		Set status = 0
		Set %response.Status = "401 Unauthorized"
		Set resp = {}
		Set resp.erro = 1
		Set resp.mensagem = "SessÃ£o Expirou"
		Write resp.%ToJSON()
	}
	Return status]]></Implementation>
</Method>

<Method name="GetDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	;
	Set objINART = $Get(^INART(YM, pCodProcedimento, 1))
	;
	Set situacao = $$$INARTHoldReason(objINART)
	Set descricaoResumida = $$$INARTSearchName(objINART)
	Set descricaoItemPedido = $$$INARTDescItemPedido(objINART)
	Set descricaoCompleta = $$$INARTCustomerTextorItemTextNo(objINART)
	Set tipo = $$$INARTTipoProcedimento(objINART)
	Set tempo = $$$INARTTempodeProcedimento(objINART)
	Set grupo = $$$INARTItemGroup(objINART)
	Set unidadeNaoAtendende = $$$INARTUnidadesquenaoAtende(objINART)
	Set criadoEm= $$$INARTDateCreated(objINART)
	Set criadoPor = $$$INARTCreatedBy(objINART)
	Set alteradoEm = $$$INARTDateChanged(objINART)
	Set alteradoPor = $$$INARTChangedBy(objINART)
	Set requerAgendamento = $$$INARTRequerAgendamento(objINART)
	Set jejum = $$$INARTNecessidadeJejum(objINART)
	Set salesPrice = $$$INARTSalesPrice(objINART)
	Set preRequisitoResumo = $$$INARTResumodoPreRequisito(objINART)
	Set preRequisito = $$$INARTPreRequisito(objINART)
	Set centroCusto = $$$INARTCentrodeCusto(objINART)
	Set codExecutor = ""
	&SQL(
		Select Executor Into :codExecutor From SQLUser.VARManualExame
		Where Company = 0 And CodigoExame = :pCodProcedimento
					And Situacao = 'A'
	)
	;
	Set listGeral = {}
	Set listGeral.descricaoResumida		= descricaoResumida
	Set listGeral.descricaoItemPedido = descricaoItemPedido
	Set listGeral.descricaoCompleta		= descricaoCompleta
	Set listGeral.tipo 								= tipo
	Set listGeral.tempo 							= $ZTime(tempo,2)
	Set listGeral.grupo								= grupo
	Set listGeral.unidadeNaoAtendende = unidadeNaoAtendende
	Set listGeral.requerAgendamento 	= requerAgendamento
	Set listGeral.jejum 							= jejum
	Do listGeral.%Set("valor", salesPrice, "Number")
	Set listGeral.preRequisitoResumo 	= preRequisitoResumo
	Set listGeral.centroCusto = centroCusto
	;	
	Set listControle = {}
	Set listControle.criadoEm 		= $Select(criadoEm="":"",1:$ZDateTime(criadoEm,4,2))
	Set listControle.criadoPor 		= $$SQLGetUserName^VARSQL(criadoPor)
	Set listControle.alteradoEm 	= $Select(alteradoEm="":"",1:$ZDateTime(alteradoEm,4,2))
	Set listControle.alteradoPor 	= $$SQLGetUserName^VARSQL(alteradoPor)
	;
	Set listRetorno = {}
	Set listRetorno.dadosGeral 		= listGeral
	Set listRetorno.dadosControle = listControle
	Set listRetorno.preRequisito	= preRequisito
	Set listRetorno.situacao 			= situacao
	Set listRetorno.codExecutor		= codExecutor
	;
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = ""
	Set erro = 0
	Try{
		Set pCodProcedimento 	= $Get(%request.Data("pCodProcedimento",1))
		Set pSituacao 				= $Get(%request.Data("pSituacao",1))
		Set pObjGeral 				= $Get(%request.Data("pObjGeral",1))
		Set pPreRequisito			= $Get(%request.Data("pPreRequisito",1))
		Set YBED 							= $Get(%request.Data("YBED",1))
		If (pCodProcedimento = "+") {
			Set pCodProcedimento = ""
		}
		Set dadosGeral = [].%FromJSON(pObjGeral)
		Set objINART = ""
		If (pCodProcedimento '= "") {
			 Set objINART = $Get(^INART(YM, pCodProcedimento, 1))
		}
		Set $$$INARTHoldReason(objINART) = pSituacao
		Set $$$INARTSearchName(objINART) = dadosGeral.descricaoResumida
		Set $$$INARTDescItemPedido(objINART) = dadosGeral.descricaoItemPedido
		Set $$$INARTCustomerTextorItemTextNo(objINART) = dadosGeral.descricaoCompleta
		Set $$$INARTTipoProcedimento(objINART) = dadosGeral.tipo
		Set $$$INARTItemGroup(objINART) = dadosGeral.grupo
		Set $$$INARTUnidadesquenaoAtende(objINART) = dadosGeral.unidadeNaoAtendende
		Set $$$INARTRequerAgendamento(objINART)	= dadosGeral.requerAgendamento
		Set $$$INARTNecessidadeJejum(objINART) = dadosGeral.jejum
		Set $$$INARTResumodoPreRequisito(objINART) = dadosGeral.preRequisitoResumo
		Set $$$INARTPreRequisito(objINART) = pPreRequisito
		Set $$$INARTSalesPrice(objINART) = dadosGeral.valor
		Set $$$INARTCentrodeCusto(objINART) = dadosGeral.centroCusto
		If (pCodProcedimento = "") {
			Set $$$INARTItemType(objINART) = 2
			Set $$$INARTVATTax(objINART) = 1
			Set $$$INARTUnitofMeasure(objINART) = 60
			Set $$$INARTWeight(objINART)  = 0
			Set $$$INARTExecutionTime(objINART) = 0
			Set $$$INARTProductionCosts(objINART) = "0.00000000"
			Set $$$INARTNumberOfWorkers(objINART) = 1
			Set $$$INARTPeriodInDays(objINART) = 0
			Set $$$INARTAverageCost(objINART) = "0.00000000"
			Set $$$INARTSupplierGuarantee(objINART) = 1
			Set $$$INARTCustomerGuarantee(objINART) = 1
			Set $$$INARTOldQuantityUnit(objINART) = 60
			Set $$$INARTFREE5(objINART) = 0
			Set $$$INARTItemPolicy(objINART) = 1
			Set strRetorno =  $$GerarChaveINART^VARINART("+", objINART, 1)
			Set strStatus = $Piece(strRetorno,Y,1)
			If (strStatus = 1) {
				Set pCodProcedimento = $Piece(strRetorno,Y,2)
			}
		}Else{
			Set $$$INARTDateChanged(objINART) = $Horolog
			Set $$$INARTChangedBy(objINART) = YBED
			Set strStatus = $$$Save("INART", pCodProcedimento, objINART, $$$YES)
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.codProcedimento = pCodProcedimento
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetItensUtilizados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	;
	Set meuSQL = 	"Select * From SQLUser.VARProcedItensUtilizados Where Company = 0 " _
								"And CodigoProcedimento = '"_pCodProcedimento_"'"
	;
	Set arrayRetorno = []
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Do listDados.%Set("item", rSet.%Get("CodigoItem"))
		Do listDados.%Set("itemDesc", "("_rSet.%Get("CodigoItem")_") "_$$SQLGetDescricaoProduto^VARSQL(rSet.%Get("CodigoItem"),1))
		Do listDados.%Set("qtde", rSet.%Get("Quantidade"))
		Do listDados.%Set("criadoEm", $Select(rSet.%Get("CriadoEm")="":"",1:$ZDateTime(rSet.%Get("CriadoEm"),4,2)))
		Do listDados.%Set("criadoPor", $$SQLGetUserName^VARSQL(rSet.%Get("CriadoPor")))
		Do listDados.%Set("alteradoEm", $Select(rSet.%Get("AlteradoEm")="":"",1:$ZDateTime(rSet.%Get("AlteradoEm"),4,2)))
		Do listDados.%Set("alteradoPor", $$SQLGetUserName^VARSQL(rSet.%Get("AlteradoPor")))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmItensUtilizados">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set objVARProcedItensUtilizados = ""
	Set pCodigoItem = ""

	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""

		Set campo = $Piece(objDados(index),"~",1)
		Set valor = $Piece(objDados(index),"~",2)
		
		Set:campo="qtde" $$$VARProcedItensUtilizadosQuantidade(objVARProcedItensUtilizados)	= valor
		Set:campo="item" pCodigoItem	= valor

	}
	Set $$$VARProcedItensUtilizadosCriadoEm(objVARProcedItensUtilizados)	= $Horolog
	Set $$$VARProcedItensUtilizadosCriadoPor(objVARProcedItensUtilizados)	= YBED

	Set status = $$$Save("VARProcedItensUtilizados",pCodProcedimento_","_pCodigoItem,objVARProcedItensUtilizados,$$$YES)

	Return status]]></Implementation>
</Method>

<Method name="ExcItensUtilizados">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,pCodigoItem,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Return $$$Kill("VARProcedItensUtilizados",pCodProcedimento_","_pCodigoItem)]]></Implementation>
</Method>

<Method name="GetRestricaoConvenio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	;
	Set meuSQL = 	"Select * From SQLUser.VARProcedRestPlanoSaude Where Company = 0 " _
								"And CodigoProcedimento = '"_pCodProcedimento_"'"
	;
	Set arrayRetorno = []
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Do listDados.%Set("codPlanoSaude", rSet.%Get("CodigoPlanoSaude"))
		Do listDados.%Set("descPlanoSaude", $$GetDescPlanoSaude^VARSQL(rSet.%Get("CodigoConvenio"), rSet.%Get("CodigoPlanoSaude")))
		Do listDados.%Set("codConvenio", rSet.%Get("CodigoConvenio"))
		Do listDados.%Set("descConvenio", $$GetDescConvenio^VARSQL(rSet.%Get("CodigoConvenio")))
		Do listDados.%Set("codigos", rSet.%Get("CodigoConvenio")_"~"_rSet.%Get("CodigoPlanoSaude"))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmRestricaoConvenio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set objVARProcedRestPlanoSaude = ""
	Set pCodigoConvenio = ""
	Set pCodigoPlanoSaude = ""

	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""

		Set campo = $Piece(objDados(index),"~",1)
		
		If (campo = "planoSaude") {
			Set pCodigoConvenio		=	$Piece(objDados(index),"~",2)
			Set pCodigoPlanoSaude = $Piece(objDados(index),"~",3)
		}

	}

	Set $$$VARProcedRestPlanoSaudeCriadoEm(objVARProcedRestPlanoSaude)	= $Horolog
	Set $$$VARProcedRestPlanoSaudeCriadoPor(objVARProcedRestPlanoSaude)	= YBED
	
	Return $$$Save("VARProcedRestPlanoSaude",pCodProcedimento_","_pCodigoConvenio_","_pCodigoPlanoSaude,objVARProcedRestPlanoSaude,$$$YES)]]></Implementation>
</Method>

<Method name="ExcRestricaoConvenio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,pId,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED

	Set pCodigoConvenio		= $Piece(pId,"~",1)
	Set pCodigoPlanoSaude = $Piece(pId,"~",2)

	
	Return $$$Kill("VARProcedRestPlanoSaude",pCodProcedimento_","_pCodigoConvenio_","_pCodigoPlanoSaude)]]></Implementation>
</Method>

<Method name="GetRestProcedSeq">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	;
	Set meuSQL = 	"Select * From SQLUser.VARProcedRestProcedSeq Where Company = 0 " _
								"And CodigoProcedimento = '"_pCodProcedimento_"'"
	;
	Set arrayRetorno = []
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Do listDados.%Set("procedimento", rSet.%Get("CodigoProcedimentoSequenc"))
		Do listDados.%Set("procedimentoDesc", "("_rSet.%Get("CodigoProcedimentoSequenc")_") "_$$SQLGetDescricaoProduto^VARSQL(rSet.%Get("CodigoProcedimentoSequenc"),1))
		Do listDados.%Set("tempo", $Ztime(rSet.%Get("Tempo"),2))
		Do listDados.%Set("criadoEm", $Select(rSet.%Get("CriadoEm")="":"",1:$ZDateTime(rSet.%Get("CriadoEm"),4,2)))
		Do listDados.%Set("criadoPor", $$SQLGetUserName^VARSQL(rSet.%Get("CriadoPor")))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmRestProcedSeq">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set objVARProcedRestProcedSeq = ""
	Set pCodigoProdecimentoRest = ""

	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""

		Set campo = $Piece(objDados(index),"~",1)
		Set valor = $Piece(objDados(index),"~",2)
		
		Set:campo="tempo" $$$VARProcedRestProcedSeqTempo(objVARProcedRestProcedSeq)	= $ZTimeH(valor,2,0)
		Set:campo="procedimento" pCodigoProdecimentoRest	= valor

	}
	Set $$$VARProcedRestProcedSeqCriadoEm(objVARProcedRestProcedSeq)	= $Horolog
	Set $$$VARProcedRestProcedSeqCriadoPor(objVARProcedRestProcedSeq)	= YBED

	Set status = $$$Save("VARProcedRestProcedSeq",pCodProcedimento_","_pCodigoProdecimentoRest,objVARProcedRestProcedSeq,$$$YES)

	Return status]]></Implementation>
</Method>

<Method name="ExcRestProcedSeq">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,pCodigoProdecimentoRest,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Return $$$Kill("VARProcedRestProcedSeq",pCodProcedimento_","_pCodigoProdecimentoRest)]]></Implementation>
</Method>

<Method name="SalvarLocalAtendimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = $$$OK
	Set erro = 0
	Try{
		Set pCodProcedimento 	= $Get(%request.Data("pCodProcedimento",1))
		Set pUnidade 					= $Get(%request.Data("pUnidade",1))
		Set pSala 						= $Get(%request.Data("pSala",1))
		Set pLeito 						= $Get(%request.Data("pLeito",1))
		Set YBED 							= $Get(%request.Data("YBED",1))
		;Verificar Conflito
		Set objINARTLocalAt = $Get(^INARTLocalAtendimento(YM, pCodProcedimento, pUnidade, pSala, pLeito, 1))
		If (objINARTLocalAt = "") {
			Set $$$INARTLocalAtendimentoCriadoEm(objINARTLocalAt) 	= $Horolog
			Set $$$INARTLocalAtendimentoCriadoPor(objINARTLocalAt) 	= YBED
			Set strStatus = $$$Save("INARTLocalAtendimento", pCodProcedimento_","_pUnidade_","_pSala_","_pLeito, objINARTLocalAt, $$$YES)
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetLocalAtendimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	;
	Set meuSQL = 	"Select * From SQLUser.INARTLocalAtendimento Where Company = 0 " _
								"And Procedimento = '"_pCodProcedimento_"'"
	;
	Set arrayRetorno = []
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set id = rSet.%Get("Procedimento")_"~"_rSet.%Get("Unidade")_"~"_rSet.%Get("Sala")_"~"_rSet.%Get("LeitoEquipamento")
		Set codSala 	= rSet.%Get("Sala")
		Set codLeito 	= rSet.%Get("LeitoEquipamento")
		Set objVARSalasAtendimentos = $Get(^VARSalasAtendimentos(0, codSala, 1))
		Set descSala = $$$VARSalasAtendimentosNome(objVARSalasAtendimentos)	
		If (codLeito '= "T") {	
			Set objVARLeitosAtendimentos = $Get(^VARLeitosAtendimentos(0, codSala, codLeito, 1))
			Set descLeito 	= $$$VARLeitosAtendimentosDescricao(objVARLeitosAtendimentos)
			Set codSituacao = $$$VARLeitosAtendimentosSituacao(objVARLeitosAtendimentos)
		}Else{
			Set descLeito 	= "Todos"
			Set codSituacao = $$$VARSalasAtendimentosSituacao(objVARSalasAtendimentos)
		}
		
		Set sitSala = ##Class(User.Search.PesquisasJson).GetDescricaoWWW101("MEDPROVIDERSTA", codSituacao)
		Set listDados = {}
		Do listDados.%Set("id", id)
		Do listDados.%Set("unidade", $$SQLGetLocationName^VARSQL(rSet.%Get("Unidade")))
		Do listDados.%Set("sala", descSala)
		Do listDados.%Set("leito", descLeito)
		Do listDados.%Set("situacao", sitSala)
		Do listDados.%Set("criadoEm", $Select(rSet.%Get("CriadoEm")="":"",1:$ZDateTime(rSet.%Get("CriadoEm"),4,2)))
		Do listDados.%Set("criadoPor", $$SQLGetUserName^VARSQL(rSet.%Get("CriadoPor")))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ExcLocalAtendimento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,pID,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set pCodUnidade = $Piece(pID,"~",2)
	Set pCodSala = $Piece(pID,"~",3)
	
	Return $$$Kill("INARTLocalAtendimento",pCodProcedimento_","_pCodUnidade_","_pCodSala)]]></Implementation>
</Method>

<Method name="GetLeitoAtendimentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodUnidade	= $Get(%request.Data("pCodUnidade",1))
	Set pCodSala		= $Get(%request.Data("pCodSala",1))

	Set meuSQL = "Select CodigodoLeito, Descricao From SQLUSer.VARLeitosAtendimentos "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodaSala = '"_pCodSala_"' And Situacao = '1'" 	
	
	Set arrayDados = [{"CodigodoLeito": "T", "Descricao": "Todos os Leitos/Equipamentos"}]
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	;
 	While (rSet.%Next()) {
		Set listDados = {}
		Do listDados.%Set("CodigodoLeito", rSet.%Get("CodigodoLeito"))
		Do listDados.%Set("Descricao", rSet.%Get("Descricao"))
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetExecutor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED 			= $Get(%request.Data("YBED"))
	Set codExame	= $Get(%request.Data("codExame",1))
	
	Set todosCodExecutor 	= ""
	Set arrayRetorno 			= []
		
	Set meuSQL = "Select Executor As Codigo, Situacao, CriadoEm, AlteradoEm From SQLUser.VARManualExame "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigoExame = '"_codExame_"' "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set codigo 		= rSet.%Get("Codigo")
		Set descricao = $$SQLGetUserParamDescVAR^VARSQL("EXECUTOR~"_codigo)
		Set todosCodExecutor = todosCodExecutor _$Select(todosCodExecutor="":"",1:"','") _ codigo
		Set list = {}
		Set list.Codigo 			= codigo
		Set list.Descricao 		= "("_codigo_") "_descricao
		Set list.Situacao 		= $Select(rSet.%Get("Situacao")="A":"Ativo",1:"Inativo")
		Set list.Atualizacao 	=	$Select(rSet.%Get("AlteradoEm")="":$ZDAteTime(rSet.%Get("CriadoEm"),4,2),1:$ZDateTime(rSet.%Get("AlteradoEm"),4,2))
		Do arrayRetorno.%Push(list)
	}

	Set meuSQL = "Select SearchWord As Codigo From SQLUser.VARPARA Where Company = 0 "
	Set meuSQL = meuSQL _ " And Language1 = 'PT' And ParameterName = 'EXECUTOR' "
	If (todosCodExecutor '= "") {
		Set meuSQL = meuSQL _ " And SearchWord Not In ('"_todosCodExecutor_"') "
	}
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set codigo 		= rSet.%Get("Codigo")
		Set descricao = $$SQLGetUserParamDescVAR^VARSQL("EXECUTOR~"_codigo)
		Set list = {}
		Set list.Codigo 			= codigo
		Set list.Descricao 		= "("_codigo_") "_descricao
		Set list.Situacao 		= ""
		Set list.Atualizacao 	=	""
		Do arrayRetorno.%Push(list)
	}

	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="RecuperarDadosManual">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 					= 0
	Set Y 					= "~"
	Set codExame 	 	= $Get(%request.Data("codExame",1))
	Set codExecutor = $Get(%request.Data("codExecutor",1))

	Set objVARManualExame = $Get(^VARManualExame(YM, codExame, codExecutor, 1))
	Set tpResH = "00",tpResM = "00"
	If ($$$VARManualExameTempoResultado(objVARManualExame)'="") {
		Set tpResH = ($$$VARManualExameTempoResultado(objVARManualExame)\3600)
		Set tpResM = (($$$VARManualExameTempoResultado(objVARManualExame)#3600)\60)
		Set tpResH = $Extract("00",1,2-$Length(tpResH))_tpResH
		Set tpResM = $Extract("00",1,2-$Length(tpResM))_tpResM
	}
	Set listRetorno = {}
	Do listRetorno.%Set("preco", +$Fnumber($$$VARManualExamePreco(objVARManualExame),"",2))
	Set listRetorno.tempoResultado 		= tpResH_":"_tpResM
	Set listRetorno.codExecutor				= $$$VARManualExameCodItemExecutor(objVARManualExame)
	Set listRetorno.situacao 					= $$$VARManualExameSituacao(objVARManualExame)
	Set listRetorno.descricaoDieta 		= $$$VARManualExameDescricaoDieta(objVARManualExame)
	Set listRetorno.descricaoPaciente = $$$VARManualExameDescricaoPaciente(objVARManualExame)
	Set listRetorno.descricaoColeta 	= $$$VARManualExameDescricaoColeta(objVARManualExame)
	Set listRetorno.descricaoTecnica 	= $$$VARManualExameDescricaoTecnica(objVARManualExame)
	If ($$$VARManualExameAlteradoEm(objVARManualExame) = "") {
		Set listRetorno.alteradoEm 			= $$$VARManualExameCriadoEm(objVARManualExame)
		If (listRetorno.alteradoEm'="") {
			Set listRetorno.alteradoEm		= $Zdatetime(listRetorno.alteradoEm,4,2)_" - "_$$SQLGetUserName^VARSQL($$$VARManualExameCriadoPor(objVARManualExame)) 
		}
	}Else{
		Set listRetorno.alteradoEm 			= $Zdatetime($$$VARManualExameAlteradoEm(objVARManualExame),4,2) _" - "_$$SQLGetUserName^VARSQL($$$VARManualExameAlteradoPor(objVARManualExame)) 
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvaExecutor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set YBED 	 		= $Get(%request.Data("YBED",1))
	Set pExecutor = $Get(%request.Data("executor",1))
	Try {
		Tstart
		Set id = $Order(^VARPARA(0,"EXECUTOR","PT",""),-1) + 1
		Set objVARPARA = ""
		Set $$$VARPARAText(objVARPARA) = $Zconvert(pExecutor,"U")
		Set strStatus = $$$Save("VARPARA", "EXECUTOR"_","_"PT"_","_id, objVARPARA, 1)
	}
	Catch(exception){
		Trollback
		Set strStatus = exception.AsStatus()
	}
	Set retorno = {}
	If $$$ISERR(strStatus){
		If $tl Trollback
		Set retorno.status = 0
		Set retorno.mensagem = $Piece(strStatus," ",2,$Length(strStatus," "))
		Set retorno.tipo = "error"
		Set retorno.id = ""
	}Else{
		Tcommit
		Set retorno.status = 1
		Set retorno.mensagem = "Dados Salvos com Sucesso!"
		Set retorno.tipo = "success"
		set retorno.id = id
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvaDadosExecutor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 						= 0
	Set Y 						= "~"
	Set YBED 	 				= $Get(%request.Data("YBED",1))
 	Set codExame 			=	$Get(%request.Data("codExame",1))
	Set codExecutor		= $Get(%request.Data("codExecutor",1))
	Set pDados 				= $Get(%request.Data("dados",1))
	Set pDieta				= $Get(%request.Data("pDieta",1))
	Set pPaciente			= $Get(%request.Data("pPaciente",1))
	Set pColeta				= $Get(%request.Data("pColeta",1))
	Set pTecnica			= $Get(%request.Data("pTecnica",1))
	Set pTempo				= $Get(%request.Data("pTempo",1))
	Set pCodExecutor 	= $Get(%request.Data("pCodExecutor",1))

	Set oDados 	= [].%FromJSON(pDados)
	Try {
		Tstart
		Set objVARManualExame = $Get(^VARManualExame(YM, codExame, codExecutor, 1))
		Set $$$VARManualExamePreco(objVARManualExame) = oDados.manualPreco
		Set $$$VARManualExameTempoResultado(objVARManualExame) = ($Piece(pTempo,":",1)*3600) + ($Piece(pTempo,":",2)*60)
		Set $$$VARManualExameCodItemExecutor(objVARManualExame) = pCodExecutor 
		Set $$$VARManualExameSituacao(objVARManualExame) = oDados.manualSituacao
		Set $$$VARManualExameDescricaoDieta(objVARManualExame) = pDieta
		Set $$$VARManualExameDescricaoPaciente(objVARManualExame) = pPaciente
		Set $$$VARManualExameDescricaoColeta(objVARManualExame) = pColeta
		Set $$$VARManualExameDescricaoTecnica(objVARManualExame) = pTecnica
		If ($$$VARManualExameCriadoEm(objVARManualExame) = "") {
			Set $$$VARManualExameCriadoEm(objVARManualExame) = $Horolog
			Set $$$VARManualExameCriadoPor(objVARManualExame) = YBED
		}Else{
			Set $$$VARManualExameAlteradoEm(objVARManualExame) = $Horolog
			Set $$$VARManualExameAlteradoPor(objVARManualExame) = YBED
		}
		Set strStatus = $$$Save("VARManualExame", codExame_","_codExecutor, objVARManualExame, 1)
		If (oDados.manualSituacao = "A") {
			Set xCodExecutor = ""
			For {
				Set xCodExecutor = $Order(^VARManualExame(YM, codExame, xCodExecutor))
				Quit:xCodExecutor=""
				If (xCodExecutor = codExecutor)	Continue
				Set objVARManualExame = $Get(^VARManualExame(YM, codExame, xCodExecutor, 1))
				If ($$$VARManualExameSituacao(objVARManualExame) = "I") Continue
				Set $$$VARManualExameSituacao(objVARManualExame) = "I"
				Set strStatus = $$$Save("VARManualExame", codExame_","_xCodExecutor, objVARManualExame, 1)
			} 			
		}
	}
	Catch(exception){
		Trollback
		Set strStatus = exception.AsStatus()
	}
	Set retorno = {}
	If $$$ISERR(strStatus){
		If $tl Trollback
		Set retorno.status = 0
		Set retorno.mensagem = $Piece(strStatus," ",2,$Length(strStatus," "))
		Set retorno.tipo = "error"
	}Else{
		Tcommit
		Set retorno.status = 1
		Set retorno.mensagem = "Dados Salvos com Sucesso!"
		Set retorno.tipo = "success"
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetAlias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	;
	Set meuSQL = 	"Select * From SQLUser.INARTAlias Where Company = 0 " _
								"And CodigodoItem = '"_pCodProcedimento_"'"
	;
	Set arrayRetorno = []
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Do listDados.%Set("sequencia", rSet.%Get("Sequencia"))
		Do listDados.%Set("sinonimo", rSet.%Get("Sinonimo"))
		Do listDados.%Set("criadoEm", $Select(rSet.%Get("CriadoEm")="":"",1:$ZDateTime(rSet.%Get("CriadoEm"),4,2)))
		Do listDados.%Set("criadoPor", $$SQLGetUserName^VARSQL(rSet.%Get("CriadoPor")))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmAlias">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set objINARTAlias = ""
	
	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""

		Set campo = $Piece(objDados(index),"~",1)
		Set valor = $Piece(objDados(index),"~",2)
		
		Set:campo="sinonimo" $$$INARTAliasSinonimo(objINARTAlias)	= valor

	}
	Set $$$INARTAliasCriadoEm(objINARTAlias)	= $Horolog
	Set $$$INARTAliasCriadoPor(objINARTAlias)	= YBED
	Set sequencia = $Order(^INARTAlias(YM, pCodProcedimento, ""),-1) + 1

	Set status = $$$Save("INARTAlias",pCodProcedimento_","_sequencia,objINARTAlias,$$$YES)

	Return status]]></Implementation>
</Method>

<Method name="ExcAlias">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento,pSequencia,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Return $$$Kill("INARTAlias",pCodProcedimento_","_pSequencia)]]></Implementation>
</Method>
</Class>
</Export>