<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsPurgeForm">
<Description><![CDATA[
Generic form for individual purge form]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject,%CSP.Util.AutoForm</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Parameter name="FORMCOLUMNS">
<Description><![CDATA[
Number of columns used to layout forms for this class]]></Description>
<Default>1</Default>
</Parameter>


<Property name="NumberDaysToKeep">
<Description><![CDATA[
Purge excapt this number of days]]></Description>
<Type>%Integer</Type>
<InitialExpression>7</InitialExpression>
</Property>

<UDLText name="T">
<Content>
//Property PurgeLog As %Boolean [ InitialExpression = 1 ];

</Content>
</UDLText>

<UDLText name="T">
<Content>
//Property MaxNumberToDelete As %Integer;

</Content>
</UDLText>


<Method name="CreateInstance">
<Description><![CDATA[
Purge Event Logs
Event Log Max Number to Delete]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pID:%String</FormalSpec>
<ReturnType>%CSP.Util.AutoForm</ReturnType>
<Implementation><![CDATA[
	Set tObj = ..%New()
	Set tObj.NumberDaysToKeep = $G(%session.Data("Purge","NumberDaysToKeep"),7)
	//Set tObj.PurgeLog = $G(%session.Data("Purge","PurgeLog"),1)
	
	Quit tObj
]]></Implementation>
</Method>

<Method name="OnSubmit">
<FormalSpec>&amp;pID:%String,pSubmit:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    // pID contains $ID values from URL
    If (pSubmit = "$AUTOFORM_PURGE") {
        // Save NumberDaysToKeep value
   		Set %session.Data("Purge","NumberDaysToKeep") = ..NumberDaysToKeep
   		//Set %session.Data("Purge","PurgeLog") = 1  //..PurgeLog

        // clear LogsDeleted before perform Purge
        Set (LogsDeleted,MsgsDeleted,BPsDeleted) = -1
        If pID(1) [ "EventLog" {
			Set status = ##class(Ens.Purge).PurgeEventLogsByDate(..NumberDaysToKeep,.LogsDeleted)
        } ElseIf pID(1) [ "Message" {
			Set status = ##class(Ens.Purge).PurgeMessagesByDate(..NumberDaysToKeep,.LogsDeleted)
        } ElseIf pID(1) [ "Process" {
			Set status = ##class(Ens.Purge).PurgeBusinessProcessesByDate(..NumberDaysToKeep,.LogsDeleted)
        } ElseIf pID(1) [ "RuleLog" {
			Set status = ##class(Ens.Purge).PurgeRuleLogsByDate(..NumberDaysToKeep,.LogsDeleted)
        } 	
		If ($$$ISERR(status)) Set %session.Data("Purge",pID(1),"Deleted") = $System.Status.ErrorText(status)
		Else  Set %session.Data("Purge",pID(1),"Deleted") = LogsDeleted Do ##class(CSPX.EnsHomeSummary).DeleteResetCounter()
    }
    Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnDefineButtons">
<Description><![CDATA[
define standard Login buttons]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pButtons:%CSP.Util.FormButton</FormalSpec>
<Implementation><![CDATA[
	Set pButtons(1) = ##class(%CSP.Util.FormButton).%New()
	Set pButtons(1).Name = "$AUTOFORM_PURGE"
	Set pButtons(1).Caption = $$$Text("Start Purge")
]]></Implementation>
</Method>

<Method name="DrawHTMLForm">
<Description><![CDATA[
Draw an HTML form for this form object.<BR>
<var>pObj</var> is an instance of the form object that
provides the initial values for the form.<BR>
<var>pActionURL</var> is the URL to submit this form to.<BR>
<var>pButtons</var> is an array of submit buttons to display for the form. If 
not provided, the default <I>Save</I> and <I>Cancel</I> buttons are shown.
<var>pButtons</var> is an integer-subscripted array of <class>FormButton</class> objects.]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<FormalSpec>pObj:%RegisteredObject,&amp;pID:%String,pActionURL:%String="&quot;,&amp;pButtons:%CSP.Util.FormButton,pTarget:%String="&quot;</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// generate FORM/table headers
	Do %code.WriteLine(" &html<<form action=""#(pActionURL)#"" method=""POST"" name=""theForm"" TARGET=""#(pTarget)#"">>")
	Do %code.WriteLine(" &html<<input type=""HIDDEN"" name=""$CLASS"" VALUE=""" _ %class.Name _ """>>")
	Do %code.WriteLine(" &html<<input type=""HIDDEN"" name=""$FRAME"" VALUE=""#(pTarget)#"">>")
	Do %code.WriteLine(" &html<<input type=""HIDDEN"" name=""CSPCHD"" VALUE=""#(%session.CSPSessionCookie)#"">>")

	Do %code.WriteLine(" Set id = $O(pID(""""))")
	Do %code.WriteLine(" While (id '= """") {")
	Do %code.WriteLine(" 	&html<<input type=""HIDDEN"" name=""$ID#(id)#"" VALUE=""#($ZCVT(pID(id),""O"",""HTML""))#"">>")
	Do %code.WriteLine(" 	Set id = $O(pID(id))")
	Do %code.WriteLine(" }")

	Do %code.WriteLine(" Set NumberDaysToKeep = $G(%session.Data(""Purge"",""NumberDaysToKeep""))")

	// do not create fields for ourself...
	If ('$G(%parameter("COMMANDFORM"))) {
		If (%class.Name '= "%CSP.Util.AutoForm") {
			Do %code.WriteLine(" If pID(1) [""EventLog"" {")
			Do %code.WriteLine("   Set LogCount = ##class(Ens.Purge).EventLogCount()")
			Do %code.WriteLine(" } ElseIf pID(1) [""Messages"" {")
			Do %code.WriteLine("   Set LogCount = ##class(Ens.Purge).MessageCount()")
			Do %code.WriteLine(" } ElseIf pID(1) [""Process"" {")
			Do %code.WriteLine("   Set LogCount = ##class(Ens.Purge).BusinessProcessCount()")
			Do %code.WriteLine(" } ElseIf pID(1) [""RuleLog"" {")
			Do %code.WriteLine("   Set LogCount = ""N/A""") //##class(Ens.Purge).RuleLogCount()")
			Do %code.WriteLine(" }")
			Do %code.WriteLine(" Set tTypeOfRecord = $$$TextHTML(""Type of Record"")")
			Do %code.WriteLine(" Set tCurrentCount = $$$TextHTML(""Current Count"")")
			//Do %code.WriteLine(" Set tPurge = $$$TextHTML(""Purge"")")
			Do %code.WriteLine(" Set tEventLog = $$$TextHTML(""Event Log"")")
			//Do %code.WriteLine(" Set tEventLog = pID(1)")
			Do %code.WriteLine(" Set tNotPurge = $$$TextHTML(""Do not purge most recent"")")
			Do %code.WriteLine(" Set tDays = $$$TextHTML(""days"")")
			Do %code.WriteLine(" Set tPurged = $$$TextHTML(""Purged"")")

			Do %code.WriteLine(" &html<<table class='AutoForm'>>")
			Do %code.WriteLine(" &html<<tr class='AutoFormCaption'><th valign='center' nowrap>#(tTypeOfRecord)#</th><th nowrap>#(tCurrentCount)#</th></tr>>")

			Do %code.WriteLine(" &html<<tr><td class='AutoFormCaption' nowrap>#(tEventLog)#</td><td class='AutoFormControl' align='center'>#(LogCount)#</td></tr>>")

			Do %code.WriteLine(" &html<<tr><td colspan='3'><hr></td></tr>>")
			Do %code.WriteLine(" &html<<tr><td colspan='3' class='AutoFormControl' nowrap>&nbsp;#(tNotPurge)# <input type='text' size='5' name='NumberDaysToKeep' value='#(pObj.NumberDaysToKeep)#'> #(tDays)#</td></tr>>")

			// now generate HTML for all of our properties
			//Set sc = ##class(CSPX.EnsPurgeAutoFormGenerator).GenerateHTMLForm(%class.Name,%code)
			//If ($$$ISERR(sc)) {
			//	Quit sc
			//}
			Do %code.WriteLine(" &html<<tr><td class=""AutoFormLabel"">&nbsp;</td>>")
			Do %code.WriteLine(" &html<<td class=""AutoFormButton"">>")

		}
	}
	Else {
		// command form
	}
	
	// test for user-provided buttons method
	If $$$comMemberKeyGet(%class.Name,$$$cCLASSmethod,"OnDefineButtons",$$$cMETHrunnable) {
		Do %code.WriteLine(" If ('$D(pButtons)) {")
		Do %code.WriteLine(" 	Do ..OnDefineButtons(.pButtons)")
		Do %code.WriteLine(" }")
	}
	
	// button(s)
	Do %code.WriteLine(" Do ..DrawFormButtons(.pButtons)")
	
	// write purge result
	Do %code.WriteLine(" Set LogsDeleted = $G(%session.Data(""Purge"",pID(1),""Deleted""))")

	Do %code.WriteLine(" If LogsDeleted'="""" {")
	Do %code.WriteLine(" 	&html<<tr><td colspan=""3""><div class=""output""><table><tr><th colspan=""2"">#(tPurged)#</th></tr>>")
	//Do %code.WriteLine(" 		Set tEventLog = $$$TextHTML(""Event Log"")")
	Do %code.WriteLine(" 		If LogsDeleted '= """" &html<<tr><td>#(tEventLog)#</td><td align=""right"">#(LogsDeleted)#</td></tr>>")
	Do %code.WriteLine(" 	&html<</td></tr></table></div></td></tr>>")
	Do %code.WriteLine(" 	Set %session.Data(""Purge"",pID(1),""Deleted"") = """"")	
	Do %code.WriteLine("    &html<<script language='javascript'>")
	Do %code.WriteLine("    self.top.frames[1].location.reload();")
	Do %code.WriteLine("    </script>>")
	Do %code.WriteLine(" }")
	
	If ('$G(%parameter("COMMANDFORM"))) {
		If (%class.Name '= "%CSP.Util.AutoForm") {
			Do %code.WriteLine(" &html<</td></tr></table>>")
		}
	}
	Do %code.WriteLine(" &html<</form>>")
	Do %code.WriteLine(" Quit $$$OK")
	
	Quit $$$OK
]]></Implementation>
</Method>
<UDLText name="T">
<Content>
///                          Generate Code/HTML to create a form for the given class.&lt;BR&gt;

</Content>
</UDLText>
</Class>
</Export>