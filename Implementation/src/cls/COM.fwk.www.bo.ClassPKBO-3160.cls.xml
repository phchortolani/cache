<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.www.bo.ClassPKBO">
<ClassType/>
<Import>COM.fwk.www.entity,COM.fwk.www.bo.dto</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>COM.fwk.biz.BO</Super>

<Method name="%OnNew">
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$OK
]]></Implementation>
</Method>

<Method name="getLanguageFieldNumber">
<Description><![CDATA[
For a specific class pk, returns the number
of the primary key of the entity that
stores the language.

If the primary key does not contain the 
language, returns 0.

@author Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>className:%Library.String</FormalSpec>
<ReturnType>%Library.Numeric</ReturnType>
<Implementation><![CDATA[

	set classPks = ##class(ClassPK).findByClassName(className)
	
	set id = classPks.Next("")
	
	set langFieldNumber = 0
	
	while (id '= "") {
		
		set classPk = classPks.GetAt(id)
		
		if ($find(classPk.PropertyDescription, "Language") > 0) {
			set langFieldNumber = classPk.PrimaryKeyNumber
			quit // the while loop
		}
		
		set id = classPks.Next(id)
	}
	
	quit langFieldNumber
]]></Implementation>
</Method>

<Method name="getDescription">
<Description><![CDATA[
For a specific class name and a primary key name,
returns its description. The primary key name is
the property name of its class.

@author Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>className:%Library.String,propertyName:%Library.String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[

	set pk = ##class(ClassPK).findByClassAndProperty(className, propertyName)
	
	if (pk '= $$$NULLOREF) {
		quit pk.PropertyDescription
	}
	
	quit ""
]]></Implementation>
</Method>

<Method name="listByClass">
<Description><![CDATA[

For a specific class, returns the name of all PKs
as a List of strings.

<p>

The name is the property name of the table and the
class.

<p>

Author: Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>className:%Library.String</FormalSpec>
<ReturnType>%ListOfDataTypes</ReturnType>
<Implementation><![CDATA[

	set classPks = ##class(ClassPK).findByClassName(className)
	
	set pks = ##class(%ListOfDataTypes).%New()
	set id = classPks.Next("")
	
	while (id '= "") {
		
		set classPk = classPks.GetAt(id)
		
		do pks.Insert(..entityToDTO(classPk))

		set id = classPks.Next(id)
	}
	
	quit pks
]]></Implementation>
</Method>

<Method name="entityToDTO">
<Description><![CDATA[
Puts data into a DTO object, wich is used to transfer data 
to the UI layer.
<p>

Author: Francisco Fiuza Lima - Disclinc Brasil ]]></Description>
<FormalSpec>classPK:ClassPK</FormalSpec>
<Private>1</Private>
<ReturnType>ClassPKDTO</ReturnType>
<Implementation><![CDATA[
	set dto = ##class(ClassPKDTO).%New()
	
	set dto.fieldName = classPK.PropertyName
	set dto.fieldNumber = classPK.PrimaryKeyNumber
	
	quit dto
]]></Implementation>
</Method>

<Method name="initializeNumerator">
<Description><![CDATA[

For a specific class, creates its numerator and 
sets a initial value.

<p>

Only initializes numerators that doesn't exist.

<p>

Author: Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>className:%Library.String,initialValue:%String,incrementBy:%Integer</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History
	; 03-Mar-2006	FrankF	SR13628: Changing the constant $$$false, $$$true to $$$YES, $$$NO
	;-------------------------------------------------------------------------------
	;
	// I tryed to implement accessing the db via the persistent
	// class, but didn't work, so using the globals
	 
	set companyCode = ..getSession().getCurrentCompanyCode()

	if ($data(^WWW128(companyCode, className, 1))) {
		quit $$$NO
	}
	
	if ('$data(initialValue)) {
		set initialValue = 0
	}
	
	if ('$data(incrementBy)) {
		set incrementBy = 1
	}
	do ^WWWSPEI("WWW128", 	
				className,
				initialValue _ "~" _ incrementBy,
				1)
							
	quit $$$YES
]]></Implementation>
</Method>
</Class>
</Export>