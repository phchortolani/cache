<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.log.LogRunner">
<ClassType/>
<Import>VAR.infra.log</Import>
<IncludeCode>VARLog,VARService</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>VAR.infra.log.LogWriterService,VAR.infra.services.ServiceRunner</Super>

<Property name="ExecutouUmaVez">
<Type>%Integer</Type>
</Property>

<Method name="Register">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit ..RegisterRunner($$$ServiceIdLogger, $$$ServiceFrequencyMinutely, $$$ServicePriorityHighMedium, ..%ClassName(1), "Logger Service")]]></Implementation>
</Method>

<Method name="Unregister">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit ..UnregisterRunner($$$ServiceIdLogger, "Logger Service")]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	if ('##class(DirectoryFile).Exists(..GetLogDir())) {
		if ('##class(DirectoryFile).CreateDir(..GetLogDir())) {
			quit $$$CUSTOMERROR("Error while trying to create directory '"_..GetLogDir()_"'")
		}
	}

	set ..ExecutouUmaVez = 0

	quit $$$OK]]></Implementation>
</Method>

<Method name="Execute">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set sc = ..ProcessLog()
	if ($$$ISERR(sc)) $$$VARLOGERROR("Error while executing Log Runner")

	set ..ExecutouUmaVez = 1

	quit sc]]></Implementation>
</Method>

<Method name="%OnClose">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	if (..ExecutouUmaVez) do ..EndProcessLogs()

	quit $$$OK]]></Implementation>
</Method>
</Class>
</Export>