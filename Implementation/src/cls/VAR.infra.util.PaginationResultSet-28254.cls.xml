<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.util.PaginationResultSet">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.ResultSet</Super>

<Property name="MaxRows">
<Type>%Integer</Type>
</Property>

<Property name="TotalRows">
<Type>%Integer</Type>
</Property>

<Property name="TotalPages">
<Type>%Integer</Type>
</Property>

<Property name="CurrPage">
<Type>%Integer</Type>
</Property>

<Property name="CurrRow">
<Type>%Integer</Type>
</Property>

<Property name="CurrQuery"/>

<Method name="%OnNew">
<FormalSpec>maxRows:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set status = ##super("")

	if ($$$ISOK(status)) {
		if (+$get(maxRows) = 0) quit $$$NO

		set ..MaxRows = +maxRows
	}

	quit status]]></Implementation>
</Method>

<Method name="Prepare">
<FormalSpec>query</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set status = ##super(query)
	
	if ($$$ISOK(status)) {
		set ..CurrQuery = query
		set ..CurrRow = 0
	}
	
	quit status]]></Implementation>
</Method>

<Method name="Execute">
<FormalSpec>p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set status = ##super(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16)
	
	if ($$$ISOK(status)) {
		set ..CurrRow = 0
		set ..CurrPage = 1
		set ..TotalPages = ..TotalRows\..MaxRows
		if (..TotalRows#..MaxRows > 0) set ..TotalPages = ..TotalPages +1
	}
	
	quit status]]></Implementation>
</Method>

<Method name="AdvanceTo">
<FormalSpec>page:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set status = $$$OK
	
	if (..TotalRows > 0) {
		if (+page < 1) {
			set stopPage = 1
		}
		elseif (+page <= ..CurrPage) {
			quit $$$ERROR("The page number must be higher than current page.")
		}
		elseif (+page > ..TotalPages) {
			set stopPage = ..TotalPages
		} else {
			set stopPage = page
		}
	
		set actualPage = ..CurrPage
		set ..CurrPage = stopPage
	
		if (stopPage > 1) {
			for j=1 :1 :stopPage-1{
				for i=1 :1 :..MaxRows {
					set lastRecord = '..Next(.status)
					if (lastRecord) quit
					if ($$$ISERR(status)) quit
				}	
				if (lastRecord) quit
				if ($$$ISERR(status)){
					set ..CurrPage = actualPage
					quit
				}
			}
		}
	}
	else {
		set ..CurrPage = 0
	}
	
	quit status]]></Implementation>
</Method>

<Method name="Next">
<FormalSpec>&amp;status:%Status</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[	set status = $$$OK
	set lastOfPage = ..CurrPage * ..MaxRows
	if (..CurrRow >= lastOfPage) {
		quit $$$NO
	}
	set return = ##super(.status)
	if (return) set ..CurrRow = ..CurrRow +1
	
	quit return]]></Implementation>
</Method>
</Class>
</Export>