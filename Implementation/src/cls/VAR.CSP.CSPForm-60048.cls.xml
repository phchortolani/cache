<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.CSPForm">
<IncludeCode>COMSYS,COMConst,VARConst,INConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Parameter name="CHARSET">
<Default>utf-8</Default>
</Parameter>


<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	$$$VAR
	Set Method 	= $Get(%request.Data("method",1))
	Xecute "do .."_Method_"()"
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getCabecalho">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	SET YVOR1=$GET(^WWW012(YM,YM,1))
	SET YGIF  = $$$WWW012PictureDirectorySystem(YVOR1)     ; D47  WWW GIF SYSTEM
	Set formulario 	= $Get(%request.Data("formName",1))
	set objForm = $get(^WWW120(YM,formulario,1))
	set formName = $$$WWW120FormHeaderOrImageFile(objForm)
	set objForm1 = $get(^WWW1201(YM,formulario,"PT",1))
	if objForm1'=""{
		set formName = $$$WWW1201Text(objForm1)
	}
	set linha = {}
	do linha.%Set("title",formName)
	;
	set toolbar = []
	;
	set botao = {}
	do botao.%Set("location","after")
	do botao.%Set("widget","dxButton")
	set option = {}
	do option.%Set("icon","file")
	do option.%Set("hint","Novo")
	do option.%Set("type","default")
	do option.%Set("stylingMode","contained")
	do option.%Set("onClick","'function(){limpar()}'")
	do botao.%Set("options",option)
	do toolbar.%Push(botao)
	;
	set botao = {}
	do botao.%Set("location","after")
	do botao.%Set("widget","dxButton")
	set option = {}
	do option.%Set("icon","save")
	do option.%Set("hint","Salvar")
	do option.%Set("type","success")
	do option.%Set("stylingMode","contained")
	do option.%Set("onClick","'function(){salvarDados()}'")
	do botao.%Set("options",option)
	do toolbar.%Push(botao)
	;
	set botao = {}
	do botao.%Set("location","after")
	do botao.%Set("widget","dxButton")
	set option = {}
	do option.%Set("icon","trash")
	do option.%Set("hint","Excluir")
	do option.%Set("type","danger")
	do option.%Set("stylingMode","contained")
	do option.%Set("onClick","'function(){apagarDados()}'")
	do botao.%Set("options",option)
	do toolbar.%Push(botao)
	;
	set drawer = []
	set meuSQL = "select ButtonDescription, PictureFileOnButton"
	set meuSQL = meuSQL_" from WWW124 where FormName = '"_formulario_"' and language1='PT' "
	set meuSQL = meuSQL_" order by ColumnPosition"
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSQL)
	set btExtra = 0
	if (sc) {
		set sc = rs.%Execute()
		set grupo = 0
		while(sc.%Next()){
			set btExtra = 1
			set ButtonDescription=sc.%Get("ButtonDescription")
			set PictureFileOnButton=sc.%Get("PictureFileOnButton")
			if PictureFileOnButton = "briefe.gif" set PictureFileOnButton = "email"
			if PictureFileOnButton = "dokudruck.gif" set PictureFileOnButton = "doc"
			if PictureFileOnButton = "teile.gif" set PictureFileOnButton = "columnfield"
			if PictureFileOnButton = "anschriften.gif" set PictureFileOnButton = "map"
			if PictureFileOnButton = "bonus.gif" set PictureFileOnButton = "money"
			if PictureFileOnButton = "personen.gif" set PictureFileOnButton = "group"
			if PictureFileOnButton = "worldtime.gif" set PictureFileOnButton = "clock"
			if PictureFileOnButton = "statistik.gif" set PictureFileOnButton = "chart"
			if PictureFileOnButton = "allevertr.gif" set PictureFileOnButton = "doc"
			if PictureFileOnButton = "kd-autom-auftr-b.gif" set PictureFileOnButton = "preferences"
			if PictureFileOnButton = "date.gif" set PictureFileOnButton = "product"
			if PictureFileOnButton = "search1.gif" set PictureFileOnButton = "find"
			if PictureFileOnButton = "copyges.gif" set PictureFileOnButton = "unselectall"
			if PictureFileOnButton = "konditionen.gif" set PictureFileOnButton = "runner"
			if PictureFileOnButton = "doku.gif" set PictureFileOnButton = "folder"
			if PictureFileOnButton["." set PictureFileOnButton = $get(YGIF)_PictureFileOnButton
			set botao = {}
			
			do botao.%Set("locateInMenu","always")
			if PictureFileOnButton'="" {
				do botao.%Set("icon",PictureFileOnButton)
			}
			do botao.%Set("text",ButtonDescription)
			;do botao.%Set("text",ButtonDescription_"|"_PictureFileOnButton)
			do botao.%Set("alignment","center")
			do botao.%Set("hint",ButtonDescription)
			do botao.%Set("type","")
			do botao.%Set("stylingMode","contained")
			do drawer.%Push(botao)
			
		}
	}	
	;
	if btExtra=1{
		set botao = {}
		do botao.%Set("location","after")
		do botao.%Set("widget","dxButton")
		set option = {}
		do option.%Set("icon","menu")
		do option.%Set("hint","Outros BotÃµes")
		do option.%Set("stylingMode","contained")
		do option.%Set("onClick","'function(){drawer.toggle()}'")
		do botao.%Set("options",option)
		
		do toolbar.%Push(botao)
	}	
	;
	do linha.%Set("toolbar",toolbar)
	do linha.%Set("drawer",drawer)
	;set retorno = []
	;do retorno.%Push(linha)
	;write linha.%ToJSON()
	write $replace($replace(linha.%ToJSON(),"""'",""),"'""","")
	quit
]]></Implementation>
</Method>

<Method name="onAfterPrimaryKey">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set form 	= $Get(%request.Data("formName",1))
	set objForm = $get(^WWW120(YM,form,1))
	set class = $$$WWW120ClassUsedInForm(objForm)
	;
	set executeAfterButtonLine = $$$WWW120ExecuteAfterButtonLine(objForm)
	if executeAfterButtonLine'=""{
		xecute executeAfterButtonLine
	}
	;
	set executeAfterPrimaryKey = $$$WWW120ExecuteAfterPrimaryKey(objForm)
	if executeAfterPrimaryKey'=""{
		xecute executeAfterPrimaryKey
	}
]]></Implementation>
</Method>

<Method name="montaTemplatesJS">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	&js<
	  	DevExpress.localization.locale("pt");
		DevExpress.config({
			decimalSeparator: ",",
			thousandsSeparator: "."
		});


		//
	 	loadPanel = $(".loadpanel").dxLoadPanel({
	        shadingColor: "rgba(0,0,0,0.1)",
	        visible: false,
	        showIndicator: true,
	        showPane: true,
	        shading: true,
	        closeOnOutsideClick: false
	    }).dxLoadPanel("instance");
    	
		navegar = (function navegar(pCampo, pOpcao) {
			/*Parametro pOpcao 	1 -- Primeiro Registro
								2 -- Registro Anteriro
								3 -- Proximo Registro
								4 -- Ultimo Registro*/
			pNumeroChave = JSON.stringify(dxFormChavePrimaria.option('formData')),
			$.getJSON(urlPreparacao,{
                method   		: "navegar",
                formName		: formulario,
                numeroAtual		: pNumeroChave,
                pOpcao			: pOpcao,
                pCampo			: pCampo
            },function(retorno){
	            dxFormChavePrimaria.option('formData',retorno.key)
	        });
			
		})
		//		
		formGrid = ""
		formGridPai = ""
		dataSourceGrid =  new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				update: function (key, values) {
				},
				load: function() {
					var deferred = $.Deferred()
					return $.getJSON(urlPreparacao,{
	                    method   		: "montaGrid",
	                    formType		: "Grid",
	                    form			: formGrid,
	                    formPai			: formGridPai,
	                    primaryKey		: JSON.stringify(dxFormChavePrimaria.option("formData"))
					},function(result){
						if (result.erro){
							$("#listaGrid").hide()
							return false
						}
						jQuery.each(result.columns,function(obj){
							if (result.columns[obj].lookup){
								result.columns[obj].lookup.dataSource = eval(result.columns[obj].lookup.dataSource)
							}
						})
						$("#listaGrid").show()
						deferred.resolve(result.data);
						if ($("#listaGrid").dxDataGrid("instance")){
							if (!$("#listaGrid").dxDataGrid("instance").option("columns")){
								$("#listaGrid").dxDataGrid("instance").option("columns",result.columns)
							}
						}
					})
					return deferred.promise();
				}
			})
		});		
		//		
		var text
		dataSourceChave = new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				byKey: function(key) {
					return $.getJSON(urlPreparacao,{
	                    method   		: "montaCOMView",
	                    form			: formulario,
	                    formType		: "DropDownBox",
	                    byKey			: key
	                });
				},
				load: function(loadOptions) {
					var deferred = $.Deferred()
					return $.getJSON(urlPreparacao,{
	                    method   		: "montaCOMView",
	                    form			: formulario,
	                    formType		: "DropDownBox",
	                    filter			: JSON.stringify(loadOptions.filter),
	                    take			: JSON.stringify(loadOptions.take),
	                    skip			: JSON.stringify(loadOptions.skip),
	                    sort			: JSON.stringify(loadOptions.sort),
	                    searchValue		: text,
	                    remoteOperations: 1
					},function(result){
						deferred.resolve(
							result.data, {
								totalCount: result.totalCount
							});
							if ($("#pesquisaCOMView").dxDataGrid("instance")){
								if (!$("#pesquisaCOMView").dxDataGrid("instance").option("columns")){
									$("#pesquisaCOMView").dxDataGrid("instance").option("columns",result.columns)
								}
							}
					})
					return deferred.promise();
				}
			})
		});
	
		preparaPesquisa = (function(){
			$("#pesquisaCOMView").dxDataGrid({
					loadPanel: {
						enabled: true
					},
					dataSource: dataSourceChave,
					rowAlternationEnabled:true,
					grouping: {
						allowCollapsing: true,
					  	autoExpandAll: false
					},
					columnAutoWidth: true,
					cellHintEnabled:true,		
					allowColumnReordering: true,
					allowColumnResizing: true,
			 		remoteOperations: {
				 		 paging: true,
				 		 filtering: true,
				 		 sorting: true
			 		},
					cellHintEnabled:true,		
					selection: {
						mode:"single"
					},					
					groupPanel: {
						visible: true,
						allowColumnDragging: true
					},
					export: {
						enabled: true
					},
					height: function() {
						return $("#openPesquisa").dxPopup("instance").option("height")-100
					},	
					columnChooser: {
						enabled: true,
						mode: "dragAndDrop" 
					},
					sorting: {
						mode: "multiple"
					},
			        paging: {
			            pageSize: 20
			        },
			        pager: {
			            showPageSizeSelector: true,
			            allowedPageSizes: [5, 10, 20, 50, 100],
			            showInfo: true,
						showNavigationButtons: true 
			        },
					filterRow:{
						visible:true
					},
				  	showColumnLines: true,
				  	showRowLines: true,
				  	showBorders: true,
				  	hoverStateEnabled: true,
				  	searchPanel: {
						visible: true,
						width: 240,
						placeholder: "Pesquisar..."
					},
					stateStoring:{
						//enabled:true,
						//type:"sessionStorage"
					},
					headerFilter: {
						visible: false
					},	        
					columnFixing: {
			            enabled: true
			        },			
					onCellClick: function(e) {
						if (e.rowType == "data"){
							dxFormChavePrimaria.option("formData",e.data.PrimaryKey)
							$("#openPesquisa").dxPopup("instance").option("visible",false);
						}
					}
			}).dxDataGrid("instance");	
		})
			
		
	carregaDados = (function(){
		loadPanel.show()
		$.getJSON(urlPreparacao,{
            method   		: "getFormCorpoDados",
            form			: formulario,
            chave			: JSON.stringify(dxFormChavePrimaria.option('formData'))
        },function(retorno){
	        console.log(retorno.formData)
	        dxFormDados.option("formData",retorno.formData)
		    if ($("#listaGrid").dxDataGrid("instance")){
			    dataSourceGrid.reload()
		    }
	        dxFormDados.validate();
	        loadPanel.hide()
	    });
	})	
	

	setTemplateGrid = (function(obj){
		formGrid = obj.dataField
		formGridPai = obj.editorOptions.gridPai
		var celula = $("<div>")
		templateGrid = $("<div id='listaGrid'>").dxDataGrid({
			dataSource: dataSourceGrid,
			loadPanel: {
				enabled: true
			},
			editing: {
				mode: "batch",
				allowUpdating: true,
				allowAdding: true,
				allowDeleting: true,
				useIcons:true
			},	
			rowAlternationEnabled:true,
			grouping: {
				allowCollapsing: true,
			  	autoExpandAll: false
			},
			columnAutoWidth: true,
			cellHintEnabled:true,		
			allowColumnReordering: true,
			allowColumnResizing: true,
			cellHintEnabled:true,		
			selection: {
				mode:"single"
			},					
			groupPanel: {
				visible: true,
				allowColumnDragging: true
			},
			export: {
				enabled: true
			},
			height: function() {
				return 400
			},	
			columnChooser: {
				enabled: true,
				mode: "dragAndDrop" 
			},
			sorting: {
				mode: "multiple"
			},
	        paging: {
	            pageSize: 20
	        },
	        pager: {
	            showPageSizeSelector: true,
	            allowedPageSizes: [5, 10, 20, 50, 100],
	            showInfo: true,
				showNavigationButtons: true 
	        },
			filterRow:{
				visible:true
			},
		  	showColumnLines: true,
		  	showRowLines: true,
		  	showBorders: true,
		  	hoverStateEnabled: true,
		  	searchPanel: {
				visible: true,
				width: 240,
				placeholder: "Pesquisar..."
			},
			headerFilter: {
				visible: false
			},	        
			columnFixing: {
	            enabled: true
	        },
	        onToolbarPreparing: function(e) {
		        var toolbarItems = e.toolbarOptions.items;
		        $.each(toolbarItems, function (_, item) {
		            if (item.name === 'saveButton' || item.name == 'revertButton') {
		                item.visible = false;
		            }
		        });
		    }
		});
		celula.append(templateGrid)
		return celula;
	})
	
	
	setTemplateCOMViewNave = (function(obj){
		propertyName = obj.editorOptions.propName
		var celula = $("<div style='left:-20px;position:relative;width:192px;'>")
		var $customButton = $("<div>").dxButton({
			icon: "fa fa-search",
			hint: "Pesquisar",
			elementAttr: {
	            class: "sombras"
	        },			
			onClick: function(args){
				openCOMView(formulario)
				var e = args.event;
				e.preventDefault();
				e.stopPropagation();
			}
		});
		var $customButton2 = $("<div style='align:right;position:relative;left:20px'>").dxButtonGroup({
			elementAttr: {
	            class: "sombras"
	        },			
			items:[ {
		        icon: "chevrondoubleleft",
				hint: "Primeiro Registro",
				propName: propertyName,
				onClick:function(obj){ 
					propName = obj.itemData.propName
					navegar(propName, 1); 
					var e = obj.event;
					e.preventDefault();
					e.stopPropagation();
				}
		    },
		    {
		        icon: "chevronleft",
				hint: "Registro Anterior",
				propName: propertyName,
				onClick:function(obj){  
					propName = obj.itemData.propName
					navegar(propName, 2); 
					var e = obj.event;
					e.preventDefault();
					e.stopPropagation();
				}
		    },
		    {
		        icon: "chevronright",
				hint: "PrÃ³ximo Registro",
				propName: propertyName,
				onClick:function(obj){  
					propName = obj.itemData.propName
					navegar(propName, 3); 
					var e = obj.event;
					e.preventDefault();
					e.stopPropagation();
				}

		    },
		    {
		        icon: "chevrondoubleright",
				hint: "Ãltimo Registro",
				propName: propertyName,
				onClick:function(obj){  
					propName = obj.itemData.propName
					navegar(propName, 4); 
					var e = obj.event;
					e.preventDefault();
					e.stopPropagation();
				}

		    }],
		});
		celula.append($customButton).append("&nbsp;&nbsp;").append($customButton2)
		return celula;
	})

	setTemplateNave = (function(obj){
		propertyName = obj.editorOptions.propName
		var celula = $("<div style='left:-20px;position:relative;width:192px;'>")
		var $customButton2 = $("<div style='align:right;position:relative;left:64px'>").dxButtonGroup({
			items:[ {
		        icon: "chevrondoubleleft",
				hint: "Primeiro Registro",
				propName: propertyName,
				onClick:function(obj){  
					propName = obj.itemData.propName
					navegar(propName, 1); 
				}
		    },
		    {
		        icon: "chevronleft",
				hint: "Registro Anterior",
				propName: propertyName,
				onClick:function(obj){  
					propName = obj.itemData.propName
					navegar(propName, 2); 
				}
		    },
		    {
		        icon: "chevronright",
				hint: "PrÃ³ximo Registro",
				propName: propertyName,
				onClick:function(obj){  
					propName = obj.itemData.propName
					navegar(propName, 3); 
				}

		    },
		    {
		        icon: "chevrondoubleright",
				hint: "Ãltimo Registro",
				propName: propertyName,
				onClick:function(obj){  
					propName = obj.itemData.propName
					navegar(propName, 4); 
				}

		    }],
		});
		celula.append($customButton2)
		return celula;
	})
	
	openCOMView = (function(formName){
		 popupOptions = {
	        height: 550,
	        showTitle: true,
	        title: "Pesquisar",
	        visible: true,
	        dragEnabled: true,
            shading: true,
            resizeEnabled: true,
	        shadingColor: "rgba(0, 0, 0, 0.2)",
	        closeOnOutsideClick: false,
	        onResize: function(obj){
		        $("#pesquisaCOMView").dxDataGrid("instance").option("height",obj.actionValue[0].component.option("height")-100)
		    },
	        onResizeEnd: function(obj){
		        $("#pesquisaCOMView").dxDataGrid("instance").option("height",obj.component.option("height")-100)
		    }
	    }		
	    if ($("#openPesquisa").html()==""){
   			$("#openPesquisa").html("<div id='pesquisaCOMView'></div>")
			$("#openPesquisa").dxPopup(popupOptions)
			preparaPesquisa()
	    }else{
		    dataSourceChave.reload()
		    $("#openPesquisa").dxPopup(popupOptions)
	    }
	})

	getDataSource = (function(classe,classeKey,classeDisplay,hideRelationClassIDs,sortTheRelation,displayIfSortKeyEqual){
		return new DevExpress.data.DataSource({
            store: new DevExpress.data.CustomStore({
				byKey: function (key) {
                    return $.getJSON(urlPreparacao,{
	                    method					: "montaPesquisaClass",
	                    classe					: classe,
	                    classeKey				: classeKey,
	                    classeDisplay			: classeDisplay,
	                    hideRelationClassIDs	: hideRelationClassIDs,
	                    sortTheRelation			: sortTheRelation,
	                    displayIfSortKeyEqual	: displayIfSortKeyEqual,
	                    byKey					: key
	                });
				},	            
                load: function(args) {
                    return $.getJSON(urlPreparacao,{
	                    method					:"montaPesquisaClass",
	                    classe					: classe,
	                    classeKey				: classeKey,
	                    classeDisplay			: classeDisplay,
	                    hideRelationClassIDs	: hideRelationClassIDs,
	                    sortTheRelation			: sortTheRelation,
	                    displayIfSortKeyEqual	: displayIfSortKeyEqual,
	                    searchValue				: args.searchValue,
	                    take					: args.take,
	                    skip					: args.skip
	                });
                }
            })
        })			
		    
	})
								    
	getDataSourceLookup = (function(classe,classeKey,classeDisplay,hideRelationClassIDs,sortTheRelation,displayIfSortKeyEqual,lookupId){
		var retorno = {
			store: new DevExpress.data.CustomStore({
				loadMode: "raw",
                load: function() {
                    return $.getJSON(urlPreparacao,{
	                    method					:"montaPesquisaClass",
	                    classe					: classe,
	                    classeKey				: classeKey,
	                    classeDisplay			: classeDisplay,
	                    hideRelationClassIDs	: hideRelationClassIDs,
	                    sortTheRelation			: sortTheRelation,
	                    //displayIfSortKeyEqual	: displayIfSortKeyEqual
	                });
                }
            })
		}
		return retorno
        		
		    
	})
	>
]]></Implementation>
</Method>

<Method name="montaPesquisaForm">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	$$$VAR
	Set form 			= $Get(%request.Data("form",1))
	Set formType	 	= $Get(%request.Data("formType",1))
	Set byKey		 	= $Get(%request.Data("byKey",1))
	Set filter		 	= $Get(%request.Data("filter",1))
	Set take	 		= $Get(%request.Data("take",1))
	Set skip 			= $Get(%request.Data("skip",1))
	Set sort 			= $Get(%request.Data("sort",1))
	Set searchValue 	= $Get(%request.Data("searchValue",1))
	Set remoteOperations= $Get(%request.Data("remoteOperations",1))
	;
	Set YUSER		 	= $Get(%request.Data("YUSER",1))
	Set YBED		 	= $Get(%request.Data("YBED",1))
	;
	set status = 0
	;
	set sort = $tr(sort,"""{[]}","")
	;
	;kill ^zzsilmar
	;set ^zzsilmar($now()) = form
	set campoSort = $piece($piece(sort,",",1),":",2)
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"ASC",1:"DESC")
	set orderBy = ""
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	;set ^zzsilmar($now()) = orderBy
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;set ^zzsilmar($now()) = wherefilter_"|"_proximacomb
	if form="" quit
	kill campos
	set select=""
	set flag=0
	kill indices
	kill campos
	set YM = 0
	set objForm = $get(^WWW120(YM,form,1))
	set classe = $$$WWW120ClassUsedInForm(objForm)
	;
	;set ^zzsilmar($now()) = classe
	set columns = []
	; Recupera Chaves PrimÃ¡rias
	set sequ=""
	for {
		set sequ = $order(^WWW002(0,classe,sequ)) quit:sequ=""
		set objWWW002 = $get(^WWW002(0,classe,sequ,1))
		if select'="" set select = select_","
		set select=select_$$$WWW002PropertyName(objWWW002)
		set id = $$$WWW002PropertyName(objWWW002)
		set caption = ..TranslateIndice(0,classe,sequ)
		set indices(sequ)=id
		set objForm = $get(^WWW121(0,form,sequ,1))
		set FixedInput = $$$WWW121FixedInputForHiddenField(objForm)
		if FixedInput=""{
			set coluna = {}
			do coluna.%Set("dataField",id)
			do coluna.%Set("caption",caption)
			//do coluna.%Set("width","20%")
			do columns.%Push(coluna)
		}
		set campos(0,sequ)=id
	}
	;	
	kill ^zzsilmar
	; Recupera Campos do FormulÃ¡rio
	do ..getFormCorpo(form,.formulario)
	;kill ^zzsilmar m ^zzsilmar = formulario
	;
	;; Inicio da Aba
	set primeiraAba = $order(formulario(""))
	set position=""
	for{
		set position = $order(formulario(position)) quit:position=""
		set aba = ""
		for {
			set aba = $order(formulario(position,aba)) quit:aba=""
			;
			if aba="oculto" continue
			;; Inicio do Grupo
			set group = ""
			for {
				set group = $order(formulario(position,aba,group)) quit:group=""
				;; Inicio da Linha
				set row = ""
				for {
					set row = $order(formulario(position,aba,group,row)) quit:row=""
					;; Inicio da Coluna
					set col = ""
					for {
						set col = $order(formulario(position,aba,group,row,col)) quit:col=""
						;; Inicio dos Campos
						set campo = ""
						for {
							set campo = $order(formulario(position,aba,group,row,col,campo)) quit:campo=""
							set obj 					= formulario(position,aba,group,row,col,campo)
							set valor 					= $piece(obj,"~",1)
							set field 					= $piece(obj,"~",2)
							set sequ 					= $piece(obj,"~",12)	
							set fieldSize				= $piece(obj,"~",13)
							if field="" set field = sequ
							if sequ="" continue
							set campos(1,sequ)=obj
							;
							set coluna = {}
							do coluna.%Set("dataField",field)
							do coluna.%Set("caption",valor)
							//do coluna.%Set("width","20%")
							if position'=primeiraAba do coluna.%Set("visible",0)
							do columns.%Push(coluna)
							;
							set campo = $piece(obj,"~",2)
							set relacao = $piece(obj,"~",4)
							set relacaoKey = $piece(obj,"~",5)
							;
							set field = ..recRelationship(classe,campo,relacao,relacaoKey,"",1)
							if select'="" set select = select_","
							set select=select_field

						}
						;; Fim dos Campos
					}
					;; Fim das Colunas
				}
				;; Fim das Linhas
			}
		}	
	}
	set where = ""
	set where2=""
	if byKey'=""{
		set sequ="",cont=0
		for {
			set sequ = $order(campos(0,sequ)) quit:sequ=""
			set campo = $piece(campos(0,sequ),"~",1)
			set cont=cont+1
			set chave = $piece(byKey,"~",cont)
			if where2'="" set where2 = where2_" and "
			set where2=where2_campo_" = '"_chave_"' "
		}
		if where'="" set where=where_" and "
		set where=where_" ("_where2_")"
	}elseif searchValue'=""{
		for cont=1:1:$length(select,","){
			set campo = $piece(select,",",cont)
			if $piece(campo,")",2)'=""{
				set campo = $piece(campo,")",1)_")"
			}
			if where2'="" set where2 = where2_" or "
			set where2=where2_"%upper("_campo_") like %upper('%"_searchValue_"%')"
		}
		if where'="" set where=where_" and "
		set where=where_" ("_where2_")"
	}
	;if wherefilter'=""{
	;	if where'="" set where = " and "
	;	set where=where_" ("_wherefilter_")"
	;}
	if where'="" set where = "where "_where
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from (select "_select_" from "_classe_" principal "_where_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSelect)
	;
	set totalCount=0
	if (sc) {
		set sc = rs.%Execute()
		set retornoArray = []
		while(sc.%Next()){
			set linha={}
			set totalCount=sc.%Get("totalCount")
			set chave=""
			set chaves={}
			set tcampo = ""
			for {
				set tcampo = $order(campos(tcampo)) quit:tcampo=""
				set sequ=""
				for {
					set sequ = $order(campos(tcampo,sequ)) quit:sequ=""
					;
					if tcampo=0{
						set campo = $piece(campos(tcampo,sequ),"~",1)
						set id=sc.%Get(campo)
						do linha.%Set(campo,id)
						do chaves.%Set(campo,id)
						if chave'="" set chave=chave_"~"
						set chave = chave_id
						continue
					}
					set campo = $piece(campos(tcampo,sequ),"~",2)
					set relacao = $piece(campos(tcampo,sequ),"~",4)
					set relacaoKey = $piece(campos(tcampo,sequ),"~",5)
					set inputType = $piece(campos(tcampo,sequ),"~",7)
					set valor=sc.%Get(campo)
					SET ^zzsilmar($now()) = campo_"|"_inputType_"|"_valor
					if inputType=1{
						if valor'="" set valor = $zdate(valor,4)
					}
					if inputType=14{
						if valor'="" set valor = $zdate(valor,4)_" - "_$ztime($piece(valor,",",2))
					}
					do linha.%Set(campo,valor)
				}
			}
			do linha.%Set("PrimaryKey",chaves)
			do linha.%Set("PrimaryKeyExt",id)
			do retornoArray.%Push(linha)
		}
	}	
	;
	if byKey'=""&&(retornoArray.%Size()=0){
		set linha={}
		do linha.%Set("id",byKey)
		do linha.%Set("text","("_byKey_") NÃO ENCONTRADO!")
		do retornoArray.%Push(linha)
	}
	if remoteOperations{
		set arrayRetorno = {}
		do arrayRetorno.%Set("data",retornoArray)
		do arrayRetorno.%Set("columns",columns)
		do arrayRetorno.%Set("totalCount",totalCount)
		write arrayRetorno.%ToJSON()
	}else{
		write retornoArray.%ToJSON()
	}
	quit
]]></Implementation>
</Method>

<Method name="montarCodigoPrimario">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	$$$VAR
	set YM = 0
	set form 	= $Get(%request.Data("formName",1))
	set campo 	= $Get(%request.Data("campo",1))
	set YBED 	= $Get(%request.Data("YBED",1))
	set YUSER 	= $Get(%request.Data("YUSER",1))
	;
	set objForm = $get(^WWW120(YM,form,1))
	set classe = $$$WWW120ClassUsedInForm(objForm)
	;
	; Recupera Chaves PrimÃ¡rias
	set caption = ""
	set sequ=""
	for {
		set sequ = $order(^WWW002(0,classe,sequ),-1) quit:sequ=""
		set objWWW002 = $get(^WWW002(0,classe,sequ,1))
		set caption = ..TranslateIndice(0,classe,sequ)
		set objForm = $get(^WWW121(0,form,sequ,1))
		set FixedInput = $$$WWW121FixedInputForHiddenField(objForm)
		if FixedInput=""{
			quit
		}
	}
	;	
	
	;
	&js<
	    $("##(campo)#").dxForm({
		    colCount: 7,
		    items:[{
	 			dataField: "#(caption)#",
	 			colSpan: 6,
	 			template: function (data, itemElement) {
					itemElement.append("<div id='txt#(campo)#'>")
				}
			},{
				label:{
					showColon:false,
					text:"&nbsp;"
				},
	 			template: function (data, itemElement) {
					itemElement.append("<div id='buttonGroupNavegacao'>")
				}
			}],
			alignItemLabels: true,
			alignItemLabelsInAllGroups: true,
			labelLocation: "top",
			requiredMark: "",
			showRequiredMark:false,
	    }).dxForm("instance");
		//
		
		//		
		var text
		dataSourceChave = new DevExpress.data.DataSource({
			store: new DevExpress.data.CustomStore({
				byKey: function(key) {
					return $.getJSON(urlPreparacao,{
	                    method   		: "montaPesquisaForm",
	                    form			: formulario,
	                    formType		: "DropDownBox",
	                    byKey			: key,
                    	YBED	  		: YBED,
                    	YUSER	  		: YUSER,
                    	EP				: 1
	                });
				},
				load: function(loadOptions) {
					var deferred = $.Deferred()
					return $.getJSON(urlPreparacao,{
	                    method   		: "montaPesquisaForm",
	                    form			: formulario,
	                    formType		: "DropDownBox",
	                    filter			: JSON.stringify(loadOptions.filter),
	                    take			: JSON.stringify(loadOptions.take),
	                    skip			: JSON.stringify(loadOptions.skip),
	                    sort			: JSON.stringify(loadOptions.sort),
	                    searchValue		: text,
	                    remoteOperations: 1,
                    	YBED	  		: YBED,
                    	YUSER	  		: YUSER,
                    	EP				: 1
					},function(result){
						deferred.resolve(
							result.data, {
								totalCount: result.totalCount
							});
							if ($("#ChaveDataGrid").dxDataGrid("instance")){
								if (!$("#ChaveDataGrid").dxDataGrid("instance").option("columns")){
									$("#ChaveDataGrid").dxDataGrid("instance").option("columns",result.columns)
								}
							}
					})
					return deferred.promise();
				}
			})
		});
	
		click = 0
		campoChave = $("#txt#(campo)#").dxDropDownBox({
			valueExpr: "", 
			placeholder: "+",
			displayExpr: "",
			acceptCustomValue: true,
			openOnFieldClick: false,
			showClearButton: true,
			onFocusIn: function(e){
				if (!e.component.option("opened")){
					click = 0
					e.component.open();
					e.component.focus()
				}
			},
			onInput: function(e){
				text = e.component.option("text")
				dataSourceChave.reload();
			},
			onClosed: function(arg){
				if (!click){
					carregaDados()
				}
			},
	        onValueChanged: function(args){
		        if (!click) return
				carregaDados()
		    },
			contentTemplate: function(e){
				var value = e.component.option("value");
				$dataGrid = $("<div id='ChaveDataGrid'>").dxDataGrid({
					loadPanel: {
						enabled: true
					},
					dataSource: dataSourceChave,
					rowAlternationEnabled:true,
					grouping: {
						allowCollapsing: true,
					  	autoExpandAll: false
					},
					columnAutoWidth: true,
					cellHintEnabled:true,		
					allowColumnReordering: true,
					allowColumnResizing: true,
			 		remoteOperations: {
				 		 paging: true,
				 		 filtering: true,
				 		 sorting: true
			 		},
					//wordWrapEnabled:true,
					cellHintEnabled:true,		
					selection: {
						mode:"single"
					},					
					groupPanel: {
						visible: true,
						allowColumnDragging: true
					},
					export: {
						enabled: true
					},
					height: function() {
						return window.innerHeight - 220;
					},	
					columnChooser: {
						enabled: true,
						mode: "dragAndDrop" 
					},
					sorting: {
						mode: "multiple"
					},
			        paging: {
			            pageSize: 20
			        },
			        pager: {
			            showPageSizeSelector: true,
			            allowedPageSizes: [5, 10, 20, 50, 100],
			            showInfo: true,
						showNavigationButtons: true 
			        },
					filterRow:{
						visible:true
					},
				  	showColumnLines: true,
				  	showRowLines: true,
				  	showBorders: true,
				  	hoverStateEnabled: true,
				  	searchPanel: {
						visible: true,
						width: 240,
						placeholder: "Pesquisar..."
					},
					stateStoring:{
						//enabled:true,
						//type:"sessionStorage"
					},
					headerFilter: {
						visible: false
					},	        
					columnFixing: {
			            enabled: true
			        },			
					selectedRowKeys: value ? [value] : [],
					onCellClick: function(e) {
						if (e.rowType == "data"){
							click=1
							campoChave.option("valueExpr",e.data.PrimaryKey)
							campoChave.option("value",e.data.PrimaryKeyExt)
							campoChave.close();
						}
					}
				});
				return $dataGrid;
			}
		}).dxDropDownBox("instance");	
		
	var carregaDados = (function(){
		codigo = campoChave.option("valueExpr")
		if (codigo==null){
			codigo = ""
		}
		$.getJSON(urlPreparacao,{
            method   		: "getFormCorpoDados",
            form			: formulario,
            chave			: JSON.stringify(codigo),
        	YBED	  		: YBED
        },function(retorno){
	        dxFormDados.option("formData",retorno.formData)
	        dxFormDados.validate();
	    });
	})
	>
]]></Implementation>
</Method>

<Method name="getPrimaryKey">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set formName	= $Get(%request.Data("formName",1))
	set campo 		= $Get(%request.Data("campo",1))
	set YBED 		= $Get(%request.Data("YBED",1))
	set YUSER 		= $Get(%request.Data("YUSER",1))
	;
	set objForm = $get(^WWW120(YM,formName,1))
	set classe = $$$WWW120ClassUsedInForm(objForm)
	;
	if classe = "" quit
	do ..clearVarAmbiente(YUSER,classe)
	;
	; Recupera Chaves PrimÃ¡rias
	set chavesPrimarias = []
	set caption = ""
	set primeiro = 1
	set sequ=""
	for {
		set sequ = $order(^WWW002(YM,classe,sequ)) quit:sequ=""
		set objWWW002 = $get(^WWW002(YM,classe,sequ,1))
		;
		set propertyName = $$$WWW002PropertyName(objWWW002)
		set relationClass = $$$WWW002RelationClass(objWWW002)
		set relationClassKey = $$$WWW002RelationalPrimaryKeys(objWWW002)
		set relationDisplay = $$$WWW002RelationalDisplayItems(objWWW002)
		set sortTheRelation = $$$WWW002SortTheRelation(objWWW002)
		set inputType = $$$WWW002InputType(objWWW002)
		;
		set caption = ..TranslateIndice(YM,formName,sequ)
		;
		;set sequForm=""
		;for {
		;	set sequForm=$order(^WWW121(YM,formName,sequForm)) quit:sequForm=""
		;	set objWWW121 	= $get(^WWW121(YM,formName,sequForm,1))
		;	if $$$WWW121SequenceNumber(objWWW121)=sequ quit
		;}
		set objForm = $get(^WWW121(YM,formName,sequ,1))
		set FixedInput = $$$WWW121FixedInputForHiddenField(objForm)
		set DefaultVariable = $$$WWW121DefaultVariableInput(objForm)
		;
		set automaticSequenceCounter = $$$WWW121AutomaticSequenceCounter(objForm)
		if inputType=9 set automaticSequenceCounter = 1
		;
		; Busca RelaÃ§Ã£o do Cadastro do formulÃ¡rio
		set relationClass = $$$WWW121RelationClass(objForm)
		set relationClassKey = $$$WWW121RelationPrimaryKeys(objForm)
		set relationDisplay = $$$WWW121RelationalDisplayItems(objForm)
		set hideRelationClassIDs = $$$WWW121DoNotShowPrimaryKey(objForm)
		;
		set executeOnFormStartBeforeD = $$$WWW121ExecuteOnFormStartBeforeD(objForm)
		if executeOnFormStartBeforeD'=""{
			Xecute executeOnFormStartBeforeD
		}
		;
		set obj121D = $get(^WWW121(YM,formName,YM,1))
		
		; Caso nÃ£o tenha relaÃ§Ã£o no formulÃ¡rio, busca na classe
		if relationClass=""{
			set relationClass = $$$WWW002RelationClass(objWWW002)
			set relationClassKey = $$$WWW002RelationalPrimaryKeys(objWWW002)
			set relationDisplay = $$$WWW002RelationalDisplayItems(objWWW002)
		}
		set displayIfSortKeyEqual = $$$WWW002DisplayIfSortKeyEqual(objWWW002)
		;
		set chave = {}
		do chave.%Set("dataField",propertyName)
		;
		set label = {}
		do label.%Set("text",$zstrip(caption,"<>w"))
		do label.%Set("alignment","left")
		do chave.%Set("label",label)
		;
		;
		set editorOptions={}
		;
		if relationClass=""{
			if inputType=1{
				do chave.%Set("editorType","dxDateBox")
				do editorOptions.%Set("placeholder","dd/mm/aaaa")
				do editorOptions.%Set("useMaskBehavior",1)
				do editorOptions.%Set("type","date")
				do editorOptions.%Set("displayFormat","dd/MM/yyyy")
				do editorOptions.%Set("width","100%")
			}elseif inputType=14{
				do chave.%Set("editorType","dxDateBox")
				do editorOptions.%Set("placeholder","dd/mm/aaaa - hh:mm")
				do editorOptions.%Set("useMaskBehavior",1)
				do editorOptions.%Set("type","datetime")
				do editorOptions.%Set("displayFormat","dd/MM/yyyy - HH:mm")
				do editorOptions.%Set("width","100%")
			}else{
				do chave.%Set("editorType","dxTextBox")
			}
		}else{
			do chave.%Set("editorType","dxSelectBox")
		}
		;
		set relationClassKey = $replace(relationClassKey,"""","_")
		do editorOptions.%Set("dataSource","'getDataSource('"_relationClass_"','"_relationClassKey_"','"_relationDisplay_"','"_hideRelationClassIDs_"','"_sortTheRelation_"','"_displayIfSortKeyEqual_"')'")
		do editorOptions.%Set("searchEnabled",1)
		if $get(YHID)=2 {
			do editorOptions.%Set("disabled",1)
			do chave.%Set("editorType","dxTextBox")
		}
		do editorOptions.%Set("showClearButton",1)
		do editorOptions.%Set("valueExpr","id")
		;do editorOptions.%Set("acceptCustomValue",1)
		do editorOptions.%Set("displayExpr","text")
		do editorOptions.%Set("onValueChanged","'function(e){carregaDados()}'")
		;
		; Cria o botÃ£o de pesquisar registros (COMView 2.0) apenas na primeira linha da chave primaria
		do chave.%Set("editorOptions",editorOptions)
		;
		do chave.%Set("colSpan",6)
		;
		if DefaultVariable["$$" set DefaultVariable = ""
		if automaticSequenceCounter=1{
			set DefaultVariable = "+"
		}
		if DefaultVariable'=""{
			if DefaultVariable["@"{
				set DefaultVariable = $replace(DefaultVariable,"@","")
				if DefaultVariable'="" set @("DefaultVariable = "_DefaultVariable)
			}
			do ..setVarAmbiente(YUSER, classe,"defaultVariableInput",propertyName,DefaultVariable)
			if DefaultVariable="+" {
				do editorOptions.%Set("placeholder","+")
			}else{
				do editorOptions.%Set("value",DefaultVariable)
			}
		}
		if FixedInput'="" {
			do chave.%Set("colSpan",7)
			do chave.%Set("visible",0)
		}else{
			if primeiro=1{
				do chavesPrimarias.%Push(chave)
				set chave = {}			
				do chave.%Set("template","'setTemplateCOMViewNave'")
				set editorOptions={}
				do editorOptions.%Set("propName",propertyName)
				do chave.%Set("editorOptions",editorOptions)
			}else{
				do chavesPrimarias.%Push(chave)
				set chave = {}			
				do chave.%Set("template","'setTemplateNave'")
				set editorOptions={}
				do editorOptions.%Set("propName",propertyName)
				do chave.%Set("editorOptions",editorOptions)
			}
			;
			set primeiro = 0	
		}
		;
		do chavesPrimarias.%Push(chave)
	}
	
	/*set chave = {}
	do chave.%Set("itemType","tabbed")
	do chave.%Set("colSpan",7)
	set tabs = []
	set tabCont = {}
	set tabCont.title = ""
	do tabs.%Push(tabCont)
	do chave.%Set("tabs",tabs)
	do chave.%Set("template","'function (data, itemElement) {itemElement.append('<div id=""formDados"">')}'")
	do chavesPrimarias.%Push(chave)*/

	write $replace($replace(chavesPrimarias.%ToJSON(),"""'",""),"'""","")
	quit $$$OK
]]></Implementation>
</Method>

<Method name="getFormCorpo">
<ClassMethod>1</ClassMethod>
<FormalSpec>formName="",formulario=0</FormalSpec>
<Implementation><![CDATA[
	set jsonFlag=0
	if formName="" {
		set formName 	= $Get(%request.Data("formName",1))
		set jsonFlag=1
	}
	set YM=0
	set objForm = $get(^WWW120(YM,formName,1))
	set class = $$$WWW120ClassUsedInForm(objForm)
	kill formulario
	kill formulariotmp
	;
	;; Campos do FormulÃ¡rio
	set meuSQL = "select SequenceNumber, DataItemNumber, DisplayOnPageNumber, RowPosition,"
	set meuSQL = meuSQL_" ColumnPosition, ManualCaption, GroupName, MandatoryInputItem,"
	set meuSQL = meuSQL_" RelationClass, InputType, DataInputType, DefaultVariableInput,"
	set meuSQL = meuSQL_" InputInVariable, UserAccessForChange, RelationalPrimaryKey, RelationalDataField,"
	set meuSQL = meuSQL_" fieldSize, hideRelationClassIDs"
	set meuSQL = meuSQL_" from WWW122 where FormName = '"_formName_"' "
	set meuSQL = meuSQL_" order by DisplayOnPageNumber,RowPosition,ColumnPosition"
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSQL)
	set colunaContador = 0
	if (sc) {
		set sc = rs.%Execute()
		set grupo = 0
		while(sc.%Next()){
			set sequenceNumber=sc.%Get("SequenceNumber")
			set dataItemNumber=sc.%Get("DataItemNumber")
			set displayOnPageNumber=sc.%Get("DisplayOnPageNumber")
			set rowPosition=sc.%Get("RowPosition")
			set columnPosition=sc.%Get("ColumnPosition")
			set manualCaption=sc.%Get("ManualCaption")
			set groupName = sc.%Get("GroupName")
			set mandatoryInputItem = sc.%Get("MandatoryInputItem")
			set relationClass = sc.%Get("RelationClass")
			set inputType = sc.%Get("InputType")
			set dataInputType = sc.%Get("DataInputType")
			set defaultVariableInput = sc.%Get("DefaultVariableInput")
			set InputInVariable = sc.%Get("InputInVariable")
			set UserAccessForChange = sc.%Get("UserAccessForChange")
			set relationClassKey = sc.%Get("RelationalPrimaryKey")
			set relationDisplay = sc.%Get("RelationalDataField")
			set fieldSize = sc.%Get("fieldSize")
			set hideRelationClassIDs = sc.%Get("hideRelationClassIDs")
			set sortTheRelation = ""
			set displayIfSortKeyEqual = ""
			;
			If sequenceNumber="" continue
			;
			if defaultVariableInput'=""{
				if defaultVariableInput["@"{
					set defaultVariableInput = $replace(defaultVariableInput,"@","")
					if defaultVariableInput'="" set @("defaultVariableInput = "_defaultVariableInput)
				}
				
			}
			;
			set valor = manualCaption
			set campoNaClasse = $zconvert(valor,"U")
			;
			set field=""
			if class'=""{
				set obj003 = $get(^WWW003(YM,class,sequenceNumber,1))
				set field = $$$WWW003PropertyName(obj003)
				set inputType=$$$WWW003InputType(obj003)
				set sortTheRelation = $$$WWW003SortTheRelation(obj003)
				if fieldSize="" set fieldSize=$$$WWW003InputLength(obj003)
				set valor = ..Translate(YM,class,sequenceNumber)
				if valor = "" set valor = manualCaption
				if +dataInputType="0"{
					;set dataInputType = inputType
				}
			}
			if relationClass=""{
				set obj003 = $get(^WWW003(YM,class,sequenceNumber,1))
				set relationClass = $$$WWW003RelationDatabase(obj003)
				set relationClassKey = $zstrip($$$WWW003RelationalPrimaryKeys(obj003),"<>W")
				set relationDisplay = $$$WWW003RelationalDisplayItems(obj003)
				set sortTheRelation = $$$WWW003SortTheRelation(obj003)
				set displayIfSortKeyEqual =  $$$WWW003DisplayIfSortKeyEqual(obj003)
			}
			;
			set objWWW122D = $get(^WWW122D(YM,formName,dataItemNumber,0,1))
			if objWWW122D'=""{
				if $$$WWW122DFieldDescription(objWWW122D)'="" set manualCaption = $$$WWW122DFieldDescription(objWWW122D)
				if $$$WWW122DDisplayOnPage(objWWW122D)'="" set displayOnPageNumber = $$$WWW122DDisplayOnPage(objWWW122D)
				if $$$WWW122DLinePosition(objWWW122D)'="" {
					set rowPosition = $$$WWW122DLinePosition(objWWW122D)
					;set columnPosition = +$$$WWW122DTabulatorPosition(objWWW122D)
				}
				if $$$WWW122DTabulatorPosition(objWWW122D)'="" set columnPosition = $$$WWW122DTabulatorPosition(objWWW122D)
				if $$$WWW122DNewGroup(objWWW122D)'="" set groupName = $$$WWW122DGroupName(objWWW122D)
				if $$$WWW122DMandatoryField(objWWW122D)'="" set mandatoryInputItem = $$$WWW122DMandatoryField(objWWW122D)
				if $$$WWW122DFieldDescription(objWWW122D)'="" set valor = $$$WWW122DFieldDescription(objWWW122D)
				if $$$WWW122DInputType(objWWW122D)'="" set inputType = $$$WWW122DInputType(objWWW122D)
				if $$$WWW122DDataInputType(objWWW122D)'="" set dataInputType = $$$WWW122DDataInputType(objWWW122D)
				if $$$WWW122DHiddenField(objWWW122D)'="" set dataInputType = 15
				if ($$$WWW122DRelationClass(objWWW122D)'=""){
					set relationClass = $$$WWW122DRelationClass(objWWW122D)
					set relationClassKey = $zstrip($$$WWW122DRelationalPrimaryKey(objWWW122D),"<>W")
					set relationDisplay = $$$WWW122DRelationalDataField(objWWW122D)
					set hideRelationClassIDs = $$$WWW122HideRelationClassIDs(objWWW122D)
				}
			}
			;
			; Busca TraduÃ§Ã£o do Campo do FormulÃ¡rio
			set objWWW1221 = $get(^WWW1221(YM,formName,dataItemNumber,"PT",1))
			if objWWW1221'=""{
				if $$$WWW1221Text(objWWW1221)'="" set valor = $$$WWW1221Text(objWWW1221)
			}
			;			
			if groupName'=""{
				set grupo = grupo + 1
				set colunaContador = 0
				set objWWW009 = $get(^WWW009(YM,"PT",groupName,1))
				set groupName = $$$WWW009Text(objWWW009)
			}			
			set objWWW1203 = $get(^WWW1203(YM,formName,"PT",displayOnPageNumber,1))
			set nomeAba = $$$WWW1203PictureFileForPageTag(objWWW1203)
			set position = +$$$WWW1203DisplayPosition(objWWW1203)
			if position'=0 {
				set position = position-1
			}else{
				if position=0 set position = displayOnPageNumber
			}
			;
			set relationClassKey = $replace(relationClassKey,"""","_")
			;
			set obj = ""
			set $piece(obj,"~",1)=valor
			set $piece(obj,"~",2)=field
			set $piece(obj,"~",3)=mandatoryInputItem
			set $piece(obj,"~",4)=relationClass
			set $piece(obj,"~",5)=relationClassKey
			set $piece(obj,"~",6)=relationDisplay
			set $piece(obj,"~",7)=dataInputType
			set $piece(obj,"~",8)=defaultVariableInput
			set $piece(obj,"~",9)=InputInVariable
			set $piece(obj,"~",10)=UserAccessForChange
			set $piece(obj,"~",11)=dataItemNumber
			set $piece(obj,"~",12)=sequenceNumber
			set $piece(obj,"~",13)=fieldSize
			set $piece(obj,"~",14)=inputType
			set $piece(obj,"~",15)=hideRelationClassIDs
			set $piece(obj,"~",16)=sortTheRelation
			set $piece(obj,"~",17)=displayIfSortKeyEqual
			if dataInputType=15 set displayOnPageNumber="oculto",nomeAba="oculto"
			if valor["_FREE" set displayOnPageNumber="oculto",nomeAba="oculto"
			;
			if groupName'="" set formulariotmp(position,displayOnPageNumber,rowPosition)=groupName
			set formulariotmp(position,displayOnPageNumber,rowPosition,columnPosition,dataItemNumber)=obj
		}
	}
	;
	if $data(^COMGridEditParameter(YM,formName)){
		set grid = ""
		for {
			set grid = $order(^COMGridEditParameter(YM,formName,grid)) quit:grid=""
			set objGrid = $get(^COMGridEditParameter(YM,formName,grid,1))
			set formGrid = $$$COMGridEditParameterGridName(objGrid)
			set displayOnPageNumber = $$$COMGridEditParameterTabs(objGrid)
			;
			set objWWW1203 = $get(^WWW1203(YM,formName,"PT",displayOnPageNumber,1))
			set nomeAba = $$$WWW1203PictureFileForPageTag(objWWW1203)
			set position = +$$$WWW1203DisplayPosition(objWWW1203)
			if position'=0 {
				set position = position-1
			}else{
				if position=0 set position = displayOnPageNumber
			}
			;
			set obj = ""
			set $piece(obj,"~",1)=formGrid
			set $piece(obj,"~",2)=formGrid
			set $piece(obj,"~",14)="dxDataGrid"
			;
			set rowPosition = 999
			set columnPosition = 1
			set dataItemNumber = grid
			;set groupName = "Grade"
			;if groupName'="" set formulariotmp(position,displayOnPageNumber,rowPosition)=groupName
			set formulariotmp(position,displayOnPageNumber,rowPosition,columnPosition,dataItemNumber)=obj
		}
	}
	;
	set grupo = 0
	set colunaContador = 0
	kill linhasindice
	set position=""
	for {
		set position = $order(formulariotmp(position)) quit:position=""
		;if position'=1 continue
		set displayOnPageNumber=""
		for {
			set displayOnPageNumber = $order(formulariotmp(position,displayOnPageNumber)) quit:displayOnPageNumber=""
			set objWWW1203 = $get(^WWW1203(YM,formName,"PT",displayOnPageNumber,1))
			set nomeAba = $$$WWW1203PictureFileForPageTag(objWWW1203)
			set rowPosition=""
			for {
				set rowPosition = $order(formulariotmp(position,displayOnPageNumber,rowPosition)) quit:rowPosition=""
				set groupName = $piece($get(formulariotmp(position,displayOnPageNumber,rowPosition)),"~",1)
				if groupName'="" {
					set grupo = grupo + 1
					set colunaContador = 0
					kill linhasindice
				}
				set columnPosition=""
				for {
					set columnPosition = $order(formulariotmp(position,displayOnPageNumber,rowPosition,columnPosition)) quit:columnPosition=""
					set dataItemNumber=""
					for {
						set dataItemNumber = $order(formulariotmp(position,displayOnPageNumber,rowPosition,columnPosition,dataItemNumber)) quit:dataItemNumber=""
						set obj = formulariotmp(position,displayOnPageNumber,rowPosition,columnPosition,dataItemNumber)
						;
						set $piece(formulario(position,displayOnPageNumber),"~",1)=nomeAba
						if '$data(formulario(position,displayOnPageNumber,grupo)){
							set formulario(position,displayOnPageNumber,grupo)=groupName
						}
						if colunaContador<columnPosition set colunaContador = columnPosition
						set $piece(formulario(position,displayOnPageNumber,grupo),"~",2)=colunaContador
						;
						set linha = rowPosition
						set coluna = columnPosition
						;
						for {
							if $data(linhasindice(1,linha))&&($get(linhasindice(1,linha))'=rowPosition) set linha = linha + 1 continue
							quit
						}
						if $data(linhasindice(0,linha)) set linha = linhasindice(0,linha)
						set primeiroLoop=1
						for {
							if '$data(formulario(position,displayOnPageNumber,grupo,linha,coluna)) quit
							if primeiroLoop=1{
								set linha = linha + 1
							}else{
								set coluna = coluna + 1
							}
							set primeiroLoop = 0
						}
						set linhasindice(0,rowPosition) = linha
						set linhasindice(1,linha) = rowPosition
						set formulario(position,displayOnPageNumber,grupo,linha,coluna,dataItemNumber) = obj
					}
				}
			}
		}
	}
	; Cria celulas vazias para a montagem da tela
	set position = ""
	for {
		set position = $order(formulario(position)) quit:position=""
		set displayOnPageNumber = ""
		for {
			set displayOnPageNumber = $order(formulario(position,displayOnPageNumber)) quit:displayOnPageNumber=""
			set grupo = ""
			for {
				set grupo = $order(formulario(position,displayOnPageNumber,grupo)) quit:grupo=""
				set totalColunas = $piece(formulario(position,displayOnPageNumber,grupo),"~",2)
				set linha = ""
				for {
					set linha = $order(formulario(position,displayOnPageNumber,grupo,linha)) quit:linha=""
					for coluna=1:1:totalColunas{
						if '$data(formulario(position,displayOnPageNumber,grupo,linha,coluna)) {
							set formulario(position,displayOnPageNumber,grupo,linha,coluna,1)=""
						}else{
							set $piece(formulario(position,displayOnPageNumber,grupo,linha),"~",1) = $piece($get(formulario(position,displayOnPageNumber,grupo,linha)),"~",1) + 1
						}
					}
				}
			}
		}
	}	
	;
	;
	set jSON = []
	set retorno={}
	set tabs  = []
	;; Inicio da Aba
	set position = ""
	for {
		set position = $order(formulario(position)) quit:position=""
		set aba = ""
		for {
			set aba = $order(formulario(position,aba)) quit:aba=""
			;
			set nomeAba = $piece(formulario(position,aba),"~",1)
			;
			set itemsTab = []
			set tab = {}
			set group={}
			if nomeAba="" set nomeAba = "Principal"
			do tab.%Set("title",nomeAba)
			;do tab.%Set("key",$now())
			if aba="oculto" do tab.%Set("visible",0)
			set inicioAba = 1
			;
			;; Inicio do Grupo
			set group = ""
			for {
				set group = $order(formulario(position,aba,group)) quit:group=""
				;; Inicio da Linha
				set nomeGroup = $piece(formulario(position,aba,group),"~",1)
				set colunas = $piece(formulario(position,aba,group),"~",2)
				if inicioAba=1&&(nomeGroup="") set nomeGroup = " "
				set inicioAba=0
				if +colunas=0 set colunas = 1
				set itemsGroups = []
				set linhaGroups = {}
				if nomeGroup'=""{
	                do linhaGroups.%Set("itemType","group")
	                do linhaGroups.%Set("caption",nomeGroup)
	                ;do linhaGroups.%Set("key",$now())
	                do linhaGroups.%Set("alignItemLabels",1)
				}
				set row = ""
				for {
					set row = $order(formulario(position,aba,group,row)) quit:row=""
					set linhaContador = $get(formulario(position,aba,group,row))
					set colspan = 1
					if linhaContador<colunas {
						set colspan = colunas
					}
					;; Inicio da Coluna
					set col = ""
					for {
						set col = $order(formulario(position,aba,group,row,col)) quit:col=""
						;; Inicio dos Campos
						set campo = ""
						for {
							set campo = $order(formulario(position,aba,group,row,col,campo)) quit:campo=""
							set obj 					= formulario(position,aba,group,row,col,campo)
							set valor 					= $piece(obj,"~",1)
							set field 					= $piece(obj,"~",2)
							set mandatoryInputItem 		= $piece(obj,"~",3)
							set relationClass 			= $piece(obj,"~",4)
							set relationClassKey 		= $piece(obj,"~",5)
							set relationDisplay 		= $piece(obj,"~",6)
							set dataInputType	 		= $piece(obj,"~",7)
							set defaultVariableInput 	= $piece(obj,"~",8)
							set InputInVariable			= $piece(obj,"~",9)
							set UserAccessForChange		= $piece(obj,"~",10)
							set fieldSize				= $piece(obj,"~",13)
							set inputType		 		= $piece(obj,"~",14)
							set hideRelationClassIDs	= $piece(obj,"~",15)
							set sortTheRelation 		= $piece(obj,"~",16)
							set displayIfSortKeyEqual	= $piece(obj,"~",17)
							;
							if obj=""{
								set items = {}
								do items.%Set("itemType","empty")
								if nomeGroup=""{
									do itemsTab.%Push(items)
								}else{
									do itemsGroups.%Push(items)
								}
								continue
							}
							set fieldSize = fieldSize * 2
							if linhaContador<3{
								if fieldSize<400 set fieldSize=400
							}else{
								if fieldSize<200 set fieldSize=fieldSize+150
							}
							if inputType=3 set fieldSize=400
							set fieldSize = "100%"
							if colunas=1 set fieldSize = "50%"
							set items = {}
							do items.%Set("dataField",field)
							do items.%Set("isRequired",mandatoryInputItem)
							;do items.%Set("colSpan",+colspan)
							;
							set label = {}
							do label.%Set("text",$zstrip(valor,"<>w"))
							do label.%Set("alignment","left")
							do items.%Set("label",label)
							
							if dataInputType=15 do items.%Set("visible",0)
							;
							set elementAttr = {}
							do elementAttr.%Set("variavelPadrao",InputInVariable)
							if defaultVariableInput'=""{
								do ..setVarAmbiente(YUSER, class,"defaultVariableInput",field,defaultVariableInput)
							}
							do items.%Set("elementAttr",elementAttr)
							;
							if inputType="dxDataGrid"{
								set label = {}
								do label.%Set("visible",0)
								do items.%Set("label",label)
								do items.%Set("template","'setTemplateGrid'")
								;
								;do items.%Set("editorType","dxDataGrid")
								set editorOptions={}
								do editorOptions.%Set("gridPai",formName)
								;do editorOptions.%Set("dataSource","'dataSourceGrid'")
								;do editorOptions.%Set("columns","'dataSourceGridColumns'")
								do items.%Set("editorOptions",editorOptions)
							}elseif inputType=3{
								do items.%Set("editorType","dxTextArea")
								set editorOptions={}
								if UserAccessForChange=5{
									do editorOptions.%Set("disabled",1)
								}
								if defaultVariableInput'="" do editorOptions.%Set("value",defaultVariableInput)
								do editorOptions.%Set("width",fieldSize)
								do items.%Set("editorOptions",editorOptions)
							}elseif relationClass'="" {
								if field="" set field = valor
								if dataInputType = 6{
									do items.%Set("editorType","dxTagBox")
								}else{
									do items.%Set("editorType","dxSelectBox")
								}
								;
								set editorOptions={}
								do editorOptions.%Set("dataSource","'getDataSource('"_relationClass_"','"_relationClassKey_"','"_relationDisplay_"','"_hideRelationClassIDs_"','"_sortTheRelation_"','"_displayIfSortKeyEqual_"')'")
								do editorOptions.%Set("searchEnabled",1)
								;do editorOptions.%Set("showClearButton",1)
								do editorOptions.%Set("valueExpr","id")
								do editorOptions.%Set("displayExpr","text")
								if defaultVariableInput'="" do editorOptions.%Set("value",defaultVariableInput)
								if UserAccessForChange=5{
									do editorOptions.%Set("disabled",1)
								}
								do editorOptions.%Set("width",fieldSize)
								if dataInputType = 6{
									do editorOptions.%Set("maxDisplayedTags",2)
									do editorOptions.%Set("showSelectionControls",1)
								;	do editorOptions.%Set("height",200)
								;	do editorOptions.%Set("showSelectionControls",1)
								;	do editorOptions.%Set("selectionMode","multiple")
								}
								do items.%Set("editorOptions",editorOptions)
								;
							}elseif inputType=1{
								do items.%Set("editorType","dxDateBox")
								set editorOptions={}
								do editorOptions.%Set("placeholder","dd/mm/aaaa")
								do editorOptions.%Set("useMaskBehavior",1)
								do editorOptions.%Set("type","date")
								do editorOptions.%Set("displayFormat","dd/MM/yyyy")
								if UserAccessForChange=5{
									do editorOptions.%Set("disabled",1)
								}
								do editorOptions.%Set("width",fieldSize)
								do items.%Set("editorOptions",editorOptions)
							}elseif inputType=14{
								do items.%Set("editorType","dxDateBox")
								set editorOptions={}
								do editorOptions.%Set("placeholder","dd/mm/aaaa - hh:mm")
								do editorOptions.%Set("useMaskBehavior",1)
								do editorOptions.%Set("type","datetime")
								do editorOptions.%Set("displayFormat","dd/MM/yyyy - HH:mm")
								if UserAccessForChange=5{
									do editorOptions.%Set("disabled",1)
								}
								do editorOptions.%Set("width",fieldSize)
								do items.%Set("editorOptions",editorOptions)
							}elseif inputType=4{
								do items.%Set("editorType","dxNumberBox")
								set editorOptions={}
								if UserAccessForChange=5{
									do editorOptions.%Set("disabled",1)
								}
								do editorOptions.%Set("width",fieldSize)
								do items.%Set("editorOptions",editorOptions)
							}elseif inputType=12{
								do items.%Set("editorType","dxNumberBox")
								set editorOptions={}
								if UserAccessForChange=5{
									do editorOptions.%Set("disabled",1)
								}
								do editorOptions.%Set("width",fieldSize)
								do items.%Set("editorOptions",editorOptions)
							}else{
								set editorOptions={}
								do editorOptions.%Set("width",fieldSize)
								if defaultVariableInput'="" do editorOptions.%Set("value",defaultVariableInput)
								if UserAccessForChange=5{
									do editorOptions.%Set("disabled",1)
								}
								do items.%Set("editorOptions",editorOptions)
							}
							if dataInputType'="" do ..setVarAmbiente(YUSER, class,"dataInputType",field,dataInputType)
							;
							if nomeGroup=""{
								do itemsTab.%Push(items)
							}else{
								do itemsGroups.%Push(items)
							}
						}
						;; Fim dos Campos
					}
					;; Fim das Colunas
				}
				;; Fim das Linhas
				if linhaGroups.%Get("caption")'=""{
					do linhaGroups.%Set("colCount",colunas)
					do linhaGroups.%Set("items",itemsGroups)
					do itemsTab.%Push(linhaGroups)
				}
			}
			;; Fim dos Grupos
			do tab.%Set("items",itemsTab)
			do tab.%Set("height","600")
			do tabs.%Push(tab)
		}
	}
	;; Fim das Abas
	do retorno.%Set("itemType","tabbed")
	do retorno.%Set("height","600")
	do retorno.%Set("tabs",tabs)
	do jSON.%Push(retorno)
	if jsonFlag{
		write $replace($replace(jSON.%ToJSON(),"""'",""),"'""","")
		quit
	}else{
		quit $replace($replace(jSON.%ToJSON(),"""'",""),"'""","")
	}
]]></Implementation>
</Method>

<Method name="montaPesquisaClass">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set classe 					= $Get(%request.Data("classe",1))
	Set classeKey 				= $Get(%request.Data("classeKey",1))
	Set classeDisplay 			= $Get(%request.Data("classeDisplay",1))
	Set hideRelationClassIDs 	= $Get(%request.Data("hideRelationClassIDs",1))
	Set sortTheRelation 		= $Get(%request.Data("sortTheRelation",1))
	Set displayIfSortKeyEqual 	= $Get(%request.Data("displayIfSortKeyEqual",1))
	Set take	 				= $Get(%request.Data("take",1))
	Set skip 					= $Get(%request.Data("skip",1))
	Set searchValue 			= $Get(%request.Data("searchValue",1))
	Set filter		 			= $Get(%request.Data("filtro",1))
	Set formType	 			= $Get(%request.Data("formType",1))
	Set byKey		 			= $Get(%request.Data("byKey",1))
	Set remoteOperations		= $Get(%request.Data("remoteOperations",1))
	;
	SET ^zzsilmar = take
	if byKey'="" set searchValue = byKey
	;if +take = 0 set take = 30
	if classe="" quit
	kill campos
	set select=""
	set flag=0
	kill indices
	kill campos
	set sequ=""
	for {
		set sequ = $order(^WWW002(YM,classe,sequ)) quit:sequ=""
		set objWWW002 = $get(^WWW002(YM,classe,sequ,1))
		if select'="" set select = select_","
		set select=select_$$$WWW002PropertyName(objWWW002)
		set id = $$$WWW002PropertyName(objWWW002)
		set indices(sequ)=id
	}
	set sequ=""
	for {
		set sequ = $order(^WWW003(YM,classe,sequ)) quit:sequ=""
		set objWWW003 = $get(^WWW003(YM,classe,sequ,1))
		if classeDisplay'=""{
			if ($find(","_classeDisplay_",",","_sequ_",")=0)&&($find(","_classeDisplay_",",","_$$$WWW003PropertyName(objWWW003)_",")=0) continue
		}
		if select'="" set select = select_","
		set select=select_$$$WWW003PropertyName(objWWW003)
		set campos(sequ)=$$$WWW003PropertyName(objWWW003)
		if formType'="DropDownBox" quit
	}
	set where = ""
	if classeKey'=""{
		for cont=1:1:$length(classeKey,","){
			set condicao = $piece(classeKey,",",cont)
			if condicao["_"{
				set condicao = $replace(condicao,"_","")
			}else{
				if ..getVarAmbiente(YUSER, classe, "defaultVariableInput", condicao)'="" {
					set condicao=..getVarAmbiente(YUSER, classe, "defaultVariableInput", condicao)
				}else{
					if condicao'="" set condicao = $get(@(condicao))
				}
				
			}
			set objWWW002 = $get(^WWW002(YM,classe,cont,1))
			if where'="" set where = where_" and "
			set where=where_$$$WWW002PropertyName(objWWW002)_" = '"_condicao_"'"
		}
	}
	set where2=""
	if searchValue'=""{
		for cont=1:1:$length(select,","){
			set campo = $piece(select,",",cont)
			if where2'="" set where2 = where2_" or "
			set where2=where2_"%upper("_campo_") like %upper('%"_searchValue_"%')"
		}
		if where'="" set where=where_" and "
		set where=where_" ("_where2_")"
	}
	// Exibir campos seguindo a condiÃ§Ã£o estabelecida no campo DisplayIfSortKeyEqual do que foi cadastrado na classe WWW002, onde:
	if displayIfSortKeyEqual'=""{
		set pieceSort = $piece(displayIfSortKeyEqual,",",1)+1
		set compareSort = $piece(displayIfSortKeyEqual,",",2)
		set objWWW002 = $get(^WWW003(YM,classe,pieceSort,1))
		if where'="" set where = where_" and "
		set where=where_$$$WWW002PropertyName(objWWW002)_" = '"_compareSort_"'"
	}
	if where'="" set where = "where "_where
	if take'=""{
		set take = skip + take
		set skip = skip + 1
	}
	set order = ""
	if sortTheRelation=1{
		set order = "Order By "_select
	}
	set meuSelect="select * "
	if take=""{
		set meuSelect="select "_select_" from "_classe_" "_where_" "_order
	}else{
		set meuSelect=meuSelect_" from (select top "_take_" "_select_",count(*) totalCount from "_classe_" "_where_" "_order_")  where %VID between "_skip_" and "_take
	}
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSelect)
	set ^zzsilmar = meuSelect
	set totalCount=0
	set retorno = []
	set columns = []
	if (sc) {
		set sc = rs.%Execute()
		while(sc.%Next()){
			set linha={}
			if take'="" set totalCount=sc.%Get("totalCount")
			set sequ=""
			for {
				set sequ = $order(campos(sequ)) quit:sequ=""
				set campo = campos(sequ)
				set valor=sc.%Get(campo)
				if remoteOperations{
					set traducao = ..Translate(YM,classe,sequ)
					set coluna = {}
					do coluna.%Set("dataField",campo)
					do coluna.%Set("caption",traducao)
					do columns.%Push(coluna)
				}else{
					set campo = ..Translate(YM,classe,sequ)
				}
				if formType="DropDownBox"{
					do linha.%Set("Codigo",sc.%Get(id))
					do linha.%Set(campo,valor)
				}else{
					do linha.%Set("id",sc.%Get(id))
					if 'hideRelationClassIDs{
						do linha.%Set("text","("_sc.%Get(id)_") "_valor)
					}else{
						do linha.%Set("text",valor)
					}
				}
			}
			do retorno.%Push(linha)
		}
	}	
	if byKey'=""&&(retorno.%Size()=0){
		set linha={}
		do linha.%Set("id",byKey)
		do linha.%Set("text","("_byKey_") NÃO ENCONTRADO!")
		do retorno.%Push(linha)
	}
	if take'=""{
		set arrayRetorno = {}
		do arrayRetorno.%Set("data",retorno)
		do arrayRetorno.%Set("columns",columns)
		do arrayRetorno.%Set("totalCount",totalCount)
		write arrayRetorno.%ToJSON()
	}else{
		write retorno.%ToJSON()
	}
	quit
]]></Implementation>
</Method>

<Method name="montaCOMView">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set formName		= $Get(%request.Data("form",1))
	Set formPai			= $Get(%request.Data("formPai",1))
	Set formType	 	= $Get(%request.Data("formType",1))
	Set primaryKey	 	= $Get(%request.Data("primaryKey",1))
	Set byKey		 	= $Get(%request.Data("byKey",1))
	Set filter		 	= $Get(%request.Data("filter",1))
	Set take	 		= $Get(%request.Data("take",1))
	Set skip 			= $Get(%request.Data("skip",1))
	Set sort 			= $Get(%request.Data("sort",1))
	Set searchValue 	= $Get(%request.Data("searchValue",1))
	Set remoteOperations= $Get(%request.Data("remoteOperations",1))
	;
	kill chavePai
	set wheregrid = ""
	if formType="Grid"{
		set chave = $translate(..recChaveExtToInt(formPai,primaryKey),"""","")
		set primaryKey = $translate(primaryKey,"""{[]}","")
		set chaveCompleta = $translate(..recChaveCompleta(formPai),":","")
		set chaveImcompleta = 0
		for piece=1:1:$length(chaveCompleta,","){
			set campo = $piece(chaveCompleta,",",piece)
			set valor = $piece(chave,",",piece)
			if valor="" set chaveImcompleta=1 quit
			if wheregrid'="" set wheregrid = wheregrid_" and "
			set wheregrid = wheregrid_campo_" = '"_valor_"'"
			set chavePai(campo)=""
		}
		if chaveImcompleta=1{
			quit
		}
		
	}
	;
	if formName="" quit
	kill campos
	kill indices
	kill campos
	;
	set select=""
	set flag=0
	set status = 0
	;
	set sort = $translate(sort,"""{[]}","")
	set campoSort = $piece($piece(sort,",",1),":",2)
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"ASC",1:"DESC")
	set orderBy = ""
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	;
	set wherefilter = ..getFilterExtToInt(filter)
	;
	; Recupera Campos do FormulÃ¡rio
	do ..getFormCorpo(formName, .formulario)
	;
	set objForm = $get(^WWW120(YM,formName,1))
	set classe = $$$WWW120ClassUsedInForm(objForm)
	;
	set columns = []
	; Recupera Chaves PrimÃ¡rias
	set sequ=""
	for {
		set sequ = $order(^WWW002(YM,classe,sequ)) quit:sequ=""
		set objWWW002 = $get(^WWW002(YM,classe,sequ,1))
		;
		set campo 				= $$$WWW002PropertyName(objWWW002)
		set relacao 			= $$$WWW002RelationClass(objWWW002)
		set relacaoKey 			= $$$WWW002RelationalPrimaryKeys(objWWW002)
		set relationDisplay		= $$$WWW002RelationalDisplayItems(objWWW002)
		set inputType			= $$$WWW002InputType(objWWW002)
		set hideRelationClassIDs = ""
		;
		;set sequForm=""
		;for {
		;	set sequForm=$order(^WWW121(YM,formName,sequForm)) quit:sequForm=""
		;	set objWWW121 	= $get(^WWW121(YM,formName,sequForm,1))
		;	if $$$WWW121SequenceNumber(objWWW121)=sequ quit
		;}
		set objWWW121 	= $get(^WWW121(YM,formName,sequ,1))
		;
		; Busca RelaÃ§Ã£o do Cadastro do formulÃ¡rio
		if $$$WWW121RelationClass(objWWW121)'="" {
			set relacao = $$$WWW121RelationClass(objWWW121)
			set hideRelationClassIDs = $$$WWW121DoNotShowPrimaryKey(objWWW121)
		}
		if $$$WWW121RelationPrimaryKeys(objWWW121)'="" set relacaoKey = $$$WWW121RelationPrimaryKeys(objWWW121)
		if $$$WWW121RelationalDisplayItems(objWWW121)'="" set relationDisplay = $$$WWW121RelationalDisplayItems(objWWW121)
		;
		if select'="" set select = select_","
		set select=select_campo_" Key_"_campo
		;
		set field = ..recRelationship(classe, campo,relacao,relacaoKey,relationDisplay,hideRelationClassIDs)
		;
		if select'="" set select = select_","
		set select=select_field
		;
		set id = campo
		set caption = ..TranslateIndice(YM,formName,sequ)
		set indices(sequ)=id
		set objForm = $get(^WWW121(YM,formName,sequ,1))
		set FixedInput = $$$WWW121FixedInputForHiddenField(objForm)
		if FixedInput=""&&('$data(chavePai(id))){
			set coluna = {}
			do coluna.%Set("dataField",id)
			do coluna.%Set("caption",caption)
			if inputType=1{
				do coluna.%Set("dataType","date")
				do coluna.%Set("format","dd/MM/yyyy")
			}elseif inputType=4{
				do coluna.%Set("dataType","number")
			}elseif inputType=14{
				do coluna.%Set("dataType","datetime")
				do coluna.%Set("format","dd/MM/yyyy - HH:mm")
			}
			do columns.%Push(coluna)
		}
		set campos(0,sequ)=id_"~"_inputType
	}
	kill camposFormulario
	;
	;; Inicio da Aba
	set primeiraAba = $order(formulario(""))
	set position=""
	for{
		set position = $order(formulario(position)) quit:position=""
		set aba = ""
		for {
			set aba = $order(formulario(position,aba)) quit:aba=""
			;
			if aba="oculto" continue
			;; Inicio do Grupo
			set group = ""
			for {
				set group = $order(formulario(position,aba,group)) quit:group=""
				;; Inicio da Linha
				set row = ""
				for {
					set row = $order(formulario(position,aba,group,row)) quit:row=""
					;; Inicio da Coluna
					set col = ""
					for {
						set col = $order(formulario(position,aba,group,row,col)) quit:col=""
						;; Inicio dos Campos
						set campo = ""
						for {
							set campo = $order(formulario(position,aba,group,row,col,campo)) quit:campo=""
							set obj 					= formulario(position,aba,group,row,col,campo)
							set valor 					= $piece(obj,"~",1)
							set field 					= $piece(obj,"~",2)
							set sequ 					= $piece(obj,"~",12)	
							set fieldSize				= $piece(obj,"~",13)
							set inputType				= $piece(obj,"~",14)
							if $extract(inputType,1,2)="dx" continue
							if obj="" continue
							if field="" set field = sequ
							if $data(camposFormulario(field)) continue
							set camposFormulario(field)=""
							set campos(1,sequ)=obj
							;
							set coluna = {}
							do coluna.%Set("dataField",field)
							do coluna.%Set("caption",valor)
							if inputType=1{
								do coluna.%Set("dataType","date")
								do coluna.%Set("format","dd/MM/yyyy")
							}elseif inputType=4{
								do coluna.%Set("dataType","number")
								do coluna.%Set("format","#,##0.###")
							}elseif inputType=12{
								do coluna.%Set("dataType","number")
								do coluna.%Set("format","#,##0.###")
							}elseif inputType=14{
								do coluna.%Set("dataType","datetime")
								do coluna.%Set("format","dd/MM/yyyy - HH:mm")
							}
							//do coluna.%Set("width","20%")
							if position'=primeiraAba do coluna.%Set("visible",0)
							do columns.%Push(coluna)
							;
							set campo 				= $piece(obj,"~",2)
							set relacao 			= $piece(obj,"~",4)
							set relacaoKey 			= $piece(obj,"~",5)
							set relationDisplay		= $piece(obj,"~",6)
							set hideRelationClassIDs		= $piece(obj,"~",15)
							;
							set field = ..recRelationship(classe, campo,relacao,relacaoKey,relationDisplay,hideRelationClassIDs)
							if select'="" set select = select_","
							set select=select_field
						}
						;; Fim dos Campos
					}
					;; Fim das Colunas
				}
				;; Fim das Linhas
			}
		}	
	}
	set where = ""
	set where2=""
	if byKey'=""{
		set sequ="",cont=0
		for {
			set sequ = $order(campos(0,sequ)) quit:sequ=""
			set campo = $piece(campos(0,sequ),"~",1)
			set cont=cont+1
			set chave = $piece(byKey,"~",cont)
			if where2'="" set where2 = where2_" and "
			set where2=where2_campo_" = '"_chave_"' "
		}
		if where'="" set where=where_" and "
		set where=where_" ("_where2_")"
	}elseif searchValue'=""{
		for cont=1:1:$length(select,","){
			set campo = $piece(select,",",cont)
			if $piece(campo,")",2)'=""{
				set campo = $piece(campo,")",1)_")"
			}
			if where2'="" set where2 = where2_" or "
			set where2=where2_"%upper("_campo_") like %upper('%"_searchValue_"%')"
		}
		if where'="" set where=where_" and "
		set where=where_" ("_where2_")"
	}
	if where'="" set where = "where "_where
	if wheregrid'="" {
		if where'="" {
			set where = where_" and "_wheregrid
		}else{
			set where = "where "_wheregrid
		}
	}
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from (select "_select_" from "_classe_" principal "_where_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSelect)
	;
	set totalCount=0
	set retornoArray = []
	if (sc) {
		set sc = rs.%Execute()
		set i = 0
		while(sc.%Next()){
			set i = i + 1
			set chaves	= {}
			set linha	= {}
			set totalCount=sc.%Get("totalCount")
			set chave=""
			set tcampo = ""
			for {
				set tcampo = $order(campos(tcampo)) quit:tcampo=""
				set sequ=""
				for {
					set sequ = $order(campos(tcampo,sequ)) quit:sequ=""
					;
					if tcampo=0{
						set campo 		= $piece(campos(tcampo,sequ),"~",1)
						set inputType 	= $piece(campos(tcampo,sequ),"~",2)
						set id			= sc.%Get(campo)
						;
						if inputType=1{
							if id'="" set id = $zdate(id,3)
						}
						if inputType=14{
							if id'="" set id = $zdate(id,3)_" - "_$ztime($piece(id,",",2))
						}
						;
						do linha.%Set(campo,id)
						set id=sc.%Get("Key_"_campo)
						;
						if inputType=1{
							if id'="" set id = $zdate(id,3)_"T00:00:00"
						}
						if inputType=14{
							if id'="" set id = $zdate(id,3)_"T"_$ztime($piece(id,",",2))
						}
						do chaves.%Set(campo,id)
						continue
					}
					set campo = $piece(campos(tcampo,sequ),"~",2)
					set relacao = $piece(campos(tcampo,sequ),"~",4)
					set relacaoKey = $piece(campos(tcampo,sequ),"~",5)
					set inputType = $piece(campos(tcampo,sequ),"~",14)
					set valor=sc.%Get(campo)
					if inputType=1{
						if valor'="" set valor = $zdate(valor,3)
					}
					if inputType=14{
						if valor'="" set valor = $zdate(valor,3)_" - "_$ztime($piece(valor,",",2))
					}
					do linha.%Set(campo,valor)
				}
			}
			do linha.%Set("PrimaryKey",chaves)
			do retornoArray.%Push(linha)
		}
	}	
	;
	if byKey'=""&&(retornoArray.%Size()=0){
		set linha={}
		do linha.%Set("id",byKey)
		do linha.%Set("text","("_byKey_") NÃO ENCONTRADO!")
		do retornoArray.%Push(linha)
	}
	set saida = {}
	do saida.%Set("data",retornoArray)
	do saida.%Set("columns",columns)
	do saida.%Set("totalCount",totalCount)
	write saida.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="montaGrid">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set formName		= $Get(%request.Data("form",1))
	Set formPai			= $Get(%request.Data("formPai",1))
	Set formType	 	= $Get(%request.Data("formType",1))
	Set primaryKey	 	= $Get(%request.Data("primaryKey",1))
	;
	kill chavePai
	set wheregrid = ""
	if formType="Grid"{
		set chave = $translate(..recChaveExtToInt(formPai,primaryKey),"""","")
		set primaryKey = $translate(primaryKey,"""{[]}","")
		set chaveCompleta = $translate(..recChaveCompleta(formPai),":","")
		set chaveImcompleta = 0
		for piece=1:1:$length(chaveCompleta,","){
			set campo = $piece(chaveCompleta,",",piece)
			set valor = $piece(chave,",",piece)
			if valor="" set chaveImcompleta=1 quit
			if wheregrid'="" set wheregrid = wheregrid_" and "
			set wheregrid = wheregrid_campo_" = '"_valor_"'"
			set chavePai(campo)=""
		}
		if chaveImcompleta=1{
			set saida = {}
			do saida.%Set("erro",1)
			write saida.%ToJSON()
			quit
		}
		
	}
	;
	if formName="" quit
	kill campos
	kill indices
	kill campos
	;
	set select=""
	set flag=0
	set status = 0
	;
	; Recupera Campos do FormulÃ¡rio
	do ..getFormCorpo(formName, .formulario)
	;
	set objForm = $get(^WWW120(YM,formName,1))
	set classe = $$$WWW120ClassUsedInForm(objForm)
	;
	set columns = []
	; Recupera Chaves PrimÃ¡rias
	set sequ=""
	for {
		set sequ = $order(^WWW002(YM,classe,sequ)) quit:sequ=""
		set objWWW002 = $get(^WWW002(YM,classe,sequ,1))
		;
		set campo 				= $$$WWW002PropertyName(objWWW002)
		set relacao 			= $$$WWW002RelationClass(objWWW002)
		set relacaoKey 			= $$$WWW002RelationalPrimaryKeys(objWWW002)
		set relationDisplay		= $$$WWW002RelationalDisplayItems(objWWW002)
		set inputType			= $$$WWW002InputType(objWWW002)
		set hideRelationClassIDs = ""
		;
		set objWWW121 	= $get(^WWW121(YM,formName,sequ,1))
		;
		; Busca RelaÃ§Ã£o do Cadastro do formulÃ¡rio
		if $$$WWW121RelationClass(objWWW121)'="" {
			set relacao = $$$WWW121RelationClass(objWWW121)
			set hideRelationClassIDs = $$$WWW121DoNotShowPrimaryKey(objWWW121)
		}
		if $$$WWW121RelationPrimaryKeys(objWWW121)'="" set relacaoKey = $$$WWW121RelationPrimaryKeys(objWWW121)
		if $$$WWW121RelationalDisplayItems(objWWW121)'="" set relationDisplay = $$$WWW121RelationalDisplayItems(objWWW121)
		;
		if select'="" set select = select_","
		set select=select_campo_" Key_"_campo
		;
		set field = ..recRelationship(classe, campo,relacao,relacaoKey,relationDisplay,hideRelationClassIDs)
		;
		if select'="" set select = select_","
		set select=select_field
		;
		set id = campo
		set caption = ..TranslateIndice(YM,formName,sequ)
		set indices(sequ)=id
		set objForm = $get(^WWW121(YM,formName,sequ,1))
		set FixedInput = $$$WWW121FixedInputForHiddenField(objForm)
		if FixedInput=""&&('$data(chavePai(id))){
			set coluna = {}
			do coluna.%Set("dataField",id)
			do coluna.%Set("caption",caption)
			if inputType=1{
				do coluna.%Set("dataType","date")
				do coluna.%Set("format","dd/MM/yyyy")
			}elseif inputType=4{
				do coluna.%Set("dataType","number")
			}elseif inputType=14{
				do coluna.%Set("dataType","datetime")
				do coluna.%Set("format","dd/MM/yyyy - HH:mm")
			}
			do columns.%Push(coluna)
		}
		set campos(0,sequ)=id_"~"_inputType
	}
	kill camposFormulario
	;
	;; Inicio da Aba
	set primeiraAba = $order(formulario(""))
	set position=""
	for{
		set position = $order(formulario(position)) quit:position=""
		set aba = ""
		for {
			set aba = $order(formulario(position,aba)) quit:aba=""
			;
			if aba="oculto" continue
			;; Inicio do Grupo
			set group = ""
			for {
				set group = $order(formulario(position,aba,group)) quit:group=""
				;; Inicio da Linha
				set row = ""
				for {
					set row = $order(formulario(position,aba,group,row)) quit:row=""
					;; Inicio da Coluna
					set col = ""
					for {
						set col = $order(formulario(position,aba,group,row,col)) quit:col=""
						;; Inicio dos Campos
						set campo = ""
						for {
							set campo = $order(formulario(position,aba,group,row,col,campo)) quit:campo=""
							set obj 					= formulario(position,aba,group,row,col,campo)
							set valor 					= $piece(obj,"~",1)
							set field 					= $piece(obj,"~",2)
							set campo 					= $piece(obj,"~",2)
							set sequ 					= $piece(obj,"~",12)	
							set fieldSize				= $piece(obj,"~",13)
							set inputType				= $piece(obj,"~",14)
							;
							set relacao 				= $piece(obj,"~",4)
							set relacaoKey 				= $piece(obj,"~",5)
							set relationDisplay			= $piece(obj,"~",6)
							set dataInputType	 		= $piece(obj,"~",7)
							set hideRelationClassIDs	= $piece(obj,"~",15)
							set sortTheRelation 		= $piece(obj,"~",16)
							set displayIfSortKeyEqual	= $piece(obj,"~",17)
							;
							if $extract(inputType,1,2)="dx" continue
							if obj="" continue
							if field="" set field = sequ
							;
							if $data(camposFormulario(field)) continue
							set camposFormulario(field)=""
							set campos(1,sequ)=obj
							;
							set coluna = {}
							do coluna.%Set("dataField",field)
							do coluna.%Set("caption",valor)
							if relacao'="" {
								set lookup = {}
								if campo="" set campo = valor
								do lookup.%Set("dataSource","getDataSourceLookup('"_relacao_"','"_relacaoKey_"','"_relationDisplay_"','"_hideRelationClassIDs_"','"_sortTheRelation_"','"_displayIfSortKeyEqual_"','id')")
								do lookup.%Set("valueExpr","id")
								do lookup.%Set("displayExpr","text")
								do coluna.%Set("lookup",lookup)						
							}elseif inputType=1{
								do coluna.%Set("dataType","date")
								do coluna.%Set("format","dd/MM/yyyy")
							}elseif inputType=4{
								do coluna.%Set("dataType","number")
								do coluna.%Set("format","#,##0.###")
							}elseif inputType=12{
								do coluna.%Set("dataType","number")
								do coluna.%Set("format","#,##0.###")
							}elseif inputType=14{
								do coluna.%Set("dataType","datetime")
								do coluna.%Set("format","dd/MM/yyyy - HH:mm")
							}
							if position'=primeiraAba do coluna.%Set("visible",0)
							do columns.%Push(coluna)
							;
							set field = campo ;..recRelationship(classe, campo,relacao,relacaoKey,relationDisplay,hideRelationClassIDs)
							if select'="" set select = select_","
							set select=select_field
						}
						;; Fim dos Campos
					}
					;; Fim das Colunas
				}
				;; Fim das Linhas
			}
		}	
	}
	if wheregrid'="" set where = "where "_wheregrid
	;
	set meuSelect="select "_select_" from "_classe_" principal "_where
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSelect)
	;
	set retornoArray = []
	if (sc) {
		set sc = rs.%Execute()
		set i = 0
		while(sc.%Next()){
			set i = i + 1
			set chaves	= {}
			set linha	= {}
			set chave=""
			set tcampo = ""
			for {
				set tcampo = $order(campos(tcampo)) quit:tcampo=""
				set sequ=""
				for {
					set sequ = $order(campos(tcampo,sequ)) quit:sequ=""
					;
					if tcampo=0{
						set campo 		= $piece(campos(tcampo,sequ),"~",1)
						set inputType 	= $piece(campos(tcampo,sequ),"~",2)
						set id			= sc.%Get(campo)
						;
						if inputType=1{
							if id'="" set id = $zdate(id,3)
						}
						if inputType=14{
							if id'="" set id = $zdate(id,3)_" - "_$ztime($piece(id,",",2))
						}
						;
						do linha.%Set(campo,id)
						set id=sc.%Get("Key_"_campo)
						;
						if inputType=1{
							if id'="" set id = $zdate(id,3)_"T00:00:00"
						}
						if inputType=14{
							if id'="" set id = $zdate(id,3)_"T"_$ztime($piece(id,",",2))
						}
						do chaves.%Set(campo,id)
						continue
					}
					set campo = $piece(campos(tcampo,sequ),"~",2)
					set relacao = $piece(campos(tcampo,sequ),"~",4)
					set relacaoKey = $piece(campos(tcampo,sequ),"~",5)
					set inputType = $piece(campos(tcampo,sequ),"~",14)
					set valor=sc.%Get(campo)
					if inputType=1{
						if valor'="" set valor = $zdate(valor,3)
					}
					if inputType=14{
						if valor'="" set valor = $zdate(valor,3)_" - "_$ztime($piece(valor,",",2))
					}
					do linha.%Set(campo,valor)
				}
			}
			do linha.%Set("PrimaryKey",chaves)
			do retornoArray.%Push(linha)
		}
	}	
	;
	set saida = {}
	do saida.%Set("data",retornoArray)
	do saida.%Set("columns",columns)
	write $replace($replace(saida.%ToJSON(),"""'",""),"'""","")
	quit
]]></Implementation>
</Method>

<Method name="recRelationship">
<ClassMethod>1</ClassMethod>
<FormalSpec>class,campo,relacao,relacaoKey,relationDisplay,hideRelationClassIDs</FormalSpec>
<Implementation><![CDATA[
	set recSelect = campo
	if relacao'=""{
		if relationDisplay=""{
			set relationDisplay = $order(^WWW003(YM,relacao,""))
		}
		if relationDisplay'="" set objWWW003 = $piece($get(^WWW003(YM,relacao,relationDisplay,1)),";",1)
		set campo003 = $$$WWW003PropertyName(objWWW003)
		if campo003="" quit recSelect
		set chave = ""
		set relacaoKey = $replace(relacaoKey,"""","_")
		if relacaoKey'=""{
			for ind=1:1:$length(relacaoKey,","){
				set key = $piece(relacaoKey,",",ind)
				if key["_"{
					set key = $replace(key,"_","")
				}else{
					if ..getVarAmbiente(YUSER, class, "defaultVariableInput", key)'="" {
						set key=..getVarAmbiente(YUSER, class, "defaultVariableInput", key)
					}else{
						if key'="" set key = $get(@(key))
					}
					
				}
				if chave'="" set chave = chave_","
				set chave = chave_key
			}
		}
		set recSelect = "$$GetColumn^ModeloSQL('"_relacao_"','"_chave_"',"_campo_",'"_relationDisplay_"','"_hideRelationClassIDs_"') "_campo
	}
	quit recSelect
]]></Implementation>
</Method>

<Method name="getFormCorpoDados">
<ClassMethod>1</ClassMethod>
<FormalSpec>formName="",chave="",chaveDigitada=""</FormalSpec>
<Implementation><![CDATA[
	set jSON=0
	if formName=""{
		set jSON=1
		Set formName		= $Get(%request.Data("form",1))
		Set chave 			= $Get(%request.Data("chave",1))
	}
	set chave = ..recChaveExtToInt(formName,chave)
	set linha={}
	set linha = ..getFormDefaults(formName,"",YM,YUSER)
	;
	if formName'="",chave'="" {
		set objForm = $get(^WWW120(YM,formName,1))
		set classe = $$$WWW120ClassUsedInForm(objForm)
		;		
		set obj = $get(@("^"_classe_"(YM,"_chave_",1)"))
		set sequ=""
		for {
			set sequ = $order(^WWW003(YM,classe,sequ)) quit:sequ=""
			set obj003 		= $get(^WWW003(YM,classe,sequ,1))
			set descCampo 	= $$$WWW003PropertyName(obj003)
			;
			set sequForm=""
			for {
				set sequForm=$order(^WWW122(YM,formName,sequForm)) quit:sequForm=""
				set obj122 		= $get(^WWW122(YM,formName,sequForm,1))
				if $$$WWW122SequenceNumber(obj122)=sequ quit
			}
			;
			set obj122D="",obj122D=""
			if sequForm'=""{
				set obj122 		= $get(^WWW122(YM,formName,sequForm,1))
				set obj122D 	= $get(^WWW122D(YM,formName,sequForm,0,1))
			}
			set inputType	= $$$WWW122DInputType(obj122D)
			if inputType="" set inputType	= $$$WWW122InputType(obj122)
			if inputType="" set inputType	= $$$WWW003InputType(obj003)
			;
			set dataInputType	= $$$WWW122DDataInputType(obj122D)
			if dataInputType="" set dataInputType	= $$$WWW122DataInputType(obj122)
			;			
			set valor 		= $piece(obj,"~",sequ)
			if inputType=1{
				if valor'="" set valor = $zdate(valor,3)_"T00:00:00"
			}
			if dataInputType=6&&(valor'=""){
				set valorG = valor
				set valor = []
				for i=1:1:$length(valorG,";"){
					do valor.%Push($piece(valorG,";",i))
				}
			}
			if inputType=14{
				if valor'="" set valor = $zdate(valor,3)_"T"_$ztime($piece(valor,",",2))
			}
			do linha.%Set(descCampo,valor)
		}
	}else{
		set chave=""
	}
	set retorno = {}
	do retorno.%Set("formData",linha)
	if jSON=1{
		write $replace($replace(retorno.%ToJSON(),"""'",""),"'""","")
		quit
	}
	quit $replace($replace(retorno.%ToJSON(),"""'",""),"'""","")
]]></Implementation>
</Method>

<Method name="getClassData">
<ClassMethod>1</ClassMethod>
<FormalSpec>classe="",chave=""</FormalSpec>
<Implementation><![CDATA[
	set jSON=0
	if classe=""{
		set jSON=1
		Set classe 		= $Get(%request.Data("classe",1))
		Set chave 		= $Get(%request.Data("chave",1))
	}
	set linha={}
	if classe'="",chave'="" {
		set obj = $get(@("^"_classe_"(YM,"""_chave_""",1)"))
		set sequ=""
		for {
			set sequ = $order(^WWW003(YM,classe,sequ)) quit:sequ=""
			set obj003 		= $get(^WWW003(YM,classe,sequ,1))
			set descCampo 	= $$$WWW003PropertyName(obj003)
			set valor 		= $piece(obj,"~",sequ)
			do linha.%Set(descCampo,valor)
		}
	}
	if jSON=1{
		write linha.%ToJSON()
		quit
	}
	quit linha.%ToJSON()
]]></Implementation>
</Method>

<Method name="SalvaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set formName 	= $Get(%request.Data("formName",1))
	Set chave	 	= $Get(%request.Data("chave",1))
	set dados	 	= $get(%request.Data("dados",1))
	set objForm	 	= $get(^WWW120(YM,formName,1))
	set classe	 	= $$$WWW120ClassUsedInForm(objForm)
	set executeOnBeforeSaveData	 = $$$WWW120ExecuteOnBeforeSaveData(objForm)
	;
	set chaveCompleta = ..recChaveCompleta(formName)
	;
	set chave = $translate(..recChaveExtToInt(formName,chave),"""","")
	;
	set retornoArray = {}
	set erroSave = ""
	set strStatus = 0
	try {
		set gerarChave = 0
		set novaChave = ""
		for idKey=1:1:$length(chaveCompleta,","){
			set campo = $piece(chaveCompleta,",",idKey)
			set valor = $piece(chave,",",idKey)
			if valor="+" set valor = ""
			if valor="null" set valor = ""
			;
			set objFormKey = $get(^WWW121(YM,formName,idKey,1))
			set DefaultVariable = $$$WWW121DefaultVariableInput(objFormKey)
			set automaticSequenceCounter = $$$WWW121AutomaticSequenceCounter(objFormKey)
			;
			set objWWW002 = $get(^WWW002(YM,classe,idKey,1))
			set inputType = $$$WWW002InputType(objWWW002)
			;
			if inputType=9 set automaticSequenceCounter = 1
			;
			if valor = ""{
				if DefaultVariable["@"{
					set DefaultVariable = $replace(DefaultVariable,"@","")
					set @("valor = "_DefaultVariable)
				}else{
					set valor = DefaultVariable
				}
			}
			if valor = ""{
				if automaticSequenceCounter'=1 {
					set nomeCampo = ..TranslateIndice(YM,formName, idKey)
					set erroSave = "Campo """_nomeCampo_""" obrigatÃ³rio! " 
				}else{
					set gerarChave = 1
				}
				quit
			}
			if novaChave '= "" set novaChave = novaChave_","
			set novaChave = novaChave_""""_valor_""""
		}
		if erroSave{
			quit
		}
		;
		set Q = 0
		set YFELD = ..recDadosExtToInt(formName,novaChave,dados,YM,YUSER)
		set YKEY = $replace(novaChave,"""","")
		if executeOnBeforeSaveData'=""{
			;Xecute executeOnBeforeSaveData
		}
		;
		if Q=$$$QSave{
			if gerarChave{
				if novaChave'=""{
					set novaChave = novaChave_","_""""_$$^WWWNEXT1(classe,$replace(novaChave,"""",""),$length(novaChave,",")+1)_""""
				}else{
					set novaChave = """"_$$^WWWNEXT(classe)_""""
				}
			}
			;
			set novaChave = $replace(novaChave,"""","")
			set strStatus = $$$Save(classe,novaChave,YFELD,$$$YES)
		}
	}
	catch(erro){
		do retornoArray.%Set("retorno","Erro no armazenamento: "_erro.Name _ " em " _ erro.Location)
		do retornoArray.%Set("type","error")
	}
	if strStatus=$$$OK{
		do retornoArray.%Set("retorno","Dados salvos com sucesso!")
		do retornoArray.%Set("type","success")
		set chaveFormatada = ..recChaveIntToExt(formName, novaChave)
		do retornoArray.%Set("key",chaveFormatada)
	}else{
		if erroSave'=""{
			do retornoArray.%Set("retorno",erroSave)
			do retornoArray.%Set("type","error")
		}elseif $get(erro)=""{
			do retornoArray.%Set("retorno","Erro no armazenamento dos dados! ")
			do retornoArray.%Set("type","error")
			
		}
	}
	write retornoArray.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="ApagaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set formName = $Get(%request.Data("formName",1))
	Set chave	 = $Get(%request.Data("chave",1))
	set objForm	 = $get(^WWW120(YM,formName,1))
	set classe	 = $$$WWW120ClassUsedInForm(objForm)
	set retornoArray = {}
	set strStatus = 0
	set chave = ..recChaveExtToInt(formName,chave)
	try {
		;
		if chave=""{
			do retornoArray.%Set("retorno","CÃ³digo nÃ£o foi informado!")
			do retornoArray.%Set("type","error")
			set strStatus = 2
			quit
		}
		set obj = $get(@("^"_classe_"(YM,"_chave_",1)"))
		if obj=""{
			do retornoArray.%Set("retorno","CÃ³digo nÃ£o localizado!")
			do retornoArray.%Set("type","error")
			set strStatus = 2
			quit
		}
		set chaveFormatada = $replace(chave,"""","")
		set strStatus = $$$Kill(classe,chave)
	}
	catch(erro){
		do retornoArray.%Set("retorno","Erro na exclusÃ£o do registro: "_erro.Name _ " em " _ erro.Location)
		do retornoArray.%Set("type","error")
	}
	if strStatus=$$$OK{
		do retornoArray.%Set("retorno","Registro removido com sucesso!")
		do retornoArray.%Set("type","success")
	}elseif strStatus'=2{
		if $get(erro)=""{
			do retornoArray.%Set("retorno","Erro na exclusÃ£o do registro! ")
			do retornoArray.%Set("type","error")
			
		}
	}
	write retornoArray.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recPiece">
<ClassMethod>1</ClassMethod>
<FormalSpec>classe,campo</FormalSpec>
<Implementation><![CDATA[
	new (classe, campo)
	set meuSQL = "select TOP 1 PropertyNumber from WWW003 WHERE Class = '"_classe_"' and PropertyName = '"_campo_"'"
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSQL)
	set sc = rs.%Execute()
	set piece = ""
	while(sc.%Next()){
		set piece = sc.%Get("PropertyNumber")
	}
	quit piece
]]></Implementation>
</Method>

<Method name="recDataType">
<ClassMethod>1</ClassMethod>
<FormalSpec>YM,form,piece</FormalSpec>
<Implementation><![CDATA[
	new (YM, form, piece)
	set objForm	 = $get(^WWW120(YM,form,1))
	set classe	 = $$$WWW120ClassUsedInForm(objForm)
	;
	set meuSQL = "select TOP 1 InputType from WWW122 WHERE FormName = '"_form_"' and DataItemNumber = '"_piece_"'"
	set rs = ##class(%SQL.Statement).%New()
	set sc = rs.%Prepare(meuSQL)
	set sc = rs.%Execute()
	set DataType = ""
	while(sc.%Next()){
		set DataType = sc.%Get("InputType")
	}
	if DataType'=15&&(DataType'=14) {
		set obj = $get(^WWW003(YM,classe,piece,1))
		set DataType = $$$WWW003InputType(obj)
	}
	quit DataType
]]></Implementation>
</Method>

<Method name="Translate">
<ClassMethod>1</ClassMethod>
<FormalSpec>YM,classe,piece</FormalSpec>
<Implementation><![CDATA[
	new (YM,classe, piece)
	set obj003 = $get(^WWW003(YM,classe,piece,1))
	set valor = $$$WWW003PropertyDescription(obj003)
	;
	set obj0031 = $get(^WWW0031(YM,classe,piece,"PT",1))
	if $$$WWW0031PropertyDescription(obj0031)'="" set valor = $$$WWW0031PropertyDescription(obj0031)
	quit valor
]]></Implementation>
</Method>

<Method name="TranslateIndice">
<ClassMethod>1</ClassMethod>
<FormalSpec>YM,formName,piece</FormalSpec>
<Implementation><![CDATA[
	new (YM,formName, piece, YM)
	set objForm = $get(^WWW120(YM,formName,1))
	set classe = $$$WWW120ClassUsedInForm(objForm)
	if classe'=""{
		set obj002 = $get(^WWW002(YM,classe,piece,1))
		set valor = $$$WWW002PropertyDescription(obj002)
		;
		set obj0021 = $get(^WWW0021(YM,classe,piece,"PT",1))
		if $$$WWW0021PropertyDescription(obj0021)'="" set valor = $$$WWW0021PropertyDescription(obj0021)
	}
	;
	set obj121D = $get(^WWW121D(YM,formName,piece,YM,1))
	if $$$WWW121DFieldDescription(obj121D)'="" set valor = $$$WWW121DFieldDescription(obj121D)
	quit valor
]]></Implementation>
</Method>

<Method name="navegar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	/*Parametro pOpcao 	1 -- Primeiro Registro
						2 -- Registro Anteriro
						3 -- Proximo Registro
						4 -- Ultimo Registro*/
	Set formName	 = $Get(%request.Data("formName",1))
	Set chave		 = $Get(%request.Data("numeroAtual",1))
	set pOpcao		 = $get(%request.Data("pOpcao",1))
	set pCampo		 = $get(%request.Data("pCampo",1))
	set objForm	 = $get(^WWW120(YM,formName,1))
	set classe	 = $$$WWW120ClassUsedInForm(objForm)
	;
	kill ^zzsilmar
	set ^zzsilmar($now()) = 1
	set chaveOriginal = $translate(chave,"""{}","")
	set chaveCompleta = ..recChaveCompleta(formName)
	;
	set objForm = $get(^WWW120(YM,formName,1))
	set classe = $$$WWW120ClassUsedInForm(objForm)
	;
	set chave=""
	set flchave=0,nivel=0
	for piece=1:1:$length(chaveCompleta,","){
		set obj002 		= $get(^WWW002(YM,classe,piece,1))
		set campo 		= $$$WWW002PropertyName(obj002)
		set inputType 	= $$$WWW002InputType(obj002)
		
		set regi = $piece(chaveCompleta,",",piece)
		set campo = $piece(regi,":",1)
		;
		set regi = $piece(chaveOriginal,",",piece)
		set valor = $piece(regi,":",2)
		if valor="null" set valor = ""
		if valor'=""&&((inputType=1)||(inputType=12)){
			set valor = $piece(valor,"T",1)
			set valor = $zdateh(valor,3)
		}
		;
		if pCampo=campo {
			if pOpcao="1"||(pOpcao="4") set valor = ""
			if pOpcao="2",valor="" set pOpcao = "4"
			if pOpcao="3",valor="" set pOpcao = "1"
			if chave'="" set chave = chave_","
			set chave = chave_""""_valor_""""
			set flchave=1
			continue
		}
		if flchave=0{
			if chave'="" set chave = chave_","
			set chave = chave_""""_valor_""""
			if valor="" {
				if pOpcao="2" set pOpcao = "1"
				if pOpcao="3" set pOpcao = "4"
				set flchave = 1,pCampo=""
			}
		}else{
			set nivel = nivel + 1
		}
		
	}
	set retorno 	= ""
	if (pOpcao = 1) { 
		set retorno = $order(@("^"_classe_"(YM,"_chave_")")) 
		if retorno'=""{
			set preChave = $piece(chave,",",1,$length(chave,",")-1)
			if preChave'="" set preChave = preChave_","
			set chave = preChave_""""_retorno_""""
		}
		for contador=0:1:nivel{
			set retorno = $order(@("^"_classe_"(YM,"_chave_","""")")) 
			if retorno'=""{
				set preChave = chave
				set chave = preChave_","""_retorno_""""
			}
		}
		
	}
	if (pOpcao = 2) {
		set retorno = $order(@("^"_classe_"(YM,"_chave_")"),-1) 
		if retorno'=""{
			set preChave = $piece(chave,",",1,$length(chave,",")-1)
			if preChave'="" set preChave = preChave_","
			set chave = preChave_""""_retorno_""""
		}
		for contador=0:1:nivel{
			set retorno = $order(@("^"_classe_"(YM,"_chave_","""")")) 
			if retorno'=""{
				set preChave = chave
				set chave = preChave_","""_retorno_""""
			}
		}
	}
	if (pOpcao = 3) { 
		set retorno = $order(@("^"_classe_"(YM,"_chave_")")) 
		if retorno'=""{
			set preChave = $piece(chave,",",1,$length(chave,",")-1)
			if preChave'="" set preChave = preChave_","
			set chave = preChave_""""_retorno_""""
		}
		for contador=0:1:nivel{
			set retorno = $order(@("^"_classe_"(YM,"_chave_","""")")) 
			if retorno'=""{
				set preChave = chave
				set chave = preChave_","""_retorno_""""
			}
		}
	}
	if (pOpcao = 4) { 
		set retorno = $order(@("^"_classe_"(YM,"_chave_")"),-1) 
		if retorno'=""{
			set preChave = $piece(chave,",",1,$length(chave,",")-1)
			if preChave'="" set preChave = preChave_","
			set chave = preChave_""""_retorno_""""
		}
		for contador=0:1:nivel{
			set retorno = $order(@("^"_classe_"(YM,"_chave_","""")"),-1) 
			if retorno'=""{
				set preChave = chave
				set chave = preChave_","""_retorno_""""
			}
		}
	}
	set retornoArray = {}
	;
	set chave = $replace(chave,"""","")
	set chave = ..recChaveIntToExt(formName,chave)
	do retornoArray.%Set("key",chave)
	write retornoArray.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recChaveExtToInt">
<ClassMethod>1</ClassMethod>
<FormalSpec>formName,chave</FormalSpec>
<Implementation><![CDATA[
	new (formName, chave,YM)
	set chaveFormatada = ""
	if chave'=""{
		set chaveRetorno = [].%FromJSON(chave)
		set iterator = chaveRetorno.%GetIterator()
		while iterator.%GetNext(.chaveI,.valorI){
			set chaveArray(chaveI)=valorI
		}
		set chaveFormatada = ""
		if formName'="",chave'="" {
			set objForm = $get(^WWW120(YM,formName,1))
			set classe = $$$WWW120ClassUsedInForm(objForm)
			;		
			set chaveFormatada = ""
			set erro=0
			set piece = ""
			for {
				set piece = $order(^WWW002(YM,classe,piece)) quit:piece=""
				set obj002 		= $get(^WWW002(YM,classe,piece,1))
				set campo 		= $$$WWW002PropertyName(obj002)
				set inputType 	= $$$WWW002InputType(obj002)
				set valor 		= $get(chaveArray(campo))
				if inputType=1{
					set data = $piece(valor,"T",1)
					set valor = $zdateh(data,3,,,,,,,"")
				}elseif inputType=14{
					set data = $piece(valor,"T",1)
					set hora = $piece(valor,"T",2)
					set data = $zdateh(data,3,,,,,,,"")
					set hora = $ztimeh(hora,,"")
					if data'=""{
						set valor = data
						if hora'="" set valor = valor_","_hora
					}
				}
				if valor="" set erro=1 quit
				set valor 		= """"_valor_""""
				set:chaveFormatada'="" chaveFormatada = chaveFormatada_","
				set chaveFormatada = chaveFormatada_valor
			}
		}
	}
	quit chaveFormatada
]]></Implementation>
</Method>

<Method name="recChaveCompleta">
<ClassMethod>1</ClassMethod>
<FormalSpec>formName</FormalSpec>
<Implementation><![CDATA[
	set ret = ..recChaveIntToExt(formName)
	set transf = $translate(ret.%ToJSON(),"""{}","")
	quit transf
]]></Implementation>
</Method>

<Method name="recChaveIntToExt">
<ClassMethod>1</ClassMethod>
<FormalSpec>formName,chave=""</FormalSpec>
<Implementation><![CDATA[
	new (formName, chave,YM)
	set chaveFormatada = {}
	if formName'="" {
		set objForm = $get(^WWW120(YM,formName,1))
		set classe = $$$WWW120ClassUsedInForm(objForm)
		;		
		set erro=0
		set piece = ""
		for {
			set piece = $order(^WWW002(YM,classe,piece)) quit:piece=""
			set obj002		= $get(^WWW002(YM,classe,piece,1))
			set campo		= $$$WWW002PropertyName(obj002)
			set inputType 	= $$$WWW002InputType(obj002)
			set valor 		= $piece(chave,",",piece)
			;
			if inputType=1{
				if valor'="" set valor = $zdate(valor,3)_"T00:00:00"
			}elseif inputType=14{
				if valor'="" set valor = $zdate(valor,3)_"T"_$ztime($piece(valor,",",2))
			}
			do chaveFormatada.%Set(campo,valor)
		}
	}
	quit chaveFormatada
]]></Implementation>
</Method>

<Method name="recDadosExtToInt">
<ClassMethod>1</ClassMethod>
<FormalSpec>formName,chave,dados,YM,YUSER</FormalSpec>
<Implementation><![CDATA[
	new (formName,chave,dados,YM,YUSER)
	set objForm	 	= $get(^WWW120(YM,formName,1))
	set classe	 	= $$$WWW120ClassUsedInForm(objForm)
	kill array
	set retorno = [].%FromJSON(dados)
	set iterator = retorno.%GetIterator()
	while iterator.%GetNext(.chaveI,.valorI){
		set array(chaveI)=valorI
	}
	set linha = ..getFormDefaults(formName,.array,YM,YUSER)
	set obj = ""
	if chave'="" set obj = $get(@("^"_classe_"(YM,"_chave_",1)"))
	set campo = ""
	for {
		set campo = $order(array(campo)) quit:campo=""
		set valor = array(campo)
		set piece 		= ..recPiece(classe,campo)
		if piece = "" continue
		set dataType 	= ..recDataType(YM,formName,piece)
		if dataType=1{
			set data = $piece(valor,"T",1)
			set valor = $zdateh(data,3,,,,,,,"")
		}elseif dataType=14{
			set data = $piece(valor,"T",1)
			set hora = $piece(valor,"T",2)
			set data = $zdateh(data,3,,,,,,,"")
			set hora = $ztimeh(hora,,"")
			if data'=""{
				set valor = data
				if hora'="" set valor = valor_","_hora
			}
		}
		if piece="" continue
		set $piece(obj,"~",piece) = valor
	}
	quit obj
]]></Implementation>
</Method>

<Method name="getFilterExtToInt">
<ClassMethod>1</ClassMethod>
<FormalSpec>filter</FormalSpec>
<Implementation><![CDATA[
	new (filter)
	set wherefilter = ""
	set filter = $translate(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}	
	quit wherefilter
]]></Implementation>
</Method>

<Method name="clearVarAmbiente">
<ClassMethod>1</ClassMethod>
<FormalSpec>YUSER,classe</FormalSpec>
<Implementation><![CDATA[
	new (YUSER, classe)
	kill ^zzCSPFORM(YUSER, classe)
]]></Implementation>
</Method>

<Method name="setVarAmbiente">
<ClassMethod>1</ClassMethod>
<FormalSpec>YUSER,classe,tipo,variavel,valor</FormalSpec>
<Implementation><![CDATA[
	new (YUSER, classe, tipo, variavel, valor)
	set ^zzCSPFORM(YUSER, classe, tipo, variavel, 1) = valor
]]></Implementation>
</Method>

<Method name="getVarAmbiente">
<ClassMethod>1</ClassMethod>
<FormalSpec>YUSER,classe,tipo,variavel</FormalSpec>
<Implementation><![CDATA[
	new (YUSER, classe, tipo, variavel)
	quit $get(^zzCSPFORM(YUSER, classe,tipo,variavel,1))
]]></Implementation>
</Method>

<Method name="getFormDefaults">
<ClassMethod>1</ClassMethod>
<FormalSpec>formName,array="",YM,YUSER</FormalSpec>
<Implementation><![CDATA[
	new (formName,array,YM,YUSER)
	set linha = {}
	if formName'=""{
		set objForm = $get(^WWW120(YM,formName,1))
		set classe = $$$WWW120ClassUsedInForm(objForm)
		set campo = ""
		for {
			set campo = $order(^zzCSPFORM(YUSER,classe,"defaultVariableInput",campo)) quit:campo=""
			set obj = ^zzCSPFORM(YUSER,classe,"defaultVariableInput",campo,1)
			set valor = $piece(obj,"~",1)
			do linha.%Set(campo,valor)
			set:'$data(array(campo)) array(campo)=valor
		}
	}
	quit linha
]]></Implementation>
</Method>

<Method name="getMenu">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	do ..prepararMenu(YBED)
	set arrMenuData = []

	set objUser = $get(^WWW013(YM,YBED,1))
	set idApplicationName = $$$WWW013MegaMenuApplicationName(objUser)
	if idApplicationName="" set idApplicationName = "VARMegaIPP"
	set resumo = 0
	set idFirstLevel = ""
	for {
		
		set idFirstLevel=$order(^zHGD(idApplicationName,idFirstLevel))
		quit:idFirstLevel=""
		if $increment(cont)>11 set resumo = 1
		set objMenu = $get(^zHGD(idApplicationName,idFirstLevel))
		set strMenuDescription = $piece(objMenu,"~",1)
		continue:strMenuDescription=""
		
		set menuFolderIcon = $piece(objMenu,"~",3)
		set:(menuFolderIcon="") menuFolderIcon = "fa fa-folder-o"
		
		set menus = {}
		
		do menus.%Set("id",idFirstLevel)
		do:resumo=0 menus.%Set("name",strMenuDescription)
		do menus.%Set("icon",menuFolderIcon)
		
		set arrFolder = []
					
		set idSecondLevel = ""
		
		for {
		
			set idSecondLevel=$order(^zHGD(idApplicationName,idFirstLevel,idSecondLevel))
			quit:idSecondLevel=""
							
			set subFolderItems = {}	
			
			set objSubFolder = $get(^zHGD(idApplicationName,idFirstLevel,idSecondLevel))
			set strSubFolderDescription = $piece(objSubFolder,"~",1)
			set subFolderIcon = $piece(objSubFolder,"~",3)
			set:(subFolderIcon="") subFolderIcon = "fa fa-folder-o"
			
			do subFolderItems.%Set("id",idSecondLevel)
			do subFolderItems.%Set("name",strSubFolderDescription)
			do subFolderItems.%Set("icon",subFolderIcon)
			
			set arrMenuItem = []
			
			set idMenuItem = ""
			
			for {
				
				set idMenuItem=$order(^zHGD(idApplicationName,idFirstLevel,idSecondLevel,idMenuItem))
				quit:idMenuItem=""
				
				set menuItem = {}
				set objMenuItem = $get(^zHGD(idApplicationName,idFirstLevel,idSecondLevel,idMenuItem))
				
				set strMenuItemDescription = $piece(objMenuItem,"~",1)
				set formName = $piece(objMenuItem,"~",2)
				set menuIcon = $piece(objMenuItem,"~",3)
				
				set:(menuIcon="") menuIcon = "fa fa-wpforms"
				
				do menuItem.%Set("id",idMenuItem)
				do menuItem.%Set("name",strMenuItemDescription)
				do menuItem.%Set("icon",menuIcon)
				do menuItem.%Set("formName",formName)
				do menuItem.%Set("titleForm",strMenuDescription_" > "_strSubFolderDescription_" > "_strMenuItemDescription)
				do arrMenuItem.%Push(menuItem)
				
			}
			
			do subFolderItems.%Set("items",arrMenuItem)
			do arrFolder.%Push(subFolderItems)
		}		
		do menus.%Set("items",arrFolder) 
		do arrMenuData.%Push(menus)
	}	
	write arrMenuData.%ToJSON()
]]></Implementation>
</Method>

<Method name="prepararMenu">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidUser</FormalSpec>
<Implementation><![CDATA[
	set objUser = $get(^WWW013(YM,pidUser,1))
	set strApplicationName = $$$WWW013MegaMenuApplicationName(objUser)
	if strApplicationName="" set strApplicationName = "VARMegaIPP"
	if (objUser '= "")  {
		
		set idMenu = ""
		
		if ($data(^WWW004(YM,strApplicationName)) '= 0) {
			
			for {
				
				set idMenu = $order(^WWW004(YM,strApplicationName,idMenu))
				quit:idMenu=""
				
				set objMenu = $$Get^WWW004(strApplicationName,idMenu)
				
				if ($$^WWWACCESS($$$WWW004UserAccess(objMenu),$$$WWW004Module1(objMenu),pidUser) = $$$OK) {
										
					if (idMenu'="") {
						
						set strMenuDesc = $$GetMenuDescription^ModeloSQL(strApplicationName,idMenu) 
						
						if (strMenuDesc'="") {
							
							set strFormName = $$GetFormName^ModeloSQL(strApplicationName,idMenu)
							set strMenuIcon = $$GetMenuIcon^ModeloSQL(strApplicationName,idMenu)
							
							if ($piece(idMenu,".",2)="") { 
								set ^zHGD(strApplicationName,idMenu) = strMenuDesc_"~"_strFormName_"~"_strMenuIcon
								
							} elseif (($piece(idMenu,".",2)'="") && ($piece(idMenu,".",3)="")) {
								set primeiroNivel = $piece(idMenu,".",1)_"."
								set ^zHGD(strApplicationName,primeiroNivel,idMenu) = strMenuDesc_"~"_strFormName_"~"_strMenuIcon
								
							} elseif (($piece(idMenu,".",2)'="") && ($piece(idMenu,".",3)'="")) {
								set primeiroNivel = $piece(idMenu,".",1)_"."
								set segundoNivel  = $piece(idMenu,".",2)_"."
								set ^zHGD(strApplicationName,primeiroNivel,primeiroNivel_segundoNivel,idMenu) = strMenuDesc_"~"_strFormName_"~"_strMenuIcon
							}
						}
					}		
				}
			}
		}
	}
]]></Implementation>
</Method>
</Class>
</Export>