<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.dStockBalance">
<ClassType>persistent</ClassType>
<IncludeCode>INSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>
<UDLText name="T">
<Content>
/*------------------------------------------------------------------------------
; History:
; 
; 14-Apr-2009	PPP		SR16468:Captions for Properties
; 25-Jan-2008 	LB 		SR15626 Created 
;-----------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="Item">
<Type>alINV.dItem</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00063"/>
</Property>


<Property name="Location">
<Type>alLOC.dLocation</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00064"/>
</Property>


<Property name="QtyOnHand">
<Type>alSYS.dt.dtFloat</Type>

<Parameter name="CAPTION" value="AL00065"/>
</Property>

<UDLText name="T">
<Content>
//Property ValueOnHand As %Currency [ InitialExpression = "0&quot; ];

</Content>
</UDLText>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="Index">
<IdKey>1</IdKey>
<Properties>Item,Location</Properties>
<Unique>1</Unique>
</Index>

<Index name="ItemIDX">
<Properties>Item</Properties>
</Index>

<Index name="LocationIDX">
<Properties>Location</Properties>
</Index>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Query name="GetViaLocation">
<Type>%SQLQuery</Type>
<FormalSpec>Location:alLOC.dLocation</FormalSpec>
<SqlQuery>SELECT %ID FROM dStockBalance
 WHERE (Location = :Location)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<Query name="GetViaItem">
<Type>%SQLQuery</Type>
<FormalSpec>Item:alINV.dItem</FormalSpec>
<SqlQuery>SELECT %ID FROM dStockBalance
 WHERE (Item = :Item)</SqlQuery>

<Parameter name="CONTAINID" value="1"/>
</Query>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="QtyOnHandSet">
<FormalSpec>Quantity:%Float</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	//set %this.QtyOnHandAdjustment = %this.QtyOnHandAdjustment + (Quantity - i%QtyOnHand )
	set i%QtyOnHand = Quantity
	quit sc
]]></Implementation>
</Method>

<Method name="ChangeQuantity">
<Description><![CDATA[
Changes the Quantity for an item on within a SOH object. it can accept negative numbers 
 
 Returns: 
 %Status]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pidItem:alINV.dItem,pidLocn:alLOC.dLocation,pfltQtyMoved:%Float</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 10-Nov-2010	SCR		SR17611: Update SOHLockLevel to 0
	; 21-Apr-2008	HQN		SR15651: Removed redundant sc check
	; 						Changed to exclusive lock
	; 01-Apr-2008	Luke	SR15653 
	;-------------------------------------------------------------------------------
	set sc		  = $$$OK
	set blnNewObj = $$$NO
	
	; Step 1 Open Object
	//SR17611
	//set objStkBal=##class(alSOH.dStockBalance).%OpenId(pidItem.%Id()_"||"_pidLocn.%Id(),4,.sc)
	set objStkBal=##class(alSOH.dStockBalance).%OpenId(pidItem.%Id()_"||"_pidLocn.%Id(),$$$SOHLockLevel,.sc)
	if objStkBal=$$$NULLOREF {
		set sc = $$$OK
		set objStkBal = ##class(alSOH.dStockBalance).%New()
		set objStkBal.Item     = pidItem
		set objStkBal.Location = pidLocn
		set blnNewObj          = $$$YES
	}
	; Step 3 Update the Qty on hand
	; Step 4 if new Qty On Hand = 0 Delete Object
	; Step 5 if new Qty On Hand     Save Object
	if $$$ISOK(sc) {
		set objStkBal.QtyOnHand = objStkBal.QtyOnHand + pfltQtyMoved
		if objStkBal.QtyOnHand=0 {
			if 'blnNewObj {
				set sc = ##class(alSOH.dStockBalance).%DeleteId(objStkBal.%Id())
			}
		} else {
			set sc = objStkBal.%Save()
		}
		do objStkBal.%Close()
	}
	quit sc
]]></Implementation>
</Method>

<Method name="GetStkBalance">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidItem:alINV.dItem,pidLocn:alLOC.dLocation</FormalSpec>
<ReturnType>alSOH.dSOH</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 10-Nov-2010	SCR		SR17611: Update SOHLockLevel to 0
	; 01-Apr-2008	Luke	SR15653 
	;-------------------------------------------------------------------------------

	//17611
	//set objStkBal = ##class(alSOH.dStockBalance).%OpenId(pidItem.%Id()_"||"_pidLocn.%Id(),4,.sc)
	set objStkBal = ##class(alSOH.dStockBalance).%OpenId(pidItem.%Id()_"||"_pidLocn.%Id(),$$$SOHLockLevel,.sc)
	if objStkBal = "" {
		set objStkBal = ##class(alSOH.dStockBalance).%New()
		set objStkBal.Item      = pidItem
		set objStkBal.Location  = pidLocn
		set objStkBal.QtyOnHand = 0
		if $$$SOHLockLevel=0 {  ; SR17611 vvvvvv
			do objStkBal.%DowngradeConcurrency(0)
		}						; SR17611 ^^^^^^
		
		set strStatus = objStkBal.%Save()
	}
	quit objStkBal
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alSOH.dStockBalanceD</DataLocation>
<DefaultData>dStockBalanceDefaultData</DefaultData>
<IdLocation>^alSOH.dStockBalanceD</IdLocation>
<IndexLocation>^alSOH.dStockBalanceI</IndexLocation>
<StreamLocation>^alSOH.dStockBalanceS</StreamLocation>
<Data name="dStockBalanceDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Item</Value>
</Value>
<Value name="3">
<Value>Location</Value>
</Value>
<Value name="4">
<Value>QtyOnHand</Value>
</Value>
<Value name="5">
<Value>ValueOnHand</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>