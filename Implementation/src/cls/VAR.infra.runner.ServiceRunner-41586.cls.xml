<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.runner.ServiceRunner">
<ClassType/>
<Import>VAR.infra,VAR.infra.util</Import>
<IncludeCode>VARLog</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Property name="MethodName">
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<Method name="%OnNew">
<FormalSpec>pstrMethodName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set status = $system.Status.OK()
	if ($get(pstrMethodName) = "") quit $system.Status.Error(0,"No method defined")
	set ..MethodName = pstrMethodName
	
	quit status]]></Implementation>
</Method>

<Method name="Run">
<Description><![CDATA[Returns: Status]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set $ztrap = "exception"
	 
	set strClass		 = ..%ClassName(1)
	set strMethod  		 = $get(..MethodName)
	set MethodDefinition = strClass_"||"_strMethod
	set status   		 = $$$OK
	
	if (..IsValid(strClass)) {
		
		set objService = ##class(%Dictionary.MethodDefinition).%OpenId(MethodDefinition)
		quit:('$isObject(objService))
		
		tstart
				
		set status = $zobjmethod(##this, strMethod)
		
		if (status = $$$OK) {
			if ($tlevel > 0) tcommit
		}
		else {
			trollback
		}

		set $ztrap = ""		
	}
	
finally

	quit status
	
exception

	set error = $zerror
	set $ztrap = ""

	trollback
	set $zerror = error
	set status = ##class(Errors).MakeErrorStatus("ROLLBACK: "_error)
	
	$$$VARLOGERROR(error)
	
	goto finally]]></Implementation>
</Method>

<Method name="IsValid">
<Description><![CDATA[Returns: Boolean]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>strName:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	set status = 0
	set ext    = "OBJ"
	
	For i=1:1:5 {
		set status = $$EXIST^%R(strName_"."_i_"."_ext)
		quit:(status=1)
	}
		
	quit status]]></Implementation>
</Method>
</Class>
</Export>