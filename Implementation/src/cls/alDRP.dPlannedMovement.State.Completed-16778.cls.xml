<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alDRP.dPlannedMovement.State.Completed">
<ClassType>persistent</ClassType>
<IncludeCode>COMSYS</IncludeCode>
<Super>alSYS.State.dState</Super>

<Property name="StateId">
<Type>alSYS.dt.dtInteger</Type>
<Final>1</Final>
<InitialExpression>"4&quot;</InitialExpression>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00618"/>
</Property>


<Method name="IsValid">
<Description><![CDATA[
Must be overridden, returns whether the instance can be changed to this state
Do additional field validation on iStateMachine
]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History
	; 08-Oct-2008	HQN 	Removed validation, should be explicit
	; 01-Oct-2008	HQN		SR15869: Validate ToStorage
	; 18-Sep-2008	HQN		SR15808: Created
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	; Completing a TransferIssue cannot reduce stock below QtyOnHand
	if %this.StateMachine.MovementType.MovementTypeId = 30 {
	}
	/*if %this.StateMachine.ToStorage = "" {
		if %this.StateMachine.ToLocn.OnHandStorage = "" {
			set sc = $$$ERROR($$$GeneralError,$$$Text($lb("alLOC0001",%this.StateMachine.ToLocn.%Id())))
		} else {
			set sc = $$$ERROR(5500,"ToStorage",%this.StateMachine.%ClassName(1),%this.%ClassName(1)_"::IsValid()")
		}
	}*/
	quit sc
]]></Implementation>
</Method>

<Method name="OnStateChange">
<Description><![CDATA[
Must be overridden, returns whether the instance successfully changed to this state
]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Create dMovement from this
	; remove itself
	; 
	; History:
	; 01-Oct-2008	HQN		Corrected spelling mistake
	; 						Cannot delete, alSYS.iStateMachine::ChangeState()
	; 						does a %Save() on completion...maybe a StateMachine
	; 						cleanup OnAfterSave() for state:4 to delete?
	; 24-Sep-2008	HQN		SR15862: Delete itself upon completion
	; 18-Sep-2008	HQN		SR15808: Created
	;-------------------------------------------------------------------------------
	set objMove = %this.CreateMovement(%this.StateMachine)
	set sc = objMove.ChangeState(4)
	
	; 01-Oct-2008 vvvv REMOVED
	/* if $$$ISOK(sc) {
		do %this.StateMachine.%DeleteId(%this.StateMachine.%Id())
	} */
	; 01-Oct-2008 ^^^^ REMOVED
	quit sc
]]></Implementation>
</Method>

<Method name="CreateMovement">
<FormalSpec>pobjMovement:alDRP.dPlannedMovement</FormalSpec>
<ReturnType>alDRP.dMovement</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Reservation becomes new movement on shipping
	; 
	; History:
	; 09-Mar-2011	PPP		SR17681: added CustomerAccount
	; 06-Nov-2009	GRF		SR16871: add TransferDate
	;-------------------------------------------------------------------------------
	; Hardcoded, should be a generator based on %ClassDefinition
	set objMove = ##class(alDRP.dMovement).%New()
	set objMove.Item         = pobjMovement.Item
	set objMove.Bundle       = pobjMovement.Bundle
	set objMove.FromLocn     = pobjMovement.FromLocn
	set objMove.FromStorage  = pobjMovement.FromStorage
	set objMove.ToLocn       = pobjMovement.ToLocn
	set objMove.ToStorage    = pobjMovement.ToStorage
	if objMove.ToStorage="" {
	   set objMove.ToStorage = objMove.ToLocn.OnHandStorage 
	}
	set objMove.MovementType = pobjMovement.MovementType
	set objMove.Reference    = pobjMovement.Reference
	set objMove.LineNumber   = pobjMovement.LineNumber
	set objMove.QtyRequired  = pobjMovement.QtyRequired
	set objMove.QtyPicked    = pobjMovement.QtyRequired
	set objMove.Supply       = pobjMovement.Supply
	set objMove.Demand       = pobjMovement.Demand
	set objMove.Demand       = pobjMovement.Demand
	set objMove.TransferDate = pobjMovement.TransferDate
	set objMove.CustomerAccount = pobjMovement.CustomerAccount			//SR17681
	
	quit objMove
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>
</Export>