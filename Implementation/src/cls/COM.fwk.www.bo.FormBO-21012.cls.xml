<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.www.bo.FormBO">
<ClassType/>
<Import>COM.fwk.www.entity</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>COM.fwk.biz.BO,%RegisteredObject</Super>

<Method name="%OnNew">
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$OK
]]></Implementation>
</Method>

<Method name="getClassUsedInForm">
<Description><![CDATA[
For a specific form, returns the class used
by it

@author Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>formName:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 
	; 
	; History
	; 
	; 10-Feb-2006	hjrb	SR14178:Corrected property name
	; 
	;-------------------------------------------------------------------------------
	;
	set form = ##class(COM.fwk.www.entity.Form).findByName(formName)
	
	if (form = "") {
		quit ""
	}
	
	// remove the 'class' name of the end of the description
	//set descWithoutClass = $piece(class.Classdescription, "class", 1) 
	//set descWithoutClass = $piece(descWithoutClass, "Class", 1) 
	
	//quit $zconvert(descWithoutClass, "t")
	;quit form.Classusedinform	// SR14178
	quit form.ClassUsedInForm	//SR14178
]]></Implementation>
</Method>

<Method name="isManualForm">
<FormalSpec>formName:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set form = ##class(COM.fwk.www.entity.Form).findByName(formName)
	
	quit (..isManualFormWithButton(form)) || (..isManualFormWithoutButton(form))
]]></Implementation>
</Method>

<Method name="isManualFormWithButton">
<FormalSpec>form:COM.fwk.www.entity.Form</FormalSpec>
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	quit form.FormType = 4
]]></Implementation>
</Method>

<Method name="isManualFormWithoutButton">
<FormalSpec>form:COM.fwk.www.entity.Form</FormalSpec>
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	quit form.FormType = 5
]]></Implementation>
</Method>

<Method name="listFormNamesByClass">
<Description><![CDATA[

	List all form names that use a class.
	
	<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>className:%String</FormalSpec>
<ReturnType>%ListOfDataTypes</ReturnType>
<Implementation><![CDATA[

	set forms = ##class(COM.fwk.www.entity.Form).findByClass(className)
	set formNames = ##class(%ListOfDataTypes).%New()
	
	for i = 1 : 1 : forms.Count() {
		do formNames.Insert(forms.GetAt(i).FormName)
	}
	
	quit formNames
]]></Implementation>
</Method>

<Method name="getFormHeader">
<Description><![CDATA[

For a specific form, returns its header property

@author Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>formName:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[

	set form = ##class(COM.fwk.www.entity.Form).findByName(formName)
	
	if (form = "") {
		quit ""
	} 
	
	// remove the 'class' name of the end of the description
	//set descWithoutClass = $piece(class.Classdescription, "class", 1) 
	//set descWithoutClass = $piece(descWithoutClass, "Class", 1) 
	
	//quit $zconvert(descWithoutClass, "t")
	quit form.FormHeaderOrImageFile
]]></Implementation>
</Method>

<Method name="getEditionData">
<Description><![CDATA[

For a specific form, gets the lastest edition data,
from the FormEditionData (WWWDATEN) entity, for
the current session id of the logged user.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>formName:%String</FormalSpec>
<ReturnType>COM.fwk.biz.dto.GenericDTO</ReturnType>
<Implementation><![CDATA[
	
	set sessionId = ..getSession().getSessionId()
	
	set formEditionData = ##class(COM.fwk.www.entity.FormEditionData).findLastDataBySessionAndForm(sessionId, formName)
	
	if '$isObject(formEditionData)
	{
		quit $$$NULLOREF
	}
	
	do formEditionData.loadEditionData()
	
	quit ##class(COM.fwk.biz.dto.GenericDTO).%New(formEditionData)
]]></Implementation>
</Method>

<Method name="removeEditionData">
<Description><![CDATA[

For a specific form, removes the edition data,
from the FormEditionData (WWWDATEN) entity, for
the current session id of the logged user.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>formName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	set sessionId = ..getSession().getSessionId()
	set formEditionData = ##class(COM.fwk.www.entity.FormEditionData).findLastDataBySessionAndForm(sessionId, formName)
	
	if (formEditionData = "") {
		quit 0
	}
	set id = formEditionData.%Id()
	
	kill formEditionData
	
	quit ##class(COM.fwk.www.entity.FormEditionData).%DeleteId(id)
]]></Implementation>
</Method>

<Method name="updateEditionData">
<Description><![CDATA[

For a specific form, finds all the edition data
stored for a given id and update its fields.

<p>

The fieldNumberList contains all piece number
of the edition data record that must be
updated, and the newValueList contains the
respective values.

<p>

This method should be avoided. Have in mind that 
the edition data is the temporary data stored for 
a user that is editing a form. It is stored in a 
temporary mode until the user saves the record.
Updating the edition data will probably overwrite
the user edition.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>formName:%String,entityNManagerId:%String,fieldNumberList:%ListOfDataTypes,newValueList:%ListOfDataTypes</FormalSpec>
<Implementation><![CDATA[
	/*
	w " formName : " _ formName, !
	w " entityNManagerId : " _ entityNManagerId, !
	w " fieldNumberList : " _ fieldNumberList, !
	w " newValueList : " _ newValueList, !
	*/
	
	set updateList = ##class(FormEditionData).listTodaysDataFieldsByFormAndPK(formName, entityNManagerId)
	
	for i = 1 : 1 : updateList.Count() {
		
		set formEditionData = updateList.GetAt(i)
		
		do formEditionData.loadEditionData()
		
		for ii = 1 : 1 : fieldNumberList.Count() {
			
			set fieldNumber = fieldNumberList.GetAt(ii)
			set newValue = newValueList.GetAt(ii)
			
			do formEditionData.setData(fieldNumber, newValue)
		}
		
		do formEditionData.save()
	}
]]></Implementation>
</Method>

<Method name="generateNextId">
<Description><![CDATA[

For a specific form with a related class,
generates the next Id for the entity
being edited by the form.

<p>

Only works for classes that have the company 
and a numeric field as primary keys. Otherwise,
raises an error.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>formName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	set class = ..getClassUsedInForm(formName)
	
	kill formEditionData
	
	quit ##class(COM.fwk.www.entity.FormEditionData).%DeleteId(id)
]]></Implementation>
</Method>
</Class>
</Export>