<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARCadProfissional">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Quit:$$$ISERR(..ValidaSessao()) %response
	Set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="ValidaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	If (status = 0 || (YBED = "UNKNOWN")){
		Set status = 0
		Set %response.Status = "401 Unauthorized"
		Set resp = {}
		Set resp.erro = 1
		Set resp.mensagem = "Sessão Expirou"
		Write resp.%ToJSON()
	}
	Return status]]></Implementation>
</Method>

<Method name="GetDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodProfissional = $Get(%request.Data("pCodProfissional",1))
	;
	Set objMEDProvider = $Get(^MEDProvider(YM, pCodProfissional, 1))
	;
	Set situacao = $$$MEDProviderStatus(objMEDProvider)
	Set nome = $$$MEDProviderName(objMEDProvider)
	Set dataNascimento = $$$MEDProviderDatadeNascimento(objMEDProvider)
	Set sexo = $$$MEDProviderSexo(objMEDProvider)
	Set cPF = $$$MEDProviderProviderNo(objMEDProvider)
	Set rG = $$$MEDProviderRG(objMEDProvider)
	Set licencaProfissional = $$$MEDProviderLicenseType(objMEDProvider)
	Set conselho = $$$MEDProviderFREE2(objMEDProvider)
	Set estadoDocumento = $$$MEDProviderFREE3(objMEDProvider)
	Set numeroDocumento = $$$MEDProviderSSN(objMEDProvider)
	Set cBO = $$$MEDProviderCBO(objMEDProvider)
	Set jurisdicao = $$$MEDProviderJurisdicao(objMEDProvider)
	Set usuarioAlphalinc = $$$MEDProviderUser1(objMEDProvider)
	Set logradouro = $$$MEDProviderEnderecoLogradouro(objMEDProvider)
	Set numeroEndereco = $$$MEDProviderEnderecoNumero(objMEDProvider)
	Set complemento = $$$MEDProviderEnderecoComplemento(objMEDProvider)
	Set bairro = $$$MEDProviderEnderecoBairro(objMEDProvider)
	Set cidade = $$$MEDProviderEnderecoCidade(objMEDProvider)
	Set estado = $$$MEDProviderEnderecoEstado(objMEDProvider)
	Set cEP = $$$MEDProviderEnderecoCEP(objMEDProvider)
	Set telefone = $$$MEDProviderTelefone(objMEDProvider)
	Set celular = $$$MEDProviderCelular(objMEDProvider)
	Set email = $$$MEDProviderEmail(objMEDProvider)
	Set especialidade = $$$MEDProviderEspecialidadedoProfission(objMEDProvider)
	;
	Set criadoPor = $$$MEDProviderCreatedDate(objMEDProvider)
	Set criadoEm = $$$MEDProviderCreatedBy(objMEDProvider)
	Set alteradoPor = $$$MEDProviderChangedBy(objMEDProvider)
	Set alteradoEm = $$$MEDProviderChangedOn(objMEDProvider)
	;
	Set listPessoal = {}
	Set listPessoal.nome								= nome
	Set listPessoal.dataNascimento			= $Select(dataNascimento'="":$ZDate(dataNascimento,3),1:"")
	Set listPessoal.sexo								= sexo
	Set listPessoal.cPF									= cPF
	Set listPessoal.rG									= rG
	Set listPessoal.licencaProfissional	= licencaProfissional
	Set listPessoal.conselho						= conselho
	Set listPessoal.estadoDocumento			= estadoDocumento
	Set listPessoal.numeroDocumento			= numeroDocumento
	Set listPessoal.cBO									= cBO
	Set listPessoal.jurisdicao					= jurisdicao
	Set listPessoal.usuarioAlphalinc		= usuarioAlphalinc
	Set listPessoal.logradouro					= logradouro
	Set listPessoal.numeroEndereco			= numeroEndereco
	Set listPessoal.complemento					= complemento
	Set listPessoal.bairro							= bairro
	Set listPessoal.cidade							= cidade
	Set listPessoal.estado							= estado
	Set listPessoal.cEP									= cEP
	Set listPessoal.telefone						= telefone
	Set listPessoal.celular							= celular
	Set listPessoal.email								= email
	Set listPessoal.especialidade				= especialidade
	;	
	Set listControle = {}
	Set listControle.criadoEm 		= $Select(criadoEm="":"",1:$ZDateTime(criadoEm,4,2))
	Set listControle.criadoPor 		= $$SQLGetUserName^VARSQL(criadoPor)
	Set listControle.alteradoEm 	= $Select(alteradoEm="":"",1:$ZDateTime(alteradoEm,4,2))
	Set listControle.alteradoPor 	= $$SQLGetUserName^VARSQL(alteradoPor)
	;
	Set listRetorno = {}
	Set listRetorno.dadosPessoal 		= listPessoal
	Set listRetorno.dadosControle 	= listControle
	Set listRetorno.situacao 				= situacao
	;
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = ""
	Set mensagem = ""
	Set erro = 0
	Try{
		Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
		Set pSituacao 				= $Get(%request.Data("pSituacao",1))
		Set pDataNascimento		= $Get(%request.Data("pDataNascimento",1))
		Set pObjPessoal 			= $Get(%request.Data("pObjPessoal",1))
		Set YBED 							= $Get(%request.Data("YBED",1))
		If (pCodProfissional = "+") {
			Set pCodProfissional = ""
		}
		Set pObjPessoal = [].%FromJSON(pObjPessoal)
		Set objMEDProvider = ""
		If (pCodProfissional '= "") {
			 Set objMEDProvider = $Get(^MEDProvider(YM, pCodProfissional, 1))
		}
		Set $$$MEDProviderStatus(objMEDProvider) = pSituacao
		Set $$$MEDProviderName(objMEDProvider) = pObjPessoal.nome
		Set $$$MEDProviderDatadeNascimento(objMEDProvider) = $ZDateH(pDataNascimento,4)
		Set $$$MEDProviderSexo(objMEDProvider) = pObjPessoal.sexo
		Set $$$MEDProviderProviderNo(objMEDProvider) = pObjPessoal.cPF
		Set $$$MEDProviderRG(objMEDProvider) = pObjPessoal.rG
		Set $$$MEDProviderLicenseType(objMEDProvider) = pObjPessoal.licencaProfissional
		Set $$$MEDProviderFREE2(objMEDProvider) = pObjPessoal.conselho
		Set $$$MEDProviderFREE3(objMEDProvider) = pObjPessoal.estadoDocumento
		Set $$$MEDProviderSSN(objMEDProvider) = pObjPessoal.numeroDocumento
		Set $$$MEDProviderCBO(objMEDProvider) = pObjPessoal.cBO
		Set $$$MEDProviderJurisdicao(objMEDProvider) = pObjPessoal.jurisdicao
		Set $$$MEDProviderUser1(objMEDProvider) = pObjPessoal.usuarioAlphalinc
		Set $$$MEDProviderEnderecoLogradouro(objMEDProvider) = pObjPessoal.logradouro
		Set $$$MEDProviderEnderecoNumero(objMEDProvider) = pObjPessoal.numeroEndereco
		Set $$$MEDProviderEnderecoComplemento(objMEDProvider) = pObjPessoal.complemento
		Set $$$MEDProviderEnderecoBairro(objMEDProvider) = pObjPessoal.bairro
		Set $$$MEDProviderEnderecoCidade(objMEDProvider) = pObjPessoal.cidade
		Set $$$MEDProviderEnderecoEstado(objMEDProvider) = pObjPessoal.estado
		Set $$$MEDProviderEnderecoCEP(objMEDProvider) = pObjPessoal.cEP
		Set $$$MEDProviderTelefone(objMEDProvider) = pObjPessoal.telefone
		Set $$$MEDProviderCelular(objMEDProvider) = pObjPessoal.celular
		Set $$$MEDProviderEmail(objMEDProvider) = pObjPessoal.email
		Set $$$MEDProviderEspecialidadedoProfission(objMEDProvider) = pObjPessoal.especialidade		
		If (pCodProfissional = "") {
			If ($Data(^MEDProviders(0, 20, pObjPessoal.cPF))) {
				Set strStatus = -1
				Set mensagem 	= "CPF já cadastrado."
				Quit  	
			}
			Set pCodProfissional = $$GetNextNumber^COMUtils("MEDProvider","")
			Set $$$MEDProviderCreatedDate(objMEDProvider) = $Horolog
			Set $$$MEDProviderCreatedBy(objMEDProvider) 	= YBED
		}Else{
			Set xCodigo = $Order(^MEDProviders(0, 20, pObjPessoal.cPF, ""))
			If (xCodigo '= "" && (xCodigo '= pCodProfissional)) {
				Set strStatus = -1
				Set mensagem 	= "CPF já cadastrado para paciente "_xCodigo_"."
				Quit  	
			}			
			Set $$$MEDProviderChangedOn(objMEDProvider) = $Horolog
			Set $$$MEDProviderChangedBy(objMEDProvider) = YBED
		}
		Set strStatus = $$$Save("MEDProvider", pCodProfissional, objMEDProvider, $$$YES)
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.codProfissional = pCodProfissional
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus_" - "_mensagem
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetGrupoAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;	
	set pCodUnidade			= $Get(%request.Data("pCodUnidade",1))
	;	
	Set meuSQL = "Select Agend.Codigo, Agend.Descricao From SQLUser.VARGrupoAgendamento As Agend "
	Set meuSQL = meuSQL _ "Where Agend.Company = 0 And Agend.Situacao = 1"
	Set meuSQL = meuSQL _ "And ( "
		Set meuSQL = meuSQL _ "( "
			Set meuSQL = meuSQL _ "Select Count(Loc.Id) From SQLUser.VARGrupoAgendamentoLocAtend As Loc "
			Set meuSQL = meuSQL _ "Where Loc.Company = 0 And Loc.CodigoGrupo = Agend.Codigo "
		Set meuSQL = meuSQL _ ") = 0 "
		;Set meuSQL = meuSQL _ "Or "
		;Set meuSQL = meuSQL _ "( "
		;	Set meuSQL = meuSQL _ "Select Count(Loc.Id) From SQLUser.VARGrupoAgendamentoLocAtend As Loc "
		;	Set meuSQL = meuSQL _ "Where Loc.Company = 0 And Loc.CodigoGrupo = Agend.Codigo "
		;	Set meuSQL = meuSQL _ "And Loc.Unidade = '1' "
		;Set meuSQL = meuSQL _ ") > 0 "
	Set meuSQL = meuSQL _ ")"
	;
	Set objStatement	= ##class(%SQL.Statement).%New() 
	Set qStatus 			= objStatement.%Prepare(meuSQL)
	Set rSet 					= objStatement.%Execute()
	;
	Set arrayDados = []
	;
 	While (rSet.%Next()) {
		Set listDados = {}
		Do listDados.%Set("Codigo", rSet.%Get("Codigo"))
		Do listDados.%Set("Descricao", rSet.%Get("Descricao"))
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDadosGrupoAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;	
	Set pCodGrupoAgendamento = $Get(%request.Data("pCodGrupoAgendamento",1))
	Set objVARGrupoAgendamento = $Get(^VARGrupoAgendamento(YM, pCodGrupoAgendamento, 1))

	Set listRetorno = {}
	Set listRetorno.tempo = $ZTime($$$VARGrupoAgendamentoTempodeAtendimento(objVARGrupoAgendamento),2)
	Set listRetorno.tipo = $$$VARGrupoAgendamentoTipo(objVARGrupoAgendamento)
	
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetProcedimentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Set pGrupoAgendamento = $Get(%request.Data("pGrupoAgendamento",1))	
	;
	Set arrayRetorno = []
	Set meuSQL = "Select ItemNumber, SearchName, DescItemPedido From SQLUser.INART Where Company = 0 "
	Set meuSQL = meuSQL _ "And GrupodeAgendamento = '"_pGrupoAgendamento_"' "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listRetorno = {}
		Set listRetorno.Codigo		= rSet.%Get("ItemNumber")
		Set listRetorno.Descricao = $Select(rSet.%Get("DescItemPedido")="":rSet.%Get("SearchName"),1:rSet.%Get("DescItemPedido"))
		Do arrayRetorno.%Push(listRetorno)
	}
		
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetSalasAtendimentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Set pGrupoAgendamento = $Get(%request.Data("pGrupoAgendamento",1))	
	Set pCodUnidade				= $Get(%request.Data("pCodUnidade",1))
	;
	Set meuSQL = "Select Sala.CodigoSala, Sala.Nome, Sala.Setor "
	Set meuSQL = meuSQL _ "From SQLUSer.VARSalasAtendimentos As Sala "
	Set meuSQL = meuSQL _ "Where Sala.Company = 0 "
	If (pCodUnidade '= "") {
		Set meuSQL = meuSQL _ "And Sala.Unidade = '"_pCodUnidade_"' " 	
	}
	Set meuSQL = meuSQL _ "And (Select Count(LocAtend.ID) From SQLUser.VARGrupoAgendamentoLocAtend As LocAtend "
	Set meuSQL = meuSQL _ "Where LocAtend.Company = 0 And LocAtend.Sala = Sala.CodigoSala) = 0 "
	Set meuSQL = meuSQL _ "Order By Sala.Nome" 	

	Set arrayDados = []
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
 	While (rSet.%Next()) {
	 	Set nome 			= rSet.%Get("Nome")
	 	set codSetor 	= rSet.%Get("Setor")
	 	If (codSetor '= "") {
			set descSetor = $piece(^VARPARA(0, "SETOR", "PT", codSetor, 1),"~",1)
			Set nome = nome _ " ("_descSetor_")"
		}
	 	
		Set listDados = {}
		Do listDados.%Set("CodigoSala", rSet.%Get("CodigoSala"))
		Do listDados.%Set("Nome", nome)
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarDadosProfissional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = ""
	Set erro = 0
	Try{
		Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
		Set pSequenciaAgenda 	= $Get(%request.Data("pSequenciaAgenda",1))
		Set pObjProfissionais = $Get(%request.Data("pObjProfissionais",1))
		Set pTipoRepeticao		= $Get(%request.Data("pTipoRepeticao",1))
		Set pNosDias					= $Replace($Get(%request.Data("pNosDias",1)),",",";")
		Set pHoraInicio				= $Get(%request.Data("pHoraInicio",1))
		Set pHoraFim					= $Get(%request.Data("pHoraFim",1))
		Set pHoraInterInicio	= $ZTimeH($Get(%request.Data("pHoraInterInicio",1)),2,"")
		Set pHoraInterFim			= $ZTimeH($Get(%request.Data("pHoraInterFim",1)),2,"")
		Set pTempoAtendimento = $Get(%request.Data("pTempoAtendimento",1))
		Set pRestricaoGeral		= $Replace($Get(%request.Data("pRestricaoGeral",1)),",",";")
		Set YBED 							= $Get(%request.Data("YBED",1))
		Set pObjProfissionais = [].%FromJSON(pObjProfissionais)
		;
		Set profDataInicio 	= $ZDateH($Piece($Replace(pObjProfissionais.profDataInicio,"'",""),"T",1),3)
		Set profDataFinal 	= $Replace(pObjProfissionais.profDataFinal,"'","")
		If (profDataFinal '= "") {
			Set profDataFinal = $ZDateH(profDataFinal,3)
		}Else{
			If (pObjProfissionais.profTerminoQtde '= "") {
				Set profDataFinal = profDataInicio + pObjProfissionais.profTerminoQtde
			}Else{
				Set profDataFinal = profDataInicio
			}
		}
		Set pIdAgenda = pSequenciaAgenda
		If (pIdAgenda = "") {
			Set pIdAgenda = $Order(^MEDProviderAgenda(YM, pCodProfissional, ""),-1) + 1	
		}
		Set objAgenda = $Get(^MEDProviderAgenda(YM, pCodProfissional, pIdAgenda, 1))
		;
		If (pHoraInterInicio > pHoraInterFim) {
			Set pHoraInterFim = pHoraInterInicio	
		}
		
		Set antigaDataFinal = ""	
		If (pSequenciaAgenda = "") {
			Set $$$MEDProviderAgendaUnidade(objAgenda) 						= pObjProfissionais.profUnidade
			Set $$$MEDProviderAgendaGrupoAgendamento(objAgenda) 	= pObjProfissionais.profGrupoAgendamento
			Set $$$MEDProviderAgendaTempodeAtendimento(objAgenda) = $ZTimeH(pTempoAtendimento,2)
			Set $$$MEDProviderAgendaRestricaoGeral(objAgenda) 		= pRestricaoGeral
			Set $$$MEDProviderAgendaLocal1(objAgenda) 						= pObjProfissionais.profLocal
			Set $$$MEDProviderAgendaPermiteEncaixe(objAgenda) 		= pObjProfissionais.profEncaixe
			Set $$$MEDProviderAgendaQtdeEncaixe(objAgenda) 				= pObjProfissionais.profQtdeEncaixe
			Set $$$MEDProviderAgendaDataInicial(objAgenda) 				= profDataInicio
			Set $$$MEDProviderAgendaHoraInicial(objAgenda) 				= $ZTimeH(pHoraInicio,2)
			Set $$$MEDProviderAgendaHoraFinal(objAgenda) 					= $ZTimeH(pHoraFim,2)
			Set $$$MEDProviderAgendaRepeticao(objAgenda) 					= pTipoRepeticao
			Set $$$MEDProviderAgendaRepetiraCada(objAgenda) 			= pObjProfissionais.profRepetirCada
			Set $$$MEDProviderAgendaNosDias(objAgenda) 						= pNosDias
			Set $$$MEDProviderAgendaQtdeOcorrencia(objAgenda) 		= pObjProfissionais.profTerminoQtde
			Set $$$MEDProviderAgendaIntervaloInicio(objAgenda) 		= pHoraInterInicio
			Set $$$MEDProviderAgendaIntervaloFim(objAgenda) 			= pHoraInterFim
			Set $$$MEDProviderAgendaCriadoEm(objAgenda) 					= $Horolog
			Set $$$MEDProviderAgendaCriadoPor(objAgenda) 					= YBED
			Set xDataInicial 																			= profDataInicio
		}Else{
			Set xDataInicial 																			= $$$MEDProviderAgendaDataFinal(objAgenda)
			Set antigaDataFinal																		= $$$MEDProviderAgendaDataFinal(objAgenda)
			Set $$$MEDProviderAgendaAlteradoEm(objAgenda) 				= $Horolog
			Set $$$MEDProviderAgendaAlteradoPor(objAgenda) 				= YBED
		}
		Set $$$MEDProviderAgendaDataFinal(objAgenda) 						= profDataFinal
		;
		Set strStatus = $$$Save("MEDProviderAgenda", pCodProfissional_$$$COMMA_pIdAgenda, objAgenda, $$$YES)
		If ('$$$ISERR(strStatus)) {
			if (antigaDataFinal = "" || (antigaDataFinal < profDataFinal)) {
				Set strStatus = ..GerarAgenda(pCodProfissional, pIdAgenda, xDataInicial, YBED)
			}Else{
				Set strStatus = ..CancelarAgendaDatas(pCodProfissional, pIdAgenda, profDataFinal, YBED)
			}
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="CancelarAgenda">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = ""
	Set erro = 0
	Try{
		Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
		Set pSequenciaAgenda 	= $Get(%request.Data("pSequenciaAgenda",1))

		Set objAgenda = $Get(^MEDProviderAgenda(YM, pCodProfissional, pSequenciaAgenda, 1))
		;
		Set dataFinal = +$Horolog-1
		If ($Piece($Horolog,",",2) > $$$MEDProviderAgendaHoraInicial(objAgenda)) {
			Set dataFinal = +$Horolog
		}
		Set $$$MEDProviderAgendaDataFinal(objAgenda) 		= dataFinal
		Set $$$MEDProviderAgendaAlteradoEm(objAgenda) 	= $Horolog
		Set $$$MEDProviderAgendaAlteradoPor(objAgenda)	= YBED
		;
		Set strStatus = $$$Save("MEDProviderAgenda", pCodProfissional_$$$COMMA_pSequenciaAgenda, objAgenda, $$$YES)
		If ('$$$ISERR(strStatus)) {
			Set strStatus = ..CancelarAgendaDatas(pCodProfissional, pSequenciaAgenda, dataFinal, YBED)
		}

	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="CancelarAgendaDatas">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProfissional,pIdAgenda,pDataFinal,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set YBED			= pYBED
	Set strStatus = $$$OK

	Set meuSQL = "Select * From SQLUser.MEDProviderAgendaHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And ReferenciaPai = '"_pIdAgenda_"' And DatadeAtendimento > '"_pDataFinal_"'"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While (rSet.%Next()) {
		Set xDataAtendimento = rSet.%Get("DatadeAtendimento")
		Set xHoraAtendimento = rSet.%Get("HoradeAtendimento")
		Set strStatus = $$$Kill("MEDProviderAgendaHorario", pCodProfissional_$$$COMMA_xDataAtendimento_$$$COMMA_xHoraAtendimento)
		Quit:$$$ERROR(strStatus)
	}
	
	Return strStatus]]></Implementation>
</Method>

<Method name="GerarAgenda">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProfissional,pIdAgenda,pDataInicial,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set YBED			= pYBED
	Set strStatus = $$$OK
	;
	;Kill ^MEDProviderAgendaHorario
	;
	Set objAgenda 		= $Get(^MEDProviderAgenda(YM, pCodProfissional, pIdAgenda, 1))
	Set dataInicial 	= $$$MEDProviderAgendaDataInicial(objAgenda)
	Set dataFinal 		= $$$MEDProviderAgendaDataFinal(objAgenda)
	Set horaInicial 	= $$$MEDProviderAgendaHoraInicial(objAgenda)
	Set horaFinal 		= $$$MEDProviderAgendaHoraFinal(objAgenda)
	Set tempoAtend 		= $$$MEDProviderAgendaTempodeAtendimento(objAgenda)
	Set tipoRepeticao = $$$MEDProviderAgendaRepeticao(objAgenda)
	Set repetirCada		= +$$$MEDProviderAgendaRepetiraCada(objAgenda)
	Set nosDias				= $$$MEDProviderAgendaNosDias(objAgenda)  
	Set pCodUnidade		= $$$MEDProviderAgendaUnidade(objAgenda)
	Set pCodSala			= $$$MEDProviderAgendaLocal1(objAgenda)
	Set conRepeticao	= ""
	Set flagPrimeira	= 1
	Set mesAtual 			= +$Piece($ZDate(dataInicial,4),"/",2)
	If (pDataInicial 	'= dataInicial) {
		Set dataInicial = pDataInicial 	
	}
	;
	Set objWWW0121 								= $Get(^WWW0121(YM, YM, pCodUnidade, 1))
	Set objVARSalasAtendimentos 	= $Get(^VARSalasAtendimentos(YM, pCodSala, 1))
	Set segundaSextaInicial = $$$WWW0121HorAberturaSegSexta(objWWW0121)
	Set segundaSextaFinal 	= $$$WWW0121HorFechamentoSegSexta(objWWW0121)
	Set funcSabados		 			= $$$WWW0121FuncionaSabados(objWWW0121)
	Set funcSabInicial 			= $$$WWW0121HorAberturaSabados(objWWW0121)
	Set funcSabFinal 				= $$$WWW0121HorFechamentoSabados(objWWW0121)
	Set funcDomingos 				= $$$WWW0121FuncionaDomingos(objWWW0121)
	Set funcDomInicial 			= $$$WWW0121HorAberturaDomingos(objWWW0121)
	Set funcDomFinal 				= $$$WWW0121HorFechamentoDomingos(objWWW0121)
	If ($$$VARSalasAtendimentosHorariodeAberturaSegundaa(objVARSalasAtendimentos) '= "") {
		Set segundaSextaInicial = $$$VARSalasAtendimentosHorariodeAberturaSegundaa(objVARSalasAtendimentos)
		Set segundaSextaFinal 	= $$$VARSalasAtendimentosHorariodeFechamentoSegund(objVARSalasAtendimentos)
		Set funcSabados		 			= $$$VARSalasAtendimentosFuncionaaosSabados(objVARSalasAtendimentos)
		Set funcSabInicial 			= $$$VARSalasAtendimentosHorariodeAberturaSabados(objVARSalasAtendimentos)
		Set funcSabFinal 				= $$$VARSalasAtendimentosHorariodeFechamentoSabado(objVARSalasAtendimentos)
		Set funcDomingos 				= $$$VARSalasAtendimentosFuncionaaosDomingos(objVARSalasAtendimentos)
		Set funcDomInicial 			= $$$VARSalasAtendimentosHorariodeAberturaDomingos(objVARSalasAtendimentos)
		Set funcDomFinal 				= $$$VARSalasAtendimentosHorariodeFechamentoDoming(objVARSalasAtendimentos)
	}
	;
	For data = dataInicial : 1 : dataFinal {
		;
		If ($Data(^VARDiasUnidadeNaoFunciona(YM,pCodUnidade,data,1))) Continue
		If (funcSabados = 0 && ($ZDate(data,10) = 6)) Continue
		If (funcDomingos = 0 && ($ZDate(data,10) = 0)) Continue
		;
		If (tipoRepeticao = 2) { ;Repetição Semanal
			If (repetirCada > 0 && ($ZDate(data,10) = 0)) {
				Set conRepeticao = conRepeticao + 1
				If (conRepeticao <= repetirCada && (flagPrimeira = 0)) {
					Set data = data + 6
					Continue	
					Set conRepeticao = 0
				}
				Set flagPrimeira = 0
				Set conRepeticao = 0
			}
			If ((nosDias '= "") && ((";"_nosDias_";") '[ (";"_$ZDate(data,10)_";"))) Continue 
		}
		If (tipoRepeticao = 3) { ;Mensal
			If (repetirCada > 0 && (+$Piece($ZDate(data,4),"/",2) '= mesAtual)) {
				Set conRepeticao = conRepeticao + 1
				If (conRepeticao <= repetirCada) {
					Set data = $$GetEndOfMonth^COMUtilDate(data)
					Continue	
				}
				Set conRepeticao	= 0
			}
		}
		Set mesAtual = +$Piece($ZDate(data,4),"/",2)
		For hora = horaInicial : tempoAtend : (horaFinal-tempoAtend) {
		
			If ($ZDate(data,10) = 6) {
				If (hora < funcSabInicial) Continue
				If (hora > funcSabFinal) Continue
			}ElseIf ($ZDate(data,10) = 0) {
				If (hora < funcDomInicial) Continue
				If (hora > funcDomFinal) Continue
			}Else{ 
				If (hora < segundaSextaInicial) Continue
				If (hora > segundaSextaFinal) Continue
			}
		
		
			Set objeto = ""
			Set $$$MEDProviderAgendaHorarioReferenciaPai(objeto) 			= pIdAgenda
			Set $$$MEDProviderAgendaHorarioTempodeAtendimento(objeto) = tempoAtend
			Set strStatus = $$$Save("MEDProviderAgendaHorario", pCodProfissional_$$$COMMA_data_$$$COMMA_hora, objeto, $$$YES)
			Quit:$$$ISERR(strStatus)
		}
		Quit:$$$ISERR(strStatus)
	}
	Return strStatus]]></Implementation>
</Method>

<Method name="validaDuplicidade">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	/*
	ATENÇÃO: Caso de alteração acertar a Rotina de Importação
	*/
	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Set strStatus 	= $$$OK
	Set strMensagem = ""
	Try{
		Set dataAtual 				= +$Horolog
		Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
		Set pSequenciaAgenda 	= $Get(%request.Data("pSequenciaAgenda",1))
		Set pObjProfissionais = $Get(%request.Data("pObjProfissionais",1))
		Set pTipoRepeticao		= $Get(%request.Data("pTipoRepeticao",1))
		Set pNosDias					= $Replace($Get(%request.Data("pNosDias",1)),",",";")
		Set pHoraInicio				= $Get(%request.Data("pHoraInicio",1))
		Set pHoraFim					= $Get(%request.Data("pHoraFim",1))
		Set pTempoAtendimento = $Get(%request.Data("pTempoAtendimento",1))
		Set pRestricaoGeral		= $Replace($Get(%request.Data("pRestricaoGeral",1)),",",";")
		Set YBED 							= $Get(%request.Data("YBED",1))
		Set pObjProfissionais = [].%FromJSON(pObjProfissionais)
		;
		Set profDataInicio 	= $ZDateH($Piece(pObjProfissionais.profDataInicio,"T",1),3)
		Set profDataFinal 	= pObjProfissionais.profDataFinal
		If (profDataFinal '= "") {
			Set profDataFinal = $ZDateH(profDataFinal,3)
		}Else{
			If (pObjProfissionais.profTerminoQtde '= "") {
				Set profDataFinal = profDataInicio + pObjProfissionais.profTerminoQtde
			}Else{
				Set profDataFinal = profDataInicio
			}
		}
		;
		Set dataInicial 	= profDataInicio
		Set dataFinal			= profDataFinal
		Set horaInicial 	= $ZTimeH(pHoraInicio,2)
		Set horaFinal 		= $ZTimeH(pHoraFim,2)
		Set tempoAtend 		= $ZTimeH(pTempoAtendimento,2)
		Set tipoRepeticao = pTipoRepeticao
		Set repetirCada 	= pObjProfissionais.profRepetirCada
		Set nosDias				= pNosDias
		;
		Set conRepeticao	= ""
		Set flagPrimeira	= 1
		Set mesAtual 			= +$Piece($ZDate(dataInicial,4),"/",2)
		;
		Set profUnidade		= pObjProfissionais.profUnidade
		Set profLocal			= pObjProfissionais.profLocal
		Set countSala = 0, zGrupoProf = ""
		&SQL(
			Select Count(*), CodigoGrupo Into :countSala, :zGrupoProf From SQLUser.SQLUser.VARGrupoAgendamentoLocAtend
			Where Company = 0 And Unidade = :profUnidade And Sala = :profLocal
		)
		If (countSala > 0) {
			Set strStatus 	= '$$$OK
			Set strMensagem = "Sala/Leito já cadastrado para outro procedimento "_$$GetDescGrupoAgendamento^VARSQL(zGrupoProf)_"."
			Quit
		}
		;
		If (pSequenciaAgenda '= "") {
			Set objeto = $Get(^MEDProviderAgenda(YM, pCodProfissional, pSequenciaAgenda, 1))
			If (profDataFinal < $$$MEDProviderAgendaDataFinal(objeto)) {
				Quit
			}Else{
				Set dataInicial = $$$MEDProviderAgendaDataFinal(objeto) + 1
			}	
		}
		;
		For data = dataInicial : 1 : dataFinal {
			If (tipoRepeticao = 2) { ;Repetição Semanal
				If (repetirCada > 0 && ($ZDate(data,10) = 0)) {
					Set conRepeticao = conRepeticao + 1
					If (conRepeticao <= repetirCada && (flagPrimeira = 0)) {
						Set data = data + 6
						Continue	
						Set conRepeticao = 0
					}
					Set flagPrimeira = 0
					Set conRepeticao = 0
				}
				If ((nosDias '= "") && ((";"_nosDias_";") '[ (";"_$ZDate(data,10)_";"))) Continue 
			}
			If (tipoRepeticao = 3) { ;Mensal
				If (repetirCada > 0 && (+$Piece($ZDate(data,4),"/",2) '= mesAtual)) {
					Set conRepeticao = conRepeticao + 1
					If (conRepeticao <= repetirCada) {
						Set data = $$GetEndOfMonth^COMUtilDate(data)
						Continue	
					}
					Set conRepeticao	= 0
				}
			}
			
			Set mesAtual = +$Piece($ZDate(data,4),"/",2)
			For hora = horaInicial : tempoAtend : (horaFinal-tempoAtend) {
				;
				Set meuSQL = "Select DatadeAtendimento From SQLUser.MEDProviderAgendaHorario "
				Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
				Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_data_"' " 
				Set meuSQL = meuSQL _ "And ( HoradeAtendimento BetWeen "_hora_" And "_(hora+(tempoAtend))_" "
				Set meuSQL = meuSQL _ "Or (HoradeAtendimento+(TempodeAtendimento-1)) BetWeen "_hora_" And "_(hora+tempoAtend)_")"
				Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
				Do rSet.%Next()
				If (rSet.%ROWCOUNT '= 0) {
					Set strStatus 	= '$$$OK
					Set strMensagem = "Dados informado irá gerar conflito para o dia "_$ZDate(rSet.%Get("DatadeAtendimento"),4)_", favor analisar."
					Quit
				}					
				;
				Set meuSQL = "Select Top 1 Hor.CodigoProfissional "
				Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As Hor, "
				Set meuSQL = meuSQL _ "SQLUser.MEDProviderAgenda As Age "
				Set meuSQL = meuSQL _ "Where Hor.Company = 0 And Age.Company = 0 "
				Set meuSQL = meuSQL _ "And Age.CodigoProfissional = Hor.CodigoProfissional "
				Set meuSQL = meuSQL _ "And Age.Sequencia = Hor.ReferenciaPai "
				Set meuSQL = meuSQL _ "And Hor.DatadeAtendimento = '"_data_"' " 
				Set meuSQL = meuSQL _ "And (Hor.HoradeAtendimento BetWeen "_hora_" And "_(hora+(tempoAtend))_" "
				Set meuSQL = meuSQL _ "Or (Hor.HoradeAtendimento+(Hor.TempodeAtendimento-1)) BetWeen "_hora_" And "_(hora+tempoAtend)_")"
				Set meuSQL = meuSQL _ "And Age.Local1 = '"_profLocal_"' "
				Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
				Do rSet.%Next()
				If (rSet.%ROWCOUNT '= 0) {
					Set strStatus 	= '$$$OK
					Set strMensagem = "Local já reservado para o Profissional "_$$SQLGetProviderName^VARSQL(rSet.%Get("CodigoProfissional"))_", favor analisar."
					Quit
				}					
				Quit:strStatus'=$$$OK
			}
			Quit:strStatus'=$$$OK
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
	}
	Set retorno = {}
	Set retorno.status 		= strStatus
	Set retorno.mensagem 	= strMensagem
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarAgenda">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pDataInicio 			= $Get(%request.Data("pDataInicio",1))
	;
	Set xDataIniSemana = pDataInicio - $ZDate(pDataInicio,10)
	Set xDataFimSemana = xDataIniSemana + 6
	;
	Set (menorTempoAtend, maiorTempoAtend, variacaoTempoAtend)	= 0
	Do ..GetTempoAtendimentoLista(pCodProfissional, xDataIniSemana, xDataFimSemana, 
																.menorTempoAtend, .maiorTempoAtend, .variacaoTempoAtend)
	;
	kill colunas
	Set meuSQL = "Select DatadeAtendimento, ReferenciaPai, "
	Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai) As Descricao, "
	Set meuSQL = meuSQL _ "$$GetTipoGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai) As Tipo "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario Where Company = 0 "
	Set meuSQL = meuSQL _ "And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
	Set meuSQL = meuSQL _ "Group By $$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai), "
	Set meuSQL = meuSQL _ "DatadeAtendimento Order By DatadeAtendimento, "
	Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai)"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set datadeAtendimento = rSet.%Get("DatadeAtendimento")
		Set descricao 				= rSet.%Get("Descricao")
		Set referenciaPai			= rSet.%Get("ReferenciaPai")
		Set tipo 							= $ZConvert(rSet.%Get("Tipo"),"U")
		Set sequencia 				= $Order(colunas("Seq", datadeAtendimento, ""),-1) + 1
		Set colunas("Seq", datadeAtendimento, sequencia) = descricao_Y_tipo_Y_referenciaPai
		Set colunas("Desc", datadeAtendimento, descricao) = sequencia
	}
	;
	Set listRetorno 	= {}
	Set arrayDados 		= []
	Set arraySummary	= []
	;
	If ('$Data(colunas)) {
		Set arrayColunas = []
		Set listColunas = {"dataField": "horadeAtendimento", "caption": "Hora", "alignment": "center", "minWidth": 500}
		Do arrayColunas.%Push(listColunas)
		Set listRetorno.Columns = arrayColunas
		Set listDados = {"horadeAtendimento": "Sem dados cadastrado"}
		Do arrayDados.%Push(listDados)
		Set listRetorno.Dados 	= arrayDados
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	;
	;Montar Columns - dxDataGrid
	Set arrayColunas = []
	Set listColunas = {"dataField": "horadeAtendimento", "caption": "Hora", "alignment": "center", "width": 100}
	Do arrayColunas.%Push(listColunas)
	Set ultimoDataField = ""
	For data = xDataIniSemana : 1 : xDataFimSemana{
		If ($Data(colunas("Seq", data))) {
			Set sequencia = "", arrayCaption = []
			For {
				Set sequencia = $Order(colunas("Seq", data, sequencia))	
				Quit:sequencia=""
				Set listColunas = {}
				Set listColunas.dataField = $ZDate(data,4)_"C"_sequencia
				Set ultimoDataField				= $ZDate(data,4)_"C"_sequencia
				Set listColunas.caption		= $Piece(colunas("Seq", data, sequencia),Y,1) 
				Set listColunas.refPai		= $Piece(colunas("Seq", data, sequencia),Y,3) 
				Set listColunas.tipo			= $Piece(colunas("Seq", data, sequencia),Y,2) 
				Set listColunas.alignment = "center"
				Set listColunas.minWidth 	= 130
				Set listColunas.descosid 	= 0
				Set listColunas.dataAtual = +$Horolog
				Set listColunas.dataAgend = +data
				Set listColunas.descosid 	= 0
				Do arrayCaption.%Push(listColunas)
			}
			Set listColunas = {}
			Set listColunas.caption 	= $ZDate(data,4)
			Set listColunas.alignment	= "center"
			Set listColunas.tipo			= ""
			Set listColunas.refPai		= "" 
			Set listColunas.columns		= arrayCaption
			Set listColunas.dataAtual = +$Horolog
			Set listColunas.dataAgend = +data
			Set listColunas.descosid 	= 0
			Do arrayColunas.%Push(listColunas)
		}Else{
			Set listColunas = {}
			Set listColunas.descosid 	= 1
			Set listColunas.dataField = $ZDate(data,4)
			Set ultimoDataField				= $ZDate(data,4)
			Set listColunas.refPai		= ""
			Set listColunas.alignment = "center"
			Set listColunas.minWidth 	= 130
			Set listColunas.dataAtual = +$Horolog
			Set listColunas.dataAgend = +data
			Do arrayColunas.%Push(listColunas)
		}
	}
	;
	;Summary
	Set listSummary = {}
	Set listSummary.name					= "SelectedRowsSummary"
	Set listSummary.showInColumn	= ultimoDataField
	Set listSummary.displayFormat	= "Ocupação: {0}"
	Set listSummary.summaryType 	= "custom"
	Do arraySummary.%Push(listSummary)
	;
	Set qtdeAgenda = 0
	Set qtdeAgendaReservado = 0
	;
	For hora = menorTempoAtend : variacaoTempoAtend : maiorTempoAtend {
		Kill dados
		Set meuSQL = "Select DatadeAtendimento, Admissao, TempodeAtendimento, HoradeAtendimento, ReferenciaPai, "
		Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai) As Descricao "
		Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario Where Company = 0 "
		Set meuSQL = meuSQL _ "And CodigoProfissional = '"_pCodProfissional_"' "
		Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
		Set meuSQL = meuSQL _ "And HoradeAtendimento = '"_hora_"' "
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
		While(rSet.%Next()){
			Set datadeAtendimento = rSet.%Get("DatadeAtendimento")
			Set horadeAtendimento = rSet.%Get("HoradeAtendimento")
			Set descricao 				= rSet.%Get("Descricao")
			Set numAdmissao				= rSet.%Get("Admissao")
			Set tempoAtentimento	= rSet.%Get("TempodeAtendimento")
			Set referenciaPai			= rSet.%Get("ReferenciaPai")
			Set sequencia					= colunas("Desc", datadeAtendimento, descricao)
			Set codUnidade = $$GetAgendaUnidade^VARSQL(pCodProfissional, referenciaPai)
			;
			Set backGround = "#d9ffd9"
			If (numAdmissao '= "") {
				Set backGround = "#ddedff"
			}	
			If ($Data(^MEDProviderAgendaAusencia(YM,pCodProfissional,datadeAtendimento))) {
				Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, datadeAtendimento, 1))
				If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
					Set backGround = "#ffcaca"
				}Else{
					If (horadeAtendimento >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
							(horadeAtendimento <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
						Set backGround = "#ffcaca"
					}
				}	
			}
			;
			If ($Data(^VARDiasUnidadeNaoFunciona(YM,codUnidade,datadeAtendimento,1))) {
				Set backGround = "#ffcaca"
			}
			;
			Set qtdeAgenda = qtdeAgenda + 1
			Set (nomePaciente, telefone) = ""
			If (numAdmissao '= "") {
				Set qtdeAgendaReservado = qtdeAgendaReservado + 1
				Set objMEDAdmission = $Get(^MEDAdmission(YM, numAdmissao, 1))
				Set codPaciente = $$$MEDAdmissionPatient(objMEDAdmission)
				Set nomePaciente = $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,17)
				Set telefone 		 = $$GetMEDPatientFone^VARSQL(codPaciente)
			}
			;		
			Set dados(rSet.%Get("DatadeAtendimento"), sequencia) = numAdmissao_Y_nomePaciente_Y_telefone
			Set $Piece(dadosColSpan(rSet.%Get("DatadeAtendimento"), sequencia),Y,1) = tempoAtentimento\variacaoTempoAtend
			Set $Piece(dadosColSpan(rSet.%Get("DatadeAtendimento"), sequencia),Y,2) = backGround
		}
		;
		Set listDados = {}
		Set listDados.horadeAtendimento	= $ZTime(hora,2)
		For data = xDataIniSemana : 1 : xDataFimSemana{
			If ($Data(colunas("Seq", data))) {
				Set sequencia = ""
				For {
					Set sequencia = $Order(colunas("Seq", data, sequencia))	
					Quit:sequencia=""
					If ($Data(dados(data,sequencia))) {
						;
						Set meuSQL = "Select Restricao From SQLUser.MEDProviderAgendaRestricao "
						Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
						Set meuSQL = meuSQL _ "And (IndicadorTodasDatas = 1 Or Datas Like '%"_data_"%') "
						Set meuSQL = meuSQL _ "And (IndicadorTodasHoras = 1 Or Horas Like '%"_hora_"%') "
						Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
						Do rSet.%Next()
						Set tProcedimento = ""
						If (rSet.%ROWCOUNT '= 0) {
							Set xRestricao = rSet.%Get("Restricao")
							For count = 1 : 1 : $Length(xRestricao,",") {
								Set tProcedimento = tProcedimento _ 
																		$Select(tProcedimento="":"",1:", ") _
																		$$SQLGetDescricaoProduto^VARSQL($Piece(xRestricao,",",count))
							}
						}
						;
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia,dados(data, sequencia))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"rowSpan",$Piece(dadosColSpan(data, sequencia),Y,1))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround",$Piece(dadosColSpan(data, sequencia),Y,2))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao",tProcedimento)
					}Else{
						If ($Data(dadosColSpan(data, sequencia))) {
							Set $Piece(dadosColSpan(data, sequencia),Y,1) = $Piece(dadosColSpan(data, sequencia),Y,1) - 1	
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"rowSpan",$Piece(dadosColSpan(data, sequencia),Y,1))
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround",$Piece(dadosColSpan(data, sequencia),Y,2))
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao","")
							If ($Piece(dadosColSpan(data, sequencia),Y,1) = 1) {
								Kill dadosColSpan(data, sequencia)
							}
						}Else{
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"rowSpan",1)
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround","#ffffff")
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao","")
						}
					}
				}
			}Else{
				Do listDados.%Set($ZDate(data,4),"A")
				Do listDados.%Set($ZDate(data,4)_"rowSpan","1")
			}
		}
		Do arrayDados.%Push(listDados)
	}
	;
	Set percOcupacao = 0
	If (qtdeAgenda>0)	Set percOcupacao = $FNumber((qtdeAgendaReservado*100)/qtdeAgenda,"",0)
	;
	Set listRetorno.Columns 			= arrayColunas
	Set listRetorno.Dados 				= arrayDados
	Set listRetorno.Summary 			= arraySummary
	Set listRetorno.PercOcupacao	= percOcupacao
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetTempoAtendimentoLista">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProfissional,pDataInicio,pDataFim,*rMenorTempoAtend,*rMaiorTempoAtend,*rVariacaoTempoAtend</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 										= 0
	Set Y 										= "~"
	Set rMenorTempoAtend			= 0
	Set rMaiorTempoAtend			= 0
	Set rVariacaoTempoAtend		= 0
	;
	Set meuSQL($Increment(count)) = "Select TempodeAtendimento, ReferenciaPai," 
	Set meuSQL($Increment(count)) = "("
		Set meuSQL($Increment(count)) = "Select Min(HoradeAtendimento) From SQLUser.MEDProviderAgendaHorario"
		Set meuSQL($Increment(count)) = "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"'"
		Set meuSQL($Increment(count)) = "And DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFim_"'"
	Set meuSQL($Increment(count)) = ") As MinHoraAtendimento," 
	Set meuSQL($Increment(count)) = "("
		Set meuSQL($Increment(count)) = "Select Max(HoradeAtendimento) From SQLUser.MEDProviderAgendaHorario"
		Set meuSQL($Increment(count)) = "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"'"
		Set meuSQL($Increment(count)) = "And DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFim_"'"
	Set meuSQL($Increment(count)) = ") As MaxHoraAtendimento"
	Set meuSQL($Increment(count)) = "From SQLUser.MEDProviderAgendaHorario"
	Set meuSQL($Increment(count)) = "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"'"
	Set meuSQL($Increment(count)) = "And DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFim_"'"
	Set meuSQL($Increment(count)) = "Group By ReferenciaPai, TempodeAtendimento Order BY TempodeAtendimento"
	Set meuSQL 	= $Order(meuSQL(""),-1)
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		If (rMenorTempoAtend = 0 ||(rMenorTempoAtend > rSet.%Get("MinHoraAtendimento"))) {
			Set rMenorTempoAtend = +rSet.%Get("MinHoraAtendimento")
		}
		If (rMaiorTempoAtend < (rSet.%Get("MaxHoraAtendimento")+rSet.%Get("TempodeAtendimento"))) {
			Set rMaiorTempoAtend = +rSet.%Get("MaxHoraAtendimento")+rSet.%Get("TempodeAtendimento")
		}
		Set rVariacaoTempoAtend = +..CalculoMMC()
	}
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="CalculoMMC">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Return 600]]></Implementation>
</Method>

<Method name="GetCadastrarAusencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pData				 			= $Get(%request.Data("pData",1))
	;
	If (pData = "") {
		Set listRetorno = {}
		Set listRetorno.data 						= ""
		Set listRetorno.indicadordoDia 	= 0
		Set listRetorno.horaInicial 		= ""
		Set listRetorno.horaFinal 			= ""
		Set listRetorno.descricao 			= ""
		Set listRetorno.flagExcluir 		= 0
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set pData = $ZDateH(pData,3)
	;
	Set objeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, pData, 1))
	;
	Set indicadordoDia 	= $$$MEDProviderAgendaAusenciaIndicadordoDia(objeto)
	Set horaInicial			= $$$MEDProviderAgendaAusenciaHoraInicial(objeto)
	Set horaFinal 			= $$$MEDProviderAgendaAusenciaHoraFinal(objeto)
	Set descricao				= $$$MEDProviderAgendaAusenciaDescricao(objeto)
	;
	Set flagExcluir = 1
	if (objeto = "" || (pData <= +$Horolog)) Set flagExcluir = 0
	;
	Set listRetorno = {}
	Set listRetorno.data 						= $ZDate(pData,4)
	Set listRetorno.indicadordoDia 	= +indicadordoDia
	Set listRetorno.horaInicial 		= $Select(horaInicial="":"",1:$ZTime(horaInicial,2))
	Set listRetorno.horaFinal 			= $Select(horaFinal="":"",1:$ZTime(horaFinal,2))
	Set listRetorno.descricao 			= descricao
	Set listRetorno.flagExcluir 		= flagExcluir
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarCadastrarAusencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pData				 			= $ZDateH($Get(%request.Data("pData",1)),3)
	Set pIndicadordoDia		= $Get(%request.Data("pIndicadordoDia",1))
	Set pHoraInicial			= $Get(%request.Data("pHoraInicial",1))
	Set pHoraFinal				= $Get(%request.Data("pHoraFinal",1))
	Set pDescricao				= $Get(%request.Data("pDescricao",1))
	;
	If (pIndicadordoDia = "true") Set pIndicadordoDia = 1
	Else  Set pIndicadordoDia = 0
	;
	Set objeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, pData, 1))
	;
	Set $$$MEDProviderAgendaAusenciaIndicadordoDia(objeto)	= pIndicadordoDia
	Set $$$MEDProviderAgendaAusenciaHoraInicial(objeto)			= $Select(pHoraInicial="":"",1:$ZTimeH(pHoraInicial,2))
	Set $$$MEDProviderAgendaAusenciaHoraFinal(objeto)				= $Select(pHoraFinal="":"",1:$ZTimeH(pHoraFinal,2))
	Set $$$MEDProviderAgendaAusenciaDescricao(objeto)				= pDescricao
	If ($$$MEDProviderAgendaAusenciaCriadoEm(objeto) = "") {
		Set $$$MEDProviderAgendaAusenciaCriadoEm(objeto) 		= $Horolog		
		Set $$$MEDProviderAgendaAusenciaCriadoPor(objeto) 	= YBED		
	}Else{
		Set $$$MEDProviderAgendaAusenciaAlteradoEm(objeto) 	= $Horolog		
		Set $$$MEDProviderAgendaAusenciaAlteradoPor(objeto) = YBED		
	}
	Set strStatus = $$$Save("MEDProviderAgendaAusencia", pCodProfissional_$$$COMMA_pData, objeto, $$$YES)
	;
	Set meuSQL = "Select * From SQLUser.MEDProviderAgendaHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_pData_"' And Admissao Is Not Null "
	If (pIndicadordoDia '= 1)	{
		Set meuSQL = meuSQL _ "And HoradeAtendimento BetWeen '"_$ZTimeH(pHoraInicial,2)_"' And '"_$ZTimeH(pHoraFinal,2)_"'"
	}
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
 	While (rSet.%Next()) {
		Set idIncons = $$GetNextNumber^COMUtils("VARAgendamentoInconsistencia","")
		Set objeto = $Get(^VARAgendamentoInconsistencia(YM, idIncons, 1))
		Set $$$VARAgendamentoInconsistenciaDataGeracao(objeto) 	= +$Horolog
		Set $$$VARAgendamentoInconsistenciaHoraGeracao(objeto) 	= $Piece($Horolog,",",2)
		Set $$$VARAgendamentoInconsistenciaCriadoPor(objeto) 		= YBED
		Set $$$VARAgendamentoInconsistenciaAdmissao(objeto) 		= rSet.%Get("Admissao")
		Set $$$VARAgendamentoInconsistenciaMotivo(objeto) 			= pDescricao
		Set strStatus = $$$Save("VARAgendamentoInconsistencia", idIncons, objeto, $$$YES)
	}
	;
	Write strStatus
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ExcluirCadastrarAusencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pData				 			= $ZDateH($Get(%request.Data("pData",1)),3)
	;
	Set strStatus = $$$Kill("MEDProviderAgendaAusencia", pCodProfissional_$$$COMMA_pData)
	;
	Set meuSQL = "Select * From SQLUser.MEDProviderAgendaHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_pData_"' And Admissao Is Not Null "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
 	While (rSet.%Next()) {
		Set numAdmissao = $Replace($Get(%request.Data("Admissao")),"/"," ")
		If ($Data(^VARAgendamentoInconsistencias(0,10,numAdmissao))) {
			Set idIncons = $Order(^VARAgendamentoInconsistencias(0,10,numAdmissao,""))
			Set strStatus = $$$Kill("VARAgendamentoInconsistencia", idIncons)
		}
	}
	;
	Write strStatus
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetCadastrarRestricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pData				 			= $Get(%request.Data("pData",1))
	Set pSeqId						= $Get(%request.Data("pSeqId",1))
	;
	Set objeto = $Get(^MEDProviderAgenda(YM, pCodProfissional, pSeqId, 1))
	;
	Set descRestricaoGeral = ""
	For count = 1 : 1 : $Length($$$MEDProviderAgendaRestricaoGeral(objeto),";") {
			Set descRestricaoGeral = descRestricaoGeral _ 
															$Select(descRestricaoGeral="":"",1:" | ") _
															$$SQLGetDescricaoProduto^VARSQL($Piece($$$MEDProviderAgendaRestricaoGeral(objeto),";",count))
		 	
	}
	Set descNosDias = ""
	For count = 1 : 1 : $Length($$$MEDProviderAgendaNosDias(objeto),";") {
			Set descNosDias = descNosDias _ 
												$Select(descNosDias="":"",1:" | ") _
												$Select(
													$Piece($$$MEDProviderAgendaNosDias(objeto),";",count)=0:"Domingo",
													$Piece($$$MEDProviderAgendaNosDias(objeto),";",count)=1:"Segunda",
													$Piece($$$MEDProviderAgendaNosDias(objeto),";",count)=2:"Terça",
													$Piece($$$MEDProviderAgendaNosDias(objeto),";",count)=3:"Quarta",
													$Piece($$$MEDProviderAgendaNosDias(objeto),";",count)=4:"Quinta",
													$Piece($$$MEDProviderAgendaNosDias(objeto),";",count)=5:"Sexta",
													1:"Sabado"
												)
	}
	;
	Set listRetorno 										= {}
	Set listRetorno.unidade 						= $$SQLGetLocationName^VARSQL($$$MEDProviderAgendaUnidade(objeto))
	Set listRetorno.grupoAgendamento 		= $$GetDescGrupoAgendamento^VARSQL($$$MEDProviderAgendaGrupoAgendamento(objeto))
	Set listRetorno.tempodeAtendimento 	= $ZTime($$$MEDProviderAgendaTempodeAtendimento(objeto),2)
	Set listRetorno.restricaoGeral 			= descRestricaoGeral
	Set listRetorno.local 							= $$GetDescSalasAtendimentos^VARSQL($$$MEDProviderAgendaLocal1(objeto))
	Set listRetorno.dataInicial 				= $ZDate($$$MEDProviderAgendaDataInicial(objeto),4)
	Set listRetorno.dataFinal 					= $ZDate($$$MEDProviderAgendaDataFinal(objeto),4)
	Set listRetorno.horaInicial 				= $ZTime($$$MEDProviderAgendaHoraInicial(objeto),2)
	Set listRetorno.horaFinal 					= $ZTime($$$MEDProviderAgendaHoraFinal(objeto),2)
	Set listRetorno.horaIntervaloInicio = $Select($$$MEDProviderAgendaIntervaloInicio(objeto)="":"",1:$ZTime($$$MEDProviderAgendaIntervaloInicio(objeto),2))
	Set listRetorno.horaIntervaloFim 		= $Select($$$MEDProviderAgendaIntervaloFim(objeto)="":"",1:$ZTime($$$MEDProviderAgendaIntervaloFim(objeto),2))
	Set listRetorno.repetiraCada 				= $$$MEDProviderAgendaRepetiraCada(objeto)
	Set listRetorno.nosDias							= descNosDias
	;
	Set arrayRestricao = []
	Set meuSQL = "Select ItemNumber, SearchName,DescItemPedido From SQLUser.INART Where Company = 0 "
	Set meuSQL = meuSQL _ "And GrupodeAgendamento = '"_$$$MEDProviderAgendaGrupoAgendamento(objeto)_"' "
	Set meuSQL = meuSQL _ "And ItemNumber Not In ('"_$Replace($$$MEDProviderAgendaRestricaoGeral(objeto),";","','")_"') "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Set listDados.Codigo		= rSet.%Get("ItemNumber")
		Set listDados.Descricao = $Select(rSet.%Get("DescItemPedido")="":rSet.%Get("SearchName"),1:rSet.%Get("DescItemPedido"))
		Do arrayRestricao.%Push(listDados)
	}
	Set listRetorno.restricao = arrayRestricao
	;
	;
	Set arrayRestricao = []
	Set meuSQL = "Select ItemNumber, SearchName,DescItemPedido From SQLUser.INART Where Company = 0 "
	Set meuSQL = meuSQL _ "And GrupodeAgendamento = '"_$$$MEDProviderAgendaGrupoAgendamento(objeto)_"' "
	Set meuSQL = meuSQL _ "And ItemNumber Not In ('"_$Replace($$$MEDProviderAgendaRestricaoGeral(objeto),";","','")_"') "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Set listDados.Codigo		= rSet.%Get("ItemNumber")
		Set listDados.Descricao = $Select(rSet.%Get("DescItemPedido")="":rSet.%Get("SearchName"),1:rSet.%Get("DescItemPedido"))
		Do arrayRestricao.%Push(listDados)
	}
	Set listRetorno.restricao = arrayRestricao
	;
	Set arrayDatas = []
	Set meuSQL = "Select * From SQLUser.MEDProviderAgendaHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And ReferenciaPai = '"_pSeqId_"' And DatadeAtendimento >= '"_+$Horolog_"' "
	Set meuSQL = meuSQL _ "Group By DatadeAtendimento"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Set listDados.dataInterna = rSet.%Get("DatadeAtendimento")
		Set listDados.data = $ZDate(rSet.%Get("DatadeAtendimento"),4)
		Do arrayDatas.%Push(listDados)
	}
	Set listRetorno.datas = arrayDatas
	;
	Set arrayHoras = []
	Set meuSQL = "Select * From SQLUser.MEDProviderAgendaHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And ReferenciaPai = '"_pSeqId_"' "
	Set meuSQL = meuSQL _ "Group By HoradeAtendimento"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Set listDados.horaInterna = rSet.%Get("HoradeAtendimento")
		Set listDados.hora = $ZTime(rSet.%Get("HoradeAtendimento"),2)
		Do arrayHoras.%Push(listDados)
	}
	Set listRetorno.horas = arrayHoras
	;
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListaRestricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pSeqId 						= $Get(%request.Data("pSeqId",1))
	;
	Set arrayRetorno = []
	Set sequencia = ""
	For {
		Set sequencia = $Order(^MEDProviderAgendaRestricao(YM, pCodProfissional, pSeqId, sequencia))
		Quit:sequencia=""
		
		Set objeto = $Get(^MEDProviderAgendaRestricao(YM, pCodProfissional, pSeqId, sequencia, 1))
		Set restricao			= $$$MEDProviderAgendaRestricaoRestricao(objeto)						 
		Set dataTodas			= $$$MEDProviderAgendaRestricaoIndicadorTodasDatas(objeto)	
		Set data 					= $$$MEDProviderAgendaRestricaoDatas(objeto) 								 
		Set horarioTodos	=	$$$MEDProviderAgendaRestricaoIndicadorTodasHoras(objeto) 	 
		Set horario 			= $$$MEDProviderAgendaRestricaoHoras(objeto) 								 		
		Set nosDias				= $$$MEDProviderAgendaNosDias(objeto) 

		Set tProcedimento = ""
		For count = 1 : 1 : $Length(restricao,",") {
			Set tProcedimento = tProcedimento _ 
													$Select(tProcedimento="":"",1:", ") _
													$$SQLGetDescricaoProduto^VARSQL($Piece(restricao,",",count))
		}
		Set tData = ""
		If (dataTodas = 1) {
			Set tData = "'Todas'"
		}Else{
			For count = 1 : 1 : $Length(data,",") {
				If ($Piece(data,",",count) = "") Continue
				Set tData = tData _ 
										$Select(tData="":"",1:", ") _
										$ZDate($Piece(data,",",count),4)
			}
		}
		Set tHora = ""
		If (horarioTodos = 1) {
			Set tHora = "'Todas'"
		}Else{
			For count = 1 : 1 : $Length(horario,",") {
				Set tHora = tHora _ 
										$Select(tHora="":"",1:", ") _
										$ZTime($Piece(horario,",",count),2)
			}
		}
		Set tNosDias = "", xQtdeNosDias = $L(nosDias,";")

		For count = 1 : 1 : $L(nosDias,";") {
			Set dia	= $Piece(nosDias,";",count)
			Set dDia = $Select(dia=0:"Domingo",dia=1:"Segunda",dia=2:"Terça",dia=3:"Quarta",dia=4:"Quinta",dia=5:"Sexta",1:"Sábado")
			Set tNosDias = tNosDias _
										 $Select(count>1:
										 	$Select($Length(nosDias,";")=1:"",1:
										 		$Select(count<$Length(nosDias,";"):", ",1:" de ")
										 	),1:"" 
										 ) _
										 dDia
										 
		}

		Set list = {}
		Set list.sequencia 				= sequencia
		Set list.restricaoHorario = "O(s) procedimento(s) "_tProcedimento_" não poderá(ão) ser agendados nos dia(s) "_tData_" "_
																$Select(nosDias'="":"de "_tNosDias,1:"")_" e horário(s) "_tHora_"."
		Do arrayRetorno.%Push(list)
	}	
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarCadastrarRestricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pSeqId 						= $Get(%request.Data("pSeqId",1))
	Set pRestricao 				= $Get(%request.Data("pRestricao",1))
	Set pDataTodas 				= $Get(%request.Data("pDataTodas",1))
	Set pData 						= $Get(%request.Data("pData",1))
	Set pHorarioTodos 		= $Get(%request.Data("pHorarioTodos",1))
	Set pHorario 					= $Get(%request.Data("pHorario",1))
	Set pNosDias					= $Replace($Get(%request.Data("pNosDias",1)),",",";")
	;
	If (pDataTodas = "true") Set pDataTodas = 1
	Else  Set pDataTodas = 0
	If (pHorarioTodos = "true") Set pHorarioTodos = 1
	Else  Set pHorarioTodos = 0
	;
	Set sequencia = $Order(^MEDProviderAgendaRestricao(YM, pCodProfissional, pSeqId, ""),-1) + 1
	Set objeto = $Get(^MEDProviderAgendaRestricao(YM, pCodProfissional, pSeqId, sequencia, 1))
	;
	Set $$$MEDProviderAgendaRestricaoRestricao(objeto)						= pRestricao
	Set $$$MEDProviderAgendaRestricaoIndicadorTodasDatas(objeto)	= pDataTodas
	Set $$$MEDProviderAgendaRestricaoDatas(objeto) 								= pData
	Set $$$MEDProviderAgendaRestricaoIndicadorTodasHoras(objeto) 	= pHorarioTodos
	Set $$$MEDProviderAgendaRestricaoHoras(objeto) 								= pHorario
	Set $$$MEDProviderAgendaRestricaoCriadoEm(objeto) 						= $Horolog
	Set $$$MEDProviderAgendaRestricaoCriadoPor(objeto) 						= YBED
	Set $$$MEDProviderAgendaNosDias(objeto)												= pNosDias

	Set strStatus = $$$Save("MEDProviderAgendaRestricao", pCodProfissional_$$$COMMA_pSeqId_$$$COMMA_sequencia, objeto, $$$YES)
	;
	Write strStatus
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ExcluirCadastrarRestricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProfissional,pSeqId,pSequencia,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= pYBED
	;
	Set strStatus = $$$Kill("MEDProviderAgendaRestricao", pCodProfissional_$$$COMMA_pSeqId_$$$COMMA_pSequencia)
	;
	Return strStatus]]></Implementation>
</Method>

<Method name="GetEditarAgenda">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pData				 			= $Get(%request.Data("pData",1))
	Set pSequencia				= $Get(%request.Data("pSequencia",1))
	Set pRestricao				= $Get(%request.Data("pRestricao",1))
	
	Set dataAtual 				= +$Horolog
	;
	Set listRetorno = {}
	Set listRetorno.selecionar = 0
	Set arrayDadosSelecionar = []
	;
	If (pSequencia = "") {
		Set meuSQL = "Select Count(*) As TotalSequencia, ReferenciaPai From SQLUser.MEDProviderAgendaHorario "
		Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
		Set meuSQL = meuSQL _ "And DatadeAtendimento >= '"_dataAtual_"' "
		If (pRestricao = 1) {
			Set meuSQL = meuSQL _ "And $$GetTipoGrupoAgendamentoViaAgenda^VARSQL('" _ 
														 pCodProfissional_"', ReferenciaPai) = 'CONSULTA' "	
		}
		Set meuSQL = meuSQL _ "Group By ReferenciaPai "
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
		While(rSet.%Next()){
			Set listDados = {}
			Set listDados.dataSelecionada	= pData
			Set listDados.totalSequencia	= rSet.%Get("TotalSequencia")	
			Set listDados.referenciaPai		= rSet.%Get("ReferenciaPai")
			Set objeto = $Get(^MEDProviderAgenda(YM, pCodProfissional, rSet.%Get("ReferenciaPai"), 1))
			Set listDados.unidade			= $$SQLGetLocationName^VARSQL($$$MEDProviderAgendaUnidade(objeto))	
			Set listDados.grupoAgend	= $$GetDescGrupoAgendamento^VARSQL($$$MEDProviderAgendaGrupoAgendamento(objeto))	
			Set listDados.data				= $ZDate($$$MEDProviderAgendaDataInicial(objeto),4) _" - "_ $ZDate($$$MEDProviderAgendaDataFinal(objeto),4)  
			Set listDados.hora				= $ZTime($$$MEDProviderAgendaHoraInicial(objeto),2) _" - "_ $ZTime($$$MEDProviderAgendaHoraFinal(objeto),2)
			Set pSequencia = rSet.%Get("ReferenciaPai")
			Do arrayDadosSelecionar.%Push(listDados)
		}
		If (arrayDadosSelecionar.%Size() > 1) {
			Set listRetorno.selecionar = 1
		}
		;If (pRestricao = 1) {
			Set listRetorno.selecionar = 1
		;}
	}
	If (listRetorno.selecionar = 0) {
		Set objeto = $Get(^MEDProviderAgenda(YM, pCodProfissional, pSequencia, 1))
		;
		Set rRestricaoGeral	= []
		Set xRestricaoGeral = $$$MEDProviderAgendaRestricaoGeral(objeto)
		For count = 1 : 1 : $Length(xRestricaoGeral,";"){
			Do rRestricaoGeral.%Push($Piece(xRestricaoGeral,";",count))				
		}
		;
		Set listRetorno.sequencia 					= pSequencia
		Set listRetorno.unidade 						= $$$MEDProviderAgendaUnidade(objeto)
		Set listRetorno.grupoAgendamento 		= $$$MEDProviderAgendaGrupoAgendamento(objeto)
		Set listRetorno.tempodeAtendimento 	= $ZTime($$$MEDProviderAgendaTempodeAtendimento(objeto),2)
		Set listRetorno.restricaoGeral 			= rRestricaoGeral
		Set listRetorno.local1 							= $$$MEDProviderAgendaLocal1(objeto)
		Do listRetorno.%Set("permiteEncaixe", $$$MEDProviderAgendaPermiteEncaixe(objeto), "String")
		Set listRetorno.qtdeEncaixe 				= $$$MEDProviderAgendaQtdeEncaixe(objeto)
		Set listRetorno.dataInicial 				= $ZDate($$$MEDProviderAgendaDataInicial(objeto),3)
		Set listRetorno.horaInicial 				= $ZTime($$$MEDProviderAgendaHoraInicial(objeto),2)
		Set listRetorno.horaFinal 					= $ZTime($$$MEDProviderAgendaHoraFinal(objeto),2)
		Set listRetorno.horaIntervaloInicio = $Select($$$MEDProviderAgendaIntervaloInicio(objeto)="":"",1:$ZTime($$$MEDProviderAgendaIntervaloInicio(objeto),2))
		Set listRetorno.horaIntervaloFim 		= $Select($$$MEDProviderAgendaIntervaloFim(objeto)="":"",1:$ZTime($$$MEDProviderAgendaIntervaloFim(objeto),2))
		Set listRetorno.repeticao 					= +$$$MEDProviderAgendaRepeticao(objeto)
		Set listRetorno.repetiraCada 				= $$$MEDProviderAgendaRepetiraCada(objeto)
		Set listRetorno.nosDias							= $Replace($$$MEDProviderAgendaNosDias(objeto),";",",")
		Set listRetorno.qtdeOcorrencia 			= $$$MEDProviderAgendaQtdeOcorrencia(objeto)
		Set listRetorno.dataFinal 					= $ZDate($$$MEDProviderAgendaDataFinal(objeto),3)
		Set listRetorno.bloqEdicaoeCancel 	= 0	
		if ($$$MEDProviderAgendaDataFinal(objeto) <= $Horolog) {
			Set listRetorno.bloqEdicaoeCancel = 1	
		}

	}
	;
	Set listRetorno.opcoes = arrayDadosSelecionar
	;
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="MenorDataFinal">
<ClassMethod>1</ClassMethod>
<FormalSpec>pData=""</FormalSpec>
<Implementation><![CDATA[	If (pData = "") Return ""
	If ($ZDateH(pData,3) < +$Horolog+1) Return $ZDate(+$Horolog+1,3)
	Return pData]]></Implementation>
</Method>

<Method name="ListarAgendaScheduler">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pDataInicio 			= $Get(%request.Data("pDataInicio",1))
	;
	Set xDataIniSemana = pDataInicio - $ZDate(pDataInicio,10)
	Set xDataFimSemana = xDataIniSemana + 6
	;
	&Sql(
		Select Min(HoradeAtendimento), Max(HoradeAtendimento) 
		Into :menorTempoAtend, :maiorTempoAtend
		From SQLUser.MEDProviderAgendaHorario 
		Where Company = 0 And CodigoProfissional = :pCodProfissional 
			And DatadeAtendimento BetWeen :xDataIniSemana And :xDataFimSemana
	)
	;
	Set (percOcupacao, qtdeAgendaReservado, qtdeAgenda) = 0
	Set grupo = "", countGrupo = 0
	Set arrayDados = []	
	Set meuSQL = "Select DatadeAtendimento, Admissao, TempodeAtendimento, HoradeAtendimento, ReferenciaPai, "
	Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai) As Descricao "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario Where Company = 0 "
	Set meuSQL = meuSQL _ "And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
	Set meuSQL = meuSQL _ "Order By DatadeAtendimento, HoradeAtendimento"
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set descricao 		= rSet.%Get("Descricao")
		Set numAdmissao 	= rSet.%Get("Admissao")
		Set dataAtend 		= rSet.%Get("DatadeAtendimento")
		Set horaAtend 		= rSet.%Get("HoradeAtendimento")
		Set tempoAtend 		= rSet.%Get("TempodeAtendimento")
		Set referenciaPai	= rSet.%Get("ReferenciaPai")
		Set qtdeAgenda 		= qtdeAgenda + 1

		Set codUnidade 	= $$GetAgendaUnidade^VARSQL(pCodProfissional, referenciaPai)
		Set codSala 		= $$GetCodSalasProfissional^VARSQL(pCodProfissional, dataAtend, horaAtend)

		Set descUnidade	= $$SQLGetLocationName^VARSQL(codUnidade)
		Set descSala		= $$GetDescSalasAtendimentos^VARSQL(codSala)

		Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
		Do GetAgendaIntervalo^VARSQL(pCodProfissional, referenciaPai)

		Set fDataAtend 	= $ZDate(dataAtend,4)
		Set fHrIniAtend = $ZTime(horaAtend,2)
		Set fHrFinAtend = $ZTime(horaAtend + tempoAtend,2)

		Set xCountGrupo = "L", descAusencia = ""	
		If (numAdmissao '= "") Set xCountGrupo = "A"
		If ($Data(^MEDProviderAgendaAusencia(YM,pCodProfissional,dataAtend))) {
			Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, dataAtend, 1))
			If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Set xCountGrupo = "E"
				Set descAusencia = $$$MEDProviderAgendaAusenciaDescricao(xObjeto)
			}Else{
				If (horaAtend >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
						(horaAtend <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
					Set xCountGrupo = "E"
					Set descAusencia = $$$MEDProviderAgendaAusenciaDescricao(xObjeto)
				}
			}	
		}
		If (rHoraIntervaloIni '= "") {
			If (horaAtend >= rHoraIntervaloIni && (horaAtend <= rhoraIntervaloFim))	{
				Set xCountGrupo = "E"
				Set descAusencia = "Intervalo"
			}
		}
		;
		If ($Data(^VARDiasUnidadeNaoFunciona(YM,codUnidade,dataAtend,1))) {
			Set xCountGrupo = "E"
		}
		Set (codPaciente, nomePaciente, telefone, dataHoraAdmissao, descProcedimento) = ""
		If (numAdmissao '= "") {
			Set qtdeAgendaReservado = qtdeAgendaReservado + 1
			Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
			Set objMEDAdmission 		= $Get(^MEDAdmission(YM, numAdmissao, 1))
			Set codPaciente 				= $$$MEDAdmissionPatient(objMEDAdmission)
			Set nomePaciente 				= $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
			Set telefone 		 				= $$GetMEDPatientFone^VARSQL(codPaciente)
			Set xProcedimento 			= ""
			If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
				Set (xSequenciaAgendamento, xProcedimento) = ""
				Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
				Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
				If (xSequenciaAgendamento'="") {
					Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
					Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
					Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
				}	
			}
			If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
			Set descProcedimento = $$SQLGetDescricaoProduto^VARSQL(xProcedimento)
		}

		If ($Data(^MEDProviderEncaixes(YM,10,pCodProfissional,dataAtend,horaAtend))){
			Set listDados 	= {}
			Set listDados.description				= "Unidade/Sala: "_descUnidade_"/"_descSala_$Char(10)_"Procedimento: "_$Select(descProcedimento="":descricao,1:descProcedimento)
			Set listDados.text 							= listDados.description
			If (descAusencia '= "") {
				Set listDados.text 						= descAusencia
			}
			If (nomePaciente '= "") {
				Set listDados.text 							= nomePaciente_" - "_telefone
			}
			Set listDados.descUnidade 			= descUnidade
			Set listDados.descSala 					= descSala
			Set listDados.numAdmissao 		 	= numAdmissao
			Set listDados.dataAtendimento  	= dataAtend
			Set listDados.codPaciente			 	= codPaciente
			Set listDados.nomePaciente		 	= nomePaciente
			Set listDados.telefone				 	= telefone
			Set listDados.descProcedimento	= descProcedimento
			Set listDados.descricao					= descricao
			Set listDados.dataHoraAdmissao 	= dataHoraAdmissao
			Set listDados.Ano							 	= +$Piece(fDataAtend,"/",3)
			Set listDados.Mes							 	= +$Piece(fDataAtend,"/",2) - 1
			Set listDados.Dia							 	= +$Piece(fDataAtend,"/",1)
			Set listDados.horaIni						= fHrIniAtend
			Set fHrFinAtend 								= $ZTime(horaAtend + (tempoAtend\2),2)
			Set listDados.horaFin 					= fHrFinAtend
			Set listDados.iHr							 	= +$Piece(fHrIniAtend,":",1)
			Set listDados.iMin						 	= +$Piece(fHrIniAtend,":",2)
			Set listDados.fHr							 	= +$Piece(fHrFinAtend,":",1)
			Set listDados.fMin						 	= +$Piece(fHrFinAtend,":",2)
			Set listDados.idGrupo 				 	= xCountGrupo
			Set listDados.encaixe 					= 0
			Set listDados.repeat						= 0
			Do arrayDados.%Push(listDados)
			
			Set xCodGrupoAgend 	= $Order(^MEDProviderEncaixes(YM,10,pCodProfissional,dataAtend,horaAtend,pCodProfissional,"")) 
			Set xCodAgendament 	= $Piece(^MEDProviderEncaixe(0, pCodProfissional, xCodGrupoAgend, dataAtend, horaAtend, 1),Y,2)
			Set xSequencia 			= ""
			For { 
				Set xSequencia = $Order(^VARAgendamentoProcedimentos(YM, xCodAgendament, xSequencia))
				Quit:xSequencia=""
				
				Set xObjAgedProced = $Get(^VARAgendamentoProcedimentos(YM, xCodAgendament, xSequencia, 1))
				
				If ($$$VARAgendamentoProcedimentosDataAtendimento(xObjAgedProced) = dataAtend &&
					 ($$$VARAgendamentoProcedimentosHoraAtendimento(xObjAgedProced) = horaAtend)) {
					Set numAdmissao = $$$VARAgendamentoProcedimentosAdmissao(xObjAgedProced)		 
			 	}
			}
			Set qtdeAgendaReservado = qtdeAgendaReservado + 1
			Set (codPaciente, nomePaciente, telefone, descProcedimento, dataHoraAdmissao) = ""
			If (numAdmissao '= "") {
				Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
				Set objMEDAdmission 		= $Get(^MEDAdmission(YM, numAdmissao, 1))
				Set codPaciente 				= $$$MEDAdmissionPatient(objMEDAdmission)
				Set nomePaciente 				= codPaciente
				Set nomePaciente 				= $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
				Set telefone 		 				= $$GetMEDPatientFone^VARSQL(codPaciente)
				Set xProcedimento 			= ""
				If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
					Set (xSequenciaAgendamento, xProcedimento) = ""
					Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
					Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
					If (xSequenciaAgendamento'="") {
						Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
						Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
						Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
					}	
				}
				Set descProcedimento = $Extract($$SQLGetDescricaoProduto^VARSQL(xProcedimento),1,25)
				If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
			}
			
			Set fHrIniAtend 								= $ZTime(horaAtend + (tempoAtend \ 2),2)
			Set fHrFinAtend 								= $ZTime(horaAtend + tempoAtend,2)
			Set listDados 	= {}
			Set listDados.description				= "Unidade/Sala: "_descUnidade_"/"_descSala_$Char(10)_"Procedimento: "_$Select(descProcedimento="":descricao,1:descProcedimento)
			Set listDados.text 							= listDados.description
			If (descAusencia '= "") {
				Set listDados.text 						= descAusencia
			}
			If (nomePaciente '= "") {
				Set listDados.text 							= nomePaciente_" - "_telefone
			}
			Set listDados.descUnidade 			= descUnidade
			Set listDados.descSala 					= descSala
			Set listDados.numAdmissao 		 	= numAdmissao
			Set listDados.dataAtendimento  	= dataAtend
			Set listDados.codPaciente			 	= codPaciente
			Set listDados.nomePaciente		 	= nomePaciente
			Set listDados.telefone				 	= telefone
			Set listDados.descProcedimento	= descProcedimento
			Set listDados.descricao					= descricao
			Set listDados.dataHoraAdmissao 	= dataHoraAdmissao
			Set listDados.Ano							 	= +$Piece(fDataAtend,"/",3)
			Set listDados.Mes							 	= +$Piece(fDataAtend,"/",2) - 1
			Set listDados.Dia							 	= +$Piece(fDataAtend,"/",1)
			Set listDados.horaIni						= fHrIniAtend
			Set listDados.horaFin 					= fHrFinAtend
			Set listDados.iHr							 	= +$Piece(fHrIniAtend,":",1)
			Set listDados.iMin						 	= +$Piece(fHrIniAtend,":",2)
			Set listDados.fHr							 	= +$Piece(fHrFinAtend,":",1)
			Set listDados.fMin						 	= +$Piece(fHrFinAtend,":",2)
			Set listDados.idGrupo 				 	= xCountGrupo
			Set listDados.encaixe 					= 1
			Set listDados.repeat						= 0
		}Else{
			Set listDados 	= {}
			Set listDados.description				= "Unidade/Sala: "_descUnidade_"/"_descSala_$Char(10)_"Procedimento: "_$Select(descProcedimento="":descricao,1:descProcedimento)
			Set listDados.text 							= listDados.description
			If (descAusencia '= "") {
				Set listDados.text 						= descAusencia
			}
			If (nomePaciente '= "") {
				Set listDados.text 							= nomePaciente_" - "_telefone
			}
			Set listDados.descUnidade 			= descUnidade
			Set listDados.descSala 					= descSala
			Set listDados.numAdmissao 		 	= numAdmissao
			Set listDados.dataAtendimento  	= dataAtend
			Set listDados.codPaciente			 	= codPaciente
			Set listDados.nomePaciente		 	= nomePaciente
			Set listDados.telefone				 	= telefone
			Set listDados.descProcedimento	= descProcedimento
			Set listDados.descricao					= descricao
			Set listDados.dataHoraAdmissao 	= dataHoraAdmissao
			Set listDados.Ano							 	= +$Piece(fDataAtend,"/",3)
			Set listDados.Mes							 	= +$Piece(fDataAtend,"/",2) - 1
			Set listDados.Dia							 	= +$Piece(fDataAtend,"/",1)
			Set listDados.horaIni						= fHrIniAtend
			Set listDados.horaFin 					= fHrFinAtend
			Set listDados.iHr							 	= +$Piece(fHrIniAtend-1,":",1)
			Set listDados.iMin						 	= +$Piece(fHrIniAtend,":",2)
			Set listDados.fHr							 	= +$Piece(fHrFinAtend-1,":",1)
			Set listDados.fMin						 	= +$Piece(fHrFinAtend,":",2)
			Set listDados.idGrupo 				 	= xCountGrupo
			Set listDados.encaixe 					= 0
			Set listDados.repeat						= 0
		}
		Do arrayDados.%Push(listDados)
	}	
	;
	Set listRetorno = {}
	If (qtdeAgenda>0)	Set percOcupacao = $FNumber((qtdeAgendaReservado*100)/qtdeAgenda,"",0)
	Set listRetorno.percOcupacao 		= percOcupacao
	Set listRetorno.menorTempoAtend	= +$Piece($ZTime(menorTempoAtend-3600,2),":",1)
	Set listRetorno.maiorTempoAtend	= +$Select(
																			$Piece($ZTime(maiorTempoAtend,2),":",2) > 0
																			: 
																				($Piece($ZTime(maiorTempoAtend,2),":",1) + 1) 
																			,1: 
																				$Piece($ZTime(maiorTempoAtend,2),":",1)
																		)
	Set listRetorno.dados 					= arrayDados
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetAgendaExportar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	;
	Set arrayRetorno = []
	Set meuSQL = "Select Age.CodigoProfissional, Age.Unidade, Age.GrupoAgendamento, Age.TempodeAtendimento, "
	Set meuSQL = meuSQL _ "Age.RestricaoGeral, Age.Local1, Age.PermiteEncaixe, Age.QtdeEncaixe, "
	Set meuSQL = meuSQL _ "Age.DataInicial, Age.HoraInicial, Age.HoraFinal, Age.Repeticao, Age.NosDias, "
	Set meuSQL = meuSQL _ "Age.DataFinal, Age.IntervaloInicio, Age.IntervaloFim "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As Hor, SQLUser.MEDProviderAgenda As Age "
	Set meuSQL = meuSQL _ "Where Hor.Company = 0 And Age.Company = 0 "
	Set meuSQL = meuSQL _ "And Age.CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And Hor.CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And Age.Sequencia = Hor.ReferenciaPai "
	Set meuSQL = meuSQL _ "And %Internal(Hor.DatadeAtendimento) >= '"_+$Horolog_"' "
	Set meuSQL = meuSQL _ "Group By Hor.ReferenciaPai"
	Set objStatement	= ##class(%SQL.Statement).%New() 
	Set qStatus 			= objStatement.%Prepare(meuSQL)
	Set rSet 					= objStatement.%Execute()
	;
	K ^zzJULIO
	Set ^zzJULIO = meuSQL
	;
 	While (rSet.%Next()) {
		Set nosDias = ""
		If (rSet.%Get("NosDias") '= "") {
			if ((";"_rSet.%Get("NosDias")_";")[(";0;")) Set nosDias = nosDias _$Select(nosDias="":"",1:";")_"DOM" 
			if ((";"_rSet.%Get("NosDias")_";")[(";1;")) Set nosDias = nosDias _$Select(nosDias="":"",1:";")_"SEG"  
			if ((";"_rSet.%Get("NosDias")_";")[(";2;")) Set nosDias = nosDias _$Select(nosDias="":"",1:";")_"TER" 
			if ((";"_rSet.%Get("NosDias")_";")[(";3;")) Set nosDias = nosDias _$Select(nosDias="":"",1:";")_"QUA" 
			if ((";"_rSet.%Get("NosDias")_";")[(";4;")) Set nosDias = nosDias _$Select(nosDias="":"",1:";")_"QUI" 
			if ((";"_rSet.%Get("NosDias")_";")[(";5;")) Set nosDias = nosDias _$Select(nosDias="":"",1:";")_"SEX" 
			if ((";"_rSet.%Get("NosDias")_";")[(";6;")) Set nosDias = nosDias _$Select(nosDias="":"",1:";")_"SAB" 
		}
		Set listDados = {}
		Set listDados.codProfissional = rSet.%Get("CodigoProfissional")
		Set listDados.nomeProfissional = $$SQLGetProviderName^VARSQL(rSet.%Get("CodigoProfissional"))
		Set listDados.codUnidade = rSet.%Get("Unidade")
		Set listDados.descUnidade = $$SQLGetLocationName^VARSQL(rSet.%Get("Unidade"))
		Set listDados.codGrupoAgendamento = rSet.%Get("GrupoAgendamento")
		Set listDados.descGrupoAgendamento = $$GetDescGrupoAgendamento^VARSQL(rSet.%Get("GrupoAgendamento"))
		Set listDados.tempoAtendimento = $ZTime(rSet.%Get("TempodeAtendimento"),2)
		Set listDados.restricaoGeral = rSet.%Get("RestricaoGeral")
		Set listDados.codLocal = rSet.%Get("Local1")
		Set listDados.descLocal = $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("Local1"))
		Set listDados.permiteEncaixe = $Select(rSet.%Get("PermiteEncaixe")=1:"S",1:"N")
		Set listDados.qtdeEncaixe = rSet.%Get("QtdeEncaixe")
		Set listDados.dtInicioAtend = $ZDate(rSet.%Get("DataInicial"),4)
		Set listDados.hrInicioAtend = $ZTime(rSet.%Get("HoraInicial"),2)
		Set listDados.hrFinalAtend = $ZTime(rSet.%Get("HoraFinal"),2)
		Set listDados.hrIntervaloInicial = $Select(rSet.%Get("IntervaloInicio")="":"",1:$ZTime(rSet.%Get("IntervaloInicio"),2))
		Set listDados.hrIntervaloFinal = $Select(rSet.%Get("IntervaloFim")="":"",1:$ZTime(rSet.%Get("IntervaloFim"),2))
		Set listDados.repeticao = $Select(rSet.%Get("Repeticao")=1:"D",rSet.%Get("Repeticao")=2:"S",rSet.%Get("Repeticao")=3:"M",1:"N")
		Set listDados.noDia = nosDias
		Set listDados.dtFinalAtend = $Select(rSet.%Get("DataFinal")="":"",1:$ZDate(rSet.%Get("DataFinal"),4))
		Do arrayRetorno.%Push(listDados)
 	}
	;
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarDadosExterno">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = ""
	Set erro = 0
	Try{
		Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
		Set pObjPessoal 			= $Get(%request.Data("pObjPessoal",1))
		Set YBED 							= $Get(%request.Data("YBED",1))
		If (pCodProfissional = "+") {
			Set pCodProfissional = ""
		}
		Set pObjPessoal = [].%FromJSON(pObjPessoal)
		Set objMEDProvider = ""
		If (pCodProfissional '= "") {
			 Set objMEDProvider = $Get(^MEDProvider(YM, pCodProfissional, 1))
		}Else{
			Set id = $Order(^MEDProviders(0,10,pObjPessoal.estadoDocumento,2231,pObjPessoal.numeroDocumento,""))
			If (id '= "") {
				Set strStatus = -1
				Set mensagem 	= "CRM "_pObjPessoal.numeroDocumento_" já cadastrado no sistema!"
				Quit  
			}
		}
		Set $$$MEDProviderName(objMEDProvider) = pObjPessoal.nome
		Set $$$MEDProviderLicenseType(objMEDProvider) = "2235.05"
		Set $$$MEDProviderLicenseNumber(objMEDProvider) = pObjPessoal.numeroDocumento
		Set $$$MEDProviderSpeciality(objMEDProvider) = "2235.05"
		Set $$$MEDProviderSSN(objMEDProvider) = pObjPessoal.numeroDocumento
		Set $$$MEDProviderStatus(objMEDProvider) = 1
		Set $$$MEDProviderFREE2(objMEDProvider) = "2235.05"
		Set $$$MEDProviderFREE3(objMEDProvider) = pObjPessoal.estadoDocumento
		Set $$$MEDProviderLocalizacao(objMEDProvider) = "E"
		Set $$$MEDProviderCBO(objMEDProvider) = pObjPessoal.cBO
		If (pCodProfissional = "") {
			Set pCodProfissional = $$GetNextNumber^COMUtils("MEDProvider","")
			Set $$$MEDProviderCreatedDate(objMEDProvider) = $Horolog
			Set $$$MEDProviderCreatedBy(objMEDProvider) 	= YBED
		}Else{
			Set $$$MEDProviderChangedOn(objMEDProvider) = $Horolog
			Set $$$MEDProviderChangedBy(objMEDProvider) = YBED
		}
		Set strStatus = $$$Save("MEDProvider", pCodProfissional, objMEDProvider, $$$YES)
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.codProfissional = pCodProfissional
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>