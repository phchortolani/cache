<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.webservice.alphalinc.ObtemPedidosCompraProcessados">
<Description><![CDATA[Esta classe implementa todos os web services a serem utilizados pela Integração de Pedidos de Compra entre Alphalinc e InfoSaúde, especificamente para o cliente Heva.]]></Description>
<ClassType/>
<Import>VAR.infra.integracao,VAR.common.soap,VAR.infra.util,alWEB.WS</Import>
<IncludeCode>INConst,VARConst,VARLog,WWWSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%SOAP.WebService</Super>

<Parameter name="NAMESPACE">
<Default>http://tempuri.org</Default>
</Parameter>

<Parameter name="SERVICENAME">
<Description><![CDATA[Name of the WebService.]]></Description>
<Default>ObtemPedidosCompraProcessados</Default>
</Parameter>

<Parameter name="SOAPVERSION">
<Description><![CDATA[This is the SOAP version supported by the service.]]></Description>
<Default>1.1</Default>
</Parameter>

<Parameter name="MAXIMOREGISTROSPORVEZ">
<Type>%Integer</Type>
<Default>20</Default>
</Parameter>

<Method name="ObtemPedidosCompra">
<Description><![CDATA[Método para ler os pedidos de compra. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>IdInicio (obrigatório) - ID de referência para buscar os próximos pedidos de compra;
</UL>
<BR>
Retorno:<BR><UL>
<LI>ResultadoPedidosCompra - Contém uma Lista de Pedidos de Compra
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,IdInicio:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>ResultadoPedidosCompra</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	set resultado = ##class(ResultadoPedidosCompra).%New()
 	set resultado.PedidosCompra = ##class(%ListOfObjects).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

		set entidade = ##class(GerenciaFilaPendencias).%GetParameter("ENTIDADEPEDIDOCOMPRA")

		&sql(DECLARE cursorObtemPedidosCompra CURSOR FOR
			 SELECT   VARDadoAIntegrar.ID,
			          VARDadoAIntegrar.Acao,
			          VARDadoAIntegrar.Chave1Entidade,
			          VARPedidoCompra.NDocIntegrado,
			          VARDadoAIntegrar.OrdemNaFila,
			          VARDadoAIntegrar.AtualizadoEm
			 INTO     :idIntegracao, :acao, :chave1Entidade, :ndocIntegrado, :ordemNaFila,
			 		  :atualizadoEm
			 FROM     SQLUser.VARDadoAIntegrar, SQLUser.VARPedidoCompra
			 WHERE    VARDadoAIntegrar.Entidade = :entidade
			 AND      VARDadoAIntegrar.Chave1Entidade =* VARPedidoCompra.NoPedido
			 AND 	  VARPedidoCompra.Status = 1
			 AND      VARDadoAIntegrar.Integrado = 'N'
			 ORDER BY VARDadoAIntegrar.OrdemNaFila)
		&sql(OPEN cursorObtemPedidosCompra)
		&sql(FETCH cursorObtemPedidosCompra)

		if ($length(IdInicio) > 0) {
			while (SQLCODE = 0) {
				if (idIntegracao = IdInicio) {
					&sql(FETCH cursorObtemPedidosCompra)
					quit
				}

				&sql(FETCH cursorObtemPedidosCompra)
			}
		}

		while (SQLCODE = 0) {
			if (acao = ##class(GerenciaFilaPendencias).%GetParameter("ACAOPROCESSAR")) {
				set idPedidoCompra = chave1Entidade

				if ($length(ndocIntegrado) > 0) {
					do ##class(GerenciaFilaPendencias).ConfirmaIntegracao(
						##class(GerenciaFilaPendencias).%GetParameter("ENTIDADEPEDIDOCOMPRA"),
						$zdatetime(atualizadoEm, 3, 1),
						idPedidoCompra,
						##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
						##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
						##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
						##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"))
				}
				else {
					set objPedidoCompra = $get(^VARPedidoCompra(YM, idPedidoCompra, 1))

					set wsPedido = ##class(PedidoCompra).%New()
					set wsPedido.IdIntegracao = idIntegracao
					set wsPedido.NoPedido = idPedidoCompra
					set wsPedido.Tipo = $$$VARPedidoCompraTipo(objPedidoCompra)
					set wsPedido.LocalEntrega = $$$VARPedidoCompraLocaldeEntrega(objPedidoCompra)
					set wsPedido.Status = $$$VARPedidoCompraStatus(objPedidoCompra)
					set wsPedido.DataEmissao = $zdatetime($$$VARPedidoCompraDatadeEmissao(objPedidoCompra), 3, 1)
					set wsPedido.OrdemNaFila = $zdatetime(ordemNaFila, 3, 1)
					set wsPedido.AtualizadoEm = $zdatetime(atualizadoEm, 3, 1)

					$$$Order3(^VARPedidoCompraLinha,YM,idPedidoCompra,idPedidoCompraLinha)
						set objPedidoCompraLinha = $get(^VARPedidoCompraLinha(YM, idPedidoCompra,
							idPedidoCompraLinha, 1))

						set objINART = $get(^INART(YM,
							$$$VARPedidoCompraLinhaProduto(objPedidoCompraLinha), 1))

						do wsPedido.LinhaInsert(idPedidoCompraLinha,
							$$$VARPedidoCompraLinhaProduto(objPedidoCompraLinha),
							$$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha),
							$$$INARTUnitofMeasure(objINART),
							+$$$INARTAverageCost(objINART),
							$Piece($$$INARTItemGroup(objINART),".",1))
					$$$End

					do resultado.PedidosCompra.Insert(wsPedido)
					if (resultado.PedidosCompra.Count() >= ..#MAXIMOREGISTROSPORVEZ) quit
				}
			}

			&sql(FETCH cursorObtemPedidosCompra)
		}

		&sql(CLOSE cursorObtemPedidosCompra)
	    set strStatus = $$$OK
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>

<Method name="ConfirmaIntegracao">
<Description><![CDATA[Método para confirmar um pedido de compra integrado. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>NoPedido (obrigatório) - número do pedido integrado;
</UL>
<BR>
Retorno:<BR><UL>
<LI>Resultado - resultado padrão
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,AtualizadoEm:%TimeStamp,NoPedido:%String,NoPedidoInfoSaude:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>Resultado</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	set resultado = ##class(Resultado).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

		set idPedidoCompra = NoPedido
		set objPedidoCompra = $get(^VARPedidoCompra(YM, idPedidoCompra, 1))

		if ($length($$$VARPedidoCompraNDocIntegrado(objPedidoCompra)) = 0) {
			set $$$VARPedidoCompraNDocIntegrado(objPedidoCompra) = NoPedidoInfoSaude
			set strStatus = $$$Save("VARPedidoCompra", idPedidoCompra, objPedidoCompra, 1)
		}

		if ($$$ISOK(strStatus)) {
			set strStatus = ##class(GerenciaFilaPendencias).ConfirmaIntegracao(
				##class(GerenciaFilaPendencias).%GetParameter("ENTIDADEPEDIDOCOMPRA"),
				AtualizadoEm,
				NoPedido,
				##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"))
		}
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>
</Class>
</Export>