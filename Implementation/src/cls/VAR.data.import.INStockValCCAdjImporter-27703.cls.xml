<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.INStockValCCAdjImporter">
<ClassType/>
<IncludeCode>INConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Command:
> do ##class(VAR.data.import.INStockValCCAdjImporter).importFile("arquivo.csv")

Fields
	DateOfStocktaking;StocktakingCountingNumber;ItemNumber;Location;StockLocation;ActualQuantity;
	GoodsReceiptDate;LotNo;ExpiryDate;TargetQuantity;Posted;CalculatedDifferenceQty;PostedDifferenceQty;
	LastCount;Notes;Difference;Brand;Owner;Program1
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Property name="FASE">
<Type>%Integer</Type>
</Property>


<Property name="IDINWEINV">
<Type>%String</Type>
</Property>


<Property name="WAIT">
<Type>%Integer</Type>
</Property>


<Property name="arrItemDigitado">
<Type>%String</Type>
</Property>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo:%String,Diretorio:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	if (($get(arquivo) = "") || ($get(Diretorio) = "")) quit "Parãmetro obrigatório (arquivo) não informado"
	;set strStatus = ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_arquivo)
	quit ..import(Diretorio_arquivo)
		
	quit strStatus
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	$$$VAR
	;set YBED = "CARGADEDADOS"
	set ..ignoreHeaderLine = 1
	set ..WAIT = 0
	if (..#DEBUG) set ..printProgress = 0
	kill ^CacheTempItemCargaCustoMedio
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	
	set YBED = "CargadeDados"	
	
	set strStatus = $$$OK

	set idAdj	= $$^WWWNEXT("INStockValCCAdj")
	
	set pidCostCentre = 1 ; O centro de custo sempre será 1
	
	set pidItem 	= ..getField(pstrLinha,1)
	
	if ($data(^CacheTempItemCargaCustoMedio(pidItem))) {
		quit strStatus
	}
	
	set ^CacheTempItemCargaCustoMedio(pidItem) = ""
	
	set key = pidItem_$$$COMMA_pidCostCentre_$$$COMMA_idAdj
	
	set obj = $get(^INStockValCCAdj(YM,key,1))
	
	set $$$INStockValCCAdjNewCost(obj) 	= $replace(..getField(pstrLinha,2),",",".")
	set $$$INStockValCCAdjOldCost(obj) 	= "0" ; Sempre 0, pois não existe estoque anterior
	set $$$INStockValCCAdjReason(obj) 	= "9" ; Outros
	set $$$INStockValCCAdjStatus(obj) 	= "0" ; Não Processado	
	
	do UpdateValues(.obj,pidItem,pidCostCentre)
	
	
	
	; do Perform^COMTransaction(YFORM,YKEY,"Adjust^INStockValCCAdj(YKEY)","IN00377")
	
	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_idAdj_", obj="_obj)
	}
	else {
		set strStatus = $$$Save("INStockValCCAdj",key,obj,$$$YES)
	}
	
	if (strStatus = $$$OK) {
		do Perform^COMTransaction("INStockValCCAdj",key,"Adjust^INStockValCCAdj(key,,0)","IN00377")
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
	
UpdateValues(&pobjAdjust,pidItem,pidCostCentre)
	if $get(pidItem)'="" {
		set $$$INStockValCCAdjOldCost(pobjAdjust)     = $$GetCost^INItemCost(pidItem,"",9,"","",pidCostCentre)
		set $$$INStockValCCAdjStockonHand(pobjAdjust) = $$QtyForCC^INARTMENGE(pidItem,pidCostCentre)
	}
	
	quit
]]></Implementation>
</Method>
</Class>
</Export>