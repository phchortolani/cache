<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Report.Query.FINGLBankRecon">
<Description><![CDATA[
This class holds %Queries for Reporting on FINGLBankRecon]]></Description>
<Abstract>1</Abstract>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>

<Method name="TransactionsClose">
<Description><![CDATA[
05-Dec-2005		RPW		SR13813: kill the data for the report]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>TransactionsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do TransactionsClose^FINRPGLBankReconTransaction($get(qHandle("User")))
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TransactionsExecute">
<Description><![CDATA[
05-Dec-2005		RPW		SR13813: Prepare the data for the report]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,pidCompany:%String,pidLanguage:%String,pidUser:%String,pidBankReconNumber:%String,pblnCleared:%Boolean,pblnDeposits:%Integer,pblnCheques:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	set RowCount=$$TransactionsExecute^FINRPGLBankReconTransaction(pidCompany,
																   pidLanguage,
																   pidUser,
																   pidBankReconNumber,
																   pblnCleared,
																   pblnDeposits,
																   pblnCheques)
	
	set qHandle("RowId")=0
	set qHandle("Last")=RowCount
	set qHandle("User")=pidUser
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TransactionsFetch">
<Description><![CDATA[
05-Dec-2005		RPW		SR13813: fetch the data for the report]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>TransactionsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set RowId=$increment(qHandle("RowId"))
	set User=$get(qHandle("User"))
	if RowId<=qHandle("Last") {
		set Row=$$TransactionsFetch^FINRPGLBankReconTransaction(User,RowId)
		set qHandle("RowId")=RowId
		set AtEnd=0
	} else {
		set Row=""
		set AtEnd=1
	}
	Quit $$$OK
]]></Implementation>
</Method>
<Query name="Transactions">
<Description><![CDATA[
05-Dec-2005		RPW		SR13813: The SQL project of the stored procedure]]></Description>
<Type>%Query</Type>
<FormalSpec>Company:%String,Language:%String,User:%String,BankReconNumber:%String,Cleared:%Integer,Deposits:%Integer,Cheques:%Integer</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="Debit:%Float,Credit:%Float,Account:%String,Reference:%String,TransactionDate:%String,TransactionType:%String"/>
</Query>


<Method name="PrevGLAdjClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>PrevGLAdjExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill ^CacheTempRow($zutil(5),qHandle("YUSER"))
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="PrevGLAdjExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,pidCompany:%String(MAXLEN=30),pidLanguage:%String(MAXLEN=10),pYUSER:%String(MAXLEN=30),pidBankReconNumber:%String(MAXLEN=30)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Return previous GL adjustments for this bank rec.
	;
	; Params:	pidCompany				: Company number (YM)
	; 			pidLanguage				: Language (SPRACHE)
	; 			pYUSER					: Session ID (YUSER)
	; 			pidBankReconNumber		: Bank Rec Number
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 10-Oct-2006	Steve S		SR15108: Created
	;-------------------------------------------------------------------------------
	do GetPrevGLAdj^FINRPGLBankReconPrevGLAdj(pidCompany,pidLanguage,pYUSER,pidBankReconNumber)
	
	set qHandle("Item") = ""
	set qHandle("YUSER") = pYUSER
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="PrevGLAdjFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>PrevGLAdjExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$Fetch^COMRPQuery(.qHandle,.Row,.AtEnd)
]]></Implementation>
</Method>
<Query name="PrevGLAdj">
<Type>%Query</Type>
<FormalSpec>Company:%String(MAXLEN=30),Language:%String(MAXLEN=10),YUSER:%String(MAXLEN=30),BankReconNumber:%String(MAXLEN=30)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="Debit:%Float,Credit:%Float,Account:%String,Reference:%String,TransactionDate:%String,ReconNumber:%String"/>
</Query>


<Method name="FINGLBankReconHeaderClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>FINGLBankReconHeaderExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill ^CacheTempRow($zutil(5),qHandle("YUSER"))
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FINGLBankReconHeaderExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,pidCompany:%String(MAXLEN=30),pidLang:%String(MAXLEN=10),pidLocation:%String(MAXLEN=30),pYUSER:%String(MAXLEN=30),pidBankRecon:%String(MAXLEN=30)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Build the header for the report
	;
	; Params:	pidCompany			: Company number (YM)
	; 			pidLang				: Language (SPRACHE)
	; 			pidLocation			: The current loc (YLOCATION)
	; 			pYUSER				: Session ID (YUSER)
	; 			pidBankRecon		: Bank Rec Number
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Oct-2006	Steve S		SR15108: Created
	;-------------------------------------------------------------------------------
	do BuildHeader^FINRPGLBankRecon(pidCompany,pidLang,pidLocation,pYUSER,pidBankRecon)
	
	set qHandle("Item") = ""
	set qHandle("YUSER") = pYUSER
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FINGLBankReconHeaderFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>FINGLBankReconHeaderExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$Fetch^COMRPQuery(.qHandle,.Row,.AtEnd)
]]></Implementation>
</Method>
<Query name="FINGLBankReconHeader">
<Type>%Query</Type>
<FormalSpec>Company:%String(MAXLEN=30),Language:%String(MAXLEN=10),Location:%String(MAXLEN=30),YUSER:%String(MAXLEN=30),BankReconNumber:%String(MAXLEN=30)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="CompanyName:%String(MAXLEN=30),LocationName:%String(MAXLEN=30),Address:%String(MAXLEN=300),Tel:%String(MAXLEN=30),Fax:%String(MAXLEN=30),PostedDate:%String(MAXLEN=10),PrintedDate:%String(MAXLEN=10),BankAccount:%String(MAXLEN=30),StatementNum:%String(MAXLEN=30),OpeningDate:%String(MAXLEN=10),ClosingDate:%String(MAXLEN=10),RecGLDate:%String(MAXLEN=10),OpeningStatementBal:%String(MAXLEN=20),ClearedGLTran:%String(MAXLEN=20),GLAdjustments:%String(MAXLEN=20),Precleared:%String(MAXLEN=20),ClosingStatementBal:%String(MAXLEN=20),Unallocated:%String(MAXLEN=20),NetUnpresented:%String(MAXLEN=20),GLAdjIncluded:%String(MAXLEN=20),PreviousGLAdj:%String(MAXLEN=20),ReconcileToGL:%String(MAXLEN=20),EndingGLBal:%String(MAXLEN=20),Difference:%String(MAXLEN=20)"/>
</Query>


<Method name="FINGLBankReconGLAdjClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>FINGLBankReconGLAdjExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill ^CacheTempRow($zutil(5),qHandle("YUSER"))
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FINGLBankReconGLAdjExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,pidCompany:%String(MAXLEN=30),pidLang:%String(MAXLEN=10),pYUSER:%String(MAXLEN=30),pidBankRecon:%String(MAXLEN=30)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Fetch the GL Adj lines for this bank rec.
	;
	; Params:	pidCompany			: Company number (YM)
	; 			pidLang				: Language (SPRACHE)
	; 			pYUSER				: Session ID (YUSER)
	; 			pidBankRecon		: Bank Rec Number
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Oct-2006	Steve S		SR15108: Created
	;-------------------------------------------------------------------------------
	do GetChargesInterest^FINRPGLBankReconTransaction(pidCompany,pidLang,pYUSER,pidBankRecon)
	
	set qHandle("Item") = ""
	set qHandle("YUSER") = pYUSER
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FINGLBankReconGLAdjFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>FINGLBankReconGLAdjExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$Fetch^COMRPQuery(.qHandle,.Row,.AtEnd)
]]></Implementation>
</Method>
<Query name="FINGLBankReconGLAdj">
<Type>%Query</Type>
<FormalSpec>Company:%String(MAXLEN=30),Language:%String(MAXLEN=10),YUSER:%String(MAXLEN=30),BankReconNumber:%String(MAXLEN=30)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="TranDate:%String(MAXLEN=10),Debit:%Float,Credit:%Float,Account:%String(MAXLEN=30),Ref:%String(MAXLEN=30)"/>
</Query>
</Class>
</Export>