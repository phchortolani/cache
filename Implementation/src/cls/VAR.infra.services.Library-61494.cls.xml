<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.services.Library">
<ClassType/>
<ProcedureBlock>0</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="InstallDataPrimaryServices">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ##class(VAR.infra.log.LogRunner).Register()
	do ##class(VAR.infra.license.LicenseRecordRunner).Register()
	;do ##class(VAR.infra.dcm.DcmRunner).Register()
	do ##class(VAR.infra.shadow.ShadowRunner).Register()
	do ##class(VAR.infra.environment.MonitorRunner).Register()
	do ##class(VAR.infra.alphalinc.ScheduleRunner).Register()
	do ##class(VAR.infra.alphalinc.INPROPRunner).Register()

	quit $$$OK]]></Implementation>
</Method>

<Method name="UninstallDataPrimaryServices">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ##class(VAR.infra.log.LogRunner).Unregister()
	do ##class(VAR.infra.license.LicenseRecordRunner).Unregister()
	;do ##class(VAR.infra.dcm.DcmRunner).Unregister()
	do ##class(VAR.infra.shadow.ShadowRunner).Unregister()
	do ##class(VAR.infra.environment.MonitorRunner).Unregister()
	do ##class(VAR.infra.alphalinc.ScheduleRunner).Unregister()
	do ##class(VAR.infra.alphalinc.INPROPRunner).Unregister()

	quit $$$OK]]></Implementation>
</Method>

<Method name="InstallDataSecondaryServices">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ##class(VAR.infra.sql.PurgeRunner).Register()
	do ##class(VAR.infra.license.LicenseNotifierRunner).Register()
	do ##class(VAR.infra.garbage.LimpaTemporariasRunner).Register()
	do ##class(VAR.data.PurgeRunner).Register()

	quit $$$OK]]></Implementation>
</Method>

<Method name="UninstallDataSecondaryServices">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ##class(VAR.infra.sql.PurgeRunner).Unregister()
	do ##class(VAR.infra.license.LicenseNotifierRunner).Unregister()
	do ##class(VAR.infra.garbage.LimpaTemporariasRunner).Unregister()
	do ##class(VAR.data.PurgeRunner).Unregister()
	quit $$$OK]]></Implementation>
</Method>
</Class>
</Export>