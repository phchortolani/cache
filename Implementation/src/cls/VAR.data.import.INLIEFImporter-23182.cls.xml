<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.INLIEFImporter">
<ClassType/>
<IncludeCode>INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Command:
> do ##class(VAR.data.import.INLIEFImporter).importFile("INLIEF_SESDF.csv")

Fields
	SupplierNumber;Name1;ShortName;Street;POBox;ZipCodeStreet;SendDocumentsvia;City;Country;
	Telephone;Fax;Email;InternetAddress;SuppliersGroup;AccountNo;CreditAccount;GoodsSupplier;
	DefaultTaxCode;DocumentLanguage;ContactPerson;BankAccountNumber1;BankCode1;BankName1;
	InternetItemInformation;CompanyNumber;Directorycreated;FREE1;FREE2;FREE3;FREE4;FREE6;FREE7;
	FREE10;FREE12;CurrentAccount;FREE16;FREE17;FREE18;FREE20;FREE21;FREE22;Status;Broker;
	Supplier;DateEntered;Createdby;DateChanged;ChangedBy
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo:%String,diretorio:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	$$$VAR 
	if ($get(arquivo) = "") quit "Parãmetros obrigatórios (arquivo, local) não informados"
	
	;quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_arquivo)
	quit ..import(diretorio_arquivo)
	
	
	;kill (arquivo) ; Limpa as variáveis de execuções anteriores

	/*
	$$$VAR
	if (($get(arquivo) = "") || ($get(diretorio) = "")) quit "Parãmetro obrigatório (arquivo) não informado"
	
	;set strStatus = ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_arquivo)
	quit ..import(diretorio_arquivo)
		
	quit strStatus
	*/
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0


	set strGlo 		= "^INLIEF"_ $replace($replace($replace($zdatetime($h,4),"/","")," ",""),":","")
	set strMerge = "merge " _ strGlo _" = ^INLIEF"
	xecute strMerge

	/*
	// Remoção dos registros antigos antes da importação.
	new total, codFornecedor, continuar, sc

	set total = 0
	set codFornecedor = $order(^INLIEF(YM, ""))
	while ($length(codFornecedor) > 0) {
		set total = $increment(total)

		set codFornecedor = $order(^INLIEF(YM, codFornecedor))
	}

	if (total > 0) {
		write !, "Existem "_total_" registros na global ^INLIEF("_YM_"). Os mesmos serão removidos antes da importação. "
		read "Deseja continuar? (S/N) ", continuar#1

		if ((continuar '= "S") && (continuar '= "s")) quit $$$CUSTOMERROR("Operação abortada.")

		set total = 0
		set codFornecedor = $order(^INLIEF(YM, ""))
		while ($length(codFornecedor) > 0) {
			if ($data(^INLIEF(YM, codFornecedor, 1))) {
				set sc = $$$Kill("INLIEF", codFornecedor)
				if ($$$ISOK(sc)) {
					set total = $increment(total)
				}
				else {
					$$$VARLOGERROR(sc)
				}
			}

			set codFornecedor = $order(^INLIEF(YM, codFornecedor))
		}
		write !, "Foram removidos "_total_" registros da global ^INLIEF("_YM_")."
	}

	merge ^WWW001VARHooks.bkp(0, "INLIEF", 1, 1) = ^WWW001VARHooks(0, "INLIEF", 1, 1)
	kill ^WWW001VARHooks(0, "INLIEF", 1, 1)
	
	*/
	

	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	set strStatus = $$$OK

	set key = ..getField(pstrLinha, 1)
	if (key = "1,3") quit $$$OK // Registro mal construído
	
	
	//if (obj '= "") {
		//set strStatus = $$$NO		
	//	quit strStatus
	//}
	
	

	set obj = ""
	set $$$INLIEFFREE5(obj)						= ..getField(pstrLinha, 2)
	set $$$INLIEFCompanyNumber(obj)				= ..getField(pstrLinha, 3)
	set $$$INLIEFStatus(obj)					= ..getField(pstrLinha, 4)
	set $$$INLIEFName1(obj)						= ..getField(pstrLinha, 5)
	set $$$INLIEFShortName(obj)					= ..getField(pstrLinha, 6)
	set $$$INLIEFFREE3(obj)						= ..getField(pstrLinha, 7)
	set $$$INLIEFFREE6(obj)						= ..getField(pstrLinha, 8)
	set $$$INLIEFFREE7(obj)						= ..getField(pstrLinha, 9)
	
	/*
	set $$$INLIEFStreet(obj)					= ..getField(pstrLinha, 4)
	set $$$INLIEFPOBox(obj)						= ..getField(pstrLinha, 5)
	set $$$INLIEFZipCodePOBox(obj)				= ..getField(pstrLinha, 6)
	set $$$INLIEFSendDocumentsvia(obj)			= ..getField(pstrLinha, 7)
	set $$$INLIEFCity(obj)						= ..getField(pstrLinha, 8)
	set $$$INLIEFCountry(obj)					= ..getField(pstrLinha, 9)
	set $$$INLIEFFREE4(obj)						= ..getField(pstrLinha, 10)
	set $$$INLIEFFax(obj)						= ..getField(pstrLinha, 11)
	set $$$INLIEFEmail(obj)						= ..getField(pstrLinha, 12)
	set $$$INLIEFInternetAddress(obj)			= ..getField(pstrLinha, 13)
	set $$$INLIEFSuppliersGroup(obj)			= ..getField(pstrLinha, 14)
	set $$$INLIEFAccountNo(obj)					= ..getField(pstrLinha, 15)
	set $$$INLIEFCreditAccount(obj)				= ..getField(pstrLinha, 16)
	set $$$INLIEFGoodsSupplier(obj)				= ..getField(pstrLinha, 17)
	set $$$INLIEFDefaultTaxCode(obj)			= ..getField(pstrLinha, 18)
	set $$$INLIEFDocumentLanguage(obj)			= ..getField(pstrLinha, 19)
	set $$$INLIEFContactPerson(obj)				= ..getField(pstrLinha, 20)
	set $$$INLIEFBankAccountNumber1(obj)		= ..getField(pstrLinha, 21)
	set $$$INLIEFBankCode1(obj)					= ..getField(pstrLinha, 22)
	set $$$INLIEFBankName1(obj)					= ..getField(pstrLinha, 23)
	set $$$INLIEFInternetItemInformation(obj)	= ..getField(pstrLinha, 24)
	set $$$INLIEFDirectorycreated(obj)			= ..getField(pstrLinha, 26)
	set $$$INLIEFFREE20(obj)					= ..getField(pstrLinha, 27)
	set $$$INLIEFFREE17(obj)					= ..getField(pstrLinha, 29)
	set $$$INLIEFFREE11(obj)					= ..getField(pstrLinha, 30)
	set $$$INLIEFFREE14(obj)					= ..getField(pstrLinha, 32)
	set $$$INLIEFFREE10(obj)					= ..getField(pstrLinha, 33)
	set $$$INLIEFFREE12(obj)					= ..getField(pstrLinha, 34)
	set $$$INLIEFCurrentAccount(obj)			= ..getField(pstrLinha, 35)
	set $$$INLIEFFREE13(obj)					= ..getField(pstrLinha, 37)
	set $$$INLIEFState(obj)						= ..getField(pstrLinha, 38)
	;set $$$INLIEFFREE20(obj)					= ..getField(pstrLinha, 39)
	set $$$INLIEFFREE21(obj)					= ..getField(pstrLinha, 40)
	set $$$INLIEFFREE22(obj)					= ..getField(pstrLinha, 41)
	set $$$INLIEFBroker(obj)					= ..getField(pstrLinha, 43)
	set $$$INLIEFSupplier(obj)					= ..getField(pstrLinha, 44)
	set $$$INLIEFDateEntered(obj)				= ..getField(pstrLinha, 45)
	set $$$INLIEFCreatedby(obj)					= ..getField(pstrLinha, 46)
	set $$$INLIEFDateChanged(obj)				= ..getField(pstrLinha, 47)
	set $$$INLIEFChangedBy(obj)					= ..getField(pstrLinha, 48)
	*/
	
	set $$$INLIEFFREE23(obj)					= "0"
	set $$$INLIEFSupplier(obj)					= "1"

	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_key_", obj="_obj)
	}
	else {
		set strStatus = $$$Save("INLIEF", key, obj, 1)
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
]]></Implementation>
</Method>
<UDLText name="T">
<Content>
/*
Method finalize()
{
	merge ^WWW001VARHooks(0, "INLIEF", 1, 1) = ^WWW001VARHooks.bkp(0, "INLIEF", 1, 1)
}
*/
</Content>
</UDLText>
</Class>
</Export>