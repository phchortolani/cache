<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsDocUtils">
<Description><![CDATA[
This class contains methods used by the Documatic class reference
viewer to display details about Ensemble components.]]></Description>
<IncludeCode>Ensemble,EnsUI</IncludeCode>
<Super>%CSP.Util.Pane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Method name="RenderProductionInfo">
<Description><![CDATA[
Show summary information about the given production class.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pClass:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		#Dim production As Ens.Config.Production
		Set production = ##class(Ens.Config.Production).%OpenId(pClass)
		If '$IsObject(production) Quit

		Set msgHost($$$eHostTypeService) = $$$Text("Business Services")
		Set msgHost($$$eHostTypeProcess) = $$$Text("Business Processes")
		Set msgHost($$$eHostTypeOperation) = $$$Text("Business Operations")
		Set msgMain = $$$Text("This is an Ensemble Production class.")
		Set hlpKey = ""

		&html<<div class="SummaryText">#(msgMain)#</div>>

		If (production.Description '= "") {
			&html<<div class="SummaryText">#($ZCVT(production.Description,"O","HTML"))#</div>>
		}

		&html<<br/>>

		For i = 1:1:production.Items.Count() {
			Set item = production.Items.GetAt(i)
			Set name = $S(item.Name="":item.ClassName,1:item.Name)
			Set type = item.BusinessType()
			If (item.Enabled)&&(name'="")&&(type'="") {
				Set tList(type,name) = item
			}
		}

		#; show members of this production
		For type=$$$eHostTypeService,$$$eHostTypeProcess,$$$eHostTypeOperation {
			If ($D(tList(type))) {
				Set tCols = 3
				&html<<table class="Summary" border="0" cellspacing="0" cellpadding="1">
				<tr><th colspan="#(tCols)#" title="#(hlpKey)#">#($G(msgHost(type)))#</th></tr>>
				&html<<tr>>
				Set col = 1
				Set tPageName = $O(tList(type,""))
				While (tPageName '= "") {
					#Dim item As Ens.Config.Item
					Set item = tList(type,tPageName)
					Set url = ""
					Set inh = ""
					Set priv = ""
					Set url = "%25CSP.Documatic.cls?PAGE=CLASS&LIBRARY="_$ZCVT($ZU(5),"O","URL")_"&CLASSNAME="_$ZCVT(item.ClassName,"O","URL")
					Set url = ##class(%CSP.Page).Link(url)
					Set:inh="" inh = "class=""inherited"""
					
					If (col > tCols) {
						&html<</tr><tr>>
						Set col = 1
					}
					&html<<td #(priv)#><a #(inh)# href="#(url)#" title="#($ZCVT(item.Comment,"O","HTML"))#">#($ZCVT(tPageName,"O","HTML"))#</a></td>>
					Set col = col + 1
			
					Set tPageName = $O(tList(type,tPageName))
				}
				&html<</tr>>
				&html<</table>>
				&html<<br>>
			}
		}
	}
	Catch(ex) {
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="RenderBusinessServiceInfo">
<Description><![CDATA[
Show summary information about the given service class.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pClass:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set msgMain = $$$Text("This is an Ensemble Business Service class.")
		Set hlpKey = ""

		&html<<div class="SummaryText">#(msgMain)#</div><br/>>
		Do ..RenderAdapterInfo(pClass)
	}
	Catch(ex) {
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="RenderBusinessProcessInfo">
<Description><![CDATA[
Show summary information about the given process class.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pClass:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set msgMain = $$$Text("This is an Ensemble Business Process class.")
		Set hlpKey = ""

		&html<<div class="SummaryText">#(msgMain)#</div><br/>>

		Do ..RenderRequestInfo(pClass)
	}
	Catch(ex) {
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="RenderBusinessOperationInfo">
<Description><![CDATA[
Show summary information about the given operation class.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pClass:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set msgMain = $$$Text("This is an Ensemble Business Operation class.")

		&html<<div class="SummaryText">#(msgMain)#</div><br/>>
		Do ..RenderAdapterInfo(pClass)

		Do ..RenderRequestInfo(pClass)
	}
	Catch(ex) {
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="RenderAdapterInfo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pClass:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tAdapter = $$$comMemberKeyGet(pClass,$$$cCLASSparameter,"ADAPTER",$$$cPARAMdefault)
		If (tAdapter '= "") {
			Set msgMain = $$$FormatText($$$Text("The associated Adapter class is %1."),##class(%CSP.Documatic).ClassToLink(tAdapter,,$ZU(5)))
			&html<<div class="SummaryText">#(msgMain)#</div><br/>>
		}
	}
	Catch(ex) {
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="RenderRequestInfo">
<Description><![CDATA[
Show summary information for the request/responses for a host.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pClass:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set msgReq = $$$Text("Request")
		Set msgResp = $$$Text("Response")
		Set tReqList = $zobjclassmethod(pClass,"GetRequestClassList")
		Set tRespList = $zobjclassmethod(pClass,"GetResponseClassList")

		If ($LL(tReqList)>0) {
			&html<<table class="Summary" border="0" cellspacing="0" cellpadding="1">
			<tr><th>#(msgReq)#</th><th>#(msgResp)#</th></tr>>

			For i = 1:1:$LL(tReqList) {
				Set tReq = $LG(tReqList,i)
				Set tResp = $LG(tRespList,i)

				Set urlReq = "%25CSP.Documatic.cls?PAGE=CLASS&LIBRARY="_$ZCVT($ZU(5),"O","URL")_"&CLASSNAME="_$ZCVT(tReq,"O","URL")
				Set urlReq = ##class(%CSP.Page).Link(urlReq)
				Set urlResp = "%25CSP.Documatic.cls?PAGE=CLASS&LIBRARY="_$ZCVT($ZU(5),"O","URL")_"&CLASSNAME="_$ZCVT(tResp,"O","URL")
				Set urlResp = ##class(%CSP.Page).Link(urlResp)

				&html<<tr>
				<td><a class="inherited" href="#(urlReq)#" title="">#($ZCVT(tReq,"O","HTML"))#</a></td>
				<td><a class="inherited" href="#(urlResp)#" title="">#($ZCVT(tResp,"O","HTML"))#</a></td>
				</tr>>
			}
			&html<</table>>
			&html<<br>>
		}
	}
	Catch(ex) {
	}
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>