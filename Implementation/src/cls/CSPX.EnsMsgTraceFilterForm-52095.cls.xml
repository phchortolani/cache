<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsMsgTraceFilterForm">
<Description><![CDATA[
An AutoForm for gathering Message Trace filter info]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject,CSPX.AutoFormCSP</Super>
<System>3</System>

<Parameter name="FORMCOLUMNS">
<Description><![CDATA[
Number of columns used to layout forms for this class]]></Description>
<Default>3</Default>
</Parameter>


<Property name="IncludeEvents">
<Description><![CDATA[
Include session events]]></Description>
<Type>%Boolean</Type>

<Parameter name="CAPTION" value="@Ensemble:IncludeEvents@Include Events"/>
</Property>


<Property name="SessionId">
<Description><![CDATA[
Session id]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:SessionId@Session Id"/>

<Parameter name="MAXLEN" value="25"/>
</Property>


<Property name="StartTime">
<Description><![CDATA[
Starting date and time]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:StartTime@Start Time"/>

<Parameter name="MAXLEN" value="25"/>
</Property>


<Property name="EventsWindow">
<Description><![CDATA[
Time window after last message to include session events]]></Description>
<Type>%Integer</Type>

<Parameter name="CAPTION" value="@Ensemble:EventsWindow@Events Time Window"/>
</Property>


<Property name="StartId">
<Description><![CDATA[
Starting id]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:StartId@Start Id"/>

<Parameter name="MAXLEN" value="25"/>
</Property>


<Property name="EndTime">
<Description><![CDATA[
Ending date and time]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:EndTime@End Time"/>

<Parameter name="MAXLEN" value="25"/>
</Property>


<Property name="EventsMaxRows">
<Description><![CDATA[
Maximum number of Event Log records to scan after start time to include session events]]></Description>
<Type>%Integer</Type>

<Parameter name="CAPTION" value="@Ensemble:EventsMaxRows@Events Max Rows"/>
</Property>


<Property name="EndId">
<Description><![CDATA[
Ending id]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:EndId@End Id"/>

<Parameter name="MAXLEN" value="25"/>
</Property>


<Method name="CreateInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pID:%String</FormalSpec>
<ReturnType>%CSP.Util.AutoForm</ReturnType>
<Implementation><![CDATA[
#define SetPropVal(%prop)	Set tObj.%prop = $G(%request.Data("%prop",1))

	Set tObj = ..%New()

	$$$SetPropVal(SessionId)
	Do TS("StartTime",0)
	$$$SetPropVal(StartTime)
	Do TS("EndTime",1)
	$$$SetPropVal(EndTime)
	$$$SetPropVal(StartId)
	$$$SetPropVal(EndId)
	$$$SetPropVal(IncludeEvents)
	$$$SetPropVal(EventsWindow)
	$$$SetPropVal(EventsMaxRows)

	If ""=tObj.SessionId {
		Set tMsgId=$G(pID(1))
		If ""'=tMsgId {
			&sql(SELECT SessionId INTO :tSessionId FROM Ens.MessageHeader WHERE %ID = :tMsgId)
			Set:'SQLCODE tObj.SessionId=tSessionId
		}
	}
	
	// Defaults for inclusion of events; normalize and persist in %session
	Set IncludeEvents = tObj.IncludeEvents
	Set EventsWindow = tObj.EventsWindow
	Set EventsMaxRows = tObj.EventsMaxRows
	Set:IncludeEvents="" IncludeEvents = ##class(CSPX.EnsMsgTraceSVG).IncludeEvents()
	Set:EventsWindow="" EventsWindow = ##class(CSPX.EnsMsgTraceSVG).EventsWindow()
	Set:EventsMaxRows="" EventsMaxRows = ##class(CSPX.EnsMsgTraceSVG).EventsMaxRows()
	If (IncludeEvents'=0) && (IncludeEvents'=1) Set IncludeEvents = $Case(IncludeEvents,"off":0,"false":0,:1)
	Set EventsWindow = +EventsWindow Set:EventsWindow<0 EventsWindow = 0
	Set EventsMaxRows = +EventsMaxRows Set:EventsMaxRows<0 EventsMaxRows = 0
	Set tObj.IncludeEvents = IncludeEvents, %session.Data("EnsMsgTraceFilterForm","IncludeEvents") = IncludeEvents
	Set tObj.EventsWindow = EventsWindow, %session.Data("EnsMsgTraceFilterForm","EventsWindow") = EventsWindow
	Set tObj.EventsMaxRows = EventsMaxRows, %session.Data("EnsMsgTraceFilterForm","EventsMaxRows") = EventsMaxRows

	Quit tObj
	
TS(prop,IsEnd)	//
	Set in = $G(%request.Data(prop,1)) Quit:in=""
	Set fs = $P(in,".",2), in = $P(in,".",1) Set:fs'?1.3n fs = "" // Fractional seconds must be 1 to 3 digits, or will be ignored
	Set err = $$FormatDateTime^EnsUtil(in,IsEnd,.out)
	If 'err Set:fs'="" out = out_"."_fs Set $ZObjProperty(tObj, prop) = out, %request.Data(prop,1) = out
	Else  Set %response.Context("$ERROR_"_prop) = in
	Quit
]]></Implementation>
</Method>

<Method name="OnSubmit">
<FormalSpec>&amp;pID:%String,pSubmit:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
#define GetPropVal(%prop) Set ..%prop=$ZStrip(..%prop,"<>W") Set:..%prop'="" %response.Context("%prop") = ..%prop

	If (pSubmit = "$AUTOFORM_RESET") {
		// get default values & submit those
		Set tObj = ..%New() // Blank values for StartId, EndId, StartTime, EndTime
		Kill %session.Data("EnsMsgTraceFilterForm") // Remove events' properties from Session to get them back to default
		Do tObj.OnSubmit(.pID, "$AUTOFORM_SEARCH")
		Quit $$$OK
	}
	Else {
	$$$GetPropVal(SessionId)
	$$$GetPropVal(StartTime)
	$$$GetPropVal(EndTime)
	$$$GetPropVal(StartId)
	$$$GetPropVal(EndId)
	$$$GetPropVal(IncludeEvents)
	$$$GetPropVal(EventsWindow)
	$$$GetPropVal(EventsMaxRows)
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnDefineButtons">
<Description><![CDATA[
Define buttons]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pButtons:%CSP.Util.FormButton</FormalSpec>
<Implementation><![CDATA[
	Set pButtons(1) = ##class(%CSP.Util.FormButton).%New()
	Set pButtons(1).Name = "$AUTOFORM_SEARCH"
	Set pButtons(1).Caption = $$$Text("Search","Ensemble")

	Set pButtons(2) = ##class(%CSP.Util.FormButton).%New()
	Set pButtons(2).Name = "$AUTOFORM_RESET"
	Set pButtons(2).Caption = $$$Text("Reset")
]]></Implementation>
</Method>
</Class>
</Export>