<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.ui.UI">
<Description><![CDATA[

This class represents a UI class that will answer to the @nM form events.

<p>

Talking about the architecture, all classes in the UI layer must extend
this one.

<p>

Contains knowlegde regarding the creation of HTML and all other issues
that a UI class must deal with: form flow controle, session and request
information, exception treatment, user footprints, and more.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<Abstract>1</Abstract>
<ClassType/>
<Import>COM.fwk.biz</Import>
<IncludeCode>COMSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Property name="nmSession">
<Description><![CDATA[

The session object.
]]></Description>
<Type>COM.fwk.Session</Type>
<Private>1</Private>
</Property>


<Property name="nmRequest">
<Description><![CDATA[

The request object.
]]></Description>
<Type>COM.fwk.Request</Type>
<Private>1</Private>
</Property>


<Method name="getSession">
<Description><![CDATA[

Retrieves the session object. See the <class>COM.fwk.Session</class>
class for more details.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ReturnType>COM.fwk.Session</ReturnType>
<Implementation><![CDATA[
	if (..nmSession = "") {
		set ..nmSession = ##class(COM.fwk.Session).%New()
	}
	
	quit ..nmSession
]]></Implementation>
</Method>

<Method name="getRequest">
<Description><![CDATA[

Retrieves the request object. See the <class>COM.fwk.Request</class>
class for more details.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ReturnType>COM.fwk.Request</ReturnType>
<Implementation><![CDATA[

	if (..nmRequest = "") {
		set ..nmRequest = ##class(COM.fwk.Request).%New()
	}
	
	quit ..nmRequest
]]></Implementation>
</Method>

<Method name="currentUserIsTranslator">
<Description><![CDATA[

Tells if the current user logged is a translator user.
Queries the @nM Employee data.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<Implementation><![CDATA[
	
	set bo = ##class(COM.fwk.www.bo.EmployeeBO).%New()

	quit bo.isTranslator(..getSession().getCurrentUserName())
]]></Implementation>
</Method>

<Method name="getLanguageText">
<Description><![CDATA[

Returns the language text (WWW009) for the specified key.
If the key doesn't start with the current module abbreviation,
it will be prefixed to the key.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>key:%String,v1:%String="",v2:%String="",v3:%String=""</FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	set moduleAbbreviation = ..getModuleAbbreviation()
 	
	if (' ##class(COM.fwk.util.StringUtil).startsWith(key, moduleAbbreviation)) {
		set key = moduleAbbreviation _ key
	}

	quit ##class(COM.fwk.www.bo.LanguageTextBO).%New().getText(key, v1, v2, v3)
]]></Implementation>
</Method>

<Method name="forwardToCurrentForm">
<Description><![CDATA[

Directs the flow of the application to the current form.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<Implementation><![CDATA[	do ..forwardToEntityForm(..getRequest().getCurrentFormName(), ..getRequest().getCurrentPrimaryKey())
]]></Implementation>
</Method>

<Method name="forwardToEntityForm">
<Description><![CDATA[

Directs the flow of the application to a form with primary key.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>formName:%String,pk:%String</FormalSpec>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Method Usage
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 07-Jun-2006	HJRB	BR014026: Removed dots from name - changes undone
	;-------------------------------------------------------------------------------

	do createForm^COM.fwk.util.NMUtil(formName, pk)	//BR014026
]]></Implementation>
</Method>

<Method name="raiseException">
<Description><![CDATA[

Interrups the normal flow of execution of a method raising an
exception. The exception raised should be treated by one of
its calling methods. Otherwise, the @nM will show the stacktrace
to the user.

<p>

Any exception can be thrown by this method.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>exception:COM.fwk.exception.BaseException</FormalSpec>
<Implementation><![CDATA[
	set %COMfwkException = exception
	set $ECODE = %COMfwkException
]]></Implementation>
</Method>

<Method name="raiseRuntimeException">
<Description><![CDATA[

Interrups the normal flow of execution of a method raising an
exception. The exception raised should be treated by one of
its calling methods. Otherwise, the @nM will show the stacktrace
to the user.

<p>

This method throws only <class>COM.fwk.exception.RuntimeException</class>
exceptions. 

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>exceptionDescription:%String</FormalSpec>
<Implementation><![CDATA[	do ..raiseException(##class(COM.fwk.exception.RuntimeException).%New(exceptionDescription, $get(%COMfwkException)))
]]></Implementation>
</Method>

<Method name="getModuleAbbreviation">
<Description><![CDATA[

Retrieves the abbreviation name for the current module.

<p>

This is an abstract method and should be implemented by all subclasses.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	do ..raiseRuntimeException("This method should be implemented on its subclasses.")
]]></Implementation>
</Method>

<Method name="isAlphaNumeric">
<Description><![CDATA[

Tells if a text is made only of alphanumeric characters.

<p>

TODO Implement for all non-alphanumeric characters. This
method is implemented only for some of them. 11.aug.2005

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>str:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// TODO implementar corretamente, fiz uma implementação parcial
	// só pra funcionar no que quero
	quit (($data(str))
	   && ($length(str) > 0) 
	   && ($find(str, "#") = 0) 
	   && ($find(str, "~") = 0) 
	   && ($find(str, "^") = 0) 
	   && ($find(str, "+") = 0) 
	   && ($find(str, ",") = 0))
]]></Implementation>
</Method>

<Method name="horologToString">
<Description><![CDATA[

Formats the horolog time format to the presentation time format.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>horolog:%String</FormalSpec>
<Implementation><![CDATA[
	if ($length(horolog, ",") = 1) {
		quit $zdate(horolog)
		
	} elseif ($length(horolog, ",") = 2) {
		quit $zdatetime(horolog)
	}
]]></Implementation>
</Method>

<Method name="printLink">
<Description><![CDATA[

Prints an HTML link that calls a @nM routine.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>calledCode:%String,formName:%String,primaryKey:%String</FormalSpec>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Method Usage
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 07-Jun-2006	HJRB	BR014026: Removed dots from name - changes undone
	;-------------------------------------------------------------------------------
	// TODO tirar dependência com AEP
	do createNewManualLink^COM.fwk.util.NMUtil($$formatRoutineCallForManualLink^COM.fwk.util.NMUtil(calledCode), formName, primaryKey, "", $$getCurrentHistory^COM.fwk.util.NMUtil(..getRequest().getHistory()))	//BR014026
]]></Implementation>
</Method>

<Method name="getUserFootPrint">
<Description><![CDATA[

Retrieves the user footprint for the specified parameter name.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>parameterName:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit ##class(UserFootPrintBO).%New().getUserFootPrint(..getModuleAbbreviation(), parameterName)
]]></Implementation>
</Method>

<Method name="getUserFootPrintSet">
<FormalSpec>parameterName:%String</FormalSpec>
<ReturnType>%ListOfDataTypes</ReturnType>
<Implementation><![CDATA[	quit ##class(UserFootPrintBO).%New().getUserFootPrintSet(..getModuleAbbreviation(), parameterName)
]]></Implementation>
</Method>

<Method name="setUserFootPrint">
<Description><![CDATA[

Defines the user footprint value for the specified parameter name.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>parameterName:%String,parameterValue:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	do ##class(UserFootPrintBO).%New().setUserFootPrint(..getModuleAbbreviation(), parameterName, parameterValue)
]]></Implementation>
</Method>

<Method name="getFormFootPrint">
<Description><![CDATA[

Retrieves the user footprint for the specified form name
and parameter name.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>formName:%String,parameterName:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit ..getUserFootPrint(formName _ "_" _ parameterName)
]]></Implementation>
</Method>

<Method name="setFormFootPrint">
<Description><![CDATA[

Defines the user footprint value for the specified form name and parameter name.

<p>

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>formName:%String,parameterName:%String,parameterValue:%String</FormalSpec>
<Implementation><![CDATA[	do ..setUserFootPrint(formName _ "_" _ parameterName, parameterValue)
]]></Implementation>
</Method>

<Method name="getApplicationParameter">
<Description><![CDATA[

Gets an application parameter from the @nM data.

<p>

Author: Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>parameterName:%String,searchValue:%String</FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit ##class(COM.fwk.www.bo.ApplicationParameterBO).%New().getParameterText(parameterName, , searchValue)
]]></Implementation>
</Method>

<Method name="getSystemParameter">
<Description><![CDATA[

Gets a system parameter from the @nM application.

<p>

Author: Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>parameterName:%String,searchValue:%String</FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit ##class(COM.fwk.www.bo.SystemParameterBO).%New().getParameterText(parameterName, , searchValue)
]]></Implementation>
</Method>

<Method name="printSpaces">
<FormalSpec>numberOfSpaces:%Integer=1</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[
	for i = 1 : 1 : numberOfSpaces
	{
		write "&nbsp"
	}
]]></Implementation>
</Method>

<Method name="printNewLine">
<FormalSpec>numberOfLines:%Integer=1</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[
	for i = 1 : 1 : numberOfLines
	{
		&html<<br>>
	}
]]></Implementation>
</Method>
</Class>
</Export>