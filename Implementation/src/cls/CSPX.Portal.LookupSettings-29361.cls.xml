<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.Portal.LookupSettings">
<Description><![CDATA[
Zen based LookupSettings UI for Ensemble 2008.1]]></Description>
<Super>CSPX.Portal.Template</Super>
<System>4</System>

<Parameter name="APPLICATION">
<Description><![CDATA[
Class name of application this page belongs to.]]></Description>
<Default>CSPX.Portal.Application</Default>
</Parameter>


<Parameter name="PAGENAME">
<Description><![CDATA[
Displayed name of this page.]]></Description>
<Default>Lookup Settings</Default>
</Parameter>


<Property name="LastCell">
<Description><![CDATA[
Temporarily saved cell value prior to oneditcell]]></Description>
<Type>%String</Type>
</Property>


<Parameter name="AUTONS">
<Description><![CDATA[
If auto-switch namespace to whatever $NAMESPACE is passed in]]></Description>
<Type>BOOLEAN</Type>
<Default>1</Default>
</Parameter>


<Property name="msgNothing">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$Text("Global name is empty. Nothing to delete.")</InitialExpression>
</Property>


<Property name="msgEnterTable">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$Text("Please enter a Global name.")</InitialExpression>
</Property>


<Property name="msgEnterKey">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$Text("Please enter a Key.")</InitialExpression>
</Property>

<XData name="Style">
<Description><![CDATA[
This Style block contains page-specific CSS style definitions.]]></Description>
<Data><![CDATA[
<style type="text/css">

#idHTMLDetails {
	border: solid gray 1px;	
	height: 250px;
	overflow-y: auto;	
	background: #E6E4D8;
}
a.link {
	color: blue;
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 0.8em; 
	font-weight: bold;
	padding-left: 4px;
	text-decoration: none; 
}
a.link:visited {
	color: blue;
}	
a.link:hover {
	color: red;
}

</style>
]]></Data>
</XData>
<XData name="detailPane">
<Description><![CDATA[
This XML block defines the contents of the table pane.]]></Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane containerStyle="padding:20px">
<hgroup enclosingClass="DetailCommand">
<link id="btnNew" caption="Add New Table" href="javascript:zenPage.newTable();"/>
</hgroup>
<titleBox id="idTitle" title="" />
<fieldSet id="fld1" layout="vertical" enclosingClass="fieldBoxIndent" cellStyle="padding-left:5px;height:4em;" >
<form name="thisForm" id="thisForm" containerStyle="padding:2px;">
<listBox name="cmbTable" id="cmbTable" label="The following tables are currently defined:" onchange="zenPage.reloadDetails();" >
</listBox>
<hgroup cellVAlign="top">
<text label="Lookup Table" name="txtGlobal" id="txtGlobal" labelClass="caption" size="30" hint="Enter global name." hintClass="hintText"/>
<spacer width="2"/>
<vgroup>
<hgroup>
<text label="Key" name="txtKey" id="txtKey" labelClass="caption" size="28" hint="Enter a key." hintClass="hintText"/>
<spacer width="2"/>
<text label="Value" name="txtValue" id="txtValue" size="28" labelClass="caption" hint="Enter a value." hintClass="hintText"/>
<button name="btnOK" id="btnOK" caption="Insert" onclick="zenPage.saveKey();" hint=" "/>
<spacer width="70"/>
</hgroup>
<html id="idHTMLDetails" containerStyle="padding-top:2px;" OnDrawContent="DrawDetails" seed=""/>
<button name="btnDelete" id="btnDelete" caption="Delete Table" onclick="zenPage.deleteKey('');" disabled="true"/>
</vgroup>
</hgroup>

<text id="$NAMESPACE" hidden="true"/>
</form>
</fieldSet>
</pane>
]]></Data>
</XData>

<Method name="newTable">
<Description><![CDATA[
User clicked new and we clear the fields and put cursor on Table field]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[	zenPage.gotoPage("CSPX.Portal.LookupSettings.cls");
]]></Implementation>
</Method>

<Method name="saveKey">
<Description><![CDATA[
User clicked Save and we validate values and then process]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	var global = this.getComponentById("txtGlobal");
	var key =  this.getComponentById("txtKey");
	var value =  this.getComponentById("txtValue").getValue();
	var ok = 1;
	if (this.CheckAllBlanks(global.getValue()) == 1) {
		global.setProperty("hintClass","redText");
		if (ok == 1) global.focus();
		ok = 0;
	} else {
		global.setProperty("hintClass","hintText");
	}
	if (this.CheckAllBlanks(key.getValue()) == 1) {
		key.setProperty("hintClass","redText");
		if (ok == 1) key.focus();
		ok = 0;
	} else {
		key.setProperty("hintClass","hintText");
	}
	if (ok == 0) {
		return;
	}
	//	
	
	
	var globalexits = zenPage.SaveGlobal(global.getValue(),key.getValue(),value);
	if (globalexits > 0 ) {
		this.reloadDetails();
	} else {
		// Clear current table list
		this.clearTableList();
		// Reload combo box for table names
		this.LoadTableList(global);
		zenPage.getComponentById("cmbTable").setValue(global);
		// Reload current detail box
		this.reloadDetails();
	}
]]></Implementation>
</Method>

<Method name="updateKey">
<FormalSpec>key,value</FormalSpec>
<Language>javascript</Language>
<Implementation><![CDATA[
	var global = zenPage.getComponentById("cmbTable").getValue();
	zenPage.getComponentById("txtGlobal").setValue(global);
	zenPage.getComponentById("txtKey").setValue(key);
	zenPage.getComponentById("txtValue").setValue(value);
]]></Implementation>
</Method>

<Method name="deleteKey">
<Description><![CDATA[
User clicked the Delete button]]></Description>
<FormalSpec>key</FormalSpec>
<Language>javascript</Language>
<Implementation><![CDATA[
	var global = zenPage.getComponentById("cmbTable").getValue();
	if (global == "") {
		alert(this.msgNothing);
		this.getComponentById("txtGlobal").focus();
		return;
	} else if (key == "") {
		var ok = confirm(this.msgDelete(global));
		if (!ok) {
			this.getComponentById("txtKey").focus();
			return;
		}
	} else {
		//var ok = confirm("Do you wish to delete key " + key + "?")
		//if (!ok) return;	
	}
	var anymore = this.DeleteGlobal(global,key);
	// if there is no more for this global, then refresh page
	if (anymore == 0) {
		zenPage.gotoPage("CSPX.Portal.LookupSettings.cls");		
	} else {
		this.reloadDetails();
		this.resetForm(1);
	}
]]></Implementation>
</Method>

<Method name="reloadDetails">
<Description><![CDATA[
User selected an existing lookup table from the drop-down]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	// clear current key and value boxes
	zenPage.resetForm(0);
	var seed = zenPage.getComponentById("cmbTable").getValue();
	var html = zenPage.getComponentById("idHTMLDetails");
	html.setProperty("seed",seed);
	html.refreshContents();
	zenPage.getComponentById("txtGlobal").setValue(seed);
	zenPage.getComponentById("txtKey").focus();
	zenPage.getComponentById("btnDelete").setProperty("disabled",0);
]]></Implementation>
</Method>

<Method name="resetForm">
<Description><![CDATA[
Clear edit form fields]]></Description>
<FormalSpec>gblFlag</FormalSpec>
<Language>javascript</Language>
<Implementation><![CDATA[
	if (gblFlag==1) this.getComponentById("txtGlobal").setValue("");
	this.getComponentById("txtKey").setValue("");
	this.getComponentById("txtValue").setValue("");
]]></Implementation>
</Method>

<Method name="clearTableList">
<Language>javascript</Language>
<Implementation><![CDATA[	zenPage.getComponentById("cmbTable").resetOptions();
]]></Implementation>
</Method>

<Method name="SaveGlobal">
<Description><![CDATA[
Server method to save settings]]></Description>
<FormalSpec>global,key,value,oldvalue="&quot;,replace="false",column=0</FormalSpec>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	#; If replace mode is on, then delete the old value before saving the new one
	If replace = "true", oldvalue '= "" {
		If column = 1 Do ..DeleteGlobal(oldvalue,key)
		Else  If column = 2 Do ..DeleteGlobal(global,oldvalue) 
	}
	Set GlobalExists = $D(^Ens.LookupTable(global))
	Set ^Ens.LookupTable(global,key) = value
	Quit GlobalExists
]]></Implementation>
</Method>

<Method name="DeleteGlobal">
<Description><![CDATA[
Server method to delete settings]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>global,key</FormalSpec>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	If key = "" Kill ^Ens.LookupTable(global)
	Else  Kill ^Ens.LookupTable(global,key)
	Quit $D(^Ens.LookupTable(global))
]]></Implementation>
</Method>

<Method name="msgDelete">
<ClassMethod>1</ClassMethod>
<FormalSpec>global</FormalSpec>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tmsg = $$$FormatText($$$Text("Are you sure you want to delete all keys for global %1"),global)
	Quit tmsg
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<Description><![CDATA[
This callback is called after the server-side page 
object and all of its children are created.<br>
Subclasses can override this to add, remove, or modify 
items within the page object model, or to provide values
for controls.]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set ..%GetComponentById("idTitle").title = $$$FormatText($$$Text("View and edit Ensemble lookup tables for namespace %1:"),$zu(5))

	#; Add locator links for this page to the locator bar
	Set tLocator = ..%GetComponentById("locatorBar")
	Set tLocatorLink = ##class(%ZEN.Auxiliary.locatorLink).%New()
	Do tLocator.links.Insert(tLocatorLink)
	Do ..%AddComponent(tLocatorLink)
	Set tLocatorLink.caption = "Ensemble"
	Set tMgmtLink = ##class(%CSP.Page).Link(##class(%EnsembleMgr).DetermineMgmtURLForNamespace($ZU(5)))
	Set tLocatorLink.href = $ZCVT(tMgmtLink,"O","URL")

	Set tLocatorLink = ##class(%ZEN.Auxiliary.locatorLink).%New()
	Do tLocator.links.Insert(tLocatorLink)
	Do ..%AddComponent(tLocatorLink)
	Set tLocatorLink.caption = "Maintenance"
	Set tLocatorLink.href = $ZCVT("UtilEnsMA.csp","O","URL")
	
	Set tLocatorLink = ##class(%ZEN.Auxiliary.locatorLink).%New()
	Do tLocator.links.Insert(tLocatorLink)
	Do ..%AddComponent(tLocatorLink)
	Set tLocatorLink.caption = "Lookup Settings"
	Set tLocatorLink.href = $ZCVT(%request.URL,"O","URL")
	

	Set ..%GetComponentById("$NAMESPACE").value = $ZU(5)
	Set tCombo = ..%GetComponentById("cmbTable")
	Set tGlobal = $O(^Ens.LookupTable(""))
	Set tRow = 0
	While tGlobal '= "" {
		Set tRow = tRow + 1
		Set tOption = ##class(%ZEN.Auxiliary.option).%New()
		Do tCombo.options.Insert(tOption)
		Do ..%AddComponent(tOption)
		Set tOption.text = tGlobal
		Set tOption.value = tGlobal
		Set tGlobal = $O(^Ens.LookupTable(tGlobal))
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CheckAllBlanks">
<ClassMethod>1</ClassMethod>
<FormalSpec>string</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[	Quit $ZStrip(string,"<>W")=""
]]></Implementation>
</Method>

<Method name="CreateGrid">
<Description><![CDATA[
Server-side callback to provide data for the dynaGrid. Called when the page is drawn.]]></Description>
<FormalSpec>pGrid:%ZEN.Component.dynaGrid,pDataSet:%ZEN.Auxiliary.dataSet</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do pDataSet.%Clear()

	Set tSC = ..CreateDataSet(.pDataSet)
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CreateDataSet">
<Description><![CDATA[
Build dataset for grid. Called from both CreateGrid and RefreshGrid.]]></Description>
<FormalSpec>pDataSet:%ZEN.Auxiliary.dataSet</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	#; column labels  (dimension 2)
	Do pDataSet.%SetLabel("Global",1,2)
	Do pDataSet.%SetLabel("Key",2,2)
	Do pDataSet.%SetLabel("Value",3,2)

	Set row = 0
	#; fill in contents of dataSet 
	#; This is a 2-D data structure
	Set tGlobal = $O(^Ens.LookupTable(""))
	While tGlobal '= "" {
		Set row = row + 1
		Set tKey = $O(^Ens.LookupTable(tGlobal,""))
		While tKey '= "" {
			Do pDataSet.%SetLabel(row,row,1)
			Do pDataSet.%SetValue(tGlobal,row,1)
			Do pDataSet.%SetValue(tKey,row,2)
			Do pDataSet.%SetValue(^Ens.LookupTable(tGlobal,tKey),row,3)
			Set tKey = $O(^Ens.LookupTable(tGlobal,tKey))
			If tKey '= "" Set row = row + 1
		}
		Set tGlobal = $O(^Ens.LookupTable(tGlobal))
	}
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="RefreshGrid">
<Description><![CDATA[
Refresh grid dataset from the server.]]></Description>
<FormalSpec>pGrid:%ZEN.Component.dynaGrid,pMode:%String="&quot;</FormalSpec>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set pDataSet = pGrid.dataSet
	Do pDataSet.%Clear()
	Set tSC = ..CreateDataSet(.pDataSet)
	
	Do pGrid.%ForceClientRender()
]]></Implementation>
</Method>

<Method name="DrawDetails">
<Description><![CDATA[
Called to build the details table for the selected table]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>seed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If seed = "" Quit $$$OK
	Set tRow = 0
	Set tGlobal = seed
	&html<<table class="repeatingGroup" cellspacing="2" cellpadding="0" border="1" width="100%">>
	Set tKey = $O(^Ens.LookupTable(tGlobal,""))
	While tKey '= "" {
		Set tRow = tRow + 1
		Set tValue = $G(^Ens.LookupTable(tGlobal,tKey))
		&html<<tr>>
		&html<<td width="39%">#($ZCVT(tKey,"O","HTML"))#</td>>
		&html<<td width="39%">#($S(tValue'="":$ZCVT(tValue,"O","HTML"),1:"&nbsp;"))#</td>>
		&html<<td><input type="button" value="Edit"   onclick="zenPage.updateKey('#(tKey)#','#(tValue)#');">>
		&html<<input type="button" value="Delete" onclick="zenPage.deleteKey('#(tKey)#');"></td></tr>>
		Set tKey = $O(^Ens.LookupTable(tGlobal,tKey))
	}
	If tRow = 0 {
		Set tNotFound = $$$TextHTML("No matches found!")
		&html<<tr><td>&nbsp;&nbsp;</td><td class="caption">#(tNotFound)#</td></tr>>
	}
	&html<</table>>
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="LoadTableList">
<Description><![CDATA[
Build Table list after user added new ones.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>tCurrent:%String</FormalSpec>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tGlobal = $O(^Ens.LookupTable(""))
	Set tRow = 0
	While tGlobal '= "" {
		Set tRow = tRow + 1
		&js< zenPage.getComponentById("cmbTable").appendOption('#(tGlobal)#','#(tGlobal)#'); >
		Set tGlobal = $O(^Ens.LookupTable(tGlobal))
	}
	Quit
]]></Implementation>
</Method>

<Method name="DrawTitle">
<Description><![CDATA[
Used to draw title for this page. pHalpAddress is need to build the link for Help for this page.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pSeed = $$$TextHTML("Lookup Settings")
	Set pHelpAddress = "Ensemble,Maintenance,LookupSettings"
	Do %application.DrawTitle(pSeed_"^"_pHelpAddress)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="onloadHandler">
<Description><![CDATA[
This client event, if present, is fired when the page is loaded.]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[	this.getComponentById("txtGlobal").focus();
]]></Implementation>
</Method>
</Class>
</Export>