<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsHomePagePane">
<ClassType/>
<IncludeCode>EnsUI,EnsConstants</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.Pane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Property name="FormClass">
<Description><![CDATA[
Name of class used to provide Detail or Form view;]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="FormObject">
<Description><![CDATA[
The object that provides the details to display.]]></Description>
<Type>%RegisteredObject</Type>

<Parameter name="XMLPROJECTION" value="none"/>
</Property>


<Property name="SubmitPage">
<Description><![CDATA[
Page (URL) to go to when a form is submitted.]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="SubmitTarget">
<Description><![CDATA[
TARGET attribute for submitted form.]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="Display">
<Description><![CDATA[
How to display this Form Page.]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="20"/>

<Parameter name="VALUELIST" value=",form,table"/>
</Property>


<Property name="Dynamic">
<Description><![CDATA[
If true, display this form using the Dynamic form viewer.]]></Description>
<Type>%Boolean</Type>
</Property>


<Property name="Buttons">
<Description><![CDATA[
An optional list of buttons displayed along the bottom of a form.]]></Description>
<Type>%CSP.Util.FormButton</Type>
<Collection>list</Collection>

<Parameter name="XMLITEMNAME" value="Button"/>
</Property>

<UDLText name="T">
<Content>
// Default refresh rate in seconds

</Content>
</UDLText>


<Parameter name="RefreshRate">
<Default>5</Default>
</Parameter>


<Method name="DrawHEAD">
<Description><![CDATA[
Overwritten by subclasses to draw anything this pane needs for the HEAD section.]]></Description>
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	&html<
	<script language="javascript">
	// time used for refresh
var timerID = null;

// call this to dynamically refresh 
function refreshTable()
{
	//if (timerID) {
		//self.clearTimeout(timerID);
		//self.clearInterval(timerID);
	//}
	callUpdate();

}

</script>
	>
	
	// write out methods that perform the hyper-calls
	Set tStopProd = $$$TextJS("Are you sure you want to stop Production")
	Set tStartProd = $$$TextJS("Are you sure you want to start Production")

	Write "<script language='javascript'>",!
	Write "function callResetCounters()",!
	Write "{",!
	Write ##class(%CSP.Page).HyperEventCall("CSPX.EnsHomePagePane.ResetCounters",,1)
 	Write ";",!
	Write "}",!
	Write "function callUpdate()",!
	Write "{",!
	Write ##class(%CSP.Page).HyperEventCall("CSPX.EnsHomePagePane.ResetProperties",,1)
  	Write ";",!
 	Write "}",!
	Write !
	Write "function confirmStop(production)",!
	Write "{",!
	Write " var a = (confirm('"_tStopProd_" ' + production + '?'));",!
	Write " if (a) {",!
	Write "		self.document.location = '"_##class(%CSP.Page).Link("CSPX.EnsStartStopPage.cls?MODE=stop&URL=UtilEnsHome.csp")_"&$ID1='+production;",!
	Write " }",!
	Write "}",!
	
	Write "function confirmStart(production)",!
	Write "{",!
	Write " var a = (confirm('"_tStartProd_" ' + production + '?'));",!
	Write " if (a) {",!
	Write "		self.document.location = '"_##class(%CSP.Page).Link("CSPX.EnsStartStopPage.cls?MODE=start&URL=UtilEnsHome.csp")_"&$ID1='+production;",!
	Write " }",!
	Write "}",!
	
	Write "function callProductionRecover()",!
	Write "{",!
 	Write ##class(%CSP.Page).HyperEventCall("CSPX.EnsHomePagePane.ProductionRecover",,1)
 	Write ";",!
 	Write "}",!	
 	
	Write "function callProductionUpdate()",!
	Write "{",!
	Write "		self.document.location = '"_##class(%CSP.Page).Link("CSPX.EnsStartStopPage.cls?MODE=update&URL=UtilEnsHome.csp")_"';",!
	Write "}",!
 		
 	Write "function reloadpage()",!
 	Write "{",!	
 	Write "self.document.location.reload();",!
  	Write "}",!
	Write "</script>",!

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawBODY">
<Description><![CDATA[
Draw the BODY of the detail pane]]></Description>
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If (..Align '= "") {
		&html<<DIV ALIGN="#(..Align)#">>
	}
	// Draw command buttons if any
	Do ..DrawCommands(pInstance)
	Set tNamespace = $zu(5)

	// Get summary data from server
	Set tGetCaption = 1
	Do ##class(CSPX.EnsHomeSummary).GetSummary(.%Session,tGetCaption,%response.Language)
	// Immediately after ProductionUpdate, we want to make sure that
	// the Update button disappear because the Update may not be caught up on the server yet
	// If $G(%session.Data("AfterUpdateProduction")) = 1 Set %Session("Production","Update") = 0,%session.Data("AfterUpdateProduction") = 0
	Set ^%SYS("Ens",tNamespace,"Production","State") = $G(%Session("Production","State"))

	If (..Text '= "") {
		// show descriptive text	
		&html<<DIV CLASS="Text1">#(..LocalizeText(..Text))#</DIV>>
		
		Set msgNS = $$$FormatText($$$Text("This is the <b>%1</b> namespace."),$ZU(5))
		&html<<DIV CLASS="Text">#(msgNS)#</DIV><br/>>
	}

	&html<<table name="Separate" border="0" cellspacing="0" class="homeTable" width="75%">>
	
	#; colors are set in csputils.css
	&html<<tr><td class="homeTD" id="blockProduction" width="50%">>
	Do ..DrawProduction()
	&html<</td><td class="homeTD" id="blockService" width="50%">>
	Do ..DrawSubject("Service","UtilEnsMonitor.csp")
	&html<</td></tr>>
	
	&html<<tr><td class="homeTD" id="blockJobs" width="50%">>
	Do ..DrawSubject("Job","UtilEnsJobs.csp")
	&html<</td><td class="homeTD" id="blockProcess" width="50%">>
	Do ..DrawSubject("Process","UtilEnsMonitor.csp")
	&html<</td></tr>>

	&html<<tr><td class="homeTD" id="blockLog" width="50%">>
	Do ..DrawSubject("Log","UtilEnsLog.csp")
	&html<</td><td class="homeTD" id="blockOperation" width="50%">>
	Do ..DrawSubject("Operation","UtilEnsMonitor.csp")
	&html<</td></tr>>

	&html<</table>>


	;<!--
	;<tr><td class="block" colspan="6" bgcolor="#ccffff">
	;<table class="homeblock" border="0" cols="3" cellspacing="0" cellpadding="3">
	;<tr><td valign="center" id="LastReset" colspan="2">#(tLastReset)# </td><td colspan="3" nowrap>>
	;Set tLastReset = ##class(CSPX.EnsHomeSummary).GetResetCounterTimestampCaption()
	; Do ..DrawButton("javascript:callResetCounters()",$$$LocalizeText("Ensemble","ResetCounter","Reset Counter"))
	;&html<</td></tr>
	;</table>
	;-->

	If (..Align '= "") {
		&html<</DIV>>
	}
	/*
	Set msgSysPortal = $$$TextHTML("Return to System Management Portal")
	Set linkSysPortal = ##class(%CSP.Page).Link("/csp/sys/UtilHome.csp")_"&CSPSHARE=1"
	&html<
	<div class="text1"><a href="#(linkSysPortal)#">#(msgSysPortal)#</a></div>>
	*/
	Do ##class(%CSP.Util.MenuPane).WriteCopyright()
	&html<
	</td></tr>
	<tr><td>
	</table>
	</td></tr>

	</table><!-- end of Separate -->
	>
	// start auto-refresh
	If $G(%session.Data("Home","RefreshRate")) > 0 {
		Set rate = $G(%session.Data("Home","RefreshRate"),..#RefreshRate) * 1000
		&html<<script language="javascript">
			timerID = self.setInterval("refreshTable()",#(rate)#);
		</script>>
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawSubject">
<Description><![CDATA[
Generic method to draw subject box]]></Description>
<FormalSpec>Subject,HeaderLink</FormalSpec>
<Implementation><![CDATA[
	Set click = $$$LocalizeText("Ensemble","click","Click to browse")
	Set SubjectCaption = $$$LocalizeText("Ensemble",Subject,Subject)
	&html<
	<table class="homeblock" border="0" cols="3" cellspacing="0" cellpadding="3" width="100%">
	<tr>
	<td class="statheader" colspan="3"><center><a href="#(##class(%CSP.Page).Link(HeaderLink))#" title="#(click)#">#(SubjectCaption)#</a></center></td>
	</tr>>
	Do ..DrawItems(Subject)
	&html<</table>>
]]></Implementation>
</Method>

<Method name="DrawItems">
<Description><![CDATA[
Generic method to draw subject+item for each line]]></Description>
<FormalSpec>Subject</FormalSpec>
<Implementation><![CDATA[
	Set tItem = ""
	For   {
		Set tItem = $O(%Session(Subject,tItem)) Quit:tItem=""
		Set id = Subject_tItem
		Set tValue = $G(%Session(Subject,tItem))
		Set:tValue=+tValue tValue = $FN(tValue,",")
		&html<
			<tr><td class="sta" nowrap>#($G(%Session(Subject,tItem,"caption")))#:</td><td width="40" class="sta" nowrap id="#(id)#" align="right"><nobr>#(tValue)#&nbsp;</nobr></td></tr>
		>
	}
]]></Implementation>
</Method>

<Method name="DrawProduction">
<Description><![CDATA[
Draw Production Info]]></Description>
<Implementation><![CDATA[
	Set State = $G(%Session("Production","State"))
	Set Production = $G(%Session("Production","Name"))
	Set:Production="" Production = $G(^Ens.Configuration("csp","LastProduction"))
	
	If (Production '= "") {
		Set tProdLink = ##class(%CSP.Page).Link("CSPX.EnsConfigFrame.cls?$ID1=" _ $ZCVT($ZCVT(Production,"O","UTF8"),"O","URL"))
	}
	Else {
		Set tProdLink = ""
	}
	
 Set LocalState($$$eProductionStateRunning) = $$$Text("Ensemble Running")
 Set LocalState($$$eProductionStateStopped) = $$$Text("Ensemble Stopped")
 Set LocalState($$$eProductionStateSuspended) = $$$Text("Ensemble Suspended")
 Set LocalState($$$eProductionStateTroubled) = $$$Text("Ensemble Troubled")
 Set LocalState($$$eProductionStateNetworkStopped) = $$$Text("Ensemble Network Stopped")
	
 #;Set StateCaption = ##class(Ens.DataType.ProductionState).LogicalToDisplay(State)
 Set StateCaption = $G(LocalState(State),"Unknown")
 
 Set RecoverCaption = $$$LocalizeText("Ensemble","Recover","Recover")
 Set tStartProd = $$$LocalizeText("Ensemble","StartProd","Start Production")
 Set tStopProd = $$$LocalizeText("Ensemble","StopProd","Stop Production")
 &html<
<table class="homeblock" border="0" cols="3" cellspacing="0" cellpadding="3" width="100%">
<tr><input type="hidden" name="ProductionState" value="#(State)#">

<td class="statheader" colspan="3"><center>#(StateCaption)#</center></td>
</tr>>
	&html<<tr><td class="sta" colspan="3" nowrap><table width="100%"><tr><td>>
	If State = $$$eProductionStateNetworkStopped!(State=$$$eProductionStateTroubled) {
		Do ..DrawButton("javascript:callProductionRecover()",RecoverCaption)
	} ElseIf  State = $$$eProductionStateStopped {
		If ($G(^Ens.Configuration("csp","LastProduction")) '= "") {
			Set tActiveLink = "javascript:confirmStart('"_^Ens.Configuration("csp","LastProduction")_"')"
			Do ..DrawButton(tActiveLink,tStartProd)
		}
		Else {
		 	Do ..DrawButton("UtilEnsProductions.csp",tStartProd)
		}
	} ElseIf  State = $$$eProductionStateRunning {
		Set tActiveLink = "javascript:confirmStop('"_Production_"')"
 		Do ..DrawButton(tActiveLink,tStopProd)
	} ElseIf  State = $$$eProductionStateSuspended {
		If Production = "" {
	  		Do ..DrawButton("UtilEnsProductions.csp",tStartProd)
		} Else {
	  		Set tActiveLink = "javascript:confirmStart('"_Production_"')"
 	  		Do ..DrawButton(tActiveLink,tStartProd)
		}
	} 
	 If +$G(%Session("Production","Update"))=1 {
	 	&html<</td>>
		 &html<<td class="sta" nowrap>>
		 Set tUpdateProd = $$$LocalizeText("Ensemble","Update Production!","Update Production!")
 		Do ..DrawWarnButton("javascript:callProductionUpdate()",tUpdateProd,$G(%Session("Production","UpdateReason")))
		/*
		&html<<script language="javascript">
		document.getElementById("EnsWarning").style.backgroundColor = "red";
		</script>>	
		*/
	 }
	&html<</td></tr></table></td>>
	Set a = $$$LocalizeText("Ensemble","Production","Production")
	Set b = $$$LocalizeText("Ensemble","ProductionList","Show list of productions")
	Set StartTime = $$$LocalizeText("Ensemble","StartTime","Start time")
	Set more = $$$LocalizeText("Ensemble","more","more...")
 	&html<</tr>
	<tr><td class="sta" nowrap>#(a)#:</td>
		<td class="sta" nowrap align="right"><a title="#(a)#" href="#(tProdLink)#">#(Production)#</a>&nbsp;
							<a title="#(b)#" href="#(##class(%CSP.Page).Link("UtilEnsProductions.csp"))#"><i>#(more)#</i></a></td></tr>
	<tr><td class="sta" nowrap>#(StartTime)#:</td>
		<td class="sta" nowrap align="right">#(%Session("Production","Started"))#&nbsp;</td></tr>
	</table>>
]]></Implementation>
</Method>

<Method name="DrawButton">
<Description><![CDATA[
Generic method to Draw a EnsButton on the home page]]></Description>
<FormalSpec>LinkAction:%String,Caption:%String</FormalSpec>
<Implementation><![CDATA[
	&html<
	<table cellpadding="0">
	<tr><td class="babyTbl" nowrap><a href="#(##class(%CSP.Page).Link(LinkAction))#" title="#(Caption)#">#(Caption)#</a></td></tr>
	</table>
	>
]]></Implementation>
</Method>

<Method name="DrawWarnButton">
<Description><![CDATA[
Generic method to Draw a Ens warning button]]></Description>
<FormalSpec>LinkAction:%String,Caption:%String,pToolTip:%String="&quot;</FormalSpec>
<Implementation><![CDATA[
	Set:pToolTip'="" pToolTip = "title="""_$ZCVT(pToolTip,"O","HTML")_""" "
	&html<
	<table cellpadding="0">
	<tr><td class="babyTbl" id="EnsWarning" #(pToolTip)#><a href="#(##class(%CSP.Page).Link(LinkAction))#">#(Caption)#</a></td></tr>
	</table>
	>
]]></Implementation>
</Method>

<Method name="OnGenerateCode">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set code = ""
	If (..Display '= "") {
		Set code = code _ " Set tPane.Display = " _ ..QuoteCOS(..Display) _ $$$EOL
	}
	If (..Dynamic '= "") {
		Set code = code _ " Set tPane.Dynamic = " _ +..Dynamic _ $$$EOL
	}
	If (..SubmitPage '= "") {
		Set code = code _ " Set tPane.SubmitPage = " _ ..QuoteCOS(..SubmitPage) _ $$$EOL
	}
	If (..SubmitTarget '= "") {
		Set code = code _ " Set tPane.SubmitTarget = " _ ..QuoteCOS(..SubmitTarget) _ $$$EOL
	}
	If (..FormClass '= "") {
		Set code = code _ " Set tPane.FormClass = " _ ..QuoteCOS(..FormClass) _ $$$EOL
		Set code = code _ $$$EOL
		Set code = code _ " // Create instance of object used for form" _ $$$EOL
		
		Set code = code _ " Merge tID = pInstance.IDValues" _ $$$EOL

		If (..Dynamic) {
			// create instance using %OpenId (test for persistent)
			If ($$$comClassKeyGet(..FormClass,$$$cCLASSclasstype) = "persistent") {
				Set code = code _ " Set tPane.FormObject = $zobjclassmethod(" _ ..QuoteCOS(..FormClass) _ ",""%OpenId"",$G(tID(1)))" _ $$$EOL
			}
			Set code = code _ " If ('$IsObject(tPane.FormObject)) { Set tPane.FormObject = $zobjclassmethod(" _ ..QuoteCOS(..FormClass) _ ",""%New"") }" _ $$$EOL
		}
		Else {
			Set code = code _ " Set tPane.FormObject = $zobjclassmethod(" _ ..QuoteCOS(..FormClass) _ ",""CreateInstance"",.tID)" _ $$$EOL
		}
		Set code = code _ $$$EOL
	}

	// buttons
	If (..Buttons.Count() > 0) {
		Set code = code _ " // buttons" _ $$$EOL
	}

	For i = 1:1:..Buttons.Count() {
		Set tButton = ..Buttons.GetAt(i)
		Set code = code _ tButton.GenerateCode()
		Set code = code _ " Do tPane.Buttons.Insert(tButton)" _ $$$EOL
		Set code = code _ $$$EOL
	}
	Set code = code _ $$$EOL


	Quit code
]]></Implementation>
</Method>

<Method name="ProductionRecover">
<Description><![CDATA[
This method is called when user clicks Recover button]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[

	Set tSC = ##class(Ens.Director).RecoverProduction()

	If $$$ISERR(tSC) {
		Do $System.Status.DecomposeStatus(tSC, .tErrors)
		Set e = $O(tErrors(""))
		&js<alert("RecoverProduction: #($G(tErrors(e)))#");>
	} Else {
		&js< CSPPage.document.location.reload();>		
	}
	Quit
]]></Implementation>
</Method>

<Method name="ResetCounters">
<Description><![CDATA[
This method is called when user clicks the "Reset" button]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set $ZT = "Trap1"
	Do ##class(CSPX.EnsHomeSummary).CreateResetCounter()
	&js< CSPPage.document.location.reload();>
Done1	
	Quit
Trap1
	Set $ZT = ""
	&js<alert("ResetCounters: #($ZE)#");>
	Goto Done1
]]></Implementation>
</Method>

<Method name="ResetProperties">
<Description><![CDATA[
Get summary and update counters. Numbers are set into page directly without refresh page.
If Production State value changes, e.g. from Running to Suspended or Troubled, or 
if Production Update value changes, e.g. from 0 to 1, then the whole page is reloaded.]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set $ZT = "Trap2"	

	Kill aResult

	Set tNamespace = $zu(5)
	Set tLastState = $G(^%SYS("Ens",tNamespace,"Production","State"))
	Set tLastUpdate = $G(^%SYS("Ens",tNamespace,"Production","Update"))

	Do ##class(CSPX.EnsHomeSummary).GetSummary(.aResult,0,%response.Language)	//no captions fetch
	
	Set tSubject = $O(aResult(""))	
	While tSubject '= "" {
		If tSubject = "Production" {
			// If Production State or Update is changed then redraw the whole page
			If tLastState '= aResult("Production","State") {
				Set ^%SYS("Ens",tNamespace,"Production","State") = aResult("Production","State")
				&js< CSPPage.document.location.reload();>
			}
			If tLastUpdate '= +$G(aResult("Production","Update")) {
				Set ^%SYS("Ens",tNamespace,"Production","Update") = aResult("Production","Update")
				&js< CSPPage.document.location.reload();>
			}
		} Else {
			Set tItem = $O(aResult(tSubject,""))
			While tItem '= ""  {
				Set id = tSubject_tItem
				Set tValue = $G(aResult(tSubject,tItem))
				Set:tValue=+tValue tValue = $FN(tValue,",")
 				&js< CSPPage.document.getElementById("#(id)#").innerHTML = '<nobr>#(tValue)#&nbsp;</nobr>';>
				Set tItem = $O(aResult(tSubject,tItem))
			}
		}
		Set tSubject = $O(aResult(tSubject))
	}
Done2	
	Quit	
Trap2
	Set $ZT = ""
	&js<alert("ResetProperties: #($ZE)#");>
	Goto Done2
]]></Implementation>
</Method>
</Class>
</Export>