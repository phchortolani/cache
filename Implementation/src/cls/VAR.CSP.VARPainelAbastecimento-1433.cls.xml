<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARPainelAbastecimento">
<ClassType/>
<IncludeCode>COMSYS,VARConst,INConst,VARPainelAbastecimento</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>

<Method name="PreencheEstoqueZeradoRede">
<Description><![CDATA[
Método utilizado para gerar tabela com estoques zerados na rede

Chamado por: VARPainelAbastecimento.csp, VARPainelAbastecimentoCentrais.csp
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pContainer,pTable</FormalSpec>
<Implementation><![CDATA[
    new html, id, descricao, line, Data,LocaisCentrais
    set (html, id, descricao, line, Data,LocaisCentrais) = ""
    set LocaisCentrais = $$$VARParametroClienteLocaisCentrais($get(^VARParametroCliente(0,0,1)))
     
	&SQL(DECLARE grupos CURSOR FOR
        SELECT ID1, Description
            INTO :id, :descricao
        FROM SQLUser.INItemGroup
        WHERE GrpLevel = 1
            AND $$GetGruposParametro^VARPainelAbastecimentoUtils(ID1) <> 0
        ORDER BY ID1)
        
    &SQL(OPEN grupos)
    set table = ##class(VAR.CSP.Table).%New(pContainer,pTable)
    
    do table.MakeTable("table") 
    do table.InsertColumn("","bg-blue-dark bg-font-blue-soft")
    
    set line(0) = "<b>Zerado em toda rede</b>"
    do table.InsertLine(.line,"bold bg-red")
    ;if (LocaisCentrais '= ""){
    ;	set line(0) = "<b>Zerado no Estoque Central</b>"
    ;	do table.InsertLine(.line,"bold bg-red")
	;}
	for {&SQL(FETCH grupos) 
        quit:SQLCODE
        set QuantidadeRede      = ..GetEstoqueZeradoRede(id)       
        ;if (LocaisCentrais '= ""){
        ;	set QuantidadeCentrais  = ..GetEstoqueZeradoCentrais(id)
		;}
		
        set Data(0) = $$$Link(QuantidadeRede,"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_id_"&zeradoRede=1","")
		;if (LocaisCentrais '= ""){
        ;	set Data(1) = $$$Link(QuantidadeCentrais,"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_id_"&zeradoCentrais=1","")
		;}
        do table.InsertColumn(descricao,"bg-blue-dark bg-font-blue-soft bold text-center",.Data,"text-center bg-red-intense")
    }
    &SQL(CLOSE grupos)
     
	set Data(0) = $$$Link(..GetEstoqueZeradoRedeOutros(),"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo=Outros&zeradoRede=1","")
	do table.InsertColumn("Outros","bg-blue-dark bg-font-blue-soft bold text-center",.Data,"text-center bg-red-intense")
	
	set Data(0) = $$$Link(..GetEstoqueZeradoRedeTotal(),"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&zeradoRede=1","")
	do table.InsertColumn("Total","bg-blue-dark bg-font-blue-soft bold text-center",.Data,"text-center bg-red-intense")

    quit
]]></Implementation>
</Method>

<Method name="PreencheUnidadesCentrais">
<Description><![CDATA[
Método utilizado para gerar tabela com situação dos estoques centrais

Chamado por: VARPainelAbastecimento.csp
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pContainer,pTable</FormalSpec>
<Implementation><![CDATA[
	 
    new MySQL, Rs, Locais, count,idxLine, localRef, CLocal, CQuantidadeProduto, Situacao
    
    set MySQL = ""
    set MySQL = MySQL_" SELECT "
    set MySQL = MySQL_"     IdLocal  AS Locn, "
    set MySQL = MySQL_"     count(DISTINCT IdProduto) AS QuantidadeProduto, "
    set MySQL = MySQL_"     PR AS PR, "
    set MySQL = MySQL_"     Situacao AS Situacao "
    set MySQL = MySQL_" FROM SQLUser.VARPainelAbastCentrais "

    set MySQL = MySQL_" WHERE Company = 0 "
    set MySQL = MySQL_" AND $$ValidaLocalCentral^VARPainelAbastecimentoUtils(IdLocal) <> 0 "
	set MySQL = MySQL_" AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) <> 0 "
    ;set MySQL = MySQL_" AND $$GetPadrao^VARAlertaLinha(IdProduto) = 1 "

    set MySQL = MySQL_" GROUP BY IdLocal, Situacao "
    set MySQL = MySQL_" ORDER BY IdLocal, Situacao"
        
    set Locais = $$$VARParametroClienteLocaisCentrais($get(^VARParametroCliente(0,0,1)))
   
   
    set table = ##class(VAR.CSP.Table).%New(pContainer,pTable)
    
    do table.MakeTable("table table-striped")
    
    do table.InsertColumn("Unidade","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Estoque abaixo<br>do PR","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Estoque abaixo do<br>PR com EP","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Estoque próximo<br>do PR","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Estoque acima<br>do PR","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Estoque acima<br>do EM","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Produtos sem<br>Planejamento","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Total","bg-blue-dark bg-font-blue-soft bold text-center")

    set rs = ##class(%ResultSet).%New()
    do rs.Prepare(MySQL)
    do rs.Execute()
    
    set count = 0
    set localRef = ""
    
    while(rs.Next()){                   
        set CLocal = rs.GetDataByName("Locn")
        set CQuantidadeProduto = rs.GetDataByName("QuantidadeProduto")
        set Situacao = rs.GetDataByName("Situacao")
        
        if ((localRef = "") || (localRef '=CLocal)){
            set count = $i(count)
            
            set line(0) = $$$Link("<b>"_CLocal_" - "_$$SQLGetLocationName^VARSQL(CLocal)_"</b>","VARPainelAbastecimentoCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&local="_CLocal,"")
            set line(1) = 0
            set line(2) = 0
            set line(3) = 0
            set line(4) = 0
            set line(5) = 0
            set line(6) = 0
            set line(7) = 0
            
            do table.InsertLine(.line,"text-center")
            
            do table.SetCell(count,$$$ColunaEstoqueAbaixoPR,0,"bg-red") 
            do table.SetCell(count,$$$ColunaEstoqueAbaixoPRcomEP,0,"bg-yellow-deep") 
            do table.SetCell(count,$$$ColunaEstoqueProximoPR,0,"bg-yellow")    
            do table.SetCell(count,$$$ColunaEstoqueAcimaPR,0,"bg-green-light") 
            do table.SetCell(count,$$$ColunaEstoqueAcimaEM,0,"bg-blue-light")       
            do table.SetCell(count,$$$ColunaSemPlanejamentoCentrais,0,"bg-default")       
            do table.SetCell(count,$$$ColunaTotalCentrais,..GetTotalCentral(CLocal))       
        }
        
        set localRef = CLocal
        
        do $case(Situacao,
                $$$SemPlanejamento      :table.SetCell(count,$$$ColunaSemPlanejamentoCentrais,CQuantidadeProduto),
                $$$EstoqueAbaixoPR      :table.SetCell(count,$$$ColunaEstoqueAbaixoPR,CQuantidadeProduto),
                $$$EstoqueAbaixoPRcomEP :table.SetCell(count,$$$ColunaEstoqueAbaixoPRcomEP,CQuantidadeProduto),
                $$$EstoqueProximoPR   	:table.SetCell(count,$$$ColunaEstoqueProximoPR,CQuantidadeProduto),
                $$$EstoqueAcimaPR       :table.SetCell(count,$$$ColunaEstoqueAcimaPR,CQuantidadeProduto),
                $$$EstoqueAcimaEM       :table.SetCell(count,$$$ColunaEstoqueAcimaEM,CQuantidadeProduto),
                :table.SetCell(0,0,""))        
    }
    
    quit
]]></Implementation>
</Method>

<Method name="PreencheUnidadesCentraisBySituacao">
<Description><![CDATA[
Método utilizado para gerar tabela com situação dos estoques centrais

Chamado por: VARPainelAbastecimento.csp
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pContainer,pTable,pLocal=""</FormalSpec>
<Implementation><![CDATA[
    
    new MySQL, Rs, Locais, count,idxLine, GrupoRef, CLocal, CQuantidadeProduto, Situacao, Grupos, countGrupo, objParametroCliente
	
	set objParametroCliente = $get(^VARParametroCliente(0,0,1))
	
    set Grupos = $$$VARParametroClienteGruposAbastecimento(objParametroCliente)
    set Locais = $$$VARParametroClienteLocaisCentrais(objParametroCliente)
    
    set MySQL = ""
	set MySQL = MySQL_" SELECT "
    set MySQL = MySQL_"     IdLocal  AS Locn, "
    set MySQL = MySQL_"     count(DISTINCT IdProduto) AS QuantidadeProduto, "
    set MySQL = MySQL_"     $$SQLGetGrupoPai^VARSQL(GrupoItem) as GrupoItem, "
    set MySQL = MySQL_"     Situacao AS Situacao "
    set MySQL = MySQL_" FROM SQLUser.VARPainelAbastCentrais "

	set MySQL = MySQL_" WHERE Company = 0 "
	set MySQL = MySQL_" AND $$ValidaLocalCentral^VARPainelAbastecimentoUtils(IdLocal) <> 0 "
	set MySQL = MySQL_" AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) <> 0 "

	set:(pLocal'="") MySQL = MySQL_" AND IdLocal = '"_pLocal_"'"
	
 
 	set MySQL = MySQL_" GROUP BY Situacao, $$SQLGetGrupoPai^VARSQL(GrupoItem) "
	set MySQL = MySQL_" ORDER BY GrupoItem, Situacao "    
    
    //Montagem de colunas por grupo
    set SubSql = ""
    set SubSql = SubSql_"SELECT ID1 FROM SQLUser.INItemGroup " 
    set SubSql = SubSql_"WHERE $$GetGruposParametro^VARPainelAbastecimentoUtils(ID1) <> 0 ORDER BY ID1 "
	
	set SubRs = ##class(%ResultSet).%New()
	do SubRs.Prepare(SubSql)
	do SubRs.Execute()
	
    set table = ##class(VAR.CSP.Table).%New(pContainer,pTable)
    
    do table.MakeTable("table table-striped")
    
    do table.InsertColumn(" ","bg-blue-dark bg-font-blue-soft bold text-center")
    
    set fCountGrupo = 1
    set ArrGrupos = ""
	set defLink = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM,"")
	
	while(SubRs.Next()){
		
		set Grupo = SubRs.GetDataByName("ID1")
		set linha = SubRs.%ROWCOUNT

		set DescGrupo 	= $$$Link($$SQLGetDescGrupoItem^VARSQL(Grupo),"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo,"color: #fafafa;")
		do table.InsertColumn(DescGrupo,"bg-blue-dark bg-font-blue-soft bold text-center",,"text-center")
		
	    set fCountGrupo = $i(fCountGrupo)
		set line(fCountGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo_"&local="_pLocal,"")

	    set ArrGrupos(Grupo) = fCountGrupo
		set ^zTempGrupo(fCountGrupo) = Grupo
	}
	
	set DescGrupo 	= $$$Link("Outros","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo=Outros","color: #fafafa;")
	do table.InsertColumn(DescGrupo,"bg-blue-dark bg-font-blue-soft bold text-center",,"text-center")
		
	set fCountGrupo = $i(fCountGrupo)
	set line(fCountGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo=Outros&local="_pLocal,"")

	set ArrGrupos("Outros") = fCountGrupo
	set ^zTempGrupo(fCountGrupo) = "Outros"

	set line(0) = ""
	
	set line(0) = $$$Link("Estoque abaixo do PR","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$EstoqueAbaixoPR_"&local="_pLocal,"")
    $$$Order1(^zTempGrupo,idLinhaGrupo)
        set line(idLinhaGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_$get(^zTempGrupo(idLinhaGrupo))_"&local="_pLocal_"&situacao="_$$$EstoqueAbaixoPR,"")
    $$$End
    do table.InsertLine(.line,"bold bg-red text-center")
    
	set line(0) = $$$Link("Estoque abaixo do PR com EP","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$EstoqueAbaixoPRcomEP_"&local="_pLocal,"")
    $$$Order1(^zTempGrupo,idLinhaGrupo)
        set line(idLinhaGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_$get(^zTempGrupo(idLinhaGrupo))_"&local="_pLocal_"&situacao="_$$$EstoqueAbaixoPRcomEP,"")
    $$$End    
    do table.InsertLine(.line,"bold bg-yellow text-center")
    
	set line(0) = $$$Link("Estoque próximo do PR","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$EstoqueProximoPR_"&local="_pLocal,"")
    $$$Order1(^zTempGrupo,idLinhaGrupo)
        set line(idLinhaGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_$get(^zTempGrupo(idLinhaGrupo))_"&local="_pLocal_"&situacao="_$$$EstoqueProximoPR,"")
    $$$End
    do table.InsertLine(.line,"bold bg-yellow-deep text-center")
    
	set line(0) = $$$Link("Estoque acima do PR","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$EstoqueAcimaPR_"&local="_pLocal,"")
    $$$Order1(^zTempGrupo,idLinhaGrupo)
        set line(idLinhaGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_$get(^zTempGrupo(idLinhaGrupo))_"&local="_pLocal_"&situacao="_$$$EstoqueAcimaPR,"")
    $$$End
    do table.InsertLine(.line,"bold bg-green-light text-center")
    
	set line(0) = $$$Link("Estoque acima do EM","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$EstoqueAcimaEM_"&local="_pLocal,"")
    $$$Order1(^zTempGrupo,idLinhaGrupo)
        set line(idLinhaGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_$get(^zTempGrupo(idLinhaGrupo))_"&local="_pLocal_"&situacao="_$$$EstoqueAcimaEM,"")
    $$$End
    do table.InsertLine(.line,"bold bg-blue-light text-center")
    
	set line(0) = $$$Link("Estoque sem dados de planejamento","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$SemPlanejamento_"&local="_pLocal,"")
    $$$Order1(^zTempGrupo,idLinhaGrupo)
        set line(idLinhaGrupo) = $$$Link("0","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_$get(^zTempGrupo(idLinhaGrupo))_"&local="_pLocal_"&situacao="_$$$SemPlanejamento,"")
    $$$End
    do table.InsertLine(.line,"bold bg-default text-center")
    
	set line(0) = $$$Link("Total","VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&local="_pLocal,"")
    do table.InsertLine(.line,"bold bg-default text-center")
    
    kill ^zTempGrupo	
    set rs = ##class(%ResultSet).%New()
    
    
    do rs.Prepare(MySQL)
    do rs.Execute()
    
    set count = 1
    set GrupoRef = ""
    set TotalGrupo = 0

    while(rs.Next()){
		
		set Grupo 		= rs.GetDataByName("GrupoItem")
		set Locais		= "'"_$replace(Locais,";","','")_"'"
		set Quantidade 	= rs.GetDataByName("QuantidadeProduto")
		set Situacao	= rs.GetDataByName("Situacao")
		set DescGrupo 	= $$SQLGetDescGrupoItem^VARSQL(Grupo)
		
		if ((GrupoRef="") || (GrupoRef'=Grupo)){
			
		    if (count>1){
			    do table.SetCell($$$LinhaTotalCentrais,ArrGrupos(GrupoRef),$$$Link(TotalGrupo,"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_GrupoRef_"&local="_pLocal,""))
		    }

			set count = $i(count)
		    set TotalGrupo = 0
		}
		
		set TotalGrupo = TotalGrupo + Quantidade
		set GrupoRef = Grupo
		
		set Quantidade = $$$Link(Quantidade,"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo_"&situacao="_Situacao_"&local="_pLocal,"")
		
        do $case(Situacao,
                $$$SemPlanejamento      :table.SetCell($$$LinhaSemPlanejamentoCentrais,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAbaixoPR      :table.SetCell($$$LinhaEstoqueAbaixoPR,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAbaixoPRcomEP :table.SetCell($$$LinhaEstoqueAbaixoPRcomEP,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueProximoPR   	:table.SetCell($$$LinhaEstoqueProximoPR,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAcimaPR       :table.SetCell($$$LinhaEstoqueAcimaPR,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAcimaEM       :table.SetCell($$$LinhaEstoqueAcimaEM,ArrGrupos(Grupo),Quantidade),
                :table.SetCell(0,0,""))                  

    }
	if (count>1){
	    do table.SetCell($$$LinhaTotalCentrais,ArrGrupos(Grupo),$$$Link(TotalGrupo,"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo_"&local="_pLocal,""))
    }
       
    set MySQLOutros = ""
    set MySQLOutros = MySQLOutros_" SELECT "
    set MySQLOutros = MySQLOutros_"     IdLocal  AS Locn, "
    set MySQLOutros = MySQLOutros_"     count(DISTINCT IdProduto) AS QuantidadeProduto, "
    set MySQLOutros = MySQLOutros_"     'Outros' as GrupoItem, "
    set MySQLOutros = MySQLOutros_"     Situacao AS Situacao "
    set MySQLOutros = MySQLOutros_" FROM SQLUser.VARPainelAbastCentrais "

	set MySQLOutros = MySQLOutros_" WHERE Company = 0 "
	set MySQLOutros = MySQLOutros_" AND $$ValidaLocalCentral^VARPainelAbastecimentoUtils(IdLocal) <> 0 "
	set MySQLOutros = MySQLOutros_" AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) = 0 "

	set:(pLocal'="") MySQLOutros = MySQLOutros_" AND IdLocal = '"_pLocal_"'"
	
 
 	set MySQLOutros = MySQLOutros_" GROUP BY Situacao"
	set MySQLOutros = MySQLOutros_" ORDER BY GrupoItem"

	set rsOutro = ##class(%ResultSet).%New()
	do rsOutro.Prepare(MySQLOutros)
    do rsOutro.Execute()
	set TotalGrupo = 0
    while(rsOutro.Next()){
		 
		set Quantidade 	= rsOutro.GetDataByName("QuantidadeProduto")
		set Situacao	= rsOutro.GetDataByName("Situacao")
		set Grupo		= "Outros"
       	
       	set TotalGrupo = TotalGrupo + Quantidade

		set Quantidade = $$$Link(Quantidade,"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo_"&situacao="_Situacao_"&local="_pLocal,"")

        do $case(Situacao,
                $$$SemPlanejamento      :table.SetCell($$$LinhaSemPlanejamentoCentrais,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAbaixoPR      :table.SetCell($$$LinhaEstoqueAbaixoPR,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAbaixoPRcomEP :table.SetCell($$$LinhaEstoqueAbaixoPRcomEP,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueProximoPR   	:table.SetCell($$$LinhaEstoqueProximoPR,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAcimaPR       :table.SetCell($$$LinhaEstoqueAcimaPR,ArrGrupos(Grupo),Quantidade),
                $$$EstoqueAcimaEM       :table.SetCell($$$LinhaEstoqueAcimaEM,ArrGrupos(Grupo),Quantidade),
                :table.SetCell(0,0,""))             
    }
   
	//Ultimo total    
    if (count>1){
	    do table.SetCell($$$LinhaTotalCentrais,ArrGrupos("Outros"),$$$Link(TotalGrupo,"VARPainelAbastecimentoDetalheCentrais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo=Outros&local="_pLocal,""))
    }
    quit
]]></Implementation>
</Method>

<Method name="PreencheUnidadesRegionais">
<Description><![CDATA[
Método utilizado para gerar tabela com situação dos estoques regionais

Chamado por: VARPainelAbastecimento.csp
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pContainer,pTable</FormalSpec>
<Implementation><![CDATA[
	
	new MySQL, Rs, Locais, count,idxLine, localRef, CLocal, QuantidadeProduto, Situacao
    
    set MySQL = ""
    set MySQL = MySQL_" SELECT " 
    set MySQL = MySQL_"   IdLocal  AS Locn, "
    set MySQL = MySQL_"   $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc) AS SituacaoDias, "
    set MySQL = MySQL_"   count(IdProduto) AS QuantidadeProduto "
    set MySQL = MySQL_" FROM SQLUser.VARPainelAbastRegionais "

    set MySQL = MySQL_" WHERE Company = 0 "
    set MySQL = MySQL_" AND $$ValidaLocalRegional^VARPainelAbastecimentoUtils(IdLocal) <> 0 "
    set MySQL = MySQL_" AND IdLocal <> 'Rede' "
    set MySQL = MySQL_" AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) <> 0 "

	
    set MySQL = MySQL_" GROUP BY IdLocal, $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc) "
    set MySQL = MySQL_" ORDER BY IdLocal "
     
    set Locais = $$$VARParametroClienteUnidadesRegionais($get(^VARParametroCliente(0,0,1)))
	
    set table = ##class(VAR.CSP.Table).%New(pContainer,pTable)
    
    do table.MakeTable("table table-striped")
    
    do table.InsertColumn("Unidade","bg-blue-dark bg-font-blue-soft bold text-center")
    do table.InsertColumn("Estoque abaixo de<br>15 dias","bg-blue-dark bold text-center")
    do table.InsertColumn("Estoque entre<br>15 e 30 dias","bg-blue-dark bold text-center")
    do table.InsertColumn("Estoque entre<br>30 e 45 dias","bg-blue-dark bold text-center")
    do table.InsertColumn("Estoque acima<br>de 45 dias","bg-blue-dark bold text-center")
    do table.InsertColumn("Sem dados de<br>planejamento","bg-blue-dark bold text-center")
    do table.InsertColumn("Total","bg-blue-dark bold text-center")
    
    set rs = ##class(%ResultSet).%New()
    do rs.Prepare(MySQL)
    do rs.Execute()
    
    set count = 0
    set localRef = ""
    
    while(rs.Next()){
	    set QuantidadeSitucaoLocal = 0
        set CLocal = rs.GetDataByName("Locn")
        set QuantidadeProduto = rs.GetDataByName("QuantidadeProduto")
        set Situacao = rs.GetDataByName("SituacaoDias")
        set QuantidadeSitucaoLocal = ..GetZeradosBySituacaoLocal(CLocal,Situacao)
        if (QuantidadeSitucaoLocal = 0){
        	set QuantidadeProduto = QuantidadeProduto
        }else{
			set QuantidadeProduto = QuantidadeProduto_" ("_..GetZeradosBySituacaoLocal(CLocal,Situacao)_")"
        } 
            
        if ((localRef = "") || (localRef '=CLocal)){
            set count = $i(count)
            
            set line(0) = $$$Link("<b>"_CLocal_" - "_$$SQLGetLocationName^VARSQL(CLocal)_"</b>","VARPainelAbastecimentoRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&local="_CLocal,"")
            set line(1) = 0
            set line(2) = 0
            set line(3) = 0
            set line(4) = 0
            set line(5) = 0
            set line(6) = 0
            do table.InsertLine(.line,"text-center")
            
            do table.SetCell(count,$$$ColunaAbaixo15Dias,0,"bg-red") 
            do table.SetCell(count,$$$ColunaEntre15e30Dias,0,"bg-yellow-deep") 
            do table.SetCell(count,$$$ColunaEntre30e45Dias,0,"bg-yellow")    
            do table.SetCell(count,$$$ColunaAcima45Dias,0,"bg-green-light") 
            do table.SetCell(count,$$$ColunaSemPlanejamentoRegionais,0,"bg-default")       
            do table.SetCell(count,$$$ColunaTotalRegionais,..GetTotalRegional(CLocal),"")       
        }
        
        set localRef = CLocal
        do $case(Situacao,
	                $$$SemPlanejamento:table.SetCell(count,$$$ColunaSemPlanejamentoRegionais,QuantidadeProduto),
	                $$$Abaixo15Dias:table.SetCell(count,$$$ColunaAbaixo15Dias,QuantidadeProduto),
	                $$$Entre15e30Dias:table.SetCell(count,$$$ColunaEntre15e30Dias,QuantidadeProduto),
	                $$$Entre30e45Dias:table.SetCell(count,$$$ColunaEntre30e45Dias,QuantidadeProduto),
	                $$$Acima45Dias:table.SetCell(count,$$$ColunaAcima45Dias,QuantidadeProduto)) 
    }
    
    quit
]]></Implementation>
</Method>

<Method name="PreencheUnidadesRegionaisBySituacao">
<Description><![CDATA[
Método de exibição da tabela de Unidades regionais

Chamado por: VARPainelAbastecimentoRegionais.csp
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pContainer,pTable,pLocal</FormalSpec>
<Implementation><![CDATA[
    new MySQL, Rs, Locais, count,idxLine, GrupoRef, CLocal, CQuantidadeProduto, Situacao, Grupos, countGrupo, objParametroCliente
	
	set objParametroCliente = $get(^VARParametroCliente(0,0,1))
	
    set Grupos = $$$VARParametroClienteGruposAbastecimento(objParametroCliente)
    set Locais = $$$VARParametroClienteLocaisCentrais(objParametroCliente)
    
    set MySQL = ""
	set MySQL = MySQL_" SELECT "
	set MySQL = MySQL_"     IdLocal as Locn, "
	set MySQL = MySQL_"     count(IdProduto ) AS QuantidadeProduto, "
	set MySQL = MySQL_"     $$SQLGetGrupoPai^VARSQL(GrupoItem) as GrupoItem, "
	set MySQL = MySQL_"     $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc) AS Situacao "
	set MySQL = MySQL_" FROM SQLUser.VARPainelAbastRegionais "
	set MySQL = MySQL_" "
	set MySQL = MySQL_" WHERE Company = 0 "
	set MySQL = MySQL_" AND $$ValidaLocalRegional^VARPainelAbastecimentoUtils(IdLocal) <> 0 "
	set MySQL = MySQL_" AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) <> 0 "
	
	set:(pLocal'="") MySQL = MySQL_" AND IdLocal = '"_pLocal_"'"
	
	set MySQL = MySQL_" GROUP BY $$SQLGetGrupoPai^VARSQL(GrupoItem), $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc)"
	set MySQL = MySQL_" ORDER BY $$SQLGetGrupoPai^VARSQL(GrupoItem), $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc) "   
    set SubSql = ""
    set SubSql = SubSql_"SELECT ID1 FROM SQLUser.INItemGroup " 
    set SubSql = SubSql_"WHERE $$GetGruposParametro^VARPainelAbastecimentoUtils(ID1) <> 0 ORDER BY ID1 "
	
	set SubRs = ##class(%ResultSet).%New()
	do SubRs.Prepare(SubSql)
	do SubRs.Execute()
	
    set table = ##class(VAR.CSP.Table).%New(pContainer,pTable)
    
    do table.MakeTable("table table-striped")
    
    do table.InsertColumn(" ","bg-blue-dark bg-font-blue-soft bold text-center")
    
    set fCountGrupo = 1
    set ArrGrupos = ""
	
	while(SubRs.Next()){
		
		set Grupo = SubRs.GetDataByName("ID1")
		set linha = SubRs.%ROWCOUNT

		set DescGrupo 	= $$$Link($$SQLGetDescGrupoItem^VARSQL(Grupo),"VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo_"&local="_pLocal,"color: #fafafa;")
		do table.InsertColumn(DescGrupo,"bg-blue-dark bg-font-blue-soft bold text-center",,"text-center")
		
	    set fCountGrupo = $i(fCountGrupo)
		set line(fCountGrupo) =$$$Link("0","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&local="_pLocal_"&grupo="_Grupo,"")
	    
	    set ArrGrupos(Grupo) = fCountGrupo
	}
	
	set DescGrupo 	= $$$Link("Outros","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo=Outros&local="_pLocal,"color: #fafafa;")
	do table.InsertColumn(DescGrupo,"bg-blue-dark bg-font-blue-soft bold text-center",,"text-center")
		
	set fCountGrupo = $i(fCountGrupo)
	set line(fCountGrupo) =$$$Link("0","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo=Outros&local="_pLocal_"&grupo="_Grupo,"")
	    
	set ArrGrupos("Outros") = fCountGrupo
		
	set line(0) = ""
	
	set line(0) = $$$Link("Estoque abaixo de 15 dias","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$Abaixo15Dias_"&local="_pLocal,"")
    do table.InsertLine(.line,"bold bg-red text-center")
    
	set line(0) = $$$Link("Estoque entre 15 e 30 dias","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$Entre15e30Dias_"&local="_pLocal,"")
    do table.InsertLine(.line,"bold bg-yellow text-center")
    
	set line(0) = $$$Link("Estoque entre 30 e 45 dias","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$Entre30e45Dias_"&local="_pLocal,"")
    do table.InsertLine(.line,"bold bg-yellow-deep text-center")
    
	set line(0) = $$$Link("Estoque acima de 45 dias","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$Acima45Dias_"&local="_pLocal,"")
    do table.InsertLine(.line,"bold bg-green-light text-center")
        
	set line(0) = $$$Link("Estoque Sem planejamento","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&situacao="_$$$SemPlanejamento_"&local="_pLocal,"")
    do table.InsertLine(.line,"bold bg-default text-center")
    
	set line(0) = $$$Link("Total","VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&local="_pLocal,"")
    do table.InsertLine(.line,"bold bg-default text-center")
    
    	
    set rs = ##class(%ResultSet).%New()
    
    do rs.Prepare(MySQL)
    do rs.Execute()
    
    set count = 1
    set GrupoRef = ""
    set TotalGrupo = 0

    while(rs.Next()){
		
		set Grupo 		= rs.GetDataByName("GrupoItem")
		set Locais		= "'"_$replace(Locais,";","','")_"'"
		set Quantidade 	= rs.GetDataByName("QuantidadeProduto")
		set Situacao	= rs.GetDataByName("Situacao")
		set DescGrupo 	= $$SQLGetDescGrupoItem^VARSQL(Grupo)
		
		if ((GrupoRef="") || (GrupoRef'=Grupo)){
			
		    if (count>1){
			    do table.SetCell($$$LinhaTotalRegionais,ArrGrupos(GrupoRef),$$$Link(TotalGrupo,"VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_GrupoRef_"&local="_pLocal,""))
		    }

			set count = $i(count)
		    set TotalGrupo = 0
		}
		
		set TotalGrupo = TotalGrupo + Quantidade
		set GrupoRef = Grupo
		
		set Quantidade = $$$Link(Quantidade,"VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo_"&situacao="_Situacao_"&local="_pLocal,"")
		
        do $case(Situacao,
                $$$SemPlanejamento	:table.SetCell($$$LinhaSemPlanejamentoRegionais,ArrGrupos(Grupo),Quantidade),
                $$$Abaixo15Dias		:table.SetCell($$$LinhaAbaixo15Dias,ArrGrupos(Grupo),Quantidade),
                $$$Entre15e30Dias 	:table.SetCell($$$LinhaEntre15e30Dias,ArrGrupos(Grupo),Quantidade),
                $$$Entre30e45Dias  	:table.SetCell($$$LinhaEntre30e45Dias,ArrGrupos(Grupo),Quantidade),
                $$$Acima45Dias       :table.SetCell($$$LinhaAcima45Dias,ArrGrupos(Grupo),Quantidade),
                :table.SetCell(0,0,""))                  

    }
    
    if (count>1){
	    do table.SetCell($$$LinhaTotalRegionais,ArrGrupos(GrupoRef),$$$Link(TotalGrupo,"VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_GrupoRef_"&local="_pLocal,""))
    }
    
	set MySQLOutros = ""
	set MySQLOutros = MySQLOutros_" SELECT "
	set MySQLOutros = MySQLOutros_"     IdLocal as Locn, "
	set MySQLOutros = MySQLOutros_"     count(IdProduto ) AS QuantidadeProduto, "
	set MySQLOutros = MySQLOutros_"     'Outros' as GrupoItem, "
	set MySQLOutros = MySQLOutros_"     $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc) AS Situacao "
	set MySQLOutros = MySQLOutros_" FROM SQLUser.VARPainelAbastRegionais "
	set MySQLOutros = MySQLOutros_" "
	set MySQLOutros = MySQLOutros_" WHERE Company = 0 "
	set MySQLOutros = MySQLOutros_" AND $$ValidaLocalRegional^VARPainelAbastecimentoUtils(IdLocal) <> 0 "
	set MySQLOutros = MySQLOutros_" AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) = 0 "
	
	set:(pLocal'="") MySQLOutros = MySQLOutros_" AND IdLocal = '"_pLocal_"'"
	
	set MySQLOutros = MySQLOutros_" GROUP BY $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc)"
	set MySQLOutros = MySQLOutros_" ORDER BY $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc) "   
    set rs = ##class(%ResultSet).%New()
    
    do rs.Prepare(MySQLOutros)
    do rs.Execute()
    
    set TotalGrupo = 0

    while(rs.Next()){
		
		set Grupo 		= "Outros"
		set Quantidade 	= rs.GetDataByName("QuantidadeProduto")
		set Situacao	= rs.GetDataByName("Situacao")

		
		set TotalGrupo = TotalGrupo + Quantidade
		
		set Quantidade = $$$Link(Quantidade,"VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo="_Grupo_"&situacao="_Situacao_"&local="_pLocal,"")
		
        do $case(Situacao,
                $$$SemPlanejamento	:table.SetCell($$$LinhaSemPlanejamentoRegionais,ArrGrupos(Grupo),Quantidade),
                $$$Abaixo15Dias		:table.SetCell($$$LinhaAbaixo15Dias,ArrGrupos(Grupo),Quantidade),
                $$$Entre15e30Dias 	:table.SetCell($$$LinhaEntre15e30Dias,ArrGrupos(Grupo),Quantidade),
                $$$Entre30e45Dias  	:table.SetCell($$$LinhaEntre30e45Dias,ArrGrupos(Grupo),Quantidade),
                $$$Acima45Dias       :table.SetCell($$$LinhaAcima45Dias,ArrGrupos(Grupo),Quantidade),
                :table.SetCell(0,0,""))                  

    }

    if (count>1){
	    do table.SetCell($$$LinhaTotalRegionais,ArrGrupos("Outros"),$$$Link(TotalGrupo,"VARPainelAbastecimentoDetalheRegionais.csp?YBED="_YBED_"&YUSER="_YUSER_"&YM="_YM_"&grupo=Outros&local="_pLocal,""))
    }

    
    quit
]]></Implementation>
</Method>

<Method name="GetEstoqueZeradoRede">
<Description><![CDATA[
Método retorna quantidade de produtos com estoques zerados na rede de acordo com o grupo informado.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pGroup</FormalSpec>
<Implementation><![CDATA[
    new TotalItem,Grupo
    set (TotalItem,Grupo) = 0
    
    &SQL(SELECT
		     count(distinct IdProduto) AS Total
			 INTO :TotalItem
		 FROM SQLUser.VARPainelAbastCentrais

		 WHERE Company = 0
		 AND IdLocal = "Rede"
		 AND EstoqueRede = 0
		 AND $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto)) = :pGroup)
        
    quit TotalItem
]]></Implementation>
</Method>

<Method name="GetEstoqueZeradoRedeOutros">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    new TotalItem,Grupo
    set (TotalItem,Grupo) = 0
    
    &SQL(SELECT
		     count(distinct IdProduto) AS Total
			 INTO :TotalItem
		 FROM SQLUser.VARPainelAbastCentrais

		 WHERE Company = 0
		 AND IdLocal = "Rede"
		 AND EstoqueRede = 0
		 AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) = 0)
        
    quit TotalItem
]]></Implementation>
</Method>

<Method name="GetEstoqueZeradoRedeTotal">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    new TotalItem,Grupo
    set (TotalItem,Grupo) = 0
    
    &SQL(SELECT
		     count(distinct IdProduto) AS Total
			 INTO :TotalItem
		 FROM SQLUser.VARPainelAbastCentrais

		 WHERE Company = 0
		 AND IdLocal = "Rede"
		 AND EstoqueRede = 0
		)
        
    quit TotalItem
]]></Implementation>
</Method>

<Method name="GetEstoqueZeradoCentrais">
<Description><![CDATA[
Método retorna quantidade de produtos com estoques zerados nos locais centrais de acordo com o grupo informado.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pGroup</FormalSpec>
<Implementation><![CDATA[
    new TotalItem,Grupo
    set (TotalItem,Grupo) = 0
    
    &SQL(SELECT
		     $$GetEstoqueCentrais^VARPainelAbastecimentoUtils(IdProduto) AS Grupo,
		     count(distinct IdProduto) AS Total
			 INTO :Grupo, :TotalItem
		 FROM SQLUser.VARPainelAbastCentrais

		 WHERE Company = 0
		 AND EstoquesCentrais = 0
		 AND $$ValidaLocalCentral^VARPainelAbastecimentoUtils(IdLocal) <> 0
		 AND $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto)) = :pGroup
		)
        
    quit TotalItem
]]></Implementation>
</Method>

<Method name="GetZeradosBySituacaoLocal">
<Description><![CDATA[
Método para buscar o total de itens zerado em um local de acordo com a situação informada]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pLocal,pSituacao</FormalSpec>
<Implementation><![CDATA[
	new Total
	
	set Total = 0
	
	&SQL(SELECT
	    count(IdProduto) AS QuantidadeProduto
	    into:Total
		FROM SQLUser.VARPainelAbastRegionais

		WHERE Company = 0
		AND IdLocal = :pLocal
		AND $$GetPadrao^VARAlertaLinha(IdProduto) = 1 
		AND $$GetSituacaoFromCobertura^VARPainelAbastecimentoUtils(DMItemLocal,CobEstqLoc) = :pSituacao
		AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) <> 0
		AND CoberturaLocalDias = 0
	
	)
	
	quit Total
]]></Implementation>
</Method>

<Method name="GetZeradosBySituacaoEstoqueLocalGrupo">
<Description><![CDATA[
Método para buscar o total de itens zerado de acordo com o grupo a situação informada
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pGrupo,pSituacao</FormalSpec>
<Implementation><![CDATA[
	new Total
	
	set Total = 0
	
	&SQL(SELECT
	    count(CodigoProduto) AS QuantidadeProduto
	    into:Total
		FROM SQLUser.VARAlertaLocalLinha

		WHERE Company = 0
		AND $$GetPadrao^VARAlertaLinha(CodigoProduto) = 1 
		AND $$GetSituacaoAlertaLocal^VARPainelAbastecimentoUtils(CodigoProduto, Location, NVL(EstoqueAbaixoPR,0), NVL(EstoqueAbaixoPRcomEP,0), NVL(EstoqueProximoPR,0), NVL(EstoqueAcimaPR,0), NVL(EstoqueAcimaEM,0)) = :pSituacao
		AND CoberturaEstoque = 0 
		AND $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(CodigoProduto)) = :pGroup
		
		GROUP BY $$GetSituacaoAlertaLocal^VARPainelAbastecimentoUtils(CodigoProduto, Location, NVL(EstoqueAbaixoPR,0), NVL(EstoqueAbaixoPRcomEP,0), NVL(EstoqueProximoPR,0), NVL(EstoqueAcimaPR,0), NVL(EstoqueAcimaEM,0)))
	
	quit Total
]]></Implementation>
</Method>

<Method name="GetTotalRegional">
<Description><![CDATA[
Método para retornar o total de itens no local de acordo com a situação
Utilizado para os totais na VARPainelAbastecimento.csp]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pLocal,pSituacao</FormalSpec>
<Implementation><![CDATA[
	new Total
	
	set Total = 0
	
	&SQL(SELECT TOP 1
		  count(IdProduto) AS QuantidadeProduto
		  into:Total
		FROM SQLUser.VARPainelAbastRegionais

		WHERE Company = 0
		AND IdLocal = :pLocal
		AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) <> 0
		)
	quit Total
]]></Implementation>
</Method>

<Method name="GetTotalCentral">
<Description><![CDATA[
Método para retornar o total de itens no local
Utilizado para os totais na VARPainelAbastecimento.csp]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pLocal</FormalSpec>
<Implementation><![CDATA[
	new Total
	
	set Total = 0
	
	&SQL(SELECT TOP 1
		    count(DISTINCT IdProduto) AS QuantidadeProduto
		    into:Total
		FROM SQLUser.VARPainelAbastCentrais 

		WHERE Company = 0
		AND IdLocal  = :pLocal
		AND $$GetGruposParametro^VARPainelAbastecimentoUtils($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(IdProduto))) <> 0
	)
	
	quit Total
]]></Implementation>
</Method>

<Method name="BlockPage">
<ClassMethod>1</ClassMethod>
<FormalSpec>pMensagem=""</FormalSpec>
<Implementation><![CDATA[
	
	&html<<script type="text/javascript">
		$.blockUI({ message: '<h4>#(pMensagem)#</h4>' });	
	</script>>
]]></Implementation>
</Method>

<Method name="UnblockPage">
<ClassMethod>1</ClassMethod>
<FormalSpec>pMensagem=""</FormalSpec>
<Implementation><![CDATA[
	
	&html<<script type="text/javascript">
		$.unblockUI();	
	</script>>
]]></Implementation>
</Method>
</Class>
</Export>