<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.iUItemPolicy">
<Description><![CDATA[
Item Policy Interface Class]]></Description>
<Abstract>1</Abstract>
<ClassType/>
<IncludeCode>INConst,COMSYS,%occInclude</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>

<Method name="IsLotUnique">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidItem:alSYS.dt.dtString,pidLot:alSYS.dt.dtString,pdteExp:alSYS.dt.dtDate</FormalSpec>
<ReturnType>alSYS.dt.dtString</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; For a given item check the Lot is unique (based on Expiry Date)
	;
	;
	;
	; History:							
	; 05-Aug-2009	PPP		SR16765: Check uniqueness of Lot (do not look at Expiry)
	; 17-Jul-2009	PPP		SR16765: Check uniqueness irrespective of the Expiry Date
	; 20-Jun-2009	PPP		SR16510: Created
	;-------------------------------------------------------------------------------
	set blnUnique = $$$YES
	set objResultSet = ##class(%Library.ResultSet).%New("alSOH.dBundleAttribute:GetValueForItemAttribute")
	set sc = objResultSet.Execute(pidItem,"Lot Number")

	/*
	if $$$ISOK(sc) {
		while objResultSet.Next(.sc) {
			if pidLot = objResultSet.Data("AttributeValue") {
				
				if pdteExp="" {		//SR16765
					set blnUnique = $$$NO
				} else {
					set objBundle = ##class(alSOH.dBundle).%OpenId(objResultSet.Data("Bundle"))
					set idAttrib = objBundle.Attributes.FindObjectId(objBundle.%Id()_"||Use By Date")
					if idAttrib = $$$NULLOID continue
					//set dteExistingBundle = objBundle.Attributes.GetAt(objBundle.Attributes.FindObjectId(objBundle.%Id()_"||Use By Date")).AttributeValue
					set dteExistingBundle = objBundle.Attributes.GetAt(idAttrib).AttributeValue
					if pdteExp = dteExistingBundle {
						set blnUnique = $$$NO
					}
				}

			}
		}
	}
	*/

	if $$$ISOK(sc) {
		while objResultSet.Next(.sc) {
			if pidLot = objResultSet.Data("AttributeValue") {
				set blnUnique = $$$NO
			}
		}
	}
	quit blnUnique
]]></Implementation>
</Method>

<Method name="LotExists">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidItem:alSYS.dt.dtString,pidLot:alSYS.dt.dtString</FormalSpec>
<ReturnType>alSYS.dt.dtString</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; For a given item check if the Lot exits)
	;
	; History:		
	; 09-Oct-2009	shobby	SR16918: Don't keep looking if we have already found it.					
	; 30-Sep-2009	PPP		SR16918: Created
	;-------------------------------------------------------------------------------
	set blnExists = $$$NO
	set objResultSet = ##class(%Library.ResultSet).%New("alSOH.dBundleAttribute:GetValueForItemAttribute")
	set sc = objResultSet.Execute(pidItem,"Lot Number")

	if $$$ISOK(sc) {
		while objResultSet.Next(.sc) {
			if pidLot = objResultSet.Data("AttributeValue") {
				set blnExists = $$$YES
			}
			quit:blnExists	;SR16918
		}
	}
	quit blnExists
]]></Implementation>
</Method>

<Method name="GetExpiryForLot">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidItem:alSYS.dt.dtString,pidLot:alSYS.dt.dtString</FormalSpec>
<ReturnType>alSYS.dt.dtDate</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; For a given Item/Lot get the Expiry Date
	;
	;
	;
	; History:							
	; 20-Jun-2009	PPP		SR16510: Created
	;-------------------------------------------------------------------------------
	set dteExpiry = ""
	set objResultSet = ##class(%Library.ResultSet).%New("alSOH.dBundleAttribute:GetValueForItemAttribute")
	set sc = objResultSet.Execute(pidItem,"Lot Number")

	if $$$ISOK(sc) {
		while objResultSet.Next(.sc) {
			if objResultSet.Data("AttributeValue") = pidLot {
				set objBundle  = ##class(alSOH.dBundle).%OpenId(objResultSet.Data("Bundle"))
				set idAttrib   = objBundle.Attributes.FindObjectId(objBundle.%Id()_"||Use By Date")
				continue:idAttrib=$$$NULLOID
				
				set dteExpiry = objBundle.Attributes.GetAt(idAttrib).AttributeValue
				//set dteExpiry = objBundle.Attributes.GetAt(objBundle.Attributes.FindObjectId(objBundle.%Id()_"||Use By Date")).AttributeValue
				quit ; while break
			}
		}
	}
	quit dteExpiry
]]></Implementation>
</Method>
<UDLText name="T">
<Content>
//End of Class

</Content>
</UDLText>
</Class>
</Export>