<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSYS.Script.data.dScriptType">
<Description><![CDATA[
<b>Adding new Types/Nodes Scripts</b>
to add a new type to the scripts, first work out if there is a group already 
available to the script. <br>
IE system calls such as $Horolog fit well into the system calls (SYSMETHOD) group 
<br>
These can be found in the <code>alSYS.Script.data.dScriptType</code> storage object<br>
once this is completed. <br><br>
the Logic of how it iteracts with the other types around it is needed
to be known. This is so it can be correctly inserted and added to the type's 
<code>NextPossibleScript</code>. This list provides the type the information it needs to
understand what comes next. <br><br>
The information of the should be added to <code>alSYS.Script.piScriptPopulate.populateType()</code>
<br> each line represents a type in the format of <br>

;set arr(XX) = "screenType~Name~alSYS000XX~Description~alSYS100XX~OScreenText~"<br>

the Internationisation of the on screen text of the type can be found in alSYS000XX<br>
where xx is the the type's <code>Type</code> 
]]></Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>

<Property name="Description">
<Description><![CDATA[
The description of the script ]]></Description>
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Property name="Name">
<Description><![CDATA[
the name of the script ]]></Description>
<Type>%String</Type>
<Required>1</Required>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Property name="NextPossibleScript">
<Type>dScriptType</Type>
<Collection>list</Collection>
</Property>


<Property name="OScreenText">
<Description><![CDATA[
a list of the possible script types this script can go to ]]></Description>
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Property name="screenType">
<Description><![CDATA[
The type of script this is 
  * Conditional 
  * Input (User) 
  * Input (System)
  * Directional ]]></Description>
<Type>%String</Type>
<Required>1</Required>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Property name="Type">
<Description><![CDATA[
Script type, used for next script possibilities ]]></Description>
<Type>%Integer</Type>
<Required>1</Required>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="NameIndex">
<Properties>Name</Properties>
</Index>

<Index name="typeIndex">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>Type</Properties>
<Unique>1</Unique>
</Index>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alSYS.Script.data.dScriptTypeD</DataLocation>
<DefaultData>dScriptTypeDefaultData</DefaultData>
<IdLocation>^alSYS.Script.data.dScriptTypeD</IdLocation>
<IndexLocation>^alSYS.Script.data.dScriptTypeI</IndexLocation>
<StreamLocation>^alSYS.Script.data.dScriptTypeS</StreamLocation>
<Data name="dScriptTypeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Description</Value>
</Value>
<Value name="3">
<Value>Name</Value>
</Value>
<Value name="4">
<Value>NextPossibleScript</Value>
</Value>
<Value name="5">
<Value>OScreenText</Value>
</Value>
<Value name="6">
<Value>screenType</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>