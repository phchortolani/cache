<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsLogFilterForm">
<Description><![CDATA[
An autoform for gathering Message Filter info]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject,CSPX.AutoFormCSP</Super>
<System>3</System>

<Parameter name="FORMCOLUMNS">
<Description><![CDATA[
Number of columns used to layout forms for this class]]></Description>
<Default>3</Default>
</Parameter>


<Property name="SortOrder">
<Description><![CDATA[
How to sort data]]></Description>
<Type>%String</Type>
<InitialExpression>2</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:SortOrder@Sort Order"/>

<Parameter name="DISPLAYLIST" value=",Oldest First,Newest First"/>

<Parameter name="VALUELIST" value=",1,2"/>
</Property>


<Property name="MaxRows">
<Description><![CDATA[
Number of rows to display]]></Description>
<Type>%Integer</Type>

<Parameter name="CAPTION" value="@Ensemble:MaxRows@Max Rows"/>

<Parameter name="MINVAL" value="1"/>
</Property>

<UDLText name="T">
<Content>
//Property Type As Ens.DataType.LogType(CAPTION = "@Ensemble:Type@Type");

</Content>
</UDLText>


<Property name="Assert">
<Description><![CDATA[
Log entry types
Log entry types]]></Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:LTAssert@Assert"/>
</Property>


<Property name="TimeFormat">
<Description><![CDATA[
Time format]]></Description>
<Type>%String</Type>
<InitialExpression>999</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:TimeFormat@Time Format"/>

<Parameter name="DISPLAYLIST" value=",Time Only,Complete"/>

<Parameter name="VALUELIST" value=",12,999"/>
</Property>


<Property name="StartId">
<Description><![CDATA[
Starting ID value]]></Description>
<Type>%Integer</Type>

<Parameter name="CAPTION" value="@Ensemble:StartId@Start Id"/>
</Property>


<Property name="Error">
<Description><![CDATA[
Log entry types]]></Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:LTError@Error"/>
</Property>


<Property name="Source">
<Description><![CDATA[
Source class]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:Source@Source"/>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="EndId">
<Description><![CDATA[
End ID value]]></Description>
<Type>%Integer</Type>

<Parameter name="CAPTION" value="@Ensemble:EndId@End Id"/>
</Property>


<Property name="Warning">
<Description><![CDATA[
Log entry types]]></Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:LTWarning@Warning"/>
</Property>


<Property name="Method">
<Description><![CDATA[
Source method]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:Method@Method"/>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="StartTime">
<Description><![CDATA[
Starting date]]></Description>
<Type>%TimeStamp</Type>

<Parameter name="CAPTION" value="@Ensemble:StartTime@Start Time"/>
</Property>


<Property name="Info">
<Description><![CDATA[
Log entry types]]></Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:LTInfo@Info"/>
</Property>


<Property name="Text">
<Description><![CDATA[
Text]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:Text@Text"/>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="EndTime">
<Description><![CDATA[
End date]]></Description>
<Type>%TimeStamp</Type>

<Parameter name="CAPTION" value="@Ensemble:EndTime@End Time"/>
</Property>


<Property name="Trace">
<Description><![CDATA[
Log entry types]]></Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:LTTrace@Trace"/>
</Property>


<Property name="Job">
<Description><![CDATA[
$Job]]></Description>
<Type>%Integer</Type>

<Parameter name="CAPTION" value="@Job:Job@Job"/>
</Property>


<Property name="SessionId">
<Description><![CDATA[
Session ID]]></Description>
<Type>%Integer</Type>

<Parameter name="CAPTION" value="@Ensemble:SessionId@Session Id"/>
</Property>


<Property name="Alert">
<Description><![CDATA[
Log entry types]]></Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>

<Parameter name="CAPTION" value="@Ensemble:LTAlert@Alert"/>
</Property>


<Property name="ColorBy">
<Description><![CDATA[
Column to color results by]]></Description>
<Type>%String</Type>

<Parameter name="CAPTION" value="@Ensemble:ColorBy@Color By"/>

<Parameter name="VALUELIST" value=",TimeLogged,Job,Session,Source,Method,Text"/>
</Property>


<Method name="CreateInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pID:%String</FormalSpec>
<ReturnType>%CSP.Util.AutoForm</ReturnType>
<Implementation><![CDATA[
#define SetPropVal(%prop)		Set tObj.%prop=..%prop##expression("DisplayToLogical")($G(%request.Data("%prop",1)))
#define SetPropValBool(%prop)	Set tObj.%prop=$Case($ZCVT($G(%request.Data("%prop",1)),"L"),0:0,"":0,"off":0,"false":0,:1)
#define SetSesPropVal(%prop)	Set tObj.%prop=..%prop##expression("DisplayToLogical")($G(%session.Data("EnsLogFilterForm","%prop",1)))

	Set tObj = ..%New()
	
	#; Set values from Session for the ones we want to persist
	If $D(%request.Data("$CLASS",1)) { // We are in the Form submit, not the page/pane/form redraw
		If $D(%request.Data("MaxRows",1)) {
			$$$SetPropVal(SessionId)
			$$$SetPropVal(StartTime)
			$$$SetPropVal(EndTime)
			$$$SetPropVal(StartId)
			$$$SetPropVal(EndId)
			$$$SetPropVal(Method)
			$$$SetPropVal(Source)
			$$$SetPropVal(Job)
			$$$SetPropVal(Text)

			$$$SetPropValBool(Assert)
			$$$SetPropValBool(Error)
			$$$SetPropValBool(Warning)
			$$$SetPropValBool(Info)
			$$$SetPropValBool(Trace)
			$$$SetPropValBool(Alert)
			$$$SetPropVal(MaxRows)
			$$$SetPropVal(SortOrder)
			$$$SetPropVal(TimeFormat)
			$$$SetPropVal(ColorBy)
		}
	} Else { // We are in a redraw not a submit
		If $D(%request.Data("SessionId",1))
		|| $D(%request.Data("StartTime",1))
		|| $D(%request.Data("EndTime",1))
		|| $D(%request.Data("StartId",1))
		|| $D(%request.Data("EndId",1))
		|| $D(%request.Data("Method",1))
		|| $D(%request.Data("Source",1))
		|| $D(%request.Data("Job",1))
		|| $D(%request.Data("Text",1)) {
			$$$SetPropVal(SessionId)
			$$$SetPropVal(StartTime)
			$$$SetPropVal(EndTime)
			$$$SetPropVal(StartId)
			$$$SetPropVal(EndId)
			$$$SetPropVal(Method)
			$$$SetPropVal(Source)
			$$$SetPropVal(Job)
			$$$SetPropVal(Text)
		}
		If $D(%session.Data("EnsLogFilterForm")) {
			Do ..cleanReqData(1) ; prevent the framework from messing with the values we put in.
			$$$SetSesPropVal(Assert)
			$$$SetSesPropVal(Error)
			$$$SetSesPropVal(Warning)
			$$$SetSesPropVal(Info)
			$$$SetSesPropVal(Trace)
			$$$SetSesPropVal(Alert)
			$$$SetSesPropVal(MaxRows)
			$$$SetSesPropVal(SortOrder)
			$$$SetSesPropVal(TimeFormat)
			$$$SetSesPropVal(ColorBy)
	 	} ElseIf $D(%request.Data("MaxRows",1)) {
			$$$SetPropValBool(Assert)
			$$$SetPropValBool(Error)
			$$$SetPropValBool(Warning)
			$$$SetPropValBool(Info)
			$$$SetPropValBool(Trace)
			$$$SetPropValBool(Alert)
			$$$SetPropVal(MaxRows)
			$$$SetPropVal(SortOrder)
			$$$SetPropVal(TimeFormat)
			$$$SetPropVal(ColorBy)
		}
	}
	Set:""=tObj.SortOrder tObj.SortOrder=2
	Set:""=tObj.TimeFormat tObj.TimeFormat=12
	Set:+tObj.MaxRows<=0 tObj.MaxRows = 100
	Quit tObj
]]></Implementation>
</Method>

<Method name="OnSubmit">
<FormalSpec>&amp;pID:%String,pSubmit:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
#define GetPropVal(%prop) Set ..%prop=$ZStrip(..%prop,"<>W") Set %response.Context("%prop")=..%prop##expression("LogicalToDisplay")(..%prop), %session.Data("EnsLogFilterForm","%prop",1)=%response.Context("%prop")

	// set parm to make query run
	Set %response.Context("$EXEC") = 1

	If (pSubmit = "$AUTOFORM_RESET") {
		// get default values & submit those
		Do ..cleanReqData() ; prevent the framework from messing with the values we put in.
		Kill pID  Set tObj=..CreateInstance(.pID)
		Quit tObj.OnSubmit(.pID, "$AUTOFORM_SEARCH")
	}
	$$$GetPropVal(SessionId)
	$$$GetPropVal(StartId)
	$$$GetPropVal(EndId)
	$$$GetPropVal(StartTime)
	$$$GetPropVal(EndTime)
	$$$GetPropVal(Method)
	$$$GetPropVal(Source)
	$$$GetPropVal(Job)
	$$$GetPropVal(Text)

	$$$GetPropVal(Assert)
	$$$GetPropVal(Error)
	$$$GetPropVal(Warning)
	$$$GetPropVal(Info)
	$$$GetPropVal(Trace)
	$$$GetPropVal(Alert)
	$$$GetPropVal(MaxRows)
	$$$GetPropVal(SortOrder)
	$$$GetPropVal(TimeFormat)
	$$$GetPropVal(ColorBy)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="cleanReqData">
<ClassMethod>1</ClassMethod>
<FormalSpec>pContextOnly:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
#define CleanVal(%prop)		Kill %request.Data("%prop",1)

	If 'pContextOnly {
	}
	$$$CleanVal(Assert)
	$$$CleanVal(Error)
	$$$CleanVal(Warning)
	$$$CleanVal(Info)
	$$$CleanVal(Trace)
	$$$CleanVal(Alert)
	$$$CleanVal(MaxRows)
	$$$CleanVal(SortOrder)
	$$$CleanVal(TimeFormat)
	$$$CleanVal(ColorBy)
]]></Implementation>
</Method>

<Method name="OnDefineButtons">
<Description><![CDATA[
define buttons]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;pButtons:%CSP.Util.FormButton</FormalSpec>
<Implementation><![CDATA[
	Set pButtons(1) = ##class(%CSP.Util.FormButton).%New()
	Set pButtons(1).Name = "$AUTOFORM_SEARCH"
	Set pButtons(1).Caption = $$$Text("Search")

	Set pButtons(2) = ##class(%CSP.Util.FormButton).%New()
	Set pButtons(2).Name = "$AUTOFORM_RESET"
	Set pButtons(2).Caption = $$$Text("Reset")
]]></Implementation>
</Method>
</Class>
</Export>