<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.mobile.StockMoveLogicImpl">
<ClassType/>
<IncludeCode>COMSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>VAR.mobile.JavaAbstract</Super>

<Method name="move">
<ClassMethod>1</ClassMethod>
<FormalSpec>location:%String,sourceAddress:%String,destinationAddress:%String,pallets:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>StatusBean</ReturnType>
<Implementation><![CDATA[	set result = ##class(StatusBean).%New()

	if ('##class(SessionLogicImpl).isOpen()) {
		set result.Code = result.%GetParameter("ERRORSESSIONNOTOPENED")
        do result.Messages.Insert("Session not opened")
        quit result
	}

	set strStatus = $$Transaction^COMTransaction("CallWithParams^VARMobileTransaction(""VAR.mobile.StockMoveLogicImpl"", ""moveTxn"", """_location_""", """_sourceAddress_""", """_destinationAddress_""", """_pallets_""")")

    if ($$$ISOK(strStatus)) {
		set result.Code = result.%GetParameter("SUCCESS")
    }
	else {
		set result.Code = result.%GetParameter("ERRORGENERIC")
        do result.Messages.Insert($$DecodeError^COMUtilError(strStatus))
	}

	quit result]]></Implementation>
</Method>

<Method name="moveTxn">
<FormalSpec>params</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set location = params(1)
	set sourceAddress = params(2)
	set destinationAddress = params(3)
	set palletList = $LISTFROMSTRING(params(4),"~")
	
	
	//Cria o cabeçalho da movimentação
	set idMOV = $$^WWWNEXT("INMOV")		
	set strObserv = "Movimentação de palete criada pelo PDA."
	set strStatus = $$$OK

	set objMOV = ""	
	set $piece(objMOV,Y,1) = $piece($horolog,",",1) ;Data
	set $piece(objMOV,Y,2) = location  ;Local	
	set $piece(objMOV,Y,3) = 1		   ;Movement Type (0 - Estoque, 1 - Palete)
	set $piece(objMOV,Y,5) = 1 		   ;Status (1 - Em andamento)
	set $piece(objMOV,Y,6) = strObserv ;Observações
	set $piece(objMov,Y,7) = $horolog  ;Criado Em
	set $piece(objMOV,Y,25) = YBED	   ;Criado Por
	
	set strStatus = $$$Save("INMOV",idMOV,objMOV,1)

	if $$$ISOK(strStatus) {

  		set idMOVPallet = ""
   		set ptr=0
   		set lineNumber = 1
  			
		//Cria as linhas da movimentação		
		while $listnext(palletList, ptr, idMOVPallet) {
		
		   	set objMOVPallet = ""
		   	set $piece(objMOVPallet,Y,1) = idMOVPallet
		   	set $piece(objMOVPallet,Y,2) = destinationAddress
		   	set $piece(objMOVPallet,Y,3) = sourceAddress
		   				
		   	set idKeyLinha = idMOV_$$$COMMA_lineNumber
			set strStatus = $$$Save("INMOVPallet",idKeyLinha,objMOVPallet,1)
				
			// Any error on saving the pallet item, return error.
			if '$$$ISOK(strStatus) {
				break
			}
			set lineNumber = lineNumber + 1
		}
		
		set strStatus = $$CanPost^INMOVByPallet(idMOV)
		
		if $$$ISOK(strStatus) {
			set strStatus = $$Post^INMOVByPallet(idMOV)
		}
	}
	
	quit strStatus]]></Implementation>
</Method>
</Class>
</Export>