<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="COM.fwk.www.bo.ClassBO">
<ClassType/>
<Import>COM.fwk.exception</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject,COM.fwk.biz.BO</Super>

<Method name="%OnNew">
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$OK
]]></Implementation>
</Method>

<Method name="getDescription">
<Description><![CDATA[
For a specific class, returns its description

@author Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>className:%Library.String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[

	set class = ##class(COM.fwk.www.entity.Class).findByName(className)
	
	if (class = "") {
		quit ""
	}
	
	// remove the 'class' name of the end of the description
	//set descWithoutClass = $piece(class.ClassDescription, "class", 1) 
	//set descWithoutClass = $piece(descWithoutClass, "Class", 1) 
	
	//quit $zconvert(descWithoutClass, "t")
	quit class.ClassDescription
]]></Implementation>
</Method>

<Method name="getLanguageClassForRelations">
<Description><![CDATA[
For a specific class, returns its description

@author Tharsis Campos - Disclinc Brazil
]]></Description>
<FormalSpec>className:%Library.String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[

	set class = ##class(COM.fwk.www.entity.Class).findByName(className)
	
	quit class.LanguageClassForRelations
]]></Implementation>
</Method>

<Method name="listLanguageClasses">
<Description><![CDATA[
List all classes that has a language field 
as a part of its primary key. 

@author Tharsis Campos - Disclinc Brazil
]]></Description>
<ReturnType>%Library.ListOfObjects</ReturnType>
<Implementation><![CDATA[

	set list = ##class(COM.fwk.www.entity.Class).findByLanguagePk()
	
	set key = list.Next("")
	
	while (key '= "") {
		set class = list.GetAt(key)
		
		do list.SetAt(##class(COM.fwk.biz.dto.GenericDTO).%New(class), key)
		
		set key = list.Next(key)
	}
	
	quit list
]]></Implementation>
</Method>

<Method name="isSharedClass">
<FormalSpec>className:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Returns '0' for shared classes, or the current
	; company code for non shared classes
	;  
	; @author Pablo Gandulfo - Disclinc Brazil
	; 
	; History
	; 30-Jan-2006		hjrb		SR14178:New property name
	;-------------------------------------------------------------------------------
	;	
	set class = ##class(COM.fwk.www.entity.Class).findByName(className)

	if (class = "") {
		quit 0
		
	;} elseif (class.Shareddatabase = "1") {
	} elseif (class.SharedFile = "1") {		// SR14178
		quit 1
		
	} else {
		quit 0
	}
]]></Implementation>
</Method>

<Method name="isUpdateFile">
<Description><![CDATA[
Checks if the class has to be updated.

Author: Tharsis Campos - Disclinc Brasil
]]></Description>
<FormalSpec>className:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Returns:
	;
	; History:
	; 03-Mar-2006		FrankF	SR13628: Changing the constant $$$false, $$$true to $$$YES, $$$NO
	; 06-Jan-2006		Frank	SR14111 - Tools module exporting: Fixing routines 
	; 									  to make the Alphalinc Suite Builder work.
	;-------------------------------------------------------------------------------
	;
	set class = ##class(COM.fwk.www.entity.Class).findByName(className)
	quit:'$isObject(class) $$$NO ;SR14111

	if (class.UpdateFile = "1") {
		quit $$$YES
		
	} else {
		quit $$$NO
	}
]]></Implementation>
</Method>

<Method name="getNextKey">
<Description><![CDATA[

Returns the next primary key for the Entity.
If the Entity has 3 primary keys, the first two must be provided and so on.

<p>

Author: Francisco Fiuza Lima - Disclinc Brasil ]]></Description>
<FormalSpec>className:%String,keyList:%ListOfDataTypes</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	if ((' $data(keyList)) || (keyList.Count() = 0)) {
		quit ..getNext(className)
		
	} elseif (keyList.Count() = 1) {
		quit ..getNext1(className, keyList.GetAt(1), 2)
		
	} elseif (keyList.Count() = 2) {
		quit ..getNext1(className, keyList.GetAt(1)_..getSession().getCommaSymbol()_keyList.GetAt(2),3)
		
	} else {
		do ..raiseException(##class(BusinessException).%New("The getNextKey supports only 2 keys so far."))
	}
]]></Implementation>
</Method>

<Method name="getDataGlobalName">
<FormalSpec>className:%String</FormalSpec>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Returns the name of the Global that stores 
	; the data of the class.
	; @author Francisco Fiuza Lima - Disclinc Brazil
	; 
	; History
	; 30-Jan-2006		hjrb		SR14178:New property name
	;-------------------------------------------------------------------------------
	;
	set class = ##class(COM.fwk.www.entity.Class).findByName(className)
	;if class.Datenspeichernin = ""
	if class.SaveDataInFile = ""		// SR14178
	{
		quit className
	}
	else
	{
	;	quit class.Datenspeichernin
		quit class.SaveDataInFile		// SR14178
	}
]]></Implementation>
</Method>

<Method name="getNext">
<Description><![CDATA[
TODO: call the WWWNEXT instead of using this ugly code.]]></Description>
<FormalSpec>YFORM,YZAHL</FormalSpec>
<Private>1</Private>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
 NEW A,B,C,D,YI,LGTH,YDATEI
 SET YFORM=$GET(YFORM)
 SET YZAHL=+$GET(YZAHL)
 IF YZAHL=0 SET YZAHL=1
 IF '$DATA(YM) SET YM=0
 IF YM="" SET YM=0 
 SET A=""
 IF YFORM="" QUIT ""   ;KEIN FORMULAR ;no form 
 SET YDATEI=$PIECE($GET(^WWW120(0,YFORM,1)),Y,11)
 IF YDATEI'="" IF $PIECE($G(^WWW001(0,YDATEI,1)),Y,3)=1!(YDATEI="WWW009") NEW YM SET YM=0  ;TYBD;17.06.2003;WENN ZENTRALE DATEI DANN 0   ;when headquarters data file 
 IF $GET(YUCI)="" SET YUCI=$ZUTIL(5)    ;BEC;25080;09.02.04
 IF '$DATA(Y) DO ^WWWVAR  ;bec;10.02.04;25080;für Terminal
 ;IF '$DATA(^WWW128(YM,YFORM,1)) IF $DATA(^ROUTINE("COMUtils")) SET ^WWW128(YM,YFORM,1)=$$DefaultSequenceNo^COMUtils()  ;REQUESTED CHANGE BY LIONEL;18.08.2003
 IF '$DATA(^WWW128(YM,YFORM,1)) IF $EXTRACT(YFORM,1,3)'="WWW" IF $EXTRACT(YFORM,1,2)'="IN" IF $EXTRACT(YFORM,1,3)'="VAR" IF $$EXIST^%R("COMUtils"_".OBJ",$GET(YUCI)) SET ^WWW128(YM,YFORM,1)=$$DefaultSequenceNo^COMUtils()  ;REQUESTED CHANGE BY LIONEL;18.08.2003
 IF '$DATA(^WWW128(YM,YFORM,1)) SET ^WWW128(YM,YFORM,1)=0
 IF YDATEI="" DO NEXT QUIT A  ;OHNE DATEI ;without data file 
 set globalName = ..getDataGlobalName(YDATEI)
 IF $GET(YFKEY)="" IF YDATEI'="" FOR  DO  QUIT:'$DATA(@("^"_globalName_"("_""""_YM_""""_","_""""_A_""""_")"))
 	.DO NEXT
 	.QUIT
 IF $GET(YFKEY)'="" IF YDATEI'="" FOR  DO  QUIT:'$DATA(@("^"_globalName_"("_""""_YM_""""_","_""""_$PIECE(YFKEY,",",1)_""""_","_""""_A_""""_")"))
 	.DO NEXT 
 	.QUIT
 QUIT A
NEXT ;    
 LOCK +^WWW128(YM,YFORM):2    ;LOCK SETZEN ;typeset 
 IF YZAHL=1 DO
 	.IF +$PIECE($GET(^WWW128(YM,YFORM,1)),Y,2)'=0 SET YZAHL=$PIECE(^(1),Y,2)   ;ZÄHLER
 	.IF $GET(YLOCATION)'="" IF +$PIECE($GET(^WWW1280(YM,YFORM,YLOCATION,1)),Y,2)'=0 SET YZAHL=$PIECE(^(1),Y,2)   ;ZÄHLER
 	.QUIT
 SET A=$PIECE($GET(^WWW128(YM,YFORM,1)),Y,1)
 IF $GET(YLOCATION)'="" IF $PIECE($GET(^WWW1280(YM,YFORM,YLOCATION,1)),Y,1)'="" SET A=$PIECE($GET(^WWW1280(YM,YFORM,YLOCATION,1)),Y,1)
 ;TEXT PART LÖSCHEN ;Text Delete 
 ;SET B=""
 ;SET B=$REVERSE(A) ;table-mat 
 ;FOR  QUIT:'$FIND("1234567890",$EXTRACT(B))  QUIT:B=""  SET B=$EXTRACT(B,2,999)
 ;SET B=$REVERSE(B) ;table-mat 
 ;IF B'="" SET A=+$PIECE(A,B,2)
 ;TEXT PART LÖSCHEN       ;Text Delete 
 SET (B,C,D)=""
 FOR YI=1:1 QUIT:$E(A,YI)=""  DO
 	.IF C="" IF '$F("1234567890",$E(A,YI)) SET B=B_$E(A,YI) QUIT  ;LETTERS
 	.IF D="" IF $E(A,YI)=0 SET C=C_$E(A,YI) QUIT  ;ZEROS
 	.SET D=D_$E(A,YI)  ;NUMBER
 	.QUIT
 SET A=D
 SET LGTH=$L(C_A)
 SET A=A+YZAHL  ;NÄCHSTE NUMMER(N) ;next 
 ;NULLEN
 IF $EXTRACT(YZAHL,$LENGTH(YZAHL))="0" DO
 	.QUIT:$EXTRACT(A,$LENGTH(A))=0
 	.FOR  SET A=A+1 QUIT:$EXTRACT(A,$LENGTH(A))=0
 	.QUIT
 IF $EXTRACT(YZAHL,$LENGTH(YZAHL)-1,$L(YZAHL))="00" DO
 	.QUIT:$EXTRACT(A,$L(A)-1,$LENGTH(A))="00"
 	.FOR  SET A=A+1 QUIT:$EXTRACT(A,$L(A)-1,$LENGTH(A))="00"
 	.QUIT
 IF C'="" SET A=$RE($E($RE(C_A),1,LGTH))
 SET A=B_A                ;ALPHANUMERIC
 SET $PIECE(^WWW128(YM,YFORM,1),Y,1)=A    ;SPEICHERN ;Save 
 IF $GET(YLOCATION)'="" IF $PIECE($GET(^WWW1280(YM,YFORM,YLOCATION,1)),Y,1)'="" SET $PIECE(^WWW1280(YM,YFORM,YLOCATION,1),Y,1)=A
 LOCK -^WWW128(YM,YFORM)      ;LOCK AUFHEBEN ;repeal 
 IF $FIND(A,"YEAR") SET A=$PIECE(A,"YEAR",1)_$$^WWWYEAR()_$PIECE(A,"YEAR",2)
 IF $FIND(A,"USER") SET A=$PIECE(A,"USER",1)_$G(YBED)_$PIECE(A,"USER",2)
 IF $FIND(A,"BETRIEB") SET A=$PIECE(A,"BETRIEB",1)_$GET(YLOCATION)_$PIECE(A,"BETRIEB",2)
 IF $FIND(A,"MANDANT") SET A=$PIECE(A,"MANDANT",1)_$GET(YM)_$PIECE(A,"MANDANT",2)
 IF $FIND(A,"LOCATION") SET A=$PIECE(A,"LOCATION",1)_$GET(YLOCATION)_$PIECE(A,"LOCATION",2)
 IF $FIND(A,"COMPANY") SET A=$PIECE(A,"COMPANY",1)_$GET(YM)_$PIECE(A,"COMPANY",2)
]]></Implementation>
</Method>

<Method name="getNext1">
<Description><![CDATA[
TODO: call the WWWNEXT1 instead of using this ugly code.]]></Description>
<FormalSpec>YDATEI,YFKEY,YI,YZAHL</FormalSpec>
<Private>1</Private>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 ;w "WWWNEXT1",!
 NEW YNKEY,YSKEY,YII,YMAXKEY,A,B,C,D,LGTH
 QUIT:'$DATA(YFKEY) ""
 QUIT:'$DATA(YDATEI) ""
 QUIT:'$DATA(YI) ""
 QUIT:YFKEY="" ""
 QUIT:YDATEI="" ""
 ;w "WWWNEXT2",!,YFKEY,!,YI,!
 SET YZAHL=+$GET(YZAHL)
 IF YZAHL=0 SET YZAHL=1
 SET YMAXKEY=$ORDER(^WWW002(0,YDATEI,""),-1)
 ;write "antes",!
 QUIT:YMAXKEY="" ""
 ;write "depois",!
 SET YNKEY="",YNKEY(1)=""
 SET YSKEY=$GET(YKEY)
 FOR YII=1:1:(YI-1) {
	 ;write "YII"_$PIECE(YFKEY,",",YII+1),! 
 }
 FOR YII=1:1:(YI-1) DO  IF $PIECE(YFKEY,",",YII+1)'=""!($GET(YKEY(YII+1))'="") SET YNKEY=YNKEY_","
 	.IF $PIECE(YFKEY,",",YII)'="" SET YNKEY=YNKEY_""""_$PIECE(YFKEY,",",YII)_"""" QUIT
 	.IF $GET(YKEY(YII))'="" SET YNKEY=YNKEY_""""_$GET(YKEY(YII))_"""" QUIT
 	.QUIT
 QUIT:YNKEY="" ""
 ;w "WWWNEXT3",!
 set globalName = ..getDataGlobalName(YDATEI)
 SET YNKEY(1)="^"_globalName_"("_$$^WWWYM(YDATEI,1)_YNKEY
 IF $EXTRACT(YNKEY(1),$LENGTH(YNKEY(1)))'="," SET YNKEY(1)=YNKEY(1)_","
 SET YNKEY(1)=YNKEY(1)_""""_$CHAR(255)_""""_")"
 SET A=$ORDER(@YNKEY(1),-1)
 ;ALTER CODE ;governor 
 ;SET A=A+YZAHL  ;TYBD;17,12,2003
 ;QUIT A         ;TYBD
 ;NEUER CODE 
 SET (B,C,D)=""
 FOR YI=1:1 QUIT:$E(A,YI)=""  DO
 	.IF C="" IF '$F("1234567890",$E(A,YI)) SET B=B_$E(A,YI) QUIT  ;LETTERS
 	.IF D="" IF $E(A,YI)=0 SET C=C_$E(A,YI) QUIT  ;ZEROS
 	.SET D=D_$E(A,YI)  ;NUMBER
 	.QUIT
 SET A=D
 SET LGTH=$L(C_A)
 SET A=A+YZAHL  ;NÄCHSTE NUMMER(N) ;next 
 ;NULLEN
 IF $EXTRACT(YZAHL,$LENGTH(YZAHL))="0" DO
 	.QUIT:$EXTRACT(A,$LENGTH(A))=0
 	.FOR  SET A=A+1 QUIT:$EXTRACT(A,$LENGTH(A))=0
 	.QUIT
 IF $EXTRACT(YZAHL,$LENGTH(YZAHL)-1,$LENGTH(YZAHL))="00" DO
 	.QUIT:$EXTRACT(A,$LENGTH(A)-1,$LENGTH(A))="00"
 	.FOR  SET A=A+1 QUIT:$EXTRACT(A,$LENGTH(A)-1,$LENGTH(A))="00"
 	.QUIT
 IF C'="" SET A=$REVERSE($EXTRACT($REVERSE(C_A),1,LGTH))
 SET A=B_A                ;ALPHANUMERIC
 QUIT A
]]></Implementation>
</Method>
</Class>
</Export>