<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.Portal.ArchiveManager">
<Description><![CDATA[
Zen based Archive Manager UI for Ensemble 2008.1]]></Description>
<Super>CSPX.Portal.Template</Super>
<System>4</System>

<Parameter name="APPLICATION">
<Description><![CDATA[
Class name of application this page belongs to.]]></Description>
<Default>CSPX.Portal.Application</Default>
</Parameter>


<Parameter name="PAGENAME">
<Description><![CDATA[
Displayed name of this page.]]></Description>
<Default>Archive Manager</Default>
</Parameter>


<Parameter name="AUTONS">
<Description><![CDATA[
If auto-switch namespace to whatever $NAMESPACE is passed in]]></Description>
<Type>BOOLEAN</Type>
<Default>0</Default>
</Parameter>


<Property name="lblHistory">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Archive history")</InitialExpression>
</Property>


<Property name="lblHistoryNone">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("No history found")</InitialExpression>
</Property>


<Property name="lblStartTime">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Archive start time")</InitialExpression>
</Property>


<Property name="lblStopTime">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Archive stop time")</InitialExpression>
</Property>


<Property name="lblStatus">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Archive status")</InitialExpression>
</Property>


<Property name="lblTotalProcessed">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Total messages processed")</InitialExpression>
</Property>


<Property name="lblTotalArchived">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Total messages archived")</InitialExpression>
</Property>


<Property name="lblTotalDeletedHead">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Total message headers deleted")</InitialExpression>
</Property>


<Property name="lblTotalDeletedBody">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Total message bodies deleted")</InitialExpression>
</Property>


<Property name="lblErrorLog">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Archive error log")</InitialExpression>
</Property>


<Property name="lblNumberErrors">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$TextHTML("Total number of errors")</InitialExpression>
</Property>


<Property name="msgConfirm">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$Text("Are you sure you want to start archive now? Warning: Messages cannot be restored once archived to another namespace.")</InitialExpression>
</Property>


<Property name="msgDiscard">
<Type>%ZEN.Datatype.caption</Type>
<InitialExpression>$$$Text("Discard any setting changes you may have made?")</InitialExpression>
</Property>

<XData name="Style">
<Data><![CDATA[
<style type="text/css">
.note {
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 0.8em;
	color: blue;
	background: yellow;
	text-align: left;
	font-weight: bold;
}
.statusText {
	font-size:0.8em;	
}
a.link {
	color: blue;
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 0.8em; 
	font-weight: bold;
	padding-left: 4px;
	text-decoration: none; 
}
a.link:visited {
	color: blue;
}	
a.link:hover {
	color: red;
}
.brownnote {
	font-size: 0.8em;
	color: #CC6600;
}
.fieldSet {
	background: white;
	padding: 4px;
}
.fieldSetLabel {
	color: darkblue;
	font-weight:bold;
	padding-bottom:5px;
}
.fieldStyle {
	border-bottom: 1px darkblue solid;
	color: darkblue;
	font-weight:bold;
	margin-bottom:1em;
	margin-top:1em;
	padding:2px;
	width: 30em;
}
TABLE.DetailTable	{ 
	font-family: verdana, Lucida sans unicode, sans-serif;
	font-size: 0.8em;
	margin-left: 20px; margin-right: 20px;
	border: 1px solid black;
	background: white;
}
.fieldSet {
	background: #C0C0C0;
	background-image: url(/csp/broker/images/grad-halfgray-10x500.png);
	background-repeat: repeat-x;	
}

</style>
]]></Data>
</XData>
<XData name="detailPane">
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane containerStyle="padding:20px">
<vgroup id="idInfo">
<hgroup enclosingClass="DetailCommand">
<link id="btnArchive" caption="Run Archive" href="javascript:zenPage.startArchive();"/>
</hgroup>
<html id="idCurrent" OnDrawContent="DrawCurrent"/>
<html id="idStatus" OnDrawContent="DrawStatus"/>
<label label="Note: Messages cannot be restored once archived to another namespace." labelClass="brownnote"/>
</vgroup>
<fieldSet id="fld" cellStyle="padding:5px;" enclosingStyle="margin-left:3px;padding-top:2px;" labelPosition="left" legend="Edit Archive Settings" hidden="true">
<combobox id="cmbNamespace" label="Archive to namespace:" 
editable="false"
 hint="Required. Select a namespace for storing archived messages." hintClass="hintText">
</combobox>
<text id="txtClassname" label="Archive manager class name:" hint="Required. Enter class name to be used for archiving messages." hintClass="hintText" size="40"/>
<text id="txtDays" label="Number of days before archiving:" size="5" 
hint="Required. Messages older than this number of days will be archived." hintClass="hintText"/>
<html><hr size="1"/></html>
<hgroup containerStyle="padding-bottom:2px;">
<button caption=" Save " onclick="zenPage.saveSetting();"/>
<button caption=" Cancel " onclick="zenPage.cancelSetting();" containerStyle="padding-left:4px;"/>
</hgroup>
</fieldSet>
<timer id="timer" ontimeout="zenPage.timeout(zenThis);" timeout="0"/>
<text id="CurrentStatus" hidden="true"/>
<label id="result" enclosingClass="note" hidden="true" value=""/>

<vgroup id="idErrors" hidden="true">
<html OnDrawContent="DrawErrorTitle"/>
<tableNavigatorBar id="tableBar" showFilter="false" showPageSize="true" tablePaneId="table"/>
<tablePane id="table" 
bodyHeight="250px"
fixedHeaders="false"
queryClass="Ens.Archive.Manager"
queryName="Errors"
maxRows="1000"
showZebra="false"
useSnapshot="true"
pageSize="10"
>
<column colName="ErrorNumber" header="Error Number"/>
<column colName="Time" header="Time"/>
<column colName="Description"/>
<column colName="MessageId" header="Message ID"/>
</tablePane>
<label label="Note: The error log will be deleted the next time Archive is run." labelClass="brownnote"/>
</vgroup>
</pane>
]]></Data>
</XData>

<Method name="%OnAfterCreatePage">
<Description><![CDATA[
Set Locator bar and determine whether to show change password option.]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//Set ..%GetComponentById("idTitle").title = $$$FormatText($$$Text("Archive manager settings for namespace %1:"),$zu(5))
	#; Add locator links for this page to the locator bar
	Set tLocator = ..%GetComponentById("locatorBar")
	Set tLocatorLink = ##class(%ZEN.Auxiliary.locatorLink).%New()
	Do tLocator.links.Insert(tLocatorLink)
	Do ..%AddComponent(tLocatorLink)
	Set tLocatorLink.caption = "Ensemble"
	Set tMgmtLink = ##class(%CSP.Page).Link(##class(%EnsembleMgr).DetermineMgmtURLForNamespace($ZU(5)))
	Set tLocatorLink.href = tMgmtLink

	Set tLocatorLink = ##class(%ZEN.Auxiliary.locatorLink).%New()
	Do tLocator.links.Insert(tLocatorLink)
	Do ..%AddComponent(tLocatorLink)
	Set tLocatorLink.caption = "Maintenance"
	Set tLocatorLink.href = $ZCVT("UtilEnsMA.csp","O","URL")
	
	Set tLocatorLink = ##class(%ZEN.Auxiliary.locatorLink).%New()
	Do tLocator.links.Insert(tLocatorLink)
	Do ..%AddComponent(tLocatorLink)
	Set tLocatorLink.caption = "Archive Manager"
	Set tLocatorLink.href = $ZCVT(%request.URL,"O","URL")
	#; Load namespace list (exclude the current namespace)
	Set tCurrentNS = $ZU(5)
	Set tCombo = ..%GetComponentById("cmbNamespace")
	Set tNS = $O(^%SYS("Ensemble","InstalledNamespace",""))
	While tNS '= "" {
		If tNS '= tCurrentNS {
			Set tOption = ##class(%ZEN.Auxiliary.option).%New()
			Do tCombo.options.Insert(tOption)
			Do ..%AddComponent(tOption)
			Set tOption.text = tNS
			Set tOption.value = tNS
		}
		Set tNS = $O(^%SYS("Ensemble","InstalledNamespace",tNS))
	}
 
	Set ..%GetComponentById("fld").legend = $$$FormatText($$$Text("Edit Archive Settings for %1:"),$zu(5))
	Quit 1
]]></Implementation>
</Method>

<Method name="DrawTitle">
<Description><![CDATA[
Used to draw title for this page. pHalpAddress is need to build the link for Help for this page.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pSeed = $$$TextHTML("Archive Manager")
	Set pHelpAddress = "Ensemble,Maintenance,ArchiveManager"
	Do %application.DrawTitle(pSeed_"^"_pHelpAddress)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="editSetting">
<Description><![CDATA[
User clicked Configure. Allow to modify.]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	this.hideTable(true);
	this.DoConfigure();
]]></Implementation>
</Method>

<Method name="hideTable">
<Description><![CDATA[
User clicked Configure. Allow to modify.]]></Description>
<FormalSpec>flag</FormalSpec>
<Language>javascript</Language>
<Implementation><![CDATA[
	zenPage.getComponentById("idInfo").setHidden(flag);
	zenPage.getComponentById("result").setHidden(true);
	zenPage.getComponentById("idErrors").setHidden(true);

	var fld = zenPage.getComponentById("fld");
	if (flag == true) {
		fld.setHidden(false);
	} else {
		zenPage.getComponentById("cmbNamespace").setProperty("hintClass","hintText");
		zenPage.getComponentById("txtClassname").setProperty("hintClass","hintText");
		zenPage.getComponentById("txtDays").setProperty("hintClass","hintText");
		fld.setHidden(true);
	}
]]></Implementation>
</Method>

<Method name="saveSetting">
<Description><![CDATA[
User clicked Save. Validate input.]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	var namespace = zenPage.getComponentById("cmbNamespace");
	var classname = zenPage.getComponentById("txtClassname");
	var days = zenPage.getComponentById("txtDays");
	var ok = 1;
	if (namespace.getValue() == "") {
		namespace.setProperty("hintClass","redText");
		namespace.focus();
		ok = 0;
	} else {
		namespace.setProperty("hintClass","hintText");
	}
	if (this.CheckAllBlanks(classname.getValue()) == 1) {
		classname.setProperty("hintClass","redText");
		if (ok == 1) classname.focus();
		ok = 0;
	} else {
		classname.setProperty("hintClass","hintText");
	}
	if (this.CheckAllBlanks(days.getValue()) == 1) {
		days.setProperty("hintClass","redText");
		if (ok == 1) days.focus();
		ok = 0;
	} else {
		days.setProperty("hintClass","hintText");
	}
	if (ok == 0) {
		// reset previous result message, if any
		zenPage.getComponentById("result").setValue("");
		return;
	}

	var ok = this.SaveData(namespace.getValue(), classname.getValue(), days.getValue());
	if (ok == 1) {
		zenPage.gotoPage("CSPX.Portal.ArchiveManager.cls");	
	} else {
		zenPage.writeResult(ok);
	}
]]></Implementation>
</Method>

<Method name="cancelSetting">
<Description><![CDATA[
User clicked Close. ]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[	this.hideTable(false);
]]></Implementation>
</Method>

<Method name="writeResult">
<FormalSpec>msg</FormalSpec>
<Language>javascript</Language>
<Implementation><![CDATA[
	zenPage.getComponentById("result").setHidden(false);		
	zenPage.getComponentById("result").setValue(msg);
]]></Implementation>
</Method>

<Method name="showErrors">
<Description><![CDATA[
Show or hide errors. ]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	var errors = zenPage.getComponentById("idErrors");
	var state = errors.getProperty("hidden");
	if (state == true) {
		errors.setHidden(false);
		var table = zenPage.getComponentById("table");
		table.executeQuery();
	} else {
		errors.setHidden(true);
	}
]]></Implementation>
</Method>

<Method name="startArchive">
<Description><![CDATA[
User clicked Do Archive. ]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	var msg = this.msgConfirm;
	if (zenPage.getComponentById("fld").getProperty("hidden") == false) {
		msg = msg + " "+this.msgDiscard;
	}
	var ok = confirm(msg);
	if (ok == true) {
		zenPage.getComponentById("idErrors").setHidden(true);
		zenPage.getComponentById("btnArchive").setProperty("disabled",true);
		var timer = zenPage.getComponentById('timer');	
		timer.setProperty('timeout',1000);
		timer.startTimer();
		var ok = this.RunBackgroundTask();
		// This is to display potential errors from %RunBackgroundMethod itself
		if (ok != 1) zenPage.writeResult(ok);
	}
]]></Implementation>
</Method>

<Method name="timeout">
<Description><![CDATA[
Run Archive: function to control timer on updating archive progress
This is called from onload as well (in case it is currently being run when the page is opened)]]></Description>
<FormalSpec>timer</FormalSpec>
<Language>javascript</Language>
<Implementation><![CDATA[
	this.doStatus();
	var timer = zenPage.getComponentById('timer');
	//if status = idle then stop timer. ow continue.
	var status = this.getComponentById("CurrentStatus").getValue();
	if (status == "running") {
		timer.startTimer();	
	} else {
		timer.clearTimer();
	}
]]></Implementation>
</Method>

<Method name="CheckAllBlanks">
<ClassMethod>1</ClassMethod>
<FormalSpec>string</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[	Quit $ZStrip(string,"<>W")=""
]]></Implementation>
</Method>

<Method name="SaveData">
<Description><![CDATA[
Save settings to server.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pNamespace:%String,pClassname:%String,pDays:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tSC = ##class(Ens.Archive.Manager).SetArchiveParameters(pNamespace,pClassname,pDays)
	If $$$ISERR(tSC) Set tSC = $System.Status.GetErrorText(tSC)
	Quit tSC
]]></Implementation>
</Method>

<Method name="RunBackgroundTask">
<ClassMethod>1</ClassMethod>
<ReturnType>%ZEN.Datatype.string</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	#; Run method BackgroundTask in a background job.
	Set tSC = ..%RunBackgroundMethod("DoArchive")
	If $$$ISERR(tSC) Set tSC = $System.Status.GetErrorText(tSC)
	Quit tSC
]]></Implementation>
</Method>

<Method name="DoArchive">
<Description><![CDATA[
Initiates archiver on the server in the background.]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Set $ZT = "Trap"

	Do ..%SetBackgroundMethodStatus("Job Started. Please wait...")	
	Set tSC = ##class(Ens.Archive.Manager).DoArchive()
	If $$$ISERR(tSC) {
		#; server method error out
		Set pMsg = $System.Status.GetErrorText(tSC)
		Do ..%SetBackgroundMethodStatus(pMsg)
		#; This is to set unexpected errors like unable to lock, etc. so UI can pickup to display
		Set ^Ens.ArchiveManager("run","error") = pMsg
	} Else {
		Do ..%EndBackgroundMethod()
	}
Done
	Quit
Trap
	Set $ZT = ""
	Do ..%SetBackgroundMethodStatus($ZE)
	GoTo Done
]]></Implementation>
</Method>

<Method name="DoConfigure">
<Description><![CDATA[
Load current settings into Configure form.]]></Description>
<ClassMethod>1</ClassMethod>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tSC = ##class(Ens.Archive.Manager).GetArchiveParameters(.pNamespace, .pClassname, .pDaysToArchive)	
	If $$$ISOK(tSC) {
		&js<zenPage.getComponentById("cmbNamespace").setValue("#($ZCVT(pNamespace,"O","JS"))#");>
		&js<zenPage.getComponentById("txtClassname").setValue("#($ZCVT(pClassname,"O","JS"))#");>
		&js<zenPage.getComponentById("txtDays").setValue("#($ZCVT(pDaysToArchive,"O","JS"))#");>
	}
	Quit
]]></Implementation>
</Method>

<Method name="DrawCurrent">
<Description><![CDATA[
Draw Current parameters]]></Description>
<FormalSpec>seed:%ZEN.Datatype.string</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	Set btnEdit = $$$TextHTML("Edit")
	Set tSC = ##class(Ens.Archive.Manager).GetArchiveParameters(.pNamespace, .pClassname, .pDaysToArchive)
	If $$$ISOK(tSC) {
		#; If any of the parameters is not set then disable the "Do Archive" button
		If pNamespace=""!(pClassname="")!(pDaysToArchive="") Set ..%GetComponentById("btnArchive").disabled = 1
	}
	Set tTitle = $$$FormatText($$$Text("Archive settings for namespace %1:"),$zu(5))

	&html<
	<table class="fieldStyle"><tr><td nowrap>#(tTitle)#</td><td nowrap><input type="button" value="#(btnEdit)#" onclick="zenPage.editSetting();"></td></tr></table>

	<table class="DetailTable" border="0" cellspacing="5" cellpadding="0">
	<tr><th>#($$$TextHTML("Name"))#</th><th>#($$$TextHTML("Value"))#</th></th>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#($$$TextHTML("Archive to namespace"))#:</td><td class="DetailValue" >#($ZCVT(pNamespace,"O","HTML"))#</td></tr>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#($$$TextHTML("Archive manager class name"))#:</td><td class="DetailValue" >#($ZCVT(pClassname,"O","HTML"))#</td></tr>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#($$$TextHTML("Number of days before archiving"))#:</td><td class="DetailValue" >#(pDaysToArchive)#</td></tr>
	</table>>
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawStatus">
<Description><![CDATA[
Draw current archive status]]></Description>
<FormalSpec>seed:%ZEN.Datatype.string</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	Set tTitle = %page.lblHistory //$$$TextHTML("Archive history")
	Set tStatusTrans("idle") = $$$Text("idle")
	Set tStatusTrans("running") = $$$Text("running")
	Set RunningStartTime = ##class(Ens.Archive.Manager).GetRunningStartTime()
	Set RunningStopTime = ##class(Ens.Archive.Manager).GetRunningStopTime()	
	Set RunningStatus = ##class(Ens.Archive.Manager).GetRunningStatus()
	Set RunningPercentage = ##class(Ens.Archive.Manager).GetRunningPercentage()
	#; total-processed, total-archived, total-header-deleted, total-body-deleted
	Set RunningCount = ##class(Ens.Archive.Manager).GetRunningCount()
	Set tTotal("Processed") = $P(RunningCount,",",1)
	Set tTotal("Archived") = $P(RunningCount,",",2)
	Set tTotal("DeletedHead") = $P(RunningCount,",",3)
	Set tTotal("DeletedBody") = $P(RunningCount,",",4)
	Set tTotal("NumberErrors") = $P(RunningCount,",",5)
	
	If RunningStartTime = "" {
		Set RunningStartTime = %page.lblHistoryNone	//$$$TextHTML("No history found")
	} Else {
		Set RunningStatus = tStatusTrans(RunningStatus)
		If RunningPercentage '= "" {
			Set tTotal("Processed") = tTotal("Processed") _ " - "_$$$FormatText($$$Text("%1% finished"),RunningPercentage)
		}
	}  	
	Set pMsg = ..GetBackgroundMethodStatus()
	If pMsg '= "" Set RunningStatus = pMsg

	&html<
	<table class="fieldStyle"><tr><td>#(%page.lblHistory)#:</td><td align="right"></td></tr></table>
	<table class="DetailTable" border="0" cellspacing="5" cellpadding="0">
	<tr class="EvenRow"><td class="DetailValue" nowrap>#(%page.lblStartTime)#</td><td class="DetailValue" >#($ZCVT(RunningStartTime,"O","HTML"))#</td></tr>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#(%page.lblStopTime)#</td><td class="DetailValue" >#($ZCVT(RunningStopTime,"O","HTML"))#</td></tr>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#(%page.lblTotalProcessed)#</td><td class="DetailValue" >#(tTotal("Processed"))#</td></tr>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#(%page.lblTotalArchived)#</td><td class="DetailValue" >#(tTotal("Archived"))#</td></tr>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#(%page.lblTotalDeletedHead)#</td><td class="DetailValue" >#(tTotal("DeletedHead"))#</td></tr>
	<tr class="EvenRow"><td class="DetailValue" nowrap>#(%page.lblTotalDeletedBody)#</td><td class="DetailValue" nowrap>#(tTotal("DeletedBody"))#</td></tr>
	>

	If tTotal("NumberErrors") > 0 {
		Set lblShowErrors = $$$TextHTML("show/hide error log")
		&html<<tr class="EvenRow"><td class="DetailValue" >#(%page.lblNumberErrors)#</td>
		<td class="DetailValue" nowrap >#(tTotal("NumberErrors"))#
		&nbsp;&nbsp;<a onclick="javascript:zenPage.showErrors();" onmouseover="this.oldcolor=this.style.color; this.style.color='red';this.style.cursor='pointer';" onmouseout="this.style.color=this.oldcolor;this.style.cursor='auto';" class='link'>#(lblShowErrors)#</a>
		</td></tr>>
	}
	&html<<tr class="EvenRow"><td class="DetailValue" nowrap>#(%page.lblStatus)#</td><td class="DetailValue" nowrap>#(RunningStatus)#</td></tr>>
	&html<</table>>
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawErrorTitle">
<Description><![CDATA[
Draw error log title]]></Description>
<FormalSpec>seed:%ZEN.Datatype.string</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	&html<
	<table class="fieldStyle"><tr><td>#(%page.lblErrorLog)#:</td><td align="right"></td></tr></table>
	>
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetArchiveStatus">
<Description><![CDATA[
This method gets current archive status and return proxyObject 
to javascript caller for the caller to update the UI.]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%ZEN.proxyObject</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	
	Set tProxy = ##class(%ZEN.proxyObject).%New()
	Set RunningStatus = ##class(Ens.Archive.Manager).GetRunningStatus()
		
	Set tProxy.Status = RunningStatus
	Set tProxy.DisableArchive = 0
	#; Load current values
	Set tSC = ##class(Ens.Archive.Manager).GetArchiveParameters(.pNamespace, .pClassname, .pDaysToArchive)
	If $$$ISOK(tSC) {
		#; If any of the parameters is not set then disable the "Do Archive" button
		If pNamespace=""!(pClassname="")!(pDaysToArchive="") Set tProxy.DisableArchive = 1
	}
	Quit tProxy
]]></Implementation>
</Method>

<Method name="onloadHandler">
<Description><![CDATA[
This client event, if present, is fired when the page is loaded.
Start the timer so we can check the status. If there is an archive currently running,
you will see continous update until job is finished.]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	var timer = zenPage.getComponentById('timer');	
	timer.setProperty('timeout',1000);
	timer.startTimer();
]]></Implementation>
</Method>

<Method name="doStatus">
<Description><![CDATA[
This method calls server method to get current archive status and update the UI.]]></Description>
<Language>javascript</Language>
<Implementation><![CDATA[
	var idStatus = zenPage.getComponentById('idStatus');
	idStatus.refreshContents();
	var btnArchive = this.getComponentById("btnArchive");
	var tProxy = zenPage.GetArchiveStatus();
	if (tProxy.DisableArchive == 1) {
		btnArchive.setProperty("disabled",true);
	} else {
		if (tProxy.Status == "running") btnArchive.setProperty("disabled",true);
		else btnArchive.setProperty("disabled",false);
		this.getComponentById("CurrentStatus").setValue(tProxy.Status);
	}
	return;
	/*

	if (tProxy.StartTime != "") {
		this.getComponentById("RunningStartTime").setValue(tProxy.RunningStartTime);
		this.getComponentById("RunningStopTime").setValue(tProxy.RunningStopTime);
	} 
	this.getComponentById("RunningStatus").setValue(tProxy.RunningStatus);	
	if (tProxy.Count != 0) { 
		this.getComponentById("RunningCount").setValue(tProxy.RunningCount);
	}
	if (tProxy.ErrorMessage != "") this.getComponentById("RunningStatus").setValue(tProxy.ErrorMessage);
	*/
]]></Implementation>
</Method>

<Method name="GetBackgroundMethodStatus">
<Description><![CDATA[
Get background method status.]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set pMsg = $G(^Ens.ArchiveManager("run","error"))
	If $E(pMsg,1,5) '= "ERROR" Set pMsg = ""
	Quit pMsg
]]></Implementation>
</Method>
</Class>
</Export>