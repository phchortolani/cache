<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.iBundleStock">
<Description><![CDATA[
Interface for Bundles]]></Description>
<Abstract>1</Abstract>
<ClassType/>
<IncludeCode>INConst,COMSYS,%occInclude</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>

<Method name="BundleSOH">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidItem:alINV.dItem,pidStorage:alLOC.dStorage,pidBundle:alSOH.dBundle</FormalSpec>
<ReturnType>alSYS.dt.dtFloat</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Given an Item, Storage and Bundle ID
	; Get the SOH
	;
	; Inputs :
	;	1. pobjItem		alINV.dItem
	;	2. pidStorage 	alLOC.dStorage
	;	3. pidBundle	alSOH.dBundle
	;
	; Returns
	;	Float Qty
	;
	; History:
	; 07-May-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	set fltQty = 0	
	set rs     = ##class(%ResultSet).%New()
	set strSQL = "SELECT QtyOnHand FROM alSOH.dBundleStock WHERE Item = ? AND Storage = ? AND Bundle = ?"

	set sc = rs.Prepare(strSQL)
	
	if $$$ISOK(sc) {
		set sc = rs.Execute(pidItem, pidStorage, pidBundle)
		
		if $$$ISOK(sc) {
			for {
				quit:'rs.Next()
				set fltQty = fltQty + rs.Data("QtyOnHand")			
			}
		}
	}
	quit fltQty
]]></Implementation>
</Method>

<Method name="GetTotalSOH">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidItem:alINV.dItem</FormalSpec>
<ReturnType>alSYS.dt.dtFloat</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Given an Item get the Total Company SOH
	;
	; Inputs :
	;	1. pobjItem		alINV.dItem
	;
	; Returns
	;	Float Qty
	;
	; History:
	; 28-May-2010	PPP		SR17296: Created
	;-------------------------------------------------------------------------------
	set fltQty = 0
	
	&SQL(
		SELECT Sum(QtyOnHand) 
		INTO :fltQty
		FROM alSOH.dBundleStock 
		WHERE Item = :pidItem
	)
	quit fltQty
]]></Implementation>
</Method>
</Class>
</Export>