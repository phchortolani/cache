<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARAgendaMedica">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetMedicos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set arrayRetorno 			= []

	Set meuSQL = "Select Prof.ID1, Prof.Name From SQLUser.MEDProvider As Prof "
	Set meuSQL = meuSQL _ "Where Prof.Company = 0 And Prof.Status = 1 "
	Set meuSQL = meuSQL _ "And (Select Count(Agen.Sequencia) "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgenda As Agen "
	Set meuSQL = meuSQL _ "Where Agen.Company = 0 And Agen.CodigoProfissional = Prof.ID1) > 0 "
	Set meuSQL = meuSQL _ "Order By Prof.Name"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Set listDados.codigo 	= rSet.%Get("ID1")	
		Set listDados.nome 		= rSet.%Get("Name")	
	
		Do arrayRetorno.%Push(listDados)
	}
	
	Do arrayRetorno.%ToJSON()	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDataCalendario">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set pData	= $Get(%request.Data("pData",1))
	
	Set mes = $Piece(pData,"/",2)
	Set ano = $Piece(pData,"/",3)
	Set mes = mes + 1
	If (mes = 13) Set mes = 1,ano=ano+1
	Set dataInicial = "1/"_mes_"/"_ano
	For i = 31 : -1 : 25 {
		if ($ZDateH(i_"/"_mes_"/"_ano,4,,,,,,,0) = 0) continue
		Set dataFinal 	= i_"/"_mes_"/"_ano
		Quit			
	}
	;
	Set listRetorno = {}
	Set listRetorno.dataInicial = $Piece(dataInicial,"/",3)_"-"_$Piece(dataInicial,"/",2)_"-"_$Piece(dataInicial,"/",1)	
	Set listRetorno.dataFinal 	= $Piece(dataFinal,"/",3)_"-"_$Piece(dataFinal,"/",2)_"-"_$Piece(dataFinal,"/",1)	
	;
	Do listRetorno.%ToJSON() 
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDataFormatada">
<ClassMethod>1</ClassMethod>
<FormalSpec>pData,pTipo=0</FormalSpec>
<Implementation><![CDATA[	If (pTipo = 0) Return $ZDateH(pData,3)
	If (pTipo = 1) Return $ZDate(pData,3)
	If (pTipo = 2) Return $ZDate(pData,10)
	If (pTipo = 3) {
		Return $Piece($ZDate(pData,4),"/",3)_"-"_+($Piece($ZDate(pData,4),"/",2)-1)_"-"_+$Piece($ZDate(pData,4),"/",1)
	}
	Return pData]]></Implementation>
</Method>

<Method name="ListarAgenda">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pDataInicio 			= $Get(%request.Data("pDataInicio",1))
	Set pTipoOrganizacao	= $Get(%request.Data("pTipoOrganizacao",1))
	Set pCodPaciente			= ""
	;
	If (pTipoOrganizacao = "P7") {
		Set xDataIniSemana = pDataInicio
		Set xDataFimSemana = xDataIniSemana + 7
	}ElseIf (pTipoOrganizacao = "DI") {
		Set xDataIniSemana = pDataInicio
		Set xDataFimSemana = pDataInicio
	}ElseIf (pTipoOrganizacao = "ME") {
		Set xDataIniSemana = pDataInicio - $ZDate(pDataInicio,10)
		Set xDataFimSemana = xDataIniSemana + 6
	}Else{
		Set xDataIniSemana = pDataInicio - $ZDate(pDataInicio,10)
		Set xDataFimSemana = xDataIniSemana + 6
	}
	;
	Set (menorTempoAtend, maiorTempoAtend, variacaoTempoAtend)	= 0
	Do ..GetTempoAtendimentoLista(pCodProfissional, xDataIniSemana, xDataFimSemana, pCodPaciente, 
																.menorTempoAtend, .maiorTempoAtend, .variacaoTempoAtend)
	;
	kill colunas
	Set meuSQL = "Select DatadeAtendimento, ReferenciaPai, "
	Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai) As Descricao, "
	Set meuSQL = meuSQL _ "$$GetTipoGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai) As Tipo "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario Where Company = 0 "
	Set meuSQL = meuSQL _ "And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
	Set meuSQL = meuSQL _ "Group By $$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai), "
	Set meuSQL = meuSQL _ "DatadeAtendimento Order By DatadeAtendimento, "
	Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai)"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set datadeAtendimento = rSet.%Get("DatadeAtendimento")
		Set descricao 				= rSet.%Get("Descricao")
		Set referenciaPai			= rSet.%Get("ReferenciaPai")
		Set tipo 							= $ZConvert(rSet.%Get("Tipo"),"U")
		Set sequencia 				= $Order(colunas("Seq", datadeAtendimento, ""),-1) + 1
		Set colunas("Seq", datadeAtendimento, sequencia) = descricao_Y_tipo_Y_referenciaPai
		Set colunas("Desc", datadeAtendimento, descricao) = sequencia
	}
	;
	Set listRetorno 	= {}
	Set arrayDados 		= []
	Set arraySummary	= []
	;
	If ('$Data(colunas)) {
		Set arrayColunas = []
		Set listColunas = {"dataField": "horadeAtendimento", "caption": "Hora", "alignment": "center", "minWidth": 500}
		Do arrayColunas.%Push(listColunas)
		Set listRetorno.Columns = arrayColunas
		Set listDados = {"horadeAtendimento": "Sem dados cadastrado"}
		Do arrayDados.%Push(listDados)
		Set listRetorno.Dados 	= arrayDados
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	;
	;Montar Columns - dxDataGrid
	Set arrayColunas = []
	Set listColunas = {"dataField": "horadeAtendimento", "caption": "Hora", "alignment": "center", "width": 50}
	Do arrayColunas.%Push(listColunas)
	Set ultimoDataField = ""
	For data = xDataIniSemana : 1 : xDataFimSemana{
		
		if (pTipoOrganizacao = "DI") {
			If (data '= pDataInicio) Continue	
		}
		
		If ($Data(colunas("Seq", data))) {
			Set sequencia = "", arrayCaption = []
			For {
				Set sequencia = $Order(colunas("Seq", data, sequencia))	
				Quit:sequencia=""
				Set listColunas = {}
				Set listColunas.dataField = $ZDate(data,4)_"C"_sequencia
				Set ultimoDataField				= $ZDate(data,4)_"C"_sequencia
				Set listColunas.caption		= $Piece(colunas("Seq", data, sequencia),Y,1) 
				Set listColunas.refPai		= $Piece(colunas("Seq", data, sequencia),Y,3) 
				Set listColunas.tipo			= $Piece(colunas("Seq", data, sequencia),Y,2) 
				Set listColunas.alignment = "center"
				Set listColunas.minWidth 	= 160
				Set listColunas.descosid 	= 0
				Set listColunas.dataAtual = +$Horolog
				Set listColunas.dataAgend = +data
				Set listColunas.descosid 	= 0
				Do arrayCaption.%Push(listColunas)
			}
			Set listColunas = {}
			Set listColunas.caption 	= $ZDate(data,4)
			Set listColunas.alignment	= "center"
			Set listColunas.tipo			= ""
			Set listColunas.refPai		= "" 
			Set listColunas.columns		= arrayCaption
			Set listColunas.dataAtual = +$Horolog
			Set listColunas.dataAgend = +data
			Set listColunas.descosid 	= 0
			Do arrayColunas.%Push(listColunas)
		}Else{
			Set listColunas = {}
			Set listColunas.descosid 	= 1
			Set listColunas.dataField = $ZDate(data,4)
			Set ultimoDataField				= $ZDate(data,4)
			Set listColunas.refPai		= ""
			Set listColunas.alignment = "center"
			Set listColunas.minWidth 	= 80
			Set listColunas.dataAtual = +$Horolog
			Set listColunas.dataAgend = +data
			Do arrayColunas.%Push(listColunas)
		}
	}
	;
	;Summary
	Set listSummary = {}
	Set listSummary.name					= "SelectedRowsSummary"
	Set listSummary.showInColumn	= ultimoDataField
	Set listSummary.displayFormat	= "Ocupação: {0}"
	Set listSummary.summaryType 	= "custom"
	Do arraySummary.%Push(listSummary)
	;
	Set (qtdeAgenda, qtdeAgendaReservado) = 0
	;
	For hora = menorTempoAtend : variacaoTempoAtend : maiorTempoAtend {
		Kill dados
		Set meuSQL = "Select DatadeAtendimento, Admissao, TempodeAtendimento, HoradeAtendimento, ReferenciaPai, "
		Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(CodigoProfissional, ReferenciaPai) As Descricao "
		Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario Where Company = 0 "
		Set meuSQL = meuSQL _ "And CodigoProfissional = '"_pCodProfissional_"' "
		Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
		Set meuSQL = meuSQL _ "And HoradeAtendimento = '"_hora_"' "
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
		While(rSet.%Next()){
			Set datadeAtendimento = rSet.%Get("DatadeAtendimento")
			Set horadeAtendimento = rSet.%Get("HoradeAtendimento")
			Set descricao 				= rSet.%Get("Descricao")
			Set numAdmissao				= rSet.%Get("Admissao")
			Set tempoAtentimento	= rSet.%Get("TempodeAtendimento")
			Set referenciaPai			= rSet.%Get("ReferenciaPai")
			Set sequencia					= colunas("Desc", datadeAtendimento, descricao)
			Set codUnidade = $$GetAgendaUnidade^VARSQL(pCodProfissional, referenciaPai)
			;
			Set backGround = "#d9ffd9"
			If (numAdmissao '= "") {
				Set backGround = "#ddedff"
			}	
			If ($Data(^MEDProviderAgendaAusencia(YM,pCodProfissional,datadeAtendimento))) {
				Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, datadeAtendimento, 1))
				If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
					Set backGround = "#ffcaca"
				}Else{
					If (horadeAtendimento >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
							(horadeAtendimento <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
						Set backGround = "#ffcaca"
					}
				}	
			}
			;
			If ($Data(^VARDiasUnidadeNaoFunciona(YM,codUnidade,datadeAtendimento,1))) {
				Set backGround = "#ffcaca"
			}
			Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
			Do GetAgendaIntervalo^VARSQL(pCodProfissional, referenciaPai)
			If (rHoraIntervaloIni '= "") {
				If (horadeAtendimento >= rHoraIntervaloIni && (horadeAtendimento <= rhoraIntervaloFim))	{
					Set backGround = "#ffcaca"											
				}
			}
			;
			If (backGround '= "#ffcaca") {
				Set qtdeAgenda = qtdeAgenda + 1
			}
			Set (codPaciente, nomePaciente, telefone, descProcedimento, dataHoraAdmissao) = ""
			Set flagIcone = 0
				;	flagIcone: 	0 - Sem Agendamento
			 	; 						1 - Com Agendamento
			 	;							2 - Com Agendamento e Admitido
			 	;							3 - Com Agendamento e Não Admitido
			If (numAdmissao '= "") {
				Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
				Set qtdeAgendaReservado = qtdeAgendaReservado + 1
				Set objMEDAdmission 		= $Get(^MEDAdmission(YM, numAdmissao, 1))
				Set codPaciente 				= $$$MEDAdmissionPatient(objMEDAdmission)
				Set nomePaciente 				= $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
				Set telefone 		 				= $$GetMEDPatientFone^VARSQL(codPaciente)
				Set xProcedimento 			= ""
				If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
					Set (xSequenciaAgendamento, xProcedimento) = ""
					Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
					Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
					If (xSequenciaAgendamento'="") {
						Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
						Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
						Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
					}	
				}
				Set descProcedimento = $Extract($$SQLGetDescricaoProduto^VARSQL(xProcedimento,1),1,25)
				If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
				Set xDataAtual = +$Horolog
				Set xHoraAtual = $Piece($Horolog,",",2) + 1200
				If (datadeAtendimento < xDataAtual) {
					If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
					If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
				}ElseIf (datadeAtendimento = xDataAtual) {
					If (numAdmissao '= "") Set flagIcone = 1
					If (horadeAtendimento > xHoraAtual) {
						If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
					}Else{
						If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
						If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
					}
				}Else{
					If (numAdmissao '= "") Set flagIcone = 1
				}
			}
			;
			If ($Data(^MEDProviderEncaixes(YM,10,pCodProfissional,rSet.%Get("DatadeAtendimento"),horadeAtendimento))){
				Set xCodAgendamento = $Order(^MEDProviderEncaixes(YM,10,pCodProfissional,rSet.%Get("DatadeAtendimento"),horadeAtendimento,pCodProfissional,"")) 
				Set dados(rSet.%Get("DatadeAtendimento"), sequencia, "E") = xCodAgendamento_Y_rSet.%Get("DatadeAtendimento")_Y_horadeAtendimento
			}
			;		
			Set dados(rSet.%Get("DatadeAtendimento"), sequencia) = numAdmissao_Y_nomePaciente_Y_telefone_Y_descProcedimento_Y_dataHoraAdmissao_Y_flagIcone_Y_rSet.%Get("DatadeAtendimento")_Y_codPaciente
			Set $Piece(dadosColSpan(rSet.%Get("DatadeAtendimento"), sequencia),Y,1) = tempoAtentimento\variacaoTempoAtend
			Set $Piece(dadosColSpan(rSet.%Get("DatadeAtendimento"), sequencia),Y,2) = backGround
		}
		;
		Set listDados = {}
		Set listDados.horadeAtendimento	= $ZTime(hora,2)
		For data = xDataIniSemana : 1 : xDataFimSemana{
			If ($Data(colunas("Seq", data))) {
				Set sequencia = ""
				For {
					Set sequencia = $Order(colunas("Seq", data, sequencia))	
					Quit:sequencia=""
					If ($Data(dados(data,sequencia))) {
						;
						Set meuSQL = "Select Restricao From SQLUser.MEDProviderAgendaRestricao "
						Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
						Set meuSQL = meuSQL _ "And (IndicadorTodasDatas = 1 Or Datas Like '%"_data_"%') "
						Set meuSQL = meuSQL _ "And (IndicadorTodasHoras = 1 Or Horas Like '%"_hora_"%') "
						Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
						Do rSet.%Next()
						Set tProcedimento = ""
						If (rSet.%ROWCOUNT '= 0) {
							Set xRestricao = rSet.%Get("Restricao")
							For count = 1 : 1 : $Length(xRestricao,",") {
								Set tProcedimento = tProcedimento _ 
																		$Select(tProcedimento="":"",1:", ") _
																		$$SQLGetDescricaoProduto^VARSQL($Piece(xRestricao,",",count),1)
							}
						}
						;
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia,dados(data, sequencia))
						Do listDados.%Set($ZDate(data,4)_"E"_sequencia,$Get(dados(data, sequencia,"E")))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"rowSpan",$Piece(dadosColSpan(data, sequencia),Y,1))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround",$Piece(dadosColSpan(data, sequencia),Y,2))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao",tProcedimento)
					}Else{
						If ($Data(dadosColSpan(data, sequencia))) {
							Set $Piece(dadosColSpan(data, sequencia),Y,1) = $Piece(dadosColSpan(data, sequencia),Y,1) - 1	
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"rowSpan",$Piece(dadosColSpan(data, sequencia),Y,1))
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround",$Piece(dadosColSpan(data, sequencia),Y,2))
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao","")
							If ($Piece(dadosColSpan(data, sequencia),Y,1) = 1) {
								Kill dadosColSpan(data, sequencia)
							}
						}Else{
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"data","")
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround","#ffffff")
							Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao","")
						}
					}
				}
			}Else{
				Do listDados.%Set($ZDate(data,4),"A")
				Do listDados.%Set($ZDate(data,4)_"rowSpan","1")
			}
		}
		Do arrayDados.%Push(listDados)
	}
	;
	Set percOcupacao = 0
	If (qtdeAgenda>0)	Set percOcupacao = $FNumber((qtdeAgendaReservado*100)/qtdeAgenda,"",0)
	;
	Set listRetorno.Columns 			= arrayColunas
	Set listRetorno.Dados 				= arrayDados
	Set listRetorno.Summary 			= arraySummary
	Set listRetorno.PercOcupacao	= percOcupacao
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetAgendaMes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set descMes						= "Janeiro;Fevereiro;Março;Abril;Maio;Junho;Julho;Agosto;Setembro;Outubro;Novembro;Dezembro"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pDataInicio 			= $ZDate($Get(%request.Data("pDataInicio",1)),4)
	Set dataInicial 			= $ZDateH("01/"_$Piece(pDataInicio,"/",2,3),4)	
	Set dataFinal 				= $$GetEndOfMonth^COMUtilDate(dataInicial)	
	Set mesAno 						= $Piece(descMes,";",+$Piece(pDataInicio,"/",2))_" de "_+$Piece(pDataInicio,"/",3) 

	Set meuSQL = "Select * From SQLUser.MEDProviderAgendaHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_(dataInicial-6)_"' And '"_(dataFinal+6)_"' "
	Set meuSQL = meuSQL _ "Order By DatadeAtendimento, HoradeAtendimento"

	Set totalAgenda = 0
	Set totalAgendado = 0
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		
		Set dataAtendimento = rSet.%Get("DatadeAtendimento")
		Set horaAtendimento = rSet.%Get("HoradeAtendimento")
		Set numAdmissao			= rSet.%Get("Admissao")
		set referenciaPai		= rSet.%Get("ReferenciaPai")
		Set codUnidade 			= $$GetAgendaUnidade^VARSQL(pCodProfissional, rSet.%Get("ReferenciaPai"))
		If ($Data(^MEDProviderAgendaAusencia(YM, pCodProfissional, dataAtendimento))) {
			Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, dataAtendimento, 1))
			If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Continue
			}Else{
				If (horaAtendimento >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
						(horaAtendimento <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
					Continue
				}
			}	
		}
		;
		Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
		Do GetAgendaIntervalo^VARSQL(pCodProfissional, referenciaPai)
		If (rHoraIntervaloIni '= "") {
			If (horaAtendimento >= rHoraIntervaloIni && (horaAtendimento <= rhoraIntervaloFim))	{
				Continue											
			}
		}
		;
		If ($Data(^VARDiasUnidadeNaoFunciona(YM, codUnidade, dataAtendimento, 1))) {
			Continue
		}

		If ('$Data(preparacao(dataAtendimento))) {
			Set preparacao(dataAtendimento) = ""
		}
		
		Set $Piece(preparacao(dataAtendimento),Y,1) = $Piece(preparacao(dataAtendimento),Y,1) + 1
		Set totalAgenda = totalAgenda + 1
		If (numAdmissao '= "") {
			Set totalAgendado = totalAgendado + 1
			Set $Piece(preparacao(dataAtendimento),Y,2) = $Piece(preparacao(dataAtendimento),Y,2) + 1
			Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
			Set xProcedimento 			= ""
			Set dataHoraAdmissao 	= ""
			If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
				Set (xSequenciaAgendamento, xProcedimento) = ""
				Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
				Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
				If (xSequenciaAgendamento'="") {
					Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
					Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
					Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
				}	
			}	
			If (dataHoraAdmissao'="") {
				Set $Piece(preparacao(dataAtendimento),Y,3) = $Piece(preparacao(dataAtendimento),Y,3) + 1
			}
		}
	}
	
	Set arrayRetorno = []
	
	Set primeiraData 	= dataInicial - $ZDate(dataInicial,10)
	Set ultimaData 		= dataFinal + (6 - $ZDate(dataFinal,10))
	
	For data = primeiraData : 1 : ultimaData {
		If ($ZDate(data,10) = 0) {
			Do:data'=primeiraData arrayRetorno.%Push(listDados)
			Set listDados = {}
		}
		Do listDados.%Set($ZDate(data,10), +$Piece($Get(preparacao(data)),Y,1))
		Do listDados.%Set($ZDate(data,10)_"Ag", +$Piece($Get(preparacao(data)),Y,2))
		Do listDados.%Set($ZDate(data,10)_"Ad", +$Piece($Get(preparacao(data)),Y,3))
		Do listDados.%Set($ZDate(data,10)_"DtI", data)
		Do listDados.%Set($ZDate(data,10)_"DtF", $ZDate(data,3))
		Do listDados.%Set($ZDate(data,10)_"Dt", $ZDate(data,4))
		If (data < dataInicial || (data > dataFinal)) {
			Do listDados.%Set($ZDate(data,10)_"Cor", "C")
		}Else{
			Do listDados.%Set($ZDate(data,10)_"Cor", "A")
			If (+$Piece($Get(preparacao(data)),Y,1) > 0) {
				Do listDados.%Set($ZDate(data,10)_"Cor", "V")
			}
		}
	}
	Do arrayRetorno.%Push(listDados)
	
	Set percOcupacao = 0
	If (totalAgenda>0)	Set percOcupacao = $FNumber((totalAgendado*100)/totalAgenda,"",0)

	Set listRetorno = {}
	Set listRetorno.dados = arrayRetorno
	Set listRetorno.percOcupacao = percOcupacao
	Set listRetorno.mesAno = mesAno
	
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetTempoAtendimentoLista">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProfissional,pDataInicio,pDataFim,pCodPaciente,*rMenorTempoAtend,*rMaiorTempoAtend,*rVariacaoTempoAtend</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 										= 0
	Set Y 										= "~"
	Set rMenorTempoAtend			= 0
	Set rMaiorTempoAtend			= 0
	Set rVariacaoTempoAtend		= 0
	;
	Set meuSQL($Increment(count)) = "Select AgH0.TempodeAtendimento, AgH0.ReferenciaPai," 
	Set meuSQL($Increment(count)) = "("
		Set meuSQL($Increment(count)) = "Select Min(AgH1.HoradeAtendimento) From SQLUser.MEDProviderAgendaHorario As AgH1"
		If (pCodPaciente '= "") {
			Set meuSQL($Increment(count)) = ", SQLUser.MEDAdmission As Ad1 "
		}
		Set meuSQL($Increment(count)) = "Where AgH1.Company = 0 And AgH1.CodigoProfissional = '"_pCodProfissional_"'"
		Set meuSQL($Increment(count)) = "And AgH1.DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFim_"'"
		If (pCodPaciente '= "") {
			Set meuSQL($Increment(count)) = "And Ad1.AdmissionID = AgH1.Admissao And Ad1.Patient = '"_pCodPaciente_"'"
		}
	Set meuSQL($Increment(count)) = ") As MinHoraAtendimento," 
	Set meuSQL($Increment(count)) = "("
		Set meuSQL($Increment(count)) = "Select Max(AgH2.HoradeAtendimento) From SQLUser.MEDProviderAgendaHorario As AgH2"
		If (pCodPaciente '= "") {
			Set meuSQL($Increment(count)) = ", SQLUser.MEDAdmission As Ad2 "
		}
		Set meuSQL($Increment(count)) = "Where AgH2.Company = 0 And AgH2.CodigoProfissional = '"_pCodProfissional_"'"
		Set meuSQL($Increment(count)) = "And AgH2.DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFim_"'"
		If (pCodPaciente '= "") {
			Set meuSQL($Increment(count)) = "And Ad2.AdmissionID = AgH2.Admissao And Ad2.Patient = '"_pCodPaciente_"'"
		}
	Set meuSQL($Increment(count)) = ") As MaxHoraAtendimento"
	Set meuSQL($Increment(count)) = "From SQLUser.MEDProviderAgendaHorario As AgH0"
	If (pCodPaciente '= "") {
		Set meuSQL($Increment(count)) = ", SQLUser.MEDAdmission As Ad "
	}
	Set meuSQL($Increment(count)) = "Where AgH0.Company = 0 And AgH0.CodigoProfissional = '"_pCodProfissional_"'"
	Set meuSQL($Increment(count)) = "And AgH0.DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFim_"'"
	If (pCodPaciente '= "") {
		Set meuSQL($Increment(count)) = "And Ad.AdmissionID = AgH0.Admissao And Ad.Patient = '"_pCodPaciente_"'"
	}
	Set meuSQL($Increment(count)) = "Group By AgH0.ReferenciaPai, AgH0.TempodeAtendimento Order BY AgH0.TempodeAtendimento"
	Set meuSQL 	= $Order(meuSQL(""),-1)
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		If (rMenorTempoAtend = 0 ||(rMenorTempoAtend > rSet.%Get("MinHoraAtendimento"))) {
			Set rMenorTempoAtend = +rSet.%Get("MinHoraAtendimento")
		}
		If (rMaiorTempoAtend < (rSet.%Get("MaxHoraAtendimento"))) {
			Set rMaiorTempoAtend = +rSet.%Get("MaxHoraAtendimento")
		}
		;If (rMaiorTempoAtend < (rSet.%Get("MaxHoraAtendimento")+rSet.%Get("TempodeAtendimento"))) {
		;	Set rMaiorTempoAtend = +rSet.%Get("MaxHoraAtendimento")+rSet.%Get("TempodeAtendimento")
		;}
		Set rVariacaoTempoAtend = 1800
	}
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodPaciente 			= $Get(%request.Data("pCodPaciente",1))
	Set pNumAdmissao 			= $Get(%request.Data("pNumAdmissao",1))
	
	Set objMEDPatientHistPassagem = $Get(^MEDPatientHistPassagem(YM, pCodPaciente, pNumAdmissao, 1))
	Set dtHrInicializacao = $$$MEDPatientHistPassagemCriadoEm(objMEDPatientHistPassagem)
	Set (minutos, segundos) = 0
	If (dtHrInicializacao '= "") {
		Set dtAtual = +$Horolog
		Set hrAtual = $Piece($Horolog,",",2)
		Set dtInicializacao = +dtHrInicializacao
		Set hrInicializacao = $Piece(dtHrInicializacao,",",2)
		If (dtAtual = dtInicializacao) {
			Set minutos 	= (hrAtual-hrInicializacao)\60
			Set segundos 	= (hrAtual-hrInicializacao)#60
		}
	}

	Set listRetorno = {}
	Set listRetorno.descricao 				= $$$MEDPatientHistPassagemDescricao(objMEDPatientHistPassagem)
	Set listRetorno.dtHrInicializacao	= dtHrInicializacao
	Set listRetorno.minutos						= minutos
	Set listRetorno.segundos					= segundos
	Set listRetorno.finalizado 				= $$$MEDPatientHistPassagemAlteradoEm(objMEDPatientHistPassagem)
	
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarHitorico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 						= 0
	Set Y 						= "~"
	Set YBED					= $Get(%request.Data("YBED",1))
	Set pCodPaciente 	= $Get(%request.Data("pCodPaciente",1))
	Set pNumAdmissao 	= $Get(%request.Data("pNumAdmissao",1))
	
	Set arrayRetorno = []

	Set meuSQL = "Select * From SQLUSer.MEDPatientHistPassagem "
	Set meuSQL = meuSQL _ "Where Company = 0 And Paciente = '"_pCodPaciente_"' "
	Set meuSQL = meuSQL _ "Order By CriadoEm Desc"

	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set numAdmissao = rSet.%Get("Admissao")
		If (pNumAdmissao = numAdmissao) Continue	
		Set xNumAdmissao =  $Replace(numAdmissao,"/"," ")
		Set xProcedimento = "", descProcedimento = ""
		If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
			Set (xSequenciaAgendamento, xProcedimento) = ""
			Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
			Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
			If (xSequenciaAgendamento'="") {
				Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
				Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
			}	
		}
		Set descProcedimento = $Extract($$SQLGetDescricaoProduto^VARSQL(xProcedimento,1),1,25)
		
		Set tempoAtendimento = ""
		Set criadoEm 		= rSet.%Get("CriadoEm")
		Set alteradoEm 	= rSet.%Get("AlteradoEm")
		If (criadoEm '= "" && alteradoEm '= "") {
			Set dtFinalizacao 	= +alteradoEm
			Set hrFinalizacao 	= $Piece(alteradoEm,",",2)
			Set dtInicializacao = +criadoEm
			Set hrInicializacao = $Piece(criadoEm,",",2)
			If (dtFinalizacao = dtInicializacao) {
				Set tempoAtendimento 	= ((hrFinalizacao-hrInicializacao)\60)_"m "
				Set tempoAtendimento 	= tempoAtendimento_((hrFinalizacao-hrInicializacao)#60)_"s"
			}Else{
				Set tempoAtendimento 	= 86400-hrInicializacao
				For data = (dtInicializacao+1) : 1 : (dtFinalizacao-1) {
					Set tempoAtendimento 	= tempoAtendimento + 86400	
				}
				Set tempoAtendimento 	= tempoAtendimento + hrFinalizacao					
				Set xTempoAtendimento 	= (tempoAtendimento\60)_"m "
				Set xTempoAtendimento 	= xTempoAtendimento_(tempoAtendimento#60)_"s"
				Set tempoAtendimento = xTempoAtendimento
			}
		}
		
		Set listDados = {}
		Set listDados.dataHora 					= $ZDateTime(rSet.%Get("CriadoEm"),4,2)	
		Set listDados.tipoConsulta 			= descProcedimento
		Set listDados.descricao					= rSet.%Get("Descricao")
		Set listDados.tempoAtendimento 	= tempoAtendimento
		Do arrayRetorno.%Push(listDados)
	}

	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="InicializaHitorico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 						= 0
	Set Y 						= "~"
	Set YBED					= $Get(%request.Data("YBED",1))
	Set pCodPaciente 	= $Get(%request.Data("pCodPaciente",1))
	Set pNumAdmissao 	= $Get(%request.Data("pNumAdmissao",1))
	
	Set objMEDPatientHistPassagem = $Get(^MEDPatientHistPassagem(YM, pCodPaciente, pNumAdmissao, 1))
	Set $$$MEDPatientHistPassagemCriadoEm(objMEDPatientHistPassagem) 	= $Horolog
	Set $$$MEDPatientHistPassagemCriadoPor(objMEDPatientHistPassagem) = YBED

	Write $$$Save("MEDPatientHistPassagem", pCodPaciente_$$$COMMA_pNumAdmissao, objMEDPatientHistPassagem, $$$YES)
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarHitorico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 						= 0
	Set Y 						= "~"
	Set YBED					= $Get(%request.Data("YBED",1))
	Set pCodPaciente 	= $Get(%request.Data("pCodPaciente",1))
	Set pNumAdmissao 	= $Get(%request.Data("pNumAdmissao",1))
	Set pDescricao 		= $Get(%request.Data("pDescricao",1))
	
	Set objMEDPatientHistPassagem = $Get(^MEDPatientHistPassagem(YM, pCodPaciente, pNumAdmissao, 1))
	Set $$$MEDPatientHistPassagemDescricao(objMEDPatientHistPassagem) = pDescricao
	If ($$$MEDPatientHistPassagemCriadoEm(objMEDPatientHistPassagem) = "") { 
		Set $$$MEDPatientHistPassagemCriadoEm(objMEDPatientHistPassagem) 	= $Horolog
		Set $$$MEDPatientHistPassagemCriadoPor(objMEDPatientHistPassagem) = YBED
	}Else{
		Set $$$MEDPatientHistPassagemAlteradoEm(objMEDPatientHistPassagem) 	= $Horolog
		Set $$$MEDPatientHistPassagemAlteradoPor(objMEDPatientHistPassagem) = YBED
	}
	Write $$$Save("MEDPatientHistPassagem", pCodPaciente_$$$COMMA_pNumAdmissao, objMEDPatientHistPassagem, $$$YES)
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetEncaixe">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProfissional,pObjeto</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 						= 0
	Set Y 						= "~"

	Set codEncaixe			= $Piece(pObjeto,Y,1)
	Set dataAtendimento	= $Piece(pObjeto,Y,2)
	Set horaAtendimento = $Piece(pObjeto,Y,3)

	Set objMEDProviderEncaixe = $Get(^MEDProviderEncaixe(YM,pCodProfissional,codEncaixe,dataAtendimento,horaAtendimento,1))
	Set codAgendamento = $$$MEDProviderEncaixeAgendamento(objMEDProviderEncaixe)
	
	Set objVARAgendamento = $Get(^VARAgendamento(YM,codAgendamento,1))
	
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARAgendamentoProcedimentos(YM,codAgendamento,sequencia))
		Quit:sequencia=""
		
		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM,codAgendamento,sequencia,1))
		If ($$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) = dataAtendimento &&
			 ($$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) = horaAtendimento)) 
		{		 
			Quit	
		}
	}
	
	If (sequencia = "") Return ""
	
	Set numAdmissao 			= $$$VARAgendamentoProcedimentosAdmissao(objVARAgendamentoProcedimentos)
	Set codProcedimento 	= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
	Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)	

	Set codPaciente	 = $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
	Set nomePaciente = $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
	Set telefone 		 = $$GetMEDPatientFone^VARSQL(codPaciente)
	
	Set flagIcone = 0
		;	flagIcone: 	0 - Sem Agendamento
	 	; 						1 - Com Agendamento
	 	;							2 - Com Agendamento e Admitido
	 	;							3 - Com Agendamento e Não Admitido
	Set descProcedimento = $Extract($$SQLGetDescricaoProduto^VARSQL(codProcedimento,1),1,25)
	If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
	Set xDataAtual = +$Horolog
	Set xHoraAtual = $Piece($Horolog,",",2) + 1200
	If (dataAtendimento < xDataAtual) {
		If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
		If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
	}ElseIf (dataAtendimento = xDataAtual) {
		If (numAdmissao '= "") Set flagIcone = 1
		If (horaAtendimento > xHoraAtual) {
			If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
		}Else{
			If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
			If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
		}
	}Else{
		If (numAdmissao '= "") Set flagIcone = 1
	}
	Return numAdmissao_Y_nomePaciente_Y_telefone_Y_descProcedimento_Y_dataHoraAdmissao_Y_flagIcone_Y_dataAtendimento_Y_codPaciente]]></Implementation>
</Method>

<Method name="ListarAgendaScheduler">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pDataInicio 			= $Get(%request.Data("pDataInicio",1))
	Set pTipoOrganizacao	= $Get(%request.Data("pTipoOrganizacao",1))
	Set pCodPaciente			= $Get(%request.Data("pCodPaciente",1))
	;
	;
	If (pTipoOrganizacao = "P7") {
		Set xDataIniSemana = pDataInicio
		Set xDataFimSemana = xDataIniSemana + 7
	}ElseIf (pTipoOrganizacao = "DI") {
		Set xDataIniSemana = pDataInicio
		Set xDataFimSemana = pDataInicio
	}Else{
		Set xDataIniSemana = pDataInicio - $ZDate(pDataInicio,10)
		Set xDataFimSemana = xDataIniSemana + 6
	}
	;
	Set (menorTempoAtend, maiorTempoAtend, variacaoTempoAtend)	= 0
	Do ..GetTempoAtendimentoLista(pCodProfissional, xDataIniSemana, xDataFimSemana, pCodPaciente, 
																.menorTempoAtend, .maiorTempoAtend, .variacaoTempoAtend)
	Set listRetorno 	= {}
	Set listRetorno.menorTempoAtend	= $Piece($ZTime(menorTempoAtend,2),":",1)
	Set listRetorno.maiorTempoAtend	= $Select(
																			$Piece($ZTime(maiorTempoAtend,2),":",2) > 0
																			: 
																				($Piece($ZTime(maiorTempoAtend,2),":",1) + 1) 
																			,1: 
																				$Piece($ZTime(maiorTempoAtend,2),":",1)
																		)
	Set arrayDados = []
	Set (percOcupacao, qtdeAgendaReservado, qtdeAgenda) = 0

	Set grupo = "", countGrupo = 0
	Set meuSQL = "Select AgH.DatadeAtendimento, AgH.Admissao, AgH.TempodeAtendimento, AgH.HoradeAtendimento, AgH.ReferenciaPai, "
	Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamentoViaAgenda^VARSQL(AgH.CodigoProfissional, AgH.ReferenciaPai) As Descricao "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As AgH "
	If (pCodPaciente '= "") {
		Set meuSQL = meuSQL _ ", SQLUser.MEDAdmission As Ad "
	}	
	Set meuSQL = meuSQL _ "Where AgH.Company = 0 "
	If (pCodPaciente '= "") {
		Set meuSQL = meuSQL _ "And Ad.Company = 0 "
	}	
	Set meuSQL = meuSQL _ "And AgH.CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And AgH.DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
	If (pCodPaciente '= "") {
		Set meuSQL = meuSQL _ "And Ad.AdmissionID = AgH.Admissao "
		Set meuSQL = meuSQL _ "And Ad.Patient = '"_pCodPaciente_"' "
	}
	Set meuSQL = meuSQL _ "Order By AgH.DatadeAtendimento, AgH.HoradeAtendimento "
	
	;w meuSQL
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set dataAtendimento 	= $ZDate(rSet.%Get("DatadeAtendimento"),4)
		Set horaIniAtend 			= $ZTime(rSet.%Get("HoradeAtendimento"),2)
		Set xDataAtendimento 	= rSet.%Get("DatadeAtendimento")
		Set xHoraIniAtend 		= rSet.%Get("HoradeAtendimento")
		Set tempoAtendimento	= rSet.%Get("TempodeAtendimento")
		Set numAdmissao				= rSet.%Get("Admissao")
		Set descGrpAgend			= rSet.%Get("Descricao")
		Set codUnidade 				= $$GetAgendaUnidade^VARSQL(pCodProfissional, rSet.%Get("ReferenciaPai"))
		Set horaFimAtend 			= $ZTime(rSet.%Get("HoradeAtendimento") + tempoAtendimento,2)
		Set referenciaPai			= rSet.%Get("ReferenciaPai")
		Set qtdeAgenda 				= qtdeAgenda + 1
		;
		If '$Data(grupo(descGrpAgend)) {
			Set countGrupo = countGrupo + 1
			Set grupo(descGrpAgend) = countGrupo
		}Else{
			Set countGrupo = grupo(descGrpAgend)
		}
		
		Set xCountGrupo = countGrupo_"L", descAusencia = ""											
		If (numAdmissao '= "") Set xCountGrupo = countGrupo_"A"
		If ($Data(^MEDProviderAgendaAusencia(YM,pCodProfissional,xDataAtendimento))) {
			Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, xDataAtendimento, 1))
			If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Set descAusencia = $$$MEDProviderAgendaAusenciaDescricao(xObjeto)
				Set xCountGrupo = countGrupo_"E"											
			}Else{
				If (xHoraIniAtend >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
						(xHoraIniAtend <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
					Set descAusencia = $$$MEDProviderAgendaAusenciaDescricao(xObjeto)
					Set xCountGrupo = countGrupo_"E"											
				}
			}	
		}
		Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
		Do GetAgendaIntervalo^VARSQL(pCodProfissional, referenciaPai)
		If (rHoraIntervaloIni '= "") {
			If (xHoraIniAtend >= rHoraIntervaloIni && (xHoraIniAtend <= rhoraIntervaloFim))	{
				Set descAusencia = "Intervalo"
				Set xCountGrupo = countGrupo_"E"											
			}
		}
		If ($Data(^VARDiasUnidadeNaoFunciona(YM,codUnidade,xDataAtendimento,1))) {
			Set xCountGrupo = countGrupo_"E"
		}
		Set (codPaciente, nomePaciente, telefone, descProcedimento, dataHoraAdmissao) = ""
		Set flagIcone = 0
			;	flagIcone: 	0 - Sem Agendamento
		 	; 						1 - Com Agendamento
		 	;							2 - Com Agendamento e Admitido
		 	;							3 - Com Agendamento e Não Admitido
		If (numAdmissao '= "") {
			Set qtdeAgendaReservado = qtdeAgendaReservado + 1
			Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
			Set objMEDAdmission 		= $Get(^MEDAdmission(YM, numAdmissao, 1))
			Set codPaciente 				= $$$MEDAdmissionPatient(objMEDAdmission)
			Set nomePaciente 				= $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
			Set telefone 		 				= $$GetMEDPatientFone^VARSQL(codPaciente)
			Set xProcedimento 			= ""
			If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
				Set (xSequenciaAgendamento, xProcedimento) = ""
				Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
				Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
				If (xSequenciaAgendamento'="") {
					Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
					Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
					Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
				}	
			}
			Set descProcedimento = $Extract($$SQLGetDescricaoProduto^VARSQL(xProcedimento,1),1,25)
			If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
			Set xDataAtual = +$Horolog
			Set xHoraAtual = $Piece($Horolog,",",2) + 1200
			If (xDataAtendimento < xDataAtual) {
				If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
				If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
			}ElseIf (xDataAtendimento = xDataAtual) {
				If (numAdmissao '= "") Set flagIcone = 1
				If (xHoraIniAtend > xHoraAtual) {
					If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
				}Else{
					If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
					If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
				}
			}Else{
				If (numAdmissao '= "") Set flagIcone = 1
			}
		}
		;
		If ($Data(^MEDProviderEncaixes(YM,10,pCodProfissional,xDataAtendimento,xHoraIniAtend))){
			Set listDados = {}
			Set listDados.descGrpAgend 		= $ZConvert(descGrpAgend,"W")
			Set listDados.numAdmissao 		= numAdmissao
			If (descAusencia '= "") {
				Set listDados.text 					= descAusencia
			}
			If (nomePaciente '= "") {
				Set listDados.text 					= nomePaciente_" - "_telefone
			}			
			Set listDados.dataAtendimento = xDataAtendimento
			Set listDados.codPaciente			= codPaciente
			Set listDados.nomePaciente		= $ZConvert(nomePaciente,"W")
			Set listDados.telefone				= telefone
			Set listDados.descProcedimento= $ZConvert(descProcedimento,"W")
			Set listDados.dataHoraAdmissao= dataHoraAdmissao
			Set listDados.flagIcone				= flagIcone
			Set listDados.Ano							= +$Piece(dataAtendimento,"/",3)
			Set listDados.Mes							= +$Piece(dataAtendimento,"/",2) - 1
			Set listDados.Dia							= +$Piece(dataAtendimento,"/",1)
			Set listDados.iHr							= +$Piece(horaIniAtend,":",1)
			Set listDados.iMin						= +$Piece(horaIniAtend,":",2)
			Set horaFimAtend 							= $ZTime(xHoraIniAtend + (tempoAtendimento\2),2)
			Set listDados.fHr							= +$Piece(horaFimAtend,":",1)
			Set listDados.fMin						= +$Piece(horaFimAtend,":",2)
			Set listDados.idGrupo 				= xCountGrupo
			Set listDados.encaixe 				= 0
			Do arrayDados.%Push(listDados)
			
			Set xCodGrupoAgend 	= $Order(^MEDProviderEncaixes(YM,10,pCodProfissional,xDataAtendimento,xHoraIniAtend,pCodProfissional,"")) 
			Set xCodAgendament 	= $Piece(^MEDProviderEncaixe(0, pCodProfissional, xCodGrupoAgend, xDataAtendimento, xHoraIniAtend, 1),Y,2)
			Set xSequencia 			= ""
			For { 
				Set xSequencia = $Order(^VARAgendamentoProcedimentos(YM, xCodAgendament, xSequencia))
				Quit:xSequencia=""
				
				Set xObjAgedProced = $Get(^VARAgendamentoProcedimentos(YM, xCodAgendament, xSequencia, 1))
				
				If ($$$VARAgendamentoProcedimentosDataAtendimento(xObjAgedProced) = xDataAtendimento &&
					 ($$$VARAgendamentoProcedimentosHoraAtendimento(xObjAgedProced) = xHoraIniAtend)) {
					Set numAdmissao = $$$VARAgendamentoProcedimentosAdmissao(xObjAgedProced)		 
			 	}
			}
			Set qtdeAgendaReservado = qtdeAgendaReservado + 1
			Set (codPaciente, nomePaciente, telefone, descProcedimento, dataHoraAdmissao) = ""
			Set flagIcone = 0
				;	flagIcone: 	0 - Sem Agendamento
		 		; 						1 - Com Agendamento
		 		;							2 - Com Agendamento e Admitido
		 		;							3 - Com Agendamento e Não Admitido
			If (numAdmissao '= "") {
				Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
				Set objMEDAdmission 		= $Get(^MEDAdmission(YM, numAdmissao, 1))
				Set codPaciente 				= $$$MEDAdmissionPatient(objMEDAdmission)
				Set nomePaciente 				= codPaciente
				Set nomePaciente 				= $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
				Set telefone 		 				= $$GetMEDPatientFone^VARSQL(codPaciente)
				Set xProcedimento 			= ""
				If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
					Set (xSequenciaAgendamento, xProcedimento) = ""
					Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
					Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
					If (xSequenciaAgendamento'="") {
						Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
						Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
						Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
					}	
				}
				Set descProcedimento = $Extract($$SQLGetDescricaoProduto^VARSQL(xProcedimento,1),1,25)
				If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
				Set xDataAtual = +$Horolog
				Set xHoraAtual = $Piece($Horolog,",",2) + 1200
				If (xDataAtendimento < xDataAtual) {
					If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
					If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
				}ElseIf (xDataAtendimento = xDataAtual) {
					If (numAdmissao '= "") Set flagIcone = 1
					If (xHoraIniAtend > xHoraAtual) {
						If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
					}Else{
						If (numAdmissao '= "" && (dataHoraAdmissao '= "")) Set flagIcone = 2
						If (numAdmissao '= "" && (dataHoraAdmissao = "")) Set flagIcone = 3
					}
				}Else{
					If (numAdmissao '= "") Set flagIcone = 1
				}
			}
			
			Set horaIniAtend 							= $ZTime(xHoraIniAtend + (tempoAtendimento \ 2),2)
			Set horaFimAtend 							= $ZTime(xHoraIniAtend + tempoAtendimento,2)
			Set listDados = {}
			If (descAusencia '= "") {
				Set listDados.text 					= descAusencia
			}
			If (nomePaciente '= "") {
				Set listDados.text 					= nomePaciente_" - "_telefone
			}			
			Set listDados.descGrpAgend 		= $ZConvert(descGrpAgend,"W")
			Set listDados.numAdmissao 		= numAdmissao
			Set listDados.dataAtendimento = xDataAtendimento
			Set listDados.codPaciente			= codPaciente
			Set listDados.nomePaciente		= $ZConvert(nomePaciente,"W")
			Set listDados.telefone				= telefone
			Set listDados.descProcedimento= $ZConvert(descProcedimento,"W")
			Set listDados.dataHoraAdmissao= dataHoraAdmissao
			Set listDados.flagIcone				= flagIcone
			Set listDados.Ano							= +$Piece(dataAtendimento,"/",3)
			Set listDados.Mes							= +$Piece(dataAtendimento,"/",2) - 1
			Set listDados.Dia							= +$Piece(dataAtendimento,"/",1)
			Set listDados.iHr							= +$Piece(horaIniAtend,":",1)
			Set listDados.iMin						= +$Piece(horaIniAtend,":",2)
			Set listDados.fHr							= +$Piece(horaFimAtend,":",1)
			Set listDados.fMin						= +$Piece(horaFimAtend,":",2)
			Set listDados.idGrupo 				= xCountGrupo
			Set listDados.encaixe 				= 1
		}Else{
			Set listDados = {}
			Set listDados.descGrpAgend 		= $ZConvert(descGrpAgend,"W")_"<br>"_$$GetDescSalasProfissional^VARSQL(pCodProfissional, xDataAtendimento, xHoraIniAtend )
			Set listDados.numAdmissao 		= numAdmissao
			If (descAusencia '= "") {
				Set listDados.text 					= descAusencia
			}
			If (nomePaciente '= "") {
				Set listDados.text 					= nomePaciente_" - "_telefone
			}			
			Set listDados.dataAtendimento = xDataAtendimento
			Set listDados.codPaciente			= codPaciente
			Set listDados.nomePaciente		= $ZConvert(nomePaciente,"W")
			Set listDados.telefone				= telefone
			Set listDados.descProcedimento= $ZConvert(descProcedimento,"W")
			Set listDados.dataHoraAdmissao= dataHoraAdmissao
			Set listDados.flagIcone				= flagIcone
			Set listDados.Ano							= +$Piece(dataAtendimento,"/",3)
			Set listDados.Mes							= +$Piece(dataAtendimento,"/",2) - 1
			Set listDados.Dia							= +$Piece(dataAtendimento,"/",1)
			Set listDados.iHr							= +$Piece(horaIniAtend,":",1)
			Set listDados.iMin						= +$Piece(horaIniAtend,":",2)
			Set listDados.fHr							= +$Piece(horaFimAtend,":",1)
			Set listDados.fMin						= +$Piece(horaFimAtend,":",2)
			Set listDados.idGrupo 				= xCountGrupo
			Set listDados.encaixe 				= 0
		}
		Do arrayDados.%Push(listDados)
	}
	Set arrayGrupo = []
	Set descGrpAgend = ""
	For {
		Set descGrpAgend = $Order(grupo(descGrpAgend))
		Quit:descGrpAgend=""
		Set countGrupo = grupo(descGrpAgend)
		
		Set listDados = {}
		Set listDados.text	= descGrpAgend
		Set listDados.id		= countGrupo_"L"	;Livre
		Set listDados.color	= "#A9C8DE"
		Do arrayGrupo.%Push(listDados)	

		Set listDados = {}
		Set listDados.text	= descGrpAgend
		Set listDados.id		= countGrupo_"A"	;Agendado
		Set listDados.color	= "#C4FFC4"
		Do arrayGrupo.%Push(listDados)	

		Set listDados = {}
		Set listDados.text	= descGrpAgend
		Set listDados.id		= countGrupo_"E"	;Ausencia
		Set listDados.color	= "#ffcaca"
		Do arrayGrupo.%Push(listDados)	
	}

	If (qtdeAgenda>0)	Set percOcupacao = $FNumber((qtdeAgendaReservado*100)/qtdeAgenda,"",0)
	Set listRetorno.percOcupacao = percOcupacao
	Set listRetorno.Dados 		= arrayDados
	Set listRetorno.meuSQL		= meuSQL 
	Set listRetorno.Resources = arrayGrupo
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarResumo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 								= 0
	Set Y 								= "~"
	Set YBED							= $Get(%request.Data("YBED",1))
	Set pDataInicio 			= $Get(%request.Data("pDataInicio",1))
	Set pTipoOrganizacao	= $Get(%request.Data("pTipoOrganizacao",1))
	;
	If (pTipoOrganizacao = "DI") {
		Set xDataIniSemana = pDataInicio
		Set xDataFimSemana = pDataInicio
	}Else{
		Set xDataIniSemana = pDataInicio - $ZDate(pDataInicio,10)
		Set xDataFimSemana = xDataIniSemana + 6
	}
	;
	Set listRetorno = {}
	Set menorHoraAt	= ""
	Set maiorHoraAt	= ""
	Set arrayDados	= []
	Set count				= 0
	;
	Set meuSQL = "Select Hor.DatadeAtendimento, Min(Hor.HoradeAtendimento) As IniAtendimento, "
	Set meuSQL = meuSQL _ "Max(Hor.HoradeAtendimento+Hor.TempodeAtendimento) As FinAtendimento, "
	Set meuSQL = meuSQL _ "Age.Unidade, Age.Local1, Age.GrupoAgendamento, Hor.CodigoProfissional, "
	Set meuSQL = meuSQL _ "Count(*) As Total "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As Hor, SQLUser.MEDProviderAgenda As Age "
	Set meuSQL = meuSQL _ "Where Hor.Company = 0 And Age.Company = 0 "
	Set meuSQL = meuSQL _ "And Age.CodigoProfissional = Hor.CodigoProfissional "
	Set meuSQL = meuSQL _ "And Age.Sequencia = Hor.ReferenciaPai "
	Set meuSQL = meuSQL _ "And %Internal(Hor.DatadeAtendimento) BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
	Set meuSQL = meuSQL _ "Group By Hor.DatadeAtendimento, Hor.CodigoProfissional, "
	Set meuSQL = meuSQL _ "Hor.ReferenciaPai, Hor.DatadeAtendimento"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set count 						= count + 1
		Set dtAtendimento 		= rSet.%Get("DatadeAtendimento")
		Set hrIniAtendimento 	= rSet.%Get("IniAtendimento")
		Set hrFinAtendimento 	= rSet.%Get("FinAtendimento")
		Set codUnidade 				= rSet.%Get("Unidade")
		Set codSala 					= rSet.%Get("Local1")
		Set codGrupoAgend 		= rSet.%Get("GrupoAgendamento")
		Set codProfissional		= rSet.%Get("CodigoProfissional")
		;
		If (menorHoraAt = "" || (menorHoraAt > hrIniAtendimento)) {
			Set menorHoraAt	= hrIniAtendimento
		}
		If (maiorHoraAt = "" || (maiorHoraAt < hrFinAtendimento)) {
			Set maiorHoraAt	= hrFinAtendimento
		}
		;
		Set listDados = {}
		Set listDados.descUnidade 			= $$SQLGetLocationName^VARSQL(codUnidade)
		Set listDados.descSala 					= $$GetDescSala^VARSQL(codSala)
		Set listDados.descProcedimento	= $$GetDescGrupoAgendamento^VARSQL(codGrupoAgend)
		Set listDados.nomeProfissional 	= $$SQLGetNomeMedico^VARSQL(codProfissional)
		Set listDados.Ano								= +$Piece($ZDate(dtAtendimento,4),"/",3)
		Set listDados.Mes								= +$Piece($ZDate(dtAtendimento,4),"/",2) - 1
		Set listDados.Dia								= +$Piece($ZDate(dtAtendimento,4),"/",1)
		Set listDados.hrIniAtendimento	= $ZTime(hrIniAtendimento,2)
		Set listDados.hrFinAtendimento	= $ZTime(hrFinAtendimento,2)
		Set listDados.iHr								= +$Piece($ZTime(hrIniAtendimento,2),":",1)
		Set listDados.iMin							= +$Piece($ZTime(hrIniAtendimento,2),":",2)
		Set listDados.fHr								= +$Piece($ZTime(hrFinAtendimento,2),":",1)
		Set listDados.fMin							= +$Piece($ZTime(hrFinAtendimento,2),":",2)
		If ($$GetTipoGrupoAgendamento^VARSQL(codGrupoAgend) = "CONSULTA") {
			Set listDados.idGrupo 					= "CO"
		}Else{
			Set listDados.idGrupo 					= "PR"
		}
		;
		Do arrayDados.%Push(listDados)
	}
	;
	Set arrayResources = []
	Set listResources = {"text":"Consulta","id":"CO","color":"#A9C8DE"}
	Do arrayResources.%Push(listResources)
	Set listResources = {"text":"Procedimento","id":"PR","color":"#C4FFC4"}
	Do arrayResources.%Push(listResources)
	;
	Set listRetorno.width					= (count * 260)
	Set listRetorno.startDayHour	= $Select(+$Piece($ZTime(menorHoraAt,2),":",1)>0:+$Piece($ZTime(menorHoraAt,2),":",1)-1,1:0)
	Set listRetorno.endDayHour		= $Select(+$Piece($ZTime(maiorHoraAt,2),":",1)<23:+$Piece($ZTime(maiorHoraAt,2),":",1)+1,1:23)
	Set listRetorno.resources			= arrayResources
	Set listRetorno.dados					= arrayDados
	;
	Do listRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>