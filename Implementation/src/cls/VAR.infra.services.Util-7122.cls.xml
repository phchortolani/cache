<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.services.Util">
<ClassType/>
<Import>VAR.infra.cache,VAR.infra.services,VAR.infra.util</Import>
<IncludeCode>VARLog,VARUtil</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="CreatePidFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrFileName:%String,pintPid:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set $ztrap = "exceptionCreatePidFile"
	set strStatus = $$$OK
	set file = ""
	set io = ""

	set pidDir = ##class(DirectoryFile).GetNamespaceSubdir("pid")
	if ('##class(DirectoryFile).Exists(pidDir)) {
		if ('##class(DirectoryFile).CreateDir(pidDir)) {
			quit $$$CUSTOMERROR("Error while trying to create directory '"_pidDir_"'")
		}
	}

	set fileName = pidDir_pstrFileName
	set file = fileName
	open file:("ERWAS"::):30
	if ('$test) {
		set file = ""

		quit $$$CUSTOMERROR("Error while openning file '"_fileName_"'")
	}

	set io = $io
	use file

	write pintPid

finallyCreatePidFile
	if ($length(io) > 0) use io

	if ($length(file) > 0) {
		close file
		set file = ""
	}

	quit strStatus

exceptionCreatePidFile
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyCreatePidFile]]></Implementation>
</Method>

<Method name="DeletePidFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrFileName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set $ztrap = "exceptionDeletePidFile"
	set strStatus = $$$OK

	set pidDir = ##class(DirectoryFile).GetNamespaceSubdir("pid")
	set fileName = pidDir_pstrFileName
	do ##class(DirectoryFile).DeleteFile(fileName)

finallyDeletePidFile
	quit strStatus

exceptionDeletePidFile
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyDeletePidFile]]></Implementation>
</Method>

<Method name="GetWeekNumberPerMonth">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrDate:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	if ($length(pstrDate) = 0) quit ""

	set intMonthDay = +$zdate(pstrDate, 2)

	set strOut = ($replace($extract($normalize(intMonthDay / 7, 1), 1), ".", "0")) + 1

	quit strOut]]></Implementation>
</Method>
</Class>
</Export>