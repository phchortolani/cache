<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.FATOrganizacao">
<ClassType/>
<IncludeCode>VARConst,INConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	#dim %request as %CSP.Request
	#dim %response as %CSP.Response
	quit:$$$ISERR(..validaSessao(1)) %response
	set job = %session.SessionId
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getCEP">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cep = $get(%request.Data("cep",1))
	set retorno = {}
	set retorno.achou = 0
	if cep'="",$data(^VARCEP(0,cep,1)){
		set obj = ^VARCEP(0,cep,1)
		set retorno.achou 			= 1
		set retorno.tipoLogradouro 	= $$$VARCEPTipodeLogradouro(obj)
		set retorno.logradouro		= $$$VARCEPLogradouro(obj)
		set retorno.bairro			= $$$VARCEPBairro(obj)
		set retorno.cidade			= $$$VARCEPCidade(obj)
		set retorno.uf				= $$$VARCEPUF(obj)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getINPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave = $get(%request.Data("chave",1))
	set retorno = []
	set codigo=""
	for{
		set codigo 	= $order(^INPARA(0,chave,"PT",codigo)) quit:codigo=""
		set obj 	= $get(^INPARA(0,chave,"PT",codigo,1)) 
		set linha = {}
		set linha.codigo = codigo
		set linha.descricao = $$$INPARAText(obj)
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="pesquisaOrganizacoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set contador = 0
	set select1 = "select CodigodaOrganizacao,Sigla,Nome,RazaoSocial,$$GetOrganizacaoPai^VARSQL(CodigodaOrganizacao) OrganizacaoPai, "
	set select1 = select1_" CNPJ,InscricaoEstadual,InscricaoMunicipal,CNES,RegistroANS,Case when Ativo=1 then 'Ativo' else 'Inativo' end Ativo"
	set select1 = select1_" from  FATOrganizacao"
	set select1 = select1_" where Company=0 "
	if codigo '= "" set select1 = select1_" and CodigodaOrganizacao = '"_codigo_"' "
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set CodigodaOrganizacao	= rs.%Get("CodigodaOrganizacao")
		set Sigla				= rs.%Get("Sigla")
		set Nome				= rs.%Get("Nome")
		set RazaoSocial			= rs.%Get("RazaoSocial")
		set OrganizacaoPai		= rs.%Get("OrganizacaoPai")
		set CNPJ				= rs.%Get("CNPJ")
		set InscricaoEstadual	= rs.%Get("InscricaoEstadual")
		set InscricaoMunicipal	= rs.%Get("InscricaoMunicipal")
		set CNES				= rs.%Get("CNES")
		set RegistroANS			= rs.%Get("RegistroANS")
		set Ativo				= rs.%Get("Ativo")
		set totalCount			= rs.%Get("totalCount")
		set linha = {}
		set linha.CodigodaOrganizacao	= CodigodaOrganizacao
		set linha.Sigla 				= Sigla
		set linha.Nome 					= Nome
		set linha.RazaoSocial			= RazaoSocial
		set linha.OrganizacaoPai		= OrganizacaoPai
		set linha.CNPJ 					= CNPJ
		set linha.InscricaoEstadual		= InscricaoEstadual
		set linha.InscricaoMunicipal	= InscricaoMunicipal
		set linha.CNES 					= CNES
		set linha.RegistroANS 			= RegistroANS
		set linha.Ativo 				= Ativo
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="recOrganizacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	kill ^mtemp.FATOrganizacao(job)
	set formGeral = {}
	set formControle = {}
	set formFaturamento = {}
	set formGeral.situacao		= 1
	if codigo'=""{
		set objOrganizacao = $get(^FATOrganizacao(YM,codigo,1))
		set formGeral.sigla 		= $$$FATOrganizacaoSigla(objOrganizacao)				
		set formGeral.nome			= $$$FATOrganizacaoNome(objOrganizacao)
		set formGeral.razaoSocial 	= $$$FATOrganizacaoRazaoSocial(objOrganizacao)
		set formGeral.cnpj			= $$$FATOrganizacaoCNPJ(objOrganizacao)		
		set formGeral.inscricaoEstadual = $$$FATOrganizacaoInscricaoEstadual(objOrganizacao)
		set formGeral.inscricaoMunicipal = $$$FATOrganizacaoInscricaoMunicipal(objOrganizacao)
		set formGeral.cnes			= $$$FATOrganizacaoCNES(objOrganizacao)
		set formGeral.ans			= $$$FATOrganizacaoRegistroANS(objOrganizacao)
		set formGeral.organizacaoPai = $$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
		set formGeral.situacao		= +$$$FATOrganizacaoAtivo(objOrganizacao)
		;
		set formGeral.ativoConvenio			= +$$$FATOrganizacaoConvenioAtivo(objOrganizacao)
		set formGeral.ativoPlanoSaude		= +$$$FATOrganizacaoPlanoSaudeAtivo(objOrganizacao)
		set formGeral.ativoParticular		= +$$$FATOrganizacaoEparticular(objOrganizacao)
		;set formPapeis.centroOrigemComercial	= +$$$FATOrganizacaoClienteComercialCentrodeOrigem(objOrganizacao)
		set formGeral.ativoFontePagadora		= +$$$FATOrganizacaoFontePagadoraAtivo(objOrganizacao)
		set formGeral.ativoPrestadorServico	= +$$$FATOrganizacaoPrestadordeServicosAtivo(objOrganizacao)
		set formGeral.ativoRecebedor			= +$$$FATOrganizacaoRecebedorAtivo(objOrganizacao)
		;
		set formControle.criadoEm				= $$$FATOrganizacaoCriadoEm(objOrganizacao)
		if formControle.criadoEm'="" set formControle.criadoEm = $zdatetime(formControle.criadoEm,4)
		set formControle.criadoPor				= $$$FATOrganizacaoCriadoPor(objOrganizacao)
		set formControle.alteradoEm				= $$$FATOrganizacaoAlteradoEm(objOrganizacao)
		if formControle.alteradoEm'="" set formControle.alteradoEm = $zdatetime(formControle.alteradoEm,4)
		set formControle.alteradoPor			= $$$FATOrganizacaoAlteradoPor(objOrganizacao)
		;
				
		set formFaturamento = ..getDadosFaturamento(codigo)
		;
		; Carrega EndereÃ§os
		merge ^mtemp.FATOrganizacao(job,"enderecos") = ^FATOrganizacaoEndereco(0,codigo)
		; Carrega Contados
		merge ^mtemp.FATOrganizacao(job,"contatos") = ^FATOrganizacaoContato(0,codigo)
	}
	set retorno = {}
	set retorno.formGeral 		= formGeral
	set retorno.formFaturamento	= formFaturamento
	set retorno.formControle 	= formControle
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getDadosFaturamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigo=""</FormalSpec>
<Implementation><![CDATA[	set externo = 0
	if codigo=""{
		set codigo = $get(%request.Data("codigo",1))
		set codigoPai = $get(%request.Data("codigoPai",1))
		if codigo'=""{
			set obj = $get(^FATOrganizacao(0,codigo,1))
			if $$$FATOrganizacaoOrganizacaoPai(obj)'=codigoPai{
				set codigo = codigoPai
			}
		}else{
			set codigo = codigoPai
		}
		set externo = 1
	}
	set obj = ..recuperaRegrasPai(codigo)
	set formFaturamento = {}
	set formFaturamento.limiteDesconto			= $$$FATRegrasFatOrganizacaoLimitedeDesconto(obj)
	set formFaturamento.nfDetalhe				= +$$$FATRegrasFatOrganizacaoApresentardetalhesnaNF(obj)
	set formFaturamento.obrigatorioNumCarteirinha= +$$$FATRegrasFatOrganizacaoObrigatorionumerodacartei(obj)
	set formFaturamento.mascara					= $$$FATRegrasFatOrganizacaoMascaradaCarteirinha(obj)
	set formFaturamento.minimoCaracteres		= $$$FATRegrasFatOrganizacaoMinimodeCaracteres(obj)
	set formFaturamento.maximoCaracteres		= $$$FATRegrasFatOrganizacaoMaximodeCaracteres(obj)
	set formFaturamento.faturaRetroativa		= +$$$FATRegrasFatOrganizacaoPermitirFaturasRetroativa(obj)
	set formFaturamento.diasFaturaRetroativa	= $$$FATRegrasFatOrganizacaoTempoemdiasParaFaturaRetr(obj)
	set formFaturamento.fechamentoData			= $$$FATRegrasFatOrganizacaoDiasdeFechamento(obj)
	set formFaturamento.conferenciaFA			= +$$$FATRegrasFatOrganizacaoObrigatorioConferenciaFA(obj)
	set formFaturamento.nfGeradaCredenciado		= +$$$FATRegrasFatOrganizacaoNFdevesergeradoparaocrede(obj)
	set formFaturamento.nfGeracaoAutomatica		= +$$$FATRegrasFatOrganizacaoGeracaoautomaticadolote(obj)
	set formFaturamento.versaoTISS				= $$$FATRegrasFatOrganizacaoVersaodaGuiaTISS(obj)
	set formFaturamento.guiaAutorizacaoConsulta	= +$$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad(obj)
	set formFaturamento.senhaAutorizacaoConsulta= +$$$FATRegrasFatOrganizacaoConsultaObrigatorioSenha(obj)
	set formFaturamento.numGuiaOperadoraConsulta= +$$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad1(obj)
	set formFaturamento.codigoPrestadorConsulta = +$$$FATRegrasFatOrganizacaoConsultaPossuiCodigodePr(obj)
	;
	set formFaturamento.guiaAutorizacaoSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeA(obj)
	set formFaturamento.senhaAutorizacaoSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTObrigatorioSenhade(obj)
	set formFaturamento.numGuiaOperadoraSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeO(obj)
	set formFaturamento.codigoPrestadorSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTPossuiCodigodePres(obj)
	;
	set formFaturamento.guiaAutorizacaoHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)
	set formFaturamento.senhaAutorizacaoHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosObrigatorioSen(obj)
	set formFaturamento.numGuiaOperadoraHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)
	set formFaturamento.codigoPrestadorHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosPossuiCodigodo(obj)
	;
	set formFaturamento.guiaAutorizacaoOutras		= +$$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeA(obj)
	set formFaturamento.senhaAutorizacaoOutras		= +$$$FATRegrasFatOrganizacaoOutrosObrigatorioSenhade(obj)
	set formFaturamento.numGuiaOperadoraOutras		= +$$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeO(obj)
	set formFaturamento.codigoPrestadorOutras 		= +$$$FATRegrasFatOrganizacaoOutrosPossuiCodigodePres(obj)
	if 'externo quit formFaturamento
	set retorno = {}
	set retorno.formFaturamento = formFaturamento
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaRegrasPai">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objRetorno = ""
	for {
		set obj = $get(^FATRegrasFatOrganizacao(0,codigo,1))
		for piece=1:1:$length(obj,"~"){
			if $piece(objRetorno,"~",piece)'="" continue
			set $piece(objRetorno,"~",piece) = $piece(obj,"~",piece)
		}
		set objOrg	= $get(^FATOrganizacao(0,codigo,1))
		set codigo	= $$$FATOrganizacaoOrganizacaoPai(objOrg)
		quit:codigo=""
	}
	quit objRetorno]]></Implementation>
</Method>

<Method name="addEndereco">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set endereco = $get(%request.Data("endereco",1))
	set strStatus = $$$OK
	try{
		set endereco = [].%FromJSON(endereco)
		if endereco.sequencia = "" set endereco.sequencia = $order(^mtemp.FATOrganizacao(job,"enderecos",""),-1)+1
		;
		set sequenciaTipo = ..possuiTipoEndereco(job,endereco.tipoEndereco)
		if sequenciaTipo'="",sequenciaTipo'=endereco.sequencia{
			set strStatus = "JÃ¡ existe um endereÃ§o cadastrado para o tipo de endereÃ§o informado"
			quit
		}
		;
		set obj = $get(^mtemp.FATOrganizacao(job,"enderecos",endereco.sequencia,1))
		set $$$FATOrganizacaoEnderecoTipodeEndereco(obj)	= endereco.tipoEndereco
		set $$$FATOrganizacaoEnderecoLogradouro(obj)		= endereco.logradouro
		set $$$FATOrganizacaoEnderecoNumero(obj)			= endereco.numero
		set $$$FATOrganizacaoEnderecoComplemento(obj)		= endereco.complemento
		set $$$FATOrganizacaoEnderecoCEP(obj)				= endereco.cep
		set $$$FATOrganizacaoEnderecoBairro(obj)			= endereco.bairro
		set $$$FATOrganizacaoEnderecoCidade(obj)			= endereco.cidade
		set $$$FATOrganizacaoEnderecoEstado(obj)			= endereco.estado
		set $$$FATOrganizacaoEnderecoTipodeLogradouro(obj)	= endereco.tipoLogradouro
		set ^mtemp.FATOrganizacao(job,"enderecos",endereco.sequencia,1) = obj
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		set retorno.status 	= 1
		set retorno.type 	= "success"
		set retorno.mensagem="Dados salvos com sucesso!"
	}else{
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="addContato">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set contato = $get(%request.Data("contato",1))
	set strStatus = $$$OK
	try{
		set contato = [].%FromJSON(contato)
		if contato.sequencia = "" set contato.sequencia = $order(^mtemp.FATOrganizacao(job,"contatos",""),-1)+1
		;
		set obj = $get(^mtemp.FATOrganizacao(job,"contatos",contato.sequencia,1))
		set $$$FATOrganizacaoContatoContato(obj)	= contato.contato
		set $$$FATOrganizacaoContatoTelefone(obj)	= contato.telefone
		set $$$FATOrganizacaoContatoCelular(obj)	= contato.celular
		set $$$FATOrganizacaoContatoEmail(obj)		= contato.email
		set $$$FATOrganizacaoContatoWebsite(obj)	= contato.website
		set ^mtemp.FATOrganizacao(job,"contatos",contato.sequencia,1) = obj
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		set retorno.status 	= 1
		set retorno.type 	= "success"
		set retorno.mensagem="Dados salvos com sucesso!"
	}else{
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="deletaTemporaria">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set sequencia = $get(%request.Data("sequencia",1))
	set $piece(^mtemp.FATOrganizacao(job,tipo,sequencia,1),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="listTemporaria">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set retorno = []
	set sequencia=""
	for {
		set sequencia = $order(^mtemp.FATOrganizacao(job,tipo,sequencia)) quit:sequencia=""
		set obj = $get(^mtemp.FATOrganizacao(job,tipo,sequencia,1))
		if $piece(obj,"^",2)=1 continue
		set obj = $piece(obj,"^",1)
		set linha = {}
		set linha.sequencia 	= sequencia
		if tipo="enderecos"{
			set linha.tipoEndereco 	= $$$FATOrganizacaoEnderecoTipodeEndereco(obj)
			if linha.tipoEndereco'="" set linha.tipoEnderecoExt = $$$INPARAText($get(^INPARA(0,"FATTIPOENDERECO","PT",linha.tipoEndereco,1)))
			set linha.logradouro 	= $$$FATOrganizacaoEnderecoLogradouro(obj)
			set linha.numero 		= $$$FATOrganizacaoEnderecoNumero(obj)
			set linha.complemento 	= $$$FATOrganizacaoEnderecoComplemento(obj)
			set linha.cep 			= $$$FATOrganizacaoEnderecoCEP(obj)
			set linha.bairro 		= $$$FATOrganizacaoEnderecoBairro(obj)
			set linha.cidade 		= $$$FATOrganizacaoEnderecoCidade(obj)
			set linha.estado 		= $$$FATOrganizacaoEnderecoEstado(obj)
			if linha.estado'="" set linha.estadoExt = $$$INPARAText($get(^INPARA(0,"UF","PT",linha.estado,1)))
			set linha.tipoLogradouro= $$$FATOrganizacaoEnderecoTipodeLogradouro(obj)
			if linha.tipoLogradouro'="" set linha.tipoLogradouroExt = $$$INPARAText($get(^INPARA(0,"FATTIPOLOGRADOURO","PT",linha.tipoLogradouro,1)))
		}
		if tipo="contatos"{
			set linha.contato 	= $$$FATOrganizacaoContatoContato(obj)
			set linha.telefone 	= $$$FATOrganizacaoContatoTelefone(obj)
			set linha.telefoneExt = linha.telefone
			if $length(linha.telefoneExt)=11 set linha.telefoneExt = "("_$extract(linha.telefoneExt,1,2)_")"_$extract(linha.telefoneExt,3,7)_"-"_$extract(linha.telefoneExt,8,$length(linha.telefoneExt))
			else  set linha.telefoneExt = "("_$extract(linha.telefoneExt,1,2)_")"_$extract(linha.telefoneExt,3,6)_"-"_$extract(linha.telefoneExt,7,$length(linha.telefoneExt))
			set linha.celular	= $$$FATOrganizacaoContatoCelular(obj)
			set linha.celularExt = linha.celular
			if $length(linha.celularExt)=11 set linha.celularExt = "("_$extract(linha.celularExt,1,2)_")"_$extract(linha.celularExt,3,7)_"-"_$extract(linha.celularExt,8,$length(linha.celularExt))
			else  set linha.celularExt = "("_$extract(linha.celularExt,1,2)_")"_$extract(linha.celularExt,3,6)_"-"_$extract(linha.celularExt,7,$length(linha.celularExt))
			set linha.email 	= $$$FATOrganizacaoContatoEmail(obj)
			set linha.website	= $$$FATOrganizacaoContatoWebsite(obj)
		}
		
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="possuiTipoEndereco">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,tipo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if tipo=99 quit ""
	set sequencia=""
	for {
		set sequencia = $order(^mtemp.FATOrganizacao(job,"enderecos",sequencia)) quit:sequencia=""
		set obj = $get(^mtemp.FATOrganizacao(job,"enderecos",sequencia,1))
		if $piece(obj,"^",2)=1 continue
		set obj = $piece(obj,"^",1)
		if $$$FATOrganizacaoEnderecoTipodeEndereco(obj)=tipo quit
	}
	quit sequencia]]></Implementation>
</Method>

<Method name="getOrganizacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codOrganizacao	= $get(%request.Data("codOrganizacao",1))
	set select = "select CodigodaOrganizacao,Nome from  FATOrganizacao where Company=0 and OrganizacaoPai is null "
	if codOrganizacao'="" set select = select_" and CodigodaOrganizacao <> '"_codOrganizacao_"' "
	set retorno = []
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		set linha={}
		set linha.codigo = rs.%Get("CodigodaOrganizacao")
		set linha.descricao = "("_linha.codigo_") "_rs.%Get("Nome")
		set linha.nivel		= 0
		do retorno.%Push(linha)
		do ..buscaFilhos(linha.codigo,codOrganizacao,1,.retorno)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="buscaFilhos">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigoPai,codOrganizacaoAtual,nivel,&amp;retorno</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set nivel = nivel + 1
	set select = "select CodigodaOrganizacao,Nome from  FATOrganizacao where Company=0 and OrganizacaoPai = '"_codigoPai_"' "
	if codOrganizacaoAtual'="" set select = select_" and CodigodaOrganizacao <> '"_codOrganizacaoAtual_"' "
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		set linha={}
		set linha.codigo 	= rs.%Get("CodigodaOrganizacao")
		set linha.descricao = "("_linha.codigo_") "_rs.%Get("Nome")
		set linha.nivel		= nivel
		do retorno.%Push(linha)
		do ..buscaFilhos(linha.codigo,codOrganizacaoAtual,nivel,.retorno)
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="salvar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codOrganizacao	= $get(%request.Data("codOrganizacao",1))
	set camposGeral		= $get(%request.Data("camposGeral",1))
	set camposFaturamento = $get(%request.Data("camposFaturamento",1))
	set strStatus = $$$OK
	tstart
	try{
		set camposGeral		= [].%FromJSON(camposGeral)
		set camposFaturamento = [].%FromJSON(camposFaturamento)
		;
		if camposGeral.ativoFontePagadora,camposGeral.cnpj=""{
			set strStatus = "ObrigatÃ³rio nÃºmero do CNPJ para organizaÃ§Ãµes como fonte pagadora"
		}
		if '$$$ISOK(strStatus) quit
		if ((camposGeral.ativoFontePagadora)||(camposGeral.ativoPrestadorServico)||(camposGeral.ativoRecebedor)){
			if '$data(^mtemp.FATOrganizacao(job,"enderecos")){
				set strStatus = "ObrigatÃ³rio ao menos um endereÃ§o para o tipo de organizaÃ§Ã£o"
			}
			if '$$$ISOK(strStatus) quit
			if '$data(^mtemp.FATOrganizacao(job,"contatos")){
				set strStatus = "ObrigatÃ³rio ao menos um contato para o tipo de organizaÃ§Ã£o"
			}
			if '$$$ISOK(strStatus) quit
		}

		;
		if camposGeral.cnpj'="" set strStatus = $$ValidateCNPJ^COMValidation(camposGeral.cnpj)
		if '$$$ISOK(strStatus) quit
		;
		if '$data(^WWW128(0,"FATOrganizacao")){
			set obj = "O000000000"
			set strStatus = $$$Save("WWW128","FATOrganizacao",obj,$$$YES)
			quit:$$$ISERR(strStatus)
		}		
		if codOrganizacao="" Set codOrganizacao = $$GetNextNumber^COMUtils("FATOrganizacao","")
		;
		set nome = $zconvert(camposGeral.nome,"U")
		set nome = $zstrip(nome,"<>w")
		set sigla = $zconvert(camposGeral.sigla,"U")
		set sigla = $zstrip(sigla,"<>w")
		
		;
		;if camposGeral.situacao{
		;	set rs = ##class(%SQL.Statement).%ExecDirect("","Select CodigodaOrganizacao from FATOrganizacao where company=0 and Ativo=1 and %upper(Nome) = %upper('"_nome_"') and CodigodaOrganizacao <> '"_codOrganizacao_"'")
		;	while(rs.%Next()){
		;		set strStatus = "A organizaÃ§Ã£o de cÃ³digo '"_rs.%Get("CodigodaOrganizacao")_"' possuÃ­ o mesmo nome!"
		;	}
		;}
		quit:$$$ISERR(strStatus)
		;
		if camposGeral.cnpj'=""{
			set orgCNPJ = $order(^FATOrganizacaos(YM,1,1,camposGeral.cnpj,""))
			if orgCNPJ'="",orgCNPJ'=codOrganizacao{
				set strStatus = "CNPJ "_camposGeral.cnpj_" jÃ¡ cadastradado para a organizaÃ§Ã£o "_orgCNPJ
				quit
			}	
		}
		;
		set objOrganizacao = $get(^FATOrganizacao(YM,codOrganizacao,1))
		set $$$FATOrganizacaoSigla(objOrganizacao)				= sigla
		set $$$FATOrganizacaoNome(objOrganizacao)				= nome
		set $$$FATOrganizacaoRazaoSocial(objOrganizacao)		= camposGeral.razaoSocial
		set $$$FATOrganizacaoCNPJ(objOrganizacao)				= camposGeral.cnpj
		set $$$FATOrganizacaoInscricaoEstadual(objOrganizacao)	= camposGeral.inscricaoEstadual
		set $$$FATOrganizacaoInscricaoMunicipal(objOrganizacao)	= camposGeral.inscricaoMunicipal
		set $$$FATOrganizacaoCNES(objOrganizacao)				= camposGeral.cnes
		set $$$FATOrganizacaoRegistroANS(objOrganizacao)		= camposGeral.ans
		set $$$FATOrganizacaoOrganizacaoPai(objOrganizacao)		= camposGeral.organizacaoPai
		set $$$FATOrganizacaoAtivo(objOrganizacao)				= camposGeral.situacao
		;
		set $$$FATOrganizacaoConvenioAtivo(objOrganizacao)						= camposGeral.ativoConvenio
		set $$$FATOrganizacaoPlanoSaudeAtivo(objOrganizacao)					= camposGeral.ativoPlanoSaude
		set $$$FATOrganizacaoEparticular(objOrganizacao)						= camposGeral.ativoParticular
		set $$$FATOrganizacaoFontePagadoraAtivo(objOrganizacao)					= camposGeral.ativoFontePagadora
		set $$$FATOrganizacaoPrestadordeServicosAtivo(objOrganizacao)			= camposGeral.ativoPrestadorServico		
		set $$$FATOrganizacaoRecebedorAtivo(objOrganizacao)						= camposGeral.ativoRecebedor			
		set strStatus = $$$Save("FATOrganizacao",codOrganizacao,objOrganizacao,$$$YES)
		;
		; Salva EndereÃ§os
		set sequencia = ""
		for{
			set sequencia = $order(^mtemp.FATOrganizacao(job,"enderecos",sequencia)) quit:sequencia=""
			set obj 	  = $get(^mtemp.FATOrganizacao(job,"enderecos",sequencia,1))
			set objEndereco = $piece(obj,"^",1)
			set flRemocao 	= $piece(obj,"^",2)
			if flRemocao=1{
				set strStatus = $$$Kill("FATOrganizacaoEndereco",codOrganizacao_","_sequencia)
			}else{
				set strStatus = $$$Save("FATOrganizacaoEndereco",codOrganizacao_","_sequencia,objEndereco,$$$YES)
			}
			quit:$$$ISERR(strStatus)
		}
		;
		; Salva Contatos
		set sequencia = ""
		for{
			set sequencia = $order(^mtemp.FATOrganizacao(job,"contatos",sequencia)) quit:sequencia=""
			set obj 	  = $get(^mtemp.FATOrganizacao(job,"contatos",sequencia,1))
			set objContatos = $piece(obj,"^",1)
			set flRemocao 	= $piece(obj,"^",2)
			if flRemocao=1{
				set strStatus = $$$Kill("FATOrganizacaoContato",codOrganizacao_","_sequencia)
			}else{
				set strStatus = $$$Save("FATOrganizacaoContato",codOrganizacao_","_sequencia,objContatos,$$$YES)
			}
			quit:$$$ISERR(strStatus)
		}
		;
		set obj = $get(^FATRegrasFatOrganizacao(0,codOrganizacao,1))
		;if camposGeral.particular{
			set limiteDesconto				= camposFaturamento.limiteDesconto
			set nfDetalhe					= camposFaturamento.nfDetalhe
		;}else{
			set obrigatorioNumCarteirinha	= camposFaturamento.obrigatorioNumCarteirinha
			set mascara						= camposFaturamento.mascara
			;
			for i=1:1:$length(mascara){
				set carac = $extract(mascara,i)
				if carac?1P continue
				if carac="0" continue
				if carac="A" continue
				set strStatus = "MÃ¡scara invÃ¡lida. Utilize 'A' para permitir letras, '0' para permitir nÃºmeros e caracteres de pontuaÃ§Ã£o"
				quit
			}
			quit:$$$ISERR(strStatus)
			;
			set minimoCaracteres			= camposFaturamento.minimoCaracteres
			set maximoCaracteres			= camposFaturamento.maximoCaracteres
			set faturaRetroativa			= camposFaturamento.faturaRetroativa
			set diasFaturaRetroativa		= camposFaturamento.diasFaturaRetroativa
			set fechamentoData				= camposFaturamento.fechamentoData
			set conferenciaFA				= camposFaturamento.conferenciaFA
			set nfGeradaCredenciado			= camposFaturamento.nfGeradaCredenciado
			set nfGeracaoAutomatica			= camposFaturamento.nfGeracaoAutomatica
			set versaoTISS					= camposFaturamento.versaoTISS
			set guiaAutorizacaoConsulta		= camposFaturamento.guiaAutorizacaoConsulta
			set senhaAutorizacaoConsulta	= camposFaturamento.senhaAutorizacaoConsulta
			set numGuiaOperadoraConsulta	= camposFaturamento.numGuiaOperadoraConsulta
			set codigoPrestadorConsulta		= camposFaturamento.codigoPrestadorConsulta
			set guiaAutorizacaoSPSADT		= camposFaturamento.guiaAutorizacaoSPSADT
			set senhaAutorizacaoSPSADT		= camposFaturamento.senhaAutorizacaoSPSADT
			set numGuiaOperadoraSPSADT		= camposFaturamento.numGuiaOperadoraSPSADT
			set codigoPrestadorSPSADT		= camposFaturamento.codigoPrestadorSPSADT
			set guiaAutorizacaoHonorarios	= camposFaturamento.guiaAutorizacaoHonorarios
			set senhaAutorizacaoHonorarios	= camposFaturamento.senhaAutorizacaoHonorarios
			set numGuiaOperadoraHonorarios	= camposFaturamento.numGuiaOperadoraHonorarios
			set codigoPrestadorHonorarios	= camposFaturamento.codigoPrestadorHonorarios
			set guiaAutorizacaoOutras		= camposFaturamento.guiaAutorizacaoOutras
			set senhaAutorizacaoOutras		= camposFaturamento.senhaAutorizacaoOutras
			set numGuiaOperadoraOutras		= camposFaturamento.numGuiaOperadoraOutras
			set codigoPrestadorOutras		= camposFaturamento.codigoPrestadorOutras
		;}
		set $$$FATRegrasFatOrganizacaoLimitedeDesconto(obj)			= limiteDesconto
		set $$$FATRegrasFatOrganizacaoApresentardetalhesnaNF(obj)	= +nfDetalhe
		set $$$FATRegrasFatOrganizacaoObrigatorionumerodacartei(obj)= +obrigatorioNumCarteirinha
		set $$$FATRegrasFatOrganizacaoMascaradaCarteirinha(obj)		= mascara
		set $$$FATRegrasFatOrganizacaoMinimodeCaracteres(obj)		= minimoCaracteres
		set $$$FATRegrasFatOrganizacaoMaximodeCaracteres(obj)		= maximoCaracteres
		set $$$FATRegrasFatOrganizacaoPermitirFaturasRetroativa(obj)= +faturaRetroativa
		set $$$FATRegrasFatOrganizacaoTempoemdiasParaFaturaRetr(obj)= diasFaturaRetroativa
		set $$$FATRegrasFatOrganizacaoDiasdeFechamento(obj)			= fechamentoData
		set $$$FATRegrasFatOrganizacaoObrigatorioConferenciaFA(obj)	= +conferenciaFA
		set $$$FATRegrasFatOrganizacaoNFdevesergeradoparaocrede(obj)= +nfGeradaCredenciado
		set $$$FATRegrasFatOrganizacaoGeracaoautomaticadolote(obj)	= +nfGeracaoAutomatica
		set $$$FATRegrasFatOrganizacaoVersaodaGuiaTISS(obj)			= versaoTISS
		set $$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad(obj)	= +guiaAutorizacaoConsulta
		set $$$FATRegrasFatOrganizacaoConsultaObrigatorioSenha(obj)	= +senhaAutorizacaoConsulta
		set $$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad1(obj)= +numGuiaOperadoraConsulta
		set $$$FATRegrasFatOrganizacaoConsultaPossuiCodigodePr(obj)	= +codigoPrestadorConsulta
		;
		set $$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeA(obj)	= +guiaAutorizacaoSPSADT
		set $$$FATRegrasFatOrganizacaoSPSADTObrigatorioSenhade(obj)	= +senhaAutorizacaoSPSADT
		set $$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeO(obj)	= +numGuiaOperadoraSPSADT
		set $$$FATRegrasFatOrganizacaoSPSADTPossuiCodigodePres(obj)	= +codigoPrestadorSPSADT
		;
		set $$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)	= +guiaAutorizacaoHonorarios
		set $$$FATRegrasFatOrganizacaoHonorariosObrigatorioSen(obj)	= +senhaAutorizacaoHonorarios
		set $$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)	= +numGuiaOperadoraHonorarios
		set $$$FATRegrasFatOrganizacaoHonorariosPossuiCodigodo(obj)	= +codigoPrestadorHonorarios
		;
		set $$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeA(obj)	= +guiaAutorizacaoOutras
		set $$$FATRegrasFatOrganizacaoOutrosObrigatorioSenhade(obj)	= +senhaAutorizacaoOutras
		set $$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeO(obj)	= +numGuiaOperadoraOutras
		set $$$FATRegrasFatOrganizacaoOutrosPossuiCodigodePres(obj)	= +codigoPrestadorOutras
		;
		set objOrg		= $get(^FATOrganizacao(0,codOrganizacao,1))
		set codigoPai	= $$$FATOrganizacaoOrganizacaoPai(objOrg)
		if codigoPai'=""{
			set objPai 		= ..recuperaRegrasPai(codigoPai)
			for piece=1:1:$length(obj,"~"){
				if $piece(objPai,"~",piece)=$piece(obj,"~",piece) set $piece(obj,"~",piece) = ""
			}
		}
		;
		set strStatus = $$$Save("FATRegrasFatOrganizacao",codOrganizacao,obj,$$$YES)
		kill ^mtemp.FATOrganizacao(job)
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set strStatus="Dados salvos com sucesso!"
		set retorno.status = 1
		do retorno.%Set("codOrganizacao",codOrganizacao,"String")
		set retorno.type = "success"
		set retorno.mensagem = strStatus
	}else{
		trollback
		set retorno.status = 0
		set retorno.type = "error"
		set retorno.mensagem = $$$Text(strStatus)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<FormalSpec>callMode=""</FormalSpec>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set %response.Status="401 Unauthorized"
		set resp={}
		set resp.status=0
		set resp.mensagem="UsuÃ¡rio nÃ£o estÃ¡ logado ou a sessÃ£o expirou."
		write resp.%ToJSON()
	}elseif callMode=""{
		set resp={}
		set resp.status=1
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>
</Class>
</Export>