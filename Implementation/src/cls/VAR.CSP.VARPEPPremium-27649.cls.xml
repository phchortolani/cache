<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARPEPPremium">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	$$$VAR
	#dim %request as %CSP.Request
	#dim %response as %CSP.Response
	quit:$$$ISERR(..validaSessao()) %response
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="manutencao">
<ClassMethod>1</ClassMethod>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	kill tempor
	set paciente = ""
	for {
		set paciente = $order(^VARPEPPremiumConsulta(0,paciente)) quit:paciente=""
		set cid=""
		for {
			set cid = $order(^VARPEPPremiumConsulta(0,paciente,cid)) quit:cid=""
			i '$data(^VARCID(0,cid)) quit
			set consulta=""
			for {
				set consulta = $order(^VARPEPPremiumConsulta(0,paciente,cid,consulta)) quit:consulta=""
				set obj = ^(consulta,1)
				set tempor(0,paciente,consulta,1)=cid_"~"_$p(obj,"~",1)_"~AUTO~"_$p(obj,"~",2)_"~"_$p(obj,"~",3)
			}
		}		
	}
	if $data(tempor){
		kill ^VARPEPPremiumConsulta
		merge ^VARPEPPremiumConsulta = tempor
	}
	///
	set paciente=""
	for {
		set paciente = $order(^VARPEPPremiumPrimario(0,paciente)) quit:paciente=""
		set data=60000
		for {
			set data = $order(^VARPEPPremiumPrimario(0,paciente,data)) quit:data=""
			set ^VARPEPPremiumPrimario(0,paciente,1,1) = ^VARPEPPremiumPrimario(0,paciente,data,1)
			kill ^VARPEPPremiumPrimario(0,paciente,data,1)
		}
	}
	quit
]]></Implementation>
</Method>

<Method name="listaResultadosImagem">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set codPaciente = $Get(%request.Data("paciente",1))
	Set painelAtual = $Get(%request.Data("painelAtual",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	set dados = ..recuperaResultadosImagens(codPaciente,cid,painelAtual,ficha)
	set retorno = {}
	if dados=""{
		set retorno.dados = "Paciente sem áreas marcadas"
	}else{
		set retorno.dados = dados
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaPassagens">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set contador=0
	set query($i(contador)) = "select * from (select AdmissionID,DateAdmitted,TimeAdmitted,DateDischarged,TimeDischarged,2 Tipo,'Prontuário Eletrônico' DescTipo from MEDAdmission where company=0 and Patient='"_paciente_"' "
	set query($i(contador)) = "union "
	set query($i(contador)) = "select NumerodaConsulta AdmissionID,$piece(DataHoradoIniciodaConsulta,',',1) DateAdmitted,$piece(DataHoradoIniciodaConsulta,',',2)  TimeAdmitted,$piece(DataHoradoFimdaConsulta,',',1) DateDischarged,$piece(DataHoradoFimdaConsulta,',',2) TimeDischarged,1 Tipo,'MAPPA' DescTipo from VARPEPPremiumConsulta "
	set query($i(contador)) = "where company=0 and CodigodoPaciente='"_paciente_"') "
	set query($i(contador)) = "order by DateAdmitted desc,TimeAdmitted desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.Consulta = rs.%Get("AdmissionID")
		set status="Em Aberto"
		if rs.%Get("DateDischarged")'="" set status="Alta"
		set linha.Tipo = rs.%Get("Tipo")
		set linha.DescTipo = rs.%Get("DescTipo")
		set linha.DataAdmissao = $select(rs.%Get("DateAdmitted")="":"",1:$zdate(rs.%Get("DateAdmitted"),1))
		set linha.HoraAdmissao = $select(rs.%Get("TimeAdmitted")="":"",1:$ztime(rs.%Get("TimeAdmitted"),1))
		set linha.DataAlta = $select(rs.%Get("DateDischarged")="":"",1:$zdate(rs.%Get("DateDischarged"),1))
		set linha.HoraAlta = $select(rs.%Get("TimeDischarged")="":"",1:$ztime(rs.%Get("TimeDischarged"),1))
		set linha.Convenio = "Paciente Externo"
		set linha.Status = status
		do retorno.%Push(linha)
	}
	//
	// Carrega Linha Registros Anteriores
	if $data(^VARPEPAntigos(0,paciente,1)){
		set linha={}
		set linha.Consulta = "Registros Anteriores"
		set linha.Tipo = 3
		set linha.Status = "-"
		set linha.DataAdmissao = "-"
		set linha.HoraAdmissao = "-"
		set linha.DataAlta = "-"
		set linha.HoraAlta = "-"
		do retorno.%Push(linha)
	}
	;
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set %response.Status="401 Unauthorized"
		set resp={}
		set resp.erro=1
		set resp.mensagem="Sessão Expirou"
		write resp.%ToJSON()
	}
	quit status
]]></Implementation>
</Method>

<Method name="verificaBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set bird = $$getBirdID^VARCSPUtils(YBED,YUSER)
	if $piece(bird,"~",1)="" {
		write 0
	}elseif $piece(bird,"~",1)=0 {
		write 2
	}else{
		write 1
	}
	quit
]]></Implementation>
</Method>

<Method name="revokeBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = $$revokeBirdID^VARCSPUtils(YBED,YUSER)
	write 1
	quit
]]></Implementation>
</Method>

<Method name="authBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set username = $get(%request.Data("username",1))
	set password = $get(%request.Data("password",1))
	set ret = $$authBirdID^VARCSPUtils(username,password)
	set retorno = {}
	set retorno.status = $piece(ret,"~",1)
	set retorno.mensagem = $piece(ret,"~",2)
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaResultados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set codPaciente = $Get(%request.Data("paciente",1))
	Set meuSQL = "Select PerfilExame, CompostoExame1, Exame "
	Set meuSQL = meuSQL _ "From SQLUser.VARPEPResultado Where Company = 0 "
	Set meuSQL = meuSQL _ "And Paciente = '"_codPaciente_"' "
	Set meuSQL = meuSQL _ "Group By PerfilExame, CompostoExame1, Exame"
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	set retorno = []
	while(rs.%Next()){
		Set perfilExame		= rs.%Get("PerfilExame")
		Set compostoExame	= rs.%Get("CompostoExame1")
		Set exame					= rs.%Get("Exame")
		
		;if (perfilExame '= "MIE") continue
		Set temp(perfilExame, compostoExame, exame) = ""
	}		
	Set perfilExame = ""
	For {
		Set perfilExame = $Order(temp(perfilExame))
		Quit:perfilExame=""
		;
		If (perfilExame '= "SEMPERFIL") {
			Set seqComposto = ""
			For {
				Set seqComposto = $Order(^VARPerfilExame(0,"EXIBICAO",perfilExame,seqComposto))
				Quit:seqComposto=""
				;
				Set compostoExame = $Piece(^VARPerfilExame(0,"EXIBICAO",perfilExame,seqComposto,1),"~",1)
				;
				Set seqExame = ""
				For {
					Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame))
					Quit:seqExame=""
					;
					Set exame = $Piece(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame,1),"~",1)
					;
					If ('$Data(temp(perfilExame, compostoExame, exame))) Continue
					Do INSERT(codPaciente,perfilExame,seqComposto,compostoExame,exame)
				}
			}
		}Else{
			Set compostoExame = ""
			For {
				Set compostoExame = $Order(temp(perfilExame, compostoExame))
				Quit:compostoExame=""
				;
				If (compostoExame '= "SEMCOMPOSTO") {
					Set seqExame = ""
					For {
						Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame))
						Quit:seqExame=""
						;
						Set exame = $Piece(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame,1),"~",1)
						;
						If ('$Data(temp(perfilExame, compostoExame, exame))) Continue
						Do INSERT(codPaciente,perfilExame,"",compostoExame,exame)
					}
				}Else{
					Set exame = ""
					For {
						Set exame = $Order(temp(perfilExame, compostoExame, exame))
						Quit:exame=""
						Do INSERT(codPaciente,perfilExame,"",compostoExame,exame)
					}
				}
			}	
		} 		
	}
	Write retorno.%ToJSON()
	Return $$$OK
	;
INSERT(pCodPaciente,pPerfilExame,pSequenciaComposto,pCompostoExame,pExame)	
	Set descPerfilExame 	= $$SQLGetDescricaoProduto^VARSQL(pPerfilExame)
	Set descCompostoExame = $S(pSequenciaComposto="":"",1:pSequenciaComposto_" - ")_$$SQLGetDescricaoProduto^VARSQL(pCompostoExame)
	Set descExame 				= $$SQLGetDescricaoProduto^VARSQL(pExame)
	;
	Set listRetorno = {}
	Set listRetorno.id 				= pCodPaciente_"||"_pPerfilExame_"||"_pCompostoExame_"||"_pExame
	Set listRetorno.codPerfil 		= pPerfilExame
	Set listRetorno.descPerfil 		= descPerfilExame
	Set listRetorno.codComposto 	= pCompostoExame
	Set listRetorno.descComposto	= descCompostoExame
	Set listRetorno.codExame 		= pExame
	set listRetorno.descExame 		= descExame
	Set meuSQL1 = "Select DataExame, Resultado "
	Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
	Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
	Set meuSQL1 = meuSQL1 _ "And PerfilExame = '"_pPerfilExame_"' " 
	Set meuSQL1 = meuSQL1 _ "And CompostoExame1 = '"_pCompostoExame_"' "
	Set meuSQL1 = meuSQL1 _ "And Exame = '"_exame_"' "
	Set meuSQL1 = meuSQL1 _ "Order By DataExame Desc"
	set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
	while(rs1.%Next()){
		Do listRetorno.%Set($zdate(rs1.%Get("dataExame"),4), rs1.%Get("resultado"))
	}	
	do retorno.%Push(listRetorno)	
	;
	Return
]]></Implementation>
</Method>

<Method name="recDataConsulta">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,consulta,flInterno=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,consulta,1))
	set data = $piece(objConsulta,"~",4)
	if data="" set data = $piece(objConsulta,"~",2)
	if $get(^VARPEPPremiumConsultaRetrospectiva(0,codPaciente,consulta,1)){
		set data = +$piece(^VARPEPPremiumConsultaRetrospectiva(0,codPaciente,consulta,1),"~",1)
	}
	if flInterno=1 quit +data
	if data'="" set data = $zdate(data,4)
	quit data
]]></Implementation>
</Method>

<Method name="listaResultadosPEPPremium">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set codPaciente = $Get(%request.Data("paciente",1))
	Set painelAtual = $Get(%request.Data("painelAtual",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	set info=""
	;
	set tipoHistoricoSN = ""
	set tipoHistorico = ..recTipoHistorico(cid,painelAtual,.tipoHistoricoSN)
	if tipoHistoricoSN=2 set tipoHistoricoSN=1
	else  set tipoHistoricoSN=""
	;
	if tipoHistorico=1 {
		do ..listaExamesSangue(codPaciente,cid,painelAtual,ficha)
	}elseif tipoHistorico=2 {
		do ..listaExamesImagens(codPaciente,cid,painelAtual,ficha)
	}else{
		do ..listaPassagensAnteriores(codPaciente,cid,painelAtual,ficha,tipoHistoricoSN)
	}
	;	
	quit $$$OK
]]></Implementation>
</Method>

<Method name="recTipoHistorico">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,painelAtual,&amp;tipoHistoricoSN</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set SQL = "SELECT Sequencia,TipodeWorkflow "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set tipoHistorico = ""
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set TipodeWorkflow = rs.%Get("TipodeWorkflow")
		if TipodeWorkflow=5 set tipoHistorico=1 quit ; Tipo Exames de Sangue
		if TipodeWorkflow=7 set tipoHistorico=2 quit ; Tipo Imagens
		if $get(tipoHistoricoSN)="" {
			set tipoHistoricoSN2 = ..recTipoHistorico(cid,Sequencia,.tipoHistoricoSN)
			if tipoHistoricoSN2'="" set tipoHistoricoSN = tipoHistoricoSN2
		}
	}
	quit tipoHistorico
]]></Implementation>
</Method>

<Method name="listaPassagensAnteriores">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,nivel</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	do ..buscaPassagensAnteriores(codPaciente, cid, painelAtual, ficha,nivel,.dados,.colunas)
	set retorno = [],arrayColuna=[]
	if $data(dados){
		;
		set listColuna = {}
		do listColuna.%Set("dataField", "Campo")
		do listColuna.%Set("caption", "Campo")
		do listColuna.%Set("width", 250)
		do listColuna.%Set("fixed", 1)
		do arrayColuna.%Push(listColuna)
		;
		kill ordercol
		set coluna = ""
		for {
			set coluna = $order(colunas(coluna)) quit:coluna=""
			if coluna = ficha set data = "Consulta Atual"
			else  set data = ..recDataConsulta(codPaciente,coluna,1)
			set ordercol(data,coluna)=""
		}		
		;
		set data=""
		for {
			set data=$order(ordercol(data),-1) quit:data=""
			set coluna = ""
			for {
				set coluna = $order(ordercol(data,coluna)) quit:coluna=""
				if coluna = ficha set desc = "Consulta Atual"
				e  set desc = "Consulta "_coluna_" ("_..recDataConsulta(codPaciente,coluna,0)_")"
				set listColuna = {}
				do listColuna.%Set("dataField", coluna_" ")
				do listColuna.%Set("caption", desc)
				do listColuna.%Set("alignment", "left")
				do arrayColuna.%Push(listColuna)
			}
		}
		kill seqn1,seqn
		set sequ=""
		for {
			set sequ = $order(dados(sequ)) quit:sequ=""
			set sequencia = $piece(dados(sequ),"~",1)
			set desc = ..recDescricaoWorkFlow(cid,sequencia)
			set desc = $replace(desc,"<br>"," ")
			if $data(seqn1(desc)) {
				set nseq = seqn1(desc)
			}else{
				set nseq = $order(seqn(""),-1)+1
				set seqn1(desc)=sequ
				set seqn(nseq)=desc
			}
			set ficha = ""
			for {
				set ficha = $order(dados(sequ,ficha)) quit:ficha=""
				set seqn(nseq,ficha)=dados(sequ,ficha)
			}			
		}
		set sequ=""
		for {
			set sequ = $order(seqn(sequ)) quit:sequ=""
			set desc = $get(seqn(sequ))
			set linha = {}
			do linha.%Set("Campo",desc)
			set ficha = ""
			for {
				set ficha = $order(seqn(sequ,ficha)) quit:ficha=""
				set valor = $piece(seqn(sequ,ficha),"~",1)
				do linha.%Set(ficha_" ",valor)
			}
			do retorno.%Push(linha)
		}
	}
	set ret = {}
	set ret.header = ..recDescricaoWorkFlow(cid,painelAtual)
	set ret.dataGrid = retorno
	set ret.columns = arrayColuna
	write ret.%ToJSON()
	quit
	quit
]]></Implementation>
</Method>

<Method name="buscaPassagensAnteriores">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,nivel,&amp;dados,&amp;colunas</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set predecessor				= rs.%Get("Predecessor")
		set opcoes					= rs.%Get("Opcoes")
		set composicaoValoresExames = rs.%Get("composicaoValoresExames")
		set permitirSelecionarMaisQue = rs.%Get("PermitirSelecionarMaisQue")
		if TipodeWorkFlow=5{
			set objExames = $get(^VARExames(0,Nome,1))
			if unid="" set unid = $$$VARExamesUnidade(objExames)
		}
		set seq = $order(dados(""),-1)+1
		for fichaAtual = 1:1:ficha{
			set retPais = ..verificaNivelPais(codPaciente,cid,fichaAtual,1,"",Sequencia)
			if retPais=0 continue
			set valores = $piece(..recValorSalvo(codPaciente,cid,fichaAtual,1,Sequencia,""),"~",1)
			if valores=""||(valores="null") continue
			if TipodeWorkFlow=13 {
				if valores'="" set valores = $zdate(valores,4)
			}
			if TipodeWorkFlow=2||(TipodeWorkFlow=11) {
				set valores = $select(valores=1:"Sim",valores=0:"Não",1:"")
			}
			if composicaoValoresExames'="",composicaoValoresExames'=1,composicaoValoresExames'=5{
				set opcoes = $piece($get(^VARPARA(0,"WORKFLOWVALORES","PT",composicaoValoresExames,1)),"~",1)
				set opcoes = $replace(opcoes,"/","|")
				if composicaoValoresExames=10{
					if valores = 0 set valores=2
					else  if valores=2 set valores=3
				}else{
					set valores = valores+1
				}
				set valores = $piece(opcoes,"|",valores)
				;set valores = opcoes_" - "_valores_" - "_composicaoValoresExames
			}
			if TipodeWorkFlow=9 {
				if permitirSelecionarMaisQue=1{
					set valAcum = ""
					for i=1:1:$length(valores,";"){
						set va = $piece(valores,";",i)
						if va = "false" set va = 0
						if va = "true" set va = 1
						if 'va continue
						if valAcum '="" set valAcum = valAcum_", "
						set valAcum = valAcum_$piece(opcoes,"|",i)
					}
					set valores = valAcum
				}else{
					set valores = $piece(opcoes,"|",valores)
				}
			}
			set dados(seq) = Sequencia
			set dados(seq,fichaAtual) = valores_" "_unid
			set colunas(fichaAtual)=""
		}
		if nivel="" do ..buscaPassagensAnteriores(codPaciente, cid, Sequencia, ficha,nivel,.dados,.colunas)
	}
	quit
]]></Implementation>
</Method>

<Method name="listaExamesImagens">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha</FormalSpec>
<Implementation><![CDATA[
	for fichaatual=1:1:ficha{
		set ret = ..recuperaResultadosImagens(codPaciente, cid, painelAtual, fichaatual,.dados)
	}
	set retorno = [],arrayColuna=[]
	if $data(dados){
		;
		set sequ=""
		for {
			set sequ = $order(dados(sequ)) quit:sequ=""
			set objWF 	= $get(^VARWorkFlowPEP(0,cid,sequ,1))
			set desc    = $$$VARWorkFlowPEPNome(objWF)
			set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
			if tipo=7 {
				set codImagem = $piece(desc,";",1)
				set codArea = $piece(desc,";",2)
				set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			}
			set pred = sequ
			for {
				set objWF 	= $get(^VARWorkFlowPEP(0,cid,pred,1))
				set pred    = $$$VARWorkFlowPEPPredecessor(objWF)
				if pred=""||(pred=painelAtual) quit
				if $data(dados(pred)) kill dados(pred)
			}
		}
		set sequ=""
		for {
			set sequ = $order(dados(sequ)) quit:sequ=""
			set objWF 	= $get(^VARWorkFlowPEP(0,cid,sequ,1))
			set desc    = $$$VARWorkFlowPEPNome(objWF)
			set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
			if tipo=7 {
				set codImagem = $piece(desc,";",1)
				set codArea = $piece(desc,";",2)
				set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			}
			set fichal = ""
			for {
				set fichal = $order(dados(sequ,fichal)) quit:fichal=""
				set data = ..recDataConsulta(codPaciente,fichal,1)
				if fichal=ficha {
					set datad="Consulta Atual"
				}else{
					set datad = "Consulta "_fichal_" ("_$zdate(data,4)_")"
				}
				set colunas(data,fichal)=datad
				set dadosp(desc,fichal) = dados(sequ,fichal)
			}
			
		}
		;
		set listColuna = {}
		do listColuna.%Set("dataField", "Regiao")
		do listColuna.%Set("caption", "Região")
		do listColuna.%Set("width", 200)
		do listColuna.%Set("fixed", 1)
		do arrayColuna.%Push(listColuna)
		set data=""
		for {
			set data = $order(colunas(data),-1) quit:data=""
			set coluna = ""
			for {
				set coluna = $order(colunas(data,coluna),-1) quit:coluna=""
				set datae = colunas(data,coluna)
				set listColuna = {}
				do listColuna.%Set("dataField", coluna_" ")
				do listColuna.%Set("caption", datae)
				do listColuna.%Set("width", 300)
				do listColuna.%Set("alignment", "left")
				do arrayColuna.%Push(listColuna)
			}
		}
		set desc = ""
		for {
			set desc = $order(dadosp(desc)) quit:desc=""
			set linha = {}
			do linha.%Set("Regiao",desc)
			set ficha = ""
			for {
				set ficha = $order(dadosp(desc,ficha)) quit:ficha=""
				set texto = dadosp(desc,ficha)
				set texto = $Replace(texto,"<ul class=ttEstadiamento>","")
				set texto = $Replace(texto,"<ul>","")
				set texto = $Replace(texto,"<li>","")
				set texto = $Replace(texto,"</ul>","")
				set texto = $Replace(texto,"</li>","")
				set texto = $Replace(texto,"<br>",$c(10))
				do linha.%Set(ficha_" ",texto)
			}
			do retorno.%Push(linha)
		}
	}
	set ret = {}
	set ret.header = ..recDescricaoWorkFlow(cid,painelAtual)
	set ret.dataGrid = retorno
	set ret.columns = arrayColuna
	write ret.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaExamesSangue">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	if $piece($get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1)),"~",4) = "" set info = "Consulta Atual"
	;
	set SequenciaData = ""
	set SQL = "SELECT Sequencia "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"' and TipodeWorkflow='13'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set SequenciaData = rs.%Get("Sequencia")
	}
	set arrayDados = []
	set arrayColuna = []
	do ..buscaResultadosLab(codPaciente,cid,painelAtual,ficha,SequenciaData,.dados,.colunas)
	;
	set sai=0
	set coluna=""
	for {
		set coluna = $order(dados(1,coluna)) quit:coluna=""
		set desc = dados(1,coluna)
		if $zcvt(desc,"U")["HEMO" set sai=1 quit
		if $zcvt(desc,"U")["HEMA" set sai=1 quit
		if $zcvt(desc,"U")["PLAQ" set sai=1 quit
	}
	if 'sai{
		Set meuSQL1 = "Select Exame,DataExame, Resultado "
		Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
		Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
		Set meuSQL1 = meuSQL1 _ "And Resultado is not null "
		Set meuSQL1 = meuSQL1 _ "Order By DataExame Desc"
		set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
		while(rs1.%Next()){
			if '$data(^INART(0,rs1.%Get("Exame"))) continue
			if $data(^VARExamess(0,2,rs1.%Get("Exame"))) continue
			set colunas(rs1.%Get("dataExame"))=""
			set dados(1,"OUTROS~"_rs1.%Get("Exame"))=$piece($get(^INART(0,rs1.%Get("Exame"),1)),"~",1)
			set dados(1,"OUTROS~"_rs1.%Get("Exame"),rs1.%Get("dataExame")) = rs1.%Get("resultado")
		}	
	}	
	;
	if $data(colunas){
		set listColuna = {}
		do listColuna.%Set("dataField", "Exame")
		do listColuna.%Set("caption", "Exame")
		do listColuna.%Set("width", 200)
		do listColuna.%Set("fixed", 1)
		do arrayColuna.%Push(listColuna)
		set atual=0
		set ultimaConsulta = ""
		for {
			set ultimaConsulta = $o(^VARPEPPremiumConsulta(0,codPaciente,ultimaConsulta),-1) quit:ultimaConsulta=""
			if $p(^(ultimaConsulta,1),"~",4)'="" quit
		}
		set dataUltimaConsulta	= ""
		if ultimaConsulta'="" {
			set dataUltimaConsulta = +$piece(^VARPEPPremiumConsulta(0,codPaciente,ultimaConsulta,1),"~",4)
			if $get(^VARPEPPremiumConsultaRetrospectiva(0,codPaciente,ultimaConsulta,1)){
				set dataUltimaConsulta = +$piece(^VARPEPPremiumConsultaRetrospectiva(0,codPaciente,ultimaConsulta,1),"~",1)
			}
		}
		set coluna=""
		for {
			set coluna = $order(colunas(coluna),-1) quit:coluna=""
			if coluna["*" {
				set texto = "(Consulta Atual) "_$zdate($piece(coluna,"*",2),4),atual=1
			}else{
				set integra=0
				if (coluna>=dataUltimaConsulta)||(dataUltimaConsulta="") set integra=1
				set texto = $zdate(coluna,4)_$select(integra:"||",1:"")
				set dataUltimaConsulta=9999999999
			}
			set listColuna = {}
			do listColuna.%Set("dataField", coluna_" ")
			do listColuna.%Set("caption", texto)
			do listColuna.%Set("alignment", "right")
			do listColuna.%Set("minwidth", 200)
			do arrayColuna.%Push(listColuna)
		}
		set coluna=""
		for {
			set coluna = $order(dados(1,coluna)) quit:coluna=""
			set desc = dados(1,coluna)
			set linha = {}
			set linha.Exame = desc
			set datas = ""
			for {
				set datas = $order(dados(1,coluna,datas)) quit:datas=""
				set exame = dados(1,coluna,datas)
				do linha.%Set(datas_" ",exame)
			}
			do arrayDados.%Push(linha)
		}
	}else{
		set listColuna = {}
		do listColuna.%Set("dataField", "Exame")
		do listColuna.%Set("caption", "Exame")
		do arrayColuna.%Push(listColuna)
		;
		set arrayDados = []
		set linha = {}
		set linha.Exame = "Não há registro de exames anteriores"
		do arrayDados.%Push(linha)
		
	}
	set ret = {}
	set ret.header = ..recDescricaoWorkFlow(cid,painelAtual)
	set ret.dataGrid = arrayDados
	set ret.columns = arrayColuna
	Write ret.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="buscaResultadosLab">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,SequenciaData,&amp;dados,&amp;colunas</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set composicaoValoresExames = rs.%Get("ComposicaoValoresExames")
		if TipodeWorkFlow'=5,TipodeWorkFlow'=22 continue
		set objExames = $get(^VARExames(0,Nome,1))
		if objExames'=""{
			set desc = $$$VARExamesDescricaodoExame(objExames)
			if unid="" set unid = $$$VARExamesUnidade(objExames)
			set codINART = $$$VARExamesCodigodoExamenoCadastrode(objExames)
			if $data(dados(2,desc)) {
				set sequ = dados(2,desc)
			}else{
				set sequ = $order(dados(1,""),-1)+1
				set dados(2,desc)=sequ
			}
			set dados(1,sequ) = desc
			;
			kill datas
			if codINART'=""{
				Set meuSQL1 = "Select DataExame, Resultado "
				Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
				Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
				Set meuSQL1 = meuSQL1 _ "And Exame = '"_codINART_"' "
				Set meuSQL1 = meuSQL1 _ "And Resultado is not null "
				Set meuSQL1 = meuSQL1 _ "Order By DataExame Desc"
				set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
				while(rs1.%Next()){
					set colunas(rs1.%Get("dataExame"))=""
					set dados(1,sequ,rs1.%Get("dataExame")) = rs1.%Get("resultado")
				}	
			}
		}
		;
		set consulta=""
		for {
			set consulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta)) quit:consulta=""
			set seqConsulta=""
			for {
				set seqConsulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta,seqConsulta)) quit:seqConsulta=""
				set data = ""
				set valores = ..recValorSalvo(codPaciente,cid,consulta,seqConsulta,Sequencia,"")
				if TipodeWorkFlow=22{
					set valores = $piece(valores,"~",1)
					for contx=1:1:$length(valores,";"){
						set data=""
						if SequenciaData'="" set data = $piece(..recValorSalvo(codPaciente,cid,consulta,seqConsulta,SequenciaData,""),"~",1)
						set codExame = $piece($piece(valores,";",contx),"^",1)
						set result   = $piece($piece(valores,";",contx),"^",2)
						if codExame=""||(codExame="null") continue
						set objExames = $get(^INART(0,codExame,1))
						if objExames="" continue
						set desc = $$$INARTSearchName(objExames)
						set unid = ""
						if $data(dados(2,desc)) {
							set sequ = dados(2,desc)
						}else{
							set sequ = $order(dados(1,""),-1)+1
							set dados(2,desc)=sequ
						}
						set dados(1,sequ) = desc
						if data=""||(data="null") {
							set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,consulta,1))
							set data = ..recDataConsulta(codPaciente,consulta,1)							;
						}
						if ficha=consulta set data = "*"_data
						set colunas(data)=""
						set dados(1,sequ,data) = result
						
					}
				}else{
					set valor = $piece(valores,"~",1)
					if composicaoValoresExames=3{
						set unid=""
						if valor=0 set valor="Negativo"
						if valor=1 set valor="Positivo"
					}
					if valor=""||(valor="null") {
						do ..buscaResultadosLab(codPaciente,cid,Sequencia,ficha,SequenciaData,.dados,.colunas)
						continue
					}
					if data=""||(data="null") {
						set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,consulta,1))
						set data = ..recDataConsulta(codPaciente,consulta,1)
					}
					if ficha=consulta set data = "*"_data
					set colunas(data)=""
					set dados(1,sequ,data) = valor_" "_unid
				}
				do ..buscaResultadosLab(codPaciente,cid,Sequencia,ficha,SequenciaData,.dados,.colunas)
			}
		}
		;
	}
]]></Implementation>
</Method>

<Method name="TipoCampoExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodExame</FormalSpec>
<Implementation><![CDATA[
	If ($Data(^VARPerfilExame(0,"EXIBICAO",pCodExame))) Quit 1
	If ($Data(^VARComposicaoExame(0,"EXIBICAO","SEMPERFIL",pCodExame))) Quit 1
	Quit 0
]]></Implementation>
</Method>

<Method name="listaExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	;
	set contador=0
	;set SQL  = "select CodigodoExame,DescricaodoExame from VARExames where company=0 "
	Set SQL  = "Select ItemNumber, SearchName From SQLUser.INART Where Company = 0 "
	if tipo=1{	;Exames Laboratório:
		Set SQL  = SQL _ "And %Upper(ItemType) in (6, 4, 5) "
	}
	if tipo=2{  ;Outros Exames
		Set SQL  = SQL _ "And %Upper(ItemType) = 7 "
	}
	Set SQL  = SQL _ "And %UPPER(HoldReason) in (0, 2) "
	if codigo'="" {
		;set SQL = SQL_" and CodigodoExame='"_codigo_"'"
		set SQL = SQL_" And ItemNumber = '"_codigo_"'"
	}
	if searchValue'="" {
		;set SQL = SQL_" and (%upper(CodigodoExame) like %upper('%"_searchValue_"%') or %upper(DescricaodoExame) like %upper('%"_searchValue_"%')) "
		set SQL = SQL_" and (%upper(ItemNumber) like %upper('%"_searchValue_"%') or %upper(SearchName) like %upper('%"_searchValue_"%')) "
	}
	;
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		;set exame = rsLinha.%Get("CodigodoExame")
		set exame = rsLinha.%Get("ItemNumber")
		;set descr = rsLinha.%Get("DescricaodoExame")
		set descr = rsLinha.%Get("SearchName")
		set linha = {}
		set linha.CodExame = exame
		set linha.DescExame = descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getExameAdd">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set arrayRetorno = []
	Set codExame = $Get(%request.Data("codExame",1))
	if (codExame = "") {
		Do arrayRetorno.%ToJSON()
		Quit $$$OK
	}
	If ($Data(^VARPerfilExame(0,"EXIBICAO",codExame))) {
		Set codPerfil = codExame
		Set seqComposicao = ""
		For {
			Set seqComposicao = $Order(^VARPerfilExame(0,"EXIBICAO",codPerfil,seqComposicao))
			Quit:seqComposicao=""
			
			Set codComposicao = $Piece(^VARPerfilExame(0,"EXIBICAO",codPerfil,seqComposicao,1),"~",1)
			
			Set seqExame = ""
			For {
				Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame))
				Quit:seqExame=""
				
				Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame,1),"~",1)
				
				Set descPerfil = $$SQLGetDescricaoProduto^VARSQL(codPerfil)
				Set descComposicao = $$SQLGetDescricaoProduto^VARSQL(codComposicao)
				;
				set listRetorno = {}
				set listRetorno.id = codPerfil_"||"_codComposicao_"||"_codExame
				set listRetorno.codPerfil = codPerfil
				set listRetorno.descPerfil = descPerfil
				set listRetorno.codComposto = codComposicao
				set listRetorno.descComposto = seqComposicao_" - "_descComposicao
				set listRetorno.codExame = codExame
				set listRetorno.descExame = $$SQLGetDescricaoProduto^VARSQL(codExame)
				set listRetorno.Resultado = ""
				do arrayRetorno.%Push(listRetorno)
			}
		}	
	}Else{
		Set codPerfil = "SEMPERFIL"
		Set codComposicao = ""
		For {
			Set codComposicao = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao))
			Quit:codComposicao=""
			
			Set seqExame = ""
			For {
				Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame))
				Quit:seqExame=""
				
				Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame,1),"~",1)
				
				Set descPerfil = $$SQLGetDescricaoProduto^VARSQL(codPerfil)
				Set descComposicao = $$SQLGetDescricaoProduto^VARSQL(codComposicao)
				;
				set listRetorno = {}
				set listRetorno.id = codPerfil_"||"_codComposicao_"||"_codExame
				set listRetorno.codPerfil = codPerfil
				set listRetorno.descPerfil = descPerfil
				set listRetorno.codComposto = codComposicao
				set listRetorno.descComposto = descComposicao
				set listRetorno.codExame = codExame
				set listRetorno.descExame = $$SQLGetDescricaoProduto^VARSQL(codExame)
				set listRetorno.Resultado = ""
				do arrayRetorno.%Push(listRetorno)
			}
		}	
	}
	Do arrayRetorno.%ToJSON()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getArquivosResultadosExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("codPaciente",1))
	set fileset=##class(%ResultSet).%New("%Library.File:FileSet")
	set empresa 	= 0
	set modulo 		= 15
	set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	if ($extract(dname, $length(dname)) '= "\") {
		set dname = dname _ "\"
	}
	set dname = dname _ paciente
	set sc=fileset.Execute(##class(%File).NormalizeDirectory(dname),"*",,1)
	set array = []
	while fileset.Next(.sc) { 
		set arquivo = $piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\"))
		set name = $piece($piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\")),".",1) 
		set dataExame = $zd($piece(name,"_",1),4)
		set exame = $piece(name,"_",2)
		Set list = {}
		set list.DataDoExame = dataExame
		set list.Exame = exame
		set list.Arquivo = paciente_"/"_arquivo //fileset.Get("Name")
		do array.%Push(list)
	}
	w array.%ToJSON()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="preparaAberturaResultado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set arquivo = $get(%request.Data("arquivo",1))
	set ext = $piece(arquivo,".",$length(arquivo,"."))
	set empresa 	= 0
	set modulo 		= 15
	set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	if '##class(%File).Exists(dname_"\"_arquivo){
		write dname_arquivo
		quit 
	}
	;
	;
	; Recupera o caminho de destino (diretorio temporario)
	set obj = $get(^WWW012(0,0,1))
	set caminhoD = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminhoD, $length(caminhoD)) '= "\") {
		set caminhoD = caminhoD _ "\"
	}
	set caminhoD = caminhoD _ "temp\"
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminhoD)) {
		do ##class(%File).CreateDirectoryChain(caminhoD)
	}
	set fname = %session.SessionId_"_"_$replace($replace($now(),".",""),",","")_"."_ext
	do ##class(%File).CopyFile(dname_"\"_arquivo,caminhoD_fname,1)
	write YGIF_"temp/"_fname
	quit
]]></Implementation>
</Method>

<Method name="ArmResultaExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,pId,pDatadoExame,pValor</FormalSpec>
<Implementation><![CDATA[
	Set perfil 			= $Piece(pId,"||",2)
	Set composto 		= $Piece(pId,"||",3)
	Set exame 			= $Piece(pId,"||",4)
	Set pDatadoExame = $zdh(pDatadoExame,4)

	Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, codPaciente, perfil, composto, exame, pDatadoExame))
	Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
	
	Set status = $$$Save("VARPEPResultado", codPaciente_","_perfil_","_composto_","_exame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)

	Quit status
]]></Implementation>
</Method>

<Method name="ArmResultaExameAdd">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,pId,pDatadoExame,pValor</FormalSpec>
<Implementation><![CDATA[
	Set codPerfil = $Piece(pId,"||",1)
	Set codComposto = $Piece(pId,"||",2)
	Set codExame = $Piece(pId,"||",3)
	Set pDatadoExame = $zdh(pDatadoExame,4)

	Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, codPaciente, codPerfil, codComposto, codExame, pDatadoExame))
	Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
	
	Set status = $$$Save("VARPEPResultado", codPaciente_","_codPerfil_","_codComposto_","_codExame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)

	Quit status
]]></Implementation>
</Method>

<Method name="ImpColunasResultados">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente</FormalSpec>
<Implementation><![CDATA[
	set arrayColuna = []
	set listColuna = {}
	do listColuna.%Set("dataField", "descPerfil")
	do listColuna.%Set("caption", "Perfil")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	do listColuna.%Set("groupIndex", 0)
	do listColuna.%Set("sortOrder", 0)
	do arrayColuna.%Push(listColuna)
	set listColuna = {}
	do listColuna.%Set("dataField", "descComposto")
	do listColuna.%Set("caption", "Composto")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	;do listColuna.%Set("sortOrder", 1)
	do listColuna.%Set("groupIndex", 1)
	do arrayColuna.%Push(listColuna)
	set listColuna = {}
	do listColuna.%Set("dataField", "descExame")
	do listColuna.%Set("caption", "Exame")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	do arrayColuna.%Push(listColuna)
	kill query
	set query($i(contador)) = "Select DataExame From SQLUser.VARPEPResultado Where Company = 0 "
	set query($i(contador)) = "And Paciente = '"_codPaciente_"' Group By DataExame Order By DataExame Desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set listColuna = {}
		do listColuna.%Set("dataField", $zdate(rs.%Get("DataExame"),4))
		do listColuna.%Set("caption", $zdate(rs.%Get("DataExame"),4))
		do listColuna.%Set("allowEditing", 1)
		do listColuna.%Set("cellTemplate", "'colunaData'")
		do arrayColuna.%Push(listColuna)
	}
	quit $replace($replace(arrayColuna.%ToJSON(),"""'",""),"'""","")
	quit arrayColuna.%ToJSON()
]]></Implementation>
</Method>

<Method name="getResultado">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pData</FormalSpec>
<Implementation><![CDATA[
	Set codPaciente = $Piece(pId,"||",1)
	Set codPerfil = $Piece(pId,"||",2)
	Set codComponente = $Piece(pId,"||",3)
	Set codExame = $Piece(pId,"||",4)
	Set pData = $ZDH(pData,4)
	
	Set resultado = $Piece($Get(^VARPEPResultado(0,codPaciente,codPerfil,codComponente,codExame,pData,1)),"~",1)
	
	Set resultado = "<i><b>"_$$SQLGetDescricaoProduto^VARSQL(codExame)_"</b></i><br><br>"_$Replace(resultado,$c(10),"<br>")
	
	Quit resultado
]]></Implementation>
</Method>

<Method name="estadiarPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("paciente",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	if cid = "" write 1 quit
	set hoje = $horolog
	set data = +hoje
	set hora = $piece(hoje,",",2)
	set cont = $order(^VARPEPPremiumEstadiamento(YM,codPaciente,cid,""),-1)+1
	set ^VARPEPPremiumEstadiamento(YM,codPaciente,cid,cont) = ficha_"~"_data_"~"_hora
	set ret = 1
	set retorno = {}
	if $$$ISERR(ret){
		set retorno.status = 0
		set retorno.mensagem = ret
		set retorno.tipo = "error"
	}else{
		set retorno.status 		= 1
		set retorno.mensagem 	= "Estadiamento realizado com sucesso!"
		set retorno.tipo 		= "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="uploadPhoto">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set obj = $get(^WWW012(YM,YM,1))
	set caminho = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminho, $length(caminho)) '= "\") {
		set caminho = caminho _ "\"
	}
	
	set caminho = caminho _ "temp\"
	
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminho)) {
		do ##class(%File).CreateDirectoryChain(caminho)
	}
	
	;
	set fname = %request.MimeData("files[]",1).FileName
	set ext = "jpg" ;$piece(fname,".",2)
	set fname = %session.SessionId_"_"_$replace($replace($now(),".",""),",","")_"."_ext
	Set stream=##class(%FileBinaryStream).%New()
	Set stream.Filename= caminho_fname
	do stream.CopyFrom(%request.MimeData("files[]",1))
	do stream.Flush()
	set rs = stream.SaveStream()
	;
	set arquivoAnt = $get(^mtemp.Arquivo(%session.SessionId))
	if arquivoAnt'=""{
		do ..removeArquivoTemp(arquivoAnt)
	}
	;
	set ^mtemp.Arquivo(%session.SessionId) = fname
	quit $$$OK
]]></Implementation>
</Method>

<Method name="recPhotoTemp">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set arquivo = $get(^mtemp.Arquivo(%session.SessionId))
	set retorno = {}
	set retorno.ImageSRC = YGIF_"temp/"_arquivo
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaSugestaoPrescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set sequencia = $get(%request.Data("sequencia",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,sequencia,""),"~",1)
	set retorno = {}
	if valor="" {
		set retorno.erro = 1
		set retorno.mensagem = "Selecione uma sugestão terapêutica"
	}else{
		set linhaTratamento = $piece(valor,";",1)
		set regime = $piece(valor,";",2)
		;
		set query = "select * from VARPEPPremiumPrescricao "
		set query = query_" where company = 0 and codigodoCID='"_cid_"' and "
		set query = query_" codigodoPaciente = '"_codPaciente_"' and "
		set query = query_" NumerodaConsulta = '"_ficha_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		set codPrescricao=""
		if (rs.%Next()){
			set codPrescricao = rs.%Get("NumerodaPrescricao")
		}
		if codPrescricao'="" do ..limpaPrescricao(codPrescricao)
		;
		set dadosobj = {}
		set niveis = ""
		for {
			set niveis = $order(^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,linhaTratamento,regime,niveis)) quit:niveis=""
			set objTer = $get(^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,linhaTratamento,regime,niveis,1))
			set dadosobj = {}
			set dadosobj.codPrescricao = codPrescricao
			set dadosobj.tratamento = $p($get(^VARWorkFlowTerapiaRegimesTerapeuticosTratamento(YM,cid,linhaTratamento,regime,1)),"~",1)
			set dadosobj.medicamento = $piece(objTer,"~",1)
			set dadosobj.dose = $piece(objTer,"~",2)
			set dadosobj.unidade = $piece(objTer,"~",3)
			set dadosobj.duracao = $piece(objTer,"~",4)
			set dadosobj.frequencia = $piece(objTer,"~",5)
			set dadosobj.via = $piece(objTer,"~",6)
			set dadosobj.observacoes = $piece(objTer,"~",7)
			set dadosobj.data = $zd($horolog,3)
			set retorno = ..addPrescricao(codPaciente, cid, +$horolog, dadosobj,valor)
			set codPrescricao = retorno.codPrescricao
			set retorno.mensagem = codPrescricao
		}
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="limpaPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPrescricao</FormalSpec>
<Implementation><![CDATA[
	set nseq = ""
	for {
		set nseq = $order(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq)) quit:nseq=""
		set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
		if $$$VARPEPPremiumPrescricaoCodigodaRecomendacaoTerap(obj) = "" continue
		set ret = $$$Kill("VARPEPPremiumPrescricao",codPrescricao_","_nseq)	
	}
	quit
]]></Implementation>
</Method>

<Method name="getRecTerapeutica">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("paciente",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	set retorno = []
	set form = {}
	set form.dataField = "preTerapeutica"
	set form.editorType = "dxRadioGroup"
	set form.cssClass	= "labelDetalhes"
	set label = {}
	set label.alignment = "right"
	set label.text = "O paciente é frágil, ou tem alguma co-morbidade significativa?"
	set form.label = label
	set editorOptions = {}
	;set editorOptions.value = valor
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = 1
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = 0
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	;
	set form.editorOptions = editorOptions
	do retorno.%Push(form)
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getLinhasTempo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("paciente",1))
	set cid = $get(%request.Data("codCID",1))
	set data = ""
	for {
		set data = $order(^VARPEPPremiums(YM,1,codPaciente,cid,data),-1) quit:data=""
		write "<tr><td>"_$zdate(data,4)_"</td></tr>"
		set campo = ""
		for {
			set campo = $order(^VARPEPPremiums(YM,1,codPaciente,cid,data,codPaciente,cid,ficha,fichaSeq,campo)) quit:campo=""
			set hora = ""
			for {
				set hora = $order(^VARPEPPremiums(YM,1,codPaciente,cid,data,codPaciente,cid,ficha,fichaSeq,campo,data,hora)) quit:hora=""
				set objPEP = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,campo,data,hora,1))
				set valorC = $$$VARPEPPremiumValorRegistrado(objPEP)
				;
				set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
				set desc    = $$$VARWorkFlowPEPNome(objWF)
				set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
				set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
				;
				if tipo=5{
					set exames=""
					for i=1:1:$length(desc,";"){
						set objExames = $get(^VARExames(0,$piece(desc,";",i),1))
						set descExame = $$$VARExamesDescricaodoExame(objExames)
						if unid="" set unid = $$$VARExamesUnidade(objExames)
						if exames'="" set exames = exames_"/"
						set exames = exames_descExame
					}
					set desc = exames
				}
				if tipo=2||(tipo=11)||(tipo=12) {
					set desc = desc
				}else{
					set desc = desc_" do Paciente = "_$fnumber(valorC,".")_" "_unid
				}
				
				;
				write "<tr><td>&nbsp;&nbsp;&nbsp;"_$ztime(hora)_" - "_desc_"</td><tr>"
			}
		}
	}
	quit
]]></Implementation>
</Method>

<Method name="setToggle">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set painel = $get(%request.Data("painel",1))
	set exibir = $get(%request.Data("exibir",1))
	set paciente = $get(%request.Data("paciente",1))
	set %session.Data("VARPEPPremium_paciente") = paciente
	set ^VARPEPPremiumOpc(YBED,painel) = exibir
	write 1
	quit
]]></Implementation>
</Method>

<Method name="getConsultaRetrospectiva">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente 	= $get(%request.Data("paciente",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set retorno = {}
	set dados = {}
	if $data(^VARPEPPremiumConsultaRetrospectiva(YM,paciente,ficha,1)){
		set data = ^VARPEPPremiumConsultaRetrospectiva(YM,paciente,ficha,1)
		set dados.data = $zdate(data,3)
	}
	set retorno.formData = dados
	set retorno.max = $zdate($horolog-1,3)
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="setConsultaRetrospectiva">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente 	= $get(%request.Data("paciente",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set cid 		= $get(%request.Data("cid",1))
	set data 		= $get(%request.Data("dataConsulta",1))
	set data = $replace(data,"""","")
	set data 		= $zdateh($replace(data,"/","-"),3,,,,,,,"")
	set strStatus = $$$OK
	set retorno = {}
	tstart
	try{
		if data=""{
			kill ^VARPEPPremiumConsultaRetrospectiva(YM,paciente,ficha,1)
		}else{
			set ^VARPEPPremiumConsultaRetrospectiva(YM,paciente,ficha,1)=data
		}
		set consulta 	= $order(^VARPEPPremiumConsulta(YM,paciente,""),-1)
		if consulta = "" set consulta = consulta + 1
		if $piece($get(^VARPEPPremiumConsulta(YM,paciente,consulta,1)),"~",4)'="" {
			set consulta = consulta+1
		}
		if '$data(^VARPEPPremiumConsulta(YM,paciente,consulta,1)){
			set $piece(^VARPEPPremiumConsulta(YM,paciente,consulta,1),"~",1) = cid
			set $piece(^VARPEPPremiumConsulta(YM,paciente,consulta,1),"~",2) = $horolog
			set $piece(^VARPEPPremiumConsulta(YM,paciente,consulta,1),"~",3) = YBED
		}
	}
	catch e {
		set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	if strStatus=$$$OK{
		tcommit
		set retorno.status=1
		set retorno.tipo="success"
		set retorno.mensagem="Consulta alterada com sucesso!"
	}else{
		set retorno.status=0
		set retorno.tipo="error"
		set retorno.mensagem = strStatus
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getPEPPrimario">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente 	= $get(%request.Data("paciente",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set tipoPEP	 	= $get(%request.Data("tipo",1))
	;
	if tipoPEP=3{
		set objAnt 		= $get(^VARPEPAntigos(0,paciente,1))
	}elseif tipoPEP=2{
		set objAnt 		= $get(^VARPEP(0,ficha,1))
	}else{
		set objAnt 		= $get(^VARPEPPremiumPrimario(0,paciente,ficha,1))
	}
	set objPEPPrimario={}
	set objPEPPrimario.historiaSintomas = $$$VARPEPPremiumPrimarioAnamneseHistSintomas(objAnt)
	;
	set molestiasObj = $$$VARPEPPremiumPrimarioAnamneseMolestias(objAnt)
	set molestias=[]
	for i=1:1:$length(molestiasObj,";"){
		if $piece(molestiasObj,";",i)="" continue
		do molestias.%Push($piece(molestiasObj,";",i))
	}
	set objPEPPrimario.molestiasPregressasAtuais		= molestias
	;	
	kill ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId)
	set datasGestacionais = []
	for i=1:1:$length($$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt),";"){
		set dataG = $piece($$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt),";",i)
		if dataG="" continue
		do datasGestacionais.%Push($zdate(dataG,4))
		set ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,dataG) = ""
	}
	set objPEPPrimario.datasGestacionais = datasGestacionais
	if $$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt)'="" {
		set objPEPPrimario.antecedentesGestacionais = 1
	}else{
		If ($$$VARPEPPremiumPrimarioAnamneseQtdeGestacao(objAnt) '= "") {
			set objPEPPrimario.antecedentesGestacionais = 1
		}else{
			set objPEPPrimario.antecedentesGestacionais = 0	
		}
	}
	set objPEPPrimario.qtdeGestacao = $$$VARPEPPremiumPrimarioAnamneseQtdeGestacao(objAnt)
	;
	set objPEPPrimario.historiaMenstrual	= $$$VARPEPPremiumPrimarioAnamneseHistMenstrual(objAnt)
	set objPEPPrimario.descendencia		= $$$VARPEPPremiumPrimarioAnamneseDescendencia(objAnt) 
	set objPEPPrimario.antecedentesCirurgicosTexto	 = $$$VARPEPPremiumPrimarioAnamnesePossuiAntCirurgicos(objAnt) 
	set objPEPPrimario.habitosVicios		= $$$VARPEPPremiumPrimarioAnamneseHabitosVicios(objAnt) 
	
	set medicUtilizadasObj = $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt)
	set medicUtilizadas=[]
	for i=1:1:$length(medicUtilizadasObj,";"){
		if $piece(medicUtilizadasObj,";",i)="" continue
		do medicUtilizadas.%Push($piece(medicUtilizadasObj,";",i))
	}
	;
	set objPEPPrimario.medicacoesUtilizadas	= medicUtilizadas
	
	;set objPEPPrimario.medicacoesUtilizadas	= $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt)
	
	set objPEPPrimario.antecedentesFamiliares	= $$$VARPEPPremiumPrimarioAnamneseAntFamiliares(objAnt) 
	set objPEPPrimario.pa1			= $$$VARPEPPremiumPrimarioAnamnesePA1(objAnt) 
	set objPEPPrimario.pulso		= $$$VARPEPPremiumPrimarioAnamnesePulso(objAnt) 
	set temp = $$$VARPEPPremiumPrimarioAnamneseTemp(objAnt)
	if temp'="" set temp = +temp
	set objPEPPrimario.temp		= temp
	set peso = $$$VARPEPPremiumPrimarioAnamnesePeso(objAnt) 
	if peso'="" set peso = +peso
	set objPEPPrimario.peso		= peso
	set altura = $$$VARPEPPremiumPrimarioAnamneseAltura(objAnt)
	if altura'="" set altura = +altura
	set objPEPPrimario.altura		= altura
	set sc = $$$VARPEPPremiumPrimarioAnamneseSC(objAnt) 
	if sc'="" set sc = +sc
	set objPEPPrimario.sc			=  sc
	set objPEPPrimario.cabecaPescoco	= $$$VARPEPPremiumPrimarioAnamneseCabecaPescoco(objAnt)
	;
	set alturaIMC = altura*altura
    set imc = ""
	if (alturaIMC'=0){
		set imc = +(peso/alturaIMC)
	}
	set objPEPPrimario.imc = imc
	;
	set objPEPPrimario.torax	= $$$VARPEPPremiumPrimarioAnamneseTorax(objAnt) 
	set objPEPPrimario.coracao	= $$$VARPEPPremiumPrimarioAnamneseCoracao(objAnt)
	set objPEPPrimario.pulmoes	= $$$VARPEPPremiumPrimarioAnamnesePulmoes(objAnt)
	set objPEPPrimario.abdomen	= $$$VARPEPPremiumPrimarioAnamneseAbdomen(objAnt)
	set objPEPPrimario.figado	= $$$VARPEPPremiumPrimarioAnamneseFigado(objAnt)
	set objPEPPrimario.baco	= $$$VARPEPPremiumPrimarioAnamneseBaco(objAnt) 
	set objPEPPrimario.mmss	= $$$VARPEPPremiumPrimarioAnamneseMMSS(objAnt) 
	set objPEPPrimario.mmii	= $$$VARPEPPremiumPrimarioAnamneseMMII(objAnt) 
	set objPEPPrimario.conduta	= $$$VARPEPPremiumPrimarioAnamneseConduta(objAnt)
	;
	set hdObj = $$$VARPEPPremiumPrimarioAnamneseHD(objAnt)
	set hd=[]
	for i=1:1:$length(hdObj,";"){
		if $piece(hdObj,";",i)="" continue
		do hd.%Push($piece(hdObj,";",i))
	}
	set objPEPPrimario.hd		= hd
	set objPEPPrimario.pa2		= $$$VARPEPPremiumPrimarioAnamnesePA2(objAnt)
	set objPEPPrimario.antecedentesCirurgicos = $$$VARPEPPremiumPrimarioAnamneseAntCirurgicos(objAnt)
	set objPEPPrimario.paiFalecido = $$$VARPEPPremiumPrimarioAnamnesePaiFalecido(objAnt)
	set cidPaiObj = $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoPai(objAnt)
	set cidPai=[]
	for i=1:1:$length(cidPaiObj,";"){
		if $piece(cidPaiObj,";",i)="" continue
		do cidPai.%Push($piece(cidPaiObj,";",i))
	}
	set objPEPPrimario.cidFalecimentoPai		= cidPai
	set objPEPPrimario.causaFalecimentoPai = $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoP(objAnt)
	set objPEPPrimario.maeFalecida = $$$VARPEPPremiumPrimarioAnamneseMaeFalecida(objAnt)
	set cidMaeObj = $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoMae(objAnt)
	set cidMae=[]
	for i=1:1:$length(cidMaeObj,";"){
		if $piece(cidMaeObj,";",i)="" continue
		do cidMae.%Push($piece(cidMaeObj,";",i))
	}
	set objPEPPrimario.cidFalecimentoMae		= cidMae	
	set objPEPPrimario.causaFalecimentoMae = $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoM(objAnt)
	set objPEPPrimario.outrosFalecimento = $$$VARPEPPremiumPrimarioAnamneseOutrosFalecimento(objAnt)
	set retorno = {}
	set retorno.formData = objPEPPrimario
	;
	if tipoPEP = 3 {
		set retorno.disabled = 1
		set retorno.title = "Registros Anteriores"
	}elseif tipoPEP = 2 {
		set retorno.disabled = 1
		set obj = $get(^MEDAdmission(0,ficha,1))
		set dataAdmissao = $$$MEDAdmissionDateAdmitted(obj)
		set retorno.title = "Prontuário Eletrônico - Admissão "_ficha_" (Realizada em "_$zdate(dataAdmissao,4)_")"
	}else{
		set retorno.disabled = 0
		if +$order(^VARPEPPremiumPrimario(0,paciente,""),-1)>ficha set retorno.disabled = 1
		if 'retorno.disabled{
			set retorno.title = "Prontuário Primário - Consulta "_ficha_" (Consulta Atual)" 
		}else{
			set dataConsulta = $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",2)
			set retorno.title = "Prontuário Primário - Consulta "_ficha_" (Realizada em "_$zdate(dataConsulta,4)_")"
		}
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvarPEPPrimario">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set dados = $get(%request.Data("dados",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	try {
		set objAnt = $get(^VARPEPPremiumPrimario(0,paciente,ficha,1))
		set objDados = [].%FromJSON(dados)
		set $$$VARPEPPremiumPrimarioAnamneseHistSintomas(objAnt) 	= objDados.historiaSintomas
		set molestias = ""
		if objDados.molestiasPregressasAtuais'=""{
			if objDados.molestiasPregressasAtuais.%Size()>0{
				for {
					set molestia = objDados.molestiasPregressasAtuais.%Pop()
					quit:molestia=""
					set:molestias'="" molestias=molestias_";"
					set molestias=molestias_molestia
				}
			}
		}

		set $$$VARPEPPremiumPrimarioAnamneseMolestias(objAnt) 		= molestias
		;
		set datas = ""
		if objDados.datasGestacionais'=""{
			if objDados.datasGestacionais.%Size()>0{
				for {
					set dataG = objDados.datasGestacionais.%Pop()
					quit:dataG=""
					set:datas'="" datas=datas_";"
					set datas=datas_$zdateh(dataG,4)
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt) = datas
		set $$$VARPEPPremiumPrimarioAnamneseQtdeGestacao(objAnt) = objDados.qtdeGestacao
		;
		set $$$VARPEPPremiumPrimarioAnamneseHistMenstrual(objAnt) = objDados.historiaMenstrual
		set $$$VARPEPPremiumPrimarioAnamneseDescendencia(objAnt) = objDados.descendencia
		set $$$VARPEPPremiumPrimarioAnamnesePossuiAntCirurgicos(objAnt) = objDados.antecedentesCirurgicosTexto
		set $$$VARPEPPremiumPrimarioAnamneseHabitosVicios(objAnt)  = objDados.habitosVicios
		set medicUtilizadas = ""
		if objDados.medicacoesUtilizadas'=""{
			if objDados.medicacoesUtilizadas.%Size()>0{
				for {
					set medicUtilizadas1 = objDados.medicacoesUtilizadas.%Pop()
					quit:medicUtilizadas1=""
					set:medicUtilizadas'="" medicUtilizadas=medicUtilizadas_";"
					set medicUtilizadas=medicUtilizadas_medicUtilizadas1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt) = medicUtilizadas
		;set $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt) = objDados.medicacoesUtilizadas
		set $$$VARPEPPremiumPrimarioAnamneseAntFamiliares(objAnt)  = objDados.antecedentesFamiliares
		set $$$VARPEPPremiumPrimarioAnamnesePA1(objAnt)  = objDados.pa1
		set $$$VARPEPPremiumPrimarioAnamnesePulso(objAnt) = objDados.pulso
		set $$$VARPEPPremiumPrimarioAnamneseTemp(objAnt) = objDados.temp
		set $$$VARPEPPremiumPrimarioAnamnesePeso(objAnt) = objDados.peso
		set $$$VARPEPPremiumPrimarioAnamneseAltura(objAnt) = objDados.altura
		set $$$VARPEPPremiumPrimarioAnamneseSC(objAnt) = objDados.sc
		set $$$VARPEPPremiumPrimarioAnamneseCabecaPescoco(objAnt) = objDados.cabecaPescoco
		set $$$VARPEPPremiumPrimarioAnamneseTorax(objAnt) = objDados.torax
		set $$$VARPEPPremiumPrimarioAnamneseCoracao(objAnt) = objDados.coracao
		set $$$VARPEPPremiumPrimarioAnamnesePulmoes(objAnt) = objDados.pulmoes
		set $$$VARPEPPremiumPrimarioAnamneseAbdomen(objAnt) = objDados.abdomen
		set $$$VARPEPPremiumPrimarioAnamneseFigado(objAnt) = objDados.figado
		set $$$VARPEPPremiumPrimarioAnamneseBaco(objAnt) = objDados.baco
		set $$$VARPEPPremiumPrimarioAnamneseMMSS(objAnt) = objDados.mmss
		set $$$VARPEPPremiumPrimarioAnamneseMMII(objAnt) = objDados.mmii
		set $$$VARPEPPremiumPrimarioAnamneseConduta(objAnt) = objDados.conduta
		;
		set hd = ""
		if objDados.hd'=""{
			if objDados.hd.%Size()>0{
				for {
					set hd1 = objDados.hd.%Pop()
					quit:hd1=""
					set:hd'="" hd=hd_";"
					set hd=hd_hd1
					if $data(^VARWorkFlowCID(YM,hd1)) set cid=hd1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseHD(objAnt) = hd
		set $$$VARPEPPremiumPrimarioAnamnesePA2(objAnt) = objDados.pa2
		set $$$VARPEPPremiumPrimarioAnamneseAntCirurgicos(objAnt) = objDados.antecedentesCirurgicos
		set $$$VARPEPPremiumPrimarioAnamnesePaiFalecido(objAnt) = objDados.paiFalecido
		set paiCID = ""
		if objDados.cidFalecimentoPai'=""{
			if objDados.cidFalecimentoPai.%Size()>0{
				for {
					set paiCID1 = objDados.cidFalecimentoPai.%Pop()
					quit:paiCID1=""
					set:paiCID'="" paiCID=paiCID_";"
					set paiCID=paiCID_paiCID1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoPai(objAnt) = paiCID
		set $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoP(objAnt) = objDados.causaFalecimentoPai
		set $$$VARPEPPremiumPrimarioAnamneseMaeFalecida(objAnt) = objDados.maeFalecida
		set maeCID = ""
		if objDados.cidFalecimentoMae'=""{
			if objDados.cidFalecimentoMae.%Size()>0{
				for {
					set maeCID1 = objDados.cidFalecimentoMae.%Pop()
					quit:maeCID1=""
					set:maeCID'="" maeCID=maeCID_";"
					set maeCID=maeCID_maeCID1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoMae(objAnt) = maeCID
		set $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoM(objAnt) = objDados.causaFalecimentoMae 
		set $$$VARPEPPremiumPrimarioAnamneseOutrosFalecimento(objAnt) = objDados.outrosFalecimento
		;
		set $$$VARPEPPremiumPrimarioAlteradoEm(objAnt) = $h
		set $$$VARPEPPremiumPrimarioAlteradoPor(objAnt) = YBED
		set ret = $$$Save("VARPEPPremiumPrimario",paciente_","_ficha,objAnt,1)
		;
		if '$data(^VARPEPPremiumConsulta(YM,paciente,ficha,1)){
			set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",1) = cid
			set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",2) = $horolog
			set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",3) = YBED
		}else{
			if $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",1) = cid{
				set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",1) = cid
			}
		}
		;		
	}
	catch(exception){
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		set retorno.status = 0
		set retorno.mensagem = ret
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvarExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set erro = 0
	set data = +$horolog
	set ret = $$$OK
	set tipo = ""
	for {
		set tipo = $order(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo)) quit:tipo=""
		quit:erro=1
		set code = ""
		for {
			set code = $order(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,code)) quit:code=""
			quit:erro=1
			set reg = $get(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,code))
			set perfil 			= $$$VARPEPExamesNumerodoProtocolodoExame(reg)
			set observacoes 	= $$$VARPEPExamesObservacoes(reg)
			set obj = perfil_"~"_observacoes
			set ret = $$$Save("VARPEPPremiumExames",paciente_","_data_","_code,obj,1)
			set exames(code)=""
			if $$$ISERR(ret) set erro = 1 quit
		}
	}
	if '$$$ISERR(ret){
		set code=""
		for {
			set code = $order(^VARPEPExames(0,paciente,data,code)) quit:code=""
			if $data(exames(code)) continue
			set ret = $$$Kill("VARPEPPremiumExames",passagem_","_data_","_code)
			if $$$ISERR(ret) quit
		}
	}
	set retorno = {}
	if $$$ISERR(ret){
		set retorno.status = 0
		set retorno.mensagem = ret
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getListCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set SQL = "Select CodigodoCID, DescricaoResumida, Categoria, $$GetDescCategoriaCID^VARSQL(Categoria) AS DescCategoria From SQLUser.VARCID"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	while(rs.%Next()){
		;
		set linha = {}
		set linha.CodigodoCID = rs.%Get("CodigodoCID")
		set linha.DescricaoResumida = rs.%Get("DescricaoResumida")
		set linha.DescCategoria = rs.%Get("DescCategoria")
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = []
	set data = ""
	for {
		set data = $order(^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,data)) quit:data=""
		set linha = {}
		set linha.DataO = data
		set linha.Data = $zdate(data,3)
		set linha.DataF = $zdate(data,4)
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
]]></Implementation>
</Method>

<Method name="deletaDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set data = $get(%request.Data("data",1))
	kill ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,data)
]]></Implementation>
</Method>

<Method name="salvaDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set dados = $get(%request.Data("dados",1))
	set objDados = [].%FromJSON(dados)
	set DataGestacional = $zdateh($piece(objDados.DataGestacional,"T",1),3,,,,,,,"")
	set:DataGestacional'="" ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,DataGestacional) = ""
	w 1
	quit
]]></Implementation>
</Method>

<Method name="carregaReqExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set tipoP = $get(%request.Data("tipo",1))	
	if dataPEP="" set dataPEP = +$horolog
	kill ^mtemp.VARProntuarioEletronicoExames(%session.SessionId)
	if dataPEP'=""{
		set code=""
		for {
			set code = $order(^VARPEPPremiumExames(0,codPaciente,dataPEP,code)) quit:code=""
			set obj = $get(^VARPEPPremiumExames(0,codPaciente,dataPEP,code,1))
			set perfil = $$$VARPEPPremiumExamesNumerodoProtocolodoExame(obj)
			set observacoes = $$$VARPEPPremiumExamesObservacoes(obj)
			if (perfil'="") {
				Set tipo = 1			
			}else{
				Set tipo = $piece($get(^INART(0,code,1)),"~",26)
				If (tipo = "4" || (tipo = "5") || (tipo = "6")) Set tipo = 1
				If (tipo = "7") Set tipo = 2
			} 
			set ^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,code) = perfil_"~"_observacoes
		}
	}
	if tipoP=1{
		kill ^mtemp.VARProntuarioEletronicoExames(%session.SessionId)
		set ^mtemp.VARProntuarioEletronicoExames(%session.SessionId,1,"PERFIL1") = ""
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="carregaPrescricoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set codCID = $get(%request.Data("codCID",1))
	if dataPEP="" set dataPEP=+$horolog
	set query = "select * from VARPEPPremiumPrescricao "
	set query = query_" where company = 0 and codigodoCID='"_codCID_"' and "
	set query = query_" codigodoPaciente = '"_codPaciente_"' and "
	set query = query_" numerodaconsulta = '"_ficha_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set linha={}
	if (rs.%Next()){
		set linha.codPrescricao = rs.%Get("NumerodaPrescricao")
		set obj = $get(^VARPEPPremiumPrescricaoTratamento(0,linha.codPrescricao,1))
		set linha.tratamento = $$$VARPEPPremiumPrescricaoTratamentoTratamento(obj)
		set linha.data = $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj)
		if linha.data'="" set linha.data = $zdate(linha.data,3)
	}
	write linha.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	if dataPEP="" set dataPEP=+$horolog
	kill ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId)
	if dataPEP'=""{
		set nseq=""
		for {
			set nseq = $order(^VARPEPPremiumReceituario(0,codPaciente,dataPEP,nseq)) quit:nseq=""
			set obj = $get(^VARPEPPremiumReceituario(0,codPaciente,dataPEP,nseq,1))
			set ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq) = obj
		}
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="addMedicamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set med = $get(%request.Data("med",1))
	set YBED = $get(%request.Data("YBED",1))
	set ^VARMedicamentoReceitado(0,YBED,med,1) = $get(^VARMedicamentoReceitado(0,YBED,med,1))+1
	quit
]]></Implementation>
</Method>

<Method name="recReceitas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = []
	set nseq = ""
	for {
		set nseq = $order(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)) quit:nseq=""
		set receituario = $piece($get(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)),"~",1)
		set removeDataHoraImp = $piece($get(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)),"~",2)
		set linha = {}
		set linha.SeqReceita 	= nseq
		set linha.Receituario 	= receituario
		set linha.removeDataHoraImp = +removeDataHoraImp
		set linha.removeDataHoraImpExt = $select(removeDataHoraImp="1":"Sim",1:"Não")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="addReceita">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("codPaciente",1))
	set nseq = $get(%request.Data("nseq",1))
	set receita = $get(%request.Data("receita",1))
	set removeDataHoraImp = $get(%request.Data("impressao",1))
	set obj = receita_"~"_removeDataHoraImp
	if (receita'=""){ 
		set:nseq="" nseq = $order(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,""),-1)+1
		set ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)=obj
	}
	set data = +$horolog
	set ret = $$$Save("VARPEPPremiumReceituario",paciente_","_data_","_nseq,obj,1)
	write 1
	quit
]]></Implementation>
</Method>

<Method name="deletaReceita">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("codPaciente",1))
	set codigo = $get(%request.Data("codigo",1))
	set data = +$horolog
	if (codigo'=""){ 
		set ret = $$$Kill("VARPEPPremiumReceituario",paciente_","_data_","_codigo)
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="GetUFs">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	do ^WWWVAR
	set contador = 0
	set SQL = " SELECT SearchItem, Text FROM WWW102 where ParameterDescription='BUNDESLAND' and Country='BR' "
	if codigo '= "" set SQL = SQL_"and SearchItem = '"_codigo_"'"
	e  if searchValue'="" set SQL = SQL_"where %upper(SearchItem) like %upper('%"_searchValue_"%') or %upper(Text) like %upper('%"_searchValue_"%')"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	while(rs.%Next()){
		set ID=rs.%Get("SearchItem")
		set Name=rs.%Get("Text")
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = Name
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="limpaTemporarias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set job = %session.SessionId
	do ..removeArquivoTemp("")
	kill ^mtemp.Arquivo(job)
	kill ^mtemp.VARRESUMOCLINICO(YM,job)
	kill ^mtemp.VARRCLIESTADIAMENTO(YM,job)
	kill ^mtemp.VARRCLIWorkFlow(YM,job)
	kill ^mtemp.VARRCLIWorkFlowDetalhe(YM,job)
	kill ^mtemp.VARProntuarioEletronicoExames(job)
	kill ^mtemp.VARProntuarioEletronicoReceitas(job)
	quit
]]></Implementation>
</Method>

<Method name="salvaPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	tstart
	set strStatus=""
	set erro=0
	try{
		set dados 	= $get(%request.Data("dados",1))
		set dados = [].%FromJSON(dados)
		set obj = ""
		set $$$MEDPatientName(obj) = dados.Nome
		set $$$MEDPatientGender(obj) = dados.Sexo
		set $$$MEDPatientDOB(obj) = $zdateh($replace(dados.DataDeNascimento,"/","-"),3,,,,,,,"")
		set $$$MEDPatientSSN(obj) = dados.CPF
		set $$$MEDPatientFREE7(obj) = dados.RG
		set $$$MEDPatientExternalCode(obj) = dados.CNS
		set $$$MEDPatientAllergies(obj) = dados.Alergias
		set $$$MEDPatientPID(obj) = dados.Prontuário
		set $$$MEDPatientFREE1(obj) = dados.NãoInformada
		set $$$MEDPatientFREE9(obj) = dados.Óbito
		set $$$MEDPatientMothersName(obj) = dados.NomeDaMãe
		set $$$MEDPatientMothersDOB(obj) = $zdateh($replace(dados.DataDeNasc,"/","-"),3,,,,,,,"")
		set $$$MEDPatientTel(obj) = dados.Telefone1
		set $$$MEDPatientFREE2(obj) = dados.Telefone2
		set $$$MEDPatientFREE8(obj) = dados.PerdaDeContato
		set $$$MEDPatientEmail(obj) = dados.Email
		set $$$MEDPatientStreet(obj) = dados.Logradouro
		set $$$MEDPatientFREE4(obj) = dados.Número
		set $$$MEDPatientFREE3(obj) = dados.Complemento
		set $$$MEDPatientFREE6(obj) = dados.Bairro
		set $$$MEDPatientZipCode(obj) = dados.CEP
		set $$$MEDPatientCity(obj) = dados.Cidade
		set $$$MEDPatientState(obj) = dados.Estado
		set $$$MEDPatientClassificacao(obj) = dados.Classificação
		;
		set chave = dados.Codigo
		if chave=""{
			set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED),""))
			set $$$MEDPatientMedicoResponsavel(obj) = codProvider
		}
		set:chave="" chave = $$GetNextNumber^COMUtils("MEDPatient","")
		set strStatus = $$$Save("MEDPatient",chave,obj,$$$YES)
		;
		set arquivoAnt = $get(^mtemp.Arquivo(%session.SessionId))
		if arquivoAnt'=""{
			do ..copiaArquivoParaDestino(arquivoAnt,chave)
			do ..removeArquivoTemp(arquivoAnt)
		}

	}
	catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro=err
	}
	set retorno = {}
	if 'erro{
		tcommit
		set retorno.codigo = chave
		set retorno.status = strStatus
	}else{
		trollback
		set retorno.status = strStatus
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recPrescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPrescricao = $get(%request.Data("codPrescricao",1))
	set query = "select * from VARPEPPremiumPrescricao where company = 0 and NumerodaPrescricao='"_codPrescricao_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno = []
	while(rs.%Next()){
		set codMedicamento = rs.%Get("CodigodoMedicamento")
		set codFrequencia = rs.%Get("Frequencia")
		set codVia = rs.%Get("Via")
		set codUnidade = rs.%Get("Unidade")
		set codDuracao = rs.%Get("Duracao")
		
		set medicamento = ""
		if codMedicamento'=""{
			set obj = $get(^VARMedicamento(0,codMedicamento,1))
			set medicamento = $$$VARMedicamentoNome(obj)_" "_$$$VARMedicamentoSubDescricao(obj)_" ("_$$$VARMedicamentoDosagem(obj)_")"
		}
		set frequencia = ""
		if codFrequencia'=""{
			set obj = $get(^MEDFrequency(0,codFrequencia,1))
			set frequencia = $$$MEDFrequencyFrequency(obj)
		}
		set via = ""
		if codVia'=""{
			set obj = $get(^INPARA(0,"MEDROUTEADMIN",SPRACHE,codVia,1))
			set via = $$$INPARAText(obj)
		}
		set unidade = ""
		if codUnidade'=""{
			set obj = $get(^WWW101(0,"EINHEIT",SPRACHE,codUnidade,1))
			set unidade = $$$WWW101Text(obj)
			set unidade = $piece(unidade,"-",2,$length(unidade,"-"))
		}
		set duracao = "Contínuo"
		if +codDuracao'=0{
			set duracao = codDuracao_" dia"_$select(codDuracao>1:"s",1:"")
		}
		if codDuracao=""{
			set duracao=""
		}
		set codDose = rs.%Get("Dose")
		set dose = "Variável"
		if +codDose'=0{
			set dose = codDose
		}
		if codDose=""{
			set dose=""
		}
		
		set linha={}
		set linha.chave = codPrescricao_","_rs.%Get("NumerodaLinha")
		set linha.numerodalinha = rs.%Get("NumerodaLinha")
		set linha.medicamento = medicamento
		set linha.dose = dose
		set linha.frequencia = frequencia
		set linha.duracao = duracao
		set linha.via = via
		set linha.unidade = unidade
		set linha.observacoes = rs.%Get("observacoes")
		set linha.codDose = codDose
		set linha.codMedicamento = codMedicamento
		set linha.codFrequencia = codFrequencia
		set linha.codUnidade = codUnidade
		set linha.codVia = codVia
		set linha.codDuracao = codDuracao
		set linha.continuo=0
		if codDuracao=0 {
			set linha.continuo=1
		}
		set linha.variavel=0
		if codDose=0 {
			set linha.variavel=1
		}

		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="addPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente="",cid="",dataPEP="",dadosobj="",recTerapeutica=""</FormalSpec>
<Implementation><![CDATA[
	set json = 0
	if paciente=""{
		set json = 1
		set paciente = $get(%request.Data("codPaciente",1))
		set cid = $get(%request.Data("codCID",1))
		set ficha = $get(%request.Data("ficha",1))
		set fichaSeq = $get(%request.Data("fichaSeq",1))
		set dataPEP = $get(%request.Data("dataPEP",1))
		set dados = $get(%request.Data("dados",1))
		set dadosobj = [].%FromJSON(dados)
	}
	set codPrescricao = dadosobj.codPrescricao
	if codPrescricao="" set codPrescricao = $order(^VARPEPPremiumPrescricao(0,""),-1)+1
	set nseq=""
	for {
		set nseq = $order(^VARPEPPremiumPrescricao(0,codPrescricao,nseq)) quit:nseq=""
		set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
		if $$$VARPEPPremiumPrescricaoCodigodoMedicamento(obj)=dadosobj.medicamento quit
	}
	if nseq="" set nseq = $order(^VARPEPPremiumPrescricao(0,codPrescricao,""),-1)+1
	;
	if dadosobj.continuo=1{
		set dadosobj.duracao = 0
	}
	if dadosobj.variavel=1{
		set dadosobj.dose = 0
	}
	set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
	set $$$VARPEPPremiumPrescricaoCodigodoPaciente(obj) = paciente
	set $$$VARPEPPremiumPrescricaoCodigodoCID(obj) = cid
	set $$$VARPEPPremiumPrescricaoNumerodaConsulta(obj) = ficha
	set $$$VARPEPPremiumPrescricaoCodigodoMedicamento(obj) = dadosobj.medicamento
	set $$$VARPEPPremiumPrescricaoDose(obj) = dadosobj.dose
	set $$$VARPEPPremiumPrescricaoUnidade(obj) = dadosobj.unidade
	set $$$VARPEPPremiumPrescricaoVia(obj) = dadosobj.via
	set $$$VARPEPPremiumPrescricaoFrequencia(obj) = dadosobj.frequencia
	set $$$VARPEPPremiumPrescricaoDuracao(obj) = dadosobj.duracao
	set $$$VARPEPPremiumPrescricaoObservacoes(obj) = dadosobj.observacoes
	if 'json{
		set $$$VARPEPPremiumPrescricaoCodigodaRecomendacaoTerap(obj) = recTerapeutica
	}
	set ret = $$$Save("VARPEPPremiumPrescricao",codPrescricao_","_nseq,obj,1)
	;
	set obj = $get(^VARPEPPremiumPrescricaoTratamento(YM,codPrescricao,1))
	set $$$VARPEPPremiumPrescricaoTratamentoTratamento(obj) = dadosobj.tratamento
	set data = dadosobj.data
	set data = $replace(data,"/","-")
	set data = $zdh(data,3,,,,,,,"")
	set $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj) = data
	set ret = $$$Save("VARPEPPremiumPrescricaoTratamento",codPrescricao,obj,1)
	;
	set retorno = {}
	set retorno.codPrescricao = codPrescricao
	set retorno.tratamento = dadosobj.tratamento
	if json=0 quit retorno
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvaPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente="",cid="",dataPEP="",dadosobj="",recTerapeutica=""</FormalSpec>
<Implementation><![CDATA[
	set json = 0
	if paciente=""{
		set json = 1
		set paciente = $get(%request.Data("codPaciente",1))
		set cid = $get(%request.Data("codCID",1))
		set ficha = $get(%request.Data("ficha",1))
		set fichaSeq = $get(%request.Data("fichaSeq",1))
		set dataPEP = $get(%request.Data("dataPEP",1))
		set dados = $get(%request.Data("dados",1))
		set dadosobj = [].%FromJSON(dados)
	}
	set codPrescricao = dadosobj.codPrescricao
	if codPrescricao'="" {
		;
		set obj = $get(^VARPEPPremiumPrescricaoTratamento(YM,codPrescricao,1))
		set $$$VARPEPPremiumPrescricaoTratamentoTratamento(obj) = dadosobj.tratamento
		set data = dadosobj.data
		set data = $replace(data,"/","-")
		set data = $zdh(data,3,,,,,,,"")
		set $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj) = data
		set ret = $$$Save("VARPEPPremiumPrescricaoTratamento",codPrescricao,obj,1)
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="deletaPrescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set chave = $get(%request.Data("chave",1))
	if (chave'=""){ 
		set ret = $$$Kill("VARPEPPremiumPrescricao",chave)
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="listaPerfilExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set YBED = $Get(%request.Data("YBED",1))
	set query = "select * from VARExamesPerfil where company=0 and TipodosExames='"_tipo_"' and UsuariocomAcessoaoPerfil='"_YBED_"' "
	if codigo'="" {
		set query = query_" and CodigodoPerfil = '"_codigo_"'"
	}elseif searchValue'=""{
		set query = query_" and (%upper(CodigodoPerfil) like %upper('%"_searchValue_"%') or %upper(Descricao) like %upper('%"_searchValue_"%'))"
	}
	set query = "select * from ("_query_")"
	if skip'="" set query=query_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.Codigo = rs.%Get("CodigodoPerfil")
		set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",linha.Codigo)
		set exames = ""
		while(rsLinha.%Next()){
			set exame = rsLinha.%Get("CodigodoExame")
			set exame = $piece($get(^VARExames(0,exame,1)),"~",1)
			;set exame = $piece($get(^INART(0,exame,1)),"~",1)
			set:exames'="" exames=exames_", "
			set exames = exames_exame
		}
		set linha.Descricao = "("_rs.%Get("CodigodoPerfil")_") "_rs.%Get("Descricao")
		set linha.DescricaoComposta = rs.%Get("Descricao")_" ("_exames_")"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getPerfilExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set obj = ""
	if codigo'="" {
		set obj = $get(^VARExamesPerfil(0,codigo,1))
	}
	set retorno = {}
	set retorno.descricao = $piece(obj,"~",1)
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",codigo)
	set exames = []
	set codExame = ""
	while(rsLinha.%Next()){
		set codExame = rsLinha.%Get("CodigodoExame")
		do exames.%Push(codExame)
	}
	set retorno.exames = exames
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvaExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set edit = $get(%request.Data("edit",1))
	set codExame = $get(%request.Data("codExame",1))
	set dataOld = $get(%request.Data("dataOld",1))
	set dataNew = $get(%request.Data("dataNew",1))
	if codExame'=""{
		if $data(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codExame)){
			write 0
		}else{
			set $piece(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codExame),"~",2) = ""
			write 1
		}
	}else{
		set objExamesNew = [].%FromJSON(dataNew)
		if dataOld'=""{
			set objExamesOld = [].%FromJSON(dataOld)
			if objExamesOld.CodExame '= objExamesNew.CodExame kill ^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,objExamesOld.CodExame)
		}
		if edit'=1,$data(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,objExamesNew.CodExame)){
			write 0
		}else{
			set $piece(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,objExamesNew.CodExame),"~",2) = objExamesNew.Observacoes
			write 1
		}
	}	
	quit
]]></Implementation>
</Method>

<Method name="deletaExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	kill ^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codigo)
	quit
]]></Implementation>
</Method>

<Method name="recExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set retorno = []
	set codExame = ""
	for {
		set codExame = $order(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codExame)) quit:codExame=""
		set observacoes = $piece($get(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codExame)),"~",2)
		;set desc = $piece($get(^VARExames(0,codExame,1)),"~",1)
		If '$data(^INART(0,codExame)) Continue
		set desc = $piece($get(^INART(0,codExame,1)),"~",1)
		set linha = {}
		set linha.CodExame 		= codExame
		set linha.Descricao		= desc
		set linha.Observacoes 	= observacoes
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="addExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set tipo = $get(%request.Data("tipo",1))
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",codigo)
	while(rsLinha.%Next()){
		set exame = rsLinha.%Get("CodigodoExame")
		set $p(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,exame),"~",1) = codigo
	}
	set codExame = ""
	for {
		set codExame = $order(^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codExame)) quit:codExame=""
		set reg = ^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codExame)
		if $piece(reg,"~",1)'="",$piece(reg,"~",1)'=codigo{
			kill ^mtemp.VARProntuarioEletronicoExames(%session.SessionId,tipo,codExame)
		}
	}	
	write 1
	quit
]]></Implementation>
</Method>

<Method name="listaExames2">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	;
	set contador=0
	set SQL1 = "select CodigodoPerfil CodigodoExame,%upper(Descricao) DescricaodoExame ,1 Perfil from VARExamesPerfil"
	set SQL1 = SQL1_" where company=0 and TipodosExames="_tipo
	if codigo'="" {
		set SQL1 = SQL1_" and CodigodoPerfil'"_codigo_"'"
	}
	if searchValue'="" {
		set SQL1 = SQL1_" and (%upper(CodigodoPerfil) like %upper('%"_searchValue_"%') or %upper(Descricao) like %upper('%"_searchValue_"%')) "
	}

	set SQL  = "select CodigodoExame,%upper(DescricaodoExame),'' Perfil from VARExames where company=0 "
	set SQL = SQL_" and %upper(TipodoExame) = '"_tipo_"'"
	if codigo'="" {
		set SQL = SQL_" and CodigodoExame='"_codigo_"'"
	}
	if searchValue'="" {
		set SQL = SQL_" and (%upper(CodigodoExame) like %upper('%"_searchValue_"%') or %upper(DescricaodoExame) like %upper('%"_searchValue_"%')) "
	}
	;
	if skip'=""{
		set meuSelect = "select top "_(skip+take)_" * from ("_SQL1_" union "_SQL_")"
		set meuSelect="select * from ("_meuSelect_" order by DescricaodoExame) where %VID between "_(skip+1)_" and "_(skip+take)

	}else{
		set meuSelect = "select * from ("_SQL1_" union "_SQL_")"
	}	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set exame = rsLinha.%Get("CodigodoExame")
		set descr = rsLinha.%Get("DescricaodoExame")
		set linha = {}
		set linha.CodExame = exame
		set linha.DescExame = "("_exame_") "_descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvaProtocolo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set dados = $get(%request.Data("dados",1))
	set YBED = $get(%request.Data("YBED",1))
	try{
		set dados = [].%FromJSON(dados)
		if dados.exames.%Size()<1{
			set status = "Selecione ao menos um Exame"
			quit
		}
		set codigo = dados.codigo
		set $piece(obj,"~",1) = dados.descricao
		set $piece(obj,"~",2) = tipo
		set $piece(obj,"~",3) = YBED
		if codigo=""{
			set codigo = $$GetNextNumber^COMUtils("VARExamesPerfil","")
		}
		set status = $$$Save("VARExamesPerfil",codigo,obj,1)
		if '$$$ISERR(status){
			kill listExames
			for {
				set exame = dados.exames.%Pop()
				quit:exame=""
				set listExames(exame)=""
				set status = $$$Save("VARExamesPerfilLinha",codigo_","_exame,"",1)
				if $$$ISERR(status) quit
			}
			if '$$$ISERR(status){
				set exame=""
				for {
					set exame = $order(^VARExamesPerfilLinha(0,codigo,exame)) quit:exame=""
					if $data(listExames(exame)) continue
					set status = $$$Kill("VARExamesPerfilLinha",codigo_","_exame)
					if $$$ISERR(status) quit
				}
			}
		}
	}
	catch(exception){
		set status = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(status){
		set retorno.status = 0
		set retorno.mensagem = status
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Protocolo salvo com sucesso!"
		set retorno.codigo = codigo
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="excluirProtocolo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	try{
		set status = $$$Kill("VARExamesPerfil",codigo)
		if '$$$ISERR(status){
			set exame=""
			for {
				set exame = $order(^VARExamesPerfilLinha(0,codigo,exame)) quit:exame=""
				set status = $$$Kill("VARExamesPerfilLinha",codigo_","_exame)
				if $$$ISERR(status) quit
			}
		}
	}
	catch(exception){
		set status = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(status){
		set retorno.status = 0
		set retorno.mensagem = status
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Protocolo removido com sucesso!"
		set retorno.codigo = codigo
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="encerrarConsulta">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente	= $get(%request.Data("codPaciente",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set cid 		= $get(%request.Data("codCID",1))
	set consulta 	= $order(^VARPEPPremiumConsulta(YM,paciente,""),-1)
	if consulta="" set consulta = consulta + 1
	set $piece(^VARPEPPremiumConsulta(YM,paciente,consulta,1),"~",4) = $horolog
	set $piece(^VARPEPPremiumConsulta(YM,paciente,consulta,1),"~",5) = YBED
	set retorno = {}
	set retorno.status 		= 1
	set retorno.mensagem 	= "Consulta Encerrada com Sucesso!"
	set retorno.tipo 		= "success"
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recEstadiamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	set opcao = $get(%request.Data("opcao",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	;
	if paciente="" w 1 quit
	kill ^mtemp.valoresSalvosPEP($job)
	set form = [],dados={},toolEstagioRet = []
	set estpossivel=0
	if cid'=""{
		set codEst = ""
		for {
			set codEst = $order(^VARWorkFlowEstadiamento(YM,cid,codEst)) quit:codEst=""
			set obj = $get(^VARWorkFlowEstadiamento(YM,cid,codEst,1))
			set nome = $$$VARWorkFlowEstadiamentoDescricao(obj)
			;
			set codEstagio = "",toolEstagio="",toolEstagioVetor=[]
			set objEstagio = ..calcEstadiamento(paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao,0)
			set codEstagio = objEstagio.selEstagio
			set toolEstagio = objEstagio.estadiamentoTexto
			set toolEstagioVetor = objEstagio.estadiamentoVetor
			if codEstagio="",toolEstagioVetor'="" {
				set vtPend={}
				set vtPend.codEst = codEst
				set vtPend.vetor = toolEstagioVetor
				do toolEstagioRet.%Push(vtPend)
			}
			set grupoRisco="Estadiam. Pendente"
			if toolEstagio="<ul></ul>" set grupoRisco="Estadiamento Não Calculável"
			set descEst = "Informações pendentes de preenchimento"
			if opcao'=2,$data(^VARPEPPremiumEstadiamento(YM,paciente,cid)),'$data(^VARPEPPremiumEstadiamento(YM,paciente,cid,ficha)){
				if codEstagio="" set (toolEstagio,descEst,grupoRisco)="Não realizado"
			}
			if codEstagio'=""{
				set estpossivel=1
			}			
			if '($data(^VARPEPPremiumEstadiamento(YM,paciente,cid))||(opcao=2)){
				if codEstagio'=""{
					set estpossivel=1
					set codEstagio=""
					set (descEst,grupoRisco)="Estadiam. Possível"
					set toolEstagio=""
				}
			}
			if codEstagio'=""{
				set objEstadiamento = $get(^VARWorkFlowEstadiamento(0,cid,codEst,1))
				set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEstadiamento)
				set objEstagio = $get(^VARWorkFlowEstadiamentoEstagio(0,cid,codEst,codEstagio,1))
				set descEst = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
				set grupoRisco = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
				set descEst = descEstadiamento_" "_descEst_" - "_grupoRisco
			}
			do dados.%Set(codEst,grupoRisco)
			;
			
			set linha = {}
			set linha.dataField=codEst
			set linha.colSpan=9
			set linha.cssClass = "camposEstadiamento"
			set label={}
			set label.text  = nome
			set linha.label = label
			;
			set editorOptions = {}
			set editorOptions.height = 27
			set editorOptions.readOnly = 1
			set linha.editorOptions = editorOptions
			do form.%Push(linha)	
			;
			set linha={}
			set linha.template = "<div id='divEstadiamentoInfo' class='estadiamentoInfo'><div id='esta_"_codEst_"' meuId='"_codEst_"' class='estadiamentoInfoI fa fa-info-circle' texto='"_toolEstagio_"' nomeEst='"_descEst_"' "_$select(codEstagio="":"style='color:gray'",1:"")_"></div></div>"
			do form.%Push(linha)	
			;
		}
	}
	;
	set retorno = {}
	set retorno.form = form
	set retorno.dados = dados
	set retorno.horaEst = "Estadiamento"
	set contF = $order(^VARPEPPremiumEstadiamento(YM,paciente,cid,""),-1)
	if contF'="" {
		set dataE = $zdate($piece(^VARPEPPremiumEstadiamento(YM,paciente,cid,contF),"~",2),4)
		set horaE = $ztime($piece(^VARPEPPremiumEstadiamento(YM,paciente,cid,contF),"~",3),2)
		set retorno.horaEst = "<font style='font-size:12px'>Último Estadiamento ("_dataE_" - "_horaE_")</font>"
	}
	set tool = ""
	if toolEstagioRet.%Size()>0{
		set iterator = toolEstagioRet.%GetIterator()
		for {
			quit:'iterator.%GetNext(.indiceI,.campo)
			if campo.%Size()>0{
				set chave = campo.codEst
				set vetor= campo.vetor
				set iterator2 = vetor.%GetIterator()
				for {
					quit:'iterator2.%GetNext(.indiceI,.campo2)
					if '$data(vetoraux(chave,campo2.Grupo)){
						set cont = $order(vetor(chave,""),-1)+1
						set vetoraux(chave,campo2.Grupo) = cont
					}
					set cont = vetoraux(chave,campo2.Grupo)
					set vetor(chave,cont)=campo2.Grupo
					set linhas = campo2.Linhas
					if linhas.%Size()>0{
						set iterator3 = linhas.%GetIterator()
						for {
							quit:'iterator3.%GetNext(.indiceI,.linha)
							set vetor(chave,cont,linha)=""
						}
					}
				}
			}
		}
	}
	set esta = "estadiamento"
	if $data(^VARPEPPremiumEstadiamento(0,paciente,cid)) {
		set esta = "reentadiamento"	
	}
	set tool=""
	if estpossivel{
		;kill vetor
	}
	if $data(vetor){
		set vetorValido=0
		set tool = tool_"<table><tr>"
		set esta=""
		for {
			set esta = $order(vetor(esta)) quit:esta=""
			set vetorValido=1
			set objEstadiamento = $get(^VARWorkFlowEstadiamento(0,cid,esta,1))
			set desc = $$$VARWorkFlowEstadiamentoDescricao(objEstadiamento)
			set tool = tool_"<td style='vertical-align:top'>"
			set tool = tool_"<table class='tbToolTipEsta'><tr><th colspan=3>Informações pendentes para "_desc_":</th></tr><tr><td><ul class=ttEstadiamento>"
			set cont=""
			for {
				set cont = $order(vetor(esta,cont)) quit:cont=""
				set texto = vetor(esta,cont)
				set tool = tool_"<li>Grupo: "_texto_"</li><ul>"
				set linha = ""
				for {
					set linha = $order(vetor(esta,cont,linha)) quit:linha=""
					set tool = tool_"<li>"_linha_"</li>"
				}
				set tool = tool_"</ul>"
			}
			set tool = tool_"</ul></td></tr></table>"
			set tool = tool_"</td>"
		}
		set:'vetorValido tool=""
	}
	kill ^mtemp.valoresSalvosPEP($job)
	set retorno.toolEstagio = tool	
	set retorno.estadiamentoPossivel = estpossivel		
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="calcEstadiamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao,soEstadiamento=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	if paciente="" quit ""
	set resultado=0
	set selEstagio = "",selCondicao = ""
	set codEstagio = ""
	for {
		set codEstagio = $order(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst,codEstagio)) quit:codEstagio=""
		set estadiamentoTexto = ""
		set resultado=""
		set codCondicao = ""
		for {
			set codCondicao = $order(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao)) quit:codCondicao=""
			quit:resultado="1"
			set resultado=""
			set sequ = ""
			for {
				set sequ = $order(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
				set obj = $get(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
				set campos		= $$$VARWorkFlowEstadiamentoEstagioCondicaoCampos(obj)
				set condicao	= $$$VARWorkFlowEstadiamentoEstagioCondicaoCondicao(obj)
				set valorRef	= $$$VARWorkFlowEstadiamentoEstagioCondicaoValor(obj)
				set legenda		= $$$VARWorkFlowEstadiamentoEstagioCondicaoLegenda(obj)
				set tipo		= +$$$VARWorkFlowEstadiamentoEstagioCondicaoTipo(obj)	
				if tipo=1{
					set valorAcumulado = ""		
					set sai=0	
					for cont=1:1:$length(campos,"|"){
						set campo = $piece(campos,"|",cont)
						if campo="" continue
						if $data(^mtemp.valoresSalvosPEP($job,paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,+opcao)){
							set valor = ^mtemp.valoresSalvosPEP($job,paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,+opcao)
						}else{
							set valor = ..recPontuadores(paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,opcao)
							set ^mtemp.valoresSalvosPEP($job,paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,+opcao) = valor
						}
						if valor="" set sai=1 quit
						set valorAcumulado = valorAcumulado+valor
					}
					if sai set resultado=0 quit
				}else{
					set valorAcumulado = ""
					for cont=1:1:$length(campos,"|"){
						set campo = $piece(campos,"|",cont)
						if campo="" continue
						set objWF = $get(^VARWorkFlowPEP(YM,cid,campo,1))
						if objWF="" continue
						set nome = $$$VARWorkFlowPEPNome(objWF)
						set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
						set hist = 0
						if opcao'=2,$data(^VARPEPPremiumEstadiamento(YM,paciente,cid)) set hist = 1
						set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,dataPEP,hist),"~",1)
						if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
						set retPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,campo,1,hist)
						set flImagem = ..verificaCampoImagem(paciente,cid,dataPEP,campo,hist)
						if flImagem=0,retPais=0 continue
						if flImagem=0,valorC="" continue
						set valorAcumulado = valorAcumulado + valorC
						
					}
				}
				if valorAcumulado="" set resultado=0 quit
				if condicao="="{
					set resultado = valorAcumulado=valorRef
				}
				if condicao="<"{
					set resultado = valorAcumulado<valorRef
				}
				if condicao=">"{
					set resultado = valorAcumulado>valorRef
				}
				if condicao="<>"{
					set resultado = valorAcumulado'=valorRef
				}
				if resultado=0 quit
				;
			}
			if resultado{
				set selEstagio = codEstagio
				set selCondicao = codCondicao
			}
		}
	}
	set estadiamentoTexto = "",estadiamentoVetor=""
	if soEstadiamento=1{
		set retorno = {}
		set retorno.selEstagio = selEstagio
		quit retorno		
	}
	if selEstagio'=""{
		set estadiamentoTexto = ..recToolTipEstagio(paciente,cid,ficha,fichaSeq,codEst,dataPEP,selEstagio,selCondicao,opcao)
	}else{
		set estadiamentoRet = ..recToolTipEstadiamentoPendente(paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao)
		set estadiamentoTexto = estadiamentoRet.Texto
		set estadiamentoVetor = estadiamentoRet.Vetor
	}
	set retorno = {}
	set retorno.selEstagio = selEstagio
	set retorno.estadiamentoTexto = estadiamentoTexto
	set retorno.estadiamentoVetor = estadiamentoVetor
	quit retorno
	;quit selEstagio_"|"_estadiamentoTexto_"|"_estadiamentoVetor
]]></Implementation>
</Method>

<Method name="verificaCampoImagem">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,dataPEP,campo,hist</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set paix 			= campo
	set objPai 			= ""
	for {
		set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
		set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
		set tipoPai	= $$$VARWorkFlowPEPTipodeWorkflow(objPai)
		if tipoPai=7 quit
		if predecessorPai=""{
			set paix=""
			quit
		}
		set paix = predecessorPai
	}
	if paix="" quit 0
	set query = "Select Sequencia from VARWorkFlowPEP where company = 0 and %upper(Predecessor) = '"_predecessorPai_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set ret = 0
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set valorC = $piece(..recValorSalvo(paciente,cid,1,1,Sequencia,dataPEP,hist),"~",1)
		if valorC'="" set ret = 1 quit
	}
	quit ret
]]></Implementation>
</Method>

<Method name="recPontuadores">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,campo,opcao=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set selPontuacao=""
	set pontos = 0
	set sai = 0
	set hist = 0
	if opcao'=2,$data(^VARPEPPremiumEstadiamento(YM,paciente,cid)) set hist = 1
	set codCondicao = ""
	for {
		set codCondicao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,campo,codCondicao)) quit:codCondicao=""
		quit:sai
		set sequ = ""
		for {
			set sequ = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,campo,codCondicao,sequ)) quit:sequ=""
			quit:sai
			set obj = $get(^VARWorkFlowEstPontCondicao(YM,cid,codEst,campo,codCondicao,sequ,1))
			set campos		= $$$VARWorkFlowEstPontCondicaoCampos(obj)
			set condicao	= $$$VARWorkFlowEstPontCondicaoComparador(obj)
			set valorRef	= $$$VARWorkFlowEstPontCondicaoValor(obj)
			set tipo		= +$$$VARWorkFlowEstPontCondicaoTipo(obj)
			set valorAcumulado = 0
			if tipo=0{
				set grava = 0
				for cont=1:1:$length(campos,"|"){
					set campox = $piece(campos,"|",cont)
					if campox="" continue
					set valorComparativo=""
					if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
					set retPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,campox,1,hist)
					if retPais<1{
						continue
						if retPais<0 set sai = 1,pontos=""
						quit
					}
					set grava = 1
					set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
					set desc    = $$$VARWorkFlowPEPNome(objWF)
					set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
					set opcoes	= $$$VARWorkFlowPEPOpcoes(objWF)
					set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
					set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
					set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)

					if composicaoValoresExames>5,composicaoValoresExames<10{
						if valorComparativo'="" {
							set valorComparativo = valorComparativo-1 
						}
					}
					set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,""),"~",1)
					if permitirSelecionarMaisQue=1,valorC="" set valorC=0
					if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
					if valorC = "",retPais=0 set sai = 1,pontos="" quit
					if valorC'="" set pontos = 0
					if valorComparativo'=""{
						if permitirSelecionarMaisQue=1 {
							set valorC = $piece(valorC,";",valorComparativo)
							set valorAcumulado = valorAcumulado + valorC
						}else{
							if valorComparativo=valorC set valorAcumulado = valorAcumulado + 1
						}
					}else{
						set valorAcumulado = valorAcumulado + valorC
					}
				}
				;if 'grava set sai = 1,pontos=""
			}
			if tipo=1{
				kill listEstadiamentos
				set pontos=""
				for cont=1:1:$length(campos,"|"){
					set campox = $piece(campos,"|",cont)
					if campox="" continue
					set estadiamento = $piece(campox,";",1)
					set estagio 	 = $piece(campox,";",2)
					if $data(listEstadiamentos(estadiamento)) {
						set selEstagio = listEstadiamentos(estadiamento)
					}else{
						set ret = ..calcEstadiamento(paciente, cid, ficha,fichaSeq,estadiamento,dataPEP,opcao,1)
						set listEstadiamentos(estadiamento)=ret.selEstagio
						set selEstagio = ret.selEstagio
					}
					if selEstagio'="" set pontos = 0
					if selEstagio=estagio set valorAcumulado = valorAcumulado + 1
				}
				if pontos="" set sai=1
			}
			if tipo=2{
				if campos=1 { ; Idade do Paciente
					set objPaciente = $get(^MEDPatient(YM,paciente,1))
					set dob = $$$MEDPatientDOB(objPaciente)
					if dob'=""{
						set nasc = $zdate(dob,8)
						set hoje = $zdate($horolog,8)
						set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
						if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
						set valorAcumulado = anos
					}
					
				}
			}
			quit:sai
			set pontos=0
			set resultado=""
			if condicao="="{
				set resultado = valorAcumulado=valorRef
			}
			if condicao="<"{
				set resultado = valorAcumulado<valorRef
			}
			if condicao=">"{
				set resultado = valorAcumulado>valorRef
			}
			if condicao="<>"{
				set resultado = valorAcumulado'=valorRef
			}
			if resultado=0 continue
			set selPontuacao = campo
			;
		}
	}
	if selPontuacao'="" set pontos = $piece($get(^VARWorkFlowEstPont(YM,cid,codEst,selPontuacao,1)),"~",2)
	quit pontos
]]></Implementation>
</Method>

<Method name="verificaNivelPais">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,dataPEP,campo,respAcumulado=1,hist=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set objWF = $get(^VARWorkFlowPEP(YM,cid,campo,1))
	set predecessor    = $$$VARWorkFlowPEPPredecessor(objWF)
	set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(objWF)
	if predecessor="" quit respAcumulado
	;
	set objPre = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
	set tipoPre	= $$$VARWorkFlowPEPTipodeWorkflow(objPre)
	
	if tipoPre=1||(tipoPre=8)||(tipoPre=10)||(tipoPre=15){
		quit ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,predecessor,respAcumulado,hist)
	}
	set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,predecessor,dataPEP,hist),"~",1)
	if valorC="" quit ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,predecessor,-1,hist)
	if tipoPre=7{
		if valorC'=1 quit 0
		quit ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,predecessor,respAcumulado,hist)
	}
	if valorC'=opcPredecessor quit 0
	quit ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,predecessor,respAcumulado,hist)
]]></Implementation>
</Method>

<Method name="recToolTipEstagio">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,codEstagio,codCondicao,opcao=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set hist = 0
	if opcao'=2,$data(^VARPEPPremiumEstadiamento(YM,paciente,cid)) set hist = 1
	;
	set estadiamentoTexto = "<ul class=ttEstadiamento>"
	set estadiamentoTexto2 = "<ul class=ttEstadiamento>"
	set sequ = ""
	for {
		set sequ = $order(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
		set obj = $get(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
		set campos		= $$$VARWorkFlowEstadiamentoEstagioCondicaoCampos(obj)
		set condicao	= $$$VARWorkFlowEstadiamentoEstagioCondicaoCondicao(obj)
		set valorRef	= $$$VARWorkFlowEstadiamentoEstagioCondicaoValor(obj)
		set legenda		= $$$VARWorkFlowEstadiamentoEstagioCondicaoLegenda(obj)
		set tipo		= $$$VARWorkFlowEstadiamentoEstagioCondicaoTipo(obj)
		if tipo=1{
			set estadiamentoTexto = ..recToolTipPontuadores(paciente, cid,ficha,fichaSeq, codEst, dataPEP,opcao)
			quit
		}
		if legenda="" continue
		set valorAcumulado = ""
		set detalhe="",contador=0
		for cont=1:1:$length(campos,"|"){
			set campo = $piece(campos,"|",cont)
			if campo="" continue
			;
			if '$data(^VARWorkFlowPEP(YM,cid,campo,1)) continue
			set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
			set desc    = $$$VARWorkFlowPEPNome(objWF)
			set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
			set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
			set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
			;
			set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,dataPEP,hist),"~",1)
			if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
			if tipo=2||(tipo=11) {
				if +valorC=0 continue
				set predecessor    = $$$VARWorkFlowPEPPredecessor(objWF)
				if predecessor'=""{
					set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
					set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
					if tipoPred'=7 {
						set predecessor    = $$$VARWorkFlowPEPPredecessor(objPred)
						if predecessor'=""{
							set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
							set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
							if tipoPred'=7 {
								set contador = contador + 1
								continue
							}
						}else{
							set contador = contador + 1
							continue
						}
					}
					set contador = contador + 1
					set desc    = $$$VARWorkFlowPEPNome(objPred)
					set codImagem = $piece(desc,";",1)
					set codArea = $piece(desc,";",2)
					set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				}
			}
			if tipo=5{
				set exames=""
				for i=1:1:$length(desc,";"){
					set objExames = $get(^VARExames(0,$piece(desc,";",i),1))
					set descExame = $$$VARExamesDescricaodoExame(objExames)
					if unid="" set unid = $$$VARExamesUnidade(objExames)
					if exames'="" set exames = exames_"/"
					set exames = exames_descExame
				}
				set desc = exames
			}
			if detalhe'="" {
				set detalhe=detalhe_", "
			}
			
			if tipo=2||(tipo=11) {
				set detalhe=detalhe_desc
				kill vetor
				for i=1:1:$length(detalhe,", "){
					set posi = $piece(detalhe,", ",i)
					set vetor(posi) = $get(vetor(posi)) + 1
				}
				set detalhe2 = ""
				set posi=""
				for {
					set posi = $order(vetor(posi)) quit:posi=""
					set num = vetor(posi)
					if detalhe2'="" set detalhe2=detalhe2_", "	
					if num=1 set detalhe2=detalhe2_posi
					e  set detalhe2=detalhe2_num_" em "_posi
				}
			}else{
				set detalhe=detalhe_desc_" do Paciente = "_$fnumber(valorC,".")_" "_unid
			}
			if tipo=12 set detalhe=""
		}
		set legenda = $replace(legenda,"<cont>",contador)
		;
		if contador>0 {
			set legenda = $replace(legenda,"<possui>","possuí")
			set legenda = $replace(legenda,"<presenca>","Presença")
		}else{
			set legenda = $replace(legenda,"<possui>","não possuí")
			set legenda = $replace(legenda,"<presenca>","Ausência")
		}
		if detalhe'="" {
			if $get(detalhe2)'="" set legenda=legenda_" <span class=ttEstadiamentoExames>("_detalhe2_")</span>"
			else  set legenda=legenda_" <span class=ttEstadiamentoExames>("_detalhe_")</span>"
		}
		
		if legenda'="" set estadiamentoTexto = estadiamentoTexto_"<li class=ttEstadiamento>"_legenda_"</li>"
		if legenda["não possuí" continue
		if legenda'="" set estadiamentoTexto2 = estadiamentoTexto2_"<li class=ttEstadiamento>"_legenda_"</li>"
	}
	set estadiamentoTexto = estadiamentoTexto_"</ul>"
	quit estadiamentoTexto
]]></Implementation>
</Method>

<Method name="recToolTipPontuadores">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set hist = 0
	if opcao'=2,$data(^VARPEPPremiumEstadiamento(YM,paciente,cid)) set hist = 1
	;
	set texto = ""
	set pontos = 0
	set pontuacao = ""
	for {
		set pontuacao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao)) quit:pontuacao=""
		set selPontuacao=""
		set codCondicao = ""
		for {
			set codCondicao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao,codCondicao)) quit:codCondicao=""
			set sequ = ""
			for {
				set sequ = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao,codCondicao,sequ)) quit:sequ=""
				set obj = $get(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao,codCondicao,sequ,1))
				set campos		= $$$VARWorkFlowEstPontCondicaoCampos(obj)
				set condicao	= $$$VARWorkFlowEstPontCondicaoComparador(obj)
				set valorRef	= $$$VARWorkFlowEstPontCondicaoValor(obj)
				set tipoP		= +$$$VARWorkFlowEstPontCondicaoTipo(obj)
				set legenda		= $$$VARWorkFlowEstPontCondicaoLegendadeExibicao(obj)
				set valorAcumulado = ""
				set toolEst = ""
				if tipoP=0{
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						set valorComparativo=""
						if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
						if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,campox,1,hist)<1 continue
						set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
						set desc    = $$$VARWorkFlowPEPNome(objWF)
						set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set opcoes	= $$$VARWorkFlowPEPOpcoes(objWF)
						set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
						set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
				
						if composicaoValoresExames>5,composicaoValoresExames<10{
							if valorComparativo'="" {
								set valorComparativo = valorComparativo-1 
							}
						}
						set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,dataPEP,hist),"~",1)
						set valorC2 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,dataPEP,hist),"~",2)
						/*set valorC= ""
						set valorC2 = ""
						set ultData = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,dataPEP),-1)
						if ultData'="" {
							set ultHora = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,ultData,""),-1)
							if ultHora'=""{
								set objPEP = $get(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,ultData,ultHora,1))
								set valorC = $$$VARPEPPremiumValorRegistrado(objPEP)
								set valorC2 = $$$VARPEPPremiumValorRegistrado2(objPEP)
							}
						}*/
						if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
						if valorComparativo'=""{
							if permitirSelecionarMaisQue=1 {
								set valorC = $piece(valorC,";",valorComparativo)
								set valorAcumulado = valorAcumulado + valorC
							}else{
								if valorComparativo=valorC set valorAcumulado = valorAcumulado + 1
							}
						}else{
							if valorC="" continue
							set valorAcumulado = valorAcumulado + valorC
						}
					}
				}
				if tipoP=1{
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						
						set estadiamento = $piece(campox,";",1)
						set estagio 	 = $piece(campox,";",2)
						set ret = ..calcEstadiamento(paciente, cid, ficha,fichaSeq,estadiamento,dataPEP,opcao,0)
						if ret.selEstagio=estagio {
							set toolEst = ret.estadiamentoTexto
							set toolEst = $replace(toolEst,"<ul class=ttEstadiamento>","")
							set toolEst = $replace(toolEst,"</ul>","")
							set valorAcumulado = valorAcumulado + 1
							quit
						}
					}
				}
				if tipoP=2{
					if campos=1 { ; Idade do Paciente
						set objPaciente = $get(^MEDPatient(YM,paciente,1))
						set dob = $$$MEDPatientDOB(objPaciente)
						if dob'=""{
							set nasc = $zdate(dob,8)
							set hoje = $zdate($horolog,8)
							set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
							if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
							set valorAcumulado = anos
						}
						
					}
				}
				
				if valorAcumulado="" continue
				set resultado=""
				if condicao="="{
					set resultado = valorAcumulado=valorRef
				}
				if condicao="<"{
					set resultado = valorAcumulado<valorRef
				}
				if condicao=">"{
					set resultado = valorAcumulado>valorRef
				}
				if condicao="<>"{
					set resultado = valorAcumulado'=valorRef
				}
				if resultado=0 quit
				set selPontuacao = pontuacao
				set point = $piece($get(^VARWorkFlowEstPont(YM,cid,codEst,pontuacao,1)),"~",2)
				if tipoP=0{
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						set valorComparativo=""
						if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
						if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,campox,1,hist)<1 continue
						set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
						set desc    = $$$VARWorkFlowPEPNome(objWF)
						set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set opcoes	= $$$VARWorkFlowPEPOpcoes(objWF)
						set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
						set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
						if composicaoValoresExames>5,composicaoValoresExames<10{
							if valorComparativo'="" {
								set valorComparativo = valorComparativo-1 
							}
						}
						set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,dataPEP,hist),"~",1)
						set valorC2 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,dataPEP,hist),"~",2)
						/*set valorC="",valorC2 = ""
						set ultData = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,dataPEP),-1)
						if ultData'="" {
							set ultHora = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,ultData,""),-1)
							if ultHora'=""{
								set objPEP = $get(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,ultData,ultHora,1))
								set valorC = $$$VARPEPPremiumValorRegistrado(objPEP)
								set valorC2 = $$$VARPEPPremiumValorRegistrado2(objPEP)
							}
						}*/
						if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
						if valorComparativo'=""{
							if permitirSelecionarMaisQue=1 {
								set valorC = $piece(valorC,";",valorComparativo)
								set valorAcumulado = valorC
							}else{
								if valorComparativo'=valorC continue 
							}
						}else{
							if valorC="" continue
							set valorAcumulado = valorC
						}
						if tipo=2||(tipo=11) {
							set predecessor    = $$$VARWorkFlowPEPPredecessor(objWF)
							if predecessor'=""{
								set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
								set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
								if tipoPred=7{
									set desc    = $$$VARWorkFlowPEPNome(objPred)
									set codImagem = $piece(desc,";",1)
									set codArea = $piece(desc,";",2)
									set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
								}
							}
						}
						if tipo=5||(tipo=12){
							set exames=""
							for i=1:1:$length(desc,";"){
								set objExames = $get(^VARExames(0,$piece(desc,";",i),1))
								set descExame = $$$VARExamesDescricaodoExame(objExames)
								if unid="" set unid = $$$VARExamesUnidade(objExames)
								if exames'="" set exames = exames_"/"
								set exames = exames_descExame
							}
							set desc = exames
							if opcoes=""{
								set desc = desc_" - "_$fnumber(valorC,".")_" "_unid
							}
							
						}
						if composicaoValoresExames'=""{
							set opcoes = $piece($get(^VARPARA(0,"WORKFLOWVALORES","PT",composicaoValoresExames,1)),"~",1)
							set opcoes = $replace(opcoes,"/","|")
							set valorComparativo = valorComparativo-1
						}
						if composicaoValoresExames>5,composicaoValoresExames<10{
							set desc = "Mutação em "_desc
						}
						if valorComparativo'="",opcoes'=""{
							set vPiece = $piece(opcoes,"|",+valorComparativo)
							set:vPiece'="" desc = desc_" - "_vPiece
						}
						;
						if legenda'="" {
							set legenda = $replace(legenda,"<xx>",$get(valorC))
							set legenda = $replace(legenda,"<yy>",$get(valorC2))
							set desc = legenda
						}
						if texto'[desc{
							set texto = texto_"<li class=ttEstadiamento>"_desc_"</li>"
						}
					}
				}
				if tipoP=1{
					set texto = texto_toolEst
					;for cont=1:1:$length(campos,"|"){
					;	set campox = $piece(campos,"|",cont)
					;	if campox="" continue
					;	set estadiamento = $piece(campox,";",1)
					;	set estagio 	 = $piece(campox,";",2)
					;	set ret = ..calcEstadiamento(paciente, cid, estadiamento)
					;	set estagio = $piece(ret,"|",1)
					;	if estagio="" continue
					;	set estadiamentoD = $piece($get(^VARWorkFlowEstadiamento(YM,cid,estadiamento,1)),"~",1)
					;	set estagioD = $piece($get(^VARWorkFlowEstadiamentoEstagio(YM,cid,estadiamento,estagio,1)),"~",1)
					;	set texto = texto_"<li class=ttEstadiamento>Estadiamento: "_estadiamentoD_" - "_estagioD_"</li>"
					;	quit
					;}
				}
				if tipoP=2{
					set desc = ""
					if legenda'="" {
						set legenda = $replace(legenda,"<xx>",$get(valorC))
						set legenda = $replace(legenda,"<yy>",$get(valorC2))
						set desc = legenda
					}
					set texto = texto_"<li class=ttEstadiamento>"_desc_"</li>"
				}
				
			}
		}
		if selPontuacao{
			set pontos = pontos+$piece($get(^VARWorkFlowEstPont(YM,cid,codEst,pontuacao,1)),"~",2)
		}
	}
	;set texto = "<i class=ttEstadiamento>Pontuação Total: "_pontos_" pontos</i>"_texto
	if texto = "" {
		set texto = "<i class=ttEstadiamento>Pontuação: "_pontos_" ponto</i>"
	}
	quit texto
]]></Implementation>
</Method>

<Method name="recToolTipPontuadoresPendente">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set retVetor = []
	set hist = 0
	if opcao'=2,$data(^VARPEPPremiumEstadiamento(YM,paciente,cid)) set hist = 1
	set estadiamentoTexto = ""
	set codEstagio=""
	for {
		set codEstagio = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio)) quit:codEstagio=""
		set codCondicao=""
		for {
			set codCondicao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio,codCondicao),-1) quit:codCondicao=""
			set sequ = ""
			for {
				set sequ = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
				set obj = $get(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
				;
				set campos		= $$$VARWorkFlowEstPontCondicaoCampos(obj)
				set condicao	= $$$VARWorkFlowEstPontCondicaoComparador(obj)
				set valorRef	= $$$VARWorkFlowEstPontCondicaoValor(obj)
				set tipoP		= +$$$VARWorkFlowEstPontCondicaoTipo(obj)
				set legenda		= $$$VARWorkFlowEstPontCondicaoLegendadeExibicao(obj)

				set contador = 0
				set detalhe = ""
				if tipoP=0{
					for cont=1:1:$length(campos,"|"){
						set campo = $piece(campos,"|",cont)
						if campo="" continue
						;
						set campo=$piece(campo,";",1)
						;
						set retPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,campo,1,hist)
						if retPais=0 continue
						set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
						set desc    = $$$VARWorkFlowPEPNome(objWF)
						set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
						set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,dataPEP,hist),"~",1)
						/*set ultData = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campo,dataPEP),-1)
						if ultData'=""{
							set ultHora = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campo,ultData,""),-1)
							if ultHora'=""{
								set objPEP = $get(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campo,ultData,ultHora,1))
								set valorC = $$$VARPEPPremiumValorRegistrado(objPEP)
							}
						}*/
						if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
						if valorC '="" continue
						if tipo=5||(tipo=12){
							set exames=""
							for i=1:1:$length(desc,";"){
								set objExames = $get(^VARExames(0,$piece(desc,";",i),1))
								set descExame = $$$VARExamesDescricaodoExame(objExames)
								if unid="" set unid = $$$VARExamesUnidade(objExames)
								if exames'="" set exames = exames_"/"
								set exames = exames_descExame
							}
							set desc = exames
						}
						set Caminho=""
						set codAtual = campo
						for {
							if codAtual="" quit
							set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
							set descAtu	= $$$VARWorkFlowPEPNome(objAtu)
							set codNovo= $piece($$$VARWorkFlowPEPPredecessor(objAtu),";",1)
							set Caminho	= descAtu
							if codNovo	="" quit
							set codAtual = codNovo

						}
						;
						set vetor(codAtual) = Caminho
						set:desc'=""&&(codAtual'="6") vetor(codAtual,desc)=""
					}
				}
				if tipoP=1{
					set flagEstad=""
					kill listEstadiamentos
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						set estadiamento = $piece(campox,";",1)
						set estagio 	 = $piece(campox,";",2)
						if $data(listEstadiamentos(estadiamento)) {
							set selEstagio = listEstadiamentos(estadiamento)
						}else{
							set ret = ..calcEstadiamento(paciente, cid, ficha, fichaSeq, estadiamento,dataPEP,opcao,1)
							set selEstagio = ret.selEstagio
							set listEstadiamentos(estadiamento) = selEstagio
						}
						if selEstagio="" set flagEstad = estadiamento
					}
					if flagEstad'=""{
						set objEstadiamento = $get(^VARWorkFlowEstadiamento(0,cid,flagEstad,1))
						set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEstadiamento)
						set vetor("Esta") = "Cálculo de Estadiamento"
						set vetor("Esta","Estadiamento "_descEstadiamento) = ""
					}
				}
			}
		}
	}
	set estadiamentoTexto = estadiamentoTexto_"<ul class=ttEstadiamento>"
	set cami=""
	for {
		set cami = $order(vetor(cami)) quit:cami=""
		set texto = vetor(cami)
		set estadiamentoVetor = {}
		set estadiamentoVetor.Grupo = texto
		set estadiamentoTexto = estadiamentoTexto_"<li>Grupo: "_texto_"</li>"
		set estadiamentoTexto = estadiamentoTexto_"<ul>"
		set estadiamentoLinhas = []
		set desc=""
		for {
			set desc = $order(vetor(cami,desc)) quit:desc=""
			set estadiamentoTexto = estadiamentoTexto_"<li>"_desc_"</li>"
			do estadiamentoLinhas.%Push(desc)
		}
		set estadiamentoVetor.Linhas = estadiamentoLinhas
		set estadiamentoTexto = estadiamentoTexto_"</ul>"
		do retVetor.%Push(estadiamentoVetor)
	}
	
	set estadiamentoTexto = estadiamentoTexto_"</ul>"
	set retorno = {}
	set retorno.Texto = estadiamentoTexto
	set retorno.Vetor = retVetor
	quit retorno
	;quit estadiamentoTexto
]]></Implementation>
</Method>

<Method name="recToolTipEstadiamentoPendente">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set estadiamentoTexto = ""
	set retVetor = []
	set sai = 0
	kill vetor
	set codEstagio=""
	for {
		set codEstagio = $order(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio)) quit:codEstagio=""
		quit:sai
		set codCondicao=""
		for {
			set codCondicao = $order(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao),-1) quit:codCondicao=""
			quit:sai
			set sequ = ""
			for {
				set sequ = $order(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
				quit:sai
				set obj = $get(^VARWorkFlowEstadiamentoEstagioCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
				set campos		= $$$VARWorkFlowEstadiamentoEstagioCondicaoCampos(obj)
				set condicao	= $$$VARWorkFlowEstadiamentoEstagioCondicaoCondicao(obj)
				set valorRef	= $$$VARWorkFlowEstadiamentoEstagioCondicaoValor(obj)
				set tipo		= +$$$VARWorkFlowEstadiamentoEstagioCondicaoTipo(obj)
				set legenda		= $$$VARWorkFlowEstadiamentoEstagioCondicaoLegenda(obj)
				;
				if tipo=1{
					set ret = ..recToolTipPontuadoresPendente(paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao)
					if ret.Vetor.%Size()>0{
						set texto = ret.Texto
						set vetor = ret.Vetor
						set sai=1
						quit
					}
					continue
				}
				;
				set contador = 0
				set detalhe = ""
				for cont=1:1:$length(campos,"|"){
					set campo = $piece(campos,"|",cont)
					if campo="" continue
					;
					set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
					set desc    = $$$VARWorkFlowPEPNome(objWF)
					set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
					set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
					set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
					;
					set hist = 0
					if opcao'=2,$data(^VARPEPPremiumEstadiamento(YM,paciente,cid)) set hist = 1
					set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,dataPEP,hist),"~",1)
					set nivelPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,dataPEP,campo,1,hist)
					if valorC = "",RespostaPadrao'="" set valorC = RespostaPadrao
					if valorC '="",nivelPais>=0 continue
					if tipo=2||(tipo=11) {
						set predecessor    = $$$VARWorkFlowPEPPredecessor(objWF)
						if predecessor'=""{
							set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
							set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
							if tipoPred=7{
								if valorRef="" quit
								set desc    = $$$VARWorkFlowPEPNome(objPred)
								set codImagem = $piece(desc,";",1)
								set codArea = $piece(desc,";",2)
								set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
							}else{
								set predecessor    = $$$VARWorkFlowPEPPredecessor(objPred)
								if predecessor'=""{
									set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
									set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
									if tipoPred=7{
										if valorRef="" quit
										set desc    = $$$VARWorkFlowPEPNome(objPred)
										set codImagem = $piece(desc,";",1)
										set codArea = $piece(desc,";",2)
										set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
									}
								}
							}
							
						}
					}
					if tipo=5||(tipo=12){
						set exames=""
						for i=1:1:$length(desc,";"){
							set objExames = $get(^VARExames(0,$piece(desc,";",i),1))
							set descExame = $$$VARExamesDescricaodoExame(objExames)
							if unid="" set unid = $$$VARExamesUnidade(objExames)
							if exames'="" set exames = exames_"/"
							set exames = exames_descExame
						}
						set desc = exames
					}
					;
					set Caminho=""
					set codAtual = campo
					for {
						if codAtual="" quit
						set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
						set descAtu	= $$$VARWorkFlowPEPNome(objAtu)
						set codNovo= $piece($$$VARWorkFlowPEPPredecessor(objAtu),";",1)
						set Caminho	= descAtu
						if codNovo	="" quit
						set codAtual = codNovo

					}
					;
					if desc'=""{
						set vetor(codAtual) = Caminho
						set:codAtual'=6 vetor(codAtual,desc)=""
					}
				}
			}
			if $data(vetor) quit
		}
		if $data(vetor) quit
	}
	if sai{
		set retorno = {}
		set retorno.Texto = texto
		set retorno.Vetor = vetor
		quit retorno
	}
	;zw vetor
	set estadiamentoTexto = estadiamentoTexto_"<ul class=ttEstadiamento>"
	set cami=""
	for {
		set cami = $order(vetor(cami)) quit:cami=""
		set texto = vetor(cami)
		set estadiamentoVetor = {}
		set estadiamentoVetor.Grupo = texto
		set estadiamentoTexto = estadiamentoTexto_"<li>Grupo: "_texto_"</li>"
		set estadiamentoTexto = estadiamentoTexto_"<ul>"
		set estadiamentoVetorLinhas = []
		set desc=""
		for {
			set desc = $order(vetor(cami,desc)) quit:desc=""
			do estadiamentoVetorLinhas.%Push(desc)
			set estadiamentoTexto = estadiamentoTexto_"<li>"_desc_"</li>"
		}
		set estadiamentoVetor.Linhas = estadiamentoVetorLinhas
		set estadiamentoTexto = estadiamentoTexto_"</ul>"
		do retVetor.%Push(estadiamentoVetor)
	}
	set estadiamentoTexto = estadiamentoTexto_"</ul>"
	set retorno = {}
	set retorno.Texto = estadiamentoTexto
	set retorno.Vetor = retVetor
	quit retorno
]]></Implementation>
</Method>

<Method name="verificaRegrasPainel">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPainel = $get(%request.Data("codPainel",1))
	set subCodPainel = $get(%request.Data("subCodPainel",1))
	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	if dataPEP'=+$horolog {
		set resp = {}
		set resp.status=1
		write resp.%ToJSON()
		quit
	}
	if dataPEP'="" set dataPEP = dataPEP + 1
	set SQL = " SELECT Sequencia,Nome,TipodeWorkflow,ValidacaoLegenda,ValidacaoComparador,ValidacaoTipodeReferenci,ValidacaoValordeReferenc "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"' and ValidacaoValordeReferenc <> ''"
	if subCodPainel'="" set SQL = SQL_" and %upper(OpcaodoPrecedessor) = '"_subCodPainel_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set ret=""
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow = rs.%Get("TipodeWorkflow")
		set ValidacaoLegenda = rs.%Get("ValidacaoLegenda")
		set ValidacaoComparador = rs.%Get("ValidacaoComparador")
		set ValidacaoTipodeReferenci = rs.%Get("ValidacaoTipodeReferenci")
		set ValidacaoValordeReferenc = rs.%Get("ValidacaoValordeReferenc")
		set total = 0
		if ValidacaoTipodeReferenci=1{
			set total = ValidacaoValordeReferenc
		}else{
			for cseq=1:1:$length(ValidacaoValordeReferenc,";"){
				set sequ = $piece(ValidacaoValordeReferenc,";",cseq)
				set resp = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,sequ,dataPEP),"~",1)
				set total = total + resp
			}
		}
		;
		set resp = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,Sequencia,dataPEP),"~",1)
		;
		if TipodeWorkFlow=5{
			set exames=""
			for i=1:1:$length(Nome,";"){
				set objExames = $get(^VARExames(0,$piece(Nome,";",i),1))
				if exames'="" set exames = exames_"/"
				set exames = exames_$$$VARExamesDescricaodoExame(objExames)
			}
			set Nome = exames
		}
		;
		set ValidacaoLegenda = $replace(ValidacaoLegenda,"<sequencia>",$fnumber(resp,"."))
		set ValidacaoLegenda = $replace(ValidacaoLegenda,"<campos>",$fnumber(total,"."))
		if ValidacaoComparador="="{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(+total=+resp) set ret = ValidacaoLegenda
		}
		if ValidacaoComparador=">"{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(total>resp) set ret = ValidacaoLegenda
		}
		if ValidacaoComparador="<"{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(total<resp) set ret = ValidacaoLegenda
		}
		if ValidacaoComparador="<>"{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(total'=resp) set ret = ValidacaoLegenda
		}
	}
	set resp = {}
	set resp.status=1
	if ret'="" {
		set resp.status=0
		set resp.mensagem=ret
	}
	write resp.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recValorSalvo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,sequ,dataPEP,hist=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set valor1 = ""
	set valor2 = ""
	if hist=1{
		set ultSeq = +$order(^VARPEPPremiumEstadiamento(0,codPaciente,cid,""),-1)
		set ficha = $piece($get(^VARPEPPremiumEstadiamento(0,codPaciente,cid,ultSeq)),"~",1)
		set dataPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,codPaciente,cid,ultSeq)),"~",2)
		set horaPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,codPaciente,cid,ultSeq)),"~",3)+1
		set ultData = dataPEPF
		set ultHora = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,ultData,horaPEPF),-1)	
		if ultHora=""{
			set ultData = ultData + 1
			set ultData = +$order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,dataPEPF),-1)
			set ultHora = +$order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,ultData,""),-1)	
		}
		set obj = $get(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,ultData,ultHora,1))
		set valor1 = $$$VARPEPPremiumValorRegistrado(obj)
		set valor2 = $$$VARPEPPremiumValorRegistrado2(obj)
	}else{
		set ultHora = ""
		set ultData = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,""),-1)
		if ultData'=""{
			set ultHora = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,ultData,""),-1)
			if ultHora'=""{
				set obj = $get(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,ultData,ultHora,1))
				set valor1 = $$$VARPEPPremiumValorRegistrado(obj)
				set valor2 = $$$VARPEPPremiumValorRegistrado2(obj)
			}
		}
	}
	quit valor1_"~"_valor2_"~"_ultData_"~"_ultHora
]]></Implementation>
</Method>

<Method name="recPercentual">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set idPainel = $get(%request.Data("idPainel",1))
	set paciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	if paciente=""||(cid="") write 1 quit
	
	if idPainel=""{
		set vetorRet = []
		set idPainel = ""
		for {
			set idPainel = $order(^VARWorkFlowPEP(0,cid,idPainel)) if idPainel="" quit
			set obj = $get(^VARWorkFlowPEP(0,cid,idPainel,1))
			set pred = $$$VARWorkFlowPEPPredecessor(obj)
			if pred'="" continue
			set vetor = ..recFilhos(cid,ficha,fichaSeq,idPainel,"",paciente,dataPEP)
			set total = $piece(vetor,"|",1)
			set resp = $piece(vetor,"|",2)
			set string = $piece(vetor,"|",3)
			set alerta = $piece(vetor,"|",4)
			set alertaTexto = $piece(vetor,"|",5)
			set perc=100
			set:+total'=0 perc = resp*100/total
			if perc>100 set perc = 100
			set retorno = {}
			set retorno.idPainel = idPainel
			set retorno.alerta = alerta
			set retorno.alertaTexto = alertaTexto
			set retorno.percentual = $fnumber(perc,",",2)
			set retorno.pendentes = string
			do vetorRet.%Push(retorno)
		}
		write vetorRet.%ToJSON()
	}else{
		set vetor = ..recFilhos(cid,ficha,fichaSeq,idPainel,"",paciente,dataPEP)
		set total = $piece(vetor,"|",1)
		set resp = $piece(vetor,"|",2)
		set string = $piece(vetor,"|",3)
		set alerta = $piece(vetor,"|",4)
		set alertaTexto = $piece(vetor,"|",5)
		set perc=100
		set:+total'=0 perc = resp*100/total
		if perc>100 set perc = 100
		set retorno = {}
		set retorno.percentual = $fnumber(perc,",",2)
		set retorno.pendentes = string
		set retorno.alerta = alerta
		set retorno.alertaTexto = alertaTexto_"|"_idPainel
		write retorno.%ToJSON()
	}
	quit
]]></Implementation>
</Method>

<Method name="recFilhos">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,ficha,fichaSeq,idPainel,idSubPainel,paciente,dataPEP</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	if idSubPainel="" set idSubPainel = " "
	set Total = 0, Completo = 0, Pendentes = "", alerta = 0, alertaTexto = ""
	set Sequencia = ""
	for {
		set Sequencia = $order(^VARWorkFlowPEPs(0,3,cid,idPainel,idSubPainel,cid,Sequencia)) quit:Sequencia=""
		set objP = $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
		set Tipo = $$$VARWorkFlowPEPTipodeWorkflow(objP)
		set SequenciaBusca = Sequencia
		if Tipo=21{
			set grupoWF = 16,flGrupo=1
			set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,"",(ficha-1),dataPEP)
			if campoPreenchido.valor=""{
				set grupoWF = 15,flGrupo=1
				set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,ficha,fichaSeq,dataPEP)
				set SequenciaBusca = campoPreenchido.sequencia
			}
		}				
	;}
	;set SQL = " SELECT SequenciadeExibicao, Sequencia, Nome, TipodeWorkflow "
	;set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_idPainel_"'"
	;if idSubPainel'="" set SQL = SQL_" and %upper(OpcaodoPrecedessor) = '"_idSubPainel_"'"
	;set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	;set Total = 0, Completo = 0, Pendentes = "", alerta = 0, alertaTexto = ""
	;while(rs.%Next()){
		set sai = 0
		;set Sequencia=rs.%Get("Sequencia")
		;set Tipo = rs.%Get("TipodeWorkflow")
		set respOpcoes=""
		if Tipo'=1,Tipo'=8,Tipo'=10{
			set Total = Total +1
		}
		if Tipo=2||(Tipo=9)||(Tipo=11){
			set ultData = $order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,dataPEP),-1)
			set ultHora = ""
			if ultData'="" set ultHora = $order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,""),-1)
			if ultHora'="" {
				set respOpcoes = $piece(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,ultHora,1),"~",1)
			}else{
				set sai = 1
			}
		}
		set ultData = +$order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,dataPEP),-1)
		set ultHora = +$order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,""),-1)
		if $data(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,ultHora)) {
			set objValor = $get(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,+ultData,+ultHora,1))
			set valor = $$$VARPEPPremiumValorRegistrado(objValor)
			set valor2 = $$$VARPEPPremiumValorRegistrado2(objValor)
			if valor'="" set Completo = Completo+1
			set objWF 	= $get(^VARWorkFlowPEP(0,cid,SequenciaBusca,1))
			set alertMenor = $$$VARWorkFlowPEPAlertaResultadoMenorQue(objWF)
			set alertMaior = $$$VARWorkFlowPEPAlertaResultadoMaiorQue(objWF)
			set alertLocal=""
			if valor'="",alertMenor'="",valor<alertMenor set alerta = 1,alertLocal = "<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valor Informado: <font color=red>"_$fnumber(valor,".")_"</font></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limite para Alerta: <font color=red>Menor que "_$fnumber(alertMenor,".")_"</font></td>"
			if valor'="",alertMaior'="",valor>alertMaior set alerta = 1,alertLocal = "<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valor Informado: <font color=red>"_$fnumber(valor,".")_"</font></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limite para Alerta: <font color=red>Maior que "_$fnumber(alertMaior,".")_"</font></td>"
			if alertLocal'=""{
				set desc = ..recDescricaoWorkFlow(cid,SequenciaBusca)
				set alertaTexto = alertaTexto_"<tr><td>"_desc_"</td>"_alertLocal_"</tr>"
			}
		}else{
			if Tipo=7 {
				set Completo = Completo + 1 
				continue
			}
			if Tipo'=1,Tipo'=8,Tipo'=10{
				set caminho = ""
				set seqDesc = SequenciaBusca
				for {
					set obj 	= $get(^VARWorkFlowPEP(0,cid,seqDesc,1))
					set desc = ..recDescricaoWorkFlow(cid,seqDesc)
					set seqDesc = $$$VARWorkFlowPEPPredecessor(obj)
					quit:seqDesc=""
					;
					set:caminho'="" caminho = " > "_caminho
					set caminho = desc_caminho
				}
				set Pendentes = Pendentes_"<tr><td>"_caminho_"</td></tr>"
			}
		}
		if sai continue
		set vetor = ..recFilhos(cid,ficha,fichaSeq,SequenciaBusca,respOpcoes,paciente,dataPEP)
		set Total = Total + $piece(vetor,"|",1)
		set Completo = Completo + $piece(vetor,"|",2)
		set Pendentes = Pendentes_$piece(vetor,"|",3)
		set alerta = alerta+$piece(vetor,"|",4)
		set alertaTexto = alertaTexto_$piece(vetor,"|",5)
		
	}
	quit Total_"|"_Completo_"|"_Pendentes_"|"_alerta_"|"_alertaTexto
]]></Implementation>
</Method>

<Method name="recPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("codPaciente",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	if codPaciente="" {
		set retorno={}
		set retorno.erro=1
		write retorno.%ToJSON()
		quit
	}
	set obj = $get(^MEDPatient(0,codPaciente,1))
	set nomePaciente = $$$MEDPatientName(obj)
	set sexo = $$$MEDPatientGender(obj)
	set dtNascimento = $$$MEDPatientDOB(obj)
	set alergias = $$$MEDPatientAllergies(obj)
	set prontuario = $$$MEDPatientPID(obj)
	set Telefone = $$$MEDPatientTel(obj)
	set Telefone2 = $$$MEDPatientFREE2(obj)
	set MedicoResponsavel = $$$MEDPatientMedicoResponsavel(obj)
	;
	set YBED1 = YBED
	if YBED1="SILMARADM" set YBED1 = "ERIVALDO"
	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED1),""))
	set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
	if perm'=1{
		set erro=0
		if codProvider="" set erro = 1
		;e  if (codProvider'=MedicoResponsavel&&'$data(^MEDAdmissions(0,300,codProvider,codPaciente))) set erro=1
		if erro{
			set retorno={}
			set retorno.erro=1
			write retorno.%ToJSON()
			quit
		}
	}
	set retorno = {}
	set retorno.codPaciente	= codPaciente
	set retorno.paciente	= nomePaciente
	set retorno.sexo		= sexo
	set idade = ..getIdade(dtNascimento)
	if idade>0 set idadeD = " anos"
	if idade<2 set idadeD = " ano"
	if idade="" set idadeD = ""
	set retorno.idade	 	= ..getIdade(dtNascimento)_idadeD
	;
	set fname = ..copiaArquivoParaTemp(codPaciente)
	;
	set arquivoAnt = $get(^mtemp.ArquivoFotoPEP(%session.SessionId))
	if arquivoAnt'=""{
		do ..removeArquivoTemp(arquivoAnt)
	}
	if fname'=""{
		set ^mtemp.ArquivoFotoPEP(%session.SessionId) = fname
		set retorno.ImageSRC = YGIF_"/temp/"_fname
	}else{
		if sexo=2 set retorno.ImageSRC = YGIF_"/profile_girl.jpg"
		e  set retorno.ImageSRC = YGIF_"/profile.jpg"
	}
	;
	do ..atualizaPEPPrimario(codPaciente)
	set cid = "",desc = ""
	set ficha 	= $order(^VARPEPPremiumConsulta(YM,codPaciente,""),-1)
	if ficha="" set ficha = ficha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1)),"~",4)'="" {
		set ficha = ficha+1
	}else{
		if $piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1)),"~",1)'=""{
			set cid=$piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1)),"~",1)
		}
	}
	;
	if cid=""{
		set obj = $get(^VARPEPPremiumPrimario(YM,codPaciente,ficha,1))
		set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if $data(^VARWorkFlowCID(YM,ccid)) set cid=ccid quit
		}
	}
	set desc = ""
	if cid'=""{
		set desc = "("_cid_") "_$piece($get(^VARCID(0,cid,1)),"~",1)
	}
	;
	set retorno.ficha = ficha
	set retorno.CID 		= desc
	set retorno.CodCID 		= cid
	;
	set query = "Select NumerodaConsulta from VARPEPPremiumConsulta "
	set query = query_" where Company = 0 and %upper(ciddopaciente) = '"_cid_"' and %upper(codigodopaciente)='"_codPaciente_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	kill vetor
	while(rs.%Next()){
		set consulta = rs.%Get("NumerodaConsulta")
		set data = ..recDataConsulta(codPaciente, consulta,1)
		set vetor(data,consulta)=""
	}
	set inicioAtendimento = $order(vetor(""))
	set ultimoAtendimento = $order(vetor(""),-1)
	;
	set retorno.inicioTrat 	= $select(inicioAtendimento="":"-",1:$zdate(inicioAtendimento,4))
	set retorno.ultimoAtend	= $select(ultimoAtendimento="":"-",1:$zdate(ultimoAtendimento,4))
	;
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="atualizaPEPPrimario">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set ficha 	= $order(^VARPEPPremiumConsulta(0,codPaciente,""),-1)
	if ficha="" set ficha = ficha + 1
	if $piece($get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1)),"~",4)'="" {
		set ficha = ficha+1
	}
	;
	set cid=""
	set ultFicha = $o(^VARPEPPremiumPrimario(0,codPaciente,""),-1)
	if ultFicha'=""{
		set obj = $get(^VARPEPPremiumPrimario(0,codPaciente,ultFicha,1))
		set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if $data(^VARWorkFlowCID(0,ccid)) set cid=ccid quit
		}
	}
	;
	set ultimaDataPEPPrimario=""
	if ultFicha'=""{
		set objPep = $get(^VARPEPPremiumPrimario(0,codPaciente,ultFicha,1))
		set ultimaDataPEPPrimario = $piece(objPep,"~",150)
		if $piece(objPep,"~",152)'="" set ultimaDataPEPPrimario = $piece(objPep,"~",152)
		if ultFicha<ficha||('$data(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))){
			set $piece(objPep,"~",150) = $horolog
			set $piece(objPep,"~",151) = "AUTO"
			set $piece(objPep,"~",152) = ""
			set $piece(objPep,"~",153) = ""
			set ret = $$$Save("VARPEPPremiumPrimario",codPaciente_","_ficha,objPep,1)
		}
	}
	;
	set query($i(contador)) = "select Top 1 DateAdmitted,VARPEP.Admissao "
	set query($i(contador)) = "from MEDAdmission, VARPEP "
	set query($i(contador)) = "where MEDAdmission.company=0 and VARPEP.company=0 and"
	set query($i(contador)) = "MEDAdmission.Patient='"_codPaciente_"' and"
	if ultimaDataPEPPrimario'="" set query($i(contador)) = "DateAdmitted>"_ultimaDataPEPPrimario_" and"
	set query($i(contador)) = "MEDAdmission.AdmissionID=VARPEP.admissao"
	set query($i(contador)) = "Order by DateAdmitted desc, TimeAdmitted desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno=[]
	while(rs.%Next()){
		set ultimoPEP = rs.%Get("Admissao")
		set DateAdmitted = rs.%Get("DateAdmitted")
		set nobj = $get(^VARPEP(0,ultimoPEP,1))
		set $piece(nobj,"~",150) = $horolog
		set $piece(nobj,"~",151) = "AUTO"
		set $piece(nobj,"~",152) = ""
		set $piece(nobj,"~",153) = ""
		;
		if cid'=""{
			set cids = $$$VARPEPPremiumPrimarioAnamneseHD(nobj)
			set achou=0
			for i=1:1:$length(cids,";"){
				set ccid = $piece(cids,";",i)
				if ccid=cid set achou=1 quit
			}
			if 'achou {
				set cids = cids_";"_cid
				set $$$VARPEPPremiumPrimarioAnamneseHD(nobj) = cids
			}
		}
		;
		set data = +$horolog
		set ret = $$$Save("VARPEPPremiumPrimario",codPaciente_","_ficha,nobj,1)
		quit
	}
	quit 1
]]></Implementation>
</Method>

<Method name="carregaLinhaTempo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set cid = $get(%request.Data("codCID",1))
	;
	if paciente=""||(cid=""){
		write 1
		quit
	}
	set query = "Select NumerodaConsulta from VARPEPPremiumConsulta "
	set query = query_" where Company = 0 and %upper(ciddopaciente) = '"_cid_"' and %upper(codigodopaciente)='"_paciente_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	set hoje=0
	set dias = ""
	set retorno = []
	set ficha 	= $order(^VARPEPPremiumConsulta(YM,paciente,""),-1)
	if ficha="" set ficha = ficha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,paciente,ficha,1)),"~",4)'="" {
		set ficha = ficha+1
	}
	set FichadeAtendimento = 0
	kill vetor
	while(rs.%Next()){
		set FichadeAtendimento = rs.%Get("NumerodaConsulta")
		set data = ..recDataConsulta(paciente, FichadeAtendimento,1)
		set vetor(data,FichadeAtendimento)=""
	}
	set datac=""
	for {
		set datac = $order(vetor(datac)) quit:datac=""
		set FichadeAtendimento=""
		for {
			set FichadeAtendimento=$order(vetor(datac,FichadeAtendimento)) quit:FichadeAtendimento=""
			set data = datac
			if data=+$horolog set hoje = 1
			set dias = dias + 1
			;
			set linha = {}
			if ficha=FichadeAtendimento{
				set hoje=+$horolog
				set data = ""
				set linha.data = "Consulta "_FichadeAtendimento_" (em atendimento)"
				set linha.valorExibicao = "Consulta "_FichadeAtendimento_" (em atendimento)"
			}else{
				set linha.valorExibicao = "Consulta "_FichadeAtendimento_" (realizada "_$select((data=+$horolog):"hoje",1:" em "_$zdate(data,4))_")"
				set linha.data = "Consulta "_FichadeAtendimento_" (realizada em "_$zdate(data,4)_")"
			}
			set linha.valorOriginal = data
			set linha.fichaOriginal = FichadeAtendimento
			do retorno.%Push(linha)
		}
	}
	if ficha>FichadeAtendimento{
		set dias = dias + 1
		set linha = {}
		set linha.data = "Consulta "_ficha_" (em atendimento)"
		set linha.valorOriginal = +$horolog
		set linha.fichaOriginal = ficha
		set linha.valorExibicao = "Consulta "_ficha_" (em atendimento)"
		do retorno.%Push(linha)
		set hoje=1
	}
	;
	if 'hoje{
		set dias = dias + 1
		set data = $zdate($horolog,4)
		set linha = {}
		set linha.data = "Consulta "_ficha_" (em atendimento)"
		set linha.valor = 0
		set linha.valorOriginal = +$horolog
		set linha.fichaOriginal = 1
		set linha.valorExibicao = "Hoje"
		do retorno.%Push(linha)
	}
	;write retorno.%ToJSON()
	set retornoDias = {}
	set retornoDias.datas = retorno
	set retornoDias.dias = dias
	write retornoDias.%ToJSON() 
	quit
]]></Implementation>
</Method>

<Method name="carregaAtendimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set layout = $get(%request.Data("layout",1))
	set cid = $get(%request.Data("codCID",1))
	set fichaDiagnostico = $get(%request.Data("fichaDiagnostico",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	if cid'="" {
		if layout=2 {
			set array = ..carregaAtendimentoMenu(paciente,cid,ficha,fichaSeq,dataPEP,"",fichaDiagnostico,0) 
			set obj = $get(^VARWorkFlowCID(0,cid,1))
			set titulo = $$$VARWorkFlowCIDDescricao(obj)
			if $data(^VARPEPPremiumConsultaRetrospectiva(0,paciente,ficha,1)){
				set data = $piece(^VARPEPPremiumConsultaRetrospectiva(0,paciente,ficha,1),"~",1)
				set titulo = titulo_ "<br><font style='font-weight:600;color:yellow;'>Consulta Referente à "_$zdate(data,4)
			}
			set retorno = {}
			set retorno.titulo = titulo
			set retorno.array = array
			write $replace($replace(retorno.%ToJSON(),"'""",""),"""'","")
			quit
		}
		set SQL = " SELECT SequenciadeExibicao, Sequencia, Nome, TipodeWorkflow,Predecessor,Icone "
		set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
		if layout=1 set SQL=SQL_" and %upper(Predecessor) = ' '"
		set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
		set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
		set array = [],arrayDestaque = [],arrayBaixo = []
		set Total = 0
		while(rs.%Next()){
			set SequenciadeExibicao=rs.%Get("SequenciadeExibicao")
			set Sequencia=rs.%Get("Sequencia")
			set Predecessor=rs.%Get("Predecessor")
			set Nome=rs.%Get("Nome")
			set TipodeWorkflow=rs.%Get("TipodeWorkflow")
			set Icone=rs.%Get("Icone")
			if Sequencia=1399 continue
			;
			set linha = {}
			set linha.ID 		= Sequencia
			set linha.Caption 	= Nome
			set linha.Tipo 		= TipodeWorkflow
			set linha.Icone		= Icone
			set:Predecessor'="" linha.ParentID	= Predecessor
			;
			if TipodeWorkflow=15||(TipodeWorkflow=19){
				if TipodeWorkflow'=19 continue
				do arrayDestaque.%Push(linha)
			}elseif TipodeWorkflow=18{
				set linha = ..recPainel(Sequencia,"",paciente,cid,ficha,fichaSeq,dataPEP,1)
				do arrayBaixo.%Push(linha.formul.%Get(0))
			}else{
				do array.%Push(linha)
			}
		}
	}
	set retorno = {}
	if cid'=""{
		set obj = $get(^VARWorkFlowCID(0,cid,1))
		set titulo = $$$VARWorkFlowCIDDescricao(obj)
		if $data(^VARPEPPremiumConsultaRetrospectiva(0,paciente,ficha,1)){
			set data = $piece(^VARPEPPremiumConsultaRetrospectiva(0,paciente,ficha,1),"~",1)
			set titulo = titulo_ " <font style='font-weight:600;color:yellow'> - Consulta Referente à "_$zdate(data,4)
		}
		set retorno.titulo = titulo
		set retorno.array = array
		set retorno.arrayDestaque = arrayDestaque
		set retorno.arrayBaixo = arrayBaixo
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaAtendimentoMenu">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,dataPEP,predecessor,fichaDiagnostico,contador</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	if predecessor="" set predecessor = " "
	set SQL = " SELECT Sequencia, Nome, TipodeWorkflow,Predecessor,Icone "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	set SQL = SQL_" and %upper(Predecessor) = '"_predecessor_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set grupoOn = 0
	while(rs.%Next()){
		set Sequencia=rs.%Get("Sequencia")
		set Nome=rs.%Get("Nome")
		set TipodeWorkflow=rs.%Get("TipodeWorkflow")
		set Predecessor = rs.%Get("Predecessor")
		set Icone = rs.%Get("Icone")
		;
		if fichaDiagnostico=1,TipodeWorkflow=19 continue
		if fichaDiagnostico=2,TipodeWorkflow=15 continue
		;
		if (TipodeWorkflow=3)||(TipodeWorkflow=5)||(TipodeWorkflow=7)||(TipodeWorkflow=9)||(contador>2){
			set array = []
			quit
		}
		set objRet = ..recValorSalvo(paciente,cid,ficha,fichaSeq,Sequencia,dataPEP)
		set valor = $piece(objRet,"~",1)
		set valor2 = $piece(objRet,"~",2)
		/*set data = +$order(^VARPEPPremium(0,paciente,cid,Sequencia,dataPEP),-1)
		set hora = +$order(^VARPEPPremium(0,paciente,cid,Sequencia,data,""),-1)
		set obj = $get(^VARPEPPremium(0,paciente,cid,Sequencia,data,hora,1))
		set valor = $$$VARPEPPremiumValorRegistrado(obj)
		set valor2 = $$$VARPEPPremiumValorRegistrado2(obj)*/
		;
		set edita = 1
		set ultFicha 	= $order(^VARPEPPremiumConsulta(0,paciente,""),-1)
		if ultFicha="" set ultFicha = ultFicha + 1
		if $piece($get(^VARPEPPremiumConsulta(0,paciente,ultFicha,1)),"~",4)'="" {
			set ultFicha = ultFicha+1
		}
		if ficha<ultFicha set edita=0
		;
		set linha = {}
		set linha.ID 		= Sequencia
		set linha.Caption 	= Nome
		set linha.Tipo 		= +TipodeWorkflow
		set linha.Predecessor = Predecessor
		set linha.Edita = +edita
		set linha.closeMenuOnClick = "'false'"
		set linha.selectable = "'false'"
		set linha.valor1 = valor
		set linha.valor2 = valor2
		set linha.icon = Icone
		if TipodeWorkflow=2||(TipodeWorkflow=11){
			set linha.template = "'menusTemplate'"
		}
		if Predecessor=""{
			set linha.template = "'menusTemplate'"
		}
		if TipodeWorkflow=4{
			set linha.template = "'menusTemplate'"
		}
		if ..verificaNivelPais(paciente, cid, ficha,fichaSeq,dataPEP, Sequencia)<1 set linha.disabled="'true'"
		if TipodeWorkflow'=15,TipodeWorkflow'=19 {
			set filhos = ..carregaAtendimentoMenu(paciente,cid,ficha,fichaSeq,dataPEP,Sequencia,fichaDiagnostico,contador+1)
			if filhos.%Size()>0{	
				set linha.items = filhos
				
			}
		}
		set sqlFilhos = "select top 1 * from VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_Sequencia_"'"
		set rsFilho = ##class(%SQL.Statement).%ExecDirect("",sqlFilhos)
		set linha.temFilhos = 1
		if 'rsFilho.%Next() set linha.temFilhos = 0

		if TipodeWorkflow=15{
			continue
			set:'grupoOn linha.beginGroup = "'true'"
			set linha.template = "'menusTemplate'"
			set grupoOn = 1
		}
		if TipodeWorkflow=19{
			set:'grupoOn linha.beginGroup = "'true'"
			set linha.template = "'menusTemplate'"
			set grupoOn = 1
		}
		if TipodeWorkflow=17{
			set linha.disabled="'false'"
			set linha.opcao = 0
		}
		;
		do array.%Push(linha)
	}
	quit array
]]></Implementation>
</Method>

<Method name="limpaPainel">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente 	= $get(%request.Data("paciente",1))
	set cid	 	= $get(%request.Data("codCID",1))
	set idPainel 	= $get(%request.Data("idPainel",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set ficha 	= $get(%request.Data("ficha",1))
	set nedita=0
	set ultFicha 	= $order(^VARPEPPremiumConsulta(YM,paciente,""),-1)
	if ultFicha="" set ultFicha = ultFicha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,paciente,ultFicha,1)),"~",4)'="" {
		set ultFicha = ultFicha+1
	}
	if ficha<ultFicha set nedita=1
	set retorno={}
	if nedita{
		set retorno.erro=1
		set retorno.mensagem="Não é possível excluir dados de consultas passadas"
	}else{
		d ..limpaPainelExecute(paciente,cid,idPainel,dataPEP,ficha)
	}
	write retorno.%ToJSON()
	quit
	;
]]></Implementation>
</Method>

<Method name="limpaPainelExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,codPainel,dataPEP,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia=rs.%Get("Sequencia")
		set TipodeWorkFlow=rs.%Get("TipodeWorkFlow")
		;
		if TipodeWorkFlow=21{
			set grupoWF = 16,flGrupo=1
			set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,"",(ficha-1),dataPEP)
			if campoPreenchido.valor=""{
				set grupoWF = 15,flGrupo=1
				set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,ficha,1,dataPEP)
				set Sequencia = campoPreenchido.sequencia
			}
		}				
		;
		do ..salvaPainel(paciente,Sequencia,"",cid,ficha,1,$select(dataPEP'="":dataPEP-1,1:dataPEP))
		do ..limpaPainelExecute(paciente,cid,Sequencia,dataPEP,ficha)
	}
]]></Implementation>
</Method>

<Method name="recPainelIrmao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente 	= $get(%request.Data("paciente",1))
	set idPainel 	= $get(%request.Data("idPainel",1))
	set cid	 	= $get(%request.Data("codCID",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set objWS = $get(^VARWorkFlowPEP(YM,cid,idPainel,1))
	set SequenciadeExibicao	= $$$VARWorkFlowPEPSequenciadeExibicao(objWS)
	set Precedessor			= $$$VARWorkFlowPEPPredecessor(objWS)
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_Precedessor_"'"
	set SQL = SQL_" and SequenciadeExibicao > "_SequenciadeExibicao_" "
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set Sequencia = "",predecessor=""
	if rs.%Next(){
		set Sequencia=rs.%Get("Sequencia")
		set predecessor    = rs.%Get("Predecessor")
	}
	if predecessor="" set Sequencia = ""
	set retorno = {}
	set retorno.sequencia = Sequencia
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recPainelName">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente 	= $get(%request.Data("paciente",1))
	set idPainel 	= $get(%request.Data("idPainel",1))
	set cid	 		= $get(%request.Data("codCID",1))
	set abas 		= $get(%request.Data("abas",1))
	;
	;if abas>0 {
	;	set objWS 		= $get(^VARWorkFlowPEP(YM,cid,idPainel,1))
	;	set pred		= $$$VARWorkFlowPEPPredecessor(objWS)
	;	if pred'=""{
	;		set idPainel	= pred
	;		set objWS 		= $get(^VARWorkFlowPEP(YM,cid,idPainel,1))
	;	}
	;}
	set desc = ..recDescricaoWorkFlow(cid,idPainel)
	set retorno={}
	set retorno.descricao = desc
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recPainel">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPainel="",codOpcaoPainel="",codPaciente="",cid="",ficha="",fichaSeq="",dataPEP="",interno="",layout=1,codIDMenu=0</FormalSpec>
<Implementation><![CDATA[
	new achou,AlertaResultadoMaiorQue,AlertaResultadoMenorQue,array,blocos,blocosL,blocosR,botao,buttonOptions,caminho,caminhoC,caminhoV,campo,campoPreenchido,campoSel,camposPendentes,camposTitle,cod,codArea,codEscolhaPainel,codImagem
	new codRegime,composicao,ComposicaoValoresExames,cont,dataAnt,dataAntX,dataF,desc,descC,dxNumberGrupo,ecog,editorOptions,elementAttr,exames,ExamesUnidadedeExibicao,febre,fim,flExames,flGrupo
	new flImagem,flL,form,form1,formF,formP,formul,formulDados,formulF,formulG,formulGDados,grupo,grupoA,grupoWF,help,horaAnt,horaAntX,i,Icone,idCampo,idCampoPai,idPai,if,imagem,indice,indiceI,items,itemSub,iterator,labe,label,label1,lado,linfo,linha,linhaTratamento,medicamento,nedita,nivel,Nome,NumericoCasasDecimais,NumericoMaior,NumericoMenor,nvalor,obj,objExames,objMed,objPai,objVal,objValor,opcao,opcaoSimNao,Opcoes,opcoes,opcoesSimNao,opcPredecessor,ordenacao,pai,paiCaminho,paiT,paix,perda,PermitirSelecionarMaisQue,pie,precFinal,predecessor,predecessorPai,reco,recomendacao,recomendado,resp,RespostaPadrao,resultExam,ret,retorno,retPais,retSugestao,RotulodosCamposTexto,rs,seq,Sequencia,SequenciadeExibicao,SequenciaOriginal,simnao,SQL,subTexto,sudo,tab,tabs,tamanho,template,templatePendente,tempor,texto,TextoAlturadoCampo,TextoMaximodeCaracteres,tipo,TipodeWorkflow,tipoPai,tipoPredecessor,tipoPredecessor1,titulo,tooltip,Total,tpValores,trat,tratamento,tratPreferencial,ultFicha,unidExame,valor,valor2,valoresExames,valorI,valorOp,valorPreenchido,valorSub,valorX,valorx,vetNE,vetor,vetorOp,y

	if codPainel="" {
		set codPainel 	= $get(%request.Data("codPainel",1))
		set layout = $get(%request.Data("layout",1))
		set codIDMenu = $get(%request.Data("codIDMenu",1))
	}
	set:codOpcaoPainel="" codOpcaoPainel 	= $get(%request.Data("codOpcaoPainel",1))
	set:codPaciente="" codPaciente	= $get(%request.Data("codPaciente",1))
	set:cid="" cid = $get(%request.Data("codCID",1))
	if dataPEP=""{
		set ficha = $get(%request.Data("ficha",1))
		set fichaSeq = $get(%request.Data("fichaSeq",1))
		set dataPEP = $get(%request.Data("dataPEP",1))
		if dataPEP'="" set dataPEP = dataPEP + 1
	}
	if $get(codOriginal)="" set codOriginal = $get(%request.Data("codPainel",1))
	;$$$VAR
	set codPaciente = $replace(codPaciente,"""","")
	set codEscolhaPainel = $piece(codPainel,";",2)
	set codPainel = $piece(codPainel,";",1)
	if codPainel="" w 1 quit
	;
	set obj 	= $get(^VARWorkFlowPEP(0,cid,codPainel,1))
	set pai    	= $$$VARWorkFlowPEPPredecessor(obj)
	set tipoPai	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
	set paiT = pai
	for{
		if paiT = "" quit
		if tipoPai=10 quit
		set obj 	= $get(^VARWorkFlowPEP(0,cid,paiT,1))
		set paiT    = $$$VARWorkFlowPEPPredecessor(obj)
		set tipoPai	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
		
	}
	;
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"'"
	if codOpcaoPainel'="" set SQL = SQL_" and %upper(OpcaodoPrecedessor)='"_codOpcaoPainel_"' "
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set blocos = []
	set formul = []
	set formulDados = {}
	set imagem = []
	set blocosR = []
	set blocosL = []
	set tabs = []
	set formulG = []
	set formulGDados = []
	set tooltip = {}
	set Total = 0
	set flImagem=0
	set flL = 0
	set simnao = 0
	set grupoA = -1
	set grupo = ""
	set dxNumberGrupo = 1
	set achou = 0
	set nedita=0
	set flExames = 0
	set ultFicha 	= $order(^VARPEPPremiumConsulta(YM,codPaciente,""),-1)
	if ultFicha="" set ultFicha = ultFicha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ultFicha,1)),"~",4)'="" {
		set ultFicha = ultFicha+1
	}
	if ficha<ultFicha set nedita=1
	while(rs.%Next()){
		set achou = 1
		set botao = 0
		set SequenciadeExibicao=rs.%Get("SequenciadeExibicao")
		set Sequencia=rs.%Get("Sequencia")
		set Nome=rs.%Get("Nome")
		set TipodeWorkflow=rs.%Get("TipodeWorkflow")
		set ComposicaoValoresExames = rs.%Get("ComposicaoValoresExames")
		set NumericoMenor = rs.%Get("NumericoMenor")
		set NumericoMaior = rs.%Get("NumericoMaior")
		set NumericoCasasDecimais = rs.%Get("NumericoCasasDecimais")
		set AlertaResultadoMenorQue = rs.%Get("AlertaResultadoMenorQue")
		set AlertaResultadoMaiorQue = rs.%Get("AlertaResultadoMaiorQue")
		set TextoAlturadoCampo = rs.%Get("TextoAlturadoCampo")
		set TextoMaximodeCaracteres = rs.%Get("TextoMaximodeCaracteres")
		set ExamesUnidadedeExibicao = rs.%Get("ExamesUnidadedeExibicao")
		set Opcoes = rs.%Get("Opcoes")
		set PermitirSelecionarMaisQue = rs.%Get("PermitirSelecionarMaisQue")
		set grupo = rs.%Get("GrupodeExibicaonaTela")
		set RotulodosCamposTexto = rs.%Get("RotulodosCamposTexto")
		set RespostaPadrao = rs.%Get("RespostaPadrao")
		set Icone = rs.%Get("Icone")
		;
		set objValor = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,Sequencia,dataPEP)
		set valor = $piece(objValor,"~",1)
		set valor2 = $piece(objValor,"~",2)
		set dataAnt = $piece(objValor,"~",3)
		set horaAnt = $piece(objValor,"~",4)
		;
		set linha = {}
		set linha.ID 		= Sequencia
		set linha.Caption 	= Nome
		set linha.Tipo 		= TipodeWorkflow
		set linha.Valor		= valor
		set linha.Valor2	= valor2
		;
		; Altera os valores da guia "tratamento"
		;
		if valor="",Sequencia=1201 { ; Linfonodomegalia progressiva sintomática
			set valoresExames("Fisicos")="287;204;211;210;212;262;267;884;1053;1054;1059;1060;1061;1062;87;1279;1282;1285;257;878;237;238;272;890;227;228;277;896"
			set valoresExames("Imagens1")="309;314;319;324;329;334;902;349;354;908;359;364;369;914;374;920;379;1069;1067;1074;1072;1079;1077;389;1171;1175"
			set valoresExames("Imagens2")="465;471;477;483;489;495;926;513;519;932;525;531;537;938;543;944;549;1086;1084;1091;1089;1096;1094;561;1182;1186"
			set valoresExames("Imagens3")="669;675;681;687;693;699;674;717;723;980;729;735;741;986;747;992;753;1120;1118;1125;1123;1130;1128;765;1193;1197"
			set valoresExames("Imagens4")="771;777;783;789;795;801;998;819;825;1004;831;837;843;1010;849;1016;855;1037;1035;1142;1140;1147;1145;867;"
			set linfo=0
			set tpValores=""
			for {
				set tpValores = $order(valoresExames(tpValores)) quit:tpValores=""								
				set objVal = $get(valoresExames(tpValores))
				for pie=1:1:$length(objVal,";"){
					set resultExam = $piece(objVal,";",pie)
					if resultExam="" quit
					set retPais = ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,dataPEP,resultExam) 
					if retPais<=0{
						continue
					}	
					set tamanho = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,resultExam,dataPEP)
					set tamanho = $p(tamanho,"~",1)
					if tamanho>10 set linfo=1 quit
				}
				quit:linfo
			}
			if linfo=1{
				set valor=1
			}else{
				set valor=0
			}
		}
		if valor="",Sequencia=1315 { ; Paciente tem esplenomegalia massiva
			set retPais = ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,dataPEP,222) 
			if retPais>0{
				set tamanho = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,222,dataPEP)
				set tamanho = $piece(tamanho,"~",1)
				if tamanho>6 set valor=1
				else  set valor=0
			}else{
				set valor=0
			}
			do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,$select(dataPEP'="":dataPEP-1,1:dataPEP))
		}
		if valor="",Sequencia=1316 { ; Algum sintoma relacionado a doença?
			; Perda de peso
			set perda = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,180,dataPEP)
			set perda = $piece(perda,"~",1)
			set $piece(valor,";",1)=perda
			; ECOG>2
			set ecog = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,186,dataPEP)
			set ecog = $piece(ecog,"~",1)
			if ecog>2 set $piece(valor,";",2)=1
			else  set $piece(valor,";",2)=0
			; febre
			set febre = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,179,dataPEP)
			set febre = $piece(febre,"~",1)
			if febre set $piece(valor,";",3)=1
			else  set $piece(valor,";",3)=0

			; sudorese
			set sudo = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,178,dataPEP)
			set sudo = $piece(sudo,"~",1)
			if sudo set $piece(valor,";",4)=1
			else  set $piece(valor,";",4)=0
			;
			do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,$select(dataPEP'="":dataPEP-1,1:dataPEP))

		}
		;
		set ret = []
		if nedita{
			set vetNE = []
			do vetNE.%Push("Não é possível editar registros anteriores")
			do tooltip.%Set("tt"_Sequencia,vetNE)
		}else{
			;set ret = ..montaHistorico(codPaciente, cid, ficha,fichaSeq,dataAnt, horaAnt, Sequencia)
			;if YBED="SILMAR" do:ret.%Size()>0 tooltip.%Set("tt"_Sequencia,ret)
		}
		
		;
		if grupoA="-1" set grupoA=grupo
		if grupo'=grupoA,formul.%Size()>0{
			if (formul.%Size()>0){
				set formP = {}
				set formP.itemType = "group"
	            if grupoA'="" set formP.caption = grupoA
				set formP.items = formul
				if formul.%Size()>6,dxNumberGrupo{
					set formP.colCount = 2
				}
				do formulG.%Push(formP)
				set formul = []
			}
			set grupoA = grupo
		}
		if TipodeWorkflow = 5||(TipodeWorkflow = 12){
			set exames = "",unidExame=""
			for i=1:1:$length(Nome,";"){
				set objExames = $get(^VARExames(0,$piece(Nome,";",i),1))
				if exames'="" set exames = exames_"/"
				set exames = exames_$$$VARExamesDescricaodoExame(objExames)
				;
				if unidExame'="" set unidExame = unidExame_"/"
				set unidExame = unidExame_$piece(objExames,"~",7)
			}
			if ExamesUnidadedeExibicao'="" set unidExame = ExamesUnidadedeExibicao
			set linha.Caption 	= exames
		}
		if TipodeWorkflow=3 {
			;
			;
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxNumberBox"
			set form.cssClass	= "labelDetalhes"
			;
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.helpText = ExamesUnidadedeExibicao
			set form.label = label
			set editorOptions = {}
			;set editorOptions.value = valor
			if NumericoCasasDecimais<1 {
				set fim = ""
			}else{
				set fim = "."
				for i=1:1:NumericoCasasDecimais{
					set fim = fim_"#"
				}
			}
			set editorOptions.format = "#,##0"_fim
			set editorOptions.showClearButton = 1
			set editorOptions.width = "100px"
			set editorOptions.height = "25px"
			set editorOptions.readOnly = nedita
			set form.editorOptions = editorOptions
			do formul.%Push(form)
			;
			do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
			;
		}elseif TipodeWorkflow=13 {
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxDateBox"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label = label
			set editorOptions = {}
			set editorOptions.type = "date"
			set editorOptions.showClearButton = 0
			set editorOptions.useMaskBehavior = 1
			set editorOptions.openOnFieldClick = 0
			set editorOptions.showDropDownButton = 1
			set editorOptions.showClearButton = 1
			set editorOptions.width = "160px"
			set editorOptions.height = "25px"
			set editorOptions.readOnly = nedita
			set form.editorOptions = editorOptions
			do formul.%Push(form)
			;
			if valor'=""{
				set valor = $zdate(valor,3)
				set valor = $replace(valor,"-","/")
			}
			do formulDados.%Set(form.dataField,valor)
		}elseif TipodeWorkflow=14 {
			set form = {}
			set form.itemType="group"
			set form.name="mult"_Sequencia
			set items = []
			for cont=1:1:$length(valor,";"){
				set dataF = Sequencia_"^"_(cont-1)
				set valorx = $piece(valor,";",cont)
				if valorx="" continue
				set form1 = {}
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Marcador "_cont
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				do items.%Push(form1)
				do formulDados.%Set(dataF,valorx)
			}
			set form.items = items
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=linha.Caption
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			
			;
			set buttonOptions.onClick="'function(){insereLinhas('"_caminho_"','"_Sequencia_"')}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)
		}elseif (TipodeWorkflow=22) {
			set form = {}
			set form.itemType="group"
			set form.colCount=6
			set form.name="mult"_Sequencia
			set items = []
			set nvalor=""
			for cont=1:1:$length(valor,";"){
				set valorx = $piece(valor,";",cont)
				if valorx=""||(valorx="^")||(valorx="null^") continue
				if nvalor'="" set nvalor = nvalor_";"
				set nvalor = nvalor_valorx
			}
			if valor'=nvalor{
				do ..salvaPainel(codPaciente,Sequencia,nvalor,cid,ficha,fichaSeq,"")
				set valor=nvalor
			}
			for cont=1:1:$length(valor,";"){
				set dataF = Sequencia_"^"_(cont-1)
				set valorx = $piece(valor,";",cont)
				set exame = $piece(valorx,"^",1)
				set resul = $piece(valorx,"^",2)
				if valorx="" continue
				set form1 = {}
				set form1.cssClass = "labelDetalhesExames1"
				set form1.colSpan = 3
				set form1.dataField = dataF_"^1"
	            set label = {}
	            set label.text = "Exame "_cont
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxSelectBox"
            	set editorOptions = {}
            	set editorOptions.dataSource = "'dataSourceExames'"
    		    set editorOptions.valueExpr = "CodExame"
				set editorOptions.displayExpr = "DescExame"
				set editorOptions.searchEnabled = 1
            	set form1.editorOptions = editorOptions
				do items.%Push(form1)
				do formulDados.%Set(dataF_"^1",exame)
				;
				set form1 = {}
				set form1.cssClass = "labelDetalhesExames2"
				set form1.colSpan = 3
				set form1.dataField = dataF_"^2"
	            set label = {}
	            set label.text = "Resultado"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				do items.%Push(form1)
				do formulDados.%Set(dataF_"^2",resul)
				;
			}
			set form.items = items
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=linha.Caption
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			
			;
			set buttonOptions.onClick="'function(){insereLinhasExames('"_caminho_"','"_Sequencia_"')}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)
		}elseif TipodeWorkflow=4 {
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxTextArea"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label = label
			set editorOptions = {}
			;set editorOptions.value = valor
			set editorOptions.height = TextoAlturadoCampo*22
			set editorOptions.maxLength = TextoMaximodeCaracteres
			set editorOptions.readOnly = nedita
			set form.editorOptions = editorOptions
			do formul.%Push(form)
			;
			do formulDados.%Set(form.dataField,valor)
			;
		}elseif (TipodeWorkflow=5)||((tipoPai=10)&&(TipodeWorkflow=2))||(TipodeWorkflow=11)||(TipodeWorkflow=12) {
			if TipodeWorkflow=5 set flExames = 1
			if TipodeWorkflow=2||(TipodeWorkflow=11){
				set template=0
				set paix 			= Sequencia
				set objPai 			= ""
				for {
					set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
					set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
					quit:predecessorPai=""
					set paix = predecessorPai
					if paix=1321 set template=1 quit
				}
				set dxNumberGrupo=0
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 1
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 0
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				;
				if valor="",RespostaPadrao'="" {
					set valor=RespostaPadrao
					do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,$select(dataPEP'="":dataPEP-1,1:dataPEP))
				}
				;
				set formulF = []
				set caminhoV = {}
				for cont=0:1:1{
					set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
					if retorno.formul.%Size(){
						set paiCaminho = Sequencia
						set caminho = Sequencia_";"_cont_"^Sub"
						set predecessor	= Sequencia
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_tipoPredecessor_"^Sub."_caminho
						}
						;
						if template{
							do caminhoV.%Set("caminho"_cont,"filho"_Sequencia_"_"_cont_"_Sub")
						}else{
							do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
						}
						set formF = {}
						;set form.alignItemLabels = $select($length(caminho,".")>1:0,1:1)
						;set form.alignItemLabelsInAllGroups = 1
						set formF.itemType = "group"
						set formF.name = Sequencia_";"_cont_"^Sub"
						if template{
							set formF.cssClass = "filho"_Sequencia_"_"_cont_"_Sub "_$select($piece(valor,";",cont)'=1:"invisivel",1:"")_" subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						}else{
							set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
							set formF.visible  = $select(valor'=cont:0,1:1)
						}
		                ;set formF.caption = linha.Caption
						set formF.items = retorno.formul
						do formulF.%Push(formF)
						;
						set iterator = retorno.formulDados.%GetIterator()
						for {
							quit:'iterator.%GetNext(.indiceI,.valorI)
							do formulDados.%Set(indiceI,valorI)	
						}
					}
				}
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					if template{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupoNovo'"
					}else{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					}
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					;
				}else{
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
				}
			}
			// ComposicaoValoresExames = 1 -> Campo Numérico
			if ComposicaoValoresExames=1{
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxNumberBox"
				set form.cssClass	= "labelDetalhes"
				set form.helpText = unidExame
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				if NumericoCasasDecimais<1 {
					set fim = ""
				}else{
					set fim = "."
					for i=1:1:NumericoCasasDecimais{
						set fim = fim_"#"
					}
				}
				set editorOptions.format = "#,##0"_fim
				set editorOptions.showClearButton = 1
				set editorOptions.width = "100px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
			}
			// ComposicaoValoresExames = 2 -> Numerico/Data do Exame
			if ComposicaoValoresExames=2{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=2
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.dataField = Sequencia
				set form1.editorType = "dxNumberBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.helpText = unidExame
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				if NumericoCasasDecimais<1 {
					set fim = ""
				}else{
					set fim = "."
					for i=1:1:NumericoCasasDecimais{
						set fim = fim_"#"
					}
				}
				set editorOptions.format = "#,##0"_fim
				set editorOptions.showClearButton = 1
				set editorOptions.width = "100px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				do formulDados.%Set(form1.dataField,$select(valor="":"",1:+valor))
				;
				set form1 = {}
				set form1.colSpan	= 1
				set form1.editorType = "dxDateBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Data de Realização"
				set form1.label = label
				set editorOptions = {}
				set editorOptions.type = "date"
				set editorOptions.showClearButton = 0
				set editorOptions.useMaskBehavior = 1
				set editorOptions.openOnFieldClick = 0
				set editorOptions.showDropDownButton = 1
				set editorOptions.showClearButton = 1
				set editorOptions.width = "160px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}
			// ComposicaoValoresExames = 3 -> Positivo/Negativo
			if ComposicaoValoresExames=3{
				set simnao = 1
				;
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Positivo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Negativo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				;
				set formulF = []
				set caminhoV = {}
				for cont=0:1:1{
					set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
					if retorno.formul.%Size(){
						set paiCaminho = Sequencia
						set caminho = Sequencia_";"_cont_"^Sub"
						set predecessor	= Sequencia
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_"^Sub."_caminho
						}
						;
						if Sequencia=168{
							set composicao = []
							do composicao.%Push(166)
							do composicao.%Push(167)
							do composicao.%Push(168)
							do caminhoV.%Set("composicao",composicao)
						}
						;
						do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
						set formF = {}
						;set form.alignItemLabels = $select($length(caminho,".")>1:0,1:1)
						;set form.alignItemLabelsInAllGroups = 1
						set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						set formF.itemType = "group"
						set formF.name = Sequencia_";"_cont_"^Sub"
						set formF.visible  = $select(valor'=cont:0,1:1)
		                ;set formF.caption = linha.Caption
						set formF.items = retorno.formul
						if Sequencia=168{
							set valorX = 0
							for seq = 166,167,168{
								set dataAntX = $order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,seq,dataPEP),-1)
								if dataAntX'=""{
									set horaAntX = $order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,seq,dataAntX,""),-1)
									if horaAntX'=""{
										set obj = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,seq,dataAntX,horaAntX,1))
										set valorX = valorX + $$$VARPEPPremiumValorRegistrado(obj)
									}
								}
							}
							set formF.visible  = $select(valorX>0:1,1:0)
						}
						do formulF.%Push(formF)
						;
						set iterator = retorno.formulDados.%GetIterator()
						for {
							quit:'iterator.%GetNext(.indiceI,.valorI)
							do formulDados.%Set(indiceI,valorI)	
						}
					}
				}
				
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,valor)
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					
					;
				}else{
					; Alteração temporária. Criar mecanismo via cadastro de workflow
					if (Sequencia=166)||(Sequencia=167){
						set SequenciaOriginal = 168
						set paiCaminho = SequenciaOriginal
						set caminho = SequenciaOriginal_";1^Sub"
						set predecessor	= SequenciaOriginal
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_"^Sub."_caminho
						}
						;
						set composicao = []
						do composicao.%Push(166)
						do composicao.%Push(167)
						do composicao.%Push(168)
						do caminhoV.%Set("composicao",composicao)
						do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
						set elementAttr = {}
						set elementAttr = caminhoV
						set editorOptions.elementAttr = elementAttr
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					}
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					do formulDados.%Set(form.dataField,valor)
				}
			}
			// ComposicaoValoresExames = 10 -> Sim/Não/Não Avaliado
			if ComposicaoValoresExames=10{
				set dxNumberGrupo=0
				set simnao = 1
				;
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Avaliado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor)
			}
			// ComposicaoValoresExames = 4 -> Positivo/Negativo/Texto
			if ComposicaoValoresExames=4{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=3
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 2
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Positivo"
				do opcoesSimNao.%Push(opcaoSimNao)
				s]]><![CDATA[et opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Negativo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Obs."
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}
			// ComposicaoValoresExames = 12 -> Positivo/Negativo/Data
			if ComposicaoValoresExames=12{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=2
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 1
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Positivo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Negativo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.colSpan	= 1
				set form1.editorType = "dxDateBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Data de Realização"
				set form1.label = label
				set editorOptions = {}
				set editorOptions.type = "date"
				set editorOptions.showClearButton = 0
				set editorOptions.useMaskBehavior = 1
				set editorOptions.openOnFieldClick = 0
				set editorOptions.showDropDownButton = 1
				set editorOptions.showClearButton = 1
				set editorOptions.width = "160px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}

			// ComposicaoValoresExames = 11 -> Sim/Não/Não Avaliado/Texto
			if ComposicaoValoresExames=11{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=3
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 2
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Avaliado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Obs."
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}
			// ComposicaoValoresExames = 5 -> Texto
			if ComposicaoValoresExames=5{
				set dxNumberGrupo=0
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxTextBox"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,valor)
				;
			}
			// ComposicaoValoresExames = 6 -> Mutado/Não Mutado
			if ComposicaoValoresExames=6{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set labe = {}
				set labe.alignment = "right"
				set labe.text = linha.Caption
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor)
				;
			}
			// ComposicaoValoresExames = 7 -> Mutado/Não Mutado/Texto
			if ComposicaoValoresExames=7{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=3
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 2
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Obs."
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor2)

				set form.items = itemSub
				do formul.%Push(form)
				;
				;do formulDados.%Set(form1.dataField,valor2)
			}
			// ComposicaoValoresExames = 8 -> Mutado/Não Mutado/Não Fez o Teste
			if ComposicaoValoresExames=8{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set labe = {}
				set labe.alignment = "right"
				set labe.text = linha.Caption
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Fez o Teste"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor)
				;
			}
			// ComposicaoValoresExames = 9 -> Mutado/Não Mutado/Não Fez o Teste/Texto
			if ComposicaoValoresExames=9{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    ;set form.colCount=4
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				;set form1.colSpan = 3
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set subTexto = ""
				if TipodeWorkflow=12 set subTexto = "Mutação em "
				set label.text = subTexto_linha.Caption
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Fez o Teste"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label1 = {}
				set label1.alignment = "right"
				set label1.text = RotulodosCamposTexto
				set form1.label = label1
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.readOnly = nedita
				set editorOptions.maxLength = 1000
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor2)
				;
				set form.items = itemSub
				do formul.%Push(form)
				;
			}

		}elseif TipodeWorkflow=7 {
			set dxNumberGrupo=0
			set flImagem=1
			set codImagem = +$piece(Nome,";",1)
			set codArea = +$piece(Nome,";",2)
			set linha.Caption 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			set linha.CoordenadaY = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",2)
			set linha.CoordenadaX = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",3)
			set lado = 1
			if linha.CoordenadaX>210 set lado = 2
			set ordenacao(lado,+linha.CoordenadaY,Sequencia) =  linha
			;do blocosL.%Push(linha)
		}elseif TipodeWorkflow=8 {
			set dxNumberGrupo=0
			if flL#2=0{
				do blocosL.%Push(linha)
			}else{
				do blocosR.%Push(linha)
			}
			set flL = flL + 1
		}elseif (TipodeWorkflow=9)&&(+PermitirSelecionarMaisQue=0) {
			set paix 			= Sequencia
			set objPai 			= ""
			set template=0
			for {
				set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
				set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
				quit:predecessorPai=""
				set paix = predecessorPai
				if paix=1321 set template=1 quit

			}
			set dxNumberGrupo=0
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxRadioGroup"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label = label
			set vetorOp = []
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set valorOp = {}
				set valorOp.ID = +cont
				set valorOp.Caption = valorSub
				do vetorOp.%Push(valorOp)
			}
			set editorOptions = {}
			set editorOptions.dataSource = vetorOp
			set editorOptions.displayExpr = "Caption"
			set editorOptions.valueExpr = "ID"
			;set editorOptions.value = +valor
			if $length(Opcoes,"|")<=4 set editorOptions.layout = "horizontal"
			set editorOptions.readOnly = nedita
			set form.editorOptions = editorOptions
			;
			set formulF = []
			set caminhoV = {}
			for cont=1:1:$length(Opcoes,"|"){
				set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
				if retorno.formul.%Size(){
					set paiCaminho = Sequencia
					set caminho = Sequencia_";"_cont_"^Sub"
					set predecessor	= Sequencia
					for{
						if predecessor = "" quit
						if codOriginal = predecessor quit
						set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
						set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
						set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
						if predecessor = "" quit
						set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
						if (tipoPredecessor1=15) quit
						if codOriginal = predecessor quit
						set precFinal = predecessor
						if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
						set caminho = precFinal_"^Sub."_caminho
					}
					;
					if template{
						do caminhoV.%Set("caminhotrue","filho"_Sequencia_"_"_cont_"_Sub")
					}else{
						do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
					}
					set formF = {}
					set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
					set formF.itemType = "group"
					if template{
						set formF.cssClass = "filho"_Sequencia_"_"_cont_"_Sub "_$select($piece(valor,";",cont)'=1:"invisivel",1:"")_" subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
					}else{
						set formF.name = Sequencia_";"_cont_"^Sub"
						set formF.visible  = $select(valor'=cont:0,1:1)
					}
					set formF.items = retorno.formul
					do formulF.%Push(formF)
					set iterator = retorno.formulDados.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formulDados.%Set(indiceI,valorI)	
					}
				}
			}
			
			if formulF.%Size()>0{
				set elementAttr = {}
				set elementAttr = caminhoV
				set editorOptions.elementAttr = elementAttr
				if template{
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupoNovo'"
				}else{
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
				}
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
				set iterator = formulF.%GetIterator()
				for {
					quit:'iterator.%GetNext(.indiceI,.valorI)
					do formul.%Push(valorI)	
				}
				
				;
			}else{
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
			}
		}elseif (TipodeWorkflow=9)&&(+PermitirSelecionarMaisQue=1) {
			set paix 			= Sequencia
			set objPai 			= ""
			set template=0
			for {
				set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
				set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
				quit:predecessorPai=""
				set paix = predecessorPai
				if paix=1321 set template=1 quit

			}
			set dxNumberGrupo=0
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set form = {}
				set form.dataField = Sequencia_"^"_(cont-1)
				set form.editorType = "dxCheckBox"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				set:cont>1 label.text = " ",label.showColon=0,form.cssClass="labelDetalhesCheck"
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				set editorOptions.text = valorSub
				set editorOptions.readOnly = nedita
				;
				set formulF = [],caminhoV = {}
				set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
				if retorno.formul.%Size(){
					set paiCaminho = form.dataField
					set caminho = form.dataField_"^Sub"
					set predecessor	= Sequencia
					for{
						if predecessor = "" quit
						if codOriginal = predecessor quit
						set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
						set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
						set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
						if predecessor = "" quit
						set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
						if (tipoPredecessor1=15) quit
						if codOriginal = predecessor quit
						set precFinal = predecessor
						if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
						set caminho = precFinal_"^Sub."_caminho
					}
					;
					if template{
						do caminhoV.%Set("caminhotrue","filho"_$replace(form.dataField,"^","_"))
					}else{
						do caminhoV.%Set("caminhotrue",$select(grupo'="":grupo_".",1:"")_caminho)
					}
					set formF = {}
					set formF.name = form.dataField_"^Sub"
					set formF.itemType = "group"
					if template{
						set formF.cssClass = "filho"_$replace(form.dataField,"^","_")_" "_$select($piece(valor,";",cont)'=1:"invisivel",1:"")_" subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
					}else{
						set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						set formF.visible  = $select($piece(valor,";",cont)'=1:0,1:1)
					}
					set formF.items = retorno.formul
					do formulF.%Push(formF)
					set iterator = retorno.formulDados.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formulDados.%Set(indiceI,valorI)	
					}
				}
		
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					if template=1{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupoNovo'"
					}else{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					}
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,+$piece(valor,";",cont))
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					;
				}else{
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,+$piece(valor,";",cont))
					;
				}
				
			}
			;
		}elseif TipodeWorkflow=10{
			set tab = {}
			set tab.id		= Sequencia
			set tab.text	= linha.Caption
			do tabs.%Push(tab)
		}elseif TipodeWorkflow=2{
			set simnao=1
			set dxNumberGrupo=0
			set form = {}
			set form.colCount = 10
			set form.itemType = "group"
			set form.dataField	  = Sequencia
			set label={}
			set label.alignment = "right"
			set label.text 		= linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label 		= label
			;set form.template	= "'templateSimNaoForm("_Sequencia_",'"_$select(valor="":"",1:+valor)_"')'"
			set items = []
			set form1 = {}
			set form1.itemType = "button"
			set form1.cssClass	= "btnSimF btn"_Sequencia_"Yes buttonsDetalhes "_$select(valor="1":"btnSelected",1:"")
			set buttonOptions = {}
			set buttonOptions.icon = "check"
			set buttonOptions.text="Sim"
			set buttonOptions.type="default"
			set buttonOptions.onClick = "'function(){respostaDetalheForm("_Sequencia_",1,1)}'"
			set form1.buttonOptions = buttonOptions
			do items.%Push(form1)
			;
			set form1 = {}
			set form1.itemType = "button"
			set form1.cssClass	= "btnNaoF btn"_Sequencia_"No buttonsDetalhes "_$select(valor="0":"btnSelected",1:"")
			set buttonOptions = {}
			set buttonOptions.icon = "clear"
			set buttonOptions.text="Não"
			set buttonOptions.type="default"
			set buttonOptions.onClick = "'function(){respostaDetalheForm("_Sequencia_",0,1)}'"
			set form1.buttonOptions = buttonOptions
			do items.%Push(form1)
			set form.items=items
			;
			do formul.%Push(form)
			;
			do formulDados.%Set(form.dataField,valor)
			;
		}elseif (TipodeWorkflow=16){
			set linhaTratamento = 1
			set retSugestao = ..recSugestaoTerapeutica(codPaciente,cid,ficha,fichaSeq,dataPEP,Sequencia,linhaTratamento)
			set recomendacao = retSugestao.recomendacao
			set camposTitle = retSugestao.camposTitle
			set camposPendentes = retSugestao.camposPendentes
			if recomendacao=""{
	 			set form = {}
	 			set form.itemType = "group"
	 			set items = []
				;
	 			set form1 = {}
	 			set form1.cssClass = "titleDestaque"
	 			set form1.template = "<div>"_linha.Caption_"</div>"
	 			do items.%Push(form1)
	 			;
				set iterator = camposPendentes.%GetIterator()
				kill array,vetor
				while iterator.%GetNext(.indice,.campo){
					set nivel = 0
					if campo[";" set campo = $piece(campo,";",1)
					set idCampoPai = campo
					set caminho = []
					for{
						set obj 	= $get(^VARWorkFlowPEP(0,cid,idCampoPai,1))
						set paix    = $$$VARWorkFlowPEPPredecessor(obj)
						if paix = "" quit
						set idCampoPai = paix
						do caminho.%Push(idCampoPai)
						set nivel = nivel + 1
					}
					set vetor(idCampoPai,nivel,campo) = caminho
				}
				;
	 			set templatePendente = "<div class='recomendacaoTerapeutica'><div class='recomendacaoTerapeuticaAlerta'>Informações pendentes de preenchimento:</div><ul>"
				set idPai = ""
				for {
					set idPai = $order(vetor(idPai)) quit:idPai=""
					set desc = ..recDescricaoWorkFlow(cid,idPai)
					if desc="" set desc = idPai
	 				set templatePendente = templatePendente_"<li>"_desc_"</li><ul>"
					set nivel = ""
					for {
						set nivel = $order(vetor(idPai,nivel)) quit:nivel=""
						set idCampo = ""
						for {
							set idCampo = $order(vetor(idPai,nivel,idCampo)) quit:idCampo=""
							set caminho = vetor(idPai,nivel,idCampo)
							set desc = ..recDescricaoWorkFlow(cid,idCampo)
							if desc="" continue
							set predecessor	= idCampo
							for{
								if predecessor = "" quit
								set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
								if $$$VARWorkFlowPEPPredecessor(obj)="" quit
								set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							}

							set desc = "<a href=# onclick=abrePainel('"_predecessor_"','')>"_desc_"</a>"
							;		
							set caminhoC = ""					
							set iterator = caminho.%GetIterator()
							while iterator.%GetNext(.indice,.nvalor){
								if nvalor=idPai continue
								set descC = ..recDescricaoWorkFlow(cid,nvalor)
								set caminhoC = descC_" > "_caminhoC
							}
							set desc = caminhoC_desc
							;
							if $data(array(desc)) continue
							set array(desc) = ""

							set templatePendente = templatePendente_"<li>"_desc_"</li>"
						}
						quit
					}
					set templatePendente = templatePendente_"</ul>"
				}
	 			set templatePendente = templatePendente_"</ul></div>"
			}
 			set form = {}
 			set form.itemType = "group"
 			set form.colCount = 3
 			set items = []
			;
 			set help = "<div class='recomendacaoTerapeuticaHeader'><table><tr><th style='text-align:left'>Principais Achados</th></tr><tr><td>"
			if recomendacao'="" {
				set iterator = camposTitle.%GetIterator()
				kill array
				while iterator.%GetNext(.indice,.nvalor){
					if $data(array(nvalor)) continue
					set array(nvalor) = ""
	 				set help = help_"<li>"_nvalor_"</li>"
				}
	 			set help = help_"</td></tr></table></div>"
			}else{
				set help = templatePendente
			}
 			;
 			set form1 = {}
 			set form1.colSpan = 2
 			set form1.cssClass = "titleDestaque"
 			set form1.template = "<div>"_linha.Caption_"</div>"
 			do items.%Push(form1)
 			;
 			set form1 = {}
 			set form1.cssClass = "titleDestaque"
 			set form1.itemType = "button"
 			
			set buttonOptions = {}
			set buttonOptions.icon = "fas fa-question-circle"
			set buttonOptions.text = "Verificar Critérios de Tratamento"
			set buttonOptions.disabled = nedita
			set buttonOptions.onClick = "'function(){if ($('.destaqueTpLegenda').css('display')=='block'){$('.destaqueTpLegenda').hide()}else{$('.destaqueTpLegenda').show()};corrigeLayout();}'"
 			set form1.buttonOptions =  buttonOptions ;help
 			do items.%Push(form1)
 			set form1 = {}
 			set form1.colSpan  = 3
 			set form1.cssClass = "destaqueTpLegenda destaqueTp2"
 			set form1.template = help
 			do items.%Push(form1)
			;
 			kill tratPreferencial
 			if recomendacao'=""{
	 			set codRegime = ""
	 			for {
		 			set codRegime = $order(^VARWorkFlowTerapiaMedicacao(YM,cid,linhaTratamento,recomendacao,codRegime)) quit:codRegime=""
		 			set obj = $get(^VARWorkFlowTerapiaMedicacao(YM,cid,linhaTratamento,recomendacao,codRegime,1))
		 			set trat = $piece(obj,"~",2)
		 			set tipo = +$piece(obj,"~",3)
		 			set tratPreferencial(trat)=""
	 			}
 			}
 			set tempor(0,"Observação sem tratamento específico (Watch and Wait)",0)=""
			set trat = ""
			for {
				set trat = $order(^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,linhaTratamento,trat)) quit:trat=""
	 			set obj = $get(^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,linhaTratamento,trat,1))
	 			set desc = $piece(obj,"~",1)
	 			set tipo = +$piece(obj,"~",2)
	 			;set tipo = 2
	 			set recomendado=0
	 			if $data(tratPreferencial(trat)) set recomendado=1
	 			;if '$data(tratPreferencial(trat)) continue
	 			set tempor(tipo,desc,trat)=recomendado
 			}
			if $data(tratPreferencial){
				set form1 = {}
				set form1.colSpan = 3
				set form1.template = "<div class='recomendacaoTerapeuticaFooter'>* Medicações recomendadas com base nos dados informados para o paciente</div>"
				do items.%Push(form1)
			}
			set campoSel = ""
 			set tipo=""
 			for {
	 			set tipo = $order(tempor(tipo)) quit:tipo=""
	 			set form1 = {}
	 			set form1.colSpan = 3
	 			set form1.cssClass = "destaqueTp"_tipo
	 			set form1.dataField = "mult_"_tipo_"_"_Sequencia
				set label={}
				set label.alignment = "right"
				set label.text 		= $select(tipo=1:"Regimes Preferênciais",tipo=2:"Outras Possibilidades",1:"Sem Tratamento")
				set form1.label 	= label
				set form1.editorType= "dxRadioGroup"
				set editorOptions = {}
				set opcoes = []
				set desc = ""
				for {
					set desc = $order(tempor(tipo,desc)) quit:desc=""
					set codRegime = ""		 			
		 			for {
			 			set codRegime = $order(tempor(tipo,desc,codRegime)) quit:codRegime=""
			 			set reco = $piece($get(tempor(tipo,desc,codRegime)),"~",1)
						if valor=(linhaTratamento_";"_codRegime) set campoSel = form1.dataField
						set opcao = {}
						set opcao.ID = linhaTratamento_";"_codRegime
						set opcao.Name = desc
						set opcao.Recomendado = reco
						do opcoes.%Push(opcao)
					}
				}
				set editorOptions.dataSource = opcoes
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "vertical"
				set editorOptions.itemTemplate = "'itemTemplateRecTerapeutica'"
				;
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
 			}
 			;
			do:campoSel'="" formulDados.%Set(campoSel,valor)
			;
			set form1 = {}
			set:'$data(tratPreferencial) form1.colSpan = 3
			set form1.itemType = "button"
			set form1.horizontalAlignment = "right"
			set form1.cssClass = "titleDestaque"
			;set form1.cssClass	= "buttonRecomendacaoTerapeutica"
			set buttonOptions = {}
			set buttonOptions.icon = "fas fa-pills"
			set buttonOptions.text = "Prescrever"
			set buttonOptions.disabled = nedita
			set buttonOptions.onClick = "'function(){carregaSugestaoPrescricao('"_Sequencia_"')}'"
			set form1.buttonOptions = buttonOptions
			do items.%Push(form1)
			set form.items = items
			;
			do formul.%Push(form)
		}elseif TipodeWorkflow=17||(TipodeWorkflow=18){
			if TipodeWorkflow=18,linha.Caption'["Exames"{
				set form = {}
				set form.template = "<hr class='hrClass'>"
				do formul.%Push(form)
			}
			set form = {}
			set form.dataField = Sequencia
			set form.tipoImp = 0
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.text=linha.Caption
			set buttonOptions.readOnly = nedita
			if TipodeWorkflow=18 {
				set buttonOptions.icon = Icone
				if linha.Caption["Exames"{
					set buttonOptions.onClick = "'function(){abreExames(1)}'"
				}else{
					set buttonOptions.onClick = "'function(){abrePainelSub('"_Sequencia_"','','','')}'"
				}
			}else{
				set buttonOptions.icon = "print"
				set buttonOptions.onClick = "'function(){imprimir(0)}'"
			}
			set form.buttonOptions = buttonOptions
			;
			do formul.%Push(form)
			set botao=1
		}elseif TipodeWorkflow=18{
			set form = {}
			set form.dataField = Sequencia
			set form.tipoImp = 0
			set form.itemType = "button"
			set form.horizontalAlignment = "right"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = Icone
			set buttonOptions.text = linha.Caption
			set buttonOptions.onClick = "'function(){abreExames(1)}'"
			set editorOptions.readOnly = nedita
			set form.buttonOptions = buttonOptions
			;
			do formul.%Push(form)			
		}elseif TipodeWorkflow=20{
			set form = {}
			set texto = "<div class='recomendacaoTerapeuticaAlerta' style='padding-top:5px;'>Caracteristicas</div>"
			for i=1:1:$length(linha.Caption,"<br>"){
				set ret = $piece(linha.Caption,"<br>",i)
				set texto = texto _ "<li>"_ret_"</li>"
			}
			set form.template = "<div class='recomendacaoTerapeutica' style='padding-left:30px'>"_texto_"<div>"
			do formul.%Push(form)
		}elseif TipodeWorkflow=21{
			set valorPreenchido=""
			set grupoWF = 16,flGrupo=1
			set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,codPaciente,cid,"",(ficha-1),dataPEP)
			set valorPreenchido = campoPreenchido.valor
			if valorPreenchido'=""{
				set tratamento = $piece(campoPreenchido.valor,";",1)
				set codRegime = $piece(campoPreenchido.valor,";",2)
				set objMed = $get(^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,codRegime,1))
				set medicamento = $piece(objMed,"~",1)
				;
				set form = {}
				set form.dataField = Sequencia
				set label = {}
				set label.alignment = "right"
				if $piece(valorPreenchido,";",2)=0{
					set label.text = "Paciente está em observação sem<br>tratamento específico (Watch and Wait)?"
				}else{
					set label.text = "Paciente está em tratamento com<br>"_medic]]><![CDATA[amento_"?"
				}
				set label.showColon=0
				set form.label = label
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set editorOptions = {}
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 1
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 0
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				;
				
				;
				;; Caso escolha sim

				set formulF = [],caminhoV = {}
				for resp=0,1{
					set retorno = ..recPainel(Sequencia,resp,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
					if retorno.formul.%Size(){
						set paiCaminho = form.dataField
						set caminho = form.dataField_"^Sub"
						set predecessor	= Sequencia
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPrecedessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_"^Sub."_caminho
						}
						;
						do caminhoV.%Set("caminho"_resp,$select(grupo'="":grupo_".",1:"")_caminho_resp)
						set formF = {}
						set formF.name = form.dataField_"^Sub"_resp
						set formF.itemType = "group"
						set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						set formF.visible  = $select(valor'=resp:0,1:1)
						set formF.items = retorno.formul
						do formulF.%Push(formF)
						set iterator = retorno.formulDados.%GetIterator()
						for {
							quit:'iterator.%GetNext(.indiceI,.valorI)
							do formulDados.%Set(indiceI,valorI)	
						}
					}
				}		
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					;
				}else{
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
				}
				
				;
				;do formul.%Push(form)
				;do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
				
				set form = {}
				set form.dataField = Sequencia_"_2"
				set label = {}
				set label.alignment = "right"
				set label.text = "Observações"
				set form.label = label
				set form.editorType = "dxTextArea"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				set form.cssClass	= "labelDetalhes"
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor2)
				;
				
			}else{
				set grupoWF = 15,flGrupo=1
				set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,codPaciente,cid,ficha,fichaSeq,dataPEP)
				;
				;set form = {}
				;set form.dataField = campoPreenchido.sequencia
				;set form.tipoImp = 0
				;set form.itemType = "button"
				;set form.horizontalAlignment = "center"
				;set form.cssClass	= "labelDetalhes"
				;
				;set buttonOptions = {}
				;set buttonOptions.icon = "fas fa-pills"
				;set buttonOptions.text="Tratamento"_campoPreenchido.sequencia
				;set buttonOptions.disabled = nedita
				;set buttonOptions.onClick = "'function(){abrePainelSub('"_1306_"','','','')}'"
				;set form.buttonOptions = buttonOptions
				;do formul.%Push(form)
				set retorno = ..recPainel(campoPreenchido.sequencia,"",codPaciente,cid,ficha,fichaSeq,dataPEP,1)
				set form = {}
				set form.itemType = "group"
				set form.items = retorno.formul
				do formul.%Push(form)
				;;
				set iterator = retorno.formulDados.%GetIterator()
				for {
					quit:'iterator.%GetNext(.indiceI,.valorI)
					do formulDados.%Set(indiceI,valorI)	
				}
				;;if retorno.executar set executar = retorno.executar

			}
	 	}else{
			do blocos.%Push(linha)
		}
	}
	if layout=1 set codIDMenu = ""
	set titulo = ..recTituloCompleto(cid,codPainel,1,codIDMenu)
	;
	if $data(ordenacao){
		set lado = ""
		for {
			set lado = $order(ordenacao(lado)) quit:lado=""
			set y = ""
			for {
				set y = $order(ordenacao(lado,y)) quit:y=""
				set cod = ""
				for {
					set cod = $order(ordenacao(lado,y,cod)) quit:cod=""
					set linha = ordenacao(lado,y,cod)
					set linha.lado = lado
					do imagem.%Push(linha)	
				}
			}
		}
		
	}
	;
	if (formul.%Size()>0){
		if 'interno{
			set form = {}
			set form.template = "&nbsp;"
			do formul.%Push(form)
		}
		if formulG.%Size()>0||(grupo'=""){
			if botao=1,grupo'=""{
				set formP = {}
				set formP.template = "<hr class='hrClass'>"
				do formulG.%Push(formP)
			}
			;
			set formP = {}
			set formP.itemType = "group"
		    set:grupo'="" formP.caption = $get(grupo)
			set formP.items = formul
			if formul.%Size()>6,dxNumberGrupo{
				set formP.colCount = 2
			}
			do formulG.%Push(formP)
		}else{
			set formulG = formul
		}
	}
	;
	set retorno = {}
	set retorno.dividir = 1
	if simnao>0 set retorno.dividir = 0
	set retorno.pai = pai
	set retorno.titulo = titulo
	set retorno.formul = formulG
	set retorno.formulDados = formulDados
	set retorno.formulTooltip = tooltip
	set retorno.blocos = blocos
	set retorno.blocosL = blocosL
	set retorno.blocosR = blocosR
	set retorno.imagem = imagem
	set retorno.tabs = tabs
	set retorno.achou = achou
	;set retorno.exames = flExames
	set retorno.executar = $get(executar)
	if interno quit retorno
	/*if imagem{
		set ^zzsilmar = codPaciente_","_cid_","_codPainel_","_ficha
		set retorno.imagemResumo = "Diagnóstico Atual:<br>"_..recuperaResultadosImagens(codPaciente,cid,codPainel,ficha)
	}*/
	/*if flExames=1{
		set formP = {}
		set formP.template = "<font class='dx-form-group-caption'>Resultados dos Exames</font><br><br><div id='divResultadosExamesPEP'>"
		do formulG.%Push(formP)
		set retorno.formul = formulG
	}*/
	write $replace($replace(retorno.%ToJSON(),"""'",""),"'""","")
	write:$get(executar)'="" "~"_executar
	quit
]]></Implementation>
</Method>

<Method name="recuperaResultadosImagens">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,&amp;dados</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set titulo=0
	set contador = 1
	set Retorno = ""
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set predecessor				= rs.%Get("Predecessor")
		set valores = $piece(..recValorSalvo(codPaciente,cid,ficha,1,Sequencia,""),"~",1)
		if TipodeWorkFlow=11{
			if valores=0 continue
		}
		if valores="" continue
		set ret = ..recuperaResultadosImagens(codPaciente,cid,Sequencia,ficha,.dados)
		;
		if TipodeWorkFlow=11{
			set valores="",unid=""
		}
		;
		set Nome = $replace(Nome,"Tem doença","Possuí doença")
		set Nome = $replace(Nome,"Tem Doença","Possuí doença")
		set Nome = $replace(Nome,"?","")
		set exibicao = Nome_$select(valores'="":": "_valores,1:"")_unid_" "
		;
		if $zconvert(Nome,"U")["NÚMERO DE LINFONODOS" {
			set exibicao = valores_" Linfonodo"_$select(valores>1:"s",1:"")_" "
		}
		if Nome["Tamanho" {
			if Retorno="" set exibicao = "Tamanho do Maior Linfonodo: "_$fnumber(valores,".")_unid_" "
			else  set exibicao = "(Tamanho do Maior Linfonodo: "_$fnumber(valores,".")_unid_") "
			;if valores>10 set exibicao = exibicao_" - Possuí doença de ""Bulky"""
		}
		if Nome["Possuí doença" {
			if Retorno="" set exibicao = Nome_" "
			else  set exibicao = "- "_Nome_" "
		}
		if Nome["Observações" {
			set exibicao = "("_valores_")"
		}
		;
		if ret="" {
			set string = exibicao_ret
		}else{
			set dados(Sequencia,ficha) = ret
			set string = "<ul class=ttEstadiamento><li>"_exibicao_"<ul><li>"_ret_"</li></ul></li></ul>"
		}
		;
		

		if Nome["Paciente Tem Linfonodomegalia"{
			set string = ret
			kill dados(Sequencia,ficha)
		}
		if TipodeWorkFlow=7||(TipodeWorkFlow=1){
			if ret="" continue
			
			if TipodeWorkFlow=7 {
				set codImagem = $piece(Nome,";",1)
				set codArea = $piece(Nome,";",2)
				set Nome 	= "<ul class='ttEstadiamento listaDImagens'><li>"_contador_". Região "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)_"</li>"
			}else{
				set Nome 	= "<ul class='ttEstadiamento listaDImagens'><li>"_contador_". "_Nome_"</li>"
			}
			if $extract(ret,1,5)'="<ul c" {
				set dados(rs.%Get("Sequencia"),ficha) = ret
				set ret = "<ul class=ttEstadiamento><li>"_ret_"</li></ul>"
			}
			set string = Nome_ret_"</ul>"
			set contador = contador+1
		}
		set Retorno = Retorno_string
		
	}	
	quit Retorno
]]></Implementation>
</Method>

<Method name="importarResultado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set meuId 		= $get(%request.Data("meuId",1))
	set codPaciente	= $get(%request.Data("paciente",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set fichaSeq 	= $get(%request.Data("fichaSeq",1))
	set painelAtual	= $get(%request.Data("painelAtual",1))
	;
	set meuId		= $piece(meuId," ",1)
	;
	set SequenciaData = ""
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"' and TipodeWorkflow='13'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set SequenciaData = rs.%Get("Sequencia")
	}
	;	
	do ..recuperaResultadosExames(codPaciente,cid,painelAtual,ficha,meuId,SequenciaData,.sequencias,.valorespep,.valoresprimario)
	if $data(valorespep) {
		merge valores = valorespep
	}else{
		merge valores = valoresprimario
	}
	set strStatus = $$$OK
	set retorno = {}
	tstart
	try{
		do ..salvaPainel(codPaciente,SequenciaData,$zdate(meuId,3),cid,ficha,fichaSeq,"")
		set sequ=""
		for {
			set sequ = $order(sequencias(sequ)) quit:sequ=""
			set valor = $piece($get(valores(sequ)),"~",1)
			do ..salvaPainel(codPaciente,sequ,valor,cid,ficha,fichaSeq,"")
		}
	}
	catch e {
		set retorno.erro = 1
		set retorno.mensagem = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	if strStatus=$$$OK{
		tcommit
		set retorno.mensagem="Dados salvos com sucesso!"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recuperaResultadosExames">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,dataRef,SequenciaData,&amp;sequencias,&amp;valorespep,&amp;valoresprimario</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set composicaoValoresExames = rs.%Get("ComposicaoValoresExames")
		if TipodeWorkFlow'=5 continue
		set sequencias(Sequencia)=""
		set objExames = $get(^VARExames(0,Nome,1))
		set codINART = $$$VARExamesCodigodoExamenoCadastrode(objExames)
		set consulta=""
		for {
			set consulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta)) quit:consulta=""
			if consulta=ficha continue
			set seqConsulta=""
			for {
				set seqConsulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta,seqConsulta)) quit:seqConsulta=""
				set data=""
				if SequenciaData'="" set data = $piece(..recValorSalvo(codPaciente,cid,consulta,seqConsulta,SequenciaData,""),"~",1)
				set valores = ..recValorSalvo(codPaciente,cid,consulta,seqConsulta,Sequencia,"")
				set valor = $piece(valores,"~",1)
				if data=""||(data="null") set data=$piece(valores,"~",3)
				if dataRef'=data continue
				set valorespep(Sequencia)=valor
			}
		}

		if codINART'=""{
			Set meuSQL1 = "Select DataExame, Resultado "
			Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
			Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
			Set meuSQL1 = meuSQL1 _ "And Exame = '"_codINART_"' "
			Set meuSQL1 = meuSQL1 _ "And DataExame = "_dataRef_" "
			set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
			while(rs1.%Next()){
				set resultado = ..converteResultadoExternoInterno(rs1.%Get("resultado"))
				set valoresprimario(Sequencia)=resultado
			}	
		}
		do ..recuperaResultadosExames(codPaciente,cid,Sequencia,ficha,dataRef,SequenciaData,.sequencias,.valorespep,.valoresprimario)
		;
	}
	quit $$$OK
]]></Implementation>
</Method>

<Method name="converteResultadoExternoInterno">
<ClassMethod>1</ClassMethod>
<FormalSpec>resultado</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set nresultado = ""
	for i=1:1:$length(resultado){
		set carac=$extract(resultado,i)
		if carac="." continue
		else  if carac="," set carac="."
		else  if carac'?1N continue
		set nresultado = nresultado_carac
	}
	quit nresultado
]]></Implementation>
</Method>

<Method name="recCampoPreenchido">
<ClassMethod>1</ClassMethod>
<FormalSpec>campo,flGrupo,codPaciente,cid,ficha,fichaSeq,dataPEP</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	if flGrupo=1{
		set query = "select Sequencia from VARWorkFlowPEP where company = 0"
		set query = query_" and TipodeWorkFlow = '"_campo_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		while(rs.%Next()){
			set linha={}
			set campo = rs.%Get("Sequencia")
			set campos(campo)=""
		}
	}
	if fichaSeq=0{
		set retorno = {}	
		set retorno.sequencia = ""
		set retorno.descricao = ""
		set retorno.predecessor = ""
		set retorno.valor = ""
		set retorno.ficha = 1
		quit retorno
	}
	set fichaSequ=1
	set campo=""
	for {
		set campo = $order(campos(campo),-1) quit:campo=""
		set obj 	= $get(^VARWorkFlowPEP(0,cid,campo,1))
		;
		if ficha=""{
			set fichaAtu = fichaSeq+1
			for {
				set fichaAtu = $order(^VARPEPPremiums(0,2,campo,codPaciente,cid,fichaAtu),-1) quit:fichaAtu=""
				set retPais = ..verificaNivelPais(codPaciente,cid,fichaAtu,1,dataPEP,campo) 
				if retPais=0 continue
				quit
			}
		}else{
			set fichaAtu=ficha
		}
		if fichaAtu="" set fichaAtu=1
		;
		set ret = ..recValorSalvo(codPaciente,cid,fichaAtu,1,campo,dataPEP)
		set valorC = $piece(ret,"~",1)
		set dtSave = $piece(ret,"~",3)
		set hrSave = $piece(ret,"~",4)
		if valorC'="" set valores(dtSave,hrSave)=campo_"~"_valorC
		set ultCampo = campo
	}
	set campoGravado=""
	set ultDt = $order(valores(""),-1) 
	if ultDt'="" s ultHr=$order(valores(ultDt,""),-1) s:ultHr'="" campoGravado=$p(valores(ultDt,ultHr),"~",1),valorC=$p(valores(ultDt,ultHr),"~",2)
	if campoGravado="" set campoGravado=ultCampo
	;
	set obj 	= $get(^VARWorkFlowPEP(0,cid,campoGravado,1))
	set predecessor    = $$$VARWorkFlowPEPPredecessor(obj)
	set descricao = ..recDescricaoWorkFlow(cid,campoGravado)
	set retorno = {}	
	set retorno.sequencia = campoGravado
	set retorno.descricao = descricao
	set retorno.predecessor = predecessor
	set retorno.valor = valorC
	set retorno.ficha = ficha
	quit retorno
]]></Implementation>
</Method>

<Method name="recDescricaoWorkFlow">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,campo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set obj 	= $get(^VARWorkFlowPEP(0,cid,campo,1))
	set nome    = $$$VARWorkFlowPEPNome(obj)
	set tipo    = $$$VARWorkFlowPEPTipodeWorkflow(obj)
	set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(obj)
	if (tipo=5)||(tipo=12){
		set exames = ""
		for i=1:1:$length(nome,";"){
			set objExames = $get(^VARExames(0,$piece(nome,";",i),1))
			set descExame = $$$VARExamesDescricaodoExame(objExames)
			if exames'="" set exames = exames_"/"
			set exames = exames_descExame
		}
		set nome = exames
	}
	if tipo=7{
		set codImagem = $piece(nome,";",1)
		set codArea = $piece(nome,";",2)
		set nome 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
	}
	
	if composicaoValoresExames>5,composicaoValoresExames<10{
		set nome = "Mutação em "_nome
	}
	quit nome
]]></Implementation>
</Method>

<Method name="recSugestaoTerapeutica">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,dataPEP,sequencia,linhaTratamento</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	do ..cadastraSugestoes()
	set camposTitle = []
	set camposPendentes = []
	;
	set categoria = ""
	for {
		set categoria = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria)) quit:categoria=""
		set condicao = ""
		for {
			set condicao = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao)) quit:condicao=""
			set passaCondicao = 0
			set sequOu = ""
			for {
				set sequOu = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu)) quit:sequOu=""
				set sequE = ""
				set vetor = []
				for {
					set sequE = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE)) quit:sequE=""
					set obj = $get(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE,1))
					set desc = $piece(obj,"~",1)
					set campo = $piece(obj,"~",2)
					set cond = $piece(obj,"~",3)
					set valor = $piece(obj,"~",4)
					set tipo = $piece(obj,"~",5)
					set retorno = ..calculaCondicao(codPaciente,cid,ficha,fichaSeq,dataPEP,tipo,campo,cond,valor,"")
					if retorno<0 {
						do:campo'="" camposPendentes.%Push(campo)
					}
				}
			}
		}
	}
	;
	set passou = 0
	if camposPendentes.%Size()=0{
		set categoria = ""
		for {
			set categoria = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria)) quit:categoria=""
			set condicao = ""
			for {
				set condicao = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao)) quit:condicao=""
				set passaCondicao = 0
				set sequOu = ""
				for {
					set sequOu = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu)) quit:sequOu=""
					set sequE = ""
					set vetor = []
					set passou = 1
					for {
						set sequE = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE)) quit:sequE=""
						set obj = $get(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE,1))
						set desc = $piece(obj,"~",1)
						set campo = $piece(obj,"~",2)
						set cond = $piece(obj,"~",3)
						set valor = $piece(obj,"~",4)
						set tipo = $piece(obj,"~",5)
						set retorno = ..calculaCondicao(codPaciente,cid,ficha,fichaSeq,dataPEP,tipo,campo,cond,valor,"")
						;write !,"Sequencia: "_categoria,?13,condicao,?15,sequOu,?18,sequE,?21,retorno,?32,campo,?37,desc,?75,retorno
						if retorno<0 {
							do:campo'="" camposPendentes.%Push(campo)
							set retorno=0
						}
						if 'retorno {
							if 'passaCondicao set passou = 0 
							kill vetor quit
						}
						do:desc'="" vetor.%Push(desc)
					}
					if $get(vetor)'=""{
						set iterator = vetor.%GetIterator()
						while iterator.%GetNext(.indice,.valor){
							do camposTitle.%Push(valor)
						}
					}
					if passou set passaCondicao = 1 ;quit
				}
				if 'passou quit
			}
			quit:passou
		}
	}
	set retorno = {}
	if passou {
		set retorno.recomendacao = categoria
		set retorno.camposTitle = camposTitle
	}else{
		set retorno.camposPendentes = camposPendentes
	}
	quit retorno
]]></Implementation>
</Method>

<Method name="cadastraSugestoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	
	set cid = "C91.1"
	kill ^VARWorkFlowTerapia,^VARWorkFlowTerapiaCondicoes
	kill ^VARWorkFlowTerapiaMedicacao
	; tratamento 1 - Primeira linha de tratamento
	; tratamento 2 - Manutenção de primeira linha
	; tratamento 3 - Segunda linha de tratamento (Doença recidivada/refratária)
	; tratamento 4 - Manutenção de segunda linha
	set tratamento = 1

	set categoria = 1
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem critério para tratamento"
	;
	;set condicao = 1 ; Sem Mutação
	;set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	;set sequOu = 1
	;set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente não possuí critério para tratamento~1307~<>~1~"_tipo

	set categoria = 2
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem mutação em TP53 ou del 17p- (Paciente com mais de 65 anos ou Paciente frágil ou paciente com menos de 65 anos com co-morbidades (clearence de creatinina < 70 ml/24h))"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="~196~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~142~=~1~"_tipo
	set sequOu = 3
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~414~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~122;3~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~428;3~=~0~"_tipo
	;
	set condicao = 3 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~115;3~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~420;3~=~0~"_tipo
	;
	set condicao = 4 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 2
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mais de 65 anos~1~>~64~"_tipo
	set tipo = 0
	set sequOu = 2
	;set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente frágil~1311~=~1~"_tipo
	set sequOu = 3
	set tipo = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~"_tipo
	set tipo = 0
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 3 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com co-morbidades~1277~=~1~"_tipo
	;
	; código sequencial dos medicamento
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe (categoria 1)~2~1"
	set codRegime = 2 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1~1"
	set codRegime = 3 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 4 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax~4"
	set codRegime = 5 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Bendamustina (70mg/m2 no ciclo 1 com escalonamento para 90mg/m2 se bem tolerado) + anticorpo monoclonal anti-CD20 (não recomendado para pacientes frágeis)~20"
	set codRegime = 7 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil + Obinutuzumabe~15"
	set codRegime = 8 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe (categoria 2B)~18"
	set codRegime = 9 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe + Obinutuzumabe (categoria 2B)~8"
	set codRegime = 10 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Obinutuzumabe (categoria 2B)~22"
	set codRegime = 11 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil  (categoria 3)~3"
	set codRegime = 12 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Rituximabe (categoria 3)~23"
	;

	set categoria = 3
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem mutação em TP53 ou del 17p- (Paciente com menos de 65 anos sem co-morbidades)"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="~196~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~142~=~1~"_tipo
	set sequOu = 3
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~414~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~122;3~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~428;3~=~0~"_tipo
	;
	set condicao = 3 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~115;3~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~420;3~=~0~"_tipo
	;
	set condicao = 4 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 2
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~"_tipo
	set tipo = 0
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 3 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem co-morbidades~1277~=~0~"_tipo
	;
	; código sequencial dos medicamento
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe (categoria 1)~2"
	set codRegime = 2 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1"
	set codRegime = 3 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 4 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax~4"
	set codRegime = 5 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Bendamustina + anticorpo monoclonal anti-CD20~14"
	set codRegime = 7 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="FCR (Fludarabina + ciclofosfamida + Rituximab) (preferencialmente para pacientes com IGVH mutado)~16"
	set codRegime = 8 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="FR (Fludarabina + Rituximab) ~17"
	set codRegime = 9 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe (categoria 2B)~18"
	set codRegime = 10 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe + Rituximabe (categoria 2B)~9"
	set codRegime = 11 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="PCR (Pentostatina + Ciclofosfamida + Rituximabe) (categoria 3)~19"
	;
	;

	set categoria = 4
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes com mutação em TP53 ou del 17p-"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~2"
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~1"
	;
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mais de 65 anos~1~>~64~2"
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~1"
	;
	set sequOu = 3
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente frágil~1311~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 4
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com co-morbidades~1277~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 5
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem co-morbidades~1277~=~0~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 6
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em TP53~142~=~0~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 7
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em TP53~414~=~0~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 8
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~122;3~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 9
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~428;3~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 10
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~115;3~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 11
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~420;3~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	; código sequencial dos medicamento
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1"
	set codRegime = 2 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 3 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe~2"
	set codRegime = 4 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 5 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Alemtuzumabe + Rituximabe~11"
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe~12"
	set codRegime = 7 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Obinutuzumabe~13"
	;
	;
	kill ^VARWorkFlowTerapiaRegimesTerapeuticos
	kill ^VARWorkFlowTerapiaRegimesTerapConteudo
	kill ^VARWorkFlowTerapiaRegimesTerapeuticosTratamento
	; 
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,1,1) = "Acalabrutinibe~1"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,1,1,1) = "1810~1~116~0~12H~14~Tomar 1 cápsula VO de 12/12 h"
	;
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,7,1) = "Acalabrutinibe + Obinutuzumabe~1"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,7,1,1) = "1810~1~116~0~12H~14~Tomar 1 cápsula VO de 12/12 h"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,7,2,1) = "14189"
	;
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,2,1) = "Ibrutinibe~1"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,2,1,1) = "9229~3~116~0~24H~14~Tomar 3 cápsulas VO 1x ao dia"
	
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,8,1) = "Ibrutinibe + Obinutuzumabe (categoria 2B)~1"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,8,1,1) = "9229~3~116~0~24H~14~Tomar 3 cápsulas VO 1x ao dia"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,8,1,1) = "14189"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,9,1) = "Ibrutinibe + Rituximabe (categoria 2B)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,9,1,1) = "9229~3~116~0~24H~14~Tomar 3 cápsulas VO 1x ao dia"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,9,1,1) = "14496"
	
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,3,1) = "Clorambucil  (categoria 3)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,3,1,1) = "1749~114~~24H~14~Tomar XX comprimidos 1 vez ao dia por YY dias"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,15,1) = "Clorambucil + Obinutuzumabe~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,15,1,1) = "1749~114~~24H~14~Tomar XX comprimidos 1 vez ao dia por YY dias"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,15,2,1) = "14189"

	;
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,4,1) = "Venetoclax~1"
	set ^VARWorkFlowTerapiaRegimesTerapeuticosTratamento(YM,cid,tratamento,4,1)="Se carga tumoral Baixa (linfocitose < 25.000/ul e ausência de linfonodos> 5cm):"_$c(10)_" - Preparação: 2 a 3 dias antes do início do tratamento	"_$c(10)_"     Agentes hipouricemiantes: Alopurinol"_$c(10)_"     Hidratação: 1,5 a 2 litros via oral"_$c(10)_" - Início do Tratamento"_$c(10)_"     Monitoramento bioquímico potássio, cálcio, creatinina, fósforo e ácido úrico): Para doses iniciais de 20 e 50 mg: pré-dose, 6-8 horas e 24 horas. Para doses posteriores - pré-dose"_$c(10,10)_"Se carga tumoral Média  (linfocitose > 25.000/ul ou qualquer linfonodo entre 5 cm e 10 cm):"_$c(10)_" - Preparação: 2 a 3 dias antes do início do tratamento	"_$c(10)_"     Agentes hipouricemiantes: Alopurinol"_$c(10)_"     Hidratação: 1,5 a 2 litros via oral"_$c(10)_" - Início do Tratamento"_$c(10)_"     Monitoramento bioquímico potássio, cálcio, creatinina, fósforo e ácido úrico): Para doses iniciais de 20 e 50 mg: pré-dose, 6-8 horas e 24 horas. Para doses posteriores - pré-dose. Considerar hospitalização para pacientes com clearence de creatinina < 80 ml/minuto"_$c(10,10)_"Se carga tumoral Alta (Qualquer linfonodo > 10 cm ou (linfocitose > 25.000/ul E qualquer linfonodo entre 5 cm e 10 cm):"_$c(10)_" - Preparação: 2 a 3 dias antes do início do tratamento	"_$c(10)_"     Agentes hipouricemiantes: Alopurinol ou Rasburicase (se ácido úrico elevado antes do tratamento)"_$c(10)_"     Hidratação: 1,5 a 2 litros via oral ou endovenoso (150 a 200 ml/hora se tolerado)"_$c(10)_" - Início do Tratamento"_$c(10)_"     Monitoramento bioquímico potássio, cálcio, creatinina, fósforo e ácido úrico): Para doses iniciais de 20 e 50 mg: pré-dose, 4horas, 8 horas, 12 horas e 24 horas. Para doses posteriores - pré-dos, 6-8 horas e 24 horas"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,4,1,1) = "10393~2~114~7~8H~14~Tomar 2 comprimidos VO de 8/8h por 7 dias, iniciando 2 dias antes do tratamento com venetoclax"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,4,2,1) = "38~2~114~7~24H~14~Semana 1 - Tomar 2 comprimidos VO com a refeição 1x ao dia por 7 dias"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,4,3,1) = "40~1~114~7~24H~14~Semana 2 - Tomar 1 comprimido VO com a refeição 1x ao dia por 7 dias"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,4,4,1) = "37~0~114~0~24H~14~Semana 3 - Tomar 1 comprimido VO com a refeição 1x ao dia por 7 dias"_$c(10)_"Semana 4 - Tomar 2 comprimidos VO com a refeição 1x ao dia por 14 dias"_$c(10)_"Semana 5 em diante - Tomar 4 comprimidos VO com a refeição 1x ao dia"
	;
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,10,1) = "Venetoclax + Obinutuzumabe~1"
	set ^VARWorkFlowTerapiaRegimesTerapeuticosTratamento(YM,cid,tratamento,10,1)="Se carga tumoral Baixa (linfocitose < 25.000/ul e ausência de linfonodos> 5cm):"_$c(10)_" - Preparação: 2 a 3 dias antes do início do tratamento	"_$c(10)_"     Agentes hipouricemiantes: Alopurinol"_$c(10)_"     Hidratação: 1,5 a 2 litros via oral"_$c(10)_" - Início do Tratamento"_$c(10)_"     Monitoramento bioquímico potássio, cálcio, creatinina, fósforo e ácido úrico): Para doses iniciais de 20 e 50 mg: pré-dose, 6-8 horas e 24 horas. Para doses posteriores - pré-dose"_$c(10,10)_"Se carga tumoral Média  (linfocitose > 25.000/ul ou qualquer linfonodo entre 5 cm e 10 cm):"_$c(10)_" - Preparação: 2 a 3 dias antes do início do tratamento	"_$c(10)_"     Agentes hipouricemiantes: Alopurinol"_$c(10)_"     Hidratação: 1,5 a 2 litros via oral"_$c(10)_" - Início do Tratamento"_$c(10)_"     Monitoramento bioquímico potássio, cálcio, creatinina, fósforo e ácido úrico): Para doses iniciais de 20 e 50 mg: pré-dose, 6-8 horas e 24 horas. Para doses posteriores - pré-dose. Considerar hospitalização para pacientes com clearence de creatinina < 80 ml/minuto"_$c(10,10)_"Se carga tumoral Alta (Qualquer linfonodo > 10 cm ou (linfocitose > 25.000/ul E qualquer linfonodo entre 5 cm e 10 cm):"_$c(10)_" - Preparação: 2 a 3 dias antes do início do tratamento	"_$c(10)_"     Agentes hipouricemiantes: Alopurinol ou Rasburicase (se ácido úrico elevado antes do tratamento)"_$c(10)_"     Hidratação: 1,5 a 2 litros via oral ou endovenoso (150 a 200 ml/hora se tolerado)"_$c(10)_" - Início do Tratamento"_$c(10)_"     Monitoramento bioquímico potássio, cálcio, creatinina, fósforo e ácido úrico): Para doses iniciais de 20 e 50 mg: pré-dose, 4horas, 8 horas, 12 horas e 24 horas. Para doses posteriores - pré-dos, 6-8 horas e 24 horas"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,10,1,1) = "10393~2~114~7~8H~14~Tomar 2 comprimidos VO de 8/8h por 7 dias, iniciando 2 dias antes do tratamento com venetoclax"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,10,2,1) = "38~2~114~7~24H~14~Semana 1 - Tomar 2 comprimidos VO com a refeição 1x ao dia por 7 dias"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,10,3,1) = "40~1~114~7~24H~14~Semana 2 - Tomar 1 comprimido VO com a refeição 1x ao dia por 7 dias"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,10,4,1) = "37~0~114~0~24H~14~Semana 3 - Tomar 1 comprimido VO com a refeição 1x ao dia por 7 dias"_$c(10)_"Semana 4 - Tomar 2 comprimidos VO com a refeição 1x ao dia por 14 dias"_$c(10)_"Semana 5 em diante - Tomar 4 comprimidos VO com a refeição 1x ao dia"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,10,5,1) = "14189"
	;

	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,5,1,1) = "17905~1.5~114~0~12H~14~Tomar 1 comprimido e meio VO de 12/12h"
	;
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,6,1,1) = "17906~1~116~0~12H~14~Tomar 1 cápsula VO de 12/12h"
	
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,11,1) = "Alemtuzumabe + Rituximabe~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,11,1,1) = "XXX"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,11,2,1) = "14496"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,12,1) = "Metilprednisolona em altas doses + Rituximabe~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,12,1,1) = "12821"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,12,2,1) = "14496"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,13,1) = "Obinutuzumabe~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,13,1,1) = "14189"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,14,1) = "Bendamustina + anticorpo monoclonal anti-CD20~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,14,1,1) = "9294"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,14,2,1) = "XXX"
	
	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,16,1) = "FCR (Fludarabina + ciclofosfamida + Rituximab) (preferencialmente para pacientes com IGVH mutado)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,16,1,1) = "7109"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,16,2,1) = "2240"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,16,3,1) = "14496"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,17,1) = "FR (Fludarabina + Rituximab) (preferencialmente para pacientes com IGVH mutado)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,17,1,1) = "7109"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,17,2,1) = "14496"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,18,1) = "Metilprednisolona em altas doses + Rituximabe (categoria 2B)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,18,1,1) = "12821"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,18,2,1) = "14496"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,19,1) = "PCR (Pentostatina + Ciclofosfamida + Rituximabe) (categoria 3)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,19,1,1) = "XXX"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,19,2,1) = "2240"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,19,3,1) = "14496"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,20,1) = "Bendamustina (70mg/m2 no ciclo 1 com escalonamento para 90mg/m2 se bem tolerado) + anticorpo monoclonal anti-CD20 (não recomendado para pacientes frágeis)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,20,1,1) = "9492"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,20,2,1) = "XXXX"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,22,1) = "Obinutuzumabe (categoria 2B)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,22,1,1) = "14189"

	set ^VARWorkFlowTerapiaRegimesTerapConteudo(YM,cid,tratamento,23,1) = "Rituximabe (categoria 3)~2"
	set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,cid,tratamento,23,1,1) = "14496"

	
	;set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,4,3,1) = "37~1~114~7~24H~14~Semana 3 - Tomar 1 comprimido VO com a refeição 1x ao dia por 7 dias"
	;set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,4,4,1) = "37~2~114~14~24H~14~Semana 4 - Tomar 2 comprimidos VO com a refeição 1x ao dia por 14 dias"
	;set ^VARWorkFlowTerapiaRegimesTerapeuticos(YM,4,5,1) = "37~4~114~0~24H~14~Semana 5 em diante - Tomar 4 comprimidos VO com a refeição 1x ao dia"
]]></Implementation>
</Method>

<Method name="calculaCondicao">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,dataPEP,tipo,campos,condicao,valorRef,opcao</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set valorAcumulado = ""
	if +tipo=0{
		set respondido = 0
		for cont=1:1:$length(campos,"|"){
			set campox = $piece(campos,"|",cont)
			if campox="" continue
			set valorComparativo=""
			if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
			set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
			set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
			set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
			set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
			if composicaoValoresExames>5,composicaoValoresExames<10{
				if valorComparativo'="" {
					set valorComparativo = valorComparativo-1 
				}
			}
			set valorC = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,campox,dataPEP),"~",1)
			/*set valorC=""
			set ultData = $order(^VARPEPPremium(YM,codPaciente,cid,campox,dataPEP),-1)
			if ultData'="" {
				set ultHora = $order(^VARPEPPremium(YM,codPaciente,cid,campox,ultData,""),-1)
				if ultHora'=""{
					set objPEP = $get(^VARPEPPremium(YM,codPaciente,cid,campox,ultData,ultHora,1))
					set valorC = $$$VARPEPPremiumValorRegistrado(objPEP)
				}
			}*/
			set retPais = ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,dataPEP,campox) 
			if retPais<=0{
				;if valorC="",retPais<0 set respondido = 1
				set:retPais=0 respondido = 1
				continue
			}
			if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
			if valorC="" continue
			
			set respondido = 1
			if valorComparativo'=""{
				if permitirSelecionarMaisQue=1 {
					set valorC = $piece(valorC,";",valorComparativo)
					set valorAcumulado = valorAcumulado + valorC
				}else{
					if +valorComparativo=+valorC set valorAcumulado = valorAcumulado + 1
				}
			}else{
				set valorAcumulado = valorAcumulado + valorC
			}
		}
		if respondido=0 quit -1
	}
	if tipo=1{
		for cont=1:1:$length(campos,"|"){
			set campox = $piece(campos,"|",cont)
			if campox="" continue
			set estadiamento = $piece(campox,";",1)
			set estagio 	 = $piece(campox,";",2)
			set ret = ..calcEstadiamento(codPaciente, cid, ficha, fichaSeq, estadiamento,dataPEP,opcao,1)
			if ret.selEstagio=estagio set valorAcumulado = valorAcumulado + 1
		}
	}
	if tipo=2{
		if campos=1 { ; Idade do Paciente
			set objPaciente = $get(^MEDPatient(YM,codPaciente,1))
			set dob = $$$MEDPatientDOB(objPaciente)
			if dob'=""{
				set nasc = $zdate(dob,8)
				set hoje = $zdate($horolog,8)
				set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
				if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
				set valorAcumulado = anos
			}
			
		}
	}
	set resultado=""
	if condicao="="{
		set resultado = valorAcumulado=valorRef
	}
	if condicao="<"{
		set resultado = valorAcumulado<valorRef
	}
	if condicao=">"{
		set resultado = valorAcumulado>valorRef
	}
	if condicao="<>"{
		set resultado = valorAcumulado'=valorRef
	}
	if resultado=0 quit 0
	quit 1
]]></Implementation>
</Method>

<Method name="montaHistorico">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,dataAnt,horaAnt,Sequencia</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set ret = []
	set cont = 0
	if dataAnt="" quit ret
	;
	set objWF 	= $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
	set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
	;
	set dataAnt = dataAnt + 1,horaAnt = horaAnt + 1
	for {
		set dataAnt = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,Sequencia,dataAnt),-1) quit:dataAnt=""
		quit:cont=10
		for {
			set horaAnt = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,Sequencia,dataAnt,horaAnt),-1) quit:horaAnt=""
			quit:cont=10
			set obj = $get(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,Sequencia,dataAnt,horaAnt,1))
			set valor = $$$VARPEPPremiumValorRegistrado(obj)
			set alteradoPor = $$$VARPEPPremiumAlteradoPor(obj)
			if tipo=13{
				set:valor'="" valor=$zdate(valor,4)
			}
			if tipo=3||(tipo=5){
				set valor = $fnumber(valor,".")
			}
			set linha = {}
			set linha.valor = valor
			set linha.data = $zdatetime(dataAnt_","_horaAnt,4,2,,,2)
			set linha.usuario = alteradoPor
			do ret.%Push(linha)
			set cont = cont + 1
		}
	}
	quit ret
]]></Implementation>
</Method>

<Method name="recTituloCompleto">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,codPainel,tipoResult=1,codIDMenu=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set codPainel = $piece(codPainel,";",1)
	set opcaoPainel  = $piece(codPainel,";",2)
	set icone = "&nbsp;&nbsp;<i class='fa fa-caret-right'></i>&nbsp;&nbsp;"
	set sai=0
	set titulo  = "",tituloPuro=""
	for {
		set obj = $get(^VARWorkFlowPEP(0,cid,codPainel,1))
		quit:sai
		set desc = $$$VARWorkFlowPEPNome(obj)
		set tipo = $$$VARWorkFlowPEPTipodeWorkflow(obj)
		set desc = $replace(desc,"<br>"," ")
		if codIDMenu'="",codIDMenu=codPainel set sai = 1
		if tipo=1,tipo=10 {
			set codPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",1)
			set opcaoPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",2)
			quit:codPainel=""
			continue
		}
		;
		if tipo=7{
			set codImagem = $piece(desc,";",1)
			set codArea = $piece(desc,";",2)
			set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",1)
		}
		;
		set descExib = desc
		if tipo=1,($length(tituloPuro)>30) {
			set descExib = "..."
		}
		if tituloPuro'=""{
			set tituloPuro = " - "_tituloPuro
		}
		set tituloPuro = descExib_tituloPuro
		
		if titulo'="" {
			set titulo = icone_titulo
			set titulo = "<font onclick=verificaRegrasPainel('"_codPainel_"','"_opcaoPainel_"') style='cursor:pointer' title='Voltar para "_desc_"'>"_descExib_"</font>"_titulo
		}else{
			set titulo = descExib_titulo
		}
		set codPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",1)
		set opcaoPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",2)
		quit:codPainel=""
	}
	if codIDMenu=""{
		if titulo'="" {
			set titulo = icone_titulo
		}
		set obj = $get(^VARWorkFlowCID(0,cid,1))
		set desc = $$$VARWorkFlowCIDDescricao(obj)
		set titulo = desc_titulo
	}
	if tipoResult=2 quit tituloPuro
	quit titulo
]]></Implementation>
</Method>

<Method name="salvaPainel">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente="",dataField="",valor="",cid="",ficha="",fichaSeq="",dataPEP=""</FormalSpec>
<Implementation><![CDATA[
	new retornoJSON,ultFicha,obj,tipo,data,hora,ultData,ultHora
	new objAnt,piece,predecessor
	set retornoJSON = ""
	if codPaciente=""{
		set codPaciente	= $get(%request.Data("codPaciente",1))
		set dataField	= $get(%request.Data("dataField",1))
		set valor		= $get(%request.Data("valor",1))
		set valor 		= $replace(valor,"""","")
		set cid 		= $get(%request.Data("codCID",1))
		set ficha 		= $get(%request.Data("ficha",1))
		set fichaSeq	= $get(%request.Data("fichaSeq",1))
		set dataPEP 	= $get(%request.Data("dataPEP",1))
		set retornoJSON = 1
	}
	set ultFicha 	= $order(^VARPEPPremiumConsulta(YM,codPaciente,""),-1)
	if ultFicha="" set ultFicha = ultFicha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ultFicha,1)),"~",4)'="" {
		set ultFicha = ultFicha+1
	}
	if ficha<ultFicha quit
	;
	set obj = $get(^VARWorkFlowPEP(YM,cid,$piece(dataField,"^",1),1))
	set tipo = $$$VARWorkFlowPEPTipodeWorkflow(obj)
	set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(obj)
	;
	if tipo=9,permitirSelecionarMaisQue=1 { ; Multiplas Opcoes
		if valor="false" set valor=0
	}
	if tipo=13 { ; Data
		set valor = $replace(valor,"/","-")
		set valor = $zdh(valor,3,,,,,,,"")
	}
	set data = +$horolog
	set hora = $piece($horolog,",",2)
	set ultData = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,""),-1)
	set ultHora = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,""),-1)
	if dataField["_"{
		set dataField 	= $piece(dataField,"_",1)
		set ultData = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,""),-1)
		set ultHora = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,""),-1)
		set objAnt = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,ultHora,1))
		if (($$$VARPEPPremiumValorRegistrado2(objAnt) '= valor)) {
			set $$$VARPEPPremiumValorRegistrado2(objAnt) = valor
		}
	}else{
		if dataField["^"{
			set subPiece = $piece(dataField,"^",3)
			set piece = $piece(dataField,"^",2)
			set dataField = $piece(dataField,"^",1)
			set ultData = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,""),-1)
			set ultHora = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,""),-1)
			set piece = piece+1
			set valorAnt = $PIECE($get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,ultHora,1)),"~",1)
			if subPiece'=""{
				set valorAntX = $piece(valorAnt,";",piece)
				set $piece(valorAntX,"^",subPiece) = valor
				set valor = valorAntX
			}
			set $piece(valorAnt,";",piece) = valor
			set valor = valorAnt
		}
		set objAnt = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,ultHora,1))
		if (($$$VARPEPPremiumValorRegistrado(objAnt) '= valor)) {
			set $$$VARPEPPremiumValorRegistrado(objAnt) = valor
		}
	}
	if objAnt'="" {
		set $$$VARPEPPremiumAlteradoPor(objAnt) = YBED
		set ret = $$$Save("VARPEPPremium",codPaciente_","_cid_","_ficha_","_fichaSeq_","_dataField_","_data_","_hora,objAnt,1)
		;
		set consulta 	= $order(^VARPEPPremiumConsulta(YM,codPaciente,""),-1)
		if consulta = "" set consulta = consulta + 1
		if $piece($get(^VARPEPPremiumConsulta(YM,codPaciente,consulta,1)),"~",4)'="" {
			set consulta = consulta+1
		}
		if '$data(^VARPEPPremiumConsulta(YM,codPaciente,consulta,1)){
			set $piece(^VARPEPPremiumConsulta(YM,codPaciente,consulta,1),"~",1) = cid
			set $piece(^VARPEPPremiumConsulta(YM,codPaciente,consulta,1),"~",2) = $horolog
			set $piece(^VARPEPPremiumConsulta(YM,codPaciente,consulta,1),"~",3) = YBED
		}
	}
	;
	set obj = $get(^VARWorkFlowPEP(YM,cid,dataField,1))
	set predecessor	= $$$VARWorkFlowPEPPredecessor(obj)
	if predecessor'=""{
		set obj = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
		set tipo = $$$VARWorkFlowPEPTipodeWorkflow(obj)
		if tipo=7||(tipo=8){
			if valor=""{
				do ..salvaPainel(codPaciente,predecessor,"",cid,ficha,fichaSeq,dataPEP)
			}else {
				do ..salvaPainel(codPaciente,predecessor,1,cid,ficha,fichaSeq,dataPEP)
			}
		}
	}
	write:retornoJSON 1
	quit
	;
]]></Implementation>
</Method>

<Method name="getPacienteCadastro">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set dados = {}
	if codigo'=""{
		set obj = $get(^MEDPatient(YM,codigo,1))
		set dados.Codigo = codigo
		set dados.Nome = $$$MEDPatientName(obj)
		set dados.Sexo = +$$$MEDPatientGender(obj)
		set dados.DataDeNascimento = $select($$$MEDPatientDOB(obj)'="":$zdate($$$MEDPatientDOB(obj),3),1:"")
		set dados.CPF = $$$MEDPatientSSN(obj)
		set dados.RG = $$$MEDPatientFREE7(obj)
		set dados.CNS = $$$MEDPatientExternalCode(obj)
		set dados.Alergias = $$$MEDPatientAllergies(obj)
		set dados.Prontuário = $$$MEDPatientPID(obj)
		set dados.NãoInformada = $$$MEDPatientFREE1(obj)
		set dados.Óbito = $$$MEDPatientFREE9(obj)
		set dados.NomeDaMãe = $$$MEDPatientMothersName(obj)
		set dados.DataDeNasc = $select($$$MEDPatientMothersDOB(obj)'="":$zdate($$$MEDPatientMothersDOB(obj),3),1:"")
		set dados.Telefone1 = $$$MEDPatientTel(obj)
		set dados.Telefone2 = $$$MEDPatientFREE2(obj)
		set dados.PerdaDeContato = $$$MEDPatientFREE8(obj)
		set dados.Email = $$$MEDPatientEmail(obj)
		set dados.Logradouro = $$$MEDPatientStreet(obj)
		set dados.Número = $$$MEDPatientFREE4(obj)
		set dados.Complemento = $$$MEDPatientFREE3(obj)
		set dados.Bairro = $$$MEDPatientFREE6(obj)
		set dados.CEP = $$$MEDPatientZipCode(obj)
		set dados.Cidade = $$$MEDPatientCity(obj)
		set dados.Estado = $$$MEDPatientState(obj)
		set dados.Classificação = $$$MEDPatientClassificacao(obj)
		set MedicoResponsavel = $$$MEDPatientMedicoResponsavel(obj)
		;
		set YBED1 = YBED
		if YBED1="SILMARADM" set YBED1 = "ERIVALDO"
		set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED1),""))
		set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
		if perm'=1{
			set erro=0
			if codProvider="" set erro = 1
			;e  if (codProvider'=MedicoResponsavel&&'$data(^MEDAdmissions(0,300,codProvider,codigo))) set erro=1
			if erro{
				set retorno={}
				set retorno.erro=1
				write retorno.%ToJSON()
				quit
			}
		}
		
		;
		set arqTemp = $get(^mtemp.Arquivo(%session.SessionId))
		if arqTemp'=""{
			do ..removeArquivoTemp(arqTemp)
		}
		kill ^mtemp.Arquivo(%session.SessionId)
		set fname = ..copiaArquivoParaTemp(codigo)
		set ^mtemp.Arquivo(%session.SessionId) = fname
	}
	write dados.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getIdade">
<ClassMethod>1</ClassMethod>
<FormalSpec>dataNascimento</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	if dataNascimento="" quit ""
	set hoje = $zdate($horolog,8)
	set dataNascimento = $zdate(dataNascimento,8)
	set anos = $extract(hoje,1,4)-$extract(dataNascimento,1,4)
	if $extract(hoje,5,8)<$extract(dataNascimento,5,8) set anos = anos - 1
	quit anos
]]></Implementation>
</Method>

<Method name="removeArquivoTemp">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivoTemp</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set obj = $get(^WWW012(0,0,1))
	set caminho = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminho, $length(caminho)) '= "\") {
		set caminho = caminho _ "\"
	}
	set caminho = caminho _ "temp\"
	if arquivoTemp=""{
		set fileset=##class(%ResultSet).%New("%Library.File:FileSet")
		set sc=fileset.Execute(##class(%File).NormalizeDirectory(caminho),%session.SessionId_"*",,1)
		set array = []
		while fileset.Next(.sc) { 
			set arquivo = $piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\"))
			do ##class(%File).Delete(caminho_arquivo)
		}
	}else{
		; Recupera o caminho de destino (diretorio temporario)
		do ##class(%File).Delete(caminho_arquivoTemp)
	}
	quit $$$OK
]]></Implementation>
</Method>

<Method name="copiaArquivoParaTemp">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	;
	; Recupera o caminho de origem da imagem
	set caminhoO = $$GetDiretorioFisico^VARBRDiretorios(0,5)
	if ($extract(caminhoO, $length(caminhoO)) '= "\") {
		set caminhoO = caminhoO _ "\"
	}
	;
	if '##class(%File).Exists(caminhoO_arquivo_".jpg"){
		quit ""
	}
	;
	;
	; Recupera o caminho de destino (diretorio temporario)
	set obj = $get(^WWW012(0,0,1))
	set caminhoD = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminhoD, $length(caminhoD)) '= "\") {
		set caminhoD = caminhoD _ "\"
	}
	set caminhoD = caminhoD _ "temp\"
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminhoD)) {
		do ##class(%File).CreateDirectoryChain(caminhoD)
	}
	set fname = %session.SessionId_"_"_$replace($replace($now(),".",""),",","")_".jpg"
	do ##class(%File).CopyFile(caminhoO_arquivo_".jpg",caminhoD_fname,1)
	quit fname
]]></Implementation>
</Method>

<Method name="copiaArquivoParaDestino">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo,codigo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	; Recupera o caminho de origem (diretorio temporario)
	set obj = $get(^WWW012(0,0,1))
	set caminhoO = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminhoO, $length(caminhoO)) '= "\") {
		set caminhoO = caminhoO _ "\"
	}
	set caminhoO = caminhoO _ "temp\"
	;
	; Recupera o caminho de destino da imagem
	set caminhoD = $$GetDiretorioFisico^VARBRDiretorios(0,5)
	if ($extract(caminhoD, $length(caminhoD)) '= "\") {
		set caminhoD = caminhoD _ "\"
	}
	;
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminhoD)) {
		do ##class(%File).CreateDirectoryChain(caminhoD)
	}
	do ##class(%File).CopyFile(caminhoO_arquivo,caminhoD_codigo_".jpg",1)
	quit $$$OK
]]></Implementation>
</Method>

<Method name="getCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set filter = $Get(%request.Data("filter",1))
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="Codigo" set campo="CodigodoCID"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="Codigo" set campo1="CodigodoCID"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	set top = take
	if top<=0 set top = 20
	set contador = 0
	set SQL = " SELECT CodigodoCID, DescricaoCompleta,DescricaoResumida,Categoria FROM VARCID where company = 0 "
	
	if filter '= "" {
		set SQL = SQL_" and ("_filter_") "
	}elseif codigo'=""{
		set SQL = SQL_" and %upper(CodigodoCID) = '"_codigo_"' "
	}else{
		if searchValue'="" set SQL = SQL_" and (%upper(CodigodoCID) like %upper('%"_searchValue_"%') or %upper(DescricaoCompleta) like %upper('%"_searchValue_"%'))"
	}
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	if (filter'="") set meuSelect = SQL
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID=rs.%Get("CodigodoCID")
		set DescR=rs.%Get("DescricaoResumida")
		set Name=rs.%Get("DescricaoCompleta")
		if Name="" set Name = DescR
		set Categoria=rs.%Get("Categoria")
		set retorno(Categoria,ID) = Name
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		;
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		set linha.Categoria = descCat
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="listaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	Set YBED 	= $Get(%request.Data("YBED",1))
	if take<20 set take = 20
	;
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="CodMedicamento" set campo="Codigo"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="CodMedicamento" set campo1="Codigo"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	;
	set contador = 0
	set select1 = "Codigo,Nome,Dosagem,SubDescricao,(select NumerodeReceitas from VARMedicamentoReceitado where company=0 and CodMedicamento=Codigo and YBED='"_YBED_"') as Receitas"
	set select2 = "Codigo,Nome,Dosagem,SubDescricao,'' as Receitas"
	set classe = "VARMedicamento"
	set where = "company = 0 "
	if codigo '= "" {
		set where = where_" and Codigo = '"_codigo_"' "
	}elseif filter'=""{
		set where = where_" and ("_filter_")"
	}else{
		if searchValue'="" set where = where_" and (%upper(Nome) like %upper('%"_searchValue_"%') or %upper(Dosagem) like %upper('%"_searchValue_"%') or %upper(subdescricao) like %upper('%"_searchValue_"%'))"
	}
	;
	if where'="" set where = "where "_where
	set orderBy = "Order By Receitas Desc,Nome"
	set orderBy2 = "Order By Nome"
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect1="select * from ("
	set meuSelect1=meuSelect1_"select top 10 * "
	set meuSelect1=meuSelect1_" from (select "_select1_" from "_classe_" principal "_where_" Group By nome,Dosagem,SubDescricao) "_orderBy
	set meuSelect1=meuSelect1_")"
	if take>0 set meuSelect1=meuSelect1_" where %VID between "_skip_" and "_take
	;	
	set meuSelect2="select * from ("
	set meuSelect2=meuSelect2_"select top "_(top*2)_" * "
	set meuSelect2=meuSelect2_" from (select "_select2_" from "_classe_" principal "_where_" Group By nome,Dosagem,SubDescricao) "_orderBy2
	set meuSelect2=meuSelect2_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect1_" union "_meuSelect2_") group by Codigo) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	if (filter'="") set meuSelect = "select "_select2_" from "_classe_" principal "_where_" Group By nome,Dosagem,SubDescricao"
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set nome = rsLinha.%Get("Nome")
		set Dosagem = rsLinha.%Get("Dosagem")
		set subdescricao = rsLinha.%Get("SubDescricao")
		set receitas = rsLinha.%Get("Receitas")
		set linha = {}
		set linha.CodMedicamento = codigo
		set linha.DescMedicamento = nome_" "_subdescricao_" ("_Dosagem_")"
		if receitas>0 set linha.Fav = receitas
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaUnidades">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set meuSelect  = "select SearchItem,Text from WWW101 where ParameterDescription='EINHEIT' and language1='PT' group by text order by Text"
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchItem")
		set nome = rsLinha.%Get("Text")
		set nome = $piece(nome,"-",2,$length(nome,"-"))
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = nome
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaVias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set contador = 0
	set meuSelect  = "select SearchWord,Text from INPARA where company=0 and parametername='MEDROUTEADMIN' and language1='PT' order by Text"
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchWord")
		set nome = rsLinha.%Get("Text")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = nome
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaFrequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set contador = 0
	set meuSelect  = "select FrequencyID,Frequency from MEDFrequency order by Conversion desc"
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("FrequencyID")
		set nome = rsLinha.%Get("Frequency")
		set linha = {}
		set linha.CodFrequencia = codigo
		set linha.DescFrequencia = nome
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="associaPacienteCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	new codPaciente,dataPEP,cid,cids,ccid,i,obj
	new selectAux,rs
	kill temporcid
	set codPaciente=""
	for {
		set codPaciente = $order(^VARPEPPremiumPrimario(YM,codPaciente)) quit:codPaciente=""
		set ultFicha = ""
		set ultFicha = $order(^VARPEPPremiumPrimario(YM,codPaciente,ultFicha),-1)
		set cid = ""
		if ultFicha'=""{
			set obj = $get(^VARPEPPremiumPrimario(YM,codPaciente,ultFicha,1))
			set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
			for i=1:1:$length(cids,";"){
				set ccid = $piece(cids,";",i)
				if ccid="" continue
				if '$data(^VARWorkFlowCID(YM,ccid)) continue
				set temporcid(codPaciente,ccid) = YBED_"~"_$horolog
			}
		}
	}
	set selectAux = "select * from (select distinct MEDAdmission.Patient,"
	set selectAux = selectAux_" (select top 1 VARPEP.AnamneseHD"
	set selectAux = selectAux_" from VARPEP,MEDAdmission MEDAdmission1 "
	set selectAux = selectAux_" where MEDAdmission1.company=0 and VARPEP.company=0 and"
	set selectAux = selectAux_" MEDAdmission1.AdmissionID=VARPEP.admissao and %upper(MEDAdmission1.Patient)=%upper(MEDAdmission.Patient) order by VARPEP.Admissao desc) as AnamneseHD"
	set selectAux = selectAux_" from VARPEP,MEDAdmission"
	set selectAux = selectAux_" where MEDAdmission.company=0 and VARPEP.company=0 and"
	set selectAux = selectAux_" MEDAdmission.AdmissionID=VARPEP.admissao) where AnamneseHD is not null"
	;	
	set rs = ##class(%SQL.Statement).%ExecDirect("",selectAux)
	while(rs.%Next()){
		set linha={}
		set codPaciente = rs.%Get("Patient")
		set cids = rs.%Get("AnamneseHD")
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if '$data(^VARWorkFlowCID(YM,ccid)) continue
			set temporcid(codPaciente,ccid) = YBED_"~"_$horolog
		}
	}
	set codPaciente=""
	for {
		set codPaciente=$o(^VARPacienteCID(YM,codPaciente)) quit:codPaciente=""
		set cid=""
		for {
			set cid=$o(^VARPacienteCID(YM,codPaciente,cid)) quit:cid=""
			if '$data(temporcid(codPaciente,cid)){
				set strStatus = $$$Kill("VARPacienteCID",codPaciente_","_cid)
			}
		}
	}
	set codPaciente=""
	for {
		set codPaciente=$o(temporcid(codPaciente)) quit:codPaciente=""
		set cid=""
		for {
			set cid=$o(temporcid(codPaciente,cid)) quit:cid=""
			if '$data(^VARPacienteCID(YM,codPaciente,cid,1)){
				set obj = YBED_"~"_$horolog
				set strStatus = $$$Save("VARPacienteCID",codPaciente_","_cid,obj,1)
			}
		}
	}
	quit
]]></Implementation>
</Method>

<Method name="pesquisaPacientes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	set exTodos = $get(%request.Data("exTodos",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	do ..associaPacienteCID()
	;
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set YBED1=YBED
	if YBED="SILMARADM" set YBED1="ERIVALDO"
	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED1),""))
	set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
	if codProvider="",perm'=1 {
		set retorno = {}
		set retorno.data = []
		set retorno.totalCount = 0
		write retorno.%ToJSON()
		quit $$$OK
	}
	set contador = 0
	set select1 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select1 = select1_" from  MEDPatient"
	if perm'=1 set select1 = select1_" JOIN MEDAdmission on MEDAdmission.Company=MEDPatient.Company and %upper(MEDAdmission.Patient)=MEDPatient.PatientID and %upper(Profissional)='"_codProvider_"'"
	if exTodos=1 set select1 = select1_" LEFT"
	set select1 = select1_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select1 = select1_" where MEDPatient.Company=0 "
	if codigo '= "" set select1 = select1_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select1 = select1_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	;
	set select2 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select2 = select2_" from  MEDPatient "
	if exTodos=1 set select2 = select2_" LEFT"
	set select2 = select2_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select2 = select2_" where MEDPatient.Company=0 "
	set:perm'=1 select2 = select2_" and %upper(MEDPatient.MedicoResponsavel)="_codProvider
	if codigo '= "" set select2 = select2_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select2 = select2_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	;
	set select3 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select3 = select3_" from  MEDPatient"
	if exTodos=1 set select3 = select3_" LEFT"
	set select3 = select3_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select3 = select3_" where MEDPatient.Company=0 "
	set select3 = select3_" and (select top 1 '1' from VARPEP Inner Join MEDAdmission on MEDAdmission.Company = VARPEP.Company and "
	set select3 = select3_" MEDAdmission.AdmissionID = VARPEP.Admissao and %upper(MEDAdmission.Patient)=MEDPatient.PatientID "
	set select3 = select3_" where %upper(VARPEP.CriadoPor)='"_YBED1_"' "
	set select3 = select3_" or %upper(VARPEP.AlteradoPor)='"_YBED1_"') = '1'"
	if codigo '= "" set select3 = select3_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select3 = select3_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	;
	set select4 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select4 = select4_" from  MEDPatient"
	if exTodos=1 set select4 = select4_" LEFT"
	set select4 = select4_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select4 = select4_" where MEDPatient.Company=0 "
	set:perm'=1 select4 = select4_" and (select top 1 AlteradoPor from VARPEPPremium where Company=0 and %upper(AlteradoPor)='"_YBED1_"' and VARPEPPremium.CodigodoPaciente=MEDPatient.PatientID)='"_YBED1_"' "
	if codigo '= "" set select4 = select4_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select4 = select4_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"

	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	if perm'=1 {
		set meuSelect=meuSelect_" from ("_select1_" union "_select2_" union "_select3_" union "_select4_") "_wherefilter_" "_orderBy
	}else{
		set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	}
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	;
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set ID			= rs.%Get("PatientID")
		set Name		= rs.%Get("Name")
		set DtNasc 		= rs.%Get("DOB")
		set sexo 		= rs.%Get("Gender")
		set Email		= rs.%Get("Email")
		set Cid			= rs.%Get("Cid")
		set Classificacao	= rs.%Get("Classificacao")
		set totalCount	= rs.%Get("totalCount")
		
		set linha = {}
		set linha.PatientID	= ID
		set linha.Name		= Name
		set linha.DOB		= $select(DtNasc'="":$zd(DtNasc,3),1:"")
		set linha.Gender	= sexo
		set linha.Email		= Email
		set linha.Classificacao = Classificacao
		set linha.CID		= Cid
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="getImpressoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set job = %session.SessionId
	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	set dataPEPO = dataPEP
	if dataPEPO="" set dataPEPO = +$horolog
	if dataPEP'="" set dataPEP = dataPEP + 1
	set tipoImpressao = $get(%request.Data("tipoImpressao",1))
	set fRemoverImprimirData = +$get(%request.Data("fRemoverImprimirData",1))
	set YM = 0 
	set Y  = "~"
	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED),""))
	set (objMEDProvider, conselho) = ""
	If (codProvider '= "") {
		set objMEDProvider = $Get(^MEDProvider(0,codProvider,1))
		set codConselho = $$$MEDProviderFREE2(objMEDProvider)
		set:codConselho'="" conselho = $p($get(^INPARA(0,"VARMEDCONSELHO","PT",codConselho,1)),"~",1)
	}
	set meses = "Janeiro;Fevereiro;Marco;Abril;Maio;Junho;Julho;Agosto;Setembro;Outubro;Novembro;Dezembro"
	if tipoImpressao=0{
		do ..preparaDadosImpressao(job, codPaciente, cid, ficha,fichaSeq,dataPEP)
		set link=$$Start^VARJasperRun("VARResumoClinico")
		set link = $$addUserParameter^VARJasperRun(link,"dataPEP",dataPEP)
	}elseif tipoImpressao=1{
		if '$data(^VARPEPPremiumPrimario(0,codPaciente,ficha)) write "alert('Não há dados para impressão');" quit
		set link = $$Start^VARJasperRun("VARPEPPremiumSumario")
		set link = $$addUserParameter^VARJasperRun(link,"consulta",ficha)
	}elseif tipoImpressao=7{
		set link = $$Start^VARJasperRun("VARPEPSumario")
		set link = $$addUserParameter^VARJasperRun(link,"receituario",ficha)
	}elseif tipoImpressao=2{
		if '$data(^VARPEPPremiumExames(YM,codPaciente,dataPEPO)) write "alert('Não há dados para impressão');" quit
		set link=$$Start^VARJasperRun("VARPEPPremiumPedidoExames")
		set link=$$addUserParameter^VARJasperRun(link,"pTipo",6)
		set link=$$addUserParameter^VARJasperRun(link,"pRemoverData",fRemoverImprimirData)
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)
	}elseif tipoImpressao=3{
		if '$data(^VARPEPPremiumExames(YM,codPaciente,dataPEPO)) write "alert('Não há dados para impressão');" quit
		set link=$$Start^VARJasperRun("VARPEPPremiumPedidoExames")
		set link=$$addUserParameter^VARJasperRun(link,"pTipo",7)
		set link=$$addUserParameter^VARJasperRun(link,"pRemoverData",fRemoverImprimirData)
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)
		set link = $$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)
	}elseif tipoImpressao=4{
		if '$data(^VARPEPPremiumReceituario(YM,codPaciente,dataPEPO)) write "alert('Não há dados para impressão');" quit
		set link=$$Start^VARJasperRun("VARPEPPremiumReceituario")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link = $$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)
	}elseif tipoImpressao=5{
		if '$data(^VARPEPPremiumPrescricaos(YM,1,codPaciente,ficha)) write "alert('Não há dados para impressão');" quit
		set codPrescricao = $order(^VARPEPPremiumPrescricaos(YM,1,codPaciente,ficha,""),-1)
		set data = ""
		if codPrescricao'=""{
			set obj = $get(^VARPEPPremiumPrescricaoTratamento(YM,codPrescricao,1))
			set data = $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj)
		}
		if data="" set data = $horolog
		set data = $zdate(data,4)
		set link=$$Start^VARJasperRun("VARPEPPremiumPrescricao")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"codPrescricao",codPrescricao)
		set link=$$addUserParameter^VARJasperRun(link,"dataPrescricao",data)
	}elseif tipoImpressao=6{
		set link=$$Start^VARJasperRun("VARPEPPremiumAtestado")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
	}elseif tipoImpressao=8{
		
	}
	;
	set folder = $piece($get(^VARJasper(YM,YM,1)),Y,1)
	set link = $$addUserParameter^VARJasperRun(link,"codPaciente",codPaciente)
	set link = $$addUserParameter^VARJasperRun(link,"codCID",cid)
	set link = $$addUserParameter^VARJasperRun(link,"CompiledDir",folder)
	set link = $$addUserParameter^VARJasperRun(link,"session",job)
	set link = $$addParameter^VARJasperRun(link,YBED,1)
	;
	do ViewInForm^VARJasperRun(link,"Impressao",2)
	quit
]]></Implementation>
</Method>

<Method name="preparaDadosImpressao">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codPaciente,cid,ficha,fichaSeq,dataPEP</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	kill ^mtemp.VARRESUMOCLINICO(YM,job)
	kill ^mtemp.VARRCLIESTADIAMENTO(YM,job)
	kill ^mtemp.VARRCLIWorkFlow(YM,job)
	kill ^mtemp.VARRCLIWorkFlowDetalhe(YM,job)
	;
	set objPatient = $get(^MEDPatient(YM,codPaciente,1))
	set nomePaciente = $$$MEDPatientName(objPatient)
	set sexo = $$$MEDPatientGender(objPatient)
	set dtNascimento = $$$MEDPatientDOB(objPatient)
	set alergias = $$$MEDPatientAllergies(objPatient)
	set sexo = $PIECE($get(^WWW101(0,"SEX","PT",+sexo,1)),"~",1)
	;
	set descCid = $piece($get(^VARCID(0,cid,1)),"~",1)
	;
	set inicioAtendimento = $order(^VARPEPPremiums(YM,1,codPaciente,cid,""))
	set ultimoAtendimento = $order(^VARPEPPremiums(YM,1,codPaciente,cid,""),-1)
	;
	set ps = 186
	set obj = $get(^VARWorkFlowPEP(YM,cid,ps,1))
	set opcoes	= $$$VARWorkFlowPEPOpcoes(obj)
	
	set obj=""
	set $piece(obj,"~",1) = codPaciente
	set $piece(obj,"~",2) = nomePaciente
	set $piece(obj,"~",3) = sexo
	set $piece(obj,"~",4) = $select(dtNascimento="":"",1:$zd(dtNascimento,4,,4))
	set $piece(obj,"~",5) = alergias
	set $piece(obj,"~",6) = cid
	set $piece(obj,"~",7) = descCid
	set $piece(obj,"~",8) = $select(inicioAtendimento="":"",1:$zdate(inicioAtendimento,4,,4))
	set $piece(obj,"~",9) = $select(ultimoAtendimento="":"",1:$zdate(ultimoAtendimento,4,,4))
	set $piece(obj,"~",10) = $select(dataPEP="":$zdate($horolog,4,,4),1:$zdate(dataPEP-1,4,,4))
	set ret = $$$Save("mtemp.VARRESUMOCLINICO",job,obj,1)
	;
	set cest = ""
	for {
		set cest = $order(^VARWorkFlowEstadiamento(YM,cid,cest)) quit:cest=""
		if cest'=3 continue
		set objEst = $get(^VARWorkFlowEstadiamento(YM,cid,cest,1))
		set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEst)
		set calculo = ..calcEstadiamento(codPaciente,cid,ficha,fichaSeq,cest,dataPEP,0,0)
		;
		set codEstagio = calculo.selEstagio
		set pontuadores = calculo.estadiamentoTexto
		if codEstagio="" continue
		set objEstagio = $get(^VARWorkFlowEstadiamentoEstagio(YM,cid,cest,codEstagio,1))
		set descEst = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
		set grupoRisco = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
		;
		set pontuadores = $replace(pontuadores,"<ul class=ttEstadiamento>","")
		set pontuadores = $replace(pontuadores,"</ul>","")
		set obj=""
		set $piece(obj,"~",1) = descEstadiamento
		set $piece(obj,"~",2) = descEst
		set $piece(obj,"~",3) = grupoRisco
		;set $piece(obj,"~",4) = pontuadores
		set ret = $$$Save("mtemp.VARRCLIESTADIAMENTO",job_","_cest,obj,1)
	}
	/*
	set sequencias(2)="Performance Status~1~rgb(173,131,48)~white"
	set sequencias(2,1)="186~ECOG~1"
	set sequencias(3)="Co-morbidades~1~rgb(173,99,0)~white"
	set sequencias(3,1)="1277~~3"
	set sequencias(3,1,1)="1278~ ~3"
	set sequencias(4)="Atividades de Doença~1~rgb(176,74,0)~white"
	*/
	set sequencias(2)="Performance Status~1~#C21B26~white" // #39B843
	set sequencias(2,1)="186~ECOG - 0~3~~=1"
	set sequencias(2,2)="186~ECOG - 1~3~~=2"
	set sequencias(2,3)="186~ECOG - 2~3~~=3"
	set sequencias(2,4)="186~ECOG - 3~3~~=4"
	set sequencias(2,5)="186~ECOG - 4~3~~=5"
	set sequencias(2,6)="186~ECOG - 5~3~~=6"
	set sequencias(3)="Co-morbidades~1~#AB6B3E~white"
	set sequencias(3,1)="1277~~3"
	set sequencias(3,1,1)="1278~ ~3"
	set sequencias(4)="Atividades de Doença~1~#808080~white" // #9F47A1
	set sequencias(4,1)="13~Hemoglobina < 10 mg/dl~3~~<10"
	set sequencias(4,1,1)="101~Presença de anemia hemolítica auto-imune~1~~"
	set sequencias(4,2)="32~Plaquetas < 100.000  mg/dl~3~~<100000"
	set sequencias(4,2,1)="102~Presença de trombocitopenia auto-imune~1~~"
	set sequencias(4,3)="220~Esplenomegalia maciça~3~~*>6"
	set sequencias(4,3,1)="222~~1~~+"
	set sequencias(4,4)="69~Linfonodomegalia maciça~3~~*>10"
	set sequencias(4,4,1)="287~~1~~>"
	set sequencias(4,4,2)="210~~1~~>"
	set sequencias(4,5)="1201~Linfonodomegalia sintomática~3~~=1"
	set sequencias(4,6)="1202~Linfocitose progressiva, com tempo de duplicação menor que 6 meses~1~~~"
	set sequencias(4,7)="1203~Complicações auto-imunes não responsiva a corticóides ou outra terapia~1~~~"
	set sequencias(4,8)="1204~Envolvimento extra-nodal sintomático~1~~~"
	set sequencias(4,9)="178"
	set sequencias(4,10)="179"
	set sequencias(4,11)="180~~3"
	set sequencias(4,11,1)="99~Emagrecimento de <xx>kg~2"
	set sequencias(4,11,2)="100~em <xx> \\mês\meses\\~2"
	set sequencias(4,12)="181"
	set sequencias(4,13)="461"
	;	
	set sequencias(5)="Sangue Periférico e Exames Laboratoriais Gerais~2"
	set sequencias(5,1)="29~Contagem de Linfócitos~2"
	;set sequencias(5,1,1)="1049~data do exame~1"
	set sequencias(5,2)="155"
	set sequencias(5,3)="34~Presença de <xx>% de linfócitos com fenótipo CD19+/CD5+/CD23+ no sangue periférico~2"
	;
	set sequencias(6)="Exame Físico~2"
	set sequencias(6,1)="287~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,2)="204~Presença de linfonodomegalia pré auricular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,3)="211~Presença de linfonodomegalia pré auricular direita (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,4)="210~Presença de linfonodomegalia retro auricular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,5)="212~Presença de linfonodomegalia retro auricular direita (maior diâmetro - <xx>cm)~3~"
	;	
	set sequencias(6,6)="262~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,6.1)="1373~Presença de linfonodomegalia submandibular direita (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,6.2)="1406~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,7)="267~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,8)="884~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~"
	;
	
	set sequencias(6,9)="1053~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,10)="1054~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,11)="1059~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,12)="1060~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,13)="1061~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,14)="1062~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~"
	;
	set sequencias(6,15)="87~Presença de linfonodomegalia cervical anterior esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,16)="1279~Presença de linfonodomegalia cervical anterior direita (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,17)="1282~Presença de linfonodomegalia cervical posterior esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,18)="1285~Presença de linfonodomegalia cervical posterior direita (maior diâmetro - <xx>cm)~3~"
	;	
	set sequencias(6,19)="257~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,20)="878~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~"
	;	
	set sequencias(6,21)="237~Presença de linfonodomegalia axilar esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,22)="238~Presença de linfonodomegalia axilar direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,23)="272~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,24)="890~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,25)="227~Presença de linfonodomegalia inguinal esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,26)="228~Presença de linfonodomegalia inguinal direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,27)="277~Presença de linfonodomegalia poplítea esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,28)="896~Presença de linfonodomegalia poplítea direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,29)="1350~Ausência de hepatomegalia~3~~=0"
	set sequencias(6,30)="221~Presença de hepatomegalia (distância de <xx>cm do rebordo costal direita)~3~"
	set sequencias(6,30.1)="1351~Ausência de esplenomegalia~3~~=0"
	set sequencias(6,31)="222~Presença de esplenomegalia (distância de <xx>cm do rebordo costal esquerda)~3~"
	;
	set sequencias(7)="Medula óssea~2"
	set sequencias(7,2)="188~~3"
	set sequencias(7,2,1)="872~Presença de <xx>% de linfócitos com fenótipo CD19+/CD5+/CD23+ na medula óssea~2"
	
	;
	set sequencias(8)="Sintomas B~2"
	set sequencias(8,2)="178"
	set sequencias(8,3)="179"
	set sequencias(8,4)="180~~3"
	set sequencias(8,4,1)="99~Emagrecimento de <xx>kg~2"
	set sequencias(8,4,2)="100~em <xx> \\mês\meses\\~2"
	set sequencias(8,5)="181"
	set sequencias(8,6)="461"
	;
	set sequencias(9)="Análise Citogenética~2"
	set sequencias(9,1)="394~~3~~=1"
	set sequencias(9,1,1)="122~Cariótipo de sangue periférico - <xx>~1"
	set sequencias(9,1,2)="129~Cariótipo de sangue periférico - Presença de Outras Alterações <xx>~1"
	set sequencias(9,1,3)="1152~Cariótipo de sangue periférico - Quantas anormalidades cromossômicas <xx>~1"
	;
	set sequencias(9,2)="394~~3~~=2"
	set sequencias(9,2,1)="428~Cariótipo de medula óssea - <xx>~1"
	set sequencias(9,2,2)="435~Cariótipo de medula óssea - Presença de Outras Alterações <xx>~1"
	set sequencias(9,2,3)="1153~Cariótipo de medula óssea - Quantas anormalidades cromossômicas <xx>~1"
	;
	set sequencias(9,3)="393~~3~~=1"
	set sequencias(9,3,1)="115~FISH de sangue periférico - <xx>~3~~<15"
	;set sequencias(9,3,2)="115~~3~~=15"
	;set sequencias(9,3,2,1)="1150~FISH de sangue periférico - Presença de <xx> anormalidades cromossômicas~2"
	set sequencias(9,3,3)="121~FISH de sangue periférico - Presença de Outras Alterações <xx>~3"
	;
	set sequencias(9,4)="393~~3~~=2"
	set sequencias(9,4,1)="420~FISH de medula óssea - <xx>~3~~<15"
	;set sequencias(9,4,2)="420~~3~~=15"
	;set sequencias(9,4,2,1)="1151~FISH de medula óssea - Presença de <xx> anormalidades cromossômicas~2"
	set sequencias(9,4,3)="427~FISH de medula óssea - Presença de Outras Alterações <xx>~3"
	;
	set sequencias(10)="Análise Molecular~2"
	set sequencias(10,1)="141~<xx> mutado~3~~=0"
	set sequencias(10,2)="141~<xx> não mutado~3~~=1"
	set sequencias(10,3)="142~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,4)="142~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,5)="143~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,6)="143~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,7)="144~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,8)="144~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,9)="145~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,10)="145~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,11)="146~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,12)="146~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,13)="147~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,14)="147~Ausência de mutação <yy> em <xx>~3~~=1"
	;
	set sequencias(10,15)="413~<xx> mutado~3~~=0"
	set sequencias(10,16)="413~<xx> não mutado~3~~=1"
	set sequencias(10,17)="414~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,18)="414~Ausencia de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,19)="415~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,20)="415~Ausencia de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,21)="416~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,22)="416~Ausencia de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,23)="417~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,24)="417~Ausencia de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,25)="418~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,26)="418~Ausencia de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,27)="419~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,28)="419~Ausencia de mutação <yy> em <xx>~3~~=1"

	set sequencias(11)="Anemia Hemolítica auto-imune ou Trombocitopenia auto-imune~2"
	set sequencias(11,1)="101~O paciente tem diagnóstico de anemia hemolítica auto-imune~4"
	set sequencias(11,1,1)="103~~~~~1"
	set sequencias(11,1,2)="104~~~~~1"
	set sequencias(11,1,3)="105~~~~~1"
	set sequencias(11,1,4)="106~~~~~1"
	set sequencias(11,1,5)="107~~~~~1"
	set sequencias(11,1,6)="108~~~~~1"
	set sequencias(11,2)="102~O paciente tem diagnóstico de trombocitopenia auto-imune~3"
	set sequencias(11,2,1)=""
	set sequencias(11,3)="455~O paciente tem diagnóstico de outra causa para anemia ou trombocitopenia~3"
	set sequencias(11,3,1)=""

	set sequencias(12)="Estadiamento~2"
	set sequencias(12,1)="EST~~1"
	;

	set sequencias(13)="Doenças infecciosas~2"
	set sequencias(13,1)="169~HIV<br>   "
	set sequencias(13,2)="165~Hepatite C<br>   "
	set sequencias(13,3)="166~Hepatite B<br>   "
	set sequencias(13,4)="1161~CMV<br>   "

	set sequencias(14)="Exame de Imagem~2"
	set sequencias(14,1)="1362~Tomografia Computadorizada sem alterações~3~~=1"
	set sequencias(14,2)="1362~Tomografia Computadorizada~4~~=0"
	set sequencias(14,2,1)="309~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,2)="314~Presença de linfonodomegalia auricular (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,3)="319~Presença de linfonodomegalia submandibular esquerda(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,3.1)="1378~Presença de linfonodomegalia submandibular direita(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,3.2)="1414~Presença de linfonodomegalia submentoniano(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,4)="324~Presença de linfonodomegalia peitoral (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,5)="329~Presença de linfonodomegalia axilar esquerda(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,5.1)="1438~Presença de linfonodomegalia axilar direita(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,6)="334~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,7)="902~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,8)="344~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,2,9)="339~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,2,9.1)="1461~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"
	set sequencias(14,2,10)="349~Presença de linfonodomegalia inguinal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,11)="354~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,12)="908~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,13)="359~Presença de linfonodomegalia ilíaco (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,14)="364~Presença de linfonodomegalia para-aórtico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,15)="369~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,16)="914~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,17)="374~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,18)="920~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,19)="379~Presença de linfonodomegalia cervical (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,20)="1069~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,21)="1067~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,22)="1074~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,23)="1072~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,24)="1079~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,25)="1077~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,26)="389~Presença de linfonodomegalia mesentérico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,27)="1171~Presença de linfonodomegalia mediastino anterior (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,28)="1175~Presença de linfonodomegalia mediastino posterior (maior diâmetro - <xx>cm)~3~~~1"
	

	set sequencias(14,3)="1363~Ressonância Nuclear Magnética sem alterações~3~~=1"
	set sequencias(14,4)="1363~Ressonância Nuclear Magnética~4~~=0"
	set sequencias(14,4,1)="465~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,2)="471~Presença de linfonodomegalia auricular (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,3)="477~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,3.1)="1386~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,3.2)="1318~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,4)="483~Presença de linfonodomegalia peitoral (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,5)="489~Presença de linfonodomegalia axilar direita(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,5.1)="1442~Presença de linfonodomegalia axilar esquerda(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,6)="495~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,7)="926~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,8)="507~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,4,9)="501~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,4,9.1)="1462~~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"
	set sequencias(14,4,10)="513~Presença de linfonodomegalia inguinal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,11)="519~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,12)="932~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,13)="525~Presença de linfonodomegalia ilíaco (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,14)="531~Presença de linfonodomegalia para-aórtico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,15)="537~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,16)="938~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,17)="543~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,18)="944~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,19)="549~Presença de linfonodomegalia cervical (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,20)="1086~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,21)="1084~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,22)="1091~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,23)="1089~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,24)="1096~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,25)="1094~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,26)="561~Presença de linfonodomegalia mesentérico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,27)="1182~Presença de linfonodomegalia mediastino anterior (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,28)="1186~Presença de linfonodomegalia mediastino posterior (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,5)="1364~Raio-X de tórax sem alterações~3~~=1"
	set sequencias(14,6)="1026~Raio-X de tórax com alterações - Resultado: <xx>~3~~"

	set sequencias(14,7)="1365~PET CT sem alterações~3~~=1"
	set sequencias(14,8)="1365~PET CT~4~~=0"
	set sequencias(14,8,1)="669~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2)="675~Presença de linfonodomegalia auricular (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3)="681~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.1)="1388~Presença de linfonodomegalia submandibular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.2)="1422~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,4)="687~Presença de linfonodomegalia peitoral (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,5)="693~Presença de linfonodomegalia axilar esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,5.1)="1446~Presença de linfonodomegalia axilar direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,6)="699~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,7)="674~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,8)="711~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,8,9)="705~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,8,9.1)="1463~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"
	set sequencias(14,8,10)="717~Presença de linfonodomegalia inguinal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,11)="723~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,12)="980~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,13)="729~Presença de linfonodomegalia ilíaco (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,14)="735~Presença de linfonodomegalia para-aórtico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,15)="741~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,16)="986~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,17)="747~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,18)="992~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19)="753~Presença de linfonodomegalia cervical (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,20)="1120~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,21)="1118~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,22)="1125~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,23)="1123~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,24)="1130~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,25)="1128~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,26)="765~Presença de linfonodomegalia mesentérico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,27)="1193~Presença de linfonodomegalia mediastino anterior (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,28)="1197~Presença de linfonodomegalia mediastino posterior (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,7)="1366~Ultrassonografia sem alterações~3~~=1"
	set sequencias(14,8)="1366~Ultrassonografia~4~~=0"
	set sequencias(14,8,1)="771~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2)="777~Presença de linfonodomegalia auricular (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3)="783~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.1)="1394~Presença de linfonodomegalia submandibular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.2)="1426~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,4)="789~Presença de linfonodomegalia peitoral (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,5)="795~Presença de linfonodomegalia axilar esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,5.1)="1451~Presença de linfonodomegalia axilar direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,6)="801~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,7)="998~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,8)="813~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,8,9)="807~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,8,9.1)="1464~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"
	set sequencias(14,8,10)="819~Presença de linfonodomegalia inguinal (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,11)="825~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,12)="1004~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,13)="831~Presença de linfonodomegalia ilíaco (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,14)="837~Presença de linfonodomegalia para-aórtico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,15)="843~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,16)="1010~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,17)="849~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,18)="1016~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19)="855~Presença de linfonodomegalia cervical (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,20)="1037~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,21)="1035~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,22)="1142~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,23)="1140~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,24)="1147~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,25)="1145~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,26)="867~Presença de linfonodomegalia mesentérico (maior diâmetro - <xx>cm)~3~~~1"
	;
	;
	set sequencias(15)="Classificação ECOG~3"
	set sequencias(15,1)="186~0 - Assintomático~3~~'1"
	set sequencias(15,2)="186~0 - Assintomático~3~~=1~2"
	set sequencias(15,3)="186~1 - Sintomático mas completamente ambulatorial~3~~'2"
	set sequencias(15,4)="186~1 - Sintomático mas completamente ambulatorial~3~~=2~2"
	set sequencias(15,5)="186~2 - Sintomático, <50% do tempo acamado durante o dia~3~~'3"
	set sequencias(15,6)="186~2 - Sintomático, <50% do tempo acamado durante o dia~3~~=3~2"
	set sequencias(15,7)="186~3 - Sintomático, >50% do tempo acamado durante o dia, não restrito ao leito~3~~'4"
	set sequencias(15,8)="186~3 - Sintomático, >50% do tempo acamado durante o dia, não restrito ao leito~3~~=4~2"
	set sequencias(15,9)="186~4 - Restrito ao leito~3~~'5"
	set sequencias(15,10)="186~4 - Restrito ao leito~3~~=5~2"
	set sequencias(15,11)="186~5 - Morte~3~~'6"
	set sequencias(15,12)="186~5 - Morte~3~~=6~2"
	;
	set obj = ""
	set cont=0
	set Sequencia = ""
	for {
		set Sequencia 	= $order(sequencias(Sequencia)) quit:Sequencia=""
		set Nome		= $piece(sequencias(Sequencia),"~",1)
		set destaque	= $piece(sequencias(Sequencia),"~",2)
		set corFundo	= $piece(sequencias(Sequencia),"~",3)
		set corFonte	= $piece(sequencias(Sequencia),"~",4)
		set subTipo		= +$piece(sequencias(Sequencia),"~",5)
		if corFundo = "" set corFundo = "#F7F7F7"
		if corFonte = "" set corFonte = "#404040"
		set flFilho=0
		set cont1=1
		set nivel = ""
		for {
			set nivel= $order(sequencias(Sequencia,nivel)) quit:nivel=""
			kill sequencNivel
			merge sequencNivel = sequencias(Sequencia,nivel)
			set sequ = sequencNivel
			do ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,Sequencia,sequ,0,0,.sequencNivel,.cont1)
		}
		if cont1<2 continue
		if destaque{
			if obj'=""{
				set $piece(obj,"~",5)=0
				set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
				set cont = cont + 1
				set obj=""
			}
			set $piece(obj,"~",1)=Sequencia
			set $piece(obj,"~",2)=Nome
			set $piece(obj,"~",5)=destaque
			set $piece(obj,"~",6)=corFundo
			set $piece(obj,"~",7)=corFonte
			set $piece(obj,"~",8)=subTipo
			set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
			set cont = cont + 1
			set obj=""
		}else{
			if obj=""{
				set $piece(obj,"~",1)=Sequencia
				set $piece(obj,"~",2)=Nome
			}else{
				set $piece(obj,"~",3)=Sequencia
				set $piece(obj,"~",4)=Nome
				set $piece(obj,"~",5)=0
				set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
				set cont = cont + 1
				set obj=""
			}
		}
		;
	}
	if obj'=""{
		set $piece(obj,"~",5)=0
		set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
	}
	set sequ = ""
	for {
		set sequ = $order(^mtemp.VARRCLIWorkFlow(YM,job,sequ)) quit:sequ=""
		set sequ1 = $p(^(sequ,1),"~",1)
		set sequ2 = $p(^(1),"~",3)
		if sequ2="" continue
		set cont1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(YM,job,sequ1,""),-1)
		set cont2 = $order(^mtemp.VARRCLIWorkFlowDetalhe(YM,job,sequ2,""),-1)
		if cont1>cont2{
			for cont=cont2+1:1:cont1{
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_sequ2_","_cont," ~ ",1)
			}
		}elseif(cont2>cont1){
			for cont=cont1+1:1:cont2{
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_sequ1_","_cont," ~ ",1)
			}
		} 
		
	}	
	quit
]]></Implementation>
</Method>

<Method name="preparaImpressaoFilho">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,Fsequencia,isPredecessor,flRetorno,sequencNivel,cont1</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set YM = 0
	set sequencia			 	= $piece(Fsequencia,"~",1)
	set pretitulo 				= $piece(Fsequencia,"~",2)
	set desconsideraNomeWork 	= $piece(Fsequencia,"~",3)
	set subCodPainel 			= $piece(Fsequencia,"~",4)
	set comparador 				= $piece(Fsequencia,"~",5)
	set tipoLinha 				= $piece(Fsequencia,"~",6)

	;
	set hist = 0
	;if $data(^VARPEPPremiumEstadiamento(YM,codPaciente,cid)) set hist = 1
	;
	if pretitulo["<br>" set pretitulo = pretitulo_"•  "
	;
	if sequencia="" quit ""
	set nivelFilho = 0
	if $data(sequencNivel)>9 set nivelFilho	= 1
	;
	if sequencia="EST"{
		set cest = ""
		for {
			set cest = $order(^VARWorkFlowEstadiamento(YM,cid,cest)) quit:cest=""
			if cest'=3 continue
			set objEst = $get(^VARWorkFlowEstadiamento(YM,cid,cest,1))
			set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEst)
			set calculo = ..calcEstadiamento(codPaciente,cid,ficha,fichaSeq,cest,dataPEP,0)
			;
			set codEstagio = calculo.selEstagio
			set pontuadores = calculo.estadiamentoTexto
			if codEstagio="" continue
			set objEstagio = $get(^VARWorkFlowEstadiamentoEstagio(YM,cid,cest,codEstagio,1))
			set descEst = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
			set grupoRisco = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
			;
			set pontuadores = $replace(pontuadores,"<ul class=ttEstadiamento>","")
			set pontuadores = $replace(pontuadores,"</ul>","")

			set descricao = descEstadiamento_" "_descEst_" - "_grupoRisco_$c(10)_pontuadores
			set obj1 = ""
			set $piece(obj1,"~",1)=sequencia_cest
			set $piece(obj1,"~",2)=descricao
			set cont1 = 1
			set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_SequenciaPai_","_cont1,obj1,1)
			set cont1 = cont1 + 1
			quit
		}
	}
	;
	set SQL = " SELECT SequenciadeExibicao, Sequencia, Nome NomeOriginal,PermitirSelecionarMaisQue,"
	set SQL = SQL_" $$GetDescWorkFlowPEP^VARSQL(CodigodoCID,Sequencia) Nome, TipodeWorkflow,"
	set SQL = SQL_" Opcoes, composicaoValoresExames, ExamesUnidadedeExibicao, RespostaPadrao "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	if 'isPredecessor {
		if sequencia=166 set SQL = SQL_" and Sequencia in (166,167,168)"
		e  set SQL = SQL_" and Sequencia = '"_sequencia_"'"
	}else{
		set SQL = SQL_" and %upper(predecessor) = '"_sequencia_"'"
		if subCodPainel'="" set SQL = SQL_" and %upper(OpcaodoPrecedessor) = '"_subCodPainel_"'"
	}
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set obj1= ""
	set rs1 = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set retorno = ""
	set Nome1 = ""
	while(rs1.%Next()){
		set Sequencia1		= rs1.%Get("Sequencia")
		set Nome1 			= rs1.%Get("Nome")
		set NomeOriginal	= rs1.%Get("NomeOriginal")
		set Tipo1 			= rs1.%Get("TipodeWorkflow")
		set opcoes 			= rs1.%Get("Opcoes")
		set composicaoValoresExames = rs1.%Get("composicaoValoresExames")
		set unid			= rs1.%Get("ExamesUnidadedeExibicao")
		set RespostaPadrao 	= rs1.%Get("RespostaPadrao")
		set permitirSelecionarMaisQue = rs1.%Get("PermitirSelecionarMaisQue")
		;
		set Nome1Original = Nome1
		if +desconsideraNomeWork'=0 set Nome1=""
		;
		set Nome1 = $replace($replace(Nome1,"?",""),"<br>","")
		set retorno = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,Sequencia1,dataPEP,0)
		set valor = $piece(retorno,"~",1)
		set valor2 = $piece(retorno,"~",2)
		set valorPEP = valor
		if pretitulo'="" set Nome1=pretitulo_Nome1
		if $length(comparador)=1 set retorno = valorPEP quit
		if opcoes'=""{
			if permitirSelecionarMaisQue=1{
				set valAcum = ""
				for i=1:1:$length(valor,";"){
					set va = $piece(valor,";",i)
					if va = "false" set va = 0
					if va = "true" set va = 1
					if 'va continue
					if valAcum '="" set valAcum = valAcum_", "
					set valAcum = valAcum_$piece(opcoes,"|",i)
				}
				set valor = valAcum
			}else{
				set valor = $piece(opcoes,"|",valor)
			}
		}
		if valor="",RespostaPadrao'="" set valor = RespostaPadrao
		if valor="" continue
		if ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,dataPEP,Sequencia1,1,hist)<1 continue
		if Tipo1=8{
			if valorPEP'=1 continue
		}elseif Tipo1=7{
			if Nome1["•  " set Nome1 = $piece(Nome1,"•  ",2)
			set codImagem = $piece(Nome1,";",1)
			set codArea = $piece(Nome1,";",2)
			set descArea = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			set Nome1 = descArea
			
		}elseif Tipo1=11{
			if valor'=1 continue
			if +desconsideraNomeWork<2{
				set Nome1 = $replace(Nome1,"Paciente tem","Presença de")
				set Nome1 = $replace(Nome1,"Paciente Tem","Presença de")
				set Nome1 = $replace(Nome1,"≥",">=")
				set Nome1 = $replace(Nome1,":","")
				if Nome1'["Presença" set Nome1= "Presença de "_Nome1
			}
		}elseif composicaoValoresExames=3{
			set Nome1 = $replace(Nome1,":","")
			if desconsideraNomeWork'=3 if valorPEP=1 set Nome1 = Nome1_" - Positivo"
			if valorPEP=0 continue
		}elseif composicaoValoresExames>5,composicaoValoresExames<10{
			if Nome1["<xx>"{
				set Nome1 = $replace(Nome1,"<xx>",Nome1Original)
				set Nome1 = $replace(Nome1,"<yy>",valor2)
				if Nome1["\\"{
					if valor<2 set vari = $piece($piece(Nome1,"\\",2),"\",1)
					else  set vari = $piece($piece(Nome1,"\\",2),"\",2)
					set Nome1 = $piece(Nome1,"\\",1)_vari
				}
			}else{
				set Nome1 = $replace(Nome1,":","")
				if desconsideraNomeWork'=3 if valorPEP=0 set Nome1 = "Presença de Mutação "_valor2_" em "_Nome1
				if desconsideraNomeWork'=3 if valorPEP=1 set Nome1 = "Ausência de Mutação "_valor2_" em "_Nome1
			}
			if valorPEP=2 continue
		}elseif (Tipo1=5)||(Tipo1=12){
			if unid=""{
				for i=1:1:$length(NomeOriginal,";"){
					set objExames = $get(^VARExames(0,$piece(NomeOriginal,";",i),1))
					set unid = $$$VARExamesUnidade(objExames)
					if unid'="" quit
				}
			}
			set valor = $fnumber(valor,".")
			if desconsideraNomeWork'=3 set Nome1 = Nome1_" - "_valor_" "_unid
		}else{
			if Nome1["<xx>"{
				set Nome1 = $replace(Nome1,"<xx>",valor)
				set Nome1 = $replace(Nome1,"<yy>",valor2)
				if Nome1["\\"{
					if valor<2 set vari = $piece($piece(Nome1,"\\",2),"\",1)
					else  set vari = $piece($piece(Nome1,"\\",2),"\",2)
					set Nome1 = $piece(Nome1,"\\",1)_vari
				}
			}else{
				if desconsideraNomeWork<3 set Nome1 = Nome1_" - "
				if desconsideraNomeWork<3 {
					set Nome1 = Nome1_valor_" "_unid
				}elseif flRetorno{
					set Nome1 = Nome1_valor_" "_unid
				}
			}
		}
		set somaFilhos = 0
		if comparador'=""{
			set sinal = $extract(comparador,1)
			set numero = $extract(comparador,2,$length(comparador))
			if sinal = "*"{
				set somaFilhos = 1
				set sinal = $extract(comparador,2)
				set numero = $extract(comparador,3,$length(comparador))
			}
			if somaFilhos{
				set valorPEP = 0
				set filhos = ""
				for {
					set filhos = $order(sequencNivel(filhos)) quit:filhos=""
					kill sequencNivelFilho
					merge sequencNivelFilho = sequencNivel(filhos)
					set NSequencia = sequencNivelFilho
					set comparFilho = $piece(NSequencia,"~",5)
					set result = ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,NSequencia,0,1,.sequencNivelFilho,.cont1)
					if comparFilho="+"{
						set valorPEP = valorPEP + result
					}
					if comparFilho=">"{
						if result>valorPEP set valorPEP=result
					}
				}
			}
			if sinal=">",valorPEP'>numero continue
			if sinal="<",valorPEP'<numero continue
			if sinal="=",valorPEP'=numero continue
			if sinal="'",valorPEP=numero continue
		}
		set contReservado = ""
		if nivelFilho'=0,'somaFilhos{
			set parenteses = 1
			if $zstrip(Nome1,"<>w")="" set parenteses = 0
			if desconsideraNomeWork=4{
				set contReservado = cont1
				set cont1 = cont1 + 1
			}
			set filhos = ""
			for {
				set filhos = $order(sequencNivel(filhos)) quit:filhos=""
				kill sequencNivelFilho
				merge sequencNivelFilho = sequencNivel(filhos)
				set NSequencia = sequencNivelFilho
				if desconsideraNomeWork=4{
					do ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,NSequencia,0,3,.sequencNivelFilho,.cont1)
				}else{
					set result = ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,NSequencia,0,1,.sequencNivelFilho,.cont1)
					if result'="" {
						if 'parenteses set Nome1 = Nome1_$select(Nome1'="":" ",1:"")_result
						else  set Nome1 = Nome1_" ("_result_")"
					}
				}
			}
		}
		if tipoLinha=1 set Nome1 = "•  "_Nome1
		if tipoLinha=2 set Nome1 = "b*"_Nome1
		if flRetorno=1 set retorno = Nome1 quit
		;w:job=1 !,Tipo1,?4,sequencia,?10,$e(Nome1,1,40),?60,contReservado,?70,cont1

		if Nome1["<br>"{
			set cont1 = cont1+1
		}
		if $length(Nome1)>55{
			set cont1 = cont1+1
		}
		if desconsideraNomeWork=4,pretitulo="" set Nome1=""
		if Nome1'=""{
			set obj1 = ""
			set $piece(obj1,"~",1)=Sequencia1
			set $piece(obj1,"~",2)=Nome1
			if contReservado'=""{
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_SequenciaPai_","_contReservado,obj1,1)
			}else{	
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_SequenciaPai_","_cont1,obj1,1)
				set cont1 = cont1 + 1
			}
		}
		;
		if nivelFilho=0,'somaFilhos{
			if pretitulo["<br>"'="" set $piece(Sequencia1,"~",2) = "•  "
			if Tipo1=11 set $piece(Sequencia1,"~",4) = 1
			do ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,Sequencia1,1,0,.sequencNivel,.cont1)
		}
	}		
	quit retorno
]]></Implementation>
</Method>
</Class>
</Export>