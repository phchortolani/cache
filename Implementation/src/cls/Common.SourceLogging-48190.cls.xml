<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Common.SourceLogging">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Studio.SourceControl.Base</Super>

<Method name="OnAfterDelete">
<FormalSpec>InternalName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 04-Jun-2009	shobby	SR16619: Disabled.  Incomplete source control project
	;-------------------------------------------------------------------------------
	;if $znspace="PROD" {
	;	if $piece(InternalName,".",1)="COMTest2" {
	;		;job Sync^COMSourceLogging($piece(InternalName,".",1)) ;sch	
	;	}
	;}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnBeforeLoad">
<Description><![CDATA[
Import the file from the external format into Cache.
This is called before the actual load of data to give the chance
to load the item from an external format.]]></Description>
<FormalSpec>InternalName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; 04-Jun-2009	shobby	SR16619: Disabled.  Incomplete source control project
	;-------------------------------------------------------------------------------
	;Quit $$OnBeforeLoad^COMSourceLogging(InternalName)
	quit 1
]]></Implementation>
</Method>

<Method name="OnAfterSave">
<FormalSpec>InternalName:%String,Object:%RegisteredObject=$$$NULLOREF</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------
	; Creates logging information.
	; 04-Jun-2009	shobby	SR16619: Some calls in Cache 2008 are different.  Call now goes to wrapper.
	; 27-Aug-2007	GRF		allow unique entries for namespace
	; 05-Jun-2007	RPW		Get the username because Brazil insists on doing all changes on 1 machine
	; 03-Feb-2006	shobby	SR13957: If no 'current' folder is defined (when intMode=1) it will be created.
	; 01-Mar-2005	RobertW	If we are not logging the changes, don't run the code.
	; 23-Feb-2004	Paul K	Fixed stuff up with length of time string.
	; 19-Feb-2004	Paul K	Reduced the time of logginfto 10 minutes
	; 01-Oct-2003	Paul K	Added Machine name of persion who compiled to log
	;-------------------------------------------------------------
	;
	set processNumber =##class(alSYS.SYSTEM.Process).ProcessNumber($io) ;SR16619
	set objProcess=##class(alSYS.SYSTEM.Process).OpenId(processNumber)  ;SR16619
	set strName=..Username
	if objProcess'=$$$NULLOREF {
		set strName=objProcess.UserName
	}
	set machineName   =$zutil(67,12,processNumber)_"_"_strName

	if $get(^NoLog,0)=0 {
		For intMode=1:1:3 {
			if $data(^%SourceCode($znspace)) {                                    ; 27-Aug-2007
				set strPath=$piece($get(^%SourceCode($znspace)),"|",intMode)
			} else {	
				set strPath=$piece($get(^%SourceCode),"|",intMode)
			}
			if strPath'="" {
				set strFileName=InternalName
				if intMode=1 {
					do $ZF(-1,"mkdir "_strPath)	;SR13957			
				} elseif intMode=2 {
					do $ZF(-1,"mkdir "_strPath)
					set strFileName=strFileName_"-"_$znspace
				} elseif intMode=3 {			
					;set processNumber =$p($p($io,"/",4),":",2)							;SR16619
					set strTime		  =$tr($zdt($h,3)," :","--")
					set strTime		  =$extract(strTime,1,$length(strTime)-4)
					set strFileName   =strFileName_"-"_$znspace_"-"_strTime_"-"_machineName
					set strPath		  =strPath_$piece(InternalName,".",1)_"\"

					do $ZF(-1,"mkdir "_strPath)
					set ^COMRoutineLog(0,InternalName,+$h,$p($h,",",2),1)=machineName
					do ##class(alSYS.SYSTEM.Process).Close(.objProcess) ;SR1661
				}
				DO ..Save(InternalName,strPath_strFileName_".xml")
			}
		}
	}
	; do OnAfterSave^COMSourceLogging(InternalName)  ;Disabled
	set ^%COMRoutineLog(1,+$horolog,$piece($ZU(188),",",2))=InternalName_","_$znspace_","_machineName
	quit $$$OK
]]></Implementation>
</Method>

<Method name="Save">
<FormalSpec>InternalName:%Library.String,strFile:%Library.String</FormalSpec>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	;
	;
	; History:
	; 25-Nov-2010	shobby	SRAdhoc: Log JS files.
	; 07-Apr-2009	PPP		SR16468: Create the CAPTION parameter
	;-------------------------------------------------------------------------------
	set strExtension = $piece(InternalName,".",$length(InternalName,"."))
	if (strExtension="CLS") || (strExtension="PRJ") {
 		set sc = $$Export^%occSAX(strFile,"-d",InternalName)
 	} elseif ($zcvt(strExtension,"U")="JS")||($zcvt(strExtension,"U")="CSS") {
	 	set strNewInternalName=$piece(InternalName,"/",$length(InternalName,"/"))
	 	set strFile=$replace(strFile,$piece(InternalName,".",1),$piece(strNewInternalName,".",1))
	 	set blnStart=0
	 	set blnEnd=0
	 	
	 	set sc=$SYSTEM.OBJ.Export(InternalName,"c:\temp\zztemp.js")
	 	set stream1 = ##class(%FileCharacterStream).%New()
	 	set stream1.Filename="c:\temp\zztemp.js"
	 	set stream2 = ##class(%FileCharacterStream).%New()
	 	set stream2.Filename="//orion/wwwroot/DEV/"_$piece(InternalName,"/",$length(InternalName,"/"))
	 	do stream2.Clear()
	 	
		while 'stream1.AtEnd {
			set Line=stream1.ReadLine()
			if Line["<![CDATA[" set blnStart=1 continue
			if (Line["//") set Line=$piece(Line,"//",1)
			set Line=$translate(Line,$char(13),"")
			continue:($translate(Line," "_$char(9))="")
			if Line["/*" {
				set Line2=$translate(Line," ")
				if $extract(Line2,$length(Line2)-1,$length(Line2))'="*/" set blnStart=0
				continue
			}
			if ('blnStart)&&(Line["*/") {
				set blnStart=1 
				continue
			}
			continue:'blnStart
			if Line["]]]]><![CDATA[></CSP>" set Line=$piece(Line,"]]]]><![CDATA[></CSP>",1) set blnEnd=1
			do stream2.WriteLine(Line)
			quit:blnEnd
		}
		set sc=stream2.SaveStream()
		kill stream1
		kill stream2
	 	set sc=$SYSTEM.OBJ.Export(InternalName,strFile)
 	} else {
 		set sc = $$Export^%apiRTN(InternalName,strFile,"Save for Source Control",,"-d")
 	}
 	
 	//SR16468
 	//Create the CAPTION parameter for a given 'al' class
	//with a language ID (Only during DEVELOPMENT)
 	if $$$ISOK(sc) && $get(^Development) && (strExtension = "CLS") && ($zcvt($extract(InternalName,1,2),"U")="AL") {
	 	do Caption^WWWClassTranslation($piece(InternalName,".",1,$length(InternalName,".")-1))
 	}
 	
 	if $$$ISERR(sc) {
 		do DecomposeStatus^%apiOBJ(sc,.errors,"d")
	}
 	quit sc
]]></Implementation>
</Method>

<Method name="OnBeforeSave">
<Description><![CDATA[
 Called before the item is saved to the Cache database it is passed
 a reference to the current temporary storage of this item so that it
 can be modified before the save completes. If you quit with an error
 value then it will abort the save.
Called before the item is saved to the Cache database it is passed
a reference to the current temporary storage of this item so that it
can be modified before the save completes. If you quit with an error
value then it will abort the save.

History:
18-Mar-2005		RobertW			Allow INT files to be logged.]]></Description>
<FormalSpec>InternalName:%String,Location:%String="&quot;,Object:%RegisteredObject=$$$NULLOREF</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 ; 03-Sep-2003		SCR				Added INT Save checking
 set sc=$$$OK
 set strExtension=$piece(InternalName,".",$length(InternalName,"."))
 set strName=$piece(InternalName,".",1,$length(InternalName,".")-1)
 
 set ^CacheTempCompile($j)=InternalName
 
 if ($zcvt(strExtension,"u")="INT")&&(strName'="") {
	 if ##class(%Library.Routine).Exists(strName_".MAC") {
		 set sc=$listbuild(0,"Dummy")
	 } else {
		merge ^CacheTempCompile($j,0)=^ROUTINE(strName)
	 }
 } else {
	 merge ^CacheTempCompile($j,0)=^rMAC(strName)
 }
 
 
 ;	 if $data(^rMAC(strName)) set sc=$listBuild(0,"Dummy")
 ;}
 Quit sc
]]></Implementation>
</Method>

<Method name="GetStatus">
<Description><![CDATA[
Return information about this entity.

History:
18-Mar-2005		RobertW			Allow INT files to be logged.]]></Description>
<FormalSpec>InternalName:%Library.String,&amp;IsInSourceControl:%Library.Boolean,&amp;Editable:%Library.Boolean,&amp;IsCheckedOut:%Library.Boolean,&amp;UserCheckedOut:%Library.String</FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
 ; 03-Sep-2003		SCR				Added INT Save checking
 Set Editable=1,IsCheckedOut=0,UserCheckedOut="",IsInSourceControl=0
 set strExtension=$piece(InternalName,".",$length(InternalName,"."))
 set strName=$piece(InternalName,".",1,$length(InternalName,".")-1)
 
 if ($zcvt(strExtension,"u")="INT")&&(strName'="") {
	 if ##class(%Library.Routine).Exists(strName_".MAC") set Editable=0
 }
 ;	 if $data(^rMAC(strName)) set Editable=0
 ;}
 set strStatus=$$$OK
 set strStatus=$$GetStatus^COMSourceLogging(InternalName,.Editable) ;sch
 quit strStatus
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Common.SourceLoggingD</DataLocation>
<DefaultData>SourceLoggingDefaultData</DefaultData>
<IdLocation>^Common.SourceLoggingD</IdLocation>
<IndexLocation>^Common.SourceLoggingI</IndexLocation>
<StreamLocation>^Common.SourceLoggingS</StreamLocation>
<Data name="SourceLoggingDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>