<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.MAPPA">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	#dim %request as %CSP.Request
	#dim %response as %CSP.Response
	quit:$$$ISERR(..validaSessao()) %response
	do ..manutencao()
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="copiaWorkFlow">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,grupoOrigem,valorPai="",cidDestino</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	tstart
	set strStatus = $$$OK,prox=""
	if valorPai'=""{
		set SQL = "SELECT Sequencia "
		set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_grupoOrigem_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
		while(rs.%Next()){
			set Sequencia = rs.%Get("Sequencia")
			set obj = $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
			set $$$VARWorkFlowPEPPredecessor(obj) = valorPai
			set prox=$order(^VARWorkFlowPEP(0,cidDestino,""),-1)+1
			set strStatus = $$$Save("VARWorkFlowPEP",cidDestino_","_prox,obj)
			w !,"      Criado "_prox
			if '$$$ISERR(strStatus){
				set strStatus = ..copiaWorkFlow(cid,Sequencia,prox,cidDestino)
			}else{
				quit
			}
			
		}
		tcommit
	}else{
		set obj = $get(^VARWorkFlowPEP(0,cid,grupoOrigem,1))
		if obj="" quit "Origem Inválida"
		if cid'=cidDestino{
			set $$$VARWorkFlowPEPPredecessor(obj) = ""
		}
		set prox=$order(^VARWorkFlowPEP(0,cidDestino,""),-1)+1
		set strStatus = $$$Save("VARWorkFlowPEP",cidDestino_","_prox,obj)
		w !,"Criado "_prox
		if '$$$ISERR(strStatus){
			set strStatus = ..copiaWorkFlow(cid,grupoOrigem,prox,cidDestino)
		}
	}
	if $$$ISERR(strStatus){
		trollback
	}
	quit strStatus_"|"_prox]]></Implementation>
</Method>

<Method name="manutencao">
<ClassMethod>1</ClassMethod>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set strStatus = $$$OK
	tstart
	try{
		do ..manutencaoVersao()
		set versionCore = $get(^VARMAPPAVersion(0,"CORE",1))
		set versionInterface = $get(^VARMAPPAVersion(0,"INTERFACE",1))
		set versionAtualCore = $get(^ROUTINE("VAR.CSP.MAPPA.1",0))
		set versionAtualInterface = $get(^ROUTINE("csp.mappa.1",0))
		set versionAtualCore = $zdate(versionAtualCore,8)_"."_$piece(versionAtualCore,",",2)
		set versionAtualInterface = $zdate(versionAtualInterface,8)_"."_$piece(versionAtualInterface,",",2)
		set altera=0
		if versionInterface'=versionAtualInterface{
			set ^VARMAPPAVersion(0,"INTERFACE",1)=versionAtualInterface
			set altera=1
		}
		if versionCore'=versionAtualCore{
			set ^VARMAPPAVersion(0,"CORE",1)=versionAtualCore
			set altera=1
		}
		if altera{
			do RebuildIndexes^COMUtils("VARWorkFlowPEP")
			do RebuildIndexes^COMUtils("VARPEPPremium")
		}
		do ##Class(VAR.CSP.MAPPA1).cadTiposDiagnosticos()
		do ##Class(VAR.CSP.MAPPADashboard).cadTiposDashboard()
		do RebuildIndexes^COMUtils("MAPPADashboardWidget")
		If ('$Data(^VARBRDiretorios(0,45,1))) {
			Set ^VARBRDiretorios(0,45,1)="D:\Alphalinc\CHSP\Resources\PEP\anexos~PEP~PEP~"
			do RebuildIndexes^COMUtils("VARBRDiretorios")
		}
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	if strStatus=$$$OK{
		tcommit
	}else{
		trollback
		set ^erroMAPPAupdate($now()) = strStatus
	}
	quit]]></Implementation>
</Method>

<Method name="manutencaoVersao">
<ClassMethod>1</ClassMethod>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set strStatus = $$$OK
	tstart
	if '$data(^VARMedicamento(0,"MED000001",1)) {
		set strStatus = $$$Save("VARMedicamento","MED000001","~Talidomida~Talidomida~~~~~~~~Talidomida~~Talidomida",$$$YES)
	}
	if '$data(^VARMedicamento(0,"MED000002",1)) {
		set strStatus = $$$Save("VARMedicamento","MED000002","~Pomalidomida~~Pomalyst~~~~~~~~~Pomalidomida (Pomalyst)",$$$YES)
	}
	if '$data(^VARMedicamento(0,"MED000003",1)) {
		set strStatus = $$$Save("VARMedicamento","MED000003","~Panobinostat~~Farydak~~~~~~~~~Panobinostat (Farydak)",$$$YES)
	}
	if '$data(^VARMedicamento(0,"MED000004",1)) {
		set strStatus = $$$Save("VARMedicamento","MED000004","~Isatuximab~Sarclisa~~~~~~~~~~Isatuximab (Sarclisa)",$$$YES)
	}
	if '$data(^VARMedicamento(0,"MED000005",1)) {
		set strStatus = $$$Save("VARMedicamento","MED000005","~Belantamab mafodotin-blmf~~Blenrep~~~~~~~~~Belantamab mafodotin-blmf (Blenrep)",$$$YES)
	}
	if '$data(^VARMedicamento(0,"MED000006",1)) {
		set strStatus = $$$Save("VARMedicamento","MED000006","~Selinexor~~Xpovio~~~~~~~~~Selinexor (Xpovio)",$$$YES)
	}
	tcommit
	quit
	try{
		if '$data(^MAPPA20210525){
			kill vet
			set vet(1) = 1924
			set vet(2) = 1925
			set vet(3) = 1926
			set vet(4) = 1927
			set vet(5) = 1928
			set vet(6) = 1929
			set vet(7) = 1930
			set vet(8) = 1931
			set vet(9) = 1932
			set vet(10) = 1933
			set vet(11) = 1935
			set vet(12) = 1934
			set vet(13) = 1936
			set vet(14) = 1937
			set vet(15) = 1938
			set rs = ##class(%SQL.Statement).%ExecDirect("","select ID,ValorRegistrado from VARPEPPremium where CoddoWorkFlow=115")
			while(rs.%Next()){
				set id 		= rs.%Get("ID")
				set valor 	= rs.%Get("ValorRegistrado")
				set codPaciente = $piece(id,"||",2)
				set cid 	= $piece(id,"||",3)
				set ficha 	= $piece(id,"||",4)
				set data	= $piece(id,"||",7)
				set hora	= $piece(id,"||",8)
				set obj = ^VARPEPPremium(0,codPaciente,cid,ficha,1,115,data,hora,1)
				for piece=1:1:15{
					set vl = $piece(valor,";",piece)
					if vl="" continue
					set valor = 2
					if (vl=1)||(vl="true") set valor = 1
					set codworkflow = vet(piece)
					set $$$VARPEPPremiumValorRegistrado(obj) = valor
					set chave  = codPaciente_","_cid_","_ficha_","_1_","_codworkflow_","_data_","_hora
					set strStatus = $$$Save("VARPEPPremium",chave,obj,$$$YES)
				}
				
			}

			kill vet
			set vet(1) = 1939
			set vet(2) = 1940
			set vet(3) = 1941
			set vet(4) = 1942
			set vet(5) = 1943
			set vet(6) = 1944
			set vet(7) = 1945
			set vet(8) = 1946
			set vet(9) = 1947
			set vet(10) = 1948
			set vet(11) = 1950
			set vet(12) = 1949
			set vet(13) = 1951
			set vet(14) = 1952
			set vet(15) = 1953
			set rs = ##class(%SQL.Statement).%ExecDirect("","select ID,ValorRegistrado from VARPEPPremium where CoddoWorkFlow=122")
			while(rs.%Next()){
				set id 		= rs.%Get("ID")
				set valor 	= rs.%Get("ValorRegistrado")
				set codPaciente = $piece(id,"||",2)
				set cid 	= $piece(id,"||",3)
				set ficha 	= $piece(id,"||",4)
				set data	= $piece(id,"||",7)
				set hora	= $piece(id,"||",8)
				set obj = ^VARPEPPremium(0,codPaciente,cid,ficha,1,122,data,hora,1)
				for piece=1:1:15{
					set vl = $piece(valor,";",piece)
					if vl="" continue
					set valor = 2
					if (vl=1)||(vl="true") set valor = 1
					set codworkflow = vet(piece)
					set $$$VARPEPPremiumValorRegistrado(obj) = valor
					set chave  = codPaciente_","_cid_","_ficha_","_1_","_codworkflow_","_data_","_hora
					set strStatus = $$$Save("VARPEPPremium",chave,obj,$$$YES)
				}
				
			}
			set ^MAPPA20210525 = $horolog
		}
		if '$data(^MAPPA20210526){
			set rs = ##class(%SQL.Statement).%ExecDirect("","select Codigo from VARMedicamento group by NomeAlpha")
			while(rs.%Next()){
				set codigo = rs.%Get("Codigo")
				set obj = $get(^VARMedicamento(0,codigo,1))
				set $$$VARMedicamentoNome(obj) = ""
				set strStatus = $$$Save("VARMedicamento",codigo_".1",obj,$$$YES)
			}
			set ^MAPPA20210526 = $horolog
		}
		if '$data(^MAPPA20210526.1){
			set rs = ##class(%SQL.Statement).%ExecDirect("","select Codigo from VARMedicamento")
			while(rs.%Next()){
				set codigo = rs.%Get("Codigo")
				set obj = $get(^VARMedicamento(0,codigo,1))
				set subd = $$$VARMedicamentoSubDescricao(obj)
				set nome = $$$VARMedicamentoNome(obj)
				set nome = $replace(nome,"(Restrito Hosp.)","")
				set nome = $replace(nome,"(ICMS 0%)","")
				set nome = $zstrip(nome,"<>w")
				if nome="" continue
				set $$$VARMedicamentoNomeAlpha(obj) = nome_" ("_subd_")"
				set strStatus = $$$Save("VARMedicamento",codigo,obj,$$$YES)
			}
			set ^MAPPA20210526.1 = $horolog
		}
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	if strStatus=$$$OK{
		tcommit
	}else{
		trollback
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="verificaOpcoesIniciais">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = {}
	set cid = ""
	for {
		set cid = $order(^VARWorkFlowCID(0,cid)) quit:cid=""
		do retorno.%Set(cid,1)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="consultaIsInativa">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,consulta</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set obj = $get(^VARPEPPremiumConsulta(0,codPaciente,consulta,1))
	set inativo = +$$$VARPEPPremiumConsultaConsultaInativada(obj)
	set dataHora = $$$VARPEPPremiumConsultaDataHoradaInativacao(obj)
	set usuario = $$$VARPEPPremiumConsultaUsuarioResponsavelpelaInativacao(obj)
	set retorno = {}
	set retorno.inativo = inativo
	set retorno.dataHora = dataHora
	set retorno.usuario = usuario
	quit retorno]]></Implementation>
</Method>

<Method name="calculaDiagnostico">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	If (cid="C91.1") {
		set ativo=0
		set regra="<b>Regra aplicada:</b>"
		;
		set valor2031 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,2031),"~",1)
		If (valor2031 '= "") {
			Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 2031, 1)))
			Set regra = regra _ "<br>&nbsp; " _ "Avaliação clínica e sintomas B - Questionário Diagnóstico - Diagnóstico: <b>"_$Piece(xOpcoes,"|",valor2031)_"</b>"
			Quit $Piece(xOpcoes,"|",valor2031)_"~~"_regra
		}
		Quit ""
	}
	if cid'="C90.0" {
		set obj = $get(^VARWorkFlowCID(0,cid,1))
		set desc = $$$VARWorkFlowCIDDescricao(obj)
		quit desc
	}
	/*If ('$Data(^VARWorkFlowDiagnosticoSeqCond(0,cid))) {
		set obj = $get(^VARWorkFlowCID(0,cid,1))
		set desc = $$$VARWorkFlowCIDDescricao(obj)
		quit desc
	}*/
	set diagnostico = ""
	set diagnostico = ..calcDiagnosticoRDA(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDA"
	set diagnostico = ..calcDiagnosticoRDL(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDL"
	set diagnostico = ..calcDiagnosticoRDB(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDB"
	set diagnostico = ..calcDiagnosticoRDC(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDC"
	set diagnostico = ..calcDiagnosticoRDK(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDK"
	set diagnostico = ..calcDiagnosticoRDD(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDD"
	set diagnostico = ..calcDiagnosticoRDE(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDE"
	set diagnostico = ..calcDiagnosticoRDF(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDF"
	set diagnostico = ..calcDiagnosticoRDG(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDG"
	set diagnostico = ..calcDiagnosticoRDH(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDH"
	set diagnostico = ..calcDiagnosticoRDI(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDI"
	set diagnostico = ..calcDiagnosticoRDJ(codPaciente,cid,ficha)
	if diagnostico'="" quit diagnostico_"~RDJ"
	;set diagnostico = "Discrasias Plasmáticas"
	set diagnostico = ""
	quit diagnostico]]></Implementation>
</Method>

<Method name="calculaClassificaoMolecular">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if cid'="C90.0" quit ""

	Set refer = "<hr><b>Referência:</b><br>"
	Set refer = refer _ "- Fonseca, R. et al. International Myeloma Working Group molecular classification of multiple myeloma: spotlight review. Leukemia 23, 2210–2221 (2009).<br>"
	Set refer = refer _ "- Rajkumar, S.V. et al. Multiple myeloma current treatment algorithms. Blood Cancer J.10,94 (2020)."
	
	Set flagPend = 0
	Set retPend = "<b>Campos pendente Classificao Molecular:</b>"
	set regra = "<b>Regra aplicada para Classificao Molecular:</b>"	
	
	Set xTipoDiag = $Piece(..calculaDiagnostico(codPaciente,cid,ficha),"~",4)
	If (xTipoDiag '= "RDB" && (xTipoDiag '= "RDC")) {
		Set flagPend = 1
		Set retPend = retPend _ "<br>&nbsp; Diagnóstico: Mieloma Múltiplo"
	}
	set regra = regra _ "<br>&nbsp; Diagnóstico: Mieloma Múltiplo"	
	Set ret = ..recClassificacaoHiperdiploide(codPaciente, cid, ficha)
	set classHiper = $Piece(ret,"~",1), classHiperNome = $Piece(ret,"~",2)
	If (classHiper = 0) {
		Set retPend = retPend _"<br>"_ $Piece(ret,"~",2)_"<br>"_ $Piece(ret,"~",3)		
	}Else{
		set regra = regra _ "<br>&nbsp; "_$Piece(ret,"~",2)	
	}
	Set ret = ..recClassificacaoIGH1(codPaciente, cid, ficha)
	set classIGH1 = $Piece(ret,"~",1), classIGH1Nome = $Piece(ret,"~",2)
	If (classIGH1 = 0) {
		Set retPend = retPend _"<br>"_ $Piece(ret,"~",2)_"<br>"_ $Piece(ret,"~",3)		
	}Else{
		set regra = regra _ "<br>&nbsp; "_$Piece(ret,"~",2)	
	}
	Set ret = ..recClassificacaoIGH2(codPaciente, cid, ficha)
	set classIGH2 = $Piece(ret,"~",1), classIGH2Nome = $Piece(ret,"~",2)
	If (classIGH2 = 0) {
		Set retPend = retPend _"<br>"_ $Piece(ret,"~",2)_"<br>"_ $Piece(ret,"~",3)		
	}Else{
		set regra = regra _ "<br>&nbsp; "_$Piece(ret,"~",3)	
	}
	Set ret = ..recClassificacaoIGH3(codPaciente, cid, ficha)
	set classIGH3 = $Piece(ret,"~",1), classIGH3Nome = $Piece(ret,"~",2)
	If (classIGH3 = 0) {
		Set retPend = retPend _"<br>"_ $Piece(ret,"~",2)_"<br>"_ $Piece(ret,"~",3)		
	}Else{
		set regra = regra _ "<br>&nbsp; "_$Piece(ret,"~",3)	
	}
	if (flagPend=0)&&(classHiper=1)&&((classIGH1=1)||(classIGH2=1)||(classIGH3=1)){
		Quit "1~Mieloma Múltiplo trissômico combinado com translocação de IGH~"_regra_refer
		
		;_$Piece(classHiper,"~",2)_
		;$Select(
		;	classIGH1'="":$Piece($Piece(classIGH1,"~",2),"</b>",2),
		;	classIGH2'="":$Piece($Piece(classIGH2,"~",2),"</b>",2),
		;	classIGH3'="":$Piece($Piece(classIGH3,"~",2),"</b>",2),
		;	1:"")
	}
	if (flagPend=0&&(classHiper=1)) quit "1~"_classHiperNome_"~"_regra_refer
	if (flagPend=0&&(classIGH1=1)) quit "1~"_classIGH1Nome_"~"_regra_refer
	if (flagPend=0&&(classIGH2=1)) quit "1~"_classIGH2Nome_"~"_regra_refer
	if (flagPend=0&&(classIGH3=1)) quit "1~"_classIGH3Nome_"~"_regra_refer
	;
	Quit "0~"_retPend_refer]]></Implementation>
</Method>

<Method name="recClassificacaoHiperdiploide">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set pend = "<b>Mieloma Múltiplo hiperdiploide / trissômico</b>~"
	; Se “Trissomia 3,7,9,11,13,15,17 (aqui o médico pode clicar em cada uma das sete possibilidades, incluindo mais do que uma e em todas as combinações cai neste grupo)” - Mieloma Múltiplo hiperdiploide / trissômico
	if ..verificaNivelPais(codPaciente,cid,ficha,1,164){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,164),"~",1)
		if valor[1 {
			Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 164, 1)))
			Set ret = "Mieloma Múltiplo hiperdiploide / trissômico~<br>&nbsp; Análise Citogenética - Cariótipo - Trissomia(s): "
			Set flag = ""
			For i = 1 : 1 : $Length(valor,";"){
				If ($piece(valor,";",i)'=1) Continue
				Set ret = ret _ flag _ $Piece(xOpcoes,"|",i) 
				Set flag = ", "
			}
			Quit "1~"_ret
		}	
	}
	Set pend = pend _ "&nbsp; Análise Citogenética - Cariótipo - Trissomia(s)"
	if ..verificaNivelPais(codPaciente,cid,ficha,1,36714){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,36714),"~",1)
		if valor[1 {
			Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 36714, 1)))
			Set ret = "Mieloma Múltiplo hiperdiploide / trissômico~<br>&nbsp; Análise Citogenética - FISH - Trissomia(s): "
			Set flag = ""
			For i = 1 : 1 : $Length(valor,";"){
				If ($piece(valor,";",i)'=1) Continue
				Set ret = ret _ flag _ $Piece(xOpcoes,"|",i) 
				Set flag = ", "
			}
			Quit "1~"_ret
		}
	}
	Set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH - Trissomia(s)"
	Quit "0~"_pend]]></Implementation>
</Method>

<Method name="recClassificacaoIGH1">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set pend = "<b>Mieloma Múltiplo com translocação IGH - t(11;14)(q13;q32)</b>~"
	; Se t(11;14)(q13;q32) CCND1/IgH – “Mieloma Múltiplo com translocação IGH - t(11;14)(q13;q32)”
	if ..verificaNivelPais(codPaciente,cid,ficha,1,155){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,155),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(11;14)(q13;q32)~&nbsp; Análise Citogenética - Cariótipo - t(11;14)(q13;q32)"
	}
	Set pend = pend _ "&nbsp; Análise Citogenética - Cariótipo - t(11;14)(q13;q32)"
	if ..verificaNivelPais(codPaciente,cid,ficha,1,36705){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,36705),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(11;14)(q13;q32)~&nbsp; Análise Citogenética - FISH - t(11;14)(q13;q32)"
	}
	Set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH - t(11;14)(q13;q32)"
	quit "0~"_pend]]></Implementation>
</Method>

<Method name="recClassificacaoIGH2">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set pend = "<b>Mieloma Múltiplo com translocação IGH - t(4;14)(p16.3;q32)</b>~"
	;Se t(4;14)(p16.3;q32) FGFR3/IgH - “Mieloma Múltiplo com translocação IGH - t(4;14)(p16.3;q32)”
	if ..verificaNivelPais(codPaciente,cid,ficha,1,149){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,149),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(4;14)(p16.3;q32)~&nbsp; Análise Citogenética - Cariótipo - t(4;14)(p16.3;q32)"
	}
	Set pend = pend _ "&nbsp; Análise Citogenética - Cariótipo - t(4;14)(p16.3;q32)"
	if ..verificaNivelPais(codPaciente,cid,ficha,1,36699){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,36699),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(4;14)(p16.3;q32)~&nbsp; Análise Citogenética - FISH - t(4;14)(p16.3;q32)"
	}
	Set pend =  pend _ "<br>&nbsp; Análise Citogenética - FISH - t(4;14)(p16.3;q32)"
	quit "0~"_pend]]></Implementation>
</Method>

<Method name="recClassificacaoIGH3">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set pend = "<b>Mieloma Múltiplo com translocação IGH</b>~"
	; Se “t(14;16)(q32;q23) ou t(14;20)(q32;q12)” - Mieloma Múltiplo translocação IGH - “nome da alteração detectada”, que pode ser t(14;16) ou t(14;20)”
	if ..verificaNivelPais(codPaciente,cid,ficha,1,158){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,158),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(14;16)(q32;q23)~&nbsp; Análise Citogenética - Cariótipo - t(14;16)(q32;q23)"
	}
	Set pend =  pend _ "&nbsp; Análise Citogenética - Cariótipo - t(14;16)(q32;q23)"
	if ..verificaNivelPais(codPaciente,cid,ficha,1,161){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,161),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(14;20)(q32;q12)~&nbsp; Análise Citogenética - Cariótipo - t(14;20)(q32;q12)"
	}
	Set pend =  pend _ "<br>&nbsp; Análise Citogenética - Cariótipo - t(14;20)(q32;q12)"
	if ..verificaNivelPais(codPaciente,cid,ficha,1,36708){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,36708),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(14;16)(q32;q23)~&nbsp; Análise Citogenética - FISH - t(14;16)(q32;q23)"
	}
	Set pend =  pend _ "<br>&nbsp; Análise Citogenética - FISH - t(14;16)(q32;q23)"
	if ..verificaNivelPais(codPaciente,cid,ficha,1,36711){
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,36711),"~",1)
		if valor=1 quit "1~Mieloma Múltiplo com translocação IGH - t(14;20)(q32;q12)~&nbsp; Análise Citogenética - FISH - t(14;20)(q32;q12)"
	}
	Set pend =  pend _ "<br>&nbsp; Análise Citogenética - FISH - t(14;20)(q32;q12)"
	quit "0~"_pend]]></Implementation>
</Method>

<Method name="calculaRiscoCitogenetico">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	;Julio Checar com o Silmar
	if cid'="C90.0" quit ""
	;
	Set refer = "<hr><b>Referência:</b><br>"
	Set refer = refer _ "- Rajkumar, S.V. et al. Multiple myeloma current treatment algorithms. Blood Cancer J.10,94 (2020)."
	;
	Set flagPend = 0
	set regra = "", pend = ""
	;
	Set xTipoDiag = $Piece(..calculaDiagnostico(codPaciente,cid,ficha),"~",4)
	If (xTipoDiag '= "RDB" && (xTipoDiag '= "RDC")) {
		Set flagPend = 1
		set pend = pend _ "<br>&nbsp; Diagnóstico: Mieloma Múltiplo = Sim: <b>"_$Select(flagPend=0:"Sim",1:"Não")_"</b>"	
	}
	set regra = regra _ "<br>&nbsp; Diagnóstico: Mieloma Múltiplo = Sim: <b>"_$Select(flagPend=0:"Sim",1:"Não")_"</b>"	
	set regraAPreenc = ""
	;
	set soma=0
	;
	set campoC = 48694
	set campoF = 48690
	set semC = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoC),"~",1)
	set semF = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoF),"~",1)
	Set semA  = 0
	if (semC=0||(semF=0)) {
		Set semA = 1
	}else{
		set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH - FISH sem alterações? = Não: <b>"_$Select(semF=1:"Sim",semF=0:"Não",1:"")_"</b>"
		set pend = pend _ "<br>&nbsp; Análise Citogenética - Cariótipo - Cariótipo normal? = Não: <b>"_$Select(semC=1:"Sim",semC=0:"Não",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - FISH - FISH sem alterações? Não: <b>"_$Select(semF=1:"Sim",semF=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - Cariótipo - Cariótipo normal? Não: <b>"_$Select(semC=1:"Sim",semC=0:"Não",1:"")_"</b>"
	
	set campoC = 142
	set campoF = 36690
	set f17pC = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoC),"~",1)
	set f17pF = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoF),"~",1)
	Set f17p  = 0
	if (f17pC=1||(f17pF=1)) {
		Set f17p  = 1
	}else{
		set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 142),"<br>"," ")_" = Sim: <b>"_$Select(f17pF=1:"Sim",f17pF=2:"Não",f17pF=3:"Não fez o teste",1:"")_" "_$Select(f17pC=1:"Sim",f17pC=2:"Não",f17pC=3:"Não fez o teste",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 142),"<br>"," ")_" = Sim: <b>"_$Select(f17pF=1:"Sim",f17pF=2:"Não",f17pF=3:"Não fez o teste",1:"")_" "_$Select(f17pC=1:"Sim",f17pC=2:"Não",f17pC=3:"Não fez o teste",1:"")_"</b>"
	;
	set campoC = 145
	set campoF = 36693
	set iq21C = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoC),"~",1)
	set iq21F = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoF),"~",1)
	Set iq21  = 0
	if (iq21C=1||(iq21F=1)) {
		Set iq21  = 1
	}else{
		set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 145),"<br>"," ")_" = Sim: <b>"_$Select(iq21F=1:"Sim",iq21F=2:"Não",iq21F=3:"Não fez o teste",1:"")_" "_$Select(iq21C=1:"Sim",iq21C=2:"Não",iq21C=3:"Não fez o teste",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 145),"<br>"," ")_" = Sim: <b>"_$Select(iq21F=1:"Sim",iq21F=2:"Não",iq21F=3:"Não fez o teste",1:"")_" "_$Select(iq21C=1:"Sim",iq21C=2:"Não",iq21C=3:"Não fez o teste",1:"")_"</b>"
	;
	set campoC = 149
	set campoF = 36699
	set t414C = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoC),"~",1)
	set t414F = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoF),"~",1)
	Set t414  = 0
	if (t414C=1||(t414F=1)) {
		Set t414  = 1
	}else{
		set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 149),"<br>"," ")_" = Sim: <b>"_$Select(t414F=1:"Sim",t414F=2:"Não",t414F=3:"Não fez o teste",1:"")_" "_$Select(t414C=1:"Sim",t414C=2:"Não",t414C=3:"Não fez o teste",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 149),"<br>"," ")_" = Sim: <b>"_$Select(t414F=1:"Sim",t414F=2:"Não",t414F=3:"Não fez o teste",1:"")_" "_$Select(t414C=1:"Sim",t414C=2:"Não",t414C=3:"Não fez o teste",1:"")_"</b>"
	;
	set campoC = 158
	set campoF = 36708
	set t1416C = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoC),"~",1)
	set t1416F = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoF),"~",1)
	Set t1416  = 0
	if (t1416C=1||(t1416F=1)) {
		Set t1416  = 1
	}else{
		set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 158),"<br>"," ")_" = Sim: <b>"_$Select(t1416F=1:"Sim",t1416F=2:"Não",t1416F=3:"Não fez o teste",1:"")_" "_$Select(t1416C=1:"Sim",t1416C=2:"Não",t1416C=3:"Não fez o teste",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 158),"<br>"," ")_" = Sim: <b>"_$Select(t1416F=1:"Sim",t1416F=2:"Não",t1416F=3:"Não fez o teste",1:"")_" "_$Select(t1416C=1:"Sim",t1416C=2:"Não",t1416C=3:"Não fez o teste",1:"")_"</b>"
	;
	set campoC = 161
	set campoF = 36711
	set t1420C = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoC),"~",1)
	set t1420F = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoF),"~",1)
	Set t1420  = 0
	if (t1420C=1||(t1420F=1)) {
		Set t1420  = 1
	}else{
		set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 161),"<br>"," ")_" = Sim: <b>"_$Select(t1420F=1:"Sim",t1420F=2:"Não",t1420F=3:"Não fez o teste",1:"")_" "_$Select(t1420C=1:"Sim",t1420C=2:"Não",t1420C=3:"Não fez o teste",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 161),"<br>"," ")_" = Sim: <b>"_$Select(t1420F=1:"Sim",t1420F=2:"Não",t1420F=3:"Não fez o teste",1:"")_" "_$Select(t1420C=1:"Sim",t1420C=2:"Não",t1420C=3:"Não fez o teste",1:"")_"</b>"
	;
	set campoC = 48695
	set campoF = 48691
	set outAltC = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoC),"~",1)
	set outAltF = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campoF),"~",1)
	Set outAlt  = 0
	if (outAltC=1||(outAltC=1)) {
		Set outAlt  = 1
	}else{
		set pend = pend _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 48695),"<br>"," ")_" = Sim: <b>"_$Select(outAltF=1:"Sim",outAltF=2:"Não",outAltF=3:"Não fez o teste",1:"")_" "_$Select(outAltC=1:"Sim",outAltC=2:"Não",outAltC=3:"Não fez o teste",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise Citogenética - FISH ou Cariótipo - " _ $Replace(..recDescricaoWorkFlow(cid, 48695),"<br>"," ")_" = Sim: <b>"_$Select(outAltF=1:"Sim",outAltF=2:"Não",outAltF=3:"Não fez o teste",1:"")_" "_$Select(outAltC=1:"Sim",outAltC=2:"Não",outAltC=3:"Não fez o teste",1:"")_"</b>"

	;
	set campo  = 172
	set tp53C  = $piece(..recValorSalvo(codPaciente,cid,ficha,1,campo),"~",1)
	Set tp53   = 0
	if (tp53C=0) {
		Set tp53 = 1
	}else{
		Set pend = pend _ "<br>&nbsp; Análise de Biologia Molecular - " _ $Replace(..recDescricaoWorkFlow(cid, 172),"<br>"," ")_" = Mutado: <b>"_$Select(tp53C=0:"Mutado",tp53C=1:"Não Mutado",tp53C=2:"Não fez o teste",1:"")_"</b>"
	}
	Set regra = regra _ "<br>&nbsp; Análise de Biologia Molecular - " _ $Replace(..recDescricaoWorkFlow(cid, 172),"<br>"," ")_" = Mutado: <b>"_$Select(tp53C=0:"Mutado",tp53C=1:"Não Mutado",tp53C=2:"Não fez o teste",1:"")_"</b>"
	;
	If (flagPend=1) {
		Quit "0~"_"<b>Campo(s) pendente(s) para Risco Citogenético-Molecular</b>"_pend_refer
	}
	Set regra = "<b>Campo(s) preenchido(s) para Risco Citogenético-Molecular:</b>"_regra_refer
	Set soma = f17p+iq21+t414+t1416+t1420+tp53
	If soma=2 Quit "1~Alto risco - Mieloma Double hit~"_regra
	If soma>=3 quit "1~Alto risco - Mieloma Triple hit~"_regra
	If soma>0 quit "1~Alto risco~"_regra
	If (semA = 1 || (outAlt = 1)) Quit "1~Risco padrão~"_regra
	Quit "0~"_"<b>Campo(s) pendente(s) para Risco Citogenético-Molecular</b>"_pend_refer]]></Implementation>
</Method>

<Method name="calculaRiscoMielomaIndolente">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	;Julio Checar com o Silmar
	if cid'="C90.0" quit ""
	;
	Set refer = "<hr><b>Referência:</b><br>"
	Set refer = refer _ "- Lakshman A, et al. Risk stratification of smoldering multiple myeloma incorporating revised IMWG diagnostic criteria. Blood Cancer J. 2018 Jun 12;8(6):59."
	;
	Set flagPend = 0
	set regra = "", pend = ""
	;
	Set xTipoDiag = $Piece(..calculaDiagnostico(codPaciente,cid,ficha),"~",4)
	If (xTipoDiag '= "RDD") {
		Set flagPend = 1
		set pend = pend _ "<br>&nbsp; Diagnóstico: Mieloma Indolente = Sim: <b>"_$Select(flagPend=0:"Sim",1:"Não")_"</b>"	
	}
	set regra = ""
	set regra = regra _ "<br>&nbsp; Diagnóstico: Mieloma Indolente= Sim: <b>"_$Select(flagPend=0:"Sim",1:"Não")_"</b>"	
	;
	set valor01 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set valor02 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	set valor03A 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
	if ('..verificaNivelPais(codPaciente,cid,ficha,1,38497)) {
		set valor03A = ""
	}
	set valor9A 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38537),"~",1),";",1)
	set valor9B 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38537),"~",1),";",2)
	set valor11A 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38538),"~",1),";",1)
	set valor11B 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38538),"~",1),";",2)
	;
	if (valor01'="") Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ ": <b>"_valor01_"%</b>"
	else  Set pend = pend _ "<br>&nbsp; "_$Replace(..recDescricaoWorkFlow(cid, 38493),"<br>"," ")_" - "_$Replace(..recDescricaoWorkFlow(cid, 47276),"<br>"," ")_" - " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") 
	if (valor02'="") Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ ": <b>"_valor02_"%</b>"
	else  Set pend = pend _ "<br>&nbsp; "_$Replace(..recDescricaoWorkFlow(cid, 38493),"<br>"," ")_" - "_$Replace(..recDescricaoWorkFlow(cid, 47276),"<br>"," ")_" - " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ")
	if (valor03A'="") Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38496),"<br>"," ") _ ": <b>Sim</b> - Quantidade: <b>"_valor03A_"%</b>"
	else  Set pend = pend_ "<br>&nbsp; "_$Replace(..recDescricaoWorkFlow(cid, 38493),"<br>"," ")_" - "_$Replace(..recDescricaoWorkFlow(cid, 47276),"<br>"," ")_" - " _ $Replace(..recDescricaoWorkFlow(cid, 38496),"<br>"," ") _"  = Sim - " _ $Replace(..recDescricaoWorkFlow(cid, 38497),"<br>"," ")
	if (valor9A'="") Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38537),"<br>"," ") _ ": <b>"_valor9A_"g/dL</b>"
	else  Set pend = pend _ "<br>&nbsp; "_$Replace(..recDescricaoWorkFlow(cid, 38493),"<br>"," ")_" - "_$Replace(..recDescricaoWorkFlow(cid, 47276),"<br>"," ")_" - " _ $Replace(..recDescricaoWorkFlow(cid, 38537),"<br>"," ")
	if (valor9B'="") Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38537),"<br>"," ") _ " - Valor Referência: <b>"_valor9B_"g/dL</b>"
	else  Set pend = pend _ "<br>&nbsp; "_$Replace(..recDescricaoWorkFlow(cid, 38493),"<br>"," ")_" - "_$Replace(..recDescricaoWorkFlow(cid, 47276),"<br>"," ")_" - " _ $Replace(..recDescricaoWorkFlow(cid, 38537),"<br>"," ") _ " - Valor Referência"
	if (valor11A'="") Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38538),"<br>"," ") _ ": <b>"_valor11A_"g/dL</b>"
	else  Set pend = pend _ "<br>&nbsp; "_$Replace(..recDescricaoWorkFlow(cid, 38493),"<br>"," ")_" - "_$Replace(..recDescricaoWorkFlow(cid, 47276),"<br>"," ")_" - " _ $Replace(..recDescricaoWorkFlow(cid, 38538),"<br>"," ")
	if (valor11B'="") Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38538),"<br>"," ") _ " - Valor Referência: <b>"_valor11B_"g/dL</b>"
	else  Set pend = pend _ "<br>&nbsp; "_$Replace(..recDescricaoWorkFlow(cid, 38493),"<br>"," ")_" - "_$Replace(..recDescricaoWorkFlow(cid, 47276),"<br>"," ")_" - " _ $Replace(..recDescricaoWorkFlow(cid, 38538),"<br>"," ") _ " - Valor Referência"
	;	
	Set soma = 0
	if (valor01>20||(valor02>20)||(valor03A>20)) Set soma = soma + 1
	if (valor11A>=2||(valor11B>=2)) Set soma = soma + 1
	if (+valor9A>0&&(+valor9B>0)&&((valor9A/valor9B)>20||((valor9A/valor9B)>20))) Set soma = soma + 1
	;
	If (flagPend=1||(valor01=""&&(valor02="")&&(valor03A=""))) {
		Quit "0~<b>Campo(s) pendente(s) para Risco Mieloma Indolente</b>"_pend_refer
	}
	Set regra = "<b>Campo(s) preenchido(s) para Risco Mieloma Indolente:</b>"_regra_refer
	if soma>=2 quit "1~Alto Risco~"_regra
	Quit "1~Baixo Risco~"_regra]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDA">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Leucemia de Células Plasmáticas:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 1) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Leucemia de Células Plasmáticas</b>"
		Quit "Leucemia de Células Plasmáticas~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set ativo4a10ePlasmocitosMoior5 = 0
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor09 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	set valor 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38571),"~",1)
	
	If ((valor04=1)||(valor05=1)||(valor06=1)||(valor07=1)||(valor08=1)||(valor09=1)||(valor10=1))&&(valor>=5) {
		Set index = 3
		For campo = 38499,38500,38501,38502,38503,38504,38505 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			;If (@("valor"_indexF)'=1) Continue
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Sim: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
			;Quit
		}
		Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38571),"<br>"," ") _ " &GreaterEqual; 5%: <b>"_valor_"%</b>"
		set ativo4a10ePlasmocitosMoior5=1
	}
	;
	If (ativo4a10ePlasmocitosMoior5) set ativo=1
	; há plasmócitos clonais na medula óssea?
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	set plasmoMielo=0,plasmoBiopsia=0,plasmoImuno=0
	set plasmoMielo = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set plasmoBiopsia = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	set plasmoImuno = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
	Set:(plasmoMielo>10) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " > 10%: <b>"_plasmoMielo_"%</b>"
	Set:(plasmoBiopsia>10) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " > 10%: <b>"_plasmoBiopsia_"%</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38496),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if valor=1{
		; plasmócitos no mielograma, biópsia ou imunofenotipagem > que 10%
		if ((plasmoImuno>10)||(plasmoBiopsia>10)||(plasmoMielo>10))&&(ativo4a10ePlasmocitosMoior5=1){
			set ativo=1
		}
	}
	Set:(valor=1&&(plasmoImuno>10)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38497),"<br>"," ") _ " > 10%: <b>"_plasmoImuno_"%</b>"
	; O paciente apresenta plasmocitoma extra medular (em tecidos não ósseo)
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38520),"~",1)
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38520),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if (valor=1&&(ativo4a10ePlasmocitosMoior5=1)){
		set ativo=1
	}
	; O paciente apresenta inventário ósseo (por Raiox, tomografia, PET-CT ou Ressonância nuclear  magnética) normal?
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38524),"~",1)
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38524),"<br>"," ") _ " = Não: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if valor=0{
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38535),"~",1)
		if ((valor=1)||(valor=2))&&(ativo4a10ePlasmocitosMoior5=1){
			Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 38535, 1)))
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38535),"<br>"," ") _ ": <b>"_$Piece(xOpcoes,"|",valor)_"</b>"
			set ativo=1
		}
	}
	/*if ativo{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos=0 set ativo=0
	}
	if ativo{
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38571),"~",1)
		if valor<5 set ativo=0
	}*/
	if ativo=1 quit "Leucemia de Células Plasmáticas~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDL">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Mieloma Múltiplo com Amiloidose Sistêmica AL:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 2) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Mieloma Múltiplo com Amiloidose Sistêmica AL</b>"
		Quit "Mieloma Múltiplo com Amiloidose Sistêmica AL~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	Set diagRDB = ..calcDiagnosticoRDB(codPaciente,cid,ficha)
	Set diagRDC = ..calcDiagnosticoRDC(codPaciente,cid,ficha)
	set valor26 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48183),"~",1)
	set valor27 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48185),"~",1)
	set valor27A 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48186),"~",1)
	;
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 48183),"<br>"," ") _ " = Sim: <b>"_$Select(valor26=1:"Sim",valor26=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 48185),"<br>"," ") _ " = Sim: <b>"_$Select(valor26=1:"Sim",valor27=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 48186),"<br>"," ") _ " = Sim: <b>"_$Select(valor26=1:"Sim",valor27A=0:"Não",1:"")_"</b>"
	if (valor26=1&&(valor27=1)&&(valor27A=1)&&(diagRDB'="")) {
		Set regra = regra _ "<br>- "_$Piece(diagRDB,"~",3)
		Set ativo = 1	
	}
	if ('ativo&&(valor26=1)&&(valor27=1)&&(valor27A=1)&&(diagRDC'="")) {
		Set ativo = 1	
		Set regra = regra _ "<br>- "_$Piece(diagRDC,"~",3)
	}		
	if ativo=1 quit "Mieloma Múltiplo com Amiloidose Sistêmica AL~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDB">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Mieloma Múltiplo:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 3) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Mieloma Múltiplo</b>"
		Quit "Mieloma Múltiplo~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	;Plasmócitos clonais na medulla óssea ≥ 60%?
	set plasmoMielo 	= +$piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set plasmoBiopsia = +$piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	set valor03 			= +$piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	set plasmoImuno 	= +$piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
	set valor08 			= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38503),"<br>"," ") _ " = Sim: <b>"_$Select(valor08=1:"Sim",valor08=0:"Não",1:"")_"</b>"
	if (valor08=1) {
		set ativo=1
	}
	Set:plasmoMielo>=60 regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " &GreaterEqual; 60%: <b>"_plasmoMielo_"%</b>"
	Set:plasmoBiopsia>=60 regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " &GreaterEqual; 60%: <b>"_plasmoBiopsia_"%</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38496),"<br>"," ") _ " = Sim: <b>"_$Select(valor03=1:"Sim",valor03=0:"Não",1:"")_"</b>"
	Set:(valor03=1&&(plasmoImuno>=60)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38497),"<br>"," ") _ " &GreaterEqual; 60%: <b>"_plasmoImuno_"%</b>"
	If (ativo=0&&(valor03=1)){
		if (plasmoMielo>=60||(plasmoBiopsia>=60)||(plasmoImuno>=60)){
			set ativo=1
		}
	}
	if (ativo = 1) {
		Set diagRDC = ..calcDiagnosticoRDC(codPaciente,cid,ficha,1)
		Set regra = regra _ $Replace($Piece(diagRDC,"~",3),"<b>Regra aplicada para Mieloma Múltiplo:</b>","")
	}
	if ativo=1 quit "Mieloma Múltiplo~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDC">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,pBloq=0</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Mieloma Múltiplo:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 3) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Mieloma Múltiplo</b>"
		Quit "Mieloma Múltiplo~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set ativo4a10 = 0
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor09 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	If ((valor04=1)||(valor05=1)||(valor06=1)||(valor07=1)||(valor08=1)||(valor09=1)||(valor10=1)) {
		Set index = 3
		For campo = 38499,38500,38501,38502,38503,38504,38505 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			;If (@("valor"_indexF)'=1) Continue
			if (pBloq=1&&(campo=38503)) Continue
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Sim: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
		}
		set ativo4a10=1
	}
	;
	; há plasmócitos clonais na medula óssea?
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	; plasmócitos no mielograma, biópsia ou imunofenotipagem > que 10%
	set plasmoMielo=0,plasmoBiopsia=0,plasmoImuno=0,maior=0
	set plasmoMielo = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set maior = plasmoMielo
	set plasmoBiopsia = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	if plasmoBiopsia>maior set maior=plasmoBiopsia
	set plasmoImuno = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
	if plasmoImuno>maior set maior=plasmoImuno
	Set:(plasmoMielo>=10&&(plasmoMielo<=59)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " &GreaterEqual; 10% e &le; 59%: <b>"_plasmoMielo_"%</b>"
	Set:(plasmoBiopsia>=10&&(plasmoBiopsia<=59)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " &GreaterEqual; 10% e &le; 59%: <b>"_plasmoBiopsia_"%</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38496),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if valor=1{
		Set:(plasmoImuno>=10&&(plasmoImuno<=60)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38497),"<br>"," ") _ " &GreaterEqual; 10% e &le; 59%: <b>"_plasmoImuno_"%</b>"
		if ((maior>=10&&(maior<=59))&&ativo4a10=1){
			set ativo=1
		}
	}
	; O paciente apresenta plasmocitoma extra medular (em tecidos não ósseo)
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38520),"~",1)
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38520),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if (valor=1)&&(ativo4a10=1){
		set ativo=1
	}
	;
	; O paciente apresenta inventário ósseo (por Raiox, tomografia, PET-CT ou Ressonância nuclear  magnética) normal?
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38524),"~",1)
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38524),"<br>"," ") _ " = Não: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if valor=0{
		set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38535),"~",1)
		Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 38535, 1)))
		Set:((valor=1)||(valor=2)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38535),"<br>"," ") _ ": <b>"_$Piece(xOpcoes,"|",valor)_"</b>"
		if ((valor=1)||(valor=2))&&(ativo4a10=1){
			set ativo=1
		}
	}
	/*if ativo=1{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos=0 set ativo=0
	}*/
	If (pBloq = 1) quit "Mieloma Múltiplo~~"_regra
	if ativo=1 quit "Mieloma Múltiplo~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDK">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Amiloidose sistêmica AL:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 4) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Amiloidose Sistêmica AL</b>"
		Quit "Amiloidose Sistêmica AL~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set valor26 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48183),"~",1)
	set valor27 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48185),"~",1)
	set valor27A 	= ""
	set:valor27=1 valor27A 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48186),"~",1)
	;
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 48183),"<br>"," ") _ " = Sim: <b>"_$Select(valor26=1:"Sim",valor26=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 48185),"<br>"," ") _ " = Sim: <b>"_$Select(valor26=1:"Sim",valor27=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 48186),"<br>"," ") _ " = Sim: <b>"_$Select(valor26=1:"Sim",valor27A=0:"Não",1:"")_"</b>"
	;
	Set diagRDD = ..calcDiagnosticoRDD(codPaciente,cid,ficha)
	Set diagRDE = ..calcDiagnosticoRDE(codPaciente,cid,ficha)
	Set diagRDF = ..calcDiagnosticoRDF(codPaciente,cid,ficha)
	Set diagRDH = ..calcDiagnosticoRDH(codPaciente,cid,ficha)
	Set diagRDJ	= ..calcDiagnosticoRDJ(codPaciente,cid,ficha)
	;
	if (valor26=1&&(valor27=1)&&(valor27A=1)) {
		if (diagRDD'="") {
			Set ativo = 1	
			Set regra = regra _ "<br>- "_$Piece(diagRDD,"~",3)
		}
		if ('ativo&&(diagRDE'="")) {
			Set ativo = 1	
			Set regra = regra _ "<br>- "_$Piece(diagRDE,"~",3)
		}		
		if ('ativo&&(diagRDF'="")) {
			Set ativo = 1	
			Set regra = regra _ "<br>- "_$Piece(diagRDF,"~",3)
		}		
		if ('ativo&&(diagRDH'="")) {
			Set ativo = 1	
			Set regra = regra _ "<br>- "_$Piece(diagRDH,"~",3)
		}		
		if ('ativo&&(diagRDJ'="")) {
			Set ativo = 1	
			Set regra = regra _ "<br>- "_$Piece(diagRDJ,"~",3)
		}		
	}
	if ativo=1 quit "Amiloidose sistêmica AL~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDD">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set soma = 0
	set ativo=0
	set regra="<b>Regra aplicada para Mieloma Indolente:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 5) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Mieloma Indolente</b>"
		Quit "Mieloma Indolente~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set ativo4a10 = 0
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor09 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	set valor25 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48182),"~",1)
	If ((valor04=0)&&(valor05=0)&&(valor06=0)&&(valor07=0)&&(valor08=0)&&(valor09=0)&&(valor10=0)&&(valor25=0)) {
		Set index = 3
		For campo = 38499,38500,38501,38502,38503,38504,38505,48182 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			If (campo=48182) Set indexF = 25
			;Set:campo=48182 regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não"
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
		}
		set ativo4a10=1
	}
	; O paciente tem Pico monoclonal de gamaglobulina sérica
	set valor 		= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38506),"~",1)
	set (valor11p1,valor11B) = ""
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38506),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if valor=1{
		set valor11p1 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,47278),"~",1)
		set valor11B 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38507),"~",1)
		if ((valor11p1>=3)&&(($piece(valor11B,";",1)=1)||($piece(valor11B,";",2)=1))&&(ativo4a10=1)){
			set ativo=1
		}
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 47278),"<br>"," ") _ " &GreaterEqual; 3g/dL: <b>"_valor11p1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38507),"<br>"," ") _ " = IgG ou IgA: <b>"_$Select(($piece(valor11B,";",1)=1&&($piece(valor11B,";",2)=1)):"IgG e IgA",$piece(valor11B,";",1)=1:"IgG",$piece(valor11B,";",2)=1:"IgA",1:"")_"</b>"
	;
	; O paciente tem Pico monoclonal de gamaglobulina urinária
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38540),"~",1)
	set (valor12p1,valor12B) = ""
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38540),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if valor=1{
		; pico urinário de IgG ou IgA > 500 mg/24h
		set valor12p1 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,47281),"~",1)
		set valor12B = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38541),"~",1)
		if ((valor12p1>=500)&&(($piece(valor12B,";",1)=1)||($piece(valor12B,";",2)=1))&&(ativo4a10=1)){
			set ativo=1
		}
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 47281),"<br>"," ") _ " &GreaterEqual; 500g/dL: <b>"_valor12p1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38541),"<br>"," ") _ " = IgG ou IgA: <b>"_$Select(($piece(valor12B,";",1)=1&&($piece(valor12B,";",2)=1)):"IgG e IgA",$piece(valor12B,";",1)=1:"IgG",$piece(valor12B,";",2)=1:"IgA",1:"")_"</b>"
	;
	; 3 = sim (há plasmócitos clonais na medula óssea) 
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	set plasmoMielo=0,plasmoBiopsia=0,plasmoImuno=0,maior=0
	set plasmoMielo = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set maior = plasmoMielo
	set plasmoBiopsia = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	if plasmoBiopsia>maior set maior=plasmoBiopsia
	Set:(plasmoMielo>=10&&(plasmoMielo<=59)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " &GreaterEqual; 10% e &le; 59%: <b>"_plasmoMielo_"%</b>"
	Set:(plasmoBiopsia>=10&&(plasmoBiopsia<=59)) regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " &GreaterEqual; 10% e &le; 59%: <b>"_plasmoBiopsia_"%</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38496),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	if valor=1{
		if (maior>=10&&(maior<=59)&&(ativo4a10=1)){
			set ativo=1
		}
	}

	/*if ativo=1{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos>0 set ativo=0
	}*/

	if ativo=1 quit "Mieloma Indolente~"_soma_"~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDE">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Plasmocitoma solitário:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 6) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Plasmocitoma Solitário</b>"
		Quit "Plasmocitoma Solitário~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set ativo3a10 = 0
	set valor03 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	set valor25 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48182),"~",1)
	If ((valor03=0)&&(valor04=0)&&(valor05=0)&&(valor06=0)&&(valor07=0)&&(valor08=0)&&(valor10=0)&&(valor25=0)) {
		set ativo3a10=1
		Set index = 2
		For campo = 38496,38499,38500,38501,38502,38503,38505,48182 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			If (campo=38505) Set indexF = 10
			If (campo=48182) Set indexF = 25
			;Set:campo=48182 regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não"
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
		}
	}
	; sim (O paciente apresenta plasmocitoma extra medular (em tecidos não ósseo))
	set valor	 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38520),"~",1)
	set valor14A = ""
	set valor15	 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38524),"~",1)
	if valor=1{
		; (lesão ÚNICA no corpo)
		set valor14A = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38536),"~",1)
		if ((valor14A=1)&&(valor15=1)&&(ativo3a10=1)){
			set ativo=1
		}
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38520),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 38536, 1)))
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38536),"<br>"," ") _ " = Lesão ÚNICA no corpo: <b>"_$Select(valor14A="":"",1:$Piece(xOpcoes,"|",valor14A))_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38524),"<br>"," ") _ " = Sim: <b>"_$Select(valor15=1:"Sim",valor15=0:"Não",1:"")_"</b>"
	;
	; não (O paciente apresenta plasmocitoma extra medular (em tecidos não ósseo))
	set valor 	 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38520),"~",1)
	set valor15  = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38524),"~",1)
	set valor15A = ""
	set:valor15=0 valor15A = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38535),"~",1)
	if valor=0{
		; SIM (O paciente apresenta inventário ósseo (por Raiox, tomografia, PET-CT ou Ressonância nuclear  magnética) normal?
		if ((valor15=0)&&(valor15A=1)&&(ativo3a10=1)){
			set ativo=1
		}
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38520),"<br>"," ") _ " = Não: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38524),"<br>"," ") _ " = Não: <b>"_$Select(valor15=1:"Sim",valor15=0:"Não",1:"")_"</b>"
	Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 38535, 1)))
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38535),"<br>"," ") _ " = O paciente apresenta plasmocitoma ósseo único no corpo confirmado por biópsia?: <b>"_$Select(valor15A="":"",1:$Piece(xOpcoes,"|",valor15A))_"</b>"
	
	/*if ativo{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos>0 set ativo=0
	}*/
	if ativo=1 quit "Plasmocitoma solitário~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDF">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Plasmocitoma solitário com envolvimento medular mínimo:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 7) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Plasmocitoma Solitário com Envolvimento Medular Mínimo</b>"
		Quit "Plasmocitoma Solitário com Envolvimento Medular Mínimo~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set ativo4a10 = 0
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor09 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	set valor25 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48182),"~",1)
	If ((valor04=0)&&(valor05=0)&&(valor06=0)&&(valor07=0)&&(valor08=0)&&(valor09=0)&&(valor10=0)&&(valor25=0)) {
		set ativo4a10=1
		Set index = 3
		For campo = 38499,38500,38501,38502,38503,38504,38505,48182 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			If (campo=48182) Set indexF = 25
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
		}
	}
	;
	set ativo3=0
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	set plasmoMielo = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set plasmoBiopsia = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	set plasmoImuno = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
	if valor=1{
		if (plasmoMielo<10)&&(plasmoBiopsia<10)&&(plasmoImuno<10) {
			set ativo3=1
		}
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38496),"<br>"," ") _ " = Sim: <b>"_$Select(valor=1:"Sim",valor=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " < 10%: <b>"_plasmoMielo_"%</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " < 10%: <b>"_plasmoBiopsia_"%</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38497),"<br>"," ") _ " < 10%: <b>"_plasmoImuno_"%</b>"
	; sim (O paciente apresenta plasmocitoma extra medular (em tecidos não ósseo))
	set valor14 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38520),"~",1)
	set valor14A 	= ""
	set:valor14=1 valor14A = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38536),"~",1)
	set valor15 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38524),"~",1)
	set valor15A 	= ""
	set:valor15=0 valor15A 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38535),"~",1)
	If ((valor14=1)&&(valor14A=1)&&(valor15=1)&&(ativo4a10=1)&&(ativo3=1)) {
		set ativo=1
		Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38520),"<br>"," ") _ " = Sim: <b>"_$Select(valor14=1:"Sim",valor14=0:"Não",1:"")_"</b>"
		Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 38536, 1)))
		Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38536),"<br>"," ") _ " = Lesão ÚNICA no corpo: <b>"_$Select(valor14A="":"",1:$Piece(xOpcoes,"|",valor14A))_"</b>"
		Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38524),"<br>"," ") _ " = Sim: <b>"_$Select(valor15=1:"Sim",valor15=0:"Não",1:"")_"</b>"
	}
	If ((valor14=0)&&(valor15=0)&&(valor15A=1)&&(ativo4a10=1)&&(ativo3=1)) {
		set ativo=1
		Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38520),"<br>"," ") _ " = Sim: <b>"_$Select(valor14=1:"Sim",valor14=0:"Não",1:"")_"</b>"
		Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38524),"<br>"," ") _ " = Sim: <b>"_$Select(valor15=1:"Sim",valor15=0:"Não",1:"")_"</b>"
		Set xOpcoes = $$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, cid, 38535, 1)))
		Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38535),"<br>"," ") _ " = O paciente apresenta plasmocitoma ósseo único no corpo confirmado por biópsia?: <b>"_$Select(valor15A="":"",1:$Piece(xOpcoes,"|",valor15A))_"</b>"
	}
	/*if ativo{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos>0 set ativo=0
	}*/
	if ativo=1 quit "Plasmocitoma solitário com envolvimento medular mínimo~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDG">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Gamopatia Monoclonal de Significado Renal:</b>"
	if ativo=1 quit "Gamopatia monoclonal de significado renal"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 8) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Gamopatia Monoclonal de Significado Renal</b>"
		Quit "Gamopatia Monoclonal de Significado Renal~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDH">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Gamopatia monoclonal de significado indeterminado não IgM:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 9) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Gamopatia Monoclonal de Significado Indeterminado não IgM</b>"
		Quit "Gamopatia Monoclonal de Significado Indeterminado não IgM~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;	
	set ativo4a10 = 0
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor09 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	set valor25 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48182),"~",1)
	If ((valor04=0)&&(valor05=0)&&(valor06=0)&&(valor07=0)&&(valor08=0)&&(valor09=0)&&(valor10=0)&&(valor25=0)) {
		set ativo4a10=1
		Set index = 3
		For campo = 38499,38500,38501,38502,38503,38504,38505,48182 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			If (campo=48182) Set indexF = 25
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
		}
	}
	;
	;
	set valor11 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38506),"~",1)
	Set (valor11p1, valor11p2) = ""
	set valor11p1 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,47278),"~",1)
	set valor11p2 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38507),"~",1)
	set valor1 		= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set valor2 		= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	set valor03 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	set valor3A 	= ""
	set:valor03=1 valor3A = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
	;
	If (
		(valor11=1) &&
		(valor11p1<3) &&
		(($Piece(valor11p2,";",1)=1)||($Piece(valor11p2,";",2)=1)) &&
		(valor1 < 10) &&
		(valor2 < 10) &&
		(valor3A < 10) &&
		(ativo4a10 = 1)
	) {
		Set ativo=1
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38506),"<br>"," ") _ " = Sim: <b>"_$Select(valor11=1:"Sim",valor11=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 47278),"<br>"," ") _ " < 3g/dL: <b>"_valor11p1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38507),"<br>"," ") _ " = IgG ou IgA: <b>"_$Select(($piece(valor11p2,";",1)=1&&($piece(valor11p2,";",2)=1)):"IgG e IgA",$piece(valor11p2,";",1)=1:"IgG",$piece(valor11p2,";",2)=1:"IgA",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " < 10g/dL: <b>"_valor1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " < 10g/dL: <b>"_valor2_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38497),"<br>"," ") _ " < 10g/dL: <b>"_valor3A_"g/dL</b>"
	/*if ativo{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos>0 set ativo=0
	}**/
	if ativo=1 quit "Gamopatia monoclonal de significado indeterminado não IgM~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDI">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Gamopatia monoclonal de significado indeterminado IgM:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 10) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Gamopatia Monoclonal de Significado Indeterminado IgM</b>"
		Quit "Gamopatia Monoclonal de Significado Indeterminado IgM~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set ativo4a10 = 0
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor09 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	If ((valor04=0)&&(valor05=0)&&(valor06=0)&&(valor07=0)&&(valor08=0)&&(valor09=0)&&(valor10=0)) {
		set ativo4a10=1
		Set index = 3
		For campo = 38499,38500,38501,38502,38503,38504,38505 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
		}
	}
	;
	set valor11 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38506),"~",1)
	set valor11p1 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,47278),"~",1)
	set valor11p2 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38507),"~",1)
	set valor1 		= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set valor2 		= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	;
	If (
		(valor11=1) &&
		(valor11p1<3) &&
		(valor11p1>0) &&
		(($Piece(valor11p2,";",3)=1)) &&
		(valor1 < 10) &&
		(valor2 < 10) &&
		(ativo4a10 = 1)
	) {
		Set ativo=1
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38506),"<br>"," ") _ " = Sim: <b>"_$Select(valor11=1:"Sim",valor11=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 47278),"<br>"," ") _ " < 3g/dL: <b>"_valor11p1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38507),"<br>"," ") _ " = IgM: <b>"_$Select($piece(valor11p2,";",3)=1:"IgM",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " < 10g/dL: <b>"_valor1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " < 10g/dL: <b>"_valor2_"g/dL</b>"
	/*if ativo{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos>0 set ativo=0
	}*/
	if ativo=1 quit "Gamopatia monoclonal de significado indeterminado IgM~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcDiagnosticoRDJ">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ativo=0
	set regra="<b>Regra aplicada para Gamopatia monoclonal de significado indeterminado de cadeias leves:</b>"
	;
	set valor48567 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48567),"~",1)
	If (valor48567 = 11) {
		Set regra = regra _ "<br>&nbsp; " _ "Avaliação Diagnóstica - Questionário Diagnóstico - Diagnóstico: <b>Gamopatia Monoclonal de Significado indeterminado de Cadeias Leves</b>"
		Quit "Gamopatia Monoclonal de Significado indeterminado de Cadeias Leves~~"_regra
	}
	if (valor48567 '= 12) {
		Quit ""
	}
	;
	set ativo4a10 = 0
	set valor04 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	set valor05 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	set valor06 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	set valor07 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	set valor08 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	set valor09 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	set valor10 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	set valor25 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,48182),"~",1)
	If ((valor04=0)&&(valor05=0)&&(valor06=0)&&(valor07=0)&&(valor08=0)&&(valor09=0)&&(valor10=0)&&(valor25=0)) {
		set ativo4a10=1
		Set index = 3
		For campo = 38499,38500,38501,38502,38503,38504,38505,48182 {
			Set indexF = $Extract("00",1,(2-$Length($Increment(index))))_index
			If (campo=48182) Set indexF = 25
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, campo),"<br>"," ") _ " = Não: <b>"_$Select(@("valor"_indexF)=1:"Sim",@("valor"_indexF)=0:"Não",1:"")_"</b>"
		}
	}
	;
	set valor9A 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38537),"~",1),";",1)
	set valor9A1 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38537),"~",1),";",2)
	set valor9B 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38538),"~",1),";",1)
	set valor9B1 	= $Piece($piece(..recValorSalvo(codPaciente,cid,ficha,1,38538),"~",1),";",2)
	set valor9C 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38539),"~",1)
	set valor11 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38506),"~",1)
	set valor12p1 = $piece(..recValorSalvo(codPaciente,cid,ficha,1,47281),"~",1)
	set valor1 		= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
	set valor2 		= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
	set valor03 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
	set valor3A 	= ""
	set:valor03=1 valor3A = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
	;
	If ((valor9A>valor9A1)&&(valor9C>1.65)) {
		If (
			(valor11=0) &&
			(valor12p1<500) &&
			(ativo4a10 = 1) &&
			(valor1 < 10) &&
			(valor2 < 10) &&
			(valor3A < 10)
		) {
			Set ativo=1
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38537),"<br>"," ") _ " > Valor de Referência: <b>"_valor9A_"g/dL > "_valor9A1_"g/dL</b>"
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38539),"<br>"," ") _ " > 1,65: <b>"_valor9C_"</b>"
		}
	}
	If ((valor9B>valor9B1)&&(valor9C<0.26)) {
		If (
			(valor11=0) &&
			(valor12p1<500) &&
			(ativo4a10 = 1) &&
			(valor1 < 10) &&
			(valor2 < 10) &&
			(valor3A < 10)
		) {
			Set ativo=1
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38538),"<br>"," ") _ " > Valor de Referência: <b>"_valor9B_"g/dL > "_valor9B1_"g/dL</b>"
			Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38539),"<br>"," ") _ " < 0,26: <b>"_valor9C_"</b>"
		}
	}
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38506),"<br>"," ") _ " = Não: <b>"_$Select(valor11=1:"Sim",valor11=0:"Não",1:"")_"</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 47281),"<br>"," ") _ " < 500g/dL: <b>"_valor12p1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38494),"<br>"," ") _ " < 10g/dL: <b>"_valor1_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38495),"<br>"," ") _ " < 10g/dL: <b>"_valor2_"g/dL</b>"
	Set regra = regra _ "<br>&nbsp; " _ $Replace(..recDescricaoWorkFlow(cid, 38497),"<br>"," ") _ " < 10g/dL: <b>"_valor3A_"g/dL</b>"
	/*if ativo{
		set eventos = ..calcEventoDefinidorMielomaMultiplo(codPaciente,cid,ficha)
		if eventos<0 set ativo=0
		if eventos>0 set ativo=0
	}*/
	if ativo=1 quit "Gamopatia monoclonal de significado indeterminado de cadeias leves~~"_regra
	quit ""]]></Implementation>
</Method>

<Method name="calcEventoDefinidorMielomaMultiplo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set eventos=0
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38499),"~",1)
	if valor="" quit -1
	if valor=1 set eventos = eventos+1
	;
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38500),"~",1)
	if valor="" quit -1
	if valor=1 set eventos = eventos+1
	;
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38501),"~",1)
	if valor="" quit -1
	if valor=1 set eventos = eventos+1
	;
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38502),"~",1)
	if valor="" quit -1
	if valor=1 set eventos = eventos+1
	;
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38503),"~",1)
	if valor="" quit -1
	if valor=1 set eventos = eventos+1
	;
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38504),"~",1)
	if valor="" quit -1
	if valor=1 set eventos = eventos+1
	;
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,1,38505),"~",1)
	if valor="" quit -1
	if valor=1 set eventos = eventos+1
	quit eventos]]></Implementation>
</Method>

<Method name="calculaTempoDuplicacaoLinfocitos">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set sequencia 	= ""
	set predecessor = ""
	set codigoLinfocito = 70
	set rs = ##class(%SQL.Statement).%ExecDirect("","select top 1 Sequencia,predecessor from VARWorkFlowPEP where Company=0 and %upper(codigodocid)='"_cid_"' and %upper(TipodeWorkflow)=5 and %upper(nome) = '"_codigoLinfocito_"'")
	while(rs.%Next()){
		set sequencia = rs.%Get("Sequencia")
		set predecessor = rs.%Get("Predecessor")
	}
	kill vetor
	if sequencia'=""{
		set sequenciaDt = ""
		set rs = ##class(%SQL.Statement).%ExecDirect("","select Sequencia from VARWorkFlowPEP where Company=0 and %upper(predecessor)='"_predecessor_"' and %upper(tipodeworkflow)=13")
		while(rs.%Next()){
			set sequenciaDt = rs.%Get("Sequencia")
		}
		for {
			set obj = ..recValorSalvo(codPaciente,cid,ficha,1,sequencia)
			set valor = $piece(obj,"~",1)
			if valor'="" {
				;
				set data = ""
				if sequenciaDt'=""{
					set data = $piece(..recValorSalvo(codPaciente,cid,ficha,1,sequenciaDt),"~",1)
				}
				if data=""{
					set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))
					set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)
					if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
				}
				;
				if '$data(vetor(data)) set vetor(data) = valor
			}
			set ficha = ..recConsultaAnterior(codPaciente,ficha)
			quit:ficha="0"
		}		
	}
	set tempoDuplicacaoLinfocitos = ""
	set tempoAtual = $order(vetor(""),-1)
	if tempoAtual'="" {
		set contagemAtual = vetor(tempoAtual)
		set tempoAnterior = $order(vetor(tempoAtual),-1)
		if tempoAnterior'="" {
			set antLinf		 	= vetor(tempoAnterior)
			set deltaLinf  		= contagemAtual - antLinf
			set deltaT			= (tempoAtual - tempoAnterior)/30
			if +deltaLinf'=0{
				set tempoDuplicacaoLinfocitos = $justify(antLinf*deltaT/deltaLinf,".",1)
			}
		}
	}
	quit tempoDuplicacaoLinfocitos]]></Implementation>
</Method>

<Method name="retificaConsulta">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	;

	set strStatus = $$$OK
	tstart
	try{
		set obj = $get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1))
		;
		if $$$VARPEPPremiumConsultaCIDdoPaciente(obj)="" {
			set $$$VARPEPPremiumConsultaCIDdoPaciente(obj)=cid
			set $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(obj)=$horolog
			set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloIni(obj)=YBED
		}
		set objNovo = obj
		;
		set $$$VARPEPPremiumConsultaConsultaInativada(obj) = 2
		set $$$VARPEPPremiumConsultaDataHoradaInativacao(obj) = $horolog
		set $$$VARPEPPremiumConsultaUsuarioResponsavelpelaInativacao(obj) = YBED
		;
		if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(obj)=""{
			set $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(obj) = $horolog
			set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloFim(obj) = YBED
		}
		;
		set strStatus = $$$Save("VARPEPPremiumConsulta",codPaciente_","_ficha,obj,1)
		;
		if $$$ISOK(strStatus){
			;
			set $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objNovo) = ""
			set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloFim(objNovo) = ""
			;			
			set contFicha = $piece(ficha,".",2)+1
			set novaFicha = $piece(ficha,".",1)_"."_contFicha
			set strStatus = $$$Save("VARPEPPremiumConsulta",codPaciente_","_novaFicha,objNovo,1)
		}
		if $$$ISOK(strStatus){
			set strStatus = ..copiaFicha(codPaciente,cid,ficha,novaFicha)
		}
		;
		
	}
	catch e {
		set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	set retorno = {}
	if $$$ISOK(strStatus){
		tcommit
		set retorno.status=1
		set retorno.tipo="success"
		set retorno.mensagem = "Consulta para retificação gerada com sucesso!"	
		set retorno.ficha = novaFicha	
	}else{
		set retorno.status=0
		set retorno.tipo="error"
		set retorno.mensagem = strStatus
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="copiaFicha">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,novaFicha</FormalSpec>
<Implementation><![CDATA[	new strStatus,sequencia,codworkflow,data,hora,regOld,chave
	new regime,ciclo
	set strStatus = 1
	set sequencia = ""
	for {
		set sequencia = $order(^VARPEPPremium(0,codPaciente,cid,ficha,sequencia)) quit:sequencia=""
		quit:$$$ISERR(strStatus)
		set codworkflow = ""
		for {
			set codworkflow = $order(^VARPEPPremium(0,codPaciente,cid,ficha,sequencia,codworkflow)) quit:codworkflow=""
			quit:$$$ISERR(strStatus)
			set data = ""
			for {
				set data = $order(^VARPEPPremium(0,codPaciente,cid,ficha,sequencia,codworkflow,data)) quit:data=""
				quit:$$$ISERR(strStatus)
				set hora = ""
				for {
					set hora = $order(^VARPEPPremium(0,codPaciente,cid,ficha,sequencia,codworkflow,data,hora)) quit:hora=""
					set regOld = $get(^VARPEPPremium(0,codPaciente,cid,ficha,sequencia,codworkflow,data,hora,1))
					set chave = codPaciente_","_cid_","_novaFicha_","_sequencia_","_codworkflow_","_data_","_hora
					set strStatus = $$$Save("VARPEPPremium",chave,regOld,$$$YES)
					quit:$$$ISERR(strStatus)
				}
				
			}
			
		}
	}
	;
	if $$$ISOK(strStatus){
		set regime = ""
		for {
			set regime = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime)) quit:regime=""
			quit:$$$ISERR(strStatus)
			set ciclo = ""
			for {
				set ciclo = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo)) quit:ciclo=""
				set regOld = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo,1))
				set chave = codPaciente_","_cid_","_novaFicha_","_regime_","_ciclo
				set strStatus = $$$Save("VARPEPPremiumTratamento",chave,regOld,$$$YES)
				quit:$$$ISERR(strStatus)
			}
		}
	}
	if $$$ISOK(strStatus){
		set regOld = $get(^VARPEPPremiumEstadiamento(0,codPaciente,ficha,1))
		if regOld'=""{
			set strStatus = $$$Save("VARPEPPremiumEstadiamento",codPaciente_","_novaFicha,regOld,$$$YES)
		}
	}
	
	quit strStatus]]></Implementation>
</Method>

<Method name="ativaInativaConsulta">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	set obj = $get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1))
	set inativo = +$$$VARPEPPremiumConsultaConsultaInativada(obj)
	if inativo=1 set inativo=0
	else  set inativo=1
	;
	if $$$VARPEPPremiumConsultaCIDdoPaciente(obj)="" {
		set $$$VARPEPPremiumConsultaCIDdoPaciente(obj)=cid
		set $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(obj)=$horolog
		set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloIni(obj)=YBED
	}
	;
	set $$$VARPEPPremiumConsultaConsultaInativada(obj) = inativo
	set $$$VARPEPPremiumConsultaDataHoradaInativacao(obj) = $horolog
	set $$$VARPEPPremiumConsultaUsuarioResponsavelpelaInativacao(obj) = YBED
	;
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(obj)=""{
		set $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(obj) = $horolog
		set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloFim(obj) = YBED
	}
	;
	set ret = $$$Save("VARPEPPremiumConsulta",codPaciente_","_ficha,obj,1)
	set ultima=0
	if ficha >= $order(^VARPEPPremiumConsulta(YM,codPaciente,""),-1) set ultima=1
	;
	set ultimaFicha = $order(^VARPEPPremiumConsulta(YM,codPaciente,""),-1)
	if ultimaFicha="" set ultimaFicha=1
	set objUltimaFicha = $get(^VARPEPPremiumConsulta(YM,codPaciente,ultimaFicha,1))
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objUltimaFicha)'="" set ultimaFicha=ultimaFicha+1
	;
	set retorno = {}
	if $$$ISOK(ret){
		set retorno.status = 1
		set retorno.tipo = "success"
		set retorno.isUltima = ultima
		set retorno.UltimaFicha = ultimaFicha
		set retorno.mensagem = $select(inativo=1:"Inativação",1:"Ativação")_" Realizada com Sucesso!"
	}else{
		set retorno.status = 0
		set retorno.tipo = "error"
		set retorno.mensagem = ret
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaResultadosImagem">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set painelAtual = $Get(%request.Data("painelAtual",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	;
	set nivelCorreto = 0
	for {
		set SQL = "SELECT Sequencia,Tipodeworkflow "
		set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
		set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
		set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
		while(rs.%Next()){
			set Sequencia = rs.%Get("Sequencia")
			set tipodeworkflow = rs.%Get("Tipodeworkflow")
			if tipodeworkflow=7 set nivelCorreto = 1 quit
		}
		quit:nivelCorreto
		if painelAtual = Sequencia quit
		set painelAtual = Sequencia
	}
	;
	set dados = ..recuperaResultadosImagens(codPaciente,cid,painelAtual,ficha)
	set retorno = {}
	if dados=""{
		set retorno.dados = "Paciente sem áreas marcadas"
	}else{
		set retorno.dados = dados
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaPassagens">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("paciente",1))
	set contador=0
	set query($i(contador)) = "select * from (select AdmissionID,DateAdmitted,TimeAdmitted,DateDischarged,TimeDischarged,2 Tipo,'Prontuário Eletrônico' DescTipo from MEDAdmission where company=0 and Patient='"_paciente_"' "
	set query($i(contador)) = "union "
	set query($i(contador)) = "select NumerodaConsulta AdmissionID,$piece(DataHoradoIniciodaConsulta,',',1) DateAdmitted,$piece(DataHoradoIniciodaConsulta,',',2)  TimeAdmitted,$piece(DataHoradoFimdaConsulta,',',1) DateDischarged,$piece(DataHoradoFimdaConsulta,',',2) TimeDischarged,1 Tipo,'MAPPA' DescTipo from VARPEPPremiumConsulta "
	set query($i(contador)) = "where company=0 and CodigodoPaciente='"_paciente_"') "
	set query($i(contador)) = "order by DateAdmitted desc,TimeAdmitted desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.Consulta = rs.%Get("AdmissionID")
		set status="Em Aberto"
		if rs.%Get("DateDischarged")'="" set status="Alta"
		set linha.Tipo = rs.%Get("Tipo")
		set linha.DescTipo = rs.%Get("DescTipo")
		set linha.DataAdmissao = $select(rs.%Get("DateAdmitted")="":"",1:$zdate(rs.%Get("DateAdmitted"),1))
		set linha.HoraAdmissao = $select(rs.%Get("TimeAdmitted")="":"",1:$ztime(rs.%Get("TimeAdmitted"),1))
		set linha.DataAlta = $select(rs.%Get("DateDischarged")="":"",1:$zdate(rs.%Get("DateDischarged"),1))
		set linha.HoraAlta = $select(rs.%Get("TimeDischarged")="":"",1:$ztime(rs.%Get("TimeDischarged"),1))
		set linha.Convenio = "Paciente Externo"
		set linha.Status = status
		do retorno.%Push(linha)
	}
	//
	// Carrega Linha Registros Anteriores
	if $data(^VARPEPAntigos(0,paciente,1)){
		set linha={}
		set linha.Consulta = "Registros Anteriores"
		set linha.Tipo = 3
		set linha.Status = "-"
		set linha.DataAdmissao = "-"
		set linha.HoraAdmissao = "-"
		set linha.DataAlta = "-"
		set linha.HoraAlta = "-"
		do retorno.%Push(linha)
	}
	;
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set %response.Status="401 Unauthorized"
		set resp={}
		set resp.erro=1
		set resp.mensagem="Sessão Expirou"
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>

<Method name="verificaBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set bird = $$getBirdID^VARCSPUtils(YBED,YUSER)
	if $piece(bird,"~",1)="" {
		write 0
	}elseif $piece(bird,"~",1)=0 {
		write 2
	}else{
		write 1
	}
	quit]]></Implementation>
</Method>

<Method name="revokeBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = $$revokeBirdID^VARCSPUtils(YBED,YUSER)
	write 1
	quit]]></Implementation>
</Method>

<Method name="authBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set username = $get(%request.Data("username",1))
	set password = $get(%request.Data("password",1))
	set ret = $$authBirdID^VARCSPUtils(username,password)
	set retorno = {}
	set retorno.status = $piece(ret,"~",1)
	set retorno.mensagem = $piece(ret,"~",2)
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaResultados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set mappa 		= +$Get(%request.Data("mappa",1))
	Set ficha 		= $Get(%request.Data("ficha",1))

	set retorno = []
	
	Kill temp
	Set meuSQL = "Select PerfilExame, CompostoExame1, Exame "
	Set meuSQL = meuSQL _ "From SQLUser.VARPEPResultado Where Company = 0 "
	Set meuSQL = meuSQL _ "And Paciente = '"_codPaciente_"' "
	Set meuSQL = meuSQL _ "Group By PerfilExame, CompostoExame1, Exame"
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	while(rs.%Next()){
		Set perfilExame		= rs.%Get("PerfilExame")
		Set compostoExame	= rs.%Get("CompostoExame1")
		Set exame			= rs.%Get("Exame")
		
		;if (perfilExame '= "MIE") continue
		Set temp(perfilExame, compostoExame, exame) = ""
	}
	K ^zzJULIO
	K ^zzJULIO1
	M ^zzJULIO = temp		
	Set perfilExame = ""
	For {
		Set perfilExame = $Order(temp(perfilExame))
		Quit:perfilExame=""
		;
		If (perfilExame '= "SEMPERFIL") {
			Set seqComposto = ""
			For {
				Set seqComposto = $Order(^VARPerfilExame(0,"EXIBICAO",perfilExame,seqComposto))
				Quit:seqComposto=""
				;
				Set compostoExame = $Piece(^VARPerfilExame(0,"EXIBICAO",perfilExame,seqComposto,1),"~",1)
				;
				Set seqExame = ""
				For {
					Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame))
					Quit:seqExame=""
					;
					Set exame = $Piece(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame,1),"~",1)
					;
					S ^zzJULIO1(exame) = perfilExame_"|"_compostoExame_"|"_$Data(temp(perfilExame, compostoExame, exame))
					If ('$Data(temp(perfilExame, compostoExame, exame))) Continue
					Do INSERT(codPaciente,perfilExame,seqComposto,compostoExame,exame,cid,ficha)
				}
			}
		}Else{
			Set compostoExame = ""
			For {
				Set compostoExame = $Order(temp(perfilExame, compostoExame))
				Quit:compostoExame=""
				;
				If (compostoExame '= "SEMCOMPOSTO") {
					Set seqExame = ""
					For {
						Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame))
						Quit:seqExame=""
						;
						Set exame = $Piece(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame,1),"~",1)
						;
						If ('$Data(temp(perfilExame, compostoExame, exame))) Continue
						Do INSERT(codPaciente,perfilExame,"",compostoExame,exame,cid,ficha)
					}
				}Else{
					Set exame = ""
					For {
						Set exame = $Order(temp(perfilExame, compostoExame, exame))
						Quit:exame=""
						Do INSERT(codPaciente,perfilExame,"",compostoExame,exame,cid,ficha)
					}
				}
			}	
		} 		
	}
	Write retorno.%ToJSON()
	Return $$$OK
	;
INSERT(pCodPaciente,pPerfilExame,pSequenciaComposto,pCompostoExame,pExame,pCodCID="",pFicha="") ;,pGrupoMAPPA)	
	Set descPerfilExame 	= $$SQLGetDescricaoProduto^VARSQL(pPerfilExame)
	Set descCompostoExame 	= $S(pSequenciaComposto="":"",1:pSequenciaComposto_" - ")_$$SQLGetDescricaoProduto^VARSQL(pCompostoExame)
	Set descExame 			= $$SQLGetDescricaoProduto^VARSQL(pExame)
	;
	Set mappa 		= "Não"
	Set flagEst 	= 0
	Set campoEst 	= ""
	If (pCodCID = "C90.0") {
		If (pExame="ALBC") Set flagEst = 1, campoEst = 48532, mappa = "Sim"
		If (pExame="B2MGBMG") Set flagEst = 1,campoEst = 48533, mappa = "Sim"
		If (";ALBC;A1GC;A2GC;B1GC;B2GCA;GGC;IMF;CKL;IGG;IGA;IGM;IGE;IMFUR;PURIC;PLASMI;DHL;B2MGBMG;URE;CRED;CAS;"[(";"_pExame_";")) Set mappa = "Sim"
	}
	;
	Set listRetorno = {}
	Set listRetorno.id 				= pCodPaciente_"||"_pPerfilExame_"||"_pCompostoExame_"||"_pExame ;_"||"_pGrupoMAPPA
	Set listRetorno.mappa 			= mappa
	Set listRetorno.codPerfil 		= pPerfilExame
	Set listRetorno.descPerfil 		= $ZConvert(descPerfilExame,"W")
	Set listRetorno.codComposto 	= pCompostoExame
	Set listRetorno.descComposto	= $ZConvert(descCompostoExame,"W")
	Set listRetorno.codExame 		= pExame
	set listRetorno.descExame 		= $ZConvert(descExame,"W")
	set listRetorno.selecionar 		= 1
	set listRetorno.campoEst		= campoEst
	set listRetorno.unidade			= ""
	If (campoEst'=""&&(pCodCID'="")&&(pFicha'="")&&($Data(^VARPEPPremiumTrasnportador(0,pCodPaciente,pCodCID,pFicha,campoEst)))) {
		Set dtTransp = $Piece(^VARPEPPremiumTrasnportador(0,pCodPaciente,pCodCID,pFicha,campoEst,1),"~",1)
		Do listRetorno.%Set("transp"_campoEst, $ZDate(dtTransp,4))
	}

	Set temResultado = 0
	Set meuSQL1 = "Select DataExame, Resultado, Usuario, HiLow, ValorReferencia "
	Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
	Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
	Set meuSQL1 = meuSQL1 _ "And PerfilExame = '"_pPerfilExame_"' " 
	Set meuSQL1 = meuSQL1 _ "And CompostoExame1 = '"_pCompostoExame_"' "
	Set meuSQL1 = meuSQL1 _ "And Exame = '"_exame_"' "
	Set meuSQL1 = meuSQL1 _ "Order By DataExame Desc"
	set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
	while(rs1.%Next()){
		Set vlPiece1 = ""
		Set vlPiece2 = ""
		if (rs1.%Get("resultado") '= "") {
			Set vlPiece1 = $Replace($Piece(rs1.%Get("resultado")," ",1),",",".")
			Set vlPiece2 = $Piece(rs1.%Get("resultado")," ",2)	
			if ('$ISVALIDNUM(vlPiece1)) {
				set listRetorno.selecionar 	= 0
				Set vlPiece1 = ""
				Set vlPiece2 = "" 
			}
			Set temResultado = 1
		}
		Do listRetorno.%Set($zdate(rs1.%Get("dataExame"),4), rs1.%Get("resultado"))
		Do listRetorno.%Set("Form"_$zdate(rs1.%Get("dataExame"),8), vlPiece1)
		set:vlPiece2'=""&&(listRetorno.unidade="") listRetorno.unidade = vlPiece2
	 	Do listRetorno.%Set($zdate(rs1.%Get("dataExame"),4)_"-Usuario", rs1.%Get("Usuario"))
	 	Do listRetorno.%Set($zdate(rs1.%Get("dataExame"),4)_"-HiLow", rs1.%Get("HiLow"))
	 	Do listRetorno.%Set($zdate(rs1.%Get("dataExame"),4)_"-ValorReferencia", rs1.%Get("ValorReferencia"))
	}
	if (temResultado = 0) set listRetorno.selecionar 	= 0	
	do retorno.%Push(listRetorno)	
	;
	Return]]></Implementation>
</Method>

<Method name="recDataConsulta">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,consulta,flInterno=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,consulta,1))
	set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)
	set:data="" data = $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objConsulta)
	if flInterno=1 quit +data
	if data'="" set data = $zdate(data,4)
	quit data]]></Implementation>
</Method>

<Method name="listaDetalheRegime">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set cid = $Get(%request.Data("codCID",1))
	Set codRegime = $Get(%request.Data("codRegime",1))
	set retorno = {}
	set columns = []
	set listColuna = {}
	do listColuna.%Set("dataField", "numeroCiclos")
	do listColuna.%Set("caption", "Número de Ciclos")
	do listColuna.%Set("width", "150px")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "periodicidade")
	do listColuna.%Set("caption", "Periodicidade")
	do listColuna.%Set("width", "120px")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "ciclo")
	do listColuna.%Set("caption", "Ciclo")
	do listColuna.%Set("width", "80px")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "medicamento")
	do listColuna.%Set("caption", "Medicamento")
	do listColuna.%Set("width", "300px")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "dose")
	do listColuna.%Set("caption", "Dose")
	do listColuna.%Set("width", "100px")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "via")
	do listColuna.%Set("caption", "Via de Administração")
	do listColuna.%Set("width", "170px")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "frequencia")
	do listColuna.%Set("caption", "Frequência")
	do listColuna.%Set("width", "130px")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "posologia")
	do listColuna.%Set("caption", "Posologia")
	do columns.%Push(listColuna)
	;
	set listColuna = {}
	do listColuna.%Set("dataField", "bula")
	do listColuna.%Set("caption", "Bula")
	do listColuna.%Set("cellTemplate","'funcaoAnexoBula'")
	do columns.%Push(listColuna)
	;
	kill ^mtemp.SolicTratamentoMedicament(0,$job)
	set ciclosT = ..carregaTratamento($job, cid, codRegime)
	;
	set objRegime = $get(^VARWorkFlowRegTera(0,cid,codRegime,1))
	set nome = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objRegime)
	;	
	set dataGrid = []
	set linhas = 1
	set sequ=""
	for {
		set sequ = $order(^mtemp.SolicTratamentoMedicament(0,$job,sequ)) quit:sequ=""
		set obj = $get(^mtemp.SolicTratamentoMedicament(0,$job,sequ,1))
		set medicamento 	= $piece(obj,"~",1)
		set dose 			= $piece(obj,"~",2)
		set via 			= $piece(obj,"~",3)
		set frequencia 		= $piece(obj,"~",4)
		set dias 			= $piece(obj,"~",5)
		set ciclos 			= $piece(obj,"~",6)
		set periodicidade	= $piece(obj,"~",7)
		set codMedicamento	= $piece(obj,"~",9)

		set linha = {}		
		set:linhas=1 linha.numeroCiclos = $select(ciclosT=-1:"Até progressão da doença ou toxicidade",1:ciclosT)
		set linha.periodicidade 		= periodicidade
		set linha.ciclo 				= ciclos
		set linha.medicamento 			= medicamento
		set linha.dose 					= dose
		set linha.via 					= via
		set linha.frequencia 			= frequencia
		set linha.posologia 			= dias
		set linha.frequencia			= frequencia
		;
		set obj = $get(^WWW012(0,0,1))
		set caminhoD = $$$WWW012PhysicalFTPDirectory(obj)
		if ($extract(caminhoD, $length(caminhoD)) '= "\") {
			set caminhoD = caminhoD _ "\"
		}
		set caminhoD = caminhoD_"Bulas\"_codMedicamento_".pdf"
		if $$$isWINDOWS{
			set caminhoD = $replace(caminhoD,"/","\")
		}else{
			set caminhoD = $replace(caminhoD,"\","/")
		}
		if ##class(%File).Exists(caminhoD){
			set linha.anexo					= YGIF_"Bulas/"_codMedicamento_".pdf"
		}
		do dataGrid.%Push(linha)
		set linhas = linhas + 1
	}
	kill ^mtemp.SolicTratamentoMedicament(0,$job)
	set retorno.titulo = "Nome do Regime: "_nome
	set retorno.columns = columns
	set retorno.dataGrid = dataGrid
	;
	set gridReferencias = []
	set sequ = ""
	for {
		set sequ = $order(^VARWorkFlowRegTeraRefe(0,cid, codRegime,sequ)) quit:sequ=""
		set obj = $get(^VARWorkFlowRegTeraRefe(0,cid, codRegime,sequ,1))
		set estudo = $$$VARWorkFlowRegTeraRefeEstudo(obj)
		set referencia = $$$VARWorkFlowRegTeraRefeReferenciadoTratamento(obj)
		set link = $$$VARWorkFlowRegTeraRefeLinkparaaReferencia(obj)
		set linha = {}
		set linha.Estudo = estudo
		set linha.Referência = referencia
		if link'="" set linha.Link = link
		do gridReferencias.%Push(linha)
	}
	set retorno.dataGridReferencias = gridReferencias
	write $replace($replace(retorno.%ToJSON(),"""'",""),"'""","")
	quit]]></Implementation>
</Method>

<Method name="listaResultadosPEPPremium">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set painelAtual = $Get(%request.Data("painelAtual",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	set info=""
	;
	set tipoHistoricoSN = ""
	set tipoHistorico = ..recTipoHistorico(cid,painelAtual,.tipoHistoricoSN)
	if tipoHistoricoSN=2 set tipoHistoricoSN=1
	else  set tipoHistoricoSN=""
	;
	if tipoHistorico=1 {
		do ..listaExamesSangue(codPaciente,cid,painelAtual,ficha)
	}elseif tipoHistorico=2 {
		do ..listaExamesImagens(codPaciente,cid,painelAtual,ficha)
	}else{
		do ..listaPassagensAnteriores(codPaciente,cid,painelAtual,ficha,tipoHistoricoSN)
	}
	;	
	quit $$$OK]]></Implementation>
</Method>

<Method name="recTipoHistorico">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,painelAtual,&amp;tipoHistoricoSN</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set SQL = "SELECT Sequencia,TipodeWorkflow "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set tipoHistorico = ""
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set TipodeWorkflow = rs.%Get("TipodeWorkflow")
		if TipodeWorkflow=5 set tipoHistorico=1 quit ; Tipo Exames de Sangue
		if TipodeWorkflow=7 set tipoHistorico=2 quit ; Tipo Imagens
		if $get(tipoHistoricoSN)="" {
			set tipoHistoricoSN2 = ..recTipoHistorico(cid,Sequencia,.tipoHistoricoSN)
			if tipoHistoricoSN2'="" set tipoHistoricoSN = tipoHistoricoSN2
		}
	}
	quit tipoHistorico]]></Implementation>
</Method>

<Method name="listaPassagensAnteriores">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,nivel</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	do ..buscaPassagensAnteriores(codPaciente, cid, painelAtual, ficha,nivel,.dados,.colunas)

	set retorno = [],arrayColuna=[]
	set ret = ""
	if nivel'=""{
		set ret = ..listaExamesImagens(codPaciente, cid, painelAtual, ficha,1)
		;set retorno = ret.dataGrid
		;set arrayColuna	= ret.columns
	}
	if $data(dados){
		;
		set listColuna = {}
		do listColuna.%Set("dataField", "Campo")
		do listColuna.%Set("caption", "Campo")
		do listColuna.%Set("width", 250) 
		;do listColuna.%Set("fixed", 1)
		do arrayColuna.%Push(listColuna)
		;
		kill ordercol
		set coluna = ""
		for {
			set coluna = $order(colunas(coluna)) quit:coluna=""
			if coluna = ficha set data = "Consulta Atual"
			else  set data = ..recDataConsulta(codPaciente,coluna,1)
			set ordercol(data,coluna)=""
		}		
		;
		set data=""
		for {
			set data=$order(ordercol(data),-1) quit:data=""
			set coluna = ""
			for {
				set coluna = $order(ordercol(data,coluna)) quit:coluna=""
				if coluna = ficha set desc = "Consulta Atual"
				e  set desc = "Consulta "_coluna_" ("_..recDataConsulta(codPaciente,coluna,0)_")"
				set listColuna = {}
				do listColuna.%Set("dataField", coluna_" ")
				do listColuna.%Set("caption", desc)
				do listColuna.%Set("alignment", "left")
				do listColuna.%Set("width", 200)
				do arrayColuna.%Push(listColuna)
			}
		}
		kill seqn1,seqn
		set sequ=""
		for {
			set sequ = $order(dados(sequ)) quit:sequ=""
			set sequencia = $piece(dados(sequ),"~",1)
			set desc = ..recDescricaoWorkFlow(cid,sequencia)
			set desc = $replace(desc,"<br>"," ")
			if $data(seqn1(desc)) {
				set nseq = seqn1(desc)
			}else{
				set nseq = $order(seqn(""),-1)+1
				set seqn1(desc)=sequ
				set seqn(nseq)=desc
			}
			set ficha = ""
			for {
				set ficha = $order(dados(sequ,ficha)) quit:ficha=""
				set seqn(nseq,ficha)=dados(sequ,ficha)
			}			
		}
		set sequ=""
		for {
			set sequ = $order(seqn(sequ)) quit:sequ=""
			set desc = $get(seqn(sequ))
			set linha = {}
			do linha.%Set("Campo",desc)
			set ficha = ""
			for {
				set ficha = $order(seqn(sequ,ficha)) quit:ficha=""
				set valor = $piece(seqn(sequ,ficha),"~",1)
				do linha.%Set(ficha_" ",valor)
			}
			do retorno.%Push(linha)
		}
	}
	if ret'=""{
		set retorno1 = ret.dataGrid
		for i=0:1:retorno1.%Size()-1{
			set valores = retorno1.%Get(i)
			set valores.Campo = valores.Regiao
			do retorno.%Push(valores)
		}
	}
	set ret = {}
	set ret.header = ..recDescricaoWorkFlow(cid,painelAtual)
	set ret.dataGrid = retorno
	set ret.columns = arrayColuna
	write ret.%ToJSON()
	quit
	quit]]></Implementation>
</Method>

<Method name="buscaPassagensAnteriores">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,nivel,&amp;dados,&amp;colunas</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set predecessor				= rs.%Get("Predecessor")
		set opcoes					= rs.%Get("Opcoes")
		set composicaoValoresExames = rs.%Get("composicaoValoresExames")
		set permitirSelecionarMaisQue = rs.%Get("PermitirSelecionarMaisQue")
		set unid=""
		if TipodeWorkFlow=5{
			set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",Nome,1))
			if unid="" set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
		}
		set seq = $order(dados(""),-1)+1
		for fichaAtual = 1:1:ficha{
			set objInativo = ..consultaIsInativa(codPaciente,fichaAtual)
			if objInativo.inativo continue
			set retPais = ..verificaNivelPais(codPaciente,cid,fichaAtual,1,Sequencia)
			if retPais<0 continue
			set valores = $piece(..recValorSalvo(codPaciente,cid,fichaAtual,1,Sequencia),"~",1)
			if valores=""||(valores="null") continue
			if TipodeWorkFlow=13 {
				if valores'="" set valores = $zdate(valores,4)
			}
			if TipodeWorkFlow=2||(TipodeWorkFlow=11) {
				set valores = $select(valores=1:"Sim",valores=0:"Não",1:"")
			}
			if composicaoValoresExames'="",composicaoValoresExames'=1,composicaoValoresExames'=5{
				set opcoes = $piece($get(^VARPARA(0,"WORKFLOWVALORES","PT",composicaoValoresExames,1)),"~",1)
				set opcoes = $replace(opcoes,"/","|")
				if composicaoValoresExames=10{
					if valores = 0 set valores=2
					else  if valores=2 set valores=3
				}else{
					set valores = valores+1
				}
				set valores = $piece(opcoes,"|",valores)
				;set valores = opcoes_" - "_valores_" - "_composicaoValoresExames
			}
			if TipodeWorkFlow=9 {
				if permitirSelecionarMaisQue=1{
					set valAcum = ""
					for i=1:1:$length(valores,";"){
						set va = $piece(valores,";",i)
						if va = "false" set va = 0
						if va = "true" set va = 1
						if 'va continue
						if valAcum '="" set valAcum = valAcum_", "
						set valAcum = valAcum_$piece(opcoes,"|",i)
					}
					set valores = valAcum
				}else{
					set valores = $piece(opcoes,"|",valores)
				}
			}
			if TipodeWorkFlow=16{
				set linha = $piece(valores,";",1)
				set tratamento = $piece(valores,";",2)
				set objRegime = $get(^VARWorkFlowRegTera(0,cid,tratamento,1))
				set valores = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objRegime)
			}
			if TipodeWorkFlow=21{
				if valores=1 set valores="Sim"
				if valores=0 set valores="Não"
			}
			if TipodeWorkFlow=21{
				if valores=1 set valores="Sim"
				if valores=0 set valores="Não"
			}
			if TipodeWorkFlow=30{
				set valAcum = ""
				for i=1:1:$length(valores,";"){
					set va = $piece(valores,";",i)
					if va="" continue
					set medicamento		= $$GetDescMedicamentos^VARSQL(va,1)
					if valAcum'="" set valAcum = valAcum_", "
					set valAcum = valAcum_medicamento
				}
				set valores = valAcum
			}
			if TipodeWorkFlow=14{
				set texto = ""
				for piece = 1:1:$length(valores,";"){
					set val = $piece(valores,";",piece)
					if val="" continue
					if texto'="" set texto = texto_", "
					set texto = texto_val
				}
				set valores = texto
				
			}
			if TipodeWorkFlow=32{
				set valAcum = ""
				for i=1:1:$length(valores,";"){
					set va = $piece(valores,";",i)
					if va="" continue
					set medicamento = $piece(va,"^",1)
					set observacoes = $piece(va,"^",2)
					if medicamento'="" set medicamento = $$GetDescMedicamentos^VARSQL($piece(va,"^",1),1)
					if medicamento'="",observacoes'="" set medicamento = medicamento_" ("_observacoes_")"
					if medicamento="",observacoes'=""  set medicamento = observacoes
					if valAcum'="" set valAcum = valAcum_", "
					set valAcum = valAcum_medicamento
				}
				set valores = valAcum
			}
			if (TipodeWorkFlow=29)||(TipodeWorkFlow=31){
				set valAcum = ""
				for i=1:1:$length(valores,";"){
					set va = $piece(valores,";",i)
					if va="" continue
					set doenca = $piece(va,"^",1)
					set tempo = $piece(va,"^",2)
					set obser = $piece(va,"^",3)
					set tipo = $piece(va,"^",4)
					set tempoLegenda = $piece(va,"^",5)
					if tipo'=""{
						set tipo = $piece($get(^VARPARA(0,"FAMILIAR","PT",tipo,1)),"~",1)
					}
					set observacoes=""
					if tempo'="" { 
						set observacoes = " (há "_tempo_" "_$select(tempoLegenda="MESES":"mes"_$select(tempo>1:"es",1:""),tempoLegenda="ANOS":"ano"_$select(tempo>1:"s",1:""),1:"")
					}
					if obser'=""{
						if observacoes="" set observacoes = " ("
						e  set observacoes = observacoes_", "
						set observacoes = observacoes_obser
					}
					if observacoes'="" set observacoes = observacoes_")"
					set doenca = $$SQLGetCid^VARSQL(doenca)
					if valAcum'="" set valAcum = valAcum_", "
					if TipodeWorkFlow=31{
						set valAcum = valAcum_tipo_" - "_doenca_observacoes
					}else{
						set valAcum = valAcum_doenca_observacoes
					}
				}
				set valores = valAcum
			}
			set dados(seq) = Sequencia
			set dados(seq,fichaAtual) = valores_" "_unid
			set colunas(fichaAtual)=""
		}
		if nivel="" {
			do ..buscaPassagensAnteriores(codPaciente, cid, Sequencia, ficha,nivel,.dados,.colunas)
		}
	}
	quit]]></Implementation>
</Method>

<Method name="listaExamesImagens">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,flRetorno=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	;
	set nivelCorreto = 0
	for {
		set SQL = "SELECT Sequencia,Tipodeworkflow "
		set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
		set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
		set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
		while(rs.%Next()){
			set Sequencia = rs.%Get("Sequencia")
			set tipodeworkflow = rs.%Get("Tipodeworkflow")
			if tipodeworkflow=7 set nivelCorreto = 1 quit
		}
		quit:nivelCorreto
		if painelAtual = Sequencia quit
		set painelAtual = Sequencia
	}
	;
	for fichaAtual=1:1:ficha{
		set objInativo = ..consultaIsInativa(codPaciente,fichaAtual)
		if objInativo.inativo continue
		set ret = ..recuperaResultadosImagens(codPaciente, cid, painelAtual, fichaAtual,.dados)
	}
	set retorno = [],arrayColuna=[]
	if $data(dados){
		;
		set sequ=""
		for {
			set sequ = $order(dados(sequ)) quit:sequ=""
			set objWF 	= $get(^VARWorkFlowPEP(0,cid,sequ,1))
			set desc    = $$$VARWorkFlowPEPNome(objWF)
			set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
			if tipo=7 {
				set codImagem = $piece(desc,";",1)
				set codArea = $piece(desc,";",2)
				set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
					set desc 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				}
			}
			set pred = sequ
			for {
				set objWF 	= $get(^VARWorkFlowPEP(0,cid,pred,1))
				set pred    = $$$VARWorkFlowPEPPredecessor(objWF)
				if pred=""||(pred=painelAtual) quit
				if $data(dados(pred)) kill dados(pred)
			}
		}
		set sequ=""
		for {
			set sequ = $order(dados(sequ)) quit:sequ=""
			set objWF 	= $get(^VARWorkFlowPEP(0,cid,sequ,1))
			set desc    = $$$VARWorkFlowPEPNome(objWF)
			set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
			if tipo=7 {
				set codImagem = $piece(desc,";",1)
				set codArea = $piece(desc,";",2)
				set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
					set desc 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				}
			}
			set fichal = ""
			for {
				set fichal = $order(dados(sequ,fichal)) quit:fichal=""
				set data = ..recDataConsulta(codPaciente,fichal,1)
				if fichal=ficha {
					set datad="Consulta Atual"
				}else{
					set datad = "Consulta "_fichal_" ("_$zdate(data,4)_")"
				}
				set colunas(data,fichal)=datad
				set dadosp(desc,fichal) = dados(sequ,fichal)
			}
			
		}
		;
		set listColuna = {}
		do listColuna.%Set("dataField", "Regiao")
		do listColuna.%Set("caption", "Região")
		do listColuna.%Set("width", 200)
		;do listColuna.%Set("fixed", 1)
		do arrayColuna.%Push(listColuna)
		set data=""
		for {
			set data = $order(colunas(data),-1) quit:data=""
			set coluna = ""
			for {
				set coluna = $order(colunas(data,coluna),-1) quit:coluna=""
				set datae = colunas(data,coluna)
				set listColuna = {}
				do listColuna.%Set("dataField", coluna_" ")
				do listColuna.%Set("caption", datae)
				do listColuna.%Set("width", 300)
				do listColuna.%Set("alignment", "left")
				do arrayColuna.%Push(listColuna)
			}
		}
		set desc = ""
		for {
			set desc = $order(dadosp(desc)) quit:desc=""
			set linha = {}
			do linha.%Set("Regiao",desc)
			set ficha = ""
			for {
				set ficha = $order(dadosp(desc,ficha)) quit:ficha=""
				set texto = dadosp(desc,ficha)
				set texto = $Replace(texto,"<ul class=ttEstadiamento>","")
				set texto = $Replace(texto,"<ul>","")
				set texto = $Replace(texto,"<li>","")
				set texto = $Replace(texto,"</ul>","")
				set texto = $Replace(texto,"</li>","")
				set texto = $Replace(texto,"<br>",$c(10))
				do linha.%Set(ficha_" ",texto)
			}
			do retorno.%Push(linha)
		}
	}
	set ret = {}
	set ret.header = ..recDescricaoWorkFlow(cid,painelAtual)
	set ret.dataGrid = retorno
	set ret.columns = arrayColuna
	if flRetorno quit ret
	write ret.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaExamesSangue">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta) = "" set info = "Consulta Atual"
	;
	set SequenciaData = ""
	set SQL = "SELECT Sequencia "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"' and TipodeWorkflow='13'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set SequenciaData = rs.%Get("Sequencia")
	}
	set arrayDados = []
	set arrayColuna = []
	do ..buscaResultadosLab(codPaciente,cid,painelAtual,ficha,SequenciaData,.dados,.colunas)
	;
	set sai=0
	set coluna=""
	for {
		set coluna = $order(dados(1,coluna)) quit:coluna=""
		set desc = dados(1,coluna)
		if $zcvt(desc,"U")["HEMO" set sai=1 quit
		if $zcvt(desc,"U")["HEMA" set sai=1 quit
		if $zcvt(desc,"U")["PLAQ" set sai=1 quit
	}
	if 'sai{
		Set meuSQL1 = "Select Exame,DataExame, Resultado "
		Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
		Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
		Set meuSQL1 = meuSQL1 _ "And Resultado is not null "
		Set meuSQL1 = meuSQL1 _ "Order By DataExame Desc"
		set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
		while(rs1.%Next()){
			if '$data(^INART(0,rs1.%Get("Exame"))) continue
			if $data(^VARWorkFlowAuxiliars(0,2,rs1.%Get("Exame"))) continue
			set colunas(rs1.%Get("dataExame"))=""
			set dados(1,"OUTROS~"_rs1.%Get("Exame"))=$piece($get(^INART(0,rs1.%Get("Exame"),1)),"~",1)
			set dados(1,"OUTROS~"_rs1.%Get("Exame"),rs1.%Get("dataExame")) = rs1.%Get("resultado")
		}	
	}	
	;
	if $data(colunas){
		set listColuna = {}
		do listColuna.%Set("dataField", "Exame")
		do listColuna.%Set("caption", "Exame")
		do listColuna.%Set("width", 200)
		;do listColuna.%Set("fixed", 1)
		do arrayColuna.%Push(listColuna)
		set atual=0
		set ultimaConsulta = ""
		for {
			set ultimaConsulta = $o(^VARPEPPremiumConsulta(0,codPaciente,ultimaConsulta),-1) quit:ultimaConsulta=""
			if $p(^(ultimaConsulta,1),"~",4)'="" quit
		}
		set dataUltimaConsulta	= ""
		if ultimaConsulta'="" {
			set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,ultimaConsulta,1))
			set dataUltimaConsulta = +$$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)
			if $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)'=""{
				set dataUltimaConsulta = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)
			}
		}
		set coluna=""
		for {
			set coluna = $order(colunas(coluna),-1) quit:coluna=""
			if coluna["*" {
				set texto = "(Consulta Atual) "_$zdate($piece(coluna,"*",2),4),atual=1
			}else{
				set integra=0
				if (coluna>=dataUltimaConsulta)||(dataUltimaConsulta="") set integra=1
				set texto = $zdate(coluna,4)_$select(integra:"||",1:"")
				set dataUltimaConsulta=9999999999
			}
			set listColuna = {}
			do listColuna.%Set("dataField", coluna_" ")
			do listColuna.%Set("caption", texto)
			do listColuna.%Set("alignment", "right")
			do listColuna.%Set("minwidth", 200)
			do arrayColuna.%Push(listColuna)
		}
		set coluna=""
		for {
			set coluna = $order(dados(1,coluna)) quit:coluna=""
			set desc = dados(1,coluna)
			set linha = {}
			set linha.Exame = desc
			set datas = ""
			for {
				set datas = $order(dados(1,coluna,datas)) quit:datas=""
				set exame = dados(1,coluna,datas)
				do linha.%Set(datas_" ",exame)
			}
			do arrayDados.%Push(linha)
		}
	}else{
		set listColuna = {}
		do listColuna.%Set("dataField", "Exame")
		do listColuna.%Set("caption", "Exame")
		do arrayColuna.%Push(listColuna)
		;
		set arrayDados = []
		set linha = {}
		set linha.Exame = "Não há registro de exames anteriores"
		do arrayDados.%Push(linha)
		
	}
	set ret = {}
	set ret.header = ..recDescricaoWorkFlow(cid,painelAtual)
	set ret.dataGrid = arrayDados
	set ret.columns = arrayColuna
	Write ret.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="buscaResultadosLab">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,SequenciaData,&amp;dados,&amp;colunas</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set composicaoValoresExames = rs.%Get("ComposicaoValoresExames")
		if TipodeWorkFlow'=5,TipodeWorkFlow'=22 continue
		set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",Nome,1))
		if objExames'=""{
			set desc = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
			if unid="" set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
			set codINART = $$$VARWorkFlowAuxiliarCodigodoExamenoCadastrode(objExames)
			if $data(dados(2,desc)) {
				set sequ = dados(2,desc)
			}else{
				set sequ = $order(dados(1,""),-1)+1
				set dados(2,desc)=sequ
			}
			set dados(1,sequ) = desc
			;
			kill datas
			if codINART'=""{
				Set meuSQL1 = "Select DataExame, Resultado "
				Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
				Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
				Set meuSQL1 = meuSQL1 _ "And Exame = '"_codINART_"' "
				Set meuSQL1 = meuSQL1 _ "And Resultado is not null "
				Set meuSQL1 = meuSQL1 _ "Order By DataExame Desc"
				set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
				while(rs1.%Next()){
					set colunas(rs1.%Get("dataExame"))=""
					set dados(1,sequ,rs1.%Get("dataExame")) = rs1.%Get("resultado")
				}	
			}
		}
		;
		set consulta=""
		for {
			set consulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta)) quit:consulta=""
			set seqConsulta=""
			for {
				set seqConsulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta,seqConsulta)) quit:seqConsulta=""
				set data = ""
				set objInativo = ..consultaIsInativa(codPaciente,consulta)
				if objInativo.inativo continue
				set valores = ..recValorSalvo(codPaciente,cid,consulta,seqConsulta,Sequencia)
				if TipodeWorkFlow=22{
					set valores = $piece(valores,"~",1)
					for contx=1:1:$length(valores,";"){
						set data=""
						if SequenciaData'="" set data = $piece(..recValorSalvo(codPaciente,cid,consulta,seqConsulta,SequenciaData),"~",1)
						set codExame = $piece($piece(valores,";",contx),"^",1)
						set result   = $piece($piece(valores,";",contx),"^",2)
						if codExame=""||(codExame="null") continue
						set desc = codExame
						if $data(^INART(0,codExame,1)){
							set objExames = $get(^INART(0,codExame,1))
							set desc = $$$INARTSearchName(objExames)
						}
						set unid = ""
						if $data(dados(2,desc)) {
							set sequ = dados(2,desc)
						}else{
							set sequ = $order(dados(1,""),-1)+1
							set dados(2,desc)=sequ
						}
						set dados(1,sequ) = desc
						if data=""||(data="null") {
							set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,consulta,1))
							set data = ..recDataConsulta(codPaciente,consulta,1)							;
						}
						if ficha=consulta set data = "*"_data
						set colunas(data)=""
						set dados(1,sequ,data) = result
						
					}
				}else{
					set valor = $piece(valores,"~",1)
					if composicaoValoresExames=3{
						set unid=""
						if valor=0 set valor="Negativo"
						if valor=1 set valor="Positivo"
					}
					if valor=""||(valor="null") {
						do ..buscaResultadosLab(codPaciente,cid,Sequencia,ficha,SequenciaData,.dados,.colunas)
						continue
					}
					if data=""||(data="null") {
						set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,consulta,1))
						set data = ..recDataConsulta(codPaciente,consulta,1)
					}
					if ficha=consulta set data = "*"_data
					set colunas(data)=""
					set dados(1,sequ,data) = valor_" "_unid
				}
				do ..buscaResultadosLab(codPaciente,cid,Sequencia,ficha,SequenciaData,.dados,.colunas)
			}
		}
		;
	}]]></Implementation>
</Method>

<Method name="TipoCampoExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodExame</FormalSpec>
<Implementation><![CDATA[	If ($Data(^VARPerfilExame(0,"EXIBICAO",pCodExame))) Quit 1
	If ($Data(^VARComposicaoExame(0,"EXIBICAO","SEMPERFIL",pCodExame))) Quit 1
	Quit 0]]></Implementation>
</Method>

<Method name="listaExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set YBED = $Get(%request.Data("YBED",1))
	set query = "select CodigodoPerfil,Descricao from VARExamesPerfil where company=0 and TipodosExames='"_tipo_"' and UsuariocomAcessoaoPerfil='"_YBED_"' "
	if codigo'="" {
		set query = query_" and CodigodoPerfil = '"_codigo_"'"
	}elseif searchValue'=""{
		set query = query_" and (%upper(CodigodoPerfil) like %upper('%"_searchValue_"%') or %upper(Descricao) like %upper('%"_searchValue_"%'))"
	}
	;
	if take="" set take=20
	;
	Set SQL  = "Select top "_(skip+take)_" ItemNumber CodigodoPerfil, SearchName Descricao From SQLUser.INART Where Company = 0 "
	if tipo=1{	;Exames Laboratório:
		Set SQL  = SQL _ "And %Upper(ItemType) in (6, 4, 5) "
	}
	if tipo=2{  ;Outros Exames
		Set SQL  = SQL _ "And %Upper(ItemType) = 7 "
	}
	Set SQL  = SQL _ "And %UPPER(HoldReason) in (0, 2) "
	if codigo'="" {
		set SQL = SQL_" And ItemNumber = '"_codigo_"'"
	}
	if searchValue'="" {
		set SQL = SQL_" and (%upper(ItemNumber) like %upper('%"_searchValue_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(SearchName)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%')) "
	}
	set SQL = SQL_" order by %upper($$SQLGetTextoSemAcento^VARSQL(SearchName)) "
	;
	;set meuSelect = "select * from ("_SQL_")"
	;if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	;
	;set query = "select * from ("_query_" union "_SQL_")"
	set query = "select * from ("_SQL_")"
	if skip'="" set query=query_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.CodExame = rs.%Get("CodigodoPerfil")
		set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",linha.Codigo)
		set exames = ""
		while(rsLinha.%Next()){
			set exame = rsLinha.%Get("CodigodoExame")
			;set exame = $piece($get(^VARExames(0,exame,1)),"~",1)
			set exame = $piece($get(^INART(0,exame,1)),"~",1)
			set:exames'="" exames=exames_", "
			set exames = exames_exame
		}
		if exames'="" set exames=" ("_exames_")"
		set linha.DescExame = rs.%Get("Descricao")_exames
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()

	quit]]></Implementation>
</Method>

<Method name="getExameAdd">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set arrayRetorno = []
	Set codExame = $Get(%request.Data("codExame",1))
	if (codExame = "") {
		Do arrayRetorno.%ToJSON()
		Quit $$$OK
	}
	If ($Data(^VARPerfilExame(0,"EXIBICAO",codExame))) {
		Set codPerfil = codExame
		Set seqComposicao = ""
		For {
			Set seqComposicao = $Order(^VARPerfilExame(0,"EXIBICAO",codPerfil,seqComposicao))
			Quit:seqComposicao=""
			
			Set codComposicao = $Piece(^VARPerfilExame(0,"EXIBICAO",codPerfil,seqComposicao,1),"~",1)
			
			Set seqExame = ""
			For {
				Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame))
				Quit:seqExame=""
				
				Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame,1),"~",1)
				
				Set descPerfil = $$SQLGetDescricaoProduto^VARSQL(codPerfil)
				Set descComposicao = $$SQLGetDescricaoProduto^VARSQL(codComposicao)
				;
				set listRetorno = {}
				set listRetorno.id = codPerfil_"||"_codComposicao_"||"_codExame
				set listRetorno.codPerfil = codPerfil
				set listRetorno.descPerfil = descPerfil
				set listRetorno.codComposto = codComposicao
				set listRetorno.descComposto = seqComposicao_" - "_descComposicao
				set listRetorno.codExame = codExame
				set listRetorno.descExame = $$SQLGetDescricaoProduto^VARSQL(codExame)
				set listRetorno.Resultado = ""
				do arrayRetorno.%Push(listRetorno)
			}
		}	
	}Else{
		Set codPerfil = "SEMPERFIL"
		Set codComposicao = ""
		For {
			Set codComposicao = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao))
			Quit:codComposicao=""
			
			Set seqExame = ""
			For {
				Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame))
				Quit:seqExame=""
				
				Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame,1),"~",1)
				
				Set descPerfil = $$SQLGetDescricaoProduto^VARSQL(codPerfil)
				Set descComposicao = $$SQLGetDescricaoProduto^VARSQL(codComposicao)
				;
				set listRetorno = {}
				set listRetorno.id = codPerfil_"||"_codComposicao_"||"_codExame
				set listRetorno.codPerfil = codPerfil
				set listRetorno.descPerfil = descPerfil
				set listRetorno.codComposto = codComposicao
				set listRetorno.descComposto = descComposicao
				set listRetorno.codExame = codExame
				set listRetorno.descExame = $$SQLGetDescricaoProduto^VARSQL(codExame)
				set listRetorno.Resultado = ""
				do arrayRetorno.%Push(listRetorno)
			}
		}	
	}
	Do arrayRetorno.%ToJSON()
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getArquivosResultadosExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("codPaciente",1))
	set array = []
	set sequencia = ""
	for {
		set sequencia = $order(^VARPEPPremiumExamesUpload(0,paciente,sequencia)) quit:sequencia=""
		if '$data(^VARPEPPremiumExamesUpload(0,paciente,sequencia,0)) continue
		set objUpload = $get(^VARPEPPremiumExamesUpload(0,paciente,sequencia,0,1))
		set arquivo = $piece(objUpload,"~",1)
		set exame = $piece(objUpload,"~",2)
		set data = $piece(objUpload,"~",3)

		Set list = {}
		set list.DataDoExame = $zdate(data,4)
		set list.Exame = exame
		set list.Arquivo = paciente_"/"_arquivo //fileset.Get("Name")
		do array.%Push(list)
	}
	w array.%ToJSON()
	Quit $$$OK

	set fileset=##class(%ResultSet).%New("%Library.File:FileSet")
	set empresa 	= 0
	set modulo 		= 13
	set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	if ($extract(dname, $length(dname)) '= "\") {
		set dname = dname _ "\"
	}
	set dname = dname _ paciente
	set sc=fileset.Execute(##class(%File).NormalizeDirectory(dname),"*",,1)
	set array = []
	while fileset.Next(.sc) { 
		set arquivo = $piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\"))
		set name = $piece($piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\")),".",1) 
		set dataExame = $zd($piece(name,"_",1),4)
		set exame = $piece(name,"_",2)
		Set list = {}
		set list.DataDoExame = dataExame
		set list.Exame = exame
		set list.Arquivo = paciente_"/"_arquivo //fileset.Get("Name")
		do array.%Push(list)
	}
	w array.%ToJSON()
	Quit $$$OK]]></Implementation>
</Method>

<Method name="removerArquivo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pArquivo,pYBED</FormalSpec>
<Implementation><![CDATA[	do ^WWWVAR
	Set arquivo = $Replace(pArquivo,"/","\")
	Set arquivo = $Piece(arquivo,"\",$length(arquivo,"\")-1,$length(arquivo,"\"))
	;
	Set modulo 	= 13
	Set empresa = 0
		
	Set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	If ($extract(dname, $length(dname)) '= "\") {
		Set dname = dname _ "\"
	}
	if (##class(%File).Exists(dname_arquivo)){
		do ##class(%File).Delete(dname_arquivo)
	}
	set paciente = $piece(arquivo,"\",1)
	set sequencia = $piece($piece($piece(arquivo,"\",2),"_",2),".",1)
	set objUpload = $get(^VARPEPPremiumExamesUpload(0,paciente,sequencia,0,1))
	set arquivo = $piece(objUpload,"~",1)
	set exame = $piece(objUpload,"~",2)
	set data = $piece(objUpload,"~",3)
	kill ^VARPEPPremiumExamesUpload(0,paciente,sequencia,0,1)
	set ^VARPEPPremiumExamesUpload(0,paciente,sequencia,1,1) = arquivo_"~"_exame_"~"_data_"~"_pYBED_"~"_$horolog
	quit $$$OK]]></Implementation>
</Method>

<Method name="preparaAberturaResultado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set arquivo = $get(%request.Data("arquivo",1))
	set ext = $piece(arquivo,".",$length(arquivo,"."))
	set empresa 	= 0
	set modulo 		= 13
	set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	if '##class(%File).Exists(dname_"\"_arquivo){
		write dname_arquivo
		quit 
	}
	;
	;
	; Recupera o caminho de destino (diretorio temporario)
	set obj = $get(^WWW012(0,0,1))
	set caminhoD = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminhoD, $length(caminhoD)) '= "\") {
		set caminhoD = caminhoD _ "\"
	}
	set caminhoD = caminhoD _ "temp\"
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminhoD)) {
		do ##class(%File).CreateDirectoryChain(caminhoD)
	}
	set fname = %session.SessionId_"_"_$replace($replace($now(),".",""),",","")_"."_ext
	do ##class(%File).CopyFile(dname_"\"_arquivo,caminhoD_fname,1)
	job ..apagaArquivo(caminhoD_fname)
	write YGIF_"temp/"_fname
	quit]]></Implementation>
</Method>

<Method name="apagaArquivo">
<ClassMethod>1</ClassMethod>
<FormalSpec>caminho</FormalSpec>
<Implementation><![CDATA[	hang 20
	do ##class(%File).Delete(caminho,.retorno)
	quit]]></Implementation>
</Method>

<Method name="ArmResultaExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,pId,pDatadoExame,pValor</FormalSpec>
<Implementation><![CDATA[	Set perfil 			= $Piece(pId,"||",2)
	Set composto 		= $Piece(pId,"||",3)
	Set exame 			= $Piece(pId,"||",4)
	Set pDatadoExame = $zdh(pDatadoExame,4)

	Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, codPaciente, perfil, composto, exame, pDatadoExame))
	Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
	
	Set status = $$$Save("VARPEPResultado", codPaciente_","_perfil_","_composto_","_exame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)

	Quit status]]></Implementation>
</Method>

<Method name="ArmResultaExameAdd">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,pId,pDatadoExame,pValor</FormalSpec>
<Implementation><![CDATA[	Set codPerfil = $Piece(pId,"||",1)
	Set codComposto = $Piece(pId,"||",2)
	Set codExame = $Piece(pId,"||",3)
	Set pDatadoExame = $zdh(pDatadoExame,4)

	Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, codPaciente, codPerfil, codComposto, codExame, pDatadoExame))
	Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
	
	Set status = $$$Save("VARPEPResultado", codPaciente_","_codPerfil_","_codComposto_","_codExame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)

	Quit status]]></Implementation>
</Method>

<Method name="ImpColunasResultados">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente="",tipoRet=0</FormalSpec>
<Implementation><![CDATA[	if (codPaciente = "") {
		Set codPaciente = $Get(%request.Data("codPaciente",1))
		Set tipoRet = 1	
	}
	
	set arrayColuna = []
	If (tipoRet = 2) {
		set listColuna = {}
		do listColuna.%Set("dataField", "mappa")
		do listColuna.%Set("caption", "MAPPA")
		do listColuna.%Set("width", 80)
		do listColuna.%Set("allowEditing", 0)
		do listColuna.%Set("groupIndex", 0)
		do listColuna.%Set("sortOrder", "desc")
		do arrayColuna.%Push(listColuna)
	}
	set listColuna = {}
	do listColuna.%Set("dataField", "descPerfil")
	do listColuna.%Set("caption", "Perfil")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	do listColuna.%Set("groupIndex", $Select(tipoRet=2:1,1:0))
	do listColuna.%Set("sortOrder", 0)
	do arrayColuna.%Push(listColuna)
	set listColuna = {}
	do listColuna.%Set("dataField", "descComposto")
	do listColuna.%Set("caption", "Composto")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	;do listColuna.%Set("sortOrder", 1)
	do listColuna.%Set("groupIndex", $Select(tipoRet=2:3,1:1))
	do arrayColuna.%Push(listColuna)
	set listColuna = {}
	do listColuna.%Set("dataField", "descExame")
	do listColuna.%Set("caption", "Exame")
	do:tipoRet=2 listColuna.%Set("fixed", 1)
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	do arrayColuna.%Push(listColuna)
	;
	kill query
	set query($i(contador)) = "Select DataExame From SQLUser.VARPEPResultado Where Company = 0 "
	set query($i(contador)) = "And Paciente = '"_codPaciente_"' Group By DataExame Order By DataExame Desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set listColuna = {}
		do listColuna.%Set("dataField", $zdate(rs.%Get("DataExame"),4))
		do listColuna.%Set("caption", $zdate(rs.%Get("DataExame"),4))
		do:tipoRet=2 listColuna.%Set("width", 100)
		do listColuna.%Set("allowEditing", 1)
		do listColuna.%Set("allowFiltering", 0)
		do listColuna.%Set("allowSorting", 0)
		do listColuna.%Set("cellTemplate", "'colunaData'")
		do arrayColuna.%Push(listColuna)
	}
	If (tipoRet = 2) {
		Quit arrayColuna
	}
	If (tipoRet = 1) {
		Write $replace($replace(arrayColuna.%ToJSON(),"""'",""),"'""","")
		Return $$$OK		
	}
	quit $replace($replace(arrayColuna.%ToJSON(),"""'",""),"'""","")
	quit arrayColuna.%ToJSON()]]></Implementation>
</Method>

<Method name="getResultado">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pData</FormalSpec>
<Implementation><![CDATA[	Set codPaciente = $Piece(pId,"||",1)
	Set codPerfil = $Piece(pId,"||",2)
	Set codComponente = $Piece(pId,"||",3)
	Set codExame = $Piece(pId,"||",4)
	Set pData = $ZDH(pData,4)
	
	Set resultado = $Piece($Get(^VARPEPResultado(0,codPaciente,codPerfil,codComponente,codExame,pData,1)),"~",1)
	
	Set resultado = "<i><b>"_$$SQLGetDescricaoProduto^VARSQL(codExame)_"</b></i><br><br>"_$Replace(resultado,$c(10),"<br>")
	
	Quit resultado]]></Implementation>
</Method>

<Method name="estadiarPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("paciente",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	if cid = "" write 1 quit
	;
	set edita = 1
	set ultFicha 	= $order(^VARPEPPremiumConsulta(0,codPaciente,""),-1)
	if ultFicha="" set ultFicha = ultFicha + 1
	if $piece($get(^VARPEPPremiumConsulta(0,codPaciente,ultFicha,1)),"~",4)'="" {
		set ultFicha = ultFicha+1
	}
	if ficha<ultFicha set edita=0
	set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))
	if objConsulta'="",$$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)="" set edita=1
	;
	if edita=0 {
		set ret = "Consulta já encerrada!"
	}else{
		set hoje = $horolog
		set data = +hoje
		set hora = $piece(hoje,",",2)
		If ($Data(^VARPEPPremiumEstadiamento(0,codPaciente,ficha))) {
			Merge ^VARPEPPremiumEstadiamentoHist(0,codPaciente,$Horolog, ficha) = ^VARPEPPremiumEstadiamento(0,codPaciente,ficha)
		}
		set ret = $$$Save("VARPEPPremiumEstadiamento",codPaciente_","_ficha,data_"~"_hora,$$$YES)
		kill ^mtemp.estadiamentoAtual(%session.SessionId)
		kill ^mtemp.valoresEstadiamentoSalvos(%session.SessionId)
	}
	set retorno = {}
	if $$$ISERR(ret){
		set retorno.status = 0
		set retorno.mensagem = ret
		set retorno.tipo = "error"
	}else{
		set retorno.status 		= 1
		set retorno.mensagem 	= "Estadiamento realizado com sucesso!"
		set retorno.tipo 		= "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="uploadPhoto">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set obj = $get(^WWW012(YM,YM,1))
	set caminho = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminho, $length(caminho)) '= "\") {
		set caminho = caminho _ "\"
	}
	
	set caminho = caminho _ "temp\"
	
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminho)) {
		do ##class(%File).CreateDirectoryChain(caminho)
	}
	
	;
	set fname = %request.MimeData("files[]",1).FileName
	set ext = "jpg" ;$piece(fname,".",2)
	set fname = %session.SessionId_"_"_$replace($replace($now(),".",""),",","")_"."_ext
	Set stream=##class(%FileBinaryStream).%New()
	Set stream.Filename= caminho_fname
	do stream.CopyFrom(%request.MimeData("files[]",1))
	do stream.Flush()
	set rs = stream.SaveStream()
	;
	set arquivoAnt = $get(^mtemp.Arquivo(%session.SessionId))
	if arquivoAnt'=""{
		do ..removeArquivoTemp(arquivoAnt)
	}
	;
	set ^mtemp.Arquivo(%session.SessionId) = fname
	quit $$$OK]]></Implementation>
</Method>

<Method name="recPhotoTemp">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set arquivo = $get(^mtemp.Arquivo(%session.SessionId))
	set retorno = {}
	set retorno.ImageSRC = YGIF_"temp/"_arquivo
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="verificaPreSugestaoPrescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set sequencia = $get(%request.Data("sequencia",1))
	set pCodRegime	= $get(%request.Data("pCodRegime",1))
	set pCiclo		= $get(%request.Data("pCiclo",1))
	
	if dataPEP'="" set dataPEP = dataPEP + 1
	do ..inicializaCiclos(codPaciente,cid,ficha,dataPEP)
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,sequencia),"~",1)
	set retorno = {}
	set retorno.status=0
	set regime=-1
	if valor'=""{
		set linhaTratamento = $piece(valor,";",1)
		set regime = $piece(valor,";",2)
		If (pCodRegime'="") Set regime = pCodRegime
		;
		set objTratamento = $get(^VARWorkFlowRegTera(YM,cid,regime,1))
		set terapiadeSuporte = $$$VARWorkFlowRegTeraTerapiadeSuporte(objTratamento)
		;
		kill vetContinuos
		set ciclo = ..getCiclo(codPaciente,cid,ficha,regime,.vetContinuos)
		If (pCiclo'="") Set ciclo = pCiclo
		set sequ=""
		for {
			set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ)) quit:sequ=""
			set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ,1))
			set unidade 		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(objTer)
			if unidade=3||(unidade=4){
				set retorno.status=1
			}
		}
		if ('retorno.status){
			kill terapiadeSuporteVetor
			if terapiadeSuporte'=""{
				set terapiadeSuporteVetor(terapiadeSuporte)=""
			}else{
				set sequ=""
				for {
					set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ)) quit:sequ=""
					set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ,1))
					set medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
					if $data(^VARWorkFlowRegTeras(0,1,medicamento,cid)){
						set terapiaSuporte = $order(^VARWorkFlowRegTeras(0,1,medicamento,cid,""))
						set terapiadeSuporteVetor(terapiaSuporte)=""
					}
				}
			}
			if $data(terapiadeSuporteVetor){		
				set terapiadeSuporte = ""
				for {
					set terapiadeSuporte = $order(terapiadeSuporteVetor(terapiadeSuporte)) quit:terapiadeSuporte=""
					set cicloSuporte = 1
					if $data(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,ciclo)) set cicloSuporte = ciclo
					set sequ=""
					for {
						set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,cicloSuporte,sequ)) quit:sequ=""
						set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,cicloSuporte,sequ,1))
						set unidade = $$$VARWorkFlowRegTeraCicloMedDoseunidade(objTer)
						if unidade=3||(unidade=4){
							set retorno.status=1
						}
						quit:retorno.status=1
					}
					quit:retorno.status=1
				}
			}
		}
	}
	
	Set retorno.flagJaPreparado = 0
	If (pCodRegime'=""&&(pCiclo'="")) {
		set codPrescricao = ""
		&Sql(
			Select NumerodaPrescricao Into :codPrescricao From SQLUser.VARPEPPremiumPrescricao 
			Where Company = 0 And codigodoCID = :cid And CodigodoPaciente = :codPaciente 
			And RegimeTerapeutico = :pCodRegime And Ciclo = :pCiclo 
			And TipodaPrescricao = 'T'
		)
		Set:codPrescricao'="" retorno.flagJaPreparado = 1
	}
	
	Set retorno.flagDoseEdit = ""
	if (retorno.flagJaPreparado=0&&(+pCiclo>1)) {
		Set xCiclo = pCiclo - 1
		Set xRetDoseEdit = ..PrescricaoQtdeEditada(codPaciente, cid, pCodRegime, xCiclo)
		If (xRetDoseEdit'="") {
			Set retorno.flagDoseEdit = "Houve modificação da dosagem padrão no ciclo anterior:<br>"_xRetDoseEdit_".<br>Gostaria de manter?"
		}
	}
	if retorno.status=1{
		set dados = {}
		set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
		set dados.sequencia = sequencia
		set dados.peso = $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
		set dados.altura = $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
		set retorno.dados = dados
	}
	set retorno.regime = +regime
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="PrescricaoQtdeEditada">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente="",pCid="",pCodRegime="",xCiclo=""</FormalSpec>
<Implementation><![CDATA[	Set fRetor = 0
	If (pCodPaciente = "") {
		Set pCodPaciente 	= $get(%request.Data("pCodPaciente",1))
		Set pCid 			= $get(%request.Data("pCid",1))
		Set pCodRegime		= $get(%request.Data("pCodRegime",1))
		Set xCiclo			= $get(%request.Data("pCiclo",1))
		Set fRetor			= 1
	}
	
	Set edicaoQtde = ""
	Set meuSQL = "Select * From SQLUser.VARPEPPremiumPrescricao "
	Set meuSQL = meuSQL _ "Where Company = 0 And codigodoCID = '"_pCid_"' And CodigodoPaciente = '"_pCodPaciente_"' "
	Set meuSQL = meuSQL _ "And RegimeTerapeutico = '"_pCodRegime_"' And Ciclo = '"_xCiclo_"' "
	Set meuSQL = meuSQL _ "And TipodaPrescricao = 'T' And CodigodaRecomendacaoTerap Is Not Null "
	Set meuSQL = meuSQL _ "And Dose <> DoseOrigem"
	Set rs = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rs.%Next()){
		Set edicaoQtde = edicaoQtde_$Select(edicaoQtde'="":"| ",1:"")_
						 $$GetDescMedicamentos^VARSQL(rs.%Get("CodigodoMedicamento"),1)_ 
						 " de "_rs.%Get("DoseOrigem")_$$GetDescUnidadePEP^VARSQL(rs.%Get("Unidade"))_
						 " para "_rs.%Get("Dose")_$$GetDescUnidadePEP^VARSQL(rs.%Get("Unidade"))
	}	
	If (edicaoQtde'="") {
		Set xEdicaoQtde = ""
		For i = 1 : 1 : $Length(edicaoQtde,"|") {
			Set xEdicaoQtde = xEdicaoQtde _
							 $Select(xEdicaoQtde="":"",1:$Select(i=$Length(edicaoQtde,"|"):" e",1:", "))_
							 $Piece(edicaoQtde,"|",i)
		}
		Set edicaoQtde = xEdicaoQtde
	}
	If (fRetor = 1) Write edicaoQtde
	Return edicaoQtde]]></Implementation>
</Method>

<Method name="verificaAjusteDose">
<ClassMethod>1</ClassMethod>
</Method>

<Method name="getCiclo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,regime,&amp;vetContinuos</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,regime,1,1))
	set tratCiclico = +$$$VARWorkFlowRegTeraCicloContinuo(objCiclos)
	;
	set pula1=""
	if tratCiclico=2,$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""))'=$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""),-1) {
		set pula1=1
	}
	
	set conclusao=""
	set ultCiclo = ""
	set ciclo = ""
	for {
		set ciclo = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo)) quit:ciclo=""
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo,1))
		;
		if pula1,ciclo=1 continue
		set cicloReal = ciclo
		if '$data(^VARWorkFlowRegTeraCiclo(0,cid,regime,ciclo,1)) set cicloReal = $order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""),-1)
		set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,regime,cicloReal,1))
		set duracao = $$$VARWorkFlowRegTeraCicloPeriodicidade(objCiclos)
		if duracao="" {
			set vetContinuos(ciclo)=""
			continue
		}
		if conclusao=0 continue
		;
		set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
		if conclusao=0 set ultCiclo = ciclo
	}
	if ultCiclo="" set ultCiclo=1
	quit ultCiclo]]></Implementation>
</Method>

<Method name="gravaST">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set peso 		= $get(%request.Data("peso",1))
	set altura 		= $get(%request.Data("altura",1))
	set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
	set $$$VARPEPPremiumPrimarioAnamnesePeso(objAna) = peso
	set $$$VARPEPPremiumPrimarioAnamneseAltura(objAna) = altura
	set strStatus = $$$Save("VARPEPPremiumPrimario",codPaciente_","_ficha,objAna,$$$YES)
	set retorno = {}
	if strStatus=1{
		set retorno.status=1
	}else{
		set retorno.status=0
		set retorno.mensagem = strStatus
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="verificaMudancasDoses">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set fichaSeq 	= $get(%request.Data("fichaSeq",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set sequencia 	= $get(%request.Data("sequencia",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	set retorno = []
	set codMedicamento = ""
	for {
		set codMedicamento = $order(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,codMedicamento)) quit:codMedicamento=""
		set obj = $get(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,codMedicamento,1))
		set doseAtual = $$$VARPEPPremiumDosePrescritaDose(obj)
		set unidadeAtual = $$$VARPEPPremiumDosePrescritaUnidade(obj)
		set tratamento = $$$VARPEPPremiumDosePrescritaTratamento(obj)
		if tratamento="" continue
		set critica=..recAjusteDose(codPaciente,cid,ficha,codMedicamento,doseAtual,unidadeAtual)
		if critica'="" continue
		set consultaAnterior = ficha
		set doseAlterada="", unidadeAlterada=""
		for {
			set consultaAnterior = ..recConsultaAnterior(codPaciente,consultaAnterior)
			quit:consultaAnterior="0"
			if '$data(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,consultaAnterior,codMedicamento,1)) continue
			set obj = $get(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,consultaAnterior,codMedicamento,1))
			set doseAlterada = $$$VARPEPPremiumDosePrescritaDoseAlterada(obj)
			set unidadeAlterada = $$$VARPEPPremiumDosePrescritaUnidadeAlterada(obj)
			if doseAlterada'="",unidadeAlterada="" set unidadeAlterada = $$$VARPEPPremiumDosePrescritaUnidade(obj)
			if unidadeAlterada'="",doseAlterada="" set doseAlterada = $$$VARPEPPremiumDosePrescritaDose(obj)
			quit
		}
		if consultaAnterior'=""{
			if (doseAlterada'="")||(unidadeAlterada'=""){
				if (doseAtual'=doseAlterada)||(unidadeAtual'=unidadeAlterada){
					set linha = {}
					set linha.codMedicamento = codMedicamento
					set linha.medicamento = $$GetDescMedicamentos^VARSQL(codMedicamento,1)
					set linha.doseAnterior = doseAlterada
					set linha.codUnidadeAnterior = unidadeAlterada
					set linha.unidadeAnterior = $$GetDescUnidadePEP^VARSQL(unidadeAlterada)
					set linha.doseAtual = doseAtual
					set linha.codUnidadeAtual = unidadeAtual
					set linha.unidadeAtual = $$GetDescUnidadePEP^VARSQL(unidadeAtual)
					do retorno.%Push(linha)
				}
			}
		}
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="confirmaDoseAlterada">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set fichaSeq 	= $get(%request.Data("fichaSeq",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set tipo	 	= $get(%request.Data("tipo",1))
	set objeto 		= $get(%request.Data("objeto",1))
	set objeto = [].%FromJSON(objeto)
	set obj = $get(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,objeto.codMedicamento,1))
	set $$$VARPEPPremiumDosePrescritaDoseAlterada(obj) = objeto.doseAnterior
	set $$$VARPEPPremiumDosePrescritaUnidade(obj)	= objeto.codUnidadeAnterior
	set strStatus = $$$Save("VARPEPPremiumDosePrescrita",codPaciente_","_cid_","_ficha_","_objeto.codMedicamento,obj,$$$YES)
	set retorno = {}
	set retorno.status=1
	if $$$ISOK(strStatus){
		set opcao = tipo
		if opcao="" set opcao=" "
		set codPrescricao = $order(^VARPEPPremiumPrescricaos(0,1,codPaciente,ficha,opcao,""),-1)
		if codPrescricao="" set codPrescricao = $order(^VARPEPPremiumPrescricao(0,""),-1)+1
		;
		if objeto.codUnidadeAtual=3{
			set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
			set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
			set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
			set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
			set objeto.doseAtual		  = $justify(objeto.doseAtual * sc,0,1)
			set objeto.codUnidadeAtual = 1
		}
		if objeto.codUnidadeAnterior=4{
			set objeto.doseAtual = $justify(objeto.doseAtual * peso,0,1)
			set dadosobj.codUnidadeAtual = 1
		}
		;
		set nseq="" 
		for  {
			set nseq=$order(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq)) quit:nseq=""
			set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
			set medicamento = $$$VARPEPPremiumPrescricaoCodigodoMedicamento(obj)
			set dose = $$$VARPEPPremiumPrescricaoDose(obj) 
			set unidade = $$$VARPEPPremiumPrescricaoUnidade(obj)
			;
			if medicamento=objeto.codMedicamento,dose=objeto.doseAtual,unidade=objeto.codUnidadeAtual {
				set retorno.mensagem = medicamento_"~"_dose_"~"_unidade
				quit
			}
		}
		if nseq'=""{
			if objeto.codUnidadeAnterior=3{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
				set objeto.doseAnterior		  = $justify(objeto.doseAnterior * sc,0,1)
				set objeto.codUnidadeAnterior = 1
			}
			if objeto.codUnidadeAnterior=4{
				set objeto.doseAnterior = $justify(objeto.doseAnterior * peso,0,1)
				set dadosobj.codUnidadeAnterior = 1
				
			}
			set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
			set $$$VARPEPPremiumPrescricaoDose(obj) = objeto.doseAnterior
			set $$$VARPEPPremiumPrescricaoUnidade(obj) = objeto.codUnidadeAnterior
			set strStatus = $$$Save("VARPEPPremiumPrescricao",codPrescricao_","_nseq,obj,1)
		}
	}
	if $$$ISERR(strStatus){
		set retorno.status=0
		set retorno.mensagem = "Erro: "_strStatus
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="verificaAjusteDoses">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set fichaSeq 	= $get(%request.Data("fichaSeq",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set sequencia 	= $get(%request.Data("sequencia",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	set retorno = []
	set codMedicamento = ""
	for {
		set codMedicamento = $order(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,codMedicamento)) quit:codMedicamento=""
		;
		if '$data(^VARWorkFlowRegTeraAD(0,cid,codMedicamento,1)) continue
		set obj = $get(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,codMedicamento,1))
		set doseAtual = $$$VARPEPPremiumDosePrescritaDose(obj)
		set unidadeAtual = $$$VARPEPPremiumDosePrescritaUnidade(obj)
		set tratamento = $$$VARPEPPremiumDosePrescritaTratamento(obj)
		if tratamento="" continue
		set regra = ""
		set critica=..recAjusteDose(codPaciente,cid,ficha,codMedicamento,doseAtual,unidadeAtual)
		if critica'=""{
			set linha = {}
			set linha.codMedicamento 	= codMedicamento
			set linha.medicamento 		= $$GetDescMedicamentos^VARSQL(codMedicamento,1)
			set linha.doseAtual 		= doseAtual
			set linha.codUnidadeAtual 	= unidadeAtual
			set linha.unidadeAtual 		= $$GetDescUnidadePEP^VARSQL(unidadeAtual)
			set linha.regra				= $piece(critica,"~",1)
			set linha.novaDose			= $piece(critica,"~",2)
			set linha.mensagem			= $piece(critica,"~",3)
			set linha.mensagemTrat		= $piece(critica,"~",4)
			do retorno.%Push(linha)
		}
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recAjusteDose">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,codMedicamento,doseAtual,unidadeAtual</FormalSpec>
<Implementation><![CDATA[	set critica = ""
	set regra = ""
	for {
		set regra = $order(^VARWorkFlowRegTeraADRegra(0,cid,codMedicamento,regra)) quit:regra=""
		set objRegra = $get(^VARWorkFlowRegTeraADRegra(0,cid,codMedicamento,regra,1))
		;A dose de Fludarabina será modificada em 50%, de <dose> para <doseAlterada> pois o paciente apresenta clrearence de creatinina de <clcr> ml/min<br>(recomendação de redução de 50% da dose para pacientes com clearence de creatinina entre 30 e 70 ml/min). Confirma?
		;O uso de Fludarabina não é recomendável pois o paciente apresenta clrearence de creatinina de <clcr> ml/min<br>(recomendação de não uso para pacientes com clearence de creatinina menores que 30 ml/min). Remover a Fludarabina da prescrição?
		;Na ocorrência de hepatotoxicidade durante o tratamento (elevação de ALT e AST);<br>G2 (3 a 5 × LSN, manter a dose e monitorar ao menos semanalmente até < 3 × LSN);<br>G3 (> 5 a 20 × LSN, interromper Duvelisib e monitorar ao menos semanalmente até < 3 × LSN;<br>Reintroduzir Duvelisibe na mesma dose se primeira ocorrência ou em dose reduzida se ocorrência subsequente);<br>G4 (> 20 × LSN), descontinuar Duvelisibe.
		;Se ALT ou AST > 5 a 20 × LSN, suspender a terapia;<br>Quando AST/ALT ≤ 1 × LSN, reintroduzir a uma dose reduzida de 100 mg 2×/dia.<br>Se ALT ou AST > 20 × LSN descontinuar Idelalisib permanentemente.<br>Se BT > 3 a 10 × LSN, suspender a terapia;<br>Quando BT ≤ 1 × LSN, reintroduzir a uma dose reduzida de 100 mg 2×/dia.<br>Se BT > 10 × LSN, descontinuar a terapia permanentemente.
		set calculo 	= $$$VARWorkFlowRegTeraADRegraCalculodaRegra(objRegra)
		set acao 		= $$$VARWorkFlowRegTeraADRegraAcaodaRegra(objRegra)
		set mensagem 	= $$$VARWorkFlowRegTeraADRegraMensagemdeExibicao(objRegra)
		set clcr 		= ""
		if calculo["<clcr>" {
			set clcr = ..getCLCR(codPaciente,cid,ficha)
			if clcr="" set clcr = """"""
		}
		set calculo = $replace(calculo,"<clcr>",clcr)
		set calculo = $replace(calculo,"e",")&&(")
		set calculo = $replace(calculo,"ou",")||(")
		set calculo = "("_$zstrip(calculo,"*w")_")"
		set resp = ""
		Xecute "set resp = "_calculo
		if resp=0 continue
		set novaDose = $justify(doseAtual*acao/100,0,1)
		set mensagem = $replace(mensagem,"<dose>",$fnumber(doseAtual,".",1)_" "_$$GetDescUnidadePEP^VARSQL(unidadeAtual))
		set mensagem = $replace(mensagem,"<doseAlterada>",$fnumber(novaDose,".")_" "_$$GetDescUnidadePEP^VARSQL(unidadeAtual))
		set mensagem = $replace(mensagem,"<clcr>",$fnumber(clcr,"."))
		set mensagemTrata = "Dose de "_$$GetDescMedicamentos^VARSQL(codMedicamento,1)_" reduzida em "_acao_"%"
		set critica	 = regra_"~"_novaDose_"~<span class=corAlerta><b>ATENÇÃO:</b></span><br><br>"_mensagem_"~"_mensagemTrata
	}
	quit critica]]></Implementation>
</Method>

<Method name="getCLCR">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set resultado = ""
	set sexo="",idade="",peso="",creatinina=""
	if codPaciente'="",ficha'=""{
		set objPaciente = $get(^MEDPatient(0,codPaciente,1))
		set sexo 		= $$$MEDPatientGender(objPaciente)
		set idade 		= $piece($$getPatientAge^VARSQL(codPaciente)," ",1)
		set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
		set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
		;
		set sequencia=""
		set codCreatinina = 98
		set rs = ##class(%SQL.Statement).%ExecDirect("","select top 1 Sequencia from VARWorkFlowPEP where Company=0 and %upper(codigodocid)='"_cid_"' and %upper(TipodeWorkflow)=5 and %upper(nome) = '"_codCreatinina_"'")
		while(rs.%Next()){
			set sequencia = rs.%Get("Sequencia")
		}
		if sequencia'=""{
			set campoPreenchido = ..recCampoPreenchidoFichas(sequencia,codPaciente,cid,ficha,1)
			set:campoPreenchido'="" creatinina = campoPreenchido.valor
		}
	}
	if +creatinina'=0{
		set resultado = (140-idade)*(peso/(72*creatinina))
		if sexo=2 set resultado = resultado * 0.85
		set resultado = $justify(resultado,0,1)
	}
	quit resultado]]></Implementation>
</Method>

<Method name="confirmaAjusteDoseAlterada">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set fichaSeq 	= $get(%request.Data("fichaSeq",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set tipo	 	= $get(%request.Data("tipo",1))
	set objeto 		= $get(%request.Data("objeto",1))
	set objeto 		= [].%FromJSON(objeto)
	set retorno 	= {}
	set retorno.status=1
	if +objeto.novaDose'=0{
		set obj = $get(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,objeto.codMedicamento,1))
		set $$$VARPEPPremiumDosePrescritaDoseAlterada(obj) = objeto.novaDose
		set $$$VARPEPPremiumDosePrescritaUnidade(obj)	= objeto.codUnidadeAtual
		set strStatus = $$$Save("VARPEPPremiumDosePrescrita",codPaciente_","_cid_","_ficha_","_objeto.codMedicamento,obj,$$$YES)
		if $$$ISOK(strStatus){
			set opcao = tipo
			if opcao="" set opcao=" "
			set codPrescricao = $order(^VARPEPPremiumPrescricaos(0,1,codPaciente,ficha,opcao,""),-1)
			if codPrescricao="" set codPrescricao = $order(^VARPEPPremiumPrescricao(0,""),-1)+1
			if objeto.codUnidadeAtual=3{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
				set objeto.doseAtual		  = $justify(objeto.doseAtual * sc,0,1)
			}
			if objeto.codUnidadeAtual=4{
				set objeto.doseAtual = $justify(objeto.doseAtual * peso,0,1)
			}
			;
			set nseq="" 
			for  {
				set nseq=$order(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq)) quit:nseq=""
				set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
				set medicamento = $$$VARPEPPremiumPrescricaoCodigodoMedicamento(obj)
				set dose 		= $$$VARPEPPremiumPrescricaoDose(obj) 
				set unidade 	= $$$VARPEPPremiumPrescricaoUnidade(obj)
				;
				if medicamento=objeto.codMedicamento,dose=objeto.doseAtual {
					set retorno.mensagem = medicamento_"~"_dose_"~"_unidade
					quit
				}
			}
			if nseq'=""{
				if objeto.codUnidadeAtual=3{
					set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
					set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
					set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
					set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
					set objeto.novaDose		  = $justify(objeto.novaDose * sc,0,1)
				}
				if objeto.codUnidadeAtual=4{
					set objeto.novaDose = $justify(objeto.novaDose * peso,0,1)
				}
				set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
				set $$$VARPEPPremiumPrescricaoDose(obj) = objeto.novaDose
				set strStatus = $$$Save("VARPEPPremiumPrescricao",codPrescricao_","_nseq,obj,1)
				if $$$ISOK(strStatus){
					set obj = $get(^VARPEPPremiumPrescricaoTratamento(0,codPrescricao,1))
					set $$$VARPEPPremiumPrescricaoTratamentoTratamento(obj) = objeto.mensagemTrat
					set strStatus = $$$Save("VARPEPPremiumPrescricaoTratamento",codPrescricao,obj,1)

				}
			}
		}
	}
	if $$$ISERR(strStatus){
		set retorno.status=0
		set retorno.mensagem = "Erro: "_strStatus
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="carregaSugestaoPrescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set fichaSeq 	= $get(%request.Data("fichaSeq",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set sequencia 	= $get(%request.Data("sequencia",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	
	set valor = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,sequencia),"~",1)
	set retorno = {}
	if valor="" {
		set retorno.erro = 1
		set retorno.mensagem = "Selecione uma sugestão terapêutica"
	}else{
		;
		set linhaTratamento = $piece(valor,";",1)
		set regime = $piece(valor,";",2)
		do ..limpaDosePrescrita(codPaciente,cid,ficha,YBED)
		;
		set objTratamento = $get(^VARWorkFlowRegTera(YM,cid,regime,1))
		set terapiadeSuporte = $$$VARWorkFlowRegTeraTerapiadeSuporte(objTratamento)
		;
		set query = "select * from VARPEPPremiumPrescricao "
		set query = query_" where company = 0 and codigodoCID='"_cid_"' and "
		set query = query_" codigodoPaciente = '"_codPaciente_"' and "
		set query = query_" NumerodaConsulta = '"_ficha_"' and "
		set query = query_" TipodaPrescricao = 'T'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		set codPrescricao=""
		if (rs.%Next()){
			set codPrescricao = rs.%Get("NumerodaPrescricao")
		}
		if codPrescricao'="" do ..limpaPrescricao(codPrescricao)
		;		
		set dadosobj = {}
		kill vetContinuos
		set ciclo = ..getCiclo(codPaciente,cid,ficha,regime,.vetContinuos)
		set cicloC=""
		for {
			set cicloC = $order(vetContinuos(cicloC)) quit:cicloC=""
			set retorno = ..gravaPrescricao(cid,ficha,regime,cicloC)
		}
		;
		if '$data(vetContinuos(ciclo)){
			set retorno = ..gravaPrescricao(cid,ficha,regime,ciclo)
		}
		;
		kill terapiadeSuporteVetor
		if terapiadeSuporte'=""{
			set terapiadeSuporteVetor(terapiadeSuporte)=""
		}else{
			set sequ=""
			for {
				set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ)) quit:sequ=""
				set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ,1))
				set medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
				if $data(^VARWorkFlowRegTeras(0,1,medicamento,cid)){
					set terapiaSuporte = $order(^VARWorkFlowRegTeras(0,1,medicamento,cid,""))
					set terapiadeSuporteVetor(terapiaSuporte)=""
				}
			}
		}
		if $data(terapiadeSuporteVetor){		
			set terapiadeSuporte = ""
			for {
				set terapiadeSuporte = $order(terapiadeSuporteVetor(terapiadeSuporte)) quit:terapiadeSuporte=""
				set cicloSuporte = 1
				if $data(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,ciclo)) set cicloSuporte = ciclo
				set sequ=""
				for {
					set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,cicloSuporte,sequ)) quit:sequ=""
					set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,cicloSuporte,sequ,1))
					set dadosobj = {}
					set dadosobj.codPrescricao = codPrescricao
					set dadosobj.tratamento 	= $$$VARWorkFlowRegTeraObservacoes($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					
					Set dadosobj.tipoRegime		= $$$VARWorkFlowRegTeraTipodeRegime($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					set dadosobj.precaucoes 	= $$$VARWorkFlowRegTeraPrecaucoes($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					set dadosobj.princToxicidade= $$$VARWorkFlowRegTeraPrincipaisToxicidades($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					set dadosobj.estudo 		= ..getEstudo(cid, terapiadeSuporte)
					set dadosobj.medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
					
					set dadosobj.dose 			= $Replace($$$VARWorkFlowRegTeraCicloMedDose(objTer),",",".")
					set dadosobj.unidade 		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(objTer)
					set dadosobj.unidadeOriginal = dadosobj.unidade
					set dadosobj.via 			= $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(objTer)
					set dadosobj.frequencia 	= $$$VARWorkFlowRegTeraCicloMedPosologia(objTer)
					;
					set diaInicial				= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer) 
					;
					set observacao = ""
					;set observacao = "Terapia de Suporte: "_$c(10)
					;if diaInicial'="" set observacao = observacao_"Dias de tratamento: "_diaInicial
					;if diaInicial'="" set observacao = diaInicial
					;else  set observacao = "Uso contínuo"
					;
					set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
					set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
					set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
					if dadosobj.unidade=3{
						;set sc = $justify(0.007184 * $ZPOWER(altura*100,.725) * $ZPOWER(peso,.425),0,3)
						set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
						set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",dadosobj.unidade,1))
						set descUnidade = $$$INPARAText(obj)
						
						;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dadosobj.dose,".")_" "_descUnidade
						;set observacao	= observacao_" (M²: "_$fnumber(sc,".",3)_")"
						set dadosobj.dose = $justify(dadosobj.dose * sc,0,1)
						set dadosobj.unidade = 1
					}
					if dadosobj.unidade=4{
						set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",dadosobj.unidade,1))
						set descUnidade = $$$INPARAText(obj)
						;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dadosobj.dose,".")_" "_descUnidade
						;set observacao	= observacao_" (Peso: "_$fnumber(peso,".")_")"
						set dadosobj.dose = $justify(dadosobj.dose * peso,0,1)
						set dadosobj.unidade = 1
						
					}
					;set diaInicial 	= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer)
					;set diaFinal 	= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
					;set dias = diaFinal-diaInicial+1
					if diaInicial="" set dadosobj.continuo=1
					set dadosobj.duracao 		= diaInicial
					
					set dadosobj.observacoes = observacao
					set dadosobj.data = $zd($horolog,3)
					set retorno = ..addPrescricao(codPaciente, cid, "T",+$horolog, dadosobj,valor_"^"_terapiadeSuporte_"^"_sequ)
					;
					do ..gravaDosePrescrita(codPaciente,cid,ficha,terapiadeSuporte,ciclo,dadosobj,YBED)
					;
					
					set codPrescricao = retorno.codPrescricao
					set retorno.mensagem = codPrescricao
				}			
			}
		}
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getEstudo">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,regime</FormalSpec>
<Implementation><![CDATA[	Set tEstudo = ""
	Set sqlEst = "Select Estudo From SQLUser.VARWorkFlowRegTeraRefe " _
				 "Where Company = 0 And CodigodoCID = '"_cid_"' And CodigodoRegimeTerapeutico = '"_regime_"' "_
				 "And Estudo Is Not Null Group By Estudo"
	set rSEst = ##class(%SQL.Statement).%ExecDirect("",.sqlEst)
	While (rSEst.%Next()){	
		Set tEstudo = tEstudo _$Select(tEstudo="":"",1:", ")_ rSEst.%Get("Estudo")
	}
	Return tEstudo]]></Implementation>
</Method>

<Method name="gravaPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,ficha,regime,ciclo,pManterAltDose=0</FormalSpec>
<Implementation><![CDATA[	kill produtos
	;
	set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,regime,1,1))
	set tratCiclico = +$$$VARWorkFlowRegTeraCicloContinuo(objCiclos)
	;
	set ciclo1=""
	set cicloreal=ciclo
	if tratCiclico=2,$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""))'=$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""),-1) {
		set ciclo1=1
	}
	;
	for ciclo=ciclo1,cicloreal{
		if ciclo="" continue
		set sequ=""
		for {
			set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ)) quit:sequ=""
			set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ,1))
			set medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
			set dose 			= $Replace($$$VARWorkFlowRegTeraCicloMedDose(objTer),",",".")
			set unidade 		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(objTer)
			set unidadeOriginal = unidade
			set via 			= $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(objTer)
			set frequencia 		= $$$VARWorkFlowRegTeraCicloMedPosologia(objTer)
			set diaInicial		= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer) 
			set diaFinal	 	= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
			set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
			set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
			set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
			set observacao = ""
			if unidade=3{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
				set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",unidade,1))
				set descUnidade = $$$INPARAText(obj)
				;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dose,".")_" "_descUnidade
				;set observacao	= observacao_" (M²: "_$fnumber(sc,".",3)_")"
				set dose 		= $justify(dose * sc,0,1)
			}
			if unidade=4{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",unidade,1))
				set descUnidade = $$$INPARAText(obj)
				;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dose,".")_" "_descUnidade
				;set observacao	= observacao_" (Peso: "_$fnumber(peso,".")_")"
				set dose = $justify(dose * peso,0,1)
			}
			set diaInicial 	= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer)
			set diaFinal 	= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
			set dias = diaFinal-diaInicial+1
			if diaInicial="" set dias = "",continuo=1
			if dias<0 set dias = 0
			set duracao 		= dias
			
			set observacoes = observacao
			set data = $zd($horolog,3)
			set obj = $get(produtos(medicamento,unidade,via,frequencia,dose))
			set $p(obj,"~",1) = $p(obj,"~",1)+duracao
			set produtos(medicamento,unidade,via,frequencia,dose) = obj
			set produtos(medicamento,unidade,via,frequencia,dose,$select(diaInicial="":" ",1:diaInicial))=$select(diaFinal="":" ",1:diaFinal)
		}
	}
	set produto=""
	for {
		set produto = $order(produtos(produto)) quit:produto=""
		set unidade=""
		for {
			set unidade = $order(produtos(produto,unidade)) quit:unidade=""
			set via=""
			for {
				set via = $order(produtos(produto,unidade,via)) quit:via=""
				set frequencia=""
				for {
					set frequencia = $order(produtos(produto,unidade,via,frequencia)) quit:frequencia=""
					set dose=""
					for {
						set dose = $order(produtos(produto,unidade,via,frequencia,dose)) quit:dose=""
						set duracao = produtos(produto,unidade,via,frequencia,dose)
						set dadosobj = {}
						set dadosobj.codPrescricao = codPrescricao
						set dadosobj.tratamento 	= $$$VARWorkFlowRegTeraObservacoes($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						Set dadosobj.tipoRegime		= $$$VARWorkFlowRegTeraTipodeRegime($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						set dadosobj.precaucoes 	= $$$VARWorkFlowRegTeraPrecaucoes($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						set dadosobj.princToxicidade= $$$VARWorkFlowRegTeraPrincipaisToxicidades($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						set dadosobj.estudo 		= ..getEstudo(cid, regime)
						set dadosobj.medicamento 	= produto
						set dadosobj.dose 			= dose
						set dadosobj.unidade 		= unidade
						set dadosobj.unidadeOriginal = unidade
						if (unidade=3)||(unidade=4) set dadosobj.unidade = 1
						set dadosobj.via 			= via
						set dadosobj.frequencia 	= frequencia
						set dadosobj.duracao 		= duracao
						;
						set observacao	= ""
						set dias=""
						set diaInicial = ""
						for {
							set diaInicial = $order(produtos(produto,unidade,via,frequencia,dose,diaInicial)) quit:diaInicial=""
							set diaFinal = produtos(produto,unidade,via,frequencia,dose,diaInicial)
							if dias'="" set dias = dias_", "
							if diaInicial=diaFinal {
								if diaInicial=" " set dias = dias_"Contínuo"
								else  set dias = dias_diaInicial
							}else{
								if diaFinal=" " set dias = dias_"Dia "_diaInicial_" - Contínuo"
								else  set dias = dias_"dia "_diaInicial_" a "_diaFinal
							}
						}
						if dias'="" set observacao = observacao_"Dias de tratamento: "_dias
						else  set observacao = observacao_"Uso contínuo"
						set dadosobj.observacoes 		= observacao
						;
						set retorno = ..addPrescricao(codPaciente, cid, "T",+$horolog, dadosobj,valor_"^"_ciclo_"^"_sequ, regime, ciclo, codPrescricao, 0, pManterAltDose)
						;
						do ..gravaDosePrescrita(codPaciente,cid,ficha,regime,ciclo,dadosobj,YBED)
						;
						set codPrescricao = retorno.codPrescricao
						set retorno.mensagem = codPrescricao
					}
				}
			}
		}
	}	
	quit retorno
	
	set sequ=""
	for {
		set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ)) quit:sequ=""
		set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ,1))
		set dadosobj = {}
		set dadosobj.codPrescricao = codPrescricao
		set dadosobj.tratamento 	= $$$VARWorkFlowRegTeraObservacoes($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
		Set dadosobj.tipoRegime		= $$$VARWorkFlowRegTeraTipodeRegime($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
		set dadosobj.precaucoes 	= $$$VARWorkFlowRegTeraPrecaucoes($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
		set dadosobj.princToxicidade= $$$VARWorkFlowRegTeraPrincipaisToxicidades($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
		set dadosobj.estudo 		= ..getEstudo(cid, regime)
		set dadosobj.medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
		set dadosobj.dose 			= $Replace($$$VARWorkFlowRegTeraCicloMedDose(objTer),",",".")
		set dadosobj.unidade 		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(objTer)
		set dadosobj.unidadeOriginal = dadosobj.unidade
		set dadosobj.via 			= $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(objTer)
		set dadosobj.frequencia 	= $$$VARWorkFlowRegTeraCicloMedPosologia(objTer)
		;
		set diaInicial				= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer) 
		set diaFinal	 			= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
		set observacao	= ""
		set dias=""
		if diaInicial=diaFinal {
			if diaInicial="" set dias = "Contínuo"
			else  set dias = "Dia "_diaInicial
		}else{
			if diaFinal="" {
				set dias = "Dia "_diaInicial_" - Contínuo"
			}else{
				if (diaFinal-diaInicial+1)#7=0 {
					set dias = ((diaFinal-diaInicial+1)/7)_" Semanas"
				}else{
					set dias = "Dia "_diaInicial_" a "_diaFinal
				}
			}
		}
		if dias'="" set observacao = observacao_"Dias de tratamento: "_dias
		else  set observacao = observacao_"Uso contínuo"
		;
		set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
		set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
		set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
		if dadosobj.unidade=3{
			
			;set sc = $justify(0.007184 * $ZPOWER(altura*100,.725) * $ZPOWER(peso,.425),0,3)
			set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
			set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",dadosobj.unidade,1))
			set descUnidade = $$$INPARAText(obj)
			
			;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dadosobj.dose,".")_" "_descUnidade
			;set observacao	= observacao_" (M²: "_$fnumber(sc,".",3)_")"
			set dadosobj.dose = $justify(dadosobj.dose * sc,0,1)
			set dadosobj.unidade = 1
		}
		if dadosobj.unidade=4{
			set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",dadosobj.unidade,1))
			set descUnidade = $$$INPARAText(obj)
			;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dadosobj.dose,".")_" "_descUnidade
			;set observacao	= observacao_" (Peso: "_$fnumber(peso,".")_")"
			set dadosobj.dose = $justify(dadosobj.dose * peso,0,1)
			set dadosobj.unidade = 1
			
		}
		set diaInicial 	= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer)
		set diaFinal 	= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
		set dias = diaFinal-diaInicial+1
		if diaInicial="" set dias = "",dadosobj.continuo=1
		if dias<0 set dias = 0
		set dadosobj.duracao 		= dias
		
		set dadosobj.observacoes = observacao
		set dadosobj.data = $zd($horolog,3)
		set retorno = ..addPrescricao(codPaciente, cid, "T",+$horolog, dadosobj,valor_"^"_ciclo_"^"_sequ, regime, ciclo, codPrescricao, 0, pManterAltDose)
		;
		do ..gravaDosePrescrita(codPaciente,cid,ficha,regime,ciclo,dadosobj,YBED)
		;
		set codPrescricao = retorno.codPrescricao
		set retorno.mensagem = codPrescricao
	}	
	quit retorno]]></Implementation>
</Method>

<Method name="limpaDosePrescrita">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,YBED</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	set medicamento = ""
	for {
		set medicamento = $order(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,medicamento)) quit:medicamento=""
		set strStatus = $$$Kill("VARPEPPremiumDosePrescrita",codPaciente_","_cid_","_ficha_","_medicamento)
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="gravaDosePrescrita">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,regime,ciclo,dadosobj,YBED</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	set obj = ""
	set $$$VARPEPPremiumDosePrescritaDose(obj) = dadosobj.dose
	set $$$VARPEPPremiumDosePrescritaUnidade(obj) = dadosobj.unidadeOriginal
	set $$$VARPEPPremiumDosePrescritaVia(obj) = dadosobj.via
	set $$$VARPEPPremiumDosePrescritaFrequencia(obj) = dadosobj.frequencia
	set $$$VARPEPPremiumDosePrescritaDuracao(obj) = dadosobj.duracao
	set $$$VARPEPPremiumDosePrescritaTratamento(obj) = regime
	set $$$VARPEPPremiumDosePrescritaCiclo(obj) = ciclo
	;
	if dadosobj.unidadeOriginal=3{
		set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
		set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
		set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
		set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
		set $$$VARPEPPremiumDosePrescritaDose(obj) = $justify(dadosobj.dose/sc,0,0)
	}
	if dadosobj.unidadeOriginal=4{
		set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
		set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
		set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
		set $$$VARPEPPremiumDosePrescritaDose(obj) = $justify(dadosobj.dose/peso,0,0)
	}
	;
	set strStatus = $$$Save("VARPEPPremiumDosePrescrita",codPaciente_","_cid_","_ficha_","_dadosobj.medicamento,obj,$$$YES)
	quit strStatus]]></Implementation>
</Method>

<Method name="atualizaDosePrescrita">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,ciclo,dadosobj,YBED</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	set obj = $get(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,dadosobj.medicamento,1))
	set $$$VARPEPPremiumDosePrescritaDoseAlterada(obj) = ""
	set $$$VARPEPPremiumDosePrescritaUnidadeAlterada(obj) = ""
	set $$$VARPEPPremiumDosePrescritaViaAlterada(obj) = ""
	set $$$VARPEPPremiumDosePrescritaFrequenciaAlterada(obj) = ""
	set $$$VARPEPPremiumDosePrescritaDuracaoAlterada(obj) = ""
	;
	if $$$VARPEPPremiumDosePrescritaUnidade(obj) '= dadosobj.unidade{
		set $$$VARPEPPremiumDosePrescritaUnidadeAlterada(obj) = dadosobj.unidade
	}
	if $$$VARPEPPremiumDosePrescritaUnidade(obj)=3,dadosobj.unidade=1{
		set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
		set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
		set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
		set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
		set dadosobj.dose = $justify(dadosobj.dose/sc,0,0)
		set $$$VARPEPPremiumDosePrescritaUnidadeAlterada(obj) = ""
	}
	if dadosobj.unidadeOriginal=4,dadosobj.unidade=1{
		set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
		set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
		set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
		set dadosobj.dose = $justify(dadosobj.dose/peso,0,0)
		set $$$VARPEPPremiumDosePrescritaUnidadeAlterada(obj) = ""
	}
	if $$$VARPEPPremiumDosePrescritaDose(obj) '= dadosobj.dose{
		set $$$VARPEPPremiumDosePrescritaDoseAlterada(obj) = dadosobj.dose
	}
	if $$$VARPEPPremiumDosePrescritaVia(obj) '= dadosobj.via{
		set $$$VARPEPPremiumDosePrescritaViaAlterada(obj) = dadosobj.via
	}
	if $$$VARPEPPremiumDosePrescritaFrequencia(obj) '= dadosobj.frequencia{
		set $$$VARPEPPremiumDosePrescritaFrequenciaAlterada(obj) = dadosobj.frequencia
	}
	if $$$VARPEPPremiumDosePrescritaDuracao(obj) '= dadosobj.duracao{
		set $$$VARPEPPremiumDosePrescritaDuracaoAlterada(obj) = dadosobj.duracao
	}
	set strStatus = $$$Save("VARPEPPremiumDosePrescrita",codPaciente_","_cid_","_ficha_","_dadosobj.medicamento,obj,$$$YES)
	quit strStatus]]></Implementation>
</Method>

<Method name="limpaPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPrescricao</FormalSpec>
<Implementation><![CDATA[	kill reorder
	set nseq = ""
	for {
		set nseq = $order(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq)) quit:nseq=""
		set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
		if $$$VARPEPPremiumPrescricaoCodigodaRecomendacaoTerap(obj) = "" {
			set reorder(nseq) = obj
		}
		set ret = $$$Kill("VARPEPPremiumPrescricao",codPrescricao_","_nseq)	
	}

	set nseq = ""
	for {
		set nseq = $order(reorder(nseq)) quit:nseq=""
		set obj = $get(reorder(nseq))
		set nnseq = $order(^VARPEPPremiumPrescricao(YM,codPrescricao,""),-1)+1
		set ret = $$$Save("VARPEPPremiumPrescricao",codPrescricao_","_nnseq,obj,$$$YES)	
	}
	
	quit]]></Implementation>
</Method>

<Method name="salvaImpressaoTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	set dados = $get(%request.Data("dados",1))
	set dados = [].%FromJSON(dados)
	set codTratamento = dados.tratamento
	set strStatus = ""
	if codTratamento'=""{
		set obj  = $get(^VARPEPPremiumImprSolicTrat(0,codPaciente,cid,ficha,codTratamento,1))
		set $$$VARPEPPremiumImprSolicTratCabecalho(obj) = dados.descricao
		set $$$VARPEPPremiumImprSolicTratReferencias(obj) = dados.referencias
		set strStatus = $$$Save("VARPEPPremiumImprSolicTrat",codPaciente_","_cid_","_ficha_","_codTratamento,obj,$$$OK)
	}
	set retorno = {}
	set retorno.status = strStatus
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getRecTerapeutica">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("paciente",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	set retorno = []
	set form = {}
	set form.dataField = "preTerapeutica"
	set form.editorType = "dxRadioGroup"
	set form.cssClass	= "labelDetalhes"
	set label = {}
	set label.alignment = "right"
	set label.text = "O paciente é frágil, ou tem alguma co-morbidade significativa?"
	set form.label = label
	set editorOptions = {}
	;set editorOptions.value = valor
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = 1
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = 0
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	;
	set form.editorOptions = editorOptions
	do retorno.%Push(form)
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getLinhasTempo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("paciente",1))
	set cid = $get(%request.Data("codCID",1))
	set data = ""
	for {
		set data = $order(^VARPEPPremiums(YM,1,codPaciente,cid,data),-1) quit:data=""
		write "<tr><td>"_$zdate(data,4)_"</td></tr>"
		set campo = ""
		for {
			set campo = $order(^VARPEPPremiums(YM,1,codPaciente,cid,data,codPaciente,cid,ficha,fichaSeq,campo)) quit:campo=""
			set hora = ""
			for {
				set hora = $order(^VARPEPPremiums(YM,1,codPaciente,cid,data,codPaciente,cid,ficha,fichaSeq,campo,data,hora)) quit:hora=""
				set objPEP = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,campo,data,hora,1))
				set valorC = $$$VARPEPPremiumValorRegistrado(objPEP)
				;
				set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
				set desc    = $$$VARWorkFlowPEPNome(objWF)
				set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
				set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
				;
				if tipo=5{
					set exames=""
					for i=1:1:$length(desc,";"){
						set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(desc,";",i),1))
						set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
						if unid="" set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
						if exames'="" set exames = exames_"/"
						set exames = exames_descExame
					}
					set desc = exames
				}
				if tipo=2||(tipo=11)||(tipo=12) {
					set desc = desc
				}else{
					set desc = desc_" do Paciente = "_$fnumber(valorC,".")_" "_unid
				}
				
				;
				write "<tr><td>&nbsp;&nbsp;&nbsp;"_$ztime(hora)_" - "_desc_"</td><tr>"
			}
		}
	}
	quit]]></Implementation>
</Method>

<Method name="setToggle">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set painel = $get(%request.Data("painel",1))
	set exibir = $get(%request.Data("exibir",1))
	set paciente = $get(%request.Data("paciente",1))
	set %session.Data("MAPPA_paciente") = paciente
	set ^VARPEPPremiumOpc(YBED,painel) = exibir
	write 1
	quit]]></Implementation>
</Method>

<Method name="getConsultaRetrospectiva">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente 	= $get(%request.Data("paciente",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set retorno = {}
	set dados = {}
	set objConsulta = $get(^VARPEPPremiumConsulta(YM,paciente,ficha,1))
	set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)
	if data'=""{
		set dados.data = $zdate(data,3)
	}
	set retorno.formData = dados
	set retorno.max = $zdate($horolog-1,3)
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="setConsultaRetrospectiva">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente 	= $get(%request.Data("paciente",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set cid 		= $get(%request.Data("cid",1))
	set data 		= $get(%request.Data("dataConsulta",1))
	set data = $replace(data,"""","")
	set data 		= $zdateh($replace(data,"/","-"),3,,,,,,,"")
	set strStatus = $$$OK
	set retorno = {}
	tstart
	try{
		set obj = $get(^VARPEPPremiumConsulta(YM,paciente,ficha,1))
		if obj=""{
			set $$$VARPEPPremiumConsultaCIDdoPaciente(obj) = cid
			set $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(obj) = $horolog
			set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloIni(obj) = YBED
		}
		set $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(obj)=data
		set strStatus = $$$Save("VARPEPPremiumConsulta",paciente_","_ficha,obj,$$$YES)
	}
	catch e {
		set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	if strStatus=$$$OK{
		tcommit
		set retorno.status=1
		set retorno.tipo="success"
		set retorno.mensagem="Consulta alterada com sucesso!"
	}else{
		set retorno.status=0
		set retorno.tipo="error"
		set retorno.mensagem = strStatus
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getPEPPrimario">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente 	= $get(%request.Data("paciente",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set tipoPEP	 	= $get(%request.Data("tipo",1))
	;
	if tipoPEP=3{
		set objAnt 		= $get(^VARPEPAntigos(0,paciente,1))
	}elseif tipoPEP=2{
		set objAnt 		= $get(^VARPEP(0,ficha,1))
	}else{
		set objAnt 		= $get(^VARPEPPremiumPrimario(0,paciente,ficha,1))
	}
	set objPEPPrimario={}
	set objPEPPrimario.historiaSintomas = $$$VARPEPPremiumPrimarioAnamneseHistSintomas(objAnt)
	;
	set molestiasObj = $$$VARPEPPremiumPrimarioAnamneseMolestias(objAnt)
	set molestias=[]
	for i=1:1:$length(molestiasObj,";"){
		if $piece(molestiasObj,";",i)="" continue
		do molestias.%Push($piece(molestiasObj,";",i))
	}
	set objPEPPrimario.molestiasPregressasAtuais		= molestias
	;	
	kill ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId)
	set datasGestacionais = []
	for i=1:1:$length($$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt),";"){
		set dataG = $piece($$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt),";",i)
		if dataG="" continue
		do datasGestacionais.%Push($zdate(dataG,4))
		set ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,dataG) = ""
	}
	set objPEPPrimario.datasGestacionais = datasGestacionais
	if $$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt)'="" {
		set objPEPPrimario.antecedentesGestacionais = 1
	}else{
		If ($$$VARPEPPremiumPrimarioAnamneseQtdeGestacao(objAnt) '= "") {
			set objPEPPrimario.antecedentesGestacionais = 1
		}else{
			set objPEPPrimario.antecedentesGestacionais = 0	
		}
	}
	set objPEPPrimario.qtdeGestacao = $$$VARPEPPremiumPrimarioAnamneseQtdeGestacao(objAnt)
	;
	set objPEPPrimario.historiaMenstrual	= $$$VARPEPPremiumPrimarioAnamneseHistMenstrual(objAnt)
	set objPEPPrimario.descendencia		= $$$VARPEPPremiumPrimarioAnamneseDescendencia(objAnt) 
	set objPEPPrimario.antecedentesCirurgicosTexto	 = $$$VARPEPPremiumPrimarioAnamnesePossuiAntCirurgicos(objAnt) 
	set objPEPPrimario.habitosVicios		= $$$VARPEPPremiumPrimarioAnamneseHabitosVicios(objAnt) 
	
	set medicUtilizadasObj = $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt)
	set medicUtilizadas=[]
	for i=1:1:$length(medicUtilizadasObj,";"){
		if $piece(medicUtilizadasObj,";",i)="" continue
		do medicUtilizadas.%Push($piece(medicUtilizadasObj,";",i))
	}
	;
	set objPEPPrimario.medicacoesUtilizadas	= medicUtilizadas
	
	;set objPEPPrimario.medicacoesUtilizadas	= $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt)
	
	set objPEPPrimario.antecedentesFamiliares	= $$$VARPEPPremiumPrimarioAnamneseAntFamiliares(objAnt) 
	set objPEPPrimario.pa1			= $$$VARPEPPremiumPrimarioAnamnesePA1(objAnt) 
	set objPEPPrimario.pulso		= $$$VARPEPPremiumPrimarioAnamnesePulso(objAnt) 
	set temp = $$$VARPEPPremiumPrimarioAnamneseTemp(objAnt)
	if temp'="" set temp = +temp
	set objPEPPrimario.temp		= temp
	set peso = $$$VARPEPPremiumPrimarioAnamnesePeso(objAnt) 
	if peso'="" set peso = +peso
	set objPEPPrimario.peso		= peso
	set altura = $$$VARPEPPremiumPrimarioAnamneseAltura(objAnt)
	if altura'="" set altura = +altura
	if tipoPEP=2||(tipoPEP=3){
		if altura'="" set altura = altura/100
	}
	set objPEPPrimario.altura		= altura
	set sc = $$$VARPEPPremiumPrimarioAnamneseSC(objAnt) 
	if sc'="" set sc = +sc
	set objPEPPrimario.sc			=  sc
	set objPEPPrimario.cabecaPescoco	= $$$VARPEPPremiumPrimarioAnamneseCabecaPescoco(objAnt)
	;
	set alturaIMC = (altura/100)*(altura/100)
    set imc = ""
	if (alturaIMC'=0){
		set imc = +(peso/alturaIMC)
	}
	set objPEPPrimario.imc = imc
	;
	set objPEPPrimario.torax	= $$$VARPEPPremiumPrimarioAnamneseTorax(objAnt) 
	set objPEPPrimario.coracao	= $$$VARPEPPremiumPrimarioAnamneseCoracao(objAnt)
	set objPEPPrimario.pulmoes	= $$$VARPEPPremiumPrimarioAnamnesePulmoes(objAnt)
	set objPEPPrimario.abdomen	= $$$VARPEPPremiumPrimarioAnamneseAbdomen(objAnt)
	set objPEPPrimario.figado	= $$$VARPEPPremiumPrimarioAnamneseFigado(objAnt)
	set objPEPPrimario.baco	= $$$VARPEPPremiumPrimarioAnamneseBaco(objAnt) 
	set objPEPPrimario.mmss	= $$$VARPEPPremiumPrimarioAnamneseMMSS(objAnt) 
	set objPEPPrimario.mmii	= $$$VARPEPPremiumPrimarioAnamneseMMII(objAnt) 
	set objPEPPrimario.conduta	= $$$VARPEPPremiumPrimarioAnamneseConduta(objAnt)
	;
	set hdObj = $$$VARPEPPremiumPrimarioAnamneseHD(objAnt)
	set hd=[]
	for i=1:1:$length(hdObj,";"){
		if $piece(hdObj,";",i)="" continue
		do hd.%Push($piece(hdObj,";",i))
	}
	set objPEPPrimario.hd		= hd
	set objPEPPrimario.pa2		= $$$VARPEPPremiumPrimarioAnamnesePA2(objAnt)
	set objPEPPrimario.antecedentesCirurgicos = $$$VARPEPPremiumPrimarioAnamneseAntCirurgicos(objAnt)
	set objPEPPrimario.paiFalecido = $$$VARPEPPremiumPrimarioAnamnesePaiFalecido(objAnt)
	set cidPaiObj = $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoPai(objAnt)
	set cidPai=[]
	for i=1:1:$length(cidPaiObj,";"){
		if $piece(cidPaiObj,";",i)="" continue
		do cidPai.%Push($piece(cidPaiObj,";",i))
	}
	set objPEPPrimario.cidFalecimentoPai		= cidPai
	set objPEPPrimario.causaFalecimentoPai = $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoP(objAnt)
	set objPEPPrimario.maeFalecida = $$$VARPEPPremiumPrimarioAnamneseMaeFalecida(objAnt)
	set cidMaeObj = $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoMae(objAnt)
	set cidMae=[]
	for i=1:1:$length(cidMaeObj,";"){
		if $piece(cidMaeObj,";",i)="" continue
		do cidMae.%Push($piece(cidMaeObj,";",i))
	}
	set objPEPPrimario.cidFalecimentoMae		= cidMae	
	set objPEPPrimario.causaFalecimentoMae = $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoM(objAnt)
	set objPEPPrimario.outrosFalecimento = $$$VARPEPPremiumPrimarioAnamneseOutrosFalecimento(objAnt)
	set retorno = {}
	set retorno.formData = objPEPPrimario
	;
	if tipoPEP = 3 {
		set retorno.disabled = 1
		set retorno.title = "Registros Anteriores"
	}elseif tipoPEP = 2 {
		set retorno.disabled = 1
		set obj = $get(^MEDAdmission(0,ficha,1))
		set dataAdmissao = $$$MEDAdmissionDateAdmitted(obj)
		set retorno.title = "Prontuário Eletrônico - Admissão "_ficha_" (Realizada em "_$zdate(dataAdmissao,4)_")"
	}else{
		set retorno.disabled = 0
		if +$order(^VARPEPPremiumPrimario(0,paciente,""),-1)>ficha set retorno.disabled = 1
		if 'retorno.disabled{
			set retorno.title = "Prontuário Primário - Consulta "_ficha_" (Consulta Atual)" 
		}else{
			set dataConsulta = $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",2)
			set retorno.title = "Prontuário Primário - Consulta "_ficha_" (Realizada em "_$zdate(dataConsulta,4)_")"
		}
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvarPEPPrimario">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("paciente",1))
	set dados = $get(%request.Data("dados",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	try {
		set objAnt = $get(^VARPEPPremiumPrimario(0,paciente,ficha,1))
		set objDados = [].%FromJSON(dados)
		set $$$VARPEPPremiumPrimarioAnamneseHistSintomas(objAnt) 	= objDados.historiaSintomas
		set molestias = ""
		if objDados.molestiasPregressasAtuais'=""{
			if objDados.molestiasPregressasAtuais.%Size()>0{
				for {
					set molestia = objDados.molestiasPregressasAtuais.%Pop()
					quit:molestia=""
					set:molestias'="" molestias=molestias_";"
					set molestias=molestias_molestia
				}
			}
		}

		set $$$VARPEPPremiumPrimarioAnamneseMolestias(objAnt) 		= molestias
		;
		set datas = ""
		if objDados.datasGestacionais'=""{
			if objDados.datasGestacionais.%Size()>0{
				for {
					set dataG = objDados.datasGestacionais.%Pop()
					quit:dataG=""
					set:datas'="" datas=datas_";"
					set datas=datas_$zdateh(dataG,4)
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseAntGestacionais(objAnt) = datas
		set $$$VARPEPPremiumPrimarioAnamneseQtdeGestacao(objAnt) = objDados.qtdeGestacao
		;
		set $$$VARPEPPremiumPrimarioAnamneseHistMenstrual(objAnt) = objDados.historiaMenstrual
		set $$$VARPEPPremiumPrimarioAnamneseDescendencia(objAnt) = objDados.descendencia
		set $$$VARPEPPremiumPrimarioAnamnesePossuiAntCirurgicos(objAnt) = objDados.antecedentesCirurgicosTexto
		set $$$VARPEPPremiumPrimarioAnamneseHabitosVicios(objAnt)  = objDados.habitosVicios
		set medicUtilizadas = ""
		if objDados.medicacoesUtilizadas'=""{
			if objDados.medicacoesUtilizadas.%Size()>0{
				for {
					set medicUtilizadas1 = objDados.medicacoesUtilizadas.%Pop()
					quit:medicUtilizadas1=""
					set:medicUtilizadas'="" medicUtilizadas=medicUtilizadas_";"
					set medicUtilizadas=medicUtilizadas_medicUtilizadas1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt) = medicUtilizadas
		;set $$$VARPEPPremiumPrimarioAnamneseMedicUtilizadas(objAnt) = objDados.medicacoesUtilizadas
		set $$$VARPEPPremiumPrimarioAnamneseAntFamiliares(objAnt)  = objDados.antecedentesFamiliares
		set $$$VARPEPPremiumPrimarioAnamnesePA1(objAnt)  = objDados.pa1
		set $$$VARPEPPremiumPrimarioAnamnesePulso(objAnt) = objDados.pulso
		set $$$VARPEPPremiumPrimarioAnamneseTemp(objAnt) = objDados.temp
		set $$$VARPEPPremiumPrimarioAnamnesePeso(objAnt) = objDados.peso
		set $$$VARPEPPremiumPrimarioAnamneseAltura(objAnt) = objDados.altura
		set $$$VARPEPPremiumPrimarioAnamneseSC(objAnt) = objDados.sc
		set $$$VARPEPPremiumPrimarioAnamneseCabecaPescoco(objAnt) = objDados.cabecaPescoco
		set $$$VARPEPPremiumPrimarioAnamneseTorax(objAnt) = objDados.torax
		set $$$VARPEPPremiumPrimarioAnamneseCoracao(objAnt) = objDados.coracao
		set $$$VARPEPPremiumPrimarioAnamnesePulmoes(objAnt) = objDados.pulmoes
		set $$$VARPEPPremiumPrimarioAnamneseAbdomen(objAnt) = objDados.abdomen
		set $$$VARPEPPremiumPrimarioAnamneseFigado(objAnt) = objDados.figado
		set $$$VARPEPPremiumPrimarioAnamneseBaco(objAnt) = objDados.baco
		set $$$VARPEPPremiumPrimarioAnamneseMMSS(objAnt) = objDados.mmss
		set $$$VARPEPPremiumPrimarioAnamneseMMII(objAnt) = objDados.mmii
		set $$$VARPEPPremiumPrimarioAnamneseConduta(objAnt) = objDados.conduta
		;
		set cid=""
		set hd = ""
		if objDados.hd'=""{
			if objDados.hd.%Size()>0{
				for {
					set hd1 = objDados.hd.%Pop()
					quit:hd1=""
					set:hd'="" hd=hd_";"
					set hd=hd_hd1
					if $data(^VARWorkFlowCID(YM,hd1)) set cid=hd1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseHD(objAnt) = hd
		set $$$VARPEPPremiumPrimarioAnamnesePA2(objAnt) = objDados.pa2
		set $$$VARPEPPremiumPrimarioAnamneseAntCirurgicos(objAnt) = objDados.antecedentesCirurgicos
		set $$$VARPEPPremiumPrimarioAnamnesePaiFalecido(objAnt) = objDados.paiFalecido
		set paiCID = ""
		if objDados.cidFalecimentoPai'=""{
			if objDados.cidFalecimentoPai.%Size()>0{
				for {
					set paiCID1 = objDados.cidFalecimentoPai.%Pop()
					quit:paiCID1=""
					set:paiCID'="" paiCID=paiCID_";"
					set paiCID=paiCID_paiCID1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoPai(objAnt) = paiCID
		set $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoP(objAnt) = objDados.causaFalecimentoPai
		set $$$VARPEPPremiumPrimarioAnamneseMaeFalecida(objAnt) = objDados.maeFalecida
		set maeCID = ""
		if objDados.cidFalecimentoMae'=""{
			if objDados.cidFalecimentoMae.%Size()>0{
				for {
					set maeCID1 = objDados.cidFalecimentoMae.%Pop()
					quit:maeCID1=""
					set:maeCID'="" maeCID=maeCID_";"
					set maeCID=maeCID_maeCID1
				}
			}
		}
		set $$$VARPEPPremiumPrimarioAnamneseCIDFalecimentoMae(objAnt) = maeCID
		set $$$VARPEPPremiumPrimarioAnamneseCausaFalecimentoM(objAnt) = objDados.causaFalecimentoMae 
		set $$$VARPEPPremiumPrimarioAnamneseOutrosFalecimento(objAnt) = objDados.outrosFalecimento
		;
		set $$$VARPEPPremiumPrimarioAlteradoEm(objAnt) = $h
		set $$$VARPEPPremiumPrimarioAlteradoPor(objAnt) = YBED
		set ret = $$$Save("VARPEPPremiumPrimario",paciente_","_ficha,objAnt,1)
		;
		if '$data(^VARPEPPremiumConsulta(YM,paciente,ficha,1)){
			set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",1) = cid
			set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",2) = $horolog
			set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",3) = YBED
		}else{
			if $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",1) '= cid{
				set $piece(^VARPEPPremiumConsulta(YM,paciente,ficha,1),"~",1) = cid
			}
		}
		;		
	}
	catch(exception){
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		set retorno.status = 0
		set retorno.mensagem = ret
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getListCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set SQL = "Select CodigodoCID, DescricaoResumida, Categoria, $$GetDescCategoriaCID^VARSQL(Categoria) AS DescCategoria From SQLUser.VARCID"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	while(rs.%Next()){
		;
		set linha = {}
		set linha.CodigodoCID = rs.%Get("CodigodoCID")
		set linha.DescricaoResumida = rs.%Get("DescricaoResumida")
		set linha.DescCategoria = rs.%Get("DescCategoria")
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = []
	set data = ""
	for {
		set data = $order(^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,data)) quit:data=""
		set linha = {}
		set linha.DataO = data
		set linha.Data = $zdate(data,3)
		set linha.DataF = $zdate(data,4)
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="deletaDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set data = $get(%request.Data("data",1))
	kill ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,data)]]></Implementation>
</Method>

<Method name="salvaDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set dados = $get(%request.Data("dados",1))
	set objDados = [].%FromJSON(dados)
	set DataGestacional = $zdateh($piece(objDados.DataGestacional,"T",1),3,,,,,,,"")
	set:DataGestacional'="" ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,DataGestacional) = ""
	w 1
	quit]]></Implementation>
</Method>

<Method name="carregaPrescricoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set codCID = $get(%request.Data("codCID",1))
	set tipo = $get(%request.Data("tipo",1))
	if dataPEP="" set dataPEP=+$horolog
	set pCodRegime = $get(%request.Data("pCodRegime",1))
	set pCiclo = $get(%request.Data("pCiclo",1))
	set query = "select * from VARPEPPremiumPrescricao "
	set query = query_" where company = 0 and codigodoCID='"_codCID_"' and "
	set query = query_" codigodoPaciente = '"_codPaciente_"' and "
	If (pCodRegime = "" || (pCiclo = "")) {
		set query = query_" numerodaconsulta = '"_ficha_"' and "
	}Else{
		set query = query_" RegimeTerapeutico = '"_pCodRegime_"' and "
		set query = query_" Ciclo = '"_pCiclo_"' and "
	}
	if tipo=""{
		set query = query_" (TipodaPrescricao = '' or TipodaPrescricao is null) "
	}else{
		set query = query_" TipodaPrescricao = '"_tipo_"'"
	}
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set linha={}
	set linha.tipo = tipo
	if (rs.%Next()){
		set linha.codPrescricao = rs.%Get("NumerodaPrescricao")
		set obj = $get(^VARPEPPremiumPrescricaoTratamento(0,linha.codPrescricao,1))
		set linha.intercorrencia = ##Class(VAR.CSP.MAPPA1).GetIntercorrenciaGeralPrescricao(codPaciente, codCID)
		set linha.tratamento = $$$VARPEPPremiumPrescricaoTratamentoTratamento(obj)
		set linha.precaucoes = $$$VARPEPPremiumPrescricaoTratamentoPrecaucoes(obj)
		set linha.princToxicidade = $$$VARPEPPremiumPrescricaoTratamentoPrincipiasToxicidade(obj)
		set linha.estudo = $$$VARPEPPremiumPrescricaoTratamentoEstudo(obj)
		set linha.data = $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj)
		if linha.data'="" set linha.data = $zdate(linha.data,3)
	}
	write linha.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="carregaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	if dataPEP="" set dataPEP=+$horolog
	kill ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId)
	if dataPEP'=""{
		set nseq=""
		for {
			set nseq = $order(^VARPEPPremiumReceituario(0,codPaciente,dataPEP,nseq)) quit:nseq=""
			set obj = $get(^VARPEPPremiumReceituario(0,codPaciente,dataPEP,nseq,1))
			set ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq) = obj
		}
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="addMedicamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set med = $get(%request.Data("med",1))
	set YBED = $get(%request.Data("YBED",1))
	set ^VARMedicamentoReceitado(0,YBED,med,1) = $get(^VARMedicamentoReceitado(0,YBED,med,1))+1
	quit]]></Implementation>
</Method>

<Method name="recReceitas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = []
	set nseq = ""
	for {
		set nseq = $order(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)) quit:nseq=""
		set receituario = $piece($get(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)),"~",1)
		set removeDataHoraImp = $piece($get(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)),"~",2)
		set linha = {}
		set linha.SeqReceita 	= nseq
		set linha.Receituario 	= receituario
		set linha.removeDataHoraImp = +removeDataHoraImp
		set linha.removeDataHoraImpExt = $select(removeDataHoraImp="1":"Sim",1:"Não")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="addReceita">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("codPaciente",1))
	set nseq = $get(%request.Data("nseq",1))
	set receita = $get(%request.Data("receita",1))
	set removeDataHoraImp = $get(%request.Data("impressao",1))
	set obj = receita_"~"_removeDataHoraImp
	if (receita'=""){ 
		set:nseq="" nseq = $order(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,""),-1)+1
		set ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)=obj
	}
	set data = +$horolog
	set ret = $$$Save("VARPEPPremiumReceituario",paciente_","_data_","_nseq,obj,1)
	write 1
	quit]]></Implementation>
</Method>

<Method name="deletaReceita">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("codPaciente",1))
	set codigo = $get(%request.Data("codigo",1))
	set data = +$horolog
	if (codigo'=""){ 
		set ret = $$$Kill("VARPEPPremiumReceituario",paciente_","_data_","_codigo)
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="GetUFs">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	do ^WWWVAR
	set contador = 0
	set SQL = " SELECT SearchItem, Text FROM WWW102 where ParameterDescription='BUNDESLAND' and Country='BR' "
	if codigo '= "" set SQL = SQL_"and SearchItem = '"_codigo_"'"
	e  if searchValue'="" set SQL = SQL_"where %upper(SearchItem) like %upper('%"_searchValue_"%') or %upper(Text) like %upper('%"_searchValue_"%')"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	while(rs.%Next()){
		set ID=rs.%Get("SearchItem")
		set Name=rs.%Get("Text")
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = Name
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="limpaTemporarias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set job = %session.SessionId
	do ..removeArquivoTemp("")
	kill ^mtemp.Arquivo(job)
	kill ^mtemp.VARRESUMOCLINICO(YM,job)
	kill ^mtemp.VARRCLIESTADIAMENTO(YM,job)
	kill ^mtemp.VARRCLIWorkFlow(YM,job)
	kill ^mtemp.VARRCLIWorkFlowDetalhe(YM,job)
	kill ^mtemp.VARProntuarioEletronicoReceitas(job)
	quit]]></Implementation>
</Method>

<Method name="salvaPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	tstart
	set strStatus=""
	set erro=0
	try{
		set dados 	= $get(%request.Data("dados",1))
		set dados = [].%FromJSON(dados)
		set obj = ""
		set $$$MEDPatientName(obj) = dados.Nome
		set $$$MEDPatientGender(obj) = dados.Sexo
		set $$$MEDPatientDOB(obj) = $zdateh($replace(dados.DataDeNascimento,"/","-"),3,,,,,,,"")
		Set $$$MEDPatientDatadeObito(obj) = $zdateh($replace(dados.DataDeObito ,"/","-"),3,,,,,,,"")
		set $$$MEDPatientSSN(obj) = dados.CPF
		set $$$MEDPatientFREE7(obj) = dados.RG
		set $$$MEDPatientExternalCode(obj) = dados.CNS
		set $$$MEDPatientAllergies(obj) = dados.Alergias
		set $$$MEDPatientPID(obj) = dados.Prontuário
		set $$$MEDPatientFREE1(obj) = dados.NãoInformada
		set $$$MEDPatientFREE9(obj) = dados.Óbito
		set $$$MEDPatientMothersName(obj) = dados.NomeDaMãe
		set $$$MEDPatientMothersDOB(obj) = $zdateh($replace(dados.DataDeNasc,"/","-"),3,,,,,,,"")
		set $$$MEDPatientTel(obj) = dados.Telefone1
		set $$$MEDPatientFREE2(obj) = dados.Telefone2
		set $$$MEDPatientFREE8(obj) = dados.PerdaDeContato
		set $$$MEDPatientEmail(obj) = $Select(dados.Email="":"Sem e-mail cadastrado",1:dados.Email)
		set $$$MEDPatientStreet(obj) = dados.Logradouro
		set $$$MEDPatientFREE4(obj) = dados.Número
		set $$$MEDPatientFREE3(obj) = dados.Complemento
		set $$$MEDPatientFREE6(obj) = dados.Bairro
		set $$$MEDPatientZipCode(obj) = dados.CEP
		set $$$MEDPatientCity(obj) = dados.Cidade
		set $$$MEDPatientState(obj) = dados.Estado
		set $$$MEDPatientClassificacao(obj) = dados.Classificação
		set $$$MEDPatientRacaCorEtnia(obj) = dados.RacaCorEtnia
		;
		set chave = dados.Codigo
		if chave=""{
			set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED),""))
			set $$$MEDPatientMedicoResponsavel(obj) = codProvider
		}
		set:chave="" chave = $$GetNextNumber^COMUtils("MEDPatient","")
		set strStatus = $$$Save("MEDPatient",chave,obj,$$$YES)
		;
		set arquivoAnt = $get(^mtemp.Arquivo(%session.SessionId))
		if arquivoAnt'=""{
			do ..copiaArquivoParaDestino(arquivoAnt,chave)
			do ..removeArquivoTemp(arquivoAnt)
		}
		if dados.cid'=""{
			set ficha 	= $order(^VARPEPPremiumConsulta(YM,chave,""),-1)
			if ficha="" set ficha = ficha + 1
			if $piece($get(^VARPEPPremiumConsulta(YM,chave,ficha,1)),"~",4)'="" {
				set ficha = ficha+1
			}
			set obj = $get(^VARPEPPremiumPrimario(YM,chave,ficha,1))
			set $$$VARPEPPremiumPrimarioAnamneseHD(obj) = dados.cid
			set strStatus = $$$Save("VARPEPPremiumPrimario",chave_","_ficha,obj,$$$YES)
		}

	}
	catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro=err
	}
	set retorno = {}
	if 'erro{
		tcommit
		set retorno.codigo = chave
		set retorno.status = strStatus
	}else{
		trollback
		set retorno.status = strStatus
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recPrescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPrescricao = $get(%request.Data("codPrescricao",1))
	set cid			  = $get(%request.Data("codCID",1))
	set codPaciente	  = $get(%request.Data("paciente",1))
	set ficha		  = $get(%request.Data("ficha",1))
	set query = "select * from VARPEPPremiumPrescricao where company = 0 and NumerodaPrescricao='"_codPrescricao_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno = []
	while(rs.%Next()){
		set codMedicamento = rs.%Get("CodigodoMedicamento")
		set codFrequencia = rs.%Get("Frequencia")
		set codVia = rs.%Get("Via")
		set codUnidade = rs.%Get("Unidade")
		set codDuracao = rs.%Get("Duracao")
		set recomendacaoTerap = rs.%Get("CodigodaRecomendacaoTerap")
		set tipoPrescricao = rs.%Get("TipodaPrescricao")
		;
		set flagInterc = 0, flagSuspender = 0, ocorrencia = ""
		If ($Data(^VARPEPPremPrescIntercorrencia(0,rs.%Get("NumerodaPrescricao"),rs.%Get("NumerodaLinha")))) {
			Set objIntercorrencia = $Get(^VARPEPPremPrescIntercorrencia(0,rs.%Get("NumerodaPrescricao"),rs.%Get("NumerodaLinha"),1))
			set flagInterc = 1
			set flagSuspender = +$$$VARPEPPremPrescIntercorrenciaSuspender(objIntercorrencia)
			set ocorrencia = $$$VARPEPPremPrescIntercorrenciaOcorrencia(objIntercorrencia)
		}
		set origem = {}
		set origem.medicamento = ""
		if recomendacaoTerap'=""{
			set objTer = $get(^VARPEPPremiumDosePrescrita(0,codPaciente,cid,ficha,codMedicamento,1))
			set origem.medicamento 	= codMedicamento
			set origem.dose 		= $$$VARPEPPremiumDosePrescritaDose(objTer)
			set origem.unidade 		= $$$VARPEPPremiumDosePrescritaUnidade(objTer)
			set origem.via 			= $$$VARPEPPremiumDosePrescritaVia(objTer)
			set origem.frequencia 	= $$$VARPEPPremiumDosePrescritaFrequencia(objTer)
			if origem.unidade=3{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
				set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",origem.unidade,1))
				set descUnidade = $$$INPARAText(obj)
				set origem.dose = $justify(origem.dose * sc,0,1)
				set origem.unidade = 1
			}
			if origem.unidade=4{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",origem.unidade,1))
				set descUnidade = $$$INPARAText(obj)
				set origem.dose = $justify(origem.dose * peso,0,1)
				set origem.unidade = 1
			}
		}
		;
		
		set medicamento		= $$GetDescMedicamentos^VARSQL(codMedicamento,1,codVia)
		set frequencia = ""
		if codFrequencia'=""{
			set obj			= $get(^INPARA(YM,"POSOLOGIA","PT",codFrequencia,1))
			if obj="" set frequencia = codFrequencia
			e  set frequencia = $$$INPARAText(obj)
		}
		set via = ""
		if codVia'=""{
			set obj	= $get(^INPARA(YM,"VIAADMINISTRACAO","PT",codVia,1))
			set via = $$$INPARAText(obj)
		}
		set unidade = ""
		if codUnidade'=""{
			set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",codUnidade,1))
			set unidade = $$$INPARAText(obj)
		}
		set duracao = $$GetDescDuracaoPEP^VARSQL(codDuracao)
		set codDose = rs.%Get("Dose")
		set dose = "Variável"
		if +codDose'=0{
			set dose = codDose
		}
		if codDose=""{
			set dose=""
		}
		
		set linha={}
		set linha.chave 		= codPrescricao_","_rs.%Get("NumerodaLinha")
		set linha.nseq 			= rs.%Get("NumerodaLinha")
		set linha.numerodalinha = rs.%Get("NumerodaLinha")
		set linha.ciclo 		= rs.%Get("Ciclo")
		set linha.regime 		= rs.%Get("RegimeTerapeutico")
		set linha.medicamento 	= medicamento_""
		set linha.dose 			= dose
		set linha.numerico		= 1
		if linha.dose'=+linha.dose set linha.numerico		= 0
		set linha.doseOrigem 	= rs.%Get("DoseOrigem")
		set linha.codRecomTerap = rs.%Get("CodigodaRecomendacaoTerap")
		set linha.frequencia 	= frequencia
		set linha.duracao 		= duracao
		set linha.via 			= via
		set linha.unidade 		= unidade
		set linha.observacoes 	= rs.%Get("observacoes")
		set linha.codDose 		= codDose
		set linha.codMedicamento = codMedicamento
		set linha.codFrequencia = codFrequencia
		set linha.codUnidade 	= codUnidade
		set linha.codVia 		= codVia
		set linha.codDuracao 	= codDuracao
		set linha.continuo		= 0
		set linha.origem		= origem
		set linha.flagInterc 	= flagInterc
		set linha.flagSuspender = flagSuspender
		set linha.ocorrencia 	= ocorrencia
		set linha.tratComplementar = $Select(+rs.%Get("TratamentoComplementar")=0:"Não",1:"Sim")

		if codDuracao=0||(codDuracao="") {
			set linha.continuo	= 1
		}
		set linha.variavel		= 0
		if codDose=0 {
			set linha.variavel	= 1
		}

		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recMedicamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>descricao</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set select = "select top 1 Codigo,NomeAlpha from VARMedicamento where company = 0 and %upper($$SQLGetTextoSemAcento^VARSQL(NomeAlpha)) = %upper('"_$$SQLGetTextoSemAcento^VARSQL(descricao)_"') "
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",select)
	set codigo = descricao
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
	}
	quit codigo]]></Implementation>
</Method>

<Method name="addPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente="",cid="",tipo="",dataPEP="",dadosobj="",recTerapeutica="",pCodRegime="",pCiclo="",pCodPrescricao="",pTratComple=0,pManterAltDose=0</FormalSpec>
<Implementation><![CDATA[	set json = 0
	if paciente=""{
		set json = 1
		set paciente = $get(%request.Data("codPaciente",1))
		set cid = $get(%request.Data("codCID",1))
		set ficha = $get(%request.Data("ficha",1))
		set fichaSeq = $get(%request.Data("fichaSeq",1))
		set dataPEP = $get(%request.Data("dataPEP",1))
		set dados = $get(%request.Data("dados",1))
		set tipo = $get(%request.Data("tipo",1))
		Set pCodRegime = $get(%request.Data("pCodRegime",1))
		Set pCiclo = $get(%request.Data("pCiclo",1))
		Set pCodPrescricao = $get(%request.Data("pCodPrescricao",1))
		set dadosobj = [].%FromJSON(dados)
		Set pTratComple	= +$get(%request.Data("pTratComple",1))
		Set pManterAltDose = +$get(%request.Data("pManterAltDose",1))
	}
	;
	set opcao = tipo
	if opcao="" set opcao=" "
	if (pCodPrescricao = "") {
		If (pCodRegime = "" || (pCiclo = "")) {
			set codPrescricao = $order(^VARPEPPremiumPrescricaos(0,1,paciente,ficha,opcao,""),-1)
			if codPrescricao="" set codPrescricao = $order(^VARPEPPremiumPrescricao(0,""),-1)+1
		}else{
			set codPrescricao = $order(^VARPEPPremiumPrescricaos(0,2,paciente,pCodRegime,pCiclo,""),-1)
			if codPrescricao="" set codPrescricao = $order(^VARPEPPremiumPrescricao(0,""),-1)+1
		}
	}Else{
		set codPrescricao = pCodPrescricao
	}
	;
	set nseq = dadosobj.nseq
	;for {
		;set nseq = $order(^VARPEPPremiumPrescricao(0,codPrescricao,nseq)) quit:nseq=""
		;set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
		;if $$$VARPEPPremiumPrescricaoCodigodoMedicamento(obj)=dadosobj.medicamento quit
	;}
	if nseq="" set nseq = $order(^VARPEPPremiumPrescricao(0,codPrescricao,""),-1)+1
	;
	if dadosobj.continuo=1{
		set dadosobj.duracao = ""
	}
	if dadosobj.variavel=1{
		set dadosobj.dose = 0
	}
	
	set obj = $get(^VARPEPPremiumPrescricao(YM,codPrescricao,nseq,1))
	set $$$VARPEPPremiumPrescricaoCodigodoPaciente(obj) = paciente
	set $$$VARPEPPremiumPrescricaoCodigodoCID(obj) = cid
	set $$$VARPEPPremiumPrescricaoTipodaPrescricao(obj) = tipo
	set $$$VARPEPPremiumPrescricaoNumerodaConsulta(obj) = ficha
	set $$$VARPEPPremiumPrescricaoCiclo(obj) = pCiclo
	set $$$VARPEPPremiumPrescricaoRegimeTerapeutico(obj) = pCodRegime
	if $data(^VARMedicamento(0,dadosobj.medicamento,1)){
		set medicamento = dadosobj.medicamento
	}else{
		set medicamento = ..recMedicamento(dadosobj.medicamento)
	}
	set $$$VARPEPPremiumPrescricaoCodigodoMedicamento(obj) = medicamento
	set $$$VARPEPPremiumPrescricaoDose(obj) = dadosobj.dose
	set:$$$VARPEPPremiumPrescricaoDoseOrigem(obj)="" $$$VARPEPPremiumPrescricaoDoseOrigem(obj) = dadosobj.dose
	
	S ^zzJULIOQ($now()) = cid_"|"_paciente _"|"_pCodRegime_"|"_pCiclo_"|"_medicamento_"|"_pManterAltDose
	
	If (pManterAltDose=1&&(+pCiclo>1)) {
		Set xCiclo = pCiclo - 1
		Set xDose  = 0
		&Sql(
			Select Dose Into :xDose From SQLUser.VARPEPPremiumPrescricao 
			Where Company = 0 And codigodoCID = :cid And CodigodoPaciente = :paciente 
			And RegimeTerapeutico = :pCodRegime And Ciclo = :xCiclo 
			And TipodaPrescricao = 'T' And CodigodaRecomendacaoTerap Is Not Null
			And Dose <> DoseOrigem And CodigodoMedicamento = :medicamento
		)
		S ^zzJULIOQ($now()) = xCiclo_"|"_xDose_"|"_$$$VARPEPPremiumPrescricaoDose(obj)
		If (+xDose>0&&(xDose'=$$$VARPEPPremiumPrescricaoDose(obj))) {
			Set $$$VARPEPPremiumPrescricaoDose(obj) = xDose	
		}
	}
	set $$$VARPEPPremiumPrescricaoUnidade(obj) = dadosobj.unidade
	set $$$VARPEPPremiumPrescricaoVia(obj) = dadosobj.via
	set $$$VARPEPPremiumPrescricaoFrequencia(obj) = dadosobj.frequencia
	set $$$VARPEPPremiumPrescricaoDuracao(obj) = dadosobj.duracao
	set $$$VARPEPPremiumPrescricaoObservacoes(obj) = dadosobj.observacoes
	set $$$VARPEPPremiumPrescricaoTratamentoComplementar(obj) = +pTratComple
	if 'json{
		set $$$VARPEPPremiumPrescricaoCodigodaRecomendacaoTerap(obj) = recTerapeutica
	}
	set ret = $$$Save("VARPEPPremiumPrescricao",codPrescricao_","_nseq,obj,1)
	;
	
	set obj = $get(^VARPEPPremiumPrescricaoTratamento(YM,codPrescricao,1))
	set tratamento = $replace(dadosobj.tratamento,"<<<br>>>",$c(10))
	set tratamento = $replace(tratamento,"<br>",$c(10))
	set $$$VARPEPPremiumPrescricaoTratamentoTratamento(obj) = tratamento
	set data = dadosobj.data
	set data = $replace(data,"/","-")
	set data = $zdh(data,3,,,,,,,"")
	set $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj) = data
	If (dadosobj.tipoRegime '= 9) {
		set precaucoes = $replace(dadosobj.precaucoes,"<<<br>>>",$c(10))
		set precaucoes = $replace(precaucoes,"<br>",$c(10))
		set $$$VARPEPPremiumPrescricaoTratamentoPrecaucoes(obj) = precaucoes
		set princToxicidade = $replace(dadosobj.princToxicidade,"<<<br>>>",$c(10))
		set princToxicidade = $replace(princToxicidade,"<br>",$c(10))
		set $$$VARPEPPremiumPrescricaoTratamentoPrincipiasToxicidade(obj) = princToxicidade
		set estudo = $replace(dadosobj.estudo,"<<<br>>>",$c(10))
		set estudo = $replace(estudo,"<br>",$c(10))
		set $$$VARPEPPremiumPrescricaoTratamentoEstudo(obj) = estudo
	}	
	set ret = $$$Save("VARPEPPremiumPrescricaoTratamento",codPrescricao,obj,1)
	;
	set retorno = {}
	set retorno.codPrescricao = codPrescricao
	set retorno.tratamento = dadosobj.tratamento
	if json=0 quit retorno
	if tipo="T" do ..atualizaDosePrescrita(paciente, cid, ficha, recTerapeutica, dadosobj, YBED)
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente="",cid="",dataPEP="",dadosobj="",recTerapeutica=""</FormalSpec>
<Implementation><![CDATA[	set json = 0
	if paciente=""{
		set json = 1
		set paciente = $get(%request.Data("codPaciente",1))
		set cid = $get(%request.Data("codCID",1))
		set ficha = $get(%request.Data("ficha",1))
		set fichaSeq = $get(%request.Data("fichaSeq",1))
		set dataPEP = $get(%request.Data("dataPEP",1))
		set dados = $get(%request.Data("dados",1))
		set dadosobj = [].%FromJSON(dados)
	}
	set codPrescricao = dadosobj.codPrescricao
	if codPrescricao'="" {
		;
		set obj = $get(^VARPEPPremiumPrescricaoTratamento(YM,codPrescricao,1))
		set $$$VARPEPPremiumPrescricaoTratamentoTratamento(obj) = dadosobj.tratamento
		set data = dadosobj.data
		set data = $replace(data,"/","-")
		set data = $zdh(data,3,,,,,,,"")
		set $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj) = data
		set ret = $$$Save("VARPEPPremiumPrescricaoTratamento",codPrescricao,obj,1)
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="deletaPrescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave = $get(%request.Data("chave",1))
	if (chave'=""){ 
		set ret = $$$Kill("VARPEPPremiumPrescricao",chave)
		set ret = $$$Kill("VARPEPPremPrescIntercorrencia",chave)
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="listaPerfilExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set YBED = $Get(%request.Data("YBED",1))
	set query = "select * from VARExamesPerfil where company=0 and TipodosExames='"_tipo_"' and UsuariocomAcessoaoPerfil='"_YBED_"' "
	if codigo'="" {
		set query = query_" and CodigodoPerfil = '"_codigo_"'"
	}elseif searchValue'=""{
		set query = query_" and (%upper(CodigodoPerfil) like %upper('%"_searchValue_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(Descricao)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	}
	set query = "select * from ("_query_")"
	if skip'="" set query=query_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.Codigo = rs.%Get("CodigodoPerfil")
		set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",linha.Codigo)
		set exames = ""
		while(rsLinha.%Next()){
			set exame = rsLinha.%Get("CodigodoExame")
			set exame = $piece($get(^VARWorkFlowAuxiliar(0,"Exames",exame,1)),"~",1)
			;set exame = $piece($get(^INART(0,exame,1)),"~",1)
			set:exames'="" exames=exames_", "
			set exames = exames_exame
		}
		set linha.Descricao = "("_rs.%Get("CodigodoPerfil")_") "_rs.%Get("Descricao")
		set linha.DescricaoComposta = rs.%Get("Descricao")_" ("_exames_")"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getPerfilExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set obj = ""
	if codigo'="" {
		set obj = $get(^VARExamesPerfil(0,codigo,1))
	}
	set retorno = {}
	set retorno.descricao = $piece(obj,"~",1)
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",codigo)
	set exames = []
	set codExame = ""
	while(rsLinha.%Next()){
		set codExame = rsLinha.%Get("CodigodoExame")
		do exames.%Push(codExame)
	}
	set retorno.exames = exames
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>codExame,tipo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set SQL  = "Select top 1 ItemNumber CodigodoPerfil, SearchName Descricao From SQLUser.INART Where Company = 0 "
	if tipo=1{	;Exames Laboratório:
		Set SQL  = SQL _ "And %Upper(ItemType) in (6, 4, 5) "
	}
	if tipo=2{  ;Outros Exames
		Set SQL  = SQL _ "And %Upper(ItemType) = 7 "
	}
	Set SQL  = SQL _ "And %UPPER(HoldReason) in (0, 2) "
	set SQL = SQL_" And %upper($$SQLGetTextoSemAcento^VARSQL(SearchName)) = %upper('"_$$SQLGetTextoSemAcento^VARSQL(codExame)_"')"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set codExame = rs.%Get("CodigodoPerfil")
	}	
	quit codExame]]></Implementation>
</Method>

<Method name="salvaExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set edit = $get(%request.Data("edit",1))
	set codPaciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set codExame = $get(%request.Data("codExame",1))
	set dataOld = $get(%request.Data("dataOld",1))
	set dataNew = $get(%request.Data("dataNew",1))
	if codExame'=""{
		if '$data(^INART(0,codExame,1)){
			set codExame = ..recExame(codExame,tipo)
		}
		set sequencia = $order(^VARPEPPremiumExames(0,codPaciente,ficha,""),-1)+1
		set obj = $get(^VARPEPPremiumExames(0,codPaciente,ficha,sequencia,1))
		set $$$VARPEPPremiumExamesObservacoes(obj) = ""
		set $$$VARPEPPremiumExamesTipodoExame(obj) = tipo
		set $$$VARPEPPremiumExamesCodigodoExame(obj) = codExame
		if $data(^VARPEPPremiumExamess(0,1,$zconvert(tipo,"U"),$REPLACE($$RemoveMark^COMViewSQL($zconvert(codExame,"U"))," ",""),codPaciente,ficha)) {
			write 0
		}else{
			set ret = $$$Save("VARPEPPremiumExames",codPaciente_","_ficha_","_sequencia,obj,1)			
			write ret
		}
	}else{
		if dataNew'=""{
			set objExamesNew = [].%FromJSON(dataNew)
			set sequencia = objExamesNew.Sequencia
			set:sequencia="" sequencia = $order(^VARPEPPremiumExames(0,codPaciente,ficha,""),-1)+1
			set obj = $get(^VARPEPPremiumExames(0,codPaciente,ficha,sequencia,1))
			set $$$VARPEPPremiumExamesObservacoes(obj) = objExamesNew.Observacoes
			set $$$VARPEPPremiumExamesTipodoExame(obj) = tipo
			set $$$VARPEPPremiumExamesCodigodoExame(obj) = objExamesNew.CodExame
			set ret = $$$Save("VARPEPPremiumExames",codPaciente_","_ficha_","_sequencia,obj,1)			
			write ret
		}
	}	
	quit]]></Implementation>
</Method>

<Method name="deletaExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set sequencia = $get(%request.Data("sequencia",1))
	set codPaciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set ret = $$$Kill("VARPEPPremiumExames",codPaciente_","_ficha_","_sequencia)
	write 1			
	quit]]></Implementation>
</Method>

<Method name="deletaExameAll">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codPaciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set sequencia=""
	for {
		set sequencia = $order(^VARPEPPremiumExames(0,codPaciente,ficha,sequencia)) quit:sequencia=""
		set obj = $get(^VARPEPPremiumExames(0,codPaciente,ficha,sequencia,1))
		set tipoExam		= $$$VARPEPPremiumExamesTipodoExame(obj)
		if tipoExam'=tipo continue
		set ret = $$$Kill("VARPEPPremiumExames",codPaciente_","_ficha_","_sequencia)	
	}
	write 1			
	quit]]></Implementation>
</Method>

<Method name="recCombo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo 		= $get(%request.Data("tipo",1))
	set codPaciente = $get(%request.Data("paciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set texto = "MAPPACOMBO"_$select(tipo=1.1:"LABDIAG",tipo=1.2:"LAB",1:"IMG")_cid
	set retorno = ""
	set sequencia=""
	for {
		set sequencia = $order(^VARPARA(0,texto,"PT",sequencia)) quit:sequencia=""
		set exame = $piece(^VARPARA(0,texto,"PT",sequencia,1),"~",1)
		
		set retorno = retorno_"<tr><td align=left>"_$$getDescExame^VARSQL(exame)_"</td></tr>"
	}
	set saida = {}
	if (cid = "C91.1") {
		set saida.html = "<table class='tbToolTipEsta'><tr><th>Exames incluídos no combo LLC "_$select(tipo=1.1:"Diagnóstico Lab",tipo=1.2:"Seguimento Lab",1:"Imagem")_":</th></tr>"_retorno_"</table>"
	}Else{
		set saida.html = "<table class='tbToolTipEsta'><tr><th>Exames incluídos no combo "_$select(tipo=1.1:"Diagnóstico",tipo=1.2:"Avaliacao de Resposta",1:"Imagem")_":</th></tr>"_retorno_"</table>"
	}
	write saida.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="addCombo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo 		= $get(%request.Data("tipo",1))
	set codPaciente = $get(%request.Data("paciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set texto = "MAPPACOMBO"_$select(tipo=1.1:"LABDIAG",tipo=1.2:"LAB",1:"IMG")_cid
	if (cid="C90.0") {
		set texto = "MAPPACOMBO"_$Select(
			tipo=1.1:"DIAGSANGUE",	
			tipo=1.2:"DIAGURINA",	
			tipo=1.3:"DIAGMEDOSSEA",	
			tipo=1.4:"DIAGEXAIMG",	
			tipo=2.1:"AVALSANGUE",	
			tipo=2.2:"AVALURINA",	
			tipo=2.3:"AVALMEDOSSEA",	
			tipo=2.4:"AVALEXAIMG",	
			tipo=3.1:"SEGDISSANGUE",	
			tipo=3.2:"SEGDISURINA",
			1:"")_cid
		if ($piece(tipo,".",2)=4) set tipo = 2
		else  set tipo = 1 
	}else{
		set tipo = $piece(tipo,".",1)
	}
	set sequencia=""
	for {
		set sequencia = $order(^VARPARA(0,texto,"PT",sequencia)) quit:sequencia=""
		set exame = $piece(^VARPARA(0,texto,"PT",sequencia,1),"~",1)
		;
		set obj = ""
		set $$$VARPEPPremiumExamesTipodoExame(obj) = tipo
		set $$$VARPEPPremiumExamesCodigodoExame(obj) = exame
		if $data(^VARPEPPremiumExamess(0,1,$zconvert(tipo,"U"),$REPLACE($$RemoveMark^COMViewSQL($zconvert(exame,"U"))," ",""),codPaciente,ficha)) continue
		set nseq = $order(^VARPEPPremiumExames(0,codPaciente,ficha,""),-1)+1
		set ret = $$$Save("VARPEPPremiumExames",codPaciente_","_ficha_","_nseq,obj,$$$YES)	
	}
	write 1			
	quit]]></Implementation>
</Method>

<Method name="recExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set tipoFiltro = $get(%request.Data("tipo",1))
	set retorno = []
	if ficha'=""{
		set sequ=""
		for {
			set sequ = $order(^VARPEPPremiumExames(0,codPaciente,ficha,sequ)) quit:sequ=""
			set obj = $get(^VARPEPPremiumExames(0,codPaciente,ficha,sequ,1))
			set perfil 		= $$$VARPEPPremiumExamesNumerodoProtocolodoExame(obj)
			set observacoes = $$$VARPEPPremiumExamesObservacoes(obj)
			set tipo 		= $$$VARPEPPremiumExamesTipodoExame(obj)
			set code 		= $$$VARPEPPremiumExamesCodigodoExame(obj)
			if tipo=""{
				if (perfil'="") {
					Set tipo = 1			
				}else{
					Set tipo = $piece($get(^INART(0,code,1)),"~",26)
					If (tipo = "4" || (tipo = "5") || (tipo = "6")) Set tipo = 1
					If (tipo = "7") Set tipo = 2
				} 
				set $$$VARPEPPremiumExamesTipodoExame(obj) = tipo
				set ^VARPEPPremiumExames(0,codPaciente,ficha,sequ,1) = obj
			}
			if tipo="" continue
			if tipoFiltro'=tipo continue
			set desc = code
			if $data(^INART(0,code,1)){
				set desc = $piece($get(^INART(0,code,1)),"~",1)
			}
			set linha = {}
			set linha.Sequencia		= sequ
			set linha.CodExame 		= code
			set linha.Descricao		= desc
			set linha.Observacoes 	= observacoes
			do retorno.%Push(linha)

		}
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="addExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set tipo = $get(%request.Data("tipo",1))
	set codPaciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",codigo)
	while(rsLinha.%Next()){
		set exame = rsLinha.%Get("CodigodoExame")
		set sequencia = $order(^VARPEPPremiumExames(0,codPaciente,ficha,""),-1)
		set objTmp = $get(^VARPEPPremiumExames(0,codPaciente,ficha,sequencia,1))
		set $$$VARPEPPremiumExamesNumerodoProtocolodoExame(objTmp) = codigo
		set $$$VARPEPPremiumExamesCodigodoExame(objTmp) = exame
		set ret = $$$Save("VARPEPPremiumExames",codPaciente_","_ficha_","_sequencia,objTmp,$$$YES)					
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="salvaProtocolo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set dados = $get(%request.Data("dados",1))
	set YBED = $get(%request.Data("YBED",1))
	try{
		set dados = [].%FromJSON(dados)
		if dados.exames.%Size()<1{
			set status = "Selecione ao menos um Exame"
			quit
		}
		set codigo = dados.codigo
		set $piece(obj,"~",1) = dados.descricao
		set $piece(obj,"~",2) = tipo
		set $piece(obj,"~",3) = YBED
		if codigo=""{
			set codigo = $$GetNextNumber^COMUtils("VARExamesPerfil","")
		}
		set status = $$$Save("VARExamesPerfil",codigo,obj,1)
		if '$$$ISERR(status){
			kill listExames
			for {
				set exame = dados.exames.%Pop()
				quit:exame=""
				set listExames(exame)=""
				set status = $$$Save("VARExamesPerfilLinha",codigo_","_exame,"",1)
				if $$$ISERR(status) quit
			}
			if '$$$ISERR(status){
				set exame=""
				for {
					set exame = $order(^VARExamesPerfilLinha(0,codigo,exame)) quit:exame=""
					if $data(listExames(exame)) continue
					set status = $$$Kill("VARExamesPerfilLinha",codigo_","_exame)
					if $$$ISERR(status) quit
				}
			}
		}
	}
	catch(exception){
		set status = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(status){
		set retorno.status = 0
		set retorno.mensagem = status
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Protocolo salvo com sucesso!"
		set retorno.codigo = codigo
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="excluirProtocolo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	try{
		set status = $$$Kill("VARExamesPerfil",codigo)
		if '$$$ISERR(status){
			set exame=""
			for {
				set exame = $order(^VARExamesPerfilLinha(0,codigo,exame)) quit:exame=""
				set status = $$$Kill("VARExamesPerfilLinha",codigo_","_exame)
				if $$$ISERR(status) quit
			}
		}
	}
	catch(exception){
		set status = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(status){
		set retorno.status = 0
		set retorno.mensagem = status
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Protocolo removido com sucesso!"
		set retorno.codigo = codigo
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="encerrarConsulta">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente	= $get(%request.Data("codPaciente",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set objConsulta	= $get(^VARPEPPremiumConsulta(YM,paciente,ficha,1))
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)'=""{
		set retorno.status 		= 0
		set retorno.mensagem 	= "Consulta não está aberta"
		set retorno.tipo 		= "warning"
		write retorno.%ToJSON()		
		quit
	}
	if objConsulta=""{
		set $$$VARPEPPremiumConsultaCIDdoPaciente(objConsulta) = cid
		set $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objConsulta) = $horolog
		set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloIni(objConsulta) = YBED
	}
	set $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta) = $horolog
	set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloFim(objConsulta) = YBED
	set strStatus = $$$Save("VARPEPPremiumConsulta",paciente_","_ficha,objConsulta,$$$YES)
	set retorno = {}
	if $$$ISOK(strStatus){
		set retorno.status 		= 1
		set retorno.mensagem 	= "Consulta Encerrada com Sucesso!"
		set retorno.tipo 		= "success"
	}else{
		set retorno.status 		= 0
		set retorno.mensagem 	= strStatus
		set retorno.tipo 		= "error"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recEstadiamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	;
	if paciente="" w 1 quit
	set obj = {}
	set obj = ..recuperaEstadiamento(paciente,ficha,dataPEP,cid)

	Set strDiagnostico = ##Class(VAR.CSP.MAPPA1).recuperaUltimoDiagnostico(paciente,cid,ficha)
	set obj.diagnosticoDtHr = ""
	If ($Piece(strDiagnostico,Y,1)'="") {
		Set dtDiagnostico= +$Piece(strDiagnostico,Y,1)
		Set hrDiagnostico = $Piece($Piece(strDiagnostico,Y,1),",",2)
		Set obj.diagnosticoDtHr = "<font style='font-size:10px;text-decoration:none;'>(Em "_$ZDate(dtDiagnostico,4,,2)_" - "_$ZTime(hrDiagnostico,2)_")"
	}
	set obj.diagnostico = "<table style='width:200px;'>"_$Piece(strDiagnostico,Y,2)_"</table>"
		
	Set strRiscoTrombose = ##Class(VAR.CSP.MAPPA1).recuperaUltimoRiscoTrombose(paciente,cid,ficha)
	set obj.riscoTromboseDtHr = ""
	If ($Piece(strRiscoTrombose,Y,1)'="") {
		Set dtCalRiscoTrombose = +$Piece(strRiscoTrombose,Y,1)
		Set hrCalRiscoTrombose = $Piece($Piece(strRiscoTrombose,Y,1),",",2)
		Set obj.riscoTromboseDtHr = "<font style='font-size:10px;text-decoration:none;'>(Em "_$ZDate(dtCalRiscoTrombose,4,,2)_" - "_$ZTime(hrCalRiscoTrombose,2)_")"
	}
	set obj.riscoTrombose = "<table id='tbRiscoTrombose' style='width:200px;'>"_$Piece(strRiscoTrombose,Y,2)_"</table>"
	
	set obj.resumo 		= ..getResumoPaciente(paciente,cid,ficha)
	write obj.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaEstadiamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,ficha,dataPEP,cid</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	kill ^mtemp.valoresEstadiamentoSalvos($job)
	kill ^mtemp.valoresSalvosPEP($job)
	
	;k ^mtemp.estadiamentoAtual
	
	set session = $Select($Data(%session):%session.SessionId,1:$job)
	set form = [],dados={}
	;
	set contF = ..recUltimoEstadiamento(paciente,cid,ficha)
	if contF'="" {
		set dataE = $zdate($piece(^VARPEPPremiumEstadiamento(YM,paciente,contF,1),"~",1),4,,2)
		set horaE = $ztime($piece(^VARPEPPremiumEstadiamento(YM,paciente,contF,1),"~",2),2)
	}	
	;
	set estpossivel=0
	if cid'=""{
		set codEst = ""
		for {
			set codEst = $order(^VARWorkFlowEstadiamento(YM,cid,codEst)) quit:codEst=""
			set obj = $get(^VARWorkFlowEstadiamento(YM,cid,codEst,1))
			set nome = $$$VARWorkFlowEstadiamentoDescricao(obj)
			;
			if contF'=""{
				if '$data(^mtemp.estadiamentoAtual(session,paciente,cid,ficha,codEst)){
					set objEstagio = ..calcEstadiamento(paciente,cid,ficha,1,codEst,dataPEP,1,0)
					set codEstagio = objEstagio.selEstagio
					set toolEstagio = objEstagio.estadiamentoTexto
					set toolPendentes = objEstagio.estadiamentoPendente
					set qtdPendentes = objEstagio.pendentes
					set ^mtemp.estadiamentoAtual(session,paciente,cid,ficha,codEst) = codEstagio_"~"_toolEstagio_"~"_toolPendentes_"~"_qtdPendentes
				}else{
					set obj = $get(^mtemp.estadiamentoAtual(session,paciente,cid,ficha,codEst)) 
					set codEstagio	 = $piece(obj,"~",1)
					set toolEstagio	 = $piece(obj,"~",2)
					set toolPendentes = $piece(obj,"~",3)
					set qtdPendentes  = $piece(obj,"~",4)
				}
			}
			;
			set grupoRisco="Estadiam. Pendente"
			if $Get(toolEstagio)="<ul></ul>" set grupoRisco="Estadiamento Não Calculável"
			set descEst = "Informações pendentes de preenchimento"
			
			
			if contF=""{
				if $get(codEstagio)="" set (toolEstagio,descEst,grupoRisco)="Não realizado"
			}
			if '(contF'=""){
				if $get(codEstagio)'=""{
					set estpossivel=1
					set codEstagio=""
					set (descEst,grupoRisco)="Estadiam. Possível"
					set toolEstagio=toolPendentes
				}
			}
			;W !,codEst,"|",codEstagio,"|",qtdPendentes
			if $get(codEstagio)'=""{
				set objEstadiamento = $get(^VARWorkFlowEstadiamento(0,cid,codEst,1))
				set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEstadiamento)
				set objEstagio = $get(^VARWorkFlowEstadiamentoEstagio(0,cid,codEst,codEstagio,1))
				set descEst = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
				set grupoRisco = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
				set observacoes = $$$VARWorkFlowEstadiamentoEstagioObservacoes(objEstagio)
				set descEst = descEstadiamento_" "_descEst_" - "_grupoRisco
				set descEst = descEst_" (Estadiado em "_dataE_" - "_horaE_")"
				if observacoes'="" set descEst = descEst_"<br><i>"_$replace(observacoes,$c(10),"<br>")_"</i><br><br>"
			}
			if $get(codEstagio)=""{
				set toolEstagio = $Get(toolPendentes)
			}
			set estlo = "corNaoEstadiado"
			if $get(codEstagio)'="" set estilo = "corEstadiado"
			;
			if ($Get(qtdPendentes))>0&&(codEst=3){
				if ((codEstagio=3)||(codEstagio=4)){
					set estilo = "corEstadiadoAlerta"
					set grupoRisco = "<font id='AlertaAst_"_codEst_"' class="_estilo_">*</font> "_grupoRisco
					;
					set toolEstagio = toolEstagio_"<br><font>Estadiamento incompleto – informação pendente:</font>"
					set toolEstagio	= toolEstagio_toolPendentes
				}
			}
			if $get(codEstagio)'="" set toolPendentes=""

			;
			; Recupera informações pendentes para reestadiamento
			; 
			;if ($Get(codEstagio) = "") {
				set semEstad = 0
				if descEst = "Informações pendentes de preenchimento"{
					set semEstad = 1
					set toolEstagio=""
				}
				;if grupoRisco'="Estadiam. Pendente"{
					set objEstagioReest = ..calcEstadiamento(paciente,cid,ficha,1,codEst,dataPEP,2,0)
					set codEstagioReest = objEstagioReest.selEstagio
					set toolEstagioReest = objEstagioReest.estadiamentoTexto
					set toolPendentes = objEstagioReest.estadiamentoPendente
					;;
					set grupoRiscoReest="Estadiam. Pendente"
					if toolEstagioReest="<ul></ul>" set grupoRiscoReest="Estadiamento Não Calculável"
					set descEstReest = "Informações pendentes de preenchimento"
					;
					set estpossivelRees=0
					set estpossivel(codEst)=0
					if codEstagioReest'=""{
						set estpossivelRees=1
						set estpossivel(codEst)=1
					}			
					if codEstagioReest'=""{
						set objEstadiamentoReest= $get(^VARWorkFlowEstadiamento(0,cid,codEst,1))
						set descEstadiamentoReest = $$$VARWorkFlowEstadiamentoDescricao(objEstadiamentoReest)
						set objEstagioReest = $get(^VARWorkFlowEstadiamentoEstagio(0,cid,codEst,codEstagioReest,1))
						set descEstReest = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagioReest)
						set grupoRiscoReest = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagioReest)
						set descEstReest = descEstadiamentoReest_" "_descEstReest_" - "_grupoRiscoReest
					}
					if toolEstagioReest="" set toolEstagioReest = toolPendentes
					if toolEstagioReest'=""{
						set sigla="re"
						if (descEst="Não realizado")||(descEst="Estadiam. Possível"||(semEstad)){
							set descEst = "Estadiamento não realizado<br><br>"
							set toolEstagio = "",sigla=""
						}
						if estpossivelRees{
							if codEstagioReest=$G(codestagio),$piece(toolEstagio,"<br><font>Estadiamento incompleto",1)=toolEstagioReest{
								set estpossivel(codEst)=2
							}elseif codEstagioReest=$G(codEstagio){
								if sigla'="" set toolEstagio = toolEstagio ;_"<hr>"
								;set toolEstagio = toolEstagio_"<b>Após "_sigla_"estadiamento:<br><br>SEM ALTERAÇÃO DE ESTADIAMENTO"
								;set toolEstagio = toolEstagio_toolEstagioReest
							}else{
								set estilo = "corPreEstadiado"
								if sigla'="" set toolEstagio = toolEstagio_"<hr>"
								set toolEstagio = toolEstagio_"<b>Após "_sigla_"estadiamento:<br>"_
								$Select(sigla="re":
									"<span class="_$Char(34)_"font-size:7px;"_$Char(34)_">(para assumir o estadiamento clique no botão)</span><br>",
									1:""
								)_"<br>"_descEstReest
								set toolEstagio = toolEstagio_toolEstagioReest
								;
							}
						}else{
							set estilo = "corNaoEstadiado"
							if sigla'="" set toolEstagio = toolEstagio_"<hr>"
							set toolEstagio = toolEstagio_"<b>Informações pendentes para "_sigla_"estadiamento:<br><br>"
							set toolEstagio = toolEstagio_toolEstagioReest
						}
					}
				;}else{
				;	set estilo = "corNaoEstadiado"
				;}
				;
			;}
			if contF=""{
				;set grupoRisco = grupoRiscoReest
			}
			set linha = {}
			set linha.dataField=codEst
			set linha.colSpan=9
			set linha.cssClass = "camposEstadiamento"
			set label={}
			set label.text  = nome
			set linha.label = label
			set linha.template = "<div id='descEstadiamento' class='camposEstadiamento'>"_grupoRisco_"</div>"
			do form.%Push(linha)	
			;
			set linha={}
			set linha.cssClass = "camposEstadiamento"
			set linha.template = "<div id='divEstadiamentoInfo' class='estadiamentoInfo' onClick='consReferencia("_codEst_");' style='cursor:"_$Select(cid="C90.0":"pointer",1:"")_";'><div id='esta_"_codEst_"' meuId='"_codEst_"' class='estadiamentoInfoI "_estilo_$Select(($Extract(grupoRisco,1,9)'="Estadiam."&&(grupoRisco'="Não realizado")):" corEstadiado",1:"")_$Select(grupoRisco="Não realizado":" corNaoEstadiado",1:"")_" fa fa-info-circle' texto='"_$Piece(toolEstagio,"<hr>",1)_"' nomeEst='"_descEst_"' "_$select($g(codEstagio)="":"style='color:gray'",1:"")_"></div></div>"
			do form.%Push(linha)	
			;
		}
	}
	;
	set retorno = {}
	set retorno.form = form
	set retorno.dados = dados
	set retorno.horaEst = "Estadiamento"
	set contF = ..recUltimoEstadiamento(paciente,cid,ficha)
	if contF'="" {
		set dataE = $zdate($piece(^VARPEPPremiumEstadiamento(YM,paciente,contF,1),"~",1),4,,2)
		set horaE = $ztime($piece(^VARPEPPremiumEstadiamento(YM,paciente,contF,1),"~",2),2)
		set retorno.horaEst = "Estadiamento <font style='font-size:10px;text-decoration:none;'>(Em "_dataE_" - "_horaE_")</font>"
	}
	set esta = "estadiamento"
	set ultEst = ..recUltimoEstadiamento(paciente,cid,ficha)
	if ultEst'="" {
		set esta = "reentadiamento"	
	}
	set tool=""
	if estpossivel{
		;kill vetor
	}
	kill ^mtemp.valoresSalvosPEP($job)
	set retorno.toolEstagio = tool	
	;
	set possivel = 2
	set possivelSeq = ""
	for {
		set possivelSeq = $order(estpossivel(possivelSeq)) quit:possivelSeq=""
		set possivel = $get(estpossivel(possivelSeq))
		quit:possivel=1
	}
	;
	set retorno.estadiamentoPossivel = possivel
	quit retorno]]></Implementation>
</Method>

<Method name="calcEstadiamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao,soEstadiamento=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	if paciente="" quit ""
	;W !,"1: P:",paciente_"|C:"_cid_"|F:"_ficha_"|FS:"_fichaSeq_"|CE:"_codEst_"|DP:"_dataPEP_"|OP:"_opcao_"|SE:"_soEstadiamento_"|-"_$data(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao)),!
	if $data(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao)){
		set retorno = {}
		set retorno.selEstagio = $piece(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao),"~",1)
		set retorno.estadiamentoTexto = $piece(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao),"~",2)
		set retorno.estadiamentoPendente = $piece(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao),"~",3)
		set retorno.estadiamentoVetor = $piece(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao),"~",4)
		set retorno.camposNaoPreenchidos = $piece(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao),"~",5)
		set retorno.pendentes = $piece(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao),"~",6)
		set retorno.estadiamentoTextoSequencias = $piece(^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao),"~",7)
		;
		quit retorno
	}
	
	set resultado=0
	set selEstagio = "",selCondicao = "",selCamposNaoPreenchidos=""

	
	set codEstagio = ""
	for {
		set codEstagio = $order(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst,codEstagio)) quit:codEstagio=""
		if cid="C90.0",codEst=2{

			if ((codEstagio=4)) Continue

			;set objEstagioReest = ..calcEstadiamento(paciente,cid,ficha,1,1,dataPEP,2,0)
			;if objEstagioReest.selEstagio="" continue
			set hist=0
			if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
			if codEstagio=1{
				set objEstagioReest = ..calcEstadiamento(paciente,cid,ficha,1,1,dataPEP,2,0)
				if objEstagioReest.selEstagio'=1 continue
				if (hist=0) {
					If ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC")) {
						   Continue
					}
				}else{
					set xUltSeq = ..recUltimoEstadiamento(paciente,cid,ficha)
					set dataPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",1)
					set horaPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",2)+1
					Set dtHrDiagHist = $Order(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dataPEPF_","_horaPEPF))
					If (dtHrDiagHist="") {
						If ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					}else{
						If ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					} 
				}

				set campo = 38534
				set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set valorC=""
				if valorC'=0 continue				

				;17p-
				set campo = 142, valid = 0
				set valid = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set valid=0
				if valid'=1{
					set campo = 36690
					set valid = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
					if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set valid=0
				}
				if valid=1 quit

				;t(4;14)(p16.3;q32) FGFR3/IgH
				set campo = 149, valid = 0
				set valid = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set valid=0
				if valid'=1{
					set campo = 36699
					set valid = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
					if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set valid=0
				}
				if valid=1 quit

				;t(14;16)(q32;q23) IgH/MAF
				set campo = 158, valid = 0
				set valid = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set valid=0
				if valid'=1{
					set campo = 36708
					set valid = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
					if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set valid=0
				}
				if valid=1 quit
				
				set selEstagio = codEstagio
				set selCondicao = codEstagio
				quit
			}
			if codEstagio=2{
				set objEstagioReest = ..calcEstadiamento(paciente,cid,ficha,1,1,dataPEP,2,0)
				if objEstagioReest.selEstagio'=2 continue

				if (hist=0) {
					If ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC")) {
						   Continue
					}
				}else{
					set xUltSeq = ..recUltimoEstadiamento(paciente,cid,ficha)
					set dataPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",1)
					set horaPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",2)+1
					Set dtHrDiagHist = $Order(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dataPEPF_","_horaPEPF))
					If (dtHrDiagHist="") {
						If ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					}else{
						If ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					} 
				}
				
				set campo = 38534
				set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if valorC'=1 continue				

				set campo = 142
				set f17p1 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set f17p1=""
				if f17p1'=1{
					set campo = 36690
					set f17p1 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
					if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set f17p1=""
				}

				set campo = 149
				set f17p2 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set f17p2=""
				if f17p2'=1{
					set campo = 36699
					set f17p2 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
					if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set f17p2=""
				}

				set campo = 158
				set f17p3 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
				if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set f17p3=""
				if f17p3'=1{
					set campo = 36708
					set f17p3 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
					if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)<=0 set f17p3=""
				}
				set ok=0
				if (f17p1=1)||(f17p2=1)||(f17p3=1){
					set ok=1
				}
				if 'ok quit
				set selEstagio = codEstagio
				set selCondicao = codEstagio
				quit
			}
			if codEstagio= 3 {
				if (hist=0) {
					If ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC")) {
						   Continue
					}
				}else{
					set xUltSeq = ..recUltimoEstadiamento(paciente,cid,ficha)
					set dataPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",1)
					set horaPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",2)+1
					Set dtHrDiagHist = $Order(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dataPEPF_","_horaPEPF))
					If (dtHrDiagHist="") {
						If ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					}else{
						If ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					} 
				}
				set selEstagio = codEstagio
				set selCondicao = codEstagio
				quit
			}
		}
		set camposNaoPreenchidos = 0
		set estadiamentoTexto = ""
		set resultado=""
		Set flag = 0
		If (cid="C90.0"&&(codEst=1)) {
			set hist=0
			if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
			if (hist=0) {
				if ('$Data(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1))||
				   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
				   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
				   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC"))) {
						Set resultado=0 
						Set flag = 1
				}
			}else{
				set xUltSeq = ..recUltimoEstadiamento(paciente,cid,ficha)
				set dataPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",1)
				set horaPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,paciente,xUltSeq,1)),"~",2)+1
				Set dtHrDiagHist = $Order(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dataPEPF_","_horaPEPF))
				If (dtHrDiagHist="") {
					If ('$Data(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1))||
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'=""&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDB")&&
					   ($Piece($Get(^VARPEPPremiumDiagnostico(0, paciente, cid, 1, 1)),"~",5)'="RDC"))) {
							Set resultado=0 
							Set flag = 1
					}
				}else{
					If ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'=""&&
					   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDB")&&
					   ($Piece($Get(^VARPEPPremiumDiagnosticoHist(0, paciente, cid, dtHrDiagHist, 1, 1)),"~",5)'="RDC")) {
							Set resultado=0 
							Set flag = 1
					}
				} 
			}
		}	
		If (flag = 0) {
			set codCondicao = ""
			for {
				set codCondicao = $order(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao)) quit:codCondicao=""
				quit:resultado="1"
				set resultado=""
				set sequ = ""
				for {
					set sequ = $order(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
					set obj = $get(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
					set campos		= $$$VARWorkFlowEstEstagioCCampos(obj)
					set condicao	= $$$VARWorkFlowEstEstagioCCondicao(obj)
					set valorRef	= $$$VARWorkFlowEstEstagioCValor(obj)
					set legenda		= $$$VARWorkFlowEstEstagioCLegenda(obj)
					set tipo		= +$$$VARWorkFlowEstEstagioCTipo(obj)	
					set consideraNulo = 0
					if $extract(condicao,1)="*" set consideraNulo=1,condicao=$extract(condicao,2,$length(condicao))
					if tipo=1{
						set valorAcumulado = ""		
						set sai=0	
						for cont=1:1:$length(campos,"|"){
							set campo = $piece(campos,"|",cont)
							if campo="" continue
							if $data(^mtemp.valoresSalvosPEP($job,paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,+opcao)){
								set valor = ^mtemp.valoresSalvosPEP($job,paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,+opcao)
							}else{
								set retorno = ..recPontuadores(paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,opcao)
								set valor = $piece(retorno,"|",1)
								set camposNaoPreenchidos = $piece(retorno,"|",2)
								set ^mtemp.valoresSalvosPEP($job,paciente,cid,ficha,fichaSeq,codEst,+dataPEP,campo,+opcao) = valor
							}
							if valor="" set sai=1 quit
							set valorAcumulado = valorAcumulado+valor
						}
						if sai set resultado=0 quit
					}else{
						set valorAcumulado = ""
						for cont=1:1:$length(campos,"|"){
							set campo = $piece(campos,"|",cont)
							if campo="" continue
							set objWF = $get(^VARWorkFlowPEP(YM,cid,campo,1))
							if objWF="" continue
							set nome = $$$VARWorkFlowPEPNome(objWF)
							set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
							set hist = 0
							
							if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
							set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
							;if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
							set retPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)
							set flImagem = ..verificaCampoImagem(paciente,cid,dataPEP,campo,hist)
							if 'consideraNulo{
								if flImagem=0,retPais=0 continue
								if flImagem=0,valorC="" continue
							}
							set valorAcumulado = valorAcumulado + valorC
						}
					}
					;if codEst=3,codEstagio=5 w !?1,campos,?30,valorAcumulado

					if valorAcumulado="" set resultado=0 quit
					if condicao="="{
						set resultado = valorAcumulado=valorRef
					}
					if condicao="<"{
						set resultado = valorAcumulado<valorRef
					}
					if condicao=">"{
						set resultado = valorAcumulado>valorRef
					}
					if condicao="<>"{
						set resultado = valorAcumulado'=valorRef
					}
					if resultado=0 quit
					;
				}
				if resultado{
					set selEstagio = codEstagio
					set selCondicao = codCondicao
					set selCamposNaoPreenchidos = camposNaoPreenchidos
				}
			}
		}
	}
	/*if cid="C90.0",codEst=2,selEstagio=3{
		set objEstagioReest = ..calcEstadiamento(paciente,cid,ficha,1,1,dataPEP,2,0)
		if objEstagioReest.selEstagio="" set selEstagio=""
	}*/
	;
	
	
	if cid="C91.1",codEst=3{
		;Alteração aprovada pelo Dr. 13/10/2021
		;if ((selEstagio=1)||(selEstagio=2)){
			if ..recToolTipEstadiamentoPendente(paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao).ItensPendentes>0{
				set selEstagio=""
			}
		;}
	}			
	;
	set estadiamentoTexto = "",estadiamentoVetor=""
	if soEstadiamento=1{
		set retorno = {}
		set retorno.selEstagio = selEstagio
		quit retorno		
	}
	set estadiamentoTextoSequencias = ""
	;if (cid="C90.0"&&(codEst=1)&&(selEstagio'="")) {
	;	Set diagRDB = ..calcDiagnosticoRDB(paciente,cid,ficha)
	;	Set diagRDC = ..calcDiagnosticoRDC(paciente,cid,ficha)
	;	if diagRDB="",diagRDC="" {
	;		Set selEstagio=""
	;	}
	;}
	if cid="C90.0",codEst=2,selEstagio'=""{
		if selEstagio=1{
			set estadiamentoTexto = "<ul class=ttEstadiamento><li class=ttEstadiamento><span class=ttEstadiamentoExames>Mieloma Múltiplo</span></li><li class=ttEstadiamento><span class=ttEstadiamentoExames>ISS I</span></li><li class=ttEstadiamento><span class=ttEstadiamentoExames>LDH Normal</span></li><li class=ttEstadiamento><span class=ttEstadiamentoExames>Citogenética de risco padrão</span></li></ul>"
		}
		if selEstagio=2{
			set estadiamentoTexto = "<ul class=ttEstadiamento><li class=ttEstadiamento><span class=ttEstadiamentoExames>Mieloma Múltiplo</span></li><li class=ttEstadiamento><span class=ttEstadiamentoExames>ISS III</span></li><li class=ttEstadiamento><span class=ttEstadiamentoExames>LDH Aumentada</span></li><li class=ttEstadiamento><span class=ttEstadiamentoExames>Citogenética de alto risco</span></li></ul>"
		}
		if selEstagio=3{
			set estadiamentoTexto = "<ul class=ttEstadiamento><li class=ttEstadiamento><span class=ttEstadiamentoExames>Mieloma Múltiplo</span></li></ul>"
		}
		if selEstagio=4{
			set estadiamentoTexto = " - Diagnóstico diferente de Mieloma Múltiplo"
			;Confirmar com o Dr.
		}
		set estadiamentoTexto = estadia]]><![CDATA[mentoTexto
		set estadiamentoTextoSequencias = ""
		set estadiamentoPendente = "",pendentes=0
	}else{
		if selEstagio'=""{
			set estadiamentoTexto 			= ..recToolTipEstagio(paciente,cid,ficha,fichaSeq,codEst,dataPEP,selEstagio,selCondicao,opcao)
			set estadiamentoTextoSequencias = $piece(estadiamentoTexto,"~",2)
			set estadiamentoTexto 			= $piece(estadiamentoTexto,"~",1)
		}
		set estadiamentoPendente = "",pendentes=0
		if ((selEstagio="")||((cid="C91.1")&&(codEst=3))){
			if (cid="C90.0"&&(codEst=2)) {
				set estadiamentoRet = ##Class(VAR.CSP.MAPPA1).recToolPendenteRISS(paciente,cid,ficha,dataPEP)
				set estadiamentoPendente 	= estadiamentoRet.Texto
				set estadiamentoVetor 		= estadiamentoRet.Vetor
				set pendentes 				= estadiamentoRet.ItensPendentes
			}else{
				set estadiamentoRet = ..recToolTipEstadiamentoPendente(paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao)
				set estadiamentoPendente 	= estadiamentoRet.Texto
				set estadiamentoVetor 		= estadiamentoRet.Vetor
				set pendentes 				= estadiamentoRet.ItensPendentes
			}
		}
		
	}
	set retorno = {}
	set retorno.selEstagio = selEstagio
	set retorno.estadiamentoTexto = estadiamentoTexto
	set retorno.estadiamentoPendente = estadiamentoPendente
	set retorno.estadiamentoVetor = estadiamentoVetor
	set retorno.camposNaoPreenchidos = selCamposNaoPreenchidos
	set retorno.pendentes = pendentes
	set retorno.estadiamentoTextoSequencias = estadiamentoTextoSequencias
	;
	set ^mtemp.valoresEstadiamentoSalvos($job,codEst,opcao) = selEstagio_"~"_estadiamentoTexto_"~"_estadiamentoPendente_"~"_estadiamentoVetor_"~"_selCamposNaoPreenchidos_"~"_pendentes_"~"_estadiamentoTextoSequencias
	quit retorno
	;quit selEstagio_"|"_estadiamentoTexto_"|"_estadiamentoVetor]]></Implementation>
</Method>

<Method name="verificaCampoImagem">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,dataPEP,campo,hist</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set paix 			= campo
	set objPai 			= ""
	for {
		set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
		set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
		set tipoPai	= $$$VARWorkFlowPEPTipodeWorkflow(objPai)
		if tipoPai=7 quit
		if predecessorPai=""{
			set paix=""
			quit
		}
		set paix = predecessorPai
	}
	if paix="" quit 0
	set query = "Select Sequencia from VARWorkFlowPEP where company = 0 and %upper(Predecessor) = '"_predecessorPai_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set ret = 0
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set valorC = $piece(..recValorSalvo(paciente,cid,1,1,Sequencia,hist),"~",1)
		if valorC'="" set ret = 1 quit
	}
	quit ret]]></Implementation>
</Method>

<Method name="recPontuadores">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,campo,opcao=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set selPontuacao="",selCamposNaoPreenchidos=0
	set pontos = 0
	set sai = 0
	set hist = 0
	if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
	set camposNaoPreenchidos = 0
	set codCondicao = ""
	for {
		set codCondicao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,campo,codCondicao)) quit:codCondicao=""
		quit:sai
		set sequ = ""
		for {
			set sequ = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,campo,codCondicao,sequ)) quit:sequ=""
			quit:sai
			set obj = $get(^VARWorkFlowEstPontCondicao(YM,cid,codEst,campo,codCondicao,sequ,1))
			set campos		= $$$VARWorkFlowEstPontCondicaoCampos(obj)
			set condicao	= $$$VARWorkFlowEstPontCondicaoComparador(obj)
			set valorRef	= $$$VARWorkFlowEstPontCondicaoValor(obj)
			set tipo		= +$$$VARWorkFlowEstPontCondicaoTipo(obj)
			set legenda		= $$$VARWorkFlowEstPontCondicaoLegendadeExibicao(obj)
			set valorAcumulado = 0
			if tipo=0{
				set grava = 0
				for cont=1:1:$length(campos,"|"){
					set campox = $piece(campos,"|",cont)
					if campox="" {
						continue
					}
					set valorComparativo=""
					if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
					set retPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campox,1,hist)
					if retPais<1{
						set camposNaoPreenchidos = camposNaoPreenchidos + 1
						continue
						if retPais<0 set sai = 1,pontos=""
						quit
					}
					set grava = 1
					set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
					set desc    = $$$VARWorkFlowPEPNome(objWF)
					set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
					set opcoes	= $$$VARWorkFlowPEPOpcoes(objWF)
					set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
					set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
					set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)

					if composicaoValoresExames>5,composicaoValoresExames<10{
						if valorComparativo'="" {
							set valorComparativo = valorComparativo-1 
						}
					}
					set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,hist),"~",1)
					;w !,legenda,!,?10,valorComparativo,?20,+valorC
					if permitirSelecionarMaisQue=1,valorC="" set valorC=0
					;if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
					if valorC = "" {
						set camposNaoPreenchidos = camposNaoPreenchidos + 1
						continue
						set sai = 1,pontos="" quit
					}
					if valorC'="" set pontos = 0
					if valorComparativo'=""{
						if permitirSelecionarMaisQue=1 {
							set valorC = $piece(valorC,";",valorComparativo)
							set valorAcumulado = valorAcumulado + valorC
						}else{
							if valorComparativo=valorC set valorAcumulado = valorAcumulado + 1
							
						}
					}else{
						set valorAcumulado = valorAcumulado + valorC
					}
				}
				;if 'grava set sai = 1,pontos=""
			}
			if tipo=1{
				kill listEstadiamentos
				set pontos=""
				for cont=1:1:$length(campos,"|"){
					set campox = $piece(campos,"|",cont)
					if campox="" continue
					set estadiamento = $piece(campox,";",1)
					set estagio 	 = $piece(campox,";",2)
					if $data(listEstadiamentos(estadiamento)) {
						set selEstagio = listEstadiamentos(estadiamento)
					}else{
						set ret = ..calcEstadiamento(paciente, cid, ficha,fichaSeq,estadiamento,dataPEP,opcao,1)
						if estadiamento=1,ret.selEstagio=6 set ret.selEstagio=""
						set listEstadiamentos(estadiamento)=ret.selEstagio
						set selEstagio = ret.selEstagio
					}
					if selEstagio="" set camposNaoPreenchidos = camposNaoPreenchidos+1
					if selEstagio'="" set pontos = 0
					if selEstagio=estagio set valorAcumulado = valorAcumulado + 1
				}
			}
			if tipo=2{
				if campos=1 { ; Idade do Paciente
					set objPaciente = $get(^MEDPatient(YM,paciente,1))
					set dob = $$$MEDPatientDOB(objPaciente)
					if dob'=""{
						set nasc = $zdate(dob,8)
						set hoje = $zdate($horolog,8)
						set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
						if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
						set valorAcumulado = anos
					}
					
				}
			}
			;w !,legenda,!,?10,valorAcumulado,?20,valorRef
			quit:sai
			set pontos=0
			set resultado=""
			if condicao="="{
				set resultado = valorAcumulado=valorRef
			}
			if condicao="<"{
				set resultado = valorAcumulado<valorRef
			}
			if condicao=">"{
				set resultado = valorAcumulado>valorRef
			}
			if condicao="<>"{
				set resultado = valorAcumulado'=valorRef
			}
			if resultado=0 continue
			set selPontuacao = campo
			set selCamposNaoPreenchidos = camposNaoPreenchidos
			;
		}
	}
	if selPontuacao'="" set pontos = $piece($get(^VARWorkFlowEstPont(YM,cid,codEst,selPontuacao,1)),"~",2)
	quit pontos_"|"_selCamposNaoPreenchidos]]></Implementation>
</Method>

<Method name="verificaNivelPais">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,campo,respAcumulado=1,hist=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set objWF = $get(^VARWorkFlowPEP(YM,cid,campo,1))
	set predecessor    = $$$VARWorkFlowPEPPredecessor(objWF)
	set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(objWF)
	if predecessor="" quit respAcumulado
	;
	set objPre = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
	set tipoPre	= $$$VARWorkFlowPEPTipodeWorkflow(objPre)
	
	if tipoPre=1||(tipoPre=8)||(tipoPre=10)||(tipoPre=15)||(tipoPre=18){
		quit ..verificaNivelPais(paciente,cid,ficha,fichaSeq,predecessor,respAcumulado,hist)
	}
	set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,predecessor,hist),"~",1)
	if valorC="" quit ..verificaNivelPais(paciente,cid,ficha,predecessor,-1,hist)
	if tipoPre=7{
		if valorC'=1 quit 0
		quit ..verificaNivelPais(paciente,cid,ficha,fichaSeq,predecessor,respAcumulado,hist)
	}
	if valorC'=opcPredecessor quit 0
	quit ..verificaNivelPais(paciente,cid,ficha,fichaSeq,predecessor,respAcumulado,hist)]]></Implementation>
</Method>

<Method name="sequenciaExibicaoCompleta">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,sequencia</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objWF 	= $get(^VARWorkFlowPEP(0,cid,sequencia,1))
	set predecessor = $$$VARWorkFlowPEPPredecessor(objWF)
	set sequenciaTela = $$$VARWorkFlowPEPSequenciadeExibicao(objWF)
	set sequenciaTela = $extract("000000000",1,9-$length(sequenciaTela))_sequenciaTela
	if predecessor="" quit sequenciaTela
	quit ..sequenciaExibicaoCompleta(cid, predecessor)_","_sequenciaTela]]></Implementation>
</Method>

<Method name="recToolTipEstagio">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,codEstagio,codCondicao,opcao=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set hist = 0
	if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
	;
	set estadiamentoTexto = "<ul class=ttEstadiamento>"
	set sequ = ""
	for {
		set sequ = $order(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
		set obj = $get(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
		set campos		= $$$VARWorkFlowEstEstagioCCampos(obj)
		set condicao	= $$$VARWorkFlowEstEstagioCCondicao(obj)
		set valorRef	= $$$VARWorkFlowEstEstagioCValor(obj)
		set legenda		= $$$VARWorkFlowEstEstagioCLegenda(obj)
		set tipo		= $$$VARWorkFlowEstEstagioCTipo(obj)
		if tipo=1{
			set estadiamentoTexto = ..recToolTipPontuadores(paciente, cid,ficha,fichaSeq, codEst, dataPEP,opcao)
			quit
		}
		if legenda="" continue
		set valorAcumulado = ""
		set detalhe="",contador=0
		set sequenciaTela = 0
		for cont=1:1:$length(campos,"|"){
			set campo = $piece(campos,"|",cont)
			if campo="" continue
			;
			if '$data(^VARWorkFlowPEP(YM,cid,campo,1)) continue
			set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
			set desc    = $$$VARWorkFlowPEPNome(objWF)
			set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
			set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
			set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
			set sequenciaTela = ..sequenciaExibicaoCompleta(cid,campo)
			;
			set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
			;if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
			if tipo=2||(tipo=11) {
				if +valorC=0 continue
				// Busca por predecessores de imagnes
				set objWFTemp = objWF
				for {
					set predecessor    = $$$VARWorkFlowPEPPredecessor(objWFTemp)
					if predecessor'=""{
						set objWFTemp	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
						set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objWFTemp)
						if tipoPred=7 quit
						continue
					}
					quit
				}
				if predecessor="" {
					set contador = contador + 1
					continue
				}
				set contador = contador + 1
				set desc    = $$$VARWorkFlowPEPNome(objWFTemp)
				set codImagem = $piece(desc,";",1)
				set codArea = $piece(desc,";",2)
				set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				if ($piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",5)'="") {
					set desc 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",1)
				}
			}
			if tipo=5{
				set exames=""
				for i=1:1:$length(desc,";"){
					set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(desc,";",i),1))
					set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
					if unid="" set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
					if exames'="" set exames = exames_"/"
					set exames = exames_descExame
				}
				set desc = exames
			}
			if detalhe'="" {
				set detalhe=detalhe_", "
			}
			
			if tipo=2||(tipo=11) {
				set detalhe=detalhe_desc
				kill vetor
				for i=1:1:$length(detalhe,", "){
					set posi = $piece(detalhe,", ",i)
					set vetor(posi) = $get(vetor(posi)) + 1
				}
				set detalhe2 = ""
				set posi=""
				for {
					set posi = $order(vetor(posi)) quit:posi=""
					set num = vetor(posi)
					if detalhe2'="" set detalhe2=detalhe2_", "	
					if num=1 set detalhe2=detalhe2_posi
					e  set detalhe2=detalhe2_num_" em "_posi
				}
			}else{
				set detalhe=detalhe_desc_" do Paciente = "_$fnumber(valorC,".")_" "_unid
			}
			if (tipo=12)||(tipo=9) set detalhe=""
		}
		set legenda = $replace(legenda,"<cont>",contador)
		;
		if contador>0 {
			set legenda = $replace(legenda,"<possui>","possuí")
			set legenda = $replace(legenda,"<presenca>","Presença")
		}else{
			set legenda = $replace(legenda,"<possui>","não possuí")
			set legenda = $replace(legenda,"<presenca>","Ausência")
		}
		
		if detalhe'="" {
			if $get(detalhe2)'="" set legenda=legenda_" <span class=ttEstadiamentoExames>("_detalhe2_")</span>"
			else  set legenda=legenda_" <span class=ttEstadiamentoExames>("_detalhe_")</span>"
		}
		
		if legenda'="" {
			;set estadiamentoTexto = estadiamentoTexto_"<li class=ttEstadiamento>"_legenda_"</li>"
			if '$data(ordem1("<li class=ttEstadiamento>"_legenda_"</li>")){
				set ultOrdem = $order(ordem(sequenciaTela,""),-1)+1
				set ordem(sequenciaTela,ultOrdem) = "<li class=ttEstadiamento>"_legenda_"</li>"
				set ordem1("<li class=ttEstadiamento>"_legenda_"</li>") = ""
			}
		}
	}
	set sequenciaDireta = ""
	set sequ1=""
	for {
		set sequ1=$order(ordem(sequ1)) quit:sequ1=""
		set sequ2=""
		for {
			set sequ2=$order(ordem(sequ1,sequ2)) quit:sequ2=""
			set estadiamentoTexto = estadiamentoTexto_ordem(sequ1,sequ2)
			set sequenciaDireta=sequenciaDireta_sequ1_";"_sequ2_";"_ordem(sequ1,sequ2)_"^"
			
		}
	}
	set estadiamentoTexto = estadiamentoTexto_"</ul>"
	quit estadiamentoTexto_"~"_sequenciaDireta]]></Implementation>
</Method>

<Method name="recToolTipPontuadores">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set hist = 0
	if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
	;
	set texto = ""
	set pontos = 0
	set pontuacao = ""
	for {
		set pontuacao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao)) quit:pontuacao=""
		set selPontuacao=""
		set codCondicao = ""
		for {
			set codCondicao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao,codCondicao)) quit:codCondicao=""
			set sequ = ""
			for {
				set sequ = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao,codCondicao,sequ)) quit:sequ=""
				set obj = $get(^VARWorkFlowEstPontCondicao(YM,cid,codEst,pontuacao,codCondicao,sequ,1))
				set campos		= $$$VARWorkFlowEstPontCondicaoCampos(obj)
				set condicao	= $$$VARWorkFlowEstPontCondicaoComparador(obj)
				set valorRef	= $$$VARWorkFlowEstPontCondicaoValor(obj)
				set tipoP		= +$$$VARWorkFlowEstPontCondicaoTipo(obj)
				set legenda		= $$$VARWorkFlowEstPontCondicaoLegendadeExibicao(obj)
				set valorAcumulado = ""
				set toolEst = ""
				if tipoP=0{
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						set valorComparativo=""
						if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
						if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campox,1,hist)<1 continue
						set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
						set desc    = $$$VARWorkFlowPEPNome(objWF)
						set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set opcoes	= $$$VARWorkFlowPEPOpcoes(objWF)
						set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
						set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
				
						if composicaoValoresExames>5,composicaoValoresExames<10{
							if valorComparativo'="" {
								set valorComparativo = valorComparativo-1 
							}
						}
						set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,hist),"~",1)
						set valorC2 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,hist),"~",2)
						/*set valorC= ""
						set valorC2 = ""
						set ultData = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,dataPEP),-1)
						if ultData'="" {
							set ultHora = $order(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,ultData,""),-1)
							if ultHora'=""{
								set objPEP = $get(^VARPEPPremium(YM,paciente,cid,ficha,fichaSeq,campox,ultData,ultHora,1))
								set valorC = $$$VARPEPPremiumValorRegistrado(objPEP)
								set valorC2 = $$$VARPEPPremiumValorRegistrado2(objPEP)
							}
						}*/
						;if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
						if valorComparativo'=""{
							if permitirSelecionarMaisQue=1 {
								set valorC = $piece(valorC,";",valorComparativo)
								set valorAcumulado = valorAcumulado + valorC
							}else{
								if valorComparativo=valorC set valorAcumulado = valorAcumulado + 1
							}
						}else{
							if valorC="" continue
							set valorAcumulado = valorAcumulado + valorC
						}
					}
				}
				if tipoP=1{
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						
						set estadiamento = $piece(campox,";",1)
						set estagio 	 = $piece(campox,";",2)
						set ret = ..calcEstadiamento(paciente, cid, ficha,fichaSeq,estadiamento,dataPEP,opcao,0)
						if estadiamento=1,ret.selEstagio=6 set ret.selEstagio=""
						if ret.selEstagio=estagio {
							;
							set objEst = $get(^VARWorkFlowEstadiamento(YM,cid,estadiamento,1))
							set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEst)
							set objEstagio = $get(^VARWorkFlowEstadiamentoEstagio(YM,cid,estadiamento,estagio,1))
							set descEst = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
							set grupoRisco = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
							;
							set toolEst = "Estadiamento "_descEstadiamento_" - "_descEst ;ret.estadiamentoTextoSequencias
							set valorAcumulado = valorAcumulado + 1
							quit
						}
					}
				}
				if tipoP=2{
					if campos=1 { ; Idade do Paciente
						set objPaciente = $get(^MEDPatient(YM,paciente,1))
						set dob = $$$MEDPatientDOB(objPaciente)
						if dob'=""{
							set nasc = $zdate(dob,8)
							set hoje = $zdate($horolog,8)
							set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
							if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
							set valorAcumulado = anos
						}
						
					}
				}
				
				;w !,campos,?10,legenda,!,?20,valorAcumulado,?30,valorRef
				if valorAcumulado="" continue
				set resultado=""
				if condicao="="{
					set resultado = valorAcumulado=valorRef
				}
				if condicao="<"{
					set resultado = valorAcumulado<valorRef
				}
				if condicao=">"{
					set resultado = valorAcumulado>valorRef
				}
				if condicao="<>"{
					set resultado = valorAcumulado'=valorRef
				}
				if resultado=0 continue
				set selPontuacao = pontuacao
				if $data(selecionados(campos)) continue
				set selecionados(campos)=selPontuacao
				set point = $piece($get(^VARWorkFlowEstPont(YM,cid,codEst,pontuacao,1)),"~",2)
				if tipoP=0{
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						set valorComparativo=""
						if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
						if ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campox,1,hist)<1 continue
						set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
						set desc    = $$$VARWorkFlowPEPNome(objWF)
						set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set opcoes	= $$$VARWorkFlowPEPOpcoes(objWF)
						set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
						set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
						set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
						set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
						set sequenciaTela = ..sequenciaExibicaoCompleta(cid,campox)
						if composicaoValoresExames>5,composicaoValoresExames<10{
							if valorComparativo'="" {
								set valorComparativo = valorComparativo-1 
							}
						}
						set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,hist),"~",1)
						set valorC2 = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campox,hist),"~",2)
						if valorComparativo'=""{
							if permitirSelecionarMaisQue=1 {
								set valorC = $piece(valorC,";",valorComparativo)
								set valorAcumulado = valorC
							}else{
								if valorComparativo'=valorC continue 
							}
						}else{
							if valorC="" continue
							set valorAcumulado = valorC
						}
						if tipo=2||(tipo=11) {
							set predecessor    = $$$VARWorkFlowPEPPredecessor(objWF)
							if predecessor'=""{
								set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
								set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
								if tipoPred=7{
									set desc    = $$$VARWorkFlowPEPNome(objPred)
									set codImagem = $piece(desc,";",1)
									set codArea = $piece(desc,";",2)
									set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
									if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
										set desc 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
									}
								}
							}
						}
						if tipo=5||(tipo=12){
							set exames=""
							for i=1:1:$length(desc,";"){
								set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(desc,";",i),1))
								set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
								if unid="" set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
								if exames'="" set exames = exames_"/"
								set exames = exames_descExame
							}
							set desc = exames
							if opcoes=""{
								set desc = desc_" - "_$fnumber(valorC,".")_" "_unid
							}
							
						}
						if composicaoValoresExames'=""{
							set opcoes = $piece($get(^VARPARA(0,"WORKFLOWVALORES","PT",composicaoValoresExames,1)),"~",1)
							set opcoes = $replace(opcoes,"/","|")
							set valorComparativo = valorComparativo-1
						}
						if composicaoValoresExames>5,composicaoValoresExames<10{
							set desc = "Mutação em "_desc
						}
						if valorComparativo'="",opcoes'=""{
							set vPiece = $piece(opcoes,"|",+valorComparativo)
							set:vPiece'="" desc = desc_" - "_vPiece
						}
						;
						if legenda'="" {
							set legenda = $replace(legenda,"<xx>",$get(valorC))
							set legenda = $replace(legenda,"<yy>",$get(valorC2))
							set desc = legenda
						}
						if point<1 set descPoint = " - "_point_" ponto"
						else  set descPoint = " - "_point_" pontos"
						set desc = desc_descPoint
						if texto'[desc{
							;set texto = texto_"<li class=ttEstadiamento>"_desc_"</li>"
							if '$data(ordem1("<li class=ttEstadiamento>"_desc_"</li>")){
								set ultOrdem = $order(ordem(sequenciaTela,""),-1)+1
								set ordem(sequenciaTela,ultOrdem) = "<li class=ttEstadiamento>"_desc_"</li>"
								set ordem1("<li class=ttEstadiamento>"_desc_"</li>")=""
							}
						}
						
					}
				}
				if tipoP=1{
					for i=1:1:$length(toolEst,"^"){
						set reg = $piece(toolEst,"^",i)
						if reg="" continue
						if point<1 set descPoint = " - "_point_" ponto"
						else  set descPoint = " - "_point_" pontos"
						set reg = "<li class=ttEstadiamento>"_reg_descPoint_"</li>"
						
						;set sequenciaTela = $piece(reg,";",1)
						;if '$data(ordem1($piece(reg,";",3))){
						set sequenciaTela = 1
						if '$data(ordem1(reg)){
							set ultOrdem = $order(ordem(sequenciaTela,""),-1)+1
							set ordem(sequenciaTela,ultOrdem) = reg
							set ordem1(reg)=""
							;set ordem(sequenciaTela,ultOrdem) = $piece(reg,";",3)
							;set ordem1($piece(reg,";",3))=""
						}
						
					}
				}
				if tipoP=2{
					set sequenciaTela = "1"
					set desc = ""
					if legenda'="" {
						set legenda = $replace(legenda,"<xx>",$get(valorC))
						set legenda = $replace(legenda,"<yy>",$get(valorC2))
						set desc = legenda
					}
					if point<1 set descPoint = " - "_point_" ponto"
					else  set descPoint = " - "_point_" pontos"
					set desc = desc_descPoint
					
					if '$data(ordem1("<li class=ttEstadiamento>"_desc_"</li>")){
						set ultOrdem = $order(ordem(sequenciaTela,""),-1)+1
						set ordem(sequenciaTela,ultOrdem) = "<li class=ttEstadiamento>"_desc_"</li>"
						set ordem1("<li class=ttEstadiamento>"_desc_"</li>")=""
					}
					;set texto = texto_"<li class=ttEstadiamento>"_desc_"</li>"
				}
				
			}
		}
		if selPontuacao{
			set pontos = pontos+$piece($get(^VARWorkFlowEstPont(YM,cid,codEst,pontuacao,1)),"~",2)
		}
	}
	;set texto = "<i class=ttEstadiamento>Pontuação Total: "_pontos_" pontos</i>"_texto
	set sequ1=""
	for {
		set sequ1=$order(ordem(sequ1)) quit:sequ1=""
		set sequ2=""
		for {
			set sequ2=$order(ordem(sequ1,sequ2)) quit:sequ2=""
			set texto = texto_ordem(sequ1,sequ2)
		}
	}
	if texto = "" {
		set texto = "<i class=ttEstadiamento>Pontuação: "_pontos_" ponto</i>"
	}
	quit texto]]></Implementation>
</Method>

<Method name="recToolTipPontuadoresPendente">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set retVetor = []
	set hist = 0
	if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
	kill legendas
	set estadiamentoTexto = ""
	set codEstagio=""
	for {
		set codEstagio = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio)) quit:codEstagio=""
		set codCondicao=""
		set pontos = $piece($get(^VARWorkFlowEstPont(YM,cid,codEst,codEstagio,1)),"~",2)
		if pontos=0 continue
		for {
			set codCondicao = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio,codCondicao)) quit:codCondicao=""
			set sequ = ""
			for {
				set sequ = $order(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
				set obj = $get(^VARWorkFlowEstPontCondicao(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
				;
				set campos		= $$$VARWorkFlowEstPontCondicaoCampos(obj)
				set condicao	= $$$VARWorkFlowEstPontCondicaoComparador(obj)
				set valorRef	= $$$VARWorkFlowEstPontCondicaoValor(obj)
				set tipoP		= +$$$VARWorkFlowEstPontCondicaoTipo(obj)
				set legenda		= $$$VARWorkFlowEstPontCondicaoLegendadeExibicao(obj)
				if legenda'=""{
					if $data(legendas(legenda)) continue
					set legendas(legenda) = ""
				}
				set contador = 0
				set detalhe = ""
				if tipoP=0{
					kill naoPreenchido
					set preencheu = 0
					for cont=1:1:$length(campos,"|"){
						set campo = $piece(campos,"|",cont)
						if campo="" continue
						set campo=$piece(campo,";",1)
						;
						set retPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)
						if retPais=0 {
							set naoPreenchido(campo) = ""
							continue
						}
						set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
						if valorC '="" {
							set preencheu = 1
							kill naoPreenchido
							quit
						}
						set naoPreenchido(campo) = ""
					}
					if preencheu{
						kill naoPreenchido
						quit
					}
				}
				if tipoP=1{
					set flagEstad=""
					kill listEstadiamentos
					for cont=1:1:$length(campos,"|"){
						set campox = $piece(campos,"|",cont)
						if campox="" continue
						set estadiamento = $piece(campox,";",1)
						set estagio 	 = $piece(campox,";",2)
						if $data(listEstadiamentos(estadiamento)) {
							set selEstagio = listEstadiamentos(estadiamento)
						}else{
							set ret = ..calcEstadiamento(paciente, cid, ficha, fichaSeq, estadiamento,dataPEP,opcao,1)
							if estadiamento=1,ret.selEstagio=6 set ret.selEstagio=""
							set selEstagio = ret.selEstagio
							set listEstadiamentos(estadiamento) = selEstagio
						}
						if selEstagio="" set flagEstad = estadiamento
					}
					if flagEstad'=""{
						set objEstadiamento = $get(^VARWorkFlowEstadiamento(0,cid,flagEstad,1))
						set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEstadiamento)
						set vetor("Ult","Esta") = "Cálculo de Estadiamento"
						set vetor("Ult","Esta",1,"Estadiamento "_descEstadiamento) = ""
					}
				}
			}
			set campo=""
			for {
				set campo = $order(naoPreenchido(campo)) quit:campo=""
				set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
				set desc    = $$$VARWorkFlowPEPNome(objWF)
				set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
				set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
				set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
				if tipo=5||(tipo=12){
					set exames=""
					for i=1:1:$length(desc,";"){
						set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(desc,";",i),1))
						set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
						if unid="" set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
						if exames'="" set exames = exames_"/"
						set exames = exames_descExame
					}
					set desc = exames
				}
				set Caminho=""
				if $get(%session)=""{
					set job = $job
				}else{
					set job = %session.SessionId
				}
				if $data(^mtemp.MAPPAMenuLean(0,job)){
					set codAtual = campo
					for {
						if codAtual="" quit
						if $data(^mtemp.MAPPAMenuLean(0,job,codAtual,1)){
							set objAtu	= $get(^mtemp.MAPPAMenuLean(0,job,codAtual,1))
							set descAtu	= $piece(objAtu,"~",1)
							set codNovo= $piece(objAtu,"~",4)
						}else{
							set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
							set descAtu	= $$$VARWorkFlowPEPNome(objAtu)
							set codNovo= $piece($$$VARWorkFlowPEPPredecessor(objAtu),";",1)
						}
						set Caminho	= descAtu
						if (codNovo	="")||(codNovo="T1") quit
						set codAtual = codNovo
					}
				}else{
					set codAtual = campo
					for {
						if codAtual="" quit
						set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
						set descAtu	= $$$VARWorkFlowPEPNome(objAtu)
						set codNovo= $piece($$$VARWorkFlowPEPPredecessor(objAtu),";",1)
						set Caminho	= descAtu
						if codNovo	="" quit
						set codAtual = codNovo
					}
				}
				if $data(^mtemp.MAPPAMenuLean(0,job,codAtual,1)){
					set objAtu	= $get(^mtemp.MAPPAMenuLean(0,job,codAtual,1))
					set sequenciaExib= +$piece(objAtu,"~",5)
					
				}else{
					set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
					set sequenciaExib= +$$$VARWorkFlowPEPSequenciadeExibicao(objAtu)
				}
				;
				if $data(^mtemp.MAPPAMenuLean(0,job,campo,1)){
					set objAtu	= $get(^mtemp.MAPPAMenuLean(0,job,campo,1))
					set sequenciaExibCampo= +$piece(objAtu,"~",5)
					
				}else{
					set objAtu	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
					set sequenciaExibCampo= +$$$VARWorkFlowPEPSequenciadeExibicao(objAtu)
				}
				
				;
				set vetor(sequenciaExib,codAtual) = Caminho
				set:desc'="" vetor(sequenciaExib,codAtual,sequenciaExibCampo,desc)=""
			}
			
		}
	}
	kill legendas
	set ItensPendentes = 0
	set estadiamentoTexto = estadiamentoTexto_"<ul class=ttEstadiamento>"
	set sequ1=""
	for {
		set sequ1 = $order(vetor(sequ1)) quit:sequ1=""
		set cami=""
		for {
			set cami = $order(vetor(sequ1,cami)) quit:cami=""
			set texto = vetor(sequ1,cami)
			set estadiamentoVetor = {}
			set estadiamentoVetor.Grupo = texto
			set estadiamentoTexto = estadiamentoTexto_"<li>Grupo: "_texto_"</li>"
			set estadiamentoTexto = estadiamentoTexto_"<ul>"
			set estadiamentoLinhas = []
			set sequ2=""
			for {
				set sequ2 = $order(vetor(sequ1,cami,sequ2)) quit:sequ2=""
				set desc=""
				for {
					set desc = $order(vetor(sequ1,cami,sequ2,desc)) quit:desc=""
					if $data(legendas(desc)) continue
					set legendas(desc) = ""
					set estadiamentoTexto = estadiamentoTexto_"<li>"_desc_"</li>"
					set ItensPendentes = ItensPendentes + 1
					do estadiamentoLinhas.%Push(desc)
				}
			}
		}
		set estadiamentoVetor.Linhas = estadiamentoLinhas
		set estadiamentoTexto = estadiamentoTexto_"</ul>"
		do retVetor.%Push(estadiamentoVetor)
	}
	
	set estadiamentoTexto = estadiamentoTexto_"</ul>"
	set retorno = {}
	set retorno.Texto = estadiamentoTexto
	set retorno.Vetor = retVetor
	set retorno.ItensPendentes = ItensPendentes
	quit retorno
	;quit estadiamentoTexto]]></Implementation>
</Method>

<Method name="recToolTipEstadiamentoPendente">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set estadiamentoTexto = ""
	set retVetor = []
	set sai = 0
	kill vetor
	Set (xTexto,xVetor,xPendentes)=""
	set codEstagio=""
	for {
		set codEstagio = $order(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio)) quit:codEstagio=""
		quit:sai
		set codCondicao=""
		for {
			set codCondicao = $order(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao),-1) quit:codCondicao=""
			quit:sai
			set sequ = ""
			for {
				set sequ = $order(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao,sequ)) quit:sequ=""
				quit:sai
				
				set obj = $get(^VARWorkFlowEstEstagioC(YM,cid,codEst,codEstagio,codCondicao,sequ,1))
				set campos		= $$$VARWorkFlowEstEstagioCCampos(obj)
				set condicao	= $$$VARWorkFlowEstEstagioCCondicao(obj)
				set valorRef	= $$$VARWorkFlowEstEstagioCValor(obj)
				set tipo		= +$$$VARWorkFlowEstEstagioCTipo(obj)
				set legenda		= $$$VARWorkFlowEstEstagioCLegenda(obj)
				set consideraNulo = 0
				if $extract(condicao,1)="*" set consideraNulo=1,condicao=$extract(condicao,2,$length(condicao))
				;
				if tipo=1{
					if (cid = "C90.0") {
						set retX = ..recToolTipPontuadoresPendente(paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao)
						if retX.Vetor.%Size()>0{
							set xTexto = retX.Texto
							set xVetor = retX.Vetor
							set xPendentes = retX.ItensPendentes
						}
						;w !,xTexto
						;w !,xVetor
						;w !,xPendentes
					}else{
						set ret = ..recToolTipPontuadoresPendente(paciente,cid,ficha,fichaSeq,codEst,dataPEP,opcao)
						if ret.Vetor.%Size()>0{
							set texto = ret.Texto
							set vetor = ret.Vetor
							set pendentes = ret.ItensPendentes
							set sai=1
							quit
						}
					}
					continue
				}
				;
				set contador = 0
				set detalhe = ""
				for cont=1:1:$length(campos,"|"){
					set campo = $piece($piece(campos,"|",cont),";",1)
					if campo="" continue
					;
					set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
					;w !,tipo,"|Obj:",objWF
					set desc    = $$$VARWorkFlowPEPNome(objWF)
					set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
					set unid	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
					set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
					;
					set hist = 0
					if opcao'=2,..recUltimoEstadiamento(paciente,cid,ficha)'="" set hist = 1
					;w !,tipo,"|Obj1:",objWF
					set valorC = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,campo,hist),"~",1)
					set nivelPais = ..verificaNivelPais(paciente,cid,ficha,fichaSeq,campo,1,hist)
					;w !,tipo,"|Obj2:",objWF,"|",valorC,"|",nivelPais
					;w !,tipo,"|Obj3:",objWF
					;if valorC = "",RespostaPadrao'="" set valorC = RespostaPadrao
					if (valorC '="")||(nivelPais<=0) continue
					;
					if cid="C91.1"{
						if ((campo=101)||(campo=102)||(campo=455)){
							set anemia = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,13,hist),"~",1)<=11
							set trombo = $piece(..recValorSalvo(paciente,cid,ficha,fichaSeq,32,hist),"~",1)<=100000
							if campo=101,'anemia continue
							if campo=102,'trombo continue
							if campo=455,'anemia,'trombo continue

						}
					}
					;
					;w !,tipo,"|Obj4:",objWF
					;w !,codEstagio,?10,codCondicao,?20,sequ
					;w !?5,campos,?12,desc
					;w !?10,valorC,?50,nivelPais
					;
					if tipo=2||(tipo=11) {
						set predecessor    = $$$VARWorkFlowPEPPredecessor(objWF)
						if predecessor'=""{
							set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
							set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
							if tipoPred=7{
								if valorRef="" quit
								set desc    = $$$VARWorkFlowPEPNome(objPred)
								set codImagem = $piece(desc,";",1)
								set codArea = $piece(desc,";",2)
								set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
								if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
									set desc 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
								}
							}else{
								set predecessor    = $$$VARWorkFlowPEPPredecessor(objPred)
								if predecessor'=""{
									set objPred	 = $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
									set tipoPred = $$$VARWorkFlowPEPTipodeWorkflow(objPred)
									if tipoPred=7{
										if valorRef="" quit
										set desc    = $$$VARWorkFlowPEPNome(objPred)
										set codImagem = $piece(desc,";",1)
										set codArea = $piece(desc,";",2)
										set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
										if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
											set desc 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
										}
									}
								}
							}
							
						}
					}
					if tipo=5||(tipo=12){
						set exames=""
						for i=1:1:$length(desc,";"){
							set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(desc,";",i),1))
							set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
							if unid="" set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
							if exames'="" set exames = exames_"/"
							set exames = exames_descExame
						}
						set desc = exames
					}
					;
					set Caminho=""
					if $get(%session)=""{
						set job = $job
					}else{
						set job = %session.SessionId
					}
					if $data(^mtemp.MAPPAMenuLean(0,job)){
						set codAtual = campo
						for {
							if codAtual="" quit
							if $data(^mtemp.MAPPAMenuLean(0,job,codAtual,1)){
								set objAtu	= $get(^mtemp.MAPPAMenuLean(0,job,codAtual,1))
								set descAtu	= $piece(objAtu,"~",1)
								set codNovo= $piece(objAtu,"~",4)
							}else{
								set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
								set descAtu	= $$$VARWorkFlowPEPNome(objAtu)
								set codNovo= $piece($$$VARWorkFlowPEPPredecessor(objAtu),";",1)
							}
							set Caminho	= descAtu
							if (codNovo	="")||(codNovo="T1") quit
							set codAtual = codNovo
						}
					}else{
						set codAtual = campo
						for {
							if codAtual="" quit
							set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
							set descAtu	= $$$VARWorkFlowPEPNome(objAtu)
							set codNovo= $piece($$$VARWorkFlowPEPPredecessor(objAtu),";",1)
							set Caminho	= descAtu
							if codNovo	="" quit
							set codAtual = codNovo
						}
					}
					if $data(^mtemp.MAPPAMenuLean(0,job,codAtual,1)){
						set objAtu	= $get(^mtemp.MAPPAMenuLean(0,job,codAtual,1))
						set sequenciaExib= +$piece(objAtu,"~",5)
						
					}else{
						set objAtu	= $get(^VARWorkFlowPEP(YM,cid,codAtual,1))
						set sequenciaExib= +$$$VARWorkFlowPEPSequenciadeExibicao(objAtu)
					}
					;
					if $data(^mtemp.MAPPAMenuLean(0,job,campo,1)){
						set objAtu	= $get(^mtemp.MAPPAMenuLean(0,job,campo,1))
						set sequenciaExibCampo= +$piece(objAtu,"~",5)
						
					}else{
						set objAtu	= $get(^VARWorkFlowPEP(YM,cid,campo,1))
						set sequenciaExibCampo= +$$$VARWorkFlowPEPSequenciadeExibicao(objAtu)
					}
					;
					if desc'=""{
						set vetor(sequenciaExib,codAtual) = Caminho
						set:codAtual'=6 vetor(sequenciaExib,codAtual,sequenciaExibCampo,desc)=""
					}
				}
			}
			;if $data(vetor) quit
		}
		;if $data(vetor) quit
	}
	if sai{
		set retorno = {}
		set retorno.Texto = texto
		set retorno.Vetor = vetor
		set retorno.ItensPendentes = pendentes
		quit retorno
	}
	If (cid="C90.0"&&(codEst=1)) {
		Set diagRDB = ..calcDiagnosticoRDB(paciente,cid,ficha)
		Set diagRDC = ..calcDiagnosticoRDC(paciente,cid,ficha)
		if diagRDB="",diagRDC="" {
			Set vetor(-1,-1)="Diagnóstico:"
			Set vetor(-1,-1,-1,"Mieloma Múltiplo")=""			
		}
	}
	set itensPendentes = 0
	set estadiamentoTexto = estadiamentoTexto_"<ul class=ttEstadiamento>"
	set sequ1=""
	for{
		set sequ1=$order(vetor(sequ1)) quit:sequ1=""
		set cami=""
		for {
			set cami = $order(vetor(sequ1,cami)) quit:cami=""
			set texto = vetor(sequ1,cami)
			set estadiamentoVetor = {}
			set estadiamentoVetor.Grupo = texto
			set estadiamentoTexto = estadiamentoTexto_"<li>Grupo: "_texto_"</li>"
			set estadiamentoTexto = estadiamentoTexto_"<ul>"
			set estadiamentoVetorLinhas = []
			set sequ2=""
			for {
				set sequ2 = $order(vetor(sequ1,cami,sequ2)) quit:sequ2=""
				set desc=""
				for {
					set desc = $order(vetor(sequ1,cami,sequ2,desc)) quit:desc=""
					do estadiamentoVetorLinhas.%Push(desc)
					set estadiamentoTexto = estadiamentoTexto_"<li>"_desc_"</li>"
					set itensPendentes = itensPendentes+1
				}
			}
		}
		set estadiamentoVetor.Linhas = estadiamentoVetorLinhas
		set estadiamentoTexto = estadiamentoTexto_"</ul>"
		do retVetor.%Push(estadiamentoVetor)
	}
	set estadiamentoTexto = estadiamentoTexto_"</ul>"
	set retorno = {}
	If (cid = "C90.0" && (codEst = 2)) {
		set retorno.Texto = xTexto_estadiamentoTexto
	}else{
		set retorno.Texto = estadiamentoTexto
	}
	set retorno.Vetor = retVetor
	set retorno.ItensPendentes = xPendentes_itensPendentes
	quit retorno]]></Implementation>
</Method>

<Method name="recCampoData">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set codPainel = $get(%request.Data("painel",1))
	set subCodPainel = $get(%request.Data("subCodPainel",1))
	set cid = $get(%request.Data("codCID",1))
	set SQL = " SELECT Sequencia "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"' and TipodeWorkflow='13' "
	If (cid = "C90.0") {
		set SQL = SQL_" and Sequencia Not In (48245, 48535, 48536, 48537, 48535,48536,48537,48684,48245,48656,48657,48658,48659,48660,48661,48662,48663,48664,48667,48670,48671,48673,48676,48680,48683,48665,48668,48672,48674,48681,48677,48666,48669,48675,48682,48678,48679,48685,48686,48687)"
	}
	If (cid = "C91.1") {
		set SQL = SQL_" and Sequencia Not In (2030,2032,2035,2036,2040,2043,2046,2047,2049,2052,2056,2059,2033,2037,2041,2044,2048,2050,2057,2053,2034,2038,2042,2045,2051,2058,2039,2054,2055)"
	}
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set achou=0
	set Sequencia=""
	set resp=""
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set resp = $piece(..recValorSalvo(codPaciente,cid,ficha,1,Sequencia),"~",1)
		set achou=1
	}
	if resp'="" set achou=0
	set retorno = {}
	set retorno.achou=achou
	set retorno.Sequencia = Sequencia
	set retorno.dataExame = $select(resp="":"",1:$zdate(resp,1))
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recCampoSomas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set codPainel = $get(%request.Data("painel",1))
	set subCodPainel = $get(%request.Data("subCodPainel",1))
	set cid = $get(%request.Data("codCID",1))
	set SQL = " SELECT Sequencia "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"' and TipodeWorkflow='5' and composicaoValoresExames='13'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set achou=0
	set Sequencia=""
	set total=""
	set possui=0
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set resp = $piece(..recValorSalvo(codPaciente,cid,ficha,1,Sequencia),"~",2)
		if resp="" continue
		set possui=1
		set total = total+resp
	}
	if $justify(total,0,0)'=100{
		set achou=1
	}
	if 'possui set achou=0
	set retorno = {}
	set retorno.achou=achou
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="gravaDataExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set cid = $get(%request.Data("codCID",1))
	set Sequencia = $get(%request.Data("sequencia",1))
	set dataExame = $get(%request.Data("dataExame",1))
	set dataExame 		= $replace(dataExame,"""","")
	do ..salvaPainel(codPaciente,Sequencia,dataExame,cid,ficha,1,+$horolog,YUSER)
	write 1
	quit]]></Implementation>
</Method>

<Method name="verificaRegrasPainel">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPainel = $get(%request.Data("codPainel",1))
	set subCodPainel = $get(%request.Data("subCodPainel",1))
	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	if dataPEP'=+$horolog {
		set resp = {}
		set resp.status=1
		write resp.%ToJSON()
		quit
	}
	if dataPEP'="" set dataPEP = dataPEP + 1
	set SQL = " SELECT Sequencia,Nome,TipodeWorkflow,ValidacaoLegenda,ValidacaoComparador,ValidacaoTipodeReferenci,ValidacaoValordeReferenc "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"' and ValidacaoValordeReferenc <> ''"
	if subCodPainel'="" set SQL = SQL_" and %upper(OpcaodoPredecessor) = '"_subCodPainel_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set ret=""
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow = rs.%Get("TipodeWorkflow")
		set ValidacaoLegenda = rs.%Get("ValidacaoLegenda")
		set ValidacaoComparador = rs.%Get("ValidacaoComparador")
		set ValidacaoTipodeReferenci = rs.%Get("ValidacaoTipodeReferenci")
		set ValidacaoValordeReferenc = rs.%Get("ValidacaoValordeReferenc")
		set total = 0
		if ValidacaoTipodeReferenci=1{
			set total = ValidacaoValordeReferenc
		}else{
			for cseq=1:1:$length(ValidacaoValordeReferenc,";"){
				set sequ = $piece(ValidacaoValordeReferenc,";",cseq)
				set resp = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,sequ),"~",1)
				set total = total + resp
			}
		}
		;
		set resp = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,Sequencia),"~",1)
		;
		if TipodeWorkFlow=5{
			set exames=""
			for i=1:1:$length(Nome,";"){
				set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(Nome,";",i),1))
				if exames'="" set exames = exames_"/"
				set exames = exames_$$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
			}
			set Nome = exames
		}
		;
		set ValidacaoLegenda = $replace(ValidacaoLegenda,"<sequencia>",$fnumber(resp,"."))
		set ValidacaoLegenda = $replace(ValidacaoLegenda,"<campos>",$fnumber(total,"."))
		if ValidacaoComparador="="{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(+total=+resp) set ret = ValidacaoLegenda
		}
		if ValidacaoComparador=">"{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(total>resp) set ret = ValidacaoLegenda
		}
		if ValidacaoComparador="<"{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(total<resp) set ret = ValidacaoLegenda
		}
		if ValidacaoComparador="<>"{
			if ValidacaoLegenda=""{
				set ValidacaoLegenda = "A contagem de "_Nome_" foi de "_$fnumber(resp,".")_" e a soma dos seus subtipos foi de "_$fnumber(total,".")_". Deseja Prosseguir?"
			}
			if '(total'=resp) set ret = ValidacaoLegenda
		}
	}
	set resp = {}
	set resp.status=1
	if ret'="" {
		set resp.status=0
		set resp.mensagem=ret
	}
	write resp.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recUltimoEstadiamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	// Ordena fichas 
	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumConsulta(0,codPaciente,fichaAux)) quit:fichaAux=""
		set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,fichaAux,1))
		set inativo = +$$$VARPEPPremiumConsultaConsultaInativada(objFicha)
		if inativo=1,fichaAux'=ficha continue

		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)
		if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
		
		set vetor(data,fichaAux)=""
		set vetor1(fichaAux)=data
	}	
	//
	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumEstadiamento(0,codPaciente,fichaAux))
		if fichaAux="" quit
		set vetorEstadiamento(fichaAux)=""
	}
	set ultSeq=""
	set data = $get(vetor1(ficha))
	if data'="" set data = data+1
	for {
		set data=$order(vetor(data),-1) quit:data=""
		quit:ultSeq'=""
		if data=$get(vetor1(ficha)) set fichaAux = ficha+1
		else  set fichaAux=""
		for {
			set fichaAux=$order(vetor(data,fichaAux),-1) quit:fichaAux=""
			if '$data(vetorEstadiamento(fichaAux)) continue
			set ultSeq = fichaAux
			quit
		}
	}
	quit ultSeq]]></Implementation>
</Method>

<Method name="recValorSalvo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,sequ,hist=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if codPaciente=""||(cid="")||(ficha="") quit ""
	set valor1 = ""
	set valor2 = ""
	if hist=1{
		set ultSeq = ..recUltimoEstadiamento(codPaciente,cid,ficha)
		if ultSeq'="" {
			set fichaAux = ultSeq
		}else{
			set hist=0
		}
	}
	if hist=1{
		set dataPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,codPaciente,ultSeq,1)),"~",1)
		set horaPEPF = $piece($get(^VARPEPPremiumEstadiamento(0,codPaciente,ultSeq,1)),"~",2)+1
		set ultData = dataPEPF
		set ultHora = $order(^VARPEPPremium(0,codPaciente,cid,fichaAux,fichaSeq,sequ,ultData,horaPEPF),-1)	
		if ultHora=""{
			set ultData = ultData + 1
			set ultData = +$order(^VARPEPPremium(0,codPaciente,cid,fichaAux,fichaSeq,sequ,dataPEPF),-1)
			set ultHora = +$order(^VARPEPPremium(0,codPaciente,cid,fichaAux,fichaSeq,sequ,ultData,""),-1)	
		}
		set obj = $get(^VARPEPPremium(0,codPaciente,cid,fichaAux,fichaSeq,sequ,ultData,ultHora,1))
		set valor1 = $$$VARPEPPremiumValorRegistrado(obj)
		set valor2 = $$$VARPEPPremiumValorRegistrado2(obj)
	}else{
		set ultHora = ""
		set ultData = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,""),-1)
		if ultData'=""{
			set ultHora = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,ultData,""),-1)
			if ultHora'=""{
				set obj = $get(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,sequ,ultData,ultHora,1))
				set valor1 = $$$VARPEPPremiumValorRegistrado(obj)
				set valor2 = $$$VARPEPPremiumValorRegistrado2(obj)
			}
		}
	}
	quit valor1_"~"_valor2_"~"_ultData_"~"_ultHora]]></Implementation>
</Method>

<Method name="recPercentual">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set idPainel = $get(%request.Data("idPainel",1))
	set paciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	if paciente=""||(cid="") write 1 quit
	;
	if $data(^mtemp.MAPPAMenuLean(0,%session.SessionId)){
		set total = 0,resp=0,perc=0
		set vetorRet = []
		kill arrayFinal
		set painel=""
		for {
			set painel = 	$order(^mtemp.MAPPAMenuLean(0,%session.SessionId,painel)) quit:painel=""
			kill array
			set vetor = ..recFilhos(cid,ficha,fichaSeq,painel,"",paciente,painel,.array)
			set predecessorLoop = painel
			for {
				set predecessor = $piece(^mtemp.MAPPAMenuLean(0,%session.SessionId,predecessorLoop,1),"~",4)
				if (predecessor="")||(predecessor="T1") quit
				set predecessorLoop = predecessor
			}
			if predecessorLoop'="T1"{
				set ordem = +$piece(^mtemp.MAPPAMenuLean(0,%session.SessionId,predecessorLoop,1),"~",5)
				set $piece(arrayFinal(ordem,predecessorLoop),"|",1) = $piece($get(arrayFinal(ordem,predecessorLoop)),"|",1)+$piece(vetor,"|",1)
				set $piece(arrayFinal(ordem,predecessorLoop),"|",2) = $piece(arrayFinal(ordem,predecessorLoop),"|",2)+$piece(vetor,"|",2)
			}
			set total = total+$piece(vetor,"|",1)
			set resp = resp+$piece(vetor,"|",2)
		}
		set string = ""
		set seq1=""
		for{
			set seq1 = $order(arrayFinal(seq1)) quit:seq1=""
			set seq2=""
			for{
				set seq2 = $order(arrayFinal(seq1,seq2)) quit:seq2=""
				set totalIt = $piece(arrayFinal(seq1,seq2),"|",1)
				set respIt = $piece(arrayFinal(seq1,seq2),"|",2)
				set percIt=100
				set:+totalIt'=0 percIt = respIt*100/totalIt
				if percIt>100 set percIt = 100
				if '$data(^VARWorkFlowPEP(0,cid,seq2,1)){
					set Nome					= 	$piece(^mtemp.MAPPAMenuLean(0,%session.SessionId,seq2,1),"~",1)
				}else{
					set objWF = $get(^VARWorkFlowPEP(0,cid,seq2,1))
					set Nome					= 	$$$VARWorkFlowPEPNome(objWF)
				}
				set string = string_"<tr><td>"_Nome_"</td><td>"_$fnumber(percIt,".",2)_"%</td></tr>"
			}
		}
		set perc=100
		set:+total'=0 perc = resp*100/total
		if perc>100 set perc = 100
		set retorno = {}
		set retorno.percentual = $fnumber(perc,",",2)
		set retorno.pendentes = string
		set retorno.idPainel = "T1"
		do vetorRet.%Push(retorno)
		if idPainel="" {
			write vetorRet.%ToJSON()
		}else{
			write retorno.%ToJSON()
		}
	}else{
		if idPainel'=""{
			set obj 	= $get(^VARWorkFlowPEP(0,cid,idPainel,1))
			set pai    	= $$$VARWorkFlowPEPPredecessor(obj)
			for{
				quit:pai=""
				set idPainel = pai
				set obj 	= $get(^VARWorkFlowPEP(0,cid,idPainel,1))
				set pai   	= $$$VARWorkFlowPEPPredecessor(obj)
			}
		}
		;
		if idPainel=""{
			set vetorRet = []
			set idPainel = ""
			for {
				set idPainel = $order(^VARWorkFlowPEPs(0,1,cid," ",cid,idPainel)) if idPainel="" quit
				set obj = $get(^VARWorkFlowPEP(0,cid,idPainel,1))
				set pred = $$$VARWorkFlowPEPPredecessor(obj)
				if pred'="" continue
				kill array
				set vetor = ..recFilhos(cid,ficha,fichaSeq,idPainel,"",paciente,idPainel,.array)
				set total = $piece(vetor,"|",1)
				set resp = $piece(vetor,"|",2)
				;set string = $piece(vetor,"|",3)
				set alerta = $piece(vetor,"|",4)
				set alertaTexto = $piece(vetor,"|",5)
				set string = ""
				set seq1=""
				for{
					set seq1 = $order(array(seq1)) quit:seq1=""
					set seq2=""
					for{
						set seq2 = $order(array(seq1,seq2)) quit:seq2=""
						set totalIt = $piece(array(seq1,seq2),"|",1)
						set respIt = $piece(array(seq1,seq2),"|",2)
						set percIt=100
						set:+totalIt'=0 percIt = respIt*100/totalIt
						if percIt>100 set percIt = 100
						set objWF = $get(^VARWorkFlowPEP(0,cid,seq2,1))
						set Nome					= 	$$$VARWorkFlowPEPNome(objWF)
						set string = string_"<tr><td>"_Nome_"</td><td>"_$fnumber(percIt,".",2)_"%</td></tr>"
					}
					
				}
				set perc=100
				set:+total'=0 perc = resp*100/total
				if perc>100 set perc = 100
				set retorno = {}
				set retorno.idPainel = idPainel
				set retorno.alerta = alerta
				set retorno.alertaTexto = alertaTexto
				set retorno.percentual = $fnumber(perc,",",2)
				set retorno.pendentes = string
				do vetorRet.%Push(retorno)
			}
			write vetorRet.%ToJSON()
		}else{
			set vetor = ..recFilhos(cid,ficha,fichaSeq,idPainel,"",paciente,idPainel,.array)
			set total = $piece(vetor,"|",1)
			set resp = $piece(vetor,"|",2)
			;set string = $piece(vetor,"|",3)
			set alerta = $piece(vetor,"|",4)
			set alertaTexto = $piece(vetor,"|",5)
			set string = ""
			set seq1=""
			for{
				set seq1 = $order(array(seq1)) quit:seq1=""
				set seq2=""
				for{
					set seq2 = $order(array(seq1,seq2)) quit:seq2=""
					set totalIt = $piece(array(seq1,seq2),"|",1)
					set respIt = $piece(array(seq1,seq2),"|",2)
					set percIt=100
					set:+totalIt'=0 percIt = respIt*100/totalIt
					if percIt>100 set percIt = 100
					set objWF = $get(^VARWorkFlowPEP(0,cid,seq2,1))
					set Nome					= 	$$$VARWorkFlowPEPNome(objWF)
					set string = string_"<tr><td>"_Nome_"</td><td>"_$fnumber(percIt,".",2)_"%</td></tr>"
				}
				
			}
			set perc=100
			set:+total'=0 perc = resp*100/total
			if perc>100 set perc = 100
			set retorno = {}
			set retorno.percentual = $fnumber(perc,",",2)
			set retorno.pendentes = string
			set retorno.alerta = alerta
			set retorno.idPainel = idPainel
			set retorno.alertaTexto = alertaTexto_"|"_idPainel
			write retorno.%ToJSON()
		}
	}
	quit]]></Implementation>
</Method>

<Method name="recFilhos">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,ficha,fichaSeq,idPainel,idSubPainel,paciente,grupoPrincipal,&amp;array</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if idSubPainel="" set idSubPainel = " "
	set Total = 0, Completo = 0, Pendentes = "", alerta = 0, alertaTexto = ""
	if '$data(^VARWorkFlowPEPs(0,3,cid,idPainel,idSubPainel,cid)),$data(^mtemp.MAPPAMenuLean(0,%session.SessionId,idPainel,1)){
		set Sequencia = idPainel
		set objP = $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
		set Tipo = $$$VARWorkFlowPEPTipodeWorkflow(objP)
		if Tipo="" quit ""
		set SequenciaBusca = Sequencia
		if Tipo=21{
			set grupoWF = 16,flGrupo=1
			set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,"",..recConsultaAnterior(paciente,ficha))
			if campoPreenchido.valor=""{
				set grupoWF = 15,flGrupo=1
				set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,ficha,fichaSeq)
				set SequenciaBusca = campoPreenchido.sequencia
			}
		}				
		set sai = 0
		set respOpcoes=""
		if Tipo'=1,Tipo'=8,Tipo'=10{
			set Total = Total +1
		}
		if Tipo=2||(Tipo=9)||(Tipo=11){
			set ultData = $order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,""),-1)
			set ultHora = ""
			if ultData'="" set ultHora = $order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,""),-1)
			if ultHora'="" {
				set respOpcoes = $piece(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,ultHora,1),"~",1)
			}else{
				set sai = 1
			}
		}
		set ultData = +$order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,""),-1)
		set ultHora = +$order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,""),-1)
		if $data(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,ultHora)) {
			set objValor = $get(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,+ultData,+ultHora,1))
			set valor = $$$VARPEPPremiumValorRegistrado(objValor)
			set valor2 = $$$VARPEPPremiumValorRegistrado2(objValor)
			if valor'="" set Completo = Completo+1
			set objWF 	= $get(^VARWorkFlowPEP(0,cid,SequenciaBusca,1))
			set alertMenor = $$$VARWorkFlowPEPAlertaResultadoMenorQue(objWF)
			set alertMaior = $$$VARWorkFlowPEPAlertaResultadoMaiorQue(objWF)
			set alertLocal=""
			if valor'="",alertMenor'="",valor<alertMenor set alerta = 1,alertLocal = "<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valor Informado: <font color=red>"_$fnumber(valor,".")_"</font></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limite para Alerta: <font color=red>Menor que "_$fnumber(alertMenor,".")_"</font></td>"
			if valor'="",alertMaior'="",valor>alertMaior set alerta = 1,alertLocal = "<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valor Informado: <font color=red>"_$fnumber(valor,".")_"</font></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limite para Alerta: <font color=red>Maior que "_$fnumber(alertMaior,".")_"</font></td>"
			if alertLocal'=""{
			set desc = ..recDescricaoWorkFlow(cid,SequenciaBusca)
				set alertaTexto = alertaTexto_"<tr><td>"_desc_"</td>"_alertLocal_"</tr>"
			}
		}else{
			if Tipo'=1,Tipo'=8,Tipo'=10{
				set caminho = ""
				set seqDesc = SequenciaBusca
				for {
					set obj 	= $get(^VARWorkFlowPEP(0,cid,seqDesc,1))
					set desc = ..recDescricaoWorkFlow(cid,seqDesc)
					set seqDesc = $$$VARWorkFlowPEPPredecessor(obj)
					quit:seqDesc=""
					;
					set:caminho'="" caminho = " > "_caminho
					set caminho = desc_caminho
				}
				set Pendentes = Pendentes_"<tr><td>"_caminho_"</td></tr>"
			}
		}
	}else{
		set Sequencia = ""
		for {
			set Sequencia = $order(^VARWorkFlowPEPs(0,3,cid,idPainel,idSubPainel,cid,Sequencia)) quit:Sequencia=""
			set objP = $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
			set Tipo = $$$VARWorkFlowPEPTipodeWorkflow(objP)
			set SequenciaBusca = Sequencia
			if Tipo=21{
				set grupoWF = 16,flGrupo=1
				set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,"",..recConsultaAnterior(paciente,ficha))
				if campoPreenchido.valor=""{
					set grupoWF = 15,flGrupo=1
					set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,ficha,fichaSeq)
					set SequenciaBusca = campoPreenchido.sequencia
				}
			}				
			set sai = 0
			set respOpcoes=""
			if Tipo'=1,Tipo'=8,Tipo'=10{
				set Total = Total +1
			}
			if Tipo=2||(Tipo=9)||(Tipo=11){
				set ultData = $order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,""),-1)
				set ultHora = ""
				if ultData'="" set ultHora = $order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,""),-1)
				if ultHora'="" {
					set respOpcoes = $piece(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,ultHora,1),"~",1)
				}else{
					set sai = 1
				}
			}
			set ultData = +$order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,""),-1)
			set ultHora = +$order(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,""),-1)
			if $data(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,ultData,ultHora)) {
				set objValor = $get(^VARPEPPremium(0,paciente,cid,ficha,fichaSeq,SequenciaBusca,+ultData,+ultHora,1))
				set valor = $$$VARPEPPremiumValorRegistrado(objValor)
				set valor2 = $$$VARPEPPremiumValorRegistrado2(objValor)
				if valor'="" set Completo = Completo+1
				set objWF 	= $get(^VARWorkFlowPEP(0,cid,SequenciaBusca,1))
				set alertMenor = $$$VARWorkFlowPEPAlertaResultadoMenorQue(objWF)
				set alertMaior = $$$VARWorkFlowPEPAlertaResultadoMaiorQue(objWF)
				set alertLocal=""
				if valor'="",alertMenor'="",valor<alertMenor set alerta = 1,alertLocal = "<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valor Informado: <font color=red>"_$fnumber(valor,".")_"</font></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limite para Alerta: <font color=red>Menor que "_$fnumber(alertMenor,".")_"</font></td>"
				if valor'="",alertMaior'="",valor>alertMaior set alerta = 1,alertLocal = "<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Valor Informado: <font color=red>"_$fnumber(valor,".")_"</font></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limite para Alerta: <font color=red>Maior que "_$fnumber(alertMaior,".")_"</font></td>"
				if alertLocal'=""{
					set desc = ..recDescricaoWorkFlow(cid,SequenciaBusca)
					set alertaTexto = alertaTexto_"<tr><td>"_desc_"</td>"_alertLocal_"</tr>"
				}
			}else{
				if Tipo=7 {
					set Completo = Completo + 1 
					continue
				}
				if Tipo'=1,Tipo'=8,Tipo'=10{
					set caminho = ""
					set seqDesc = SequenciaBusca
					for {
						set obj 	= $get(^VARWorkFlowPEP(0,cid,seqDesc,1))
						set desc = ..recDescricaoWorkFlow(cid,seqDesc)
						set seqDesc = $$$VARWorkFlowPEPPredecessor(obj)
						quit:seqDesc=""
						;
						set:caminho'="" caminho = " > "_caminho
						set caminho = desc_caminho
					}
					set Pendentes = Pendentes_"<tr><td>"_caminho_"</td></tr>"
				}
			}
			if sai continue
			set vetor = ..recFilhos(cid,ficha,fichaSeq,SequenciaBusca,respOpcoes,paciente,grupoPrincipal,.array)
			set Total = Total + $piece(vetor,"|",1)
			set Completo = Completo + $piece(vetor,"|",2)
			set Pendentes = Pendentes_$piece(vetor,"|",3)
			set alerta = alerta+$piece(vetor,"|",4)
			set alertaTexto = alertaTexto_$piece(vetor,"|",5)
			set obj=objP
			set pai=Sequencia
			for{
				set pred = $$$VARWorkFlowPEPPredecessor(obj)
				if (pred="")||(pred=grupoPrincipal) quit
				set pai = pred
				set obj = $get(^VARWorkFlowPEP(0,cid,pred,1))
			}
			if pred'=""{
				set obj = $get(^VARWorkFlowPEP(0,cid,pai,1))
				set SequenciadeExibicao	= $$$VARWorkFlowPEPSequenciadeExibicao(obj)
				set Tipo	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if Tipo=10{
					set paiObj = $get(array(SequenciadeExibicao,pai))
					set $piece(paiObj,"|",1) = $piece(paiObj,"|",1)+$piece(vetor,"|",1)
					set $piece(paiObj,"|",2) = $piece(paiObj,"|",2)+$piece(vetor,"|",2)
					set $piece(paiObj,"|",3) = $piece(paiObj,"|",3)+$piece(vetor,"|",3)
					set array(SequenciadeExibicao,pai)=paiObj
				}
			}
		}
	}
	quit Total_"|"_Completo_"|"_Pendentes_"|"_alerta_"|"_alertaTexto]]></Implementation>
</Method>

<Method name="recPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set job = %session.SessionId
	set codPaciente = $get(%request.Data("codPaciente",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	if codPaciente="" {
		set retorno={}
		set retorno.erro=1
		write retorno.%ToJSON()
		quit
	}
	If (codPaciente = "") {
		set retorno={}
		set retorno.erro=""
		write retorno.%ToJSON()
		Quit	
	}
	Kill ^mtemp.estadiamentoAtual(job)
	kill ^mtemp.valoresEstadiamentoSalvos(job)
	set obj = $get(^MEDPatient(0,codPaciente,1))
	set nomePaciente = $$$MEDPatientName(obj)
	set sexo = $$$MEDPatientGender(obj)
	set dtNascimento = $$$MEDPatientDOB(obj)
	set alergias = $$$MEDPatientAllergies(obj)
	set prontuario = $$$MEDPatientPID(obj)
	set Telefone = $$$MEDPatientTel(obj)
	set Telefone2 = $$$MEDPatientFREE2(obj)
	set MedicoResponsavel = $$$MEDPatientMedicoResponsavel(obj)
	;
	set YBED1 = YBED
	;if YBED1="SILMARADM" set YBED1 = "ERIVALDO"
	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED1),""))
	set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
	set perm=1
	if perm'=1{
		set erro=0
		if codProvider="" set erro = 1
		;e  if (codProvider'=MedicoResponsavel&&'$data(^MEDAdmissions(0,300,codProvider,codPaciente))) set erro=1
		if erro{
			set retorno={}
			set retorno.erro=1
			write retorno.%ToJSON()
			quit
		}
	}
	set retorno = {}
	set retorno.codPaciente	= codPaciente
	set retorno.paciente	= nomePaciente
	set retorno.sexo		= sexo
	set idade = ..getIdade(dtNascimento)
	if idade>0 set idadeD = " anos"
	if idade<2 set idadeD = " ano"
	if idade="" set idadeD = ""
	set retorno.idade	 	= ..getIdade(dtNascimento)_idadeD
	;
	;set fname = ..copiaArquivoParaTemp(codPaciente)
	;
	;set arquivoAnt = $get(^mtemp.ArquivoFotoPEP(%session.SessionId))
	;if arquivoAnt'=""{
	;	do ..removeArquivoTemp(arquivoAnt)
	;}
	;if fname'=""{
	;	set ^mtemp.ArquivoFotoPEP(%session.SessionId) = fname
	;	set retorno.ImageSRC = YGIF_"/temp/"_fname
	;}else{
	;	if sexo=2 set retorno.ImageSRC = YGIF_"/profile_girl.jpg"
	;	e  set retorno.ImageSRC = YGIF_"/profile.jpg"
	;}
	;
	do ..atualizaPEPPrimario(codPaciente)
	set cid = "",desc = "",novaConsulta=0
	set ficha 	= $order(^VARPEPPremiumConsulta(YM,codPaciente,""),-1)
	if ficha="" set ficha = ficha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1)),"~",4)'="" {
		Set novaConsulta=ficha
		set ficha = ficha+1
	}else{
		if $piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1)),"~",1)'=""{
			set cid=$piece($get(^VARPEPPremiumConsulta(YM,codPaciente,ficha,1)),"~",1)
		}
	}
	;
	if cid=""{
		set obj = $get(^VARPEPPremiumPrimario(YM,codPaciente,ficha,1))
		set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if $data(^VARWorkFlowCID(YM,ccid)) set cid=ccid quit
		}
	}
	set desc = ""
	if cid'=""{
		set desc = "("_cid_") "_$piece($get(^VARCID(0,cid,1)),"~",1)
	}
	;
	set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
	set alturaPeso  = $Select(
						+$$$VARPEPPremiumPrimarioAnamneseAltura(objAna)=0:"",1:$FNumber($$$VARPEPPremiumPrimarioAnamneseAltura(objAna)/100,"",2)
						)_"/"_$Select(+$$$VARPEPPremiumPrimarioAnamnesePeso(objAna)=0:"",1:$$$VARPEPPremiumPrimarioAnamnesePeso(objAna)_"Kg")
	
	Set retorno.alturaPeso = alturaPeso
	set retorno.ficha 		= ficha
	set retorno.CID 		= desc
	set retorno.CodCID 		= cid
	;
	set query = "Select NumerodaConsulta from VARPEPPremiumConsulta "
	set query = query_" where Company = 0 and %upper(ciddopaciente) = '"_cid_"' and %upper(codigodopaciente)='"_codPaciente_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	kill vetor
	while(rs.%Next()){
		set consulta = rs.%Get("NumerodaConsulta")
		set data = ..recDataConsulta(codPaciente, consulta,1)
		set vetor(data,consulta)=""
	}
	set inicioAtendimento = $order(vetor(""))
	set ultimoAtendimento = $order(vetor(""),-1)
	;
	set retorno.inicioTrat 	= $select(inicioAtendimento="":"-",1:$zdate(inicioAtendimento,4))
	set retorno.ultimoAtend	= $select(ultimoAtendimento="":"-",1:$zdate(ultimoAtendimento,4))
	set retorno.resumo 		= ..getResumoPaciente(codPaciente,cid,ficha)
	;
	If (novaConsulta'=0&&(cid="C90.0")) {
		If ($Data(^VARPEPPremiumPrescricaos(0,1,codPaciente,novaConsulta," "))) {
			Set xNumPresc = $Order(^VARPEPPremiumPrescricaos(0,1,codPaciente,novaConsulta," ",""))
			Set linha = "", valor = ""
			For {
				Set linha = $Order(^VARPEPPremiumPrescricao(0,xNumPresc,linha))
				Quit:linha=""
				
				Set valor = valor _$Select(valor="":"",1:";")_ $$$VARPEPPremiumPrescricaoCodigodoMedicamento(^VARPEPPremiumPrescricao(0,xNumPresc,linha,1))
			}
			Do:valor'="" ..salvaPainel(codPaciente, 48250, valor, cid, ficha, 1, +$Horolog)
		}	
	}
	;
	If (novaConsulta'=0&&(cid="C90.0")) {
		If ($Data(^VARPEPPremiumPrescricaos(0,1,codPaciente,novaConsulta," "))) {
			Set xNumPresc = $Order(^VARPEPPremiumPrescricaos(0,1,codPaciente,novaConsulta," ",""))
			Set linha = "", valor = ""
			For {
				Set linha = $Order(^VARPEPPremiumPrescricao(0,xNumPresc,linha))
				Quit:linha=""
				
				Set valor = valor _$Select(valor="":"",1:";")_ $$$VARPEPPremiumPrescricaoCodigodoMedicamento(^VARPEPPremiumPrescricao(0,xNumPresc,linha,1))
			}
			Do:valor'="" ..salvaPainel(codPaciente, 48250, valor, cid, ficha, 1, +$Horolog)
		}	
	}
	;
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recCiclosTratamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,regime</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if codPaciente=""||(cid="")||(ficha="")||(regime="") quit ""
	set ciclos = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,""),-1)
	set ciclo="" 
	for {
		set ciclo = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo)) quit:ciclo=""
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo,1))
		set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
		if conclusao'=1 quit
	}
	if ciclo="" set ciclo=ciclos
	set obj = {}
	set obj.ciclo = ciclo
	set obj.ciclos=ciclos
	quit obj]]></Implementation>
</Method>

<Method name="getResumoPaciente">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if (codPaciente="")||(cid="")||(ficha="") quit ""
	;set retorno="<ul style='margin-left:1px;margin-block-start: 1px;padding-inline-start: 15px;'>"
	set retorno = ""
	;
	set obj = $get(^VARWorkFlowCID(0,cid,1))
	set desc = $$$VARWorkFlowCIDDescricao(obj)
	;set retorno = retorno_"<li>Diagnóstico: "_desc_"</li>"
	;set retorno = retorno_"Diagnóstico: "_desc
	;
	set grupoOff = 1
	if cid="C91.1"{
		; Verifica Mutação IGVH
		set campoPreenchido = ..recCampoPreenchidoFichas(141,codPaciente,cid,ficha,grupoOff)
		set:campoPreenchido'="" igvh(campoPreenchido.ficha,$select(campoPreenchido.valor="":" ",1:campoPreenchido.valor))=""
		set campoPreenchido = ..recCampoPreenchidoFichas(413,codPaciente,cid,ficha,grupoOff)
		set:campoPreenchido'="" igvh(campoPreenchido.ficha,$select(campoPreenchido.valor="":" ",1:campoPreenchido.valor))=""
		set ultF = $order(igvh(""),-1)
		if ultF'="",$data(igvh(ultF,0)) {
			;set retorno = retorno_"<li>IGVH Mutado</li>"
			set retorno = retorno_", IGVH Mutado"
		}elseif ultF'="",$data(igvh(ultF,1)) {
			;set retorno = retorno_"<li>IGVH Não Mutado</li>"
			set retorno = retorno_", IGVH Não Mutado"
		}
		;
		; Verifica Mutação TP53
		set campoPreenchido = ..recCampoPreenchidoFichas(142,codPaciente,cid,ficha,grupoOff)
		set:campoPreenchido'="" tp53(campoPreenchido.ficha,$select(campoPreenchido.valor="":" ",1:campoPreenchido.valor))=""
		set ultF = $order(tp53(""),-1)
		if ultF'="",$data(tp53(ultF,0)) {
			;set retorno = retorno_"<li>TP53 Mutado</li>"
			set retorno = retorno_", TP53 Mutado"
		}elseif ultF'="",$data(tp53(ultF,1)) {
			;set retorno = retorno_"<li>TP53 Não Mutado</li>"
			set retorno = retorno_", TP53 Não Mutado"
		}
		;
		; Verifica Mutação 17p
		set campoPreenchido = ..recCampoPreenchidoFichas(1926,codPaciente,cid,ficha,grupoOff)
		set:campoPreenchido'="" del17p(campoPreenchido.ficha,$select(campoPreenchido.valor="":" ",1:campoPreenchido.valor))=""
		set campoPreenchido = ..recCampoPreenchidoFichas(1941,codPaciente,cid,ficha,grupoOff)
		set:campoPreenchido'="" del17p(campoPreenchido.ficha,$select(campoPreenchido.valor="":" ",1:campoPreenchido.valor))=""
		set ultF = $order(del17p(""),-1)
		if ultF'="",$data(del17p(ultF,1)) {
			set retorno = retorno_", Del 17p"
		}elseif ultF'="",$data(del17p(ultF,2)) {
			;set retorno = retorno_"<li>TP53 Não Mutado</li>"
			;set retorno = retorno_", sem alteração em Del 17p"
		}
		;
	}	
	;
	; Busca Tratamento Atual:
	;
	set regime = ""
	set campoPreenchido = ..recTratamento(codPaciente,cid,ficha)
	if campoPreenchido'=""{
		if campoPreenchido.ficha=ficha{
			set sequencia = campoPreenchido.sequencia
			set tratamento = $piece(campoPreenchido.valor,";",1)
			set regime = $piece(campoPreenchido.valor,";",2)
		}
	}
	;set regime = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,""))
	if regime'=""{
		set objCiclos = ..recCiclosTratamento(codPaciente,cid,ficha,regime)
		set objTrat = $get(^VARWorkFlowRegTera(0,cid,regime,1))
		set descricao = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)
		;set retorno = retorno_"<li>Em Tratamento com <b>"_descricao_"</b> (ciclo "_objCiclos.ciclo_" de "_objCiclos.ciclos_")</li>"
		set retorno = retorno_", em tratamento com <b>"_descricao_"</b>"
	}
	set ultRegime = regime
	;
	; Busca Tratamentos Anteriores:
	;
	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumConsulta(0,codPaciente,fichaAux)) quit:fichaAux=""
		set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,fichaAux,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)

		if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
		if fichaAux'=ficha,$$$VARPEPPremiumConsultaConsultaInativada(objFicha) continue
		set vetor(data,fichaAux)=""
		set vetor1(fichaAux)=data
	}	
	;
	set conttrat = 0
	kill anteriores
	set data = $get(vetor1(ficha))
	if data'="" set data = data+1
	for {
		set data=$order(vetor(data),-1) quit:data=""
		if data=$get(vetor1(ficha)) set fichaAnt = ficha
		else  set fichaAnt=""
		for {
			set fichaAnt=$order(vetor(data,fichaAnt),-1) quit:fichaAnt=""
			set regime = ""
			set campoPreenchido = ..recTratamento(codPaciente,cid,fichaAnt)
			if campoPreenchido'=""{
				if campoPreenchido.ficha'=ficha{
					set sequencia = campoPreenchido.sequencia
					set tratamento = $piece(campoPreenchido.valor,";",1)
					set regime = $piece(campoPreenchido.valor,";",2)
				}
			}
			;set regime = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,fichaAnt,""))
			if regime'=""{
				if regime=ultRegime continue
				set objTrat = $get(^VARWorkFlowRegTera(0,cid,regime,1))
				if objTrat="" continue
				set objCiclos = ..recCiclosTratamento(codPaciente,cid,fichaAnt,regime)
				if objCiclos.ciclo="" continue
				set ultRegime = regime
				set descricao = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)
				set anteriores($increment(conttrat)) = descricao
				;set retorno = retorno_"<li>Tratado com "_descricao_"</li>" ; (até o ciclo "_objCiclos.ciclo_")</li>"
				
			}
		}
	}
	if $data(anteriores){
		if conttrat>1{
			set retorno = retorno_", tratamentos anteriores: "
		}else{
			set retorno = retorno_", tratamento anterior: "
		}
		set sequencia = ""
		for {
			set sequencia = $order(anteriores(sequencia)) quit:sequencia=""
			if sequencia>1 set retorno = retorno_", "
			set retorno = retorno_anteriores(sequencia)
			
		}
	}
	
	/*set campoPreenchido = ..recCampoPreenchidoFichas(101,codPaciente,cid,ficha,grupoOff)
	if campoPreenchido'=""{
		if campoPreenchido.valor=1 {
			set retorno = retorno_"<li>Diagnóstico de anemia hemolítica auto-imune em "_$zdate(campoPreenchido.data,4)_"</li>"
		}
	}
	
	;
	; Verifica Presença de Hepatomegalia
	set campoPreenchido = ..recCampoPreenchidoFichas(1350,codPaciente,cid,ficha,grupoOff)
	if campoPreenchido'=""{
		if campoPreenchido.valor=1 set retorno = retorno_"<li>Presença de hepatomegalia em "_$zdate(campoPreenchido.data,4)_"</li>"
	}
	; Verifica Presença de Esplenomegalia
	set campoPreenchido = ..recCampoPreenchidoFichas(1351,codPaciente,cid,ficha,grupoOff)
	if campoPreenchido'=""{
		if campoPreenchido.valor=1 set retorno = retorno_"<li>Presença de Esplenomegalia em "_$zdate(campoPreenchido.data,4)_"</li>"
	}
	; Verifica Presença de Linfodomegalia
	set retornoLinfo = ..recuperaLinfodomegalia(codPaciente,cid,ficha)
	if retornoLinfo'=""{
		set retorno = retorno_"<li>Presença de linfonodomegalia (região "_retornoLinfo_"</li>"
	}
	; Última contagem de linfócitos
	set campoPreenchido = ..recCampoPreenchidoFichas(29,codPaciente,cid,ficha,grupoOff)
	if campoPreenchido'=""{
		if campoPreenchido.valor'="" set retorno = retorno_"<li>Contagem de linfocitos: "_campoPreenchido.valor_"/mm³ em "_$zdate(campoPreenchido.data,4)_"</li>"
	}*/
	if cid="C91.1" {
		;If (retorno'="") {
			If ($Data(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1))) {
				If ($Extract(retorno,1)=",") {
					Set retorno	= $Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",2)_" "_retorno
				}Else{
					Set retorno	= $Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",2)_", "_retorno
				}
			}
			/*If ($Extract(retorno,1)=",") {
				Set retorno	= "LLC "_retorno
			}Else{
				Set retorno	= "LLC, "_retorno
			}*/
			Set retSalvar = $Replace(retorno,"<b>"," ")
			Set retSalvar = $Replace(retSalvar,"</b>"," ")
			Do ..salvaPainel(codPaciente, 1999, retSalvar, cid, ficha, 1, $Horolog)
		;}
		Set valorResumoMedico = $Piece(..recValorSalvo(codPaciente,cid,ficha,1,2000),"~",1)
		If (valorResumoMedico'="") Set retorno = $Replace(valorResumoMedico,"\n"," ")
	}
	if cid="C90.0" {
		;If (retorno'="") {
			If ($Data(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1))) {
				If ($Extract(retorno,1)=",") {
					Set retorno	= $Select(
													$Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",6)'="":$Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",6),
													1:$Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",2)
												)_" "_retorno
				}Else{
					Set retorno	= $Select(
													$Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",6)'="":$Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",6),
													1:$Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",2)
												)_", "_retorno
				}
			}
			/*If ($Extract(retorno,1)=",") {
				Set retorno	= "Discrasias Plasmáticas "_retorno
			}Else{
				Set retorno	= "Discrasias Plasmáticas, "_retorno
			}*/
			Set retSalvar = $Replace(retorno,"<b>"," ")
			Set retSalvar = $Replace(retSalvar,"</b>"," ")
			Do ..salvaPainel(codPaciente, 48252, retSalvar, cid, ficha, 1, $Horolog)
		;}
		Set valorResumoMedico = $Piece(..recValorSalvo(codPaciente,cid,ficha,1,48253),"~",1)
		If (valorResumoMedico'="") Set retorno = $Replace(valorResumoMedico,"\n"," ")
	}
	quit retorno]]></Implementation>
</Method>

<Method name="recuperaLinfodomegalia">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set sequencias($increment(sequencia))="285~occiptal"
	;
	set sequencias($increment(sequencia))="199~pré auricular esquerda"
	set sequencias($increment(sequencia))="200~pré auricular direita"
	set sequencias($increment(sequencia))="201~retro auricular esquerda"
	set sequencias($increment(sequencia))="202~retro auricular direita"
	;	
	set sequencias($increment(sequencia))="1370~submandibular esquerda"
	set sequencias($increment(sequencia))="1371~submandibular direita"
	set sequencias($increment(sequencia))="1404~submentoniano"
	;
	set sequencias($increment(sequencia))="265~epitroclear esquerda"
	;set sequencias($increment(sequencia))="884~epitroclear direita"
	;
	
	set sequencias($increment(sequencia))="253~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias($increment(sequencia))="1052~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias($increment(sequencia))="1055~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias($increment(sequencia))="1056~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias($increment(sequencia))="1057~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias($increment(sequencia))="1058~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~"
	;
	set sequencias($increment(sequencia))="82~cervical anterior esquerda"
	set sequencias($increment(sequencia))="83~cervical anterior direita"
	set sequencias($increment(sequencia))="84~cervical posterior esquerda"
	set sequencias($increment(sequencia))="85~cervical posterior direita"
	;	
	set sequencias($increment(sequencia))="875~supraclavicular esquerda"
	set sequencias($increment(sequencia))="876~supraclavicular direita"
	;	
	set sequencias($increment(sequencia))="233~axilar esquerda"
	set sequencias($increment(sequencia))="234~axilar direita"
	;
	set sequencias($increment(sequencia))="887~braquial esquerda"
	set sequencias($increment(sequencia))="888~braquial direita"
	;
	set sequencias($increment(sequencia))="223~inguinal esquerda"
	set sequencias($increment(sequencia))="224~inguinal direita"
	;
	set sequencias($increment(sequencia))="893~poplítea esquerda"
	set sequencias($increment(sequencia))="894~poplítea direita"
	;
	set retorno = ""
	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumConsulta(0,codPaciente,fichaAux)) quit:fichaAux=""
		set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,fichaAux,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)
		if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
		if fichaAux'=ficha,$$$VARPEPPremiumConsultaConsultaInativada(objFicha) continue
		set vetor(data,fichaAux)=""
		set vetor1(fichaAux)=data
	}	
	set flAchou = 0
	set flGrupo=1,flFichaAtual=1
	set data = $get(vetor1(ficha))
	if data'="" set data = data+1
	for {
		set data=$order(vetor(data),-1) quit:data=""
		quit:flAchou
		if data=$get(vetor1(ficha)) set fichaAnt = ficha+1
		else  set fichaAnt=""
		for {
			set fichaAnt=$order(vetor(data,fichaAnt),-1) quit:fichaAnt=""
			quit:flAchou
			set flFichaAtual=1
			if fichaAnt'=ficha set flFichaAtual=0
			;
			set ret = ..recValorSalvo(codPaciente,cid,fichaAnt,1,69) ; Paciente tem Linfonodomegalia ao Exame Físico?
			set valor = $piece(ret,"~",1)
			set dataP  = $piece(ret,"~",3)
			if valor=0 {
				CONTINUE
				;set flAchou=1 quit
			}
			set sequencia=""
			for {
				set sequencia = $order(sequencias(sequencia)) quit:sequencia=""
				set campo = $piece(sequencias(sequencia),"~",1)
				set retPais = ..verificaNivelPais(codPaciente,cid,fichaAnt,1,campo) 
				if retPais<=0{
					continue
				}	
				set ret = ..recValorSalvo(codPaciente,cid,fichaAnt,1,campo)
				set valor = $piece(ret,"~",1)
				set dataP  = $piece(ret,"~",3)
				if valor'="" {
					if retorno'="" set retorno = retorno_", "
					set retorno = retorno_$piece(sequencias(sequencia),"~",2)
					set dataGrav = dataP
					set flAchou=1
				}
			}
		}
	}
	if flAchou set retorno = retorno_") em "_$zdate(dataGrav,4)
	quit retorno]]></Implementation>
</Method>

<Method name="atualizaPEPPrimario">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ficha 	= $order(^VARPEPPremiumConsulta(0,codPaciente,""),-1)
	if ficha="" set ficha = ficha + 1
	if $piece($get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1)),"~",4)'="" {
		set ficha = ficha+1
	}
	;
	set cid=""
	set ultFicha = $o(^VARPEPPremiumPrimario(0,codPaciente,""),-1)
	if ultFicha'=""{
		set obj = $get(^VARPEPPremiumPrimario(0,codPaciente,ultFicha,1))
		set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if $data(^VARWorkFlowCID(0,ccid)) set cid=ccid quit
		}
	}
	;
	set ultimaDataPEPPrimario=""
	if ultFicha'=""{
		set objPep = $get(^VARPEPPremiumPrimario(0,codPaciente,ultFicha,1))
		set ultimaDataPEPPrimario = $piece(objPep,"~",150)
		if $piece(objPep,"~",152)'="" set ultimaDataPEPPrimario = $piece(objPep,"~",152)
		if ultFicha<ficha||('$data(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))){
			set $piece(objPep,"~",150) = $horolog
			set $piece(objPep,"~",151) = "AUTO"
			set $piece(objPep,"~",152) = ""
			set $piece(objPep,"~",153) = ""
			set ret = $$$Save("VARPEPPremiumPrimario",codPaciente_","_ficha,objPep,1)
		}
	}
	;
	set query($i(contador)) = "select Top 1 DateAdmitted,VARPEP.Admissao "
	set query($i(contador)) = "from MEDAdmission, VARPEP "
	set query($i(contador)) = "where MEDAdmission.company=0 and VARPEP.company=0 and"
	set query($i(contador)) = "MEDAdmission.Patient='"_codPaciente_"' and"
	if ultimaDataPEPPrimario'="" set query($i(contador)) = "DateAdmitted>"_ultimaDataPEPPrimario_" and"
	set query($i(contador)) = "MEDAdmission.AdmissionID=VARPEP.admissao"
	set query($i(contador)) = "Order by DateAdmitted desc, TimeAdmitted desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno=[]
	while(rs.%Next()){
		set ultimoPEP = rs.%Get("Admissao")
		set DateAdmitted = rs.%Get("DateAdmitted")
		set nobj = $get(^VARPEP(0,ultimoPEP,1))
		;
		set altura = $$$VARPEPPremiumPrimarioAnamneseAltura(nobj)
		if altura'="" set altura = altura/100
		set $$$VARPEPPremiumPrimarioAnamneseAltura(nobj) = altura
		;
		set $piece(nobj,"~",150) = $horolog
		set $piece(nobj,"~",151) = "AUTO"
		set $piece(nobj,"~",152) = ""
		set $piece(nobj,"~",153) = ""
		;
		if cid'=""{
			set cids = $$$VARPEPPremiumPrimarioAnamneseHD(nobj)
			set achou=0
			for i=1:1:$length(cids,";"){
				set ccid = $piece(cids,";",i)
				if ccid=cid set achou=1 quit
			}
			if 'achou {
				set cids = cids_";"_cid
				set $$$VARPEPPremiumPrimarioAnamneseHD(nobj) = cids
			}
		}
		;
		set data = +$horolog
		set ret = $$$Save("VARPEPPremiumPrimario",codPaciente_","_ficha,nobj,1)
		quit
	}
	quit 1]]></Implementation>
</Method>

<Method name="abreTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	;
	set campoPreenchido	= ..recTratamento(codPaciente,cid,ficha)
	;
	set tratamento = $piece(campoPreenchido.valor,";",1)
	set codRegime = $piece(campoPreenchido.valor,";",2)
	;
	if campoPreenchido.valor=""{
		set campoPreenchido.valor="x"
	}else{
		set tratamento = $piece(campoPreenchido.valor,";",1)
		set codRegime = $piece(campoPreenchido.valor,";",2)
		if $data(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime)){
			set campoPreenchido.valor="x"
			set campoPreenchido.predecessor = "TRAT"
		}
		
	}
	
	set retorno = {}
	set retorno.campo = campoPreenchido
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	Set dataPEP		= $Get(%request.Data("dataPEP",1))
	Set ciclo		= $Get(%request.Data("ciclo",1))
	Set tema		= $Get(%request.Data("tema",1))
	set ciclo		= $piece(ciclo,"º",1)
	if ciclo["." {
		set retorno = {}
		write retorno.%ToJSON()
		quit
	}
	;
	set codRegime = ""
	set campoPreenchido = ..recTratamento(codPaciente,cid,ficha)
	if campoPreenchido'=""{
		if campoPreenchido.ficha=ficha{
			set sequencia = campoPreenchido.sequencia
			set tratamento = $piece(campoPreenchido.valor,";",1)
			set codRegime = $piece(campoPreenchido.valor,";",2)
		}
	}
	;set codRegime = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,""),-1)
	set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo,1))
	set dataInicio 	= $$$VARPEPPremiumTratamentoDatadoIniciodoCiclo(obj)
	set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
	set dataFinal 	= $$$VARPEPPremiumTratamentoDatadoFinaldoCiclo(obj)
	;
	set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo-1,1))
	set emAndamento = 0
	if obj'=""{
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo-1,1))
		set conclusaoAnt	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
		if conclusaoAnt=1 set emAndamento = 1
	}else{
		set emAndamento = 1
	}
	;
	set retorno = {}
	set retorno.mensagem = "<b>"_ciclo_"º Ciclo</b><br>"
	if conclusao=0,emAndamento=1 {
		set retorno.mensagem = retorno.mensagem_"Iniciado em "_$zdate(dataInicio,4)_"<br><font style='color:"_$select(tema=1:"red",1:"yellow")_"'>Ciclo Atual"
	}elseif conclusao=1{
		set retorno.mensagem = retorno.mensagem_"Período de "_$zdate(dataInicio,4)_" à "_$zdate(dataFinal,4)_"<br>"_(dataFinal-dataInicio)_" dias"
	}else{
		set retorno.mensagem = retorno.mensagem_"Não iniciado"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="carregaLinhaTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("paciente",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	Set dataPEP		= $Get(%request.Data("dataPEP",1))
	Set tema		= $Get(%request.Data("tema",1))
	;
	do ..inicializaCiclos(codPaciente,cid,ficha,dataPEP)
	;
	set codRegime = ""
	set campoPreenchido = ..recTratamento(codPaciente,cid,ficha)
	if campoPreenchido'=""{
		if campoPreenchido.ficha=ficha{
			set sequencia = campoPreenchido.sequencia
			set tratamento = $piece(campoPreenchido.valor,";",1)
			set codRegime = $piece(campoPreenchido.valor,";",2)
		}
	}
	;	
	;set codRegime = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,""),-1)
	if codRegime=""{
		set retorno = {}
		set retorno.tratamento = "<b>Sem Tratamento Definido</b>"
		write retorno.%ToJSON()
		quit
	}
	if codRegime="0"{
		set retorno = {}
		set retorno.tratamento = "<b>Observação Sem Tratamento Específico (Watch and Wait)</b>"
		write retorno.%ToJSON()
		quit
	}
	kill vetorTempo
	set intervalos = 0
	set ciclo = ""
	for {
		set ciclo = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo)) quit:ciclo=""
		;
		set cicloReal = ciclo
		if '$data(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,cicloReal)) set cicloReal = $order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,""),-1)
		set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,cicloReal,1))
		set duracao = $$$VARWorkFlowRegTeraCicloPeriodicidade(objCiclos)
		set continuo = +$$$VARWorkFlowRegTeraCicloContinuo(objCiclos)
		;
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo,1))
		set dataInicio 	= $$$VARPEPPremiumTratamentoDatadoIniciodoCiclo(obj)
		set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
		set dataFinal 	= $$$VARPEPPremiumTratamentoDatadoFinaldoCiclo(obj)
		;
		set dias 		= dataFinal - dataInicio
		;
		if dias<0 set dias = $get(vetorTempo)*2
		if dias=0 set dias = 50
		;
		set cicloSave = ciclo
		if duracao="" set cicloSave = "."_ciclo
		set vetorTempo(cicloSave)=dias_"|"_conclusao_"|"_ciclo_"|"_continuo
	}
	set dados = []
	set series = []
	set linha = {}
	set objTrat = $get(^VARWorkFlowRegTera(YM,cid,codRegime,1))
	set flConc=0
	set corAnt = ""
	set ciclo=""
	set cicloAtual = ""
	set orderCiclo = 1
	set progr=0
	for {
		set ciclo = $order(vetorTempo(ciclo)) quit:ciclo=""
		set dias = $piece(vetorTempo(ciclo),"|",1)
		set conclusao = $piece(vetorTempo(ciclo),"|",2)
		set cicloReal = $piece(vetorTempo(ciclo),"|",3)
		set continuo = $piece(vetorTempo(ciclo),"|",4)
		if continuo=2,ciclo=1,$order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,""))'=$order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,""),-1) {
			set progr=0
			continue
		}
		
		set cor="#707070",corf="#C0C0C0"
		if ciclo["." set conclusao=1
		if conclusao=1 set cor="#56e878",corf="black"
		if conclusao=0,'flConc set cor="rgb(230,230,230)",corf="black",flConc=1,cicloAtual = orderCiclo
		if tema=3{
			if cor="#707070" set cor="#bbbbbb",corf="black"			
			if cor="#56e878" set cor="#56e878",corf="black"
			if cor="rgb(230,230,230)" set cor = "#007fff",corf="white"
		}
		if ciclo[".",$order(vetorTempo(ciclo))'="" continue
		if cicloAtual="" set cicloAtual = orderCiclo
		set linhas = {}
		set linhas.valueField = "ciclo"_cicloReal
		if ciclo["."{
			set linhas.name = "Uso contínuo"
		}else{
			if continuo=0{
				set linhas.name = (orderCiclo-progr)_"º Ciclo"
			}elseif continuo=1{
				set linhas.name = "Uso contínuo"
			}elseif continuo=2{
				set linhas.name = (orderCiclo-progr)_"º Ciclo (Até progr. doença)"
			}
		}
		set linhas.tratamento = "Cíclico"
		if ciclo["." set linhas.tratamento = "Contínuo"
		set linhas.stack = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)
		set linhas.color = cor
		set linhas.colorf = corf
		set corAnt = cor
		do series.%Push(linhas)
		set orderCiclo = orderCiclo + 1
	}
	;
	if cicloAtual=""{
		set ultC = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,""),-1)
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ultC,1))
	}else{
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,+cicloAtual,1))
	}
	set dataInicio 	= $$$VARPEPPremiumTratamentoDatadoIniciodoCiclo(obj)
	set dataFinal 	= $$$VARPEPPremiumTratamentoDatadoFinaldoCiclo(obj)
	set linha.tratamento = "Tratamento" ;$$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)_"<br><i>"_cicloAtual_"º ciclo iniciado em "_$zdate(dataInicio,4)_"</i></b>"
	;
	do dados.%Push(linha)
	set retorno = {}
	set retorno.dados = dados
	set retorno.series = series
	if $order(vetorTempo(.999))=""{
		if cicloAtual="" set retorno.tratamento = "<b>Tratamento com "_$$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)_" - concluído em "_$zdate(dataFinal,4,,2)_"</b>"
		else  set retorno.tratamento = "<b>Uso contínuo de "_$$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)_" (iniciado em "_$zdate(dataInicio,4,,2)_")</b>"
	}else{
		if cicloAtual="" set retorno.tratamento = "<b>Tratamento com "_$$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)_" - concluído em "_$zdate(dataFinal,4,,2)_"</b>"
		else  set retorno.tratamento = "<b>Atualmente no "_cicloAtual_"º ciclo de "_$$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTrat)_" (iniciado em "_$zdate(dataInicio,4,,2)_")</b>"
	}		
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getHistorico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("paciente",1))
	set cid = $get(%request.Data("codCID",1))
	;
	if paciente=""||(cid=""){
		write 1
		quit
	}
	set query = "Select NumerodaConsulta from VARPEPPremiumConsulta "
	set query = query_" where Company = 0 and %upper(ciddopaciente) = '"_cid_"' and %upper(codigodopaciente)='"_paciente_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	set hoje=0
	set dias = ""
	set retorno = [],dados=[]
	set ficha 	= $order(^VARPEPPremiumConsulta(YM,paciente,""),-1)
	if ficha="" set ficha = ficha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,paciente,ficha,1)),"~",4)'="" {
		set ficha = ficha+1
	}
	set FichadeAtendimento = 0
	kill vetor
	while(rs.%Next()){
		set FichadeAtendimento = rs.%Get("NumerodaConsulta")
		set datac = ..recDataConsulta(paciente, FichadeAtendimento,1)
		set data = datac
		if data=+$horolog set hoje = 1
		set dias = dias + 1
		;
		set objInativo = ..consultaIsInativa(paciente,FichadeAtendimento)
		if objInativo.inativo=2 continue
		set linhaData = {}
		do linhaData.%Set("Consulta",FichadeAtendimento)
		do linhaData.%Set("Inativa",objInativo.inativo)
		set linha = {}
		set linha.inativa = objInativo.inativo
		;
		if ficha=FichadeAtendimento{
			set hoje=+$horolog
			do linhaData.%Set("Atendimento",$zdate(hoje,3))
			do linhaData.%Set("Situacao","Em Atendimento")
			set data = ""
			if objInativo.inativo{
				set linha.data = "Consulta "_FichadeAtendimento_" - <font style='color:yellow'>Inativada em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario_"</font>"
				set linha.valorExibicao = "Consulta "_FichadeAtendimento_" - <font style='color:yellow'>Inativada em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario_"</font>"
				do linhaData.%Set("Situacao","Inativada em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario)
			}else{
				set linha.data = "Consulta "_FichadeAtendimento_" (em atendimento)"
				set linha.valorExibicao = "Consulta "_FichadeAtendimento_" (em atendimento)"
			}
		}else{
			do linhaData.%Set("Atendimento",$zdate(data,3))
			set objConsulta = ^VARPEPPremiumConsulta(YM,paciente,FichadeAtendimento,1)
			do linhaData.%Set("Situacao","Finalizada")
			if FichadeAtendimento["." do linhaData.%Set("Situacao","Finalizada (Retificada)")
			if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)="" do linhaData.%Set("Situacao","Aberta para Retificação")
			
			if objInativo.inativo{
				set linha.valorExibicao = "Consulta "_FichadeAtendimento_" (realizada "_$select((data=+$horolog):"hoje",1:" em "_$zdate(data,4))_")"_" - <font style='color:yellow'>Inativada em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario_"</font>"
				set linha.data = "Consulta "_FichadeAtendimento_" (realizada em "_$zdate(data,4)_")"_" - <font style='color:yellow'>Inativada em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario_"</font>"
				do linhaData.%Set("Situacao","Inativada em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario)
			}else{
				set linha.valorExibicao = "Consulta "_FichadeAtendimento_" (realizada "_$select((data=+$horolog):"hoje",1:" em "_$zdate(data,4))_")"
				set linha.data = "Consulta "_FichadeAtendimento_" (realizada em "_$zdate(data,4)_")"
			}
		}
		do linhaData.%Set("valorOriginal",data)
		set linha.valorOriginal = data
		set linha.fichaOriginal = FichadeAtendimento
		do retorno.%Push(linha)
		do dados.%Push(linhaData)
	}
	if ficha>FichadeAtendimento{
		set dias = dias + 1
		set linha = {}
		set linha.data = "Consulta "_ficha_" (em atendimento)"
		set linha.valorOriginal = +$horolog
		set linha.fichaOriginal = ficha
		set linha.valorExibicao = "Consulta "_ficha_" (em atendimento)"
		do retorno.%Push(linha)
		;
		set linhaData = {}
		do linhaData.%Set("Consulta",ficha)
		do linhaData.%Set("Atendimento",$zdate($horolog,3))
		do linhaData.%Set("Situacao","Em Atendimento")
		do dados.%Push(linhaData)
		;
		set hoje=1
	}
	;
	if 'hoje{
		set dias = dias + 1
		set data = $zdate($horolog,4)
		set linha = {}
		set linha.data = "Consulta "_ficha_" (em atendimento)"
		set linha.valor = 0
		set linha.valorOriginal = +$horolog
		set linha.fichaOriginal = 1
		set linha.valorExibicao = "Hoje"
		do retorno.%Push(linha)
	}
	
	;write retorno.%ToJSON()
	set retornoDias = {}
	set retornoDias.datas = retorno
	set retornoDias.dias = dias
	set retornoDias.dataSource = dados
	write retornoDias.%ToJSON() 
	quit]]></Implementation>
</Method>

<Method name="getHistoricoV2">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("paciente",1))
	set cid = $get(%request.Data("codCID",1))
	set exibirInativos = $get(%request.Data("exibirInativos",1))
	;
	if paciente=""||(cid=""){
		write 1
		quit
	}
	set query = "Select NumerodaConsulta from VARPEPPremiumConsulta "
	set query = query_" where Company = 0 and %upper(ciddopaciente) = '"_cid_"' and %upper(codigodopaciente)='"_paciente_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	set hoje=0
	set dias = ""
	set dados=[]
	set ficha 	= $order(^VARPEPPremiumConsulta(YM,paciente,""),-1)
	if ficha="" set ficha = ficha + 1
	if $piece($get(^VARPEPPremiumConsulta(YM,paciente,ficha,1)),"~",4)'="" {
		set ficha = ficha+1
	}
	set FichadeAtendimento = 0
	kill vetor
	while(rs.%Next()){
		set FichadeAtendimento = rs.%Get("NumerodaConsulta")
		set datac = ..recDataConsulta(paciente, FichadeAtendimento,1)
		set data = datac
		if data=+$horolog set hoje = 1
		set dias = dias + 1
		;
		set objInativo = ..consultaIsInativa(paciente,FichadeAtendimento)
		;if objInativo.inativo=2 continue
		if 'exibirInativos,objInativo.inativo continue
		set linhaData = {}
		do linhaData.%Set("Consulta",FichadeAtendimento)
		do linhaData.%Set("Inativa",objInativo.inativo)
		;
		if ficha=FichadeAtendimento{
			set hoje=+$horolog
			do linhaData.%Set("Atendimento",$zdate(data,3))
			do linhaData.%Set("Situacao","Em Atendimento")
			set data = ""
			if objInativo.inativo{
				do linhaData.%Set("Situacao","Inativada "_$select(objInativo.inativo=2:"por correção ",1:"")_"em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario)
			}
		}else{
			do linhaData.%Set("Atendimento",$zdate(data,3))
			set objConsulta = ^VARPEPPremiumConsulta(YM,paciente,FichadeAtendimento,1)
			do linhaData.%Set("Situacao","Finalizada")
			if FichadeAtendimento["." do linhaData.%Set("Situacao","Finalizada (Retificada)")
			if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)="" do linhaData.%Set("Situacao","Aberta para Retificação")
			if objInativo.inativo{
				do linhaData.%Set("Situacao","Inativada "_$select(objInativo.inativo=2:"por correção ",1:"")_"em "_$zdate(objInativo.dataHora,4)_" por "_objInativo.usuario)
			}
		}
		do linhaData.%Set("valorOriginal",data)
		do dados.%Push(linhaData)
	}
	if ficha>FichadeAtendimento{
		set dias = dias + 1
		set linhaData = {}
		do linhaData.%Set("Consulta",ficha)
		do linhaData.%Set("Atendimento",$zdate($horolog,3))
		do linhaData.%Set("Situacao","Em Atendimento")
		do dados.%Push(linhaData)
		set hoje=1
	}
	;
	write dados.%ToJSON() 
	quit]]></Implementation>
</Method>

<Method name="carregaAtendimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("paciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set layout = $get(%request.Data("layout",1))
	set cid = $get(%request.Data("codCID",1))
	set lean = $get(%request.Data("MAPPALEAN",1))
	set fichaDiagnostico = $get(%request.Data("fichaDiagnostico",1))
	;
	if dataPEP'="" set dataPEP = dataPEP + 1
	if cid'="" {
		if layout=2 {
			;W paciente_"|"_cid_"|"_ficha_"|"_fichaSeq_"|"_dataPEP_"|"_""_"|"_fichaDiagnostico_"|"_0_"|"_YUSER
			set array 		= ..carregaAtendimentoMenu(paciente,cid,ficha,fichaSeq,dataPEP,"",fichaDiagnostico,0,YUSER) 
			set arrayResumo	= ..carregaAtendimentoMenuLean(paciente,cid,ficha,fichaSeq,dataPEP,"",fichaDiagnostico,0,YUSER,lean) 
			set obj = $get(^VARWorkFlowCID(0,cid,1))
			set titulo = "" ;$$$VARWorkFlowCIDDescricao(obj)
			if ficha<$order(^VARPEPPremiumConsulta(0,paciente,""),-1){
				set objConsulta = $get(^VARPEPPremiumConsulta(0,paciente,ficha,1))
				set data = $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objConsulta)
				set titulo = titulo_ "<i class='far fa-calendar-alt cor-alerta' title='*Consulta Realizada em "_$zdate(data,4,,2)_"*'></i> Modo Consulta"
			}
			set objConsulta = $get(^VARPEPPremiumConsulta(0,paciente,ficha,1))
			set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)
			if data'=""{
				if titulo'="" set titulo = titulo_"&nbsp;&nbsp;"
				set titulo = titulo_ "<i class='fas fa-history cor-alerta' title='*Consulta Retr. de "_$zdate(data,4,,2)_"*'></i>"
			}
			set retorno = {}
			set retorno.titulo = titulo
			set retorno.array = array.array
			;
			if arrayResumo.array.%Size()>0 set retorno.array = arrayResumo.array
			;
			set retorno.arrayConduta = array.arrayConduta
			//set retorno.arrayRelatorio = array.arrayRelatorio
			write $replace($replace(retorno.%ToJSON(),"'""",""),"""'","")
			quit
		}
		set SQL = " SELECT SequenciadeExibicao, Sequencia, Nome, TipodeWorkflow,Predecessor,Icone "
		set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
		if layout=1 set SQL=SQL_" and %upper(Predecessor) = ' '"
		set SQL = SQL_" And (NaoExibirnoMenu Is Null Or NaoExibirnoMenu = 0) "
		set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
		set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
		set array = [],arrayDestaque = [],arrayBaixo = []
		set Total = 0
		while(rs.%Next()){
			set SequenciadeExibicao=rs.%Get("SequenciadeExibicao")
			set Sequencia=rs.%Get("Sequencia")
			set Predecessor=rs.%Get("Predecessor")
			set Nome=rs.%Get("Nome")
			set TipodeWorkflow=rs.%Get("TipodeWorkflow")
			set Icone=rs.%Get("Icone")
			if Sequencia=1399 continue
			;
			set linha = {}
			set linha.ID 		= Sequencia
			set linha.Caption 	= Nome
			set linha.Tipo 		= TipodeWorkflow
			set linha.Icone		= Icone
			set:Predecessor'="" linha.ParentID	= Predecessor
			;
			if TipodeWorkflow=15||(TipodeWorkflow=19){
				if TipodeWorkflow'=19 continue
				do arrayDestaque.%Push(linha)
			}elseif TipodeWorkflow=18{
				set linha = ..recPainel(Sequencia,"",paciente,cid,ficha,fichaSeq,dataPEP,1)
				set iterator = linha.formul.%GetIterator()
				for {
					quit:'iterator.%GetNext(.indiceI,.valorI)
					do arrayBaixo.%Push(valorI)
				}
			}else{
				do array.%Push(linha)
			}
		}
	}
	set retorno = {}
	if cid'=""{
		;set obj = $get(^VARWorkFlowCID(0,cid,1))
		;set titulo = $$$VARWorkFlowCIDDescricao(obj)
		set titulo = ""
		set objConsulta = $get(^VARPEPPremiumConsulta(0,paciente,ficha,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)
		if ficha<$order(^VARPEPPremiumConsulta(0,paciente,""),-1){
			set objConsulta = $get(^VARPEPPremiumConsulta(0,paciente,ficha,1))
			set data = $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objConsulta)
			set titulo = titulo_ "<i class='far fa-calendar-alt cor-alerta' title='*Consulta Realizada em "_$zdate(data,4,,2)_"*'></i>"
		}
		set objConsulta = $get(^VARPEPPremiumConsulta(0,paciente,ficha,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)
		if data'=""{
			if titulo'="" set titulo = titulo_"&nbsp;&nbsp;"
			set titulo = titulo_ "<i class='fas fa-history cor-alerta' title='*Consulta Retr. de "_$zdate(data,4,,2)_"*'></i>"
		}
		set retorno.titulo = titulo
		set retorno.array = array
		set retorno.arrayDestaque = arrayDestaque
		set retorno.arrayBaixo = arrayBaixo
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="carregaAtendimentoMenu">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,dataPEP,predecessor,fichaDiagnostico,contador,YUSER</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if predecessor="" set predecessor = " "
	set SQL = " SELECT Sequencia, Nome, TipodeWorkflow,Predecessor,Icone "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	;set SQL = SQL_" and %upper(Predecessor) = '"_predecessor_"'"
	If (predecessor = "") {
		set SQL = SQL_" and Predecessor Is Null "
	}Else{
		set SQL = SQL_" and %upper(Predecessor) = '"_predecessor_"'"
	}
	set SQL = SQL_" And (NaoExibirnoMenu Is Null Or NaoExibirnoMenu = 0) "
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = [],arrayConduta=[] ;,arrayRelatorio=[]
	set grupoOn = 0
	while(rs.%Next()){
		set Sequencia=rs.%Get("Sequencia")
		set Nome=rs.%Get("Nome")
		set TipodeWorkflow=rs.%Get("TipodeWorkflow")
		set Predecessor = rs.%Get("Predecessor")
		set Icone = rs.%Get("Icone")
		;
		if fichaDiagnostico=1,TipodeWorkflow=19 continue
		if fichaDiagnostico=2,TipodeWorkflow=15 continue
		;
		set exibeFilhos=1
		set exibeSubFilhos=1
		
		if TipodeWorkflow=3 set exibeFilhos=0
		if TipodeWorkflow=5 set exibeFilhos=0
		if TipodeWorkflow=7 set exibeFilhos=0
		if TipodeWorkflow=1,Predecessor'="" set exibeSubFilhos=0
		if TipodeWorkflow=9 set exibeFilhos=0
		if contador>2 set exibeFilhos=0
		//
		// Teste de layout
		if TipodeWorkflow'=18,Predecessor="" set exibeSubFilhos=0
		//
		if 'exibeFilhos{
			set array = []
			quit
		}
		set objRet = ..recValorSalvo(paciente,cid,ficha,fichaSeq,Sequencia)
		set valor = $piece(objRet,"~",1)
		set valor2 = $piece(objRet,"~",2)
		/*set data = +$order(^VARPEPPremium(0,paciente,cid,Sequencia,dataPEP),-1)
		set hora = +$order(^VARPEPPremium(0,paciente,cid,Sequencia,data,""),-1)
		set obj = $get(^VARPEPPremium(0,paciente,cid,Sequencia,data,hora,1))
		set valor = $$$VARPEPPremiumValorRegistrado(obj)
		set valor2 = $$$VARPEPPremiumValorRegistrado2(obj)*/
		;
		set objConsulta = $get(^VARPEPPremiumConsulta(0,paciente,ficha,1))
		set edita=0
		if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)="" set edita=1
		;
		set linha = {}
		set linha.ID 		= Sequencia
		set linha.Caption 	= Nome
		set linha.Tipo 		= +TipodeWorkflow
		set linha.Predecessor = Predecessor
		set linha.Edita = +edita
		set linha.closeMenuOnClick = "'false'"
		set linha.selectable = "'false'"
		set linha.valor1 = valor
		set linha.valor2 = valor2
		set linha.icon = Icone
		if TipodeWorkflow=2||(TipodeWorkflow=11){
			set linha.template = "'menusTemplate'"
		}
		if Predecessor=""{
			set linha.template = "'menusTemplate'"
		}
		if TipodeWorkflow=4{
			set linha.template = "'menusTemplate'"
		}
		if ..verificaNivelPais(paciente, cid, ficha,fichaSeq, Sequencia)<1 set linha.disabled="'true'"
		set conduta=0 ;,relatorio=0
		if TipodeWorkflow'=15,TipodeWorkflow'=19,exibeSubFilhos {
			set filhos = ..carregaAtendimentoMenu(paciente,cid,ficha,fichaSeq,dataPEP,Sequencia,fichaDiagnostico,contador+1,YUSER)
			if filhos.array.%Size()>0{	
				set linha.items = filhos.array
			}
			;if filhos.arrayRelatorio.%Size()>0{	
			;	set linha.items = filhos.arrayRelatorio
			;	set relatorio=1
			;	continue
			;}
		}
		set sqlFilhos = "select top 1 * from VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_Sequencia_"'"
		set rsFilho = ##class(%SQL.Statement).%ExecDirect("",sqlFilhos)
		set linha.temFilhos = 1
		if 'rsFilho.%Next() set linha.temFilhos = 0

		if TipodeWorkflow=15{
			continue
			set:'grupoOn linha.beginGroup = "'true'"
			set linha.template = "'menusTemplate'"
			set grupoOn = 1
		}
		if TipodeWorkflow=19{
			set:'grupoOn linha.beginGroup = "'true'"
			set linha.template = "'menusTemplate'"
			set grupoOn = 1
			set conduta=1
		}
		if TipodeWorkflow=17{
			continue
			set linha.disabled="'false'"
			set linha.opcao = 0
			if Nome["Tratamento" set linha.opcao = 9
			set relatorio=1
		}
		;
		if conduta=1 do arrayConduta.%Push(linha) continue
		;if relatorio=1 do arrayRelatorio.%Push(linha) continue
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.array = array
	set retorno.arrayConduta = arrayConduta
	;set retorno.arrayRelatorio = arrayRelatorio
	quit retorno]]></Implementation>
</Method>

<Method name="carregaAtendimentoMenuLean">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,ficha,fichaSeq,dataPEP,predecessor,fichaDiagnostico,contador,YUSER,lean</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set job = %session.SessionId
	set array = []
	kill ^mtemp.MAPPAMenuLean(0,job)
	if lean{
		set ^mtemp.MAPPAMenuLean(0,job,"T1",1) = "Dados para estadiamento"
		set ^mtemp.MAPPAMenuLean(0,job,"461",1) = "Inf. Clínicas~~10~T1~5"
		set ^mtemp.MAPPAMenuLean(0,job,"1517",1) = "Exame Físico~~10~T1~10"
		set ^mtemp.MAPPAMenuLean(0,job,"T5",1) = "Exames Sangue/Lab.~~10~T1~40"
		set ^mtemp.MAPPAMenuLean(0,job,"13",1) = "~~~T5~10"
		set ^mtemp.MAPPAMenuLean(0,job,"32",1) = "~~~T5~20"
		set ^mtemp.MAPPAMenuLean(0,job,"155",1) = "~~~T5~30"
		set ^mtemp.MAPPAMenuLean(0,job,"5",1) = "Anemia ou Trombose Auto-Imune~~10~T1~50"
		set ^mtemp.MAPPAMenuLean(0,job,"T8",1) = "Citogenética~~10~T1~60"
		set ^mtemp.MAPPAMenuLean(0,job,"1352",1) = "Realizou Análise Citogenética em Cariótipo?~~11~T8~10"
		set ^mtemp.MAPPAMenuLean(0,job,"1353",1) = "Realizou Análise Citogenética em FISH?~~~T8~20"
		set ^mtemp.MAPPAMenuLean(0,job,"T9",1) = "Biologia Molecular~~10~T1~70"
		set ^mtemp.MAPPAMenuLean(0,job,"196",1) = "~~~T9~10"
		set ^mtemp.MAPPAMenuLean(0,job,"9",1) = "Perf. Status~~10~T1~80"
	
		set linha = {}
		set linha.ID 		= "T1"
		set linha.Caption 	= ^mtemp.MAPPAMenuLean(0,job,"T1",1)
		set linha.template = "'menusTemplate'"
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.array = array
	quit retorno]]></Implementation>
</Method>

<Method name="limpaPainel">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente 	= $get(%request.Data("paciente",1))
	set cid	 	= $get(%request.Data("codCID",1))
	set idPainel 	= $get(%request.Data("idPainel",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set ficha 	= $get(%request.Data("ficha",1))
	set nedita=0
	set objConsulta = $get(^VARPEPPremiumConsulta(0,paciente,ficha,1))
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)'="" set nedita=1

	set retorno={}
	if nedita{
		set retorno.erro=1
		set retorno.mensagem="Não é possível excluir dados de consultas passadas"
	}else{
		
		if '$data(^VARWorkFlowPEP(0,cid,idPainel,1)){
			set sequencia = ""
			for {
				set sequencia = $order(^mtemp.MAPPAMenuLean(0,%session.SessionId,sequencia)) quit:sequencia=""
				set achou=0
				set pred = sequencia
				for {
					if pred=idPainel set achou=1 quit
					quit:pred=idPainel
					set pred = $piece(^mtemp.MAPPAMenuLean(0,%session.SessionId,pred,1),"~",4)
					if pred="" quit
				}
				if achou,$data(^VARWorkFlowPEP(0,cid,sequencia,1)) do ..limpaPainelExecute(paciente,cid,sequencia,dataPEP,ficha,YUSER)
				;
			}
		}else{
			do ..limpaPainelExecute(paciente,cid,idPainel,dataPEP,ficha,YUSER)
		}
	}
	write retorno.%ToJSON()
	quit
	;]]></Implementation>
</Method>

<Method name="limpaPainelExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente,cid,codPainel,dataPEP,ficha,YUSER</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set SQL = ""
	if $data(^mtemp.MAPPAMenuLean(0,%session.SessionId,codPainel)){
		set SQL = SQL_"Select 1 Atual,Sequencia,TipodeWorkFlow,SequenciadeExibicao from VARWorkFlowPEP where company = 0 and Sequencia = '"_codPainel_"' union "
	}
	set SQL = SQL_" SELECT 0 Atual,Sequencia,TipodeWorkFlow,SequenciadeExibicao "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Atual=rs.%Get("Atual")
		set Sequencia=rs.%Get("Sequencia")
		set TipodeWorkFlow=rs.%Get("TipodeWorkFlow")
		;
		if TipodeWorkFlow=21{
			set grupoWF = 16,flGrupo=1
			set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,"",..recConsultaAnterior(paciente,ficha))
			if campoPreenchido.valor=""{
				set grupoWF = 15,flGrupo=1
				set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,paciente,cid,ficha,1)
				set Sequencia = campoPreenchido.sequencia
			}
		}				
		;
		do ..salvaPainel(paciente,Sequencia,"",cid,ficha,1,$select(dataPEP'="":dataPEP-1,1:dataPEP),YUSER)
		do ..salvaPainel(paciente,Sequencia_"_","",cid,ficha,1,$select(dataPEP'="":dataPEP-1,1:dataPEP),YUSER)
		do:'Atual ..limpaPainelExecute(paciente,cid,Sequencia,dataPEP,ficha,YUSER)
	}]]></Implementation>
</Method>

<Method name="recPainelIrmao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente 	= $get(%request.Data("paciente",1))
	set idPainel 	= $get(%request.Data("idPainel",1))
	set cid	 	= $get(%request.Data("codCID",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set objWS = $get(^VARWorkFlowPEP(YM,cid,idPainel,1))
	set SequenciadeExibicao	= $$$VARWorkFlowPEPSequenciadeExibicao(objWS)
	set Precedessor			= $$$VARWorkFlowPEPPredecessor(objWS)
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_Precedessor_"'"
	set SQL = SQL_" and SequenciadeExibicao > "_SequenciadeExibicao_" "
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set Sequencia = "",predecessor=""
	if rs.%Next(){
		set Sequencia=rs.%Get("Sequencia")
		set predecessor    = rs.%Get("Predecessor")
	}
	if predecessor="" set Sequencia = ""
	set retorno = {}
	set retorno.sequencia = Sequencia
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recPainelName">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente 	= $get(%request.Data("paciente",1))
	set idPainel 	= $get(%request.Data("idPainel",1))
	set cid	 		= $get(%request.Data("codCID",1))
	set abas 		= $get(%request.Data("abas",1))
	;
	;if abas>0 {
	;	set objWS 		= $get(^VARWorkFlowPEP(YM,cid,idPainel,1))
	;	set pred		= $$$VARWorkFlowPEPPredecessor(objWS)
	;	if pred'=""{
	;		set idPainel	= pred
	;		set objWS 		= $get(^VARWorkFlowPEP(YM,cid,idPainel,1))
	;	}
	;}
	if '$data(^VARWorkFlowPEP(0,cid,idPainel,1)){
		set objWF = $get(^mtemp.MAPPAMenuLean(0,%session.SessionId,idPainel,1))
		set desc	= 	$piece(objWF,"~",1)
	}else{
		set desc = ..recDescricaoWorkFlow(cid,idPainel)
	}
	set retorno={}
	set retorno.descricao = desc
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="verificaCampoEstadiamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,sequencia</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ehEstadiamento = 0
	set select = "select top 1 Campos from VARWorkFlowEstEstagioC"
	set select = select_" where company=0 and codigodocid='"_cid_"'  and (tipo = 0 or tipo is null) "
	set select = select_" and '|'||campos||'|' like '%|"_sequencia_"|%'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.select)
	set ehEstadiamento = rs.%Next()
	if 'ehEstadiamento{
		set select = "select top 1 Campos from VARWorkFlowEstPontCondicao"
		set select = select_" where company=0 and cid='"_cid_"' and (tipo = 0 or tipo is null) and "
		set select = select_" ('|'||campos||'|' like '%|"_sequencia_"|%' or '|'||campos||'|' like '%|"_sequencia_";%')"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.select)
		set ehEstadiamento = rs.%Next()
	}
	quit ehEstadiamento]]></Implementation>
</Method>

<Method name="recTelaRegimeTerapeutico">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,dataPEP,nedita,YUSER</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	SET YM = 0
	set Sequencia = "TRAT"
	set retorno = ..recTratamento(codPaciente,cid,ficha)
	set valor 	= retorno.valor
	if valor'="",ficha'=retorno.ficha,'nedita{
		do ..salvaPainel(codPaciente,retorno.sequencia,valor,cid,ficha,fichaSeq,$select(dataPEP'="":dataPEP-1,1:dataPEP),YUSER)
	}
	set linhaTratamento = 1
	set formul = [],formulDados={}
	set retSugestao = ..recSugestaoTerapeutica(codPaciente,cid,ficha,fichaSeq,dataPEP,linhaTratamento)
	set recomendacao = retSugestao.recomendacao
	set camposTitle = retSugestao.camposTitle
	set camposPendentes = retSugestao.camposPendentes
	if recomendacao=""{
		set form = {}
		set form.itemType = "group"
		set items = []
		;
		set iterator = camposPendentes.%GetIterator()
		kill array,vetor
		while iterator.%GetNext(.indice,.campo){
			set nivel = 0
			if campo[";" set campo = $piece(campo,";",1)
			set idCampoPai = campo
			set caminho = []
			for{
				set obj 	= $get(^VARWorkFlowPEP(0,cid,idCampoPai,1))
				set paix    = $$$VARWorkFlowPEPPredecessor(obj)
				if paix = "" quit
				set idCampoPai = paix
				do caminho.%Push(idCampoPai)
				set nivel = nivel + 1
			}
			set vetor(idCampoPai,nivel,campo) = caminho
		}
		;
		set templatePendente = "<div class='recomendacaoTerapeutica'><div class='recomendacaoTerapeuticaAlerta'>Informações pendentes de preenchimento:</div><ul>"
		set idPai = ""
		for {
			set idPai = $order(vetor(idPai)) quit:idPai=""
			set desc = ..recDescricaoWorkFlow(cid,idPai)
			if desc="" set desc = idPai
			set templatePendente = templatePendente_"<li>"_desc_"</li><ul>"
			set nivel = ""
			for {
				set nivel = $order(vetor(idPai,nivel)) quit:nivel=""
				set idCampo = ""
				for {
					set idCampo = $order(vetor(idPai,nivel,idCampo)) quit:idCampo=""
					set caminho = vetor(idPai,nivel,idCampo)
					set desc = ..recDescricaoWorkFlow(cid,idCampo)
					if desc="" continue
					set predecessor	= idCampo
					for{
						if predecessor = "" quit
						set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						if $$$VARWorkFlowPEPPredecessor(obj)="" quit
						set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
					}

					set desc = "<a href=# onclick=abrePainel('"_predecessor_"','')>"_desc_"</a>"
					;		
					set caminhoC = ""					
					set iterator = caminho.%GetIterator()
					while iterator.%GetNext(.indice,.nvalor){
						if nvalor=idPai continue
						set descC = ..recDescricaoWorkFlow(cid,nvalor)
						set caminhoC = descC_" > "_caminhoC
					}
					set desc = caminhoC_desc
					;
					if $data(array(desc)) continue
					set array(desc) = ""

					set templatePendente = templatePendente_"<li>"_desc_"</li>"
				}
				quit
			}
			set templatePendente = templatePendente_"</ul>"
		}
		set templatePendente = templatePendente_"</ul></div>"
	}
	set form = {}
	set form.itemType = "group"
	set form.colCount = 3
	set items = []
	;
	set help = "<div class='recomendacaoTerapeuticaHeader'><table><tr><th style='text-align:left'>Principais Achados</th></tr><tr><td>"
	if recomendacao'="" {
		set iterator = camposTitle.%GetIterator()
		kill array
		while iterator.%GetNext(.indice,.nvalor){
			if $data(array(nvalor)) continue
			set array(nvalor) = ""
			set help = help_"<li>"_nvalor_"</li>"
		}
		set help = help_"</td></tr></table></div>"
	}else{
		set help = templatePendente
	}
	;
	set form1 = {}
	set form1.colSpan = 2
	set form1.cssClass = "titleDestaque"
	set form1.template = "<div>Conduta</div>"
	do items.%Push(form1)
	;
	set form1 = {}
	set form1.cssClass = "titleDestaque"
	set form1.itemType = "button"
	
	set buttonOptions = {}
	set buttonOptions.icon = "fas fa-question-circle"
	;set buttonOptions.text = "Verificar Critérios de Recomendações"
	set buttonOptions.text = "Verificar Critérios de Tratamento"
	set buttonOptions.disabled = nedita
	set:cid="C90.0" buttonOptions.visible = 0
	set buttonOptions.onClick = "'function(){if ($('.destaqueTpLegenda').css('display')=='block'){$('.destaqueTpLegenda').hide()}else{$('.destaqueTpLegenda').show()};corrigeLayout();}'"
	set form1.buttonOptions =  buttonOptions ;help
	do items.%Push(form1)
	set form1 = {}
	set form1.colSpan  = 3
	set form1.cssClass = "destaqueTpLegenda destaqueTp2"
	set form1.template = help
	do items.%Push(form1)
	;
	kill tratPreferencial
	if recomendacao'=""{
		set codRegime = ""
		for {
 			set codRegime = $order(^VARWorkFlowTerapiaMedicacao(YM,cid,linhaTratamento,recomendacao,codRegime)) quit:codRegime=""
 			set obj = $get(^VARWorkFlowTerapiaMedicacao(YM,cid,linhaTratamento,recomendacao,codRegime,1))
 			set trat = $piece(obj,"~",2)
 			set tratPreferencial(codRegime)=""
		}
	}
	set tempor(0,0,"Observação sem tratamento específico (Watch and Wait)"_recomendacao,0)=""
	Set diag = $Piece(..calculaDiagnostico(codPaciente,cid,ficha),"~",4), flagTemTratComp = 0
	set trat = ""
	for {
		set trat = $order(^VARWorkFlowRegTera(YM,cid,trat)) quit:trat=""
		set obj = $get(^VARWorkFlowRegTera(YM,cid,trat,1))
		set desc = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(obj)
		set tipo = +$$$VARWorkFlowRegTeraTipodeRegime(obj)
		set grpTipo = +$$$VARWorkFlowRegTeraGrupoTipodeRegime(obj)
		set situacao = +$$$VARWorkFlowRegTeraSituacao(obj)
		if situacao'=1 continue
		set terComple = +$$$VARWorkFlowRegTeraTerapiaComplementar(obj)
		if (terComple=1) {
			Set flagTemTratComp = 1
			continue
		}
		if tipo = 9 continue
		set recomendado=0
		If grpTipo="" Set grpTipo = 99999999
		if $data(tratPreferencial(trat)) set recomendado=1
		;if (grpTipo > 1 && (grpTipo < 2) && (diag '= "RDB") && (diag '= "RDB")) Continue
		;if (grpTipo > 2 && (grpTipo < 3) && (diag '= "RDD")) Continue
		;if (grpTipo > 3 && (grpTipo < 4) && ((diag = "RDB") || (diag = "RDB") || (diag = "RDD"))) Continue
		;if '$data(tratPreferencial(trat)) continue
		set tempor(grpTipo,tipo,desc,trat)=recomendado
	}
	if $data(tratPreferencial){
		set form1 = {}
		set form1.colSpan = 3
		set form1.template = "<div class='recomendacaoTerapeuticaFooter'>* Medicações recomendadas com base nos dados informados para o paciente</div>"
		do items.%Push(form1)
	}
	set campoSel = ""
	set countGruop = 0
	;
	set grpTipo=""
	for {
		set grpTipo = $order(tempor(grpTipo)) quit:grpTipo=""
		If (grpTipo '= 0) {

			set descGrupoTipo = $Select(
									grpTipo = 1.1 : "Mieloma Múltiplo - Terapia de Prevenção de Perda Óssea",
									grpTipo = 1.2 : "Mieloma Múltiplo - Terapia de Primeira Linha para Candidatos a Transplante",
									grpTipo = 1.3 : "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Fit",
									grpTipo = 1.4 : "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Frágil",
									grpTipo = 1.5 : "Mieloma Múltiplo - Terapia de Segunda Linha e Terapia Subsequente",
									grpTipo = 2.1 : "Mieloma Indolente",
									grpTipo = 3.1 : "Amiloidose de Cadeia Leve - Terapia de Primeira Linha",
									grpTipo = 3.2 : "Amiloidose de Cadeia Leve - Terapia de Segunda Linha e Subsequente",
									1 : "")

			set form1 = {}
			set form1.colSpan = 3
			set form1.cssClass = "titleDestaque"
			set form1.template = "<div class='destaqueTpTitulo'>"_$ZConvert(descGrupoTipo,"U")_"</div>"
			do items.%Push(form1)
		}
		Set countGruop = countGruop + 1
		set tipo=""
		for {
			set tipo = $order(tempor(grpTipo,tipo)) quit:tipo=""
			set form1 = {}
			set form1.colSpan = 3
			set form1.cssClass = "destaqueTp"_tipo
			set form1.dataField = "mult-"_countGruop_"_"_tipo_"_"_Sequencia
			set label={}
			set label.alignment = "right"
			set label.text 		= $select(tipo=1:"Regimes Preferenciais",tipo=2:"Outras Possibilidades",tipo=4:"Útil em determinadas circunstâncias",tipo=3:"Regimes Recomendados",1:"Sem Tratamento")
			set form1.label 	= label
			set form1.editorType= "dxRadioGroup"
			set editorOptions = {}
			set opcoes = []
			set desc = ""
			for {
				set desc = $order(tempor(grpTipo,tipo,desc)) quit:desc=""
				set codRegime = ""		 			
	 			for {
		 			set codRegime = $order(tempor(grpTipo,tipo,desc,codRegime)) quit:codRegime=""
		 			set reco = $piece($get(tempor(grpTipo,tipo,desc,codRegime)),"~",1)
					if valor=(linhaTratamento_";"_codRegime) set campoSel = form1.dataField
					set opcao = {}
					set opcao.ID = linhaTratamento_";"_codRegime
					;set opcao.Name = codRegime_"-"_desc
					set opcao.Name = desc
					if codRegime'=0 set opcao.Name = opcao.Name_"&nbsp;&nbsp;<i class='fas fa-question-circle' title='Exibir detalhes do regime' onclick=carregaDetalheRegime('"_codRegime_"')></i>"
					set opcao.Recomendado = reco
					do opcoes.%Push(opcao)
				}
			}
			
			set elementAttr = {}
			set elementAttr.class = "conteudoRadioGroup"
			set editorOptions.elementAttr = elementAttr
			set editorOptions.dataSource = opcoes
			set editorOptions.valueExpr = "ID"
			set editorOptions.displayExpr = "Name"
			set editorOptions.layout = "vertical"
			set editorOptions.itemTemplate = "'itemTemplateRecTerapeutica'"
			set editaT = 1
			set ultFicha 	= $order(^VARPEPPremiumConsulta(0,codPaciente,""),-1)
			if ultFicha="" set ultFicha = ultFicha + 1
			if $piece($get(^VARPEPPremiumConsulta(0,codPaciente,ultFicha,1)),"~",4)'="" {
				set ultFicha = ultFicha+1
			}
			if ficha<ultFicha set editaT=0
			set editorOptions.disabled = 'editaT
			;
			set form1.editorOptions = editorOptions
			do items.%Push(form1)
		}
		
		;Transplante autólogo de células tronco hematopoiéticas
		If (+grpTipo = 0 && (cid = "C90.0")) {
			set form1 = {}
			set form1.colSpan = 3
			set form1.cssClass = "titleDestaque"
			set form1.template = "<div class='destaqueTpTitulo'>TRANSPLANTE AUTÓLOGO DE CÉLULAS TRONCO HEMATOPOIÉTICAS</div>"
			do items.%Push(form1)
			set form1 = {}
			set form1.dataField = "48699"
			set form1.colSpan = 3
			set form1.editorType = "dxDateBox"
			set form1.cssClass	= "labelDetalhes"
			//set form1.helpText = "(meses)"
			set label = {}
			set label.alignment = "right"
			set label.text = "Data"
			set form1.label = label
			set editorOptions = {}
			set editorOptions.type = "date"
			set editorOptions.useMaskBehavior = 1
			set editorOptions.openOnFieldClick = 0
			set editorOptions.showDropDownButton = 1
			set editorOptions.showClearButton = 1
			set editorOptions.width = "160px"
			set editorOptions.height = "25px"
			set editorOptions.max = $zdate($horolog,3)
			set form1.editorOptions = editorOptions
			//set items = []
			do items.%Push(form1)
			
			set objValor = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,form1.dataField)
			set valor = $piece(objValor,"~",1)
					
			do formulDados.%Set(form1.dataField,$Select(valor="":"",1:$ZDate(valor,3)))
		}

		;Tratamento Complementar Teste 
		/*If (+grpTipo = 0 && (+flagTemTratComp = 1)) {
			set form1 = {}
			set form1.colSpan = 3
			set form1.cssClass = "titleDestaque"
			set form1.template = "<div class='destaqueTpTitulo'>TRATAMENTO COMPLEMENTAR</div>"
			do items.%Push(form1)
			set form1 = {}
			set form1.dataField = Sequencia
			set form1.colSpan = 3
			set form1.editorType = "dxSelectBox"
			set form1.cssClass	= "labelDetalhes"
			//set form1.helpText = "(meses)"
			set label = {}
			set label.alignment = "right"
			set label.text = "Regime"
			set form1.label = label
			set editorOptions = {}
			set editorOptions.searchEnabled = 1
			set editorOptions.showClearButton = 1
	        set editorOptions.valueExpr = "CodRegime"
			set editorOptions.displayExpr = "DescRegime"
			set editorOptions.searchEnabled = 1
			set editorOptions.acceptCustomValue = 1
			set editorOptions.grouped = 1
			set editorOptions.dataSource = "'dataSourceTratCompl'"
			set aButTrat = []
			Set lButTra = {}
			Set lButTraOpt = {}
			Set lButTra.name = "btTratComp"
			Set lButTra.location = "after"
			Set lButTraOpt.icon = "fas fa-question-circle"
			Set lButTraOpt.type = "default"
			Set lButTraOpt.hint = "Exibir detalhes do regime"
			Set lButTraOpt.onClick = "'function() { "_
										"xCodRegime = pesquisaExamesSub.getEditor('tratamentoComplementar').option('value');"_
										;"if (xCodRegime == null || xCodRegime == '') {"_
										;"	DevExpress.ui.notify('Selecione um Terapia Complementar.', 'warning', 4000);"_
										;	return"_
										;}"_
										;carregaDetalheRegime(xCodRegime);"_
									 "}'"
			Set lButTra.options = lButTraOpt
			Do aButTrat.%Push(lButTra)
			set editorOptions.buttons = aButTrat
			set form1.editorOptions = editorOptions
			//set items = []
			do items.%Push(form1)
			;do formulDados.%Set(form1.dataField,valor)*/
			
			
		//}
	}
	;
	do:campoSel'="" formulDados.%Set(campoSel,valor)
	;
	set form.items = items
	;
	do formul.%Push(form)
	;;
	set Sequencia = "TRATRETORNO"
	set objValor = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,Sequencia)
	set valor = $piece(objValor,"~",1)
	set valor2 = $piece(objValor,"~",2)
	set dataAnt = $piece(objValor,"~",3)
	set horaAnt = $piece(objValor,"~",4)
	set form = {}
	set form.itemType="group"
	set form.colCount = 2
	set form1 = {}
	set form1.dataField = Sequencia
	set form1.editorType = "dxNumberBox"
	set form1.cssClass	= "labelDetalhes"
	set form1.helpText = "(meses)"
	set label = {}
	set label.alignment = "right"
	set label.text = "Retornar com os exames em"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.format = "#,##0"
	set editorOptions.showClearButton = 1
	set editorOptions.width = "100px"
	set editorOptions.height = "25px"
	set editorOptions.readOnly = nedita
	set editorOptions.min = 1
	set editorOptions.max = 99
	set form1.editorOptions = editorOptions
	set items = []
	do items.%Push(form1)
	do formulDados.%Set(form1.dataField,valor)
	;;
	set form1 = {}
	set form1.tipoImp = 0
	set form1.itemType = "button"
	set form1.horizontalAlignment = "right"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.visible = 0
	set form1.label = label
	set buttonOptions = {}
	set buttonOptions.text="Solicitar Exames"
	set buttonOptions.readOnly = nedita
	set buttonOptions.icon = "fas fa-pills"
	set buttonOptions.onClick = "'function(){abreExames(1)}'"
	set form1.buttonOptions = buttonOptions
	do items.%Push(form1)
	//
	set form.items = items
	do formul.%Push(form)
	;;

	set retorno = {}
	set retorno.formul = formul
	set retorno.formulDados = formulDados
	quit retorno]]></Implementation>
</Method>

<Method name="carregaInformacoesPermanentes">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<Implementation><![CDATA[	new rs,sequencia
	set rs = ##class(%SQL.Statement).%ExecDirect("","select Sequencia from VARWorkFlowPEP where company=0 and codigodocid='"_cid_"' and InformacaoPermanente=1")
	while(rs.%Next()){
		set sequencia = rs.%Get("Sequencia")
		do ..gravaInformacoesPermanentes(codPaciente,cid,ficha,sequencia)
		do ..buscaInformacoesPendentesFilhos(codPaciente,cid,ficha,sequencia)
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="buscaInformacoesPendentesFilhos">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,sequencia</FormalSpec>
<Implementation><![CDATA[	new rs,sequenciaFilho
	set rs = ##class(%SQL.Statement).%ExecDirect("","select Sequencia from VARWorkFlowPEP where company=0 and codigodocid='"_cid_"' and Predecessor='"_sequencia_"'")
	while(rs.%Next()){
		set sequenciaFilho = rs.%Get("Sequencia")
		do ..gravaInformacoesPermanentes(codPaciente,cid,ficha,sequenciaFilho)
		do ..buscaInformacoesPendentesFilhos(codPaciente,cid,ficha,sequenciaFilho)
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="gravaInformacoesPermanentes">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,consulta,sequencia</FormalSpec>
<Implementation><![CDATA[	new consultaAnterior,query,rs,obj,tipo,vl,vetor
	;
	set consultaAnterior = ..recConsultaAnterior(codPaciente,ficha)
	;
	set obj 	= $get(^VARWorkFlowPEP(0,cid,sequencia,1))
	set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
	;
	set query = "select top 1 ValorRegistrado,ValorRegistrado2 from VARPEPPremium "
	set query = query_" where Company=0 and CodigodoCID='"_cid_"' and CodigodoPaciente='"_codPaciente_"' and FichadeAtendimento="_consultaAnterior_" and CoddoWorkFlow='"_sequencia_"'"
	set query = query_" order by DatadoRegistro desc, HoradoRegistro desc"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set valor1 = rs.%Get("ValorRegistrado")
		set valor2 = rs.%Get("ValorRegistrado2")
		if tipo=30{
			set vetor = []
			for i=1:1:$length(valor1,";"){
				set vl = $piece(valor1,";",i)
				if vl="" continue
				do vetor.%Push(vl)
			}
			set valor1 = vetor.%ToJSON()
		}
		do ..salvaPainel(codPaciente,sequencia,valor1,cid,consulta,1,$horolog)
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="recPainel">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPainel="",codOpcaoPainel="",codPaciente="",cid="",ficha="",fichaSeq="",dataPEP="",interno="",layout=1,codIDMenu=0,somenteExibicao=0,conteudoSearch=""</FormalSpec>
<Implementation><![CDATA[	new achou,AlertaResultadoMaiorQue,AlertaResultadoMenorQue,array,blocos,blocosL,blocosR,botao,buttonOptions,codImagem
	new caminho,caminhoC,caminhoV,campo,campoPreenchido,campoSel,camposPendentes,camposTitle,cod,codArea,codEscolhaPainel
	new codRegime,composicao,ComposicaoValoresExames,cont,dataAnt,dataAntX,dataF,desc,descC,dxNumberGrupo,ecog,editorOptions
	new elementAttr,exames,ExamesUnidadedeExibicao,febre,fim,flExames,flGrupo,paiT,paix,objExames,horaAnt,linfo,RespostaPadrao
	new flImagem,flL,form,form1,formF,formP,formul,formulDados,formulF,formulG,formulGDados,grupo,grupoA,grupoWF,help
	new horaAntX,i,Icone,idCampo,idCampoPai,idPai,if,imagem,indice,indiceI,items,itemSub,iterator,labe,label,label1,lado
	new linha,linhaTratamento,medicamento,nedita,nivel,Nome,NumericoCasasDecimais,NumericoMaior,NumericoMenor,nvalor,obj
	new objMed,objPai,objVal,objValor,opcao,opcaoSimNao,Opcoes,opcoes,opcoesSimNao,opcPredecessor,ordenacao,ordenacaoTexto,pai,paiCaminho
	new perda,PermitirSelecionarMaisQue,pie,precFinal,predecessor,predecessorPai,reco,recomendacao,recomendado,resp,vetorOp
	new resultExam,ret,retorno,retPais,retSugestao,RotulodosCamposTexto,rs,seq,Sequencia,SequenciadeExibicao,SequenciaOriginal
	new simnao,SQL,subTexto,sudo,tab,tabs,tamanho,template,templatePendente,tempor,texto,TextoAlturadoCampo,TextoMaximodeCaracteres
	new tipo,TipodeWorkflow,tipoPai,tipoPredecessor,tipoPredecessor1,titulo,tooltip,Total,tpValores,trat,tratamento,tratPreferencial
	new ultFicha,unidExame,valor,valor2,valoresExames,valorI,valorOp,valorPreenchido,valorSub,valorX,valorx,vetNE,vetor,y
	new opcoesTerapeuticas,SequenciaAnterior,opcoesCadeiaImagens,objWFAnterior,TipodeWorkflowAnterior,possuiCamposEstadiamento
	new flRegimeTerapeutico,urlImagem,ExibirSomenteTexto,lista,somenteLeitura
	if codPainel="" {
		set codPainel 	= $get(%request.Data("codPainel",1))
		set layout = $get(%request.Data("layout",1))
		set codIDMenu = $get(%request.Data("codIDMenu",1))
		Set conteudoSearch = $get(%request.Data("conteudoSearch",1))
	}
	set:codOpcaoPainel="" codOpcaoPainel 	= $get(%request.Data("codOpcaoPainel",1))
	set:codPaciente="" codPaciente	= $get(%request.Data("codPaciente",1))
	set:cid="" cid = $get(%request.Data("codCID",1))
	if dataPEP=""{
		set ficha = $get(%request.Data("ficha",1))
		set fichaSeq = $get(%request.Data("fichaSeq",1))
		set dataPEP = $get(%request.Data("dataPEP",1))
		if dataPEP'="" set dataPEP = dataPEP + 1
	}
	if $get(codOriginal)="" set codOriginal = $get(%request.Data("codPainel",1))
	set codPaciente = $replace(codPaciente,"""","")
	set codEscolhaPainel = $piece(codPainel,";",2)
	set codPainel = $piece(codPainel,";",1)
	if codPainel="" w 1 quit
	Set rBloCondTera = 0
	;
	if '$data(^VARPEPPremiumConsulta(0,codPaciente,ficha,1)){
		do ..carregaInformacoesPermanentes(codPaciente,cid,ficha)
	}
	/*if codPainel=1306{
		set valorPreenchido=""
		set grupoWF = 16,flGrupo=1
		set fichaAnterior = ..recConsultaAnterior(codPaciente,ficha)
		set valorPreenchido = ""
		if fichaAnterior'=0{
			set campoPreenchido = ..recCampoPreenchidoFichas(grupoWF,codPaciente,cid,fichaAnterior)
			set valorPreenchido = campoPreenchido.valor
		}
		if valorPreenchido'="" set codPainel=1398,codOpcaoPainel=1
	}*/
	;
	set obj 	= $get(^VARWorkFlowPEP(0,cid,codPainel,1))
	set pai    	= $$$VARWorkFlowPEPPredecessor(obj)
	set tipoPai	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
	if pai'=""{
		set obj 	= $get(^VARWorkFlowPEP(0,cid,pai,1))
		set pai2   	= $$$VARWorkFlowPEPPredecessor(obj)
		if tipoPai=10,pai2="" set pai=""
	}
	set paiT = pai
	for{
		if paiT = "" quit
		if tipoPai=10 quit
		set obj 	= $get(^VARWorkFlowPEP(0,cid,paiT,1))
		set paiT    = $$$VARWorkFlowPEPPredecessor(obj)
		set tipoPai	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
		
	}
	if cid="C91.1"{
		if codPainel=1512,codOpcaoPainel=1{
			set codPainel=1320,codOpcaoPainel=""
		}
		if codPainel=1513,codOpcaoPainel=1{
			set codPainel=1321,codOpcaoPainel=""
		}
		if codPainel=1515{
			set codPainel=1306,codOpcaoPainel=""
		}
	}
	if cid="C90.0"{
		if codPainel=1512,codOpcaoPainel=1{
			set codPainel=44386,codOpcaoPainel=""
		}
		if codPainel=1513,codOpcaoPainel=1{
			set codPainel=44401,codOpcaoPainel=""
		}
		if codPainel=1515{
			set codPainel=44284,codOpcaoPainel=""
		}
	}	
	;
	set SQL = "SELECT 'original' Tipo,Sequencia,SequenciadeExibicao "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_codPainel_"'"
	if codOpcaoPainel'="" set SQL = SQL_" and %upper(OpcaodoPredecessor)='"_codOpcaoPainel_"' "
	;
	if $data(^mtemp.MAPPAMenuLean(0,%session.SessionId)){
		set SQL = SQL_" union SELECT 'temporaria' Tipo,Sequencia,SequenciadeExibicao SequenciadeExibicao "
		set SQL = SQL_" FROM mtemp.MAPPAMenuLean where company = 0 and job = '"_%session.SessionId_"' and %upper(PredecessorTemporario) = '"_codPainel_"'"
	}
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	;
	;
	if (((cid="C90.0"&&(codPainel = 48524))||(cid="C91.1"&&(codPainel = 20281)))&&(conteudoSearch'="")){
		set tCodExame = ""
		Set xSQL = "Select CodigodoExame From SQLUser.VARExames Where Company = 0 And "_
				   "%Upper(DescricaodoExame) Like %Upper('%"_conteudoSearch_"%')"	
		set xRS  = ##class(%SQL.Statement).%ExecDirect("",xSQL)
		while(xRS.%Next()){
			set tCodExame = tCodExame _$Select(tCodExame="":"",1:"','")_xRS.%Get("CodigodoExame")
		}
		Set xSQL = "Select Codigo From SQLUSer.VARWorkFlowAuxiliar "_
				   "Where Company = 0 And %Upper(DescricaodoExame) Like %Upper('%"_conteudoSearch_"%')"
		set xRS  = ##class(%SQL.Statement).%ExecDirect("",xSQL)
		while(xRS.%Next()){
			set tCodExame = tCodExame _$Select(tCodExame="":"",1:"','")_xRS.%Get("Codigo")
		}
		;
		Set tSeqWork = ""
		set xSQL = "SELECT 'original' Tipo,Sequencia,SequenciadeExibicao,Predecessor, OpcaodoPredecessor "
		set xSQL = xSQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
		set xSQL = xSQL_" And TipodeWorkflow Not In (1, 6, 7, 8, 10, 14, 15, 16, 19, 20, 21, 29, 30, 31, 32, 33, 34) "
		set xSQL = xSQL_" And (%Upper(Nome) Like %Upper('%"_conteudoSearch_"%') "
 		set:tCodExame'="" xSQL = xSQL_"Or Nome In ('"_tCodExame_"') "
 		set xSQL = xSQL_"Or %Upper(Opcoes) Like %Upper('%"_conteudoSearch_"%') "
		set xSQL = xSQL_"Or %Upper(GrupodeExibicaonaTela) Like %Upper('%"_conteudoSearch_"%') "
		set xSQL = xSQL_") Order By SequenciadeExibicao,Sequencia "
		set xRS  = ##class(%SQL.Statement).%ExecDirect("",xSQL)
		while(xRS.%Next()){
			
			Set xFlagPred = 0
			Set xSeqChec = xRS.%Get("Sequencia")
			For {
				Set xObjChec = $Get(^VARWorkFlowPEP(0, cid, xSeqChec, 1))
				Quit:xObjChec=""
				If ($$$VARWorkFlowPEPPredecessor(xObjChec)=4) Set xFlagPred = 1
				Set xSeqChec = $$$VARWorkFlowPEPPredecessor(xObjChec)
				Quit:xSeqChec=""					
			}
			If (xFlagPred=1) Continue
			
			If (xRS.%Get("OpcaodoPredecessor")'=""&&(xRS.%Get("Predecessor")'="")) {
				set tSeqWork = tSeqWork _$Select(tSeqWork="":"",1:"','")_xRS.%Get("Predecessor")
				Continue
			}
			set tSeqWork = tSeqWork _$Select(tSeqWork="":"",1:"','")_xRS.%Get("Sequencia")
		}
		;
		set SQL = "SELECT 'original' Tipo,Sequencia,SequenciadeExibicao "
		set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
		set SQL = SQL_" And Sequencia  in ('"_tSeqWork_"') "
		set SQL = SQL_"Order By SequenciadeExibicao,Sequencia "
		;
	}
	;
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set blocos = []
	set formul = []
	set formulDados = {}
	set imagem = []
	set blocosR = []
	set blocosL = []
	set tabs = []
	set formulG = []
	set formulGDados = []
	set tooltip = {}
	set Total = 0
	set flImagem=0
	set flL = 0
	set simnao = 0
	set grupoA = -1
	set grupo = ""
	set dxNumberGrupo = 1
	set achou = 0
	set flExames = 0
	set nedita=0
	set opcoesTerapeuticas = 0
	set opcoesCadeiaImagens = 0
	set flRegimeTerapeutico = ""
	set urlImagem = ""
	set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)'="" set nedita=1
	set possuiCamposEstadiamento = 0
	;;
	if codPainel = "regimeTerapeutico" {
		set retorno = ..recTelaRegimeTerapeutico(codPaciente,cid,ficha,fichaSeq,dataPEP,nedita,YUSER)
		set formul = retorno.formul
		set formulDados = retorno.formulDados
		set opcoesTerapeuticas = "TRAT"
		set linhaTratamento = 1
		set achou = 1
	}
	if codPainel = "TRAT"{
		set retorno = ..montaFormCiclos(codPaciente,cid,ficha,dataPEP,YUSER)
		set iterator = retorno.grupos.%GetIterator()
		for {
			quit:'iterator.%GetNext(.indiceI,.valorI)
			do formul.%Push(valorI)
		}
		set iterator = retorno.valores.%GetIterator()
		for {
			quit:'iterator.%GetNext(.indiceI,.valorI)
			do formulDados.%Set(indiceI,valorI)	
		}
		set opcoesTerapeuticas = "TRAT"
		set achou = 1
	}
	;;
	while(rs.%Next()){
		set achou = 1
		set botao = 0
		set TipoConsulta=rs.%Get("Tipo")
		set Sequencia=rs.%Get("Sequencia")
		;if Sequencia=1515{
		;	set retorno = ..recPainel(1306,"",codPaciente,cid,ficha,fichaSeq,dataPEP,1)
		;	do formul.%Push(retorno.formul.%Get(0))
		;	continue
		;
		;}
		set ExibirCampo = 0
		if $extract(Sequencia,1)="T"{
			set objWF = $get(^mtemp.MAPPAMenuLean(0,%session.SessionId,Sequencia,1))
			set Nome	= 	$piece(objWF,"~",1)
			set TipodeWorkflow = $piece(objWF,"~",3)
			set RespostaPadrao = ""
			set ComposicaoValoresExames = ""
		}else{
			set objWF = $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
			set SequenciadeExibicao		=	$$$VARWorkFlowPEPSequenciadeExibicao(objWF)
			set Nome					= 	$$$VARWorkFlowPEPNome(objWF)
			if $piece($GET(^mtemp.MAPPAMenuLean(0,%session.SessionId,Sequencia,1)),"~",1)'=""{
				set Nome = $piece(^mtemp.MAPPAMenuLean(0,%session.SessionId,Sequencia,1),"~",1)
			}
			set TipodeWorkflow			= 	$$$VARWorkFlowPEPTipodeWorkflow(objWF)
			set ComposicaoValoresExames	= 	$$$VARWorkFlowPEPComposicaoValoresExames(objWF)
			set NumericoMenor			= 	$$$VARWorkFlowPEPNumericoMenor(objWF)
			set NumericoMaior			= 	$$$VARWorkFlowPEPNumericoMaior(objWF)
			set NumericoCasasDecimais	= 	$$$VARWorkFlowPEPNumericoCasasDecimais(objWF)
			set AlertaResultadoMenorQue	= 	$$$VARWorkFlowPEPAlertaResultadoMenorQue(objWF)
			set AlertaResultadoMaiorQue	= 	$$$VARWorkFlowPEPAlertaResultadoMaiorQue(objWF)
			set TextoAlturadoCampo 		= 	$$$VARWorkFlowPEPTextoAlturadoCampo(objWF)
			set TextoMaximodeCaracteres	= 	$$$VARWorkFlowPEPTextoMaximodeCaracteres(objWF)
			set ExamesUnidadedeExibicao	= 	$$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
			set Opcoes					= 	$$$VARWorkFlowPEPOpcoes(objWF)
			set PermitirSelecionarMaisQue	= 	$$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
			set grupo					= 	$$$VARWorkFlowPEPGrupodeExibicaonaTela(objWF)
			set RotulodosCamposTexto	= 	$$$VARWorkFlowPEPRotulodosCamposTexto(objWF)
			set RespostaPadrao			= 	$$$VARWorkFlowPEPRespostaPadrao(objWF)
			set Icone					= 	$$$VARWorkFlowPEPIcone(objWF)
			set ExibirCampo				= 	+$$$VARWorkFlowPEPExibirCampo(objWF)
			set ExibirSomenteTexto 		=	+$$$VARWorkFlowPEPSomenteTexto(objWF)
			set somenteLeitura			= 	+$$$VARWorkFlowPEPSomenteLeitura(objWF)
			if somenteExibicao=1 set ExibirSomenteTexto=0
			if (conteudoSearch'="") {
				Set retGrupo = ""
				Do ##Class(VAR.CSP.MAPPA).GetGrupoCampo(cid, Sequencia, Sequencia, .retGrupo)
				set grupo = retGrupo
			}
		}
		;

		if ExibirCampo=1,ficha'=1 continue
		if ExibirCampo=2,ficha=1 continue
		set itemDeEstadiamento = ""
		if ..verificaCampoEstadiamento(cid,Sequencia) set itemDeEstadiamento = "<font class='recomendacaoTerapeuticaFooter'>*</font> ",possuiCamposEstadiamento = 1
		if (cid'="C90.0") {		
			if Nome=70,TipodeWorkflow=5 set itemDeEstadiamento = "<font class='recomendacaoTerapeuticaFooter'>*</font> ",possuiCamposEstadiamento = 1
		}
		;
		set SequenciaAnterior = codPainel
		if SequenciaAnterior'=""{
			set objWFAnterior 			= $get(^VARWorkFlowPEP(0,cid,SequenciaAnterior,1))
			set TipodeWorkflowAnterior	= 	$$$VARWorkFlowPEPTipodeWorkflow(objWFAnterior)
			if TipodeWorkflowAnterior=7{
				set opcoesCadeiaImagens = SequenciaAnterior
			}
			if (TipodeWorkflowAnterior=1)||(TipodeWorkflowAnterior=8){
				set predecessorTmp	= 	$$$VARWorkFlowPEPPredecessor(objWFAnterior)
				set select = "SELECT top 1 Sequencia FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_predecessorTmp_"' and TipodeWorkFlow='7'"
				set rsx = ##class(%SQL.Statement).%ExecDirect("",select)
				if rsx.%Next() {
					set opcoesCadeiaImagens = SequenciaAnterior
				}
			}
		}
		;
		set objValor = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,Sequencia)
		set valor = $piece(objValor,"~",1)
		set valor2 = $piece(objValor,"~",2)
		set dataAnt = $piece(objValor,"~",3)
		set horaAnt = $piece(objValor,"~",4)
		;
		set linha = {}
		set linha.ID 		= Sequencia
		set linha.Caption 	= itemDeEstadiamento_Nome
		set linha.Tipo 		= TipodeWorkflow
		set linha.Valor		= valor
		set linha.Valor2	= valor2
		;
		; Altera os valores da guia "tratamento"
		;
		if cid="C91.1"{
			if valor="",Sequencia=1201 { ; Linfonodomegalia progressiva sintomática
				set valoresExames("Fisicos")="287;204;211;210;212;262;267;884;1053;1054;1059;1060;1061;1062;87;1279;1282;1285;257;878;237;238;272;890;227;228;277;896"
				set valoresExames("Imagens1")="309;314;319;324;329;334;902;349;354;908;359;364;369;914;374;920;379;1069;1067;1074;1072;1079;1077;389;1171;1175"
				set valoresExames("Imagens2")="465;471;477;483;489;495;926;513;519;932;525;531;537;938;543;944;549;1086;1084;1091;1089;1096;1094;561;1182;1186"
				set valoresExames("Imagens3")="669;675;681;687;693;699;674;717;723;980;729;735;741;986;747;992;753;1120;1118;1125;1123;1130;1128;765;1193;1197"
				set valoresExames("Imagens4")="771;777;783;789;795;801;998;819;825;1004;831;837;843;1010;849;1016;855;1037;1035;1142;1140;1147;1145;867;"
				set linfo=0
				set tpValores=""
				for {
					set tpValores = $order(valoresExames(tpValores)) quit:tpValores=""								
					set objVal = $get(valoresExames(tpValores))
					for pie=1:1:$length(objVal,";"){
						set resultExam = $piece(objVal,";",pie)
						if resultExam="" quit
						set retPais = ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,resultExam) 
						if retPais<=0{
							continue
						}	
						set tamanho = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,resultExam)
						set tamanho = $p(tamanho,"~",1)
						if tamanho>10 set linfo=1 quit
					}
					quit:linfo
				}
				if linfo=1{
					set valor=1
				}else{
					set valor=0
				}
			}
			if valor="",Sequencia=1315 { ; Paciente tem esplenomegalia massiva
				set retPais = ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,222) 
				if retPais>0{
					set tamanho = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,222)
					set tamanho = $piece(tamanho,"~",1)
					if tamanho>6 set valor=1
					else  set valor=0
				}else{
					set valor=0
				}
				do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,$select(dataPEP'="":dataPEP-1,1:dataPEP),YUSER)
			}
			if valor="",Sequencia=1316 { ; Algum sintoma relacionado a doença?
				; Perda de peso
				set perda = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,180)
				set perda = $piece(perda,"~",1)
				set $piece(valor,";",1)=perda
				; ECOG>2
				set ecog = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,186)
				set ecog = $piece(ecog,"~",1)
				if ecog>2 set $piece(valor,";",2)=1
				else  set $piece(valor,";",2)=0
				; febre
				set febre = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,179)
				set febre = $piece(febre,"~",1)
				if febre set $piece(valor,";",3)=1
				else  set $piece(valor,";",3)=0

				; sudorese
				set sudo = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,178)
				set sudo = $piece(sudo,"~",1)
				if sudo set $piece(valor,";",4)=1
				else  set $piece(valor,";",4)=0
				;
				do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,$select(dataPEP'="":dataPEP-1,1:dataPEP),YUSER)

			}
		}
		;
		set ret = []
		if nedita{
			set vetNE = []
			do vetNE.%Push("Não é possível editar registros anteriores")
			do tooltip.%Set("tt"_Sequencia,vetNE)
		}else{
			;set ret = ..montaHistorico(codPaciente, cid, ficha,fichaSeq,dataAnt, horaAnt, Sequencia)
			;if YBED="SILMAR" do:ret.%Size()>0 tooltip.%Set("tt"_Sequencia,ret)
		}
		
		;
		if grupoA="-1" set grupoA=grupo
		if grupo'=grupoA,formul.%Size()>0{
			if (formul.%Size()>0){
				set formP = {}
				set formP.itemTyp]]><![CDATA[e = "group"
	      		if grupoA'="" {
		      		set formP.caption = grupoA
		      		set formP.cssClass = ""
		      		If ($$$VARWorkFlowPEPBordaTop($Get(^VARWorkFlowPEP(0,cid,Sequencia,1)))=1) {
		      			set formP.cssClass = "labelBordaTop "
	      			}
	      			If ($$$VARWorkFlowPEPEstiloGrupo($Get(^VARWorkFlowPEP(0,cid,Sequencia,1)))="roxo") {
		      			set formP.cssClass = formP.cssClass _$Select(formP.cssClass="":"",1:" ")_"labelFormatTituloRoxo"
	      			}
          		}
				set formP.items = formul
				if formul.%Size()>3,dxNumberGrupo{
					set formP.colCount = 2
				}
				do formulG.%Push(formP)
				set formul = []
				set dxNumberGrupo=1
			}
			set grupoA = grupo
		}
		if TipodeWorkflow = 5||(TipodeWorkflow = 12){
			set exames = "",unidExame=""
			for i=1:1:$length(Nome,";"){
				set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(Nome,";",i),1))
				if exames'="" set exames = exames_"/"
				set exames = exames_$$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
				;
				if unidExame'="" set unidExame = unidExame_"/"
				set unidExame = unidExame_$piece(objExames,"~",7)
			}
			if ExamesUnidadedeExibicao'="" set unidExame = ExamesUnidadedeExibicao
			set linha.Caption 	= itemDeEstadiamento_exames
		}
		if TipodeWorkflow=3 {
			;
			;
			if $length(ExamesUnidadedeExibicao,"|")>1{
				set formPai = []
				for piece = 1:1:$length(ExamesUnidadedeExibicao,"|"){
					set legenda = $piece(ExamesUnidadedeExibicao,"|",piece)
					if legenda="" continue
					set valorx = $piece(valor,";",piece)
					set form = {}
					set form.dataField = Sequencia_"^"_(piece-1)
					set form.editorType = "dxNumberBox"
					set form.cssClass	= "labelDetalhes"
					;
					set label = {}
					set label.alignment = "right"
					set label.text = linha.Caption
					if $extract(label.text,$length(label.text))="?" set label.showColon=0
					if piece>1 set label.text = " ",label.showColon=0
					set form.helpText = legenda
					set form.label = label
					set editorOptions = {}
					;set editorOptions.value = valor
					if NumericoCasasDecimais<1 {
						set fim = ""
					}else{
						set fim = "."
						for i=1:1:NumericoCasasDecimais{
							set fim = fim_"#"
						}
					}
					set editorOptions.format = "#,##0"_fim
					set editorOptions.showClearButton = 1
					set editorOptions.width = "100px"
					set editorOptions.height = "25px"
					set editorOptions.readOnly = nedita
					if NumericoMenor'="" set editorOptions.min = +NumericoMenor
					if NumericoMaior'="" set editorOptions.max = +NumericoMaior
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					do formulDados.%Set(form.dataField,valorx)
				}
				;set form = {}
				;set form.itemType = "group"
				;set form.colCount = 3
				;set form.items = formulDados
				;do formul.%Push(form)
			}else{
				;
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxNumberBox"
				set form.cssClass	= "labelDetalhes"
				;
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.helpText = ExamesUnidadedeExibicao
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				if NumericoCasasDecimais<1 {
					set fim = ""
				}else{
					set fim = "."
					for i=1:1:NumericoCasasDecimais{
						set fim = fim_"#"
					}
				}
				set editorOptions.format = "#,##0"_fim
				set editorOptions.showClearButton = 1
				set editorOptions.width = "100px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				if NumericoMenor'="" set editorOptions.min = +NumericoMenor
				if NumericoMaior'="" set editorOptions.max = +NumericoMaior
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
			}
			;
		}elseif TipodeWorkflow=13 {
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxDateBox"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label = label
			set editorOptions = {}
			set editorOptions.type = "date"
			set editorOptions.useMaskBehavior = 1
			set editorOptions.openOnFieldClick = 0
			set editorOptions.showDropDownButton = 1
			set editorOptions.showClearButton = 1
			set editorOptions.width = "160px"
			set editorOptions.height = "25px"
			set editorOptions.max = $zdate($horolog,3)
			set editorOptions.readOnly = nedita
			set form.editorOptions = editorOptions
			do formul.%Push(form)
			;
			if valor'=""{
				set valor = $zdate(valor,3)
				set valor = $replace(valor,"-","/")
			}
			do formulDados.%Set(form.dataField,valor)
		}elseif TipodeWorkflow=14 {
			set form = {}
			set form.itemType="group"
			set form.name="mult"_Sequencia
			set tituloCampo = "Marcador"
			if linha.Caption="Outros Hábitos?" set tituloCampo = "Outros Hábitos"
			if linha.Caption="Outros Achados?" set tituloCampo = "Outros Achados"
			set items = []
			for cont=1:1:$length(valor,";"){
				set dataF = Sequencia_"^"_(cont-1)
				set valorx = $piece(valor,";",cont)
				if valorx="" continue
				set form1 = {}
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = tituloCampo_" "_cont
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				do items.%Push(form1)
				do formulDados.%Set(dataF,valorx)
			}
			set form.items = items
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=linha.Caption
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			;
			set buttonOptions.onClick="'function(){insereLinhas('"_caminho_"','"_Sequencia_"','"_tituloCampo_"')}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)
		}elseif TipodeWorkflow=33 {
			set form = {}
			set form.itemType="group"
			set form.name="mult"_Sequencia
			set form.colCount = 12
			set tituloCampo = "Marcador"
			if linha.Caption="Outros Hábitos?" set tituloCampo = "Outros Hábitos"
			set items = []
			set insere = 0
			for cont=1:1:$length(valor,";"){
				set dataF = Sequencia_"^"_(cont-1)_"^1"
				set valorx = $piece(valor,";",cont)
				if valorx="" continue
				set insere = 1
				set valory = $piece(valorx,"^",1)
				set form1 = {}
				set form1.colSpan  = 3
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Data"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxDateBox"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set editorOptions.max = $zdate($horolog,3)
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				if valory'="" set valory = $zdate(valory,3)
				do formulDados.%Set(dataF,valory)
				;
				set dataF = Sequencia_"^"_(cont-1)_"^2"
				set valory = $piece(valorx,"^",2)
				set form1 = {}
				set form1.colSpan  = 9
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = linha.Caption
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.height = 36
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
            	
				do items.%Push(form1)
				do formulDados.%Set(dataF,valory)

			}
			if 'insere{
				set dataF = Sequencia_"^0^1"
				set form1 = {}
				set form1.colSpan  = 3
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Data"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxDateBox"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set editorOptions.max = $zdate($horolog,3)
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				;
				set dataF = Sequencia_"^0^2"
				set form1 = {}
				set form1.colSpan  = 9
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = linha.Caption
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.height = 36
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
			}
			set form.items = items
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=linha.Caption
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			;
			set buttonOptions.onClick="'function(){insereLinhasDoencas('"_caminho_"','"_Sequencia_"',2)}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)
		}elseif TipodeWorkflow=34 {
			set form = {}
			set form.itemType="group"
			set form.name="mult"_Sequencia
			set form.colCount = 12
			set items = []
			set insere = 0
			for cont=1:1:$length(valor,";"){
				set dataF = Sequencia_"^"_(cont-1)_"^1"
				set valorx = $piece(valor,";",cont)
				if valorx="" continue
				set insere = 1
				set valory = $piece(valorx,"^",1)
				set form1 = {}
				set form1.colSpan  = 9
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = linha.Caption
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.height = 36
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				;if valory'="" set valory = $zdate(valory,3)
				do formulDados.%Set(dataF,valory)
				;
				set dataF = Sequencia_"^"_(cont-1)_"^2"
				set valory = $piece(valorx,"^",2)
				set form1 = {}
				set form1.colSpan  = 3
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Medidas(cm)"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.placeholder = "___X___X___"
				set editorOptions.height = 36
				set editorOptions.maxLength = 11
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
            	
				do items.%Push(form1)
				do formulDados.%Set(dataF,valory)

			}
			if 'insere{
				set dataF = Sequencia_"^0^1"
				set form1 = {}
				set form1.colSpan  = 9
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = linha.Caption
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.height = 36
				set editorOptions.maxLength = 1000
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				;
				set dataF = Sequencia_"^0^2"
				set form1 = {}
				set form1.colSpan  = 3
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Medidas(cm)"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.placeholder = "___X___X___"
				set editorOptions.height = 36
				set editorOptions.maxLength = 11
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
			}
			set form.items = items
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=linha.Caption
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			;
			set buttonOptions.onClick="'function(){insereLinhasTextoTexto('"_caminho_"','"_Sequencia_"',2)}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)			
		}elseif TipodeWorkflow=35 {
			set form = {}
			set form.itemType="group"
			set form.name="mult"_Sequencia
			set form.colCount = 12
			set tituloCampo = "Marcador"
			if linha.Caption="Outros Hábitos?" set tituloCampo = "Outros Hábitos"
			set items = []
			set insere = 0
			for cont=1:1:$length(valor,";"){
				set dataF = Sequencia_"^"_(cont-1)_"^1"
				set valorx = $piece(valor,";",cont)
				if valorx="" continue
				set insere = 1
				set valory = $piece(valorx,"^",1)
				set form1 = {}
				set form1.colSpan  = 3
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Data"
		        set label.alignment = ]]><![CDATA["right" 
        	    set form1.l]]><![CDATA[abel = label
            	set form1.editorType = "dxDateBox"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set editorOptions.max = $zdate($horolog,3)
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				if valory'="" set valory = $zdate(valory,3)
				do formulDados.%Set(dataF,valory)
				;
				set dataF = Sequencia_"^"_(cont-1)_"^2"
				set valory = $piece(valorx,"^",2)
				set form1 = {}
				set form1.colSpan  = 9
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = linha.Caption
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.height = 36
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
            	
				do items.%Push(form1)
				do formulDados.%Set(dataF,valory)
				;
				set dataF = Sequencia_"^"_(cont-1)_"^3"
				set valory = $piece(valorx,"^",3)
				set form1 = {}
				set form1.colSpan  = 12
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Resultado do exame"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextArea"
				set editorOptions = {}
				set editorOptions.height = 64
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
            	
				do items.%Push(form1)
				do formulDados.%Set(dataF,valory)
			}
			if 'insere{
				set dataF = Sequencia_"^0^1"
				set form1 = {}
				set form1.colSpan  = 3
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = "Data"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxDateBox"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set editorOptions.max = $zdate($horolog,3)
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				;
				set dataF = Sequencia_"^0^2"
				set form1 = {}
				set form1.colSpan  = 9
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = linha.Caption
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				set editorOptions = {}
				set editorOptions.height = 36
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				;
				set dataF = Sequencia_"^0^3"
				set form1 = {}
				set form1.colSpan  = 12
				set form1.cssClass = "labelDetalhes"
				set form1.dataField = dataF
	            set label = {}
	            set label.text = linha.Caption
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextArea"
				set editorOptions = {}
				set editorOptions.height = 64
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do items.%Push(form1)
				
			}
			set form.items = items
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=linha.Caption
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			;
			set buttonOptions.onClick="'function(){insereLinhasExame3Campos('"_caminho_"','"_Sequencia_"',3)}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)
		}elseif (TipodeWorkflow=40) {
			set form = {}
			set form.dataField = Sequencia
			set label = {}
			set label.alignment = "right"
			set label.text = " "
			set form.label = label
			set form.editorType = "dxDataGrid"
			set editorOptions = {}
			set editorOptions.dataSource = "'dSListaResultadoInt'"
			set editorOptions.keyExpr = "id"
			set editorOptions.columns = ..ImpColunasResultados(codPaciente, 2)
			Set editorOptions.hoverStateEnabled = 1
			Set editorOptions.onEditingStart = "'funcResultOnEditingStart'"
			Set listX = {}, listX.allowSelectAll = 0, listX.mode = "multiple", listX.showCheckBoxesMode = "always"
			Set editorOptions.selection = listX
			;
			Set listX = {}, listX.enabled = 1
			Set editorOptions.export = listX
			Set listX = {}, listX.mode = "cell", listX.allowUpdating = 1, listX.useIcons = 1
			Set editorOptions.editing = listX
			Set editorOptions.onCellHoverChanged = "'funcResultOnCellHoverChanged'"
			;
			Set listX = {}, listX.allowCollapsing = 1, listX.autoExpandAll = 1
			Set editorOptions.grouping = listX
			Set listX = {}, listX.mode = "multiple"
			Set editorOptions.sorting = listX
			Set listX = {}, listX.visible = 1
			Set editorOptions.headerFilter = listX
			Set listX = {}, listX.visible = 0
			Set editorOptions.searchPanel = listX
			Set listX = {}, listX.visible = 1
			Set editorOptions.filterRow = listX
			Set listX = {}, listX.visible = 1
			Set editorOptions.groupPanel = listX
			Set editorOptions.height = "'funcResultHeight'"
			Set listX = {}, listX.enabled = 1
			Set editorOptions.columnFixing = listX
			Set editorOptions.showBorders = 1
			Set editorOptions.showRowLines = 1
			Set listX = {}, listX.enabled = 1, listX.mode = "dragAndDrop"
			Set editorOptions.columnChooser = listX
			Set editorOptions.onCellClick = "'funcResultOnCellClick'"
			Set editorOptions.onSelectionChanged = "'funcResultOnSelectionChanged'" 
			Set listX = {}, listX.enabled = 0
			Set editorOptions.stateStoring = listX
			Set editorOptions.onEditorPreparing = "'funcResultOnEditorPreparing'" 
			set editorOptions.rowAlternationEnabled = 1
			set editorOptions.width = "'funcResultWidth'"
			set editorOptions.onToolbarPreparing = "'funcOnToolbarPreparing'"
			Set listX = {}, listX.id = "gridResultadoExames"
			Set editorOptions.elementAttr = listX
			set editorOptions.customizeColumns = "'funcCustomizeColumns'"
			;
			set form.editorOptions = editorOptions
			set form.cssClass	= "labelDetalhes"
			do formul.%Push(form)
			;
			set form = {}
			set label = {}
			set label.text = " "
			set form.label = label
			set form.template = "" _
				"<div id='legendaGridResultado' style='width:95%;border:0px solid red;'>" _
					"<span style='color: #333333;'> &nbsp;<b>Legenda: &nbsp;</b></span>" _
					"<span style='height: 20px; padding-top:3px; color: #333333; background-color: #FFFFD9;border-radius: 2px;display: inline-block;vertical-align: middle;'>" _
					"&nbsp;Inserido/Editado Manualmente&nbsp;</span> " _
					"<span>&nbsp; </span>" _
					"<span style='height: 20px; padding-top:3px; color: #333333;border-radius: 2px;display: inline-block;vertical-align: middle;'>" _
					"<i class='far fa-window-maximize' ria-hidden='true'></i>&nbsp;Exibir conteúdo em POP-UP&nbsp;</span> " _
					"<span>&nbsp; </span>" _
					"<span style='height: 20px; padding-top:3px; color: #333333;border-radius: 2px;display: inline-block;vertical-align: middle;'>" _
					"<i class='fas fa-file-import' ria-hidden='true'></i>&nbsp;Transportar Dados para Cálculo&nbsp;</span> " _
					"<span>&nbsp; </span>" _
					"<span style='height: 20px; padding-top:3px; color: #333333;border-radius: 2px;display: inline-block;vertical-align: middle;'>" _
					"<i class='fas fa-file-import' ria-hidden='true' style='color:green;'></i>&nbsp;Dados Transportado&nbsp;</span> " _
				"</div>"
			do formul.%Push(form)
			//
		}elseif (TipodeWorkflow=22) {
			;
			set fichaAnterior = ..recConsultaAnterior(codPaciente,ficha)
			if $data(^VARPEPPremiumExames(0,codPaciente,fichaAnterior)){
				set seque=""
				for {
					set seque=$order(^VARPEPPremiumExames(0,codPaciente,fichaAnterior,seque)) quit:seque=""
					set obj = ^VARPEPPremiumExames(0,codPaciente,fichaAnterior,seque,1)
					set cexame = $$$VARPEPPremiumExamesCodigodoExame(obj)
					set pula=0
					for i=1:1:$length(valor,";"){
						if cexame=$piece(valor,";",i) set pula=1 quit
					}
					if pula continue
					set valor = valor_";"_	cexame
				}
			}
			;set valor="CFER"
			;
			set form = {}
			set form.itemType="group"
			set form.colCount=6
			set form.name="mult"_Sequencia
			set items = []
			set nvalor=""
			for cont=1:1:$length(valor,";"){
				set valorx = $piece(valor,";",cont)
				if valorx=""||(valorx="^")||(valorx="null^") continue
				if nvalor'="" set nvalor = nvalor_";"
				set nvalor = nvalor_valorx
			}
			if valor'=nvalor{
				do ..salvaPainel(codPaciente,Sequencia,nvalor,cid,ficha,fichaSeq,"",YUSER)
				set valor=nvalor
			}
			for cont=1:1:$length(valor,";"){
				set dataF = Sequencia_"^"_(cont-1)
				set valorx = $piece(valor,";",cont)
				set exame = $piece(valorx,"^",1)
				set resul = $piece(valorx,"^",2)
				if valorx="" continue
				set form1 = {}
				set form1.cssClass = "labelDetalhesExames1"
				set form1.colSpan = 3
				set form1.dataField = dataF_"^1"
	            set label = {}
	            set label.text = "Exame "_cont
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxSelectBox"
            	set editorOptions = {}
            	set editorOptions.acceptCustomValue = 1
            	set editorOptions.onCustomItemCreating = "'function(e) {if(!e.customItem) { e.customItem = {CodExame:e.text.toUpperCase(),DescExame:e.text.toUpperCase()};} }'"
            	set editorOptions.dataSource = "'dataSourceExames'"
    		    set editorOptions.valueExpr = "CodExame"
				set editorOptions.displayExpr = "DescExame"
				set editorOptions.searchEnabled = 1
            	set form1.editorOptions = editorOptions
				do items.%Push(form1)
				do formulDados.%Set(dataF_"^1",exame)
				;
				set form1 = {}
				set form1.cssClass = "labelDetalhesExames2"
				set form1.colSpan = 3
				set form1.dataField = dataF_"^2"
	            set label = {}
	            set label.text = "Resultado"
		        set label.alignment = "right" 
        	    set form1.label = label
            	set form1.editorType = "dxTextBox"
				do items.%Push(form1)
				do formulDados.%Set(dataF_"^2",resul)
				;
			}
			set form.items = items
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=linha.Caption
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			
			;
			set buttonOptions.onClick="'function(){insereLinhasExames('"_caminho_"','"_Sequencia_"')}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)
		}elseif TipodeWorkflow=4 {
			set dxNumberGrupo=0
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxTextArea"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label = label
			set editorOptions = {}
			;set editorOptions.value = valor
			set editorOptions.height = TextoAlturadoCampo*22
			set editorOptions.maxLength = TextoMaximodeCaracteres
			set editorOptions.readOnly = nedita
			if (+somenteLeitura = 1) { set editorOptions.readOnly = 1 }
			set form.editorOptions = editorOptions
			do formul.%Push(form)
			;
			set valor = $replace(valor,"\n",$c(10))
			do formulDados.%Set(form.dataField,valor)
			;
		}elseif (TipodeWorkflow=5)||(TipodeWorkflow=11)||(TipodeWorkflow=12) {
			if TipodeWorkflow=5 set flExames = 1
			if TipodeWorkflow=2||(TipodeWorkflow=11){
				set template=1
				/*set paix 			= Sequencia
				set objPai 			= ""
				for {
					set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
					set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
					quit:predecessorPai=""
					set paix = predecessorPai
					if paix=1321 set template=1 quit
					if paix=38493 set template=1 quit
				}*/
				if linha.Caption["O Exame foi normal?" set template=0
				if linha.Caption["Ausência de acometimento ósseo ou" set template=0
				set dxNumberGrupo=0
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))'="?" set label.text=label.text_"?"
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				;
				set objPrinc 			= $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
				If ($$$VARWorkFlowPEPAjudaCampo(objPrinc)'="") {
					Set label.text = "<i id='help-"_Sequencia_"' xWidth='300' conteudo='"_$$$VARWorkFlowPEPAjudaCampo(objPrinc)_"' class='fas fa-question-circle' onMouseOver='exibirPopoverDiagnostico(1, this);' onMouseOut='exibirPopoverDiagnostico(0, this);' style='cursor:help;'></i> &nbsp;"_label.text
				}
				;				
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 1
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 0
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				//set editorOptions.onValueChanged = "'function(){alert();}'"
				;
				;if valor="",RespostaPadrao'="" {
				;	set valor=RespostaPadrao
				;	do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,$select(dataPEP'="":dataPEP-1,1:dataPEP),YUSER)
				;}
				;
				set formulF = []
				set caminhoV = {}
				for cont=0:1:1{
					set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
					if (retorno.formul.%Size())||(retorno.imagem.%Size()){
						set paiCaminho = Sequencia
						set caminho = Sequencia_";"_cont_"^Sub"
						set predecessor	= Sequencia
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPE]]><![CDATA[PPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_tipoPredecessor_"^Sub."_caminho
						}
						;
						if template{
							do caminhoV.%Set("caminho"_cont,"filho"_Sequencia_"_"_cont_"_Sub")
						}else{
							do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
						}
						set formF = {}
						;set form.alignItemLabels = $select($length(caminho,".")>1:0,1:1)
						;set form.alignItemLabelsInAllGroups = 1
						set formF.itemType = "group"
						set formF.name = Sequencia_";"_cont_"^Sub"
						if template{
							set formF.cssClass = "filho"_Sequencia_"_"_cont_"_Sub "_$select(valor'=cont:"invisivel",1:"")_" subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						}else{
							if retorno.formul.%Size(){
								set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
							}
							set visivel = 0
							if valor = cont set visivel=1
							if valor="",RespostaPadrao'="",$piece(RespostaPadrao,".",1)=cont set visivel=1
							set formF.visible  = visivel
						}
		                ;set formF.caption = linha.Caption
						if retorno.formul.%Size(){
							set formF.items = retorno.formul
						}else{
							set formF.imagem = retorno.imagem
							set formF.blocosL = retorno.blocosL
							set formF.blocosR = retorno.blocosR
							set formF.urlImagem = retorno.urlImagem
							set formF.template = "<div id='detalhesSub' caminho='"_formF.name_"'></div>"
						}
						do formulF.%Push(formF)
						;
						set iterator = retorno.formulDados.%GetIterator()
						for {
							quit:'iterator.%GetNext(.indiceI,.valorI)
							do formulDados.%Set(indiceI,valorI)	
						}
					}
				}
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					set editorOptions.naoAtualizaAuto = $piece(RespostaPadrao,".",2)
					if template{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupoNovo'"
					}else{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					}
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					;
				}else{
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
				}
			}
			// ComposicaoValoresExames = 1 -> Campo Numérico
			if ComposicaoValoresExames=1{
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxNumberBox"
				set form.cssClass	= "labelDetalhes"
				set form.helpText = unidExame
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				if NumericoCasasDecimais<1 {
					set fim = ""
				}else{
					set fim = "."
					for i=1:1:NumericoCasasDecimais{
						set fim = fim_"#"
					}
				}
				set editorOptions.format = "#,##0"_fim
				set editorOptions.showClearButton = 1
				set editorOptions.width = "100px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				if NumericoMenor'="" set editorOptions.min = +NumericoMenor
				if NumericoMaior'="" set editorOptions.max = +NumericoMaior
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
			}
			// ComposicaoValoresExames = 2 -> Numerico/Data do Exame
			if ComposicaoValoresExames=2{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=2
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.dataField = Sequencia
				set form1.editorType = "dxNumberBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.helpText = unidExame
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				if NumericoCasasDecimais<1 {
					set fim = ""
				}else{
					set fim = "."
					for i=1:1:NumericoCasasDecimais{
						set fim = fim_"#"
					}
				}
				set editorOptions.format = "#,##0"_fim
				set editorOptions.showClearButton = 1
				set editorOptions.width = "100px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				if NumericoMenor'="" set editorOptions.min = +NumericoMenor
				if NumericoMaior'="" set editorOptions.max = +NumericoMaior
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				do formulDados.%Set(form1.dataField,$select(valor="":"",1:+valor))
				;
				set form1 = {}
				set form1.colSpan	= 1
				set form1.editorType = "dxDateBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Data de Realização"
				set form1.label = label
				set editorOptions = {}
				set editorOptions.type = "date"
				set editorOptions.useMaskBehavior = 1
				set editorOptions.openOnFieldClick = 0
				set editorOptions.showDropDownButton = 1
				set editorOptions.showClearButton = 1
				set editorOptions.width = "160px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				set editorOptions.max = $zdate($horolog,3)
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}

			// ComposicaoValoresExames = 13 -> Numerico/Percentual
			if ComposicaoValoresExames=13{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=2
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.dataField = Sequencia
				set form1.editorType = "dxNumberBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.helpText = unidExame
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				if NumericoCasasDecimais<1 {
					set fim = ""
				}else{
					set fim = "."
					for i=1:1:NumericoCasasDecimais{
						set fim = fim_"#"
					}
				}
				set editorOptions.format = "#,##0"_fim
				set editorOptions.showClearButton = 1
				set editorOptions.width = "100px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				set editorOptions.min = 0
				if NumericoMaior'="" set editorOptions.max = +NumericoMaior
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				do formulDados.%Set(form1.dataField,$select(valor="":"",1:+valor))
				;
				set form1 = {}
				set form1.colSpan	= 1
				set form1.editorType = "dxNumberBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.helpText = "%"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "%"
				set label.visible = 0
				set form1.label = label
				
				set editorOptions = {}
				set editorOptions.width = "100px"
				set editorOptions.height = "25px"
				set editorOptions.max	= 100
				set editorOptions.min	= 0
				set editorOptions.format = "#,##0.##"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}
			// ComposicaoValoresExames = 3 -> Positivo/Negativo
			if ComposicaoValoresExames=3{
				set simnao = 1
				;
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Positivo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Negativo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				;
				set formulF = []
				set caminhoV = {}
				for cont=0:1:1{
					set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
					if retorno.formul.%Size(){
						set paiCaminho = Sequencia
						set caminho = Sequencia_";"_cont_"^Sub"
						set predecessor	= Sequencia
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_"^Sub."_caminho
						}
						;
						if Sequencia=168{
							set composicao = []
							do composicao.%Push(166)
							do composicao.%Push(167)
							do composicao.%Push(168)
							do caminhoV.%Set("composicao",composicao)
						}
						;
						do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
						set formF = {}
						;set form.alignItemLabels = $select($length(caminho,".")>1:0,1:1)
						;set form.alignItemLabelsInAllGroups = 1
						set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						set formF.itemType = "group"
						set formF.name = Sequencia_";"_cont_"^Sub"
						;
						set formF.visible  = $select(valor'=cont:0,1:1)
		                ;set formF.caption = linha.Caption
						set formF.items = retorno.formul
						if Sequencia=168{
							set valorX = 0
							for seq = 166,167,168{
								set dataAntX = $order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,seq,dataPEP),-1)
								if dataAntX'=""{
									set horaAntX = $order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,seq,dataAntX,""),-1)
									if horaAntX'=""{
										set obj = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,seq,dataAntX,horaAntX,1))
										set valorX = valorX + $$$VARPEPPremiumValorRegistrado(obj)
									}
								}
							}
							set formF.visible  = $select(valorX>0:1,1:0)
						}
						do formulF.%Push(formF)
						;
						set iterator = retorno.formulDados.%GetIterator()
						for {
							quit:'iterator.%GetNext(.indiceI,.valorI)
							do formulDados.%Set(indiceI,valorI)	
						}
					}
				}
				
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,valor)
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					
					;
				}else{
					; Alteração temporária. Criar mecanismo via cadastro de workflow
					if (Sequencia=166)||(Sequencia=167){
						set SequenciaOriginal = 168
						set paiCaminho = SequenciaOriginal
						set caminho = SequenciaOriginal_";1^Sub"
						set predecessor	= SequenciaOriginal
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_"^Sub."_caminho
						}
						;
						set composicao = []
						do composicao.%Push(166)
						do composicao.%Push(167)
						do composicao.%Push(168)
						do caminhoV.%Set("composicao",composicao)
						do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
						set elementAttr = {}
						set elementAttr = caminhoV
						set editorOptions.elementAttr = elementAttr
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					}
					set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					do formulDados.%Set(form.dataField,valor)
				}
			}
			// ComposicaoValoresExames = 10 -> Sim/Não/Não Avaliado
			if ComposicaoValoresExames=10{
				set dxNumberGrupo=0
				set simnao = 1
				;
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))'="?" set label.text=label.text_"?"
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Avaliado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor)
			}
			// ComposicaoValoresExames = 4 -> Positivo/Negativo/Texto
			if ComposicaoValoresExames=4{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=3
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 2
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Positivo"
				do opcoesSimN]]><![CDATA[ao.%Push(opcaoSimNao)
				set opc]]><![CDATA[aoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Negativo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Obs."
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}
			// ComposicaoValoresExames = 12 -> Positivo/Negativo/Data
			if ComposicaoValoresExames=12{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=2
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 1
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Positivo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Negativo"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.colSpan	= 1
				set form1.editorType = "dxDateBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Data de Realização"
				set form1.label = label
				set editorOptions = {}
				set editorOptions.type = "date"
				set editorOptions.showClearButton = 0
				set editorOptions.useMaskBehavior = 1
				set editorOptions.openOnFieldClick = 0
				set editorOptions.showDropDownButton = 1
				set editorOptions.showClearButton = 1
				set editorOptions.width = "160px"
				set editorOptions.height = "25px"
				set editorOptions.readOnly = nedita
				set editorOptions.max = $zdate($horolog,3)
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}

			// ComposicaoValoresExames = 11 -> Sim/Não/Não Avaliado/Texto
			if ComposicaoValoresExames=11{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=3
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 2
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Avaliado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Obs."
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)

				set form.items = itemSub
				do formul.%Push(form)
				;
				do formulDados.%Set(form1.dataField,valor2)
				;
			}
			// ComposicaoValoresExames = 5 -> Texto
			if ComposicaoValoresExames=5{
				set dxNumberGrupo=0
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxTextBox"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,valor)
				;
			}
			// ComposicaoValoresExames = 6 -> Mutado/Não Mutado
			if ComposicaoValoresExames=6{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set labe = {}
				set labe.alignment = "right"
				set labe.text = linha.Caption
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor)
				;
			}
			// ComposicaoValoresExames = 7 -> Mutado/Não Mutado/Texto
			if ComposicaoValoresExames=7{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    set form.colCount=3
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				set form1.colSpan = 2
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label = {}
				set label.alignment = "right"
				set label.text = "Obs."
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.maxLength = 1000
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor2)

				set form.items = itemSub
				do formul.%Push(form)
				;
				;do formulDados.%Set(form1.dataField,valor2)
			}
			// ComposicaoValoresExames = 8 -> Mutado/Não Mutado/Não Fez o Teste
			if ComposicaoValoresExames=8{
				set dxNumberGrupo=0
				set simnao = 1
				set form = {}
				set form.dataField = Sequencia
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set labe = {}
				set labe.alignment = "right"
				set labe.text = linha.Caption
				set form.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Fez o Teste"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor)
				;
			}
			// ComposicaoValoresExames = 9 -> Mutado/Não Mutado/Não Fez o Teste/Texto
			if ComposicaoValoresExames=9{
				if (cid '= "C90.0") set dxNumberGrupo=0
				set simnao = 1
				set form = {}
			    ;set form.colCount=4
				set form.itemType="group"
				set itemSub = []
				set form1 = {}
				;set form1.colSpan = 3
				set form1.dataField = Sequencia
				set form1.editorType = "dxRadioGroup"
				set form1.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set subTexto = ""
				if TipodeWorkflow=12 {
					set subTexto = "Mutação em "
					if itemDeEstadiamento'="" set linha.Caption = $piece(linha.Caption,itemDeEstadiamento,2,$length(linha.Caption,itemDeEstadiamento)),subTexto = itemDeEstadiamento_subTexto
				}
				set label.text = subTexto_linha.Caption
				set form1.label = label
				set editorOptions = {}
				;set editorOptions.value = valor
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "0"
				set opcaoSimNao.Name = "Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "1"
				set opcaoSimNao.Name = "Não Mutado"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = "2"
				set opcaoSimNao.Name = "Não Fez o Teste"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor)
				;
				set form1 = {}
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes"
				set form1.dataField = Sequencia_"_"_2
				set label1 = {}
				set label1.alignment = "right"
				set label1.text = RotulodosCamposTexto
				set form1.label = label1
				set editorOptions = {}
				;set editorOptions.value = valor2
				set editorOptions.readOnly = nedita
				set editorOptions.maxLength = 1000
				set form1.editorOptions = editorOptions
				do itemSub.%Push(form1)
				do formulDados.%Set(form1.dataField,valor2)
				;
				set form.items = itemSub
				do formul.%Push(form)
				;
			}

		}elseif TipodeWorkflow=7 {
			set dxNumberGrupo=0
			set flImagem=1
			set codImagem = +$piece(Nome,";",1)
			set codArea = +$piece(Nome,";",2)
			set linha.Caption 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
				set linha.Caption 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			}
			set linha.CoordenadaY = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",2)
			set linha.CoordenadaX = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",3)
			set lado = 1
			if codImagem=1,linha.CoordenadaX>210 set lado = 2
			if codImagem=2,linha.CoordenadaX>250 set lado = 2
			if codImagem=3,linha.CoordenadaX>210 set lado = 2
			if $data(ordenacaoTexto) set ExibirSomenteTexto = 1
			if somenteExibicao=1,linha.Valor'=1 continue
			if ExibirSomenteTexto{
				kill ordenacao
				set ordenacaoTexto(+linha.Valor,$select(linha.Caption="":Sequencia,1:linha.Caption)) =  Sequencia
			}else{
				set urlImagem = $piece($get(^VARWorkFlowImagens(0,codImagem,1)),"~",2)
				set ordenacao(lado,+linha.CoordenadaY,Sequencia) =  linha
			}
			;do blocosL.%Push(linha)
		}elseif TipodeWorkflow=8||(TipodeWorkflow=1) {
			if $data(ordenacaoTexto){
				set ordenacaoTexto(+linha.Valor,$select(linha.Caption="":Sequencia,1:linha.Caption)) =  Sequencia
			}else{
				set dxNumberGrupo=0
				if flL#2=0{
					do blocosL.%Push(linha)
				}else{
					do blocosR.%Push(linha)
				}
				set flL = flL + 1
			}
		}elseif (TipodeWorkflow=9)&&(+PermitirSelecionarMaisQue=0) {
			set paix 			= Sequencia
			set objPai 			= ""
			set template=1
			/*for {
				set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
				set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
				quit:predecessorPai=""
				set paix = predecessorPai
				if paix=1321 set template=1 quit
				if paix=38493 set template=1 quit

			}*/
			if linha.Caption["O Exame foi normal?" set template=0
			if linha.Caption["Ausência de acometimento ósseo ou" set template=0
			set dxNumberGrupo=0
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxRadioGroup"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label = label
			set vetorOp = []
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set valorOp = {}
				set valorOp.ID = +cont
				set valorOp.Caption = valorSub
				do vetorOp.%Push(valorOp)
			}
			set editorOptions = {}
			set editorOptions.dataSource = vetorOp
			set editorOptions.displayExpr = "Caption"
			set editorOptions.valueExpr = "ID"
			;set editorOptions.value = +valor
			set objPrinc 			= $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
			If ($$$VARWorkFlowPEPLayout(objPrinc)'="") {
 				set editorOptions.layout = $$$VARWorkFlowPEPLayout(objPrinc)
			}else{
				if $length(Opcoes,"|")<=4 set editorOptions.layout = "horizontal"
			}
			set editorOptions.readOnly = nedita
			set form.editorOptions = editorOptions
			;
			set formulF = []
			set caminhoV = {}
			for cont=1:1:$length(Opcoes,"|"){
				set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
				if retorno.formul.%Size(){
					set paiCaminho = Sequencia
					set caminho = Sequencia_";"_cont_"^Sub"
					set predecessor	= Sequencia
					for{
						if predecessor = "" quit
						if codOriginal = predecessor quit
						set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
						set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
						set tipoPredecessor	= $$$VARWorkFlowPEPT]]><![CDATA[ipodeWorkflow(obj)
						if predecessor = "" quit
						set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
						if (tipoPredecessor1=15) quit
						if codOriginal = predecessor quit
						set precFinal = predecessor
						if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
						set caminho = precFinal_"^Sub."_caminho
					}
					;
					if template{
						do caminhoV.%Set("caminho"_cont,"filho"_Sequencia_"_"_cont_"_Sub")
					}else{
						do caminhoV.%Set("caminho"_cont,$select(grupo'="":grupo_".",1:"")_caminho)
					}
					set formF = {}
					set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
					set formF.itemType = "group"
					if template{
						set formF.cssClass = "filho"_Sequencia_"_"_cont_"_Sub "_$select(valor'=cont:"invisivel",1:"")_" subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
					}else{
						set formF.name = Sequencia_";"_cont_"^Sub"
						set visivel = 0
						if valor = cont set visivel=1
						if valor="",RespostaPadrao'="",RespostaPadrao=cont set visivel=1
						set formF.visible  = visivel
					}
					set formF.items = retorno.formul
					do formulF.%Push(formF)
					set iterator = retorno.formulDados.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formulDados.%Set(indiceI,valorI)	
					}
				}
			}
			
			if formulF.%Size()>0{
				set elementAttr = {}
				set elementAttr = caminhoV
				set editorOptions.naoAtualizaAuto = 1
				set editorOptions.elementAttr = elementAttr
				if template{
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupoNovo'"
				}else{
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
				}
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
				set iterator = formulF.%GetIterator()
				for {
					quit:'iterator.%GetNext(.indiceI,.valorI)
					do formul.%Push(valorI)	
				}
				
				;
			}else{
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				do formul.%Push(form)
				;
				do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
			}
		}elseif (TipodeWorkflow=9)&&(+PermitirSelecionarMaisQue=1) {
			set paix 			= Sequencia
			set objPai 			= ""
			set template=1
			/*for {
				set objPai 			= $get(^VARWorkFlowPEP(0,cid,paix,1))
				set predecessorPai	= $$$VARWorkFlowPEPPredecessor(objPai)
				quit:predecessorPai=""
				set paix = predecessorPai
				if paix=1321 set template=1 quit
				if paix=38493 set template=1 quit

			}*/
			if linha.Caption["O Exame foi normal?" set template=0
			if linha.Caption["Ausência de acometimento ósseo ou" set template=0
			set dxNumberGrupo=0
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set form = {}
				set form.dataField = Sequencia_"^"_(cont-1)
				set form.editorType = "dxCheckBox"
				set form.cssClass	= "labelDetalhes"
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				set:cont>1 label.text = " ",label.showColon=0,form.cssClass="labelDetalhesCheck"
				if $extract(label.text,$length(label.text))="?" set label.showColon=0
				set form.label = label
				set editorOptions = {}
				set editorOptions.text = valorSub
				set editorOptions.readOnly = nedita
				;
				set formulF = [],caminhoV = {}
				set retorno = ..recPainel(Sequencia,cont,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
				if retorno.formul.%Size(){
					set paiCaminho = form.dataField
					set caminho = form.dataField_"^Sub"
					set predecessor	= Sequencia
					for{
						if predecessor = "" quit
						if codOriginal = predecessor quit
						set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
						set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
						set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
						if predecessor = "" quit
						set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
						set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
						if (tipoPredecessor1=15) quit
						if codOriginal = predecessor quit
						set precFinal = predecessor
						if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
						set caminho = precFinal_"^Sub."_caminho
					}
					;
					if template{
						do caminhoV.%Set("caminhotrue","filho"_$replace(form.dataField,"^","_"))
					}else{
						do caminhoV.%Set("caminhotrue",$select(grupo'="":grupo_".",1:"")_caminho)
					}
					set formF = {}
					set formF.name = form.dataField_"^Sub"
					set formF.itemType = "group"
					if template{
						set formF.cssClass = "filho"_$replace(form.dataField,"^","_")_" "_$select($piece(valor,";",cont)'=1:"invisivel",1:"")_" subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
					}else{
						set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						set formF.visible  = $select($piece(valor,";",cont)'=1:0,1:1)
					}
					set formF.items = retorno.formul
					do formulF.%Push(formF)
					set iterator = retorno.formulDados.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formulDados.%Set(indiceI,valorI)	
					}
				}
		
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					if template=1{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupoNovo'"
					}else{
						set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					}
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,+$piece(valor,";",cont))
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					;
				}else{
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,+$piece(valor,";",cont))
					;
				}
				
			}
			;
		}elseif TipodeWorkflow=10{
			set tab = {}
			set tab.id		= Sequencia
			set tab.text	= linha.Caption
			set tab.width	= "100px"
			do tabs.%Push(tab)
		}elseif TipodeWorkflow=2{
			set simnao=1
			set dxNumberGrupo=0
			set form = {}
			set form.colCount = 10
			set form.itemType = "group"
			set form.dataField	  = Sequencia
			set label={}
			set label.alignment = "right"
			set label.text 		= linha.Caption
			if $extract(label.text,$length(label.text))="?" set label.showColon=0
			set form.label 		= label
			;set form.template	= "'templateSimNaoForm("_Sequencia_",'"_$select(valor="":"",1:+valor)_"')'"
			set items = []
			set form1 = {}
			set form1.itemType = "button"
			set form1.cssClass	= "btnSimF btn"_Sequencia_"Yes buttonsDetalhes "_$select(valor="1":"btnSelected",1:"")
			set buttonOptions = {}
			set buttonOptions.icon = "check"
			set buttonOptions.height = "30px"
			set buttonOptions.text="Sim"
			set buttonOptions.type="default"
			set buttonOptions.onClick = "'function(){respostaDetalheForm("_Sequencia_",1,1)}'"
			set form1.buttonOptions = buttonOptions
			do items.%Push(form1)
			;
			set form1 = {}
			set form1.itemType = "button"
			set form1.cssClass	= "btnNaoF btn"_Sequencia_"No buttonsDetalhes "_$select(valor="0":"btnSelected",1:"")
			set buttonOptions = {}
			set buttonOptions.icon = "clear"
			set buttonOptions.height = "30px"
			set buttonOptions.text="Não"
			set buttonOptions.type="default"
			set buttonOptions.onClick = "'function(){respostaDetalheForm("_Sequencia_",0,1)}'"
			set form1.buttonOptions = buttonOptions
			do items.%Push(form1)
			set form.items=items
			;
			do formul.%Push(form)
			;
			do formulDados.%Set(form.dataField,valor)
			;
		}elseif (TipodeWorkflow=16){
			set flRegimeTerapeutico = "regimeTerapeutico"
			/*set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass = "titleDestaque"
			set buttonOptions = {}
			set buttonOptions.icon = "fas fa-bong"
			set buttonOptions.text = "Regimes Terapêuticos"
			set buttonOptions.onClick = "'function(){abrePainelSub('"_flRegimeTerapeutico_"','','','')}'"
			set form.buttonOptions = buttonOptions
			do formul.%Push(form)*/
			
		}elseif TipodeWorkflow=17||(TipodeWorkflow=18){
			if TipodeWorkflow=18,linha.Caption'["Exames"{
				set form = {}
				set form.template = "<hr class='hrClass'>"
				do formul.%Push(form)
			}
			set form = {}
			set form.dataField = Sequencia
			set form.tipoImp = 0
			if Nome["Tratamento" set form.tipoImp = 9
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.text=linha.Caption
			set buttonOptions.readOnly = nedita
			if TipodeWorkflow=18 {
				set buttonOptions.icon = Icone
				if linha.Caption["Exames"{
					set buttonOptions.onClick = "'function(){abreExames(1)}'"
				}else{
					set buttonOptions.onClick = "'function(){abrePainelSub('"_Sequencia_"','','','')}'"
				}
			}else{
				set buttonOptions.icon = "print"
				set buttonOptions.onClick = "'function(){imprimir(0)}'"
			}
			set form.buttonOptions = buttonOptions
			;
			do formul.%Push(form)
			set botao=1
		}elseif TipodeWorkflow=18{
			set form = {}
			set form.dataField = Sequencia
			set form.tipoImp = 0
			set form.itemType = "button"
			set form.horizontalAlignment = "right"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = Icone
			set buttonOptions.text = linha.Caption
			set buttonOptions.onClick = "'function(){abreExames(1)}'"
			set editorOptions.readOnly = nedita
			set form.buttonOptions = buttonOptions
			;
			do formul.%Push(form)			
		}elseif TipodeWorkflow=20{
			set form = {}
			set texto = "<div class='recomendacaoTerapeuticaAlerta' style='padding-top:5px;'>Caracteristicas</div>"
			for i=1:1:$length(linha.Caption,"<br>"){
				set ret = $piece(linha.Caption,"<br>",i)
				set texto = texto _ "<li>"_ret_"</li>"
			}
			set form.template = "<div class='recomendacaoTerapeutica' style='padding-left:30px'>"_texto_"<div>"
			do formul.%Push(form)
		}elseif TipodeWorkflow=36{
			set dxNumberGrupo=0
			set form = {}
			set form.dataField = Sequencia
			set form.editorType = "dxTextBox"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set editorOptions = {}
			set editorOptions.visible = 0
			set form.editorOptions = editorOptions
			do formul.%Push(form)
			do formulDados.%Set(form.dataField,"")
			;
		}elseif TipodeWorkflow=21{
			set valorPreenchido=""
			set fichaAnterior = ..recConsultaAnterior(codPaciente,ficha)
			set valorPreenchido = ""
			if fichaAnterior'=0{
				set campoPreenchido = ..recTratamento(codPaciente,cid,fichaAnterior)
				set valorPreenchido = campoPreenchido.valor
			}
			if valorPreenchido'=""{
				set tratamento = $piece(campoPreenchido.valor,";",1)
				set codRegime = $piece(campoPreenchido.valor,";",2)
				set objMed = $get(^VARWorkFlowRegTera(YM,cid,codRegime,1))
				set medicamento = $piece(objMed,"~",1)
				;
				set form = {}
				set form.dataField = Sequencia
				set label = {}
				set label.alignment = "right"
				if $piece(valorPreenchido,";",2)=0{
					set label.text = "Paciente está em observação sem<br>tratamento específico (Watch and Wait)?"
				}else{
					set label.text = "Paciente está em tratamento com<br>"_medicamento_"?"
				}
				set label.showColon=0
				set form.label = label
				set form.editorType = "dxRadioGroup"
				set form.cssClass	= "labelDetalhes"
				set editorOptions = {}
				set opcoesSimNao = []
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 1
				set opcaoSimNao.Name = "Sim"
				do opcoesSimNao.%Push(opcaoSimNao)
				set opcaoSimNao = {}
				set opcaoSimNao.ID = 0
				set opcaoSimNao.Name = "Não"
				do opcoesSimNao.%Push(opcaoSimNao)
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "horizontal"
				set editorOptions.readOnly = nedita
				;
				
				;
				;; Caso escolha sim

				set formulF = [],caminhoV = {}
				for resp=0,1{
					set retorno = ..recPainel(Sequencia,resp,codPaciente,cid,ficha,fichaSeq,dataPEP,1)
					if retorno.formul.%Size(){
						set paiCaminho = form.dataField
						set caminho = form.dataField_"^Sub"
						set predecessor	= Sequencia
						for{
							if predecessor = "" quit
							if codOriginal = predecessor quit
							set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
							set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
							set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if predecessor = "" quit
							set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
							set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
							if (tipoPredecessor1=15) quit
							if codOriginal = predecessor quit
							set precFinal = predecessor
							if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
							set caminho = precFinal_"^Sub."_caminho
						}
						;
						do caminhoV.%Set("caminho"_resp,$select(grupo'="":grupo_".",1:"")_caminho_resp)
						set formF = {}
						set formF.name = form.dataField_"^Sub"_resp
						set formF.itemType = "group"
						set formF.cssClass = "subGrupos subGrupo"_$select($length(caminho,".")#2=0:2,1:1)
						set formF.visible  = $select(valor'=resp:0,1:1)
						set formF.items = retorno.formul
						do formulF.%Push(formF)
						set iterator = retorno.formulDados.%GetIterator()
						for {
							quit:'iterator.%GetNext(.indiceI,.valorI)
							do formulDados.%Set(indiceI,valorI)	
						}
					}
				}		
				if formulF.%Size()>0{
					set elementAttr = {}
					set elementAttr = caminhoV
					set editorOptions.elementAttr = elementAttr
					set editorOptions.onValueChanged = "'templateAbreAbaixoGrupo'"
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
					set iterator = formulF.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formul.%Push(valorI)	
					}
					;
				}else{
					;set editorOptions.readOnly = nedita
					set form.editorOptions = editorOptions
					do formul.%Push(form)
					;
					do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
					;
				}
				
				;
				;do formul.%Push(form)
				;do formulDados.%Set(form.dataField,$select(valor="":"",1:+valor))
				;
				set form = {}
				set form.dataField = Sequencia_"_2"
				set label = {}
				set label.alignment = "right"
				set label.text = "Conduta e observações"
				set form.label = label
				set form.editorType = "dxTextArea"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set form.editorOptions = editorOptions
				set form.cssClass	= "labelDetalhes"
				do formul.%Push(form)
				do formulDados.%Set(form.dataField,valor2)
				;
				set form = {}
				set form.itemType = "button"
				set form.horizontalAlignment = "center"
				set form.cssClass = "titleDestaque"
				set buttonOptions = {}
				set buttonOptions.icon = "fas fa-pills"
				set buttonOptions.text = "Conduta"
				set:cid="C90.0" buttonOptions.visible = 0
				set buttonOptions.onClick = "'function(){abrePainelSub('"_1515_"','','','')}'"
				set form.buttonOptions = buttonOptions
				do formul.%Push(form)
				;
				set form = {}
				set form.template = "<hr class='hrClass'>"
				do formul.%Push(form)

				;
				/*set form = {}
				set form.itemType = "button"
				set form.horizontalAlignment = "center"
				set form.cssClass = "titleDestaque"
				set buttonOptions = {}
				set buttonOptions.icon = "fas fa-bong"
				set buttonOptions.text = "Regimes Terapêuticos"
				set buttonOptions.onClick = "'function(){abrePainelSu]]><![CDATA[b('"_1290_"','','','')}'"
				set]]><![CDATA[ form.buttonOptions = buttonOptions
				do formul.%Push(form)*/
				set flRegimeTerapeutico = "regimeTerapeutico"
			}else{
				set grupoWF = 15,flGrupo=1
				set campoPreenchido = ..recCampoPreenchido(grupoWF,flGrupo,codPaciente,cid,ficha,fichaSeq)

				;
				;set form = {}
				;set form.dataField = campoPreenchido.sequencia
				;set form.tipoImp = 0
				;set form.itemType = "button"
				;set form.horizontalAlignment = "center"
				;set form.cssClass	= "labelDetalhes"
				;
				;set buttonOptions = {}
				;set buttonOptions.icon = "fas fa-pills"
				;set buttonOptions.text="Tratamento"_campoPreenchido.sequencia
				;set buttonOptions.disabled = nedita
				;set buttonOptions.onClick = "'function(){abrePainelSub('"_1306_"','','','')}'"
				;set form.buttonOptions = buttonOptions
				;do formul.%Push(form)
				if campoPreenchido.sequencia'=""{
					set retorno = ..recPainel(campoPreenchido.sequencia,"",codPaciente,cid,ficha,fichaSeq,dataPEP,1)
					if retorno.opcoesRegimeTerapeutico'="" set flRegimeTerapeutico = retorno.opcoesRegimeTerapeutico
					set form = {}
					set form.itemType = "group"
					set form.items = retorno.formul
					do formul.%Push(form)
					;;
					set iterator = retorno.formulDados.%GetIterator()
					for {
						quit:'iterator.%GetNext(.indiceI,.valorI)
						do formulDados.%Set(indiceI,valorI)	
					}
					;;if retorno.executar set executar = retorno.executar
				}
			}
			
		}elseif TipodeWorkflow=6{
			set retorno = ..montaFormCiclos(codPaciente,cid,ficha,dataPEP,YUSER)
			set iterator = retorno.grupos.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formul.%Push(valorI)
			}
			set iterator = retorno.valores.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formulDados.%Set(indiceI,valorI)	
			}
			set opcoesTerapeuticas = "TRAT"
		}elseif TipodeWorkflow=24{
			set retorno = ..montaAnamnese(codPaciente,cid,ficha,dataPEP,nedita,Sequencia,valor)
			set iterator = retorno.grupos.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formul.%Push(valorI)
			}
			set iterator = retorno.valores.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formulDados.%Set(indiceI,valorI)	
			}
		}elseif TipodeWorkflow=25{
			set retorno = ..montaExameFisico(codPaciente,cid,ficha,dataPEP,nedita,Sequencia,valor)
			set iterator = retorno.grupos.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formul.%Push(valorI)
			}
			set iterator = retorno.valores.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formulDados.%Set(indiceI,valorI)	
			}
		}elseif TipodeWorkflow=26{
			set retorno = ..montaAntecedentesPessoais(codPaciente,cid,ficha,dataPEP,nedita,Sequencia,valor)
			set iterator = retorno.grupos.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formul.%Push(valorI)
			}
			set iterator = retorno.valores.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formulDados.%Set(indiceI,valorI)	
			}
		}elseif TipodeWorkflow=27{
			set retorno = ..montaAntecedentesFamiliares(codPaciente,cid,ficha,dataPEP,nedita,Sequencia,valor)
			set iterator = retorno.grupos.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formul.%Push(valorI)
			}
			set iterator = retorno.valores.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formulDados.%Set(indiceI,valorI)	
			}
		}elseif TipodeWorkflow=28{
			set retorno = ..montaMedicamentos(codPaciente,cid,ficha,dataPEP,nedita,Sequencia,valor)
			set iterator = retorno.grupos.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formul.%Push(valorI)
			}
			set iterator = retorno.valores.%GetIterator()
			for {
				quit:'iterator.%GetNext(.indiceI,.valorI)
				do formulDados.%Set(indiceI,valorI)	
			}
			
	 	}elseif (TipodeWorkflow=29)||(TipodeWorkflow=31){ // Lista de Doenças
	 		//
	 		set valorold = valor
			set nvalor=""
			for contManut = 1:1:$length(valor,";"){
				if valor="" continue
				set subValor = $piece(valor,";",contManut)
				set save=0
				for subManut = 1:1:$length(subValor,"^"){
					if $piece(subValor,"^",subManut)'="" set save=1
				}
				if save {
					if nvalor'="" set nvalor = nvalor_";"
					set nvalor = nvalor_subValor
				}
			}
			set valor=nvalor
	 		if 'nedita,valorold'=valor{
		 		do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,"",YUSER)
	 		}
			
	 		//
			set form = {}
			set form.itemType = "group"
			set form.colCount = 6
			set form.name="mult"_Sequencia
			set itemsForm = []
			set prim=0
			for cont=1:1:$length(valor,";"){
				set valorx = $piece(valor,";",cont)
				set doenca = $piece(valorx,"^",1)
				set tempo = $piece(valorx,"^",2)
				set obs = $piece(valorx,"^",3)
				set familiar = $piece(valorx,"^",4)
				set tempoMedida = $piece(valorx,"^",5)
				if prim,valorx="" continue
				set prim=1
				;;
				if TipodeWorkflow=31{
					set form1 = {}
					set form1.dataField = Sequencia_"^"_(cont-1)_"^4"
					set form1.colSpan	= 2
					set label = {}
					set label.alignment = "right"
					set label.text = "Familiar"
					set form1.label = label
					set form1.editorType = "dxSelectBox"
					set editorOptions = {}
					set editorOptions.readOnly = nedita
					set editorOptions.dataSource = "'dataSourceFamiliar'"
				    set editorOptions.valueExpr = "Codigo"
					set editorOptions.displayExpr = "Descricao"
					set editorOptions.searchEnabled = 1
					set form1.editorOptions = editorOptions
					set form1.cssClass	= "labelDetalhes semMinWidth"
					do formulDados.%Set(form1.dataField,familiar)
					do itemsForm.%Push(form1)
				}
				//
				set form1 = {}
				set form1.dataField = Sequencia_"^"_(cont-1)_"^1"
				set form1.colSpan	= 4
				if TipodeWorkflow=31 set form1.colSpan	= 2
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				set form1.label = label
				set form1.editorType = "dxSelectBox"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set editorOptions.dataSource = "'dataSourceCID'"
			    set editorOptions.valueExpr = "Codigo"
				set editorOptions.displayExpr = "Descricao"
				set editorOptions.searchEnabled = 1
            	set editorOptions.acceptCustomValue = 1
            	set editorOptions.onCustomItemCreating = "'function(e) {if(!e.customItem) { e.customItem = {Codigo:e.text.toUpperCase(),Descricao:e.text.toUpperCase()};} }'"
				set editorOptions.layout = "horizontal"
				set form1.editorOptions = editorOptions
				set form1.cssClass	= "labelDetalhes semMinWidth"
				do formulDados.%Set(form1.dataField,doenca)
				do itemsForm.%Push(form1)
				//
				set form1 = {}
				set form1.dataField = Sequencia_"^"_(cont-1)_"^2"
				set form1.colSpan	= 1
				set label = {}
				set label.alignment = "right"
				set label.text = "Há quanto tempo?"
				set form1.label = label
				set form1.editorType = "dxNumberBox"
				;set form1.helpText = "(meses)"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set editorOptions.width = "60px"
				set editorOptions.format = "#,##0"
				set editorOptions.min	 = 0
				set editorOptions.max = 99
				set form1.editorOptions = editorOptions
				set form1.cssClass	= "labelDetalhes semMinWidth"
				do formulDados.%Set(form1.dataField,tempo)
				do itemsForm.%Push(form1)
				//
				//
				set form1 = {}
				set form1.dataField = Sequencia_"^"_(cont-1)_"^5"
				set form1.colSpan	= 1
				set label = {}
				set label.alignment = "left"
				set label.text = "Há quanto tempo?"
				set label.visible = 0
				set form1.label = label
				set form1.editorType = "dxRadioGroup"
				set editorOptions = {}
				set editorOptions.width = "170px"
				set editorOptions.readOnly = nedita
				set editorOptions.layout = "horizontal"
				set tempoArray = []
				set tempo1 = {}
				set tempo1.Id="MESES"
				set tempo1.Caption="Meses"
				do tempoArray.%Push(tempo1)
				set tempo1 = {}
				set tempo1.Id="ANOS"
				set tempo1.Caption="Anos"
				do tempoArray.%Push(tempo1)
				
				set editorOptions.dataSource = tempoArray
			    set editorOptions.valueExpr = "Id"
				set editorOptions.displayExpr = "Caption"
				set form1.editorOptions = editorOptions
				set form1.cssClass	= "labelDetalhes semMinWidth"
				do formulDados.%Set(form1.dataField,tempoMedida)
				do itemsForm.%Push(form1)
				//
				set form1 = {}
				set form1.dataField = Sequencia_"^"_(cont-1)_"^3"
				set form1.colSpan	= 6
				set label = {}
				set label.alignment = "right"
				set label.text = "Observações"
				set form1.label = label
				set form1.editorType = "dxTextArea"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set form1.editorOptions = editorOptions
				set form1.cssClass	= "labelDetalhes"
				do formulDados.%Set(form1.dataField,obs)
				do itemsForm.%Push(form1)
			}
			set form.items = itemsForm
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=$replace(linha.Caption,"<br>"," ")
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			
			;
			set buttonOptions.onClick="'function(){insereLinhasDoencas('"_caminho_"','"_Sequencia_"','"_$select(TipodeWorkflow=31:5,1:4)_"')}'"
			set form.buttonOptions = buttonOptions



			do formul.%Push(form)

			//
	 	}elseif TipodeWorkflow=30{ // Lista de Medicamentos
			set form = {}
			set form.dataField = Sequencia
			set label = {}
			set label.alignment = "right"
			set label.text = linha.Caption
			set form.label = label
			set form.editorType = "dxTagBox"
			set editorOptions = {}
			set editorOptions.readOnly = nedita
			set editorOptions.dataSource = "'dataSourceMedicamentos'"
		    set editorOptions.valueExpr = "CodMedicamento"
			set editorOptions.displayExpr = "DescMedicamento"
			set editorOptions.searchEnabled = 1
			set form.editorOptions = editorOptions
			set form.cssClass	= "labelDetalhes"
			do formul.%Push(form)
			set vetorMed = []
			for i=1:1:$length(valor,";"){
				set cod = $piece(valor,";",i)
				if cod="" continue
				do vetorMed.%Push(cod)
			}
			do formulDados.%Set(form.dataField,vetorMed)
			//
	 	}elseif TipodeWorkflow=32{ // Lista de Medicamentos com Posologia

	 		set valorold = valor
			set nvalor=""
			for contManut = 1:1:$length(valor,";"){
				if valor="" continue
				set subValor = $piece(valor,";",contManut)
				set save=0
				for subManut = 1:1:$length(subValor,"^"){
					if $piece(subValor,"^",subManut)'="" set save=1
				}
				if save {
					if nvalor'="" set nvalor = nvalor_";"
					set nvalor = nvalor_subValor
				}
			}
			set valor=nvalor
	 		if 'nedita,valorold'=valor{
		 		do ..salvaPainel(codPaciente,Sequencia,valor,cid,ficha,fichaSeq,"",YUSER)
	 		}
			
	 		//
			set form = {}
			set form.itemType = "group"
			set form.colCount = 6
			set form.name="mult"_Sequencia
			set itemsForm = []
			set prim=0
			for cont=1:1:$length(valor,";"){
				set valorx = $piece(valor,";",cont)
				set doenca = $piece(valorx,"^",1)
				set tempo = $piece(valorx,"^",2)
				set obs = $piece(valorx,"^",3)
				set familiar = $piece(valorx,"^",4)
				set tempoMedida = $piece(valorx,"^",5)
				if prim,valorx="" continue
				set prim=1
				;;
				set form1 = {}
				set form1.dataField = Sequencia_"^"_(cont-1)_"^1"
				set form1.colSpan	= 3
				set label = {}
				set label.alignment = "right"
				set label.text = linha.Caption
				set form1.label = label
				set form1.editorType = "dxSelectBox"
				set editorOptions = {}
				set editorOptions.readOnly = nedita
				set editorOptions.dataSource = "'dataSourceMedicamentos'"
			    set editorOptions.valueExpr = "CodMedicamento"
				set editorOptions.displayExpr = "DescMedicamento"
				set editorOptions.searchEnabled = 1
				set editorOptions.layout = "horizontal"
				set form1.editorOptions = editorOptions
				set form1.cssClass	= "labelDetalhes semMinWidth"
				do formulDados.%Set(form1.dataField,doenca)
				do itemsForm.%Push(form1)
				//
				set form1 = {}
				set form1.dataField = Sequencia_"^"_(cont-1)_"^2"
				set form1.colSpan	= 3
				set label = {}
				set label.alignment = "right"
				set label.text = "Posologia"
				set form1.label = label
				set form1.editorType = "dxTextBox"
				set form1.cssClass	= "labelDetalhes semMinWidth"
				do formulDados.%Set(form1.dataField,tempo)
				do itemsForm.%Push(form1)
			}
			set form.items = itemsForm
			do formul.%Push(form)
			;
			set form = {}
			set form.itemType = "button"
			set form.horizontalAlignment = "center"
			set form.cssClass	= "labelDetalhes"
			set label = {}
			set label.visible = 0
			set form.label = label
			set buttonOptions = {}
			set buttonOptions.icon = "add"
			set buttonOptions.text=$replace(linha.Caption,"<br>"," ")
			set buttonOptions.disabled = nedita
			;
			set paiCaminho = Sequencia
			set predecessor	= Sequencia
			set caminho="mult"_Sequencia
			for{
				if predecessor = "" quit
				if codOriginal = predecessor quit
				set obj 			= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set predecessor		= $$$VARWorkFlowPEPPredecessor(obj)
				set opcPredecessor	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
				set tipoPredecessor	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if predecessor = "" quit
				set obj 				= $get(^VARWorkFlowPEP(0,cid,predecessor,1))
				set tipoPredecessor1	= $$$VARWorkFlowPEPTipodeWorkflow(obj)
				if (tipoPredecessor1=15) quit
				if codOriginal = predecessor quit
				set precFinal = predecessor
				if opcPredecessor'="" set precFinal=predecessor_";"_opcPredecessor
				set caminho = precFinal_"^Sub."_caminho
			}
			;
			set caminho = $select(grupo'="":grupo_".",1:"")_caminho
			
			;
			set buttonOptions.onClick="'function(){insereLinhasDoencas('"_caminho_"','"_Sequencia_"','2')}'"
			set form.buttonOptions = buttonOptions



			do formul.%Push(form)

			//
	 	}else{
			do blocos.%Push(linha)
		}
	}
	if layout=1 set codIDMenu = ""
	if codPainel="TRAT" {
		set titulo = "Tratamento Atual"
	}elseif codPainel="regimeTerapeutico"{
		set titulo = "Regimes Terapêuticos"
	}else{
		set titulo = ..recTituloCompleto(cid,codPainel,1,codIDMenu)
	}
	;
	if $data(ordenacaoTexto){
		set imagemTexto = 1
		set array = []
		set primeiro = "",ultimo=""
		set sequAnt = ""
		set val = ""
		for {
			set val = $order(ordenacaoTexto(val),-1) quit:val=""
			set nome = ""
			for {
				set nome = $order(ordenacaoTexto(val,nome)) quit:nome=""
				set sequ = ordenacaoTexto(val,nome)
				if primeiro="" set primeiro = sequ
				set ultimo = sequ
				set lista = {}
				do lista.%Set("Codigo",sequ,"String")
				set lista.Nome = nome
				do lista.%Set("anterior",sequAnt,"String")
				set proximo = $order(ordenacaoTexto(val,nome))
				if proximo=""{
					set pl = $order(ordenacaoTexto(val),-1)
					if pl'="" set proximo = $order(ordenacaoTexto(pl,""))
					set:proximo'="" proximo = ordenacaoTexto(pl,proximo)
				}else{
					set proximo = ordenacaoTexto(val,proximo)
				}
				do lista.%Set("proximo",proximo,"String")
				set lista.group = $select(val=0:"Sem resposta",1:"")
				set sequAnt = sequ
				do array.%Push(lista)
			}
		}
		set formulSub = []
		set form = {}
		set form.dataField	="anterior"
		set form.cssClass = "semBordas"
		set form.itemType = "button"
		set form.horizontalAlignment = "right"
		set buttonOptions ]]><![CDATA[= {}
		set buttonOptions.type="back"
		set buttonOptions.icon="chevronleft"
		set buttonOptions.onClick = "'function(){mudaSelecaoImagem(1,'"_primeiro_"')}'"
		set form.buttonOptions = buttonOptions
		do formulSub.%Push(form)
		
		set form = {}
		set form.dataField = "SelecaoImagem"
		set form.cssClass = "formRodape semBordas"
		set label = {}
		set label.alignment = "right"
		set label.visible = 0
		set form.label = label
		set form.editorType = "dxSelectBox"
		set editorOptions = {}
		set editorOptions.placeholder = "Selecione a área..."
		set editorOptions.readOnly = nedita
		set editorOptions.dataSource = "'montaDataSource('"_array.%ToJSON()_"')'"
	    set editorOptions.valueExpr = "Codigo"
		set editorOptions.displayExpr = "Nome"
		set editorOptions.grouped = 1
		set editorOptions.searchEnabled = 1
		set buttons = []
		set button = {}
		set button.name	= "btnClear"
		set button.location = "after"
		set options = {}
		set options.stylingMode= "text"
		set options.icon = "fas fa-eraser"
		set options.onClick= "'function(e) {var valor = dxFormulario.option('formData').SelecaoImagem;console.log(dxFormulario.option('formData'));if (valor==null) { return };limparCampos(valor,1);}'"
		set button.options = options
		do buttons.%Push(button)
		do buttons.%Push("dropDown")
		set editorOptions.buttons = buttons
		set editorOptions.onValueChanged = "'function(a){abreSubOpcoes(a.value);}'"
		set form.editorOptions = editorOptions
		do formulSub.%Push(form)
		;
		set form = {}
		set form.dataField	="proximo"
		set form.cssClass = "semBordas"
		set form.itemType = "button"
		set form.horizontalAlignment = "left"
		set buttonOptions = {}
		set buttonOptions.type="back"
		set buttonOptions.icon="chevronright"
		set buttonOptions.onClick = "'function(){mudaSelecaoImagem(2,'"_primeiro_"')}'"
		set form.buttonOptions = buttonOptions
		do formulSub.%Push(form)
		;		
		set form = {}
		set form.colSpan=3
		set form.dataField = "SelecaoImagemBaixo"
		set label = {}
		set label.visible = 0
		set form.label = label
		set form.template = "<div id='dvSelecaoAbaixo'></div>"
		do formulSub.%Push(form)

		set form = {}
		set form.colCount = 3
		set form.itemType = "group"
		set form.items = formulSub

		do formul.%Push(form)
	}
	if $data(ordenacao){
		set lado = ""
		for {
			set lado = $order(ordenacao(lado)) quit:lado=""
			set y = ""
			for {
				set y = $order(ordenacao(lado,y)) quit:y=""
				set cod = ""
				for {
					set cod = $order(ordenacao(lado,y,cod)) quit:cod=""
					set linha = ordenacao(lado,y,cod)
					set linha.lado = lado
					do imagem.%Push(linha)	
				}
			}
		}
		
	}
	;
	if (formul.%Size()>0){
		if 'interno{
			if possuiCamposEstadiamento {
				set form = {}
				set form.template = "&nbsp;"
				do formul.%Push(form)
				set form = {}
				set form.template = "<font class='recomendacaoTerapeuticaFooter'>* Campos necessários para o cálculo do estadiamento</font>"
				do formul.%Push(form)
			}else{
				set form = {}
				set form.template = "&nbsp;"
				do formul.%Push(form)
			}
		}
		if formulG.%Size()>0||(grupo'=""){
			if botao=1,grupo'=""{
				set formP = {}
				set formP.template = "<hr class='hrClass'>"
				do formulG.%Push(formP)
			}
			;
			set formP = {}
			set formP.itemType = "group"
		    set:grupo'="" formP.caption = $get(grupo)
			set formP.items = formul
			if formul.%Size()>6,dxNumberGrupo{
				set formP.colCount = 2
			}
			do formulG.%Push(formP)
		}else{
			set formulG = formul
		}
	}
	;
	set retorno = {}
	set retorno.dividir = 1
	if simnao>0 set retorno.dividir = 0
	set retorno.pai = pai
	set retorno.titulo = titulo
	set retorno.formul = formulG
	set retorno.formulDados = formulDados
	set retorno.formulTooltip = tooltip
	set retorno.blocos = blocos
	set retorno.blocosL = blocosL
	set retorno.blocosR = blocosR
	set retorno.imagem = imagem
	set retorno.urlImagem = urlImagem
	set retorno.tabs = tabs
	set retorno.achou = achou
	set retorno.opcoesTerapeuticas = opcoesTerapeuticas
	set retorno.opcoesCadeiaImagens = opcoesCadeiaImagens
	set retorno.opcoesRegimeTerapeutico = flRegimeTerapeutico
	set retorno.imagemTexto = +$get(imagemTexto)
	;
	Set xValorPreenchido = ""
	If (cid = "C90.0"){
		set xFichaAnterior = ..recConsultaAnterior(codPaciente,ficha)
		if xFichaAnterior'=0 {
			set xCampoPreenchido = ..recTratamento(codPaciente,cid,xFichaAnterior)
			set xValorPreenchido = xCampoPreenchido.valor
		}
	}
	Set:xValorPreenchido="" rBloCondTera=1
	set retorno.rBloCondTera = rBloCondTera
	;
	;
	set objAtual = $get(^VARWorkFlowPEP(0,cid,codPainel,1))
	set tipoAtual = $$$VARWorkFlowPEPTipodeWorkflow(objAtual)
	;
	if tipoAtual=10 set retorno.proximaAba = "1"
	if $extract(codPainel)="T" set retorno.proximaAba = "1"
	;set retorno.exames = flExames
	set retorno.executar = $get(executar)
	if interno quit retorno
	/*if imagem{
		set retorno.imagemResumo = "Diagnóstico Atual:<br>"_..recuperaResultadosImagens(codPaciente,cid,codPainel,ficha)
	}*/
	/*if flExames=1{
		set formP = {}
		set formP.template = "<font class='dx-form-group-caption'>Resultados dos Exames</font><br><br><div id='divResultadosExamesPEP'>"
		do formulG.%Push(formP)
		set retorno.formul = formulG
	}*/
	write $replace($replace(retorno.%ToJSON(),"""'",""),"'""","")
	write:$get(executar)'="" "~"_executar
	quit]]></Implementation>
</Method>

<Method name="recImagemAreas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPainel 	= $get(%request.Data("codPainel",1))
	set codOpcaoPainel 	= $get(%request.Data("codOpcaoPainel",1))
	set codPaciente	= $get(%request.Data("codPaciente",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	set codPaciente = $replace(codPaciente,"""","")
	set codEscolhaPainel = $piece(codPainel,";",2)
	set painelAtual = $piece(codPainel,";",1)

	set nivelCorreto = 0
	for {
		set SQL = "SELECT Sequencia,Tipodeworkflow "
		set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
		set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
		set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
		while(rs.%Next()){
			set Sequencia = rs.%Get("Sequencia")
			set tipodeworkflow = rs.%Get("Tipodeworkflow")
			if tipodeworkflow=7 set nivelCorreto = 1 quit
		}
		quit:nivelCorreto
		if painelAtual = Sequencia quit
		set painelAtual = Sequencia
	}
	;

	set linha = {}
	if codPainel'=""{
		set linha = ..recPainel(painelAtual,"",codPaciente,cid,ficha,fichaSeq,dataPEP,1,,,1)
	}
	write linha.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getDataSourceArea">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("codPaciente",1))
	Set cid 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	Set dataField 	= $piece($Get(%request.Data("dataField",1)),"^")
	for {
		if dataField="" quit
		set obj = $get(^VARWorkFlowPEP(0,cid,dataField,1))
		if obj="" continue
		set predecessor = $$$VARWorkFlowPEPPredecessor(obj)
		set tipo	    = $$$VARWorkFlowPEPTipodeWorkflow(obj)
		if (tipo=7)||(tipo=1)||(tipo=8) quit
		set dataField = predecessor
	}
	if predecessor'=""{
		set rs = ##class(%SQL.Statement).%ExecDirect("","select Sequencia,Nome,Tipodeworkflow from VARWorkFlowPEP where company = 0 and %upper(predecessor) = %upper('"_predecessor_"')")
		while(rs.%Next()){
			set Sequencia 		= rs.%Get("Sequencia")
			set Nome 			= rs.%Get("Nome")
			set TipodeWorkFlow 	= rs.%Get("TipodeWorkflow")
			set objValor = ..recValorSalvo(codPaciente,cid,ficha,1,Sequencia)
			set valor = $piece(objValor,"~",1)
			set valor2 = $piece(objValor,"~",2)
			if (TipodeWorkFlow=8)||(TipodeWorkFlow=1){
				set ordenacaoTexto(+valor,Nome)=Sequencia
			}else{
				set codImagem = +$piece(Nome,";",1)
				set codArea = +$piece(Nome,";",2)
				set Nome 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
					set Nome 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
				}
				set ordenacaoTexto(+valor,Nome)=Sequencia
			}
		}
		set array = []
		set primeiro = "",ultimo=""
		set sequAnt = ""
		set val = ""
		for {
			set val = $order(ordenacaoTexto(val),-1) quit:val=""
			set nome = ""
			for {
				set nome = $order(ordenacaoTexto(val,nome)) quit:nome=""
				set sequ = ordenacaoTexto(val,nome)
				if primeiro="" set primeiro = sequ
				set ultimo = sequ
				set lista = {}
				do lista.%Set("Codigo",sequ,"String")
				set lista.Nome = nome
				do lista.%Set("anterior",sequAnt,"String")
				set proximo = $order(ordenacaoTexto(val,nome))
				if proximo=""{
					set pl = $order(ordenacaoTexto(val),-1)
					if pl'="" set proximo = $order(ordenacaoTexto(pl,""))
					set:proximo'="" proximo = ordenacaoTexto(pl,proximo)
				}else{
					set proximo = ordenacaoTexto(val,proximo)
				}
				do lista.%Set("proximo",proximo,"String")
				set lista.group = $select(val=0:"Sem resposta",1:"")
				set sequAnt = sequ
				do array.%Push(lista)
			}
		}
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="montaFormCiclos">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,dataPEP,YUSER</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set gruposRetorno = []
	set valores = {}
	set campoPreenchido	= ..recTratamento(codPaciente, cid, ficha)
	set sequencia = campoPreenchido.sequencia
	do ..salvaPainel(codPaciente,sequencia,campoPreenchido.valor,cid,ficha,1,YUSER)
	;
	set editaT = 1
	set ultFicha 	= $order(^VARPEPPremiumConsulta(0,codPaciente,""),-1)
	if ultFicha="" set ultFicha = ultFicha + 1
	if $piece($get(^VARPEPPremiumConsulta(0,codPaciente,ultFicha,1)),"~",4)'="" {
		set ultFicha = ultFicha+1
	}
	if ficha<ultFicha set editaT=0
	;
	set tratamento = $piece(campoPreenchido.valor,";",1)
	set codRegime = $piece(campoPreenchido.valor,";",2)
	set objMed = $get(^VARWorkFlowRegTera(0,cid,codRegime,1))
	set medicamento = $piece(objMed,"~",1)
	;
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = 1
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = 0
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	;
	set form = {}
	set form.caption	= "Tratamento: "_medicamento
	set form.name		= "tratamento"
	set form.itemType	= "group"
	set items = []
	set flEstilo=0
	set ciclo=""
	for {
		set ciclo = $order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ciclo)) quit:ciclo=""
		set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ciclo,1))
		set tratCiclico = +$$$VARWorkFlowRegTeraCicloContinuo(objCiclos)
	}
	if tratCiclico=2{
		Set xCiclo = ciclo
		set ultCiclo = $order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,""),-1)+1
		set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ultCiclo,1))
		;set duracao 	= $$$VARWorkFlowRegTeraCicloPeriodicidade(objCiclos)
		;
		set ciclo = ultCiclo-1
		set final = ciclo+2
		for {
			set ciclo = ciclo+1
			if ciclo>final quit
			;
			set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo,1))
			;
			set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
			if conclusao=1 set final = final + 1
		}
		set ciclos = ciclo-1
		Set ciclos = xCiclo
	}else{
		set ciclos = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,""),-1)
	}
	
	set orderCiclo = 1
	set progr=0
	Set tFlagDoseEdit = 0
	set ciclo=""
	for {
		set ciclo = $order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ciclo)) quit:ciclo=""
		set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ciclo,1))
		set duracao = $$$VARWorkFlowRegTeraCicloPeriodicidade(objCiclos)
		set tratCiclico = +$$$VARWorkFlowRegTeraCicloContinuo(objCiclos)
		if ciclo=1,tratCiclico=2,$order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,""))'=$order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,""),-1){
			set progr=1
			continue
		}
		;
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo,1))
		;
		set dataInicio 	= $$$VARPEPPremiumTratamentoDatadoIniciodoCiclo(obj)
		set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
		set dataFinal 	= $$$VARPEPPremiumTratamentoDatadoFinaldoCiclo(obj)
		;
		if tratCiclico=0{
			set duracaoTxt = duracao_" dias"
			if duracao=1 set duracaoTxt = duracao_" dia"
		}elseif tratCiclico=1{
			set duracaoTxt = "contínuo"
			if duracao>0{
				set duracaoTxt = duracaoTxt_" (a cada "_duracao_" dia(s))"
			}
		}elseif tratCiclico=2{
			set duracaoTxt = "Até progr. doença"
			if duracao>0{
				set duracaoTxt = duracaoTxt_" (a cada "_duracao_" dia(s))"
			}
		}
		;
		if duracao=""{
			set disabled=0
			set estilo=""
			set form1 = {}
			;set form1.caption	= "Ciclo "_ciclo_" ("_duracaoTxt_")"
			set form1.name		= "ciclo_"_(ciclo-progr)
			set form1.itemType	= "group"
			set form1.colCount	= 4
			set items1 = []
			set form2 = {}
			set form2.dataField	= "ciclo_inicio_"_ciclo
			set form2.cssClass	= "labelDetalhes "_estilo
			set label = {}
			set label.alignment	= "right"
			set label.text		= "Tratamento Contínuo - Inicio"
			set editorOptions = {}
			set editorOptions.disabled = disabled
			set editorOptions.width = "100px"
			set editorOptions.max = $zdate($horolog+7,1)
			set editorOptions.readOnly = 'editaT		
			set numeroCiclos = {}
			set numeroCiclos.numeroCiclos = ciclos
			set numeroCiclos.intervalo = duracao
			set elementAttr = {}
			set elementAttr = numeroCiclos
			set editorOptions.elementAttr = elementAttr
			set form2.editorOptions = editorOptions
			set form2.label 		= label
			set form2.cssClass	= "labelDetalhes "_estilo
			set form2.editorType = "dxDateBox"
			;
			do items1.%Push(form2)
			do valores.%Set("ciclo_inicio_"_ciclo,$select(dataInicio="":"",1:$zd(dataInicio,1)))
			;
			
			
			set form2 = {}
			set form2.dataField	= "ciclo_conclusao_"_ciclo
			set label = {}
			set label.alignment	= "right"
			set label.text		= "Concluiu o "_orderCiclo_"º ciclo?"
			set form2.label 		= label
			set form2.editorType = "dxSelectBox"
			set form2.cssClass	= "labelDetalhes "_estilo
			set editorOptions = {}
			set editorOptions.dataSource = opcoesSimNao
			set editorOptions.valueExpr = "ID"
			set editorOptions.displayExpr = "Name"
			set editorOptions.layout = "vertical"
			set editorOptions.disabled = disabled
			set editorOptions.readOnly = 'editaT		
			set editorOptions.width = "70px"
			;
			set form2.editorOptions = editorOptions
			do items1.%Push(form2)
			do valores.%Set("ciclo_conclusao_"_ciclo,+conclusao)
			;
			set form2 = {}
			set form2.dataField	= "ciclo_fim_"_ciclo
			set label = {}
			set label.alignment	= "right"
			set label.text		= "Final do "_orderCiclo_"º ciclo"
			set editorOptions = {}
			set editorOptions.disabled = $select(+conclusao=0:1,1:0)
			set editorOptions.max = $zdate($horolog,1)
			set editorOptions.width = "100px"
			set editorOptions.readOnly = 'editaT		
			set form2.editorOptions = editorOptions
			set form2.label 		= label
			set form2.editorType = "dxDateBox"
			set form2.cssClass	= "labelDetalhes "_estilo
			;
			do items1.%Push(form2)
			do valores.%Set("ciclo_fim_"_ciclo,$select(dataFinal="":"",1:$zd(dataFinal,1)))
			
			;
			set form2 = {}
			set form2.itemType = "button"
			set form2.horizontalAlignment = "right"
			
			/*Set flagInterc = 0
			&SQL(
				Select Count(*) Into :flagInterc From SQLUser.VARPEPPremPrescIntercorrencia
				Where Company = 0 And CodigodoCID = :cid And CodigodoPaciente = :codPaciente
				And RegimeTerapeutico = :codRegime And Ciclo = :ciclo
			)*/
			Set flagDoseEdit = 0
			Set xRetDoseEdit = ..PrescricaoQtdeEditada(codPaciente, cid, codRegime, orderCiclo)
			If (xRetDoseEdit'="") {
				Set tFlagDoseEdit = 1
				Set flagDoseEdit = 1
			}
			
			set form2.cssClass = $Select(flagDoseEdit=0:"titleDestaque1",1:"titleDestaque1Red")
			set buttonOptions = {}
			set buttonOptions.icon = "fas fa-pills"
			set buttonOptions.text = "Prescrever" ;Prescrever Novo
			set buttonOptions.onClick = "'function(){carregaSugestaoPrescricaoNovo('"_sequencia_"','"_codRegime_"','"_orderCiclo_"')}'" //
			set form2.buttonOptions = buttonOptions
			do items1.%Push(form2)
			;
			set form1.items = items1
		}else{
			set disabled = 1
			if $get(conclusao)=1 set disabled=0
			if $get(conclusao)="" set disabled=0
			set estilo=""
			if conclusao=1 set estilo="cicloConcluido"
			if conclusao=0 set estilo="cicloPendente"
			set atual=0
			if conclusao=0,'flEstilo set estilo="cicloAtual",flEstilo=1,disabled=0,atual=1
			;
			set form1 = {}
			;set form1.caption	= "Ciclo "_ciclo_" ("_duracaoTxt_")"
			set form1.name		= "ciclo_"_ciclo
			set form1.itemType	= "group"
			set form1.colCount	= 5
			set items1 = []
			set form2 = {}
			set form2.dataField	= "ciclo_inicio_"_ciclo
			set form2.cssClass	= "labelDetalhes "_estilo
			set label = {}
			set label.alignment	= "right"
			set label.text		= "<label class=ciclosAtuais id='cicloAtualAst"_ciclo_"'>"_$select(atual:"*",1:"")_"</label>"_orderCiclo_"º Ciclo ("_duracaoTxt_") - Inicio"
			set editorOptions = {}
			set editorOptions.disabled = disabled
			set editorOptions.width = "100px"
			set editorOptions.max = $zdate($horolog+7,1)
			set editorOptions.readOnly = 'editaT		
			set numeroCiclos = {}
			set numeroCiclos.numeroCiclos = ciclos
			set numeroCiclos.intervalo = duracao
			set elementAttr = {}
			set elementAttr = numeroCiclos
			set editorOptions.elementAttr = elementAttr
			set form2.editorOptions = editorOptions
			set form2.label 		= label
			set form2.cssClass	= "labelDetalhes "_estilo
			set form2.editorType = "dxDateBox"
			;
			do items1.%Push(form2)
			do valores.%Set("ciclo_inicio_"_ciclo,$select(dataInicio="":"",1:$zd(dataInicio,1)))
			;
			set form2 = {}
			set form2.dataField	= "ciclo_conclusao_"_ciclo
			set label = {}
			set label.alignment	= "right"
			set label.text		= "Concluiu o "_orderCiclo_"º ciclo?"
			set form2.label 		= label
			set form2.editorType = "dxSelectBox"
			set form2.cssClass	= "labelDetalhes "_estilo
			set editorOptions = {}
			set editorOptions.dataSource = opcoesSimNao
			set editorOptions.valueExpr = "ID"
			set editorOptions.displayExpr = "Name"
			set editorOptions.layout = "vertical"
			set editorOptions.disabled = disabled
			set editorOptions.readOnly = 'editaT		
			set editorOptions.width = "70px"
			;
			set form2.editorOptions = editorOptions
			do items1.%Push(form2)
			do valores.%Set("ciclo_conclusao_"_ciclo,+conclusao)
			;
			set form2 = {}
			set form2.dataField	= "ciclo_fim_"_ciclo
			set label = {}
			set label.alignment	= "right"
			set label.text		= "Final do "_orderCiclo_"º ciclo"
			set editorOptions = {}
			set editorOptions.disabled = $select(+conclusao=0:1,1:0)
			set editorOptions.max = $zdate($horolog,1)
			set editorOptions.width = "100px"
			set editorOptions.readOnly = 'editaT		
			set form2.editorOptions = editorOptions
			set form2.label 		= label
			set form2.editorType = "dxDateBox"
			set form2.cssClass	= "labelDetalhes "_estilo
			;
			do items1.%Push(form2)
			do valores.%Set("ciclo_fim_"_ciclo,$select(dataFinal="":"",1:$zd(dataFinal,1)))
			;
			set form2 = {}
			set form2.itemType = "button"
			set form2.horizontalAlignment = "right"
			
			/*Set flagInterc = 0
			&SQL(
				Select Count(*) Into :flagInterc From SQLUser.VARPEPPremPrescIntercorrencia
				Where Company = 0 And CodigodoCID = :cid And CodigodoPaciente = :codPaciente
				And RegimeTerapeutico = :codRegime And Ciclo = :ciclo
			)*/
			Set flagDoseEdit = 0
			Set xRetDoseEdit = ..PrescricaoQtdeEditada(codPaciente, cid, codRegime, orderCiclo)
			If (xRetDoseEdit'="") {
				Set tFlagDoseEdit = 1
				Set flagDoseEdit = 1
			}
			
			set form2.cssClass = $Select(flagDoseEdit=0:"titleDestaque1",1:"titleDestaque1Red")
			set buttonOptions = {}
			set buttonOptions.icon = "fas fa-pills"
			set buttonOptions.text = "Prescrever" ;Prescrever Novo
			set buttonOptions.onClick = "'function(){carregaSugestaoPrescricaoNovo('"_sequencia_"','"_codRegime_"','"_orderCiclo_"')}'" //
			set form2.buttonOptions = buttonOptions
			do items1.%Push(form2)
			;
			set form1.items = items1
			;
			set form1.items = items1


			set orderCiclo = orderCiclo + 1
		}
		do items.%Push(form1)
	}
	;
	if tratCiclico=2{
		set ultCiclo = $order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,""),-1)+1
		set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ultCiclo,1))
		;set duracao 	= $$$VARWorkFlowRegTeraCicloPeriodicidade(objCiclos)
		;
		
		set ciclo = ultCiclo-1
		set final = ciclo	;+2
		for {
			set ciclo = ciclo+1
			if ciclo>final quit
			;
			set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo,1))
			;
			set dataInicio 	= $$$VARPEPPremiumTratamentoDatadoIniciodoCiclo(obj)
			if dataInicio="" set dataInicio = dataFinal+1
			set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
			if conclusao=1 set final = final + 1
			set dataFinal 	= $$$VARPEPPremiumTratamentoDatadoFinaldoCiclo(obj)
			if dataFinal="" set dataFinal = dataInicio+duracao-1
			;
			set $$$VARPEPPremiumTratamentoDatadoIniciodoCiclo(obj) = dataInicio
			set $$$VARPEPPremiumTratamentoDatadoFinaldoCiclo(obj) = dataFinal
			set strStatus = $$$Save("VARPEPPremiumTratamento",codPaciente_","_cid_","_ficha_","_codRegime_","_ciclo,obj,$$$YES)
			;
			if tratCiclico=0{
				set duracaoTxt = duracao_" dias"
				if duracao=1 set duracaoTxt = duracao_" dia"
			}elseif tratCiclico=1{
				set duracaoTxt = "contínuo"
				if duracao>0{
					set duracaoTxt = duracaoTxt_" (a cada "_duracao_" dia(s))"
				}
			}elseif tratCiclico=2{
				set duracaoTxt = "Até progr. doença"
				if duracao>0{
					set duracaoTxt = duracaoTxt_" (a cada "_duracao_" dia(s))"
				}
			}
			;
			if duracao=""{
				set disabled=0
				set estilo=""
				set form1 = {}
				;set form1.caption	= "Ciclo "_ciclo_" ("_duracaoTxt_")"
				set form1.name		= "ciclo_"_(ciclo-progr)
				set form1.itemType	= "group"
				set form1.colCount	= 4
				set items1 = []
				set form2 = {}
				set form2.dataField	= "ciclo_inicio_"_ciclo
				set form2.cssClass	= "labelDetalhes "_estilo
				set label = {}
				set label.alignment	= "right"
				set label.text		= "Tratamento Contínuo - Inicio"
				set editorOptions = {}
				set editorOptions.disabled = disabled
				set editorOptions.width = "100px"
				set editorOptions.max = $zdate($horolog+7,1)
				set editorOptions.readOnly = 'editaT		
				set numeroCiclos = {}
				set numeroCiclos.numeroCiclos = ciclos
				set numeroCiclos.intervalo = duracao
				set elementAttr = {}
				set elementAttr = numeroCiclos
				set editorOptions.elementAttr = elementAttr
				set form2.editorOptions = editorOptions
				set form2.label 		= label
				set form2.cssClass	= "labelDetalhes "_estilo
				set form2.editorType = "dxDateBox"
				do items1.%Push(form2)
				do valores.%Set("ciclo_inicio_"_ciclo,$select(dataInicio="":"",1:$zd(dataInicio,1)))
				;
				set form1.items = items1
			}else{
				set disabled = 1
				if $get(conclusao)=1 set disabled=0
				if $get(conclusao)="" set disabled=0
				set estilo=""
				if conclusao=1 set estilo="cicloConcluido"
				if conclusao=0 set estilo="cicloPendente"
				set atual=0
				if conclusao=0,'flEstilo set estilo="cicloAtual",flEstilo=1,disabled=0,atual=1
				;
				set form1 = {}
				;set form1.caption	= "Ciclo "_ciclo_" ("_duracaoTxt_")"
				set form1.name		= "ciclo_"_ciclo
				set form1.itemType	= "group"
				set form1.colCount	= 4
				set items1 = []
				set form2 = {}
				set form2.dataField	= "ciclo_inicio_"_ciclo
				set form2.cssClass	= "labelDetalhes "_estilo
				set label = {}
				set label.alignment	= "right"
				set label.text		= "<label class=ciclosAtuais id='cicloAtualAst"_ciclo_"'>"_$select(atual:"*",1:"")_"</label>"_orderCiclo_"º Ciclo ("_duracaoTxt_") - Inicio"
				set editorOptions = {}
				set editorOptions.disabled = disabled
				set editorOptions.width = "100px"
				set editorOptions.max = $zdate($horolog+7,1)
				set editorOptions.readOnly = 'editaT		
				set numeroCiclos = {}
				set numeroCiclos.numeroCiclos = ciclos
				set numeroCiclos.intervalo = duracao
				set elementAttr = {}
				set elementAttr = numeroCiclos
				set editorOptions.elementAttr = elementAttr
				set form2.editorOptions = editorOptions
				set form2.label 		= label
				set form2.cssClass	= "labelDetalhes "_estilo
				set form2.editorType = "dxDateBox"
				;
				do items1.%Push(form2)
				do valores.%Set("ciclo_inicio_"_ciclo,$select(dataInicio="":"",1:$zd(dataInicio,1)))
				;
				set form2 = {}
				set form2.colSpan	= 1
				set form2.dataField	= "ciclo_conclusao_"_ciclo
				set label = {}
				set label.alignment	= "right"
				set label.text		= "Concluiu o "_orderCiclo_"º ciclo?"
				set form2.label 		= label
				set form2.editorType = "dxSelectBox"
				set form2.cssClass	= "labelDetalhes "_estilo
				set editorOptions = {}
				set editorOptions.dataSource = opcoesSimNao
				set editorOptions.valueExpr = "ID"
				set editorOptions.displayExpr = "Name"
				set editorOptions.layout = "vertical"
				set editorOptions.disabled = disabled
				set editorOptions.readOnly = 'editaT		
				set editorOptions.width = "70px"
				set form2.editorOptions = editorOptions
				do items1.%Push(form2)
				do valores.%Set("ciclo_conclusao_"_ciclo,+conclusao)
				;
				set form2 = {}
				set form2.dataField	= "ciclo_fim_"_ciclo
				set label = {}
				set label.alignment	= "right"
				set label.text		= "Final do "_orderCiclo_"º ciclo"
				set editorOptions = {}
				set editorOptions.disabled = $select(+conclusao=0:1,1:0)
				set editorOptions.max = $zdate($horolog,1)
				set editorOptions.width = "100px"
				set editor]]><![CDATA[Options.readOnly = 'editaT		
				set form2.editorOptions = editorOptions
				set form2.label 		= label
				set form2.editorType = "dxDateBox"
				set form2.cssClass	= "labelDetalhes "_estilo
				;
				do items1.%Push(form2)
				do valores.%Set("ciclo_fim_"_ciclo,$select(dataFinal="":"",1:$zd(dataFinal,1)))
				;
				set form2 = {}
				set form2.itemType = "button"
				set form2.horizontalAlignment = "right"
				set form2.cssClass = "titleDestaque1"
				set buttonOptions = {}
				set buttonOptions.icon = "fas fa-pills"
				set buttonOptions.text = "Prescrever" ;Prescrever Novo
				set buttonOptions.onClick = "'function(){carregaSugestaoPrescricaoNovo('"_sequencia_"','"_codRegime_"','"_orderCiclo_"')}'" //
				set form2.buttonOptions = buttonOptions
				do items1.%Push(form2)
				;
				set form1.items = items1
				set orderCiclo = orderCiclo + 1
			}
			do items.%Push(form1)
		}
	}

	;
	set form1 = {}
	set form1.dataField = "observacoes"
	set label = {}
	set label.alignment = "right"
	set label.text = "Observações"
	set form1.label = label
	set form1.editorType = "dxTextArea"
	set editorOptions = {}
	set editorOptions.height = 80
	set editorOptions.maxLength = 4000
	set editorOptions.readOnly = 'editaT
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	;
	set form.items = items
	do gruposRetorno.%Push(form)
	//
	/*set form = {}
	set form.itemType = "button"
	set form.horizontalAlignment = "right"
	set form.cssClass = "titleDestaque"
	set buttonOptions = {}
	set buttonOptions.icon = "fas fa-pills"
	set buttonOptions.text = "Prescrever"
	set buttonOptions.onClick = "'function(){carregaSugestaoPrescricao('"_sequencia_"')}'"
	set form.buttonOptions = buttonOptions
	do gruposRetorno.%Push(form)*/
	//
	;set form = {}
	;set form.cssClass	= "labelDetalhes cicloAtual"
	;set form.template 	= "* Ciclo atual de tratamento"
	;do gruposRetorno.%Push(form)


	Set flagInterc = 0
	;&SQL(
	;	Select Count(*) Into :flagInterc From SQLUser.VARPEPPremIntercorrencia
	;	Where Company = 0 And CodigodoCID = :cid And CodigodoPaciente = :codPaciente
	;	And NVL(Inativo,0) = 0
	;)
	If (tFlagDoseEdit '= 0) {
		set form = {}
		set form.cssClass	= "labelDetalhes cicloAtual"
		set form.template 	= "<b>Legenda:</b> * Ciclo atual de tratamento &nbsp; | &nbsp; <i class='dx-link-delete text-primary fa-blink fas fa-pills' style='color:red!important;'/> Dose padrão recomendada alterada"
		do gruposRetorno.%Push(form)
	}Else{
		set form = {}
		set form.cssClass	= "labelDetalhes cicloAtual"
		set form.template 	= "<b>Legenda:</b> * Ciclo atual de tratamento &nbsp;"
		do gruposRetorno.%Push(form)
	}
	
	//
	set retorno = {}
	set retorno.grupos = gruposRetorno
	set retorno.valores = valores
	quit retorno]]></Implementation>
</Method>

<Method name="montaAnamnese">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,dataPEP,nedita,dataField,valor</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set gruposRetorno = []
	set form = {}
	set form.caption	= "Anamnese: "
	set form.itemType	= "group"

	set items = []
	set form1 = {}
	set form1.dataField  = dataField
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.visible = 0
	set form1.label = label
	set editorOptions = {}
	set editorOptions.height = 4*22
	set editorOptions.maxLength = 4000
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	;
	;do formulDados.%Set(form.dataField,valor)
	set form.items = items
	do gruposRetorno.%Push(form)
	set valores={}
	//
	do valores.%Set(dataField,valor)
	//
	set retorno = {}
	set retorno.grupos = gruposRetorno
	set retorno.valores = valores
	quit retorno]]></Implementation>
</Method>

<Method name="montaExameFisico">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,dataPEP,nedita,dataField,valor</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set gruposRetorno = []
	set form = {}
	set form.caption	= "Exame Físico: "
	set form.itemType	= "group"
	set items = []
	set form1 = {}
	set form1.dataField  = dataField
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.visible = 0
	set form1.label = label
	set editorOptions = {}
	set editorOptions.height = 4*22
	set editorOptions.maxLength = 4000
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	;
	;do formulDados.%Set(form.dataField,valor)
	set form.items = items
	do gruposRetorno.%Push(form)
	set valores={}
	do valores.%Set(dataField,valor)
	//
	set retorno = {}
	set retorno.grupos = gruposRetorno
	set retorno.valores = valores
	quit retorno]]></Implementation>
</Method>

<Method name="montaAntecedentesPessoais">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,dataPEP,nedita,dataField,valor</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set gruposRetorno = []
	set form = {}
	set form.caption	= "Antecedentes Pessoais: "
	set form.itemType	= "group"
	set form.colCount	= 2
	set items = []
	//
	//
	set form1 = {}
	set form1.dataField  = dataField_"|1"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Tabagismo?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|2').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|2"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Quantos maços ao dia?"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",1)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|3"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Etilismo?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|4').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|4"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Observações"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",3)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|5"
	set form1.editorType = "dxTagBox"
	set form1.cssClass	= "labelDetalhes"
	set form1.colSpan	= 2
	set label = {}
	set label.text = "Doenças anteriores e atuais"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.dataSource = "'dataSourceCID'"
    set editorOptions.valueExpr = "Codigo"
	set editorOptions.displayExpr = "Descricao"
	set editorOptions.searchEnabled = 1
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|6"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set form1.colSpan	= 2
	set label = {}
	set label.text = "Cirurgias anteriores?"
	set form1.label = label
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	//
	set form1 = {}
	set form1.dataField  = dataField_"|7"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Diag. anterior ou<br>atual de câncer?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|8').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|8"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Em qual orgão?"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",7)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	//
	set form1 = {}
	set form1.dataField  = dataField_"|9"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Diag. anterior ou atual<br>de doenças hematológicas?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|10').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|10"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Doença hematológica"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",9)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	
	//

	;
	;do formulDados.%Set(form.dataField,valor)
	set form.items = items
	do gruposRetorno.%Push(form)
	set valores={}
	for dataFieldPiece=1:1:10{
		set valorTmp = $piece(valor,"|",dataFieldPiece)
		if (dataFieldPiece=5){
			set valorVet=[]
			for i=1:1:$length(valorTmp,";"){
				if $piece(valorTmp,";",i)="" continue
				do valorVet.%Push($piece(valorTmp,";",i)) 
			}
			do valores.%Set(dataField_"|"_dataFieldPiece,valorVet)
		}else{
			do valores.%Set(dataField_"|"_dataFieldPiece,valorTmp)
		}
	}
	//
	set retorno = {}
	set retorno.grupos = gruposRetorno
	set retorno.valores = valores
	quit retorno]]></Implementation>
</Method>

<Method name="montaAntecedentesFamiliares">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,dataPEP,nedita,dataField,valor</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set gruposRetorno = []
	set form = {}
	set form.caption	= "Antecedentes Familiares (Pai, mãe e irmãos):"
	set form.itemType	= "group"
	set form.colCount	= 2
	set items = []
	//
	set form1 = {}
	set form1.dataField  = dataField_"|1"
	set form1.editorType = "dxTagBox"
	set form1.cssClass	= "labelDetalhes"
	set form1.colSpan	= 2
	set label = {}
	set label.text = "Doenças anteriores e atuais"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.dataSource = "'dataSourceCID'"
    set editorOptions.valueExpr = "Codigo"
	set editorOptions.displayExpr = "Descricao"
	set editorOptions.searchEnabled = 1
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|2"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Pai com diag. anterior<br>ou atual de câncer?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|3').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|3"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Em qual orgão?"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",2)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	//
	set form1 = {}
	set form1.dataField  = dataField_"|4"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Pai com Diag. anterior<br>ou atual de doenças hematológicas?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|5').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|5"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Doença hematológica"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",4)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	/*set form1 = {}
	set form1.dataField  = dataField_"|6"
	set form1.editorType = "dxTagBox"
	set form1.cssClass	= "labelDetalhes"
	set form1.colSpan	= 2
	set label = {}
	set label.text = "Doenças anteriores e atuais (mãe)"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.dataSource = "'dataSourceCID'"
    set editorOptions.valueExpr = "Codigo"
	set editorOptions.displayExpr = "Descricao"
	set editorOptions.searchEnabled = 1
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|7"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Mãe com diag. anterior<br>ou atual de câncer?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|8').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|8"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Em qual orgão?"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",7)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	//
	set form1 = {}
	set form1.dataField  = dataField_"|9"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Mãe com Diag. anterior ou<br>atual de doenças hematológicas?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|10').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|11"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Doença hematológica"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",10)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//


	
	set form1 = {}
	set form1.dataField  = dataField_"|12"
	set form1.editorType = "dxTagBox"
	set form1.cssClass	= "labelDetalhes"
	set form1.colSpan	= 2
	set label = {}
	set label.text = "Doenças anteriores e atuais (irmãos)"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.dataSource = "'dataSourceCID'"
    set editorOptions.valueExpr = "Codigo"
	set editorOptions.displayExpr = "Descricao"
	set editorOptions.searchEnabled = 1
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|13"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Irmão(s) com diag. anterior<br>ou atual de câncer?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|14').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|14"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Em qual orgão?"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",13)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	//
	set form1 = {}
	set form1.dataField  = dataField_"|15"
	set form1.editorType = "dxRadioGroup"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Irmão(s) com diag. anterior ou<br>atual de doenças hematológicas?"
	set form1.label = label
	set editorOptions = {}
	set opcoesSimNao = []
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "1"
	set opcaoSimNao.Name = "Sim"
	do opcoesSimNao.%Push(opcaoSimNao)
	set opcaoSimNao = {}
	set opcaoSimNao.ID = "0"
	set opcaoSimNao.Name = "Não"
	do opcoesSimNao.%Push(opcaoSimNao)
	set editorOptions.dataSource = opcoesSimNao
	set editorOptions.valueExpr = "ID"
	set editorOptions.displayExpr = "Name"
	set editorOptions.layout = "horizontal"
	set editorOptions.readOnly = nedita
	set editorOptions.onValueChanged = "'function(a){dxFormulario.getEditor('"_dataField_"|16').option('disabled',(a.value=='0'?true:false));}'"
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form1 = {}
	set form1.dataField  = dataField_"|16"
	set form1.editorType = "dxTextArea"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.text = "Doença hematológica"
	set form1.label = label
	set editorOptions = {}
	set editorOptions.readOnly = nedita
	set editorOptions.disabled = $select($piece(valor,"|",15)=1:0,1:1)
	set form1.editorOptions = editorOptions
	do items.%Push(form1)*/
	//


	set form.items = items
	do gruposRetorno.%Push(form)
	set valores={}
	for dataFieldPiece=1:1:16{
		set valorTmp = $piece(valor,"|",dataFieldPiece)
		if (dataFieldPiece=1)||(dataFieldPiece=6)||(dataFieldPiece=11){
			set valorVet=[]
			for i=1:1:$length(valorTmp,";"){
				if $piece(valorTmp,";",i)="" continue
				do valorVet.%Push($piece(valorTmp,";",i)) 
			}
			do valores.%Set(dataField_"|"_dataFieldPiece,valorVet)
		}else{
			do valores.%Set(dataField_"|"_dataFieldPiece,valorTmp)
		}
	}
	//
	set retorno = {}
	set retorno.grupos = gruposRetorno
	set retorno.valores = valores
	quit retorno]]></Implementation>
</Method>

<Method name="montaMedicamentos">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,dataPEP,nedita,dataField,valor</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set gruposRetorno = []
	set form = {}
	set form.caption	= "Medicamentos em uso: "
	set form.name		= "tratamento"
	set form.itemType	= "group"
	set items = []
	set form1 = {}
	set form1.dataField  = dataField
	set form1.editorType = "dxTagBox"
	set form1.cssClass	= "labelDetalhes"
	set label = {}
	set label.visible = 0
	set form1.label = label
	set editorOptions = {}
	set editorOptions.dataSource = "'dataSourceMedicamentos'"
    set editorOptions.valueExpr = "CodMedicamento"
	set editorOptions.displayExpr = "DescMedicamento"
	set editorOptions.searchEnabled = 1
	set editorOptions.readOnly = nedita
	set form1.editorOptions = editorOptions
	do items.%Push(form1)
	//
	set form.items = items
	do gruposRetorno.%Push(form)
	set valores={}
	set valorVet=[]
	for i=1:1:$length(valor,";"){
		set medicamento=$piece(valor,";",i)
		if medicamento="" continue
		do valorVet.%Push(medicamento) 
	}
	do valores.%Set(dataField,valorVet)
	//
	set retorno = {}
	set retorno.grupos = gruposRetorno
	set retorno.valores = valores
	quit retorno]]></Implementation>
</Method>

<Method name="recuperaResultadosImagens">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,&amp;dados</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set titulo=0
	set contador = 1
	set Retorno = ""
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set predecessor				= rs.%Get("Predecessor")
		set valores = $piece(..recValorSalvo(codPaciente,cid,ficha,1,Sequencia),"~",1)
		if TipodeWorkFlow=11{
			if valores=0 continue
		}
		if valores="" continue
		set ret = ..recuperaResultadosImagens(codPaciente,cid,Sequencia,ficha,.dados)
		;
		if TipodeWorkFlow=11{
			set valores="",unid=""
		}
		;
		set Nome = $replace(Nome,"Tem doença","Possuí doença")
		set Nome = $replace(Nome,"Tem Doença","Possuí doença")
		set Nome = $replace(Nome,"?","")
		if unid["|"{
			set exibicao = Nome
			for i=1:1:$length(unid,"|"){
				set exibicao = exibicao_$select($piece(valores,";",i)'="":" "_$fnumber($piece(valores,";",i),".")_"("_$piece(unid,"|",i)_") x",1:"")
			}
			set exibicao = $extract(exibicao,1,$length(exibicao)-1)
		}else{
			set exibicao = Nome_$select(valores'="":": "_valores,1:"")_unid_" "
		}
		;
		if $zconvert(Nome,"U")["NÚMERO DE LINFONODOS" {
			set exibicao = valores_" Linfonodo"_$select(valores>1:"s",1:"")_" "
		}
		if Nome["Tamanho" {
			if Retorno="" set exibicao = "Tamanho do Maior Linfonodo: "_$fnumber(valores,".")_unid_" "
			else  set exibicao = "(Tamanho do Maior Linfonodo: "_$fnumber(valores,".")_unid_") "
			;if valores>10 set exibicao = exibicao_" - Possuí doença de ""Bulky"""
		}
		if Nome["Possuí doença" {
			if Retorno="" set exibicao = Nome_" "
			else  set exibicao = "- "_Nome_" "
		}
		if Nome["Observações" {
			set exibicao = "("_valores_")"
		}
		;
		if ret="" {
			set string = exibicao_ret
		}else{
			set dados(Sequencia,ficha) = ret
			set string = "<ul class=ttEstadiamento><li>"_exibicao_"<ul><li>"_ret_"</li></ul></li></ul>"
		}
		;
		

		if Nome["Paciente Tem Linfonodomegalia"{
			set string = ret
			kill dados(Sequencia,ficha)
		}
		if TipodeWorkFlow=7||(TipodeWorkFlow=1){
			if ret="" continue
			
			if TipodeWorkFlow=7 {
				set codImagem = $piece(Nome,";",1)
				set codArea = $piece(Nome,";",2)
				set Nome 	= "<ul class='ttEstadiamento listaDImagens'><li>"_contador_". Região "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)_"</li>"
			}else{
				set Nome 	= "<ul class='ttEstadiamento listaDImagens'><li>"_contador_". "_Nome_"</li>"
			}
			if $extract(ret,1,5)'="<ul c" {
				set dados(rs.%Get("Sequencia"),ficha) = ret
				set ret = "<ul class=ttEstadiamento><li>"_ret_"</li></ul>"
			}
			set string = Nome_ret_"</ul>"
			set contador = contador+1
		}
		set Retorno = Retorno_string
		
	}	
	quit Retorno]]></Implementation>
</Method>

<Method name="importarResultado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set meuId 		= $get(%request.Data("meuId",1))
	set codPaciente	= $get(%request.Data("paciente",1))
	set dataPEP 	= $get(%request.Data("dataPEP",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set fichaSeq 	= $get(%request.Data("fichaSeq",1))
	set painelAtual	= $get(%request.Data("painelAtual",1))
	;
	set meuId		= $piece(meuId," ",1)
	;
	set SequenciaData = ""
	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"' and TipodeWorkflow='13'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set SequenciaData = rs.%Get("Sequencia")
	}
	;	
	do ..recuperaResultadosExames(codPaciente,cid,painelAtual,ficha,meuId,SequenciaData,.sequencias,.valorespep,.valoresprimario)
	if $data(valorespep) {
		merge valores = valorespep
	}else{
		merge valores = valoresprimario
	}
	set strStatus = $$$OK
	set retorno = {}
	tstart
	try{
		do ..salvaPainel(codPaciente,SequenciaData,$zdate(meuId,3),cid,ficha,fichaSeq,"",YUSER)
		set sequ=""
		for {
			set sequ = $order(sequencias(sequ)) quit:sequ=""
			set valor = $piece($get(valores(sequ)),"~",1)
			do ..salvaPainel(codPaciente,sequ,valor,cid,ficha,fichaSeq,"",YUSER)
		}
	}
	catch e {
		set retorno.erro = 1
		set retorno.mensagem = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
	}
	if strStatus=$$$OK{
		tcommit
		set retorno.mensagem="Dados salvos com sucesso!"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaResultadosExames">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,painelAtual,ficha,dataRef,SequenciaData,&amp;sequencias,&amp;valorespep,&amp;valoresprimario</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set SQL = "SELECT * "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_painelAtual_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set Sequencia = rs.%Get("Sequencia")
		set Nome = rs.%Get("Nome")
		set TipodeWorkFlow 			= rs.%Get("TipodeWorkflow")
		set unid					= rs.%Get("ExamesUnidadedeExibicao")
		set composicaoValoresExames = rs.%Get("ComposicaoValoresExames")
		if TipodeWorkFlow'=5 continue
		set sequencias(Sequencia)=""
		set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",Nome,1))
		set codINART = $$$VARWorkFlowAuxiliarCodigodoExamenoCadastrode(objExames)
		set consulta=""
		for {
			set consulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta)) quit:consulta=""
			if consulta=ficha continue
			set seqConsulta=""
			for {
				set seqConsulta=$o(^VARPEPPremium(0,codPaciente,cid,consulta,seqConsulta)) quit:seqConsulta=""
				set data=""
				if SequenciaData'="" set data = $piece(..recValorSalvo(codPaciente,cid,consulta,seqConsulta,SequenciaData),"~",1)
				set valores = ..recValorSalvo(codPaciente,cid,consulta,seqConsulta,Sequencia)
				set valor = $piece(valores,"~",1)
				if data=""||(data="null") set data=$piece(valores,"~",3)
				if dataRef'=data continue
				set valorespep(Sequencia)=valor
			}
		}

		if codINART'=""{
			Set meuSQL1 = "Select DataExame, Resultado "
			Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
			Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
			Set meuSQL1 = meuSQL1 _ "And Exame = '"_codINART_"' "
			Set meuSQL1 = meuSQL1 _ "And DataExame = "_dataRef_" "
			set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
			while(rs1.%Next()){
				set resultado = ..converteResultadoExternoInterno(rs1.%Get("resultado"))
				set valoresprimario(Sequencia)=resultado
			}	
		}
		do ..recuperaResultadosExames(codPaciente,cid,Sequencia,ficha,dataRef,SequenciaData,.sequencias,.valorespep,.valoresprimario)
		;
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="converteResultadoExternoInterno">
<ClassMethod>1</ClassMethod>
<FormalSpec>resultado</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set nresultado = ""
	for i=1:1:$length(resultado){
		set carac=$extract(resultado,i)
		if carac="." continue
		else  if carac="," set carac="."
		else  if carac'?1N continue
		set nresultado = nresultado_carac
	}
	quit nresultado]]></Implementation>
</Method>

<Method name="recCampoPreenchido">
<ClassMethod>1</ClassMethod>
<FormalSpec>campo,flGrupo,codPaciente,cid,ficha,fichaSeq,pesquisaPorSequencia=0,flIgnoraPai=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	if flGrupo=1{
		set query = "select Sequencia from VARWorkFlowPEP where company = 0 and codigodocid='"_cid_"'"
		if pesquisaPorSequencia=1 set query = query_" and Sequencia = '"_campo_"'"
		else  set query = query_" and TipodeWorkFlow = '"_campo_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		while(rs.%Next()){
			set linha={}
			set campo = rs.%Get("Sequencia")
			set campos(campo)=""
		}
	}

	if fichaSeq=0{
		set retorno = {}	
		set retorno.sequencia = ""
		set retorno.descricao = ""
		set retorno.predecessor = ""
		set retorno.data = ""
		set retorno.valor = ""
		set retorno.ficha = 1
		quit retorno
	}
	set fichaSequ=1
	set ultCampo="",valorC=""
	set campo=""
	for {
		set campo = $order(campos(campo),-1) quit:campo=""
		set obj 	= $get(^VARWorkFlowPEP(0,cid,campo,1))
		;
		if ficha=""{
			set fichaAtu = fichaSeq+1
			for {
				set fichaAtu = $order(^VARPEPPremiums(0,2,campo,codPaciente,cid,fichaAtu),-1) quit:fichaAtu=""
				set retPais = ..verificaNivelPais(codPaciente,cid,fichaAtu,1,campo) 
				if retPais=0 continue
				quit
			}
		}else{
			set fichaAtu=ficha
		}
		if fichaAtu="" set fichaAtu=1
		if 'flIgnoraPai{
			set retPais = ..verificaNivelPais(codPaciente,cid,fichaAtu,1,campo) 
			if retPais=0 continue
		}
		;
		set ret = ..recValorSalvo(codPaciente,cid,fichaAtu,1,campo)
		set valorC = $piece(ret,"~",1)
		set dtSave = $piece(ret,"~",3)
		set hrSave = $piece(ret,"~",4)
		if valorC'="" set valores(dtSave,hrSave)=campo_"~"_valorC
		set ultCampo = campo
	}
	set campoGravado=""
	set ultDt = $order(valores(""),-1) 
	if ultDt'="" s ultHr=$order(valores(ultDt,""),-1) s:ultHr'="" campoGravado=$p(valores(ultDt,ultHr),"~",1),valorC=$p(valores(ultDt,ultHr),"~",2)
	if campoGravado="" set campoGravado=ultCampo
	;
	set obj=""
	set:campoGravado'="" obj 	= $get(^VARWorkFlowPEP(0,cid,campoGravado,1))
	set predecessor    = $$$VARWorkFlowPEPPredecessor(obj)
	set descricao = ..recDescricaoWorkFlow(cid,campoGravado)
	set retorno = {}	
	set retorno.sequencia = campoGravado
	set retorno.descricao = descricao
	set retorno.predecessor = predecessor
	set retorno.valor = valorC
	set retorno.data = ultDt
	set retorno.ficha = ficha
	quit retorno]]></Implementation>
</Method>

<Method name="recDescricaoWorkFlow">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,campo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if (cid="")||(campo="") quit ""
	if campo[";" set subCampo = $piece(campo,";",2),campo = $piece(campo,";",1)
	set obj 	= $get(^VARWorkFlowPEP(0,cid,campo,1))
	set nome    = $$$VARWorkFlowPEPNome(obj)
	set tipo    = $$$VARWorkFlowPEPTipodeWorkflow(obj)
	set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(obj)
	if (tipo=5)||(tipo=12){
		set exames = ""
		for i=1:1:$length(nome,";"){
			set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(nome,";",i),1))
			set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
			if exames'="" set exames = exames_"/"
			set exames = exames_descExame
		}
		set nome = exames
	}
	if tipo=7{
		set codImagem = $piece(nome,";",1)
		set codArea = $piece(nome,";",2)
		set nome 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
		if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
			set nome 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
		}
	}
	
	if composicaoValoresExames>5,composicaoValoresExames<10{
		set nome = "Mutação em "_nome
	}
	quit nome]]></Implementation>
</Method>

<Method name="recSugestaoTerapeutica">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,dataPEP,linhaTratamento</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	do ..cadastraSugestoes()
	set camposTitle = []
	set camposPendentes = []
	;
	set categoria = ""
	for {
		set categoria = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria)) quit:categoria=""
		set condicao = ""
		for {
			set condicao = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao)) quit:condicao=""
			set passaCondicao = 0
			set sequOu = ""
			for {
				set sequOu = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu)) quit:sequOu=""
				set sequE = ""
				set vetor = []
				for {
					set sequE = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE)) quit:sequE=""
					set obj = $get(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE,1))
					set desc = $piece(obj,"~",1)
					set campo = $piece(obj,"~",2)
					set cond = $piece(obj,"~",3)
					set valor = $piece(obj,"~",4)
					set tipo = $piece(obj,"~",5)
					set retorno = ..calculaCondicao(codPaciente,cid,ficha,fichaSeq,dataPEP,tipo,campo,cond,valor,"")
					if retorno<0 {
						do:campo'="" camposPendentes.%Push(campo)
					}
				}
			}
		}
	}
	;
	set passou = 0
	if camposPendentes.%Size()=0{
		set categoria = ""
		for {
			set categoria = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria)) quit:categoria=""
			set condicao = ""
			for {
				set condicao = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao)) quit:condicao=""
				set passaCondicao = 0
				set sequOu = ""
				for {
					set sequOu = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu)) quit:sequOu=""
					set sequE = ""
					set vetor = []
					set passou = 1
					for {
						set sequE = $order(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE)) quit:sequE=""
						set obj = $get(^VARWorkFlowTerapiaCondicoes(0,cid,linhaTratamento,categoria,condicao,sequOu,sequE,1))
						set desc = $piece(obj,"~",1)
						set campo = $piece(obj,"~",2)
						set cond = $piece(obj,"~",3)
						set valor = $piece(obj,"~",4)
						set tipo = $piece(obj,"~",5)
						set retorno = ..calculaCondicao(codPaciente,cid,ficha,fichaSeq,dataPEP,tipo,campo,cond,valor,"")

						if retorno<0 {
							do:campo'="" camposPendentes.%Push(campo)
							set retorno=0
						}
						if 'retorno {
							if 'passaCondicao set passou = 0 
							kill vetor quit
						}
						do:desc'="" vetor.%Push(desc)
					}
					if $get(vetor)'=""{
						set iterator = vetor.%GetIterator()
						while iterator.%GetNext(.indice,.valor){
							do camposTitle.%Push(valor)
						}
					}
					if passou set passaCondicao = 1 ;quit
				}
				if 'passou quit
			}
			quit:passou
		}
	}
	set retorno = {}
	if passou {
		set retorno.recomendacao = categoria
		set retorno.camposTitle = camposTitle
	}else{
		set retorno.camposPendentes = camposPendentes
	}
	quit retorno]]></Implementation>
</Method>

<Method name="cadastraSugestoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid = "C91.1"
	kill ^VARWorkFlowTerapia,^VARWorkFlowTerapiaCondicoes
	kill ^VARWorkFlowTerapiaMedicacao
	; tratamento 1 - Primeira linha de tratamento
	; tratamento 2 - Manutenção de primeira linha
	; tratamento 3 - Segunda linha de tratamento (Doença recidivada/refratária)
	; tratamento 4 - Manutenção de segunda linha
	set tratamento = 1

	set categoria = 1
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem critério para tratamento"
	;
	;set condicao = 1 ; Sem Mutação
	;set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	;set sequOu = 1
	;set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente não possuí critério para tratamento~1307~<>~1~"_tipo

	set categoria = 2
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem mutação em TP53 ou del 17p- E sem doenças cardiacas (Paciente com mais de 65 anos ou Paciente frágil ou paciente com menos de 65 anos com co-morbidades (clearence de creatinina < 70 ml/24h))"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="~196~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~142~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1941~=~2~"_tipo
	;
	set condicao = 3 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1926~=~2~"_tipo
	;
	set condicao = 4 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 2
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mais de 65 anos~1~>~64~"_tipo
	set tipo = 0
	set sequOu = 2
	;set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente frágil~1311~=~1~"_tipo
	set sequOu = 3
	set tipo = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~"_tipo
	set tipo = 0
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 3 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com co-morbidades~1277~=~1~"_tipo
	;
	set condicao = 5 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem doença cardiaca~1277~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem doença cardiaca~1298~=~0~"_tipo
	;	
	; código sequencial dos medicamento
	set codRegime = 7 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe (categoria 1)~2~1"
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1~1"
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 2 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax~4"
	set codRegime = 12 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 21 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Bendamustina (70mg/m2 no ciclo 1 com escalonamento para 90mg/m2 se bem tolerado) + anticorpo monoclonal anti-CD20 (não recomendado para pacientes frágeis)~20"
	set codRegime = 11 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil + Obinutuzumabe~15"
	set codRegime = 39 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil + Obinutuzumabe~15"
	set codRegime = 14 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe (categoria 2B)~18"
	set codRegime = 8 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe + Obinutuzumabe (categoria 2B)~8"
	set codRegime = 15 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Obinutuzumabe (categoria 2B)~22"
	set codRegime = 56 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil  (categoria 3)~3"
	set codRegime = 51 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Rituximabe (categoria 3)~23"
	set codRegime = 52 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Rituximabe (categoria 3)~23"
	set codRegime = 53 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Rituximabe (categoria 3)~23"
	;

	set categoria = 3
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem mutação em TP53 ou del 17p- E sem doenças cardiacas (Paciente com menos de 65 anos sem co-morbidades)"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="~196~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~142~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1941~=~2~"_tipo
	;
	set condicao = 3 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1926~=~2~"_tipo
	;
	set condicao = 4 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 2
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~"_tipo
	set tipo = 0
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 3 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem co-morbidades~1277~=~0~"_tipo
	;
	set condicao = 5 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem doença cardiaca~1277~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem doença cardiaca~1298~=~0~"_tipo
	;	
	; código sequencial dos medicamento
	set codRegime = 7 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe (categoria 1)~2"
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1"
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 2 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax~4"
	set codRegime = 12 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 16 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Bendamustina + anticorpo monoclonal anti-CD20~14"
	set codRegime = 3 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="FCR (Fludarabina + ciclofosfamida + Rituximab) (preferencialmente para pacientes com IGVH mutado)~16"
	set codRegime = 18 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="FR (Fludarabina + Rituximab) ~17"
	set codRegime = 14 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe (categoria 2B)~18"
	set codRegime = 50 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe + Rituximabe (categoria 2B)~9"
	set codRegime = 20 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="PCR (Pentostatina + Ciclofosfamida + Rituximabe) (categoria 3)~19"
	;
	;

	set categoria = 4
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes com mutação em TP53 ou del 17p- E sem doenças cardiaca"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~2"
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~1"
	;
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mais de 65 anos~1~>~64~2"
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~1"
	;
	set sequOu = 3
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente frágil~1311~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 4
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com co-morbidades~1277~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 5
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem co-morbidades~1277~=~0~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 6
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em TP53~142~=~0~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 8
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~1941~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 10
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~1926=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem doença cardiaca~1277~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem doença cardiaca~1298~=~0~"_tipo
	;	
	
	; código sequencial dos medicamento
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1"
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 7 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe~2"
	set codRegime = 12 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 13 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Alemtuzumabe + Rituximabe~11"
	set codRegime = 14 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe~12"
	set codRegime = 15 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Obinutuzumabe~13"
	;
	;
	set categoria = 5
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem mutação em TP53 ou del 17p- E com doenças cardiacas (Paciente com mais de 65 anos ou Paciente frágil ou paciente com menos de 65 anos com co-morbidades (clearence de creatinina < 70 ml/24h))"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="~196~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~142~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1941~=~2~"_tipo
	;
	set condicao = 3 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1926~=~2~"_tipo
	;
	set condicao = 4 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 2
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mais de 65 anos~1~>~64~"_tipo
	set tipo = 0
	set sequOu = 2
	;set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente frágil~1311~=~1~"_tipo
	set sequOu = 3
	set tipo = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~"_tipo
	set tipo = 0
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 3 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com co-morbidades~1277~=~1~"_tipo
	;
	set condicao = 5 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com doença cardiaca~1298~=~1~"_tipo
	;	
	; código seque]]><![CDATA[ncial dos medicamento
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1~1"
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 2 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax~4"
	set codRegime = 12 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 21 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Bendamustina (70mg/m2 no ciclo 1 com escalonamento para 90mg/m2 se bem tolerado) + anticorpo monoclonal anti-CD20 (não recomendado para pacientes frágeis)~20"
	set codRegime = 11 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil + Obinutuzumabe~15"
	set codRegime = 39 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil + Obinutuzumabe~15"
	set codRegime = 14 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe (categoria 2B)~18"
	set codRegime = 15 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Obinutuzumabe (categoria 2B)~22"
	set codRegime = 56 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Clorambucil  (categoria 3)~3"
	set codRegime = 51 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Rituximabe (categoria 3)~23"
	set codRegime = 52 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Rituximabe (categoria 3)~23"
	set codRegime = 53 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Rituximabe (categoria 3)~23"
	;

	set categoria = 6
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes sem mutação em TP53 ou del 17p- E com doenças cardiacas (Paciente com menos de 65 anos sem co-morbidades)"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="~196~=~0~"_tipo
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em TP53~142~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1941~=~2~"_tipo
	;
	set condicao = 3 ; Nivel condição
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem mutação em Del 17p-~1926~=~2~"_tipo
	;
	set condicao = 4 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 2
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~"_tipo
	set tipo = 0
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	set sequE = 3 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem co-morbidades~1277~=~0~"_tipo
	;
	set condicao = 5 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com doença cardiaca~1298~=~1~"_tipo
	;	
	; código sequencial dos medicamento
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1"
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 2 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax~4"
	set codRegime = 12 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 16 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Bendamustina + anticorpo monoclonal anti-CD20~14"
	set codRegime = 3 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="FCR (Fludarabina + ciclofosfamida + Rituximab) (preferencialmente para pacientes com IGVH mutado)~16"
	set codRegime = 18 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="FR (Fludarabina + Rituximab) ~17"
	set codRegime = 14 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe (categoria 2B)~18"
	set codRegime = 50 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Ibrutinibe + Rituximabe (categoria 2B)~9"
	set codRegime = 20 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="PCR (Pentostatina + Ciclofosfamida + Rituximabe) (categoria 3)~19"
	;
	;

	set categoria = 7
	set ^VARWorkFlowTerapia(0,cid,tratamento,categoria,1)="Pacientes com mutação em TP53 ou del 17p- E com doenças cardiaca"
	;
	set condicao = 1 ; Sem Mutação
	set flIgual = 1 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0 ; Onde 0 é campo do workflow, 1 pontuação do estadiamento e 2 dados do paciente
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com menos de 65 anos~1~<~65~2"
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~1"
	;
	set sequOu = 2
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mais de 65 anos~1~>~64~2"
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~1"
	;
	set sequOu = 3
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente frágil~1311~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 4
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com co-morbidades~1277~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 5
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente sem co-morbidades~1277~=~0~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 6
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em TP53~142~=~0~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 8
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~1941~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set sequOu = 10
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com mutação em Del 17p-~1926~=~1~"_tipo
	;set sequE = 2 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente possuí critério para tratamento~1307~=~1~"_tipo
	;
	set condicao = 2 ; Nivel condição
	set flIgual = 0 ; onde 1 deve atender todas as condições e 0 deve atender uma das condições
	set tipo = 0
	set sequOu = 1
	set sequE = 1 set ^VARWorkFlowTerapiaCondicoes(0,cid,tratamento,categoria,condicao,sequOu,sequE,1)="Paciente com doença cardiaca~1298~=~1~"_tipo
	;	
	
	; código sequencial dos medicamento
	set codRegime = 1 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe~1"
	set codRegime = 6 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Acalabrutinibe + Obinutuzumabe~7"
	set codRegime = 12 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Venetoclax + Obinutuzumabe~10"
	;
	set codRegime = 13 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Alemtuzumabe + Rituximabe~11"
	set codRegime = 14 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Metilprednisolona em altas doses + Rituximabe~12"
	set codRegime = 15 set ^VARWorkFlowTerapiaMedicacao(0,cid,tratamento,categoria,codRegime,1)="Obinutuzumabe~13"]]></Implementation>
</Method>

<Method name="calculaCondicao">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,dataPEP,tipo,campos,condicao,valorRef,opcao</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set valorAcumulado = ""
	if +tipo=0{
		set respondido = 0
		for cont=1:1:$length(campos,"|"){
			set campox = $piece(campos,"|",cont)
			if campox="" continue
			set valorComparativo=""
			if campox[";" set valorComparativo=$piece(campox,";",2),campox=$piece(campox,";",1)
			set objWF 	= $get(^VARWorkFlowPEP(YM,cid,campox,1))
			set composicaoValoresExames = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
			set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
			set RespostaPadrao = $$$VARWorkFlowPEPRespostaPadrao(objWF)
			if composicaoValoresExames>5,composicaoValoresExames<10{
				if valorComparativo'="" {
					set valorComparativo = valorComparativo-1 
				}
			}
			set valorC = $piece(..recValorSalvo(codPaciente,cid,ficha,fichaSeq,campox),"~",1)
			set retPais = ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,campox) 
			if retPais<=0{
				;if valorC="",retPais<0 set respondido = 1
				set:retPais=0 respondido = 1
				continue
			}
			;if valorC="",RespostaPadrao'="" set valorC = RespostaPadrao
			if valorC="" continue
			
			set respondido = 1
			if valorComparativo'=""{
				if permitirSelecionarMaisQue=1 {
					set valorC = $piece(valorC,";",valorComparativo)
					set valorAcumulado = valorAcumulado + valorC
				}else{
					if +valorComparativo=+valorC set valorAcumulado = valorAcumulado + 1
				}
			}else{
				set valorAcumulado = valorAcumulado + valorC
			}
		}
		if respondido=0 quit -1
	}
	if tipo=1{
		for cont=1:1:$length(campos,"|"){
			set campox = $piece(campos,"|",cont)
			if campox="" continue
			set estadiamento = $piece(campox,";",1)
			set estagio 	 = $piece(campox,";",2)
			set ret = ..calcEstadiamento(codPaciente, cid, ficha, fichaSeq, estadiamento,dataPEP,opcao,1)
			if estadiamento=1,ret.selEstagio=6 set ret.selEstagio=""
			if ret.selEstagio=estagio set valorAcumulado = valorAcumulado + 1
		}
	}
	if tipo=2{
		if campos=1 { ; Idade do Paciente
			set objPaciente = $get(^MEDPatient(YM,codPaciente,1))
			set dob = $$$MEDPatientDOB(objPaciente)
			if dob'=""{
				set nasc = $zdate(dob,8)
				set hoje = $zdate($horolog,8)
				set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
				if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
				set valorAcumulado = anos
			}
			
		}
	}
	set resultado=""
	if condicao="="{
		set resultado = valorAcumulado=valorRef
	}
	if condicao="<"{
		set resultado = valorAcumulado<valorRef
	}
	if condicao=">"{
		set resultado = valorAcumulado>valorRef
	}
	if condicao="<>"{
		set resultado = valorAcumulado'=valorRef
	}
	if resultado=0 quit 0
	quit 1]]></Implementation>
</Method>

<Method name="montaHistorico">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,fichaSeq,dataAnt,horaAnt,Sequencia</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set ret = []
	set cont = 0
	if dataAnt="" quit ret
	;
	set objWF 	= $get(^VARWorkFlowPEP(0,cid,Sequencia,1))
	set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
	;
	set dataAnt = dataAnt + 1,horaAnt = horaAnt + 1
	for {
		set dataAnt = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,Sequencia,dataAnt),-1) quit:dataAnt=""
		quit:cont=10
		for {
			set horaAnt = $order(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,Sequencia,dataAnt,horaAnt),-1) quit:horaAnt=""
			quit:cont=10
			set obj = $get(^VARPEPPremium(0,codPaciente,cid,ficha,fichaSeq,Sequencia,dataAnt,horaAnt,1))
			set valor = $$$VARPEPPremiumValorRegistrado(obj)
			set alteradoPor = $$$VARPEPPremiumAlteradoPor(obj)
			if tipo=13{
				set:valor'="" valor=$zdate(valor,4)
			}
			if tipo=3||(tipo=5){
				set valor = $fnumber(valor,".")
			}
			set linha = {}
			set linha.valor = valor
			set linha.data = $zdatetime(dataAnt_","_horaAnt,4,2,,,2)
			set linha.usuario = alteradoPor
			do ret.%Push(linha)
			set cont = cont + 1
		}
	}
	quit ret]]></Implementation>
</Method>

<Method name="recTituloCompleto">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,codPainel,tipoResult=1,codIDMenu=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set codPainel = $piece(codPainel,";",1)
	set opcaoPainel  = $piece(codPainel,";",2)
	set icone = "&nbsp;&nbsp;<i class='fa fa-caret-right'></i>&nbsp;&nbsp;"
	set sai=0,lean=0
	set titulo  = "",tituloPuro=""
	if '$data(^VARWorkFlowPEP(0,cid,codPainel,1)),$data(^mtemp.MAPPAMenuLean(0,%session.SessionId,codPainel,1)){
		set lean=1
	}
	for {
		if lean{
			set obj = $get(^mtemp.MAPPAMenuLean(0,%session.SessionId,codPainel,1))
			set desc = $piece(obj,"~",1)
			set tipo = $piece(obj,"~",3)
		}else{
			set obj = $get(^VARWorkFlowPEP(0,cid,codPainel,1))
			set desc = $$$VARWorkFlowPEPNome(obj)
			set tipo = $$$VARWorkFlowPEPTipodeWorkflow(obj)
		}
		quit:sai
		set desc = $replace(desc,"<br>"," ")
		if codIDMenu'="",codIDMenu=codPainel set sai = 1
		if tipo=1,tipo=10 {
			if $data(^mtemp.MAPPAMenuLean(0,%session.SessionId,codPainel)){
				set objTemp = $get(^mtemp.MAPPAMenuLean(0,%session.SessionId,codPainel,1))
				set codPainel  = $piece($piece(objTemp,"~",4),";",1)
				set opcaoPainel  = $piece($piece(objTemp,"~",4),";",2)
				set lean=1
			}else{
				set codPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",1)
				set opcaoPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",2)
			}
			quit:codPainel=""
			continue
		}
		;
		if tipo=7{
			set codImagem = $piece(desc,";",1)
			set codArea = $piece(desc,";",2)
			set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",1)
			if ($piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",5)'="") {
				set desc 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",1)
			}
		}
		;
		set descExib = desc
		;if tipo=1,($length(tituloPuro)>30) {
		;	set descExib = "..."
		;}
		if tituloPuro'=""{
			set tituloPuro = " - "_tituloPuro
		}
		set tituloPuro = descExib_tituloPuro
		
		if titulo'="" {
			set titulo = icone_titulo
			set titulo = "<font onclick=verificaRegrasPainel('"_codPainel_"','"_opcaoPainel_"') style='cursor:pointer' title='Voltar para "_desc_"'>"_descExib_"</font>"_titulo
		}else{
			set titulo = descExib_titulo
		}
		if $data(^mtemp.MAPPAMenuLean(0,%session.SessionId,codPainel)){
			set objTemp = $get(^mtemp.MAPPAMenuLean(0,%session.SessionId,codPainel,1))
			set codPainel  = $piece($piece(objTemp,"~",4),";",1)
			set opcaoPainel  = $piece($piece(objTemp,"~",4),";",2)
			set lean=1
		}else{
			set codPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",1)
			set opcaoPainel  = $piece($$$VARWorkFlowPEPPredecessor(obj),";",2)
		}
		quit:codPainel=""
	}
	if codIDMenu=""{
		if titulo'="" {
			set titulo = icone_titulo
		}
		set obj = $get(^VARWorkFlowCID(0,cid,1))
		set desc = $$$VARWorkFlowCIDDescricao(obj)
		set titulo = desc_titulo
	}
	if tipoResult=2 quit tituloPuro
	quit titulo]]></Implementation>
</Method>

<Method name="salvaPainel">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente="",dataField="",valor="",cid="",ficha="",fichaSeq="",dataPEP="",YUSER1="auto",pTransportar=""</FormalSpec>
<Implementation><![CDATA[	new retornoJSON,ultFicha,obj,tipo,data,hora,ultData,ultHora
	new objAnt,piece,predecessor,predecessor2,opcao2,alerta
	set retornoJSON = ""
	if codPaciente=""{
		set codPaciente	= $get(%request.Data("codPaciente",1))
		set dataField	= $get(%request.Data("dataField",1))
		set valor		= $get(%request.Data("valor",1))
		set valor 		= $replace(valor,"""","")
		set cid 		= $get(%request.Data("codCID",1))
		set ficha 		= $get(%request.Data("ficha",1))
		set fichaSeq	= $get(%request.Data("fichaSeq",1))
		set dataPEP 	= $get(%request.Data("dataPEP",1))
		set retornoJSON = 1
		set YUSER1 		= YUSER
		Set pTransportar = $Get(%request.Data("pTransportar",1))
	}
	;
	if (codPaciente = "" || (dataField = "")) quit
	;	
	set alerta=""
	set YUSER = YUSER1
	set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)'="" {
		if retornoJSON write 1
		quit 1
	}
	;
	if dataField["|"{
		set obj = $get(^VARWorkFlowPEP(YM,cid,$piece(dataField,"|",1),1))
	}elseif dataField["^"{
		set obj = $get(^VARWorkFlowPEP(YM,cid,$piece(dataField,"^",1),1))
	}else{
		set obj = $get(^VARWorkFlowPEP(YM,cid,$piece(dataField,"_",1),1))
	}
	set tipo = $$$VARWorkFlowPEPTipodeWorkflow(obj)
	set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(obj)
	;
	if tipo=9,permitirSelecionarMaisQue=1 { ; Multiplas Opcoes
		if valor="false" set valor=0
	}
	if tipo=13 { ; Data
		set valor = $replace(valor,"/","-")
		set valor = $zdh(valor,3,,,,,,,"")
		if valor > $horolog{
			set alerta = "Campo data não pode ser maior que a data de hoje"
			set valor=""
		}
	}
	if tipo=30{
		if valor'=""{
	   		Try {
      			set objValor = [].%FromJSON(valor)
				set valor=""
				if objValor.%Size()>0{
					for {
						set campo = objValor.%Pop()
						quit:campo=""
						if valor'="" set valor=valor_";"
						set valor = valor_campo
					}
				}
			}Catch errobj {
      			set valor = $Replace($Replace($Replace(valor,"[",""),"]",""),",",";")
		    }
		}
	}
	set flVetor=0
	if tipo=28 set flVetor = 1 															; Medicamentos
	if (tipo=26)&&($piece(dataField,"|",2)="1") set flVetor=1 								; CID - Antecedentes pessoais
	if (tipo=27)&&(($piece(dataField,"|",2)="2")||($piece(dataField,"|",2)="5")) set flVetor=1	; CID - Antecedentes familiares
	if flVetor {
		if valor'=""{
			set valorx = $replace(valor,"[","")
			set valorx = $replace(valorx,"]","")
			set valor=""
			for i=1:1:$length(valorx,","){
				if valor'="" set valor = valor_";"
				set valor = valor_$piece(valorx,",",i)
			}
		}
	}
	set data = +$horolog
	set hora = $piece($horolog,",",2)
	set ultData = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,""),-1)
	set ultHora = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,""),-1)
	set dataFieldOriginal = dataField
	if dataField["ciclo_" { ; Armazena ciclos do tratamento
		;
		set campoPreenchido = ..recTratamento(codPaciente,cid,ficha)
		set tratamento = $piece(campoPreenchido.valor,";",1)
		set codRegime = $piece(campoPreenchido.valor,";",2)		
		;
		set tipoMovimento 	= $piece(dataField,"_",2)
		set ciclo			= $piece(dataField,"_",3)
		set objAnt 			= $get(^VARPEPPremiumTratamento(YM,codPaciente,cid,ficha,codRegime,ciclo,1))
		if tipoMovimento="inicio" set $piece(objAnt,"~",1) = $zdh($replace(valor,"/","-"),3,,,,,,,"")
		if tipoMovimento="conclusao" set $piece(objAnt,"~",2) = valor
		if tipoMovimento="fim" set $piece(objAnt,"~",3) = $zdh($replace(valor,"/","-"),3,,,,,,,"")
		set chave = codPaciente_","_cid_","_ficha_","_codRegime_","_ciclo
		set strStatus = $$$Save("VARPEPPremiumTratamento",chave,objAnt,$$$YES)
	}else{
		if dataField["_"{
			set dataField 	= $piece(dataField,"_",1)
			
			set ultData = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,""),-1)
			set ultHora = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,""),-1)
			set objAnt = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,ultHora,1))
			if (($$$VARPEPPremiumValorRegistrado2(objAnt) '= valor)) {
				set $$$VARPEPPremiumValorRegistrado2(objAnt) = valor
			}
		}else{
			if dataField["|"{
				set piece = $piece(dataField,"|",2)
				set dataField = $piece(dataField,"|",1)
				set ultData = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,""),-1)
				set ultHora = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,""),-1)
				set valorAnt = $PIECE($get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,ultHora,1)),"~",1)
				;if piece="5"{
					set valor = $replace(valor,"[","")
					set valor = $replace(valor,"]","")
					set valor = $replace(valor,",",";")
				;}
				set $piece(valorAnt,"|",piece) = valor
				set valor = valorAnt
			}elseif dataField["^"{
				set subPiece2 = ""
				set:tipo=35 subPiece2 = $piece(dataField,"^",4)
				set subPiece = $piece(dataField,"^",3)
				set piece = $piece(dataField,"^",2)
				set dataField = $piece(dataField,"^",1)
				if (tipo=33||(tipo=35)),subPiece=1 {
					set valor = $replace(valor,"/","-")
					set valor = $zdh(valor,3,,,,,,,"")
					if valor > +$horolog{
						set alerta = "Campo data não pode ser maior que a data de hoje"
						set valor=""
					}

				}
				set ultData = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,""),-1)
				set ultHora = +$order(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,""),-1)
				set piece = piece+1
				set valorAnt = $PIECE($get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,ultHora,1)),"~",1)
				if subPiece'=""{
					set valorAntX = $piece(valorAnt,";",piece)
					set $piece(valorAntX,"^",subPiece) = valor
					set valor = valorAntX
				}
				if (tipo=35&&(subPiece2'="")){
					set valorAntX = $piece(valorAnt,";",piece)
					set $piece(valorAntX,"^",subPiece2) = valor
					set valor = valorAntX
				}
				set $piece(valorAnt,";",piece) = valor
				set valor = valorAnt
			}
			set objAnt = $get(^VARPEPPremium(YM,codPaciente,cid,ficha,fichaSeq,dataField,ultData,ultHora,1))
			if (($$$VARPEPPremiumValorRegistrado(objAnt) '= valor)) {
				set $$$VARPEPPremiumValorRegistrado(objAnt) = valor
			}
		}
		if objAnt'="" {
			set $$$VARPEPPremiumAlteradoPor(objAnt) = YBED
			set ret = $$$Save("VARPEPPremium",codPaciente_","_cid_","_ficha_","_fichaSeq_","_dataField_","_data_","_hora,objAnt,1)
			;
			if objConsulta=""{
				set $$$VARPEPPremiumConsultaCIDdoPaciente(objConsulta) = cid
				set $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objConsulta) = $horolog
				set $$$VARPEPPremiumConsultaUsuarioResponsavelpeloIni(objConsulta) = YBED
			}
			set strStatus = $$$Save("VARPEPPremiumConsulta",codPaciente_","_ficha,objConsulta,$$$YES)
		}
		set obj = $get(^VARWorkFlowPEP(YM,cid,dataField,1))
		set predecessor	= $$$VARWorkFlowPEPPredecessor(obj)
		if predecessor'=""{
			set obj 			= $get(^VARWorkFlowPEP(YM,cid,predecessor,1))
			set tipo 			= $$$VARWorkFlowPEPTipodeWorkflow(obj)
			set predecessor2 	= $$$VARWorkFlowPEPPredecessor(obj)
			set opcao2		 	= $$$VARWorkFlowPEPOpcaodoPredecessor(obj)
			if tipo=8||(tipo=1){
				do ..salvaPainel(codPaciente,predecessor,$select(valor'="":"1",1:""),cid,ficha,fichaSeq,dataPEP,YUSER)
			}
			if tipo=7{
				if valor=""{
					do ..salvaPainel(codPaciente,predecessor,"",cid,ficha,fichaSeq,dataPEP,YUSER)
				}else {
					do ..salvaPainel(codPaciente,predecessor,1,cid,ficha,fichaSeq,dataPEP,YUSER)
					if predecessor2'=""{
						do ..salvaPainel(codPaciente,predecessor2,opcao2,cid,ficha,fichaSeq,dataPEP,YUSER)
					}
				}
			}
		}
	}
	set obj = $get(^VARWorkFlowPEP(YM,cid,dataField,1))
	if retornoJSON{
		set retorno = {}
		if $$$VARWorkFlowPEPTipodeWorkflow(obj)=5,$$$VARWorkFlowPEPComposicaoValoresExames(obj)=13{ ; Exames com campo absoluto+percentual
			set SQL = "SELECT Sequencia "
			set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_$$$VARWorkFlowPEPPredecessor(obj)_"'"
			set SQL = SQL_" and Nome = '61'"
			set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
			set valorT=""
			while(rs.%Next()){
				set Sequencia = rs.%Get("Sequencia")
				set valorT = $piece(..recValorSalvo(codPaciente,cid,ficha,1,Sequencia),"~",1)
				quit
			}
			if valorT'="",dataFieldOriginal["_"{
				set calc = $justify(valor*valorT/100,0,0)
				set valorArm = $piece(..recValorSalvo(codPaciente,cid,ficha,1,dataField),"~",1)
				if +valorArm'=+calc{
					set retorno.campoAssociado=dataField
					set retorno.valorAssociado=calc
				}
			}
			if valorT'="",dataFieldOriginal'["_"{
				set calc = $justify(valor*100/valorT,0,2)
				set valorArm = $piece(..recValorSalvo(codPaciente,cid,ficha,1,dataField),"~",2)
				if +valorArm'=+calc{
					set retorno.campoAssociado=dataField_"_2"
					set retorno.valorAssociado=calc
				}
			}
			
		}
		set retorno.atualizar = 0
		if (cid="C90.0"&&(dataField="38494"||(dataField="38495")||(dataField="38496")||(dataField="38497"))) {
			set valorCampoDiag1 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38494),"~",1)
			set valorCampoDiag2 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38495),"~",1)
			set valorCampoDiag3 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38496),"~",1)
			set valorCampoDiag3A 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,38497),"~",1)
			If (valorCampoDiag3=1&&(valorCampoDiag1>=60||(valorCampoDiag2>=60)||(valorCampoDiag3A>=60))) {
				Do ..salvaPainel(codPaciente, 38503, 1, cid, ficha, fichaSeq, dataPEP, YUSER)
				set retorno.atualizar = 1
			}		
		}
		if (cid="C90.0"&&(dataField="48183"||(dataField="48185")||(dataField="48186"))) {
			set valor26 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48183),"~",1)
			set valor27 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48185),"~",1)
			set valor27A 	= $piece(..recValorSalvo(codPaciente,cid,ficha,1,48186),"~",1)
			If (valor26=1&&(valor27=1)&&(valor27A=1)) {
				Do ..salvaPainel(codPaciente, 48182, 1, cid, ficha, fichaSeq, dataPEP, YUSER)
				set retorno.atualizar = 1
			}		
		}
		If (+$$$VARWorkFlowPEPAtualizarPainel(obj)=1) {
			;if (cid="C90.0"&&(dataField="48527"||(dataField="48526")||(dataField="48516")||(dataField="48515"))) {
			set retorno.atualizar = 1
		}	
			
		set retorno.alerta = alerta
		write retorno.%ToJSON()
	}
	////Julio
	If ($$$VARWorkFlowPEPAtualizarEmSequencia(obj)'="") {
		Set valor2 = $Piece(..recValorSalvo(codPaciente,cid,ficha,1,$$$VARWorkFlowPEPAtualizarEmSequencia(obj)),"~",1)
		if (valor'=valor2) {
			Do ..salvaPainel(codPaciente, $$$VARWorkFlowPEPAtualizarEmSequencia(obj), valor, cid, ficha, fichaSeq, dataPEP, YUSER)
		}
	}
	////
	If (pTransportar = "") {
		Kill ^VARPEPPremiumTrasnportador(0, codPaciente, cid, ficha, dataField)	
	}Else{
		Set ^VARPEPPremiumTrasnportador(0, codPaciente, cid, ficha, dataField, 1) = $ZDateH(pTransportar,4,,,,,,,,pTransportar)
	}
	////
	quit
	;]]></Implementation>
</Method>

<Method name="recConsultaAnterior">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumConsulta(0,codPaciente,fichaAux)) quit:fichaAux=""
		set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,fichaAux,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)
		if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
		if data=0 continue
		set vetor(data,fichaAux)=$$$VARPEPPremiumConsultaConsultaInativada(objFicha)
		set vetor1(fichaAux)=data
	}	
	set flAchou = 0
	set flGrupo=1,flFichaAtual=1
	;
	if ficha=-1 set data = $order(vetor(""),-1) if data'="" set ficha = $order(vetor(data,""),-1)
	;
	set data = $get(vetor1(ficha))
	set fichaAnt = ""
	if data'="" set data = data+1
	for {
		set data=$order(vetor(data),-1) quit:data=""
		quit:flAchou
		if data=$get(vetor1(ficha)) set fichaAnt = $piece(ficha,".",1)
		else  set fichaAnt=""
		for {
			set fichaAnt=$order(vetor(data,fichaAnt),-1)
			if fichaAnt="" quit
			if vetor(data,fichaAnt)>0 continue
			set flAchou = 1
			quit
		}
	}
	if fichaAnt="" set fichaAnt=0
	quit fichaAnt]]></Implementation>
</Method>

<Method name="recCampoPreenchidoFichas">
<ClassMethod>1</ClassMethod>
<FormalSpec>grupoWF,codPaciente,cid,ficha,pesquisaPorSequencia=0,flIgnoraPai=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if ficha=0 quit ""
	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumConsulta(0,codPaciente,fichaAux)) quit:fichaAux=""
		set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,fichaAux,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)
		if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
		if fichaAux'=ficha,$$$VARPEPPremiumConsultaConsultaInativada(objFicha) continue
		set vetor(data,fichaAux)=""
		set vetor1(fichaAux)=data
	}	
	set campoPreenchido = ""
	set flAchou = 0
	set flGrupo=1,flFichaAtual=1
	set data = $get(vetor1(ficha))
	if data'="" set data = data+1
	for {
		set data=$order(vetor(data),-1) quit:data=""
		quit:flAchou
		if data=$get(vetor1(ficha)) set fichaAnt = ficha+1
		else  set fichaAnt=""
		for {
			set fichaAnt=$order(vetor(data,fichaAnt),-1) quit:fichaAnt=""
			set flFichaAtual=1
			if fichaAnt'=ficha set flFichaAtual=0
			set campoPreenchido	= ..recCampoPreenchido(grupoWF,flGrupo,codPaciente,cid,fichaAnt,1,pesquisaPorSequencia,flIgnoraPai)
			if campoPreenchido.valor'="" {
				set campoPreenchido.ficha = fichaAnt
				set flAchou=1 quit
			}
		}
	}
	quit campoPreenchido]]></Implementation>
</Method>

<Method name="recTratamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if ficha=0 quit ""
	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumConsulta(0,codPaciente,fichaAux)) quit:fichaAux=""
		set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,fichaAux,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)
		if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
		if fichaAux'=ficha,$$$VARPEPPremiumConsultaConsultaInativada(objFicha) continue
		set vetor(data,fichaAux)=""
		set vetor1(fichaAux)=data
	}	
	set campoPreenchido = {}	
	set flAchou=0
	set flFichaAtual=1
	set data = $get(vetor1(ficha))
	if data'="" set data = data+1
	for {
		set data=$order(vetor(data),-1) quit:data=""
		quit:flAchou
		if data=$get(vetor1(ficha)) set fichaAnt = ficha+1
		else  set fichaAnt=""
		for {
			set fichaAnt=$order(vetor(data,fichaAnt),-1) quit:fichaAnt=""
			set ret = ..recValorSalvo(codPaciente,cid,fichaAnt,1,"TRAT")
			set valorC = $piece(ret,"~",1)
			set dtSave = $piece(ret,"~",3)
			set hrSave = $piece(ret,"~",4)
			if valorC="" continue
			set campoPreenchido.valor=valorC
			set campoPreenchido.ficha = fichaAnt
			set campoPreenchido.sequencia = "TRAT"
			set flAchou=1
			quit
		}
	}
	quit campoPreenchido]]></Implementation>
</Method>

<Method name="inicializaCiclos">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,dataPEP</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set fichaAux = ""
	for {
		set fichaAux = $order(^VARPEPPremiumConsulta(0,codPaciente,fichaAux)) quit:fichaAux=""
		set objFicha = $get(^VARPEPPremiumConsulta(0,codPaciente,fichaAux,1))
		set data = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objFicha)
		if data="" set data = +$$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objFicha)
		set vetor(data,fichaAux)=""
		set vetor1(fichaAux)=data
	}	
	;
	set consultaAnterior = ..recConsultaAnterior(codPaciente,ficha)
	;

	If (consultaAnterior'=""&&($Piece(..recValorSalvo(codPaciente,cid,ficha,1,"TRAT"),"~",1)="")) {
		If ($Piece(..recValorSalvo(codPaciente,cid,ficha,1,"TRAT"),"~",3)=""&&
		   ($Piece(..recValorSalvo(codPaciente,cid,consultaAnterior,1,"TRAT"),"~",3)'="")) {
			Do ..salvaPainel(codPaciente, "TRAT", $Piece(..recValorSalvo(codPaciente,cid,consultaAnterior,1,"TRAT"),"~",1), cid, ficha, 1, dataPEP)
		}
		;
		Set xCodRegime = $Piece($Piece(..recValorSalvo(codPaciente,cid,consultaAnterior,1,"TRAT"),"~",1),";",2)
		If (xCodRegime'="") {
			Set xCiclo = ""
			For {
				Set xCiclo = $Order(^VARPEPPremiumTratamento(0,codPaciente,cid,consultaAnterior,xCodRegime,xCiclo))
				Quit:xCiclo=""
				
				Set obj = $Get(^VARPEPPremiumTratamento(0,codPaciente,cid,consultaAnterior,xCodRegime,xCiclo,1))
				set chave = codPaciente_","_cid_","_ficha_","_xCodRegime_","_xCiclo
				set strStatus = $$$Save("VARPEPPremiumTratamento",chave,obj,$$$YES)
			}
		}
		Quit
	}

	If ($Piece(..recValorSalvo(codPaciente,cid,ficha,1,"TRAT"),"~",3)=""&&
	   ($Piece(..recValorSalvo(codPaciente,cid,consultaAnterior,1,"TRAT"),"~",3)'="")) {
		Do ..salvaPainel(codPaciente, "TRAT", $Piece(..recValorSalvo(codPaciente,cid,consultaAnterior,1,"TRAT"),"~",1), cid, ficha, 1, dataPEP)
	}
	;
	set campoPreenchidoAnterior	= ..recTratamento(codPaciente,cid,consultaAnterior)
	set codRegimeAnterior = ""
	if campoPreenchidoAnterior'=""{
		set sequenciaAnterior = campoPreenchidoAnterior.sequencia
		set tratamentoAnterior = $piece(campoPreenchidoAnterior.valor,";",1)
		set codRegimeAnterior = $piece(campoPreenchidoAnterior.valor,";",2)
	}
	;
	set campoPreenchido = ..recTratamento(codPaciente,cid,ficha)
	if campoPreenchido'=""{
		set sequencia = campoPreenchido.sequencia
		set tratamento = $piece(campoPreenchido.valor,";",1)
		set codRegime = $piece(campoPreenchido.valor,";",2)
		set fichaAnt = campoPreenchido.ficha
		if codRegime="" quit
		if $data(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime)) quit
		set codRegimeDel = "" 
		for  {
			set codRegimeDel = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegimeDel)) quit:codRegimeDel=""
			if codRegimeDel=codRegimeAnterior continue
			kill ^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegimeDel)
		}
		if $data(^VARPEPPremiumTratamento(0,codPaciente,cid,fichaAnt,codRegime)){
			set ciclo = ""
			for {
				set ciclo = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,fichaAnt,codRegime,ciclo)) quit:ciclo=""
				set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,fichaAnt,codRegime,ciclo,1))
				set chave = codPaciente_","_cid_","_ficha_","_codRegime_","_ciclo
				set strStatus = $$$Save("VARPEPPremiumTratamento",chave,obj,$$$YES)
			}
			quit
		}
		set flAchou=0
		set data = $get(vetor1(ficha))
		if data'="" set data = data+1
		for {
			set data=$order(vetor(data),-1) quit:data=""
			quit:flAchou
			if data=$get(vetor1(ficha)) set fichaAnt = ficha+1
			else  set fichaAnt=""
			for {
				set fichaAnt=$order(vetor(data,fichaAnt),-1) quit:fichaAnt=""
				set ret = ..recValorSalvo(codPaciente,cid,fichaAnt,1,sequencia)
				if $piece(ret,"~",1)'="" set flAchou=1 quit

			}
		}
		set dataInicio = $piece(ret,"~",3)
		set horaInicio = $piece(ret,"~",4)
		;
		if dataInicio'=""{
			if '$data(^VARWorkFlowRegTeraCiclo(0,cid,codRegime)){
				set ^VARWorkFlowRegTeraCiclo(0,cid,codRegime,1,1)=""
			}
			set ciclo=""
			for {
				set ciclo = $order(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ciclo)) quit:ciclo=""
				if '$data(^VARWorkFlowRegTeraCicloMed(0,cid,codRegime,ciclo)){
					kill ^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ciclo,1)
					continue
				}
				set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,codRegime,ciclo,1))
				set duracao = $$$VARWorkFlowRegTeraCicloPeriodicidade(objCiclos)
				;if duracao="" continue
				if duracao'=""{
					if dataInicio = ""{
						set dataInicio = dataFinal+1
					}
				}
				
				set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,codRegime,ciclo,1))
				
				set $$$VARPEPPremiumTratamentoDatadoIniciodoCiclo(obj) = $select(duracao="":$HOROLOG+1,1:dataInicio)
				set $$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj) = 0
				if duracao="" set dataFinal = ""
				else  set dataFinal = dataInicio+duracao-1
				set $$$VARPEPPremiumTratamentoDatadoFinaldoCiclo(obj) = dataFinal
				if duracao="" set dataFinal = dataInicio
				set chave = codPaciente_","_cid_","_ficha_","_codRegime_","_ciclo
				set strStatus = $$$Save("VARPEPPremiumTratamento",chave,obj,$$$YES)
				set dataInicio = ""
			}	
		}
	}]]></Implementation>
</Method>

<Method name="getPacienteCadastro">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set dados = {}
	set cid=""
	if codigo'=""{
		set obj = $get(^MEDPatient(YM,codigo,1))
		set dados.Codigo = codigo
		set dados.Nome = $$$MEDPatientName(obj)
		set dados.Sexo = +$$$MEDPatientGender(obj)
		set dados.DataDeNascimento = $select($$$MEDPatientDOB(obj)'="":$zdate($$$MEDPatientDOB(obj),3),1:"")
		set dados.DataDeObito = $select($$$MEDPatientDatadeObito(obj)'="":$zdate($$$MEDPatientDatadeObito(obj),3),1:"")
		set dados.CPF = $$$MEDPatientSSN(obj)
		set dados.RG = $$$MEDPatientFREE7(obj)
		set dados.CNS = $$$MEDPatientExternalCode(obj)
		set dados.Alergias = $$$MEDPatientAllergies(obj)
		set dados.Prontuário = $$$MEDPatientPID(obj)
		set dados.NãoInformada = $$$MEDPatientFREE1(obj)
		set dados.Óbito = $$$MEDPatientFREE9(obj)
		set dados.NomeDaMãe = $$$MEDPatientMothersName(obj)
		set dados.DataDeNasc = $select($$$MEDPatientMothersDOB(obj)'="":$zdate($$$MEDPatientMothersDOB(obj),3),1:"")
		set dados.Telefone1 = $$$MEDPatientTel(obj)
		set dados.Telefone2 = $$$MEDPatientFREE2(obj)
		set dados.PerdaDeContato = $$$MEDPatientFREE8(obj)
		set dados.Email = $$$MEDPatientEmail(obj)
		set dados.Logradouro = $$$MEDPatientStreet(obj)
		set dados.Número = $$$MEDPatientFREE4(obj)
		set dados.Complemento = $$$MEDPatientFREE3(obj)
		set dados.Bairro = $$$MEDPatientFREE6(obj)
		set dados.CEP = $$$MEDPatientZipCode(obj)
		set dados.Cidade = $$$MEDPatientCity(obj)
		set dados.Estado = $$$MEDPatientState(obj)
		set dados.Classificação = $$$MEDPatientClassificacao(obj)
		set dados.RacaCorEtnia	= $$$MEDPatientRacaCorEtnia(obj)
		set MedicoResponsavel = $$$MEDPatientMedicoResponsavel(obj)
		;
		set cid=""
		set consulta = -1
		for{
			set consulta = ..recConsultaAnterior(codigo,consulta) quit:consulta="0"
			if cid=""{
				set obj = $get(^VARPEPPremiumPrimario(YM,codigo,consulta,1))
				set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
				for i=1:1:$length(cids,";"){
					set ccid = $piece(cids,";",i)
					if ccid="" continue
					if $data(^VARWorkFlowCID(YM,ccid)) set cid=ccid quit
				}
			}		
			if cid'="" quit
		}
		if cid="" set cid = $order(^VARWorkFlowCID(YM,""))
		set dados.cid = cid
		;
		set YBED1 = YBED
		;if YBED1="SILMARADM" set YBED1 = "ERIVALDO"
		set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED1),""))
		set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
		set perm=1
		if perm'=1{
			set erro=0
			if codProvider="" set erro = 1
			;e  if (codProvider'=MedicoResponsavel&&'$data(^MEDAdmissions(0,300,codProvider,codigo))) set erro=1
			if erro{
				set retorno={}
				set retorno.erro=1
				write retorno.%ToJSON()
				quit
			}
		}
		
		;
		set arqTemp = $get(^mtemp.Arquivo(%session.SessionId))
		if arqTemp'=""{
			do ..removeArquivoTemp(arqTemp)
		}
		kill ^mtemp.Arquivo(%session.SessionId)
		set fname = ..copiaArquivoParaTemp(codigo)
		set ^mtemp.Arquivo(%session.SessionId) = fname
	}
	;if cid="" set cid = $order(^VARWorkFlowCID(YM,""))
	;set dados.cid = cid
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getIdade">
<ClassMethod>1</ClassMethod>
<FormalSpec>dataNascimento</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if dataNascimento="" quit ""
	set hoje = $zdate($horolog,8)
	set dataNascimento = $zdate(dataNascimento,8)
	set anos = $extract(hoje,1,4)-$extract(dataNascimento,1,4)
	if $extract(hoje,5,8)<$extract(dataNascimento,5,8) set anos = anos - 1
	quit anos]]></Implementation>
</Method>

<Method name="removeArquivoTemp">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivoTemp</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set obj = $get(^WWW012(0,0,1))
	set caminho = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminho, $length(caminho)) '= "\") {
		set caminho = caminho _ "\"
	}
	set caminho = caminho _ "temp\"
	if arquivoTemp=""{
		set fileset=##class(%ResultSet).%New("%Library.File:FileSet")
		set sc=fileset.Execute(##class(%File).NormalizeDirectory(caminho),%session.SessionId_"*",,1)
		set array = []
		while fileset.Next(.sc) { 
			set arquivo = $piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\"))
			do ##class(%File).Delete(caminho_arquivo)
		}
	}else{
		; Recupera o caminho de destino (diretorio temporario)
		do ##class(%File).Delete(caminho_arquivoTemp)
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="copiaArquivoParaTemp">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	;
	; Recupera o caminho de origem da imagem
	set caminhoO = $$GetDiretorioFisico^VARBRDiretorios(0,5)
	if ($extract(caminhoO, $length(caminhoO)) '= "\") {
		set caminhoO = caminhoO _ "\"
	}
	;
	if '##class(%File).Exists(caminhoO_arquivo_".jpg"){
		quit ""
	}
	;
	;
	; Recupera o caminho de destino (diretorio temporario)
	set obj = $get(^WWW012(0,0,1))
	set caminhoD = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminhoD, $length(caminhoD)) '= "\") {
		set caminhoD = caminhoD _ "\"
	}
	set caminhoD = caminhoD _ "temp\"
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminhoD)) {
		do ##class(%File).CreateDirectoryChain(caminhoD)
	}
	set fname = %session.SessionId_"_"_$replace($replace($now(),".",""),",","")_".jpg"
	do ##class(%File).CopyFile(caminhoO_arquivo_".jpg",caminhoD_fname,1)
	quit fname]]></Implementation>
</Method>

<Method name="copiaArquivoParaDestino">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo,codigo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	; Recupera o caminho de origem (diretorio temporario)
	set obj = $get(^WWW012(0,0,1))
	set caminhoO = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminhoO, $length(caminhoO)) '= "\") {
		set caminhoO = caminhoO _ "\"
	}
	set caminhoO = caminhoO _ "temp\"
	;
	; Recupera o caminho de destino da imagem
	set caminhoD = $$GetDiretorioFisico^VARBRDiretorios(0,5)
	if ($extract(caminhoD, $length(caminhoD)) '= "\") {
		set caminhoD = caminhoD _ "\"
	}
	;
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminhoD)) {
		do ##class(%File).CreateDirectoryChain(caminhoD)
	}
	do ##class(%File).CopyFile(caminhoO_arquivo,caminhoD_codigo_".jpg",1)
	quit $$$OK]]></Implementation>
</Method>

<Method name="getCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set filter = $Get(%request.Data("filter",1))
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="Codigo" set campo="CodigodoCID"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="Codigo" set campo1="CodigodoCID"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	if take="" set take = 20,skip=0
	set top = take
	if top<=0 set top = 20
	set contador = 0
	set SQL = " SELECT CodigodoCID, DescricaoCompleta,DescricaoResumida,Categoria FROM VARCID where company = 0 "
	
	if filter '= "" {
		set SQL = SQL_" and ("_filter_") "
	}elseif codigo'=""{
		set SQL = SQL_" and %upper(CodigodoCID) = '"_codigo_"' "
	}else{
		if searchValue'="" set SQL = SQL_" and (%upper($$SQLGetTextoSemAcento^VARSQL(CodigodoCID)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(DescricaoCompleta)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	}
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	if (filter'="") set meuSelect = SQL
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID=rs.%Get("CodigodoCID")
		set DescR=rs.%Get("DescricaoResumida")
		set Name=rs.%Get("DescricaoCompleta")
		if Name="" set Name = DescR
		set Categoria=rs.%Get("Categoria")
		set retorno(Categoria,ID) = Name
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		;
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		set linha.Categoria = descCat
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getFamiliar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set filter = $Get(%request.Data("filter",1))
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="Codigo" set campo="SearchWord"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="Codigo" set campo1="SearchWord"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	set top = take
	if top<=0 set top = 20
	set contador = 0
	set SQL = " SELECT Top 9999 SearchWord, Text FROM VARPARA where company = 0 and %upper(ParameterName)='FAMILIAR' and Language1 = 'PT' "
	
	if filter '= "" {
		set SQL = SQL_" and ("_filter_") "
	}elseif codigo'=""{
		set SQL = SQL_" and %upper(SearchWord) = '"_codigo_"' "
	}else{
		if searchValue'="" set SQL = SQL_" and (%upper($$SQLGetTextoSemAcento^VARSQL(Text)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	}
	set meuSelect = "select * from ("_SQL_" order by SearchWord)"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	if (filter'="") set meuSelect = SQL
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set Cod=rs.%Get("SearchWord")
		set Desc=rs.%Get("Text")
		set linha = {}
		set linha.Codigo = Cod
		set linha.Descricao = Desc
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="listaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	Set YBED 	= $Get(%request.Data("YBED",1))
	if take<20 set take = 20
	;
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="CodMedicamento" set campo="Codigo"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="CodMedicamento" set campo1="Codigo"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	;
	set contador = 0
	set select = "Codigo,NomeAlpha"
	set classe = "VARMedicamento"
	set where = "company = 0 "
	if codigo '= "" {
		if $data(^VARMedicamento(0,codigo,1)){
			set where = where_" and Codigo = '"_codigo_"' "
		}else{
			set where = where_" and %upper($$SQLGetTextoSemAcento^VARSQL(NomeAlpha)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(codigo)_"%') "
		}
	}elseif filter'=""{
		set where = where_" and ("_filter_")"
	}else{
		if searchValue'="" set where = where_" and %upper($$SQLGetTextoSemAcento^VARSQL(NomeAlpha)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%') "
	}
	
	;
	if where'="" set where = "where "_where
	set orderBy = "Order By NomeAlpha"
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_(top*2)_" * "
	set meuSelect=meuSelect_" from (select "_select_" from "_classe_" principal "_where_" Group By NomeAlpha) "_orderBy
	set meuSelect=meuSelect_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect_") group by Codigo) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	if (filter'="") set meuSelect = "select "_select_" from "_classe_" principal "_where_" Group By NomeAlpha"
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set NomeAlpha = rsLinha.%Get("NomeAlpha")
		set linha = {}
		set linha.CodMedicamento = codigo
		set linha.DescMedicamento = NomeAlpha
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaUnidades">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set meuSelect  = "select SearchItem,Text from WWW101 where ParameterDescription='EINHEIT' and language1='PT' group by text order by Text"
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchItem")
		set nome = rsLinha.%Get("Text")
		set nome = $piece(nome,"-",2,$length(nome,"-"))
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = nome
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaVias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set contador = 0
	set meuSelect  = "select SearchWord,Text from INPARA where company=0 and parametername='MEDROUTEADMIN' and language1='PT' order by Text"
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchWord")
		set nome = rsLinha.%Get("Text")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = nome
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaFrequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set contador = 0
	set meuSelect  = "select FrequencyID,Frequency from MEDFrequency order by Conversion desc"
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("FrequencyID")
		set nome = rsLinha.%Get("Frequency")
		set linha = {}
		set linha.CodFrequencia = codigo
		set linha.DescFrequencia = nome
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="associaPacienteCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	new codPaciente,dataPEP,cid,cids,ccid,i,obj
	new selectAux,rs
	kill temporcid
	set codPaciente=""
	for {
		set codPaciente = $order(^VARPEPPremiumPrimario(YM,codPaciente)) quit:codPaciente=""
		set ultFicha = ""
		set ultFicha = $order(^VARPEPPremiumPrimario(YM,codPaciente,ultFicha),-1)
		set cid = ""
		if ultFicha'=""{
			set obj = $get(^VARPEPPremiumPrimario(YM,codPaciente,ultFicha,1))
			set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
			for i=1:1:$length(cids,";"){
				set ccid = $piece(cids,";",i)
				if ccid="" continue
				if '$data(^VARWorkFlowCID(YM,ccid)) continue
				set temporcid(codPaciente,ccid) = YBED_"~"_$horolog
			}
		}
	}
	set selectAux = "select * from (select distinct MEDAdmission.Patient,"
	set selectAux = selectAux_" (select top 1 VARPEP.AnamneseHD"
	set selectAux = selectAux_" from VARPEP,MEDAdmission MEDAdmission1 "
	set selectAux = selectAux_" where MEDAdmission1.company=0 and VARPEP.company=0 and"
	set selectAux = selectAux_" MEDAdmission1.AdmissionID=VARPEP.admissao and %upper(MEDAdmission1.Patient)=%upper(MEDAdmission.Patient) order by VARPEP.Admissao desc) as AnamneseHD"
	set selectAux = selectAux_" from VARPEP,MEDAdmission"
	set selectAux = selectAux_" where MEDAdmission.company=0 and VARPEP.company=0 and"
	set selectAux = selectAux_" MEDAdmission.AdmissionID=VARPEP.admissao) where AnamneseHD is not null"
	;	
	set rs = ##class(%SQL.Statement).%ExecDirect("",selectAux)
	while(rs.%Next()){
		set linha={}
		set codPaciente = rs.%Get("Patient")
		set cids = rs.%Get("AnamneseHD")
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if '$data(^VARWorkFlowCID(YM,ccid)) continue
			set temporcid(codPaciente,ccid) = YBED_"~"_$horolog
		}
	}
	set codPaciente=""
	for {
		set codPaciente=$o(^VARPacienteCID(YM,codPaciente)) quit:codPaciente=""
		set cid=""
		for {
			set cid=$o(^VARPacienteCID(YM,codPaciente,cid)) quit:cid=""
			if '$data(temporcid(codPaciente,cid)){
				set strStatus = $$$Kill("VARPacienteCID",codPaciente_","_cid)
			}
		}
	}
	set codPaciente=""
	for {
		set codPaciente=$o(temporcid(codPaciente)) quit:codPaciente=""
		set cid=""
		for {
			set cid=$o(temporcid(codPaciente,cid)) quit:cid=""
			if '$data(^VARPacienteCID(YM,codPaciente,cid,1)){
				set obj = YBED_"~"_$horolog
				set strStatus = $$$Save("VARPacienteCID",codPaciente_","_cid,obj,1)
			}
		}
	}
	quit]]></Implementation>
</Method>

<Method name="pesquisaPacientes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	set codCID = $get(%request.Data("codCID",1))
	set exTodos = $get(%request.Data("exTodos",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	do ..associaPacienteCID()
	;
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	if codCID'="",exTodos'=1 {
		if wherefilter'="" set wherefilter = wherefilter _ " and codCID = '"_codCID_"'"
		else  set wherefilter = "codCID = '"_codCID_"'"
	}
	;
	set YBED1=YBED
	;if YBED="SILMARADM" set YBED1="ERIVALDO"
	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED1),""))
	set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
	set perm=1
	if codProvider="",perm'=1 {
		set retorno = {}
		set retorno.data = []
		set retorno.totalCount = 0
		write retorno.%ToJSON()
		quit $$$OK
	}
	set contador = 0
	set select1 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,VARPacienteCID.codigodocid codCID,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select1 = select1_" from  MEDPatient"
	if perm'=1 set select1 = select1_" JOIN MEDAdmission on MEDAdmission.Company=MEDPatient.Company and %upper(MEDAdmission.Patient)=MEDPatient.PatientID and %upper(Profissional)='"_codProvider_"'"
	if exTodos=1 set select1 = select1_" LEFT"
	set select1 = select1_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select1 = select1_" where MEDPatient.Company=0 "
	if codigo '= "" set select1 = select1_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select1 = select1_" and (%upper(PatientID) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(Name)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	;
	set select2 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,VARPacienteCID.codigodocid codCID,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select2 = select2_" from  MEDPatient "
	if exTodos=1 set select2 = select2_" LEFT"
	set select2 = select2_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select2 = select2_" where MEDPatient.Company=0 "
	set:perm'=1 select2 = select2_" and %upper(MEDPatient.MedicoResponsavel)="_codProvider
	if codigo '= "" set select2 = select2_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select2 = select2_" and (%upper(PatientID) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(Name)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	;
	set select3 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,VARPacienteCID.codigodocid codCID,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select3 = select3_" from  MEDPatient"
	if exTodos=1 set select3 = select3_" LEFT"
	set select3 = select3_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select3 = select3_" where MEDPatient.Company=0 "
	set select3 = select3_" and (select top 1 '1' from VARPEP Inner Join MEDAdmission on MEDAdmission.Company = VARPEP.Company and "
	set select3 = select3_" MEDAdmission.AdmissionID = VARPEP.Admissao and %upper(MEDAdmission.Patient)=MEDPatient.PatientID "
	set select3 = select3_" where %upper(VARPEP.CriadoPor)='"_YBED1_"' "
	set select3 = select3_" or %upper(VARPEP.AlteradoPor)='"_YBED1_"') = '1'"
	if codigo '= "" set select3 = select3_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select3 = select3_" and (%upper(PatientID) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(Name)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	;
	set select4 = "select distinct PatientID, Name,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,Email,VARPacienteCID.codigodocid codCID,$$GetDiagnosticoDescPEP^VARSQL(VARPacienteCID.codigodocid) Cid,$$SQLGetClassificacaoPaciente^VARSQL(PatientID) Classificacao "
	set select4 = select4_" from  MEDPatient"
	if exTodos=1 set select4 = select4_" LEFT"
	set select4 = select4_" JOIN VARPacienteCID ON VARPacienteCID.Company=MEDPatient.Company and VARPacienteCID.CodigodoPaciente=MEDPatient.PatientID "
	set select4 = select4_" where MEDPatient.Company=0 "
	set:perm'=1 select4 = select4_" and (select top 1 AlteradoPor from VARPEPPremium where Company=0 and %upper(AlteradoPor)='"_YBED1_"' and VARPEPPremium.CodigodoPaciente=MEDPatient.PatientID)='"_YBED1_"' "
	if codigo '= "" set select4 = select4_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select4 = select4_" and (%upper(PatientID) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(Name)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"

	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	if perm'=1 {
		set meuSelect=meuSelect_" from ("_select1_" union "_select2_" union "_select3_" union "_select4_") "_wherefilter_" "_orderBy
	}else{
		set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	}
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	;
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set ID			= rs.%Get("PatientID")
		set Name		= rs.%Get("Name")
		set DtNasc 		= rs.%Get("DOB")
		set sexo 		= rs.%Get("Gender")
		set Email		= rs.%Get("Email")
		set Cid			= rs.%Get("Cid")
		set Classificacao	= rs.%Get("Classificacao")
		set totalCount	= rs.%Get("totalCount")
		
		set linha = {}
		set linha.PatientID	= ID
		set linha.Name		= Name
		set linha.DOB		= $select(DtNasc'="":$zd(DtNasc,3),1:"")
		set linha.Gender	= sexo
		set linha.Email		= Email
		set linha.Classificacao = Classificacao
		set linha.CID		= Cid
		set linha.codCID	= rs.%Get("codCID")
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getImpressoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set job = %session.SessionId
	set codPaciente = $get(%request.Data("codPaciente",1))
	set ficha = $get(%request.Data("ficha",1))
	set fichaSeq = $get(%request.Data("fichaSeq",1))
	set dataPEP = $get(%request.Data("dataPEP",1))
	set cid = $get(%request.Data("codCID",1))
	set opcao = $get(%request.Data("opcao",1))
	set dataPEPO = dataPEP
	if dataPEPO="" set dataPEPO = +$horolog
	if dataPEP'="" set dataPEP = dataPEP + 1
	set tipoImpressao = $get(%request.Data("tipoImpressao",1))
	set fRemoverImprimirData = +$get(%request.Data("fRemoverImprimirData",1))
	set YM = 0 
	set Y  = "~"
	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED),""))
	set (objMEDProvider, conselho) = ""
	If (codProvider '= "") {
		set objMEDProvider = $Get(^MEDProvider(0,codProvider,1))
		set codConselho = $$$MEDProviderFREE2(objMEDProvider)
		set:codConselho'="" conselho = $p($get(^INPARA(0,"VARMEDCONSELHO","PT",codConselho,1)),"~",1)
	}
	set meses = "Janeiro;Fevereiro;Marco;Abril;Maio;Junho;Julho;Agosto;Setembro;Outubro;Novembro;Dezembro"
	if tipoImpressao=8{
		do ..preparaDadosImpressaoConsulta(job, codPaciente, cid, ficha)
		set link=$$Start^VARJasperRun("VARListaPassagem")
		set link = $$addUserParameter^VARJasperRun(link,"dataPEP",dataPEP)
	}elseif tipoImpressao=0{
		do ..preparaDadosImpressao(job, codPaciente, cid, ficha,fichaSeq,dataPEP)
		set link=$$Start^VARJasperRun("VARResumoClinico")
		set link = $$addUserParameter^VARJasperRun(link,"dataPEP",dataPEP)
	}elseif tipoImpressao=1{
		if '$data(^VARPEPPremiumPrimario(0,codPaciente,ficha)) write "alert('Não há dados para impressão');" quit
		set link = $$Start^VARJasperRun("VARPEPPremiumSumario")
		set link = $$addUserParameter^VARJasperRun(link,"consulta",ficha)
	}elseif tipoImpressao=7{
		set link = $$Start^VARJasperRun("VARPEPSumario")
		set link = $$addUserParameter^VARJasperRun(link,"receituario",ficha)
	}elseif tipoImpressao=2{
		if '$data(^VARPEPPremiumExames(YM,codPaciente,ficha)) write "alert('Não há dados para impressão');" quit
		set link=$$Start^VARJasperRun("VARPEPPremiumPedidoExamesCapa")
		set link=$$addUserParameter^VARJasperRun(link,"pRemoverData",fRemoverImprimirData)
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)
	/*}elseif tipoImpressao=3{
		if '$data(^VARPEPPremiumExames(YM,codPaciente,ficha)) write "alert('Não há dados para impressão');" quit
		set link=$$Start^VARJasperRun("VARPEPPremiumPedidoExames")
		set link=$$addUserParameter^VARJasperRun(link,"pTipo",7)
		set link=$$addUserParameter^VARJasperRun(link,"pRemoverData",fRemoverImprimirData)
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)
		set link = $$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)*/
	}elseif tipoImpressao=4{
		if '$data(^VARPEPPremiumReceituario(YM,codPaciente,dataPEPO)) write "alert('Não há dados para impressão');" quit
		set link=$$Start^VARJasperRun("VARPEPPremiumReceituario")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link = $$addUserParameter^VARJasperRun(link,"dataPEP",dataPEPO)
	}elseif tipoImpressao=5{
		if '$data(^VARPEPPremiumPrescricaos(YM,1,codPaciente,ficha)) write "alert('Não há dados para impressão');" quit
		set regime =$Piece(opcao,"^",2)
		set ciclo = $Piece(opcao,"^",3)
		set opcao = $Piece(opcao,"^",1)
		if opcao="" set opcao = " "
		Set codPrescricao = ""
		If (regime'=""&&(ciclo'="")) {
			&Sql(
				Select Distinct NumerodaPrescricao Into :codPrescricao
				From SQLUser.VARPEPPremiumPrescricao Where Company = 0 
				And CodigodoPaciente = :codPaciente And CodigodoCID = :cid 
				And RegimeTerapeutico = :regime And Ciclo = :ciclo
			)
		}
		if (codPrescricao=""){
			set codPrescricao = $order(^VARPEPPremiumPrescricaos(YM,1,codPaciente,ficha,opcao,""),-1)
		}
		set data = ""
		if codPrescricao'=""{
			set obj = $get(^VARPEPPremiumPrescricaoTratamento(YM,codPrescricao,1))
			set data = $$$VARPEPPremiumPrescricaoTratamentoDatadaPrescricao(obj)
		}
		if data="" set data = $horolog
		set data = $zdate(data,4)
		set link=$$Start^VARJasperRun("VARPEPPremiumPrescricaoCapa")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"codPrescricao",codPrescricao)
		set link=$$addUserParameter^VARJasperRun(link,"dataPrescricao",data)
	}elseif tipoImpressao=6{
		set link=$$Start^VARJasperRun("VARPEPPremiumAtestado")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
	}elseif tipoImpressao=9{

		if '$data(^VARPEPPremiumTratamento(YM,codPaciente,cid,ficha)) write "alert('Não há tratamento selecionado');" quit
		if ..recUltimoEstadiamento(codPaciente,cid,ficha)="" write "alert('Paciente não possuí estadiamento');" quit
		kill ^mtemp.valoresEstadiamentoSalvos($job)
		kill ^mtemp.valoresSalvosPEP($job)
		set retorno = ##class(VAR.CSP.MAPPA).calcEstadiamento(codPaciente,cid,ficha,1,1,"",1,1)
		if retorno.selEstagio="" write "alert('Paciente não possuí estadiamento RAI');" quit
		do ..preparaDadosImpressaoSolicTratamento(job, codPaciente, cid, ficha)
		set link=$$Start^VARJasperRun("VARPEPPremiumSolicTratamento")
	}
	;
	set folder = $piece($get(^VARJasper(YM,YM,1)),Y,1)
	set link = $$addUserParameter^VARJasperRun(link,"ficha",ficha)
	set link = $$addUserParameter^VARJasperRun(link,"codPaciente",codPaciente)
	set link = $$addUserParameter^VARJasperRun(link,"codCID",cid)
	set link = $$addUserParameter^VARJasperRun(link,"CompiledDir",folder)
	set link = $$addUserParameter^VARJasperRun(link,"session",job)
	set link = $$addParameter^VARJasperRun(link,YBED,1)
	;
	do ViewInForm^VARJasperRun(link,"Impressao",2)
	quit]]></Implementation>
</Method>

<Method name="preparaDadosImpressaoSolicTratamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	kill ^mtemp.SolicTratamento(0,job)
	kill ^mtemp.SolicTratamentoMedicamento(0,job)
	kill ^mtemp.SolicTratamentoReferencias(0,job)
	;
	set nome = $$SQLGetPatientName^VARSQL(codPaciente)
	set sexo = $$SQLGetSexoPaciente^VARSQL(codPaciente)
	if $zcvt(sexo,"l")["masculino" set nome = "o paciente "_nome
	else  set nome = "a paciente "_nome
	set idade = $$getPatientAge^VARSQL(codPaciente)
	If ($Data(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1))) {
		set diagnostico = $Piece(^VARPEPPremiumDiagnostico(0,codPaciente,cid,1,1),"~",2)
	}Else{
		set diagnostico = $$getPatientDiagMAPPA^VARSQL(cid)
	}
	set estadiamento = $$getEstadiamentoMAPPA^VARSQL(codPaciente,cid,ficha,3)
	if estadiamento="" set estadiamento = $$getEstadiamentoMAPPA^VARSQL(codPaciente,cid,ficha,1)
	set codTratamento = $$getCodTratamentoMAPPA^VARSQL(codPaciente,cid,ficha)
	set descTratamento = $$getTratamentoMAPPA^VARSQL(codPaciente,cid,ficha)
	set ciclos = ..carregaTratamento(job, cid, codTratamento)
	set textoCab = "Declaro para os devidos fins que "_nome_", de "_idade_" anos, com diagnóstico de "_diagnostico_", "_estadiamento_" tem indicação de tratamento com "_descTratamento_". Vide posologia abaixo:"
	set obj  = $get(^VARPEPPremiumImprSolicTrat(0,codPaciente,cid,ficha,codTratamento,1))
	if obj'=""{
		set textoCab = $$$VARPEPPremiumImprSolicTratCabecalho(obj)
		set referencias = $$$VARPEPPremiumImprSolicTratReferencias(obj)
		kill ^mtemp.SolicTratamentoReferencias(0,job)
		set ^mtemp.SolicTratamentoReferencias(0,job,1,1)=referencias
	}
	set ^mtemp.SolicTratamento(0,job,1) = textoCab_"~"_$select(ciclos=-1:"Até progressão da doença ou toxicidade",1:ciclos)
	quit codTratamento
	;]]></Implementation>
</Method>

<Method name="recTratamentoImpr">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set job 		= %session.SessionId
	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid 		= $get(%request.Data("codCID",1))
	set ficha 		= $get(%request.Data("ficha",1))
	set retorno = {}
	set retorno.mensagem=""
	if '$data(^VARPEPPremiumTratamento(YM,codPaciente,cid,ficha)) {
		set retorno.mensagem = "Não há tratamento selecionado"
	}elseif ..recUltimoEstadiamento(codPaciente,cid,ficha)="" {
		set retorno.mensagem = "Paciente não possuí estadiamento"
	}else{
		kill ^mtemp.valoresEstadiamentoSalvos($job)
		kill ^mtemp.valoresSalvosPEP($job)
		set estad = ##class(VAR.CSP.MAPPA).calcEstadiamento(codPaciente,cid,ficha,1,1,"",1,1)
		if estad.selEstagio="" {
			set retorno.mensagem = "Paciente não possuí estadiamento"
		}
	}
	if retorno.mensagem'=""{
		set retorno.status = 0
		write retorno.%ToJSON()
		quit
	}	
	set codTratamento = ..preparaDadosImpressaoSolicTratamento(job,codPaciente,cid,ficha)
	set retorno = {}
	set retorno.status = 0
	set retorno.tratamento = codTratamento
	S ^zzJULIOE($now(),1) = job_"|"_$Get(^mtemp.SolicTratamento(0,job,1))
	if $data(^mtemp.SolicTratamento(0,job)){
		set retorno.status = 1
		set textoCab = $piece(^mtemp.SolicTratamento(0,job,1),"~",1)
		set retorno.descricao = textoCab
		//
		set array = []
		set linha = ""
		for {
			set linha = $order(^mtemp.SolicTratamentoMedicamento(0,job,linha)) quit:linha=""
			set obj = $get(^mtemp.SolicTratamentoMedicamento(0,job,linha,1))
			set linhaArray = {}
			set linhaArray.Medicamento	= $piece(obj,"~",1)
			set linhaArray.Dose 		= $piece(obj,"~",2)
			set linhaArray.Via 			= $piece(obj,"~",3)
			set linhaArray.Posologia 	= $piece(obj,"~",4)
			set linhaArray.DiasTratamento = $piece(obj,"~",5)
			set linhaArray.Ciclo 		= $piece(obj,"~",6)
			set linhaArray.Periodicidade= $piece(obj,"~",7)
			do array.%Push(linhaArray)
		}

		//
		set textoRef = ""
		set linha = ""
		for {
			set linha = $order(^mtemp.SolicTratamentoReferencias(0,job,linha)) quit:linha=""
			set referencias = $piece($get(^mtemp.SolicTratamentoReferencias(0,job,linha,1)),"~",1)
			if textoRef'="" set textoRef = textoRef_$c(10)
			set textoRef = textoRef_referencias
		}
		set retorno.medicamentos = array
		set retorno.referencias = textoRef
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="carregaTratamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,cid,codTratamento</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM=0
	set linha = 0, ciclos=0,linharef=0
	;
	set sequ = ""
	for {
		set sequ = $order(^VARWorkFlowRegTeraRefe(0,cid,codTratamento,sequ)) quit:sequ=""
		set obj = $get(^VARWorkFlowRegTeraRefe(0,cid,codTratamento,sequ,1))
		set referencia = $$$VARWorkFlowRegTeraRefeReferenciadoTratamento(obj)
		set ^mtemp.SolicTratamentoReferencias(0,job,sequ,1) = sequ_". "_referencia

	}
	;
	set progressaoInicial = 0,progressao=0
	set ciclo=""
	for {
		set ciclo=$order(^VARWorkFlowRegTeraCicloMed(0,cid,codTratamento,ciclo)) quit:ciclo=""
		set periodicidade 			= $piece($get(^VARWorkFlowRegTeraCiclo(0,cid,codTratamento,ciclo,1)),"~",1)
		set tratCiclico 			= +$piece($get(^VARWorkFlowRegTeraCiclo(0,cid,codTratamento,ciclo,1)),"~",2)
		if ciclo=1,tratCiclico=2 set progressaoInicial = 1
		if tratCiclico=2 set progressao=1
		if tratCiclico=0{
			set periodicidade	= "A cada "_periodicidade_$select(periodicidade>1:" dias",1:"dia")
		}elseif tratCiclico=1{
			if periodicidade>0{
				set periodicidade = " (A cada "_periodicidade_$select(periodicidade>1:" dias)",1:"dia)")
			}
			set periodicidade = "Contínuo "_periodicidade
		}elseif tratCiclico=2{
			if periodicidade>0{
				set periodicidade = " (A cada "_periodicidade_$select(periodicidade>1:" dias)",1:"dia)")
			}
			set periodicidade = "Até progressão de doença ou toxicidade "_periodicidade
		}

		kill conteudo
		set linhaConteudo = ""
		set nseq=""
		for {
			set nseq=$order(^VARWorkFlowRegTeraCicloMed(0,cid,codTratamento,ciclo,nseq)) quit:nseq=""
			set obj = $get(^VARWorkFlowRegTeraCicloMed(0,cid,codTratamento,ciclo,nseq,1))
			set medicamento = $$$VARWorkFlowRegTeraCicloMedMedicamento(obj)
			set referencias = $$$VARWorkFlowRegTeraCicloMedReferencias(obj)
			if referencias'=""{
				set naoarm=0
				set lin=""
				for {
					set lin = $order(salvos(lin)) quit:lin=""
					set reg = $get(salvos(lin))
					if reg=referencias set naoarm=1 quit
				}
				if 'naoarm{
					set linharef = linharef + 1
					;set ^mtemp.SolicTratamentoReferencias(0,job,linharef,1) = linharef_". "_referencias
					set salvos(linharef) = referencias
				}
			}
			set objMedicamento = ""
			if medicamento'=""{
				set objMedicamento 		= $get(^VARMedicamento(YM,medicamento,1))
			}
			set codMedicamento = medicamento
			set medicamento		= $$GetDescMedicamentos^VARSQL(medicamento,1,$$$VARWorkFlowRegTeraCicloMedViadeAdministracao(obj))
			;set medicamento		= $$$VARMedicamentoSubDescricao(objMedicamento)
			set dose		 	= $fnumber($Replace($$$VARWorkFlowRegTeraCicloMedDose(obj),",","."),".")
			set doseUnid		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(obj)
			set objINPARA				= ""
			if doseUnid'=""{
				set objINPARA			= $get(^INPARA(YM,"UNIDDOSAGEM","PT",doseUnid,1))
			}
			set dose					= dose_" "_$$$INPARAText(objINPARA)
			;
			set via						= $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(obj) 
			set objINPARA				= ""
			if via'=""{
				set objINPARA			= $get(^INPARA(YM,"VIAADMINISTRACAO","PT",via,1))
			}
			set viaAdministracao		= $$$INPARAText(objINPARA)
			;
			set posologia	 			= $$$VARWorkFlowRegTeraCicloMedPosologia(obj)
			set objINPARA				= ""
			if posologia'="" {
				set objINPARA			= $get(^INPARA(YM,"POSOLOGIA","PT",posologia,1))
			}
			set posologia				= $$$INPARAText(objINPARA)

			set diaInicial				= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(obj) 
			set diaFinal	 			= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(obj)
			if diaInicial=diaFinal {
				if diaInicial="" set dias = "Contínuo"
				else  set dias = "Dia "_diaInicial
			}else{
				if diaFinal="" {
					set dias = "Dia "_diaInicial_" - Contínuo"
				}else{
					if (diaFinal-diaInicial+1)#7=0 {
						set dias = ((diaFinal-diaInicial+1)/7)_" Semanas"
					}else{
						set dias = "Dia "_diaInicial_" a "_diaFinal
					}
				}
			}
			set diasTratamento	= dias
			set linha = linha + 1
			set conteudo("^"_medicamento_"~"_dose_"~"_viaAdministracao_"~"_posologia_"~~~"_periodicidade_"~~"_codMedicamento,$select(diaInicial="":" ",1:diaInicial))=$select(diaFinal="":" ",1:diaFinal)
			
			;set linhaConteudo = linhaConteudo_"^"_medicamento_"~"_dose_"~"_viaAdministracao_"~"_posologia_"~"_diasTratamento_"~~"_periodicidade
		}
		kill conteudo2
		set texto=""
		for {
			set texto = $order(conteudo(texto)) quit:texto=""
			set dia = ""
			set dias=""
			for {
				set dias = $order(conteudo(texto,dias)) quit:dias=""
				set diaf=conteudo(texto,dias)
				;
				if dias=diaf {
					if dias=" " set diaTexto = "Contínuo"
					else  set diaTexto = dias
				}else{
					if diaf=" " {
						set diaTexto = dias_" - Contínuo"
					}else{
						if (diaf-dias+1)#7=0 {
							set diaTexto = ((diaf-dias+1)/7)_" Semanas"
						}else{
							set diaTexto = dias_" a "_diaf
						}
					}
				}
				;
				if dia = "" set dia = diaTexto continue
				set dia = dia_", "_diaTexto 
			}
			set diaBeforeF = +dia
			set diaBeforeF = $extract("000",1,3-$length(diaBeforeF))_diaBeforeF
			if $extract(dia,1,5)="Contí"{
			}elseif $length(dia,",")=2 {
				set dia = $replace(dia,","," e")
				set dia = "Dias "_dia
			}elseif dia["," {
				set dia = "Dias "_dia
			}elseif dia["Semanas" {
				set dia = dia
			}else{
				set dia = "Dia "_dia
			}
			set texto2 = texto
			set $piece(texto2,"~",5)=dia
			set conteudo2(texto2)=diaBeforeF
		}
		kill conteudo
		merge conteudo = conteudo2
		set ciclox = ciclo
		if progressaoInicial,ciclox>1 set ciclox = ciclox - 1
		set linha = ciclox
		set texto=""
		for {
			set texto = $order(conteudo(texto)) quit:texto=""
			set sequencia = conteudo(texto)
			set linhasArmazenadas(texto,ciclox)=""
			set linhasArmazenadasLinha(+(linha_"."_sequencia),texto) = ""
		}
		
		set ciclos = ciclos + 1
	}
	set nlinha = 0
	set linha = ""
	for{
		set linha = $order(linhasArmazenadasLinha(linha)) quit:linha=""
		set conteudo = ""
		for{
			set conteudo = $order(linhasArmazenadasLinha(linha,conteudo)) quit:conteudo=""
			if '$data(linhasArmazenadas(conteudo)) continue
			set arrCiclo = ""
			set sequencial = 1
			set ciclo=""
			for{
				set ciclo = $order(linhasArmazenadas(conteudo,ciclo)) quit:ciclo=""
				set proxCiclo = $order(linhasArmazenadas(conteudo,ciclo))
				if proxCiclo'=""{
					if (ciclo+1)'=proxCiclo set sequencial=0
				}
				set:arrCiclo'="" arrCiclo = arrCiclo_", "
				set arrCiclo = arrCiclo_ciclo
			}
			if sequencial,arrCiclo[","{
				set arrCiclo = $order(linhasArmazenadas(conteudo,""))_" a "_$order(linhasArmazenadas(conteudo,""),-1)
			}
			for i=1:1:$length(conteudo,"^"){
				set nconteudo = $piece(conteudo,"^",i)
				if nconteudo="" continue
				set nlinha = nlinha + 1
				set ^mtemp.SolicTratamentoMedicamento(0,job,nlinha,1) = nconteudo
				set $piece(^mtemp.SolicTratamentoMedicamento(0,job,nlinha,1),"~",6)=arrCiclo
			}
			kill linhasArmazenadas(conteudo)
		}
	}
	if progressao=1 set ciclos=-1
	set $piece(^mtemp.SolicTratamentoMedicamento(0,job,1,1),"~",8) = ciclos
	quit ciclos]]></Implementation>
</Method>

<Method name="preparaDadosImpressao">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codPaciente,cid,ficha,fichaSeq,dataPEP</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	kill ^mtemp.VARRESUMOCLINICO(YM,job)
	kill ^mtemp.VARRCLIESTADIAMENTO(YM,job)
	kill ^mtemp.VARRCLIWorkFlow(YM,job)
	kill ^mtemp.VARRCLIWorkFlowDetalhe(YM,job)
	;
	set objPatient		= $get(^MEDPatient(YM,codPaciente,1))
	set nomePaciente	= $$$MEDPatientName(objPatient)
	set sexo 			= $$$MEDPatientGender(objPatient)
	set dtNascimento 	= $$$MEDPatientDOB(objPatient)
	set alergias 		= $$$MEDPatientAllergies(objPatient)
	set sexo 			= $PIECE($get(^WWW101(0,"SEX","PT",+sexo,1)),"~",1)
	;
	set descCid = $piece($get(^VARCID(0,cid,1)),"~",1)
	;
	set inicioAtendimento = $order(^VARPEPPremiums(YM,1,codPaciente,cid,""))
	set ultimoAtendimento = $order(^VARPEPPremiums(YM,1,codPaciente,cid,""),-1)
	;
	set ps = 186
	set obj = $get(^VARWorkFlowPEP(YM,cid,ps,1))
	set opcoes	= $$$VARWorkFlowPEPOpcoes(obj)
	
	set obj=""
	set $piece(obj,"~",1) = codPaciente
	set $piece(obj,"~",2) = nomePaciente
	set $piece(obj,"~",3) = sexo
	set $piece(obj,"~",4) = $select(dtNascimento="":"",1:$zd(dtNascimento,4,,4))
	set $piece(obj,"~",5) = alergias
	set $piece(obj,"~",6) = cid
	set $piece(obj,"~",7) = descCid
	set $piece(obj,"~",8) = $select(inicioAtendimento="":"",1:$zdate(inicioAtendimento,4,,4))
	set $piece(obj,"~",9) = $select(ultimoAtendimento="":"",1:$zdate(ultimoAtendimento,4,,4))
	set $piece(obj,"~",10) = $select(dataPEP="":$zdate($horolog,4,,4),1:$zdate(dataPEP-1,4,,4))
	set ret = $$$Save("mtemp.VARRESUMOCLINICO",job,obj,1)
	;
	for cest=3,1{
		set objEst = $get(^VARWorkFlowEstadiamento(YM,cid,cest,1))
		set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEst)
		kill ^mtemp.valoresEstadiamentoSalvos($job)
		kill ^mtemp.valoresSalvosPEP($job)
		set calculo = ..calcEstadiamento(codPaciente,cid,ficha,fichaSeq,cest,dataPEP,0,0)
		;
		set codEstagio = calculo.selEstagio
		set pontuadores = calculo.estadiamentoTexto
		if codEstagio="" continue
		set objEstagio = $get(^VARWorkFlowEstadiamentoEstagio(YM,cid,cest,codEstagio,1))
		set descEst = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
		set grupoRisco = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
		if descEst["Impossível" continue
		;
		set pontuadores = $replace(pontuadores,"<ul class=ttEstadiamento>","")
		set pontuadores = $replace(pontuadores,"</ul>","")
		set obj=""
		set $piece(obj,"~",1) = descEstadiamento
		set $piece(obj,"~",2) = descEst
		set $piece(obj,"~",3) = grupoRisco
		;set $piece(obj,"~",4) = pontuadores
		set ret = $$$Save("mtemp.VARRCLIESTADIAMENTO",job_","_cest,obj,1)
		quit
	}
	/*
	set sequencias(2)="Performance Status~1~rgb(173,131,48)~white"
	set sequencias(2,1)="186~ECOG~1"
	set sequencias(3)="Co-morbidades~1~rgb(173,99,0)~white"
	set sequencias(3,1)="1277~~3"
	set sequencias(3,1,1)="1278~ ~3"
	set sequencias(4)="Atividades de Doença~1~rgb(176,74,0)~white"
	*/
	kill sequencias
	do ..preparaDadosDiagnostico(.sequencias)
	;
	;merge temp = sequencias(4)
	;kill sequencias
	;merge sequencias(4) = temp
	set obj = ""
	set cont=0
	set Sequencia = ""
	for {
		set Sequencia 	= $order(sequencias(Sequencia)) quit:Sequencia=""
		set Nome		= $piece(sequencias(Sequencia),"~",1)
		set destaque	= $piece(sequencias(Sequencia),"~",2)
		set corFundo	= $piece(sequencias(Sequencia),"~",3)
		set corFonte	= $piece(sequencias(Sequencia),"~",4)
		set subTipo		= +$piece(sequencias(Sequencia),"~",5)
		if corFundo = "" set corFundo = "#F7F7F7"
		if corFonte = "" set corFonte = "#404040"
		set flFilho=0
		set cont1=1
		set nivel = ""
		for {
			set nivel= $order(sequencias(Sequencia,nivel)) quit:nivel=""
			kill sequencNivel
			merge sequencNivel = sequencias(Sequencia,nivel)
			set sequ = sequencNivel
			do ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,Sequencia,sequ,0,0,.sequencNivel,.cont1)
		}
		if cont1<2 continue
		if destaque{
			if obj'=""{
				set $piece(obj,"~",5)=0
				set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
				set cont = cont + 1
				set obj=""
			}
			set $piece(obj,"~",1)=Sequencia
			set $piece(obj,"~",2)=Nome
			set $piece(obj,"~",5)=destaque
			set $piece(obj,"~",6)=corFundo
			set $piece(obj,"~",7)=corFonte
			set $piece(obj,"~",8)=subTipo
			set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
			set cont = cont + 1
			set obj=""
		}else{
			if obj=""{
				set $piece(obj,"~",1)=Sequencia
				set $piece(obj,"~",2)=Nome
			}else{
				set $piece(obj,"~",3)=Sequencia
				set $piece(obj,"~",4)=Nome
				set $piece(obj,"~",5)=0
				set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
				set cont = cont + 1
				set obj=""
			}
		}
		;
	}
	if obj'=""{
		set $piece(obj,"~",5)=0
		set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
	}
	set sequ = ""
	for {
		set sequ = $order(^mtemp.VARRCLIWorkFlow(YM,job,sequ)) quit:sequ=""
		set sequ1 = $p(^(sequ,1),"~",1)
		set sequ2 = $p(^(1),"~",3)
		if sequ2="" continue
		set cont1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(YM,job,sequ1,""),-1)
		set cont2 = $order(^mtemp.VARRCLIWorkFlowDetalhe(YM,job,sequ2,""),-1)
		if cont1>cont2{
			for cont=cont2+1:1:cont1{
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_sequ2_","_cont," ~ ",1)
			}
		}elseif(cont2>cont1){
			for cont=cont1+1:1:cont2{
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_sequ1_","_cont," ~ ",1)
			}
		} 
		
	}	
	quit]]></Implementation>
</Method>

<Method name="preparaDadosImpressaoConsulta">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	kill ^mtemp.VARRESUMOCLINICO(YM,job)
	kill ^mtemp.VARRCLIESTADIAMENTO(YM,job)
	kill ^mtemp.VARRCLIWorkFlow(YM,job)
	kill ^mtemp.VARRCLIWorkFlowDetalhe(YM,job)
	kill ^mtemp.UltimoGrupo(job)
	;
	set objPatient		= $get(^MEDPatient(YM,codPaciente,1))
	set nomePaciente	= $$$MEDPatientName(objPatient)
	set sexo 			= $$$MEDPatientGender(objPatient)
	set dtNascimento 	= $$$MEDPatientDOB(objPatient)
	set alergias 		= $$$MEDPatientAllergies(objPatient)
	set sexo 			= $PIECE($get(^WWW101(0,"SEX","PT",+sexo,1)),"~",1)
	;
	set descCid = $piece($get(^VARCID(0,cid,1)),"~",1)
	;
	set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))
	set dataConsulta = $$$VARPEPPremiumConsultaDatadaConsultaRetrospectiva(objConsulta)
	if dataConsulta="" set dataConsulta = $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objConsulta)
	
	;
	set inicioAtendimento = $order(^VARPEPPremiums(YM,1,codPaciente,cid,""))
	set ultimoAtendimento = $order(^VARPEPPremiums(YM,1,codPaciente,cid,""),-1)
	;
	set obj=""
	set $piece(obj,"~",1) = codPaciente
	set $piece(obj,"~",2) = nomePaciente
	set $piece(obj,"~",3) = sexo
	set $piece(obj,"~",4) = $select(dtNascimento="":"",1:$zd(dtNascimento,4,,4))
	set $piece(obj,"~",5) = ficha
	set $piece(obj,"~",6) = cid
	set $piece(obj,"~",7) = descCid
	set $piece(obj,"~",8) = $select(inicioAtendimento="":"",1:$zdate(inicioAtendimento,4,,4))
	set $piece(obj,"~",9) = $select(ultimoAtendimento="":"",1:$zdate(ultimoAtendimento,4,,4))
	set $piece(obj,"~",10) = $select(dataConsulta="":$zdate($horolog,4,,4),1:$zdate(dataConsulta,4,,4))
	set ret = $$$Save("mtemp.VARRESUMOCLINICO",job,obj,1)
	;
	set SQL = " SELECT Sequencia"
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	set SQL = SQL_" and %upper(predecessor) = ' ' and TipodeWorkFlow <> '18'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs1 = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set cont = 1
	while(rs1.%Next()){
		set Sequencia		= rs1.%Get("Sequencia")
		set nome = ..recDescricaoWorkFlow(cid, Sequencia)
		set obj = ""
		set $piece(obj,"~",1)=cont		; sequencia 1
		set $piece(obj,"~",2)=nome			; nome 1
		set $piece(obj,"~",5)=2				; destaque?
		set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
		;w !,"Pai: "_Sequencia
		do ..recFilhosDadosImpressaoConsulta(job, codPaciente, cid, ficha,Sequencia,"",cont,1)
		if '$data(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,1)){
			kill ^mtemp.VARRCLIWorkFlow(0,job,cont,1)
		}
		set cont = cont + 1		
	}	
	
	set campoPreenchido	= ..recTratamento(codPaciente,cid,ficha)
	;
	set tratamento = $piece(campoPreenchido.valor,";",1)
	set codRegime = $piece(campoPreenchido.valor,";",2)
	if codRegime'=""{
		set obj = ""
		set $piece(obj,"~",1)=cont			; sequencia 1
		set $piece(obj,"~",2)="Regime Terapêutico"	; nome 1
		set $piece(obj,"~",5)=2				; destaque?
		set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_cont,obj,1)
		;
		if codRegime=0{
			set nome = "Observação Sem Tratamento Específico (Watch and Wait)"
		}else{
			set objRegime = $get(^VARWorkFlowRegTera(0,cid,codRegime,1))
			set nome = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objRegime)
		}
		;
		set obj = ""
		set $piece(obj,"~",1)=""
		set $piece(obj,"~",2)=" &nbsp; Regime"
		set $piece(obj,"~",3)=nome
		set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_",1",obj,1)
	}	
	if '$data(^mtemp.VARRCLIWorkFlow(0,job)){
		set obj = ""
		set $piece(obj,"~",1)=0		; sequencia 1
		set $piece(obj,"~",2)="Não há dados preenchidos"
		set $piece(obj,"~",5)=2				; destaque?
		set ret = $$$Save("mtemp.VARRCLIWorkFlow",job_","_1,obj,1)
	}
	;do ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,Sequencia,sequ,0,0,.sequencNivel,.cont1)
	;
	quit]]></Implementation>
</Method>

<Method name="recFilhosDadosImpressaoConsulta">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codPaciente,cid,ficha,Sequencia,resposta,cont,nivel</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set SQL = " SELECT Sequencia,TipodeWorkflow,GrupodeExibicaonaTela,Opcoes,Predecessor"
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	set SQL = SQL_" and %upper(predecessor) = '"_Sequencia_"'"
	if resposta'="" set SQL = SQL_" and %upper(OpcaodoPredecessor) = '"_resposta_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs1 = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set tipos(1)="",tipos(2)="",tipos(3)="",tipos(4)="",tipos(5)="",tipos(9)=""
	set tipos(11)="",tipos(12)="",tipos(13)="",tipos(14)="",tipos(22)="",tipos(30)="",tipos(32)=""
	;set tipos(24)="",tipos(25)="",tipos(26)="",tipos(27)="",tipos(28)=""
	while(rs1.%Next()){
		set Sequencia1				= rs1.%Get("Sequencia")
		set TipodeWorkflow			= rs1.%Get("TipodeWorkflow")
		set GrupodeExibicaonaTela	= rs1.%Get("GrupodeExibicaonaTela")
		set Opcoes					= rs1.%Get("Opcoes")
		set Predecessor				= rs1.%Get("Predecessor")
		set nome 					= ..recDescricaoWorkFlow(cid, Sequencia1)
		set espacos = ""
		for i=1:1:nivel set espacos = espacos_" &nbsp; "
		;
		if $get(^mtemp.UltimoGrupo(job)) = GrupodeExibicaonaTela set GrupodeExibicaonaTela = ""
		;
		if TipodeWorkflow=7{ ; Recupera resultado de imagens
			if $data(predecessorList(Predecessor)) continue
			set predecessorList(Predecessor)=""
			set dados = ..recuperaResultadosImagens(codPaciente,cid,Predecessor,ficha)
			set respostaConv = dados
			set respostaConv = $replace(respostaConv,"<ul class='ttEstadiamento listaDImagens'>","<ul>")
			set respostaConv = $replace(respostaConv,"<ul class=ttEstadiamento>","<ul>")
			set respostaConv = $replace(respostaConv,"</li>","")
			set respostaConv = $extract(respostaConv,1,$length(respostaConv)-5)
			set subNivel = nivel-2
			set linhas = 1
			for ul=1:1:$length(respostaConv,"<ul>"){
				set subNivel = subNivel + 1
				set respLi = $piece(respostaConv,"<ul>",ul)
				if respLi="" continue
				set espacos = ""
				for esp=1:1:subNivel set espacos = espacos_" &nbsp; "
				for i=1:1:$length(respLi,"<li>"){
					set resp = $piece(respLi,"<li>",i)
					if resp="" continue
					set removeEsp = $length(resp,"</ul>")-1
					if removeEsp>0 {
						set linhas = linhas - 1
						set espacos = "|"
					}
					set subNivel = subNivel - removeEsp
					set resp = $replace(resp,"</ul>","")
					set descricao = $zstrip(resp,"<>w")
					set vetorTmp(linhas) = $get(vetorTmp(linhas))_espacos_descricao
					set linhas = linhas + 1
				}
			}
			set linha=""
			for {
				set linha = $order(vetorTmp(linha)) quit:linha=""
				set valor = $piece(vetorTmp(linha),"|",2)
				set descricao = $piece(vetorTmp(linha),"|",1)_":"
				set obj = ""
				;set $piece(obj,"~",2)="oneline*"_descricao
				set $piece(obj,"~",2)=descricao
				set $piece(obj,"~",4)=valor		
				set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
			}
			continue
		}else{
			set resposta="",resposta2=""
			if $data(tipos(TipodeWorkflow)){
				set resposta = ..recValorSalvo(codPaciente,cid,ficha,1,Sequencia1,0)
				set resposta2 = $piece(resposta,"~",2)
				set resposta = $piece(resposta,"~",1)
				if resposta="" continue
			}
			set respostaConv = ..recRespostaTranslate(cid,Sequencia1,resposta,resposta2)
			set descricao = espacos
			if GrupodeExibicaonaTela'="" set descricao = descricao_GrupodeExibicaonaTela_" "
			set descricao = descricao_$replace(nome,"<br>"," ")_":"
		}
		;
		if TipodeWorkflow=10 set descricao = descricao_"oneline*b*"
		;
		if TipodeWorkflow=5,GrupodeExibicaonaTela '= "",$get(^mtemp.UltimoGrupo(job))'=GrupodeExibicaonaTela{
			;
			set objAnt = ""
			set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)
			if sequ1'="" set objAnt = $get(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,sequ1,1))
			;
			if TipodeWorkflow=5,objAnt'="",$piece(objAnt,"~",1)=5,$piece(objAnt,"~",5)=""{
				set obj = objAnt
				set $piece(obj,"~",1)=TipodeWorkflow
				set $piece(obj,"~",4)=$piece(obj,"~",3)
				set $piece(obj,"~",3)=""
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
			}			
			;
			set ^mtemp.UltimoGrupo(job) = GrupodeExibicaonaTela
			set obj = ""
			set espacos2=""
			for i=1:1:nivel-1 set espacos2 = espacos2_" &nbsp; "
			set $piece(obj,"~",1)=""
			set $piece(obj,"~",2)=espacos2_" "_GrupodeExibicaonaTela_"oneline*"
			set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
			set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
			set descricao = $replace(descricao,GrupodeExibicaonaTela,"")
		}
		if TipodeWorkflow=22{
			set valores = ..recValorSalvo(codPaciente,cid,ficha,1,Sequencia1,0)
			set valores = $piece(valores,"~",1)
			for i=1:1:$length(valores,";"){
				set resp = $piece(valores,";",i)
				set cod = $piece(resp,"^",1)
				set obs = $piece(resp,"^",2)
				if cod="" continue
				set descricaoE = cod
				if $data(^INART(0,cod,1)){
					set objExames = $get(^INART(0,cod,1))
					set descricaoE = $$$INARTSearchName(objExames)
				}
				set valor = descricaoE
				if obs'="" set valor = valor_" ("_obs_")"
				if valor="" continue
				set obj = ""
				set $piece(obj,"~",2)=espacos_"Exame adicional"
				set $piece(obj,"~",3)=valor	
				set descricao=" "	
				set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
				
			}
			continue
		}
		
		if (TipodeWorkflow=29)||(TipodeWorkflow=31){
			set descricao	= espacos_GrupodeExibicaonaTela
			set valores = ..recValorSalvo(codPaciente,cid,ficha,1,Sequencia1,0)
			set valores = $piece(valores,"~",1)
			set valAcum = ""
			for i=1:1:$length(valores,";"){
				set va = $piece(valores,";",i)
				if va="" continue
				set doenca = $piece(va,"^",1)
				set tempo = $piece(va,"^",2)
				set obser = $piece(va,"^",3)
				set tipo = $piece(va,"^",4)
				set tempoLegenda = $piece(va,"^",5)
				if tipo'=""{
					set tipo = $piece($get(^VARPARA(0,"FAMILIAR","PT",tipo,1)),"~",1)
				}
				set observacoes=""
				if tempo'="" { 
					set legenda=""
					if tempoLegenda="MESES"{
						set legenda = "mes"_$select(tempo>1:"es",1:"")
					}
					if tempoLegenda="ANOS"{
						set legenda = "ano"_$select(tempo>1:"s",1:"")
					}
					set observacoes = " (há "_tempo_" "_legenda_")"
				}
				if obser'=""{
					if observacoes="" set observacoes = " ("
					e  set observacoes = observacoes_", "
					set observacoes = observacoes_obser
				}
				if observacoes'="" set observacoes = observacoes_")"
				set doenca = $$SQLGetCid^VARSQL(doenca)
				if TipodeWorkflow=31{
					set valor = tipo_" - "_doenca_observacoes
				}else{
					set valor = doenca_observacoes
				}
				if valor=""||(valor=" - ") continue
				set obj = ""
				;set $piece(obj,"~",2)="oneline*"_descricao
				set $piece(obj,"~",2)=descricao
				set $piece(obj,"~",3)=valor	
				set descricao=" "	
				set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
			}
		}
		;
		if TipodeWorkflow=14{
			set valores = $piece(..recValorSalvo(codPaciente,cid,ficha,1,Sequencia1,0),"~",1)
			set texto = ""
			for piece = 1:1:$length(valores,";"){
				set val = $piece(valores,";",piece)
				if val="" continue
				if texto'="" set texto = texto_", "
				set texto = texto_val
			}
			set respostaConv = texto
			set obj = ""
			;set $piece(obj,"~",2)="oneline*"_descricao
			set $piece(obj,"~",2)=descricao
			set $piece(obj,"~",3)=respostaConv	
			set descricao=" "	
			set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
			set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
			continue			
		}
		if TipodeWorkflow=32{
			set descricao	= espacos_GrupodeExibicaonaTela
			set valores = $piece(..recValorSalvo(codPaciente,cid,ficha,1,Sequencia1,0),"~",1)
			for i=1:1:$length(valores,";"){
				set va = $piece(valores,";",i)
				if va="" continue
				set medicamento = $piece(va,"^",1)
				set observacoes = $piece(va,"^",2)
				if medicamento'="" set medicamento = $$GetDescMedicamentos^VARSQL($piece(va,"^",1),1)
				if medicamento'="",observacoes'="" set medicamento = medicamento_" ("_observacoes_")"
				if medicamento="",observacoes'=""  set medicamento = observacoes
				
				set obj = ""
				;set $piece(obj,"~",2)="oneline*"_descricao
				set $piece(obj,"~",2)=descricao
				set $piece(obj,"~",4)=medicamento	
				set descricao=" "	
				set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
			}
			CONTINUE
		}
		
		set objAnt = ""
		set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)
		if sequ1'="" set objAnt = $get(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,sequ1,1))
		;
		set naoSalva=0
		if TipodeWorkflow'=1,TipodeWorkflow'=8,TipodeWorkflow'=10,respostaConv="" set naoSalva=1
		if TipodeWorkflow=5,objAnt'="",$piece(objAnt,"~",1)=5,$piece(objAnt,"~",5)=""{
			set obj = objAnt
			set $piece(obj,"~",1)=TipodeWorkflow
			set $piece(obj,"~",4)=$piece(obj,"~",3)
			set $piece(obj,"~",3)=""
			set $piece(obj,"~",5)=$replace(descricao,"&nbsp;","")
			set $piece(obj,"~",6)=respostaConv
			if $replace(descricao,"&nbsp;","")'="" set:'naoSalva ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
		}elseif TipodeWorkflow'=5,objAnt'="",$piece(objAnt,"~",1)=5,$piece(objAnt,"~",5)=""{
			set obj = objAnt
			set $piece(obj,"~",1)=TipodeWorkflow
			set $piece(obj,"~",4)=$piece(obj,"~",3)
			set $piece(obj,"~",3)=""
			if $piece(obj,"~",3)'="" set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
			;
			set obj = ""
			set $piece(obj,"~",1)=TipodeWorkflow
			set $piece(obj,"~",2)=descricao
			set $piece(obj,"~",3)=respostaConv		
			set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
			set:'naoSalva ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
		}else{
			;
			set obj = ""
			set $piece(obj,"~",1)=TipodeWorkflow
			set $piece(obj,"~",2)=descricao
			set $piece(obj,"~",3)=respostaConv		
			set sequ1 = $order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)+1
			set:'naoSalva ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1,obj,1)
		}
		set pnivel = nivel + 1
		do ..recFilhosDadosImpressaoConsulta(job, codPaciente, cid, ficha,Sequencia1,resposta,cont,pnivel)
		if resposta="",$order(^mtemp.VARRCLIWorkFlowDetalhe(0,job,cont,""),-1)=sequ1{
			set ret = $$$Kill("mtemp.VARRCLIWorkFlowDetalhe",job_","_cont_","_sequ1)
		}
	}]]></Implementation>
</Method>

<Method name="recRespostaTranslate">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,sequencia,resposta,resposta2</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objWF 		= $get(^VARWorkFlowPEP(0,cid,sequencia,1))
	set nome		= $$$VARWorkFlowPEPNome(objWF)
	set tipo 		= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
	set opcoes 		= $$$VARWorkFlowPEPOpcoes(objWF)
	set unidade 	= $$$VARWorkFlowPEPExamesUnidadedeExibicao(objWF)
	set rotulo 		= $$$VARWorkFlowPEPRotulodosCamposTexto(objWF)
	set compValores = $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
	set permitirSelecionarMaisQue = $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objWF)
	set rotulo2 = ""
	if (tipo=1)||(tipo=8)||(tipo=7) quit ""
	if (tipo=13){
		set resposta = $select(resposta="":"",1:$zdate(resposta,4))
	}
	if (tipo=2)||(tipo=11){
		set resposta = $select(resposta=1:"Sim",resposta=0:"Não",1:"")
	}
	if (tipo=5)||(tipo=12){
		if unidade=""{
			set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",nome,1))
			set unidade = $$$VARWorkFlowAuxiliarUnidade(objExames)
		}
		if compValores'="",compValores'=1,compValores'=5,compValores'=13{
			set opcoes = $piece($get(^VARPARA(0,"WORKFLOWVALORES","PT",compValores,1)),"~",1)
			set opcoes = $replace(opcoes,"/","|")
			if compValores=10{
				if resposta = 0 set resposta=2
				else  if resposta=2 set resposta=3
			}else{
				set resposta = resposta+1
			}
			set resposta = $piece(opcoes,"|",resposta)
		}else{
			set resposta = $fnumber(resposta,".")
		}
	}
	if compValores=13{
		set rotulo2="%"
	}
	if tipo=9{
		set resp = ""
		if permitirSelecionarMaisQue=1{
			set valAcum = ""
			for i=1:1:$length(resposta,";"){
				set va = $piece(resposta,";",i)
				if va = "false" set va = 0
				if va = "true" set va = 1
				if 'va continue
				if valAcum '="" set valAcum = valAcum_", "
				set valAcum = valAcum_$piece(opcoes,"|",i)
			}
			set resposta = valAcum
		}else{
			set resposta = $piece(opcoes,"|",resposta)
		}
	}
	if tipo=26{
		set respostaPrep = "Tabagismo "_$select($piece(resposta,"|",1)=1:"Sim",$piece(resposta,"|",1)=0:"Não",1:"")
		if $piece(resposta,"|",1)=1 set respostaPrep = respostaPrep_" / Quantos maços ao dia?: "_$piece(resposta,"|",2)
		set respostaPrep = respostaPrep_"Etilistmo "_$select($piece(resposta,"|",3)=1:"Sim",$piece(resposta,"|",3)=0:"Não",1:"")
		if $piece(resposta,"|",3)=1 set respostaPrep = respostaPrep_" / Observações: "_$piece(resposta,"|",2)
		set resposta = respostaPrep
	}
	if tipo=30{
		set valorDesc = ""
		for i=1:1:$length(resposta,";"){
			set va = $piece(resposta,";",i)
			if va="" continue
			set va = $$GetDescMedicamentos^VARSQL(va,1)
			if valorDesc'="" set valorDesc = valorDesc_", "
			set valorDesc = valorDesc_va
		}
		set resposta = valorDesc
	}
	if (tipo=29)||(tipo=31){
		set valAcum = ""
		set respAcumulada = ""
		for i=1:1:$length(resposta,";"){
			set va = $piece(resposta,";",i)
			if va="" continue
			set doenca = $piece(va,"^",1)
			set tempo = $piece(va,"^",2)
			set obser = $piece(va,"^",3)
			set tipo2 = $piece(va,"^",4)
			set tempoLegenda = $piece(va,"^",5)
			if tipo2'=""{
				set tipo2 = $piece($get(^VARPARA(0,"FAMILIAR","PT",tipo2,1)),"~",1)
			}
			set observacoes=""
			if tempo'="" { 
				set legenda=""
				if tempoLegenda="MESES"{
					set legenda = "mes"_$select(tempo>1:"es",1:"")
				}
				if tempoLegenda="ANOS"{
					set legenda = "ano"_$select(tempo>1:"s",1:"")
				}
				set observacoes = " (há "_tempo_" "_legenda_")"
			}
			if obser'=""{
				if observacoes="" set observacoes = " ("
				e  set observacoes = observacoes_", "
				set observacoes = observacoes_obser
			}
			if observacoes'="" set observacoes = observacoes_")"
			set doenca = $$SQLGetCid^VARSQL(doenca)
			if respAcumulada'="" set respAcumulada = respAcumulada_"/"
			if tipo=31{
				set respAcumulada = respAcumulada_tipo2_" - "_doenca_observacoes
			}else{
				set respAcumulada = respAcumulada_doenca_observacoes
			}
		}
		set resposta = respAcumulada
	}
	if tipo=22{
		set retorno = ""
		for contx=1:1:$length(resposta,";"){
			set codExame = $piece($piece(resposta,";",contx),"^",1)
			set result   = $piece($piece(resposta,";",contx),"^",2)
			if codExame=""||(codExame="null") continue
			set desc = codExame
			if $data(^INART(0,codExame,1)){
				set objExames = $get(^INART(0,codExame,1))
				set desc = $$$INARTSearchName(objExames)
			}
			if retorno'="" set retorno = retorno_", "
			set retorno = retorno_desc
			if result'="" set retorno = retorno_" ("_result_")"
		}
		set resposta = retorno
	}	
	if unidade'="" set resposta = resposta_" "_unidade
	if resposta2'="" {
		if rotulo'="" set resposta = resposta_" - hl*"_rotulo_": "_resposta2_rotulo2
		e  set resposta = resposta_" - "_resposta2_rotulo2
	}
	quit resposta]]></Implementation>
</Method>

<Method name="preparaImpressaoFilho">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,Fsequencia,isPredecessor,flRetorno,sequencNivel,cont1</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set YM = 0
	set sequencia			 	= $piece(Fsequencia,"~",1)
	set pretitulo 				= $piece(Fsequencia,"~",2)
	set desconsideraNomeWork 	= $piece(Fsequencia,"~",3)
	set subCodPainel 			= $piece(Fsequencia,"~",4)
	set comparador 				= $piece(Fsequencia,"~",5)
	set tipoLinha 				= $piece(Fsequencia,"~",6)

	;
	set hist = 0
	;if $data(^VARPEPPremiumEstadiamento(YM,codPaciente,cid)) set hist = 1
	;
	if pretitulo["<br>" set pretitulo = pretitulo_"•  "
	;
	if sequencia="" quit ""
	set nivelFilho = 0
	if $data(sequencNivel)>9 set nivelFilho	= 1
	;
	if sequencia="EST"{
		for cest=3,1{
			set objEst = $get(^VARWorkFlowEstadiamento(YM,cid,cest,1))
			set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEst)
			kill ^mtemp.valoresEstadiamentoSalvos($job)
			kill ^mtemp.valoresSalvosPEP($job)
			set calculo = ..calcEstadiamento(codPaciente,cid,ficha,fichaSeq,cest,dataPEP,0)
			;
			if calculo.selEstagio="" continue
			set codEstagio = calculo.selEstagio
			set pontuadores = calculo.estadiamentoTexto
			if codEstagio="" continue
			set objEstagio = $get(^VARWorkFlowEstadiamentoEstagio(YM,cid,cest,codEstagio,1))
			set descEst = $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
			set grupoRisco = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
			if descEst["Impossível" continue
			;
			set pontuadores = $replace(pontuadores,"<ul class=ttEstadiamento>","")
			set pontuadores = $replace(pontuadores,"</ul>","")

			set descricao = descEstadiamento_" "_descEst_" - "_grupoRisco_$c(10)_pontuadores
			set obj1 = ""
			set $piece(obj1,"~",1)=sequencia_cest
			set $piece(obj1,"~",2)=descricao
			set cont1 = 1
			set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_SequenciaPai_","_cont1,obj1,1)
			set cont1 = cont1 + 1
			quit
		}
	}
	;
	set SQL = " SELECT SequenciadeExibicao, Sequencia, Nome NomeOriginal,PermitirSelecionarMaisQue,"
	set SQL = SQL_" $$GetDescWorkFlowPEP^VARSQL(CodigodoCID,Sequencia) Nome, TipodeWorkflow,"
	set SQL = SQL_" Opcoes, composicaoValoresExames, ExamesUnidadedeExibicao, RespostaPadrao "
	set SQL = SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	if 'isPredecessor {
		if sequencia=166 set SQL = SQL_" and Sequencia in (166,167,168)"
		e  set SQL = SQL_" and Sequencia = '"_sequencia_"'"
	}else{
		set SQL = SQL_" and %upper(predecessor) = '"_sequencia_"'"
		if subCodPainel'="" set SQL = SQL_" and %upper(OpcaodoPredecessor) = '"_subCodPainel_"'"
	}
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set obj1= ""
	set rs1 = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set retorno = ""
	set Nome1 = ""
	while(rs1.%Next()){
		set Sequencia1		= rs1.%Get("Sequencia")
		set Nome1 			= rs1.%Get("Nome")
		set NomeOriginal	= rs1.%Get("NomeOriginal")
		set Tipo1 			= rs1.%Get("TipodeWorkflow")
		set opcoes 			= rs1.%Get("Opcoes")
		set composicaoValoresExames = rs1.%Get("composicaoValoresExames")
		set unid			= rs1.%Get("ExamesUnidadedeExibicao")
		set RespostaPadrao 	= rs1.%Get("RespostaPadrao")
		set permitirSelecionarMaisQue = rs1.%Get("PermitirSelecionarMaisQue")
		;
		set Nome1Original = Nome1
		if +desconsideraNomeWork'=0 set Nome1=""
		;
		set Nome1 = $replace($replace(Nome1,"?",""),"<br>","")
		set retorno1 = ..recValorSalvo(codPaciente,cid,ficha,fichaSeq,Sequencia1,0)
		set valor = $piece(retorno1,"~",1)
		set valor2 = $piece(retorno1,"~",2)
		if valor'="",Tipo1=13 set valor = $zdate(valor,4)
		set valorPEP = valor
		if pretitulo'="" set Nome1=pretitulo_Nome1
		if ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,Sequencia1,1,hist)<1 set valorPEP = ""
		if $length(comparador)=1 {
			set retorno = valorPEP quit
		}
		if opcoes'=""{
			if permitirSelecionarMaisQue=1{
				set valAcum = ""
				for i=1:1:$length(valor,";"){
					set va = $piece(valor,";",i)
					if va = "false" set va = 0
					if va = "true" set va = 1
					if 'va continue
					if valAcum '="" set valAcum = valAcum_", "
					set valAcum = valAcum_$piece(opcoes,"|",i)
				}
				set valor = valAcum
			}else{
				set valor = $piece(opcoes,"|",valor)
			}
		}
		;if valor="",RespostaPadrao'="" set valor = RespostaPadrao
		if valor="" continue
		if ..verificaNivelPais(codPaciente,cid,ficha,fichaSeq,Sequencia1,1,hist)<1 set valor = "" continue
		;w !,sequencia,?10,Sequencia1,?30,valor		
		if Tipo1=8{
			if valorPEP'=1 continue
		}elseif Tipo1=7{
			if Nome1["•  " set Nome1 = $piece(Nome1,"•  ",2)
			set codImagem = $piece(Nome1,";",1)
			set codArea = $piece(Nome1,";",2)
			set descArea = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			if ($piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",5)'="") {
				set descArea 	= $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",1)
			}
			set Nome1 = descArea
			
		}elseif Tipo1=11{
			;if valor'=1 continue
			if +desconsideraNomeWork<2{
				set Nome1 = $replace(Nome1,"Paciente tem","Presença de")
				set Nome1 = $replace(Nome1,"Paciente Tem","Presença de")
				set Nome1 = $replace(Nome1,"≥",">=")
				set Nome1 = $replace(Nome1,":","")
				if Nome1'["Presença" set Nome1= "Presença de "_Nome1
			}
		}elseif composicaoValoresExames=3{
			set Nome1 = $replace(Nome1,":","")
			if desconsideraNomeWork'=3 if valorPEP=1 set Nome1 = Nome1_" - Positivo"
			if valorPEP=0 continue
		}elseif composicaoValoresExames>5,composicaoValoresExames<10{
			if Nome1["<xx>"{
				set Nome1 = $replace(Nome1,"<xx>",Nome1Original)
				set Nome1 = $replace(Nome1,"<yy>",valor2)
				if Nome1["\\"{
					if valor<2 set vari = $piece($piece(Nome1,"\\",2),"\",1)
					else  set vari = $piece($piece(Nome1,"\\",2),"\",2)
					set Nome1 = $piece(Nome1,"\\",1)_vari
				}
			}else{
				set Nome1 = $replace(Nome1,":","")
				if desconsideraNomeWork'=3 if valorPEP=0 set Nome1 = "Presença de Mutação "_valor2_" em "_Nome1
				if desconsideraNomeWork'=3 if valorPEP=1 set Nome1 = "Ausência de Mutação "_valor2_" em "_Nome1
			}
			if valorPEP=2 continue
		}elseif (Tipo1=5)||(Tipo1=12){
			if unid=""{
				for i=1:1:$length(NomeOriginal,";"){
					set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(NomeOriginal,";",i),1))
					set unid = $$$VARWorkFlowAuxiliarUnidade(objExames)
					if unid'="" quit
				}
			}
			set valor = $fnumber(valor,".")
			if desconsideraNomeWork'=3 set Nome1 = Nome1_" - "_valor_" "_unid
		}else{
			if Nome1["<xx>"{
				set Nome1 = $replace(Nome1,"<xx>",valor)
				set Nome1 = $replace(Nome1,"<yy>",valor2)
				if Nome1["\\"{
					if valor<2 set vari = $piece($piece(Nome1,"\\",2),"\",1)
					else  set vari = $piece($piece(Nome1,"\\",2),"\",2)
					set Nome1 = $piece(Nome1,"\\",1)_vari
				}
			}else{
				if desconsideraNomeWork<3 set Nome1 = Nome1_" - "
				if desconsideraNomeWork<3 {
					set Nome1 = Nome1_valor_" "_unid
				}elseif flRetorno{
					set Nome1 = Nome1_valor_" "_unid
				}
			}
		}
		set somaFilhos = 0
		if comparador'=""{
			set sinal = $extract(comparador,1)
			set numero = $extract(comparador,2,$length(comparador))
			if sinal = "*"{
				set somaFilhos = 1
				set sinal = $extract(comparador,2)
				set numero = $extract(comparador,3,$length(comparador))
			}
			if somaFilhos{
				set valorPEP = 0
				set filhos = ""
				for {
					set filhos = $order(sequencNivel(filhos)) quit:filhos=""
					kill sequencNivelFilho
					merge sequencNivelFilho = sequencNivel(filhos)
					set NSequencia = sequencNivelFilho
					set comparFilho = $piece(NSequencia,"~",5)
					set result = ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,NSequencia,0,1,.sequencNivelFilho,.cont1)
					;w !,result
					if comparFilho="+"{
						set valorPEP = valorPEP + result
					}
					if comparFilho=">"{
						if result>valorPEP set valorPEP=result
					}
				}
			}
			if sinal=">",valorPEP'>numero continue
			if sinal="<",valorPEP'<numero continue
			if sinal="=",valorPEP'=numero continue
			if sinal="'",valorPEP=numero continue
		}
		set contReservado = ""
		if nivelFilho'=0,'somaFilhos{
			set parenteses = 1
			if $zstrip(Nome1,"<>w")="" set parenteses = 0
			if desconsideraNomeWork=4{
				set contReservado = cont1
				set cont1 = cont1 + 1
			}
			set filhos = ""
			for {
				set filhos = $order(sequencNivel(filhos)) quit:filhos=""
				kill sequencNivelFilho
				merge sequencNivelFilho = sequencNivel(filhos)
				set NSequencia = sequencNivelFilho
				if desconsideraNomeWork=4{
					do ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,NSequencia,0,3,.sequencNivelFilho,.cont1)
				}else{
					set result = ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,NSequencia,0,1,.sequencNivelFilho,.cont1)
					if result'="" {
						if 'parenteses {
							set Nome1 = Nome1_$select(Nome1'="":" ",1:"")_result
						}else{
							if Nome1["(" set Nome1 = Nome1_" "_result
							else  set Nome1 = Nome1_" ("_result
						}
					}
				}
			}
			if Nome1["(" set Nome1 = Nome1_")"
		}
		if tipoLinha=1 set Nome1 = "•  "_Nome1
		if tipoLinha=2 set Nome1 = "b*"_Nome1
		if flRetorno=1 set retorno = Nome1 quit
		;w:job=1 !,Tipo1,?4,sequencia,?10,$e(Nome1,1,40),?60,contReservado,?70,cont1

		if Nome1["<br>"{
			set cont1 = cont1+1
		}
		if $length(Nome1)>55{
			set cont1 = cont1+1
		}
		if desconsideraNomeWork=4,pretitulo="" set Nome1=""
		if Nome1'=""{
			set obj1 = ""
			set $piece(obj1,"~",1)=Sequencia1
			set $piece(obj1,"~",2)=Nome1
			if contReservado'=""{
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_SequenciaPai_","_contReservado,obj1,1)
			}else{	
				set ret = $$$Save("mtemp.VARRCLIWorkFlowDetalhe",job_","_SequenciaPai_","_cont1,obj1,1)
				set cont1 = cont1 + 1
			}
		}
		;
		if nivelFilho=0,'somaFilhos{
			if pretitulo["<br>"'="" set $piece(Sequencia1,"~",2) = "•  "
			if Tipo1=11 set $piece(Sequencia1,"~",4) = 1
			do ..preparaImpressaoFilho(job,codPaciente,dataPEP,cid,ficha,fichaSeq,SequenciaPai,Sequencia1,1,0,.sequencNivel,.cont1)
		}
	}		
	quit retorno]]></Implementation>
</Method>

<Method name="listaINPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave  = $get(%request.Data("chave",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	if take<20 set take = 20
	;
	set contador = 0
	set select = "SearchWord,Text"
	set classe = "VARMedicamento"
	set where = "company = 0 and Language1='PT' and ParameterName='"_chave_"'"
	if codigo '= "" {
		set where = where_" and SearchWord = '"_codigo_"' "
	}else{
		if searchValue'="" set where = where_" and (%upper($$SQLGetTextoSemAcento^VARSQL(Text)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	}
	;
	if where'="" set where = "where "_where
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_(top*2)_" * "
	set meuSelect=meuSelect_" from (select SearchWord,Text from INPARA "_where_") Order By Text"
	set meuSelect=meuSelect_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect_")) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("SearchWord")
		set texto = rsLinha.%Get("Text")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = texto
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="listaCadeia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid			= $get(%request.Data("codCID",1))
	set sequencia	= $get(%request.Data("sequencia",1))
	set objWF		= $get(^VARWorkFlowPEP(0,cid,sequencia,1))
	set predecessor	= $$$VARWorkFlowPEPPredecessor(objWF)
	set SQL			= "SELECT Sequencia,Nome "
	set SQL 		= SQL_" FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_predecessor_"'"
	set SQL = SQL_" Order By SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	kill vetor
	while(rs.%Next()){
		set codigo 		= rs.%Get("Sequencia")
		set descricao 	= rs.%Get("Nome")
		if descricao[";"{
			set codImagem 	= $piece(descricao,";",1)
			set codArea 	= $piece(descricao,";",2)
			set descricao 	= $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5)'="") {
				set descricao = $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			}
		}
		set vetor(descricao,codigo)=""
	}
	set retorno = []
	set anterior = ""
	set descricao=""
	for {
		set descricao = $order(vetor(descricao)) quit:descricao=""
		set codigo=""
		for {
			set codigo = $order(vetor(descricao,codigo)) quit:codigo=""
			set linha={}
			set linha.Codigo = codigo
			set linha.Descricao = descricao
			set proximo = $order(vetor(descricao,codigo))
			if proximo=""{
				set pl = $order(vetor(descricao))
				if pl'="" set proximo = $order(vetor(pl,""))
			}
			set linha.anterior = anterior
			set linha.proximo = proximo
			set anterior = codigo
			do retorno.%Push(linha)
		}
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="preparaDadosDiagnostico">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;sequencias</FormalSpec>
<Implementation><![CDATA[	kill sequencias
	set sequencias(2)="Performance Status~1~#C21B26~white" // #39B843
	set sequencias(2,1)="186~ECOG - 0~3~~=1"
	set sequencias(2,2)="186~ECOG - 1~3~~=2"
	set sequencias(2,3)="186~ECOG - 2~3~~=3"
	set sequencias(2,4)="186~ECOG - 3~3~~=4"
	set sequencias(2,5)="186~ECOG - 4~3~~=5"
	set sequencias(2,6)="186~ECOG - 5~3~~=6"
	set sequencias(3)="Co-morbidades~1~#AB6B3E~white"
	set sequencias(3,1)="1277~~3"
	set sequencias(3,1,1)="1278~ ~3"
	set sequencias(4)="Atividades de Doença~1~#808080~white" // #9F47A1
	set sequencias(4,1)="13~Hemoglobina < 10 mg/dl~3~~<10"
	set sequencias(4,1,1)="101~Presença de anemia hemolítica auto-imune~1~~=1"
	set sequencias(4,2)="32~Plaquetas < 100.000  mg/dl~3~~<100000"
	set sequencias(4,2,1)="102~Presença de trombocitopenia auto-imune~1~~=1"
	set sequencias(4,3)="220~Esplenomegalia maciça~3~~*>6"
	set sequencias(4,3,1)="222~~1~~+"
	set sequencias(4,4)="69~Linfonodomegalia maciça~3~~*>10"
	set sequencias(4,4,1)="287~~1~~>"
	set sequencias(4,4,2)="1053~~1~~>"
	set sequencias(4,4,3)="1054~~1~~>"
	set sequencias(4,4,4)="1059~~1~~>"
	set sequencias(4,4,5)="1060~~1~~>"
	set sequencias(4,4,6)="1061~~1~~>"
	set sequencias(4,4,7)="1062~~1~~>"
	set sequencias(4,4,8)="204~~1~~>"
	set sequencias(4,4,9)="210~~1~~>"
	set sequencias(4,4,10)="211~~1~~>"
	set sequencias(4,4,11)="212~~1~~>"
	set sequencias(4,4,12)="87~~1~~>"
	set sequencias(4,4,13)="1279~~1~~>"
	set sequencias(4,4,14)="1282~~1~~>"
	set sequencias(4,4,15)="1285~~1~~>"
	set sequencias(4,4,16)="257~~1~~>"
	set sequencias(4,4,17)="878~~1~~>"
	set sequencias(4,4,18)="262~~1~~>"
	set sequencias(4,4,19)="1373~~1~~>"
	set sequencias(4,4,20)="1406~~1~~>"
	set sequencias(4,4,21)="267~~1~~>"
	set sequencias(4,4,22)="884~~1~~>"
	set sequencias(4,4,23)="237~~1~~>"
	set sequencias(4,4,24)="238~~1~~>"
	set sequencias(4,4,25)="272~~1~~>"
	set sequencias(4,4,26)="262~~1~~>"
	set sequencias(4,4,27)="890~~1~~>"
	set sequencias(4,4,28)="227~~1~~>"
	set sequencias(4,4,29)="228~~1~~>"
	set sequencias(4,4,30)="277~~1~~>"
	set sequencias(4,4,31)="896~~1~~>"
	set sequencias(4,4,32)="1458~~1~~>"
	set sequencias(4,5)="1201~Linfonodomegalia sintomática~3~~=1"
	set sequencias(4,6)="1202~Linfocitose progressiva, com tempo de duplicação menor que 6 meses~1~~~"
	set sequencias(4,7)="1203~Complicações auto-imunes não responsiva a corticóides ou outra terapia~1~~~"
	set sequencias(4,8)="1204~Envolvimento extra-nodal sintomático~1~~~"
	set sequencias(4,9)="178~~~~=1"
	set sequencias(4,10)="179~~~~=1"
	set sequencias(4,11)="180~Emagrecimento~3~~=1"
	set sequencias(4,11,1)="99~<xx>kg~3"
	set sequencias(4,11,2)="100~em <xx> \\mês\meses\\~3"
	set sequencias(4,12)="181~~~~=1"
	;	
	set sequencias(5)="Sangue Periférico e Exames Laboratoriais Gerais~2"
	set sequencias(5,1)="29~Contagem de Linfócitos~2"
	;set sequencias(5,1,1)="1049~data do exame~1"
	set sequencias(5,2)="155"
	set sequencias(5,3)="34~Presença de <xx>% de linfócitos com fenótipo CD19+/CD5+/CD23+ no sangue periférico~2"
	;
	set sequencias(6)="Exame Físico~2"
	set sequencias(6,1)="287~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,2)="204~Presença de linfonodomegalia pré auricular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,3)="211~Presença de linfonodomegalia pré auricular direita (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,4)="210~Presença de linfonodomegalia retro auricular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,5)="212~Presença de linfonodomegalia retro auricular direita (maior diâmetro - <xx>cm)~3~"
	;	
	set sequencias(6,6)="262~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,6.1)="1373~Presença de linfonodomegalia submandibular direita (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,6.2)="1406~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,7)="267~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,8)="884~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~"
	;
	
	set sequencias(6,9)="1053~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,10)="1054~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,11)="1059~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,12)="1060~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,13)="1061~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~"
	set sequencias(6,14)="1062~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~"
	;
	set sequencias(6,15)="87~Presença de linfonodomegalia cervical anterior esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,16)="1279~Presença de linfonodomegalia cervical anterior direita (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,17)="1282~Presença de linfonodomegalia cervical posterior esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,18)="1285~Presença de linfonodomegalia cervical posterior direita (maior diâmetro - <xx>cm)~3~"
	;	
	set sequencias(6,19)="257~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,20)="878~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~"
	;	
	set sequencias(6,21)="237~Presença de linfonodomegalia axilar esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,22)="238~Presença de linfonodomegalia axilar direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,23)="272~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,24)="890~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,25)="227~Presença de linfonodomegalia inguinal esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,26)="228~Presença de linfonodomegalia inguinal direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,27)="277~Presença de linfonodomegalia poplítea esquerda (maior diâmetro - <xx>cm)~3~"
	set sequencias(6,28)="896~Presença de linfonodomegalia poplítea direita (maior diâmetro - <xx>cm)~3~"
	;
	set sequencias(6,29)="1350~Ausência de hepatomegalia~3~~=0"
	set sequencias(6,30)="221~Presença de hepatomegalia (distância de <xx>cm do rebordo costal direita)~3~"
	set sequencias(6,30.1)="1351~Ausência de esplenomegalia~3~~=0"
	set sequencias(6,31)="222~Presença de esplenomegalia (distância de <xx>cm do rebordo costal esquerda)~3~"
	;
	set sequencias(7)="Medula óssea~2"
	set sequencias(7,3)="188~~3~~=1"
	set sequencias(7,3,1)="872~Presença de <xx>% de linfócitos com fenótipo CD19+/CD5+/CD23+ na medula óssea~2"
	
	;
	set sequencias(8)="Sintomas B~2"
	set sequencias(8,2)="178~~~~=1"
	set sequencias(8,3)="179~~~~=1"
	set sequencias(8,4)="180~Emagrecimento~3~~=1"
	set sequencias(8,4,1)="99~<xx>kg~2"
	set sequencias(8,4,2)="100~em <xx> \\mês\meses\\~2"
	set sequencias(8,5)="181~~~~=1"
	;
	set sequencias(9)="Análise Citogenética~2"
	set sequencias(9,1)="394~Análise de cariótipo realizada no sangue periférico~3~~=1"
	set sequencias(9,2)="394~Análise de cariótipo realizada na medula óssea~3~~=2"
	set sequencias(9,3)="1939~Ausência de metáfases em cariótipo~3~~=1"
	set sequencias(9,3.01)="1939~Presença de metáfases em cariótipo~3~~=2"
	set sequencias(9,3.02)="1940~Ausência de anormalidades detectadas em cariótipo~3~~=1"
	set sequencias(9,3.03)="1940~Presença de anormalidades detectadas em cariótipo~3~~=2"
	set sequencias(9,3.04)="1941~Alteração em Del 17p em cariótipo~3~~=1"
	set sequencias(9,3.05)="1942~Alteração em Del 11q em cariótipo~3~~=1"
	set sequencias(9,3.06)="1943~Alteração em Del 13q em cariótipo~3~~=1"
	set sequencias(9,3.07)="1944~Alteração em Trissomia do cromossomo em cariótipo~3~~=1"
	set sequencias(9,3.08)="1945~Alteração em del(6)(q21q21) em cariótipo~3~~=1"
	set sequencias(9,3.09)="1946~Alteração em t(11;14)(q13;q32) em cariótipo~3~~=1"
	set sequencias(9,3.10)="1947~Alteração em t(14;18)(q32;q21) em cariótipo~3~~=1"
	set sequencias(9,3.11)="1948~Alteração em t(18;22)(q21;q11) em cariótipo~3~~=1"
	set sequencias(9,3.12)="1949~Alteração em t(2;18)(p11;q21) em cariótipo~3~~=1"
	set sequencias(9,3.13)="1950~Alteração em t(8;14)(q24;q32) em cariótipo~3~~=1"
	set sequencias(9,3.14)="1951~Alteração em t(14;22)(q32;q11) em cariótipo~3~~=1"
	set sequencias(9,3.15)="1952~Alteração em t(4;14)(p16;q32) em cariótipo~3~~=1"
	set sequencias(9,3.16)="1953~Presença em Cariótipo complexo~3~~=1"
	set sequencias(9,4)="121~Alterações detectadas em FISH: Presença de Outras Alterações <xx>~3"
	set sequencias(9,5)="1152~Alterações detectadas em cariótipo: Quantas anormalidades cromossômicas <xx>~1"
	set sequencias(9,6)="393~Análise de FISH realizada no sangue periférico~3~~=1"
	set sequencias(9,7)="393~Análise de FISH realizada na medula óssea~3~~=2"
	;
	set sequencias(9,8)="1924~Ausência de metáfases em FISH~3~~=1"
	set sequencias(9,8.01)="1924~Presença de metáfases em FISH~3~~=2"
	set sequencias(9,8.02)="1925~Ausência de anormalidades detectadas em FISH~3~~=1"
	set sequencias(9,8.03)="1926~Presença de anormalidades detectadas em FISH~3~~=2"
	set sequencias(9,8.04)="1927~Alteração em Del 17p em FISH~3~~=1"
	set sequencias(9,8.05)="1928~Alteração em Del 11q em FISH~3~~=1"
	set sequencias(9,8.06)="1929~Alteração em Del 13q em FISH~3~~=1"
	set sequencias(9,8.07)="1930~Alteração em Trissomia do cromossomo em FISH~3~~=1"
	set sequencias(9,8.08)="1931~Alteração em del(6)(q21q21) em FISH~3~~=1"
	set sequencias(9,8.09)="1932~Alteração em t(11;14)(q13;q32) em FISH~3~~=1"
	set sequencias(9,8.10)="1933~Alteração em t(14;18)(q32;q21) em FISH~3~~=1"
	set sequencias(9,8.11)="1934~Alteração em t(18;22)(q21;q11) em FISH~3~~=1"
	set sequencias(9,8.12)="1935~Alteração em t(2;18)(p11;q21) em FISH~3~~=1"
	set sequencias(9,8.13)="1936~Alteração em t(8;14)(q24;q32) em FISH~3~~=1"
	set sequencias(9,8.14)="1937~Alteração em t(14;22)(q32;q11) em FISH~3~~=1"
	set sequencias(9,8.15)="1938~Alteração em t(4;14)(p16;q32) em FISH~3~~=1"
	set sequencias(9,8.16)="1939~Presença em Cariótipo complexo em FISH~3~~=1"
	set sequencias(9,9)="121~Alterações detectadas em FISH: Presença de Outras Alterações <xx>~3"
	;
	;
	;
	;
	set sequencias(10)="Análise Molecular~2"
	set sequencias(10,0.1)="198~Análise realizada no sangue periférico~3~~=1"
	set sequencias(10,0.2)="198~Análise realizada na medula óssea~3~~=2"
	set sequencias(10,1)="141~<xx> mutado~3~~=0"
	set sequencias(10,2)="141~<xx> não mutado~3~~=1"
	set sequencias(10,3)="142~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,4)="142~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,5)="143~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,6)="143~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,7)="144~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,8)="144~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,9)="145~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,10)="145~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,11)="146~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,12)="146~Ausência de mutação <yy> em <xx>~3~~=1"
	set sequencias(10,13)="147~Presença de mutação <yy> em <xx>~3~~=0"
	set sequencias(10,14)="147~Ausência de mutação <yy> em <xx>~3~~=1"
	;
	set sequencias(11)="Anemia Hemolítica auto-imune ou Trombocitopenia auto-imune~2"
	set sequencias(11,1)="101~O paciente tem diagnóstico de anemia hemolítica auto-imune~4~~=1"
	set sequencias(11,1,0.1)="1402~~~~~1"
	set sequencias(11,1,1)="103~~~~~1"
	set sequencias(11,1,2)="104~~~~~1"
	set sequencias(11,1,3)="105~~~~~1"
	set sequencias(11,1,4)="106~~~~~1"
	set sequencias(11,1,5)="107~~~~~1"
	set sequencias(11,1,6)="108~~~~~1"
	set sequencias(11,2)="102~O paciente tem diagnóstico de trombocitopenia auto-imune~4~~=1"
	set sequencias(11,2,0.1)="1403~~~~~1"
	set sequencias(11,2,1)=""
	set sequencias(11,3)="455~O paciente tem diagnóstico de outra causa para anemia ou trombocitopenia~3~~=1"
	set sequencias(11,3,1)=""

	set sequencias(12)="Estadiamento~2"
	set sequencias(12,1)="EST~~1"
	;

	set sequencias(13)="Doenças infecciosas~2"
	set sequencias(13,1)="169~HIV<br>   "
	set sequencias(13,2)="165~Hepatite C<br>   "
	set sequencias(13,3)="166~Hepatite B<br>   "
	set sequencias(13,4)="1161~CMV<br>   "

	set sequencias(14)="Exame de Imagem~2"
	set sequencias(14,1)="1362~Tomografia Computadorizada sem alterações~3~~=1"
	set sequencias(14,2)="1362~Tomografia Computadorizada~4~~=0"
	set sequencias(14,2,1)="309~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,2)="314~Presença de linfonodomegalia pré auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,2.1)="1525~Presença de linfonodomegalia retro auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,2.2)="1529~Presença de linfonodomegalia pré auricular direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,2.3)="1533~Presença de linfonodomegalia retro auricular direito (maior diâmetro - <xx>cm)~3~~~1"
	;
	set sequencias(14,2,3)="319~Presença de linfonodomegalia submandibular esquerda(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,3.1)="1378~Presença de linfonodomegalia submandibular direita(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,3.2)="1414~Presença de linfonodomegalia submentoniano(maior diâmetro - <xx>cm)~3~~~1"
	;
	set sequencias(14,2,4)="324~Presença de linfonodomegalia peitoral esquerda(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,4.1)="1584~Presença de linfonodomegalia peitoral direita(maior diâmetro - <xx>cm)~3~~~1"
	;
	set sequencias(14,2,5)="329~Presença de linfonodomegalia axilar esquerda(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,5.1)="1438~Presença de linfonodomegalia axilar direita(maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,6)="334~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,7)="902~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,8)="344~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,2,9)="339~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,2,9.1)="1461~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"
	
	set sequencias(14,2,10)="349~Presença de linfonodomegalia inguinal esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,10.1)="1564~Presença de linfonodomegalia inguinal direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,11)="354~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,12)="908~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,13)="1554~Presença de linfonodomegalia ilíaco esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,13.1)="1559~Presença de linfonodomegalia ilíaco direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,14)="364~Presença de linfonodomegalia para-aórtico (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,14.1)="1578~Presença de linfonodomegalia para-aórtico (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,15)="369~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,16)="914~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,17)="374~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,18)="920~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,19)="379~Presença de linfonodomegalia cervical anterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,19.1)="1541~Presença de linfonodomegalia cervical anterior direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,19.2)="1545~Presença de linfonodomegalia cervical posterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,19.3)="1549~Presença de linfonodomegalia cervical posterior direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set s]]><![CDATA[equencias(14,2,20)="1069~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,21)="1067~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,22)="1074~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,23)="1072~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,24)="1079~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,25)="1077~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,2,26)="389~Presença de linfonodomegalia mesentérico esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,26.1)="1572~Presença de linfonodomegalia mesentérico direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,2,27)="1171~Presença de linfonodomegalia mediastino anterior (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,2,28)="1175~Presença de linfonodomegalia mediastino posterior (maior diâmetro - <xx>cm)~3~~~1"
	

	set sequencias(14,3)="1363~Ressonância Nuclear Magnética sem alterações~3~~=1"
	set sequencias(14,4)="1363~Ressonância Nuclear Magnética~4~~=0"
	set sequencias(14,4,1)="465~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,2)="1590~Presença de linfonodomegalia pré auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,2.1)="1595~Presença de linfonodomegalia retro auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,2.2)="1600~Presença de linfonodomegalia pré auricular direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,2.3)="1605~Presença de linfonodomegalia retor auricular direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,3)="477~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,3.1)="1386~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,3.2)="1318~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,4)="1677~Presença de linfonodomegalia peitoral esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,4.1)="1682~Presença de linfonodomegalia peitoral direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,5)="489~Presença de linfonodomegalia axilar direita(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,5.1)="1442~Presença de linfonodomegalia axilar esquerda(maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,6)="495~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,7)="926~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,8)="507~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,4,9)="501~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,4,9.1)="1462~~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"
	
	set sequencias(14,4,10)="1643~Presença de linfonodomegalia inguinal esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,10.1)="1648~Presença de linfonodomegalia inguinal direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,11)="519~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,12)="932~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,13)="1632~Presença de linfonodomegalia ilíaco esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,13.1)="1637~Presença de linfonodomegalia ilíaco direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,14)="1666~Presença de linfonodomegalia para-aórtico esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,14.1)="1671~Presença de linfonodomegalia para-aórtico direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,15)="537~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,16)="938~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,17)="543~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,18)="944~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,19)="1611~Presença de linfonodomegalia cervical anterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,19.1)="1616~Presença de linfonodomegalia cervical anterior direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,19.2)="1621~Presença de linfonodomegalia cervical posterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,19.3)="1626~Presença de linfonodomegalia cervical posterior direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,4,20)="1086~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,21)="1084~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,22)="1091~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,23)="1089~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,24)="1096~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,4,25)="1094~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"

	set sequencias(14,4,26)="1655~Presença de linfonodomegalia mesentérico esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,26.1)="1660~Presença de linfonodomegalia mesentérico direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,4,27)="1182~Presença de linfonodomegalia mediastino anterior (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,4,28)="1186~Presença de linfonodomegalia mediastino posterior (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,5)="1364~Raio-X de tórax sem alterações~3~~=1"
	set sequencias(14,6)="1026~Raio-X de tórax com alterações - Resultado: <xx>~3~~"

	set sequencias(14,7)="1365~PET CT sem alterações~3~~=1"
	set sequencias(14,8)="1365~PET CT~4~~=0"
	set sequencias(14,8,1)="669~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,2)="1690~Presença de linfonodomegalia pré auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2.1)="1695~Presença de linfonodomegalia retro auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2.2)="1670~Presença de linfonodomegalia pré auricular direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2.3)="1675~Presença de linfonodomegalia retro auricular direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,3)="681~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.1)="1388~Presença de linfonodomegalia submandibular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.2)="1422~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,4)="1863~Presença de linfonodomegalia peitoral esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,4.1)="1868~Presença de linfonodomegalia peitoral direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,5)="693~Presença de linfonodomegalia axilar esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,5.1)="1446~Presença de linfonodomegalia axilar direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,6)="699~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,7)="674~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,8)="711~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,8,9)="705~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,8,9.1)="1463~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"
	
	set sequencias(14,8,10)="1796~Presença de linfonodomegalia inguinal esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,10.1)="1801~Presença de linfonodomegalia inguinal direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,11)="723~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,12)="980~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,13)="1774~Presença de linfonodomegalia ilíaco esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,13.1)="1779~Presença de linfonodomegalia ilíaco direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,14)="1841~Presença de linfonodomegalia para-aórtico esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,14.1)="1846~Presença de linfonodomegalia para-aórtico direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,15)="741~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,16)="986~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,17)="747~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,18)="992~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,19)="1732~Presença de linfonodomegalia cervical anterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19.1)="1737~Presença de linfonodomegalia cervical anterior direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19.2)="1742~Presença de linfonodomegalia cervical posterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19.3)="1747~Presença de linfonodomegalia cervical posterior direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,20)="1120~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,21)="1118~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,22)="1125~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,23)="1123~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,24)="1130~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,25)="1128~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"

	set sequencias(14,8,26)="1819~Presença de linfonodomegalia mesentérico esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,26.1)="1824~Presença de linfonodomegalia mesentérico direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,27)="1193~Presença de linfonodomegalia mediastino anterior (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,28)="1197~Presença de linfonodomegalia mediastino posterior (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,7)="1366~Ultrassonografia sem alterações~3~~=1"
	set sequencias(14,8)="1366~Ultrassonografia~4~~=0"
	set sequencias(14,8,1)="771~Presença de linfonodomegalia occiptal (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,2.1)="1711~Presença de linfonodomegalia pré auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2.2)="1716~Presença de linfonodomegalia retro auricular esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2.3)="1721~Presença de linfonodomegalia pré auricular direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,2.4)="1726~Presença de linfonodomegalia retro auricular direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,3)="783~Presença de linfonodomegalia submandibular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.1)="1394~Presença de linfonodomegalia submandibular direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,3.2)="1426~Presença de linfonodomegalia submentoniano (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,4)="1874~Presença de linfonodomegalia peitoral esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,4.1)="1879~Presença de linfonodomegalia peitoral direito (maior diâmetro - <xx>cm)~3~~~1"
	
	set sequencias(14,8,5)="795~Presença de linfonodomegalia axilar esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,5.1)="1451~Presença de linfonodomegalia axilar direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,6)="801~Presença de linfonodomegalia epitroclear esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,7)="998~Presença de linfonodomegalia epitroclear direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,8)="813~Presença de hepatomegalia (volume do fígado <xx>)~3~~~1"
	set sequencias(14,8,9)="807~Presença de esplenomegalia (tamanho do baço <xx>)~3~~~1"
	set sequencias(14,8,9.1)="1464~Presença de esplenomegalia (volume do baço <xx>)~3~~~1"

	set sequencias(14,8,10)="1807~Presença de linfonodomegalia inguinal esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,10.1)="1812~Presença de linfonodomegalia inguinal direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,11)="825~Presença de linfonodomegalia poplíteo esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,12)="1004~Presença de linfonodomegalia poplíteo direita (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,13)="1785~Presença de linfonodomegalia ilíaco esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,13.1)="1790~Presença de linfonodomegalia ilíaco direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,14)="1852~Presença de linfonodomegalia para-aórtico esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,14.1)="1857~Presença de linfonodomegalia para-aórtico direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,15)="843~Presença de linfonodomegalia braquial esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,16)="1010~Presença de linfonodomegalia braquial direita (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,17)="849~Presença de linfonodomegalia supraclavicular esquerda (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,18)="1016~Presença de linfonodomegalia supraclavicular direita (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,19)="1753~Presença de linfonodomegalia cervical anterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19.1)="1758~Presença de linfonodomegalia cervical anterior direito (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19.2)="1763~Presença de linfonodomegalia cervical posterior esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,19.3)="1768~Presença de linfonodomegalia cervical posterior direito (maior diâmetro - <xx>cm)~3~~~1"

	set sequencias(14,8,20)="1037~Presença de hipetrofia de tonsila palatina esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,21)="1035~Presença de hipetrofia de tonsila palatina direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,22)="1142~Presença de hipetrofia de tonsila lingual esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,23)="1140~Presença de hipetrofia de tonsila lingual direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,24)="1147~Presença de hipetrofia de tonsila nasofaríngea esquerda (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,25)="1145~Presença de hipetrofia de tonsila nasofaríngea direita (tamanho do maior linfonodo - <xx>cm)~3~~~1"
	set sequencias(14,8,26)="1830~Presença de linfonodomegalia mesentérico esquerdo (maior diâmetro - <xx>cm)~3~~~1"
	set sequencias(14,8,26.1)="1835~Presença de linfonodomegalia mesentérico direito (maior diâmetro - <xx>cm)~3~~~1"
	;
	;
	set sequencias(15)="Classificação ECOG~3"
	set sequencias(15,1)="186~0 - Assintomático~3~~'1"
	set sequencias(15,2)="1]]><![CDATA[86~0 - Assintomático~3~~=1~2"
	se]]><![CDATA[t sequencias(15,3)="186~1 - Sintomático mas completamente ambulatorial~3~~'2"
	set sequencias(15,4)="186~1 - Sintomático mas completamente ambulatorial~3~~=2~2"
	set sequencias(15,5)="186~2 - Sintomático, <50% do tempo acamado durante o dia~3~~'3"
	set sequencias(15,6)="186~2 - Sintomático, <50% do tempo acamado durante o dia~3~~=3~2"
	set sequencias(15,7)="186~3 - Sintomático, >50% do tempo acamado durante o dia, não restrito ao leito~3~~'4"
	set sequencias(15,8)="186~3 - Sintomático, >50% do tempo acamado durante o dia, não restrito ao leito~3~~=4~2"
	set sequencias(15,9)="186~4 - Restrito ao leito~3~~'5"
	set sequencias(15,10)="186~4 - Restrito ao leito~3~~=5~2"
	set sequencias(15,11)="186~5 - Morte~3~~'6"
	set sequencias(15,12)="186~5 - Morte~3~~=6~2"
	quit $$$OK]]></Implementation>
</Method>

<Method name="recNomeMedico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(YBED),""))
	if codProvider'=""{
		set objProvider = $get(^MEDProvider(0,codProvider,1))
		set nomeMedico = $$$MEDProviderName(objProvider)
	}else{
		set objWWW013 = $GET(^WWW013(0,YBED,1))
		set nomeMedico = $$$WWW013Name(objWWW013)
	}
	set retorno = {}
	set retorno.nomeMedico = nomeMedico
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaSenha">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set dados = $get(%request.Data("dados",1))
	set dados = [].%FromJSON(dados)
	set senhaAtual = dados.SenhaAtual
	set NovaSenha = dados.NovaSenha
	set objWWW013 = $get(^WWW013(0,YBED,1))
	set retorno = {}
	if '$$CHECK^WWWPWDCHECK($piece(objWWW013,Y,2),senhaAtual){
		set retorno.status=0
		set retorno.mensagem="A senha atual não confere com a senha informada"
	}else{
		set $piece(objWWW013,Y,2)=$$SET^WWWPWDCHECK(NovaSenha)
		set ^WWW013(0,YBED,1) = objWWW013
		set retorno.status=1
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="verificaConexao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	write status
	quit]]></Implementation>
</Method>

<Method name="GetQtdeWorkFlow">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set qtdeCodPreenchido = 0
	Set sequ = ""
	For {
		Set sequ = $Order(^VARPEPPremium(0,codPaciente,cid,ficha,1,sequ))
		Quit:sequ=""
		Quit:$Increment(qtdeCodPreenchido)>10 
	}
	Quit qtdeCodPreenchido]]></Implementation>
</Method>

<Method name="getEvolucao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("codPaciente",1))
	Set dataPEP 	= $Get(%request.Data("dataPEP",1))
	Set codCID 		= $Get(%request.Data("codCID",1))
	Set ficha 		= $Get(%request.Data("ficha",1))
	;
	Set nedita = 0
	Set objConsulta = $get(^VARPEPPremiumConsulta(0,codPaciente,ficha,1))
	if $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)'="" Set nedita=1
	;
	Set listRetorno = {}
	Set listRetorno.nedita = nedita
	IF (codCID = "C90.0") {
		Set listRetorno.evolucaoMedUso = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,48250),"~",1)
		Set listRetorno.evolucaoEvolucao = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,47433),"~",1)
		Set listRetorno.evolucaoExameFisico = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,48249),"~",1)
		Set listRetorno.evolucaoImpressaoDiagnostica = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,48254),"~",1)
		Set listRetorno.evolucaoConduta = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,47443),"~",1)
	}Else{
		Set listRetorno.evolucaoMedUso = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,2005),"~",1)
		Set listRetorno.evolucaoEvolucao = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,1963),"~",1)
		Set listRetorno.evolucaoExameFisico = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,1908),"~",1)
		Set listRetorno.evolucaoImpressaoDiagnostica = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,2006),"~",1)
		Set listRetorno.evolucaoConduta = $Piece(..recValorSalvo(codPaciente,codCID,ficha,1,1964),"~",1)
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetVARPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pDescParametro 	= $get(%request.Data("DescParametro",1))
	Set pExibirCod		= $get(%request.Data("pExibirCod",1))
	Set pOrder			= $get(%request.Data("pOrder",1))
	
	Set meuSQL = "Select SearchWord As Codigo, Text As Descricao From SQLUser.VARPARA "
	Set meuSQL = meuSQL _ "Where Company = 0 And Language1 = 'PT' "
	Set meuSQL = meuSQL _ "And ParameterName = '"_pDescParametro_"' "
	If pOrder '="" Set meuSQL = meuSQL _ "ORDER BY Text "_$Select(pOrder="DESC":"DESC",1:"ASC")
	
	Set arrayRetorno = []
		
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While(rSet.%Next()){

		Set listDados = {}
		Do listDados.%Set("Codigo", rSet.%Get("Codigo"))
		Do listDados.%Set("Descricao", rSet.%Get("Descricao"))
		If (pExibirCod = 1) {
			Do listDados.%Set("Descricao", "("_rSet.%Get("Codigo")_") "_rSet.%Get("Descricao"))
		}
		Do arrayRetorno.%Push(listDados)

	}
	
	Do arrayRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetGrupoCampo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodCID,pCodCampo,pCodCampoC="",&amp;retorno</FormalSpec>
<Implementation><![CDATA[	If ($$$VARWorkFlowPEPPredecessor($Get(^VARWorkFlowPEP(0,pCodCID,pCodCampo,1)))'="") {
		Do ..GetGrupoCampo(pCodCID, $$$VARWorkFlowPEPPredecessor($Get(^VARWorkFlowPEP(0,pCodCID,pCodCampo,1))), "", .retorno)
	}
	Set nome = $$$VARWorkFlowPEPNome($Get(^VARWorkFlowPEP(0,pCodCID,pCodCampo,1)))
	If ($Data(^VARExames(0, nome))) {
		Set nome = $$$VARExamesDescricaodoExame($Get(^VARExames(0, nome,1)))
	}
	IF (pCodCampoC="") {
		Set retorno = retorno _$Select(retorno="":"",1:" - ")_ nome 
	}ElseIf ($$$VARWorkFlowPEPGrupodeExibicaonaTela($Get(^VARWorkFlowPEP(0,pCodCID,pCodCampo,1)))'="") {
		Set retorno = retorno _$Select(retorno="":"",1:" - ")_ $$$VARWorkFlowPEPGrupodeExibicaonaTela($Get(^VARWorkFlowPEP(0,pCodCID,pCodCampo,1))) 
	}
	Quit retorno]]></Implementation>
</Method>
</Class>
</Export>