<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alINV.iUINV">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>alINV.iINV</Super>

<Method name="GetItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>pItem:%String,*sc:%Status</FormalSpec>
<ReturnType>alINV.dItem</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Returns a V2 Item, Converts from V1 if necesary
	; History:
	; 22-Apr-2008	HQN		SR15673: Moved from iINV
	; 07-Apr-2008	HQN		ByRef status added to mimic %OpenId
	; 26-Feb-2008	LB		SR15625: Created 
	;-------------------------------------------------------------------------------
	set objItem = ##class(alINV.dItem).%OpenId(pItem, ,.sc) 
	if (objItem = $$$NULLOREF) {
		set sc = ##class(alINV.dUItem).ConvertOnSave(pItem)
		if $$$ISOK(sc) {
			set objItem = ##class(alINV.dItem).%OpenId(pItem, ,.sc)
		}
	}
	quit objItem
]]></Implementation>
</Method>

<Method name="IsSynced">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Validates all V1 Items against V2 instances, show inconsistencies as errors
	;
	; History:
	; 23-Apr-2008	Luke 	SR15672: Cleaned up redundant code
	; 15-Apr-2008	HQN		SR15672: Created
	;-------------------------------------------------------------------------------
	set sc = $$$OK                                         
	set idItem = ""
	for {
		set idItem = $order(^INART(0,idItem))
		quit:(idItem = "")
		
		set objUItem = ##class(alINV.dUItem).%OpenId("0||"_idItem)
		set scItem   = objUItem.IsSynced()           
		set:$$$ISERR(scItem) sc = $system.Status.AppendStatus(scItem,sc)                        
	}
	quit sc
]]></Implementation>
</Method>

<Method name="Sync">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Attempts to correct entries between V1 and V2
	;
	; History:
	; 15-Jan-2010	GRF		SR15796: Fix macro order
	; 02-May-2008	HQN		SR15686: Created
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set scItems = ##class(alINV.iUINV).SyncItems()
	set sc = $$$ADDSC(sc,scItems)
	quit sc
]]></Implementation>
</Method>

<Method name="SyncItems">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = ##class(alINV.iUINV).IsSynced()
	if $$$ISERR(sc) {
		Do DecomposeStatus^%apiOBJ(sc,.err)
		set sc = $$$OK
		for loopErrors=1:1:err {
			; extract Item %Id from error message, its always in between "(" and ")"
			set idItem = $extract(err(loopErrors,"param",1),$find(err(loopErrors,"param",1),"("),($find(err(loopErrors,"param",1),")"))-2)
			set objItem = ##class(alINV.dUItem).%OpenId("0||"_idItem)
			set scItem = objItem.Sync()
			if $$$ISERR(scItem) {
				set sc = $$$ADDSC(sc,scItem)
			}
		}
	}
	quit sc
]]></Implementation>
</Method>
</Class>
</Export>