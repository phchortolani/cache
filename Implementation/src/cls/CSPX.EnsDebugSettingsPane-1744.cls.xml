<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsDebugSettingsPane">
<Description><![CDATA[
An AutoPage pane that displays debug settings]]></Description>
<ClassType/>
<IncludeCode>Ensemble,EnsUI</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.Pane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Method name="DrawHEAD">
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// add some styles
	&html<
<style>

tr.SettingsTitle th {
	color: yellow;
	background: blue;
	border-bottom: 1px black solid;
}

tr.SettingsRow td {
	border-bottom: 1px gray solid;
}

input.changed {
	border: 2px blue solid;
}

</style>>

	&html<
<script language="javascript">

function btnCancel() 
{
	self.document.location = '#(##class(%CSP.Page).Link("UtilEnsProductions.csp"))#';
	return true;
}

// change color of edited items
function itemChanged(item)
{
	item.className = 'changed';
	enableSave();
	
	return true;
}

function enableSave()
{
	// enable save button
	var btn = self.document.getElementById("BTN_Save");
	btn.disabled = false;
}

function allOn(colid, count)
{
	for (var i = 0; i < count; i++) {
		var item = self.document.getElementById(colid + '_' + i);
		if (item) {
			item.className = 'changed';
			item.checked = true;
		}
	}
	
	enableSave();
	return true;
}

function allOff(colid, count)
{
	for (var i = 0; i < count; i++) {
		var item = self.document.getElementById(colid + '_' + i);
		if (item) {
			item.className = 'changed';
			item.checked = false;
		}
	}
	
	enableSave();
	return true;
}
</script>>

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawBODY">
<Description><![CDATA[
Draw the BODY of the detail pane]]></Description>
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set $ZT="Trap"
	
	// get page ID values
	Merge tID = pInstance.IDValues
	
	Set prodid = $G(tID(1))
	Set production=##class(Ens.Config.Production).%OpenId(prodid)

	Set tErrMsg = ""
	
	If ('$IsObject(production) && (prodid '= "")) {
		// try to register this production
		Set tSC = $zobjclassmethod(prodid,"Register")
		If ($$$ISERR(tSC)) {
			Do $System.Status.DecomposeStatus(tSC,.err)
			Set tErrMsg = $G(err(1))
		}
		Else {
			Set production = ##class(Ens.Config.Production).%OpenId(prodid)
		}
	}
	
	Set DebugMsg1 = $$$TextHTML("Unable to open definition for production: ")
	Set DebugMsg2 = $$$TextHTML("The table below contains the current debug setting for production: ")
	Set Name = $$$TextHTML("Name")
	Set AllOn = $$$TextHTML("All On")
	Set AllOff = $$$TextHTML("All Off")
	Set Save = $$$TextHTML("Save")
	Set Cancel = $$$TextHTML("Cancel")

	If (tErrMsg '= "") {
		&html<<div class="text1">#(DebugMsg1)#<b>#(tErrMsg)#</b></div>>
		Quit $$$OK
	}
	ElseIf ('$IsObject(production)) {
		&html<<div class="text1">#(DebugMsg1)#<b>#(prodid)#</b></div>>
		Quit $$$OK
	}
	Else {
		&html<<div class="text1">#(DebugMsg2)#<b>#(prodid)#</b></div>>
	}
	
	// get info for this page
	Do ..GetInfo(production,.column,.hostlist)
	
	// draw settings table

	&html<
		<form name="settingsForm" method="get">
		<input type="hidden" name="$ID1" value="#(prodid)#">
		<table class="AutoForm" border="0" cellspacing="0" cellpadding="4">
		<tr class="SettingsTitle">
		<th align="right" valign="bottom">#(Name)#</th>
	>

	Set colcount = 0
	Set col = $O(column(""))
	While(col '= "") {
		Set colcount = colcount + 1
		&html<<th align="center" valign="bottom"><span>#(..LocalizeText(column(col,"Caption")))#</span></th>>
		Set col = $O(column(col))
	}
	&html<</tr>>

	Set row = 0	
	Set tType = $O(hostlist(""))
	While (tType '= "") {

		&html<<tr class="SettingsRow">
			<td align="left" colspan="#(colcount+1)#"><b>#(tType)#</b></td></tr>>

		Set tHost = $O(hostlist(tType,""))
		While (tHost '= "") {
			
			&html<<tr class="SettingsRow">
				<td>#(tHost)#</td>>
	
			Set col = $O(column(""))
			While(col '= "") {
				Set option = column(col,"Name")
				
				Set tChecked = 0
				
				// see if this item is checked
				Set tChecked = +$zobjproperty(hostlist(tType,tHost),column(col,"Name"))
				
				&html<<td align="center">
					<input name="#(tHost)#_#(option)#" id="#(option)#_#(row)#" type="checkbox" #($s(tChecked:"checked",1:""))# onclick="itemChanged(this);"></td>>
				Set col = $O(column(col))
			}
			&html<</tr>>
		
			Set row = row + 1
			Set tHost = $O(hostlist(tType,tHost))
		}

		Set tType = $O(hostlist(tType))
	}

	// all on buttons
	&html<<tr><td>&nbsp;</td>>
	Set col = $O(column(""))
	While(col '= "") {
		&html<<td align="center">
		<input type="button" value="#(AllOn)#" onclick="allOn('#(column(col,"Name"))#',#(row)#);"></td>>
		Set col = $O(column(col))
	}
	&html<</tr>>

	// all off	
	&html<<tr><td>&nbsp;</td>>
	Set col = $O(column(""))
	While(col '= "") {
		&html<<td align="center">
		<input type="button" value="#(AllOff)#" onclick="allOff('#(column(col,"Name"))#',#(row)#);"></td>>
		Set col = $O(column(col))
	}
	&html<</tr>>

	&html<<tr><td colspan="5"><hr></td></tr>
	<tr><td align="right" colspan="5">
		<input disabled id="BTN_Save" type="submit" name="$ENSDEBUGSETTINGS" value="#(Save)#">&nbsp;
		<input id="BTN_Cancel" type="button" value="#(Cancel)#" onclick="btnCancel();"></td>
	</tr>
	</table>
	</form>
	>

Done	
	Quit
Trap	
	Set $ZT = ""
	Write "Error: ",$ZCVT($ZE,"O","HTML"),!
	Goto Done
]]></Implementation>
</Method>

<Method name="GetInfo">
<Description><![CDATA[
Get layout information for this page.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pProduction:Ens.Config.Production,&amp;column:%String,&amp;hostlist:%String</FormalSpec>
<Implementation><![CDATA[
	// build list of columns
	Set c = $G(c) + 1
	Set column(c,"Name") = "Foreground"
	Set column(c,"Caption") = "Run In Foreground"

	Set c = $G(c) + 1
	Set column(c,"Name") = "LogTraceEvents"
	Set column(c,"Caption") = "Log Trace Events"

	Set c = $G(c) + 1
	Set column(c,"Name") = "DisableErrorTraps"
	Set column(c,"Caption") = "Disable Error Traps"

	// build list of hosts (rows)
	For i = 1:1:pProduction.Items.Count() {
		Set tItem = pProduction.Items.GetAt(i)
		If ($IsObject(tItem)) {
			Set tType = $$$ConfigTypeName(tItem.BusinessType())
			Set tName = $S(tItem.Name="":tItem.ClassName,1:tItem.Name)
			Set hostlist(tType,tName) = tItem
		}
	}
]]></Implementation>
</Method>

<Method name="OnSubmit">
<Description><![CDATA[
Process a submit of this page]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set $ZT = "Trap"

	Set prodid = $G(%request.Data("$ID1",1))
	Set production=##class(Ens.Config.Production).%OpenId(prodid)

	If ($IsObject(production)) {
		// get info for this page
		Do ..GetInfo(production,.column,.hostlist)

		Set tType = $O(hostlist(""))
		While (tType '= "") {
			Set tHost = $O(hostlist(tType,""))
			While (tHost '= "") {
				// get data for each column
				Set col = $O(column(""))
				While(col '= "") {
					Set option = column(col,"Name")
					Set tVal = $S($D(%request.Data(tHost _ "_" _ option,1)):1,1:0)
					Set $zobjproperty(hostlist(tType,tHost),column(col,"Name")) = tVal
					Set col = $O(column(col))
				}
				Set tHost = $O(hostlist(tType,tHost))
			}
			Set tType = $O(hostlist(tType))
		}
		// save the production
		Set tSC = production.%Save()
	}
Done
	Quit

Trap	
	Set $ZT = ""
	Goto Done
]]></Implementation>
</Method>
</Class>
</Export>