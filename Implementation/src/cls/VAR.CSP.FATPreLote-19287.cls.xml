<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.FATPreLote">
<ClassType/>
<IncludeCode>VARConst,INConst,FATConst,MEDConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	#dim %request as %CSP.Request
	#dim %response as %CSP.Response
	quit:$$$ISERR(..validaSessao(1)) %response
	set job = %session.SessionId
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getINPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave = $get(%request.Data("chave",1))
	set retorno = []
	set codigo=""
	for{
		set codigo 	= $order(^INPARA(0,chave,"PT",codigo)) quit:codigo=""
		set obj 	= $get(^INPARA(0,chave,"PT",codigo,1)) 
		set linha = {}
		set linha.codigo = codigo
		set linha.descricao = $$$INPARAText(obj)
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="pesquisaPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = ">=" set operacao = " >= ",inicio="",fim=""
			if ret = "<" set operacao = " < ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set contador = 0
	set select1 = "select CodigodoPreLote,Case when Atendente is null then 'Todos' else Atendente End Atendente,$$SQLGetFormatDateTimeDX^VARSQL(DataHoradeInicio) DataHoradeInicio,$$SQLGetFormatDateTimeDX^VARSQL(DataHoraFinal) DataHoraFinal,$$SQLGetUserParamDesc^VARSQL('FATPRELOTESTATUS~'||Status) Status"
	set select1 = select1_" from  FATPreLote"
	set select1 = select1_" where Company=0 "
	if codigo '= "" set select1 = select1_" and CodigodoPreLote = '"_codigo_"' "
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set CodigodoPreLote		= rs.%Get("CodigodoPreLote")
		set Atendente			= rs.%Get("Atendente")
		set DataHoradeInicio	= rs.%Get("DataHoradeInicio")
		set DataHoraFinal		= rs.%Get("DataHoraFinal")
		set Convenio		= rs.%Get("Convenio")
		set Status				= rs.%Get("Status")
		set totalCount			= rs.%Get("totalCount")
		set linha = {}
		set linha.CodigodoPreLote		= CodigodoPreLote
		set linha.Atendente 			= Atendente
		set linha.DataHoradeInicio 		= DataHoradeInicio
		set linha.DataHoraFinal			= DataHoraFinal
		set linha.Convenio			= Convenio
		set linha.Status				= Status
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="validarFaturaPreNota">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set preLote 	= $get(%request.Data("preLote",1))
	Set codFatura = $Get(%request.Data("codFatura",1))
	;
	Set xConvenio = ""
	If (preLote '= "") Set xConvenio = $$$FATPreLoteConvenio($Get(^FATPreLote(YM, preLote, 1)))
	Set xDataInicial = $$$FATPreLoteDataHoradeInicio($Get(^FATPreLote(YM, preLote, 1)))
	Set xDataFinal = $$$FATPreLoteDataHoraFinal($Get(^FATPreLote(YM, preLote, 1)))
	Set xAtendente = $$$FATPreLoteAtendente($Get(^FATPreLote(YM, preLote, 1)))
	;
	Set meuSQL = "Select Count(Proc.ControleAdmissao) QtdeFatura "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "Where Proc.ControleAdmissao is not null and Agend.Company = 0 And Agend.Situacao in (4,5) "
	Set meuSQL = meuSQL _ "And Proc.Cancelado = 0 and $$recPreLote^VARSQL(Proc.ControleAdmissao,'"_job_"','"_preLote_"')<>-1 "
	;
	Set meuSQL = meuSQL _ "And Proc.DataHoraAdmissao Between '"_xDataInicial_"' And '"_xDataFinal_"' "
	If (xAtendente '= "") {
		Set meuSQL = meuSQL _ "And $$GetCriadoPorAdmissao^VARSQL(Proc.ControleAdmissao) In ('"_$Replace(xAtendente,";","','")_"') "
	}
	If (xConvenio '= "") {
		Set meuSQL = meuSQL _ "And Proc.Convenio In ('"_xConvenio_"') "
	}
	Set meuSQL = meuSQL _ " And Proc.ControleAdmissao = '"_codFatura_"' "
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	Set flagOk = 0
	While(rSet.%Next()){
		Set flagOk = +rSet.%Get("QtdeFatura")
	}
	Write flagOk
	Return $$$OK]]></Implementation>
</Method>

<Method name="pesquisaFaturaPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set preLote = $get(%request.Data("preLote",1))
	set filter  = $get(%request.Data("filter",1))
	set codigo  = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	if campoSort="" set orderBy = "order by DataHoraAdmissao desc"
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		;set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	;Solicitação Patricia
	Set xConvenio = ""
	If (preLote '= "") Set xConvenio = $$$FATPreLoteConvenio($Get(^FATPreLote(YM, preLote, 1)))
	Set xDataInicial = $$$FATPreLoteDataHoradeInicio($Get(^FATPreLote(YM, preLote, 1)))
	Set xDataFinal = $$$FATPreLoteDataHoraFinal($Get(^FATPreLote(YM, preLote, 1)))
	Set xAtendente = $$$FATPreLoteAtendente($Get(^FATPreLote(YM, preLote, 1)))
	;
	set contador = 0
	Set select1 = "Select Proc.ControleAdmissao Fatura,Agend.Numero, Proc.Sequencia, Agend.CodigodoPaciente||' - '||$$SQLGetPatientName^VARSQL(Agend.CodigodoPaciente) CodigodoPaciente, Proc.DataAtendimento, "
	Set select1 = select1 _ "Proc.HoraAtendimento, Proc.GrupoAgendamento,  $$getDescExame^VARSQL(Proc.Procedimento) Procedimento, Proc.Profissional, "
	Set select1 = select1 _ "Proc.DataHoraAdmissao, Agend.Situacao, Agend.CriadoEm, Agend.AlteradoEm, "
	Set select1 = select1 _ "Proc.CodigodaSala, Proc.CodigodoLeito, Proc.Admissao, "
	Set select1 = select1 _ "$$recPreLote^VARSQL(Proc.ControleAdmissao,'"_job_"','"_preLote_"') NumeroPreLote "
	Set select1 = select1 _ "From SQLUser.VARAgendamento As Agend "
	Set select1 = select1 _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set select1 = select1 _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set select1 = select1 _ "Where Proc.ControleAdmissao is not null and Agend.Company = 0 And Agend.Situacao in (4,5) "
	Set select1 = select1 _ "And Proc.Cancelado = 0 and $$recPreLote^VARSQL(Proc.ControleAdmissao,'"_job_"','"_preLote_"')<>-1 "
	;
	Set select1 = select1 _ "And Proc.DataHoraAdmissao Between '"_xDataInicial_"' And '"_xDataFinal_"' "
	If (xAtendente '= "") {
		Set select1 = select1 _ "And $$GetCriadoPorAdmissao^VARSQL(Proc.ControleAdmissao) In ('"_$Replace(xAtendente,";","','")_"') "
	}
	If (xConvenio '= "") {
		Set select1 = select1 _ "And Proc.Convenio In ('"_xConvenio_"') "
	}
	;
	Set select1 = select1 _ "Group by Proc.ControleAdmissao"
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	kill ^zzsilmar
	set ^zzsilmar = meuSelect
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set Fatura				= rs.%Get("Fatura")
		set CodigodoPaciente	= rs.%Get("CodigodoPaciente")
		set DataAtendimento		= rs.%Get("DataAtendimento")
		set HoraAtendimento		= rs.%Get("HoraAtendimento")
		set DataHoraAdmissao	= rs.%Get("DataHoraAdmissao")
		set GrupoAgendamento	= rs.%Get("GrupoAgendamento")
		set Procedimento		= rs.%Get("Procedimento")
		set Profissional		= rs.%Get("Profissional")
		set NumeroPreLote		= rs.%Get("NumeroPreLote")
		set totalCount			= rs.%Get("totalCount")
		set linha = {}
		set linha.Fatura			= Fatura
		set linha.CodigodoPaciente 	= CodigodoPaciente
		set linha.DataAtendimento	= DataAtendimento
		set linha.HoraAtendimento	= HoraAtendimento
		set linha.DataHoraAdmissao	= $zdatetime(DataHoraAdmissao,3)
		set linha.GrupoAgendamento	= GrupoAgendamento
		set linha.Procedimento		= Procedimento
		set linha.NumeroPreLote		= $select(NumeroPreLote="":"Não",1:"Sim (Pré Lote Nº "_NumeroPreLote_")")
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="insereFaturaPreNota">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codFatura 		= $get(%request.Data("codFatura",1))
	set ^mtemp.FATPreLote(job,codFatura,1)=""
	write 1
	quit]]></Implementation>
</Method>

<Method name="recPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	kill ^mtemp.FATPreLote(job)
	set codigo = $get(%request.Data("codigo",1))
	set formGeral = {}
	set formControle = {}
	if codigo'=""{
		set objPreLote			= $get(^FATPreLote(YM,codigo,1))
		set atendente			= $$$FATPreLoteAtendente(objPreLote)				
		set objAtendente = []
		for i=1:1:$length(atendente,";"){
			set valor = $piece(atendente,";",i)
			if valor="" continue
			do objAtendente.%Push(valor)
		}
		set formGeral.atendente = objAtendente
		set formGeral.dataHoraInicial	= $select($$$FATPreLoteDataHoradeInicio(objPreLote)="":"",1:$zdatetime($$$FATPreLoteDataHoradeInicio(objPreLote),3,7))
		set formGeral.dataHoraFinal		= $select($$$FATPreLoteDataHoraFinal(objPreLote)="":"",1:$zdatetime($$$FATPreLoteDataHoraFinal(objPreLote),3,7))
		set formGeral.convenio		= $$$FATPreLoteConvenio(objPreLote)
		set formGeral.codSituacao		= $$$FATPreLoteStatus(objPreLote)
		set situacao = formGeral.codSituacao
		if situacao'=""{
			set obj = $get(^INPARA(0,"FATPRELOTESTATUS","PT",situacao,1))
			set situacao = $$$INPARAText(obj)
		}
		set formGeral.situacao = situacao
		;
		set formControle.criadoEm				= $$$FATPreLoteCriadoEm(objPreLote)
		if formControle.criadoEm'="" set formControle.criadoEm = $zdatetime(formControle.criadoEm,4)
		set formControle.criadoPor				= $$$FATPreLoteCriadoPor(objPreLote)
		set formControle.alteradoEm				= $$$FATPreLoteAlteradoEm(objPreLote)
		if formControle.alteradoEm'="" set formControle.alteradoEm = $zdatetime(formControle.alteradoEm,4)
		set formControle.alteradoPor			= $$$FATPreLoteAlteradoPor(objPreLote)
		set formControle.enviadoEm				= $$$FATPreLoteEnviadoEm(objPreLote)
		if formControle.enviadoEm'="" set formControle.enviadoEm = $zdatetime(formControle.enviadoEm,4)
		set formControle.enviadoPor			= $$$FATPreLoteEnviadoPor(objPreLote)
		set formControle.confirmadoEm				= $$$FATPreLoteConfirmadoEm(objPreLote)
		if formControle.confirmadoEm'="" set formControle.confirmadoEm = $zdatetime(formControle.confirmadoEm,4)
		set formControle.confirmadoPor			= $$$FATPreLoteConfirmadoPor(objPreLote)
		;
		merge ^mtemp.FATPreLote(job) = ^FATPreLoteFaturas(YM,codigo)
	}
	set retorno = {}
	set retorno.formGeral 		= formGeral
	set retorno.formControle 	= formControle
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set preLote	= $get(%request.Data("preLote",1))
	set select = "select CodigodoPreLote from FATPreLote where Company=0 Order By CriadoEm Desc"
	set retorno = []
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		set linha={}
		set linha.codigo = rs.%Get("CodigodoPreLote")
		set linha.descricao = rs.%Get("CodigodoPreLote")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getAtendente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set preLote	= $get(%request.Data("preLote",1))
	set select = "select CriadoPor from VARAgendamento where Company=0 group by CriadoPor"
	set retorno = []
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		set linha={}
		set linha.codigo = rs.%Get("CriadoPor")
		set linha.descricao = rs.%Get("CriadoPor")_" - "_$$$WWW013Name($get(^WWW013(0,rs.%Get("CriadoPor"),1)))
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="recFaturasPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = []
	set codFatura = ""
	for {
		set codFatura = $order(^mtemp.FATPreLote(job,codFatura)) quit:codFatura=""
		;
		set linha = ..recDadosFatura(codFatura)
		if linha="" continue
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recDadosFatura">
<ClassMethod>1</ClassMethod>
<FormalSpec>codFatura</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set codConvenio = "",codPlanoSaude=""
	set linha={}
	set rs = ##class(%SQL.Statement).%ExecDirect("","select CodigodoAgendamento,Sequencia from VARAgendamentoProcedimentos where Company=0 and %upper(ControleAdmissao) = '"_$replace(codFatura,"/"," ")_"'")
	set regras = "",valorTotal = 0
	set achou = 0
	kill regras
	while(rs.%Next()){
		set achou = 1
		set codAgendamento		= rs.%Get("CodigodoAgendamento")
		set sequencia 			= rs.%Get("Sequencia")
	
		Set objVARAgendamento	= $Get(^VARAgendamento(0, codAgendamento, 1))
		Set codPaciente			= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
		Set codPlanoSaude		= $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
		Set codConvenio			= $$$VARAgendamentoConvenio(objVARAgendamento)
		Set codCarteirinha		= $$$VARAgendamentoCarteirinha(objVARAgendamento)
		set objPlanoSaude 	= $get(^FATOrganizacao(0,codPlanoSaude,1))
		set particular 		= $$$FATOrganizacaoEparticular(objPlanoSaude) 
		;
		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(0, codAgendamento, sequencia, 1))
		Set dataHoraAdmissao		= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)
		set procedimento			= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		set qtdeProcedimento	 	= $$$VARAgendamentoProcedimentosQtdeProcedimento(objVARAgendamentoProcedimentos)
		;
		Set codPlanoSaude		= $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos)
		Set codConvenio			= $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos)
		Set codCarteirinha		= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos)
		set objPlanoSaude 	= $get(^FATOrganizacao(0,codPlanoSaude,1))
		set particular 		= $$$FATOrganizacaoEparticular(objPlanoSaude) 
		;
		if particular{
			set valor				 	= $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos)
			set valor	= valor * qtdeProcedimento
			set valorTotal = valorTotal + valor
			set regras = ""
		}else{
			set objRegrasComerciais		= ##class(VAR.util.FATRegrasComerciais).%New(procedimento,codPlanoSaude,codAgendamento,sequencia)
			if objRegrasComerciais="" continue
			set qtdeProcedimento = qtdeProcedimento * objRegrasComerciais.Quantidade
			set valor = objRegrasComerciais.Valor*qtdeProcedimento
			;
			set regrasInvalidas = objRegrasComerciais.RegrasInvalidas
			for {
				set linha = regrasInvalidas.GetNext(.chave)
				quit:chave=""
				set regras(linha) = ""
			}
			set valorComponente = 0
			if objRegrasComerciais.possuiComponentes>0{
				for i=1:1:objRegrasComerciais.Componentes.Count(){
					set componente = objRegrasComerciais.Componentes.GetAt(i)
					set valorComponente = valorComponente + componente.Valor
					;
					if componente.isInelegivel{
						set regras("Componente "_componente.Procedimento_" inelegível para o plano de saúde")=""
					}else{
						set regrasInvalidas 		= componente.RegrasInvalidas
						for {
							set linha = regrasInvalidas.GetNext(.chave)
							quit:chave=""
							set regras(linha)=""
						}
					}						
				}
			}
			
			set valor = valor + (valorComponente*qtdeProcedimento)
			set valorTotal = valorTotal + valor
		}
	}
	if 'achou quit ""
	
	set regraInvalida = ""
	set ocorrencia = ""
	for {
		set ocorrencia = $order(regras(ocorrencia)) quit:ocorrencia=""
		set:regraInvalida'="" regraInvalida = regraInvalida_"<br>"
		set regraInvalida = regraInvalida_ocorrencia
	}
	
	set convenio="",planoSaude=""
	if codConvenio'=""{
		set objConvenio = $get(^FATOrganizacao(0,codConvenio,1))
		set convenio = $$$FATOrganizacaoNome(objConvenio)
	}
	if codPlanoSaude'=""{
		set objPlanoSaude = $get(^FATOrganizacao(0,codPlanoSaude,1))
		set planoSaude = $$$FATOrganizacaoNome(objPlanoSaude)
	}
	;

	set linha = {}
	set linha.codFatura 	= codFatura
	set linha.dataAbertura 	= $zdate(dataHoraAdmissao,3)
	set linha.paciente		= codPaciente_" - "_$$$MEDPatientName($get(^MEDPatient(0,codPaciente,1)))
	set linha.carteirinha	= codCarteirinha
	set convenioPlano = convenio_"/"_planoSaude
	if convenioPlano="/" set convenioPlano = "-"
	set linha.convenioPlano = convenioPlano
	set linha.valorTotal 	= valorTotal
	set linha.regras 		= regraInvalida
	if regraInvalida'="" set linha.invalido = 1
	
	quit linha]]></Implementation>
</Method>

<Method name="removeFaturasPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codFatura	= $get(%request.Data("codFatura",1))
	if codFatura'=""{
		kill ^mtemp.FATPreLote(job,codFatura)
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="salvar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set preLote			= $get(%request.Data("preLote",1))
	set camposGeral		= $get(%request.Data("camposGeral",1))
	set strStatus = $$$OK
	tstart
	try{
		set camposGeral		= [].%FromJSON(camposGeral)
		;
		if preLote="" {
			if '$data(^WWW128(0,"FATPreLote")){
				set obj = "PL000000000"
				set strStatus = $$$Save("WWW128","FATPreLote",obj,$$$YES)
				quit:$$$ISERR(strStatus)
			}		
			Set preLote = $$GetNextNumber^COMUtils("FATPreLote","")
			set objPreLote = $get(^FATPreLote(YM,preLote,1))
			set dataHoradeInicio = camposGeral.dataHoraInicial
			if dataHoradeInicio'="" set dataHoradeInicio = $zdatetimeh(dataHoradeInicio,3,7)
			set dataHoraFinal = camposGeral.dataHoraFinal
			if dataHoraFinal'="" set dataHoraFinal = $zdatetimeh(dataHoraFinal,3,7)
			set convenio = camposGeral.convenio
			set atendente = ""
			if camposGeral.atendente'=""{
				set iterator = camposGeral.atendente.%GetIterator()
				while iterator.%GetNext(.indice,.valor){
					if atendente'="" set atendente = atendente_";"
					set atendente = atendente_valor
				}

			}
			set $$$FATPreLoteAtendente(objPreLote)				= atendente
			set $$$FATPreLoteDataHoradeInicio(objPreLote)		= dataHoradeInicio
			set $$$FATPreLoteDataHoraFinal(objPreLote)			= dataHoraFinal
			set $$$FATPreLoteConvenio(objPreLote)			= convenio
			set $$$FATPreLoteStatus(objPreLote)					= 0
			set strStatus = ..salvaFaturas(preLote,objPreLote)
			quit:$$$ISERR(strStatus)
			set strStatus = $$$Save("FATPreLote",preLote,objPreLote,$$$YES)
		}else{
			set strStatus = ..atualizaFaturas(preLote)
			quit:$$$ISERR(strStatus)
			set objPreLote = $get(^FATPreLote(YM,preLote,1))
			set $$$FATPreLoteAlteradoPor(objPreLote) = YBED
			set $$$FATPreLoteAlteradoEm(objPreLote) = $horolog
			set strStatus = $$$Save("FATPreLote",preLote,objPreLote,$$$YES)
		}
		;
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set strStatus="Dados salvos com sucesso!"
		set retorno.status = 1
		do retorno.%Set("preLote",preLote,"String")
		set retorno.type = "success"
		set retorno.mensagem = strStatus
	}else{
		trollback
		set retorno.status = 0
		set retorno.type = "error"
		set retorno.mensagem = $$$Text(strStatus)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="enviarPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set preLote			= $get(%request.Data("preLote",1))
	set strStatus = $$$OK
	tstart
	try{
		if preLote'="" {
			set objPreLote = $get(^FATPreLote(YM,preLote,1))
			set $$$FATPreLoteStatus(objPreLote)		= 1
			set $$$FATPreLoteEnviadoPor(objPreLote) = YBED
			set $$$FATPreLoteEnviadoEm(objPreLote)  = $horolog
			set strStatus = $$$Save("FATPreLote",preLote,objPreLote,$$$YES)
		}
		;
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set strStatus="Pré Lote Enviado com Sucesso!"
		set retorno.status = 1
		set retorno.type = "success"
		set retorno.mensagem = strStatus
	}else{
		trollback
		set retorno.status = 0
		set retorno.type = "error"
		set retorno.mensagem = $$$Text(strStatus)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="removerPreLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set preLote			= $get(%request.Data("preLote",1))
	set strStatus = $$$OK
	tstart
	try{
		if preLote'="" {
			set strStatus = $$$Kill("FATPreLote",preLote)
			set numero = ""
			for {
				set numero = $order(^FATPreLoteFaturas(0,preLote,numero)) quit:numero=""
				set strStatus = $$$Kill("FATPreLoteFaturas",preLote_","_numero)
				quit:$$$ISERR(strStatus)
			}
		}
		;
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set strStatus="Pré Lote Excluído com Sucesso!"
		set retorno.status = 1
		set retorno.type = "success"
		set retorno.mensagem = strStatus
	}else{
		trollback
		set retorno.status = 0
		set retorno.type = "error"
		set retorno.mensagem = $$$Text(strStatus)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="salvaFaturas">
<ClassMethod>1</ClassMethod>
<FormalSpec>preLote,objPreLote</FormalSpec>
<Implementation><![CDATA[	new atendente,inicio,fim,strStatus,meuSQL,rs,numero
	set atendente 	= $$$FATPreLoteAtendente(objPreLote)
	set inicio 		= $$$FATPreLoteDataHoradeInicio(objPreLote)
	set fim			= $$$FATPreLoteDataHoraFinal(objPreLote)
	set strStatus = $$$OK
	Set meuSQL = "Select Proc.ControleAdmissao,$$recPreLote^VARSQL(Proc.ControleAdmissao) PreLote "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "left join VARAgendamentoAdmissao as Admissao "
	Set meuSQL = meuSQL _ "On Admissao.Codigodaadmissao = Proc.ControleAdmissao "
	Set meuSQL = meuSQL _ "Where Agend.Company = 0 And Agend.Situacao in (4,5) "
	Set meuSQL = meuSQL _ "And Proc.Cancelado = 0 and Proc.ControleAdmissao is not null"
	if inicio'="" set meuSQL = meuSQL_" and Admissao.CriadoData >= '"_inicio_"'"
	if fim'="" set meuSQL = meuSQL_" and Admissao.CriadoData <= '"_fim_"'"
	if atendente'="" {
		set atendente = $replace(atendente,";","','")
		set meuSQL = meuSQL _ " and ((Admissao.CriadoPor in ('"_atendente_"')))"
	}
	set meuSQL = meuSQL _ "Group by Proc.ControleAdmissao"
	Set rs = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	while(rs.%Next()){
		set numero = rs.%Get("ControleAdmissao")
		set preLoteCad = rs.%Get("PreLote")
		if preLoteCad'="" continue
		set strStatus = $$$Save("FATPreLoteFaturas",preLote_","_numero,"",$$$YES)
		quit:$$$ISERR(strStatus)
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="atualizaFaturas">
<ClassMethod>1</ClassMethod>
<FormalSpec>preLote</FormalSpec>
<Implementation><![CDATA[	new strStatus,numero,sequencia,faturas
	set strStatus = $$$OK
	;
	kill faturas
	set numero = ""
	for {
		set numero = $order(^mtemp.FATPreLote(job,numero)) quit:numero=""
		set strStatus = $$$Save("FATPreLoteFaturas",preLote_","_numero,"",$$$YES)
		quit:$$$ISERR(strStatus)
		set faturas(numero)=""
	}
	
	set numero = ""
	for {
		set numero = $order(^FATPreLoteFaturas(0,preLote,numero)) quit:numero=""
		if $data(faturas(numero)) continue
		set strStatus = $$$Kill("FATPreLoteFaturas",preLote_","_numero)
		quit:$$$ISERR(strStatus)
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<FormalSpec>callMode=""</FormalSpec>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set %response.Status="401 Unauthorized"
		set resp={}
		set resp.status=0
		set resp.mensagem="Usuário não está logado ou a sessão expirou."
		write resp.%ToJSON()
	}elseif callMode=""{
		set resp={}
		set resp.status=1
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>
</Class>
</Export>