<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.webservice.alphalinc.ObtemOcorrenciasFornecedor">
<Description><![CDATA[Esta classe implementa todos os web services a serem utilizados pela Integração de Ocorrencia de Fornecedor entre Alphalinc e InfoSaúde, especificamente para o cliente Heva.]]></Description>
<ClassType/>
<Import>VAR.infra.integracao,VAR.common.soap,VAR.infra.util,alWEB.WS</Import>
<IncludeCode>INConst,VARConst,VARLog,WWWSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%SOAP.WebService</Super>

<Parameter name="NAMESPACE">
<Default>http://tempuri.org</Default>
</Parameter>

<Parameter name="SERVICENAME">
<Description><![CDATA[Name of the WebService.]]></Description>
<Default>ObtemOcorrencias</Default>
</Parameter>

<Parameter name="SOAPVERSION">
<Description><![CDATA[This is the SOAP version supported by the service.]]></Description>
<Default>1.1</Default>
</Parameter>

<Parameter name="MAXIMOREGISTROSPORVEZ">
<Type>%Integer</Type>
<Default>20</Default>
</Parameter>

<Method name="LimpaNumeroOcorrenciaInfoSaude">
<ClassMethod>1</ClassMethod>
<FormalSpec>Company:%String,CodFornecedor:%String,NumOcorrencia:%String</FormalSpec>
<Implementation><![CDATA[	kill ^VAR.infra.webservice.alphalinc.ObtemOcorrenciasFornecedor(Company, CodFornecedor, NumOcorrencia, "NDocIntegrado")]]></Implementation>
</Method>

<Method name="GravaNumeroOcorrenciaInfoSaude">
<ClassMethod>1</ClassMethod>
<FormalSpec>Company:%String,CodFornecedor:%String,NumOcorrencia:%String,NumOcorrenciaInfoSaude:%String</FormalSpec>
<Implementation><![CDATA[	set ^VAR.infra.webservice.alphalinc.ObtemOcorrenciasFornecedor(Company, CodFornecedor, NumOcorrencia, "NDocIntegrado") = NumOcorrenciaInfoSaude]]></Implementation>
</Method>

<Method name="GetNumeroOcorrenciaInfoSaude">
<ClassMethod>1</ClassMethod>
<FormalSpec>Company:%String,CodFornecedor:%String,NumOcorrencia:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit $get(^VAR.infra.webservice.alphalinc.ObtemOcorrenciasFornecedor(Company, CodFornecedor, NumOcorrencia, "NDocIntegrado"))]]></Implementation>
</Method>

<Method name="ObtemOcorrencias">
<Description><![CDATA[Método para ler as ocorrencias Pendentes de Integrar. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>IdInicio (obrigatório) - ID de referência para buscar as próximas Ocorrencias;
</UL>
<BR>
Retorno:<BR><UL>
<LI>ResultadoOcorrencia - Contém uma Lista de Ocorrencia
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,IdInicio:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>ResultadoOcorrencia</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	set resultado = ##class(ResultadoOcorrencia).%New()
 	set resultado.Ocorrencias = ##class(%ListOfObjects).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

		set entidade = ##class(GerenciaFilaPendencias).%GetParameter("ENTIDADEOCORRENCIA")

		&sql(DECLARE cursorObtemOcorrencias CURSOR FOR
			 SELECT   VARDadoAIntegrar.ID,
			          VARDadoAIntegrar.Acao,
			          VARDadoAIntegrar.Chave1Entidade,
			          VARDadoAIntegrar.Chave2Entidade,
			          VARFornecedorOcorrencia.Recebimento,
			          VARFornecedorOcorrencia.NDocIntegrado,
			          VARDadoAIntegrar.OrdemNaFila,
			          VARDadoAIntegrar.AtualizadoEm
			 INTO     :idIntegracao, :acao, :chave1Entidade, :chave2Entidade, :recebimento,
			 		  :ndocIntegrado, :ordemNaFila, :atualizadoEm
			 FROM     SQLUser.VARDadoAIntegrar, SQLUser.VARFornecedorOcorrencia
			 WHERE    VARDadoAIntegrar.Entidade = :entidade
			 AND      VARDadoAIntegrar.Chave1Entidade =* VARFornecedorOcorrencia.CodFornecedor 
			 AND      VARDadoAIntegrar.Chave2Entidade =* VARFornecedorOcorrencia.CodOcorrencia
			 AND      VARDadoAIntegrar.Integrado = 'N'
			 ORDER BY VARDadoAIntegrar.OrdemNaFila)
		&sql(OPEN cursorObtemOcorrencias)
		&sql(FETCH cursorObtemOcorrencias)

		if ($length(IdInicio) > 0) {
			while (SQLCODE = 0) {
				if (idIntegracao = IdInicio) {
					&sql(FETCH cursorObtemOcorrencias)
					quit
				}

				&sql(FETCH cursorObtemOcorrencias)
			}
		}

		while (SQLCODE = 0) {
			set fornecedor = ##class(ConversaoInfoSaude).GetFornecedorInfoSaude(chave1Entidade)
			if (recebimento '= "") {
				set objINREC = $get(^INREC(YM, recebimento, 1))	
				set notaFiscal = $$$INRECInvoiceNumber(objINREC)
				set serieNF = $$$INRECFREE3(objINREC)
			}
			else {
				set notaFiscal = ""
				set serieNF = ""
			}

			set objOcorrencia = $get(^VARFornecedorOcorrencia(YM, chave1Entidade, chave2Entidade, 1))

			set wsOcorrencia = ##class(Ocorrencia).%New()
			set wsOcorrencia.IdIntegracao 			= idIntegracao
			set wsOcorrencia.CodFornecedor 			= fornecedor
			set wsOcorrencia.NumOcorrencia 			= chave2Entidade

			if ($length(ndocIntegrado) > 0) {
				set wsOcorrencia.NumOcorrenciaInfoSaude = ndocIntegrado
			}
			else {
				set wsOcorrencia.NumOcorrenciaInfoSaude = ..GetNumeroOcorrenciaInfoSaude(YM, chave1Entidade,
					chave2Entidade)
			}

			set wsOcorrencia.Acao		 			= acao

			if ($length(objOcorrencia) > 0) {
				if (+$$$VARFornecedorOcorrenciaModificadoEm(objOcorrencia) > 0) {
					set wsOcorrencia.AlteradoEm 	= $zdatetime($$$VARFornecedorOcorrenciaModificadoEm(objOcorrencia), 3, 1)
					set wsOcorrencia.AlteradoPor 	= $$$VARFornecedorOcorrenciaModificadoPor(objOcorrencia)
				}
				else {
					set wsOcorrencia.AlteradoEm 	= $zdatetime($$$VARFornecedorOcorrenciaCriadoEm(objOcorrencia), 3, 1)
				}

				set wsOcorrencia.DataOcorrencia 	= $zdatetime($$$VARFornecedorOcorrenciaData(objOcorrencia), 3, 1)
				set wsOcorrencia.DataRegistro 		= $zdatetime($$$VARFornecedorOcorrenciaCriadoEm(objOcorrencia), 3, 1)
				set wsOcorrencia.DescricaoDetalhada = $$$VARFornecedorOcorrenciaDescricaoDetalhada(objOcorrencia)
				set wsOcorrencia.DonoRegistro 		= $$$VARFornecedorOcorrenciaCriadoPor(objOcorrencia)
				set wsOcorrencia.Lote 				= $$$VARFornecedorOcorrenciaLote(objOcorrencia)
				set wsOcorrencia.Marca 				= $$GetBrandName^VARSQL($$$VARFornecedorOcorrenciaMarca(objOcorrencia))
				set wsOcorrencia.MotivoOcorrencia 	= $$$VARFornecedorOcorrenciaMotivo(objOcorrencia)
				set wsOcorrencia.NotaFiscal 		= notaFiscal
				set wsOcorrencia.SerieNF			= serieNF

				set CodProduto = $$$VARFornecedorOcorrenciaProduto(objOcorrencia)
				if (CodProduto > 0) {
					set wsOcorrencia.Produto   		= "("_CodProduto_")"_$$SQLGetDescricaoProduto^VARSQL(CodProduto)
				}

				if ($length($$$VARFornecedorOcorrenciaValidade(objOcorrencia)) > 0) {
					set wsOcorrencia.Validade 		= $$$VARFornecedorOcorrenciaValidade(objOcorrencia)
				}
			}

			set wsOcorrencia.OrdemNaFila			= $zdatetime(ordemNaFila, 3, 1)
			set wsOcorrencia.AtualizadoEm			= $zdatetime(atualizadoEm, 3, 1)

			do resultado.Ocorrencias.Insert(wsOcorrencia)
			if (resultado.Ocorrencias.Count() >= ..#MAXIMOREGISTROSPORVEZ) quit

			&sql(FETCH cursorObtemOcorrencias)
		}

		&sql(CLOSE cursorObtemOcorrencias)
	    set strStatus = $$$OK
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>

<Method name="ConfirmaIntegracao">
<Description><![CDATA[Método para confirmar uma Ocorrencia Integrada.<BR>
<BR>
Parâmetros:<BR><UL>
<LI>SessionID - Código da Sessão 
<LI>MsgSequence - Seguência da chamada ao WebMethod
<LI>CodFornecedor (obrigatório) - Codigo Fornecedor;
<LI>NumOcorrencia (obrigatório) - Número Ocorrência;
</UL>
<BR>
Retorno:<BR><UL>
<LI>Resultado - resultado padrão
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,AtualizadoEm:%TimeStamp,CodFornecedor:%String,NumOcorrencia:%String,NumOcorrenciaInfoSaude:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>Resultado</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	set resultado = ##class(Resultado).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

		if ($data(^VARFornecedorOcorrencia(YM, CodFornecedor, NumOcorrencia, 1))) {
			set idFornecedorOcorrencia = CodFornecedor_$$$COMMA_NumOcorrencia
			set objFornecedorOcorrencia = $get(^VARFornecedorOcorrencia(YM, CodFornecedor, NumOcorrencia, 1))

			if ($length($$$VARFornecedorOcorrenciaNDocIntegrado(objFornecedorOcorrencia)) = 0) {
				set $$$VARFornecedorOcorrenciaNDocIntegrado(objFornecedorOcorrencia) = NumOcorrenciaInfoSaude
				set strStatus = $$$Save("VARFornecedorOcorrencia", idFornecedorOcorrencia, objFornecedorOcorrencia, 1)
			}
		}

		if ($$$ISOK(strStatus)) {
			set strStatus = ##class(GerenciaFilaPendencias).ConfirmaIntegracao(
				##class(GerenciaFilaPendencias).%GetParameter("ENTIDADEOCORRENCIA"),
				AtualizadoEm,
				CodFornecedor,
				NumOcorrencia,
				##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"),
				##class(GerenciaFilaPendencias).%GetParameter("CHAVEVAZIA"))
		}
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>
</Class>
</Export>