<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSOH.dUPeriodType">
<ClassType>persistent</ClassType>
<IncludeCode>INConst,COMSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>User.INSOHPeriodType</Super>

<Method name="ConvertV2">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidKey:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 22-Sep-2008	HQN	SR15801: 
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set objPeriodType = ##class(alSOH.dPeriodType).%OpenId(pidKey,,.sc)
	if $$$ISOK(sc) {
		set objUPeriodType = ##class(alSOH.dUPeriodType).%OpenId(pidKey,,.sc)
		if objUPeriodType = "" {
			set objUPeriodType = ##class(alSOH.dUPeriodType).%New()
			set objUPeriodType.PeriodTypeId = pidKey
		}
		set objUPeriodType.Description = objPeriodType.Description
		set objUPeriodType.StartDate   = objPeriodType.StartDate
		set objUPeriodType.DateClosed  = objPeriodType.DateClosed
		set objUPeriodType.PeriodCycle = objPeriodType.PeriodCycle.%Id()
		set sc = objUPeriodType.%Save()
	}
	quit sc
]]></Implementation>
</Method>

<Method name="ConvertOnSave">
<ClassMethod>1</ClassMethod>
<FormalSpec>pYKEY</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 23-Oct-2008	HQN	SR16030: Explicitly set ID, comes from V1
	; 16-Oct-2008	HQN	SR16030: Exclusive lock record
	; 22-Sep-2008	HQN	SR15801: Corrected dUPeriodType Id, missing Y
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set objUPeriodType = ##class(alSOH.dUPeriodType).%OpenId("0||"_pYKEY,,.sc)
	if $$$ISOK(sc) {
		set objPeriodType = ##class(alSOH.dPeriodType).%OpenId(pYKEY,4,.sc)
		if objPeriodType = $$$NULLOREF {
			set objPeriodType = ##class(alSOH.dPeriodType).%New()
			set objPeriodType.PeriodTypeId = pYKEY
		}
		set objPeriodType.Description = objUPeriodType.Description
		set objPeriodType.StartDate   = objUPeriodType.StartDate
		set objPeriodType.DateClosed  = objUPeriodType.DateClosed
		set objPeriodType.PeriodCycle = ##class(alSOH.dPeriodCycle).%OpenId(objUPeriodType.PeriodCycle,,.sc)
		set:$$$ISOK(sc) sc = objPeriodType.%Save()
	}
	quit sc
]]></Implementation>
</Method>

<Method name="ConvertOnDelete">
<ClassMethod>1</ClassMethod>
<FormalSpec>pYKEY</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History :
	; 24-Oct-2008	HQN		SR16068: Ignore existence of V2 data deletion
	; 22-Sep-2008	Luke	SR15936: added message to inform user of issues with data
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set objResultSet = ##class(%Library.ResultSet).%New()
	set sc = objResultSet.Prepare("SELECT ID FROM alSOH.dUSOHPeriod WHERE PeriodType = ?")
	if $$$ISOK(sc) {
		set sc = objResultSet.Execute("0||"_pYKEY)
		if $$$ISOK(sc) {
			while objResultSet.Next(.sc) {
				set sc = ##class(alSOH.dUSOHPeriod).%DeleteId(objResultSet.Data("ID"))
				quit:$$$ISERR(sc)
			}
		}
	}
	if $$$ISOK(sc) && ##class(alSOH.dPeriodType).%ExistsId(pYKEY) {
		set sc = ##class(alSOH.dPeriodType).%DeleteId(pYKEY)
   }
	quit sc
]]></Implementation>
</Method>

<Method name="Close">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set %this.DateClosed = +$horolog
	set sc = %this.%Save()
	set:$$$ISOK(sc) sc = %this.ConvertOnSave(%this.PeriodTypeId)
	quit sc
]]></Implementation>
</Method>

<Method name="%OnDelete">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Delete</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being deleted.

<P>If this method returns an error then the object will not be deleted.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History :
	; 24-Oct-2008	HQN		SR16068: Mimic V2 deletion chain; Call ConvertOnDelete
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set objUPeriodType = ##class(alSOH.dUPeriodType).%Open(oid,4,.sc)
	if $$$ISOK(sc) {
		do ##class(alSOH.dUPeriodType).ConvertOnDelete(objUPeriodType.PeriodTypeId)
	}
	quit sc
]]></Implementation>
</Method>
<Storage name="StorageAtNet">
<Type>%Library.CacheSQLStorage</Type>
</Storage>
</Class>
</Export>