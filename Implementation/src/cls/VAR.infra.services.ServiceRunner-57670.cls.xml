<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.services.ServiceRunner">
<Abstract>1</Abstract>
<ClassType/>
<Import>VAR.infra,VAR.infra.util,VAR.update</Import>
<IncludeCode>VARLog</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="Register">
<Abstract>1</Abstract>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	//quit ..RegisterRunner(...)

	quit $$$OK]]></Implementation>
</Method>

<Method name="Unregister">
<Abstract>1</Abstract>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	//quit ..UnregisterRunner(...)

	quit $$$OK]]></Implementation>
</Method>

<Method name="RegisterRunner">
<ClassMethod>1</ClassMethod>
<FormalSpec>serviceId:%Integer,frequency:%Integer,priority:%Integer,className:%String,description:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set objS = ##class(User.VARServicesController).%New()
	set objS.ServiceId   	= serviceId
	set objS.Frequency   	= frequency
	set objS.Priority	 	= priority
	set objS.ClassName 	 	= className
	set objS.Description 	= description
	set objS.LastRun	 	= ""
    set sc = objS.%Save()
	if ($$$ISOK(sc)) {
		$$$VARLOGINFO(description_" service installed")
	}
	else {
		quit sc
	}

	quit $$$OK]]></Implementation>
</Method>

<Method name="UnregisterRunner">
<ClassMethod>1</ClassMethod>
<FormalSpec>serviceId:%Integer,description:%String</FormalSpec>
<Implementation><![CDATA[	set sc = ##class(User.VARServicesController).%DeleteId(serviceId)
	if ($$$ISOK(sc)) $$$VARLOGINFO(description_" service uninstalled")
	quit $$$OK]]></Implementation>
</Method>

<Method name="Run">
<Description><![CDATA[Returns: Status]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set $ztrap = "exception"

	tstart

	set status = ..Execute()
	if (status = $$$OK) {
		if ($tlevel > 0) tcommit
	}
	else {
		trollback
	}

finally
	quit status

exception
	set $ztrap = ""

	set status = ##class(Errors).MakeErrorStatus("Error: "_$zerror)
	$$$VARLOGERROR($zerror)

	trollback

	goto finally]]></Implementation>
</Method>

<Method name="Execute">
<Abstract>1</Abstract>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$NO]]></Implementation>
</Method>

<Method name="Stop">
<Description><![CDATA[Returns: Status]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set $ztrap = "exception"

	tstart

	set status = ..Finalize()
	if (status = $$$OK) {
		if ($tlevel > 0) tcommit
	}
	else {
		trollback
	}

finally
	quit status

exception
	set $ztrap = ""

	set status = ##class(Errors).MakeErrorStatus("Error: "_$zerror)
	$$$VARLOGERROR($zerror)

	trollback

	goto finally]]></Implementation>
</Method>

<Method name="Finalize">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$OK]]></Implementation>
</Method>

<Method name="IsProductionComputer">
<ClassMethod>1</ClassMethod>
<FormalSpec>blnPrint:%Boolean=0</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	set objScriptRelease = ##class(ScriptRelease).%New()
	set blnIsProduction	 = objScriptRelease.IsProductionComputer()

	if (blnPrint) {
		write "Production Machine: "_$case(blnIsProduction,1:"Yes",0:"No"),!	
	}

	quit blnIsProduction]]></Implementation>
</Method>

<Method name="IsShadowComputer">
<ClassMethod>1</ClassMethod>
<FormalSpec>blnPrint:%Boolean=0</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	set objScriptRelease = ##class(ScriptRelease).%New()
	set blnIsShadow		 = objScriptRelease.IsShadowComputer()

	if (blnPrint) {
		write "Shadow Machine: "_$case(blnIsShadow,1:"Yes",0:"No"),!	
	}

	quit blnIsShadow]]></Implementation>
</Method>

<Method name="IsIntegrationNamespace">
<ClassMethod>1</ClassMethod>
<FormalSpec>blnPrint:%Boolean=0</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	set objScriptRelease 		= ##class(ScriptRelease).%New()
	set blnIsIntegrationNspace  = objScriptRelease.IsIntegrationNamespace()

	if (blnPrint) {
		write "Integration Namespace: "_$case(blnIsIntegrationNspace,1:"Yes",0:"No"),!	
	}

	quit blnIsIntegrationNspace]]></Implementation>
</Method>
</Class>
</Export>