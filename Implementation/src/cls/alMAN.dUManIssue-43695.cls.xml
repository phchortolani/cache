<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alMAN.dUManIssue">
<ClassType>persistent</ClassType>
<Super>alISS.dUIssue</Super>
<UDLText name="T">
<Content>
/*----------------------------------------------------------------------------------
;
; History
; 26-Mar-2013	SCR		HEVA-811: Force Compile
; 23-Jul-2009	PPP		SR16753 Created
;---------------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="IssueLines">
<Type>alMAN.dUManIssueLine</Type>
<Collection>list</Collection>
<Transient>1</Transient>

<Parameter name="CAPTION" value="AL00449"/>
</Property>


<Method name="AutoClose">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	;
	; History
	; 23-Jul-2009	PPP		SR16753: Created
	;-------------------------------------------------------------------------------
	set sc = $$$OK

	if %this.IsClosable() {            ; check if all lines closed
		set blnLinesClosed = $$$YES
		for loopLines=1:1:%this.IssueLines.Count() {
			if %this.IssueLines.GetAt(loopLines).IsClosable() {
 				set blnLinesClosed = $$$NO
			}
			quit:'blnLinesClosed
		}
		
		if blnLinesClosed {
			set %this.Status = 9       ; Auto - Close
			set sc = %this.%Save()
			do %this.Requisition.AutoClose()
			
		} else {
			set strMessage = $$$Text("alREQ0001")
			set sc = $$$ERROR($$$GeneralError,strMessage)
		} ; "All lines not closed"
		
	} else {
		set strMessage = $$$Text("alREQ0002")
		set sc = $$$ERROR($$$GeneralError,strMessage)
	}   ;   "Already Closed"
	
	quit sc
]]></Implementation>
</Method>

<Method name="%OnDelete">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Delete</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being deleted.

<P>If this method returns an error then the object will not be deleted.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 23-Jul-2009	PPP		SR16753: Created
	;-------------------------------------------------------------------------------
	set sc = $$$YES

	set objIssue      = ##class(alISS.dUIssue).%Open(oid)
	set lstIssueLines = objIssue.IssueLines
	
	for loopIssues=1:1:lstIssueLines.Count() {
		set objIssueLine = lstIssueLines.GetAt(loopIssues)
		set sc           = objIssueLine.%Delete(objIssueLine.%Oid())
		quit:($$$ISERR(sc))
	}
	quit sc
]]></Implementation>
</Method>

<Method name="FirmIssue">
<Description><![CDATA[

	<p>Attempts to Autoclose the Requisition if we're closed</p>
	]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 23-Jul-2009	PPP		SR16753: Created
	;-------------------------------------------------------------------------------
	set sc = ##super()
		
	quit sc
]]></Implementation>
</Method>
<Storage name="StorageAtNet">
<Type>%Library.CacheSQLStorage</Type>
</Storage>
</Class>
</Export>