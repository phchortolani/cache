<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alLOC.iLOC">
<Description><![CDATA[
Location Interface]]></Description>
<Abstract>1</Abstract>
<ClassType/>
<IncludeCode>COMSYS,%occInclude</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>

<Method name="GetStorage">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrLocnID:%String,pstrStoreID:%String,*sc:%Status</FormalSpec>
<ReturnType>alLOC.dStorage</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; Get a storage identified by location and storage ID
	; 
	; Arguments: 
	; 	pstrLocnID		alSOH.dLocation::%Id()
	; 	pstrStoreID		alSOH.dStorage::%Id()
	; 	
	; History:
	; 27-Oct-2008	HQN		Added usage notes and arguments
	; 02-Oct-2008	GRF		SR15810: Error if Locn or Store is blank; Revise logic
	; 							for ConvertOnSave processing; internationalise
	; 26-Sep-2008	GRF		SR15932: initialise sc; type as Output rather than ByRef
	; 25-Feb-2008	LB		SR15625: Created 
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set objReturn = $$$NULLOREF
	if (pstrLocnID '= "") && (pstrStoreID '= "") {
		if ##class(alLOC.dStorage).%ExistsId(pstrLocnID_"||"_pstrStoreID) = $$$NO {
			set sc = ##class(alLOC.dUStorage).ConvertOnSave(pstrLocnID_","_pstrStoreID)
			if $$$ISERR(sc) {
				set strError = $$$Text($lb("IN00821",pstrStoreID,pstrLocnID))
				set sc = $system.Status.AppendStatus(($$$ERROR($$$GeneralError,strError)),sc)
			} ; "Storage %1 does not exist in location %2"
		}

		if $$$ISOK(sc) {
			set objReturn = ##class(alLOC.dStorage).%OpenId(pstrLocnID_"||"_pstrStoreID)
			
			if (objReturn = $$$NULLOREF) {	
				set strError = $$$Text($lb("IN00821",pstrStoreID,pstrLocnID))
				set sc = $system.Status.AppendStatus(($$$ERROR($$$GeneralError,strError)),sc)
			} ; "Storage %1 does not exist in location %2"
		}
		
	} else {
		set strError = $$$Text($lb("IN00760",pstrLocnID,pstrStoreID))
		set sc = $system.Status.AppendStatus(($$$ERROR($$$GeneralError,strError)),sc)
	} ; "The Location (%1) or Storage (%2) identifier is missing when getting a Storage."
	quit objReturn
]]></Implementation>
</Method>

<Method name="GetLocation">
<ClassMethod>1</ClassMethod>
<FormalSpec>pidLocnID:%String,*sc:%Status</FormalSpec>
<ReturnType>alLOC.dLocation</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 05-May-2008	HQN		SR15705: Upgraded to pass sc back
	; 25-Feb-2008	LB		SR15625: Created 
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	set returnObj = ##class(alLOC.dLocation).%OpenId(pidLocnID,,.sc) 
	if (returnObj = $$$NULLOREF) {
		set sc = ##class(alLOC.dULocation).ConvertOnSave(pidLocnID)
		if $$$ISOK(sc) {
			set objPar = ##class(alLOC.dLocation).%OpenId(pidLocnID,,.sc)
		}
	}
	quit returnObj
]]></Implementation>
</Method>

<Method name="OnBuild">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 02-May-2008	Luke		SR15705: removed population code 
	;-------------------------------------------------------------------------------
	set sc = $$$OK
	quit sc
]]></Implementation>
</Method>

<Method name="ConvertAll">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; TOTAL Initial take-on of V1 data to V2
	; 
	; History
	; 15-Jan-2010	GRF		SRa
	; 26-Sep-2008	GRF		SR15932: restore KillExtent (Location also clears Storage)
	; 02-May-2008	Luke	SR15705: created
	;-------------------------------------------------------------------------------
	set sc = ##class(alLOC.dLocation).%KillExtent()
	quit ##class(alLOC.dULocation).LoadV2()
]]></Implementation>
</Method>
</Class>
</Export>