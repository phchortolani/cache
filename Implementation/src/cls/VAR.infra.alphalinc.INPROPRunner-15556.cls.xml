<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.alphalinc.INPROPRunner">
<ClassType/>
<IncludeCode>VARLog,VARService,INConst,COMSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>VAR.infra.services.ServiceRunner</Super>

<Method name="%OnNew">
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	SET ^INPROPJOB1(YM,+$HOROLOG,$PIECE($HOROLOG,",",2),1)="1"_Y_"WWWTAG"_Y_+$HOROLOG_Y_$PIECE($HOROLOG,",",2)  ;PROTOKOLL GESTARTET ;protocol 
	SET ^INBACKJOBS1(YM,"INPROPJOB",+$HOROLOG,$PIECE($HOROLOG,",",2),1)="1"_Y_"WWWTAG"_Y_"INPROPJOB"_Y_"1"_Y_$$^WWWTEXT(33328)  ;PROTOKOLL GESTARTET, AUSWERTUNGSDATEI HINTERGRUNDJOBS
	
	quit $$$OK]]></Implementation>
</Method>

<Method name="Register">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit ..RegisterRunner($$$ServiceIdINPROPAlphalinc, $$$ServiceFrequencyMinutely, $$$ServicePriorityHigh, ..%ClassName(1), "Serviço INPROP do Alphalinc")]]></Implementation>
</Method>

<Method name="Unregister">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit ..UnregisterRunner($$$ServiceIdINPROPAlphalinc, "Serviço INPROP do Alphalinc")]]></Implementation>
</Method>

<Method name="Execute">
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	if (..IsIntegrationNamespace()) quit $$$OK
	
	NEW AUF,POS,OK,STOP,LASTDAY,LASTRUN,RICHT,TERMIN,NEURECH,ALLE
	
	;SET $ZTRAP="^WWWERROR"
	
	$$$VAR
	SET SPRACHE="PT"
	SET ^INPROPJOB(YM)=""
	
	LOCK +^INPROPJOB(YM):0 IF '$TEST  QUIT '$$$OK ;NICHT MÖGLICH (LÄUFT BEREITS) ;Not potential 
	
	SET LASTDAY=$ORDER(^INPROPJOB1(YM,""),-1)          ;LETZTER BEARBEITUNGSTAG ;last 
	IF LASTDAY="" QUIT '$$$OK               ;NICHT KORREKT GESTARTET ;Not 
	SET LASTRUN=$ORDER(^INPROPJOB1(YM,LASTDAY,""),-1)  ;SUCHEN LETZTER RUN ;seek last 
	IF LASTRUN="" QUIT '$$$OK               ;NICHT KORREKT GESTARTET ;Not 
	IF $PIECE($GET(^INPROPJOB1(YM,LASTDAY,LASTRUN,1)),Y,1)'=1 QUIT '$$$OK  ;PROZESS GESTOPPT
	;--------------------------------
	;EXECUTE ARTIKELAUFBAU UND ANDERE ARTIKEL-JOBS
	DO
	. NEW NEXT,EXECUTE
	. SET NEXT=""
	. FOR  SET NEXT=$ORDER(^INARTJOB(YM,NEXT)) QUIT:NEXT=""  DO
	. . LOCK +^INARTJOB(YM,NEXT):1
	. . SET EXECUTE=$GET(^INARTJOB(YM,NEXT,1))
	. . DO
	. . . NEW NEXT
	. . . if $get(^SysSetup("ProductionPlanning"))=1 IF EXECUTE'="" XECUTE EXECUTE  ;z.b.: DO ^INARTXL(...) // SRBR014510
	. . ;
	. . LOCK -^INARTJOB(YM,NEXT)
	. . KILL ^INARTJOB(YM,NEXT,1)
	;
	;-----------------------------------
	;EXECUTE PRODUKTION ;EXECUTE production 
	do PerformPlanning^INPROPJOB() //SR15243
	
	quit $$$OK]]></Implementation>
</Method>

<Method name="Finalize">
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	LOCK -^INPROPJOB(YM)
	ZKILL ^INPROPJOB(YM) ; SR13916: This needs to be killed or the healthcheck fails, plus it's set in the routine above
	
	quit $$$OK]]></Implementation>
</Method>
</Class>
</Export>