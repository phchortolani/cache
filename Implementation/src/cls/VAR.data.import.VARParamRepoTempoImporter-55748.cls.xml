<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.VARParamRepoTempoImporter">
<ClassType/>
<IncludeCode>VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Command: 
> do ##class(VAR.data.import.VARParamRepoTempoImporter).importFile(diretorio, arquivo)

Fields
		ItemNumber,FREE33,SearchName,CostumerTextorItemTextNo,ItemGroup,ItemType,UnitofMeasure,HoldReason,FREE7,FREE18
			,FREE2,FREE6,FREE17,FREE9,DangerousGoodsCategory,FREE10,FREE5,FREE11,FREE12,FREE15,MultidoseInjectable,FREE13,
			FREE25,FREE22,FREE14,FREE32,ItemPolicy,BaseUnit
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo:%String,local:%String,Diretorio:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	if ($get(arquivo) = "") quit "Parãmetros obrigatórios (arquivo) não informados"
	
	
	;Copiado do import.INARTImporter.cls
	;CARLOS: Se local veio nulo autoriza o item somente para o 997 (CD Alphaville do DASA)
	if $get(local) = "" set local = 997

	set ^VARINARTImporter("Local") = $get(local)
		
	quit ..import(Diretorio_arquivo)
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0
	
	;DASA-303
	;$$$VAR
	;set YBED = "CARGADEDADOS"
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	set strStatus = $$$OK

	set $$$KEY1(key)	= ..getField(pstrLinha, 1) // Local
	set $$$KEY2(key)	= ..getField(pstrLinha, 2) // Produto
	
	if ($data(^VARReposicaoLocalProduto(YM,$$$KEY1(key),$$$KEY2(key)))) {
		set $$$KEY3(key) = $order(^VARReposicaoLocalProduto(YM,$$$KEY1(key),$$$KEY2(key),""))
	}
	if ($$$KEY3(key) = "") {
		set $$$KEY3(key)	= $$^WWWNEXT1("VARReposicaoLocalProduto",key,3) // Numerador
	}
	
	set obj = $get(^VARReposicaoLocalProduto(YM,key,1))
	
	// Não atualiza o registro caso ele já exista
	/*if (obj '= "") {
		set strStatus = "Cadastro já existe"
		quit strStatus
	}*/
	
	if ('$data(^WWW0121(YM,YM,$$$KEY1(key),1))) {
		set strStatus = "Local não existe " _ $$$KEY1(key)
		quit strStatus
	}
	
	if ('$data(^INART(YM,$$$KEY2(key),1))) {
		set strStatus = "Produto não existe " _ $$$KEY2(key)
		quit strStatus
	}
														// key				//Código (Sistema) 
	set $$$VARReposicaoLocalProdutoTempodeAbastecimento(obj)		= $replace(..getField(pstrLinha,3),",",".")	//Tempo de abastecimento
	set $$$VARReposicaoLocalProdutoTempodeCompra(obj)				= $replace(..getField(pstrLinha,4),",",".")	//Tempo de Compra em meses
	set $$$VARReposicaoLocalProdutoLeadTime(obj)					= $replace(..getField(pstrLinha,5),",",".")	//Lead Time em Meses
	set $$$VARReposicaoLocalProdutoDMMI(obj)						= $replace(..getField(pstrLinha,6),",",".")	//Demanda Média Mensal Informada
	set $$$VARReposicaoLocalProdutoVariaveisdeEstoque(obj)			= "" // Variáveis de Estoqu
	set $$$VARReposicaoLocalProdutoVariaveisdeTempo(obj)			= 1 // Variáveis de Tempo
	set $$$VARReposicaoLocalProdutoAtivo(obj)						= 1
	
	set $$$VARReposicaoLocalProdutoESDias(obj)						= ""
	set $$$VARReposicaoLocalProdutoPRDias(obj)						= ""
	set $$$VARReposicaoLocalProdutoEMDias(obj)						= ""
	set $$$VARReposicaoLocalProdutoEstoquedeSeguranca(obj)			= ""
	set $$$VARReposicaoLocalProdutoPontodeRessuprimento(obj)		= ""
	set $$$VARReposicaoLocalProdutoEstoqueMaximo(obj)			 	= ""
	
	set $$$VARReposicaoLocalProdutoDataIniVarTempo(obj)				= +$horolog + 1

	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_key_", obj="_obj)
	}
	else {
		set strStatus = $$$Save("VARReposicaoLocalProduto", key, obj, 1)
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
]]></Implementation>
</Method>
</Class>
</Export>