<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSYS.State.dState">
<Abstract>1</Abstract>
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>
<UDLText name="T">
<Content>
/*----------------------------------------------------------------------------------
; History 
; 21-Feb-2008	HQN		Copied from dUState, modified to fit new iStatemachine
; 30-Jan-2008	LB		SR15626 Changed the signature of dStatus to dUStatus
;---------------------------------------------------------------------------------*/
</Content>
</UDLText>


<Property name="SMClassName">
<Type>%String</Type>
<Required>1</Required>

<Parameter name="TRUNCATE" value="1"/>
</Property>


<Property name="NextStates">
<Type>alSYS.State.dState</Type>
<Collection>array</Collection>
</Property>


<Property name="PrevStates">
<Type>alSYS.State.dState</Type>
<Collection>array</Collection>
</Property>


<Property name="StateId">
<Type>%Integer</Type>
<Required>1</Required>
</Property>


<Property name="StateMachine">
<Type>alSYS.State.iStateMachine</Type>
<Transient>1</Transient>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="Index">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>SMClassName,StateId</Properties>
<Unique>1</Unique>
</Index>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="IsValid">
<Description><![CDATA[
Must be overridden, returns whether the instance can be changed to this state
Do additional field validation on iStateMachine
]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$ERROR($$$MethodNotImplemented,"alSYS.State.dState::IsValid")
]]></Implementation>
</Method>

<Method name="OnStateChange">
<Description><![CDATA[
Must be overridden, returns whether the instance successfully changed to this state
]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit $$$ERROR($$$MethodNotImplemented,"alSYS.State.dState::OnStateChange")
]]></Implementation>
</Method>
<UDLText name="T">
<Content>
/*
/// This callback method is invoked by the &lt;METHOD&gt;%New&lt;/METHOD&gt; method to 
/// provide notification that a new instance of an object is being created.
/// 
/// &lt;P&gt;If this method returns an error then the object will not be created.
Method %OnNew(initvalue As %CacheString) As %Status [ Private, ProcedureBlock = 1 ]
{
	set blnIsModified = %this.%IsModified()
	; Copy values over if downcasting
	if ($get(initvalue) '= "&quot;) &amp;&amp; ($isobject(initvalue)) &amp;&amp; initvalue.%Extends(%this.%ClassName(1)) {
		set %this.StateId = initvalue.StateId
	}
	do %this.%SetModified(blnIsModified)
	quit $$$OK
}
*/
</Content>
</UDLText>


<Method name="%OnBeforeSave">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Save</METHOD> method to 
provide notification that the object is being saved. It is called before 
any data is written to disk.

<P><VAR>insert</VAR> will be set to 1 if this object is being saved for the first time.

<P>If this method returns an error then the call to <METHOD>%Save</METHOD> will fail.]]></Description>
<FormalSpec>insert:%Boolean</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc = $$$OK
	if %this.StateMachine '= $$$NULLOREF {
		set:(%this.SMClassName = "") %this.SMClassName = %this.StateMachine.%ClassName(1)
		do %this.StateMachine.%SetModified($$$NO)
	}
	quit sc
]]></Implementation>
</Method>

<Method name="SetNext">
<Description><![CDATA[
Setup double linked list between this state and <VAR>objNextState</VAR>]]></Description>
<Final>1</Final>
<FormalSpec>objNextState:alSYS.State.dState</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 28-Mar-2008	HQN		Made final
	; 27-Mar-2008	HQN		Created
	;-------------------------------------------------------------------------------
	do %this.NextStates.SetAt(objNextState, objNextState.StateId)
	do objNextState.PrevStates.SetAt(%this, %this.StateId)
	quit $$$OK
]]></Implementation>
</Method>

<Method name="SetPrev">
<Final>1</Final>
<FormalSpec>objPrevState:alSYS.State.dState</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;-------------------------------------------------------------------------------
	; History:
	; 28-Mar-2008	HQN		Made final
	; 27-Mar-2008	HQN		Created
	;-------------------------------------------------------------------------------
	do %this.PrevStates.SetAt(objPrevState, objPrevState.StateId)
	do objPrevState.NextStates.SetAt(%this, %this.StateId)
	quit $$$OK
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alSYS.State.dStateD</DataLocation>
<DefaultData>dStateDefaultData</DefaultData>
<IdLocation>^alSYS.State.dStateD</IdLocation>
<IndexLocation>^alSYS.State.dStateI</IndexLocation>
<StreamLocation>^alSYS.State.dStateS</StreamLocation>
<Data name="NextStates">
<Attribute>NextStates</Attribute>
<Structure>subnode</Structure>
<Subscript>"NextStates"</Subscript>
</Data>
<Data name="PrevStates">
<Attribute>PrevStates</Attribute>
<Structure>subnode</Structure>
<Subscript>"PrevStates"</Subscript>
</Data>
<Data name="dStateDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>NextStatus</Value>
</Value>
<Value name="3">
<Value>StateMachine</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>