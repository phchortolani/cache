<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARCadAgendamento">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Set method = $get(%request.Data("method",1))
	Job ..LiberaReservaSemAgendamento()
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDadosPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set pCodPaciente = $Get(%request.Data("pCodPaciente",1))

	Set objMEDPatient = $Get(^MEDPatient(YM, pCodPaciente, 1))

	Set listRetorno 	= {}

	Set listRetorno.pacienteNome						= $$$MEDPatientName(objMEDPatient)
	Set listRetorno.pacienteProntuario			= $$$MEDPatientPID(objMEDPatient)
	Set listRetorno.pacienteDataNascimento	= $ZDate($$$MEDPatientDOB(objMEDPatient),3,,4)
	Set listRetorno.pacienteDataNascimentoF	= $ZDate($$$MEDPatientDOB(objMEDPatient),4,,4)
	Set listRetorno.pacienteSexo						= $$$MEDPatientGender(objMEDPatient)
	Set listRetorno.pacienteSexoF						= ##Class(User.Search.PesquisasJson).GetDescricaoWWW101("SEX",$$$MEDPatientGender(objMEDPatient))
	Set listRetorno.pacienteNomeMae					= $$$MEDPatientMothersName(objMEDPatient)
	Set listRetorno.pacienteCPF							= $$$MEDPatientSSN(objMEDPatient)
	Set listRetorno.pacienteRG							= $$$MEDPatientFREE7(objMEDPatient)
	Set listRetorno.pacienteCNS							= $$$MEDPatientCartaoNacionaldeSaude(objMEDPatient)
	Set listRetorno.pacienteTelefone				= $$$MEDPatientTel(objMEDPatient)
	Set listRetorno.pacienteCelular					= $$$MEDPatientFREE2(objMEDPatient)
	Set listRetorno.pacienteEmail						= $$$MEDPatientEmail(objMEDPatient)
	Set listRetorno.pacienteLogradouro			= $$$MEDPatientStreet(objMEDPatient)
	Set listRetorno.pacienteNumeroEndereco	= $$$MEDPatientFREE4(objMEDPatient)
	Set listRetorno.pacienteComplemento			= $$$MEDPatientFREE3(objMEDPatient)
	Set listRetorno.pacienteBairro					= $$$MEDPatientFREE6(objMEDPatient)
	Set listRetorno.pacienteCidade					= $$$MEDPatientCity(objMEDPatient)
	Set listRetorno.pacienteEstado					= $$$MEDPatientState(objMEDPatient)
	Set listRetorno.pacienteCEP							= $$$MEDPatientZipCode(objMEDPatient)
	
	Do listRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set strStatus = ""
	Set mensagem 	= ""
	Set erro			=	0
	Set YBED 		= $Get(%request.Data("YBED",1))
	Set chave 	= $Get(%request.Data("chave",1))
	Set dados 	= $Get(%request.Data("dados",1))
	Tstart
	Try{
		If chave="+" Set chave = ""
		Set dados = [].%FromJSON(dados)
		Set obj = ""
		If chave'="" Set obj = $get(^MEDPatient(0,chave,1))
		;
		If (chave = "") {
			If ($Data(^MEDPatients(0, 100, dados.pacienteCPF))) {
				Set strStatus = -1
				Set mensagem 	= "CPF já cadastrado."
				Quit  	
			}
		}Else{
			Set xCodigo = $Order(^MEDPatients(0, 100, dados.pacienteCPF, ""))
			If (xCodigo '= "" && (xCodigo '= chave)) {
				Set strStatus = -1
				Set mensagem 	= "CPF já cadastrado para paciente "_xCodigo_"."
				Quit  	
			}			
		}
		;
		Set $$$MEDPatientName(obj) 					= dados.pacienteNome
		Set $$$MEDPatientGender(obj) 				= dados.pacienteSexo
		Set $$$MEDPatientDOB(obj) 					= $ZDateH($Replace(dados.pacienteDataNascimento,"/","-"),3,,,,,,,"")
		Set $$$MEDPatientSSN(obj) 					= dados.pacienteCPF
		Set $$$MEDPatientFREE7(obj) 				= dados.pacienteRG
		Set $$$MEDPatientCartaoNacionaldeSaude(obj)= dados.pacienteCNS
		Set $$$MEDPatientPID(obj) 					= dados.pacienteProntuario
		Set $$$MEDPatientMothersName(obj) 	= dados.pacienteNomeMae
		Set $$$MEDPatientTel(obj) 					= dados.pacienteTelefone
		Set $$$MEDPatientFREE2(obj) 				= dados.pacienteCelular
		Set $$$MEDPatientEmail(obj) 				= dados.pacienteEmail
		Set $$$MEDPatientStreet(obj) 				= dados.pacienteLogradouro
		Set $$$MEDPatientFREE4(obj) 				= dados.pacienteNumeroEndereco
		Set $$$MEDPatientFREE3(obj) 				= dados.pacienteComplemento
		Set $$$MEDPatientFREE6(obj) 				= dados.pacienteBairro
		Set $$$MEDPatientZipCode(obj) 			= dados.pacienteCEP
		Set $$$MEDPatientCity(obj) 					= dados.pacienteCidade
		Set $$$MEDPatientState(obj) 				= dados.pacienteEstado
		If chave=""{
			set chave = $$GetNextNumber^COMUtils("MEDPatient","")
			set $$$MEDPatientCreatedDate(obj) = $Horolog
			set $$$MEDPatientCreatedBy(obj) 	= YBED
		}else{
			set $$$MEDPatientChangedDate(obj) = $Horolog
			set $$$MEDPatientChangedBy(obj) 	= YBED
		}
		Set strStatus = $$$Save("MEDPatient",chave,obj,$$$YES)
	}
	Catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro			=	err
	}
	set retorno = {}
	if 'erro{
		Tcommit
		set retorno.codigo 		= $Get(chave)
		Set retorno.status 		= strStatus
		Set retorno.mensagem 	= mensagem
	}Else{
		Trollback
		Set retorno.status 		= strStatus
		Set retorno.mensagem 	= ""
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetProcedimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set pCodGrupoAgend	= $Get(%request.Data("pCodGrupoAgend",1))
	Set pTake 					= $Get(%request.Data("pTake",1))
	Set pSkip 					= $Get(%request.Data("pSkip",1))
	Set pSearchValue 		= $Replace($Get(%request.Data("pSearchValue",1))," "," ")
	
	If (pTake = "") Set pTake = 20
	
	Set pTake = pTake + pSkip
	Set pSkip = pSkip + 1
		
	Set meuSQL = "Select * From (Select top "_pTake_" ItemNumber, SearchName, DescItemPedido, GrupodeAgendamento, "
	Set meuSQL = meuSQL_"$$GetTipoGrupoAgendamento^VARSQL(GrupodeAgendamento)  As DescGrupodeAgendamento "
	Set meuSQL = meuSQL_"From SQLUser.INART Where Company = 0 "
	;Set meuSQL = meuSQL_"And (GrupodeAgendamento Is Not Null Or NVL(RequerAgendamento,99) = 0) "
	Set meuSQL = meuSQL_"And NVL(RequerAgendamento,99) iN (0,1) "
	If (pCodGrupoAgend '= "") {
		Set meuSQL = meuSQL_"And ItemNumber = '"_pCodGrupoAgend_"' "
	}Else{
		If (pSearchValue'="") {
			Set meuSQL = meuSQL_"And ("
			Set meuSQL = meuSQL_"%UPPER($$GetDescricaoSearchProduto^VARSQL(ItemNumber)) Like %Upper('%"_pSearchValue_"%') Or "
			Set meuSQL = meuSQL_"%Upper($$GetTipoGrupoAgendamento^VARSQL(GrupodeAgendamento)) Like %Upper('%"_pSearchValue_"%') "
			Set meuSQL = meuSQL_")"
		}
	}
	Set meuSQL = meuSQL_") Where %VID Between "_pSkip_" and "_pTake_" "
	;
	Set objStatement	= ##class(%SQL.Statement).%New() 
	Set qStatus 			= objStatement.%Prepare(meuSQL)
	Set rSet 					= objStatement.%Execute()
	;
	Set arrayDados = []
	;
 	While (rSet.%Next()) {
	 	Set descProduto 		= rSet.%Get("SearchName")
	 	Set descItemPedido 	= rSet.%Get("DescItemPedido")
	 	If descItemPedido="" Set descItemPedido = descProduto
		Set listDados = {}
		Do listDados.%Set("Codigo", rSet.%Get("ItemNumber"))
		Do listDados.%Set("Descricao", descItemPedido)
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GerarAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED					= $Get(%request.Data("YBED",1))
	Set pCodPaciente 	= $Get(%request.Data("pCodPaciente",1))

	Set (codConvenio, codPlanoSaude, carteirinha, dtVencCart) = ""
	&Sql(
		Select 
			Convenio, PlanodeSaude, Carteirinha, VencimentodaCarteirinha 
		Into
			:codConvenio, :codPlanoSaude, :carteirinha, :dtVencCart
		From 
			SQLUser.VARAgendamento 
		Where 
			Company = 0 And CodigodoPaciente = :pCodPaciente
		Order By 
			CriadoEm Desc
	)

	
	Set chave = $$GetNextNumber^COMUtils("VARAgendamento","")

	Set objeto = $Get(^VARAgendamento(YM, chave, 1))
	Set $$$VARAgendamentoCodigodoPaciente(objeto) = pCodPaciente
	Set $$$VARAgendamentoSituacao(objeto) 				= 1
	Set $$$VARAgendamentoCriadoEm(objeto) 				= $Horolog
	Set $$$VARAgendamentoCriadoPor(objeto) 				= YBED

	Set $$$VARAgendamentoConvenio(objeto)									= codConvenio
	Set $$$VARAgendamentoPlanodeSaude(objeto)							= codPlanoSaude
	Set $$$VARAgendamentoCarteirinha(objeto)							= carteirinha
	Set $$$VARAgendamentoVencimentodaCarteirinha(objeto)	= dtVencCart

	Set strStatus = $$$Save("VARAgendamento", chave, objeto, $$$YES)
	If ('$$$ISERR(strStatus)) {
		Do ..LimparTemporaria(chave)
	}
	
	Set listRetorno = {}
	Set listRetorno.status				 	= strStatus
	Set listRetorno.codAgendamento 	= chave
	Set listRetorno.codConvenio 		= codConvenio
	Set listRetorno.codPlanoSaude		= codPlanoSaude	
	Set listRetorno.carteirinha			= carteirinha	
	Set listRetorno.dtVencCart			= $Select(dtVencCart'="":$ZDate(dtVencCart,3),1:"")

	Do listRetorno.%ToJSON()

	Return $$$OK]]></Implementation>
</Method>

<Method name="LimparTemporaria">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento=""</FormalSpec>
<Implementation><![CDATA[	If (pCodAgendamento = "") Return
	
	Kill ^mtemp.VARAgendamento(pCodAgendamento)
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetProcedimentoBuscar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	
	Set arrayRetorno = []
	
	If (pCodAgendamento = "") {
		Do arrayRetorno.%ToJSON()
		
		Return $$$OK
	}
	
	Set codProcedimento = ""
	For {
		Set codProcedimento = $Order(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", codProcedimento))
		Quit:codProcedimento=""
		
		Set objINART = $Get(^INART(YM, codProcedimento, 1))
		
		Set arrayProf = []
		Set codProfissional = ""
		For {
			Set codProfissional = $Order(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"PROF", codProfissional))
			Quit:codProfissional=""
			Set listProfissional = {}
			Set listProfissional.codProfissional 	= codProfissional
			Set listProfissional.nomeProfissional = $Extract($$SQLGetProviderName^VARSQL(codProfissional),1,20)
			Do arrayProf.%Push(listProfissional)
		}
		
		Set listDados = {}
		Set listDados.grupoAgendamento			= $$$INARTGrupodeAgendamento(objINART)
		Set listDados.grupoAgendamentoDesc 	= $$GetDescGrupoAgendamento^VARSQL($$$INARTGrupodeAgendamento(objINART))
		Set listDados.procedimento 					= codProcedimento
		Set listDados.procedimentoDesc 			= $Select($$$INARTDescItemPedido(objINART)="":$$$INARTSearchName(objINART),1:$$$INARTDescItemPedido(objINART))
		Set listDados.qtdeAgenda						= +$Piece(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento),Y,2)
		Set listDados.umAgendamento					= +$Piece(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento),Y,3)
		Set listDados.preferenciaExecutor		= ""
		Set listDados.sexoM									= $Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"SEXO","M"))
		Set listDados.sexoF									= $Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"SEXO","M"))
		Set listDados.profissional					= arrayProf
		If ($$$INARTGrupodeAgendamento(objINART) = "") {
			Set listDados.flagEscolher					= 0
		}Else{ 
			Set listDados.flagEscolher					= $Data(^MEDProviderAgendas(0,10,$$$INARTGrupodeAgendamento(objINART)))
		}
		Do arrayRetorno.%Push(listDados)
	}
	
	Do arrayRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPreferenciaProfissional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set pCodAgendamento		= $Get(%request.Data("pCodAgendamento",1))
	Set pCodProcedimento	= $Get(%request.Data("pCodProcedimento",1))
	Set pCodProfissional	= $Get(%request.Data("pCodProfissional",1))
	Set pCodUnidade				= $Get(%request.Data("pCodUnidade",1))

	Set arrayRetorno = []
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
		
	If ($Length(pCodProfissional,"||") = 2) {	
		Set meuSQL = "Select Loc.Sala, Loc.LeitoEquipamento, INART.GrupodeAgendamento "
		Set meuSQL = meuSQL _ "From SQLUser.VARGrupoAgendamentoLocAtend As Loc, "
		Set meuSQL = meuSQL _ "SQLUser.INART As INART "
		Set meuSQL = meuSQL _ "Where Loc.Company = 0 And INART.Company = 0 "
		Set meuSQL = meuSQL _ "And Loc.CodigoGrupo = INART.GrupodeAgendamento "
		Set meuSQL = meuSQL _ "And INART.ItemNumber = '"_pCodProcedimento_"' "
		Set meuSQL = meuSQL _ "Group BY Loc.Sala, Loc.LeitoEquipamento"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
		While rSet.%Next() {
			Set codGrupoAgendamento = rSet.%Get("GrupodeAgendamento")
			Set codProfissional			= rSet.%Get("Sala")_"||"_rSet.%Get("LeitoEquipamento")
			Set listRetorno = {}
			Set listRetorno.codProfissional 	= codProfissional
			Set listRetorno.nomeProfissional	= $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("Sala"), rSet.%Get("LeitoEquipamento"))
			Set listRetorno.sexo							= ""
			Set listRetorno.selecionado				= ""
			Set listRetorno.primAtendimento		= ..GetPrimeiroAtendimentoDisponivelProc(rSet.%Get("Sala"), rSet.%Get("LeitoEquipamento"), codGrupoAgendamento)
			Do arrayRetorno.%Push(listRetorno)
		}
	}Else{
		Set meuSQL = "Select Agenda.CodigoProfissional, Agenda.GrupoAgendamento "
		Set meuSQL = meuSQL _ "From SQLUser.INART As INART, SQLUser.MEDProviderAgenda As Agenda "
		Set meuSQL = meuSQL _ "Where Agenda.Company = 0 And INART.Company = 0 "
		Set meuSQL = meuSQL _ "And INART.ItemNumber = '"_pCodProcedimento_"' "
		Set meuSQL = meuSQL _ "And Agenda.GrupoAgendamento = INART.GrupodeAgendamento "
		Set meuSQL = meuSQL _ "And (Agenda.RestricaoGeral Is Null Or "
		Set meuSQL = meuSQL _ "(';'||Agenda.RestricaoGeral||';') Not Like '%;"_pCodProcedimento_";%') "
		if (pCodUnidade '= "") {
			Set meuSQL = meuSQL _ "And Agenda.Unidade in ('"_$Replace(pCodUnidade,",","','")_"') "
		}
		Set meuSQL = meuSQL _ "Group BY Agenda.CodigoProfissional"
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
		While rSet.%Next() {
			Set codGrupoAgendamento = rSet.%Get("GrupoAgendamento")
			Set codProfissional			= rSet.%Get("CodigoProfissional")
			Set listRetorno = {}
			Set listRetorno.codProfissional 	= codProfissional
			Set listRetorno.nomeProfissional	= $$SQLGetProviderName^VARSQL(codProfissional)
			Set listRetorno.sexo							= $$SQLGetProviderSexo^VARSQL(codProfissional, "E")
			Set listRetorno.selecionado				= $Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",pCodProcedimento,"PROF",codProfissional))
			Set listRetorno.primAtendimento		= ..GetPrimeiroAtendimentoDisponivel(codGrupoAgendamento, pCodProcedimento, codProfissional)
			Do arrayRetorno.%Push(listRetorno)
		}
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetHorarioProfissional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodAgendamento		= $Get(%request.Data("pCodAgendamento",1))
	Set pCodProcedimento	= $Get(%request.Data("pCodProcedimento",1))
	Set pCodProfissional	= $Get(%request.Data("pCodProfissional",1))
	Set pForcarEncaixe		= $Get(%request.Data("pForcarEncaixe",1))
	Set pSelectRangeSemana= $Get(%request.Data("pSelectRangeSemana",1))
	Set pRetroativo				= $Get(%request.Data("pRetroativo",1))

	If (pRetroativo = 1) {
		Set dataLimite = +$Horolog-30
		Set horaLimite = ""
		Set dataLimiteFinal = +$Horolog
		Set horaLimiteFinal = $Piece($Horolog,",",2) - 300
	}Else{
		Set dataLimite = +$Horolog
		Set horaLimite = $Piece($Horolog,",",2) + 300
	}

	Set rQtdeAgenda  = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,2)
	Set rAgendUnic 	 = +$Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,3)
	If (rAgendUnic = 1) Set rQtdeAgenda = 1

	Set listRetorno		= {}
	Set arrayDados 		= []
	Set arrayColunas 	= []
	If (pCodProcedimento = "") {
		Set listRetorno	= {}
		Set listRetorno.dados 	= arrayDados
		Set listRetorno.colunas = arrayColunas
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	Kill tDataAtendimento
	Set meuSQL = "Select Horario.DatadeAtendimento, Horario.HoradeAtendimento, Agenda.GrupoAgendamento, "
	Set meuSQL = meuSQL _ "Horario.TempodeAtendimento, Agenda.Unidade, Horario.Admissao, Horario.ReferenciaPai "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As Horario, "
	Set meuSQL = meuSQL _ "SQLUser.MEDProviderAgenda As Agenda, SQLUser.INART As INART "
	Set meuSQL = meuSQL _ "Where Horario.Company = 0 And Agenda.Company = 0 And INART.Company = 0 "
	Set meuSQL = meuSQL _ "And Horario.CodigoProfissional = Agenda.CodigoProfissional "
	Set meuSQL = meuSQL _ "And Horario.ReferenciaPai = Agenda.Sequencia "
	Set meuSQL = meuSQL _ "And Agenda.GrupoAgendamento = INART.GrupodeAgendamento "
	Set meuSQL = meuSQL _ "And Horario.CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And INART.ItemNumber = '"_pCodProcedimento_"' "
	Set meuSQL = meuSQL _ "And (Agenda.RestricaoGeral Is Null Or "
	Set meuSQL = meuSQL _ "(';'||Agenda.RestricaoGeral||';') Not Like '%;"_pCodProcedimento_";%') "
	If (pRetroativo = 1) {
		Set meuSQL = meuSQL _ "And (Horario.DatadeAtendimento > '"_dataLimite_"') "
		Set meuSQL = meuSQL _ "And (Horario.DatadeAtendimento < '"_dataLimiteFinal_"' "
		Set meuSQL = meuSQL _ "Or (Horario.DatadeAtendimento = '"_dataLimiteFinal_"' And HoradeAtendimento >= '"_horaLimiteFinal_"'))"
	}Else{
		Set meuSQL = meuSQL _ "And (Horario.DatadeAtendimento > '"_dataLimite_"' "
		Set meuSQL = meuSQL _ "Or (Horario.DatadeAtendimento = '"_dataLimite_"' And HoradeAtendimento >= '"_horaLimite_"'))"
	}
	If (pForcarEncaixe = 0) {
		Set meuSQL = meuSQL _ "And (Horario.Admissao Is Null Or Horario.Admissao = '') "
		Set meuSQL = meuSQL _ "And $$GetMEDReservaHorarioTemp^VARSQL(Horario.CodigoProfissional, "
		Set meuSQL = meuSQL _ "Horario.DatadeAtendimento, Horario.HoradeAtendimento, 20) = 0 "
	}
	If (pSelectRangeSemana '= "") {
		Set meuSQL = meuSQL _ "And $$SQLDiaSemana^VARSQL(Horario.DatadeAtendimento) In ('"_$Replace(pSelectRangeSemana,",","','")_"') "	
	}

	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		
		Set grupoAgendamento	= rSet.%Get("GrupoAgendamento")
		Set numAdmissao				= rSet.%Get("Admissao")
		Set dataAtendimento		= rSet.%Get("DatadeAtendimento")
		Set horaAtendimento		= rSet.%Get("HoradeAtendimento")
		Set tempoAtendimento	= rSet.%Get("TempodeAtendimento")
		Set unidade						= rSet.%Get("Unidade")
		Set referenciaPai			= rSet.%Get("ReferenciaPai")
		
		If (dataAtendimento'=""&&($Data(^MEDProviderAgendaAusencia(YM,pCodProfissional,dataAtendimento)))) {
			Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, pCodProfissional, dataAtendimento, 1))
			If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Continue
			}Else{
				If (horaAtendimento '= "") {
					If (horaAtendimento >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
							(horaAtendimento <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
						Continue
					}
				}
			}	
		}
		
		Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
		Do GetAgendaIntervalo^VARSQL(pCodProfissional, referenciaPai)
		If (rHoraIntervaloIni '= "") {
			If (horaAtendimento >= rHoraIntervaloIni && (horaAtendimento <= rhoraIntervaloFim))	{
				Continue											
			}
		}
		
		If (pForcarEncaixe = 1 && (numAdmissao '= "")) {
			If (##Class(VAR.CSP.VARCadAgendamento).GetQtdeEncaixe(pCodProfissional,dataAtendimento,horaAtendimento) = 0) {
				Continue	
			}	
		}

		Set yCodProcedimento = "%,"_pCodProcedimento_",%"
		Set yDataAtendimento = "%,"_dataAtendimento_",%"
		Set yHoraAtendimento = "%,"_horaAtendimento_",%"
		Set yDiaSemana			 = "%;"_$ZDate(dataAtendimento,10)_";%"
		Set temRestricao = ""
		&Sql(
			Select %ID Into :temRestricao From SQLUser.MEDProviderAgendaRestricao
			Where Company = 0 And CodigoProfissional = :pCodProfissional
			And ","||Restricao||"," Like :yCodProcedimento 
			And (
				IndicadorTodasDatas = 1 Or 
				(
					Datas Is Null And
					";"||NosDias||";" Like :yDiaSemana
				) Or
				","||Datas||"," Like :yDataAtendimento
			)
			And (IndicadorTodasHoras = 1 Or ","||Horas||"," Like :yHoraAtendimento)
		)
		If (temRestricao '= "") {
			Continue
		}
		If ('$Data(tDataAtendimento(dataAtendimento))) {
			Set tDataAtendimento(dataAtendimento) = ""
			Set tDataAtendimento = $Get(tDataAtendimento) + 1
			If (tDataAtendimento = 31) {
				Quit	
			}	
			Set listColuna = {}
			Set listColuna.dataField 				= $ZDate(dataAtendimento,4)
			Set listColuna.caption 					= $ZDate(dataAtendimento,4)
			Set listColuna.unidade 					= $$SQLGetLocationName^VARSQL(unidade)
			Set listColuna.tempoAtendimento = tempoAtendimento
			Set listColuna.alignment 				= "center"
			Set listColuna.width 						= "80"
			Do arrayColunas.%Push(listColuna)
			Set count = 0
		}
		Set objeto = arrayDados.%Get(count)
		If (objeto = "") {
			Set objeto = {}	
		}
		Do objeto.%Set($ZDate(dataAtendimento,4), $ZTime(horaAtendimento,2))
		Do objeto.%Set($ZDate(dataAtendimento,4)_"reservado", 0)
		If (numAdmissao '= "" || ($$GetMEDReservaHorarioTemp^VARSQL(pCodProfissional, dataAtendimento, horaAtendimento, 20) '= 0)) {
			Do objeto.%Set($ZDate(dataAtendimento,4)_"reservado", 1)
		}
		If ($Data(^MEDProviderEncaixe(YM, pCodProfissional, grupoAgendamento , dataAtendimento, horaAtendimento))) {
			Do objeto.%Set($ZDate(dataAtendimento,4)_"reservado", 2)
		}

		Do arrayDados.%Set(count, objeto)
		Set count = count + 1
	}

	Set listRetorno	= {}
	Set listRetorno.dados 	= arrayDados
	Set listRetorno.colunas = arrayColunas
	Set listRetorno.qtdeAgendaDe 	= rQtdeAgenda
	Do listRetorno.%ToJSON()

	Return $$$OK]]></Implementation>
</Method>

<Method name="GetHorarioSalaLeito">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodAgendamento		= $Get(%request.Data("pCodAgendamento",1))
	Set pCodProcedimento	= $Get(%request.Data("pCodProcedimento",1))
	Set pCodProfissional	= $Get(%request.Data("pCodProfissional",1))
	Set pCodSala 					= $Piece(pCodProfissional,"||",1)
	Set pCodLeito 				= $Piece(pCodProfissional,"||",2)
	Set pForcarEncaixe		= $Get(%request.Data("pForcarEncaixe",1))
	Set pSelectRangeSemana= $Get(%request.Data("pSelectRangeSemana",1))
	;	
	Set pRetroativo				= $Get(%request.Data("pRetroativo",1))

	If (pRetroativo = 1) {
		Set dataLimite = +$Horolog-30
		Set horaLimite = ""
		Set dataLimiteFinal = +$Horolog
		Set horaLimiteFinal = $Piece($Horolog,",",2) - 300
	}Else{
		Set dataLimite = +$Horolog
		Set horaLimite = $Piece($Horolog,",",2) + 300
	}
	;
	Set rQtdeAgenda  = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,2)
	Set rAgendUnic 	 = +$Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,3)
	If (rAgendUnic = 1) Set rQtdeAgenda = 1
	;
	Set listRetorno		= {}
	Set arrayDados 		= []
	Set arrayColunas 	= []
	If (pCodProcedimento = "") {
		Set listRetorno	= {}
		Set listRetorno.dados 	= arrayDados
		Set listRetorno.colunas = arrayColunas
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	Kill tDataAtendimento
	Set meuSQL = "Select Horario.DatadeAtendimento, Horario.HoradeAtendimento, Horario.TempodeAtendimento, Horario.CodigodoGrupo, "
	Set meuSQL = meuSQL _ "$$GetVARSalasAtendimentosUnidade^VARSQL(Horario.SaladeAtendimento) As Unidade "
	Set meuSQL = meuSQL _ "From SQLUser.VARGrupoAgendamentoHorario As Horario, "
	Set meuSQL = meuSQL _ "SQLUser.INART As INART Where Horario.Company = 0 And INART.Company = 0 "
	Set meuSQL = meuSQL _ "And Horario.CodigodoGrupo = INART.GrupodeAgendamento "
	Set meuSQL = meuSQL _ "And Horario.SaladeAtendimento = '"_pCodSala_"' "
	Set meuSQL = meuSQL _ "And Horario.LeitodeAtendimento = '"_pCodLeito_"' "
	Set meuSQL = meuSQL _ "And INART.ItemNumber = '"_pCodProcedimento_"' "
	If (pForcarEncaixe '= 1) {
		Set meuSQL = meuSQL _ "And (Horario.Admissao Is Null Or Horario.Admissao = '') "
		Set meuSQL = meuSQL _ "And $$GetMEDReservaHorarioTemp^VARSQL(Horario.SaladeAtendimento||'OO'||Horario.LeitodeAtendimento, "
		Set meuSQL = meuSQL _ "Horario.DatadeAtendimento, Horario.HoradeAtendimento, 20) = 0 "
	}
	If (pRetroativo = 1) {
		Set meuSQL = meuSQL _ "And (Horario.DatadeAtendimento > '"_dataLimite_"') "
		Set meuSQL = meuSQL _ "And (Horario.DatadeAtendimento < '"_dataLimiteFinal_"' "
		Set meuSQL = meuSQL _ "Or (Horario.DatadeAtendimento = '"_dataLimiteFinal_"' And HoradeAtendimento <= '"_horaLimiteFinal_"'))"
	}Else{
		Set meuSQL = meuSQL _ "And (Horario.DatadeAtendimento > '"_dataLimite_"' Or (Horario.DatadeAtendimento = '"_dataLimite_"' "
		Set meuSQL = meuSQL _ "And HoradeAtendimento >= '"_horaLimite_"'))"	
	}
	If (pSelectRangeSemana '= "") {
		Set meuSQL = meuSQL _ "And $$SQLDiaSemana^VARSQL(Horario.DatadeAtendimento) In ('"_$Replace(pSelectRangeSemana,",","','")_"') "	
	}
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		
		Set codigodoGrupo			= rSet.%Get("CodigodoGrupo")
		Set dataAtendimento		= rSet.%Get("DatadeAtendimento")
		Set horaAtendimento		= rSet.%Get("HoradeAtendimento")
		Set tempoAtendimento	= rSet.%Get("TempodeAtendimento")
		Set unidade						= rSet.%Get("Unidade")

		If ($Data(^VARGrupoAgendamentoAusencia(YM, codigodoGrupo, pCodSala, pCodLeito, dataAtendimento))) {
			Set xObjeto = $Get(^VARGrupoAgendamentoAusencia(YM, codigodoGrupo, pCodSala, pCodLeito, dataAtendimento, 1))
			If ($$$VARGrupoAgendamentoAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Continue
			}Else{
				If (horaAtendimento >= $$$VARGrupoAgendamentoAusenciaHoraInicial(xObjeto) && 
						(horaAtendimento <= $$$VARGrupoAgendamentoAusenciaHoraFinal(xObjeto))) {
					Continue
				}
			}	
		}

		
		If ('$Data(tDataAtendimento(dataAtendimento))) {
			Set tDataAtendimento(dataAtendimento) = ""
			Set tDataAtendimento = $Get(tDataAtendimento) + 1
			If (tDataAtendimento = 31) {
				Quit	
			}	
			Set listColuna = {}
			Set listColuna.dataField 				= $ZDate(dataAtendimento,4)
			Set listColuna.caption 					= $ZDate(dataAtendimento,4)
			Set listColuna.unidade 					= $$SQLGetLocationName^VARSQL(unidade)
			Set listColuna.tempoAtendimento = tempoAtendimento
			Set listColuna.alignment 				= "center"
			Set listColuna.width 						= "80"
			Do arrayColunas.%Push(listColuna)
			Set count = 0
		}
		Set objeto = arrayDados.%Get(count)
		If (objeto = "") {
			Set objeto = {}	
		}
		Do objeto.%Set($ZDate(dataAtendimento,4), $ZTime(horaAtendimento,2))
		Do objeto.%Set($ZDate(dataAtendimento,4)_"reservado", 0)
		Do arrayDados.%Set(count, objeto)
		Set count = count + 1
	}

	Set listRetorno	= {}
	Set listRetorno.dados 				= arrayDados
	Set listRetorno.colunas 			= arrayColunas
	Set listRetorno.qtdeAgendaDe 	= rQtdeAgenda
	Do listRetorno.%ToJSON()

	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmPreferenciaSexo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pCodProcedimento,pTipo,pOpcao,pValor</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	If (pTipo = "SEXO") {
		If (pValor = 0) {
			Kill ^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento, pTipo, pOpcao) 
		}Else{
			Set ^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento, pTipo, pOpcao) = ""
		}
	}Else{
		If (pValor = 0) {
			Kill ^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento, pTipo, pOpcao) 
		}Else{
			Set ^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento, pTipo, pOpcao) = ""
		}
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="InserirProcedimentoBuscar">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento="",pCodProcedimento="",pYBED="",pSolicitante=""</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	If (pCodAgendamento = "") {
		Set YBED							= $Get(%request.Data("YBED",1))
		Set pCodAgendamento 	= $Get(%request.Data("pCodAgendamento",1))
		Set pCodProcedimento 	= $Get(%request.Data("pCodProcedimento",1))
	}Else{
		Set YBED = pYBED
	}

	Set codPaciente = $Piece(^VARAgendamento(YM, pCodAgendamento, 1),Y,1)
	 
	Set codProfissional = ""
	If $Data(^MEDPatientFavoritos(YM, codPaciente, pCodProcedimento)) {
		Set codProfissional = $Piece(^MEDPatientFavoritos(YM, codPaciente, pCodProcedimento,1),Y,1)
	}
  
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,1) = pSolicitante
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,2) = 1
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,3) = ""
	Set:codProfissional'="" ^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento, "PROF", codProfissional) = ""
	Return $$$OK]]></Implementation>
</Method>

<Method name="QtdeProcedimentoBuscar">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pCodProcedimento,pQtdeAgenda</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	If (pQtdeAgenda <= 0) Set pQtdeAgenda = 1

	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,2) = pQtdeAgenda
	Set:pQtdeAgenda=1 $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,3) = ""
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="AgendaUnica">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pCodProcedimento,pValor</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento),Y,3) = pValor

	Return $$$OK]]></Implementation>
</Method>

<Method name="RemoverProcedimentoBuscar">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pCodProcedimento</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Kill ^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pCodProcedimento)
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmSolicitante">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED								= $Get(%request.Data("YBED",1))
	Set pCodAgendamento 		= $Get(%request.Data("pCodAgendamento",1))
	Set pSolicitante				= $Get(%request.Data("pSolicitante",1))
	;	
	If (pCodAgendamento = "") Return $$$OK
	;
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set $$$VARAgendamentoSolicitante(objVARAgendamento) 				= pSolicitante
	Set strStatus = $$$Save("VARAgendamento", pCodAgendamento, objVARAgendamento, $$$YES)	
	Return strStatus]]></Implementation>
</Method>

<Method name="GetHorarios">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED								= $Get(%request.Data("YBED",1))
	Set pCodAgendamento 		= $Get(%request.Data("pCodAgendamento",1))
	Set pUnidade 						= $Get(%request.Data("pUnidade",1))
	Set pDataInicial 				= $Get(%request.Data("pDataInicial",1))
	Set pDataFinal 					= $Get(%request.Data("pDataFinal",1))
	Set pHoraInicial 				= $Get(%request.Data("pHoraInicial",1))
	Set pHoraFinal 					= $Get(%request.Data("pHoraFinal",1))
	Set pSelectRangeSemana 	= $Get(%request.Data("pSelectRangeSemana",1))
	Set pAgendarSeparado		= $Get(%request.Data("pAgendarSeparado",1))
	Set pSolicitante				= $Get(%request.Data("pSolicitante",1))
	Set pRetroativo					= $Get(%request.Data("pRetroativo",1))
	Set pCcodUltimoMedicoSol = $Get(%request.Data("pCcodUltimoMedicoSol",1))
	;	
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set $$$VARAgendamentoSolicitante(objVARAgendamento) 				= pSolicitante
	Set strStatus = $$$Save("VARAgendamento", pCodAgendamento, objVARAgendamento, $$$YES)	
	;
	If (pDataInicial = "") Set pDataInicial = +$Horolog
	Else  Set pDataInicial = $ZDateH(pDataInicial,3)
	If (pDataFinal = "") Set pDataFinal = +$Horolog + 7
	Else  Set pDataFinal = $ZDateH(pDataFinal,3)
	If (pDataInicial > pDataFinal) Set pDataFinal = pDataInicial + 7
	;
	If (pHoraInicial = "") Set pHoraInicial = $ZTimeH("06:00",2)
	Else  Set pHoraInicial = $ZTimeH(pHoraInicial,2)
	If (pHoraFinal = "") Set pHoraFinal = $ZTimeH("20:00",2)
	Else  Set pHoraFinal = $ZTimeH(pHoraFinal,2)
	If (pHoraInicial > pHoraFinal) Set pHoraFinal = pHoraInicial
	;
	Set (pDataMarcado, pHoraMarcado) = ""
	;
	Set arrayRetorno = []
	If (pCodAgendamento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Kill ^mtemp.VARAgendamento(pCodAgendamento, "Horarios")
	Set xCodAgendamento = $Replace(pCodAgendamento,"/"," ")
	Set codReserva = ""
	For {
		Set codReserva = $Order(^MEDReservaHorarioTemps(YM, 10, xCodAgendamento, codReserva))
		Quit:codReserva=""
		
		Set strStatus = $$$Kill("MEDReservaHorarioTemp", codReserva)	
	}
	Job ..LiberaReservaSemAgendamento()
	Kill ordProcedimentoNaoAgend
	;
	Set qtdeTentativas = 0
	For {
		Set codProcedimento = "", qtdeTentativas = qtdeTentativas + 1
		For {
			Set codProcedimento = $Order(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", codProcedimento))
			Quit:codProcedimento=""

			Set rSolicitante = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", codProcedimento),Y,1)

			Set rQtdeAgenda  = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", codProcedimento),Y,2)
			Set rAgendUnic 	 = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", codProcedimento),Y,3)
			If (+rAgendUnic = 1) Set rQtdeAgenda = 1

			Set objINART = $Get(^INART(YM, codProcedimento, 1))
			Set grupoAgendamento = $$$INARTGrupodeAgendamento(objINART)
			Set necessidadeJejum = $$$INARTNecessidadeJejum(objINART)
			
			If (grupoAgendamento = "") {
				Set (gConvenio, gPlanodeSaude, gNumdaCarteirinha, gVencimentodaCarteirinha) = ""
				Set meuSQL = "Select Sequencia, DataAtendimento, HoraAtendimento, Convenio, PlanodeSaude, "
				Set meuSQL = meuSQL _ "NumdaCarteirinha, VencimentodaCarteirinha From SQLUser.VARAgendamentoProcedimentos "
				Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
				Set meuSQL = meuSQL _ "And Cancelado = 0 And Procedimento = '"_codProcedimento_"'"
				Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
				While (rSet.%Next()) {
					Set gConvenio 								= rSet.%Get("Convenio") 
					Set gPlanodeSaude 						= rSet.%Get("PlanodeSaude")
					Set gNumdaCarteirinha 				= rSet.%Get("NumdaCarteirinha")
					Set gVencimentodaCarteirinha	= rSet.%Get("VencimentodaCarteirinha")			
				}
				Set ordProcedimentoNaoAgend(codProcedimento) = rSolicitante_Y_gConvenio_Y_gPlanodeSaude_Y_gNumdaCarteirinha_Y_gVencimentodaCarteirinha
				Continue
			}
			///Procedimento com agendamento vinculado ao Profissional
			Set rCodProfissional		= ""
			Set rDatadeAtendimento	= ""
			Set rHoradeAtendimento	= ""
			Set rTempodeAtendiment	= ""

			Set pSexo 		= ""
			if ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"SEXO"))) {
				If ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"SEXO","M")))	Set pSexo = pSexo _$Select(pSexo="":"",1:"','")_ 1
				If ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"SEXO","F")))	Set pSexo = pSexo _$Select(pSexo="":"",1:"','")_ 2
			}
			Set pProfSel	= ""
			if ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"PROF"))) {
				Set xCodProfissional = ""
				For {
					Set xCodProfissional = $Order(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento,"PROF",xCodProfissional))
					Quit:xCodProfissional=""
					Set pProfSel = pProfSel _$Select(pProfSel="":"",1:"','")_ xCodProfissional
				}
			}
			
			Set (rSeqAgendamento, gDatadeAtendimento, gHoradeAtendimento) = ""
			Set (gConvenio, gPlanodeSaude, gNumdaCarteirinha, gVencimentodaCarteirinha) = ""
			Set meuSQL = "Select Sequencia, DataAtendimento, HoraAtendimento, Convenio, PlanodeSaude, "
			Set meuSQL = meuSQL _ "NumdaCarteirinha, VencimentodaCarteirinha From SQLUser.VARAgendamentoProcedimentos "
			Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
			Set meuSQL = meuSQL _ "And Cancelado = 0 And Procedimento = '"_codProcedimento_"'"
			Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
			While (rSet.%Next()) {
				Set rSeqAgendamento 					= rSet.%Get("Sequencia")
				Set gDatadeAtendimento				= rSet.%Get("DataAtendimento")
				Set gHoradeAtendimento 				= rSet.%Get("HoraAtendimento")
				Set gConvenio 								= rSet.%Get("Convenio") 
				Set gPlanodeSaude 						= rSet.%Get("PlanodeSaude")
				Set gNumdaCarteirinha 				= rSet.%Get("NumdaCarteirinha")
				Set gVencimentodaCarteirinha	= rSet.%Get("VencimentodaCarteirinha")			
			}
			If (rSeqAgendamento '= "") {
				Set rDatadeAtendimento	= gDatadeAtendimento
				Set rHoradeAtendimento 	= gHoradeAtendimento
			}Else{
				If ($Data(^MEDProviderAgendas(YM, 10, grupoAgendamento))) {
					Set strStatus = ..GetHorarioAgendaProfissional(pCodAgendamento, codProcedimento, grupoAgendamento, pUnidade, 
													pDataInicial, pDataFinal, pHoraInicial, pHoraFinal, pDataMarcado, pHoraMarcado,  
													pSelectRangeSemana, pSexo, pProfSel, pAgendarSeparado, rQtdeAgenda, pRetroativo, .rCodProfissional, .rDatadeAtendimento, 
													.rHoradeAtendimento, .rTempodeAtendiment, 0) 
				}Else{
					Set strStatus = ..GetHorarioAgendaProcedimento(pCodAgendamento, codProcedimento, grupoAgendamento, pUnidade, 
													pDataInicial, pDataFinal, pHoraInicial, pHoraFinal, pDataMarcado, pHoraMarcado, 
													pSelectRangeSemana, pSexo, pProfSel, pAgendarSeparado, rQtdeAgenda, pRetroativo, .rCodProfissional, .rDatadeAtendimento, 
													.rHoradeAtendimento, .rTempodeAtendiment, 0) 
				}
			}
			If (rDatadeAtendimento = "") Set rDatadeAtendimento = 99999999
			If (rHoradeAtendimento = "") Set rHoradeAtendimento = 99999999
			If (necessidadeJejum = 1) {
				Set rDatadeAtendimento = 0
				Set rHoradeAtendimento = 0
			}
			Set ordProcedimento(rDatadeAtendimento,rHoradeAtendimento,codProcedimento) = rSolicitante_Y_gConvenio_Y_gPlanodeSaude_Y_gNumdaCarteirinha_Y_gVencimentodaCarteirinha
		}	
		;
		Kill dataProcedimentos
		Set xDataAtend = ""
		For {
			Set xDataAtend = $Order(ordProcedimento(xDataAtend))
			Quit:xDataAtend=""
			Set xHoraAtend = ""
			For {
				Set xHoraAtend = $Order(ordProcedimento(xDataAtend, xHoraAtend))
				Quit:xHoraAtend=""
				Set xCodProcedimento = ""
				For {
					Set xCodProcedimento = $Order(ordProcedimento(xDataAtend, xHoraAtend, xCodProcedimento))
					Quit:xCodProcedimento=""

					Set objINART = $Get(^INART(YM, xCodProcedimento, 1))
					Set grupoAgendamento = $$$INARTGrupodeAgendamento(objINART)
					
					///Procedimento com agendamento vinculado ao Profissional
					Set rSolicitante				= $Piece(ordProcedimento(xDataAtend, xHoraAtend, xCodProcedimento),Y,1)
					Set rCodProfissional		= ""
					Set rDatadeAtendimento	= ""
					Set rHoradeAtendimento	= ""
					Set rTempodeAtendiment	= ""

					Set rQtdeAgenda  = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", xCodProcedimento),Y,2)
					Set rAgendUnic 	 = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", xCodProcedimento),Y,3)
					If (+rAgendUnic = 1) Set rQtdeAgenda = 1
					
					Set pSexo 		= ""
					if ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",xCodProcedimento,"SEXO"))) {
						If ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",xCodProcedimento,"SEXO","M")))	Set pSexo = pSexo _$Select(pSexo="":"",1:"','")_ 1
						If ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",xCodProcedimento,"SEXO","F")))	Set pSexo = pSexo _$Select(pSexo="":"",1:"','")_ 2
					}
					Set pProfSel	= ""
					if ($Data(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",xCodProcedimento,"PROF"))) {
						Set xCodProfissional = ""
						For {
							Set xCodProfissional = $Order(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",xCodProcedimento,"PROF",xCodProfissional))
							Quit:xCodProfissional=""
							Set pProfSel = pProfSel _$Select(pProfSel="":"",1:"','")_ xCodProfissional
						}
					}
				
					Set rSeqAgendamento = ""
					Set meuSQL = "Select Sequencia, DataAtendimento, HoraAtendimento, Profissional, CodigodaSala, "
					Set meuSQL = meuSQL _ "CodigodoLeito, Convenio, PlanodeSaude, "
					Set meuSQL = meuSQL _ "NumdaCarteirinha, VencimentodaCarteirinha "
					Set meuSQL = meuSQL _ "From SQLUser.VARAgendamentoProcedimentos "
					Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
					Set meuSQL = meuSQL _ "And Cancelado = 0 And Procedimento = '"_xCodProcedimento_"'"
					Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
					While (rSet.%Next()) {
						Set rSeqAgendamento 		= rSet.%Get("Sequencia")
						Set rCodProfissional		= rSet.%Get("Profissional")
						Set rDatadeAtendimento	= rSet.%Get("DataAtendimento")
						Set rHoradeAtendimento	= rSet.%Get("HoraAtendimento")
						Set rCodSala						= rSet.%Get("CodigodaSala")
						Set rCodLeito						= rSet.%Get("CodigodoLeito")
						Set gConvenio 								= rSet.%Get("Convenio") 
						Set gPlanodeSaude 						= rSet.%Get("PlanodeSaude")
						Set gNumdaCarteirinha 				= rSet.%Get("NumdaCarteirinha")
						Set gVencimentodaCarteirinha	= rSet.%Get("VencimentodaCarteirinha")			
						If (rCodProfissional = "") {
							Set rCodProfissional = rCodSala_"||"_rCodLeito	
						}
						Set rTempodeAtendiment	= ""
						Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, rCodProfissional, rDatadeAtendimento,rHoradeAtendimento, 1))
						Set rTempodeAtendiment 	= $$$MEDProviderAgendaHorarioTempodeAtendimento(objMEDProviderAgendaHorario) 
					}
					If (rSeqAgendamento = "") {
						If ($Data(^MEDProviderAgendas(YM, 10, grupoAgendamento))) {
							Set strStatus = ..GetHorarioAgendaProfissional(pCodAgendamento, xCodProcedimento, grupoAgendamento, 
															pUnidade, pDataInicial, pDataFinal, pHoraInicial, pHoraFinal, pDataMarcado, pHoraMarcado, 
															pSelectRangeSemana,	pSexo, pProfSel, pAgendarSeparado, rQtdeAgenda, pRetroativo, .rCodProfissional, .rDatadeAtendimento, 
															.rHoradeAtendimento, .rTempodeAtendiment, 1) 
						}Else{
							Set strStatus = ..GetHorarioAgendaProcedimento(pCodAgendamento, xCodProcedimento, grupoAgendamento, 
															pUnidade, pDataInicial, pDataFinal, pHoraInicial, pHoraFinal, pDataMarcado, pHoraMarcado, 
															pSelectRangeSemana, pSexo, pProfSel, pAgendarSeparado, rQtdeAgenda, pRetroativo, .rCodProfissional, .rDatadeAtendimento, 
															.rHoradeAtendimento, .rTempodeAtendiment, 1) 
						}
					}
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,1) = rCodProfissional
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,2) = rDatadeAtendimento
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,3) = rHoradeAtendimento
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,4) = rTempodeAtendiment
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,5) = 0
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,6) = 1
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,7) = rSolicitante
					If ($Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,7) = "" && (pCcodUltimoMedicoSol'="")) {
						Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,7) = pCcodUltimoMedicoSol
					}
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,9) = gConvenio
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,8) = gPlanodeSaude
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,10) = gNumdaCarteirinha
					Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,11) = gVencimentodaCarteirinha
					;If (rDatadeAtendimento '= "") Set pDataInicial = rDatadeAtendimento
					;If (rHoradeAtendimento '= "") Set pHoraInicial = rHoradeAtendimento + rTempodeAtendiment
					If (rDatadeAtendimento '= "") Set pDataMarcado = rDatadeAtendimento
					If (rHoradeAtendimento '= "") Set pHoraMarcado = rHoradeAtendimento + rTempodeAtendiment
					;
					Set $Piece(dataProcedimentos,Y,2) = $Piece($Get(dataProcedimentos),Y,2) + 1 	
					If ('$Data(dataProcedimentos(pDataInicial))) {
						Set $Piece(dataProcedimentos,Y,1) = $Piece($Get(dataProcedimentos),Y,1) + 1 	
						Set dataProcedimentos(pDataInicial) = ""
					}
					Set dataProcedimentos(pDataInicial, xCodProcedimento) = ""
					
				}
			}
		}
		If (pAgendarSeparado '= 1 && ($Piece($Get(dataProcedimentos),Y,1) > 1) && (qtdeTentativas < 6)) {
			Set pDataInicial = $Order(dataProcedimentos(""),-1)		
			Continue
		}
		Quit
	}
	
	Set xCodProcedimento = ""
	For {
		Set xCodProcedimento = $Order(ordProcedimentoNaoAgend(xCodProcedimento))
		Quit:xCodProcedimento=""
		
		Set rSolicitante 						= $Piece(ordProcedimentoNaoAgend(xCodProcedimento),Y,1)
		Set gConvenio								= $Piece(ordProcedimentoNaoAgend(xCodProcedimento),Y,2) 
		Set gPlanodeSaude						= $Piece(ordProcedimentoNaoAgend(xCodProcedimento),Y,3) 
		Set gNumdaCarteirinha				= $Piece(ordProcedimentoNaoAgend(xCodProcedimento),Y,4)
		Set gVencimentodaCarteirinha= $Piece(ordProcedimentoNaoAgend(xCodProcedimento),Y,5)
		
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,1) = ""
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,2) = ""
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,3) = ""
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,4) = ""
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,5) = 0
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,6) = 0
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,7) = rSolicitante
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,9) = gConvenio
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,8) = gPlanodeSaude
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,10) = gNumdaCarteirinha
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xCodProcedimento),Y,11) = gVencimentodaCarteirinha
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="SelecionaDataHora">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED							= $Get(%request.Data("YBED",1))
	Set pCodAgendamento 	= $Get(%request.Data("pCodAgendamento",1))
	Set pCodProcedimento 	= $Get(%request.Data("pCodProcedimento",1))
	Set pCodProfissional 	= $Get(%request.Data("pCodProfissional",1))
	Set pEncaixe					= $Get(%request.Data("pEncaixe",1))
	Set pQtdeSelProcDe		= $Get(%request.Data("pQtdeSelProcDe",1))
	Set pArrayDatas				= $Get(%request.Data("pArrayDatas",1))
	
	Set pCodSala 					= ""
	Set pCodLeito					= ""
	If ($Length(pCodProfissional,"||") = 2 ){
		Set pCodSala 				= $Piece(pCodProfissional,"||",1)
		Set pCodLeito				= $Piece(pCodProfissional,"||",2)
	}
	Set pDataAtendimento 	= $ZDateH($Get(%request.Data("pDataAtendimento",1)),4)
	Set pHoraAtendimento 	= $ZTimeH($Get(%request.Data("pHoraAtendimento",1)),2)
	Set pTempoAtendimento	= $Get(%request.Data("pTempoAtendimento",1))

	Kill ^zzJULIO
	s ^zzJULIO($now()) = pCodProfissional_"~"_pEncaixe

	Set listRetorno = {}
	
	If ($Length(pCodProfissional,"||") = 2 ){
		Lock +^mtemp.GetHorarioProc:30
		If '$Test {
			Set listRetorno.status = 0
			Set listRetorno.mensagem = "Erro ao reservar horário."
			Do listRetorno.%ToJSON()
			Return $$$OK
		}

		If (pQtdeSelProcDe <= 1) {
			Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, pCodSala,pCodLeito,pDataAtendimento,pHoraAtendimento,1))
			If ($$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)) '= "" {
				Set listRetorno.status = 0
				Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
				Do listRetorno.%ToJSON()
				Lock -^mtemp.GetHorarioProc
				Return $$$OK
			}
			
			If ($$GetMEDReservaHorarioTemp^VARSQL(pCodSala_"OO"_pCodLeito, pDataAtendimento, pHoraAtendimento, 20)) {
				Set listRetorno.status = 0
				Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
				Do listRetorno.%ToJSON()
				Lock -^mtemp.GetHorarioProc
				Return $$$OK
			}
			Set tipo = "PROC"
		}Else{
			Set sair = 0
			For i = 1 : 1 : pQtdeSelProcDe { 
				Set conteudo = $Piece(pArrayDatas,",",i)
				Set pDataAtendimento 	= $ZDateH($Piece(conteudo,Y,1),4)
				Set pHoraAtendimento 	= $ZTimeH($Piece(conteudo,Y,2),2)
				Set pTempoAtendimento	= $Piece(conteudo,Y,3)
				Set pEncaixe					= $Piece(conteudo,Y,4)
				
				Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, pCodSala,pCodLeito,pDataAtendimento,pHoraAtendimento,1))
				If ($$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)) '= "" {
					Set listRetorno.status = 0
					Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
					Do listRetorno.%ToJSON()
					Lock -^mtemp.GetHorarioProc
					Set sair = 1
					Quit
				}
				
				If ($$GetMEDReservaHorarioTemp^VARSQL(pCodSala_"OO"_pCodLeito, pDataAtendimento, pHoraAtendimento, 20)) {
					Set listRetorno.status = 0
					Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
					Do listRetorno.%ToJSON()
					Lock -^mtemp.GetHorarioProc
					Set sair = 1
					Quit
				}
				Return:sair=1 $$$OK
				Set tipo = "PROC"
			}
		}
		
	}Else{
		
		Lock +^mtemp.GetHorarioProf:30
		If '$Test {
			Set listRetorno.status = 0
			Set listRetorno.mensagem = "Erro ao reservar horário."
			Do listRetorno.%ToJSON()
			Return $$$OK
		}

		Set pGrupodeAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, pCodProcedimento, 1)))

		s ^mtemp.JULIO1($now()) = pQtdeSelProcDe_"|"_pGrupodeAgendamento_"|"_pDataAtendimento_"|"_pHoraAtendimento

		If (pQtdeSelProcDe <= 1) {
			If ('$Data(^MEDReservaHorarioTemps(0,30,pGrupodeAgendamento,pDataAtendimento,pHoraAtendimento))) {
				Set pEncaixe = 0
			}Else{
				s ^mtemp.JULIO1($now(),1) = pEncaixe
				If (pEncaixe = 0) {
					Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, pCodProfissional,pDataAtendimento,pHoraAtendimento,1))
					If ($$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)) '= "" {
						Set listRetorno.status = 0
						Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
						Do listRetorno.%ToJSON()
						Lock -^mtemp.GetHorarioProf
						Return $$$OK
					}
					
					If ($$GetMEDReservaHorarioTemp^VARSQL(pCodProfissional, pDataAtendimento, pHoraAtendimento, 20)) {
						Set listRetorno.status = 0
						Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
						Do listRetorno.%ToJSON()
						Lock -^mtemp.GetHorarioProf
						Return $$$OK
					}
				}Else{
					If ($Data(^MEDProviderEncaixe(YM, pCodProfissional, pGrupodeAgendamento, pDataAtendimento, pHoraAtendimento))) {
						Set listRetorno.status = 0
						Set listRetorno.mensagem = "Horário de Encaixe já reservado, favor escolher outra opção."
						Do listRetorno.%ToJSON()
						Lock -^mtemp.GetHorarioProf
						Return $$$OK
					}
				}
			}
		}Else{
			Set sair = 0
			For i = 1 : 1 : pQtdeSelProcDe { 
				Set conteudo = $Piece(pArrayDatas,",",i)
				Set pDataAtendimento 	= $ZDateH($Piece(conteudo,Y,1),4)
				Set pHoraAtendimento 	= $ZTimeH($Piece(conteudo,Y,2),2)
				Set pTempoAtendimento	= $Piece(conteudo,Y,3)
				Set pEncaixe					= $Piece(conteudo,Y,4)

				If ($Data(^MEDReservaHorarioTemps(0,30,pGrupodeAgendamento,pDataAtendimento,pHoraAtendimento))) {
					Set pEncaixe = 0
				}Else{
					If (pEncaixe = 0) {
						Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, pCodProfissional,pDataAtendimento,pHoraAtendimento,1))
						If ($$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)) '= "" {
							Set listRetorno.status = 0
							Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
							Do listRetorno.%ToJSON()
							Lock -^mtemp.GetHorarioProf
							Set sair = 1
							Quit
						}
						
						If ($$GetMEDReservaHorarioTemp^VARSQL(pCodProfissional, pDataAtendimento, pHoraAtendimento, 20)) {
							Set listRetorno.status = 0
							Set listRetorno.mensagem = "Horário já reservado, favor escolher outra opção."
							Do listRetorno.%ToJSON()
							Lock -^mtemp.GetHorarioProf
							Set sair = 1
							Quit
						}
					}Else{
						If ($Data(^MEDProviderEncaixe(YM, pCodProfissional, pGrupodeAgendamento, pDataAtendimento, pHoraAtendimento))) {
							Set listRetorno.status = 0
							Set listRetorno.mensagem = "Horário de Encaixe já reservado, favor escolher outra opção."
							Do listRetorno.%ToJSON()
							Lock -^mtemp.GetHorarioProf
							Set sair = 1
							Quit
						}
					}
				}
			}
			Return:sair=1 $$$OK
		}
		Set tipo = "PROF"
	}
	Set dataAtual = +$Horolog
	Set horaAtual	= $Piece($Horolog,",",2)

	If (pQtdeSelProcDe <= 1) {
		Set objeto = ""
		Set pGrupodeAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, pCodProcedimento, 1)))
		Set $$$MEDReservaHorarioTempTipoAgendamento(objeto) 			= tipo
		Set $$$MEDReservaHorarioTempCodigodoAgendamento(objeto) 	= pCodAgendamento
		Set $$$MEDReservaHorarioTempCodigodoProfissional(objeto)	= pCodProfissional
		Set $$$MEDReservaHorarioTempGrupoAgendamento(objeto) 			= pGrupodeAgendamento
		Set $$$MEDReservaHorarioTempDataAtendimento(objeto) 			= pDataAtendimento
		Set $$$MEDReservaHorarioTempHoraAtendimento(objeto) 			= pHoraAtendimento
		Set $$$MEDReservaHorarioTempCodigodoProcedimento(objeto) 	= pCodProcedimento
		Set $$$MEDReservaHorarioTempDatadeReserva(objeto) 				= dataAtual
		Set $$$MEDReservaHorarioTempHoradeReserva(objeto) 				= horaAtual
		Set chave = $$GetNextNumber^COMUtils("MEDReservaHorarioTemp","")
		Set strStatus = $$$Save("MEDReservaHorarioTemp", chave, objeto, $$$YES)
	}Else{
		Set sair = 0
		For i = 1 : 1 : pQtdeSelProcDe { 
			Set conteudo = $Piece(pArrayDatas,",",i)
			Set pDataAtendimento 	= $ZDateH($Piece(conteudo,Y,1),4)
			Set pHoraAtendimento 	= $ZTimeH($Piece(conteudo,Y,2),2)
			Set pTempoAtendimento	= $Piece(conteudo,Y,3)
			Set pEncaixe					= $Piece(conteudo,Y,4)

			Set objeto = ""
			Set pGrupodeAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, pCodProcedimento, 1)))
			Set $$$MEDReservaHorarioTempTipoAgendamento(objeto) 			= tipo
			Set $$$MEDReservaHorarioTempCodigodoAgendamento(objeto) 	= pCodAgendamento
			Set $$$MEDReservaHorarioTempCodigodoProfissional(objeto)	= pCodProfissional
			Set $$$MEDReservaHorarioTempGrupoAgendamento(objeto) 			= pGrupodeAgendamento
			Set $$$MEDReservaHorarioTempDataAtendimento(objeto) 			= pDataAtendimento
			Set $$$MEDReservaHorarioTempHoraAtendimento(objeto) 			= pHoraAtendimento
			Set $$$MEDReservaHorarioTempCodigodoProcedimento(objeto) 	= pCodProcedimento
			Set $$$MEDReservaHorarioTempDatadeReserva(objeto) 				= dataAtual
			Set $$$MEDReservaHorarioTempHoradeReserva(objeto) 				= horaAtual
			Set chave = $$GetNextNumber^COMUtils("MEDReservaHorarioTemp","")
			Set strStatus = $$$Save("MEDReservaHorarioTemp", chave, objeto, $$$YES)
		}
	}

	Set meuSQLX = "Select Sequencia From SQLUser.MEDReservaHorarioTemp " _
			"Where Company = 0  And CodigodoAgendamento = '"_pCodAgendamento_"' " _
			"And TipoAgendamento = '"_tipo_"' " _ ;And CodigodoProfissional = '"_pCodProfissional_"' " _
			"And CodigodoProcedimento = '"_pCodProcedimento_"' " _
			"And (DatadeReserva < '"_dataAtual_"' " _
			"Or (DatadeReserva = '"_dataAtual_"' And %Internal(HoradeReserva) < '"_horaAtual_"')) "
			
	Set rSetX = ##class(%SQL.Statement).%ExecDirect("",.meuSQLX)
	While (rSetX.%Next()) {
		Set strStatus = $$$Kill("MEDReservaHorarioTemp", rSetX.%Get("Sequencia")) 
	}

	Set meuSQLX = "Select Sequencia From SQLUser.MEDReservaHorarioTemp " _
			"Where Company = 0  And CodigodoAgendamento = '"_pCodAgendamento_"' " _
			"And TipoAgendamento = '"_tipo_"' And CodigodoProcedimento <> '"_pCodProcedimento_"' "
	Set rSetX = ##class(%SQL.Statement).%ExecDirect("",.meuSQLX)
	While (rSetX.%Next()) {
		Set objeto = $Get(^MEDReservaHorarioTemp(YM, rSetX.%Get("Sequencia"), 1))
		Set $$$MEDReservaHorarioTempDatadeReserva(objeto) = dataAtual
		Set $$$MEDReservaHorarioTempHoradeReserva(objeto) = horaAtual
		Set strStatus = $$$Save("MEDReservaHorarioTemp", rSetX.%Get("Sequencia"), objeto, $$$YES) 
	}
	
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pCodProcedimento),Y,1) = pCodProfissional
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pCodProcedimento),Y,2) = pDataAtendimento
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pCodProcedimento),Y,3) = pHoraAtendimento
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pCodProcedimento),Y,4) = pTempoAtendimento
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pCodProcedimento),Y,5) = pEncaixe
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pCodProcedimento),Y,6) = 1

	Job ..LiberaReservaSemAgendamento()

	If ($Length(pCodProfissional,"||") = 2 ){
		Lock -^mtemp.GetHorarioProc
	}Else{
		Lock -^mtemp.GetHorarioProf
	}
	
	Set listRetorno.status = 1
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetListarHorarios">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pCodPlanoSaude	= $Get(%request.Data("pCodPlanoSaude",1))
	Set pCodConvenio		= $Get(%request.Data("pCodConvenio",1))
	
	Set arrayRetorno = []
	
	If (pCodAgendamento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))

	Set codPaciente 	= $Piece(^VARAgendamento(YM, pCodAgendamento, 1),Y,1)
	
	Set codProcedimento = ""
	For {
		Set codProcedimento = $Order(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento))
		Quit:codProcedimento=""
		
		Set rCodProfissional		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",1)
		Set rDatadeAtendimento	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",2)
		Set rHoradeAtendimento	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",3)
		Set rTempodeAtendiment	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",4)
		Set rEncaixe						= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",5)
		Set rRequerAgendamento	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",6)
		Set rSolicitante				= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",7)
		
		Set rCodConvenio				= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",8)
		Set rCodPlanoSaude			= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",9)
		Set rNumCarteirinha			= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",10)
		Set rVencCarteirinha		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",11)
		Set rEmpresaContratante	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",12)

		If (rCodPlanoSaude = "") Set rCodPlanoSaude = pCodPlanoSaude
		If (rCodConvenio = "") Set rCodConvenio = pCodConvenio
		;
		If (rSolicitante '= "" && ((","_$$$VARAgendamentoSolicitante(objVARAgendamento)_",") '[ (","_rSolicitante_","))) {
			Set rSolicitante = ""
			Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,7) = ""
			Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", codProcedimento),Y,1) = ""
		}		
		;
		If ($Length(rCodProfissional,"||") = 2) {
			Set codSala 		= $Piece(rCodProfissional,"||",1)
			Set codLeito 		= $Piece(rCodProfissional,"||",2)
			Set objVARSalasAtendimentos = $Get(^VARSalasAtendimentos(0, codSala, 1))
			Set codUnidade	= $$$VARSalasAtendimentosUnidade(objVARSalasAtendimentos)
			Set objINART = $Get(^INART(YM, codProcedimento, 1))
			Set favorito = 0
		}Else{
			Set objMEDProviderAgendaHorario = ""
			If (rCodProfissional '= "" && (rHoradeAtendimento '= "") && (rDatadeAtendimento '= "")) {
				Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, 1))
			}
			Set referenciaPai = $$$MEDProviderAgendaHorarioReferenciaPai(objMEDProviderAgendaHorario)
			Set objMEDProviderAgenda = ""
			If (referenciaPai '= "") {
				Set objMEDProviderAgenda = $Get(^MEDProviderAgenda(YM, rCodProfissional, referenciaPai, 1))
			}
			Set codUnidade	= $$$MEDProviderAgendaUnidade(objMEDProviderAgenda)
			Set codSala 		= $$$MEDProviderAgendaLocal1(objMEDProviderAgenda)
			
			Set objINART = $Get(^INART(YM, codProcedimento, 1))
			
			Set favorito = 0
			If (rCodProfissional '= "" && 
					($Data(^MEDPatientFavoritos(YM, codPaciente, codProcedimento))) && 
					($Piece(^MEDPatientFavoritos(YM, codPaciente, codProcedimento, 1),Y,1) = rCodProfissional)) {
				Set favorito = 1
			}
		}
		;
		Set problemaConvenio = "", trocarItem = "", dataFinAteTroc = "", codTISS = ""
		If (rCodPlanoSaude = "") {
			Set problemaConvenio = "Informar o plano de saúde"
		}Else{
			Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, rCodPlanoSaude)
			If ($IsObject(objRegraComercial)) {
				If (objRegraComercial.isInelegivel = 1) {
					Set problemaConvenio = "Procedimento não atendido pelo Plano de Saúde informado."
				}
				If (problemaConvenio="" && (objRegraComercial.isObrigatorioGuiaAutorizacao = 1)) {
					Set problemaConvenio = "Procedimento com necessidade de Guias e Senhas de Autorização."
				}
				If (+objRegraComercial.TempoTrocaItem > 0 && (objRegraComercial.CodigoItemTroca '= "")) {
					Set dataFinAteTroc = rDatadeAtendimento
					If (rDatadeAtendimento = "") Set dataFinAteTroc = +$Horolog
					Set dataIniAteTroc = dataFinAteTroc - objRegraComercial.TempoTrocaItem
					Set trocarItem = ..GetTrocaItem(codPaciente, rCodConvenio, rCodPlanoSaude, codProcedimento, objRegraComercial.CodigoItemTroca, dataIniAteTroc, dataFinAteTroc, 1, $Select($Length(rCodProfissional,"||")=2:"",1:rCodProfissional))
					Set dataFinAteTroc = ""
					Set:trocarItem'="" dataFinAteTroc = trocarItem+objRegraComercial.TempoTrocaItem
				}
				Set codTISS = objRegraComercial.CodigodoItem
			}Else{
				Set problemaConvenio = "Problema para carregar a regra do plano de saúde."
			}
		}
		;		
		Set listDados = {}
		Set listDados.procedAgendado				= rRequerAgendamento
		Set listDados.grupo									= $Select(rRequerAgendamento=1:"Procedimentos Agendados",1:"Procedimentos não Agendados")
		Set listDados.grupoAgendamento			= $$$INARTGrupodeAgendamento(objINART)
		Set listDados.grupoAgendamentoDesc 	= $$GetDescGrupoAgendamento^VARSQL($$$INARTGrupodeAgendamento(objINART))
		Set listDados.procedimento 					= codProcedimento
		Set listDados.procedimentoDesc 			= $Select($$$INARTDescItemPedido(objINART)="":$$$INARTSearchName(objINART),1:$$$INARTDescItemPedido(objINART))
		Set listDados.tempoAtendimento			= $Select(rTempodeAtendiment="":"",1:$ZTime(rTempodeAtendiment,2))
		Set listDados.descTempoAtendimento	= $$GetDescTempo^VARSQL(rTempodeAtendiment)
		Set listDados.problemaConvenio			= problemaConvenio
		Set listDados.encaixe								= +rEncaixe
		Set listDados.trocarItem 						= trocarItem
		Set listDados.codigoTISS						= codTISS
		Set listDados.dataFinAteTroc				= $Select(dataFinAteTroc="":"",1:$ZDate(dataFinAteTroc,4))
		If ($Length(rCodProfissional,"||") = 2) {
			Set listDados.flagProcedimento			= 1
			Set listDados.unidade								= codUnidade
			Set listDados.unidadeDesc						= $$SQLGetLocationName^VARSQL(codUnidade)
			Set listDados.sala									= codSala
			Set listDados.salaDesc							= $$GetDescSalasAtendimentos^VARSQL(codSala,codLeito)
			Set listDados.profissional					= rCodProfissional
			Set listDados.profissionalNome			= ""
			Set listDados.profissionalCRM				= ""
			Set listDados.profissionalCRMEsta		= ""
			
			If ($Data(^VARGrupoAgendamentoAusencia(YM, listDados.grupoAgendamento, codSala, codLeito, rDatadeAtendimento))) {
				Set xObjeto = $Get(^VARGrupoAgendamentoAusencia(YM,listDados.grupoAgendamento, codSala, codLeito, rDatadeAtendimento, 1))
				If ($$$VARGrupoAgendamentoAusenciaIndicadordoDia(xObjeto) = $$$YES) {
					Set listDados.ausencia					= 1
				}Else{
					If (rHoradeAtendimento >= $$$VARGrupoAgendamentoAusenciaHoraInicial(xObjeto) && 
							(rHoradeAtendimento <= $$$VARGrupoAgendamentoAusenciaHoraFinal(xObjeto))) {
						Set listDados.ausencia				= 1
					}
				}	
			}
		}Else{
			Set listDados.flagProcedimento			= 0
			Set listDados.unidade								= codUnidade
			Set listDados.unidadeDesc						= $$SQLGetLocationName^VARSQL(codUnidade)
			Set listDados.sala									= codSala
			Set listDados.salaDesc							= $$GetDescSalasAtendimentos^VARSQL(codSala)
			Set listDados.profissional					= rCodProfissional
			Set listDados.profissionalNome			= $$SQLGetProviderName^VARSQL(rCodProfissional)
			Set listDados.profissionalCRM				= $$SQLGetCRMNumMedico^VARSQL(rCodProfissional)
			Set listDados.profissionalCRMEsta		= $$SQLGetCRMEstadoMedico^VARSQL(rCodProfissional)
			If (rDatadeAtendimento'=""&&($Data(^MEDProviderAgendaAusencia(YM,rCodProfissional,rDatadeAtendimento)))) {
				Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, rCodProfissional, rDatadeAtendimento, 1))
				If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
					Set listDados.ausencia					= 1
				}Else{
					If (rHoradeAtendimento '= "") {
						If (rHoradeAtendimento >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
								(rHoradeAtendimento <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
							Set listDados.ausencia			= 1
						}
					}
				}	
				Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
				Do GetAgendaIntervalo^VARSQL(rCodProfissional, referenciaPai)
				If (rHoraIntervaloIni '= "") {
					If (rHoradeAtendimento >= rHoraIntervaloIni && (rHoradeAtendimento <= rhoraIntervaloFim))	{
						Set listDados.ausencia			= 1										
					}
				}
			}
		}
		Set listDados.flagPreReq						= $Data(^VARManualExame(YM, codProcedimento))
		Set listDados.favorito							= favorito
		Set listDados.descSemanaDataAtend  	= $$GetDescSemana^VARSQL(rDatadeAtendimento, 1)
		Set listDados.dataAtendimento				= $Select(rDatadeAtendimento="":"",1:$ZDate(rDatadeAtendimento,4))
		Set listDados.horaAtendimentoIni		= $Select(rHoradeAtendimento="":"",1:$ZTime(rHoradeAtendimento,2))
		Set listDados.horaAtendimentoFin		= $Select(rHoradeAtendimento="":"",1:$ZTime(rHoradeAtendimento+rTempodeAtendiment,2))
		Set listDados.solicitante						= rSolicitante
		;
		Set horario = "Não encontrado horário para o filtro informado."
		If (rDatadeAtendimento '= "") {
			Set horario = $$GetDescSemana^VARSQL(rDatadeAtendimento, 1) _", "_ $ZDate(rDatadeAtendimento,4) _ 
										" ("_$ZTime(rHoradeAtendimento,2) _ " - " _ $ZTime(rHoradeAtendimento+rTempodeAtendiment,2)_")"
			Set horario = "", codReserva = ""
			For {
				Set codReserva = $Order(^MEDReservaHorarioTemp(YM, codReserva))
				Quit:codReserva=""
				
				Set objeto = $Get(^MEDReservaHorarioTemp(YM, codReserva, 1))
				
				If ($$$MEDReservaHorarioTempCodigodoAgendamento(objeto) '= pCodAgendamento) Continue
				If ($$$MEDReservaHorarioTempCodigodoProcedimento(objeto) '= codProcedimento) Continue
			
				Set rDatadeAtendimento = $$$MEDReservaHorarioTempDataAtendimento(objeto)
				Set rHoradeAtendimento = $$$MEDReservaHorarioTempHoraAtendimento(objeto) 

				Set xHorario = $$GetDescSemana^VARSQL(rDatadeAtendimento, 1) _", "_ $ZDate(rDatadeAtendimento,4) _ 
											 " ("_$ZTime(rHoradeAtendimento,2) _ " - " _ $ZTime(rHoradeAtendimento+rTempodeAtendiment,2)_")"
				Set horario = horario _ $Select(horario="":"",1:"<br>") _ xHorario
							
			}

		}
		If (rRequerAgendamento = 0) {
			Set horario = "-"
		}
		Set listDados.horario = horario
		Do arrayRetorno.%Push(listDados)
	}
	
	Do arrayRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetMEDProviderForm">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProvider</FormalSpec>
<Implementation><![CDATA[	Return $$GetMEDProviderForm^VARSQL(pCodProvider)]]></Implementation>
</Method>

<Method name="ArmSolicitanteProc">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pProcedimento		= $Get(%request.Data("pProcedimento",1))
	Set pSolicitante 		= $Get(%request.Data("pSolicitante",1))

	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", pProcedimento),Y,1) = pSolicitante
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pProcedimento),Y,7) = pSolicitante]]></Implementation>
</Method>

<Method name="GetHorarioAgendaProfissional">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pCodProcedimento,pGrupoAgendamento,pUnidade,pDataInicio,pDataFinal,pHoraInicio,pHoraFinal,pDataMarcado,pHoraMarcado,pDiaSemana,pSexo,pProfSel,pAgendarSeparado,pQtdeAgenda,pRetroativo=0,*rCodProfissional,*rDatadeAtendimento,*rHoradeAtendimento,*rTempodeAtendiment,pReserva</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set YBED	= "AUTO"
	
	Set rCodProfissional 		= ""
	Set rDatadeAtendimento 	= ""
	Set rHoradeAtendimento 	= ""
	Set rTempodeAtendiment	= ""
	
	Set aCodProfissional		= ""
	
	Set proxHoraAtendimento = ""

	Set qtdeAgendaSel 			= 0

	Kill tempReserva

	Lock +^mtemp.GetHorarioProf:30
	If '$Test {
		Return $$$OK
	}
	
	Set meuSQL = "Select Horario.Id, Horario.CodigoProfissional, Horario.DatadeAtendimento, "
	Set meuSQL = meuSQL _ "Horario.HoradeAtendimento, Horario.TempodeAtendimento, Horario.ReferenciaPai "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As Horario, "
	Set meuSQL = meuSQL _ "SQLUser.MEDProviderAgenda As Agenda "
	Set meuSQL = meuSQL _ "Where Horario.Company = 0 And Agenda.Company = 0 "
	Set meuSQL = meuSQL _ "And Horario.ReferenciaPai = Agenda.Sequencia "
	Set meuSQL = meuSQL _ "And Horario.CodigoProfissional = Agenda.CodigoProfissional "
	Set meuSQL = meuSQL _ "And (Horario.Admissao Is Null Or Horario.Admissao = '') "
	Set meuSQL = meuSQL _ "And $$GetMEDReservaHorarioTemp^VARSQL(Horario.CodigoProfissional, "
	Set meuSQL = meuSQL _ "Horario.DatadeAtendimento, Horario.HoradeAtendimento, 20) = 0 "
	Set meuSQL = meuSQL _ "And Agenda.GrupoAgendamento In ('"_pGrupoAgendamento_"') "
	Set meuSQL = meuSQL _ "And Horario.DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFinal_"' "
	Set meuSQL = meuSQL _ "And Horario.HoradeAtendimento BetWeen '"_pHoraInicio_"' And '"_pHoraFinal_"' "
	If (pUnidade '= "") {
		Set meuSQL = meuSQL _ "And Agenda.unidade in ('"_$Replace(pUnidade,",","','")_"') "
	}
	If (pProfSel '= "") {
		Set meuSQL = meuSQL _ "And Horario.CodigoProfissional In ('"_pProfSel_"') "
	}
	If (pSexo '= "") {
		Set meuSQL = meuSQL _ "And $$SQLGetProviderSexo^VARSQL(Horario.CodigoProfissional) In ('"_pSexo_"') "
	}
	If (pDiaSemana '= "") {
		Set meuSQL = meuSQL _ "And $$SQLDiaSemana^VARSQL(Horario.DatadeAtendimento) In ('"_$Replace(pDiaSemana,",","','")_"') "	
	}
	Set meuSQL = meuSQL _ "And (Agenda.RestricaoGeral Is Null Or (';'||Agenda.RestricaoGeral||';') Not Like '%;"_pCodProcedimento_";%') "
	Set meuSQL = meuSQL _ "Order By Horario.DatadeAtendimento, Horario.HoradeAtendimento "
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set xCodProfissional 		= rSet.%Get("CodigoProfissional")
		Set xDatadeAtendimento 	= rSet.%Get("DatadeAtendimento")
		Set xHoradeAtendimento 	= rSet.%Get("HoradeAtendimento")
		Set xTempodeAtendiment	= rSet.%Get("TempodeAtendimento")
		Set xReferenciaPai			= rSet.%Get("ReferenciaPai")

		If (aCodProfissional '= "" && (aCodProfissional'=xCodProfissional)) Continue

		If (pRetroativo = 1) {
			If (xDatadeAtendimento > +$Horolog) Continue
		}Else{
			If (xDatadeAtendimento < +$Horolog) Continue
		}
		If (xDatadeAtendimento = +$Horolog && (xHoradeAtendimento < ($Piece($Horolog,",",2)+600))) Continue

		If (pDataMarcado '="") {
			If (xDatadeAtendimento < pDataMarcado) Continue
			If (xDatadeAtendimento = pDataMarcado && (xHoradeAtendimento < pHoraMarcado)) Continue
		}


		If ($Data(^MEDProviderAgendaAusencia(YM,xCodProfissional,xDatadeAtendimento))) {
			Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, xCodProfissional, xDatadeAtendimento, 1))
			If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Continue
			}Else{
				If (xHoradeAtendimento >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
						(xHoradeAtendimento <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
					Continue
				}
			}	
		}
		Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
		Do GetAgendaIntervalo^VARSQL(xCodProfissional, xReferenciaPai)
		If (rHoraIntervaloIni '= "") {
			If (xHoradeAtendimento >= rHoraIntervaloIni && (xHoradeAtendimento <= rhoraIntervaloFim))	{
				Continue									
			}
		}
		
		Set yCodProcedimento = "%"_pCodProcedimento_"%"
		Set yDataAtendimento = "%"_xDatadeAtendimento_"%"
		Set yHoraAtendimento = "%"_xHoradeAtendimento_"%"
		Set yDiaSemana			 = "%;"_$ZDate(xDatadeAtendimento,10)_";%"
		Set temRestricao = ""
		&Sql(
			Select %ID Into :temRestricao From SQLUser.MEDProviderAgendaRestricao
			Where Company = 0 And CodigoProfissional = :xCodProfissional
			And ","||Restricao||"," Like :yCodProcedimento 
			And (
				IndicadorTodasDatas = 1 Or 
				(
					Datas Is Null And
					";"||NosDias||";" Like :yDiaSemana
				) Or
				","||Datas||"," Like :yDataAtendimento
			)
			And (IndicadorTodasHoras = 1 Or ","||Horas||"," Like :yHoraAtendimento)
		)
		If (temRestricao '= "") {
			Continue
		}
	
		;If (pReserva = 1 && (proxHoraAtendimento '= "") && (pAgendarSeparado = 0) && (proxHoraAtendimento '= rHoradeAtendimento)) {
		;	Set xChave = ""
		;	For {
		;		Set xChave = $Order(tempReserva(xChave))
		;		Quit:xChave=""
		;		Set xStrStatus = $$$Kill("MEDReservaHorarioTemp", chave)
		;		Set qtdeAgendaSel = 0
		;	}
		;}
	
		Set rCodProfissional 		= xCodProfissional
		Set rDatadeAtendimento 	= xDatadeAtendimento
		Set rHoradeAtendimento 	= xHoradeAtendimento
		Set rTempodeAtendiment	= xTempodeAtendiment
		Set rReferenciaPai			= xReferenciaPai
		
		Set proxHoraAtendimento = rHoradeAtendimento+rTempodeAtendiment

		If (pReserva = 1) {
			Set objeto = ""
			Set pGrupodeAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, pCodProcedimento, 1)))
			Set $$$MEDReservaHorarioTempTipoAgendamento(objeto) 			= "PROF"
			Set $$$MEDReservaHorarioTempCodigodoAgendamento(objeto) 	= pCodAgendamento
			Set $$$MEDReservaHorarioTempCodigodoProfissional(objeto)	= rCodProfissional
			Set $$$MEDReservaHorarioTempGrupoAgendamento(objeto) 			= pGrupodeAgendamento
			Set $$$MEDReservaHorarioTempDataAtendimento(objeto) 			= rDatadeAtendimento
			Set $$$MEDReservaHorarioTempHoraAtendimento(objeto) 			= rHoradeAtendimento
			Set $$$MEDReservaHorarioTempCodigodoProcedimento(objeto) 	= pCodProcedimento
			Set $$$MEDReservaHorarioTempDatadeReserva(objeto) 				= +$Horolog
			Set $$$MEDReservaHorarioTempHoradeReserva(objeto) 				= $Piece($Horolog,",",2)
			Set chave = $$GetNextNumber^COMUtils("MEDReservaHorarioTemp","")
			Set strStatus = $$$Save("MEDReservaHorarioTemp", chave, objeto, $$$YES)
			Set tempReserva(chave) = ""
		}
		Set qtdeAgendaSel = qtdeAgendaSel + 1
		If (qtdeAgendaSel >= pQtdeAgenda) Quit
		Set aCodProfissional = rCodProfissional
	}	
	Lock -^mtemp.GetHorarioProf:30				
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetHorarioAgendaProcedimento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pCodProcedimento,pGrupoAgendamento,pUnidade,pDataInicio,pDataFinal,pHoraInicio,pHoraFinal,pDataMarcado,pHoraMarcado,pDiaSemana,pSexo,pProfSel,pAgendarSeparado,pQtdeAgenda,pRetroativo=0,*rCodProfissional,*rDatadeAtendimento,*rHoradeAtendimento,*rTempodeAtendiment,pReserva</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set YBED	= "AUTO"
	
	Set rCodProfissional 		= ""
	Set rDatadeAtendimento 	= ""
	Set rHoradeAtendimento 	= ""
	Set rTempodeAtendiment	= ""
	
	Set proxHoraAtendimento = ""

	Set qtdeAgendaSel 			= 0
	Set aCodProfissional		= ""
	
	Kill tempReserva
	
	Set pGrupodeAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, pCodProcedimento, 1)))

	Lock +^mtemp.GetHorarioProc:30
	If '$Test {
		Return $$$OK
	}
	
	Set meuSQL = "Select Id, SaladeAtendimento||'||'||LeitodeAtendimento As SalaLeito, DatadeAtendimento, "
	Set meuSQL = meuSQL _ "HoradeAtendimento, TempodeAtendimento, SaladeAtendimento, LeitodeAtendimento "
	Set meuSQL = meuSQL _ "From SQLUser.VARGrupoAgendamentoHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 "
	Set meuSQL = meuSQL _ "And (Admissao Is Null Or Admissao = '') "
	Set meuSQL = meuSQL _ "And $$GetMEDReservaHorarioTemp^VARSQL(SaladeAtendimento||'||'||LeitodeAtendimento, "
	Set meuSQL = meuSQL _ "DatadeAtendimento, HoradeAtendimento, 20) = 0 "
	Set meuSQL = meuSQL _ "And CodigodoGrupo In ('"_pGrupoAgendamento_"') "
	Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_pDataInicio_"' And '"_pDataFinal_"' "
	Set meuSQL = meuSQL _ "And HoradeAtendimento BetWeen '"_pHoraInicio_"' And '"_pHoraFinal_"' "
	If (pUnidade '= "") {
		Set meuSQL = meuSQL _ "And $$GetVARSalasAtendimentosUnidade^VARSQL(SaladeAtendimento) in ('"_$Replace(pUnidade,",","','")_"') "
	}
	If (pDiaSemana '= "") {
		Set meuSQL = meuSQL _ "And $$SQLDiaSemana^VARSQL(DatadeAtendimento) In ('"_$Replace(pDiaSemana,",","','")_"') "	
	}
	Set meuSQL = meuSQL _ "Order By DatadeAtendimento, HoradeAtendimento "
	K ^zzJULIOSQL
	s ^zzJULIOSQL = meuSQL
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set rCodProfissional 		= rSet.%Get("SalaLeito")
		Set rDatadeAtendimento 	= rSet.%Get("DatadeAtendimento")
		Set rHoradeAtendimento 	= rSet.%Get("HoradeAtendimento")
		Set rTempodeAtendiment	= rSet.%Get("TempodeAtendimento")
	
		If (aCodProfissional '= "" && (aCodProfissional'=rCodProfissional)) Continue
	
		If (rDatadeAtendimento < +$Horolog) Continue
		If (rDatadeAtendimento = +$Horolog && (rHoradeAtendimento < ($Piece($Horolog,",",2)+600))) Continue

		If (pDataMarcado '="") {
			If (rDatadeAtendimento < pDataMarcado) Continue
			If (rDatadeAtendimento = pDataMarcado && (rHoradeAtendimento < pHoraMarcado)) Continue
			If (rDatadeAtendimento = pDataMarcado && (rHoradeAtendimento < pHoraMarcado)) Continue
		}
	
		If ($Data(^VARGrupoAgendamentoAusencia(YM, pGrupodeAgendamento, rSet.%Get("SaladeAtendimento"), rSet.%Get("LeitodeAtendimento"), rDatadeAtendimento))) {
			Set xObjeto = $Get(^VARGrupoAgendamentoAusencia(YM, pGrupodeAgendamento, rSet.%Get("SaladeAtendimento"), rSet.%Get("LeitodeAtendimento"), rDatadeAtendimento, 1))
			If ($$$VARGrupoAgendamentoAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Continue
			}Else{
				If (rHoradeAtendimento >= $$$VARGrupoAgendamentoAusenciaHoraInicial(xObjeto) && 
						(rHoradeAtendimento <= $$$VARGrupoAgendamentoAusenciaHoraFinal(xObjeto))) {
					Continue
				}
			}	
		}
		
		;If (pReserva = 1 && (proxHoraAtendimento '= "") && (pAgendarSeparado = 0) && (proxHoraAtendimento '= rHoradeAtendimento)) {
		;	Set xChave = ""
		;	For {
		;		Set xChave = $Order(tempReserva(xChave),-1)
		;		Quit:xChave=""
		;		Set xStrStatus = $$$Kill("MEDReservaHorarioTemp", chave)
		;	}
		;	Set qtdeAgendaSel = 0
		;}
	
		Set proxHoraAtendimento = rHoradeAtendimento+rTempodeAtendiment
		
		If (pReserva = 1) {
			Set objeto = ""
			Set $$$MEDReservaHorarioTempTipoAgendamento(objeto) 			= "PROC"
			Set $$$MEDReservaHorarioTempCodigodoAgendamento(objeto) 	= pCodAgendamento
			Set $$$MEDReservaHorarioTempCodigodoProfissional(objeto)	= rCodProfissional
			Set $$$MEDReservaHorarioTempGrupoAgendamento(objeto) 			= pGrupodeAgendamento
			Set $$$MEDReservaHorarioTempDataAtendimento(objeto) 			= rDatadeAtendimento
			Set $$$MEDReservaHorarioTempHoraAtendimento(objeto) 			= rHoradeAtendimento
			Set $$$MEDReservaHorarioTempCodigodoProcedimento(objeto) 	= pCodProcedimento
			Set $$$MEDReservaHorarioTempDatadeReserva(objeto) 				= +$Horolog
			Set $$$MEDReservaHorarioTempHoradeReserva(objeto) 				= $Piece($Horolog,",",2)
			Set chave = $$GetNextNumber^COMUtils("MEDReservaHorarioTemp","")
			Set strStatus = $$$Save("MEDReservaHorarioTemp", chave, objeto, $$$YES)
			Set tempReserva(chave) = ""
		}
		Set qtdeAgendaSel = qtdeAgendaSel + 1
		If (qtdeAgendaSel >= pQtdeAgenda) Quit
		Set aCodProfissional = rCodProfissional
		
	}	
	Lock -^mtemp.GetHorarioProc:30				
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPrimeiroAtendimentoDisponivel">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupoAgendamento,pCodProcedimento,pCodProfissional</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set dataLimite = +$Horolog
	Set horaLimite = $Piece($Horolog,",",2) + 300
	
	Set meuSQL = "Select Horario.DatadeAtendimento, Horario.HoradeAtendimento "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As Horario, "
	Set meuSQL = meuSQL _ "SQLUser.MEDProviderAgenda As Agenda Where Horario.Company = 0 "
	Set meuSQL = meuSQL _ "And Agenda.Company = 0 And Horario.ReferenciaPai = Agenda.Sequencia "
	Set meuSQL = meuSQL _ "And Horario.CodigoProfissional = '"_pCodProfissional_"' "
	Set meuSQL = meuSQL _ "And (Horario.Admissao Is Null Or Horario.Admissao = '') "
	Set meuSQL = meuSQL _ "And Agenda.GrupoAgendamento In ('"_pCodGrupoAgendamento_"') "
	Set meuSQL = meuSQL _ "And (Agenda.RestricaoGeral Is Null Or "
	Set meuSQL = meuSQL _ "(';'||Agenda.RestricaoGeral||';') Not Like '%;"_pCodProcedimento_";%') "
	Set meuSQL = meuSQL _ "And (Horario.DatadeAtendimento > '"_dataLimite_"' Or "
 	Set meuSQL = meuSQL _ "(Horario.DatadeAtendimento = '"_dataLimite_"' And HoradeAtendimento >= '"_horaLimite_"')) "
	Set rSetD = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	Do rSetD.%Next()
	If (rSetD.%ROWCOUNT = 0) {
		Return ""
	}
	Return $ZDate(rSetD.%Get("DatadeAtendimento"),4)_" - "_$ZTime(rSetD.%Get("HoradeAtendimento"),2)]]></Implementation>
</Method>

<Method name="GetPrimeiroAtendimentoDisponivelProc">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodSala,pCodLeito,pCodGrupoAgendamento</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set dataLimite = +$Horolog
	Set horaLimite = $Piece($Horolog,",",2) + 300
	
	Set meuSQL = "Select DatadeAtendimento, HoradeAtendimento From SQLUSer.VARGrupoAgendamentoHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And SaladeAtendimento = '"_pCodSala_"' " 
	Set meuSQL = meuSQL _ "And LeitodeAtendimento = '"_pCodLeito_"' And (Admissao Is Null Or Admissao = '') "
	Set meuSQL = meuSQL _ "And CodigodoGrupo = '"_pCodGrupoAgendamento_"' "
	Set meuSQL = meuSQL _ "And (DatadeAtendimento > '"_dataLimite_"' Or "
 	Set meuSQL = meuSQL _ "(DatadeAtendimento = '"_dataLimite_"' And HoradeAtendimento >= '"_horaLimite_"')) "
	Set meuSQL = meuSQL _ "Order By DatadeAtendimento, HoradeAtendimento"
	
	Set rSetD = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	Do rSetD.%Next()
	If (rSetD.%ROWCOUNT = 0) {
		Return ""
	}
	Return $ZDate(rSetD.%Get("DatadeAtendimento"),4)_" - "_$ZTime(rSetD.%Get("HoradeAtendimento"),2)]]></Implementation>
</Method>

<Method name="ArmFavorito">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pCodProcedimento,pCodProfissional,pAdd</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set codPaciente = $Piece(^VARAgendamento(YM, pCodAgendamento, 1),Y,1)
	
	If (pAdd = 0) {
		Return $$$Kill("MEDPatientFavoritos", codPaciente_$$$COMMA_pCodProcedimento)
	}Else{
		Return $$$Save("MEDPatientFavoritos", codPaciente_$$$COMMA_pCodProcedimento, pCodProfissional, $$$YES)
	}]]></Implementation>
</Method>

<Method name="LiberaReservaSemAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set YBED 	= "AUTO"
	Set dataLimite = +$Horolog

	Set objVARAgendamentoConf = $Get(^VARAgendamentoConf(YM, 0, 1))
	Set tempoReservaProcedimento 	= $$$VARAgendamentoConfAgendTempoReservadePro(objVARAgendamentoConf)
	Set valReservaMin = ($Piece($ZTime(tempoReservaProcedimento,2),":",1)*60) + $Piece($ZTime(tempoReservaProcedimento,2),":",2)
	If (+valReservaMin = 0) {
		Set horaLimite = $Piece($Horolog,",",2) - 310
	}Else{
		Set horaLimite = $Piece($Horolog,",",2) - ((valReservaMin * 60) + 10)
		If (horaLimite < 0) Set horaLimite = 0
	}
	
	Set meuSQLR = "Select Sequencia From SQLUser.MEDReservaHorarioTemp " _
			"Where Company = 0  And (DatadeReserva < '"_dataLimite_"' " _
			"Or HoradeReserva < '"_horaLimite_"')"
	Set rSetR = ##class(%SQL.Statement).%ExecDirect("",.meuSQLR)
	While (rSetR.%Next()) {
		Set strStatus = $$$Kill("MEDReservaHorarioTemp", rSetR.%Get("Sequencia")) 
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmazenarAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set strStatus = ""
	Set mensagem 	= ""
	Set erro			=	0
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))

	Set pCodPlanoSaudeConvenio= $Get(%request.Data("pCodPlanoSaudeConvenio",1))
	Set pCodPlanoSaude				= $Get(%request.Data("pCodPlanoSaude",1))
	Set pPlanoSaudeCarteirinha= $Get(%request.Data("pPlanoSaudeCarteirinha",1))
	Set pVencimentoCarteirinha= $Get(%request.Data("pVencimentoCarteirinha",1))
	Set pVencimentoCarteirinha= $ZDateH(pVencimentoCarteirinha,3,,,,,,,"")

	Set pEmpresaContratante		= $Get(%request.Data("pEmpresaContratante",1))
	Set pArrayProcedimentoArm	= $Get(%request.Data("pArrayProcedimentoArm",1)) 
	Set pSolicitante					= $Get(%request.Data("pSolicitante",1))
	Set pObservacao						= $Get(%request.Data("pObservacao",1))
	Set pEmailPaciente				= $Get(%request.Data("pEmailPaciente",1)) 
	Set pEnviarDocumento			= $Get(%request.Data("pEnviarDocumento",1))
	Set pMotivoEdicao					= $Get(%request.Data("pMotivoEdicao",1))
	If (pEnviarDocumento = 1 || (pEnviarDocumento = "true")) Set pEnviarDocumento = 1
	Else  Set pEnviarDocumento = 0
	;Set pCodPlanoSaude				= $Piece(pCodPlanoConvenio,Y,1)
	;Set pCodConvenio					= $Piece(pCodPlanoConvenio,Y,2)
	
	Tstart
	Try{
		
		If ($Data(^VARAgendamentoProcedimentos(YM, pCodAgendamento))) {
			Set xSequencia = ""
			For {
				Set xSequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia))
				Quit:xSequencia=""

				Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia, 1))
				
				Set xCodProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
				Set xCodProfissional 		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
				Set xDatadeAtendimento	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
				Set xHoradeAtendimento 	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
				
				If ($$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1) Continue 
				If ($$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos) '= "") Continue 
				
				If ((","_pArrayProcedimentoArm_",")[(","_xCodProcedimento_",")) {
					Continue	
				}
	
				Set strRetorno = ..CancelarAgendamento(pCodAgendamento, xSequencia, YBED)
				If (strRetorno.status '= 1) {
					set strStatus = strRetorno.status
					set erro			=	1
					Quit	
				}	
			}	
		}
		If (strStatus '= "" && ($$$ISERR(strStatus))) {
			set strStatus = strStatus
			set erro			=	1
			Quit	
		}
		;
		Set objVARAgendamento 																					= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
		Set codPaciente																									= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
		Set $$$VARAgendamentoSituacao(objVARAgendamento) 								= 2
		Set $$$VARAgendamentoPlanodeSaude(objVARAgendamento) 						= pCodPlanoSaude
		Set $$$VARAgendamentoConvenio(objVARAgendamento)								= pCodPlanoSaudeConvenio
		Set $$$VARAgendamentoCarteirinha(objVARAgendamento) 						= pPlanoSaudeCarteirinha
		Set $$$VARAgendamentoVencimentodaCarteirinha(objVARAgendamento) = pVencimentoCarteirinha
		Set $$$VARAgendamentoEmpresaContratante(objVARAgendamento)			= pEmpresaContratante
		Set $$$VARAgendamentoSolicitante(objVARAgendamento) 						= pSolicitante
		Set $$$VARAgendamentoObservacao(objVARAgendamento) 							= pObservacao
		Set $$$VARAgendamentoEnviarEmail(objVARAgendamento) 						= pEnviarDocumento
		Set strStatus = $$$Save("VARAgendamento", pCodAgendamento, objVARAgendamento, $$$YES)
		If ($$$ISERR(strStatus)) {
			set strStatus = strStatus
			set erro			=	1
			Quit	
		}
		;
		Set objMEDPatient = $Get(^MEDPatient(YM, codPaciente, 1))
		If ($ZConvert($$$MEDPatientEmail(objMEDPatient),"l") '= $ZConvert(pEmailPaciente,"l")) {
			Set $$$MEDPatientEmail(objMEDPatient) = $ZConvert(pEmailPaciente,"l")
			Set strStatus = $$$Save("MEDPatient", codPaciente, objMEDPatient, $$$YES)
			If ($$$ISERR(strStatus)) {
				set strStatus = strStatus
				set erro			=	1
				Quit	
			}
		}
		;
		Set codProcedimento = ""
		For {
			Set codProcedimento = $Order(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento))
			Quit:codProcedimento=""

			Set qtdeAgenda	= +$Piece(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento),"~",2)
			Set agendUnic		= +$Piece(^mtemp.VARAgendamento(pCodAgendamento,"BuscarProc",codProcedimento),"~",3)
		
			If (qtdeAgenda = 1 || (agendUnic = 1)) {
				Set rCodProfissional		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",1)
				Set rDatadeAtendimento	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",2)
				Set rHoradeAtendimento	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",3)
				Set rTempodeAtendiment	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",4)
				Set rEncaixe						= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",5)
				Set rRequerAgendamento	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",6)
				Set rSolicitante				= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",7)
				Set rCodConvenio 				= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",8) 
				Set rCodPlanoSaude 			= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",9)
				Set rNumCarteirinha 		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",10)
				Set rVencCarteirinha 		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",11)
			
				Set rGrupoAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, codProcedimento, 1)))
				
				Set fCancelado 					= 0				
				If ((","_pArrayProcedimentoArm_",")'[(","_codProcedimento_",")) {
					Continue
				}Else{
					Set rSeqAgendamento = "", rNumAdmissao = ""
					Set meuSQL = "Select Sequencia From SQLUser.VARAgendamentoProcedimentos "
					Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
					Set meuSQL = meuSQL _ "And Cancelado = 0 And Procedimento = '"_codProcedimento_"'"
					Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
					While (rSet.%Next()) {
						Set rSeqAgendamento = rSet.%Get("Sequencia")
					}
					If (rSeqAgendamento = "") {
						;Criar Admissão
						Set rSeqAgendamento = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, ""),-1) + 1
						If (rRequerAgendamento = 1) {
							Set rNumAdmissao = pCodAgendamento_"-"_rSeqAgendamento
							Set strStatus = ..Admissao(rNumAdmissao, codPaciente, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, pCodPlanoSaudeConvenio, pCodPlanoSaudeConvenio, 0, YBED, codProcedimento)
						}
					}Else{
						;Editar Admissão					
						Set rNumAdmissao = pCodAgendamento_"-"_rSeqAgendamento
						Set strStatus = ..Admissao(rNumAdmissao, codPaciente, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, pCodPlanoSaudeConvenio, pCodPlanoSaudeConvenio, 0, YBED, codProcedimento)
					}
				}
				If ($$$ISERR(strStatus)) {
					set strStatus = strStatus
					set erro			=	1
					Quit	
				}
				
				Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, rSeqAgendamento, 1))
				Set (antGrupoAgendamento, antCodProfissional, antCodSala, antCodLeito, antDatadeAtendimento) = ""
				Set (antHoradeAtendimento, antEncaixe, atProcAgendado, antSolicitante) = ""
				If ($Data(^VARAgendamentoProcedimentos(YM, pCodAgendamento, rSeqAgendamento, 1))) {
					Set antGrupoAgendamento		= $$$VARAgendamentoProcedimentosGrupoAgendamento(objVARAgendamentoProcedimentos)
					Set antCodProfissional		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
					Set antCodSala						= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
					Set antCodLeito						= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
					Set antDatadeAtendimento 	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos)
					Set antHoradeAtendimento 	=	$$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos)
					Set antEncaixe 						=	$$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos)
					Set antProcAgendado				=	$$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
					Set antSolicitante				= $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos)
					;
					If (pMotivoEdicao '= "" && (antDatadeAtendimento '= rDatadeAtendimento || (antHoradeAtendimento '= rHoradeAtendimento))) {
						Set objVARAgendamentoRemarcacao = ""
						If (pMotivoEdicao = "-RP-") {
							Set xMotivoEdicao = pMotivoEdicao
							Set xxNumAdmissao	= $Replace(rNumAdmissao,"/"," ")
							If ($Data(^VARAgendamentoInconsistencias(0,10,xxNumAdmissao)) && (antDatadeAtendimento'=rDatadeAtendimento || (antHoradeAtendimento'=rHoradeAtendimento))) {
								Set xNumInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xxNumAdmissao,""))
								Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, xNumInconsistencia, 1))
								Set xMotivoEdicao = $$$VARAgendamentoInconsistenciaMotivo(objVARAgendamentoInconsistencia)
							}
							Set $$$VARAgendamentoRemarcacaoMotivo(objVARAgendamentoRemarcacao)									=	xMotivoEdicao
							Set $$$VARAgendamentoRemarcacaoCausadoProfissional(objVARAgendamentoRemarcacao)			= 1
						}Else{
							Set $$$VARAgendamentoRemarcacaoMotivo(objVARAgendamentoRemarcacao)									= pMotivoEdicao
							Set $$$VARAgendamentoRemarcacaoCausadoProfissional(objVARAgendamentoRemarcacao)			= 0
						}
						Set $$$VARAgendamentoRemarcacaoDataAtendimentoAntiga(objVARAgendamentoRemarcacao)		= antDatadeAtendimento
						Set $$$VARAgendamentoRemarcacaoHoradeAtendimentoAntiga(objVARAgendamentoRemarcacao)	= antHoradeAtendimento
						Set $$$VARAgendamentoRemarcacaoDatadeAtendimentoNova(objVARAgendamentoRemarcacao)		= rDatadeAtendimento
						Set $$$VARAgendamentoRemarcacaoHoradeAtendimentoNova(objVARAgendamentoRemarcacao)		= rHoradeAtendimento
						Set $$$VARAgendamentoRemarcacaoProfissionalAntigo(objVARAgendamentoRemarcacao)			= antCodProfissional
						Set idVARAgendamentoRemarcacao 	= pCodAgendamento_$$$COMMA_codProcedimento_$$$COMMA_+$Horolog_$$$COMMA_$Piece($Horolog,",",2)					
						Set strStatus = $$$Save("VARAgendamentoRemarcacao", idVARAgendamentoRemarcacao, objVARAgendamentoRemarcacao, $$$YES)
						If ($$$ISERR(strStatus)) {
							set erro			=	1
							Quit	
						}
					} 
				}
				
				If (+antEncaixe '= 0 && (rEncaixe = 0)) {
					Set strStatus = $$$Kill("MEDProviderEncaixe", antCodProfissional_$$$COMMA_antGrupoAgendamento_$$$COMMA_antDatadeAtendimento_$$$COMMA_antHoradeAtendimento)	
					If ($$$ISERR(strStatus)) {
						set strStatus = strStatus
						set erro			=	1
						Quit	
					}
				}
				
				Set $$$VARAgendamentoProcedimentosAdmissao(objVARAgendamentoProcedimentos) 					= rNumAdmissao
				Set $$$VARAgendamentoProcedimentosGrupoAgendamento(objVARAgendamentoProcedimentos) 	= rGrupoAgendamento
				Set $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)			= codProcedimento
				If ($Length(rCodProfissional,"||") = 2) {
					Set $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos) 		= $Piece(rCodProfissional,"||",1)
					Set $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos) 	= $Piece(rCodProfissional,"||",2)
				}Else{
					Set $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos) 		= rCodProfissional
				}
				Set $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 	= rDatadeAtendimento
				Set $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 	= rHoradeAtendimento
				Set $$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) 				= fCancelado
				Set $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos) = 1
				Set $$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos) 					= rEncaixe
				Set $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos) = +rRequerAgendamento
				Set $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos) 			= rSolicitante

				Set $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos) 								= rCodConvenio
				Set $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos) 						= rCodPlanoSaude
				Set $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos) 				= rNumCarteirinha
				Set $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos) = rVencCarteirinha

				Set $$$VARAgendamentoProcedimentosQtdeProcedimento(objVARAgendamentoProcedimentos) = +qtdeAgenda

				Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_rSeqAgendamento, objVARAgendamentoProcedimentos, $$$YES)	
				If ($$$ISERR(strStatus)) {
					set strStatus = strStatus
					set erro			=	1
					Quit	
				}
				
				If (+rRequerAgendamento = 0) Continue
				
				Set xNumAdmissao	= $Replace(rNumAdmissao,"/"," ")
				If ($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao)) && (antDatadeAtendimento'=rDatadeAtendimento || (antHoradeAtendimento'=rHoradeAtendimento))) {
					Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
					Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
					Set $$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) 	= YBED
					Set $$$VARAgendamentoInconsistenciaResolvidoEm(objVARAgendamentoInconsistencia) 	= $Horolog
					Set strStatus = $$$Save("VARAgendamentoInconsistencia", numInconsistencia, objVARAgendamentoInconsistencia, $$$YES)	
					If ($$$ISERR(strStatus)) {
						set strStatus = strStatus
						set erro			=	1
						Quit	
					}
				}
				
				If ($Length(rCodProfissional,"||") = 2) {
					Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, rGrupoAgendamento, $Piece(rCodProfissional,"||",1), $Piece(rCodProfissional,"||",2), rDatadeAtendimento, rHoradeAtendimento, 1))
					If ($$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)=""||($$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)=rNumAdmissao)) {
						Set $$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)	=	rNumAdmissao				
						Set strStatus = $$$Save("VARGrupoAgendamentoHorario", rGrupoAgendamento_$$$COMMA_$Piece(rCodProfissional,"||",1)_$$$COMMA_$Piece(rCodProfissional,"||",2)_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento, objVARGrupoAgendamentoHorario, $$$YES)	
					}Else{
						set strStatus = "Horário já agendado, favor verificar um novo horário. 3"
						set erro			=	1
						Quit	
					}
					If ($$$ISERR(strStatus)) {
						set strStatus = strStatus
						set erro			=	1
						Quit	
					}
					If (antGrupoAgendamento'="") {
						Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, antGrupoAgendamento, antCodSala, antCodLeito, antDatadeAtendimento, antHoradeAtendimento, 1))
						Set $$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario) =	""				
						Set strStatus = $$$Save("VARGrupoAgendamentoHorario", antGrupoAgendamento_$$$COMMA_antCodSala_$$$COMMA_antCodLeito_$$$COMMA_antDatadeAtendimento_$$$COMMA_antHoradeAtendimento, objVARGrupoAgendamentoHorario, $$$YES)	
					}
				}Else{
					If (rEncaixe '= 0) {
						If (rEncaixe = 1 && (##Class(VAR.CSP.VARCadAgendamento).GetQtdeEncaixe(rCodProfissional,rDatadeAtendimento,rHoradeAtendimento) = 0)) {
							set strStatus = "Qtde. de Encaixe já atingido."
							set erro			=	1
							Quit	
						}
						Set objMEDProviderEncaixe = ""
						Set $$$MEDProviderEncaixeAgendamento(objMEDProviderEncaixe) = pCodAgendamento
						Set $$$MEDProviderEncaixeForcado(objMEDProviderEncaixe) = $Select(rEncaixe=2:1,1:0)
						Set strStatus = $$$Save("MEDProviderEncaixe", rCodProfissional_$$$COMMA_rGrupoAgendamento_$$$COMMA_rDatadeAtendi]]><![CDATA[mento_$$$COMMA_rHoradeAtendimento, objMEDProviderEncaixe, $$$YES)	
						If ($$$ISERR(strStatus)) {
							set erro			=	1
							Quit	
						}
					}Else{
						Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, 1))
						If ($$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)=""||($$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)=rNumAdmissao)) {
							Set $$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)	=	rNumAdmissao				
							Set strStatus = $$$Save("MEDProviderAgendaHorario", rCodProfissional_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento, objMEDProviderAgendaHorario, $$$YES)	
						}Else{
							set strStatus = "Horário já agendado, favor verificar um novo horário. 4"_rEncaixe
							set erro			=	1
							Quit	
						} 		
						If ($$$ISERR(strStatus)) {
							set strStatus = strStatus
							set erro			=	1
							Quit	
						}
						If (antGrupoAgendamento'="") {
							Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, antCodProfissional, antDatadeAtendimento, antHoradeAtendimento, 1))
							Set $$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario) =	""				
							Set strStatus = $$$Save("MEDProviderAgendaHorario", antCodProfissional_$$$COMMA_antDatadeAtendimento_$$$COMMA_antHoradeAtendimento, objMEDProviderAgendaHorario, $$$YES)	
						}
					}
				}
			}Else{
				Set rCodProfissional		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",1)
				Set rTempodeAtendiment	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",4)
				Set rEncaixe						= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",5)
				Set rRequerAgendamento	= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",6)
				Set rSolicitante				= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",7)
				Set rCodConvenio 				= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",8) 
				Set rCodPlanoSaude 			= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",9)
				Set rNumCarteirinha 		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",10)
				Set rVencCarteirinha 		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",11)

				Set rGrupoAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, codProcedimento, 1)))

				Set fCancelado 					= 0				
				If ((","_pArrayProcedimentoArm_",")'[(","_codProcedimento_",")) {
					Continue
				}

				Set horario = "", codReserva = ""
				For {
					Set codReserva = $Order(^MEDReservaHorarioTemp(YM, codReserva))
					Quit:codReserva=""
					
					Set objeto = $Get(^MEDReservaHorarioTemp(YM, codReserva, 1))
					
					If ($$$MEDReservaHorarioTempCodigodoAgendamento(objeto) '= pCodAgendamento) Continue
					If ($$$MEDReservaHorarioTempCodigodoProcedimento(objeto) '= codProcedimento) Continue
				
					Set rDatadeAtendimento = $$$MEDReservaHorarioTempDataAtendimento(objeto)
					Set rHoradeAtendimento = $$$MEDReservaHorarioTempHoraAtendimento(objeto) 

					Set rSeqAgendamento = "", rNumAdmissao = ""
					;Set meuSQL = "Select Sequencia From SQLUser.VARAgendamentoProcedimentos "
					;Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
					;Set meuSQL = meuSQL _ "And Cancelado = 0 And Procedimento = '"_codProcedimento_"'"
					;Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
					;While (rSet.%Next()) {
					;	Set rSeqAgendamento = rSet.%Get("Sequencia")
					;}
					If (rSeqAgendamento = "") {
						;Criar Admissão
						Set rSeqAgendamento = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, ""),-1) + 1
						If (rRequerAgendamento = 1) {
							Set rNumAdmissao = pCodAgendamento_"-"_rSeqAgendamento
							Set strStatus = ..Admissao(rNumAdmissao, codPaciente, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, pCodPlanoSaudeConvenio, pCodPlanoSaudeConvenio, 0, YBED, codProcedimento)
						}
					}Else{
						;Editar Admissão					
						Set rNumAdmissao = pCodAgendamento_"-"_rSeqAgendamento
						Set strStatus = ..Admissao(rNumAdmissao, codPaciente, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, pCodPlanoSaudeConvenio, pCodPlanoSaudeConvenio, 0, YBED, codProcedimento)
					}

					If ($$$ISERR(strStatus)) {
						set strStatus = strStatus
						set erro			=	1
						Quit	
					}

					Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, rSeqAgendamento, 1))
					Set (antGrupoAgendamento, antCodProfissional, antCodSala, antCodLeito, antDatadeAtendimento) = ""
					Set (antHoradeAtendimento, antEncaixe, atProcAgendado, antSolicitante) = ""
					If ($Data(^VARAgendamentoProcedimentos(YM, pCodAgendamento, rSeqAgendamento, 1))) {
						Set antGrupoAgendamento		= $$$VARAgendamentoProcedimentosGrupoAgendamento(objVARAgendamentoProcedimentos)
						Set antCodProfissional		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
						Set antCodSala						= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
						Set antCodLeito						= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
						Set antDatadeAtendimento 	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos)
						Set antHoradeAtendimento 	=	$$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos)
						Set antEncaixe 						=	$$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos)
						Set antProcAgendado				=	$$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
						Set antSolicitante				= $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos)
						;
						If (pMotivoEdicao '= "" && (antDatadeAtendimento '= rDatadeAtendimento || (antHoradeAtendimento '= rHoradeAtendimento))) {
							Set objVARAgendamentoRemarcacao = ""
							If (pMotivoEdicao = "-RP-") {
								Set xMotivoEdicao = pMotivoEdicao
								Set xxNumAdmissao	= $Replace(rNumAdmissao,"/"," ")
								If ($Data(^VARAgendamentoInconsistencias(0,10,xxNumAdmissao)) && (antDatadeAtendimento'=rDatadeAtendimento || (antHoradeAtendimento'=rHoradeAtendimento))) {
									Set xNumInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xxNumAdmissao,""))
									Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, xNumInconsistencia, 1))
									Set xMotivoEdicao = $$$VARAgendamentoInconsistenciaMotivo(objVARAgendamentoInconsistencia)
								}
								Set $$$VARAgendamentoRemarcacaoMotivo(objVARAgendamentoRemarcacao)									=	xMotivoEdicao
								Set $$$VARAgendamentoRemarcacaoCausadoProfissional(objVARAgendamentoRemarcacao)			= 1
							}Else{
								Set $$$VARAgendamentoRemarcacaoMotivo(objVARAgendamentoRemarcacao)									= pMotivoEdicao
								Set $$$VARAgendamentoRemarcacaoCausadoProfissional(objVARAgendamentoRemarcacao)			= 0
							}
							Set $$$VARAgendamentoRemarcacaoDataAtendimentoAntiga(objVARAgendamentoRemarcacao)		= antDatadeAtendimento
							Set $$$VARAgendamentoRemarcacaoHoradeAtendimentoAntiga(objVARAgendamentoRemarcacao)	= antHoradeAtendimento
							Set $$$VARAgendamentoRemarcacaoDatadeAtendimentoNova(objVARAgendamentoRemarcacao)		= rDatadeAtendimento
							Set $$$VARAgendamentoRemarcacaoHoradeAtendimentoNova(objVARAgendamentoRemarcacao)		= rHoradeAtendimento
							Set $$$VARAgendamentoRemarcacaoProfissionalAntigo(objVARAgendamentoRemarcacao)			= antCodProfissional
							Set idVARAgendamentoRemarcacao 	= pCodAgendamento_$$$COMMA_codProcedimento_$$$COMMA_+$Horolog_$$$COMMA_$Piece($Horolog,",",2)					
							Set strStatus = $$$Save("VARAgendamentoRemarcacao", idVARAgendamentoRemarcacao, objVARAgendamentoRemarcacao, $$$YES)
							If ($$$ISERR(strStatus)) {
								set erro			=	1
								Quit	
							}
						} 
					}
					
					If (+antEncaixe '= 0 && (rEncaixe = 0)) {
						Set strStatus = $$$Kill("MEDProviderEncaixe", antCodProfissional_$$$COMMA_antGrupoAgendamento_$$$COMMA_antDatadeAtendimento_$$$COMMA_antHoradeAtendimento)	
						If ($$$ISERR(strStatus)) {
							set strStatus = strStatus
							set erro			=	1
							Quit	
						}
					}
					
					Set $$$VARAgendamentoProcedimentosAdmissao(objVARAgendamentoProcedimentos) 					= rNumAdmissao
					Set $$$VARAgendamentoProcedimentosGrupoAgendamento(objVARAgendamentoProcedimentos) 	= rGrupoAgendamento
					Set $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)			= codProcedimento
					If ($Length(rCodProfissional,"||") = 2) {
						Set $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos) 		= $Piece(rCodProfissional,"||",1)
						Set $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos) 	= $Piece(rCodProfissional,"||",2)
					}Else{
						Set $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos) 		= rCodProfissional
					}
					Set $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 	= rDatadeAtendimento
					Set $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 	= rHoradeAtendimento
					Set $$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) 				= fCancelado
					Set $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos) = 1
					Set $$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos) 					= rEncaixe
					Set $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos) = +rRequerAgendamento
					Set $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos) 			= rSolicitante

					Set $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos) 								= rCodConvenio
					Set $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos) 						= rCodPlanoSaude
					Set $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos) 				= rNumCarteirinha
					Set $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos) = rVencCarteirinha

					Set $$$VARAgendamentoProcedimentosQtdeProcedimento(objVARAgendamentoProcedimentos) = 1

					Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_rSeqAgendamento, objVARAgendamentoProcedimentos, $$$YES)	
					If ($$$ISERR(strStatus)) {
						set strStatus = strStatus
						set erro			=	1
						Quit	
					}
					
					If (+rRequerAgendamento = 0) Continue
					
					Set xNumAdmissao	= $Replace(rNumAdmissao,"/"," ")
					If ($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao)) && (antDatadeAtendimento'=rDatadeAtendimento || (antHoradeAtendimento'=rHoradeAtendimento))) {
						Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
						Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
						Set $$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) 	= YBED
						Set $$$VARAgendamentoInconsistenciaResolvidoEm(objVARAgendamentoInconsistencia) 	= $Horolog
						Set strStatus = $$$Save("VARAgendamentoInconsistencia", numInconsistencia, objVARAgendamentoInconsistencia, $$$YES)	
						If ($$$ISERR(strStatus)) {
							set strStatus = strStatus
							set erro			=	1
							Quit	
						}
					}
					
					If ($Length(rCodProfissional,"||") = 2) {
						Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, rGrupoAgendamento, $Piece(rCodProfissional,"||",1), $Piece(rCodProfissional,"||",2), rDatadeAtendimento, rHoradeAtendimento, 1))
						If ($$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)=""||($$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)=rNumAdmissao)) {
							Set $$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)	=	rNumAdmissao				
							Set strStatus = $$$Save("VARGrupoAgendamentoHorario", rGrupoAgendamento_$$$COMMA_$Piece(rCodProfissional,"||",1)_$$$COMMA_$Piece(rCodProfissional,"||",2)_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento, objVARGrupoAgendamentoHorario, $$$YES)	
						}Else{
							set strStatus = "Horário já agendado, favor verificar um novo horário. 1"
							set erro			=	1
							Quit	
						}
						If ($$$ISERR(strStatus)) {
							set strStatus = strStatus
							set erro			=	1
							Quit	
						}
						If (antGrupoAgendamento'="") {
							Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, antGrupoAgendamento, antCodSala, antCodLeito, antDatadeAtendimento, antHoradeAtendimento, 1))
							Set $$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario) =	""				
							Set strStatus = $$$Save("VARGrupoAgendamentoHorario", antGrupoAgendamento_$$$COMMA_antCodSala_$$$COMMA_antCodLeito_$$$COMMA_antDatadeAtendimento_$$$COMMA_antHoradeAtendimento, objVARGrupoAgendamentoHorario, $$$YES)	
						}
					}Else{
						S ^mtemp.zzJULIO = "Aqui|"_rEncaixe
						If (rEncaixe '= 0) {
							If (rEncaixe = 1 && (##Class(VAR.CSP.VARCadAgendamento).GetQtdeEncaixe(rCodProfissional,rDatadeAtendimento,rHoradeAtendimento) = 0)) {
								set strStatus = "Qtde. de Encaixe já atingido."
								set erro			=	1
								Quit	
							}
							Set objMEDProviderEncaixe = ""
							Set $$$MEDProviderEncaixeAgendamento(objMEDProviderEncaixe) = pCodAgendamento
							Set $$$MEDProviderEncaixeForcado(objMEDProviderEncaixe) = $Select(rEncaixe=2:1,1:0)
							Set strStatus = $$$Save("MEDProviderEncaixe", rCodProfissional_$$$COMMA_rGrupoAgendamento_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento, objMEDProviderEncaixe, $$$YES)	
							If ($$$ISERR(strStatus)) {
								set erro			=	1
								Quit	
							}
						}Else{
							Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, 1))
							If ($$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)=""||($$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)=rNumAdmissao)) {
								Set $$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)	=	rNumAdmissao				
								Set strStatus = $$$Save("MEDProviderAgendaHorario", rCodProfissional_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento, objMEDProviderAgendaHorario, $$$YES)	
							}Else{
								set strStatus = "Horário já agendado, favor verificar um novo horário. 2"
								set erro			=	1
								Quit	
							} 		
							If ($$$ISERR(strStatus)) {
								set strStatus = strStatus
								set erro			=	1
								Quit	
							}
							If (antGrupoAgendamento'="") {
								Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, antCodProfissional, antDatadeAtendimento, antHoradeAtendimento, 1))
								Set $$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario) =	""				
								Set strStatus = $$$Save("MEDProviderAgendaHorario", antCodProfissional_$$$COMMA_antDatadeAtendimento_$$$COMMA_antHoradeAtendimento, objMEDProviderAgendaHorario, $$$YES)	
							}
						}
					}
				}
				Quit:erro=1
			}
		}
		If ('$$$ISERR(strStatus)) {
			Job ..EnviarEmail(pCodAgendamento, YBED)
		}
	}
	Catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro			=	err
	}
	set retorno = {}
	if 'erro{
		Tcommit
		set retorno.codigo 		= $Get(chave)
		Set retorno.status 		= strStatus
		Set retorno.mensagem 	= mensagem
	}Else{
		Trollback
		Set retorno.status 		= strStatus
		Set retorno.mensagem 	= ""
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarDetalhe">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	;
	Set arrrayRetorno = []
	Set meuSQL = "Select Agen.CodigodoPaciente, Proc.Procedimento, Proc.Profissional, Proc.DataAtendimento, "
	Set meuSQL = meuSQL _ "Proc.HoraAtendimento, Proc.CodigodaSala, Proc.CodigodoLeito, Proc.ProcedimentoAgendado "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamentoProcedimentos As Proc, SQLUser.VARAgendamento As Agen "
	Set meuSQL = meuSQL _ "Where Proc.Company = 0 And Agen.Company = 0 And Agen.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "And Proc.CodigodoAgendamento = '"_pCodAgendamento_"' And Proc.Cancelado = 0 "
	Set meuSQL = meuSQL _ "Order By Proc.DataAtendimento, Proc.HoraAtendimento "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		If (arrrayRetorno.%Size() = 0) {
			Set listDados = {}
			Set listDados.nomePaciente = $$SQLGetPatientName^VARSQL(rSet.%Get("CodigodoPaciente"))
			Set listDados.procedimento = 0
			Do arrrayRetorno.%Push(listDados)
		}	
		Set listDados = {}
		Set listDados.procedimento					= 1
		Set listDados.dataAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZDate(rSet.%Get("DataAtendimento"),4))
		Set listDados.horaAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZTime(rSet.%Get("HoraAtendimento"),2))
		Set listDados.codGrupoAgendamento 	= $$GetCodGrupoAgendamento^VARSQL(rSet.%Get("Procedimento"))
		Set listDados.descGrupoAgendamento 	= $$GetDescGrupoAgendamento^VARSQL(listDados.codGrupoAgendamento)
		Set listDados.codProcedimento 			= rSet.%Get("Procedimento") 
		Set listDados.descProcedimento 			= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"), 1) 
		Set listDados.codProfissional 			= rSet.%Get("Profissional") 
		Set listDados.nomeProfissional			= $$SQLGetProviderName^VARSQL(rSet.%Get("Profissional"))
		Set listDados.ProcedimentoAgendado	= rSet.%Get("ProcedimentoAgendado")
		If (rSet.%Get("ProcedimentoAgendado") = 1) {
			If (rSet.%Get("CodigodaSala") '= "") {
				Set codSala = rSet.%Get("CodigodaSala")
				Set codUnidade = $$GetVARSalasAtendimentosUnidade^VARSQL(codSala)
				Set listDados.descSala = $$GetEnderecoUnidade^VARSQL(codUnidade)_"<br><b>"_$$GetDescSalasAtendimentos^VARSQL(,rSet.%Get("CodigodoLeito"))_"</b>"
			}Else{
				Set codSala = $$GetCodSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
				Set codUnidade = $$GetVARSalasAtendimentosUnidade^VARSQL(codSala)
				Set listDados.descSala = $$GetEnderecoUnidade^VARSQL(codUnidade)_"<br><b>"_$$GetDescSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))_"</b>"
			}
		}Else{
			Set listDados.descSala = ""
		}
		Set listDados.preRequisitoResumo		= $$GetResumoPreRequisitoProduto^VARSQL(rSet.%Get("Procedimento"))
		Do arrrayRetorno.%Push(listDados)
	}
	;
	Do arrrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="EditarAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
	;
	Set objVARAgendamento		= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set codPaciente					= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
	Set codPlanoSaude				= $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
	Set codConvenio					= $$$VARAgendamentoConvenio(objVARAgendamento)
	Set codCarteirinha			= $$$VARAgendamentoCarteirinha(objVARAgendamento)
	Set vencCarteirinha 		= $$$VARAgendamentoVencimentodaCarteirinha(objVARAgendamento)
	Set empresaContratante	= $$$VARAgendamentoEmpresaContratante(objVARAgendamento)
	Set solicitante					= $$$VARAgendamentoSolicitante(objVARAgendamento)
	Set observacao					= $$$VARAgendamentoObservacao(objVARAgendamento)
	Set enviarEmail					= $$$VARAgendamentoEnviarEmail(objVARAgendamento)
	;
	Set listRetorno 										= {}
	Set listRetorno.codPaciente 				= codPaciente
	Set listRetorno.codPlanoSaude				= codPlanoSaude
	Set listRetorno.codConvenio					= codConvenio
	Set listRetorno.codCarteirinha			= codCarteirinha
	Set listRetorno.vencCarteirinha 		= $Select(vencCarteirinha'="":$ZDate(vencCarteirinha,3),1:"")
	Set listRetorno.empresaContratante	= empresaContratante
	Set listRetorno.solicitante					= solicitante
	Set listRetorno.observacao					= observacao
	Set listRetorno.pacienteEnviar			= +enviarEmail
	;	
	Kill ^mtemp.VARAgendamento(pCodAgendamento)
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia))
		Quit:sequencia=""
		
		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia, 1))
		Set codProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		Set rCodProfissional 		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
		Set rDatadeAtendimento	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
		Set rHoradeAtendimento 	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
		Set codSala					 		= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
		Set codLeito						= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
		Set rEncaixe						= +$$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos)
		Set rRequerAgendamento	= +$$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
		Set rSolicitante				= $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos)
		
		Set rCodConvenio				= $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos)
		Set rCodPlanoSaude			= $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos)
		Set rNumCarteirinha			= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos)
		Set rVencCarteirinha		= $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos)
		Set rEmpresaContratante	= $$$VARAgendamentoProcedimentosEmpresaContratante(objVARAgendamentoProcedimentos)
		
		If (rCodProfissional = "") {
			Set rCodProfissional = codSala_"||"_codLeito
		}
		;
		If ($$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1) Continue
		;If ($$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos) '= 1) Continue
		;
		If (rRequerAgendamento = 1) {
			If ($Length(rCodProfissional,"||") = 1) {
				Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, rCodProfissional, rDatadeAtendimento,rHoradeAtendimento, 1))
				Set rTempodeAtendiment 	= $$$MEDProviderAgendaHorarioTempodeAtendimento(objMEDProviderAgendaHorario) 
			}Else{
				Set objINART = $Get(^INART(YM, codProcedimento, 1))
				Set grupoAgendamento = $$$INARTGrupodeAgendamento(objINART)
				Set objVARGrupoAgendamento 	= $Get(^VARGrupoAgendamento(YM, grupoAgendamento, 1))
				Set rTempodeAtendiment 			= $$$VARGrupoAgendamentoTempodeAtendimento(objVARGrupoAgendamento) 
			}
		}
		;
		Do ..InserirProcedimentoBuscar(pCodAgendamento, codProcedimento, YBED, rSolicitante)
		;
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,7)		= rSolicitante
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,8) 	= rCodConvenio
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,9) 	= rCodPlanoSaude
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,10) 	= rNumCarteirinha
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,11) 	= rVencCarteirinha
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,12) 	= rEmpresaContratante
		If (rRequerAgendamento = 0) {
			Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,5) = rEncaixe
			Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,6) = rRequerAgendamento
			Continue
		}
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,1) = rCodProfissional
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,2) = rDatadeAtendimento
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,3) = rHoradeAtendimento
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,4) = rTempodeAtendiment
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,5) = rEncaixe
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,6) = rRequerAgendamento
		Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),Y,7) = rSolicitante
		
		;
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="CancelarAgendamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento="",pSequencia="",pYBED=""</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set strStatus = ""
	Set mensagem 	= ""
	Set erro			=	0
	If (pCodAgendamento = "") {
		Set flagWeb					= 1
		Set YBED 						= $Get(%request.Data("YBED",1))
		Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
		Set pSequencia			= $Get(%request.Data("pSequencia",1))
	}Else{
		Set flagWeb	= 0
		Set YBED 		= pYBED
	}
	If ('$Data(^VARAgendamentoProcedimentos(YM, pCodAgendamento))) {
		Set strStatus = 1
	}
	Tstart
	Try{
		Set xSequencia = ""
		For {
			Set xSequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia))
			Quit:xSequencia=""

			If (pSequencia '= "" && (xSequencia '= pSequencia)) {
				COntinue	
			}

			Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia, 1))
			Set rNumAdmissao 				= $$$VARAgendamentoProcedimentosAdmissao(objVARAgendamentoProcedimentos)
			Set codProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
			Set rGrupoAgendamento 	= $$$VARAgendamentoProcedimentosGrupoAgendamento(objVARAgendamentoProcedimentos)
			Set rCodProfissional 		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
			Set rDatadeAtendimento	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
			Set rHoradeAtendimento 	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
			Set rCodSala					 	= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
			Set rCodLeito						= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
			Set rEncaixe						= $$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos)
			Set rProcAgendado				= $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
			Set xNumAdmissao				= $Replace(rNumAdmissao,"/"," ")
			Set $$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1
			Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_xSequencia, objVARAgendamentoProcedimentos, $$$YES)	
			If ($$$ISERR(strStatus)) {
				set strStatus = strStatus
				set erro			=	1
				Quit	
			}
			If (+rProcAgendado = 0) Continue 
			Set strStatus = ..Admissao(rNumAdmissao, "", "", "", "", "", "", 1, YBED, codProcedimento)
			If ($$$ISERR(strStatus)) {
				set strStatus = strStatus
				set erro			=	1
				Quit	
			}
			
			If ($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao))) {
				Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
				Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
				Set $$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) 	= YBED
				Set $$$VARAgendamentoInconsistenciaResolvidoEm(objVARAgendamentoInconsistencia) 	= $Horolog
				Set strStatus = $$$Save("VARAgendamentoInconsistencia", numInconsistencia, objVARAgendamentoInconsistencia, $$$YES)	
				If ($$$ISERR(strStatus)) {
					set strStatus = strStatus
					set erro			=	1
					Quit	
				}
			}

			If (rCodProfissional = "") {
				Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, rGrupoAgendamento, rCodSala, rCodLeito, rDatadeAtendimento, rHoradeAtendimento, 1))
				Set $$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario) =	""				
				Set strStatus = $$$Save("VARGrupoAgendamentoHorario", rGrupoAgendamento_$$$COMMA_rCodSala_$$$COMMA_rCodLeito_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento, objVARGrupoAgendamentoHorario, $$$YES)	
				If ($$$ISERR(strStatus)) {
					set strStatus = strStatus
					set erro			=	1
					Quit	
				}
			}Else{
				If (rEncaixe '= 0) {
					Set strStatus = $$$Kill("MEDProviderEncaixe", rCodProfissional_$$$COMMA_rGrupoAgendamento_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento)	
					If ($$$ISERR(strStatus)) {
						set erro			=	1
						Quit	
					}
				}
				Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, rCodProfissional, rDatadeAtendimento, rHoradeAtendimento, 1))
				Set $$$MEDProviderAgendaHorarioAdmissao(objMEDProviderAgendaHorario)	=	""				
				Set strStatus = $$$Save("MEDProviderAgendaHorario", rCodProfissional_$$$COMMA_rDatadeAtendimento_$$$COMMA_rHoradeAtendimento, objMEDProviderAgendaHorario, $$$YES)	
				If ($$$ISERR(strStatus)) {
					set strStatus = strStatus
					set erro			=	1
					Quit	
				}
			}
		}
	}
	Catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro			=	err
	}
	set retorno = {}
	if 'erro{
		Tcommit
		set retorno.codigo 		= $Get(chave)
		Set retorno.status 		= strStatus
		Set retorno.mensagem 	= mensagem
	}Else{
		Trollback
		Set retorno.status 		= strStatus
		Set retorno.mensagem 	= erro
	}
	If (flagWeb = 0) {
		Return retorno
	}
 	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="Admissao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pNumAdmissao,pCodPaciente,pCodProfissional,pData,pHora,pCodConvenio,pPlanoSaude,pSituacao,pYBED,pCodProcedimento=""</FormalSpec>
<Implementation><![CDATA[	;
	$$$VAR
	Set YBED = YBED
	Set YM 		= 0
	Set Y 		= "~"
	;
	Set status = $$$OK
	;
	Set local = "8.0"
	Set objMEDAdmissao = $Get(^MEDAdmission(0,pNumAdmissao,1))
	If (pSituacao = 1) {
		If ($$$MEDAdmissionDateAdmitted(objMEDAdmissao) '= "") {
			Return "0^Admissão já admitida" 
		}	
	}Else{
		Set $$$MEDAdmissionPatient(objMEDAdmissao) 			= pCodPaciente
		If (pCodProcedimento '= "") {
			Set xSetor = $$$INARTSetorPEP($Get(^INART(0,pCodProcedimento,1)))
			If (xSetor = "MEDICO") {
				Set xTipo = "CONSULTA"
				If (pCodProcedimento = "CONSULTATELEMEDICINA") Set xTipo = "TELEMEDICINA"
				If (pCodProcedimento = "RETCONSU" || (pCodProcedimento = "RETCONSULTA") || (pCodProcedimento = "XXRETCONSU")) Set xTipo = "PRIMCONSULTA"
				Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = xTipo
			}Else{
				Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = xSetor
			}
		}
		Set $$$MEDAdmissionLocation(objMEDAdmissao) 		= local
		If (pSituacao = "0") {
			Set $$$MEDAdmissionDataAgendamento(objMEDAdmissao) = pData
			Set $$$MEDAdmissionHoraAgendamento(objMEDAdmissao) = pHora
		}ElseIf (pSituacao = "2") {
			If ($$$MEDAdmissionDataAgendamento(objMEDAdmissao) = "") {
				Set $$$MEDAdmissionDataAgendamento(objMEDAdmissao) = pData
				Set $$$MEDAdmissionHoraAgendamento(objMEDAdmissao) = pHora
			}
			Set $$$MEDAdmissionDateAdmitted(objMEDAdmissao) = pData
			Set $$$MEDAdmissionTimeAdmitted(objMEDAdmissao) = pHora
		}
		Set $$$MEDAdmissionProfissional(objMEDAdmissao) = pCodProfissional
		Set $$$MEDAdmissionConvenio(objMEDAdmissao) 		= pCodConvenio
		Set $$$MEDAdmissionPlanodeSaude(objMEDAdmissao) = pPlanoSaude
	
	}
	Set $$$MEDAdmissionStatus(objMEDAdmissao) = pSituacao
	Return $$$Save("MEDAdmission",pNumAdmissao,objMEDAdmissao,$$$YES)]]></Implementation>
</Method>

<Method name="GetAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 					= $Get(%request.Data("YBED",1))
	Set pCodPaciente	= $Get(%request.Data("pCodPaciente",1))
	Set pDataAtual 		= +$Horolog
	;
	Set arrayRetorno 	= []
	;
	Set meuSQL = "Select Agend.Numero, Proc.Sequencia, Agend.CodigodoPaciente, Proc.DataAtendimento, "
	Set meuSQL = meuSQL _ "Proc.HoraAtendimento, Proc.GrupoAgendamento,  Proc.Procedimento, Proc.Profissional, "
	Set meuSQL = meuSQL _ "Proc.DataHoraAdmissao, Agend.Situacao, Agend.CriadoEm, Agend.AlteradoEm, "
	Set meuSQL = meuSQL _ "Proc.CodigodaSala, Proc.CodigodoLeito, Proc.Admissao, Proc.ProcedimentoAgendado, "
	Set meuSQL = meuSQL _ "$$GetFATOrganizacaoEparticular^VARSQL(Agend.PlanodeSaude) As Eparticular "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "Where Agend.Company = 0 And Agend.Situacao In ('2', '5', '4') "
	Set meuSQL = meuSQL _ "And Proc.Cancelado = 0 "
	If (pCodPaciente '= "") {
		Set meuSQL = meuSQL _ "And CodigodoPaciente = '"_pCodPaciente_"' "
	}
	Set meuSQL = meuSQL _ "And (Select Count(Proc1.ID) "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamentoProcedimentos As Proc1 Where Proc1.Company = 0 "
	Set meuSQL = meuSQL _ "And Proc1.CodigodoAgendamento=Agend.Numero "
	Set meuSQL = meuSQL _ "And Proc1.Cancelado = 0 "
	If (pCodPaciente '= "") {
		;Set meuSQL = meuSQL _ "And Proc1.DataAtendimento >= '"_pDataAtual_"' "
	}Else{
		Set meuSQL = meuSQL _ "And Proc1.DataAtendimento = '"_pDataAtual_"' "
	}
	Set meuSQL = meuSQL _ ") > 0 "
	Set meuSQL = meuSQL _ "Order By Agend.Numero, Proc.DataAtendimento, Proc.HoraAtendimento "
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	Set arrayProcedimento = []
	Set numeroAnt = ""
	While rSet.%Next() {
		If (rSet.%Get("Numero") '=  numeroAnt) {
			If (arrayProcedimento.%Size() > 0) {
				Set listRetorno.procedimentos 	= arrayProcedimento
				Do arrayRetorno.%Push(listRetorno)	
			}
			Set dataAbertura = rSet.%Get("CriadoEm")
			If (rSet.%Get("AlteradoEm") '= "") {
				Set dataAbertura = rSet.%Get("AlteradoEm")
			}
			
			Set arrayProcedimento 					= []
			Set listRetorno 								= {}
			Set listRetorno.numeroAgend 		= rSet.%Get("Numero") 
			Set listRetorno.codPaciente 		= rSet.%Get("CodigodoPaciente") 
			Set listRetorno.nomePaciente 		= $$SQLGetPatientName^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.dataNascimento 	= $$SQLGetPatientDataNascimento^VARSQL(rSet.%Get("CodigodoPaciente"), 1) 
			Set listRetorno.sexo 						= $$SQLGetSexoPaciente^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.flagEdicao 			= 1
			Set listRetorno.data						= $ZDateTime(dataAbertura,4,2)
			Set listRetorno.eParticular			= +rSet.%Get("Eparticular")
			Set listRetorno.fTentCont				= +$Data(^VARAgendamentoTentContato(YM,rSet.%Get("Numero")))
			Set numeroAnt 									= rSet.%Get("Numero")
		}
		If (	rSet.%Get("DataHoraAdmissao") '= "" || 
					(rSet.%Get("DataAtendimento") < +$Horolog) ||
					(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeEdicaodeAgen($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
		{
			;If (rSet.%Get("ProcedimentoAgendado") = 1) {
				Set listRetorno.flagEdicao = 0
			;}
		}
		Set numAdmissao 													= rSet.%Get("Admissao")
		Set xNumAdmissao													= $Replace(numAdmissao,"/"," ")
		Set listProcedimento = {}
		Set listProcedimento.flagRemarcacao				= 0
		If (xNumAdmissao'=""&&($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao)))) {
			Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
			Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
			If ($$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) = "") {
				If (rSet.%Get("ProcedimentoAgendado") = 1) {
					Set listProcedimento.flagRemarcacao			= 1
				}
			}
		}
		Set listProcedimento.sequencia						= rSet.%Get("Sequencia")
		Set listProcedimento.dataAtend 						= $ZDate(rSet.%Get("DataAtendimento"),4) 
		Set listProcedimento.dataAtendInt 				= rSet.%Get("DataAtendimento") 
		Set listProcedimento.horaAtend 						= $ZTime(rSet.%Get("HoraAtendimento"),2) 
		Set listProcedimento.horaAtendInt 				= rSet.%Get("HoraAtendimento")
		Set listProcedimento.dataHoraAdmissao			= rSet.%Get("DataHoraAdmissao")
		Set listProcedimento.dataHoraAdmissaoForm = $Replace($ZDateTime(rSet.%Get("DataHoraAdmissao"),4,2)," "," - ")
		Set listProcedimento.codGrupoAgendamento 	= $$GetCodGrupoAgendamento^VARSQL(rSet.%Get("Procedimento"))
		Set listProcedimento.descGrupoAgendamento = $$GetDescGrupoAgendamento^VARSQL(listProcedimento.codGrupoAgendamento)
		Set listProcedimento.codProcedimento 			= rSet.%Get("Procedimento") 
		Set listProcedimento.descProcedimento 		= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"), 1) 
		Set listProcedimento.codProfissional 			= rSet.%Get("Profissional") 
		Set listProcedimento.nomeProfissional 		= $$SQLGetProviderName^VARSQL(rSet.%Get("Profissional"))
		Set listProcedimento.procedAgendado 			= rSet.%Get("ProcedimentoAgendado")
		If (rSet.%Get("CodigodaSala") '= "") {
			Set listProcedimento.descSala 					= $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("CodigodaSala"),rSet.%Get("CodigodoLeito"))
		}Else{
			Set listProcedimento.descSala 					= $$GetDescSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
		}
		Set listProcedimento.flagAdmitir 					= 0
		Set listProcedimento.flagCancelar 				= 1
		;;Admitir
		If (	
				(rSet.%Get("DataHoraAdmissao") = "") && 
				(rSet.%Get("DataAtendimento") = +$Horolog) &&
				(rSet.%Get("HoraAtendimento") > ($Piece($Horolog,",",2)-$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))))
			)
		{
			Set listProcedimento.flagAdmitir = 1
		}
		;;Cancelar
		If (	
					(rSet.%Get("DataHoraAdmissao") '= "") || 
					(rSet.%Get("DataAtendimento") < +$Horolog) ||
					(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
		{
			;If (rSet.%Get("ProcedimentoAgendado") = 1) {
				Set listProcedimento.flagCancelar = 0
			;}
		}
		Do arrayProcedimento.%Push(listProcedimento)
	}
	If (arrayProcedimento.%Size() > 0) {
		Set listRetorno.procedimentos 	= arrayProcedimento
		Do arrayRetorno.%Push(listRetorno)	
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetAgendamentoNew">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 					= $Get(%request.Data("YBED",1))
	Set pCodPaciente	= $Get(%request.Data("pCodPaciente",1))
	Set pDataAtual 		= +$Horolog
	;
	Set arrayRetorno 	= []
	;
	Set meuSQL = "Select Agend.Numero, Proc.Sequencia, Agend.CodigodoPaciente, Proc.DataAtendimento, "
	Set meuSQL = meuSQL _ "Proc.HoraAtendimento, Proc.GrupoAgendamento,  Proc.Procedimento, Proc.Profissional, "
	Set meuSQL = meuSQL _ "Proc.DataHoraAdmissao, Agend.Situacao, Agend.CriadoEm, Agend.AlteradoEm, "
	Set meuSQL = meuSQL _ "Proc.CodigodaSala, Proc.CodigodoLeito, Proc.Admissao, Proc.ProcedimentoAgendado, "
	Set meuSQL = meuSQL _ "$$GetFATOrganizacaoEparticular^VARSQL(Agend.PlanodeSaude) As Eparticular "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "Where Agend.Company = 0 " ;And Agend.Situacao In ('2', '5', '4') "
	Set meuSQL = meuSQL _ "And Proc.Cancelado = 0 "
	If (pCodPaciente '= "") {
		Set meuSQL = meuSQL _ "And CodigodoPaciente = '"_pCodPaciente_"' "
	}
	Set meuSQL = meuSQL _ "And (Select Count(Proc1.ID) "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamentoProcedimentos As Proc1 Where Proc1.Company = 0 "
	Set meuSQL = meuSQL _ "And Proc1.CodigodoAgendamento=Agend.Numero "
	Set meuSQL = meuSQL _ "And Proc1.Cancelado = 0 "
	If (pCodPaciente '= "") {
		;Set meuSQL = meuSQL _ "And Proc1.DataAtendimento >= '"_pDataAtual_"' "
	}Else{
		Set meuSQL = meuSQL _ "And Proc1.DataAtendimento = '"_pDataAtual_"' "
	}
	Set meuSQL = meuSQL _ ") > 0 "
	Set meuSQL = meuSQL _ "Order By Agend.Numero, Proc.DataAtendimento, Proc.HoraAtendimento "
	K ^zzJULIO
	s ^zzJULIO = meuSQL
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set dataAbertura = rSet.%Get("CriadoEm")
		If (rSet.%Get("AlteradoEm") '= "") {
			Set dataAbertura = rSet.%Get("AlteradoEm")
		}

		Set listRetorno 								= {}
		Set listRetorno.numeroAgend 		= rSet.%Get("Numero") 
		Set listRetorno.numeroAgendDt 	= rSet.%Get("Numero")_" "_$ZDateTime(dataAbertura,4,2) 
		Set listRetorno.codPaciente 		= rSet.%Get("CodigodoPaciente") 
		Set listRetorno.nomePaciente 		= $$SQLGetPatientName^VARSQL(rSet.%Get("CodigodoPaciente")) 
		Set listRetorno.dataNascimento 	= $$SQLGetPatientDataNascimento^VARSQL(rSet.%Get("CodigodoPaciente"), 1) 
		Set listRetorno.sexo 						= $$SQLGetSexoPaciente^VARSQL(rSet.%Get("CodigodoPaciente")) 
		Set listRetorno.flagEdicao 			= 1
		Set listRetorno.data						= $ZDateTime(dataAbertura,4,2)
		Set listRetorno.eParticular			= +rSet.%Get("Eparticular")
		Set listRetorno.fTentCont				= +$Data(^VARAgendamentoTentContato(YM,rSet.%Get("Numero")))
		;
		Set listRetorno.flagRemarcacao	= 0
		If (rSet.%Get("DataHoraAdmissao") '= "" || 
				(rSet.%Get("DataAtendimento") < +$Horolog) ||
				(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeEdicaodeAgen($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))
		){
				Set listRetorno.flagEdicao = 0
		}
		Set numAdmissao 								= rSet.%Get("Admissao")
		Set xNumAdmissao								= $Replace(numAdmissao,"/"," ")
		If (xNumAdmissao'=""&&($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao)))) {
			Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
			Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
			If ($$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) = "") {
				If (rSet.%Get("ProcedimentoAgendado") = 1) {
					Set listRetorno.flagRemarcacao = 1
				}
			}
		}
		Set listRetorno.sequencia							= rSet.%Get("Sequencia")
		Set listRetorno.dataAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZDate(rSet.%Get("DataAtendimento"),4)) 
		Set listRetorno.dataAtendInt 					= rSet.%Get("DataAtendimento") 
		Set listRetorno.horaAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZTime(rSet.%Get("HoraAtendimento"),2)) 
		Set listRetorno.horaAtendInt 					= rSet.%Get("HoraAtendimento")
		Set listRetorno.dataHoraAtend 				= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZDate(rSet.%Get("DataAtendimento"),4)_" "_$ZTime(rSet.%Get("HoraAtendimento"),2)) 
		Set listRetorno.dataHoraAdmissao			= rSet.%Get("DataHoraAdmissao")
		Set listRetorno.dataHoraAdmissaoForm 	= $Replace($ZDateTime(rSet.%Get("DataHoraAdmissao"),4,2)," "," - ")
		Set listRetorno.codGrupoAgendamento 	= $$GetCodGrupoAgendamento^VARSQL(rSet.%Get("Procedimento"))
		Set listRetorno.descGrupoAgendamento 	= $$GetDescGrupoAgendamento^VARSQL(listRetorno.codGrupoAgendamento)
		Set listRetorno.codProcedimento 			= rSet.%Get("Procedimento") 
		Set listRetorno.descProcedimento 			= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"), 1) 
		Set listRetorno.codProfissional 			= rSet.%Get("Profissional") 
		Set listRetorno.nomeProfissional 			= $$SQLGetProviderName^VARSQL(rSet.%Get("Profissional"))
		Set listRetorno.procedAgendado 				= rSet.%Get("ProcedimentoAgendado")
		If (rSet.%Get("CodigodaSala") '= "") {
			Set listRetorno.descSala 					= $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("CodigodaSala"),rSet.%Get("CodigodoLeito"))
		}Else{
			Set listRetorno.descSala 					= $$GetDescSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
		}
		Set listRetorno.flagAdmitir 					= 0
		Set listRetorno.flagCancelar 				= 1
		;;Admitir
		If (	
			(rSet.%Get("DataHoraAdmissao") = "") && 
			(rSet.%Get("DataAtendimento") = +$Horolog) &&
			(rSet.%Get("HoraAtendimento") > ($Piece($Horolog,",",2)-$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))))
		){
			Set listRetorno.flagAdmitir = 1
		}
		;;Cancelar
		If (	
			(rSet.%Get("DataHoraAdmissao") '= "") ;|| 
			;(rSet.%Get("DataAtendimento") < +$Horolog) ||
			;(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))
		){
			Set listRetorno.flagCancelar = 0
		}
		;
		Do arrayRetorno.%Push(listRetorno)
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="AtualizarReserva">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set dataAtual 			= +$Horolog
	Set horaAtual				= $Piece($Horolog,",",2)
	
	Set meuSQL = "Select Sequencia From SQLUser.MEDReservaHorarioTemp " _
			"Where Company = 0  And CodigodoAgendamento = '"_pCodAgendamento_"' "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While (rSet.%Next()) {
		Set objMEDReservaHorarioTemp = $Get(^MEDReservaHorarioTemp(YM, rSet.%Get("Sequencia"), 1))
		Set $$$MEDReservaHorarioTempDatadeReserva(objMEDReservaHorarioTemp) = dataAtual
		Set $$$MEDReservaHorarioTempHoradeReserva(objMEDReservaHorarioTemp) = horaAtual
		Set strStatus = $$$Save("MEDReservaHorarioTemp", rSet.%Get("Sequencia"), objMEDReservaHorarioTemp, $$$YES)
	}]]></Implementation>
</Method>

<Method name="GetRemarcacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 					= $Get(%request.Data("YBED",1))
	;
	Set arrayRetorno 	= []
	;
	Set meuSQL = "Select Proc.CodigodoAgendamento From SQLUser.VARAgendamentoInconsistencia As Inc, "
	Set meuSQL = meuSQL _ "SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "Where Inc.Company = 0 And Proc.Company = 0 "
	Set meuSQL = meuSQL _ "And (Inc.ResolvidoPor Is Null Or Inc.ResolvidoPor = '') "
	Set meuSQL = meuSQL _ "And Proc.Admissao = Inc.Admissao "
	Set meuSQL = meuSQL _ "And %Internal(Proc.DataAtendimento) >= "_+$Horolog_" "
	Set meuSQL = meuSQL _ "Group By CodigodoAgendamento "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set meuSQL1 = "Select Agend.Numero, Proc.Sequencia, Agend.CodigodoPaciente, Proc.DataAtendimento, "
		Set meuSQL1 = meuSQL1 _ "Proc.HoraAtendimento, Proc.GrupoAgendamento,  Proc.Procedimento, Proc.Profissional, "
		Set meuSQL1 = meuSQL1 _ "Proc.DataHoraAdmissao, Agend.Situacao, Agend.CriadoEm, Agend.AlteradoEm, "
		Set meuSQL1 = meuSQL1 _ "Proc.CodigodaSala, Proc.CodigodoLeito, Proc.Admissao, Proc.ProcedimentoAgendado "
		Set meuSQL1 = meuSQL1 _ "From SQLUser.VARAgendamento As Agend "
		Set meuSQL1 = meuSQL1 _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
		Set meuSQL1 = meuSQL1 _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
		Set meuSQL1 = meuSQL1 _ "Where Agend.Company = 0 And Agend.Situacao In ('2', '5') "
		Set meuSQL1 = meuSQL1 _ "And Proc.Cancelado = 0 "
		Set meuSQL1 = meuSQL1 _ "And Agend.Numero = '"_rSet.%Get("CodigodoAgendamento")_"' "
		Set meuSQL1 = meuSQL1 _ "Order By Agend.Numero, Proc.DataAtendimento, Proc.HoraAtendimento "
		Set rSet1 = ##class(%SQL.Statement).%ExecDirect("",.meuSQL1)
		Set arrayProcedimento = []
		Set numeroAnt = ""
		While rSet1.%Next() {
			If (rSet1.%Get("Numero") '=  numeroAnt) {
				If (arrayProcedimento.%Size() > 0) {
					Set listRetorno.procedimentos 	= arrayProcedimento
					Do arrayRetorno.%Push(listRetorno)	
				}
				Set dataAbertura = rSet1.%Get("CriadoEm")
				If (rSet1.%Get("AlteradoEm") '= "") {
					Set dataAbertura = rSet1.%Get("AlteradoEm")
				}
				
				Set arrayProcedimento 					= []
				Set listRetorno 								= {}
				Set listRetorno.numeroAgend 		= rSet1.%Get("Numero") 
				Set listRetorno.codPaciente 		= rSet1.%Get("CodigodoPaciente") 
				Set listRetorno.nomePaciente 		= $$SQLGetPatientName^VARSQL(rSet1.%Get("CodigodoPaciente")) 
				Set listRetorno.fonePaciente 		= $$GetMEDPatientFone^VARSQL(rSet1.%Get("CodigodoPaciente"))
				Set listRetorno.dataNascimento 	= $$SQLGetPatientDataNascimento^VARSQL(rSet1.%Get("CodigodoPaciente"), 1) 
				Set listRetorno.sexo 						= $$SQLGetSexoPaciente^VARSQL(rSet1.%Get("CodigodoPaciente")) 
				Set listRetorno.flagEdicao 			= 1
				Set listRetorno.data						= $ZDateTime(dataAbertura,4,2)
				Set numeroAnt 									= rSet1.%Get("Numero")
			}
			If (	rSet1.%Get("DataHoraAdmissao") '= "" || 
						(rSet1.%Get("DataAtendimento") < +$Horolog) ||
						(rSet1.%Get("DataAtendimento") = +$Horolog && ((rSet1.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeEdicaodeAgen($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
			{
				If (rSet1.%Get("ProcedimentoAgendado") = 1) {
					Set listRetorno.flagEdicao = 0
				}
			}
			Set numAdmissao 													= rSet1.%Get("Admissao")
			Set xNumAdmissao													= $Replace(numAdmissao,"/"," ")
			Set listProcedimento = {}
			Set listProcedimento.flagRemarcacao				= 0
			;
			If (numAdmissao = "") Continue
			;
			If ($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao))) {
				Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
				Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
				If ($$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) = "") {
					If (rSet1.%Get("ProcedimentoAgendado") = 1) {
						Set listProcedimento.flagRemarcacao			= 1
					}
				}
			}
			Set listProcedimento.sequencia						= rSet1.%Get("Sequencia")
			Set listProcedimento.dataAtend 						= $ZDate(rSet1.%Get("DataAtendimento"),4) 
			Set listProcedimento.dataAtendInt 				= rSet1.%Get("DataAtendimento") 
			Set listProcedimento.horaAtend 						= $ZTime(rSet1.%Get("HoraAtendimento"),2) 
			Set listProcedimento.horaAtendInt 				= rSet1.%Get("HoraAtendimento")
			Set listProcedimento.dataHoraAdmissao			= rSet1.%Get("DataHoraAdmissao")
			Set listProcedimento.codGrupoAgendamento 	= $$GetCodGrupoAgendamento^VARSQL(rSet1.%Get("Procedimento"))
			Set listProcedimento.descGrupoAgendamento = $$GetDescGrupoAgendamento^VARSQL(listProcedimento.codGrupoAgendamento)
			Set listProcedimento.codProcedimento 			= rSet1.%Get("Procedimento") 
			Set listProcedimento.descProcedimento 		= $$SQLGetDescricaoProduto^VARSQL(rSet1.%Get("Procedimento"), 1) 
			Set listProcedimento.codProfissional 			= rSet1.%Get("Profissional") 
			Set listProcedimento.nomeProfissional 		= $$SQLGetProviderName^VARSQL(rSet1.%Get("Profissional"))
			Set listProcedimento.procedAgendado				= rSet1.%Get("ProcedimentoAgendado")
			If (rSet1.%Get("CodigodaSala") '= "") {
				Set codUnidade 													= $$GetVARSalasAtendimentosUnidade^VARSQL(rSet1.%Get("CodigodaSala"))
				Set listProcedimento.descSala 					= $$SQLGetLocationName^VARSQL(codUnidade)_" - "_$$GetDescSalasAtendimentos^VARSQL(rSet1.%Get("CodigodaSala"),rSet1.%Get("CodigodoLeito"))
				Set motivoRemarcacao 										= ""		
				Set xGrupoAgendamento	= rSet1.%Get("GrupoAgendamento")					
				Set xSalaAtendimento 	= rSet1.%Get("CodigodaSala")
				Set xLeitoAtendimento = rSet1.%Get("CodigodoLeito")
				Set xDataAtendiemento = rSet1.%Get("DataAtendimento")
				Set xHoraAtendimento 	= rSet1.%Get("HoraAtendimento")
				&Sql(
					Select Descricao Into :motivoRemarcacao 
					From SQLUser.VARGrupoAgendamentoAusencia
					Where 
						Company = 0 And CodigodoGrupo = :xGrupoAgendamento
						And SaladeAtendimento = :xSalaAtendimento And LeitodeAtendimento = :xLeitoAtendimento
						And DatadeAtendimento = :xDataAtendiemento
						And (
  						IndicadordoDia = 1 Or
 							:xHoraAtendimento >= HoraInicial And :xHoraAtendimento <= HoraFinal
						)
				)
				If (rSet1.%Get("ProcedimentoAgendado") = 1) {
					Set listProcedimento.motivoRemarcacao 	= motivoRemarcacao
				}
			}Else{
				Set codSala 														= $$GetCodSalasProfissional^VARSQL(rSet1.%Get("Profissional"),rSet1.%Get("DataAtendimento"),rSet1.%Get("HoraAtendimento"))
				Set codUnidade 													= $$GetVARSalasAtendimentosUnidade^VARSQL(codSala)
				Set listProcedimento.descSala 					= $$SQLGetLocationName^VARSQL(codUnidade)_" - "_$$GetDescSalasProfissional^VARSQL(rSet1.%Get("Profissional"),rSet1.%Get("DataAtendimento"),rSet1.%Get("HoraAtendimento"))
				Set motivoRemarcacao 						= ""
				Set xCodProfissional 	= rSet1.%Get("Profissional")
				Set xDataAtendiemento = rSet1.%Get("DataAtendimento")
				Set xHoraAtendimento 	= rSet1.%Get("HoraAtendimento")
				&Sql(
					Select Descricao Into :motivoRemarcacao 
					From SQLUser.MEDProviderAgendaAusencia
					Where 
						Company = 0 And CodigoProfissional = :xCodProfissional
						And DatadeAtendimento = :xDataAtendiemento
						And (
  						IndicadordoDia = 1 Or
 							:xHoraAtendimento >= HoraInicial And :xHoraAtendimento <= HoraFinal
						)
				)
				If (rSet1.%Get("ProcedimentoAgendado") = 1) {
					Set listProcedimento.motivoRemarcacao 	= motivoRemarcacao
				}
			}
			Set listProcedimento.flagAdmitir 					= 0
			Set listProcedimento.flagCancelar 				= 1
			;;Admitir
			If (	
					(rSet1.%Get("DataHoraAdmissao") = "") && 
					(rSet1.%Get("DataAtendimento") = +$Horolog) &&
					(rSet1.%Get("HoraAtendimento") > ($Piece($Horolog,",",2)-$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))))
				)
			{
				Set listProcedimento.flagAdmitir = 1
			}
			;;Cancelar
			If (	
						(rSet1.%Get("DataHoraAdmissao") '= "") ;|| 
						;(rSet1.%Get("DataAtendimento") < +$Horolog) ||
						;(rSet1.%Get("DataAtendimento") = +$Horolog && ((rSet1.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
			){
				If (rSet1.%Get("ProcedimentoAgendado") = 1) {
					Set listProcedimento.flagCancelar = 0
				}
			}
			Do arrayProcedimento.%Push(listProcedimento)
		}
		If (arrayProcedimento.%Size() > 0) {
			Set listRetorno.procedimentos 	= arrayProcedimento
			Do arrayRetorno.%Push(listRetorno)	
		}
	}	
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmMedico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
		
	Set pNome 			= $Get(%request.Data("pNome",1))
	Set pUFCRM 			= $ZCVT($Get(%request.Data("pUFCRM",1)),"U")
	Set pNumeroCRM 	= $Get(%request.Data("pCRM",1))
	Set pCBO				= $Get(%request.Data("pCBO",1))
	Set YBED				= $Get(%request.Data("YBED",1))
	
	Set id = $Order(^MEDProviders(0,10,pUFCRM,2231,pNumeroCRM,""))
	If (id '= "") {
		Set id = ""
		Set strStatus = "CRM "_pNumeroCRM_" já cadastrado no sistema!"
	}else{
		Set id = $Order(^MEDProvider(0, ""),-1) + 1	
		Set objMEDProvider = $get(^MEDProvider(0, id, 1))
		Set $$$MEDProviderName(objMEDProvider) = pNome
		Set $$$MEDProviderLicenseType(objMEDProvider) = "2231"
		Set $$$MEDProviderLicenseNumber(objMEDProvider) = pNumeroCRM
		Set $$$MEDProviderSpeciality(objMEDProvider) = "2231"
		Set $$$MEDProviderSSN(objMEDProvider) = pNumeroCRM
		Set $$$MEDProviderStatus(objMEDProvider) = 1
		Set $$$MEDProviderFREE2(objMEDProvider) = "2231"
		Set $$$MEDProviderFREE3(objMEDProvider) = pUFCRM
		Set $$$MEDProviderLocalizacao(objMEDProvider) = "E"
		Set $$$MEDProviderCBO(objMEDProvider) = pCBO
		;
		Set strStatus	=	$$$Save("MEDProvider", id, objMEDProvider, $$$YES)
	}	
	Write strStatus_"|"_id
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="CarregaProfissional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pFiltro 			= $Get(%request.Data("pFiltro",1))
	Set pFlagExterno 	= $Get(%request.Data("pFlagExterno",1))
	Set pKey					= $Get(%request.Data("pKey",1))
	Set pTake					= $Get(%request.Data("pTake",1))
	Set pSkip					= $Get(%request.Data("pSkip",1))
	Set YLOCATION 		= $Get(%request.Data("YLOCATION",1))
	
	If (pTake = "") Set pTake = 20
	
	Set pTake = pTake + pSkip
	Set pSkip = pSkip + 1
		
	;Set meuSQL = "Select * From (Select top "_pTake_" 
	Set meuSQL = "Select ID1, Name, LicenseNumber, FREE3 From SQLUser.MEDProvider  "
	Set meuSQL = meuSQL_"Where Company = 0 And Status = 1 "
	If (pFlagExterno = "EI") {
	
	}elseIf (pFlagExterno = "E") {
		Set meuSQL = meuSQL_"And NVL(Localizacao,'I') in ('E') "
	}Else{
		Set meuSQL = meuSQL_"And NVL(Localizacao,'I') in ('I') "
	}
	;If (pKey '= "") {
	;	Set meuSQL = meuSQL_"And ID1 = '"_pKey_"' "
	;}Else{
	;	If (pFiltro'="") {
	;		Set meuSQL = meuSQL_"And (%UPPER('('||LicenseNumber||') '||Name) LIKE %UPPER('%"_pFiltro_"%') "
	;		Set meuSQL = meuSQL_"Or %UPPER(Name) LIKE %UPPER('%"_pFiltro_"%')) "
	;	}
	;}
	;Set meuSQL = meuSQL_") Where %VID Between "_pSkip_" and "_pTake_" "
	;
	Set objStatement	= ##class(%SQL.Statement).%New() 
	set qStatus 			= objStatement.%Prepare(meuSQL)
	set rSet 					= objStatement.%Execute()
	;
	Set arrayDados = []
	;
 	While (rSet.%Next()) {
	 	Set codProvider 	= rSet.%Get("ID1")
	 	Set descProvider 	= rSet.%Get("Name")
	 	Set licenseNumber = rSet.%Get("LicenseNumber")
	 	If (licenseNumber = "") set licenseNumber = codProvider
	 	;
	 	Set descProviderFormatado = descProvider_" (CRM: "_rSet.%Get("FREE3")_"/"_licenseNumber_")"
	 	;
		Set listDados = {}
		Do listDados.%Set("CodProvider", codProvider)
		Do listDados.%Set("DescProvider", descProviderFormatado)
		Do listDados.%Set("CRM", licenseNumber)
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetQtdeEncaixe">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProfissional,pDataAdmissao,pHoraAdmissao</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
	
	Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM,pCodProfissional,pDataAdmissao,pHoraAdmissao,1))
	Set refPai = $$$MEDProviderAgendaHorarioReferenciaPai(objMEDProviderAgendaHorario)
	Set objMEDProviderAgenda = $Get(^MEDProviderAgenda(YM,pCodProfissional,refPai,1))
	Set grupoAgendamento = $$$MEDProviderAgendaGrupoAgendamento(objMEDProviderAgenda)
	If (+$$$MEDProviderAgendaPermiteEncaixe(objMEDProviderAgenda) = 0) {
		Return $$$NO
	}
	Set qtdeEncaixe = +$$$MEDProviderAgendaQtdeEncaixe(objMEDProviderAgenda)
	Set qtdeJaEncaixe = 0	
	&Sql(	Select Count(*) Into :qtdeJaEncaixe From SQLUser.MEDProviderEncaixe
				Where Company = 0 And Medico = :pCodProfissional And GrupoAgendamento = :grupoAgendamento 
				And DatadeAtendimento = :pDataAdmissao
			)
	If (qtdeJaEncaixe >= qtdeEncaixe) {
		Return $$$NO
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarPreRequisito">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 							= $Get(%request.Data("YBED",1))
	Set pCodAgendamento 	= $Get(%request.Data("pCodAgendamento",1))
	Set pCodProcedimento	= $Get(%request.Data("pCodProcedimento",1))
	;
	Set arrrayRetorno = []
	;
	IF (pCodProcedimento = "") {
		Set arrrayRetorno = []
		Set codProcedimento = ""
		For {
			Set codProcedimento = $Order(^mtemp.VARAgendamento(pCodAgendamento, "BuscarProc", codProcedimento))
			Quit:codProcedimento=""
			;
			Set objINART = $Get(^INART(YM, codProcedimento, 1))
			;
			If ($$$INARTNecessidadeJejum(objINART) = 1) {
				Set listDados = {}
				Set listDados.procedimento = $$SQLGetDescricaoProduto^VARSQL(codProcedimento, 1)
				Set listDados.preRequisito = "<b>Necessita de Jejum: </b>Sim"
				Do arrrayRetorno.%Push(listDados)
			}
			If ($$$INARTResumodoPreRequisito(objINART) '= "") {
				Set listDados = {}
				Set listDados.procedimento = $$SQLGetDescricaoProduto^VARSQL(codProcedimento, 1)
				Set listDados.preRequisito = "<b>Resumo do Pré Requisito: </b>"_$$$INARTResumodoPreRequisito(objINART)
				Do arrrayRetorno.%Push(listDados)
			}
			
			Set codExecutor = ""
			&SQL(
				Select Executor Into :codExecutor From SQLUser.VARManualExame
				Where Company = 0 And CodigoExame = :codProcedimento
							And Situacao = 'A'
			)
			If (codExecutor '= "") {

				Set objVARManualExame = $Get(^VARManualExame(YM, codProcedimento, codExecutor, 1))
				Set mDieta 		= $$$VARManualExameDescricaoDieta(objVARManualExame)
				Set mPaciente	= $$$VARManualExameDescricaoPaciente(objVARManualExame)
				
				Set conteudo = ""
				If (mDieta '= "") {
					Set conteudo = conteudo _ "<li><b>Dieta:</b></li>"_mDieta
				} 
				If (mPaciente '= "") {
					Set conteudo = conteudo _ "<li><b>Paciente:</b></li>"_mPaciente
				} 
				If (conteudo '= "") {
					Set listDados = {}
					Set listDados.procedimento = $$SQLGetDescricaoProduto^VARSQL(codProcedimento, 1)
					Set listDados.preRequisito = "<b>Pré Requisito: </b>"_conteudo
					Do arrrayRetorno.%Push(listDados)
				}
			}
		}
	}Else{
		Set objINART = $Get(^INART(YM, pCodProcedimento, 1))
		;
		Set arrrayRetorno = []
		;
		If ($$$INARTNecessidadeJejum(objINART) = 1) {
			Set listDados = {}
			Set listDados.procedimento = $$SQLGetDescricaoProduto^VARSQL(pCodProcedimento, 1)
			Set listDados.preRequisito = "<b>Necessita de Jejum: </b>Sim"
			Do arrrayRetorno.%Push(listDados)
		}
		If ($$$INARTResumodoPreRequisito(objINART) '= "") {
			Set listDados = {}
			Set listDados.procedimento = $$SQLGetDescricaoProduto^VARSQL(pCodProcedimento, 1)
			Set listDados.preRequisito = "<b>Resumo do Pré Requisito: </b>"_$$$INARTResumodoPreRequisito(objINART)
			Do arrrayRetorno.%Push(listDados)
		}
		
		Set codExecutor = ""
		&SQL(
			Select Executor Into :codExecutor From SQLUser.VARManualExame
			Where Company = 0 And CodigoExame = :pCodProcedimento
						And Situacao = 'A'
		)
		If (codExecutor '= "") {

			Set objVARManualExame = $Get(^VARManualExame(YM, pCodProcedimento, codExecutor, 1))
			Set mDieta 		= $$$VARManualExameDescricaoDieta(objVARManualExame)
			Set mPaciente	= $$$VARManualExameDescricaoPaciente(objVARManualExame)
			
			Set conteudo = ""
			If (mDieta '= "") {
				Set conteudo = conteudo _ "<li><b>Dieta:</b></li>"_mDieta
			} 
			If (mPaciente '= "") {
				Set conteudo = conteudo _ "<li><b>Paciente:</b></li>"_mPaciente
			} 
			If (conteudo '= "") {
				Set listDados = {}
				Set listDados.procedimento = $$SQLGetDescricaoProduto^VARSQL(pCodProcedimento, 1)
				Set listDados.preRequisito = "<b>Pré Requisito: </b>"_conteudo
				Do arrrayRetorno.%Push(listDados)
			}
		}
	}
	;
	Do arrrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="PreparaAgendOrcamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	
	Set YBED					= $Get(%request.Data("YBED",1))
	Set pCodOrcamento = $Get(%request.Data("pCodOrcamento",1))

	Set objOrcamento 	= $Get(^VAROrcamento(YM, pCodOrcamento, 1))
	Set codPaciente 	= $$$VAROrcamentoCodigodoPaciente(objOrcamento)
	;
	Set chave = $$GetNextNumber^COMUtils("VARAgendamento","")
	Set objeto = $Get(^VARAgendamento(YM, chave, 1))
	Set $$$VARAgendamentoCodigodoPaciente(objeto) = codPaciente
	Set $$$VARAgendamentoOrcamento(objeto) 				= pCodOrcamento
	Set $$$VARAgendamentoObservacao(objeto) 			= "Agendamento gerado via orçamento "_pCodOrcamento
	Set $$$VARAgendamentoConvenio(objeto)					= $$$VAROrcamentoConvenio(objOrcamento) 
	Set $$$VARAgendamentoPlanodeSaude(objeto)			= $$$VAROrcamentoPlanodeSaude(objOrcamento) 
	Set $$$VARAgendamentoCarteirinha(objeto)			= $$$VAROrcamentoCarteirinha(objOrcamento) 
	Set $$$VARAgendamentoSituacao(objeto) 				= 1
	Set $$$VARAgendamentoCriadoEm(objeto) 				= $Horolog
	Set $$$VARAgendamentoCriadoPor(objeto) 				= YBED
	Set strStatus = $$$Save("VARAgendamento", chave, objeto, $$$YES)
	;
	Kill ^mtemp.VARAgendamento(chave)
	Set codProcedimento = ""
	For {
		Set codProcedimento = $Order(^VAROrcamentoProcedimentos(YM, pCodOrcamento, codProcedimento))
		Quit:codProcedimento=""
	
		Do ..InserirProcedimentoBuscar(chave, codProcedimento, YBED)		
	}
	;
	Set $$$VAROrcamentoSituacao(objOrcamento) = 4
	Set strStatus = $$$Save("VAROrcamento", pCodOrcamento, objOrcamento, $$$YES)
	;
	Set listRetorno = {}
	Set listRetorno.codAgendamento 	= chave
	Set listRetorno.codPaciente 		= codPaciente
	Set listRetorno.observacao 			= $$$VARAgendamentoObservacao(objeto)
	Set listRetorno.codPlanoSaude		= $$$VAROrcamentoPlanodeSaude(objOrcamento)
	Set listRetorno.codConvenio			= $$$VAROrcamentoConvenio(objOrcamento)
	Set listRetorno.codCarteirinha	= $$$VAROrcamentoCarteirinha(objOrcamento) 
	
	Do listRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="EnviarEmail">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pEmail,pImp=0</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;	
	Set status 		= $$$OK
	Set mensagem 	= ""
	;
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set codPaciente				= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
	Set objMEDPatient 		= $Get(^MEDPatient(YM, codPaciente, 1))
	Set emailPaciente 		= $ZConvert($$$MEDPatientEmail(objMEDPatient),"l")
	;
	If (pImp = 0) {
		If (emailPaciente = "") Return $$$OK
		If (+$$$VARAgendamentoEnviarEmail(objVARAgendamento) '= 1) Return $$$OK
	}
	;
	Set objWWW0121 	= $Get(^WWW0121(YM, YM, 0, 1))
  Set objWWW012 	= $Get(^WWW012(YM, YM, 1))
  ;
  Set server 								= ##class(%Net.SMTP).%New()
  ;177.70.110.120
  Set server.smtpserver 		= $$$WWW012TCPIPEMailServer(objWWW012)
  Set server.port 					= $$$WWW012PortNumberSMTP(objWWW012)
  Set auth									=	##class(%Net.Authenticator).%New()
  Set auth.UserName					=	$$$WWW012AutoEmailUsername(objWWW012)
  Set auth.Password					=	$$$WWW012AutoEmailPassword(objWWW012)
  ;
  Set server.authenticator 	= auth
  Set server.AuthFrom				=	auth.UserName
  ;
	Set msg 									= ##class(%Net.MailMessage).%New()
	Set From 									= server.authenticator.UserName
	Set msg.From 							= From
	;
	Do msg.To.Insert(emailPaciente)
	Set msg.Subject  = $$$WWW0121LocationName(objWWW0121)_" - Agendamento"
	Set msg.IsBinary = 0
	Set msg.IsHTML	 = 1
	;
	;
	Set onLoad = ""
	If (pImp = 1) {
		Set onLoad=" onLoad='window.print();'"
	}	
	;
	Set MSG = "<html><body "_onLoad_"><table cellpadding='0' cellspacing='0' border='0' align='center'><tr>"
  Set MSG = MSG _ "<td width='300' height='40px' colspan='2' align='center' style='font-family:arial;background-color: #c5f0df;border-top: 1px solid #cccccc;border-bottom: 1px solid #cccccc;'><br>"
  Set MSG = MSG _ $$$WWW0121LocationName(objWWW0121)_"<br><br></td>"
  Set MSG = MSG _ "<td width='300' colspan='2' align='center' style='font-family:arial;background-color: #c5f0df;border-top: 1px solid #cccccc;border-bottom: 1px solid #cccccc;'>Confirmação de Agendamento</td>"
  Set MSG = MSG _ "</tr><tr>"
  Set MSG = MSG _ "<td colspan='4' height='100'>"
	Set MSG = MSG _ "<table cellpadding='2' cellspacing='0' border='0'>"
  Set MSG = MSG _ "<tr>"
  Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;text-align: left;' width='450'>Olá <b>"_$$$MEDPatientName(objMEDPatient)_"</b>,</td>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;text-align: center;' width='125' rowspan='2'>"
		Set MSG = MSG _ "<img height='70' src='https://chart.googleapis.com/chart?chs=150x150&cht=qr&chl="_pCodAgendamento_"'>"
		Set MSG = MSG _ "</td></tr><tr>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;text-align: left;' width='450'>"
		Set MSG = MSG _ "&nbsp; Seus exames/consultas foram agendados!<br>"
		Set MSG = MSG _ "&nbsp; Lembre-se, ao chegar no local, identificar-se na recepção.<br>"
		Set MSG = MSG _ "&nbsp; Apresente este código de barras para agilizar seu atendimento."
		Set MSG = MSG _ "</td></tr></table> </td></tr>"
  Set MSG = MSG _ "<tr>"
	Set MSG = MSG _ "<td colspan='4' style='border-top: 1px solid #d0d0d0;font-family:arial;font-size:14px;padding-left: 5px;color:#000000;background-color: #c5f0df;' height='30'><b>Agendamento(s):</b></td>"
	Set MSG = MSG _ "</tr>"
	Set sequencia = "", flag = 0
	For {
		Set sequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia))
		Quit:sequencia=""
		
		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia, 1))
		Set codProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		Set rCodProfissional 		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
		Set rDatadeAtendimento	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
		Set rHoradeAtendimento 	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
		Set codSala					 		= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
		Set codLeito						= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
		Set rEncaixe						= +$$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos)
		Set rRequerAgendamento	= +$$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
		
		If (rCodProfissional '= "") {
			Set codSala = $$GetCodSalasProfissional^VARSQL(rCodProfissional, rDatadeAtendimento, rHoradeAtendimento)
			Set codUnidade = $$GetVARSalasAtendimentosUnidade^VARSQL(codSala)
		}Else{
			Set codUnidade = $$GetVARSalasAtendimentosUnidade^VARSQL(codSala)
		}
		;
		If ($$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1) Continue

		Set codExecutor = ""
		&SQL(
			Select Executor Into :codExecutor From SQLUser.VARManualExame
			Where Company = 0 And CodigoExame = :codProcedimento
						And Situacao = 'A'
		)
		;
		Set (descricaoDieta, descricaoPaciente) = ""
		If (codExecutor '= "") {
			Set objVARManualExame = $Get(^VARManualExame(YM, codProcedimento, codExecutor, 1))
			Set descricaoDieta 		= $$$VARManualExameDescricaoDieta(objVARManualExame)
			Set descricaoPaciente = $$$VARManualExameDescricaoPaciente(objVARManualExame)
		}	
		;
		Set MSG = MSG _ "<tr>"
		Set MSG = MSG _ "<td colspan='4' style='font-family:arial;font-size:14px;background-color: #f0f0f0;"_$Select(flag=1:"border-top:1px solid #d0d0d0;",1:"")_"'>"
		Set MSG = MSG _ "<table cellpadding='2' cellspacing='0' border='0' align='center'><tr>"
    Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;text-align: right;font-weight: bold;' width='125'>Exames/Consultas:&nbsp;</td>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;' width='450'><b>"_$$SQLGetDescricaoProduto^VARSQL(codProcedimento, 1)_"</b></td>"
		Set MSG = MSG _ "</tr><tr>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;text-align: right;font-weight: bold;' width='125'>Data Hora:&nbsp;</td>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;' width='450'>"_$Select(rDatadeAtendimento="":"",1:($ZDate(rDatadeAtendimento,4)_" "_$ZTime(rHoradeAtendimento,2)))_"</td>"
		Set MSG = MSG _ "</tr><tr>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;text-align: right;font-weight: bold;' width='125'>Unidade:&nbsp;</td>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;' width='450'>"_$$SQLGetLocationName^VARSQL(codUnidade)_"</td>"
		Set MSG = MSG _ "</tr><tr>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:12px;text-align: right;font-weight: bold;' width='125'>&nbsp;</td>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:12px;' width='450'>"_$$SQLGetEnderecoLocal^VARSQL(codUnidade,2)_"</td>"
		Set MSG = MSG _ "</tr><tr>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:12px;text-align: right;font-weight: bold;' width='125'>&nbsp;</td>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:12px;' width='450'>"_$$SQLGetEnderecoLocal^VARSQL(codUnidade,3)_"</td>"
		Set MSG = MSG _ "</tr><tr>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:12px;text-align: right;font-weight: bold;' width='125'>&nbsp;</td>"
		Set MSG = MSG _ "<td style='font-family:arial;font-size:12px;' width='450'>"_$$SQLGetEnderecoLocal^VARSQL(codUnidade,4)_"</td>"
		Set MSG = MSG _ "</tr>"
		If (descricaoDieta '= "" || (descricaoPaciente '= "")) {
			Set MSG = MSG _ "<tr>"
			Set MSG = MSG _ "<td style='font-family:arial;font-size:14px;text-align: right;vertical-align: top;font-weight: bold;' width='125'>Pré Requisito:&nbsp;</td>"
			Set MSG = MSG _ "<td style='font-family:arial;font-size:12px;' width='450'>"
			If (descricaoDieta '= "") {
				Set MSG = MSG _ "<li><b>Dieta</b></li><br>"
				Set MSG = MSG _ descricaoDieta
				Set:descricaoPaciente'="" MSG = MSG _ "<br><br>"
			}
			If (descricaoPaciente '= "") {
				Set MSG = MSG _ "<li><b>Paciente</b></li><br>"
				Set MSG = MSG _ descricaoPaciente
			}
			Set MSG = MSG _ "</td></tr>"
		}
		Set MSG = MSG _ "</table></td></tr>"
		Set flag = 1
	}
  Set MSG = MSG _ "<tr><td colspan='4' style='border-top: 1px solid #d0d0d0;font-family:arial;font-size:14px;padding-left: 5px;color:red;background-color: #c5f0df;' height='30'><b>OBSERVAÇÕES IMPORTANTES:</b></td></tr>"
  Set MSG = MSG _ "<tr>"
  Set MSG = MSG _ "<td colspan='2' style='margin: 5px;vertical-align: top;font-family:arial;font-size:14px;background-color: #f0f0f0;'>"
  Set MSG = MSG _ "<br>&nbsp; <b>Validade: Guia de Exames</b><br><br>"
  Set MSG = MSG _ "&nbsp; &nbsp; Sua guia possui validade. Caso vencida,<br>"
  Set MSG = MSG _ "&nbsp; &nbsp; fale com seu médico.</td>"
  Set MSG = MSG _ "<td colspan='2' style='margin: 5px;vertical-align: top;font-family:arial;font-size:14px;background-color: #f0f0f0;'>"
  Set MSG = MSG _ "<br><b>Levar Documentos</b><ul>"
  Set MSG = MSG _ "<li>Documento com foto.</li>"
  Set MSG = MSG _ "<li>Carteirinha do convênio.</li>"
  Set MSG = MSG _ "<li>Guia de exames e/ou Pedido<br>médico original.</li>"
  Set MSG = MSG _ "</ul></td></tr>"
	Set MSG = MSG _ "</table></body></html>"
	;
	If (pImp = 0) {
		Do msg.TextData.Write(MSG)
		Set strStatus = server.Send(msg)
		If $$$ISERR(strStatus) {
			Do $System.Status.DisplayError(strStatus)
			Set status 		= 0
			Set mensagem 	= server.Error
		}		
		;
	}Else{
		Write MSG	
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetTentContato">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))

	Set arrayRetorno 		= []
	If (pCodAgendamento '= "") {
		Set meuSQL = "Select * From SQLUser.VARAgendamentoTentContato "
		Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
		Set meuSQL = meuSQL _ "Order By DataRegistro Desc, HoraRegistro Desc"
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
		While rSet.%Next() {
			Set list = {}
			Set list.dataHora	= $ZDate(rSet.%Get("DataRegistro"),4)_" "_$ZTime(rSet.%Get("DataRegistro"),2) 
			Set list.usuario	= $$SQLGetUserName^VARSQL(rSet.%Get("Responsavel"))
			Set list.registro	= rSet.%Get("Observacao")
			Do arrayRetorno.%Push(list)
		}
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmTentContato">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pObservacao		 	= $Get(%request.Data("pObservacao",1))
	Set objeto = ""
	Set $$$VARAgendamentoTentContatoResponsavel(objeto) = YBED
	Set $$$VARAgendamentoTentContatoObservacao(objeto) 	= pObservacao
	Set id 		 = pCodAgendamento_$$$COMMA_+$Horolog_$$$COMMA_$Piece($Horolog,",",2)
	Write $$$Save("VARAgendamentoTentContato", id, objeto, $$$YES)
	Return $$$OK]]></Implementation>
</Method>

<Method name="SetPlanoSaude">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pProcedimento 	= $Get(%request.Data("pProcedimento",1))

	Set pCodConvenio 		= $Get(%request.Data("pCodConvenio",1))
	Set pCodPlanSaud 		= $Get(%request.Data("pCodPlanSaud",1))
	Set pCarteirinha 		= $Get(%request.Data("pCarteirinha",1))
	Set pVencimento 		= $Get(%request.Data("pVencimento",1))
	If (pVencimento '= "") {
		If ($Length($Piece(pVencimento,"/",1)) = 4) {
			Set pVencimento = $ZDateH(pVencimento,5)
		}Else{
			Set pVencimento = $ZDateH(pVencimento,4)
		}
	}

	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pProcedimento),Y,8) 	= pCodConvenio
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pProcedimento),Y,9) 	= pCodPlanSaud
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pProcedimento),Y,10) 	= pCarteirinha
	Set $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", pProcedimento),Y,11) 	= pVencimento

	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPlanoSaude">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pProcedimento 	= $Get(%request.Data("pProcedimento",1))

	Kill temp 

	Set objVARAgendamento 	= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set rCodPlanoSaude 			= $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
	Set rCodConvenio 				= $$$VARAgendamentoConvenio(objVARAgendamento)
	Set rNumCarteirinha			= $$$VARAgendamentoCarteirinha(objVARAgendamento) 						
	Set rVencCarteirinha		= $$$VARAgendamentoVencimentodaCarteirinha(objVARAgendamento) 
	If (rCodConvenio '= "" && (rCodPlanoSaude '= "") && (rNumCarteirinha '= "") && (rVencCarteirinha '= "")) {
		Set temp(rCodConvenio, rCodPlanoSaude, rNumCarteirinha, rVencCarteirinha) = ""
	}
	
	Set xProcedimento = ""
	For {
		Set xProcedimento = $Order(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xProcedimento))
		Quit:xProcedimento=""
		
		Set rCodConvenio 				= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xProcedimento),Y,8) 
		Set rCodPlanoSaude 			= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xProcedimento),Y,9)
		Set rNumCarteirinha 		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xProcedimento),Y,10)
		Set rVencCarteirinha 		= $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", xProcedimento),Y,11)

		If (rCodConvenio '= "" && (rCodPlanoSaude '= "") && (rNumCarteirinha '= "") && (rVencCarteirinha '= "")) {
			Set temp(rCodConvenio, rCodPlanoSaude, rNumCarteirinha, rVencCarteirinha) = ""
		}
	}

	Set arrayDS = []
	Set rCodConvenio = ""
	For {
		Set rCodConvenio = $Order(temp(rCodConvenio))
		Quit:rCodConvenio=""
		Set rCodPlanoSaude = ""
		For {
			Set rCodPlanoSaude = $Order(temp(rCodConvenio, rCodPlanoSaude))
			Quit:rCodPlanoSaude=""
			Set rNumCarteirinha = ""
			For {
				Set rNumCarteirinha = $Order(temp(rCodConvenio, rCodPlanoSaude, rNumCarteirinha))
				Quit:rNumCarteirinha=""
				Set rVencCarteirinha = ""
				For {
					Set rVencCarteirinha = $Order(temp(rCodConvenio, rCodPlanoSaude, rNumCarteirinha, rVencCarteirinha))
					Quit:rVencCarteirinha=""
				
					Set listDados = {}
					Set listDados.id = rCodConvenio_Y_rCodPlanoSaude_Y_rNumCarteirinha_Y_rVencCarteirinha
					Set listDados.codConvenio 		= rCodConvenio
					Set listDados.descConvenio 		= ##Class(User.Search.PesquisasJson).GetOrganizacaoNome(rCodConvenio)
					Set listDados.codPlanoSaude 	= rCodPlanoSaude
					Set listDados.descPlanoSaude	= ##Class(User.Search.PesquisasJson).GetOrganizacaoNome(rCodPlanoSaude)
					Set listDados.carteirinha 		= rNumCarteirinha
					Set listDados.vencimento 			= $ZDate(rVencCarteirinha,4)
				
					Do arrayDS.%Push(listDados)
					
				}
			}
		}
	}
	Set listRetorno = {}
	Set listRetorno.descProcedimento	 = $$SQLGetDescricaoProduto^VARSQL(pProcedimento, 1) 
	Set listRetorno.arrayDS 					= arrayDS 
	
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ChecaPlanoSaude">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set strStatus = ""
	Set mensagem 	= ""
	Set erro			=	0
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pCodPlanoSaude				= $Get(%request.Data("pCodPlanoSaude",1))
	Set pArrayProcedimentoArm	= $Get(%request.Data("pArrayProcedimentoArm",1)) 
	
	;Write 1
	;Return $$$OK
	
	Set codProcedimento = ""
	For {
		Set codProcedimento = $Order(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento))
		Quit:codProcedimento=""

		Set rCodPlanoSaude = $Piece(^mtemp.VARAgendamento(pCodAgendamento, "Horarios", codProcedimento),"~",9)
		If (rCodPlanoSaude = "") Set rCodPlanoSaude = pCodPlanoSaude

		Set problemaConvenio = ""
		If (rCodPlanoSaude = "") {
			Set problemaConvenio = "Informar o plano de saúde"
		}Else{
			Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, rCodPlanoSaude)
			If ($IsObject(objRegraComercial)) {
				If (objRegraComercial.isInelegivel = 1) {
					Set problemaConvenio = "Procedimento não atendido pelo Plano de Saúde informado."
				}
			}Else{
				Set problemaConvenio = "Problema para carregar a regra do plano de saúde."
			}
		}		
		Quit:problemaConvenio'=""
	}
	If (problemaConvenio'="") {
		Write "Há procedimentos não atendido pelo Plano de Saúde informado, favor checar."
	}Else{
		Write 1
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPlanoSaudeCampo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodOrganizacao	= $Get(%request.Data("pCodOrganizacao",1))
	Set pCodPlanoSaude	= $Get(%request.Data("pCodPlanoSaude",1))
	If (pCodPlanoSaude '= "") {
		Set objOrganizacao = $Get(^FATOrganizacao(0, pCodPlanoSaude, 1))
		Set retorno = []
		Set linha = {}
		Set linha.codOrganizacao 			= pCodPlanoSaude
		Set linha.nomeOrganizacao 		= $$$FATOrganizacaoNome(objOrganizacao)
		Set linha.Category 	= ""
		Do retorno.%Push(linha)
	}Else{
		If (pCodOrganizacao = "") {
			Set retorno = []
		}Else{
			Set retorno = ..GetPlanoSaudeCampoFilhos(pCodOrganizacao)
		}
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPlanoSaudeCampoFilhos">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodigoPai,pCaminhoPai=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set retorno = []
	Set meuSQL = "Select * From SQLUser.FATOrganizacao "
	Set meuSQL = meuSQL _ "Where Company = 0 "
	Set meuSQL = meuSQL _ "And OrganizacaoPai = '"_pCodigoPai_"' "
	Set meuSQL = meuSQL _ "And Ativo = 1 Order By Nome"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("", meuSQL)
	While(rSet.%Next()){
		If (rSet.%Get("PlanoSaudeAtivo") = 1) {
			Set linha = {}
			Set linha.codOrganizacao 			= rSet.%Get("CodigodaOrganizacao")
			Set linha.nomeOrganizacao 		= rSet.%Get("Nome")
			Set linha.nomePaiOrganizacao 	= pCaminhoPai
			Do retorno.%Push(linha)
		}Else{
			Set items = ..GetPlanoSaudeCampoFilhos(rSet.%Get("CodigodaOrganizacao"), rSet.%Get("Nome"))
			For count = 1 : 1 : items.%Size() {
				Set linha = items.%Get(count-1)
				Do retorno.%Push(linha)
			}
		}
	}
	Return retorno]]></Implementation>
</Method>

<Method name="GetCEP">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 	= $Get(%request.Data("YBED",1))
	Set pCEP	= $Get(%request.Data("pCEP",1))
	;
	Set objVARCEP = $Get(^VARCEP(YM, pCEP, 1))
	;
	Set list = {}
	Set list.Logradouro = $$$VARCEPTipodeLogradouro(objVARCEP)_" "_$$$VARCEPLogradouro(objVARCEP)
	Set list.Bairro = $$$VARCEPBairro(objVARCEP)
	Set list.Cidade = $$$VARCEPCidade(objVARCEP)
	Set list.UF	= $$$VARCEPUF(objVARCEP)
	Do list.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetTrocaItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente,pCodConvenio,pCodPlanoSaude,pCodItem,pCodItemTroca,pDataIni,pDataFinal,pRetorno=0,pCodProfissional=""</FormalSpec>
<Implementation><![CDATA[	New (pCodPaciente, pCodConvenio, pCodPlanoSaude, pCodItem, pCodItemTroca, pDataIni, pDataFinal, pRetorno, pCodProfissional)
	;
	Set objVARAgendamentoConf = $Get(^VARAgendamentoConf(0, 0, 1))
	Set cobrancaParaRetorno = +$$$VARAgendamentoConfAgendCobrancaparaRetorno(objVARAgendamentoConf)
	Set apenasUmRetorno = +$$$VARAgendamentoConfAgendApenasumRetorno(objVARAgendamentoConf)
	If (pCodProfissional'=""&&(+apenasUmRetorno=0)) {
		If ((";"_$$$VARAgendamentoConfExcecaodeRetorno(objVARAgendamentoConf)_";")[(";"_pCodProfissional_";")) {
			Set apenasUmRetorno = 1
		}
	}
	;
	Set codFontePagadora = $$GetFontePagadora^VARSQL(pCodConvenio)
	If (cobrancaParaRetorno = 1 && (codFontePagadora = "")) Return ""
	;
	Set prodSQL = "'"_pCodItem_"'"
	Set grupoAgend = $$GetCodGrupoAgendamento^VARSQL(pCodItem)
	If (grupoAgend '= "") {
		Set xCodProduto = ""
		For {
			Set xCodProduto	= $Order(^INARTs(0, 500, grupoAgend, xCodProduto))
			Quit:xCodProduto=""
			If (xCodProduto = pCodItem) Continue
			If (xCodProduto = pCodItemTroca) Continue
			Set prodSQL = prodSQL_",'"_xCodProduto_"'"
		}		
	}
	;
	Set codProdutoAnt = "", dtAdm = ""
	Set meuSQL = "Select Proc.Procedimento, Adm.CriadoData From SQLUser.VARAgendamentoProcedimentos As Proc, "
	Set meuSQL = meuSQL _ "SQLUser.VARAgendamentoAdmissao As Adm, SQLUser.VARAgendamento As Age "
	Set meuSQL = meuSQL _ "Where Proc.Company = 0 And Proc.ControleAdmissao = Adm.CodigodaAdmissao "
	Set meuSQL = meuSQL _ "And Proc.CodigodoAgendamento = Age.Numero "
	Set meuSQL = meuSQL _ "And Age.CodigodoPaciente = '"_pCodPaciente_"' "
	If (apenasUmRetorno = 1) {
		Set meuSQL = meuSQL _ "And Proc.Procedimento In ("_prodSQL_",'"_pCodItemTroca_"') "
	}Else{
		Set meuSQL = meuSQL _ "And Proc.Procedimento In ("_prodSQL_") "
	}
	If (cobrancaParaRetorno = 1){
		Set meuSQL = meuSQL _ "And $$GetFontePagadora^VARSQL(Proc.Convenio) = '"_codFontePagadora_"' "
	}ElseIf (cobrancaParaRetorno = 2) {
		Set meuSQL = meuSQL _ "And Proc.Convenio = '"_pCodConvenio_"' "
	}ElseIf (cobrancaParaRetorno = 3) {
		Set meuSQL = meuSQL _ "And Proc.PlanodeSaude = '"_pCodPlanoSaude_"' "
	}
	Set meuSQL = meuSQL _ "And Adm.CriadoData Between "_pDataIni_" And "_pDataFinal_" "
	Set meuSQL = meuSQL _ "Order By Adm.CriadoData Desc, Adm.CriadoHora Desc "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set codProdutoAnt = rSet.%Get("Procedimento")
		Set dtAdm 				= rSet.%Get("CriadoData")
		Quit
	}
	;
	If (prodSQL [ ("'"_codProdutoAnt_"'")) {
		Return:pRetorno=1 dtAdm
		Return $$SQLGetDescricaoProduto^VARSQL(pCodItemTroca, 1)
	}
	Return ""]]></Implementation>
</Method>

<Method name="GetMedicoComAgenda">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set arrayRetorno = []
	
	Set meuSQL = "Select CodigoProfissional, $$SQLGetProviderName^VARSQL(CodigoProfissional) As Nome "
	Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgenda Where Company = 0 "
	Set meuSQL = meuSQL _ "Group By CodigoProfissional Order By Nome"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set listRetorno = {}
		Set listRetorno.codigo 	= rSet.%Get("CodigoProfissional")
		Set listRetorno.nome 		= rSet.%Get("Nome")
		Do arrayRetorno.%Push(listRetorno)
	}
	
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarRelatorio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set pObjFiltros = $Get(%request.Data("dados",1))
	Set pObjFiltros = [].%FromJSON(pObjFiltros)

	Set pDtInicial 				= pObjFiltros.relatorioDtInicial
	Set pDtFinal 					= pObjFiltros.relatorioDtFinal
	Set pMedicos					= pObjFiltros.relatorioMedico
	Set pProcedimentos		= pObjFiltros.relatorioProcedimento
	Set pSalas						= pObjFiltros.relatorioSala

	If (pDtFinal = "") Set pDtFinal = pDtInicial
	Set pDtInicial 	= $ZDateH(pDtInicial,3)
	Set pDtFinal 		= $ZDateH(pDtFinal,3)

	Set arrayRetorno = []

	Set meuSQL = "Select Proc.*, Agend.CodigodoPaciente From SQLUser.VARAgendamentoProcedimentos As Proc, SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Where Proc.Company = 0 And Agend.Company = 0 "
	Set meuSQL = meuSQL _ "And Proc.DataAtendimento BETWEEN "_pDtInicial_" And "_pDtFinal_" "
	Set meuSQL = meuSQL _ "And Agend.Numero = Proc.CodigodoAgendamento "
	;
	If (pMedicos'=""&&(pMedicos.%Size()>0)) {
		Set meuSQL = meuSQL _ "And Proc.Profissional In ("
		For i = 0 : 1 : (pMedicos.%Size()-1) {
			Set meuSQL = meuSQL _ $Select(i=0:"",1:",") _ "'"_pMedicos.%Get(i)_"'"
		}
		Set meuSQL = meuSQL _ ") "
	}
	;
	If (pProcedimentos'=""&&(pProcedimentos.%Size()>0)) {
		Set meuSQL = meuSQL _ "And Proc.Procedimento In ("
		For i = 0 : 1 : (pProcedimentos.%Size()-1) {
			Set meuSQL = meuSQL _ $Select(i=0:"",1:",") _ "'"_pProcedimentos.%Get(i)_"'"
		}
		Set meuSQL = meuSQL _ ") "
	}
	;
	Set tSalas = ""
	If (pSalas'=""&&(pSalas.%Size()>0)) {
		For i = 0 : 1 : (pSalas.%Size()-1) {
			Set tSalas = tSalas _ $Select(i=0:"",1:";") _ pSalas.%Get(i)
		}
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		;
		Set codSala = rSet.%Get("CodigodaSala")
		If (codSala '= "") {
			Set descSala 	= $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("CodigodaSala"),rSet.%Get("CodigodoLeito"))
		}Else{
			Set codSala 	= $$GetCodSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
			Set descSala 	= $$GetDescSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
		}
		If (tSalas'=""&&((";"_tSalas_";")'[(";"_codSala_";"))) Continue
		;
		Set listRetorno = {}
		Set listRetorno.prontuario 		= $$SQLGetPatientProntuario^VARSQL(rSet.%Get("CodigodoPaciente"))
		Set listRetorno.paciente	 		= $$SQLGetPatientName^VARSQL(rSet.%Get("CodigodoPaciente"))
		Set listRetorno.agendamento		= rSet.%Get("CodigodoAgendamento")
		Set listRetorno.procedimento	= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"), 1)
		Set listRetorno.sala 					= descSala
		Set listRetorno.medico				= $$SQLGetProviderName^VARSQL(rSet.%Get("Profissional"))
		Set listRetorno.dtAgendamento	= $ZDate(rSet.%Get("DataAtendimento"),4)
		Set listRetorno.hrAgendamento	= $ZTime(rSet.%Get("HoraAtendimento"),2)
		Set listRetorno.dtAdmissao		= $Select(rSet.%Get("DataHoraAdmissao")="":"",1:$ZDate(rSet.%Get("DataHoraAdmissao"),3))
		Set listRetorno.hrAdmissao		= $Select(rSet.%Get("DataHoraAdmissao")="":"",1:$ZTime($Piece(rSet.%Get("DataHoraAdmissao"),",",2),2))
		Do arrayRetorno.%Push(listRetorno)
	}
	Do arrayRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>