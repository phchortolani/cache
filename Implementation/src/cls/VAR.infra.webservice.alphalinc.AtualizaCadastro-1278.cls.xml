<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.webservice.alphalinc.AtualizaCadastro">
<Description><![CDATA[Esta classe implementa todos os web services a serem utilizados pela Integração de Cadastro entre Alphalinc e InfoSaúde, especificamente para o cliente Heva.]]></Description>
<ClassType/>
<Import>VAR.infra.integracao,VAR.common.soap,VAR.infra.util,alWEB.WS</Import>
<IncludeCode>VARLog,MEDConst,INConst,WWWSYS</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%SOAP.WebService</Super>

<Parameter name="NAMESPACE">
<Default>http://tempuri.org</Default>
</Parameter>

<Parameter name="SERVICENAME">
<Description><![CDATA[Name of the WebService.]]></Description>
<Default>AtualizaCadastro</Default>
</Parameter>

<Parameter name="SOAPVERSION">
<Description><![CDATA[This is the SOAP version supported by the service.]]></Description>
<Default>1.1</Default>
</Parameter>

<Method name="AtualizaFornecedores">
<Description><![CDATA[Método para criar um fornecedor ou atualizar seu cadastro. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>Fornecedores (obrigatório) - Lista de Fornecedores;
</UL>
<BR>
Retorno:<BR><UL>
<LI>ResultadoCadastro - Contém uma Lista de Resultados com Código e Descrição de Erro
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,Fornecedores:VAR.common.soap.Fornecedores</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>ResultadoCadastro</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	#define FORNECSTATUSALPHALINCINATIVO 0
	#define FORNECSTATUSALPHALINCATIVO 1
	#define FORNECSTATUSALPHALINCCOMPRAS 2
	#define FORNECSTATUSALPHALINCCOMPRASNF 3
	#define FORNECSTATUSINFOSAUDEATIVO "A"
	#define FORNECSTATUSINFOSAUDECOMPRAS "C"
	#define FORNECSTATUSINFOSAUDECOMPRASRECEBIMENTO "R"
	#define FORNECSTATUSINFOSAUDEINATIVO "I"
	#define FORNECATIVOINFOSAUDEATIVO "S"
	#define FORNECATIVOINFOSAUDEINATIVO "N"
	
	#dim fornecedor AS Fornecedor
 	
 	set resultado = ##class(ResultadoCadastro).%New()
 	set resultado.Resultados = ##class(%ListOfObjects).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

	    for i = 1:1:Fornecedores.Fornecedores.Count() {
			set fornecedor = Fornecedores.Fornecedores.GetAt(i)

	        set resultadoChave = ##class(ResultadoChave).%New()
	        set resultadoChave.Chave1 = fornecedor.Codigo
	        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
	        set resultadoChave.MensagemErro = ""

			set codigoAlphalinc = ##class(ConversaoInfoSaude).GetFornecedorAlphalinc(fornecedor.Codigo,
				fornecedor.CnpjCpf)
			if ($length(codigoAlphalinc) = 0)  {
				set idINLIEF = fornecedor.Codigo
			}
			else {
				set idINLIEF = codigoAlphalinc
			}
			set objINLIEF = $get(^INLIEF(YM, idINLIEF, 1))

			if ((fornecedor.Acao = "insert") || (fornecedor.Acao = "update")) {
				if (($length(fornecedor.Estado) > 0) &&
					('$data(^WWW102(0, "BUNDESLAND", "BR", fornecedor.Estado, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Estado '"_fornecedor.Estado_"' desconhecido"
				}
				elseif (($length(fornecedor.Pais) > 0) &&
						('$data(^WWW100(0, "LAND", "PT", fornecedor.Pais, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "País '"_fornecedor.Pais_"' desconhecido"
				}
			}

			if (resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")) {
				if ((fornecedor.Acao = "insert") || (fornecedor.Acao = "update")) {
					if (fornecedor.Ativo = $$$FORNECATIVOINFOSAUDEATIVO) {
						if (fornecedor.Status = $$$FORNECSTATUSINFOSAUDEATIVO) {
							set $$$INLIEFStatus(objINLIEF) = $$$FORNECSTATUSALPHALINCATIVO
						}
						elseif (fornecedor.Status = $$$FORNECSTATUSINFOSAUDECOMPRAS) {
							set $$$INLIEFStatus(objINLIEF) = $$$FORNECSTATUSALPHALINCCOMPRAS
						}
						elseif (fornecedor.Status = $$$FORNECSTATUSINFOSAUDECOMPRASRECEBIMENTO) {
							set $$$INLIEFStatus(objINLIEF) = $$$FORNECSTATUSALPHALINCCOMPRASNF
						}
					}
					elseif ((fornecedor.Ativo = $$$FORNECATIVOINFOSAUDEINATIVO) && (fornecedor.Status = $$$FORNECSTATUSINFOSAUDEINATIVO)) {
						set $$$INLIEFStatus(objINLIEF) = $$$FORNECSTATUSALPHALINCINATIVO
					}
					
					set $$$INLIEFFREE5(objINLIEF) = fornecedor.NaturezaFiscal
					set $$$INLIEFCompanyNumber(objINLIEF) = fornecedor.CnpjCpf
					set $$$INLIEFName1(objINLIEF) = fornecedor.RazaoSocial
					set $$$INLIEFShortName(objINLIEF) = fornecedor.NomeFantasia
					set $$$INLIEFFREE3(objINLIEF) = fornecedor.InscricaoEstadual
					set $$$INLIEFFREE6(objINLIEF) = fornecedor.InscricaoMunicipal
					set $$$INLIEFContactPerson(objINLIEF) = fornecedor.Contato
					set $$$INLIEFFREE4(objINLIEF) = fornecedor.Telefone
					set $$$INLIEFFREE17(objINLIEF) = fornecedor.Celular
					set $$$INLIEFFax(objINLIEF) = fornecedor.Fax
					set $$$INLIEFEmail(objINLIEF) = fornecedor.Email
					set $$$INLIEFInternetAddress(objINLIEF) = fornecedor.Site
					set $$$INLIEFStreet(objINLIEF) = fornecedor.Logradouro
					set $$$INLIEFFREE14(objINLIEF) = fornecedor.Bairro
					set $$$INLIEFCity(objINLIEF) = fornecedor.Cidade
					set $$$INLIEFFREE12(objINLIEF) = fornecedor.NumeroLogradouro
					set $$$INLIEFFREE13(objINLIEF) = fornecedor.Complemento
					set $$$INLIEFZipCodePOBox(objINLIEF) = $$ApplyMask^WWWFORM8(
						$$FillChar^VARSQL(fornecedor.Cep, 8, 0), "5N1"_$$$DBLQUOTE_"-"_$$$DBLQUOTE_"3N")
					set $$$INLIEFState(objINLIEF) = fornecedor.Estado
					set $$$INLIEFCountry(objINLIEF) = fornecedor.Pais
					set $$$INLIEFDateEntered(objINLIEF) = +$zdatetimeh(fornecedor.CriadoEm, 3, 1)
					set $$$INLIEFFREE2(objINLIEF) = fornecedor.Codigo
					set $$$INLIEFSupplier(objINLIEF) = 1
					set $$$INLIEFFREE18(objINLIEF) = 1		// Flag que sinaliza carga por integração
					set strStatus = $$$Save("INLIEF", idINLIEF, objINLIEF, 1)
				}
				elseif (fornecedor.Acao = "delete") {
					if (($length(objINLIEF) > 0) &&
						($$$INLIEFStatus(objINLIEF) '= $$$FORNECSTATUSALPHALINCINATIVO)) {
						set $$$INLIEFStatus(objINLIEF) = $$$FORNECSTATUSALPHALINCINATIVO
						set $$$INLIEFFREE2(objINLIEF) = ""
						//set $$$INLIEFFREE18(objINLIEF) = 0		// Flag que sinaliza carga por integração
						set strStatus = $$$Save("INLIEF", idINLIEF, objINLIEF, 1)
					}
					else {
						set strStatus = $$$OK
					}
				}
				else {
					set strStatus = $$$MakeStatus("Ação '"_fornecedor.Acao_"' desconhecida")
				}

		        if ($$$ISOK(strStatus)) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
			        set resultadoChave.MensagemErro = ""
		        }
				elseif (##class(AlphalincError).GetErrorIdFromStatus(strStatus) = "COM00271") {
					set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCNPJOUCPFINVALIDO")
					set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
				}
				elseif (##class(AlphalincError).GetErrorIdFromStatus(strStatus) = "COM00293") {
					set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCNPJOUCPFJAEMUSO")
					set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
				}
	        	else {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCONHECIDO")
			        set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
	        	}
			}

        	do resultado.Resultados.Insert(resultadoChave)
	    }

	    set strStatus = $$$OK
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>

<Method name="AtualizaProfissionaisSaude">
<Description><![CDATA[Método para criar um profissional de saúde ou atualizar seu cadastro. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>Profissionais (obrigatório) - Lista de Profissionais de Saúde;
</UL>
<BR>
Retorno:<BR><UL>
<LI>ResultadoCadastro - Contém uma Lista de Resultados com Código e Descrição de Erro
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,Profissionais:VAR.common.soap.ProfissionaisSaude</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>ResultadoCadastro</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	#define PROFISSIONALSAUDESTATUSINATIVO 2

 	set resultado = ##class(ResultadoCadastro).%New()
 	set resultado.Resultados = ##class(%ListOfObjects).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

	    for i = 1:1:Profissionais.Profissionais.Count() {
			set profissional = Profissionais.Profissionais.GetAt(i)

	        set resultadoChave = ##Class(ResultadoChave).%New()
	        set resultadoChave.Chave1 = profissional.Codigo
	        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
	        set resultadoChave.MensagemErro = ""

			set idMEDProvider = profissional.Codigo
			set objMEDProvider = $get(^MEDProvider(YM, idMEDProvider, 1))

			if ((profissional.Acao = "insert") || (profissional.Acao = "update")) {
				if (($length(profissional.LicencaProfissional) > 0) &&
					('$data(^INPARA(YM, "MEDLICENSETYPE", "PT", profissional.LicencaProfissional, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Tipo de licença '"_profissional.LicencaProfissional_"' desconhecido"
				}
				elseif (($length(profissional.Uf) > 0) &&
						('$data(^WWW102(0, "BUNDESLAND", "BR", profissional.Uf, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Estado '"_profissional.Uf_"' desconhecido"
				}
				elseif (($length(profissional.Conselho) > 0) &&
						('$data(^INPARA(YM, "VARMEDCONSELHO", "PT", profissional.Conselho, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Conselho '"_profissional.Conselho_"' desconhecido"
				}
			}

			if (resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")) {
				if ((profissional.Acao = "insert") || (profissional.Acao = "update")) {
					set $$$MEDProviderName(objMEDProvider) = profissional.Nome

					set cpf = $translate(profissional.Cpf, ".-/")
					set $$$MEDProviderSSN(objMEDProvider) = $extract(cpf, 1, 3)_"."_
						$extract(cpf, 4, 6)_"."_$extract(cpf, 7, 9)_"-"_$extract(cpf, 10, 11)

					set $$$MEDProviderLicenseType(objMEDProvider) = profissional.LicencaProfissional
					set $$$MEDProviderFREE3(objMEDProvider) = profissional.Uf
					set $$$MEDProviderFREE2(objMEDProvider) = profissional.Conselho
					set $$$MEDProviderLicenseNumber(objMEDProvider) = profissional.NumeroConselho
					set $$$MEDProviderStatus(objMEDProvider) = profissional.Status
					set strStatus = $$$Save("MEDProvider", idMEDProvider, objMEDProvider, 1)
				}
				elseif (profissional.Acao = "delete") {
					if (($length(objMEDProvider) > 0) &&
						($$$MEDProviderStatus(objMEDProvider) '= $$$PROFISSIONALSAUDESTATUSINATIVO)) {
						set $$$MEDProviderStatus(objMEDProvider) = $$$PROFISSIONALSAUDESTATUSINATIVO
						set strStatus = $$$Save("MEDProvider", idMEDProvider, objMEDProvider, 1)
					}
					else {
						set strStatus = $$$OK
					}
				}
				else {
					set strStatus = $$$MakeStatus("Ação '"_profissional.Acao_"' desconhecida")
				}

		        if ($$$ISOK(strStatus)) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
			        set resultadoChave.MensagemErro = ""
		        }
		        elseif (($$DecodeError^COMUtilError(strStatus) [ "O CPF está incompleto") ||
		        		($$DecodeError^COMUtilError(strStatus) [ "CPF inválido")) {
					set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCNPJOUCPFINVALIDO")
					set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
		        }
		        elseif ($$DecodeError^COMUtilError(strStatus) [ "Já existe um registro com esse mesmo CPF") {
					set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCNPJOUCPFJAEMUSO")
					set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
		        }
		        else {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCONHECIDO")
			        set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
		        }
			}

        	do resultado.Resultados.Insert(resultadoChave)
	    }

	    set strStatus = $$$OK
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>

<Method name="AtualizaPacientes">
<Description><![CDATA[Método para criar um paciente ou atualizar seu cadastro. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>Pacientes (obrigatório) - Lista de Pacientes;
</UL>
<BR>
Retorno:<BR><UL>
<LI>ResultadoCadastro - Contém uma Lista de Resultados com Código e Descrição de Erro
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,Pacientes:VAR.common.soap.Pacientes</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>ResultadoCadastro</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	#define EXCLUIDO "EXCLUÍDO - "

 	set resultado = ##class(ResultadoCadastro).%New()
 	set resultado.Resultados = ##class(%ListOfObjects).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

		#dim paciente As VAR.common.soap.Paciente

	    for i = 1:1:Pacientes.Pacientes.Count() {
			set paciente = Pacientes.Pacientes.GetAt(i)

	        set resultadoChave = ##Class(ResultadoChave).%New()
	        set resultadoChave.Chave1 = paciente.Codigo
	        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
	        set resultadoChave.MensagemErro = ""

			set idMEDPatient = paciente.Codigo
			set objMEDPatient = $get(^MEDPatient(YM, idMEDPatient, 1))

			if ((paciente.Acao = "insert") || (paciente.Acao = "update")) {
				set $$$MEDPatientName(objMEDPatient) = paciente.Nome
				set $$$MEDPatientGender(objMEDPatient) = paciente.Sexo
				set $$$MEDPatientDOB(objMEDPatient) = paciente.DataNascimento
				set $$$MEDPatientFREE1(objMEDPatient) = (paciente.DataNascimento = 0)
				set $$$MEDPatientSSN(objMEDPatient) = paciente.Cpf
				set $$$MEDPatientFREE7(objMEDPatient) = paciente.Rg
				set $$$MEDPatientExternalCode(objMEDPatient) = paciente.Cns
				set $$$MEDPatientFREE9(objMEDPatient) = (paciente.Obito > 0)
				set $$$MEDPatientMothersName(objMEDPatient) = paciente.NomeMae
				set $$$MEDPatientTel(objMEDPatient) = paciente.Telefone
				set $$$MEDPatientFREE2(objMEDPatient) = paciente.Telefone2
				set $$$MEDPatientEmail(objMEDPatient) = paciente.Email
				set $$$MEDPatientStreet(objMEDPatient) = paciente.Logradouro
				set $$$MEDPatientFREE6(objMEDPatient) = paciente.Bairro
				set $$$MEDPatientCity(objMEDPatient) = paciente.Cidade
				set $$$MEDPatientFREE4(objMEDPatient) = paciente.NumeroLogradouro
				set $$$MEDPatientFREE3(objMEDPatient) = paciente.Complemento
				set $$$MEDPatientZipCode(objMEDPatient) = paciente.Cep
				set $$$MEDPatientState(objMEDPatient) = paciente.Estado
				set $$$MEDPatientCreatedDate(objMEDPatient) = $zdatetimeh(paciente.CriadoEm, 3, 1)
				set $$$MEDPatientPID(objMEDPatient) = paciente.Prontuario
				
				set strStatus = $$$Save("MEDPatient", idMEDPatient, objMEDPatient, 1)
			}
			elseif (paciente.Acao = "delete") {
				if (($length(objMEDPatient) > 0) &&
					($extract($$$MEDPatientName(objMEDPatient), 1, $length($$$EXCLUIDO)) '= $$$EXCLUIDO)) {
					set $$$MEDPatientName(objMEDPatient) = $$$EXCLUIDO_$$$MEDPatientName(objMEDPatient)
					set strStatus = $$$Save("MEDPatient", idMEDPatient, objMEDPatient, 1)
				}
				else {
					set strStatus = $$$OK
				}
			}
			else {
				set strStatus = $$$MakeStatus("Ação '"_paciente.Acao_"' desconhecida")
			}

	        if ($$$ISOK(strStatus)) {
		        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
		        set resultadoChave.MensagemErro = ""
	        }
	        else {
		        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCONHECIDO")
		        set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
	        }

        	do resultado.Resultados.Insert(resultadoChave)
	    }

	    set strStatus = $$$OK
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>

<Method name="AtualizaProdutos">
<Description><![CDATA[Método para criar um produto ou atualizar seu cadastro. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>Produtos (obrigatório) - Lista de Produtos;
</UL>
<BR>
Retorno:<BR><UL>
<LI>ResultadoCadastro - Contém uma Lista de Resultados com Código e Descrição de Erro
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,Produtos:VAR.common.soap.Produtos</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>ResultadoCadastro</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	#define PRODUTOSTATUSATIVO   0
	#define PRODUTOSTATUSINATIVO 1
	#define PRODUTOPOLITICANENHUMA         1
	#define PRODUTOPOLITICAFEFOSEMPROGRAMA 4
	#define PRODUTOPOLITICAFEFOCOMPROGRAMA 5
	#define PRODUTOPOLITICAKITSFEFO        6
	#define PRODUTOTIPOENTRADACOMPRA   1
	#define PRODUTOTIPOENTRADAPRODUCAO 3

 	set resultado = ##class(ResultadoCadastro).%New()
 	set resultado.Resultados = ##class(%ListOfObjects).%New()
	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR

		set SPRACHE = "PT"

    	#dim produto as Produto

	    for i = 1:1:Produtos.Produtos.Count() {
			set produto = Produtos.Produtos.GetAt(i)

	        set resultadoChave = ##Class(ResultadoChave).%New()
	        set resultadoChave.Chave1 = produto.Codigo
	        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
	        set resultadoChave.MensagemErro = ""

			set idINART = produto.Codigo
			set objINART = $get(^INART(YM, idINART, 1))

			if ($length(produto.Subgrupo) > 0) {
				set grupoProduto = produto.Grupo_"."_produto.Subgrupo
			}
			else {
				set grupoProduto = produto.Grupo
			}
			set portaria344ano98 = ##class(Strings).UpperCase(produto.Portaria344ano98)

			if ((produto.Acao = "insert") || (produto.Acao = "update")) {
				if (($length(produto.UnidadeApresentacao) > 0) &&
					('$data(^WWW101(0, "EINHEIT", "PT", produto.UnidadeApresentacao, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Unidade de apresentação '"_produto.UnidadeApresentacao_"' desconhecida"
				}
				elseif (($length(produto.UnidadeMedidaBase) > 0) &&
						('$data(^WWW101(0, "EINHEIT", "PT", produto.UnidadeMedidaBase, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Unidade base '"_produto.UnidadeMedidaBase_"' desconhecida"
				}
				elseif (($length(grupoProduto) > 0) &&
						('$data(^INItemGroup(YM, grupoProduto, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Grupo '"_grupoProduto_"' desconhecido"
				}
				elseif (($length(portaria344ano98) > 0) &&
						('$data(^VARPARA(0, "PSICOTROPICOS", "PT", portaria344ano98, 1)))) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
			        set resultadoChave.MensagemErro = "Valor da portaria 344/98 '"_portaria344ano98_"' desconhecido"
				}
			}

			if ((resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")) &&
				(produto.Acao = "update") &&
				($$$INARTUnitofMeasure(objINART) '= produto.UnidadeApresentacao)) {
				
				set estoque = ##class(alSOH.iSOH).GetQtyAvailable(produto.Codigo)
				if (estoque) {
			        set resultadoChave.CodigoRetorno =
			        	resultadoChave.%GetParameter("CODIGORETORNOERROALTERACAOPRODUTOCOMESTOQUE")
			        set resultadoChave.MensagemErro = "Produto '"_produto.Codigo_"' não pode ter  "_
			        	" a unidade de apresentação alterada, pois, já possui estoque"
				}
			}
			
			if ((resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")) &&
				((produto.Acao = "update") || (produto.Acao = "insert"))) {
				
				set estoque = +##class(alSOH.iSOH).GetQtyOnHand(produto.Codigo)			

				if (produto.IsMedicamento = "S") { 
					set idNewItemPolicy = $$$PRODUTOPOLITICAFEFOSEMPROGRAMA
				}
				else {
					set idNewItemPolicy = $$$PRODUTOPOLITICANENHUMA
				}
				
				if ((estoque > 0) && ($$$INARTItemPolicy(objINART) '= $get(idNewItemPolicy))) {
			        set resultadoChave.CodigoRetorno =
			        	resultadoChave.%GetParameter("CODIGOERROPRODUTOPOLITICAMODIFICADA")
			        set resultadoChave.MensagemErro = "Produto '"_produto.Codigo_"' não pode ter  "_
			        	" a política de dispensação modificada, pois, ainda possui estoque."
				}
			}

			if (resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")) {
				if ((produto.Acao = "insert") || (produto.Acao = "update")) {
					set $$$INARTSearchName(objINART) = produto.DescricaoResumida
					set $$$INARTCustomerTextorItemTextNo(objINART) = produto.DescricaoCompleta
					set $$$INARTHoldReason(objINART) = produto.Status
					set $$$INARTUnitofMeasure(objINART) = produto.UnidadeApresentacao
					set $$$INARTBaseUnit(objINART) = produto.UnidadeMedidaBase
					if (+##class(alSOH.iSOH).GetQtyOnHand(produto.Codigo) = 0) {
						if (produto.IsMedicamento = "S") { 
							set $$$INARTItemPolicy(objINART) = $$$PRODUTOPOLITICAFEFOSEMPROGRAMA
						}
						else {
							set $$$INARTItemPolicy(objINART) = $$$PRODUTOPOLITICANENHUMA
						}
					}
					set $$$INARTFREE1(objINART) = produto.CodigoSeconci
					set $$$INARTItemGroup(objINART) = grupoProduto
					set $$$INARTFREE10(objINART) = (produto.IsMaterialConsignado = "S")

					if ($$$INARTItemPolicy(objINART) = $$$PRODUTOPOLITICAKITSFEFO) {
						set $$$INARTItemType(objINART) = $$$PRODUTOTIPOENTRADAPRODUCAO
					}
					else {
						set $$$INARTItemType(objINART) = $$$PRODUTOTIPOENTRADACOMPRA
					}

					set $$$INARTFREE5(objINART) = (produto.IsProdutoPadronizado = "S")
					set $$$INARTFREE13(objINART) = (produto.IsAntibiotico = "S")
					set $$$INARTFREE17(objINART) = portaria344ano98
					set $$$INARTFREE45(objINART) = 1		// Flag que sinaliza carga por integração
					set strStatus = $$$Save("INART", idINART, objINART, 1)
				}
				elseif (produto.Acao = "delete") {
					if (($length(objINART) > 0) &&
						($$$INARTHoldReason(objINART) '= $$$PRODUTOSTATUSINATIVO)) {
						set $$$INARTHoldReason(objINART) = $$$PRODUTOSTATUSINATIVO
						set strStatus = $$$Save("INART", idINART, objINART, 1)
					}
					else {
						set strStatus = $$$OK
					}
				}
				else {
					set strStatus = $$$MakeStatus("Ação '"_produto.Acao_"' desconhecida")
				}

		        if ($$$ISOK(strStatus)) {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
			        set resultadoChave.MensagemErro = ""
		        }
		        else {
			        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCONHECIDO")
			        set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
		        }
			}

        	do resultado.Resultados.Insert(resultadoChave)
	    }

	    set strStatus = $$$OK
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>

<Method name="AtualizaAdmissoes">
<Description><![CDATA[Método para criar uma admissão ou atualizar seu cadastro. <BR>
<BR>
Parâmetros:<BR><UL>
<LI>Admissoes (obrigatório) - Lista de Admissões;
</UL>
<BR>
Retorno:<BR><UL>
<LI>ResultadoCadastro - Contém uma Lista de Resultados com Código e Descrição de Erro
</UL>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SessionId:%String,MsgSequence:%Integer,Admissoes:VAR.common.soap.Admissoes</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>ResultadoCadastro</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	#dim admissao AS Admissao
 	
 	set resultado = ##class(ResultadoCadastro).%New()
 	set resultado.Resultados = ##class(%ListOfObjects).%New()

	set strStatus = ##class(Session).ValidateSession(SessionId,
		MsgSequence, .strError, , ..%ClassName()_"."_$$$MethodName)
	if ('$$$ISOK(strStatus)) set strStatus = $$$MakeStatus(strError)

	if ($$$ISOK(strStatus)) {
		set %("%KEY", "YBED") = "WEBSERVICE"
		set %("%KEY", "YPWD") = ""
		set %("%KEY", "YM") = 0

		$$$VAR
	
		set SPRACHE = "PT"

	    for i = 1:1:Admissoes.Admissoes.Count() {
			set admissao = Admissoes.Admissoes.GetAt(i)

	        set resultadoChave = ##Class(ResultadoChave).%New()
	        set resultadoChave.Chave1 = admissao.Tipo
	        set resultadoChave.Chave2 = admissao.AnoAdmissao
	        set resultadoChave.Chave3 = admissao.NoAdmissao

	        set codigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
	        set mensagemErro = ""
			set strStatus = ..AtualizaAdmissao(admissao, .codigoRetorno, .mensagemErro)

			if (codigoRetorno '= resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")) {
		        set resultadoChave.CodigoRetorno = codigoRetorno
		        set resultadoChave.MensagemErro = mensagemErro
			}
	        elseif ($$$ISERR(strStatus)) {
		        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOERROCONHECIDO")
		        set resultadoChave.MensagemErro = $$DecodeError^COMUtilError(strStatus)
	        }
	        else {
		        set resultadoChave.CodigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOSUCESSO")
		        set resultadoChave.MensagemErro = ""
	        }

        	do resultado.Resultados.Insert(resultadoChave)
	    }

	    set strStatus = $$$OK
	}

    if ($$$ISOK(strStatus)) {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOSUCESSO")
        set resultado.MensagemErro = ""
    }
    else {
        set resultado.CodigoRetorno = resultado.%GetParameter("CODIGORETORNOERROCONHECIDO")
        set resultado.MensagemErro = $$DecodeError^COMUtilError(strStatus)
    }

 	quit resultado]]></Implementation>
</Method>

<Method name="AtualizaAdmissao">
<ClassMethod>1</ClassMethod>
<FormalSpec>admissao:Admissao,&amp;codigoRetorno:%Integer,&amp;mensagemErro:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	#define TIPOFIA "FIA"
	#define TIPOBAA "BAA"

	if ((admissao.Tipo '= $$$TIPOFIA) && (admissao.Tipo '= $$$TIPOBAA)) {
        set codigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
        set mensagemErro = "Tipo '"_admissao.Tipo_"' desconhecido"
        set strStatus = "0 Erro"
        quit strStatus
	}

	if ((admissao.Acao = "insert") || (admissao.Acao = "update")) {
		set codigoAlphalinc = ##class(ConversaoInfoSaude).GetAdmissaoAlphalinc(admissao.Tipo,
			admissao.AnoAdmissao, admissao.NoAdmissao, 1, admissao.DataAdmissao)
		if ($length(codigoAlphalinc) = 0) {
			set idMEDAdmission = ""
		}
		else {
			set idMEDAdmission = codigoAlphalinc
		}
	}
	elseif (admissao.Acao = "delete") {
		set idMEDAdmission = ##class(ConversaoInfoSaude).GetAdmissaoAlphalinc(admissao.Tipo,
			admissao.AnoAdmissao, admissao.NoAdmissao, 1, "")

		// Na exclusão, pode achar o registo ou não, já que não tem precisão na
		// data de admissão
		if ($length(idMEDAdmission) = 0) {
			quit $$$OK // Não é relevante retornar um erro neste caso
		}
	}
	else {
		quit $$$MakeStatus("Ação '"_admissao.Acao_"' desconhecida")
	}

	if ((admissao.Acao = "insert") || (admissao.Acao = "update")) {
		if (($length(admissao.CodigoPaciente) > 0) &&
			('$data(^MEDPatient(YM, admissao.CodigoPaciente, 1)))) {
	        set codigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
	        set mensagemErro = "Paciente '"_admissao.CodigoPaciente_"' desconhecido"
	        set strStatus = "0 Erro"
	        quit strStatus
		}
		elseif (($length(admissao.LocalAdmissao) > 0) &&
				('$data(^WWW0121(0, YM, admissao.LocalAdmissao, 1)))) {
	        set codigoRetorno = resultadoChave.%GetParameter("CODIGORETORNOVALORINVALIDO")
	        set mensagemErro = "Local de admissão '"_admissao.LocalAdmissao_"' desconhecido"
	        set strStatus = "0 Erro"
	        quit strStatus
		}
	}

	if ((admissao.Acao = "insert") || (admissao.Acao = "update")) {
		if ($length(codigoAlphalinc) = 0) {
			set idMEDAdmission = $$^WWWNEXT("MEDAdmission")
		}
	}
	set objMEDAdmission = $get(^MEDAdmission(YM, idMEDAdmission, 1))

	set dataHoraOriginal = $$$MEDAdmissionDateAdmitted(objMEDAdmission)_","_
		$$$MEDAdmissionTimeAdmitted(objMEDAdmission)
	set $$$MEDAdmissionDateAdmitted(objMEDAdmission) = $piece($zdatetimeh(admissao.DataAdmissao, 3, 1), ",", 1)
	set $$$MEDAdmissionTimeAdmitted(objMEDAdmission) = $piece($zdatetimeh(admissao.DataAdmissao, 3, 1), ",", 2)

	if ((admissao.Acao = "insert") || (admissao.Acao = "update")) {
		if (admissao.Tipo = $$$TIPOFIA) {
			set $$$MEDAdmissionFREE4(objMEDAdmission) = admissao.AnoAdmissao_"/"_admissao.NoAdmissao
		}
		elseif (admissao.Tipo = $$$TIPOBAA) {
			set $$$MEDAdmissionFREE5(objMEDAdmission) = admissao.AnoAdmissao_"/"_admissao.NoAdmissao
		}
		set $$$MEDAdmissionPatient(objMEDAdmission) = admissao.CodigoPaciente
		set $$$MEDAdmissionLocation(objMEDAdmission) = admissao.LocalAdmissao
		set $$$MEDAdmissionRoom(objMEDAdmission) = admissao.Quarto
		set $$$MEDAdmissionBed(objMEDAdmission) = admissao.Leito
		if ($length($$$MEDAdmissionCreatedDate(objMEDAdmission)) = 0) {
			set $$$MEDAdmissionCreatedDate(objMEDAdmission) = $horolog
			set $$$MEDAdmissionCreatedBy(objMEDAdmission) = YBED
		}
		else {
			set $$$MEDAdmissionChangedDate(objMEDAdmission) = $horolog
			set $$$MEDAdmissionChangedBy(objMEDAdmission) = YBED		
		}		
		if ($length(admissao.DataAlta) = 0) {
			set $$$MEDAdmissionDateDischarged(objMEDAdmission) = ""
			set $$$MEDAdmissionTimeDischarged(objMEDAdmission) = ""
		}
		else {
			set $$$MEDAdmissionDateDischarged(objMEDAdmission) = $piece($zdatetimeh(admissao.DataAlta, 3, 1), ",", 1)
			set $$$MEDAdmissionTimeDischarged(objMEDAdmission) = $piece($zdatetimeh(admissao.DataAlta, 3, 1), ",", 2)
		}
		set strStatus = $$$Save("MEDAdmission", idMEDAdmission, objMEDAdmission, 1)
	}
	elseif (admissao.Acao = "delete") {
		if ($length(objMEDAdmission) > 0) {
			set $$$MEDAdmissionDateDischarged(objMEDAdmission) = $piece($horolog, ",", 1)
			set $$$MEDAdmissionTimeDischarged(objMEDAdmission) = $piece($horolog, ",", 2)
			set $$$MEDAdmissionChangedDate(objMEDAdmission) = $horolog
			set $$$MEDAdmissionChangedBy(objMEDAdmission) = YBED

			set espaco = ""
			if ($length($$$MEDAdmissionFREE2(objMEDAdmission)) > 0) set espaco = " "
			set $$$MEDAdmissionFREE2(objMEDAdmission) = $$$MEDAdmissionFREE2(objMEDAdmission)_
				espaco_"Admissão excluí­da no sistema InfoSúde. Data/hora original da "_
				"admissão: "_$zdatetime(dataHoraOriginal, 4, 1)
			set strStatus = $$$Save("MEDAdmission", idMEDAdmission, objMEDAdmission, 1)
		}
		else {
			set strStatus = $$$OK
		}
	}

	quit strStatus]]></Implementation>
</Method>
</Class>
</Export>