<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.data.source.CacheClass">
<ClassType/>
<Import>SourceControl.data</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>SourceBase</Super>

<Method name="ExportAll">
<Description><![CDATA[
Exports all classes (cls) in the namespace, except those that are in the exclude list
Returns the number of errors found (files not exported do to any error)]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set nErrors = 0
	set nExported = 0

	// Get all the class names
	set rs = ##class(%ResultSet).%New("%Dictionary.ClassDefinition:Summary")
 	do rs.Execute()
 	while (rs.Next()) {
    	set id = rs.Data("Name")

    	// Check if the name of class exists
    	if (id '= "") {
	    	// Check if the class *really* exists (source code)
	    	set cd = ##class(%Dictionary.ClassDefinition).%OpenId(id)
	    	if ((cd '= "") && ('cd.Deployed)) {
				set name = id_"."_##class(FileType).%GetParameter("TXTCLS")

				set sc = ..ExportAsCleanXML(name)
				if (##class(Errors).IsError(sc)) {
					set nErrors = nErrors + 1
				}
				else {
					set nExported = nExported + 1
				}
	    	}
    	}
	}

	write !, "Number of exported files: "_nExported
	write !, "Number of errors during export: "_nErrors

	quit nErrors
]]></Implementation>
</Method>

<Method name="ExportClassByNMClass">
<Description><![CDATA[
Exports a Cache Class that was created from a NM Class definition.
Example: nmclass=WWW001 => Cache class name=User.WWW001.CLS]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>nmClassName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// Verify if we will do anything...
	if ($get(^SourceControl("ignoreExport"))) {
		quit $$$YES
	}

	set status = $$$NO

	// Basic test
	if ($get(nmClassName) = "") {
		quit ##class(Errors).MakeErrorStatus("Error: @NM Class name is "_
			"empty!")
	}

	// Find out if there are already dots in the original name	
	if (nmClassName [ ".") {
		// Use the original package
		set status = ..ExportAsCleanXML(nmClassName_"."_
			##class(FileType).%GetParameter("TXTCLS"))
	} else {
		// Chose the default package
		set status = ..ExportAsCleanXML("User."_nmClassName_"."_
			##class(FileType).%GetParameter("TXTCLS"))
	}

	quit status
]]></Implementation>
</Method>
</Class>
</Export>