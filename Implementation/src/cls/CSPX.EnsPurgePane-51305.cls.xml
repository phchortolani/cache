<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsPurgePane">
<Description><![CDATA[
Generic pane for individual type purge]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.Pane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Property name="FormClass">
<Description><![CDATA[
Name of class used to provide Detail or Form view;]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="FormObject">
<Description><![CDATA[
The object that provides the details to display.]]></Description>
<Type>%RegisteredObject</Type>

<Parameter name="XMLPROJECTION" value="none"/>
</Property>


<Property name="SubmitPage">
<Description><![CDATA[
Page (URL) to go to when a form is submitted.]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="SubmitTarget">
<Description><![CDATA[
TARGET attribute for submitted form.]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="128"/>
</Property>


<Property name="Display">
<Description><![CDATA[
How to display this Form Page.]]></Description>
<Type>%String</Type>

<Parameter name="MAXLEN" value="20"/>

<Parameter name="VALUELIST" value=",form,table"/>
</Property>


<Property name="Dynamic">
<Description><![CDATA[
If true, display this form using the Dynamic form viewer.]]></Description>
<Type>%Boolean</Type>
</Property>


<Property name="Buttons">
<Description><![CDATA[
An optional list of buttons displayed along the bottom of a form.]]></Description>
<Type>%CSP.Util.FormButton</Type>
<Collection>list</Collection>

<Parameter name="XMLITEMNAME" value="Button"/>
</Property>


<Property name="PurgeType">
<Description><![CDATA[
Purge Type]]></Description>
<Type>%String</Type>
</Property>


<Method name="DrawBODY">
<Description><![CDATA[
Draw the BODY of the detail pane]]></Description>
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If (..Align '= "") {
		&html<<div align="#(..Align)#">>
	}

	//Do ..ReportResult()
	Do ..DrawCommands(pInstance)

	If (..Text '= "") {
		// show descriptive text
		&html<<div class="Text1">#($$$TextHTML("Fill out the form and press the button to start purge:"))#</div>>
	}
	
	Do ..DrawCommandForm(pInstance)
	
	// !!! Get ID Values from page and display the form object
	Merge tID = pInstance.IDValues
	Set tID(1) = ..PurgeType
	If ($IsObject(..FormObject)) {
		// ask form to draw itself
		If (..Display = "table") {
			If (..Dynamic) {
				Do ##class(%CSP.Util.AutoFormDynamic).DrawHTMLTable(..FormObject,.tID)
			}
			Else {
				Do ..FormObject.DrawHTMLTable(..FormObject,.tID)
			}
		}
		Else {
			If (..Dynamic) {
				Do ##class(%CSP.Util.AutoFormDynamic).DrawHTMLForm(..FormObject,.tID,..SubmitPage,,..SubmitTarget)
			}
			Else {
				Kill btn
				
				For n = 1:1:..Buttons.Count() {
					Set tButton = ..Buttons.GetAt(n)
					Set btn(n) = tButton
				}

				Do ..FormObject.DrawHTMLForm(..FormObject,.tID,..SubmitPage,.btn,..SubmitTarget)
			}
		}
	}
	//Set LogsDeleted = $G(%session.Data("Purge","LogsDeleted"))
	//If LogsDeleted '= "" {
	//	 Set LogsDeleted = """"_LogsDeleted_""""
	//	 Write "<script language='javascript'>alert(",LogsDeleted,");</script>"
	//	 Set %session.Data("Purge","LogsDeleted") = ""
		//	&html<<table border="0" cellpadding="3" width="100%"><tr>
		//	<td align="center" class="Text" nowrap><a class="LastUpdate"><b>#(LogsDeleted)##(..LocalizeText(" Logs(s) Deleted"))#</b></a></td>
		//	</td></tr></table>>
	//}
	If (..Align '= "") {
		&html<</div>>
	}

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnGenerateCode">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set code = ""
	If (..Display '= "") {
		Set code = code _ " Set tPane.Display = " _ ..QuoteCOS(..Display) _ $$$EOL
	}
	If (..Dynamic '= "") {
		Set code = code _ " Set tPane.Dynamic = " _ +..Dynamic _ $$$EOL
	}
	If (..SubmitPage '= "") {
		Set code = code _ " Set tPane.SubmitPage = " _ ..QuoteCOS(..SubmitPage) _ $$$EOL
	}
	If (..SubmitTarget '= "") {
		Set code = code _ " Set tPane.SubmitTarget = " _ ..QuoteCOS(..SubmitTarget) _ $$$EOL
	}
	If (..FormClass '= "") {
		Set code = code _ " Set tPane.FormClass = " _ ..QuoteCOS(..FormClass) _ $$$EOL
		Set code = code _ $$$EOL
		Set code = code _ " // Create instance of object used for form" _ $$$EOL
		
		Set code = code _ " Merge tID = pInstance.IDValues" _ $$$EOL

		If (..Dynamic) {
			// create instance using %OpenId (test for persistent)
			If ($$$comClassKeyGet(..FormClass,$$$cCLASSclasstype) = "persistent") {
				Set code = code _ " Set tPane.FormObject = $zobjclassmethod(" _ ..QuoteCOS(..FormClass) _ ",""%OpenId"",$G(tID(1)))" _ $$$EOL
			}
			Set code = code _ " If ('$IsObject(tPane.FormObject)) { Set tPane.FormObject = $zobjclassmethod(" _ ..QuoteCOS(..FormClass) _ ",""%New"") }" _ $$$EOL
		}
		Else {
			Set code = code _ " Set tPane.FormObject = $zobjclassmethod(" _ ..QuoteCOS(..FormClass) _ ",""CreateInstance"",.tID)" _ $$$EOL
		}
		Set code = code _ $$$EOL
	}

	// buttons
	If (..Buttons.Count() > 0) {
		Set code = code _ " // buttons" _ $$$EOL
	}

	For i = 1:1:..Buttons.Count() {
		Set tButton = ..Buttons.GetAt(i)
		Set code = code _ tButton.GenerateCode()
		Set code = code _ " Do tPane.Buttons.Insert(tButton)" _ $$$EOL
		Set code = code _ $$$EOL
	}
	Set code = code _ $$$EOL


	Quit code
]]></Implementation>
</Method>

<Method name="GenerateCode">
<Description><![CDATA[
Called by CSP rules engine to generate code to construct an instance
of this object using the current instance as a template.]]></Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set code = ""
	Set code = code_" Set tPane = ##class(" _ ..%ClassName(1) _ ").%New()"_$$$EOL

	// title
	Set code = code _ " Set tPane.Text =" _ ..QuoteCOS(..Text) _ $$$EOL

	If (..URL '= "") {
		Set code = code _ " Set tPane.URL =" _ ..QuoteCOS(..URL) _ $$$EOL
	}

	If (..FrameStyle '= "") {
		Set code = code _ " Set tPane.FrameStyle =" _ ..QuoteCOS(..FrameStyle) _ $$$EOL
	}

	// align
	If (..Align '= "") {
		Set code = code _ " Set tPane.Align =" _ ..QuoteCOS(..Align) _ $$$EOL
	}

	// Purge Type
	If (..PurgeType '= "") {
		Set code = code _ " Set tPane.PurgeType =" _ ..QuoteCOS(..PurgeType) _ $$$EOL
	}
	
	// styles
	Set tKey=""
	Set tStyle = ..Styles.GetNext(.tKey)
	While (tKey'="") {
		Set code = code _ " Do tPane.Styles.SetAt(" _ ..QuoteCOS(tStyle) _ "," _ ..QuoteCOS(tKey) _ ")" _ $$$EOL
		Set tStyle = ..Styles.GetNext(.tKey)
	}

	// commands
	Set code = code _ $$$EOL
	If (..Commands.Count() > 0) {
		Set code = code _ " // commands" _ $$$EOL
	}

	For i = 1:1:..Commands.Count() {
		Set tAction = ..Commands.GetAt(i)
		Set code = code _ tAction.GenerateCode()
		Set code = code _ " Do tPane.Commands.Insert(tAction)" _ $$$EOL
		Set code = code _ $$$EOL
	}

	
	// command form
	If (..CommandFormClass '= "") {
		Set code = code _ " Set tPane.CommandFormClass = " _ ..QuoteCOS(..CommandFormClass) _ $$$EOL
		Set code = code _ " Set tPane.CommandSubmitPage = " _ ..QuoteCOS(..CommandSubmitPage) _ $$$EOL
		Set code = code _ $$$EOL
		Set code = code _ " // Create instance of object used for form" _ $$$EOL
		Set code = code _ " Merge tID = pInstance.IDValues" _ $$$EOL
		Set code = code _ " Set tPane.CommandFormObject = $zobjclassmethod(" _ ..QuoteCOS(..CommandFormClass) _ ",""CreateInstance"",.tID)" _ $$$EOL
		Set code = code _ $$$EOL
	}	
	
	Set code = code _ $$$EOL

	// get specific code for subclasses
	Set code = code _ ..OnGenerateCode()

	Set code = code_" Quit tPane"_$$$EOL	
	Quit code
]]></Implementation>
</Method>
</Class>
</Export>