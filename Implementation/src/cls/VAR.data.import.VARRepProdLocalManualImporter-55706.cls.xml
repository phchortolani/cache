<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.VARRepProdLocalManualImporter">
<ClassType/>
<IncludeCode>VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Command: 
> do ##class(VAR.data.import.VARRepProdLocalManualImporter).importFile(arquivo)

Fields
		ItemNumber,FREE33,SearchName,CostumerTextorItemTextNo,ItemGroup,ItemType,UnitofMeasure,HoldReason,FREE7,FREE18
			,FREE2,FREE6,FREE17,FREE9,DangerousGoodsCategory,FREE10,FREE5,FREE11,FREE12,FREE15,MultidoseInjectable,FREE13,
			FREE25,FREE22,FREE14,FREE32,ItemPolicy,BaseUnit
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	if ($get(arquivo) = "") quit "Parãmetros obrigatórios (arquivo) não informados"
		
	quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_arquivo)
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0
	
	$$$VAR
	set YBED = "CARGADEDADOS"
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	set strStatus = $$$OK

	set $$$KEY1(key)	= ..getField(pstrLinha, 3) // Local
	set $$$KEY2(key)	= ..getField(pstrLinha, 1) // Produto
	set $$$KEY3(key)	= $$^WWWNEXT1("VARReposicaoLocalProduto",key,3) // Numerador
	
	set obj = $get(^VARReposicaoLocalProduto(YM,key,1))
	
	// Não atualiza o registro caso ele já exista
	if (obj '= "") {
		set strStatus = "Cadastro já existe"
		quit strStatus
	}
	
	if ('$data(^WWW0121(YM,YM,$$$KEY1(key),1))) {
		set strStatus = "Local não existe " _ $$$KEY1(key)
		quit strStatus
	}
	
	if ('$data(^INART(YM,$$$KEY2(key),1))) {
		set strStatus = "Produto não existe " _ $$$KEY2(key)
		quit strStatus
	}
														// key				//Código (Sistema) 
	set $$$VARReposicaoLocalProdutoESDias(obj)						= $replace(..getField(pstrLinha,5),",",".")	//Estoque de Segurança em dias
	set $$$VARReposicaoLocalProdutoPRDias(obj)						= $replace(..getField(pstrLinha,6),",",".")	//Ponto de Ressuprimento em dias
	set $$$VARReposicaoLocalProdutoEMDias(obj)						= $replace(..getField(pstrLinha,7),",",".")	//Estoque Máximo em dias
	set $$$VARReposicaoLocalProdutoDMMI(obj)						= $replace(..getField(pstrLinha,4),",",".")	//Demanda Média Mensal Informada
	set $$$VARReposicaoLocalProdutoVariaveisdeEstoque(obj)			= 1 // Variáveis de Estoque
	set $$$VARReposicaoLocalProdutoAtivo(obj)						= 1
	
	set $$$VARReposicaoLocalProdutoEstoquedeSeguranca(obj)			= $$GetDaysInMonths^VARReposicaoForm($$$VARReposicaoLocalProdutoESDias(obj))
	set $$$VARReposicaoLocalProdutoPontodeRessuprimento(obj)		= $$GetDaysInMonths^VARReposicaoForm($$$VARReposicaoLocalProdutoPRDias(obj))
	set $$$VARReposicaoLocalProdutoEstoqueMaximo(obj)			 	= $$GetDaysInMonths^VARReposicaoForm($$$VARReposicaoLocalProdutoEMDias(obj))

	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_key_", obj="_obj)
	}
	else {
		set strStatus = $$$Save("VARReposicaoLocalProduto", key, obj, 1)
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
]]></Implementation>
</Method>

<Method name="AutorizaItemPorLocal">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrLocal:%String</FormalSpec>
<Implementation><![CDATA[
	$$$VAR
	; do ##class(VAR.data.import.VARRepProdLocalManualImporter).AutorizaItemPorLocal(997)
	new strStatus
	
	set strStatus = $$$OK
	
	&SQL(DECLARE C3 CURSOR FOR 
		select itemnumber
		into :strItem
		from sqluser.inart
		where itemnumber not in (
		select itemno
		from sqluser.indrpitem
		where location = 997)
	)
	
	&SQL(OPEN C3)
	set contador = 0
	for {
		set contador = contador + 1
		;quit:(contador >= 10)
		&SQL(FETCH C3)
		quit:SQLCODE'=0
		
		if ('$data(^INDRPITEM(0,pstrLocal,strItem,1))) {
			set strStatus = ..EfetivaAutorizacao(pstrLocal,strItem)
			if (strStatus '= $$$OK) {
				write !,"Erro ao autorizar o item " _ strItem _ " para o local " _pstrLocal _ " Status " _ strStatus
			}
			else {
				write !,"Produto " _ strItem _ " autorizado para o local " _ pstrLocal
			}
		}
		else {
			write !,"Produto "_strItem_" já foi autorizado para o local " _pstrLocal
		}
	}
	
	&SQL(CLOSE C3)
	
	quit strStatus
]]></Implementation>
</Method>

<Method name="AutorizaItemLocal">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	$$$VAR
	; do ##class(VAR.data.import.VARRepProdLocalManualImporter).AutorizaItemLocal()
	new strStatus
	
	set strStatus = $$$OK
	
	&SQL(DECLARE C1 CURSOR FOR 
		SELECT ID1, ID2
		INTO :strLocal, :strItem
		FROM SQLUser.VARReposicaoLocalProduto
	)
	
	&SQL(OPEN C1)
	set contador = 0
	for {
		set contador = contador + 1
		;quit:(contador >= 10)
		&SQL(FETCH C1)
		quit:SQLCODE'=0
		
		if ('$data(^INDRPITEM(0,strLocal,strItem,1))) {
			set strStatus = ..EfetivaAutorizacao(strLocal,strItem)
			if (strStatus '= $$$OK) {
				write !,"Erro ao autorizar o item " _ strItem _ " para o local " _strLocal _ " Status " _ strStatus
			}
			else {
				write !,"Produto " _ strItem _ " autorizado para o local " _ strLocal
			}
		}
		else {
			write !,"Produto "_strItem_" já foi autorizado para o local " _strLocal
		}
	}
	
	&SQL(CLOSE C1)
	
	quit strStatus
]]></Implementation>
</Method>

<Method name="EfetivaAutorizacao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrLocal:%String,pstrItem:%String</FormalSpec>
<Implementation><![CDATA[
	new strStatus
	
	set strStatus = $$$OK
	
	set $$$KEY1(key)	= pstrLocal
	set $$$KEY2(key)	= pstrItem
	
	set objINART = $get(^INART(YM,$$$KEY2(key),1))
	
	if (objINART = "") {
		set strStatus = "Produto não existe. " _ $$$KEY2(key)
		quit strStatus
	}
	
	if ('$data(^WWW0121(0,0,$$$KEY1(key)))) {
		set strStatus = "Local não existe. " _ $$$KEY1(key)
		quit strStatus
	}
	
	if (strStatus) {
		set obj = $get(^INDRPITEM(YM,$$$KEY1(key),$$$KEY2(key),1))
		
		if (obj '= "") {
			set strStatus = "Item " _ $$$KEY2(key) _ " já está autorizado para o local " _ $$$KEY1(key)
			quit strStatus
		}
															
		set $$$INDRPITEMDescription(obj)	= $$$INARTSearchName(objINART)	// Descrição do Produto
		set $$$INDRPITEMItemStatus(obj)		= 1	// Ativo
		set $$$INDRPITEMSaleableItem(obj)	= 1	// Produto Vendável
		set $$$INDRPITEMUnitOfMeasure(obj)	= $$$INARTUnitofMeasure(objINART)	// Unidade de medida
		set $$$INDRPITEMDRPRunID(obj)		= 1	// Número da execução DRP - 1 - Permanent
		
		
		set strStatus = $$$Save("INDRPITEM", key, obj, 1)
		
		if (strStatus) {
			set $$$KEY1(key) = "997"
			set strStatus = $$$Save("INDRPITEM", key, obj, 1)
		}
		
	}
	
	quit strStatus
]]></Implementation>
</Method>
</Class>
</Export>