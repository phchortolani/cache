<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsRuleLogTablePane">
<Description><![CDATA[
Specialized pane for displaying a list of log items.]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>CSPX.SQLQueryPane</Super>
<System>3</System>

<Method name="CreateResultSet">
<FormalSpec>&amp;pID:%String,&amp;pRS:%ResultSet</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	
	// if not an explicit execute request (or history), skip it
	If ($G(^Ens.Debug("DelayQueries"))&&'$D(%request.Data("$EXEC",1))) {
		Set pRS = ""
		Quit $$$OK
	}
	// get request parms via object
	Set tRequest = ##class(CSPX.EnsRuleLogFilterForm).ProcessSubmit(%request, .pID)
	Set where = ""
	If (tRequest.StartTime '= "") {
		Set where = where _ $S(where="":"",1:" AND ") _ "TimeExecuted >= '" _ tRequest.StartTime _ "'"
	}
	If (tRequest.EndTime '= "") {
		Set where = where _ $S(where="":"",1:" AND ") _ "TimeExecuted <= '" _ tRequest.EndTime _ "'"
	}
	If (tRequest.SessionId '= "") {
		Set where = where _ $S(where="":"",1:" AND ") _ "SessionId = '" _ tRequest.SessionId _ "'"
	}
	If (tRequest.HostClass '= "") {
		Set where = where _ $S(where="":"",1:" AND ") _ "HostClass %STARTSWITH '" _ tRequest.HostClass _ "'"
	}
	If (tRequest.RuleName '= "") {
		Set where = where _ $S(where="":"",1:" AND ") _ "RuleName %STARTSWITH '" _ tRequest.RuleName _ "'"
	}
	Set:where'="" where = "WHERE " _ where
	
	Set dateLen = 12
	Set:tRequest.TimeFormat'="" dateLen = tRequest.TimeFormat
	Set select = "ID,SessionId As Session,ExecutionId,{fn RIGHT(%EXTERNAL(TimeExecuted)," _ dateLen _ " )} As TimeExecuted,HostClass As PackageName,RuleName As RuleName,ActivityName As Activity,RuleVersion,Reason,ReturnValue As Return,IsError,ErrorMsg,RuleId,RoutineName"

	Set order = " ORDER BY Session, ExecutionId"
	If (tRequest.SortOrder = 2) {
		Set order = " ORDER BY SessionId Desc, ExecutionId Desc"
	}
	Set maxRows = tRequest.MaxRows
	Set:(+maxRows<=0) maxRows = 50
	Set ..MaxResults = maxRows
	
	Set query = "SELECT " _ select _ " FROM Ens_Rule.RuleLog " _ where _ order

	Set pRS = ##class(%ResultSet).%New()
	Set tSC = pRS.Prepare(query)
	
	Quit tSC
]]></Implementation>
</Method>

<Method name="GetColorByColumn">
<Description><![CDATA[
Subclass can override this to specify the name of column used 
to distinctly color rows]]></Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $G(%request.Data("ColorBy",1))
]]></Implementation>
</Method>
</Class>
</Export>