<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARCadGrupoAgendamento">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Set method = $Get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set strStatus	=	""
	Set erro			=	0
	Tstart
	Try{
		Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))
		Set pObjGeral = $Get(%request.Data("pObjGeral",1))
		Set pSituacao = $Get(%request.Data("pSituacao",1))
		Set pTempo		= $get(%request.Data("pTempo",1))
		Set YBED 			= $Get(%request.Data("YBED",1))
		Set flagEdicao= 0
		If pCodGrupo="+" Set pCodGrupo = ""
		Set objGeral = [].%FromJSON(pObjGeral)
		Set obj = ""
		if pCodGrupo'="" {
			Set obj = $Get(^VARGrupoAgendamento(0,pCodGrupo,1))
		}
		Set tempoAntigo																		= $$$VARGrupoAgendamentoTempodeAtendimento(obj)
		Set $$$VARGrupoAgendamentoDescricao(obj) 					= objGeral.descricao
		Set $$$VARGrupoAgendamentoTipo(obj) 							= objGeral.tipo
		Set $$$VARGrupoAgendamentoCor(obj) 								= objGeral.cor
		Set $$$VARGrupoAgendamentoQtdeProcedimento(obj) 	= $Select(+objGeral.qtdeProcedimento<1:1,1:+objGeral.qtdeProcedimento)
		Set $$$VARGrupoAgendamentoQtdeHorario(obj) 				= $Select(+objGeral.qtdeHorario<1:1,1:+objGeral.qtdeHorario)
		Set $$$VARGrupoAgendamentoTempodeAtendimento(obj) = $ZTimeH(pTempo,2)
		Set $$$VARGrupoAgendamentoSituacao(obj) 					= pSituacao
		if pCodGrupo=""{
			Set pCodGrupo = $$GetNextNumber^COMUtils("VARGrupoAgendamento","")
			Set $$$VARGrupoAgendamentoCriadoEm(obj) 	= $Horolog
			Set $$$VARGrupoAgendamentoCriadoPor(obj) 	= YBED
		}else{
			Set $$$VARGrupoAgendamentoAlteradoEm(obj) = $Horolog
			Set $$$VARGrupoAgendamentoAlteradoPor(obj) = YBED
			Set flagEdicao = 1
		}
		Set strStatus = $$$Save("VARGrupoAgendamento",pCodGrupo,obj,$$$YES)
		If ('$$$ISERR(strStatus)) {
			Set tItens = ""
			For count = 1 : 1 : objGeral.itens.%Size() {
				Set codItem = objGeral.itens.%Get(count-1)
				Set tItens = tItens _$Select(tItens="":"",1:"','")_ codItem
				Set objINART = $Get(^INART(YM, codItem, 1))
				Set $$$INARTGrupodeAgendamento(objINART) = pCodGrupo
				Set srtStatus = $$$Save("INART", codItem, objINART, $$$YES)
				Quit:$$$ISERR(strStatus)
			}
			If ('$$$ISERR(strStatus)) {
				Set meuSQL = "Select ItemNumber From SQLUser.INART Where Company = 0 "
				Set meuSQL = meuSQL _ "And GrupodeAgendamento = '"_pCodGrupo_"' "
				Set meuSQL = meuSQL _ "And ItemNumber Not In ('"_tItens_"')"
				Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
				While(rSet.%Next()){
					Set objINART = $Get(^INART(YM, rSet.%Get("ItemNumber"), 1))
					Set $$$INARTGrupodeAgendamento(objINART) = ""
					Set srtStatus = $$$Save("INART", rSet.%Get("ItemNumber"), objINART, $$$YES)
					Quit:$$$ISERR(strStatus)
				}
			}
		}
		Quit:$$$ISERR(strStatus)
		If (flagEdicao = 1 && ($ZTimeH(pTempo,2) '= tempoAntigo)) {
			Set meuSQL = "Select * From SQLUser.VARGrupoAgendamentoLocAtend Where Company = 0 " 
			Set meuSQL = meuSQL _ "And CodigoGrupo = '"_pCodGrupo_"'"
			Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
			While(rSet.%Next()){
				Set xCodUnidade = rSet.%Get("Unidade")
				Set xCodSala 		= rSet.%Get("Sala")
				Set xCodLeito 	= rSet.%Get("LeitoEquipamento")
				
				Set strStatus = ..ExcLocalAtendimento(pCodGrupo, xCodUnidade, xCodSala, xCodLeito, YBED)
				Quit:$$$ISERR(strStatus)
				Set strStatus = ..GerarAgenda(pCodGrupo, xCodUnidade, xCodSala, xCodLeito, YBED)
				Quit:$$$ISERR(strStatus)
			}
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro=err
	}
	Set retorno = {}
	If ('erro) {
		Tcommit
		Set retorno.codigo = pCodGrupo
		Set retorno.status = strStatus
	}Else{
		Trollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"

	Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))

	Set objVARGrupoAgendamento = $Get(^VARGrupoAgendamento(YM, pCodGrupo, 1))

	Set descricao = $$$VARGrupoAgendamentoDescricao(objVARGrupoAgendamento)
	Set tipo 			= $$$VARGrupoAgendamentoTipo(objVARGrupoAgendamento)
	Set tempo 		= $$$VARGrupoAgendamentoTempodeAtendimento(objVARGrupoAgendamento)
	Set situacao 	= $$$VARGrupoAgendamentoSituacao(objVARGrupoAgendamento)
	Set qtdeProcedimento = +$$$VARGrupoAgendamentoQtdeProcedimento(objVARGrupoAgendamento)
	Set qtdeHorario = +$$$VARGrupoAgendamentoQtdeHorario(objVARGrupoAgendamento)
	Set cor = $$$VARGrupoAgendamentoCor(objVARGrupoAgendamento)

	Set criadoEm		= $$$VARGrupoAgendamentoCriadoEm(objVARGrupoAgendamento)
	Set criadoPor 	= $$$VARGrupoAgendamentoCriadoPor(objVARGrupoAgendamento)
	Set alteradoEm 	= $$$VARGrupoAgendamentoAlteradoEm(objVARGrupoAgendamento)
	Set alteradoPor = $$$VARGrupoAgendamentoAlteradoPor(objVARGrupoAgendamento)
	;
	Set arrayItens = []
	Set meuSQL = "Select ItemNumber From SQLUser.INART Where Company = 0 And GrupodeAgendamento = '"_pCodGrupo_"'"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Do arrayItens.%Push(rSet.%Get("ItemNumber"))
	}
	;
	Set listGeral = {}
	Set listGeral.descricao	= descricao
	Set listGeral.tipo			= tipo
	Set listGeral.tempo 		= $ZTime(tempo,2)
	Set listGeral.situacao 	= situacao
	Set listGeral.itens			= arrayItens
	Set listGeral.qtdeProcedimento = qtdeProcedimento
	Set listGeral.qtdeHorario = qtdeHorario
	Set listGeral.cor	= cor
	;	
	Set listControle = {}
	Set listControle.criadoEm 		= $Select(criadoEm="":"",1:$ZDateTime(criadoEm,4,2))
	Set listControle.criadoPor 		= $$SQLGetUserName^VARSQL(criadoPor)
	Set listControle.alteradoEm 	= $Select(alteradoEm="":"",1:$ZDateTime(alteradoEm,4,2))
	Set listControle.alteradoPor 	= $$SQLGetUserName^VARSQL(alteradoPor)
	;
	Set listRetorno = {}
	Set listRetorno.dadosGeral 		= listGeral
	Set listRetorno.dadosControle = listControle
	Set listRetorno.situacao 			= situacao
	;
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarLocalAtendimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = $$$OK
	Set erro = 0
	Try{
		Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))
		Set pUnidade 	= $Get(%request.Data("pUnidade",1))
		Set pSala 		= $Get(%request.Data("pSala",1))
		Set pLeito 		= $Get(%request.Data("pLeito",1))
		Set YBED 			= $Get(%request.Data("YBED",1))
		Set dataAtual = +$Horolog
		If (pLeito = "") Set pLeito = "T" 
		If (pLeito '= "T") {
			Set countSala = 0, zGrupoProf = ""
			&SQL(
				Select Count(*), CodigoGrupo Into :countSala, :zGrupoProf From SQLUser.SQLUser.VARGrupoAgendamentoLocAtend
				Where Company = 0 And Unidade = :pUnidade And Sala = :pSala
				And LeitoEquipamento = :pLeito 
			)
			If (countSala > 0) {
				Set erro = 1
				Set strStatus = "Sala/Leito já cadastrado para outro procedimento "_$$GetDescGrupoAgendamento^VARSQL(zGrupoProf)_"."
				Quit
			}
			Set countSala = 0
			&SQL(
				Select Count(*) Into :countSala From SQLUser.MEDProviderAgenda
				Where Company = 0 And Local1 = :pSala And DataInicial > :dataAtual
			)
			If (countSala > 0) {
				Set erro = 1
				Set strStatus = "Sala já cadastrado para profissional."
				Quit
			}
		}				
		If (pLeito = "T") {
			Set xLeito = ""
			For {
				Set xLeito = $Order(^VARLeitosAtendimentos(YM, pSala, xLeito))
				Quit:xLeito=""
				Set countSala = 0
				&SQL(
					Select Count(*) Into :countSala From SQLUser.SQLUser.VARGrupoAgendamentoLocAtend
					Where Company = 0 And Unidade = :pUnidade And Sala = :pSala
					And LeitoEquipamento = :xLeito 
				)	
				If (countSala > 0 ) Continue
				Set countSala = 0
				&SQL(
					Select Count(*) Into :countSala From SQLUser.MEDProviderAgenda
					Where Company = 0 And Local1 = :pSala And DataInicial > :dataAtual
				)
				If (countSala > 0 ) Continue
				Set objINARTLocalAt = $Get(^VARGrupoAgendamentoLocAtend(YM, pCodGrupo, pUnidade, pSala, xLeito, 1))
				Set $$$VARGrupoAgendamentoLocAtendCriadoEm(objINARTLocalAt) 	= $Horolog
				Set $$$VARGrupoAgendamentoLocAtendCriadoPor(objINARTLocalAt) 	= YBED
				Set strStatus = $$$Save("VARGrupoAgendamentoLocAtend", pCodGrupo_","_pUnidade_","_pSala_","_xLeito, objINARTLocalAt, $$$YES)
				If ('$$$ERROR(strStatus)) {
					Set strStatus = ..GerarAgenda(pCodGrupo, pUnidade, pSala, xLeito, YBED)
				}
				Quit:$$$ERROR(strStatus)
			}
		}Else{
			Set objINARTLocalAt = $Get(^VARGrupoAgendamentoLocAtend(YM, pCodGrupo, pUnidade, pSala, pLeito, 1))
			Set $$$VARGrupoAgendamentoLocAtendCriadoEm(objINARTLocalAt) 	= $Horolog
			Set $$$VARGrupoAgendamentoLocAtendCriadoPor(objINARTLocalAt) 	= YBED
			Set strStatus = $$$Save("VARGrupoAgendamentoLocAtend", pCodGrupo_","_pUnidade_","_pSala_","_pLeito, objINARTLocalAt, $$$YES)
			If ('$$$ERROR(strStatus)) {
				Set strStatus = ..GerarAgenda(pCodGrupo, pUnidade, pSala, pLeito, YBED)
			}
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetLocalAtendimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))
	;
	Set meuSQL = 	"Select * From SQLUser.VARGrupoAgendamentoLocAtend Where Company = 0 " _
								"And CodigoGrupo = '"_pCodGrupo_"'"
	;
	Set arrayRetorno = []
	If (pCodGrupo = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set id = rSet.%Get("CodigoGrupo")_"~"_rSet.%Get("Unidade")_"~"_rSet.%Get("Sala")_"~"_rSet.%Get("LeitoEquipamento")
		Set codSala 	= rSet.%Get("Sala")
		Set codLeito 	= rSet.%Get("LeitoEquipamento")
		Set objVARSalasAtendimentos = $Get(^VARSalasAtendimentos(0, codSala, 1))
		Set descSala = $$$VARSalasAtendimentosNome(objVARSalasAtendimentos)	
		If (codLeito '= "T") {	
			Set objVARLeitosAtendimentos = $Get(^VARLeitosAtendimentos(0, codSala, codLeito, 1))
			Set descLeito 	= $$$VARLeitosAtendimentosDescricao(objVARLeitosAtendimentos)
			Set codSituacao = $$$VARLeitosAtendimentosSituacao(objVARLeitosAtendimentos)
		}Else{
			Set descLeito 	= "Todos"
			Set codSituacao = $$$VARSalasAtendimentosSituacao(objVARSalasAtendimentos)
		}
		
		Set sitSala = ##Class(User.Search.PesquisasJson).GetDescricaoWWW101("MEDPROVIDERSTA", codSituacao)
		Set listDados = {}
		Do listDados.%Set("id", id)
		Do listDados.%Set("unidade", $$SQLGetLocationName^VARSQL(rSet.%Get("Unidade")))
		Do listDados.%Set("sala", descSala)
		Do listDados.%Set("leito", descLeito)
		Do listDados.%Set("codUnidade", rSet.%Get("Unidade"))
		Do listDados.%Set("codSala", rSet.%Get("Sala"))
		Do listDados.%Set("codLeito", rSet.%Get("LeitoEquipamento"))
		Do listDados.%Set("situacao", sitSala)
		Do listDados.%Set("criadoEm", $Select(rSet.%Get("CriadoEm")="":"",1:$ZDateTime(rSet.%Get("CriadoEm"),4,2)))
		Do listDados.%Set("criadoPor", $$SQLGetUserName^VARSQL(rSet.%Get("CriadoPor")))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ChecaAgendamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,pCodSala,pCodLeito</FormalSpec>
<Implementation><![CDATA[	Set qtdeAdmissoes = 0
	Set dataAtual = +$Horolog
	&SQL(
		Select Count(*) Into :qtdeAdmissoes From SQLUser.VARGrupoAgendamentoHorario
		Where Company = 0 And CodigodoGrupo = :pCodGrupo
		And SaladeAtendimento = :pCodSala And LeitodeAtendimento = :pCodLeito
		And DatadeAtendimento > :dataAtual
		And Admissao Is Not Null
	)
	Return qtdeAdmissoes]]></Implementation>
</Method>

<Method name="ChecaAgendamentoEdicao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,pTempo</FormalSpec>
<Implementation><![CDATA[	Set qtdeAdmissoes = 0
	Set objGrupoAgendamento = $Get(^VARGrupoAgendamento(0, pCodGrupo, 1))
	Set tempoAtend 	= $$$VARGrupoAgendamentoTempodeAtendimento(objGrupoAgendamento)
	If (tempoAtend = $ZTimeH(pTempo,2)) {
		Return qtdeAdmissoes	
	}
	Set dataAtual = +$Horolog
	&SQL(
		Select Count(*) Into :qtdeAdmissoes From SQLUser.VARGrupoAgendamentoHorario
		Where Company = 0 And CodigodoGrupo = :pCodGrupo
		And DatadeAtendimento > :dataAtual
		And Admissao Is Not Null
	)
	Return qtdeAdmissoes]]></Implementation>
</Method>

<Method name="ExcLocalAtendimento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo="",pCodUnidade="",pCodSala="",pCodLeito="",pYBED=""</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set strStatus	=	$$$OK
	Set erro			=	0
	Tstart
	Try{
		If (pCodGrupo = "") {
			Set YBED 				= $Get(%request.Data("YBED",1)) 
			Set pCodGrupo 	= $Get(%request.Data("pCodGrupo",1)) 
			Set pCodUnidade = $Get(%request.Data("pCodUnidade",1)) 
			Set pCodSala 		= $Get(%request.Data("pCodSala",1)) 
			Set pCodLeito		= $Get(%request.Data("pCodLeito",1)) 
			Set excluirLoc	= 1
		}Else{
			Set YBED 				= pYBED
			Set excluirLoc	= 0
		}
		Set dataAtual 	= +$Horolog
		;
		Set meuSQL = "Select * From SQLUser.VARGrupoAgendamentoHorario "
		Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoGrupo = '"_pCodGrupo_"' "
		Set meuSQL = meuSQL _ "And SaladeAtendimento = '"_pCodSala_"' "
		Set meuSQL = meuSQL _ "And LeitodeAtendimento = '"_pCodLeito_"' "
		Set meuSQL = meuSQL _ "And DatadeAtendimento > '"_dataAtual_"' "
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	 	While (rSet.%Next()) {
			If (rSet.%Get("Admissao") '= "") {
				Set idIncons = $$GetNextNumber^COMUtils("VARAgendamentoInconsistencia","")
				Set objeto = $Get(^VARAgendamentoInconsistencia(YM, idIncons, 1))
				Set $$$VARAgendamentoInconsistenciaDataGeracao(objeto) 	= +$Horolog
				Set $$$VARAgendamentoInconsistenciaHoraGeracao(objeto) 	= $Piece($Horolog,",",2)
				Set $$$VARAgendamentoInconsistenciaCriadoPor(objeto) 		= YBED
				Set $$$VARAgendamentoInconsistenciaAdmissao(objeto) 		= rSet.%Get("Admissao")
				Set $$$VARAgendamentoInconsistenciaMotivo(objeto) 			= "Exclusão de Local"
				Set strStatus = $$$Save("VARAgendamentoInconsistencia", idIncons, objeto, $$$YES)
				Quit:$$$ERROR(strStatus)
			}
			Set id = 	rSet.%Get("CodigodoGrupo")_$$$COMMA_rSet.%Get("SaladeAtendimento")_$$$COMMA_
								rSet.%Get("LeitodeAtendimento")_$$$COMMA_rSet.%Get("DatadeAtendimento")_$$$COMMA_
								rSet.%Get("HoradeAtendimento")
			Set strStatus = $$$Kill("VARGrupoAgendamentoHorario", id)
			Quit:$$$ERROR(strStatus)	
		}
		Quit:$$$ERROR(strStatus)	
		If (excluirLoc = 1) {
			Set strStatus = $$$Kill("VARGrupoAgendamentoLocAtend",pCodGrupo_","_pCodUnidade_","_pCodSala_","_pCodLeito)
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro=err
	}
	Set retorno = {}
	If ('erro) {
		Tcommit
		Write strStatus
	}Else{
		Trollback
		Write strStatus
	}
	Return strStatus]]></Implementation>
</Method>

<Method name="GetLeitoAtendimentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodUnidade	= $Get(%request.Data("pCodUnidade",1))
	Set pCodSala		= $Get(%request.Data("pCodSala",1))

	Set meuSQL = "Select CodigodoLeito, Descricao From SQLUSer.VARLeitosAtendimentos "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodaSala = '"_pCodSala_"' And Situacao = '1'" 	
	
	Set arrayDados = [{"CodigodoLeito": "T", "Descricao": "Todos"}]
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	;
 	While (rSet.%Next()) {
		Set listDados = {}
		Do listDados.%Set("CodigodoLeito", rSet.%Get("CodigodoLeito"))
		Do listDados.%Set("Descricao", rSet.%Get("Descricao"))
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetRestricaoConvenio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))
	;
	Set meuSQL = 	"Select * From SQLUser.VARGrupoAgendamentoRestPlanSau Where Company = 0 " _
								"And CodigoGrupo = '"_pCodGrupo_"'"
	;
	Set arrayRetorno = []
	If (pCodGrupo = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Do listDados.%Set("codPlanoSaude", rSet.%Get("CodigoPlanoSaude"))
		Do listDados.%Set("descPlanoSaude", $$GetDescPlanoSaude^VARSQL(rSet.%Get("CodigoConvenio"), rSet.%Get("CodigoPlanoSaude")))
		Do listDados.%Set("codConvenio", rSet.%Get("CodigoConvenio"))
		Do listDados.%Set("descConvenio", $$GetDescConvenio^VARSQL(rSet.%Get("CodigoConvenio")))
		Do listDados.%Set("codigos", rSet.%Get("CodigoConvenio")_"~"_rSet.%Get("CodigoPlanoSaude"))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmRestricaoConvenio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set objVARGrupoAgendamentoRestPlanSau = ""
	Set pCodigoConvenio = ""
	Set pCodigoPlanoSaude = ""

	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""

		Set campo = $Piece(objDados(index),"~",1)
		
		If (campo = "planoSaude") {
			Set pCodigoConvenio		=	$Piece(objDados(index),"~",2)
			Set pCodigoPlanoSaude = $Piece(objDados(index),"~",3)
		}

	}

	Set $$$VARGrupoAgendamentoRestPlanSauCriadoEm(objVARGrupoAgendamentoRestPlanSau)	= $Horolog
	Set $$$VARGrupoAgendamentoRestPlanSauCriadoPor(objVARGrupoAgendamentoRestPlanSau)	= YBED
	
	Return $$$Save("VARGrupoAgendamentoRestPlanSau",pCodGrupo_","_pCodigoConvenio_","_pCodigoPlanoSaude,objVARGrupoAgendamentoRestPlanSau,$$$YES)]]></Implementation>
</Method>

<Method name="ExcRestricaoConvenio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,pId,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED

	Set pCodigoConvenio		= $Piece(pId,"~",1)
	Set pCodigoPlanoSaude = $Piece(pId,"~",2)
	
	Return $$$Kill("VARGrupoAgendamentoRestPlanSau",pCodGrupo_","_pCodigoConvenio_","_pCodigoPlanoSaude)]]></Implementation>
</Method>

<Method name="GetRestProcedSeq">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))
	;
	Set meuSQL = 	"Select * From SQLUser.VARGrupoAgendamentoRestProcSeq Where Company = 0 " _
								"And CodigoGrupo = '"_pCodGrupo_"'"
	;
	Set arrayRetorno = []
	If (pCodGrupo = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		Do listDados.%Set("id", rSet.%Get("procedimento")_"~"_rSet.%Get("Tipo"))

		Do listDados.%Set("procedimento", rSet.%Get("procedimento"))
		Do listDados.%Set("procedimentoDesc", $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("procedimento"),1))
		Do listDados.%Set("tipo", rSet.%Get("Tipo"))
		Do listDados.%Set("tempo", $Ztime(rSet.%Get("Tempo"),2))
		Do listDados.%Set("criadoEm", $Select(rSet.%Get("CriadoEm")="":"",1:$ZDateTime(rSet.%Get("CriadoEm"),4,2)))
		Do listDados.%Set("criadoPor", $$SQLGetUserName^VARSQL(rSet.%Get("CriadoPor")))
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmRestProcedSeq">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set objVARGrupoAgendamentoRestProcSeq = ""
	Set (pProcedimentoRest, pTipo) = ""

	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""

		Set campo = $Piece(objDados(index),"~",1)
		Set valor = $Piece(objDados(index),"~",2)
		
		Set:campo="tempo" $$$VARGrupoAgendamentoRestProcSeqTempo(objVARGrupoAgendamentoRestProcSeq)	= $ZTimeH(valor,2,0)
		Set:campo="procedimento" pProcedimentoRest	= valor
		Set:campo="tipo" pTipo = valor

	}
	Set $$$VARGrupoAgendamentoRestProcSeqCriadoEm(objVARGrupoAgendamentoRestProcSeq)	= $Horolog
	Set $$$VARGrupoAgendamentoRestProcSeqCriadoPor(objVARGrupoAgendamentoRestProcSeq)	= YBED

	Set status = $$$Save("VARGrupoAgendamentoRestProcSeq",pCodGrupo_","_pProcedimentoRest_","_pTipo,objVARGrupoAgendamentoRestProcSeq,$$$YES)

	Return status]]></Implementation>
</Method>

<Method name="ExcRestProcedSeq">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,pId,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	Set pCodigoProdecimentoRest = $Piece(pId,"~",1)
	Set pTipo = $Piece(pId,"~",2)
	
	Return $$$Kill("VARGrupoAgendamentoRestProcSeq",pCodGrupo_","_pCodigoProdecimentoRest_","_pTipo)]]></Implementation>
</Method>

<Method name="GerarAgenda">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupoAgendamento,pCodUnidade,pCodSala,pCodLeito,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set YBED			= pYBED
	Set strStatus = $$$OK
	;
	Set objGrupoAgendamento = $Get(^VARGrupoAgendamento(YM, pCodGrupoAgendamento, 1))
	Set tempoAtend 	= $$$VARGrupoAgendamentoTempodeAtendimento(objGrupoAgendamento)
	Set dataInicial = $Horolog + 1
	Set dataFinal 	= $Horolog + 61
	;
	Set objWWW0121 								= $Get(^WWW0121(YM, YM, pCodUnidade, 1))
	Set objVARSalasAtendimentos 	= $Get(^VARSalasAtendimentos(YM, pCodSala, 1))
	Set objVARLeitosAtendimentos	= $Get(^VARLeitosAtendimentos(YM, pCodSala, pCodLeito, 1))
	Set segundaSextaInicial = $$$WWW0121HorAberturaSegSexta(objWWW0121)
	Set segundaSextaFinal 	= $$$WWW0121HorFechamentoSegSexta(objWWW0121)
	Set funcSabados		 			= $$$WWW0121FuncionaSabados(objWWW0121)
	Set funcSabInicial 			= $$$WWW0121HorAberturaSabados(objWWW0121)
	Set funcSabFinal 				= $$$WWW0121HorFechamentoSabados(objWWW0121)
	Set funcDomingos 				= $$$WWW0121FuncionaDomingos(objWWW0121)
	Set funcDomInicial 			= $$$WWW0121HorAberturaDomingos(objWWW0121)
	Set funcDomFinal 				= $$$WWW0121HorFechamentoDomingos(objWWW0121)
	If ($$$VARSalasAtendimentosHorariodeAberturaSegundaa(objVARSalasAtendimentos) '= "") {
		Set segundaSextaInicial = $$$VARSalasAtendimentosHorariodeAberturaSegundaa(objVARSalasAtendimentos)
		Set segundaSextaFinal 	= $$$VARSalasAtendimentosHorariodeFechamentoSegund(objVARSalasAtendimentos)
		Set funcSabados		 			= $$$VARSalasAtendimentosFuncionaaosSabados(objVARSalasAtendimentos)
		Set funcSabInicial 			= $$$VARSalasAtendimentosHorariodeAberturaSabados(objVARSalasAtendimentos)
		Set funcSabFinal 				= $$$VARSalasAtendimentosHorariodeFechamentoSabado(objVARSalasAtendimentos)
		Set funcDomingos 				= $$$VARSalasAtendimentosFuncionaaosDomingos(objVARSalasAtendimentos)
		Set funcDomInicial 			= $$$VARSalasAtendimentosHorariodeAberturaDomingos(objVARSalasAtendimentos)
		Set funcDomFinal 				= $$$VARSalasAtendimentosHorariodeFechamentoDoming(objVARSalasAtendimentos)
	}
	If ($$$VARLeitosAtendimentosHorariodeAberturaSegundaa(objVARLeitosAtendimentos) '= "") {
		Set segundaSextaInicial = $$$VARLeitosAtendimentosHorariodeAberturaSegundaa(objVARLeitosAtendimentos)
		Set segundaSextaFinal 	= $$$VARLeitosAtendimentosHorariodeFechamentoSegund(objVARLeitosAtendimentos)
		Set funcSabados		 			= $$$VARLeitosAtendimentosFuncionaaosSabados(objVARLeitosAtendimentos)
		Set funcSabInicial 			= $$$VARLeitosAtendimentosHorariodeAberturaSabados(objVARLeitosAtendimentos)
		Set funcSabFinal 				= $$$VARLeitosAtendimentosHorariodeFechamentoSabado(objVARLeitosAtendimentos)
		Set funcDomingos 				= $$$VARLeitosAtendimentosFuncionaaosDomingos(objVARLeitosAtendimentos)
		Set funcDomInicial 			= $$$VARLeitosAtendimentosHorariodeAberturaDomingos(objVARLeitosAtendimentos)
		Set funcDomFinal 				= $$$VARLeitosAtendimentosHorariodeFechamentoDoming(objVARLeitosAtendimentos)
	}
	For data = dataInicial : 1 : dataFinal {
		
		If ($Data(^VARGrupoAgendamentoHorario(YM, pCodGrupoAgendamento, pCodSala, pCodLeito, data))) {
			Continue	
		}
		
		If ($Data(^VARDiasUnidadeNaoFunciona(YM,pCodUnidade,data,1))) Continue
		If (funcSabados = 0 && ($ZDate(data,10) = 6)) Continue
		If (funcDomingos = 0 && ($ZDate(data,10) = 0)) Continue

		Set horaInicial = segundaSextaInicial
		Set horaFinal 	= segundaSextaFinal
		If ($ZDate(data,10) = 6) {
			Set horaInicial = funcSabInicial
			Set horaFinal 	= funcSabFinal
		}
		If ($ZDate(data,10) = 0) {
			Set horaInicial = funcDomInicial
			Set horaFinal 	= funcDomFinal
		}
		For hora = horaInicial : tempoAtend : (horaFinal-tempoAtend) {
			Set objeto = ""
			Set $$$VARGrupoAgendamentoHorarioTempodeAtendimento(objeto) = tempoAtend
			Set id = pCodGrupoAgendamento_$$$COMMA_pCodSala_$$$COMMA_pCodLeito_$$$COMMA_data_$$$COMMA_hora
			Set strStatus = $$$Save("VARGrupoAgendamentoHorario", id, objeto, $$$YES)
			Quit:$$$ISERR(strStatus)
		}
		Quit:$$$ISERR(strStatus)
	}
	Return strStatus]]></Implementation>
</Method>

<Method name="ListarAgenda">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 					= 0
	Set Y 					= "~"
	Set YBED				= $Get(%request.Data("YBED",1))
	Set pCodGrupo 	= $Get(%request.Data("pCodGrupo",1))
	Set pDataInicio = $Get(%request.Data("pDataInicio",1))
	;
	Set xDataIniSemana = pDataInicio - $ZDate(pDataInicio,10)
	Set xDataFimSemana = xDataIniSemana + 6
	;
	Set objGrupoAgendamento = $Get(^VARGrupoAgendamento(YM, pCodGrupo, 1))
	Set tempoAtend 	= $$$VARGrupoAgendamentoTempodeAtendimento(objGrupoAgendamento)
	;
	Set (menorTempoAtend, maiorTempoAtend) = ""
	&SQL(
		Select Min(HoradeAtendimento), Max(HoradeAtendimento) 
		Into :menorTempoAtend, :maiorTempoAtend From SQLUser.VARGrupoAgendamentoHorario 
		Where Company = 0 And CodigodoGrupo = :pCodGrupo 
		And DatadeAtendimento BetWeen :xDataIniSemana And :xDataFimSemana
	)
	Set variacaoTempoAtend	= $$$VARGrupoAgendamentoTempodeAtendimento(objGrupoAgendamento)
	;
	kill colunas
	Set meuSQL = "Select DatadeAtendimento, SaladeAtendimento, LeitodeAtendimento, "
	Set meuSQL = meuSQL _ "$$GetDescGrupoAgendamento^VARSQL(CodigodoGrupo) As Descricao "
	Set meuSQL = meuSQL _ "From SQLUser.VARGrupoAgendamentoHorario Where Company = 0 "
	Set meuSQL = meuSQL _ "And CodigodoGrupo = '"_pCodGrupo_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
	Set meuSQL = meuSQL _ "Group By SaladeAtendimento, LeitodeAtendimento, DatadeAtendimento "
	Set meuSQL = meuSQL _ "Order By DatadeAtendimento, SaladeAtendimento, LeitodeAtendimento "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set datadeAtendimento 	= rSet.%Get("DatadeAtendimento")
		Set saladeAtendimento		= rSet.%Get("SaladeAtendimento")
		Set leitodeAtendimento	= rSet.%Get("LeitodeAtendimento")
		Set descricao 					= saladeAtendimento_"-"_leitodeAtendimento
		Set sequencia 					= $Order(colunas("Seq", datadeAtendimento, ""),-1) + 1
		Set colunas("Seq", datadeAtendimento, sequencia) = descricao_Y_saladeAtendimento_Y_leitodeAtendimento_Y_descricao
		Set colunas("Desc", datadeAtendimento, descricao) = sequencia
	}
	;
	Set listRetorno 	= {}
	Set arrayDados 		= []
	Set arraySummary	= []
	;
	If ('$Data(colunas)) {
		Set arrayColunas = []
		Set listColunas = {"dataField": "horadeAtendimento", "caption": "Hora", "alignment": "center", "minWidth": 500}
		Do arrayColunas.%Push(listColunas)
		Set listRetorno.Columns = arrayColunas
		Set listDados = {"horadeAtendimento": "Sem dados cadastrado"}
		Do arrayDados.%Push(listDados)
		Set listRetorno.Dados 	= arrayDados
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	;
	;Montar Columns - dxDataGrid
	Set arrayColunas = []
	Set listColunas = {"dataField": "horadeAtendimento", "caption": "Hora", "fixed": 0, "alignment": "center", "width": 100}
	Do arrayColunas.%Push(listColunas)
	Set ultimoDataField = ""
	For data = xDataIniSemana : 1 : xDataFimSemana{
		If ($Data(colunas("Seq", data))) {
			Set sequencia = "", arrayCaption = []
			For {
				Set sequencia = $Order(colunas("Seq", data, sequencia))	
				Quit:sequencia=""
				Set listColunas = {}
				Set listColunas.dataField = $ZDate(data,4)_"C"_sequencia
				Set ultimoDataField				= $ZDate(data,4)_"C"_sequencia
				Set listColunas.caption		= $Piece(colunas("Seq", data, sequencia),Y,1) 
				Set listColunas.codSala		= $Piece(colunas("Seq", data, sequencia),Y,2) 
				Set listColunas.codLeito	= $Piece(colunas("Seq", data, sequencia),Y,3)
				Set listColunas.codUnidade= $$GetVARSalasAtendimentosUnidade^VARSQL($Piece(colunas("Seq", data, sequencia),Y,2)) 
				Set listColunas.descUnidad= $$SQLGetLocationName^VARSQL(listColunas.codUnidade)
				Set listColunas.descSala	= $$GetDescSalasAtendimentos^VARSQL($Piece(colunas("Seq", data, sequencia),Y,2)) 
				Set listColunas.descLeito	= $$GetDescLeitoAtendimentos^VARSQL($Piece(colunas("Seq", data, sequencia),Y,2), $Piece(colunas("Seq", data, sequencia),Y,3))  
				Set listColunas.alignment = "center"
				Set listColunas.minWidth 	= 150
				Set listColunas.dataAtual = +$Horolog
				Set listColunas.dataAgend = +data
				Set listColunas.descosid 	= 0
				Do arrayCaption.%Push(listColunas)
			}
			Set listColunas = {}
			Set listColunas.caption 	= $ZDate(data,4)
			Set listColunas.alignment	= "center"
			Set listColunas.columns		= arrayCaption
			Set listColunas.dataAtual = +$Horolog
			Set listColunas.dataAgend = +data
			Set listColunas.descosid 	= 0
			Do arrayColunas.%Push(listColunas)
		}Else{
			Set listColunas = {}
			Set listColunas.descosid 	= 1
			Set listColunas.dataField = $ZDate(data,4)
			Set ultimoDataField				= $ZDate(data,4)
			Set listColunas.codUnidad = ""
			Set listColunas.codSala		= ""
			Set listColunas.codLeito	= ""
			Set listColunas.descSala	= ""
			Set listColunas.descLeito	= ""
			Set listColunas.alignment = "center"
			Set listColunas.minWidth 	= 150
			Set listColunas.dataAtual = +$Horolog
			Set listColunas.dataAgend = +data
			Do arrayColunas.%Push(listColunas)
		}
	}
	;
	;Summary
	Set listSummary = {}
	Set listSummary.name					= "SelectedRowsSummary"
	Set listSummary.showInColumn	= ultimoDataField
	Set listSummary.displayFormat	= "Ocupação Semanal: {0}"
	Set listSummary.summaryType 	= "custom"
	Do arraySummary.%Push(listSummary)
	;
	Set qtdeAgenda = 0
	Set qtdeAgendaReservado = 0
	For hora = menorTempoAtend : variacaoTempoAtend : maiorTempoAtend {
		Kill dados
		Set meuSQL = "Select DatadeAtendimento, HoradeAtendimento, Admissao, SaladeAtendimento, "
		Set meuSQL = meuSQL _ "LeitodeAtendimento, TempodeAtendimento "
		Set meuSQL = meuSQL _ "From SQLUser.VARGrupoAgendamentoHorario Where Company = 0 "
		Set meuSQL = meuSQL _ "And CodigodoGrupo = '"_pCodGrupo_"' "
		Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
		Set meuSQL = meuSQL _ "And HoradeAtendimento  = '"_hora_"' "
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
		While(rSet.%Next()){
			Set datadeAtendimento 	= rSet.%Get("DatadeAtendimento")
			Set horadeAtendimento 	= rSet.%Get("HoradeAtendimento")
			Set saladeAtendimento		= rSet.%Get("SaladeAtendimento")
			Set leitodeAtendimento	= rSet.%Get("LeitodeAtendimento")
			Set descricao 					= saladeAtendimento_"-"_leitodeAtendimento
			Set numAdmissao					= rSet.%Get("Admissao")
			Set tempoAtentimento		= rSet.%Get("TempodeAtendimento")
			Set sequencia						= colunas("Desc", datadeAtendimento, descricao)
			;
			Set backGround = "#d9ffd9"
			If (numAdmissao '= "") {
				Set backGround = "#ddedff"
			}	
			If ($Data(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, saladeAtendimento, leitodeAtendimento, datadeAtendimento))) {
				Set xObjeto = $Get(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, saladeAtendimento, leitodeAtendimento, datadeAtendimento, 1))
				If ($$$VARGrupoAgendamentoAusenciaIndicadordoDia(xObjeto) = $$$YES) {
					Set backGround = "#ffcaca"
				}Else{
					If (horadeAtendimento >= $$$VARGrupoAgendamentoAusenciaHoraInicial(xObjeto) && 
							(horadeAtendimento <= $$$VARGrupoAgendamentoAusenciaHoraFinal(xObjeto))) {
						Set backGround = "#ffcaca"
					}
				}	
			}
			;
			Set qtdeAgenda = qtdeAgenda + 1
			Set (nomePaciente, telefone, descProcedimento) = ""
			If (numAdmissao '= "") {
				Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
				Set qtdeAgendaReservado = qtdeAgendaReservado + 1
				Set objMEDAdmission = $Get(^MEDAdmission(YM, numAdmissao, 1))
				Set codPaciente = $$$MEDAdmissionPatient(objMEDAdmission)
				Set nomePaciente = $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,17)
				Set telefone 		 = $$GetMEDPatientFone^VARSQL(codPaciente)
				Set xProcedimento 			= ""
				If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
					Set (xSequenciaAgendamento, xProcedimento) = ""
					Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
					Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
					If (xSequenciaAgendamento'="") {
						Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
						Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
						Set dataHoraAdimissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
					}	
				}
				Set descProcedimento = $Extract($$SQLGetDescricaoProduto^VARSQL(xProcedimento,1),1,25)
			}
			Set dados(rSet.%Get("DatadeAtendimento"), sequencia) = numAdmissao_Y_nomePaciente_Y_telefone_Y_descProcedimento
			Set $Piece(dadosColSpan(rSet.%Get("DatadeAtendimento"), sequencia),Y,1) = 1 ;tempoAtentimento\variacaoTempoAtend
			Set $Piece(dadosColSpan(rSet.%Get("DatadeAtendimento"), sequencia),Y,2) = backGround
		}
		Set listDados = {}
		Set listDados.horadeAtendimento	= $ZTime(hora,2)
		For data = xDataIniSemana : 1 : xDataFimSemana{
			If ($Data(colunas("Seq", data))) {
				Set sequencia = ""
				For {
					Set sequencia = $Order(colunas("Seq", data, sequencia))	
					Quit:sequencia=""
					If ($Data(dados(data,sequencia))) {
						Set tProcedimento = ""
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia,dados(data, sequencia))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"rowSpan",1) ;$Piece(dadosColSpan(data, sequencia),Y,1))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround",$Piece(dadosColSpan(data, sequencia),Y,2))
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao",tProcedimento)
					}Else{
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"rowSpan",1)
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"backGround","#ffffff")
						Do listDados.%Set($ZDate(data,4)_"C"_sequencia_"restricao","")
					}
				}
			}Else{
				Do listDados.%Set($ZDate(data,4),"A")
				Do listDados.%Set($ZDate(data,4)_"rowSpan","1")
			}
		}
		Do arrayDados.%Push(listDados)
	}
	;
	Set percOcupacao = 0
	If (qtdeAgenda>0)	Set percOcupacao = $FNumber((qtdeAgendaReservado*100)/qtdeAgenda,"",0)
	;
	Set listRetorno.Columns 			= arrayColunas
	Set listRetorno.Dados 				= arrayDados
	Set listRetorno.Summary 			= arraySummary
	Set listRetorno.PercOcupacao	= percOcupacao
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetCadastrarAusencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set YBED			= $Get(%request.Data("YBED",1))
	Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))
	Set pCodSala 	= $Get(%request.Data("pCodSala",1))
	Set pCodLeito = $Get(%request.Data("pCodLeito",1))
	Set pData			= $ZDateH($Get(%request.Data("pData",1)),4)
	;
	Set objeto = $Get(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, pCodSala, pCodLeito, pData, 1))
	;
	Set indicadordoDia 	= $$$VARGrupoAgendamentoAusenciaIndicadordoDia(objeto)
	Set horaInicial			= $$$VARGrupoAgendamentoAusenciaHoraInicial(objeto)
	Set horaFinal 			= $$$VARGrupoAgendamentoAusenciaHoraFinal(objeto)
	Set descricao				= $$$VARGrupoAgendamentoAusenciaDescricao(objeto)
	;
	Set flagExcluir = 1
	if (objeto = "") Set flagExcluir = 0
	;
	Set listRetorno = {}
	Set listRetorno.descSala 				= $$GetDescSalasAtendimentos^VARSQL(pCodSala) 
	Set listRetorno.descLeito 			= $$GetDescLeitoAtendimentos^VARSQL(pCodSala, pCodLeito)  
	Set listRetorno.data 						= $ZDate(pData,4)
	Set listRetorno.indicadordoDia 	= +indicadordoDia
	Set listRetorno.horaInicial 		= $Select(horaInicial="":"",1:$ZTime(horaInicial,2))
	Set listRetorno.horaFinal 			= $Select(horaFinal="":"",1:$ZTime(horaFinal,2))
	Set listRetorno.descricao 			= descricao
	Set listRetorno.flagExcluir 		= flagExcluir
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarCadastrarAusencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 							= 0
	Set Y 							= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodGrupo 			= $Get(%request.Data("pCodGrupo",1))
	Set pCodSala 				= $Get(%request.Data("pCodSala",1))
	Set pCodLeito 			= $Get(%request.Data("pCodLeito",1))
	Set pData				 		= $ZDateH($Get(%request.Data("pData",1)),4)
	Set pIndicadordoDia	= $Get(%request.Data("pIndicadordoDia",1))
	Set pHoraInicial		= $Get(%request.Data("pHoraInicial",1))
	Set pHoraFinal			= $Get(%request.Data("pHoraFinal",1))
	Set pDescricao			= $Get(%request.Data("pDescricao",1))
	if (pData < +$Horolog) {
		Write "Data não pode ser inferior a Hoje."
		Return 
	}	;
	If (pIndicadordoDia = "true") Set pIndicadordoDia = 1
	Else  Set pIndicadordoDia = 0
	;
	Set objeto = $Get(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, pCodSala, pCodLeito, pData, 1))
	;
	Set $$$VARGrupoAgendamentoAusenciaIndicadordoDia(objeto)	= pIndicadordoDia
	Set $$$VARGrupoAgendamentoAusenciaHoraInicial(objeto)			= $Select(pHoraInicial="":"",1:$ZTimeH(pHoraInicial,2))
	Set $$$VARGrupoAgendamentoAusenciaHoraFinal(objeto)				= $Select(pHoraFinal="":"",1:$ZTimeH(pHoraFinal,2))
	Set $$$VARGrupoAgendamentoAusenciaDescricao(objeto)				= pDescricao
	If ($$$VARGrupoAgendamentoAusenciaCriadoEm(objeto) = "") {
		Set $$$VARGrupoAgendamentoAusenciaCriadoEm(objeto) 		= $Horolog		
		Set $$$VARGrupoAgendamentoAusenciaCriadoPor(objeto) 	= YBED		
	}Else{
		Set $$$VARGrupoAgendamentoAusenciaAlteradoEm(objeto) 	= $Horolog		
		Set $$$VARGrupoAgendamentoAusenciaAlteradoPor(objeto) = YBED		
	}
	Set strStatus = $$$Save("VARGrupoAgendamentoAusencia", pCodGrupo_$$$COMMA_pCodSala_$$$COMMA_pCodLeito_$$$COMMA_pData, objeto, $$$YES)
	;
	Set meuSQL = "Select * From SQLUser.VARGrupoAgendamentoHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoGrupo = '"_pCodGrupo_"' "
	Set meuSQL = meuSQL _ "And SaladeAtendimento = '"_pCodSala_"' "
	Set meuSQL = meuSQL _ "And LeitodeAtendimento = '"_pCodLeito_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_pData_"' And Admissao Is Not Null "
	If (pIndicadordoDia '= 1)	{
		Set meuSQL = meuSQL _ "And HoradeAtendimento BetWeen '"_$ZTimeH(pHoraInicial,2)_"' And '"_$ZTimeH(pHoraFinal,2)_"'"
	}
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
 	While (rSet.%Next()) {
		Set idIncons = $$GetNextNumber^COMUtils("VARAgendamentoInconsistencia","")
		Set objeto = $Get(^VARAgendamentoInconsistencia(YM, idIncons, 1))
		Set $$$VARAgendamentoInconsistenciaDataGeracao(objeto) 	= +$Horolog
		Set $$$VARAgendamentoInconsistenciaHoraGeracao(objeto) 	= $Piece($Horolog,",",2)
		Set $$$VARAgendamentoInconsistenciaCriadoPor(objeto) 		= YBED
		Set $$$VARAgendamentoInconsistenciaAdmissao(objeto) 		= rSet.%Get("Admissao")
				Set $$$VARAgendamentoInconsistenciaMotivo(objeto) 	= pDescricao
		Set strStatus = $$$Save("VARAgendamentoInconsistencia", idIncons, objeto, $$$YES)
	}
	;
	Write strStatus
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ExcluirCadastrarAusencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	Set YBED			= $Get(%request.Data("YBED",1))
	Set pCodGrupo = $Get(%request.Data("pCodGrupo",1))
	Set pCodSala 	= $Get(%request.Data("pCodSala",1))
	Set pCodLeito = $Get(%request.Data("pCodLeito",1))
	Set pData			= $ZDateH($Get(%request.Data("pData",1)),4)
	if (pData < +$Horolog) {
		Write "Data não pode ser inferior a Hoje."
		Return 
	}
	
	;
	Set strStatus = $$$Kill("VARGrupoAgendamentoAusencia", pCodGrupo_$$$COMMA_pCodSala_$$$COMMA_pCodLeito_$$$COMMA_pData)
	;
	Set meuSQL = "Select * From SQLUser.VARGrupoAgendamentoHorario "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoGrupo = '"_pCodGrupo_"' "
	Set meuSQL = meuSQL _ "And SaladeAtendimento = '"_pCodSala_"' "
	Set meuSQL = meuSQL _ "And LeitodeAtendimento = '"_pCodLeito_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_pData_"' And Admissao Is Not Null "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
 	While (rSet.%Next()) {
		Set numAdmissao = $Replace($Get(%request.Data("Admissao")),"/"," ")
		If ($Data(^VARAgendamentoInconsistencias(0,10,numAdmissao))) {
			Set idIncons = $Order(^VARAgendamentoInconsistencias(0,10,numAdmissao,""))
			if (idIncons = "") Continue
			Set strStatus = $$$Kill("VARAgendamentoInconsistencia", idIncons)
		}
	}
	;
	Write strStatus
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListarAgendaScheduler">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 							= 0
	Set Y 							= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodGrupo 			= $Get(%request.Data("pCodGrupo",1))
	Set pDataInicio 		= $Get(%request.Data("pDataInicio",1))
	Set pTipoVisual			= $Get(%request.Data("pTipoVisual",1))
	If (pTipoVisual = "DI") {
		Set xDataIniSemana 	= pDataInicio
		Set xDataFimSemana 	= xDataIniSemana
	}Else{
		Set xDataIniSemana 	= pDataInicio - $ZDate(pDataInicio,10)
		Set xDataFimSemana 	= xDataIniSemana + 6
	}
	;
	&Sql(
		Select Min(HorAberturaSegSexta), Max(HorFechamentoSegSexta) 
		Into :menorTempoAtend, :maiorTempoAtend
		From SQLUser.WWW0121 
		Where Company = :YM And FREE12 = 1 
		And HorAberturaSegSexta Is Not Null
		And HorFechamentoSegSexta Is Not NULL
	)
	;
	Set qtdeColunas = 0
	Set (percOcupacao, qtdeAgendaReservado, qtdeAgenda) = 0
	Set grupo = "", countGrupo = 0
	Set arrayDados = []
	;
	For dataAtendimento = xDataIniSemana : 1 : xDataFimSemana {
		Kill tSalasLeitos 
		Set meuSQL = "Select SaladeAtendimento, LeitodeAtendimento "
		Set meuSQL = meuSQL _ "From SQLUser.VARGrupoAgendamentoHorario Where Company = 0 "
		Set meuSQL = meuSQL _ "And CodigodoGrupo = '"_pCodGrupo_"' "
		Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_dataAtendimento_"' "
		Set meuSQL = meuSQL _ "Group By $$GetVARSalasAtendimentosUnidade^VARSQL(SaladeAtendimento), "
		Set meuSQL = meuSQL _ "SaladeAtendimento, LeitodeAtendimento "
		Set meuSQL = meuSQL _ "Order By $$GetVARSalasAtendimentosUnidade^VARSQL(SaladeAtendimento), "
		Set meuSQL = meuSQL _ "SaladeAtendimento, LeitodeAtendimento "
		Set cLeito = 0
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
		While(rSet.%Next()){
			Set tSalasLeitos($Increment(cLeito)) = rSet.%Get("SaladeAtendimento")_Y_rSet.%Get("LeitodeAtendimento")
		}
		;
		Set qtdeColunas = qtdeColunas + cLeito
		;
		Set meuSQL = "Select * From SQLUser.VARGrupoAgendamentoHorario Where Company = 0 "
		Set meuSQL = meuSQL _ "And CodigodoGrupo = '"_pCodGrupo_"' "
		Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_dataAtendimento_"' "
		Set meuSQL = meuSQL _ "Group By HoradeAtendimento "
		Set meuSQL = meuSQL _ "Order By HoradeAtendimento "
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
		While(rSet.%Next()){
			Set cLeito = ""
			For {
				Set cLeito = $Order(tSalasLeitos(cLeito))
				Quit:cLeito?1""
				
				Set codSala 	= $Piece(tSalasLeitos(cLeito),Y,1)
				Set codLeito 	= $Piece(tSalasLeitos(cLeito),Y,2)
				
				Set horaAtend 	= rSet.%Get("HoradeAtendimento")
				Set tempoAtend 	= rSet.%Get("TempodeAtendimento")
				
				If ($Data(^VARGrupoAgendamentoHorario(YM, pCodGrupo, codSala, codLeito, dataAtendimento, horaAtend, 1))) {

					Set objVARGrupoAgendamentoHorario = $Get(^VARGrupoAgendamentoHorario(YM, pCodGrupo, codSala, codLeito, dataAtendimento, horaAtend, 1))

					Set numAdmissao 	= $$$VARGrupoAgendamentoHorarioAdmissao(objVARGrupoAgendamentoHorario)

					Set dataAtend 		= dataAtendimento
					Set codLeitoAtend = codLeito
					Set codSalaAtend	= codSala
					Set tempoAtend 		= $$$VARGrupoAgendamentoHorarioTempodeAtendimento(objVARGrupoAgendamentoHorario)
					Set qtdeAgenda 		= qtdeAgenda + 1
				
					Set codUnidade	= $$GetVARSalasAtendimentosUnidade^VARSQL(codSalaAtend) 
					Set descUnidade	= $$SQLGetLocationName^VARSQL(codUnidade)
					Set descSala		= $$GetDescSalasAtendimentos^VARSQL(codSalaAtend)
					Set descLeito		= $$GetDescLeitoAtendimentos^VARSQL(codSalaAtend, codLeitoAtend)  

					Set fDataAtend 	= $ZDate(dataAtend,4)
					Set fHrIniAtend = $ZTime(horaAtend,2)
					Set fHrFinAtend = $ZTime(horaAtend + tempoAtend,2)

					Set xCountGrupo = "L", descAusencia = ""											
					If (numAdmissao '= "") Set xCountGrupo = "A"
					If ($Data(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, codSalaAtend, codLeitoAtend, dataAtend))) {
						Set xObjeto = $Get(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, codSalaAtend, codLeitoAtend, dataAtend, 1))
						If ($$$VARGrupoAgendamentoAusenciaIndicadordoDia(xObjeto) = $$$YES) {
							Set xCountGrupo = "E"
							Set descAusencia = $$$VARGrupoAgendamentoAusenciaDescricao(xObjeto)
						}Else{
							If (horaAtend >= $$$VARGrupoAgendamentoAusenciaHoraInicial(xObjeto) && 
									(horaAtend <= $$$VARGrupoAgendamentoAusenciaHoraFinal(xObjeto))) {
								Set xCountGrupo = "E"
								Set descAusencia = $$$VARGrupoAgendamentoAusenciaDescricao(xObjeto)
							}
						}	
					}
					If ($Data(^VARDiasUnidadeNaoFunciona(YM,codUnidade,dataAtend,1))) {
						Set xCountGrupo = "E"
					}
					Set (codPaciente, nomePaciente, telefone, dataHoraAdmissao) = ""
					If (numAdmissao '= "") {
						Set qtdeAgendaReservado = qtdeAgendaReservado + 1
						Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
						Set objMEDAdmission 		= $Get(^MEDAdmission(YM, numAdmissao, 1))
						Set codPaciente 				= $$$MEDAdmissionPatient(objMEDAdmission)
						Set nomePaciente 				= $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
						Set telefone 		 				= $$GetMEDPatientFone^VARSQL(codPaciente)
						Set xProcedimento 			= ""
						If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
							Set (xSequenciaAgendamento, xProcedimento) = ""
							Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
							Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
							If (xSequenciaAgendamento'="") {
								Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
								Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
								Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
							}	
						}
						If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
					}
					Set listDados 	= {}
					Set listDados.text 							= descUnidade_" - "_descSala_" - "_descLeito
					If (descAusencia '= "") {
						Set listDados.text 						= descAusencia
					}
					If (nomePaciente '= "") {
						Set listDados.text 						= nomePaciente_" - "_telefone
					}
					Set listDados.descUnidade 			= descUnidade
					Set listDados.descSala 					= descSala
					Set listDados.descLeito 				= descLeito
					Set listDados.numAdmissao 		 	= numAdmissao
					Set listDados.dataAtendimento  	= dataAtend
					Set listDados.codPaciente			 	= codPaciente
					Set listDados.nomePaciente		 	= nomePaciente
					Set listDados.telefone				 	= telefone
					Set listDados.dataHoraAdmissao 	= dataHoraAdmissao
					Set listDados.Ano							 	= +$Piece(fDataAtend,"/",3)
					Set listDados.Mes							 	= +$Piece(fDataAtend,"/",2) - 1
					Set listDados.Dia							 	= +$Piece(fDataAtend,"/",1)
					Set listDados.hora							= fHrIniAtend
					Set listDados.iHr							 	= +$Piece(fHrIniAtend,":",1)
					Set listDados.iMin						 	= +$Piece(fHrIniAtend,":",2)
					Set listDados.fHr							 	= +$Piece(fHrFinAtend,":",1)
					Set listDados.fMin						 	= +$Piece(fHrFinAtend,":",2)
					Set listDados.idGrupo 				 	= xCountGrupo
					Do arrayDados.%Push(listDados)
				}Else{
					Set codUnidade	= $$GetVARSalasAtendimentosUnidade^VARSQL(codSala) 
					Set descUnidade	= $$SQLGetLocationName^VARSQL(codUnidade)
					Set descSala		= $$GetDescSalasAtendimentos^VARSQL(codSala)
					Set descLeito		= $$GetDescLeitoAtendimentos^VARSQL(codSala, codLeito)  

					Set dataAtend 		= dataAtendimento

					Set fDataAtend 	= $ZDate(dataAtend,4)
					Set fHrIniAtend = $ZTime(horaAtend,2)
					Set fHrFinAtend = $ZTime(horaAtend + tempoAtend,2)
					Set listDados 	= {}
					Set listDados.text 							= descUnidade_" - "_descSala_" - "_descLeito
					Set listDados.descUnidade 			= descUnidade
					Set listDados.descSala 					= descSala
					Set listDados.descLeito 				= descLeito
					Set listDados.numAdmissao 		 	= ""
					Set listDados.dataAtendimento  	= dataAtend
					Set listDados.codPaciente			 	= ""
					Set listDados.nomePaciente		 	= ""
					Set listDados.telefone				 	= ""
					Set listDados.dataHoraAdmissao 	= ""
					Set listDados.Ano							 	= +$Piece(fDataAtend,"/",3)
					Set listDados.Mes							 	= +$Piece(fDataAtend,"/",2) - 1
					Set listDados.Dia							 	= +$Piece(fDataAtend,"/",1)
					Set listDados.hora							= fHrIniAtend
					Set listDados.iHr							 	= +$Piece(fHrIniAtend,":",1)
					Set listDados.iMin						 	= +$Piece(fHrIniAtend,":",2)
					Set listDados.fHr							 	= +$Piece(fHrFinAtend,":",1)
					Set listDados.fMin						 	= +$Piece(fHrFinAtend,":",2)
					Set listDados.idGrupo 				 	= "X"
					Do arrayDados.%Push(listDados)
				}
			}
		}
	}
	
	Set arrayGrupo = []
	Set listDados = {}
	Set listDados.text	= "Livre"
	Set listDados.id		= "L"	
	Set listDados.color	= "#A9C8DE"
	Do arrayGrupo.%Push(listDados)	

	Set listDados = {}
	Set listDados.text	= "Agendado"
	Set listDados.id		= "A"	
	Set listDados.color	= "#C4FFC4"
	Do arrayGrupo.%Push(listDados)	

	Set listDados = {}
	Set listDados.text	= "Ausencia"
	Set listDados.id		= "E"	
	Set listDados.color	= "#ffcaca"
	Do arrayGrupo.%Push(listDados)	

	Set listDados = {}
	Set listDados.text	= "Sem Cadastro"
	Set listDados.id		= "X"	
	Set listDados.color	= "#d0d0d0"
	Do arrayGrupo.%Push(listDados)	

	;}
	
	;	
	/*Set (percOcupacao, qtdeAgendaReservado, qtdeAgenda) = 0
	Set grupo = "", countGrupo = 0
	Set arrayDados = []
	Set meuSQL = "Select * From SQLUser.VARGrupoAgendamentoHorario Where Company = 0 "
	Set meuSQL = meuSQL _ "And CodigodoGrupo = '"_pCodGrupo_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento BetWeen '"_xDataIniSemana_"' And '"_xDataFimSemana_"' "
	Set meuSQL = meuSQL _ "Order By DatadeAtendimento, HoradeAtendimento, SaladeAtendimento, LeitodeAtendimento"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){

		Set numAdmissao 	= rSet.%Get("Admissao")
		Set dataAtend 		= rSet.%Get("DatadeAtendimento")
		Set horaAtend 		= rSet.%Get("HoradeAtendimento")
		Set codLeitoAtend = rSet.%Get("LeitodeAtendimento")
		Set codSalaAtend	= rSet.%Get("SaladeAtendimento")
		Set tempoAtend 		= rSet.%Get("TempodeAtendimento")
		Set qtdeAgenda 		= qtdeAgenda + 1
	
		Set codUnidade	= $$GetVARSalasAtendimentosUnidade^VARSQL(codSalaAtend) 
		Set descUnidade	= $$SQLGetLocationName^VARSQL(codUnidade)
		Set descSala		= $$GetDescSalasAtendimentos^VARSQL(codSalaAtend)
		Set descLeito		= $$GetDescLeitoAtendimentos^VARSQL(codSalaAtend, codLeitoAtend)  
	
		Set fDataAtend 	= $ZDate(dataAtend,4)
		Set fHrIniAtend = $ZTime(horaAtend,2)
		Set fHrFinAtend = $ZTime(horaAtend + tempoAtend,2)

		Set idGrupo = codSalaAtend_"|"_codLeitoAtend
		If '$Data(grupo(idGrupo)) {
			Set countGrupo = countGrupo + 1
			Set grupo(idGrupo) = countGrupo
		}Else{
			Set countGrupo = grupo(idGrupo)
		}
		Set xCountGrupo = countGrupo_"L"											
		If (numAdmissao '= "") Set xCountGrupo = countGrupo_"A"
		If ($Data(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, codSalaAtend, codLeitoAtend, dataAtend))) {
			Set xObjeto = $Get(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, codSalaAtend, codLeitoAtend, dataAtend, 1))
			If ($$$VARGrupoAgendamentoAusenciaIndicadordoDia(xObjeto) = $$$YES) {
				Set xCountGrupo = countGrupo_"E"
			}Else{
				If (horaAtend >= $$$VARGrupoAgendamentoAusenciaHoraInicial(xObjeto) && 
						(horaAtend <= $$$VARGrupoAgendamentoAusenciaHoraFinal(xObjeto))) {
					Set xCountGrupo = countGrupo_"E"
				}
			}	
		}
		If ($Data(^VARDiasUnidadeNaoFunciona(YM,codUnidade,dataAtend,1))) {
			Set xCountGrupo = countGrupo_"E"
		}
		Set (codPaciente, nomePaciente, telefone, dataHoraAdmissao) = ""
		If (numAdmissao '= "") {
			Set qtdeAgendaReservado = qtdeAgendaReservado + 1
			Set xNumAdmissao 				= $Replace(numAdmissao,"/"," ")
			Set objMEDAdmission 		= $Get(^MEDAdmission(YM, numAdmissao, 1))
			Set codPaciente 				= $$$MEDAdmissionPatient(objMEDAdmission)
			Set nomePaciente 				= $Extract($$SQLGetPatientName^VARSQL(codPaciente),1,22)
			Set telefone 		 				= $$GetMEDPatientFone^VARSQL(codPaciente)
			Set xProcedimento 			= ""
			If ($Data(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao))) {
				Set (xSequenciaAgendamento, xProcedimento) = ""
				Set xCodigoAgendamento 	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, ""))	
				Set:xCodigoAgendamento'="" xSequenciaAgendamento	= $Order(^VARAgendamentoProcedimentoss(YM, 20, xNumAdmissao, xCodigoAgendamento, ""))
				If (xSequenciaAgendamento'="") {
					Set xObjAgendProc 		= $Get(^VARAgendamentoProcedimentos(YM, xCodigoAgendamento, xSequenciaAgendamento, 1))
					Set xProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(xObjAgendProc)	
					Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(xObjAgendProc)	
				}	
			}
			If (dataHoraAdmissao'="") Set dataHoraAdmissao = $ZDateTime(dataHoraAdmissao,4,2)
		}

		Set listDados 	= {}
		Set listDados.descUnidade 			= descUnidade
		Set listDados.descSala 					= descSala
		Set listDados.descLeito 				= descLeito
		Set listDados.numAdmissao 		 	= numAdmissao
		Set listDados.dataAtendimento  	= dataAtend
		Set listDados.codPaciente			 	= codPaciente
		Set listDados.nomePaciente		 	= nomePaciente
		Set listDados.telefone				 	= telefone
		Set listDados.dataHoraAdmissao 	= dataHoraAdmissao
		Set listDados.Ano							 	= +$Piece(fDataAtend,"/",3)
		Set listDados.Mes							 	= +$Piece(fDataAtend,"/",2) - 1
		Set listDados.Dia							 	= +$Piece(fDataAtend,"/",1)
		Set listDados.hora							= fHrIniAtend
		Set listDados.iHr							 	= +$Piece(fHrIniAtend,":",1)
		Set listDados.iMin						 	= +$Piece(fHrIniAtend,":",2)
		Set listDados.fHr							 	= +$Piece(fHrFinAtend,":",1)
		Set listDados.fMin						 	= +$Piece(fHrFinAtend,":",2)
		Set listDados.idGrupo 				 	= xCountGrupo
		Do arrayDados.%Push(listDados)
	}	
	;
	Set arrayGrupo = []
	Set descGrpAgend = ""
	For {
		Set descGrpAgend = $Order(grupo(descGrpAgend))
		Quit:descGrpAgend=""
		Set countGrupo = grupo(descGrpAgend)
		
		Set listDados = {}
		Set listDados.text	= descGrpAgend
		Set listDados.id		= countGrupo_"L"	;Livre
		Set listDados.color	= "#A9C8DE"
		Do arrayGrupo.%Push(listDados)	

		Set listDados = {}
		Set listDados.text	= descGrpAgend
		Set listDados.id		= countGrupo_"A"	;Agendado
		Set listDados.color	= "#C4FFC4"
		Do arrayGrupo.%Push(listDados)	

		Set listDados = {}
		Set listDados.text	= descGrpAgend
		Set listDados.id		= countGrupo_"E"	;Ausencia
		Set listDados.color	= "#ffcaca"
		Do arrayGrupo.%Push(listDados)	
	}
	;*/
	Set listRetorno = {}
	If (qtdeAgenda>0)	Set percOcupacao = $FNumber((qtdeAgendaReservado*100)/qtdeAgenda,"",0)
	Set listRetorno.percOcupacao 		= percOcupacao
	Set listRetorno.menorTempoAtend	= +$Piece($ZTime(menorTempoAtend,2),":",1)
	Set listRetorno.maiorTempoAtend	= +$Select(
																			$Piece($ZTime(maiorTempoAtend,2),":",2) > 0
																			: 
																				($Piece($ZTime(maiorTempoAtend,2),":",1) + 1) 
																			,1: 
																				$Piece($ZTime(maiorTempoAtend,2),":",1)
																		)
	Set listRetorno.dados 					= arrayDados
	Set listRetorno.resources 			= arrayGrupo
	Set listRetorno.qtdeColunas			= (qtdeColunas * 300)																
	Do listRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetSalaLeito">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 					= 0
	Set Y 					= "~"
	Set YBED				= $Get(%request.Data("YBED",1))
	Set pCodGrupo 	= $Get(%request.Data("pCodGrupo",1))
	Set pData 			= $ZDateH($Get(%request.Data("pData",1)),4)
	
	Set arrayRetorno = []

	Set meuSQL = "Select $$GetVARSalasAtendimentosUnidade^VARSQL(SaladeAtendimento) As codUnidade, "
	Set meuSQL = meuSQL _ "SaladeAtendimento, LeitodeAtendimento "
	Set meuSQL = meuSQL _ "From SQLUser.VARGrupoAgendamentoHorario Where Company = 0 "
	Set meuSQL = meuSQL _ "And CodigodoGrupo = '"_pCodGrupo_"' "
	Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_pData_"' "
	Set meuSQL = meuSQL _ "Group By $$GetVARSalasAtendimentosUnidade^VARSQL(SaladeAtendimento), "
	Set meuSQL = meuSQL _ "SaladeAtendimento, LeitodeAtendimento "
	Set meuSQL = meuSQL _ "Order By $$GetVARSalasAtendimentosUnidade^VARSQL(SaladeAtendimento), "
	Set meuSQL = meuSQL _ "SaladeAtendimento, LeitodeAtendimento "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set codUnidade 	= rSet.%Get("codUnidade")
		Set codSala 		= rSet.%Get("SaladeAtendimento")
		Set codLeito 		= rSet.%Get("LeitodeAtendimento")
		
		Set descUnidade	= $$SQLGetLocationName^VARSQL(codUnidade)
		Set descSala		= $$GetDescSalasAtendimentos^VARSQL(codSala) 
		Set descLeito		= $$GetDescLeitoAtendimentos^VARSQL(codSala, codLeito)  

		Set xObjeto 		= $Get(^VARGrupoAgendamentoAusencia(YM, pCodGrupo, codSala, codLeito, pData, 1))

		Set listDados 					= {}
		Set listDados.id 				= codSala_Y_codLeito
		Set listDados.text 			= descUnidade_" - "_descSala_" - "_descLeito
		Set listDados.ausencia 	= $$$VARGrupoAgendamentoAusenciaDescricao(xObjeto)
		
		Do arrayRetorno.%Push(listDados)
	
	}
	
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetGrupo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y	= "~"
	Set pCodProduto = $Get(%request.Data("pCodProduto",1))
	Set pCodGrupo 	= $Get(%request.Data("pCodGrupo",1))
	Set objINART = ""
	Set:pCodProduto'="" objINART = $Get(^INART(YM, pCodProduto, 1))
	If ($$$INARTGrupodeAgendamento(objINART)'=""&&($$$INARTGrupodeAgendamento(objINART)'=pCodGrupo)) {
		Write "O produto ("_pCodProduto_") "_$Select($$$INARTDescItemPedido(objINART)="":$$$INARTSearchName(objINART),1:$$$INARTDescItemPedido(objINART))_", já está cadastrado para o Grupo de Agendamento "_$$$VARGrupoAgendamentoDescricao($Get(^VARGrupoAgendamento(YM, $$$INARTGrupodeAgendamento(objINART), 1))) 
	}
	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>