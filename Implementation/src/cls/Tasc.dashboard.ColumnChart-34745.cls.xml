<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Tasc.dashboard.ColumnChart">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Chart</Super>

<Property name="Label">
<Type>%String</Type>
<InitialExpression>"true"</InitialExpression>
</Property>


<Property name="Legenda">
<Type>%String</Type>
<InitialExpression>"true"</InitialExpression>
</Property>


<Property name="SubTitulo">
<Type>%String</Type>
</Property>


<Property name="NomeSerie">
<Type>%String</Type>
<InitialExpression>"NomeSerie"</InitialExpression>
</Property>


<Method name="GetCategorias">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	if ($L(..CategoriasX) > 0) { 
		quit ..CategoriasX
	}
	else {
		quit ..GetSubCategorias(..Series.GetAt(1).SubSeries,1)
	}
]]></Implementation>
</Method>

<Method name="Print">
<Implementation><![CDATA[
	
	write "<script type=""text/javascript"">" ,!
    set numChart = "chart"_$p($now(),".",2)
    write "var "_numChart_";" ,!
    write " $(document).ready(function() { " ,!
    write "     "_numChart_" = new Highcharts.Chart({ ",!
    write "     chart: { ",!
    write "         renderTo: '"_..DivName_"', ",!
    write "         type: 'column', " ,!
    ;write "         defaultSeriesType: 'column', " ,!
    if ($length(..CorDeFundo) > 0 ) {
		write " 	backgroundColor: '"_..CorDeFundo_"', ",!
	}
	else {
		write "     backgroundColor: { ",!
	    write "			linearGradient: [0, 0, 0, 500]," ,!
	    write "			stops: [" ,!
	    write "				[0, 'rgb(250, 250, 250)']," ,!
	    write "				[1, 'rgb(235, 235, 235)']" ,!
	    write "			]" ,!
	    write "		},",!
	}
    write "         borderWidth: 1, " ,!
    write "         borderColor: '#dfe9c9'" ,!
    write "     }," ,!
    write "     title: {" ,!
    write "         text: '"_..Titulo_"'" ,!
    write "     }," ,!
    write "     credits: {" ,!
    write "         enabled: 0" ,!
    write "     }," ,!
    write "		tooltip: {" ,!
    if (1) {
     write "		    crosshairs: true," ,!
	 ;write "			shared: true," ,!
    }
     write "			formatter: function() {" ,!
     write "				return '<strong>' + this.x + '/' + this.series.name + ':</strong> "_..Prefixo_"' + Highcharts.numberFormat(this.y, "_..NumCasaDecY_", ',', '.')+'"_..Sufixo_"';" ,!
     write "			}" ,!
  
    write "		}," ,!    
    write "		xAxis: {" ,!
    write "     categories: "_..GetCategorias() ,!
    write "     title: {",!
	write "          text: '"_..TituloX_"'",!
	write "     }",!
    write "     }," ,!
    write "     yAxis: {" ,!
    write "         min: 0," ,!

    write "         title: {" ,!
    write "             text: '"_..TituloY_"'" ,!
    write "         }," ,!
    write "			labels: {" ,!
    write "				formatter: function() {" ,!
	write "					return Highcharts.numberFormat(this.value, "_..NumCasaDecY_", ',', '.')" ,!
	write "				}" ,!
	write "			}" ,!
    write "     }," ,!
   
	
		write "	plotOptions: {",!
		w "	pointPadding: 1,",!
		write "     column: {",!
        write "        marker: {",!
        write "            radius: 4,",!
        write "            lineColor: '#666666',",!
        write "            lineWidth: 1",!
        write "        }",!
        if (0) {
	        write "         dataLabels: {",!
	        write "            enabled: true,",!
	        write "				formatter: function() {" ,!
			write "					return Highcharts.numberFormat(this.yAxis.Value, "_..NumCasaDecY_", ',', '.')" ,!
			write "				}" ,!
      
       		write "         },",!
        	write "         enableMouseTracking: false",!
        }
        	write "    },",!
   
     if (..Clickable) {
		write "		series: {",!
		write "			cursor: 'pointer',",!
		write "			events: {",!
		write "					click: function(e) {",!
		write "					alert('?fCompetencia='+ this.name + e.xAxis[0].value );",!
	;	write "					abreLink('?fCompetencia='+this.name + e.xAxis[0].value);",!
		write "				}",!
		write "			}",!
		write "		}",!
	}
		write "	},",!
	

    write "     series: [",!
    
    For i = 1:1:..Series.Count() {
		if (i = ..Series.Count()) {
			set fim = "}"
		}
		else {
			set fim = "},"
		}
		set Valores = ..GetSubValores(..Series.GetAt(i).SubSeries,1)
		set Titulo = ..Series.GetAt(i).Titulo
		do ..PrintSeries(Titulo,Valores)
		w fim
	}
    write "     ]" ,!
    write " });" ,!
    write "});" ,!
    
	w "</"_"script>",!
]]></Implementation>
</Method>

<Method name="Print1">
<Implementation><![CDATA[
	write "<script type= ""text/javascript"">"
	
	set numChart = "chart"_$piece($now(),".",2)
	write !
	write "var "_numChart_";",!
	write "$(document).ready(function() {",!
	
	write numChart_" = new Highcharts.Chart({",!
	write "chart: {",!
	write "		renderTo: '"_..DivName_"',",!
	write "		plotBackgroundColor: null,",!
	if ($length(..CorDeFundo) > 0 ) {
		write " 	backgroundColor: '"_..CorDeFundo_"', ",!
	}
	else {
		write "     backgroundColor: { ",!
	    write "			linearGradient: [0, 0, 0, 500]," ,!
	    write "			stops: [" ,!
	    write "				[0, 'rgb(250, 250, 250)']," ,!
	    write "				[1, 'rgb(235, 235, 235)']" ,!
	    write "			]" ,!
	    write "		},",!
	}
	write "		plotBorderWidth: null,",!
	write "		plotShadow: false",!
	write "	},",!
	write "	credits: {",!
	write "		enabled: false",!
	write "	},",!
    write "title: {",!
	write "		text: '"_..Titulo_"'",!
	write "	},",!
	write "	tooltip: {",!
	write "		formatter: function() {",!
	if (..ShowPorcentagem) {
		write "			return '<b>'+ this.point.name +'</b>: '+ Highcharts.numberFormat(this.percentage, "_..NumCasaDecY_", ',', '.') +' % ';",!
	}
	else{
		if (..MostrarEmMoeda) {
			write "			return '<b>'+ this.point.name +'</b>: R$'+ Highcharts.numberFormat(this.y, "_..NumCasaDecY_", ',', '.') +'';",!
		}
		else {
			write "			return '<b>'+ this.point.name +'</b>: "_..Prefixo_"'+ this.y +'"_..Sufixo_"';",!
		}
	}
	write "		}",!
	write "	},",!
	write "	plotOptions: {",!
	
	if (..Clickable) {
		write "	series: {",!
		write "		cursor: 'pointer',",!
		write "		events: {",!
		write "			click: function (event) {",!
		write "				abreLink('?serie='+this.name);",!
		write "			}",!
		write "		}",!
		write "	},",!
	}
	write "		pie: {",!
	write "			allowPointSelect: true,",!
	write "			cursor: 'pointer',",!
	write "			dataLabels: {",!
	write "				enabled: "_..Label_",",!
	write "			    format: '<b>{point.name}</b>: {point.percentage:.1f} %',",!
    write "	                style: {",!
    write "	                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'",!
    write "	                }",!
	write "			},",!
	write "			showInLegend: "_..Legenda,!
	write "		}",!
	write "	},",!
	write "	series: ",!
	write " [{",!
	write "		type: 'column',",!
	write "		name: '"_..Nome_"',",!
	write "		data: [",!
	For i = 1:1:..Series.Count() {
		if (i = ..Series.Count()) {
			set fim = "]"
		}
		else {
			set fim = "],"
		}
		write "['"_..Series.GetAt(i).Categoria_"',"_..Series.GetAt(i).Valor_fim
	
	}
	write "		]",!
	write "	}]",!
	write "});",!
	write "});",!
	write "</"_"script>",!
]]></Implementation>
</Method>

<Method name="PrintDrill">
<Implementation><![CDATA[
 write "<script type=""text/javascript"">",! 
 write "	",! 
 write "		var chart;",! 
 write "		$(document).ready(function() {",! 
 write "			var colors = Highcharts.getOptions().colors,",! 
 write "				categories = "_..GetCategorias(),! 
 write "				name = '"_..Nome_"',",! 
 write "				data = [  ",! 
 For i = 1:1:..Series.Count() {
	 set Cor = i-1
	if (i = ..Series.Count()) {
		set fim = "}"
	}
	else {
		set fim = "},"
	}
	 write "{ ",!
	 write "						y:"_..Series.GetAt(i).Valor_",",! 
	 write "						color: colors["_Cor_"],",!
	 if (..Series.GetAt(i).SubSeries.Count() > 0) {
		set Titulo = ..Series.GetAt(i).Titulo
		set Categorias = ..GetSubCategorias(..Series.GetAt(i).SubSeries)
		set Valores = ..GetSubValores(..Series.GetAt(i).SubSeries)
		do ..PrintDrilldown(Titulo, Categorias, Valores, Cor)
	 }
 write "					"_fim
 }
 write "					];",! 
 write "			function setChart(name, categories, data, color) {",! 
 write "				chart.xAxis[0].setCategories(categories);",! 
 write "				chart.series[0].remove();",! 
 write "				chart.addSeries({",! 
 write "					name: name,",! 
 write "					data: data,",! 
 write "					color: color || 'white'",! 
 write "				});",! 
 write "			}",! 
 write "			chart = new Highcharts.Chart({",! 
 write "				chart: {",! 
 write "					renderTo: '"_..DivName_"', ",! 
 if ($length(..CorDeFundo) > 0 ) {
	write " 	backgroundColor: '"_..CorDeFundo_"', ",!
 }
 write "					type: 'column'",! 
 write "				},",! 
 write "				title: {",! 
 write "					text: '"_..Titulo_"' ",!
 write "				},",! 
 write "				credits: {",!
 write "					enabled: false",!
 write "				},",!

 write "				subtitle: {",! 
 write "					text: '"_..SubTitulo_"'",! 
 write "				},",! 
 write "				xAxis: {",! 
 write "					categories: categories ",! ;'"_..TituloX_"'",! 
 write "				},",! 
 write "				yAxis: {",! 
 write "					title: {",! 
 write "						text: '"_..TituloY_"'",! 
 write "					}",! 
 write "				},",! 
 write "				plotOptions: {",! 
 write "					column: {",! 
 write "						cursor: 'pointer',",! 
 write "						point: {",! 
 write "							events: {",! 
 write "								click: function() {",! 
 write "									var drilldown = this.drilldown;",! 
 write "									if (drilldown) { ",! 
 write "										setChart(drilldown.name, drilldown.categories, drilldown.data, drilldown.color);",! 
 write "									} else { ",! 
 write "										setChart(name, categories, data);",! 
 write "									}",! 
 write "								}",! 
 write "							}",! 
 write "						},",! 
 write "						dataLabels: {",! 
 write "							enabled: true,",! 
 write "							color: colors[0],",! 
 write "							style: {",! 
 write "								fontWeight: 'bold'",! 
 write "							},",! 
 write "							formatter: function() {",! 
 write "								return '"_..Prefixo_"' + this.y +'"_..Sufixo_"';",! 
 write "							}",! 
 write "						}					",! 
 write "					}",! 
 write "				},",! 
 write "				tooltip: {",! 
 write "					formatter: function() {",! 
 write "						var point = this.point,",! 
 write "							s = this.x +':<b>'+ this.y + ' "_..NomeSerie_"</b><br/>';",! 
 write "						if (point.drilldown) {",! 
 write "							s += 'Clique para ver a composição '+ point.category +'';",! 
 write "						} else {",! 
 write "							s += 'Clique para retornar';",! 
 write "						}",! 
 write "						return s;",! 
 write "					}",! 
 write "				},",! 
 write "				series: [{",! 
 write "					name: name,",! 
 write "					data: data,",! 
 write "					color: 'white'",! 
 write "				}],",! 
 write "				exporting: {",! 
 write "					enabled: true",! 
 write "				}",! 
 write "			});",! 
 write "		});",! 
 write "	</script>",!
]]></Implementation>
</Method>

<Method name="PrintSeries">
<FormalSpec>nome,data</FormalSpec>
<Implementation><![CDATA[
  	write "		{" ,!
    write "         name: '"_nome_"'," ,!
    write "         data: "_data ,!
]]></Implementation>
</Method>
</Class>
</Export>