<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.RegimesTerapeuticosNew">
<ClassType/>
<IncludeCode>VARConst,WWWConst,INConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	set job = %session.SessionId 
	quit:$$$ISERR(..validaSessao()) $$$OK
	;Do ..manutencao()
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set resp={}
		set resp.erro=1
		set resp.mensagem="SessÃ£o Expirou"
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>

<Method name="manutencao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM	 	= 0
	Set Y 		= "~"
	Set YBED 	= "AUTO"
	;
	If $Data(^VARWorkFlowRegTeraGr) Return $$$OK
	;
	KIll ^VARWorkFlowRegTera
	Merge ^VARWorkFlowRegTera = ^VARWorkFlowRegTera.bkp20220203
	Kill ^VARWorkFlowRegTeraAD
	Merge ^VARWorkFlowRegTeraAD = ^VARWorkFlowRegTeraAD.bkp20220203
	Kill ^VARWorkFlowRegTeraADRegra
	Merge ^VARWorkFlowRegTeraADRegra = ^VARWorkFlowRegTeraADRegra.bkp20220203
	Kill ^VARWorkFlowRegTeraCiclo
	Merge ^VARWorkFlowRegTeraCiclo = ^VARWorkFlowRegTeraCiclo.bkp20220203
	Kill ^VARWorkFlowRegTeraCicloMed
	Merge ^VARWorkFlowRegTeraCicloMed = ^VARWorkFlowRegTeraCicloMed.bkp20220203
	Kill ^VARWorkFlowRegTeraRefe
	Merge ^VARWorkFlowRegTeraRefe = ^VARWorkFlowRegTeraRefe.bkp20220203
	;
	;
	Kill ^VARWorkFlowRegTeraGr 
  Kill ^VARWorkFlowRegTeraGrR
	Kill ^VARWorkFlowRegTeraGrC
	Kill ^VARWorkFlowRegTeraGrCM
	;
	Set meuSQL = "Select CodigodoRegimeTerapeutico, DescricaodoRegimeTerapeutico, CodigodoCID, "
	Set meuSQL = meuSQL _ "TipodeRegime, GrupoTipodeRegime "
	Set meuSQL = meuSQL _ "From SQLUser.VARWorkFlowRegTera "
	Set meuSQL = meuSQL _ "Where Company = 0 And TipodeRegime <> 9 "
	Set meuSQL = meuSQL _ "Group By DescricaodoRegimeTerapeutico "
	Set meuSQL = meuSQL _ "Order By CodigodoCID Desc, DescricaodoRegimeTerapeutico"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		
		Set codRegime 	= rSet.%Get("CodigodoRegimeTerapeutico")
		Set codCID 			= rSet.%Get("CodigodoCID")
		Set descRegime 	= rSet.%Get("DescricaodoRegimeTerapeutico")

		Set xCodRegime = ""
		&Sql(
			Select CodigodoRegimeTerapeutico Into :xCodRegime From SQLUser.VARWorkFlowRegTera Where Company = 0 
			And CodigodoCID = 'C91.1' And DescricaodoRegimeTerapeutico = :descRegime And TipodeRegime <> 9
		)

		If (xCodRegime '= "") {
			Set codRegime 	= xCodRegime
			Set codCID 			= "C91.1"
		}
		
		Set objeto 		= $Get(^VARWorkFlowRegTera(YM, codCID, codRegime, 1))
		Set objetoGr 	= "" 
		Set $$$VARWorkFlowRegTeraGrDescricaodoRegimeTerapeutico(objetoGr) = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objeto)
		Set $$$VARWorkFlowRegTeraGrObservacoes(objetoGr) 									= $$$VARWorkFlowRegTeraObservacoes(objeto)
		Set $$$VARWorkFlowRegTeraGrTerapiadeSuporte(objetoGr) 						= 0
		Set $$$VARWorkFlowRegTeraGrTerapiaComplementar(objetoGr) 					= $$$VARWorkFlowRegTeraTerapiaComplementar(objeto)
		Set $$$VARWorkFlowRegTeraGrSuporteDireto(objetoGr) 								= $$$VARWorkFlowRegTeraSuporteDireto(objeto)
		Set $$$VARWorkFlowRegTeraGrAjustedeDose(objetoGr) 								= $$$VARWorkFlowRegTeraAjustedeDose(objeto)
		Set $$$VARWorkFlowRegTeraGrPrecaucoes(objetoGr) 									= $$$VARWorkFlowRegTeraPrecaucoes(objeto)
		Set $$$VARWorkFlowRegTeraGrPrincipaisToxicidades(objetoGr) 				= $$$VARWorkFlowRegTeraPrincipaisToxicidades(objeto)
		Set $$$VARWorkFlowRegTeraGrExamesdeControle(objetoGr) 						= $$$VARWorkFlowRegTeraExamesdeControle(objeto)
		Set $$$VARWorkFlowRegTeraGrSituacao(objetoGr) 										= 1
		Set $$$VARWorkFlowRegTeraGrCriadoEm(objetoGr) 										= $Horolog
		Set $$$VARWorkFlowRegTeraGrCriadoPor(objetoGr) 										= YBED
		Set nCodRegime = $Order(^VARWorkFlowRegTeraGr(YM, ""),-1) + 1
		Set strStatus = $$$Save("VARWorkFlowRegTeraGr", nCodRegime, objetoGr, $$$YES)
		;		
	 	Merge ^VARWorkFlowRegTeraGrR(YM, nCodRegime) 	= ^VARWorkFlowRegTeraRefe(YM, codCID, codRegime) 
		Merge ^VARWorkFlowRegTeraGrC(YM, nCodRegime) 	= ^VARWorkFlowRegTeraCiclo(YM, codCID, codRegime)
		Merge ^VARWorkFlowRegTeraGrCM(YM, nCodRegime)	= ^VARWorkFlowRegTeraCicloMed(YM, codCID, codRegime)
		;
		&Sql(
			Update SQLUser.VARWorkFlowRegTera 
			Set GrupoRegimeTerapeutico = :nCodRegime 
			Where Company = 0 And TipodeRegime <> 9 
			And DescricaodoRegimeTerapeutico = :descRegime 
		)
		
		;Do ..acertarVinculo(nCodRegime)
	}
	;	
	Set meuSQL = "Select CodigodoRegimeTerapeutico, DescricaodoRegimeTerapeutico, CodigodoCID, "
	Set meuSQL = meuSQL _ "TipodeRegime, GrupoTipodeRegime "
	Set meuSQL = meuSQL _ "From SQLUser.VARWorkFlowRegTera "
	Set meuSQL = meuSQL _ "Where Company = 0 And TipodeRegime = 9 "
	Set meuSQL = meuSQL _ "Group By DescricaodoRegimeTerapeutico "
	Set meuSQL = meuSQL _ "Order By CodigodoCID Desc, DescricaodoRegimeTerapeutico"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		
		Set codRegime 	= rSet.%Get("CodigodoRegimeTerapeutico")
		Set codCID 			= rSet.%Get("CodigodoCID")
		Set descRegime 	= rSet.%Get("DescricaodoRegimeTerapeutico")

		Set xCodRegime = ""
		&Sql(
			Select CodigodoRegimeTerapeutico Into :xCodRegime From SQLUser.VARWorkFlowRegTera Where Company = 0 
			And CodigodoCID = 'C91.1' And DescricaodoRegimeTerapeutico = :descRegime And TipodeRegime = 9
		)

		If (xCodRegime '= "") {
			Set codRegime 	= xCodRegime
			Set codCID 			= "C91.1"
		}
		
		Set objeto 		= $Get(^VARWorkFlowRegTera(YM, codCID, codRegime, 1)) 
		Set objetoGr 	= "" 
		Set $$$VARWorkFlowRegTeraGrDescricaodoRegimeTerapeutico(objetoGr) = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objeto)
		Set $$$VARWorkFlowRegTeraGrObservacoes(objetoGr) 									= $$$VARWorkFlowRegTeraObservacoes(objeto)
		Set $$$VARWorkFlowRegTeraGrTerapiadeSuporte(objetoGr) 						= 1
		Set $$$VARWorkFlowRegTeraGrTerapiaComplementar(objetoGr) 					= $$$VARWorkFlowRegTeraTerapiaComplementar(objeto)
		Set $$$VARWorkFlowRegTeraGrSuporteDireto(objetoGr) 								= $$$VARWorkFlowRegTeraSuporteDireto(objeto)
		Set $$$VARWorkFlowRegTeraGrAjustedeDose(objetoGr) 								= $$$VARWorkFlowRegTeraAjustedeDose(objeto)
		Set $$$VARWorkFlowRegTeraGrPrecaucoes(objetoGr) 									= $$$VARWorkFlowRegTeraPrecaucoes(objeto)
		Set $$$VARWorkFlowRegTeraGrPrincipaisToxicidades(objetoGr) 				= $$$VARWorkFlowRegTeraPrincipaisToxicidades(objeto)
		Set $$$VARWorkFlowRegTeraGrExamesdeControle(objetoGr) 						= $$$VARWorkFlowRegTeraExamesdeControle(objeto)
		Set $$$VARWorkFlowRegTeraGrSituacao(objetoGr) 										= 1
		Set $$$VARWorkFlowRegTeraGrCriadoEm(objetoGr) 										= $Horolog
		Set $$$VARWorkFlowRegTeraGrCriadoPor(objetoGr) 										= YBED
		Set nCodRegime = $Order(^VARWorkFlowRegTeraGr(YM, ""),-1) + 1
		Set strStatus = $$$Save("VARWorkFlowRegTeraGr", nCodRegime, objetoGr, $$$YES)
		;
	  Merge ^VARWorkFlowRegTeraGrR(YM, nCodRegime) 	= ^VARWorkFlowRegTeraRefe(YM, codCID, codRegime) 
		Merge ^VARWorkFlowRegTeraGrC(YM, nCodRegime) 	= ^VARWorkFlowRegTeraCiclo(YM, codCID, codRegime)
		Merge ^VARWorkFlowRegTeraGrCM(YM, nCodRegime)	= ^VARWorkFlowRegTeraCicloMed(YM, codCID, codRegime)
		;
		&Sql(
			Update SQLUser.VARWorkFlowRegTera 
			Set GrupoRegimeTerapeutico = :nCodRegime 
			Where Company = 0 And TipodeRegime = 9 
			And DescricaodoRegimeTerapeutico = :descRegime 
		)

		;Do ..acertarVinculo(nCodRegime)
	}
	;
	do RebuildIndexes^COMUtils("VARWorkFlowRegTeraGr")
	do RebuildIndexes^COMUtils("VARWorkFlowRegTeraGrR")
	do RebuildIndexes^COMUtils("VARWorkFlowRegTeraGrC")
	do RebuildIndexes^COMUtils("VARWorkFlowRegTeraGrCM")
	;
	Set nCodRegime = ""
	For {
		Set nCodRegime = $Order(^VARWorkFlowRegTeraGr(0, nCodRegime))
		Quit:nCodRegime=""
		
		Do ..acertarVinculo(nCodRegime, 1)
	}
	
	;Do ##class(SourceControl.data.global.MAPPA).ExportAll()
	;
	do RebuildIndexes^COMUtils("VARWorkFlowRegTera")
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="acertarVinculo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,pBloqExport=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	Set YM	 	= 0
	Set Y 		= "~"
	Set YBED 	= "AUTO"

	Set meuSQL = "Select * From SQLUser.VARWorkFlowRegTera Where Company = 0 And GrupoRegimeTerapeutico = '"_pCodGrupo_"'"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Do ..acertarVinculoDados(pCodGrupo, rSet.%Get("CodigodoCID"), rSet.%Get("CodigodoRegimeTerapeutico"))	
	}
	
	;job:pBloqExport=0 ##class(SourceControl.data.global.MAPPA).ExportAll()]]></Implementation>
</Method>

<Method name="acertarVinculoDados">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupo,pCodCID,pCodRegime</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	Set YM	 	= 0
	Set Y 		= "~"
	Set YBED 	= "AUTO"
	
	Set objetoGr 	= $Get(^VARWorkFlowRegTeraGr(YM, pCodGrupo, 1))
	Set objeto 		= $Get(^VARWorkFlowRegTera(YM, pCodCID, pCodRegime, 1))
				
	Set $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objeto) = $$$VARWorkFlowRegTeraGrDescricaodoRegimeTerapeutico(objetoGr)
	Set $$$VARWorkFlowRegTeraObservacoes(objeto) 									= $$$VARWorkFlowRegTeraGrObservacoes(objetoGr) 
	Set $$$VARWorkFlowRegTeraSuporteDireto(objeto) 								= $$$VARWorkFlowRegTeraGrSuporteDireto(objetoGr)
	Set $$$VARWorkFlowRegTeraAjustedeDose(objeto) 								= $$$VARWorkFlowRegTeraGrAjustedeDose(objetoGr)
	Set $$$VARWorkFlowRegTeraPrecaucoes(objeto) 									= $$$VARWorkFlowRegTeraGrPrecaucoes(objetoGr)
	Set $$$VARWorkFlowRegTeraExamesdeControle(objeto) 						= $$$VARWorkFlowRegTeraGrExamesdeControle(objetoGr)
	Set $$$VARWorkFlowRegTeraPrincipaisToxicidades(objeto) 				= $$$VARWorkFlowRegTeraGrPrincipaisToxicidades(objetoGr)
	Set $$$VARWorkFlowRegTeraTerapiaComplementar(objeto) 					= $$$VARWorkFlowRegTeraGrTerapiaComplementar(objetoGr)
	Set strStatus = $$$Save("VARWorkFlowRegTera", pCodCID_$$$COMMA_pCodRegime, objeto, $$$YES)

	Kill ^VARWorkFlowRegTeraCiclo(YM, pCodCID, pCodRegime)
	Merge ^VARWorkFlowRegTeraCiclo(YM, pCodCID, pCodRegime) = ^VARWorkFlowRegTeraGrC(YM, pCodGrupo) 
	Kill ^VARWorkFlowRegTeraCicloMed(YM, pCodCID, pCodRegime)
	Merge ^VARWorkFlowRegTeraCicloMed(YM, pCodCID, pCodRegime) = ^VARWorkFlowRegTeraGrCM(YM, pCodGrupo)		
	
	Kill ^VARWorkFlowRegTeraRefe(YM, pCodCID, pCodRegime)
	Set nSeq = ""
	For {
		Set nSeq = $Order(^VARWorkFlowRegTeraGrR(YM, pCodGrupo, nSeq)) 
		Quit:nSeq=""
			
		Set objRef = $Get(^VARWorkFlowRegTeraGrR(YM, pCodGrupo, nSeq, 1))	
			
		Set tCID = $$$VARWorkFlowRegTeraGrRCID(objRef)
		Set tTipoRegime = $$$VARWorkFlowRegTeraGrRTipodeRegime(objRef)
		Set tGrupoTipoRegime = $$$VARWorkFlowRegTeraGrRGrupoTipodeRegime(objRef)
	
		
		If (tCID'=""&&((","_tCID_",")'[(","_pCodCID_","))) Continue
		If (tTipoRegime'=""&&((","_tTipoRegime_",")'[(","_$$$VARWorkFlowRegTeraTipodeRegime(objeto)_","))) Continue
		If ($$$VARWorkFlowRegTeraGrupoTipodeRegime(objeto)'="") {
			If (tGrupoTipoRegime'=""&&((","_tGrupoTipoRegime_",")'[(","_$$$VARWorkFlowRegTeraGrupoTipodeRegime(objeto)_","))) Continue
		}
		Merge ^VARWorkFlowRegTeraRefe(YM, pCodCID, pCodRegime, nSeq) = ^VARWorkFlowRegTeraGrR(YM, pCodGrupo, nSeq)		
	}
	;	
	do RebuildIndexes^COMUtils("VARWorkFlowRegTeraRefe")
	do RebuildIndexes^COMUtils("VARWorkFlowRegTeraCiclo")
	do RebuildIndexes^COMUtils("VARWorkFlowRegTeraCicloMed")
	do RebuildIndexes^COMUtils("VARWorkFlowRegTera")]]></Implementation>
</Method>

<Method name="getExcecoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	
	Set retorno = []
	
	Set meuSQL = "Select * From SQLUser.VARMedicamentoExcecoes"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		
		set obj = $get(^VARMedicamento(0,rSet.%Get("CodigoMedicamento"),1))
		set desc = $$$VARMedicamentoNome(obj)_" "_$$$VARMedicamentoSubDescricao(obj)_" ("_$$$VARMedicamentoDosagem(obj)_")"
		
		Set list = {}
		Set list.medicamenroCod 	= rSet.%Get("CodigoMedicamento")
		Set list.medicamenroDesc 	= rSet.%Get("CodigoMedicamento")_" - "_desc
		Set list.viaAdministracao = rSet.%Get("ViadeAdministracao")
		Set list.nome 						= rSet.%Get("Nome") 
		Do retorno.%Push(list)
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="delExcecoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pMedicamento 			= $Get(%request.Data("pMedicamento",1))
	Set pViaAdministracao = $Get(%request.Data("pViaAdministracao",1))

	Write $$$Kill("VARMedicamentoExcecoes", pMedicamento_$$$COMMA_pViaAdministracao)

	Return $$$OK]]></Implementation>
</Method>

<Method name="insertExcecoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set dados = $Get(%request.Data("dados",1))

	Set dados = [].%FromJSON(dados)
	
	Set obj = ""
	Set $$$VARMedicamentoExcecoesNome(obj) = dados.nome

	Write strStatus = $$$Save("VARMedicamentoExcecoes", dados.medicamenroCod_$$$COMMA_dados.viaAdministracao, obj, $$$YES)
	Return $$$OK]]></Implementation>
</Method>

<Method name="salvarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = ""
	Set erro = 0
	Try{
		Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
		Set pSituacao 			= $Get(%request.Data("pSituacao",1))
		Set pObjForm				= $Get(%request.Data("pObjForm",1))
		Set pObjDados				= $Get(%request.Data("pObjDados",1))
		Set YBED 						= $Get(%request.Data("YBED",1))
		Set objForm 	= [].%FromJSON(pObjForm)
		Set objDados = [].%FromJSON(pObjDados)
		Set objVARWorkFlowRegTeraGr = ""
		If (pCodTratamento '= "") {
			 Set objVARWorkFlowRegTeraGr = $Get(^VARWorkFlowRegTeraGr(YM, pCodTratamento, 1))
		}
		
		Set $$$VARWorkFlowRegTeraGrDescricaodoRegimeTerapeutico(objVARWorkFlowRegTeraGr) = objDados.nome
		Set $$$VARWorkFlowRegTeraGrObservacoes(objVARWorkFlowRegTeraGr) = objDados.observacoes
		If ($$$VARWorkFlowRegTeraGrTerapiadeSuporte(objVARWorkFlowRegTeraGr)'="") {
			Set $$$VARWorkFlowRegTeraGrTerapiadeSuporte(objVARWorkFlowRegTeraGr) = objDados.terapiaSuporte
		}
		Set $$$VARWorkFlowRegTeraGrTerapiaComplementar(objVARWorkFlowRegTeraGr) = objDados.terapiaComplementar
		Set $$$VARWorkFlowRegTeraGrSuporteDireto(objVARWorkFlowRegTeraGr) = objDados.suporteDireto
		Set $$$VARWorkFlowRegTeraGrAjustedeDose(objVARWorkFlowRegTeraGr) = objDados.ajusteDose
		Set $$$VARWorkFlowRegTeraGrPrecaucoes(objVARWorkFlowRegTeraGr) = objDados.precaucoes
		Set $$$VARWorkFlowRegTeraGrPrincipaisToxicidades(objVARWorkFlowRegTeraGr) = objDados.principaisToxicidades
		Set $$$VARWorkFlowRegTeraGrExamesdeControle(objVARWorkFlowRegTeraGr) = objDados.examesControle
		Set $$$VARWorkFlowRegTeraGrSituacao(objVARWorkFlowRegTeraGr) = pSituacao
		If ($$$VARWorkFlowRegTeraGrCriadoEm(objVARWorkFlowRegTeraGr)'="") {
			Set $$$VARWorkFlowRegTeraGrCriadoEm(objVARWorkFlowRegTeraGr) = $Horolog
			Set $$$VARWorkFlowRegTeraGrCriadoPor(objVARWorkFlowRegTeraGr) = YBED
		}Else{
			Set $$$VARWorkFlowRegTeraGrAlteradoEm(objVARWorkFlowRegTeraGr) = $Horolog
			Set $$$VARWorkFlowRegTeraGrAlteradoPor(objVARWorkFlowRegTeraGr) = YBED
		}
		If (pCodTratamento = "") {
			Set pCodTratamento = $Order(^VARWorkFlowRegTeraGr(0, ""),-1) + 1	
		}
		Set strStatus = $$$Save("VARWorkFlowRegTeraGr", pCodTratamento, objVARWorkFlowRegTeraGr, $$$YES)
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		Do ..acertarVinculo(pCodTratamento)
		TCommit
		Set retorno.codTratamento = pCodTratamento
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="listaTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codigo 			= $Get(%request.Data("codigo",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set take 				= $Get(%request.Data("take",1))
	Set skip 				= $Get(%request.Data("skip",1))
	If take<20 Set take = 20

	Set take = take + skip
	Set skip = skip + 1

	Set retorno 		= []
	;
	Set meuSQL = "Select * From (Select top "_take_" * From SQLUser.VARWorkFlowRegTeraGr Where Company = 0 "
	If (codigo '= "") {
		Set meuSQL = meuSQL _ "And CodigodoRegimeTerapeutico = '"_codigo_"' " 
	}Else{
		If (searchValue'="") {
			Set take = 20
			Set skip = 1
			Set meuSQL = meuSQL _ "And %Upper('('||CodigodoRegimeTerapeutico||') '||DescricaodoRegimeTerapeutico) Like%Upper('%"_searchValue_"%') " 
		}
	}	
	Set meuSQL = meuSQL _ "Order By TerapiadeSuporte "
	Set meuSQL = meuSQL _ ") Where %VID Between "_skip_" and "_take
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set list = {}
		Set list.codigo 		= rSet.%Get("CodigodoRegimeTerapeutico") 
		Set list.descricao 	= "("_rSet.%Get("CodigodoRegimeTerapeutico")_") "_rSet.%Get("DescricaodoRegimeTerapeutico") 
		Set list.terSuporte = +rSet.%Get("TerapiadeSuporte")
		Do retorno.%Push(list)
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="getTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento = $Get(%request.Data("pCodTratamento",1))

	Set objVARWorkFlowRegTeraGr = $Get(^VARWorkFlowRegTeraGr(YM, pCodTratamento, 1))

	Set abaDados = {}
	Set abaDados.nome = $$$VARWorkFlowRegTeraGrDescricaodoRegimeTerapeutico(objVARWorkFlowRegTeraGr)
	Set abaDados.observacoes = $$$VARWorkFlowRegTeraGrObservacoes(objVARWorkFlowRegTeraGr)
	Set abaDados.terapiaSuporte = +$$$VARWorkFlowRegTeraGrTerapiadeSuporte(objVARWorkFlowRegTeraGr)
	Set abaDados.terapiaComplementar = +$$$VARWorkFlowRegTeraGrTerapiaComplementar(objVARWorkFlowRegTeraGr)
	Set abaDados.suporteDireto = $$$VARWorkFlowRegTeraGrSuporteDireto(objVARWorkFlowRegTeraGr)
	Set abaDados.ajusteDose = $$$VARWorkFlowRegTeraGrAjustedeDose(objVARWorkFlowRegTeraGr)
	Set abaDados.precaucoes = $$$VARWorkFlowRegTeraGrPrecaucoes(objVARWorkFlowRegTeraGr)
	Set abaDados.principaisToxicidades = $$$VARWorkFlowRegTeraGrPrincipaisToxicidades(objVARWorkFlowRegTeraGr)
	Set abaDados.examesControle = $$$VARWorkFlowRegTeraGrExamesdeControle(objVARWorkFlowRegTeraGr)
	;
	Set rSituacao = $$$VARWorkFlowRegTeraGrSituacao(objVARWorkFlowRegTeraGr)
	
	Set listRetorno = {}
	Set listRetorno.abaDados = abaDados
	Set listRetorno.situacao = rSituacao
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="getReferencias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	
	Set retorno = []
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARWorkFlowRegTeraGrR(YM, pCodTratamento, sequencia))
		Quit:sequencia=""

		Set obj = $Get(^VARWorkFlowRegTeraGrR(YM, pCodTratamento, sequencia, 1))
		
		Set linhaTb 										= {}
		Set linhaTb.id 									= sequencia
		Set linhaTb.estudo 							= $$$VARWorkFlowRegTeraGrREstudo(obj)
		Set linhaTb.referencias 				= $$$VARWorkFlowRegTeraGrRReferenciadoTratamento(obj)
		Set linhaTb.linkReferencia 			= $$$VARWorkFlowRegTeraGrRLinkparaaReferencia(obj)
		Set linhaTb.codCID 							= $$$VARWorkFlowRegTeraGrRCID(obj)
		Set linhaTb.descCID 						= ..formatDescCID($$$VARWorkFlowRegTeraGrRCID(obj))
		Set linhaTb.codTipoRegime 			= $$$VARWorkFlowRegTeraGrRTipodeRegime(obj)
		Set linhaTb.descTipoRegime 			= ..formataDescTipoRegime($$$VARWorkFlowRegTeraGrRTipodeRegime(obj))
		Set linhaTb.codGrupoTipoRegime 	= $$$VARWorkFlowRegTeraGrRGrupoTipodeRegime(obj)
		Set linhaTb.descGrupoTipoRegime = ..formataDescGrupoTipoRegime($$$VARWorkFlowRegTeraGrRGrupoTipodeRegime(obj))

		Do retorno.%Push(linhaTb)
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="insertReferencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))

	Set dados = $Get(%request.Data("dados",1))
	Set dados = [].%FromJSON(dados)
	
	Set obj = ""
	Set $$$VARWorkFlowRegTeraGrREstudo(obj) 									= $Replace(dados.estudo,"~"," ")
	Set $$$VARWorkFlowRegTeraGrRReferenciadoTratamento(obj) 	= $Replace(dados.referencias,"~"," ")
	Set $$$VARWorkFlowRegTeraGrRLinkparaaReferencia(obj) 			= $Replace(dados.linkReferencia,"~"," ")
	If (dados.codCID = "") {
		Set $$$VARWorkFlowRegTeraGrRCID(obj) = ""
	}Else{
		Set tCID = ""
		if ($IsObject(dados.codCID) && (dados.codCID.%Size() > 0)) {
			For i=1:1:dados.codCID.%Size() {
				if (dados.codCID.%Get(i-1)="") Continue
				Set tCID = tCID _ $Select(tCID="":"",1:",")_ dados.codCID.%Get(i-1)	
			}
		}
		Set $$$VARWorkFlowRegTeraGrRCID(obj) = tCID
	}
	If (dados.codTipoRegime = "") {
		Set $$$VARWorkFlowRegTeraGrRTipodeRegime(obj) = ""
	}Else{
		Set tRegime = ""
		if ($IsObject(dados.codTipoRegime) && (dados.codTipoRegime.%Size() > 0)) {
			For i=1:1:dados.codTipoRegime.%Size() {
				if (dados.codTipoRegime.%Get(i-1)="") Continue
				Set tRegime = tRegime _ $Select(tRegime="":"",1:",")_ dados.codTipoRegime.%Get(i-1)	
			}
		}
		Set $$$VARWorkFlowRegTeraGrRTipodeRegime(obj) = tRegime
	}
	If (dados.codGrupoTipoRegime = "") {
		Set $$$VARWorkFlowRegTeraGrRGrupoTipodeRegime(obj) = ""
	}Else{
		Set tCodGrupo = ""
		if ($IsObject(dados.codGrupoTipoRegime) && (dados.codGrupoTipoRegime.%Size() > 0)) {
			For i=1:1:dados.codGrupoTipoRegime.%Size() {
				if (dados.codGrupoTipoRegime.%Get(i-1)="") Continue
				Set tCodGrupo = tCodGrupo _ $Select(tCodGrupo="":"",1:",")_ dados.codGrupoTipoRegime.%Get(i-1)	
			}
		}
		Set $$$VARWorkFlowRegTeraGrRGrupoTipodeRegime(obj) = tCodGrupo
	}
	If dados.id="" {
		Set dados.id = $Order(^VARWorkFlowRegTeraGrR(YM, pCodTratamento, ""),-1)+1
	}
	Set ^VARWorkFlowRegTeraGrR(YM, pCodTratamento,dados.id,1) = obj
	Do ..acertarVinculo(pCodTratamento)
	Write 1
	Return $$$OK]]></Implementation>
</Method>

<Method name="delReferencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set linha						= $Get(%request.Data("linha",1))
	
	Kill ^VARWorkFlowRegTeraGrR(YM, pCodTratamento,linha,1)
	
	Do ..acertarVinculo(pCodTratamento)

	Return $$$OK]]></Implementation>
</Method>

<Method name="formatDescCID">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodCID</FormalSpec>
<Implementation><![CDATA[	If (pCodCID = "") Return ""
	Set descCID = ""
	For i=1:1:$Length(pCodCID,","){
		Set descCID = descCID _ "("_$Piece(pCodCID,",",i)_") "_$$GetDiagnosticoDescPEP^VARSQL($Piece(pCodCID,",",i))_" "
	}
	Return descCID]]></Implementation>
</Method>

<Method name="formataDescTipoRegime">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodTipoRegime</FormalSpec>
<Implementation><![CDATA[	If (pCodTipoRegime = "") Return ""
	Set descTipoRegime = ""
	For i=1:1:$Length(pCodTipoRegime,","){
		Set descTipoRegime = descTipoRegime _ $Select(
																						$Piece(pCodTipoRegime,",",i)=1:"Preferencial",
																						$Piece(pCodTipoRegime,",",i)=2:"Outras Possibilidades",
																						$Piece(pCodTipoRegime,",",i)=3:"Regimes Recomendados",
																						$Piece(pCodTipoRegime,",",i)=4:"Ãtil em determinadas circunstÃ¢ncias",
																						$Piece(pCodTipoRegime,",",i)=9:"Terapia de Suporte",
																						1:""
																					)_" | "

	}
	Return descTipoRegime]]></Implementation>
</Method>

<Method name="formataDescGrupoTipoRegime">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodGrupoTipoRegime</FormalSpec>
<Implementation><![CDATA[	If (pCodGrupoTipoRegime = "") Return ""
	Set descGrupoTipoRegime = ""
	For i=1:1:$Length(pCodGrupoTipoRegime,","){
		Set descGrupoTipoRegime = descGrupoTipoRegime _ $Select(
																									  	$Piece(pCodGrupoTipoRegime,",",i)=1.1:"Mieloma MÃºltiplo - Terapia de PrevenÃ§Ã£o de Perda Ãssea",
																											$Piece(pCodGrupoTipoRegime,",",i)=1.2:"Mieloma MÃºltiplo - Terapia de Primeira Linha para Candidatos a Transplante",
																											$Piece(pCodGrupoTipoRegime,",",i)=1.3:"Mieloma MÃºltiplo - Terapia de Primeira Linha para nÃ£o Candidatos a Transplante - Paciente Fit",
																											$Piece(pCodGrupoTipoRegime,",",i)=1.4:"Mieloma MÃºltiplo - Terapia de Primeira Linha para nÃ£o Candidatos a Transplante - Paciente FrÃ¡gil",
																											$Piece(pCodGrupoTipoRegime,",",i)=1.5:"Mieloma MÃºltiplo - Terapia de Segunda Linha e Terapia Subsequente",
																											$Piece(pCodGrupoTipoRegime,",",i)=2.1:"Mieloma Indolente",
																											$Piece(pCodGrupoTipoRegime,",",i)=3.1:"Amiloidose de Cadeia Leve - Terapia de Primeira Linha",
																											1:"Amiloidose de Cadeia Leve - Terapia de Segunda Linha e Subsequente"
																										)_" "
	}
	Return descGrupoTipoRegime]]></Implementation>
</Method>

<Method name="novoCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
		
	Set ciclo = $Order(^VARWorkFlowRegTeraGrC(YM, pCodTratamento, ""),-1)+1
	Set retorno = {}
	Set retorno.ciclo = ciclo
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="recDadosCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	
	
	Set objVARWorkFlowRegTeraGrC 	= $Get(^VARWorkFlowRegTeraGrC(YM, pCodTratamento, pCiclo, 1))
	Set periodicidade 						= $$$VARWorkFlowRegTeraGrCPeriodicidade(objVARWorkFlowRegTeraGrC)
	Set continuoPeriodicidade 		= $$$VARWorkFlowRegTeraGrCContinuo(objVARWorkFlowRegTeraGrC)
	
	Set formData 												= {}
	Set formData.ciclo 		   						= pCiclo
	Set formData.periodicidade 					= periodicidade
	Set formData.continuoPeriodicidade 	= +continuoPeriodicidade
	
	Set retorno 					= {}
	Set retorno.formData 	= formData
	Do retorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="salvaDadosCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	Set campo	 					= $Get(%request.Data("campo",1))
	Set valor	 					= $Get(%request.Data("valor",1))
	
	Set objeto = $Get(^VARWorkFlowRegTeraGrC(YM,pCodTratamento,pCiclo,1))
	Set:(campo="periodicidade") $$$VARWorkFlowRegTeraGrCPeriodicidade(objeto) = valor
	Set:(campo="continuoPeriodicidade") $$$VARWorkFlowRegTeraGrCContinuo(objeto) = valor

	Write $$$Save("VARWorkFlowRegTeraGrC", pCodTratamento_$$$COMMA_pCiclo, objeto, $$$YES)

	Do ..acertarVinculo(pCodTratamento)

	Return $$$OK]]></Implementation>
</Method>

<Method name="getCiclos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set tipoRegime			= $$$VARWorkFlowRegTeraGrTerapiadeSuporte($Get(^VARWorkFlowRegTeraGr(YM, pCodTratamento, 1)))
	Set array = []
	Set ciclo=""
	For {
		Set ciclo = $Order(^VARWorkFlowRegTeraGrC(YM,pCodTratamento,ciclo)) 
		Quit:ciclo=""
		Set nseq=""
		For {
			Set nseq = $Order(^VARWorkFlowRegTeraGrCM(YM,pCodTratamento,ciclo,nseq)) 
			Quit:nseq=""
			Set linha = ..recCicloMed(pCodTratamento,ciclo,nseq,tipoRegime)
			Do array.%Push(linha)
		}
	}
	Do array.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="delCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	Set YBED 						= $Get(%request.Data("YBED",1))
	
	Set nSeq = ""
	For {
		Set nSeq = $Order(^VARWorkFlowRegTeraGrCM(YM, pCodTratamento, pCiclo, nSeq))
		Quit:nSeq=""
		
		Set strStatus = $$$Kill("VARWorkFlowRegTeraGrCM", pCodTratamento_$$$COMMA_pCiclo_$$$COMMA_nSeq)
	}

	Set strStatus = $$$Kill("VARWorkFlowRegTeraGrC", pCodTratamento_$$$COMMA_pCiclo)

	Do ..acertarVinculo(pCodTratamento)

	Write strStatus
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="copyCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	Set YBED 						= $Get(%request.Data("YBED",1))
	
	Set nCiclo = $Order(^VARWorkFlowRegTeraGrC(YM, pCodTratamento, ""),-1) + 1
	
	Set objeto = $Get(^VARWorkFlowRegTeraGrC(YM, pCodTratamento, pCiclo, 1))
	
	Set strStatus = $$$Save("VARWorkFlowRegTeraGrC", pCodTratamento_$$$COMMA_nCiclo, objeto, $$$YES)
	
	Set nSeq = ""
	For {
		Set nSeq = $Order(^VARWorkFlowRegTeraGrCM(YM, pCodTratamento, pCiclo, nSeq))
		Quit:nSeq=""
		
		Set objMed = $Get(^VARWorkFlowRegTeraGrCM(YM, pCodTratamento, pCiclo, nSeq, 1))
		
		Set strStatus = $$$Save("VARWorkFlowRegTeraGrCM", pCodTratamento_$$$COMMA_nCiclo_$$$COMMA_nSeq, objMed, $$$YES)

	}

	Do ..acertarVinculo(pCodTratamento)

	Write strStatus
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="recCiclo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	Set pTipoRegime  		= $$$VARWorkFlowRegTeraGrTerapiadeSuporte($Get(^VARWorkFlowRegTeraGr(YM, pCodTratamento, 1)))
	Set array = []
	Set nseq=""
	For {
		Set nseq = $Order(^VARWorkFlowRegTeraGrCM(YM,pCodTratamento,pCiclo,nseq)) 
		Quit:nseq=""
		Set linha = ..recCicloMed(pCodTratamento, pCiclo, nseq, pTipoRegime)
		Do array.%Push(linha)
	}
	Do array.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="recCicloMed">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodTratamento,pCiclo,pSeq,pTipoRegime</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set objRetorno = {}
	Set objRetorno.ciclo 	= pCiclo
	Set objRetorno.nseq 	= pSeq
	Set obj = $Get(^VARWorkFlowRegTeraGrCM(YM,pCodTratamento,pCiclo,pSeq,1))
	Set medicamento 						= $$$VARWorkFlowRegTeraGrCMMedicamento(obj)
	Set objRetorno.medicamento	= $$GetDescMedicamentos^VARSQL(medicamento,1)
	Set dose 										= $$$VARWorkFlowRegTeraGrCMDose(obj)
	Set doseUnid		 						= $$$VARWorkFlowRegTeraGrCMDoseunidade(obj)
	Set objINPARA								= ""
	If (doseUnid'="") Set objINPARAUnid	= $Get(^INPARA(YM,"UNIDDOSAGEM","PT",doseUnid,1))
	Set doseTxt = ""
	For i=1:1:$Length(dose,"/"){
		Set doseA = $Piece(dose,"/",i)
		If doseA="" Continue
		If doseTxt'="" Set doseTxt = doseTxt_" / "
		Set doseTxt = doseTxt_$FNumber($Replace(doseA,",","."),".")_" "_$$$INPARAText(objINPARAUnid)
	}
	Set objRetorno.dose = doseTxt
	;
	Set via = $$$VARWorkFlowRegTeraGrCMViadeAdministracao(obj) 
	Set objINPARA = ""
	If (via'="") Set objINPARA = $Get(^INPARA(YM,"VIAADMINISTRACAO","PT",via,1))
	Set objRetorno.viaAdministracao	= $$$INPARAText(objINPARA)
	;
	Set posologia = $$$VARWorkFlowRegTeraGrCMPosologia(obj)
	Set objINPARA = ""
	If (posologia'="") Set objINPARA = $Get(^INPARA(YM,"POSOLOGIA","PT",posologia,1))
	If pTipoRegime=1 {
		Set objRetorno.posologia = posologia
	}Else{
		Set objRetorno.posologia = $$$INPARAText(objINPARA)
	}
	Set diaInicial = $$$VARWorkFlowRegTeraGrCMDiaInicialdoTratamento(obj) 
	Set diaFinal = $$$VARWorkFlowRegTeraGrCMDiaFinaldoTratamento(obj)
	If (pTipoRegime=1) {
		Set dias = diaInicial
	}Else{
		If (diaInicial=diaFinal) {
			If (diaInicial="") Set dias = "ContÃ­nuo"
			Else  Set dias = "Dia "_diaInicial
		}Else{
			If (diaFinal="") Set dias = "Dia "_diaInicial_" - ContÃ­nuo"
			Else  Set dias = "Dia "_diaInicial_" a "_diaFinal
		}
	}
	Set objRetorno.diasTratamento	= dias
	;
	Set periodicidade = $$$VARWorkFlowRegTeraGrCPeriodicidade($Get(^VARWorkFlowRegTeraGrC(YM,pCodTratamento,pCiclo,1)))
	Set periodicidadeContinuo	= $$$VARWorkFlowRegTeraGrCContinuo($Get(^VARWorkFlowRegTeraGrC(YM,pCodTratamento,pCiclo,1)))
	If (periodicidadeContinuo=1){
		If (periodicidade=""){
			Set objRetorno.periodicidade 	= "ContÃ­nuo"
		}Else{
			Set objRetorno.periodicidade 	= "ContÃ­nuo (A cada "_periodicidade_$Select(periodicidade>1:" dias",1:"dia")_")"
		}
	}ElseIf (periodicidadeContinuo=2){
		Set objRetorno.periodicidade	= "AtÃ© progressÃ£o de doenÃ§a ou toxicidade (A cada "_periodicidade_$Select(periodicidade>1:" dias)",1:"dia)")
	}Else{
		Set objRetorno.periodicidade	= "A cada "_periodicidade_$Select(periodicidade>1:" dias",1:"dia")
	}
	Set objRetorno.terapiaSuporte	= $$$VARWorkFlowRegTeraGrCMTerapiadeSuporte(obj)
	Set observacoes = ""
	If (via=1){
		If ($$$VARWorkFlowRegTeraGrCMDosedeApresentacao(obj)'=""){
			Set unidAp = $$$VARWorkFlowRegTeraGrCMUnidadedaDosedeApresentac(obj)
			If (unidAp'="") Set unidAp = $$$INPARAText($Get(^INPARA(0,"UNIDDOSAGEMAPRESENTACAO","PT",unidAp,1)))
			Set observacoes = "Dose de ApresentaÃ§Ã£o: "_$$$VARWorkFlowRegTeraGrCMDosedeApresentacao(obj)_$$$INPARAText(objINPARAUnid)_" ("_unidAp_")"
		}
	}Else{
		If $$$VARWorkFlowRegTeraGrCMDiluicao(obj)'=""{
			Set meio = $$$VARWorkFlowRegTeraGrCMMeiodaDiluicao(obj)
			If meio'="" Set meio = $$$INPARAText($Get(^INPARA(0,"MEIODILUICAO","PT",meio,1)))
			Set observacoes = "DiluiÃ§Ã£o: "_$$$VARWorkFlowRegTeraGrCMDiluicao(obj)_"mL "_meio_" ("_$$$VARWorkFlowRegTeraGrCMTempodaInfusao(obj)_")"
		}
	}
	Set objRetorno.observacoes = observacoes
	Return objRetorno]]></Implementation>
</Method>

<Method name="delCicloSequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	Set pSeq  					= $Get(%request.Data("nseq",1))
	
	Set strStatus = $$$Kill("VARWorkFlowRegTeraGrCM", pCodTratamento_$$$COMMA_pCiclo_$$$COMMA_pSeq)

	Do ..acertarVinculo(pCodTratamento)

	Write strStatus
	Return $$$OK]]></Implementation>
</Method>

<Method name="novaSequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	Set sequencia 			= $Order(^VARWorkFlowRegTeraGrCM(YM,pCodTratamento,pCiclo,""),-1)+1
	Set retorno = {}
	Set retorno.sequencia = sequencia
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="recSequencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set pCiclo					= $Get(%request.Data("ciclo",1))
	Set pSequencia			= $Get(%request.Data("sequencia",1))
	Set formData = {}
	Set formData.sequencia	= pSequencia
	Set formData.ciclo		 	= pCiclo
	;
	Set obj = $Get(^VARWorkFlowRegTeraGrCM(YM,pCodTratamento,pCiclo,pSequencia,1))
	Set formData.medicamento 	= $$$VARWorkFlowRegTeraGrCMMedicamento(obj)
	Set formData.dose		 			= $$$VARWorkFlowRegTeraGrCMDose(obj)
	Set formData.doseUnid	 		= $$$VARWorkFlowRegTeraGrCMDoseunidade(obj)
	Set formData.via		 			= $$$VARWorkFlowRegTeraGrCMViadeAdministracao(obj) 
	Set formData.posologia	 	= $$$VARWorkFlowRegTeraGrCMPosologia(obj)
	Set formData.diaInicial  	= $$$VARWorkFlowRegTeraGrCMDiaInicialdoTratamento(obj) 
	If (formData.diaInicial="") {
		Set formData.continuoDiaInicial = 1
	}
	Set formData.diaFinal	 		= $$$VARWorkFlowRegTeraGrCMDiaFinaldoTratamento(obj)
	If (formData.diaFinal="") {
		Set formData.continuoDiaFinal = 1
	}
	Set formData.terapiaSuporte	= $$$VARWorkFlowRegTeraGrCMTerapiadeSuporte(obj)
	;
	Set formData.doseApresentacao			= $$$VARWorkFlowRegTeraGrCMDosedeApresentacao(obj)
	Set formData.doseApresUnid				= formData.doseUnid
	Set formData.doseApresentacaoUnid	= $$$VARWorkFlowRegTeraGrCMUnidadedaDosedeApresentac(obj)
	Set formData.diluicao							= $$$VARWorkFlowRegTeraGrCMDiluicao(obj)
	Set formData.diluicaoEm						= $$$VARWorkFlowRegTeraGrCMMeiodaDiluicao(obj)
	Set formData.tempoInfusao					= $$$VARWorkFlowRegTeraGrCMTempodaInfusao(obj)
	
	;
	Set retorno = {}
	Set retorno.formData = formData
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="salvaMedicamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set formulario	= $Get(%request.Data("formulario",1))
	Set strStatus = $$$OK
	TStart
	Try{
		Set objFormulario = [].%FromJSON(formulario)
		Set ciclo					= objFormulario.ciclo
		Set sequencia			= objFormulario.sequencia
		;
		Set medicamento 		= objFormulario.medicamento
		Set dose 						= objFormulario.dose
		Set doseUnid 				= objFormulario.doseUnid
		Set via		 					= objFormulario.via
		Set posologia 			= objFormulario.posologia
		Set diaInicial 			= objFormulario.diaInicial
		Set diaFinal 				= objFormulario.diaFinal
		Set terapiaSuporte 	= objFormulario.terapiaSuporte
		Set estudo		 			= objFormulario.estudo
		Set referencias 		= objFormulario.referencias
		Set link		 				= objFormulario.link
		Set diaInicialx 		= diaInicial
		For piece = 1:1:$Length(diaInicialx,","){
			Set diaInicial = $Piece(diaInicialx,",",piece)
			If diaInicialx'="",diaInicial="" Continue
			If diaInicialx["," Set diaFinal = diaInicial
			If piece'=1 Set sequencia = $Order(^VARWorkFlowRegTeraGrCM(YM,pCodTratamento,ciclo,""),-1)+1
			;
			Set (doseApresentacao,doseApresentacaoUnid,diluicao,diluicaoEm,tempoInfusao)=""
			If via=1{
				Set doseApresentacao 			= objFormulario.doseApresentacao
				Set doseApresentacaoUnid	= objFormulario.doseApresentacaoUnid
			}Else{
				Set diluicao				= objFormulario.diluicao
				Set diluicaoEm			= objFormulario.diluicaoEm
				Set tempoInfusao		= objFormulario.tempoInfusao
			}
			;
			Set obj = $Get(^VARWorkFlowRegTeraGrCM(YM,pCodTratamento,ciclo,sequencia,1))
			Set $$$VARWorkFlowRegTeraGrCMMedicamento(obj) = medicamento
			Set $$$VARWorkFlowRegTeraGrCMDose(obj) = dose
			Set $$$VARWorkFlowRegTeraGrCMDoseunidade(obj) = doseUnid
			Set $$$VARWorkFlowRegTeraGrCMViadeAdministracao(obj) = via
			Set $$$VARWorkFlowRegTeraGrCMPosologia(obj) = posologia
			Set $$$VARWorkFlowRegTeraGrCMDiaInicialdoTratamento(obj) = diaInicial
			Set $$$VARWorkFlowRegTeraGrCMDiaFinaldoTratamento(obj) = diaFinal
			Set $$$VARWorkFlowRegTeraGrCMTerapiadeSuporte(obj) = terapiaSuporte
			;
			Set $$$VARWorkFlowRegTeraGrCMDosedeApresentacao(obj) = doseApresentacao
			Set $$$VARWorkFlowRegTeraGrCMUnidadedaDosedeApresentac(obj) = doseApresentacaoUnid
			Set $$$VARWorkFlowRegTeraGrCMDiluicao(obj) = diluicao
			Set $$$VARWorkFlowRegTeraGrCMMeiodaDiluicao(obj) = diluicaoEm
			Set $$$VARWorkFlowRegTeraGrCMTempodaInfusao(obj) = tempoInfusao
			;
			Set strStatus = $$$Save("VARWorkFlowRegTeraGrCM",pCodTratamento_$$$COMMA_ciclo_$$$COMMA_sequencia, obj, $$$YES)
		}
	}
	Catch e {
		Set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		TRollback
	}
	Set retorno = {}
	If strStatus=$$$OK{
		Do ..acertarVinculo(pCodTratamento)
		TCommit
		Set retorno.status 		= 1
		Set retorno.tipo			= "success"
		Set retorno.mensagem	= "Dados salvos com sucesso!"
	}Else{
		Set retorno.status 		= 0
		Set retorno.tipo			= "error"
		Set retorno.mensagem 	= strStatus
		If $Test TRollback
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="getVinculos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set pCodTratamento 	= $Get(%request.Data("pCodTratamento",1))
	Set terSuporte			= $$$VARWorkFlowRegTeraGrTerapiadeSuporte($Get(^VARWorkFlowRegTeraGr(YM, pCodTratamento, 1)))
	
	Set arrayRetorno = []
	
	For codCid = "C90.0","C91.1" {
		If (codCid = "C90.0") {
			For grupoTipoRegime = 1.1, 1.2, 1.3, 1.4, 1.5, 2.1, 3.1, 3.2 {
      	Set descGrupoTipoRegime = $Select(
														      	grupoTipoRegime=1.1:"Mieloma MÃºltiplo - Terapia de PrevenÃ§Ã£o de Perda Ãssea",
																		grupoTipoRegime=1.2:"Mieloma MÃºltiplo - Terapia de Primeira Linha para Candidatos a Transplante",
																		grupoTipoRegime=1.3:"Mieloma MÃºltiplo - Terapia de Primeira Linha para nÃ£o Candidatos a Transplante - Paciente Fit",
																		grupoTipoRegime=1.4:"Mieloma MÃºltiplo - Terapia de Primeira Linha para nÃ£o Candidatos a Transplante - Paciente FrÃ¡gil",
																		grupoTipoRegime=1.5:"Mieloma MÃºltiplo - Terapia de Segunda Linha e Terapia Subsequente",
																		grupoTipoRegime=2.1:"Mieloma Indolente",
																		grupoTipoRegime=3.1:"Amiloidose de Cadeia Leve - Terapia de Primeira Linha",
																		1:"Amiloidose de Cadeia Leve - Terapia de Segunda Linha e Subsequente"
																	)
				Do ..getVinculosItem(pCodTratamento, codCid, terSuporte, grupoTipoRegime, descGrupoTipoRegime, .arrayRetorno)			
			}
		}Else{
			Do ..getVinculosItem(pCodTratamento, codCid, terSuporte, "", "", .arrayRetorno)			
			;Do arrayRetorno.%Push(listRetorno)
		}
	}
	Do arrayRetorno.%ToJSON()

	Return $$$OK]]></Implementation>
</Method>

<Method name="getVinculosItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodTratamento,pCodCid,pTerSuporte,pGrupoTipoRegime,pDescGrupoTipoRegime,pArrayRetorno</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	If (pTerSuporte = 1) {
		Set codVinculo = ..getTratamentoVinculo(pCodTratamento, pCodCid, pGrupoTipoRegime, 9)
		Set objVARWorkFlowRegTera = ""
		Set:codVinculo'="" objVARWorkFlowRegTera = $Get(^VARWorkFlowRegTera(0, pCodCid, codVinculo, 1))
		
		Set listRetorno = {}
		Set listRetorno.codVinculo  				= codVinculo
		Set listRetorno.flagAtivo  					= +$$$VARWorkFlowRegTeraSituacao(objVARWorkFlowRegTera)
		Set listRetorno.terapiaSuporteCod  	= ""
		Set listRetorno.terapiaSuporteDesc  = "" 
		Set listRetorno.codTratamento  			= pCodTratamento
		Set listRetorno.codCID 				 			= pCodCid
		Set listRetorno.descCID 			 			= "("_pCodCid_") "_$$GetDiagnosticoDescPEP^VARSQL(pCodCid)
		Set listRetorno.grupoTipoRegime 		= pGrupoTipoRegime
		Set listRetorno.descGrupoTipoRegime = pDescGrupoTipoRegime
		Set listRetorno.codTipoRegime		 		= 9
		Set listRetorno.descTipoRegime 			= "Terapia de Suporte"
		DO pArrayRetorno.%Push(listRetorno)
	}Else{
		For tipoRegime = 1,2,3,4 {
			
			Set codVinculo = ..getTratamentoVinculo(pCodTratamento, pCodCid, pGrupoTipoRegime, tipoRegime)
			Set objVARWorkFlowRegTera = ""
			Set:codVinculo'="" objVARWorkFlowRegTera = $Get(^VARWorkFlowRegTera(0, pCodCid, codVinculo, 1))
			
			Set listRetorno = {}
			Set listRetorno.codVinculo  				= codVinculo
			Set listRetorno.flagAtivo  					= +$$$VARWorkFlowRegTeraSituacao(objVARWorkFlowRegTera)
			Set listRetorno.terapiaSuporteCod  	= $$$VARWorkFlowRegTeraTerapiadeSuporte(objVARWorkFlowRegTera)
			Set listRetorno.terapiaSuporteDesc  = ..getDescRegTera(pCodCid,$$$VARWorkFlowRegTeraTerapiadeSuporte(objVARWorkFlowRegTera))
			Set listRetorno.codTratamento  			= pCodTratamento
			Set listRetorno.codCID 				 			= pCodCid
			Set listRetorno.descCID 			 			= "("_pCodCid_") "_$$GetDiagnosticoDescPEP^VARSQL(pCodCid)
			Set listRetorno.grupoTipoRegime 		= pGrupoTipoRegime
			Set listRetorno.descGrupoTipoRegime = pDescGrupoTipoRegime
			Set listRetorno.codTipoRegime		 		= tipoRegime
			Set listRetorno.descTipoRegime 			= $Select(
																							tipoRegime=1:"Preferencial",
																							tipoRegime=2:"Outras Possibilidades",
																							tipoRegime=3:"Regimes Recomendados",
																							1:"Ãtil em determinadas circunstÃ¢ncias"
																						)
			DO pArrayRetorno.%Push(listRetorno)
		}
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="getTratamentoVinculo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodTratamento,pCodCid,pGrupoTipoRegime,pTipoRegime</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set codRegTerap = ""
	Set meuSQL = "Select CodigodoRegimeTerapeutico From SQLUser.VARWorkFlowRegTera "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoCID = '"_pCodCid_"' "
	Set meuSQL = meuSQL _ "And TipodeRegime = '"_pTipoRegime_"' "
	Set:pGrupoTipoRegime'="" meuSQL = meuSQL _ "And GrupoTipodeRegime = '"_pGrupoTipoRegime_"' "
	Set meuSQL = meuSQL _ "And GrupoRegimeTerapeutico = '"_pCodTratamento_"' "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set codRegTerap = rSet.%Get("CodigodoRegimeTerapeutico")
		Quit	
	}
	Return codRegTerap]]></Implementation>
</Method>

<Method name="setVinculo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED 						= $Get(%request.Data("YBED",1))
	Set codTratamento		= $Get(%request.Data("codTratamento",1)) 
	Set codCID 					= $Get(%request.Data("codCID",1))
	Set codVinculo 			= $Get(%request.Data("codVinculo",1))
	Set dados 					= $Get(%request.Data("dados",1))
	Set codTipoRegime 	= $Get(%request.Data("codTipoRegime",1))
	Set grupoTipoRegime = $Get(%request.Data("grupoTipoRegime",1))

	Set objDados = [].%FromJSON(dados)
	If (objDados.flagAtivo'="") {
		Set flagAtivo = objDados.flagAtivo
		If (flagAtivo = 0) {
			Set objVARWorkFlowRegTera = $Get(^VARWorkFlowRegTera(YM, codCID, codVinculo, 1))
			Set $$$VARWorkFlowRegTeraSituacao(objVARWorkFlowRegTera) 		= 0
			Set $$$VARWorkFlowRegTeraAlteradoEm(objVARWorkFlowRegTera) 	= $Horolog
			Set $$$VARWorkFlowRegTeraAlteradoPor(objVARWorkFlowRegTera) = YBED
			Write $$$Save("VARWorkFlowRegTera", codCID_$$$COMMA_codVinculo, objVARWorkFlowRegTera, $$$YES)
		}Else{
			If (codVinculo = "") {
				Set objetoGr = $Get(^VARWorkFlowRegTeraGr(YM, codTratamento, 1))
				Set nCodTrat = $Order(^VARWorkFlowRegTera(YM, codCID, ""),-1) + 1
				Set objeto 	= ""
				
				Set $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objeto) = $$$VARWorkFlowRegTeraGrDescricaodoRegimeTerapeutico(objetoGr)
				Set $$$VARWorkFlowRegTeraObservacoes(objeto) 									= $$$VARWorkFlowRegTeraGrObservacoes(objetoGr) 
				Set $$$VARWorkFlowRegTeraSituacao(objeto) 										= 1
				Set $$$VARWorkFlowRegTeraTipodeRegime(objeto) 								= $Select($$$VARWorkFlowRegTeraGrTerapiadeSuporte(objetoGr)=1:"9",1:codTipoRegime)
				Set $$$VARWorkFlowRegTeraSuporteDireto(objeto) 								= $$$VARWorkFlowRegTeraGrSuporteDireto(objetoGr)
				Set $$$VARWorkFlowRegTeraAjustedeDose(objeto) 								= $$$VARWorkFlowRegTeraGrAjustedeDose(objetoGr)
				Set $$$VARWorkFlowRegTeraPrecaucoes(objeto) 									= $$$VARWorkFlowRegTeraGrPrecaucoes(objetoGr)
				Set $$$VARWorkFlowRegTeraExamesdeControle(objeto) 						= $$$VARWorkFlowRegTeraGrExamesdeControle(objetoGr)
				Set $$$VARWorkFlowRegTeraPrincipaisToxicidades(objeto) 				= $$$VARWorkFlowRegTeraGrPrincipaisToxicidades(objetoGr)
				Set $$$VARWorkFlowRegTeraGrupoTipodeRegime(objeto) 						= grupoTipoRegime
				Set $$$VARWorkFlowRegTeraTerapiaComplementar(objeto) 					= $$$VARWorkFlowRegTeraGrTerapiaComplementar(objetoGr)
				Set $$$VARWorkFlowRegTeraGrupoRegimeTerapeutico(objeto) 			= codTratamento
				Set $$$VARWorkFlowRegTeraCriadoEm(objeto) 										= $Horolog
				Set $$$VARWorkFlowRegTeraCriadoPor(objeto)										= YBED
				Set strStatus = $$$Save("VARWorkFlowRegTera", codCID_$$$COMMA_nCodTrat, objeto, $$$YES)
				;		
				;Merge ^VARWorkFlowRegTeraRefe(YM, codCID, nCodTrat) = ^VARWorkFlowRegTeraGrR(YM, codTratamento)  
				;Merge ^VARWorkFlowRegTeraCiclo(YM, codCID, nCodTrat) = ^VARWorkFlowRegTeraGrC(YM, codTratamento) 
				;Merge ^VARWorkFlowRegTeraCicloMed(YM, codCID, nCodTrat) = ^VARWorkFlowRegTeraGrCM(YM, codTratamento)		
				;	
				;do RebuildIndexes^COMUtils("VARWorkFlowRegTeraRefe")
				;do RebuildIndexes^COMUtils("VARWorkFlowRegTeraCiclo")
				;do RebuildIndexes^COMUtils("VARWorkFlowRegTeraCicloMed")
			}Else{
				Set objVARWorkFlowRegTera = $Get(^VARWorkFlowRegTera(0, codCID, codVinculo, 1))
				Set $$$VARWorkFlowRegTeraSituacao(objVARWorkFlowRegTera) 		= 1
				Set $$$VARWorkFlowRegTeraAlteradoEm(objVARWorkFlowRegTera) 	= $Horolog
				Set $$$VARWorkFlowRegTeraAlteradoPor(objVARWorkFlowRegTera) = YBED
				Write $$$Save("VARWorkFlowRegTera", codCID_$$$COMMA_codVinculo, objVARWorkFlowRegTera, $$$YES)
			}
		}
	}else{
		Set terapiaSuporteCod = objDados.terapiaSuporteCod
		Set objVARWorkFlowRegTera = $Get(^VARWorkFlowRegTera(YM, codCID, codVinculo, 1))
		Set $$$VARWorkFlowRegTeraTerapiadeSuporte(objVARWorkFlowRegTera) 	= terapiaSuporteCod
		Set $$$VARWorkFlowRegTeraAlteradoEm(objVARWorkFlowRegTera) 				= $Horolog
		Set $$$VARWorkFlowRegTeraAlteradoPor(objVARWorkFlowRegTera) 			= YBED
		Write $$$Save("VARWorkFlowRegTera", codCID_$$$COMMA_codVinculo, objVARWorkFlowRegTera, $$$YES)
	}
	Do ..acertarVinculo(codTratamento)
	Return $$$OK]]></Implementation>
</Method>

<Method name="getDescRegTera">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodCID,pCodTratamento</FormalSpec>
<Implementation><![CDATA[	If (pCodCID = "" || (pCodTratamento = "")) Return ""
	Return $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico($Get(^VARWorkFlowRegTera(0,pCodCID,pCodTratamento,1)))]]></Implementation>
</Method>
</Class>
</Export>