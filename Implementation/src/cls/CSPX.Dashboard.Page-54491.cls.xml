<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.Dashboard.Page">
<Description><![CDATA[
An SVG-based dashboard displaying a set of controls.<br>
This class generates the SVG document needed to display
a dashboard.
Users should not use this class directly.]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Parameter name="CONTENTTYPE">
<Default>image/svg-xml</Default>
</Parameter>


<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	// Avoid IE HTTP 1.1 bugs
	Set %response.HTTPVersion = "HTTP/1.0"

	// Workaround for HTTPS
	If (%request.Secure) {
		Do %response.SetHeader("Cache-Control","private")
	}

	// force output to be UTF-8
	Set %response.CharSet="UTF-8"

	// prevent session blocking
	Do %session.Unlock()

	Quit 1
]]></Implementation>
</Method>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Set $ZT = "Trap"

	Do {
		// get dashboard object
		Set tClass = $G(%request.Data("CLASS",1))
		Set tSC = $zobjclassmethod(tClass,"CreateDashboard",.tDashboard)
		If ($$$ISERR(tSC)) Quit

		Do tDashboard.RenderSVG()
	} While(0)
Done
	Quit tSC
Trap
	Set $ZT=""
	Write "<ERROR>Error rendering dashboard: ",$ZCVT($ZE,"O","HTML"),"</ERROR>",!
	Goto Done
]]></Implementation>
</Method>
</Class>
</Export>