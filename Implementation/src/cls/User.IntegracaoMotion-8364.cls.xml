<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="User.IntegracaoMotion">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ^WWWVAR
	;	
	set method = $get(%request.Data("method",1))
	xecute "do .."_method_"()"
	quit $$$OK]]></Implementation>
</Method>

<Method name="CadastraPaciente">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodigo,pProntuario,pNome,pTipoDocumento,pNumeroDocumento,pSexo,pDataNascimento,pNomeMae,pEndereco,pCep,pNumero,pBairro,pCodigoExterno,pEmail,pTelefone,*rCodigo:%String</FormalSpec>
<Implementation><![CDATA[	;Rotina para cadastro/atualização de paciente via integração Motion
	;Tratamento de Erro na Integração - Não alterar
	;
	;
	Do ^WWWVAR
	Set YM 			= 0
	Set Y 			= "~"
	Set YBED 		= "INTEGRACAO"
	Set status 	= $$$OK
	Set rCodigo = pCodigo
	If (pCodigo = "") Return status 
	Try{
		Set objPatient = ""
		If ($Data(^MEDPatient(0,pCodigo))) {
			Set objPatient = $Get(^MEDPatient(0,pCodigo,1))
		}Else{
			;Valida codigo SAFE
			If ($Data(^MEDPatients(0,20,pCodigo))) {
				Set xCodigo = $Order(^MEDPatients(0,20,pCodigo,""))		
				Set objPatient = $Get(^MEDPatient(0, xCodigo, 1))
				Set pCodigo = xCodigo
				Set rCodigo = xCodigo
			}Else{
				If (pCodigoExterno '= "" && ($Data(^MEDPatient(0,pCodigoExterno)))) {
					Set objPatient = $Get(^MEDPatient(0, pCodigoExterno, 1))
					Set pCodigo = pCodigoExterno
					Set rCodigo = pCodigoExterno
				}Else{
					If ($Data(^PacienteMotion(0,pCodigo))) {
						Set xCodigo = $Order(^PacienteMotion(0,pCodigo, ""))		
						Set objPatient = $Get(^MEDPatient(0, xCodigo, 1))
						Set pCodigo = xCodigo
						Set rCodigo = xCodigo
					}
				}
			}
		}
		;
		If (objPatient = "") {
			Set $$$MEDPatientCreatedBy(objPatient) 		= YBED
			Set $$$MEDPatientCreatedDate(objPatient) 	= $horolog
		}
		Set $$$MEDPatientName(objPatient) = pNome
		;Set $$$MEDPatientPID(objPatient) 	= pCodigo
		Set:pDataNascimento'="" $$$MEDPatientDOB(objPatient) 	= $Zdateh($Piece(pDataNascimento,"T",1),3,,,,,,,"")
		Set:pSexo'="" $$$MEDPatientGender(objPatient) = $Select($ZCVT(pSexo,"U")="MASCULINO":1,1:2)
		Set $$$MEDPatientMothersName(objPatient) = pNomeMae
		If (pTipoDocumento = "CPF") {
			Set $$$MEDPatientSSN(objPatient) = pNumeroDocumento
		}
		If (pTipoDocumento = "RG") {
			Set $$$MEDPatientFREE7(objPatient) = pNumeroDocumento
		}
		Set $$$MEDPatientStreet(objPatient) 	= pEndereco
		Set $$$MEDPatientZipCode(objPatient) 	= pCep
		Set $$$MEDPatientFREE4(objPatient) 		= pNumero
		Set $$$MEDPatientFREE6(objPatient) 		= pBairro
		Set $$$MEDPatientEmail(objPatient) 		= pEmail
		Set $$$MEDPatientTel(objPatient) 			= pTelefone
		Set status = $$$Save("MEDPatient",pCodigo,objPatient,$$$YES)
		;
		Job ##Class(User.IntegracaoMotion).AjuntaPacientesDuplicadoMotion()
	}
	Catch objError {
		Set status = objError.Code
	}
	Return status]]></Implementation>
</Method>

<Method name="CadastraConvenio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodigo,pNome,pRazaoSocial</FormalSpec>
<Implementation><![CDATA[	;Rotina para cadastro/atualização de convenio via integração Motion
	;Tratamento de Erro na Integração - Não alterar
	;
	Do ^WWWVAR
	Set YM 			= 0
	Set Y 			= "~"
	Set YBED 		= "INTEGRACAO"
	;
	Set status = $$$OK
	If (pCodigo = "") Return status
	;
	Try{
		Set objConvenio = $Get(^MEDConvenio(0, pCodigo, 1))
		Set $$$MEDConvenioNome(objConvenio) 				= pNome
		Set $$$MEDConvenioRazaoSocial(objConvenio) 	= pRazaoSocial
		Set status = $$$Save("MEDConvenio",pCodigo,objConvenio,$$$YES)
	}
	Catch objError {
		Set status = objError.Code
	}
	Return status]]></Implementation>
</Method>

<Method name="CadastraResultado">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente,pExamePerfil="",pExameComposto="",pExame,pDescricao="",pNome="",pDataColeta="",pValor="",pUnidadeMedida="",pHiLow="",pValorReferencia="",pStatusProduto="",*setorPEP</FormalSpec>
<Implementation><![CDATA[	Do ^WWWVAR
	Set YBED 	= "INTEGRACAO"
	Set YM 		= 0
	Set Y 		= "~"
	;
	Set status = $$$OK
	Set setorPEP = ""
	;
	Try{
		If (pExamePerfil'="" && ('$Data(^INART(0, pExamePerfil)))) {
			Set ^VARProdutosPendenteCadastro(0, pExamePerfil, 1) = ""
		}
		If (pExameComposto'="" && ('$Data(^INART(0, pExameComposto)))) {
			Set ^VARProdutosPendenteCadastro(0, pExameComposto, 1) = ""
		}
		If ('$Data(^INART(0, pExame))) {
			Set ^VARProdutosPendenteCadastro(0, pExame, 1) = pNome_"~"_pDescricao
		}Else{
			Set objINART = $Get(^INART(0, pExame, 1))
			Set setorPEP = $$$INARTSetorPEP(objINART)
		}
		If (setorPEP = "" && (pExamePerfil '= "")) {
			Set xObjINART = $Get(^INART(0, pExamePerfil, 1))
			Set setorPEP = $$$INARTSetorPEP(xObjINART)
		}
		If (setorPEP = "" && (pExameComposto '= "")) {
			Set xObjINART = $Get(^INART(0, pExameComposto, 1))
			Set setorPEP = $$$INARTSetorPEP(xObjINART)
		}
		;
		Set setorPEP = ""
		Set:pDataColeta'="" pDataColeta	= $Zdateh($Piece(pDataColeta,"T",1),3,,,,,,,+$Horolog)
		;
		If (pDataColeta'="") {
			if (pExamePerfil = "") Set pExamePerfil = "SEMPERFIL"
			if (pExameComposto = "") Set pExameComposto = "SEMCOMPOSTO"
			Set objVARVARPEPResultado = $Get(^VARPEPResultado(0,pCodPaciente,pExamePerfil,pExameComposto,pExame,pDataColeta,1))
			Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = $Replace(pValor_$Select(pUnidadeMedida="":"",1:" "_pUnidadeMedida),"~","-")
			Set $$$VARPEPResultadoUsuario(objVARVARPEPResultado) = YBED
			Set $$$VARPEPResultadoHiLow(objVARVARPEPResultado) = pHiLow
			Set $$$VARPEPResultadoValorReferencia(objVARVARPEPResultado) = $Replace(pValorReferencia,"~","-")
			
			// Apagar linha caso status CANCELADO
			if ($ZConvert(pStatusProduto,"U") = "CANCELADO") {
				Set status = $$$Kill("VARPEPResultado", pCodPaciente_","_pExamePerfil_","_pExameComposto_","_pExame_","_pDataColeta)
			
			// caso contrario, Salva
			} else {
				Set status = $$$Save("VARPEPResultado", pCodPaciente_","_pExamePerfil_","_pExameComposto_","_pExame_","_pDataColeta, objVARVARPEPResultado, $$$YES)
			}
		}
	}
	Catch objError {
		Set status = objError.Code
	}
	Return status]]></Implementation>
</Method>

<Method name="CadastraAdmissao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pNumAdmissao,pDataAdmissao,pHoraAdmissao,pCodPaciente,pCodConvenio="",pPlanoSaude,pFinalizarAdmissao,pSetorPEP=""</FormalSpec>
<Implementation><![CDATA[	;Rotina para cadastro/atualização de admissão via integração Motion
	;Tratamento de Erro na Integração - Não alterar
	;
	Do ^WWWVAR
	Set YBED = "INTEGRACAO"
	Set YM 		= 0
	Set Y 		= "~"
	;
	Set status = $$$OK
	;
	Try{
		;
		Set local = "8.0"
		If (pSetorPEP '= "" && (pSetorPEP '= "MEDICO")) {
			Set idSala = $Order(^VARSalasAtendimentoss(0,10,pSetorPEP,""))			
			Set:idSala'="" local = $$$VARSalasAtendimentosLocal1($Get(^VARSalasAtendimentos(0, idSala, 1)))
		}
		;
		Set objMEDAdmissao = $Get(^MEDAdmission(0,pNumAdmissao,1))
		If (objMEDAdmissao = "") {
			Set $$$MEDAdmissionPatient(objMEDAdmissao) = pCodPaciente
		}
		Set $$$MEDAdmissionDateAdmitted(objMEDAdmissao) = pDataAdmissao
		Set $$$MEDAdmissionTimeAdmitted(objMEDAdmissao) = pHoraAdmissao
		Set $$$MEDAdmissionLocation(objMEDAdmissao) 		= local
		Set $$$MEDAdmissionConvenio(objMEDAdmissao) 		= pCodConvenio
		Set $$$MEDAdmissionPlanodeSaude(objMEDAdmissao) = pPlanoSaude

		;Checagem para apenas 1 Admissão pendente de Alta por paciente
		;if ($Data(^MEDAdmissions(0,200,pCodPaciente," "))) {
		;	Set pFinalizarAdmissao = 1
		;}
		
		If (pFinalizarAdmissao = 1) {
			Set $$$MEDAdmissionDateDischarged(objMEDAdmissao) = pDataAdmissao
			Set $$$MEDAdmissionTimeDischarged(objMEDAdmissao) = pHoraAdmissao
		}/*Else{
			If ($$$MEDAdmissionDateAdmitted(objMEDAdmissao)=$$$MEDAdmissionDateDischarged(objMEDAdmissao) && ($$$MEDAdmissionTimeAdmitted(objMEDAdmissao)=$$$MEDAdmissionTimeDischarged(objMEDAdmissao))) {
				Set $$$MEDAdmissionDateDischarged(objMEDAdmissao) = ""
				Set $$$MEDAdmissionTimeDischarged(objMEDAdmissao) = ""
				Set $$$MEDAdmissionDateAdmitted(objMEDAdmissao) = pDataAdmissao
				Set $$$MEDAdmissionTimeAdmitted(objMEDAdmissao) = pHoraAdmissao
			}
		}*/
		Set status = $$$Save("MEDAdmission",pNumAdmissao,objMEDAdmissao,$$$YES)
	}
	Catch objError {
		Set status = objError.Code
	}
	Return status]]></Implementation>
</Method>

<Method name="NovoCadastraAdmissao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pNumAdmissao,pCodPaciente,pStatus="",pDataHoraAdmissao="",pProcedimento="",pCodConvenio="",pPlanoSaude="",pExecutorNome="",pExecutorDocTipo="",pExecutorDocNumero="",pExecutorDocUF="",pFlagExecutorPorNome=0,pDataHoraAgendamento=""</FormalSpec>
<Implementation><![CDATA[	;Rotina para cadastro/atualização de admissão via integração Motion
	;Tratamento de Erro na Integração - Não alterar
	;
	S ^mtemp.INTEGRACAO = pNumAdmissao_"|"_pCodPaciente_"|"_pStatus_"|"_pDataHoraAdmissao_"|"_pProcedimento_"|"_pCodConvenio_"|"_pPlanoSaude_"|"_pExecutorNome_"|"_pExecutorDocTipo_"|"_pExecutorDocNumero_"|"_pExecutorDocUF_"|"_pFlagExecutorPorNome_"|"_pDataHoraAgendamento
	
	Do ^WWWVAR
	Set YBED = "INTEGRACAO"
	Set YM 		= 0
	Set Y 		= "~"
	;
	Set status = $$$OK
	;
	Try{
		;
		Set dataAdmissao = $ZDateH($Piece(pDataHoraAdmissao,"T",1),3)
		Set horaAdmissao = $ZTimeH($Piece(pDataHoraAdmissao,"T",2))
		Set dataAgendamento = $ZDateH($Piece(pDataHoraAgendamento,"T",1),3,,,,,,,"")
		Set horaAgendamento = $ZTimeH($Piece(pDataHoraAgendamento,"T",2),,"")
		;
		If (dataAdmissao < +$Horolog) {
			Quit	
		}
		;
		Set objINART = $Get(^INART(0,pProcedimento,1))
		Set setorPEP = $$$INARTSetorPEP(objINART)
		If (setorPEP = "") {
			Quit	
		}
		Set local = "8.0"
		If (setorPEP '= "MEDICO") {
			Set idSala = $Order(^VARSalasAtendimentoss(0,10,setorPEP,""))			
			Set:idSala'="" local = $$$VARSalasAtendimentosLocal1($Get(^VARSalasAtendimentos(0, idSala, 1)))
		}
		Set numAdmissao = ""
		Set numAdmissaoPesq = pNumAdmissao_"/"

		Set meuSQL($Increment(count)) = "Select Top 1 AdmissionID From SQLUser.MEDAdmission"
		Set meuSQL($Increment(count)) = "Where Company = 0 And Location = '"_local_"'"
		Set meuSQL($Increment(count)) = "And AdmissionID Like '"_numAdmissaoPesq_"%'"
		Set meuSQL = $Order(meuSQL(""),-1)
		Set rSet = ##Class(%SQL.Statement).%ExecDirect(,.meuSQL)
		While (rSet.%Next()){	
			Set numAdmissao = rSet.%Get("AdmissionID")
		}
		If (numAdmissao '= "") {
			Set objMEDAdmissao = $Get(^MEDAdmission(0,numAdmissao,1))
		}Else{
			Set seqAdimissao = $Order(^MEDControleAdmissaoMotion(0,pNumAdmissao,""),-1) + 1
			Set ^MEDControleAdmissaoMotion(0,pNumAdmissao,seqAdimissao,1) = local_"~"_setorPEP
			Set numAdmissao = pNumAdmissao_"/"_seqAdimissao
			Set objMEDAdmissao = $Get(^MEDAdmission(0,numAdmissao,1))
		}
		If ($$$MEDAdmissionDateDischarged(objMEDAdmissao) '= "" && ($$$MEDAdmissionDateAdmitted(objMEDAdmissao) = "")) {
		
		}Else{
			If ($$$MEDAdmissionDateDischarged(objMEDAdmissao) '= "" && ($$$MEDAdmissionStatus(objMEDAdmissao) '= 1)) {
				Quit	
			}
			If ($$$MEDAdmissionDateAdmitted(objMEDAdmissao) '= "" && ($$$MEDAdmissionStatus(objMEDAdmissao) > 0)) {
				Quit	
			}
		}
		;
		Set codMedico = ""
		If (pFlagExecutorPorNome = 1) {
			Set nomeMedico = $Replace($Piece(pExecutorNome,"-",1)," ","")
			If ($Data(^MEDProviders(0,70,nomeMedico))) {
				Set codMedico = $Order(^MEDProviders(0,70,nomeMedico,""))	
			}	
		}Else{
			If (pExecutorNome '= "" && (pExecutorDocTipo '= "") && (pExecutorDocNumero '= "") && (pExecutorDocUF '= "")) {
				Set codMedico 	= $Order(^MEDProviders(0,10,pExecutorDocUF,2231,pExecutorDocNumero,""))
				If (codMedico = "") {
					Do CadastraMedico^VARMEDProvider(pExecutorNome, pExecutorDocNumero, 2231, pExecutorDocUF, .codMedico)
				}
			}
		}
		;		
		If (objMEDAdmissao = "") {
			Set $$$MEDAdmissionPatient(objMEDAdmissao) = pCodPaciente
		}
		Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = "CONSULTA"
		If (pProcedimento = "CNRP" || (pProcedimento = "RETCONSU")) {
			Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = "RETORNO"
		}
		If ($Extract(pProcedimento,1,8) = "RETORNOV") {
			Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = "VISITA"
		}
		If (pProcedimento = "CONSULTA1") {
			Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = "PRIMCONSULTA"
		}
		If (pProcedimento = "CONSULTATELEMEDICINA" || (pProcedimento = "TELEMEDICINA")) {
			Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = "TELEMEDICINA"
		}
		If (setorPEP'="" && ($Data(^VARPARA(0,"TIPOCONSULTA","PT",setorPEP)))) {
			Set $$$MEDAdmissionTipoConsulta(objMEDAdmissao) = setorPEP
		}
		Set $$$MEDAdmissionLocation(objMEDAdmissao) 		= local
		If (pStatus = "LIBERADO") {
			If ($$$MEDAdmissionDataAgendamento(objMEDAdmissao) = "") {
				Set $$$MEDAdmissionDataAgendamento(objMEDAdmissao) = dataAgendamento
				Set $$$MEDAdmissionHoraAgendamento(objMEDAdmissao) = horaAgendamento
			}
			Set $$$MEDAdmissionDateAdmitted(objMEDAdmissao) = dataAdmissao
			Set $$$MEDAdmissionTimeAdmitted(objMEDAdmissao) = horaAdmissao
			Set $$$MEDAdmissionStatus(objMEDAdmissao) = 2
		}Else{
			Set $$$MEDAdmissionDataAgendamento(objMEDAdmissao) = dataAdmissao
			Set $$$MEDAdmissionHoraAgendamento(objMEDAdmissao) = horaAdmissao
			Set $$$MEDAdmissionStatus(objMEDAdmissao) = 0
			Set $$$MEDAdmissionStatusSMS(objMEDAdmissao) = ""
			Set $$$MEDAdmissionRespostaSMS(objMEDAdmissao) = ""
			Set $$$MEDAdmissionDataEnvioSMS(objMEDAdmissao) = ""
			Set $$$MEDAdmissionHoraEnvioSMS(objMEDAdmissao) = ""
		}
		If ($$$MEDAdmissionDataAgendamento(objMEDAdmissao) = "" && ($$$MEDAdmissionDateAdmitted(objMEDAdmissao) '= "")) {
			Set $$$MEDAdmissionDataAgendamento(objMEDAdmissao) = $$$MEDAdmissionDateAdmitted(objMEDAdmissao)
			Set $$$MEDAdmissionHoraAgendamento(objMEDAdmissao) = $$$MEDAdmissionTimeAdmitted(objMEDAdmissao)
		}
		Set $$$MEDAdmissionProfissional(objMEDAdmissao) = codMedico
		Set $$$MEDAdmissionConvenio(objMEDAdmissao) 		= pCodConvenio
		Set $$$MEDAdmissionPlanodeSaude(objMEDAdmissao) = pPlanoSaude
		If (pStatus '= "MARCADO" && (pStatus '= "LIBERADO")) {
			Set $$$MEDAdmissionDateDischarged(objMEDAdmissao) = +$Horolog
			Set $$$MEDAdmissionTimeDischarged(objMEDAdmissao) = $Piece($Horolog,",",2)
			If (pStatus = "CANCELADO") {
				;Set $$$MEDAdmissionFREE2(objMEDAdmissao) = "AGENDAMENTO CANCELADO"
				Set $$$MEDAdmissionStatus(objMEDAdmissao) = 1
			}
		}
		If ($$$MEDAdmissionStatus(objMEDAdmissao) = 0 || ($$$MEDAdmissionStatus(objMEDAdmissao) = 2)) {
			Set $$$MEDAdmissionDateDischarged(objMEDAdmissao) = ""
			Set $$$MEDAdmissionTimeDischarged(objMEDAdmissao) = ""
		}
		;
		w numAdmissao
		Set status = $$$Save("MEDAdmission",numAdmissao,objMEDAdmissao,$$$YES)
	}
	Catch objError {
		Set status = objError.Code
	}
	Return status]]></Implementation>
</Method>

<Method name="CadastraControlePerfilEComposto">
<ClassMethod>1</ClassMethod>
<FormalSpec>pExamePerfil,pExameComposto,pExame,pTipoExame</FormalSpec>
<Implementation><![CDATA[	;Rotina para controle de exibição do Perfil/Composto de Exame via integração Motion
	;Tratamento de Erro na Integração - Não alterar
	;
	Do ^WWWVAR
	Set YBED 		= "INTEGRACAO"
	Set YM 			= 0
	Set Y 			= "~"
	Set status 	= $$$OK
	Set tipo		= "ALTERACAO"
	;
	Try{
		;
		If (pTipoExame = "P") {
			Set sequencia = $Order(^VARPerfilExame(0, tipo, pExamePerfil, ""),-1) + 1
			Set objVARPerfilExame = ""
			Set $$$VARPerfilExameExameComposto(objVARPerfilExame) = pExameComposto
			Set id = tipo_","_pExamePerfil_","_sequencia
			Set status = $$$Save("VARPerfilExame",id,objVARPerfilExame,$$$YES)
		}Else{
			If (pExamePerfil = "") {
				Set pExamePerfil = "SEMPERFIL"	
			}
			Set sequencia = $Order(^VARComposicaoExame(0, tipo, pExamePerfil, pExameComposto, ""),-1) + 1
			Set objVARComposicaoExame = ""
			Set $$$VARComposicaoExameExame(objVARComposicaoExame) = pExame
			Set id = tipo_","_pExamePerfil_","_pExameComposto_","_sequencia
			Set status = $$$Save("VARComposicaoExame",id,objVARComposicaoExame,$$$YES)
		}
	}
	Catch objError {
		Set status = objError.Code
	}
	Return status]]></Implementation>
</Method>

<Method name="EliminaControlePerfilEComposto">
<ClassMethod>1</ClassMethod>
<FormalSpec>pExamePerfil,pExameComposto,pTipoExame</FormalSpec>
<Implementation><![CDATA[	;Rotina para controle de exibição do Perfil/Composto de Exame via integração Motion
	;Tratamento de Erro na Integração - Não alterar
	;
	Do ^WWWVAR
	Set YBED 		= "INTEGRACAO"
	Set YM 			= 0
	Set Y 			= "~"
	Set status 	= $$$OK
	Set tipo		= "ALTERACAO"
	;
	Try{
		;
		If (pTipoExame = "P") {
			Kill ^VARPerfilExame(0,tipo,pExamePerfil)
		}Else{
			If (pExamePerfil = "") {
				Set pExamePerfil = "SEMPERFIL"	
			}
			Kill ^VARComposicaoExame(0,tipo,pExamePerfil,pExameComposto)
		}
	}
	Catch objError {
		Set status = objError.Code
	}
	Return status]]></Implementation>
</Method>

<Method name="ControlePerfilEComposto">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Do ^WWWVAR
	Set YM 					= 0
	Set Y 					= "~"
	Set YBED 				= "INTEGRACAO"
	Set status 			= $$$OK
	Set tipo				= "ALTERACAO"
	Set tipoExibir	= "EXIBICAO"
	;
	Set perfil = ""
	For {
		Set perfil = $Order(^VARPerfilExame(0,tipo,perfil))
		Quit:perfil=""
		;
		If ('$Data(^VARPerfilExame(0,tipoExibir,perfil))) {
			Merge ^VARPerfilExame(0,tipoExibir,perfil) = ^VARPerfilExame(0,tipo,perfil)
		}
	}
	;
	Set perfil = ""
	For {
		Set perfil = $Order(^VARComposicaoExame(0,tipo,perfil))
		Quit:perfil=""
		;
		If ('$Data(^VARComposicaoExame(0,tipoExibir,perfil))) {
			Merge ^VARComposicaoExame(0,tipoExibir,perfil) = ^VARComposicaoExame(0,tipo,perfil)
		}
		Set composto = ""
		For {
			Set composto = $Order(^VARComposicaoExame(0,tipo,perfil,composto))
			Quit:composto=""
			;
			If ('$Data(^VARComposicaoExame(0,tipoExibir,perfil,composto))) {
				Merge ^VARComposicaoExame(0,tipoExibir,perfil,composto) = ^VARComposicaoExame(0,tipo,perfil,composto)
			}
		}
	}
	;
	Return status]]></Implementation>
</Method>

<Method name="AjuntaPacientesDuplicadoMotion">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	;Rotina executada automaticamente a cadas 15 dias
	;Julio Matioli - 06/08/2020

	Do ^WWWVAR
	Set YBED 	= "Admin"
	Set Y 		= "~"
	Set YM 		= 0

	Set dataUltimaExecucao = +$Order(^MEDPatient.APDM(""),-1)

	If ((+$Horolog - dataUltimaExecucao) < 1) {
		Return $$$OK
	}
	
	Merge ^MEDPatient.APDM($horolog) = ^MEDPatient
	Merge ^MEDAdmission.APDM($horolog) = ^MEDAdmission
	Merge ^VARPEPResultado.APDM($horolog) = ^VARPEPResultado
	;
	Kill ^mtemp.APDM
	Set codPaciente = ""
	For {
		Set codPaciente = $Order(^MEDPatient(0, codPaciente))	
		Quit:codPaciente?1""
		
		Set objMEDPatient = $Get(^MEDPatient(0, codPaciente, 1))
		Set nome = $ZSTRIP($Zconvert($$$MEDPatientName(objMEDPatient),"U"),"<>"," ")
		Set dataNascimento = $$$MEDPatientDOB(objMEDPatient)
		
		if (nome = "") continue
		
		if (dataNascimento = "") Set dataNascimento = +$Horolog
		
		Set ^mtemp.APDM(nome, dataNascimento, codPaciente) = ""
		
	}
	Set nome = ""
	For {
		Set nome = $Order(^mtemp.APDM(nome)) 
		Quit:nome?1""
		
		Set dataNascimento = ""
		For {
			Set dataNascimento = $Order(^mtemp.APDM(nome,dataNascimento)) 
			Quit:dataNascimento?1""

			Set (codPaciente, xCodPaciente) = ""
			For {
				Set codPaciente = $Order(^mtemp.APDM(nome,dataNascimento,codPaciente),-1) 
				Quit:codPaciente?1""
			
				If (xCodPaciente = "") {
					Set xCodPaciente = codPaciente
					Continue	
				}
				if $data(^VARPEPPremium(0,codPaciente)) continue
				Set numAdmissao = ""
				For {
					Set numAdmissao = $Order(^MEDAdmissions(0,1,codPaciente,numAdmissao))
					Quit:numAdmissao?1""
					Set objMEDAdmission = $Get(^MEDAdmission(0, numAdmissao, 1))
					Set $$$MEDAdmissionPatient(objMEDAdmission) = xCodPaciente
					Set strStatus = $$$Save("MEDAdmission", numAdmissao, objMEDAdmission, 1)
					Write !,numAdmissao,"|",codPaciente,"|",xCodPaciente,"|",strStatus
				}
				If ($Data(^VARPEPResultado(0,codPaciente))) {
					Merge ^VARPEPResultado(0,xCodPaciente) = ^VARPEPResultado(0,codPaciente)
				}
				Set ^PacienteMotion(0, codPaciente, xCodPaciente, 1) = $Horolog
				Set strStatus = $$$Kill("MEDPatient", codPaciente)
			}
		}
	}	

	Do RebuildIndexes^COMUtils("MEDPatient")
	Do RebuildIndexes^COMUtils("MEDAdmission")
	Do RebuildIndexes^COMUtils("VARPEPResultado")
	Do ..EmailPacienteDuplicado()
	Do ..FecharAdmissaoPassada()
	Quit $$$OK]]></Implementation>
</Method>

<Method name="EmailPacienteDuplicado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set flagEnviaEmail = 0
	Kill temp 
	Set nome = ""
	For {
		Set nome = $Order(^MEDPatients(0, 500, nome))
		Quit:nome=""

		Set temp(nome) = 0
		Set data = ""
		For {
			Set data = $Order(^MEDPatients(0, 500, nome, data))
			Quit:data=""
			
			Set codigo = $Order(^MEDPatients(0, 500, nome, data, ""),-1)
			Set temp(nome) = temp(nome) + 1
			If (temp(nome) > 1) {
				Set flagEnviaEmail = 1
			}
			Set temp(nome, data) = codigo		

		}
	}
	
	If (flagEnviaEmail = 0) {
		Return $$$OK	
	}

  Set objWWW012 = $Get(^WWW012(YM, YM, 1))
  ;
  Set server 								= ##class(%Net.SMTP).%New()
  Set server.smtpserver 		= $$$WWW012TCPIPEMailServer(objWWW012)
  Set server.port 					= $$$WWW012PortNumberSMTP(objWWW012)
  Set auth									=	##class(%Net.Authenticator).%New()
  Set auth.UserName					=	$$$WWW012AutoEmailUsername(objWWW012)
  Set auth.Password					=	$$$WWW012AutoEmailPassword(objWWW012)
  ;
  Set server.authenticator 	= auth
  Set server.AuthFrom				=	auth.UserName
  ;
	Set msg 									= ##class(%Net.MailMessage).%New()
	Set From 									= server.authenticator.UserName
	Set msg.From 							= From
	;
	Do msg.To.Insert("patricia.benites@logplanning.com.br")
	Do msg.To.Insert("alex.nunes@logplanning.com.br")
	Do msg.To.Insert("valter.silva@logplanning.com.br")
	Do msg.To.Insert("mayara.souza@logplanning.com.br")
	Do msg.To.Insert("marisaf@chsp.org.br")
	Do msg.To.Insert("mairac@chsp.org.br")
	Do msg.To.Insert("cecilia@chsp.org.br")
	Set msg.Subject  = "Relação de pacientes duplicado no CHSP"
	Set msg.IsBinary = 0
	Set msg.IsHTML	 = 1
	;
	Set MSG = ""
	Set MSG = MSG _ "<table cellpadding='1' cellspacing='0' border='1' align='center'>"
	Set MSG = MSG _ "	<tr>"
	Set MSG = MSG _ "		<td width='150' align='center' style='font-family:arial;'>Código</td>"
	Set MSG = MSG _ "		<td width='400' align='center' style='font-family:arial;'>Nome</td>"
	Set MSG = MSG _ "		<td width='150' align='center' style='font-family:arial;'>Data de Nascimento</td>"
	Set MSG = MSG _ "	</tr>"
	;
	Set nome = ""
	For {
		Set nome = $Order(temp(nome))
		Quit:nome=""
		
		If (+$Piece(temp(nome),Y,1)<=1) Continue
		
		Set data = ""
		For {
			Set data = $Order(temp(nome, data))
			Quit:data=""
		
			Set codigo = $Piece(temp(nome, data),Y,1)	
			
			Set objMEDPatient = $Get(^MEDPatient(YM, codigo, 1))
			Set MSG = MSG _ "	<tr>"
			Set MSG = MSG _ "		<td width='120' align='center' style='font-family:arial;'>"_codigo_"</td>"
			Set MSG = MSG _ "		<td width='500' align='center' style='font-family:arial;'>"_$$$MEDPatientName(objMEDPatient)_"</td>"
			Set MSG = MSG _ "		<td width='120' align='center' style='font-family:arial;'>"_$Select(data=" ":"",1:$Zdate(data,4,,4))_"</td>"
			Set MSG = MSG _ "	</tr>"
		}
	}
	Set MSG = MSG _ "</table>"
	;
	Do msg.TextData.Write(MSG)
	Set strStatus = server.Send(msg)
	If $$$ISERR(strStatus) {
		Do $System.Status.DisplayError(strStatus)
		Set status 		= 0
		Set mensagem 	= server.Error
	}		

	Return $$$OK]]></Implementation>
</Method>

<Method name="FecharAdmissaoPassada">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	;Fecha todas as admissões do dia anterior a Hoje

	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set hoje 	= +$Horolog
	Set YBED 	= "INTEGRACAO"
	
	Set numAdmissao = ""
	For {
		Set numAdmissao = $Order(^MEDAdmissions(0,600," ",numAdmissao))
		Quit:numAdmissao=""
		
		Set objMEDAdmission = $Get(^MEDAdmission(YM, numAdmissao, 1))
		
		If ($$$MEDAdmissionDateDischarged(objMEDAdmission)'="") {
			Continue	
		}

		If ($$$MEDAdmissionDataAgendamento(objMEDAdmission) >= hoje) {
			Continue	
		}
		
		If ($$$MEDAdmissionDateAdmitted(objMEDAdmission) >= hoje) {
			Continue	
		}
		
		Set $$$MEDAdmissionDateDischarged(objMEDAdmission) = hoje
		Set $$$MEDAdmissionTimeDischarged(objMEDAdmission) = $Piece($Horolog,",",2)
		Set $$$MEDAdmissionStatus(objMEDAdmission) = 4
		Set $$$MEDAdmissionChangedBy(objMEDAdmission) 		 = YBED
		Set strStatus = $$$Save("MEDAdmission",numAdmissao,objMEDAdmission,$$$YES)
			
	}

	Return $$$OK]]></Implementation>
</Method>

<Method name="ProcedimentosPorAdmissao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pNumAdmissao:%String,pCodSetor:%String,*rProcedimentos:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Set rProcedimentos = ""
	Set numAdmissao = $Piece(pNumAdmissao,"/",1)
	If (numAdmissao = "") Return $$$OK

	Set namespaceAtual = $namespace
	Set namespace			 = "CHSP-INTEGRACAO"
	Set $namespace = namespace

	Set meuSQL =  "Select Top 1 Id From Integracoes_motion_aberturaFicha_intermediaria.Requisicao " _  
								"Where numero = '"_numAdmissao_"' Order BY Id Desc"

	Set objStatement	= ##class(%SQL.Statement).%New() 
	Set qStatus 			= objStatement.%Prepare(meuSQL)
	Set rSet 					= objStatement.%Execute()
	Do rSet.%Next()
	if (rSet.%ROWCOUNT = 0) {
		Set $namespace = namespaceAtual
		Return $$$OK
	}
	Set requisicao = rSet.%Get("ID")
	;
	;Agendamentos
	Set meuSQL =  "Select Procedimento From Integracoes_motion_aberturaFicha_intermediaria.Agendamento " _  
								"Where Requisicao = '"_requisicao_"'"

	Set objStatement	= ##class(%SQL.Statement).%New() 
	Set qStatus 			= objStatement.%Prepare(meuSQL)
	Set rSet 					= objStatement.%Execute()
	While (rSet.%Next()) {
		Set procedimento = rSet.%Get("Procedimento")
		Set objINART = $Get(^[namespaceAtual]INART(0, procedimento, 1))
		If ($$$INARTSetorPEP(objINART)'=pCodSetor) Continue
		Set rProcedimentos = rProcedimentos _ $Select(rProcedimentos="":"",1:";") _ procedimento
	}
	Set $namespace = namespaceAtual
	Return $$$OK]]></Implementation>
</Method>

<Method name="ProcedimentoAgendado">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodProcedimento=""</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	Set eAgendado = $$$NO
	If (pCodProcedimento = "") Return eAgendado
	Set objINART = $Get(^INART(0, pCodProcedimento, 1))
	If (objINART = "") Return eAgendado
	If ($$$INARTSetorPEP(objINART)'="") Set eAgendado = $$$YES
	Return eAgendado]]></Implementation>
</Method>
</Class>
</Export>