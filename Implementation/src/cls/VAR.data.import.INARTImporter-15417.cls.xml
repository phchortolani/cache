<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.INARTImporter">
<ClassType/>
<IncludeCode>VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Command: 
> do ##class(VAR.data.import.INARTImporter).importFile(arquivo, local)

Fields
		ItemNumber,FREE33,SearchName,CostumerTextorItemTextNo,ItemGroup,ItemType,UnitofMeasure,HoldReason,FREE7,FREE18
			,FREE2,FREE6,FREE17,FREE9,DangerousGoodsCategory,FREE10,FREE5,FREE11,FREE12,FREE15,MultidoseInjectable,FREE13,
			FREE25,FREE22,FREE14,FREE32,ItemPolicy,BaseUnit
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>arquivo:%String,local:%String,Diretorio:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	;Local não será obrigatório. Neste caso o produto será autorizado somente para o 997 (CD Alphaville do DASA)
	if (($get(arquivo) = "") || ($get(Diretorio) = "")) quit "Parãmetros obrigatórios (arquivo, local) não informados"
	
	;CARLOS: Se local veio nulo autoriza o item somente para o 997 (CD Alphaville do DASA)
	;if $get(local) = "" set local = 997

	set ^VARINARTImporter("Local") = $get(local)
	
	;quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_arquivo)
	quit ..import(Diretorio_arquivo)
	
	;"INART_DASA.csv")
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0
	
	set strGlo 		= "^INART"_ $replace($replace($replace($zdatetime($h,4),"/","")," ",""),":","")
	set strMerge = "merge " _ strGlo _" = ^INART"
	xecute strMerge
	
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	
	set YBED 	 			= "CargadeDados"
	set CodGrupo 			= ""
	set CodUnit	 			= ""
	set CodPolicy			= ""
	set CodStatus			= ""
	set CodContaContabil	= ""
	
	
	new strStatus, key, keyBaseUnit, obj
	
	set strStatus = $$$OK

	set key				= ..getField(pstrLinha, 1)
	;set keyBaseUnit		= ..getField(pstrLinha, 31)
	
	
	set CodGrupo 		 = $$SQLGetGrupoCod^VARSQL(..getField(pstrLinha,4))
	set CodUnit	 		 = $$SQLGetCodUnit^VARSQL(..getField(pstrLinha,5))
	set CodPolicy		 = $$SQLGetCodPolicy^VARSQL(..getField(pstrLinha,6))
	set CodStatus		 = $$SQLGetCodStatus^VARSQL(..getField(pstrLinha,7))
	set CodContaContabil = $$SQLGetCodContaContabil^VARSQL(..getField(pstrLinha,8))
	
	
	set obj 			= $get(^INART(YM,key,1))
	
	if (obj '= "") {
		set strStatus = $$$NO
		set ^CacheTempFelipe($i(^CacheTempFelipe),$zn,"Existente") = key_"^"_obj
		quit strStatus
	}
	
	; kill ^INARTPACK(YM,key)
	
	set ^CacheTempFelipe($i(^CacheTempFelipe),$zn,"NOVO") = key_"^"_obj
	
	// key				//Código (Sistema) 
	set $$$INARTSearchName(obj)					= ..getField(pstrLinha,2)	//Descrição Resumida
	set $$$INARTCustomerTextorItemTextNo(obj)	= ..getField(pstrLinha,3)   //Descrição Completa
	
		
	if (CodGrupo = "") {	 
		set $$$INARTItemGroup(obj)				= ..getField(pstrLinha,4)   //Grupo		    
	} else {		    
		set $$$INARTItemGroup(obj)				= CodGrupo				  	//Grupo		
	}
		
	if (CodUnit = "") {	 
		set $$$INARTUnitofMeasure(obj)			= ..getField(pstrLinha,5)   //Unidade de apresentação		    
	} else {		    
		set $$$INARTUnitofMeasure(obj)			= CodUnit				    //Unidade de apresentação	
	} 
	 
	if (CodPolicy = "") {	 
		set $$$INARTItemPolicy(obj)				= ..getField(pstrLinha,6) 	//Politica do Produto		    
	} else {		    
		set $$$INARTItemPolicy(obj)				= CodPolicy			   		//Politica do Produto	
	}  
	
	if (CodStatus = "") {	 
		set $$$INARTHoldReason(obj)				= ..getField(pstrLinha,7)	//Status		    
	} else {		    
		set $$$INARTHoldReason(obj)				= CodStatus					//Status	
	}  	
	
	if (CodContaContabil = "") {	 
		set $$$INARTFREE3(obj)                  = ..getField(pstrLinha,8)   //Conta Contábil		    
	} else {		    
		set $$$INARTFREE3(obj)                  = CodContaContabil		    //Conta Contábil	
	}  		
	
	
	set $$$INARTFREE2(obj)						= ..getField(pstrLinha,9)	//Classificação XYZ
	set $$$INARTFREE6(obj)						= ..getField(pstrLinha,10)	//Código ATC/Principio Ativo
	set $$$INARTFREE17(obj)						= ..getField(pstrLinha,11)	//Port. 344/98
	set $$$INARTFREE9(obj)						= ..getField(pstrLinha,12)	//Temperatura
	set $$$INARTDangerousGoodsCategory(obj)		= ..getField(pstrLinha,13)	//Classificação de Risco
	set $$$INARTFREE5(obj)						= ..getField(pstrLinha,14)	//Padronizado
	
	/*
	set $$$INARTItemType(obj)					= ..getField(pstrLinha,5)	//Origem
	set $$$INARTFREE7(obj)						= ..getField(pstrLinha,7)	//Nivel Atenção
	set $$$INARTFREE18(obj)						= ..getField(pstrLinha,8)	//Classificação VEN
	set $$$INARTFREE10(obj)						= ..getField(pstrLinha,14)	//Material Consigado
	set $$$INARTFREE11(obj)						= ..getField(pstrLinha,16)	//Manipulado
	set $$$INARTFREE12(obj)						= ..getField(pstrLinha,17)	//Fracionado
	set $$$INARTFREE15(obj)						= ..getField(pstrLinha,18)	//Multidose-Coletivo
	set $$$INARTMultidoseInjectable(obj)		= ..getField(pstrLinha,19)	//Multidose-Injetável
	set $$$INARTFREE13(obj)						= ..getField(pstrLinha,20)	//ATB Geral
	set $$$INARTFREE25(obj)						= ..getField(pstrLinha,21) 	//ATB SCIH
	set $$$INARTFREE22(obj)						= ..getField(pstrLinha,22)	//Dose Unitarizada
	set $$$INARTFREE14(obj)						= ..getField(pstrLinha,23)	//Medicamento de Risco
	set $$$INARTFREE32(obj)						= ..getField(pstrLinha,24)	//Medicamento Líquido
	set $$$INARTFREE32(obj)						= ..getField(pstrLinha,26)  //Ambientes de Armazenagem 
	set $$$INARTFREE42(obj)						= ..getField(pstrLinha,27)  //Empresas
	set $$$INARTBaseUnit(obj) 					= ..getField(pstrLinha,28)  //Aba geral > Unidade base
	set $$$INARTQtyPackUM(obj)					= ..getField(pstrLinha,29)	//Aba geral > QtyPackUM
	set $$$INARTFREE37(obj)						= ..getField(pstrLinha,34)  //Item Cumulativo
	*/
	
	
	
	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_key_", obj="_obj)
	}	
	else {
		set strStatus = $$$Save("INART", key, obj, 1)
		
		/*
		if (strStatus) {
			// INARTPACK
			if (keyBaseUnit '= "") {
				set objINARTPACK	= $get(^INARTPACK(YM,key,keyBaseUnit,1))
				set $$$INARTPACKQuantity(objINARTPACK)		= ..getField(pstrLinha,32) // INARTPACK - Quantidade
				set $$$INARTPACKUnit(objINARTPACK)			= ..getField(pstrLinha,33) // INARTPACK - Unidade de Origem
				set strStatus = $$$Save("INARTPACK", key _ $$$COMMA _ keyBaseUnit, objINARTPACK, $$$YES)
			}
		}
		*/
		
		if (strStatus) {
			set local = ^VARINARTImporter("Local")
			set strStatus = ..Autoriza(key, local)
		}
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)
	set ^CacheTempFelipe($i(^CacheTempFelipe),$zn,"erro") = $get(pintRegistros)_"^"_strStatus
	goto finallyProc
]]></Implementation>
</Method>

<Method name="Autoriza">
<FormalSpec>pProduto:%String,pLocal:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	
	new obj, key, objINART, strStatus
	
	set strStatus = $$$OK
	
	set $$$KEY1(key)	= pLocal
	set $$$KEY2(key)	= pProduto
	
	set objINART = $get(^INART(YM,$$$KEY2(key),1))
	
	if (objINART = "") {
		set strStatus = "Produto não existe. " _ $$$KEY2(key)
	}
	
	if ('$data(^WWW0121(0,0,$$$KEY1(key)))) {
		set strStatus = "Local não existe. " _ $$$KEY1(key)
	}
	
	if (strStatus) {
		set obj = $get(^INDRPItem(YM,key,1))
															
		set $$$INDRPITEMDescription(obj)	= $$$INARTSearchName(objINART)	// Descrição do Produto
		set $$$INDRPITEMItemStatus(obj)		= 1	// Ativo
		set $$$INDRPITEMSaleableItem(obj)	= 1	// Produto Vendável
		set $$$INDRPITEMUnitOfMeasure(obj)	= $$$INARTUnitofMeasure(objINART)	// Unidade de medida
		set $$$INDRPITEMDRPRunID(obj)		= 1	// Número da execução DRP - 1 - Permanent
		
		if (..#DEBUG) {
			do ..print(..lineBreak_"key="_key_", obj="_obj)
		}
		else {
			set strStatus = $$$Save("INDRPITEM", key, obj, 1)
			/*
			if (strStatus) {
				set $$$KEY1(key) = "997"
				set strStatus = $$$Save("INDRPITEM", key, obj, 1)
			}
			*/
		}
	}
finallyProcAut
	quit strStatus

exceptionProcAut
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProcAut
]]></Implementation>
</Method>
</Class>
</Export>