<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Report.Query.FINARTBDetail">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>

<Method name="CustomerInvoicesClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>CustomerInvoicesExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CustomerInvoicesExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,Customer:%String(MAXLEN=10),YUSER:%String(MAXLEN=15)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set qHandle("Item") = ""
	set qHandle("YUSER") = YUSER
	set qHandle("Customer") = Customer
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CustomerInvoicesFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>CustomerInvoicesExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set YUSER = qHandle("YUSER")
	set Customer = qHandle("Customer")
	set qHandle("Item") = $order(^CacheTempARTBInvoice(YUSER,Customer,qHandle("Item")))
	
	if qHandle("Item")'="" {
		set Row = $get(^CacheTempARTBInvoice(YUSER,Customer,qHandle("Item")))
	} else {
		set AtEnd = 1
		set Row = ""
		kill ^CacheTempARTBInvoice(YUSER,Customer)
	}

	Quit $$$OK
]]></Implementation>
</Method>
<Query name="CustomerInvoices">
<Type>%Query</Type>
<FormalSpec>Customer:%String(MAXLEN=10),YUSER:%String(MAXLEN=15)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="Group:%String(MAXLEN=6),CustomerName:%String(MAXLEN=100),CustomerNumber:%String(MAXLEN=10),InvoiceNumber:%String(MAXLEN=30),InvoiceDateFormatted:%String(MAXLEN=10),InvoiceDate:%Date,DueDateFormatted:%String(MAXLEN=10),DueDate:%Date,GLEffectiveDateFormatted:%String(MAXLEN=10),GLEffectiveDate:%Date,CurrentAmount:%String(MAXLEN=30),Month1Amount:%String(MAXLEN=30),Month2Amount:%String(MAXLEN=30),Month3Amount:%String(MAXLEN=30),Balance:%String(MAXLEN=30)"/>
</Query>


<Method name="CustomerInvoiceTotalsClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>CustomerInvoiceTotalsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CustomerInvoiceTotalsExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,Company:%String(MAXLEN=30),Location:%String(MAXLEN=20),Language:%String(MAXLEN=2),TrialBalanceDate:%Integer,InvoiceDateType:%String(MAXLEN=6),SortBy:%String(MAXLEN=30),YUSER:%String(MAXLEN=15)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill ^CacheTempARTBHeader(YUSER)
	kill ^CacheTempARTBInvoice(YUSER)
	kill ^CacheTempRow(YUSER)
	kill ^CacheTempARTBFooter(YUSER)

	set lstCompany = $$CompanyDetails^WWW0121RP(Company,Location)

	set lstPeriodDates = $$GetPeriodDates^FINRPTBUtils(TrialBalanceDate,Company)
	
	set lstTotals = $$GenerateData^FINRPARTB(Company,Language,TrialBalanceDate,InvoiceDateType,YUSER,lstPeriodDates)

	set ^CacheTempARTBHeader(YUSER,1) = $listbuild($listget(lstCompany),
												   $listget(lstCompany,5),
												   $listget(lstCompany,2)_", "_$listget(lstCompany,3),
												   $$GetSQLFilters^REPUtilities(YUSER,Language),
												   $$Date^COMRPUtil($horolog,Language),
												   $$Time^COMRPUtil($horolog,Language),
												   $$Date^COMRPUtil(TrialBalanceDate,Language),
												   $$Enum^REPUtilities("FINSYSINVOICEDATETYPE",Language,InvoiceDateType),
												   $$Enum^REPUtilities("FINAPTBSORTBY",Language,SortBy))

	set ^CacheTempARTBFooter(YUSER,1) = $listbuild($$FormatCurrency^COMRPUtil($listget(lstTotals,1),Company,Language),
												   $$FormatCurrency^COMRPUtil($listget(lstTotals,2),Company,Language),
												   $$FormatCurrency^COMRPUtil($listget(lstTotals,3),Company,Language),
												   $$FormatCurrency^COMRPUtil($listget(lstTotals,4),Company,Language),
												   $$FormatCurrency^COMRPUtil($listget(lstTotals,5),Company,Language))

	set qHandle("Item") = ""
	set qHandle("YUSER") = YUSER

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CustomerInvoiceTotalsFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>CustomerInvoiceTotalsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set YUSER = qHandle("YUSER")
	set qHandle("Item") = $order(^CacheTempRow(YUSER,qHandle("Item")))
	
	if qHandle("Item")'="" {
		set Row = $get(^CacheTempRow(YUSER,qHandle("Item")))
	} else {
		set AtEnd = 1
		set Row = ""
		kill ^CacheTempRow(YUSER)
	}

	Quit $$$OK
]]></Implementation>
</Method>
<Query name="CustomerInvoiceTotals">
<Type>%Query</Type>
<FormalSpec>Company:%String(MAXLEN=30),Location:%String(MAXLEN=20),Language:%String(MAXLEN=2),TrialBalanceDate:%Integer,InvoiceDateType:%String(MAXLEN=6),SortBy:%String(MAXLEN=30),YUSER:%String(MAXLEN=15)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="CustomerNumber:(MAXLEN=10),CurrentAmount:%String(MAXLEN=30),Month1Amount:%String(MAXLEN=30),Month2Amount:%String(MAXLEN=30),Month3Amount:%String(MAXLEN=30),TotalAmount:%String(MAXLEN=30)"/>
</Query>


<Method name="TrialBalanceHeaderClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>TrialBalanceHeaderExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TrialBalanceHeaderExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,YUSER:%String(MAXLEN=15)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ^CacheTempRow(YUSER,1) = $get(^CacheTempARTBHeader(YUSER,1))

	kill ^CacheTempARTBHeader(YUSER,1)

	set qHandle("Item") = ""
	set qHandle("YUSER") = YUSER

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TrialBalanceHeaderFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>TrialBalanceHeaderExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set YUSER = qHandle("YUSER")
	set qHandle("Item") = $order(^CacheTempRow(YUSER,qHandle("Item")))
	
	if qHandle("Item")'="" {
		set Row = $get(^CacheTempRow(YUSER,qHandle("Item")))
	} else {
		set AtEnd = 1
		set Row = ""
		kill ^CacheTempRow(YUSER)
	}

	Quit $$$OK
]]></Implementation>
</Method>
<Query name="TrialBalanceHeader">
<Type>%Query</Type>
<FormalSpec>YUSER:%String(MAXLEN=15)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="CompanyName:%String(MAXLEN=30),CompanyLocation:%String(MAXLEN=30),CompanyAddress:%String(MAXLEN=110),SQLFilters:%String(MAXLEN=100),DatePrinted:%String(MAXLEN=10),TimePrinted:%String(MAXLEN=8),TrialBalanceDate:%String(MAXLEN=10),ReportBy:%String(MAXLEN=30),SortBy:%String(MAXLEN=30)"/>
</Query>


<Method name="TrialBalanceFooterClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>TrialBalanceFooterExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TrialBalanceFooterExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,YUSER:%String(MAXLEN=15)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ^CacheTempRow(YUSER,1) = $get(^CacheTempARTBFooter(YUSER,1))

	kill ^CacheTempARTBFooter(YUSER,1)

	set qHandle("Item") = ""
	set qHandle("YUSER") = YUSER

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TrialBalanceFooterFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>TrialBalanceFooterExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set YUSER = qHandle("YUSER")
	set qHandle("Item") = $order(^CacheTempRow(YUSER,qHandle("Item")))
	
	if qHandle("Item")'="" {
		set Row = $get(^CacheTempRow(YUSER,qHandle("Item")))
	} else {
		set AtEnd = 1
		set Row = ""
		kill ^CacheTempRow(YUSER)
	}

	Quit $$$OK
]]></Implementation>
</Method>
<Query name="TrialBalanceFooter">
<Type>%Query</Type>
<FormalSpec>YUSER:%String(MAXLEN=15)</FormalSpec>
<SqlProc>1</SqlProc>

<Parameter name="ROWSPEC" value="CurrentAmount:%String(MAXLEN=30),Month1Amount:%String(MAXLEN=30),Month2Amount:%String(MAXLEN=30),Month3Amount:%String(MAXLEN=30),TotalAmount:%String(MAXLEN=30)"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Report.Query.FINARTBDetailD</DataLocation>
<DefaultData>FINARTBDetailDefaultData</DefaultData>
<IdLocation>^Report.Query.FINARTBDetailD</IdLocation>
<IndexLocation>^Report.Query.FINARTBDetailI</IndexLocation>
<StreamLocation>^Report.Query.FINARTBDetailS</StreamLocation>
<Data name="FINARTBDetailDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>