<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alSAL.dMovement">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>alDRP.dMovement</Super>

<Parameter name="MOVEMENTTYPE">
<Type>CLASSNAME</Type>
<Default>alDRP.dMovementType.Sale</Default>
</Parameter>


<Property name="Item">
<Type>alINV.dItem</Type>
<Required>1</Required>
</Property>


<Property name="Bundle">
<Type>alSOH.dBundle</Type>
<Required>1</Required>
</Property>


<Property name="FromLocn">
<Type>alLOC.dLocation</Type>
<Required>1</Required>
</Property>


<Property name="FromStorage">
<Type>alLOC.dStorage</Type>
<Required>1</Required>
</Property>


<Property name="Reference">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>
</Property>


<Property name="LineNumber">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>
</Property>


<Property name="QtyRequired">
<Type>alSYS.dt.dtFloat</Type>
<Required>1</Required>
</Property>


<Property name="MovementType">
<Type>alDRP.dMovementType.Sale</Type>
<Required>1</Required>
</Property>


<Method name="GetReference">
<CodeMode>expression</CodeMode>
<ReturnType>%Persistent</ReturnType>
<Implementation><![CDATA[##class(User.INAUFP).%OpenId("0||"_%this.Reference_"||"_%this.LineNumber)
]]></Implementation>
</Method>

<Method name="StatesGet">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	; 02-Sep-2008	HQN	Added InProgress state
	set objStates = ##class(%Library.ArrayOfObjects).%New()
	set objOpenState = ##class(alSYS.State.dState).%OpenId("alDRP.dMovementStatus||2")
	if objOpenState = $$$NULLOREF {
		 set objOpenState = ##class(alDRP.dMovementStatus.Outstanding).%New()
		 
	}
	set objCompletedState = ##class(alSYS.State.dState).%OpenId("alDRP.dMovementStatus||4")
	if objCompletedState = $$$NULLOREF {
		 set objCompletedState = ##class(alDRP.dMovementStatus.Completed).%New()
		 
	}
	set objInProgressState = ##class(alSYS.State.dState).%OpenId("alSAL.dMovement||3")
	if objInProgressState = $$$NULLOREF {
		set objInProgressState = ##class(alSAL.dMovement.InProgress).%New()
		set objInProgressState.SMClassName = %this.%ClassName(1)
		do objInProgressState.SetPrev(objOpenState)
		do objInProgressState.SetNext(objCompletedState)
		do objInProgressState.%Save()
	}
	set objInProgressState.StateMachine = %this
	do objOpenState.SetNext(objInProgressState)
	
	set objCompletedState.StateMachine = %this
	set objOpenState.StateMachine      = %this
	
	do objStates.SetAt(objOpenState, objOpenState.StateId)
	do objStates.SetAt(objCompletedState, objCompletedState.StateId)
	do objStates.SetAt(objInProgressState, objInProgressState.StateId)
	quit objStates
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>
</Export>