<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsClassFinder">
<Abstract>1</Abstract>
<ClassType/>
<IncludeCode>Ensemble</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<System>3</System>
<Query name="SubclassOfLeveled">
<Type>%Query</Type>
<FormalSpec>pSuperClass:%String,pPackagePath:%String</FormalSpec>

<Parameter name="ROWSPEC" value="ClassName:%String,IsPackage:%Boolean"/>
</Query>


<Method name="SubclassOfLeveledExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,pSuperClass:%String="&quot;,pPackagePath:%String="&quot;</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tResultSet = ##class(%ResultSet).%New("%Dictionary.ClassDefinition:SubclassOf")
	Set tSC = tResultSet.Execute(pSuperClass) Quit:$$$ISERR(tSC) tSC
	Set tIndex = $increment(^CacheTemp) Kill ^CacheTemp(tIndex)
	If pPackagePath="" {
		Set tLength=0,tHeader=""
	} Else {
		Set tLength=$length(pPackagePath)+1,tHeader=pPackagePath_"."
	}
	Set tCount=0 For {
		Quit:tResultSet.Next()=0
		Set tClassName = tResultSet.GetData(1)
		If $extract(tClassName,1,tLength)'=tHeader Continue
		Set tSubPath = $extract(tClassName,tLength+1,99999)
		Set tCount=tCount+1
		Set ^CacheTemp(tIndex,$p(tSubPath,".",1)_":"_($l(tSubPath,".")>1))=""
	}
	Set qHandle=$lb(tIndex,"")
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="SubclassOfLeveledFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary,&amp;Row:%List,&amp;AtEnd:%Integer=0</FormalSpec>
<PlaceAfter>SubclassOfLeveledExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set index=$list(qHandle,1)
	Set value=$list(qHandle,2)
	Set value=$order(^CacheTemp(index,value))
	If value="" Set Row="",AtEnd=1
	Else        Set Row=$lb($p(value,":",1),$p(value,":",2)),AtEnd=$order(^CacheTemp(index,value))=""
	Set qHandle=$lb(index,value)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="SubclassOfLeveledClose">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;qHandle:%Binary</FormalSpec>
<PlaceAfter>SubclassOfLeveledExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set index=$list(qHandle,1)
	Kill ^CacheTemp(index)
	Set qHandle=""
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>