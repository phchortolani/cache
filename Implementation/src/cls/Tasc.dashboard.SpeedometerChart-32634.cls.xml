<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Tasc.dashboard.SpeedometerChart">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Chart</Super>

<Property name="Bands">
<Type>Band</Type>
<Collection>list</Collection>
</Property>


<Property name="Max">
<Type>%Double</Type>
<InitialExpression>100</InitialExpression>
</Property>


<Property name="Min">
<Type>%Double</Type>
<InitialExpression>0</InitialExpression>
</Property>


<Method name="Configura">
<Implementation><![CDATA[
	
		set bands = ##class(Band).%New()
	
		set bands.Color = "Red"
		set bands.From = 0
		set bands.To = 30
		
		do ..Bands.Insert(bands)
				
		set bands = ##class(Band).%New()
	
		set bands.Color = "Yellow"
		set bands.From = 30
		set bands.To = 70
		
		do ..Bands.Insert(bands)

		set bands = ##class(Band).%New()
	
		set bands.Color = "Green"
		set bands.From = 70
		set bands.To = 100
		
		do ..Bands.Insert(bands)
]]></Implementation>
</Method>

<Method name="Print">
<Implementation><![CDATA[
	do ..Configura()
	write !,"<script type= ""text/javascript"">",! 
	
	;set numChart = "chart"_$piece($now(),".",2)

	;write "var "_numChart_";",!
	;write "$(document).ready(function() {",!
	;write numChart_" = new Highcharts.Chart({",!
	
	write "$(function () {",!
   	write "$('#"_..DivName_"').highcharts({",!
	write !,"         chart: { "
	write !,"             type: 'gauge', "
	write !,"             plotBackgroundColor: null, "
	write !,"             plotBackgroundImage: null, "
	write !,"             plotBorderWidth: 0, "
	write !,"             plotShadow: false "
	write !,"         }, "
	write !,"  "
	write !,"         title: { "
	write !,"             text: '" _ ..Titulo _ "', "
	
	write !," 			  "
    write !,"       style: {"
    write !,"            color: '#000000',"
    write !,"            fontWeight: 'bold',	"
    write !," 			 fontSize: '14px'					"
	write !,"         } "
	write !," }, "
	write !,"	credits: {",!
	write !,"		enabled: false",!
	write !,"	},",!
	write !,"	exporting: {",!
	write !,"		enabled: false",!
	write !,"	},",!
	write !,"         pane: { "
	write !,"             startAngle: -150, "
	write !,"             endAngle: 150, "
	write !,"             background: [{ "
	write !,"                 backgroundColor: { "
	write !,"                     linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, "
	write !,"                     stops: [ "
	write !,"                         [0, '#FFF'], "
	write !,"                         [1, '#333'] "
	write !,"                     ] "
	write !,"                 }, "
	write !,"                 borderWidth: 0, "
	write !,"                 outerRadius: '109%' "
	write !,"             }, { "
	write !,"                 backgroundColor: { "
	write !,"                     linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, "
	write !,"                     stops: [ "
	write !,"                         [0, '#333'], "
	write !,"                         [1, '#FFF'] "
	write !,"                     ] "
	write !,"                 }, "
	write !,"                 borderWidth: 0, "
	write !,"                 outerRadius: '107%' "
	write !,"             }, { "
	write !,"                 // default background "
	write !,"             }, { "
	write !,"                 backgroundColor: '#DDD', "
	write !,"                 borderWidth: 0, "
	write !,"                 outerRadius: '105%', "
	write !,"                 innerRadius: '103%' "
	write !,"             }] "
	write !,"         }, "
	write !,"  "
	write !,"         // the value axis "
	write !,"         yAxis: { "
	write !,"             min: "_..Min_", "
	write !,"             max: "_..Max_", "
	write !,"  "
	write !,"             minorTickInterval: 'auto', "
	write !,"             minorTickWidth: 1, "
	write !,"             minorTickLength: 10, "
	write !,"             minorTickPosition: 'inside', "
	write !,"             minorTickColor: '#666', "
	write !,"  "
	write !,"             tickPixelInterval: 30, "
	write !,"             tickWidth: 2, "
	write !,"             tickPosition: 'inside', "
	write !,"             tickLength: 10, "
	write !,"             tickColor: '#666', "
	write !,"             labels: { "
	write !,"                 step: 2, "
	write !,"                 rotation: 'auto' "
	write !,"             }, "
	write !,"             title: { "
	write !,"                 text: '"_..TituloY_"' "
	write !,"             }, "
	write !,"             plotBands: ["
	for idxBands = 1:1:..Bands.Count() {
		do ..PrintBand(..Bands.GetAt(idxBands))
		if idxBands < ..Bands.Count() {
			write ","
		}		
	}
	write !,"             ] "
	write !,"         }, "
	write !,"  "
	write !,"         series: ["
	for idxSerie=1:1:..Series.Count() {
		do ..PrintSerie(..Series.GetAt(idxSerie))
		if idxSerie < ..Series.Count() {
			write ","
		}		
	}
	write !,"         ] "
	write !,"  "
	write !,"     } "
	write !,"     ); "
	write !," }); "
	
	write !,"</"_"script>",!
	
	do ##super()
]]></Implementation>
</Method>

<Method name="PrintSerie">
<FormalSpec>serie:Serie</FormalSpec>
<Implementation><![CDATA[
	write !,"{ "
	write !,"             name: '"_serie.Titulo_"', "
	write !,"             data: ["_serie.Valor_"] "
	if ($L(..Sufixo) > 0 )  {
		write !,"             , tooltip: { "
		write !,"                 valueSuffix: '"_..Sufixo_"' "
		write !,"             } "
	}
	write !," }"
]]></Implementation>
</Method>

<Method name="PrintBand">
<FormalSpec>band:Band</FormalSpec>
<Implementation><![CDATA[
	write !,"{ "
	write !,"                 from: "_band.From_", "
	write !,"                 to: "_band.To_", "
	write !,"                 color: '"_band.Color_"'"
	write !," }"
]]></Implementation>
</Method>

<Method name="PrintTable">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
	#dim serie as Serie
	#dim subserie as Serie
	if (..Series.Count() > 0){
		write "<table cellspacing='1' width='100%'>",!
		write "	<tr style='background-color:#2c6c7f;color:white'>",!
		
		if (..ImprimeSerieTabela = 1) {
			write "		<th>"_..SeriesName_"</th>"
		}
		
		set qtSeries = ..Series.Count()
		if (qtSeries > 0) {
				
			if (..Series.GetAt(1).TituloColuna.Count() > 0) {
				for idxCol = 1:1:..Series.GetAt(1).TituloColuna.Count() {
					write "		<th>"_..Series.GetAt(1).TituloColuna.GetAt(idxCol)_"</th>",!
				}
			}
			if (..ImprimeSerieTabela = 1) {
				write "		<th>Valores</th>",!
			}
			write "	</tr>"
			set total = 0
			set contador = 0
			set key = ..Series.GetAt(1).Ordered
			if ($get(key) '= "") { 
				set ind = ""
				for {
					set ind = $order(^seriesDashboard(key,ind),-1)
					quit:ind=""
					
					set idxCont = ""
					for {
						set idxCont = $order(^seriesDashboard(key,ind,idxCont),-1)
						quit:(idxCont = "")
						
						set contador = contador + 1
						set i = $get(^seriesDashboard(key,ind,idxCont))
						
						do ..printLinha(i,contador,.total)
					}
				}
			} 
			else {
				for j = 1:1:..Series.Count() {
					do ..printLinha(j,j,.total)
				}
			}

				if (..Totalizar && ..ImprimeSerieTabela) {
					set span = +..Series.GetAt(1).TituloColuna.Count()+1
					write " <tr style='background-color:lightsteelblue;color:black; font-size: 12px; font-weight:bold;'>"
					write "<td style='text-align:right;' colspan='"_span_"'><b>Total</b></td>"					
					
					write "<td style='text-align:center;'>"
					if (..MostrarEmMoeda) {
						set SPRACHE = "EN"
						write "R$"_$$^WWWTR(0,12,total,2)
					 	;w subserie.Valor
					}
					else {
						write total
					}
					write "</td> </tr>",!
				}
				write "</tr>"
			
		}
		write "</table>"
}
]]></Implementation>
</Method>

<Method name="printLinha">
<FormalSpec>j,contador,&amp;total</FormalSpec>
<Implementation><![CDATA[
	set strNewTab = " "
	set onclick = " "
	
	if (..OpenInNewTab) {
		set strNewTab = " target=_blank "
	}
	#dim serie as Tasc.dashboard.Serie
	set serie = ..Series.GetAt(j)
	if ('$isObject(serie)) {
		quit
	}
	
	if ($LENGTH(serie.Link) > 0) {
		set link ="<a class='link2' href='"_serie.Link_"' "_strNewTab_">"
		set linkand = "</a> "
		if ('..OpenInNewTab) {
			set onClick = " onclick=""location.href='"_serie.Link_"'"" "
		}
	}
	else {
		set link =""
		set linkand = ""
		set onclick = " "
	}
	
	if (contador#2) = 1 {
		write "	<tr style='background-color:#E0E0E0;color:"_serie.Cor_"' "_onclick_" >",!
	}
	else {
		write "	<tr style='background-color:#F0F0F0;color:"_serie.Cor_"' "_onclick_" >",!
	}
	if (..ImprimeSerieTabela = 1) {
		write "	<td style='text-align:left'><strong>"_link_serie.Titulo_linkand_"</strong></td>",!
	}
	
	if (serie.ColunaTabela.Count() > 0) {
		for idxColS = 1:1:serie.ColunaTabela.Count() {
			write " <td style='text-align:center;font-weight:normal'>"
			
			write link_serie.ColunaTabela.GetAt(idxColS)_linkand
			write "</td>"
		}
	}
	
	set total = total + serie.Valor 
	
	if (..ImprimeSerieTabela = 1) {
		write " <td style='text-align:center;font-weight:normal'>"
		write link
		if (..MostrarEmMoeda) {
			set SPRACHE = "EN"
			write $$^WWWTR(0,12,serie.Valor,2)
		 	;w subserie.Valor
		}
		else {
			 write serie.Valor
		}
		write linkand
		write "</td>",!
	}
]]></Implementation>
</Method>
</Class>
</Export>