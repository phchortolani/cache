<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.data.GlobalImporter">
<ClassType/>
<IncludeCode>VARUtil,VARLog</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Property name="GlobalsPermited">
<Type>%String</Type>
<Collection>array</Collection>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set ..GlobalsPermited = ##class(%ArrayOfDataTypes).%New()
    do ..GlobalsPermited.SetAt("Cadastro de Produtos [INART]", "INART")
    do ..GlobalsPermited.SetAt("Cadastro de Grupos [INItemGroup]", "INItemGroup")
    do ..GlobalsPermited.SetAt("Cadastro de Locais [WWW0121]", "WWW0121")
    do ..GlobalsPermited.SetAt("Cadastro de Endereços de Armazenagem [INLP]", "INLP")
    do ..GlobalsPermited.SetAt("Cadastro de Usuários [WWW013]", "WWW013")
    do ..GlobalsPermited.SetAt("Teste Mágico [TESTE]", "TESTE")

    quit $$$OK]]></Implementation>
</Method>

<Method name="CreateImportControl">
<ClassMethod>1</ClassMethod>
<FormalSpec>strNamespace:%String</FormalSpec>
<ReturnType>ImportControl</ReturnType>
<Implementation><![CDATA[	set control = ##class(ImportControl).%New()
    set control.SourceNamespace = strNamespace
    do control.%Save()

	quit control]]></Implementation>
</Method>

<Method name="AddGlobalControl">
<ClassMethod>1</ClassMethod>
<FormalSpec>objControl:ImportControl,strGlobal:%String</FormalSpec>
<Implementation><![CDATA[	do objControl.AddGlobal(strGlobal)
	do objControl.AddGlobal(strGlobal_"s")]]></Implementation>
</Method>

<Method name="StartImport">
<FormalSpec>objControl:ImportControl</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	if (..IsImporting() ||
		(objControl.Status '=
			##class(ImportControlGlobal).%GetParameter("STATUSCREATED"))) {
		quit $$$CUSTOMERROR("Não foi possível importar os dados solicitados")
	}
	
	set $ecode = ""
	set $ztrap = ""

    set control.Status =
    	##class(ImportControlGlobal).%GetParameter("STATUSIMPORTING")
    do control.%Save()

	set ^VAR.data.GlobalImporter("ID") = objControl.%Id()
	set ^VAR.data.GlobalImporter("PID") = 0
	job StartThread^VARRemote(..%ClassName(1))::20

	quit $$$OK]]></Implementation>
</Method>

<Method name="IsImporting">
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	set intJobId = +$get(^VAR.data.GlobalImporter("PID"))
	if (intJobId '= 0) {
		if ($SYSTEM.Version.GetNumber() >= 2008.1) {
			set objProcess = ##class(%SYS.ProcessQuery).%OpenId(intJobId)
			quit:($isObject(objProcess)) 1
		}
		else {
			set objProcess = ##class(%SYSTEM.Process).%OpenId(intJobId)
			quit:($isObject(objProcess)) 1
		}		
	}

	quit 0]]></Implementation>
</Method>

<Method name="StopImport">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set ^VAR.data.GlobalImporter("PID") = 0

	quit $$$OK]]></Implementation>
</Method>

<Method name="StartThread">
<Implementation><![CDATA[	set ^VAR.data.GlobalImporter("PID") = $job

	set $ztrap = "exception"
	set status = $$$OK

	set id = ^VAR.data.GlobalImporter("ID")
	set control = ##class(ImportControl).%OpenId(id)
	set key = control.Globals.GetNext(key)
	while ($length(global) > 0) {
		set global = control.Globals.GetAt(key)
		set globalName = "^"_global.Name
		set length = 0
		set keyRec = $query(@globalName)
		while ($length(keyRec) > 0) {
			set length = $increment(length)
			set keyRec = $query(@keyRec)
		}
		set global.CurrentLength = length
		do global.%Save()

		set globalBackup = globalName_"Bkp"
		set keyRec = $query(@globalName)
		set pos = 0
		while ($length(keyRec) > 0) {
			set keyRecBkp = globalBackup_$piece(keyRec, globalName, 2)
			merge @keyRecBkp = @keyRec
			set pos = $increment(pos)
			set keyRec = $query(@keyRec)

			if ((pos # 10) = 0) {
				set global.BackupPosition = pos
				do global.%Save()
			}
		}
		kill @globalName
		set global.BackupPosition = pos
		do global.%Save()

		set globalName = "^|"""_control.SourceNamespace_"""|"_global.Name
		set length = 0
		set keyRec = $query(@globalName)
		while ($length(keyRec) > 0) {
			set length = $increment(length)
			set keyRec = $query(@keyRec)
		}
		set global.NewLength = length
		do global.%Save()

		set globalCopy = "^"_global.Name
		set keyRec = $query(@globalName)
		set pos = 0
		while ($length(keyRec) > 0) {
			set keyRecCp = globalCopy_$piece(keyRec, globalName, 2)
			merge @keyRecCp = @keyRec
			set pos = $increment(pos)
			set keyRec = $query(@keyRec)

			if ((pos # 10) = 0) {
				set global.Position = pos
				do global.%Save()
			}
		}
		set global.Position = pos
		do global.%Save()

		set key = control.Globals.GetNext(key)
	}

finally
    set control.Status =
    	##class(ImportControlGlobal).%GetParameter("STATUSCONCLUDED")
    do control.%Save()

	do ..StopImport()

	quit status

exception
 	set $ztrap = ""
 	set status = $$$CUSTOMERROR($zerror)

	goto finally]]></Implementation>
</Method>
</Class>
</Export>