<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.xml.XmlSerializable">
<Description><![CDATA[An extension to the %XML.Adaptor class.<br>
&nbsp;<br>
History:<br>
2009-Apr-02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Created by Pablo]]></Description>
<ClassType/>
<Import>%XML</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject,%XML.Adaptor</Super>

<Method name="GetXml">
<Description><![CDATA[Returns this class instance serialized in XML.<br>
&nbsp;<br>
Params:<br>
&nbsp;<br>
Returns: the XML]]></Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	set objStream = ""

	do ..XMLExportToStream(.objStream)

	set strXml = ""
	while ('objStream.AtEnd) {
		set strXml = strXml_objStream.ReadLine(32000)
	}
	
	quit strXml]]></Implementation>
</Method>

<Method name="GetInstance">
<Description><![CDATA[Returns a new class instance deserialized from a XML.<br>
&nbsp;<br>
Params:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pstrXml: the XML<br>
&nbsp;<br>
Returns: the class instance]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pstrXml:%String</FormalSpec>
<ReturnType>XmlSerializable</ReturnType>
<Implementation><![CDATA[	set objReader = ##class(Reader).%New()
	do objReader.OpenString(pstrXml)

	if ($length(..#XMLNAME) = 0) {
		do objReader.Correlate(..%ClassName(0), ..%ClassName(1))
	}
	else {
		do objReader.Correlate(..#XMLNAME, ..%ClassName(1))
	}

	if (objReader.Next(.objResult, .sc)) {
		quit objResult
	}
	else {
		quit ..%New()
	}]]></Implementation>
</Method>

<Method name="ExportToFile">
<Description><![CDATA[Export XML to a external file.<br>
&nbsp;<br>
Params:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fullPathExternal: path to which the file will be created<br>
&nbsp;<br>
Returns: status of the insertion]]></Description>
<FormalSpec>fullPathExternal:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set objWriter = ##class(Writer).%New()
	set objWriter.Indent = 1

 	set status = objWriter.OutputToFile(fullPathExternal)
	set status = objWriter.RootObject(##this)

	quit status]]></Implementation>
</Method>

<Method name="ImportFromFile">
<Description><![CDATA[Import XML from a external file.<br>
&nbsp;<br>
Params:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fullPathExternal: path from which the file will be loaded<br>
&nbsp;<br>
Returns: the class instance]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>fullPathExternal:%String</FormalSpec>
<ReturnType>XmlSerializable</ReturnType>
<Implementation><![CDATA[	set objReader = ##class(Reader).%New()
	do objReader.OpenFile(fullPathExternal)

	if ($length(..#XMLNAME) = 0) {
		do objReader.Correlate(..%ClassName(0), ..%ClassName(1))
	}
	else {
		do objReader.Correlate(..#XMLNAME, ..%ClassName(1))
	}

	if (objReader.Next(.objResult, .sc)) {
		quit objResult
	}
	else {
		quit ..%New()
	}]]></Implementation>
</Method>
</Class>
</Export>