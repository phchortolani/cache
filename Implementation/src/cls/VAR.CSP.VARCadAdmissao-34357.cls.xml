<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARCadAdmissao">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set objVARAgendamentoConf = $Get(^VARAgendamentoConf(YM, 0, 1))
	Set flagAgendRetroativa		= +$$$VARAgendamentoConfAgendRetroativo(objVARAgendamentoConf)
	;
	Set YBED 				= $Get(%request.Data("YBED",1))
	Set pDataAtual 	= +$Horolog
	;
	Set arrayRetorno 	= []
	;
	Set meuSQL = "Select Agend.Numero, Proc.Sequencia, Agend.CodigodoPaciente, Proc.DataAtendimento, "
	Set meuSQL = meuSQL _ "Proc.HoraAtendimento, Proc.GrupoAgendamento,  Proc.Procedimento, Proc.Profissional, "
	Set meuSQL = meuSQL _ "Proc.DataHoraAdmissao, Agend.Situacao, Agend.CriadoEm, Agend.AlteradoEm, "
	Set meuSQL = meuSQL _ "Proc.CodigodaSala, Proc.CodigodoLeito, Proc.Admissao "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "Where Agend.Company = 0 And Agend.Situacao In ('2', '5') "
	Set meuSQL = meuSQL _ "And Proc.Cancelado = 0 "
	If (flagAgendRetroativa = 1) {
		Set meuSQL = meuSQL _ "And (Proc.DataAtendimento Between '"_(pDataAtual-30)_"' And '"_(pDataAtual+1)_"' Or Proc.DataAtendimento Is Null)"
		Set meuSQL = meuSQL _ "Order By Agend.Numero, Proc.DataAtendimento, Proc.HoraAtendimento "
	}Else{
		Set meuSQL = meuSQL _ "And (Proc.DataAtendimento Between '"_pDataAtual_"' And '"_(pDataAtual+1)_"' Or Proc.DataAtendimento Is Null)"
		Set meuSQL = meuSQL _ "Order By Agend.Numero, Proc.DataAtendimento, Proc.HoraAtendimento "
	}
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	Set arrayProcedimento = []
	
	Set numeroAnt = ""
	While rSet.%Next() {
		If (rSet.%Get("Numero") '=  numeroAnt) {
			If (arrayProcedimento.%Size() > 0) {
				Set listRetorno.procedimentos 	= arrayProcedimento
				if (flagAdmissao = 0) {
					Do arrayRetorno.%Push(listRetorno)	
				}
			}
			Set flagAdmissao = 1
			Set dataAbertura = rSet.%Get("CriadoEm")
			If (rSet.%Get("AlteradoEm") '= "") {
				Set dataAbertura = rSet.%Get("AlteradoEm")
			}
			Set arrayProcedimento 					= []
			Set listRetorno 								= {}
			Set listRetorno.numeroAgend 		= rSet.%Get("Numero") 
			Set listRetorno.codPaciente 		= rSet.%Get("CodigodoPaciente") 
			Set listRetorno.nomePaciente 		= $$SQLGetPatientName^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.dataNascimento 	= $$SQLGetPatientDataNascimento^VARSQL(rSet.%Get("CodigodoPaciente"), 1) 
			Set listRetorno.sexo 						= $$SQLGetSexoPaciente^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.flagEdicao 			= 1
			Set listRetorno.data						= $ZDateTime(dataAbertura,4,2)
			Set numeroAnt 									= rSet.%Get("Numero")
		}
		If (	rSet.%Get("DataHoraAdmissao") '= "" || 
					(rSet.%Get("DataAtendimento") < +$Horolog) ||
					(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeEdicaodeAgen($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
		{
			Set listRetorno.flagEdicao = 0
		}
		Set numAdmissao 													= rSet.%Get("Admissao")
		Set xNumAdmissao													= $Replace(numAdmissao,"/"," ")
		Set listProcedimento = {}
		Set listProcedimento.flagRemarcacao				= 0
		If (xNumAdmissao'="" && ($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao)))) {
			Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
			Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
			If ($$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) = "") {
				Set listProcedimento.flagRemarcacao			= 1
			}
		}
		Set listProcedimento.sequencia						= rSet.%Get("Sequencia")
		Set listProcedimento.dataAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZDate(rSet.%Get("DataAtendimento"),4)) 
		Set listProcedimento.dataAtendInt 				= rSet.%Get("DataAtendimento") 
		Set listProcedimento.horaAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZTime(rSet.%Get("HoraAtendimento"),2))
		Set listProcedimento.horaAtendInt 				= rSet.%Get("HoraAtendimento")
		Set listProcedimento.dataHoraAdmissao			= rSet.%Get("DataHoraAdmissao")
		If (rSet.%Get("DataHoraAdmissao") = "") Set flagAdmissao = 0 
		Set listProcedimento.codGrupoAgendamento 	= $$GetCodGrupoAgendamento^VARSQL(rSet.%Get("Procedimento"))
		Set listProcedimento.descGrupoAgendamento = $$GetDescGrupoAgendamento^VARSQL(listProcedimento.codGrupoAgendamento)
		Set listProcedimento.codProcedimento 			= rSet.%Get("Procedimento") 
		Set listProcedimento.descProcedimento 		= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"),1) 
		Set listProcedimento.codProfissional 			= rSet.%Get("Profissional") 
		Set listProcedimento.nomeProfissional 		= $$SQLGetProviderName^VARSQL(rSet.%Get("Profissional"))
		If (rSet.%Get("CodigodaSala") '= "") {
			Set listProcedimento.descSala 					= $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("CodigodaSala"),rSet.%Get("CodigodoLeito"))
		}Else{
			Set listProcedimento.descSala 					= $$GetDescSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
		}
		Set listProcedimento.flagAdmitir 					= 0
		If (	
				(rSet.%Get("DataHoraAdmissao") = "") && 
				(rSet.%Get("DataAtendimento") = +$Horolog || (rSet.%Get("DataAtendimento") = +$Horolog+1)) &&
				(rSet.%Get("HoraAtendimento") > ($Piece($Horolog,",",2)-$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1))))) &&
				(rSet.%Get("HoraAtendimento") < ($Piece($Horolog,",",2)+$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))))
			)
		{
			Set listProcedimento.flagAdmitir = 1
		}
		Do arrayProcedimento.%Push(listProcedimento)
	}
	If (arrayProcedimento.%Size() > 0) {
		Set listRetorno.procedimentos 	= arrayProcedimento
		if (flagAdmissao = 0) {
			Do arrayRetorno.%Push(listRetorno)	
		}
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetAgendamentoNew">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set objVARAgendamentoConf = $Get(^VARAgendamentoConf(YM, 0, 1))
	Set flagAgendRetroativa		= +$$$VARAgendamentoConfAgendRetroativo(objVARAgendamentoConf)
	;
	Set YBED 				= $Get(%request.Data("YBED",1))
	Set pDataAtual 	= +$Horolog
	;
	Set arrayRetorno 	= []
	;
	Set meuSQL = "Select Agend.Numero, Proc.Sequencia, Agend.CodigodoPaciente, Proc.DataAtendimento, "
	Set meuSQL = meuSQL _ "Proc.HoraAtendimento, Proc.GrupoAgendamento,  Proc.Procedimento, Proc.Profissional, "
	Set meuSQL = meuSQL _ "Proc.DataHoraAdmissao, Agend.Situacao, Agend.CriadoEm, Agend.AlteradoEm, "
	Set meuSQL = meuSQL _ "Proc.CodigodaSala, Proc.CodigodoLeito, Proc.Admissao, Proc.CriadoEm, Proc.CriadoPor "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "Where Agend.Company = 0 And Agend.Situacao In ('2', '5') "
	Set meuSQL = meuSQL _ "And Proc.Cancelado = 0 "
	If (flagAgendRetroativa = 1) {
		Set meuSQL = meuSQL _ "And (Proc.DataAtendimento Between '"_(pDataAtual-30)_"' And '"_(pDataAtual+1)_"' Or Proc.DataAtendimento Is Null)"
		Set meuSQL = meuSQL _ "Order By Agend.Numero, Proc.DataAtendimento, Proc.HoraAtendimento "
	}Else{
		Set meuSQL = meuSQL _ "And (Proc.DataAtendimento Between '"_pDataAtual_"' And '"_(pDataAtual+1)_"' Or Proc.DataAtendimento Is Null)"
		Set meuSQL = meuSQL _ "Order By Agend.Numero, Proc.DataAtendimento, Proc.HoraAtendimento "
	}
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	
	Set numeroAnt = ""
	While rSet.%Next() {
			Set listRetorno 								= {}
			Set flagAdmissao = 1
			Set dataAbertura = rSet.%Get("CriadoEm")
			If (rSet.%Get("AlteradoEm") '= "") {
				Set dataAbertura = rSet.%Get("AlteradoEm")
			}
			Set listRetorno.numeroAgend 		= rSet.%Get("Numero") 
			Set listRetorno.codPaciente 		= rSet.%Get("CodigodoPaciente") 
			Set listRetorno.nomePaciente 		= $$SQLGetPatientName^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.dataNascimento 	= $$SQLGetPatientDataNascimento^VARSQL(rSet.%Get("CodigodoPaciente"), 1) 
			Set listRetorno.sexo 						= $$SQLGetSexoPaciente^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.numeroAgendForm = rSet.%Get("Numero")_" | Nome do Paciente: "_listRetorno.nomePaciente _
																				" | Data Nasc.: "_listRetorno.dataNascimento_" | Sexo: "_ listRetorno.sexo
			Set listRetorno.flagEdicao 			= 1
			Set listRetorno.data						= $ZDateTime(dataAbertura,4,2)
			If (	rSet.%Get("DataHoraAdmissao") '= "" || 
						(rSet.%Get("DataAtendimento") < +$Horolog) ||
						(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeEdicaodeAgen($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
			{
				Set listRetorno.flagEdicao = 0
			}
			Set numAdmissao 													= rSet.%Get("Admissao")
			Set xNumAdmissao													= $Replace(numAdmissao,"/"," ")
			Set listRetorno.flagRemarcacao				= 0
		If (xNumAdmissao'="" && ($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao)))) {
			Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
			Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
			If ($$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) = "") {
				Set listRetorno.flagRemarcacao			= 1
			}
		}
		Set listRetorno.sequencia						= rSet.%Get("Sequencia")
		Set listRetorno.dataAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZDate(rSet.%Get("DataAtendimento"),4)) 
		Set listRetorno.dataAtendInt 				= rSet.%Get("DataAtendimento") 
		Set listRetorno.horaAtend 						= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZTime(rSet.%Get("HoraAtendimento"),2))
		Set listRetorno.horaAtendInt 				= rSet.%Get("HoraAtendimento")
		Set listRetorno.dataHoraAdmissao			= rSet.%Get("DataHoraAdmissao")
		Set listRetorno.dataHoraAdmissaoForm 	= $Replace($ZDateTime(rSet.%Get("DataHoraAdmissao"),4,2)," "," - ")
		Set listRetorno.dataHoraAtend 				= $Select(rSet.%Get("DataAtendimento")="":"",1:$ZDate(rSet.%Get("DataAtendimento"),4)_" "_$ZTime(rSet.%Get("HoraAtendimento"),2)) 
		If (rSet.%Get("DataHoraAdmissao") = "") {
			Set flagAdmissao = 0 
		}Else{
			Continue	
		}
		Set listRetorno.codGrupoAgendamento 	= $$GetCodGrupoAgendamento^VARSQL(rSet.%Get("Procedimento"))
		Set listRetorno.descGrupoAgendamento = $$GetDescGrupoAgendamento^VARSQL(listRetorno.codGrupoAgendamento)
		Set listRetorno.codProcedimento 			= rSet.%Get("Procedimento") 
		Set listRetorno.descProcedimento 		= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"),1) 
		Set listRetorno.codProfissional 			= rSet.%Get("Profissional") 
		Set listRetorno.nomeProfissional 		= $$SQLGetProviderName^VARSQL(rSet.%Get("Profissional"))
		If (rSet.%Get("CodigodaSala") '= "") {
			Set listRetorno.descSala 					= $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("CodigodaSala"),rSet.%Get("CodigodoLeito"))
		}Else{
			Set listRetorno.descSala 					= $$GetDescSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
		}
		Set listRetorno.flagAdmitir 					= 0
		If (	
				(rSet.%Get("DataHoraAdmissao") = "") && 
				(rSet.%Get("DataAtendimento") = +$Horolog || (rSet.%Get("DataAtendimento") = +$Horolog+1)) &&
				(rSet.%Get("HoraAtendimento") > ($Piece($Horolog,",",2)-$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1))))) &&
				(rSet.%Get("HoraAtendimento") < ($Piece($Horolog,",",2)+$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))))
			)
		{
			Set listRetorno.flagAdmitir = 1
		}
		If (rSet.%Get("DataHoraAdmissao") = "" && (rSet.%Get("DataAtendimento") = "")) {
			Set listRetorno.flagAdmitir = 1
		}
		Set listRetorno.flagAdmitir = 1
		Set listRetorno.criadoPor = rSet.%Get("CriadoPor")
		Set listRetorno.criadoEm = $ZDate(rSet.%Get("CriadoEm"),4,2)
		Do arrayRetorno.%Push(listRetorno)
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="CarregarAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
	;
	If ('$Data(^VARAgendamento(YM, pCodAgendamento))) {
		Set listRetorno	= {}
		Set listRetorno.status = 0
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set objVARAgendamento		= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set codPaciente					= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
	Set codPlanoSaude				= $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
	Set codConvenio					= $$$VARAgendamentoConvenio(objVARAgendamento)
	Set codCarteirinha			= $$$VARAgendamentoCarteirinha(objVARAgendamento)
	Set empresaContratante	= $$$VARAgendamentoEmpresaContratante(objVARAgendamento)
	Set vencCarteirinha			= $$$VARAgendamentoVencimentodaCarteirinha(objVARAgendamento)
	Set solicitante					= $$$VARAgendamentoSolicitante(objVARAgendamento)
	Set observacao					= $$$VARAgendamentoObservacao(objVARAgendamento)
	;
	Set listRetorno 								= {}
	Set listRetorno.status 					= 1
	Set listRetorno.pacCodigo 			= codPaciente
	Set listRetorno.pacNomePaciente	= $$SQLGetPatientName^VARSQL(codPaciente) 
	Set listRetorno.pacProntuario 	= $$SQLGetPatientProntuario^VARSQL(codPaciente) 
	Set listRetorno.pacSexo 				= $$SQLGetSexoPaciente^VARSQL(codPaciente) 
	Set listRetorno.pacNascimento 	= $$SQLGetPatientDataNascimento^VARSQL(codPaciente, 1)
	;	
	Set listRetorno.codPlanoSaude				= codPlanoSaude
	Set listRetorno.codConvenio					= codConvenio
	Set listRetorno.codCarteirinha			= codCarteirinha
	Set listRetorno.empresaContratante	= empresaContratante
	Set listRetorno.vencCarteirinha			= $Select(vencCarteirinha="":"",1:$ZDate(vencCarteirinha,3))
	Set listRetorno.solicitante					= solicitante
	Set listRetorno.observacao					= observacao
	;	
	Kill ^mtemp.VARAdmissaoAgendamento(pCodAgendamento)
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia))
		Quit:sequencia=""
		
		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia, 1))
		Set codProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		Set codProfissional 		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
		Set datadeAtendimento		= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
		Set horadeAtendimento 	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
		Set codSala					 		= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
		Set codLeito						= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
		Set procedAgendado			= $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
		Set dataHoraAdmissao		= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)
		Set solicitante					= $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos)

		Set codConvenio 				= $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos)
		Set codPlanoSaude 			= $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos)
		Set numCarteirinha 			= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos)
		Set vencCarteirinha			= $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos)
		Set numGuia							= $$$VARAgendamentoProcedimentosGuia(objVARAgendamentoProcedimentos)

		If (dataHoraAdmissao '= "") Continue
		
		If (codProfissional = "") {
			Set codProfissional = codSala_"||"_codLeito
		}
		;
		If ($$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1) Continue
		;
		Set tempodeAtendiment = ""
		If (procedAgendado = 1) {
			If ($Length(codProfissional,"||") = 1) {
				Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, codProfissional, datadeAtendimento, horadeAtendimento, 1))
				Set tempodeAtendiment 					= $$$MEDProviderAgendaHorarioTempodeAtendimento(objMEDProviderAgendaHorario) 
			}Else{
				Set objINART = $Get(^INART(YM, codProcedimento, 1))
				Set grupoAgendamento = $$$INARTGrupodeAgendamento(objINART)
				Set objVARGrupoAgendamento 	= $Get(^VARGrupoAgendamento(YM, grupoAgendamento, 1))
				Set tempodeAtendiment 			= $$$VARGrupoAgendamentoTempodeAtendimento(objVARGrupoAgendamento) 
			}
		}
		;
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,1) = codProfissional
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,2) = datadeAtendimento
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,3) = horadeAtendimento
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,4) = tempodeAtendiment
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,5) = procedAgendado
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,6) = dataHoraAdmissao
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,7) = solicitante
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,8) = sequencia
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,9) = codConvenio
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,10) = codPlanoSaude
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,11) = numCarteirinha
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,12) = vencCarteirinha
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,13) = numGuia
		;
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ApagarProcedimento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pSequencia,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set YBED 	= pYBED
	
	Set objeto = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))
	Set codProcedimento  = $$$VARAgendamentoProcedimentosProcedimento(objeto)
	Set controleAdmissao = $$$VARAgendamentoProcedimentosControleAdmissao(objeto)
	
	If (controleAdmissao '= "") Return "Procedimento já admitido."
	
	Set $$$VARAgendamentoProcedimentosCancelado(objeto) = 1
	Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_pSequencia, objeto, $$$YES)
	If ($$$ISERR(strStatus)) {
		Return "Erro ao excluir o procedimento."
	}
	
	Kill ^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento)
	Kill ^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, pSequencia)

	Return $$$OK]]></Implementation>
</Method>

<Method name="GetListarHorarios">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pCodPlanoSaude 	= $Get(%request.Data("pCodPlanoSaude",1))
	Set pPlanoSaudeCarteirinha	= $Get(%request.Data("pPlanoSaudeCarteirinha",1))
	Set pVencCarteirinha	= $Get(%request.Data("pVencCarteirinha",1))
	Set pCodConvenio		= $Get(%request.Data("pCodConvenio",1))
	Set codUltimoMedicoSol = $Get(%request.Data("codUltimoMedicoSol",1))
	
	Set arrayRetorno = []
	
	If (pCodAgendamento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}

	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))

	Set codPaciente = $Piece(^VARAgendamento(YM, pCodAgendamento, 1),Y,1)
	
	Set codProcedimento = ""
	For {
		Set codProcedimento = $Order(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento))
		Quit:codProcedimento=""
		
		Set nSeq = ""
		For {
			Set nSeq = $Order(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq))
			Quit:nSeq=""
			
			Set objProcAgend = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, nSeq, 1))
			
			Set qtdeProcedimento = +$$$VARAgendamentoProcedimentosQtdeProcedimento(objProcAgend)
			
			Set codProfissional		= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",1)
			Set datadeAtendimento	= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",2)
			Set horadeAtendimento	= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",3)
			Set tempodeAtendiment	= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",4)
			Set procedAgendado		= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",5)
			Set dataHoraAdmissao	= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",6)
			Set solicitante				= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",7)
			If (solicitante = "" && (codUltimoMedicoSol '= "")) {
				Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",7) = codUltimoMedicoSol
				Set solicitante = codUltimoMedicoSol
			}
			Set sequencia					= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),"~",8)

			Set codConvenio 			= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,9)
			Set codPlanoSaude 		= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,10)
			Set numCarteirinha		= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,11)
			Set vencCarteirinha 	= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,12)
			
			Set numGuia						= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,13)
		
			Set guiaOperadora = ""
			If (numGuia '= "") {
				Set objGuia = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, numGuia, 1))
				Set guiaOperadora = $$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objGuia)
			}
		
			If (solicitante '= "" && ((","_$$$VARAgendamentoSolicitante(objVARAgendamento)_",") '[ (","_solicitante_","))) {
				Set solicitante = ""
				Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,7) = ""
			}		
			;
			If (procedAgendado = 1) {
				If ($Length(codProfissional,"||") = 2) {
					Set codSala 		= $Piece(codProfissional,"||",1)
					Set codLeito 		= $Piece(codProfissional,"||",2)
					Set objVARSalasAtendimentos = $Get(^VARSalasAtendimentos(0, codSala, 1))
					Set codUnidade	= $$$VARSalasAtendimentosUnidade(objVARSalasAtendimentos)
					Set objINART = $Get(^INART(YM, codProcedimento, 1))
				}Else{
					Set objMEDProviderAgendaHorario = ""
					If (codProfissional '= "" && (horadeAtendimento '= "") && (datadeAtendimento '= "")) {
						Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(YM, codProfissional, datadeAtendimento, horadeAtendimento, 1))
					}
					Set referenciaPai = $$$MEDProviderAgendaHorarioReferenciaPai(objMEDProviderAgendaHorario)
					Set objMEDProviderAgenda = ""
					If (referenciaPai '= "") {
						Set objMEDProviderAgenda = $Get(^MEDProviderAgenda(YM, codProfissional, referenciaPai, 1))
					}
					Set codUnidade	= $$$MEDProviderAgendaUnidade(objMEDProviderAgenda)
					Set codSala 		= $$$MEDProviderAgendaLocal1(objMEDProviderAgenda)
					Set objINART = $Get(^INART(YM, codProcedimento, 1))
				}		
			}Else{
				Set objINART = $Get(^INART(YM, codProcedimento, 1))
			}
			Set flagDescItem = 0
			If ($Data(^VARProcedItensUtilizados(YM,codProcedimento))) {
				Set flagDescItem = 1
			}
			Set listDados = {}
			Set listDados.controleAdmissao			= $$$VARAgendamentoProcedimentosControleAdmissao($Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, nSeq, 1)))
			Set listDados.seqAgendamento				= nSeq
			Set listDados.sequencia							= sequencia
			Set listDados.flagDescItem					= flagDescItem
			Set listDados.procedAgendado				= procedAgendado
			Set listDados.grupo									= $Select(procedAgendado=1:"Procedimentos Agendados",1:"Procedimentos não Agendados")
			Set listDados.grupoAgendamento			= $$$INARTGrupodeAgendamento(objINART)
			Set listDados.grupoAgendamentoDesc 	= $$GetDescGrupoAgendamento^VARSQL($$$INARTGrupodeAgendamento(objINART))
			Set listDados.procedimento 					= codProcedimento
			Set listDados.procedimentoDesc 			= $Select($$$INARTDescItemPedido(objINART)="":$$$INARTSearchName(objINART),1:$$$INARTDescItemPedido(objINART))
			Set listDados.tempoAtendimento			= $Select(tempodeAtendiment="":"",1:$ZTime(tempodeAtendiment,2))
			Set listDados.descTempoAtendimento	= $$GetDescTempo^VARSQL(tempodeAtendiment)
			Set listDados.qtdeProcedimento			= $Select(+qtdeProcedimento<=1:1,1:qtdeProcedimento)
			Set listDados.guiaOperadora					= guiaOperadora
			If (procedAgendado = 1) {
				If ($Length(codProfissional,"||") = 2) {
					Set listDados.flagProcedimento			= 1
					Set listDados.unidade								= codUnidade
					Set listDados.unidadeDesc						= $$SQLGetLocationName^VARSQL(codUnidade)
					Set listDados.sala									= codSala
					Set listDados.salaDesc							= $$GetDescSalasAtendimentos^VARSQL(codSala,codLeito)
					Set listDados.unidadeSala						= listDados.unidadeDesc_" - "_listDados.salaDesc
					Set listDados.profissional					= codProfissional
					Set listDados.profissionalNome			= ""
					
					If ($Data(^VARGrupoAgendamentoAusencia(YM, listDados.grupoAgendamento, codSala, codLeito, datadeAtendimento))) {
						Set xObjeto = $Get(^VARGrupoAgendamentoAusencia(YM,listDados.grupoAgendamento, codSala, codLeito, datadeAtendimento, 1))
						If ($$$VARGrupoAgendamentoAusenciaIndicadordoDia(xObjeto) = $$$YES) {
							Set listDados.ausencia					= 1
						}Else{
							If (horadeAtendimento >= $$$VARGrupoAgendamentoAusenciaHoraInicial(xObjeto) && 
									(horadeAtendimento <= $$$VARGrupoAgendamentoAusenciaHoraFinal(xObjeto))) {
								Set listDados.ausencia				= 1
							}
						}	
					}
				}Else{
					Set listDados.flagProcedimento			= 0
					Set listDados.unidade								= codUnidade
					Set listDados.unidadeDesc						= $$SQLGetLocationName^VARSQL(codUnidade)
					Set listDados.sala									= codSala
					Set listDados.salaDesc							= $$GetDescSalasAtendimentos^VARSQL(codSala)
					Set listDados.unidadeSala						= listDados.unidadeDesc_" - "_listDados.salaDesc
					Set listDados.profissional					= codProfissional
					Set listDados.profissionalNome			= $$SQLGetProviderName^VARSQL(codProfissional)
					If (datadeAtendimento'=""&&($Data(^MEDProviderAgendaAusencia(YM,codProfissional,datadeAtendimento)))) {
						Set xObjeto = $Get(^MEDProviderAgendaAusencia(YM, codProfissional, datadeAtendimento, 1))
						If ($$$MEDProviderAgendaAusenciaIndicadordoDia(xObjeto) = $$$YES) {
							Set listDados.ausencia					= 1
						}Else{
							If (horadeAtendimento '= "") {
								If (horadeAtendimento >= $$$MEDProviderAgendaAusenciaHoraInicial(xObjeto) && 
										(horadeAtendimento <= $$$MEDProviderAgendaAusenciaHoraFinal(xObjeto))) {
									Set listDados.ausencia			= 1
								}
							}
						}	
					}
				}
			}Else{
				Set listDados.flagProcedimento			= 1
				Set listDados.unidade								= 1
				Set listDados.unidadeDesc						= $$SQLGetLocationName^VARSQL(1)
				Set listDados.sala									= ""
				Set listDados.salaDesc							= ""
				Set listDados.unidadeSala						= listDados.unidadeDesc
				Set listDados.profissional					= ""
				Set listDados.profissionalNome			= ""
				Set listDados.ausencia							= 0
			}
			Set listDados.descSemanaDataAtend  	= $$GetDescSemana^VARSQL(datadeAtendimento, 1)
			Set listDados.dataAtendimento				= $Select(datadeAtendimento="":"",1:$ZDate(datadeAtendimento,4))
			Set listDados.horaAtendimentoIni		= $Select(horadeAtendimento="":"",1:$ZTime(horadeAtendimento,2))
			Set listDados.horaAtendimentoFin		= $Select(horadeAtendimento="":"",1:$ZTime(horadeAtendimento+tempodeAtendiment,2))
			Set listDados.solicitante						= solicitante
			;
			If (codPlanoSaude = "") Set codPlanoSaude = pCodPlanoSaude
			If (codConvenio = "") Set codConvenio = pCodConvenio
			If (numCarteirinha = "") Set numCarteirinha = pPlanoSaudeCarteirinha
			Set problemaConvenio = "", trocarItem = "", xCodItemTroca = ""
			Set codTISS = ""
			If (codPlanoSaude = "") {
				Set problemaConvenio = "Informar o plano de saúde"
			}Else{
				Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, codPlanoSaude)
				If ($IsObject(objRegraComercial)) {
					If (+objRegraComercial.TempoTrocaItem > 0 && (objRegraComercial.CodigoItemTroca '= "")) {
						Set dataFinAteTroc = datadeAtendimento
						If (datadeAtendimento = "") Set dataFinAteTroc = +$Horolog
						Set dataIniAteTroc = dataFinAteTroc - objRegraComercial.TempoTrocaItem
						Set xCodItemTroca = objRegraComercial.CodigoItemTroca
						Set trocarItem = ##Class(VAR.CSP.VARCadAgendamento).GetTrocaItem(codPaciente, codConvenio, codPlanoSaude, codProcedimento, objRegraComercial.CodigoItemTroca, dataIniAteTroc, dataFinAteTroc)
					}
					If (trocarItem '= "") {
						Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(xCodItemTroca, codPlanoSaude)
					}
					Set codTISS = objRegraComercial.CodigodoItem
					If (problemaConvenio="" && (objRegraComercial.isInelegivel = 1)) {
						Set problemaConvenio = "Procedimento não atendido pelo Plano de Saúde informado."
					}
					If (problemaConvenio="" && (objRegraComercial.isCarteirinhaObrigatoria = 1) && (numCarteirinha = "")) {
						Set problemaConvenio = "Procedimento pendente do numero da carterinha."
					}
					If (problemaConvenio="" && (objRegraComercial.isCarteirinhaObrigatoria = 1 && (objRegraComercial.CarteirinhaMin > 0) && (objRegraComercial.CarteirinhaMax > 0) && ($Length(numCarteirinha) > objRegraComercial.CarteirinhaMax || ($Length(numCarteirinha) < objRegraComercial.CarteirinhaMin)))) {
						Set problemaConvenio = "Procedimento com numero da carteirirnha com quantidade de caracteres invalidos."
					}
					If (problemaConvenio="" && (objRegraComercial.Componentes.Count() > 0)) {
						Set xProcedimentos = ""
						For count = 1 : 1 : objRegraComercial.Componentes.Count() {
							Set objRegraComerCompont = objRegraComercial.Componentes.GetAt(count)
							;
							If (objRegraComerCompont.Procedimento '= "" && ($Data(^VARAgendamentoItensDesc(YM, pCodAgendamento, sequencia, objRegraComerCompont.Procedimento)))) Continue
							;
							If (objRegraComerCompont.isInelegivel = 1) {
								Set xProcedimentos = xProcedimentos_$Select(xProcedimentos="":"",1:", ")_objRegraComerCompont.DescricaoDoItem_" "
							}
						}
						If (xProcedimentos '= "") {
							Set problemaConvenio = "O(s) item(ns) "_xProcedimentos_", não é(são) atendido(s) pelo Plano de Saúde informado."
						}
					}	
					If (problemaConvenio="" && (objRegraComercial.isObrigatorioGuiaAutorizacao = 1)) {
						If (numGuia = "") {
							Set problemaConvenio = "Procedimento pendente de Guia e Senhas de Autorização."
						}
						If (problemaConvenio="") {
							Set objGuia = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, numGuia, 1))
							If (objRegraComercial.isObrigatorioNumeroGuiaOperadora = 1 && ($$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objGuia) = "")) {
								Set problemaConvenio = "Procedimento pendente do Número da Guia Atribuída pela Operadora."
							}
							If (objRegraComercial.isObrigatorioSenhaAutorizacao = 1 && ($$$VARAgendamentoGuiaSenha(objGuia) = "")) {
								Set problemaConvenio = "Procedimento pendente da Senhas de Autorização."
							}
						}		
					}	
					If (problemaConvenio="" && (objRegraComercial.isCarteirinhaObrigatoria = 1) && (numCarteirinha = "")) {
						Set problemaConvenio = "Procedimento pendente do numero da carterinha."
					}
					If (problemaConvenio="" && ($IsObject(objRegraComercial) && (objRegraComercial.possuiComponentes > 0))){
						For i=1:1:objRegraComercial.Componentes.Count(){
							Set componente = objRegraComercial.Componentes.GetAt(i)
							If (componente.Valor <= 0) Continue
							If (objRegraComercial.isObrigatorioGuiaAutorizacao '= 1) Continue
							If ('$Data(^VARAgendamentoProcedComponente(YM,pCodAgendamento, nSeq,componente.Procedimento))) {
								Set problemaConvenio = "Favor informar a Guias/Senhas de autorização para os componentes."_codProcedimento_"|"_codPlanoSaude
								Quit
							}
						}
					}
				}Else{
					Set problemaConvenio = "Problema para carregar a regra do plano de saúde."
				}
				
			}
			Set listDados.trocarItem 						= trocarItem
			Set listDados.problemaConvenio			= problemaConvenio
			Set listDados.codigoTISS						= codTISS
			;
			If (procedAgendado = 1) {
				Set horario = "Não encontrado horário para o filtro informado."
			}Else{
				Set horario = "-"
			}
			If (datadeAtendimento '= "") {
				Set horario = $$GetDescSemana^VARSQL(datadeAtendimento, 1) _", "_ $ZDate(datadeAtendimento,4) _ 
											" ("_$ZTime(horadeAtendimento,2) _ " - " _ $ZTime(horadeAtendimento+tempodeAtendiment,2)_")"
			}
			Set listDados.horario 		= horario
			Set listDados.flagAdmitir = 0
			If (procedAgendado = 1) {
				If (	
						(dataHoraAdmissao = "") && 
						(datadeAtendimento = +$Horolog || (datadeAtendimento = +$Horolog+1)) &&
						(horadeAtendimento > ($Piece($Horolog,",",2)-$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1))))) &&
						(horadeAtendimento < ($Piece($Horolog,",",2)+$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))))
					)
				{
					Set listDados.flagAdmitir = 1
				}
			}Else{
				If (dataHoraAdmissao = "") Set listDados.flagAdmitir = 1
			}
			Do arrayRetorno.%Push(listDados)
		}
	}
	
	Do arrayRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="InserirProcedimento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento="",pCodProcedimento="",pYBED=""</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	If (pCodAgendamento = "") {
		Set YBED							= $Get(%request.Data("YBED",1))
		Set pCodAgendamento 	= $Get(%request.Data("pCodAgendamento",1))
		Set pCodProcedimento 	= $Get(%request.Data("pCodProcedimento",1))
	}Else{
		Set YBED = pYBED
	}

	Set codPaciente = $Piece(^VARAgendamento(YM, pCodAgendamento, 1),Y,1)

	If ($Data(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, pCodProcedimento))) {
		Return $$$OK
	}

	Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, pCodProcedimento),Y,5) = 0

	Set rSeqAgendamento = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, ""),-1) + 1
	Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, rSeqAgendamento, 1))
	Set $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos) 				 = pCodProcedimento
	Set $$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) 	 				 = 0
	Set $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos) = 0
	Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_rSeqAgendamento, objVARAgendamentoProcedimentos, $$$YES)	
	If ($$$ISERR(strStatus)) {
		set strStatus = strStatus
		set erro			=	1
		Quit	
	}
	Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, pCodProcedimento, rSeqAgendamento),Y,8) = rSeqAgendamento
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmSolicitanteProc">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pProcedimento		= $Get(%request.Data("pProcedimento",1))
	Set pSequencia			= $Get(%request.Data("pSequencia",1))
	Set pSolicitante 		= $Get(%request.Data("pSolicitante",1))

	Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, pProcedimento),Y,7) = pSolicitante]]></Implementation>
</Method>

<Method name="LimparTemporaria">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento</FormalSpec>
<Implementation><![CDATA[	Kill ^mtemp.VARAdmissaoAgendamento(pCodAgendamento)
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmazenarAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set strStatus = $$$OK
	Set mensagem 	= ""
	Set erro			=	0
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pCodPlanoSaudeConvenio= $Get(%request.Data("pCodPlanoSaudeConvenio",1))
	Set pCodPlanoSaude				= $Get(%request.Data("pCodPlanoSaude",1))
	Set pPlanoSaudeCarteirinha= $Get(%request.Data("pPlanoSaudeCarteirinha",1))
	Set pVencCarteirinha			= $Get(%request.Data("pVencCarteirinha",1))
	Set pEmpresaContratante		= $Get(%request.Data("pEmpresaContratante",1))
	Set pArrayProcedimentoArm	= $Get(%request.Data("pArrayProcedimentoArm",1)) 
	Set pSolicitante					= $Get(%request.Data("pSolicitante",1))
	Set pObservacao						= $Get(%request.Data("pObservacao",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	Tstart
	Try{
		Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
		Set codPaciente				= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
		Set codOrcamento			= $$$VARAgendamentoOrcamento(objVARAgendamento)
		Set dtRetroativa 			= $$$VARAgendamentoDatadeAdmissaoRetroativa(objVARAgendamento)
		Set pSituacao					= 4
		If ($Data(^VARAgendamentoProcedimentos(YM, pCodAgendamento))) {
			Set xSequencia = ""
			For {
				Set xSequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia))
				Quit:xSequencia=""

				Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia, 1))
				
				Set admissao					= $$$VARAgendamentoProcedimentosAdmissao(objVARAgendamentoProcedimentos)
				Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)
				Set codProcedimento 	= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
				Set codProfissional 	= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
				Set datadeAtendimento	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
				Set horadeAtendimento = $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
				Set codSala					 	= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
				Set codLeito					= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
				Set procedAgendado		= $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
				Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)
				;
				;
				If ($$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1) Continue 
				If (dataHoraAdmissao '= "") Continue
				If ((","_pArrayProcedimentoArm_",")'[(","_codProcedimento_",")) {
					Set pSituacao = 5
					Continue		
				}
				IF (admissao '= "") {
					Set strStatus = ##Class(VAR.CSP.VARCadAgendamento).Admissao(admissao, codPaciente, codProfissional, +$Horolog, $Piece($Horolog,",",2), pCodPlanoSaudeConvenio, pCodPlanoSaudeConvenio, 2, YBED, codProcedimento)
					If ($$$ISERR(strStatus)) {
						set strStatus = strStatus
						set erro			=	1
						Quit	
					}
				}
				Set rSolicitante = $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,7)
				If (rSolicitante = "") {
					Set rSolicitante = $Piece(pSolicitante,",",1)	
				}
				If (pNumAdmissaoControle = "") {
					Set pNumAdmissaoControle = $$GetNextNumber^COMUtils("VARAgendamentoAdmissao","")
					Set objVARAgendamentoAdmissao = pCodAgendamento_Y_YBED_Y_$Select(dtRetroativa="":+$Horolog,1:dtRetroativa)_Y_$Piece($Horolog,",",2)
					Set strStatus = $$$Save("VARAgendamentoAdmissao", pNumAdmissaoControle, objVARAgendamentoAdmissao, $$$YES)
					If ($$$ISERR(strStatus)) {
						set strStatus = strStatus
						set erro			=	1
						Quit	
					}
				}
				If ($$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos) = "") {
					Set $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos) = pCodPlanoSaude
				}
				If ($$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos) = "") {
					Set $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos) = pCodPlanoSaudeConvenio
				}
				If ($$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos) = "") {
					Set $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos) = pPlanoSaudeCarteirinha
				}
				If ($$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos) = "") {
					Set $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos) = $Select(pVencCarteirinha="":"",1:$ZDateH(pVencCarteirinha,3,,,,,,,""))
				}
				If ($$$VARAgendamentoProcedimentosEmpresaContratante(objVARAgendamentoProcedimentos) = "") {
					Set $$$VARAgendamentoProcedimentosEmpresaContratante(objVARAgendamentoProcedimentos) = pEmpresaContratante
				}
				Set xCodPlanoSaude		= $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos)
				Set xCodConvenio			= $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos)

				If (..GetOrganizacaoEParticular($$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos))) {
					Set objVARAgendamentoAdmissao = $Get(^VARAgendamentoAdmissao(0, pNumAdmissaoControle, 1))
					If ($$$VARAgendamentoAdmissaoNumeroRPS(objVARAgendamentoAdmissao) = "") {
						Set serie	= 1
						Lock ^FATRPSControle(0,serie)
						Set numeroRPS = $Order(^FATRPSControle(0,serie,""),-1)+1
						Set obj = ""
						Set $$$FATRPSControleTipodeDocumentoquereservo(obj) = "FA"
						Set $$$FATRPSControleNumerodoDocumento(obj) = pNumAdmissaoControle
						Set $$$FATRPSControleCriadoEm(obj) 					= $Horolog
						Set $$$FATRPSControleCriadoPor(obj) 				= YBED
						Set strStatus = $$$Save("FATRPSControle",serie_","_numeroRPS,obj,$$$YES)
						If ($$$ISERR(strStatus)) {
							set strStatus = strStatus
							set erro			=	1
							Quit	
						}
						Lock -^FATRPSControle(0,serie)
						Set $$$VARAgendamentoAdmissaoNumeroRPS(objVARAgendamentoAdmissao) = numeroRPS
						Set strStatus = $$$Save("VARAgendamentoAdmissao", pNumAdmissaoControle, objVARAgendamentoAdmissao, $$$YES)
						If ($$$ISERR(strStatus)) {
							set strStatus = strStatus
							set erro			=	1
							Quit	
						}
					}
				}
				Set $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos) = rSolicitante
				Set $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos) = $Horolog
				If (+$$$VARAgendamentoProcedimentosQtdeProcedimento(objVARAgendamentoProcedimentos) <= 0) {
					Set $$$VARAgendamentoProcedimentosQtdeProcedimento(objVARAgendamentoProcedimentos) = 1
				}
				Set $$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendamentoProcedimentos) = pNumAdmissaoControle
				;
				Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos))
				If (..GetOrganizacaoEParticular($$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos))) {
					If (+$Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,14)>0){
						Set $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos) = +$Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,14)
					}Else{
						If (codOrcamento = "") {
							Set $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos) = objRegraComercial.ValorUnitario		
						}Else{
							If ($Data(^VAROrcamentoProcedimentos(0,codOrcamento,codProcedimento))) {
								Set $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos) = $$$VAROrcamentoProcedimentosValor(^VAROrcamentoProcedimentos(0,codOrcamento,codProcedimento,1))
							}Else{
								Set $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos) = objRegraComercial.ValorUnitario	
							}						
						}
					}
				}Else{
					If (+$Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,14)>0){
						Set $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos) = +$Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,14)
					}
					If (+objRegraComercial.TempoTrocaItem > 0 && (objRegraComercial.CodigoItemTroca '= "")) {
						Set dataFinAteTroc = datadeAtendimento
						If (datadeAtendimento = "") Set dataFinAteTroc = +$Horolog
						Set dataIniAteTroc = dataFinAteTroc - objRegraComercial.TempoTrocaItem
						Set trocarItem = ##Class(VAR.CSP.VARCadAgendamento).GetTrocaItem(codPaciente, xCodConvenio, xCodPlanoSaude, codProcedimento, objRegraComercial.CodigoItemTroca, dataIniAteTroc, dataFinAteTroc)
						If (trocarItem '= "") {
							Set $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos) = objRegraComercial.CodigoItemTroca
						}
					}
				}
				;
				Set xCodProc = $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
				Set codExecutor = $Order(^VARManualExames(YM,5,"A",xCodProc,""))
				If (codExecutor '= "") {
					Set codigoItemparaMotion = $$$VARManualExameCodItemExecutor($Get(^VARManualExame(YM,xCodProc,codExecutor,1)))
					Set $$$VARAgendamentoProcedimentosCodigoItemparaMotion(objVARAgendamentoProcedimentos) = codigoItemparaMotion
				}
				;
				Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_xSequencia, objVARAgendamentoProcedimentos, $$$YES)
				If ($$$ISERR(strStatus)) {
					set strStatus = strStatus
					set erro			=	1
					Quit	
				}
			}
		}
		If ($$$ISERR(strStatus)) {
			set strStatus = strStatus
			set erro			=	1
			Quit	
		}
		Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
		Set codPaciente																							= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
		Set $$$VARAgendamentoSituacao(objVARAgendamento) 						= pSituacao
		Set $$$VARAgendamentoPlanodeSaude(objVARAgendamento) 				= pCodPlanoSaude
		Set $$$VARAgendamentoConvenio(objVARAgendamento)						= pCodPlanoSaudeConvenio
		Set $$$VARAgendamentoCarteirinha(objVARAgendamento) 				= pPlanoSaudeCarteirinha
		Set $$$VARAgendamentoVencimentodaCarteirinha(objVARAgendamento)	= $Select(pVencCarteirinha="":"",1:$ZDateH(pVencCarteirinha,3,,,,,,,""))
		Set $$$VARAgendamentoEmpresaContratante(objVARAgendamento)	= pEmpresaContratante
		Set $$$VARAgendamentoSolicitante(objVARAgendamento) 				= pSolicitante
		Set $$$VARAgendamentoObservacao(objVARAgendamento) 					= pObservacao
		Set strStatus = $$$Save("VARAgendamento", pCodAgendamento, objVARAgendamento, $$$YES)
		If ($$$ISERR(strStatus)) {
			set strStatus = strStatus
			set erro			=	1
			Quit	
		}
		Set:$Get(pNumAdmissaoControle)'="" xStrStatus = ##Class(VAR.CSP.VARParametrosIntegracoes).GerarArquivoIntegracaoMotion(pNumAdmissaoControle, 0 ,YBED)
	}
	Catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro			=	err
	}
	set retorno = {}
	if 'erro{
		Tcommit
		set retorno.codigo 							= $Get(chave)
		Set retorno.status 							= strStatus
		Set retorno.mensagem 						= mensagem
		If (strStatus = $$$OK && (pNumAdmissaoControle = "")) {
			&SQL(
				Select ControleAdmissao 
				Into :pNumAdmissaoControle
				From SQLUser.VARAgendamentoProcedimentos
				Where CodigodoAgendamento = :pCodAgendamento
				And ControleAdmissao Is Not null
				Order By  ControleAdmissao Desc
			)
		}
		Set retorno.numAdmissaoControle = pNumAdmissaoControle
	}Else{
		Trollback
		Set retorno.status 		= strStatus
		Set retorno.mensagem 	= ""
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="Imprimir">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"
	
	Set pCodAgendamento 			= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set pRelatorios 					= $Get(%request.Data("pRelatorios",1))
	Set pFlagImpAbaPesq				= +$Get(%request.Data("pFlagImpAbaPesq",1))
	Set YBED 									= $Get(%request.Data("YBED",1))

	Set folder = $Piece($Get(^VARJasper(YM,YM,1)),Y,1)

	Set link = $$Start^VARJasperRun("VARAgendAdmissaoBook")
	Set link = $$addUserParameter^VARJasperRun(link,"pCodAgendamento",pCodAgendamento)
	Set link = $$addUserParameter^VARJasperRun(link,"pNumAdmissaoControle",pNumAdmissaoControle)
	If (pFlagImpAbaPesq = 1) {
		Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
		Set link = $$addUserParameter^VARJasperRun(link,"pDataI",(+$$$VARAgendamentoCriadoEm(objVARAgendamento)_",0"))
		Set link = $$addUserParameter^VARJasperRun(link,"pDataF",(+$Horolog_",84600"))
	}Else{
		Set link = $$addUserParameter^VARJasperRun(link,"pDataI",(+$Horolog_",0"))
		Set link = $$addUserParameter^VARJasperRun(link,"pDataF",(+$Horolog_",84600"))
	}
	Set link = $$addUserParameter^VARJasperRun(link,"pRelatorios",pRelatorios)
	Set link = $$addUserParameter^VARJasperRun(link,"CompiledDir",folder)
	Set link = $$addParameter^VARJasperRun(link,YBED,1)
	Do ViewInForm^VARJasperRun(link,"Impressao",2)
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetRelatorios">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"
	
	Set pCodAgendamento 			= $get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set YBED 									= $get(%request.Data("YBED",1))

	Kill ^mtemp.VARAgendMielogramaTermo(YBED)
	Set qtdeProcMielo = 0
	&SQL(
		Select Count(*) 
		Into :qtdeProcMielo
		From SQLUser.VARAgendamentoProcedimentos 
		Where Company = 0 And ControleAdmissao = :pNumAdmissaoControle 
		And Procedimento In ('COLMIE', 'COBIE')	
	)
	Set:+qtdeProcMielo>0 ^mtemp.VARAgendMielogramaTermo(YBED) = ""
	;
	Kill ^mtemp.ProtocoloRetirada(YBED)
	Set qtdeProt = 0
	&SQL(
		Select 
			Count(Proc.Procedimento) 
		Into
			:qtdeProt
		From 
			SQLUser.VARAgendamentoProcedimentos As Proc, 
			SQLUser.VARManualExame As Man
		Where 
			Proc.Company = 0 And Man.Company = 0
			And Proc.ControleAdmissao = :pNumAdmissaoControle
			And Proc.Procedimento = Man.CodigoExame
			And Man.Situacao = 'A'
			And Man.TempoResultado > 0
	)
	Set ^mtemp.ProtocoloRetirada(YBED) = qtdeProt
	;
	Kill ^mtemp.ValorProcImp(YBED)
	Set meuSQLImp = "Select Proc.Procedimento, Proc.PlanodeSaude "
	Set meuSQLImp = meuSQLImp _ "From SQLUser.VARAgendamentoProcedimentos As Proc, "
	Set meuSQLImp = meuSQLImp _ "SQLUser.VARAgendamento As Age, "
	Set meuSQLImp = meuSQLImp _ "SQLUser.VARAgendamentoAdmissao As Adm "
	Set meuSQLImp = meuSQLImp _ "Where Proc.Company = 0 And Age.Company = 0 And Adm.Company = 0 "
	Set meuSQLImp = meuSQLImp _ "And Age.Numero = Proc.CodigodoAgendamento "
	Set meuSQLImp = meuSQLImp _ "And Proc.ControleAdmissao = Adm.CodigodaAdmissao "
	;Set meuSQLImp = meuSQLImp _ "And Proc.CodigodoAgendamento = '"_pCodAgendamento_"' "
	Set meuSQLImp = meuSQLImp _ "And Proc.ControleAdmissao = '"_pNumAdmissaoControle_"' "
	Set meuSQLImp = meuSQLImp _ "And $$GetFATOrganizacaoEparticular^VARSQL(Proc.PlanodeSaude) = 1"
	Set rSetImp = ##class(%SQL.Statement).%ExecDirect("",.meuSQLImp)
	While rSetImp.%Next() {
		Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(rSetImp.%Get("Procedimento"), rSetImp.%Get("PlanodeSaude"))
		If ('$IsObject(objRegraComercial)) Set valor = 0
		Else  Set valor = objRegraComercial.ValorUnitario
		Set ^mtemp.ValorProcImp(YBED, rSetImp.%Get("PlanodeSaude"), rSetImp.%Get("Procedimento")) = valor
	}

	Set valorPend = 10
	&Sql(
		Select
			Top 1 
			(
				$$GetValorTotalAdmissao^VARSQL(Proc.CodigodoAgendamento, Proc.ControleAdmissao, :YBED)
				- ($$GetValorTotalAdmissao^VARSQL(Proc.CodigodoAgendamento, Proc.ControleAdmissao, :YBED) * Adm.PagamentoPercentualDescon / 100) 
				- Adm.PagamentoValorDesconto
				- Sum(Pag.Valor)
			)
		Into :valorPend
		From 
			SQLUser.VARAgendamentoProcedimentos As Proc,
			SQLUser.VARAgendamento As Age,
			SQLUser.VARAgendamentoAdmissao As Adm,
			SQLUser.VARAgendamentoPagamentos As Pag
		Where 
			Proc.Company = 0 And Age.Company = 0 And Adm.Company = 0
			And Age.Numero = Proc.CodigodoAgendamento
			And Proc.ControleAdmissao = Adm.CodigodaAdmissao
			And Adm.CodigodaAdmissao = Pag.CodigodoAgendamento
			And Proc.ControleAdmissao = :pNumAdmissaoControle
			And $$GetFATOrganizacaoEparticular^VARSQL(Proc.PlanodeSaude) = 1
	)

	Do ##Class(VAR.CSP.PreparacaoTISS).Preparacao(pCodAgendamento, pNumAdmissaoControle, "", YBED)
	;S ^zzJULIO = pCodAgendamento_"|"_pNumAdmissaoControle_"|"_YBED
	
	
	Set arrayRetorno = []
	Set meuSQLAdm = "Select DataHoraAdmissao From SQLUser.VARAgendamentoProcedimentos "
	Set meuSQLAdm = meuSQLAdm _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
	Set meuSQLAdm = meuSQLAdm _ "And ControleAdmissao = '"_pNumAdmissaoControle_"' "
	Set meuSQLAdm = meuSQLAdm _ "Group By ControleAdmissao Order By DataHoraAdmissao Desc "
	Set rSetAdm = ##class(%SQL.Statement).%ExecDirect("",.meuSQLAdm)
	While rSetAdm.%Next() {
		Set meuSQL = "Select * From SQLUser.VARAgendamentoImp"
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
		While rSet.%Next() {
			Set tabela = rSet.%Get("Tabela")
			;Pagamento
			If (rSet.%Get("NomeRelatorio") = "VARAgendRecibo") {
				If ('$Data(^VARAgendamentoPagamentos(YM, pNumAdmissaoControle))) Continue
				If (valorPend > 0) Continue
			}
			;
			If (tabela '= "" && (tabela = "DESATIVADO")) Continue	
			
			If (tabela = "VARGuiaConsulta" && ('$Data(^VARGuiaConsulta(YM, YBED)))) Continue	
			If (tabela = "VARGuiaSPSADT" && ('$Data(^VARGuiaSPSADT(YM, YBED)))) Continue	
			If (tabela = "VARGuiaAnexoOutrasDespesas" && ('$Data(^VARGuiaAnexoOutrasDespesas(YM, YBED)))) Continue	
			If (tabela = "VARAgendProtocoloEntrega" && (+$Get(^mtemp.ProtocoloRetirada(YBED)) <= 0)) Continue
			If (tabela = "VARAgendMielogramaTermo" && ('$Data(^mtemp.VARAgendMielogramaTermo(YBED)))) Continue
			;
			Set listRetorno = {}
			Set listRetorno.dataHoraAdm 	= $ZDateTime(rSetAdm.%Get("DataHoraAdmissao"),4,2)
			Set listRetorno.dataHoraAdmI	= rSetAdm.%Get("DataHoraAdmissao")
			Set listRetorno.sequencia 		= rSet.%Get("Sequencia")
			Set listRetorno.descricao 		= rSet.%Get("Descricao")
			Do arrayRetorno.%Push(listRetorno)
		}	
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SelecionarImp">
<ClassMethod>1</ClassMethod>
<FormalSpec>pYBED,pTipo,pDataHoraAdm="",pRelatorio="",pCodAgendamento="",pNumAdmissaoControle=""</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0 
	Set Y  		= "~"
	Set YBED 	= pYBED
	
	If (pTipo = "L") {
		Kill ^VARAgendamentoTempImp(YM, YBED)	
	}Else{
		If (pRelatorio = 6) { ;Guia de Consulta
			Set qtdePag = $Order(^VARGuiaConsulta(YM, YBED, ""),-1)
			For count = 1 : 1 : qtdePag{
				Set ^VARAgendamentoTempImp(YM, YBED, pDataHoraAdm, pRelatorio, count, 1) = ""
			}
		}ElseIf (pRelatorio = 4) { ;Guia SP/SADT
			Set qtdePag = $Order(^VARGuiaSPSADT(YM, YBED, ""),-1)
			For count = 1 : 1 : qtdePag{
				Set ^VARAgendamentoTempImp(YM, YBED, pDataHoraAdm, pRelatorio, count, 1) = ""
			}
		}ElseIf (pRelatorio = 5) { ;Guia Anexo Outras Despesas
			Set qtdePag = $Order(^VARGuiaAnexoOutrasDespesas(YM, YBED, ""),-1)
			For count = 1 : 1 : qtdePag{
				Set ^VARAgendamentoTempImp(YM, YBED, pDataHoraAdm, pRelatorio, count, 1) = ""
			}
		}Else{
			Set ^VARAgendamentoTempImp(YM, YBED, pDataHoraAdm, pRelatorio, 1, 1) = ""
		}
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetProcedimentoAlteracao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	set pCodProduto					= $Get(%request.Data("pCodProduto",1))
	Set pTake 							= $Get(%request.Data("pTake",1))
	Set pSkip 							= $Get(%request.Data("pSkip",1))
	Set pSearchValue 				= $Replace($Get(%request.Data("pSearchValue",1))," "," ")
	Set pAltProcAgeProcAnt 	= $Get(%request.Data("pAltProcAgeProcAnt",1))
	Set grupoAgendamento 		= ""

	If (pAltProcAgeProcAnt '= "") {
		Set objINART = $Get(^INART(YM, pAltProcAgeProcAnt, 1))
		Set grupoAgendamento = $$$INARTGrupodeAgendamento(objINART)
	}
	
	If (pTake = "") Set pTake = 20
	
	Set pTake = pTake + pSkip
	Set pSkip = pSkip + 1
		
	Set meuSQL = "Select * From (Select top "_pTake_" ItemNumber, SearchName From SQLUser.INART "
	Set meuSQL = meuSQL_"Where Company = 0 "
	If (grupoAgendamento '= "") {
		Set meuSQL = meuSQL_"And GrupodeAgendamento = '"_grupoAgendamento_"' " 
	}		
	If (pCodProduto '= "") {
		Set meuSQL = meuSQL_"And ItemNumber = '"_pCodProduto_"' "
	}Else{
		If (pSearchValue'="") {
			Set meuSQL = meuSQL_"And %UPPER('('||ItemNumber||') '||SearchName) LIKE %UPPER('%"_pSearchValue_"%') "
		}
	}
	Set meuSQL = meuSQL_") Where %VID Between "_pSkip_" and "_pTake_" "
	;
	Set objStatement	= ##class(%SQL.Statement).%New() 
	Set qStatus 			= objStatement.%Prepare(meuSQL)
	Set rSet 					= objStatement.%Execute()
	;
	Set arrayDados = []
	;
 	While (rSet.%Next()) {
	 	Set codProduto 	= rSet.%Get("ItemNumber")
	 	Set descProduto = rSet.%Get("SearchName")
	 	;
	 	Set descProdFormatado = "("_codProduto_") "_descProduto
	 	;
		Set listDados = {}
		Do listDados.%Set("CodProduto", codProduto)
		Do listDados.%Set("DescProduto", descProdFormatado)
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SalvarAltProcedimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	Set YBED 						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
	Set pSequencia			= $Get(%request.Data("pSequencia",1))
	Set pProcAnt				= $Get(%request.Data("pProcAnt",1))
	Set pProcNovo				= $Get(%request.Data("pProcNovo",1))

	Set objINART = $Get(^INART(YM, pProcNovo, 1))

	Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))
	Set $$$VARAgendamentoProcedimentosGrupoAgendamento(objVARAgendamentoProcedimentos) = $$$INARTGrupodeAgendamento(objINART)
	Set $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos) = pProcNovo

	Quit $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_pSequencia, objVARAgendamentoProcedimentos, $$$YES)]]></Implementation>
</Method>

<Method name="ArmPagamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set pPagProprio						= +$Get(%request.Data("pPagProprio",1))
	Set pPagTipoDocumento			= $Get(%request.Data("pPagTipoDocumento",1))
  Set pPagNumDocumento			= $Get(%request.Data("pPagNumDocumento",1))
  Set pPagNome							= $Get(%request.Data("pPagNome",1))
  Set pPpagValorDesc				= $Get(%request.Data("pPpagValorDesc",1))
	Set pPpagPercDesc					= $Get(%request.Data("pPpagPercDesc",1))
	Set pPpagFormPag					= $Get(%request.Data("pPpagFormPag",1))

	Set objVARAgendamentoAdmissao = $Get(^VARAgendamentoAdmissao(YM, pNumAdmissaoControle, 1))
	
	Set $$$VARAgendamentoAdmissaoPagamentoProprioPaciente(objVARAgendamentoAdmissao) 	= pPagProprio
	Set $$$VARAgendamentoAdmissaoPagamentoTipoDocumento(objVARAgendamentoAdmissao)		= $Select(pPagProprio=0:pPagTipoDocumento,1:"")
	Set $$$VARAgendamentoAdmissaoPagamentoNumeroDocumento(objVARAgendamentoAdmissao)	= $Select(pPagProprio=0:pPagNumDocumento,1:"")
	Set $$$VARAgendamentoAdmissaoPagamentoNome(objVARAgendamentoAdmissao)							= $Select(pPagProprio=0:pPagNome,1:"")
	Set $$$VARAgendamentoAdmissaoPagamentoValorDesconto(objVARAgendamentoAdmissao)		= pPpagValorDesc
	Set $$$VARAgendamentoAdmissaoPagamentoPercentualDescon(objVARAgendamentoAdmissao)	= pPpagPercDesc
	Set $$$VARAgendamentoAdmissaoPagamentoFormadePagamento(objVARAgendamentoAdmissao)	= pPpagFormPag
	
	Set strStatus = $$$Save("VARAgendamentoAdmissao", pNumAdmissaoControle, objVARAgendamentoAdmissao, $$$YES)
	Kill ^VARAgendamentoPagamentos(YM, pNumAdmissaoControle)
	Set tipoPagamento = ""
	For {
		Set tipoPagamento = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento))
		Quit:tipoPagamento=""
		Set contador = ""
		For {
			Set contador = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador))
			Quit:contador=""
			Set nseq = ""
			For {
				Set nseq = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq))
				Quit:nseq=""
				Set objVARAgendamentoPagamentos = ""
				Set $$$VARAgendamentoPagamentosTipodePagamento(objVARAgendamentoPagamentos) = tipoPagamento
				Set $$$VARAgendamentoPagamentosFormadePagamento(objVARAgendamentoPagamentos) = contador
				Set $$$VARAgendamentoPagamentosOperadora(objVARAgendamentoPagamentos) = $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,1)
				Set $$$VARAgendamentoPagamentosNumeroDocumento(objVARAgendamentoPagamentos) = $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,2)
				Set dtTrans = $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,3)
				Set $$$VARAgendamentoPagamentosDataTransacao(objVARAgendamentoPagamentos) = $Select(dtTrans="":"",1:$ZDateH(dtTrans,3))
				Set $$$VARAgendamentoPagamentosValor(objVARAgendamentoPagamentos) = $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,4)
				Set $$$VARAgendamentoPagamentosCriadoEm(objVARAgendamentoPagamentos) = $Horolog
				Set $$$VARAgendamentoPagamentosCriadoPor(objVARAgendamentoPagamentos) = YBED
				Set xContador = $Order(^VARAgendamentoPagamentos(YM, pNumAdmissaoControle, ""),-1) + 1
				Set strStatus = $$$Save("VARAgendamentoPagamentos", pNumAdmissaoControle_$$$COMMA_xContador, objVARAgendamentoPagamentos, $$$YES)
			}
		}
	}
	Write strStatus
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPagamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	
	If (pCodAgendamento = "") {
		Set listRetorno = {}
		Do listRetorno.%ToJSON()
		Return $$$OK
	} 
	
	Set objVARAgendamento 				= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set objVARAgendamentoAdmissao = $Get(^VARAgendamentoAdmissao(YM, pNumAdmissaoControle, 1))
	
	Set listRetorno = {}
	
	Set listRetorno.codPaciente 			= $$$VARAgendamentoCodigodoPaciente(objVARAgendamento)
	Set listRetorno.nomePaciente 			= $$SQLGetPatientName^VARSQL($$$VARAgendamentoCodigodoPaciente(objVARAgendamento))
	Set listRetorno.documentoPaciente = $$SQLGetPatientCPF^VARSQL($$$VARAgendamentoCodigodoPaciente(objVARAgendamento))
	Set listRetorno.pagProprio				= $$$VARAgendamentoAdmissaoPagamentoProprioPaciente(objVARAgendamentoAdmissao)
	Set listRetorno.pagTipoDocumento 	= $$$VARAgendamentoAdmissaoPagamentoTipoDocumento(objVARAgendamentoAdmissao)
	Set listRetorno.pagNumDocumento 	= $$$VARAgendamentoAdmissaoPagamentoNumeroDocumento(objVARAgendamentoAdmissao)
	Set listRetorno.pagNome 					= $$$VARAgendamentoAdmissaoPagamentoNome(objVARAgendamentoAdmissao)
	Set listRetorno.pagValorDesc 			= +$$$VARAgendamentoAdmissaoPagamentoValorDesconto(objVARAgendamentoAdmissao)
	Set listRetorno.pagPercDesc 			= +$$$VARAgendamentoAdmissaoPagamentoPercentualDescon(objVARAgendamentoAdmissao)
	Set listRetorno.pagFormPag 				= $$$VARAgendamentoAdmissaoPagamentoFormadePagamento(objVARAgendamentoAdmissao)
	Set valorPago = 0
	Set contador = ""
	For {
		Set contador = $Order(^VARAgendamentoPagamentos(YM, pNumAdmissaoControle, contador))
		Quit:contador=""
		
		Set objVARAgendamentoPagamentos = $Get(^VARAgendamentoPagamentos(YM, pNumAdmissaoControle, contador, 1))

		Set tipoPagamento 	= $$$VARAgendamentoPagamentosTipodePagamento(objVARAgendamentoPagamentos)
		Set formaPagamento	= $$$VARAgendamentoPagamentosFormadePagamento(objVARAgendamentoPagamentos)
		Set operadora				=	$$$VARAgendamentoPagamentosOperadora(objVARAgendamentoPagamentos)
		Set numDocumento		= $$$VARAgendamentoPagamentosNumeroDocumento(objVARAgendamentoPagamentos)
		Set dtTrans 				=	$$$VARAgendamentoPagamentosDataTransacao(objVARAgendamentoPagamentos)
		Set valor						= $$$VARAgendamentoPagamentosValor(objVARAgendamentoPagamentos)
		Set valorPago 			= valorPago + valor
		Set ^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, formaPagamento, contador) = operadora_Y_numDocumento_Y_$Select(dtTrans="":"",1:$ZDate(dtTrans,3))_Y_valor
	}
	Set listRetorno.valorPago = valorPago

	Do listRetorno.%ToJSON()
	 
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPagProcedimentos">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento="",pNumAdmissaoControle="",pYBED=""</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	If (pCodAgendamento = "") {
		Set YBED 						= $Get(%request.Data("YBED",1))
		Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
		Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	}Else{
		Set YBED = pYBED
	}
	
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))

	Set meuSQL = "Select Sequencia, GrupoAgendamento, Procedimento, PlanodeSaude, Valor From SQLUser.VARAgendamentoProcedimentos "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
	Set meuSQL = meuSQL _ "And ControleAdmissao = '"_pNumAdmissaoControle_"' "
	Set meuSQL = meuSQL _ "And DataHoraAdmissao Is Not Null "
	Set meuSQL = meuSQL _ "Order By CodigodoAgendamento"
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	Set arrayProcedimento = []
	Set valorTotal = 0
	While rSet.%Next() {
		
		If ('..GetOrganizacaoEParticular(rSet.%Get("PlanodeSaude"))) Continue
		
		If (+rSet.%Get("Valor") > 0) {
			Set valor	= +rSet.%Get("Valor")
		}Else{
			Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(rSet.%Get("Procedimento"), rSet.%Get("PlanodeSaude"))
			If ('$IsObject(objRegraComercial)) {
				Set valor	= 0
			}Else{
				Set valor	= objRegraComercial.ValorUnitario
			}
		}
		;Set valor = ##Class(VAR.CSP.VARCadOrcamento).GetValorProcedimento(rSet.%Get("Procedimento"), pCodAgendamento, rSet.%Get("Sequencia"))
		Set valorTotal = valorTotal + valor
		Set list = {}
		Set list.codGrupoAgendamento 	= rSet.%Get("GrupoAgendamento")
		Set list.descGrupoAgendamento = $$GetDescGrupoAgendamento^VARSQL(rSet.%Get("GrupoAgendamento"))
		Set list.codProcedimento 			= rSet.%Get("Procedimento") 
		Set list.descProcedimento 		= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"),1) 
		Set list.valor 								= $FNumber(valor,".",2)
		Do arrayProcedimento.%Push(list)
	}
	Set listRetorno = {}
	Set listRetorno.grid = arrayProcedimento
	Set listRetorno.valorTotal = valorTotal
	If (pYBED = "") {
		Do listRetorno.%ToJSON()
		Return $$$OK
	}Else{
		Return listRetorno
	}]]></Implementation>
</Method>

<Method name="RemoverFormaPagamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pYBED,pTudo=""</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	If (pTudo = "") {
		Set YBED 						= $Get(%request.Data("YBED",1))
		Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
		Set pFormaPagamento = $Get(%request.Data("pFormaPagamento",1)) 
		Set pTudo 					= $Get(%request.Data("pTudo",1)) 
	}Else{
		Set YBED 						= pYBED
	}
	If (pTudo = 1) {
		Kill ^mtemp.VARAgendamentoPagamento(YBED)
	}Else{
		Kill ^mtemp.VARAgendamentoPagamento(YBED, pFormaPagamento)
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPagForPagamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	Set YBED 								= $Get(%request.Data("YBED",1))
	Set pPagFormaPagamento 	= $Replace($Get(%request.Data("pPagFormaPagamento",1)),",","','")

	Set meuSQL = "Select * From SQLUser.VARCondicoesPagamento "
	Set meuSQL = meuSQL _ "Where Company = 0 And FormadePagamento In ('"_pPagFormaPagamento_"')"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	Set arrayRetorno = []
	While rSet.%Next() {
		Set fInfo = $Data(^mtemp.VARAgendamentoPagamento(YBED, rSet.%Get("FormadePagamento"), rSet.%Get("Contador")))
		Set list = {}
		Set list.formaPagamento = rSet.%Get("FormadePagamento")
		Set list.contador 			= rSet.%Get("Contador")
		Set list.descricao 			= rSet.%Get("Descricao")
		Set list.fInfo					= fInfo
		Do arrayRetorno.%Push(list)
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetOperadoraCartao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set arrayRetorno = []
	Set nseq = ""
	For {
		Set nseq = $Order(^VARPARA(0,"OPERADORACARTAO","PT",nseq))
		Quit:nseq=""
		Set list = {}
		Set list.id = nseq
		Set list.text = $Piece(^VARPARA(0,"OPERADORACARTAO","PT",nseq,1),"~",1)
		Do arrayRetorno.%Push(list)
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPagPagamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	Set YBED 								= $Get(%request.Data("YBED",1))
	Set pPagFormaPagamento 	= $Replace($Get(%request.Data("pPagFormaPagamento",1)),",","','")

	Set tipoPagamento = $Piece(pPagFormaPagamento,"|",1)
	Set contador 			= $Piece(pPagFormaPagamento,"|",2)

	Set arrayRetorno = []

	Set nseq = ""
	For {
		Set nseq = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq))
		Quit:nseq?1""
		
		Set list = {}
		Set list.nseq 					= nseq
		Set list.operadora 			= $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,1)
		Set list.operadoraDesc 	= $$SQLGetUserParamDescVAR^VARSQL("OPERADORACARTAO~"_list.operadora)
		Set list.numero 				= $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,2)
		Set list.data 					= $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,3)
		Set list.valor	 				= $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,4)
		Do arrayRetorno.%Push(list)
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="InserirPagamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pPagFormaPagamento,objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set tipoPagamento = $Piece(pPagFormaPagamento,"|",1)
	Set contador 			= $Piece(pPagFormaPagamento,"|",2)
	
	Set nseq = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador,""),-1) + 1

	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""
		Set campo = $Piece(objDados(index),"~",1)
		Set valor = $Piece(objDados(index),"~",2)
		Set piece = 0
		If (campo = "operadora") Set piece = 1
		If (campo = "numero") Set piece = 2
		If (campo = "data") Set piece = 3
		If (campo = "valor") Set piece = 4
		If (piece = 0) Continue
		Set $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador,nseq),Y,piece) = valor
	}
	Return]]></Implementation>
</Method>

<Method name="ExcluirPagamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>pPagFormaPagamento,nseq,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set tipoPagamento = $Piece(pPagFormaPagamento,"|",1)
	Set contador 			= $Piece(pPagFormaPagamento,"|",2)
	
	Kill ^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq)]]></Implementation>
</Method>

<Method name="GetTotalPago">
<ClassMethod>1</ClassMethod>
<FormalSpec>pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set valorTotal = 0
	
	Set tipoPagamento = ""
	For {
		Set tipoPagamento = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento))
		Quit:tipoPagamento=""
		Set contador = ""
		For {
			Set contador = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador))
			Quit:contador=""
			Set nseq = ""
			For {
				Set nseq = $Order(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq))
				Quit:nseq=""
				Set valorTotal = valorTotal + $Piece(^mtemp.VARAgendamentoPagamento(YBED, tipoPagamento, contador, nseq),Y,4)
			}
		}
	}
	Return valorTotal]]></Implementation>
</Method>

<Method name="GetOrganizacaoEParticular">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodOrganizacao</FormalSpec>
<Implementation><![CDATA[	If (pCodOrganizacao = "") Return 0
	Set objOrganizacao  = $Get(^FATOrganizacao(0, pCodOrganizacao, 1))
	Return +$$$FATOrganizacaoEparticular(objOrganizacao)]]></Implementation>
</Method>

<Method name="GetItensEliminar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"

	Set YBED 						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
	Set pSequencia			= $Get(%request.Data("pSequencia",1))

	Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))

	Set codProcedimento = $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)

	Set meuSQL = 	"Select * From SQLUser.VARProcedItensUtilizados Where Company = 0 " _
								"And CodigoProcedimento = '"_codProcedimento_"'"
	Set arrayRetorno = []
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set listDados = {}
		;
		Set considerar = 1
		If ($Data(^VARAgendamentoItensDesc(YM, pCodAgendamento, pSequencia, rSet.%Get("CodigoItem")))) {
			Set considerar = 0
		}
		;
		Set qtde = rSet.%Get("Quantidade")
		If $Data(^VARAgendamentoItensQtdeAlterada(YM, pCodAgendamento, pSequencia, rSet.%Get("CodigoItem"))) {
			Set qtde = $Piece(^VARAgendamentoItensQtdeAlterada(YM, pCodAgendamento, pSequencia, rSet.%Get("CodigoItem"), 1),Y,1)	
		}
		;
		Do listDados.%Set("procedimento", $$SQLGetDescricaoProduto^VARSQL(codProcedimento))
		Do listDados.%Set("item", rSet.%Get("CodigoItem"))
		Do listDados.%Set("itemDesc", "("_rSet.%Get("CodigoItem")_") "_$$SQLGetDescricaoProduto^VARSQL(rSet.%Get("CodigoItem"),1))
		Do listDados.%Set("qtde", qtde)
		Do listDados.%Set("considerar", +considerar, "number")
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmItensEliminar">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pSequencia,pItem,pConsiderar,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"
	;
	Set YBED = pYBED
	;
	If (pConsiderar = 1) {
		Set strStatus = $$$Kill("VARAgendamentoItensDesc", pCodAgendamento_$$$COMMA_pSequencia_$$$COMMA_pItem)	
	}Else{
		Set objeto = YBED_Y_$Horolog
		Set strStatus = $$$Save("VARAgendamentoItensDesc", pCodAgendamento_$$$COMMA_pSequencia_$$$COMMA_pItem, objeto, $$$YES)	
	}
	
	Return strStatus]]></Implementation>
</Method>

<Method name="ArmQtdeItens">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pSequencia,pItem,pQtde,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"
	;
	Set YBED = pYBED
	;
	If (pQtde <= 0) Set pQtde = 1
	Set objeto = pQtde_Y_YBED_Y_$Horolog
	Set strStatus = $$$Save("VARAgendamentoItensQtdeAlterada", pCodAgendamento_$$$COMMA_pSequencia_$$$COMMA_pItem, objeto, $$$YES)	
	
	Return strStatus]]></Implementation>
</Method>

<Method name="GetAdmissao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 					= $Get(%request.Data("YBED",1))
	Set pCodPaciente	= $Get(%request.Data("pCodPaciente",1))
	Set pNumAdmissao	= $Get(%request.Data("pNumAdmissao",1))
	Set pDataAtual 		= +$Horolog
	;
	Set arrayRetorno 	= []
	;
	Set meuSQL = "Select Agend.Numero, Proc.Sequencia, Agend.CodigodoPaciente, Proc.DataAtendimento, "
	Set meuSQL = meuSQL _ "Proc.HoraAtendimento, Proc.GrupoAgendamento,  Proc.Procedimento, Proc.Profissional, "
	Set meuSQL = meuSQL _ "Proc.DataHoraAdmissao, Agend.Situacao, Agend.CriadoEm, Agend.AlteradoEm, "
	Set meuSQL = meuSQL _ "Proc.CodigodaSala, Proc.CodigodoLeito, Proc.Admissao, Proc.ProcedimentoAgendado, "
	Set meuSQL = meuSQL _ "$$GetFATOrganizacaoEparticular^VARSQL(Proc.PlanodeSaude) As Eparticular, "
	Set meuSQL = meuSQL _ "Proc.ControleAdmissao, Agend.DatadeAdmissaoRetroativa From SQLUser.VARAgendamento As Agend "
	Set meuSQL = meuSQL _ "Left Join SQLUser.VARAgendamentoProcedimentos As Proc "
	Set meuSQL = meuSQL _ "On Proc.Company = 0 And Agend.Numero = Proc.CodigodoAgendamento "
	Set meuSQL = meuSQL _ "Where Agend.Company = 0 And Agend.Situacao In ('2', '5', '4') "
	Set meuSQL = meuSQL _ "And Proc.Cancelado = 0 "
	Set meuSQL = meuSQL _ "And Proc.ControleAdmissao Is Not Null "
	If (pCodPaciente '= "") {
		if (pNumAdmissao '= "") Set meuSQL = meuSQL _ "And Proc.ControleAdmissao = '"_pNumAdmissao_"' "
		Set meuSQL = meuSQL _ "And CodigodoPaciente = '"_pCodPaciente_"' "
	}
	Set meuSQL = meuSQL _ "And (Select Count(Proc1.ID) "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamentoProcedimentos As Proc1 Where Proc1.Company = 0 "
	Set meuSQL = meuSQL _ "And Proc1.CodigodoAgendamento=Agend.Numero "
	Set meuSQL = meuSQL _ "And Proc1.Cancelado = 0 "
	If (pCodPaciente '= "") {
		;Set meuSQL = meuSQL _ "And Proc1.DataAtendimento >= '"_pDataAtual_"' "
	}Else{
		Set meuSQL = meuSQL _ "And Proc1.DataAtendimento = '"_pDataAtual_"' "
	}
	Set meuSQL = meuSQL _ ") > 0 "
	Set meuSQL = meuSQL _ "Order By Agend.Numero, Proc.ControleAdmissao, Proc.DataAtendimento, Proc.HoraAtendimento "
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	Set arrayProcedimento = []
	Set numeroAnt = ""
	While rSet.%Next() {
		If (rSet.%Get("ControleAdmissao") '=  numeroAnt) {
			If (arrayProcedimento.%Size() > 0) {
				Set listRetorno.procedimentos 	= arrayProcedimento
				Do arrayRetorno.%Push(listRetorno)	
			}
			Set dataAbertura = rSet.%Get("CriadoEm")
			If (rSet.%Get("AlteradoEm") '= "") {
				Set dataAbertura = rSet.%Get("AlteradoEm")
			}
			
			Set arrayProcedimento 					= []
			Set listRetorno 								= {}
			Set listRetorno.numeroAgend 				= rSet.%Get("Numero") 
			Set listRetorno.numControleAdmissao = rSet.%Get("ControleAdmissao")
			Set listRetorno.codPaciente 		= rSet.%Get("CodigodoPaciente") 
			Set listRetorno.nomePaciente 		= $$SQLGetPatientName^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.dataNascimento 	= $$SQLGetPatientDataNascimento^VARSQL(rSet.%Get("CodigodoPaciente"), 1) 
			Set listRetorno.sexo 						= $$SQLGetSexoPaciente^VARSQL(rSet.%Get("CodigodoPaciente")) 
			Set listRetorno.flagEdicao 			= 1
			Set listRetorno.data						= $ZDateTime(dataAbertura,4,2)
			Set listRetorno.eParticular			= +rSet.%Get("Eparticular")
			Set listRetorno.addProc					= 1
			Set listRetorno.fTentCont				= +$Data(^VARAgendamentoTentContato(YM,rSet.%Get("Numero")))
			Set numeroAnt 									= rSet.%Get("ControleAdmissao")
		}
		If (	rSet.%Get("DataHoraAdmissao") '= "" || 
					(rSet.%Get("DataAtendimento") < +$Horolog) ||
					(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeEdicaodeAgen($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
		{
			;If (rSet.%Get("ProcedimentoAgendado") = 1) {
				Set listRetorno.flagEdicao = 0
			;}
		}
		Set numAdmissao 													= rSet.%Get("Admissao")
		Set numControleAdmissao										= rSet.%Get("ControleAdmissao")
		Set xNumAdmissao													= $Replace(numAdmissao,"/"," ")
		Set listProcedimento = {}
		Set listProcedimento.flagRemarcacao				= 0
		If (xNumAdmissao'=""&&($Data(^VARAgendamentoInconsistencias(0,10,xNumAdmissao)))) {
			Set numInconsistencia = $Order(^VARAgendamentoInconsistencias(0,10,xNumAdmissao,""))
			Set objVARAgendamentoInconsistencia = $Get(^VARAgendamentoInconsistencia(YM, numInconsistencia, 1))
			If ($$$VARAgendamentoInconsistenciaResolvidoPor(objVARAgendamentoInconsistencia) = "") {
				If (rSet.%Get("ProcedimentoAgendado") = 1) {
					Set listProcedimento.flagRemarcacao			= 1
				}
			}
		}
		Set listProcedimento.sequencia						= rSet.%Get("Sequencia")
		Set listProcedimento.dataAtend 						= $ZDate(rSet.%Get("DataAtendimento"),4)  
		Set listProcedimento.dataAtendInt 				= rSet.%Get("DataAtendimento") 
		Set listProcedimento.horaAtend 						= $ZTime(rSet.%Get("HoraAtendimento"),2) 
		Set listProcedimento.horaAtendInt 				= rSet.%Get("HoraAtendimento")
		Set listProcedimento.dataHoraAdmissao			= rSet.%Get("DataHoraAdmissao")
		Set listProcedimento.dataHoraAdmissaoForm = $Select(rSet.%Get("DatadeAdmissaoRetroativa")'="":$ZDate(rSet.%Get("DatadeAdmissaoRetroativa"),4),1:$Replace($ZDateTime(rSet.%Get("DataHoraAdmissao"),4,2)," "," - "))
		Set listProcedimento.codGrupoAgendamento 	= $$GetCodGrupoAgendamento^VARSQL(rSet.%Get("Procedimento"))
		Set listProcedimento.descGrupoAgendamento = $$GetDescGrupoAgendamento^VARSQL(listProcedimento.codGrupoAgendamento)
		Set listProcedimento.codProcedimento 			= rSet.%Get("Procedimento") 
		Set listProcedimento.descProcedimento 		= $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Procedimento"),1) 
		Set listProcedimento.codProfissional 			= rSet.%Get("Profissional") 
		Set listProcedimento.nomeProfissional 		= $$SQLGetProviderName^VARSQL(rSet.%Get("Profissional"))
		Set listProcedimento.procedAgendado 			= rSet.%Get("ProcedimentoAgendado")
		If (rSet.%Get("CodigodaSala") '= "") {
			Set listProcedimento.descSala 					= $$GetDescSalasAtendimentos^VARSQL(rSet.%Get("CodigodaSala"),rSet.%Get("CodigodoLeito"))
		}Else{
			Set listProcedimento.descSala 					= $$GetDescSalasProfissional^VARSQL(rSet.%Get("Profissional"),rSet.%Get("DataAtendimento"),rSet.%Get("HoraAtendimento"))
		}
		Set listProcedimento.flagAdmitir 					= 0
		Set listProcedimento.flagCancelar 				= 1
		;;Admitir
		If (	
				(rSet.%Get("DataHoraAdmissao") = "") && 
				(rSet.%Get("DataAtendimento") = +$Horolog) &&
				(rSet.%Get("HoraAtendimento") > ($Piece($Horolog,",",2)-$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))))
			)
		{
			Set listProcedimento.flagAdmitir = 1
		}
		;;Cancelar
		If (	
					(rSet.%Get("DataHoraAdmissao") '= "") || 
					(rSet.%Get("DataAtendimento") < +$Horolog) ||
					(rSet.%Get("DataAtendimento") = +$Horolog && ((rSet.%Get("HoraAtendimento")+$$$VARAgendamentoConfAgendTempodeAdmissaoAnte($Get(^VARAgendamentoConf(0,0,1)))) < $Piece($Horolog,",",2)))) 
		{
			;If (rSet.%Get("ProcedimentoAgendado") = 1) {
				Set listProcedimento.flagCancelar = 0
			;}
		}
		;
		Set listProcedimento.statusLote = ""
		Set numLote = rSet.%Get("Numero")
		If (rSet.%Get("Numero") '= "") {
			Set numLote = $Order(^FATLoteFaturass(0,1,$Replace(rSet.%Get("Numero"),"/"," "),rSet.%Get("Sequencia"),""))
			If (numLote'="") {
				Set listProcedimento.statusLote = $$$FATLoteStatus($Get(^FATLote(0,numLote,1)))
				If ($$$FATLoteStatus($Get(^FATLote(0,numLote,1)))'=1) Set listRetorno.addProc	= 0
			}
		}
		Set listProcedimento.numLote = numLote
		;
		Do arrayProcedimento.%Push(listProcedimento)
	}
	If (arrayProcedimento.%Size() > 0) {
		Set listRetorno.procedimentos 	= arrayProcedimento
		Do arrayRetorno.%Push(listRetorno)	
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ExcluirItem">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
	Set pSequencia 			= $Get(%request.Data("pSequencia",1))
	Set pCodAdmissao 		= $Get(%request.Data("pCodAdmissao",1))

	Merge ^VARAgendProcedExcluido(0,pCodAgendamento,pSequencia,+$Horolog,$Piece($Horolog,",",2),YBED,1) = ^VARAgendamentoProcedimentos(0,pCodAgendamento,pSequencia,1)

	Write $$$Kill("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_pSequencia)
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetPlanoSaude">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED										= $Get(%request.Data("YBED",1))
	Set pCodAgendamento 				= $Get(%request.Data("pCodAgendamento",1))
	Set pSequencia 							= $Get(%request.Data("pSequencia",1))
	Set pProcedimento 					= $Get(%request.Data("pProcedimento",1))
	Set pCodPlanoSaudeConvenio 	= $Get(%request.Data("pCodPlanoSaudeConvenio",1))
	Set pCodPlanoSaude 					= $Get(%request.Data("pCodPlanoSaude",1)) 
	Set pPlanoSaudeCarteirinha 	= $Get(%request.Data("pPlanoSaudeCarteirinha",1))
	Set pVencCarteirinha 				= $Get(%request.Data("pVencCarteirinha",1))
	if (pVencCarteirinha '= "") Set pVencCarteirinha = $ZDateH(pVencCarteirinha,3,,,,,,,"")

	If (pPlanoSaudeCarteirinha = "") Set pPlanoSaudeCarteirinha = "null"
	If (pVencCarteirinha = "") Set pVencCarteirinha = "null"

	Kill temp 

	Set objVARAgendamento 	= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	If (pCodPlanoSaudeConvenio '= "" && (pCodPlanoSaude '= "") && (pPlanoSaudeCarteirinha '= "") && (pVencCarteirinha '= "")) {
		Set temp(pCodPlanoSaudeConvenio, pCodPlanoSaude, pPlanoSaudeCarteirinha, pVencCarteirinha) = ""
	}
	
	Set xSeq = ""
	For {
		Set xSeq = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSeq))
		Quit:xSeq=""

		Set objeto = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSeq, 1))

		Set rCodConvenio 				= $$$VARAgendamentoProcedimentosConvenio(objeto)
		Set rCodPlanoSaude 			= $$$VARAgendamentoProcedimentosPlanodeSaude(objeto)
		Set rNumCarteirinha 		= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objeto)
		Set rVencCarteirinha 		= $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objeto)

		If (rNumCarteirinha = "") Set rNumCarteirinha = "null"
		If (rVencCarteirinha = "") Set rVencCarteirinha = "null"

		If (rCodConvenio '= "" && (rCodPlanoSaude '= "") && (rNumCarteirinha '= "") && (rVencCarteirinha '= "")) {
			Set temp(rCodConvenio, rCodPlanoSaude, rNumCarteirinha, rVencCarteirinha) = ""
		}
		
	}
	
	Set arrayDS = []
	Set rCodConvenio = ""
	For {
		Set rCodConvenio = $Order(temp(rCodConvenio))
		Quit:rCodConvenio=""
		Set rCodPlanoSaude = ""
		For {
			Set rCodPlanoSaude = $Order(temp(rCodConvenio, rCodPlanoSaude))
			Quit:rCodPlanoSaude=""
			Set rNumCarteirinha = ""
			For {
				Set rNumCarteirinha = $Order(temp(rCodConvenio, rCodPlanoSaude, rNumCarteirinha))
				Quit:rNumCarteirinha=""
				Set rVencCarteirinha = ""
				For {
					Set rVencCarteirinha = $Order(temp(rCodConvenio, rCodPlanoSaude, rNumCarteirinha, rVencCarteirinha))
					Quit:rVencCarteirinha=""
				
					Set listDados = {}
					Set listDados.id = rCodConvenio_Y_rCodPlanoSaude_Y_rNumCarteirinha_Y_rVencCarteirinha
					Set listDados.codConvenio 		= rCodConvenio
					Set listDados.descConvenio 		= ##Class(User.Search.PesquisasJson).GetOrganizacaoNome(rCodConvenio)
					Set listDados.codPlanoSaude 	= rCodPlanoSaude
					Set listDados.descPlanoSaude	= ##Class(User.Search.PesquisasJson).GetOrganizacaoNome(rCodPlanoSaude)
					Set listDados.carteirinha 		= $Select(rNumCarteirinha'="null":rNumCarteirinha,1:"")
					Set listDados.vencimento 			= $Select(rVencCarteirinha'="null":$ZDate(rVencCarteirinha,4),1:"")
				
					Do arrayDS.%Push(listDados)
					
				}
			}
		}
	}
	Set listRetorno = {}
	Set listRetorno.descProcedimento	 = $$SQLGetDescricaoProduto^VARSQL(pProcedimento,1) 
	Set listRetorno.arrayDS 					= arrayDS 
	
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SetPlanoSaude">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pProcedimento 	= $Get(%request.Data("pProcedimento",1))

	Set pCodConvenio 		= $Get(%request.Data("pCodConvenio",1))
	Set pCodPlanSaud 		= $Get(%request.Data("pCodPlanSaud",1))
	Set pCarteirinha 		= $Get(%request.Data("pCarteirinha",1))
	Set pVencimento 		= $Get(%request.Data("pVencimento",1))
	If (pVencimento '= "") {
		If ($Length($Piece(pVencimento,"/",1)) = 4) {
			Set pVencimento = $ZDateH(pVencimento,5)
		}Else{
			Set pVencimento = $ZDateH(pVencimento,4)
		}
	}
	
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia))
		Quit:sequencia=""
		
		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia, 1))
		Set codProcedimento 		= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		Set codProfissional 		= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
		Set datadeAtendimento		= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
		Set horadeAtendimento 	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
		Set codSala					 		= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
		Set codLeito						= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
		Set procedAgendado			= $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
		Set dataHoraAdmissao		= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)
		Set solicitante					= $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos)

		If (codProcedimento '= pProcedimento) Continue
		If (dataHoraAdmissao '= "") Continue
		
		Set $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos)									= pCodConvenio
		Set $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos)							= pCodPlanSaud
		Set $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos)					= pCarteirinha
		Set $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos)		= pVencimento

		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,9) 	= pCodConvenio
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,10) = pCodPlanSaud
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,11) = pCarteirinha
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, sequencia),Y,12) = pVencimento
	
		Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_sequencia, objVARAgendamentoProcedimentos, $$$YES)
		
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetGuia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set pSequencia 						= $Get(%request.Data("pSequencia",1))
	;
	Set listRetorno 	= {}
	Set listRetorno.sequencia = ""
	;
	Set meuSQL = "Select * From SQLUser.VARAgendamentoGuia "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
	Set meuSQL = meuSQL _ "And (CodigodaAdmissao Is Null "
	If (pNumAdmissaoControle '= "") {
		Set meuSQL = meuSQL _ "Or CodigodaAdmissao = '"_pNumAdmissaoControle_"' "
	}
	Set meuSQL = meuSQL _ ") " 
	If (pSequencia '= "") {
		Set meuSQL = meuSQL _ "And Sequencia = '"_pSequencia_"' "
	}
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set listRetorno.sequencia 			= rSet.%Get("Sequencia")
		Set listRetorno.dataAutorizacao = $Select(rSet.%Get("DataAutorizacao")="":"",1:$ZDate(rSet.%Get("DataAutorizacao"),3)) 
		Set listRetorno.senha 					= rSet.%Get("Senha")
		Set listRetorno.validadeSenha 	= $Select(rSet.%Get("DatadeValidadeSenha")="":"",1:$ZDate(rSet.%Get("DatadeValidadeSenha"),3)) 
		Set listRetorno.numGuia 				= rSet.%Get("NumerodaGuiaAtribuidapela") 
		Quit
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SetGuia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set listRetorno = {}
	;
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set pSequencia 						= $Get(%request.Data("pSequencia",1))
	Set pDataAut							= $Get(%request.Data("pDataAut",1))
	Set pSenha 								= $Get(%request.Data("pSenha",1))
	Set pVencSenha					 	= $Get(%request.Data("pVencSenha",1))
	Set pNumGuia						 	= $Get(%request.Data("pNumGuia",1))
	;
	If (pDataAut '= "") Set pDataAut = $ZDateH(pDataAut,3,,,,,,,+$Horolog)
	If (pVencSenha '= "") Set pVencSenha = $ZDateH(pVencSenha,3,,,,,,,+$Horolog)
	;
	If (pSequencia = "") Set pSequencia = $Order(^VARAgendamentoGuia(YM, pCodAgendamento, ""),-1) + 1
	;
	Set objeto = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, pSequencia, 1))
	Set $$$VARAgendamentoGuiaDataAutorizacao(objeto)	= pDataAut
	Set $$$VARAgendamentoGuiaSenha(objeto) = pSenha
	Set $$$VARAgendamentoGuiaDatadeValidadeSenha(objeto) = pVencSenha
	Set $$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objeto) = pNumGuia
	Set $$$VARAgendamentoGuiaCriadoPor(objeto) = YBED
	Set $$$VARAgendamentoGuiaCriadoEm(objeto) = $Horolog
	Set strStatus = $$$Save("VARAgendamentoGuia", pCodAgendamento_$$$COMMA_pSequencia, objeto, $$$YES)
	If ($$$ISERR(strStatus)) {
		Set listRetorno.status = strStatus
	}Else{
		Set listRetorno.status 		= 1
		Set listRetorno.sequencia = pSequencia
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListGuias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set pSequencia 						= $Get(%request.Data("pSequencia",1))
	;
	Set arrayRetorno 	= []
	;
	Set meuSQL = "Select * From SQLUser.VARAgendamentoGuia "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoAgendamento = '"_pCodAgendamento_"' "
	Set meuSQL = meuSQL _ "And (CodigodaAdmissao Is Null "
	If (pNumAdmissaoControle '= "") {
		Set meuSQL = meuSQL _ "Or CodigodaAdmissao = '"_pNumAdmissaoControle_"' "
	}
	Set meuSQL = meuSQL _ ") " 
	Set meuSQL = meuSQL _ "And Sequencia <> '"_pSequencia_"' "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set listRetorno = {}
		Set listRetorno.sequencia 			= rSet.%Get("Sequencia")
		Set listRetorno.descricao 			= "("_rSet.%Get("Sequencia")_") - "_$Select(rSet.%Get("DataAutorizacao")="":"",1:$ZDate(rSet.%Get("DataAutorizacao"),4))
		Set listRetorno.dataAutorizacao = $Select(rSet.%Get("DataAutorizacao")="":"",1:$ZDate(rSet.%Get("DataAutorizacao"),4))  
		Set listRetorno.senha 					= rSet.%Get("Senha")
		Set listRetorno.validadeSenha 	= $Select(rSet.%Get("DatadeValidadeSenha")="":"",1:$ZDate(rSet.%Get("DatadeValidadeSenha"),4)) 
		Set listRetorno.numGuia 				= rSet.%Get("NumerodaGuiaAtribuidapela") 
		Do arrayRetorno.%Push(listRetorno)
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ListProcedimentosGuia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pProcedimento 	= $Get(%request.Data("pProcedimento",1))
	Set pSeqGuia 				= $Get(%request.Data("pSequencia",1))
	Set pXodPlanoSaude	= $Get(%request.Data("pCodPlanoSaude",1))
	k ^zzJULIO


	Set arrayRetorno = []

	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia))
		Quit:sequencia=""
		
		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, sequencia, 1))
		
		If (+$$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1) Continue
		If ($$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendamentoProcedimentos) '= "" &&
			 ($$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendamentoProcedimentos) '= pProcedimento)) {
				 Continue
		}
		If ($$$VARAgendamentoProcedimentosGuia(objVARAgendamentoProcedimentos) '= "" &&
			 ($$$VARAgendamentoProcedimentosGuia(objVARAgendamentoProcedimentos) '= pSeqGuia)) {
				 Continue
		}

		Set codProcedimento 	= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		Set datadeAtendimento	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos)
		Set horadeAtendimento	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos)
		;
		Set list = {}
		Set list.sequencia 		= sequencia
		Set list.procedimento = $$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)
		Set list.atendimento 	= $Select(datadeAtendimento '= "" : $ZDate(datadeAtendimento,4)_" - "_$ZTime(horadeAtendimento,2), 1 : "")
		If ($$$VARAgendamentoProcedimentosGuia(objVARAgendamentoProcedimentos) '= "") {
			Set list.selecionado 	= 1
		}Else{
			Set list.selecionado 	= 0
		}
		Set list.componente 		= ""
		Do arrayRetorno.%Push(list)
		;
		Set codPlanoSaude	= $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos)
		if (codPlanoSaude = "") Set codPlanoSaude = pXodPlanoSaude
		If (codPlanoSaude = "") Set codPlanoSaude	= $$$VARAgendamentoPlanodeSaude($Get(^VARAgendamento(YM, pCodAgendamento, 1)))
		Set arrayComponente = []
		s ^zzJULIO = codProcedimento_"|"_codPlanoSaude
		Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, codPlanoSaude)
		If ($IsObject(objRegraComercial) && (objRegraComercial.possuiComponentes > 0)){
			For i=1:1:objRegraComercial.Componentes.Count(){
				Set componente = objRegraComercial.Componentes.GetAt(i)
				If (componente.Valor <= 0) Continue
				If (objRegraComercial.isObrigatorioGuiaAutorizacao '= 1) Continue
				Set list = {}
				Set list.sequencia 		= sequencia
				Set list.procedimento = $$SQLGetDescricaoProduto^VARSQL(componente.Procedimento,1)
				Set list.atendimento 	= ""
				Set flagSel = 0
				Set:$Data(^VARAgendamentoProcedComponente(YM,pCodAgendamento,sequencia,componente.Procedimento)) flagSel = 1
				Set list.selecionado 	= flagSel
				Set list.componente = componente.Procedimento
				Do arrayRetorno.%Push(list)
			}
		}
		;
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SelecionaGuia">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pSequencia,pComponente,pSeqGuia,pSelecionado,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED						= pYBED

	If (pComponente = "") {
		Set objeto = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))
		Set codProcedimento = $$$VARAgendamentoProcedimentosProcedimento(objeto)
		Set $$$VARAgendamentoProcedimentosGuia(objeto) = $Select(pSelecionado=0:"",1:pSeqGuia)
		Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, pSequencia),Y,13) = $Select(pSelecionado=0:"",1:pSeqGuia)
		Return $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_pSequencia, objeto, $$$YES)
	}Else{
		If (pSelecionado = 0) {
			Return $$$Kill("VARAgendamentoProcedComponente", pCodAgendamento_$$$COMMA_pSequencia_$$$COMMA_pComponente)
		}Else{
			Return $$$Save("VARAgendamentoProcedComponente", pCodAgendamento_$$$COMMA_pSequencia_$$$COMMA_pComponente, pSeqGuia, $$$YES)
		}
	}]]></Implementation>
</Method>

<Method name="Validacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set xStrStatus = ""

	Set YBED									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pCodPlanoSaudeConvenio= $Get(%request.Data("pCodPlanoSaudeConvenio",1))
	Set pCodPlanoSaude				= $Get(%request.Data("pCodPlanoSaude",1))
	Set pPlanoSaudeCarteirinha= $Get(%request.Data("pPlanoSaudeCarteirinha",1))
	Set pVencCarteirinha			= $Get(%request.Data("pVencCarteirinha",1))
	Set pEmpresaContratante		= $Get(%request.Data("pEmpresaContratante",1))
	Set pArrayProcedimentoArm	= $Get(%request.Data("pArrayProcedimentoArm",1)) 
	Set pSolicitante					= $Get(%request.Data("pSolicitante",1))
	Set pObservacao						= $Get(%request.Data("pObservacao",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))

	K ^zzJULIO

	Set ^zzJULIO($now()) = xStrStatus
	;Write "xStrStatus"
	;Return $$$OK
	
	If (pCodAgendamento = "") {
		Write "Falta número do agendamento."
		Return $$$OK
	}

	Set codPaciente = $$$VARAgendamentoCodigodoPaciente($Get(^VARAgendamento(YM, pCodAgendamento, 1)))

	Set xSequencia = ""
	For {
		Set xSequencia = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia))
		Quit:xSequencia=""

		Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, xSequencia, 1))
		
		Set admissao					= $$$VARAgendamentoProcedimentosAdmissao(objVARAgendamentoProcedimentos)
		Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)
		Set codProcedimento 	= $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		Set codProfissional 	= $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos)
		Set datadeAtendimento	= $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 
		Set horadeAtendimento = $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 
		Set codSala					 	= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos)
		Set codLeito					= $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos)
		Set procedAgendado		= $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos)
		Set dataHoraAdmissao	= $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos)

		If ($$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) = 1) Continue 
		If (dataHoraAdmissao '= "") Continue
		If ((","_pArrayProcedimentoArm_",")'[(","_codProcedimento_",")) {
			Set pSituacao = 5
			Continue		
		}
		;		
		Set codConvenio = $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,9)
		Set codPlanoSaude = $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,10) 
		Set numCarteirinha = $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,11) 
		Set vencCarteirinha = $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,12) 
		Set numGuia = $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, xSequencia),Y,13)
		;
		If (codPlanoSaude = "") Set codPlanoSaude = pCodPlanoSaude
		If (codConvenio = "") Set codConvenio = pCodPlanoSaudeConvenio
		If (numCarteirinha = "") Set numCarteirinha = pPlanoSaudeCarteirinha
		Set problemaConvenio = ""
		s ^zzJULIO($now()) = xStrStatus
		If (codPlanoSaude = "") {
			Set xStrStatus = "Informar o plano de saúde para o procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1) 
			Write xStrStatus
			Quit
		}Else{
			Set trocarItem = ""
			Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, codPlanoSaude)
			If ($IsObject(objRegraComercial)) {
				If (+objRegraComercial.TempoTrocaItem > 0 && (objRegraComercial.CodigoItemTroca '= "")) {
					Set dataFinAteTroc = datadeAtendimento
					If (datadeAtendimento = "") Set dataFinAteTroc = +$Horolog
					Set dataIniAteTroc = dataFinAteTroc - objRegraComercial.TempoTrocaItem
					Set xCodItemTroca = objRegraComercial.CodigoItemTroca
					Set trocarItem = ##Class(VAR.CSP.VARCadAgendamento).GetTrocaItem(codPaciente, codConvenio, codPlanoSaude, codProcedimento, objRegraComercial.CodigoItemTroca, dataIniAteTroc, dataFinAteTroc)
				}
				If (trocarItem '= "") {
					Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(xCodItemTroca, codPlanoSaude, pCodAgendamento, xSequencia)
					Set codProcedimento = xCodItemTroca
				}
				If ((objRegraComercial.isInelegivel = 1)) {
					Set xStrStatus = "Procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1) _", não atendido pelo Plano de Saúde informado."
					Quit
				}
				If (objRegraComercial.Componentes.Count() > 0) {
					Set xProcedimentos = ""
					For count = 1 : 1 : objRegraComercial.Componentes.Count() {
						Set objRegraComerCompont = objRegraComercial.Componentes.GetAt(count)
						;
						If (objRegraComerCompont.Procedimento '= "" && ($Data(^VARAgendamentoItensDesc(YM, pCodAgendamento, xSequencia, objRegraComerCompont.Procedimento)))) Continue
						;
						If (objRegraComerCompont.isInelegivel = 1) {
							Set xProcedimentos = xProcedimentos_$Select(xProcedimentos="":"",1:", ")_objRegraComerCompont.DescricaoDoItem_" "
						}
					}
					If (xProcedimentos '= "") {
						Set xStrStatus = "O(s) item(ns) "_xProcedimentos_", não é(são) atendido(s) pelo Plano de Saúde informado."
						Quit
					}
				}	
				
				If ((objRegraComercial.isCarteirinhaObrigatoria = 1) && (numCarteirinha = "")) {
					Set xStrStatus = "Procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)_", pendente do numero da carterinha."
					Quit
				}
				If (objRegraComercial.isCarteirinhaObrigatoria = 1 && (objRegraComercial.CarteirinhaMin > 0) && (objRegraComercial.CarteirinhaMax > 0) && ($Length(numCarteirinha) > objRegraComercial.CarteirinhaMax || ($Length(numCarteirinha) < objRegraComercial.CarteirinhaMin))) {
					Set xStrStatus = "Procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)_", com numero de caracteres invalidos."
					Quit
				}
				If ((objRegraComercial.isObrigatorioGuiaAutorizacao = 1)) {
					If (numGuia = "") {
						Set xStrStatus = "Procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)_", pendente de Guia e Senhas de Autorização."
						Quit
					}
					If (problemaConvenio="") {
						Set objGuia = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, numGuia, 1))
						If (objRegraComercial.isObrigatorioNumeroGuiaOperadora = 1 && ($$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objGuia) = "")) {
							Set xStrStatus = "Procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)_", pendente do Número da Guia Atribuída pela Operadora."
							Quit
						}
						If (objRegraComercial.isObrigatorioSenhaAutorizacao = 1 && ($$$VARAgendamentoGuiaSenha(objGuia) = "")) {
							Set xStrStatus = "Procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)_", pendente da Senhas de Autorização."
							Quit
						}
					}		
				}	
				If (objRegraComercial.isCarteirinhaObrigatoria = 1 && (numCarteirinha = "")) {
					Set xStrStatus = "Procedimento "_$$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)_", pendente do numero da carterinha."
					Quit
				}
				;
				If ($IsObject(objRegraComercial) && (objRegraComercial.possuiComponentes > 0)){
					For i=1:1:objRegraComercial.Componentes.Count(){
						Set componente = objRegraComercial.Componentes.GetAt(i)
						If (componente.Valor <= 0) Continue
						If (objRegraComercial.isObrigatorioGuiaAutorizacao '= 1) Continue
						If ('$Data(^VARAgendamentoProcedComponente(YM,pCodAgendamento, xSequencia,componente.Procedimento))) {
							Set xStrStatus = "Favor informar a Guias/Senhas de autorização para os componentes."
							Quit
						}
					}
					If (xStrStatus '= "") Quit
				}
				;
			}Else{
				Set xStrStatus = "Problema para carregar a regra do plano de saúde."
				Quit
			}
		}
	}
	Write xStrStatus
	Return $$$OK]]></Implementation>
</Method>

<Method name="validarParticular">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"
	
	Set pCodAgendamento 			= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set YBED 									= $Get(%request.Data("YBED",1))
	
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	
	Set strStatus = 1
	Set temProcPart = '$$$OK
	
	Set meuSQL = "Select * From SQLUser.VARAgendamentoProcedimentos "
	Set meuSQL = meuSQL _ "Where Company = 0 And ControleAdmissao = '"_pNumAdmissaoControle_"'"
	
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set codPlanoSaude = rSet.%Get("PlanodeSaude")
		If (codPlanoSaude = "") Set codPlanoSaude = $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
		If ('..GetOrganizacaoEParticular(codPlanoSaude)) Continue
		Set temProcPart = $$$OK
		Quit
	}	
	If (temProcPart = $$$OK) {
		Set retorno = ..GetPagProcedimentos(pCodAgendamento, pNumAdmissaoControle, YBED)
		Set valorTotal = retorno.valorTotal
		;
		Set xContador = "", valotTotalPago = 0
		For {
			Set xContador = $Order(^VARAgendamentoPagamentos(YM, pNumAdmissaoControle, xContador))
			Quit:xContador=""
			Set valotTotalPago = valotTotalPago + $Piece(^VARAgendamentoPagamentos(YM, pNumAdmissaoControle, xContador, 1),Y,5)
		}
		If (valorTotal <= valotTotalPago) {
			Set strStatus = 2
		}
	}else{
		Set strStatus = 3
	}
	Write strStatus
	Return strStatus]]></Implementation>
</Method>

<Method name="GetConvenioAlteracao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"
	
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pSequencia			= $Get(%request.Data("pSequencia",1))
	Set pComponente			= $Get(%request.Data("pComponente",1))
	
	k ^zzJULIO
	s ^zzJULIO = pComponente
	
	Set YBED 						= $Get(%request.Data("YBED",1))

	Set objeto = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))

	Set procedimento	= $$$VARAgendamentoProcedimentosProcedimento(objeto)
	Set planoSaude 		= $$$VARAgendamentoProcedimentosPlanodeSaude(objeto)
	Set dtVencimento 	= $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objeto)

	if (pComponente '= "") {
		;
		Set listDados = {}
		Set listDados.convenio 			= $$$VARAgendamentoProcedimentosConvenio(objeto)
		Set listDados.planoSaude 		= $$$VARAgendamentoProcedimentosPlanodeSaude(objeto)
		Set listDados.carteirinha 	= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objeto)
		Set listDados.dtVencimento 	= $Select(dtVencimento="":"",1:$ZDate(dtVencimento,3))
		Set listDados.codGuia 			= $Piece($Get(^VARAgendamentoProcedComponente(YM, pCodAgendamento, pSequencia, pComponente, 1)),Y,1)
		Set listDados.componentes		= ""
		Set listDados.qtde 					= "" 	
		If ($Data(^VARAgendamentoItensQtdeAlterada(YM, pCodAgendamento, pSequencia, pComponente))) {
			Set listDados.qtde = $Piece(^VARAgendamentoItensQtdeAlterada(YM, pCodAgendamento, pSequencia, pComponente, 1),Y,1)	
		}ElseIf ($Data(^VARProcedItensUtilizados(YM, procedimento, pComponente))) {
			Set listDados.qtde = $Piece(^VARProcedItensUtilizados(YM, procedimento, pComponente, 1),Y,1)	
		}
		Do listDados.%ToJSON()
		Return $$$OK
	}
	
	Set arrayComponente = []
	Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(procedimento, planoSaude, pCodAgendamento, pSequencia)
	If ($IsObject(objRegraComercial) && (objRegraComercial.possuiComponentes > 0)){
		For i=1:1:objRegraComercial.Componentes.Count(){
			Set componente = objRegraComercial.Componentes.GetAt(i)
			;If (componente.Valor <= 0) Continue
			Set list = {}
			Set list.id		= componente.Procedimento
			Set list.text = $$SQLGetDescricaoProduto^VARSQL(componente.Procedimento,1)
			Set list.valor = componente.Valor
			Do arrayComponente.%Push(list)
		}
	}
	
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set dataExecucao = $$$VARAgendamentoDatadeAdmissaoRetroativa(objVARAgendamento)
	
	
	Set listDados = {}
	Set listDados.procedimento 	= $$SQLGetDescricaoProduto^VARSQL($$$VARAgendamentoProcedimentosProcedimento(objeto),1)
	Set listDados.solicitante 	= $$$VARAgendamentoProcedimentosSolicitante(objeto)
	Set listDados.dataExecucao = $Select(dataExecucao="":"",1:$ZDate(dataExecucao,3))
	Set listDados.convenio 			= $$$VARAgendamentoProcedimentosConvenio(objeto)
	Set listDados.planoSaude 		= $$$VARAgendamentoProcedimentosPlanodeSaude(objeto)
	Set listDados.carteirinha 	= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objeto)
	Set listDados.dtVencimento 	= $Select(dtVencimento="":"",1:$ZDate(dtVencimento,3))
	Set listDados.codGuia 			= $$$VARAgendamentoProcedimentosGuia(objeto)
	Set listDados.componentes		= arrayComponente
	Do listDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmConvenioAlteracao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0 
	Set Y  = "~"
	
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pSequencia			= $Get(%request.Data("pSequencia",1))
	Set pCodConvenio		= $Get(%request.Data("pCodConvenio",1))
	Set pCodPlano				= $Get(%request.Data("pCodPlano",1))
	Set pNumCarteirinha	= $Get(%request.Data("pNumCarteirinha",1))
	Set pDtCarteirinha	= $Get(%request.Data("pDtCarteirinha",1))
	Set pValor					= $Get(%request.Data("pValor",1))
	Set xValor					= ""
	
	Set pCodGuia					= $Get(%request.Data("pCodGuia",1))
	Set pDtAutorizacao		= $Get(%request.Data("pDtAutorizacao",1))
	Set pSenha						= $Get(%request.Data("pSenha",1))
	Set pDtValidade				= $Get(%request.Data("pDtValidade",1))
	Set pNumGuiaOperadora	= $Get(%request.Data("pNumGuiaOperadora",1))

	Set pSolicitante		= $Get(%request.Data("pSolicitante",1))
	
	Set pDataExecucao		= $Get(%request.Data("pDataExecucao",1))
	
	Set pComponente	= $Get(%request.Data("pComponente",1))
	Set pQtdeComp		= $Get(%request.Data("pQtdeComp",1))

	Set YBED 						= $Get(%request.Data("YBED",1))
	
	Set objeto = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))
	Set codProcedimento = $$$VARAgendamentoProcedimentosProcedimento(objeto)
	
	If (pCodConvenio = "") {
		Write "Informar o convênio."
		Return $$$OK
	}
	If (pCodPlano = "") {
		Write "Informar o plano de saúde."
		Return $$$OK
	}
	Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, pCodPlano)
	If (objRegraComercial.isInelegivel = 1) {
		Write "Procedimento não atendido pelo Plano de Saúde informado."
		Return $$$OK
	}
	Set xValor = objRegraComercial.Valor
	If (objRegraComercial.Componentes.Count() > 0) {
		Set xProcedimentos = ""
		For count = 1 : 1 : objRegraComercial.Componentes.Count() {
			Set objRegraComerCompont = objRegraComercial.Componentes.GetAt(count)
			;
			If (objRegraComerCompont.Procedimento '= "" && ($Data(^VARAgendamentoItensDesc(YM, pCodAgendamento, pSequencia, objRegraComerCompont.Procedimento)))) Continue
			;
			If (objRegraComerCompont.isInelegivel = 1) {
				Set xProcedimentos = xProcedimentos_$Select(xProcedimentos="":"",1:", ")_objRegraComerCompont.DescricaoDoItem_" "
			}
		}
		If (xProcedimentos '= "") {
			Write "O(s) item(ns) "_xProcedimentos_", não é(são) atendido(s) pelo Plano de Saúde informado."
			Return $$$OK
		}
	}	
	If ((objRegraComercial.isCarteirinhaObrigatoria = 1) && (pNumCarteirinha = "")) {
		Write "Favor informar numero da carterinha."
		Return $$$OK
	}
	If (objRegraComercial.isCarteirinhaObrigatoria = 1 && (objRegraComercial.CarteirinhaMin > 0) && ($Length(pNumCarteirinha) > objRegraComercial.CarteirinhaMax || ($Length(pNumCarteirinha) < objRegraComercial.CarteirinhaMin))) {
		Write "Numero de caracteres invalidos para a carteirinha."
		Return $$$OK
	}
	
	Set objetoGuia = ""
	If (pCodGuia = "" && (pDtAutorizacao '= "" || (pSenha '= "") || (pDtValidade '= "") || (pNumGuiaOperadora '= ""))) {
		If (pDtAutorizacao '= "") Set pDtAutorizacao = $ZDateH(pDtAutorizacao,3,,,,,,,+$Horolog)
		If (pDtValidade '= "") Set pDtValidade = $ZDateH(pDtValidade,3,,,,,,,+$Horolog)
		;
		If (pDtAutorizacao = "") {
			Write "Informe a data de autorização."
			Return $$$OK
		}	
		;	
		Set pCodGuia = $Order(^VARAgendamentoGuia(YM, pCodAgendamento, ""),-1) + 1
		;
		Set objetoGuia = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, pCodGuia, 1))
		Set $$$VARAgendamentoGuiaDataAutorizacao(objetoGuia)	= pDtAutorizacao
		Set $$$VARAgendamentoGuiaSenha(objetoGuia) = pSenha
		Set $$$VARAgendamentoGuiaDatadeValidadeSenha(objetoGuia) = pDtValidade
		Set $$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objetoGuia) = pNumGuiaOperadora
		Set $$$VARAgendamentoGuiaCriadoPor(objetoGuia) = YBED
		Set $$$VARAgendamentoGuiaCriadoEm(objetoGuia) = $Horolog
	}
	If (objRegraComercial.isObrigatorioGuiaAutorizacao = 1 && (pCodGuia = "")) {
		Write "Favor informar a Guia de Autorização."
		Return $$$OK
	}
	
	If (objetoGuia '= "") {
		Set strStatus = $$$Save("VARAgendamentoGuia", pCodAgendamento_$$$COMMA_pCodGuia, objetoGuia, $$$YES)
	}	
	
	If (pComponente = "") {
		Set $$$VARAgendamentoProcedimentosConvenio(objeto)								= pCodConvenio	
		Set $$$VARAgendamentoProcedimentosPlanodeSaude(objeto)						= pCodPlano
		Set $$$VARAgendamentoProcedimentosNumdaCarteirinha(objeto)				= pNumCarteirinha
		Set $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objeto)	= $Select(pDtCarteirinha="":"",1:$ZDateH(pDtCarteirinha,3))
		Set $$$VARAgendamentoProcedimentosGuia(objeto)										= pCodGuia
		Set $$$VARAgendamentoProcedimentosSolicitante(objeto)							= pSolicitante

		If (+pDataExecucao '= 0) {
			Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
			Set $$$VARAgendamentoDatadeAdmissaoRetroativa(objVARAgendamento) = $ZDateH(pDataExecucao,3,,,,,,,,"")
			Set strStatus = $$$Save("VARAgendamento", pCodAgendamento, objVARAgendamento, $$$YES)
		}
		;
		If ($$$VARAgendamentoProcedimentosValor(objeto) '= "") {
			Set $$$VARAgendamentoProcedimentosValor(objeto)									= pValor
		}Else{
			If (+pValor '= +xValor) {
				Set $$$VARAgendamentoProcedimentosValor(objeto)									= pValor
			}
		}
		;
		Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_pSequencia, objeto, $$$YES)
	}Else{
		If (pQtdeComp < 0) Set pQtdeComp = 0
		Set objeto = pQtdeComp_Y_YBED_Y_$Horolog
		Set strStatus = $$$Save("VARAgendamentoItensQtdeAlterada", pCodAgendamento_$$$COMMA_pSequencia_$$$COMMA_pComponente, objeto, $$$YES)	
		Set:'$$$ISERR(strStatus) strStatus = $$$Save("VARAgendamentoProcedComponente", pCodAgendamento_$$$COMMA_pSequencia_$$$COMMA_pComponente, pCodGuia, $$$YES)
	}
	Write strStatus
	Return $$$OK]]></Implementation>
</Method>

<Method name="GerarAdmissaoViaIntegracao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCliente,pNomePaciente,pDataNascimento,pSexo,pArrayProcedimentos:%Library.DynamicArray,pData,pYBED,&amp;rRetorno:%Library.DynamicObject</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0 
	Set Y  		= "~"
	Set YBED 	= pYBED
	;
	Set rRetorno = {}
	Set strStatus = $$$OK
	Set (codPaciente, numAdmissaoControle, mensagem) = ""
	Kill procedimentos
	;
	Tstart
	Try{
		;Tratamento 
		If ('$Data(^VARParametrosIntegracoes(0,pCliente))) {
			Set strStatus = '$$$OK
			Set mensagem	= "Tabela de padrões da integração não cadastrada"	
			Quit
		}
		Set objParamIntegracoes = ^VARParametrosIntegracoes(0,pCliente,1)
		Set codConvenio = $$$VARParametrosIntegracoesConvenio(objParamIntegracoes)
		Set codPlanSaud = $$$VARParametrosIntegracoesPlanodeSaude(objParamIntegracoes) 
		If (codConvenio = "") {
			Set strStatus = '$$$OK
			Set mensagem	= "Convênio não cadastrado na rotina configuração dos Parâmetros da Integração."	
			Quit
		}		
		If (codPlanSaud = "") {
			Set strStatus = '$$$OK
			Set mensagem	= "Plano de Saúde não cadastrado na rotina configuração dos Parâmetros da Integração."	
			Quit
		}		
		;Tratamento dos procedimentos
		If (pArrayProcedimentos.%Size() = 0) {
			Set strStatus = '$$$OK
			Set mensagem	= "Requisição sem procedimento."	
			Quit
		}
		If ('$Data(^VARParametrosIntegracoesDePara(0,pCliente,"PROCEDIMENTO"))) {
			Set strStatus = '$$$OK
			Set mensagem	= "Tabela De/Para não cadastrada"	
			Quit
		}
		Set procSemDePara = ""
		For count = 0 : 1 : (pArrayProcedimentos.%Size()-1) {
			Set codProcedimento = pArrayProcedimentos.%Get(count)
			Set codAlpha = ""
			&SQL(
				Select Para Into :codAlpha From SQLUser.VARParametrosIntegracoesDePara
				Where Company = :YM And Cliente = :pCliente And De = :codProcedimento
			)
			If (codAlpha = "") Set procSemDePara = procSemDePara _$Select(procSemDePara="":"",1:", ")_ codProcedimento
			Else  Set procedimentos(codAlpha) = $Get(procedimentos(codAlpha)) + 1
		}
		If (procSemDePara '= "") {
			Set strStatus = '$$$OK
			Set mensagem	= "Falta cadastra a tabela De/Para para o(s) seguinte(s) produto(s): "_procSemDePara	
			Quit
		}		
		;
		;Tratamento do Paciente
		Set xNomePaciente = $ZStrip($ZConvert(pNomePaciente,"U"),"*"," ")
		Set pSexo = $Select(pSexo="F":2,pSexo="M":1,1:"")
		&SQL(
			Select PatientID Into :codPaciente From SQLUser.MEDPatient
			Where Company = :YM And (%Upper(Name) = %Upper(:xNomePaciente) Or %Upper(Name) = %Upper(:pNomePaciente)) 
			And %Internal(DOB) = :pDataNascimento And Gender = :pSexo
		)
		If (codPaciente = "") {
			Set objMEDPatient = ""
			Set $$$MEDPatientName(objMEDPatient) = pNomePaciente
			Set $$$MEDPatientGender(objMEDPatient) = pSexo
			Set $$$MEDPatientDOB(objMEDPatient) = pDataNascimento
			Set $$$MEDPatientCreatedDate(objMEDPatient) = $Horolog
			Set $$$MEDPatientCreatedBy(objMEDPatient) = YBED
			Set codPaciente = $$GetNextNumber^COMUtils("MEDPatient","")
			Set strStatus = $$$Save("MEDPatient",codPaciente,objMEDPatient,$$$YES)
			If ($$$ISERR(strStatus)) {
				Set mensagem	= "Erro ao armazenar o paciente."	
				Set strStatus = '$$$OK
				Quit
			}
		}
		;
		;Tratamento da Admissão
		Set objVARAgendamento = ""
		Set $$$VARAgendamentoCodigodoPaciente(objVARAgendamento) 	= codPaciente
		Set $$$VARAgendamentoSituacao(objVARAgendamento) 				 	= 4
		Set $$$VARAgendamentoCriadoEm(objVARAgendamento) 					= $Horolog
		Set $$$VARAgendamentoCriadoPor(objVARAgendamento) 				= YBED
		Set $$$VARAgendamentoPlanodeSaude(objVARAgendamento) 			= codPlanSaud
		Set $$$VARAgendamentoConvenio(objVARAgendamento)					= codConvenio
		Set $$$VARAgendamentoObservacao(objVARAgendamento) 				= "Integração "_pCliente
		Set $$$VARAgendamentoEnviarEmail(objVARAgendamento) 			= 0
		Set codAgendamento = 	$$GetNextNumber^COMUtils("VARAgendamento","")
		Set strStatus = $$$Save("VARAgendamento", codAgendamento, objVARAgendamento, $$$YES)
		If ($$$ISERR(strStatus)) {
			Set mensagem	= "Erro na geração do agendamento."	
			Set strStatus = '$$$OK
			Quit
		}
		;
		Set numAdmissaoControle = $$GetNextNumber^COMUtils("VARAgendamentoAdmissao","")
		Set objVARAgendamentoAdmissao = codAgendamento_Y_YBED_Y_+$Horolog_Y_$Piece($Horolog,",",2)
		Set strStatus = $$$Save("VARAgendamentoAdmissao", numAdmissaoControle, objVARAgendamentoAdmissao, $$$YES)
		If ($$$ISERR(strStatus)) {
			Set mensagem	= "Erro na geração da admissão."	
			Set strStatus = '$$$OK
			Quit
		}
		;
		Set seqProcedimento = ""
		Set codProcedimento = ""
		For {
			Set codProcedimento = $Order(procedimentos(codProcedimento))
			Quit:codProcedimento=""
			;
			Set seqProcedimento 	= seqProcedimento + 1
			Set qtdeProcedimento	= procedimentos(codProcedimento)
			;
			Set codGrupoAgendamento = $$GetCodGrupoAgendamento^VARSQL(codProcedimento)
			Set objINART = $Get(^INART(YM, codProcedimento, 1))
			;
			Set objProcedimento = ""
			Set $$$VARAgendamentoProcedimentosAdmissao(objProcedimento) 						= ""
			Set $$$VARAgendamentoProcedimentosGrupoAgendamento(objProcedimento) 		= codGrupoAgendamento
			Set $$$VARAgendamentoProcedimentosProcedimento(objProcedimento) 				= codProcedimento
			Set $$$VARAgendamentoProcedimentosDataAtendimento(objProcedimento) 			= pData
			Set $$$VARAgendamentoProcedimentosHoraAtendimento(objProcedimento) 			= $Piece($Horolog,",",2)
			Set $$$VARAgendamentoProcedimentosCancelado(objProcedimento) 						= 0
			Set $$$VARAgendamentoProcedimentosDataAtendimento(objProcedimento) 			= 0
			Set $$$VARAgendamentoProcedimentosCancelado(objProcedimento) 						= 0
			Set $$$VARAgendamentoProcedimentosDataHoraAdmissao(objProcedimento) 		= pData_","_$Piece($Horolog,",",2)
			Set $$$VARAgendamentoProcedimentosProcedimentoAgendado(objProcedimento) = +$$$INARTRequerAgendamento(objINART)
			Set $$$VARAgendamentoProcedimentosEncaixe(objProcedimento) 							= 0
			Set $$$VARAgendamentoProcedimentosControleAdmissao(objProcedimento) 		= numAdmissaoControle
			Set $$$VARAgendamentoProcedimentosPlanodeSaude(objProcedimento) 				= codPlanSaud
			Set $$$VARAgendamentoProcedimentosConvenio(objProcedimento) 						= codConvenio
			Set $$$VARAgendamentoProcedimentosQtdeProcedimento(objProcedimento) 		= qtdeProcedimento
			Set strStatus = $$$Save("VARAgendamentoProcedimentos", codAgendamento_$$$COMMA_seqProcedimento, objProcedimento, $$$YES)	
			If ($$$ISERR(strStatus)) {
				Set mensagem	= "Erro na geração da admissão."	
				Set strStatus = '$$$OK
				Quit
			}
		}
		If (mensagem '= "") Quit	
		;
	}
	Catch(err){
		#dim err as %Exception.SystemException
		set mensagem 	= err.DisplayString()
		set strStatus	=	$system.Status.GetErrorText(err.AsStatus())
	}
	if strStatus {
		Tcommit
		set rRetorno.status 			= strStatus
		Set rRetorno.mensagem 		= ""
		Set rRetorno.codPaciente 	= codPaciente
		Set rRetorno.numAdmissao 	= numAdmissaoControle
	}Else{
		Trollback
		Set rRetorno.status 	= strStatus
		Set rRetorno.mensagem = mensagem
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="RecuperarAdmissao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 						= 0 
	Set Y  						= "~"
	Set YBED 					= $Get(%request.Data("YBED",1))
	Set pNumAdmissao 	= $Get(%request.Data("pNumAdmissao",1))
	;
	Set listRetorno = {}
	if (pNumAdmissao '= "") {
		If '$Data(^VARAgendamentoAdmissao(YM, pNumAdmissao)) {
			Set listRetorno.mensagem = "Admissão não cadastrada."	
			Set listRetorno.codPaciente = ""
		}else{
			Set objVARAgendamentoAdmissao = $Get(^VARAgendamentoAdmissao(YM,pNumAdmissao,1))
			Set codAgendamento = $$$VARAgendamentoAdmissaoNumerodoAgendamento(objVARAgendamentoAdmissao)
			Set objAgendamento = $Get(^VARAgendamento(YM, codAgendamento, 1))
			Set listRetorno.codPaciente = $$$VARAgendamentoCodigodoPaciente(objAgendamento)
			Set listRetorno.mensagem = ""	
		}
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetHistorico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle 	= $Get(%request.Data("pNumAdmissaoControle",1))
	;
	Set xCodAgendamento = $Replace(pCodAgendamento,"/",",")
	;
	Set retorno = []
	Set objVARAgendamento = $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set dtAlteracao 			= $$$VARAgendamentoCriadoEm(objVARAgendamento)-1
	Set tabela 						= "VARAgendamentoProcedimentos"
	;
	For {
		Set dtAlteracao = $Order(^WWWPRO(YM, tabela, dtAlteracao))
		Quit:dtAlteracao=""
		Set hrAlteracao	= ""
		For {
			Set hrAlteracao = $Order(^WWWPRO(YM, tabela, dtAlteracao, hrAlteracao))
			Quit:hrAlteracao=""
			Set usuario = ""
			For {
				Set usuario = $Order(^WWWPRO(YM, tabela, dtAlteracao, hrAlteracao, usuario))
				Quit:usuario=""
				Set ref = xCodAgendamento_",0"
				For {
					Set ref = $Order(^WWWPRO(YM, tabela, dtAlteracao, hrAlteracao, usuario, ref))
					Quit:ref=""
					Quit:$Piece(ref,",",1,2)'=xCodAgendamento
					
					Set seqAgend = $Piece(ref,",",3)
					
					Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, seqAgend, 1))
					If ($$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendamentoProcedimentos) '= pNumAdmissaoControle) Continue
					
					Set objAntes 	= $Get(^WWWPRO(0, tabela, dtAlteracao, hrAlteracao, usuario, ref, 0, 1))
					Set objDepois = $Get(^WWWPRO(0, tabela, dtAlteracao, hrAlteracao, usuario, ref, 1, 1))

					Set (objGuiaA, objGuiaD) = ""
					Set:$$$VARAgendamentoProcedimentosGuia(objAntes) objGuiaA = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, $$$VARAgendamentoProcedimentosGuia(objAntes), 1))
					Set:$$$VARAgendamentoProcedimentosGuia(objDepois) objGuiaD = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, $$$VARAgendamentoProcedimentosGuia(objDepois), 1))
	
					Set listA = {}
					Set listA.contAdmissao 			= pNumAdmissaoControle_" Sequência: "_seqAgend
					Set listA.paciente					= $$SQLGetPatientName^VARSQL($$$VARAgendamentoCodigodoPaciente(objVARAgendamento))
					Set listA.dtLog							= $ZDate(dtAlteracao,4)
					Set listA.hrLog							= $ZTime(hrAlteracao,2)
					Set listA.usuario						= $$SQLGetUserName^VARSQL(usuario)
					Set listA.antigoNovo				= "Antigo"
					Set listA.grupo							= $$GetDescGrupoAgendamento^VARSQL($$$VARAgendamentoProcedimentosGrupoAgendamento(objAntes))
					Set listA.procedimento			= $$SQLGetDescricaoProduto^VARSQL($$$VARAgendamentoProcedimentosProcedimento(objAntes),1)
					Set listA.profissional			= $$SQLGetProviderName^VARSQL($$$VARAgendamentoProcedimentosProfissional(objAntes))
					Set listA.sala							= $$GetDescSalasAtendimentos^VARSQL($$$VARAgendamentoProcedimentosCodigodaSala(objAntes))
					Set listA.leito							= $$GetDescLeitoAtendimentos^VARSQL($$$VARAgendamentoProcedimentosCodigodaSala(objAntes), $$$VARAgendamentoProcedimentosCodigodoLeito(objAntes))
					Set listA.qtde							= $$$VARAgendamentoProcedimentosQtdeProcedimento(objAntes)
					Set listA.valor							= $$$VARAgendamentoProcedimentosValor(objAntes)
					Set listA.dataAtendimento		= $Select($$$VARAgendamentoProcedimentosDataAtendimento(objAntes)="":"",1:$ZDate($$$VARAgendamentoProcedimentosDataAtendimento(objAntes),3))
					Set listA.horaAtendimento		= $Select($$$VARAgendamentoProcedimentosHoraAtendimento(objAntes)="":"",1:$ZTime($$$VARAgendamentoProcedimentosHoraAtendimento(objAntes),2))
					Set listA.dataHoraAdmisao		= $Select($$$VARAgendamentoProcedimentosDataHoraAdmissao(objAntes)="":"",1:$ZDateTime($$$VARAgendamentoProcedimentosDataHoraAdmissao(objAntes),3,2))
					Set listA.solicitante				= $$SQLGetProviderName^VARSQL($$$VARAgendamentoProcedimentosSolicitante(objAntes))
					Set listA.numAgendamento		= pCodAgendamento
					Set listA.numAdmissao				= $$$VARAgendamentoProcedimentosAdmissao(objAntes)
					Set listA.convenio					= $$GetOrganizacaoNome^VARSQL($$$VARAgendamentoProcedimentosConvenio(objAntes))
					Set listA.planoSaude				= $$GetOrganizacaoNome^VARSQL($$$VARAgendamentoProcedimentosPlanodeSaude(objAntes))
					Set listA.carteirinha				= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objAntes)
					Set listA.vencCarteirinha		= $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objAntes)
					Set listA.dtAutorizacao			= $Select($$$VARAgendamentoGuiaDataAutorizacao(objGuiaA)="":"",1:$ZDate($$$VARAgendamentoGuiaDataAutorizacao(objGuiaA),3))
					Set listA.senha							= $$$VARAgendamentoGuiaSenha(objGuiaA)
					Set listA.dtValidadeSenha		= $Select($$$VARAgendamentoGuiaDatadeValidadeSenha(objGuiaA)="":"",1:$ZDate($$$VARAgendamentoGuiaDatadeValidadeSenha(objGuiaA),3))
					Set listA.numGuiaAtr				= $$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objGuiaA)

					Set listD = {}
					Set listD.contAdmissao 			= pNumAdmissaoControle_" Sequência: "_seqAgend
					Set listD.paciente					= $$SQLGetPatientName^VARSQL($$$VARAgendamentoCodigodoPaciente(objVARAgendamento))
					Set listD.dtLog							= $ZDate(dtAlteracao,4)
					Set listD.hrLog							= $ZTime(hrAlteracao,2)
					Set listD.usuario						= $$SQLGetUserName^VARSQL(usuario)
					Set listD.antigoNovo				= "Depois"
					Set listD.grupo							= $$GetDescGrupoAgendamento^VARSQL($$$VARAgendamentoProcedimentosGrupoAgendamento(objDepois))
					Set listD.procedimento			= $$SQLGetDescricaoProduto^VARSQL($$$VARAgendamentoProcedimentosProcedimento(objDepois),1)
					Set listD.profissional			= $$SQLGetProviderName^VARSQL($$$VARAgendamentoProcedimentosProfissional(objDepois))
					Set listD.sala							= $$GetDescSalasAtendimentos^VARSQL($$$VARAgendamentoProcedimentosCodigodaSala(objDepois))
					Set listD.leito							= $$GetDescLeitoAtendimentos^VARSQL($$$VARAgendamentoProcedimentosCodigodaSala(objDepois), $$$VARAgendamentoProcedimentosCodigodoLeito(objDepois))
					Set listD.qtde							= $$$VARAgendamentoProcedimentosQtdeProcedimento(objDepois)
					Set listD.valor							= $$$VARAgendamentoProcedimentosValor(objDepois)
					Set listD.dataAtendimento		= $Select($$$VARAgendamentoProcedimentosDataAtendimento(objDepois)="":"",1:$ZDate($$$VARAgendamentoProcedimentosDataAtendimento(objDepois),3))
					Set listD.horaAtendimento		= $Select($$$VARAgendamentoProcedimentosHoraAtendimento(objDepois)="":"",1:$ZTime($$$VARAgendamentoProcedimentosHoraAtendimento(objDepois),2))
					Set listD.dataHoraAdmisao		= $Select($$$VARAgendamentoProcedimentosDataHoraAdmissao(objDepois)="":"",1:$ZDateTime($$$VARAgendamentoProcedimentosDataHoraAdmissao(objDepois),3,2))
					Set listD.solicitante				= $$SQLGetProviderName^VARSQL($$$VARAgendamentoProcedimentosSolicitante(objDepois))
					Set listD.numAgendamento		= pCodAgendamento
					Set listD.numAdmissao				= $$$VARAgendamentoProcedimentosAdmissao(objDepois)
					Set listD.convenio					= $$GetOrganizacaoNome^VARSQL($$$VARAgendamentoProcedimentosConvenio(objDepois))
					Set listD.planoSaude				= $$GetOrganizacaoNome^VARSQL($$$VARAgendamentoProcedimentosPlanodeSaude(objDepois))
					Set listD.carteirinha				= $$$VARAgendamentoProcedimentosNumdaCarteirinha(objDepois)
					Set listD.vencCarteirinha		= $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objDepois)
					Set listD.dtAutorizacao			= $Select($$$VARAgendamentoGuiaDataAutorizacao(objGuiaD)="":"",1:$ZDate($$$VARAgendamentoGuiaDataAutorizacao(objGuiaD),3))
					Set listD.senha							= $$$VARAgendamentoGuiaSenha(objGuiaD)
					Set listD.dtValidadeSenha		= $Select($$$VARAgendamentoGuiaDatadeValidadeSenha(objGuiaD)="":"",1:$ZDate($$$VARAgendamentoGuiaDatadeValidadeSenha(objGuiaD),3))
					Set listD.numGuiaAtr				= $$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objGuiaD)
		
					Set listA.grupoCor = "", listD.grupoCor = ""
					If (listA.grupo '= listD.grupo) { Set listA.grupoCor = "red", listD.grupoCor = "red" }
					Set listA.procedimentoCor = "", listD.procedimentoCor = ""
					If (listA.procedimento '= listD.procedimento) { Set listA.procedimentoCor = "red", listD.procedimentoCor = "red"}
					Set listA.profissionalCor = "", listD.profissionalCor = ""
					If (listA.profissional '= listD.profissional) { Set listA.procedimentoCor = "red", listD.procedimentoCor = "red"}
					Set listA.salaCor = "", listD.salaCor = ""
					If (listA.sala '= listD.sala) { Set listA.salaCor = "red", listD.salaCor = "red" }
					Set listA.leitoCor = "", listD.leitoCor = ""
					If (listA.leito '= listD.leito) { Set listA.leitoCor = "red", listD.leitoCor = "red" }
					Set listA.qtdeCor = "", listD.qtdeCor = ""
					If (listA.qtde '= listD.qtde) { Set listA.qtdeCor = "red", listD.qtdeCor = "red" }
					Set listA.valorCor = "", listD.valorCor = ""
					If (listA.valor '= listD.valor) { Set listA.valorCor = "red", listD.valorCor = "red" }
					Set listA.dataAtendimentoCor = "", listD.dataAtendimentoCor = ""
					If (listA.dataAtendimento '= listD.dataAtendimento) { Set listA.dataAtendimentoCor = "red", listD.dataAtendimentoCor = "red" }
					Set listA.horaAtendimentoCor = "", listD.horaAtendimentoCor = ""
					If (listA.horaAtendimento '= listD.horaAtendimento) { Set listA.horaAtendimentoCor = "red", listD.horaAtendimentoCor = "red" }
					Set listA.dataHoraAdmisaoCor = "", listD.dataHoraAdmisaoCor = ""
					If (listA.dataHoraAdmisao '= listD.dataHoraAdmisao) { Set listA.dataHoraAdmisaoCor = "red", listD.dataHoraAdmisaoCor = "red" }
					Set listA.numAgendamentoCor = "", listD.numAgendamentoCor = ""
					If (listA.numAgendamento '= listD.numAgendamento) { Set listA.numAgendamentoCor = "red", listD.numAgendamentoCor = "red" }
					Set listA.numAdmissaoCor = "", listD.numAdmissaoCor = ""
					If (listA.numAdmissao '= listD.numAdmissao) { Set listA.numAdmissaoCor = "red", listD.numAdmissaoCor = "red" }
					Set listA.convenioCor = "", listD.convenioCor = ""
					If (listA.convenio '= listD.convenio) { Set listA.convenioCor = "red", listD.convenioCor = "red" }
					Set listA.planoSaudeCor = "", listD.planoSaudCore = ""
					If (listA.planoSaude '= listD.planoSaude) { Set listA.planoSaudeCor = "red", listD.planoSaudCore = "red" }
					Set listA.carteirinhaCor = "", listD.carteirinhaCor = ""
					If (listA.carteirinha '= listD.carteirinha) { Set listA.carteirinhaCor = "red", listD.carteirinhaCor = "red" }
					Set listA.vencCarteirinhaCor = "", listD.vencCarteirinhaCor = ""
					If (listA.vencCarteirinha '= listD.vencCarteirinha) { Set listA.vencCarteirinhaCor = "red", listD.vencCarteirinhaCor = "red" }
					Set listA.dtAutorizacaoCor = "", listD.dtAutorizacaoCor = ""
					If (listA.dtAutorizacao '= listD.dtAutorizacao) { Set listA.dtAutorizacaoCor = "red", listD.dtAutorizacaoCor = "red" }
					Set listA.senhaCor = "", listD.senhaCor = ""
					If (listA.senha '= listD.senha) { Set listA.senhaCor = "red", listD.senhaCor = "red" }
					Set listA.dtValidadeSenhaCor = "", listD.dtValidadeSenhaCor = ""
					If (listA.dtValidadeSenha '= listD.dtValidadeSenha) { Set listA.dtValidadeSenhaCor = "red", listD.dtValidadeSenhaCor = "red" }
					Set listA.numGuiaAtrCor = "", listD.numGuiaAtrCor = ""
					If (listA.numGuiaAtr '= listD.numGuiaAtr) { Set listA.numGuiaAtrCor = "red", listD.numGuiaAtrCor = "red" }

					Do retorno.%Push(listA)
					Do retorno.%Push(listD)
				}
			}
		}	
	}
	;
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="SetDtRetroativa">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pDtRetroativa,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set YBED 	= pYBED
	;
	If (pDtRetroativa '= "") Set pDtRetroativa = $ZDateH(pDtRetroativa,3)
	;
	If (pCodAgendamento = "") Return ""
	;
	Set objVARAgendamento	= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set $$$VARAgendamentoDatadeAdmissaoRetroativa(objVARAgendamento) = pDtRetroativa
	Set $$$VARAgendamentoAlteradoPor(objVARAgendamento) = YBED
	Set $$$VARAgendamentoAlteradoEm(objVARAgendamento) 	= $Horolog
	;
	Return $$$Save("VARAgendamento", pCodAgendamento, objVARAgendamento, $$$YES)]]></Implementation>
</Method>

<Method name="GetDtRetroativa">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set YBED 	= pYBED
	;
	If (pCodAgendamento = "") Return ""

	Set objVARAgendamento	= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set pDtRetroativa = $$$VARAgendamentoDatadeAdmissaoRetroativa(objVARAgendamento)
	Return $Select(pDtRetroativa="":"",1:$ZDate(pDtRetroativa,3))]]></Implementation>
</Method>

<Method name="GetProcedimentoAltValor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	;
	Set YBED 									= $Get(%request.Data("YBED",1))
	Set pCodAgendamento				= $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissaoControle	= $Get(%request.Data("pNumAdmissaoControle",1))
	Set pCodPlanoSaude				= $Get(%request.Data("pCodPlanoSaude",1))
	;
	Set arrayRetorno = []
	;
	Set codProcedimento = ""
	For {
		Set codProcedimento = $Order(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento))
		Quit:codProcedimento=""
		
		Set nSeq = ""
		For {
			Set nSeq = $Order(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq))
			Quit:nSeq=""
			
			Set objProcAgend = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, nSeq, 1))
			
			Set codConvenio 			= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,9)
			Set codPlanoSaude 		= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,10)
			Set valor 						= $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, codProcedimento, nSeq),Y,14)
			If (codPlanoSaude = "") Set codPlanoSaude = pCodPlanoSaude
			
			
			Set list = {}
			Set list.nSeq 						= nSeq
			Set list.codProcedimento 	= codProcedimento
			Set list.descProcedimento = $$SQLGetDescricaoProduto^VARSQL(codProcedimento,1)
			
			If (codPlanoSaude = "") Continue

			Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, codPlanoSaude)
			If ($IsObject(objRegraComercial)) {
				If (+valor = 0) Set valor = objRegraComercial.Valor
			}Else{
				Continue	
			}
			Set list.valor = valor
			Do arrayRetorno.%Push(list)
		}
	}
	
	Do arrayRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="SetProcedimentoAltValor">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodAgendamento,pNumAdmissaoControle,pCodProcediemento,pSequencia,pValor,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	Set YBED 	= pYBED
	;
	Set $Piece(^mtemp.VARAdmissaoAgendamento(pCodAgendamento, pCodProcediemento, pSequencia),Y,14) = pValor
	;
	If (pNumAdmissaoControle '= "") {
			Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))
			Set $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos) = pValor	
			Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_pSequencia, objVARAgendamentoProcedimentos, $$$YES)
	}
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetValorProcedimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y 		= "~"
	;
	Set YBED 							= $Get(%request.Data("YBED",1))
	Set pCodAgendamento		= $Get(%request.Data("pCodAgendamento",1))
	Set pSequencia				= $Get(%request.Data("pSequencia",1))
	Set pCodPlanoSaude		= $Get(%request.Data("pCodPlano",1))
	;
	If (pCodAgendamento = "" || (pSequencia = "")) Return $$$OK
	;
	Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(YM, pCodAgendamento, pSequencia, 1))
	Set valor = +$$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos)
	If (+valor = 0) {
		Set codProcedimento = $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)
		Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(codProcedimento, pCodPlanoSaude)
		If ($IsObject(objRegraComercial)) Set valor = objRegraComercial.Valor
	}
	Write $FNumber(valor,"",2)
	Return $$$OK]]></Implementation>
</Method>

<Method name="checaPEPMedico">
<ClassMethod>1</ClassMethod>
<FormalSpec>pProcedimento</FormalSpec>
<Implementation><![CDATA[	If ($$$INARTGrupodeAgendamento($Get(^INART(0, pProcedimento, 1)))="") Return 0
	Set cGrupo = $$$INARTGrupodeAgendamento($Get(^INART(0, pProcedimento, 1)))
	Set obj = $Get(^VARGrupoAgendamento(0,cGrupo,1))
	If ($$$VARGrupoAgendamentoTipo(obj)="CONSULTA") Return 1
	Return 0]]></Implementation>
</Method>

<Method name="ChecaProcedimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
	
	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	
	Set objINART = $Get(^INART(YM, pCodProcedimento, 1))
	
	Write $$$INARTGrupodeAgendamento(objINART)
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetProfSalaLeito">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
	
	Set arrayRetorno = []
	
	Set pCodProcedimento = $Get(%request.Data("pCodProcedimento",1))
	
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	
	Set objINART = $Get(^INART(YM, pCodProcedimento, 1))
	
	Set codGrupo = $$$INARTGrupodeAgendamento(objINART)
	
	If ($Data(^MEDProviderAgendas(YM, 10, codGrupo))) {
			
			Set codProf = ""
			For {
				Set codProf = $Order(^MEDProviderAgendas(YM, 10, codGrupo, codProf))	
				Quit:codProf=""

				Set listRetorno = {}
				Set listRetorno.codigo = codProf
				Set listRetorno.descricao = $$SQLGetProviderName^VARSQL(codProf)
				Do arrayRetorno.%Push(listRetorno)
			}
	}Else{
			Set codSala = ""
			For {
				Set codSala = $Order(^VARGrupoAgendamentoHorario(YM, codGrupo, codSala))	
				Quit:codSala=""

				Set codLeito = ""
				For {
					Set codLeito = $Order(^VARGrupoAgendamentoHorario(YM, codGrupo, codSala, codLeito))	
					Quit:codLeito=""
	
					Set listRetorno = {}
					Set listRetorno.codigo = codSala_"||"_codLeito
					Set listRetorno.descricao = $$GetDescSalasAtendimentos^VARSQL(codSala, codLeito)
					Do arrayRetorno.%Push(listRetorno)
				}
			}
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetHorarioProfSalaLeito">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
	
	Set arrayRetorno = []
	
	Set pCodProcedimento 	= $Get(%request.Data("pCodProcedimento",1))
	Set pCodProfSala 			= $Get(%request.Data("pCodProfSala",1))
	Set pData							= $Get(%request.Data("pData",1))
	
	If (pCodProcedimento = "") {
		Do arrayRetorno.%ToJSON()
		Return $$$OK
	}
	
	If (pData '= "") Set pData = $ZDateH(pData,3)
	
	Set objINART = $Get(^INART(YM, pCodProcedimento, 1))
	Set codGrupo = $$$INARTGrupodeAgendamento(objINART)
	
	K ^zzJULIO
	S ^zzJULIO = pCodProcedimento_"|"_codGrupo_"|"_pCodProfSala_"|"_pData
	
	If ($Data(^MEDProviderAgendas(YM, 10, codGrupo))) {
			
			
			Set nSeq = ""
			For {
				Set nSeq = $Order(^MEDProviderAgendas(YM, 10, codGrupo, pCodProfSala, nSeq))	
				Quit:nSeq=""

				Set horario = ""
				For {
					Set horario = $Order(^MEDProviderAgendaHorario(YM, pCodProfSala, pData, horario))
					Quit:horario=""
					
					
					If ($Piece(^MEDProviderAgendaHorario(YM, pCodProfSala, pData, horario, 1),Y,1) '= nSeq) {
						Continue	
					}
					Set temp(horario) = ""
				}
			}
				
			Set horario = ""
			For {
				Set horario = $Order(temp(horario))
				Quit:horario=""
				
				Set listRetorno = {}
				Set listRetorno.codigo = horario
				Set listRetorno.descricao = $ZTime(horario,2)
				Do arrayRetorno.%Push(listRetorno)
			}
	}Else{
			
			Set horario = ""
			For {
				Set horario = $Order(^VARGrupoAgendamentoHorario(0,codGrupo, $Piece(pCodProfSala,"||",1), $Piece(pCodProfSala,"||",2), pData, horario))
				Quit:horario=""

				Set listRetorno = {}
				Set listRetorno.codigo = horario
				Set listRetorno.descricao = $ZTime(horario,2)
				Do arrayRetorno.%Push(listRetorno)
			}
	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="CarregarDadosAgendamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set YBED 						= $Get(%request.Data("YBED",1))
	Set pCodAgendamento	= $Get(%request.Data("pCodAgendamento",1))
	;
	Set listRetorno	= {}
	If ('$Data(^VARAgendamento(YM, pCodAgendamento))) {
		Set listRetorno.status = 0
		Do listRetorno.%ToJSON()
		Return $$$OK
	}
	;
	Set objVARAgendamento		= $Get(^VARAgendamento(YM, pCodAgendamento, 1))
	Set listRetorno.codPlanoSaude		= $$$VARAgendamentoPlanodeSaude(objVARAgendamento)
	Set listRetorno.codConvenio			= $$$VARAgendamentoConvenio(objVARAgendamento)
	Set listRetorno.codCarteirinha	= $$$VARAgendamentoCarteirinha(objVARAgendamento)
	Set listRetorno.vencCarteirinha	= $$$VARAgendamentoVencimentodaCarteirinha(objVARAgendamento)
	If (listRetorno.vencCarteirinha '= "") {
		Set listRetorno.vencCarteirinha	= $ZDate(listRetorno.vencCarteirinha,4)
	}
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmazenarAddProcedimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"
	;
	Set strStatus = ""
	Set mensagem 	= ""
	Set erro			=	0
	Set YBED 						= $Get(%request.Data("YBED",1))
	
	Set pCodAgendamento = $Get(%request.Data("pCodAgendamento",1))
	Set pNumAdmissao 		= $Get(%request.Data("pNumAdmissao",1))
	Set procAgendado 		= 0
	
	Set pCodProcedimento	= $Get(%request.Data("pCodProcedimento",1))

	Set pCodProfSala 	= $Get(%request.Data("pCodProfSala",1))
	Set pData 				= $Get(%request.Data("pData",1))
	Set pHora 				= $Get(%request.Data("pHora",1))

	Set pCodConvenio 		= $Get(%request.Data("pCodConvenio",1))
	Set pCodPlano 			= $Get(%request.Data("pCodPlano",1))
	Set pNumCarteirinha = $Get(%request.Data("pNumCarteirinha",1))
	Set pDtCarteirinha	= $Get(%request.Data("pDtCarteirinha",1))
	
	Set pCodGuia 					= $Get(%request.Data("pCodGuia",1))
	Set pDtAutorizacao 		= $Get(%request.Data("pDtAutorizacao",1))
	Set pSenha 						= $Get(%request.Data("pSenha",1))
	Set pDtValidade 			= $Get(%request.Data("pDtValidade",1))
	Set pNumGuiaOperadora = $Get(%request.Data("pNumGuiaOperadora",1))
	
	Set pSolicitante 	= $Get(%request.Data("pSolicitante",1))
	Set pValor 				= $Get(%request.Data("pValor",1))
	
	K ^zzJULIO
	S ^zzJULIO = pCodAgendamento_"**"_pNumAdmissao_"**"_pCodProcedimento_"**"_pCodProfSala_"**"_pData_"**"_pHora_"**"_
	pCodConvenio_"**"_pCodPlano_"**"_pNumCarteirinha_"**"_pDtCarteirinha_"**"_
	pCodGuia_"**"_pDtAutorizacao_"**"_pSenha_"**"_pDtValidade_"**"_pNumGuiaOperadora_"**"_pSolicitante_"**"_pValor
	
	Tstart
	Try{
		If (pCodConvenio = "") {
			set strStatus = 0
			set erro			=	1
			Set mensagem 	= "Informar o convênio."
			Quit	
		}
		If (pCodPlano = "") {
			set strStatus = 0
			set erro			=	1
			Set mensagem 	= "Informar o plano de saúde."
			Quit
		}
		Set objRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(pCodProcedimento, pCodPlano)
		If (objRegraComercial.isInelegivel = 1) {
			set strStatus = 0
			set erro			=	1
			Set mensagem 	= "Procedimento não atendido pelo Plano de Saúde informado."
			Quit
		}
		Set xValor = objRegraComercial.Valor
		If ((objRegraComercial.isCarteirinhaObrigatoria = 1) && (pNumCarteirinha = "")) {
			set strStatus = 0
			set erro			=	1
			Set mensagem 	= "Favor informar numero da carterinha."
			Quit
		}
		If (objRegraComercial.isCarteirinhaObrigatoria = 1 && (objRegraComercial.CarteirinhaMin > 0) && ($Length(pNumCarteirinha) > objRegraComercial.CarteirinhaMax || ($Length(pNumCarteirinha) < objRegraComercial.CarteirinhaMin))) {
			set strStatus = 0
			set erro			=	1
			Set mensagem 	= "Numero de caracteres invalidos para a carteirinha."
			Quit
		}
		
		Set objetoGuia = ""
		If (pCodGuia = "" && (pDtAutorizacao '= "" || (pSenha '= "") || (pDtValidade '= "") || (pNumGuiaOperadora '= ""))) {
			If (pDtAutorizacao '= "") Set pDtAutorizacao = $ZDateH(pDtAutorizacao,3,,,,,,,+$Horolog)
			If (pDtValidade '= "") Set pDtValidade = $ZDateH(pDtValidade,3,,,,,,,+$Horolog)
			;
			If (pDtAutorizacao = "") {
				set strStatus = 0
				set erro			=	1
				Set mensagem 	= "Informe a data de autorização."
				Quit
			}	
			;	
			Set pCodGuia = $Order(^VARAgendamentoGuia(YM, pCodAgendamento, ""),-1) + 1
			;
			Set objetoGuia = $Get(^VARAgendamentoGuia(YM, pCodAgendamento, pCodGuia, 1))
			Set $$$VARAgendamentoGuiaDataAutorizacao(objetoGuia)						= pDtAutorizacao
			Set $$$VARAgendamentoGuiaSenha(objetoGuia) 											= pSenha
			Set $$$VARAgendamentoGuiaDatadeValidadeSenha(objetoGuia) 				= pDtValidade
			Set $$$VARAgendamentoGuiaNumerodaGuiaAtribuidapela(objetoGuia) 	= pNumGuiaOperadora
			Set $$$VARAgendamentoGuiaCriadoPor(objetoGuia) 									= YBED
			Set $$$VARAgendamentoGuiaCriadoEm(objetoGuia) 									= $Horolog
		}
		If (objRegraComercial.isObrigatorioGuiaAutorizacao = 1 && (pCodGuia = "")) {
			set strStatus = 0
			set erro			=	1
			Set mensagem 	= "Favor informar a Guia de Autorização."
			Quit
		}
		If (objetoGuia '= "") {
			Set strStatus = $$$Save("VARAgendamentoGuia", pCodAgendamento_$$$COMMA_pCodGuia, objetoGuia, $$$YES)
			If ($$$ISERR(strStatus)) {
				set strStatus = strStatus
				set erro			=	1
				Quit	
			}
		}
		;	
		Set rGrupoAgendamento = $$$INARTGrupodeAgendamento($Get(^INART(YM, pCodProcedimento, 1)))
		;			
		;Criar Admissão
		Set rSeqAgendamento = $Order(^VARAgendamentoProcedimentos(YM, pCodAgendamento, ""),-1) + 1
		Set objVARAgendamentoProcedimentos = ""

		Set $$$VARAgendamentoProcedimentosAdmissao(objVARAgendamentoProcedimentos) 								= ""
		Set $$$VARAgendamentoProcedimentosGrupoAgendamento(objVARAgendamentoProcedimentos) 				= rGrupoAgendamento
		Set $$$VARAgendamentoProcedimentosProcedimento(objVARAgendamentoProcedimentos)						= pCodProcedimento
		If ($Length(pCodProfSala,"||") = 2) {
			Set $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendamentoProcedimentos) 					= $Piece(pCodProfSala,"||",1)
			Set $$$VARAgendamentoProcedimentosCodigodoLeito(objVARAgendamentoProcedimentos) 				= $Piece(pCodProfSala,"||",2)
		}Else{
			Set $$$VARAgendamentoProcedimentosProfissional(objVARAgendamentoProcedimentos) 					= pCodProfSala
		}
		Set $$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendamentoProcedimentos) 				= $Select(pData="":"",1:$ZDateH(pData,3))
		Set $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendamentoProcedimentos) 				= pHora
		Set $$$VARAgendamentoProcedimentosCancelado(objVARAgendamentoProcedimentos) 							= 0
		Set procAgendado = $Select(pCodProfSala="":0,1:1)
		Set $$$VARAgendamentoProcedimentosProcedimentoAgendado(objVARAgendamentoProcedimentos) 		= procAgendado
		Set $$$VARAgendamentoProcedimentosEncaixe(objVARAgendamentoProcedimentos) 								= 2
		Set $$$VARAgendamentoProcedimentosSolicitante(objVARAgendamentoProcedimentos) 						= pSolicitante

		Set $$$VARAgendamentoProcedimentosConvenio(objVARAgendamentoProcedimentos) 								= pCodConvenio
		Set $$$VARAgendamentoProcedimentosPlanodeSaude(objVARAgendamentoProcedimentos) 						= pCodPlano
		Set $$$VARAgendamentoProcedimentosNumdaCarteirinha(objVARAgendamentoProcedimentos) 				= pNumCarteirinha
		Set $$$VARAgendamentoProcedimentosVencimentodaCarteirinha(objVARAgendamentoProcedimentos) = $Select(pDtCarteirinha="":"",1:$ZDAteH(pDtCarteirinha,3))
		Set $$$VARAgendamentoProcedimentosGuia(objVARAgendamentoProcedimentos) 										= pCodGuia

		Set $$$VARAgendamentoProcedimentosQtdeProcedimento(objVARAgendamentoProcedimentos) 				= 1

		Set $$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendamentoProcedimentos) = $$$VARAgendamentoAdmissaoCriadoData($Get(^VARAgendamentoAdmissao(0,pNumAdmissao,1)))_","_$$$VARAgendamentoAdmissaoCriadoHora($Get(^VARAgendamentoAdmissao(0,pNumAdmissao,1)))
		Set $$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendamentoProcedimentos) = pNumAdmissao

		Set $$$VARAgendamentoProcedimentosValor(objVARAgendamentoProcedimentos) = pValor

		Set codExecutor = $Order(^VARManualExames(YM,5,"A",pCodProcedimento,""))
		If (codExecutor '= "") {
			Set codigoItemparaMotion = $$$VARManualExameCodItemExecutor($Get(^VARManualExame(YM,pCodProcedimento,codExecutor,1)))
			Set $$$VARAgendamentoProcedimentosCodigoItemparaMotion(objVARAgendamentoProcedimentos) = codigoItemparaMotion
		}
		Set strStatus = $$$Save("VARAgendamentoProcedimentos", pCodAgendamento_$$$COMMA_rSeqAgendamento, objVARAgendamentoProcedimentos, $$$YES)	
		If ($$$ISERR(strStatus)) {
			set strStatus = strStatus
			set erro			=	1
			Quit	
		}
	}
	Catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro			=	err
	}
	set retorno = {}
	if 'erro{
			Tcommit
			set retorno.codigo 					= $Get(chave)
			Set retorno.status 					= strStatus
			Set retorno.mensagem 				= mensagem
			Set retorno.seqAgendamento 	= rSeqAgendamento
			Set retorno.procAgendado		= procAgendado
		}Else{
			Trollback
			Set retorno.status 		= strStatus
			Set retorno.mensagem 	= mensagem
		}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetAgendamentoSemAdm">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 				= 0
	Set Y 				= "~"

	Set pCodPaciente 		= $Get(%request.Data("pCodPaciente",1))

	Set arrayretorno = []

	Set meuSQL = "Select AgPr.CodigodoAgendamento, Ag.CriadoEm "
	Set meuSQL = meuSQL _ "From SQLUser.VARAgendamentoProcedimentos AgPr, SQLUser.VARAgendamento Ag "
	Set meuSQL = meuSQL _ "Where AgPr.Company = 0 And Ag.Company = 0 And AgPr.ControleAdmissao Is Null "
  Set meuSQL = meuSQL _ "And Ag.Numero = AgPr.CodigodoAgendamento And Ag.CodigodoPaciente = '"_pCodPaciente_"' "
	Set meuSQL = meuSQL _ "Group By AgPr.CodigodoAgendamento Order By AgPr.CodigodoAgendamento Desc "

	Set rSet = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)
	While rSet.%Next() {
		Set list = {}
		Set list.Descricao	= rSet.%Get("CodigodoAgendamento")_" - "_$ZDateTime(rSet.%Get("CriadoEm"),4,2)
		Set list.Codigo 		= rSet.%Get("CodigodoAgendamento")
		Do arrayretorno.%Push(list)
	}	

	Do arrayretorno.%ToJSON()

	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>