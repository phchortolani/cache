<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="SourceControl.library.ListFiles">
<ClassType/>
<Import>VAR.infra.util,SourceControl.control</Import>
<ProcedureBlock>0</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="ListLibraries">
<ClassMethod>1</ClassMethod>
<FormalSpec>&amp;List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	quit ..ListFiles(##class(Config).GetExternalCacheLibraryDir(),
		"lib.xml", .List)
]]></Implementation>
</Method>

<Method name="displayFiles">
<ClassMethod>1</ClassMethod>
<FormalSpec>FileType:%String,&amp;List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill List
	kill dirs

	if (FileType = ##class(FileType).%GetParameter("TXTMAC")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalMacDir()
		set FileType = FileType_".xml"
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTPRJ")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalPrjDir()
		set FileType = FileType_".xml"
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTINC")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalIncDir()
		set FileType = FileType_".xml"
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTCLS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalClassDir()
		set FileType = FileType_".xml"
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTCSP")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalCSPDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTNMCLASS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMClassDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTCUSTOMNMCLASS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMClassDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTFORM")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMFormDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTCUSTOMFORM")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMFormDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTMETADATA")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMGeneralMetadataDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTMENU")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMMenuDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTLANGUAGETEXT")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMLanguageDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTPARAMETERS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMAppParametersDir()
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMCharParametersDir()
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMDictionaryDir()
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMSysParametersDir()
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMUserParametersDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTCUSTOMPARAMETERS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMUserParametersDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTFAVORITES")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMFavoritesDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTCUSTOMFAVORITES")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalNMFavoritesDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTRESOURCES")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalResourcesDir()
		set FileType = "*"
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTREPORTDEFINITIONS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalReportDefinitionsDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTCOMPILEDREPORTS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalCompiledReportsDir()
	}
	elseif (FileType = ##class(FileType).%GetParameter("TXTJAVALIBS")) {
		set dirs($increment(dirs)) = ##class(Config).GetExternalJavaLibraryDir()
	}

	set sc = $$$OK
	for i = 1:1:+$order(dirs(""), -1) {
	   	set sc = ..ListFiles(dirs(i), FileType, .List)
	}

	quit sc
]]></Implementation>
</Method>

<Method name="ListFiles">
<ClassMethod>1</ClassMethod>
<FormalSpec>Directory:%String,FileType:%String,&amp;List</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	new strFile, arrDir, srtDir, temp, count, ptr
	set strFile     = $zsearch(##class(DirectoryFile).GetFormattedDir(Directory)_"*")
	set arrDir      = ""
	set ptr         = 0
	set count       = +$order(List(""), -1)

	while ($length(strFile) '= 0) {
		if (##class(%Library.File).DirectoryExists(strFile))&&
			(($length(strFile)>0)&&
			(($extract(strFile, $length(strFile), $length(strFile)) '= ".") &&
			($extract(strFile, $length(strFile) - 1, $length(strFile)) '= "..")))
		{
			if (arrDir'=""){
				set arrDir =  $ListFromString($ListToString(arrDir)_","_strFile)
			}else{
				set arrDir =  $ListFromString(strFile)
			}
		}else{
			if (##class(FileType).GetType(strFile)=##class(FileType).GetType("."_FileType)){
				set count = $increment(count)
				set List(count, 1) = strFile
				set List(count, 2) = ##class(FileControl).RemoveProjectFromFullPath(strFile)
			}
		}
		set strFile = $zsearch("")
	}
	if ($ListLength(arrDir)>0)&&(##class(FileType).GetType("."_FileType)=##class(FileType).%GetParameter("CSP")) {
		while $ListNext(arrDir,ptr,strDir) {
			do ..ListFiles(strDir,FileType,.List)
		}
	}

	quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>