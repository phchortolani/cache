<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.FATAcordoComercial">
<ClassType/>
<IncludeCode>VARConst,INConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	#dim %request as %CSP.Request
	#dim %response as %CSP.Response
	quit:$$$ISERR(..validaSessao(1)) %response
	set job = %session.SessionId
	do ##class(VAR.CSP.FATRegraComercial).aplicaRegrasVigencia()
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="recuperaValidacoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = []
	set primeiro = 1
	set dataInicialComp = $horolog
	set dataIni = ""
	for {
		set dataIni = $order(^mtemp.Validade(job,"Inativa",dataIni)) quit:dataIni=""
		set horaIni = ""
		for {
			set horaIni = $order(^mtemp.Validade(job,"Inativa",dataIni,horaIni)) quit:horaIni=""
			set dataFim = ""
			for {
				set dataFim = $order(^mtemp.Validade(job,"Inativa",dataIni,horaIni,dataFim)) quit:dataFim=""
				set horaFim = ""
				for {
					set horaFim = $order(^mtemp.Validade(job,"Inativa",dataIni,horaIni,dataFim,horaFim)) quit:horaFim=""
					set obj = $get(^mtemp.Validade(job,"Inativa",dataIni,horaIni,dataFim,horaFim,1))
					set situacao = +$$$FATRegraComercialAcValValordoCampoDuranteaVigen(obj)
					;
					set inicial = "",final=""
					set $piece(inicial,",",1) = dataIni
					if horaIni'=0 set $piece(inicial,",",2) = horaIni
					set $piece(final,",",1) = dataFim
					if horaFim'=0 set $piece(final,",",2) = horaFim
					if inicial'=0{
						if $replace(inicial,",",".")>$replace(dataInicialComp,",","."){
							set dataFinal = $piece(inicial,",",1)
							set horaFinal = $piece(inicial,",",2)
							set horaFinal = horaFinal - 1
							if horaFinal<0 set horaFinal = 86399,dataFinal = dataFinal - 1
							set dataFinal = dataFinal_","_horaFinal
							set flPrimeiroDt = 0,situ = situacao
							if 'primeiro set flPrimeiroDt = dataInicialComp,situ = situacaoAnt
							set msgPeriodo = ..montaMensagemPeriodo(flPrimeiroDt,dataFinal)
							set linha = {}
							set linha.periodo = $select(+situ'=0:"Ativo",1:"Inativo")_" "_msgPeriodo
							set linha.auditoria = "SISTEMA"
							do retorno.%Push(linha)
						}
					}
					set primeiro=0
					;
					set criadoEm = $$$FATRegraComercialAcValCriadoEm(obj)
					set criadoPor = $$$FATRegraComercialAcValCriadoPor(obj)
					set alteradoEm = $$$FATRegraComercialAcValAlteradoEm(obj)
					set alteradoPor = $$$FATRegraComercialAcValAlteradoPor(obj)
					set auditoria = "Gravado por "_criadoPor_" em "_$zdatetime(criadoEm)
					if alteradoEm'="" set auditoria = "Gravado por "_alteradoPor_" em "_$zdatetime(alteradoEm)
					set msgPeriodo = ..montaMensagemPeriodo(inicial,final)
					set dataInicialComp = final,situacaoAnt=situacao
					set linha = {}
					set linha.periodo = $select(situacao=0:"Ativo",1:"Inativo")_" "_msgPeriodo
					set linha.auditoria = auditoria
					do retorno.%Push(linha)
					;
				}
			}
		}
	}
	if 'primeiro,final'=0{
		set dataInicial = $piece(final,",",1)
		set horaInicial = $piece(final,",",2)
		set horaInicial = horaInicial + 1
		if horaInicial>86399 set horaInicial = 0,dataInicial = dataInicial + 1
		set dataInicial = dataInicial_","_horaInicial
		set msgPeriodo = ..montaMensagemPeriodo(dataInicial,0)
		set linha = {}
		set linha.periodo = $select('situacao=0:"Ativo",1:"Inativo")_" "_msgPeriodo
		set linha.auditoria = "SISTEMA"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="montaMensagemPeriodo">
<ClassMethod>1</ClassMethod>
<FormalSpec>inicial,final</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set msgRetorno = ""
	if inicial'=0 set msgRetorno = "de "_$zdatetime(inicial,4)_" "
	if final'=0 set msgRetorno = msgRetorno_"até "_$zdatetime(final,4)
	else  set msgRetorno = msgRetorno_"até sempre"
	if inicial=0,final=0 set msgRetorno = "para sempre"
	quit msgRetorno]]></Implementation>
</Method>

<Method name="recIntervaloAtual">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set obj = $get(^mtemp.Validade(job))
	set dataDe = $piece(obj,"~",1)
	set dataAte = $piece(obj,"~",2)
	set validoDe = 0
	set validoAte = 0
	if dataDe'="" set validoDe = 1,dataDe = $zdatetime(dataDe,3,7)
	if dataAte'="" set validoAte = 1,dataAte = $zdatetime(dataAte,3,7)
	set retorno = {}
	set formData = {}
	set:dataDe'="" formData.dataDe = dataDe
	set:dataAte'="" formData.dataAte = dataAte
	set formData.validoDe = +validoDe
	set formData.validoAte = +validoAte
	set retorno.formData = formData
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="confirmaIntervalo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set campos		= $get(%request.Data("campos",1))
	
	set strStatus = $$$OK
	tstart
	try{
		set campos 		= [].%FromJSON(campos)
		set validoDe 	= campos.validoDe
		set validoAte 	= campos.validoAte
		set dataDe 		= campos.dataDe
		set dataAte 	= campos.dataAte
		if validoDe = 1 {
			set dataDe = $zdatetimeh($piece(dataDe,"Z",1),3,7)
			set validoDe = dataDe
		}else{
			set validoDe = ""
		}
		if validoAte = 1 {
			set dataAte = $zdatetimeh($piece(dataAte,"Z",1),3,7)
			set validoAte = dataAte
		}else{
			set validoAte = ""
		}
		;
		set ^mtemp.Validade(job) = validoDe_"~"_validoAte
		set msgRetorno = "",alert=0
		set inicial = $piece(^mtemp.Validade(job),"~",1)
		set final = $piece(^mtemp.Validade(job),"~",2)
		;
		if inicial'="",$replace(inicial,",",".")>$replace($horolog,",","."){
			set data = $piece(inicial,",",1)
			set hora = $piece(inicial,",",2)
			set hora = hora - 1
			if hora<0 set hora = 86399,data=data-1
			set final = data_","_hora
			set inicial = ""
		}
		;
		if inicial'="" set msgRetorno = "De "_$zdatetime(inicial,4)_" "
		if final'="" set msgRetorno = msgRetorno_"até "_$zdatetime(final,4),alert=1
		else  set msgRetorno = msgRetorno_"até sempre"
		if inicial=0,final=0 set msgRetorno = "Sempre"
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set retorno.status 	= 1
		set retorno.type 	= "info"
		set retorno.mensagem="Dados confirmados com sucesso!"
		set retorno.msgRetorno = "Validade: "_msgRetorno
		set retorno.comValidade = alert
	}else{
		trollback
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="getINPARA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set chave = $get(%request.Data("chave",1))
	set somenteChave = $get(%request.Data("somenteChave",1))
	set retorno = []
	set codigo=""
	for{
		set codigo 	= $order(^INPARA(0,chave,"PT",codigo)) quit:codigo=""
		set obj 	= $get(^INPARA(0,chave,"PT",codigo,1)) 
		set linha = {}
		set linha.codigo = codigo
		set linha.descricao = $$$INPARAText(obj)
		if somenteChave set linha.descricao = linha.codigo
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaRegrasItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codConvenio,codTabela,item,obj</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objItem = ""
	if codConvenio'="",codTabela'="",item'=""{
		set objItem = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",codConvenio,codTabela,item,1))
	}
	set pieces = $length(objItem,"~")
	if pieces<$length(obj,"~") set pieces = $length(obj,"~")
	for piece=1:1:pieces{
		if $piece(obj,"~",piece)="" set $piece(obj,"~",piece)=$piece(objItem,"~",piece)
	}
	quit obj]]></Implementation>
</Method>

<Method name="recuperaRegrasCategoria">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codConvenio,codTabela,codCategoria,obj</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set vtCategoria = codCategoria
	set nivel = 1
	kill arvoreCategoria,arvoreCategoria1
	for {
		if vtCategoria="" quit
		if $data(arvoreCategoria1(vtCategoria)) quit
		set arvoreCategoria(nivel) = vtCategoria
		set arvoreCategoria1(vtCategoria)=nivel
		set nivel = nivel + 1
		set objCategoria = $get(^FATTabelaComercialCategoria(0,codTabela,vtCategoria,1))
		set vtCategoria = $$$FATTabelaComercialCategoriaCategoriaPai(objCategoria)
	}
	set objCategoria = ""
	if codConvenio'="",codTabela'=""{
		set nivel = ""
		for {
			set nivel = $order(arvoreCategoria(nivel)) quit:nivel=""
			set categoria = arvoreCategoria(nivel)
			set objCategoria = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",codConvenio,codTabela,categoria,1))
			if objCategoria="" continue
			set pieces = $length(objCategoria,"~")
			if pieces<$length(obj,"~") set pieces = $length(obj,"~")
			for piece=1:1:pieces{
				if $piece(obj,"~",piece)="" set $piece(obj,"~",piece)=$piece(objCategoria,"~",piece)
			}
		}
	}
	quit obj]]></Implementation>
</Method>

<Method name="recuperaRegrasTabela">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codConvenio,codTabela,obj</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objTabela = ""
	if codConvenio'="",codTabela'=""{
		set objTabela = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",codConvenio,codTabela,1))
	}
	set pieces = $length(objTabela,"~")
	if pieces<$length(obj,"~") set pieces = $length(obj,"~")
	for piece=1:1:pieces{
		if $piece(obj,"~",piece)="" set $piece(obj,"~",piece)=$piece(objTabela,"~",piece)
	}
	quit obj]]></Implementation>
</Method>

<Method name="recuperaRegrasAcordo">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codConvenio,obj</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objAcordo = ""
	if codConvenio'=""{
		set objAcordo = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo",codConvenio,1))
	}
	set pieces = $length(objAcordo,"~")
	if pieces<$length(obj,"~") set pieces = $length(obj,"~")
	for piece=1:1:pieces{
		if $piece(obj,"~",piece)="" set $piece(obj,"~",piece)=$piece(objAcordo,"~",piece)
	}
	quit obj]]></Implementation>
</Method>

<Method name="recuperaRegrasOrganizacao">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codOrganizacao,codConvenio,obj</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objOrganizacao = ""
	set codigo = codOrganizacao
	if codConvenio'="",codConvenio'="T" set codigo = codConvenio
	if codigo'="" set objOrganizacao = ..recuperaRegrasPai(codigo)
	set pieces = $length(objOrganizacao,"~")
	if pieces<$length(obj,"~") set pieces = $length(obj,"~")
	for piece=1:1:pieces{
		if $piece(obj,"~",piece)="" set $piece(obj,"~",piece)=$piece(objOrganizacao,"~",piece)
	}
	quit obj]]></Implementation>
</Method>

<Method name="recuperaRegras">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codOrganizacao,codConvenio,codTabela,codCategoria,codItem</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	; 1a regra - Buscar o item do atual acordo para o convênio atual
	; 2a regra - Buscar o item do atual acordo para todos os convênios
	; 3a regra - Buscar a configuração na categoria do item ou categoria informada para o convênio atual
	; 4a regra - Buscar a configuração na categoria do item ou categoria informada para todos os convênios
	; 5a regra - Buscar a configuração na tabela para o convênio atual
	; 6a regra - Buscar a configuração na tabela para todos os convênios
	; 7a regra - Buscar a configuração no acordo para o convênio atual
	; 8a regra - Buscar a configuração no acordo para todos os convênios
	; 9a regra - Buscar a configuração na organizacao
	if codItem'=""{
		set objTabela = $get(^FATTabelaComercial(0,codTabela,1))
		set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
		set objItem = $get(^FATTabelaComercialItem(0,codTabela,versao,codItem,1))
		set categoria = $$$FATTabelaComercialItemCategoriadoItem(objItem)
	}else{
		set categoria = codCategoria
	}
	;
	set obj = ""
	set obj = ..recuperaRegrasItem(job,codConvenio,codTabela,codItem,obj)
	set obj = ..recuperaRegrasItem(job,"T",codTabela,codItem,obj)
	set obj = ..recuperaRegrasCategoria(job,codConvenio,codTabela,categoria,obj)
	set obj = ..recuperaRegrasCategoria(job,"T",codTabela,categoria,obj)
	set obj = ..recuperaRegrasTabela(job,codConvenio,codTabela,obj)
	set obj = ..recuperaRegrasTabela(job,"T",codTabela,obj)
	set obj = ..recuperaRegrasAcordo(job,codConvenio,obj)
	set obj = ..recuperaRegrasAcordo(job,"T",obj)
	set obj = ..recuperaRegrasOrganizacao(job,codOrganizacao,codConvenio,obj)
	quit obj]]></Implementation>
</Method>

<Method name="getItensOrcar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set select = "Select ItemNumber codigo,SearchName descricao,DescItemPedido from INART where company = 0"
	if codigo'="" set select = select_" and %upper(ItemNumber) = %upper('"_codigo_"')"
	else  if searchValue'="" set select = select_" and (%upper($$SQLGetTextoSemAcento^VARSQL(ItemNumber)) like %upper($$SQLGetTextoSemAcento^VARSQL('%"_searchValue_"%')) or %upper($$SQLGetTextoSemAcento^VARSQL(SearchName)) like %upper($$SQLGetTextoSemAcento^VARSQL('%"_searchValue_"%')) or %upper($$SQLGetTextoSemAcento^VARSQL(DescItemPedido)) like %upper($$SQLGetTextoSemAcento^VARSQL('%"_searchValue_"%')))"
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select_") order by descricao"
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	set totalCount = 0
	while(rs.%Next()){
		set codigo		= rs.%Get("codigo")
		set descricao	= $Select(rs.%Get("DescItemPedido")="":rs.%Get("descricao"),1:rs.%Get("DescItemPedido"))
		set linha = {}
		set linha.CodigodoItem = codigo
		set linha.DescricaodoItem = "("_codigo_") "_descricao
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="orcarItem">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codAcordo 		= $get(%request.Data("codAcordo",1))
	set codOrganizacao 	= $get(%request.Data("organizacao",1))
	set item = $get(%request.Data("item",1))
	set strStatus = $$$OK
	tstart
	try{
		set dataSource = []
		;
		kill vetor
		set sequencia = ""
		for {
			set sequencia 	= $order(^mtemp.FATAcordoComercial(0,job,"clienteComercial",sequencia)) quit:sequencia=""
			set objConvenio = $get(^mtemp.FATAcordoComercial(0,job,"clienteComercial",sequencia,1))
			set convenio	= $$$FATAcordoComercialOrganizacaoCodigodaOrganizacao(objConvenio)
			set objOrganizacao = $get(^FATOrganizacao(0,convenio,1))
			if '$$$FATOrganizacaoAtivo(objOrganizacao) continue
			set objetoItem 	= ..getRegrasItem(codOrganizacao,codAcordo,item,convenio,"","",1)
			;
			if objetoItem.valor="" continue
			;
			set objetoItem.compostos = []
			
			if objetoItem.possuiCompostos {
				set itensDesconsiderar = $replace(objetoItem.desconsiderarNoComposto,";","','")
				set select = "select CodigoItem,Quantidade from  VARProcedItensUtilizados where Company=0"
				set select = select_" and CodigoProcedimento = '"_$piece(objetoItem.itensCobraveis,";",1)_"'"
				set select = select_" and CodigoItem in ('"_itensDesconsiderar_"')"
				set valorComp = 0
				set rs = ##class(%SQL.Statement).%ExecDirect("",select)
				while(rs.%Next()){
					set CodigoItem = rs.%Get("CodigoItem")
					set Quantidade = rs.%Get("Quantidade")
					set objetoItemComp 	= ..getRegrasItem(codOrganizacao,codAcordo,CodigoItem,convenio,,,1)
					set valorComp = valorComp + objetoItemComp.valor
					if +objetoItemComp.valor=0 continue
					set regra = {}
					set regra.composto	= "("_CodigoItem_") "_objetoItemComp.descricaoItem
					set regra.qtde 		= objetoItemComp.qtde * Quantidade
					set regra.valor 	= objetoItemComp.valor * Quantidade
					do objetoItem.compostos.%Push(regra)
				}
				set objetoItem.valor = objetoItem.valor + valorComp
			}
			
			set linha = {}
			set linha.item 			= "("_objetoItem.codigoItem_") "_objetoItem.descricaoItem
			set linha.categoria 	= objetoItem.categoria
			set linha.convenio 		= "convenio" ;..recDescricao(convenio)
			set linha.qtde 			= +objetoItem.qtde
			set linha.valor 		= +objetoItem.valor
			set linha.itemCobravel 	= objetoItem.itensCobraveis
			set linha.regras		= objetoItem.regras
			set linha.tabela		= objetoItem.codigoTabela
			set linha.compostos		= objetoItem.compostos
			set nomeTabela 			= ""
			if objetoItem.codigoTabela'=""{
				set obj 		= $get(^FATTabelaComercial(0,objetoItem.codigoTabela,1))
				set nomeTabela 	= $$$FATTabelaComercialNome(obj)_" (versão "_$$$FATTabelaComercialVersaoAtualdaTabeladeIten(obj)_")"
			}
			set linha.nomeTabela	= nomeTabela
			set vetor(linha.item,linha.categoria,+linha.qtde,+linha.valor,$select(linha.itemCobravel="":" ",1:linha.itemCobravel),linha.tabela,linha.convenio) = linha.nomeTabela_"^^^"_linha.regras.%ToJSON()_"^^^"_objetoItem.descricaoItem_"^^^"_linha.compostos.%ToJSON()
			;do dataSource.%Push(linha)
		}
		set item=""
		for {
			set item = $order(vetor(item)) quit:item=""
			set cate=""
			for {
				set cate = $order(vetor(item,cate)) quit:cate=""
				set qtde=""
				for {
					set qtde = $order(vetor(item,cate,qtde)) quit:qtde=""
					set valo=""
					for {
						set valo = $order(vetor(item,cate,qtde,valo)) quit:valo=""
						set icob=""
						for {
							set icob = $order(vetor(item,cate,qtde,valo,icob)) quit:icob=""
							set tabe=""
							for {
								set tabe = $order(vetor(item,cate,qtde,valo,icob,tabe)) quit:tabe=""
								set conv=""
								set contador = 0
								for {
									set conv = $order(vetor(item,cate,qtde,valo,icob,tabe,conv)) quit:conv=""
									set nome = $piece(vetor(item,cate,qtde,valo,icob,tabe,conv),"^^^",1)
									set regra = [].%FromJSON($piece(vetor(item,cate,qtde,valo,icob,tabe,conv),"^^^",2))
									set desc = $piece(vetor(item,cate,qtde,valo,icob,tabe,conv),"^^^",3)
									set compostos = [].%FromJSON($piece(vetor(item,cate,qtde,valo,icob,tabe,conv),"^^^",4))
									set contador = contador + 1
								}
								if contador>1 set descConvenio = "Todos do Acordo"
								else  set descConvenio = nome
								If (tabe = "") {
									set descConvenio = "Todos do Acordo"
								}Else{
									set objTabela 	= $get(^FATTabelaComercial(0,tabe,1))
									set cliente			= $$$FATTabelaComercialClientedaTabela(objTabela)
									if (cliente = "") {
										set descConvenio = "Todos do Acordo"
									}Else{
										set descConvenio = ""
										For i = 1 : 1 : $Length(cliente,";"){
											set descConvenio = descConvenio _ $Select(descConvenio="":"",1:" | ") _ $$GetOrganizacaoNome^VARSQL($Piece(cliente,";",i))
										}
									}
								}
								
								
								set linha = {}
								set linha.item 			= "("_item_") "_desc
								set linha.categoria 	= cate
								set linha.convenio 		= descConvenio
								set linha.qtde 			= +qtde
								set linha.valor 		= +valo
								set linha.itemCobravel 	= icob
								set linha.regras		= regra
								set linha.tabela		= tabe
								set linha.nomeTabela	= nome
								set linha.compostos		= compostos
								do dataSource.%Push(linha)
							}
						}
					}

				}
			}
		}
		
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set retorno.status 	= 1
		set retorno.type 	= "success"
		set retorno.dataSource = dataSource
	}else{
		trollback
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recValorConvertido">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo,codMoeda</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set conversor = 1
	set query = "select top 1 Conversor from FATAcordoComercialConvM where company=0 and codigodoacordo='"_codAcordo_"' and MoedadeDestino='R$' and moedadeorigem='"_codMoeda_"'"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set conversor = rs.%Get("Conversor")
	}
	quit conversor]]></Implementation>
</Method>

<Method name="getRegrasItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>codOrganizacao,codAcordo,item,convenio,dataVigencia="",horaVigencia="",flBuscaItemCobravel=0,job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if job="" set job = %session.SessionId
	set sequencia = "", tabelaTrocaItem = ""
	set linha={}
	for {
		set sequencia 	= $order(^mtemp.FATAcordoComercial(0,job,"tabelaComercial",sequencia)) quit:sequencia=""
		;W !,"Sequencia:",sequencia
		set obj 		= $get(^mtemp.FATAcordoComercial(0,job,"tabelaComercial",sequencia,1))
		set tabela		= $$$FATAcordoComercialTabelaCodigodaTabelaComercial(obj)
		set objTabela 	= $get(^FATTabelaComercial(0,tabela,1))
		set unidTabela	= $$$FATTabelaComercialUnidadeMonetaria(objTabela)
		set cliente			= $$$FATTabelaComercialClientedaTabela(objTabela)
		set ativo = $$$FATTabelaComercialAtivo(objTabela)
		if 'ativo continue
		;
		If (cliente'=""&&(convenio'="")) {
			;If (..convenioEstaAcima(cliente,convenio)=1) Continue
			Set flag = 0
			For i = 1 : 1 : $Length(cliente,";"){
				If (..convenioEstaAcima($Piece(cliente,";",i),convenio)=0) {
					Set flag = 1
				}
			}
			If (flag=0) Continue
		}
		;
		set conversor = ..recValorConvertido(codAcordo,unidTabela)
		;
		set objTabela = $get(^FATTabelaComercial(0,tabela,1))
		set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
		if dataVigencia'=""{
			set horaVigencia = $order(^FATTabelaComercialHist(0,tabela,dataVigencia,horaVigencia+1),-1)
			if horaVigencia=""{
				set dataVigencia = $order(^FATTabelaComercialHist(0,tabela,dataVigencia),-1)
				if dataVigencia'=""{
					set horaVigencia = $order(^FATTabelaComercialHist(0,tabela,dataVigencia,""),-1)
				}
			}
			if dataVigencia'="",horaVigencia'=""{
				set versao = $piece(^FATTabelaComercialHist(0,tabela,dataVigencia,horaVigencia,"Versao",1),"~",2)
			}
		}
		;
		set select = "select CodigodoItem,CodigodaTabela,DescricaodoItem,CategoriadoItem,Valordoitem,ItensCobraveis from FATTabelaComercialItem"
		set select = select_" where Company=0 and CodigodaTabela = '"_tabela_"' and VersaodaTabela='"_versao_"' and "
		if flBuscaItemCobravel'=1 set select = select_" CodigodoItem = '"_item_"'"
		if flBuscaItemCobravel=1 set select = select_" ';'||ItensCobraveis||';' like '%;"_item_";%'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.select)
		set inelegivel=0
		while(rs.%Next()){
			set codItem			= rs.%Get("CodigodoItem")
			set sequenciaItem	= codItem
			set codigoTabela	= rs.%Get("CodigodaTabela")
			set descricaoItem	= rs.%Get("DescricaodoItem")
			set categoria		= rs.%Get("CategoriadoItem")
			set valorItem		= rs.%Get("ValordoItem")*conversor
			set itensCobraveis	= rs.%Get("ItensCobraveis")
			set quantidade		= 1
			;
			set regras	 	= ..recRegraAplicadaItem(codOrganizacao,convenio,codigoTabela,sequenciaItem,dataVigencia,horaVigencia,job)
			set regrasFat	= ..recRegraFatAplicadaItem(codOrganizacao,convenio,codigoTabela,sequenciaItem,job)
			set inelegivel = 0
			set identificacaoRecebedorNaFontePagadora = ""
			set carteirinha	= 0,mascara="",min="",max="",tipoAtendimento="",tipoDaGuia=""
			set categoriaTISS="",versaoTISS="",familiaTISS=""
			set consultaGuiaAutorizacao = "",consultaSenhaAutorizacao = "",consultaNGuiaOperadora = "",consultaPossuiPrestador = ""
			set SPSADTGuiaAutorizacao = "",SPSADTSenhaAutorizacao = "",SPSADTNGuiaOperadora = "",SPSADTPossuiPrestador = ""
			set HonorariosGuiaAutorizacao = "",HonorariosSenhaAutorizacao = "",HonorariosNGuiaOperadora = "",HonorariosPossuiPrestador = ""
			set OutrasGuiaAutorizacao = "",OutrasSenhaAutorizacao = "",OutrasNGuiaOperadora = "",OutrasPossuiPrestador = ""
			set itemTroca = "", tempoLimeteTroca = ""
			set iterator = regras.%GetIterator()
			kill descontos 
			while iterator.%GetNext(.indice,.valor){
				if valor.inativo continue
				set obj 		= valor.objRegra
				set tipo 		= $$$FATRegraComercialTipodaRegra(obj)
				set ativo 		= +$$$FATRegraComercialAtivo(obj)
				set elegivel	= +$$$FATRegraComercialItemElegivel(obj)
				if 'ativo continue
				if tipo="ELEGIBILIDADE",elegivel=0{
					set inelegivel = 1
					quit
				}
				if tipo="DESDOBRE"{
					set tabela			= $$$FATRegraComercialTabelaComercial(obj)
					set itemTabela	 	= $$$FATRegraComercialItemdaTabelaComercial(obj)
					;
					set objTabela = $get(^FATTabelaComercial(0,tabela,1))
					set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
					;
					set query = "select top 1 CodigodoItem,DescricaodoItem,CategoriadoItem,ValordoItem from FATTabelaComercialItem where Company=0 and CodigodaTabela='"_tabela_"' and VersaodaTabela='"_versao_"' and CodigodoItem = '"_itemTabela_"'"
					set rsTD = ##class(%SQL.Statement).%ExecDirect("",query)
					while(rsTD.%Next()){
						set codItem = rsTD.%Get("CodigodoItem")
						set descricaoItem = rsTD.%Get("DescricaodoItem")
						set categoria = rsTD.%Get("CategoriadoItem")
						set valorItem = rsTD.%Get("ValordoItem")*conversor
					}
				}
				if tipo="PRECOBASE"{
					set moeda = $$$FATRegraComercialMoeda(obj)
					set preco = $$$FATRegraComercialPrecoBase(obj)
					set conversor = ..recValorConvertido(codAcordo,moeda)
					set valorItem = preco * conversor
				}
				if tipo="CALCULOPRECO"{
					set tipoCalculo	= $$$FATRegraComercialTipodeCalculopreco(obj)	
					if tipoCalculo	= 1{
						set moeda = $$$FATRegraComercialMoeda(obj)
						set preco = $$$FATRegraComercialPrecoBase(obj)
						set conversor = ..recValorConvertido(codAcordo,moeda)
						set valorItem = preco * conversor
					}
					if tipoCalculo	= 2{
						set tipoAjuste	= $$$FATRegraComercialTipodeAjuste(obj)	
						set percentual	= +$$$FATRegraComercialPercentual(obj)
						if tipoAjuste=1 {	; Desconto	
							set valorItem = valorItem - (valorItem*percentual/100)
						}else{				; Acrescimo
							set valorItem = valorItem + (valorItem*percentual/100)
						}
					}
					if tipoCalculo	= 3{
						set formula	= $$$FATRegraComercialFormula(obj)	
						set formula = $replace(formula,"valor",valorItem)
						set formula = $replace(formula,"VALOR",valorItem)
						set formula = $replace(formula,",",".")
						set executar = "set out = "_formula
						if ##class(%Library.Routine).CheckSyntax(executar,.error,9){
							xecute ("(out) "_executar,.out)
							set valorItem = out
						}
					}
				}
				if tipo="CALCULOQTDE"{
					set tipoCalculo = $$$FATRegraComercialTipodeCalculoquantidade(obj)
					if tipoCalculo=1{
						set quantidade = $$$FATRegraComercialQuantidadeBase(obj)
					}else{
						set formula = $$$FATRegraComercialFormula(obj)
						set formula = $replace(formula,"valor",quantidade)
						set formula = $replace(formula,"VALOR",quantidade)
						set formula = $replace(formula,",",".")
						set executar = "set out = "_formula
						if ##class(%Library.Routine).CheckSyntax(executar,.error,9){
							xecute ("(out) "_executar,.out)
							set quantidade = out
						}
					}
				}
				if tipo="AJUSTEPRECO"{
					set tipoAjuste	= $$$FATRegraComercialTipodeAjuste(obj)	
					set percentual	= +$$$FATRegraComercialPercentual(obj)
					if tipoAjuste=1 {	; Desconto	
						set valorItem = valorItem - (valorItem*percentual/100)
					}else{				; Acrescimo
						set valorItem = valorItem + (valorItem*percentual/100)
					}
				}
				if tipo="REDEFINIRCODIGO"{
					set trocaDescricao 	= $$$FATRegraComercialTrocaaDescricao(obj)
					set tabela			= $$$FATRegraComercialTabelaComercial(obj)
					;
					set objTabela = $get(^FATTabelaComercial(0,tabela,1))
					set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
					;
					;Solicitação Patricia - Julio
					;set query = "select top 1 CodigodoItem,DescricaodoItem from FATTabelaComercialItem where Company=0 and CodigodaTabela='"_tabela_"' and ';'||ItensCobraveis||';' like '%;"_itensCobraveis_";%'"
					Set query = "select top 1 CodigodoItem,DescricaodoItem,CodigodaTabela from FATTabelaComercialItem where Company=0 and CodigodaTabela='"_tabela_"' and versaodatabela='"_versao_"' and ("
					For xI = 1 : 1 : $Length(itensCobraveis,";"){
						Set query = query _ $Select(xI=1:"",1:" Or") _ " (';'||ItensCobraveis||';' like '%;"_$Piece(itensCobraveis,";",xI)_";%') "
					}
					Set query = query _ ")"
					set rsTD = ##class(%SQL.Statement).%ExecDirect("",query)
					while(rsTD.%Next()){
						set codItem = rsTD.%Get("CodigodoItem")
						set tabelaTrocaItem = rsTD.%Get("CodigodaTabela")
						set:trocaDescricao=1 descricaoItem = rsTD.%Get("DescricaodoItem")
					}
				}
				if tipo="TIPOATENDIMENTO"{
					set tipoDaGuia		= $$$FATRegraComercialCodigodoTipodaGuia(obj)
					set tipoAtendimento	= $$$FATRegraComercialCodigodoTipodoAtendimento(obj)
				}
				if tipo="IDENTIFICADORRECEBEDOR"{
					set identificacaoRecebedorNaFontePagadora = $$$FATRegraComercialIdentificadordoRecebedor(obj)
				}
				if tipo="COBRARITEMCOMPOSTO"{
					;set $$$FATRegraComercialCodigodoProduto(obj)
					set itensNaoInclusos	= $$$FATRegraComercialItensNaoInclusos(obj)
					set possuiCompostos 	= 1
					set desconsiderarNoComposto = itensNaoInclusos
				}
				if tipo="LIMITEDESCONTO"{
					set perfil = $$$FATRegraComercialCodigodoPerfil(obj) 
					set percentual = $$$FATRegraComercialPercentual(obj)
					for i=1:1:$length(perfil,";"){
						set ret = $piece(perfil,";",i)
						if ret="" continue
						set descontos(ret)=percentual
					}
				}
				if tipo="TROCAITEMLIMTEMPO"{
					set itemTroca = $$$FATRegraComercialItemdaTabelaComercial(obj) 
					set tempoLimeteTroca = $$$FATRegraComercialLimitedeTempodias(obj)
				}
			}
			quit:inelegivel
			;
			set retornoRegrasFat = ..converteRegrasFaturamento(regrasFat,.regras)
			set inelegivel = retornoRegrasFat.inelegivel
			quit:inelegivel
			;
			set linha = {}
			set linha.codigoTabela 	= codigoTabela
			set linha.codigoItem 	= codItem
			set linha.descricaoItem = descricaoItem
			;
			set linha.tabelaTrocaItem = tabelaTrocaItem
			;
			set linha.codCategoria	 	= categoria
			if categoria'=""{
				set objCategoria 	= $get(^FATTabelaComercialCategoria(0,codigoTabela,categoria,1))
				set categoria		= $$$FATTabelaComercialCategoriaDescricao(objCategoria)
			}
			;
			set linha.categoria	 	= categoria
			set linha.qtde		 	= quantidade
			set linha.valor		 	= quantidade*valorItem
			set linha.itensCobraveis= itensCobraveis
			set linha.carteirinha 	= retornoRegrasFat.carteirinha
			set linha.carteirinhaMascara = retornoRegrasFat.carteirinhaMin
			set linha.carteirinhaMin = retornoRegrasFat.carteirinhaMin
			set linha.carteirinhaMax = retornoRegrasFat.carteirinhaMax
			set linha.categoriaTISS	 = retornoRegrasFat.categoriaTISS
			set linha.versaoTISS	 = retornoRegrasFat.versaoTISS
			set linha.familiaTISS	 = retornoRegrasFat.familiaTISS
			;
			set linha.possuiCompostos 			= $get(possuiCompostos)
			set linha.desconsiderarNoComposto 	= $get(desconsiderarNoComposto)
			;
			set linha.consultaGuiaAutorizacao 	= +retornoRegrasFat.consultaGuiaAutorizacao
			set linha.consultaSenhaAutorizacao 	= +retornoRegrasFat.consultaSenhaAutorizacao
			set linha.consultaNGuiaOperadora 	= +retornoRegrasFat.consultaNGuiaOperadora
			set linha.consultaPossuiPrestador 	= +retornoRegrasFat.consultaPossuiPrestador
			set linha.SPSADTGuiaAutorizacao 	= +retornoRegrasFat.SPSADTGuiaAutorizacao
			set linha.SPSADTSenhaAutorizacao 	= +retornoRegrasFat.SPSADTSenhaAutorizacao
			set linha.SPSADTNGuiaOperadora 		= +retornoRegrasFat.SPSADTNGuiaOperadora
			set linha.SPSADTPossuiPrestador 	= +retornoRegrasFat.SPSADTPossuiPrestador
			set linha.honorariosGuiaAutorizacao = +retornoRegrasFat.HonorariosGuiaAutorizacao
			set linha.honorariosSenhaAutorizacao= +retornoRegrasFat.HonorariosSenhaAutorizacao
			set linha.honorariosNGuiaOperadora 	= +retornoRegrasFat.HonorariosNGuiaOperadora
			set linha.honorariosPossuiPrestador = +retornoRegrasFat.HonorariosPossuiPrestador
			set linha.outrasGuiaAutorizacao 	= +retornoRegrasFat.OutrasGuiaAutorizacao
			set linha.outrasSenhaAutorizacao 	= +retornoRegrasFat.OutrasSenhaAutorizacao
			set linha.outrasNGuiaOperadora 		= +retornoRegrasFat.OutrasNGuiaOperadora
			set linha.outrasPossuiPrestador 	= +retornoRegrasFat.OutrasPossuiPrestador
			
			set linha.identificacaoRecebedorNaFontePagadora = identificacaoRecebedorNaFontePagadora
			set linha.tipoDaGuia		= tipoDaGuia
			set linha.tipoAtendimento	= tipoAtendimento
			;
			set linha.itemTroca	= itemTroca
			set linha.tempoLimeteTroca = tempoLimeteTroca
			;
			set descontos = []
			set perfil=""
			for {
				set perfil = $order(descontos(perfil)) quit:perfil=""
				set desconto = +descontos(perfil)
				set desc = {}
				set desc.perfil = perfil
				set desc.desconto = desconto
				do descontos.%Push(desc)
			}
			set linha.descontos	= descontos
			;
			set linha.regras		 = regras
		}
		if inelegivel quit
		if linha.codigoTabela'="" quit
	}
	quit linha]]></Implementation>
</Method>

<Method name="converteRegrasFaturamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>objRegrasIn,&amp;objRegrasOut=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set retorno = {}
	set iterator = objRegrasIn.%GetIterator()
	while iterator.%GetNext(.indice,.valor){
		if valor.inativo=1 continue
		if valor.piece=1,valor.nome="Inelegibilidade" set retorno.inelegivel=1 quit
		if valor.piece=4{
			set retorno.carteirinha = $piece(valor.objRegra,";",2)
			set retorno.carteirinhaMascara = $piece(valor.objRegra,";",3)
			set retorno.carteirinhaMin = $piece(valor.objRegra,";",4)
			set retorno.carteirinhaMax = $piece(valor.objRegra,";",5)
		}
		if valor.piece=14 set retorno.categoriaTISS = $piece(valor.objRegra,";",2)
		if valor.piece=15 set retorno.versaoTISS = $piece(valor.objRegra,";",2)
		if valor.piece=32 set retorno.familiaTISS = $piece(valor.objRegra,";",2)
		;
		if valor.piece=16 set retorno.consultaGuiaAutorizacao 	= $piece(valor.objRegra,";",2)
		if valor.piece=17 set retorno.consultaSenhaAutorizacao 	= $piece(valor.objRegra,";",2)
		if valor.piece=18 set retorno.consultaNGuiaOperadora 	= $piece(valor.objRegra,";",2)
		if valor.piece=19 set retorno.consultaPossuiPrestador 	= $piece(valor.objRegra,";",2)
		if valor.piece=20 set retorno.SPSADTGuiaAutorizacao 	= $piece(valor.objRegra,";",2)
		if valor.piece=21 set retorno.SPSADTSenhaAutorizacao 	= $piece(valor.objRegra,";",2)
		if valor.piece=22 set retorno.SPSADTNGuiaOperadora 		= $piece(valor.objRegra,";",2)
		if valor.piece=23 set retorno.SPSADTPossuiPrestador 	= $piece(valor.objRegra,";",2)
		if valor.piece=24 set retorno.HonorariosGuiaAutorizacao = $piece(valor.objRegra,";",2)
		if valor.piece=25 set retorno.HonorariosSenhaAutorizacao= $piece(valor.objRegra,";",2)
		if valor.piece=26 set retorno.HonorariosNGuiaOperadora 	= $piece(valor.objRegra,";",2)
		if valor.piece=27 set retorno.HonorariosPossuiPrestador = $piece(valor.objRegra,";",2)
		if valor.piece=28 set retorno.OutrasGuiaAutorizacao 	= $piece(valor.objRegra,";",2)
		if valor.piece=29 set retorno.OutrasSenhaAutorizacao 	= $piece(valor.objRegra,";",2)
		if valor.piece=30 set retorno.OutrasNGuiaOperadora 		= $piece(valor.objRegra,";",2)
		if valor.piece=31 set retorno.OutrasPossuiPrestador 	= $piece(valor.objRegra,";",2)
		if objRegrasOut'="" do objRegrasOut.%Push(valor)
	}	
	quit retorno]]></Implementation>
</Method>

<Method name="getDadosFaturamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tabela 		= $get(%request.Data("tabela",1))
	set categoria 	= $get(%request.Data("categoria",1))
	set item 		= $get(%request.Data("item",1))
	set organizacao	= $get(%request.Data("organizacao",1))
	set convenio	= $get(%request.Data("convenio",1))
	;
	set obj	= ..recuperaRegras(job,organizacao,convenio,tabela,categoria,item)
	;
	set formFaturamento = {}
	set formFaturamento.tabela					= tabela
	set formFaturamento.categoria				= categoria
	set formFaturamento.item					= item
	set formFaturamento.convenio				= convenio
	;
	set formFaturamento.inelegivel				= +$$$FATRegrasFatOrganizacaoItensInelegiveis(obj)
	set formFaturamento.limiteDesconto			= $$$FATRegrasFatOrganizacaoLimitedeDesconto(obj)
	set formFaturamento.nfDetalhe				= +$$$FATRegrasFatOrganizacaoApresentardetalhesnaNF(obj)
	set formFaturamento.obrigatorioNumCarteirinha= +$$$FATRegrasFatOrganizacaoObrigatorionumerodacartei(obj)
	set formFaturamento.mascara					= $$$FATRegrasFatOrganizacaoMascaradaCarteirinha(obj)
	set formFaturamento.minimoCaracteres		= $$$FATRegrasFatOrganizacaoMinimodeCaracteres(obj)
	set formFaturamento.maximoCaracteres		= $$$FATRegrasFatOrganizacaoMaximodeCaracteres(obj)
	set formFaturamento.faturaRetroativa		= +$$$FATRegrasFatOrganizacaoPermitirFaturasRetroativa(obj)
	set formFaturamento.diasFaturaRetroativa	= $$$FATRegrasFatOrganizacaoTempoemdiasParaFaturaRetr(obj)
	set formFaturamento.fechamentoData			= $$$FATRegrasFatOrganizacaoDiasdeFechamento(obj)
	set formFaturamento.conferenciaFA			= +$$$FATRegrasFatOrganizacaoObrigatorioConferenciaFA(obj)
	set formFaturamento.nfGeradaCredenciado		= +$$$FATRegrasFatOrganizacaoNFdevesergeradoparaocrede(obj)
	set formFaturamento.nfGeracaoAutomatica		= +$$$FATRegrasFatOrganizacaoGeracaoautomaticadolote(obj)
	set formFaturamento.versaoTISS				= $$$FATRegrasFatOrganizacaoVersaodaGuiaTISS(obj)
	set formFaturamento.guiaAutorizacaoConsulta	= +$$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad(obj)
	set formFaturamento.senhaAutorizacaoConsulta= +$$$FATRegrasFatOrganizacaoConsultaObrigatorioSenha(obj)
	set formFaturamento.numGuiaOperadoraConsulta= +$$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad1(obj)
	set formFaturamento.codigoPrestadorConsulta = +$$$FATRegrasFatOrganizacaoConsultaPossuiCodigodePr(obj)
	;
	set formFaturamento.guiaAutorizacaoSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeA(obj)
	set formFaturamento.senhaAutorizacaoSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTObrigatorioSenhade(obj)
	set formFaturamento.numGuiaOperadoraSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeO(obj)
	set formFaturamento.codigoPrestadorSPSADT		= +$$$FATRegrasFatOrganizacaoSPSADTPossuiCodigodePres(obj)
	;
	set formFaturamento.guiaAutorizacaoHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)
	set formFaturamento.senhaAutorizacaoHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosObrigatorioSen(obj)
	set formFaturamento.numGuiaOperadoraHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)
	set formFaturamento.codigoPrestadorHonorarios	= +$$$FATRegrasFatOrganizacaoHonorariosPossuiCodigodo(obj)
	;
	set formFaturamento.guiaAutorizacaoOutras		= +$$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeA(obj)
	set formFaturamento.senhaAutorizacaoOutras		= +$$$FATRegrasFatOrganizacaoOutrosObrigatorioSenhade(obj)
	set formFaturamento.numGuiaOperadoraOutras		= +$$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeO(obj)
	set formFaturamento.codigoPrestadorOutras 		= +$$$FATRegrasFatOrganizacaoOutrosPossuiCodigodePres(obj)
	;
	set formFaturamento.categoriaTISS				= $$$FATRegrasFatOrganizacaoCategoriaTISS(obj)
	set formFaturamento.familiaTISS					= $$$FATRegrasFatOrganizacaoFamiliaTISS(obj)
	set retorno = {}
	set retorno.formFaturamento = formFaturamento
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaRegrasPai">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objRetorno = ""
	for {
		set obj = $get(^FATRegrasFatOrganizacao(0,codigo,1))
		for piece=1:1:$length(obj,"~"){
			if $piece(objRetorno,"~",piece)'="" continue
			set $piece(objRetorno,"~",piece) = $piece(obj,"~",piece)
		}
		set objOrg	= $get(^FATOrganizacao(0,codigo,1))
		set codigo	= $$$FATOrganizacaoOrganizacaoPai(objOrg)
		quit:codigo=""
	}
	quit objRetorno]]></Implementation>
</Method>

<Method name="pesquisaAcordo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		;set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set contador = 0
	set select1 = "select CodigodoAcordo,Nome,$$GetOrganizacaoNome^VARSQL(PrestadordeServico) PrestadordeServico,"
	set select1 = select1_" $$GetOrganizacaoNome^VARSQL(Recebedor) Recebedor,"
	set select1 = select1_" Case when TipodeFontePagadora=1 then 'Particular' else $$GetOrganizacaoNome^VARSQL(FontePagadora) end FontePagadora,"
	set select1 = select1_" Case when Ativo=1 then 'Ativo' else 'Inativo' end Ativo"
	set select1 = select1_" from  FATAcordoComercial"
	set select1 = select1_" where Company=0 "
	if codigo '= "" set select1 = select1_" and CodigodoAcordo = '"_codigo_"' "
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set CodigodoAcordo		= rs.%Get("CodigodoAcordo")
		set Nome				= rs.%Get("Nome")
		set PrestadordeServico	= rs.%Get("PrestadordeServico")
		set FontePagadora		= rs.%Get("FontePagadora")
		set Recebedor			= rs.%Get("Recebedor")
		set Ativo				= rs.%Get("Ativo")
		set totalCount			= rs.%Get("totalCount")
		set linha = {}
		set linha.CodigodoAcordo		= CodigodoAcordo
		set linha.Nome 					= Nome
		set linha.PrestadordeServico	= PrestadordeServico
		set linha.FontePagadora			= FontePagadora
		set linha.Recebedor				= Recebedor
		set linha.Ativo 				= Ativo
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="pesquisaCadastros">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set tabela = $get(%request.Data("tabela",1))
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		;set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set contador = 0
	set select1 = "select CodigodaTabela,Nome,Descricao,"
	set select1 = select1_" $$SQLGetUserParamDesc^VARSQL('TIPOSTABELACOMERCIAL~'||tipodetabela) tipoTabela, "
	set select1 = select1_" $$SQLGetUserParamDesc^VARSQL('UNIDMONETARIATABELACOMERCIAL~'||unidademonetaria) unidadeMonetaria, "
	set select1 = select1_" CasasDecimais, "
	set select1 = select1_" Case when Ativo=1 then 'Ativo' else 'Inativo' end Ativo"
	set select1 = select1_" from  FATTabelaComercial"
	set select1 = select1_" where Company=0 "
	if codigo '= "" set select1 = select1_" and CodigodaTabela = '"_codigo_"' "
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set CodigodaTabela		= rs.%Get("CodigodaTabela")
		set Nome				= rs.%Get("Nome")
		set Descricao			= rs.%Get("Descricao")
		set Ativo				= rs.%Get("Ativo")
		set tipoTabela			= rs.%Get("tipoTabela")
		set unidadeMonetaria	= rs.%Get("unidadeMonetaria")
		set CasasDecimais		= rs.%Get("CasasDecimais")
		set totalCount			= rs.%Get("totalCount")
		set linha = {}
		set linha.CodigodaTabela		= CodigodaTabela
		set linha.Nome 					= Nome
		set linha.Descricao				= Descricao
		set linha.Ativo 				= Ativo
		set linha.tipoTabela 			= tipoTabela
		set linha.unidadeMonetaria 		= unidadeMonetaria
		set linha.casasDecimais 		= CasasDecimais
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getOrganizacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codAcordo	= $get(%request.Data("codAcordo",1))
	set organizacao	= $get(%request.Data("organizacao",1))
	set retorno = ..buscaFilhos(job,codAcordo,organizacao)
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getOrganizacaoPai">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo	= $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set select 	= "select CodigodaOrganizacao,Nome,Ativo from FATOrganizacao Pai where Company=0 and OrganizacaoPai is null and (select top 1 CodigodaOrganizacao from FATOrganizacao Filho where Filho.company=0 and Filho.OrganizacaoPai = Pai.CodigodaOrganizacao) is not null"
	if codigo '= "" set select = select_" and CodigodaOrganizacao = '"_codigo_"' "
	else  set select = select_" and ativo = 1"
	;
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select_") order by %upper(Nome)"
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.codigo = rs.%Get("CodigodaOrganizacao")
		set linha.descricao = "("_rs.%Get("CodigodaOrganizacao")_") "_rs.%Get("Nome")
		if 'rs.%Get("Ativo") set linha.descricao = linha.descricao_" (INATIVO)"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getFontePagadora">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set campo	 = $Get(%request.Data("campo",1))
	set select = "select CodigodaOrganizacao,Nome,Ativo from FATOrganizacao where Company=0"
	if campo'="" set select = select_" and "_campo_" = 1"
	if codigo'="" set select = select_" and CodigodaOrganizacao = '"_codigo_"'"
	else  set select = select_" and Ativo = 1"
	set retorno = []
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		set linha={}
		set linha.codigo = rs.%Get("CodigodaOrganizacao")
		set ativo = rs.%Get("Ativo")
		set linha.descricao = "("_linha.codigo_") "_rs.%Get("Nome")
		set linha.descricao2 = "TESTE"
		if 'ativo set linha.descricao = linha.descricao_" (INATIVO)"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getTabelaComercial">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set select = "select CodigodaTabela,Nome,ClientedaTabela,VersaoAtualdaTabeladeIten,Ativo from  FATTabelaComercial where Company=0 and TipodeTabela=2"
	set retorno = []
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		if rs.%Get("ClientedaTabela")'=""{
			if '$data(^mtemp.FATAcordoComercial1(0,job,"clienteComercial",rs.%Get("ClientedaTabela"))) {
				set cc = ""
				set ok=0
				for {
					set cc = $order(^mtemp.FATAcordoComercial1(0,job,"clienteComercial",cc)) quit:cc=""
					set objCC = $get(^FATOrganizacao(0,cc,1))
					;
					set convenioOrigem = cc
					for {
						set obj = $get(^FATOrganizacao(0,convenioOrigem,1))
						set convenioOrigem = $$$FATOrganizacaoOrganizacaoPai(obj)
						if (";"_rs.%Get("ClientedaTabela")_";")[(";"_cc_";") set ok=1 quit
						if (";"_rs.%Get("ClientedaTabela")_";")[(";"_convenioOrigem_";") set ok=1 quit
						quit:convenioOrigem=""
					}
					quit:ok=1
					;
				}
				if 'ok continue
			}
			
		}
		set ativo = rs.%Get("Ativo")
		if 'ativo,'$data(^mtemp.FATAcordoComercial1(0,job,"tabelaComercial",rs.%Get("CodigodaTabela"))) continue
		set linha={}
		set linha.id = rs.%Get("CodigodaTabela")
		set linha.text = "("_linha.id_") "_rs.%Get("Nome")_" (versão "_rs.%Get("VersaoAtualdaTabeladeIten")_")"
		if 'ativo set linha.text = linha.text_" (INATIVO)"
		set linha.caminho = rs.%Get("Nome")
		if $data(^mtemp.FATAcordoComercial1(0,job,"tabelaComercial",linha.id)) set linha.selected = 1
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="getRegrasAplicadasGeral">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codAcordo = $get(%request.Data("codAcordo",1))
	set pontoAplicacao = []
	if codAcordo'=""{
		;
		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatAcordo(0,codAcordo,convenio)) quit:convenio=""
			set obj = $get(^FATRegrasFatAcordo(0,codAcordo,convenio,1))
			kill vetor
			for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
				set resp = i_"^"_$piece(obj,"~",i)
				if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
				else  if $piece(obj,"~",i)="" continue
				set vetor(resp)=$get(vetor(resp))+1	
			}
			set objLoop = ""
			for{
				set objLoop = $order(vetor(objLoop)) quit:objLoop=""
				set id	= "regrasFatOrganizacao,T"
				set objResp = ##class(%Library.DynamicArray).%New()
				set objResp = ..recRegrasFaturamento(1,id,"Organizacao","T",objLoop)
				if objResp.%Size()=0 continue
				set linha={}
				set linha.regraComercial	= objResp.%Get(0).nome
				set linha.tipoRegra			= "Faturamento"
				if convenio="T" set dconvenio = "Todos os convênios"
				else  set dconvenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
				set linha.ponto   			= "Aplicado no acordo comercial ("_dconvenio_")"
				do pontoAplicacao.%Push(linha)

			}
			
		}

		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatTabela(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATRegrasFatTabela(0,codAcordo,convenio,tabela)) quit:tabela=""
				set obj = $get(^FATRegrasFatTabela(0,codAcordo,convenio,tabela,1))
				kill vetor
				for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
					set resp = i_"^"_$piece(obj,"~",i)
					if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
					else  if $piece(obj,"~",i)="" continue
					set vetor(resp)=$get(vetor(resp))+1	
				}
				set objLoop = ""
				for{
					set objLoop = $order(vetor(objLoop)) quit:objLoop=""
					set id	= "regrasFatOrganizacao,T"
					set objResp = ##class(%Library.DynamicArray).%New()
					set objResp = ..recRegrasFaturamento(1,id,"Organizacao","T",objLoop)
					if objResp.%Size()=0 continue
					set linha={}
					set linha.regraComercial	= objResp.%Get(0).nome
					set linha.tipoRegra			= "Faturamento"
					if convenio="T" set dconvenio = "Todos os convênios"
					else  set dconvenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
					;
					set obj 		= $get(^FATTabelaComercial(0,tabela,1))
					set nomeTabela	 	= $$$FATTabelaComercialNome(obj)
					;		
					set linha.ponto   			= "Aplicado na tabela comercial "_nomeTabela_" ("_dconvenio_")"
					do pontoAplicacao.%Push(linha)

				}
			}
		}

		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatCategoria(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATRegrasFatCategoria(0,codAcordo,convenio,tabela)) quit:tabela=""
				set categoria = ""
				for {
					set categoria = $order(^FATRegrasFatCategoria(0,codAcordo,convenio,tabela,categoria)) quit:categoria=""
					set obj = $get(^FATRegrasFatCategoria(0,codAcordo,convenio,tabela,categoria,1))
					kill vetor
					for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
						set resp = i_"^"_$piece(obj,"~",i)
						if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
						else  if $piece(obj,"~",i)="" continue
						set vetor(resp)=$get(vetor(resp))+1	
					}
					set objLoop = ""
					for{
						set objLoop = $order(vetor(objLoop)) quit:objLoop=""
						set id	= "regrasFatOrganizacao,T"
						set objResp = ##class(%Library.DynamicArray).%New()
						set objResp = ..recRegrasFaturamento(1,id,"Organizacao","T",objLoop)
						if objResp.%Size()=0 continue
						set linha={}
						set linha.regraComercial	= objResp.%Get(0).nome
						set linha.tipoRegra			= "Faturamento"
						if convenio="T" set dconvenio = "Todos os convênios"
						else  set dconvenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
						;
						set obj 		= $get(^FATTabelaComercial(0,tabela,1))
						set nomeTabela	 	= $$$FATTabelaComercialNome(obj)
						;		
						set objItem = $get(^FATTabelaComercialCategoria(0,tabela,categoria,1))
						set nomeCategoria = $$$FATTabelaComercialCategoriaDescricao(objItem)
						;						
						set linha.ponto   			= "Aplicado na categoria "_nomeCategoria_" da tabela comercial "_nomeTabela_" ("_dconvenio_")"
						do pontoAplicacao.%Push(linha)

					}
				}
			}
		}

		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatItem(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATRegrasFatItem(0,codAcordo,convenio,tabela)) quit:tabela=""
				set item = ""
				for {
					set item = $order(^FATRegrasFatItem(0,codAcordo,convenio,tabela,item)) quit:item=""
					set obj = $get(^FATRegrasFatItem(0,codAcordo,convenio,tabela,item,1))
					kill vetor
					for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
						set resp = i_"^"_$piece(obj,"~",i)
						if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
						else  if $piece(obj,"~",i)="" continue
						set vetor(resp)=$get(vetor(resp))+1	
					}
					set objLoop = ""
					for{
						set objLoop = $order(vetor(objLoop)) quit:objLoop=""
						set id	= "regrasFatOrganizacao,T"
						set objResp = ##class(%Library.DynamicArray).%New()
						set objResp = ..recRegrasFaturamento(1,id,"Organizacao","T",objLoop)
						if objResp.%Size()=0 continue
						set linha={}
						set linha.regraComercial	= objResp.%Get(0).nome
						set linha.tipoRegra			= "Faturamento"
						if convenio="T" set dconvenio = "Todos os convênios"
						else  set dconvenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
						;
						set obj 		= $get(^FATTabelaComercial(0,tabela,1))
						set nomeTabela	= $$$FATTabelaComercialNome(obj)
						set versao 		= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(obj)
						;		
						set objItem = $get(^FATTabelaComercialItem(0,tabela,versao,item,1))
						set nomeItem = "("_item_") "_$$$FATTabelaComercialItemDescricaodoItem(objItem)
						;						
						set linha.ponto   			= "Aplicado no item "_nomeItem_" da tabela comercial "_nomeTabela_" ("_dconvenio_")"
						do pontoAplicacao.%Push(linha)

					}
				}
			}
		}

		; Recupera regras aplicadas diretamente em acordos
		set select = "Select CodigodaRegraComercial,CodigodoConvenio from FATAcordoComercialRegraAcordo where company=0 and CodigodoAcordoComercial = '"_codAcordo_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.select)
		while(rs.%Next()){
			set linha={}
			set linha.regraComercial 	= rs.%Get("CodigodaRegraComercial")
			set linha.tipoRegra			= "Regra Comercial"
			set objRegraComercial		= $get(^FATRegraComercial(YM,linha.regraComercial,1))
			set linha.regraComercial	= "("_linha.regraComercial_") "_$$$FATRegraComercialNome(objRegraComercial)
			
			set convenio			 	= rs.%Get("CodigodoConvenio")
			if convenio="T" set convenio = "Todos os convênios"
			else  set convenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
			set linha.ponto   			= "Aplicado no acordo comercial ("_convenio_")"
			do pontoAplicacao.%Push(linha)
		}

		set select = "Select CodigodaRegraComercial,CodigodoConvenio,CodigodaTabelaComercial from FATAcordoComercialRegraTabela where company=0 and CodigodoAcordoComercial = '"_codAcordo_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.select)
		while(rs.%Next()){
			set linha={}
			set linha.regraComercial 	= rs.%Get("CodigodaRegraComercial")
			set linha.tipoRegra			= "Regra Comercial"
			set objRegraComercial		= $get(^FATRegraComercial(YM,linha.regraComercial,1))
			set linha.regraComercial	= "("_linha.regraComercial_") "_$$$FATRegraComercialNome(objRegraComercial)
			
			set tabela					= rs.%Get("CodigodaTabelaComercial")
			set convenio			 	= rs.%Get("CodigodoConvenio")
			
			if convenio="T" set convenio = "Todos os convênios"
			else  set convenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
			;
			set obj 		= $get(^FATTabelaComercial(0,tabela,1))
			set tabela	 	= $$$FATTabelaComercialNome(obj)
			;		
			set linha.ponto   			= "Aplicado na tabela comercial "_tabela_" ("_convenio_")"
			do pontoAplicacao.%Push(linha)
		}

		set select = "Select CodigodaRegraComercial,CodigodoConvenio,CodigodaTabelaComercial,CodigodaCategoriadoItem from FATAcordoComercialRegraCat where company=0 and CodigodoAcordoComercial = '"_codAcordo_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.select)
		while(rs.%Next()){
			set linha={}
			set linha.regraComercial 	= rs.%Get("CodigodaRegraComercial")
			set linha.tipoRegra			= "Regra Comercial"
			set objRegraComercial		= $get(^FATRegraComercial(YM,linha.regraComercial,1))
			set linha.regraComercial	= "("_linha.regraComercial_") "_$$$FATRegraComercialNome(objRegraComercial)
			
			set categoria				= rs.%Get("CodigodaCategoriadoItem")
			set tabela					= rs.%Get("CodigodaTabelaComercial")
			set convenio			 	= rs.%Get("CodigodoConvenio")
			
			if convenio="T" set convenio = "Todos os convênios"
			else  set convenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
			;
			set objItem = $get(^FATTabelaComercialCategoria(0,tabela,categoria,1))
			set categoria = $$$FATTabelaComercialCategoriaDescricao(objItem)
			;		
			set obj 		= $get(^FATTabelaComercial(0,tabela,1))
			set tabela	 	= $$$FATTabelaComercialNome(obj)
			;
			set linha.ponto   			= "Aplicado na categoria "_categoria_" da tabela comercial "_tabela_" ("_convenio_")"
			do pontoAplicacao.%Push(linha)
		}

		set select = "Select CodigodaRegraComercial,CodigodoConvenio,CodigodaTabelaComercial,CodigodoItem from FATAcordoComercialRegraItem where company=0 and CodigodoAcordoComercial = '"_codAcordo_"'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.select)
		while(rs.%Next()){
			set linha={}
			set linha.regraComercial 	= rs.%Get("CodigodaRegraComercial")
			set linha.tipoRegra			= "Regra Comercial"
			set objRegraComercial		= $get(^FATRegraComercial(YM,linha.regraComercial,1))
			set linha.regraComercial	= "("_linha.regraComercial_") "_$$$FATRegraComercialNome(objRegraComercial)
			
			set item					= rs.%Get("CodigodoItem")
			set tabela					= rs.%Get("CodigodaTabelaComercial")
			set convenio			 	= rs.%Get("CodigodoConvenio")
			
			if convenio="T" set convenio = "Todos os convênios"
			else  set convenio = "convênio - "_$$GetOrganizacaoNome^VARSQL(convenio)
			;
			;
			set obj 		= $get(^FATTabelaComercial(0,tabela,1))
			set tabela	 	= $$$FATTabelaComercialNome(obj)
			set versao 		= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(obj)
			;
			set objItem = $get(^FATTabelaComercialItem(0,tabela,versao,item,1))
			set item = "("_item_") "_$$$FATTabelaComercialItemDescricaodoItem(objItem)
			;		
			;
			set linha.ponto   			= "Aplicado no item "_item_" da tabela comercial "_tabela_" ("_convenio_")"
			do pontoAplicacao.%Push(linha)
		}
	}
	write pontoAplicacao.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getRegras">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo	= $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set select = "select CodigodaRegra,Nome"
	set select = select_" from FATRegraComercial"
	set select = select_" where Company=0 and Ativo=1 "
	if codigo '= "" set select = select_" and CodigodaRegra = '"_codigo_"' "
	if (searchValue'="") {
		set select = select_" and %Upper(Nome) Like %Upper('%"_searchValue_"%') "
	}
	;
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select_") order by %upper(Nome)"
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set CodigodaRegra		= rs.%Get("CodigodaRegra")
		set Nome				= rs.%Get("Nome")
		set linha = {}
		set linha.codigo				= CodigodaRegra
		set linha.descricao				= "("_$extract("000000",1,6-$length(CodigodaRegra))_CodigodaRegra_") "_Nome
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="confirmaRegraFaturamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set campos			= $get(%request.Data("campos",1))
	set codOrganizacao	= $get(%request.Data("organizacao",1))
	set strStatus = $$$OK
	tstart
	try{
		set campos = [].%FromJSON(campos)
		set convenio	= campos.convenio
		set tabela		= campos.tabela
		set categoria	= campos.categoria
		set item		= campos.item
		;
		set obj = ""
		set inelegivel					= campos.inelegivel
		set limiteDesconto				= campos.limiteDesconto
		set nfDetalhe					= campos.nfDetalhe
		set obrigatorioNumCarteirinha	= campos.obrigatorioNumCarteirinha
		set mascara						= campos.mascara
		set minimoCaracteres			= campos.minimoCaracteres
		set maximoCaracteres			= campos.maximoCaracteres
		set faturaRetroativa			= campos.faturaRetroativa
		set diasFaturaRetroativa		= campos.diasFaturaRetroativa
		set fechamentoData				= campos.fechamentoData
		set conferenciaFA				= campos.conferenciaFA
		set nfGeradaCredenciado			= campos.nfGeradaCredenciado
		set nfGeracaoAutomatica			= campos.nfGeracaoAutomatica
		set versaoTISS					= campos.versaoTISS
		set guiaAutorizacaoConsulta		= campos.guiaAutorizacaoConsulta
		set senhaAutorizacaoConsulta	= campos.senhaAutorizacaoConsulta
		set numGuiaOperadoraConsulta	= campos.numGuiaOperadoraConsulta
		set codigoPrestadorConsulta		= campos.codigoPrestadorConsulta
		set guiaAutorizacaoSPSADT		= campos.guiaAutorizacaoSPSADT
		set senhaAutorizacaoSPSADT		= campos.senhaAutorizacaoSPSADT
		set numGuiaOperadoraSPSADT		= campos.numGuiaOperadoraSPSADT
		set codigoPrestadorSPSADT		= campos.codigoPrestadorSPSADT
		set guiaAutorizacaoHonorarios	= campos.guiaAutorizacaoHonorarios
		set senhaAutorizacaoHonorarios	= campos.senhaAutorizacaoHonorarios
		set numGuiaOperadoraHonorarios	= campos.numGuiaOperadoraHonorarios
		set codigoPrestadorHonorarios	= campos.codigoPrestadorHonorarios
		set guiaAutorizacaoOutras		= campos.guiaAutorizacaoOutras
		set senhaAutorizacaoOutras		= campos.senhaAutorizacaoOutras
		set numGuiaOperadoraOutras		= campos.numGuiaOperadoraOutras
		set codigoPrestadorOutras		= campos.codigoPrestadorOutras
		;
		set categoriaTISS				= campos.categoriaTISS
		set familiaTISS					= campos.familiaTISS
		;
		set $$$FATRegrasFatOrganizacaoItensInelegiveis(obj)			= inelegivel
		set $$$FATRegrasFatOrganizacaoLimitedeDesconto(obj)			= limiteDesconto
		set $$$FATRegrasFatOrganizacaoApresentardetalhesnaNF(obj)	= +nfDetalhe
		;set $$$FATRegrasFatOrganizacaoObrigatorionumerodacartei(obj)= +obrigatorioNumCarteirinha
		;set $$$FATRegrasFatOrganizacaoMascaradaCarteirinha(obj)		= mascara
		;set $$$FATRegrasFatOrganizacaoMinimodeCaracteres(obj)		= minimoCaracteres
		;set $$$FATRegrasFatOrganizacaoMaximodeCaracteres(obj)		= maximoCaracteres
		set $$$FATRegrasFatOrganizacaoPermitirFaturasRetroativa(obj)= +faturaRetroativa
		set $$$FATRegrasFatOrganizacaoTempoemdiasParaFaturaRetr(obj)= diasFaturaRetroativa
		set $$$FATRegrasFatOrganizacaoDiasdeFechamento(obj)			= fechamentoData
		set $$$FATRegrasFatOrganizacaoObrigatorioConferenciaFA(obj)	= +conferenciaFA
		set $$$FATRegrasFatOrganizacaoNFdevesergeradoparaocrede(obj)= +nfGeradaCredenciado
		set $$$FATRegrasFatOrganizacaoGeracaoautomaticadolote(obj)	= +nfGeracaoAutomatica
		set $$$FATRegrasFatOrganizacaoVersaodaGuiaTISS(obj)			= versaoTISS
		set $$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad(obj)	= +guiaAutorizacaoConsulta
		set $$$FATRegrasFatOrganizacaoConsultaObrigatorioSenha(obj)	= +senhaAutorizacaoConsulta
		set $$$FATRegrasFatOrganizacaoConsultaObrigatorioGuiad1(obj)= +numGuiaOperadoraConsulta
		set $$$FATRegrasFatOrganizacaoConsultaPossuiCodigodePr(obj)	= +codigoPrestadorConsulta
		;
		set $$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeA(obj)	= +guiaAutorizacaoSPSADT
		set $$$FATRegrasFatOrganizacaoSPSADTObrigatorioSenhade(obj)	= +senhaAutorizacaoSPSADT
		set $$$FATRegrasFatOrganizacaoSPSADTObrigatorioGuiadeO(obj)	= +numGuiaOperadoraSPSADT
		set $$$FATRegrasFatOrganizacaoSPSADTPossuiCodigodePres(obj)	= +codigoPrestadorSPSADT
		;
		set $$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)	= +guiaAutorizacaoHonorarios
		set $$$FATRegrasFatOrganizacaoHonorariosObrigatorioSen(obj)	= +senhaAutorizacaoHonorarios
		set $$$FATRegrasFatOrganizacaoHonorariosObrigatorioGui(obj)	= +numGuiaOperadoraHonorarios
		set $$$FATRegrasFatOrganizacaoHonorariosPossuiCodigodo(obj)	= +codigoPrestadorHonorarios
		;
		set $$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeA(obj)	= +guiaAutorizacaoOutras
		set $$$FATRegrasFatOrganizacaoOutrosObrigatorioSenhade(obj)	= +senhaAutorizacaoOutras
		set $$$FATRegrasFatOrganizacaoOutrosObrigatorioGuiadeO(obj)	= +numGuiaOperadoraOutras
		set $$$FATRegrasFatOrganizacaoOutrosPossuiCodigodePres(obj)	= +codigoPrestadorOutras
		;
		set $$$FATRegrasFatOrganizacaoCategoriaTISS(obj)	= categoriaTISS
		set $$$FATRegrasFatOrganizacaoFamiliaTISS(obj)		= familiaTISS
		;
		if convenio'="T" {
			set codigoPai	= convenio
		}else{
			set codigoPai = codOrganizacao
		}
		;
		set nivelRegra = 40
		if tabela'="" set nivelRegra = 30
		if categoria'="" set nivelRegra = 20
		if item'="" set nivelRegra = 10
		
		Set objPai	= ..recuperaRegras(job,codOrganizacao,convenio,tabela,categoria,item)
		for piece=1:1:$length(obj,"~"){
			if $piece(objPai,"~",piece)=$piece(obj,"~",piece) set $piece(obj,"~",piece) = ""
		}
		
		;FATRegrasFatItem
		if nivelRegra=10 set ^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio,tabela,item,1)=obj
		;FATRegrasFatCategoria
		if nivelRegra=20 set ^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio,tabela,categoria,1)=obj
		; FATRegrasFatTabela
		if nivelRegra=30 set ^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",convenio,tabela,1)=obj
		; FATRegrasFatAcordo
		if nivelRegra=40 set ^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo",convenio,1)=obj
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set retorno.status 	= 1
		set retorno.type 	= "success"
		set retorno.mensagem="Dados salvos com sucesso!"
	}else{
		trollback
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="confirmaRegra">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set campos	= $get(%request.Data("campos",1))
	set strStatus = $$$OK
	tstart
	try{
		set campos = [].%FromJSON(campos)
		set convenio	= campos.convenio
		set tabela		= campos.tabela
		set categoria	= campos.categoria
		set item		= campos.item
		set situacao	= campos.situacao
		set regra		= campos.regra
		;
		set dataIni = $piece($get(^mtemp.Validade(job)),"~",1)
		set dataFin = $piece($get(^mtemp.Validade(job)),"~",2)
		;
		set nivel = convenio_"^"_tabela_"^"_categoria_"^"_item
		if (dataIni'="")||(dataFin'=""){
			set strStatus = ..criaVigencia(nivel,regra,dataIni,dataFin,"Inativa",'situacao)
		}else{
			set strStatus = ..removeVigencia(nivel,regra,"Inativa")
		}
		kill vetor
		set VigenciaAplicada = 0
		set campo = "Inativa"
		set datai = ""
		for {
			set datai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,regra,campo,datai)) quit:datai=""
			set horai = ""
			for {
				set horai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,regra,campo,datai,horai)) quit:horai=""
				set dataf = ""
				for {
					set dataf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,regra,campo,datai,horai,dataf)) quit:dataf=""
					set horaf = ""
					for {
						set horaf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,regra,campo,datai,horai,dataf,horaf)) quit:horaf=""
						set obj = ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,regra,campo,datai,horai,dataf,horaf,1)
						if $piece(obj,"~",2)'=0 continue
						set vetor(datai,horai)=""
					}
				}
			}
		}
		;
		set dataIni = $order(vetor(""))
		if dataIni'=""{
			set horaFin = $order(vetor(dataIni,""))
			set data = ""
			if dataIni'=0 set data = dataIni_"."_horaFin
			if data '= ""{
				set agora = $replace($horolog,",",".")
				if (data>agora){
					set situacao = 'situacao
				}
			}
		}
		set nivelRegra = 40
		if campos.tabela'="" set nivelRegra = 30
		if campos.categoria'="" set nivelRegra = 20
		if campos.item'="" set nivelRegra = 10
		if nivelRegra=10 set $piece(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item,regra,1),"~",1)='situacao
		if nivelRegra=20 set $piece(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categoria,regra,1),"~",1)='situacao
		if nivelRegra=30 set $piece(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,regra,1),"~",1)='situacao
		if nivelRegra=40 set $piece(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio,regra,1),"~",1)='situacao
		;
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set retorno.status 	= 1
		set retorno.type 	= "success"
		set retorno.mensagem="Dados salvos com sucesso!"
	}else{
		trollback
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="criaVigencia">
<ClassMethod>1</ClassMethod>
<FormalSpec>nivel,codRegra,dataHoraInicial,dataHoraFinal,campo,valor</FormalSpec>
<Implementation><![CDATA[	set VigenciaAplicada = 0
	set datai = ""
	for {
		set datai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai)) quit:datai=""
		set horai = ""
		for {
			set horai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai)) quit:horai=""
			set dataf = ""
			for {
				set dataf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf)) quit:dataf=""
				set horaf = ""
				for {
					set horaf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf)) quit:horaf=""
					set obj = ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf,1)
					if $piece(obj,"~",2)'=0 continue
					kill ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf,1)
				}
			}
		}
	}
	set obj = ""
	set $$$FATRegraComercialAcValValordoCampoDuranteaVigen(obj) = valor
	set $$$FATRegraComercialAcValVigenciaAplicada(obj) = 0
	if $$$FATRegraComercialAcValCriadoEm(obj)=""{
		set $$$FATRegraComercialAcValCriadoEm(obj) = $horolog
		set $$$FATRegraComercialAcValCriadoPor(obj) = YBED 
	}else{
		set $$$FATRegraComercialAcValAlteradoEm(obj) = $horolog
		set $$$FATRegraComercialAcValAlteradoPor(obj) = YBED
	}
	
	set dataIChave = 0,horaIChave = 0
	set dataFChave = 0,horaFChave = 0
	if $piece(dataHoraInicial,",",1)'="" set dataIChave = $piece(dataHoraInicial,",",1)
	if $piece(dataHoraInicial,",",2)'="" set horaIChave = $piece(dataHoraInicial,",",2)
	if $piece(dataHoraFinal,",",1)'="" set dataFChave = $piece(dataHoraFinal,",",1)
	if $piece(dataHoraFinal,",",2)'="" set horaFChave = $piece(dataHoraFinal,",",2)
	set ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,dataIChave,horaIChave,dataFChave,horaFChave,1) = obj

	quit 1]]></Implementation>
</Method>

<Method name="removeVigencia">
<ClassMethod>1</ClassMethod>
<FormalSpec>nivel,codRegra,campo</FormalSpec>
<Implementation><![CDATA[	set VigenciaAplicada = 0
	set datai = ""
	for {
		set datai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai)) quit:datai=""
		set horai = ""
		for {
			set horai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai)) quit:horai=""
			set dataf = ""
			for {
				set dataf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf)) quit:dataf=""
				set horaf = ""
				for {
					set horaf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf)) quit:horaf=""
					set obj = ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf,1)
					if $piece(obj,"~",2)'=0 continue
					kill ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf,1)
				}
			}
		}
	}
	quit 1]]></Implementation>
</Method>

<Method name="getTabelasRegras">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set retorno = []
	set sequencia=""
	for {
		set sequencia = $order(^mtemp.FATAcordoComercial(0,job,"tabelaComercial",sequencia)) quit:sequencia=""
		set id = $piece($get(^mtemp.FATAcordoComercial(0,job,"tabelaComercial",sequencia,1)),"~",1)
		set objTabela = $get(^FATTabelaComercial(0,id,1))
		set ativo = $$$FATTabelaComercialAtivo(objTabela)
		if 'ativo continue
		
		;Solicitação Patricia
		set regrasFatTabela = 0
		set xConv = ""
		For {
			set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasTabela",xConv))
			Quit:xConv=""
			If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasTabela",xConv,id))) set regrasFatTabela = 1
			Quit:regrasFatTabela=1
		}
		
		If ('regrasFatTabela) {
			set xConv = ""
			For {
				set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",xConv))
				Quit:xConv=""
				If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",xConv,id))) set regrasFatTabela = 1
				Quit:regrasFatTabela=1
			}
		}
		;

		set linha = {}
		set linha.title = "<i class='far fa-list-alt' title='Inserir Regras na tabela' onclick=abrePainelRegras('"_id_"','','') style='cursor:pointer;"_$Select(regrasFatTabela:"color:orange;",1:"")_"'></i>&nbsp;&nbsp;"_..recDescricao(id,"tabelaComercial")
		set linha.dataField = id
		set linha.template = "<div id='regrasComerciais"_id_"' class='abasRegrasComerciais'></div>"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="getTelaRegra">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set acordo		 = $Get(%request.Data("acordo",1))
	Set tabela		 = $Get(%request.Data("tabela",1))
	Set categoria	 = $Get(%request.Data("categoria",1))
	Set item		 = $Get(%request.Data("item",1))
	set items = []
	set linha = {}
	set linha.dataField = "Acordo"
	if acordo="" set acordo = "Atual"
	set linha.template = acordo
	do items.%Push(linha)
	if tabela'=""{
		set objTabela 	= $get(^FATTabelaComercial(0,tabela,1))
		set nome 		= $$$FATTabelaComercialNome(objTabela)
		set linha = {}
		set linha.dataField = "Tabela"
		set linha.template = "("_tabela_") "_nome
		do items.%Push(linha)
	}
	if categoria'=""{
		set objCategoria 	= $get(^FATTabelaComercialCategoria(0,tabela,categoria,1))
		set nome 			= $$$FATTabelaComercialCategoriaDescricao(objCategoria)
		set linha = {}
		set linha.dataField = "Categoria"
		set linha.template = "("_categoria_") "_nome
		do items.%Push(linha)
	}
	if item'=""{
		;
		set objTabela = $get(^FATTabelaComercial(0,tabela,1))
		set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
		;
		set objItem	 		= $get(^FATTabelaComercialItem(0,tabela,versao,item,1))
		set nome 			= $$$FATTabelaComercialItemDescricaodoItem(objItem)
		set linha = {}
		set linha.dataField = "Item"
		set linha.template = nome
		do items.%Push(linha)
	}
	set retorno = {}
	set retorno.items = items
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeRegrasAplicadas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set id		 = $Get(%request.Data("id",1))
	if $length(id,",")=2{
		kill ^mtemp.FATAcordoComercial(0,job,$piece(id,",",1),$piece(id,",",2))
	}
	if $length(id,",")=3{
		kill ^mtemp.FATAcordoComercial(0,job,$piece(id,",",1),$piece(id,",",2),$piece(id,",",3))
	}
	if $length(id,",")=4{
		kill ^mtemp.FATAcordoComercial(0,job,$piece(id,",",1),$piece(id,",",2),$piece(id,",",3),$piece(id,",",4))
	}
	if $length(id,",")=5{
		kill ^mtemp.FATAcordoComercial(0,job,$piece(id,",",1),$piece(id,",",2),$piece(id,",",3),$piece(id,",",4),$piece(id,",",5))
	}
	write 1
	quit]]></Implementation>
</Method>

<Method name="getRegrasAplicadas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set tabela		= $Get(%request.Data("tabela",1))
	Set categoria	= $Get(%request.Data("categoria",1))
	Set item		= $Get(%request.Data("item",1))
	Set convenio	= $Get(%request.Data("convenio",1))
	Set organizacao	= $Get(%request.Data("organizacao",1))
	set nivelRegra = 40
	if tabela'="" set nivelRegra = 30
	if categoria'="" set nivelRegra = 20
	if item'="" set nivelRegra = 10
	set grid = []
	if nivelRegra=40 set grid = ..recRegraAplicadaAcordo(organizacao,convenio,"",""),grid2=..recRegraFatAplicadaAcordo(organizacao,convenio)
	if nivelRegra=30 set grid = ..recRegraAplicadaTabela(organizacao,convenio,tabela,"",""),grid2=..recRegraFatAplicadaTabela(organizacao,convenio,tabela)
	if nivelRegra=20 set grid = ..recRegraAplicadaCategoria(organizacao,convenio,tabela,categoria,"",""),grid2=..recRegraFatAplicadaCategoria(organizacao,convenio,tabela,categoria)
	if nivelRegra=10 set grid = ..recRegraAplicadaItem(organizacao,convenio,tabela,item,"",""),grid2=..recRegraFatAplicadaItem(organizacao,convenio,tabela,item)
	set retorno = []
	if grid.%Size()>0{
		set iterator = grid.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			;if valor.inativo continue
			do retorno.%Push(valor)
		}
	}
	if grid2.%Size()>0{
		set iterator = grid2.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			;if valor.inativo continue
			do retorno.%Push(valor)
		}
	}
	
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="convenioEstaAcima">
<ClassMethod>1</ClassMethod>
<FormalSpec>convenioOrigem,convenioDestino</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if (convenioDestino="T")||(convenioOrigem="T") quit 0
	if convenioDestino=convenioOrigem quit 0
	set ok=1
	for {
		set obj = $get(^FATOrganizacao(0,convenioDestino,1))
		set convenioDestino = $$$FATOrganizacaoOrganizacaoPai(obj)
		if convenioOrigem=convenioDestino set ok=0 quit
		quit:convenioDestino=""
	}
	quit ok]]></Implementation>
</Method>

<Method name="recRegra">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codigo = $get(%request.Data("codigo",1))
	set tabela = $get(%request.Data("tabela",1))
	set categoria = $get(%request.Data("categoria",1))
	set item = $get(%request.Data("item",1))
	set convenio = $get(%request.Data("convenio",1))
	set nivel = convenio_"^"_tabela_"^"_categoria_"^"_item
	set msgRetorno = "Sempre",alert=0
	kill ^mtemp.Validade(job)
	set regraInativa = 0
	if codigo'=""{
		set nivelRegra = 40
		if tabela'="" set nivelRegra = 30
		if categoria'="" set nivelRegra = 20
		if item'="" set nivelRegra = 10
		if nivelRegra=10 set regraInativa = $piece(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item,codigo,1),"~",1)
		if nivelRegra=20 set regraInativa = $piece(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categoria,codigo,1),"~",1)
		if nivelRegra=30 set regraInativa = $piece(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,codigo,1),"~",1)
		if nivelRegra=40 set regraInativa = $piece(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio,codigo,1),"~",1)
		set VigenciaAplicada = 0

		set tipo=""
		for {
			set tipo = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codigo,tipo)) quit:tipo=""
			set datai = ""
			for {
				set datai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codigo,tipo,datai)) quit:datai=""
				set horai = ""
				for {
					set horai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codigo,tipo,datai,horai)) quit:horai=""
					set dataf = ""
					for {
						set dataf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codigo,tipo,datai,horai,dataf)) quit:dataf=""
						set horaf = ""
						for {
							set horaf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codigo,tipo,datai,horai,dataf,horaf)) quit:horaf=""
							set obj = ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codigo,tipo,datai,horai,dataf,horaf,1)
							if $piece(obj,"~",2)'=0 continue
							set ^mtemp.Validade(job,tipo,datai,horai,dataf,horaf,1) = obj
						}
					}
				}
			}
		}
		set dataInicial = $order(^mtemp.Validade(job,"Inativa",""))
		if dataInicial'="" {
			set horaInicial = $order(^mtemp.Validade(job,"Inativa",dataInicial,""))
			set dataFinal = $order(^mtemp.Validade(job,"Inativa",dataInicial,horaInicial,""))
			set horaFinal = $order(^mtemp.Validade(job,"Inativa",dataInicial,horaInicial,dataFinal,""))
			;
			set $piece(inicial,",",1) = dataInicial
			if horaInicial'=0 set $piece(inicial,",",2) = horaInicial
			;
			set $piece(final,",",1) = dataFinal
			if horaFinal'=0 set $piece(final,",",2) = horaFinal
			;
			set ^mtemp.Validade(job) = $select(+inicial=0:"",1:inicial)_"~"_$select(+final=0:"",1:final)
			;
			if inicial'=0,$replace(inicial,",",".")>$replace($horolog,",","."){
				set data = $piece(inicial,",",1)
				set hora = $piece(inicial,",",2)
				set hora = hora - 1
				if hora<0 set hora = 86399,data=data-1
				set final = data_","_hora
				set inicial = 0
			}
			set msgRetorno=""
			if inicial'="0" set msgRetorno = "De "_$zdatetime(inicial,4)_" "
			if final'="0" set msgRetorno = msgRetorno_"até "_$zdatetime(final,4),alert=1
			else  set msgRetorno = msgRetorno_"até sempre"
			if inicial=0,final=0 set msgRetorno = "Sempre"
		}		
	}
	set retorno = {}
	set retorno.msgRetorno 		= msgRetorno
	set retorno.comValidade		= alert
	set retorno.inativa 		= +regraInativa
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recRegraAplicadaAcordo">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,dataVigencia="",horaVigencia="",job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if $get(job)=""{
		set job = %session.SessionId
	}
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set regra = ""
		for {
			set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio,regra)) quit:regra=""
			set objRegraAplicada = $get(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio,regra,1))
			set id	= "regrasAcordo,"_convenio_","_regra
			set linha 		= ..getLinhaRegraAplicada(id,regra,"Acordo Comercial",convenio,dataVigencia,horaVigencia)
			if linha.id="" continue
			set linha.codigo = regra
			set linha.inativo = +$piece(objRegraAplicada,"~",1)
			;
			set linha.nivelAtual = 1
			set tipoRegra = linha.tipoRegra
			if tipoRegra="LIMITEDESCONTO" set tipoRegra=tipoRegra_";"_regra
			if 'linha.inativo{
				if convenioRegra'="T",$data(vetor(tipoRegra)) set linha.inativo = 1
				if $data(vetor(tipoRegra,linha.convenio)) set linha.inativo = 1
				set vetor(tipoRegra,linha.convenio)=""
			}

			do grid.%Push(linha)
		}
	}
	quit grid]]></Implementation>
</Method>

<Method name="recRegraAplicadaTabela">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,tabela,dataVigencia="",horaVigencia="",job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if (tabela="") quit grid
	if $get(job)=""{
		set job = %session.SessionId
	}
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set regra = ""
		for {
			set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,regra)) quit:regra=""
			set objTabela	= $get(^FATTabelaComercial(0,tabela,1))
			set descTabela	= $$$FATTabelaComercialNome(objTabela)
			set objRegraAplicada = $get(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,regra,1))
			set id	= "regrasTabela,"_convenio_","_tabela_","_regra
			set linha 		= ..getLinhaRegraAplicada(id,regra,"Tabela Comercial ("_descTabela_")",convenio,dataVigencia,horaVigencia)
			if linha.id="" continue
			set linha.codigo = regra
			set linha.inativo = +$piece(objRegraAplicada,"~",1)
			set linha.nivelAtual = 1
			set tipoRegra = linha.tipoRegra
			if tipoRegra="LIMITEDESCONTO" set tipoRegra=tipoRegra_";"_regra
			if 'linha.inativo{
				if convenioRegra'="T",$data(vetor(tipoRegra)) set linha.inativo = 1
				if $data(vetor(tipoRegra,linha.convenio)) set linha.inativo = 1
				set vetor(tipoRegra,linha.convenio)=""
			}

			do grid.%Push(linha)
		}
	}
	;
	set obj = ..recRegraAplicadaAcordo(organizacao,convenioRegra,dataVigencia,horaVigencia,job)
	if obj.%Size()>0{
		set iterator = obj.%GetIterator()
		while iterator.%GetNext(.indice,.valor){

			if valor.id="" continue
			set valor.nivelAtual = 0
			set tipoRegra = valor.tipoRegra
			if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
			if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
			set vetor(tipoRegra,valor.convenio)=""

			do grid.%Push(valor)
		}
	}
	quit grid]]></Implementation>
</Method>

<Method name="recRegraAplicadaCategoria">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,tabela,categoria,dataVigencia="",horaVigencia="",job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if (tabela="") quit grid
	if $get(job)=""{
		set job = %session.SessionId
	}
	;
	set vtCategoria = categoria
	kill arvoreCategoria
	for {
		if vtCategoria="" quit
		if $data(arvoreCategoria(vtCategoria)) quit
		set arvoreCategoria(vtCategoria)=""
		set objCategoria = $get(^FATTabelaComercialCategoria(0,tabela,vtCategoria,1))
		set vtCategoria = $$$FATTabelaComercialCategoriaCategoriaPai(objCategoria)
	}
	
	;
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set categ = ""
		for {
			set categ = $order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categ)) quit:categ=""
			if '$data(arvoreCategoria(categ)) continue
			set regra = ""
			for {
				set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categ,regra)) quit:regra=""
				set objRegraAplicada = $get(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,categ,regra,1))
				set objCategoria	= $get(^FATTabelaComercialCategoria(0,tabela,categ,1))
				set descCategoria	= $$$FATTabelaComercialCategoriaDescricao(objCategoria)

				set desc = "Categoria ("_categ_" - "_descCategoria_")"
				set id	= "regrasCategoria,"_convenio_","_tabela_","_categoria_","_regra
				set linha 		= ..getLinhaRegraAplicada(id,regra,desc,convenio,dataVigencia,horaVigencia)

				if linha.id="" continue
				set linha.codigo = regra
				set linha.inativo = +$piece(objRegraAplicada,"~",1)
				if categ=categoria set linha.nivelAtual = 1
				set tipoRegra = linha.tipoRegra
				if tipoRegra="LIMITEDESCONTO" set tipoRegra=tipoRegra_";"_regra
				if 'linha.inativo{
					if convenioRegra'="T",$data(vetor(tipoRegra)) set linha.inativo = 1
					if $data(vetor(tipoRegra,linha.convenio)) set linha.inativo = 1
					set vetor(tipoRegra,linha.convenio)=""
				}

				do grid.%Push(linha)
			}
		}
	}
	;
	set obj = ..recRegraAplicadaTabela(organizacao,convenioRegra,tabela,dataVigencia,horaVigencia,job)
	if obj.%Size()>0{
		set iterator = obj.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			if valor.id="" continue
			set valor.nivelAtual = 0
			set tipoRegra = valor.tipoRegra
			if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
			if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
			set vetor(tipoRegra,valor.convenio)=""

			do grid.%Push(valor)
		}
	}
	;
	quit grid]]></Implementation>
</Method>

<Method name="recRegraAplicadaItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,tabela,item,dataVigencia="",horaVigencia="",job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if (tabela="")||(item="") quit grid
	if $get(job)=""{
		set job = %session.SessionId
	}
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set regra = ""
		for {
			set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item,regra)) quit:regra=""
			set objRegraAplicada = $get(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item,regra,1))
			set id	= "regrasItems,"_convenio_","_tabela_","_item_","_regra
			set linha 		= ..getLinhaRegraAplicada(id,regra,"Item",convenio,dataVigencia,horaVigencia)
			if linha.id="" continue
			set linha.inativo = +$piece(objRegraAplicada,"~",1)
			set linha.codigo = regra
			set linha.nivelAtual = 1
			set tipoRegra = linha.tipoRegra
			if tipoRegra="LIMITEDESCONTO" set tipoRegra=tipoRegra_";"_regra
			if 'linha.inativo{
				if convenioRegra'="T",$data(vetor(tipoRegra)) set linha.inativo = 1
				if $data(vetor(tipoRegra,linha.convenio)) set linha.inativo = 1
				set vetor(tipoRegra,linha.convenio)=""
			}
			do grid.%Push(linha)
		}
	}
	;
	;
	set objTabela = $get(^FATTabelaComercial(0,tabela,1))
	set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
	;
	set objItem 	= $get(^FATTabelaComercialItem(0,tabela,versao,item,1))
	set categoria 	= $$$FATTabelaComercialItemCategoriadoItem(objItem)
	set obj 		= ..recRegraAplicadaCategoria(organizacao,convenioRegra,tabela,categoria,dataVigencia,horaVigencia,job)
	if obj.%Size()>0{
		set iterator = obj.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			if valor.id="" continue
			set valor.nivelAtual = 0
			set tipoRegra = valor.tipoRegra
			if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
			if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
			set vetor(tipoRegra,valor.convenio)=""
			do grid.%Push(valor)
		}
	}
	quit grid]]></Implementation>
</Method>

<Method name="recRegraFatAplicadaOrganizacao">
<ClassMethod>1</ClassMethod>
<FormalSpec>convenioRegra,job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if $get(job)=""{
		set job = %session.SessionId
	}
	set convenios = 0
	set sequencia = ""
	for {
		set sequencia 	= $order(^mtemp.FATAcordoComercial(0,job,"clienteComercial",sequencia)) quit:sequencia=""
		set objConvenio = $get(^mtemp.FATAcordoComercial(0,job,"clienteComercial",sequencia,1))
		set convenio	= $$$FATAcordoComercialOrganizacaoCodigodaOrganizacao(objConvenio)
		set objOrganizacao	= $get(^FATOrganizacao(0,convenio,1))
		;if '$$$FATOrganizacaoPlanoSaudeAtivo(objOrganizacao) continue
		set naoExibe 	= 0
		if ..convenioEstaAcima(convenio,convenioRegra) set naoExibe=1
		set obj = ..recuperaRegrasPai(convenio)
		if $piece(obj,"~",1)="" set $piece(obj,"~",1)=0
		for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
			set resp = i_"^"_$piece(obj,"~",i)
			if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
			else  if $piece(obj,"~",i)="" continue
			set vetor(resp)=$get(vetor(resp))+1	
			set vetor(resp,convenio)=naoExibe
		}
		set convenios = convenios + 1
	}
	set objLoop = ""
	for{
		set objLoop = $order(vetor(objLoop)) quit:objLoop=""
		if $get(vetor(objLoop))=convenios{
			set id	= "regrasFatOrganizacao,T"
			set obj = ..recRegrasFaturamento(convenioRegra,id,"Organizacao","T",objLoop)
			;
			if obj.%Size()>0{
				set iterator = obj.%GetIterator()
				while iterator.%GetNext(.indice,.valor){
					if valor.id="" continue
					set tipoRegra = valor.piece
					if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
					if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
					set vetor(tipoRegra,valor.convenio)=""
					do grid.%Push(valor)
				}
			}
		}else{
			set convenio = ""
			for {
				set convenio = $order(vetor(objLoop,convenio)) quit:convenio=""
				if vetor(objLoop,convenio) continue
				set id	= "regrasFatOrganizacao,"_convenio
				set obj = ..recRegrasFaturamento(convenioRegra,id,"Organizacao",convenio,objLoop)
				;
				if obj.%Size()>0{
					set iterator = obj.%GetIterator()
					while iterator.%GetNext(.indice,.valor){
						if valor.id="" continue
						set tipoRegra = valor.piece
						if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
						if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
						set vetor(tipoRegra,valor.convenio)=""
						do grid.%Push(valor)
					}
				}
			}
		}
	}
	quit grid]]></Implementation>
</Method>

<Method name="recRegraFatAplicadaAcordo">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if $get(job)=""{
		set job = %session.SessionId
	}
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo",convenio,1))
		if obj="" continue
		for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
			set resp = i_"^"_$piece(obj,"~",i)
			if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
			else  if $piece(obj,"~",i)="" continue
			set vetor(resp)=$get(vetor(resp))+1	
			set vetor(resp,convenio)=0
		}
	}
	set objLoop = ""
	for{
		set objLoop = $order(vetor(objLoop)) quit:objLoop=""
		set convenio = ""
		for {
			set convenio = $order(vetor(objLoop,convenio)) quit:convenio=""
			if vetor(objLoop,convenio) continue
			set id	= "regrasFatAcordo,"_convenio
			set obj = ..recRegrasFaturamento(convenioRegra,id,"Acordo",convenio,objLoop)
			;
			if obj.%Size()>0{
				set iterator = obj.%GetIterator()
				while iterator.%GetNext(.indice,.valor){
					if valor.id="" continue
					set valor.inativo = 0
					set tipoRegra = valor.piece
					if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
					if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
					set vetor(tipoRegra,valor.convenio)=""
					do grid.%Push(valor)
				}
			}
		}
	}

	;
	set obj = ..recRegraFatAplicadaOrganizacao(convenioRegra,job)
	if obj.%Size()>0{
		set iterator = obj.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			if valor.id="" continue
			set valor.nivelAtual = 0
			set tipoRegra = valor.piece
			if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
			if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
			set vetor(tipoRegra,valor.convenio)=""
			do grid.%Push(valor)
		}
	}
	;	
	quit grid]]></Implementation>
</Method>

<Method name="recRegraFatAplicadaTabela">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,tabela,job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if (tabela="") quit grid
	if $get(job)=""{
		set job = %session.SessionId
	}
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",convenio,tabela,1))
		if obj="" continue
		for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
			set resp = i_"^"_$piece(obj,"~",i)
			if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
			else  if $piece(obj,"~",i)="" continue
			set vetor(resp)=$get(vetor(resp))+1	
			set vetor(resp,convenio)=0
		}
	}
	set objLoop = ""
	for{
		set objLoop = $order(vetor(objLoop)) quit:objLoop=""
		set convenio = ""
		for {
			set convenio = $order(vetor(objLoop,convenio)) quit:convenio=""
			if vetor(objLoop,convenio) continue
			set id	= "regrasFatTabela,"_convenio_","_tabela
			set obj = ..recRegrasFaturamento(convenioRegra,id,"Tabela",convenio,objLoop)
			;
			if obj.%Size()>0{
				set iterator = obj.%GetIterator()
				while iterator.%GetNext(.indice,.valor){
					if valor.id="" continue
					set valor.inativo = 0
					set tipoRegra = valor.piece
					if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
					if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
					set vetor(tipoRegra,valor.convenio)=""
					do grid.%Push(valor)
				}
			}
		}
	}
	;
	set obj = ..recRegraFatAplicadaAcordo(organizacao,convenioRegra,job)
	if obj.%Size()>0{
		set iterator = obj.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			if valor.id="" continue
			set valor.nivelAtual = 0
			set tipoRegra = valor.piece
			if $data(vetor(tipoRegra)) set valor.inativo = 1
			if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
			set vetor(tipoRegra,valor.convenio)=""
			do grid.%Push(valor)
		}
	}
	;	
	quit grid]]></Implementation>
</Method>

<Method name="recRegraFatAplicadaCategoria">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,tabela,categoria,job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if (tabela="") quit grid
	if $get(job)=""{
		set job = %session.SessionId
	}
	;
	set vtCategoria = categoria
	kill arvoreCategoria
	for {
		if vtCategoria="" quit
		if $data(arvoreCategoria(vtCategoria)) quit
		set arvoreCategoria(vtCategoria)=""
		set objCategoria = $get(^FATTabelaComercialCategoria(0,tabela,vtCategoria,1))
		set vtCategoria = $$$FATTabelaComercialCategoriaCategoriaPai(objCategoria)
	}
	
	;
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set categ = ""
		for {
			set categ = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio,tabela,categ)) quit:categ=""
			if '$data(arvoreCategoria(categ)) continue
			set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio,tabela,categ,1))
			if obj="" continue
			for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
				set resp = i_"^"_$piece(obj,"~",i)
				if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
				else  if $piece(obj,"~",i)="" continue
				set vetor(resp)=$get(vetor(resp))+1	
				set vetor(resp,convenio)=0
			}
		}
	}
	set objLoop = ""
	for{
		set objLoop = $order(vetor(objLoop)) quit:objLoop=""
		set convenio = ""
		for {
			set convenio = $order(vetor(objLoop,convenio)) quit:convenio=""
			if vetor(objLoop,convenio) continue
			set id	= "regrasFatCategoria,"_convenio_","_tabela_","_categoria
			set obj = ..recRegrasFaturamento(convenioRegra,id,"Categoria",convenio,objLoop)
			;
			if obj.%Size()>0{
				set iterator = obj.%GetIterator()
				while iterator.%GetNext(.indice,.valor){
					if valor.id="" continue
					set valor.inativo = 0
					set tipoRegra = valor.piece
					if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
					if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
					set vetor(tipoRegra,valor.convenio)=""
					do grid.%Push(valor)
				}
			}
		}
	}
	;
	set obj = ..recRegraFatAplicadaTabela(organizacao,convenioRegra,tabela,job)
	if obj.%Size()>0{
		set iterator = obj.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			if valor.id="" continue
			set valor.nivelAtual = 0
			set tipoRegra = valor.piece
			if $data(vetor(tipoRegra)) set valor.inativo = 1
			if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
			set vetor(tipoRegra,valor.convenio)=""
			do grid.%Push(valor)
		}
	}
	;	
	quit grid]]></Implementation>
</Method>

<Method name="recRegraFatAplicadaItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>organizacao,convenioRegra,tabela,item,job=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	if (tabela="")||(item="") quit grid
	if $get(job)=""{
		set job = %session.SessionId
	}
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio)) quit:convenio=""
		if ..convenioEstaAcima(convenio,convenioRegra) continue
		set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio,tabela,item,1))
		if obj="" continue
		for i=1,4,7,15,14,32,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31{
			set resp = i_"^"_$piece(obj,"~",i)
			if i=4 set resp = resp_"^"_$piece(obj,"~",5)_"^"_$piece(obj,"~",6)_"^"_$piece(obj,"~",7)
			else  if $piece(obj,"~",i)="" continue
			set vetor(resp)=$get(vetor(resp))+1	
			set vetor(resp,convenio)=0
		}
	}
	set objLoop = ""
	for{
		set objLoop = $order(vetor(objLoop)) quit:objLoop=""
		set convenio = ""
		for {
			set convenio = $order(vetor(objLoop,convenio)) quit:convenio=""
			if vetor(objLoop,convenio) continue
			set id	= "regrasFatItem,"_convenio_","_tabela_","_item
			set obj = ..recRegrasFaturamento(convenioRegra,id,"Item",convenio,objLoop)
			;
			if obj.%Size()>0{
				set iterator = obj.%GetIterator()
				while iterator.%GetNext(.indice,.valor){
					if valor.id="" continue
					set valor.inativo = 0
					set tipoRegra = valor.piece
					if convenioRegra'="T",$data(vetor(tipoRegra)) set valor.inativo = 1
					if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
					set vetor(tipoRegra,valor.convenio)=""
					do grid.%Push(valor)
				}
			}
		}
	}
	;
	set objTabela = $get(^FATTabelaComercial(0,tabela,1))
	set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
	;
	set objItem 	= $get(^FATTabelaComercialItem(0,tabela,versao,item,1))
	set categoria 	= $$$FATTabelaComercialItemCategoriadoItem(objItem)
	;
	set obj = ..recRegraFatAplicadaCategoria(organizacao,convenioRegra,tabela,categoria,job)
	if obj.%Size()>0{
		set iterator = obj.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			if valor.id="" continue
			set valor.nivelAtual = 0
			set tipoRegra = valor.piece
			if $data(vetor(tipoRegra)) set valor.inativo = 1
			if $data(vetor(tipoRegra,valor.convenio)) set valor.inativo = 1
			set vetor(tipoRegra,valor.convenio)=""
			do grid.%Push(valor)
		}
	}
	;
	quit grid]]></Implementation>
</Method>

<Method name="recRegrasFaturamento">
<ClassMethod>1</ClassMethod>
<FormalSpec>convenioRegra,id,tipo,convenio,objeto</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set grid = []
	; piece 1 - Elegibilidade
	; piece 4 - Obrigatório número da carteirinha
	; piece 5 - Mascara da carteirinha
	; piece 6 - Número mínimo de caracteres
	; piece 7 - Número máximo de caracteres
	; piece 15 - Versão da TISS
	; piece 14 - Categoria TISS
	; piece 32 - Família da TISS
	; piece 16 - Consulta - Obrigatório guia de autorização
	; piece 17 - Consulta - Obrigatório senha de autorização
	; piece 18 - Consulta - Obrigatório guia de prestador
	; piece 19 - Consulta - Possuí código de prestador
	; piece 20 - SP/SADT - Obrigatório guia de autorização
	; piece 21 - SP/SADT - Obrigatório senha de autorização
	; piece 22 - SP/SADT - Obrigatório guia de prestador
	; piece 23 - SP/SADT - Possuí código de prestador
	; piece 24 - Honorários - Obrigatório guia de autorização
	; piece 25 - Honorários - Obrigatório senha de autorização
	; piece 26 - Honorários - Obrigatório guia de prestador
	; piece 27 - Honorários - Possuí código de prestador
	; piece 28 - Outros - Obrigatório guia de autorização
	; piece 29 - Outros - Obrigatório senha de autorização
	; piece 30 - Outros - Obrigatório guia de prestador
	; piece 31 - Outros - Possuí código de prestador
	set i = $piece(objeto,"^",1)
	set resp = $piece(objeto,"^",2)
	if resp'="" {
		set regra = ""
		if i=1 {
			set regra = "Elegibilidade"
			if resp=1 set regra = "Inelegibilidade"  
		}
		if i=4 {
			set regra = "Número da carteirinha;"_+resp
			set masc = $piece(objeto,"^",3)
			set min = $piece(objeto,"^",4)
			set max = $piece(objeto,"^",5)
			set regra2=""
			set $piece(regra,";",3)=masc
			set $piece(regra,";",4)=min
			set $piece(regra,";",5)=max
		}
		if i=15 set regra = "Versão da TISS;"_resp
		if i=14 set regra = "Categoria da TISS;"_resp
		if i=32 set regra = "Família da TISS;"_resp
		if i=16 set regra = "Consulta - Obrigatório Guia de Autorização;"_(+resp)
		if i=17 set regra = "Consulta - Obrigatório Senha de Autorização;"_(+resp)
		if i=18 set regra = "Consulta - Obrigatório Nº Guia da Operadora;"_(+resp)
		if i=19 set regra = "Consulta - Possuí código do prestador;"_(+resp)
		if i=20 set regra = "SP/SADT - Obrigatório Guia de Autorização;"_(+resp)
		if i=21 set regra = "SP/SADT - Obrigatório Senha de Autorização;"_(+resp)
		if i=22 set regra = "SP/SADT - Obrigatório Nº Guia da Operadora;"_(+resp)
		if i=23 set regra = "SP/SADT - Possuí código do prestador;"_(+resp)
		if i=24 set regra = "Honorários - Obrigatório Guia de Autorização;"_(+resp)
		if i=25 set regra = "Honorários - Obrigatório Senha de Autorização;"_(+resp)
		if i=26 set regra = "Honorários - Obrigatório Nº Guia da Operadora;"_(+resp)
		if i=27 set regra = "Honorários - Possuí código do prestador;"_(+resp)
		if i=28 set regra = "Outras Despesas - Obrigatório Guia de Autorização;"_(+resp)
		if i=29 set regra = "Outras Despesas - Obrigatório Senha de Autorização;"_(+resp)
		if i=30 set regra = "Outras Despesas - Obrigatório Nº Guia da Operadora;"_(+resp)
		if i=31 set regra = "Outras Despesas - Possuí código do prestador;"_(+resp)
		
				
		if regra="" quit grid
		set linha 		= ..getLinhaRegraAplicada(id,regra_"^"_i,tipo,convenio,"","")
		if linha.id="" quit grid
		set linha.nivelAtual = 0
		do grid.%Push(linha)
	}
	quit grid]]></Implementation>
</Method>

<Method name="getLinhaRegraAplicada">
<ClassMethod>1</ClassMethod>
<FormalSpec>id,regra,descNivel,convenio,dataVigencia="",horaVigencia=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set linha = {}
	set descConvenio = ..recDescricao(convenio,"clienteComercial")
	set piece = $piece(regra,"^",2)
	set regra = $piece(regra,"^",1)
	if id["regrasFat"{
		set exibicao = regra
		if $piece(regra,";",1)="Número da carteirinha"{
			set masc = $piece(regra,";",3)
			set min = $piece(regra,";",4)
			set max = $piece(regra,";",5)
			set regra2=""
			if masc'="" set regra2 = regra2_"máscara: "_masc
			if min'="" set:regra2'="" regra2=regra2_", " set regra2 = regra2_"tamanho mínimo: "_min
			if max'="" set:regra2'="" regra2=regra2_", " set regra2 = regra2_"tamanho máximo: "_max
			set exibicao = "Número da carteirinha opcional"
			if $piece(regra,";",2)=1 set exibicao = "Número da carteirinha obrigatório"
			if regra2'="" set exibicao = exibicao_" ("_regra2_")"
		}
		if ($piece(regra,";",1)="Versão da TISS"){
			set exibicao = $piece(regra,";",1)_": "_$$SQLGetUserParamDesc^VARSQL("FATVERSAOTISS~"_$piece(regra,";",2))
		}
		if ($piece(regra,";",1)="Categoria da TISS"){
			set exibicao = $piece(regra,";",1)_": "_$$SQLGetUserParamDesc^VARSQL("FATCATEGORIATISS~"_$piece(regra,";",2))
		}
		if ($piece(regra,";",1)="Família da TISS"){
			set exibicao = $piece(regra,";",1)_": "_$piece(regra,";",2)
		}
		if ($piece(regra,";",1)["Consulta - "){
			set exibicao = $piece(regra,";",1)_": "_$select(+$piece(regra,";",2)=1:"Sim",1:"Não")
		}
		if ($piece(regra,";",1)["SP/SADT - "){
			set exibicao = $piece(regra,";",1)_": "_$select(+$piece(regra,";",2)=1:"Sim",1:"Não")
		}
		if ($piece(regra,";",1)["Honorários - "){
			set exibicao = $piece(regra,";",1)_": "_$select(+$piece(regra,";",2)=1:"Sim",1:"Não")
		}
		if ($piece(regra,";",1)["Outras Despesas - "){
			set exibicao = $piece(regra,";",1)_": "_$select(+$piece(regra,";",2)=1:"Sim",1:"Não")
		}
		
		set nomeRegra = exibicao
		set tipoRegra = "Faturamento"
		set regraAtivo = 1
		set nomeTipoRegra = tipoRegra
		set objRegra = regra
	}else{
		set objRegra 	= $get(^FATRegraComercial(0,regra,1))
		set nomeRegra 	= $$$FATRegraComercialNome(objRegra)
		set tipoRegra	= $$$FATRegraComercialTipodaRegra(objRegra)
		set regraAtivo  = $$$FATRegraComercialAtivo(objRegra)
		set elegivel	= $$$FATRegraComercialItemElegivel(objRegra)
		if dataVigencia'=""{
			set horaVigencia = $order(^FATRegraComercialHist(0,regra,dataVigencia,horaVigencia+1),-1)
			if horaVigencia=""{
				set dataVigencia = $order(^FATRegraComercialHist(0,regra,dataVigencia),-1)
				if dataVigencia'=""{
					set horaVigencia = $order(^FATRegraComercialHist(0,regra,dataVigencia,""),-1)
				}
			}
			if dataVigencia'="",horaVigencia'=""{
				set regraAtivo = $piece(^FATRegraComercialHist(0,regra,dataVigencia,horaVigencia,"Ativo",1),"~",2)
			}
		}
		set nomeTipoRegra = tipoRegra
		if tipoRegra'=""{
			set objTipoRegra = $get(^INPARA(0,"TIPOSREGRASCOMERCIAIS","PT",tipoRegra,1))
			set nomeTipoRegra = $$$INPARAText(objTipoRegra)
		}
	}
	if 'regraAtivo quit linha
	set linha.id	= id
	set linha.nome	= nomeRegra
	set linha.tipo	= nomeTipoRegra
	set linha.tipoRegra = tipoRegra
	set linha.objRegra = objRegra
	set linha.piece		= piece
	set linha.convenio = convenio
	set linha.origem = "Acordo Atual"
	set linha.pontoAplicacao = descNivel_" - "_descConvenio
	quit linha]]></Implementation>
</Method>

<Method name="getParametrosTabela">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set tabela	 = $Get(%request.Data("tabela",1))
	set retorno = {}
	if tabela'=""{
		set obj = $get(^FATTabelaComercial(0,tabela,1))
		set unidadeMonetaria = $$$FATTabelaComercialUnidadeMonetaria(obj)
		set casasDecimais = $$$FATTabelaComercialCasasDecimais(obj)
		if casasDecimais>0{
			set casasDecimais = "."_$extract("000000000",1,casasDecimais)
		}else{
			set casasDecimais = ""
		}
		set retorno.unidadeMonetaria = unidadeMonetaria
		set retorno.casasDecimais = casasDecimais
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getTabelaComercialCategorias">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set tabela	 = $Get(%request.Data("tabela",1))
	;
	set objTabela = $get(^FATTabelaComercial(0,tabela,1))
	set versao 	= +$$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
	;
	set query = "Select CategoriadoItem from FATTabelaComercialItem where company=0 and codigodatabela='"_tabela_"' and versaodatabela='"_versao_"' group by categoriadoitem"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set categoria = rs.%Get("CategoriadoItem")
		for {
			set obj = $get(^FATTabelaComercialCategoria(0,tabela,categoria,1))
			set categorias(categoria)=$$$FATTabelaComercialCategoriaCategoriaPai(obj)_"~"_$$$FATTabelaComercialCategoriaDescricao(obj)
			set categoria = $$$FATTabelaComercialCategoriaCategoriaPai(obj)
			quit:categoria=""
		}
	}
	set retorno = []
	set retorno = ..buscaFilhosCategoria(tabela,"",job,.categorias)
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="buscaFilhosCategoria">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigoTabela,categoriaPai,job,&amp;categorias</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set retorno = []
	set categoria = ""
	for {
		set categoria=$order(categorias(categoria)) quit:categoria=""
		if $piece(categorias(categoria),"~",1)'=categoriaPai continue
		
		;Solicitação Patricia
		set regrasFatCateg = 0
		set xConv = ""
		For {
			set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",xConv))
			Quit:xConv=""
			If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",xConv,codigoTabela,categoria))) set regrasFatCateg = 1
			Quit:regrasFatCateg=1
		}
		
		If ('regrasFatCateg) {
			set xConv = ""
			For {
				set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",xConv))
				Quit:xConv=""
				If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",xConv,codigoTabela,categoria))) set regrasFatCateg = 1
				Quit:regrasFatCateg=1
			}
		}
		;
		set linha = {}
		set linha.id = categoria
		set linha.text = "("_categoria_") "_$piece(categorias(categoria),"~",2)
		set linha.regrasFatCategoria = regrasFatCateg
		set items = ..buscaFilhosCategoria(codigoTabela,categoria,job,.categorias)
		if items.%Size()>0 set linha.items	= items
		do retorno.%Push(linha)
	}
	quit retorno]]></Implementation>
</Method>

<Method name="getTabelaComercialItens">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set tabela	 = $Get(%request.Data("tabela",1))
	Set categoriaFilter	 = $Get(%request.Data("categoriaFilter",1))
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		;set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	;
	set objTabela = $get(^FATTabelaComercial(0,tabela,1))
	set versao 	= $$$FATTabelaComercialVersaoAtualdaTabeladeIten(objTabela)
	;
	set contador = 0
	set query = "Select CodigodoItem,DescricaodoItem,$$getItensCobraveisDesc^VARSQL(ItensCobraveis) ItensCobraveis,$$getCategoriaItemDesc^VARSQL(codigodatabela,CategoriadoItem) CategoriadoItem,ValordoItem from FATTabelaComercialItem where company=0 and codigodatabela='"_tabela_"' and versaodatabela='"_versao_"'"
	if categoriaFilter'="" {
		kill vetorCateg
		set categoria = ""
		for {
			set categoria = $order(^FATTabelaComercialCategoria(0,tabela,categoria)) quit:categoria=""
			if categoria=categoriaFilter set vetorCateg(categoria)="" continue
			set categoriaTmp = categoria
			for {
				set objCategoria = $get(^FATTabelaComercialCategoria(0,tabela,categoriaTmp,1))
				set categoriaTmp = $$$FATTabelaComercialCategoriaCategoriaPai(objCategoria)
				if categoriaTmp="" quit
				if categoriaTmp=categoriaFilter set vetorCateg(categoria)=""
			}
		}
		set categorias = "" 
		set categoria="" 
		for {
			set categoria = $order(vetorCateg(categoria)) quit:categoria=""
			set:categorias'="" categorias = categorias_"','"
			set categorias = categorias_categoria
		}
		if categorias'=""{
			set query = query_" and %upper(CategoriadoItem) in ('"_categorias_"')"
		}
		
	}
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_query_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set tabelaRet = []
	set totalCount = 0
	while(rs.%Next()){
		set Sequencia	 	= rs.%Get("CodigodoItem")
		set CodigodoItem 	= rs.%Get("CodigodoItem")
		set DescricaodoItem = rs.%Get("DescricaodoItem")
		set CategoriadoItem	= rs.%Get("CategoriadoItem")
		set ItensCobraveis	= rs.%Get("ItensCobraveis")
		set ValordoItem 	= rs.%Get("ValordoItem")
		set totalCount		= rs.%Get("totalCount")
		;Solicitação Patricia
		set regrasFatItem = 0
		set xConv = ""
		For {
			set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasItems",xConv))
			Quit:xConv=""
			If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasItems",xConv,tabela,Sequencia))) set regrasFatItem = 1
			Quit:regrasFatItem=1
		}
		
		If ('regrasFatItem) {
			set xConv = ""
			For {
				set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",xConv))
				Quit:xConv=""
				If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",xConv,tabela,Sequencia))) set regrasFatItem = 1
				Quit:regrasFatItem=1
			}
		}
		;
		set linha = {}
		set linha.regrasFatItem = regrasFatItem
		set linha.sequencia = Sequencia
		set linha.CodigodoItem 	= CodigodoItem
		set linha.DescricaodoItem = DescricaodoItem
		set linha.CategoriadoItem = CategoriadoItem
		set linha.itensCobraveis = ItensCobraveis
		set linha.ValordoItem = +ValordoItem
		do tabelaRet.%Push(linha)
	}
	set retorno = {}
	set retorno.data = tabelaRet
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="buscaFilhos">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,codAcordo,codigoPai,caminhoPai="",&amp;selected</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set selected = 0
	set retorno = []
	set select = "select CodigodaOrganizacao,Nome from  FATOrganizacao where Company=0 and OrganizacaoPai = '"_codigoPai_"' and ativo=1 order by Nome"
	set rs = ##class(%SQL.Statement).%ExecDirect("",select)
	while(rs.%Next()){
		set linha={}
		set linha.id 	= rs.%Get("CodigodaOrganizacao")
		set linha.text = "("_linha.id_") "_rs.%Get("Nome")
		set caminho = caminhoPai_" / "_rs.%Get("Nome")
		set linha.caminho = caminho
		if $data(^FATAcordoComercialOrganizacaos(0,1,linha.id)) {
			set acordoPresente = $order(^FATAcordoComercialOrganizacaos(0,1,linha.id,""))
			set objAcordoComercial = $get(^FATAcordoComercial(0,acordoPresente,1))
			set acordoAtivo = $$$FATAcordoComercialAtivo(objAcordoComercial)
			if acordoPresente'=codAcordo,acordoAtivo{
				set linha.disabled=1	
				set linha.text = linha.text_" (Presente no acordo "_acordoPresente_")"
			}
		}
		if $data(^mtemp.FATAcordoComercial1(0,job,"clienteComercial",linha.id)) set linha.selected = 1,selected=1
		set items = ..buscaFilhos(job,codAcordo,linha.id,caminho,.select)
		if select set linha.expanded = 1 
		if items.%Size()>0 set linha.items	= items
		do retorno.%Push(linha)
	}
	quit retorno]]></Implementation>
</Method>

<Method name="getSelecaoTemporaria">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo 	= $get(%request.Data("tipo",1))
	set convenio= $get(%request.Data("convenio",1))
	set fIni = +$get(%request.Data("fIni",1))
	Set xClient = +$get(%request.Data("xClient",1))
	Set tabela = $get(%request.Data("tabela",1))
	set retorno = []
	if convenio{
		set linha = {}
		set linha.sequencia = "T"
		set linha.id = "T"
		set linha.caminho = ..recDescricao("T",tipo,0)
		do retorno.%Push(linha)
	}
	;
	;Julio Alteração Patricia
	If (tipo = "tabelaComercial" && (fIni = 0)) {
		kill temp 
		Set seq = ""
		For {
			Set seq = $Order(^mtemp.FATAcordoComercial(0,job,tipo,seq))
			Quit:seq=""
			
			Set codTabela = $Piece(^mtemp.FATAcordoComercial(0,job,tipo,seq,1),"~",1)
			
			set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela","T",codTabela,1))
			If ($$$FATRegrasFatOrganizacaoItensInelegiveis(obj) = 1) {
				Set xSeq = seq + 100	
			}else{
				Set xSeq = seq + 600	
			}
			Merge temp(xSeq) = ^mtemp.FATAcordoComercial(0,job,tipo,seq)
		}
		Kill ^mtemp.FATAcordoComercial(0,job,tipo)
		Kill ^mtemp.FATAcordoComercial1(0,job,tipo)
		Set seq = "", xSeq = 0
		For {
			Set seq = $Order(temp(seq))
			Quit:seq=""
			
			Merge ^mtemp.FATAcordoComercial(0,job,tipo,$Increment(xSeq)) = temp(seq)
			Set ^mtemp.FATAcordoComercial1(0,job,tipo,$Piece(temp(seq,1),"Y",1),1) = xSeq
		}
	}
	;Fim - Julio Alteração Patricia*/
	;
	set sequencia=""
	for {
		set sequencia = $order(^mtemp.FATAcordoComercial(0,job,tipo,sequencia)) quit:sequencia=""
		set id = $piece($get(^mtemp.FATAcordoComercial(0,job,tipo,sequencia,1)),"~",1)

		;Solicitação Patricia
		set regrasFatTabela = 0
		set xConv = ""
		For {
			set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasTabela",xConv))
			Quit:xConv=""
			If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasTabela",xConv,id))) set regrasFatTabela = 1
			Quit:regrasFatTabela=1
		}
		
		If ('regrasFatTabela) {
			set xConv = ""
			For {
				set xConv = $Order(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",xConv))
				Quit:xConv=""
				If ($Data(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",xConv,id))) set regrasFatTabela = 1
				Quit:regrasFatTabela=1
			}
		}
		;

		If (tipo = "clienteComercial" && (tabela '= "")) {
			Set objTabComercial = $Get(^FATTabelaComercial(0,tabela,1))
			Set xClientTab = $$$FATTabelaComercialClientedaTabela(objTabComercial)
			If (xClientTab'="") {
				Set flag = 0
				For i=1:1:$Length(xClientTab,";"){
					If (..convenioEstaAcima($Piece(xClientTab,";",i),id)=0) {
						Set flag = 1
					}
				}
				If (flag=0) Continue
			}
		}


		set linha = {}
		set linha.sequencia = sequencia
		set linha.id = id
		Set xRetorno = ..recDescricao(id,tipo,0,xClient)
		set linha.caminho = $Piece(xRetorno,"~",1)
		set linha.nomeClintTab = $Piece(xRetorno,"~",2)
		set linha.regrasFatTabela = regrasFatTabela
		set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela","T",id,1))
		if $$$FATRegrasFatOrganizacaoItensInelegiveis(obj)=1{
			set linha.inelegivel = 1
		}
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="recDescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigo,tipo="clienteComercial",flExibeNomeOrganizacaoPai=1,xClient=0</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if codigo="" quit ""
	set descricao="",descricao1=""
	if tipo="clienteComercial"{
		set obj = $get(^FATOrganizacao(0,codigo,1))
		set descricao 	= $$$FATOrganizacaoNome(obj)
		set ativo 		= $$$FATOrganizacaoAtivo(obj)
		if 'ativo set descricao = descricao_" (INATIVO)"
		set organizacaoPai = $$$FATOrganizacaoOrganizacaoPai(obj)
		for {
			quit:organizacaoPai=""
			set obj = $get(^FATOrganizacao(0,organizacaoPai,1))
			if 'flExibeNomeOrganizacaoPai,$$$FATOrganizacaoOrganizacaoPai(obj)="" quit
			set nome	= $$$FATOrganizacaoNome(obj)
			set ativo	= $$$FATOrganizacaoAtivo(obj)
			if 'ativo set nome = nome_" (INATIVO)"
			set descricao = nome_" / "_descricao
			set organizacaoPai = $$$FATOrganizacaoOrganizacaoPai(obj)
		}
		if codigo="T" set descricao = "TODOS OS PLANOS DE SAÚDE DO ACORDO"
	}else{
		set obj = $get(^FATTabelaComercial(0,codigo,1))
		set clientedaTabela = $$$FATTabelaComercialClientedaTabela(obj)
		set descricao = $$$FATTabelaComercialNome(obj)
		set ativo = $$$FATTabelaComercialAtivo(obj)
		if 'ativo set descricao = descricao_" (INATIVO)"
		set descricao = descricao_" (versão "_$$$FATTabelaComercialVersaoAtualdaTabeladeIten(obj)_")"
		If (clientedaTabela'="") {
			For i = 1 : 1 : $Length(clientedaTabela,";"){
				set descricao1 = descricao1 _ $Select(descricao1="":"",1:" | ") _ $$GetOrganizacaoNome^VARSQL($Piece(clientedaTabela,";",i))
			}
		}

	}
	If (xClient = 1) {
		quit descricao_"~"_descricao1
	}
	quit descricao]]></Implementation>
</Method>

<Method name="atualizaSelecao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo 	= $get(%request.Data("tipo",1))
	set reOrder = $get(%request.Data("reOrder",1))
	set selecao = $get(%request.Data("selecao",1))
	set strStatus = $$$OK
	try{
		if reOrder=1{
			kill ^mtemp.FATAcordoComercial(0,job,tipo)
			kill ^mtemp.FATAcordoComercial1(0,job,tipo)
		}
		set selecao = [].%FromJSON(selecao)
		set iterator = selecao.%GetIterator()
		while iterator.%GetNext(.indice,.valor){
			if valor.disabled continue
			if $data(^mtemp.FATAcordoComercial1(0,job,tipo,valor.id)){
				set sequencia = ^mtemp.FATAcordoComercial1(0,job,tipo,valor.id,1)
			}else{
				set sequencia = $order(^mtemp.FATAcordoComercial(0,job,tipo,""),-1)+1
			}
			set $piece(^mtemp.FATAcordoComercial(0,job,tipo,sequencia,1),"~",1) = valor.id
			set ^mtemp.FATAcordoComercial1(0,job,tipo,valor.id,1) = sequencia
			set sequencia(valor.id) = ""
		}
		set id=""
		for {
			set id = $order(^mtemp.FATAcordoComercial1(0,job,tipo,id)) quit:id=""
			if $data(sequencia(id)) continue
			set sequ = ^mtemp.FATAcordoComercial1(0,job,tipo,id,1)
			kill ^mtemp.FATAcordoComercial(0,job,tipo,sequ)
			kill ^mtemp.FATAcordoComercial1(0,job,tipo,id)
		}
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		set retorno.status 	= 1
		set retorno.type 	= "success"
		set retorno.mensagem="Dados salvos com sucesso!"
	}else{
		set retorno.status = 0
		set retorno.type 	= "error"
		set retorno.mensagem = $$$Text(strStatus,1)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recAcordo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigo=""</FormalSpec>
<Implementation><![CDATA[	if (codigo = "") {
		set codigo = $get(%request.Data("codigo",1))
		Set tRetorno = 1
	}Else{
		Set tRetorno = 2
	}
	kill ^mtemp.FATAcordoComercial(0,job)
	kill ^mtemp.FATAcordoComercial1(0,job)
	set formGeral = {}
	set formClientes = {}
	set formControle = {}
	set formConversao = {}
	set outros = {}
	set formGeral.situacao		= 1
	if codigo'=""{
		set objAcordoComercial		= $get(^FATAcordoComercial(YM,codigo,1))
		set formGeral.nome			= $$$FATAcordoComercialNome(objAcordoComercial)
		set formGeral.situacao		= +$$$FATAcordoComercialAtivo(objAcordoComercial)
		set formGeral.prestadorServico	= $$$FATAcordoComercialPrestadordeServico(objAcordoComercial)
		set formGeral.tipoFontePagadora	= $$$FATAcordoComercialTipodeFontePagadora(objAcordoComercial)
		set formGeral.fontePagadora		= $$$FATAcordoComercialFontePagadora(objAcordoComercial)
		set formGeral.recebedor			= $$$FATAcordoComercialRecebedor(objAcordoComercial)
		set formClientes.organizacao	= $$$FATAcordoComercialOrganizacao(objAcordoComercial)
		;
		set sequencia=""
		for {
			set sequencia = $order(^FATAcordoComercialConvM(0,codigo,sequencia)) quit:sequencia=""
			set objConversao = $get(^FATAcordoComercialConvM(0,codigo,sequencia,1))
			do formConversao.%Set("moedaDestino^"_sequencia,$$$FATAcordoComercialConvMMoedadeDestino(objConversao))
			do formConversao.%Set("moedaConversor^"_sequencia,+$$$FATAcordoComercialConvMConversor(objConversao))
			do formConversao.%Set("moedaOrigem^"_sequencia,$$$FATAcordoComercialConvMMoedadeOrigem(objConversao))
		}
		set outros.contadorMoedas			= $order(^FATAcordoComercialConvM(0,codigo,""),-1)
		;
		set formControle.criadoEm				= $$$FATAcordoComercialCriadoEm(objAcordoComercial)
		set formControle.criadoPor				= $$$FATAcordoComercialCriadoPor(objAcordoComercial)
		set formControle.alteradoEm				= $$$FATAcordoComercialAlteradoEm(objAcordoComercial)
		set formControle.alteradoPor			= $$$FATAcordoComercialAlteradoPor(objAcordoComercial)
		;
		if formControle.criadoEm'="" set formControle.criadoEm = $zdatetime(formControle.criadoEm,4)
		if formControle.alteradoEm'="" set formControle.alteradoEm = $zdatetime(formControle.alteradoEm,4)
		;
		merge ^mtemp.FATAcordoComercial(0,job,"clienteComercial") = ^FATAcordoComercialOrganizacao(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"tabelaComercial") = ^FATAcordoComercialTabela(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasItems")=^FATAcordoComercialRegraItem(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasCategoria")=^FATAcordoComercialRegraCat(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasTabela")=^FATAcordoComercialRegraTabela(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasAcordo")=^FATAcordoComercialRegraAcordo(0,codigo)
		;
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatItems")=^FATRegrasFatItem(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria")=^FATRegrasFatCategoria(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatTabela")=^FATRegrasFatTabela(0,codigo)
		merge ^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo")=^FATRegrasFatAcordo(0,codigo)
		;
		merge ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras")=^FATRegraComercialAcVal(0,codigo)
		;
		do ..atualizaClienteComercialSel(job,"clienteComercial",codigo)
		;
		for tipo="clienteComercial","tabelaComercial"{
			set nseq=""
			for {
				set nseq = $order(^mtemp.FATAcordoComercial(0,job,tipo,nseq)) quit:nseq=""
				set codigo = $piece(^mtemp.FATAcordoComercial(0,job,tipo,nseq,1),"~",1)
				set ^mtemp.FATAcordoComercial1(0,job,tipo,codigo,1)=nseq
			}
		}
	}
	set retorno = {}
	set retorno.regraFatAcordo 	= $Select($Data(^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo"))||($Data(^mtemp.FATAcordoComercial(0,job,"regrasAcordo"))):1,1:0)
	set retorno.formGeral 			= formGeral
	set retorno.formControle 		= formControle
	set retorno.formClientes		= formClientes
	set retorno.formConversao		= formConversao
	set retorno.outros					= outros
	If (tRetorno = 1) {
		write retorno.%ToJSON()
		quit
	}
	Quit retorno]]></Implementation>
</Method>

<Method name="setInelegibilidade">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codTabela = $get(%request.Data("codTabela",1))
	set ativar	 = $get(%request.Data("ativar",1))
	set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela","T",codTabela,1))
	if (ativar)||(ativar="true"){
		set $$$FATRegrasFatOrganizacaoItensInelegiveis(obj) = 1
	}else{
		set $$$FATRegrasFatOrganizacaoItensInelegiveis(obj) = 0
	}
	set ^mtemp.FATAcordoComercial(0,job,"regrasFatTabela","T",codTabela,1) = obj
	quit]]></Implementation>
</Method>

<Method name="atualizaClienteComercialSel">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,tipo,codAcordo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set nseq=""
	for {
		set nseq = $order(^mtemp.FATAcordoComercial(0,job,tipo,nseq)) quit:nseq=""
		set obj 	= $get(^mtemp.FATAcordoComercial(0,job,tipo,nseq,1))
		set codigo 	= $$$FATAcordoComercialOrganizacaoCodigodaOrganizacao(obj)
		set vetor(codigo)=nseq
	}
	set codigo = ""
	for {
		set codigo = $order(vetor(codigo)) quit:codigo=""
		set retorno = ..buscaFilhos(job,codAcordo,codigo)
		if retorno.%Size()=0 continue
		;
		for {
			set iterator = retorno.%GetIterator()
			while iterator.%GetNext(.indice,.valor){
				if $data(vetor(valor.id)) continue
				set nseq = $order(^mtemp.FATAcordoComercial(0,job,tipo,""),-1)+1
				set ^mtemp.FATAcordoComercial(0,job,tipo,nseq,1) = valor.id
				if '$isObject(valor.items) set retorno=""
				set retorno = valor.items
			}
			quit:retorno=""
		}

	}]]></Implementation>
</Method>

<Method name="getAcordo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codTabela = $get(%request.Data("codTabela",1))
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set tabelas = ""
	set tabela = ""
	for {
		set tabela = $order(^mtemp.FATAcordoComercial1(0,job,"tabelaComercial",tabela)) quit:tabela=""
		if tabelas'="" set tabelas = tabelas_","
		set tabelas = tabelas_"'"_tabela_"'"
	}
	set contador = 0
	set select1 = "select CodigodoAcordo,Nome from  FATAcordoComercial where Company=0 "
	if codigo '= "" set select1 = select1_" and CodigodoAcordo = '"_codigo_"' "
	else  if searchValue'="" set select1 = select1_" and (%upper($$SQLGetTextoSemAcento^VARSQL(CodigodoAcordo)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%') or %upper($$SQLGetTextoSemAcento^VARSQL(Nome)) like %upper('%"_$$SQLGetTextoSemAcento^VARSQL(searchValue)_"%'))"
	;
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_") ORDER BY Nome"
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.codigo = rs.%Get("CodigodoAcordo")
		set linha.descricao = "("_linha.codigo_") "_rs.%Get("Nome")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="salvar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codAcordo		= $get(%request.Data("codAcordo",1))
	set camposGeral		= $get(%request.Data("camposGeral",1))
	set camposClientes	= $get(%request.Data("camposClientes",1))
	set camposConversor	= $get(%request.Data("camposConversor",1))
	set totalConversores= $get(%request.Data("totalConversores",1))
	set strStatus 		= $$$OK
	tstart
	try{
		set camposGeral		= [].%FromJSON(camposGeral)
		set camposClientes	= [].%FromJSON(camposClientes)
		set camposConversor	= [].%FromJSON(camposConversor)
		;
		if '$data(^WWW128(0,"FATAcordoComercial")){
			set obj = "AC000000000"
			set strStatus = $$$Save("WWW128","FATAcordoComercial",obj,$$$YES)
			quit:$$$ISERR(strStatus)
		}		
		if codAcordo="" Set codAcordo = $$GetNextNumber^COMUtils("FATAcordoComercial","")
		;
		set objAcordoComercial = $get(^FATAcordoComercial(YM,codAcordo,1))
		set $$$FATAcordoComercialNome(objAcordoComercial)				= camposGeral.nome
		set $$$FATAcordoComercialAtivo(objAcordoComercial)				= camposGeral.situacao
		set strStatus = ..verificaOrganizacao(camposGeral.prestadorServico,"Prestador de Serviços")
		quit:$$$ISERR(strStatus)
		set $$$FATAcordoComercialPrestadordeServico(objAcordoComercial)	= camposGeral.prestadorServico
		set $$$FATAcordoComercialTipodeFontePagadora(objAcordoComercial)= camposGeral.tipoFontePagadora
		set strStatus = ..verificaOrganizacao(camposGeral.fontePagadora,"Fonte Pagadora")
		quit:$$$ISERR(strStatus)
		set $$$FATAcordoComercialFontePagadora(objAcordoComercial)		= camposGeral.fontePagadora
		set strStatus = ..verificaOrganizacao(camposGeral.recebedor,"Recebedor")
		quit:$$$ISERR(strStatus)
		set $$$FATAcordoComercialRecebedor(objAcordoComercial)			= camposGeral.recebedor
		set strStatus = ..verificaOrganizacao(camposGeral.organizacao,"Organizacao")
		quit:$$$ISERR(strStatus)
		set $$$FATAcordoComercialOrganizacao(objAcordoComercial)		= camposClientes.organizacao
		;
		set strStatus = $$$Save("FATAcordoComercial",codAcordo,objAcordoComercial,$$$YES)
		quit:$$$ISERR(strStatus)
		;
		if $$$ISOK(strStatus){
			kill vetor
			set linha = 0
			for i=1:1:totalConversores{
				set moedaDestino = camposConversor.%Get("moedaDestino^"_i)
				set moedaConversor = camposConversor.%Get("moedaConversor^"_i)
				set moedaOrigem = camposConversor.%Get("moedaOrigem^"_i)
				if camposConversor.%Get("linhaRemovida^"_i)=1 continue
				if (moedaDestino="")||(moedaConversor="")||(moedaOrigem="") continue
				if $data(validaConversor(moedaDestino,moedaOrigem)){
					set strStatus = "Há conversores utilizando as mesmas unidades monetárias. Favor verificar"
					quit
				}
				set validaConversor(moedaDestino,moedaOrigem)=""
				set objConversao = $get(^FATAcordoComercialConvM(0,codAcordo,i,1))
				set $$$FATAcordoComercialConvMMoedadeDestino(objConversao) 	= moedaDestino
				set $$$FATAcordoComercialConvMConversor(objConversao) 		= moedaConversor
				set $$$FATAcordoComercialConvMMoedadeOrigem(objConversao) 	= moedaOrigem
				set linha = linha + 1
				set strStatus = $$$Save("FATAcordoComercialConvM",codAcordo_","_linha,objConversao,$$$YES)
				quit:$$$ISERR(strStatus)
				set vetor(linha)=""
			}
		}
		if $$$ISOK(strStatus){
			set sequencia=""
			for {
				set sequencia = $order(^FATAcordoComercialConvM(0,codAcordo,sequencia)) quit:sequencia=""
				if $data(vetor(sequencia)) continue
				set strStatus = $$$Kill("FATAcordoComercialConvM",codAcordo_","_sequencia)
				quit:$$$ISERR(strStatus)
			}
		}
		;
		if $$$ISOK(strStatus) set strStatus = ..salvaClienteComercial(codAcordo)
		if $$$ISOK(strStatus) set strStatus = ..salvaTabelaComercial(codAcordo)
		;
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraAcordo(codAcordo)
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraTabela(codAcordo)
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraCategoria(codAcordo)
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraItem(codAcordo)
		;
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraValidades(codAcordo)
		;
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraFatAcordo(codAcordo)
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraFatTabela(codAcordo)
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraFatCategoria(codAcordo)
		if $$$ISOK(strStatus) set strStatus = ..salvaRegraFatItem(codAcordo)
		;

		
	}
	catch e {
		#dim e as %Exception.SystemException
		set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	set retorno = {}
	if strStatus=$$$OK{
		tcommit
		set strStatus="Dados salvos com sucesso!"
		set retorno.status = 1
		do retorno.%Set("codAcordo",codAcordo,"String")
		set retorno.type = "success"
		set retorno.mensagem = strStatus
	}else{
		trollback
		set retorno.status = 0
		set retorno.type = "error"
		set retorno.mensagem = $$$Text(strStatus)
	}
	write retorno.%ToJSON()
	quit $$$OK]]></Implementation>
</Method>

<Method name="verificaOrganizacao">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigo,legenda</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set strStatus = $$$OK
	if codigo'="" {
		if '$data(^FATOrganizacao(0,codigo,1)) {
			set strStatus = legenda_" INEXISTENTE"
		}else{
			set obj = $get(^FATOrganizacao(0,codigo,1))
			set nome = $$$FATOrganizacaoNome(obj)
			set ativo = $$$FATOrganizacaoAtivo(obj)
			if 'ativo set strStatus = legenda_" "_nome_" está INATIVO"
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="ajustaClientesComerciais">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,tipo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	kill vetor
	set sequ=""
	for {
		set sequ 	= $order(^mtemp.FATAcordoComercial(0,job,tipo,sequ)) quit:sequ=""
		set obj 	= $get(^mtemp.FATAcordoComercial(0,job,tipo,sequ,1))
		set codigo 	= $$$FATAcordoComercialOrganizacaoCodigodaOrganizacao(obj)
		set vetor(codigo)=sequ
	}
	set codigo = ""
	for {
		set codigo = $order(vetor(codigo)) quit:codigo=""
		set obj = $get(^FATOrganizacao(0,codigo,1))
		set orgPai = $$$FATOrganizacaoOrganizacaoPai(obj)
		if orgPai="" continue
		if $data(vetor(orgPai)) {
			set sequ = $piece(vetor(codigo),"~",1)
			kill ^mtemp.FATAcordoComercial(0,job,tipo,sequ)
		}
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="salvaClienteComercial">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	set strStatus = $$$OK
	kill vetor
	set tipo="clienteComercial"
	do ..ajustaClientesComerciais(job,tipo) ; Ajusta a temporária para manter apenas os grupos pais caso seja selecionado todo o grupo
	set sequ=""
	for {
		set sequ = $order(^mtemp.FATAcordoComercial(0,job,tipo,sequ)) quit:sequ=""
		set obj = $get(^mtemp.FATAcordoComercial(0,job,tipo,sequ,1))
		;
		set codCliente = $$$FATAcordoComercialOrganizacaoCodigodaOrganizacao(obj)
		if $data(^FATAcordoComercialOrganizacaos(0,1,codCliente)) {
			set acordoPresente = ""
			for {
				set acordoPresente = $order(^FATAcordoComercialOrganizacaos(0,1,codCliente,acordoPresente)) quit:acordoPresente=""
				set objAcordoComercial = $get(^FATAcordoComercial(0,acordoPresente,1))
				set acordoAtivo = $$$FATAcordoComercialAtivo(objAcordoComercial)
				if acordoPresente'=codAcordo,acordoAtivo{
					set strStatus = "Organizacao "_codCliente_" já consta no acordo "_acordoPresente
					quit
				}
			}
			quit:$$$ISERR(strStatus)
		}

		;
		set vetor(tipo,sequ)=""
		set strStatus = $$$Save("FATAcordoComercialOrganizacao",codAcordo_","_sequ,obj,$$$YES)
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus){
		set sequ=""
		for {
			set sequ = $order(^FATAcordoComercialOrganizacao(0,codAcordo,sequ)) quit:sequ=""
			if $data(vetor(tipo,sequ)) continue
			set strStatus = $$$Kill("FATAcordoComercialOrganizacao",codAcordo_","_sequ)
			quit:$$$ISERR(strStatus)
		}
	}	
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaTabelaComercial">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	set strStatus = $$$OK
	kill vetor
	set tipo="tabelaComercial"
	set sequ=""
	for {
		set sequ = $order(^mtemp.FATAcordoComercial(0,job,tipo,sequ)) quit:sequ=""
		set obj = $get(^mtemp.FATAcordoComercial(0,job,tipo,sequ,1))
		set vetor(tipo,sequ)=""
		set strStatus = $$$Save("FATAcordoComercialTabela",codAcordo_","_sequ,obj,$$$YES)
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus){
		set sequ=""
		for {
			set sequ = $order(^FATAcordoComercialTabela(0,codAcordo,sequ)) quit:sequ=""
			if $data(vetor(tipo,sequ)) continue
			set strStatus = $$$Kill("FATAcordoComercialTabela",codAcordo_","_sequ)
			quit:$$$ISERR(strStatus)
		}
	}	
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraAcordo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio)) quit:convenio=""
		set regra = ""
		for {
			set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio,regra)) quit:regra=""
			set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasAcordo",convenio,regra,1))
			set objOld = $get(^FATAcordoComercialRegraAcordo(0,codAcordo,convenio,regra,1))
			set strStatus = $$$Save("FATAcordoComercialRegraAcordo",codAcordo_","_convenio_","_regra,obj,$$$YES)
			quit:$$$ISERR(strStatus)
			if $$$FATAcordoComercialRegraAcordoInativa(objOld)'=$$$FATAcordoComercialRegraAcordoInativa(obj){
				set ^FATAcordoComercialRegraAcHist(0,codAcordo,convenio,regra,+$horolog,$piece($horolog,",",2),"Inativa",1) = $$$FATAcordoComercialRegraAcordoInativa(objOld)_"~"_$$$FATAcordoComercialRegraAcordoInativa(obj)
			}
			set vetor(convenio,regra)=""
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraAcordo(0,codAcordo,convenio)) quit:convenio=""
			set regra = ""
			for {
				set regra = $order(^FATAcordoComercialRegraAcordo(0,codAcordo,convenio,regra)) quit:regra=""
				if $data(vetor(convenio,regra)) continue
				set strStatus = $$$Kill("FATAcordoComercialRegraAcordo",codAcordo_","_convenio_","_regra)
				quit:$$$ISERR(strStatus)
			}	
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraTabela">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio)) quit:convenio=""
		set tabela = ""
		for {
			set tabela = $order(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela)) quit:tabela=""
			set regra = ""
			for {
				set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,regra)) quit:regra=""
				set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasTabela",convenio,tabela,regra,1))
				set objOld = $get(^FATAcordoComercialRegraTabela(0,codAcordo,convenio,tabela,regra,1))
				set strStatus = $$$Save("FATAcordoComercialRegraTabela",codAcordo_","_convenio_","_tabela_","_regra,obj,$$$YES)
				quit:$$$ISERR(strStatus)
				if $$$FATAcordoComercialRegraTabelaInativa(objOld)'=$$$FATAcordoComercialRegraTabelaInativa(obj){
					set ^FATAcordoComercialRegraTabHist(0,codAcordo,convenio,tabela,regra,+$horolog,$piece($horolog,",",2),"Inativa",1) = $$$FATAcordoComercialRegraTabelaInativa(objOld)_"~"_$$$FATAcordoComercialRegraTabelaInativa(obj)
				}
				set vetor(convenio,tabela,regra)=""
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraTabela(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATAcordoComercialRegraTabela(0,codAcordo,convenio,tabela)) quit:tabela=""
				set regra = ""
				for {
					set regra = $order(^FATAcordoComercialRegraTabela(0,codAcordo,convenio,tabela,regra)) quit:regra=""
					if $data(vetor(convenio,tabela,regra)) continue
					set strStatus = $$$Kill("FATAcordoComercialRegraTabela",codAcordo_","_convenio_","_tabela_","_regra)
					quit:$$$ISERR(strStatus)
				}	
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraCategoria">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio)) quit:convenio=""
		set tabela = ""
		for {
			set tabela = $order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela)) quit:tabela=""
			set categoria = ""
			for {
				set categoria = $order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categoria)) quit:categoria=""
				set regra = ""
				for {
					set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categoria,regra)) quit:regra=""
					set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasCategoria",convenio,tabela,categoria,regra,1))
					set objOld = $get(^FATAcordoComercialRegraCat(0,codAcordo,convenio,tabela,categoria,regra,1))
					set strStatus = $$$Save("FATAcordoComercialRegraCat",codAcordo_","_convenio_","_tabela_","_categoria_","_regra,obj,$$$YES)
					quit:$$$ISERR(strStatus)
					if $$$FATAcordoComercialRegraCatInativa(objOld)'=$$$FATAcordoComercialRegraCatInativa(obj){
						set ^FATAcordoComercialRegraCatHist(0,codAcordo,convenio,tabela,categoria,regra,+$horolog,$piece($horolog,",",2),"Inativa",1) = $$$FATAcordoComercialRegraCatInativa(objOld)_"~"_$$$FATAcordoComercialRegraCatInativa(obj)
					}
					set vetor(convenio,tabela,categoria,regra)=""
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraCat(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATAcordoComercialRegraCat(0,codAcordo,convenio,tabela)) quit:tabela=""
				set categoria = ""
				for {
					set categoria = $order(^FATAcordoComercialRegraCat(0,codAcordo,convenio,tabela,categoria)) quit:categoria=""
					set regra = ""
					for {
						set regra = $order(^FATAcordoComercialRegraCat(0,codAcordo,convenio,tabela,categoria,regra)) quit:regra=""
						if $data(vetor(convenio,tabela,categoria,regra)) continue
						set strStatus = $$$Kill("FATAcordoComercialRegraCat",codAcordo_","_convenio_","_tabela_","_categoria_","_regra)
						quit:$$$ISERR(strStatus)
					}	
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio)) quit:convenio=""
		set tabela = ""
		for {
			set tabela = $order(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela)) quit:tabela=""
			set item = ""
			for {
				set item = $order(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item)) quit:item=""
				set regra = ""
				for {
					set regra = $order(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item,regra)) quit:regra=""
					set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasItems",convenio,tabela,item,regra,1))
					set objOld = $get(^FATAcordoComercialRegraItem(0,codAcordo,convenio,tabela,item,regra,1))
					set strStatus = $$$Save("FATAcordoComercialRegraItem",codAcordo_","_convenio_","_tabela_","_item_","_regra,obj,$$$YES)
					quit:$$$ISERR(strStatus)
					if $$$FATAcordoComercialRegraItemInativa(objOld)'=$$$FATAcordoComercialRegraItemInativa(obj){
						set ^FATAcordoComercialRegraItemHist(0,codAcordo,convenio,tabela,item,regra,+$horolog,$piece($horolog,",",2),"Inativa",1) = $$$FATAcordoComercialRegraItemInativa(objOld)_"~"_$$$FATAcordoComercialRegraItemInativa(obj)
					}
					set vetor(convenio,tabela,item,regra)=""
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATAcordoComercialRegraItem(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATAcordoComercialRegraItem(0,codAcordo,convenio,tabela)) quit:tabela=""
				set item = ""
				for {
					set item = $order(^FATAcordoComercialRegraItem(0,codAcordo,convenio,tabela,item)) quit:item=""
					set regra = ""
					for {
						set regra = $order(^FATAcordoComercialRegraItem(0,codAcordo,convenio,tabela,item,regra)) quit:regra=""
						if $data(vetor(convenio,tabela,item,regra)) continue
						set strStatus = $$$Kill("FATAcordoComercialRegraItem",codAcordo_","_convenio_","_tabela_","_item_","_regra)
						quit:$$$ISERR(strStatus)
					}	
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraValidades">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set nivel=""
	for {
		set nivel = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel)) quit:nivel=""
		set codRegra=""
		for {
			set codRegra = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra)) quit:codRegra=""
			set campo=""
			for {
				set campo = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo)) quit:campo=""
				set datai = ""
				for {
					set datai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai)) quit:datai=""
					set horai = ""
					for {
						set horai = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai)) quit:horai=""
						set dataf = ""
						for {
							set dataf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf)) quit:dataf=""
							set horaf = ""
							for {
								set horaf = $order(^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf)) quit:horaf=""
								set obj = ^mtemp.FATAcordoComercial(0,job,"vigenciasRegras",nivel,codRegra,campo,datai,horai,dataf,horaf,1)
								set vetor(nivel,codRegra,campo,datai,horai,dataf,horaf)=""
								if $piece(obj,"~",2)'=0 continue
								set strStatus = $$$Save("FATRegraComercialAcVal",codAcordo_","_nivel_","_codRegra_","_campo_","_datai_","_horai_","_dataf_","_horaf,obj,$$$YES)
								quit:$$$ISERR(strStatus)
							}
							quit:$$$ISERR(strStatus)
						}
						quit:$$$ISERR(strStatus)
					}
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set nivel=""
		for {
			set nivel = $order(^FATRegraComercialAcVal(0,codAcordo,nivel)) quit:nivel=""
			set codRegra=""
			for {
				set codRegra = $order(^FATRegraComercialAcVal(0,codAcordo,nivel,codRegra)) quit:codRegra=""
				set campo = ""
				for {
					set campo = $order(^FATRegraComercialAcVal(0,codAcordo,nivel,codRegra,campo)) quit:campo=""
					set datai = ""
					for {
						set datai = $order(^FATRegraComercialAcVal(0,codAcordo,nivel,codRegra,campo,datai)) quit:datai=""
						set horai = ""
						for {
							set horai = $order(^FATRegraComercialAcVal(0,codAcordo,nivel,codRegra,campo,datai,horai)) quit:horai=""
							set dataf = ""
							for {
								set dataf = $order(^FATRegraComercialAcVal(0,codAcordo,nivel,codRegra,campo,datai,horai,dataf)) quit:dataf=""
								set horaf = ""
								for {
									set horaf = $order(^FATRegraComercialAcVal(0,codAcordo,nivel,codRegra,campo,datai,horai,dataf,horaf)) quit:horaf=""
									if $data(vetor(nivel,codRegra,campo,datai,horai,dataf,horaf)) continue
									set strStatus = $$$Kill("FATRegraComercialAcVal",codAcordo_","_nivel_","_codRegra_","_campo_","_datai_","_horai_","_dataf_","_horaf)
									quit:$$$ISERR(strStatus)
								}
								quit:$$$ISERR(strStatus)
							}
							quit:$$$ISERR(strStatus)
						}
						quit:$$$ISERR(strStatus)
					}
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="ajustaRegrasAcordo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo,codConvenio,objeto</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set codigo = codConvenio
	if codigo="T" {
		set objAcordoComercial = $get(^FATAcordoComercial(0,codAcordo,1))
		set codigo = $$$FATAcordoComercialOrganizacao(objAcordoComercial)
	}
	set objPai = ..recuperaRegrasPai(codigo)
	for piece=1:1:$length(objeto,"~"){
		if $piece(objPai,"~",piece)=$piece(objeto,"~",piece) set $piece(objeto,"~",piece) = ""
	}
	quit objeto]]></Implementation>
</Method>

<Method name="ajustaRegrasTabela">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo,codConvenio,codTabela,objeto</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objPai = $get(^FATRegrasFatAcordo(0,codAcordo,codConvenio,1))
	for piece=1:1:$length(objeto,"~"){
		if $piece(objPai,"~",piece)=$piece(objeto,"~",piece) set $piece(objeto,"~",piece) = ""
	}
	set objeto = ..ajustaRegrasAcordo(codAcordo,codConvenio,objeto)
	quit objeto]]></Implementation>
</Method>

<Method name="ajustaRegrasCategoria">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo,codConvenio,codTabela,codCategoria,objeto</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objPai = $get(^FATRegrasFatTabela(0,codAcordo,codConvenio,codTabela,1))
	for piece=1:1:$length(objeto,"~"){
		if $piece(objPai,"~",piece)=$piece(objeto,"~",piece) set $piece(objeto,"~",piece) = ""
	}
	set objeto = ..ajustaRegrasTabela(codAcordo,codConvenio,codTabela,objeto)
	quit objeto]]></Implementation>
</Method>

<Method name="salvaRegraFatAcordo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	/*
	;FATRegrasFatItem
	if nivelRegra=10 set ^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio,tabela,item,1)=obj
	;FATRegrasFatCategoria
	if nivelRegra=20 set ^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio,tabela,categoria,1)=obj
	; FATRegrasFatTabela
	if nivelRegra=30 set ^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",convenio,tabela,1)=obj
	; FATRegrasFatAcordo
	if nivelRegra=40 set ^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo",convenio,1)=obj
	*/
	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo",convenio)) quit:convenio=""
		set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatAcordo",convenio,1))
		;
		;set obj = ..ajustaRegrasAcordo(codAcordo,convenio,obj)
		;
		set strStatus = $$$Save("FATRegrasFatAcordo",codAcordo_","_convenio,obj,$$$YES)
		quit:$$$ISERR(strStatus)
		set vetor(convenio)=""
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatAcordo(0,codAcordo,convenio)) quit:convenio=""
			if $data(vetor(convenio)) continue
			set strStatus = $$$Kill("FATRegrasFatAcordo",codAcordo_","_convenio)
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraFatTabela">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",convenio)) quit:convenio=""
		set tabela = ""
		for {
			set tabela = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",convenio,tabela)) quit:tabela=""
			set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatTabela",convenio,tabela,1))
			;
			;set obj = ..ajustaRegrasTabela(codAcordo,convenio,tabela,obj)
			;
			set strStatus = $$$Save("FATRegrasFatTabela",codAcordo_","_convenio_","_tabela,obj,$$$YES)
			quit:$$$ISERR(strStatus)
			set vetor(convenio,tabela)=""
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatTabela(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATRegrasFatTabela(0,codAcordo,convenio,tabela)) quit:tabela=""
				if $data(vetor(convenio,tabela)) continue
				set strStatus = $$$Kill("FATRegrasFatTabela",codAcordo_","_convenio_","_tabela)
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraFatCategoria">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio)) quit:convenio=""
		set tabela = ""
		for {
			set tabela = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio,tabela)) quit:tabela=""
			set categoria = ""
			for {
				set categoria = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio,tabela,categoria)) quit:categoria=""
				set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatCategoria",convenio,tabela,categoria,1))
				;
				;set obj = ..ajustaRegrasCategoria(codAcordo,convenio,tabela,categoria,obj)
				;
				set strStatus = $$$Save("FATRegrasFatCategoria",codAcordo_","_convenio_","_tabela_","_categoria,obj,$$$YES)
				set vetor(convenio,tabela,categoria)=""
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatCategoria(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATRegrasFatCategoria(0,codAcordo,convenio,tabela)) quit:tabela=""
				set categoria = ""
				for {
					set categoria = $order(^FATRegrasFatCategoria(0,codAcordo,convenio,tabela,categoria)) quit:categoria=""
					if $data(vetor(convenio,tabela,categoria)) continue
					set strStatus = $$$Kill("FATRegrasFatCategoria",codAcordo_","_convenio_","_tabela_","_categoria)
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="salvaRegraFatItem">
<ClassMethod>1</ClassMethod>
<FormalSpec>codAcordo</FormalSpec>
<Implementation><![CDATA[	kill vetor
	set strStatus = $$$OK
	set convenio = ""
	for {
		set convenio = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio)) quit:convenio=""
		set tabela = ""
		for {
			set tabela = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio,tabela)) quit:tabela=""
			set item = ""
			for {
				set item = $order(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio,tabela,item)) quit:item=""
				set obj = $get(^mtemp.FATAcordoComercial(0,job,"regrasFatItems",convenio,tabela,item,1))
				;
				set strStatus = $$$Save("FATRegrasFatItem",codAcordo_","_convenio_","_tabela_","_item,obj,$$$YES)
				set vetor(convenio,tabela,item)=""
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) {
		set convenio = ""
		for {
			set convenio = $order(^FATRegrasFatItem(0,codAcordo,convenio)) quit:convenio=""
			set tabela = ""
			for {
				set tabela = $order(^FATRegrasFatItem(0,codAcordo,convenio,tabela)) quit:tabela=""
				set item = ""
				for {
					set item = $order(^FATRegrasFatItem(0,codAcordo,convenio,tabela,item)) quit:item=""
					if $data(vetor(convenio,tabela,item)) continue
					set strStatus = $$$Kill("FATRegrasFatItem",codAcordo_","_convenio_","_tabela_","_item)
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<FormalSpec>callMode=""</FormalSpec>
<Implementation><![CDATA[	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set %response.Status="401 Unauthorized"
		set resp={}
		set resp.status=0
		set resp.mensagem="Usuário não está logado ou a sessão expirou."
		write resp.%ToJSON()
	}elseif callMode=""{
		set resp={}
		set resp.status=1
		write resp.%ToJSON()
	}
	quit status]]></Implementation>
</Method>
</Class>
</Export>