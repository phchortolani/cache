<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.FATModeloLote">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst,FATConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	Set method = $Get(%request.Data("method",1))
	Set job = %session.SessionId
	Xecute "do .."_method_"()"
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetFATOrganizacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set pCodOrganizacao			= $Get(%request.Data("pCodOrganizacao",1))
	Set pTake 							= $Get(%request.Data("pTake",1))
	Set pSkip 							= $Get(%request.Data("pSkip",1))
	Set pSearchValue 				= $Replace($Get(%request.Data("pSearchValue",1))," ","")
	Set pClienteComercial		= $Get(%request.Data("pClienteComercial",1))
	Set pFontePagadora			= $Get(%request.Data("pFontePagadora",1))
	Set pPrestadorServicos	= $Get(%request.Data("pPrestadorServicos",1))
	Set pRecebedor					= $Get(%request.Data("pRecebedor",1))
	
	If (pTake = "") Set pTake = 20
	
	Set pTake = pTake + pSkip
	Set pSkip = pSkip + 1
		
	Set meuSQL = "Select * From (Select top "_pTake_" CodigodaOrganizacao, Nome "
	Set meuSQL = meuSQL_"From SQLUser.FATOrganizacao Where Company = 0 "
	If (pCodOrganizacao = "") {
		Set meuSQL = meuSQL_"And Ativo = 1 "
	}
	If (pClienteComercial '= "") {
		Set meuSQL = meuSQL_"And ClienteComercialAtivo in ('"_+pClienteComercial_"') "
	}
	If (pFontePagadora '= "") {
		Set meuSQL = meuSQL_"And FontePagadoraAtivo in ('"_+pFontePagadora_"') "
	}
	If (pPrestadorServicos '= "") {
		Set meuSQL = meuSQL_"And PrestadordeServicosAtivo in ('"_+pPrestadorServicos_"') "
	}
	If (pRecebedor '= "") {
		Set meuSQL = meuSQL_"And RecebedorAtivo in ('"_+pRecebedor_"') "
	}
	If (pCodOrganizacao '= "") {
		Set meuSQL = meuSQL_"And CodigodaOrganizacao = '"_pCodOrganizacao_"' "
	}Else{
		If (pSearchValue'="") {
			Set meuSQL = meuSQL_"And %UPPER('('||CodigodaOrganizacao||') '||Nome) LIKE %UPPER('%"_pSearchValue_"%') "
		}
	}
	Set meuSQL = meuSQL_") Where %VID Between "_pSkip_" and "_pTake_" "
	;
	Set rSet	= ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	;
	Set arrayDados = []
	;
 	While (rSet.%Next()) {
		Set listDados = {}
		Do listDados.%Set("Codigo", rSet.%Get("CodigodaOrganizacao"))
		Do listDados.%Set("Descricao", rSet.%Get("Nome"))
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="getOrganizacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	k ^mtemp.getOrganizacao(job)
	Set pCodOrganizacao	= $Get(%request.Data("pCodOrganizacao",1))
	Set pPrestServico		= +$Get(%request.Data("pPrestServico",1))
	Set pTipo						= $Get(%request.Data("pTipo",1))
	Set retorno = ..buscaFilhos(job, pCodOrganizacao, pPrestServico, pTipo)
	Do retorno.%ToJSON()
	Quit $$$OK]]></Implementation>
</Method>

<Method name="buscaFilhos">
<ClassMethod>1</ClassMethod>
<FormalSpec>job,pCodigoPai,pPrestServico,pTipo,pCaminhoPai="",&amp;selected</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	Set selected = 0
	Set retorno = []
	Set meuSQL = "Select CodigodaOrganizacao, Nome From SQLUser.FATOrganizacao "
	Set meuSQL = meuSQL _ "Where Company = 0 "
	If (pPrestServico = 1) {
		Set meuSQL =  meuSQL _ "And PrestadordeServicosAtivo = 1 "
	}Else{
		Set meuSQL =  meuSQL _ "And OrganizacaoPai = '"_pCodigoPai_"' "
	}
	Set meuSQL = meuSQL _ "And Ativo = 1 Order By Nome"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("", meuSQL)
	While(rSet.%Next()){
		If ($Data(^mtemp.getOrganizacao(job,rSet.%Get("CodigodaOrganizacao"))))	Continue
		Set ^mtemp.getOrganizacao(job,rSet.%Get("CodigodaOrganizacao"))=""
		
		Set linha = {}
		Set linha.id 		= rSet.%Get("CodigodaOrganizacao")
		Set linha.text 	= "("_rSet.%Get("CodigodaOrganizacao")_") "_rSet.%Get("Nome")
		Set caminho = pCaminhoPai_" / "_rSet.%Get("Nome")
		Set linha.caminho = caminho
		If $data(^mtemp.FATModeloLote1(0,job,pTipo,rSet.%Get("CodigodaOrganizacao"))) set linha.selected = 1,selected=1
		Set items = ..buscaFilhos(job, rSet.%Get("CodigodaOrganizacao"), 0, pTipo, caminho, .select)
		If select Set linha.expanded = 1 
		If items.%Size()>0 Set linha.items	= items
		Do retorno.%Push(linha)
	}
	Quit retorno]]></Implementation>
</Method>

<Method name="limparTela">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Kill ^mtemp.FATModeloLote(0,job)
	Kill ^mtemp.FATModeloLote1(0,job)]]></Implementation>
</Method>

<Method name="getSelecaoTemporaria">
<ClassMethod>1</ClassMethod>
<FormalSpec>pTipo=""</FormalSpec>
<Implementation><![CDATA[	Set job = %session.SessionId
	If (pTipo '= "") {
		Set tipo 	= pTipo
	}Else{
		Set tipo 	= $Get(%request.Data("tipo",1))
		
	}
	Set retorno 	= []
	Set sequencia = ""
	For {
		Set sequencia = $Order(^mtemp.FATModeloLote(0,job,tipo,sequencia)) 
		Quit:sequencia=""
		Set id 		= $Piece($Get(^mtemp.FATModeloLote(0,job,tipo,sequencia,1)),"~",1)
		Set linha = {}
		Set linha.sequencia = sequencia
		Set linha.id 				= id
		Set linha.caminho 	= ..recDescricao(id,tipo)
		Do retorno.%Push(linha)
	}
	If (pTipo '= "") {
		Return retorno.%Size()
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="recDescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>codigo,tipo="clienteComercial"</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	If (codigo = "") quit ""
	Set descricao 			= ""
	Set obj 						= $get(^FATOrganizacao(0,codigo,1))
	Set descricao 			= $$$FATOrganizacaoNome(obj)
	Set organizacaoPai 	= $$$FATOrganizacaoOrganizacaoPai(obj)
	For {
		Quit:organizacaoPai=""
		Set obj 						= $get(^FATOrganizacao(0,organizacaoPai,1))
		Set descricao 			= $$$FATOrganizacaoNome(obj)_" / "_descricao
		Set organizacaoPai 	= $$$FATOrganizacaoOrganizacaoPai(obj)
	}
	Quit descricao]]></Implementation>
</Method>

<Method name="atualizaSelecao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set tipo 			= $Get(%request.Data("tipo",1))
	Set reOrder 	= $Get(%request.Data("reOrder",1))
	Set selecao 	= $Get(%request.Data("selecao",1))
	Set strStatus = $$$OK
	Try{
		If reOrder=1{
			Kill ^mtemp.FATModeloLote(0,job,tipo)
			Kill ^mtemp.FATModeloLote1(0,job,tipo)
		}
		Set selecao = [].%FromJSON(selecao)
		Set iterator = selecao.%GetIterator()
		While iterator.%GetNext(.indice,.valor){
			If $Data(^mtemp.FATModeloLote1(0,job,tipo,valor.id)){
				Set sequencia = ^mtemp.FATModeloLote1(0,job,tipo,valor.id,1)
			}Else{
				Set sequencia = $Order(^mtemp.FATModeloLote(0,job,tipo,""),-1)+1
			}
			Set $Piece(^mtemp.FATModeloLote(0,job,tipo,sequencia,1),"~",1) = valor.id
			Set ^mtemp.FATModeloLote1(0,job,tipo,valor.id,1) = sequencia
			Set sequencia(valor.id) = ""
		}
		Set id=""
		For {
			Set id = $Order(^mtemp.FATModeloLote1(0,job,tipo,id)) Quit:id=""
			If $Data(sequencia(id)) Continue
			Set sequ = ^mtemp.FATModeloLote1(0,job,tipo,id,1)
			Kill ^mtemp.FATModeloLote(0,job,tipo,sequ)
			Kill ^mtemp.FATModeloLote1(0,job,tipo,id)
		}
	}
	Catch e {
		#dim e as %Exception.SystemException
		Set strStatus = $system.Status.GetErrorText(e.AsStatus())
	}
	Set retorno = {}
	If strStatus=$$$OK{
		Set retorno.status 	= 1
		Set retorno.type 	= "success"
		Set retorno.mensagem="Dados salvos com sucesso!"
	}Else{
		Set retorno.status = 0
		Set retorno.type 	= "error"
		Set retorno.mensagem = $$$Text(strStatus,1)
	}
	Write retorno.%ToJSON()
	Quit]]></Implementation>
</Method>

<Method name="SalvarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Tstart
	Set strStatus = ""
	Set erro = 0
	Try{
		Set pCodModeloLote 			= $Get(%request.Data("pCodModeloLote",1))
		Set pObjDadosGerais 		= $Get(%request.Data("pObjDadosGerais",1))
		Set pOrganizacaoCCTodos	= $Get(%request.Data("pOrganizacaoCCTodos",1))
		Set pOrganizacaoPSTodos = $Get(%request.Data("pOrganizacaoPSTodos",1))
		Set YBED 								= $Get(%request.Data("YBED",1))
		If (pCodModeloLote = "+") Set pCodModeloLote = ""
		Set pObjDadosGerais 		= [].%FromJSON(pObjDadosGerais)
		Set objFATModeloLote = ""
		If (pCodModeloLote '= "") {
			Set objFATModeloLote = $Get(^FATModeloLote(YM, pCodModeloLote, 1))
		}
		Set xRelatoriosModelo = ""
		Set xRelatoriosModelo1 = pObjDadosGerais.relatoriosModelo
		If (xRelatoriosModelo1 '= "" && (xRelatoriosModelo1.%Size() > 0)) {
			For i = 0 : 1 : (xRelatoriosModelo1.%Size()-1) {
				Set xRelatoriosModelo = xRelatoriosModelo _ $Select(i=0:"",1:";") _xRelatoriosModelo1.%Get(i)
			}
		}
		Set $$$FATModeloLoteDescricao(objFATModeloLote) = pObjDadosGerais.descricao
		Set $$$FATModeloLoteAtivo(objFATModeloLote) = pObjDadosGerais.ativo
		Set $$$FATModeloLoteTipoFontePagadora(objFATModeloLote) = pObjDadosGerais.pagamentoTipoFontePagadora
		Set $$$FATModeloLoteFontePagadora(objFATModeloLote) = pObjDadosGerais.pagamentoFontePagadora
		Set $$$FATModeloLoteRecebedor(objFATModeloLote) = pObjDadosGerais.pagamentoRecebedor
		Set $$$FATModeloLoteDataReferenciaPedido(objFATModeloLote) = pObjDadosGerais.periodoDataReferPedido
		Set $$$FATModeloLoteDiasdeIniciodosLotes(objFATModeloLote) = pObjDadosGerais.periodoDiasInicioLotes
		Set $$$FATModeloLotePrazoparaFechamento(objFATModeloLote) = pObjDadosGerais.periodoPrazoFechamento
		Set $$$FATModeloLoteDataReferenciaRetroativa(objFATModeloLote) = pObjDadosGerais.incRetrFatDataRefRetroativa
		Set $$$FATModeloLotePrazopInclusaoRetroativa(objFATModeloLote) = pObjDadosGerais.incRetrFatPrazoIncRetroativa
		Set $$$FATModeloLoteGuiasExportacao(objFATModeloLote) = pObjDadosGerais.guiasExportacao
		Set $$$FATModeloLoteGuiasExigirConferenciado(objFATModeloLote) = pObjDadosGerais.guiasExigirConferenciaItens
		Set $$$FATModeloLoteContaFinanceira(objFATModeloLote) = pObjDadosGerais.informacoesFinanceiroConta
		Set $$$FATModeloLoteEmissaoNotaGerarnotasparaCredenciado(objFATModeloLote) = pObjDadosGerais.emissaoNotaGerarNFCredenciados
		Set $$$FATModeloLoteEmissaoNotaPrazoVencimento(objFATModeloLote) = pObjDadosGerais.emissaoNotaPrazoVencimento
		Set $$$FATModeloLoteEmissaoNotaBanco(objFATModeloLote) = pObjDadosGerais.emissaoNotaBanco
		Set $$$FATModeloLoteEmissaoNotaAgencia(objFATModeloLote) = pObjDadosGerais.emissaoNotaAgencia
		Set $$$FATModeloLoteEmissaoNotaConta(objFATModeloLote) = pObjDadosGerais.emissaoNotaConta
		Set $$$FATModeloLoteHoraparaCriacaoAutomatica(objFATModeloLote) = pObjDadosGerais.transmissaoHoraCriacao
		Set $$$FATModeloLoteTiposdeTransmissaodeLote(objFATModeloLote) = pObjDadosGerais.transmissaoTipoTransmissao
		Set $$$FATModeloLoteReprocessarDocumentosdoPe(objFATModeloLote) = pObjDadosGerais.acoesPosFechamentoReprocessar
		Set $$$FATModeloLoteRelatoriosNome(objFATModeloLote) = pObjDadosGerais.relatoriosNome
		Set $$$FATModeloLoteRelatoriosAjustes(objFATModeloLote) = pObjDadosGerais.relatoriosAjustes
		Set $$$FATModeloLoteRelatoriosPercentual(objFATModeloLote) = pObjDadosGerais.relatoriosAjustesValor
		Set $$$FATModeloLoteOrganizacoesCliComeTodos(objFATModeloLote) = $Select(pOrganizacaoCCTodos="true"||(pOrganizacaoCCTodos="1"):1,1:0)
		Set $$$FATModeloLoteOrganizacoesPrestServTodos(objFATModeloLote) = $Select(pOrganizacaoPSTodos="true"||(pOrganizacaoPSTodos="1"):1,1:0)
		Set $$$FATModeloLoteModelodeRelatorios(objFATModeloLote) = xRelatoriosModelo
		If (pCodModeloLote = "") {
			Set $$$FATModeloLoteCriadoPor(objFATModeloLote) = YBED
			Set $$$FATModeloLoteCriadoEm(objFATModeloLote) 	= $Horolog
		}Else{
			Set $$$FATModeloLoteAlteradoPor(objFATModeloLote) = YBED
			Set $$$FATModeloLoteAlteradoEm(objFATModeloLote) 	= $Horolog
		}
		If (pCodModeloLote = "") {
			Set pCodModeloLote = $$GetNextNumber^COMUtils("FATModeloLote","")
		}
		Set strStatus = $$$Save("FATModeloLote", pCodModeloLote, objFATModeloLote, $$$YES)
		Quit:$$$ERROR(strStatus)
		;
		Set nseq = ""
		For {
			Set nseq = $Order(^mtemp.FATModeloLote(YM,job,"clienteComercial",nseq))
			Quit:nseq=""
			Set codigo = $Piece(^mtemp.FATModeloLote(YM,job,"clienteComercial",nseq,1),Y,1)
			Set ^FATModeloLoteClientesComerciais(YM,pCodModeloLote,codigo,1) = ""
		}
		;
		Set nseq = ""
		For {
			Set nseq = $Order(^mtemp.FATModeloLote(YM,job,"prestadorServico",nseq))
			Quit:nseq=""
			Set codigo = $Piece(^mtemp.FATModeloLote(YM,job,"prestadorServico",nseq,1),Y,1)
			Set ^FATModeloLotePrestadoresServico(YM,pCodModeloLote,codigo,1) = ""
		}
		;
		Set codRelatorio = ""
		For {
			Set codRelatorio = $Order(^mtemp.FATModeloLote(YM,job,"relatorio",codRelatorio))
			Quit:codRelatorio=""
			Set filtro = $Piece(^mtemp.FATModeloLote(YM,job,"relatorio",codRelatorio,1),Y,1)
			Set ^FATModeloLoteRelatorio(YM,pCodModeloLote,codRelatorio,1) = filtro
		}
	}
	Catch(err){
		#Dim err As %Exception.SystemException
		Set strStatus = err.DisplayString()
		Set erro = err
	}
	Set retorno = {}
	If ('erro) {
		TCommit
		Set retorno.codModeloLote = pCodModeloLote
		Set retorno.status = strStatus
	}else{
		TRollback
		Set retorno.status = strStatus
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Set YBED 								= $Get(%request.Data("YBED",1))
	Set pCodModeloLote 			= $Get(%request.Data("pCodModeloLote",1))
	;
	Set objFATModeloLote = $Get(^FATModeloLote(YM,pCodModeloLote,1))
	;
	Set listDadosGerais = {}
	Set listDadosGerais.descricao = $$$FATModeloLoteDescricao(objFATModeloLote)
	Set listDadosGerais.ativo = +$$$FATModeloLoteAtivo(objFATModeloLote)
	Set listDadosGerais.pagamentoTipoFontePagadora = $$$FATModeloLoteTipoFontePagadora(objFATModeloLote)
	Set listDadosGerais.pagamentoFontePagadora = $$$FATModeloLoteFontePagadora(objFATModeloLote)
	Set listDadosGerais.pagamentoRecebedor = $$$FATModeloLoteRecebedor(objFATModeloLote)
	Set listDadosGerais.periodoDataReferPedido = $$$FATModeloLoteDataReferenciaPedido(objFATModeloLote)
	Set listDadosGerais.periodoDiasInicioLotes = $$$FATModeloLoteDiasdeIniciodosLotes(objFATModeloLote)
	Set listDadosGerais.periodoPrazoFechamento = $$$FATModeloLotePrazoparaFechamento(objFATModeloLote)
	Set listDadosGerais.incRetrFatDataRefRetroativa = $$$FATModeloLoteDataReferenciaRetroativa(objFATModeloLote)
	Set listDadosGerais.incRetrFatPrazoIncRetroativa = $$$FATModeloLotePrazopInclusaoRetroativa(objFATModeloLote)
	Set listDadosGerais.guiasExportacao = $$$FATModeloLoteGuiasExportacao(objFATModeloLote)
	Set listDadosGerais.guiasExigirConferenciaItens = $$$FATModeloLoteGuiasExigirConferenciado(objFATModeloLote)
	Set listDadosGerais.informacoesFinanceiroConta = $$$FATModeloLoteContaFinanceira(objFATModeloLote)
	Set listDadosGerais.emissaoNotaGerarNFCredenciados = $$$FATModeloLoteEmissaoNotaGerarnotasparaCredenciado(objFATModeloLote)
	Set listDadosGerais.emissaoNotaPrazoVencimento = $$$FATModeloLoteEmissaoNotaPrazoVencimento(objFATModeloLote)
	Set listDadosGerais.emissaoNotaBanco = $$$FATModeloLoteEmissaoNotaBanco(objFATModeloLote)
	Set listDadosGerais.emissaoNotaAgencia = $$$FATModeloLoteEmissaoNotaAgencia(objFATModeloLote)
	Set listDadosGerais.emissaoNotaConta = $$$FATModeloLoteEmissaoNotaConta(objFATModeloLote)
	Set listDadosGerais.transmissaoHoraCriacao = $$$FATModeloLoteHoraparaCriacaoAutomatica(objFATModeloLote)
	Set listDadosGerais.transmissaoTipoTransmissao = $$$FATModeloLoteTiposdeTransmissaodeLote(objFATModeloLote)
	Set listDadosGerais.acoesPosFechamentoReprocessar = $$$FATModeloLoteReprocessarDocumentosdoPe(objFATModeloLote)
	Set listDadosGerais.relatoriosNome = $$$FATModeloLoteRelatoriosNome(objFATModeloLote)
	Set listDadosGerais.relatoriosAjustes = $$$FATModeloLoteRelatoriosAjustes(objFATModeloLote)
	Set listDadosGerais.relatoriosAjustesValor = $$$FATModeloLoteRelatoriosPercentual(objFATModeloLote)
	Set listDadosGerais.relatoriosModeloSemF = $Replace($$$FATModeloLoteModelodeRelatorios(objFATModeloLote),";",",")
	;
	Set organizacaoCCTodos = $$$FATModeloLoteOrganizacoesCliComeTodos(objFATModeloLote)
	Set organizacaoPSTodos = $$$FATModeloLoteOrganizacoesPrestServTodos(objFATModeloLote)
	;
	Set listDadosControle = {}
	Set listDadosControle.criadoPor		= $$SQLGetUserName^VARSQL($$$FATModeloLoteCriadoPor(objFATModeloLote))
	Set listDadosControle.criadoEm		= $Select($$$FATModeloLoteCriadoEm(objFATModeloLote)="":"",1:$ZDateTime($$$FATModeloLoteCriadoEm(objFATModeloLote),4,2))
	Set listDadosControle.alteradoPor = $$SQLGetUserName^VARSQL($$$FATModeloLoteAlteradoPor(objFATModeloLote))
	Set listDadosControle.alteradoEm 	= $Select($$$FATModeloLoteAlteradoEm(objFATModeloLote)="":"",1:$ZDateTime($$$FATModeloLoteAlteradoEm(objFATModeloLote),4,2))
	;
	Kill ^mtemp.FATModeloLote(0,job)
	Kill ^mtemp.FATModeloLote1(0,job)
	Set codigo = ""
	For {
		Set codigo = $Order(^FATModeloLoteClientesComerciais(YM,pCodModeloLote,codigo))
		Quit:codigo=""
		Set nseq = $Order(^mtemp.FATModeloLote(YM,job,"clienteComercial",""),-1) + 1
		Set ^mtemp.FATModeloLote(YM,job,"clienteComercial",nseq,1) = codigo
		Set ^mtemp.FATModeloLote1(YM,job,"clienteComercial",codigo,1) = nseq
	}
	;
	Set codigo = ""
	For {
		Set codigo = $Order(^FATModeloLotePrestadoresServico(YM,pCodModeloLote,codigo))
		Quit:codigo=""
		Set nseq = $Order(^mtemp.FATModeloLote(YM,job,"prestadorServico",""),-1) + 1
		Set ^mtemp.FATModeloLote(YM,job,"prestadorServico",nseq,1) = codigo
		Set ^mtemp.FATModeloLote1(0,job,"prestadorServico",codigo,1) = nseq
	}
	;
	Set codRelatorio = ""
	For {
		Set codRelatorio = $Order(^FATModeloLoteRelatorio(YM,pCodModeloLote,codRelatorio))
		Quit:codRelatorio=""
		Set filtro = $Piece(^FATModeloLoteRelatorio(YM,pCodModeloLote,codRelatorio,1),Y,1)
		Set ^mtemp.FATModeloLote(YM,job,"relatorio",codRelatorio,1) = filtro
	}
	;
	Set listRetorno = {}
	Set listRetorno.dadosGerais 	= listDadosGerais
	Set listRetorno.dadosControle = listDadosControle
	Set listRetorno.organizacaoCCTodos = +organizacaoCCTodos
	Set listRetorno.organizacaoPSTodos = +organizacaoPSTodos
	;
	Do listRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetDadosOrganizacoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Set YBED 								= $Get(%request.Data("YBED",1))
	Set pCodModeloLote 			= $Get(%request.Data("pCodModeloLote",1))
	;
	Kill ^mtemp.FATModeloLote(0,job)
	Kill ^mtemp.FATModeloLote1(0,job)
	Set codigo = ""
	For {
		Set codigo = $Order(^FATModeloLoteClientesComerciais(YM,pCodModeloLote,codigo))
		Quit:codigo=""
		Set nseq = $Order(^mtemp.FATModeloLote(YM,job,"clienteComercial",""),-1) + 1
		Set ^mtemp.FATModeloLote(YM,job,"clienteComercial",nseq,1) = codigo
		Set ^mtemp.FATModeloLote1(YM,job,"clienteComercial",codigo,1) = nseq
	}
	;
	Set codigo = ""
	For {
		Set codigo = $Order(^FATModeloLotePrestadoresServico(YM,pCodModeloLote,codigo))
		Quit:codigo=""
		Set nseq = $Order(^mtemp.FATModeloLote(YM,job,"prestadorServico",""),-1) + 1
		Set ^mtemp.FATModeloLote(YM,job,"prestadorServico",nseq,1) = codigo
		Set ^mtemp.FATModeloLote1(0,job,"prestadorServico",codigo,1) = nseq
	}
	;
	Set codRelatorio = ""
	For {
		Set codRelatorio = $Order(^FATModeloLoteRelatorio(YM,pCodModeloLote,codRelatorio))
		Quit:codRelatorio=""
		Set filtro = $Piece(^FATModeloLoteRelatorio(YM,pCodModeloLote,codRelatorio,1),Y,1)
		Set ^mtemp.FATModeloLote(YM,job,"relatorio",codRelatorio,1) = filtro
	}]]></Implementation>
</Method>

<Method name="GetFATModeloLote">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set pCodModeloLote			= $Get(%request.Data("pCodModeloLote",1))
	Set pTake 							= $Get(%request.Data("pTake",1))
	Set pSkip 							= $Get(%request.Data("pSkip",1))
	Set pDescricao 				= $Get(%request.Data("pDescricao",1))
	
	If (pTake = "") Set pTake = 20
	
	Set pTake = pTake + pSkip
	Set pSkip = pSkip + 1
		
	Set meuSQL = "Select * From (Select Top "_pTake_" CodigodoModelodeLote, Descricao "
	Set meuSQL = meuSQL_"From SQLUser.FATModeloLote "
	Set meuSQL = meuSQL_"Where Company = 0 "
	If (pCodModeloLote '= "") {
		Set meuSQL = meuSQL_"And CodigodoModelodeLote = '"_pCodModeloLote_"' "
	}Else{
		If (pDescricao'="") {
			Set meuSQL = meuSQL_"And %UPPER(Descricao) LIKE %UPPER('%"_pDescricao_"%') "
		}
	}
	Set meuSQL = meuSQL_") Where %VID Between "_pSkip_" and "_pTake_" "
	;
	Set rSet = ##class(%SQL.Statement).%ExecDirect("", meuSQL)
	;
	Set arrayDados = []
	;
 	While (rSet.%Next()) {
		Set listDados = {}
		Do listDados.%Set("CodigodoModelodeLote", rSet.%Get("CodigodoModelodeLote"))
		Do listDados.%Set("Descricao", "("_rSet.%Get("CodigodoModelodeLote")_") "_rSet.%Get("Descricao"))
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="pesquisar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	;
	Set YBED 					= $Get(%request.Data("YBED",1))
	Set pObjPesquisar = $Get(%request.Data("pObjPesquisar",1))
	Set pObjPesquisar = [].%FromJSON(pObjPesquisar)
	;
	Set arrayDados = []
	;
	Set meuSQL = "Select * From SQLUser.FATModeloLote Where Company = 0 "
	If (pObjPesquisar.descricao '= "") {
		Set meuSQL = meuSQL _ "And %Upper(Descricao) Like %Upper('%"_pObjPesquisar.descricao_"%') "	
	}
	If (pObjPesquisar.ativo '= "") {
		Set meuSQL = meuSQL _ "And Ativo = "_pObjPesquisar.ativo_" "
	}
	If (pObjPesquisar.pagamentoTipoFontePagadora '= "") {
		Set meuSQL = meuSQL _ "And TipoFontePagadora = '"_pObjPesquisar.pagamentoTipoFontePagadora_"' "	
	}
	If (pObjPesquisar.pagamentoFontePagadora '= "") {
		Set meuSQL = meuSQL _ "And FontePagadora) = '"_pObjPesquisar.pagamentoFontePagadora_"' "
	}
	If (pObjPesquisar.pagamentoRecebedor '= "") {
		Set meuSQL = meuSQL _ "And Recebedor) = '"_pObjPesquisar.pagamentoRecebedor_"' "	
	}
	Set rSet	= ##class(%SQL.Statement).%ExecDirect("",meuSQL)
 	While (rSet.%Next()) {
		Set listDados = {}
		Do listDados.%Set("codigodoModelodeLote", rSet.%Get("CodigodoModelodeLote"))
		Do listDados.%Set("descricao", rSet.%Get("Descricao"))
		Do listDados.%Set("ativo", $Select(+rSet.%Get("Ativo")?1"1":"Sim",1:"Não"))
		Do listDados.%Set("pagamentoTipoFontePagadora", $$SQLGetUserParamDesc^VARSQL("FATFONTEPAGADORA~"_rSet.%Get("TipoFontePagadora")))
		Do listDados.%Set("pagamentoFontePagadora", $$GetOrganizacaoNome^VARSQL(rSet.%Get("FontePagadora")))
		Do listDados.%Set("pagamentoRecebedor", $$GetOrganizacaoNome^VARSQL(rSet.%Get("Recebedor")))
		Do arrayDados.%Push(listDados)
 	}
 	;
 	Do arrayDados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetRelatorio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"

	Set arrayRetorno = []
	Set codRelatorio = ""
	For {
		Set codRelatorio = $Order(^mtemp.FATModeloLote(YM, job, "relatorio", codRelatorio))
		Quit:codRelatorio=""
		
		Set filtroAssociado = $Piece(^mtemp.FATModeloLote(YM, job, "relatorio", codRelatorio,1),Y,1)
		
		Set listDados = {}
		Do listDados.%Set("relatorioCod", codRelatorio)
		Do listDados.%Set("relatorioDesc", $$SQLGetUserParamDesc^VARSQL("FATVERSAOTISS~"_codRelatorio))
		Do listDados.%Set("filtroAssociado", filtroAssociado)
		;
		Do arrayRetorno.%Push(listDados)
	}
	;	
	Do arrayRetorno.%ToJSON()
	;
	Return $$$OK]]></Implementation>
</Method>

<Method name="ArmRelatorio">
<ClassMethod>1</ClassMethod>
<FormalSpec>objDados,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	
	Set objFATModeloLoteRelatorio = ""
	Set pCodRelatorio = ""
	Set pFiltroAssociado = ""

	Set index = "" 
	For {
		Set index = $Order(objDados(index)) 
		Quit:index=""
		Set campo = $Piece(objDados(index),"~",1)
		If (campo = "relatorioCod") Set pCodRelatorio = $Piece(objDados(index),"~",2)
		If (campo = "filtroAssociado") Set pFiltroAssociado = $Piece(objDados(index),"~",2)
	}

	Set job = %session.SessionId
		
	Set $Piece(^mtemp.FATModeloLote(YM, job, "relatorio", pCodRelatorio,1),Y,1) = pFiltroAssociado]]></Implementation>
</Method>

<Method name="ExcRelatorio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= pYBED
	Set job 	= %session.SessionId
	Kill ^mtemp.FATModeloLote(YM, job, "relatorio", pId)]]></Implementation>
</Method>

<Method name="GetModelRelatorio">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM 		= 0
	Set Y	 		= "~"
	Set YBED 	= $Get(%request.Data("YBED",1))
	Set retorno = []
	;
	Set meuSQL = "Select * From SQLUser.VARExtratoFaturColunas Where Company = 0 And Relatorio Not In ('FATExtratoFaturamento')"
	Set rSet 	 = ##class(%SQL.Statement).%ExecDirect("",.meuSQL)	;
	While (rSet.%Next()) {
		Set list = {}
		Set list.relatorio = rSet.%Get("Relatorio")
		Do retorno.%Push(list)	
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>