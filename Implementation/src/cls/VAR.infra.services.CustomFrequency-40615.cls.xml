<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.services.CustomFrequency">
<ClassType>persistent</ClassType>
<IncludeCode>COMSYS,VARService,VARConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>

<Property name="ServiceId">
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Frequency">
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="DaysOfWeek">
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="DaysOfMonth">
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ExecutionHour">
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="LastExecute">
<Type>%String</Type>

<Parameter name="TRUNCATE" value="1"/>
</Property>
<Index name="IDKEY">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>ServiceId</Properties>
<Unique>1</Unique>
</Index>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set ..ServiceId = $$$NULLOREF
	set ..LastExecute = $$$NULLOREF

	quit $$$OK]]></Implementation>
</Method>

<Method name="Load">
<ClassMethod>1</ClassMethod>
<FormalSpec>ServiceId:%String</FormalSpec>
<ReturnType>CustomFrequency</ReturnType>
<Implementation><![CDATA[	set id = 0

	&sql(SELECT ID INTO :id
	     FROM   VAR_infra_services.CustomFrequency
	     WHERE  ServiceId = :ServiceId)
	if (SQLCODE) quit $$$NULLOREF
	
	set customFrequency = ##class(CustomFrequency).%OpenId(id)
	set objVARParametroCliente = ^VARParametroCliente(0,0,1)
	if (ServiceId = $$$ServiceIdAlertaValidadeAta)
	{
		set customFrequency.Frequency		= $$$VARParametroClienteFrequenciaValidadeAta(objVARParametroCliente)
		set customFrequency.DaysOfWeek		= $$$VARParametroClienteDiasdasemanaata(objVARParametroCliente)
		set customFrequency.DaysOfMonth		= $$$VARParametroClienteDiasdomesata(objVARParametroCliente)
		set customFrequency.ExecutionHour	= $$$VARParametroClienteHoradeexecucaoata(objVARParametroCliente)
	}
	elseif (ServiceId = $$$ServiceIdAlertaValidadeProduto)
	{
		set customFrequency.Frequency		= $$$VARParametroClienteFrequenciaValidadeProduto(objVARParametroCliente)
		set customFrequency.DaysOfWeek		= $$$VARParametroClienteDiasdasemanaproduto(objVARParametroCliente)
		set customFrequency.DaysOfMonth		= $$$VARParametroClienteDiasdomesproduto(objVARParametroCliente)
		set customFrequency.ExecutionHour	= $$$VARParametroClienteHoradeexecucaoproduto(objVARParametroCliente)
	}
	elseif (ServiceId = $$$ServiceIdLimpaVARTemp)
	{
		set customFrequency.Frequency		= 2
		set customFrequency.DaysOfWeek		= 7
		set customFrequency.ExecutionHour	= "2:00"
	}
	elseif (ServiceId = $$$ServiceIdAlertaReposicao)
	{
		set customFrequency.Frequency		= $$$CustomFrequencyDaysOfWeek
		set customFrequency.DaysOfWeek		= "1;4"
		set customFrequency.ExecutionHour	= "08:00"
	}
	
	// ordena os dias da semana
	set tempList = $ListFromString(customFrequency.DaysOfWeek,";")	
	for i=1:1:$ListLength(tempList) {
		for j=i:1:$ListLength(tempList){
			if ($List(tempList,i) > $List(tempList,j))
			{
				set temp = $List(tempList,i)
				set $List(tempList,i) = $List(tempList,j)
				set $List(tempList,j) = temp
			}
		}
	}
	set customFrequency.DaysOfWeek = $ListToString(tempList,";")
	
	// ordena os dias do mês
	set tempList = $ListFromString(customFrequency.DaysOfMonth,";")	
	for i=1:1:$ListLength(tempList) {
		for j=i:1:$ListLength(tempList){
			if ($List(tempList,i) > $List(tempList,j))
			{
				set temp = $List(tempList,i)
				set $List(tempList,i) = $List(tempList,j)
				set $List(tempList,j) = temp
			}
		}
	}
	set customFrequency.DaysOfMonth = $ListToString(tempList,";")


	quit customFrequency]]></Implementation>
</Method>

<Method name="CheckFrequency">
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	set status = $$$NO
	
	// verifica se não rodou hoje
	if ($piece(+..LastExecute,",",1) '= $piece($horolog,",",1))
	{
		// Diário
		if (..Frequency = $$$CustomFrequencyDaily)
		{
			if (+..ExecutionHour <= +$ztime($piece($horolog,",",2),2))
			{
				set status = $$$YES
			}
		}
		// Dias da semana
		elseif (+..Frequency = $$$CustomFrequencyDaysOfWeek)
		{
			if (+..ExecutionHour <= +$ztime($piece($horolog,",",2),2))
				&&($find(..DaysOfWeek, +$zdate($piece($horolog,",",1),10)))
			{
				set status = $$$YES
			}
		}
		// Dias do mês
		elseif (+..Frequency = $$$CustomFrequencyDaysOfMonth)
		{
			if (+..ExecutionHour <= +$ztime($piece($horolog,",",2),2))
			{
				// verifica se é para o ultimo dia do mês
				if ($find(+..DaysOfMonth, 32))
					&&(+$zdate($piece($horolog,",",1)+1,2) < +$zdate($piece($horolog,",",1),2))
				{
					set status = $$$YES
				}
				elseif ($find(+..DaysOfMonth, +$zdate($piece($horolog,",",1),2)))
				{
					set status = $$$YES
				}
			}
		}
	}
	quit status]]></Implementation>
</Method>

<Method name="GetLastExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>ServiceId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	set customFrequency = ##class(CustomFrequency).Load(ServiceId)
	if ('$isObject(customFrequency)) quit $$$NULLOREF
	
	quit customFrequency.LastExecute]]></Implementation>
</Method>

<Method name="GetNextExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec>ServiceId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	set nextExecute = $$$NULLOREF
	set customFrequency = ##class(CustomFrequency).Load(ServiceId)
	if ('$isObject(customFrequency)) quit nextExecute
	
	set today = $piece($horolog,",",1)
	set lastDay = $piece(customFrequency.LastExecute,",",1)
	set nextDay = $$$NULLOREF
	
	// Diário
	if (+customFrequency.Frequency = $$$CustomFrequencyDaily)
	{
		if (lastDay = today)
		{
			set nextDay = today + 1
		}
		else{
			set nextDay = today
		}
	}
	// Dias da semana
	elseif (+customFrequency.Frequency = $$$CustomFrequencyDaysOfWeek)
	{
		set daysList = $ListFromString(customFrequency.DaysOfWeek,";")
		set nextDay = $ListGet(daysList,$ListFind(daysList,$zdate(lastDay,10))+1)
		if (nextDay = $$$NULLOREF)
		{
			set nextDay = $ListGet(daysList,1)
		}
		if (today = lastDay)
		{
			set temp = today + 1
		}
		else{
			set temp = today
		}
		for {
			if ($zdate(temp,10) = nextDay)
			{
				set nextDay = temp
				quit
			}
			set temp = temp + 1
		}
	}
	// Dias do mês
	elseif (+customFrequency.Frequency = $$$CustomFrequencyDaysOfMonth)
	{
		
		set daysList = $ListFromString(customFrequency.DaysOfMonth,";")
		for i=1:1:$ListLength(daysList){
			if (today = lastDay)
			{
				if (+$List(daysList,i) > +$zdate(today,2))
				{
					set nextDay = +$List(daysList,i)
					quit
				}
			}
			else
			{
				if (+$List(daysList,i) >= +$zdate(today,2))
				{
					set nextDay = +$List(daysList,i)
					quit
				}
			}
				
		}
		if (nextDay = $$$NULLOREF)
		{
			set nextDay = $ListGet(daysList,1)
		}
		if (today = lastDay)
		{
			set temp = today + 1
		}
		else{
			set temp = today
		}
		if (nextDay = 32)
		{
			for {
				if (+$zdate(temp+1,2) < +$zdate(temp,2))
				{
					set nextDay = temp
					quit
				}
				set temp = temp + 1
			}
		}
		else
		{
			for {
				if (+$zdate(temp,2)  = +nextDay)
				{
					set nextDay = temp
					quit
				}
				set temp = temp + 1
			}
		}
	}
	set nextExecute = nextDay_$$$COMMA_$ztimeh(customFrequency.ExecutionHour,2)
	
	quit nextExecute]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^VAR.infraE8E4.CustomFrequ2799D</DataLocation>
<DefaultData>CustomFrequencyDefaultData</DefaultData>
<IdLocation>^VAR.infraE8E4.CustomFrequ2799D</IdLocation>
<IndexLocation>^VAR.infraE8E4.CustomFrequ2799I</IndexLocation>
<StreamLocation>^VAR.infraE8E4.CustomFrequ2799S</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="CustomFrequencyDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Service</Value>
</Value>
<Value name="3">
<Value>Frequency</Value>
</Value>
<Value name="4">
<Value>DaysOfWeek</Value>
</Value>
<Value name="5">
<Value>DaysOfMonth</Value>
</Value>
<Value name="6">
<Value>ExecuteHour</Value>
</Value>
<Value name="7">
<Value>LastExecute</Value>
</Value>
<Value name="8">
<Value>ExecutionHour</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>