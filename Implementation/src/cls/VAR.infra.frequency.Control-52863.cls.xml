<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.infra.frequency.Control">
<ClassType/>
<Import>VAR.common</Import>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>

<Method name="IsOutdated">
<ClassMethod>1</ClassMethod>
<FormalSpec>Frequency:%Integer,Type:%Integer,Key1:%String,Key2:%String="---",Key3:%String="---",Key4:%String="---",Key5:%String="---",Key6:%String="---",Key7:%String="---",Key8:%String="---",Key9:%String="---",Key10:%String="---"</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	set lastUpdated = ..GetLastFrequency(Type, Key1, Key2, Key3, Key4, Key5, Key6, Key7,
		Key8, Key9, Key10, .objFrequency)

	if ($length(lastUpdated) = 0) quit $$$YES

	if (Frequency = ##class(Frequency).%GetParameter("FREQUENCYALWAYS")) {
		quit $$$YES
	}
	elseif (Frequency = ##class(Frequency).%GetParameter("FREQUENCYMINUTE")) {
		if ($System.SQL.DATEDIFF("minute", lastUpdated, $zdatetime($horolog, 3, 1)) >= 1) quit $$$YES
	}
	elseif (Frequency = ##class(Frequency).%GetParameter("FREQUENCYHOUR")) {
		if ($System.SQL.DATEDIFF("hour", lastUpdated, $zdatetime($horolog, 3, 1)) >= 1) quit $$$YES
	}
	elseif (Frequency = ##class(Frequency).%GetParameter("FREQUENCYDAY")) {
		if ($System.SQL.DATEDIFF("day", lastUpdated, $zdatetime($horolog, 3, 1)) >= 1) quit $$$YES
	}
	elseif (Frequency = ##class(Frequency).%GetParameter("FREQUENCYWEEK")) {
		if ($System.SQL.DATEDIFF("week", lastUpdated, $zdatetime($horolog, 3, 1)) >= 1) quit $$$YES
	}
	elseif (Frequency = ##class(Frequency).%GetParameter("FREQUENCYMONTH")) {
		if ($System.SQL.DATEDIFF("month", lastUpdated, $zdatetime($horolog, 3, 1)) >= 1) quit $$$YES
	}
	elseif (Frequency = ##class(Frequency).%GetParameter("FREQUENCYCUSTOM30MIN")) {
		if ($System.SQL.DATEDIFF("minute", lastUpdated, $zdatetime($horolog, 3, 1)) >= 30) quit $$$YES
	}

	quit $$$NO]]></Implementation>
</Method>

<Method name="Update">
<ClassMethod>1</ClassMethod>
<FormalSpec>Type:%Integer,Key1:%String,Key2:%String="---",Key3:%String="---",Key4:%String="---",Key5:%String="---",Key6:%String="---",Key7:%String="---",Key8:%String="---",Key9:%String="---",Key10:%String="---",LastUpdated:%TimeStamp=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ..GetLastFrequency(Type, Key1, Key2, Key3, Key4, Key5, Key6, Key7, Key8, Key9,
		Key10, .objFrequency)

	if ('$isObject(objFrequency)) {
		set objFrequency = ##class(Frequency).%New()
		set objFrequency.Type	= Type
		set objFrequency.Key1	= Key1
		set objFrequency.Key2	= Key2
		set objFrequency.Key3	= Key3
		set objFrequency.Key4	= Key4
		set objFrequency.Key5	= Key5
		set objFrequency.Key6	= Key6
		set objFrequency.Key7	= Key7
		set objFrequency.Key8	= Key8
		set objFrequency.Key9	= Key9
		set objFrequency.Key10	= Key10
	}

	if ($length(LastUpdated) = 0) set LastUpdated = $zdatetime($horolog, 3, 1)

	set objFrequency.LastUpdated = LastUpdated

	quit objFrequency.%Save(1)]]></Implementation>
</Method>

<Method name="Clear">
<ClassMethod>1</ClassMethod>
<FormalSpec>Type:%Integer,Key1:%String,Key2:%String="---",Key3:%String="---",Key4:%String="---",Key5:%String="---",Key6:%String="---",Key7:%String="---",Key8:%String="---",Key9:%String="---",Key10:%String="---"</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	do ..GetLastFrequency(Type, Key1, Key2, Key3, Key4, Key5, Key6, Key7, Key8, Key9,
		Key10, .objFrequency)

	if ('$isObject(objFrequency)) quit $$$OK

	set objFrequency.LastUpdated = ""

	quit objFrequency.%Save(1)]]></Implementation>
</Method>

<Method name="GetLastFrequency">
<ClassMethod>1</ClassMethod>
<FormalSpec>Type:%Integer,Key1:%String,Key2:%String="---",Key3:%String="---",Key4:%String="---",Key5:%String="---",Key6:%String="---",Key7:%String="---",Key8:%String="---",Key9:%String="---",Key10:%String="---",&amp;objFrequency:Frequency</FormalSpec>
<ReturnType>%TimeStamp</ReturnType>
<Implementation><![CDATA[	set objFrequency = $$$NULLOREF

	&sql(SELECT   ID, LastUpdated
		 INTO	  :ID, :lastUpdated
		 FROM	  Frequency
		 WHERE	  Type	= :Type
		 AND      Key1	= :Key1
		 AND      Key2	= :Key2
		 AND      Key3	= :Key3
		 AND      Key4	= :Key4
		 AND      Key5	= :Key5
		 AND      Key6	= :Key6
		 AND      Key7	= :Key7
		 AND      Key8	= :Key8
		 AND      Key9	= :Key9
		 AND      Key10	= :Key10)
	if (SQLCODE) quit ""

	set objFrequency = ##class(Frequency).%OpenId(ID)

	quit lastUpdated]]></Implementation>
</Method>
</Class>
</Export>