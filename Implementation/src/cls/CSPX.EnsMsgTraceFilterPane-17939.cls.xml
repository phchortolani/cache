<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsMsgTraceFilterPane">
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.FormPane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Method name="DrawCommands">
<FormalSpec>pInstance:PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// HCR076 - Avoid CSP errors in the bottom frame by exiting in case of errors in the search form
	If $G(%request.Data("$SUBMITBTN",1))="$AUTOFORM_SEARCH" {
		If ($G(%request.Data("$ERROR_StartTime",1))'="") || ($G(%request.Data("$ERROR_EndTime",1))'="") || ($G(%request.Data("$AUTOFORMERROR",1))'="") {
			Quit $$$OK // No need to redraw anything, there are errors in the form
		}
	}

	// override this to draw paging buttons
	// calculate trace data

	// get page ID values
	Merge tID = pInstance.IDValues

	// If this is a search submit,get request parms via object
	If ($G(%request.Data("$SUBMITBTN",1)) = "$AUTOFORM_SEARCH" ) {
		Set tRequest = ##class(CSPX.EnsMsgTraceFilterForm).ProcessSubmit(%request, .tID)
		Set sessionId = tRequest.SessionId
		Set startTime = tRequest.StartTime
		Set endTime = tRequest.EndTime
		Set startId = tRequest.StartId
		Set endId = tRequest.EndId
	}
	Else {
		Set tMsgId=$G(tID(1)), sessionId=""
		If ""'=tMsgId {
			&sql(SELECT SessionId INTO :tSessionId FROM Ens.MessageHeader WHERE %ID = :tMsgId)
			Set:'SQLCODE sessionId=tSessionId
		}
		Set startTime = ""
		Set endTime = ""
		Set startId = ""
		Set endId = ""
	}
	Set num = ##class(CSPX.EnsMsgTraceSVG).BuildTraceInfo(sessionId,startTime,endTime,startId,endId)
	Set page = $G(%request.Data("$ID2",1),1)

	// if not a goto button, reset page
	Set:('$D(%request.Data("$GOTO",1))) page = 1

	&html<<div class="Text1">#(..LocalizeText("@Ensemble:SearchReturned@This search returned "))#<b>#(num)#</b> #(..LocalizeText("@Ensemble:TraceFilterTitle@message(s)"))#.&nbsp;>

	If (num >= ##class(CSPX.EnsMsgTraceSVG).MessagesPerPage()) {
		&html<#(..LocalizeText("@Ensemble:TraceFilterHelp@They are displayed using multiple pages."))#</div>>
		Do ..ShowBlockTable(num,##class(CSPX.EnsMsgTraceSVG).MessagesPerPage(),page)
	} Else {
		&html<</div>>
	}
	&html<<hr>>
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="ShowBlockTable">
<Description><![CDATA[
Displays the table of result numbers]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>max:%Integer,per:%Integer,curr:%Integer</FormalSpec>
<Implementation><![CDATA[
	Set rows = (max \ per) \ 10
	Set cols = 10
	Set showprev = (curr > 1)
	Set shownext  = (curr <= (max \ per))

	&html<<TABLE STYLE="margin: 4px; border: 1px black solid; background: white;" CELLPADDING="2" CELLSPACING="0" BORDER="0">>
	For row = 0:1:rows {
		&html<<TR>>
		For col = 1:1:cols {
			Set page = ((row * cols) + (col - 1)) + 1
			Set start = ((page - 1) * per) + 1
			If (start < max) {
				Set stop = (start + per - 1)  Set:stop>max stop = max
				Set letter = start _ "-" _ stop
				If (page = curr) {
					Set tdstyle = "border-bottom: 1px gray solid; border-right: 1px gray solid; background: yellow; padding-left: 2px; padding-right: 2px;"
				} Else {
					Set tdstyle = "border-bottom: 1px gray solid; border-right: 1px gray solid; padding-left: 2px; padding-right: 2px;"
				}
				&html<<TD STYLE="#(tdstyle)#" ALIGN="CENTER" VALIGN="CENTER" onclick="self.top.frames['Detail'].gotoMsgPage(#(page)#);return true;">
					<A STYLE="font-size: 0.8em; text-decoration: none;" HREF="javascript:self.top.frames['Detail'].gotoMsgPage(#(page)#);"><NOBR>#(letter)#</NOBR></A></TD>>
			}
		}
		&html<</TR>>
	}
	&html<</TABLE>>
	
	/*
	If (showprev) {
			&html<&nbsp;<A STYLE="font-size: 0.8em; text-decoration: none;" HREF="javascript:prevPage()">&lt;&lt; Previous</A>>
	}

	If (shownext) {
			&html<&nbsp;<A STYLE="font-size: 0.8em; text-decoration: none;" HREF="javascript:nextPage()">Next &gt;&gt;</A>>
	}
	*/
]]></Implementation>
</Method>
</Class>
</Export>