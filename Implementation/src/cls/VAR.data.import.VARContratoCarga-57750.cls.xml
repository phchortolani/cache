<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.VARContratoCarga">
<ClassType/>
<IncludeCode>VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[Command:
> do ##class(VAR.data.import.VARContratoCarga).importFile()
Fields
	
	Tipo;Categoria;NoContrato;Status;NoLicitacao;Celebrado;Objeto;isProrrogavel;DatadeAssinatura;
	DatadePublicacao;CriteriodeVigencia;Duracao;Periodo;DatadeIniciodaVigencia;DatadeTerminodaVigencia;
	Contratada;RazaoSocial;ResponsavelLegal;CNPJCPF;Contato;Telefone;Fax;Email;Celular;ValorMensal;
	ValorTotal;Moeda;Observacoes;Executor;Matricula]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>

<Method name="importFile">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_
		"VARSESContrato_HEVA.csv")]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0

	// Remoção dos registros antigos antes da importação.
	new total, codContrato, continuar, sc

	set total = 0
	set codContrato = $order(^VARContrato(YM, ""))
	while ($length(codContrato) > 0) {
		set total = $increment(total)

		set codContrato = $order(^VARContrato(YM, codContrato))
	}

	write !, "Existem "_total_" registros na global ^VARContrato("_YM_"). Os mesmos serão removidos antes da importação. "
	read "Deseja continuar? (S/N) ", continuar#1

	if ((continuar '= "S") && (continuar '= "s")) quit $$$CUSTOMERROR("Operação abortada.")

	set total = 0
	set codContrato = $order(^VARContrato(YM, ""))
	while ($length(codContrato) > 0) {
		if ($data(^VARContrato(YM, codContrato, 1))) {
			set sc = $$$Kill("VARContrato", codContrato)
			if ($$$ISOK(sc)) {
				set total = $increment(total)
			}
			else {
				$$$VARLOGERROR(sc)
			}
		}

		set codContrato = $order(^VARContrato(YM, codContrato))
	}
	write !, "Foram removidos "_total_" registros da global ^VARContrato("_YM_")."

	merge ^WWW001VARHooks.bkp(0, "VARContrato", 1, 1) = ^WWW001VARHooks(0, "VARContrato", 1, 1)
	kill ^WWW001VARHooks(0, "VARContrato", 1, 1)

	quit ##super()]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	set $ztrap = "exceptionProc"
	set strStatus = $$$OK
	
	set key	= $$^WWWNEXT("VARContrato") //..getField(pstrLinha, 5)

	set obj = ""
	set $$$VARContratoTipo(obj) 					= ..getField(pstrLinha, 1)
	set $$$VARContratoCategoria(obj) 				= ..getField(pstrLinha, 2)
	set $$$VARContratoNoContrato(obj) 				= ..getField(pstrLinha, 3)
	set $$$VARContratoStatus(obj) 					= ..getField(pstrLinha, 4)
	set $$$VARContratoNoLicitacao(obj) 				= ..getField(pstrLinha, 5)
	set $$$VARContratoCelebrado(obj) 				= ..getField(pstrLinha, 6)
	set $$$VARContratoObjeto(obj) 					= ..getField(pstrLinha, 7)
	set $$$VARContratoisProrrogavel(obj) 			= ..getField(pstrLinha, 8)
	if (..getField(pstrLinha, 9)'=""){
		set $$$VARContratoDatadeAssinatura(obj) 		= $zdateh(..getField(pstrLinha, 9),4)
	}
	if (..getField(pstrLinha, 10)'=""){
		set $$$VARContratoDatadePublicacao(obj) 		= $zdateh(..getField(pstrLinha, 10),4)
	}
	set $$$VARContratoCriteriodeVigencia(obj) 		= ..getField(pstrLinha, 11)
	set $$$VARContratoDuracao(obj) 					= ..getField(pstrLinha, 12)
	set $$$VARContratoPeriodo(obj)					= ..getField(pstrLinha, 13)
	if ((+..getField(pstrLinha, 14) > 2) && (+..getField(pstrLinha, 15) > 2)) {
		set $$$VARContratoDatadeIniciodaVigencia(obj) 	= $zdateh(..getField(pstrLinha, 14),4)
		set $$$VARContratoDatadeTerminodaVigencia(obj) 	= $zdateh(..getField(pstrLinha, 15),4)
	}
	set $$$VARContratoContratada(obj) 				= ..getField(pstrLinha, 17)
	//set $$$VARContratoRazaoSocial(obj) 				= ..getField(pstrLinha, 17)
	set $$$VARContratoResponsavelLegal(obj) 		= ..getField(pstrLinha, 18)
	set $$$VARContratoCNPJCPF(obj) 					= ..getField(pstrLinha, 19)
	set $$$VARContratoContato(obj) 					= ..getField(pstrLinha, 20)
	set $$$VARContratoTelefone(obj) 				= ..getField(pstrLinha, 21)
	set $$$VARContratoFax(obj) 						= ..getField(pstrLinha, 22)
	set $$$VARContratoEmail(obj) 					= ..getField(pstrLinha, 23)
	set $$$VARContratoCelular(obj) 					= ..getField(pstrLinha, 24)
	set $$$VARContratoValorMensal(obj) 				= ..getField(pstrLinha, 25)
	set $$$VARContratoValorTotal(obj) 				= ..getField(pstrLinha, 26)
	//set $$$VARContratoMoeda(obj) 					= ..getField(pstrLinha, 27)
	set $$$VARContratoObservacoes(obj) 				= ..getField(pstrLinha, 27)
	set $$$VARContratoCriadoEm(obj)					= $horolog
	set $$$VARContratoCriadoPor(obj)				= "Sistema"
	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_key_", obj="_obj)
	}
	else {
		set strStatus = $$$Save("VARContrato", key, obj, 1)
	}
	if ($get(strStatus)) {
		set objExec = ""
		set keyExec = key_$$$COMMA_1
		set $$$VARContratoExecutorExecutor(objExec) 	= ..getField(pstrLinha, 28)
		set $$$VARContratoExecutorMatricula(objExec) 	= ..getField(pstrLinha, 29)
		set $$$VARContratoExecutorCriadoEm(objExec) 	= $horolog
		set $$$VARContratoExecutorCriadoPor(objExec) 	= "Sistema"
		
		set strStatus = $$$Save("VARContratoExecutor", keyExec, objExec, 1)

	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc]]></Implementation>
</Method>

<Method name="finalize">
<Implementation><![CDATA[	merge ^WWW001VARHooks(0, "VARContrato", 1, 1) = ^WWW001VARHooks.bkp(0, "VARContrato", 1, 1)]]></Implementation>
</Method>
</Class>
</Export>