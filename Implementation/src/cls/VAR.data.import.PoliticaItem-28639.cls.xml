<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.PoliticaItem">
<ClassType/>
<IncludeCode>VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Command: 
> do ##class(VAR.data.import.PoliticaItem).importFile()

Fields
		ItemNumber,FREE33,SearchName,CostumerTextorItemTextNo,ItemGroup,ItemType,UnitofMeasure,HoldReason,FREE7,FREE18
			,FREE2,FREE6,FREE17,FREE9,DangerousGoodsCategory,FREE10,FREE5,FREE11,FREE12,FREE15,MultidoseInjectable,FREE13,
			FREE25,FREE22,FREE14,FREE32,ItemPolicy,BaseUnit
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_
		"POLITICA_DASA.csv")
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0
	kill ^CacheTempLogCargaPoliticaItem("POLITICADASA")
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRegistros:%Integer,pstrLinha:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	set strStatus = $$$OK

	set key	= ..getField(pstrLinha, 1)

	set obj = $get(^INART(YM,key,1))
	
	set policy = ..getField(pstrLinha,2)
	
	// Não atualiza o registro caso ele já exista
	if (obj '= "") {
		set qtyOnHand = ""
		
		&SQL(
			SELECT QtyOnHand INTO :qtyOnHand
			FROM alSOH.dBundleStock
			WHERE Item = :key
		)
		
		if (SQLCODE = 0) {
			set ^CacheTempLogCargaPoliticaItem("POLITICADASA","COMSALDO",key) = "Item " _ key _ " tem saldo em estoque: " _ qtyOnHand
		}
		else {
			if (($$$INARTItemPolicy(obj) '= policy)) {
				&SQL(
					UPDATE SQLUser.INART
					SET ItemPolicy = :policy
					WHERE ItemNumber = :key
				)
				if (SQLCODE = 0) {
					set ^CacheTempLogCargaPoliticaItem("POLITICADASA","ALTERADO",key) = "Item: " _ key _ " Política antiga: " _ $$$INARTItemPolicy(obj) _ " Política nova: " _ policy
				}
				else {
					set ^CacheTempLogCargaPoliticaItem("POLITICADASA","FALHAALTERACAO",key) = "Item: " _ key _ " Política antiga: " _ $$$INARTItemPolicy(obj) _ " Política nova: " _ policy _ " SQLCODE: " _ SQLCODE
				}
			}
			else {
				set ^CacheTempLogCargaPoliticaItem("POLITICADASA","SEMALTERACAO",key) = "Item: " _ key _ " Política antiga: " _ $$$INARTItemPolicy(obj) _ " Política nova: " _ policy
			}
		}
	}
	else {
		set ^CacheTempLogCargaPoliticaItem("POLITICADASA","NAOENCONTRADO",key) = "Item não encontrado: " _ key
	}

	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_key_", obj="_obj)
	}
	else {
		;set strStatus = $$$Save("INART", key, obj, 1)
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
]]></Implementation>
</Method>
</Class>
</Export>