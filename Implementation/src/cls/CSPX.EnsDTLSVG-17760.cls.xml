<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsDTLSVG">
<Description><![CDATA[
Renders SVG canvas for DTL editor]]></Description>
<ClassType/>
<IncludeCode>Ensemble,EnsUI</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>CSPX.SVGCanvas</Super>
<System>3</System>

<Parameter name="JSINCLUDES">
<Description><![CDATA[
Comma-delimited list of addition .js files that this page includes]]></Description>
<Default>ensxml.js,ensdtl.js,ensdtlparser.js</Default>
</Parameter>


<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>EnsBPL</Default>
</Parameter>


<Method name="OnDrawStyleSheet">
<Description><![CDATA[
Draw style sheet]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	// find svg font from config global
	Set tFont = $G(^Ens.SVGStyle("font-family"),"tahoma,verdana")

	&html<
text, tspan {
  pointer-events: none;
  font-size: 17;
  font-family: #(tFont)#;
}

.canvas {
	fill: #DDEEFF;
	stroke: gray;
	stroke-width: 1;
}

/* rect that holds target/source boxes */
.container {
	fill: none;
}

.scrollBtn {
	opacity: 0.5;
	fill: #EEEEFF;
	stroke: blue;
	stroke-width: 1;
}

.scrollBtnHover {
	opacity: 0.5;
	fill: red;
	stroke: blue;
	stroke-width: 1;
}

.scrollBtnBg {
	opacity: 0.3;
	fill: #EEEEFF;
	stroke: blue;
	stroke-width: 1;
}

.scrollBtnBgHover {
	opacity: 0.3;
	fill: red;
	stroke: blue;
	stroke-width: 1;
}

.TitleLine {
	fill: none;
	stroke: blue;
	stroke-width: 1;
}

.Spine {
	fill: #EEEEFF;
	stroke: blue;
	stroke-width: 1;
}

.Expando {
	fill: #AAAAFF;
	stroke: blue;
	stroke-width: 1;
}

.ExpandoNotLoaded {
	fill: #EEEEFF;
	stroke: blue;
	stroke-width: 1;
}

.ExpandoDown {
	fill: red;
	stroke: blue;
	stroke-width: 1.5;
}

.PropRect {
	fill: white;
	stroke: blue;
	stroke-width: 1;
}

.PropRectSelected {
	fill: yellow;
	stroke: blue;
	stroke-width: 2;
}

.PropRectRelated {
	fill: #FFAAFF;
	stroke: blue;
	stroke-width: 2;
}

.PropRectCanConnect {
	fill: orange;
	stroke: green;
	stroke-width: 1;
}

.IOActionNone {
	fill: white;
	stroke: blue;
	stroke-width: 1;
}

.IOActionDisabled {
	fill: #DDEEFF;
	stroke: gray;
	stroke-width: 1;
}

.IOActionConnecting {
	fill: orange;
	stroke: blue;
	stroke-width: 2;
}

.IOActionOver {
	fill: orange;
	stroke: blue;
	stroke-width: 2;
}

.IOActionSelected {
	fill: yellow;
	stroke: blue;
	stroke-width: 2;
}

.DTLAction {
	fill: none;
	stroke: green;
	stroke-width: 1.5;
	stroke-linejoin: round;
	opacity: 0.7;
}

.DTLActionRelated {
	fill: none;
	stroke: green;
	stroke-width: 3;
	stroke-linejoin: round;
}

.DTLActionSelected {
	fill: none;
	stroke: blue;
	stroke-width: 3;
	stroke-linejoin: round;
}

.DTLCircle {
	fill: white;
}

.DTLCircleSelected {
	fill: yellow;
}

.DTLCircleRelated {
	fill: yellow;
}

.StatusBar {
	fill: blue;
	stroke: black;
	stroke-width: 1;
	filter: url(#dropShadow);
}

.StatusText {
  pointer-events: none;
  font-size: 14;
  fill: white;
  stroke: none;
}

.Title {
  pointer-events: none;
  font-size: 20;
  fill: black;
  stroke: none;
}

.Error {
  pointer-events: none;
  font-size: 18;
  fill: red;
  stroke: none;
}

.TitleSmall {
  pointer-events: none;
  font-size: 14;
  fill: blue;
  stroke: none;
}

.TitleType {
  pointer-events: none;
  font-size: 14;
  fill: green;
  stroke: none;
}

.PropName {
  pointer-events: none;
  font-size: 14;
  fill: black;
  stroke: none;
}
  
.RubberBand {
  stroke: black;
  fill: none;
  stroke-width: 3;
  stroke-opacity: 0.5;
  stroke-linejoin: round;
}
	>
]]></Implementation>
</Method>

<Method name="DrawDefs">
<Description><![CDATA[
Draw defs section]]></Description>
<ClassMethod>1</ClassMethod>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
	// localized menu items
	Set menuZoom			= $$$TextHTML("Zoom")
	Set menuAddAction		= $$$TextHTML("Add Action")
	Set menuEditAction		= $$$TextHTML("Edit Action")
	Set menuRemoveAction	= $$$TextHTML("Remove Action")
	Set menuRemoveAll		= $$$TextHTML("Remove All")
	Set menuSetParent		= $$$TextHTML("Set Parent Action")
	Set menuClearParent		= $$$TextHTML("Clear Parent Action")
	Set menuFind			= $$$TextHTML("Find...")
	Set menuFindAgain		= $$$TextHTML("Find Again")
	Set menuAbout			= $$$TextHTML("About SVG Viewer...")
	Set menuTestXForm		= $$$TextHTML("Test Transformation")

	&html<
<!-- defs -->
<defs>

<!-- context menu -->
<menu id="CanvasMenu" xmlns="http://mynamepsace.com/">
    <header>DTL Editor Menu</header>
    <menu id="menu_zoom">
	 <header>#(menuZoom)#</header>
	 <item id="menu_zoom_33" onactivate="setZoom(33);">33%</item>
	 <item id="menu_zoom_50" onactivate="setZoom(50);">50%</item>
	 <item id="menu_zoom_75" onactivate="setZoom(75);">75%</item>
	 <item id="menu_zoom_88" onactivate="setZoom(88);">88%</item>
	 <item checked="yes" id="menu_zoom_100" onactivate="setZoom(100);">100%</item>
	 <item id="menu_zoom_110" onactivate="setZoom(110);">110%</item>
	 <item id="menu_zoom_125" onactivate="setZoom(125);">125%</item>
	 <item id="menu_zoom_150" onactivate="setZoom(150);">150%</item>
	 <item id="menu_zoom_200" onactivate="setZoom(200);">200%</item>
    </menu>
    <separator/>
    <menu id="menu_AddAction">
	 <header>#(menuAddAction)#</header>
	 <item enabled="yes" id="menu_assign" onactivate="addNewAction('assign');">assign</item>
	 <item enabled="yes" id="menu_transform" onactivate="addNewAction('transform');">transform</item>
	 <item enabled="yes" id="menu_if" onactivate="addNewAction('if');">if</item>
	 <item enabled="yes" id="menu_foreach" onactivate="addNewAction('foreach');">foreach</item>
    </menu>
	 <item enabled="no" id="menu_Edit" onactivate="editCurrAction();">#(menuEditAction)#</item>
    <separator/>
	 <item enabled="no" id="menu_Remove" onactivate="removeCurrAction();">#(menuRemoveAction)#</item>
	 <item enabled="no" id="menu_RemoveAll" onactivate="removeAllActions();">#(menuRemoveAll)#</item>
    <separator/>
	 <item enabled="no" id="menu_SetParent" onactivate="selectCurrentParent();">#(menuSetParent)#</item>
	 <item enabled="no" id="menu_ClearParent" onactivate="clearCurrentParent();">#(menuClearParent)#</item>
    <separator/>
	<item action="Find" id="Find">#(menuFind)#</item>
	<item action="FindAgain" id="FindAgain">#(menuFindAgain)#</item>
    <separator/>
	<item enabled="yes" onactivate="document_testTransform(theTransform);">#(menuTestXForm)#</item>
    <separator/>
    <item action="About">#(menuAbout)#</item>
</menu>

<!-- filters -->
<filter id="dropShadow" x="-2%" y="-2%" height="120%" width="120%">
<feGaussianBlur in="SourceAlpha" stdDeviation="3" />
<feOffset dx="4px" dy="4px" result="offsetBlur" />
<feMerge>
	<feMergeNode in="offsetBlur"/>
	<feMergeNode in="SourceGraphic"/>
</feMerge>
</filter>

</defs>
	>
]]></Implementation>
</Method>

<Method name="OnDrawScript">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	// create array of localized text messages

	// validation
	Set msgText("RemoveAction")			= $ZCVT($$$LocalizeText("EnsDTL","RemoveAction","Do you wish to remove the selected action?"),"O","JS")
	Set msgText("RemoveAll")			= $ZCVT($$$LocalizeText("EnsDTL","RemoveAll","Do you wish to remove all actions?"),"O","JS")
	Set msgText("NoTarget")				= $ZCVT($$$LocalizeText("EnsDTL","NoTarget","Please select a target property before adding a new assign action."),"O","JS")
	Set msgText("NoSource")				= $ZCVT($$$LocalizeText("EnsDTL","NoSource","Please select a source property before adding a new %1 action."),"O","JS")
	Set msgText("NoCollection")			= $ZCVT($$$LocalizeText("EnsDTL","NoCollection","Please select a source collection property before adding a new %1 action."),"O","JS")

	// script
	//Write "<script language=""text/javascript""><![CDATA[",!

	&js<
// array of localized messages
var msgText = new Object();
	>

	// write out JavaScript version of text messages
	Set tKey = $O(msgText(""))
	While (tKey '= "") {
		Write "msgText['",tKey,"'] = '",msgText(tKey),"';",!
		Set tKey = $O(msgText(tKey))
	}

	&js<
// localized text utility function
// p1 and p2 are substituted for %1 and %2 in string resource.
function getLocalText(id,p1,p2)
{
	var text;

	if (msgText[id]) {
		text = msgText[id];

		// substitutions
		if (p1) {
			text = text.replace(/%1/g,p1);
		}
		if (p2) {
			text = text.replace(/%2/g,p2);
		}
	}
	else {
		text = "Missing string resource: " + id;
	}

	return text;
}
	>

	//!!!Write "]]]]><![CDATA[></script>>"
]]></Implementation>
</Method>

<Method name="OnDrawCanvas">
<Description><![CDATA[
Draw main svg canvas]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	// messages
	Set msgTarget = "Target"
	Set msgNoTarget = "no target object"
	Set msgSource = "Source"
	Set msgNoSource = "no source object"
	Set msgLoading = "Loading..."

	&html<
<!-- canvas -->
<svg id="canvasSVG" x="0" y="0" width="100%" height="100%">
<g id="canvas" 
	onmousedown="canvasMouseDown(evt);"
	onmousemove="canvasMouseMove(evt);"
	onmouseup="canvasMouseUp(evt);"
	onmouseover="canvasMouseOver(evt);"
>

<rect class="canvas" x="0" y="0" width="100%" height="100%" />

<svg x="0" y="0" width="50%" height="50">
<text class="TitleSmall" x="50%" y="12" text-anchor="middle">#(msgSource)#</text>
<text class="Title"  id="sourceName" x="50%" y="34" text-anchor="middle">&lt;#(msgNoSource)#&gt;</text>
<text class="TitleType" id="sourceType" x="50%" y="48" text-anchor="middle"> </text>

<rect class="scrollBtnBg" rx="2" x="5" y="5" width="12" height="40" transform="translate(24,0)" onclick="canvas_scrollSource();" onmouseover="evt.getTarget().setAttribute('class','scrollBtnBgHover');" onmouseout="evt.getTarget().setAttribute('class','scrollBtnBg');"/>
<polygon class="scrollBtn" points="5,6 15,12 5,18" transform="translate(25,26) rotate(90,10,12)" onclick="canvas_scrollSource(50);" onmouseover="evt.getTarget().setAttribute('class','scrollBtnHover');" onmouseout="evt.getTarget().setAttribute('class','scrollBtn');"/>
<polygon class="scrollBtn" points="5,6 15,12 5,18" transform="translate(25,0) rotate(-90,10,12)" onclick="canvas_scrollSource(-50);" onmouseover="evt.getTarget().setAttribute('class','scrollBtnHover');" onmouseout="evt.getTarget().setAttribute('class','scrollBtn');"/>
</svg>

<svg x="50%" y="0" width="50%" height="50">
<text class="TitleSmall" x="50%" y="12" text-anchor="middle">#(msgTarget)#</text>
<text class="Title" id="targetName" x="50%" y="34" text-anchor="middle">&lt;#(msgNoTarget)#&gt;</text>
<text class="TitleType" id="targetType" x="50%" y="48" text-anchor="middle"> </text>

<rect class="scrollBtnBg" rx="2" x="5" y="5" width="12" height="40" transform="translate(24,0)" onclick="canvas_scrollTarget();" onmouseover="evt.getTarget().setAttribute('class','scrollBtnBgHover');" onmouseout="evt.getTarget().setAttribute('class','scrollBtnBg');"/>
<polygon class="scrollBtn" points="5,6 15,12 5,18" transform="translate(25,26) rotate(90,10,12)" onclick="canvas_scrollTarget(50);" onmouseover="evt.getTarget().setAttribute('class','scrollBtnHover');" onmouseout="evt.getTarget().setAttribute('class','scrollBtn');"/>
<polygon class="scrollBtn" points="5,6 15,12 5,18" transform="translate(25,0) rotate(-90,10,12)" onclick="canvas_scrollTarget(-50);" onmouseover="evt.getTarget().setAttribute('class','scrollBtnHover');" onmouseout="evt.getTarget().setAttribute('class','scrollBtn');"/>
</svg>

<line class="TitleLine" x1="0" y1="52" x2="100%" y2="52" />

<!-- clipping frame -->
<svg id="clippingFrame" x="0" y="52" width="100%" height="100%" >
<g transform="translate(0,-52)">

<!-- dividing spine -->
<rect class="Spine" x="480" y="0" width="40" height="100%" />

<!-- group to contain connectors -->
<svg id="Spine" x="0" y="0" width="100%" height="100%" />

<!-- target box -->		
<svg id="targetFrame" x="0" y="0" width="100%" height="100%" >
<rect class="container" id="targetBox" x="0" y="50" width="100%" height="100%" />
</svg>

<!-- source box -->		
<svg id="sourceFrame" x="0" y="0" width="50%" height="100%">
<rect class="container" id="sourceBox" x="0" y="50" width="100%" height="100%"/>
</svg>

<!-- /clipping frame -->
</g>
</svg> 

</g>

<!-- status bar -->
<g id="StatusBar" style="display: none;">
<rect class="StatusBar" x="0" y="0" width="100" height="20" rx="2" />
<text class="StatusText" x="3" y="16" text-anchor="left">#(msgLoading)#</text>
</g>

</svg>
>
]]></Implementation>
</Method>
</Class>
</Export>