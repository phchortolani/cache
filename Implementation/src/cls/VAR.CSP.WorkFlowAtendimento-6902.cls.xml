<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.WorkFlowAtendimento">
<ClassType/>
<IncludeCode>VARConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	set job = %session.SessionId
	do ..inicializa()
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set top = take
	if top<=0 set top = 1
	set contador = 0
	set SQL = " SELECT Count(*) as totalCount,CodigodoCID, DescricaoCompleta,DescricaoResumida,Categoria FROM VARCID where company = 0 "
	if codigo '= "" set SQL = SQL_" and CodigodoCID = '"_codigo_"' "
	e  if searchValue'="" set SQL = SQL_" and (%upper(CodigodoCID) like %upper('%"_searchValue_"%') or %upper(DescricaoCompleta) like %upper('%"_searchValue_"%'))"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set totalCount=rs.%Get("totalCount")
		set ID=rs.%Get("CodigodoCID")
		set DescR=rs.%Get("DescricaoResumida")
		set Name=rs.%Get("DescricaoCompleta")
		if Name="" set Name = DescR
		set Categoria=rs.%Get("Categoria")
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		;
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		set linha.Categoria = descCat
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetCIDDescricao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	kill ^mtemp.VARWorkFlowEstadiamento(job)
	kill ^mtemp.VARWorkFlowPontuacao(job)
	kill ^mtemp.VARWorkFlowDiagnostico
	;
	set codigo = $get(%request.Data("codigo",1))
	set desc = ""
	if codigo'=""{
		set obj = $get(^VARWorkFlowCID(0,codigo,1))
		set desc = $$$VARWorkFlowCIDDescricao(obj)
		;
		set estadiamento = ""
		for {
			set estadiamento = $order(^VARWorkFlowEstadiamento(YM,codigo,estadiamento)) quit:estadiamento=""
			set ^mtemp.VARWorkFlowEstadiamento(job,estadiamento) = $get(^VARWorkFlowEstadiamento(YM,codigo,estadiamento,1))
			set estagio = ""
			for {
				set estagio = $order(^VARWorkFlowEstadiamentoEstagio(YM,codigo,estadiamento,estagio)) quit:estagio=""
				set ^mtemp.VARWorkFlowEstadiamento(job,estadiamento,estagio) = $get(^VARWorkFlowEstadiamentoEstagio(YM,codigo,estadiamento,estagio,1))
				set condicao = ""
				for {
					set condicao = $order(^VARWorkFlowEstEstagioC(YM,codigo,estadiamento,estagio,condicao)) quit:condicao=""
					set nseq = ""
					for {
						set nseq = $order(^VARWorkFlowEstEstagioC(YM,codigo,estadiamento,estagio,condicao,nseq)) quit:nseq=""
						set ^mtemp.VARWorkFlowEstadiamento(job,estadiamento,estagio,condicao,nseq) = $get(^VARWorkFlowEstEstagioC(YM,codigo,estadiamento,estagio,condicao,nseq,1))
					}
				}
			}
		}
		set estadiamento = ""
		for {
			set estadiamento = $order(^VARWorkFlowEstPont(YM,codigo,estadiamento)) quit:estadiamento=""
			set pontuacao = ""
			for {
				set pontuacao = $order(^VARWorkFlowEstPont(YM,codigo,estadiamento,pontuacao)) quit:pontuacao=""
				set ^mtemp.VARWorkFlowPontuacao(job,estadiamento,pontuacao) = $get(^VARWorkFlowEstPont(YM,codigo,estadiamento,pontuacao,1))
				set condicao = ""
				for {
					set condicao = $order(^VARWorkFlowEstPontCondicao(YM,codigo,estadiamento,pontuacao,condicao)) quit:condicao=""
					set nseq = ""
					for {
						set nseq = $order(^VARWorkFlowEstPontCondicao(YM,codigo,estadiamento,pontuacao,condicao,nseq)) quit:nseq=""
						set ^mtemp.VARWorkFlowPontuacao(job,estadiamento,pontuacao,condicao,nseq) = $get(^VARWorkFlowEstPontCondicao(YM,codigo,estadiamento,pontuacao,condicao,nseq,1))
					}
				}
			}
		}
		Set codDiagnostico = ""
		For {
			Set codDiagnostico = $Order(^VARWorkFlowDiagnostico(YM, codigo, codDiagnostico))
			Quit:codDiagnostico=""
			Set ^mtemp.VARWorkFlowDiagnostico(job, codDiagnostico) = ^VARWorkFlowDiagnostico(YM, codigo, codDiagnostico, 1)
			Set sequencia = ""
			For {
				Set sequencia = $Order(^VARWorkFlowDiagnosticoSeq(YM, codigo, codDiagnostico, sequencia))
				Quit:sequencia=""
				Set ^mtemp.VARWorkFlowDiagnostico(job, codDiagnostico, sequencia) = ^VARWorkFlowDiagnosticoSeq(YM, codigo, codDiagnostico, sequencia, 1)
				Set seqCondicao = ""
				For {
					Set seqCondicao = $Order(^VARWorkFlowDiagnosticoSeqCond(YM, codigo, codDiagnostico, sequencia, seqCondicao))
					Quit:seqCondicao=""
					Set ^mtemp.VARWorkFlowDiagnostico(job, codDiagnostico, sequencia, seqCondicao) = ^VARWorkFlowDiagnosticoSeqCond(YM, codigo, codDiagnostico, sequencia, seqCondicao, 1)
				}
			}		
		}		
	}
	set retorno = {}
	set retorno.desc = desc
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetTipos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set SQL = " SELECT SearchWord, Text FROM VARPARA where company = 0 and %upper(language1)='PT' and %upper(parametername)='WORKFLOWTIPOS' "
	set SQL = SQL_" order by Text"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID=rs.%Get("SearchWord")
		set Text=rs.%Get("Text")
		set linha = {}
		set linha.Codigo 	= ID
		set linha.Descricao = Text
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetValores">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	set top = take
	if top<=0 set top = 1
	set contador = 0
	set SQL = " SELECT SearchWord, Text FROM VARPARA where company = 0 and %upper(language1)='PT' and %upper(parametername)='WORKFLOWVALORES' "
	if codigo '= "" set SQL = SQL_" and SearchWord = '"_codigo_"' "
	e  if searchValue'="" set SQL = SQL_" and %upper(Text) like %upper('%"_searchValue_"%')"
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set ID=rs.%Get("SearchWord")
		set Text=rs.%Get("Text")
		set linha = {}
		set linha.Codigo 	= ID
		set linha.Descricao = Text
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetWorkFlows">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set sequencia 	= $get(%request.Data("sequencia",1))
	set numerico	= $get(%request.Data("numerico",1))
	;
	set contador = 0
	if sequencia'=""{
		set SQL = "Select * FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Sequencia) = '"_sequencia_"'"
	}else{
		set SQL = "Select * FROM VARWorkFlowPEP "
		set SQL = SQL_" where company = 0 and %upper(CodigodoCID)='"_cid_"' "
		if numerico'="" {
			set SQL = SQL_" and TipodeWorkflow in (3,6,12) "
		}
		set SQL = SQL_" order by SequenciadeExibicao,Sequencia"
	}
	;
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array=##class(%ListOfDataTypes).%New()
	;set array = []
	set Total = 0
	set ^zzsilmar($now()) = "inicio"
	while(rs.%Next()){
		set Sequencia		= rs.%Get("Sequencia")
		set Nome			= rs.%Get("Nome")
		set Predecessor		= rs.%Get("Predecessor")
		set SequenciadeExibicao= rs.%Get("SequenciadeExibicao")
		set TipodeWorkflow	= rs.%Get("TipodeWorkflow")
		set MenorPermitido	= rs.%Get("NumericoMenor")
		set MaiorPermitido	= rs.%Get("NumericoMaior")
		set CasasDecimais	= rs.%Get("NumericoCasasDecimais")
		set ComposicaoExames= rs.%Get("ComposicaoValoresExames")
		set AlertaResultadoMenorQue = rs.%Get("AlertaResultadoMenorQue")
		set AlertaResultadoMaiorQue = rs.%Get("AlertaResultadoMaiorQue")
		set TextoAlturadoCampo = rs.%Get("TextoAlturadoCampo")
		set TextoMaximodeCaracteres = rs.%Get("TextoMaximodeCaracteres")
		set ExamesUnidadedeExibicao = rs.%Get("ExamesUnidadedeExibicao")
		set Opcoes = rs.%Get("Opcoes")
		set PermitirSelecionarMaisQue = rs.%Get("PermitirSelecionarMaisQue")
		set grupo = rs.%Get("GrupodeExibicaonaTela")
		set RotulodosCamposTexto = rs.%Get("RotulodosCamposTexto")
		set ValidacaoComparador = rs.%Get("ValidacaoComparador")
		set ValidacaoTipodeReferenci = rs.%Get("ValidacaoTipodeReferenci")
		set ValidacaoValordeReferenc = rs.%Get("ValidacaoValordeReferenc")
		set ValidacaoLegenda = rs.%Get("ValidacaoLegenda")
		set OpcaodoPredecessor = rs.%Get("OpcaodoPredecessor")
		set RespostaPadrao = rs.%Get("RespostaPadrao")
		set Icone = rs.%Get("Icone")
		set informacaoPermanente = +rs.%Get("InformacaoPermanente")
		set exibirCampo = +rs.%Get("ExibirCampo")
		set somenteTexto = +rs.%Get("SomenteTexto")
		;
		set PredecessorTree = Predecessor
		set linha=##class(%ZEN.proxyObject).%New()
		;set linha = {}
		set linha.Codigo = Sequencia
		set linha.Descricao = "("_Sequencia_") "_Nome
		set:PredecessorTree'="" linha.categoryId = PredecessorTree
		;
		if TipodeWorkflow=5||(TipodeWorkflow=12){
			set NomeExame = ""
			for i=1:1:$length(Nome,";"){
				if $piece(Nome,";",i)="" continue
				if NomeExame'="" set NomeExame = NomeExame_"/"
				set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(Nome,";",i),1))
				set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
				set NomeExame = NomeExame_descExame
			}
			set NomeExame = "Exames: "_NomeExame
			set linha.Descricao = "("_Sequencia_") "_NomeExame
		}
		if TipodeWorkflow=7{
			set codImagem = $piece(Nome,";",1)
			set codArea = $piece(Nome,";",2)
			set descImagem = $piece($get(^VARWorkFlowImagens(0,codImagem,1)),"~",1)
			set descArea = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1) '= "") {
				set descArea = $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			}
			set linha.Descricao = "("_Sequencia_") "_descImagem_" - "_descArea
		}
		;
		set dxForm=##class(%ZEN.proxyObject).%New()
		;set dxForm = {}
		set dxForm.id = Sequencia
		set dxForm.predecessor = Predecessor
		if OpcaodoPredecessor'="" set dxForm.predecessor = Predecessor_";"_OpcaodoPredecessor
		set dxForm.sequ = SequenciadeExibicao
		set dxForm.tipo = TipodeWorkflow
		if TipodeWorkflow=5||(TipodeWorkflow=12){
			set exame=[]
			for i=1:1:$length(Nome,";"){
				if $piece(Nome,";",i)="" continue
				do exame.%Push($piece(Nome,";",i))
			}
			set dxForm.exame = exame
		}elseif TipodeWorkflow=7{
			set dxForm.imagem = $piece(Nome,";",1)
			set dxForm.imagemArea = $piece(Nome,";",2)
			set dxForm.somenteTexto = +somenteTexto
		}else{
			set dxForm.nome = Nome
		}
		set dxForm.menorPermitido	= MenorPermitido
		set dxForm.maiorPermitido	= MaiorPermitido
		set dxForm.casasDecimais	= CasasDecimais
		set dxForm.ResultadoMenorQue = AlertaResultadoMenorQue
		set dxForm.ResultadoMaiorQue = AlertaResultadoMaiorQue
		set dxForm.composicao		= ComposicaoExames
		set dxForm.maximoDeCaracteres = TextoMaximodeCaracteres
		set dxForm.alturaDoCampo = TextoAlturadoCampo
		set dxForm.unidadeExibicao = ExamesUnidadedeExibicao
		set dxForm.permiteSelecionarMaisQueUm = PermitirSelecionarMaisQue
		set dxForm.opcoes = Opcoes
		set dxForm.grupo = grupo
		set dxForm.rotuloText = RotulodosCamposTexto
		set dxForm.valorCondicao = ValidacaoComparador
		set dxForm.tipoReferencia = ValidacaoTipodeReferenci
		set dxForm.legendaCondicao = ValidacaoLegenda
		set dxForm.respPadrao = RespostaPadrao
		set dxForm.respPadrao2 = RespostaPadrao
		set dxForm.icone = Icone
		set dxForm.informacaoPermanente = informacaoPermanente
		set dxForm.exibirCampo = exibirCampo
		if ValidacaoTipodeReferenci=1{
			set dxForm.numericoReferencia = ValidacaoValordeReferenc
		}else{
			set camposRef=[]
			for i=1:1:$length(ValidacaoValordeReferenc,";"){
				if $piece(ValidacaoValordeReferenc,";",i)="" continue
				do camposRef.%Push($piece(ValidacaoValordeReferenc,";",i))
			}
			set dxForm.camposReferencia = camposRef
		}
		;
		set linha.dxForm = dxForm
		do array.Insert(linha)
	}
	quit ##class(%ZEN.Auxiliary.jsonProvider).%ObjectToJSON(array,,,"aceloqtws")
	quit]]></Implementation>
</Method>

<Method name="GetWorkFlowsCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set nseq 	= $get(%request.Data("nseq",1))
	set SQL = "Select * FROM VARWorkFlowPEP "
	set SQL = SQL_" where company = 0 and %upper(CodigodoCID)='"_cid_"' "
	set SQL = SQL_" and TipodeWorkFlow in (2,3,11,5,12,9)"
	set SQL = SQL_" order by SequenciadeExibicao,Sequencia"
	;
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set Sequencia		= rs.%Get("Sequencia")
		set Nome			= rs.%Get("Nome")
		set TipodeWorkflow	= rs.%Get("TipodeWorkflow")
		set Predecessor		= rs.%Get("Predecessor")
		set Opcoes			= rs.%Get("Opcoes")
		set ComposicaoValoresExames = rs.%Get("ComposicaoValoresExames")
		set OpcaodoPredecessor = rs.%Get("OpcaodoPredecessor")
		;
		if Predecessor'=""{
			if OpcaodoPredecessor'="" set Predecessor = Predecessor_";"_OpcaodoPredecessor
		}
		if Opcoes'=""{
			set tituloCompleto = ..recTituloCompleto(cid,Sequencia)
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set linha = {}
				set linha.codigo = Sequencia_";"_+cont
				set linha.descricao = tituloCompleto_" - "_valorSub
				set:Predecessor'="" linha.categoryId = Predecessor
				set linha.TipodeWorkflow = TipodeWorkflow
				do array.%Push(linha)
			}
			continue
		}
		if ComposicaoValoresExames=9{
			set tituloCompleto = ..recTituloCompleto(cid,Sequencia)
			for cont=1,0,2{
				set valorSub = $select(cont=1:"Mutado",cont=2:"Não Mutado",1:"Não Fez o Teste")
				if valorSub="" continue
				set linha = {}
				set linha.codigo = Sequencia_";"_+cont
				set linha.descricao = tituloCompleto_" - "_valorSub
				set:Predecessor'="" linha.categoryId = Predecessor
				set linha.TipodeWorkflow = TipodeWorkflow
				do array.%Push(linha)
			}
			continue			
		}
		set linha = {}
		set linha.codigo = Sequencia
		set tituloCompleto = ..recTituloCompleto(cid,Sequencia)
		set linha.descricao = tituloCompleto
		set:Predecessor'="" linha.categoryId = Predecessor
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recSugestoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set array=[]
	set codTrat = ""
	for {
		set codTrat = $order(^VARWorkFlowTerapia(YM,cid,codTrat)) quit:codTrat=""
		set obj = $get(^VARPARA(YM,"TIPODETRATAMENTOPEP",SPRACHE,codTrat,1))
		set tratamento = $$$VARPARAText(obj)
		set codCate = ""
		for {
			set codCate = $order(^VARWorkFlowTerapia(YM,cid,codTrat,codCate)) quit:codCate=""
			set obj = $get(^VARWorkFlowTerapia(YM,cid,codTrat,codCate,1))
			set descricao = $$$VARWorkFlowTerapiaDescricaodaTerapia(obj)
			set linha = {}
			set linha.chave = codTrat_";"_codCate
			set linha.tratamento = tratamento
			set linha.descricao = codCate_" - "_descricao
			do array.%Push(linha)
			
		}
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recTerapiaCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set codTrat	= $get(%request.Data("codTrat",1))
	set codCate	= $get(%request.Data("codCate",1))
	set array=[]
	set cond = ""
	for {
		set cond = $order(^VARWorkFlowTerapiaCondicoes(YM,cid,codTrat,codCate,cond)) quit:cond=""
		set linha = {}
		set linha.chave = codTrat_";"_codCate_";"_cond
		set linha.condicao = cond
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recTerapiaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set codTrat	= $get(%request.Data("codTrat",1))
	set codCate	= $get(%request.Data("codCate",1))
	set array=[]
	set tera = ""
	for {
		set tera = $order(^VARWorkFlowTerapiaMedicacao(YM,cid,codTrat,codCate,tera)) quit:tera=""
		set obj = $get(^VARWorkFlowTerapiaMedicacao(YM,cid,codTrat,codCate,tera,1))
		set descricao = $$$VARWorkFlowTerapiaMedicacaoDescricaodoTratamento(obj)
		set regime = $$$VARWorkFlowTerapiaMedicacaoRegimeTerapeutico(obj)
		set obj = $get(^VARPARA(YM,"REGIMETERAPEUTICO",SPRACHE,regime,1))
		set regime = $$$VARPARAText(obj)
		set linha = {}
		set linha.chave = codTrat_";"_codCate_";"_tera
		set linha.sugestao = descricao
		set linha.regime = regime
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recLinhasTratamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set array = []
	set query = "Select * from VARPARA where ParameterName = 'TIPODETRATAMENTOPEP' and Language1 = '"_SPRACHE_"' order by SearchWord"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set linha={}
		set linha.Codigo = rs.%Get("SearchWord")
		set linha.Descricao = "("_linha.Codigo_") "_rs.%Get("Text")
		do array.%Push(linha)
	}
	write array.%ToJSON()]]></Implementation>
</Method>

<Method name="getSugestao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid		= $get(%request.Data("cid",1))
	set chave	= $get(%request.Data("chave",1))
	set retorno	= {}
	set retorno.codCate = "+"
	if chave'=""{
		set codTrat = $piece(chave,";",1)
		set codCate = $piece(chave,";",2)
		set obj = $get(^VARWorkFlowTerapia(YM,cid,codTrat,codCate,1))
		set descricao = $$$VARWorkFlowTerapiaDescricaodaTerapia(obj)
		set retorno.codTrat = codTrat
		set retorno.codCate = codCate
		set retorno.descricao = descricao
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetEstadiamentosCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set array=[]
	set codEst = ""
	for {
		set codEst = $order(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst)) quit:codEst=""
		set estadiamento = $piece($get(^VARWorkFlowEstadiamento(YM,cid,codEst,1)),"~",1)
		set codEstagio = ""
		for {
			set codEstagio = $order(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst,codEstagio)) quit:codEstagio=""
			set estagio = $piece($get(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst,codEstagio,1)),"~",1)
			set linha = {}
			set linha.codigo = codEst_";"_codEstagio
			set linha.descricao = estadiamento_" - "_estagio
			do array.%Push(linha)
			
		}
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetPacientesCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set array=[]
	set linha = {}
	set linha.codigo = 1
	set linha.descricao = "Idade"
	do array.%Push(linha)
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetPontuadores">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set codEst	= $get(%request.Data("codEstadiamento",1))
	set array=[]
	set pontuacao = ""
	for {
		set pontuacao = $order(^VARWorkFlowEstPont(YM,cid,codEst,pontuacao)) quit:pontuacao=""
		set desc = $piece(^(pontuacao,1),"~",1)
		set linha = {}
		set linha.codigo = pontuacao
		set linha.descricao = desc
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetPredecessor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set idAtual = $get(%request.Data("idAtual",1))
	set codigo 	= $get(%request.Data("codigo",1))
	set contador = 0
	
	set SQL = " SELECT Sequencia, Nome,TipodeWorkflow,Opcoes,Predecessor,OpcaodoPredecessor FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and (TipodeWorkflow in (1,2,7,8,9,10,11,15,18,19,21) or (TipodeWorkflow in (5,12) and ComposicaoValoresExames=3))"
	;if idAtual '="" set SQL = SQL_" and Sequencia <> '"_idAtual_"' "
	set SQL = SQL_" order by SequenciadeExibicao,Sequencia "
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set Sequencia=rs.%Get("Sequencia")
		set Nome=rs.%Get("Nome")
		set TipodeWorkflow=rs.%Get("TipodeWorkflow")
		set Opcoes = rs.%Get("Opcoes")
		set Predecessor = rs.%Get("Predecessor")
		set OpcaodoPredecessor = rs.%Get("OpcaodoPredecessor")
		if Predecessor'=""{
			if OpcaodoPredecessor'="" set Predecessor = Predecessor_";"_OpcaodoPredecessor
		}
		if TipodeWorkflow=5||(TipodeWorkflow=12){
			set NomeExame = ""
			for i=1:1:$length(Nome,";"){
				if $piece(Nome,";",i)="" continue
				if NomeExame'="" set NomeExame = NomeExame_"/"
				set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(Nome,";",i),1))
				set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
				set NomeExame = NomeExame_descExame
			}
			;
			set linha = {}
			set linha.Codigo = Sequencia_";1"
			set linha.Descricao = "("_Sequencia_") "_NomeExame_" - Positivo"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)
			;
			set linha = {}
			set linha.Codigo = Sequencia_";0"
			set linha.Descricao = "("_Sequencia_") "_NomeExame_" - Negativo"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)
			continue
		}

		if TipodeWorkflow=2||(TipodeWorkflow=11)||(TipodeWorkflow=21){
			set linha = {}
			set linha.Codigo = Sequencia_";1"
			set linha.Descricao = "("_Sequencia_") "_Nome_" - Sim"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)
			;			
			set linha = {}
			set linha.Codigo = Sequencia_";0"
			set linha.Descricao = "("_Sequencia_") "_Nome_" - Não"
			set linha.TipodeWorkflow = TipodeWorkflow
			set:Predecessor'="" linha.categoryId = Predecessor
			do array.%Push(linha)

			continue
		}
		if TipodeWorkflow=9{
			for cont=1:1:$length(Opcoes,"|"){
				set valorSub = $piece(Opcoes,"|",cont)
				if valorSub="" continue
				set linha = {}
				set linha.Codigo = Sequencia_";"_+cont
				set linha.Descricao = "("_Sequencia_") "_Nome_" - "_valorSub
				set linha.TipodeWorkflow = TipodeWorkflow
				set:Predecessor'="" linha.categoryId = Predecessor
				do array.%Push(linha)
			}
			continue
		}
		set linha = {}
		set linha.Codigo = Sequencia
		set linha.Descricao = "("_Sequencia_") "_Nome
		set linha.TipodeWorkflow = TipodeWorkflow
		set:Predecessor'="" linha.categoryId = Predecessor
		;
		;
		if TipodeWorkflow=7{
			set codImagem = $piece(Nome,";",1)
			set codArea = $piece(Nome,";",2)
			set descImagem = $piece($get(^VARWorkFlowImagens(0,codImagem,1)),"~",1)
			set descArea = $piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1) '= "") {
				set descArea = $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			}
			set linha.Descricao = "("_Sequencia_") "_descImagem_" - "_descArea
		}
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set formulario = $get(%request.Data("formulario",1))
	set geral = $get(%request.Data("geral",1))
	set formObj = [].%FromJSON(formulario)
	set geralObj = [].%FromJSON(geral)
	try {
		tstart
		if $isObject(geralObj.predecessor){
			if geralObj.predecessor.%Size()>0{
				set predecessor = geralObj.predecessor.%Pop()
			}
			set geralObj.predecessor = predecessor
			
		}
		set ^zzVARWorkFlowTemp(0,YBED,1) = formObj.cid
		set cid 			= formObj.cid
		set descricao 		= formObj.descricao
		set idSeq 			= geralObj.id
		set nome 			= geralObj.nome
		set predecessor		= geralObj.predecessor
		set tipo			= geralObj.tipo
		set sequ			= geralObj.sequ
		set menorPermitido	= geralObj.menorPermitido
		set maiorPermitido	= geralObj.maiorPermitido
		set casasDecimais	= geralObj.casasDecimais
		set imagem			= geralObj.imagem
		set imagemArea		= geralObj.imagemArea
		set alertMenor		= geralObj.ResultadoMenorQue
		set alertMaior		= geralObj.ResultadoMaiorQue
		set composicaoExame = geralObj.composicao
		set maximoDeCaracteres = geralObj.maximoDeCaracteres
		set alturaDoCampo = geralObj.alturaDoCampo
		set unidadeExibicao = geralObj.unidadeExibicao
		set opcoes = geralObj.opcoes
		set permiteSelecionarMaisQueUm = geralObj.permiteSelecionarMaisQueUm
		set grupo = geralObj.grupo
		set rotuloText = geralObj.rotuloText
		set valorCondicao = geralObj.valorCondicao
		set tipoReferencia = geralObj.tipoReferencia
		set numericoReferencia = geralObj.numericoReferencia
		set camposReferencia = geralObj.camposReferencia
		set legendaCondicao = geralObj.legendaCondicao
		set respPadrao = geralObj.respPadrao
		set respPadrao2 = geralObj.respPadrao2
		set icone = geralObj.icone
		set informacaoPermanente = +geralObj.informacaoPermanente
		set exibirCampo = +geralObj.exibirCampo
		set somenteTexto = +geralObj.somenteTexto
		
		;
		set objVARWorkFlowCID = $get(^VARWorkFlowCID(YM,cid,1))
		set $$$VARWorkFlowCIDDescricao(objVARWorkFlowCID) = descricao
		set ret = $$$Save("VARWorkFlowCID",cid,objVARWorkFlowCID,1)
		;
		if '$$$ISERR(ret){
			if idSeq="" {
				set idSeq = $order(^VARWorkFlowPEP(YM,cid,""),-1)+1
			}
			if sequ="" set sequ = idSeq*10
			set objVARWorkFlowPEP = $get(^VARWorkFlowPEP(YM,cid,idSeq,1))
			// Se não for tipo Exame , limpa a composição
			if tipo'=5,tipo'=12 {
				set composicaoExame = ""
			}
			set $$$VARWorkFlowPEPIcone(objVARWorkFlowPEP) = icone
			if tipo=1||(tipo=15)||(tipo=18){
				set $$$VARWorkFlowPEPIcone(objVARWorkFlowPEP) = icone
			}
			//
			// Para campos númericos
			// Tipo 3 - Numerico
			// Composicao 1 - Numerico
			if (tipo=3||(composicaoExame=1)||(composicaoExame=2)){
				set $$$VARWorkFlowPEPNumericoMenor(objVARWorkFlowPEP) = menorPermitido
				set $$$VARWorkFlowPEPNumericoMaior(objVARWorkFlowPEP) = maiorPermitido
				set $$$VARWorkFlowPEPNumericoCasasDecimais(objVARWorkFlowPEP) = casasDecimais
				set $$$VARWorkFlowPEPAlertaResultadoMenorQue(objVARWorkFlowPEP) = alertMenor
				set $$$VARWorkFlowPEPAlertaResultadoMaiorQue(objVARWorkFlowPEP) = alertMaior
			}else{
				set $$$VARWorkFlowPEPNumericoMenor(objVARWorkFlowPEP) = ""
				set $$$VARWorkFlowPEPNumericoMaior(objVARWorkFlowPEP) = ""
				set $$$VARWorkFlowPEPNumericoCasasDecimais(objVARWorkFlowPEP) = ""
				set $$$VARWorkFlowPEPAlertaResultadoMenorQue(objVARWorkFlowPEP) = ""
				set $$$VARWorkFlowPEPAlertaResultadoMaiorQue(objVARWorkFlowPEP) = ""
			}
			// Tipo 11 - Sim/Não
			if (tipo=11){
				set $$$VARWorkFlowPEPRespostaPadrao(objVARWorkFlowPEP) = respPadrao
			}elseif (tipo=9){
				set $$$VARWorkFlowPEPRespostaPadrao(objVARWorkFlowPEP) = respPadrao2
			}else{
				set $$$VARWorkFlowPEPRespostaPadrao(objVARWorkFlowPEP) = ""
			
			}
			// Tipo 4 - Texto
			if (tipo=4){
				set $$$VARWorkFlowPEPTextoAlturadoCampo(objVARWorkFlowPEP) = alturaDoCampo
				set $$$VARWorkFlowPEPTextoMaximodeCaracteres(objVARWorkFlowPEP) = maximoDeCaracteres
			}else{
				set $$$VARWorkFlowPEPTextoAlturadoCampo(objVARWorkFlowPEP) = ""
				set $$$VARWorkFlowPEPTextoMaximodeCaracteres(objVARWorkFlowPEP) = ""
			}
			set $$$VARWorkFlowPEPTipodeWorkflow(objVARWorkFlowPEP) = tipo
			set $$$VARWorkFlowPEPPredecessor(objVARWorkFlowPEP) = $piece(predecessor,";",1)
			set $$$VARWorkFlowPEPOpcaodoPredecessor(objVARWorkFlowPEP) = $piece(predecessor,";",2)
			set $$$VARWorkFlowPEPSequenciadeExibicao(objVARWorkFlowPEP) = sequ
			set $$$VARWorkFlowPEPGrupodeExibicaonaTela(objVARWorkFlowPEP) = grupo
			set $$$VARWorkFlowPEPNome(objVARWorkFlowPEP) = nome
			set $$$VARWorkFlowPEPRotulodosCamposTexto(objVARWorkFlowPEP) = rotuloText
			set $$$VARWorkFlowPEPComposicaoValoresExames(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPExamesUnidadedeExibicao(objVARWorkFlowPEP) = unidadeExibicao
			;
			set $$$VARWorkFlowPEPValidacaoComparador(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPValidacaoTipodeReferenci(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPValidacaoValordeReferenc(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPValidacaoLegenda(objVARWorkFlowPEP) = ""
			set $$$VARWorkFlowPEPInformacaoPermanente(objVARWorkFlowPEP) = informacaoPermanente
			set $$$VARWorkFlowPEPExibirCampo(objVARWorkFlowPEP) = exibirCampo
			// 7 - Mapeamento de Imagem
			set $$$VARWorkFlowPEPSomenteTexto(objVARWorkFlowPEP) = ""
			if (tipo=7){
				set $$$VARWorkFlowPEPNome(objVARWorkFlowPEP) = imagem_";"_imagemArea
				set $$$VARWorkFlowPEPSomenteTexto(objVARWorkFlowPEP) = +somenteTexto
			}			
			//
			set campoRef = numericoReferencia
			if tipoReferencia="2"{	
				set campoRef = ""		
				if camposReferencia'=""{
					if camposReferencia.%Size()>0{
						for {
							set valores = camposReferencia.%Pop()
							quit:valores=""
							set:campoRef'="" campoRef=campoRef_";"
							set campoRef=campoRef_valores
						}
					}
				}
			}
			
			// 5 e 12 - Tipo Exames
			if (tipo=5||(tipo=12)){ 
				set exame = ""
				if geralObj.exame'=""{
					if geralObj.exame.%Size()>0{
						for {
							set valores = geralObj.exame.%Pop()
							quit:valores=""
							set:exame'="" exame=exame_";"
							set exame=exame_valores
						}
					}
				}
				set $$$VARWorkFlowPEPNome(objVARWorkFlowPEP) = exame
				set $$$VARWorkFlowPEPComposicaoValoresExames(objVARWorkFlowPEP) = composicaoExame
				;
				set $$$VARWorkFlowPEPValidacaoComparador(objVARWorkFlowPEP) = valorCondicao
				set $$$VARWorkFlowPEPValidacaoTipodeReferenci(objVARWorkFlowPEP) = tipoReferencia
				set $$$VARWorkFlowPEPValidacaoValordeReferenc(objVARWorkFlowPEP) = campoRef
				set $$$VARWorkFlowPEPValidacaoLegenda(objVARWorkFlowPEP) = legendaCondicao
				
				
			}
			// Tipo 9 - Lista de Opções
			if (tipo=9){
				set $$$VARWorkFlowPEPOpcoes(objVARWorkFlowPEP) = opcoes
				set $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objVARWorkFlowPEP) = permiteSelecionarMaisQueUm
			}else{
				set $$$VARWorkFlowPEPOpcoes(objVARWorkFlowPEP) = ""
				set $$$VARWorkFlowPEPPermitirSelecionarMaisQue(objVARWorkFlowPEP) = ""
			}
			set ret = $$$Save("VARWorkFlowPEP",cid_","_idSeq,objVARWorkFlowPEP,1)
		}
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		job ##class(SourceControl.data.global.MAPPA).ExportAll()
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDadosEstadiamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set formulario = $get(%request.Data("formulario",1))
	set estadiamento = $get(%request.Data("estadiamento",1))
	set formObj = [].%FromJSON(formulario)
	set estadiamentoObj = [].%FromJSON(estadiamento)
	try {
		tstart
		set cid 			= formObj.cid
		set descricao 		= formObj.descricao
		set codEst 			= estadiamentoObj.estadiamento
		set descricaoEsta	= estadiamentoObj.descricao
		;
		set objVARWorkFlowCID = $get(^VARWorkFlowCID(YM,cid,1))
		set $$$VARWorkFlowCIDDescricao(objVARWorkFlowCID) = descricao
		set ret = $$$Save("VARWorkFlowCID",cid,objVARWorkFlowCID,1)
		;
		if '$$$ISERR(ret){
			set codEst = ""
			for {
				set codEst = $order(^mtemp.VARWorkFlowEstadiamento(job,codEst)) 
				quit:codEst=""
				quit:$$$ISERR(ret)
				set objTmp = $get(^mtemp.VARWorkFlowEstadiamento(job,codEst))
				;
				set remove1 = 0
				if $piece(objTmp,"^",2)=1 {
					set remove1 = 1
				}
				set objTmp = $piece(objTmp,"^",1)
				;
				if remove1 {
					set ret = $$$Kill("VARWorkFlowEstadiamento",cid_","_codEst)
				}else{
					set objVARWorkFlowEstadiamento = $get(^VARWorkFlowEstadiamento(YM,cid,codEst,1))
					set $$$VARWorkFlowEstadiamentoDescricao(objVARWorkFlowEstadiamento) = $$$VARWorkFlowEstadiamentoDescricao(objTmp)
					set $$$VARWorkFlowEstadiamentoObservacoes(objVARWorkFlowEstadiamento) = $$$VARWorkFlowEstadiamentoObservacoes(objTmp)
					set ret = $$$Save("VARWorkFlowEstadiamento",cid_","_codEst,objVARWorkFlowEstadiamento,1)
				}
				quit:$$$ISERR(ret)
				set estagio = ""
				for {
					set estagio = $order(^mtemp.VARWorkFlowEstadiamento(job,codEst,estagio)) 
					quit:estagio=""
					quit:$$$ISERR(ret)
					set objTmp = $get(^mtemp.VARWorkFlowEstadiamento(job,codEst,estagio))
					;
					set remove2=0
					if remove1=1 set remove2 = 1
					if $piece(objTmp,"^",2)=1 {
						set remove2 = 1
					}
					set objTmp = $piece(objTmp,"^",1)
					if remove2 {
						set ret = $$$Kill("VARWorkFlowEstadiamentoEstagio",cid_","_codEst_","_estagio)
					}else{
						set objVARWorkFlowEstadiamentoEstagio = $get(^VARWorkFlowEstadiamentoEstagio(YM,cid,codEst,estagio,1))
						set $$$VARWorkFlowEstadiamentoEstagioDescricao(objVARWorkFlowEstadiamentoEstagio) = $$$VARWorkFlowEstadiamentoEstagioDescricao(objTmp)
						set $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objVARWorkFlowEstadiamentoEstagio) = $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objTmp)
						set $$$VARWorkFlowEstadiamentoEstagioObservacoes(objVARWorkFlowEstadiamentoEstagio) = $$$VARWorkFlowEstadiamentoEstagioObservacoes(objTmp)
						set ret = $$$Save("VARWorkFlowEstadiamentoEstagio",cid_","_codEst_","_estagio,objVARWorkFlowEstadiamentoEstagio,1)
					}
					quit:$$$ISERR(ret)
					set condicao = ""
					for {
						set condicao = $order(^mtemp.VARWorkFlowEstadiamento(job,codEst,estagio,condicao)) 
						quit:condicao=""
						quit:$$$ISERR(ret)
						set objTmp = $get(^mtemp.VARWorkFlowEstadiamento(job,codEst,estagio,condicao))
						set remove3=0
						if remove1||(remove2) set remove3=1
						if $piece(objTmp,"^",2)=1 {
							set remove3 = 1
						}
						set sequencia = ""
						for {
							set sequencia = $order(^mtemp.VARWorkFlowEstadiamento(job,codEst,estagio,condicao,sequencia)) 
							quit:sequencia=""
							quit:$$$ISERR(ret)
							set objTmp = $get(^mtemp.VARWorkFlowEstadiamento(job,codEst,estagio,condicao,sequencia))
							;
							set remove4=0
							if remove1||(remove2)||(remove3) set remove4=1
							if $piece(objTmp,"^",2)=1 {
								set remove4 = 1
							}
							set objTmp = $piece(objTmp,"^",1)
							;
							if remove4{
								set ret = $$$Kill("VARWorkFlowEstEstagioC",cid_","_codEst_","_estagio_","_condicao_","_sequencia)
							}else{
								set objVARWorkFlowEstEstagioC = $get(^VARWorkFlowEstEstagioC(YM,cid,codEst,estagio,condicao,sequencia,1))
								set $$$VARWorkFlowEstEstagioCCampos(objVARWorkFlowEstEstagioC) = $$$VARWorkFlowEstEstagioCCampos(objTmp)
								set $$$VARWorkFlowEstEstagioCCondicao(objVARWorkFlowEstEstagioC) = $$$VARWorkFlowEstEstagioCCondicao(objTmp)
								set $$$VARWorkFlowEstEstagioCValor(objVARWorkFlowEstEstagioC) = $$$VARWorkFlowEstEstagioCValor(objTmp)
								set $$$VARWorkFlowEstEstagioCLegenda(objVARWorkFlowEstEstagioC) = $$$VARWorkFlowEstEstagioCLegenda(objTmp)
								set $$$VARWorkFlowEstEstagioCTipo(objVARWorkFlowEstEstagioC) = $$$VARWorkFlowEstEstagioCTipo(objTmp)
								set ret = $$$Save("VARWorkFlowEstEstagioC",cid_","_codEst_","_estagio_","_condicao_","_sequencia,objVARWorkFlowEstEstagioC,1)
							}
							quit:$$$ISERR(ret)
						}
					}
				}
			}
			;
		}
		if '$$$ERR(ret){
			set codEst = ""
			for {
				set codEst = $order(^mtemp.VARWorkFlowPontuacao(job,codEst)) quit:codEst=""
				quit:$$$ISERR(ret)
				set pontuacao = ""
				for {
					set pontuacao = $order(^mtemp.VARWorkFlowPontuacao(job,codEst,pontuacao)) quit:pontuacao=""
					quit:$$$ISERR(ret)
					set objTmp = $get(^mtemp.VARWorkFlowPontuacao(job,codEst,pontuacao))
					;
					set remove=0
					if $piece(objTmp,"^",2)=1 {
						set remove = 1
					}
					set objTmp = $piece(objTmp,"^",1)
					if remove {
						set ret = $$$Kill("VARWorkFlowEstPont",cid_","_codEst_","_pontuacao)
					}else{
						set objVARWorkFlowEstPont = objTmp
						set ret = $$$Save("VARWorkFlowEstPont",cid_","_codEst_","_pontuacao,objVARWorkFlowEstPont,1)
					}
					quit:$$$ISERR(ret)
					set condicao=""
					for {
						set condicao=$order(^mtemp.VARWorkFlowPontuacao(job,codEst,pontuacao,condicao)) quit:condicao=""
						quit:$$$ISERR(ret)
						set objTmpPai = $get(^mtemp.VARWorkFlowPontuacao(job,codEst,pontuacao,condicao))
						set nseq=""
						for {
							set nseq=$order(^mtemp.VARWorkFlowPontuacao(job,codEst,pontuacao,condicao,nseq)) quit:nseq=""
							quit:$$$ISERR(ret)
							set objTmp = $get(^mtemp.VARWorkFlowPontuacao(job,codEst,pontuacao,condicao,nseq))
							set remove1=0
							if ($piece(objTmp,"^",2)=1)||($piece(objTmpPai,"^",2)=1) {
								set remove1 = 1
							}
							set objTmp = $piece(objTmp,"^",1)
							if remove||(remove1) {
								set ret = $$$Kill("VARWorkFlowEstPontCondicao",cid_","_codEst_","_pontuacao_","_condicao_","_nseq)
							}else{
								set objVARWorkFlowEstPontCondicao = objTmp
								set ret = $$$Save("VARWorkFlowEstPontCondicao",cid_","_codEst_","_pontuacao_","_condicao_","_nseq,objVARWorkFlowEstPontCondicao,1)
							}
							quit:$$$ISERR(ret)
						}
					}
				}
			}
		}
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		job ##class(SourceControl.data.global.MAPPA).ExportAll()
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.codigo = codEst
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDadosEstadiamentoTemp">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set formulario = $get(%request.Data("formulario",1))
	set estadiamento = $get(%request.Data("estadiamento",1))
	set formObj = [].%FromJSON(formulario)
	set estadiamentoObj = [].%FromJSON(estadiamento)
	try {
		tstart
		set ret 			= 1
		set cid 			= formObj.cid
		set codEst 			= estadiamentoObj.estadiamento
		set descricaoEsta	= estadiamentoObj.descricao
		set observacoes		= estadiamentoObj.observacoes
		;
		if codEst="" set codEst = $order(^mtemp.VARWorkFlowEstadiamento(job,""),-1)+1
		set objVARWorkFlowEstadiamento = $get(^mtemp.VARWorkFlowEstadiamento(job,codEst))
		set $$$VARWorkFlowEstadiamentoDescricao(objVARWorkFlowEstadiamento) = descricaoEsta
		set $$$VARWorkFlowEstadiamentoObservacoes(objVARWorkFlowEstadiamento) = observacoes
		set ^mtemp.VARWorkFlowEstadiamento(job,codEst) = objVARWorkFlowEstadiamento
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.codigo = codEst
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDadosPontuacaoTemp">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set codEst = $get(%request.Data("codEstadiamento",1))
	set pontuacao = $get(%request.Data("pontuacao",1))
	set pontuacaoObj = [].%FromJSON(pontuacao)
	try {
		tstart
		set ret 			= 1
		set codPontuacao	= pontuacaoObj.codCondicao
		set nomePontuacao	= pontuacaoObj.nomePontuacao
		set pontuacao		= pontuacaoObj.pontuacao
		
		if codPontuacao="" set codPontuacao = $order(^mtemp.VARWorkFlowPontuacao(job,codEst,""),-1)+1
		set objVARWorkFlowPontuacao = $get(^mtemp.VARWorkFlowPontuacao(job,codEst,codPontuacao,1))
		set $$$VARWorkFlowEstadiamentoDescricao(objVARWorkFlowPontuacao) = nomePontuacao
		set $piece(objVARWorkFlowPontuacao,"~",2) = pontuacao
		set ^mtemp.VARWorkFlowPontuacao(job,codEst,codPontuacao) = objVARWorkFlowPontuacao
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.codigo = codPontuacao
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDadosEstadiamentoCondicaoTemp">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set estadiamento = $get(%request.Data("estadiamento",1))
	set estagio = $get(%request.Data("estagio",1))
	set estagioObj = [].%FromJSON(estagio)
	try {
		tstart
		set ret 		= 1
		set codEstagio	= estagioObj.codEstagio
		set descricao	= estagioObj.nomeEstagio
		set grupoRisco  = estagioObj.risco
		set observacoes  = estagioObj.observacoes
		;
		if codEstagio="" set codEstagio = $order(^mtemp.VARWorkFlowEstadiamento(job,estadiamento,""),-1)+1
		set objVARWorkFlowEstagio = $get(^mtemp.VARWorkFlowEstadiamento(job,estadiamento,codEstagio))
		set $$$VARWorkFlowEstadiamentoEstagioDescricao(objVARWorkFlowEstagio) = descricao
		set $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objVARWorkFlowEstagio) = grupoRisco
		set $$$VARWorkFlowEstadiamentoEstagioObservacoes(objVARWorkFlowEstagio) = observacoes
		set ^mtemp.VARWorkFlowEstadiamento(job,estadiamento,codEstagio) = objVARWorkFlowEstagio
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.codigo = codEstagio
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeDadosFilhosWF">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,id</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	set SQL = "Select sequencia FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"' and %upper(Predecessor) = '"_id_"'"
	set ret=1
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		set sequencia = rs.%Get("sequencia")
		set ret = $$$Kill("VARWorkFlowPEP",cid_","_sequencia)
		if $$$ISERR(ret) quit
		set ret = ..removeDadosFilhosWF(cid,sequencia)
		if $$$ISERR(ret) quit
	}
	quit ret]]></Implementation>
</Method>

<Method name="removeDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid = $get(%request.Data("cid",1))
	set id = $get(%request.Data("id",1))
	try {
		tstart
		set ret = $$$Kill("VARWorkFlowPEP",cid_","_id)
		if $$$ISOK(ret) {
			set ret = ..removeDadosFilhosWF(cid,id)
		}
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		job ##class(SourceControl.data.global.MAPPA).ExportAll()
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Removidos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	;
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	set top = take+skip
	if top<=0 set top = 200
	set contador=0
	if codigo'=""{
		set meuSelect= "select Codigo,DescricaodoExame,Unidade from VARWorkFlowAuxiliar where company=0 and TipodeCadastro='Exames' and Codigo='"_codigo_"'"
	}else{
		set SQL  = "select top "_(top)_" Codigo,DescricaodoExame,Unidade from VARWorkFlowAuxiliar where company=0 and TipodeCadastro='Exames'"
		if tipo'=""{
			set SQL = SQL_" and TipodoExame='"_tipo_"'"
		}
		if searchValue'="" {
			set SQL = SQL_" and (%upper(Codigo) like %upper('%"_searchValue_"%') or %upper(DescricaodoExame) like %upper('%"_searchValue_"%')) "
		}
		if wherefilter'=""{
			set SQL = SQL_" and ("_wherefilter_")"
		}
		set SQL = SQL_" order by DescricaodoExame "
		;
		set meuSelect = "select * from ("_SQL_")"
		if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	}
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set exame = rsLinha.%Get("Codigo")
		set descr = rsLinha.%Get("DescricaodoExame")
		set unid = rsLinha.%Get("Unidade")
		set linha = {}
		set linha.Codigo = exame
		set linha.Descricao = descr_$select(unid="":"",1:" ("_unid_")")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetImagens">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	if codigo'="" {
		set SQL = " SELECT CodigodaImagem, DescricaodaImagem FROM VARWorkFlowImagens where company = 0 and CodigodaImagem = '"_codigo_"'"
	}else{
		set SQL  = " SELECT CodigodaImagem, DescricaodaImagem FROM VARWorkFlowImagens where company = 0 "
	}
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("CodigodaImagem")
		set descr = rsLinha.%Get("DescricaodaImagem")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = "("_codigo_") "_descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="GetImagemArea">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo 		= $get(%request.Data("tipo",1))
	set codImagem 	= $get(%request.Data("codImagem",1))
	set codigo 		= $get(%request.Data("codigo",1))
	;
	if codigo'="" {
		set SQL = "select CodigodoMapeamento,descricao from VARWorkFlowImagensDetalhes where company = 0 and %upper(CoddaImagem) = '"_codImagem_"' and CodigodoMapeamento = '"_codigo_"'"
	}else{
		set SQL  = "select CodigodoMapeamento,descricao from VARWorkFlowImagensDetalhes where company = 0 and %upper(CoddaImagem) = '"_codImagem_"'"
		set SQL = SQL_" order by descricao "
	}
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("CodigodoMapeamento")
		set descr = rsLinha.%Get("descricao")
		set linha = {}
		set linha.Codigo = codigo
		set linha.Descricao = descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getEstadiamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 		= $get(%request.Data("cid",1))
	set codigo 		= $get(%request.Data("codigo",1))
	;
	set retorno = []
	set codEsta = ""
	for {
		set codEsta = $order(^mtemp.VARWorkFlowEstadiamento(job,codEsta)) quit:codEsta=""
		set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEsta))
		if $piece(obj,"^",2)=1 continue
		set obj = $piece(obj,"^",1)
		set descr = $$$VARWorkFlowEstadiamentoDescricao(obj)
		set observacoes = $$$VARWorkFlowEstadiamentoObservacoes(obj)
		if codigo'="",codEsta'=codigo continue
		set linha = {}
		set linha.Codigo = +codEsta
		set linha.Descricao = "("_codEsta_") "_descr
		set linha.Descricao2 = descr
		set linha.Observacoes = observacoes
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="getEstagio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set retorno = {}
	if codEstagio'=""{
		set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio))
		set descricao = $piece(obj,"~",1)
		set risco = $piece(obj,"~",2)
		set observacoes = $piece(obj,"~",3)
		set retorno.codEstagio = codEstagio
		set retorno.nomeEstagio = descricao
		set retorno.risco = risco
		set retorno.observacoes = observacoes

	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getPontuacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	w 1
	quit]]></Implementation>
</Method>

<Method name="recuperaPontuacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set dados = []
	if codEstadiamento'=""{
		set codPontuacao = ""
		for {
			set codPontuacao = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao)) quit:codPontuacao=""
			set obj = $get(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			set descricao = $piece(obj,"~",1)
			set pontos = $piece(obj,"~",2)
			set linha = {}
			set linha.codPontuacao = codPontuacao
			set linha.nomePontuacao = descricao
			set linha.pontuacao = pontos
			set form = {}
			set form.codPontuacao = linha.codigo
			set form.nomePontuacao = linha.estagio
			set form.pontuacao = linha.pontos
			set linha.form = form
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaPontuacaoCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set dados = []
	set codSeqOr = ""
	for {
		set codSeqOr = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codSeqOr)) quit:codSeqOr=""
		set obj = $get(^(codSeqOr))
		if $piece(obj,"^",2)=1 continue
		set linha = {}
		set linha.codSeqOr = codSeqOr
		set texto = ""
		set sequ = ""
		for {
			set sequ = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codSeqOr,sequ)) quit:sequ=""
			set obj = $get(^(sequ))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			set campo 	= $$$VARWorkFlowEstPontCondicaoCampos(obj)
			set tipo 	= $$$VARWorkFlowEstPontCondicaoTipo(obj)
			set desc = $$$VARWorkFlowEstPontCondicaoLegendadeExibicao(obj)
			set desc = $replace(desc,"<yy>","")
			if desc="" set desc = ..recDescricaoCompleta(cid,tipo,campo)
			if texto'="" set texto = texto_" + "_$c(10)
			set texto = texto_desc
		}
		set linha.condicao = texto
		do dados.%Push(linha)
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recuperaPontuacaoCondicao2">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set codPontuacaoOr	= $get(%request.Data("codPontuacaoOr",1))
	set dados = []
	if codPontuacaoOr'=""{
		set sequ = ""
		for {
			set sequ = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codPontuacaoOr,sequ)) quit:sequ=""
			set linha = {}
			set linha.codSequencia = sequ
			set obj = $get(^(sequ))
			if $piece(obj,"^",2)=1 continue
			set obj 	= $piece(obj,"^",1)
			set campo 	= $$$VARWorkFlowEstPontCondicaoCampos(obj)
			set tipo 	= $$$VARWorkFlowEstPontCondicaoTipo(obj)
			set descCampo = ""
			set descricaoCompleta = ..recDescricaoCompleta(cid,tipo,campo)
			set linha = {}
			set linha.nseq 		= sequ
			set linha.descCampo = descricaoCompleta
			set linha.comparador= $$$VARWorkFlowEstPontCondicaoComparador(obj)
			set linha.valor 	= $$$VARWorkFlowEstPontCondicaoValor(obj)
			set desctipo="Workflow"
			if tipo=1 set desctipo="Estadiamento"
			if tipo=2 set desctipo="Dados do Paciente"
			set linha.descTipo	= desctipo
			set linha.legenda 	= $$$VARWorkFlowEstPontCondicaoLegendadeExibicao(obj)
			//
			set form = {}
			set form.codPontuacaoOr = codPontuacaoOr
			set form.legenda 		= linha.legenda
			set form.tipo	 		= +tipo
			set form.valor 			= linha.valor
			set form.comparador 	= linha.comparador
			set campos=[]
			for i=1:1:$length(campo,"|"){
				set valor = $piece(campo,"|",i)
				if valor="" continue
				do campos.%Push(valor)
			}
			set form.campo		 	= campos
			set form.nseq		 	= linha.nseq
			set linha.form = form
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recDescricaoCompleta">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,tipo,campo</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set descricaoCompleta = ""
	if +tipo=0{
		for contador=1:1:$length(campo,"|"){
			set novoCampo	= $piece(campo,"|",contador)
			if novoCampo="" continue
			set campoPuro	= $piece(novoCampo,";",1)
			set minhaOpcao	= $piece(novoCampo,";",2)
			set objWF		= $get(^VARWorkFlowPEP(0,cid,campoPuro,1))
			set Opcoes		= $$$VARWorkFlowPEPOpcoes(objWF)
			set ComposicaoValoresExames		= $$$VARWorkFlowPEPComposicaoValoresExames(objWF)
			;;
			set tituloCompleto = ""
			if Opcoes'=""{
				set tituloCompleto = ..recTituloCompleto(cid,campoPuro)
				set valorSub = $piece(Opcoes,"|",minhaOpcao)
				set tituloCompleto = tituloCompleto_" - "_valorSub
			}
			if ComposicaoValoresExames=9{
				set tituloCompleto = ..recTituloCompleto(cid,campoPuro)
				set valorSub = $select(minhaOpcao=1:"Mutado",minhaOpcao=2:"Não Mutado",1:"Não Fez o Teste")
				set tituloCompleto = tituloCompleto_" - "_valorSub
			}
			if tituloCompleto=""{
				set tituloCompleto = ..recTituloCompleto(cid,campoPuro)
			}
			set:descricaoCompleta'="" descricaoCompleta = descricaoCompleta_" + "_$c(10)
			set descricaoCompleta = descricaoCompleta_tituloCompleto
		}
	}
	if +tipo=1{
		for contador=1:1:$length(campo,"|"){
			set novoCampo	= $piece(campo,"|",contador)
			if novoCampo="" continue
			set estadiamento	= $piece(novoCampo,";",1)
			set estagio			= $piece(novoCampo,";",2)
			set descEstadiamento = $piece($get(^VARWorkFlowEstadiamento(0,cid,estadiamento,1)),"~",1)
			set descEstagio		 = $piece($get(^VARWorkFlowEstadiamentoEstagio(0,cid,estadiamento,estagio,1)),"~",1)
			set tituloCompleto = ""
			set:descricaoCompleta'="" descricaoCompleta = descricaoCompleta_" + "_$c(10)
			set descricaoCompleta = descricaoCompleta_descEstadiamento_" ("_descEstagio_") "
		}
	}
	if +tipo=2{
		for contador=1:1:$length(campo,"|"){
			set novoCampo	= $piece(campo,"|",contador)
			if novoCampo="" continue
			set meuCampo	= $piece(novoCampo,";",1)
			if meuCampo="1" set descricao = "Idade"
			set:descricaoCompleta'="" descricaoCompleta = descricaoCompleta_" + "_$c(10)
			set descricaoCompleta = descricaoCompleta_descricao
		}
	}
	quit descricaoCompleta]]></Implementation>
</Method>

<Method name="recuperaEstagios">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set dados = []
	if codEstadiamento'=""{
		set codEstagio = ""
		for {
			set codEstagio = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio)) quit:codEstagio=""
			set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			set descricao = $piece(obj,"~",1)
			set grupoRisco = $piece(obj,"~",2)
			set linha = {}
			set linha.codigo = codEstagio
			set linha.estagio = descricao
			set linha.grupoRisco = grupoRisco
			set linha.condicoes = ""
			set form = {}
			set form.codigo = linha.codigo
			set form.descricao = linha.estagio
			set linha.form = form
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removePontuacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento	= $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set $piece(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="removeEstagio">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento	= $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set $piece(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="recuperaEstadiamentoCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set dados = []
	if codEstagio'=""{
		set codCondicao = ""
		for {
			set codCondicao = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao)) quit:codCondicao=""
			set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao))
			if $piece(obj,"^",2)=1 continue
			set linha = {}
			set linha.codCondicao = codCondicao
			set condicao = ""
			set sequ = ""
			for {
				set sequ = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,sequ)) quit:sequ=""
				set obj = $get(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,sequ))
				if $piece(obj,"^",2)=1 continue
				set obj = $piece(obj,"^",1)
				set campos = $piece(obj,"~",1)
				set comparador = $piece(obj,"~",2)
				set valorC = $piece(obj,"~",3)
				;
				set tituloCompleto=""
				for i=1:1:$length(campos,"|"){
					set valor = $piece(campos,"|",i)
					if valor="" continue
					if tituloCompleto'="" set tituloCompleto = tituloCompleto_" + "
					set tituloCompleto = tituloCompleto_..recTituloCompleto(cid,valor)
				}
				if condicao'="" set condicao = condicao_" e "
				set condicao = condicao_"("""_tituloCompleto_""" "_comparador_" "_valorC_")"

			}
			set linha.condicao = condicao
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeEstadiamentoCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
    set $piece(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="recuperaEstadiamentoAddCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set dados = []
	if codCondicao'=""{
		set sequ = ""
		for {
			set sequ = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,sequ)) quit:sequ=""
			set obj = $get(^(sequ))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			;
			set linha = {}
			set linha.nseq = sequ
			set linha.comparador = $piece(obj,"~",2)
			set linha.valor = $piece(obj,"~",3)
			set linha.legenda = $piece(obj,"~",4)
			set linha.tipo = +$piece(obj,"~",5)
			set form = {}
			set form.codCondicao = codCondicao
			set form.nseq = linha.nseq
			set form.comparador = linha.comparador
			set form.valor = linha.valor
			set form.legenda = linha.legenda
			set form.tipo = linha.tipo
			;
			set campos = $piece(obj,"~",1)
			set campo = []
			set tituloCompleto=""
			for i=1:1:$length(campos,"|"){
				set valor = $piece(campos,"|",i)
				if valor="" continue
				do campo.%Push(valor)
				;
				if tituloCompleto'="" set tituloCompleto = tituloCompleto_" + "
				set tituloCompleto = tituloCompleto_..recTituloCompleto(cid,valor)
			}
			set linha.campo = tituloCompleto
			set form.campo = campo
			;
			set linha.form = form
			do dados.%Push(linha)
			;
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeEstadiamentoAddCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set nseq			= $get(%request.Data("nseq",1))
	set $piece(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,nseq),"^",2)=1
	write 1
	quit]]></Implementation>
</Method>

<Method name="recWorkFlowsPontuacao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set obj = $get(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codCondicao))
	set retorno = {}
	set retorno.codCondicao 	= codCondicao
	set retorno.nomePontuacao 	= $piece(obj,"~",1)
	set retorno.pontuacao 		= $piece(obj,"~",2)
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="addPontuacaoCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set dados 			= $get(%request.Data("dados",1))
	set dadosObj 		= [].%FromJSON(dados)
	set codPontuacaoOr	= dadosObj.codPontuacaoOr
	set nseq 			= dadosObj.nseq
	set comparador 		= dadosObj.comparador
	set valor 			= dadosObj.valor
	set tipo 			= dadosObj.tipo
	set legenda			= dadosObj.legenda
	;
	set campo = ""
	if dadosObj.campo'=""{
		if dadosObj.campo.%Size()>0{
			for {
				set valores = dadosObj.campo.%Pop()
				quit:valores=""
				set:campo'="" campo=campo_"|"
				set campo=campo_valores
			}
		}
	}
	;
	if codPontuacaoOr = "" set codPontuacaoOr = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,""),-1)+1
	;
	if nseq = "" set nseq = $order(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codPontuacaoOr,""),-1)+1
	set ^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codPontuacaoOr,nseq) = campo_"~"_comparador_"~"_valor_"~"_tipo_"~"_legenda
	set retorno = {}
	set retorno.status = 1
	set retorno.codPontuacaoOr = codPontuacaoOr
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removePontuacaoCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set codPontuacaoOr	= $get(%request.Data("codSeqOr",1))
	set $piece(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codPontuacaoOr),"^",2) = 1
	write 1
	quit]]></Implementation>
</Method>

<Method name="removePontuacaoCondicao2">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codPontuacao	= $get(%request.Data("codPontuacao",1))
	set codPontuacaoOr	= $get(%request.Data("codPontuacaoOr",1))
	set codSeq			= $get(%request.Data("codSeq",1))
	set $piece(^mtemp.VARWorkFlowPontuacao(job,codEstadiamento,codPontuacao,codPontuacaoOr,codSeq),"^",2) = 1
	write 1
	quit]]></Implementation>
</Method>

<Method name="addCondicao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codEstadiamento = $get(%request.Data("codEstadiamento",1))
	set codEstagio		= $get(%request.Data("codEstagio",1))
	set codCondicao		= $get(%request.Data("codCondicao",1))
	set dados 			= $get(%request.Data("dados",1))
	set dadosObj 		= [].%FromJSON(dados)
	set nseq 			= dadosObj.nseq
	set legenda			= dadosObj.legenda
	set comparador 		= dadosObj.comparador
	set valor 			= dadosObj.valor
	set tipo 			= dadosObj.tipo
	;
	set campo = ""
	if dadosObj.campo'=""{
		if dadosObj.campo.%Size()>0{
			for {
				set valores = dadosObj.campo.%Pop()
				quit:valores=""
				set:campo'="" campo=campo_"|"
				set campo=campo_valores
			}
		}
	}
	;
	if codCondicao = "" set codCondicao = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,""),-1)+1
	;
	if nseq = "" set nseq = $order(^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,""),-1)+1
	set ^mtemp.VARWorkFlowEstadiamento(job,codEstadiamento,codEstagio,codCondicao,nseq) = campo_"~"_comparador_"~"_valor_"~"_legenda_"~"_tipo
	set retorno = {}
	set retorno.status = 1
	set retorno.codCondicao = codCondicao
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="recTituloCompleto">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,codPainel</FormalSpec>
<Implementation><![CDATA[	new (cid,codPainel)
	set nivel = 1
	set titulo  = ""
	for {
		set obj = $get(^VARWorkFlowPEP(0,cid,codPainel,1))
		set desc = $$$VARWorkFlowPEPNome(obj)
		set tipo = $$$VARWorkFlowPEPTipodeWorkflow(obj)
		set nivel = nivel + 1
		if nivel>4 {
			set codPainel  = $$$VARWorkFlowPEPPredecessor(obj)
			quit:codPainel=""
			continue
		}
		;
		if tipo=5||(tipo=12){
			set NomeExame = ""
			for i=1:1:$length(desc,";"){
				if $piece(desc,";",i)="" continue
				if NomeExame'="" set NomeExame = NomeExame_"/"
				set objExames = $get(^VARWorkFlowAuxiliar(0,"Exames",$piece(desc,";",i),1))
				set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame(objExames)
				set NomeExame = NomeExame_descExame
			}
			set desc = NomeExame
		}
		;
		if tipo=7{
			set codImagem = $piece(desc,";",1)
			set codArea = $piece(desc,";",2)
			set desc 	= $piece($get(^VARWorkFlowImagensDetalhes(0,+codImagem,+codArea,1)),"~",1)
			if ($piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1) '= "") {
				set desc = $$SQLGetUserParamDesc^VARSQL("MAPPAGRUPOIMAGEM~"_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",5))_" - "_$piece($get(^VARWorkFlowImagensDetalhes(0,codImagem,codArea,1)),"~",1)
			}
		}
		;
		set descExib = desc
		set:titulo'="" titulo=" » "_titulo
		set titulo = desc_titulo
		set codPainel  = $$$VARWorkFlowPEPPredecessor(obj)
		quit:codPainel=""
	}
	if nivel>4 set titulo = desc_" » ... » "_titulo
	quit titulo]]></Implementation>
</Method>

<Method name="inicializa">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	kill ^VARPARA(0,"WORKFLOWTIPOS","PT")
	if '$data(^VARPARA(0,"WORKFLOWTIPOS","PT")){
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",1","Grupo~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",2","Sim/Não (Botões)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",3","Numérico~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",4","Texto~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",5","Exame de Sangue~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",6","Tratamento Atual~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",7","Imagem~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",8","Sub-Grupo~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",9","Lista de Opções~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",10","Aba~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",11","Sim/Não (Formulário)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",12","Exame Molecular~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",13","Data~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",14","Multiplos Textos~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",15","Tratamento e Seguimento (Ficha Diagnóstico)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",16","Recomendação Terapêutica~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",19","Tratamento / Resposta / Toxicidade (Ficha de Segmento)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",20","Informativo~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",21","Tratamento~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",22","Exames~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",29","Doenças~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",31","Doenças (familiares)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",30","Medicamentos~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",32","Medicamentos (posologia)~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",33","Multiplos Textos com Data~",1)
		set ret = $$$Save("VARPARA","""WORKFLOWTIPOS"",""PT"",34","Multiplos Textos com Medidas",1)
	}
	if '$data(^VARPARA(0,"WORKFLOWVALORES","PT")){
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",1","Númerico",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",2","Númerico/Data do Exame",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",13","Númerico/Percentual",1)
		;set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",2","Percentual",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",3","Positivo/Negativo",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",12","Positivo/Negativo/Data",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",4","Positivo/Negativo/Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",5","Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",6","Mutado/Não Mutado",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",7","Mutado/Não Mutado/Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",8","Mutado/Não Mutado/Não Fez o Teste",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",9","Mutado/Não Mutado/Não Fez o Teste/Texto",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",10","Sim/Não/Não Avaliado",1)
		set ret = $$$Save("VARPARA","""WORKFLOWVALORES"",""PT"",11","Sim/Não/Não Avaliado/Texto",1)
	}
	quit]]></Implementation>
</Method>

<Method name="salvaDadosDiagnostico">
<Description><![CDATA[/////////////////////////// Novo]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM 	= 0
	Set Y 	= "~"
	Set YBED 		= $Get(%request.Data("YBED",1))
	set formulario 	= $get(%request.Data("formulario",1))
	set diagnostico = $get(%request.Data("diagnostico",1))
	set formObj 	= [].%FromJSON(formulario)
	set diagnosticoObj 	= [].%FromJSON(diagnostico)
	try {
		tstart
		set cid 			= formObj.cid
		set descricao 		= formObj.descricao
		set codDiagnostico 	= diagnosticoObj.diagnostico
		set descricaoDiag	= diagnosticoObj.descricao
		set resultadoDiag	= diagnosticoObj.resultado
		set exibir			= diagnosticoObj.exibir
		;
		set objVARWorkFlowDiagnostico = $get(^VARWorkFlowDiagnosticout(YM, cid, codDiagnostico,1))
		set $$$VARWorkFlowDiagnosticoDescricao(objVARWorkFlowDiagnostico) 	= descricaoDiag
		set $$$VARWorkFlowDiagnosticoResultado(objVARWorkFlowDiagnostico) 	= resultadoDiag
		set $$$VARWorkFlowDiagnosticoExibir(objVARWorkFlowDiagnostico) 		= +exibir
		set ret = $$$Save("VARWorkFlowDiagnostico",cid_","_codDiagnostico,objVARWorkFlowDiagnostico,1)
		;
		if '$$$ISERR(ret){
			set codDiag = ""
			for {
				set codDiag = $order(^mtemp.VARWorkFlowDiagnostico(job,codDiag)) 
				quit:codDiag=""
				quit:$$$ISERR(ret)
				set objTmp = $get(^mtemp.VARWorkFlowDiagnostico(job,codDiag))
				;
				set remove1 = 0
				if $piece(objTmp,"^",2)=1 {
					set remove1 = 1
				}
				set objTmp = $piece(objTmp,"^",1)
				;
				if remove1 {
					set ret = $$$Kill("VARWorkFlowDiagnostico",cid_","_codDiag)
				}else{
					set objVARWorkFlowDiagnostico = $get(^VARWorkFlowDiagnostico(YM,cid,codDiag,1))
					set $$$VARWorkFlowDiagnosticoDescricao(objVARWorkFlowDiagnostico) = $$$VARWorkFlowDiagnosticoDescricao(objTmp)
					set $$$VARWorkFlowDiagnosticoResultado(objVARWorkFlowDiagnostico) = $$$VARWorkFlowDiagnosticoResultado(objTmp)
					set $$$VARWorkFlowDiagnosticoResultadocasonenhumacondi(objVARWorkFlowDiagnostico) = $$$VARWorkFlowDiagnosticoResultadocasonenhumacondi(objTmp)
					set ret = $$$Save("VARWorkFlowDiagnostico",cid_","_codDiag,objVARWorkFlowDiagnostico,1)
				}
				quit:$$$ISERR(ret)
				set sequencia = ""
				for {
					set sequencia = $order(^mtemp.VARWorkFlowDiagnostico(job,codDiag,sequencia)) 
					quit:sequencia=""
					quit:$$$ISERR(ret)
					set objTmp = $get(^mtemp.VARWorkFlowDiagnostico(job,codDiag,sequencia))
					;
					set remove2=0
					if remove1=1 set remove2 = 1
					if $piece(objTmp,"^",2)=1 {
						set remove2 = 1
					}
					set objTmp = $piece(objTmp,"^",1)
					if remove2 {
						set ret = $$$Kill("VARWorkFlowDiagnosticoSeq",cid_","_codDiag_","_sequencia)
					}else{
						set objVARWorkFlowDiagnosticoSeq = $get(^VARWorkFlowDiagnosticoSeq(YM,cid,codDiag,sequencia,1))
						set $$$VARWorkFlowDiagnosticoSeqInterrompeouContinua(objVARWorkFlowDiagnosticoSeq) = $$$VARWorkFlowDiagnosticoSeqInterrompeouContinua(objTmp)
						set $$$VARWorkFlowDiagnosticoSeqResultadoCasoPositivo(objVARWorkFlowDiagnosticoSeq) = $$$VARWorkFlowDiagnosticoSeqResultadoCasoPositivo(objTmp)
						set $$$VARWorkFlowDiagnosticoSeqDescricaoCasoPositivo(objVARWorkFlowDiagnosticoSeq) = $$$VARWorkFlowDiagnosticoSeqDescricaoCasoPositivo(objTmp)
						set ret = $$$Save("VARWorkFlowDiagnosticoSeq",cid_","_codDiag_","_sequencia,objVARWorkFlowDiagnosticoSeq,1)
					}
					quit:$$$ISERR(ret)
					set condicao = ""
					for {
						set condicao = $order(^mtemp.VARWorkFlowDiagnostico(job,codDiag,sequencia,condicao)) 
						quit:condicao=""
						quit:$$$ISERR(ret)
						set objTmp = $get(^mtemp.VARWorkFlowDiagnostico(job,codDiag,sequencia,condicao))
						set remove3=0
						if remove1||(remove2) set remove3=1
						if $piece(objTmp,"^",2)=1 {
							set remove3 = 1
						}
						set objTmp = $piece(objTmp,"^",1)
						if remove3 {
							set ret = $$$Kill("VARWorkFlowDiagnosticoSeqCond",cid_","_codDiag_","_sequencia_","_condicao)
						}else{
							set objVARWorkFlowDiagnosticoSeqCond = $get(^VARWorkFlowDiagSequencia(YM,cid,codDiag,sequencia,condicao,1))
							set $$$VARWorkFlowDiagnosticoSeqCondTipodeCampoInputOutput(objVARWorkFlowDiagnosticoSeqCond) = $$$VARWorkFlowDiagnosticoSeqCondTipodeCampoInputOutput(objTmp)
							set $$$VARWorkFlowDiagnosticoSeqCondIndice(objVARWorkFlowDiagnosticoSeqCond) = $$$VARWorkFlowDiagnosticoSeqCondIndice(objTmp)
							set $$$VARWorkFlowDiagnosticoSeqCondCodicao(objVARWorkFlowDiagnosticoSeqCond) = $$$VARWorkFlowDiagnosticoSeqCondCodicao(objTmp)
							set $$$VARWorkFlowDiagnosticoSeqCondValor(objVARWorkFlowDiagnosticoSeqCond) = $$$VARWorkFlowDiagnosticoSeqCondValor(objTmp)
							set $$$VARWorkFlowDiagnosticoSeqCondContinuacaoOEouOU(objVARWorkFlowDiagnosticoSeqCond) = $$$VARWorkFlowDiagnosticoSeqCondContinuacaoOEouOU(objTmp)
							set $$$VARWorkFlowDiagnosticoSeqCondExecutarporCondicao(objVARWorkFlowDiagnosticoSeqCond) = $$$VARWorkFlowDiagnosticoSeqCondExecutarporCondicao(objTmp)
							set $$$VARWorkFlowDiagnosticoSeqCondIndiceInputParaMensagem(objVARWorkFlowDiagnosticoSeqCond) = $$$VARWorkFlowDiagnosticoSeqCondIndiceInputParaMensagem(objTmp)
							set ret = $$$Save("VARWorkFlowDiagnosticoSeqCond",cid_","_codDiag_","_sequencia_","_condicao,objVARWorkFlowDiagnosticoSeqCond,1)
						}
					}
				}
			}
		}
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		;if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		;tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="salvaDadosDiagnosticoTemp">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set formulario 		= $get(%request.Data("formulario",1))
	set diagnostico 	= $get(%request.Data("diagnostico",1))
	set formObj			= [].%FromJSON(formulario)
	set diagnosticoObj 	= [].%FromJSON(diagnostico)
	try {
		tstart
		set ret 				= 1
		set cid 				= formObj.cid
		set codDiagnostico 		= diagnosticoObj.diagnostico
		set descDiagnostico		= diagnosticoObj.descricao
		set resultado			= diagnosticoObj.resultaddo
		;
		if codDiagnostico="" set codDiagnostico = $order(^mtemp.VARWorkFlowDiagnostico(job,""),-1)+1
		set objVARWorkFlowDiagnostico = $get(^mtemp.VARWorkFlowEstadiamento(job,codDiagnostico,1))
		set $$$VARWorkFlowDiagnosticoDescricao(objVARWorkFlowDiagnostico) = descDiagnostico
		set $$$VARWorkFlowDiagnosticoResultado(objVARWorkFlowDiagnostico) = "N"
		set $$$VARWorkFlowDiagnosticoResultadocasonenhumacondi(objVARWorkFlowDiagnostico) = resultado
		set ^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico) = objVARWorkFlowDiagnostico
	}
	catch(exception){
		trollback
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.codigo = codDiagnostico
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removerDadosDiagnosticoTemp">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codDiagnostico 	= $get(%request.Data("codDiagnostico",1))
	if codDiagnostico'=""{
		Set $Piece(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico),"^",2) = 1
	}
	return]]></Implementation>
</Method>

<Method name="getDiagnostico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 	= $get(%request.Data("cid",1))
	set codigo 	= $get(%request.Data("codigo",1))
	;
	set retorno = []
	set codDiagnostico = ""
	for {
		set codDiagnostico = $order(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico)) quit:codDiagnostico=""
		set obj = $get(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico))
		if $piece(obj,"^",2)=1 continue
		set obj = $piece(obj,"^",1)
		set descr = $piece(obj,"~",1)
		if codigo'="",codDiagnostico'=codigo continue
		set linha = {}
		set linha.Codigo = +codDiagnostico
		set linha.Descricao = "("_codDiagnostico_") "_descr
		set linha.Descricao2 = descr
		set linha.resultado = $piece(obj,"~",3)
		set linha.exibir = $piece(obj,"~",4)
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()]]></Implementation>
</Method>

<Method name="getSequenciaDiagnostico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codDiagnostico	= $get(%request.Data("codDiagnostico",1))
	set codSequencia	= $get(%request.Data("codSequencia",1))
	set retorno = {}
	if codSequencia'=""{
		set obj = $get(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,codSequencia))
		set acao = $piece(obj,"~",1)
		set descricao = $piece(obj,"~",3)
		set retorno.codSequencia = codSequencia
		set retorno.flagInterContinuar = acao
		set retorno.descricao = descricao
		set retorno.exibir = $piece(obj,"~",4)
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="armazenaSequenciaDiagnostico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codDiagnostico	= $get(%request.Data("codDiagnostico",1))
	set codSequencia	= $get(%request.Data("codSequencia",1))
	set acao 			= $get(%request.Data("acao",1))
	set descicao 		= $get(%request.Data("descicao",1))
	set exibir 			= $get(%request.Data("exibir",1))

	if (codSequencia = "") {
		set codSequencia = $Order(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,codSequencia),-1) + 1	
	}
	Set ^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,codSequencia) = acao_"~S~"_descicao_"~"_exibir
	set dados = {}
	set dados.codSequencia = codSequencia
	write dados.%ToJSON()
	return $$$OK]]></Implementation>
</Method>

<Method name="recuperaDiagnosticoCondicoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codDiagnostico 	= $get(%request.Data("codDiagnostico",1))
	set codSequencia	= $get(%request.Data("codSequencia",1))
	set dados = []
	if codDiagnostico'=""&&(codSequencia'=""){
		set seqCondicao = ""
		for {
			set seqCondicao = $order(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,codSequencia,seqCondicao)) 
			Quit:seqCondicao=""
			set obj = ^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,codSequencia,seqCondicao)
			if $piece(obj,"^",2)=1 continue
			set obj = $piece(obj,"^",1)
			;
			Set campo	= $Piece(obj,"~",2) 
			Set campoDescricao = ""
			If (campo '= "") {
				If ($Piece(obj,"~",1) = "O"){
					Set campoDescricao = $Piece($Get(^VARWorkFlowDiagnostico(0,cid,campo,1)),"~",1)
				}Else{
					Set campoDescricao = $Piece($Get(^VARWorkFlowPEP(0,cid,campo,1)),"~",1)
				}
			}
			;
			Set exibirCampo	= $Piece(obj,"~",7) 
			Set exibirCampoDesc = ""
			If (exibirCampo '= "") {
				Set exibirCampoDesc = $Piece($Get(^VARWorkFlowPEP(0,cid,exibirCampo,1)),"~",1)
			}
			;
			set linha = {}
			set linha.seqCondicao = seqCondicao
			set linha.tipoCampo = $Piece(obj,"~",1)
			set linha.campo = $Piece(obj,"~",2)
			set linha.campoDescricao = campoDescricao
			set linha.comparador = $Piece(obj,"~",3)
			set linha.valor = $Piece(obj,"~",4)
			set linha.novaCondicao = $Piece(obj,"~",5)
			set linha.recuperaCampo = $Piece(obj,"~",6)
			set linha.exibirCampo = $Piece(obj,"~",7)
			set linha.exibirCampoDesc = exibirCampoDesc
			
			Do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="addDiagnosticoCondicoes">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodDiagnostico,pCodSequencia,pSeqCondicao,objDados,YBED</FormalSpec>
<Implementation><![CDATA[	set job = %session.SessionId

	if (pSeqCondicao = "") {
		set pSeqCondicao = $order(^mtemp.VARWorkFlowDiagnostico(job, pCodDiagnostico, pCodSequencia, ""),-1) + 1
	}

	set obj = ""
	set index = "" 
	for {
		set index = $order(objDados(index)) 
		quit:index=""
		
		set coluna	= $piece(objDados(index),"~",1)
		set valor		= $piece(objDados(index),"~",2)

		Set piece = 0
		if (coluna = "tipoCampo") Set piece = 1
	  	if (coluna = "campo") Set piece = 2
	  	if (coluna = "comparador") Set piece = 3
		if (coluna = "valor") Set piece = 4
		if (coluna = "novaCondicao") Set piece = 5
		if (coluna = "recuperaCampo") Set piece = 6
		if (coluna = "exibirCampo") Set piece = 7

    if (piece = 0) continue	

		Set $Piece(obj,"~",piece) = valor
	}
	Set ^mtemp.VARWorkFlowDiagnostico(job, pCodDiagnostico, pCodSequencia, pSeqCondicao) = obj
	quit]]></Implementation>
</Method>

<Method name="removeDiagnosticoCondicoes">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodDiagnostico,pCodSequencia,pSeqCondicao</FormalSpec>
<Implementation><![CDATA[	set job = %session.SessionId

	Set $Piece(^mtemp.VARWorkFlowDiagnostico(job, pCodDiagnostico, pCodSequencia, pSeqCondicao),"^",2) = 1

	quit]]></Implementation>
</Method>

<Method name="recuperaDiagnostico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codDiagnostico 	= $get(%request.Data("codDiagnostico",1))
	set dados = []
	if codDiagnostico'=""{
		set seqDiagnostico = ""
		for {
			set seqDiagnostico = $order(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,seqDiagnostico)) quit:seqDiagnostico=""
			set obj = $get(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,seqDiagnostico))
			if $piece(obj,"^",2)=1 continue
			set obj = $piece($get(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,seqDiagnostico)),"^",1)
			set linha = {}
			set linha.sequencia = seqDiagnostico
			set linha.acao = $Select($piece(obj,"~",1)="I":"Interromper",$piece(obj,"~",1)="A":"Acumular",1:"Continuar")
			set linha.descricao = $piece(obj,"~",3)
			do dados.%Push(linha)
		}
	}
	write dados.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="removeDiagnostico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set cid 			= $get(%request.Data("cid",1))
	set codDiagnostico 	= $get(%request.Data("codDiagnostico",1))
	set codSequencia 	= $get(%request.Data("codSequencia",1))
	if codDiagnostico'=""&&(codSequencia'=""){
		Set $Piece(^mtemp.VARWorkFlowDiagnostico(job,codDiagnostico,codSequencia),"^",2) = 1
	}
	return]]></Implementation>
</Method>

<Method name="getInputDiagnostico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set cid		= $get(%request.Data("cid",1))
	set tipo	= $get(%request.Data("tipo",1))

	If (tipo = "I") {	
		set SQL = "Select * FROM VARWorkFlowPEP where company = 0 and %upper(CodigodoCID)='"_cid_"'"
	}else{
		set SQL = "Select CoddoDiagnostico As Sequencia, Descricao As Nome FROM SQLUser.VARWorkFlowDiagnostico where company = 0 and %upper(CID)='"_cid_"'"
	}
	set arrayRetorno = []
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	while(rs.%Next()){
		Set listRetorno = {}
		Set listRetorno.Sequencia = rs.%Get("Sequencia")
		Set listRetorno.Nome			= rs.%Get("Nome")
		do arrayRetorno.%Push(listRetorno)
	}

	do arrayRetorno.%ToJSON()
	
	Return $$$OK]]></Implementation>
</Method>

<Method name="recInputDiagnostico">
<ClassMethod>1</ClassMethod>
<FormalSpec>cid,tipo,campo</FormalSpec>
<Implementation><![CDATA[	$$$VAR

	Set campoDescricao = ""
	If (tipo = "O"){
		Set campoDescricao = $Piece($Get(^VARWorkFlowDiagnostico(0,cid,campo,1)),"~",1)
	}Else{
		Set campoDescricao = $Piece($Get(^VARWorkFlowPEP(0,cid,campo,1)),"~",1)
	}
	
	Return campoDescricao]]></Implementation>
</Method>
</Class>
</Export>