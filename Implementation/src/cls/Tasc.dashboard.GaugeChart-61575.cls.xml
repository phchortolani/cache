<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="Tasc.dashboard.GaugeChart">
<ClassType/>
<IncludeCode>VARConst</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>Chart</Super>

<Property name="Stops">
<Type>Stop</Type>
<Collection>list</Collection>
</Property>


<Property name="Max">
<Type>%Double</Type>
<InitialExpression>100</InitialExpression>
</Property>


<Property name="Min">
<Type>%Double</Type>
<InitialExpression>0</InitialExpression>
</Property>


<Method name="Install">
<Implementation><![CDATA[
	do ##super()
	write "<script type=""text/javascript"" src=""Highcharts4/js/modules/solid-gauge.js""></script>"
]]></Implementation>
</Method>

<Method name="Configure">
<Implementation><![CDATA[
	
	set percentRed 		= ..GetPercentColor("RED")
	set percentYellow 	= ..GetPercentColor("YELLOW")
	set percentGreen 	= ..GetPercentColor("GREEN")

	set stop = ##class(Stop).%New()
	set stop.Color = "Green"
	set stop.Percent = percentGreen
	do ..Stops.Insert(stop)
	
	set stop = ##class(Stop).%New()
	set stop.Color = "Yellow"
	set stop.Percent = percentYellow
	do ..Stops.Insert(stop)
	
	set stop = ##class(Stop).%New()
	set stop.Color = "Red"
	set stop.Percent = percentRed
	do ..Stops.Insert(stop)
]]></Implementation>
</Method>

<Method name="GetPercentColor">
<ClassMethod>1</ClassMethod>
<FormalSpec>pColor:%String=""</FormalSpec>
<ReturnType>%Float</ReturnType>
<Implementation><![CDATA[
	set objPainelConfig = $get(^VARPainelConfig(0, 0, 1))
	set fltAbaixoFim = 0
	if (pColor = "GREEN") {
		set fltAbaixoFim = $$$VARPainelConfigReqAcimaNivAtendIni(objPainelConfig) 
	}
	elseif (pColor = "YELLOW") {
		set fltAbaixoFim = $$$VARPainelConfigReqDentroNivAtendIni(objPainelConfig) 
	}
	elseif (pColor = "RED") {
		set fltAbaixoFim = $$$VARPainelConfigReqAbaixoNivAtendIni(objPainelConfig) 
	}
	
	set fltPercentRed = (100 - fltAbaixoFim) / 100
	quit fltPercentRed
]]></Implementation>
</Method>

<Method name="Print">
<Implementation><![CDATA[
	write "<script type=""text/javascript"" language=""javascript"">",!
	write "  			",!										   
	write " $(function () {																					  ",!
	write "                                                                                                   ",!
	write "    var gaugeOptions = {                                                                           ",!
	write "                                                                                                   ",!
	write "        chart: {                                                                                   ",!
	write "            type: 'solidgauge'                                                                     ",!
	write "        },                                                                                         ",!
	write "                                                                                                   ",!
	write "        title: null,                                                                               ",!
	write "                                                                                                   ",!
	write "        pane: {                                                                                    ",!
	write "            center: ['50%', '85%'],                                                                ",!
	write "            size: '140%',                                                                          ",!
	write "            startAngle: -90,                                                                       ",!
	write "            endAngle: 90,                                                                          ",!
	write "            background: {                                                                          ",!
	write "                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',     ",!
	write "                innerRadius: '60%',                                                                ",!
	write "                outerRadius: '100%',                                                               ",!
	write "                shape: 'arc'                                                                       ",!
	write "            }                                                                                      ",!
	write "        },                                                                                         ",!
	write "                                                                                                   ",!
	write "        tooltip: {                                                                                 ",!
	write "            enabled: false                                                                         ",!
	write "        },                                                                                         ",!
	write "                                                                                                   ",!
	write "        // the value axis                                                                          ",!
	write "        yAxis: {                                                                                   ",!
	write "            stops: [                                                                               ",!
	for idxStops = 1:1:..Stops.Count() {
		do ..PrintStop(..Stops.GetAt(idxStops))
		if idxStops < ..Stops.Count() {
			write ",",!
		}		
	}
	write "            ],                                                                                     ",!

	write "            lineWidth: 0,                                                                          ",!
	write "            minorTickInterval: null,                                                               ",!
	write "            tickPixelInterval: 400,                                                                ",!
	write "            tickWidth: 0,                                                                          ",!
	write "            title: {                                                                               ",!
	write "                y: -70                                                                             ",!
	write "            },                                                                                     ",!
	write "            labels: {                                                                              ",!
	write "                y: 16                                                                              ",!
	write "            }                                                                                      ",!
	write "      },                                                                                           ",!
	write "                                                                                                   ",!
	write "        plotOptions: {                                                                             ",!
	write "            solidgauge: {                                                                          ",!
	write "                dataLabels: {                                                                      ",!
	write "                    y: 5,                                                                          ",!
	write "                    borderWidth: 0,                                                                ",!
	write "                    useHTML: true                                                                  ",!
	write "                }                                                                                  ",!
	write "            }                                                                                      ",!
	write "        }                                                                                          ",!
	write " };                                                                                                ",!
	for idxSerie=1:1:..Series.Count() {
		do ..PrintGauge(..Series.GetAt(idxSerie),idxSerie)	
	}
	write " }); ",!
	write !,"</"_"script>",!
]]></Implementation>
</Method>

<Method name="PrintGauge">
<FormalSpec>serie:Serie,conteiner:%String</FormalSpec>
<Implementation><![CDATA[

    // The speed gauge
	write " $('#ContGauge"_conteiner_"').highcharts(Highcharts.merge(gaugeOptions, {",!
	write "     yAxis: {",!
	write "         min: "_..Min_",",!
	write "         max: "_..Max_",",!
	write "         title: {",!
	write "             text: '"_serie.Titulo_"'",!
	write "         }",!
	write "     },",!
	write "",!
	write "     credits: {",!
	write "         enabled: false",!
	write "     },",!
	write "",!
	write "     series: [{",!
	write "         name: '"_serie.Titulo_"', ",!
	write "         data: ["_serie.Valor_"], ",!
	write "         dataLabels: {",!
	write "             format: '<div style=""text-align:center""><span style=""font-size:25px;color:' +",!
	write "                 ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '"">{y}</span><br/>' +",!
	write "                    '<span style=""font-size:12px;color:silver"">"_..Sufixo_"</span></div>'",!
	write "         },",!
	write "         tooltip: {",!
	write "             valueSuffix: '"_..Sufixo_"'",!
	write "         }",!
	write "     }]",!
	write "",!
	write "",!
	write "}",!
	write "));",!
]]></Implementation>
</Method>

<Method name="PrintStop">
<FormalSpec>stop:Stop</FormalSpec>
<Implementation><![CDATA[
	
	write "             ["_stop.Percent_", '"_stop.Color_"'] 		   "
]]></Implementation>
</Method>

<Method name="PrintConteiner">
<Implementation><![CDATA[
	set width = ..Series.Count() * 250
	w "<div style='width: "_width_"px; height: 180px; margin: 0 auto'>",!
	for idxSerie=1:1:..Series.Count() {
		w " <div id='ContGauge"_idxSerie_"' style='width: 250px; height: 180px; float: left'></div>",!
	}
	w "</div>",!
]]></Implementation>
</Method>

<Method name="PrintTable">
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
	#dim serie as Serie
	#dim subserie as Serie
	if (..Series.Count() > 0){
		write "<table cellspacing='1' width='100%'>",!
		write "	<tr style='background-color:#2c6c7f;color:white'>",!
		write "		<th>"_..SeriesName_"</th>"
		
		set qtSeries = ..Series.Count()
		if (qtSeries > 0) {
				
			//set percent = $L(subserie.Titulo) * 10 
			
			if (..Series.GetAt(1).TituloColuna.Count() > 0) {
				for idxCol = 1:1:..Series.GetAt(1).TituloColuna.Count() {
					write "		<th>"_..Series.GetAt(1).TituloColuna.GetAt(idxCol)_"</th>",!
				}
			}
			
			if (..ImprimeSerieTabela = 1) {
				write "		<th>Valores</th>",!
			}
			write "	</tr>"
			set total = 0
			set contador = 0
			set key = ..Series.GetAt(1).Ordered
			if ($get(key) '= "") { 
				set ind = ""
				for {
					set ind = $order(^seriesDashboard(key,ind),-1)
					quit:ind=""
					
					set idxCont = ""
					for {
						set idxCont = $order(^seriesDashboard(key,ind,idxCont),-1)
						quit:(idxCont = "")
						
						set contador = contador + 1
						set i = $get(^seriesDashboard(key,ind,idxCont))
						
						do ..printLinha(i,contador,.total)
					}
				}
			} 
			else {
				for j = 1:1:..Series.Count() {
					do ..printLinha(j,j,.total)
				}
			}

				if (..Totalizar && ..ImprimeSerieTabela) {
					set span = +..Series.GetAt(1).TituloColuna.Count()+1
					write " <tr style='background-color:lightsteelblue;color:black; font-size: 12px; font-weight:bold;'>"
					write "<td style='text-align:right;' colspan='"_span_"'><b>Total</b></td>"					
					
					write "<td style='text-align:center;'>"
					if (..MostrarEmMoeda) {
						set SPRACHE = "EN"
						write "R$"_$$^WWWTR(0,12,total,2)
					 	;w subserie.Valor
					}
					else {
						write total
					}
					write "</td> </tr>",!
				}
				write "</tr>"
			
		}
		write "</table>"
}
]]></Implementation>
</Method>

<Method name="printLinha">
<FormalSpec>j,contador,&amp;total</FormalSpec>
<Implementation><![CDATA[
	#dim serie as Tasc.dashboard.Serie
	set serie = ..Series.GetAt(j)
	if ('$isObject(serie)) {
		quit
	}
	
	if ($LENGTH(serie.Link) > 0) {
		set link ="<a class='link2' href='"_serie.Link_"'>"
		set linkand = "</a> "
	}
	else {
		set link =""
		set linkand = ""
	}
	
	if (contador#2) = 1 {
		write "	<tr style='background-color:#E0E0E0;color:"_serie.Cor_"' onclick=""location.href='"_serie.Link_"'"">",!
	}
	else {
		write "	<tr style='background-color:#F0F0F0;color:"_serie.Cor_"'onclick=""location.href='"_serie.Link_"'"">",!
	}
	
	write "	<td style='text-align:left'><strong>"_link_serie.Titulo_linkand_"</strong></td>",!
	
	if (serie.ColunaTabela.Count() > 0) {
		for idxColS = 1:1:serie.ColunaTabela.Count() {
			write " <td style='text-align:center;font-weight:normal'>"
			
			write link_serie.ColunaTabela.GetAt(idxColS)_linkand
			write "</td>"
		}
	}
	
	set total = total + serie.Valor 
	
	if (..ImprimeSerieTabela = 1) {
		write " <td style='text-align:center;font-weight:normal'>"
		write link
		if (..MostrarEmMoeda) {
			set SPRACHE = "EN"
			write $$^WWWTR(0,12,serie.Valor,2)
		 	;w subserie.Valor
		}
		else {
			 write serie.Valor
		}
		write linkand
		write "</td>",!
	}
]]></Implementation>
</Method>
</Class>
</Export>