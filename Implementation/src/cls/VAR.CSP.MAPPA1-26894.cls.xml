<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.MAPPA1">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	$$$VAR
	#dim %request as %CSP.Request
	#dim %response as %CSP.Response
	;quit:$$$ISERR(##Class(VAR.CSP.MAPPA).validaSessao()) %response
	do ##Class(VAR.CSP.MAPPA).manutencao()
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK]]></Implementation>
</Method>

<Method name="cadTiposDiagnosticos">
<Description><![CDATA[Inicio -- Diagnostico]]></Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set:'$Data(^VARMAPPADiagnostico(0,"C90.0",1)) ^VARMAPPADiagnostico(0,"C90.0",1,1)="Diagnóstico"
	Set:'$Data(^VARMAPPADiagnostico(0,"C90.0",2)) ^VARMAPPADiagnostico(0,"C90.0",2,1)="Classificação Molecular"
	Set:'$Data(^VARMAPPADiagnostico(0,"C90.0",3)) ^VARMAPPADiagnostico(0,"C90.0",3,1)="Risco Citogenético-Molecular"
	Set:'$Data(^VARMAPPADiagnostico(0,"C90.0",4)) ^VARMAPPADiagnostico(0,"C90.0",4,1)="Risco Mieloma Indolente"
	Set:'$Data(^VARMAPPADiagnostico(0,"C90.0",5)) ^VARMAPPADiagnostico(0,"C90.0",5,1)="Escore de Fragilidade"
	Set:'$Data(^VARMAPPADiagnostico(0,"C91.1",1)) ^VARMAPPADiagnostico(0,"C91.1",1,1)="Diagnóstico"
	Set:'$Data(^VARMAPPADiagnostico(0,"C91.1",2)) ^VARMAPPADiagnostico(0,"C91.1",2,1)="Tempo de duplic. linfócitos"	
	Return $$$OK]]></Implementation>
</Method>

<Method name="recuperaUltimoDiagnostico">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente="",codCID="",ficha=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set tRetorno = 1
	If (codPaciente = "") {
		Set codPaciente	= $Get(%request.Data("paciente",1))
		Set codCID		= $Get(%request.Data("codCID",1))
		Set ficha		= $Get(%request.Data("ficha",1))
		Set tRetorno 	= 0
	}
	Set dtHrCalculo = ""
	Set diagnosticoForm = ""

	If ($Data(^VARMAPPADiagnostico(YM, codCID))) {
		;
		Set ultCalc = $Data(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID))
		;
		Set sequencia = ""
		For {
			Set sequencia = $Order(^VARMAPPADiagnostico(YM, codCID, sequencia))
			Quit:sequencia=""
		
			If (diagnosticoForm'="") {
				Set diagnosticoForm = diagnosticoForm _ "<tr><td colspan='2' style='height:5px;'></td></tr>"	
			}
			Set objeto = $Get(^VARMAPPADiagnostico(YM, codCID, sequencia, 1))

			If (ultCalc'=""&&($Data(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, sequencia)))) {
				set estilo = "corEstadiado"
				Set objVARPEPPremiumDiagnostico = $Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, sequencia, 1))
				If (dtHrCalculo = "") Set dtHrCalculo = $$$VARPEPPremiumDiagnosticoDataHora(objVARPEPPremiumDiagnostico)
			}Else{
				Set estilo = "corNaoEstadiado"
				Set objVARPEPPremiumRiscoTrombose = ""
				Set camposPend = ""
				If (sequencia=1) {
					Set camposPend = "<b>Campos pendente "_$$$VARMAPPADiagnosticoDescricao(objeto)_":</b>"
					Set retCalc = ##Class(VAR.CSP.MAPPA).calculaDiagnostico(codPaciente,codCID,ficha)
					If (retCalc="") {
						If (codCID = "C90.0") {
							Set camposPend = camposPend_"<br>&nbsp; Avaliação Diagnostica - Questionário Diagnóstico"
						}Else{
							Set camposPend = camposPend_"<br>&nbsp; Avaliação clínica e sintomas B - Questionário Diagnóstico"
						}
					}
				}
				If (sequencia=2) {
					Set camposPend = "Campos pendente "_$$$VARMAPPADiagnosticoDescricao(objeto)_":"
					if (codCID = "C90.0") {
						;
						If ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
						;
						Set retCalc = ##Class(VAR.CSP.MAPPA).calculaClassificaoMolecular(codPaciente, codCID, ficha)
						If ($Piece(retCalc,Y,1)=0) {
							Set camposPend = $Piece(retCalc,Y,2)
						}
					}Else{
						Set camposPend = ""
						;Set retCalc = ##Class(VAR.CSP.MAPPA).calculaTempoDuplicacaoLinfocitos(codPaciente, codCID, ficha)
						;If (retCalc = "") {
						;	Set camposPend = camposPend _"<br>&nbsp; Linfócitos"
						;}
					}
				}
				If (sequencia=3) {
					if (codCID = "C90.0") {
						;
						If ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					}
					Set camposPend = "Campos pendente "_$$$VARMAPPADiagnosticoDescricao(objeto)_":"
					Set retCalc = ##Class(VAR.CSP.MAPPA).calculaRiscoCitogenetico(codPaciente, codCID, ficha)
					If ($Piece(retCalc,Y,1)=0) {
						Set camposPend = $Piece(retCalc,Y,2)
					}
				}
				If (sequencia=4) {
					if (codCID = "C90.0") {
						;
						If ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'="RDD")) {
							   Continue
						}
					}
					Set camposPend = "Campos pendente "_$$$VARMAPPADiagnosticoDescricao(objeto)_":"
					Set retCalc = ##Class(VAR.CSP.MAPPA).calculaRiscoMielomaIndolente(codPaciente, codCID, ficha)
					If ($Piece(retCalc,Y,1)=0) {
						Set camposPend = $Piece(retCalc,Y,2)
					}
				}
				If (sequencia=5) {
					if (codCID = "C90.0") {
						;
						If ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'=""&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'="RDB")&&
						   ($Piece($Get(^VARPEPPremiumDiagnostico(YM, codPaciente, codCID, 1, 1)),"~",5)'="RDC")) {
							   Continue
						}
					}
					Set camposPend = "Campos pendente "_$$$VARMAPPADiagnosticoDescricao(objeto)_":"
					Set retCalc = ##Class(VAR.CSP.MAPPA1).calculaEscoreFragilidade(codPaciente, codCID, ficha)
					If ($Piece(retCalc,Y,1)=0) {
						Set camposPend = $Piece(retCalc,Y,2)
					}
				}
			}
			Set diagnosticoForm = diagnosticoForm _ 
				"<tr>" _
					"<td style='width:175px'>"_
						$$$VARMAPPADiagnosticoDescricao(objeto)_
						": <span class='camposEstadiamento'><b>"_
						$Select(estilo="corNaoEstadiado"||($$$VARMAPPADiagnosticoDescricao1(objeto)=""):"",1:$$$VARMAPPADiagnosticoDescricao1(objeto)_" ")_
						$Select(estilo="corNaoEstadiado":"Pendente",1:$$$VARPEPPremiumDiagnosticoResultado(objVARPEPPremiumDiagnostico))_
						"</b>"_
					"</td>" _
					"<td style='text-align:center;width:25px'>"_
						"<div id='popDiagDiagnostico"_sequencia_"' class='estadiamentoInfoI "_estilo_" fa fa-info-circle' "_
						$Select(
							sequencia=2&&(codCID="C91.1"):"",
							sequencia'=1&&(sequencia'=4):"style='cursor:pointer; title='Clique para consultar as referências' ",
							1:"")_
						"conteudo='"_
						$Select(
							estilo'="corNaoEstadiado":$$$VARPEPPremiumDiagnosticoRegra(objVARPEPPremiumDiagnostico),
							1:camposPend
						)_
						"' xWidth='460' onClick='consReferenciaDiagnostico("_sequencia_");' "_
						"onMouseOver='exibirPopoverDiagnostico(1, this);'  onMouseOut='exibirPopoverDiagnostico(0, this);'>"_
						"</div>"_
					"</td>"_
				"</tr>"
		}
	}
	If (tRetorno = 0) {
		Write dtHrCalculo_Y_diagnosticoForm
		Return $$$OK
	}	
	Return dtHrCalculo_Y_diagnosticoForm]]></Implementation>
</Method>

<Method name="calculaEscoreFragilidade">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	if cid'="C90.0" quit ""

	Set refer = "<hr><b>Referência:</b><br>"
	Set refer = refer _ "- Palumbo A, Bringhen S, Mateos MV, et al. Geriatric assessment predicts survival and toxicities in elderly myeloma patients: an International Myeloma Working Group report. Blood. 2015 Mar 26;125(13):2068-7"
	
	Set flagPend = 0
	Set retPend = "<b>Campos pendente Escore de Fragilidade:</b>"
	set regra = "<b>Regra aplicada para Escore de Fragilidade:</b>"	
	
	Set xTipoDiag = $Piece(##Class(VAR.CSP.MAPPA).calculaDiagnostico(codPaciente,cid,ficha),"~",4)
	If (xTipoDiag '= "RDB" && (xTipoDiag '= "RDC")) {
		Set flagPend = 1
		Set retPend = retPend _ "<li>Diagnóstico: Mieloma Múltiplo</li>"
	}
	;Set regra = regra _ "<br>&nbsp; Diagnóstico: Mieloma Múltiplo"	
	;
	Set pontCharlson  = 0, retPendCharlson = ""
	Set campo = 48537
	For contCampo=1:1:15 {
		Set valor = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,$Increment(campo)),"~",1)
		If (valor="") {
			Set retPendCharlson = retPendCharlson _ "<li>"_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, campo),"<br>"," ")_"</li>"
		}ElseIf (campo=48549) {
				Set:valor=2 pontCharlson = pontCharlson + 1
				Set:valor=3 pontCharlson = pontCharlson + 2
		}ElseIf (campo=48550) {
				Set:valor=2 pontCharlson = pontCharlson + 2
				Set:valor>2 pontCharlson = pontCharlson + 3
		}ElseIf (campo=48551) {
				Set:valor=2 pontCharlson = pontCharlson + 1
				Set:valor>2 pontCharlson = pontCharlson + 2
		}ElseIf (campo=48552) {
				Set:valor=2 pontCharlson = pontCharlson + 2
				Set:valor=3 pontCharlson = pontCharlson + 6
		}Elseif (valor=1) {
			If (campo=48538) {
				Set pontCharlson = pontCharlson + 6
			}ElseIf (campo>48542&&(campo<48546)) {
				Set pontCharlson = pontCharlson + 2
			}Else{
				Set pontCharlson = pontCharlson + 1
			}
		}
	}
	If (retPendCharlson'="") {
		Set retPend = retPend _ "<b>Avaliação Diagnostica - Fragilidade/Performance Status - Pontuação de Charlson</b>"_retPendCharlson
		Set flagPend = 1
	}
	;
	Set pontBADL = 0, retPendBADL = ""
	Set campo = 48552
	For contCampo=1:1:6 {
		Set valor = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,$Increment(campo)),"~",1)
		If (valor="") {
			Set retPendBADL= retPendBADL_ "<li>"_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, campo),"<br>"," ")_"</li>"
		}Elseif (valor=1) {
			Set pontBADL = pontBADL+ 1
		}
	}
	If (retPendBADL'="") {
		Set retPend = retPend _ "<b>Avaliação Diagnostica - Fragilidade/Performance Status - Pontuação de Escala de Atividades Básicas da Vida Diária (ADL) KATZ</b>"_retPendBADL
		Set flagPend = 1
	}
	;
	Set pontAIVD = 0, retPendAIVD = ""
	Set campo = 48558
	For contCampo=1:1:8 {
		Set valor = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,$Increment(campo)),"~",1)
		If (valor="") {
			Set retPendAIVD= retPendAIVD_ "<li>"_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, campo),"<br>"," ")_"</li>"
		}Else{
			If (campo=48559) { Set:valor<4 pontAIVD = pontAIVD + 1 }
			If (campo=48560) { Set:valor=1 pontAIVD = pontAIVD + 1 }	
			If (campo=48561) { Set:valor=1 pontAIVD = pontAIVD + 1 }
			If (campo=48562) { Set:valor<5 pontAIVD = pontAIVD + 1 }	
			If (campo=48563) { Set:valor<3 pontAIVD = pontAIVD + 1 }
			If (campo=48564) { Set:valor<4 pontAIVD = pontAIVD + 1 }	
			If (campo=48565) { Set:valor=1 pontAIVD = pontAIVD + 1 }
			If (campo=48566) { Set:valor<3 pontAIVD = pontAIVD + 1 }	
		}
	}
	If (retPendAIVD'="") {
		Set retPend = retPend _ "<b>Avaliação Diagnostica - Fragilidade/Performance Status - Pontuação de Escala de Atividades Instrumentais de Vida Diária (AIVD)</b>"_retPendAIVD
		Set flagPend = 1
	}
	;
	If (flagPend = 0) {
		Set pontTotal = 0
		Set objMEDPatient = $Get(^MEDPatient(0, codPaciente, 1))
		Set idade = ##Class(VAR.CSP.MAPPA).getIdade($$$MEDPatientDOB(objMEDPatient))
    	Set regra = regra_"<li>Idade: "_idade_$Select(idade<=1:" Ano",1:" Anos")_" "
    	If (idade >=76 && (idade <=80)) {
	    	Set pontTotal = pontTotal + 1,regra = regra_"(+1 Ponto)</li>"
    	}ElseIf (idade >80) {
	    	Set pontTotal = pontTotal + 2,regra = regra_"(+2 Pontos)</li>"
    	}Else{
	    	Set regra = regra_"(+0 Ponto)</li>"
    	}
    	Set regra = regra_"<li>Charlson: "_pontCharlson_" "
    	If (pontCharlson >= 2) Set pontTotal = pontTotal + 1,regra = regra_"(+1 Ponto)</li>"
		Else  Set regra = regra_"(+0 Ponto)</li>"
		Set regra = regra_"<li>(ADL) KATZ: "_pontBADL_" "
    	If (pontBADL <= 4) Set pontTotal = pontTotal + 1,regra = regra_"(+1 Ponto)</li>"
		Else  Set regra = regra_"(+0 Ponto)</li>"
		Set regra = regra_"<li>AIVD: "_pontAIVD_" "
    	If (pontAIVD <=5) Set pontTotal = pontTotal + 1,regra = regra_"(+1 Ponto)</li>"
		Else  Set regra = regra_"(+0 Ponto)</li>"
		Set regra = regra_"<li><b>Escore Total: "_(+pontTotal_" Ponto(s)")_" "
		;
		Set status = ""
		If (+pontTotal=0) { Set status = "FIT"
		}ElseIf (+pontTotal=1) { Set status = "Intermediário" ;Aptidão Intermediária" ;Intermediate-fitness" ;Intermediário
		}Else { Set status = "Frágil" } ;Frail
		;
		Set ret = 	"O sistema de pontuação (intervalo de 0 a 5), com base na idade, comorbidades, condições cognitivas "_
					"e físicas, identifica 3 grupos de pacientes:"_
					"<li>apto (pontuação = 0)</li>"_
					"<li>aptidão intermediária (pontuação = 1)</li>"_
					"<li>frágil (pontuação ≥2)</li>"_
					"A sobrevida global de 3 anos foi de 84% em pacientes aptos, 76% em pacientes de aptidão "_
					"intermediária (HR 1,61, IC 95% 1,02-2,56, p = 0,042) e 57% em pacientes frágeis "_
					"(HR 3,57 IC 95% 2,37-5,39, p <0,001). A incidência cumulativa de eventos adversos não "_
					"hematológicos de grau ≥3 em 12 meses foi de 22,2% em pacientes aptos, 26,4% em aptidão "_
					"intermediária (HR 1,23, IC 95% 0,89-1,71; p 0,217) e 34,0% (HR 1,74, 95% IC 1,28-2,38; p <0,001) "_
					"em pacientes frágeis. A incidência cumulativa de descontinuação do tratamento em 12 meses foi "_
					"de 16,5% em pacientes aptos, 20,8% em aptidão intermediária (HR 1,41, IC 95% 1,00-2,01, p = 0,052) "_
					"e 31,2% (HR 2,21, IC 95% 1,57-3,09; p <0,001) em pacientes frágeis.<br>"_
					"Este escore de fragilidade prevê mortalidade e o risco de toxicidade em pacientes idosos "_
					"com mieloma. O International Myeloma Working group propõe esse escore para medir a fragilidade "_
					"no processo de tomada de decisão do tratamento e no planejamento de futuros ensaios clínicos."
		;
		Set ret = ret _"<hr>"_regra
		;
		Quit "1~"_status_"~"_ret_refer
	}
	;
	Quit "0~"_retPend_refer]]></Implementation>
</Method>

<Method name="calculaTodosDiagnostico">
<ClassMethod>1</ClassMethod>
<FormalSpec>paciente="",dataPEP="",codCID="",ficha=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set listRetorno = {}

	If (paciente = "") {
		Set paciente	= $Get(%request.Data("paciente",1))
		Set dataPEP		= $Get(%request.Data("dataPEP",1))
		Set codCID		= $Get(%request.Data("codCID",1))
		Set ficha		= $Get(%request.Data("ficha",1))
	}

	If ('$Data(^VARMAPPADiagnostico(0, codCID))) Return ""
	
	If ($Data(^VARPEPPremiumDiagnostico(0, paciente, codCID))) {
		Merge ^VARPEPPremiumDiagnosticoHist(0, paciente, codCID, $Horolog) = ^VARPEPPremiumDiagnostico(0, paciente, codCID)
	}

	Kill ^VARPEPPremiumDiagnostico(0, paciente, codCID)
	
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARMAPPADiagnostico(0, codCID, sequencia))
		Quit:sequencia=""
		
		If (sequencia = 1) {
			Set ret = ##Class(VAR.CSP.MAPPA).calculaDiagnostico(paciente, codCID, ficha)	
			If ($Piece(ret,Y,1)'="") {
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,1) = $Horolog
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,2) = $Piece(ret,Y,1)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,3) = $Piece(ret,Y,3)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,4) = ficha
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,5) = $Piece(ret,Y,4)
				If (codCID = "C90.0") {
					Set valor48567 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(paciente,codCID,ficha,1,48567),"~",1)
					If (valor48567 = 3) {
						Set valor48700 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(paciente,codCID,ficha,1,48700),"~",1)
						if (valor48700 '= "") {
							Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,6) = $Piece($$$VARWorkFlowPEPOpcoes($Get(^VARWorkFlowPEP(0, codCID, 48700, 1))),"|",valor48700)
						}	
					}
				}
			}
		}
		If (sequencia = 2) {
			If (codCID = "C90.0") {
				Set ret = ##Class(VAR.CSP.MAPPA).calculaClassificaoMolecular(paciente, codCID, ficha)
				If ($Piece(ret,Y,1)'="0") {
					Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,1) = $Horolog
					Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,2) = $Piece(ret,Y,2)
					Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,3) = $Piece(ret,Y,3)
					Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,4) = ficha
				}
			}Else{
				Set ret = ##Class(VAR.CSP.MAPPA).calculaTempoDuplicacaoLinfocitos(paciente, codCID, ficha)
				If (ret'="") {
					Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,1) = $Horolog
					If (ret<=0) {
						Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,2) = "NA"
						Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,3) = "Não aplicável. Contagem de linfócitos estável ou decrescente"
					}Else{
						Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,2) = $FNumber(ret,".")_" mes(es)"
						Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,3) = ""
					}	
					Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,4) = ficha
				}
			}
		}
		If (sequencia = 3) {
			Set ret = ##Class(VAR.CSP.MAPPA).calculaRiscoCitogenetico(paciente, codCID, ficha)
			If ($Piece(ret,Y,1)'=0) {
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,1) = $Horolog
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,2) = $Piece(ret,Y,2)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,3) = $Piece(ret,Y,3)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,4) = ficha
			}
		}
		If (sequencia = 4) {
			Set ret = ##Class(VAR.CSP.MAPPA).calculaRiscoMielomaIndolente(paciente, codCID, ficha)
			If ($Piece(ret,Y,1)'=0) {
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,1) = $Horolog
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,2) = $Piece(ret,Y,2)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,3) = $Piece(ret,Y,3)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,4) = ficha
			}
		}
		If (sequencia = 5) {
			Set ret = ##Class(VAR.CSP.MAPPA1).calculaEscoreFragilidade(paciente, codCID, ficha)
			If ($Piece(ret,Y,1)'=0) {
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,1) = $Horolog
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,2) = $Piece(ret,Y,2)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,3) = $Piece(ret,Y,3)
				Set $Piece(^VARPEPPremiumDiagnostico(0, paciente, codCID, sequencia, 1),Y,4) = ficha
			}
		}
	}

	If ('$Data(^VARPEPPremiumDiagnostico(0, paciente, codCID))) {
		Set listRetorno.mensagem = "Há campos pendentes para a realização do cálculo!"				
		Set listRetorno.tipo	 = "warning"
		Set listRetorno.status	 = 0
	}Else {
		Set listRetorno.mensagem = "Cálculo realizado com sucesso!"				
		Set listRetorno.tipo	 = "success"
		Set listRetorno.status	 = 1
	}
	
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="recuperaUltimoRiscoTrombose">
<Description><![CDATA[Final -- Diagnostico
Inicio -- Risco Trombose]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente="",codCID="",ficha=""</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set tRetorno = 1
	If (codPaciente = "") {
		Set codPaciente	= $Get(%request.Data("paciente",1))
		Set codCID		= $Get(%request.Data("codCID",1))
		Set ficha		= $Get(%request.Data("ficha",1))
		Set tRetorno 	= 0
	}
	Set dtHrCalculo = ""
	Set riscoTromboseForm = ""
	If ($Data(^VARMAPPARiscoTrombose(YM, codCID))) {
		;
		Set ultCalc = $Data(^VARPEPPremiumRiscoTrombose(YM, codPaciente, codCID))
		;
		Set sequencia = ""
		For {
			Set sequencia = $Order(^VARMAPPARiscoTrombose(YM, codCID, sequencia))
			Quit:sequencia=""
			If (riscoTromboseForm'="") {
				Set riscoTromboseForm = riscoTromboseForm _ "<tr><td colspan='2' style='height:5px;'></td></tr>"	
			}
			Set objeto = $Get(^VARMAPPARiscoTrombose(YM, codCID, sequencia, 1))

			If (ultCalc'=""&&($Data(^VARPEPPremiumRiscoTrombose(YM, codPaciente, codCID, sequencia)))) {
				set estilo = "corEstadiado"
				Set objVARPEPPremiumRiscoTrombose = $Get(^VARPEPPremiumRiscoTrombose(YM, codPaciente, codCID, sequencia, 1))
				If (dtHrCalculo = "") Set dtHrCalculo = $$$VARPEPPremiumRiscoTromboseDataHora(objVARPEPPremiumRiscoTrombose)
			}Else{
				Set estilo = "corNaoEstadiado"
				Set objVARPEPPremiumRiscoTrombose = ""
				Set camposPend = ""
				If (codCID="C90.0"&&(sequencia=1)) {
					Set camposPend = "Campos pendente IMPEDE – VTE:"
					Set retCalc = ..calculaRiscoTromboseIMPEDEVTE(codPaciente,codCID,ficha)
					If ($Piece(retCalc,Y,1)=1) {
						Set camposPend = $Piece(retCalc,Y,2)_$Piece(retCalc,Y,3)
					}Else{
						Set camposPend = camposPend_$Piece(retCalc,Y,4)
					
					}
				}
				If (codCID="C90.0"&&(sequencia=2)) {
					Set camposPend = "Campos pendente SAVED:"
					Set retCalc = ..calculaRiscoTromboseSAVED(codPaciente,codCID,ficha)
					If ($Piece(retCalc,Y,1)=1) {
						Set camposPend = $Piece(retCalc,Y,2)_$Piece(retCalc,Y,3)
					}Else{
						Set camposPend = camposPend_$Piece(retCalc,Y,4)
					
					}
				}
			}
			
			
			Set riscoTromboseForm = riscoTromboseForm _ 
				"<tr>" _
					"<td style='width:175px'>"_
						$$$VARMAPPARiscoTromboseDescricao(objeto)_
						": <span class='camposEstadiamento'><b>"_
						$Select(estilo="corNaoEstadiado"||($$$VARMAPPARiscoTromboseDescricao1(objeto)=""):"",1:$$$VARMAPPARiscoTromboseDescricao1(objeto)_" ")_
						$Select(estilo="corNaoEstadiado":"Pendente",1:$$$VARPEPPremiumRiscoTromboseResultado(objVARPEPPremiumRiscoTrombose))_
						"</b>"_
					"</td>" _
					"<td style='text-align:center;width:25px'>"_
						"<div id='popDiagRiscoTrombose"_sequencia_"' class='estadiamentoInfoI "_estilo_" fa fa-info-circle' "_
						"style='cursor:pointer;' conteudo='"_
						$Select(
							estilo'="corNaoEstadiado":$$$VARPEPPremiumRiscoTromboseRegra(objVARPEPPremiumRiscoTrombose),
							1:camposPend
						)_
						"' xWidth='430' onClick='consReferenciaRiscoTrombose("_sequencia_");' "_
						"title='Clique para consultar as referências' onMouseOver='exibirPopoverDiagnostico(1, this);' "_
						"onMouseOut='exibirPopoverDiagnostico(0);'>"_
						"</div>"_
					"</td>"_
				"</tr>"
		}
	}
	If (tRetorno = 0) {
		Write dtHrCalculo_Y_riscoTromboseForm
		Return $$$OK
	}	
	Return dtHrCalculo_Y_riscoTromboseForm]]></Implementation>
</Method>

<Method name="calculaRiscoTrombose">
<ClassMethod>1</ClassMethod>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set listRetorno = {}

	Set paciente	= $Get(%request.Data("paciente",1))
	Set dataPEP		= $Get(%request.Data("dataPEP",1))
	Set codCID		= $Get(%request.Data("codCID",1))
	Set ficha		= $Get(%request.Data("ficha",1))

	If ('$Data(^VARMAPPARiscoTrombose(0, codCID))) Return ""
	
	Set risTromboseIMPEDEVTE 	= ..calculaRiscoTromboseIMPEDEVTE(paciente,codCID,ficha)
	Set risTromboseSAVED 		= ..calculaRiscoTromboseSAVED(paciente,codCID,ficha)
	
	If ($Data(^VARPEPPremiumRiscoTrombose(0, paciente, codCID))) {
		Merge ^VARPEPPremiumRiscoTromboseHist(0, paciente, codCID, $Horolog) = ^VARPEPPremiumRiscoTrombose(0, paciente, codCID)
	}

	Kill ^VARPEPPremiumRiscoTrombose(0, paciente, codCID) 
	If ($Piece(risTromboseIMPEDEVTE,Y,1)=0) {
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 1, 1),Y,1) = $Horolog
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 1, 1),Y,2) = $Piece(risTromboseIMPEDEVTE,Y,2)
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 1, 1),Y,3) = $Piece(risTromboseIMPEDEVTE,Y,3)
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 1, 1),Y,4) = ficha
	}
	;
	If ($Piece(risTromboseSAVED,Y,1)=0) {
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 2, 1),Y,1) = $Horolog
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 2, 1),Y,2) = $Piece(risTromboseSAVED,Y,2)
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 2, 1),Y,3) = $Piece(risTromboseSAVED,Y,3)
		Set $Piece(^VARPEPPremiumRiscoTrombose(0, paciente, codCID, 2, 1),Y,4) = ficha
	}
	
	If ('$Data(^VARPEPPremiumRiscoTrombose(0, paciente, codCID))) {
		Set listRetorno.mensagem = "Há campos pendentes para a realização do cálculo!"				
		Set listRetorno.tipo	 = "warning"
		Set listRetorno.status	 = 0
	}Else {
		Set listRetorno.mensagem = "Cálculo realizado com sucesso!"				
		Set listRetorno.tipo	 = "success"
		Set listRetorno.status	 = 1
	}

	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="calculaRiscoTromboseIMPEDEVTE">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	Set refer = "<hr><b>Referência:</b><br>"
	Set refer = refer _ "- Sanfilippo KM, et al. Predicting venous thromboembolism in multiple myeloma: development and validation of the IMPEDE VTE score. Am J Hematol. 2019;94(11):1176-1184.<br>"
	Set refer = refer _ "- Covut F, et al.. Validation of the IMPEDE VTE score for prediction of venous thromboembolism in multiple myeloma: a retrospective cohort study. Br J Haematol. 2021 Jun;193(6):1213-1219."
	;
	set regra="<b>Regra aplicada para IMPEDE – VTE:</b>"
	set pende="<b>Campos pendente IMPEDE – VTE:</b>"
	Set score		= 0
	Set valor48510 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48510),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48510),"<br>"," ") _ " = Sim: <b>"_$Select(valor48510=1:"Sim",valor48510=0:"Não",1:"")_"</b>"
	If (valor48510="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48510),"<br>"," ")
	Set valor48511 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48511),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48511),"<br>"," ") _ " = Sim: <b>"_$Select(valor48511=1:"Sim",valor48511=0:"Não",1:"")_"</b>"
	If (valor48511="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48511),"<br>"," ")
	Set valor48512 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48512),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48512),"<br>"," ") _ " = Sim: <b>"_$Select(valor48512=1:"Sim",valor48512=0:"Não",1:"")_"</b>"
	If (valor48512="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48512),"<br>"," ")
	Set valor48513 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48513),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48513),"<br>"," ") _ " = Sim: <b>"_$Select(valor48513=1:"Sim",valor48513=0:"Não",1:"")_"</b>"
	If (valor48513="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48513),"<br>"," ")
	Set valor48514 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48514),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48514),"<br>"," ") _ " = Sim: <b>"_$Select(valor48514=1:"Sim",valor48514=0:"Não",1:"")_"</b>"
	If (valor48514="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48514),"<br>"," ")
	Set valor48515 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48515),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48515),"<br>"," ") _ " = Sim: <b>"_$Select(valor48515=1:"Sim",valor48515=0:"Não",1:"")_"</b>"
	If (valor48515="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48515),"<br>"," ")
	Set valor48516 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48516),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48516),"<br>"," ") _ " = Sim: <b>"_$Select(valor48516=1:"Sim",valor48516=0:"Não",1:"")_"</b>"
	If (valor48516="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48516),"<br>"," ")
	Set valor48517 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48517),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48517),"<br>"," ") _ " = Sim: <b>"_$Select(valor48517=1:"Sim",valor48517=0:"Não",1:"")_"</b>"
	If (valor48517="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48517),"<br>"," ")
	Set valor48518 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48518),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48518),"<br>"," ") _ " = Sim: <b>"_$Select(valor48518=1:"Sim",valor48518=0:"Não",1:"")_"</b>"
	If (valor48518="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48518),"<br>"," ")
	Set valor48519 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48519),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48519),"<br>"," ") _ " = Sim: <b>"_$Select(valor48519=1:"Sim",valor48519=0:"Não",1:"")_"</b>"
	If (valor48519="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48519),"<br>"," ")
	Set valor48520 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48520),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48520),"<br>"," ") _ " = Sim: <b>"_$Select(valor48520=1:"Sim",valor48520=0:"Não",1:"")_"</b>"
	If (valor48520="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48520),"<br>"," ")
	Set valor48521 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48521),"~",1)	
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48521),"<br>"," ") _ " = Sim: <b>"_$Select(valor48521=1:"Sim",valor48521=0:"Não",1:"")_"</b>"
	If (valor48521="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48521),"<br>"," ")
	;
	If (valor48510=""||(valor48511="")||(valor48512="")||(valor48513="")||(valor48514="")||(valor48515="")||
	   (valor48516="")||(valor48517="")||(valor48518="")||(valor48519="")||(valor48520="")||(valor48521="")) { 
	   Return "1~"_pende_"~"_refer
	}
	;
	If (valor48510=1) Set score = score + 4
	If (valor48511=1) Set score = score + 1
	If (valor48512=1) Set score = score + 4
	If (valor48513=1) Set score = score + 1
	If (valor48514=1) Set score = score + 3
	If (valor48515=1) Set score = score + 4
	If (valor48516=1) Set score = score + 2
	If (valor48517=1) Set score = score - 3
	If (valor48518=1) Set score = score + 5
	If (valor48519=1) Set score = score + 2
	If (valor48520=1) Set score = score - 4
	If (valor48521=1) Set score = score - 3
	;
	Set regra = regra_refer
	;
	Set status = ""
	If (score < 4) { Set status = "3,3% (2,6 - 4,1)"
	}ElseIf (score < 8) { Set status = "8,3% (7,1 - 9,8)"
	}Else { Set status = "15,2% (12,1 - 19)" }
	Return "0~"_status_"~"_regra_"~"_refer]]></Implementation>
</Method>

<Method name="calculaRiscoTromboseSAVED">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[	Set refer = "<hr><b>Referência:</b><br>"
	Set refer = refer _ "- Li A, al. Derivation and Validation of a Risk Assessment Model for Immunomodulatory Drug-Associated Thrombosis Among Patients With Multiple Myeloma. J Natl Compr Canc Netw. 2019;17(7):840-847. doi:10.6004/jnccn.2018.7273"

	Set objMEDPatient = $Get(^MEDPatient(0, codPaciente, 1))
	set regra="<b>Regra aplicada para SAVED:</b>"
	set pende="<b>Campos pendente SAVED:</b>"
	Set score		= 0
	;
	Set valor48522 	= $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48522),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48522),"<br>"," ") _ " = Sim: <b>"_$Select(valor48522=1:"Sim",valor48522=0:"Não",1:"")_"</b>"
	If (valor48522="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48522),"<br>"," ")
	If (valor48522) Set score = score + 2
	;
	Set valor48523 	= $Piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48523),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48523),"<br>"," ") _ " = Sim: <b>"_$Select(valor48523=1:"Sim",valor48523=0:"Não",1:"")_"</b>"
	If (valor48523="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48523),"<br>"," ")
	If (valor48523) Set score = score - 3
	;	
	Set valor48525 	= $Piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48525),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48525),"<br>"," ") _ " = Sim: <b>"_$Select(valor48525=1:"Sim",valor48525=0:"Não",1:"")_"</b>"
	If (valor48525="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48525),"<br>"," ")
	If (valor48525) Set score = score + 3
	;
	Set idade = ##Class(VAR.CSP.MAPPA).getIdade($$$MEDPatientDOB(objMEDPatient))
	If idade>0 Set idadeD = " anos"
	If idade<2 Set idadeD = " ano"
	If idade="" Set idadeD = ""
	Set regra = regra _ "<br>&nbsp; Idade ≥ 80 anos: <b>"_idade_idadeD_"</b>"
	If (idade > 79) Set score = score + 1
	;	
	Set valor48526 	= $Piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48526),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48526),"<br>"," ") _ " = Sim: <b>"_$Select(valor48526=1:"Sim",valor48526=0:"Não",1:"")_"</b>"
	If (valor48526="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48526),"<br>"," ")
	If (valor48526) Set score = score + 1
	;
	Set valor48527 	= $Piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,1,48527),"~",1)
	Set regra = regra _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48527),"<br>"," ") _ " = Sim: <b>"_$Select(valor48527=1:"Sim",valor48527=0:"Não",1:"")_"</b>"
	If (valor48527="") Set pende = pende _ "<br>&nbsp; "_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid, 48527),"<br>"," ")
	If (valor48527) Set score = score + 2
	;
	Set regra = regra _ "<hr><b>Recomendação NCCN:</b><br>"
	;
	Set recomendacao = "", status = ""
	If (score < 2) { 
		Set status = "Baixo Risco"
		set regra = regra _ "&nbsp;  <b>&diams;</b> Sem tratamento; ou<br>"
		set regra = regra _ "&nbsp;  <b>&diams;</b> Aspirina 81 – 325 mg VO 1x ao dia;"
	}Else { 
		Set status = "Alto Risco" 
		set regra = regra _ "&nbsp; <b>&diams;</b> Enoxaparina 40 mg SC 1x ao dia; ou<br>"
		set regra = regra _ "&nbsp; <b>&diams;</b> Dalteparina 5.000 unidades SC 1x ao dia; ou<br>"
		set regra = regra _ "&nbsp; <b>&diams;</b> Warfarina com alvo de RNI entre 2 e 3; ou<br>"
		set regra = regra _ "&nbsp; <b>&diams;</b> Apixaban 2,5 mg VO de 12 em 12h;"
	}
	;
	If (valor48522=""||(valor48523="")||(valor48525="")||(valor48526="")||(valor48527="")) { 
	   Return "1~"_pende_"~"_refer
	}
	;
	Set regra = regra_refer
	;
	Return "0~"_status_"~"_regra_"~"_refer]]></Implementation>
</Method>

<Method name="getResultado">
<Description><![CDATA[Fim -- Risco Trombose

Inicio -- Nova aba de Exames laboratorias]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pData</FormalSpec>
<Implementation><![CDATA[	Set codPaciente = $Piece(pId,"||",1)
	Set codPerfil = $Piece(pId,"||",2)
	Set codComponente = $Piece(pId,"||",3)
	Set codExame = $Piece(pId,"||",4)
	Set pData = $ZDH(pData,4)

	Set resultado = $Piece($Get(^VARPEPResultado(0,codPaciente,codPerfil,codComponente,codExame,pData,1)),"~",1)

	Set resultado = "<i><b>"_$$SQLGetDescricaoProduto^VARSQL(codExame)_"</b></i><br><br>"_$Replace(resultado,$c(10),"<br>")

	Quit resultado]]></Implementation>
</Method>

<Method name="ArmResultaExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pDatadoExame,pValor,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set codPaciente 	= $Piece(pId,"||",1)
	Set perfil 			= $Piece(pId,"||",2)
	Set composto 		= $Piece(pId,"||",3)
	Set exame 			= $Piece(pId,"||",4)
	Set pDatadoExame 	= $zdh(pDatadoExame,4)

	Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, codPaciente, perfil, composto, exame, pDatadoExame))
	Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
	Set $$$VARPEPResultadoUsuario(objVARVARPEPResultado) =  pYBED
	
	Set status = $$$Save("VARPEPResultado", codPaciente_","_perfil_","_composto_","_exame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)

	Quit status]]></Implementation>
</Method>

<Method name="listaPerfilExamesResultados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set YBED = $Get(%request.Data("YBED",1))
	set origem = $Get(%request.Data("origem",1))
	Set pTipoList = +$Get(%request.Data("pTipoList",1))
	Set retorno = []	
	if take="" set take=20

	Set rSet = ##class(%ResultSet).%New("Report.VARQueryExamesPerfil:VARQueryExamesPerfil")
	Set sc = rSet.Prepare()
	Set sc = rSet.Execute((skip+1), (skip+take), tipo, codigo, searchValue, YBED, pTipoList)	
	While (rSet.Next()) {
		set linha={}
		set linha.Codigo = rSet.%Get("Codigo")
		set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",linha.Codigo)
		set exames = ""
		while(rsLinha.%Next()){
			set exame = rsLinha.%Get("CodigodoExame")
			;set exame = $piece($get(^VARExames(0,exame,1)),"~",1)
			set exame = $piece($get(^INART(0,exame,1)),"~",1)
			set:exames'="" exames=exames_", "
			set exames = exames_exame
		}
		if exames'="" set exames=" ("_exames_")"
		else  set exames="("_rSet.%Get("Codigo")_") "
		set linha.Descricao = "("_rSet.%Get("Codigo")_") "_rSet.%Get("Descricao")
		set linha.DescricaoComposta = rSet.%Get("Descricao")_exames
		set linha.Perfil = rSet.%Get("Perfil")
		do retorno.%Push(linha)
	}

	Do retorno.%ToJSON()

	Return $$$OK]]></Implementation>
</Method>

<Method name="LimparResultaExameAddNew">
<ClassMethod>1</ClassMethod>
<FormalSpec>pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
	Kill ^mtemp.GetExameAddResult(pYBED)
	Kill ^mtemp.GetExameAdd(pYBED)
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getExamesAdicionados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	set YM 	= 0
	set Y 	= "~"

	set codPaciente = $get(%request.Data("codPaciente",1))
	set codCID		= $get(%request.Data("codCID",1))
	set YBED 		= $get(%request.Data("usuario",1))
	
	set sql="select PerfilExame, CompostoExame1, Exame, Resultado "
	set sql = sql_"From SQLUser.VARPEPResultado Where Company = 0 And Paciente = '"_codPaciente_"' "
	set sql = sql_"Group By PerfilExame, CompostoExame1, Exame"
	set rSet 			 	= ##class(%SQL.Statement).%ExecDirect("",.sql)
	while(rSet.%Next()){
		set ^mtemp.GetExameAdd(YBED, rSet.%Get("Exame"))=""
		set ^mtemp.GetExameAddResult(YBED,rSet.%Get("PerfilExame")_"||"_rSet.%Get("CompostoExame1")_"||"_rSet.%Get("Exame"))=""
	}
	;
	If (codCID = "C90.0") {
		/*For codPerfil = "MIE" {
			Set codComposto = ""
			For {
				Set codComposto = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposto))	
				Quit:codComposto=""
				Set setExame = ""
				For {
					Set setExame = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposto,setExame))	
					Quit:setExame=""
					
					Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposto,setExame,1),"~",1)

					If ($Data(^mtemp.GetExameAdd(YBED, codExame))) Continue
					Set ^mtemp.GetExameAdd(YBED, codExame)=""
					Set ^mtemp.GetExameAddResult(YBED,codPerfil_"||"_codComposto_"||"_codExame)=""
				}
			}
		}*/
		For codComposto = "MIELO","ELPT","CRE" {
			Set setExame = ""
			For {
				Set setExame = $Order(^VARComposicaoExame(0,"EXIBICAO","SEMPERFIL",codComposto,setExame))	
				Quit:setExame=""
				
				Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO","SEMPERFIL",codComposto,setExame,1),"~",1)

				If ($Data(^mtemp.GetExameAdd(YBED, codExame))) Continue
				Set ^mtemp.GetExameAdd(YBED, codExame)=""
				Set ^mtemp.GetExameAddResult(YBED,"SEMPERFIL||"_codComposto_"||"_codExame)=""
			}
		}
		For codExame = "CKL","IGG","IGA","IGM","IGE","IMFUR","PURIC","DHL","B2MGBMG","URE","CAS" {
			If ($Data(^mtemp.GetExameAdd(YBED, codExame))) Continue
			Set ^mtemp.GetExameAdd(YBED, codExame)=""
			Set ^mtemp.GetExameAddResult(YBED,"SEMPERFIL||SEMCOMPOSTO||"_codExame)=""
		}
	}	
	/*set sql	="select * From SQLUser.VARWorkFlowPEP Where Company = 0 "
	set sql = sql_"And CodigodoCID = '"_codCID_"' And Predecessor In (72, 38)"
	set rSet = ##class(%SQL.Statement).%ExecDirect("",.sql)
	while(rSet.%Next()){
		If ('$Data(^VARWorkFlowAuxiliar(0,"Exames",rSet.%Get("Nome")))) Continue
		Set codExame = $$$VARWorkFlowAuxiliarCodigodoExamenoCadastrode(^VARWorkFlowAuxiliar(0,"Exames",rSet.%Get("Nome"),1))
		If (codExame = "") Continue
		If ($Data(^mtemp.GetExameAdd(YBED, codExame))) Continue
		set ^mtemp.GetExameAdd(YBED, codExame)=""
		set ^mtemp.GetExameAddResult(YBED,"SEMPERFIL||SEMCOMPOSTO||"_codExame)=""
	}*/
	Quit $$$OK]]></Implementation>
</Method>

<Method name="getExameAdd">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set arrayRetorno = []
	Set YBED = $Get(%request.Data("YBED",1))
	Set xCodExame = "" 
	For {
		Set xCodExame = $Order(^mtemp.GetExameAddResult(YBED, xCodExame)) 
		Quit:xCodExame=""

		Set codPerfil = $Piece(xCodExame,"||",1)
		Set codComposicao = $Piece(xCodExame,"||",2)
		Set codExame = $Piece(xCodExame,"||",3)

		Set descPerfil = ""
		If (codPerfil'="SEMPERFIL")	Set descPerfil = $$SQLGetDescricaoProduto^VARSQL(codPerfil)
		
		Set descComposicao = ""
		If (codComposicao'="SEMCOMPOSTO") Set descComposicao = $$SQLGetDescricaoProduto^VARSQL(codComposicao)
		;
		Set resultado = $Get(^mtemp.GetExameAddResult(YBED, codPerfil_"||"_codComposicao_"||"_codExame)) 
		;
		set listRetorno = {}
		set listRetorno.id = codPerfil_"||"_codComposicao_"||"_codExame
		set listRetorno.codPerfil = codPerfil
		set listRetorno.descPerfil = descPerfil
		set listRetorno.codComposto = codComposicao
		set listRetorno.descComposto = descComposicao
		set listRetorno.codExame = codExame
		set listRetorno.descExame = $$SQLGetDescricaoProduto^VARSQL(codExame)
		set listRetorno.resultado = resultado
		do arrayRetorno.%Push(listRetorno)
	}
	Do arrayRetorno.%ToJSON()
	Quit $$$OK

	Quit]]></Implementation>
</Method>

<Method name="ArmResultaExameNew">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente,pDatadoExame,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	if pDatadoExame["-" {
		set data=$piece(pDatadoExame,"-",3)_"/"_$piece(pDatadoExame,"-",2)_"/"_$piece(pDatadoExame,"-",1)
	} else {
		set data=pDatadoExame
	}
	Set pDatadoExame = $zdh(data,4)
	Set status = $$$OK

	Set xID = ""
	For {
		Set xID = $Order(^mtemp.GetExameAddResult(pYBED, xID))
		Quit:xID=""
		
		Set pValor = ^mtemp.GetExameAddResult(pYBED, xID)

		If (pValor = "") Continue
		
		Set perfil 		= $Piece(xID,"||",1)
		Set composto 	= $Piece(xID,"||",2)
		Set exame 		= $Piece(xID,"||",3)

		Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, pCodPaciente, perfil, composto, exame, pDatadoExame))
		
		If ($$$VARPEPResultadoUsuario(objVARVARPEPResultado) = "INTEGRACAO") Continue
		
		Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
		Set $$$VARPEPResultadoUsuario(objVARVARPEPResultado) =  pYBED
		
		Set status = $$$Save("VARPEPResultado", pCodPaciente_","_perfil_","_composto_","_exame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)
	}

	Kill ^mtemp.GetExameAddResult(pYBED)
	Kill ^mtemp.GetExameAdd(pYBED)

	Quit status]]></Implementation>
</Method>

<Method name="ArmResultaExameAddNew">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pValor,pYBED</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set ^mtemp.GetExameAddResult(pYBED, pId) = pValor

	Quit $$$OK]]></Implementation>
</Method>

<Method name="addExameResultado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set YBED 	= $Get(%request.Data("YBED",1))
	Set exame = $Get(%request.Data("exame",1))
	For count = 1 : 1 : $Length(exame,",") {
		If ('$Data(^mtemp.GetExameAdd(YBED, $Piece(exame,",",count)))) {
			Set ^mtemp.GetExameAdd(YBED, $Piece(exame,",",count)) = ""
			set ^mtemp.GetExameAddResult(YBED,"SEMPERFIL||SEMCOMPOSTO||"_$Piece(exame,",",count))=""
		}
	}]]></Implementation>
</Method>

<Method name="recResultadoCalculo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente = $Get(%request.Data("codPaciente",1))
	Set codCID		= $Get(%request.Data("codCID",1))
	Set dataExame 	= $ZDateH($Get(%request.Data("dataExame",1)),4)
	Set ficha		= $Get(%request.Data("ficha",1))
	Set fichaSeq	= $Get(%request.Data("fichaSeq",1))
	Set dataPEP		= $Get(%request.Data("dataPEP",1))

	Set retorno = []

	Set meuSQL = "Select Exame, Resultado From SQLUser.VARPEPResultado Where Company = 0 "
	Set meuSQL = meuSQL _ "And Paciente = '"_codPaciente_"' And DataExame = '"_dataExame_"' "
	Set meuSQL = meuSQL _ "Group By PerfilExame, CompostoExame1, Exame"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While (rSet.%Next()) {
		
		If (rSet.%Get("Resultado")="") Continue
		
		Set campoEst = ""
		Set flagEst  = 0
		Set codWorkFlow = $Order(^VARWorkFlowAuxiliars(0,2,rSet.%Get("Exame"),"Exames",""))
		If (codWorkFlow'=""&&($Data(^VARWorkFlowPEPs(0,30,codWorkFlow,codCID)))) {
			Set seqWorkFlow = ""
			For {
				Set seqWorkFlow = $Order(^VARWorkFlowPEPs(0,30,codWorkFlow,codCID,seqWorkFlow))
				Quit:seqWorkFlow=""
				Set flagEst = ##Class(VAR.CSP.MAPPA).verificaCampoEstadiamento(codCID,seqWorkFlow)
				If (flagEst=1) Set campoEst = seqWorkFlow
				Quit:flagEst=1
			}
		}
		If (campoEst = "") Continue 
		
		Set valorCampo = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,codCID,ficha,1,campoEst),"~",1)
		
		If (valorCampo'=""&&(valorCampo=rSet.%Get("Resultado"))) Continue
		
		Set listRetorno = {}
		Set listRetorno.campoEst = campoEst
		Set listRetorno.exame = rSet.%Get("Exame")
		Set listRetorno.exameDesc = $$SQLGetDescricaoProduto^VARSQL(rSet.%Get("Exame"))
		Set listRetorno.valorCampo = valorCampo
		Set listRetorno.resultado = rSet.%Get("Resultado")
		
		Do retorno.%Push(listRetorno)
	}

	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="carregaSugestaoPrescricaoNovo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente 	= $get(%request.Data("codPaciente",1))
	set cid 			= $get(%request.Data("codCID",1))
	set ficha 			= $get(%request.Data("ficha",1))
	set fichaSeq 		= $get(%request.Data("fichaSeq",1))
	set dataPEP 		= $get(%request.Data("dataPEP",1))
	set sequencia 		= $get(%request.Data("sequencia",1))
	if dataPEP'="" set dataPEP = dataPEP + 1
	set pCodRegime		= $get(%request.Data("pCodRegime",1))
	set pCiclo			= $get(%request.Data("pCiclo",1))
	set pManterAltDose 	= +$get(%request.Data("pManterAltDose",1))
	
	
	set valor = $piece(##class(VAR.CSP.MAPPA).recValorSalvo(codPaciente,cid,ficha,fichaSeq,sequencia),"~",1)
	set retorno = {}
	set retorno.flagJaPreparado = 0
	if pCodRegime="" {
		set retorno.erro = 1
		set retorno.mensagem = "Selecione uma sugestão terapêutica"
	}else{
		;
		;set linhaTratamento = $piece(valor,";",1)
		set regime = pCodRegime
		do ##class(VAR.CSP.MAPPA).limpaDosePrescrita(codPaciente,cid,ficha,YBED)
		;
		set objTratamento = $get(^VARWorkFlowRegTera(YM,cid,regime,1))
		set terapiadeSuporte = $$$VARWorkFlowRegTeraTerapiadeSuporte(objTratamento)
		;
		set query = "select * from VARPEPPremiumPrescricao "
		set query = query_" where company = 0 and codigodoCID='"_cid_"' and "
		set query = query_" codigodoPaciente = '"_codPaciente_"' and "
		set query = query_" NumerodaConsulta = '"_ficha_"' and "
		set query = query_" RegimeTerapeutico = '"_pCodRegime_"' and "
		set query = query_" Ciclo = '"_pCiclo_"' and "
		set query = query_" TipodaPrescricao = 'T'"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		set codPrescricao=""
		if (rs.%Next()){
			set codPrescricao = rs.%Get("NumerodaPrescricao")
		}
		If (codPrescricao'="") {
			set retorno.erro = 0
			set retorno.flagJaPreparado = 1
			write retorno.%ToJSON()
			quit
		}
		if codPrescricao'="" do ##class(VAR.CSP.MAPPA).limpaPrescricao(codPrescricao)
		;		
		set dadosobj = {}
		kill vetContinuos
		set ciclo = ..getCiclo(codPaciente,cid,ficha,regime,pCiclo,.vetContinuos)
		set cicloC=""
		for {
			set cicloC = $order(vetContinuos(cicloC)) quit:cicloC=""
			set retorno = ##class(VAR.CSP.MAPPA).gravaPrescricao(cid,ficha,regime,cicloC,pManterAltDose)
		}
		;
		if '$data(vetContinuos(ciclo)){
			set retorno = ##class(VAR.CSP.MAPPA).gravaPrescricao(cid,ficha,regime,ciclo,pManterAltDose)
		}
		;
		kill terapiadeSuporteVetor
		if terapiadeSuporte'=""{
			set terapiadeSuporteVetor(terapiadeSuporte)=""
		}else{
			set sequ=""
			for {
				set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ)) quit:sequ=""
				set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ,1))
				set medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
				if $data(^VARWorkFlowRegTeras(0,1,medicamento,cid)){
					set terapiaSuporte = $order(^VARWorkFlowRegTeras(0,1,medicamento,cid,""))
					set terapiadeSuporteVetor(terapiaSuporte)=""
				}
			}
		}
		if $data(terapiadeSuporteVetor){		
			set terapiadeSuporte = ""
			for {
				set terapiadeSuporte = $order(terapiadeSuporteVetor(terapiadeSuporte)) quit:terapiadeSuporte=""
				set cicloSuporte = 1
				if $data(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,ciclo)) set cicloSuporte = ciclo
				set sequ=""
				for {
					set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,cicloSuporte,sequ)) quit:sequ=""
					set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,terapiadeSuporte,cicloSuporte,sequ,1))
					set dadosobj = {}
					set dadosobj.codPrescricao = codPrescricao
					set dadosobj.tratamento 	= $$$VARWorkFlowRegTeraObservacoes($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					
					Set dadosobj.tipoRegime		= $$$VARWorkFlowRegTeraTipodeRegime($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					set dadosobj.precaucoes 	= $$$VARWorkFlowRegTeraPrecaucoes($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					set dadosobj.princToxicidade= $$$VARWorkFlowRegTeraPrincipaisToxicidades($get(^VARWorkFlowRegTera(YM,cid,terapiadeSuporte,1)))
					set dadosobj.estudo 		= ##class(VAR.CSP.MAPPA).getEstudo(cid, terapiadeSuporte)
					set dadosobj.medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
					
					set dadosobj.dose 			= $Replace($$$VARWorkFlowRegTeraCicloMedDose(objTer),",",".")
					set dadosobj.unidade 		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(objTer)
					set dadosobj.unidadeOriginal = dadosobj.unidade
					set dadosobj.via 			= $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(objTer)
					set dadosobj.frequencia 	= $$$VARWorkFlowRegTeraCicloMedPosologia(objTer)
					;
					set diaInicial				= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer) 
					;
					set observacao = ""
					;set observacao = "Terapia de Suporte: "_$c(10)
					;if diaInicial'="" set observacao = observacao_"Dias de tratamento: "_diaInicial
					;if diaInicial'="" set observacao = diaInicial
					;else  set observacao = "Uso contínuo"
					;
					set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
					set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
					set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
					if dadosobj.unidade=3{
						;set sc = $justify(0.007184 * $ZPOWER(altura*100,.725) * $ZPOWER(peso,.425),0,3)
						set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
						set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",dadosobj.unidade,1))
						set descUnidade = $$$INPARAText(obj)
						
						;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dadosobj.dose,".")_" "_descUnidade
						;set observacao	= observacao_" (M²: "_$fnumber(sc,".",3)_")"
						set dadosobj.dose = $justify(dadosobj.dose * sc,0,1)
						set dadosobj.unidade = 1
					}
					if dadosobj.unidade=4{
						set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",dadosobj.unidade,1))
						set descUnidade = $$$INPARAText(obj)
						;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dadosobj.dose,".")_" "_descUnidade
						;set observacao	= observacao_" (Peso: "_$fnumber(peso,".")_")"
						set dadosobj.dose = $justify(dadosobj.dose * peso,0,1)
						set dadosobj.unidade = 1
						
					}
					;set diaInicial 	= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer)
					;set diaFinal 	= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
					;set dias = diaFinal-diaInicial+1
					if diaInicial="" set dadosobj.continuo=1
					set dadosobj.duracao 		= diaInicial
					
					set dadosobj.observacoes = observacao
					set dadosobj.data = $zd($horolog,3)
					
					set retorno = ##class(VAR.CSP.MAPPA).addPrescricao(codPaciente, cid, "T",+$horolog, dadosobj,valor_"^"_terapiadeSuporte_"^"_sequ,pCodRegime,pCiclo,codPrescricao,0,pManterAltDose)
					;
					do ##class(VAR.CSP.MAPPA).gravaDosePrescrita(codPaciente,cid,ficha,terapiadeSuporte,ciclo,dadosobj,YBED)
					;
					
					set codPrescricao = retorno.codPrescricao
					set retorno.mensagem = codPrescricao
				}			
			}
		}
	}
	write retorno.%ToJSON()
	quit]]></Implementation>
</Method>

<Method name="getCiclo">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,cid,ficha,regime,pCodCiclo,&amp;vetContinuos</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,regime,1,1))
	set tratCiclico = +$$$VARWorkFlowRegTeraCicloContinuo(objCiclos)
	;
	set pula1=""
	if tratCiclico=2,$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""))'=$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""),-1) {
		set pula1=1
	}
	
	set conclusao=""
	set ultCiclo = ""
	set ciclo = ""
	for {
		set ciclo = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo)) quit:ciclo=""
		set obj = $get(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,regime,ciclo,1))
		;
		if (ciclo'=pCodCiclo) Continue
		if pula1,ciclo=1 continue
		set cicloReal = ciclo
		if '$data(^VARWorkFlowRegTeraCiclo(0,cid,regime,ciclo,1)) set cicloReal = $order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""),-1)
		set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,regime,cicloReal,1))
		set duracao = $$$VARWorkFlowRegTeraCicloPeriodicidade(objCiclos)
		if duracao="" {
			set vetContinuos(ciclo)=""
			continue
		}
		if conclusao=0 continue
		;
		set conclusao	= +$$$VARPEPPremiumTratamentoIndicadordeCicloConcluido(obj)
		if conclusao=0 set ultCiclo = ciclo
	}
	if ultCiclo="" set ultCiclo=1
	quit ultCiclo]]></Implementation>
</Method>

<Method name="getIntercorrencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set paciente	= $Get(%request.Data("paciente",1))
	Set dataPEP		= $Get(%request.Data("dataPEP",1))
	Set codCID		= $Get(%request.Data("codCID",1))
	Set ficha		= $Get(%request.Data("ficha",1))
	Set pChave		= $Get(%request.Data("pChave",1))
	Set pCodRegime	= $Get(%request.Data("pCodRegime",1)) 
	Set pCiclo		= $Get(%request.Data("pCiclo",1))
	
	Set codPresc	= $Piece(pChave,",",1)
	Set numLinha	= $Piece(pChave,",",2)
	
	Set flagInter = 0
	Set objeto = $Get(^VARPEPPremiumPrescricao(0,codPresc,numLinha,1))	
	If ($Data(^VARPEPPremPrescIntercorrencia(0,codPresc,numLinha))) {
		Set objeto = $Get(^VARPEPPremPrescIntercorrencia(0,codPresc,numLinha,1))	
		Set flagInter = 1
	}
	
	Set listRetorno = {}
	Set listRetorno.medicamento = $$$VARPEPPremPrescIntercorrenciaCodigodoMedicamento(objeto)
	Set listRetorno.dose = $$$VARPEPPremPrescIntercorrenciaDose(objeto)
	Set listRetorno.unidade = $$$VARPEPPremPrescIntercorrenciaUnidade(objeto)
	Set listRetorno.via = $$$VARPEPPremPrescIntercorrenciaVia(objeto)
	Set listRetorno.frequencia = $$$VARPEPPremPrescIntercorrenciaFrequencia(objeto)
	Set listRetorno.duracao = $$GetDescDuracaoPEP^VARSQL($$$VARPEPPremPrescIntercorrenciaDuracao(objeto))
	Set listRetorno.continuo = 0
	If ($$$VARPEPPremPrescIntercorrenciaDuracao(objeto)=""||($$$VARPEPPremPrescIntercorrenciaDuracao(objeto)=0)) {
		Set listRetorno.continuo = 1
	}
	Set listRetorno.observacoes = $$$VARPEPPremPrescIntercorrenciaObservacoes(objeto)
	Do listRetorno.%Set("suspender",+$$$VARPEPPremPrescIntercorrenciaSuspender(objeto),"number")
	Set listRetorno.ocorrencia = $$$VARPEPPremPrescIntercorrenciaOcorrencia(objeto)
	Set listRetorno.flagInter = flagInter
	
	Do listRetorno.%ToJSON()

	Return $$$OK]]></Implementation>
</Method>

<Method name="armIntercorrencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set paciente	= $Get(%request.Data("paciente",1))
	Set dataPEP		= $Get(%request.Data("dataPEP",1))
	Set codCID		= $Get(%request.Data("codCID",1))
	Set ficha		= $Get(%request.Data("ficha",1))
	Set pChave		= $Get(%request.Data("pChave",1))
	Set pCodRegime	= $Get(%request.Data("pCodRegime",1)) 
	Set pCiclo		= $Get(%request.Data("pCiclo",1))
    Set pSuspender	= $Get(%request.Data("pSuspender",1))
    Set pOcorrencia = $Get(%request.Data("pOcorrencia",1))
	
	Set codPresc	= $Piece(pChave,",",1)
	Set numLinha	= $Piece(pChave,",",2)

	Set objeto = $Get(^VARPEPPremiumPrescricao(0,codPresc,numLinha,1))	
	If ($Data(^VARPEPPremPrescIntercorrencia(0,codPresc,numLinha))) {
		Set objeto = $Get(^VARPEPPremPrescIntercorrencia(0,codPresc,numLinha,1))	
	}
	Set $$$VARPEPPremPrescIntercorrenciaSuspender(objeto) = pSuspender
	Set $$$VARPEPPremPrescIntercorrenciaOcorrencia(objeto) = pOcorrencia

	Set strStatus = $$$Save("VARPEPPremPrescIntercorrencia", codPresc_$$$COMMA_numLinha, objeto, $$$YES)

	Write strStatus
	Return $$$OK]]></Implementation>
</Method>

<Method name="delIntercorrencia">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set paciente	= $Get(%request.Data("paciente",1))
	Set dataPEP		= $Get(%request.Data("dataPEP",1))
	Set codCID		= $Get(%request.Data("codCID",1))
	Set ficha		= $Get(%request.Data("ficha",1))
	Set pChave		= $Get(%request.Data("pChave",1))
	Set pCodRegime	= $Get(%request.Data("pCodRegime",1)) 
	Set pCiclo		= $Get(%request.Data("pCiclo",1))
 	
	Set codPresc	= $Piece(pChave,",",1)
	Set numLinha	= $Piece(pChave,",",2)

	Set strStatus = $$$Kill("VARPEPPremPrescIntercorrencia", codPresc_$$$COMMA_numLinha)

	Write strStatus
	Return $$$OK]]></Implementation>
</Method>

<Method name="getRegimeComplementar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codCID = $Get(%request.Data("codCID",1))

	Set retorno = []

	Set meuSQL = "Select * From SQLUser.VARWorkFlowRegTera "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoCID = '"_codCID_"' And Situacao = 1 "
	Set meuSQL = meuSQL _ "And TerapiaComplementar = 1 "
	Set meuSQL = meuSQL _ "Order By GrupoTipodeRegime, TipodeRegime, DescricaodoRegimeTerapeutico "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While (rSet.%Next()) {
		Set grpTipo 	= rSet.%Get("GrupoTipodeRegime") 
		Set tipoRegime	= rSet.%Get("TipodeRegime")
		Set (descGrupoTipoRegime, descTipoRegime) = ""
		Set descGrupoTipoRegime	= $Select(
									grpTipo = 1.1 : "Mieloma Múltiplo - Terapia de Prevenção de Perda Óssea",
									grpTipo = 1.2 : "Mieloma Múltiplo - Terapia de Primeira Linha para Candidatos a Transplante",
									grpTipo = 1.3 : "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Fit",
									grpTipo = 1.4 : "Mieloma Múltiplo - Terapia de Primeira Linha para não Candidatos a Transplante - Paciente Frágil",
									grpTipo = 1.5 : "Mieloma Múltiplo - Terapia de Segunda Linha e Terapia Subsequente",
									grpTipo = 2.1 : "Mieloma Indolente",
									grpTipo = 3.1 : "Amiloidose de Cadeia Leve - Terapia de Primeira Linha",
									grpTipo = 3.2 : "Amiloidose de Cadeia Leve - Terapia de Segunda Linha e Subsequente",
									1 			  : "")
		Set descTipoRegime 		=  $Select(
									tipoRegime = 1 : "Regimes Preferenciais",
									tipoRegime = 2 : "Outras Possibilidades",
									tipoRegime = 4 : "Útil em determinadas circunstâncias",
									tipoRegime = 3 : "Regimes Recomendados",
									1			   : "")
		Set grupo = $Select(descGrupoTipoRegime="":"",1:descGrupoTipoRegime_" - ")_descTipoRegime
		Set list = {}
		Set list.CodRegime 	= rSet.%Get("CodigodoRegimeTerapeutico")
		Set list.DescRegime = rSet.%Get("DescricaodoRegimeTerapeutico")
		Set list.Grupo 		= grupo
		do retorno.%Push(list)
	}
	Do retorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="addRegimeComplementar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set codPaciente		= $Get(%request.Data("paciente",1))
	Set dataPEP			= $Get(%request.Data("dataPEP",1))
	Set cid				= $Get(%request.Data("codCID",1))
	Set ficha			= $Get(%request.Data("ficha",1))
	Set pCodRegime		= $Get(%request.Data("pCodRegime",1)) 
	Set pCiclo			= $Get(%request.Data("pCiclo",1))
	Set regime			= $Get(%request.Data("pCodRegComp",1))
	Set ciclo			= 1
	;
	Set codPrescricao = ""
	&Sql(
		Select Distinct NumerodaPrescricao Into :codPrescricao
		From SQLUser.VARPEPPremiumPrescricao Where Company = 0 
		And CodigodoPaciente = :codPaciente And CodigodoCID = :cid 
		And RegimeTerapeutico = :pCodRegime And Ciclo = :pCiclo
	)
	;
	kill produtos
	;
	set objCiclos = $get(^VARWorkFlowRegTeraCiclo(0,cid,regime,1,1))
	set tratCiclico = +$$$VARWorkFlowRegTeraCicloContinuo(objCiclos)
	;
	set ciclo1=""
	set cicloreal=1
	if tratCiclico=2,$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""))'=$order(^VARWorkFlowRegTeraCiclo(0,cid,regime,""),-1) {
		set ciclo1=1
	}
	;
	for ciclo=ciclo1,cicloreal{
		if ciclo="" continue
		set sequ=""
		for {
			set sequ = $order(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ)) quit:sequ=""
			set objTer = $get(^VARWorkFlowRegTeraCicloMed(YM,cid,regime,ciclo,sequ,1))
			set medicamento 	= $$$VARWorkFlowRegTeraCicloMedMedicamento(objTer)
			set dose 			= $Replace($$$VARWorkFlowRegTeraCicloMedDose(objTer),",",".")
			set unidade 		= $$$VARWorkFlowRegTeraCicloMedDoseunidade(objTer)
			set unidadeOriginal = unidade
			set via 			= $$$VARWorkFlowRegTeraCicloMedViadeAdministracao(objTer)
			set frequencia 		= $$$VARWorkFlowRegTeraCicloMedPosologia(objTer)
			set diaInicial		= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer) 
			set diaFinal	 	= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
			set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
			set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
			set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
			set observacao = ""
			if unidade=3{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set sc = $ZSQR(altura*peso/3600) // Email de 22/12/2020 de Dr. Paulo Campregher (Fórmula de Mosteller)
				set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",unidade,1))
				set descUnidade = $$$INPARAText(obj)
				;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dose,".")_" "_descUnidade
				;set observacao	= observacao_" (M²: "_$fnumber(sc,".",3)_")"
				set dose 		= $justify(dose * sc,0,1)
			}
			if unidade=4{
				set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
				set peso		= $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
				set altura		= $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
				set obj = $get(^INPARA(YM,"UNIDDOSAGEM","PT",unidade,1))
				set descUnidade = $$$INPARAText(obj)
				;set observacao	= observacao_$c(10)_"Cálculo da Dosagem: "_$fnumber(dose,".")_" "_descUnidade
				;set observacao	= observacao_" (Peso: "_$fnumber(peso,".")_")"
				set dose = $justify(dose * peso,0,1)
			}
			set diaInicial 	= $$$VARWorkFlowRegTeraCicloMedDiaInicialdoTratamento(objTer)
			set diaFinal 	= $$$VARWorkFlowRegTeraCicloMedDiaFinaldoTratamento(objTer)
			set dias = diaFinal-diaInicial+1
			if diaInicial="" set dias = "",continuo=1
			if dias<0 set dias = 0
			set duracao 		= dias
			
			set observacoes = observacao
			set data = $zd($horolog,3)
			set obj = $get(produtos(medicamento,unidade,via,frequencia,dose))
			set $p(obj,"~",1) = $p(obj,"~",1)+duracao
			set produtos(medicamento,unidade,via,frequencia,dose) = obj
			set produtos(medicamento,unidade,via,frequencia,dose,$select(diaInicial="":" ",1:diaInicial))=$select(diaFinal="":" ",1:diaFinal)
		}
	}
	set produto=""
	for {
		set produto = $order(produtos(produto)) quit:produto=""
		set unidade=""
		for {
			set unidade = $order(produtos(produto,unidade)) quit:unidade=""
			set via=""
			for {
				set via = $order(produtos(produto,unidade,via)) quit:via=""
				set frequencia=""
				for {
					set frequencia = $order(produtos(produto,unidade,via,frequencia)) quit:frequencia=""
					set dose=""
					for {
						set dose = $order(produtos(produto,unidade,via,frequencia,dose)) quit:dose=""
						set duracao = produtos(produto,unidade,via,frequencia,dose)
						set dadosobj = {}
						set dadosobj.codPrescricao = codPrescricao
						set dadosobj.tratamento 	= $$$VARWorkFlowRegTeraObservacoes($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						Set dadosobj.tipoRegime		= $$$VARWorkFlowRegTeraTipodeRegime($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						set dadosobj.precaucoes 	= $$$VARWorkFlowRegTeraPrecaucoes($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						set dadosobj.princToxicidade= $$$VARWorkFlowRegTeraPrincipaisToxicidades($get(^VARWorkFlowRegTera(YM,cid,regime,1)))
						set dadosobj.estudo 		= "" ;..getEstudo(cid, regime)
						set dadosobj.medicamento 	= produto
						set dadosobj.dose 			= dose
						set dadosobj.unidade 		= unidade
						set dadosobj.unidadeOriginal = unidade
						if (unidade=3)||(unidade=4) set dadosobj.unidade = 1
						set dadosobj.via 			= via
						set dadosobj.frequencia 	= frequencia
						set dadosobj.duracao 		= duracao
						;
						set observacao	= ""
						set dias=""
						set diaInicial = ""
						for {
							set diaInicial = $order(produtos(produto,unidade,via,frequencia,dose,diaInicial)) quit:diaInicial=""
							set diaFinal = produtos(produto,unidade,via,frequencia,dose,diaInicial)
							if dias'="" set dias = dias_", "
							if diaInicial=diaFinal {
								if diaInicial=" " set dias = dias_"Contínuo"
								else  set dias = dias_diaInicial
							}else{
								if diaFinal=" " set dias = dias_"Dia "_diaInicial_" - Contínuo"
								else  set dias = dias_"dia "_diaInicial_" a "_diaFinal
							}
						}
						if dias'="" set observacao = observacao_"Dias de tratamento: "_dias
						else  set observacao = observacao_"Uso contínuo"
						set dadosobj.observacoes 		= observacao
						;
						set retorno = ##class(VAR.CSP.MAPPA).addPrescricao(codPaciente, cid, "T",+$horolog, dadosobj,regime_"^"_ciclo_"^"_sequ, pCodRegime, pCiclo, codPrescricao, 1)
					}
				}
			}
		}
	}	
	quit ""]]></Implementation>
</Method>

<Method name="recToolPendenteRISS">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente,pCID,pFicha,pDataPEP</FormalSpec>
<Implementation><![CDATA[	Set qtdePend = 0
	Set estadiamentoVetor = []
	Set estadiamentoPendente = "<ul class=ttEstadiamento>" 

	If ($Piece($Get(^VARPEPPremiumDiagnostico(0, pCodPaciente, pCID, 1, 1)),"~",5)'=""&&
	   ($Piece($Get(^VARPEPPremiumDiagnostico(0, pCodPaciente, pCID, 1, 1)),"~",5)'="RDB")&&
	   ($Piece($Get(^VARPEPPremiumDiagnostico(0, pCodPaciente, pCID, 1, 1)),"~",5)'="RDC")) {
		 	Set qtdePend = qtdePend + 1
			Do estadiamentoVetor.%Push("Diagnóstico: Mieloma Múltiplo")
			Set estadiamentoPendente = estadiamentoPendente _ "<li>Diagnóstico: Mieloma Múltiplo</li>"
	}

	Set objEstagioReest = ##Class(VAR.CSP.MAPPA).calcEstadiamento(pCodPaciente,pCID,pFicha,1,1,pDataPEP,2,0)
	If objEstagioReest.selEstagio="" {
	 	Set qtdePend = qtdePend + 1
		Do estadiamentoVetor.%Push("Estadiamento: ISS")
		Set estadiamentoPendente = estadiamentoPendente _ "<li>Estadiamento: ISS</li>"
	}

	set campo = 38534
	set valorC = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCID,pFicha,1,campo,0),"~",1)
	if valorC="" {
	 	Set qtdePend = qtdePend + 1
		Do estadiamentoVetor.%Push($Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," "))
		Set estadiamentoPendente = estadiamentoPendente _ "<li> Grupo: Avaliação Diagnóstica - Questionário Diagnóstico</li><ul><li>"_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," ")_"</li></ul>"
	}


	Set estadiamentoPendenteCit = "<li> Grupo: Análise Citogenética</li><ul>", flagCit = 0
	set campo = 142, campo1 = 36690
	set valorC1 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCID,pFicha,1,campo,0),"~",1)
	set valorC2 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCID,pFicha,1,campo1,0),"~",1)
	If (valorC1=""&&(valorC2="")) {	
		Set flagCit = 1
	 	Set qtdePend = qtdePend + 1
		Do estadiamentoVetor.%Push($Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," "))
		Set estadiamentoPendenteCit = estadiamentoPendenteCit _ "<li>"_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," ")_"</li>"
	}
	;
	set campo = 149, campo1 = 36699
	set valorC1 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCID,pFicha,1,campo,0),"~",1)
	set valorC2 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCID,pFicha,1,campo1,0),"~",1)
	If (valorC1=""&&(valorC2="")) {	
		Set flagCit = 1
	 	Set qtdePend = qtdePend + 1
		Do estadiamentoVetor.%Push($Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," "))
		Set estadiamentoPendenteCit = estadiamentoPendenteCit _ "<li>"_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," ")_"</li>"
	}
	;
	set campo = 158, campo1 = 36708
	set valorC1 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCID,pFicha,1,campo,0),"~",1)
	set valorC2 = $piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCID,pFicha,1,campo1,0),"~",1)
	If (valorC1=""&&(valorC2="")) {	
		Set flagCit = 1
	 	Set qtdePend = qtdePend + 1
		Do estadiamentoVetor.%Push($Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," "))
		Set estadiamentoPendenteCit = estadiamentoPendenteCit _ "<li>"_$Replace(##Class(VAR.CSP.MAPPA).recDescricaoWorkFlow(pCID,campo),"<br>"," ")_"</li>"
	}
	If (flagCit = 1) {
		Set estadiamentoPendente = estadiamentoPendente _ estadiamentoPendenteCit _ "</ul>"	
	}

	Set listRetorno = {}
	Set listRetorno.Texto = estadiamentoPendente_"</ul>"
	Set listRetorno.Vetor = estadiamentoVetor
	Set listRetorno.ItensPendentes = qtdePend
	
	Return listRetorno]]></Implementation>
</Method>

<Method name="GetIntercorrenciaGeral">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set paciente 	= $Get(%request.Data("paciente",1))
	Set codCID 		= $Get(%request.Data("codCID",1))
	
	Set arrayRetorno = []
	
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARPEPPremIntercorrencia(YM, paciente, codCID, sequencia),-1)
		Quit:sequencia=""
		
		Set objeto = $Get(^VARPEPPremIntercorrencia(YM, paciente, codCID, sequencia, 1))

		If (+$$$VARPEPPremIntercorrenciaInativo(objeto) = 1) Continue

		Set listRetorno = {}
		Set listRetorno.data 		= $ZDate($$$VARPEPPremIntercorrenciaData(objeto),4)
		Set listRetorno.dataCampo 	= $ZDate($$$VARPEPPremIntercorrenciaData(objeto),3)
		Set listRetorno.ocorrencia 	= $$$VARPEPPremIntercorrenciaOcorrencia(objeto)
		Set listRetorno.sequencia 	= sequencia

		Do arrayRetorno.%Push(listRetorno)

	}
	Do arrayRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="GetIntercorrenciaGeralPrescricao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente,pCodCID</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
	
	Set texto = ""
	
	Set data = ""
	For {
		Set data = $Order(^VARPEPPremIntercorrencias(YM, 10, pCodPaciente, pCodCID, data),-1)
		Quit:data=""
	
		Set sequencia = ""
		For {
			Set sequencia = $Order(^VARPEPPremIntercorrencias(YM, 10, pCodPaciente, pCodCID, data, sequencia),-1)
			Quit:sequencia=""
	
			Set objeto = $Get(^VARPEPPremIntercorrencia(YM, pCodPaciente, pCodCID, sequencia, 1))

			If (+$$$VARPEPPremIntercorrenciaInativo(objeto) = 1) Continue

			Set texto = texto _ $Select(texto="":"",1:$Char(10,10)) _ 
						"Data: " _ $ZDate($$$VARPEPPremIntercorrenciaData(objeto),4) _
						$Char(10) _
						"Ocorrência: " _ $$$VARPEPPremIntercorrenciaOcorrencia(objeto)
		}
	}
	Return texto]]></Implementation>
</Method>

<Method name="ArmIntercorrenciaGeral">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set paciente 	= $Get(%request.Data("paciente",1))
	Set codCID 		= $Get(%request.Data("codCID",1))
	Set pSequencia	= $Get(%request.Data("pSequencia",1))
	Set pData 		= $Get(%request.Data("pData",1))
	Set pOcorrencia = $Get(%request.Data("pOcorrencia",1))
	
	If (pSequencia = "") {
		Set pSequencia = $Order(^VARPEPPremIntercorrencia(YM, paciente, codCID, ""),-1)	+ 1
	}
	
	Set objeto = $Get(^VARPEPPremIntercorrencia(YM, paciente, codCID, pSequencia, 1))

	Set $$$VARPEPPremIntercorrenciaData(objeto) 		= $ZDateH(pData,3)
	Set $$$VARPEPPremIntercorrenciaOcorrencia(objeto) 	= pOcorrencia
	
	Set strStatus = $$$Save("VARPEPPremIntercorrencia", paciente_$$$COMMA_codCID_$$$COMMA_pSequencia, objeto, $$$YES)

	Write strStatus
	return $$$OK]]></Implementation>
</Method>

<Method name="ExcIntercorrenciaGeral">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente,pCodCID,pSequencia</FormalSpec>
<Implementation><![CDATA[	$$$VAR
	Set YM = 0
	Set Y = "~"
	Set objeto = $Get(^VARPEPPremIntercorrencia(YM, pCodPaciente, pCodCID, pSequencia, 1))
	
	Set $$$VARPEPPremIntercorrenciaInativo(objeto) = 1
	
	Set strStatus = $$$Save("VARPEPPremIntercorrencia", pCodPaciente_$$$COMMA_pCodCID_$$$COMMA_pSequencia, objeto, $$$YES)

	return strStatus]]></Implementation>
</Method>

<Method name="getArquivosAnexos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set paciente = $get(%request.Data("codPaciente",1))
	set array = []

	set fileset=##class(%ResultSet).%New("%Library.File:FileSet")
	set empresa 	= 0
	set modulo 		= 45
	set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	if ($extract(dname, $length(dname)) '= "\") {
		set dname = dname _ "\"
	}
	set dname = dname _ paciente
	set sc=fileset.Execute(##class(%File).NormalizeDirectory(dname),"*",,1)
	set array = []
	while fileset.Next(.sc) { 
		Set list = {}
		set list.nome 		= fileset.GetData(6)
		set list.data 		= $ZDateTime($ZDateTimeH(fileset.GetData(4),3,1),4,1)
		set list.arquivo 	= fileset.GetData(1)
		do array.%Push(list)
	}
	w array.%ToJSON()
	Quit $$$OK]]></Implementation>
</Method>

<Method name="removerAnexo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pArquivo,pYBED</FormalSpec>
<Implementation><![CDATA[	do ^WWWVAR
	if (##class(%File).Exists(pArquivo)){
		do ##class(%File).Delete(pArquivo)
	}
	quit $$$OK]]></Implementation>
</Method>

<Method name="preparaAberturaAnexo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set arquivo = $get(%request.Data("arquivo",1))
	set ext = $piece(arquivo,".",$length(arquivo,"."))
	if '##class(%File).Exists(arquivo){
		write dname_arquivo
		quit 
	}
	;
	;
	; Recupera o caminho de destino (diretorio temporario)
	set obj = $get(^WWW012(0,0,1))
	set caminhoD = $$$WWW012PhysicalFTPDirectory(obj)
	if ($extract(caminhoD, $length(caminhoD)) '= "\") {
		set caminhoD = caminhoD _ "\"
	}
	set caminhoD = caminhoD _ "temp\"
	//checa e cria se não houver, o diretorio
	if ('##class(%File).DirectoryExists(caminhoD)) {
		do ##class(%File).CreateDirectoryChain(caminhoD)
	}
	set fname = %session.SessionId_"_"_$replace($replace($now(),".",""),",","")_"."_ext
	do ##class(%File).CopyFile(arquivo,caminhoD_fname,1)
	job ##Class(VAR.CSP.MAPPA).apagaArquivo(caminhoD_fname)
	write YGIF_"temp/"_fname
	quit]]></Implementation>
</Method>

<Method name="exportarMAPPA">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Set paciente 	= 41 ;$Get(%request.Data("paciente",1))
	Set codCID		= "C90.0" ;$Get(%request.Data("codCID",1))
	;
	Set arrayDados 		= []
	Set arrayColumns 	= []
	Do arrayColumns.%Push({"dataField": "menu", "caption": "Menu", "groupIndex": 0, "fixed": 1})
	Do arrayColumns.%Push({"dataField": "aba", "caption": "Aba", "groupIndex": 1, "fixed": 1})
	Do arrayColumns.%Push({"dataField": "descCampo", "caption": "Campo", "minWidth": 250, "fixed": 1})
	Do arrayColumns.%Push({"dataField": "codCampo", "caption": "Cod. Campo", "minWidth": 50, "visible": 0})
	Do arrayColumns.%Push({"dataField": "caminhoCampo", "caption": "Cam. Campo", "minWidth": 50, "visible": 0})
	Do arrayColumns.%Push({"dataField": "tpWorkflow", "caption": "Tipo Workflow", "minWidth": 50, "visible": 0})
	;
	Set tConsultas = ""
	Set mSQLCon = "Select * From SQLUser.VARPEPPremiumConsulta "
	Set mSQLCon = mSQLCon _ "Where Company = 0 And CodigodoPaciente = '"_paciente_"' "
	Set mSQLCon = mSQLCon _ "And CIDdoPaciente = '"_codCID_"' "
	Set mSQLCon = mSQLCon _ "Order By NumerodaConsulta Desc "
	Set rSetCon = ##class(%SQL.Statement).%ExecDirect("",mSQLCon)
	While (rSetCon.%Next()) {
		Set list = {}
		Set list.dataField 	= "consulta-"_rSetCon.%Get("NumerodaConsulta")
		Set list.caption	= "Consulta "_rSetCon.%Get("NumerodaConsulta")_" ("_$ZDateTime(rSetCon.%Get("DataHoradoIniciodaConsulta"),4,1)_")"
		Set list.minWidth	= 250
		Do arrayColumns.%Push(list)
		;
		Set tConsultas = tConsultas_$Select(tConsultas="":"",1:";")_rSetCon.%Get("NumerodaConsulta")
		;
	}
	;
	Set meuSQL = "Select * From SQLUser.VARWorkFlowPEP "
	Set meuSQL = meuSQL _ "Where Company = 0 And CodigodoCID = '"_codCID_"' And Predecessor Is Null "
	Set meuSQL = meuSQL _ "And (NaoExibirnoMenu Is Null Or (CodigodoCID = 'C90.0' And (Sequencia = 48251 Or Sequencia = 48255)) Or (CodigodoCID = 'C91.1' And Sequencia = 1998)) "
	Set meuSQL = meuSQL _ "Order By SequenciadeExibicao "
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While (rSet.%Next()) {
		Set seqMenu = rSet.%Get("Sequencia")
		Set seqAba 	= ""
		Set count 	= 0
		Set meuSQLSMenu = "Select * From SQLUser.VARWorkFlowPEP "
		Set meuSQLSMenu = meuSQLSMenu _ "Where Company = 0 And CodigodoCID = '"_codCID_"' "
		Set meuSQLSMenu = meuSQLSMenu _ "And Predecessor = '"_seqMenu_"' And NaoExibirnoMenu Is Null "
		Set meuSQLSMenu = meuSQLSMenu _ "Order By SequenciadeExibicao "
		Set rSetSMenu = ##class(%SQL.Statement).%ExecDirect("",meuSQLSMenu)
		While (rSetSMenu.%Next()) {
			Set count = count + 1
			If (count = 1 && (rSetSMenu.%Get("TipodeWorkflow") '= 10)) {
				Do ..exportarMAPPACampos(paciente, codCID, seqMenu, "", seqMenu, 
										 seqMenu, .arrayDados, tConsultas)
				Quit
			}Else{
				Do ..exportarMAPPACampos(paciente, codCID, seqMenu, rSetSMenu.%Get("Sequencia"), rSetSMenu.%Get("Sequencia"), 
										 rSetSMenu.%Get("Sequencia"), .arrayDados, tConsultas)
				Quit
			}
		}
	}
	;	
	Set listRetorno = {}
	Set listRetorno.Columns	 = arrayColumns
	Set listRetorno.dtSource = arrayDados
	Do listRetorno.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>

<Method name="exportarMAPPACampos">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodPaciente,pCodCid,pSeqMenu,pSeqAba,pSeqCampo,pCodPredecessor,arrayDados,tConsultas</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[	;New (pCodCid, pCodPredecessor)
	Set meuSQLCamp = "Select * From SQLUser.VARWorkFlowPEP "
	Set meuSQLCamp = meuSQLCamp _ "Where Company = 0 And CodigodoCID = '"_pCodCid_"' "
	Set meuSQLCamp = meuSQLCamp _ "And Predecessor = '"_pCodPredecessor_"' And NaoExibirnoMenu Is Null "
	Set meuSQLCamp = meuSQLCamp _ "Order By SequenciadeExibicao "
	Set rSetCamp = ##class(%SQL.Statement).%ExecDirect("",meuSQLCamp)
	While (rSetCamp.%Next()) {
		Set tpWorkflow 		= rSetCamp.%Get("TipodeWorkflow")
		If (tpWorkflow = 36 || (tpWorkflow = 40)) Continue
		
		;If (tpWorkflow '= 7) Continue
		
		Set list = {}
		If (pSeqMenu="") {
			Set list.menu 	= ""
		}Else{
			Set list.menu 	= $Replace($$$VARWorkFlowPEPNome($Get(^VARWorkFlowPEP(0,pCodCid,pSeqMenu,1))),"<br>"," ")
		}
		If (pSeqAba="") {
			Set list.aba 	= ""
		}Else{
			Set list.aba 	= $Replace($$$VARWorkFlowPEPNome($Get(^VARWorkFlowPEP(0,pCodCid,pSeqAba,1))),"<br>"," ")
		}
		Set list.caminhoCampo 	= pSeqCampo
		Set list.codCampo 		= rSetCamp.%Get("Sequencia")
		Set list.descCampo 		= $Replace(rSetCamp.%Get("Nome"),"<br>"," ")
		If ($Piece(rSetCamp.%Get("ExamesUnidadedeExibicao"),"|",2)'="") {
			Set list.descCampo 	= $Piece(rSetCamp.%Get("ExamesUnidadedeExibicao"),"|",2)
		}
		If (tpWorkflow = 12) {
			Set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame($Get(^VARWorkFlowAuxiliar(0,"Exames",rSetCamp.%Get("Nome"),1)))
			Set list.descCampo = descExame
		}
		If (tpWorkflow = 7) {
			Set list.descCampo = $Piece($Get(^VARWorkFlowImagensDetalhes(0,$Piece(rSetCamp.%Get("Nome"),";",1),$Piece(rSetCamp.%Get("Nome"),";",2),1)),"~",1)
		}		
		Set list.tpWorkflow		= tpWorkflow
		
		For i=1:1:$L(tConsultas,";") {
			Set ficha = $Piece(tConsultas,";",i)
			Set valor = $Piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCodCid,ficha,1,rSetCamp.%Get("Sequencia")),"~",1)			
			If (tpWorkflow = 12) {
				Set valor = $Piece(##Class(VAR.CSP.MAPPA).recValorSalvo(pCodPaciente,pCodCid,ficha,1,rSetCamp.%Get("Sequencia")),"~",1,2)			
			}
			If (valor = "") Continue
			If (tpWorkflow = 3) {
				Do list.%Set("consulta-"_ficha,valor_" "_$Replace($Piece(rSetCamp.%Get("ExamesUnidadedeExibicao"),"|",1),"<br>"," "))
			}ElseIf (tpWorkflow = 5) {
				Set descExame = $$$VARWorkFlowAuxiliarDescricaodoExame($Get(^VARWorkFlowAuxiliar(0,"Exames",rSetCamp.%Get("Nome"),1)))
				Set list.descCampo = rSetCamp.%Get("Sequencia")_"|"_tpWorkflow_"|"_descExame
				Do list.%Set("consulta-"_ficha,valor_" "_$$$VARWorkFlowAuxiliarUnidade($Get(^VARWorkFlowAuxiliar(0,"Exames",rSetCamp.%Get("Nome"),1))))
			}ElseIf (tpWorkflow = 9) {
				If ($Length(valor,";")>1) {
					Set fValor = ""
					For x=1:1:$Length(valor,";"){
						If ($Piece(valor,";",x)=1) {
							Set fValor = fValor _ $Select(fValor="":"",1:";")_$Piece(rSetCamp.%Get("Opcoes"),"|",x)
						}
						Do list.%Set("consulta-"_ficha,fValor)
					}
				}Else{
					Do list.%Set("consulta-"_ficha,$Piece(rSetCamp.%Get("Opcoes"),"|",valor))
				}
			}ElseIf (tpWorkflow = 2 || (tpWorkflow = 11)) {
				Do list.%Set("consulta-"_ficha,$Select(valor=1:"Sim",1:"Não"))
			}ElseIf (tpWorkflow = 12) {
				Do list.%Set("consulta-"_ficha,
					$Select(
						$Piece(valor,"~",1)=0:"Mutado",
						$Piece(valor,"~",1)=1:"Não Mutado", 
						$Piece(valor,"~",1)=2:"Não Fez o Teste",
						1:"") _
					" - " _
					$Piece(valor,"~",2))
			}ElseIf (tpWorkflow = 13) {
				Do list.%Set("consulta-"_ficha,$ZDate(valor,4))
			}ElseIf (tpWorkflow = 29 || (tpWorkflow = 31)) {
				Set fValor = ""
				For x=1:1:$Length(valor,";"){
					If ($Piece($Piece(valor,";",i),"^",1)="") Continue
					Set fValor = fValor _ 
								 $Select(fValor="":"",1:";") _
								 $$GetDiagnosticoDescPEP^VARSQL($Piece($Piece(valor,";",i),"^",1)) _ 
								 " - " _
								 $Piece($Piece(valor,";",i),"^",3)
				}
				Do list.%Set("consulta-"_ficha,fValor)
			
			}ElseIf (tpWorkflow = 32) {
				Set fValor = ""
				For x=1:1:$Length(valor,";"){
					If ($Piece($Piece(valor,";",i),"^",1)="") Continue
					Set fValor = fValor _ 
								 $Select(fValor="":"",1:";") _
								 $$GetDescMedicamentos^VARSQL($Piece($Piece(valor,";",i),"^",1),1)_ 
								 " " _
								 $Piece($Piece(valor,";",i),"^",2)
				}
				Do list.%Set("consulta-"_ficha,fValor)
			}ElseIf (tpWorkflow = 33) {
				Set fValor = ""
				For x=1:1:$Length(valor,";"){
					If ($Piece($Piece(valor,";",i),"^",1)="") Continue
					Set fValor = fValor _ 
								 $Select(fValor="":"",1:";") _
								 $ZDate($Piece($Piece(valor,";",i),"^",1),4)_ 
								 " " _
								 $Piece($Piece(valor,";",i),"^",2)
				}
				Do list.%Set("consulta-"_ficha,fValor)
			}ElseIf (tpWorkflow = 34) {
				Set fValor = ""
				For x=1:1:$Length(valor,";"){
					If ($Piece($Piece(valor,";",i),"^",1)="") Continue
					Set fValor = fValor _ 
								 $Select(fValor="":"",1:";") _
								 $Piece($Piece(valor,";",i),"^",1)_ 
								 " " _
								 $Piece($Piece(valor,";",i),"^",2)
				}
				Do list.%Set("consulta-"_ficha,fValor)
			}Else{
				Do list.%Set("consulta-"_ficha,valor)
			}
			
		}
		Do arrayDados.%Push(list)
		If ($Data(^VARWorkFlowPEPs(0,1,pCodCid,rSetCamp.%Get("Sequencia")))) {
			Do ..exportarMAPPACampos(pCodPaciente, pCodCid, pSeqMenu, pSeqAba, pSeqCampo_";"_rSetCamp.%Get("Sequencia"),
									 rSetCamp.%Get("Sequencia"),.arrayDados, tConsultas)			
		}
	}
	Quit ""]]></Implementation>
</Method>

<Method name="GetAlturaPeso">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	set codPaciente = $get(%request.Data("codPaciente",1))
	set cid = $get(%request.Data("codCID",1))
	set ficha = $get(%request.Data("ficha",1))

	set dados = {}
	set objAna 		= $get(^VARPEPPremiumPrimario(0,codPaciente,ficha,1))
	set dados.peso = $$$VARPEPPremiumPrimarioAnamnesePeso(objAna)
	set dados.altura = $$$VARPEPPremiumPrimarioAnamneseAltura(objAna)
	
	Do dados.%ToJSON()
	Return $$$OK]]></Implementation>
</Method>
</Class>
</Export>