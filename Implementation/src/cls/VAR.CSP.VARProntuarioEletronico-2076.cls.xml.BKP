<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.CSP.VARProntuarioEletronico">
<ClassType/>
<IncludeCode>MEDConst,VARConst,INConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	$$$VAR
	quit:$$$ISERR(..validaSessao()) %response
	do ..CadastraCID()
	set method = $get(%request.Data("method",1))
	Xecute "do .."_method_"()"
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="validaSessao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set status = $$VerifySession^VARCSPUtils(YBED, YUSER)
	if status=0||(YBED="UNKNOWN"){
		set status=0
		set %response.Status="401 Unauthorized"
		set resp={}
		set resp.erro=1
		set resp.mensagem="Sessão Expirou"
		write resp.%ToJSON()
	}
	quit status
]]></Implementation>
</Method>

<Method name="verificaConexao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	write 1
	quit
]]></Implementation>
</Method>

<Method name="authBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set username = $get(%request.Data("username",1))
	set password = $get(%request.Data("password",1))
	set ret = $$authBirdID^VARCSPUtils(username,password)
	set retorno = {}
	set retorno.status = $piece(ret,"~",1)
	set retorno.mensagem = $piece(ret,"~",2)
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="verificaBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set bird = $$getBirdID^VARCSPUtils(YBED,YUSER)
	if $piece(bird,"~",1)="" {
		write 0
	}elseif $piece(bird,"~",1)=0 {
		write 2
	}else{
		write 1
	}
	quit
]]></Implementation>
</Method>

<Method name="revokeBirdID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = $$revokeBirdID^VARCSPUtils(YBED,YUSER)
	write 1
	quit
]]></Implementation>
</Method>

<Method name="getHistorico">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	set tipo = $get(%request.Data("tipo",1))
	if tipo=1 set retorno = ..prepHistExames(passagem)
	if tipo=2 set retorno = ..prepHistReceituario(passagem)
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="prepHistExames">
<ClassMethod>1</ClassMethod>
<FormalSpec>passagem</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set retorno = {}
	set retorno.title=" de Exames"
	if passagem'=""{
		set objAdm = $get(^MEDAdmission(0,passagem,1))
		set codPaciente = $$$MEDAdmissionPatient(objAdm)
		set DateAdmitted = $$$MEDAdmissionDateAdmitted(objAdm)
		;
		set dataSource = []
		;
		set query = "select NumerodoPEP,Sequencia,SearchName,Observacoes,DateAdmitted from VARPEPExamesLista "
		set query = query_" Inner Join MEDAdmission on MEDAdmission.Company = VARPEPExamesLista.Company and  MEDAdmission.AdmissionID = VARPEPExamesLista.NumerodoPEP"
		set query = query_" and %upper(MEDAdmission.Patient)='"_codPaciente_"'"
		set query = query_" Inner Join INART on INART.Company = VARPEPExamesLista.Company and  INART.ItemNumber = VARPEPExamesLista.CodigodoExame"
		set query = query_" where %upper(MEDAdmission.AdmissionID)<'"_passagem_"' or MEDAdmission.DateAdmitted<"_DateAdmitted_""
		set query = query_" Order By SearchName"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		kill vetor,datas
		while(rs.%Next()){
			set vetor(rs.%Get("SearchName"),rs.%Get("DateAdmitted"),rs.%Get("NumerodoPEP"))=""
			set datas(rs.%Get("DateAdmitted"),rs.%Get("NumerodoPEP"))=""
		}
		set exame=""
		for {
			set exame=$order(vetor(exame)) quit:exame=""
			set linha={}
			set linha.Exame = exame
			set data=""
			for {
				set data=$order(datas(data)) quit:data=""
				set admi=""
				for {
					set admi=$order(datas(data,admi)) quit:admi=""
					set ok=0
					if $data(vetor(exame,data,admi)) set ok=1
					do linha.%Set(data_admi,ok)
				}
			}
			do dataSource.%Push(linha)
		}
		;
		set retorno.dataSource = dataSource
		set columns = []
		set coluna = {}
		set coluna.dataField = "Exame"
		set coluna.width = "400px"
		do columns.%Push(coluna)
		set data="" 
		for {
			set data = $order(datas(data),-1) quit:data=""
			set admi="" 
			for {
				set admi = $order(datas(data,admi),-1) quit:admi=""
				set coluna = {}
				set coluna.dataField = data_admi
				set coluna.caption = $zdate(data,4)_" Adm. "_admi
				set coluna.dataType	="boolean"
				set coluna.width = "120px"
				do columns.%Push(coluna)
			}
		}
		set retorno.columns = columns
	}
	quit retorno
]]></Implementation>
</Method>

<Method name="prepHistReceituario">
<ClassMethod>1</ClassMethod>
<FormalSpec>passagem</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	set retorno = {}
	set retorno.title=" de Receituários"
	if passagem'=""{
		set objAdm = $get(^MEDAdmission(0,passagem,1))
		set codPaciente = $$$MEDAdmissionPatient(objAdm)
		set DateAdmitted = $$$MEDAdmissionDateAdmitted(objAdm)
		;
		set dataSource = []
		;
		set query = "select NumerodoPEP,NumerodaLinha,Receituario,DateAdmitted from VARPEPReceituario "
		set query = query_" Inner Join MEDAdmission on MEDAdmission.Company = VARPEPReceituario.Company and  MEDAdmission.AdmissionID = VARPEPReceituario.NumerodoPEP"
		set query = query_" and %upper(MEDAdmission.Patient)='"_codPaciente_"'"
		set query = query_" where %upper(MEDAdmission.AdmissionID)<'"_passagem_"' or MEDAdmission.DateAdmitted<"_DateAdmitted_""
		set query = query_" Order By DateAdmitted desc"
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		while(rs.%Next()){
			set linha={}
			set linha.Admissao = rs.%Get("NumerodoPEP")
			set linha.DataAdmissao = $zdate(rs.%Get("DateAdmitted"),1)
			set linha.Linha = rs.%Get("NumerodaLinha")
			set receita = rs.%Get("Receituario")
			set inicio=1,pesquisa=""
			for contador=1:1:$length(receita){
				;if $ascii($extract(receita,contador))=10 set inicio=-1 continue
				;if inicio=-1{
				;	if $ascii($extract(receita,contador))=10 continue
				;	set inicio=contador
				;	set pesquisa=""
				;}
				set string = $extract(receita,contador)
				if $ascii(string)=10 set string="<br>"
				set pesquisa = pesquisa_string
			}
			set linha.Receituario = pesquisa

		do dataSource.%Push(linha)
		}
		set retorno.dataSource = dataSource
		set columns = []
		set coluna = {}
		set coluna.dataField = "Admissao"
		set coluna.caption = "Admissão"
		set coluna.alignment="center"
		set coluna.width = "100px"
		do columns.%Push(coluna)
		set coluna = {}
		set coluna.dataField = "DataAdmissao"
		set coluna.caption = "Data da Admissão"
		set coluna.dataType	="date"
		set coluna.alignment="center"
		set coluna.width = "150px"
		do columns.%Push(coluna)
		set coluna = {}
		set coluna.dataField = "Linha"
		set coluna.caption = "Linha"
		set coluna.alignment="center"
		set coluna.width = "50px"
		do columns.%Push(coluna)
		set coluna = {}
		set coluna.dataField = "Receituario"
		set coluna.caption = "Receituário"
		set retorno.columns = columns
		do columns.%Push(coluna)		
	}
	quit retorno
]]></Implementation>
</Method>

<Method name="histAdmissoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set dataInicial = $get(%request.Data("dataInicial",1))
	set dataFinal = $get(%request.Data("dataFinal",1))
	set historico = $get(%request.Data("historico",1))
	set dataInicial = $zdateh($piece($replace(dataInicial,"""",""),"T",1),3,,,,,,,"")
	set dataFinal = $zdateh($piece($replace(dataFinal,"""",""),"T",1),3,,,,,,,"")
	if dataInicial'="",dataFinal="" set dataFinal=dataInicial
	if dataFinal'="",dataInicial="" set dataInicial=dataFinal
	if dataInicial="" set dataInicial = +$horolog
	if dataFinal="" set dataFinal = +$horolog
	;
	Set codProfissional = ""
	set YBED1 = YBED
	set xYBED = $Replace(YBED1,"_"," ")
	if $Data(^MEDProviders(0,1,xYBED)) {
		Set codProfissional = $Order(^MEDProviders(0,1,xYBED,""))
	}
	;
	
	set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
	if codProfissional="",perm'=1 {
		set retorno = {}
		set retorno.data = []
		set retorno.aberto = 1
		set retorno.totalCount = 0
		write retorno.%ToJSON()
		quit $$$OK
	}

	set contador=0
	set query($i(contador)) = "select Patient,AdmissionID,DateAdmitted,TimeAdmitted,"
	set query($i(contador)) = "DateDischarged,TimeDischarged,Location,Profissional"
	set query($i(contador)) = "from MEDAdmission AdmP"
	set query($i(contador)) = "where company=0"
	if historico=1{
		if perm'=1{
			set query($i(contador)) = " and (%upper(Profissional)='"_codProfissional_"'"
			set query($i(contador)) = " or (select top 1 '1' from VARPEP Inner Join MEDAdmission on MEDAdmission.Company = VARPEP.Company and MEDAdmission.AdmissionID = VARPEP.Admissao and %upper(MEDAdmission.Patient)=%upper(AdmP.Patient) "
			set query($i(contador)) = "     where %upper(VARPEP.CriadoPor)='"_YBED1_"' "
			set query($i(contador)) = "     or %upper(VARPEP.AlteradoPor)='"_YBED1_"') = '1')"
		}
		set query($i(contador)) = " and DateAdmitted between "_(dataInicial)_" And "_(dataFinal)_" "	
		if paciente'=""{
			set query($i(contador)) = " and %UPPER(Patient) = '"_(paciente)_"'"	
		}
		set query($i(contador)) = "and %upper(DateDischarged) != ' '"
	}else{
		set query($i(contador)) = "and Patient='"_paciente_"'"
	}
	set query($i(contador)) = "Order by DateAdmitted desc, AdmissionID desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno = []
	set aberto=0
	while(rs.%Next()){
		set linha={}
		set linha.CodPaciente = rs.%Get("Patient")
		set obj = $get(^MEDPatient(0,rs.%Get("Patient"),1))
		set nomePaciente = $$$MEDPatientName(obj)
		set linha.Paciente = nomePaciente
		set linha.Admissao = rs.%Get("AdmissionID")
		set status="Em Aberto"
		if rs.%Get("DateDischarged")'="" set status="Encerrada"
		set linha.Tipo = "Paciente Externo"
		set linha.DataAdmissao = $select(rs.%Get("DateAdmitted")="":"",1:$zdate(rs.%Get("DateAdmitted"),1))
		set linha.HoraAdmissao = $select(rs.%Get("TimeAdmitted")="":"",1:$ztime(rs.%Get("TimeAdmitted"),1))
		set linha.DataAlta = $select(rs.%Get("DateDischarged")="":"",1:$zdate(rs.%Get("DateDischarged"),1))
		set linha.HoraAlta = $select(rs.%Get("TimeDischarged")="":"",1:$ztime(rs.%Get("TimeDischarged"),1))
		set linha.Convenio = "Paciente Externo"
		Set local = rs.%Get("Location")
		Set descLocal = $$SQLGetLocationName^VARSQL(local)
		If (local = 10 && (rs.%Get("Location") '= "")) {
			Set descLocal = "Consulta"
		} 
		set linha.local = descLocal
		set linha.Status = status
		if status="Em Aberto" set aberto = 1
		do retorno.%Push(linha)
	}
	;
	set saida = {}
	set saida.data = retorno
	set saida.aberto = aberto
	write saida.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="criaAdmissao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set strStatus = $$$OK
	tstart
	try{
		set xYBED = $Replace(YBED,"_"," ")
		Set codProfissional = $Order(^MEDProviders(0,1,xYBED,""))
		if codProfissional="" set strStatus="Usuário sem cadastro de profissional" quit
		set chave = $$GetNextNumber^COMUtils("MEDAdmission","")
		set $$$MEDAdmissionPatient(obj) = paciente
		set $$$MEDAdmissionLocation(obj) = "8.0"
		set $$$MEDAdmissionProfissional(obj) = codProfissional
		set $$$MEDAdmissionDateAdmitted(obj) = +$horolog
		set $$$MEDAdmissionTimeAdmitted(obj) = $piece($horolog,",",2)
		set strStatus = $$$Save("MEDAdmission",chave,obj,1)
	}
	catch e {
		set strStatus = "Erro no armazenamento: "_e.Name _ " em " _ e.Location
		trollback
		do ^%ET
	}
	set retorno = {}
	if $$$ISERR(strStatus){
		if $tl trollback
		set retorno.status = 0
		set retorno.mensagem = strStatus
		set retorno.tipo = "error"
	}else{
		tcommit
		set strStatus="Admissão criada com sucesso!"
		set retorno.status = 1
		set retorno.mensagem = strStatus
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaAdmissoesAbertas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set YBED = $Get(%request.Data("YBED",1))
	set periodo = $get(%request.Data("periodo",1))
	set codPaciente = $get(%request.Data("codPaciente",1))
	set dataInicial = $get(%request.Data("dataInicial",1))
	set dataFinal = $get(%request.Data("dataFinal",1))
	set historico = $get(%request.Data("historico",1))
	set dataInicial = $zdateh($piece($replace(dataInicial,"""",""),"T",1),3,,,,,,,"")
	set dataFinal = $zdateh($piece($replace(dataFinal,"""",""),"T",1),3,,,,,,,"")
	if dataInicial'="",dataFinal="" set dataFinal=dataInicial
	if dataFinal'="",dataInicial="" set dataInicial=dataFinal
	if dataInicial="" set dataInicial = +$horolog
	if dataFinal="" set dataFinal = +$horolog
	;
	Set codProfissional = ""
	set xYBED = $Replace(YBED,"_"," ")
	if $Data(^MEDProviders(0,1,xYBED)) {
		Set codProfissional = $Order(^MEDProviders(0,1,xYBED,""))
	}
	;
	set retorno = []	
	//if periodo'=""{
		/*set codPaciente=""
		for {
			set codPaciente = $order(^MEDPatient(0,codPaciente)) quit:codPaciente=""
			set obj = $get(^MEDPatient(0,codPaciente,1))
			set nomePaciente = $$$MEDPatientName(obj)
			set dtNascimento = $$$MEDPatientDOB(obj)
			set linha={}
			set linha.Admissao = " "
			set linha.Tipo = "Agendamento"
			set linha.CodPaciente = codPaciente
			set linha.Paciente = nomePaciente
			set linha.Idade = ..getIdade(dtNascimento)
			set data = $h+1+$r(4)
			set linha.DataAdmissao = $zdatetime(data_","_((10+$r(6))*60*60),1)
			set linha.Convenio = "Amil"
			set linha.Alertas = ..getAlertas(codPaciente)
			do retorno.%Push(linha)
		}*/
	;}else{
		set contador=0
		set query($i(contador)) = "select Patient,AdmissionID,DateAdmitted,TimeAdmitted,"
		set query($i(contador)) = "DateDischarged,TimeDischarged,PlanodeSaude"
		set query($i(contador)) = "from MEDAdmission"
		set query($i(contador)) = "where company=0"
		if historico=1{
			set query($i(contador)) = " and DateAdmitted between "_(dataInicial)_" And "_(dataFinal)_" "	
			if codPaciente'=""{
				set query($i(contador)) = " and %UPPER(Patient) = '"_(codPaciente)_"'"	
			}
			set query($i(contador)) = "and %upper(DateDischarged) != ' '"
		}else{
			if periodo'=""{
				set query($i(contador)) = "and DateAdmitted between "_(+$horolog+1)_" And "_(+$horolog+periodo)_""	
			}else{
				set query($i(contador)) = "and DateAdmitted = "_+$horolog_""	
			}
			set query($i(contador)) = "and %upper(DateDischarged) = ' '"
		}
		;set query($i(contador)) = "And (Profissional is null or Profissional = '"_codProfissional_"') "
		If (YBED '= "ALEX.PEP" && (YBED '= "JULIO" ) && (YBED '= "SILMAR" )) {
			set query($i(contador)) = "And (Profissional = '"_codProfissional_"') "
		}
		set query($i(contador)) = "Order by DateAdmitted desc, AdmissionID desc"
		set query = $order(query(""),-1)
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		while(rs.%Next()){
			set codPaciente = rs.%Get("Patient")
			set obj = $get(^MEDPatient(0,codPaciente,1))
			set nomePaciente = $$$MEDPatientName(obj)
			set dtNascimento = $$$MEDPatientDOB(obj)
			;
			set linha={}
			set linha.Admissao = rs.%Get("AdmissionID")
			set linha.Tipo = "Aguar. Atendimento"
			set linha.CodPaciente = codPaciente
			set linha.Paciente = nomePaciente
			set linha.Idade = ..getIdade(dtNascimento)
			set linha.DataAdmissao = $select(rs.%Get("DateAdmitted")="":$zdate($h,1),1:$zdate(rs.%Get("DateAdmitted"),1))
			if rs.%Get("TimeAdmitted")'=""{
				set linha.DataAdmissao = linha.DataAdmissao_" "_$ztime(rs.%Get("TimeAdmitted"),1)
			}
			set linha.Convenio = rs.%Get("PlanodeSaude")
			set linha.Alertas = ..getAlertas(codPaciente, rs.%Get("AdmissionID"))
			do retorno.%Push(linha)
		}
		/*set codPaciente="2"
		set obj = $get(^MEDPatient(0,codPaciente,1))
		set nomePaciente = $$$MEDPatientName(obj)
		set dtNascimento = $$$MEDPatientDOB(obj)
		set linha={}
		set linha.Admissao = " "
		set linha.Tipo = "Agendamento"
		set linha.CodPaciente = codPaciente
		set linha.Paciente = nomePaciente
		set linha.Idade = ..getIdade(dtNascimento)
		set linha.DataAdmissao = $zdatetime($h,1)
		set linha.Convenio = "Amil"
		set linha.Alertas = ..getAlertas(codPaciente)
		do retorno.%Push(linha)*/
		
		;
	;}
	;
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaHistoricoPassagens">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set YBED = $Get(%request.Data("YBED",1))
	;
	Set codProfissional = ""
	set xYBED = $Replace(YBED,"_"," ")
	if $Data(^MEDProviders(0,1,xYBED)) {
		Set codProfissional = $Order(^MEDProviders(0,1,xYBED,""))
	}
	;
	set retorno = []	
	set contador=0
	set query($i(contador)) = "select Patient,AdmissionID,DateAdmitted,TimeAdmitted,"
	set query($i(contador)) = "DateDischarged,TimeDischarged,PlanodeSaude"
	set query($i(contador)) = "from MEDAdmission"
	set query($i(contador)) = "where company=0 and"
	set query($i(contador)) = "DateAdmitted between "_(+$horolog-5)_" And "_(+$horolog+5)_" And "	
	set query($i(contador)) = "%upper(DateDischarged) = ' '"
	;set query($i(contador)) = "And (Profissional is null or Profissional = '"_codProfissional_"') "
	If (YBED '= "ALEX.PEP" && (YBED '= "JULIO" ) && (YBED '= "SILMAR" )) {
		set query($i(contador)) = "And (Profissional = '"_codProfissional_"') "
	}
	set query($i(contador)) = "Order by DateAdmitted desc, AdmissionID desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set codPaciente = rs.%Get("Patient")
		set obj = $get(^MEDPatient(0,codPaciente,1))
		set nomePaciente = $$$MEDPatientName(obj)
		set dtNascimento = $$$MEDPatientDOB(obj)
		;
		set linha={}
		set linha.Admissao = rs.%Get("AdmissionID")
		set linha.Tipo = "Aguar. Atendimento"
		set linha.CodPaciente = codPaciente
		set linha.Paciente = nomePaciente
		set linha.Idade = ..getIdade(dtNascimento)
		set linha.DataAdmissao = $select(rs.%Get("DateAdmitted")="":$zdate($h,1),1:$zdate(rs.%Get("DateAdmitted"),1))
		if rs.%Get("TimeAdmitted")'=""{
			set linha.DataAdmissao = linha.DataAdmissao_" "_$ztime(rs.%Get("TimeAdmitted"),1)
		}
		set linha.Convenio = rs.%Get("PlanodeSaude")
		set linha.Alertas = ..getAlertas(codPaciente, rs.%Get("AdmissionID"))
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recPaciente">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codPaciente = $get(%request.Data("codPaciente",1))
	Set passagem = $get(%request.Data("passagem",1))
	if codPaciente="" quit
	kill ^mtemp.VARPEPExamesLista(%session.SessionId)
	kill ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId)
	kill ^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId)
	kill ^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId)
	set obj = $get(^MEDPatient(0,codPaciente,1))
	set nomePaciente = $$$MEDPatientName(obj)
	set sexo = $$$MEDPatientGender(obj)
	set dtNascimento = $$$MEDPatientDOB(obj)
	set alergias = $$$MEDPatientAllergies(obj)
	set prontuario = $$SQLGetPatientProntuario^VARSQL(codPaciente)
	set Telefone = $$$MEDPatientTel(obj)
	set Telefone2 = $$$MEDPatientFREE2(obj)
	set retorno = {}
	set retorno.Codigo 		= codPaciente
	set retorno.Nome 		= nomePaciente
	set retorno.Nascimento 	= $select(dtNascimento'="":$zdate(dtNascimento,1),1:"")
	set retorno.Idade 		= ..getIdade(dtNascimento)
	set retorno.Sexo 		= $PIECE($get(^WWW101(0,"SEX","PT",+sexo,1)),"~",1)
	set retorno.Telefone	= Telefone
	set retorno.Telefone2	= Telefone2
	set retorno.Alergias 	= alergias
	set retorno.Prontuário 	= prontuario
	set retorno.ImageSRC = YGIF_"PEP/pacientes/"_codPaciente_".jpg"
	set dia = $piece($zd($horolog,4),"/",1)
	set mes = $piece($zd($horolog,4),"/",2)
	set ano = $piece($zd($horolog,4),"/",3)
	set meses(1)="Janeiro"
	set meses(2)="Fevereiro"
	set meses(3)="Março"
	set meses(4)="Abril"
	set meses(5)="Maio"
	set meses(6)="Junho"
	set meses(7)="Julho"
	set meses(8)="Agosto"
	set meses(9)="Setembro"
	set meses(10)="Outubro"
	set meses(11)="Novembro"
	set meses(12)="Dezembro"
	set retorno.DataHoraReceituario = "São Paulo, "_dia_" de "_$get(meses(+mes))_" de "_ano
	set alertas = ..getAlertas(codPaciente, passagem)
	set retorno.Alertas = alertas
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaAnamnese">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	set objAnt = ""
	if passagem'=""	{
		;if (passagem = "20/000101") do ..preCarregaNovaAdmissao(passagem)
		if '$data(^VARPEP(0,passagem,1)) do ..preCarregaNovaAdmissao(passagem)
		set objAnt = $get(^VARPEP(0,passagem,1))
	}
	set objAnamnese={}
	set objAnamnese.historiaSintomas = $$$VARPEPAnamneseHistSintomas(objAnt)
	;
	set molestiasObj = $$$VARPEPAnamneseMolestias(objAnt)
	set molestias=[]
	for i=1:1:$length(molestiasObj,";"){
		if $piece(molestiasObj,";",i)="" continue
		do molestias.%Push($piece(molestiasObj,";",i))
	}
	set objAnamnese.molestiasPregressasAtuais		= molestias
	set objAnamnese.molestiasPregressasLivre		= $$$VARPEPAnamneseMolestiasPregress(objAnt)
	set objAnamnese.medicacoesUtilizadasLivre		= $$$VARPEPAnamneseMedicUtilizadasLi(objAnt)
	;	
	kill ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId)
	set datasGestacionais = []
	for i=1:1:$length($$$VARPEPAnamneseAntGestacionais(objAnt),";"){
		set dataG = $piece($$$VARPEPAnamneseAntGestacionais(objAnt),";",i)
		if dataG="" continue
		do datasGestacionais.%Push($zdate(dataG,4))
		set ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,dataG) = ""
	}
	set objAnamnese.datasGestacionais = datasGestacionais
	if $$$VARPEPAnamneseAntGestacionais(objAnt)'="" {
		set objAnamnese.antecedentesGestacionais = 1
	}else{
		If ($$$VARPEPAnamneseQtdeGestacao(objAnt) '= "") {
			set objAnamnese.antecedentesGestacionais = 1
		}else{
			set objAnamnese.antecedentesGestacionais = 0	
		}
	}
	set objAnamnese.qtdeGestacao = $$$VARPEPAnamneseQtdeGestacao(objAnt)
	;
	set objAnamnese.historiaMenstrual	= $$$VARPEPAnamneseHistMenstrual(objAnt)
	set objAnamnese.descendencia		= $$$VARPEPAnamneseDescendencia(objAnt) 
	set objAnamnese.antecedentesCirurgicosTexto	 = $$$VARPEPAnamnesePossuiAntCirurgicos(objAnt) 
	set objAnamnese.habitosVicios		= $$$VARPEPAnamneseHabitosVicios(objAnt) 
	
	set medicUtilizadasObj = $$$VARPEPAnamneseMedicUtilizadas(objAnt)
	set medicUtilizadas=[]
	for i=1:1:$length(medicUtilizadasObj,";"){
		if $piece(medicUtilizadasObj,";",i)="" continue
		do medicUtilizadas.%Push($piece(medicUtilizadasObj,";",i))
	}
	;
	set objAnamnese.medicacoesUtilizadas	= medicUtilizadas
	set objAnamnese.antecedentesFamiliares	= $$$VARPEPAnamneseAntFamiliares(objAnt) 
	set objAnamnese.pa1			= $$$VARPEPAnamnesePA1(objAnt) 
	set objAnamnese.pulso		= $$$VARPEPAnamnesePulso(objAnt) 
	set objAnamnese.temp		= $$$VARPEPAnamneseTemp(objAnt) 
	set objAnamnese.peso		= $$$VARPEPAnamnesePeso(objAnt) 
	set objAnamnese.altura		= $$$VARPEPAnamneseAltura(objAnt)
	set objAnamnese.sc			= $$$VARPEPAnamneseSC(objAnt) 
	set objAnamnese.cabecaPescoco	= $$$VARPEPAnamneseCabecaPescoco(objAnt)
	set objAnamnese.torax	= $$$VARPEPAnamneseTorax(objAnt) 
	set objAnamnese.coracao	= $$$VARPEPAnamneseCoracao(objAnt)
	set objAnamnese.pulmoes	= $$$VARPEPAnamnesePulmoes(objAnt)
	set objAnamnese.abdomen	= $$$VARPEPAnamneseAbdomen(objAnt)
	set objAnamnese.figado	= $$$VARPEPAnamneseFigado(objAnt)
	set objAnamnese.baco	= $$$VARPEPAnamneseBaco(objAnt) 
	set objAnamnese.mmss	= $$$VARPEPAnamneseMMSS(objAnt) 
	set objAnamnese.mmii	= $$$VARPEPAnamneseMMII(objAnt) 
	;
	/*set condutaObj = $$$VARPEPAnamneseConduta(objAnt)
	set conduta=[]
	for i=1:1:$length(condutaObj,";"){
		if $piece(condutaObj,";",i)="" continue
		do conduta.%Push($piece(condutaObj,";",i))
	}
	;
	set objAnamnese.conduta	= conduta*/
	set objAnamnese.conduta	= $$$VARPEPAnamneseConduta(objAnt)
	;
	set hdObj = $$$VARPEPAnamneseHD(objAnt)
	set hd=[]
	for i=1:1:$length(hdObj,";"){
		if $piece(hdObj,";",i)="" continue
		do hd.%Push($piece(hdObj,";",i))
	}
	set objAnamnese.hd		= hd
	set objAnamnese.pa1		= $$$VARPEPAnamnesePA1(objAnt)
	set objAnamnese.pa2		= $$$VARPEPAnamnesePA2(objAnt)
	set objAnamnese.antecedentesCirurgicos = $$$VARPEPAnamneseAntCirurgicos(objAnt)
	set objAnamnese.paiFalecido = $$$VARPEPAnamnesePaiFalecido(objAnt)
	set cidPaiObj = $$$VARPEPAnamneseCIDFalecimentoPai(objAnt)
	set cidPai=[]
	for i=1:1:$length(cidPaiObj,";"){
		if $piece(cidPaiObj,";",i)="" continue
		do cidPai.%Push($piece(cidPaiObj,";",i))
	}
	set objAnamnese.cidFalecimentoPai		= cidPai
	set objAnamnese.causaFalecimentoPai = $$$VARPEPAnamneseCausaFalecimentoP(objAnt)
	set objAnamnese.maeFalecida = $$$VARPEPAnamneseMaeFalecida(objAnt)
	set cidMaeObj = $$$VARPEPAnamneseCIDFalecimentoMae(objAnt)
	set cidMae=[]
	for i=1:1:$length(cidMaeObj,";"){
		if $piece(cidMaeObj,";",i)="" continue
		do cidMae.%Push($piece(cidMaeObj,";",i))
	}
	set objAnamnese.cidFalecimentoMae		= cidMae	
	set objAnamnese.causaFalecimentoMae = $$$VARPEPAnamneseCausaFalecimentoM(objAnt)
	set objAnamnese.outrosFalecimento = $$$VARPEPAnamneseOutrosFalecimento(objAnt)
	If ($$$VARPEPCriadoPor(objAnt) = "AUTO") {
		set paciente = $piece($get(^MEDAdmission(0,passagem,1)),"~",1)
		set query($i(contador)) = "select Top 1 VARPEP.Admissao, VARPEP.CriadoEm, VARPEP.AlteradoEm "
		set query($i(contador)) = "from MEDAdmission, VARPEP "
		set query($i(contador)) = "where MEDAdmission.company=0 and VARPEP.company=0 and"
		set query($i(contador)) = "MEDAdmission.Patient='"_paciente_"' and"
		set query($i(contador)) = "MEDAdmission.AdmissionID=VARPEP.admissao and"
		set query($i(contador)) = "VARPEP.admissao<'"_passagem_"' "
		set query($i(contador)) = "Order by VARPEP.Admissao desc"
		set query = $order(query(""),-1)
		set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
		Set objAnamnese.copiadoDe = ""
		If (rs.%Next()){
			If (rs.%Get("AlteradoEm")'="") {
				Set objAnamnese.copiadoDe = $zdatetime(rs.%Get("AlteradoEm"),4,2)
			}else{
				Set objAnamnese.copiadoDe = $zdatetime(rs.%Get("CriadoEm"),4,2)	
			}
		}
	}Else{
		Set objAnamnese.copiadoDe = "" 	
	}
	
	write objAnamnese.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaEvolucao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	set retorno = {}
	if passagem'=""	{
		if '$data(^VARPEP(0,passagem,1)) do ..preCarregaNovaAdmissao(passagem)
		if '$data(^VARPEPEvolucao(0,passagem)){
			Set codPaciente = $piece($Get(^MEDAdmission(0, passagem, 1)),"~",1)
			Set meuSQL = "Select Top 1 Evolucao.NumerodoPEP,Evolucao.Data, Evolucao.Hora "
			Set meuSQL = meuSQL _ "From SQLUser.VARPEPEvolucao As Evolucao, "
			Set meuSQL = meuSQL _ "SQLUser.MEDAdmission As Admission "
			Set meuSQL = meuSQL _ "Where Evolucao.Company = 0 And Admission.Company=0 and "
			Set meuSQL = meuSQL _ "Evolucao.NumerodoPEP = Admission.AdmissionID And "
			Set meuSQL = meuSQL _ "%upper(Admission.Patient) = '"_codPaciente_"'"
			Set meuSQL = meuSQL _ "order by data desc, hora desc"
			set rs = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
			while(rs.%Next()){
				set NumerodoPEP = rs.%Get("NumerodoPEP")
				set Data = rs.%Get("Data")
				set Hora = rs.%Get("Hora")
				set obj = $get(^VARPEPEvolucao(0,NumerodoPEP,Data,Hora,1))
				set ret = $$$Save("VARPEPEvolucao",passagem_","_+$horolog_","_$piece($horolog,",",2),obj,1)
				quit
			}
		}
		set ultData = "",ultHora = ""
		set ultData = $order(^VARPEPEvolucao(0,passagem,""),-1)
		if ultData'="" set ultHora = $order(^VARPEPEvolucao(0,passagem,ultData,""),-1)
		if ultHora'=""{
			set objAnt = $get(^VARPEPEvolucao(0,passagem,ultData,ultHora,1))
			set cidObj = []
			set cid = $$$VARPEPEvolucaoCID(objAnt)
			for i=1:1:$length(cid,";"){
				if $piece(cid,";",i)="" continue
				do cidObj.%Push($piece(cid,";",i))
			}
			set retorno.cid = cidObj
			set retorno.pa1	= $$$VARPEPEvolucaoPA1(objAnt)  
			set retorno.pulso = $$$VARPEPEvolucaoPulso(objAnt) 
			set retorno.temp = $$$VARPEPEvolucaoTemp(objAnt)
			set retorno.descricao = $$$VARPEPEvolucaoDescricao(objAnt) 
			set retorno.conduta = $$$VARPEPEvolucaoConduta(objAnt) 
			set retorno.pa2 = $$$VARPEPEvolucaoPA2(objAnt) 
		}
	}	
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recEvolucaoAnterior">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set pAdm = $get(%request.Data("pAdm",1))
	set pData = $get(%request.Data("pData",1))
	set pHora = $get(%request.Data("pHora",1))
	set retorno = {}
	set retorno.title = $zdate(pData,4)_" às "_$ztime(pHora,2)
	;;
	if '$data(^VARPEPEvolucao(0,pAdm,pData,pHora,1)){
		set pData = $order(^VARPEPEvolucao(0,pAdm,""),-1)
		set:pData'="" pHora = $order(^VARPEPEvolucao(0,pAdm,pData,""),-1)
		set objAnt = $get(^VARPEPEvolucao(0,pAdm,pData,pHora,1))
	}else{
		set objAnt = $get(^VARPEPEvolucao(0,pAdm,pData,pHora,1))
	}
	
	set cidObj = []
	set cid = $$$VARPEPEvolucaoCID(objAnt)
	for i=1:1:$length(cid,";"){
		if $piece(cid,";",i)="" continue
		do cidObj.%Push($piece(cid,";",i))
	}
	set retorno.cid = cidObj
	set retorno.pa1	= $$$VARPEPEvolucaoPA1(objAnt)  
	set retorno.pulso = $$$VARPEPEvolucaoPulso(objAnt) 
	set retorno.temp = $$$VARPEPEvolucaoTemp(objAnt)
	set retorno.descricao = $$$VARPEPEvolucaoDescricao(objAnt) 
	set retorno.conduta = $$$VARPEPEvolucaoConduta(objAnt) 
	set retorno.pa2 = $$$VARPEPEvolucaoPA2(objAnt) 
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="carregaReqExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	kill ^mtemp.VARPEPExames(%session.SessionId)
	kill ^mtemp.VARPEPExamesLista(%session.SessionId)
	set nseq=""
	for {
		set nseq = $order(^VARPEPExamesLista(0,passagem,nseq)) quit:nseq=""
		set code=""
		for {
			set code = $order(^VARPEPExamesLista(0,passagem,nseq,code)) quit:code=""
			set obj = $get(^VARPEPExamesLista(0,passagem,nseq,code,1))
			set perfil = $$$VARPEPExamesListaNumerodoProtocolodoExame(obj)
			set observacoes = $$$VARPEPExamesListaObservacoes(obj)
			set flImpr = $$$VARPEPExamesListaIndicadordeImpressaodaDat(obj)
			Set tipo = $piece($get(^INART(0,code,1)),"~",26)
			If (tipo = "4" || (tipo = "5") || (tipo = "6")) Set tipo = 1
			If (tipo = "7") Set tipo = 2
			if tipo="" continue
			set ^mtemp.VARPEPExamesLista(%session.SessionId,nseq,tipo,code) = obj
		}
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="carregaPrescricoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	;
	kill ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId)
	set nseq=""
	for {
		set nseq = $order(^VARPEPReceituario(0,passagem,nseq)) quit:nseq=""
		set obj = $get(^VARPEPReceituario(0,passagem,nseq,1))
		set ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq) = obj
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="carregaDeclaracoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	;
	kill ^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId)
	set nseq=""
	for {
		set nseq = $order(^VARPEPDeclaracao(0,passagem,nseq)) quit:nseq=""
		set obj = $get(^VARPEPDeclaracao(0,passagem,nseq,1))
		set ^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,nseq) = obj
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="carregaEventosAdversos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	set objAnt = ""
	if passagem'=""	{
		if '$data(^VARPEP(0,passagem,1)) do ..preCarregaNovaAdmissao(passagem)
		set objAnt = $get(^VARPEP(0,passagem,1))
	}
	kill ^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId)
	set data=""
	for {
		set data = $order(^VARPEPAdversos(0,passagem,data)) quit:data=""
		set hora=""
		for {
			set hora = $order(^VARPEPAdversos(0,passagem,data,hora)) quit:hora=""
			set obj = $get(^VARPEPAdversos(0,passagem,data,hora,1))
			set descricao = $$$VARPEPAdversosDescricao(obj)
			set conduta = $$$VARPEPAdversosConduta(obj)
			set conclusao = $$$VARPEPAdversosConclusao(obj)
			set ^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data,hora) = descricao_"~"_conduta_"~"_conclusao
		}
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="carregaResultados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	write 1
	quit
]]></Implementation>
</Method>

<Method name="carregaRegistrosAnteriores">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set objAnt = ""
	if paciente'="" set objAnt = $get(^VARPEPAntigos(0,paciente,1))
	set objAnamnese={}
	set objAnamnese.historiaSintomas = $$$VARPEPAnamneseHistSintomas(objAnt)
	set objAnamnese.molestiasPregressasAtuais = $$$VARPEPAnamneseMolestias(objAnt)
	set objAnamnese.molestiasPregressasLivre	= $$$VARPEPAnamneseMolestiasPregress(objAnt)
	set objAnamnese.medicacoesUtilizadasLivre = $$$VARPEPAnamneseMedicUtilizadasLi(objAnt) 

	;	
	kill ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId)
	set datasGestacionais = []
	for i=1:1:$length($$$VARPEPAnamneseAntGestacionais(objAnt),";"){
		set dataG = $piece($$$VARPEPAnamneseAntGestacionais(objAnt),";",i)
		if dataG="" continue
		do datasGestacionais.%Push($zdate(dataG,4))
		set ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,dataG) = ""
	}
	set objAnamnese.datasGestacionais = datasGestacionais
	if $$$VARPEPAnamneseAntGestacionais(objAnt)'="" {
		set objAnamnese.antecedentesGestacionais = 1
	}else{
		If ($$$VARPEPAnamneseQtdeGestacao(objAnt) '= "") {
			set objAnamnese.antecedentesGestacionais = 1
		}else{
			set objAnamnese.antecedentesGestacionais = 0	
		}
	}
	set objAnamnese.qtdeGestacao = $$$VARPEPAnamneseQtdeGestacao(objAnt)
	;
	set objAnamnese.historiaMenstrual	= $$$VARPEPAnamneseHistMenstrual(objAnt)
	set objAnamnese.descendencia		= $$$VARPEPAnamneseDescendencia(objAnt) 
	set objAnamnese.antecedentesCirurgicosTexto	 = $$$VARPEPAnamnesePossuiAntCirurgicos(objAnt) 
	set objAnamnese.habitosVicios		= $$$VARPEPAnamneseHabitosVicios(objAnt) 
	set medicUtilizadasObj = $$$VARPEPAnamneseMedicUtilizadas(objAnt)
	set medicUtilizadas=[]
	for i=1:1:$length(medicUtilizadasObj,";"){
		if $piece(medicUtilizadasObj,";",i)="" continue
		do medicUtilizadas.%Push($piece(medicUtilizadasObj,";",i))
	}
	;
	set objAnamnese.medicacoesUtilizadas	= medicUtilizadas
	;set objAnamnese.medicacoesUtilizadas	= $$$VARPEPAnamneseMedicUtilizadas(objAnt)
	set objAnamnese.antecedentesFamiliares	= $$$VARPEPAnamneseAntFamiliares(objAnt) 
	set objAnamnese.pa1			= $$$VARPEPAnamnesePA1(objAnt) 
	set objAnamnese.pulso		= $$$VARPEPAnamnesePulso(objAnt) 
	set objAnamnese.temp		= $$$VARPEPAnamneseTemp(objAnt) 
	set objAnamnese.peso		= $$$VARPEPAnamnesePeso(objAnt) 
	set objAnamnese.altura		= $$$VARPEPAnamneseAltura(objAnt)
	set objAnamnese.sc			= $$$VARPEPAnamneseSC(objAnt) 
	set objAnamnese.cabecaPescoco	= $$$VARPEPAnamneseCabecaPescoco(objAnt)
	set objAnamnese.torax	= $$$VARPEPAnamneseTorax(objAnt) 
	set objAnamnese.coracao	= $$$VARPEPAnamneseCoracao(objAnt)
	set objAnamnese.pulmoes	= $$$VARPEPAnamnesePulmoes(objAnt)
	set objAnamnese.abdomen	= $$$VARPEPAnamneseAbdomen(objAnt)
	set objAnamnese.figado	= $$$VARPEPAnamneseFigado(objAnt)
	set objAnamnese.baco	= $$$VARPEPAnamneseBaco(objAnt) 
	set objAnamnese.mmss	= $$$VARPEPAnamneseMMSS(objAnt) 
	set objAnamnese.mmii	= $$$VARPEPAnamneseMMII(objAnt) 
	;
	/*set condutaObj = $$$VARPEPAnamneseConduta(objAnt)
	set conduta=[]
	for i=1:1:$length(condutaObj,";"){
		if $piece(condutaObj,";",i)="" continue
		do conduta.%Push($piece(condutaObj,";",i))
	}
	set objAnamnese.conduta	= conduta*/
	set objAnamnese.conduta	= $$$VARPEPAnamneseConduta(objAnt)
	;
	set hdObj = $$$VARPEPAnamneseHD(objAnt)
	set hd=[]
	for i=1:1:$length(hdObj,";"){
		if $piece(hdObj,";",i)="" continue
		do hd.%Push($piece(hdObj,";",i))
	}
	set objAnamnese.hd		= hd
	set objAnamnese.pa2		= $$$VARPEPAnamnesePA2(objAnt)
	set objAnamnese.antecedentesCirurgicos = $$$VARPEPAnamneseAntCirurgicos(objAnt)
	set objAnamnese.paiFalecido = $$$VARPEPAnamnesePaiFalecido(objAnt)
	set cidPaiObj = $$$VARPEPAnamneseCIDFalecimentoPai(objAnt)
	set cidPai=[]
	for i=1:1:$length(cidPaiObj,";"){
		if $piece(cidPaiObj,";",i)="" continue
		do cidPai.%Push($piece(cidPaiObj,";",i))
	}
	set objAnamnese.cidFalecimentoPai		= cidPai
	set objAnamnese.causaFalecimentoPai = $$$VARPEPAnamneseCausaFalecimentoP(objAnt)
	set objAnamnese.maeFalecida = $$$VARPEPAnamneseMaeFalecida(objAnt)
	set cidMaeObj = $$$VARPEPAnamneseCIDFalecimentoMae(objAnt)
	set cidMae=[]
	for i=1:1:$length(cidMaeObj,";"){
		if $piece(cidMaeObj,";",i)="" continue
		do cidMae.%Push($piece(cidMaeObj,";",i))
	}
	set objAnamnese.cidFalecimentoMae		= cidMae	
	set objAnamnese.causaFalecimentoMae = $$$VARPEPAnamneseCausaFalecimentoM(objAnt)
	set objAnamnese.outrosFalecimento = $$$VARPEPAnamneseOutrosFalecimento(objAnt)
	write objAnamnese.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="preCarregaNovaAdmissao">
<ClassMethod>1</ClassMethod>
<FormalSpec>admissao</FormalSpec>
<Implementation><![CDATA[
	set paciente = $piece($get(^MEDAdmission(0,admissao,1)),"~",1)
	set query($i(contador)) = "select Top 1 VARPEP.Admissao "
	set query($i(contador)) = "from MEDAdmission, VARPEP "
	set query($i(contador)) = "where MEDAdmission.company=0 and VARPEP.company=0 and"
	set query($i(contador)) = "MEDAdmission.Patient='"_paciente_"' and"
	set query($i(contador)) = "MEDAdmission.AdmissionID=VARPEP.admissao and"
	set query($i(contador)) = "VARPEP.admissao<'"_passagem_"' "
	set query($i(contador)) = "Order by VARPEP.Admissao desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno=[]
	while(rs.%Next()){
		set ultimoPEP = rs.%Get("Admissao")
		set obj = $get(^VARPEP(0,ultimoPEP,1))
		set $piece(nobj,"~",1,32) = $piece(obj,"~",1,32)
		set $piece(nobj,"~",154,157) = $piece(obj,"~",154,157)
		;
		set $piece(nobj,"~",150) = $horolog
		set $piece(nobj,"~",151) = "AUTO"
		;
		set ret = $$$Save("VARPEP",passagem,nobj,1)
		quit
	}
	quit 1
]]></Implementation>
</Method>

<Method name="salvarExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set descricao = $get(%request.Data("descricao",1))
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $$GetNextNumber^COMUtils("VARExames","")
	set obj = descricao_"~"_tipo
	set retSave = $$$Save("VARExames",codigo,obj,1)
	set ret = {}
	if $$$ISERR(retSave){
		set ret.status = 0
		set ret.retorno   = retSave
	}
	set ret.status = 1
	set ret.retorno = "Exame salvo com sucesso!"
	write ret.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvarDadosParcialAnamnese">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set passagem = $get(%request.Data("passagem",1))
	set dados	 = $get(%request.Data("dados",1))
	;
	set ^pep.salvaparcial($horolog)=YBED_"~"_paciente_"~"_$get(passagem)_"~"_$get(dados)
	;
	try {
		tstart
		;
		set ret = $$$OK
		set objAdmission = $get(^MEDAdmission(0,passagem,1))
		if $$$MEDAdmissionDateDischarged(objAdmission)=""{
			;
			set objAnt = $get(^VARPEP(0,passagem,1))
			set dados = $replace(dados,"~"," ")
			set dadosObj = [].%FromJSON(dados)
			set campo = dadosObj.campo
			set valor = dadosObj.valor
			
			;
			;
			if campo="historiaSintomas" set $$$VARPEPAnamneseHistSintomas(objAnt) 	= valor
			;
			if campo="molestiasPregressasAtuais"{
				set molestias = ""
				if valor'=""{
					if valor.%Size()>0{
						for {
							set molestias1 = valor.%Pop()
							quit:molestias1=""
							set:molestias'="" molestias=molestias_";"
							set molestias=molestias_molestias1
						}
					}
				}
				set $$$VARPEPAnamneseMolestias(objAnt) = molestias
			}
			;
			if campo="molestiasPregressasLivre" set $$$VARPEPAnamneseMolestiasPregress(objAnt) = valor
			if campo="medicacoesUtilizadasLivre" set $$$VARPEPAnamneseMedicUtilizadasLi(objAnt) = valor
			;
			if campo="datasGestacionais"{
				set datas = ""
				if valor'=""{
					if valor.%Size()>0{
						for {
							set dataG = valor.%Pop()
							quit:dataG=""
							set:datas'="" datas=datas_";"
							set datas=datas_$zdateh(dataG,4)
						}
					}
				}
				set $$$VARPEPAnamneseAntGestacionais(objAnt) = datas
			}
			if campo="qtdeGestacao" set $$$VARPEPAnamneseQtdeGestacao(objAnt) = valor
			if campo="historiaMenstrual" set $$$VARPEPAnamneseHistMenstrual(objAnt) = valor
			if campo="descendencia" set $$$VARPEPAnamneseDescendencia(objAnt) = valor
			if campo="antecedentesCirurgicosTexto" set $$$VARPEPAnamnesePossuiAntCirurgicos(objAnt) = valor
			if campo="habitosVicios" set $$$VARPEPAnamneseHabitosVicios(objAnt)  = valor
			if campo="medicacoesUtilizadas"{
				set medicUtilizadas = ""
				if valor'=""{
					if valor.%Size()>0{
						for {
							set medicUtilizadas1 = valor.%Pop()
							quit:medicUtilizadas1=""
							set:medicUtilizadas'="" medicUtilizadas=medicUtilizadas_";"
							set medicUtilizadas=medicUtilizadas_medicUtilizadas1
						}
					}
				}
				set $$$VARPEPAnamneseMedicUtilizadas(objAnt) = medicUtilizadas
			}
			if campo="antecedentesFamiliares" set $$$VARPEPAnamneseAntFamiliares(objAnt)  = valor
			if campo="pa1" set $$$VARPEPAnamnesePA1(objAnt)  = valor
			if campo="pulso" set $$$VARPEPAnamnesePulso(objAnt) = valor
			if campo="temp" set $$$VARPEPAnamneseTemp(objAnt) = valor
			if campo="peso" set $$$VARPEPAnamnesePeso(objAnt) = valor
			if campo="altura" set $$$VARPEPAnamneseAltura(objAnt) = valor
			if campo="sc" set $$$VARPEPAnamneseSC(objAnt) = valor
			if campo="cabecaPescoco" set $$$VARPEPAnamneseCabecaPescoco(objAnt) = valor
			if campo="torax" set $$$VARPEPAnamneseTorax(objAnt) = valor
			if campo="coracao" set $$$VARPEPAnamneseCoracao(objAnt) = valor
			if campo="pulmoes" set $$$VARPEPAnamnesePulmoes(objAnt) = valor
			if campo="abdomen" set $$$VARPEPAnamneseAbdomen(objAnt) = valor
			if campo="figado" set $$$VARPEPAnamneseFigado(objAnt) = valor
			if campo="baco" set $$$VARPEPAnamneseBaco(objAnt) = valor
			if campo="mmss" set $$$VARPEPAnamneseMMSS(objAnt) = valor
			if campo="mmii" set $$$VARPEPAnamneseMMII(objAnt) = valor
			if campo="conduta" set $$$VARPEPAnamneseConduta(objAnt) = valor
			;
			if campo="hd"{
				set hd = ""
				if valor'=""{
					if valor.%Size()>0{
						for {
							set hd1 = valor.%Pop()
							quit:hd1=""
							set:hd'="" hd=hd_";"
							set hd=hd_hd1
						}
					}
				}
				set $$$VARPEPAnamneseHD(objAnt) = hd
			}
			if campo="pa2" set $$$VARPEPAnamnesePA2(objAnt) = valor
			if campo="antecedentesCirurgicos" set $$$VARPEPAnamneseAntCirurgicos(objAnt) = valor
			if campo="paiFalecido" set $$$VARPEPAnamnesePaiFalecido(objAnt) = valor
			if campo="cidFalecimentoPai"{
				set paiCID = ""
				if valor'=""{
					if valor.%Size()>0{
						for {
							set paiCID1 = valor.%Pop()
							quit:paiCID1=""
							set:paiCID'="" paiCID=paiCID_";"
							set paiCID=paiCID_paiCID1
						}
					}
				}
				set $$$VARPEPAnamneseCIDFalecimentoPai(objAnt) = paiCID
			}
			if campo="causaFalecimentoPai" set $$$VARPEPAnamneseCausaFalecimentoP(objAnt) = valor
			if campo="maeFalecida" set $$$VARPEPAnamneseMaeFalecida(objAnt) = valor
			if campo="cidFalecimentoMae"{
				set maeCID = ""
				if valor'=""{
					if valor.%Size()>0{
						for {
							set maeCID1 = valor.%Pop()
							quit:maeCID1=""
							set:maeCID'="" maeCID=maeCID_";"
							set maeCID=maeCID_maeCID1
						}
					}
				}
				set $$$VARPEPAnamneseCIDFalecimentoMae(objAnt) = maeCID
			}
			if campo="causaFalecimentoMae" set $$$VARPEPAnamneseCausaFalecimentoM(objAnt) = valor
			if campo="outrosFalecimento" set $$$VARPEPAnamneseOutrosFalecimento(objAnt) = valor
			if objAnt'=$get(^VARPEP(0,passagem,1)){
				if $$$VARPEPCriadoEm(objAnt) = ""{
					set $$$VARPEPCriadoEm(objAnt) = $horolog
					set $$$VARPEPCriadoPor(objAnt) = YBED
				}
				set $$$VARPEPAlteradoEm(objAnt) = $horolog
				set $$$VARPEPAlteradoPor(objAnt) = YBED
				set ret = $$$Save("VARPEP",passagem,objAnt,1)
			}
		}
	}
	catch(exception){
		trollback
		Do ^%ET
		set ret = exception.AsStatus()
		set ^pep.erro($horolog)=$get(YBED)_"~"_$get(paciente)_"~"_$get(passagem)_"~"_$get(dados)
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set ^pep.erro($horolog)=$get(YBED)_"~"_$get(paciente)_"~"_$get(passagem)_"~"_$get(dados)
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvarDadosParcialEvolucao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set passagem = $get(%request.Data("passagem",1))
	set dados	 = $get(%request.Data("dados",1))
	;
	set ^pep.salvaparcial($horolog)=YBED_"~"_paciente_"~"_$get(passagem)_"~"_$get(dados)
	;
	try {
		tstart
		;
		set ret = $$$OK
		set objAdmission = $get(^MEDAdmission(0,passagem,1))
		if $$$MEDAdmissionDateDischarged(objAdmission)=""{
			;
			set ultData = "",ultHora = "",objAnt=""
			set ultData = $order(^VARPEPEvolucao(0,passagem,""),-1)
			if ultData'="" set ultHora = $order(^VARPEPEvolucao(0,passagem,ultData,""),-1)
			if ultHora'=""{
				set objAnt = $get(^VARPEPEvolucao(0,passagem,ultData,ultHora,1))
			}
			set objNovo = objAnt
			set dados = $replace(dados,"~"," ")
			set dadosObj = [].%FromJSON(dados)
			set campo = dadosObj.campo
			set valor = dadosObj.valor
			if campo="cid"{
				set cids = ""
				if valor'=""{
					if valor.%Size()>0{
						for {
							set cid = valor.%Pop()
							quit:cid=""
							set:cids'="" cids=cids_";"
							set cids=cids_cid
						}
					}
				}
				set $$$VARPEPEvolucaoCID(objNovo) = cids
			}
			if campo="pa1" set $$$VARPEPEvolucaoPA1(objNovo) = valor
			if campo="pulso" set $$$VARPEPEvolucaoPulso(objNovo) = valor
			if campo="temp" set $$$VARPEPEvolucaoTemp(objNovo) = valor
			if campo="descricao" set $$$VARPEPEvolucaoDescricao(objNovo) = valor
			if campo="conduta" set $$$VARPEPEvolucaoConduta(objNovo) = valor
			if campo="pa2" set $$$VARPEPEvolucaoPA2(objNovo) = valor
			;
			if objAnt'=objNovo{
				if ultHora'="" set ret = $$$Kill("VARPEPEvolucao",passagem_","_ultData_","_ultHora)
				if '$$$ISERR(ret) set ret = $$$Save("VARPEPEvolucao",passagem_","_+$horolog_","_$piece($horolog,",",2),objNovo,1)
			}
		}
	}
	catch(exception){
		trollback
		Do ^%ET
		set ret = exception.AsStatus()
		set ^pep.erro($horolog)=$get(YBED)_"~"_$get(paciente)_"~"_$get(passagem)_"~"_$get(dados)
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set ^pep.erro($horolog)=$get(YBED)_"~"_$get(paciente)_"~"_$get(passagem)_"~"_$get(dados)
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvarDados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set passagem = $get(%request.Data("passagem",1))
	set anamnese = $get(%request.Data("anamnese",1))
	set evolucao = $get(%request.Data("evolucao",1))
	set ^pep.salva($horolog)=YBED_"~"_$get(paciente)_"~"_$get(passagem)_"~"_$get(anamnese)_"~"_$get(evolucao)
	;
	try {
		tstart
		set objAnt = $get(^VARPEP(0,passagem,1))
		set anamnese = $replace(anamnese,"~"," ")
		set objAnamnese = [].%FromJSON(anamnese)
		
		set $$$VARPEPAnamneseHistSintomas(objAnt) 	= objAnamnese.historiaSintomas
		;
		set molestias = ""
		if objAnamnese.molestiasPregressasAtuais'=""{
			if objAnamnese.molestiasPregressasAtuais.%Size()>0{
				for {
					set molestias1 = objAnamnese.molestiasPregressasAtuais.%Pop()
					quit:molestias1=""
					set:molestias'="" molestias=molestias_";"
					set molestias=molestias_molestias1
				}
			}
		}
		set $$$VARPEPAnamneseMolestias(objAnt) = molestias
		set $$$VARPEPAnamneseMolestiasPregress(objAnt) = objAnamnese.molestiasPregressasLivre
		set $$$VARPEPAnamneseMedicUtilizadasLi(objAnt) = objAnamnese.medicacoesUtilizadasLivre
		;
		set datas = ""
		if objAnamnese.datasGestacionais'=""{
			if objAnamnese.datasGestacionais.%Size()>0{
				for {
					set dataG = objAnamnese.datasGestacionais.%Pop()
					quit:dataG=""
					set:datas'="" datas=datas_";"
					set datas=datas_$zdateh(dataG,4)
				}
			}
		}
		set $$$VARPEPAnamneseAntGestacionais(objAnt) = datas
		set $$$VARPEPAnamneseQtdeGestacao(objAnt) = objAnamnese.qtdeGestacao
		;
		set $$$VARPEPAnamneseHistMenstrual(objAnt) = objAnamnese.historiaMenstrual
		set $$$VARPEPAnamneseDescendencia(objAnt) = objAnamnese.descendencia
		set $$$VARPEPAnamnesePossuiAntCirurgicos(objAnt) = objAnamnese.antecedentesCirurgicosTexto
		set $$$VARPEPAnamneseHabitosVicios(objAnt)  = objAnamnese.habitosVicios
		set medicUtilizadas = ""
		if objAnamnese.medicacoesUtilizadas'=""{
			if objAnamnese.medicacoesUtilizadas.%Size()>0{
				for {
					set medicUtilizadas1 = objAnamnese.medicacoesUtilizadas.%Pop()
					quit:medicUtilizadas1=""
					set:medicUtilizadas'="" medicUtilizadas=medicUtilizadas_";"
					set medicUtilizadas=medicUtilizadas_medicUtilizadas1
				}
			}
		}
		set $$$VARPEPAnamneseMedicUtilizadas(objAnt) = medicUtilizadas
		;set $$$VARPEPAnamneseMedicUtilizadas(objAnt) = objAnamnese.medicacoesUtilizadas
		set $$$VARPEPAnamneseAntFamiliares(objAnt)  = objAnamnese.antecedentesFamiliares
		set $$$VARPEPAnamnesePA1(objAnt)  = objAnamnese.pa1
		set $$$VARPEPAnamnesePulso(objAnt) = objAnamnese.pulso
		set $$$VARPEPAnamneseTemp(objAnt) = objAnamnese.temp
		set $$$VARPEPAnamnesePeso(objAnt) = objAnamnese.peso
		set $$$VARPEPAnamneseAltura(objAnt) = objAnamnese.altura
		set $$$VARPEPAnamneseSC(objAnt) = objAnamnese.sc
		set $$$VARPEPAnamneseCabecaPescoco(objAnt) = objAnamnese.cabecaPescoco
		set $$$VARPEPAnamneseTorax(objAnt) = objAnamnese.torax
		set $$$VARPEPAnamneseCoracao(objAnt) = objAnamnese.coracao
		set $$$VARPEPAnamnesePulmoes(objAnt) = objAnamnese.pulmoes
		set $$$VARPEPAnamneseAbdomen(objAnt) = objAnamnese.abdomen
		set $$$VARPEPAnamneseFigado(objAnt) = objAnamnese.figado
		set $$$VARPEPAnamneseBaco(objAnt) = objAnamnese.baco
		set $$$VARPEPAnamneseMMSS(objAnt) = objAnamnese.mmss
		set $$$VARPEPAnamneseMMII(objAnt) = objAnamnese.mmii
		/*set conduta = ""
		if objAnamnese.conduta'=""{
			if objAnamnese.conduta.%Size()>0{
				for {
					set conduta1 = objAnamnese.conduta.%Pop()
					quit:conduta1=""
					set:conduta'="" conduta=conduta_";"
					set conduta=conduta_conduta1
				}
			}
		}*/
		set $$$VARPEPAnamneseConduta(objAnt) = objAnamnese.conduta
		;
		set hd = ""
		if objAnamnese.hd'=""{
			if objAnamnese.hd.%Size()>0{
				for {
					set hd1 = objAnamnese.hd.%Pop()
					quit:hd1=""
					set:hd'="" hd=hd_";"
					set hd=hd_hd1
				}
			}
		}
		set $$$VARPEPAnamneseHD(objAnt) = hd
		set $$$VARPEPAnamnesePA2(objAnt) = objAnamnese.pa2
		set $$$VARPEPAnamneseAntCirurgicos(objAnt) = objAnamnese.antecedentesCirurgicos
		set $$$VARPEPAnamnesePaiFalecido(objAnt) = objAnamnese.paiFalecido
		set paiCID = ""
		if objAnamnese.cidFalecimentoPai'=""{
			if objAnamnese.cidFalecimentoPai.%Size()>0{
				for {
					set paiCID1 = objAnamnese.cidFalecimentoPai.%Pop()
					quit:paiCID1=""
					set:paiCID'="" paiCID=paiCID_";"
					set paiCID=paiCID_paiCID1
				}
			}
		}
		set $$$VARPEPAnamneseCIDFalecimentoPai(objAnt) = paiCID
		set $$$VARPEPAnamneseCausaFalecimentoP(objAnt) = objAnamnese.causaFalecimentoPai
		set $$$VARPEPAnamneseMaeFalecida(objAnt) = objAnamnese.maeFalecida
		set maeCID = ""
		if objAnamnese.cidFalecimentoMae'=""{
			if objAnamnese.cidFalecimentoMae.%Size()>0{
				for {
					set maeCID1 = objAnamnese.cidFalecimentoMae.%Pop()
					quit:maeCID1=""
					set:maeCID'="" maeCID=maeCID_";"
					set maeCID=maeCID_maeCID1
				}
			}
		}
		set $$$VARPEPAnamneseCIDFalecimentoMae(objAnt) = maeCID
		set $$$VARPEPAnamneseCausaFalecimentoM(objAnt) = objAnamnese.causaFalecimentoMae 
		set $$$VARPEPAnamneseOutrosFalecimento(objAnt) = objAnamnese.outrosFalecimento  
		;
		;set eventosAdversos = [].%FromJSON(eventosAdversos)
		;
		;set dataAdversos = $zdateh($piece(eventosAdversos.data,"T",1),3,,,,,,,"")
		;if dataAdversos>+$horolog{
		;	set ret = "0 Data de Eventos Adversos não pode ser maior que a data de hoje!"
		;	quit
		;}
		;if dataAdversos=""&&((eventosAdversos.descricao'="")||(eventosAdversos.conduta)){
		;		set dataAdversos = +$horolog
		;}
		;;
		;set $piece(objAnt,"~",100) = dataAdversos
		;set $piece(objAnt,"~",101) = eventosAdversos.descricao
		;set $piece(objAnt,"~",102) = eventosAdversos.conduta
		;
		if $$$VARPEPCriadoEm(objAnt) = ""{
			set $$$VARPEPCriadoEm(objAnt) = $horolog
			set $$$VARPEPCriadoPor(objAnt) = YBED
		}
		set $$$VARPEPAlteradoEm(objAnt) = $horolog
		set $$$VARPEPAlteradoPor(objAnt) = YBED

		set ret = $$$Save("VARPEP",passagem,objAnt,1)
		;
		if '$$$ISERR(ret){
			set nseq=""
			for {
				set nseq=$order(^VARPEPReceituario(0,passagem,nseq)) quit:nseq=""
				set ret = $$$Kill("VARPEPReceituario",passagem_","_nseq)
				if $$$ISERR(ret) quit
			}
			if '$$$ISERR(ret){
				set nseq = ""
				for {
					set nseq = $order(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)) quit:nseq=""
					set reg = $get(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq))
					set obj = reg
					set ret = $$$Save("VARPEPReceituario",passagem_","_nseq,obj,1)
					if $$$ISERR(ret) quit
				}
			}
		}

		if '$$$ISERR(ret){
			set nseq=""
			for {
				set nseq=$order(^VARPEPDeclaracao(0,passagem,nseq)) quit:nseq=""
				set ret = $$$Kill("VARPEPDeclaracao",passagem_","_nseq)
				if $$$ISERR(ret) quit
			}
			if '$$$ISERR(ret){
				set nseq = ""
				for {
					set nseq = $order(^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,nseq)) quit:nseq=""
					set reg = $get(^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,nseq))
					set obj = reg
					set ret = $$$Save("VARPEPDeclaracao",passagem_","_nseq,obj,1)
					if $$$ISERR(ret) quit
				}
			}
		}

		if '$$$ISERR(ret){
			kill exames
			set erro = 0
			set sequ = ""
			for {
				set sequ = $order(^mtemp.VARPEPExamesLista(%session.SessionId,sequ)) quit:sequ=""
				set tipo = ""
				for {
					set tipo = $order(^mtemp.VARPEPExamesLista(%session.SessionId,sequ,tipo)) quit:tipo=""
					quit:erro=1
					set code = ""
					for {
						set code = $order(^mtemp.VARPEPExamesLista(%session.SessionId,sequ,tipo,code)) quit:code=""
						quit:erro=1
						set obj = $get(^VARPEPExamesLista(0,passagem,sequ,code,1))
						set reg = $get(^mtemp.VARPEPExamesLista(%session.SessionId,sequ,tipo,code))
						set $$$VARPEPExamesListaNumerodoProtocolodoExame(obj)	= $$$VARPEPExamesListaNumerodoProtocolodoExame(reg)
						set $$$VARPEPExamesListaObservacoes(obj) 				= $$$VARPEPExamesListaObservacoes(reg)
						set $$$VARPEPExamesListaIndicadordeImpressaodaDat(obj) 	= $$$VARPEPExamesListaIndicadordeImpressaodaDat(reg)
						set ret = $$$Save("VARPEPExamesLista",passagem_","_sequ_","_code,obj,1)
						set exames(sequ,code)=""
						if $$$ISERR(ret) set erro = 1 quit
					}
				}
			}
		}
		if '$$$ISERR(ret){
			set sequ=""
			for {
				set sequ = $order(^VARPEPExamesLista(0,passagem,sequ)) quit:sequ=""
				set code=""
				for {
					set code = $order(^VARPEPExamesLista(0,passagem,sequ,code)) quit:code=""
					if $data(exames(sequ,code)) continue
					set ret = $$$Kill("VARPEPExamesLista",passagem_","_sequ_","_code)
					if $$$ISERR(ret) quit
				}
			}
		}
		if '$$$ISERR(ret){
			kill adversos
			set erro=0
			set data=""
			for {
				set data = $order(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data)) quit:data=""
				quit:erro
				set hora=""
				for {
					set hora = $order(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data,hora)) quit:hora=""
					quit:erro
					set obj = $get(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data,hora))
					set descricao = $$$VARPEPAdversosDescricao(obj)
					set conduta = $$$VARPEPAdversosConduta(obj)
					set conclusao = $$$VARPEPAdversosConclusao(obj)
					set obj = descricao_"~"_conduta_"~"_conclusao
					set ret = $$$Save("VARPEPAdversos",passagem_","_data_","_hora,obj,1)
					set adversos(data,hora)=""
					if $$$ISERR(ret) set erro = 1 quit
				}
			}			
		}
		if '$$$ISERR(ret){
			set erro=0
			set data=""
			for {
				set data = $order(^VARPEPAdversos(0,passagem,data)) quit:data=""
				quit:erro
				set hora=""
				for {
					set hora = $order(^VARPEPAdversos(0,passagem,data,hora)) quit:hora=""
					quit:erro
					if $data(adversos(data,hora)) continue
					set ret = $$$Kill("VARPEPAdversos",passagem_","_data_","_hora)
					if $$$ISERR(ret) set erro = 1 quit
				}
			}			
		}
		;
		if '$$$ISERR(ret){
			set evolucao = $replace(evolucao,"~"," ")
			set objEvolucao = [].%FromJSON(evolucao)
			;
			set ultData = "",ultHora = ""
			set ultData = $order(^VARPEPEvolucao(0,passagem,""),-1)
			if ultData'="" set ultHora = $order(^VARPEPEvolucao(0,passagem,ultData,""),-1)
			if ultHora'=""{
				set objAnt = $get(^VARPEPEvolucao(0,passagem,ultData,ultHora,1))
			}
			set objNovo = ""
			set cid = ""
			if objEvolucao.cid'=""{
				if objEvolucao.cid.%Size()>0{
					for {
						set cid1 = objEvolucao.cid.%Pop()
						quit:cid1=""
						set:cid'="" cid=cid_";"
						set cid=cid_cid1
					}
				}
			}
			set $$$VARPEPEvolucaoCID(objNovo) = cid
			set $$$VARPEPEvolucaoPA1(objNovo) = objEvolucao.pa1
			set $$$VARPEPEvolucaoPulso(objNovo) = objEvolucao.pulso
			set $$$VARPEPEvolucaoTemp(objNovo) = objEvolucao.temp
			set $$$VARPEPEvolucaoDescricao(objNovo) = objEvolucao.descricao
			set $$$VARPEPEvolucaoConduta(objNovo) = objEvolucao.conduta
			set $$$VARPEPEvolucaoPA2(objNovo) = objEvolucao.pa2
			;
			if objAnt'=objNovo{
				if ultHora'="" set ret = $$$Kill("VARPEPEvolucao",passagem_","_ultData_","_ultHora)
				if '$$$ISERR(ret) set ret = $$$Save("VARPEPEvolucao",passagem_","_+$horolog_","_$piece($horolog,",",2),objNovo,1)
			}
			;
		}
		
	}
	catch(exception){
		trollback
		Do ^%ET
		set ^pep.erro($horolog)=YBED_"~"_$get(paciente)_"~"_$get(passagem)_"~"_$get(anamnese)
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		if $tl trollback
		set ^pep.erro($horolog)=YBED_"~"_$get(paciente)_"~"_$get(passagem)_"~"_$get(anamnese)
		set retorno.status = 0
		set retorno.mensagem = $piece(ret," ",2,$length(ret," "))
		set retorno.tipo = "error"
	}else{
		tcommit
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvarRegistrosAnteriores">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	set anamnese = $get(%request.Data("dados",1))
	try {
		set objAnt = $get(^VARPEPAntigos(0,paciente,1))
		set objAnamnese = [].%FromJSON(anamnese)
		set $$$VARPEPAnamneseHistSintomas(objAnt) 	= objAnamnese.historiaSintomas
		set $$$VARPEPAnamneseMolestias(objAnt) 		= objAnamnese.molestiasPregressasAtuais
		set $$$VARPEPAnamneseMolestiasPregress(objAnt) = objAnamnese.molestiasPregressasLivre
		set $$$VARPEPAnamneseMedicUtilizadasLi(objAnt) = objAnamnese.medicacoesUtilizadasLivre
		;
		set datas = ""
		if objAnamnese.datasGestacionais'=""{
			if objAnamnese.datasGestacionais.%Size()>0{
				for {
					set dataG = objAnamnese.datasGestacionais.%Pop()
					quit:dataG=""
					set:datas'="" datas=datas_";"
					set datas=datas_$zdateh(dataG,4)
				}
			}
		}
		set $$$VARPEPAnamneseAntGestacionais(objAnt) = datas
		set $$$VARPEPAnamneseQtdeGestacao(objAnt) = objAnamnese.qtdeGestacao
		;
		set $$$VARPEPAnamneseHistMenstrual(objAnt) = objAnamnese.historiaMenstrual
		set $$$VARPEPAnamneseDescendencia(objAnt) = objAnamnese.descendencia
		set $$$VARPEPAnamnesePossuiAntCirurgicos(objAnt) = objAnamnese.antecedentesCirurgicosTexto
		set $$$VARPEPAnamneseHabitosVicios(objAnt)  = objAnamnese.habitosVicios
		set medicUtilizadas = ""
		if objAnamnese.medicacoesUtilizadas'=""{
			if objAnamnese.medicacoesUtilizadas.%Size()>0{
				for {
					set medicUtilizadas1 = objAnamnese.medicacoesUtilizadas.%Pop()
					quit:medicUtilizadas1=""
					set:medicUtilizadas'="" medicUtilizadas=medicUtilizadas_";"
					set medicUtilizadas=medicUtilizadas_medicUtilizadas1
				}
			}
		}
		set $$$VARPEPAnamneseMedicUtilizadas(objAnt) = medicUtilizadas
		;set $$$VARPEPAnamneseMedicUtilizadas(objAnt) = objAnamnese.medicacoesUtilizadas
		set $$$VARPEPAnamneseAntFamiliares(objAnt)  = objAnamnese.antecedentesFamiliares
		set $$$VARPEPAnamnesePA1(objAnt)  = objAnamnese.pa1
		set $$$VARPEPAnamnesePulso(objAnt) = objAnamnese.pulso
		set $$$VARPEPAnamneseTemp(objAnt) = objAnamnese.temp
		set $$$VARPEPAnamnesePeso(objAnt) = objAnamnese.peso
		set $$$VARPEPAnamneseAltura(objAnt) = objAnamnese.altura
		set $$$VARPEPAnamneseSC(objAnt) = objAnamnese.sc
		set $$$VARPEPAnamneseCabecaPescoco(objAnt) = objAnamnese.cabecaPescoco
		set $$$VARPEPAnamneseTorax(objAnt) = objAnamnese.torax
		set $$$VARPEPAnamneseCoracao(objAnt) = objAnamnese.coracao
		set $$$VARPEPAnamnesePulmoes(objAnt) = objAnamnese.pulmoes
		set $$$VARPEPAnamneseAbdomen(objAnt) = objAnamnese.abdomen
		set $$$VARPEPAnamneseFigado(objAnt) = objAnamnese.figado
		set $$$VARPEPAnamneseBaco(objAnt) = objAnamnese.baco
		set $$$VARPEPAnamneseMMSS(objAnt) = objAnamnese.mmss
		set $$$VARPEPAnamneseMMII(objAnt) = objAnamnese.mmii
		;
		set conduta = ""
		if objAnamnese.conduta'=""{
			if objAnamnese.conduta.%Size()>0{
				for {
					set conduta1 = objAnamnese.conduta.%Pop()
					quit:conduta1=""
					set:conduta'="" conduta=conduta_";"
					set conduta=conduta_conduta1
				}
			}
		}
		set $$$VARPEPAnamneseConduta(objAnt) = objAnamnese.conduta
		;
		set hd = ""
		if objAnamnese.hd'=""{
			if objAnamnese.hd.%Size()>0{
				for {
					set hd1 = objAnamnese.hd.%Pop()
					quit:hd1=""
					set:hd'="" hd=hd_";"
					set hd=hd_hd1
				}
			}
		}
		set $$$VARPEPAnamneseHD(objAnt) = hd
		set $$$VARPEPAnamnesePA2(objAnt) = objAnamnese.pa2
		set $$$VARPEPAnamneseAntCirurgicos(objAnt) = objAnamnese.antecedentesCirurgicos
		set $$$VARPEPAnamnesePaiFalecido(objAnt) = objAnamnese.paiFalecido
		set paiCID = ""
		if objAnamnese.cidFalecimentoPai'=""{
			if objAnamnese.cidFalecimentoPai.%Size()>0{
				for {
					set paiCID1 = objAnamnese.cidFalecimentoPai.%Pop()
					quit:paiCID1=""
					set:paiCID'="" paiCID=paiCID_";"
					set paiCID=paiCID_paiCID1
				}
			}
		}
		set $$$VARPEPAnamneseCIDFalecimentoPai(objAnt) = paiCID
		set $$$VARPEPAnamneseCausaFalecimentoP(objAnt) = objAnamnese.causaFalecimentoPai
		set $$$VARPEPAnamneseMaeFalecida(objAnt) = objAnamnese.maeFalecida
		set maeCID = ""
		if objAnamnese.cidFalecimentoMae'=""{
			if objAnamnese.cidFalecimentoMae.%Size()>0{
				for {
					set maeCID1 = objAnamnese.cidFalecimentoMae.%Pop()
					quit:maeCID1=""
					set:maeCID'="" maeCID=maeCID_";"
					set maeCID=maeCID_maeCID1
				}
			}
		}
		set $$$VARPEPAnamneseCIDFalecimentoMae(objAnt) = maeCID
		set $$$VARPEPAnamneseCausaFalecimentoM(objAnt) = objAnamnese.causaFalecimentoMae 
		set $$$VARPEPAnamneseOutrosFalecimento(objAnt) = objAnamnese.outrosFalecimento
		;
		if $$$VARPEPCriadoEm(objAnt) = ""{
			set $$$VARPEPCriadoEm(objAnt) = $horolog
			set $$$VARPEPCriadoPor(objAnt) = YBED
		}
		set $$$VARPEPAlteradoEm(objAnt) = $horolog
		set $$$VARPEPAlteradoPor(objAnt) = YBED
		set ret = $$$Save("VARPEPAntigos",paciente,objAnt,1)
	}
	catch(exception){
		set ret = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(ret){
		set retorno.status = 0
		set retorno.mensagem = ret
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Dados Salvos com Sucesso!"
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvaProtocolo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set dados = $get(%request.Data("dados",1))
	set YBED = $get(%request.Data("YBED",1))
	try{
		set dados = [].%FromJSON(dados)
		if dados.exames.%Size()<1{
			set status = "Selecione ao menos um Exame"
			quit
		}
		set codigo = dados.codigo
		set $piece(obj,"~",1) = dados.descricao
		set $piece(obj,"~",2) = tipo
		set $piece(obj,"~",3) = YBED
		if codigo=""{
			set codigo = $$GetNextNumber^COMUtils("VARExamesPerfil","")
		}
		set status = $$$Save("VARExamesPerfil",codigo,obj,1)
		if '$$$ISERR(status){
			kill listExames
			for {
				set exame = dados.exames.%Pop()
				quit:exame=""
				set listExames(exame)=""
				set status = $$$Save("VARExamesPerfilLinha",codigo_","_exame,"",1)
				if $$$ISERR(status) quit
			}
			if '$$$ISERR(status){
				set exame=""
				for {
					set exame = $order(^VARExamesPerfilLinha(0,codigo,exame)) quit:exame=""
					if $data(listExames(exame)) continue
					set status = $$$Kill("VARExamesPerfilLinha",codigo_","_exame)
					if $$$ISERR(status) quit
				}
			}
		}
	}
	catch(exception){
		set status = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(status){
		set retorno.status = 0
		set retorno.mensagem = status
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Protocolo salvo com sucesso!"
		set retorno.codigo = codigo
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="excluirProtocolo">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	try{
		set status = $$$Kill("VARExamesPerfil",codigo)
		if '$$$ISERR(status){
			set exame=""
			for {
				set exame = $order(^VARExamesPerfilLinha(0,codigo,exame)) quit:exame=""
				set status = $$$Kill("VARExamesPerfilLinha",codigo_","_exame)
				if $$$ISERR(status) quit
			}
		}
	}
	catch(exception){
		set status = exception.AsStatus()
	}
	set retorno = {}
	if $$$ISERR(status){
		set retorno.status = 0
		set retorno.mensagem = status
		set retorno.tipo = "error"
	}else{
		set retorno.status = 1
		set retorno.mensagem = "Protocolo removido com sucesso!"
		set retorno.codigo = codigo
		set retorno.tipo = "success"
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="GetPacientes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $REPLACE($Get(%request.Data("searchValue",1))," ","")
	Set YBED = $Get(%request.Data("YBED",1))
	set SQL=3
	set contador = 0
	set YBED1=YBED
	if YBED="SILMARADM" set YBED1="ERIVALDO"
	set xYBED = $Replace(YBED1,"_"," ")
	set codProvider = $Order(^MEDProviders(0,1,xYBED,""))
	set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
	if codProvider="",perm'=1 {
		set retorno = {}
		set retorno.data = []
		set retorno.totalCount = 0
		write retorno.%ToJSON()
		quit $$$OK
	}

	set orderBy = "order by Name"
	;
	;PatientID,PID,Name,SSN,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,MothersName,Tel,FREE2,Email,Street,FREE4,FREE3,FREE6,City,State
	set contador = 0
	set select1 = "select distinct MEDPatient.PatientID,MEDPatient.PID,MEDPatient.Name "
	set select1 = select1_" from  MEDPatient"
	if perm'=1 set select1 = select1_" JOIN MEDAdmission on MEDAdmission.Company=MEDPatient.Company and %upper(MEDAdmission.Patient)=MEDPatient.PatientID and %upper(Profissional)='"_codProvider_"'"
	set select1 = select1_" where MEDPatient.Company=0 "
	if codigo '= "" set select1 = select1_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select1 = select1_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	;
	set select2 = "select distinct MEDPatient.PatientID,MEDPatient.PID,MEDPatient.Name "
	set select2 = select2_" from  MEDPatient"
	set select2 = select2_" where MEDPatient.Company=0 "
	set select2 = select2_" and (select top 1 '1' from VARPEP Inner Join MEDAdmission on MEDAdmission.Company = VARPEP.Company and "
	set select2 = select2_" MEDAdmission.AdmissionID = VARPEP.Admissao and %upper(MEDAdmission.Patient)=MEDPatient.PatientID "
	set select2 = select2_" where %upper(VARPEP.CriadoPor)='"_YBED1_"' "
	set select2 = select2_" or %upper(VARPEP.AlteradoPor)='"_YBED1_"') = '1'"
	if codigo '= "" set select2 = select2_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select2 = select2_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	;
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_" union "_select2_") "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	while(rs.%Next()){
		set PatientID=rs.%Get("PatientID")
		set Name=rs.%Get("Name")
		set PID=rs.%Get("PID")
		set linha = {}
		set linha.Codigo = PatientID
		set linha.Descricao = $Select(PID'="":"("_PID_") ",1:"")_Name
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK

	
	
	
	
	
	
	quit
	set meuSelect  = " SELECT PatientID, Name, SSN, Gender, PID "
	set meuSelect = meuSelect_" FROM MEDPatient "
	set meuSelect = meuSelect_" where Company = 0 "
	if codigo '= "" set meuSelect = meuSelect_" and PatientID = '"_codigo_"'"
	if searchValue '= "" set meuSelect = meuSelect_" and (%upper(PID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	set meuSelect = "select * from ("_meuSelect_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)

	set array = []
	while(rs.%Next()){
		set PatientID=rs.%Get("PatientID")
		set Name=rs.%Get("Name")
		set SSN=rs.%Get("SSN")
		set Gender=rs.%Get("Gender")
		set PID=rs.%Get("PID")
		set linha = {}
		set linha.Codigo = PatientID
		set linha.Descricao = $Select(PID'="":"("_PID_") ",1:"")_Name
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="listaPerfilExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set YBED = $Get(%request.Data("YBED",1))
	set query = "select CodigodoPerfil,Descricao from VARExamesPerfil where company=0 and TipodosExames='"_tipo_"' and UsuariocomAcessoaoPerfil='"_YBED_"' "
	if codigo'="" {
		set query = query_" and CodigodoPerfil = '"_codigo_"'"
	}elseif searchValue'=""{
		set query = query_" and (%upper(CodigodoPerfil) like %upper('%"_searchValue_"%') or %upper(Descricao) like %upper('%"_searchValue_"%'))"
	}
	;
	if take="" set take=2000
	;
	Set SQL  = "Select top "_(skip+take)_" ItemNumber CodigodoPerfil, SearchName Descricao From SQLUser.INART Where Company = 0 "
	if tipo=1{	;Exames Laboratório:
		Set SQL  = SQL _ "And %Upper(ItemType) in (6, 4, 5) "
	}
	if tipo=2{  ;Outros Exames
		Set SQL  = SQL _ "And %Upper(ItemType) = 7 "
	}
	Set SQL  = SQL _ "And %UPPER(HoldReason) in (0, 2) "
	if codigo'="" {
		;set SQL = SQL_" and CodigodoExame='"_codigo_"'"
		set SQL = SQL_" And ItemNumber = '"_codigo_"'"
	}
	if searchValue'="" {
		;set SQL = SQL_" and (%upper(CodigodoExame) like %upper('%"_searchValue_"%') or %upper(DescricaodoExame) like %upper('%"_searchValue_"%')) "
		set SQL = SQL_" and (%upper(ItemNumber) like %upper('%"_searchValue_"%') or %upper(SearchName) like %upper('%"_searchValue_"%')) "
	}
	set SQL = SQL_" order by SearchName "
	;
	;set meuSelect = "select * from ("_SQL_")"
	;if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	;
	set query = "select * from ("_query_" union "_SQL_")"
	if skip'="" set query=query_" where %VID between "_(skip+1)_" and "_(skip+take)
	set rs = ##class(%SQL.Statement).%ExecDirect("",query)
	set retorno = []
	while(rs.%Next()){
		set linha={}
		set linha.Codigo = rs.%Get("CodigodoPerfil")
		set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",linha.Codigo)
		set exames = ""
		while(rsLinha.%Next()){
			set exame = rsLinha.%Get("CodigodoExame")
			;set exame = $piece($get(^VARExames(0,exame,1)),"~",1)
			set exame = $piece($get(^INART(0,exame,1)),"~",1)
			set:exames'="" exames=exames_", "
			set exames = exames_exame
		}
		if exames'="" set exames=" ("_exames_")"
		set linha.Descricao = "("_rs.%Get("CodigodoPerfil")_") "_rs.%Get("Descricao")
		set linha.DescricaoComposta = rs.%Get("Descricao")_exames
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getPerfilExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set obj = ""
	if codigo'="" {
		set obj = $get(^VARExamesPerfil(0,codigo,1))
	}
	set retorno = {}
	set retorno.descricao = $piece(obj,"~",1)
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",codigo)
	set exames = []
	set codExame = ""
	while(rsLinha.%Next()){
		set codExame = rsLinha.%Get("CodigodoExame")
		do exames.%Push(codExame)
	}
	set retorno.exames = exames
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvaExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set edit = $get(%request.Data("edit",1))
	set dataOld = $get(%request.Data("dataOld",1))
	set dataNew = $get(%request.Data("dataNew",1))
	set objExamesNew = [].%FromJSON(dataNew)
	if dataOld'=""{
		set objExamesOld = [].%FromJSON(dataOld)
		if objExamesOld.CodExame '= objExamesNew.CodExame kill ^mtemp.VARPEPExames(%session.SessionId,tipo,objExamesOld.CodExame)
	}
	if edit'=1,$data(^mtemp.VARPEPExames(%session.SessionId,tipo,objExamesNew.CodExame)){
		write 0
	}else{
		set $piece(^mtemp.VARPEPExames(%session.SessionId,tipo,objExamesNew.CodExame),"~",2) = objExamesNew.Observacoes
		set $piece(^mtemp.VARPEPExames(%session.SessionId,tipo,objExamesNew.CodExame),"~",7) = 1
		write 1
	}
	
	quit
]]></Implementation>
</Method>

<Method name="salvaEvolucao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set dados = $get(%request.Data("dataNew",1))
	set objEvolucao = [].%FromJSON(dados)
	;
	set objAnt = ""
	set cid = ""
	if objEvolucao.cid'=""{
		if objEvolucao.cid.%Size()>0{
			for {
				set cid1 = objEvolucao.cid.%Pop()
				quit:cid1=""
				set:cid'="" cid=cid_";"
				set cid=cid_cid1
			}
		}
	}
	set $$$VARPEPEvolucaoCID(objAnt) = cid
	set $$$VARPEPEvolucaoPA1(objAnt) = objEvolucao.pa1
	set $$$VARPEPEvolucaoPulso(objAnt) = objEvolucao.pulso
	set $$$VARPEPEvolucaoTemp(objAnt) = objEvolucao.temp
	set $$$VARPEPEvolucaoDescricao(objAnt) = objEvolucao.descricao
	set $$$VARPEPEvolucaoConduta(objAnt) = objEvolucao.conduta
	set $$$VARPEPEvolucaoPA2(objAnt) = objEvolucao.pa2
	;;
	if ret{
		set salva=1
		if +horaOriginal="0"{
			set recUltHora = $order(^mtemp.VARProntuarioEletronicoEvolucao(%session.SessionId,dataEvolucao,""),-1)
			if recUltHora'="" {
				set objAnterior = $p($get(^mtemp.VARProntuarioEletronicoEvolucao(%session.SessionId,dataEvolucao,recUltHora)),"|",1)
				if objAnterior=objAnt set salva=0,ret=0
			}
			
		}
		if salva=1 set ^mtemp.VARProntuarioEletronicoEvolucao(%session.SessionId,dataEvolucao,horaEvolucao) = objAnt
	}
	set retorno={}
	set retorno.status=ret
	set retorno.mensagem=mensagem
	set retorno.tipo=tipo
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recuperaUltimaDiagEvolucao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pPassagem</FormalSpec>
<Implementation><![CDATA[
	;set codPaciente = $piece($get(^MEDAdmission(0,pPassagem,1)),"~",1)
	set cidObj=[]
	If ($data(^mtemp.VARProntuarioEletronicoEvolucao(%session.SessionId))) {
		Set data = $order(^mtemp.VARProntuarioEletronicoEvolucao(%session.SessionId, ""),-1)
		Set hora = $order(^mtemp.VARProntuarioEletronicoEvolucao(%session.SessionId, data, ""),-1)
		set obj = $Piece($get(^mtemp.VARProntuarioEletronicoEvolucao(%session.SessionId,data,hora)),"|",1)
		set cid = $$$VARPEPEvolucaoCID(obj)
		for i=1:1:$length(cid,";"){
			if $piece(cid,";",i)="" continue
			do cidObj.%Push($piece(cid,";",i))
		}
	}
	/*Set meuSQL = "Select Top 1 Evolucao.CID  From SQLUser.VARPEPEvolucao As Evolucao, "
	Set meuSQL = meuSQL _ "SQLUser.MEDAdmission As Admission Where Evolucao.Company = 0 "
	Set meuSQL = meuSQL _ "And Evolucao.NumerodoPEP = Admission.AdmissionID "
	Set meuSQL = meuSQL _ "And Admission.Patient = '"_codPaciente_"' Order By Data Desc, Hora Desc"
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	Set cid = ""
	while(rs.%Next()){
		set cid = rs.%Get("CID")
	}	
	set cidObj=[]
	If (cid'="") {
		for i=1:1:$length(cid,";"){
			if $piece(cid,";",i)="" continue
			do cidObj.%Push($piece(cid,";",i))
		}
	}*/
	quit cidObj.%ToJSON()
]]></Implementation>
</Method>

<Method name="listaEvolucao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set passagem = $get(%request.Data("passagem",1))
	Set codPaciente = $piece($Get(^MEDAdmission(0, passagem, 1)),"~",1)
	Set meuSQL = "Select Evolucao.NumerodoPEP,Evolucao.Data, Evolucao.Hora,Evolucao.PA1,Evolucao.PA2,Evolucao.Pulso, "
	Set meuSQL = meuSQL _ "Evolucao.Temp, Evolucao.Descricao,Evolucao.Conduta "
	Set meuSQL = meuSQL _ "From SQLUser.VARPEPEvolucao As Evolucao, "
	Set meuSQL = meuSQL _ "SQLUser.MEDAdmission As Admission "
	Set meuSQL = meuSQL _ "Where Evolucao.Company = 0 And Admission.Company=0 and "
	Set meuSQL = meuSQL _ "Evolucao.NumerodoPEP = Admission.AdmissionID And "
	Set meuSQL = meuSQL _ "%upper(Admission.Patient) = '"_codPaciente_"'"
	Set meuSQL = meuSQL _ "group by data, hora order by data desc, hora desc"
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	set retorno = []
	while(rs.%Next()){
		;Set passagem 	= rs.%Get("NumerodoPEP")
		Set adm 		= rs.%Get("NumerodoPEP")
		Set data 		= rs.%Get("Data")
		Set hora 		= rs.%Get("Hora")
		set pa1	 		= rs.%Get("PA1")
		set pa2	 		= rs.%Get("PA2")
		set pulso		= rs.%Get("Pulso")
		set temp		= rs.%Get("Temp")
		set descricao	= rs.%Get("Descricao")
		set conduta		= rs.%Get("Conduta")
		;
		set linha={}
		set linha.adm	= adm
		set linha.DataO = data
		set linha.HoraO = hora
		set linha.Data = $zdate(data,3)
		set linha.Hora = $ztime(hora,2)
		set linha.PA = pa1_"x"_pa2
		set linha.Pulso = pulso
		set linha.Temp = temp
		set linha.Descricao = descricao
		set linha.Conduta = conduta
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="salvaAdversos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set dados = $get(%request.Data("dataNew",1))
	set objDados = [].%FromJSON(dados)
	;
	set ret=1
	set mensagem="Linha Inserido com sucesso!"
	set tipo = "success"
	set dataAdversos = $zdateh($piece(objDados.data,"T",1),3,,,,,,,"")
	if dataAdversos>+$horolog{
		set reo=0
		set mensagem = "Data de Eventos Adversos não pode ser maior que a data de hoje!"
		set tipo = "warning"
		quit
	}
	if objDados.hora[":" set objDados.hora = $replace(objDados.hora,":","")
	set hora = $extract(objDados.hora,1,2)_":"_$extract(objDados.hora,3,4)
	set horaAdversos = $ztimeh(hora,,0)
	if +dataAdversos="0"{
		set dataAdversos = +$horolog
	}
	if (dataAdversos=+$horolog)&&(horaAdversos>$p($horolog,",",2)){
		set ret = 0
		set mensagem="Hora de Eventos Adversos não pode ser maior que o horário atual!"
		set tipo = "warning"
		quit
	}
	if dataAdversos'="",+horaAdversos="0"{
		set horaAdversos=$piece($horolog,",",2)
	}
	;;
	if objDados.descricao="",objDados.conduta="",objDados.conclusao=""{
		set ret = 0
		set mensagem="Informe a descrição conduta ou a conduta ou a conclusão realizada!"
		set tipo = "warning"
	}
	if ret{
		set $piece(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,dataAdversos,horaAdversos),"~",1) = objDados.descricao
		set $piece(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,dataAdversos,horaAdversos),"~",2) = objDados.conduta
		set $piece(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,dataAdversos,horaAdversos),"~",3) = objDados.conclusao
	}
	set retorno={}
	set retorno.status=ret
	set retorno.mensagem=mensagem
	set retorno.tipo=tipo
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="deletaEventosAdversos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set data = $get(%request.Data("data",1))
	set hora = $get(%request.Data("hora",1))
	kill ^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data,hora)
]]></Implementation>
</Method>

<Method name="deletaExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	kill ^mtemp.VARPEPExames(%session.SessionId,tipo,codigo)
	quit
]]></Implementation>
</Method>

<Method name="recDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = []
	set data = ""
	for {
		set data = $order(^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,data)) quit:data=""
		set linha = {}
		set linha.DataO = data
		set linha.Data = $zdate(data,3)
		set linha.DataF = $zdate(data,4)
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
]]></Implementation>
</Method>

<Method name="deletaDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set data = $get(%request.Data("data",1))
	kill ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,data)
]]></Implementation>
</Method>

<Method name="salvaDataGestacional">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set dados = $get(%request.Data("dados",1))
	set objDados = [].%FromJSON(dados)
	set DataGestacional = $zdateh($piece(objDados.DataGestacional,"T",1),3,,,,,,,"")
	set:DataGestacional'="" ^mtemp.VARProntuarioEletronicoDataGestacional(%session.SessionId,DataGestacional) = ""
	w 1
	quit
]]></Implementation>
</Method>

<Method name="recExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set retorno = []
	set codExame = ""
	for {
		set codExame = $order(^mtemp.VARPEPExames(%session.SessionId,tipo,codExame)) quit:codExame=""
		set observacoes = $piece($get(^mtemp.VARPEPExames(%session.SessionId,tipo,codExame)),"~",2)
		If '$data(^INART(0,codExame)) Continue
		set desc = $piece($get(^INART(0,codExame,1)),"~",1)
		set linha = {}
		set linha.CodExame 		= codExame
		set linha.Descricao		= desc
		set linha.Observacoes 	= observacoes
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="addExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	
	set codigo = $get(%request.Data("codigo",1))
	set tipo = $get(%request.Data("tipo",1))
	if $data(^INART(0,codigo,1)){
		set $p(^mtemp.VARPEPExames(%session.SessionId,tipo,codigo),"~",1) = ""
		if $p(^mtemp.VARPEPExames(%session.SessionId,tipo,codigo),"~",7) = "" set $p(^mtemp.VARPEPExames(%session.SessionId,tipo,codigo),"~",7) = 1
	}else{
		set rsLinha = ##class(%SQL.Statement).%ExecDirect("","select * from VARExamesPerfilLinha where company=0 and CodigodoPerfil=?",codigo)
		while(rsLinha.%Next()){
			set exame = rsLinha.%Get("CodigodoExame")
			set $p(^mtemp.VARPEPExames(%session.SessionId,tipo,exame),"~",1) = codigo
			if $p(^mtemp.VARPEPExames(%session.SessionId,tipo,exame),"~",7) = "" set $p(^mtemp.VARPEPExames(%session.SessionId,tipo,exame),"~",7) = 1
		}
	}
	;set codExame = ""
	;for {
	;	set codExame = $order(^mtemp.VARPEPExames(%session.SessionId,tipo,codExame)) quit:codExame=""
	;	set reg = ^mtemp.VARPEPExames(%session.SessionId,tipo,codExame)
	;	if $piece(reg,"~",1)'="",$piece(reg,"~",1)'=codigo{
	;		kill ^mtemp.VARPEPExames(%session.SessionId,tipo,codExame)
	;	}
	;}	
	write 1
	quit
]]></Implementation>
</Method>

<Method name="listaExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipo = $get(%request.Data("tipo",1))
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	;
	if take="" set take=2000
	;
	;set SQL  = "select CodigodoExame,DescricaodoExame from VARExames where company=0 "
	Set SQL  = "Select top "_(skip+take)_" ItemNumber, SearchName From SQLUser.INART Where Company = 0 "
	if tipo=1{	;Exames Laboratório:
		Set SQL  = SQL _ "And %Upper(ItemType) in (6, 4, 5) "
	}
	if tipo=2{  ;Outros Exames
		Set SQL  = SQL _ "And %Upper(ItemType) = 7 "
	}
	Set SQL  = SQL _ "And %UPPER(HoldReason) in (0, 2) "
	if codigo'="" {
		;set SQL = SQL_" and CodigodoExame='"_codigo_"'"
		set SQL = SQL_" And ItemNumber = '"_codigo_"'"
	}
	if searchValue'="" {
		;set SQL = SQL_" and (%upper(CodigodoExame) like %upper('%"_searchValue_"%') or %upper(DescricaodoExame) like %upper('%"_searchValue_"%')) "
		set SQL = SQL_" and (%upper(ItemNumber) like %upper('%"_searchValue_"%') or %upper(SearchName) like %upper('%"_searchValue_"%')) "
	}
	set SQL = SQL_" order by SearchName "
	;
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		;set exame = rsLinha.%Get("CodigodoExame")
		set exame = rsLinha.%Get("ItemNumber")
		;set descr = rsLinha.%Get("DescricaodoExame")
		set descr = rsLinha.%Get("SearchName")
		set linha = {}
		set linha.CodExame = exame
		set linha.DescExame = descr
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaMedicamentos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set filter 	= $Get(%request.Data("filter",1))
	Set pFlagCodProduto = $Get(%request.Data("pFlagCodProduto",1))
	if take<20 set take = 20
	;
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="CodMedicamento" set campo="Codigo"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="CodMedicamento" set campo1="Codigo"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	;
	set contador = 0
	set select1 = "Codigo,Nome,Descricao,SubDescricao,(select NumerodeReceitas from VARMedicamentoReceitado where company=0 and CodMedicamento=Codigo and YBED='"_YBED_"') as Receitas"
	set select2 = "Codigo,Nome,Descricao,SubDescricao,'' as Receitas"
	set classe = "VARMedicamento"
	set where = "company = 0 "
	if codigo '= "" {
		set where = where_" and Codigo = '"_codigo_"' "
	}elseif filter'=""{
		set where = where_" and ("_filter_")"
	}else{
		if searchValue'="" set where = where_" and (%upper(Nome) like %upper('%"_searchValue_"%') or %upper(Descricao) like %upper('%"_searchValue_"%') or %upper(subdescricao) like %upper('%"_searchValue_"%'))"
	}
	;
	if where'="" set where = "where "_where
	set orderBy = "Order By Receitas Desc,Nome"
	set orderBy2 = "Order By Nome"
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect1="select * from ("
	set meuSelect1=meuSelect1_"select top 10 * "
	set meuSelect1=meuSelect1_" from (select "_select1_" from "_classe_" principal "_where_" Group By nome,Descricao,SubDescricao) "_orderBy
	set meuSelect1=meuSelect1_")"
	if take>0 set meuSelect1=meuSelect1_" where %VID between "_skip_" and "_take
	;	
	set meuSelect2="select * from ("
	set meuSelect2=meuSelect2_"select top "_(top*2)_" * "
	set meuSelect2=meuSelect2_" from (select "_select2_" from "_classe_" principal "_where_" Group By nome,Descricao,SubDescricao) "_orderBy2
	set meuSelect2=meuSelect2_")"
	;
	set meuSelect = "select * from (select * from ("_meuSelect1_" union "_meuSelect2_") group by Codigo) "
	if take>0 set meuSelect = meuSelect_" where %VID between "_skip_" and "_take 
	;
	if (filter'="") set meuSelect = "select "_select2_" from "_classe_" principal "_where_" Group By nome,Descricao,SubDescricao"
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set nome = rsLinha.%Get("Nome")
		set Descricao = rsLinha.%Get("Descricao")
		set subdescricao = rsLinha.%Get("SubDescricao")
		set receitas = rsLinha.%Get("Receitas")
		set linha = {}
		set linha.CodMedicamento = codigo
		if (pFlagCodProduto = 1) {
			set linha.DescMedicamento = codigo_" - "_nome_" "_subdescricao_" ("_Descricao_")"
		}Else{
			set linha.DescMedicamento = nome_" "_subdescricao_" ("_Descricao_")"
		}
		if receitas>0 set linha.Fav = receitas
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit

	set codigo = $get(%request.Data("codigo",1))
	set searchValue = $get(%request.Data("searchValue",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set YBED 	= $Get(%request.Data("YBED",1))
	Set pFlagCodProduto = $Get(%request.Data("pFlagCodProduto",1))
	;
	set contador = 0
	set select1 = "Codigo,Nome,Dosagem,SubDescricao,(select NumerodeReceitas from VARMedicamentoReceitado where company=0 and CodMedicamento=Codigo and YBED='"_YBED_"') as Receitas"
	set select2 = "Codigo,Nome,Dosagem,SubDescricao,'' as Receitas"
	set classe = "VARMedicamento"
	set where = "company = 0 "
	if codigo '= "" set where = where_" and Codigo = '"_codigo_"' "
	e  if searchValue'="" set where = where_" and (%upper(Nome) like %upper('%"_searchValue_"%') or %upper(Descricao) like %upper('%"_searchValue_"%') or %upper(Codigo) like %upper('%"_searchValue_"%'))"
	;
	if where'="" set where = "where "_where
	set orderBy = "Order By Receitas Desc,Nome,Descricao"
	set orderBy2 = "Order By Nome,Descricao"
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	;
	set meuSelect1="select * from ("
	set meuSelect1=meuSelect1_"select top 10 * "
	set meuSelect1=meuSelect1_" from (select "_select1_" from "_classe_" principal "_where_" Group By nome,Dosagem,SubDescricao) "_orderBy
	set meuSelect1=meuSelect1_")"
	if take>0 set meuSelect1=meuSelect1_" where %VID between "_skip_" and "_take
	;	
	set meuSelect2="select * from ("
	set meuSelect2=meuSelect2_"select top "_top_" * "
	set meuSelect2=meuSelect2_" from (select "_select2_" from "_classe_" principal "_where_" Group By nome,Dosagem,SubDescricao) "_orderBy2
	set meuSelect2=meuSelect2_")"
	if take>0 set meuSelect2=meuSelect2_" where %VID between "_skip_" and "_take
	;
	set meuSelect = meuSelect1_" union "_meuSelect2
	if searchValue'="" set meuSelect = meuSelect2
	;
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set nome = rsLinha.%Get("Nome")
		set Dosagem = rsLinha.%Get("Dosagem")
		set subdescricao = rsLinha.%Get("SubDescricao")
		set receitas = rsLinha.%Get("Receitas")
		set linha = {}
		set linha.CodMedicamento = codigo
		if (pFlagCodProduto = 1) {
			set linha.DescMedicamento = codigo_" - "_nome_" "_subdescricao_" ("_Dosagem_")"
		}Else{
			set linha.DescMedicamento = nome_" "_subdescricao_" ("_Dosagem_")"
		}
		if receitas>0 set linha.Fav = receitas
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaMedicamentos1">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	;
	#dim %request As %CSP.Request
	#dim %response As %CSP.Response
	;
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set myId = $Get(%request.Data("myId",1))
	Set pText = searchValue
	;
	Set filter = $Get(%request.Data("filter",1))
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="CodMedicamento" set campo="Codigo"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="CodMedicamento" set campo1="Codigo"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	
	;
	set SQL = " SELECT Codigo,Nome,Descricao "
	set SQL = SQL _ " FROM SQLUser.VARMedicamento "
	set where = " Company = 0 "
	if (myId'=""){
		set where = where_" AND ((Codigo) = ('"_myId_"')) "
	}elseif filter'=""{
		set where = where_" and ("_filter_")"
	}else{
		set:(pText'="") where = where_" AND ((UPPER(Nome) [ UPPER('"_pText_"')) OR (UPPER(Descricao) [ UPPER('"_pText_"')) OR (UPPER(Codigo) [ UPPER('"_pText_"')) ) "
	}
	;
	set meuSelect = "select * from ("_SQL_" where "_where_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)
	
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set nome = rsLinha.%Get("Nome")
		set descricao = rsLinha.%Get("Descricao")
		set linha = {}
		set linha.CodMedicamento = codigo
		set linha.DescMedicamento = nome_" ("_descricao_")"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()


	
	/*set rs = ##class(%ResultSet).%New()
	do rs.Prepare(meuSelect)
	do rs.Execute()
	
	set c = 0
	set ArrResult(c,"id")  	= ""
	set ArrResult(c,"text") = "Selecione"
	while(rs.Next()) {
		set c = $i(c)
		set ArrProduto(c,"id") = rs.GetDataByName("CodProduto")
		set ArrProduto(c,"text") = "("_rs.GetDataByName("CodProduto") _") "_ rs.GetDataByName("DescricaoResumida")
		set ArrProduto(c,"categoria") = rs.GetDataByName("Categoria")
		set ArrProduto(c,"descCategoria") = $$RemoveMark^COMViewSQL(rs.GetDataByName("DescCategoria"))
	}
	Set result=..ToJSON(.ArrProduto,pbEcho)
	
	If 'pbEcho {
		Quit result	
	}*/

	
	
	/*set meuSelect = "Select Top 10 Codigo,Nome,Descricao from VARMedicamento where company = 0 "
	set rsLinha = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set retorno = []
	while(rsLinha.%Next()){
		set codigo = rsLinha.%Get("Codigo")
		set nome = rsLinha.%Get("Nome")
		set descricao = rsLinha.%Get("Descricao")
		set linha = {}
		set linha.CodMedicamento = codigo
		set linha.DescMedicamento = nome_" ("_descricao_")"
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()*/
	quit
]]></Implementation>
</Method>

<Method name="addMedicamento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set med = $get(%request.Data("med",1))
	set YBED = $get(%request.Data("YBED",1))
	set ^VARMedicamentoReceitado(0,YBED,med,1) = $get(^VARMedicamentoReceitado(0,YBED,med,1))+1
	quit
]]></Implementation>
</Method>

<Method name="recReceitas">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = []
	set nseq = ""
	for {
		set nseq = $order(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)) quit:nseq=""
		set receituario = $piece($get(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)),"~",1)
		set removeDataHoraImp = $piece($get(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)),"~",2)
		set linha = {}
		set linha.SeqReceita 	= nseq
		set linha.Receituario 	= receituario
		set linha.removeDataHoraImp = +removeDataHoraImp
		set linha.removeDataHoraImpExt = $select(removeDataHoraImp="1":"Sim",1:"Não")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="addFichaExames">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set nseq = $get(%request.Data("nseq",1))
	set receita = $get(%request.Data("receita",1))
	set removeDataHoraImp = $get(%request.Data("impressao",1))
	set:nseq="" nseq = $order(^mtemp.VARPEPExamesLista(%session.SessionId,""),-1)+1
	kill ^mtemp.VARPEPExamesLista(%session.SessionId,nseq)
	merge ^mtemp.VARPEPExamesLista(%session.SessionId,nseq) = ^mtemp.VARPEPExames(%session.SessionId)
	kill ^mtemp.VARPEPExames(%session.SessionId)
	write 1
	quit
]]></Implementation>
</Method>

<Method name="recExamesLinha">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set nseq = $get(%request.Data("nseq",1))
	kill ^mtemp.VARPEPExames(%session.SessionId)
	merge ^mtemp.VARPEPExames(%session.SessionId) = ^mtemp.VARPEPExamesLista(%session.SessionId,nseq)
	set tipo = $order(^mtemp.VARPEPExames(%session.SessionId,""))
	set retorno = {}
	set retorno.tipo=tipo
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="recExamesCadastrados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = []
	set sequ=""
	for {
		set sequ = $order(^mtemp.VARPEPExamesLista(%session.SessionId,sequ)) quit:sequ=""
		set linha = {}
		set linha.Seq = sequ
		set exames = ""
		set tipo=""
		for {
			set tipo = $order(^mtemp.VARPEPExamesLista(%session.SessionId,sequ,tipo)) quit:tipo=""
			set exam = ""
			for {
				set exam = $order(^mtemp.VARPEPExamesLista(%session.SessionId,sequ,tipo,exam)) quit:exam=""
				set datahora = $piece(^mtemp.VARPEPExamesLista(%session.SessionId,sequ,tipo,exam),"~",7)
				set desc = $piece($get(^INART(0,exam,1)),"~",1)
				if exames'="" set exames = exames_", "
				set exames = exames_desc
			}
		}
		set linha.Exames = exames
		set linha.DataHora = +datahora
		set linha.Tipo = $order(^mtemp.VARPEPExamesLista(%session.SessionId,sequ,""))
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="deletaExameCadastrado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set nseq = $get(%request.Data("nseq",1))
	kill ^mtemp.VARPEPExamesLista(%session.SessionId,nseq)
	write 1
	quit
]]></Implementation>
</Method>

<Method name="updateExameCadastrado">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set nseq = $get(%request.Data("nseq",1))
	set dataHora = $get(%request.Data("dataHora",1))
	if dataHora="true" set dataHora=1
	e  set dataHora=0
	set tipo=""
	for {
		set tipo = $order(^mtemp.VARPEPExamesLista(%session.SessionId,nseq,tipo)) quit:tipo=""
		set exam = ""
		for {
			set exam = $order(^mtemp.VARPEPExamesLista(%session.SessionId,nseq,tipo,exam)) quit:exam=""
			set $p(^mtemp.VARPEPExamesLista(%session.SessionId,nseq,tipo,exam),"~",7) = dataHora
		}
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="novaFichaExame">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	kill ^mtemp.VARPEPExames(%session.SessionId)
	write 1
	quit
]]></Implementation>
</Method>

<Method name="addReceita">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set nseq = $get(%request.Data("nseq",1))
	set receita = $get(%request.Data("receita",1))
	set removeDataHoraImp = $get(%request.Data("impressao",1))
	if (receita'=""){ 
		set:nseq="" nseq = $order(^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,""),-1)+1
		set ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,nseq)=receita_"~"_removeDataHoraImp
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="deletaReceita">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	if (codigo'=""){ 
		kill ^mtemp.VARProntuarioEletronicoReceitas(%session.SessionId,codigo)
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="recDeclaracao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno = []
	set nseq = ""
	for {
		set nseq = $order(^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,nseq)) quit:nseq=""
		set declaracao = $piece($get(^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,nseq)),"~",1)
		set removeDataHoraImp = $piece($get(^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,nseq)),"~",2)
		set linha = {}
		set linha.SeqDeclaracao 	= nseq
		set linha.Declaracao 	= declaracao
		set linha.removeDataHoraImp = +removeDataHoraImp
		set linha.removeDataHoraImpExt = $select(removeDataHoraImp="1":"Sim",1:"Não")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="addDeclaracao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set nseq = $get(%request.Data("nseq",1))
	set declaracao = $get(%request.Data("declaracao",1))
	set removeDataHoraImp = $get(%request.Data("impressao",1))
	if (declaracao'=""){ 
		set:nseq="" nseq = $order(^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,""),-1)+1
		set ^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,nseq)=declaracao_"~"_removeDataHoraImp
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="deletaDeclaracao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	if (codigo'=""){ 
		kill ^mtemp.VARProntuarioEletronicoDeclaracoes(%session.SessionId,codigo)
	}
	write 1
	quit
]]></Implementation>
</Method>

<Method name="listaEvolucoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	set paciente = " "
	if passagem'="" set paciente = $piece($get(^MEDAdmission(0,passagem,1)),"~",1)
	set query($i(contador)) = "select VARPEP.EvolucaoData,"
	set query($i(contador)) = "VARPEP.EvolucaoPA1,VARPEP.EvolucaoPA2,VARPEP.EvolucaoPulso,"
	set query($i(contador)) = "VARPEP.EvolucaoTemp,VARPEP.EvolucaoDescricao,"
	set query($i(contador)) = "VARPEP.EvolucaoConduta"
	set query($i(contador)) = "from MEDAdmission, VARPEP "
	set query($i(contador)) = "where MEDAdmission.company=0 and VARPEP.company=0 and"
	set query($i(contador)) = "MEDAdmission.Patient='"_paciente_"' and"
	set query($i(contador)) = "MEDAdmission.AdmissionID=VARPEP.admissao and"
	set query($i(contador)) = "VARPEP.admissao<'"_passagem_"' "
	set query($i(contador)) = "Order by VARPEP.EvolucaoData desc"
	set query = $order(query(""),-1)
	;set query = "Select * from VARPEP where company=0 and admissao<'"_passagem_"' order by EvolucaoData desc"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	set retorno=[]
	while(rs.%Next()){
		set linha={}
		set linha.Data = $select(rs.%Get("EvolucaoData")="":"",1:$zdate(rs.%Get("EvolucaoData"),3))
		set linha.PA = $select(rs.%Get("EvolucaoPA1")="":"",1:rs.%Get("EvolucaoPA1")_" x "_rs.%Get("EvolucaoPA2"))
		set linha.Pulso = rs.%Get("EvolucaoPulso")
		set linha.Temp = rs.%Get("EvolucaoTemp")
		set linha.Descricao = rs.%Get("EvolucaoDescricao")
		set linha.Conduta = rs.%Get("EvolucaoConduta")
		do retorno.%Push(linha)
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="listaEventosAdversos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set retorno=[]
	set data=""
	for {
		set data = $order(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data)) quit:data=""
		set hora=""
		for {
			set hora = $order(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data,hora)) quit:hora=""
			set obj = $get(^mtemp.VARProntuarioEletronicoAdversos(%session.SessionId,data,hora))
			set descricao = $piece(obj,"~",1)
			set conduta = $piece(obj,"~",2)
			set conclusao = $piece(obj,"~",3)
			set linha={}
			set linha.DataO = data
			set linha.HoraO = hora
			set linha.Data = $zdate(data,3)
			set linha.Hora = $ztime(hora,2)
			set linha.Descricao = descricao
			set linha.Conduta = conduta
			set linha.Conclusao = conclusao
			do retorno.%Push(linha)
		}
	}
	write retorno.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="getIdade">
<ClassMethod>1</ClassMethod>
<FormalSpec>dtNascimento</FormalSpec>
<Implementation><![CDATA[
	if dtNascimento="" quit ""
	set nasc = $zdate(dtNascimento,8)
	set hoje = $zdate($horolog,8)
	set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
	if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
	quit anos
]]></Implementation>
</Method>

<Method name="getAlertas">
<ClassMethod>1</ClassMethod>
<FormalSpec>codPaciente,pAdimissao=""</FormalSpec>
<Implementation><![CDATA[
	if codPaciente="" quit ""
	set alertas = ""
	set obj = $get(^MEDPatient(0,codPaciente,1))
	set dtNascimento = $$$MEDPatientDOB(obj)
	set alergias = $$$MEDPatientAllergies(obj)
	set anos = ..getIdade(dtNascimento)
	if anos>=60 set alertas = alertas_"<i class='text-primary fas fa-blind' title='Idoso"_pAdimissao_"' />&nbsp;"
	If (pAdimissao '= "" && ($Data(^VARPEPAdversos(0,pAdimissao)))) {
		set alertas = alertas_"<i class='text-primary fa-blink fas fa-exclamation-triangle' title='Eventos Adversos' />&nbsp;"
	}
	;
	/*if codPaciente=1{
		set alertas = alertas_"<i class='text-primary fas fa-wheelchair' title='Cadeirante'></i>&nbsp;"
		set alertas = alertas_"<i class='text-danger fas fa-bong' title='Aguardando Exame - Mais de 4 horas'></i>&nbsp;"
		set alertas = alertas_"<i class='text-primary fas fa-pills' title='Tomando Medicamento'></i>&nbsp;"
		set alertas = alertas_"<i class='text-warning fas fa-heartbeat' title='Pressão Alta'></i>&nbsp;"
		set alertas = alertas_"<i class='text-warning fas fa-thermometer-full' title='Febre - 38°C'></i>&nbsp;"
		set alertas = alertas_"<i class='text-primary fas fa-lungs' title='Frequência Respiratória'></i>&nbsp;"
	}elseif codPaciente=2{
		set alertas = alertas_"<i class='text-danger fas fa-thermometer-full' title='Febre - 40°C'></i>&nbsp;"
	}elseif codPaciente=3{
		set alertas = alertas_"<i class='text-primary fas fa-pills' title='Tomando Medicamento'></i>&nbsp;"
		set alertas = alertas_"<i class='text-primary fas fa-heartbeat' title='Pressão Alta'></i>&nbsp;"
	}else{
		set:$random(30)#3=0 alertas = alertas_"<i class='text-primary fas fa-wheelchair' title='Cadeirante'></i>&nbsp;"
		set:$random(30)#2=0 alertas = alertas_"<i class='text-primary fas fa-bong' title='Aguardando Exame'></i>&nbsp;"
		set:$random(50)#4=0 alertas = alertas_"<i class='text-primary fas fa-pills' title='Tomando Medicamento'></i>&nbsp;"
		set:$random(50)#7=0 alertas = alertas_"<i class='text-warning fas fa-heartbeat' title='Pressão Alta'></i>&nbsp;"
		set:$random(50)#10=0 alertas = alertas_"<i class='text-danger fas fa-thermometer-full' title='Febre - 40°C'></i>&nbsp;"
		set:$random(50)#20=0 alertas = alertas_"<i class='text-primary fas fa-lungs' title='Frequência Respiratória'></i>&nbsp;"
	}
	*/
	set:alergias'="" alertas = alertas_"<i class='text-primary fas fa-allergies' title='Alergia'></i>&nbsp;"
	
	;set alertas = alertas_"<b><a href='#' class='text-primary' title='Prontuário Digitalizado' onclick='abreListaArquivosVDOC()') style='cursor:pointer'>&nbsp;PEP Digitalizado&nbsp;</a></b>"
	
	quit alertas
]]></Implementation>
</Method>

<Method name="listaResultados">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set passagem = $Get(%request.Data("passagem",1))
	Set codPaciente = $piece($Get(^MEDAdmission(0, passagem, 1)),"~",1)
	
	Set meuSQL = "Select PerfilExame, CompostoExame1, Exame "
	Set meuSQL = meuSQL _ "From SQLUser.VARPEPResultado Where Company = 0 "
	Set meuSQL = meuSQL _ "And Paciente = '"_codPaciente_"' "
	Set meuSQL = meuSQL _ "Group By PerfilExame, CompostoExame1, Exame"
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	set retorno = []
	while(rs.%Next()){
		Set perfilExame		= rs.%Get("PerfilExame")
		Set compostoExame	= rs.%Get("CompostoExame1")
		Set exame					= rs.%Get("Exame")
		
		;if (perfilExame '= "MIE") continue
		Set temp(perfilExame, compostoExame, exame) = ""
	}		
	Set perfilExame = ""
	For {
		Set perfilExame = $Order(temp(perfilExame))
		Quit:perfilExame=""
		;
		If (perfilExame '= "SEMPERFIL") {
			Set seqComposto = ""
			For {
				Set seqComposto = $Order(^VARPerfilExame(0,"EXIBICAO",perfilExame,seqComposto))
				Quit:seqComposto=""
				;
				Set compostoExame = $Piece(^VARPerfilExame(0,"EXIBICAO",perfilExame,seqComposto,1),"~",1)
				;
				Set seqExame = ""
				For {
					Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame))
					Quit:seqExame=""
					;
					Set exame = $Piece(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame,1),"~",1)
					;
					If ('$Data(temp(perfilExame, compostoExame, exame))) Continue
					Do INSERT(codPaciente,perfilExame,seqComposto,compostoExame,exame)
				}
			}
		}Else{
			Set compostoExame = ""
			For {
				Set compostoExame = $Order(temp(perfilExame, compostoExame))
				Quit:compostoExame=""
				;
				If (compostoExame '= "SEMCOMPOSTO") {
					Set seqExame = ""
					For {
						Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame))
						Quit:seqExame=""
						;
						Set exame = $Piece(^VARComposicaoExame(0,"EXIBICAO",perfilExame,compostoExame,seqExame,1),"~",1)
						;
						If ('$Data(temp(perfilExame, compostoExame, exame))) Continue
						Do INSERT(codPaciente,perfilExame,"",compostoExame,exame)
					}
				}Else{
					Set exame = ""
					For {
						Set exame = $Order(temp(perfilExame, compostoExame, exame))
						Quit:exame=""
						Do INSERT(codPaciente,perfilExame,"",compostoExame,exame)
					}
				}
			}	
		} 		
	}
	Write retorno.%ToJSON()
	Return $$$OK
	;
INSERT(pCodPaciente,pPerfilExame,pSequenciaComposto,pCompostoExame,pExame)	
	Set descPerfilExame 	= $$SQLGetDescricaoProduto^VARSQL(pPerfilExame)
	Set descCompostoExame = $S(pSequenciaComposto="":"",1:pSequenciaComposto_" - ")_$$SQLGetDescricaoProduto^VARSQL(pCompostoExame)
	Set descExame 				= $$SQLGetDescricaoProduto^VARSQL(pExame)
	;
	Set listRetorno = {}
	Set listRetorno.id 						= pCodPaciente_"||"_pPerfilExame_"||"_pCompostoExame_"||"_pExame
	Set listRetorno.codPerfil 		= pPerfilExame
	Set listRetorno.descPerfil 		= descPerfilExame
	Set listRetorno.codComposto 	= pCompostoExame
	Set listRetorno.descComposto	= descCompostoExame
	Set listRetorno.codExame 			= pExame
	set listRetorno.descExame 		= descExame
	Set meuSQL1 = "Select DataExame, Resultado "
	Set meuSQL1 = meuSQL1 _ "From SQLUser.VARPEPResultado Where Company = 0 "
	Set meuSQL1 = meuSQL1 _ "And Paciente = '"_codPaciente_"' "
	Set meuSQL1 = meuSQL1 _ "And PerfilExame = '"_pPerfilExame_"' " 
	Set meuSQL1 = meuSQL1 _ "And CompostoExame1 = '"_pCompostoExame_"' "
	Set meuSQL1 = meuSQL1 _ "And Exame = '"_exame_"' "
	Set meuSQL1 = meuSQL1 _ "Order By DataExame Desc"
	set rs1 = ##class(%SQL.Statement).%ExecDirect("",meuSQL1)
	while(rs1.%Next()){
		Do listRetorno.%Set($zdate(rs1.%Get("dataExame"),4), rs1.%Get("resultado"))
	}	
	do retorno.%Push(listRetorno)	
	;
	Return
]]></Implementation>
</Method>

<Method name="ArmResultaExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>pPassagem,pId,pDatadoExame,pValor,pYBED</FormalSpec>
<Implementation><![CDATA[

	$$$VAR
	Set YM = 0
	Set Y = "~"

	Set codPaciente = $Piece(pId,"||",1)
	Set perfil 			= $Piece(pId,"||",2)
	Set composto 		= $Piece(pId,"||",3)
	Set exame 			= $Piece(pId,"||",4)
	Set pDatadoExame = $zdh(pDatadoExame,4)

	if (codPaciente = "") {
		Set codPaciente = $piece($Get(^MEDAdmission(0, pPassagem, 1)),"~",1)
	}

	Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, codPaciente, perfil, composto, exame, pDatadoExame))
	Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
	Set $$$VARPEPResultadoUsuario(objVARVARPEPResultado) =  pYBED
	
	Set status = $$$Save("VARPEPResultado", codPaciente_","_perfil_","_composto_","_exame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)

	Quit status
]]></Implementation>
</Method>

<Method name="ArmResultaExameAdd">
<ClassMethod>1</ClassMethod>
<FormalSpec>pPassagem,pId,pDatadoExame,pValor,pYBED</FormalSpec>
<Implementation><![CDATA[
	$$$VAR
	Set YM = 0
	Set Y = "~"


	Set codPaciente = $piece($Get(^MEDAdmission(0, pPassagem, 1)),"~",1)
	Set codPerfil = $Piece(pId,"||",1)
	Set codComposto = $Piece(pId,"||",2)
	Set codExame = $Piece(pId,"||",3)
	Set pDatadoExame = $zdh(pDatadoExame,4)

	Set objVARVARPEPResultado = $Get(^VARPEPResultado(0, codPaciente, codPerfil, codComposto, codExame, pDatadoExame))
	Set $$$VARPEPResultadoResultado(objVARVARPEPResultado) = pValor
		Set $$$VARPEPResultadoUsuario(objVARVARPEPResultado) =  pYBED

	Set status = $$$Save("VARPEPResultado", codPaciente_","_codPerfil_","_codComposto_","_codExame_","_pDatadoExame, objVARVARPEPResultado, $$$YES)

	Quit status
]]></Implementation>
</Method>

<Method name="ImpColunasResultados">
<ClassMethod>1</ClassMethod>
<FormalSpec>pPassagem</FormalSpec>
<Implementation><![CDATA[
	Set codPaciente = $piece($Get(^MEDAdmission(0, pPassagem, 1)),"~",1)
	set arrayColuna = []
	set listColuna = {}
	do listColuna.%Set("dataField", "descPerfil")
	do listColuna.%Set("caption", "Perfil")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	do listColuna.%Set("groupIndex", 0)
	do listColuna.%Set("sortOrder", 0)
	do arrayColuna.%Push(listColuna)
	set listColuna = {}
	do listColuna.%Set("dataField", "descComposto")
	do listColuna.%Set("caption", "Composto")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	;do listColuna.%Set("sortOrder", 1)
	do listColuna.%Set("groupIndex", 1)
	do arrayColuna.%Push(listColuna)
	set listColuna = {}
	do listColuna.%Set("dataField", "descExame")
	do listColuna.%Set("caption", "Exame")
	do listColuna.%Set("width", 250)
	do listColuna.%Set("allowEditing", 0)
	do arrayColuna.%Push(listColuna)
	kill query
	set query($i(contador)) = "Select DataExame From SQLUser.VARPEPResultado Where Company = 0 "
	set query($i(contador)) = "And Paciente = '"_codPaciente_"' Group By DataExame Order By DataExame Desc"
	set query = $order(query(""),-1)
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set listColuna = {}
		do listColuna.%Set("dataField", $zdate(rs.%Get("DataExame"),4))
		do listColuna.%Set("caption", $zdate(rs.%Get("DataExame"),4))
		do listColuna.%Set("allowEditing", 1)
		do listColuna.%Set("cellTemplate", "'colunaData'")
		do arrayColuna.%Push(listColuna)
	}
	quit $replace($replace(arrayColuna.%ToJSON(),"""'",""),"'""","")
	quit arrayColuna.%ToJSON()
]]></Implementation>
</Method>

<Method name="getResultado">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId,pData</FormalSpec>
<Implementation><![CDATA[
	Set codPaciente = $Piece(pId,"||",1)
	Set codPerfil = $Piece(pId,"||",2)
	Set codComponente = $Piece(pId,"||",3)
	Set codExame = $Piece(pId,"||",4)
	Set pData = $ZDH(pData,4)
	
	Set resultado = $Piece($Get(^VARPEPResultado(0,codPaciente,codPerfil,codComponente,codExame,pData,1)),"~",1)
	
	Set resultado = "<i><b>"_$$SQLGetDescricaoProduto^VARSQL(codExame)_"</b></i><br><br>"_$Replace(resultado,$c(10),"<br>")
	
	Quit resultado
]]></Implementation>
</Method>

<Method name="getCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	Set filter = $Get(%request.Data("filter",1))
	if filter'=""{
		set objFilter = [].%FromJSON(filter)
		set filter=""
		if objFilter.%Size()>0{
			set pri=1
			for {
				set campo = objFilter.%Pop()
				quit:campo=""
				if campo="Codigo" set campo="CodigodoCID"
				if $isObject(campo){
					set pri1=1,pri=0
					if campo.%Size()>0{		
						for {
							set campo1 = campo.%Pop()
							quit:campo1=""
							if campo1="Codigo" set campo1="CodigodoCID"
							set filter = $select(pri1:"'",1:"")_campo1_$select(pri1:"'",1:"")_" "_filter
							set pri1=0
						}
					}	
				}else{
					set filter = $select(pri:"'",1:"")_campo_$select(pri:"'",1:"")_" "_filter
					set pri=0
				}
				
			}
		}
	}
	set top = take
	if top<=0 set top = 200
	set contador = 0
	set SQL = " SELECT Count(*) as totalCount,CodigodoCID, DescricaoCompleta,DescricaoResumida,Categoria FROM VARCID where company = 0 "
	if filter '= "" {
		set SQL = SQL_" and ("_filter_") "
	}elseif codigo '= "" {
		set SQL = SQL_" and CodigodoCID = '"_codigo_"' "
	}else{
		if searchValue'="" set SQL = SQL_" and (%upper(CodigodoCID) like %upper('%"_searchValue_"%') or %upper(DescricaoCompleta) like %upper('%"_searchValue_"%'))"
	}
	set meuSelect = "select * from ("_SQL_")"
	if skip'="" set meuSelect=meuSelect_" where %VID between "_(skip+1)_" and "_(skip+take)_""
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set Total = 0
	while(rs.%Next()){
		set totalCount=rs.%Get("totalCount")
		set ID=rs.%Get("CodigodoCID")
		set DescR=rs.%Get("DescricaoResumida")
		set Name=rs.%Get("DescricaoCompleta")
		if Name="" set Name = DescR
		set Categoria=rs.%Get("Categoria")
		set retorno(Categoria,ID) = Name
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		;
		set linha = {}
		set linha.Codigo = ID
		set linha.Descricao = "("_ID_") "_Name
		set linha.Categoria = descCat
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit
	set retorno = []
	set Categoria=""
	for {
		set Categoria = $order(retorno(Categoria)) quit:Categoria=""
		set descCat = $piece(^VARCIDCategorias(0,Categoria,1),"~",4)
		set grupo = {}
		set grupo.key = descCat
		set array = []
		set id=""
		for {
			set id = $order(retorno(Categoria,id)) quit:id=""
			set nome = retorno(Categoria,id)
			set linha = {}
			set linha.Codigo = id
			set linha.Descricao = "("_id_") "_nome
			do array.%Push(linha)
		}
		set grupo.items = array
		do retorno.%Push(grupo)
	}
	set ret = {}
	set ret.data = retorno
	set ret.totalCount = totalCount
	write ret.%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="getListCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set SQL = "Select CodigodoCID, DescricaoResumida, Categoria, $$GetDescCategoriaCID^VARSQL(Categoria) AS DescCategoria From SQLUser.VARCID"
	set rs = ##class(%SQL.Statement).%ExecDirect("",SQL)
	set array = []
	while(rs.%Next()){
		;
		set linha = {}
		set linha.CodigodoCID = rs.%Get("CodigodoCID")
		set linha.DescricaoResumida = rs.%Get("DescricaoResumida")
		set linha.DescCategoria = rs.%Get("DescCategoria")
		do array.%Push(linha)
	}
	write array.%ToJSON()
	quit
]]></Implementation>
</Method>

<Method name="pesquisaPacientes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	$$$VAR
	set filter = $get(%request.Data("filter",1))
	set codigo = $get(%request.Data("codigo",1))
	Set take 	= $Get(%request.Data("take",1))
	Set skip 	= $Get(%request.Data("skip",1))
	Set sort 	= $Get(%request.Data("sort",1))
	Set searchValue = $Get(%request.Data("searchValue",1))
	;
	set YBED1=YBED
	if YBED="SILMARADM" set YBED1="ERIVALDO"
	set xYBED = $Replace(YBED1,"_"," ")
	set codProvider = $Order(^MEDProviders(0,1,xYBED,""))
	set perm = +$$^WWWBEDBER(YBED1) ; Acesso administrador
	if codProvider="",perm'=1 {
		set retorno = {}
		set retorno.data = []
		set retorno.totalCount = 0
		write retorno.%ToJSON()
		quit $$$OK
	}

	set sort = $tr(sort,"""{[]}","")
	set campoSort = $REPLACE($piece($piece(sort,",",1),":",2),"""","")
	set campoSortDesc = $select($piece($piece(sort,",",2),":",2)="false":"DESC",1:"ASC")
	set orderBy = ""
	
	if campoSort'="" set orderBy = "order by "_campoSort_" "_campoSortDesc
	
	set filter = $tr(filter,"""{[]}","")
	set campo = "",operacao = "",wherefilter="",proximacomb="",andant="",abrep=0
	for i=1:1:$length(filter,","){
		set ret = $piece(filter,",",i)
		if ret="" continue
		if proximacomb=1{
			if andant=1,ret="and" set wherefilter = wherefilter_" ) ",abrep=0
			if wherefilter'="" set wherefilter = wherefilter_" "_ret_" "
			set andant = ""
			if ret="and" set wherefilter = wherefilter_" ( ",andant = 1,abrep=1
			set proximacomb = ""
			continue
		}
		if campo="" {
			if ret = "and" continue
			set campo = ret continue
		}
		if operacao="" {
			if ret = "contains" set operacao = " like ",inicio="%",fim="%"
			if ret = "notcontains" set operacao = " not like ",inicio="%",fim="%"
			if ret = "startswith" set operacao = " like ",inicio="",fim="%"
			if ret = "endswith" set operacao = " like ",inicio="%",fim=""
			if ret = "=" set operacao = " = ",inicio="",fim=""
			if ret = "<>" set operacao = " <> ",inicio="",fim=""
			continue
		}
		set ret = $replace(ret," ","")
		set wherefilter = wherefilter_"%upper("_campo_")"_operacao_"%upper('"_inicio_ret_fim_"')"
		set campo="",operacao="",proximacomb=1
	}
	if wherefilter'="" {
		if abrep=1 set wherefilter = wherefilter_")"
	}
	;
	;
	;PatientID,PID,Name,SSN,DOB,$$SQLGetSexoPaciente^VARSQL(PatientID) Gender,MothersName,Tel,FREE2,Email,Street,FREE4,FREE3,FREE6,City,State
	set contador = 0
	set select1 = "select distinct MEDPatient.PatientID,MEDPatient.PID,MEDPatient.Name,MEDPatient.SSN,MEDPatient.DOB,$$SQLGetSexoPaciente^VARSQL(MEDPatient.PatientID) Gender,MEDPatient.MothersName,MEDPatient.Tel,MEDPatient.FREE2,MEDPatient.Email,MEDPatient.Street,MEDPatient.FREE4,MEDPatient.FREE3,MEDPatient.FREE6,MEDPatient.City,MEDPatient.State "
	set select1 = select1_" from  MEDPatient"
	if perm'=1 set select1 = select1_" JOIN MEDAdmission on MEDAdmission.Company=MEDPatient.Company and %upper(MEDAdmission.Patient)=MEDPatient.PatientID and %upper(Profissional)='"_codProvider_"'"
	set select1 = select1_" where MEDPatient.Company=0 "
	if codigo '= "" set select1 = select1_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select1 = select1_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	;
	set select2 = "select distinct MEDPatient.PatientID,MEDPatient.PID,MEDPatient.Name,MEDPatient.SSN,MEDPatient.DOB,$$SQLGetSexoPaciente^VARSQL(MEDPatient.PatientID) Gender,MEDPatient.MothersName,MEDPatient.Tel,MEDPatient.FREE2,MEDPatient.Email,MEDPatient.Street,MEDPatient.FREE4,MEDPatient.FREE3,MEDPatient.FREE6,MEDPatient.City,MEDPatient.State "
	set select2 = select2_" from  MEDPatient"
	set select2 = select2_" where MEDPatient.Company=0 "
	set select2 = select2_" and (select top 1 '1' from VARPEP Inner Join MEDAdmission on MEDAdmission.Company = VARPEP.Company and "
	set select2 = select2_" MEDAdmission.AdmissionID = VARPEP.Admissao and %upper(MEDAdmission.Patient)=MEDPatient.PatientID "
	set select2 = select2_" where %upper(VARPEP.CriadoPor)='"_YBED1_"' "
	set select2 = select2_" or %upper(VARPEP.AlteradoPor)='"_YBED1_"') = '1'"
	if codigo '= "" set select2 = select2_" and PatientID = '"_codigo_"' "
	e  if searchValue'="" set select2 = select2_" and (%upper(PatientID) like %upper('%"_searchValue_"%') or %upper(Name) like %upper('%"_searchValue_"%'))"
	;
	if wherefilter'="" set wherefilter = "where "_wherefilter
	set take = skip + take
	set skip = skip + 1
	set top = take
	if top<=0 set top = 200
	set meuSelect="select * from ("
	set meuSelect=meuSelect_"select top "_top_" *,count(*) totalCount "
	set meuSelect=meuSelect_" from ("_select1_" union "_select2_") "_wherefilter_" "_orderBy
	set meuSelect=meuSelect_")"
	if take>0 set meuSelect=meuSelect_" where %VID between "_skip_" and "_take
	set rs = ##class(%SQL.Statement).%ExecDirect("",meuSelect)
	set array = []
	set totalCount = 0
	while(rs.%Next()){
		set ID			= rs.%Get("PatientID")
		set PID			= rs.%Get("PID")
		set Name		= rs.%Get("Name")
		set CPF 		= rs.%Get("SSN")
		set DtNasc 		= rs.%Get("DOB")
		set sexo 		= rs.%Get("Gender")
		set nomeMae		= rs.%Get("MothersName")
		set Telefone1	= rs.%Get("Tel")
		set Telefone2	= rs.%Get("FREE2")
		set Email		= rs.%Get("Email")
		set Logradouro	= rs.%Get("Street")
		set Numero		= rs.%Get("FREE4")
		set Complemento	= rs.%Get("FREE3")
		set Bairro		= rs.%Get("FREE6")
		set Cidade		= rs.%Get("City")
		set Estado		= rs.%Get("State")
		set totalCount	= rs.%Get("totalCount")
		
		set linha = {}
		set linha.PatientID	= ID
		set linha.PID = PID
		set linha.Name		= Name
		set linha.SSN		= CPF
		set linha.DOB		= $select(DtNasc'="":$zd(DtNasc,3),1:"")
		set linha.Gender	= sexo
		set linha.MothersName	= nomeMae
		set linha.Tel		= Telefone1
		set linha.FREE2		= Telefone2
		set linha.Email		= Email
		set linha.Street	= Logradouro
		set linha.FREE4		= Numero
		set linha.FREE3 	= Complemento
		set linha.FREE6		= Bairro
		set linha.City		= Cidade
		set linha.State		= Estado
		do array.%Push(linha)
	}
	set retorno = {}
	set retorno.data = array
	set retorno.totalCount = totalCount
	write retorno.%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="Impressoes">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set tipoImpressao = $get(%request.Data("tipoImpressao",1))
	set passagem = $get(%request.Data("passagem",1))
	set idEvolucao = $get(%request.Data("idEvolucao",1))
	set fRemoverImprimirData = +$get(%request.Data("fRemoverImprimirData",1))
	set seqReceituario = +$get(%request.Data("seqReceituario",1))
	set seqDeclaracao = +$get(%request.Data("seqDeclaracao",1))
	set seqExame = $get(%request.Data("seqExame",1))
	set codProvider = $Order(^MEDProviders(0,1,YBED,""))
	set (objMEDProvider, conselho) = ""
	If (codProvider '= "") {
		set objMEDProvider = $Get(^MEDProvider(0,codProvider,1))
		set codConselho = $$$MEDProviderFREE2(objMEDProvider)
		set:codConselho'="" conselho = $p($GET(^INPARA(0,"VARMEDCONSELHO","PT",codConselho,1)),"~",1)
	}
	set YM = 0 
	set Y  = "~"
	set meses = "Janeiro;Fevereiro;Marco;Abril;Maio;Junho;Julho;Agosto;Setembro;Outubro;Novembro;Dezembro"
	if tipoImpressao=2{
		set tpImpr = $piece(seqExame,"~",2)
		if tpImpr=1 set tipoImpressao = 2
		if tpImpr=2 set tipoImpressao = 3
		set seqExame = $piece(seqExame,"~",1)
	}
	if tipoImpressao=1{
		;If (YBED = "JULIO" || (YBED = "VALTER")) {
			set link=$$Start^VARJasperRun("VARPEPSumario")
			set folder = $piece($get(^VARJasper(YM,YM,1)),Y,1)
			set link = $$addUserParameter^VARJasperRun(link,"CompiledDir",folder)
		;}Else{
		;	set link=$$Start^VARJasperRun("VARAltaMedica")
		;}
	}elseif tipoImpressao=10{
		set link=$$Start^VARJasperRun("VAREvolucao")
		set link=$$addUserParameter^VARJasperRun(link,"idEvolucao",idEvolucao)
	}elseif tipoImpressao=2{
		set link=$$Start^VARJasperRun("VARPedidoExames")
		set link=$$addUserParameter^VARJasperRun(link,"pTipo",6)
		set link=$$addUserParameter^VARJasperRun(link,"pSeqExame",seqExame)
		set link=$$addUserParameter^VARJasperRun(link,"pRemoverData",fRemoverImprimirData)
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
	}elseif tipoImpressao=3{
		set link=$$Start^VARJasperRun("VARPedidoExames")
		set link=$$addUserParameter^VARJasperRun(link,"pTipo",7)
		set link=$$addUserParameter^VARJasperRun(link,"pSeqExame",seqExame)
		set link=$$addUserParameter^VARJasperRun(link,"pRemoverData",fRemoverImprimirData)
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
	}elseif tipoImpressao=4{
		set link=$$Start^VARJasperRun("VARReceituario")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pSeqReceituario", seqReceituario)
	}elseif tipoImpressao=40{
		set link=$$Start^VARJasperRun("VARDeclaracao")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
		set link=$$addUserParameter^VARJasperRun(link,"pNomeMedico",$$$MEDProviderName(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pConselho",conselho)
		set link=$$addUserParameter^VARJasperRun(link,"pNumConselho",$$$MEDProviderLicenseNumber(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pEmail",$$$MEDProviderEmail(objMEDProvider))
		set link=$$addUserParameter^VARJasperRun(link,"pSeqDeclaracao", seqDeclaracao)
	}elseif tipoImpressao=5{
		set link=$$Start^VARJasperRun("VARLGPD")
		set hoje = $zdate($horolog,4)
		set dia = $piece(hoje,"/",1)
		set mes = $piece(meses,";",+$piece(hoje,"/",2))
		set ano = $piece(hoje,"/",3)
		set link=$$addUserParameter^VARJasperRun(link,"pDataImpressao",dia_" de "_mes_" de "_ano)
	}
	set link=$$addUserParameter^VARJasperRun(link,"pAdmissao",passagem)
	set link=$$addParameter^VARJasperRun(link,YBED,1)
	do ViewInForm^VARJasperRun(link,"Impressao",2)
]]></Implementation>
</Method>

<Method name="CadastraCID">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	if '$data(^VARPEPExamesLista){
		set passagem=""
		for {
			set passagem = $order(^VARPEPExames(0,passagem)) quit:passagem=""
			kill vetor
			set code=""
			for {
				set code = $order(^VARPEPExames(0,passagem,code)) quit:code=""
				set obj = $get(^VARPEPExames(0,passagem,code,1))
				Set tipo = $piece($get(^INART(0,code,1)),"~",26)
				If (tipo = "4" || (tipo = "5") || (tipo = "6")) Set tipo = 1
				If (tipo = "7") Set tipo = 2
				if tipo="" set tipo=1
				set $piece(obj,"~",7)=1
				set vetor(tipo,code)=obj
			}
			set tipo=""
			for {
				set tipo = $order(vetor(tipo)) quit:tipo=""
				set sequ = $order(^VARPEPExamesLista(0,passagem,""),-1)+1
				set code=""
				for{
					set code = $order(vetor(tipo,code)) quit:code=""
					set ^VARPEPExamesLista(0,passagem,sequ,code,1)=vetor(tipo,code)
				}
			}
		}
	}
	if '$data(^VARMedicamentos) do ^VARMedicamentos
	if $data(^VARCIDCategorias) quit 1
	s ^VARCID(0,"A00",1)="Cólera~A00 - Cólera~~~"
	s ^VARCID(0,"A00.0",1)="Cólera Devida a Vibrio Cholerae 01, Biótipo Cholerae~A00.0 - Cólera Devida a Vibrio Cholerae 01, Biótipo Cholerae~~~"
	s ^VARCID(0,"A00.1",1)="Cólera Devida a Vibrio Cholerae 01, Biótipo El Tor~A00.1 - Cólera Devida a Vibrio Cholerae 01, Biótipo El Tor~~~"
	s ^VARCID(0,"A00.9",1)="Cólera Não Especificada~A00.9 - Cólera Não Especificada~~~"
	s ^VARCID(0,"A01",1)="Febres Tifóide e Paratifóide~A01 - Febres Tifóide e Paratifóide~~~"
	s ^VARCID(0,"A01.0",1)="Febre Tifóide~A01.0 - Febre Tifóide~~~"
	s ^VARCID(0,"A01.1",1)="Febre Paratifóide A~A01.1 - Febre Paratifóide A~~~"
	s ^VARCID(0,"A01.2",1)="Febre Paratifóide B~A01.2 - Febre Paratifóide B~~~"
	s ^VARCID(0,"A01.3",1)="Febre Paratifóide C~A01.3 - Febre Paratifóide C~~~"
	s ^VARCID(0,"A01.4",1)="Febre Paratifóide Não Especificada~A01.4 - Febre Paratifóide Não Especificada~~~"
	s ^VARCID(0,"A02",1)="Outras Infecções Por Salmonella~A02 - Outras Infecções Por Salmonella~~~"
	s ^VARCID(0,"A02.0",1)="Enterite Por Salmonela~A02.0 - Enterite Por Salmonela~~~"
	s ^VARCID(0,"A02.1",1)="Septicemia Por Salmonela~A02.1 - Septicemia Por Salmonela~~~"
	s ^VARCID(0,"A02.2",1)="Infecções Localizadas Por Salmonela~A02.2 - Infecções Localizadas Por Salmonela~~~"
	s ^VARCID(0,"A02.8",1)="Outras Infecções Especificadas Por Salmonela~A02.8 - Outras Infecções Especificadas Por Salmonela~~~"
	s ^VARCID(0,"A02.9",1)="Infecção Não Especificada Por Salmonela~A02.9 - Infecção Não Especificada Por Salmonela~~~"
	s ^VARCID(0,"A03",1)="Shiguelose~A03 - Shiguelose~~~"
	s ^VARCID(0,"A03.0",1)="Shiguelose Devida a Shigella Dysenteriae~A03.0 - Shiguelose Devida a Shigella Dysenteriae~~~"
	s ^VARCID(0,"A03.1",1)="Shiguelose Devida a Shigella Flexneri~A03.1 - Shiguelose Devida a Shigella Flexneri~~~"
	s ^VARCID(0,"A03.2",1)="Shiguelose Devida a Shigella Boydii~A03.2 - Shiguelose Devida a Shigella Boydii~~~"
	s ^VARCID(0,"A03.3",1)="Shiguelose Devida a Shigella Sonnei~A03.3 - Shiguelose Devida a Shigella Sonnei~~~"
	s ^VARCID(0,"A03.8",1)="Outras Shigueloses~A03.8 - Outras Shigueloses~~~"
	s ^VARCID(0,"A03.9",1)="Shiguelose Não Especificada~A03.9 - Shiguelose Não Especificada~~~"
	s ^VARCID(0,"A04",1)="Outras Infecções Intestinais Bacterianas~A04 - Outras Infecções Intestinais Bacterianas~~~"
	s ^VARCID(0,"A04.0",1)="Infecção Por Escherichia Coli Enteropatogênica~A04.0 - Infecção Por Escherichia Coli Enteropatogênica~~~"
	s ^VARCID(0,"A04.1",1)="Infecção Por Escherichia Coli Enterotoxigênica~A04.1 - Infecção Por Escherichia Coli Enterotoxigênica~~~"
	s ^VARCID(0,"A04.2",1)="Infecção Por Escherichia Coli Enteroinvasiva~A04.2 - Infecção Por Escherichia Coli Enteroinvasiva~~~"
	s ^VARCID(0,"A04.3",1)="Infecção Por Escherichia Coli Enterohemorrágica~A04.3 - Infecção Por Escherichia Coli Enterohemorrágica~~~"
	s ^VARCID(0,"A04.4",1)="Outras Infecções Intestinais Por Escherichia Coli~A04.4 - Outras Infecções Intestinais Por Escherichia Coli~~~"
	s ^VARCID(0,"A04.5",1)="Enterite Por Campylobacter~A04.5 - Enterite Por Campylobacter~~~"
	s ^VARCID(0,"A04.6",1)="Enterite Devida a Yersinia Enterocolítica~A04.6 - Enterite Devida a Yersinia Enterocolítica~~~"
	s ^VARCID(0,"A04.7",1)="Enterocolite Devida a Clostridium Difficile~A04.7 - Enterocolite Devida a Clostridium Difficile~~~"
	s ^VARCID(0,"A04.8",1)="Outras Infecções Bacterianas Intestinais Especificadas~A04.8 - Outras Infecções Bacterianas Intestinais Especificadas~~~"
	s ^VARCID(0,"A04.9",1)="Infecção Intestinal Bacteriana Não Especificada~A04.9 - Infecção Intestinal Bacteriana Não Especificada~~~"
	s ^VARCID(0,"A05",1)="Outras Intoxicações Alimentares Bacterianas, Não Classificadas em Outra Parte~A05 - Outras Intoxicações Alimentares Bacterianas, Não Classificadas em Outra Parte~~~"
	s ^VARCID(0,"A05.0",1)="Intoxicação Alimentar Estafilocócica~A05.0 - Intoxicação Alimentar Estafilocócica~~~"
	s ^VARCID(0,"A05.1",1)="Botulismo~A05.1 - Botulismo~~~"
	s ^VARCID(0,"A05.2",1)="Intoxicação Alimentar Devida a Clostridium Perfringens (Clostridium Welchii)~A05.2 - Intoxicação Alimentar Devida a Clostridium Perfringens (Clostridium Welchii)~~~"
	s ^VARCID(0,"A05.3",1)="Intoxicação Alimentar Devida a Vibrio Parahemolyticus~A05.3 - Intoxicação Alimentar Devida a Vibrio Parahemolyticus~~~"
	s ^VARCID(0,"A05.4",1)="Intoxicação Alimentar Devida a Bacillus Cereus~A05.4 - Intoxicação Alimentar Devida a Bacillus Cereus~~~"
	s ^VARCID(0,"A05.8",1)="Outras Intoxicações Alimentares Bacterianas Especificadas~A05.8 - Outras Intoxicações Alimentares Bacterianas Especificadas~~~"
	s ^VARCID(0,"A05.9",1)="Intoxicação Alimentar Bacteriana Não Especificada~A05.9 - Intoxicação Alimentar Bacteriana Não Especificada~~~"
	set ^VARCIDCategorias(0,19,1) = "S00~T98~Capítulo XIX - Lesões, envenenamento e algumas outras conseqüências de causas externas~XIX. Lesões enven e alg out conseq causas externas~"
	set ^VARCIDCategorias(0,20,1) = "V01~Y98~Capítulo XX - Causas externas de morbidade e de mortalidade~XX.  Causas externas de morbidade e mortalidade~"
	set ^VARCIDCategorias(0,21,1) = "Z00~Z99~Capítulo XXI - Fatores que influenciam o estado de saúde e o contato com os serviços de saúde~XXI. Contatos com serviços de saúde~"
	set ^VARCIDCategorias(0,22,1) = "U04~U99~Capítulo XXII - Códigos para propósitos especiais~XXII.Códigos para propósitos especiais~"
	do RebuildIndexes^COMUtils("VARCID")
	do RebuildIndexes^COMUtils("VARCIDCategorias")
	quit 1
]]></Implementation>
</Method>

<Method name="getArquivos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set passagem = $get(%request.Data("passagem",1))
	set fileset=##class(%ResultSet).%New("%Library.File:FileSet")
	set empresa 	= 0
	set modulo 		= 13
	set passagem 	= $TR(passagem,"/","_")
	set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	if ($extract(dname, $length(dname)) '= "\") {
		set dname = dname _ "\"
	}
	set dname = dname _ passagem
	set sc=fileset.Execute(##class(%File).NormalizeDirectory(dname),"*",,1)
	set array = []
	while fileset.Next(.sc) { 
		set arquivo = $piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\"))
		set name = $piece($piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\")),".",1) 
		set dataExame = $zd($piece(name,"_",1),4)
		set exame = $piece(name,"_",2)
		Set list = {}
		set list.DataDoExame = dataExame
		set list.Exame = exame
		set list.Arquivo = YGIF_"PEP/documentos/"_passagem_"/"_arquivo //fileset.Get("Name")
		do array.%Push(list)
	}
	w array.%ToJSON()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="removerArquivo">
<ClassMethod>1</ClassMethod>
<FormalSpec>pArquivo</FormalSpec>
<Implementation><![CDATA[
	Set arquivo = $Replace(pArquivo,"/","\")
	Set arquivo = $Piece(arquivo,"\",$length(arquivo,"\")-1,$length(arquivo,"\"))
	;
	Set modulo 	= 13
	Set empresa = 0
		
	Set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	If ($extract(dname, $length(dname)) '= "\") {
		Set dname = dname _ "\"
	}
	if (##class(%File).Exists(dname_arquivo)){
		do ##class(%File).Delete(dname_arquivo)
	}
	quit $$$OK
]]></Implementation>
</Method>

<Method name="getArquivosVDOC">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set paciente = $get(%request.Data("paciente",1))
	Set objPaciente = $Get(^MEDPatient(0,paciente,1))
	Set prontuario = "" ;$$$MEDPatientPID(objPaciente)
	Set prontuario 	= $$SQLGetPatientProntuario^VARSQL(paciente)
	If (prontuario = "") set prontuario = paciente
	set fileset=##class(%ResultSet).%New("%Library.File:FileSet")
	set empresa 	= 0
	set modulo 		= 14
	set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	if ($extract(dname, $length(dname)) '= "\") {
		set dname = dname _ "\"
	}
	set dname = dname _ prontuario
	;w "dname:"_dname
	set sc=fileset.Execute(##class(%File).NormalizeDirectory(dname),"*",,1)
	set array = []
	while fileset.Next(.sc) { 
		set arquivo = $piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\"))
		set dataModificacao = fileset.Get("DateModified")
		Set dataModificacao = $ZDATE($ZDATEH($Piece(dataModificacao," ",1),3),4)_" "_$Piece(dataModificacao," ",2)
		
		set name = $piece($piece(fileset.Get("Name"),"\",$l(fileset.Get("Name"),"\")),".",1) 
		Set list = {}
		set list.Documento = name
		set list.dataModificacao = dataModificacao
		set list.Arquivo = YGIF_"PEP/VDOC/"_prontuario_"/"_arquivo //fileset.Get("Name")
		do array.%Push(list)
	}
	w array.%ToJSON()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FinalizaAdmissao">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set YM 		= 0
	set Y 		= "~"
	set erro 	= ""
	try{
		set passagem 	= $get(%request.Data("passagem",1))
		set objMEDAdmission	= $get(^MEDAdmission(YM, passagem, 1))
		set $$$MEDAdmissionDateDischarged(objMEDAdmission) 	= +$horolog
		set $$$MEDAdmissionTimeDischarged(objMEDAdmission)	= $piece($horolog,",",2)
		set strStatus = $$$Save("MEDAdmission", passagem, objMEDAdmission, $$$YES)
	}
	catch(err){
		#dim err as %Exception.SystemException
		set strStatus = err.DisplayString()
		set erro			=	err
	}	
	set objRetorno = {}
	if erro=""{
		set objRetorno.status = $$$OK
	}else{
		set objRetorno.status = erro
	}
	do objRetorno.%ToJSON()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="TipoCampoExame">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodExame</FormalSpec>
<Implementation><![CDATA[
	If ($Data(^VARPerfilExame(0,"EXIBICAO",pCodExame))) Quit 1
	If ($Data(^VARComposicaoExame(0,"EXIBICAO","SEMPERFIL",pCodExame))) Quit 1
	Quit 0
]]></Implementation>
</Method>

<Method name="getExameAdd">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set arrayRetorno = []
	Set codExame = $Get(%request.Data("codExame",1))
	if (codExame = "") {
		Do arrayRetorno.%ToJSON()
		Quit $$$OK
	}
	If ($Data(^VARPerfilExame(0,"EXIBICAO",codExame))) {
		Set codPerfil = codExame
		Set seqComposicao = ""
		For {
			Set seqComposicao = $Order(^VARPerfilExame(0,"EXIBICAO",codPerfil,seqComposicao))
			Quit:seqComposicao=""
			
			Set codComposicao = $Piece(^VARPerfilExame(0,"EXIBICAO",codPerfil,seqComposicao,1),"~",1)
			
			Set seqExame = ""
			For {
				Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame))
				Quit:seqExame=""
				
				Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame,1),"~",1)
				
				Set descPerfil = $$SQLGetDescricaoProduto^VARSQL(codPerfil)
				Set descComposicao = $$SQLGetDescricaoProduto^VARSQL(codComposicao)
				;
				set listRetorno = {}
				set listRetorno.id = codPerfil_"||"_codComposicao_"||"_codExame
				set listRetorno.codPerfil = codPerfil
				set listRetorno.descPerfil = descPerfil
				set listRetorno.codComposto = codComposicao
				set listRetorno.descComposto = seqComposicao_" - "_descComposicao
				set listRetorno.codExame = codExame
				set listRetorno.descExame = $$SQLGetDescricaoProduto^VARSQL(codExame)
				set listRetorno.Resultado = ""
				do arrayRetorno.%Push(listRetorno)
			}
		}	
	}Else{
		Set codPerfil = "SEMPERFIL"
		;Set codComposicao = ""
		;For {
		;	Set codComposicao = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao))
	;		Quit:codComposicao=""
	
			Set codComposicao = codExame
				
			Set seqExame = ""
			For {
				Set seqExame = $Order(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame))
				Quit:seqExame=""
				
				Set codExame = $Piece(^VARComposicaoExame(0,"EXIBICAO",codPerfil,codComposicao,seqExame,1),"~",1)
				
				Set descPerfil = $$SQLGetDescricaoProduto^VARSQL(codPerfil)
				Set descComposicao = $$SQLGetDescricaoProduto^VARSQL(codComposicao)
				;
				set listRetorno = {}
				set listRetorno.id = codPerfil_"||"_codComposicao_"||"_codExame
				set listRetorno.codPerfil = codPerfil
				set listRetorno.descPerfil = descPerfil
				set listRetorno.codComposto = codComposicao
				set listRetorno.descComposto = descComposicao
				set listRetorno.codExame = codExame
				set listRetorno.descExame = $$SQLGetDescricaoProduto^VARSQL(codExame)
				set listRetorno.Resultado = ""
				do arrayRetorno.%Push(listRetorno)
			}
			
	}
	Do arrayRetorno.%ToJSON()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="removerArquivoVDOC">
<ClassMethod>1</ClassMethod>
<FormalSpec>pArquivo</FormalSpec>
<Implementation><![CDATA[
	Set arquivo = $Replace(pArquivo,"/","\")
	Set arquivo = $Piece(arquivo,"\",$length(arquivo,"\")-1,$length(arquivo,"\"))
	;
	Set modulo 	= 14
	Set empresa = 0
		
	Set dname = $$GetDiretorioFisico^VARBRDiretorios(empresa,modulo)
	If ($extract(dname, $length(dname)) '= "\") {
		Set dname = dname _ "\"
	}
	if (##class(%File).Exists(dname_arquivo)){
		do ##class(%File).Delete(dname_arquivo)
	}
	quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>