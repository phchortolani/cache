<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Class name="COM.COMViewToExcel">
<ClassType/>
<IncludeCode>COMSYS,COMConst,WWWConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	;-------------------------------------------------------------------------------
    ; When the Export To Excel button is clicked on the COMView, this CSP Page is shown
    ; which opens the Excel Spreadsheet.
    ; 
    ; Called by : ExportToExcel & WindowPrint in COMViewPrint
    ; 
    ; Returns: $$$OK
    ;
    ; History:
    ; 22-Mar-2013	shobby	IPIRANGA-103: Extra excel configuration to allow data grouping.
    ; 03-Mar-2010	shobby	SR17180: If exporting to a csv file put a blank line at the start.
    ; 							Displaying a CSV file in Excel, which will happen if Excel is
    ; 							the default application for a CSV file will fail to recognise
    ; 							the file as a valid SYLK file, which it isn't but Excel may think
    ; 							it is if the first two characters are ID.  Which in a lot of
    ; 							Alphalinc queries it is (was).
    ; 24-Feb-2010	PPP		SR17180: Remove the German Character in $translate
    ; 22-Feb-2010	GRF		SR17190: multiple filenames for FININTRep csv files
    ; 07-Apr-2008	GRF		SRBR014446: removed new command; checked COMViewFilterColumn
    ; 25-Feb-2008	shobby	SRBR014446: Rewrote so that it could be reused to show
    ; 							the contents of a grid. (see Output^COMViewFilterColumn)
    ; 22-Nov-2007	Karine	BR014788: Show the filter and its fields
    ; 08-Aug-2006	RPW		SR14896: Use OnBeforeDisplayGrid to handle cleaner data retrieval
    ; 27-Jul-2006	RPW/KB	Fixed path translation error.
    ; 24-Jul-2006	RPW		Created SR14254
    ;-------------------------------------------------------------------------------
	set YM                = $get(%request.Data("YM",1),0)
	set YBED              = $get(%request.Data("YBED",1),"UNKNOWN")
	set YUSER             = $get(%request.Data("YUSER",1),0)
	set enumType          = $get(%request.Data("DisplayType",1),0)
	set strOutputFunction = $get(%request.Data("Output",1),"")
	
	
	; e.g. strOutputFunction = "Output^COMViewFilterColumn(enumType,.objOutput)"
	; Caché Ö çáàãéè
	
	do ^WWWVAR
	if strOutputFunction'="" {
		set strOutputFunction = "do "_strOutputFunction ;BR014446
		if enumType=$$$EnumDisplayTypeCSV {
			set objOutput=##class(%Library.FileCharacterStream).%New()

			//SR17080
			//set strPhysical = $translate($$$WWW012PhysicalWWWDirectory($get(^WWW012(0,YM,1))),"\Ö/","\\\")
			set strPhysical = $translate($$$WWW012PhysicalWWWDirectory($get(^WWW012(0,YM,1))),"\/","\\")

			set strPhysical = ##class(%Library.File).NormalizeDirectory(strPhysical)
			if YFORM'="FININTRep" {    ; SR17190
				set strFile = YFORM_".csv"
			} else {
				set strDate = $get(^CacheTempFININTRep(YUSER))
				set strFile = "FIR"_strDate_".csv"
			}
			set objOutput.Filename = strPhysical_strFile
			
			//SR17080
			//set strLink = $translate($$$WWW012VirtualWWWDirectory($get(^WWW012(0,YM,1))),"\Ö/","///")_strFile
			set strLink = $translate($$$WWW012VirtualWWWDirectory($get(^WWW012(0,YM,1))),"\/","//")_strFile
			;do objOutput.Write($char(13))		;SR17180
			xecute strOutputFunction ;BR014446
			do objOutput.SaveStream()
			write "<html>"
			write "<script> var link=opener.document.createElement('a');filePath='"_strLink_"';link.href = filePath;    link.download = filePath.substr(filePath.lastIndexOf('/') + 1);link.click();window.close();</script>"
			write "</html>"
					
		} elseif enumType=$$$EnumDisplayTypeExcel {
			set objOutput=##class(%Library.GlobalCharacterStream).%New()
			; IPIRANGA-103 vvvvv
			;do objOutput.WriteLine("<html>")
			do objOutput.WriteLine("<html xmlns:o=""urn:schemas-microsoft-com:office:office""")
			do objOutput.WriteLine("xmlns:x=""urn:schemas-microsoft-com:office:excel""")
			do objOutput.WriteLine("xmlns=""http://www.w3.org/TR/REC-html40"">")
			
			do objOutput.WriteLine("<head>")
			do objOutput.WriteLine("<!--[if gte mso 9]><xml>")
			do objOutput.WriteLine("<x:ExcelWorkbook>")
			do objOutput.WriteLine("<x:ExcelWorksheets>")
			do objOutput.WriteLine("<x:ExcelWorksheet>")
			do objOutput.WriteLine("<x:WorksheetOptions>")
			do objOutput.WriteLine("<x:NoSummaryRowsBelowDetail/>")
			do objOutput.WriteLine("<x:Selected/>")
			do objOutput.WriteLine("<x:DoNotDisplayGridlines/>")
			do objOutput.WriteLine("<x:ProtectContents>False</x:ProtectContents>")
			do objOutput.WriteLine("<x:ProtectObjects>False</x:ProtectObjects>")
			do objOutput.WriteLine("<x:ProtectScenarios>False</x:ProtectScenarios>")
			do objOutput.WriteLine("</x:WorksheetOptions>")
			do objOutput.WriteLine("</x:ExcelWorksheet>")
			do objOutput.WriteLine("</x:ExcelWorksheets>")
			do objOutput.WriteLine("<x:ProtectStructure>False</x:ProtectStructure>")
			do objOutput.WriteLine("<x:ProtectWindows>False</x:ProtectWindows>")
			do objOutput.WriteLine("</x:ExcelWorkbook>")
			do objOutput.WriteLine("</xml><![endif]-->")
			do objOutput.WriteLine("</head>")
			
			do objOutput.WriteLine("<body>")
			do objOutput.WriteLine("<style>")
			do objOutput.WriteLine("td.header {background-color:"_YDARKGRAY_";font-weight:bold;}")
			do objOutput.WriteLine("td.row {background-color:"_YGRAY_";}")
			do objOutput.WriteLine("</style>")
			
			do objOutput.WriteLine("<pre>")
			do objOutput.WriteLine("<table border=1 cellpadding=0 cellspacing=0'>")
			
			xecute strOutputFunction ;BR014446
			
			do objOutput.WriteLine("</table>")
			do objOutput.WriteLine("</body>")
			do objOutput.WriteLine("</pre>")
			do objOutput.WriteLine("</html>")
			; IPIRANGA-103 ^^^^^
			
			do objOutput.OutputToDevice()
		}
	}
	
	quit $$$OK]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<Description><![CDATA[Event handler for <B>PreHTTP</B> event: this is invoked before
the HTTP headers for a CSP page have been sent.  All changes to the
<class>%CSP.Response</class> class, such as adding cookies, HTTP headers,
setting the content type etc. must be made from within the OnPreHTTP() method.
Also changes to the state of the CSP application such as changing
%session.EndSession or %session.AppTimeout must be made within the OnPreHTTP() method.
It is prefered that changes to %session.Preserve are also made in the OnPreHTTP() method
as this is more efficient, although it is supported in any section of the page.
Return <B>0</B> to prevent <method>OnPage</method> from being called.]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[	;-------------------------------------------------------------------------------
    ; If we are sending Excel information around, we must use HTTP/1.0 specification
    ; and set the correct Content Type which is application/vnd.ms-excel
    ;
    ; Returns:
    ; $$$YES -  This says this routine worked okay.
    ;
    ; History:
    ; 05-Nov-2009	shobby	SR17009: Added additional information to prevent
    ; 					Excel download problem from JSP on https protocol
    ; 12-Jul-2006	RPW		Created SR14254
    ;-------------------------------------------------------------------------------	
	set enumType=$get(%request.Data("DisplayType",1),0)
	set YFORM = $get(%request.Data("YFORM",1),"COM.COMViewToExcel")
	if enumType=$$$EnumDisplayTypeExcel {
		set %response.ContentType="application/vnd.ms-excel"
		set %response.HTTPVersion="HTTP/1.0" 
		set %response.Headers("EXPIRES")="Thu, 29 Oct 1998 17:04:19 GMT"
   	set %response.Headers("PRAGMA")="public"
   	set %response.Headers("CACHE-CONTROL")="max-age=0"
		do %response.SetHeader("Content-Disposition","inline;filename="_YFORM_".xls")
	}
	quit $$$YES]]></Implementation>
</Method>
</Class>
</Export>