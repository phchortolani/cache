<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsBPLInfoPane">
<Description><![CDATA[
An AutoPage pane that displays info for a BPL Diagram]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.Pane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Method name="DrawHEAD">
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// get page ID values
	Merge tID = pInstance.IDValues
	
	// override table style
	&html<
<style>

BODY {
	background: #EEFFFF;
}

TABLE.LayoutMain {
	background: #EEFFFF;
}

TABLE.LayoutMain TD.LayoutContentCol {
	background: #EEFFFF;
	padding-left: 20px;
	vertical-align: top;
	
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, StartColorStr='#DDEEFF', EndColorStr='#4040FF');
}

table.Props {	border: 1px black solid; background: white; 
				filter: 
					progid:DXImageTransform.Microsoft.dropShadow(color=#404040, OffX=2, OffY=2, Positive=2);
			}

table.Props td {	border-bottom: 1px blue solid;
					border-right: 1px blue solid;
					padding: 0px;
				  }

td.PropLabel { font-weight: bold; }

table.Context {	border: none; }

table.Context td {	border-bottom: 1px gray solid;
					border-right: 1px gray solid;
					padding: 0px;
				  }

</style>>

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawBODY">
<Description><![CDATA[
Draw the BODY of the detail pane]]></Description>
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// get page ID values
	Merge tID = pInstance.IDValues
	
	Set props = $G(tID(1))
	
	&html<<br>>
	&html<<table border="0">>
	
	Set lastlabel = ""
	Set tb = 0
	
	// skip first field (type)
	Set lHeader1 = $$FormatMessage^%occMessages(%response.Language,"Ensemble","BPLInfoHeader","Details for selected item")
	Set lHeader2 = $$FormatMessage^%occMessages(%response.Language,"Ensemble","ReadOnly","Read Only")

	&html<<tr><th colspan="3" align="left">#(lHeader1)#  (<i>#(lHeader2)#</i>):<hr></th></tr>
		<tr><td valign="top" align="left" width="45%"><table class="Props" border="0" cellspacing="0">>

	For p = 1:1:$L(props,$C(1))-1 {
		Set prop = $P(props,$C(1),p)
		Set label = $P(prop,$C(3),1)
		Set type = $P(prop,$C(3),2)
		Set value = $P(prop,$C(3),3,$L(prop,$C(3)))
		
		// split into 2 cols
		If (p = 8) {
			&html<</table></td><td width="5">&nbsp;</td>>
			&html<<td valign="top" align="left" width="45%"><table class="Props" border="0" cellspacing="0">>
		}
		
		// escape value
		//Set value = $ZCVT(value,"O","HTML")
		
		If (p = 1) {
			// special case for first property
			Set label = "Type"
			Set value = "<" _ value _ ">"
		}
		
		&html<<tr><td class="PropLabel">&nbsp;#(label)#&nbsp;</td><td valign="top">>
		
		If (type = "MESSAGE"){
			Do ..ShowMessage(label,value)
		}
		ElseIf (type = "CONTEXT"){
			// show context list
			&html<<table class="Context" border="0" cellspacing="0">>
			For j = 1:1:$L(value,$C(2))-1 {
				Set t = $P(value,$C(2),j)
				Set cname = $P(t,$C(3),1)
				Set ctype = $P(t,$C(3),2)
				Set:$P(t,$C(3),3)'="" ctype = ctype _ " [" _ $P(t,$C(3),3) _ "]"
				Set:$P(t,$C(3),4)'="" ctype = ctype _ " =" _ $P(t,$C(3),4)
				&html<<tr><td>&nbsp;<i>#(cname)#</i>&nbsp;</td><td>&nbsp;#(ctype)#&nbsp;</td></tr>>
			}
			&html<</table>>
		}
		ElseIf (type [ "CODE_"){
			&html<<pre>#(value)#</pre>>
		}
		Else {
			If ($L(value)>50) {
				Set value = $E(value,1,50) _ "..."
			}
			
			Write "&nbsp;",$ZCVT(value,"O","HTML"),"&nbsp;"
		}

		&html<</td></tr>>
		
		Set lastlabel = label
	}
	&html<</table></td></tr>>
	&html<</table>>

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="ShowMessage">
<Description><![CDATA[
Display cells for a call message block]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>label:%String,value:%String</FormalSpec>
<Implementation><![CDATA[
	&html<<table width="100%" border="0" cellspacing="0" class="Context">>
	
	For e = 1:1:$L(value,$C(2))-1 {
		Set el = $P(value,$C(2),e)
		Set atype = $P(el,$C(3),1)
		If (atype = "assign") {
			&html<<tr><td>&nbsp;Assign&nbsp;</td>
				<td>&nbsp;#($P(el,$C(3),2))# = #($P(el,$C(3),5))#&nbsp;</td>
			</tr>>
		}
		Else {
			// request or response
			Set rtype = $P(el,$C(3),2)
			&html<<tr><td>&nbsp;Type&nbsp;</td>
			<td>&nbsp;<i>#(rtype)#</i>&nbsp;</td></tr>>
		}
	}

	&html<</table>>
]]></Implementation>
</Method>
</Class>
</Export>