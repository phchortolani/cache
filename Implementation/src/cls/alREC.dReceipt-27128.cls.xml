<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="alREC.dReceipt">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,alSYS.State.iStateMachine</Super>

<Property name="State">
<Type>alSYS.State.dState</Type>
<InitialExpression>##class(alSYS.State.dState).%OpenId("alREC.dReceipt||1")</InitialExpression>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00261"/>
</Property>


<Property name="Location">
<Type>alLOC.dLocation</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00258"/>
</Property>


<Property name="ReceiptNumber">
<Type>alSYS.dt.dtString</Type>
<Required>1</Required>

<Parameter name="CAPTION" value="AL00260"/>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Property name="ReceiptLines">
<Type>alREC.dReceiptLine</Type>
<Cardinality>children</Cardinality>
<Inverse>Receipt</Inverse>
<Relationship>1</Relationship>

<Parameter name="CAPTION" value="AL00259"/>
</Property>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>

<Index name="IDXReceiptNumber">
<IdKey>1</IdKey>
<Properties>ReceiptNumber</Properties>
<Unique>1</Unique>
</Index>

<UDLText name="T">
<Content>
//++++++++++++++++++++++++++++++++++++++++++

</Content>
</UDLText>


<Method name="Receive">
<Description><![CDATA[
Marks this Receipt as received if the record is sucessfully added to DRP]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	/*------------------------------------------------------------------------------
	; History: 
	; 06-Apr-2009	GRF		Method name corrected - not currently used
	; 24-Apr-2008	Luke	SR15625: Removed Call to experimental code and added a return val 
	; 18-Mar-2008	HQN		SR15640: Created
	;-----------------------------------------------------------------------------*/

	// Copied from dUReceipt::Post(), why isn't this more easily accessible?
	// Shouldn't it be a triggered operation instead of inline?
	// FIXME 
	// <Luke> Should this be part of the Movement processing, complete the history then 
	// post to the alGL.dLedgerInterface, Speaking of which What is alFLI??? 
	//set sc=##class(alFLI.iFLI).NewInterface(.objFLI)  ; Ledger Interface
	quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnNew">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%New</METHOD> method to 
provide notification that a new instance of an object is being created.

<P>If this method returns an error then the object will not be created.]]></Description>
<FormalSpec>initvalue:%CacheString</FormalSpec>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	/*------------------------------------------------------------------------------
	; History: 
	; 18-Mar-2008	HQN	SR15640: Created
	;-----------------------------------------------------------------------------*/
	; initialising State to OpenState, InitialExpression is borked
	set %this.State = ##class(alSYS.State.dState).%OpenId("alREC.dReceipt||1")
	if %this.State = $$$NULLOREF {
		set %this.State             = ##class(alREC.dReceipt.OpenState).%New()
		set %this.State.SMClassName = %this.%ClassName(1)
		do %this.State.%Save()
	}
	set %this.State.StateMachine = %this
	quit $$$OK
]]></Implementation>
</Method>

<Method name="StatesGet">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	/*------------------------------------------------------------------------------
	; History: 
	; 18-Mar-2008	HQN	SR15640: Created
	;-----------------------------------------------------------------------------*/
	set objStates    = ##class(%Library.ArrayOfObjects).%New()
	set objOpenState = ##class(alSYS.State.dState).%OpenId(%this.%ClassName(1)_"||1")
	if objOpenState = $$$NULLOREF {
		set objOpenState             = ##class(alREC.dReceipt.OpenState).%New()
		set objOpenState.SMClassName = %this.%ClassName(1)
		do objOpenState.%Save()
	}
	set objOpenState.StateMachine = %this
	do objStates.SetAt(objOpenState, objOpenState.StateId)
	set objReceivedState = ##class(alSYS.State.dState).%OpenId(%this.%ClassName(1)_"||2")
	if objReceivedState = $$$NULLOREF {
		set objReceivedState             = ##class(alREC.dReceipt.ReceivedState).%New()
		set objReceivedState.SMClassName = %this.%ClassName(1)
		do objReceivedState.%Save()
	}
	set objReceivedState.StateMachine = %this
	do objStates.SetAt(objReceivedState, objReceivedState.StateId)
	quit objStates
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^alREC.dReceiptD</DataLocation>
<DefaultData>dReceiptDefaultData</DefaultData>
<IdLocation>^alREC.dReceiptD</IdLocation>
<IndexLocation>^alREC.dReceiptI</IndexLocation>
<StreamLocation>^alREC.dReceiptS</StreamLocation>
<Data name="dReceiptDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>State</Value>
</Value>
<Value name="3">
<Value>Storage</Value>
</Value>
<Value name="4">
<Value>Location</Value>
</Value>
<Value name="5">
<Value>ReceiptType</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>