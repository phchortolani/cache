<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="CSPX.EnsMsgTracePane">
<Description><![CDATA[
An AutoPage pane that displays an SVG message trace.]]></Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Util.Pane</Super>
<System>3</System>

<Parameter name="DOMAIN">
<Description><![CDATA[
Use our own domain for localization]]></Description>
<Default>Ensemble</Default>
</Parameter>


<Method name="DrawHEAD">
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// override table style
	&html<
<style>
TABLE.LayoutMain TD.LayoutContentCol {
	background: #EEFFFF;
	padding-left: 0px;
	vertical-align: top;
}
</style>>

	&html<
	
<!-- detect svg -->
<script language="JavaScript" src="svgcheck.js"></script>
<script language="VBScript" src="svgcheck.vbs"></script>
	
<script language="javascript">

// display popup-legend window
function showLegend()
{
	var wid = 300;
	var hgt = 400;
	var top = 100;
	var left = 100;

  	var url = "enstracelegend.html";
	self.autopagePopupWindow = window.open(url,'autopagePopup','left='+left+',top='+top+',width='+wid+',height='+hgt+',resizable');
	self.autopagePopupWindow.focus();
}

</script>
	>
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DrawBODY">
<Description><![CDATA[
Draw the BODY of the detail pane]]></Description>
<FormalSpec>pInstance:%CSP.Util.PageInstance</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If (%request.UserAgent '[ "MSIE") {
		Write "<div style=""padding-left:20px;"">",$$$TextHTML("At this time, this page is only visible with Internet Explorer."),"</div>"
		Quit $$$OK
	}

	// HCR076 - Check for errors coming from the search form
	If $G(%request.Data("$AUTOFORMERROR",1))'="" {
		&html<<br><br><div style="color:red; font-size:1.2em; padding-left:20px;"><b>>
		Write $$$TextHTML("ERROR:")," ",%request.Data("$AUTOFORMERROR",1)
		&html<</b></div>>
		Kill %request.Data("$AUTOFORMERROR")
		Quit $$$OK
	}
	If $G(%request.Data("$SUBMITBTN",1))="$AUTOFORM_SEARCH" {
		If ($G(%request.Data("$ERROR_StartTime",1))'="") || ($G(%request.Data("$ERROR_EndTime",1))'="") {
			Set msg1 = $$$TextHTML("Please enter a date using format YYYY-MM-DD where YYYY is optional")
			Set msg2 = $$$TextHTML("and/or a time using format HH:MM:SS where SS is optional")
			Set valStart = $G(%request.Data("$ERROR_StartTime",1))
			Set valEnd = $G(%request.Data("$ERROR_EndTime",1))
			&html<<br><br><div style="color:red; font-size:1.2em; padding-left:20px;"><b>>
			If valStart'="" {
				Set msg3 = $$$TextHTML("Start Time is invalid")
				Set:valStart?1"'"1.e1"'" valStart = $E(valStart,2,$L(valStart)-1)
				&html<<br><br>#(msg3)#: '#(valStart)#'>
			}
			If valEnd'="" {
				Set msg4 = $$$TextHTML("End Time is invalid")
				Set:valEnd?1"'"1.e1"'" valEnd = $E(valEnd,2,$L(valEnd)-1)
				&html<<br><br>#(msg4)#: '#(valEnd)#'>
			}
			&html<</b></div><div style="padding-left:20px"><br>#(msg1)#<br>#(msg2)#</div>>
			Kill %request.Data("$ERROR_StartTime")
			Kill %request.Data("$ERROR_EndTime")
			Quit $$$OK
		}
		If $D(%request.Data("$ERROR_SessionId",1)) {
			&html<<br><br><div style="color:red; font-size:1.2em; padding-left:20px;"><b>>
			Write $$$TextHTML("Invalid SessionId"),": '",%request.Data("$ERROR_SessionId",1),"'",!
			&html<</b></div>>
			Kill %request.Data("$ERROR_SessionId")
			Quit $$$OK
		}
	}

	// get page ID values
	Merge tID = pInstance.IDValues

	// If this is a search submit,get request parms via object
	If ($G(%request.Data("$SUBMITBTN",1)) = "$AUTOFORM_SEARCH" ) {
		Set tRequest = ##class(CSPX.EnsMsgTraceFilterForm).ProcessSubmit(%request, .tID)
		Set sessionId = tRequest.SessionId
		Set startTime = tRequest.StartTime
		Set endTime = tRequest.EndTime
		Set startId = tRequest.StartId
		Set endId = tRequest.EndId
		Set query = "&$SUBMITBTN=$AUTOFORM_SEARCH&SessionId=" _ sessionId _ 
						"&StartTime=" _ startTime _
						"&EndTime=" _ endTime _
						"&StartId=" _ startId _
						"&EndId=" _ endId
	}
	Else {
		Set tMsgId=$G(tID(1)), sessionId=""
		If ""'=tMsgId {
			&sql(SELECT SessionId INTO :tSessionId FROM Ens.MessageHeader WHERE %ID = :tMsgId)
			Set:'SQLCODE sessionId=tSessionId
		}
		Set startTime = ""
		Set endTime = ""
		Set startId = ""
		Set endId = ""
		Set query = ""
	}
	Set showId=$G(tID(1))

	// if not a goto button, reset page
	If ('$D(%request.Data("$GOTO",1))) {
		Kill tID(2)
	}
	// find dimensions of canvas
	//Do ##class(EnsMsgTraceSVG).FindElementCount(sessionId, startTime, endTime, startId, endId, .rowCount, .colCount)

	Set rowCount = ##class(CSPX.EnsMsgTraceSVG).BuildTraceInfo(sessionId,startTime,endTime,startId,endId,.showId)
	
	&html<	
		<!-- detect svg -->
		<script language="JavaScript">
		checkAndGetSVGViewer();

function gotoMsgPage(n)
{
	self.top.location = '#(##class(%CSP.Page).Link("UtilEnsMsgTrace.csp",,1))#' + '$ID1=#($G(tID(1)))#&$ID2=' + n + '&$GOTO=1' + '#($ZCVT(query,"O","JS"))#';
}

function showDetails(msgId,type)
{
	// update the info pane
	if (msgId && msgId != '') {
		self.top.frames['Info'].document.location = '#(##class(%CSP.Page).Link("UtilEnsMsgDetails.csp",,1))#' + '$FRAME=Info&$ID1=' + escape(msgId) + (('event'==type) ? '&EVENT=1' : '');
	}
	else {
		// show search page
		self.top.frames['Info'].document.location = '#(##class(%CSP.Page).Link("UtilEnsMsgTrace.csp",,1))#' + '$FRAME=Info&$ID1=#($G(tID(1)))#' + '#($ZCVT(query,"O","JS"))#';
	}
}

function showContents(msgId)
{
	// update the info pane
	if (msgId && msgId != '') {
		self.top.frames['Info'].document.location = '#(##class(%CSP.Page).Link("CSPX.EnsMsgContentsPane.cls",,1))#' + '$FRAME=Info&$ID1=' + escape(msgId);
	}
}

		</script>
	>

	If (rowCount = 0) {
		// No data to show
		Set svgWidth = 400
		Set svgHeight = 100
		
		&html<<div class="Text1">#(..LocalizeText("@Ensemble:NoMatch@No messages match the search criteria."))#</div>>
	}
	Else {
		// !!!
		If (rowCount > ##class(CSPX.EnsMsgTraceSVG).MessagesPerPage()) {
			Set rowCount = ##class(CSPX.EnsMsgTraceSVG).MessagesPerPage()
		}
		
		Set colCount = $G(^CacheTempMsgTrace(%session.SessionId,0,"columns"))
		
		Set hostWidth = 170 // must match value in MsgTraceSVG
		Set svgWidth = (colCount * hostWidth)
		Set svgHeight = ((rowCount * 40) + 70 + 50)

		Set zoom = 100
		Set embWidth = svgWidth * (zoom / 100)
		Set embHeight = svgHeight * (zoom / 100)
		
		Set currPage = $G(tID(2),1)
	
		// loading message
		&html<<div id='loading' style='background: white; color: blue; font-size: 14pt; font-family: courier new'>Generating Message Trace...</div>>

		&html<<embed id="SVGEmbed" name="SVGEmbed" type="image/svg-xml" 
			src="#(##class(%CSP.Page).Link("CSPX.EnsMsgTraceSVG.cls?SESSIONID="_sessionId_"&STARTID="_startId))#&ENDID=#(endId)#&STARTTIME=#(startTime)#&ENDTIME=#(endTime)#&PAGE=#(currPage)#&WIDTH=#(svgWidth)#&HEIGHT=#(svgHeight)#&SHOW=#(showId)#" 
			height="#(embHeight)#" width="#(embWidth)#">>
		
		Write "<br>&nbsp;<span style='font-size:0.8em;'>",$$$TextHTML("Click on canvas to change search criteria"),"</span>"

	}
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>