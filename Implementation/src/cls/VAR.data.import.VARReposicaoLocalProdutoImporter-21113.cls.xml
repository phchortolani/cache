<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Class name="VAR.data.import.VARReposicaoLocalProdutoImporter">
<ClassType/>
<IncludeCode>VARConst</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<Super>VAR.data.import.AbstractImporter</Super>

<Parameter name="DEBUG">
<Description><![CDATA[

Comands:
> do ##class(VAR.data.import.VARReposicaoLocalProdutoImporter).importFile()

Fields:
    Location;ItemNo;EM;ES;PR;CMMLi;CMML
]]></Description>
<Type>%Integer</Type>
<Default>0</Default>
</Parameter>


<Method name="importFile">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	quit ..import(##class(DirectoryFile).GetNamespaceSubdir("files")_
		"VARReposicaoLocalProduto_SESDF.csv")
]]></Implementation>
</Method>

<Method name="%OnNew">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ..ignoreHeaderLine = 1
	if (..#DEBUG) set ..printProgress = 0

	// Remoção dos registros antigos antes da importação.
	new total, codProduto, codLocal, codRepLocalProduto, continuar, sc

	set total = 0
	set codLocal = $order(^VARReposicaoLocalProduto(YM, ""))
	
	while ($length(codLocal) > 0) {
		set codProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, ""))
		
		while ($length(codProduto) > 0) {
			set codRepLocalProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, codProduto, ""))
		
			while ($length(codRepLocalProduto) > 0) {
				set total = $increment(total)
				set codRepLocalProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, codProduto, codRepLocalProduto))
			}
		
			set codProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, codProduto))
		}
		
		set codLocal = $order(^VARReposicaoLocalProduto(YM, codLocal))
	}

	if (total > 0){
		write !, "Existem "_total_" registros na global ^VARReposicaoLocalProduto. Os mesmos serão removidos antes da importação. "
		read "Deseja continuar? (S/N) ", continuar#1

		if ((continuar '= "S") && (continuar '= "s")) quit $$$CUSTOMERROR("Operação abortada.")

		set total = 0
		set codLocal = $order(^VARReposicaoLocalProduto(YM, ""))
	
		while ($length(codLocal) > 0) {
			set codProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, ""))
		
			while ($length(codProduto) > 0) {
				set codRepLocalProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, codProduto, ""))
		
				while ($length(codRepLocalProduto) > 0) {		
					if ($data(^VARReposicaoLocalProduto(YM, codLocal, codProduto, codRepLocalProduto, 1))) {
						set sc = $$$Kill("VARReposicaoLocalProduto", codLocal_$$$COMMA_codProduto_$$$COMMA_codRepLocalProduto)
						if ($$$ISOK(sc)) {
							set total = $increment(total)
						}
						else {
							$$$VARLOGERROR(sc)
						}
					}
						set codRepLocalProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, codProduto, codRepLocalProduto))
					}
		
					set codProduto = $order(^VARReposicaoLocalProduto(YM, codLocal, codProduto))
			}
		
			set codLocal = $order(^VARReposicaoLocalProduto(YM, codLocal))
		}
	
	
		write !, "Foram removidos "_total_" registros da global ^VARReposicaoLocalProduto."
	}
	
	merge ^WWW001Hook.bkp(0, "VARReposicaoLocalProduto", 1, 1) = ^WWW001Hook(0, "VARReposicaoLocalProduto", 1, 1)
	kill ^WWW001Hook(0, "VARReposicaoLocalProduto", 1, 1)
	
	quit ##super()
]]></Implementation>
</Method>

<Method name="process">
<FormalSpec>pintRecords:%Integer,pstrLine:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set $ztrap = "exceptionProc"
	set strStatus = $$$OK

	set local			= ..getField(pstrLine, 1)
	set item			= ..getField(pstrLine, 2)
	set EM 				= ..getField(pstrLine, 3)
	set ES 				= ..getField(pstrLine, 4)
	set PR 				= ..getField(pstrLine, 5)
	set CMMLi 			= ..getField(pstrLine, 6)
	set CMML			= ..getField(pstrLine, 7)

	set key = local_$$$COMMA_item_$$$COMMA_1
	set obj = ""
	set $$$VARReposicaoLocalProdutoEstoqueMaximo(obj) 			= +EM
	set $$$VARReposicaoLocalProdutoEstoquedeSeguranca(obj) 		= +ES
	set $$$VARReposicaoLocalProdutoPontodeRessuprimento(obj) 	= +PR
	set $$$VARReposicaoLocalProdutoDMMI(obj) 					= CMML
	set $$$VARReposicaoLocalProdutoCMMLi(obj) 					= CMMLi
	set $$$VARReposicaoLocalProdutoAtivo(obj) 					= $$$YES
	set $$$VARReposicaoLocalProdutoVariaveisdeEstoque(obj)		= $$$YES

	if (..#DEBUG) {
		do ..print(..lineBreak_"key="_key_", obj="_obj)
	}
	else {
		set strStatus = $$Save^COMUtils("VARReposicaoLocalProduto",key,obj,$$$YES)
	}

finallyProc
	quit strStatus

exceptionProc
 	set $ztrap = ""
	set strStatus = $$$CUSTOMERROR($zerror)

	goto finallyProc
]]></Implementation>
</Method>

<Method name="finalize">
<Implementation><![CDATA[	merge ^WWW001Hook(0, "VARReposicaoLocalProduto", 1, 1) = ^WWW001Hook.bkp(0, "VARReposicaoLocalProduto", 1, 1)
]]></Implementation>
</Method>
</Class>
</Export>