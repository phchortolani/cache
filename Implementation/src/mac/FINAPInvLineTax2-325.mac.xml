<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvLineTax2" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvLineTax2
	
#include COMSYS
#include FINConst
	
#define VisibleColumn(%blnIncTax,%blnTotals) $select(%blnIncTax&&%blnTotals:$$$FldFINAPInvLineInvoiceTotalIncludingTax,%blnIncTax&&'%blnTotals:$$$FldFINAPInvLineInvoiceEachIncTax,'%blnIncTax&&%blnTotals:$$$FldFINAPInvLineInvoiceTotal,'%blnIncTax&&'%blnTotals:$$$FldFINAPInvLineInvoiceEach)
	
CalculateTotalTax(&pobjInvoice)
    ;-------------------------------------------------------------------------------
    ; FIXME : pobjInvoice is *BOTH* simple variable *AND* array
    ;
    ; Sum up the Tax over all the lines
    ;
    ; Params: pobjInvoice (all the lines of the Invoice Match record) - passed by reference
    ;
    ; Returns: Total Tax
    ;
    ; NOTE: Assuming Total Tax can be determined from total values as opposed to U/P x Qty.
    ;
    ; History:
	; 07-Sep-2005	RPW		SR13446: Return the Total Tax in the same rate as the Invoice Matching record
	; 25-Aug-2005	PO		SR12965: Created
    ;-------------------------------------------------------------------------------
	new idFINAPInv,idFINAPInvLine,curTax,curTaxTotal,curInvoiceTotalIncTax,curInvoiceTotal
 
	set idFINAPInv = $order(pobjInvoice(""))
 
	set curTaxTotal = 0
	if idFINAPInv '= "" {
		set idFINAPInvLine = ""
		for {
			set idFINAPInvLine = $order(pobjInvoice(idFINAPInv,idFINAPInvLine))
			quit:idFINAPInvLine=""
	 
			set curInvoiceTotalIncTax = $$$FINAPInvLineInvoiceTotalIncludingTax($get(pobjInvoice(idFINAPInv,idFINAPInvLine)))
			set curInvoiceTotal       = $$$FINAPInvLineInvoiceTotal($get(pobjInvoice(idFINAPInv,idFINAPInvLine)))
			set curTax                = $$$FCSub(curInvoiceTotalIncTax,curInvoiceTotal)
			set curTaxTotal           = $$$FCAdd(curTaxTotal,curTax)
		}
	}
	quit $$$FCUpdate(curTaxTotal,$$$FINAPInvExchangeRate(pobjInvoice),1)
	
	
CalculateLineIncTax(pobjFINAPInv="",pobjFINAPInvLine="",pidClassField="")
    ;-------------------------------------------------------------------------------
    ; For a change to (Invoice Each Inc/Ex Tax, Invoice Total Inc/Ex Tax or Quantity)
    ; adjust other amounts to have correct values.
    ;
    ; Params: pbojFINAPInv (FINAPInv record),
    ;         pobjFINAPInvLine (FINAPInvLine record) - passed by reference and
    ;         pidClassField (class field that was changed)
    ;
    ; Returns: Total Tax for Invoice Line
    ;
    ; NOTE: Assuming Total Tax can be determined from total values as opposed to U/P x Qty.
    ;
    ; History:
    ; 24-Oct-2005	PO		SR13541: Calculate total inc tax to same amount whether
    ; 							show lines as totals checked or not
    ; 21-Jul-2005	PO		SR12965: Created
    ;-------------------------------------------------------------------------------
	new itemTaxCode,curTax,curTmp,location,transDate,taxRate,taxCode,blnShowLinesasTotals,fltInvoiceQuantity
	new taxPercent,blnIncTax,fltExchangeRate,curInvoiceEach,curInvoiceTotal,curInvoiceEachIncTax
	new curInvoiceTotalIncTax
 
	quit:pobjFINAPInvLine=""
	quit:pobjFINAPInv=""
	quit:pidClassField=""
 
	set blnShowLinesasTotals = +$$$FINAPInvShowLinesasTotals(pobjFINAPInv)
	set blnIncTax            = +$$$FINAPInvLinesIncludeTax(pobjFINAPInv)
	set location             =  $$$FINAPInvTaxLocation(pobjFINAPInv)
	set fltInvoiceQuantity   =  $$$FINAPInvLineInvoiceQuantity(pobjFINAPInvLine)
	set fltExchangeRate      =  $$$FINAPInvExchangeRate(pobjFINAPInv)
 
	set itemTaxCode = $$$FINAPInvLineTaxCode(pobjFINAPInvLine)
	set taxPercent  = 0
	set curTax      = 0
 
	if fltInvoiceQuantity {
		set taxCode = $$IsTaxable^COMTAX(itemTaxCode,+$$$FINAPInvTaxInvoice(pobjFINAPInv),,location)
 
		if '((taxCode = 0) || (location = "")) {
			set transDate = $$$FINAPInvEnteredDate(pobjFINAPInv)
 
			set taxPercent = ($$CombinedTaxRate^COMTAX(taxCode,location,transDate,1)/100)+1
		}
 
		if taxPercent = 0 set taxPercent = 1
 
		if blnIncTax {
			if blnShowLinesasTotals {
				set curInvoiceTotalIncTax = $$$FINAPInvLineInvoiceTotalIncludingTax(pobjFINAPInvLine)
 
				set curInvoiceTotal       = $$$FCDivd2(curInvoiceTotalIncTax,taxPercent)
				set curInvoiceTotal       = $$$FCRound(curInvoiceTotal,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
				set curInvoiceEach        = $$$FCDivd2(curInvoiceTotal,fltInvoiceQuantity)
				set curInvoiceEachIncTax  = $$$FCDivd2(curInvoiceTotalIncTax,fltInvoiceQuantity)
			} else {
				set curInvoiceEachIncTax  = $$$FINAPInvLineInvoiceEachIncTax(pobjFINAPInvLine)
 
				set curInvoiceEach        = $$$FCDivd2(curInvoiceEachIncTax,taxPercent)
				set curInvoiceTotal       = $$$FCMult2(curInvoiceEach,fltInvoiceQuantity)
				set curInvoiceTotal       = $$$FCRound(curInvoiceTotal,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
				;set curInvoiceTotalIncTax = $$$FCMult2(curInvoiceEachIncTax,fltInvoiceQuantity)
				set curInvoiceTotalIncTax = $$$FCMult2(curInvoiceTotal,taxPercent)
				set curInvoiceTotalIncTax = $$$FCRound(curInvoiceTotalIncTax,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
			}
		} else { // Required changes will mean on addition of line, other grid lines will need updating.
				 // NEED TO CALCULATE TAX AMOUNT FOR LINE BASED UPON THE TOTAL AMOUNT AND APPORTION APPROPRIATE AMOUNT TO LINE
			if blnShowLinesasTotals {
				set curInvoiceTotal       = $$$FINAPInvLineInvoiceTotal(pobjFINAPInvLine)
 
				set curInvoiceTotalIncTax = $$$FCMult2(curInvoiceTotal,taxPercent)
				set curInvoiceTotalIncTax = $$$FCRound(curInvoiceTotalIncTax,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
				set curInvoiceEach        = $$$FCDivd2(curInvoiceTotal,fltInvoiceQuantity)
				set curInvoiceEachIncTax  = $$$FCDivd2(curInvoiceTotalIncTax,fltInvoiceQuantity)
			} else {
				set curInvoiceEach        = $$$FINAPInvLineInvoiceEach(pobjFINAPInvLine)
 
				set curInvoiceEachIncTax  = $$$FCMult2(curInvoiceEach,taxPercent)
				set curInvoiceTotal       = $$$FCMult2(curInvoiceEach,fltInvoiceQuantity)
				set curInvoiceTotal       = $$$FCRound(curInvoiceTotal,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
				;set curInvoiceTotalIncTax = $$$FCMult2(curInvoiceEachIncTax,fltInvoiceQuantity)
				set curInvoiceTotalIncTax = $$$FCMult2(curInvoiceTotal,taxPercent)
				set curInvoiceTotalIncTax = $$$FCRound(curInvoiceTotalIncTax,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
			}
		}
 
	 	;FOLLOWING TESTS ARE PERFORMED AS A SAFE GUARD TO ENSURE ENTERED AMOUNT STAYS AS WHAT WAS ENTERED
		set:((blnIncTax)  || (blnShowLinesasTotals)) $$$FINAPInvLineInvoiceEach(pobjFINAPInvLine)               = curInvoiceEach
		set:(('blnIncTax) || (blnShowLinesasTotals)) $$$FINAPInvLineInvoiceEachIncTax(pobjFINAPInvLine)         = curInvoiceEachIncTax
		set:((blnIncTax)  || ('blnShowLinesasTotals)) $$$FINAPInvLineInvoiceTotal(pobjFINAPInvLine)             = curInvoiceTotal
		set:(('blnIncTax) || ('blnShowLinesasTotals)) $$$FINAPInvLineInvoiceTotalIncludingTax(pobjFINAPInvLine) = curInvoiceTotalIncTax
 
	} else {
		set curInvoiceTotal       = 0
		set curInvoiceTotalIncTax = 0
		set $$$FINAPInvLineInvoiceTotal(pobjFINAPInvLine)             = 0
		set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjFINAPInvLine) = 0
	}
 
	set curTax = $$$FCSub(curInvoiceTotalIncTax,curInvoiceTotal)
	quit $$$FCUpdate(curTax,fltExchangeRate,1)
	
	
CalculateTotalIncTax(&pobjInvoice,pYFELD="",pidFINAPInvLine="")
    ;-------------------------------------------------------------------------------
    ; FIXME : pobjInvoice is *BOTH* simple variable *AND* array
    ; 
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
	; 12-Apr-2010	GRF		SR17177: GRID Macros
    ; 28-Sep-2005	PO		SR13541: Created
    ;-------------------------------------------------------------------------------
    ;
    ; NOTE: Looked into using COMTAX code, but it does not seem appropriate in this case where
    ;       tax in on total but the total tax is not yet known.
    ;
	new blnShowLinesasTotals,blnTaxInvoice,strTaxLocation,dteTransactionDate,fltRate,arrTaxLines
	new idFINAPInv,idFINAPInvLine,objFINAPInvLine,taxCode,taxPercent,curTotal,curInvoiceTotal
	new curInvoiceEach,fltInvoiceQuantity,fltCombinedTaxPercent,fltTaxPercent
 
	quit:'$data(pobjInvoice)
	quit:pYFELD=""
	quit:pidFINAPInvLine=""
 
	set blnShowLinesasTotals = +$$$FINAPInvShowLinesasTotals(pobjInvoice)
	set blnTaxInvoice        = +$$$FINAPInvTaxInvoice(pobjInvoice)
	set strTaxLocation       =  $$$FINAPInvTaxLocation(pobjInvoice)
	set dteTransactionDate   =  $$$FINAPInvEnteredDate(pobjInvoice)
	set fltRate              =  $$$FINAPInvExchangeRate(pobjInvoice)
	set arrTaxLines = 0
 
	set idFINAPInv = $order(pobjInvoice(""))
 
	set pobjInvoice(idFINAPInv,pidFINAPInvLine) = pYFELD
 
	set idFINAPInvLine = ""
	for {
		set idFINAPInvLine = $order(pobjInvoice(idFINAPInv,idFINAPInvLine))
		quit:idFINAPInvLine=""
 
		set objFINAPInvLine = $get(pobjInvoice(idFINAPInv,idFINAPInvLine))
 
		set taxCode = $$IsTaxable^COMTAX($$$FINAPInvLineTaxCode(objFINAPInvLine),blnTaxInvoice,,strTaxLocation)
 
		if '((taxCode = 0) || (strTaxLocation = "")) {
			set taxPercent = ($$CombinedTaxRate^COMTAX(taxCode,strTaxLocation,dteTransactionDate,1)/100)
		}
 
		if taxPercent '= 0 {
			if blnShowLinesasTotals {
				set curTotal				= $get(arrTaxLines(taxPercent))
				set curInvoiceTotal			= $$$FINAPInvLineInvoiceTotal(objFINAPInvLine)
				set curTotal				= $$$FCAdd(curTotal,curInvoiceTotal)
				set arrTaxLines(taxPercent) = $$$FCUpdate(curTotal,fltRate,1)
			} else {
				set curTotal				= $get(arrTaxLines(taxPercent))
				set curInvoiceEach			= $$$FINAPInvLineInvoiceEach(objFINAPInvLine)
				set fltInvoiceQuantity		= $$$FINAPInvLineInvoiceQuantity(objFINAPInvLine)
				set curInvoiceTotal			= $$$FCMult2(curInvoiceEach,fltInvoiceQuantity)
				set curTotal				= $$$FCAdd(curTotal,curInvoiceTotal)
				set arrTaxLines(taxPercent) = $$$FCUpdate(curTotal,fltRate,1)
			}
			set arrTaxLines = $$$FCAdd(arrTaxLines,curInvoiceTotal)
			set arrTaxLines = $$$FCUpdate(arrTaxLines,fltRate,1)
		}
	}
 
	set taxPercent = ""
	set fltCombinedTaxPercent = 0
	for {
		set taxPercent = $order(arrTaxLines(taxPercent))
		quit:taxPercent=""
 
		set curTotal			  = $$$FCDivd2(arrTaxLines(taxPercent),arrTaxLines)
		set fltTaxPercent		  = $$$FCMult2(curTotal,taxPercent)
		set fltCombinedTaxPercent = $$$FCAdd(fltCombinedTaxPercent,fltTaxPercent)
	}
 
	set $$$FINAPInvTaxTotal(pobjInvoice) = $$$FCMult2(arrTaxLines,fltCombinedTaxPercent)
	set curTotal = $$$FINAPInvTaxTotal(pobjInvoice)
	set $$$FINAPInvTaxTotal(pobjInvoice) = $$$FCRound(curTotal)
	
	; Copy of OnChangeTaxTotal to work with current in memory data
	if ('$$$FINAPInvLinesIncludeTax(pobjInvoice))&&($$$FINAPInvTaxInvoice(pobjInvoice)) {
		do ApportionTax(.pobjInvoice)
		$$$GRIDSetContents(.pobjInvoice,$$$YES,"",$$$YES)
	}
	do UpdateContainer^COMGridEdit31G()
 
	quit
	
	
OnChangeTaxInvoice(pblnChecked=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Called from The "OnClick" javascript callback of the TaxInvoice Property of the header.
    ; Turns on taxes for this invoice.
    ;
    ; Params: pblnChecked - new state of Tax Invoice check box on 3WM header
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 23-Sep-2005	JW		SR12880: Updated for multiple pages
    ; 22-Aug-2005	PO		SR12965: Created - Code created from what is now
    ;							OnChangeTaxInvoice^OBSFINAPInvLineTax
    ;-------------------------------------------------------------------------------
	new objInvoice,blnLinesIncTax,objSupplier
 
 	set objInvoice = $$GetFormData^COMUtilForm()
 	
	set $$$FINAPInvTaxInvoice(objInvoice) = +pblnChecked
	set blnLinesIncTax = $$$NO
 
	if pblnChecked {
		if $$$FINAPInvSupplier(objInvoice)'="" {
			set objSupplier    = $get(^FINAPSupplier(YM,$$$FINAPInvSupplier(objInvoice),1))
			set blnLinesIncTax = $$$FINAPSupplierInvoiceLinesContainTax(objSupplier)
		}
	} else {
		do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvTaxTotal,0,,.objInvoice,$$$NO)
	}
	do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvLinesIncludeTax,blnLinesIncTax,,.objInvoice,$$$NO)
	do SwitchFields(objInvoice)
 
	quit
	
	
OnChangeLinesIncTax(pblnChecked=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Called when user clicks on the "Lines include Tax" checkbox.
    ;
    ; Params: pblnChecked - new state of Lines Include Tax on 3WM header
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 23-Sep-2005	JW		SR12880: Updated for multiple pages
    ; 22-Aug-2005	PO		SR12965: Created - Code created from what is now
    ;							OnChangeLinesIncTax^OBSFINAPInvLineTax
    ;-------------------------------------------------------------------------------
	new objInvoice,blnShowLinesasTotals
 
	set objInvoice = $$GetFormData^COMUtilForm()
	
	set blnShowLinesasTotals = $$$FINAPInvShowLinesasTotals(objInvoice)
 
	set $$$FINAPInvLinesIncludeTax(objInvoice) = +pblnChecked
	do SwitchFields(objInvoice)
 
	quit
	
	
OnChangeLineTotal(pblnChecked=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Called when the user click on the "Lines as Totals" checkbox.
    ;
    ; Params: pblnChecked - new state of Show Lines as Totals on 3WM Header
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 23-Sep-2005	JW		SR12880: Updated for multiple pages
    ; 22-Aug-2005	PO		SR12965: Created - Code created from what is now
    ;							OnChangeLineTotal^OBSFINAPInvLineTax
    ;-------------------------------------------------------------------------------
	new objInvoice,blnLinesIncTax
 	
	set objInvoice = $$GetFormData^COMUtilForm()
	
	set blnLinesIncTax = $$$FINAPInvLinesIncludeTax(objInvoice)
 
	set $$$FINAPInvShowLinesasTotals(objInvoice) = +pblnChecked
	do SwitchFields(objInvoice)
 
	quit
	
	
OnChangeTaxTotal()
    ;-------------------------------------------------------------------------------
    ; Called when user changes the Total Tax amount. Should ony be able to happen if
    ; "Tax On Line" is turned off.
    ;
    ; Params: None
    ;
    ; Returns: Nothing
    ;
    ; History:
	; 12-Apr-2010	GRF		SR17177: GRID Macros
    ; 22-Aug-2005	PO		SR12965: Created - Code created from what is now
    ; 							OnChangeTaxTotal^OBSFINAPInvLineTax
    ;-------------------------------------------------------------------------------
    new objInvoice
 
	do GetObject^COMGridEdit31Interface(.objInvoice,1) ; returns both simple variable and array
	
	if ('$$$FINAPInvLinesIncludeTax(objInvoice)) && ($$$FINAPInvTaxInvoice(objInvoice)) {
		do ApportionTax(.objInvoice)
		$$$GRIDSetContents(.objInvoice,$$$YES,"",$$$YES)

	}
	do UpdateContainer^COMGridEdit31G()
	quit
	
	
SwitchFields(pobjInvoice,pidInvoice)
    ;-------------------------------------------------------------------------------
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 19-Oct-2005	JW		SR13659: Use macro
    ; 23-Sep-2005	JW		SR12880: Updated for multiple pages.
    ; 25-Aug-2005	PO		SR12965: Created
    ;-------------------------------------------------------------------------------
	new blnLinesIncTax,blnTaxInv,blnShowLinesasTotals,idVisibleClassField
 	
	if $get(pidInvoice) = ""  set pidInvoice  = $$GetFormData^COMUtilForm("FINAPInv","P")		//SR12880
	if $get(pobjInvoice) = "" set pobjInvoice = $$GetFormData^COMUtilForm("FINAPInv","D")
	;f $get(pobjInvoice) = "" set pobjInvoice = $$$GRIDYFELDContainer
 	
	set blnLinesIncTax       = +$$$FINAPInvLinesIncludeTax(pobjInvoice)
	set blnTaxInv            = +$$$FINAPInvTaxInvoice(pobjInvoice)
	set blnShowLinesasTotals = +$$$FINAPInvShowLinesasTotals(pobjInvoice)
	set idVisibleClassField  = $$$VisibleColumn(blnLinesIncTax,blnShowLinesasTotals)
 	
	if '$$$FINAPInvCostsPosted(pobjInvoice) {
		if $get(YSEITE)=1 {
			if $$$CurrencyToUse'="Base" do ToggleReadOnly^COMUtilForm($$$FldFINAPInvTaxTotal,'blnTaxInv||blnLinesIncTax,"FINAPInv")
			do PopulateDataField^COMUtils("FINAPInv",8,$$TaxAppliedTo^FINAPInv(pidInvoice,pobjInvoice),"M")
		}
		if (pidInvoice'="") && ($$$GRIDGetRowCount("FINAPInvLine",pidInvoice)>1) {	//SR13659
		;if $order(^FINAPInvLine(YM,pidInvoice,""))'="Total" {
			do ToggleReadOnly^COMUtilForm($$$FldFINAPInvLinesIncludeTax,$$$YES,"FINAPInv")
			do ToggleReadOnly^COMUtilForm($$$FldFINAPInvShowLinesasTotals,$$$YES,"FINAPInv")
			do ToggleReadOnly^COMUtilForm($$$FldFINAPInvTaxInvoice,$$$YES,"FINAPInv")
			
		} else {
			do ToggleReadOnly^COMUtilForm($$$FldFINAPInvLinesIncludeTax,'blnTaxInv,"FINAPInv")
		}
	}
	quit idVisibleClassField
	
	
CalculateAmountsFromInvoiceEach(pobjFINAPInv,&pobjFINAPInvLine) 
    ;-------------------------------------------------------------------------------
    ; Generate Invoice Amounts from U/P Ex Tax taking into consideration Use Lines as Totals
    ;
    ; Params: pobjFINAPInv - 3WM Header Record and
    ;         pobjFINAPInvLine - a 3WM Line Record  (return updated fields byRef)
    ;
    ; Returns: Total Tax on this 3WM Line Record
    ;
    ; History:
    ; 27-Jul-2009	GRF		Show byref arg
    ; 24-Oct-2005	PO		SR13541: Calculation of total tax same whether Show
    ; 							lines as totals is checked or unchecked.
    ; 24-Oct-2005	PO		SR13613: Separate UP inc tax base & FC handling
    ; 21-Sep-2005	PO		SR13544: Round the U/P inc tax amt before use in calcs
    ; 26-Aug-2005	PO		SR12965: Created
    ;-------------------------------------------------------------------------------
	new location,taxPercent,taxCode,fltInvoiceQuantity,curTmp,curForeign,curBase
	new curInvoiceEach,curInvoiceEachIncTax,curInvoiceTotal,curInvoiceTotalIncTax,fltRate
 
	set fltRate = $$$FINAPInvExchangeRate(pobjFINAPInv)
	set fltInvoiceQuantity = $$$FINAPInvLineInvoiceQuantity(pobjFINAPInvLine)
 
	set taxPercent = 1
	set location   = $$$FINAPInvTaxLocation(pobjFINAPInv)
	set taxCode    = $$IsTaxable^COMTAX($$$FINAPInvLineTaxCode(pobjFINAPInvLine),+$$$FINAPInvTaxInvoice(pobjFINAPInv),,location)
 
	if '((taxCode = 0) && (location = "")) {
		set taxPercent = ($$CombinedTaxRate^COMTAX(taxCode,location,$$$FINAPInvEnteredDate(pobjFINAPInv),1)/100)+1
	}
 
	set curInvoiceEach       = $$$FINAPInvLineInvoiceEach(pobjFINAPInvLine)
	set curInvoiceEachIncTax = $$$FCMult2(curInvoiceEach,taxPercent)
	
	; Store the U/P inc tax to the same accuracy as the U/P ex tax - SR13702
	if $$$AmountIsFC(curInvoiceEach) {
		set curTmp = $$$FCAmount(curInvoiceEach)
		set curForeign = $justify($$$FCAmount(curInvoiceEachIncTax),0,$$$NumberOfDP(curTmp))
		set curBase    = $$$FCBase(curInvoiceEachIncTax)
		set curInvoiceEachIncTax = $$$FCJoin($$$FCRound(curBase),curForeign,$$$FCur(curInvoiceEach),$$$FCRate(curInvoiceEach))
	} else {
		set curInvoiceEachIncTax = $justify(curInvoiceEachIncTax,0,$$$NumberOfDP(curInvoiceEach))
	}
	;set curInvoiceEachIncTax = $$$FCRound(curInvoiceEachIncTax,"FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax) ; SR13544
	
	set curInvoiceTotal      = $$$FCMult2(curInvoiceEach,fltInvoiceQuantity)
	set curInvoiceTotal      = $$$FCRound(curInvoiceTotal,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
 
	;if $$$FINAPInvShowLinesasTotals(pobjFINAPInv) {
	set curInvoiceTotalIncTax = $$$FCMult2(curInvoiceTotal,taxPercent)
	set curInvoiceTotalIncTax = $$$FCRound(curInvoiceTotalIncTax,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
	;} else {
	;	set curInvoiceTotalIncTax = $$$FCMult2(curInvoiceEachIncTax,fltInvoiceQuantity)
	;	set curInvoiceTotalIncTax = $$$FCRound(curInvoiceTotalIncTax,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
	;}
 
	set $$$FINAPInvLineInvoiceTotal(pobjFINAPInvLine)             = curInvoiceTotal
	set $$$FINAPInvLineInvoiceEachIncTax(pobjFINAPInvLine)        = curInvoiceEachIncTax
	set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjFINAPInvLine) = curInvoiceTotalIncTax
 
	quit $$$FCSub(curInvoiceTotalIncTax,curInvoiceTotal)
	
	
ApportionTax(pobjInvoice)
    ;-------------------------------------------------------------------------------
    ; Apportion tax across lines
    ;
    ; Params: pobjInvoice - 3WM header and all lines
    ; 
    ; Returns: Nothing (pobjInvoice passed by reference)
    ;
    ; History:
    ; 08-Sep-2005	RPW			SR13446: Call apportion with fltRate
    ; 15-Aug-2005	PO			SR12965: Code created from what is now UpdateTax^OBSFINAPInvLineTax
    ; 20-Jun-2005	Paul K		Sub routined determination of which column to show and add reference to price field on screen. SR:12496
  	; 02-Jun-2005	Paul K		SR:12520 Changed PopulateDataField to not call EventValue
    ; 18-May-2005	Paul K		Added Use Each Param. SR:12360
    ; 06-May-2005	Paul K		Fixed invalid tax code issue sr:12188
    ; 03-May-2005	Paul K		Created
    ;-------------------------------------------------------------------------------
    new idInvoice,idLine,objLine,arrTaxLines,fltQuantity,curTmp
 
	set idInvoice = $order(pobjInvoice(""))
	if idInvoice'="" {
		set idLine = ""
		for {
			set idLine = $order(pobjInvoice(idInvoice,idLine))
			quit:idLine=""
			set objLine = $get(pobjInvoice(idInvoice,idLine))
			if +$$CombinedTaxRate^COMTAX($$$FINAPInvLineTaxCode(objLine),$$$FINAPInvTaxLocation(pobjInvoice),$$$FINAPInvInvoiceDate(pobjInvoice),1)'=0 {
				set arrTaxLines(idLine) = $$$FINAPInvLineInvoiceTotal(objLine)
			}
		}
		
		if $data(arrTaxLines) {
			do Apportion(.arrTaxLines,$$$FINAPInvTaxTotal(pobjInvoice),$$$FINAPInvExchangeRate(pobjInvoice))
 
			for {
				set idLine = $order(arrTaxLines(idLine))
				quit:idLine=""
				set objLine = $get(pobjInvoice(idInvoice,idLine))
				set fltQuantity = $$$FINAPInvLineInvoiceQuantity(objLine)
				if +fltQuantity=0 set fltQuantity = 1
 
				set $$$FINAPInvLineInvoiceTotalIncludingTax(objLine) = arrTaxLines(idLine)
 
				set curTmp = $$$FCDivd2(arrTaxLines(idLine),fltQuantity)
				set $$$FINAPInvLineInvoiceEachIncTax(objLine) = $$$FCRound(curTmp,"FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax)
 
				set pobjInvoice(idInvoice,idLine) = objLine
			}
		}
	}
 
	quit ; blnTaxApportioned
 
Apportion(parrLines,pcurAmount,pfltRate)
    ;-------------------------------------------------------------------------------
    ; A generic function, given a simple array of numbers, apportion pcurAmount over those
    ; array lines, remembering the unrounded decimal.
    ; 
    ; Note: does not handle the sum of the numbers being zero. (mix of +ve and -ve)
    ; 
    ; Params: parrLines - lines to apportion tax over and
    ;         pcurAmount - Amount to apportion over libes
    ; 
    ; Returns: Nothing (parrLines passed by reference)
    ;
    ; History:
    ; 08-Sep-2005	RPW			SR13446: Add updates for the FC rate as this may change. Also use FCZero
    ; 15-Aug-2005	PO			SR12965: Code copied from what is now Apportion^OBSFINAPInvLineTax
    ; 14-Jun-2005	PK/PO		SR:12589 switched args to FCMult as multiplier is expected to be a plain number
    ; 26-Apr-2005	Paul K		Created
    ;-------------------------------------------------------------------------------
	new idLine,curTotal,curAmount,curTmp
	
	set curTotal = 0
	set idLine   = ""
	for {
		set idLine = $order(parrLines(idLine))
		quit:idLine=""
		set curTotal = $$$FCAdd(curTotal,parrLines(idLine))
		;
	}
	
	set curTotal=$$$FCUpdate(curTotal,pfltRate,1) ; SR13446
	
	if '$$$FCZero(curTotal) { ; SR13446
		for {
			set idLine = $order(parrLines(idLine))
			quit:idLine=""
			if +parrLines(idLine)'=0 {
				continue:($$$AmountIsFC(curTotal)&&'$$$AmountIsFC(parrLines(idLine))) ; DO NOT apportion amount when invoice in base and supplier is FC
				set curTmp    = $$$FCDivd2(parrLines(idLine),curTotal)
				set curTmp    = $$$FCMult2(pcurAmount,curTmp)
				set curAmount = $$$FCRound(curTmp,"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
 
				set curTotal   = $$$FCSub(curTotal,parrLines(idLine))
				set curTotal   = $$$FCUpdate(curTotal,pfltRate,1)
				;
				set pcurAmount = $$$FCSub(pcurAmount,curAmount)
				set pcurAmount = $$$FCUpdate(pcurAmount,pfltRate,1)
				;
				set curTmp = parrLines(idLine) ; SR13446
				set curTmp = $$$FCAdd(curTmp,curAmount) ; SR13446
				set curTmp = $$$FCUpdate(curTmp,pfltRate,1) ; SR13446
				set parrLines(idLine) = curTmp ; SR13446
				;
			}
		}
	}
 
	quit
]]></Routine>
</Export>