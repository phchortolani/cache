<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARManipulacaoMagistralProcess" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARManipulacaoMagistralProcess
	#include VARConst
	#include INConst

	;Comment to force recompile
CreateReceiptData(pidIssue,&pidReceipt)
	;-------------------------------------------------------------------------------
	; Creates a INREC and INRECLine records for the Finished Good Item
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 26-Nov-2013	shobby		HEVA-1148.41: Receipt at the Production Location not Destination Location
	; 16-Oct-2013	shobby		SR<>: Created
	;-------------------------------------------------------------------------------
	new idProdOrder,objINIssue,objINREC,objMagistral,strStatus
 	
 	if (pidIssue'="") {
		set objINIssue  = $get(^INIssue(0,pidIssue,1))
	 	set idProdOrder = $$$INIssueProductionOrder(objINIssue)
	 	set objMagistral     = $get(^VARManipulacaoMagistral(0,idProdOrder,1))
	 	quit:objMagistral=""
		
	 	set objINREC = "" 
	 	set $$$INRECStatus(objINREC)          = 0  ; $$$EnumINSTATUSUnprocessed
		set $$$INRECLocation(objINREC)        = $$$VARManipulacaoMagistralProductionLocation(objMagistral) ;HEVA-1148.41
		set $$$INRECCreatedBy(objINREC)       = YBED    ;YUSER
		set $$$INRECCreatedDate(objINREC)     = $horolog		//SR17982
		set $$$INRECProcessedBy(objINREC)     = YBED    ;YUSER
		set $$$INRECProcessedDate(objINREC)   = $horolog		//SR17982
		set $$$INRECProductionOrder(objINREC) = idProdOrder
		set $$$INRECType(objINREC)            = 1		// Manufacturing Receipt
	 	
	 	set pidReceipt   = $$^WWWNEXT("INREC")
		set strStatus = $$$Save("INREC",pidReceipt,objINREC,$$$YES)
		
		;; FIXME : Take into account INRECLine D65/66 Received/Ordered Unit <GRF>
		
		if $$$ISOK(strStatus) set strStatus=$$CreateReceiptDataLine(pidReceipt,pidIssue,idProdOrder,objMagistral)
 	}
	quit strStatus

CreateReceiptDataLine(pidReceipt="",pidIssue="",pidMagistral="",pobjMagistral="")
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 26-Nov-2013	shobby		HEVA-1148.41: Receipt at the Production Location not Destination Location
	; 16-Oct-2013	shobby		SR<>: Created
	;-------------------------------------------------------------------------------
	new curTotal,objINRECLine,strStatus
	
	set strStatus=$$$OK
	
	set objINRECLine=""

	set curTotal = $$GetItemCost^INMOIssue(pidIssue)
	
	set $$$INRECLineQuantity(objINRECLine)       = $$$VARManipulacaoMagistralQuantity(pobjMagistral)
	set $$$INRECLineUnit(objINRECLine)           = $$$VARManipulacaoMagistralUnit(pobjMagistral)
	set $$$INRECLineOrderQuantity(objINRECLine)  = $$$VARManipulacaoMagistralQuantity(pobjMagistral)
	set $$$INRECLineItem(objINRECLine)           = $$$VARManipulacaoMagistralItem(pobjMagistral)
	set $$$INRECLineLocation(objINRECLine)       = $$$VARManipulacaoMagistralProductionLocation(pobjMagistral) ;HEVA-1148.41
	set $$$INRECLineStockLocation(objINRECLine)  = $$DefaultStorage^INRECLine($$$VARManipulacaoMagistralProductionLocation(pobjMagistral),$$$VARManipulacaoMagistralItem(pobjMagistral)) ;HEVA-1148.41
	set $$$INRECLineEach(objINRECLine)			 = $$$FCDivd(curTotal,$$$VARManipulacaoMagistralQuantity(pobjMagistral))
	set $$$INRECLineTotal(objINRECLine)			 = curTotal
	set $$$INRECLineFlag(objINRECLine) 			 = 1
	set $$$INRECLineOrder1(objINRECLine)		 = pidMagistral
	set $$$INRECLineOrderLine(objINRECLine)		 = 1
	
	set $$$INRECLineLotNumber(objINRECLine) 	 = $$$VARManipulacaoMagistralLot(pobjMagistral)
	set $$$INRECLineExpirationDate(objINRECLine) =  $$$VARManipulacaoMagistralExpiryDate(pobjMagistral)

	set strStatus = $$$Save("INRECLine",pidReceipt_",1",objINRECLine,$$$YES)

	quit strStatus
	
		
CreateIssue(pidMagistral="",pobjMagistral="",&pidINIssue="")
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 15-Oct-2013	shobby		HEVA-1148: Created
	;-------------------------------------------------------------------------------
	new strStatus,objINIssue,idLine,objMagistralLine
	
 	set strStatus=$$$OK
 	
 	if (pidMagistral'="")&&(pobjMagistral'="") {
	 	set pidINIssue = $$^WWWNEXT("INIssue")
	 	
	 	set objINIssue = "" 
	 	set $$$INIssueStatus(objINIssue)	           = 1
		set $$$INIssueToLocn(objINIssue)	           = $$$VARManipulacaoMagistralProductionLocation(pobjMagistral)
		set $$$INIssueFromLocn(objINIssue)	           = $$$VARManipulacaoMagistralProductionLocation(pobjMagistral)
		set $$$INIssueFinishedGoodItemCode(objINIssue) = $$$VARManipulacaoMagistralItem(pobjMagistral)
		;set $$$INIssueFinishedGoodItemCode(objINIssue) = $$$INMOItemCode(objINMO)
		set $$$INIssueProductionOrder(objINIssue)      = pidMagistral
		set $$$INIssueType(objINIssue)                 = 6		//Manufacturing Issue
		set $$$INIssueReference(objINIssue)            = "Magistral Issue"
		
		set strStatus = $$$Save("INIssue",pidINIssue,objINIssue,$$$YES)
		
		if $$$ISOK(strStatus) {
			set idLine="" for { set idLine=$order(^VARManipulacaoMagistralLine(YM,pidMagistral,idLine)) quit:idLine=""
				set objMagistralLine=$get(^VARManipulacaoMagistralLine(YM,pidMagistral,idLine,1))
				set strStatus = $$CreateIssueLine(pidINIssue,$$$VARManipulacaoMagistralProductionLocation(pobjMagistral),$$$VARManipulacaoMagistralProductionLocation(pobjMagistral),objMagistralLine,idLine)
				quit:$$$ISERR(strStatus)
			}
		}	
 	}
 	
	quit strStatus

CreateIssueLine(pidINIssue,pidLocn,pidProdLocn,pobjLine,pidLine)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 16-Sep-2014	SCR			HEVA-1607: Unit conversion
	; 15-Oct-2013	shobby		HEVA-1148: Created
	;-------------------------------------------------------------------------------
	new blnNotFirst,fltQty,idBase,idItem,idToStorage,idUnit,objINIssueLine,strStatus
	
	set strStatus = $$$OK
	
 	set idItem      = $$$VARManipulacaoMagistralLineItem(pobjLine)
 	set fltQty      = $$$VARManipulacaoMagistralLineQuantity(pobjLine)
 	set idToStorage = $$GetStorage^INIssueAuto(idItem,pidProdLocn)
 	set blnNotFirst = $$$NO
	set idBase		= $$$INARTUnitofMeasure($get(^INART(YM,idItem,1)))
	set idUnit		= $$$VARManipulacaoMagistralLineUnit(pobjLine)
	if idUnit'=idBase {
		set fltQty	= $$Convert^INUOMConversion(idItem,fltQty,idUnit,idBase)
	}
	set objINIssueLine = ""
	
	set $$$INIssueLineStatus(objINIssueLine)      = 1				
	set $$$INIssueLineQtyRequired(objINIssueLine) = fltQty
	set $$$INIssueLineQtyIssued(objINIssueLine)   = fltQty
	set $$$INIssueLineItem(objINIssueLine)        = idItem
	set $$$INIssueLineUnit(objINIssueLine)        = idBase
	set $$$INIssueLineToStorage(objINIssueLine)   = idToStorage
	set $$$INIssueLineFromStorage(objINIssueLine) = $$$VARManipulacaoMagistralLineStockLocation(pobjLine)
	set $$$INIssueLineBundle(objINIssueLine)      = $$$VARManipulacaoMagistralLineBundle(pobjLine)
	set $$$INIssueLineReference(objINIssueLine)   = pidINIssue
	if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) { //HEVA-1073
		set $$$INIssueLineFREE1(objINIssueLine)	  = ##class(alSOH.iSOH).GetQtyOnHand(idItem,pidProdLocn,pidProdLocn_"||"_$$$VARManipulacaoMagistralLineStockLocation(pobjLine))
	}
	
	set strStatus = $$$Save("INIssueLine",pidINIssue_","_pidLine,objINIssueLine,$$$YES)

	quit strStatus

]]></Routine>
</Export>