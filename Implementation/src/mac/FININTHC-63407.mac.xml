<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FININTHC" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FININTHC  ; FINANCE Interface Health Checks.
	#include FINHC


InterfaceBatchLines(Start="",End="",Location="",Level="",Result)
    ;-------------------------------------------------------------------------------
    ; The sum of the Interface Batch Lines must equal 0 (only when posted).
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Apr-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
    ;
	new strStatus,idxBatch,idxNumber,objFININTBatch,fltTotal,objFININTBatchLine
	
	set strStatus=$$$OK
	kill Result  				; Clear Result
	
	set idxBatch=""
	set fltTotal=0
	for {
		set idxBatch=$order(^FININTBatchLine(YM,idxBatch))
		quit:idxBatch=""
		set idxNumber=""
		for {
			set idxNumber=$order(^FININTBatchLine(YM,idxBatch,idxNumber))
			quit:idxNumber=""
			set objFININTBatch=$get(^FININTBatch(YM,idxBatch,1))
			if $$$FININTBatchPostedDate(objFININTBatch)'="" {
				set objFININTBatchLine=$get(^FININTBatchLine(YM,idxBatch,idxNumber,1))
				set fltTotal=fltTotal+$$$FININTBatchLineAmount(objFININTBatchLine)
				write !,fltTotal
			}
		}
		if fltTotal'=0 {
			set Result("Hash","Interface Batch '"_idxBatch_"'")=". Balance does not equal zero ("_fltTotal_")"
			set strStatus='$$$OK				
		}
	}
	if strStatus=$$$OK {
		set strStatus=2  ; Because this is a Standalone Check return 2 if Ok
	}
	quit strStatus


BatchLineTransactionAccount(Start="",End="",Location="",Level="",Result)
    ;-------------------------------------------------------------------------------
    ; Each Posted Ledger Interface Batch Line must point to a defined Transaction Account.
    ;
    ; Returns:
    ;
    ; History:
    ; 21-Apr-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
    ;
	new strStatus,idBatch,idNumber,objFININTBatchLine,idFINGLAccount,objFINGLAccount
	
	set strStatus=$$$OK
	kill Result

	set idBatch=""
	for {
		set idBatch=$order(^FININTBatchLine(YM,idBatch))
		quit:idBatch=""
		set idNumber=""
		for {
			set idNumber=$order(^FININTBatchLine(YM,idBatch,idNumber))
			quit:idNumber=""
			set objFININTBatchLine=$get(^FININTBatchLine(YM,idBatch,idNumber,1))
			set idFINGLAccount=$$$FININTBatchLineAccount(objFININTBatchLine)
			if idFINGLAccount="" {
				set Result("Hash",$$$ErrorNo(Result("Errors")))="Interface Batch Line '"_idBatch_","_idNumber_"'. Does not point to a GL Account."
				set strStatus='$$$OK
			} else {
				set objFINGLAccount=$get(^FINGLAccount(YM,idFINGLAccount,1))
				if objFINGLAccount="" {
					set Result("Hash",$$$ErrorNo(Result("Errors")))="Interface Batch '"_idBatch_","_idNumber_"'. Account '"_idFINGLAccount_"' is missing."
					set strStatus='$$$OK
				} else {
					if $$$FINGLAccountAccountUsage(objFINGLAccount)'=$$$EnumFINGLACCOUNTUSAGETransaction {
						set Result("Hash",$$$ErrorNo(Result("Errors")))="Interface Batch '"_idBatch_","_idNumber_"'. Account '"_idFINGLAccount_"' is not a transaction account."
						set strStatus='$$$OK
					}
				}
			}
		}
	}

	if strStatus=$$$OK {
		set strStatus=2  ; Because this is a Standalone Check return 2 if Ok
	}

	quit strStatus

]]></Routine>
</Export>