<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARAlertaUI" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMSYS
#include COMConst
#include COMView
#include INConst
#include VARConst
 
VARAlertaUI
	quit
	
FilterCodigoProduto(pidItem)
	; Este filtro serve apenas para alterar a sua descrição no campo calculado
	quit pidItem

FilterDescricaoProduto(pidItem)
	quit $$SQLGetDescricaoProduto^VARSQL(pidItem)
	
FilterElenco(pidItem)
 	new objItem, strStatus
 	
 	quit:(pidItem = "") $$$NO
 
 	set strStatus = $$$NO
	set objItem   = $get(^INART(YM,pidItem,1))
 
	if (objItem '= "") {
		if ($piece(objItem,Y,280) = $$$YES) {  //FREE5 - Pertence ao Elenco?
				set strStatus=$$$YES
			}
		}
	
	quit strStatus

FilterCurvaABC(pidItem)
	quit $$GetCurvaABC^VARAlertaLinha(pidItem)
	
FilterIndiceCriticidade(pidItem)
	quit $$GetIndiceCriticidade^VARAlertaLinha(pidItem)
	
FilterGrupo(pidItem) 
	quit $$GetGrupo^VARAlertaLinha(pidItem)
	
FilterGrupoPrincipal(pidItem)
	new idGrupoPrincipal
	set idGrupoPrincipal=$$GetGrupo^VARAlertaLinha(pidItem)
	if $piece($get(^INItemGroup(YM,idGrupoPrincipal,1)),Y,1)'="" set idGrupoPrincipal=$piece($get(^INItemGroup(YM,idGrupoPrincipal,1)),Y,1)
	quit idGrupoPrincipal

FilterEstoqueZerado(pidItem)
	new fltEstoque
	set fltEstoque = $$GetEstoqueRede^VARAlertaLinha(pidItem)
	
	if ( (fltEstoque = 0) || (fltEstoque = "") ) {
		quit $$$YES
	}
	
	quit $$$NO
	
FilterEstoqueAbaixoPRsemEP(pidItem)
	new strStatus, fltEstoque, fltPR, fltEncomendasPendentes
 
	set strStatus = $$$NO
	
	set fltEstoque = $$GetEstoqueRede^VARAlertaLinha(pidItem)
	
	set fltPR = $$GetPR^VARAlertaLinha(pidItem)
	
	;Se o estoque é menor que o ponto de ressuprimento
	if (fltEstoque < fltPR) {
		
		set fltEP = $$GetEncomendasPendentesCompra^VARAlertaLinha(pidItem)
		
		;Se não existe nenhuma quantidade em encomenda pendente
		if fltEP <= 0 {
			set strStatus = $$$YES
		}
	}
	
	quit strStatus
	
FilterEstoqueAbaixoPRcomEP(pidItem)
	new strStatus, fltEstoque, fltPR, fltEncomendasPendentes
 
	set strStatus = $$$NO
	
	set fltEstoque = $$GetEstoqueRede^VARAlertaLinha(pidItem)
	
	set fltPR = $$GetPR^VARAlertaLinha(pidItem)
	
	;Se o estoque é menor que o ponto de ressuprimento
	if (fltEstoque < fltPR) {
		
		set fltEP = $$GetEncomendasPendentesCompra^VARAlertaLinha(pidItem)
		
		;Se não existe nenhuma quantidade em encomenda pendente
		if fltEP > 0 {
			set strStatus = $$$YES
		}
	}
	
	quit strStatus
	
FilterEstoqueProximoPR(pidItem)
	new strStatus, fltEstoque, fltPR, fltProximidade
 
	set strStatus = $$$NO
	
	set fltEstoque = $$GetEstoqueRede^VARAlertaLinha(pidItem)
	set fltPR = $$GetPR^VARAlertaLinha(pidItem)
		
	set fltProximidade = (fltPR * 1.2) ;(20 acima do ponto de ressuprimento)
 
	;Se o Estoque Central é maior que o ponto de ressuprimento
	if (fltEstoque >= fltPR) {
		
		;Se ele está próximo do PR
		if (fltEstoque <= fltProximidade) {			
			set strStatus = $$$YES
		}
	}
	
	quit strStatus
	

FilterEstoqueAcimaPR(pidItem)
	;Atenção: essa função não pega tudo o que está acima do PR. Ela pega apenas aqueles que estão acima do PR,
	;		  com uma determinada margem e abaixo do estoque máximo.
	
	new strStatus, fltEstoque, fltPR, fltEM, fltProximidade
	set strStatus = $$$NO
	
	set fltEstoque = $$GetEstoqueRede^VARAlertaLinha(pidItem)
	set fltPR = $$GetPR^VARAlertaLinha(pidItem)
	set fltEM = $$GetEM^VARAlertaLinha(pidItem)
	
	set fltProximidade = (fltPR * 1.2) ;(20 acima do ponto de ressuprimento)
 
	;Se o estoque local é maior que o ponto de ressuprimento e menor ou igual que o estoque máximo
	if ((fltEstoque > fltPR) && (fltEstoque <= fltEM)) {
		
		;Se ele não está próximo do PR
		if (fltEstoque > fltProximidade) {
			set strStatus = $$$YES
		}
	}
	
	quit strStatus
	

FilterEstoqueAcimaEM(pidItem)
	new strStatus, fltEstoque, fltEM
 
	set strStatus = $$$NO
		
	set fltEstoque = $$GetEstoqueRede^VARAlertaLinha(pidItem)
	set fltEM = $$GetEM^VARAlertaLinha(pidItem)
	
	;Se o estoque local é maior que o estoque máximo
	if (fltEstoque > fltEM) {
		set strStatus = $$$YES
	}
 
	quit strStatus
	

FilterCoberturaEstoque(pidItem)
	new fltCoberturaEstoque
	
	set fltCoberturaEstoque = $$GetCoberturaEstoque^VARAlertaLinha(pidItem)
	quit fltCoberturaEstoque


OnAfterDataFields
	new idFiltro	
	set idFiltro = YAUSWAHL
	
	do LoadGrid(YKEY,idFiltro)
	
	quit
 
LoadGrid(YKEY,pidFiltro)
	new idGrupo
	
	set idFilter = $piece(pidFiltro,"-",1)	
	set idGrupo  = $piece(pidFiltro,"-",2)
 
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    		 = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) 		 = 1
	set $$$COMGridEditParameterGridName(YAUSWAHL)      		 = "VARAlertaLinha"
	set $$$COMGridEditParameterEnabled(YAUSWAHL)       		 = $$$YES
	set $$$COMGridEditParameterContainer(YAUSWAHL)     		 = "VARAlerta"
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL) = $$$YES
	set $$$COMGridEditParameterDontStoreAll(YAUSWAHL)  		 = $$$YES
	set $$$COMGridEditParameterCOMViewGrid(YAUSWAHL)   		 = $$$YES
	
	$$$ClearExternalFilter(YFORM)
	
	do AddExternalFilter^COMViewFilter(YFORM, "P1", "", $$$EnumCOMVIEWCOMPARATORNotEquals, $$$NO)
	do AddExternalFilter^COMViewFilter(YFORM, "C2", "", $$$EnumCOMVIEWCOMPARATORStartsWith, $$$YES)  ;Código do Produto
	do AddExternalFilter^COMViewFilter(YFORM, "C3", "", $$$EnumCOMVIEWCOMPARATORContains, $$$YES)    ;Descrição do Produto
	do AddExternalFilter^COMViewFilter(YFORM, "C7", "", $$$EnumCOMVIEWCOMPARATORStartsWith, $$$YES)
 	;Filtra por Grupo
 	if (idGrupo '= "") {
		do AddExternalFilter^COMViewFilter(YFORM, "C15", idGrupo, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	} else {
	 	do AddExternalFilter^COMViewFilter(YFORM, "C15", "", $$$EnumCOMVIEWCOMPARATORStartsWith, $$$YES)
 	}
	
	do AddExternalFilter^COMViewFilter(YFORM, "C5", "", $$$EnumCOMVIEWCOMPARATORStartsWith, $$$YES)   ;Curva ABC
	do AddExternalFilter^COMViewFilter(YFORM, "C6", "", $$$EnumCOMVIEWCOMPARATORStartsWith, $$$YES)   ;Índice de Criticidade
	do AddExternalFilter^COMViewFilter(YFORM, "C14", "", $$$EnumCOMVIEWCOMPARATORStartsWith, $$$YES)  ;Cobertura de Estoque

	;Filtra estoque abaixo do ponto de ressuprimento sem pedido
 	if (idFilter = 4) {
 		;do AddExternalFilter^COMViewFilter(YFORM, "C9", 1, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	
 	} else {
 		;do AddExternalFilter^COMViewFilter(YFORM, "C9", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	}
 	
 	;Filtra estoque abaixo do ponto de ressuprimento com pedido
 	if (idFilter = 3) {
		;do AddExternalFilter^COMViewFilter(YFORM, "C10", 1, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	
 	} else {
		;do AddExternalFilter^COMViewFilter(YFORM, "C10", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	} 	


	;Filtra estoque próximo do ponto de ressuprimento
 	if (idFilter = 2) {
		;do AddExternalFilter^COMViewFilter(YFORM, "C11", 1, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	
 	} else {
		;do AddExternalFilter^COMViewFilter(YFORM, "C11", 0, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	}

	;Filtra estoque acima do ponto de ressuprimento
 	if (idFilter = 1) {
		;do AddExternalFilter^COMViewFilter(YFORM, "C12", 1, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	
 	} else {
		;do AddExternalFilter^COMViewFilter(YFORM, "C12", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	}
 
 	;Filtra estoque acima do estoque máximo
 	if (idFilter = 5) {
		;do AddExternalFilter^COMViewFilter(YFORM, "C13", 1, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	
 	} else {
		;do AddExternalFilter^COMViewFilter(YFORM, "C13", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 	}

	$$$GRIDStart("VARAlertaLinha",YLOCATION)
	do LoadCOMViewGrid^COMViewFilter("VARAlerta", "VARAlertaLinha")
 
	quit
]]></Routine>
</Export>