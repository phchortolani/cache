<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARPreRequisicaoLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARPreRequisicaoLinha

#include %occInclude
#include COMSYS
#include INConst
#include COMGridEdit31
#include VARConst
#include COMConst

#define FORMFldVARPreRequisicaoLinhaUnidade 2
#define DELIM	$char(31)


OnBlurProduto(pintRow,pidField,&pobjPreReqLinha)
	;Rotina copiada de: OnBlurItem^INReqLine

	new objItem
	new listOfItemCodes, itemIncluded	   ;Karine
	
	set listOfItemCodes =""			       ;Karine
	
	if (pidField '= "") {
		
		set objItem = ##class(alINV.iUINV).GetItem(pidField) //SR15943:
		if objItem '= $$$NULLOREF {

			// 12-Maio-2010  Check if Item is inactive
			new itemStatus
			set itemStatus = $piece($get(^INART(YM,pidField,1)),Y,66)				
			if (itemStatus = 1) {
				w "javascript:alert('O produto "_pidField_" está inativo. Favor verificar com a CAF.');"
				set $$$VARPreRequisicaoLinhaCodProduto(pobjPreReqLinha) = ""
				quit
			}
			
			// 20-April-2010  Karine: Check if Item was already included
			set item = $$$VARPreRequisicaoLinhaCodProduto(pobjPreReqLinha)
			set listOfItemCodes = $$ItensAlreadyIncluded()
			set date = $piece($horolog,YKOMMA,1)
			set focusField = $get(^WWWDATEN(0,date,YUSER,"VARPreRequisicaoLinha","V","FOCUSFIELD"))
			set currentLine = $extract($piece(focusField,"_",1),2,$length(focusField))
			set itemIncluded = 0
			for gridLine=1:1:$length(listOfItemCodes) {
				// Skips if dealing with current line of the grid:
				if (gridLine = currentLine) {
					continue
				}
				if ($piece(listOfItemCodes,Y,gridLine) = item) {
					set itemIncluded = 1
					quit
				}
			}
			set seq = ""
			if (itemIncluded) {
				// Searches for the "Seq." value of the grid line:
				for {
					set seq = $order(^WWWDATEN(0,date,YUSER,"VARPreRequisicaoLinha","V","REFERENCEROW",seq))
					quit:(seq = "")
					if ($get(^WWWDATEN(0,date,YUSER,"VARPreRequisicaoLinha","V","REFERENCEROW",seq,1)) = gridLine) {
						quit
					}
				}
				// ----
				set $PIECE(YFELD,Y,1)=""
				$$$Alert("O Item '"_item_"' já foi incluído nesta requisição (Seq. = "_seq_").")
				quit
			}
			// 20-April-2010  Karine: End
			//////////////////////////////////////////////////////////////////////////////////////////////////
			
			set:('$data(YFONTCOLOR)) YFONTCOLOR = "Black"
			set:('$data(YGRIDWHITE)) YGRIDWHITE = "ivory"	//SR16905
			set YTOOLTIP = ""
			set YBACKGROUNDCOLOR = YGRIDWHITE
			do ScreenUpdateStyle^COMGridEdit31S("pY"_pintRow_"_"_$$$FldVARPreRequisicaoLinhaCodProduto)
 
			//Populate Unit Listing
			set $$$VARPreRequisicaoLinhaUnidade(pobjPreReqLinha) = $$LoadUnitOfMeasureList^INARTUtilities($$$VARPreRequisicaoLinhaCodProduto(pobjPreReqLinha))
			
			//Load the Dynamic Grid
			;do UpdateATP(pintRow,pobjPreReqLinha)
			;do ShowItems^VARTCIReq(1, "INReq"_$$$DELIM_"VARPreRequisicaoLinha"_$$$DELIM_1_$$$DELIM_1)
			
		} else {
			set:('$data(YFONTCOLOR)) YFONTCOLOR = "Black"
			set YTOOLTIP = $$$Text("IN00801")  	//"Invalid Item"
			set YBACKGROUNDCOLOR = YRED
			do ScreenUpdateStyle^COMGridEdit31S("pY"_pintRow_"_"_$$$FldVARPreRequisicaoLinhaCodProduto)
		}
	}
 
	quit



ItensAlreadyIncluded()
	new counter, date, gridLine, gridColumnForItemCode, listOfItemCodes
	
	set date = $piece($horolog,YKOMMA,1)
	set gridColumnForItemCode = 1
	set listOfItemCodes = ""
 
	// Loop on grid lines:
	set gridLine = $order(^WWWDATEN(0,date,YUSER,"VARPreRequisicaoLinha","V","DISPLAYED",""))
	for {
		set itemCode = $get(^WWWDATEN(0,date,YUSER,"VARPreRequisicaoLinha","V","Y"_gridLine_"_"_gridColumnForItemCode,1))
		quit:(gridLine = $$$NULLOREF)
		// If grid line was not deleted, include item code in the list of already included itens:
		if ($get(^WWWDATEN(0,date,YUSER,"VARPreRequisicaoLinha","V","KILLEDRECORD",gridLine)) '= 1) {
			set $piece(listOfItemCodes,Y,gridLine) = itemCode
		}
		set gridLine = $order(^WWWDATEN(0,date,YUSER,"VARPreRequisicaoLinha","V","DISPLAYED",gridLine))
	}
	quit listOfItemCodes
	
	
UpdateATP(pGridRow,pYFELD)
	;-------------------------------------------------------------------------------
	; only update ATP if all required fields & Monthly Consumption
	; 
	; Returns : ATP for form use
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; History :
	; 30-Jun-2009	PPP		SR16814: Added Monthly Consumption  
	;						(removed from OnBlurItem^INReqKitLine as it gets called anyway)
	; 03-Apr-2008	GRF		Coding Standards for parameters
	; 17-Dec-2007	PPP		If the dueDate is null, set it to today (required for ATP) 
	;							otherwise does not include demands for today
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new dteDue,fltATP,fltConsumption
	
	set dteDue = $$$INReqLineDueDate(pYFELD)
	if dteDue = ""	set dteDue = +$horolog
	set fltATP = $$^INATP1($$$INReqLineItem(pYFELD),$$$INReqLineFromStockLocn(pYFELD),$$$INReqLineQtyRequired(pYFELD),dteDue,1)
	do UpdateManualField^COMGridEdit31Interface(pGridRow,6,fltATP)

	// -> Cycle 	1 - Monthly, 2 - Weekly, 3 - Quarterly, 4 - Half Yearly, 5 - Yearly		 	= 1
	// -> History	No of Cycles																= 3
	set fltConsumption = ##class(alSOH.iSOHBalance).GetAvgConsumption($$$INReqLineItem(pYFELD),$$$INReqToLocn($$$GRIDYFELDContainer),1,1)
	do UpdateManualField^COMGridEdit31Interface(pGridRow,11,fltConsumption)
	
	quit
	
OnBlurQuantidade(pintRow,pidField,&pobjPreReqLinha)
	quit:(pidField = "")
	
	if (pidField <= 0) {
		$$$Alert("A quantidade deve ser maior que zero.")
		set $piece(YFELD,Y,3) = ""
	}

	quit	
	
	
	
AtualizaParaNovoStatus()
	;$$AtualizaParaNovoStatus^VARPreRequisicaoLinha()

	;Petik 23/11/2010
	;
	;Rotina para atualizar cada registro da classe Pré-Requisição,
	;alterando o Status para a nova tabela conforme abaixo:
	
	;DE						PARA
	;1 Aberto   			"" (VAZIO)
	;2 Ag. aprovação   		1 Ag. aprovação
	;3 Ag. atendimento   	2 Ag. atendimento
	;4 Atendido   			3 Atendido
	;5 Encerrado 			"Se existir algum registro mostrar mensagem, tratar manualmente"
	
	if $D(^VARTempPreReqAtualizaNovoStatus(0)) {
		W !, "Rotina já foi rodada nesse namespace."
		quit $$$OK
	}
	else{
		set ^VARTempPreReqAtualizaNovoStatus(0) = "Data e Hora da execução: "_$zdatetime($H,4,1)
	}
	
	if $G(YM) = ""{
		do ^WWWVAR
	}
	
	set YBEDOLD = YBED
	
	set YBED = "ATUALIZA_STATUS"
	
	set strStatus = $$$OK
	
	;Insere os parâmetros de STATUSPREREQ
	
	;set ^VARPARA(0,"STATUSPREREQ","PT",1,1) = "Não processado~" 
	set Chave = "STATUSPREREQ"_","_"PT"_","_1
	set strStatus = $$$Save("VARPARA", Chave, "Não processado~", 1)
	if $$$ISERR(strStatus) {
		quit strStatus
	}
	
	if $$$ISOK(strStatus) {
		;set ^VARPARA(0,"STATUSPREREQ","PT",2,1) = "Processado~" 
		set Chave = "STATUSPREREQ"_","_"PT"_","_2
		set strStatus = $$$Save("VARPARA", Chave, "Processado~", 1)
	}


	;Insere os parâmetros de STATUSPREREQLINHA
	
	if $$$ISOK(strStatus) {
		;set ^VARPARA(0,"STATUSPREREQLINHA","PT",1,1) = "Ag. aprovação~" 
		set Chave = "STATUSPREREQLINHA"_","_"PT"_","_1
		set strStatus = $$$Save("VARPARA", Chave, "Ag. aprovação~", 1)
	}

	if $$$ISOK(strStatus) {
		;set ^VARPARA(0,"STATUSPREREQLINHA","PT",2,1) = "Ag. atendimento~" 
		set Chave = "STATUSPREREQLINHA"_","_"PT"_","_2
		set strStatus = $$$Save("VARPARA", Chave, "Ag. atendimento~", 1)
	}
	
	if $$$ISOK(strStatus) {
		;set ^VARPARA(0,"STATUSPREREQLINHA","PT",3,1) = "Atendido~" 
		set Chave = "STATUSPREREQLINHA"_","_"PT"_","_3
		set strStatus = $$$Save("VARPARA", Chave, "Atendido~", 1)
	}
	
	if $$$ISOK(strStatus) {
		;set ^VARPARA(0,"STATUSPREREQLINHA","PT",4,1) = "Cancelado~" 
		set Chave = "STATUSPREREQLINHA"_","_"PT"_","_4
		set strStatus = $$$Save("VARPARA", Chave, "Cancelado~", 1)
	}
	
	if $$$ISOK(strStatus) {
		;set ^VARPARA(0,"STATUSPREREQLINHA","PT",5,1) = "Não aprovado~" 
		set Chave = "STATUSPREREQLINHA"_","_"PT"_","_5
		set strStatus = $$$Save("VARPARA", Chave, "Não aprovado~", 1)
	}
	

	;Se deu algum erro acima, sai da rotina
	if $$$ISERR(strStatus) {
		set YBED = YBEDOLD
		quit strStatus
	}
	

	set cont = 0
	
	set idPreRequisicao = ""
	for {
		set idPreRequisicao = $order(^VARPreRequisicaoLinha(YM,idPreRequisicao))
		quit:idPreRequisicao=""
		quit:'$$$ISOK(strStatus)	

		set Linha=""
		for {
			set Linha = $order(^VARPreRequisicaoLinha(YM,idPreRequisicao,Linha))
			quit:Linha=""
			quit:'$$$ISOK(strStatus)	
		
			set objPreReqLinha = $G(^VARPreRequisicaoLinha(YM,idPreRequisicao,Linha,1))
			if objPreReqLinha = ""{
				set strStatus = "Objeto VARPreRequisicaoLinha não localizado ("_idPreRequisicao_","_Linha_")"
				W !, strStatus
				quit
			}
			
			set StatusAtual = $$$VARPreRequisicaoLinhaStatus(objPreReqLinha)
			set NovoStatus  = ""
			;1 Aberto   			"" (VAZIO)
			;2 Ag. aprovação   		1 Ag. aprovação
			;3 Ag. atendimento   	2 Ag. atendimento
			;4 Atendido   			3 Atendido
			;5 Encerrado 			"Não vai existir registros nesse status"

			if (StatusAtual = 1){
				set NovoStatus = ""
			}
			elseif (StatusAtual = 2){
				set NovoStatus = 1
			}
			elseif (StatusAtual = 3){
				set NovoStatus = 2
			}
			elseif (StatusAtual = 4){
				set NovoStatus = 3
			}
				
			set cont = cont + 1
			;W !, "Reg: "_cont_" ("_idPreRequisicao_","_Linha_") Alterado de: "_StatusAtual_" para: "_NovoStatus
			set $$$VARPreRequisicaoLinhaStatus(objPreReqLinha) = NovoStatus
		
			set ChaveLinha = idPreRequisicao_","_Linha
			set strStatus = $$$Save("VARPreRequisicaoLinha", ChaveLinha, objPreReqLinha, 1)
	
		}	;end for Linha	
		
		if $$$ISERR(strStatus) {
			W !, strStatus
		}

	}	;end for idPreRequisicao

	if $$$ISERR(strStatus) {
		W !, strStatus
	}
	else{
		W !, "Concluído. "_cont_" registros alterados."
	}
	
	set YBED = YBEDOLD
	
	quit strStatus
	
	
CanCancelar(idPreRequisicao)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função GetValorPadraoACancelar^VARPreRequisicaoLinha.mac
    ;-------------------------------------------------------------------------------
	new objPreRequisicao
 
	if ($length($get(idPreRequisicao)) = 0) {
		set objPreRequisicao = ""
	}
	else {
		set objPreRequisicao = $get(^VARPreRequisicao(YM,idPreRequisicao,1))
	}
	do CanCancelarDoc^VARPreRequisicao(idPreRequisicao,objPreRequisicao)
	
	quit	
	
	
	
PrintJS(pobjForm)	
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnAfterDataFields^VARPreRequisicao.MAC
    ;-------------------------------------------------------------------------------	
	write !, "<script language=""javascript"">"
	&js<
	function cancelar() {
		CallBackNow("CancelarOnClickJS^VARPreRequisicaoLinha", idPreRequisicao);
	}
	>
	write !, "</script>"
	quit


CancelarOnClickJS(idPreRequisicao)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função PrintJS^VARPreRequisicaoLinha.MAC
    ;-------------------------------------------------------------------------------	
	set YQ = $$$YQEnable
	do CanCancelar(idPreRequisicao)
	if ($extract(YQ, 1, 1) '= $$$YQEnable) {
		&js<
		    alert('#($piece(YQ, "1", 2))#');
		>
		quit
	}
 
	&js<
	    var motivo = iePrompt('Favor inserir o motivo do cancelamento dos produtos do pedido de transferência:');
		if (motivo) {
			CallBackNow("CancelarOnClick^VARPreRequisicaoLinha", '#(idPreRequisicao)#', motivo);
		}
	> 
	quit



CancelarOnClick(idPreRequisicao, strMotivoCancelamento)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função CancelarOnClickJS^VARPreRequisicaoLinha.MAC
    ;-------------------------------------------------------------------------------	
	new YFORM, YSEITE, intQtdeLinhas, ListaCancelar, blnAlgoACancelar, flagCancelar, i, strStatus,
		strMotivoCancelamentoFormatado
	
	set YFORM = "VARPreRequisicaoLinha"
 
	set blnAlgoACancelar = $$$NO
	set intQtdeLinhas = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","ROWCOUNT"))
	set ListaCancelar = ""
	for i = 1:1:intQtdeLinhas {
		set flagCancelar = +$get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","Y"_i_"_12",1))
		set $piece(ListaCancelar, Y, i) = flagCancelar 
		
		if (flagCancelar = $$$YES) {
			set blnAlgoACancelar = $$$YES
		}
	}
 
	if ('blnAlgoACancelar) {
		$$$StartScript()
		write "alert('É necessário marcar o campo Cancelar de algum dos produtos do pedido de transferência!');"
		$$$EndScript()
	}
	elseif ($length(strMotivoCancelamento) = 0) {
		$$$StartScript()
		write "alert('Entre com o motivo do cancelamento dos produtos do pedido de transferência!');"
		$$$EndScript()
	}
	else {
		if ($length(strMotivoCancelamento, """") = 1) {
			set strMotivoCancelamentoFormatado = strMotivoCancelamento
		}
		else {
			set strMotivoCancelamentoFormatado = ""
			for i = 1:1:$length(strMotivoCancelamento, """") {
				set strMotivoCancelamentoFormatado = strMotivoCancelamentoFormatado_
					$piece(strMotivoCancelamento, """", i)_""""""
			}
		}
 
		set strStatus = $$Transaction^COMTransaction("CancelarTxn^VARPreRequisicaoLinha("""_idPreRequisicao_""","""_ListaCancelar_""","""_strMotivoCancelamentoFormatado_""")", $$$YES)
		if $$$ISOK(strStatus) {
			$$$StartScript()
			write "alert('Produtos do pedido de transferência cancelados com sucesso!');"
			$$$EndScript()
 
			set YFORM = "VARPreRequisicao"
			set YSEITE = 1
			do GoToForm^COMUtilForm(YFORM, idPreRequisicao, 1, $get(YPARA), $$$NO)
		}
		else {
			$$$StartScript()
			write "alert('Erro ao cancelar produtos do pedido de transferência. => "_$$DecodeError^COMUtilError(strStatus)_"');"
			$$$EndScript()
		}
	}
	quit ""


CancelarTxn(pidPreRequisicao, pListaCancelar, pstrMotivoCancelamento)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função CancelarOnClick^VARPreRequisicaoLinha.MAC
    ;-------------------------------------------------------------------------------	
	new idPreRequisicaoLinha, flgCancelar, strStatus, objPedidoCompra
 
	set idPreRequisicaoLinha = ""
	for {
		set idPreRequisicaoLinha = $order(^VARPreRequisicaoLinha(YM,pidPreRequisicao,idPreRequisicaoLinha))
		quit:idPreRequisicaoLinha=""
		
		set flgCancelar = +$piece(pListaCancelar, Y, idPreRequisicaoLinha)
		
		if (flgCancelar > 0) {
			set strStatus = $$CancelarIndividual(pidPreRequisicao, idPreRequisicaoLinha, pstrMotivoCancelamento)
			if $$$ISERR(strStatus) {
				set $zerror = $$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
	 
		}
 
	}	;end for
 
	quit $$$OK


CancelarIndividual(pidPreRequisicao, pidPreRequisicaoLinha, pstrMotivoCancelamento)
	;CancelarIndividual(pidPedidoCompra, pidPedidoCompraLinha, pblnTudo, pblnCancelar, pintQuantidadeACancelar)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função CancelarDoc^VARPreRequisicao.mac
    ;-------------------------------------------------------------------------------
	new objPreRequisicaoLinha, strStatus, flgCancelar, NumRequisicaoGerada
 	
	set objPreRequisicaoLinha   = $get(^VARPreRequisicaoLinha(YM,pidPreRequisicao,pidPreRequisicaoLinha,1))
	
	//set flgCancelar = $$$VARPreRequisicaoLinhaCancelar(objPreRequisicaoLinha)
	
	//if (flgCancelar = $$$YES) {
		set NumRequisicaoGerada = $$$VARPreRequisicaoLinhaNumRequisicaoGerada(objPreRequisicaoLinha)
		
		;Por garantia, se possuir Requisição gerada não cancela o item do pedido de transferência
		if (NumRequisicaoGerada '= "") {
			quit $$$MakeStatus("O produto "_$$$VARPreRequisicaoLinhaCodProduto(objPreRequisicaoLinha)_" não pode mais ser cancelado, pois já foi aprovado.")
		}
		set $$$VARPreRequisicaoLinhaQuantAprovada(objPreRequisicaoLinha)      = 0
		set $$$VARPreRequisicaoLinhaQuantPendente(objPreRequisicaoLinha)      = 0
		set $$$VARPreRequisicaoLinhaStatus(objPreRequisicaoLinha)             = 4	;4-Cancelado
		set $$$VARPreRequisicaoLinhaCancelar(objPreRequisicaoLinha)           = $$$YES
		set $$$VARPreRequisicaoLinhaMotivoCancelamento(objPreRequisicaoLinha) = pstrMotivoCancelamento
		

		set strStatus = $$$Save("VARPreRequisicaoLinha",pidPreRequisicao_$$$COMMA_pidPreRequisicaoLinha,objPreRequisicaoLinha,$$$YES)

 	//}
 
	
	quit strStatus


OnAfterDataFields(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnAfterDataFields^VARPreRequisicao.mac
    ;-------------------------------------------------------------------------------	
	set YOPTION1 = 0
	do CanCancelar($piece(YKEY, YKOMMA, 1))
	if ('YQ) {
		set YOPTION1 = 1
	}
	
 	quit



GetValorPadraoACancelar()
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Torna o campo habilitado quando o grid estiver desabilitado
    ;
    ; Chamado por:
    ;	Campo Valor Padrão do campo (14)-A Cancelar no form VARPreRequisicaoLinha
    ;-------------------------------------------------------------------------------	
	do CanCancelar($piece(YKEY, YKOMMA, 1))
	if ('YQ) {
		set ^CacheTemp(YUSER,"Grid","Enabled") = 1
		set ^CacheTempEvent(YUCI,YFORM,"Format") = 1
	}
	quit ""


OnBeforeFormat(pYFIELDNAME, strText, YFELD)
	;-------------------------------------------------------------------------------
    ; Descrição: 
 	;	Volta os parâmetros alterados em GetValorPadraoACancelar().
    ;
    ; Chamado por:
    ;	NetManager core.
    ;-------------------------------------------------------------------------------
	quit:($length($get(YQ)) = 0)
 
	if ('YQ) {
		set ^CacheTemp(YUSER,"Grid","Enabled") = 0
 		set ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","AUTHORISATION",1) = 5
	}
	set ^CacheTempEvent(YUCI,YFORM,"Format") = 0
	quit	



OnBlurCancelar(&YFELD)
	;-------------------------------------------------------------------------------
    ; Descrição: 
 	;  	Mantém o valor do campo em memória (WWWDATEN).	
    ;
    ; Chamado por:
    ;	Campo ExecuteOnBlur do campo (12)-Cancelar no form VARPreRequisicaoLinha
    ;-------------------------------------------------------------------------------
	if ((+YLFN > 0) && ($length(YLFDAT) > 0)) {
		set $piece(YFELD,Y,YLFN) = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",YLFDAT,1))
	}
	
	quit	

]]></Routine>
</Export>