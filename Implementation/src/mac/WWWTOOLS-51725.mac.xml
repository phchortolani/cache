<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWTOOLS" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWTOOLS
#include COMSYS
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		WWWTOOLS
	;
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 01-Jun-2005	RobertW	SR12056: Attempt at Performance Increase
	; 
	; 03.08.2004	OJR		Das kann man hier nicht benutzen, weil ETOOLS in Namespace
	; 							COMPILE compiliert wird
	; 01.01.2002	OJR		(ojrich) Das ist eine Sammlung von verschiedenen Funktionen
	;-------------------------------------------------------------------------------
	
GETFIELDS(iREF,iFIELDS)
	;-------------------------------------------------------------------------------
	;	OJR;Funktion liefert aus iREF Felder iFIELDS
	;	
	;iREF - kann so z.B. aussehen "YFELD", YFELD="A~B~C~D~E"
	;iFIELDS - kann so z.B. aussehen "1,4,5"
	;Ergebniss kann so aussehen "A~D~E"
	;-------------------------------------------------------------------------------
	NEW QRESULT,YI
	
	SET QRESULT=""
	FOR YI=1:1 QUIT:$PIECE(iFIELDS,",",YI)=""  SET QRESULT=QRESULT_$PIECE($GET(@iREF),Y,+$PIECE(iFIELDS,",",YI))_Y
	QUIT QRESULT       
	
FFCOPY(VON,NACH,WAS)
	;-------------------------------------------------------------------------------
	;Kopieren von Felder
	;Aufruf kann so aussehen D FFCOPY^WWWTOOLS("YFELD","SATZ","1-3,4-6,3-8")
	;Das bedeutet, Feld 1 von YFELD nach Feld 3 von SATZ kopieren ,usw
	;Erhält "WAS" nur keine von-nach-Angabe (1-3,4-6) sondern nur eine
	;von-Angabe, wird als Zielfeld das von-Feld angenommen
	;-------------------------------------------------------------------------------
	NEW YJ,VONNACH,FVON,FNACH
	
	QUIT:'$DATA(@NACH)
	FOR YJ=1:1 SET VONNACH=$PIECE(WAS,",",YJ) QUIT:VONNACH=""  DO
	. SET FVON  = $PIECE(VONNACH,"-",1)
	. SET FNACH = $PIECE(VONNACH,"-",2)
	. SET:FNACH="" FNACH=FVON
	. SET $PIECE(@NACH,Y,FNACH)=$PIECE($GET(@VON),Y,FVON) 
	
	QUIT
	
SBSCRSET(iGLB,iKEY,iFELDNR,iTRENNER,iWERT,iPRFNUM1,iPRFWERT1,iPRFNUM2,iPRFWERT2,iFORMEL,iDIRSPEI,iAFTERSAVE)
	;-------------------------------------------------------------------------------
	; Für alle Sätze in eine Datei ein bestimmtes Feld setzen gleich Wert
	;-------------------------------------------------------------------------------
	NEW GLB,TQ,NKEYS,NGLB,TI,XFORMEL
	
	SET GLB="^"_iGLB_"("_iKEY_")"
	SET NGLB=GLB
	SET TQ=0
	SET NKEYS=$QLENGTH(GLB)
	FOR  QUIT:TQ  DO
	. SET GLB=$QUERY(@GLB)
	. IF GLB="" SET TQ=1 QUIT
	. FOR TI=1:1:NKEYS IF $QSUBSCRIPT(NGLB,TI)'=$QSUBSCRIPT(GLB,TI) SET TQ=1 QUIT  ; alles Sätze sind bearbeitet
	. QUIT:TQ
	. IF $DATA(@GLB)=1 DO
	. . NEW PRFFLAG
	. . SET PRFFLAG=1
	. . IF '$DATA(iFORMEL) DO
	. . . IF $GET(iPRFNUM1)'="",$PIECE(@GLB,iTRENNER,iPRFNUM1)'=$GET(iPRFWERT1) SET PRFFLAG=0  
	. . . IF $GET(iPRFNUM2)'="",$PIECE(@GLB,iTRENNER,iPRFNUM2)'=$GET(iPRFWERT2) SET PRFFLAG=0  
	. . ;
	. . IF $DATA(iFORMEL) DO
	. . . SET XFORMEL="S PRFFLAG="_iFORMEL
	. . . XECUTE XFORMEL
	. . ;
	. . IF PRFFLAG DO
	. . . NEW DATENSATZ
	. . . SET DATENSATZ=@GLB
	. . . SET $PIECE(DATENSATZ,iTRENNER,iFELDNR)=iWERT 
	. . . IF +$GET(iDIRSPEI)=1 SET @GLB=DATENSATZ
	. . . IF +$GET(iDIRSPEI)=0 DO 
	. . . . NEW YFORM,YVOR
	. . . . DO GLBREFDAT^WWWSPEI(GLB,DATENSATZ)
	. . . IF $DATA(iAFTERSAVE) DO @iAFTERSAVE
	
	QUIT
	
SBSCRADD(iGLB,iKEY,iFELDNR,iTRENNER,iWERT,iPRFNUM1,iPRFWERT1,iPRFNUM2,iPRFWERT2,iFORMEL,iDIRSPEI,iAFTERSAVE)
	;-------------------------------------------------------------------------------
	; Für alle Sätze in eine Datei ein bestimmtes Feld mit gleichem Wert versehen
	;-------------------------------------------------------------------------------
	NEW GLB,TQ,NKEYS,NGLB,TI,XFORMEL
	
	SET GLB="^"_iGLB_"("_iKEY_")"
	SET NGLB=GLB
	SET TQ=0
	SET NKEYS=$QLENGTH(GLB)
	FOR  QUIT:TQ  DO
	. SET GLB=$QUERY(@GLB)
	. IF GLB="" SET TQ=1 QUIT
	. FOR TI=1:1:NKEYS IF $QSUBSCRIPT(NGLB,TI)'=$QSUBSCRIPT(GLB,TI) SET TQ=1 QUIT  ; alles Sätze sind bearbeitet
	. QUIT:TQ
	. IF $DATA(@GLB)=1 IF '$FIND($PIECE(@GLB,iTRENNER,iFELDNR),iWERT) DO 
	. . NEW PRFFLAG
	. . SET PRFFLAG=1
	. . IF '$DATA(iFORMEL) DO
	. . . IF $GET(iPRFNUM1)'="",$PIECE(@GLB,iTRENNER,iPRFNUM1)'=$GET(iPRFWERT1) SET PRFFLAG=0  
	. . . IF $GET(iPRFNUM2)'="",$PIECE(@GLB,iTRENNER,iPRFNUM2)'=$GET(iPRFWERT2) SET PRFFLAG=0  
	. . ;
	. . IF $DATA(iFORMEL) DO
	. . . SET XFORMEL="S PRFFLAG="_iFORMEL
	. . . XECUTE XFORMEL
	. . ;
	. . IF PRFFLAG DO
	. . . NEW DATENSATZ
	. . . SET DATENSATZ=@GLB
	. . . SET $PIECE(DATENSATZ,iTRENNER,iFELDNR)=$PIECE(DATENSATZ,iTRENNER,iFELDNR)_iWERT 
	. . . IF +$GET(iDIRSPEI)=1 SET @GLB=DATENSATZ
	. . . IF +$GET(iDIRSPEI)=0 DO 
	. . . . NEW YFORM,YVOR
	. . . . DO GLBREFDAT^WWWSPEI(GLB,DATENSATZ)
	. . . IF $DATA(iAFTERSAVE) DO @iAFTERSAVE
	
	QUIT              
	
MIN(iX,iY) ;Funktion liefert einen Minimalen Wert
	IF iX>iY QUIT iY
	QUIT iX
	
MAX(iX,iY) ;Funktion liefert einen Maximalen Wert
	IF iX>iY QUIT iX
	QUIT iY
	
ANFZ(iSTR) ;Anführungszeichen im String verdoppeln
	NEW ZWVAR,I SET ZWVAR=""
	
	FOR I=1:1:$LENGTH(iSTR,"""") SET $PIECE(ZWVAR,"""""",I)=$PIECE(iSTR,"""",I)
	QUIT ZWVAR
	
KEYNORM(iKEY) ;Hier wird Schlüssel "normalisiert" - alle Einzelfelder mit " versehen
	NEW II,QRESULT,FELD
	
	SET QRESULT=""
	FOR II=1:1 SET FELD=$PIECE(iKEY,",",II) QUIT:FELD=""  DO
	. SET FELD=$$ANFZ(FELD)
	. IF $EXTRACT(FELD)'="""" SET FELD=""""_FELD
	. IF $EXTRACT(FELD,$LENGTH(FELD))'="""" SET FELD=FELD_""""
	. IF QRESULT'="" SET QRESULT=QRESULT_","
	. SET QRESULT=QRESULT_FELD
	
	QUIT QRESULT
	
WWW101(iCLASS,iFELDNR,iWERT)
	;-------------------------------------------------------------------------------
	;löst Relation aus der Texttabelle auf.
	;
	;iCLASS  = Name der Klasse
	;iFELDNR = Nummer des Feldes, für welches die Relation aufgelöst werden soll.
	;iWERT   = Wert des Feldes
	;-------------------------------------------------------------------------------
	QUIT:$GET(iCLASS)="" ""
	QUIT:$GET(iFELDNR)="" ""
	QUIT:$GET(iWERT)="" ""
	
	NEW PRIMKEY
	
	IF $GET(SPRACHE)="" NEW SPRACHE SET SPRACHE="DE"
	IF $GET(Y)=""       NEW Y       SET Y="~"
	SET PRIMKEY=$PIECE($GET(^WWW003(0,iCLASS,iFELDNR,1)),Y,9)
	QUIT:PRIMKEY="" ""
	QUIT $PIECE($GET(@("^WWW101(0,"_PRIMKEY_",iWERT,1)")),Y)
	
WFONT(iCOLOR) ;Font-Tag mit Formularvorgabe
	WRITE "<font "
	SET iCOLOR=$GET(iCOLOR)
	IF iCOLOR'="" WRITE "color="_iCOLOR_" "
	IF $PIECE(YVOR,Y,7)'="" WRITE " size="""_$PIECE(YVOR,Y,7)_""">"
	QUIT
	
FILLL(iVAR,iLEN,iFILLC)
	;-------------------------------------------------------------------------------
	;String-Wert linksseitig mit Fuellzeichen versehen
	;iVAR   = Wert
	;iLEN   = Länge
	;iFILLC = Füllzeichen (optional, Standard=0)
	;-------------------------------------------------------------------------------
	IF iVAR=0,iLEN=0 QUIT ""
	IF $GET(iFILLC)="" SET iFILLC=0
	QUIT $TRANSLATE($JUSTIFY("",iLEN-$LENGTH(iVAR))," ",iFILLC)_iVAR
	
FILLR(iVAR,iLEN,iFILLC)
	;-------------------------------------------------------------------------------
	;String-Wert rechtsseitig mit Fuellzeichen versehen
	;iVAR   = Wert
	;iLEN   = Länge
	;iFILLC = Füllzeichen (optional, Standard=Blank)
	;-------------------------------------------------------------------------------
	IF iVAR=0,iLEN=0 QUIT ""
	IF $GET(iFILLC)="" SET iFILLC=" "
	QUIT iVAR_$TRANSLATE($JUSTIFY("",iLEN-$LENGTH(iVAR))," ",iFILLC)
	
DOFILLL(ioVAR,iLEN,iFILLC)
	;-------------------------------------------------------------------------------
	;wie FILLL, nur wird ein Array gefuellt, Aufruf mit DO!
	;ioVAR  = Wert
	;iLEN   = Länge
	;iFILLC = Füllzeichen
	;-------------------------------------------------------------------------------
	NEW EBENE,EBENEN,RESTZEI,LAENGE,MC,MC1,I,J
	
	SET EBENEN=iLEN\SATZLEN,RESTZEI=iLEN#SATZLEN
	IF RESTZEI SET EBENEN=EBENEN+1
	SET EBENE=$ORDER(ioVAR(""),-1)
	IF EBENE<EBENEN FOR I=1:1:EBENEN-EBENE DO
	.  FOR J=EBENE+I-1:1:1 SET ioVAR(J+1)=ioVAR(J)
	.  SET ioVAR(1)=$$FILLL("",SATZLEN,iFILLC)
	
	SET EBENE=""
	FOR  SET EBENE=$ORDER(ioVAR(EBENE)) QUIT:EBENE=""  SET LAENGE=$GET(LAENGE)+$LENGTH(ioVAR(EBENE))
	SET EBENE=""
	FOR I=1:1:iLEN-LAENGE SET MC=iFILLC FOR  SET EBENE=$ORDER(VAR(EBENE)) QUIT:EBENE=""  DO
	.  IF $LENGTH(ioVAR(EBENE))<SATZLEN SET ioVAR(EBENE)=MC_ioVAR(EBENE) QUIT
	.  SET MC1=$EXTRACT(ioVAR(EBENE),$LENGTH(ioVAR(EBENE)))
	.  SET ioVAR(EBENE)=MC_$EXTRACT(ioVAR(EBENE),1,$LENGTH(ioVAR(EBENE))-1)
	.  SET MC=MC1
	.  IF EBENE'>EBENEN,'$DATA(ioVAR(EBENE+1)) SET ioVAR(EBENE+1)=""
	
	QUIT
	
DOFILLR(ioVAR,iLEN,iFILLC) ;wie FILLR, nur wird ein Array gefuellt, Aufruf mit DO!
	NEW EBENEN,RESTZEI,I
	
	SET EBENEN=iLEN\SATZLEN,RESTZEI=iLEN#SATZLEN
	IF RESTZEI SET EBENEN=EBENEN+1
	FOR I=1:1:EBENEN SET:'$DATA(ioVAR(I)) ioVAR(I)="" SET ioVAR(I)=$$FILLR(ioVAR(I),$SELECT(RESTZEI&(I=EBENEN):RESTZEI,1:SATZLEN),iFILLC)
	QUIT
	
CUTR(ioVAR,iLEN) ;kuerzt Daten in einem Array von rechts
	NEW EBENE,EBENEN,RESTZEI
	
	SET EBENEN  = iLEN\SATZLEN
	set RESTZEI = iLEN#SATZLEN
	IF RESTZEI SET EBENEN = EBENEN+1
	SET EBENE = ""
	FOR  SET EBENE = $ORDER(ioVAR(EBENE),-1) QUIT:(EBENE="")||(EBENE'>EBENEN)  KILL ioVAR(EBENE)
	SET ioVAR(EBENE) = $EXTRACT(ioVAR(EBENE),1,RESTZEI)
	QUIT
	
	
SUBSTR(iSTR,iSALT,iSNEU,iANZ)
	;-------------------------------------------------------------------------------
	; Substring substitution function
	; 
	; Replace first iANZ (pintCount) instances of substring iSALT (pstrOLD) with
	; iSNEU (pstrNEW) in iSTR (pstrText).
	; Replace all instances if iANZ is not specified.
	; 
	; History :
	; 16-Dec-2008	GRF		Doco
	;-------------------------------------------------------------------------------
	new COUNTER,POS,QRESULT
	
	QUIT:$GET(iSTR)="" ""
	QUIT:iSALT="" iSTR
	
	SET iSNEU = $GET(iSNEU)
	SET iANZ  = $GET(iANZ,999999999)
	SET QRESULT = iSTR
	
	SET COUNTER=0
	
	SET POS=1
	FOR  SET POS=$FIND(QRESULT,iSALT,POS) QUIT:(POS=0)||(COUNTER'<iANZ)  DO
	. SET QRESULT = $EXTRACT(QRESULT,1,POS-$LENGTH(iSALT)-1)_iSNEU_$EXTRACT(QRESULT,POS,$LENGTH(QRESULT))
	. SET POS     = POS+$LENGTH(iSNEU)-$LENGTH(iSALT)
	. SET COUNTER = COUNTER+1
	
	QUIT QRESULT
	
	
NOPRINT(iYFORM,iYKEY,iYFKEY,iYBACK) ;wird ein Back-Button gebaut
	NEW BILDER,YKEY,YFKEY,YBACK
	
	WRITE YCR
	WRITE "<style type='text/css' media=""print"">",YCR
	WRITE " .noprint { display:none; }",YCR
	WRITE "</style>",YCR
	WRITE "<div class=""noprint"">",YCR
	SET YBILDER=$PIECE($GET(^WWW012(0,YM,1)),Y,24)
	
	IF +YBILDER'=1 WRITE "<INPUT TYPE=""BUTTON"" VALUE="""_YAM_$$^WWWUML($$^WWWTEXT(99))_""" onClick=""window.location='"
	IF +YBILDER=1  WRITE "<A HREF="""
	WRITE YAKTION_"EP=WWWFORM&amp;YFORM="_iYFORM
	SET YKEY=$GET(iYKEY),YFKEY=$GET(iYFKEY),YBACK=$GET(iYBACK)
	DO ^WWWCGI
	IF +YBILDER'=1 WRITE "'"
	WRITE """>"
	IF +YBILDER=1 WRITE YCR,"<IMG SRC="""_YGIF_"hback.gif"" "_$GET(YHEIGHT)_" "_$GET(YWIDTH)_" ALT="""_$$^WWWTEXT(99)_""" border=0></A>"
	WRITE YCR
	WRITE "</div>"
	WRITE YCR
	QUIT
	
ADDHOR(iH1,iH2)
	;-------------------------------------------------------------------------------
	;Addiert 2 $HOROLOG-Werte und gibt sie wieder im $HOROLOG-Format aus. ;ARI 100702
	;iH1 und iH2 = 1. und 2. Summand
	;
	;Es können auch Werte übergeben werden, die nur Sekunden nach dem Komma enthalten!
	;-------------------------------------------------------------------------------
	SET $PIECE(iH1,",")   = iH1+iH2 ;Tage addieren
	SET $PIECE(iH1,",",2) = $PIECE(iH1,",",2)+$PIECE(iH2,",",2) ;Sekunden addieren
	SET $PIECE(iH1,",")   = iH1+($PIECE(iH1,",",2)\86400)
	SET $PIECE(iH1,",",2) = $PIECE(iH1,",",2)#86400
	QUIT iH1
	
PRSCODE(iPREIS)  ;Preiskodierung
	NEW QRES,II
	
	SET QRES=""
	QUIT:iPREIS="" QRES
	FOR II=1:1:$LENGTH(iPREIS) SET QRES=QRES_$$ZCHCODE^WWWTOOLS($EXTRACT(iPREIS,II))
	QUIT QRES
	
ZCHCODE(iZCH) ;Zeichenkodierung
	SET iZCH=$GET(iZCH)
	IF iZCH="," SET iZCH="KOMMA"
	IF iZCH="." SET iZCH="PUNKT"
	IF iZCH="" QUIT ""
	;ARI 051103 Q $P($G(^WWW100(0,"PREISCODE",SPRACHE,iZCH,1)),Y,1)             
	;ARI 270704 Q $P($G(^WWW101(0,"PREISCODE",SPRACHE,iZCH,1)),Y,1)             
	;Q $$$WWW101gTEXT("PREISCODE",SPRACHE,iZCH)		;		;OJR;3.08.2004;Das kann man hier nicht benutzen, weil ETOOLS in Namespace COMPILE compiliert wird
	QUIT $PIECE($GET(^WWW101(0,"PREISCODE",SPRACHE,iZCH,1)),"~",1)
	
DSPLINI ;Sollte ein Spooler für Etiketten werden. Globalbezeichnung sollte mit E* anfangen ;-)
	KILL ^TDSPL($JOB)
	SET ^TDSPL($JOB)=0
	QUIT
	
DSPLOUT ;
	NEW II
	
	FOR II=1:+$GET(^TDSPL($JOB)) WRITE $GET(^TDSPL($JOB,II))
	QUIT
	
DSPLWR(iSTR)
	IF '$DATA(^TDSPL($JOB)) DO DSPLINI
	SET ^TDSPL($JOB)=^TDSPL($JOB)+1
	SET ^TDSPL($JOB,^TDSPL($JOB))=iSTR
	QUIT
	
BARCODE(iART)
	;-------------------------------------------------------------------------------
	;Erstellt Barcode und gibt HTTP-Pfad und Dateiname zum GIF-Barcode aus
	;
	;	iART = Artikelnummer
	;
	; Returns:File Path
	;
	; History:
	; 05-May-2005	Paul K		Normalised directory
	;-------------------------------------------------------------------------------
	NEW FILE,PATHFILE,BARCTYPE,DATA,CHECKSUM,SIZE,THICKNESS,BARCTEXT,ORIENTATION
	
	SET iART=$$BARCODEART(iART)
	SET FILE="gif"_iART_".gif"
	SET PATHFILE=##Class(%File).NormalizeDirectory($PIECE($GET(^WWW012(0,YM,1)),Y,49))_FILE
	SET BARCTYPE="B25"
	SET DATA=iART
	SET CHECKSUM=0
	SET SIZE=30 ;Hoehe
	SET THICKNESS=1 ;Dehnung
	SET BARCODETEXT="" ;Text im Barcode
	SET ORIENTATION="H"
	DO ^WWWBARC(PATHFILE,BARCTYPE,DATA,CHECKSUM,SIZE,THICKNESS,BARCODETEXT,ORIENTATION)
	QUIT YGIF_FILE
	
BARCODEART(iART)
	;-------------------------------------------------------------------------------
	;Gibt Artikelnummer so zurück, wie sie im Barcode dargestellt wird (ohne Bindestriche)
	;	iART = Artikelnummer
	;-------------------------------------------------------------------------------
	QUIT $TRANSLATE(iART,"-,")
	
WIDTH(iBREITE)
	QUIT:$GET(iBREITE)="" ""
	QUIT " width="""_iBREITE_""" "             
	
COLGR(iWDEFS)
	NEW II
	
	WRITE "<colgroup>",YCR
	SET II=""
	FOR  SET II=$ORDER(iWDEFS(II)) QUIT:II=""  WRITE "<col",$$WIDTH(iWDEFS(II)),">",YCR
	WRITE "</colgroup>",YCR
	QUIT       
	
BACKEXP  ;BackButton mit Explorer-Button
	QUIT:$GET(YBACKBUTTON)=1    ;NUR EINMAL DRUCKEN
	SET YBACKBUTTON=1         ;GEDRUCKT
	DO NOPRINTB
	WRITE "<A class=link onClick=""JavaScript:history.back()"">"_YCR
	WRITE "<img src="_YGIF_"hback.gif border=0 alt="""_$$^WWWTEXT(99)_"""></A>"  ;ZURÜCK
	DO NOPRINTE
	QUIT
	
NOPRINTB
	WRITE YCR
	WRITE "<style type='text/css' media=""print"">"
	WRITE YCR
	WRITE " .noprint { display:none; }"
	WRITE YCR
	WRITE "</style>"
	WRITE YCR
	WRITE "<div class=""noprint"">"_YCR
	QUIT       
	;
	
NOPRINTE
	WRITE YCR
	WRITE "</div>"
	WRITE YCR
	QUIT       
	;
	
HIDFELD(VARNAME,VARWERT) ;Hidden Feld
	QUIT:VARNAME="" ""
	QUIT "<INPUT NAME="""_VARNAME_""" VALUE="""_VARWERT_""" TYPE=HIDDEN>"
	;
	
LZEILE(iZEILE,iMAXZL,iTRENNER,oZEILE) ;Lange Zeilen zerlegen
	;iZEILE - zu zerlegende Zeile
	;iMAXZL - gewünschte breite
	;iTRENNER - z.B " ,.;:-?!"
	;oZEILE - Ergebnis oZEILE(1),oZEILE(2),..., 
	;D LZEILE^WWWTOOLS(MYSTRING,70," ,.;:-?!"_$C(9),.MYSTRINGS)
	NEW I,IZ,MAXL
	SET oZEILE(1)=""
	QUIT:iZEILE=""
	SET IZ=1,I=1
	FOR  QUIT:I>$LENGTH(iZEILE)  DO
	. SET oZEILE(IZ)=$GET(oZEILE(IZ))_$EXTRACT(iZEILE,I)
	. IF $LENGTH(oZEILE(IZ))>iMAXZL DO
	. . NEW J,FL
	. . SET J=$LENGTH(oZEILE(IZ))
	. . SET FL=0
	. . FOR  QUIT:(J=1)||(FL=1)  DO
	. . . SET J=J-1
	. . . SET I=I-1
	. . . SET oZEILE(IZ) = $EXTRACT(oZEILE(IZ),1,$LENGTH(oZEILE(IZ))-1)
	. . . IF $FIND(iTRENNER,$EXTRACT(oZEILE(IZ),$LENGTH(oZEILE(IZ)))) SET IZ=IZ+1,FL=1        ;Trenner gefunden
	. . ;
	. . IF FL'=1 DO             ;kein Trenner gefunden
	. . . SET oZEILE(IZ)=$EXTRACT(iZEILE,I,I+iMAXZL)
	. . . SET I=I+iMAXZL
	. . . SET IZ=IZ+1
	. ;
	. SET I=I+1
	
	QUIT       
	
SAVE
	NEW MSTLEVEL,MSTVARN
	
	SET MSTLEVEL=""
	SET MSTLEVEL=$ORDER(^MMSTACK($JOB,MSTLEVEL),-1)+1
	SET MSTVARN="%"
	FOR  SET MSTVARN=$ORDER(@MSTVARN) QUIT:MSTVARN=""  DO
	. MERGE ^MMSTACK($JOB,MSTLEVEL,MSTVARN)=@MSTVARN
	
	QUIT
	
	
RESTORE
	NEW MSTLEVEL,MSTVARN
	
	SET MSTLEVEL=""
	SET MSTLEVEL=$ORDER(^MMSTACK($JOB,MSTLEVEL),-1)
	QUIT:MSTLEVEL=""
	
	SET MSTVARN=""
	FOR  SET MSTVARN=$ORDER(^MMSTACK($JOB,MSTLEVEL,MSTVARN)) QUIT:MSTVARN=""  DO
	. IF (MSTVARN'="MSTVARN") && (MSTVARN'="MSTLEVEL") DO
	. . KILL @MSTVARN
	. . MERGE @MSTVARN=^MMSTACK($JOB,MSTLEVEL,MSTVARN) 
	. KILL ^MMSTACK($JOB,MSTLEVEL,MSTVARN)
	
	QUIT
	
ROUNDH(iZAHL)    ;Hochrunden
	IF +iZAHL=(+iZAHL\1) QUIT iZAHL\1
	IF +iZAHL>0 QUIT +iZAHL\1+1
	IF +iZAHL<0 QUIT +iZAHL\1-1
	QUIT iZAHL 
	
GETCRLF() ;Liefert das Zeilenende-Zeichen
	IF $ZVERSION["Linux" QUIT $CHAR(10)
	QUIT $CHAR(13,10) 
	
REPEAT(iSTR,iANZ) ;Wiederholt iSTR mehrmals      
	NEW QRES
	
	SET QRES=""
	QUIT:iSTR="" QRES
	QUIT:$GET(iANZ)'>0 QRES
	SET $PIECE(QRES,iSTR,iANZ+1)=""
	QUIT QRES
	
UP2RICHTIG(iSTR)         ;konvertiert "HANS BÖCKLER, NACH LANGE! STRASSE" --> Hans Böckler, Nach Lange Strasse
	NEW QRES,II,FLGROSS
	
	SET QRES=iSTR
	SET FLGROSS=1
	FOR II=1:1:$LENGTH(iSTR) DO
	. IF " ;.!:;?+-/\"[$EXTRACT(QRES,II) SET FLGROSS=1 QUIT
	. IF FLGROSS SET FLGROSS=0 QUIT
	. ;IF 'FLGROSS SET $EXTRACT(QRES,II)=$$^WWWLOW($EXTRACT(QRES,II)) QUIT
	. IF 'FLGROSS SET $EXTRACT(QRES,II)=$zconvert($EXTRACT(QRES,II),"L") QUIT
	
	QUIT QRES
	
FDEFCOPY(iVONCLASSE,iNACHCLASSE,iVON,iBIS,iNACH,iOVER)   ;macht eine KOPIE von Felderdefinitionen
	NEW II,IZIEL
	
	FOR II=iVON:1:iBIS DO
	. SET IZIEL=II-iVON+iNACH
	. IF 'iOVER,$DATA(^WWW002(0,iNACHCLASSE,IZIEL,1)) QUIT
	. IF $DATA(^WWW003(0,iVONCLASSE,II,1)) SET ^WWW003(0,iNACHCLASSE,IZIEL,1)=^WWW003(0,iVONCLASSE,II,1)
	
	QUIT  
	
FFDEFCOPY(iVONFORM,iNACHFORM,iVON,iBIS,iNACH,iOVER,iSEITE,iRELZEILE)   ;macht eine KOPIE von Felderdefinitionen in Formularen
	NEW II,IZIEL
	
	FOR II=iVON:1:iBIS DO
	. SET IZIEL=II-iVON+iNACH
	. IF 'iOVER,$DATA(^WWW122(0,iNACHFORM,IZIEL,1)) QUIT
	. IF $DATA(^WWW122(0,iVONFORM,II,1)) DO 
	. . SET ^WWW122(0,iNACHFORM,IZIEL,1)=^WWW122(0,iVONFORM,II,1)
	. . SET $PIECE(^WWW122(0,iNACHFORM,IZIEL,1),Y,60)=iSEITE
	. . SET $PIECE(^WWW122(0,iNACHFORM,IZIEL,1),Y,3)=$PIECE(^WWW122(0,iNACHFORM,IZIEL,1),Y,3)+iRELZEILE
	
	QUIT  
	
SVARSET(iINFOID,iFELDNAME)       ;Scalarvariable sichern
	QUIT:iINFOID=""
	QUIT:iFELDNAME=""
	QUIT:($DATA(@iFELDNAME)=0)||($DATA(@iFELDNAME)=10)
	SET ^WWWSESSION(0,YUSER,iINFOID,iFELDNAME,1)=@iFELDNAME   
	QUIT
	
SVARGET(iINFOID,iFELDNAME)       ;Scalarvariable wiederherstellen
	QUIT:iINFOID="" ""
	QUIT:iFELDNAME="" ""
	SET @iFELDNAME=$GET(^WWWSESSION(0,YUSER,iINFOID,iFELDNAME,1))
	QUIT
	
SVARKILL(iINFOID,iFELDNAME)      ;Scalarvariable killen
	QUIT:iINFOID="" ""
	QUIT:iFELDNAME="" ""
	KILL ^WWWSESSION(0,YUSER,iINFOID,iFELDNAME,1)
	QUIT
	
SRESTORE(iINFOID)                        ;alle Variable wiederherstellen
	QUIT:iINFOID=""
	NEW FELD
	SET FELD=""
	FOR  SET FELD=$ORDER(^WWWSESSION(0,YUSER,iINFOID,FELD)) QUIT:FELD=""  DO
	. SET @FELD=$GET(^WWWSESSION(0,YUSER,iINFOID,FELD,1))
	
	QUIT
	
SKILL(iINFOID)                   ;alle Variable killen
	QUIT:iINFOID=""
	KILL ^WWWSESSION(0,YUSER,iINFOID)
	QUIT
	
SARSET(iINFOID,iFELDNAME)        ;array sichern
	QUIT:iINFOID=""
	NEW FELD
	
	SET FELD=iFELDNAME
	DO SVARSET(iINFOID,FELD)
	FOR  SET FELD=$QUERY(@FELD) QUIT:FELD=""  DO
	. DO SVARSET(iINFOID,FELD)
	
	QUIT                                       
	
SARGET(iINFOID,iFELDNAME)        ;array wiederherstellen
	QUIT:iINFOID=""
	DO SVARGET(iINFOID,iFELDNAME)
	NEW FELD
	
	SET FELD=iFELDNAME
	FOR  SET FELD=$ORDER(^WWWSESSION(0,YUSER,iINFOID,FELD)) QUIT:$EXTRACT(FELD,1,$LENGTH(iFELDNAME))'=iFELDNAME  DO
	. SET @FELD=$GET(^WWWSESSION(0,YUSER,iINFOID,FELD,1))
	
	QUIT
	
SARKILL(iINFOID,iFELDNAME)       ;array killen
	QUIT:iINFOID=""
	DO SVARKILL(iINFOID,iFELDNAME)
	NEW FELD
	
	SET FELD=iFELDNAME
	FOR  SET FELD=$ORDER(^WWWSESSION(0,YUSER,iINFOID,FELD)) QUIT:$EXTRACT(FELD,1,$LENGTH(iFELDNAME))'=iFELDNAME  DO
	. DO SVARKILL(iINFOID,FELD)
	
	QUIT
	
GETFORMFELD(iFORM,iFELD)
	;-------------------------------------------------------------------------------
	; Gets a form fields for a form.
	;
	; Returns:Field
	;
	; History:
	; 11-Apr-2005	Paul K	Incorrect primary keys for fields
	;-------------------------------------------------------------------------------
	NEW QRES
	
	SET QRES=""
	QUIT:iFORM="" QRES
	QUIT:iFELD="" QRES
	IF $PIECE($GET(^WWW120D(0,iFORM,YM,1)),Y,iFELD)'="" SET QRES=$PIECE($GET(^WWW120D(0,iFORM,YM,1)),Y,iFELD) QUIT QRES
	SET QRES=$PIECE($GET(^WWW120(0,iFORM,1)),Y,iFELD)
	QUIT QRES
	
SETCOMP(iSTR1,iSTR2,iTR1,iTR2)
	;-------------------------------------------------------------------------------
	;Vergleich von 2 Listen : z.B. 1,2,3 und 2,5,6 ergibt 1 - ein Element in beide Listen
	;iTR1,iTR2 - (optional) - Trenner, default = ";"
	;-------------------------------------------------------------------------------
	NEW QRES
	
	SET QRES=0
	SET iTR1=$GET(iTR1,";")
	SET iTR2=$GET(iTR2,";")
	SET iSTR1=$TRANSLATE(iSTR1,iTR1,",")
	SET iSTR2=$TRANSLATE(iSTR2,iTR2,",")
	NEW II
	FOR II=1:1 QUIT:$PIECE(iSTR1,",",II,999)=""  DO
	. IF $FIND(","_iSTR2_",",","_$PIECE(iSTR1,",",II)_",") SET QRES=QRES+1
	
	QUIT QRES          
	
COMPMINMAX(iSTR1,iSTR2,iTR1,iTR2)
	;-------------------------------------------------------------------------------
	;Vergleich von 2 Listen 
	;Ergebnis=1, falls MIN  der ersten Liste >= MAX der zweiten Liste
	;iTR1,iTR2 - (optional) - Trenner, default = ";"
	;-------------------------------------------------------------------------------
	NEW QRES
	
	SET QRES=0
	SET iTR1=$GET(iTR1,";")
	SET iTR2=$GET(iTR2,";")
	SET iSTR1=$TRANSLATE(iSTR1,iTR1,",")
	SET iSTR2=$TRANSLATE(iSTR2,iTR2,",")
	IF $$GETMIN(iSTR2)']]$$GETMAX(iSTR1) SET QRES=QRES+1
	QUIT QRES          
	
GETMIN(iSTR,iTR)         ;Min. Wert aus der Liste
	NEW QRES
	
	SET QRES=""
	SET iTR=$GET(iTR,";")
	SET iSTR=$TRANSLATE(iSTR,iTR,",")
	NEW II,JJ
	FOR II=1:1 QUIT:$PIECE(iSTR,",",II,999)=""  QUIT:QRES'=""  DO
	. IF $PIECE(iSTR,",",II)'="" SET QRES=$PIECE(iSTR,",",II)
	
	QUIT:QRES="" QRES
	
	FOR JJ=II:1 QUIT:$PIECE(iSTR,",",JJ,999)=""  DO
	. IF $PIECE(iSTR,",",JJ)'="",QRES]]$PIECE(iSTR,",",JJ) SET QRES=$PIECE(iSTR,",",JJ)
	
	QUIT QRES
	
GETMAX(iSTR,iTR)         ;Max. Wert aus der Liste
	NEW QRES
	
	SET QRES=""
	SET iTR=$GET(iTR,";")
	SET iSTR=$TRANSLATE(iSTR,iTR,",")
	NEW II,JJ
	FOR II=1:1 QUIT:$PIECE(iSTR,",",II,999)=""  QUIT:QRES'=""  DO
	. IF $PIECE(iSTR,",",II)'="" SET QRES=$PIECE(iSTR,",",II)
	
	QUIT:QRES="" QRES
	FOR JJ=II:1 QUIT:$PIECE(iSTR,",",JJ,999)=""  DO
	. IF $PIECE(iSTR,",",JJ)'="",QRES']]$PIECE(iSTR,",",JJ) SET QRES=$PIECE(iSTR,",",JJ)
	
	QUIT QRES  
	
UMLSTR(iSTR)
	NEW QRES,I
	
	SET QRES=""
	FOR I=1:1:$LENGTH(iSTR) SET QRES=QRES_$$UML($EXTRACT(iSTR,I,I))
	QUIT QRES  
	
UML(iCHAR)
	QUIT $CASE($FIND("äöüÄÖÜ",iCHAR),0:iCHAR,2:"ae",3:"oe",4:"ue",5:"AE",6:"OE",7:"UE")
	
CONVERGL(iSTR)
	QUIT $ZSTRIP($TRANSLATE($$UMLSTR(iSTR),"abcdefghijklmnopqrstuvwxyzäöü","ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ"),"<>W")   
	
HTMLOUT(iLABEL,iFELDNAME,iDUMMYFELD)
	NEW FLAG,II,STR
	
	SET FLAG=0
	SET II=1
	FOR  QUIT:FLAG  DO
	. SET STR=$TEXT(@iLABEL+II)
	. SET STR=$PIECE(STR,";;",2,999)
	. SET STR=$$SUBSTR(STR,"valuefoo",iDUMMYFELD)
	. SET STR=$$SUBSTR(STR,"foo",iFELDNAME)
	. SET STR=$$SUBSTR(STR,"YGIF",YGIF)
	. IF STR="***" SET FLAG=1
	. IF STR'="***" WRITE STR,YCR
	. SET II=II+1
	
	QUIT
	
TEXTOUT(iLABEL)
	NEW FLAG,II,STR
	
	SET FLAG=0
	SET II=1
	FOR  QUIT:FLAG  DO
	. SET STR=$TEXT(@iLABEL+II)
	. SET STR=$PIECE(STR,";;",2,999)
	. IF STR="***" SET FLAG=1
	. IF STR'="***" WRITE STR,YCR
	. SET II=II+1
	
	QUIT       
	
HTMLEDIT(iFELDNAME,iDUMMYFELD)
	DO HTMLOUT("HTMLTEXT1",iFELDNAME,iDUMMYFELD)
	WRITE YCR,"<option value="""""
	WRITE "></option>"
	
	NEW YVAR,YA
	
	SET YVAR=""
	FOR  SET YVAR=$ORDER(^WWW100(0,"SCHRIFTART",SPRACHE,YVAR)) QUIT:YVAR=""  DO
	. SET YA=$PIECE($GET(^WWW100(0,"SCHRIFTART",SPRACHE,YVAR,1)),1)
	. WRITE YCR,"<option value="""_YA_""""
	. WRITE ">"_YA_"</option>"
	
	DO HTMLOUT("HTMLTEXT3",iFELDNAME,iDUMMYFELD)
	WRITE YCR,"<option value="""""
	WRITE "></option>"
	NEW YVAR,YA
	SET YVAR="" FOR  SET YVAR=$ORDER(^WWW100(0,"SCHRIFTGRAD",SPRACHE,YVAR)) QUIT:YVAR=""  DO
	. SET YA=$PIECE($GET(^WWW100(0,"SCHRIFTGRAD",SPRACHE,YVAR,1)),1)
	. WRITE YCR,"<option value="""_YA_""""
	. WRITE ">"_YA_"</option>"
	
	DO HTMLOUT("HTMLTEXT2",iFELDNAME,iDUMMYFELD)
	QUIT
	
HTMLTEXT1
	;;<SCRIPT LANGUAGE = "JavaScript">
	;;<!--
	;; window.setTimeout("copypropfoo()",350);
	;; function copypropfoo(){
	;;  foo.innerHTML=document.WWW.valuefoo.value;
	;;  foo.tabIndex=document.WWW.valuefoo.tabIndex; 
	;;  foo.onhelp=document.WWW.valuefoo.onhelp;
	;;  foo.setAttribute('onmouseover',document.WWW.valuefoo.getAttribute('onmouseover'),'true');
	;;  foo.setAttribute('onmouseout',document.WWW.valuefoo.getAttribute('onmouseout'),'true');
	;;  foo.setAttribute('onkeypress',document.WWW.valuefoo.getAttribute('onkeypress'),'true');
	;;  foo.setAttribute('onclick',document.WWW.valuefoo.getAttribute('onkeypress'),'true');
	;; }
	;;  function ctcb(ttc) // copy to clipboard (text to copy)
	     ;; {
	     ;;    document.WWW.board.value = ttc;
	     ;;    document.WWW.board.select();
	     ;;    document.WWW.board.createTextRange().execCommand("Copy");
	     ;;  }
	;;//-->
	;;</SCRIPT>
	;;<div unselectable="on" align=center style="height:250; width:610; background-color:lightgray; border:none lightgray">
	;;  <div id=foo wrap contenteditable align=left valign=top
	;;   onBlur='document.WWW.valuefoo.value=foo.innerHTML;'
	;;   style="height:220; width:99%;background-color:white; font-face:Arial; padding:3;
	;;   border:inset lightgray; scrollbar-base-color:lightgray; overflow=auto;">
	;;  </div>
	;;  <table class="coolBar" BORDER=0 NOWRAP cellspacing=0 width=100%>
	;;  <tr>
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFbold.gif" ALIGN=ABSBOTTOM ALT="Fett" border=0 
	;;  onclick='document.execCommand("Bold");foo.focus();'></td>
	;;  
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFitalic.gif" ALIGN=ABSBOTTOM ALT="Kursiv" border=0 
	;;  onclick='document.execCommand("Italic");foo.focus();'></td>
	;;  
	;;  <td width=10 class="coolButton">
	;;  <img SRC="YGIFunderline.gif" ALIGN=ABSBOTTOM ALT="Unterstrichen" border=0 
	;;  onclick='document.execCommand("Underline");foo.focus();'></td>
	;;  
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFStrikethrough1.gif" ALIGN=ABSBOTTOM ALT="Durchgestrichen" border=0 
	;;  onclick='document.execCommand("StrikeThrough");foo.focus();'></td>
	;;  
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFSuperscript1.gif" ALIGN=ABSBOTTOM ALT="Hochgestellt" border=0 
	;;   onclick='document.execCommand("SuperScript");foo.focus();' ></td>
	;;  
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFSubscript1.gif" ALIGN=ABSBOTTOM ALT="Tiefgestellt" border=0 
	;;   onclick='document.execCommand("SubScript");foo.focus();' ></td>
	;;  
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFNumlist1.gif" ALIGN=ABSBOTTOM ALT="Nummerierung" border=0 
	;;   onclick='document.execCommand("InsertOrderedList");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFBullist1.gif" ALIGN=ABSBOTTOM ALT="Aufzählung" border=0 
	;;   onclick='document.execCommand("InsertUnorderedList");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFinindent1.gif" ALIGN=ABSBOTTOM ALT="Einzug vergrößern" border=0 
	;;   onclick='document.execCommand("Indent");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFoutdent1.gif" ALIGN=ABSBOTTOM ALT="Einzug verkleinern" border=0 
	;;   onclick='document.execCommand("Outdent");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFleft1.gif" ALIGN=ABSBOTTOM ALT="Linksbündig" border=0 
	;;   onclick='document.execCommand("JustifyLeft");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFcenter1.gif" ALIGN=ABSBOTTOM ALT="Zentriert" border=0 
	;;   onclick='document.execCommand("JustifyCenter");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFright1.gif" ALIGN=ABSBOTTOM ALT="Rechtsbündig" border=0 
	;;   onclick='document.execCommand("JustifyRight");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFcut.gif" ALIGN=ABSBOTTOM ALT="Ausschneiden" border=0 
	;;   onclick='document.execCommand("Cut");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFcopy.gif" ALIGN=ABSBOTTOM ALT="Kopieren" border=0 
	;;   onclick='document.execCommand("Copy");foo.focus();' ></td>
	;;   
	;;  <td width=10 class="coolButton">
	;;  <img unselectable="On" SRC="YGIFPaste.gif" ALIGN=ABSBOTTOM ALT="Einfügen" border=0 
	;;   onclick='document.execCommand("Paste");foo.focus();' ></td>
	;;   
	;;  </tr>
	;;  </table>
	;;  <table class="coolBar" BORDER=0 NOWRAP cellspacing=0 width=100%>
	;;  <tr>
	;;  <td width="50%">
	;;  <select name="fooSCHRIFTART"
	;;   style="padding-top:0; padding-bottom:0; background-color:lightgray; border-color:lightgray; "
	;;   onChange='document.execCommand("FontName",false,String.fromCharCode(34)+this.value+String.fromCharCode(34));foo.focus' >  
	;;***
	
HTMLTEXT3
	;;</select>  
	;;  </td>
	;;  <td width="50%">
	;;  <select  name="fooSCHRIFTGRAD"
	;;   style="padding-top:0; padding-bottom:0; background-color:lightgray; border-color:lightgray; "
	;;   onChange='document.execCommand("FontSize",false,this.value);foo.focus' >  
	;;***
	
HTMLTEXT2
	;;</select>
	;;  </td>
	;;  </tr>
	;;  </table>
	;;</div>
	;;<br>
	;;***
	
	
VONBIS(iWERT,iVON,iBIS)          ;Liefert 1, falls iWERT passt zwischen iVON und iBIS
	SET iVON = $GET(iVON)
	SET iBIS = $GET(iBIS)
	
	QUIT:iWERT=iVON 1
	QUIT:iWERT=iBIS 1
	QUIT:(iWERT]iVON)&&(iBIS]iWERT) 1
	QUIT:(iWERT]iVON)&&(iBIS="") 1
	QUIT:(iVON="")&&(iBIS]iWERT) 1
	QUIT 0     
	
VONBISA(iWERT,iVON,iBIS)                 ;Liefert 1, falls iWERT passt zwischen iVON und iBIS (mit ]] Vergleich)
	SET iVON = $GET(iVON)
	SET iBIS = $GET(iBIS)
	QUIT:iWERT=iVON 1
	QUIT:iWERT=iBIS 1
	QUIT:(iWERT]]iVON)&&(iBIS]]iWERT) 1
	QUIT:(iWERT]]iVON)&&(iBIS="") 1
	QUIT:(iVON="")&&(iBIS]]iWERT) 1
	QUIT 0
	
	
EMPTY(iWERT) ;Prueft iWERT auf Leerstring und gibt in diesem Fall &nbsp; aus, sonst iWERT
	QUIT $SELECT(iWERT="":"&nbsp;",1:iWERT)
	
COMPSATZ(iSATZ1,iSATZ2,iFIELDS,iOPTION,iMAXUNT)
	;-------------------------------------------------------------------------------
	;Zwei Datensätze vergleichen (nur angegebene Felder)    
	;iOPTION =0 - genau
	;iOPTION =1 - UMLAUTE UND ALLES GROSS GESCHRIEBEN, LEERZEICHEN ENTFERNEN AM ANFANG UND ENDE
	;iOPTION =2 - UMLAUTE UND ALLES GROSS GESCHRIEBEN und nur alphanummeriche (für Telephone usw)
	;iFIELDS = z.B . "1;5;18"
	;iMAXUNT = maximale Anzahl unterschieden
	;Liefert Anzahl von unterschiedlichen Werten
	;-------------------------------------------------------------------------------
	NEW QRES,II,FELDNR
	
	SET iMAXUNT = $GET(iMAXUNT,999)
	SET QRES    = 0
	SET iOPTION = +$GET(iOPTION)
	FOR II=1:1 SET FELDNR=$PIECE(iFIELDS,";",II) QUIT:(FELDNR="")||(QRES=iMAXUNT)  DO
	. IF (iOPTION=0) && ($PIECE(iSATZ1,Y,FELDNR)'=$PIECE(iSATZ2,Y,FELDNR))                         SET QRES=QRES+1 QUIT
	. IF (iOPTION=1) && ($$CONVERGL($PIECE(iSATZ1,Y,FELDNR))'=$$CONVERGL($PIECE(iSATZ2,Y,FELDNR))) SET QRES=QRES+1 QUIT
	. IF (iOPTION=2) && ($$CONVERGL($ZSTRIP($PIECE(iSATZ1,Y,FELDNR),"*PC"))'=$$CONVERGL($ZSTRIP($PIECE(iSATZ2,Y,FELDNR),"*PC"))) SET QRES=QRES+1 QUIT
	
	QUIT QRES
	
ISMEMOLEER(iTEXT) ;ARI 140404 Fuer Memo-Felder gibt's jetzt die Routine EUPMEMO
	QUIT $$ISEMPTY^WWWMEMO(iTEXT)
	
HTMLMEMO(iWERT,iCRLF,iLINES,iTR) ;Gibt ein @net-Memo-Feld im HTML-Format zurueck
	;OJR;15.04.2004;Sonst bekommt man ein Fehler in INDMVARTLIST
	;Q $$TOHTML^WWWMEMO(iWERT,iCRLF,iLINES,iTR) ;ARI 140404
	QUIT $$TOHTML^WWWMEMO(iWERT,+$GET(iCRLF),+$GET(iLINES),$GET(iTR,"<br>")) ;ARI 140404
	
MEMOTOP(iWERT,iZEILEN,iMAXCHAR) ;Gibt aus einem Memo-Feld in iWERT nur iZEILEN und je Zeile maximal iMAXCHAR Zeichen zureuck
	QUIT $$TOP^WWWMEMO(iWERT,iZEILEN,iMAXCHAR) ;ARI 140404
	
ADDMEM(iMEMFELD,iSTR)    ;Addiert String zu dem Inhalt von einem memory-feld
	QUIT $$ADD^WWWMEMO(iMEMFELD,iSTR) ;ARI 140404
	
PLZTEST(iPLZ1,iPLZ2,iPLZVON,iPLZBIS,iLIGNORE) ;Liefert 1, falls PLZ passt zu von-bis
	;iLIGNORE - Länge ignorieren
	QUIT $$PLZTESTM(iPLZ1,iPLZVON,iPLZBIS,$GET(iLIGNORE))||(iPLZ2'=""&$$PLZTESTM(iPLZ2,iPLZVON,iPLZBIS,$GET(iLIGNORE)))       
	
PLZTESTM(iPLZ,iVON,iBIS,iLIGNORE)
	;iLIGNORE - Länge ignorieren
	IF iPLZ="",iVON=""          QUIT 1
	IF iVON="",iBIS=""          QUIT 1
	IF (iPLZ=iVON)||(iPLZ=iBIS) QUIT 1
	IF iBIS="",iPLZ'<iVON       QUIT 1
	IF iPLZ'<iVON,iPLZ'>iBIS,(($LENGTH(iPLZ)=$LENGTH(iBIS))||(+$GET(iLIGNORE)=1)) QUIT 1
	QUIT 0     
	
GETENVVAR(iVAR) ;Gibt Betriebssystem-Umgebungs-Variable iVAR zurueck
	QUIT:$GET(iVAR)="" ""
	NEW VALUE,OLDIO,IO
	
	SET IO=""
	IF $ZVERSION["Windows" SET IO="echo %"_iVAR_"%"
	IF $ZVERSION["Linux"   SET IO="echo $"_iVAR
	QU]]><![CDATA[IT:IO="" ""
	SET OLDIO=$IO
	OPEN IO:"Q"
	USE IO READ VALUE
	CLOSE IO
	USE OLDIO
	IF $ZVERSION["Windows" IF VALUE=("%"_iVAR_"%") SET VALUE="" ;Variable ist im Betriebssystem nicht definiert
	QUIT VALUE
	
RUNCMD(iCMD,iSTREAM) ;
	;-------------------------------------------------------------------------------
	;iCMD    = das auszufuehrende Kommando z. B. dir C:\
	;iSTREAM = (optional)
	;          1 = Rueckgabe in einem Stream. Es wird ein Objekt vom Typ %GlobalCharacterStream geliefert.
	;          0 = (Standard) Ausgabe auf das aktuelle Device
	;-------------------------------------------------------------------------------
	QUIT:$GET(iCMD)="" ""
	
	SET iSTREAM=+$GET(iSTREAM)
	NEW OLDIO,EOFART,PIPE,STREAM
	SET IO=""
	SET OLDIO=$IO
	SET EOFART=$ZUTIL(68,40)
	IF $ZUTIL(68,40,1)
	SET PIPE=iCMD
	OPEN PIPE:"Q"
	IF 'iSTREAM FOR  USE PIPE READ *ZEILE QUIT:$ZEOF  USE OLDIO WRITE $CHAR(ZEILE)
	IF iSTREAM DO
	.  SET STREAM=##class(%Library.GlobalCharacterStream).%New()
	.  FOR  USE PIPE READ *ZEILE QUIT:$ZEOF  DO STREAM.Write($CHAR(ZEILE))
	
	CLOSE PIPE
	IF $ZUTIL(68,40,EOFART)
	USE OLDIO
	IF iSTREAM QUIT STREAM
	QUIT
	
SCRPTAL(iTEXT)   ;Script-Alert
	;WRITE YCR,"<script language=""JavaScript"">"
	;WRITE YCR,"<!--"
	$$$StartScript()
	WRITE YCR,"alert("""_iTEXT_""");"
	$$$EndScript()
	;WRITE YCR,"//-->",YCR,"</script>"
	QUIT
	
CMPSATZ(iSATZ1,iTR1,iSATZ2,iTR2,iFELDER,iTRF,iDATEI1,iDATEI2)
	;-------------------------------------------------------------------------------
	;vergleicht zwei Datensätze - nur iFelder (z.B. "2-1;23-23;45-2") und liefert , was nicht gleich ist
	;z.B. iSATZ1   "1~2~3~4~5"
	;     iSATZ2   "1~7~2~8~9"
	;     iFELDER  "1;2-3;5-4"
	;     Ergebnis "5-4"
	;     iTR1,iTR2,iTRF - Trennzeichen z,B. iTR1=Y,iTR2=Y,iTRF=;
	; 06-Jan-2011	GRF		SR17579: Use explicit tag
	;-------------------------------------------------------------------------------
	NEW QRES,I,iFELD,IFELD1,IFELD2,WERT1,WERT2,TYP
	
	SET QRES=""
	FOR I=1:1 QUIT:$PIECE(iFELDER,iTRF,I,9999)=""  DO
	. SET IFELD=$PIECE(iFELDER,iTRF,I)
	. QUIT:IFELD=""
	. SET IFELD1=$PIECE(IFELD,"-",1)
	. SET IFELD2=$PIECE(IFELD,"-",2)
	. IF IFELD2="" SET IFELD2=IFELD1
	. SET WERT1=$PIECE(iSATZ1,iTR1,IFELD1)
	. SET WERT2=$PIECE(iSATZ2,iTR2,IFELD2)
	. IF $GET(iDATEI1)'="" DO
	. . SET TYP=$PIECE($GET(^WWW003(0,iDATEI1,IFELD1,1)),Y,3)
	. . IF TYP'="" SET WERT1=$$GetInternal^WWWTR(TYP,$$GetLiteral^WWWTR(TYP,WERT1))
	. . IF (TYP=8)||(TYP=12) SET WERT1=+WERT1
	. . ;IF TYP=3 SET WERT1=$$DELNACH^EUPFORM(WERT1,"|")
	. ;
	. IF $GET(iDATEI2)'="" DO
	. . SET TYP=$PIECE($GET(^WWW003(0,iDATEI2,IFELD2,1)),Y,3)
	. . IF TYP'="" SET WERT2=$$GetInternal^WWWTR(TYP,$$GetLiteral^WWWTR(TYP,WERT2))
	. . IF (TYP=8) || (TYP=12) SET WERT2=+WERT2
	. . ;IF TYP=3 SET WERT2=$$DELNACH^EUPFORM(WERT2,"|")
	. ;
	. IF WERT1'=WERT2 SET QRES=QRES_$SELECT(QRES'="":iTRF,1:"")_IFELD1_"-"_IFELD2
	
	QUIT QRES          
	
KRYPTPASS(iPASS)
	KILL ^rINC("WWWBUILD1")
	SET ^rINC("WWWBUILD1",0,1)="#DEFINE PWD """_$$^WWWKRYP(iPASS,2)_""""
	QUIT 1 
	
TAUSCH(i1,i2)
	NEW IT
	
	SET IT=i2
	SET i2=i1
	SET i1=IT
	QUIT
	
ADDOPT(iSTR,iOPT)        ;Option hinzufügen
	DO INSERT^WWWPLIST(.iSTR,iOPT,1)
	QUIT iSTR
	;ARI 300504 In der Routine EUPLIST sind alle Listen-Operationen vereint
	IF $FIND(","_iSTR_",",","_iOPT_",") QUIT iSTR
	QUIT:iSTR="" iOPT
	QUIT iSTR_","_iOPT 
	
DELOPT(iSTR,iOPT)        ;Option entfernen
	DO DELETE^WWWPLIST(.iSTR,iOPT)
	QUIT iSTR
	
	;ARI 300504 In der Routine EUPLIST sind alle Listen-Operationen vereint
	NEW QRES
	SET QRES=$$SUBSTR(iSTR,","_iOPT_",",",")
	SET QRES=$$SUBSTR(QRES,","_iOPT)
	SET QRES=$$SUBSTR(QRES,iOPT_",")
	SET QRES=$$SUBSTR(QRES,iOPT)
	QUIT QRES
	
UMSORT(iSRC,iDST,iWAS)
	;-------------------------------------------------------------------------------
	;baut Globals um
	;
	;iSRC - komplette Reference, z.B. "^GLOBAL(0,1,2,3)"
	;iDST - Name von Zielglobal, z.B. "^TEST", oder "^TEST(55"
	;iWAS - beschreibt, was wird vertauscht, z.B. "1-3,2-1,3-4,4-2
	;               D5-2 - Datenfeld 5 nach subscript 2,CTEST-3 - Wert "TEST" nach subscript 3
	;Als Ergebnis bekommt man z.B. als Wert von Knoten ^TEST(1,3,0,2) gleich Wert von Knoten ^GLOBAL(0,1,2,3)   
	;-------------------------------------------------------------------------------
	NEW ARR,YJ,VONNACH,FVON,FNACH,ZIEL,ZEICH
	
	FOR YJ=1:1 SET VONNACH=$PIECE(iWAS,",",YJ) QUIT:VONNACH=""  DO
	. SET FVON=$PIECE(VONNACH,"-",1)
	. SET FNACH=$PIECE(VONNACH,"-",2)
	. SET:FNACH="" FNACH=FVON
	. IF $EXTRACT(FVON)'="D",$EXTRACT(FVON)'="C" SET ARR(FNACH) = $QSUBSCRIPT(iSRC,FVON)
	. IF $EXTRACT(FVON)="D"                      SET ARR(FNACH) = $PIECE(@iSRC,Y,$EXTRACT(FVON,2,999))  ;Feldwert
	. IF $EXTRACT(FVON)="C"                      SET ARR(FNACH) = $EXTRACT(FVON,2,999)                  ;constant
	
	SET ZIEL=iDST
	SET ZEICH="("
	IF $FIND(iDST,"(") SET ZEICH=","
	SET FNACH=""
	FOR  SET FNACH=$ORDER(ARR(FNACH)) QUIT:FNACH=""  DO
	. SET ZIEL=ZIEL_ZEICH_""""_$$SUBSTR(ARR(FNACH),"""","""""")_""""
	. SET ZEICH=","
	
	SET ZIEL=ZIEL_")"
	SET @ZIEL=@iSRC
	QUIT 
	
BACKCLR(iBACK)		;OJR;25.06.2004;YBACK bereinigen
	NEW II,QRES
	
	SET QRES=""
	QUIT:iBACK="" QRES
	
	SET QRES=$PIECE(iBACK,",",1)_","
	FOR II=2:1:$LENGTH(iBACK,",") DO
	. IF $PIECE(iBACK,",",II)="" QUIT
	. IF $PIECE(iBACK,",",II)'=$PIECE(QRES,",",$LENGTH(QRES,",")-1) SET QRES=QRES_$PIECE(iBACK,",",II)_"," 
	
	QUIT QRES
	
]]></Routine>
</Export>