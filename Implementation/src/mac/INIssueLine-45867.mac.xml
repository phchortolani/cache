<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INIssueLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INIssueLine
#include COMGridEdit31
#include COMSYS
#include INConst
#include %occInclude
	
#define DELIM	$char(31)
	;-------------------------------------------------------------------------------
	; History
	; 12-Feb-2009	GRF		SR16281: Replace $$$ManFld... with $$$FORMFld...;
	;							Replace $$$Fld... with $$$FORMFld... when needing to
	;							specify the form field number rather than the class
	;							field number - even if they are the same.
	; 06-Feb-2009	GRF		SR16328: ManFldINIssueLine rather than ManFldINIssue
	;							throughout
	;-------------------------------------------------------------------------------
#define FORMFldINIssueLineFromStorage	 4
#define FORMFldINIssueLineQtyIssued		 6
#define FORMFldINIssueLineItem			 7
#define FORMFldINIssueLineUnit			 8
#define FORMFldINIssueLineBOH			 9
#define FORMFldINIssueLineBundle		10
#define FORMFldINIssueLineLotNo			11

	
	;+++++++++++++++++++++++++++++++++++++++
	;	Form : INIssueLine
	;	
	;	After Primary Key			: do OnAfterPrimaryKey^INIssueLine(YM,YFORM,YKEY,YFELD)
	;	After Data Fields			: do OnAfterDataFields^INIssueLine(YM,YFORM,YKEY,YFELD)
	;	Before Deletion Data Record	: do OnBeforeDelete^INIssueLine(YM,YFORM,YKEY,YFELD)
	;	
	;	Manual Fields		Initialise to
	;	  9		BOH				QOH
	;	 11		Lot No			strBundleValues
	;	
	;+++++++++++++++++++++++++++++++++++++++
	
IsFirmable()
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 05-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	; TODO : ???
	quit $$$OK
	
	
OnBeforeDelete(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 04-Jun-2009	PPP		SR16544 : Additional processing not Required.
	; 24-Jan-2008	HQN		SR15625 Changed class signature dINIssueLine to dUIssueLine
	; 05-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	quit
	
	
OnBlurItem(pintRow,pidItem,&pobjYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 03-Nov-2009	DWR		SR16983: dont do LoadUnitOfMeasuresList - deprecated
	; 							now use OnBeforeDisplayCombo
	; 12-Feb-2009	GRF		SR16281: parameter pidField is actually the contents of
	;							the item field - renamed as pidItem
	; 17-Oct-2007	HQN		SR15598: Created
	;-------------------------------------------------------------------------------
	if (pidItem '= "") {
		set $$$INIssueLineUnit(pobjYFELD) = $$$INARTUnitofMeasure($get(^INART(0,pidItem,1)))
	}
	quit
	
	
OnBeforeDisplayCombo(pstrKeys,pobjIss,pintCol,&pSUCH)
	;-------------------------------------------------------------------------------
	; Populates the Unit with the UOM as defined in INARTPACK only, excludes
	; units that the item does not come in.
	; 
	; set pSUCH as the items to be used when you override the list (set via blnOverride)
	;
	; Called By: COMGridEdit executable
	; 
	; Inputs:
	;	pstrKeys		YKEY
	;	pobjSummary		YFELD
	; 
	; Returns: $$$YES or $$$NO (override the data) 
	;
	; History:
	; 15-Jul-2011	GRF		SR17669: Call common code
	; 03-Nov-2009	DavidR	SR16983: Created
	;-------------------------------------------------------------------------------
	new blnOverride,enumLineType,enumUnit,idClassField,idItem

	set blnOverride = $$$NO
	
	; Unit
	;---------------------------------------
	if pintCol = $$$FORMFldINIssueLineUnit {      ; SR17669 vvv
		set blnOverride = $$LoadCombo^INARTPACK($$$INIssueLineItem(pobjIss),blnOverride,.pSUCH)
	}
	quit blnOverride
	/*
	if pintCol = $$$FORMFldINIssueLineUnit  {
		kill pSUCH
		set pSUCH  = "SUCH"
		set idItem = $$$INIssueLineItem(pobjIss)
		if idItem '= "" {
			set enumUnit = ""
			for {
				set enumUnit = $order(^INARTPACK(0,idItem,enumUnit))
				quit:enumUnit=""
				
				set pSUCH(enumUnit) = enumUnit
			}
			set blnOverride = $$$YES
		}
	}
	quit blnOverride
	*/                                           ; SR17669 ^^^
	
	
OnBlurQtyIssued(pintRow,pstrValue,&pobjYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;	pintRow				GROW
	;	pstrValue			YINHALT		Not used
	;	pobjYFELD	ByRef	YFELD	
	;
	; ByRef :
	;		YFORM				
	;		YKEY				Key of current blurred record
	;		GCOL				Current Grid Column...which is this field
	;		YFONTCOLOR
	;		YBACKGROUNDCOLOR
	;		YTOOLTIP
	; 
	; Returns :
	;
	; History :
	; 05-Mar-2013	SCR		HEVA-811: Check Summary Qty
	; 27-Jan-2009	GRF		SR16281: don't keep recalculating ThisLine
	; 25-Sep-2008	GRF		SR15932: variable prefixes - coding standards
	; 16-May-2008	HQN		SR15752: Corrected lookup of deleted copied lines for qty
	;						replaced ^WWWDATEN calls with $$$WWWDATEN macro
	; 15-May-2008	Luke	Added news
	; 15-May-2008	HQN		SR15728: Check copied lines for Qty exceeding
	;							dStockBundle.QtyOnHand
	; 17-Oct-2007	HQN		SR15598: Created
	;-------------------------------------------------------------------------------
	new idIssueLine,idThisLine,strIssueLine,idSumLine,fltQty
	
	do ScreenUpdateStyle^COMGridEdit31S("Y"_pintRow_"_"_GCOL)
	set idThisLine 	= $$$KEY2(YKEY)
	set idSumLine	= idThisLine\1  ; HEVA-811
	set fltQty		= 0 ; HEVA-811
	quit:'$data(^INIssueSummary(YM,$$$KEY1(YKEY),idSumLine)) $$$OK 
	//Manually Update Styles without triggering cell updates
	set idIssueLine = ""
	for {
		set idIssueLine =  $order($$$WWWDATEN("REFERENCEROW",idIssueLine))
		quit:(idIssueLine = "")
		continue:($get($$$WWWDATEN("KILLEDRECORD",$get($$$WWWDATEN("REFERENCEROW",idIssueLine,1))))=1)
		set strIssueLine = $$$GRIDGetYFELD(idIssueLine)
		; HEVA-811 vvvv
		continue:idSumLine'=(idIssueLine\1)
		set fltQty = fltQty +  $$$INIssueLineQtyIssued(strIssueLine)
	}
	if $$$INIssueLineQtyRequired(pobjYFELD)'=fltQty {
		set YFONTCOLOR       = "red"           
		set YBACKGROUNDCOLOR = "yellow"
		set YTOOLTIP         =  $$$Text($listbuild("IN01401",$$$INIssueLineQtyRequired(pobjYFELD)))  ;Pick Quantity dose not equal Reviewed Quantity %1
	} else {
		set YFONTCOLOR       = ""            
		set YBACKGROUNDCOLOR = ""
		set YTOOLTIP         = ""
		
	}
	set idIssueLine = ""
	for {
		set idIssueLine =  $order($$$WWWDATEN("REFERENCEROW",idIssueLine))
		quit:(idIssueLine = "")
		continue:(idIssueLine = idThisLine) ; Skip current line
		continue:($get($$$WWWDATEN("KILLEDRECORD",$get($$$WWWDATEN("REFERENCEROW",idIssueLine,1))))=1)
		
		set strIssueLine = $$$GRIDGetYFELD(idIssueLine)
		continue:idSumLine'=(idIssueLine\1)
		;continue:($$$INIssueLineItem(strIssueLine)        '= $$$INIssueLineItem(pobjYFELD))
		;continue:($$$INIssueLineFromStorage(strIssueLine) '= $$$INIssueLineFromStorage(pobjYFELD))
		;continue:($$$INIssueLineBundle(strIssueLine)      '= $$$INIssueLineBundle(pobjYFELD))
		
		;if '$data(YFONTCOLOR)       set YFONTCOLOR       = "red"            ; dummy fix  SR17111
		;if '$data(YBACKGROUNDCOLOR) set YBACKGROUNDCOLOR = "yellow"
		;if '$data(YTOOLTIP)         set YTOOLTIP         = "missing tooltip"
		
		; HEVA-811 ^^^^
		do UpdateStyle^COMGridEdit31Interface("tdY"_$$ReferenceRow^COMGridEdit31Interface(YFORM,idIssueLine)_"_"_GCOL,YFONTCOLOR_Y_YBACKGROUNDCOLOR_Y_$zconvert(YTOOLTIP,"o","JS"))
	}
	quit $$$OK       ; FIXME : Other OnBlur don't return value - is this correct? <GRF>
	
	
OnBlur(pYM,pYFORM,pYKEY,pYFELD,pGridRow,pGridCol,pYINHALT)
	;-------------------------------------------------------------------------------
	;	Updates QOH calculated column
	;	
	; Called By :
	;	Form - Header:INIssue, GridEdit:INIssueLine
	;	Routines -
	;		
	; Inputs : 
	;	pYKEY		Primary Key of INIssueLine
	;	pYFELD		Field details for INIssueLine
	;
	; ByRef :
	;	QOH, initialised at @nM FORM SPEC
	;
	; Returns : 
	;
	;
	; History :
	; 13-Jan-2009	shobby	SR15753: Removed redundant code.
	; 29-Jan-2009	GRF		SR16281: Populate & show Bundle Attributes (Manual F11) (pending - reverted)
	; 09-May-2008	HQN		Corrected ShowItems paramater value
	; 08-May-2008	HQN		SR15703: AddReference now to applicable combo fields
	; 05-May-2008	HQN		SR15703: Changed parameters to include GridColumn
	; 24-Jan-2008	HQN		SR15625 Changed class signature dINIssueLine to dUIssueLine
	; 04-Dec-2007	HQN		SR15598 : Fixed bug where all qty was getting retrieved
	;						due to nulloref from the Location
	;-------------------------------------------------------------------------------
	; Redraw DynTable
	do ShowItems^INIssueTable($$$EnumWWWDYNTABLEGridLineFocus,"INIssue"_$$$DELIM_"INIssueLine"_$$$DELIM_"dStockBundle"_$$$DELIM_pGridRow)
	quit
	
	
GetQtyByStorageObject(YFELD)
	;-------------------------------------------------------------------------------
	; Called By : Form INIssueLine - Manual Field 9 "BOH"
	;             (WWW122 : Default Variable Input and WWW122C2 : Value Is)
	;
	; 01-May-2013	SCR		HEVA-811: Use Available Qty
	; 04-Apr-2013	SCR		HEVA-811: Disable Converion
	;-------------------------------------------------------------------------------
	new strIssue,fltQty
	
	set strIssue 	= $$$GRIDYFELDContainer
	;set fltQty		= $$GetQtyByStorage($$$INIssueLineItem(YFELD),$$$INIssueFromLocn(strIssue),$$$INIssueLineFromStorage(YFELD))
	quit ##class(alSOH.iSOH).GetQtyAvailable($$$INIssueLineItem(YFELD),$$$INIssueFromLocn(strIssue),"",$$$YES) ;dont include blocked items ; HEVA-811
	quit fltQty
	
	
OnAfterPrimaryKey(pYM,pYFORM,pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Description : Setup QOH
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;	QOH for form use
	;	
	; Returns : nothing
	;
	; History :
	; 01-Oct-2008	Luke	SR15887: Some code cleaning newing of variables
	; 24-Jan-2008	HQN		SR15625 Changed class signature dINIssueLine to dUIssueLine
	; 05-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new idIssueNumber,idLineNumber,objIssueLine
	new QOH            ; FIXME : If we are using QOH to initialise Manual F9, why new?
	                   ;         Not initialising manual field BOH to variable QOH <GRF>
	set idIssueNumber = $$$KEY1(pYKEY)
	set idLineNumber  = $$$KEY2(pYKEY)
	set objIssueLine = ##class(alISS.dUIssueLine).%OpenId("0||"_idIssueNumber_"||"_idLineNumber)
	set QOH = 0
	if $IsObject(objIssueLine) && ($$$INIssueLineFromStorage(pYFELD) '= $$$NULLOREF) {
		set QOH = $$GetQtyByStorage($$$INIssueLineItem(pYFELD),objIssueLine.FromStorage.LocationName,$$$INIssueLineFromStorage(pYFELD))
	}
	quit
	
	
DeleteAll()
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 05-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new YFORM
	
	set YFORM = "INIssueLine"
	quit $$DeleteAll^COMGridEdit31S()
	
	
GetQtyByStorage(pidItem,pidLocn,pidStore)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By : GetQtyByStorageObject^INIssueLine, OnAfterPrimaryKey^INIssueLine
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 01-May-2013	SCR		HEVA-811: Use Available Qty
	; 25-Sep-2008	GRF		SR15932: variable prefixes - coding standards
	; 29-Apr-2008	HQN		Corrected Lookup, dSOH is Item, Storage...Index Changed
	; 08-Apr-2008	HQN		Moved to V2 lookup
	; 05-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new fltQOH,objQOH
	
	quit:(pidStore = $$$NULLOREF) 0
	
	set fltQOH = 0
	quit ##class(alSOH.iSOH).GetQtyAvailable(pidItem,pidLocn,"",$$$YES) ;dont include blocked items ; HEVA-811
	;set objQOH = ##class(alSOH.dSOH).%OpenId(pidItem_"||"_pidLocn_"||"_pidStore)
	;if objQOH '= $$$NULLOREF {
	;	set fltQOH = objQOH.QtyOnHand
	;}
	;quit fltQOH
	
	
OnBeforeFormat(pYFIELDNAME,pYTEXT,pobjLine)
	;-------------------------------------------------------------------------------
	; set Color on fields that fail validation
	;	
	; Called By : Form Hook for form INIssueLine
	;		
	; Inputs : 
	;	pYFIELDNAME	-	Browser Element ID "tdY#row#_#col#"
	;	pYTEXT		-	Value currently in element
	;	pYFELD		-	@nM INIssueLine Data record
	;
	; ByRef :
	;
	; Returns : 
	;
	; History :
	; 04-Apr-2013	SCR		HEVA-811: Disable BOH
	; 25-Mar-2013	SCR		HEVA-811: Revomed Hard Coded Text
	; 08-Sep-2011	shobby	SR17847: Now called from 'Form Hook'
	; 06-Sep-2011	GRF		SR17892: Isolate as "else" case
	; 17-May-2010	PPP		SR17298:The checks to stop the total issues to be greater 
	;							than the qty requested has been removed.
	; 14-Jan-2010	shobby	SR15753: Remove redundant code.
	; 18-Nov-2009	DWR		SR15760: Added warning colour to cell if the number
	; 							is not greater than 0
	; 22-Jun-2009	PPP		SR16510:No Formats after the record has been processed
	; 23-Mar-2009	GRF		SR16428: Call common code for CellColours; return $$$YES
	; 							is not required
	; 13-Feb-2009	GRF		SR16281: new code activated with old tag renamed to
	; 							OldOnBeforeFormat as comment block at bottom.
	; 12-Feb-2009	GRF		SR16281: rename idField to idClassField to ensure
	;							correctly matched with $$$Fld... macros
	; 06-Feb-2009	GRF		SR16328: EnumReadOnly Macro; use $$Get^WWW122 to include
	;							customisations
	; 29-Jan-2009	GRF		SR16281: use strIssueLine to build strBundleKey
	; 27-Jan-2009	GRF		SR16281: variable prefixes
	; 27-Oct-2008	HQN		SR16076: Only check QOH/Available when dBundleStock
	;							exists, may be an empty line due to unsourcability
	; 20-Oct-2008	HQN		SR16044: Removed references to intCol for switch
	;							statement.  May get confused once exported
	; 17-Oct-2008	HQN		SR16044: Validate talking into account QtyPlanned
	; 07-Oct-2008	Luke	SR15992 Corrected the way Item field is validated to
	;							handle sub lines 
	; 02-Oct-2008	Luke	SR15978 Corrected the updating of BOH
	; 01-Oct-2008	Luke	SR15887: Added Check and user feeback for unsourceable
	;							stock - Some code clean up 
	; 25-Sep-2008	GRF		SR15932: Language Text change
	; 19-Sep-2008	Luke	SR15887: corrected the QTY check for issued qty, only
	;							need to check the issued qty
	; 19-May-2008	HQN		SR15747: Added blocked storage checks
	; 16-May-2008	HQN		SR15752: Corrected lookup of deleted copied lines for qty
	;							replaced ^WWWDATEN calls with $$$WWWDATEN macro
	; 15-May-2008	HQN		SR15728: Duplicated multiline Qty Checks from INMOVLine
	; 09-May-2008	HQN		SR15703: Corrected Bundle Values lookup; Corrected color
	;							 settings to point at ANM color definitions
	; 08-May-2008	HQN		Added Error Message descriptions
	;							Duplicated color handling from upgraded INMOVLine
	; 05-May-2008	HQN		SR15703: Added Storage validation
	; 02-May-2008	HQN		SR15696: Update Values for Attribute Column instead of the
	;							Bundle Column
	;						SR15703: Additional Field Validations for QtyIssued
	;							Some Stub code in for dBundleStock.QtyOnHand
	; 01-May-2008	HQN		SR15703: Check for BundleStock
	; 30-May-2008	HQN		SR15703: Validates Bundle Existence in Storage
	; 29-Apr-2008	HQN		SR15696: Do dStockHistory Lookup for missing Bundles
	;							Render Bundle translated
	; 01-Apr-2008	HQN		SR15625: Translate Display of dBundle Information
	; 31-Mar-2008	HQN		SR15625: Corrected lookup for location, was
	;							line.FromStorage.Location now Line.Reference.FromLocation
	; 24-Jan-2008	HQN		SR15625: Changed class signature dLocation to dULocation
	;							Changed class signature dINIssueLine to dUIssueLine
	; 11-Dec-2007	PPP		SR15598 : Stop the whole line becomming 'RED' when saved
	; 05-Dec-2007	HQN		SR15598 : Commented, early exit for Firmed lines
	;-------------------------------------------------------------------------------
	new arrTxLookup,fltBOHQty,fltQOH,fltQtyIssued,fltQtyPlanned,fltQtyReqd,fltStockBundleQty
	new fltTotQtyIssFromStore,idBundle,idClassField,idIssueLine,idIssueNumber,idItem
	new idLineNumber,idFromLocn,idFromStore,idReqLine,idToLocn,intCol,intDemandType,intRow
	new objBundle,objBundleStock,objHeader,objIssueLine,objResultSet
	new objStock,objStorage,sc,strBundleKey,strBundleValues,strDefaultColor
	new strDisabledColor,strIssueLine,strRequiredColor,strWarningColor,fltQtyPlannedForReference
	
	;+++++++++++++++++++++++++++++++++++++++   FIXME : Check this is correct - we *ARE* setting YTEXT (and also pass pYTEXT?) <GRF>
	; Do ***NOT*** set YTEXT here as it is preserved to overwrite other fields
	; Call UpdateManualField^COMGridEdit31Interface instead (even if not a manual field)
	;+++++++++++++++++++++++++++++++++++++++
	
	set idIssueNumber = $$$KEY1(YKEY)
	set idLineNumber  = $$$KEY2(YKEY)
	
	; INIssue Header
	;---------------------------------------
	set objHeader  = $$$GRIDYFELDContainer
	quit:$$$INIssueStatus(objHeader)>3         		; Active

	; FIXME : Should we bother if record is processed? <GRF>
	;         see $$$INIssueLineStatus and $$$INIssueStatus below - do we need to
	;         refresh values or should this be during OnLineAdded processing?
	set idFromLocn = $$$INIssueFromLocn(objHeader)
	set idToLocn   = $$$INIssueToLocn(objHeader)
	
	; INIssueLine from Grid
	;---------------------------------------
	set idItem       = $$$INIssueLineItem(pobjLine)
	set idFromStore  = $$$INIssueLineFromStorage(pobjLine)
	set idBundle     = $$$INIssueLineBundle(pobjLine)
	set fltQtyIssued = $$$INIssueLineQtyIssued(pobjLine)
	set fltQtyReqd   = $$$INIssueLineQtyRequired(pobjLine)      ; now deprecated - commented below
	set strBundleKey = idItem_"||"_idFromLocn_"||"_idFromStore_"||"_idBundle
	
	; Grid Position
	;---------------------------------------
	$$$GRIDSplitKey(pYFIELDNAME,intRow,intCol)
	set idClassField = $$$GetClassField(YFORM,intCol)

	; Bundle (Hidden)
	;---------------------------------------
	if (idClassField = $$$FldINIssueLineBundle) {               ; 20-Oct-2008 SR16044
		set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(strBundleKey)
		if (objBundleStock '= $$$NULLOREF) {
			set objBundle = objBundleStock.Bundle
		} else {
			set objBundle = ##class(alSOH.dBundle).%OpenId(idBundle)
		}
		
		if objBundle = $$$NULLOREF {
			; Attempt to lookup the dStockHistory record if this has already been processed
			set objIssueLine = ##class(alISS.dUIssueLine).%OpenId("0||"_idIssueNumber_"||"_idLineNumber)
			
			if objIssueLine '= $$$NULLOREF {
				set arrTxLookup(7) = 11                    ; Map Demand Types to TxTypes - allow for future expansion
				set objResultSet = ##class(%ResultSet).%New()
				if objResultSet.Prepare("SELECT %ID FROM alSOH.dStockHistory WHERE Item = ? AND REFERENCE = ? AND LineNumber = ? AND TxType_MovementTypeId = ?") {
					set intDemandType = objIssueLine.Issue.DemandType
					if objResultSet.Execute(idItem,idIssueNumber,idLineNumber,$get(arrTxLookup(intDemandType))) {
						if objResultSet.Next() {
							set objBundle = ##class(alSOH.dStockHistory).%OpenId(objResultSet.Data("ID"))
						}
					}
				}
			}
		}
		; FIXME : Can objBundle still be $$$NULLOREF here?  Should the test for
		;         objBundleStock be for objBundle since were ignoring the
		;         objBundle obtained from alSOH.dStockHistory  <GRF>
		
		; Manual F11 LotNo = Bundle Attribute Values
		if objBundleStock '= $$$NULLOREF {       ; Update "Bundle Values" as well as styling
			set strBundleValues = ##class(alSOH.iUSOH).RenderBundle(objBundle,SPRACHE)
			set YTOOLTIP        = objBundleStock.%Id()     ; TODO : use idBundle with $get(^Development)
			do UpdateManualField^COMGridEdit31Interface(intRow,$$$FORMFldINIssueLineLotNo,strBundleValues) ; YTEXT can't be set here, workaround
			
		} else {
			set YWARNING = $$$YES
			set YTOOLTIP = $$$Text($listbuild("alINV0102",idFromStore))
		} ; "No bundle, or bundle doesn't exist in Storage '%1'"
	}
	
	; don't bother formatting if it is firmed/a-closed/m-closed, locked anyway
	;---------------------------------------
	quit:(($$$INIssueLineStatus(pobjLine) = 2) || ($$$INIssueLineStatus(pobjLine) = 8) || ($$$INIssueLineStatus(pobjLine) = 9))
	
	; Field-specific processing : Open Issues
	;---------------------------------------
	if $$$INIssueStatus(objHeader) = 1 {
		; Item
		;-----------------------------------
		if (idClassField = $$$FldINIssueLineItem) {
			///   Test the QTY on hand 
			if (fltQtyIssued = 0) || (fltQtyIssued = $$$NULLOREF) {
				set objStock= ##class(alSOH.dStockBalance).%OpenId(idItem_"||"_ idFromLocn,,.sc)	
				if objStock = $$$NULLOREF {
					set YWARNING = $$$YES
					set YTOOLTIP = $$$Text($listbuild("IN01049",idLineNumber))
				}  ; "Cannot fullfill Issue Quantity for Line %1"
			}
			
		; Qty Issued
		;-----------------------------------
		} elseif (idClassField = $$$FldINIssueLineQtyIssued) {
			set idReqLine     = $$$INIssueLineReference(pobjLine)
			if fltQtyIssued = "" {
				set YWARNING = $$$YES
				
		// SR17298
		//	} elseif fltQtyIssued > fltQtyReqd {
		//		set YTOOLTIP = $$$Text($listbuild("IN00647",fltQtyIssued))_" = "_fltQtyReqd
				
			} elseif fltQtyIssued '> 0 {
				set YWARNING = $$$YES
				set YTOOLTIP = $$$Text("IN00632")
				
		// SR17298
		//	} elseif $get(^CacheTempINIssueLine(idIssueNumber,"Excess",+idReqLine)) {
		//		set YTOOLTIP = "Total Quantity Issued exceeds the Quantity Requested for Requisition Line "_idReqLine
				
			} else {
				; Read from On Screen Value before On Disk Value
				set fltQOH = $$GetQtyByStorage(idItem,idFromLocn,idFromStore)
				set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(strBundleKey,,.sc)
				
				if $$$ISOK(sc) {
					set fltStockBundleQty = 0
					set:(objBundleStock '= $$$NULLOREF) fltStockBundleQty = objBundleStock.QtyOnHand
					
					set fltQtyPlanned			  = $$GetQtyPlanned^INMOVTable(objBundleStock.Item.%Id(),objBundleStock.Storage.Location.%Id(),objBundleStock.Storage.%Id(),objBundleStock.Bundle.%Id()) ; 17-Oct-2008 SR16044
					set fltQtyPlannedForReference = $$GetQtyPlannedForReference^INMOVTable(objBundleStock.Item.%Id(),objBundleStock.Storage.Location.%Id(),objBundleStock.Storage.%Id(),objBundleStock.Bundle.%Id(),,idIssueNumber) ; HEVA-1134
										
					if (fltQtyIssued > (fltStockBundleQty+fltQtyPlannedForReference-fltQtyPlanned)) { ; HEVA-1134
						set YWARNING = $$$YES
						set YTOOLTIP = $$$Text("IN00437")_" = "_(fltStockBundleQty-fltQtyPlanned) ; "Available Quantity"
						
					} elseif (fltQtyIssued > (fltQOH+fltQtyPlannedForReference)) { ; HEVA-1134
						set YWARNING = $$$YES
						set YTOOLTIP = $$$Text("IN00437")_" = "_fltQOH                            ; "Available Quantity"
						
					} else {
						if objBundleStock '= $$$NULLOREF {  ; Check Prior Line entries, sum quantities
							set idIssueLine = "" 
							set fltTotQtyIssFromStore = 0
							for {
								set idIssueLine = $order($$$WWWDATEN("REFERENCEROW",idIssueLine))
								quit:(idIssueLine = "")
								continue:(idIssueLine = $$$KEY2($$GetYKEY^COMGridEdit31G(intRow)))
								continue:($get($$$WWWDATEN("KILLEDRECORD",$get($$$WWWDATEN("REFERENCEROW",idIssueLine,1))))=1)
								
								set strIssueLine = $$$GRIDGetYFELD(idIssueLine)
								continue:($$$INIssueLineItem(strIssueLine)        '= idItem)
								continue:($$$INIssueLineFromStorage(strIssueLine) '= idFromStore)
								continue:($$$INIssueLineBundle(strIssueLine)      '= idBundle)
								
								set fltTotQtyIssFromStore = fltTotQtyIssFromStore + $$$INIssueLineQtyIssued(strIssueLine)
							}
							
							if (fltTotQtyIssFromStore > objBundleStock.QtyOnHand) {
								set YWARNING = $$$YES
								set YTOOLTIP = $$$Text($listbuild("alMOV0003",objBundleStock.QtyOnHand))
							} ; "Not enough Items in Storage (Quantity = %1)"
						}
					}
				}
			}
		
		; From Storage
		;-----------------------------------
		} elseif (idClassField = $$$FldINIssueLineFromStorage) {
			if idFromStore'="" {
				set objStorage = ##class(alLOC.dUStorage).%OpenId("0||"_idFromLocn_"||"_idFromStore,0,.sc)
				if $$$ISERR(sc) {
					set YWARNING = $$$YES
					set YTOOLTIP = $$$Text($listbuild("IN00821",idFromStore,idFromLocn))
				 ; "Storage %1 does not exist in location %2"
				
				} else {
					set objStorage = ##class(alLOC.iULOC).GetStorage(idFromLocn,idFromStore)
					if objStorage.StorageIsBlocked = $$$YES {
						set YWARNING = $$$YES
						set YTOOLTIP = $$$Text("IN00556")
					} ; "Stock must be sourced from storages that are not blocked."
				}
			}
		
		; Balance On Hand
		;-----------------------------------
		; HEVA-811 vvvv
		;} elseif (intCol = $$$FORMFldINIssueLineBOH) {        ; BOH Qty (Manual Field)
		;	set fltBOHQty = ##class(alSOH.iSOH).GetQtyOnHand(idItem,idFromLocn,"",$$$NO)
		;	set YTOOLTIP  = $$$Text($listbuild("IN001149",fltBOHQty)) ; QtyOnHand (%1) ; HEVA-811
		;	;set YTOOLTIP  = "QtyOnHand = "_fltBOHQty
		;	set YTEXT     = fltBOHQty
		; HEVA-811 ^^^^
		}
	}
	quit
	
	
OnLineAdded(pintRowCount,pstrKey)
	;-------------------------------------------------------------------------------
	; Description : Sets YOPTION value to signify that the grid contains non-blank
	;	policies, Container will Use the YOPTION to determine whether the Bundle
	;	Column should be hidden
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 22-Mar-2010	shobby	SR17228: Tweak management of ContainsBundles.
	; 20-Feb-2009	HQN		SR16345: Calling SetManualField called with wrong key
	; 							should be referenceKey not rowcount, this handles
	; 							both initial line add, as well as line copies
	; 13-Jan-2009	GRF		SR16281: correction to macro
	; 29-Jan-2009	GRF		SR16281: restore test
	; 03-Sep-2008	HQN		SR15830: Removing formatting, breaks on tab navigation
	; 12-Aug-2008	Luke	SR15814: Corrected sc formation and use 
	; 02-May-2008	HQN		SR15703: Populate Initial Value of "Bundle Values"
	; 01-May-2008	HQN		SR15703: Add Logic for handling Bundle column visibility
	; 02-Apr-2008	HQN		Created
	;-------------------------------------------------------------------------------
	new objBundle,strBundleValues,strIssueLine,strStatus,sc,idLine
	
	set sc = $$$OK
	set strStatus = $$$OK
	;	Block moved after subroutine SR15830 vvv
	; SR16281 vvv restored
	set strIssueLine = $$$GRIDGetYFELD(pstrKey)
	set:(strIssueLine = "") strIssueLine = $get(^INIssueLine(0,$$$KEY1(pstrKey),$$$KEY2(pstrKey),1))
	set objBundle = ##class(alSOH.dBundle).%OpenId($$$INIssueLineBundle(strIssueLine),.sc)
	if $$$ISOK(sc) {
		;if (objBundle = $$$NULLOREF) || objBundle.ItemPolicy.Attributes.Count() > 0 {		;SR17228
		if (objBundle '= $$$NULLOREF) && objBundle.ItemPolicy.Attributes.Count() > 0 {		;SR17228
			;SR17228 set YOPTION("ContainsBundles") = $$$YES
			set ^CacheTemp(YUSER,"Grid","ContainsBundles")=$$$YES		;SR17228
		}
		set strBundleValues = ##class(alSOH.iUSOH).RenderBundle(objBundle,SPRACHE)
		; 20-Feb-2009 vvvv
		; set intLine = $get($$$WWWDATEN("REFERENCEROW",idKey,1))
		set idLine = $$GetLineId^COMGridEdit31Interface(pstrKey,YFORM) ; Cannot just do $tr($$$KEY2(pstrKey),".","x") due to initial load not having REFERENCEKEY match translated key
		set:idLine="" idLine = pintRowCount
		do UpdateManualField^COMGridEdit31Interface(idLine,$$$FORMFldINIssueLineLotNo,strBundleValues) ; 20-Feb-2009
	}                             ; TEMP
	set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc)
	; SR16281 ^^^ restored	
	
	quit strStatus
	
	
OnBeforeCopy(pstrKey,&pobjLine)
	quit	
	
	
OnBeforeSave(pYM,pYFORM,pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Check whether the bundle exists in this storage
	; 
	; History :
	; 12-Jul-2013	SCR		CORE-131: Exclude current transaction from Planned Qty
	; 20-Oct-2008	HQN		SR16044: use new alMOV0003/alMOV0004 detailed messages
	; 17-OCt-2008	HQN		SR16044: Take into account already Planned Quantities
	; 25-Sep-2008	GRF		SR15932: Language Text change
	; 19-May-2008	HQN		SR15747: Added Blocked storage check
	; 16-May-2008	HQN		SR15752: Corrected lookup of deleted copied lines for qty
	;						replaced ^WWWDATEN calls with $$$WWWDATEN macro
	; 15-May-2008	HQN		SR15728: Duplicating multiline qty checks from INMOVLine
	; 05-May-2008	HQN		Corrected to point at correct error message
	; 05-May-2008	Luke	SR15699: added translation 
	; 23-Apr-2008	HQN		SR15682: Created
	;-------------------------------------------------------------------------------
	new fltQtyIssued,fltQtyPlanned,idIssueLine,objBundleStock,objStorage,sc,strIssueLine,fltQtyPlannedForReference
	
	if $$$INIssueLineFromStorage(pYFELD) = "" {
		; Permitted at save; block firm button - *KEEP* so other tests below are bypassed since line is not yet finalised
		//set YRETVAL = $$$MakeStatus("IN00725",$$$KEY2(pYKEY)) ;"From Storage has not been set in line %1"
	
	} elseif $$$INIssueLineQtyIssued(pYFELD) = "" {
		set YRETVAL = $$$MakeStatus("INREQ21") ;"Quantity Issued"
	
	} else {
		; SR15747	vvvvv
		; Validate storage
		set objStorage = ##class(alLOC.iULOC).GetStorage($$$INIssueFromLocn($$$GRIDYFELDContainer),$$$INIssueLineFromStorage(pYFELD),.sc)
		if objStorage = $$$NULLOREF {       ; "Storage %1 does not exist in location %2"
			set YRETVAL = $$$MakeStatus("IN00821",$$$INIssueLineFromStorage(pYFELD),$$$INIssueFromLocn($$$GRIDYFELDContainer))
		} else {
			if objStorage.StorageIsBlocked = $$$YES { ; 19-May-2008 SR15747	^^^^^
				set YRETVAL = $$$MakeStatus("IN00556") ; "Stock must be sourced from storages that are not blocked."
			}
		}
		; SR15747	^^^^^
		
		if '$data(YRETVAL) || $$$ISOK(YRETVAL) {
			set objBundleStock = ##class(alSOH.dBundleStock).%OpenId($$$INIssueLineItem(pYFELD)_"||"_$$$INIssueFromLocn($$$GRIDYFELDContainer)_"||"_$$$INIssueLineFromStorage(pYFELD)_"||"_$$$INIssueLineBundle(pYFELD),0,.sc)
			if $$$ISERR(sc) {
				set YRETVAL= $$$MakeStatus("alINV0003") ;"Bundle not found in storage" //SR15699
			} else {
				set fltQtyIssued = 0
				set idIssueLine = ""
				for {
					set idIssueLine =  $order(^WWWDATEN(0,+$horolog,YUSER,"INIssueLine","V","REFERENCEROW",idIssueLine))
					quit:(idIssueLine = "")
					continue:(idIssueLine = $$$KEY2(pYKEY))     ; Skip current line
					continue:($get($$$WWWDATEN("KILLEDRECORD",$get($$$WWWDATEN("REFERENCEROW",idIssueLine,1))))=1) ; HQN 16-May-2008
					set strIssueLine = $$$GRIDGetYFELD(idIssueLine)
					continue:($$$INIssueLineItem(strIssueLine)        '= $$$INIssueLineItem(pYFELD))
					continue:($$$INIssueLineFromStorage(strIssueLine) '= $$$INIssueLineFromStorage(pYFELD))
					continue:($$$INIssueLineBundle(strIssueLine)      '= $$$INIssueLineBundle(pYFELD))
					
					set fltQtyIssued = fltQtyIssued + $$$INIssueLineQtyIssued(strIssueLine)
				}
				set fltQtyPlanned = $$GetQtyPlanned^INMOVTable(objBundleStock.Item.%Id(),objBundleStock.Storage.Location.%Id(),objBundleStock.Storage.%Id(),objBundleStock.Bundle.%Id(),11,$$$KEY1(pYKEY)) ; CORE-131
				set fltQtyPlannedForReference = $$GetQtyPlannedForReference^INMOVTable(objBundleStock.Item.%Id(),objBundleStock.Storage.Location.%Id(),objBundleStock.Storage.%Id(),objBundleStock.Bundle.%Id(),,$$$KEY1(pYKEY)) ; HEVA-1134
				;set fltQtyPlanned = $$GetQtyPlanned^INMOVTable(objBundleStock.Item.%Id(),objBundleStock.Storage.Location.%Id(),objBundleStock.Storage.%Id(),objBundleStock.Bundle.%Id()) ; 17-OCt-2008 SR16044
 
				if (($$$INIssueLineQtyIssued(pYFELD) + fltQtyIssued) > (objBundleStock.QtyOnHand-fltQtyPlanned+fltQtyPlannedForReference)) {
					if (fltQtyPlanned > 0) {
						set YRETVAL =  $$$Text($listbuild("alMOV0004",objBundleStock.QtyOnHand,fltQtyPlanned-fltQtyPlannedForReference)) ; Not enough Items in Storage (Quantity = %1)(Planned Quantity = %2) ; 20-Oct-2008 SR16044 ; HEVA-1134
					} else {
						set YRETVAL =  $$$Text($listbuild("alMOV0003",objBundleStock.QtyOnHand)) ; Not enough Items in Storage (Quantity = %1) ; 20-Oct-2008 SR16044
					}
				}
			}
		}
	}
	quit
	
OnBeforeSaveHook(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; On Before Save of INIssueLine class
	;
	; Params:
	;	pidKEY		Issue Id + Line
	;	pYFELD		objIssue
	;
	; Returns: Status
	;
	; History:
	; 25-Nov-2013	SCR		HEVA-1265
	;-------------------------------------------------------------------------------
	new strStatus,idIssue,idLine
	set strStatus	= $$$OK
	if $$$INIssueLineStatus(pYFELD)>7 {
		set idIssue	= $$$KEY1(pYKEY)
		set idLine	= $$$KEY2(pYKEY)
		do ClearReservation^INReservation(idIssue,11,,idLine)
	}
	
	quit strStatus
	
	
OnLineDeleted(pYKEY,pintRowCount)
	;-------------------------------------------------------------------------------
	; 
	; History:
	; 13-Oct-2010	PPP		SR17566: Language Text
	; 19-Aug-2009	GRF		SR168]]><![CDATA[54: Clear DynTable on deleting a row
	; 12-Feb-2009	GRF		SR16281: restored ScreenUpdateStyle with correct field
	; 01-Oct-2008	Luke	SR15951: Removed the screen style update
	; 16-May-2008	HQN		SR15752: Created
	;-------------------------------------------------------------------------------
	new idIssueLine,idParameters,strIssueLine
	
	set strIssueLine = $$$GRIDGetYFELD(pYKEY)
	set idIssueLine = ""
	for {
		set idIssueLine =  $order($$$WWWDATEN("REFERENCEROW",idIssueLine))
		quit:(idIssueLine = "")
		continue:(idIssueLine = $$$KEY2(pYKEY)) ; Skip current line
		continue:($get($$$WWWDATEN("KILLEDRECORD",$get($$$WWWDATEN("REFERENCEROW",idIssueLine,1))))=1)
		
		set strIssueLine = $$$GRIDGetYFELD(idIssueLine)
		continue:($$$INIssueLineItem(strIssueLine)        '= $$$INIssueLineItem(strIssueLine))
		continue:($$$INIssueLineFromStorage(strIssueLine) '= $$$INIssueLineFromStorage(strIssueLine))
		continue:($$$INIssueLineBundle(strIssueLine)      '= $$$INIssueLineBundle(strIssueLine))
		
		do ScreenUpdateStyle^COMGridEdit31S("pY"_$$$WWWDATEN("REFERENCEROW",idIssueLine,1)_"_"_$$$FORMFldINIssueLineQtyIssued)
	}
	; Clear DynTable
	set idParameters = "INIssue"_$$$DELIM_"INIssueLine"_$$$DELIM_"dStockBundle"_$$$DELIM_""
	kill ^CacheTempDynamicTable(YUCI,YUSER,"dStockBundle")
	; "No Item Selected"   SR17566
	do DrawTable^WWW120DynTable($listbuild($$$Text("IN01142")),"dStockBundle",$listbuild($listbuild("left","display")),
	                            idParameters,"",$$$EnumWWWDYNTABLEAfterDataFields)
	quit
	
	
OnBeforeButtonLine(pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Description : disable buttons if Issue Type is Kit -
	; don't want to be able to delete lines if a kit requisition.
	;			
	; Called By : Form INIssueLine : Execute Before Buttonline
	;		
	; Inputs : 
	; 	pstrKey		idINIssue,idINIssueLine
	; 	pYFELD		objINIssueLine
	;
	; Returns : Nothing
	;
	; History :
	; 20-Jul-2009	DWR		SR16771: Created
	;-------------------------------------------------------------------------------
	new objHeader,YVOR
	
	if '$$$NoKey(pstrKey) {
		set objHeader = $$$GRIDYFELDContainer
		if $$$INIssueType(objHeader) = 4 {                           ; kits
			set YVOR = $$GetYVOR^COMGridEdit31Globals("")
		
			if (";"_YVOR_";") '[ ";5;" {
				set $$$WWW120DoNOTDisplayStandardButto(YVOR) = $$$WWW120DoNOTDisplayStandardButto(YVOR)_";5"
				set ^CacheTemp(YUSER,"Grid","INIssueLine","YVOR") = YVOR
			}
		}
	}
	quit
	
]]></Routine>
</Export>