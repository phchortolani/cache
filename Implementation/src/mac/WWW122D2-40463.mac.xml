<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW122D2" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW122D2
	
#include COMSYS
	; "#" = $$$Perform
#define setREADONLY(%1)      set %TXT(1) = %TXT(1)_"#Y"_YFORM_"D"_%1_"~READ"
#define setEDITABLE(%1)      set %TXT(1) = %TXT(1)_"#Y"_YFORM_"D"_%1_"~WRITE"
#define setBACKGROUND(%1,%2) set %TXT(1) = %TXT(1)_"#Y"_YFORM_"D"_%1_"~BACKGROUND~"_%2
	
Clear()
	;-------------------------------------------------------------------------------
	; Clear all customisations
	;
	; Note:
	; 	Direct kills are deliberate!
	; 	
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 20-Jul-2009	shobby	SRAdhoc: Created
	;-------------------------------------------------------------------------------
	kill ^WWW122D2
	kill ^WWW122D2s
	kill ^COMGridEditLayout
	kill ^COMGridEditLayouts
	quit	
	
	
Test(pstrText="")
	;-------------------------------------------------------------------------------
	; Used to test customisation rules
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 27-Mar-2007	shobby	SRBR014409:Created
	;-------------------------------------------------------------------------------
	quit pstrText
	
	
OnBeforeSave(pidWWW122D2,pobjWWW122D2)
	;-------------------------------------------------------------------------------
	; Custom Rules can be based on EITHER
	;     Field Testing (Primary Key or Data Field tests)
	; OR
	;     User Access settings (User Entitlement and/or Module Entitlement)
	; 
	; 1) Verify whether entered masks are valid
	; 
	; 2) Validate Field Testing fields if not a User Access rule
	;        "If Data Field Block" & "...and If..." groups
	; 
	; 3) Validate unlabelled "Then" Block containing Read Only/Mandatory a
	; 
	; Called By : Form WWW122D2 "Execute Before Save"
	; 
	; Params: Custom Rules key and record
	;
	; Returns:
	;
	; History:
	; 12-Dec-2008	GRF		SRBR014638: add blnFieldRule to show when field testing
	; 							must be validated
	; 13-Nov-2008	HQN		SRBR014638: Additional validation for the ...Then
	;							set of fields
	; 18-Jan-2008	shobby	SRBR014885: Callout to ValidateIfConditionOnExecute
	; 04-Jan-2008	heber	SRBR014794:	Created
	;-------------------------------------------------------------------------------
	new blnFieldRule,strStatus
	
	set Q = $$$QSave
	set blnFieldRule = (($$$WWW122D2ThisUserEntitlement(pobjWWW122D2)="") && ($$$WWW122D2ThisModuleEntitlement(pobjWWW122D2)=""))
 
	set strStatus = $$VerifyMask^WWWFORM7($$$WWW122D2ApplyMask(pobjWWW122D2))
	if blnFieldRule {
		if $$$ISOK(strStatus) set strStatus = $$ValidateSelectors(pobjWWW122D2)
		if $$$ISOK(strStatus) set strStatus = $$ValidateIfConditionOnExecute(pobjWWW122D2)
	}
	if $$$ISOK(strStatus) set strStatus = $$ValidateValueIs(pobjWWW122D2)
	if $$$ISOK(strStatus) set strStatus = $$ValidateThen(pobjWWW122D2)
	
	if $$$ISERR(strStatus) {
		$$$Alert(strStatus)
		set Q = $$$QDontSave
	}
	quit
	
	
ValidateValueIs(pobjWWW122D2,&pstrExecute)
	;-------------------------------------------------------------------------------
	; Check that 'Value Is' is correctly constructed.
	;
	; Test 1: @$$Function^Routine and @Variable [will need $get if variable is not
	;         present when saving the Rule - e.g. YFORM might be okay but COUNTRY might not]
	; Test 2: $$Function^Routine : Always Invalid
	; Test 3: String or Number : by enclosing string in quotes will always pass ExecuteCode
	;         check therefore not needed
	; 
	; If the condition evaluates to true then the value entered here will be put
	; into the field for the current rule.
	; 
	; Example
	; 	Value Is : 2				shows the value "2"
	; 	Value is : @YLOCATION		shows the current location
	; 	Value is : Text				shows the value "Text"
	; 	Value is : @$$tag^Routine()	runs the specified routine & display the results
	; 
	; Inputs:
	;	pobjWWW122D2	Custom Rule record
	;
	; ByRef:
	;	pstrExecute		new value (must have "@" prefix if executable (ie calling a method))
	;
	; Returns:
	;
	; History:
	; 12-Dec-2008	GRF		SRBR014638: new text code
	; 17-Nov-2008	HQN		SRBR014638: Validate Clear checkbox if a value is
	;							correctly entered for ValueIs setting
	; 12-Feb-2008	GRF		SRBR014861: don't enclose in quotes when testing for
	;							leading @; other strings not starting with $$ will
	;							have automatic pass as string.
	; 11-Feb-2008	shobby	SRBR014861: Improved some of the validation.
	; 28-Jan-2008	shobby	SRBR014861: Created
	;-------------------------------------------------------------------------------
	new strDummy,strExecuteWithoutAmpersand,strStatus
	
	set strStatus   = $$$OK
	set pstrExecute = $$$WWW122D2ValueIs(pobjWWW122D2)
	
	if $extract(pstrExecute,1)="@" {
		set strExecuteWithoutAmpersand = $extract(pstrExecute,2,$length(pstrExecute))
		if '$$ExecuteCode("set strDummy="_strExecuteWithoutAmpersand) {
			set strStatus=$$$MakeStatus("WWW00085",pstrExecute)  ; "Invalid 'Value Is' call (%1)."
		}
	
	} elseif $extract(pstrExecute,1,2)="$$" {
		set strStatus=$$$MakeStatus("WWW00085",pstrExecute)      ; "Invalid 'Value Is' call (%1)."
		
	}
	
	if $$$ISOK(strStatus) {
		if (pstrExecute '= "") && ($$$WWW122D2Clear(pobjWWW122D2)'="") {
			set strStatus = $$$MakeStatus("WWW00108",$$$StrWWW122D2ValueIs,$$$StrWWW122D2Clear)
		} ; "Conficting Rules : %1, %2"
	}
	quit strStatus 
	
	
ValidateIfConditionOnExecute(pobjWWW122D2,&pstrExecute="")
	;-------------------------------------------------------------------------------
	; Check this particular rule.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 26-Feb-2008	shobby	SRBR014885: More stringent validation.  Method call must
	;							conform to a standard of $$Validate^INART (for 
	;							example).  without this... Putting in $$Validate
	;							would actually try and run the Validate in this
	;							routine. (Which ends up being recursive).
	; 08-Feb-2008	GRF		SRBR014885: use pstrExecute since already have it and
	;							use strDummy since valid execution of ExecuteCode
	;							was returning result from called function.
	; 18-Jan-2008	shobby	SRBR014885: Created
	;-------------------------------------------------------------------------------
	new strDummy,strStatus
	
	set strStatus   = $$$OK
	set pstrExecute = $$$WWW122D2IfConditionOnExecute(pobjWWW122D2)
	if pstrExecute'="" {
	;	if '$$ExecuteCode("set strStatus="_$$$WWW122D2IfConditionOnExecute(pobjWWW122D2)) {   ; 08-Feb-2008
		if ($extract(pstrExecute,1,2)'="$$")             ||
		   '$find(pstrExecute,"^")                       ||
		   ('$$ExecuteCode("set strDummy="_pstrExecute))   {
			set strStatus=$$$MakeStatus("WWW00083",pstrExecute)  ; "Invalid 'If Condition On Execute'   %1"
		}
	}
	quit strStatus
	
	
ExecuteCode(pstrCode)
	;-------------------------------------------------------------------------------
	; Attempt to execute the code
	;
	; Returns:
	;
	; History:
	; 18-Jan-2007	shobby	Created SRBR014885:
	;-------------------------------------------------------------------------------
	set $ztrap="ExecuteCodeError"
	
	xecute pstrCode
	quit $$$YES
ExecuteCodeError  ; Internal Tag
	set $ztrap=""
	quit $$$NO
	
	
GetMandatoryColour()
	;-------------------------------------------------------------------------------
	; History:
	; 10-Dec-2008	GRF		SRBR014638: created
	;-------------------------------------------------------------------------------
	new idMandatoryColour,strMandatory
	
	set idMandatoryColour = $$$WWW012FontColorMandatoryInput($get(^WWW012(0,0,1)))
	if idMandatoryColour = "" {
		set strMandatory = $get(YRED)   ; cover red asterisk version since can't duplicate
		if strMandatory="" set strMandatory = "RED"   
	} else {
		set strMandatory = $$$WWW100Text($get(^WWW100(0,"FARBE","EN",idMandatoryColour,1)))
	}
	quit strMandatory
	
	
ValidateThen(pobjWWW122D2)
	;-------------------------------------------------------------------------------
	; 1) Cannot be both Mandatory and require Clearing
	; 2) If Mandatory and Read-Only then a pre-set value is required
	; 
	; Called By : OnBeforeSave
	; 
	; Arguments:
	;	pobjWWW122D2	WWW122D2 record
	; 
	; ByRef :
	;	YFORM			Form name (likely "WWW122D2")
	; 
	; History:
	; 12-Dec-2008	GRF		SRBR014638: new text numbers and source
	; 09-Dec-2008	GRF		SRBR014638: Convert to Procedure Block Zero form.
	; 13-Nov-2008	HQN		SRBR014638: Created
	;-------------------------------------------------------------------------------
	new idFormField,strClear,strMandatory,strStatus,strValueIs
	
	set strStatus = $$$OK
	if ($$$WWW122D2MandatoryField(pobjWWW122D2) = $$$YES) && ($$$WWW122D2Clear(pobjWWW122D2) = $$$YES) {
		set idFormField  = $order(^WWW122s(0,4,$$$FldWWW122D2MandatoryField,YFORM,""))
		set strMandatory = $$^WWWFELDNAME(YFORM,"D",idFormField)
		
		set idFormField  = $order(^WWW122s(0,4,$$$FldWWW122D2Clear,YFORM,""))
		set strClear     = $$^WWWFELDNAME(YFORM,"D",idFormField)
		
		set strStatus = $$$MakeStatus("WWW00108",strMandatory,strClear)   ; "Conflicting Rules : %1, %2"
	}
	
	if $$$ISOK(strStatus) {
		if ($$$WWW122D2ReadOnlyField(pobjWWW122D2) = $$$YES) && ($$$WWW122D2MandatoryField(pobjWWW122D2) = $$$YES) {
			if $$$WWW122D2ValueIs(pobjWWW122D2) = "" {
				set idFormField = $order(^WWW122s(0,4,$$$FldWWW122D2ValueIs,YFORM,""))
				set strValueIs  = $$^WWWFELDNAME(YFORM,"D",idFormField)
				
				set strStatus = $$$MakeStatus("WWW00105",strValueIs)      ; "%1 : Mandatory Field"
			}
		}
	}
	quit strStatus
	
	
ValidateSelectors(pobjWWW122D2)
	;-------------------------------------------------------------------------------
	; Returns any errors that exist in the "If Data Field..." group
	; 
	; 1) We must specify a field to be tested (if neither of the User Access fields are set.)
	; 
	; 2) The "If Condition On Execute" test can exist alone or in conjunction with
	;    *ONE* of the other tests but there must be some test specified.
	; 
	; Arguments:
	;	pobjWWW122D2	WWW122D2 record
	;	
	; History:
	; 12-Dec-2008	GRF		SRBR014638: Text changed
	; 09-Dec-2008	GRF		SRBR014638: Convert to Procedure Block Zero form.
	; 17-Nov-2008	HQN		SRBR014638: Modified selector checking, exactly 1 selector
	; 13-Nov-2008	HQN		SRBR014638: Created
	;-------------------------------------------------------------------------------
	new idField,intTestCount,objWWW122,strStatus
	
	set strStatus = $$$OK
	
	if ($$$WWW122D2IfPrimaryKey(pobjWWW122D2) = "") && ($$$WWW122D2IfDataField(pobjWWW122D2) = "") {
		set strStatus = $$$MakeStatus("WWW00106")    ; "The rule must apply to either a Primary Key or a Data Field."
	
	} else {
		; Count how many of the primary tests have been set.
		; OnBlur rules should restrict this to 0 or 1 for new rules
		set intTestCount = ($$$WWW122D2IsNot(pobjWWW122D2)          '="") + ($$$WWW122D2Is1(pobjWWW122D2)    '="") +
		                   ($$$WWW122D2IsNotEmpty(pobjWWW122D2)     '="") + ($$$WWW122D2IsEmpty(pobjWWW122D2)'="") +
		                   ($$$WWW122D2ExecuteForCheck(pobjWWW122D2)'="")
		
		if (intTestCount = 0) && ($$$WWW122D2IfConditionOnExecute(pobjWWW122D2) = "") {
			set strStatus = $$$MakeStatus("WWW00109")   ; "The rule must specify a test condition."
		
		} elseif (intTestCount > 1) {
			set strStatus = $$$MakeStatus("WWW00110")   ; "Can not test multiple conditions."
		}
	}
	quit strStatus
	
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
	;      Manual validation calls
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
	
	
Validate()
	;-------------------------------------------------------------------------------
	; Validation utility for customisation rules
	; 
	; Call from terminal session : d Validate^WWW122D2()
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 06-Feb-2008	shobby	SRAdhoc ValidateAssociatedWithField
	; 28-Jan-2008	shobby	SRBR014861: Value Is
	; 18-Jan-2008	shobby	SRBR01885: Added callout to CheckConditionOnExecute (renamed)
	; 27-Mar-2007	shobby	SRAdhoc:Created
	;-------------------------------------------------------------------------------
	new idForm,idField,idCompany,idRule,objWWW122D2,objWWW122
	
	$$$VAR
	
	; Test that rules are not trying to set a value of 0 to a yes/no field
	; This will cause an event to fire which sets the value to 'empty' if the
	; field is yes/no which runs the rules again which sets to 0.
	; Not sure why the 'no' value of yes/no fields is empty and not 0.
	;     [ANSWER :  1) less storage 2) allows unset fields to equate immediately
	;                to "NO" - not necessarily good reasons.]
	
	set idForm = ""
	for {
		set idForm = $order(^WWW122D(0,idForm))
		quit:idForm=""
		
		set idField = ""
		for {
			set idField = $order(^WWW122D(0,idForm,idField))
			quit:idField=""
			
			set objWWW122 = $$Get^WWW122(idForm,idField)
			set idCompany = ""
			for {
				set idCompany = $order(^WWW122D2(0,idForm,idField,idCompany))
				quit:idCompany=""
				
				set idRule = ""
				for {
					set idRule = $order(^WWW122D2(0,idForm,idField,idCompany,idRule))
					quit:idRule=""
					
					set objWWW122D2=$get(^WWW122D2(0,idForm,idField,idCompany,idRule,1))
					if $$$WWW122InputType(objWWW122)=2 {
						if $$$WWW122D2ValueIs(objWWW122D2) {
							write !,"Error.  Value for yes/no fields must be set to 'Clear' not 0. (Form="_idForm_",Field="_idField_",Company="_idCompany_")"
						}
					}
				}
			}
		}
	}
	do CheckConditionOnExecute()
	do ValidateAssociatedWithField()
	quit
	
	
CheckConditionOnExecute()
	;-------------------------------------------------------------------------------
	; Check for invalid routines.
	;
	; Called by : Validate^WWW1222D2 (No other instances found)
	; or call from terminal session : d CheckConditionOnExecute^WWW122D2()
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 12-Dev-2008	GRF		SRBR014638: $$$Text macro; remove "new (...)" list
	; 09-Dec-2008	GRF		SRBR014638: Rename - too close to ValidateIfConditionOnExecute
	; 28-Jan-2008	shobby	SRBR014861: Check for incorrect 'ValueIs' fields.
	; 18-Jan-2008	shobby	SRBR014885: Created
	;-------------------------------------------------------------------------------
	new idCompany,idField,idForm,idRule,objWWW122D2,strExecute,strStatus
	
	$$$VAR
	
	set idForm = ""
	for {
		set idForm = $order(^WWW122D2(0,idForm))
		quit:idForm=""
		
		set idField = ""
		for {
			set idField = $order(^WWW122D2(0,idForm,idField))
			quit:idField=""
			
			set idCompany = ""
			for {
				set idCompany = $order(^WWW122D2(0,idForm,idField,idCompany))
				quit:idCompany=""
				
				set idRule = ""
				for {
					set idRule = $order(^WWW122D2(0,idForm,idField,idCompany,idRule))
					quit:idRule=""
					
					set objWWW122D2=$get(^WWW122D2(0,idForm,idField,idCompany,idRule,1))
					if $$$ISERR($$ValidateValueIs(objWWW122D2,.strExecute)) {
						;BR014861
						write !,$$$Text($listbuild("WWW00086",idForm,idField,idCompany,idRule,strExecute))
						;	Error.  If 'Value Is' is a function call it must have the first character as '@'. (Form=%1,Field=%2,Company=%3,Rule=%4)=%5
					
					} elseif $$$ISERR($$ValidateIfConditionOnExecute(objWWW122D2,.strExecute)) {
						write !,$$$Text($listbuild("WWW00084",idForm,idField,idCompany,strExecute))
						;	Error.  'If Condition On Execute' Invalid. (Form=%1,Field=%2,Company=%3)=%4
					}
				}
			}
		}
	}
	quit
	
	
ValidateAssociatedWithField()
	;-------------------------------------------------------------------------------
	; Fields that have an Association to themselves can end up in FRAMESTACK errors
	; if they also have a 'Relation Database'
	;
	; Returns:
	;
	; History:
	; 12-Dev-2008	GRF		SRBR014638: Text replaced
	; 06-Feb-2008	shobby	Created SRAdhoc:
	;-------------------------------------------------------------------------------
	new idField,idForm,idRelatedField,objWWW122
	
	set idField = ""
	for {
		set idField = $order(^WWW122s(0,7,idField))
		quit:idField=""
		
		set idForm = ""
		for {
			set idForm = $order(^WWW122s(0,7,idField,idForm))
			quit:idForm=""
			
			set idRelatedField = $order(^WWW122s(0,7,idField,idForm,""))
			set objWWW122      = $get(^WWW122(0,idForm,idRelatedField,1))
			if $$$WWW122SequenceNumber(objWWW122)=idField {
				write !,$$$Text($listbuild("WWW00107",idForm,idField))
			} ; "Error: Can't associate a field with itself. (%1,%2)"
		}
	}
	quit
	
]]></Routine>
</Export>