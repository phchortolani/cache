<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPPaymentEFT" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPPaymentEFT  ; FIN AP Payment EFT file
	#Include FINConst
	#Include FIN



CreateType0(pstrBank,pstrUser,pstrUIN,pdteDate)
	;-------------------------------------------------------------------------------
	; Create a record Type 0 for the Direct Payment System
	; 
	;	Parameters:
	;		pstrBank	:	The 3 letter name for the bank
	;		pstrUser	:	The user name
	;		pstrUIN		:	The Unique Identifier Number for the account
	;		pdteDate	:	The date of the payment
	;
	; Returns:
	; 		The record data.
	;
	; History:
	; 03-Feb-2004		shobby		RightPad pstrBank if missing.
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	new strRecord
	
	set strRecord=""
	set strRecord=strRecord_"0"							; Record Type 0
	set strRecord=strRecord_$$FillBlank(17)				; Reserved, must be blank
	set strRecord=strRecord_"01"						; Sequence Number, must be 01
	set strRecord=strRecord_$$RightPad(pstrBank,3)		; Name of User Financial Institution
	set strRecord=strRecord_$$FillBlank(7)				; Reserved, must be blank
	set strRecord=strRecord_$$LeftPad(pstrUser,26)		; Name of User supplying file
	set strRecord=strRecord_$$FillChar(pstrUIN,6,"0")	; User Identification Number
	set strRecord=strRecord_$$LeftPad("Banking",12)		; Description of Entries on File
	set strRecord=strRecord_$$FixDate(pdteDate)			; Date to be processed
	set strRecord=strRecord_$$FillBlank(40)				; Reserved, must be blank
	set strRecord=strRecord_$$$CRLF
	
	quit strRecord


CreateType1(pstrBSB,pstrAccountNumber,pstrAmount,pstrTitle,pstrReference,pstrRemitter,pblnFirst=0,pstrBSB1)
	;-------------------------------------------------------------------------------
	; Create a record Type 1 for the Direct Payment System
	; 
	; Parameters:
	;		pstrBSB				:	The BSB of the bank account
	;		pstrAccountNumber	:	The account number of the bank account
	;		pstrAmount			:	The amount for the payment
	;		pstrTitle			:	The title of the account
	;		pstrReference		:	The rerefence of the account
	;		pstrRemitter		:	The remitter for the monies
	;		pblnFirst			:	Is this the first instance for these details.
	;
	; Returns:
	;		The record data.
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	new strRecord
	new strBSB
	new intLen
			
	set strRecord=""
	set strRecord=strRecord_"1"												; Record Type 1
	set pstrBSB=$extract($$StripNonNumeric(pstrBSB),1,6)					; BSB Number
	set pstrBSB=$extract(pstrBSB,1,3)_"-"_$extract(pstrBSB,4,6)
	set strRecord=strRecord_pstrBSB
	set strRecord=strRecord_$$RightPad(pstrAccountNumber,9)					; Account number to be CREDITED
	set strRecord=strRecord_$select(pblnFirst:"N",1:" ")					; Indicator
	set strRecord=strRecord_"50"											; Transaction Code
	set intLen=$length($piece(pstrAmount,".",2))							; Amount
	set pstrAmount=pstrAmount_$select(intLen=1:"0",'intLen:"00",1:"")
	set strRecord=strRecord_$$FillChar($$StripNonNumeric(pstrAmount),10,"0")
	set strRecord=strRecord_$$LeftPad(pstrTitle,32)							; Title of Account to be CREDITED
	set strRecord=strRecord_$$LeftPad(pstrReference,18)						; Lodgement Reference
	; Trace Record - BSB Number
	; Get the BSB from LedPayment.BankAccount.BSBNumber
	;set strBSB=..Payment.BankAccount.BankAccount.BSBNumber
	set strBSB=pstrBSB1   ;TODO What should this be??
	set strBSB=$extract($$StripNonNumeric(strBSB),1,6)
	set strBSB=$extract(strBSB,1,3)_"-"_$extract(strBSB,4,6)
	set strRecord=strRecord_$extract(strBSB,1,7)
	set strRecord=strRecord_$$RightPad($extract(strBSB,1,9),9) ; Trace Record - Account Number
	;set strRecord=strRecord_$$RightPad($extract(..Payment.BankAccount.BankAccount.Number,1,9),9) ; Trace Record - Account Number
	set strRecord=strRecord_$$LeftPad(pstrRemitter,16)						; Name of Remitter
	set strRecord=strRecord_$$FillZeroes(8)									; Reserved, must be zeroes
	set strRecord=strRecord_$$$CRLF
			
	quit strRecord


CreateType7(pstrUserAmount,pstrCalcAmount,pintCountAmount)
	;-------------------------------------------------------------------------------
	; Create a record Type 7 for the Direct Payment System
	;
	; Parameters:
	;		pstrUserAmount	:	The amount as entered by the user
	;		pstrCalcAmount	:	The amount calculated
	;		pintCountAmount	:	The number of Type 1 records
	;
	; Returns:
	; 		The record data.
	; 
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	new strRecord
			
	set strRecord=""
	set strRecord=strRecord_"7"														; Record Type 7
	set strRecord=strRecord_"999-999"												; Reserved, must be 999-999
	set strRecord=strRecord_$$FillBlank(12)											; Reserved, must of blank
	set strRecord=strRecord_$$FillChar($$StripNonNumeric(pstrUserAmount),10,"0")	; File Net Total Amount
	set strRecord=strRecord_$$FillChar($$StripNonNumeric(pstrCalcAmount),10,"0")	; File Credit Total Amount
	set strRecord=strRecord_$$FillBlank(10)											; Reserved (Debit Total Amount)
	set strRecord=strRecord_$$FillBlank(24)											; Reserved, must be blank
	set strRecord=strRecord_$$FillChar(pintCountAmount,6,"0")						; File Total Count of Records Type 1
	set strRecord=strRecord_$$FillBlank(40)											; Reserved, must be blank
			
	quit strRecord


FillBlank(pintLength)
	;-------------------------------------------------------------------------------
	; Fill the string with blanks
	;
	; Parameters:
	; 		pintLength: The number of characters
	; 
	; Returns:
	; 		 The blank filled string
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
  	quit $justify("",pintLength)


FillChar(pstrString,pintLength,pstrFillChar)
	;-------------------------------------------------------------------------------
	; Fills a string with a certain amount of a specific character.
	;
	; Parameters:
	;		pstrString		:	The string to fill
	;		pintLength		:	The number of occurrences to create
	;		pstrFillChar	:	The char(s) to fill with
	;
	; Returns:
	;		The filled string
	;		
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $translate($$RightPad(pstrString,pintLength)," ",pstrFillChar)


FillZeroes(pintLength)
	;-------------------------------------------------------------------------------
	; Fill the string with zeroes
	;
	; Parameters:
	;		pintLength	:	The number of characters.
	;
	; Returns:
	; 		The zero filled string
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $translate($justify("",pintLength)," ","0")


FixDate(pstrDate)
	;-------------------------------------------------------------------------------
	; Method Usage
	;
	; Parameters:
	;		pstrDate	:	The date to fix
	;
	; Returns:
	; 		The fixed date
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $translate($zdate(pstrDate,4,,2),"/")


GenerateEFTFile(pidFINAPPayment="")
	;-------------------------------------------------------------------------------
	; Create an eft file with the following format
	; 			Type0,Type1.1,Type1.2,...,Type1.n,Type7

	;
	; Returns:
	; 		Always $$$OK
	;
	; History:
	; 14-Jan-2005		PO			SR11188 Inform if unable to create location where EFTFile is to be store
	; 08-Jul-2004		shobby		Foreign Currency
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	new objBankAccount,strUIN,intCount,intLoop,objLine,objLines,curTotal,strRemitter,strRef
	new objFINAPPayment,idFINGLBank,objFINGLBank,strUserName,objUser,curDiscount,idxLine,objFINAPPaymentLine
	new objFINAPSupplier,strBSB,strAccountNumber,strAccountName,strBankBSB,blnWroteEFTFile
	new strStatus
	
	kill ^CacheTemp($job,"EFT")
	if pidFINAPPayment="" set pidFINAPPayment=" "
	set objFINAPPayment=$get(^FINAPPayment(YM,pidFINAPPayment,1))
	set blnWroteEFTFile=$$$NO
	if objFINAPPayment'="" {
		set idFINGLBank=$$$FINAPPaymentBankAccount(objFINAPPayment)
		if idFINGLBank'="" {
			set objFINGLBank=$get(^FINGLBank(YM,idFINGLBank,1))
			if objFINGLBank'="" {
				set strUIN=$$$FINGLBankBankAccountType(objFINGLBank)
				set strRemitter=$$$FINGLBankBankAccountName(objFINGLBank)
				set strBankBSB=$$$FINGLBankBankBSB(objFINGLBank)
				if $get(YBED)="" set YBED=" "
				set objUser=$get(^WWW013(0,YBED,1))
				set strUserName=$piece(objUser,Y,1)
				
				set ^CacheTemp($job,"EFT",$i(^CacheTemp($job,"EFT")))=$$CreateType0($$$FINGLBankBankCode(objFINGLBank),strUserName,strUIN,$$$FINAPPaymentPaymentDate(objFINAPPayment))
				
				set curTotal=0
				set intCount=0
				set idxLine=""
				for {
					set idxLine=$order(^FINAPPaymentLine(YM,pidFINAPPayment,idxLine))
					quit:idxLine=""
					set objFINAPPaymentLine=$get(^FINAPPaymentLine(YM,pidFINAPPayment,idxLine,1))
					if objFINAPPaymentLine'="" {
						set objFINAPSupplier	=   $$GetSupplierDetails($$$FINAPPaymentLineSupplierNumber(objFINAPPaymentLine))
						set strBSB				=	$$$FINAPSupplierBankBSB(objFINAPSupplier)
						set strAccountName		=	$$$FINAPSupplierSupplierName(objFINAPSupplier)
						set strAccountNumber	=	$$$FINAPSupplierBankAccountNumber(objFINAPSupplier)
						set strRef				=	$$$FINGLBankBankAccountType(objFINGLBank) set:strRef="" strRef=pidFINAPPayment_"-"_idxLine
						
						set curTotal=$$$FCAdd(curTotal,$$$FINAPPaymentLineTotal(objFINAPPaymentLine))
						set intCount=intCount+1
						set ^CacheTemp($job,"EFT",$i(^CacheTemp($job,"EFT")))=$$CreateType1(strBSB,strAccountNumber,$$$FINAPPaymentLineTotal(objFINAPPaymentLine),strAccountName,strRef,strRemitter,idxLine=1,strBankBSB) ;TODO 2nd BSB???
					}
				}
				; <TODO> Separate amounts for User amount and Calc Amount
				set ^CacheTemp($job,"EFT",$i(^CacheTemp($job,"EFT")))=$$CreateType7(curTotal,curTotal,intCount)
				set strStatus=$$WriteEFTFile(pidFINAPPayment,objFINGLBank) ; SR11188
			}
		}
	}
	kill ^CacheTemp($job,"EFT")
	do ^WWWFORM

	;Not ideal to send script at this point as outside html, however unsure how to correctly implement using alerts.
	;Perhaps procedure ReturnError^COMUtils should be used instead.
	if (strStatus=-1)&&($$$FINGLBankEFTExportFileLocation(objFINGLBank)'="") { ; SR11188
		do writeOutScript^COMUtils("alert('"_$$$Text($listbuild("Fin00564",$$$FINGLBankEFTExportFileLocation(objFINGLBank)))_"');")
	} ;Not able to create location `%1`, either the location is invalid or system does not have permission to create location. In the later case you will need to see your system administrator.
	elseif (strStatus=-2)&&($$$FINGLBankEFTExportFileLocation(objFINGLBank)'="") {
		do writeOutScript^COMUtils("alert('"_$$$Text($listbuild("Fin00574",$$$FINGLBankEFTExportFileLocation(objFINGLBank)))_"');")
	} ;Location for EFT File `%1` is not complete, exact location for the EFT Export File must be provided at Finance > Setup > Account Setup > Bank Accounts.
	quit $$$OK


CheckForEFTFile(pidFINAPPayment)
	; Change button definition for EFTFile if location does not exist.
	;
	; History:
	; 14-Jan-2005		PO		SR11188 Created.
	;
	new strEFTFileMsg,idFINGLBank,objFINGLBank,objFINAPPayment,io

	set strEFTFileMsg=""
	
	if pidFINAPPayment'="" {
		set objFINAPPayment=$get(^FINAPPayment(YM,pidFINAPPayment,1))
		if objFINAPPayment'="" {
			set idFINGLBank=$$$FINAPPaymentBankAccount(objFINAPPayment)
			if idFINGLBank'="" {
				set objFINGLBank=$get(^FINGLBank(YM,idFINGLBank,1))
				if objFINGLBank'="" {
					set io=$$$FINGLBankEFTExportFileLocation(objFINGLBank)

					if '##Class(%File).DirectoryExists(io) {
						set strEFTFileMsg=$$$Text($listbuild("Fin00563",io))  ;The location `%1` does not exist, do you want it created. If you do not create the location the EFTFile will not be generated. To create location click Ok otherwise Cancel.
					}
				}
			}
		}
	}
	set $piece(^WWW124(0,"FINAPPayment",SPRACHE,4,1),Y,17)=strEFTFileMsg

	quit


WriteEFTFile(pidFINAPPayment,pobjFINGLBank)
	;-------------------------------------------------------------------------------
	; Output EFT file to Disc.
	;
	; Returns:
	;
	; History:
	; 14-Jan-2005		PO			SR11188 If location does not exist then create it.
	; 03-Mar-2004		shobby		If path does not have '\' at the end put one on.
	; 25-Feb-2004		shobby		Variable declaration.
	; 04-Feb-2004		shobby		Creation
	;-------------------------------------------------------------------------------
 	;
	new idx,intLines,io,ipio,strStatus
	
	set ipio=$io
	set io=$$$FINGLBankEFTExportFileLocation(pobjFINGLBank)
	set strStatus=1

	if io=$extract(##Class(%File).NormalizeDirectory(io),1,$length(io)) {
		if '##Class(%File).DirectoryExists(io) { ; SR11188
			if '##Class(%File).CreateDirectoryChain(io) {
				set strStatus=-1
			}
		}
	} else {
		set strStatus=-2
	}

	if strStatus=1 {
		if $extract(io,$length(io))'="\" set io=io_"\"
		set io=io_"EFT"_$translate($justify(pidFINAPPayment,5)," ","0")_".txt"
		open io:"wns"
		use io

		if $data(^CacheTemp($job,"EFT")) {
			set intLines=^CacheTemp($job,"EFT")
			for idx=1:1:intLines {
				w ^CacheTemp($job,"EFT",idx),!
			}
		}
		use ipio
		close io
	}
	
	quit strStatus


GetSupplierDetails(pidFINAPSupplier="")
	;-------------------------------------------------------------------------------
	; Get the supplier object if it exists.
	;
	; Returns:
	;
	; History:
	; 03-Feb-2004		shobby		Creation
	;-------------------------------------------------------------------------------
 	;
	new objFINAPSupplier
	
	if pidFINAPSupplier="" set pidFINAPSupplier=" "
	set objFINAPSupplier=$get(^FINAPSupplier(YM,pidFINAPSupplier,1))
	
	quit objFINAPSupplier


LeftPad(pstrString,pintLength)
	;-------------------------------------------------------------------------------
	; Left pad the string with spaces
	;
	; Parameters:
	;		pstrString	:	The string to pad
	;		pintLength	:	The amount of characters to pad out to
	;
	; Returns:
	; 		The padded string
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $reverse($justify($reverse($extract(pstrString,1,pintLength)),pintLength))


RightPad(pstrString,pintLength)
	;-------------------------------------------------------------------------------
	; Right pad the string with spaces
	;
	; Parameters:
	;		pstrString	:	The string to pad
	;		pintLength	:	The amount of characters to pad out to
	;
	; Returns:
	; 		The padded string
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $justify($extract(pstrString,1,pintLength),pintLength)


StripNonNumeric(pstrString)
	;-------------------------------------------------------------------------------
	; Remove all non-numeric characters.
	;
	; Parameters:
	;		pstrString	:	The string to strip
	;
	; Returns:
	; 		The stripped string
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $zstrip(pstrString,"*APCW")
	

CanCreateEFT(pidPay)
	;-------------------------------------------------------------------------------
	; Determines if this payment has already been posted.  If so the EFT file can be created.
	;
	; Returns:
	;
	; History:
	; 04-Mar-2005		PO			SR11790 If no record selected, display appropriate alert.
	; 03-Feb-2004		shobby		Creation
	;-------------------------------------------------------------------------------
 	;
 	new objFINAPPayment,strErrorMessage
 	
	if $$$NoKey(pidPay) {
		set YQ="1 "_$$$Text("Fin00690") ; Please Select A Data Record.
	}
	else {
	 	if $get(pidPay)="" set pidPay=" "
	 	set objFINAPPayment=$get(^FINAPPayment(YM,pidPay,1))
	 	set YQ=0
	
		if objFINAPPayment="" {
	 		set YQ="1 "_$$^WWWTEXT("Fin00215")   ;EFT can only be generated after Payment has been posted.	 		
		} elseif $$$FINAPPaymentStatus(objFINAPPayment)'=$$$EnumFINSYSSTATUSPosted {
	 		set YQ="1 "_$$^WWWTEXT("Fin00215")   ;EFT can only be generated after Payment has been posted.
		} elseif $$$FINAPPaymentPaymentMethod(objFINAPPayment)'=$$$EnumFINARBANKLINEMETHODEFT {
	 		set YQ="1 "_$$^WWWTEXT("Fin00216")	 ;Can only create an EFT file for EFT type Payment Runs.
		} elseif '$$ValidBankAccountDetails(objFINAPPayment,.strErrorMessage) {
			set YQ="1 "_strErrorMessage
		} elseif '$$ValidSupplierDetails(pidPay,.strErrorMessage) {
			set YQ="1 "_strErrorMessage
		}
	}
	quit


ValidBankAccountDetails(pobjFINAPPayment,pstrMessage)
	;-------------------------------------------------------------------------------
	; method to test whether all required bank account details are present.
	;
	; Returns:
	;
	; History:
	; 07-Feb-2004		Steve S		Modified Language Text Fin00225 "No Path" instead
	; 								of "Invalid Path".
	; 03-Feb-2004		shobby		Creation
	;-------------------------------------------------------------------------------
 	;
	new idFINGLBank,objFINGLBank
	
	set idFINGLBank=$$$FINAPPaymentBankAccount(pobjFINAPPayment)
	if idFINGLBank="" set idFINGLBank=" "
	set objFINGLBank=$get(^FINGLBank(YM,idFINGLBank,1))
	set pstrMessage=""
	if objFINGLBank="" {
		set pstrMessage=$$^WWWTEXT("Fin00217") ;Bank Account is not valid.
	} elseif $$$FINGLBankEFTExportFileLocation(objFINGLBank)="" {
		set pstrMessage=$$$Text($lb("Fin00225",idFINGLBank)) ;No path specified to save EFT file.
	} elseif $$$FINGLBankBankAccountType(objFINGLBank)="" {
		set pstrMessage=$$$Text($lb("Fin00218",idFINGLBank)) ;No Bank Account Type setup for ´%1´.
	} elseif $$$FINGLBankBankAccountName(objFINGLBank)="" {
		set pstrMessage=$$$Text($lb("Fin00219",idFINGLBank)) ;No Bank Account Name setup for ´%1´.
	} elseif $$$FINGLBankBankBSB(objFINGLBank)="" {
		set pstrMessage=$$$Text($lb("Fin00220",idFINGLBank)) ;No Bank Account BSB setup for ´%1´.	
	}
	quit (pstrMessage="")


ValidSupplierDetails(pidFINAPPayment,pstrMessage)
	;-------------------------------------------------------------------------------
	; Check all the lines for valid supplier details
	;
	; Returns:
	;
	; History:
	; 03-Aug-2004		shobby		Returned the Status. (SR10171)
	; 03-Aug-2004		shobby		Check whether Supplier is on Hold (SR10171).
	; 03-Feb-2004		shobby		Creation
	;-------------------------------------------------------------------------------
 	;
	new idLine,objFINAPPaymentLine,intCount,objFINAPSupplier,idFINAPSupplier,strStatus
	new objFINAPPayment
	
	set idLine=""
	set pstrMessage=""
	set intCount=0
	set strStatus=$$$OK
	set objFINAPPayment=$get(^FINAPPayment(YM,pidFINAPPayment,1))
	for  {
		set idLine=$order(^FINAPPaymentLine(YM,pidFINAPPayment,idLine))
		quit:idLine=""
		set intCount=intCount+1
		set objFINAPPaymentLine	= $get(^FINAPPaymentLine(YM,pidFINAPPayment,idLine,1))
		set idFINAPSupplier		= $$$FINAPPaymentLineSupplierNumber(objFINAPPaymentLine)
		set objFINAPSupplier	= $$GetSupplierDetails(idFINAPSupplier)
		if $$$FINAPPaymentPaymentMethod(objFINAPPayment)=$$$EnumFINARBANKLINEMETHODEFT {
			if objFINAPSupplier="" {
				set strStatus=$lb("Fin00221",intCount) ;No Supplier on line '%1'.
				set pstrMessage=$$$Text(strStatus)
			} elseif $$$FINAPSupplierBankBSB(objFINAPSupplier)="" {
				set strStatus=$lb("Fin00222",idFINAPSupplier) ;No Bank Account BSB setup for Supplier ´%1´.
				set pstrMessage=$$$Text(strStatus)
			} elseif $$$FINAPSupplierSupplierName(objFINAPSupplier)="" {
				set strStatus=$lb("Fin00223",idFINAPSupplier) ;No Supplier Name setup for Supplier ´%1´.
				set pstrMessage=$$$Text(strStatus)
			} elseif $$$FINAPSupplierBankAccountNumber(objFINAPSupplier)="" {
				set strStatus=$lb("Fin00224",idFINAPSupplier) ;No Bank Account Number set up for Supplier ´%1´.
				set pstrMessage=$$$Text(strStatus)
			}
		}
		if $$$FINAPSupplierOnHold(objFINAPSupplier) {
			set strStatus=$lb("Fin00360",idFINAPSupplier)  ;Can not proceed. Supplier '%1' is 'On Hold'.
			set pstrMessage=$$$Text(strStatus)
		}		
		quit:$$$ISERR(strStatus)
	}
	quit strStatus
]]></Routine>
</Export>