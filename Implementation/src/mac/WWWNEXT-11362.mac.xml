<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWNEXT" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWNEXT(pYFORMDATEI,YZAHL)
	
#include WWWConst
#include COMSYS
	
	;---------------------------------------
	; Numerator Classes
	;			WWW128		WWW1280		WWW1281		WWW128Form
	;	P1		Form		Form		Form		Class
	;	P2		 -			Location	Sequence	Form (associated with P1)
	;	
	;	D1		SeqNo		SeqNo		SeqNo		Prefix
	;	D2		Increment	Increment	 -			Link Class
	;	D3		Reset		Reset
	;	D4		ResetYear	ResetYear
	;---------------------------------------
	
	;------------------------------------------------------------------------------
	; Description of Function :
	;		NAESCHSTE LAUFENDE NUMMER
	;      SET NO=$$^WWWNEXT(FORMNAME)
	;
	; Inputs : 
	;   pYFORMDATEI  : FORMUALR / FORM ;shape 
	;   YZAHL  : ZAHLER, UM DEN HOCHGEZÄHLT WIRD / SEQUENCE
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 28-Aug-2013	shobby	CORE-251: Fixed problem with INCALL form
	; 02-May-2012	shobby	SR17817: Check whether this has been called from a save
	;							in a form (idYFORM).  Otherwise for background processes
	;							continue as before.
	; 02-Jul-2008	shobby	SRBR014965: Reworked so that multiple forms/classes can
	; 							share a numbering sequence (with a different prefix)
	; 25-Sep-2007	GRF		SR15602: variables moved to NEW in subroutine; A=>idNext;
	; 						Consolidate YDATEI/YFKEY decisions
	; 12-Aug-2005	Steve S	Macro Usage
	; 06-Jun-2005	GRF		Replace $data(YM) with $get; !=>||
	; 31-May-2005	RobertW	SR12056: Attempt at Performance Improvement
	; 17.03.1999	DT
	;-----------------------------------------------------------------------------
	new idNext,YDATEI,YI
	new idYFORM,objWWW128,strCheckList,strLink,strPrefix
	
	; BR014965.  A bit of juggling of parameters here.  previously the parameter YFORM contained the class (usually)
	; and the actual YFORM in the calling routines could be different.
	set idYFORM=$get(YFORM)
	new YFORM
	set YFORM = $get(pYFORMDATEI)
	;==========================================================================
	set YZAHL =+$get(YZAHL)
	if YZAHL=0 set YZAHL=1
	if $get(YM)="" set YM=0 
	
	set idNext=""
	if YFORM="" quit ""   ;KEIN FORMULAR ;no form
	
	if $get(YUCI)="" set YUCI=$ZUTIL(5)
	if $get(Y)="" do ^WWWVAR
	
	set strPrefix = $$GetPrefix^WWW128Form(YFORM,idYFORM)
 	set strLink   = $$GetLink^WWW128Form(YFORM,idYFORM)
	
	set YDATEI = $$$WWW120ClassUsedInForm($get(^WWW120(0,YFORM,1)))
	if YDATEI'="" if ($$$WWW001SharedFile($get(^WWW001(0,YDATEI,1)))=1)||(YDATEI="WWW009") new YM set YM=0  ;when shared data file - Deprecated
	if strLink'="" set YFORM = strLink 	; Redirect the Numerator to another class
	 
	if '$DATA(^WWW128(YM,YFORM,1)) set ^WWW128(YM,YFORM,1) = $$DefaultSequenceNo^COMUtils()  ; returns site or server with "0000000"
	if '$DATA(^WWW128(YM,YFORM,1)) set ^WWW128(YM,YFORM,1) = 0     ; FIXME : The previous line will ensure $data is "true" - deprecated? <GRF>
	
	if YDATEI="" {  ; without a class
		do NEXT
	} else {
	 	set strCheckList = $$GetPrefixes^WWW128Form(YFORM)
		for {
			do NEXT
			quit:'$$Find(strCheckList,idNext,$piece($$GetKey(.YKEY,$get(YFKEY)),Y,1)) ;CORE-251
			; 17974 the following line caused translation DCM to stop and exceed license limit preventing login with
			; browser or studio as many processes were stuck in WWWNEXT.
			; Further investigation as some processes won't have anything in WWWDATEN
			; maybe if $get(YFKEY)="" set YFKEY=$piece(^WWWDATEN(YM,+$h,YUSER,YFORM,"P",1),",",1)
			;SR17817 (reverted 28-Dec-2011 17974) quit:'$$Find(strCheckList,idNext,$piece(^WWWDATEN(YM,+$h,YUSER,YFORM,"P",1),",",1)) ;SR17817
			;CORE-251 will cause failure on current record. quit:($get(YUSER)'="")&&($get(idYFORM)'="")&&'$$Find(strCheckList,idNext,$piece(^WWWDATEN(YM,+$h,YUSER,idYFORM,"P",1),",",1)) ;SR17817
		}
	}

	quit strPrefix_idNext

GetKey(&YKEY,YFKEY="") ;CORE-251
	;-------------------------------------------------------------------------------
	; Build up the key
	;
	; Returns:
	;
	; History:
	; 28-Aug-2013	shobby	CORE-251: Removed trailing ,
	; 24-Aug-2013	shobby	CORE-251: Created
	;-------------------------------------------------------------------------------
 	new YFKEY,i
 	
 	if $get(YFKEY)="" {
	 	set YFKEY=""
	 	set i=$order(YKEY(""),-1)
	 	for { 
	 		set i=$order(YKEY(i),-1)
	 		quit:(i="")
	 		set YFKEY=YFKEY_YKEY(i)_","
	 	}
 	}
 	if $extract(YFKEY,$length(YFKEY))="," set $extract(YFKEY,$length(YFKEY))="" ; CORE-251
 	
 	quit YFKEY

Index(YDATEI)
	;-------------------------------------------------------------------------------
	; Find the index on the last primary key
	;
	; Returns:
	;
	; History:
	; 28-Aug-2013	shobby	CORE-251: Initialise intIndex
	; 01-Dec-2011	shobby	SR17817 Created
	;-------------------------------------------------------------------------------
	new idWWW002,intIndex,objWWW002
	set idWWW002=$order(^WWW002(0,YDATEI,""),-1)
	set intIndex="" ;CORE-251
	if idWWW002'="" {
		set objWWW002=$get(^WWW002(0,YDATEI,idWWW002,1))
		set intIndex=$$$WWW002IndexKey(objWWW002)
	}
	quit intIndex

	
Find(pstrCheckList,pidNext,pYFKEY)
	;-------------------------------------------------------------------------------
	; Determine whether this record has already been used, considering the sharing of
	; IDs (ignoring prefix)
	;
	; When allocating a new sequence number it is necessary to check all associated
	; classes - each potentially its own prefix - to ensure that the number has not
	; been allocated elsewhere.  pstrCheckList contains all possible cross-checks
	; that are required.
	; 
	; Inputs:
	; 	pstrCheckList		Prefix1;Class1~Prefix2;Class2~...
	; 	pidNext				Sequence key generated by NEXT that needs testing
	; 	pYFKEY				Prior keys for record (Counter key may not be the first key)
	;
	; Returns:
	;
	; History:
	; 20-May-2009	GRF		SRBR014965: standardise variables; doco; YM already set.
	; 04-Jul-2008	GRF		SRBR014965: Doco
	; 03-Jul-2008	shobby	SRBR014965: Created
	;-------------------------------------------------------------------------------
	new blnFound,idClass,objPrefix,loop,strPrefix,strKey
	new intIndex ;SR17817
	
	set blnFound = $$$NO
	for loop=1:1:$length(pstrCheckList,Y) {
		quit:blnFound
		
		set objPrefix = $piece(pstrCheckList,Y,loop)
		set strPrefix = $piece(objPrefix,";",1)
		set idClass   = $piece(objPrefix,";",2)
		
		if pYFKEY="" {
			set blnFound = $data(@("^"_idClass_"("""_YM_""","""_strPrefix_pidNext_""")"))
		} else {
			set intIndex=$$Index(idClass)
			if (intIndex'="") {
				; This will ensure that the counter field is unique even if proceeding primary keys are different.
				set blnFound=$data(@("^"_idClass_"s("""_YM_""","""_intIndex_""","""_$$Index^COMUtils(strPrefix_pidNext)_""")"))
			} else {
				set blnFound = $data(@("^"_idClass_"("""_YM_""","""_pYFKEY_""","""_strPrefix_pidNext_""")"))
			}
		}
	}
	quit blnFound
	
	
NEXT
	;-------------------------------------------------------------------------------
	; History :
	; 20-Sep-2013	shobby	HEVA-922: When reset the first number in the new series will be 1 not 0
	; 20-Feb-2008	GRF		SRBR014880: Peer Review corrections
	; 19-Feb-2008	GM		SRBR014880: set increment value to zero When "$$MustResetYear() = 1"
	; 12-Feb-2008	GM		SRBR014880: back increment value to zero when start new year
	; 							and button "ResetOnChangeOver" is selected
	; 25-Sep-2007	GRF		SR15602: don't override general setting with location-based
	; 							update; determine split of prefix and value from RHS
	; 							when find non-numeric rather than from LHS with
	; 							first digit; Increment factor 10/100 converted to
	; 							while statement; avoid single digit variables
	; 							(A=>idNext, B=>strPrefix, Q=>intIncr, replace C, D
	; 							and with intLenValue)   (original code moved to
	; 							oldNEXT with wrapper RunOldNEXT)
	; 20-Sep-2007	GRF		SRBR014719: Doco
	; 17-Sep-2007	GRF		SR15601: Replace "YEAR" transformation with "YYYY" and
	; 							generate 2 digit year from "YEAR"
	; 04-Jun-2007	GRF		SR15533: Never rollback a new number record
	; 13-Mar-2007	GRF		Highlight locking
	; 08-May-2006	Steve S	Use $$^WWWFORMNAME
	; 18-Jan-2006	PO		SR14109: Wait for 10s to get lock - if lock not granted,
	; 							error out with reason why then terminate process.
	; 							Included error trap for extra precaution - should
	; 							not be required.  Immediately remove lock in case
	; 							called from within a transaction.
	; 18-Jul-2005	RobertW	SR12994: Fix a missing $get around YLOCATION
	;-------------------------------------------------------------------------------
	set $ztrap = "NEXTError"
	
	new blnLocnBased,blnResetYear,char,intIncr,intLenValue,intValue
	new objWWW128,objWWW1280,strDescription,strPrefix
	
	; FIXME : <GRF> May have two forms with same class.  If using a numerator they will
	;               have separate streams of numbers though these could possibly just
	;               leapfrog over each other.  If both forms are used at the same time
	;               the locks below will fail allowing them to possibly get the same
	;               number.  (Small window of opportunity - only open until the class
	;               record is written at which time the $data test above will stop any
	;               duplication.)
	
	
	;***************************************
	lock +^WWW128(YM,YFORM):10
	;***************************************
	
	if $test {
		set objWWW128  = $get(^WWW128(YM,YFORM,1))
		if ($get(YLOCATION)'="") && $data(^WWW1280(YM,YFORM,YLOCATION,1)) {
			set objWWW1280 = $get(^WWW1280(YM,YFORM,YLOCATION,1))
			set blnLocnBased = $$$YES
		} else {
			set objWWW1280=""
			set blnLocnBased = $$$NO
		}
		
		;-----------------------------------
		;  YZAHL : Increment by (default 1)  ;ZÄHLER
		;-----------------------------------
		if blnLocnBased {
			if YZAHL=1 {
				set intIncr = +$piece(objWWW1280,Y,2)
				if intIncr set YZAHL=intIncr
			}
			
			set idNext = $piece(objWWW1280,Y,1)
			if idNext="" {
				set idNext=$piece(objWWW128,Y,1)   ; only basing increment locally - can't
				set blnLocnBased = $$$NO           ; tell why this would occur but handles it
			}
		} else {
			if YZAHL=1 {
				set intIncr = +$piece(objWWW128,Y,2)
				if intIncr set YZAHL = intIncr
			}
			set idNext = $piece(objWWW128,Y,1)
			
		}
		
		;---------------------------------------------------------------------------
		;  e.g. based on "ABC2:00007"
		;		               "ABC2:00007"
		;		               "70000:2CBA" => "70000" 
		;		strPrefix      ":2CBA"      => "ABC2:"
		;		               "00007"
		;		intLenValue     5
		;		+1  intValue   7 => 8             (with ...0 or ...00 rounding)
		;		               "00008"
		;		idNext         "ABC2:00008"
		;---------------------------------------------------------------------------
		
		set strPrefix = $reverse(idNext)
		for {
			quit:'$find("1234567890",$extract(strPrefix))
			quit:strPrefix=""
			
			set strPrefix=$extract(strPrefix,2,999)
		}
		set strPrefix = $reverse(strPrefix)
		if strPrefix'="" {
			set intValue = $piece(idNext,strPrefix,2)
		} else {
			set intValue = idNext
		}
		set intLenValue = $length(intValue)      ; includes leading zeros
		set intValue = intValue + YZAHL          ; strips leading zeros when increments
		
 		set blnResetYear =  $$MustResetYear(YFORM,YLOCATION,blnLocnBased)
 		if blnResetYear set intValue = 1 ; HEVA-922
		
		; If trailing zeros are specified in increment
		;-----------------------------------
		; FIXME : <GRF> Is it more appropriate to use "intValue#YZAHL'=0"?
		;         This will ensure rounded to next multiple of say 20 rather than
		;         rounding to powers of 10 after adding 20.
		;-----------------------------------
		; Next 10*x
		; NOTE: may skip an entry
		;       e.g. last number = 206, increment => 216, next "0" = 220, doesn't set 210.
		if $extract(YZAHL,$length(YZAHL))="0" {
			while intValue#10'=0 {
				set intValue = intValue+1
			}
		}
		
		; Next 100*x
		; NOTE: may skip an entry
		;       e.g. last number = 206, increment => 306, next "00" = 400, doesn't set 300.
		if $extract(YZAHL,$length(YZAHL)-1,$length(YZAHL))="00" {
			while intValue#100'=0 {
				set intValue = intValue+1
			}
		}
		
		; Reconstruct identifier
		;-----------------------------------
		set idNext = strPrefix_$translate($justify(intValue,intLenValue)," ","0")
		
		;+++++++++++++++++++++++++++++++++++   ; Never rollback a new number record
		$$$JournalOff
		;+++++++++++++++++++++++++++++++++++
		
		;-----------------------------------
		; Save the change - ONLY at the level the original value came from.
		;-----------------------------------
		if blnLocnBased {
			set $$$WWW1280LastUsedSequenceNumber(^WWW1280(YM,YFORM,YLOCATION,1)) = idNext
			if blnResetYear set $$$WWW1280LastResetYear(^WWW1280(YM,YFORM,YLOCATION,1)) = +$zdate($horolog,3)
		} else {
			set $$$WWW128SequenceNumber(^WWW128(YM,YFORM,1))                     = idNext
			if blnResetYear set $$$WWW128LastResetYear(^WWW128(YM,YFORM,1))      = +$zdate($horolog,3)
		}
		;+++++++++++++++++++++++++++++++++++
		$$$JournalOn
		;+++++++++++++++++++++++++++++++++++
		
		;***********************************
		lock -^WWW128(YM,YFORM)#"I"            ; SR14109
		;***********************************
		
		if $find(idNext,"YEAR")     set idNext = $piece(idNext,"YEAR",1)    _$extract($$^WWWYEAR(),3,4)_$piece(idNext,"YEAR",2)
		if $find(idNext,"YYYY")     set idNext = $piece(idNext,"YYYY",1)    _$$^WWWYEAR()              _$piece(idNext,"YYYY",2)
		if $find(idNext,"USER")     set idNext = $piece(idNext,"USER",1)    _$get(YBED)                _$piece(idNext,"USER",2)
		if $find(idNext,"LOCATION") set idNext = $piece(idNext,"LOCATION",1)_$get(YLOCATION)           _$piece(idNext,"LOCATION",2)
		if $find(idNext,"BETRIEB")  set idNext = $piece(idNext,"BETRIEB",1) _$get(YLOCATION)           _$piece(idNext,"BETRIEB",2)
		if $find(idNext,"COMPANY")  set idNext = $piece(idNext,"COMPANY",1) _$get(YM)                  _$piece(idNext,"COMPANY",2) ; Deprecated
		if $find(idNext,"MANDANT")  set idNext = $piece(idNext,"MANDANT",1) _$get(YM)                  _$piece(idNext,"MANDANT",2) ; Deprecated
	
	} else {
		set strDescription = $$^WWWFORMNAME(YFORM)
		set:strDescription="" strDescription = YFORM
		
		;-----------------------------------
		; Next number for ´%1´ can not be determined, contact your systems administrator.
		;-----------------------------------
		if $get(%("%KEY","HYPEREVENT")) {
			$$$Alert($listbuild("WWW00001",strDescription))         
		} else {
			$$$AlertInScript($listbuild("WWW00001",strDescription))
		}
		halt
	}
	quit
	
NEXTError ; Internal Tag
	set $ztrap = ""
	;***************************************
	lock -^WWW128(YM,YFORM)
	;***************************************
	quit
	
	
Reset(pidForm,pidReset,pidLoc="")
	;-------------------------------------------------------------------------------
	; Reset the sequence number.
	; 
	; Note: Currently only works if numerator form is same as class.
	;
	; Params:	pidForm 	- numerator id (WWW128)
	; 			pidLoc		- (optional) 2nd key to WWW1280
	; 			pidReset 	- value to re-use.
	; 						  ie - the numerator should be set to a value before this one
	;
	; Returns:
	;
	; History:
	; 10-Jan-2007	JW		SR15347: Created. Moved from INDRPAUFKILL.
	;-------------------------------------------------------------------------------
	new idLast,idNewLast,blnLoc
	
	set idNewLast=""
	
	set $ztrap = "NEXTError"
	;***************************************
	LOCK +^WWW128(YM,pidForm):10
	;***************************************
	
	// If can't get the lock, don't worry about re-setting, not that important.
	if $test {
		set blnLoc = ((pidLoc'="") && $data(^WWW1280(YM,pidForm,pidLoc)))  ; Location Dependant Numerator
		
		if blnLoc {
			set idLast = $$$WWW1280LastUsedSequenceNumber($get(^WWW1280(YM,pidForm,pidLoc,1)))
		} else {
			set idLast = $$$WWW128SequenceNumber($get(^WWW128(YM,pidForm,1)))
		}
		
		// Note - the following block was not changed from the original. It probably should be 
		// 		  optimised using the same sort of functionality as WWWNEXT or FINAPChequeBook.
		// 		  I'm sure the execution isn't great.
		
		if $$$IsPosInt(idLast) && (idLast'<(pidReset-1)) {		; Numeric
			set idNewLast = pidReset-1
			
		} else {
			xecute "set idLast = $order("_$$$GlobalString(pidForm,idLast)_",-1)"
			if (idLast'="") && (pidReset]]idLast) {				; Alphanumeric
				set idNewLast = idLast
			}
		}
		
		if idNewLast'="" {		// Are we re-setting ?
			if blnLoc {
				set $$$WWW1280LastUsedSequenceNumber(^WWW1280(YM,pidForm,pidLoc,1)) = idNewLast
			
			} else {
				set $$$WWW128SequenceNumber(^WWW128(YM,pidForm,1)) = idNewLast
			}
		}
		
		;***********************************
		LOCK -^WWW128(YM,pidForm)#"I"
		;***********************************
	}
	quit idNewLast
	
	
MustResetYear(pidForm,pidLocn,pblnLocnBased) PRIVATE
	;-------------------------------------------------------------------------------
	; Check data to reset the sequence number.
	;
	; Params:
	; 	pidForm 		- form name
	; 	pidLocn			- location
	; 	pblnLocnBased 	- is numbering based on location
	; 						  
	; Returns:
	; 	boolean 
	; History:
	; 20-Feb-2008	GRF		SRBR014880: Peer Review corrections
	; 13-Feb-2008	GM		SRBR014880: Created
	;-------------------------------------------------------------------------------
	new blnReset,blnResult,intLastReset
	
	if pblnLocnBased {
		set blnReset = $$$WWW1280ResetOnChangeOver($get(^WWW1280(YM,pidForm,pidLocn,1)))
		set intLastReset = $$$WWW1280LastResetYear($get(^WWW1280(YM,pidForm,pidLocn,1)))
	} else {
		set blnReset = $$$WWW128ResetOnChangeOver($get(^WWW128(YM,pidForm,1)))
		set intLastReset = $$$WWW128LastResetYear($get(^WWW128(YM,pidForm,1)))
	}
	
	if blnReset="" {
		set blnResult = $$$NO
			
	} elseif intLastReset=+$zdate($horolog,3) {
		set blnResult = $$$NO
			
	} else {
		set blnResult = $$$YES
	}
	quit blnResult
	
	


]]></Routine>
</Export>