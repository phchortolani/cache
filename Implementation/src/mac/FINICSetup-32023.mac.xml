<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINICSetup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
    ;-------------------------------------------------------------------------------
    ; FINICSetup - routines supporting Inter company setups
    ;-------------------------------------------------------------------------------
	#include COMSYS
	#include FINConst
 
OnBeforeSave(pYKEY,pYFELD)
    ;-------------------------------------------------------------------------------
    ; Check whether accounts are valid
    ;
    ; Params: object
    ;
    ; Returns: nil
    ;
    ; History:
    ; 30-Jun-2005	JW		SR10412: Created
    ;-------------------------------------------------------------------------------
    quit:$get(pYKEY)=""
    quit:$get(pYFELD)=""
    
    new idAccount,strStatus
    set strStatus=$$$OK
    
    set idAccount = $$$FINICSetupToAccount(pYFELD)
    if idAccount'="" && '$data(^FINGLAccount(YM,idAccount,1)) {
	    set strStatus = $listbuild("Fin00067",idAccount)  ;Account %1 does not exist
	    
    } else {
    	for idAccount=$$$FINICSetupDefaultDistributionAccoun(pYFELD),$$$FINICSetupFromAccount(pYFELD) {
		    
		    if idAccount'="" && '$data(^FINICAccount(YM,pYKEY,idAccount,1)) {
			    set strStatus = $listbuild("Fin00067",idAccount)  ;Account %1 does not exist
		    }
		    quit:$$$ISERR(strStatus)
    	}
    }
	
	if $$$ISERR(strStatus) {
		set Q=$$$QDontSave
		do ReturnError^COMUtils(strStatus)
	}
	
	quit
 
ValidateAccounts(pidCompany="",pblnShow=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Check the accounts for the company at its DCM site.
    ;
    ; History:
    ; 28-Jun-2005	JW		SR10412: Cleaned up
    ; 23-Jun-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
    new strStatus,objSetup,idAccount,arrAccounts,strAccountError,strReason,objAcct
    
    set pidCompany = $piece(pidCompany,",",1)
    
    set strStatus=$$$OK
    if pidCompany'="" {
	    set objSetup=$get(^FINICSetup(YM,pidCompany,1))
	    
	    set idAccount=""
	    for {
		    set idAccount=$order(^FINICAccount(YM,pidCompany,idAccount))
		    quit:idAccount=""
		    
		    set arrAccounts(idAccount)=""
	    }
	    set strStatus=$$$ExecuteSite($$$FINICSetupSite(objSetup),"ValidateAccountList^FINICSetup",.arrAccounts)
	    
	    if $$$ISERR(strStatus) {
	    	set strReason=$$$Text(strStatus)
	    }
	    set strAccountError = ""
	    
   		for {
	    	set idAccount=$order(arrAccounts(idAccount))
	    	quit:idAccount=""
			
			;if strStatus'=1 set arrAccounts(idAccount)=strStatus
	    	;if arrAccounts(idAccount)=$$$OK {
	    	;	set $$$FINICAccountBlockedReason(^FINICAccount(YM,pidCompany,idAccount,1))=""
	    	;} else {
		    ;	set $$$FINICAccountBlockedReason(^FINICAccount(YM,pidCompany,idAccount,1))=$$$Text(arrAccounts(idAccount))
	    	;}
			
	    	if $$$ISOK(strStatus) {
		    	if $$$ISOK(arrAccounts(idAccount)) {
	    			set strReason=""
	    		} else {
	    			set strReason=$$$Text(arrAccounts(idAccount))
	    			if strAccountError="" {
	    				set strAccountError = strReason
	    			}
	    		}
	    	}
	    	set objAcct = $get(^FINICAccount(YM,pidCompany,idAccount,1))
	    	if $$$FINICAccountBlockedReason(objAcct)'=strReason {
		    	set $$$FINICAccountBlockedReason(objAcct) = strReason
		    	do Save^FINSYS("FINICAccount",pidCompany_","_idAccount,objAcct,1)
	    	}
   		}
    }
    
    if $$$ISOK(strStatus) {
	    
	    if strAccountError="" {  // Remove reminders
		    do RemoveError^COMUtilError("FINICSetup",pidCompany)
	    }
	    
	    if pblnShow {
			;do RedirectForm^COMUtils("FINICAccount",pidCompany)
			do ReloadForm^COMUtilForm()
	    } else {
		    set strStatus = "Fin00755" ; OK
		    
		    if strAccountError'="" {	// Create reminder
			    do RaiseError^COMUtilError(strAccountError,"FINICSetup",pidCompany)
		    }
	    }
	    
	} else {
		if pblnShow {
			do ReturnError^COMUtils(strStatus)
			
		} else {	// Create reminder
			do RaiseError^COMUtilError(strStatus,"FINICSetup",pidCompany)
		}
	}
 
    quit $$$Text(strStatus)
 
 
ValidateAccountList(parrAccounts)
    ;-------------------------------------------------------------------------------
    ; Validate List of Accounts for postability
    ;
    ; Returns:	parrAccounts passed by reference = status
    ;
    ; History:
    ; 23-Feb-2006	RPW		SR13816: Modified to call FINGLJournal instead of FINGLJournal
    ; 23-Jan-2006	RPW		SR13087: Modified to call FINGLTranIC instead of FINGLJournalIC
    ; 23-Jun-2005	Paul K	SR10412: Created
    ;-------------------------------------------------------------------------------
	new idAccount
	
	set idAccount=""
	for {
		set idAccount=$order(parrAccounts(idAccount))
		quit:idAccount=""
		
		;set parrAccounts(idAccount)=$$ValidateAccount^FINGLJournalIC(idAccount) ; SR13087
		set parrAccounts(idAccount)=$$ValidateAccount^FINGLAccount(idAccount) ; SR13087
	}
	
	quit $$$OK
 
OnAfterDataFields(pYSEITE="",pYKEY)
	;-------------------------------------------------------------------------------
    ; Execute After Data Fields...
    ;
    ; Returns:
    ;
    ; History:
    ; 29-Jun-2005	JW		SR10412: Created
    ;-------------------------------------------------------------------------------
	
	if ($get(pYKEY)'="") && (pYSEITE=1) { // Show validation schedule on first tab
		do AfterDataField^COMSchedule(pYKEY,YFORM,"ValidateAccounts^FINICSetup(´"_pYKEY_"´)",$$$Text("Fin00819"))  ;Account Validation Schedule
	}
	quit
 
    /*-------------------------------------------------------------------------------
    ; Get the accounts for the intercompany setup
    ;
    ; Params:
    ; pidCompany: The primary key for the InterCompany Setup
    ;
    ; ByRefs:
    ; pidCompanyAccount: The company account
    ; pidAccount       : The local account
    ;
    ; Returns:
    ;
    ; History:
    ; 23-Jan-2006	RobertW		SR13807: Created
    ;-------------------------------------------------------------------------------*/
GetAccounts(pidCompany,&pidCompanyAccount,&pidAccount)
	new objICSetup
	
	if pidCompany'="" {
		set objICSetup=$get(^FINICSetup(YM,pidCompany,1))
		set pidCompanyAccount=$$$FINICSetupDefaultDistributionAccoun(objICSetup)
		set pidAccount=$$$FINICSetupToAccount(objICSetup)
	} else {
		set pidCompanyAccount=""
		set pidAccount=""
	}
 
	quit
	
GetAccountStatus(pidCompany,pidCompanyAccount)
    ;-------------------------------------------------------------------------------
    ; Return the blocked status for an inter-company account
    ;
    ; Params:	
    ; pidCompany       : The id of the company
    ; pidCompanyAccount: The id of the intercompany account
    ;
    ; Returns:	"" if ""						PK wrote this returns, not me... I just like the comic value!
    ; 			Otherwise - status of account
    ;
    ; History:
    ; 23-Jan-2006	RPW		SR13087: Migrated from FINGLJournalIC and adapted to be more generic,
    ; 						in that it used to pass in the line and get the company and company account
    ; 						now they are passed in.
    ;-------------------------------------------------------------------------------
	new strMsg,idCompany,strDescription,objAcct
	
	set strMsg=""
	
	if pidCompanyAccount'="" {
		if pidCompany="" { // not IC
			if '$data(^FINGLAccount(YM,pidCompanyAccount,1)) {
				set strMsg = $$$Text($listbuild("Fin00067",pidCompanyAccount)) ; Account %1 does not exist
			} else {
				set strDescription = $$$FINGLAccountDescription($get(^FINGLAccount(YM,pidCompanyAccount,1)))
			}
			
		} elseif $data(^FINICAccount(YM,pidCompany,pidCompanyAccount,1)) {  ; IC account in IC list - Get reason
			set objAcct = $get(^FINICAccount(YM,pidCompany,pidCompanyAccount,1))
			set strMsg = $$$FINICAccountBlockedReason(objAcct)
			set strDescription = $$$FINICAccountDescription(objAcct)
			
		} else {		  ; Account not in IC list
			if $$$FINICSetupOtherAccountsAllowed($get(^FINICSetup(YM,pidCompany,1))) { ; Allowed
				set strMsg = $$$Text("Fin00823")  ;Account not validated until post
				
			} else {	; not allowed
				set strMsg = $$$Text($listbuild("Fin00824",pidCompanyAccount))  ;Account %1 not in Inter Company List
			}
		}
		
		if strMsg="" {		// If it's ok, show the description
			set strMsg = $$$Text("Fin00755")_" ("_$get(strDescription)_")" ; OK
		}
	}
	quit strMsg
 
 
 
 
]]></Routine>
</Export>