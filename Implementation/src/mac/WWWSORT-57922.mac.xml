<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWSORT" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWSORT
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		SORTKEYS NEU
	;		Recreates ALL keys for a class
	;
	;
	;		SET VORG(1)="FILE,FILEn"
	;		SET YQ=1                     ;NO MESSAGE ;table-mat 
	;		DO ^WWWSORT
	; or	DO NEW^WWWSORT(FILE)
	; or	DO NEW^WWWSORT(FILE,INDEX)   ;ONLY THIS INDEX 
	; or	DO ^WWWSORTFAST(FILE,BITMAP) ;ONLY FAST
	;
	; Inputs : 
	;
	;
	; ByRef :
	; 	VORG(1)		List of classes to be rebuilt
	;	YUMLAU		Switch whether WWWUMLAU or simple lower to upper case required
	;
	; Returns :
	;
	;
	; History :
	; 30-Dec-2013	SCR		SESDF655: Use COMIndex
	; 07-Feb-2008	GRF		Doco; quits - see WWWSORTDoco
	; 20.08.1997	DT		created
	;-------------------------------------------------------------------------------
	IF '$DATA(YQ) SET YQ=0  ;SET YQ=1  ;=KEINE MELDUNG ;table-mat status signal 
	SET VORG(1)=$TRANSLATE(VORG(1),",",";")
	
	NEW I,YDATEI,YA,YKEY,YFELD1,MAXKEY,YSDATEI,YSKEY,YLFN,YSFELD,YI,YFTYP,YFILESB
	QUIT:VORG(1)="" 
	;DO LOW^%PRIO
	FOR I=1:1 QUIT:$PIECE(VORG(1),";",I)=""  DO
	. SET YDATEI=$PIECE(VORG(1),";",I) 
	. do ReIndex^COMIndex(YDATEI)
	. ;DO ^WWWSORTKEY(YDATEI)                               ; see WWWSORTDoco for notes
	. ;DO DATEI  ;bearbeitern datein
	
	QUIT
	
NEW(FILE,INDEX) ;
	;D NEW^WWWSORT(FILENAME)
	NEW VORG,YQ
	
	QUIT:$GET(FILE)=""
	SET VORG(1)=FILE
	SET YQ=1
	SET YINDEX=$TRANSLATE($GET(INDEX),",",";")  ;TYBD;5,10,2004;NUR BESTIMMTE INDEXE;26522
	DO WWWSORT
	QUIT
	
	
DATEI ;
	NEW I,YEXEC,YYYM,YRET,LC,UC
	
	SET LC="ÜÄÖüäöß][\}{|abcdefghijklmnopqrstuvwxyz,()@#$%^&*_=+<>?/"_$CHAR(128)_""""_" "   ;SPEEDUP;TYBD;25.09.2004
	SET UC="UAOUAOSUAOUAOABCDEFGHIJKLMNOPQRSTUVWXYZ                   "
	QUIT:YDATEI="" 
	IF YDATEI'="" IF $ORDER(^WWW0011s(0,1,$$^WWWUMLAU(YDATEI),""))'="" SET YDATEI=$ORDER(^WWW0011s(0,1,$$^WWWUMLAU(YDATEI),""))  ;tybd;16,2,2005;27239;ALTERNATIVE CLASS
	SET YDATA=$GET(^WWW001(0,YDATEI,1))
	;+++++++++++++++++++++++++++++++++++++++
	;	YDATA		objClass
	;	
	;	D8		$$$WWW001AltSaveProcedure()
	;		0	@net Manager
	;		3	No Client No.
	;		4	Caché Object
	;		5	Routine
	;		6	ABACUS			(removed from "EN")
	;		7	SQLStorage		(removed from "EN")
	;	D10		$$$WWW001ExecuteWhenIndexIsBeingPr()  ...epared
	;	D12		$$$WWW001OtherUCI()
	;	D13		$$$WWW001OtherVolume()
	;	D22		$$$WWW001SaveDataInFile()
	;	D23		$$$WWW001SaveIndexKeyInFile()
	;	D25		$$$WWW001BitmapXREFClass()
	;+++++++++++++++++++++++++++++++++++++++
	
	IF $PIECE(YDATA,Y,8)=6 DO ^WWWSORTA QUIT  ;ABACUS
	
	; Perform processing only if
	;   a) require bit map indexing, or
	;   b) require normal indexing
	;SR17692 IF $PIECE(YDATA,Y,25)="" IF $ORDER(YSKEY(""))="" QUIT  ;KEIN SORTKEY ;no ;TYBD;21,12,2004  
	
	;+++++++++++++++++++++++++++++++++++++++
	; When Index is Prepared  *** EXECUTE # ***
	;+++++++++++++++++++++++++++++++++++++++
	
	SET YEXEC=$PIECE($GET(^WWW001(0,YDATEI,1)),Y,10)
	IF YEXEC'="" XECUTE YEXEC QUIT  ;SONDERPROGRAMM SORTKEYS
	
	;+++++++++++++++++++++++++++++++++++++++
	;   Default Execution
	;+++++++++++++++++++++++++++++++++++++++
	
	SET YYYM(0)=$$^WWWYM(YDATEI,0)       ; 0  or YM   replacing YM with actual company
	SET YYYM(1)=$$^WWWYM(YDATEI,1)       ; 0, or YM,  replacing YM with actual company
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
	; FIXME : <GRF> Need to replace all the calls to build UCI and VOL prefix with a
	;               single construction.  This is being checked multiple times (once
	;               for each index for each data record in SATZ and several times
	;               per class.)
	;
	;	if ($$$WWW001OtherUCI(YDATA)'="") && ($$$WWW001OtherVolume(YDATA)'="") {
	;		set strNspPrefix = "["""_$$$WWW001OtherUCI(YDATA)_""","""_$$$WWW001OtherVolume_"""]"
	;	} else {
	;		set strNspPrefix = ""
	;	}
	;
	; something like
	; 
	; 	set YA(2)="^"_YFILESB
	; 	IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI and VOL 
	;	. SET YA(2)="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YA(2),"^",2,999)
	; 
	; then becomes
	; 
	; 	set YA(2)="^"_strNspPrefix_YFILESB
	; 
	; without further testing being necessary.
	; 
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	
	
	
	; Delete bitmap index "b"     BITMap Datei Löschen ; tybd;17.06.2003
	;--------------------------------------
	SET YFILESB=YDATEI_"b"
	SET YA(2)="^"_YFILESB
	IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI and VOL 
	. SET YA(2)="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YA(2),"^",2,999)
	
	IF $$^WWWYM(YDATEI,0)'="" SET YA(2)=YA(2)_"("_YYYM(0)_")"
	IF $GET(YINDEX)="" KILL @YA(2)    ;TYBD;5,10,2004;YINDEX NUR BESTIMMTE INDEXE;26522
	
	
	; Delete bitmap index "bi"    BITMap Datei Löschen ; tybd;3.07.2003
	;--------------------------------------
	SET YFILESB=YDATEI_"bi"
	SET YA(2)="^"_YFILESB
	IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI and VOL
	. SET YA(2)="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YA(2),"^",2,999)
	
	IF YYYM(0)'="" SET YA(2)=YA(2)_"("_YYYM(0)_")"
	IF $GET(YINDEX)="" KILL @YA(2)    ;TYBD;5,10,2004;YINDEX NUR BESTIMMTE INDEXE;26522
	;--------------------------------------
	
	
	; Delete standard index "s"   SortKey Datei löschen ; tybd;17.06.2003
	; Recognise alternative global names (D22/D23)
	;--------------------------------------
	SET YFILE=YDATEI
	IF $PIECE(YDATA,Y,22)'="" SET YFILE=$PIECE(YDATA,Y,22)   ;ANDERE DATEI ;data file 
	SET YFILES=YDATEI_"s"
	IF $PIECE(YDATA,Y,23)'="" SET YFILES=$PIECE(YDATA,Y,23)  ;ANDERE SORTDATEI
	SET YA(2)="^"_YFILES
	IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI and VOL
	. SET YA(2)="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YA(2),"^",2,999)
	
	IF YYYM(0)'="" SET YA(2)=YA(2)_"("_YYYM(0)_")"
	IF $GET(YINDEX)="" KILL @YA(2)    ;TYBD;5,10,2004;YINDEX NUR BESTIMMTE INDEXE;26522
	
	; Special handling
	;--------------------------------------
	IF $PIECE(YDATA,Y,8)=4 DO OBJECT(YDATEI) QUIT  ; Caché Object
	IF $PIECE(YDATA,Y,8)=7 DO OBJECT(YDATEI) QUIT  ; SQL Storage
	
	IF YQ=0 WRITE YCR,YDATEI," ",$$^WWWTEXT(30013),"<BR>"    ; "Transfer Finished"
	IF '$DATA(YSKEY) QUIT
	IF $PIECE(YDATA,Y,25)="" IF $ORDER(YSKEY(""))="" QUIT  	;SR17692   
	
	
	;--------------------------------------
	SET MAXKEY=+$ORDER(^WWW002(0,YDATEI,""),-1)
	IF MAXKEY=0 SET MAXKEY=1
	SET YA="^"_YFILE_"("_YYYM(1)
	IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI and VOL 
	. SET YA="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YA,"^",2,999)
	
	SET YA(1)=YA
	SET YA=YA_"-1)"
	SET YA(2)="^"_YFILES_"("_YYYM(0)
	IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI and VOLL 
	. SET YA(2)="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YA(2),"^",2,999)
	
	FOR  DO NEXT QUIT:YA=""  DO SATZ

	QUIT
	
NEXT
	;-------------------------------------------------------------------------------
	;		NACHSTER DATENSATZ ;data record 
	;
	; ByRef :
	; 	YA		previous global
	; 			Initially      ^Global(0,-1)           (where YM = 0 or shared class)
	; 			then           ^Global(0,key1,key2,1)  (e.g. where class has 2 keys)
	;	YA(1)	base string    ^Global(0,   
	;
	;-------------------------------------------------------------------------------
	SET YA=$QUERY(@YA)
	IF '$FIND($TRANSLATE(YA,""""),$TRANSLATE(YA(1),"""")) SET YA=""
	QUIT
	
SATZ ;EINZELSAETZE
	NEW YSA
	;--------------------------------------
	;  YA		^GLOBAL(0,key1,keys,1) => YSA & then %FELD1    current record to process
	;                     ^^^^^^^^^    => YKEY
	;  YA(1)	^GLOBAL(0,                                     base string
	;  YA(2)	^GLOBALs(0
	;--------------------------------------
	
	;+++++++++++++++++++++++++++++++++++++++
	;	YDATA		objClass
	;	
	;	D8		$$$WWW001AltSaveProcedure()
	;		0	@net Manager
	;		3	No Client No.
	;		4	Caché Object
	;		5	Routine
	;		6	ABACUS			(removed from "EN")
	;		7	SQLStorage		(removed from "EN")
	;	D10		$$$WWW001ExecuteWhenIndexIsBeingPr()  ...epared
	;	D22		$$$WWW001SaveDataInFile()
	;	D23		$$$WWW001SaveIndexKeyInFile()
	;	D24		$$$WWW001BitMapIndexActive()
	;	D25		$$$WWW001BitmapXREFClass()
	;+++++++++++++++++++++++++++++++++++++++
	SET YSA=YA
	IF $PIECE(YDATA,Y,22)'="" SET YSA="^"_YDATEI_"("_$PIECE(YSA,"(",2,99)   ;DT; 
	IF +$PIECE(YDATA,Y,8)'=0 SET %FELD1=$$^WWWSETL(YSA)
	IF +$PIECE(YDATA,Y,8)=0  SET %FELD1=$GET(@YSA)             ; vvv FIXME
	
	; ^^^ FIXME : <GRF>
	;               Having set YA to be based on an alternative global if D22 has
	;               a value and killing the indices in that alternative global,
	;               we now get %FELD1 from a global matching the class.
	;               It is possible this has not been a problem because no-one has
	;               been using alternative globals.
	
	SET YKEY=$PIECE($PIECE(YA,YA(1),2),",1)",1)
	IF '$FIND(YKEY,"(") SET YKEY=$PIECE(YKEY,")",1)    ; vvv FIXME
	SET YKEY=$TRANSLATE(YKEY,"""")
	
	; ^^^ FIXME : <GRF>  What if key data actually contains "(" character?  Is this possible?
	
	; Bitmap indexing
	;---------------------------------------
	IF $GET(YINDEX)="" {
		IF (+$PIECE(YDATA,Y,24)=1) || $DATA(^WWW001B(0,YDATEI)) || ($PIECE(YDATA,Y,25)'="") {
			SET OK=$$^WWWBITSET(YDATEI,YKEY,1,%FELD1,,,,,$PIECE(YDATA,Y,25))   ;BITMAP;18.06.2003;TYBD ;bit map 
		}
	}
	
	;--------------------------------------
	;  Process the data record against each index# in turn.
	;  
	; see WWWSORTDoco for notes 
	;  
	;  FIXME : <GRF> If long multi-value field has trailing semicolon but no leading
	;                semicolon it is possible that the beginning of the string can
	;                be lost.  Should set variable to $length string, resetting to 2000
	;                and then use $extract(strField,1,LengthVariable).
	;                Possibly even look for last ";" before 2000 so don't get partial key.
	;                Why do we want to limit to 2000 characters anyway?
	;                
	;                Perhaps simply get all $piece only incrementing YMAX1 if not null?
	;--------------------------------------
	DO
	. ; Each Index
	. SET SKEY=""
	. FOR  SET SKEY=$ORDER(YSKEY(SKEY)) QUIT:SKEY=""  DO
	. . IF $GET(YINDEX)'="" if $get(YINDEX)'="A" QUIT:'$FIND(";"_YINDEX_";",";"_SKEY_";")      ;TYBD;5,10,2004;YINDEX NUR BESTIMMTE INDEXE;26522
	. . NEW YQ,YMAX,YMAX1,YMAX2
	. . KILL YSFELD,YSDATEI
	. . SET YSDATEI="^"_YFILES_"("_YYYM(1)_SKEY
	. . IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI and VOL
	. . . SET YSDATEI="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YSDATEI,"^",2,999)
	. . ;
	. . ;----- Default for Index without SortKeys - should not exist
	. . SET YMAX=1
	. . SET YSDATEI(YMAX)=YSDATEI     ; over-written below
	. . ;
	. . ; Each Index SortKey
	. . FOR YI=1:1 SET YLFN=$PIECE(YSKEY(SKEY),",",YI) QUIT:YLFN=""  DO
	. . . IF $EXTRACT(YLFN)="F" SET YSFELD(YI)=$PIECE(%FELD1,Y,+$EXTRACT(YLFN,2,9))
	. . . IF $EXTRACT(YLFN)="K" SET YSFELD(YI)=$PIECE(YKEY,",",+$EXTRACT(YLFN,2,9))
	. . . ;
	. . . ; First key can separate multi-value fields to build separate keys
	. . . ; ignore all null leading or trailing multi-values
	. . . IF YI=1 DO 
	. . . . FOR  QUIT:$EXTRACT(YSFELD(YI))'=";"  SET YSFELD(YI)=$EXTRACT(YSFELD(YI),2,2000)
	. . . . IF $EXTRACT($REVERSE(YSFELD(YI)))=";" FOR  QUIT:$EXTRACT($REVERSE(YSFELD(YI)))'=";"  SET YSFELD(YI)=$REVERSE($EXTRACT($REVERSE(YSFELD(YI)),2,2000))
	. . . . SET YMAX=$LENGTH(YSFELD(YI),";")  ;ANZAHL DER ";" FELDER IM FELD
	. . . . FOR YMAX1=1:1:YMAX SET YSDATEI(YMAX1)=YSDATEI
	. . . ;
	. . . IF YSFELD(YI)="" SET YSFELD(YI)=" "
	. . . FOR YMAX1=1:1:YMAX DO
	. . . . SET YMAX2=YMAX1
	. . . . IF YMAX=1 SET YMAX2=200  ;ANZAHL DER ";" FELDER IN DATENFELD
	. . . . IF YI=1 DO
	. . . . . ; Get consolidated multi-value
	. . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU($PIECE(YSFELD(YI),";",YMAX1,YMAX2),1),1,150)     ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE($PIECE(YSFELD(YI),";",YMAX1,YMAX2),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","_""""_YSFELD(YMAX1,YI)_""""
	. . . . ;
	. . . . IF YI'=1 DO
	. . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)     ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . IF $EXTRACT(YLFN)="F" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)  ;SPEED UP;TYBD;25.09.2004 ;KEINE UMLAUTE;TYBD;6,10,2004;26526
	. . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU=""  SET YSFELD(YMAX1,YI)=$EXTRACT($TRANSLATE(YSFELD(YI),LC,UC),1,150)
	. . . . . IF $EXTRACT(YLFN)="K" IF YUMLAU'="" SET YSFELD(YMAX1,YI)=$EXTRACT($$^WWWUMLAU(YSFELD(YI),1),1,150)
	. . . . . IF YSFELD(YMAX1,YI)="" SET YSFELD(YMAX1,YI)=" "
	. . . . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","_""""_YSFELD(YMAX1,YI)_""""
	. . ;
	. . ; Complete and Save Index records
	. . FOR YMAX1=1:1:YMAX DO
	. . . SET YQ=1
	. . . FOR YI=1:1:MAXKEY SET KEY=$PIECE(YKEY,",",YI) SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_","_""""_KEY_"""" IF KEY="" SET YQ=0
	. . . SET YSDATEI(YMAX1)=YSDATEI(YMAX1)_")"
	. . . QUIT:YQ=0
	. . . if $get(YINDEX)'="A" SET @YSDATEI(YMAX1)=""
	. . . if $get(YINDEX)="A" xecute "set ^CacheTemp"_$piece(YSDATEI(YMAX1),"^",2)_"=""""" ;SR17692
	
	QUIT
 
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	
	; FIXME : <GRF> move YSFELD(YMAX1,YI) construction outside of
	;               FOR YMAX1=1:1:YMAX loop so only performing once.
	;    In addition, since we are restricting ourselves to 150 characters there is no reason to set YMAX2 at all
	; e.g.
 
#include COMSYS
Proposed()   ; THIS IS DEVELOPMENT EXAMPLE - NOT IMPLEMENTED CODE
	
	;...
	if YSFELD(YI)="" set YSFELD(YI)=" "
	set strFieldType = $extract(YLDN)
	set idxValue = $$Convert(YSFELD(YI),YUMLAU,LC,UC)
	for intSortKeyNo=1:1:YMAX {
		if (YI=1) && (strFieldType="F") && (YMAX2'=1) {
			set strSortKey = $extract($piece(idxValue,";",intSortKeyNo),1,150)
		} else {
			set strSortKey = $extract(idxValue,1,150)
		}
		if strSortKey="" set strSortKey = " "
		set YSDATEI(YMAX1) = YSDATEI(YMAX1)_","""_strSortKey_""""
	}
	
	;...Complete and Save Index records
	quit
	
Convert(pstrValue,YUMLAU,LC,UC)   ; THIS IS DEVELOPMENT EXAMPLE - NOT IMPLEMENTED CODE
	new idxValue
	
	if YUMLAU = "" {
		set idxValue = $translate(pstrValue,LC,UC)
	} else {
		set idxValue = $$$Index(pstrValue)
	}
	quit idxValue
	
	; FIXME : <GRF> ^^^ Complete and Save Index records
	;    Build and test KEY string before performing index extraction - pass in so
	;    perform once rather than YMAX times.
	
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	
OBJECT(YDATEI)  ;nach objekten ;within 
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 13-Apr-2011	shobby		SR17692: Log an error if this fails.
	;-------------------------------------------------------------------------------
	;SR17692 DO ^WWWVAR
	$$$VAR							;SR17692
	set $ztrap="OBJECTError"		;SR17692
	DO
	. DO @("##class("_YDATEI_").%PurgeIndices()")
	. DO @("##class("_YDATEI_").%BuildIndices()")
	
	QUIT
OBJECTError
	set ^WWWERROR(0,+$HOROLOG,$PIECE($HOROLOG,",",2),+$get(YUSER),1)="Unindexable class:"_$get(YDATEI)
	hang 1
	QUIT
]]></Routine>
</Export>