<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINARBankAccountGroup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINARBankAccountGroup
	; 08-Jul-2003	SCR				Bug Fixes from Code Checking
	#Include FIN
	#Include FINConst
	#Include COMConst
 
BeforeButtonLine(pKey)
	;--------------------------------------------------------------------------------
	;
	; History
	; 24-May-2005	JW			Moved from FINARBankAccount
	; 06-Aug-2003	shobby		Moved from FINARBank
	; 31-Jul-2003	shobby		Call to PayInvoice
	; 
	;--------------------------------------------------------------------------------
	;
	new idBank
	set idBank=$p(pKey,",",1)
	if (idBank'="")&&(idBank'="+") {
		if '$$Editable^FINSYSReview("FINARBank",$$$FINARBankStatus($get(^FINARBank(YM,idBank,1)))) {
			set $$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly
		}
	}
	do PayInvoice^FINARBankInvoice(pKey)
	quit
	
 
CreateExpenseGroups(pidBank,pidBankLine)
	new idExpenseGroup
	set idExpenseGroup=""
	for {
		set idExpenseGroup=$order(^FINSYSAccountGroup(YM,idExpenseGroup))
		quit:idExpenseGroup=""
		do CreateAccounts(pidBank,pidBankLine,idExpenseGroup)
		}
	quit
 
BuildAccountMessage(pidBank,pidBankLine,parrBank,pintPayLine)
	;------------------------------------------------------------------------------
	;
	; History
	; 24-May-2005	JW			SR12417: Added idExpenseGroup subscript
	; 29-Jul-2003	shobby		incorrect management of intPayLine variable (TR005723)
	; 08-Jul-2003	shobby		idAccount,objBankAccount variables
	;------------------------------------------------------------------------------
	new idExpenseGroup,curDiscount,idAccount,objBankAccount
	; use invoices for payment
	set idExpenseGroup=""
	for {
		set idExpenseGroup=$order(^FINARBankAccount(YM,pidBank,pidBankLine,idExpenseGroup))
		quit:idExpenseGroup=""
		set idAccount=""
		for {
			set idAccount=$order(^FINARBankAccount(YM,pidBank,pidBankLine,idExpenseGroup,idAccount))
			quit:idAccount=""
			set objBankAccount=$get(^FINARBankAccount(YM,pidBank,pidBankLine,idExpenseGroup,idAccount,1))
			if +$$$FINARBankAccountTotal(objBankAccount)'=0 {
				;set @parrBank@("Payments",pintPayLine,"LineAccount",idAccount)=$$$FINARBankAccountTotal(objBankAccount) SR12417
				set @parrBank@("Payments",pintPayLine,"LineAccount",idExpenseGroup,idAccount)=$$$FINARBankAccountTotal(objBankAccount)
			}
		}
	}
	quit
 
RemoveUnusedAccount(pidBank,pidBankLine)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 20-Oct-2006	JW			SR15134: Look at kill status. Return status.
    ; 20-Jun-2005				KILL using COMUtils		Created SR12632
    ;-------------------------------------------------------------------------------
	new idExpenseGroup,strStatus,idAccount,objExpenseAccount
 	
 	set strStatus = $$$OK
 	
	set idExpenseGroup=""
	for {
		set idExpenseGroup=$order(^FINSYSAccountGroup(YM,idExpenseGroup))
		quit:idExpenseGroup=""
		set idAccount=""
		for {
			set idAccount=$order(^FINARBankAccount(YM,pidBank,pidBankLine,idExpenseGroup,idAccount))
			quit:idAccount=""
			set objExpenseAccount=$get(^FINARBankAccount(YM,pidBank,pidBankLine,idExpenseGroup,idAccount,1))
			if +$$$FINARBankAccountTotal(objExpenseAccount)=0 {
				set strStatus = $$$Kill("FINARBankAccount",pidBank_","_pidBankLine_","_idExpenseGroup_","_idAccount)		// SR15134
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	quit strStatus
 
CreateAccounts(pidBank,pidBankLine,pidExpenseGroup)
	;------------------------------------------------------------------------------
	; History
	; 22-Dec-2004	JW		SR11297: Added intermediate global for Grid
	; 08-Jul-2003	shobby	Handle multiple accounts (TR005485)
	;------------------------------------------------------------------------------
	new objExpenseGroup,strAccountKey,strKey1,strKey2,idAccount,arrAccounts
	new strAccountKeyAll,i,intCount
	
	set objExpenseGroup=$get(^FINSYSAccountGroup(YM,pidExpenseGroup,1))
	
	set strAccountKeyAll=$$$FINSYSAccountGroupAccountKey(objExpenseGroup)
	
	set intCount=$length(strAccountKeyAll,";")
	
	if (strAccountKeyAll'="") { ;SR11297
		if '$data(^FINARBankAccountGroup(YM,pidBank,pidBankLine,pidExpenseGroup,1)) {
			do Save^FINSYS("FINARBankAccountGroup",pidBank_","_pidBankLine_","_pidExpenseGroup,0,1)
		}
	}
	
	for i=1:1:intCount {
		set strAccountKey=$piece(strAccountKeyAll,";",i)
		if '$find(strAccountKey,"%") {
			if (strAccountKey'="") {
				if $data(^FINGLAccount(YM,strAccountKey,1)) set arrAccounts(strAccountKey)=""
			}
		} else {  ;account key contains a wild card. find all accounts that match wild card.
			set strKey1=$piece(strAccountKey,"%",1)
			set strKey2=$piece(strAccountKey,"%",2)
			set idAccount=strKey1
			for {
				set idAccount=$order(^FINGLAccount(YM,idAccount))
				quit:$extract(idAccount,1,$length(strKey1))'=strKey1
				quit:idAccount=""
				if ($e(idAccount,$l(idAccount)-$l(strKey2)+1,$l(idAccount))=strKey2)!(strKey2="") set arrAccounts(idAccount)=""
			}
		}
		set idAccount=""
		for {
			set idAccount=$order(arrAccounts(idAccount))
			quit:idAccount=""
			if '$data(^FINARBankAccount(YM,pidBank,pidBankLine,pidExpenseGroup,idAccount,1)) {
				do Save^FINSYS("FINARBankAccount",pidBank_","_pidBankLine_","_pidExpenseGroup_","_idAccount,0,1)
			}
		}
	}
	quit
 
 
ShowExpenses(pKey)
	;---------------------------------------------------------------------------------
	; 
	; History
	; 22-Dec-2004	JW			SR11297: Added intermediate global for Grid
	; 08-Jul-2004	shobby		Foreign Currencies.
	; 07-Jul-2003	shobby		Variables
	; 
	;---------------------------------------------------------------------------------
	;
	new idBank,idBankLine,idExpenseGroup
	new objSYSAccountGroup,objExpenseAccount,objFINARBankAccountGroup
	new curAmount,curTotalPayment,curAccountsTotal
 
	set idBank=$piece(pKey,",",1)
	set idBankLine=$piece(pKey,",",2)
	set curTotalPayment=$$$FINARBankLineTotal($get(^FINARBankLine(YM,idBank,idBankLine,1)))
	
	do Start^COMTable($lb("Account Group","Total"))
	set idExpenseGroup=""
	set curAccountsTotal=0
	for {
	  	;SR11297
		set idExpenseGroup=$order(^FINARBankAccountGroup(YM,idBank,idBankLine,idExpenseGroup))
		quit:idExpenseGroup=""
		
		set objFINARBankAccountGroup=$get(^FINARBankAccountGroup(YM,idBank,idBankLine,idExpenseGroup,1))
		set curAmount=$$$FINARBankAccountGroupTotal(objFINARBankAccountGroup)
		/*
		;w "idBank="_$get(idBank)_","_$get(idBankLine)_","_$get(idExpenseGroup)
		set idExpenseGroup=$order(^FINARBankAccount(YM,idBank,idBankLine,idExpenseGroup))
		quit:idExpenseGroup=""
		
		; get the total for the expense group.
		set idBankAccount=""
		set curAmount=0
		for {
			set idBankAccount=$order(^FINARBankAccount(YM,idBank,idBankLine,idExpenseGroup,idBankAccount))
			quit:idBankAccount=""
			set objExpenseAccount=$get(^FINARBankAccount(YM,idBank,idBankLine,idExpenseGroup,idBankAccount,1))
			set curAmount=$$$FCAdd(curAmount,$$$FINARBankAccountTotal(objExpenseAccount))
	  	}
		; set a default account to open. 
		set idBankAccount=$order(^FINARBankAccount(YM,idBank,idBankLine,idExpenseGroup,""))
		set idBankAccount=idBank_","_idBankLine_","_idExpenseGroup_","_idBankAccount
	    */
		set objSYSAccountGroup=$get(^FINSYSAccountGroup(YM,idExpenseGroup,1))
		do NewLine^COMTable()
		;SR11297
		do InsertCell^COMTable($$$FINSYSAccountGroupDescription(objSYSAccountGroup),"FINARBankAccountGroup",idBank_","_idBankLine_","_idExpenseGroup)
		do InsertCurrencyCell^COMTable(curAmount,$$$NO,"FINARBankAccountGroup",idBank_","_idBankLine_","_idExpenseGroup)
		;do InsertCell^COMTable($$$FINSYSAccountGroupDescription(objSYSAccountGroup),"FINARBankAccount",idBankAccount)
		;do InsertCurrencyCell^COMTable(curAmount,$$$NO,"FINARBankAccount",idBankAccount)
		do EL^WWWTAB
		set curAccountsTotal=$$$FCAdd(curAccountsTotal,curAmount)
		}
	do Footer^COMTable($lb($$^WWWTEXT("Fin00057"),$$FormatCurrency^COMTable($$$FCSub(curTotalPayment,curAccountsTotal))))
	do Footer^COMTable($lb($$^WWWTEXT("Fin00071"),$$FormatCurrency^COMTable(curTotalPayment)))
 
 
 
	do Stop^COMTable()
	quit
	
	
	
AfterDataFields(pKey)
    ;-------------------------------------------------------------------------------
    ; After Data Fields
    ;
    ; Returns:
    ;
    ; History:
    ; 22-Dec-2004	JW		SR11297: Created
    ;-------------------------------------------------------------------------------
	do LoadGrid(pKey)
	quit
	
		
LoadGrid(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Load the Edit Grid
    ;
    ; Returns: nil
    ;
    ; History:
	; 05-Dec-2008	GRF		Clarify Enabled test
    ; 22-Dec-2004	JW		SR11297: Created
    ;-------------------------------------------------------------------------------
	new YFORM,YKEY,YAUSWAHL,YFELD
	set YFORM="FINARBankAccount"
	set YKEY=$get(pYKEY)
	set YFELD=""
 
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)      = YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)       = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)     = "FINARBankAccountGroup"
	do ^COMGridEdit31
	
	quit
	
	
OnBeforeSave(pYKEY)
    ;-------------------------------------------------------------------------------
    ; On Before Save - save grid.
    ;
    ; Returns: nil
    ;
    ; History:
    ; 22-Dec-2004	JW		SR11297: Created
    ;-------------------------------------------------------------------------------
	new strStatus
	set strStatus=$$$GRIDSave(pYKEY)
	if $$$ISERR(strStatus) {
		set Q=1
		do ReturnError^COMUtils(strStatus)
	}
	quit
	
	
	
	
	
	
	
	
	
	
]]></Routine>
</Export>