<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31Interface" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMGridEdit31Interface
	
#include COMSYS
	
#def1arg WWWDATEN(%args)	^WWWDATEN(YM,+$horolog,YUSER,$get(^CacheTemp(YUSER,"Grid","Name")," "),"V",%args)
	
	;-------------------------------------------------------------------------------
	; All calls to COMGridEdit31* Routines from routines that are not COMGridEdit31*
	; Routine MUST use these ones.
	; 
	; That way we can update calls without changing them everywhere.
	; 
	; History:
	; 03-Oct-2008	GRF		SR15810: Show & for ByRef parameters and use bln macros
	; 25-Jan-2005	RPW		SR10061: Created
	;-------------------------------------------------------------------------------
	

UpdateStyle(pidObject,pobjParameters)
	write " cgeUpdateStyle('"_pidObject_"','"_pobjParameters_"'); "
	quit
	
Update(pstrFormLine,pYKEY,YFELD)
	;-------------------------------------------------------------------------------
	; Update all lines on the grid.  Can be used if a field on the header form affects
	; the contents of grid lines as a result of core/customisation rules.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 27-Nov-2009	shobby	SR17034: All columns should be updated in the grid.
	; 12-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new arrGrid,idLine,objLine,YKEY
	
	$$$GRIDGetContents(.arrGrid)
	set idLine = ""
	for {
		set idLine = $order(arrGrid(pYKEY,idLine))
		quit:idLine=""
		
		set objLine = arrGrid(pYKEY,idLine)
		set YKEY    = pYKEY_","_idLine
		do CheckRules^WWWEVENT(pstrFormLine,.objLine,1)
		set arrGrid(pYKEY,idLine) = objLine
	}
	set ^WWWDATEN(0,+$horolog,YUSER,pstrFormLine,"V","REFERENCELIST") = ","_$$GetColumnOrder^COMGridEdit31Body(pstrFormLine)_"," ;SR17034
	$$$GRIDSetContents(.arrGrid,$$$YES,,$$$YES)		    ; SR17034

	quit
	
	
GetYFORMFromLine(pYFORM="",pintLine="") 
	;-------------------------------------------------------------------------------
	; Determine the type of form that is on this line of the grid
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 08-Nov-2005	shobby	SR13804:Created
	;-------------------------------------------------------------------------------
	new strYFORM
	
	set strYFORM = ""
	if (pYFORM'="") && (pintLine'="") {
		if $data(^WWWDATEN(0,+$horolog,YUSER,pYFORM,"V","REFERENCEKEY",pintLine,1)) {
			set strYFORM = pYFORM
		} else {
			set strYFORM = $get(^WWWDATEN(0,+$horolog,YUSER,pYFORM,"V","LINKS"))
		}
	}
	quit strYFORM
	
	
	;======================== COMGRIDEDIT31G ========================
	
GetLineId(YKEY,pYFORM="")
	quit $$GetLineId^COMGridEdit31G(YKEY,pYFORM)
	
	
IsSavedLine(pidForm,pidKey="")
	quit $$IsSavedLine^COMGridEdit31G(pidForm,pidKey="")
	
	
GetObject(&parrGrid,pblnGetGrid=$$$YES,pstrYFORM="")
	;-------------------------------------------------------------------------------
	; Gets ***BOTH*** the header and line contents of what is currently on the screen
	;
	; Returns:nothing (but pobjGrid should be passed by reference and have the
	;	following structure):
	;		set pobjData="Header~Data~Fields~Here"
	;		set pobjData("Header and RowNumber")="Grid Data fields here"
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: parrGrid rather than pobjData
	; 10-Mar-2005	PaulK	Created
	;-------------------------------------------------------------------------------
	if pblnGetGrid $$$GRIDGetContents(.parrGrid,pstrYFORM)
	set parrGrid = $$GetYFELDContainer()
	quit
	
GetGridContents(&parrGrid,YFORM="",pblnIncludeKilled=$$$NO)
	; use $$$GRIDGetContents(%args) instead of calling here
	do GetGridContents^COMGridEdit31G(.parrGrid,YFORM,pblnIncludeKilled)
	quit
	
SetGridContents(&parrGrid,pblnUpdateScreen=$$$YES,pstrYFORM="",pblnAllLines=$$$NO)
	; use $$$GRIDSetContents(%args) instead of calling here
	do SetGridContents^COMGridEdit31G(.parrGrid,pblnUpdateScreen,pstrYFORM,pblnAllLines)
	quit
	
GetYKEYContainer()   ; use $$$GRIDYKEYContainer instead of calling here
	quit $get($$$WWWDATEN("REFERENCEKEY"))
	
GetYFELDContainer()   ; use $$$GRIDYFELDContainer instead of calling here
	quit $$GetYFELDContainer^COMGridEdit31G()
	
GetYMFELDContainer(pidType)
	; use $$$GRIDYMFELDContainer or $$$GRIDPREVYMFELDContainer instead of calling here
	quit $$GetYMFELDContainer^COMGridEdit31G($get(pidType))
	
GridExists()
	quit $$GridExists^COMGridEdit31G()
	
UpdateHeaderField(pstrField,pstrValue,pFieldType="")
	do UpdateHeaderField^COMGridEdit31G(pstrField,pstrValue,pFieldType)
	quit
	
Enabled(YVOR,YTXT,YHID,pYYKEY="",pYTYP="")
	quit $$Enabled^COMGridEdit31G(YVOR,YTXT,YHID,pYYKEY,pYTYP)
	
GetYKEY(pintRow)
	;-------------------------------------------------------------------------------
	; History:
	; 04-Aug-2005	JW		SR13186: Remove quotes for callbacks to the grid
	;-------------------------------------------------------------------------------
	quit $translate($$GetYKEY^COMGridEdit31G($get(pintRow)),$$$DBLQUOTE)
	
GetYFELDEX(YFORM,pYKEY)
	; use $$$GRIDGetYFELD(%key) instead of calling here if NOT specifying YFORM
	quit $$GetYFELDEX^COMGridEdit31G($get(YFORM),$get(pYKEY))
	
UpdateContainer(pidField="")
	do UpdateContainer^COMGridEdit31G(pidField)
	quit
	
GoToForm(newForm="",pKey="",pblnPopUp=$$$NO,pPage="",pParam="")
	;-------------------------------------------------------------------------------
	; 14-Aug-2006	JW	SR14730: Added pblnPopUp
	;-------------------------------------------------------------------------------
	do GoToForm^COMGridEdit31G(newForm,pKey,pblnPopUp,pPage,pParam)
	quit
	
	;======================== COMGRIDEDIT31R ========================
	
DELETE()
	do DELETE^COMGridEdit31R()
	quit
	
	;======================== COMGRIDEDIT31S ========================
	
ClassTranslate(pstrValue,pintClassCol,pstrClassName)
	quit $$ClassTranslate^COMGridEdit31F(pstrValue,pintClassCol,pstrClassName)
	
	
AddReference(pstrField,pstrType="D",pstrForm="")
	;-------------------------------------------------------------------------------
	; Add a reference to a field that may have changed and requires recalculation for display on screen.
	;
	; History:
	; 20-Jun-2005	PaulK	Passed in pstrForm SR:12496
	;-------------------------------------------------------------------------------
	do AddReference^COMGridEdit31Events(pstrField,pstrType,pstrForm)	
	quit
	
	
UpdateManualField(pROW="",pCOL="",pVALUE="")
	do UpdateManualField^COMGridEdit31G(pROW,pCOL,pVALUE)       ; see $$$GRIDUpdateManualField
	quit
	
	
ReferenceRow(pidForm,idDataLine)
	;-------------------------------------------------------------------------------
	; Return the reference row for this row/form
	; 
	; NOTE :
	;    GetLineId^COMGridEdit31G returns same but passes "HeaderKeyList,idDataLine"
	;    instead of idDataLine.
	;    
	; Params:
	; pidForm       : The form for the grid
	; idDataLine    : The row in the grid
	;
	; Returns: idGridRow (e.g. 2x01 or 3)
	;
	; History:
	; 06-Aug-2009	GRF		Clarify parameters
	; 16-Aug-2005	RPW		SR11983: Created
	;-------------------------------------------------------------------------------
	; Handle error conditions.
	quit:$get(idDataLine)="" ""
	
	if $get(pidForm)="" set pidForm = $get(^CacheTemp(YUSER,"Grid","Name"))
	
	quit $get(^WWWDATEN(0,+$horolog,YUSER,pidForm,"V","REFERENCEROW",idDataLine,1))
	;			(...,"REFERENCEROW",idDataLine,1) = idGridRow
		
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	new idGridRow,idLastKey,YFORM
	
	set idGridRow = ""
	if $get(pidForm)="" {   ; FIXME : WWWDATEN Macro uses ^CacheTemp(YUSER,"Grid","Name") not YFORM - pYFORM & this block not effective <GRF>
		set YFORM = $get(^CacheTemp(YUSER,"Grid","Name"))
	} else {
		set YFORM = pidForm
	}
	set idLastKey = $$$KEYMAX(YKEY)    // SR11573
	if idLastKey'="" {
		set idGridRow = $get($$$WWWDATEN("REFERENCEROW",idLastKey,1))    ; Macro override : based on ^CacheTemp rather than YFORM
	}
	quit idGridRow
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	
	
ReferenceKey(pidForm,idGridRow)
	;-------------------------------------------------------------------------------
	; Return the reference key for this row/form
	;
	; Compare to GetYKEY^COMGridEdit31G
	;
	; Params:
	;	pstrFormName  : The form for the grid
	;	idGridRow     : The row in the grid
	;
	; Returns:  Cache keys structure ("HeaderKeyList,idDataLine") e.g. "REC01234,2"
	;
	; History:
	; 06-Aug-2009	GRF		Clarify parameters
	; 10-Feb-2006	RPW		SR14135: Created
	;-------------------------------------------------------------------------------
	quit:$get(idGridRow)="" ""
	
	if $get(pidForm)="" set pidForm = $get(^CacheTemp(YUSER,"Grid","Name"))
	
	quit $translate($get(^WWWDATEN(0,+$horolog,YUSER,pidForm,"V","REFERENCEKEY",idGridRow,1)),$$$DBLQUOTE)
	
	
SAVE(pYKEY="",pYFORM="") ; Use $$$GRIDSave directly
	quit $$$GRIDSave(pYKEY,pYFORM)
	
]]></Routine>
</Export>