<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INDRPBESMENGE" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INDRPBESMENGE(ART,BET,BESTAND)
#include INConst
#include COMSYS
#define Log(%1) do Log^INDRPRUNLog(%1)
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		ERMITTLUNG DER BESTELLMENGE
	;
	; Inputs : 
	;	ART=ARTIKEL
	;	BET=BETRIEB
	;	BESTAND=LAGERBESTAND NACH DRP-RUN ;within 
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
    ; 12-Mar-2009	PPP		SR16397: Added Logging for the process
	; 22-Aug-2006	RPW		SR14927: Remove naked reference, removed multiple
	;							usage of WWWUMLAU for one value, defined some
	;							variables for values
	; 08.11.2001	FIS
	;-------------------------------------------------------------------------------
	new MENGE,REGEL,MINDESTMEN,MAXIMALMEN,LETZTERRUN,ART1,ART2,idxART
	new fltStdPackQty,fltSafetyStock,fltDifference
	new idItemGroup
	
	SET MENGE=0
	SET ART=$GET(ART)
	QUIT:ART="" MENGE
	
	SET BET=$GET(BET)
	QUIT:BET="" MENGE
	
	SET ART1=$GET(^INART(YM,ART,1))  ;ARTIKELSTAMM
	SET ART2=$GET(^INDRPITEM(YM,BET,ART,1))  ;DRP-ARTIKELSTAMM
	
	IF ART2="" IF $PIECE(ART1,Y,30)="" SET $PIECE(ART1,Y,30)=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)
	IF ART2="" IF $PIECE(ART1,Y,30)'="" IF $DATA(^INDRPITEMS(YM,BET,$PIECE(ART1,Y,30),1)) SET ART2=^INDRPITEMS(YM,BET,$PIECE(ART1,Y,30),1) SET $PIECE(ART2,Y,2)=1  ;DRP-WARENGRUPPE // SR14927
	IF $GET(KATALOG)=1 SET $PIECE(ART2,Y,8)="B"  ;BACK TO BACK BEI KATALOGARTIKEL ;next to 
	
	IF ART1="" $$$Log($$$Text("IN00950")) QUIT MENGE  ;ARTIKEL EXISTIERT NICHT ;item Not 	//Item not defined. Exiting...
	;IF ART2="" QUIT MENGE  ;ARTIKEL WIRD NICHT DURCH DRP BEARBEITET
	
	IF ART2="" IF BESTAND<0 SET MENGE=BESTAND*(-1) QUIT MENGE  ;ARTIKEL NICHT ANGELEGT: MENGE=FEHLMENGE ;item Not 
	
	IF ART2'="" DO
	. SET REGEL=$$$INDRPITEMOrderPolicy(ART2)
	. $$$Log($$$Text($listbuild("IN00951",REGEL)))		//Item Order Policy : %1
	. IF REGEL="" $$$Log($$$Text("IN00952")) QUIT  ;KEINE REGEL = KEINE BEARBEITUNG ;no regulation no adaptation 	//Item Order Policy not defined. Exiting...
	. ;
	. ;IF '$DATA(^INDRPPARA(YM,"ORDERPOLICY",SPRACHE,REGEL)) QUIT  ;UNGÜLTIGE REGEL
	. ;IF '$FIND(",B,O,D,L,P,R,S,",","_REGEL_",") QUIT  ;UNGÜLTIGE REGEL ;regulation 
	. ;
	. IF '$FIND(",B,O,D,L,P,R,S,Q,",","_REGEL_",") QUIT  ;UNGÜLTIGE REGEL ;regulation  ;FIS;25.04,05;SR12200
	. IF ($$$INDRPITEMItemStatus(ART2)=2)||($$$INDRPITEMItemStatus(ART2)=3) $$$Log($$$Text($listbuild("IN00953",$$$INDRPITEMItemStatus(ART2)))) QUIT  ;ARTIKEL NICHT AKTIV ;item Not ENABLED //Item Status : %1 Exiting...
	. IF +$$$INDRPITEMValidForSaleUntil(ART2)'=0 IF $$$INDRPITEMValidForSaleUntil(ART2)<$HOROLOG $$$Log($$$Text("IN00953")) QUIT  ;ARTIKEL NICHT MEHR GÜLTIG ;item Not more valuable  // SR19333 //Not a current valid item. Exiting...
	. ;
	. SET MINDESTMEN     = +$$$INDRPITEMMinimumOrderQuantity(ART2)  ;MINDEST BESTELLMENGE ;ordering quantity 
	. SET MAXIMALMEN     = +$$$INDRPITEMMaximumOrderQuantity(ART2)  ;MAXIMALE BESTELLMENGE ;ordering quantity 
	. set fltStdPackQty  = +$$$INDRPITEMStdPackQuantity(ART2) // SR14927 D24
	. set fltSafetyStock = +$$$INDRPITEMSafetyStock(ART2)     // SR14927 D23
	. set fltDifference	 = fltSafetyStock-BESTAND             // SR14927 
	. $$$Log($$$Text($listbuild("IN00955",MINDESTMEN,MAXIMALMEN,fltStdPackQty,fltSafetyStock)))	//MIN:%1 MAX: %2 Pack Qty:%3 Safety Stock:%4
	. DO @REGEL
	
	IF +$$$INDRPITEMOrderStartingFromQuantity(ART2)'=0 IF MENGE<$$$INDRPITEMOrderStartingFromQuantity(ART2) SET MENGE=0  ;BESTELLUNG AB MENGE ;sales order Confirm. quantity 
	;BEI BESTELLVORSCHLAGSLISTE NUR BESTELLEN, WENN TATSÄCHLICHER BEDARF ODER IM DETAIL (DRP-ARTIKEL) ANGELEGT !
	IF $$$INDRPSYSOrderSuggestions($GET(^INDRPSYS(YM,BET,1)))=1 DO
	. QUIT:$DATA(^INDRPITEM(YM,BET,ART))          ;ARTIKEL ANGELEGT ;item 
	. set idxART=$$$Index(ART)                    // SR14927 
	. QUIT:$DATA(^INAUFs(YM,5,0,idxART))          ;OFFENER AUFTRAG ;order // SR14927 
	. QUIT:$DATA(^INAUFs(YM,5," ",idxART))        ;OFFENER AUFTRAG ;order // SR14927 
	. QUIT:$DATA(^INDRPDEMANDs(YM,1,0,idxART))    ;OFFENER DEMAND / SR14927 
	. QUIT:$DATA(^INDRPDEMANDs(YM,1," ",idxART))  ;OFFENER DEMAND // SR14927 
	. SET MENGE=0
 
	IF $GET(BGJOB)=1 IF $GET(YSOURCING)'=1 DO
	. IF MENGE="##" QUIT  ;KEINE BESTELLMENGE, SONDERN FESTLEGEN WH
	. IF +MENGE=0 QUIT  ;KEINE BESTELLMENGE ;no ordering quantity 
	. DO ^INDRPRUNPROT($$^WWWTEXT(32817)_": "_+MENGE,BET,$GET(RUNID),ART)  ;PROTOKOLL: ERMITTELTE BESTELLMENGE ;ordering quantity 
 
	$$$Log($$$Text($listbuild("IN00956",MENGE)))
	
	QUIT MENGE
	
B ;BACK TO BACK / ZURÜCK FÜR ZURÜCK
	;----------------------------------------
	;FESTLEGEN DER WARENHERKUNFT -> WIRD NACH JEDER POSITION GEPRÜFT ;the within everyone 
	;NUR BEI AUFTRÄGEN ! SONST GILT 'ORDER FÜR ORDER'-REGEL ;only next to otherwise to 
	;WENN KEIN LAGERBESTAND,BESTELLUNG ODER EIGENFERTIGUNG GILT 'ORDER FÜR ORDER'-REGEL
	IF '$FIND(ID,"-")                                          DO O QUIT  ;KEIN AUFTRAG ;no order 
	IF ($PIECE(ID,"-",1)="") || ($PIECE(ID,"-",2)="")          DO O QUIT
	IF '$DATA(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2)))   DO O QUIT
	IF BESTAND<0 IF $PIECE(ART2,Y,5)=2 IF $PIECE(ART2,Y,19)="" DO O QUIT  ;KEINE FESTLEGUNG DER WARENHERKUNFT MÖGLICH ;no the potential 
	IF $PIECE($GET(^INAUF(YM,$PIECE(ID,"-",1),1)),Y,2)'=0      DO O QUIT  ;KEIN KUNDENAUFTRAG ;no customer´s order 
	IF +$PIECE($GET(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1)),Y,7)'=0  QUIT  ;WH BEREITS FESTGELEGT ;yet 
	SET MENGE="##"  ;FESTLEGUNG DER WARENHERKUNFT ;the 
	QUIT
	
O ;ORDER TO ORDER / ORDER FÜR ORDER
	;----------------------------------------
	;FÜR JEDEN DEMAND WIRD EIN AUFTRAG/SUPPLY ANGELEGT -> WIRD NACH JEDER POSITION GEPRÜFT ;to uni- within everyone 
	IF TYPE=1 SET MENGE=$PIECE(SATZ(1),Y,5)  ;DEMANDMENGE
	QUIT
	
Q ;ORDER TO REQUIREMENT / ORDER JE BEDARF ;FIS;25.04.05;SR12200
	;----------------------------------------
	;FÜR JEDEN DEMAND WIRD EIN AUFTRAG/SUPPLY ANGELEGT -> WIRD NACH JEDER POSITION GEPRÜFT
	;AUSSERDEM WERDEN DIE BESTANDSDATEN NACH REGEL R GEPRÜFT UND GGF. EIN WEITERER SUPPLY ANGELEGT
	;CREATE SUPPLY FOR EACH SINGLE ORDER
	;CREATE ALSO SUPPLY FOR STOCK REQUIREMENT AS PER RULE RE-ORDER POINT
	IF TYPE=1  DO O   ;ORDER-TO-ORDER IF ORDER
	IF TYPE="" DO R   ;RE-ORDER-POINT IF STOCK REQUIREMENT
	QUIT
	
D ;DISCRETE / DIE BENÖTIGTE MENGE ;who quantity 
	;----------------------------------------
	;BESTELLUNG BEI FEHLBESTAND (BESTAND < 0) ;sales order next to 
	;DIE BESTELLMENGE IST DIE FEHLMENGE ;who ordering quantity who 
	;SICHERHEITSBESTAND, MINDEST- UND MAXIMAL BESTELLMENGEN WERDEN BERÜCKSICHTIGT ;And will 
	IF BESTAND'<$$$INDRPITEMSafetyStock(ART2) $$$Log($$$Text($listbuild("IN00957",BESTAND,$$$INDRPITEMSafetyStock(ART2)))) QUIT  ;KEINE BESTELLUNG ERFORDERLICH ;no sales order requisite 	//Qty (%1) > Safety Stock (%2)
	;IF BESTAND>0 QUIT  ;KEINE BESTELLUNG ERFORDERLICH ;no sales order requisite 
	SET MENGE = $$$INDRPITEMSafetyStock(ART2)-BESTAND  ;FEHLBESTAND ZU MINDESTBESTAND (ODER 0) ;within safety level 
	;SET MENGE=-BESTAND  ;FEHLBESTAND ZU 0 ;within 
	IF MINDESTMEN'=0 IF MINDESTMEN>MENGE SET MENGE=MINDESTMEN  ;MINIMUM BESTELLMENGE ;minimum ordering quantity 
	IF MAXIMALMEN'=0 IF MAXIMALMEN<MENGE SET MENGE=MAXIMALMEN  ;MAXIMUM BESTELLMENGE ;maximum ordering quantity 
	QUIT
	
L ;LOT FOR LOT / LOT FÜR LOT ;to 
	;----------------------------------------
	;BESTELLUNG WENN MINDESTBESTAND UNTERSCHRITTEN ;sales order when safety level 
	;DIE BESTELLMENGE ERGIBT SICH AUS DER FEHLMENGE ZZGL. MINDESTBESTAND ;who ordering quantity yourself out of the safety level 
	;MINDEST- UND MAXIMAL BESTELLMENGEN WERDEN BERÜCKSICHTIGT ;And will
	;STANDARD LOSGRÖßE WIRD BERÜCKSICHTIGT 
	IF BESTAND'<$$$INDRPITEMSafetyStock(ART2) $$$Log($$$Text($listbuild("IN00957",BESTAND,$$$INDRPITEMSafetyStock(ART2)))) QUIT  ;KEINE BESTELLUNG ERFORDERLICH ;no sales order requisite 	//Qty (%1) > Safety Stock (%2)
	SET MENGE = $$$INDRPITEMSafetyStock(ART2)-BESTAND  ;FEHLBESTAND ZU MINDESTBESTAND (ODER 0) ;within safety level 
	IF MINDESTMEN'=0 IF MINDESTMEN>MENGE SET MENGE=MINDESTMEN  ;MINIMUM BESTELLMENGE ;minimum ordering quantity 
	IF MAXIMALMEN'=0 IF MAXIMALMEN<MENGE SET MENGE=MAXIMALMEN  ;MAXIMUM BESTELLMENGE ;maximum ordering quantity 
	DO LOS  ;LOSGRÖSSE PRÜFEN
	QUIT
	
P ;PERIOD ORDER QUANTITY  / PERIODISCHE BESTELLUNG ;sales order 
	;----------------------------------------
	;BESTELLUNG ALLE X TAGE WENN MINDESTBESTAND UNTERSCHRITTEN ;sales order X when safety level 
	;DIE BESTELLMENGE ERBIBT SICH AUS DER FEHLMENGE ZZGL. MINDESTBESTAND ;who ordering quantity yourself out of the safety level 
	;ES KANN EIN BESTELLMENGENAUFSCHLAG ADDIERT WERDEN (IN % ODER NACH FORMEL) ;it uni- will Or within 
	;MINDEST- UND MAXIMAL BESTELLMENGEN WERDEN BERÜCKSICHTIGT ;And will 
	;STANDARD LOSGRÖßE WIRD BERÜCKSICHTIGT
	SET LETZTERRUN=$$^INDRPLASTRUN(BET_","_ART)  ;LETZTER BEARBEITUNGSTAG ;last 
	IF LETZTERRUN'=0 IF (LETZTERRUN+$PIECE(ART2,Y,21))>$HOROLOG QUIT  ;PERIODE NOCH NICHT ERREICHT ;period yet Not 
	IF BESTAND'<$$$INDRPITEMSafetyStock(ART2) $$$Log($$$Text($listbuild("IN00957",BESTAND,$$$INDRPITEMSafetyStock(ART2)))) QUIT  ;KEINE BESTELLUNG ERFORDERLICH ;no sales order requisite 	//Qty (%1) > Safety Stock (%2)
	SET MENGE = $PIECE(ART2,Y,23)-BESTAND  ;FEHLBESTAND ZU MINDESTBESTAND (ODER 0) ;within safety level 
	IF $PIECE(ART2,Y,46)'="" SET MENGE=$JUSTIFY(MENGE+(MENGE/100*$PIECE(ART2,Y,46)),0,0)  ;BESTELLMENGENAUFSCHLAG IN % ;within 
	IF $PIECE(ART2,Y,47)=1 IF +$PIECE(ART2,Y,43)'=0 DO
	. ;SET MENGE=$JUSTIFY(MENGE+((+$PIECE(ART2,Y,43)/$$^WWWMONTHDAYS($H))*$PIECE(ART2,Y,12)),0,0)  ;AUFSCHLAG FORMEL1
	. SET MENGE=$JUSTIFY(MENGE+($PIECE(ART2,Y,43)/30*$PIECE(ART2,Y,12)),0,0)  ;AUFSCHLAG FORMEL1 ;overcharge 
	
	IF MINDESTMEN'=0 IF MINDESTMEN>MENGE SET MENGE=MINDESTMEN  ;MINIMUM BESTELLMENGE ;minimum ordering quantity 
	IF MAXIMALMEN'=0 IF MAXIMALMEN<MENGE SET MENGE=MAXIMALMEN  ;MAXIMUM BESTELLMENGE ;maximum ordering quantity 
	DO LOS  ;LOSGRÖSSE PRÜFEN
	QUIT
	
R ;RE-ORDER-POINT  / BESTELLBESTAND ;reordering quantity 
	;----------------------------------------
	;BESTELLUNG WENN DER BESTELLSTAND UNTERSCHRITTEN WIRD ;sales order when the 
	;DIE BESTELLMENGE ERBIBT SICH AUS DER FEHLMENGE ZZGL. BESTELLBESTAND ;who ordering quantity yourself out of the reordering quantity 
	;OHNE BESTELLBESTAND GILT DER MINDESTBESTAND ;without reordering quantity the safety level 
	;ES KANN EIN BESTELLMENGENAUFSCHLAG ADDIERT WERDEN (IN % ODER NACH FORMEL) ;it uni- will Or within 
	;MINDEST- UND MAXIMAL BESTELLMENGEN WERDEN BERÜCKSICHTIGT ;And will
	;STANDARD-LOSGRÖSSE WIRD BERÜCKSICHTIGT
	IF +$PIECE(ART2,Y,25)=0 SET $PIECE(ART2,Y,25)=+$PIECE(ART2,Y,23)  ;BESTELLBESTAND=MINDESTBESTAND
	IF +$PIECE(ART2,Y,23)>$PIECE(ART2,Y,25) SET $PIECE(ART2,Y,25)=+$PIECE(ART2,Y,23)  ;BESTELLBESTAND<MINDESTBESTAND
	IF BESTAND'<$$$INDRPITEMReOrderPoint(ART2) $$$Log($$$Text($listbuild("IN00958",BESTAND,$$$INDRPITEMReOrderPoint(ART2)))) QUIT  ;KEINE BESTELLUNG ERFORDERLICH ;no sales order requisite 	//Qty (%1) > Safety Stock (%2)
	SET MENGE = $PIECE(ART2,Y,25)-BESTAND  ;FEHLBESTAND ZU BESTELLBESTAND (ODER MINDESTBESTAND ODER 0) ;within reordering quantity safety level Or
	IF +$PIECE(ART2,Y,110)'=0 IF $PIECE(ART2,Y,110)>$PIECE(ART2,Y,25) SET MENGE=($PIECE(ART2,Y,110)-BESTAND)  ;ORDERING TO DEFAULT STOCK QUANTITY;FIS;26.04.05;SR12200
	IF $PIECE(ART2,Y,44)'="" SET MENGE=$JUSTIFY(MENGE+(MENGE/100*$PIECE(ART2,Y,44)),0,0)  ;BESTELLMENGENAUFSCHLAG IN % ;within 
	IF $PIECE(ART2,Y,45)=1 IF +$PIECE(ART2,Y,43)'=0 DO
	. ;SET MENGE=$JUSTIFY(MENGE+((+$PIECE(ART2,Y,43)/$$^WWWMONTHDAYS($H))*$PIECE(ART2,Y,12)),0,0)  ;AUFSCHLAG FORMEL1
	. SET MENGE=$JUSTIFY(MENGE+($PIECE(ART2,Y,43)/30*$PIECE(ART2,Y,12)),0,0)  ;AUFSCHLAG FORMEL1 ;overcharge 
	
	IF MINDESTMEN'=0 IF MINDESTMEN>MENGE SET MENGE=MINDESTMEN  ;MINIMUM BESTELLMENGE ;minimum ordering quantity 
	IF MAXIMALMEN'=0 IF MAXIMALMEN<MENGE SET MENGE=MAXIMALMEN  ;MAXIMUM BESTELLMENGE ;maximum ordering quantity
	SET $PIECE(ART2,Y,23)=$PIECE(ART2,Y,25)  ;FIS;25.04.05;SR12200
	DO LOS  ;LOSGRÖSSE PRÜFEN
	QUIT
	
S ;STANDARD LOT SIZE  / STANDARD LOS GRÖSSE ;portion 
	;----------------------------------------
	;BESTELLUNG WENN MINDESTBESTAND UNTERSCHRITTEN IST ;sales order when safety level 
	;FEST VORGEGEBENE BESTELLGRÖSSE ;unyielding 
	;WENN ERLAUBT, KANN DIESE MULTIPLIZIERT WERDEN, BIS DER FEHLBESTAND AUSGEGLICHEN IST
	IF +$$$INDRPITEMStdPackQuantity(ART2)=0 DO D QUIT  ;KEINE MENGE ANGEGEBEN ;no quantity 
	IF BESTAND'<$$$INDRPITEMSafetyStock(ART2) $$$Log($$$Text($listbuild("IN00957",BESTAND,$$$INDRPITEMSafetyStock(ART2)))) QUIT  ;KEINE BESTELLUNG ERFORDERLICH ;no sales order requisite 	//Qty (%1) > Safety Stock (%2)
	SET MENGE = $$$INDRPITEMSafetyStock(ART2)-BESTAND  ;FEHLBESTAND ZU MINDESTBESTAND (ODER 0) ;within safety level 
	DO LOS  ;LOSGRÖSSE PRÜFEN
	QUIT
	
LOS	;FESTLEGEN STANDARD LOSGRÖSSE FÜR ALLE REGELN AUSSER O/B UND D
	;FEST VORGEGEBENE BESTELLGRÖSSE
	;WENN ERLAUBT, KANN DIESE MULTIPLIZIERT WERDEN, BIS DER FEHLBESTAND AUSGEGLICHEN IST
	
	; History:
    ; 12-Mar-2009	PPP		SR16397: Added Logging for the process
	; 22-Aug-2006	RPW		SR14927: Rewrote using brace syntax and corrected minimum pack usage.
	
	// This macro increases a value by lot size, ie 103 and lot size 5, would change to 105.
#define ByLot(%1) ((%1\fltStdPackQty)+$select(%1#fltStdPackQty'=0:1,1:0))*fltStdPackQty
	new oldMENGE
	
	set oldMENGE = $get(MENGE)		//SR16397
	
	if (MENGE>0)&&(fltStdPackQty'=0) {
		if ('$$$INDRPITEMAllowMultipleOrderQty(ART2)) || (MENGE<fltStdPackQty) {
			set MENGE=fltStdPackQty
		} else {
			
			set MENGE=$$$ByLot(fltDifference)  ;LOTSIZE
			
			if fltStdPackQty=1 {
				if (MINDESTMEN'=0) && (MINDESTMEN>MENGE) set MENGE=MINDESTMEN
				if (MAXIMALMEN'=0) && (MAXIMALMEN<MENGE) set MENGE=MAXIMALMEN
			} else {
				if (MINDESTMEN'=0) && (MINDESTMEN>MENGE) {
					set MENGE=$$$ByLot(MINDESTMEN)
				}
				if (MAXIMALMEN'=0)&&(MAXIMALMEN<MENGE) set MENGE=((MAXIMALMEN\+fltStdPackQty))*(fltStdPackQty)  ;MAXIMUM BESTELLMENGE \ LOTSIZE ;MAX ordering quantity 
			}
		}
	}
	
	
	if oldMENGE'=MENGE {   //SR16397
		$$$Log($$$Text($listbuild("IN00959",oldMENGE,MENGE)))
	}   ; "Qty requirement changed from %1 to %2 due to Pack Size/Min/Max"
	
	quit
	
	
	/*
LOS	;FESTLEGEN STANDARD LOSGRÖSSE FÜR ALLE REGELN AUSSER O/B UND D 
	; Specify standard lot size for all rules except O/B and D
    ;-------------------------------------------------------------------------------
    ; History:
    ; 05-Dec-2005	JW		SR13964: Removed unwanted write statement
    ;-------------------------------------------------------------------------------;
	;FEST VORGEGEBENE BESTELLGRÖSSE
	;WENN ERLAUBT, KANN DIESE MULTIPLIZIERT WERDEN, BIS DER FEHLBESTAND AUSGEGLICHEN IST
	IF MENGE>0 IF +$PIECE(ART2,Y,24)'=0 DO
	. IF +$$$INDRPITEMAllowMultipleOrderQty(ART2)=0 SET MENGE=+$PIECE(ART2,Y,24) QUIT  ;MEHRFACHE BESTELLMENGE NICHT ERLAUBT ;ordering quantity Not permissive 
	. IF MENGE<$PIECE(ART2,Y,24) SET MENGE=$PIECE(ART2,Y,24) QUIT  ;BESTELLUNG=STDMENGE
	. ;SET MENGE=((($PIECE(ART2,Y,23)-BESTAND)\(+$PIECE(ART2,Y,24))))*(+$PIECE(ART2,Y,24))  ;FEHLBESTAND ZU MINDESTBESTAND (ODER 0) \ LOTSIZE
	. SET LOT=($PIECE(ART2,Y,23)-BESTAND)\$PIECE(ART2,Y,24)  ;LOTSIZE
	. ;W LOT	//SR13964
	. IF ($PIECE(ART2,Y,23)-BESTAND)#$PIECE(ART2,Y,24)'=0 SET LOT=LOT+1
	. SET MENGE=LOT*$PIECE(ART2,Y,24)  ;FEHLBESTAND ZU MINDESTBESTAND (ODER 0) \ LOTSIZE ;within safety level 
	. IF MINDESTMEN'=0 IF MINDESTMEN>MENGE SET MENGE=((MINDESTMEN\$PIECE(ART2,Y,24))+1)*($PIECE(ART2,Y,24))  ;MINIMUM BESTELLMENGE \ LOTSIZE ;minimum ordering quantity 
	. IF MAXIMALMEN'=0 IF MAXIMALMEN<MENGE SET MENGE=((MAXIMALMEN\$PIECE(ART2,Y,24)))*($PIECE(ART2,Y,24))  ;MAXIMUM BESTELLMENGE \ LOTSIZE ;MAX ordering quantity 
	
	QUIT
	*/
]]></Routine>
</Export>