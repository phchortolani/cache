<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINRPARStatement" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINRPARStatement
    ;-------------------------------------------------------------------------------
	; Routines for building a customer statement report
    ;-------------------------------------------------------------------------------
	#include COMSYS
	#include FINConst
 	
GetStatementLineBal(pidCust,pidInv,pdteDate,pidCompany,pidLang)
    ;-------------------------------------------------------------------------------
    ; Get the charge/credit/balance segment of the customer statement
    ;
    ; Returns: String
    ;
    ; History:
    ; 22-Nov-2005	Steve S		SR13898: Show -ve's in brackets
    ; 01-Sep-2005	Steve S		SR12483: Created
    ;-------------------------------------------------------------------------------
	new strBal,fltBal,objInv,fltDisc
 
	set strBal=""
	
	if ($get(pidCust)'="")&&($get(pidInv)'="")&&($get(pdteDate)'="")&&($get(pidCompany)'="") {
		set fltBal=$$GetBalanceAtDate^FINARInvoice(pidCust,pidInv,pdteDate,pidCompany)
		
		if (fltBal<0) { ;SR13898
			set strBal="("_$justify($zabs(fltBal),0,2)_")"
		} else {
			set strBal=$justify(fltBal,0,2)
		}
	}
	
	quit strBal
	
	
GetBalance(pidCustomer,pdteDate,pintPeriod,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Return one of the totals on the customer statement
    ;
    ; Params: 	- pidCustomer 		(the customer number)
    ; 			- pdteDate 			(the statement date)
    ; 			- pintPeriod 		(period number: see the doco below)
    ; 			- pidCompany 		(the company number: invoices are NOT shared)
    ;
    ; Returns: float
    ;
    ; History:
    ; 02-Sep-2005	Steve S		SR12483: Created
    ;-------------------------------------------------------------------------------
	new fltBalance,lstTotals,idx
 
	set fltBalance=0
	
	if ($get(pidCustomer)'="")&&($get(pdteDate)'="")&&($get(pintPeriod)'="")&&($get(pidCompany)'="") {
		set lstTotals=$$CalcPeriodTotal^FINARCustomer(pidCustomer,pdteDate,,,pidCompany)
		
		; +++++++++++++++++++++++++++++++++++++++++++++
		; pintPeriod: Period to return
		; 
		; 1 = Current
		; 2 = Over 30 days
		; 3 = Over 60 days
		; 4 = Over 90 days
		; 5 = Over 120 days
		; 6 = Sum of the above (total balance due)
		; +++++++++++++++++++++++++++++++++++++++++++++
		
		if (pintPeriod'=6) {
			set fltBalance=+$listget(lstTotals,pintPeriod)	
		} else {
			for idx=1:1:5 {
				set fltBalance=fltBalance+$listget(lstTotals,idx)	
			}	
		}
	}
	
	quit $justify(fltBalance,0,2)
	
	
GetTermString(pidCompany,pidCust,pidLang)
    ;-------------------------------------------------------------------------------
    ; Get the payment terms string for a statement header
    ;
    ; Returns:
    ;
    ; History:
    ; 12-Sep-2005	Steve S		SR12483: Created
    ;-------------------------------------------------------------------------------
	new strTerm,objFINARCustomer,idTerm,idControlAccount,objFINARAccount
 
	set strTerm=""
	
	if ($get(pidCompany)'="")&&($get(pidCust)'="") {
		set objFINARCustomer=$get(^FINARCustomer(pidCompany,pidCust,1))
		set idTerm=$$$FINARCustomerDiscountTerm(objFINARCustomer)
		
		if (idTerm="") {
			set idControlAccount=$$$FINARCustomerControlAccount(objFINARCustomer)
			if (idControlAccount'="") {
				set objFINARAccount=$get(^FINARAccount(pidCompany,idControlAccount,1))
				set idTerm=$$$FINARAccountDefaultDiscountTerm(objFINARAccount)
			}
		}
		
		if (idTerm'="") {
			set strTerm=$$$FINSYSTermDescription($get(^FINSYSTerm(pidCompany,idTerm,1)))
		} else {
			set SPRACHE=$get(pidLang)
			set strTerm=$$^WWWTEXT("Fin00888",,,SPRACHE)  ;None	
		}
	}
 	
	quit strTerm
	
	
	/*
	
	12-Jan-2006		Steve S		SR14175: Disabled -- handled from JReport side
	
InGroupStatement(pidCompany,pidCust,pidGrp="")
    ;-------------------------------------------------------------------------------
    ; Determines whether or not a customer is on a customer statement report, when
    ; executed by group.
    ;
    ; Returns: boolean
    ;
    ; History:
    ; 28-Oct-2005	Steve S		SR13759: Blank Group => Customers with no group
    ; 12-Sep-2005	Steve S		SR12483: Created
    ;-------------------------------------------------------------------------------
	new blnInclude,objFINARCustomer,idCustGroup
	
	set blnInclude=$$$NO
	
	if ($get(pidCompany)'="")&&($get(pidCust)'="") {
		set objFINARCustomer=$get(^FINARCustomer(pidCompany,pidCust,1))
		set idCustGroup=$$$FINARCustomerCustomerGroup(objFINARCustomer)
		
		if ($ascii(pidGrp)=0) set pidGrp=""
		set blnInclude=(pidGrp=idCustGroup) ;SR13759
		
		;SR13759: Commented
		;if (pidGrp="")||($ascii(pidGrp)=0)||((pidGrp'="")&&(pidGrp=idCustGroup)) {
		;	set blnInclude=$$$YES
		;}
	}
 
	quit blnInclude
	*/
	
OutstandingText(pidCompany,pidCust,pdteDate,pblnShowPaid=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Returns "No Outstanding Invoices" text where it's needed - blank otherwise.
    ;
    ; Returns: String
    ;
    ; History:
    ; 13-Sep-2005	Steve S		SR12483: Created
    ;-------------------------------------------------------------------------------
	new strText,blnFound,idInvoice,fltBal
 
	set strText=""
	set blnFound=$$$NO
	
	if ($get(pidCompany)'="")&&($get(pidCust)'="")&&($get(pdteDate)'="") {
		set idInvoice=""
		for {
			set idInvoice=$order(^FINARInvoice(pidCompany,pidCust,idInvoice))
			quit:(idInvoice="")||(blnFound)
			
			set fltBal=$$GetBalanceAtDate^FINARInvoice(pidCust,idInvoice,pdteDate,pidCompany)
			
			if (+fltBal=0) {
				if pblnShowPaid set blnFound=$$$YES
			} else {
				set blnFound=$$$YES
			}	
		}
		
		if 'blnFound set strText=$$$Text("Fin00300")_" ("_$$$StrFINARInvCustomer_": "_pidCust_")"  ;No Outstanding Invoices
	}
 
	quit strText
	
	
Search()
    /*-------------------------------------------------------------------------------
    ; Throw up a dialog for customer searching
    ;
    ; Returns:
    ;
    ; History:
    ; 29-Nov-2005	Steve S		SR13930: Created
    ;-------------------------------------------------------------------------------*/
	do Initialise^COMViewCustom("FINARCustomer","CustomersSelected^FINRPARStatement")
	do Start^COMViewCustom()
	
	quit $$$OK
	
	
CustomersSelected(pobjResultSet)
    /*-------------------------------------------------------------------------------
    ; Routine to run when a customer has been selected
    ;
    ; Returns:
    ;
    ; History:
    ; 03-Feb-2006	Steve S		SR13474: Show customer's selected
    ; 29-Nov-2005	Steve S		SR13930: Created
    ;-------------------------------------------------------------------------------*/
	new idCustomer,intCount,strCustomers,strName,blnLimit,strText
	
	while pobjResultSet.Next() {
		set idCustomer=$$GetID^COMViewCustom(pobjResultSet)
		if idCustomer'="" set ^CacheTempCustomers(YUSER,idCustomer)=""
	}
	
	set intCount=0
	set idCustomer=""
	set blnLimit=$$$NO
	
	set strCustomers=""
	
	for {
		set idCustomer=$order(^CacheTempCustomers(YUSER,idCustomer))
		quit:(idCustomer="")
		
		set intCount=intCount+1
		
		if (intCount<=500) {
			set strCustomers=strCustomers_$justify(idCustomer,10)
			set strName=$$$FINARCustomerCustomerName($get(^FINARCustomer(YM,idCustomer,1)))
			if strName="" set strName="---"
			set strCustomers=strCustomers_": "_strName_"\n"
		} else {
			if 'blnLimit {
				set blnLimit=$$$YES
				set strText=$zconvert($$$Text("Fin00967"),"U")  ;Only displaying first 500 entries
				set strCustomers=$justify(strText,5)_"\n"_strCustomers
			}	
		}
	}
	
	write "document.WWW2.CustomersSelected.value="""_strCustomers_""";",!
	write "document.WWW2.CustomersSelectedCounter.value="_intCount_";",!
	
	quit
	
	
ShowSelected()
    /*-------------------------------------------------------------------------------
    ; Show how many customers have been selected
    ;
    ; Returns:
    ;
    ; History:
    ; 03-Feb-2006	Steve S		SR13474: Show customer's selected
    ; 29-Nov-2005	Steve S		SR13930: Created
    ;-------------------------------------------------------------------------------*/
	new strText
 
	kill ^CacheTempCustomers(YUSER)
	set strText=$$$Text("Fin00941")  ;Customers Selected
 	;<td>#(strText)#</td> ;SR13474
 
 	write "<B>"_strText_"</B>",!
	&html<
	<table style='font-size:14px'>
	<tr>
	<td><input readonly style='background-color:lightgrey' size=10 name='CustomersSelectedCounter'></td>
	</tr>
	<tr>
	<td><textarea readonly style='background-color:lightgrey' cols=60 rows=30 name='CustomersSelected'></textarea></td>
	</tr>
	<table>
	>
 
	quit
	
StatementBatch(plstParams="")
    /*-------------------------------------------------------------------------------
    ; Prepare for a statement batch run.
    ;
    ; Params: plstParams:	The parameter list from the batch
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 21-Mar-2006	Steve S		SR14451: Look through CacheTemp (avoid MAXSTRING error)
    ; 21-Mar-2006	Steve S		SR14449: Omit customers with no invoices
    ; 06-Dec-2005	Steve S		SR12974: Created
    ;-------------------------------------------------------------------------------*/
	new strCustomers,intCustomers,idLine,idCust,idParam
 
	set idCust=""
	set idLine=""
 
	for {
		set idCust=$order(^CacheTempCustomers(YUSER,idCust))
		quit:(idCust="") //SR14451
		
		set idLine=idLine+1
		set ^CacheTempBatch($job,idLine)=$$$StrFINARCustomerCustomerNumber_": "_idCust
		
		//SR14449
		if $$HasOutstandingInvoices^FINARCustomer(idCust,$listget(plstParams,4),$listget(plstParams,5)) {
			for idParam=1:1:$listlength(plstParams) {
				if (idParam'=3) {
					set ^CacheTempBatch($job,idLine,idParam)=$listget(plstParams,idParam)
				} else {
					set ^CacheTempBatch($job,idLine,idParam)=idCust	
				}
			}
		} else {
			set ^CacheTempBatchOmit($job,idLine)=$$$Text($listbuild("Fin01005",idCust))  ;Customer %1 has no outstanding invoices
		}	
	}
 
	quit
 
 
StatementGroupBatch(plstParams="") 
    /*-------------------------------------------------------------------------------
    ; Prepare for a statement batch run, by group.
    ;
    ; Params: plstParams:	The parameter list from the batch
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 21-Mar-2006	Steve S		SR14449: Omit customers with no invoices
    ; 06-Dec-2005	Steve S		SR12974: Created
    ;-------------------------------------------------------------------------------*/
	new idGroupIdx,idCust,idLine,idParam
	
	set idGroupIdx=$$$Index($listget(plstParams,3))
	set idCust=""
	set idLine=""
	
	for {
		set idCust=$order(^FINARCustomers(YM,2,idGroupIdx,idCust))
		quit:(idCust="")
		
		set idLine=idLine+1
		set ^CacheTempBatch($job,idLine)=$$$StrFINARCustomerCustomerNumber_": "_idCust
		
		//SR14449
		if $$HasOutstandingInvoices^FINARCustomer(idCust,$listget(plstParams,4),$listget(plstParams,5)) {
			for idParam=1:1:$listlength(plstParams) {
				if (idParam'=3) {
					set ^CacheTempBatch($job,idLine,idParam)=$listget(plstParams,idParam)
				} else {
					set ^CacheTempBatch($job,idLine,idParam)=idCust
				}
			}
		} else {
			set ^CacheTempBatchOmit($job,idLine)=$$$Text($listbuild("Fin01005",idCust))  ;Customer %1 has no outstanding invoices
		}
	}
	
	quit
]]></Routine>
</Export>