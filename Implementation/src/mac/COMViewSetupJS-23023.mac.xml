<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMViewSetupJS" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMFilterJS   ; Javascript files for COMViewSearch
	
#include %occInclude
#include COMSYS
#include WWWConst
#include COMConst
	
Setup()
    ;-------------------------------------------------------------------------------
    ; Writes the static javascript out to the screen.
    ; Note. This code may be pushed out to an external file at some point.
	;
    ; History:
    ; 10-Feb-2005	PO		SR10965 JS moved out into separate routines.
    ; 30-Nov-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
	do Setup^COMViewSetupJS1()
	do Setup^COMViewSetupJS2()
	do Setup^COMViewSetupJS3()
	do Setup^COMViewSetupJS4()
	do Setup^COMViewStructure()
	quit
	
	
UpdateLanguageText() 
    ;-------------------------------------------------------------------------------
    ; Update any language texts found in COMView Javascript.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 14-Jul-2005	shobby	SR12754 Created
    ;-------------------------------------------------------------------------------
	new arrCodes,idCode,objCVLangCode,strCheckSum,strLangCodes
 
	set strCheckSum   = ""
	set objCVLangCode = $get(^COMViewLanguageCode(0,1,1))
	set strLangCodes  = ""
	do CheckForLanguageText("COMViewSetupJS1",.arrCodes)
	do CheckForLanguageText("COMViewSetupJS2",.arrCodes)
	do CheckForLanguageText("COMViewSetupJS3",.arrCodes)
	do CheckForLanguageText("COMViewSetupJS4",.arrCodes)
	do CheckForLanguageText("COMViewStructure",.arrCodes)
	do CheckForLanguageText("COMViewSetupJSGroup",.arrCodes)
	set idCode=""
	for {
		set idCode=$order(arrCodes(idCode))
		quit:idCode=""
		
		set strLangCodes = strLangCodes_idCode_";"
	}
	set $$$COMViewLanguageCodeCodes(objCVLangCode) = strLangCodes
	do Save^COMUtils("COMViewLanguageCode",1,objCVLangCode,$$$YES)
	set strCheckSum = $$SetCheckSum^COMViewDCM(SPRACHE,$$$COMViewLanguageCodeCodes(objCVLangCode))
	quit strCheckSum
	
	
CheckForLanguageText(pstrRoutine,parrCodes)
    ;-------------------------------------------------------------------------------
    ; Looks through the routine to find if there are any language texts that need translating.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Jul-2005	shobby	SR12754 Created
    ;-------------------------------------------------------------------------------
	new idLine,objLine,strPiece
	
	set idLine = ""
	for {
		set idLine = $order(^rMAC(pstrRoutine,0,idLine))
		quit:idLine=""
		
		set objLine = $get(^rMAC(pstrRoutine,0,idLine))
		for {      ; FIXME : What about $$$Text($listbuild("Message#",value))?
			set objLine = $piece(objLine,"$$$Text(""",2,99)
			quit:objLine=""
			
			if $find(objLine,"""")>0 {
				set strPiece = $piece(objLine,"""",1)
				set parrCodes(strPiece) = ""
			}
		}
	}
	quit
	
	
LookAtFile(pstrFile)
    ;-------------------------------------------------------------------------------
    ; Looks through the file.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Jul-2005	shobby	Not Used.  ******   Leave here as an example of how to read a file.
    ; 13-Jul-2005	shobby	SR12754 Created
    ;-------------------------------------------------------------------------------
    new ipio,io,objCompany,objFile,strLine
    
	set objCompany = $get(^WWW012(0,YM,1))
	set io      = ##Class(%File).NormalizeDirectory($$$WWW012PhysicalWWWDirectory(objCompany))_pstrFile
	set objFile = ##class(%Library.FileCharacterStream).%New()
	if objFile'=$$$NULLOREF {
		set objFile.Filename = io
		while 'objFile.AtEnd {
			set strLine = objFile.ReadLine()
		}
	}
	quit
	
]]></Routine>
</Export>