<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INStocktakeReport1" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INStocktakeReport1
#include COMSYS
#include INConst
#include %occInclude
	
Report()
	;-------------------------------------------------------------------------------
	; Description of Function :
	;  Stocktake Count Report - derived from INWEINVD
	;		DRUCKEN INVENTUR AUFNAHMELISTE
	;		(GENERATION OF STOCKTAKE COUNT SHEETS)
	;
	; Inputs : 
	;
	; ByRef :
	;	VORG(1) = INVENTUR
	;	VORG(2) = BETRIEB
	;	VORG(3) = WARENGRUPPE
	;	VORG(4) = Source Item From...
	;				0	Total Counting List				<< Default Input / Hidden
	;				1	Only Counting Items On Stock
	;				2	Only Checking Orders With Items On Stock
	;	VORG(5) = Print Supplier
	;	VORG(6) = Print Serial Number
	;	VORG(7) = Bins From
	;	VORG(8) = Bin To
	;	VORG(9) = Print Snapped Quantity
	;	
	; Returns :
	;
	;
	; History :
	; 03-Oct-2008	GRF		SR15810: Create from INWEINVD
	;-------------------------------------------------------------------------------
	new blnShowSOH,blnPrintSN,blnPrintSupp,enumSource,idCountNo,idStocktake
	new strFromStore,strGroupList,strHeading,strLocnList,strToStore
 
	merge VORG = ^CacheTempStocktakePara(YUSER)
 
	set idStocktake  =  $get(VORG(1))
	set strLocnList  =  $get(VORG(2))            ; semicolon delimited lists
	set strGroupList =  $get(VORG(3))            ; for filtering lines
	set enumSource   =  $get(VORG(4))
	set blnPrintSupp =  $get(VORG(5))
	set blnPrintSN   =  $get(VORG(6))            ; Serial No?
	set strFromStore =  $get(VORG(7))
	set strToStore   =  $get(VORG(8))
	set blnShowSOH   = ''$get(VORG(9))           ; Snapped Qty may be hidden from counter
	set idCountNo    =  $get(VORG(15))
	
	set strHeading = $$SetHeader(idStocktake,blnShowSOH)              ; SR15810
	
	do ^WWWBACK
	do Print^WWWLISTKOPF("11;12;13;14")   ; Print Stocktake Criteria 
	do PrintHeader(idStocktake,strHeading) 
	do PrintLines(idStocktake,idCountNo,strLocnList,strGroupList,strFromStore,strToStore,blnShowSOH,blnPrintSupp,blnPrintSN,enumSource)
	write "</TABLE>",YCR       ; close second table opened in PrintHeader
	
 
	quit
	
SetHeader(pidStocktake,pblnShowSOH)
	;-------------------------------------------------------------------------------
	;	BEARBEITEN ÃœBERSCHRIFT ;Heading
	; 
	; History :
	; 03-Oct-2008	GRF		SR15810: Separate Heading
	;-------------------------------------------------------------------------------
	new strHeading
	
	;   1            2            3               4                 5                6               7 (optional)
	;--------------------------------------------------------------------------------------------------------------------+
	;         |                |           |                 |                 |                |                        |
	; ####### |  Counted:____  | User:____ | Checked By:____ |                 |                |                        |
	;         |                |           |                 |                 |                |                        |
	;   Id #  |     Storage    |   Item    |   Description   | Unit of Measure | Count Quantity | Stock On Hand Quantity |
	;         |Item Attributes |           |                 |                 |                |                        |
	;--------------------------------------------------------------------------------------------------------------------+
	
	set $piece(strHeading,Y,1) = "<BR>"_pidStocktake_"<BR><BR>"_$$$StrINWEINVStocktakingCountingNumber
	set $piece(strHeading,Y,2) = "<BR>"_$$^WWWTEXT(32056)_":_____________<BR><BR>"_$$$StrINWEINVStockLocation_"<BR>"_$$^WWWTEXT("IN00762")
	set $piece(strHeading,Y,3) = "<BR>"_$$^WWWTEXT(32057)_":_____________<BR><BR>"_$$^WWWTEXT(32024)
	set $piece(strHeading,Y,4) = "<BR>"_$$^WWWTEXT(32058)_":_____________<BR><BR>"_$$^WWWTEXT(32026)
	set $piece(strHeading,Y,5) = "<BR><BR><BR>"_$$^WWWTEXT(32030)
	set $piece(strHeading,Y,6) = "<BR><BR><BR>"_$$$StrINWEINVActualQuantity
	
	if pblnShowSOH set $piece(strHeading,Y,7)="<BR><BR><BR>"_$$^WWWTEXT("IN00449")
	
	quit strHeading	
	
PrintHeader(pidStocktake,pstrHeading)
	new loop
	
	write "<CENTER>"
	write YCR,"<TABLE BORDER=0 WIDTH=30% CELLSPACING=0>"
	write "<TR>"
	write "<TD NOWRAP VALIGN=TOP><FONT SIZE=3>"
	write "<B><NOBR>"
	write $$$Text("IN00459")               ; "Stocktake Count Report"
	do Title^INStocktakeReportCommon(pidStocktake)
	write "</NOBR></B>"
	write "</FONT></TD>"
	write "</TR>"
	write "</TABLE>",YCR
	write "</CENTER>"
	
	DO START100^WWWTAB         ; <TABLE>
	write "<THEAD>" 
	write "<TR>"
	for loop=1:1 {
		quit:$piece(pstrHeading,Y,loop,99)="" 
		
		write YCR,"<TH BGCOLOR=",YDARKGRAY,"><FONT SIZE=1>"
		write $piece(pstrHeading,Y,loop),"&nbsp;"
		write "</FONT></TH>"
	}
	write "</TR>",YCR
	write "</THEAD>"
	quit
	
PrintLines(pidStocktake,pidCountNo,pstrLocnList,pstrGroupList,pstrFromStore,pstrToStore,pblnShowSOH,pblnPrintSupp,pblnPrintSN,penumSource)
	;-------------------------------------------------------------------------------
	; History:
	; 17-May-2011	shobby	SR17755: Formatting of Storage
	; 07-Oct-2008	GRF		SR15810: Brace format
	;-------------------------------------------------------------------------------
	new arrAttr,blnShow,dteRecvd,idAttr,idBatchNo,idDefGroup,idItem,idItemGroup
	new idLineNo,idLocn,idOrderLine,idOrderNo,idSerialNo,idStorage,idSupp,idUnit,loop
	new objItem,objSetup,objSTLine,strBGColour,strItemName,strRemark,strStatus,strText,strUnit
	
	set pstrLocnList  = ";"_pstrLocnList_";"
	set pstrGroupList = ";"_pstrGroupList_";"
	
	set objSetup     = $get(^INVORG(YM,YM,1))
	set idDefGroup   = $$$INVORGDefaultItemGroup(objSetup)
	
	set YDDSATZ = 0
	
	set idLineNo = ""
	for {
		set idLineNo = $order(^INWEINV(YM,pidStocktake,idLineNo))
		quit:idLineNo=""
		
		continue:'$$Exists^INWEINVCount(pidStocktake,idLineNo,pidCountNo)
		set objSTLine=$get(^INWEINV(YM,pidStocktake,idLineNo,1))
		continue:objSTLine=""
	
		set idOrderNo   = $$$INWEINVOrderNumber(objSTLine) 
		set idOrderLine = $$$INWEINVLineItemsNumber(objSTLine) 
		continue:((penumSource=1) && (idOrderNo'=""))   ; Only Counting Items On Stock
		continue:((penumSource=2) && (idOrderNo="") )   ; Only Checking Orders With Items On Stock
		
		set idLocn = $$$INWEINVLocation(objSTLine)
		continue:((pstrLocnList'=";;") && '$find(pstrLocnList,";"_idLocn_";"))
		
		set idStorage = $$$INWEINVStockLocation(objSTLine)
		continue:((pstrFromStore'="") && (pstrFromStore ]] idStorage  ))
		continue:((pstrToStore  '="") && (idStorage     ]] pstrToStore))
		
		set idItem = $$$INWEINVItemNumber(objSTLine)
		continue:idItem=""
		set objItem = $get(^INART(YM,idItem,1))
		
		set idItemGroup = $$$INARTItemGroup(objItem)
		if idItemGroup="" set idItemGroup = idDefGroup
		continue:((pstrGroupList'=";;") && '$find(pstrGroupList,";"_idItemGroup_";"))
		
		
		;-----------------------------------
		
		
		if $$$INWEINVCountPrinted(objSTLine)="" {
			set $$$INWEINVCountPrinted(objSTLine) = $horolog     ;  <<< Why not INWEINVP?
			set strStatus = $$$Save("INWEINV",pidStocktake_","_idLineNo,objSTLine,1)
		}
		
		; New Line
		;+++++++++++++++++++++++++++++++++++
		set YDDSATZ = $get(YDDSATZ) + 1
		set strBGColour = " BGCOLOR="_$select(YDDSATZ#2:YWHITE,1:YGRAY)
		write YCR,"<TR>"
		
		; Line No (ID#)
		;-----------------------------------
		write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
		write idLineNo
		write "&nbsp;</FONT></TD>"
		
		; Location / Storage
		;-----------------------------------
		write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"
		;SR17755 write idLocn," / ",idStorage
		write idLocn," / "_$$CodeWithTSU2^INLP(idLocn,idStorage) ;SR17755
		;set dteRecvd = $$$INWEINVGoodsReceiptDate(objSTLine)
		if $$$INWEINVStockLocationNote(objSTLine) = "HISTORY" write " "_$$^WWWTEXT(32859)_"&nbsp;"	; "History"
		;if dteRecvd'=""                                       write "<BR>("_$$^WWWDATE(dteRecvd)_")&nbsp;"
		
		do GetAttributes^INStocktakeUtil(idItem,objSTLine,SPRACHE,.arrAttr)
		set idAttr = ""
		for {
			set idAttr = $order(arrAttr(idAttr))
			quit:idAttr=""
			
			write "<BR>",$piece(arrAttr(idAttr),"~",1),": ",$piece(arrAttr(idAttr),"~",2),"&nbsp;"
		}
		write "</FONT></TD>"
		
		; Group
		;-----------------------------------
		write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"
		write idItem_"<BR>"
		if idItemGroup'="" WRITE "("_idItemGroup_") "_$$GetDescription^INDItemGroup(idItemGroup)
		write "&nbsp;</FONT></TD>"
		
		; Description : Order|Reservation, ItemName, Remarks, Supplier, BatchNo / SerialNo
		;-----------------------------------
		write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"
		
		if $$$INWEINVStockType(objSTLine)="S" {
			write "<b>"
			write $$^WWWTEXT(32047)_": "_idOrderNo_"-"_idOrderLine		; "Order"
			write "</b><BR>"
			set blnShow = $$$YES
		
		} elseif $$$INWEINVStockType(objSTLine)="R" {
			write "<b>"
			write $$^WWWTEXT(32480)_": "_idOrderNo		                ; "Reserved"
			write "</b><BR>"
			set blnShow = $$$YES
		
		} else {
			set blnShow = $$$NO
		}
		
		set strItemName = $$$INARTSearchName(objItem)
		write $extract(strItemName,1,40)
		
		set strRemark = $$$INARTRemarks(objItem)
		if $translate(strRemark,"| ")=$translate(strItemName,"| ") set strRemark=""
		if strRemark'="" WRITE "<BR>"
		
		; LONG TEXT - vertical separator indicates new line - changed to space - broken into 40 characters 
		for loop=1:1 {
			quit:$piece(strRemark,"|",loop,999)=""
			
			set strText = $translate($$^WWWUML($piece(strRemark,"|",loop),1),"|"," ")
			continue:$translate(strText," ")=""
			
			write $extract(strText,1,40)
			if $extract(strText,41,80)'=""   write "<BR>",$extract(strText,41,80)
			if $extract(strText,81,120)'=""  write "<BR>",$extract(strText,81,120)
			if $extract(strText,121,160)'="" write "<BR>",$extract(strText,121,160)
			if $piece(strRemark,"|",loop+1,999)'="" write "<BR>",YCR
		}
		
		write "&nbsp;"
		
		if pblnPrintSupp {
			set idSupp = $$$INWEINVSupplier(objSTLine)
			if idSupp'="" write YCR,"<BR>","("_idSupp_") "_$$$INLIEFShortName($get(^INLIEF(YM,idSupp,1)))
		}
		if pblnPrintSN {
			set idSerialNo = $$$INWEINVSerialNumber(objSTLine)
			set idBatchNo  = $$$INWEINVBatchNumber(objSTLine)
			if (idSerialNo'="") || (idBatchNo'="") {
				write YCR,"<BR>",idBatchNo
				if (idBatchNo'="") && (idSerialNo'="") WRITE " / "
				write idSerialNo
			}
		}
		write "</FONT></TD>"
 
		; Unit
		;-----------------------------------
		write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
		set strUnit = ""
		set idUnit  = $$$INARTUnitofMeasure(objItem)
		if idUnit'="" set strUnit = $piece($get(^WWW101(0,"EINHEIT",SPRACHE,idUnit,1)),Y,1)
		if strUnit="" set strUnit = "Unit:"_idUnit
		write strUnit
		write "&nbsp;</FONT></TD>"
		
		; Count Quantity - may be hidden
		;-------------------------------------
		write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
		if blnShow write +$$$INWEINVActualQuantity(objSTLine)_"<BR>"
		
		for loop=1:1:30 WRITE "&nbsp;"                     ; room to write
		write "</FONT></TD>"
		
		; Snapped Quantity - optional column
		;-------------------------------------
		if pblnShowSOH {
			write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
			write +$$$INWEINVTargetQuantity(objSTLine),"&nbsp;"
			write "</FONT></TD>"
		}
		
		write "</TR>",YCR
	}
	quit
	
 
	
]]></Routine>
</Export>