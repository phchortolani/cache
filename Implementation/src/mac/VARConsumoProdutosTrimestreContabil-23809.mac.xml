<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARConsumoProdutosTrimestreContabil" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARConsumoProdutosTrimestreContabil
	#include COMSYS	
	quit
	
OnAfterSave
	new Mes, Ano, Local, CentroCusto, Grupo

	kill ^VARTempConsumoProdutosTrimestreContabilFiltro(YM,YBED,1)
	
	set Mes 	 	= $get(VORG(1))
	set Ano 	 	= $get(VORG(2))
	set Local 	 	= $get(VORG(3))
	set CentroCusto	= $get(VORG(4))
	set Grupo	 	= $get(VORG(5))
	
	set $piece(^VARTempConsumoProdutosTrimestreContabilFiltro(YM,YBED,1),Y,1) = Mes
	set $piece(^VARTempConsumoProdutosTrimestreContabilFiltro(YM,YBED,1),Y,2) = Ano
	set $piece(^VARTempConsumoProdutosTrimestreContabilFiltro(YM,YBED,1),Y,3) = Local
	set $piece(^VARTempConsumoProdutosTrimestreContabilFiltro(YM,YBED,1),Y,4) = CentroCusto
	set $piece(^VARTempConsumoProdutosTrimestreContabilFiltro(YM,YBED,1),Y,5) = Grupo
	
	do VARLogAfterSave^VARUtil(YBED,YFORM)
 	do GoToForm^COMUtilForm("VARConsumoProdutosTrimestreContabil",1,,,,,)
 	
 	quit
 	
OnAfterDataFields
	new objTemp, vMes, vAno, vLocal, vCentroCusto, vGrupo
	
 	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	set objTemp = $get(^VARTempConsumoProdutosTrimestreContabilFiltro(YM,YBED,1))
	
	set vMes 			= $piece(objTemp,Y,1)
	set vAno 			= $piece(objTemp,Y,2)
	set vLocal  		= $piece(objTemp,Y,3)
	set vCentroCusto 	= $piece(objTemp,Y,4)
	set vGrupo  		= $piece(objTemp,Y,5)
	
	if ((vMes = "")||(vAno = "")) {
		$$$Alert("Preencha todos os campos obrigatórios.")
		quit
	} elseif ($$CheckFechamentoContabil^VAREntradaNotaFiscal(vMes,vAno) = $$$NO){
		$$$Alert("Este relatório esta disponível somente para os meses/anos que já foi gerado o fechamento contábil.")
		quit
	}
	
	do PrintTabela(vMes,vAno,vLocal,vCentroCusto,vGrupo)
 
 	quit 
 	
PrintTabela(pMes,pAno,pLocal,pCentroCusto,pGrupo)
	new dataInicial, dataFinalAtual, dataInicialPassada, dataFinalPassada, dataInicialRetrasada,
		dataFinalRetrasada, meuSQL, rsTrimestreContabil, localAnterior, centroCustoAnterior,
		grupoAnterior, totalLocal, totalCentroCusto, totalGrupo, count, valorTotal, valorTotalGeral,
		lstHeader, movimento, localEstoque, centroCusto, produto, grupoPai, mesRetrasado, mesPassado,
		mesAtual, descProduto, unidadeMedida, descLocal, descGrupo, descCentroCusto
	
	//Mês atual
	set dataInicialAtual 		= $$SQLGetPrimeiroDiaMes^VARSQL(pMes,pAno)
	set dataFinalAtual 			= $$SQLGetUltimoDiaMes^VARSQL(pMes,pAno)
	
	//Mês passado
	set dataInicialPassada 		= $$AddMonth^COMUtilDate(dataInicialAtual,-1)
	set dataFinalPassada		= $zdateh($SYSTEM.SQL.DATEADD("dd",-1,dataInicialAtual),3)
	
	//Mês retrasado
	set dataInicialRetrasada 	= $$AddMonth^COMUtilDate(dataInicialPassada,-1)
	set dataFinalRetrasada		= $zdateh($SYSTEM.SQL.DATEADD("dd",-1,dataInicialPassada),3)
	 
	set meuSQL = ""
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" Movimento, "
	set meuSQL = meuSQL_" LocalEstoque, "
	set meuSQL = meuSQL_" CentroCusto, "
	set meuSQL = meuSQL_" Produto, "
	set meuSQL = meuSQL_" $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) as GrupoPai, "
	set meuSQL = meuSQL_" -SUM(ROUND(MesRetrasado,4)) as MesRetrasadoTotal, "
	set meuSQL = meuSQL_" -SUM(ROUND(MesPassado,4)) as MesPassadoTotal, "
	set meuSQL = meuSQL_" -SUM(ROUND(MesAtual,4)) as MesAtual "
	
	set meuSQL = meuSQL_" FROM ( "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'DEVOLUCAO' as Movimento, "
	set meuSQL = meuSQL_" StockHistory.Location as LocalEstoque, "
	set meuSQL = meuSQL_" CASE $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) "
  	set meuSQL = meuSQL_" WHEN 'Entrada' "
	set meuSQL = meuSQL_" THEN $$GetCentroCustoEntrada^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved, StockHistory.LineNumber) "
	set meuSQL = meuSQL_" ELSE $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) END as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	
	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalRetrasada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalRetrasada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesRetrasado, "
	
	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialPassada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalPassada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialPassada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalPassada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesPassado, "
	
	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialAtual_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialAtual_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesAtual "
	
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (22)) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada') "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 1) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorRecebimento^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetTipoRecebimento^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada')) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 7) "
	set meuSQL = meuSQL_" AND ($$GetNatureza^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) = 'DB') "
	set meuSQL = meuSQL_" AND ($$GetTipoEstorno^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorEstorno^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída'))) "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY')) "
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'REQUISICAO' as Movimento, "
	set meuSQL = meuSQL_" StockHistory.Location as LocalEstoque, "
	set meuSQL = meuSQL_" $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "

	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalRetrasada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalRetrasada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesRetrasado, "
	
	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialPassada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalPassada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialPassada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalPassada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesPassado, "
	
	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialAtual_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialAtual_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesAtual "

	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (11, 21)) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 35) "
	set meuSQL = meuSQL_" AND (($$GetTipoProducao^VARFechamentoContabil(StockHistory.Reference) = 2) OR ($$IsSaidaParaManipulacaoMagistral^VARFechamentoContabil(StockHistory.Reference,35) = 1)))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY')) "
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'TFR-SAIDA' as Movimento, "
	set meuSQL = meuSQL_" StockHistory.Location as LocalEstoque, "
	set meuSQL = meuSQL_" $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "

	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalRetrasada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalRetrasada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesRetrasado, "
	
	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialPassada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalPassada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialPassada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalPassada_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesPassado, "
	
	set meuSQL = meuSQL_" NVL(CASE WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialAtual_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
	set meuSQL = meuSQL_" WHEN StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialAtual_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY') & "
	set meuSQL = meuSQL_" $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída' "
	set meuSQL = meuSQL_" THEN ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END,0) as MesAtual "

	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (((($$IsRouteFromRequisitante^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 30 "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito') "
	set meuSQL = meuSQL_" AND ($$IsLocalDestinoTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)) "
	set meuSQL = meuSQL_" OR ($$IsRouteFromAbastecedor^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 31  "
	set meuSQL = meuSQL_" AND ($$IsLocalAceiteTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)))) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 32) "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito'))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_dataInicialRetrasada_"', 'DD/MM/YYYY') AND TO_DATE('"_dataFinalAtual_"', 'DD/MM/YYYY')) "
	
	set meuSQL = meuSQL_" ) "
	
	set meuSQL = meuSQL_" WHERE Movimento IS NOT NULL "
	
	if (pLocal '= ""){
		set meuSQL = meuSQL_" AND LocalEstoque = '"_pLocal_"' "	
	}
	if (pGrupo '= ""){
		set meuSQL = meuSQL_" AND $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) = '"_$$SQLGetGrupoPai^VARSQL(pGrupo)_"' "
	}
	if (pCentroCusto '= "") {
		set meuSQL = meuSQL_" AND CentroCusto = '"_pCentroCusto_"' "
	}	
	
	set meuSQL = meuSQL_" GROUP BY LocalEstoque, CentroCusto, $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)), Produto "
	set meuSQL = meuSQL_" ORDER BY LocalEstoque, CentroCusto, GrupoPai, Produto "
	
	set rsTrimestreContabil = ##Class(%ResultSet).%New()
	
	do rsTrimestreContabil.Prepare(meuSQL)
	do rsTrimestreContabil.Execute()
	
	set localAnterior   		= ""
	set centroCustoAnterior 	= ""
	set grupoAnterior   		= ""
	set totalLocal				= 0
	set totalCentroCusto		= 0
	set totalGrupo				= 0	
	set count					= 0
	set valorTotal				= 0
	set valorTotalGeral			= 0			

	set lstHeader = ""
	set lstHeader = lstHeader_$listbuild("Produto","U.A.","Consumo "_$$FormatDataMesAno(dataInicialRetrasada)_" (R$)","Consumo "_$$FormatDataMesAno(dataInicialPassada)_" (R$)","Consumo "_$$FormatDataMesAno(dataInicialAtual)_" (R$)","Valor Total (R$)")
		
	while(rsTrimestreContabil.Next()) {
		
		set movimento		= rsTrimestreContabil.GetData(1)
		set localEstoque	= rsTrimestreContabil.GetData(2)
		set centroCusto		= rsTrimestreContabil.GetData(3)
		set produto			= rsTrimestreContabil.GetData(4)
		set grupoPai		= rsTrimestreContabil.GetData(5)
		set mesRetrasado	= rsTrimestreContabil.GetData(6)
		set mesPassado		= rsTrimestreContabil.GetData(7)
		set mesAtual		= rsTrimestreContabil.GetData(8)
			
		set descProduto     = $$SQLGetDescricaoProduto^VARSQL(produto)
		set unidadeMedida 	= $$SQLGetUnitSigla2^VARSQL(produto)
		set descLocal	    = $$SQLGetLocationName^VARSQL(localEstoque)
		set descGrupo	   	= $$SQLGetDescGrupoItem^VARSQL(grupoPai)
		set descCentroCusto	= $$SQLGetCentroCustoDesc^VARSQL(centroCusto)
		
		set valorTotal		= mesRetrasado + mesPassado + mesAtual
		set valorTotalGeral	= valorTotalGeral + valorTotal
		
		if (count = 0) {
			
			w "<hr /><br />"
			w "<strong>Local de Estoque: "_localEstoque_" - "_descLocal_"</strong><br />"
			w "<strong>Centro de Custo: "_centroCusto_" - "_descCentroCusto_"</strong><br />"
			w "<strong>Grupo de Estocagem: "_grupoPai_" - "_descGrupo_"</strong>"
			
			do Start^COMTable(lstHeader)			
		}
		
		if ( (localAnterior '= localEstoque) && (localAnterior '= "") ) {
			
			if ( (grupoAnterior '= grupoPai) && (grupoAnterior '= "") ) {
				
				do NewLine^COMTable("lightsteelblue")	
				do InsertCell^COMTable("<strong>Total do Grupo de Estocagem</strong>",,,,"RIGHT",,5)
				do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalGrupo,2)_"</strong>",,,,"RIGHT")
				do EndLine^COMTable()
				
				set totalGrupo = 0
			}
			
			if ( (centroCustoAnterior '= centroCusto) && (centroCustoAnterior '= "") ){
				
				do NewLine^COMTable("lightsteelblue")	
				do InsertCell^COMTable("<strong>Total do Centro de Custo</strong>",,,,"RIGHT",,5)
				do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalCentroCusto,2)_"</strong>",,,,"RIGHT")
				do EndLine^COMTable()
				
				set totalCentroCusto = 0
			}
			
			do NewLine^COMTable("lightsteelblue")	
			do InsertCell^COMTable("<strong>Total do Local de Estoque</strong>",,,,"RIGHT",,5)
			do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalLocal,2)_"</strong>",,,,"RIGHT")
			do EndLine^COMTable()
			
			set totalLocal = 0
				
			do Stop^COMTable()
			
			w "<br /><hr /><br />"
			w "<strong>Local de Estoque: "_localEstoque_" - "_descLocal_"</strong><br />"
			w "<strong>Centro de Custo: "_centroCusto_" - "_descCentroCusto_"</strong><br />"
			w "<strong>Grupo de Estocagem: "_grupoPai_" - "_descGrupo_"</strong>"
				
			do Start^COMTable(lstHeader)
			
		} elseif ( (centroCustoAnterior '= centroCusto) && (centroCustoAnterior '= "") )  {
			
			if ( (grupoAnterior '= grupoPai) && (grupoAnterior '= "") ) {
				
				do NewLine^COMTable("lightsteelblue")	
				do InsertCell^COMTable("<strong>Total do Grupo de Estocagem</strong>",,,,"RIGHT",,5)
				do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalGrupo,2)_"</strong>",,,,"RIGHT")
				do EndLine^COMTable()
				
				set totalGrupo = 0
			}
			
			do NewLine^COMTable("lightsteelblue")	
			do InsertCell^COMTable("<strong>Total do Centro de Custo</strong>",,,,"RIGHT",,5)
			do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalCentroCusto,2)_"</strong>",,,,"RIGHT")
			do EndLine^COMTable()

			set totalCentroCusto = 0
				
			do Stop^COMTable()
		
			w "<br /><hr /><br />"
			w "<strong>Local de Estoque: "_localEstoque_" - "_descLocal_"</strong><br />"
			w "<strong>Centro de Custo: "_centroCusto_" - "_descCentroCusto_"</strong><br />"
			w "<strong>Grupo de Estocagem: "_grupoPai_" - "_descGrupo_"</strong>"
			
			do Start^COMTable(lstHeader)
			
		} elseif ( (grupoAnterior '= grupoPai) && (grupoAnterior '= "") ) {
			
			do NewLine^COMTable("lightsteelblue")	
			do InsertCell^COMTable("<strong>Total do Grupo de Estocagem</strong>",,,,"RIGHT",,5)
			do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalGrupo,2)_"</strong>",,,,"RIGHT")
			do EndLine^COMTable()
			
			set totalGrupo = 0
			
			do Stop^COMTable()
		
			w "<br /><hr /><br />"
			w "<strong>Local de Estoque: "_localEstoque_" - "_descLocal_"</strong><br />"
			w "<strong>Centro de Custo: "_centroCusto_" - "_descCentroCusto_"</strong><br />"
			w "<strong>Grupo de Estocagem: "_grupoPai_" - "_descGrupo_"</strong>"
			
			do Start^COMTable(lstHeader)
						
		}
				
		do NewLine^COMTable()
		do InsertCell^COMTable(produto_" - "_descProduto,,,,"LEFT",,,,,)
		do InsertCell^COMTable(unidadeMedida,,,,"CENTER",,,,,)
		do InsertCell^COMTable($$^WWWTR(0,8,mesRetrasado,2),,,,"RIGHT",,,,,)
		do InsertCell^COMTable($$^WWWTR(0,8,mesPassado,2),,,,"RIGHT",,,,,)
		do InsertCell^COMTable($$^WWWTR(0,8,mesAtual,2),,,,"RIGHT",,,,,)
		do InsertCell^COMTable($$^WWWTR(0,8,valorTotal,2),,,,"RIGHT",,,,,)
		do EndLine^COMTable()	
		
		set totalLocal 		 = totalLocal + valorTotal
		set totalCentroCusto = totalCentroCusto + valorTotal
		set totalGrupo		 = totalGrupo + valorTotal
	
		set localAnterior 		= localEstoque
		set centroCustoAnterior	= centroCusto
		set grupoAnterior 		= grupoPai
		
		set count = $i(count)
		set valorTotal = 0
	}		
	
	if (count = 0) {
		do Start^COMTable(lstHeader)
		do NewLine^COMTable()
		do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,9)
		do EndLine^COMTable()	
		quit
	}
		
	do NewLine^COMTable("lightsteelblue")	
	do InsertCell^COMTable("<strong>Total do Grupo de Estocagem</strong>",,,,"RIGHT",,5)
	do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalGrupo,2)_"</strong>",,,,"RIGHT")
	do EndLine^COMTable()
	
	do NewLine^COMTable("lightsteelblue")	
	do InsertCell^COMTable("<strong>Total do Centro de Custo</strong>",,,,"RIGHT",,5)
	do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalCentroCusto,2)_"</strong>",,,,"RIGHT")
	do EndLine^COMTable()
	
	do NewLine^COMTable("lightsteelblue")	
	do InsertCell^COMTable("<strong>Total do Local de Estoque</strong>",,,,"RIGHT",,5)
	do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,totalLocal,2)_"</strong>",,,,"RIGHT")
	do EndLine^COMTable()
	
	do NewLine^COMTable("lightsteelblue")
	do InsertCell^COMTable("<strong>Total Geral:</strong>",,,,"RIGHT",,5)
	do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,valorTotalGeral,2)_"</strong>",,,,"RIGHT")	
	do EndLine^COMTable()
			
	do Stop^COMTable()	
	
	do rsTrimestreContabil.Close()

	quit
	
FormatDataMesAno(pData)
	new dataFormatada

	set dataFormatada = $$SQLGetMes^VARSQL(pData)_"/"_$$SQLGetAno^VARSQL(pData)
	
	quit dataFormatada
	
Imprimir()
	new vMes, vAno, vLocal, vCentroCusto, vGrupo

	set vMes 		 = $get(VORG(1))
	set vAno 		 = $get(VORG(2))
	set vLocal  	 = $get(VORG(3))
	set vCentroCusto = $get(VORG(4))
	set vGrupo		 = $get(VORG(5))

	if ((vMes = "")||(vAno = "")) {
		$$$Alert("Preencha todos os campos obrigatórios.")
		do GoToForm^COMUtilForm("VARConsGrupoEstocagem","")
	} elseif ($$CheckFechamentoContabil^VAREntradaNotaFiscal(vMes,vAno) = $$$NO){
		$$$Alert("Este relatório esta disponível somente para os meses/anos que já foi gerado o fechamento contábil.")
		quit
	}
	
	do RunReportConsumoTrimestreContabil^VARJasperRunReportContinuacao(vMes,vAno,vLocal,vCentroCusto,vGrupo)
	
	quit
]]></Routine>
</Export>