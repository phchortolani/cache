<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARParametroAtivarTabela" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VARParametroAtivarTabela
#include COMSYS
#include VARConst
#include COMConst
#include INConst

OnBeforeFormConstruction
	
	quit

OnAfterSave

	kill ^VARTempParamAtivoConfirm(YM,YBED)
	
	do VARLogAfterSave^VARUtil(YBED,YFORM)	
 	do GoToForm^COMUtilForm("VARParametroAtivarTabela",1,,,,,)
	
	quit
	
OnAfterDataFields

	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)

	set nomeParametro = $get(VORG(1)) 
	
	set meuSQL = "SELECT DISTINCT "
  	set meuSQL = meuSQL_" ParameterDescription, "
  	set meuSQL = meuSQL_" SearchItem,  "
  	set meuSQL = meuSQL_" Text "
  	set meuSQL = meuSQL_" FROM WWW101 "
  	set meuSQL = meuSQL_" WHERE ParameterDescription = '"_nomeParametro_"' "

	set paramList = ##class(%ResultSet).%New()  
	do paramList.Prepare(meuSQL)  
	do paramList.Execute() 		  

   	new lstHeader
 	set lstHeader = $listbuild("Nome do Parâmetro","Código do Parâmetro","Descrição","Ativo","")

	if $$Start^COMTable(lstHeader) {
	
		set count = 0
	
		while (paramList.Next()) {
			
			set classe			= "WWW101" ; Por enquanto, somente esta classe.
			set nome			= paramList.Data("ParameterDescription")
			set codigo   		= paramList.Data("SearchItem")
			set descricao		= paramList.Data("Text")
			
			set count = $i(count)
			
			do NewLine^COMTable()
	    	do InsertCell^COMTable(nome,,,,"CENTER")
	    	do InsertCell^COMTable(codigo,,,,"CENTER")
	    	do InsertCell^COMTable(descricao,,,,"LEFT")
	    	do InsertCellCheckbox^COMTable(classe_$$$COMMA_nome_$$$COMMA_codigo,"GravarAtivoOnClick^VARParametroAtivarTabela",$$GetAtivo(classe,nome,codigo),0)
	    	do IconeIndicativo($$GetAtivo(classe,nome,codigo))
	    	do EndLine^COMTable()
		
		}
		
		if (count = 0) {
			
			do NewLine^COMTable()
			do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,4)
			do EndLine^COMTable()
			
		}
			
		do Stop^COMTable()
		
	}
	do paramList.Close()
	
	quit

IconeIndicativo(pblnAtivo)
 
	if (pblnAtivo > 0) {
		do InsertCell^COMTable("<img src="_YGIF_"small_check.gif TITLE='Parâmetro ativo.' border=0 align=""CENTER"">",,,,"CENTER")
		quit
	}
	
	else {
		do InsertCell^COMTable("<img src="_YGIF_"small_x.gif TITLE='Parâmetro inativo.' border=0 align=""CENTER"">",,,,"CENTER")
		quit
	}
	
	quit

GetAtivo(pClasse,pNome,pCodigo)
	
	new objVARParametroAtivar, str
	
	if ((pClasse="")||(pNome="")||(pCodigo="")) quit $$$NO
	
	set str = $$$NO
	
	set objVARParametroAtivar = $get(^VARParametroAtivar(0,pClasse,pNome,pCodigo,1))
	
	if ($$$VARParametroAtivarAtivo(objVARParametroAtivar) '= ""){
		set str = $$$YES
	}
	
	quit str
	
GravarAtivoOnClick(pKey="",checked="")
	
	new pClasse, pNome, pCodigo
	
	set pClasse   = $piece(pKey,$$$COMMA,1)
	set pNome	  = $piece(pKey,$$$COMMA,2)
	set pCodigo	  = $piece(pKey,$$$COMMA,3)
	if ($$GetAtivo(pClasse,pNome,pCodigo) = $$$YES) {
		if ($$CheckUnidadeEmUso(pCodigo) = $$$YES){
			$$$Alert("Atenção: Você não pode inativar um parâmetro em uso no sistema.")
				&js< document.getElementById('#($piece(checked,$$$COMMA,2))#').checked = 1 >
			quit $$$NO
		}
	}
	
	if ($piece(checked,",",1) = "true") {
    	set ^VARTempParamAtivoConfirm(YM,YBED,pClasse,pNome,pCodigo) = 1
    }
    elseif ($piece(checked,",",1) = "false") {
        set ^VARTempParamAtivoConfirm(YM,YBED,pClasse,pNome,pCodigo) = ""
    }
 
    quit $$$YES	

CheckUnidadeEmUso(pUnidade)
	
	new found
	
	set found = 0
	
	// ---------- UnitofMeasure - INART

	&sql(
		DECLARE UnitofMeasure CURSOR FOR
		select DISTINCT UnitofMeasure
		into :Codigo
		from INART
		where UnitofMeasure = :pUnidade
	)

	&sql(OPEN UnitofMeasure)
	&sql(FETCH UnitofMeasure)
	
	while (SQLCODE = 0) {
		set found = 1
		quit

		&sql(FETCH UnitofMeasure)
	} 
	&sql(CLOSE UnitofMeasure)
	
	if (found = 0){ ; Só procura no outro campo/tabela se não tiver encontrado na busca anterior.
		// ---------- BaseUnit - INART
	
		&sql(
			DECLARE BaseUnit CURSOR FOR
			select DISTINCT BaseUnit
			into :Codigo
			from INART
			where BaseUnit = :pUnidade
		)

		&sql(OPEN BaseUnit)
		&sql(FETCH BaseUnit)
		
		while (SQLCODE = 0) {
			set found = 1
			quit
		
			&sql(FETCH BaseUnit)
		} 
		&sql(CLOSE BaseUnit)
	
	}

	if (found = 0){ ; Só procura no outro campo/tabela se não tiver encontrado na busca anterior.
		// ---------- OuterUnit - INARTPACK
	
		&sql(
			DECLARE OuterUnit CURSOR FOR
			select DISTINCT OuterUnit
			into :Codigo
			from INARTPACK
			where OuterUnit = :pUnidade
		)

		&sql(OPEN OuterUnit)
		&sql(FETCH OuterUnit)
		
		while (SQLCODE = 0) {
			set found = 1
			quit
			
			&sql(FETCH OuterUnit)
		} 
		&sql(CLOSE OuterUnit)
	}
	
	quit found 
		
    
Salvar()
	set obj = $order(^VARTempParamAtivoConfirm(YM,YBED))
	
	if ($data(obj)= 10 || $data(obj) = 1){
		do AtualizaAtivo()
		kill ^VARTempParamAtivoConfirm(YM,YBED)
	}
	
	do VARLogAfterSave^VARUtil(YBED,YFORM)	
	do GoToForm^COMUtilForm("VARParametroAtivarTabela",1,,,,,)
	
	quit
	
AtualizaAtivo()
	
	new Classe, Nome, Codigo, objTemp
	
	set Classe = ""

	for {
		set Classe = $order(^VARTempParamAtivoConfirm(YM,YBED,Classe))		
		quit:(Classe = "")
		
		set Nome = ""
		
		for {
			set Nome = $order(^VARTempParamAtivoConfirm(YM,YBED,Classe,Nome))
			quit:(Nome = "")
			
			set Codigo = ""
			
			for { 
				set Codigo = $order(^VARTempParamAtivoConfirm(YM,YBED,Classe,Nome,Codigo))
				quit:(Codigo = "")
				
				set objTemp = $get(^VARTempParamAtivoConfirm(YM,YBED,Classe,Nome,Codigo))
				set objVARParametroAtivar = $get(^VARParametroAtivar(YM,Classe,Nome,Codigo,1))	
						
				if ($piece(objTemp,Y,1) '= ""){
					if ($$$VARParametroAtivarAtivo(objVARParametroAtivar) '= $piece(objTemp,Y,1)){
						set $$$VARParametroAtivarAtivo(objVARParametroAtivar) = $piece(objTemp,Y,1)
					}
					set strStatus = $$$Save("VARParametroAtivar",Classe_$$$COMMA_Nome_$$$COMMA_Codigo,objVARParametroAtivar,1)
				}
				else {
					set strStatus = $$$Kill("VARParametroAtivar",Classe_$$$COMMA_Nome_$$$COMMA_Codigo)
				}
			
				if $$$ISERR(strStatus) {
					$$$Alert("Erro ao atualizar parâmetros: "_$$DecodeError^COMUtilError(strStatus))
				}
			}
		}
	}
	
	quit
	
CargaVARParametroAtivar()
	
	new Item, objINART, found, Classe, Nome, Codigo, objVARParametroAtivar
	
	$$$VAR
	
	set Item = ""
	set Classe = "WWW101"
	set Nome = "EINHEIT"
	set objVARParametroAtivar = ""
	set $$$VARParametroAtivarAtivo(objVARParametroAtivar) = $$$YES
	set Codigo = ""
	set strStatus = $$$OK

	// ---------- UnitofMeasure - INART

	&sql(
		DECLARE UnitofMeasureCarga CURSOR FOR
		select DISTINCT UnitofMeasure
		into :Codigo
		from INART
		where UnitofMeasure IS NOT NULL
	)

	&sql(OPEN UnitofMeasureCarga)
	&sql(FETCH UnitofMeasureCarga)
	
	write "Executando carga baseada no campo UnitofMeasure da INART: ",!
	hang 1
	
	while (SQLCODE = 0) {
		write "Código da UnitofMeasure: "_Codigo,!
		set strStatus = $$$Save("VARParametroAtivar",Classe_$$$COMMA_Nome_$$$COMMA_Codigo,objVARParametroAtivar,1)
		&sql(FETCH UnitofMeasureCarga)
	} 
	&sql(CLOSE UnitofMeasureCarga)
	
	// ---------- BaseUnit - INART
	
	&sql(
		DECLARE BaseUnitCarga CURSOR FOR
		select DISTINCT BaseUnit
		into :Codigo
		from INART
		where BaseUnit IS NOT NULL
	)

	&sql(OPEN BaseUnitCarga)
	&sql(FETCH BaseUnitCarga)
	
	write !,"Executando carga baseada no campo BaseUnit da INART: ",!
	hang 1
	
	while (SQLCODE = 0) {
		write "Código da BaseUnit: "_Codigo,!
		set strStatus = $$$Save("VARParametroAtivar",Classe_$$$COMMA_Nome_$$$COMMA_Codigo,objVARParametroAtivar,1)
		&sql(FETCH BaseUnitCarga)
	} 
	&sql(CLOSE BaseUnitCarga)

	// ---------- OuterUnit - INARTPACK
	
	&sql(
		DECLARE OuterUnitCarga CURSOR FOR
		select DISTINCT OuterUnit
		into :Codigo
		from INARTPACK
		where OuterUnit IS NOT NULL
	)

	&sql(OPEN OuterUnitCarga)
	&sql(FETCH OuterUnitCarga)
	
	write !,"Executando carga baseada no campo OuterUnit da INARTPACK: ",!
	hang 1
	
	while (SQLCODE = 0) {
		write "Código da OuterUnit: "_Codigo,!
		set strStatus = $$$Save("VARParametroAtivar",Classe_$$$COMMA_Nome_$$$COMMA_Codigo,objVARParametroAtivar,1)
		&sql(FETCH OuterUnitCarga)
	} 
	&sql(CLOSE OuterUnitCarga)

	quit strStatus]]></Routine>
</Export>