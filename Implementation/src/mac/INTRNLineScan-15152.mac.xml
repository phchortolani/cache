<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INTRNLineScan" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INTRNLineScan
	
#include INConst
#include COMSYS
	
AddScanLine(pidScan)
    ;-------------------------------------------------------------------------------
    ; Routine to Add a new line to a Grid after a Scan is validated
    ;
    ; Assumptions :
    ;  YFORM	-	 Form Name
    ; 
    ; Returns:
    ; 	Status
    ;
    ; History:
    ; 10-Nov-2009	PPP		SR17022: Changed pidItem to idItem (undefined variable)
    ; 04-Nov-2009	DWR		SR16983: Set Unit directly from INART
    ; 20-Jul-2009	PPP 	SR16773: ScanDelimiter is a function now
    ; 23-Jun-2009	PPP 	SR16565: Scanning Prompt for Grid
    ;-------------------------------------------------------------------------------
 	new arrFields,idClass,idItem,idLine,objHeader,objLine,objOldData
 	
 	if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
 		new QOH
 	}
	
	set objHeader = $$$GRIDYFELDContainer
	set idItem    = ""	
	
	if $get(YFORM)'="" {
		set idClass = $$$GetClass(YFORM)
		set objLine = ""
		set idItem  = $piece(pidScan,$$$ScanDelim,1)		//SR16773
 		
		//Get the data for the Item if it already exists
		//set idLine = $$GetExistingItemRowData(idItem)
		set idLine = $$GetRowLine^COMGridEdit31Scan(idItem, $$$FldINTFRLineItem)
		
		if idLine {
			set (objLine, objOldData) = $$$GRIDGetYFELD(idLine)
			set $$$INTFRLineQuantity(objLine)     = $$$INTFRLineQuantity(objLine)     + 1
			set $$$INTFRLineBaseQuantity(objLine) = $$$INTFRLineBaseQuantity(objLine) + 1
			
			set arrFields($$$FldINTFRLineQuantity)     = $$$INTFRLineQuantity(objLine)
			set arrFields($$$FldINTFRLineBaseQuantity) = $$$INTFRLineBaseQuantity(objLine)
			
			//Updates the Row and Displayes it (for existing lines)
			//If the row is on another page displays the lines at the top of the grid
			do UpdateRow^COMGridEdit31Scan(YFORM,idLine,.arrFields,objOldData)
			
		} else {
			set objLine = ""
			set $$$INTFRLineItem(objLine)           = idItem
			set $$$INTFRLineQuantity(objLine)       = 1
			set $$$INTFRLineBaseQuantity(objLine)   = 1
			set $$$INTFRLineUnit(objLine)           = $$$INARTUnitofMeasure($get(^INART(YM,idItem,1)))		//SR17022
			;set $$$INTFRLineUnit(objLine)           = $$LoadUnitOfMeasureList^INARTUtilities(idItem)    	//SR16983
			set $$$INTFRLineImportedDemand(objLine) = $$$NO
			if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
				set QOH                             = ##class(alSOH.iSOH).GetQtyAvailable(idItem,$$$INTFRSendingLocation(objHeader),"",$$$YES)
			}
			
			$$$GRIDAddLine(objLine,,idClass)
		//	do UpdateContainer^COMGridEdit31G()
			
			/*
			set idLine = $$GetRowLine^COMGridEdit31Scan(idItem, $$$FldINTFRLineItem)
			set objNewData = $$$GRIDGetYFELD(idLine)
			//Need this to ensure that OnBlurs for the fields are done
			do OnGridUpdate^COMGridEdit31Events(idLine,objNewData,objLine,YFORM)
			*/
		}
	}
	
	quit $$$OK
	
]]></Routine>
</Export>