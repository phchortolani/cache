<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWFORMD" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWFORMD
#include COMSYS
#include WWWConst

#define LogR(%1,%2) 	;
#define LogR2(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWFORMD("_%2_") : "_$zh $$$JournalOn
#;define LogR2(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWFORMD("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		Show datafields
	;
	; Inputs : 
	;
	;
	; ByRef :
	;	YFORM		Form Name
	;	YVOR		Form Parameters
	;	YFOART		Form Type
	;	YKEY
	;	YA			
	;	YINSEITE	
	;
	; Returns :
	;
	;
	; History :
	; 14-Apr-2009	GRF		$$$KEY Macros
	; 08-May-2007	GRF		SRBR014310: Doco; brace format
	; 14-Mar-2007	GRF		SR12505: doco; naked reference; quits; FIXME
	; 02-Sep-2005	JW		SR12966: WWW122 is shared
	; 30-May-2005	RobertW	SR12056: Attempt at Performance Increase
	; 17-APR-2005	TYBD	NOADMIN FLAG SET IN CHECK OF THE READ/WRITE CHECK ON RULES
	; 05.08.1997	DT		ANZEIGEN DATENFELDER
	;-------------------------------------------------------------------------------
	NEW YA,YDADO,YI,YLFDNR,YLFN,YPRIM,YSEI,YSPL,YZEILE
	
	$$$LogR("",YFORM_"<"_YFOART)
	
	QUIT:YFORM=""
	QUIT:'$DATA(^WWW122(0,YFORM))
	
	;---------------------------------------
	; YVOR			objForm			^WWW120 
	; 
	;	D44		$$$WWW120FormFormatting()
	;		0		Single Field Formatting
	;		1		Format According To Longest Field
	;		2		Format In Pixels
	;---------------------------------------
	IF $$$WWW012LineBelowPrimaryKey($GET(YVOR1))=1 IF YFOART'=3 DO          ; not Grid Form
	. IF $DATA(^WWW121(0,YFORM)) DO
	. . IF $PIECE(YVOR,Y,44)=1 DO  QUIT
	. . . WRITE "<TR>"
	. . . WRITE "<TD><HR></TD><TD><HR STYLE=""border-color:"_YLIGHTGREY_"""></TD>"
	. . . FOR YI=1:1:20 IF $DATA(^WWW122s(0,3,$$^WWWUMLAU(YFORM,1),YSEITE,YI,2)) DO  QUIT
	. . . . WRITE "<TD><HR></TD><TD><HR STYLE=""border-color:"_YLIGHTGREY_"""></TD>"  ;2.TABULATOR
	. . . ;
	. . . WRITE "</TR>"
	. . ;
	. . IF $PIECE(YVOR,Y,44)=2  WRITE "<HR STYLE=""border-color:"_YLIGHTGREY_""">"
	. . IF +$PIECE(YVOR,Y,44)=0 WRITE "<HR STYLE=""border-color:"_YLIGHTGREY_""">"
	
	; Form Type 3 : Grid
	;---------------------------------------
	IF YFOART=3 IF ($$$WWW120AuthorizationToModifyData(YVOR)=$$$EnumReadOnly) DO ^WWWFORM4 QUIT    ;KEINE EINGABE BEI "NUR LESEBERECHTIGUNG"
	IF (YFOART=3) && '$DATA(^WWW121(0,YFORM)) {             ;KEIN PRIMÄRSCHL.   ;SRBR014310
		WRITE "<TR><TD></TD>"
	}
	
	;------------------------------------------------------------------------
	
	; HIDDEN WEIL VERSTECKTER PRIMÄRSCHLÜSSEL ;since
	IF ($$$KEY1(YKEY)'="") && '$DATA(^WWW121(0,YFORM,1)) {  ;SRBR014310
		WRITE YCR,"<INPUT NAME=""Y"_YFORM_"P1"""
		WRITE " TYPE=HIDDEN"
		WRITE " VALUE='"_$$$KEY1(YKEY)_"'" 
		WRITE ">"
	}
	
	IF '$DATA(YA) SET YA=""
	IF +$GET(YINSEITE)=0 SET YINSEITE = 1  ;MINDESTENS 1. INNENSEITE
	KILL ^WWWSOR(YUSER,1)
	SET YINPAGE = 0      ;KEINE UNTERSEITE VORHANDEN ;no on hand 
	SET YERSTES = 1      ;SUCHLAUF DURCH DATEI + ANZEIGE DER FELDER ;trans- data file Show the 
	DO FIELDS
	SET YDECIMALLEN = 2  ;NORMAL DECIMAL (reset after FIELDS possibly changes it?)
	;------------------------------------------------------------------------
	WRITE YCR,"</TR>",YCR                                    ;ABSCHLUSS FELD ;field 
	IF ($PIECE(YVOR,Y,2)'=3) && ($PIECE(YVOR,Y,44)'=1) {     ;SRBR014310
		WRITE "</TABLE>",YCR                                 ;ABSCHLUSS FORMAT
		SET YTABLEANZ = $GET(YTABLEANZ)-1
	}
	
	IF $GET(YFIELDSET)>1  WRITE YCR,"</FIELDSET>",YCR SET YFIELDSET = 1  ;LETZTEN SCHLIESSEN
	IF +$GET(YFIELDSET)=1 WRITE YCR,"</FIELDSET>",YCR SET YFIELDSET = 0  ;LETZTEN SCHLIESSEN
	IF YFOART=3 DO ^WWWFORM4
	QUIT
	
FIELDS
    ;-------------------------------------------------------------------------------
    ; 		Select Field         ;SELECT FELDER
    ; 
    ; ByRef :
    ;	YFORM
    ;	YUSER
    ;	YSCREENM	
    ; 
    ; History:
    ; 11-Sep-2009	shobby	SR16887: Corrected previous change.
    ; 14-Apr-2009	GRF		Clean up commented code; WWW122 macros
    ; 03-Oct-2007	shobby	SRBR014592: Include customisations from $$Get^WWW122
    ; 							(Including RelationWithSearchFunc)
    ; 25-Jun-2007	shobby	SRBR014409:	Move the CheckRules call to a point after
    ; 							the fields have been drawn.  This avoids the problems
    ; 							of having fields not completely drawn if they are in
    ; 							a readonly state.  ie List boxes only have the
    ; 							currently selected entry drawn.  If we want to
    ; 							enable them later... this is now possible.
    ; 09-May-2007	GRF		SRBR014310: D123 in WWW122D did not correspond with use
    ; 							in WWW122 - reassigned to D113 in both.
    ; 13-Mar-2007	GRF		SR12505: doco; don't need + on YHIDDSE
	; 14-Dec-2006	HeberB	BR014339: Not to hidden if WWW122D1 has description
	;  5-Oct-2006	HeberB	SRBR014265: New rule at WWW122D2 'If Condition On Execute'
	; 12-Sep-2006	HeberB	SRBR014111: enable entering code at 'Execute For Check' 
    ;  9-Sep-2005	JW		Only call WWWUMLAU once (idxForm)
    ;-------------------------------------------------------------------------------
	new idxForm,objCompanyData
	
	$$$LogR("FIELDS",YFORM)
	
	;---------------------------------------
	;	YSATZ		objFormData		^WWW122
	;	YSATZ1		objCompanyData	^WWW122D
	;---------------------------------------
	
	; FIXME : <GRF> see note in further FIXME below re QUIT
	DO  QUIT                              ;ZUSAMMENSTELLEN DER DATEN; ;the 
	. SET ^WWWSOR(YUSER_"PAGE")=""        ;TYBD;18,2,2003 YUSER_"PAGE"
	. LOCK +^WWWSOR(YUSER_"PAGE"):2
	. KILL ^WWWSOR(YUSER_"PAGE")
	. NEW YHIDDSE
	. SET YBBN = ""
	. FOR  SET YBBN = $ORDER(^WWW122(0,YFORM,YBBN)) QUIT:YBBN=""  DO
	. . SET YSATZ       = $$Get^WWW122(YFORM,YBBN)          ; FELDDEFINITION
	. .;SET YINSEITE    =+$PIECE(YSATZ,Y,81)                ; INNENSEITEN VORHANDEN
	. . SET YLFN        = $PIECE(YSATZ,Y,1)                 ; Class field number
	. . SET YDECIMALLEN = 2
	. . ;
	. . ; Initially not hidden unless a Free Field        ;SONDERFELD
	. . ;-----------------------------------
	. . SET YHIDDSE=0
	. . IF +$GET(YSCREENM)'=1 IF $EXTRACT($PIECE(YSATZ,Y,12),1,5)="_FREE" SET YHIDDSE=1
	. . ;
	. . ; Company Defaults
	. . ; FIXME : <GRF> Call to $$Get^WWW122 applies WWW122D to WWW122 but may not
	. . ;               include all following logic.  It *DOESN'T* include WWW122D1
	. . ;               override of HIDDEN
	. . ;-----------------------------------
	. . IF $DATA(^WWW122D(0,YFORM,YBBN,YM,1)) DO
	. . . NEW YSATZ1
	. . . SET YSATZ1=$GET(^WWW122D(0,YFORM,YBBN,YM,1))
	. . . ;
	. . . ; If there is a description under Company Default or Language Customisation -
	. . . ; not hidden, but this can be overridden by explicit Company default setting.
	. . . ;---------------------------------
	. . . ;
	. . . IF YHIDDSE=1 IF $PIECE(YSATZ1,Y,6)'="" SET YHIDDSE=0                      ;SONDERFELD
	. . . IF YHIDDSE=1 IF $PIECE($get(^WWW122D1(0,YFORM,YBBN,YM,SPRACHE,1)),Y,1)'="" SET YHIDDSE=0  ;SONDERFELD
	. . . IF $PIECE(YSATZ1,Y,13)=1    SET YHIDDSE=1                                 ;HIDDEN
	. . . ;
	. . . ; Override standard settings with Company Defaults
	. . . ;---------------------------------
	. . . ;BR014592 VVVV   	These changes are now done inside the $$Get^WWW122 method.  Except for these last three
	. . . ; 				Left them in for now so as not to change the functionality, although I would question the
	. . . ; 				piece 2/13 functionality which allows you to make a core mandatory field not mandatory
	. . . IF $PIECE(YSATZ1,Y,2)=$$$YES SET $$$WWW122MandatoryInputItem(YSATZ) = $$$YES  ; D13
	. . . IF $PIECE(YSATZ1,Y,2)=$$$NO  SET $$$WWW122MandatoryInputItem(YSATZ) = $$$NO
	. . . IF $PIECE(YSATZ1,Y,1)'=""    SET $$$WWW122DefaultVariableInput(YSATZ) = $PIECE(YSATZ1,Y,1) SET ^WWWDUMMY(YUSER,"TEMP")=YFELD  ; D15 SONDERVORGABE ;FIS;16.04.04;25550;SPEICHERN VORBELEGUNG FÜR PRÜFEN SAVE OHNE DATENFELDER
	. . . ;BR014592 ^^^^
	. . ;
	. . ; FIXME : Class WWW122DU does not exist - either killed or set to 1 in WWWSCRA <GRF>
	. . IF $GET(YBED)'=""         IF $PIECE($GET(^WWW122DU(0,YFORM,YM,YBED,YBBN,1)),Y,1)=1         SET YHIDDSE=1,YHID=2  ;TYBD;HIDDENBY USER
	. . IF $GET(YUSERPROFILE)'="" IF $PIECE($GET(^WWW122DU(0,YFORM,YM,YUSERPROFILE,YBBN,1)),Y,1)=1 SET YHIDDSE=1,YHID=2  ;TYBD;HIDDENBY USER
	. . ;
	. . IF $PIECE(YSATZ,Y,60)<1 SET $PIECE(YSATZ,Y,60)=1  ;SEITE=1 WENN FALSCH ;when wrong 
	. . SET YSEI   = +$PIECE(YSATZ,Y,60)
	. . SET YZEILE = +$PIECE(YSATZ,Y,3)                   ;ZEILE
	. . SET YSPL   = +$PIECE(YSATZ,Y,4)                   ;SPALTE ;column 
	. . IF YSEITE '= +$PIECE(YSATZ,Y,60) SET YHIDDSE=1    ;FALSCHE SEITE = HIDDENFELD ;hide if on different tab 
	. . IF +$PIECE(YSATZ,Y,81)'=0        SET YHIDDSE=1    ;INNENSEITE ABER VERSTECKT  ;yet covert 
	. . IF '$DATA(^WWW122(0,YFORM,YBBN)) SET YHIDDSE=1
	. . IF $$^WWWACCESS($PIECE(YSATZ,Y,22),$PIECE(YSATZ,Y,24))'=1 SET YHIDDSE=1    ;KEINE FELDBERECHTIGUNG MODUL ;no module 
	. . IF $$^WWWACCESS($piece($get(^WWW120D(0,YFORM,0,1)),Y,22),$PIECE(YSATZ,Y,24))'=1 SET YHIDDSE=1    ;KEINE FELDBERECHTIGUNG MODUL ;no module 
	. . IF YSEI=YSEITE IF +$PIECE(YSATZ,Y,81)'=0 IF +YINSEITE'=+$PIECE(YSATZ,Y,81) SET YHIDDSE=1  ;INNENSEITEN VORHANDEN ;on hand 
	. . ;
	. . ; final customised field specification saved in presentation order
	. . ; (UserPAGE,HiddenFlag,PageTab,InnerTab,Row,Column,FormField,ClassField)
	. . SET ^WWWSOR(YUSER_"PAGE",YHIDDSE,+YSEI,+$PIECE(YSATZ,Y,81),YZEILE,YSPL,YBBN,+YLFN,1)=YSATZ
	. ;
	. ;RESTLICHE FELDER=HIDDEN
	. IF $GET(YDATEI)'="" SET YLFN="" FOR  SET YLFN=$ORDER(^WWW003(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. . QUIT:$DATA(^WWW122s(0,4,YLFN,YFORM))
	. . SET YSATZ=YLFN,YBBN=YLFN
	. . SET ^WWWSOR(YUSER_"PAGE",1,1,0,1,1,YBBN,YLFN,1)=YSATZ
	. ;
	. FOR YHIDDEN=0,1 DO
	. . SET YSEI=""
	. . FOR  SET YSEI=$ORDER(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI)) QUIT:YSEI=""  DO
	. . . SET YINSEITE=""
	. . . FOR  SET YINSEITE=$ORDER(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI,YINSEITE)) QUIT:YINSEITE=""  DO
	. . . . SET YZEILE=""
	. . . . FOR  SET YZEILE=$ORDER(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI,YINSEITE,YZEILE)) QUIT:YZEILE=""  DO
	. . . . . SET YSPL=""
	. . . . . FOR  SET YSPL=$ORDER(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI,YINSEITE,YZEILE,YSPL)) QUIT:YSPL=""  DO
	. . . . . . SET YXBBN=""
	. . . . . . FOR  SET YXBBN=$ORDER(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI,YINSEITE,YZEILE,YSPL,YXBBN)) QUIT:YXBBN=""  DO
	. . . . . . . SET YXLFN=""
	. . . . . . . FOR  SET YXLFN=$ORDER(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI,YINSEITE,YZEILE,YSPL,YXBBN,YXLFN)) QUIT:YXLFN=""  DO
	. . . . . . . . SET YSATZ=$GET(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI,YINSEITE,YZEILE,YSPL,YXBBN,YXLFN,1))
	. . . . . . . . SET YLFN    = YXLFN    IF YLFN=0 SET YLFN = ""
	. . . . . . . . SET YBBN    = YXBBN
	. . . . . . . . SET YHIDDSE = YHIDDEN
	. . . . . . . . SET YDECIMALLEN = 2
	. . . . . . . . IF $$$WWW122Decimals(YSATZ)'="" SET YDECIMALLEN = $$$WWW122Decimals(YSATZ)
	. . . . . . . . DO FORMVOR
 	. ;
	. $$$StartScript()
	. do CheckRules^WWWEVENT(YFORM,YFELD)     ; Customising Rules Check WWW122D2 
	. $$$EndScript()
	. LOCK -^WWWSOR(YUSER_"PAGE")
	. KILL ^WWWSOR(YUSER_"PAGE")
	
	
	; see ^^^ for QUIT
	
	;vvvvvvvvv FIXME : <GRF> Quit after DO above renders the following code obsolete (or should the quit be removed?)
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	
	;------------------------------------------------------------------------
	set idxForm = $$^WWWUMLAU(YFORM,1)	// JW
	FOR YSEI=" ",YSEITE DO
	. SET YERSTES=1  ;IMMER AUF JEDER SEITE ;constantly upon everyone side 
	. SET YZEILE=""
	. FOR  SET YZEILE=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE)) QUIT:YZEILE=""  DO
	. . SET YSPL=""
	. . FOR  SET YSPL=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE,YSPL)) QUIT:YSPL=""  DO
	. . . SET YBBN=""
	. . . FOR  SET YBBN=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE,YSPL,YFORM,YBBN)) QUIT:YBBN=""  DO
	. . . . SET YSATZ=$GET(^WWW122(0,YFORM,YBBN,1))             ;FELDDEFINITION
	. . . . IF YSEI=YSEITE IF +$PIECE(YSATZ,Y,81)'=0 SET YINPAGE=1 QUIT:YINSEITE=+$PIECE(YSATZ,Y,81)  ;INNENSEITEN VORHANDEN ;on hand 
	. . . . SET YLFN=$PIECE(YSATZ,Y,1)                          ;DATENBANKFELD
	. . . . IF +$PIECE(YSATZ,Y,60)<1 SET $PIECE(YSATZ,Y,60)=1   ;SEITE=1 WENN FALSCH ;when wrong 
	. . . . SET YHIDDSE=0                                       ;nicht hidden ;not 
	. . . . IF +$GET(YSCREENM)'=1 IF $EXTRACT($PIECE(YSATZ,Y,12),1,5)="_FREE" SET YHIDDSE=1  ;SONDERFELD
	. . . . IF $DATA(^WWW122D(0,YFORM,YBBN,YM,1)) DO
	. . . . . set objCompanyData = $get(^WWW122D(0,YFORM,YBBN,YM,1))
	. . . . . IF YHIDDSE=1 IF $PIECE(objCompanyData,Y,6)'="" SET YHIDDSE=0                            ;SONDERFELD
	. . . . . IF $PIECE(objCompanyData,Y,1)'=""  SET $PIECE(YSATZ,Y,15)=$PIECE(objCompanyData,Y,1)    ;SONDERVORGABE
	. . . . . IF $PIECE(objCompanyData,Y,13)=1   SET YHIDDSE=1                                        ;HIDDEN
	. . . . . IF $PIECE(objCompanyData,Y,4)'=""  SET $PIECE(YSATZ,Y,24)=$PIECE(objCompanyData,Y,4)    ;MODUL ;module 
	. . . . . IF $PIECE(objCompanyData,Y,42)'="" SET $PIECE(YSATZ,Y,22)=$PIECE(objCompanyData,Y,42)   ;BERECHTIGUNG
	. . . . . IF $PIECE(objCompanyData,Y,63)'="" SET $PIECE(YSATZ,Y,63)=$TRANSLATE($PIECE(objCompanyData,Y,63),",",";")   ;RELATIONSFELDER
	. . . . ;
	. . . . IF YSEITE'=+$PIECE(YSATZ,Y,60)   SET YHIDDSE=1  ;FALSCHE SEITE = HIDDENFELD ;side 
	. . . . IF +$PIECE(YSATZ,Y,81)'=0        SET YHIDDSE=1  ;INNENSEITE ABER VERSTECKT ;yet covert 
	. . . . IF '$DATA(^WWW122(0,YFORM,YBBN)) SET YHIDDSE=1
	. . . . IF $$^WWWACCESS($PIECE(YSATZ,Y,22),$PIECE(YSATZ,Y,24))'=1 SET YHIDDSE=1    ;KEINE FELDBERECHTIGUNG MODUL ;no module 
	. . . . IF $$^WWWACCESS($piece($get(^WWW120D(0,YFORM,0,1)),Y,22),$PIECE(YSATZ,Y,24))'=1 SET YHIDDSE=1
	. . . . DO FORMVOR
	
	;------------------------------------------------------------------------
	SET YSEI=""
	FOR  SET YSEI=$ORDER(^WWW122s(0,3,idxForm,YSEI)) QUIT:YSEI=""  IF YSEI'=" " IF YSEI'=YSEITE DO
	.;SET YERSTES=1  ;IMMER AUF JEDER SEITE ;table-mat constantly upon everyone side 
	. SET YZEILE=""
	. FOR  SET YZEILE=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE)) QUIT:YZEILE=""  DO
	. . SET YSPL=""
	. . FOR  SET YSPL=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE,YSPL)) QUIT:YSPL=""  DO
	. . . SET YBBN=""
	. . . FOR  SET YBBN=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE,YSPL,YFORM,YBBN)) QUIT:YBBN=""  DO
	. . . . SET YSATZ=$GET(^WWW122(0,YFORM,YBBN,1))  ;FELDDEFINITION
	. . . . IF YSEI=YSEITE IF +$PIECE(YSATZ,Y,81)'=0 SET YINPAGE=1 QUIT:YINSEITE=+$PIECE(YSATZ,Y,81)  ;INNENSEITEN VORHANDEN ;on hand 
	. . . . SET YLFN=$PIECE(YSATZ,Y,1)  ;DATENBANKFELD
	. . . . IF +$PIECE(YSATZ,Y,60)<1 SET $PIECE(YSATZ,Y,60)=1  ;SEITE=1 WENN FALSCH ;when wrong 
	. . . . SET YHIDDSE=0   ;nicht hidden ;not 
	. . . . IF $EXTRACT($PIECE(YSATZ,Y,12),1,5)="_FREE" SET YHIDDSE=1  ;SONDERFELD
	. . . . IF $DATA(^WWW122D(0,YFORM,YBBN,YM,1)) DO
	. . . . . set objCompanyData = $get(^WWW122D(0,YFORM,YBBN,YM,1))
	. . . . . IF YHIDDSE=1 IF $PIECE(objCompanyData,Y,6)'="" SET YHIDDSE=0  ;SONDERFELD
	. . . . . IF $PIECE(objCompanyData,Y,1)'="" SET $PIECE(YSATZ,Y,15)=$PIECE(objCompanyData,Y,1)  ;SONDERVORGABE
	. . . . . IF $PIECE(objCompanyData,Y,13)=1  SET YHIDDSE=1  ;HIDDEN
	. . . . ;
	. . . . IF YSEITE'=+$PIECE(YSATZ,Y,60)   SET YHIDDSE=1  ;FALSCHE SEITE = HIDDENFELD ;side 
	. . . . IF +$PIECE(YSATZ,Y,81)'=0        SET YHIDDSE=1  ;INNENSEITE ABER VERSTECKT ;yet covert 
	. . . . IF '$DATA(^WWW122(0,YFORM,YBBN)) SET YHIDDSE=1
	. . . . IF $$^WWWACCESS($PIECE(YSATZ,Y,22),$PIECE(YSATZ,Y,24))'=1 SET YHIDDSE=1    ;KEINE FELDBERECHTIGUNG MODUL ;no module 
	. . . . IF $$^WWWACCESS($piece($get(^WWW120D(0,YFORM,0,1)),Y,22),$PIECE(YSATZ,Y,24))'=1 SET YHIDDSE=1
	. . . . DO FORMVOR
	
	;------------------------------------------------------------------------
	IF YINPAGE=1 DO
	. DO ^WWWFORM6  ;INNENSEITENREITER
	. SET YSEI=""
	. FOR  SET YSEI=$ORDER(^WWW122s(0,3,idxForm,YSEI)) QUIT:YSEI=""  DO
	. . SET YZEILE=""
	. . FOR  SET YZEILE=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE)) QUIT:YZEILE=""  DO
	. . . SET YSPL=""
	. . . FOR  SET YSPL=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE,YSPL)) QUIT:YSPL=""  DO
	. . . . SET YBBN=""
	. . . . FOR  SET YBBN=$ORDER(^WWW122s(0,3,idxForm,YSEI,YZEILE,YSPL,YFORM,YBBN)) QUIT:YBBN=""  DO
	. . . . . SET YSATZ=$GET(^WWW122(0,YFORM,YBBN,1))  ;FELDDEFINITION
	. . . . . IF +$PIECE(YSATZ,Y,81)'=+YINSEITE QUIT   ;INNENSEITEN VORHANDEN ;on hand 
	. . . . . SET YLFN=$PIECE(YSATZ,Y,1)               ;DATENBANKFELD
	. . . . . IF +$PIECE(YSATZ,Y,60)<1 SET $PIECE(YSATZ,Y,60)=1  ;SEITE=1 WENN FALSCH ;when wrong 
	. . . . . SET YHIDDSE=0 
	. . . . . IF $EXTRACT($PIECE(YSATZ,Y,12),1,5)="_FREE" SET YHIDDSE=1       ;SONDERFELD
	. . . . . IF $DATA(^WWW122D(0,YFORM,YBBN,YM,1)) DO
	. . . . . . set objCompanyData = $get(^WWW122D(0,YFORM,YBBN,YM,1))
	. . . . . . IF YHIDDSE=1 IF $PIECE(objCompanyData,Y,6)'="" SET YHIDDSE=0  ;SONDERFELD
	. . . . . . IF $PIECE(objCompanyData,Y,1)'="" SET $PIECE(YSATZ,Y,15)=$PIECE(objCompanyData,Y,1)  ;SONDERVORGABE
	. . . . . . IF HIDDEN'=1 IF $PIECE(objCompanyData,Y,13)=1  SET YHIDDSE=1  ;HIDDEN
	. . . . . ;
	. . . . . IF YSEITE'=+$PIECE(YSATZ,Y,60)   QUIT  ;FALSCHE SEITE = HIDDENFELD ;side 
	. . . . . IF '$DATA(^WWW122(0,YFORM,YBBN)) QUIT
	. . . . . DO FORMVOR
	
	;------------------------------------------------------------------------
	IF YDATEI'="" DO  ;RESTLICHE DATENFELDER FÜR SAVE ;to 
	. NEW YHIDDSE
	. SET YLFN=""
	. FOR  SET YLFN=$ORDER(^WWW003(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. . QUIT:$DATA(^WWW122s(0,4,YLFN,YFORM))
	. . SET YSATZ=YLFN,YBBN=YLFN
	. . SET YHIDDSE=1
	. . DO FORMVOR
	
	QUIT
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	
	
FORMVOR
	;-------------------------------------------------------------------------------
	; VORGABEN FÜR FORMULAR ;DEFAULTS FOR FORM
	;
	; ByRefs:
	; Based on YSATZ = $GET(^WWWSOR(YUSER_"PAGE",YHIDDEN,YSEI,YINSEITE,YZEILE,YSPL,YXBBN,YXLFN,1))
	;                         (UserPAGE,HiddenFlag,PageTab,InnerTab,Row,Column,FormField,ClassField)
	;                                            YHIDDSE                           YBBN   YLFN
	;	YDECIMALLEN		Number of Decimals
	; 	YDADO			Single use check
	; 	YOPTION			Validation Data
	; 	YOPTION1		Validation Data
	; 	YPARA1
	; 	YERSTES			First field?
	; 	YSPL			
	; 	YTABLEANZ		
	; 	YFOART
	; 	YGJUMP			Carry over group name
	; 	YDREID
	; 	YFIELDSET
	; 	
	; Returns:
	;
	; History:
	; 27-Jul-2007	shobby	SRBR014586:	Use the NoAccess routine to do the tests on
	; 							YOPTION, YOPTION1 and YPARA1
	; 13-Mar-2007	GRF		SR12505: Duplicated closure of FIELDSET not required
	; 18-Jul-2006	JW		SR14832: Encapsulated group name translation
	;-------------------------------------------------------------------------------
	$$$LogR("FORMVOR",YLFN_"<"_$get(YHIDDSE))
	
	;Do not display a datafield twice on the same page
	IF YLFN'="" QUIT:$DATA(YDADO(YLFN))  SET YDADO(YLFN)=""
	
	;---------------------------------------
	; YVOR		objForm
	;	D44			$$$WWW120FormFormatting()
	;				  0="Single Field Formatting"  1="Format Acc. To Longest Field"  2="Format In Pixels"
	;
	; YSATZ		objDataField
	;	D2			$$$WWW122DataInputType()				15 = Hidden
	;	D50			$$$WWW122OnlyShowIfOptionYOPTION()
	;	D51			$$$WWW122DisplayItemOnlyWhenMenuPa()
	;	D106		$$$WWW122OnlyShowIfOptionYOPTION1()
	;---------------------------------------
	
	;BR014586 (not sure what YHIDDSE is already set to at this point
	if $get(YHIDDSE)'=$$$YES set YHIDDSE = $$NoAccess^WWWFORMCOMMON(YFORM,YDATEI,YBBN,"","","",$get(YOPTION),$get(YOPTION1),$get(YPARA1))
	
	IF $PIECE(YVOR,Y,44)'=1 IF YFOART'=3 IF YHIDDSE=0 IF $PIECE(YSATZ,Y,2)'=15 IF YERSTES'=1 IF YSPL<2 DO
	. WRITE YCR,"</TR></TABLE>",YCR  ;ENDE DER ZEILE ;termination the 
	. SET YTABLEANZ=$GET(YTABLEANZ)-1
	
	; NEW GROUP
	;---------------------------------------
	;	D38			$$$WWW122NewGroup()
	;		0			No Group Modification
	;		1			New Group
	;		2			Inner Group
	;		3			Close Group
	;	D39			$$$WWW122GroupName()
	;---------------------------------------
	; If not 3="Grid Form"
	IF YFOART'=3 IF $PIECE(YSATZ,Y,38)>0 DO  ;NEUE GRUPPE VOR DATENFELD ;group pre-data item 
	. IF YHIDDSE=0 DO  QUIT
	. . ;
	. . ;+++++++++++++++++++++++++++++++++++
	. . ;
	. . IF $PIECE(YVOR,Y,44)=1 DO  QUIT
	. . . NEW YI
	. . . WRITE "<TR><TD>"
	. . . IF YERSTES'=1 WRITE "<HR>"
	. . . IF YERSTES=1  WRITE "&nbsp;"
	. . . WRITE "</TD>",YCR
	. . . ;
	. . . ;--------
	. . . ;
	. . . write "<TD NOWRAP ALIGN=LEFT>"
	. . . WRITE "<FONT SIZE="""_$PIECE(YVOR,Y,7)_""">"
	. . . IF YERSTES'=1 IF $PIECE(YSATZ,Y,39)="" WRITE "<HR>"
	. . . IF YERSTES=1  IF $PIECE(YSATZ,Y,39)="" WRITE "&nbsp;"
	. . . IF $PIECE(YSATZ,Y,39)'="" DO
	. . . . IF $GET(YGJUMP)'="" WRITE "<A NAME="""_YGJUMP_""">"
	. . . . SET YGJUMP=$TRANSLATE($zconvert($PIECE(YSATZ,Y,39),"U")," ")
	. . . . WRITE "<A HREF=""#"_YGJUMP_""">"
	. . . . write "<B>"_$$TranslateGroupName($PIECE(YSATZ,Y,39))_"</B>&nbsp;"
	. . . . WRITE "</A>"
	. . . WRITE "</TD>",YCR
	. . . ;
	. . . ;--------
	. . . ;
	. . . FOR YI=1:1:20 IF $DATA(^WWW122s(0,3,$$^WWWUMLAU(YFORM,1),YSEITE,YI,2)) DO  QUIT
	. . . . WRITE "<TD><HR></TD><TD><HR></TD>"  ;2.TABULATOR
	. . . ;
	. . . WRITE YCR,"</TR>"
	. . ;
	. . ;+++++++++++++++++++++++++++++++++++
	. . ;
	. . IF $PIECE(YVOR,Y,44)=2 DO  QUIT
	. . . DO  QUIT   ;MIT RAHMEN ;by means of framework 
	. . . . ;
	. . . . ;----- 3 : Close Group     ;AUSSCHALTEN GRUPPE
	. . . . IF $PIECE(YSATZ,Y,38)=3 WRITE YCR,"</FIELDSET>" WRITE:$GET(YFIELDSET)=2 YCR,"</FIELDSET>" SET YFIELDSET=0 QUIT
	. . . . ;-----
	. . . . IF $GET(YFIELDSET)>1    WRITE YCR,"</FIELDSET>",YCR SET YFIELDSET=1
	. . . . ;
	. . . . ;----- 1 : New Group       ;NEUE GRUPPE
	. . . . IF $PIECE(YSATZ,Y,38)=1 DO
	. . . . .;IF $GET(YFIELDSET)=2  WRITE YCR,"</FIELDSET>",YCR SET YFIELDSET=1      ; SR12505 already back to 1 from previous test
	. . . . . IF $GET(YFIELDSET)=1  WRITE YCR,"</FIELDSET>",YCR SET YFIELDSET=0
	. . . . ;
	. . . . ;----- 2 : Inner Group     ;NEUE INNENGRUPPE
	. . . . ;IF $PIECE(YSATZ,Y,38)=2 DO                                              ; SR12505 ditto
	. . . . ;. IF $GET(YFIELDSET)=2  WRITE YCR,"</FIELDSET>",YCR SET YFIELDSET=1
	. . . . ;-----
	. . . . IF $PIECE(YVOR,Y,83)'="" WRITE YCR,"<FIELDSET>"  ;CSS-STYLESHEET
	. . . . IF $PIECE(YVOR,Y,83)="" IF $GET(YDREID)'=1 WRITE YCR,"<FIELDSET STYLE=""border-color:"_YLIGHTGREY_""">"
	. . . . IF $PIECE(YVOR,Y,83)="" IF +$GET(YDREID)=1 WRITE YCR,"<FIELDSET STYLE=""border-color-dark:"_YLIGHTGREY_"; border-color-light:"_YDARKGRAY_";"">"  ;FIS;31.03.04;25445;RAHMEN 2-FARBIG
	. . . . ;
	. . . . IF $PIECE(YSATZ,Y,39)'="" WRITE "<LEGEND>" WRITE YCR,"<FONT SIZE="""_$PIECE(YVOR,Y,7)_""">" DO  WRITE "</FONT></LEGEND>"
	. . . . . WRITE "<B>"
	. . . . . write $$TranslateGroupName($PIECE(YSATZ,Y,39))
	. . . . . WRITE "</B>"
	. . . . ;if YBED["SHOBBY" do
	. . . . ;. write "<img src='"_YGIF_"grouping.gif' top='0px' height='10px' style='position:absolute' onclick='if (this.parentNode.style.overflow=="""") {this.nextSibling.style.display=""block""; this.parentNode.style.overflow=""hidden""; this._height=this.parentNode.style.height; this.parentNode.style.height=""15px""} else {this.parentNode.style.overflow=""""; this.parentNode.style.height=this._height; this.style.position=""absolute""; this.nextSibling.style.display=""none"";};'>"
	. . . . ;. write "<div height=10 style='display:none'>&nbsp</div>"
	. . . . ;
	. . . . WRITE YCR
	. . . . SET YFIELDSET = $GET(YFIELDSET)+1
	. . . . SET:YFIELDSET>2 YFIELDSET = 2
	. . . ;
	. . . ;--------------------------------- ??? DISABLED BLOCK ??? see DO/QUIT above
	. . . ;
	. . . WRITE "<TABLE WIDTH=100%>"
	. . . SET YTABLEANZ = $GET(YTABLEANZ)+1
	. . . WRITE YCR,"<TR><TD align=right>"
	. . . IF $PIECE(YSATZ,Y,39)="" WRITE "<HR>"
	. . . IF $PIECE(YSATZ,Y,39)'="" DO
	. . . . WRITE "<HR></TD>"
	. . . . ;------
	. . . . write YCR,"<TD align=middle nowrap width=30%>"
	. . . . WRITE "<FONT SIZE="""_$PIECE(YVOR,Y,7)_""">"
	. . . . write $$TranslateGroupName($PIECE(YSATZ,Y,39))
	. . . . WRITE "</TD><TD align=left><HR>"
	. . . ;
	. . . WRITE YCR,"</TD></TR>"
	. . . WRITE "</TABLE>"
	. . . SET YTABLEANZ = $GET(YTABLEANZ)-1
	. . . ;--------------------------------- ???
	. . ;
	. . ;+++++++++++++++++++++++++++++++++++
	. . ;
	. . IF +$PIECE(YVOR,Y,44)=0 DO  QUIT
	. . . WRITE "<TABLE WIDTH=100%>"
	. . . SET YTABLEANZ=$GET(YTABLEANZ)+1
	. . . WRITE YCR,"<TR><TD>"
	. . . IF $PIECE(YSATZ,Y,39)="" WRITE "<HR>"
	. . . IF $PIECE(YSATZ,Y,39)'="" do
	. . . . write $$TranslateGroupName($piece(YSATZ,Y,39))
	. . . . 
	. . . WRITE YCR,"</TD></TR>"
	. . . WRITE "</TABLE>"
	. . . SET YTABLEANZ = $GET(YTABLEANZ)-1
	
	;------------------------------------------------------------------------
	SET YART="D"				  ;P=PRIMÄR,D=DATENFELD,M=MANUELLE,L=LISTGENERATOR
	IF $PIECE(YSATZ,Y,1)="" {
		SET YART="M"
		set YLFN=YBBN  ;WENN MANUELL, DANN 
	}
	SET YERSTES=YERSTES+1
	
	DO ^WWWFORM9  ;ANZEIGEN DATENFELD ;display data item 
	QUIT
	
	
TranslateGroupName(pstrName,pidForm)
	;-------------------------------------------------------------------------------
	; Translate a group name into text
	;
	; Params:	pstrName - form def group name
	;
	; ByRefs:
	;
	; Returns:	textual description
	;
	; History:
	; 18-Jul-2006	JW		SR14832: Created
	;-------------------------------------------------------------------------------
	new strExec,strText
	
	set pstrName = $$CalculateString(pstrName)
	set strText  = $$^WWWTEXT(pstrName)
	if strText'="" {
		set pstrName = strText
	}
	quit $$^WWWUML(pstrName)
	
	
CalculateString(pstrText,YFORM="",YKEY="",YLFN="",YFELD="")
	;-------------------------------------------------------------------------------
	; Calculate a string from code if necessary
	; 
	; NOTE: This should be called for all form def calculations! eg:
	; 	- Default variable input
	; 		Using YFORM,YKEY,YFLN,YFELD so they can be used in xecute
	; 
	; Called By : WWWFORM, COMGridEdit31Body, COMLanguage
	; 
	; Params:	pstrText - text/code to calculate
	;
	; ByRefs:
	;
	; Returns:	calculated text
	;
	; History:
	; 13-Nov-2006	JW		SR14550: Added Y params.
	; 24-Oct-2006	JW		BR014293: Should be 1st char not 2nd
	; 18-Jul-2006	JW		SR14832: Created
	;-------------------------------------------------------------------------------
	if $extract(pstrText)="@" {
		set $extract(pstrText) = ""
		if ($extract(pstrText)'="$") && ($extract(pstrText)'="#") {
			set pstrText = $get(@(pstrText))
		
		} else {
			xecute "set pstrText="_pstrText
		}
	}
	quit pstrText
	
	
Test(pstrValue="") ; Can be called from rules
	quit pstrValue 
	
	
CheckRules(pidForm,pidFormField,&pstrData,&pblnHidden,&pblnReadOnly,&pintNewFieldColor,&pblnMandatory,pblnKeepDefaults=$$$NO,&pstrNewFieldColor="",&pstrRelationClass="",&pstrRelationKeys="",&pblnUseValueOfDataField=$$$NO,&pstrRuleField="",&pstrMask,&pstrValue="",&pstrFontColor="", &pstrFilter) ;CORE-114
	;         1			2			3			4			5				6				  7				  8							9				  10						11					12							13				14			15				16
	;-------------------------------------------------------------------------------
	; Check the rules entered on WWW122D2, may replace part of WWWFORMD code
	;
	; Called By :	Enabled^COMGridEdit31G
	; 				ScreenUpdateStyle^COMGridEdit31S
	; 				CheckRules^WWWEVENT
	; 				JSInitializingMasking^WWWFORM8
	; 				Validate^WWWSAVD
	;				FieldFormat^WWWFieldValidation
	;				
	; Notes:	**** Although the WWW122D2 macros are used, they apply equally to WWW122C2
	; 
	; Params:	
	; 			 1 pidForm 					- form id
	; 			 2 pidFormField				- data field number (WWW003)
	; 			 8 pblnKeepDefaults			(NO)
	;
	; ByRefs:
	; 			 3 pstrData					- YFELD
	; 			 4 pblnHidden				- return booleans to indicate action to peform
	; 			 5 pblnReadOnly				
	; 			 6 pintNewFieldColor		- background colour
	; 			 7 pblnMandatory			
	; 			 9 pstrNewFieldColor		- background colour
	; 			10 pstrRelationClass		
	; 			11 pstrRelationKeys			
	; 			12 pblnUseValueOfDataField	(NO)
	; 			13 pstrRuleField			
	; 			14 pstrMask					
	; 			15 pstrValue				
	; 			16 pstrFontColor			
	;
	; Returns:	
	;
	; History:
	; 29-May-2013	shobby	CORE-114: New 'Filter' field to limit results collected by 'Rules'
	; 17-May-2012	shobby	SR18013: Preserve the value of the manual field otherwise updating
	;							formatting will blank the field.
	; 16-Aug-2011	shobby	SR17784: Multiple rules might run, if only one of them
	;							sets hidden then hidden it is.
	; 03-Dec-2009	shobby	SR17070: Remove shortcut quit.  There is a bit of extra logic at the
	; 							end that should be included.
	; 26-Aug-2009	shobby	SR16511: If a disabled field has a color set then change
	; 							the font color.
	; 26-Aug-2009	shobby	SR16860: Get YFELDCONTAINER
	; 02-Jul-2009	shobby	SR16705: Don't update pstrValue if the rules determine
	; 							the value is empty, unless specifically set as empty.
	; 30-Jun-2009	shobby	SR16704: pstrValue to allow updating of manual fields.
	; 18-Jun-2009	GRF		SR16598: document adhoc change to set Mandatory to NO if
	; 							Read-Only is set.
	; 04-Jun-2009	shobby	SR16624: Corrected an unsaved changes issue that would
	;							set a currency field to zero if it was empty.
	; 28-Mar-2009	shobby	SR16534: Put WWW122D2 data into an in-memory array.
	; 31-Jan-2008	shobby	SRBR014861: For currency fields remove extra precision,
	; 							otherwise we get stuck in an endless loop
	; 							ie Value is 1,0111 which is changed to 1,01 for on
	; 							screen display which triggers another change event etc.
	; 22-Jan-2008	heber	SRBR014794: FIX BYREF parameter pstrData
	; 04-Jan-2008	heber   SRBR014794: add mask to WWW122D2 - new parameter also
	; 05-Nov-2007	shobby	SRBR014759: Oops. Forgot to remove a new of YKEY
	; 30-Oct-2007	shobby	SRBR014759: Changes done under BR014557/BR014671 are
	; 							incompatible.  Now only new'ing the value of YKEY if
	; 							the current value is empty.
	; 18-Oct-2007	shobby	SRBR014557: New'd YKEY
	; 06-Sep-2007	shobby	SRBR014638: Consider more conditions that might make a
	; 							field mandatory.
	; 17-Aug-2007	shobby	SRBR014671: Make YKEY available for any code running
	;							during	'Rules' processing.  Note that YKEY may not
	;							physically exist on Disc at this point.
	; 30-Jul-2007	shobby	SRBR014613: Put additional check for readonly in to make
	; 							sure we are not trying to make a readonly field\
	; 							'editable' with customising rules.
	; 26-Jul-2007	GRF		SRBR014575: Add "&" to byref arguments
	; 19-Jul-2007	shobby	SRBR014617: Subroutined some functionality and included
	; 							tests on primary keys.
	; 13-Jul-2007	GRF		SRBR014605: English Property Name
	; 12-Jul-2007	shobby	SRBR014605: Use CalculateString to determine the value
	; 							of rule conditions
	; 09-Jul-2007	Frank	SRBR014575: Added 'If Empty' & 'If not Empty conditions'
	; 							and Relation fields.
	; 07-Jun-2007	shobby	SRBR014409: If customisation rules are set to make a
	; 							field hidden then ignore this.  Otherwise it won't
	; 							be able to be unhidden dynamically if it was hidden
	; 							during a load or save where it is not drawn to the
	; 							screen.
	; 05-Jun-2007	shobby	SRBR014409: Replaced ValueIs calculations with a call to
	; 							CalculateString
	; 04-Jun-2007	shobby	SRBR014500: xecute method on strValueIs was incorrectly defined.
	; 29-May-2007	shobby	SRBR014500:ValueIs can now be populated by calling a
	; 							method of the form @$$Test^SCHTest()
	; 13-Apr-2007	shobby	SRBR014343:Include additional field, pstrNewFieldColour,
	; 							to return the string description of a colour.
	; 							Change colour based on whether the field is
	; 							mandatory or read only.
	; 12-Apr-2007	shobby	SRBR014409:Only clear the value if the clear flag is set.
	; 12-Apr-2007	shobby	SRBR014409:Make the previous change conditional.
	; 							Existing usages of this function break otherwise.
	; 09-Apr-2007	shobby	SRBR014409:Only set default values for hidden, readonly,
	; 							newfieldcolour, Mandatory if not passed in
	; 						TODO:  Maybe should obtain default values from WWW122 etc.
	; 							Modify the input data with the value obtained from the rule.
	; 						TODO:  Add support for function calls that return a value.
	; 14-Mar-2007	GRF		SR12505: doco; no check required now performed in
	; 							WWWACCESS; moved cancelled code out of way.
	; 04-Oct-2006	HeberB	SRBR014265: Created based on WWWFORMD and added new rule
	; 							'If Condition On Execute' 
	;-------------------------------------------------------------------------------
	new arrRules,blnRule,blnTested,idRule,intClassField,objRule,objWWW122
	new strCommand,strResult,strValue,strValueIs,YFELD,YFELDCONTAINER
	
	$$$LogR2("CheckRules",$get(pidForm)_"<"_$get(pidFormField)_]]><![CDATA["<"_$get(pstrData)_"<")
	
	set YFELDCONTAINER = $$$GRIDYFELDContainer

	if $get(YKEY)="" {
		new YKEY
		set YKEY = $$GetYKEY()
	}
	set objWWW122     = $$Get^WWW122(pidForm,pidFormField)
	set pblnMandatory = $$$WWW122MandatoryInputItem(objWWW122)
	
	if pblnKeepDefaults {
		if $get(pblnHidden)=""     set pblnHidden   = $$$NO
		if $get(pblnReadOnly)=""   set pblnReadOnly = $$$NO
		if $get(pintNewFieldColor)="" {
			if pstrNewFieldColor'="" {
				set pintNewFieldColor = $order(^WWW100s(0,1,$$$Index(pstrNewFieldColor),"FARBE",SPRACHE,""))
			}
		} else {
	;		FIXME : <GRF> is it valid to say we want to keep the default and then blow it away?
			set pintNewFieldColor = ""
		}
 	
 	} else {
		set pblnHidden        = $$$NO
		set pblnReadOnly      = $$$NO
		set pintNewFieldColor = ""
 	}
 
 	do GetRules(.arrRules,pidForm,pidFormField,YM)
 	
 	if $data(arrRules) {
		set YFELD = pstrData
		set intClassField = $$$GetClassField(pidForm,pidFormField)
		if intClassField="" if $data(YMFELD) set pstrValue=$piece(YMFELD,Y,pidFormField) ;SR18013
		set idRule = ""
		for {
			set idRule = $order(arrRules(idRule))
			quit:idRule=""

			set blnTested = $$$NO
			set blnRule   = $$$NO	
			set objRule   = $get(arrRules(idRule,1))
		
			; data field 
			if $$$WWW122D2IfPrimaryKey(objRule)'="" {   ;Primary key takes precedence (new tests stop both)
				set blnRule = $$TestRule(objRule,YKEY,$$$WWW122D2IfPrimaryKey(objRule),.blnTested,$$$COMMA)
			
			} elseif $$$WWW122D2IfDataField(objRule) '= "" {
				set blnRule = $$TestRule(objRule,pstrData,$$$WWW122D2IfDataField(objRule),.blnTested,Y)
			}
		
			continue:(blnTested && 'blnRule)	; next rule if tested and negative
		
	 		; If condition on execute                                         ; *** EXECUTE ***
			if ($$$WWW122D2IfConditionOnExecute(objRule)'="") {	
				set blnTested  = $$$YES
				set strResult  = ""
				set strCommand = "set strResult="_$$$WWW122D2IfConditionOnExecute(objRule)
				xecute strCommand
				if strResult {
					set blnRule = $$$YES	
				} else {
					set blnRule = $$$NO
				}
			}
			continue:(blnTested && 'blnRule)
		
			if $$^WWWACCESS($$$WWW122D2ThisUserEntitlement(objRule),$$$WWW122D2ThisModuleEntitlement(objRule),YBED) = 1 set blnRule = $$$YES
			continue:('blnRule)
		
			;SR17784 set pblnHidden = $$$NO
			if $$$WWW122D2FieldNotDisplayed(objRule) set pblnReadOnly  = $$$YES  ; Could be from WWW122D2 or WWW122C2
			if $$$WWW122D2ReadOnlyField(objRule)     set pblnReadOnly  = $$$YES
			if $$$WWW122D2MandatoryField(objRule)    set pblnMandatory = $$$YES
			if $$$WWW122D2NewFieldColor(objRule) '= "" {
				set pintNewFieldColor = $$$WWW122D2NewFieldColor(objRule)
				set pstrFontColor     = $$$SysEnum("FARBE",pintNewFieldColor) ; Used if the field is disabled.
			}
		
			set strValue=""
			if +$$$WWW122D2Clear(objRule) {
				set pstrValue =  ""
				if intClassField'="" set $piece(pstrData,Y,intClassField) = $get(pstrValue)

			} else {
				set strValueIs = $$$WWW122D2ValueIs(objRule)
				if strValueIs'="" {
					set strValue = $$CalculateString(strValueIs,pidForm,YKEY,pidFormField,pstrData)
				}
				if ($$$WWW122InputType(objWWW122)=8) && ($piece(pstrData,Y,intClassField)'="") {  ; Currency
					set strValue = +$justify($piece(pstrData,Y,intClassField),0,YDECIMALLEN)
				}
				if strValue'="" {
					set pstrValue = strValue
					if intClassField'="" set $piece(pstrData,Y,intClassField) = $get(pstrValue)
				}
			}
		
			if $$$WWW122D2ApplyMask(objRule) '= "" set pstrMask = $$$WWW122D2ApplyMask(objRule)
		
			if $$$WWW122D2RelationClass(objRule) '= "" {
				set pstrRelationClass       = $$$WWW122D2RelationClass(objRule)
				set pstrRelationKeys        = $$$WWW122D2RelationalPrimaryKeys(objRule)
				set pblnUseValueOfDataField = $$$WWW122D2AddDataFieldToRelationKey(objRule)
				set pstrRuleField           = $$$WWW122D2IfDataField(objRule)
			}
			
			if $$$WWW122D2FieldNotDisplayed(objRule) {	;SR17784
				set pblnHidden=$$$YES					;SR17784
			}											;SR17784
			set pstrFilter=$$$WWW122C2Filter1(objRule) ;CORE-114
		}
 	}
	set pblnReadOnly = $$ReadOnly(pidForm,pidFormField,pstrData,pblnReadOnly)
	
	; FIXME : Transaction edit grids should be able to colour fields as mandatory but only validate when Posting.
	;         It should be possible to save the currently available details and finish providing the rest later. <GRF>
	;CORE-72 if pblnReadOnly set pblnMandatory=$$$NO
	;CORE-72 set pstrNewFieldColor=$$BACKGROUNDCOLOR^WWWFORM7(pblnMandatory,pblnReadOnly) ;SESPE-467 
	;set ^zzSCH($i(^zzSCH))="readonly="_pblnReadOnly
	if pblnReadOnly {
		set pintNewFieldColor = $$$WWW012FrameBodyColor($get(^WWW012(0,0,1)))
		set pblnMandatory     = $$$NO ;shobby ADHOC can't be mandatory if it is readonly
	
	} elseif pblnMandatory {
		;if $$MenuType^WWW013()'=14{
			if pintNewFieldColor="" set pintNewFieldColor = $$$WWW012FontColorMandatoryInput($get(^WWW012(0,0,1)))
		;}
	}
	
	set pstrNewFieldColor = $$$SysEnum("FARBE",pintNewFieldColor)
	quit
	
	
HasRules(pidForm,pidFormField)
	;-------------------------------------------------------------------------------
	; Determines if this field has rules
	; 
	; Called By : OnSortGrid^COMGridEdit31Events
	; 
	; Params: Form Name and Record Key
	;
	; Returns: Boolean : Whether rules exist
	;
	; History:
	; 03-Mar-2011	shobby	SR17676: Created
	;-------------------------------------------------------------------------------
	new arrRules
	
	do GetRules(.arrRules,pidForm,pidFormField,YM)
	quit ''$data(arrRules)
	
	
GetRules(&parrRules,pidForm,pidFormField="",pYM="")
	;-------------------------------------------------------------------------------
	; Puts the rules in to an in-memory array.
	; 
	; Called By: CheckRules^WWWFORMD, CheckRules^WWWEVENT
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 28-May-2009	shobby		SR16534: Created
	;-------------------------------------------------------------------------------
	; TODO include new 'core' rules when available.
	new idRule
	
 	if pYM="" set pYM=YM
	if pidFormField="" {
		set pidFormField = ""
		for {
			set pidFormField = $order(^WWW122C2(0,pidForm,pidFormField))
			quit:pidFormField=""
			
			set idRule = ""
			for {
				set idRule = $order(^WWW122C2(0,pidForm,pidFormField,idRule))
				quit:idRule=""
			
				set parrRules(pidFormField,0,-10000+idRule,1) = $get(^WWW122C2(0,pidForm,pidFormField,idRule,1))
			}
		}
		merge parrRules = ^WWW122D2(0,pidForm)
	
	} else {
		set idRule=""
		for {
			set idRule=$order(^WWW122C2(0,pidForm,pidFormField,idRule))
			quit:idRule=""
			
			set parrRules(-10000+idRule,1) = $get(^WWW122C2(0,pidForm,pidFormField,idRule,1))
		}
		merge parrRules = ^WWW122D2(0,pidForm,pidFormField,pYM)
	}
	quit
	
	
TestRule(pobjRule,pstrData,pintPiece,&pblnTested,pintSeparator="~")
	;-------------------------------------------------------------------------------
	; Tests whether a customising rule should be applied, for either a data field or
	; a primary key.
	;
	; Params:
	;	pobjRule:		The rule to be tested.
	;	pstrData:		The data record when testing a data field, or the primary key when
	;					testing a primary key.
	;	pintPiece:		The piece within the pstrData being tested
	;	pblnTested: 	Whether a test has been applied
	;	pintSeparator:	, or ~ based on primary key or data			
	;					
	; Returns:
	;	blnRule:		Whether or not a rule has been found to apply in this case.	
	;		
	; History:
	; 30-Oct-2007 shobby/GM SRBR014636: Class recompiled changing which changes the
	; 							'Property Name' of 'Is' to 'Is1'
	; 02-Aug-2007	GM		SRBR014636: Change WWW122D2Contains to WWW122D2Is and
	; 						WWW122D2DoesNotContain to WWW122D2IsNot  
	; 20-Jul-2007	GRF		SRBR014617: Peer Review correction
	; 19-Jul-2007	shobby	SRBR014617: Created.  Taken out of CheckRules and adapted
	; 							to also work with Primary Keys
	;-------------------------------------------------------------------------------
	new blnRule,strResult,strCommand,strIf
	
	set blnRule = $$$NO
	set strIf   = $piece(pobjRule,Y,pintPiece)
	
	if (pintPiece '= "") {	
		; if Contains
		;if $$$WWW122D2Contains(pobjRule) '= "" {
		
		
		; if Is
		if $$$WWW122D2Is1(pobjRule) '= "" {
			set pblnTested = $$$YES
			if $piece(pstrData,pintSeparator,pintPiece) = $$$WWW122D2Is1(pobjRule) set blnRule = $$$YES

		
		; if Does not Contain
		;} elseif $$$WWW122D2DoesNotcontain(pobjRule) '= "" {
		
		
		; if Is Not
		} elseif $$$WWW122D2IsNot(pobjRule) '= "" {
			set pblnTested = $$$YES
			if $piece(pstrData,pintSeparator,pintPiece) '= $$$WWW122D2IsNot(pobjRule) set blnRule = $$$YES
		
		
		; Execute For Check                                               ; *** EXECUTE ***
		} elseif $$$WWW122D2ExecuteForCheck(pobjRule) '= "" {
			set pblnTested = $$$YES
			set strResult = ""
			set strCommand = "set strResult="_$$$WWW122D2ExecuteForCheck(pobjRule)
			xecute strCommand
			if $piece(pstrData,pintSeparator,pintPiece) = strResult set blnRule = $$$YES	
		
		
		; Is Empty
		} elseif $$$WWW122D2IsEmpty(pobjRule) {
			set pblnTested = $$$YES
			set blnRule = ($piece(pstrData,pintSeparator,pintPiece) = "")
		
		
		; Is not Empty
		} elseif $$$WWW122D2IsNotEmpty(pobjRule) {
			set pblnTested = $$$YES
			set blnRule = ($piece(pstrData,pintSeparator,pintPiece) '= "")
		}
	}
	quit blnRule
	
	
GetYKEY()
	;-------------------------------------------------------------------------------
	; Finds out what YKEY would be if it was available here.  Consider that a record
	; may not be saved at this point
	;
	; Params:
	;
	; Returns: YKEY derived from WWWDATEN keys
	;
	; History:
	; 19-Jul-2007	shobby	SRBR014617: Created
	;-------------------------------------------------------------------------------
	new strYKEY
	
	set strYKEY=""
	if ($get(YUSER)'="") && ($get(YFORM)'="") {
		set strYKEY = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"P",1))
	}
	quit strYKEY
	
	
ReadOnly(pidForm,pidFormField,pstrData,pblnReadOnly)
	;-------------------------------------------------------------------------------
	; Determines whether there are any reasons why this field should be read only.
	; For example if the record is locked by another user.  In any case a field that is 
	; readonly can not be made editable by customisation rules.
	; 
	; Called By: CheckRules^WWWFORMD
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 06-Jun-2012	shobby	SR18028: If form is readonly then control must be readonly.
	; 11-Sep-2007	shobby	SRBR014674: Because the screen is now more dynamic there 
	; 							is a problem with with Status=2 (Edited) because it
	; 							will apply for both saved and unsaved records.
	; 							Additional test is included to force the Status=1
	; 							(New) for the purpose of dynamic rules if there is
	; 							no YKEY defined yet.
	; 16-Aug-2007	shobby	SRBR014674: YBEARB may not be defined.
	; 30-Jul-2007	shobby	SRBR014613: Taken from FIELDS^WWWFORMD
	;-------------------------------------------------------------------------------
	new intHidden,objWWW122,YBEARB
	
	if pblnReadOnly=$$$NO {
		set objWWW122 = $$Get^WWW122(pidForm,pidFormField)
		if $$$NoKey(YKEY) {
			set YBEARB = 1
		} else {
			set YBEARB = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"STATUS",1))
		}
		if YBEARB=8 {			;SR18028
			set intHidden=2		;SR18028
		} else {
			; FIXME : use elseif to reduce checking
			if $$$WWW122UserAccessForChange(objWWW122)=$$$EnumReadOnly                                   set intHidden = 2    ; 5
			if (YBEARB'=1) && (YBEARB'=6) && ($$$WWW122UserAccessForChange(objWWW122)=$$$EnumCreateOnly) set intHidden = 2    ; 3
			if ((YBEARB=1) || (YBEARB=6)) && ($$$WWW122UserAccessForChange(objWWW122)=$$$EnumModifyOnly) set intHidden = 2    ; 4
			if $$$WWW120AuthorizationToModifyData($get(YVOR))=$$$EnumReadOnly                            set intHidden = 2    ; 5
		
			if (($$$WWW122ManualCaptionAfterDataFie(objWWW122)'="") || ($$$WWW122Module2(objWWW122)'=""))      &&
			   ($$^WWWACCESS($$$WWW122ManualCaptionAfterDataFie(objWWW122),$$$WWW122Module2(objWWW122))=$$$YES)   {
			
				if $$$WWW122UserRightForChange(objWWW122)=$$$EnumReadOnly {          ; 5
					set intHidden = 2
				
				} elseif $$$WWW122UserRightForChange(objWWW122)=$$$EnumCreateOnly {  ; 3
					if (YBEARB'=1) && (YBEARB'=6) set intHidden = 2
				
				} elseif $$$WWW122UserRightForChange(objWWW122)=$$$EnumModifyOnly {  ; 4
					if (YBEARB=1) || (YBEARB=6)   set intHidden = 2
				
				} elseif $$$WWW122UserRightForChange(objWWW122)<2 {    ; = $$$EnumCreateModifyDelete
					set intHidden = 0
				}
			}
		
			do IsInactive^WWWFORM9(objWWW122,pstrData,.intHidden)
		}
		if ($get(intHidden)=2) set pblnReadOnly=$$$YES
	}
	quit pblnReadOnly
	
]]></Routine>
</Export>