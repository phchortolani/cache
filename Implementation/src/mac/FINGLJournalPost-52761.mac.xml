<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLJournalPost" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLJournalPost
	 
#include COMSYS
#include FINConst
 
CreateBatch(pidJournal,&pidTran)
	;-------------------------------------------------------------------------------
	; Create and Post a Batch to generate a FINGLTran for FINGLJournal entries
	;
	; Params:
	; pidJournal: The id of the FINGLJournal object
	; pidTran   : The id of the created transaction
	;
	; ByRefs:
	; pidTran
	;
	; Returns:
	; strStatus: $$$OK no errors, anything else are errors
	;
	; History:
	; 13-Jun-2006	RPW		SR14642: Created
	;-------------------------------------------------------------------------------
 
	new strStatus,idCreator,strDetail,strForm,idBatch,idBlock
	new objJournal,blnInterCompany,idHistory
	
	set objJournal=$get(^FINGLJournal(YM,pidJournal,1))
	set blnInterCompany=+$$$FINGLJournalInterCompany(objJournal)
	
	set idCreator     = $$$FINGLJournalCreatedBy(objJournal)
	set strDetail     = "Fin01040"_$$$COMMA_pidJournal  ;General Ledger Journal %1"
	set strForm		  = $$CheckForm^FINUtils($get(YFORM),"FINGLJournal")	; Get the form using YFORM, with validation
	set strStatus     = $$Allocate^FININTBatch(.idBatch,.idBlock,"GLJNL",,$$$FINGLJournalTransactionDate(objJournal),,idCreator,,strForm,pidJournal,strDetail,blnInterCompany)
 
	if $$$ISOK(strStatus) {
		set strStatus=$$AddLines(pidJournal,idBatch,idBlock,blnInterCompany)
		if $$$ISOK(strStatus) {
			set strStatus = $$PostBlock^FININTBatch(idBatch,idBlock)
			if $$$ISOK(strStatus) {
				set strStatus = $$PostBatch^FININTBatch(idBatch,"JNL",.pidTran)
				if $$$ISOK(strStatus) {
					set strStatus=$$CreateHistory^FINGLJournal(pidJournal,pidTran,$horolog,.idHistory)
				}
			}
		}	
	}
	
	quit strStatus
	
AddLines(pidJournal,pidBatch,pidBlock,pblnInterCompany)
	;-------------------------------------------------------------------------------
	; Loop through the journal lines and add them as batch lines
	;
	; Params:
	; pidJournal      : The id of the FINGLJournal
	; pidBatch        : The id of the FININTBatch
	; pidBlock        : The id of the FININTBatchBlock
	; pblnInterCompany: Is this an intercompany journal
	;
	; ByRefs:
	;
	; Returns:
	; strStatus: $$$OK no errors, anything else are errors
	;
	; History:
	; 13-Jun-2006	RPW		SR14642: Created
	;-------------------------------------------------------------------------------
 
	new strStatus,idLine,objLine,curCredit,curDebit,curAmount,idAccount,objParameters
	new idCompany,idCompanyAccount
	
	set strStatus=$$$OK
	
	kill ^CacheTempAccountValid(YUSER,pidJournal)
	
	$$$Order3(^FINGLJournalLine,YM,pidJournal,idLine)
			
		set objLine=$get(^FINGLJournalLine(YM,pidJournal,idLine,1))
		set idAccount=$$$FINGLJournalLineAccount(objLine)
			
		if pblnInterCompany {
			set idCompany=$$$FINGLJournalLineCompany1(objLine)
			set idCompanyAccount=$$$FINGLJournalLineCompanyAccount(objLine)
		} else {
			set idCompany=""
			set idCompanyAccount=""
		}
	
		set curCredit=$$$FINGLJournalLineCredit(objLine)
		set curDebit=$$$FINGLJournalLineDebit(objLine)
		
		set curAmount=$select($$$FCZero(curCredit):curDebit,1:$$$FCSign(curCredit))
		
		if '$data(^CacheTempAccountValid(YUSER,pidJournal,idAccount," ","JNL")) {
			set strStatus=$$ValidateAccount^FINGLAccountTran(idAccount,"JNL","GLJNL")
			set ^CacheTempAccountValid(YUSER,pidJournal,idAccount," ","JNL")=strStatus
		} else {
			set strStatus=$get(^CacheTempAccountValid(YUSER,pidJournal,idAccount," ","JNL"))
		}
		
		if $$$ISOK(strStatus) {
			
			set $piece(objParameters,",",1)=pidJournal
			set $piece(objParameters,",",2)=idLine
			set $piece(objParameters,",",8)=$$$FINGLJournalLineReference(objLine)
												 
			set strStatus=$$AddLine^FININTBatch(pidBatch,pidBlock,idAccount,curAmount,"JNL",objParameters,pidJournal_$$$COMMA_idLine,$$$FINGLJournalLineReference(objLine),,,,,,idCompany,idCompanyAccount)
		}
 
		quit:$$$ISERR(strStatus)
	$$$End
		
	kill ^CacheTempAccountValid(YUSER,pidJournal)
 
	quit strStatus
]]></Routine>
</Export>