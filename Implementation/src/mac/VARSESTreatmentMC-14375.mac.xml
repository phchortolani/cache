<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESTreatmentMC" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESTreatmentMC
	#include COMConst
	#include MEDConst
	#include INConst
	#include WWWConst
	#include FIN
 	#include COMSYS
	#include COMGridEdit31
	#include VARConst
	#include VARSESTreatmentMC
	#include VARLog
 	quit
 
 	
OnBeforeButtonLine(pYKEY)
	if ($length(pYKEY)=0) quit
	if ($$CheckLocation(pYKEY)) {
		set $$$WWW120AuthorizationToModifyData(YVOR) = 5 //readonly
	}
 	quit

CheckLocation(pYKEY)
	;--------------------------------------------------------------------------
	; Checks if the document location is diferent of the current user location
	;--------------------------------------------------------------------------
	new objTMC
	if ($length(pYKEY)=0) quit $$$YES
	set objTMC = $get(^VARSESTreatmentMC(YM,pYKEY,1))

	if ($$$VARSESTreatmentMCSiteLocation(objTMC) '= YLOCATION) quit $$$YES

	quit $$$NO

OnBeforeEditAccess()
	;-------------------------------------------------------------------------------
	; Disable edit access for locations different from the ones set at VARSESParams 
	;
	; Returns:
	;
	; History:
	; 12-Oct-2008	heber	Created, copied from FINAPInv
	;-------------------------------------------------------------------------------
	if '($$$NoKey(YKEY)) {
		$$$VARLOGINFO("Prescrição - Acesso ao registro - YBED="_$get(YBED)_", YUSER="_$get(YUSER)_", YFORM="_$get(YFORM)_", YKEY="_$get(YKEY)_", YFELD="_$get(YFELD))
	}
	quit $$IsFormReadOnly^VARSESFarmaciaEspecializada() 
 
OnAfterDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Remove the associated lines
	;
	; Returns:
	;
	; History:
	; 12-Oct-2008	heber	Created, copied from FINAPInv
	;-------------------------------------------------------------------------------
	do DELETE^COMGridEdit31Interface()
	;set %session.Data("IMID")=""
	quit
 
OnBlurCID(pYFELD)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	do search^VARSESTreatmentMCLine(pYFELD,YKEY)
	quit
 
 
OnBlurSCID(pYFELD)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	do search^VARSESTreatmentMCLine(pYFELD,YKEY)
	quit
 
OnBlurAPAC(pYFELD)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	do search^VARSESTreatmentMCLine(pYFELD,YKEY)
	quit
 
 
OnBlurPrescritor(pYFELD)
	if ($$$VARSESTreatmentMCDoctorId(pYFELD)'="") {
		set Medico = $get(^MEDProvider(YM,$$$VARSESTreatmentMCDoctorId(pYFELD),1))
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 6, $$$MEDProviderName(Medico), "D")
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 10, $$$MEDProviderLicenseNumber(Medico), "D")
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 11, $$$MEDProviderSpeciality(Medico), "D")
	}
	else {
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 6, "", "D")
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 7, "", "D")
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 10,"", "D")
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 11,"", "D")
	}
	
	quit
 
OnBlurPatientId() 
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new objTreatment, strCNS, idPatient, objPatient, strCNSCur
 
	set objTreatment = $$$GetFormData("VARSESTreatmentMC","D")
	set idPatient  = $$$VARSESTreatmentMCPatientId(objTreatment)
	;set strCNSCur  = $$$VARSESTreatmentMCFREE1(objTreatment)
	
	set objTreatment = $$$GetFormData("VARSESTreatmentMC","M")
	set strCNSCur  = $piece(objTreatment,Y,2)
	 
	quit:(idPatient = "")
	
	set objPatient = $get(^MEDPatient(YM,idPatient,1))
	set strCNS = $$$MEDPatientExternalCode(objPatient)
	set strBirthDate = $$checkNascimento^VARSESPatientConsumptionMC(1)
	do PopulateDataField^COMUtils("VARSESTreatmentMC", 5, strBirthDate, "D")
	do PopulateDataField^COMUtils("VARSESTreatmentMC", 4, $$$MEDPatientName(objPatient), "D")
	//do PopulateDataField^COMUtils("VARSESTreatmentMC", 3, "", "D")

	if (strCNSCur '= strCNS) {
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 2, strCNS, "M")
	}
	quit 
	
 
GetCNS() 
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new objTreatment, strCNS, idPatient, objPatient, strCNSCur
 
	set objTreatment = $$$GetFormData("VARSESTreatmentMC","D")
	set idPatient  = $$$VARSESTreatmentMCPatientId(objTreatment)
	quit:(idPatient = "") ""
	
	set objTreatment = $$$GetFormData("VARSESTreatmentMC","M")
	set strCNSCur  = $piece(objTreatment,Y,2)	
	
	set objPatient = $get(^MEDPatient(YM,idPatient,1))
	set strCNS = $$$MEDPatientExternalCode(objPatient)
 
	quit strCNS 
 
 
OnBlurCNS()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new objTreatment, strCNS, idPaciente, objPaciente, strNome, 
	dteNascimento, strNomeMae, idPacienteCur
	set objTreatment = $$$GetFormData("VARSESTreatmentMC","M")
	;set strCNS 			   = $$$VARSESTreatmentMCFREE1(objTreatment)
	set strCNS 			   = $piece(objTreatment,Y,2)
		
	set objTreatment = $$$GetFormData("VARSESTreatmentMC","D")
	set idPacienteCur = $$$VARSESTreatmentMCPatientId(objTreatment)
	
	quit:(strCNS = "")
	
	if '$data(^MEDPatients(YM, 2, strCNS)) {
		$$$Alert($$$Text($listbuild(334019,strCNS)))
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 2, "", "M")
	} else {
		/* Existem mais de um paciente com o mesmo CNS,
	      impossível basear-se nessa informação para carregar os dados complementares.
		set idPaciente  = $order(^MEDPatients(YM, 2, strCNS, ""))
		set objPaciente = $get(^MEDPatient(YM, idPaciente, 1))
		set strNome 	   = $$$MEDPatientName(objPaciente)
		set dteNascimento  = $$^WWWDATE($$$MEDPatientDOB(objPaciente))
		set strNomeMae	   = $$$MEDPatientMothersName(objPaciente)
		
		if (idPaciente '= idPacienteCur) {
			do PopulateDataField^COMUtils("VARSESTreatmentMC", 4, strNome, "D")
			do PopulateDataField^COMUtils("VARSESTreatmentMC", 1, idPaciente, "D")
			;do PopulateDataField^COMUtils("VARSESTreatmentMC", 16, strNomeMae, "D")
			
			write "document.WWW2.YVARSESTreatmentMCD5.value = '"_dteNascimento_"';"
		}
		*/
	}
	//set y = $$validarPaciente^VARSESPatientConsumptionMC()
	//set y =	$$checkDoctorId^VARSESPatientConsumptionMC
 
	quit 
 
 
OnBlurDuration()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new objTreatment, intDuration 
 
	set objTreatment = $$$GetFormData("VARSESTreatmentMC","D")
	set intDuration = $$$VARSESTreatmentMCDuration(objTreatment)
	quit:(intDuration = "")
	
	if ((intDuration > 6) || (intDuration <= 0))  {
		$$$Alert(334012)
		do PopulateDataField^COMUtils("VARSESTreatmentMC", 12, "", "D")
	} 
	quit 
 
 
 		
OnBeforeSave(pYKEY,pYFELD)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new strStatus
	;for i=1:1:999 { hang 1 }
	set Q = $$$QDontSave 	// save not enabled
 
	;if ($$$VARSESTreatmentMCStatus(pYFELD) = $$$TMCEditable) {
		set strStatus=$$$GRIDSave(pYKEY)
		if $$$ISOK(strStatus) {
			set Q = $$$QSave
			do checkMonths^VARSESTreatmentMCLine(pYKEY)
		} else {
			do ReturnError^COMUtilError(strStatus)
		}
	;} else {
		// how display a message (alert) here?	
	;}
	quit
 
OnAfterPrimaryKey(pYKEY,pYFELD="")
    ;-------------------------------------------------------------------------------
    ; 
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Sep-2008		heber			SRBRXXX: Created
    ;-------------------------------------------------------------------------------	
	// update status
	;do UpdateStatusAllTMC() Movido para o ato de processar
	do searchCIDs()
	
	set BEGINDATE = ""
	set ENDDATE = ""
	set STRCNS = ""
	set BIRTHDATE = ""
	set STATUS = ""
 
	quit:((pYKEY="") || (pYKEY="+"))
	
	set STATUS = $$SetStatus(pYKEY)
	;for i=1:1:999 hang 1
 
	set BEGINDATE = $$GetFirstConsumptionDate^VARSESPatientConsumptionMCLog(pYKEY)
	set ENDDATE = $$GetEndTreatmentDate^VARSESPatientConsumptionMCLog(pYKEY)
	set STRCNS = $$GetCNS()
	;set BIRTHDATE = $$checkNascimento^VARSESPatientConsumptionMC(1)
 
	do search^VARSESTreatmentMCLine(pYFELD,YKEY)
		
	quit 
 
OnAfterDataFields(pYKEY,pYFELD)
    ;-------------------------------------------------------------------------------
    ; Code to run when called by the AfterDataField event on the @netManager form.
    ;
    ; History:
    ; 10-Sep-2008		heber			SRBRXXX: Created
    ;-------------------------------------------------------------------------------
	quit:((pYKEY="") || (pYKEY="+"))
	do LoadGrid(pYKEY)
	quit
 
LoadGrid(pidTMC="")
    ;-------------------------------------------------------------------------------
    ; Code for Grid Edit 
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Sep-2008		heber			SRBRXXX: Created
    ;-------------------------------------------------------------------------------
 	new YFORM,YKEY,YAUSWAHL,YFELD
	
	set YFORM="VARSESTreatmentMCLine"
	set YFELD=""
	set YKEY=$get(pidTMC)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = 1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 290
	set $$$COMGridEditParameterGridName(YAUSWAHL)      = YFORM
	;set $$$COMGridEditParameterEnabled(YAUSWAHL)       = '($$$WWW120AuthorizationToModifyData(YVOR)=5)
	;if ($$$VARSESTreatmentMCStatus(pYFELD) '= $$$TMCEditable) {
	;	set $$$COMGridEditParameterEnabled(YAUSWAHL)=$$$NO	
	;} else {
		set $$$COMGridEditParameterEnabled(YAUSWAHL)=$$$OK	
	;}
	set $$$COMGridEditParameterContainer(YAUSWAHL)     = "VARSESTreatmentMC"
	
	set $$$COMGridEditParameterExpandLines(YAUSWAHL) = 1                    
	set $$$COMGridEditParameterLinks(YAUSWAHL)       = "VARSESTreatmentMCLine1"    
	 
	do ^COMGridEdit31
	
	quit
 
	
GetTreatmentsMC(pidPatient)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new lstTreatment, idTreatment, idxPatient, strStatus, objTMC, strLocation, strDate
 	
	set idTreatment = ""
	set lstTreatment = ""
	set idxPatient = $$$Index(pidPatient)
	for {
		set idTreatment = $order(^VARSESTreatmentMCs(YM,1,idxPatient,idTreatment))
		quit:(idTreatment = "")
		set strStatus = $$StatusTreatmentMC(idTreatment)	
	
		set objTMC = $get(^VARSESTreatmentMC(YM,idTreatment,1))
		set strLocation = $$$VARSESTreatmentMCSiteLocation(objTMC)
 
		; 1
		set strDate = $$$VARSESTreatmentMCDate1(objTMC)
 
		if (lstTreatment = "") {
			set lstTreatment = $LISTBUILD(idTreatment_Y_strStatus_Y_strLocation_Y_strDate)
		} else {	
			set lstTreatment = lstTreatment _ $LISTBUILD(idTreatment_Y_strStatus_Y_strLocation_Y_strDate)
		}	
	
	}
	quit lstTreatment
 
GetFirstTreatmentMC(pidPatient)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new lst,idTreatment
	
	set lst = $$GetActiveTreatmentsMC(pidPatient)
	quit:(lst = "") ""
	set idTreatment = $listget(lst,1)
	quit idTreatment
 
GetActiveTreatmentsMC(pidPatient)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
 	new lstTreatmentsOk,lstTreatments, intStatus, intLLength, loop, 
 		idTreatment, strTreatment, strLocation, strDate
 
	set lstTreatments = $$GetTreatmentsMC(pidPatient)
	set intLLength = $LISTLENGTH(lstTreatments)
	quit:(intLLength = 0) ""
 	
 	set lstTreatmentsOk = ""
 	for loop=1:1:intLLength {
	 	set strTreatment = $list(lstTreatments,loop)
		set idTreatment = $piece(strTreatment,Y,1)
		set intStatus = $piece(strTreatment,Y,2)
		
		set strLocation = $piece(strTreatment,Y,3)
		;1
		set strDate = $piece(strTreatment,Y,4)
		
		
		if ((intStatus = $$$TMCReady) || (intStatus = $$$TMCRunning)) {
			if (lstTreatmentsOk = "") {
				;set lstTreatmentsOk = $LISTBUILD(idTreatment _ Y _ intStatus_Y_strLocation)
				set lstTreatmentsOk = $LISTBUILD(idTreatment _ Y _ intStatus_Y_strLocation_Y_strDate)
				
			} else {
				;set lstTreatmentsOk = lstTreatmentsOk _ $LISTBUILD(idTreatment _ Y _ intStatus_Y_strLocation)
				set lstTreatmentsOk = lstTreatmentsOk _ $LISTBUILD(idTreatment _ Y _ intStatus_Y_strLocation_Y_strDate)
			}
		}
		
 	}
	quit lstTreatmentsOk
 
IsTreatmentNotEditable(pidTreatment)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new objTMC
	
	quit:(pidTreatment = "+") 0
	set objTMC = $get(^VARSESTreatmentMC(YM,pidTreatment,1))
	quit ($$$VARSESTreatmentMCStatus(objTMC) '= $$$TMCEditable)
 
 	;($$CheckStatus^VARSESTreatmentMC(YFELD)=1)
CheckStatus(pYFELD)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	if (($$$VARSESTreatmentMCStatus(pYFELD) = $$$TMCEditable) ||
		($$$VARSESTreatmentMCStatus(pYFELD) = $$$TMCCancelled)) {
			quit 0
	} 
	quit 1
	
 
StatusTreatmentsMC(pidPatient)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
 	new lstTreatments, intStatus, intLLength, loop, arrStatus, intTotal, idTreatment
	
	
	;for i=1:1:999 hang 1 
	set lstTreatments = $$GetTreatmentsMC(pidPatient)
	set intLLength = $LISTLENGTH(lstTreatments)
	quit:(intLLength = 0) ""
 	
 	for loop=0:1:$$$TMCNumberOfStatus set arrStatus(loop) = 0
 	
 	for loop=1:1:intLLength {
	 	set strTreatment = $listget(lstTreatments,loop)
	 	quit:(strTreatment = "")
	 	
	 	set idTreatment = $piece(strTreatment,Y,1)
		set intStatus = $piece(strTreatment,Y,2)
		
		set arrStatus(intStatus) = arrStatus(intStatus) + 1
 	}
 	set intTotal = 0
 	for loop=0:1:$$$TMCNumberOfStatus set intTotal = intTotal + arrStatus(loop)
 	
 	// at least one treatment running
 	quit:(arrStatus($$$TMCRunning) > 0) $$$TMCRunning
	// at least one treatment ready
	quit:(arrStatus($$$TMCReady) > 0) $$$TMCReady
 	// all treatments finished
	quit:(arrStatus($$$TMCFinished) =  intTotal) $$$TMCFinished
	// all treatments editable
	quit:(arrStatus($$$TMCEditable) =  intTotal) $$$TMCEditable
	// all treatements cancelled
	quit:(arrStatus($$$TMCCancelled) =  intTotal) $$$TMCCancelled
	// treatments on different non-operational state
	quit $$$TMCUnFinished
	
SetStatus(pidTreatment)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new strStatus
	;for i=1:1:999 hang 1
	set strStatus = $$StatusTreatmentMC(pidTreatment)
	;Q strStatus
	quit $piece($get(^INPARA(YM,"VARSESTREATMENTSTATUS",SPRACHE,strStatus,1)),Y,1)
	
StatusTreatmentMC(pidTreatment)	
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	$$$VAR
	
	new loop, idTreatmentLine, intStatus, intTotal, arrStatusLine, objTreatment
 	new blnHasAlreadyStarted 
 	set blnHasAlreadyStarted = $$$NO
 	
	quit:((pidTreatment = "+") || (pidTreatment = "")) $$$TMCEditable
	
	set objTreatment = $get(^VARSESTreatmentMC(YM,pidTreatment,1))	
	
	// editable and cancelled are status manually defined, they are not subjected to process conditions
	quit:(($$$VARSESTreatmentMCStatus(objTreatment) = $$$TMCEditable) || 
	      ($$$VARSESTreatmentMCStatus(objTreatment) = $$$TMCCancelled)) $$$VARSESTreatmentMCStatus(objTreatment)
	
	for loop=0:1:$$$TMCNumberOfStatus set arrStatusLine(loop) = 0
 
	set idTreatmentLine = ""
	for {
		set idTreatmentLine = $order(^VARSESTreatmentMCLine(YM,pidTreatment,idTreatmentLine))
		quit:(idTreatmentLine = "")
		set intStatus = $$StatusTreatmentMCLine^VARSESTreatmentMCLine(pidTreatment,idTreatmentLine)
		// 12/Aug/2010
		if (intStatus = $$$TMCCancelled) {
			if ( $$GetQtyConsumed^VARSESTreatmentMCLine(pidTreatment,idTreatmentLine) > 0 ) {
				set blnHasAlreadyStarted = $$$OK
			}
		}
		//
		set arrStatusLine(intStatus) = arrStatusLine(intStatus) + 1
	}
 	set intTotal = 0
 	for loop=0:1:$$$TMCNumberOfStatus set intTotal = intTotal + arrStatusLine(loop)
 	
 	// if at least one line is running - treatment is running
 	quit:(arrStatusLine($$$TMCRunning) > 0) $$$TMCRunning
 	// 12/Aug/2010
 	quit:((arrStatusLine($$$TMCReady) >  0) && (arrStatusLine($$$TMCFinished) > 0 )) $$$TMCRunning
 	quit:((arrStatusLine($$$TMCReady) >  0) && (arrStatusLine($$$TMCCancelled) > 0 ) && (blnHasAlreadyStarted = $$$OK)) $$$TMCRunning
	//
 	quit:(arrStatusLine($$$TMCReady) >  0) $$$TMCReady
 	quit:(arrStatusLine($$$TMCFinished) =  intTotal) $$$TMCFinished
 	quit:(arrStatusLine($$$TMCCancelled) =  intTotal) $$$TMCCancelled
	// when multiple treatments on non-operational state
	quit $$$TMCUnFinished
 
CheckForDisabledCancel(pidTreatment)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	set Q=1 // disabled
	set strStatus =  $$StatusTreatmentMC(pidTreatment)
	if (strStatus = $$$TMCReady) || (strStatus = $$$TMCRunning) {
		set Q=0 // enabled
	}
	if ($length(pidTreatment) > 0) if ($$CheckLocation(pidTreatment)) set Q = 1_"Somente usuários do local do documento estão autorizados a realizar essa operação."
	quit
 
IsItemAlreadyUsed(pidTreatment,pidItem,pidPatient,&pstrTMC)
    /*-------------------------------------------------------------------------------
    ; 
    ;	
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new blnRes, loop, idTMC
	
	set blnRes = $$$NO
	///ok5
	set pstrTMC = $$GetTMCWhereIsUsedItem^VARSESTreatmentMCLine(pidItem,pidPatient)
	if (pstrTMC '="") {
		for loop=1:1 {
			set idTMC = $piece(strTMC,YKOMMA,loop)
			quit:(idTMC = "")
			continue:(idTMC = pidTreatment)
			set blnRes = $$$OK	
			quit
		}
	}
	quit blnRes
 
CheckForDisabledTurnReady(pYKEY,pYFELD)
    /*-------------------------------------------------------------------------------
    ; TurnReady button is enabled if current editable treatment is allowed to become ready.
    ; For a treatment become ready is necessary:
    ; 	Have at least all lines with at least one line 1 entry
    ; 	and default if both conditions below are false.
    ;	Default: Check 	if is there is already a running or ready treatment for the patient, if so, disables
    ; 	
    ; 	If OneRunnningTreatment() or ManyRunningTreatment():	true -> enables
    ; 															false -> default
    ;
    ;	
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
	new idLine, idxLine, objLine1, objLine, fltQty, strTreatmentsStatus,pidItem, idLine1
	//ok17
	new strTxt, blnTurn, blnAlready, strTMC
 
	set strTxt = ""
	set STRALERT = ""
	set YOPTION1 = 0
	;for i=1:1:999 hang 1
	set Q=1 // disabled
	quit:($$$VARSESTreatmentMCStatus(pYFELD) '= $$$TMCEditable)
 
	set blnTurn = $$$NO
	set idLine = ""
	for {
		set idLine = $order(^VARSESTreatmentMCLine(YM,pYKEY,idLine))
		quit:(idLine = "")
		
		set objLine = $get(^VARSESTreatmentMCLine(YM,pYKEY,idLine,1))
		continue:($$$VARSESTreatmentMCLineCancel(objLine))
		
		// check if item is of proper type		
		set pidItem = $$$VARSESTreatmentMCLineMedicine(objLine)
		
		;continue:'($$IsProperItemType^VARSESTreatmentMCLine(pidItem,pYFELD)) 
		if '($$IsProperItemType^VARSESTreatmentMCLine(pidItem,pYFELD)) {
			set strTxt = strTxt _ $$$Text($listbuild(334031,idLine)) _ $CHAR(10) _ $CHAR(13)
			continue	
		}
 
		set strTMC = ""
		
		if ($$IsItemAlreadyUsed(pYKEY,pidItem,$$$VARSESTreatmentMCPatientId(pYFELD),.strTMC)) {
			set strTxt = strTxt _ $$$Text($listbuild(334028,pidItem,strTMC))
			continue
		}
		
		set idLine1 = ""
		set idxLine = $$$Index(idLine)
 
		if ($order(^VARSESTreatmentMCLine1s(YM,1,idxLine,pYKEY,idLine1)) = "") {
			set strTxt = strTxt _ $$$Text($listbuild(334032,idLine)) _ $CHAR(10) _ $CHAR(13)
			continue	
		}
		set blnAlready = $$$NO
		for {
			set idLine1 = $order(^VARSESTreatmentMCLine1s(YM,1,idxLine,pYKEY,idLine1))
			quit:(idLine1 = "")
			
			set objLine1 = $get(^VARSESTreatmentMCLine1(YM,pYKEY,idLine1,1))
			set fltQty = $$$VARSESTreatmentMCLine1QuantityperMonth(objLine1)
			if (fltQty > 0) {
				set blnTurn = $$$OK			
			} else {
				if (blnAlready = $$$NO) {
					set strTxt = strTxt _ $$$Text($listbuild(334033,idLine)) _ $CHAR(10) _ $CHAR(13)
					set blnAlready = $$$YES
				}
			}
		}
	}
 
	if (strTxt '= "") {
		set YOPTION1 = 1
		set STRALERT = strTxt
		quit	// problems were found, show it
	} 
	// no errors but no good line
	quit:(blnTurn = $$$NO) 
	
 	set Q=1
	// if one Running - enables
	if ($$OneRunningTreatment^VARSESTreatmentMCUtil() || $$ManyRunningTreatment^VARSESTreatmentMCUtil()) {
		set Q=0 // enabled since one/many running enabled
	} else {
		// check if is there already any running or ready
		set strTreatmentsStatus = $$StatusTreatmentsMC($$$VARSESTreatmentMCPatientId(pYFELD) )
		if ((strTreatmentsStatus '= $$$TMCReady) && (strTreatmentsStatus '= $$$TMCRunning)) {
			set Q=0 // enabled if no treatment is ready nor running
		}
	} 
 
	if (Q = 1) {
		set YOPTION1 = 1
		set STRALERT = $$$Text(334034)
	}
	if ($length(pYKEY) > 0) if ($$CheckLocation(pYKEY)) set Q = 1_"Somente usuários do local do documento estão autorizados a realizar essa operação."
	
	quit
 
 
CheckForDisabledTurnEditable(pYKEY,pYFELD)
    /*-------------------------------------------------------------------------------
    ; TurnEditable button is enabled if current treatment is ready.
    ;	
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
	new idTMCLine, strTreatmentsStatus
	
	set Q=1 // disabled
	quit:($$$VARSESTreatmentMCStatus(pYFELD) '= $$$TMCReady)
	set strStatus =  $$StatusTreatmentMC(pYKEY)
	if (strStatus = $$$TMCReady) {
		set Q=0 // enabled
	}
	if ($length(pYKEY) > 0) if ($$CheckLocation(pYKEY)) set Q = 1_"Somente usuários do local do documento estão autorizados a realizar essa operação."
	quit
 
 
UpdateStatusAllTMC()
	;-------------------------------------------------------------------------------
	; called after
	;
	; Params:	
	; 
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 02-Dec-2008	heber		SRBRXXX: Created
	;-------------------------------------------------------------------------------
	$$$VAR
	
	new idTMC, user
 
	set idTMC = ""
	
	for {
		set idTMC = $order(^VARSESTreatmentMC(YM,idTMC))
		quit:(idTMC = "")
		
		set user = ""
		
		set objTMC = $get(^VARSESTreatmentMC(YM,idTMC,1))
		set user = $$$VARSESTreatmentMCChangedBy(objTMC)
		
		if (user = ""){
			set user = $$$VARSESTreatmentMCCreatedBy(objTMC)
		}
		
		if (user '= ""){
			set YBED = user
		}
		
		do UpdateStatusTMC(idTMC)
	}
	
	quit
 
UpdateStatusTMC(pidTMC)
	;-------------------------------------------------------------------------------
	; called after
	;
	; Params:	
	; 
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 02-Dec-2008	heber		SRBRXXX: Created
	;------------------------------------------------------------------------------- 	
	// update status
	new strStatus, strStatus1, objTMC
 
	
	set objTMC = $get(^VARSESTreatmentMC(YM,pidTMC,1))
	set strStatus1 = $$$VARSESTreatmentMCStatus(objTMC)
	// no update if already on final states: Finished, Cancelled
	quit:((strStatus1 = $$$TMCCancelled) || (strStatus1 = $$$TMCFinished))
 
	// get dynamic status
	set strStatus = $$StatusTreatmentMC(pidTMC)
	
	if (strStatus1 '= strStatus) {
		do ChangeStatusNoForm(pidTMC,strStatus)
		do UpdateDaten(pidTMC,strStatus)
	}
	quit 
 
UpdateDaten(pidTMC,pstrStatus)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	// update status
	new objTMC, intCount
 
	set intCount = ""
	for {
		set intCount = $order(^WWWDATEN(0,$p($horolog,",",1),YUSER,"VARSESTreatmentMC","P",intCount))
		quit:(intCount = "")
		continue:($get(^WWWDATEN(0,$p($horolog,",",1),YUSER,"VARSESTreatmentMC","P",intCount)) '= pidTMC)
		
		set objTMC = ^WWWDATEN(0,$p($horolog,",",1),YUSER,"VARSESTreatmentMC","D",intCount)
		set $$$VARSESTreatmentMCStatus(objTMC) = pstrStatus
		set ^WWWDATEN(0,$p($horolog,",",1),YUSER,"VARSESTreatmentMC","D",intCount) = objTMC
	}
 
	quit
	
ChangeStatusNoForm(pidTreatment,pstrNewStatus)
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 03-Dec-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	// update status
	new strStatus
	
	set strStatus = $$Transaction^COMTransaction("SaveStatusTxn^VARSESTreatmentMC("""_pidTreatment_""","""_pstrNewStatus_""")")
	quit strStatus
	
SaveStatusTxn(pidTreatment,pstrNewStatus)
	new strStatus, objTMC

	set objTMC = $get(^VARSESTreatmentMC(YM,pidTreatment,1))
	set $$$VARSESTreatmentMCStatus(objTMC) = pstrNewStatus
	
	set strStatus = $$$Save("VARSESTreatmentMC",pidTreatment,objTMC,1)

	quit strStatus
 
ChangeStatus(pidTreatment,pstrNewStatus)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	// update status
	do ChangeStatusNoForm(pidTreatment,pstrNewStatus)
	do GoToForm^COMUtilForm("VARSESTreatmentMC", pidTreatment)
	quit
 
TurnReady(pidTreatment)
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 03-Dec-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
 	new objTMC
	do ChangeStatus(pidTreatment,$$$TMCReady)
 
	set objTMC = $get(^VARSESTreatmentMC(YM,pidTreatment,1))
	do UpdatePatientListActiveTreatments($$$VARSESTreatmentMCPatientId(objTMC))
	;do UpdateStatusAllTMC()
	quit
 
TurnEditable(pidTreatment)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	do ChangeStatus(pidTreatment,$$$TMCEditable)
	quit
 
 
 
Cancel(pidTreatment)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
    $$$VARLOGINFO("Cancelamento de Prescrição - FASE 1 - YBED="_$get(YBED)_", YUSER="_$get(YUSER)_", YFORM="_$get(YFORM)_", YKEY="_$get(YKEY)_", WWWDATEN="_^WWWDATEN(YM,+$horolog,YUSER,"VARSESTreatmentMC","D",1))
	do ChangeStatus(pidTreatment,$$$TMCCancelled)
    $$$VARLOGINFO("Cancelamento de Prescrição - FASE 2 - YBED="_$get(YBED)_", YUSER="_$get(YUSER)_", YFORM="_$get(YFORM)_", YKEY="_$get(YKEY)_", WWWDATEN="_^WWWDATEN(YM,+$horolog,YUSER,"VARSESTreatmentMC","D",1))
	quit 

BuildPatientListActiveTreatments()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Feb-2014	shobby		SESDF-884: Rewrite for improved performance.
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new idTreatment,objTreatment,idxPatient,strLocation,strDate,objPatient,intStatus,idPatient
	
	kill ^COMTempList(YM,YUSER,"VARSESTreatmentMC")
	set idTreatment="" for { set idTreatment=$order(^VARSESTreatmentMC(YM,idTreatment)) quit:idTreatment=""
		set objTreatment=$get(^VARSESTreatmentMC(YM,idTreatment,1))
		if (+$$$VARSESTreatmentMCStatus(objTreatment) > 2) {
			continue
		}
		set intStatus = $$$VARSESTreatmentMCStatus(objTreatment)

		if (intStatus'=$$$TMCReady)&&(intStatus'=$$$TMCRunning) {
			set intStatus = $$StatusTreatmentMC(idTreatment)
		}
		if (intStatus=$$$TMCReady)||(intStatus=$$$TMCRunning) {
			if $$IsTreatmentMonthlyConsumptionAvailable^VARSESPatientConsumptionMCLog(idTreatment) {
				set idPatient = $$$VARSESTreatmentMCPatientId(objTreatment)
				set objPatient = $get(^MEDPatient(YM,idPatient,1))
				set ^COMTempList(YM,YUSER,"VARSESTreatmentMC",idPatient,1) = $$$MEDPatientName(objPatient)
			}
		}
	}
	
	quit
	
	/*
BuildPatientListActiveTreatments()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;------------------------------------------------------------------------------- 
  	new lstTreatment, idxPatient, objPatient
 	
 	;for i=1:1:999 hang 1
	kill ^COMTempList(YM,YUSER,"VARSESTreatmentMC")
	
	set lstTreatment = ""
	set idxPatient = ""
	for {
		set idxPatient = $order(^VARSESTreatmentMCs(YM,1,idxPatient))
		quit:(idxPatient = "")
		set lstTreatment = $$GetActiveTreatmentsMC(idxPatient)
 
		// leave only treatments ready for consumption this month
		set lstTreatment = $$GetTreatmentsForThisMonth(lstTreatment)	
		// if really ready add the patient to the comptemplist
 
		if ($listlength(lstTreatment) > 0) {
			set objPatient = $get(^MEDPat]]><![CDATA[ient(YM,idxPatient,1))
			set ^COMTempList(YM,YUSER,"VARSESTreatmentMC",idxPatient,1) = $$$MEDPatientName(objPatient)
		}
		
	}
	quit
	*/
 
UpdatePatientListActiveTreatments(pidPatient)
    /*-------------------------------------------------------------------------------
    ; Include the patientId on the list of active patients available on
    ; opened dispensation forms (VARSESPatientConsumptionMC). This procedure is called
    ; when a Treatment is turned ready.
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
   	new strYUSER, objPatient
 
 	set strYUSER = ""
 	for {
	 	set strYUSER = $order(^WWWDATEN(YM,+$horolog,strYUSER))
	 	quit:(strYUSER = "")
		// this user has no dispensation form open - no need
		continue:($data(^WWWDATEN(YM,+$horolog,strYUSER,"RECORDEXISTS","VARSESPatientConsumptionMC",1)) = 0)
 
		//already has the patient - no need to update
		continue:($data(^COMTempList(YM,strYUSER,"VARSESTreatmentMC",pidPatient,1)) '= 0)
 
		set objPatient = $get(^MEDPatient(YM,pidPatient,1))
		set ^COMTempList(YM,strYUSER,"VARSESTreatmentMC",pidPatient,1) = $$$MEDPatientName(objPatient)
	}
	quit 
	
LstActTrtForPatient()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
  	new lstTreatment
  	
	set strFormData = $$$GetFormData(YFORM,"D")
	set pidPatient = $piece(strFormData, Y, 23)
	;for i=1:1:100 hang 1
	kill ^COMTempList(YM,YUSER,"VARSESTreatmentActTrtForPat")
	
	// get all active treatments
 	set lstTreatment = $$GetActiveTreatmentsMC(pidPatient)
 	// leave only treatments ready for consumption this month
 	set lstTreatment = $$GetTreatmentsForThisMonth(lstTreatment)
 	
 	// no need to limit to the same location anuymore
 	;set lstTreatment = $$GetTreatmentsForThisLocation(lstTreatment)
 	
 	if ($$ManyRunningTreatment^VARSESTreatmentMCUtil()) {
		// do nothing...it will include all
 	} 
 	elseif ($$OneRunningTreatment^VARSESTreatmentMCUtil()) {
	 	// show only one running treatment, if none, show all ready
		set lstTreatment =  $$PickOneRunningOrAllReady(lstTreatment)
	 	
 	} else {
	 	// default behavoir: show only one running(1st), if none, show one ready (1st)
	 	set lstTreatment =  $$PickOneRunningOrOneReady(lstTreatment)
 	}
 	do BuildCOMTempList(lstTreatment, pidPatient)
 	
	quit $$$OK
		
PickOneRunningOrAllReady(plstTreatment)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new loop, strTreatment, idTreatment, intStatus, lstTreatment
 
	set lstTreatment = ""
 	for loop=1:1:$listlength(plstTreatment) {
		set strTreatment = $listget(plstTreatment,loop)
		quit:(strTreatment = "")
		
		set idTreatment = $piece(strTreatment,Y,1)
		set intStatus = $piece(strTreatment,Y,2)
		
		if (intStatus = $$$TMCReady) {
			if (lstTreatment = "") {
				set lstTreatment = $listbuild(idTreatment _ Y _ intStatus)
			} else {
				set lstTreatment = lstTreatment _ $listbuild(idTreatment _ Y _ intStatus)
			}
		} 
		elseif (intStatus = $$$TMCRunning) {
			set lstTreatment = $listbuild(idTreatment _ Y _ intStatus)
			quit 	// end loop - a running was found
		}
	
	}
	quit lstTreatment		
		
 
PickOneRunningOrOneReady(plstTreatment)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new loop, strTreatment, idTreatment, intStatus, lstTreatment
 
 	set lstTreatment = ""
 	for loop=1:1:$listlength(plstTreatment) {
		set strTreatment = $listget(plstTreatment,loop)
		quit:(strTreatment = "")
		set idTreatment = $piece(strTreatment,Y,1)
		set intStatus = $piece(strTreatment,Y,2)
		
		if (intStatus = $$$TMCReady) {
			set lstTreatment = $listbuild(idTreatment _ Y _ intStatus)
		} 
		elseif (intStatus = $$$TMCRunning) {
			set lstTreatment = $listbuild(idTreatment _ Y _ intStatus)
			quit 	// end loop - a running was found
		}
	}
	quit lstTreatment
 
BuildCOMTempList(plstTreatment, pidPatient)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new loop, idTreatment, strTreatment, intStatus, strDate
	
	for loop=1:1:$listlength(plstTreatment) {
		set strTreatment = $listget(plstTreatment,loop)
		quit:(strTreatment = "")
		
		set idTreatment = $piece(strTreatment,Y,1)
		set intStatus = $piece(strTreatment,Y,2)
		; 1
		set strDate = $piece(strTreatment,Y,4)
				
		;set ^COMTempList(YM,YUSER,"VARSESTreatmentActTrtForPat",pidPatient,idTreatment,1) = idTreatment
		set ^COMTempList(YM,YUSER,"VARSESTreatmentActTrtForPat",pidPatient,idTreatment,1) = $ZDATE(strDate,4)
	}
	quit
 
	
GetTreatmentsForThisMonth(plstTreatment)	
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new idTreatment, lstTreatment, strTreatment, intStatus, strLocation, strDate
 
	set lstTreatment = ""
	set idTreatment = ""
	for loop=1:1:$listlength(plstTreatment) {
		set strTreatment = $listget(plstTreatment,loop)
		continue:(strTreatment = "")
		
		set idTreatment = $piece(strTreatment,Y,1)
		set intStatus = $piece(strTreatment,Y,2)
		set strLocation = $piece(strTreatment,Y,3)
		; 1
		set strDate = $piece(strTreatment,Y,4)
		
		if ($$IsTreatmentMonthlyConsumptionAvailable^VARSESPatientConsumptionMCLog(idTreatment)) {
			if (lstTreatment = "") {
				;set lstTreatment = $listbuild(idTreatment _ Y _ intStatus_Y_strLocation)
				set lstTreatment = $listbuild(idTreatment _ Y _ intStatus_Y_strLocation_Y_strDate)
			} else {
				;set lstTreatment = lstTreatment _ $listbuild(idTreatment _ Y _ intStatus_Y_strLocation)
				set lstTreatment = lstTreatment _ $listbuild(idTreatment _ Y _ intStatus_Y_strLocation_Y_strDate)
			}
		}
 
	}
	quit lstTreatment
 
 
GetTreatmentsForThisLocation(plstTreatment)	
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new idTreatment, lstTreatment, strTreatment, intStatus
	new strLocation
	
	set lstTreatment = ""
	set idTreatment = ""
	for loop=1:1:$listlength(plstTreatment) {
		set strTreatment = $listget(plstTreatment,loop)
		continue:(strTreatment = "")
		
		set idTreatment = $piece(strTreatment,Y,1)
		set intStatus = $piece(strTreatment,Y,2)
		;;;
		set strLocation = $piece(strTreatment,Y,3)
		
		if (strLocation = YLOCATION) {
			if (lstTreatment = "") {
				set lstTreatment = $listbuild(idTreatment _ Y _ intStatus_Y_strLocation)
			} else {
				set lstTreatment = lstTreatment _ $listbuild(idTreatment _ Y _ intStatus_Y_strLocation)
			}
		}
	}
	quit lstTreatment
 
 
CheckCIDDuplicate(pYFELD)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new strMainCID, strSecondaryCID, strCID, strResult
 
	set strMainCID = $$$VARSESTreatmentMCMainCID(pYFELD)
	set strSecondaryCID = $$$VARSESTreatmentMCSecondaryCID(pYFELD)
	set strResult = $$$NO
	for loop=1:1 {
		set strCID = $piece(strSecondaryCID,";",loop)
		quit:(strCID = "")
		if (strCID = strMainCID) { 
			set strResult = $$$YES
			quit
		}
	}
	quit strResult
	
GetTotalTMCwithCID(pSearchWord="")
    /*-------------------------------------------------------------------------------
    ; Called from Report
    ; Returns total number of prescriptions associated with CID, note that
    ; one should not include prescriptions which are Editable. Do not include CID
    ; if APAC is defined
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
	new idTMC, idxCID, strStatus, intCounter, objTMC
	
	quit:(pSearchWord = "") "a"
	
	do ^WWWVAR
	
	set idxCID = $$$Index(pSearchWord)
	set intCounter = 0
	for loop=2:1:3 {
		set idTMC = ""
		for {
			set idTMC = $order(^VARSESTreatmentMCs(YM,loop,idxCID,idTMC))
			quit:(idTMC = "")
			
			set objTMC = $get(^VARSESTreatmentMC(YM,idTMC,1))
			set strStatus = $$StatusTreatmentMC(idTMC)
			if (strStatus '= $$$TMCEditable) {
				if ($$$VARSESTreatmentMCAPACNumber(objTMC) = "") {
					set intCounter = intCounter + 1
				}
			}
		}
	}
	quit intCounter
 
GetDate()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	quit $ZD($horolog)
 
CheckCID2(pYM,pCID,pidItem)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	quit ($data(^VARSESCIDMedicamentos(pYM,1,pCID,pidItem)) > 0)
	
CheckCID(pCID,pidItem)
    /*-------------------------------------------------------------------------------
    ; Called from Report
    ; Calculates average dispensation per item and CID
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
	new fltQty, intCounter, fltTotalQty, intDuration, idxCID, loop, idTMC,
		strStatus, idTMCL, objTMCL
	
	do ^WWWVAR
	
	set fltQty = 0
	set intCounter = 0
	set fltTotalQty = 0
	set intDuration = 0
	
	set idxCID = $$$Index(pCID)
	for loop=2:1:3 {	
		set idTMC = ""
		for {
			set idTMC = $order(^VARSESTreatmentMCs(YM,loop,idxCID,idTMC))
			quit:(idTMC="")
			
			set strStatus = $$StatusTreatmentMC(idTMC)
			continue:((strStatus = $$$TMCEditable) || (strStatus = $$$TMCCancelled))
			
			set idTMCL = "" 
			for {
				set idTMCL = $order(^VARSESTreatmentMCLine(YM,idTMC,idTMCL))
				quit:(idTMCL = "")
				set strStatus = $$StatusTreatmentMCLine^VARSESTreatmentMCLine(idTMC,idTMCL)
				continue:((strStatus = $$$TMCEditable) || (strStatus = $$$TMCCancelled))
				
				set objTMCL = $get(^VARSESTreatmentMCLine(YM,idTMC,idTMCL,1))
				if ($$$VARSESTreatmentMCLineMedicine(objTMCL) = pidItem) {
					// get quantities defined for this item
					set fltQty = $$GetTotalLineQty^VARSESTreatmentMCLine1(idTMC,idTMCL)
					set intDuration = $$GetLineDuration^VARSESTreatmentMCLine1(idTMC, idTMCL)
					set fltQty = fltQty / intDuration
					
					set fltTotalQty = fltTotalQty + fltQty
					set intCounter = intCounter + 1
				}
				
			}
		}
	}
	if intCounter > 0 {
		set fltTotalQty = fltTotalQty / intCounter
	}
	quit fltTotalQty
	
GetSiglaUnit(pidItem,pstrLang)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new objItem, idUnit, strDesc
	do ^WWWVAR
 
	set strDesc = ""
 
	set objItem = $get(^INART(YM,pidItem,1))
	
	set idUnit = $$$INARTUnitofMeasure(objItem)
	quit:(idUnit = "") strDesc
	set strDesc = $piece($get(^WWW101(0,"EINHEIT",pstrLang,idUnit,1)),"-",1)
	quit strDesc
	
CanViewReport()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
 	new strStatus
 	
 	set YQ = 1
 	set strStatus = $$StatusTreatmentMC(YKEY)
 	if (YKEY) {
		if ((strStatus '= $$$TMCEditable) && (strStatus '= $$$TMCCancelled)) {
			set YQ = $$$YQEnable
		} 	
 	} 
	quit
	
searchCIDs()
 
	new CIDrs, CID, descricao
			  
	set sql = " SELECT DISTINCT ICD.ICDCode, ICD.Description FROM VARSESCIDMedicamento MED, "_
			  " MEDICD ICD "_
			  " WHERE ICD.Company = MED.Company "_
			  " AND MED.Company = 0 "_
			  " AND ICD.ICDCode = MED.CID "
	
	set CIDrs = ##class(%Library.ResultSet).%New()
	do CIDrs.Prepare(sql)
	do CIDrs.Execute()
	
	kill ^COMTempList(YM, "PrescriptionCID")
	while CIDrs.Next() {
		set CID 	  = CIDrs.Data("ICDCode")
		set descricao = CIDrs.Data("Description")
		
		set ^COMTempList(YM, "PrescriptionCID", CID, 1) = descricao
	}
	 
	quit
	
isCIDMandatory(pobjTreatment)
 
	new APAC, strDistributionType
 
	set APAC 		  = $$$VARSESTreatmentMCAPACNumber(pobjTreatment)
	
	quit:(APAC '= "") $$$NO
	quit:($$IsLocationInNoCID^VARSESTreatmentMC(YLOCATION)) $$$NO
	
	;set strDistributionType = $$$VARSESTreatmentMCDistributionType(pobjTreatment)
 
	quit $$$OK	
	
getDuracaoMeses(pidPrescricao)
 
	new duracaoMeses
 
	&sql(select MAX(QuantidadedeMeses) into :duracaoMeses from SQLUser.VARSESTreatmentMCLine where TreatmentNumber = :pidPrescricao)
 
	quit +duracaoMeses 
	
getDataVencimento(pidPrescricao)
 
	new duracaoMeses, dataPrescricao
	
	set duracaoMeses  	  = $$getDuracaoMeses(pidPrescricao)
	set objPrescricao 	  = $get(^VARSESTreatmentMC(YM, pidPrescricao, 1))
	set dataPrescricao	  = $$$VARSESTreatmentMCDate1(objPrescricao)
 
	set dataPrescricao = $zdate(+dataPrescricao, 3) // ODBC Format.
 
	set dataVencimento = ##class(%SYSTEM.SQL).DATEADD("month", duracaoMeses, dataPrescricao)
	set dataVencimento = $extract(dataVencimento,0,10) // tirando informação de data.
	set dataVencimento = $extract(dataVencimento,9,10) _ "/" _ $extract(dataVencimento,6,7) _ "/" _ $extract(dataVencimento,1,4)
 
	quit dataVencimento
 
 
LstLocationsTMC()
    /*-------------------------------------------------------------------------------	
    ; 
    ; Build COMTempList with locations enabled for using Medium Complex Treatment 
    ; (Farmácias Especializadas)
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 30-Jul-2009	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
  	new objVARSESParams, strLocations, loop, idLocation, objLocation, strLocationName,
  		blnResult
  	set blnResult = $$$NO
  	; Data from VARSESParams
	set objVARSESParams = $get(^VARSESParams(0,YM,1))
	; Get locations TMC
	set strLocations = $$$VARSESParamsFarmaciaEspecializada(objVARSESParams)
	
	if (strLocations '= "") {	
		; Clean global
		kill ^COMTempList(YM,YUSER,"VARSESLocTMCNoCID")
		
	 	for loop=1:1 {
			set idLocation = $piece(strLocations,";",loop)
			quit:(idLocation = "")
			
			set objLocation=$get(^WWW0121(0,YM,idLocation,1))
			set strLocationName = $$$WWW0121LocationName(objLocation)
			
			set ^COMTempList(YM,YUSER,"VARSESLocTMCNoCID",idLocation,1) = strLocationName
		}
	 	set blnResult = $$$OK
	}
	quit 
 
IsLocationInNoCID(pidLocation)
    /*-------------------------------------------------------------------------------	
    ; 
    ; Build COMTempList with locations enabled for using Medium Complex Treatment 
    ; (Farmácias Especializadas)
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 11-Aug-2009	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new blnResult, objVARSESParams, strLocations, loop, idLocation
	;for i=1:1:999 hang 1
	set blnResult = $$$NO
 
	set objVARSESParams = $get(^VARSESParams(0,YM,1))
	set strLocations = $$$VARSESParamsLocaiscomFarmaciaEspecial(objVARSESParams)
  
	for loop=1:1 {
		set idLocation = $piece(strLocations,";",loop)
		quit:(idLocation = "")
			
		if (idLocation = pidLocation) { 
			set blnResult = $$$OK
			quit
		}
	}	
	quit blnResult
	
 	
GetTMCByItem(pidItem)
    /*-------------------------------------------------------------------------------	
    ; Returns all redy/running treatments for the provided item
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ; idTreatment~idSeq~idPatient~fltQtyTotal~fltQtyResidual~intDistributionType~ReturnDate~idLocation~strDocName
    ;
    ; History:
	; 05-Oct-2009	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new lstTreatment, idTreatment, idxItem, idSeq, intStatus, intStatusLine, fltQtyResidual, fltQtyTotal,
		objTreatment,idPatient, intDistributionType, idLocation, arrData, strName, strDocName
 	
	set idTreatment = ""
	set lstTreatment = ""
	set idxItem = $$$Index(pidItem)
	for {
		set idTreatment = $order(^VARSESTreatmentMCLines(YM,1,idxItem,idTreatment))
		quit:(idTreatment = "")
		set objTreatment = $get(^VARSESTreatmentMC(YM,idTreatment,1))
		set idPatient = $$$VARSESTreatmentMCPatientId(objTreatment)
		
		if (idPatient '= "") {
			set strName = $$$MEDPatientName($get(^MEDPatient(YM,idPatient,1)))
			if (strName = "") set strName = idPatient
		} else {
			set strName = ""
		}
		
		set intDistributionType = $$$VARSESTreatmentMCDistributionType(objTreatment)
		set idLocation = $$$VARSESTreatmentMCSiteLocation(objTreatment)		
		set strDocName = $$$VARSESTreatmentMCDoctorName(objTreatment)
		
		set idSeq = ""
		for {
			set idSeq = $order(^VARSESTreatmentMCLines(YM,1,idxItem,idTreatment,idSeq))
			quit:(idSeq = "")
			set intStatus = $$StatusTreatmentMC(idTreatment)	
			if ((intStatus = $$$TMCReady) || (intStatus = $$$TMCRunning)) {
			
				set intStatusLine = $$StatusTreatmentMCLine^VARSESTreatmentMCLine(idTreatment,idSeq)
				if ((intStatusLine = $$$TMCReady) || (intStatusLine = $$$TMCRunning)) {
			
			
					set fltQtyResidual = $$QtyResidual^VARSESPatientConsumptionMCLog(idTreatment, idSeq)
					set fltQtyTotal = $$GetTotalLineQty^VARSESTreatmentMCLine1(idTreatment,idSeq)
 
					set arrData(idLocation,strName,idTreatment,idSeq) = idPatient_Y_fltQtyTotal_Y_fltQtyResidual_Y_intDistributionType_Y_$$GetReturnDate(idTreatment)_Y_strDocName
		
				}
			}
		}
	}
 
	quit:($order(arrData("")) = "") lstTreatment
 
	set idLocation = ""
	for {
		set idLocation = $order(arrData(idLocation))
		quit:(idLocation = "")
		set strName = ""
		for {
			set strName = $order(arrData(idLocation,strName))
			quit:(strName = "")
			set idTreatment = ""
			for {
				set idTreatment = $order(arrData(idLocation,strName,idTreatment))	 
				quit:(idTreatment = "")				
				set idSeq = ""
				for {
					set idSeq = $order(arrData(idLocation,strName,idTreatment,idSeq))
					quit:(idSeq = "")
					
					set idPatient = $piece(arrData(idLocation,strName,idTreatment,idSeq),Y,1)
					set fltQtyTotal = $piece(arrData(idLocation,strName,idTreatment,idSeq),Y,2)
					set fltQtyResidual = $piece(arrData(idLocation,strName,idTreatment,idSeq),Y,3)
					set intDistributionType = $piece(arrData(idLocation,strName,idTreatment,idSeq),Y,4)
					set strReturnDate= $piece(arrData(idLocation,strName,idTreatment,idSeq),Y,5) 
					set strDocName= $piece(arrData(idLocation,strName,idTreatment,idSeq),Y,6) 
	
					if (lstTreatment = "") {
						set lstTreatment = $LISTBUILD(idTreatment_Y_idSeq_Y_idPatient_Y_fltQtyTotal_Y_fltQtyResidual_Y_intDistributionType_Y_strReturnDate_Y_idLocation_Y_strDocName)
					} else {		
						set lstTreatment = lstTreatment _ $LISTBUILD(idTreatment_Y_idSeq_Y_idPatient_Y_fltQtyTotal_Y_fltQtyResidual_Y_intDistributionType_Y_strReturnDate_Y_idLocation_Y_strDocName)	
					}
				}
			}
		}
	}
 
	quit lstTreatment 	
 
 
 
GetReturnDate(pidTreatment) 
    /*-------------------------------------------------------------------------------	
    ; Returns return date for the treatment
    ;  
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 29-Sep-2009	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/ 
	new strReturnDate, idxIdTreatment, idDispensacao, objDispensacao, blnStatus
	
	set strReturnDate = ""
	set idDispensacao = ""
	set Type = 8 //dispensação media complexidade
	set idxIdTreatment = $$$Index(pidTreatment)
	for {
		set idDispensacao = $order(^INIssues(YM,5,Type,idxIdTreatment,idDispensacao))
		quit:(idDispensacao = "")
		set objDispensacao = $get(^INIssue(YM,idDispensacao,1))
		// checar se a dispensacao foi efetuada, pois pode estar em edição apenas
		set blnStatus = $$$INIssueStatus(objDispensacao)		
		continue:(blnStatus = 0)	// não processado
		set strReturnDate = $$$INIssueFREE17(objDispensacao)		
	}
	quit strReturnDate
	
 
CheckDelete(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Check if delete button is to be enabled.
    ;
    ; History:
    ; 28-Oct-2009		heber			SRBRXXX: Created
    ;-------------------------------------------------------------------------------
	quit:((pYKEY="") || (pYKEY="+"))
 
	set intStatus = $$StatusTreatmentMC(pYKEY)	
	set Q=1
	if (intStatus = $$$TMCEditable)	set Q=0
	quit
 
 
OnCopyClick(pYKEY)
    /*-------------------------------------------------------------------------------	
    ; Creates a new prescription and associated lines. Changes the current state to
    ; Editable. Any line on cancelled status will be ignored. The button is enabled on
    ; any Prescription Status.
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 10-Nov-2009	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
 	new objTMC, strStatus, idTMC, strClass,idNewLine, idNewLine1, idTreatmentMCLine1,
 		objTreatmentMCLine, idTreatmentMCLine, YKEY, YDATEI, YFELD,objTreatmentMCLine1
 	
 	; get current Treatment
 	set objTMC = $get(^VARSESTreatmentMC(YM,pYKEY,1))
 	
 	; update info
	set $$$VARSESTreatmentMCStatus(objTMC) = $$$TMCEditable
	set $$$VARSESTreatmentMCDate1(objTMC) = $horolog
 
	set idTMC = $$^WWWNEXT("VARSESTreatmentMC")
	set strClass = "VARSESTreatmentMC"
 	
 	;tstart
 	set strStatus=$$^WWWSPEI(strClass,idTMC,objTMC,1)
 	if (+strStatus) {
		;tcommit
	} else {
		;trollback
	}
 
 	; create treatment lines
	set idNewLine = 1
	set idNewLine1 = 1
 	set idTreatmentMCLine = ""
 	
 	for {
		set idTreatmentMCLine = $order(^VARSESTreatmentMCLine(YM,pYKEY,idTreatmentMCLine))
		quit:(idTreatmentMCLine = "")
		set objTreatmentMCLine = $get(^VARSESTreatmentMCLine(YM,pYKEY,idTreatmentMCLine,1))
		continue:($$$VARSESTreatmentMCLineCancel(objTreatmentMCLine))
		
		set YFELD = objTreatmentMCLine
	 	set YKEY = idTMC _ "," _ idNewLine
 		set YDATEI = "VARSESTreatmentMCLine"
	
 		tstart
 		set strStatus=$$^WWWSPEI(YDATEI,YKEY,YFELD,1)
 		if (+strStatus) {
			if $tlevel>0 tcommit
		} else {
			trollback
		}
 	
 		set idxParent = $$$Index(idTreatmentMCLine)
 		set idTreatmentMCLine1 = ""
 		for {
	 		set idTreatmentMCLine1 = $order(^VARSESTreatmentMCLine1s(YM,1,idxParent,pYKEY,idTreatmentMCLine1)) 	
	 		quit:(idTreatmentMCLine1 = "")
	 		set objTreatmentMCLine1 = $get(^VARSESTreatmentMCLine1(YM,pYKEY,idTreatmentMCLine1,1))
			
			set $$$VARSESTreatmentMCLine1Parent(objTreatmentMCLine1) = idNewLine
 
			set YFELD = objTreatmentMCLine1
	 		set YKEY = idTMC _ "," _ idNewLine1
 			set YDATEI = "VARSESTreatmentMCLine1"
	
 			tstart
 			set strStatus=$$^WWWSPEI(YDATEI,YKEY,YFELD,1)
 			if (+strStatus) {
				if $tlevel>0 tcommit
			} else {
				trollback
			}	 		
	 		
	 		set idNewLine1 = idNewLine1 + 1
 		}
 	
 		set idNewLine = idNewLine + 1
 	}
 
 	; show new record
 	do GoToForm^COMUtilForm("VARSESTreatmentMC", idTMC)
 
	quit 
]]></Routine>
</Export>