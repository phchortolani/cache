<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMUtilTrack" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMUtilTrack
#Include %syJrninc
#Include %syPidtab
#include %occInclude
Pro
    ;-------------------------------------------------------------------------------
    ; Scan WWWPRO
	; 
	; History:
	; 14-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new idClass,intGot,strGlo,strStore
    
    set strStore="arrTemp"
    
    kill @strStore
    set idClass=""
    for {
	    set idClass=$order(^WWWPRO(0,idClass))
	    quit:idClass=""
	    set strGlo="^WWWPRO(0,"""_idClass_""",""zzz"")"
	    set strGlo=$query(@strGlo,-1)
	    ;write !,idClass,!,strGlo
	    set @strStore@(idClass)=strGlo	    
    }
    set intGot=$zhorolog
    for {
	    set idClass=""
	    for {
		    set idClass=$order(^WWWPRO(0,idClass))
		    quit:idClass=""
		    set strGlo=$get(@strStore@(idClass))
		    if strGlo="" {
			    set strGlo="^WWWPRO(0,"""_idClass_""")"
		    }
		    for {
	    	    set strGlo=$query(@strGlo)
	    	    quit:strGlo=""
	    	    quit:$qsubscript(strGlo,2)'=idClass
			    if $zhorolog-intGot>3 {
				    write !,$translate($justify("",75)," ","-")
			    }
			    Do Show(.strGlo)
			    set @strStore@(idClass)=strGlo
			    set intGot=$zhorolog
		    }
	    }
	    hang .1
    }
Show(pstrGlo)
    ;-------------------------------------------------------------------------------
    ; Show WWWPRO
	; 
	; History:
	; 14-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new intKeys,strClass,strNewData,strOldData
   
    set strClass=$qsubscript(pstrGlo,2)
    write !,$zdate($qsubscript(pstrGlo,3),3)," ",$ztime($qsubscript(pstrGlo,4))," ",$qsubscript(pstrGlo,2)," ",$qsubscript(pstrGlo,6),! 
    set intKeys=$length($qsubscript(pstrGlo,6),",")+6
    set $piece(pstrGlo,",",intKeys)=0
    set strOldData=$get(@pstrGlo)
    set $piece(pstrGlo,",",intKeys)=1
    set strNewData=@pstrGlo 
    do Fields(strClass,strOldData,strNewData)
    quit
    
Fields(pstrClass,pstrOldData,pstrNewData)
    ;-------------------------------------------------------------------------------
    ; Show WWWPRO
	; 
	; History:
	; 14-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new intField,intLastField,intSize,strNewField,strOldField

    set intLastField=$order(^WWW003(0,pstrClass,""),-1)
    set intSize=25 
    for intField=1:1:intLastField {
	    set strOldField=$piece(pstrOldData,"~",intField)
	    set strNewField=$piece(pstrNewData,"~",intField) 
	    if strOldField'=strNewField {
		    write $j(intField,3)," ",$piece($get(^WWW003(0,pstrClass,intField,1)),"~",25)
		    for {
			    write:strOldField'="" ?20," Old [",$extract(strOldField,1,intSize),"]"
			    write:strNewField'="" ?40," New [",$extract(strNewField,1,intSize),"]"
			    write !
			    quit:'$get(gblnShowAll)
			    set strOldField	= $extract(strOldField,intSize+1,999)
			    set strNewField	= $extract(strNewField,intSize+1,999)
			    quit:(strOldField="")&&(strNewField="")
		    }
	    }
    }
	quit
	
Search(pstrClass,pstrScan="",pstrFind="",pintDaysBack=0)
    ;-------------------------------------------------------------------------------
    ; Seacrh WWWPRO
	; 
	; History:
	; 04-Sep-2013	SCR		Added Days Back to speed up Search
	; 02-Sep-2013	SCR		Multi key & class Search using "!"
	; 14-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
    new strGlo,arrSearch
    new intClass,intScan,strClass,strScan,strKey
    
    for intClass=1:1:$length(pstrClass,"!") {
	    set strClass	= $piece(pstrClass,"!",intClass)
	    for intScan=1:1:$length(pstrScan,"!") {
		    set strScan	=$piece(pstrScan,"!",intScan) 
	   		set strGlo="^WWWPRO(0,"""_strClass_""")" 
	   		if pintDaysBack {
		   		set strGlo="^WWWPRO(0,"""_strClass_""","_($h-pintDaysBack)_")" 
	   		}
		    for {
				set strGlo=$query(@strGlo) 
				quit:strGlo=""  
				quit:$qsubscript(strGlo,2)'=strClass  
				if (strGlo[strClass) &&($qsubscript(strGlo,6)[strScan) && (@strGlo[pstrFind) {
					set strKey=$qs(strGlo,3)_","_$qs(strGlo,4)
					set arrSearch(strKey,strGlo)=""
				}
		    }
		}
	}
	set strKey=""
	for {
		set strKey = $order(arrSearch(strKey))
		quit:strKey=""
		set strGlo=""
		for {
			set strGlo = $order(arrSearch(strKey,strGlo))
			quit:strGlo=""
			do Show(strGlo)
		}
	}
	quit
	
Jrn(pintMode=0,gblnShowAll=0,pblnShowObjects=1)
    ;-------------------------------------------------------------------------------
    ; Scan journal
	; 
	; History:
	; 16-Oct-2013	SCR		Added Markes & Object Flag
	; 02-Jul-2013	SCR		Added Modes
	; 20-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new arrData,arrLast,dtDay,intAdr,intClassType,intGot,intLastAdr,intNewAdr,intNextAdr
	new objJrn,objRec,rc,rs,strClass,strFile,strGlo,strMarker,strNew,strOld,strStart
	new tmSec
    
    kill arrLast
	set rs		= ##class(%ResultSet).%New("%SYS.Journal.System:Progress")
	set rc		= rs.Execute()
	set intGot	= $zh
	set tmSec	= $p($h,",",2)-600
	set dtDay	= $p($h,",",1)
	if tmSec<1 {
		set tmSec	= tmSec+86400
		set dtDay	= dtDay-1
	}
	set strStart = $zdt(dtDay_","_tmSec,3)
	write !,"Starting From ",strStart,!
	while rs.Next() { 
		;write $zdatetime(rs.Data("TimeStamp"),8),": ",$justify(rs.Data("Offset"),10)," ",rs.Data("File Name"),! 
		set intNewAdr	= rs.Data("Offset")
		set strFile		= rs.Data("File Name")
		set objJrn		= ##class(%SYS.Journal.File).%OpenId(strFile)
		;w !,objJrn,!
		set intLastAdr	= +$get(arrLast(strFile))
		;w "Job: ",$j for i=1:1:100 h 1
		
		set intAdr = intLastAdr
		for {
			set arrLast(strFile)	= intAdr
			set intNextAdr = $$$JRNNEXT(intAdr)
			quit:intNextAdr=$$$NULLOREF
			quit:intNextAdr<intAdr
			set intAdr = intNextAdr
			set objRec=##class(%SYS.Journal.Record).%OpenId(intAdr)
			;if intAdr=30988184 w !,$job," " f i=1:1:100 h 1
			if objRec.%ClassName()="Marker" {
				set strMarker	= objRec.Text
			}
			if objRec.%ClassName()="SetKillRecord" {
				set strGlo=objRec.GlobalNode
				set strClass=$p($qs(strGlo,0),"^",2)
			    continue:objRec.TimeStamp']strStart
			    set intClassType = $$ClassType(strClass)
			    if (pintMode=3) && (intClassType=3) {
				    write !,objRec.TimeStamp," "," ",strClass," ",$p($p(strGlo,"(0,",2),",1)")
					set strOld=$$OldValue(objRec,strGlo)
					set strNew=objRec.NewValue
					set ^CacheTempJrnTrack($znspace,strGlo)=strNew
					
				    write !," Old [",$extract(strOld,1,70),"]",!," New [",$extract(strNew,1,70),"]",!
				    continue
		    
			    }
				if intClassType=1 {
					set strOld=$$OldValue(objRec,strGlo)
					set strNew=objRec.NewValue
					set ^CacheTempJrnTrack($znspace,strGlo)=strNew
					if $tr(strOld,"~")'=$tr(strNew,"~") {
						write !,"Database=",objRec.DatabaseName," PID=[",$$PIDLookup(intAdr),"]"
					    if (intClassType=1) {
						    if $zhorolog-intGot>3 {
							    write !,$translate($justify("",75)," ","-")
						    }
					    }
					    if $get(strMarker)'="" {
						    write !,strMarker
						    set strMarker=""  ; Only show once
					    }
					    write !,objRec.TimeStamp," ",strClass," ",$p($p(strGlo,"(0,",2),",1)"),!
						
						do Fields(strClass,strOld,strNew)
						set intGot=$zh
					}
				}
				if intClassType=2  &&(strGlo["(") && pblnShowObjects {
					do ObjectFields(objRec,.arrData,.intAdr)

				}
			
				
			}
				
		}
			
		continue:objRec.TimeStamp']strStart
		hang 1
	}
PIDLookup(Offset)
    ;-------------------------------------------------------------------------------
    ; Process ID, Copied from %SYS 
	; 
	; History:
	; 07-Jan-2014	SCR		Created
    ;-------------------------------------------------------------------------------
	new day,jobid,pid,rectime,time
 /* Given an offset in the current journal file, return the process id
	   (not the jobid) of the process, if possible, using the jobid->pid
	   translation in ^SYS("PIDList"). If we cannot locate a process id
	   <jobid>_"(jid") is returned instead of the pid. */
 
 s jobid=$$$JRNPID(Offset)  ;jobid from journal record, <NOTOPEN> if no current file
 if '$ZBITGET($ZVERSION(0),40) quit jobid  ;This is the pid for non-USETID builds	
#;JO2219+
 ;If the jobid is from a remote system, we can't translate it
 if $$$JRNREMSYS(Offset) quit jobid_"(jid)" 
#;JO2219-
 ;
 if '$D(^["%SYS"]SYS("PIDList",jobid)) quit jobid_"(jid)"
 
 s rectime=$ZU(78,24,Offset)  ;Timestamp for journal record
 s day=$P(rectime,",")
 if $D(^["%SYS"]SYS("PIDList",jobid,day)) {
	 ; We have a record for this day, we must use the time
	 s time=$P(rectime,",",2)_"X"  ;Add "X" so when we reverse $O, we get <= not just <
	 s time=$o(^["%SYS"]SYS("PIDList",jobid,day,time),-1,pid)
	 if time="" quit jobid_"(jid)"  ;shouldn't happen, we know jobid/day node exists
 } else {
	 ; No record for this day, use the most recent record for this jobid
	 s day=$o(^["%SYS"]SYS("PIDList",jobid,day),-1)
	 if day="" quit jobid_"(jid)"  ;shouldn't happen, we know jobid node exists
	 s time=$o(^["%SYS"]SYS("PIDList",jobid,day,""),-1,pid)
	 if time="" quit jobid_"(jid)"  ;shouldn't happen, we know jobid node exists
	 ; pid is loaded with the pid from the correct record
 }
 quit pid


ObjectFields(pobjRec,parrData,pintAdr)
    ;-------------------------------------------------------------------------------
    ; Show object Fields
	; 
	; History:
	; 23-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new addFields,arrVal,id,idKey,intSub,intSubs,strClass,strData,strField,strGlo
	new strNew,strOld,x
	
    set $zt="ObjectFieldsErr"
   
	set strGlo		= pobjRec.GlobalNode
   	set strOld		= $$OldValue(pobjRec,strGlo)
	set strNew		= pobjRec.NewValue
	set ^CacheTempJrnTrack($znspace,strGlo)=strNew
	set strData		= "parrData(0,"_$piece(strGlo,"(",2)
	set @strData	= strOld
	set strData		= "parrData(1,"_$piece(strGlo,"(",2)
	set @strData	= strNew
	set:strOld'=strNew parrData=1
	set intSubs		= $ql(strGlo)
	set idKey		= $qs(strGlo,1)
	set id			= ""
	for intSub=1:1:intSubs {
		set:intSub>1 id=id_"||"
		set id=id_$qs(strGlo,intSub)
	}
	;quit:intSubs>1 
	set strClass	= ""
	if strOld'="",$lv(strOld) {
		set strClass=$lg(strOld,1)
	}
	if strClass="",$lv(strNew) {
		set strClass=$lg(strNew,1)
	}
	set strClass=$p(strClass,"~",2)
	if strClass="" {
		set strClass=$piece($piece(strGlo,"^",2),"D(",1)
	}
	;if intAdr=853468 zw parrData write "Job: "_$job for i=1:1:100 h 1
	
	do GetObjFields(strClass,.addFields)
	
	set strField=""
	for {
		set strField=$order(addFields(strClass,strField))
		quit:strField=""
		set strOld=""
		set strNew=""
		x addFields(strClass,strField) 
	    if strOld'=strNew {
		    set arrVal(strField,0)=strOld
		    set arrVal(strField,1)=strNew
	    }
		
		
	}
	quit:'$data(arrVal)
	
	write !,pobjRec.TimeStamp," ",strClass," ",$p($p(strGlo,"(",2),")"),!

	set strField=""
	for {
		set strField=$order(arrVal(strField))
		quit:strField=""
		set strOld=arrVal(strField,0)
		set strNew=arrVal(strField,1)
	    write "   ",strField,?20
	    write " Old [",$extract(##class(Common.Dump).DumpData(strOld),1,25),"]"
	    write ?40," New [",$extract(##class(Common.Dump).DumpData(strNew),1,25),"]",!

		
		
	}
	;zw parrData
	kill parrData
	quit			    

ObjectFieldsErr ; Internal Tag
	write !,"Error ",$get(strClass)," @ ",$get(id)
	if $get(strClass)'="",$get(strField)'="" write ! zw addFields(strClass,strField)
	zw parrData
	write !," Error",$ecode," ",$ze
	;write "Hanging ",$job for i=1:1:100 h 1
	read "Enter to cont ",x
	quit	
				
OldValue(pobjRec,pstrGlo="")
    ;-------------------------------------------------------------------------------
    ; Get Old Value (Can Cause an Error)
	; 
	; History:
	; 22-Aug-2013	SCR		Created
    ;-------------------------------------------------------------------------------
    set $zt="ValueErr"
    new strOldValue
    set strOldValue	= pobjRec.OldValue
    if ($get(strOldValue) = "") && (pstrGlo'="") {
	    set strOldValue	= $get(^CacheTempJrnTrack($znspace,pstrGlo))
    }
    quit $get(strOldValue)
ValueErr ; Internal Tag
	write "OV"
    if ($get(strOldValue) = "") && (pstrGlo'="") {
	    set strOldValue	= $get(^CacheTempJrnTrack($znspace,pstrGlo))
    }
    quit $get(strOldValue)
    

GetObjFields(pstrClass,&parrFields)
    ;-------------------------------------------------------------------------------
    ; Get Object Fields from oddMAP
	; 
	; History:
	; 23-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new strField,strLoc,strCode,strRest,strSub
	

	quit:$data(parrFields(pstrClass))
	set strField = ""
	for {
		set strField	= $order(^oddMAP(pstrClass,"a",strField))
		quit:strField=""
		set strLoc		= $get(^oddMAP(pstrClass,"a",strField,85))
		if strLoc["$list" {
			set strRest		= $p(strLoc,"(",3,99)
			set strSub		= $p(strRest,",",1,$length(strRest,",")-1)
			set strCode		= "set:$d(parrData(0,"_strSub_")#2 strOld="_$p(strLoc,"^",1)_"parrData(0,"_$p(strLoc,"(",3,99)_" "
			set strCode		= strCode _ "set:$d(parrData(1,"_strSub_")#2 strNew="_$p(strLoc,"^",1)_"parrData(1,"_$p(strLoc,"(",3,99)
			set parrFields(pstrClass,strField)=strCode
			;set parrFields(pstrClass,strField,1)=strRest
		}
	}
	;zw parrFields
	
	quit

ClassType(pstrClass)
    ;-------------------------------------------------------------------------------
    ; Class Type 1 = ANM , 2 = Object , 3 = WWWDATEN & CacheTemp 0 = Ignore
	; 
	; History:
	; 02-Jul-2013	SCR		Added Type 3
	; 20-May-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new intType
	
	set intType = 1
	if ",WWWUSER,WWWSOR,WWWDATEN,WWW006,WWWBENCH,WWWPAGE,WWW126,WWW1262,WWW128,WWW1264,WWWRECALL,"[(","_pstrClass_",") set intType = 0
	if ",WWW120,WWW1205,WWW1205B,WWW013,WWW1261,WWW0031,WWWUSER,WWWUSER1,COMRoutineLog,COMTempList,"[(","_pstrClass_",") set intType = 0
	if ",INUSER,INDRPRUNLOG,"[(","_pstrClass_",") set intType = 0
	if ",WWWPRO,WWWLAST,WWWDUMMY,WWWRECALL,"[(","_pstrClass_",") set intType = 0
	if ",INDRPDEMAND,INDRPSUPPLY,INDRPUSER,INDRPRUNPROT,INDRPRUNID,INDRPITEMRUN,"[(","_pstrClass_",") set intType = 0
	if ",COMViewColumnUser,COMGridEditLayout,WWWDASHBOARD,COMSchedule,COMScheduleMessage,"[(","_pstrClass_",") set intType = 0	
	if ",COMDirectoryListing,VARLicenseUsageLog,zzSCH,"[(","_pstrClass_",") set intType = 0
	if '$data(^WWW001(0,pstrClass)) set intType = 0
	if (","_pstrClass_",")[",al" && ($e(pstrClass,$l(pstrClass))="D") set intType=2
	if ("WWWDATEN"=pstrClass) || ($extract(pstrClass,1,9)="CacheTemp") set intType=3
	if pstrClass="zzCOMUtilTrack" set intType=4
	quit intType
	;end

JrnMarker(pid,pstrText)
    ;-------------------------------------------------------------------------------
    ; Set Journal Marker
	; 
	; History:
	; 16-Oct-2013	SCR		Created
    ;-------------------------------------------------------------------------------
	new strCode,strText
	
	set strText	= $translate(pstrText,"""")
	set strCode	= "zn ""%SYS"" d ADD^JRNMARK("""_pid_""","""_$extract(strText,1,250)_""") zn """_$znspace_""""
	xecute strCode
	quit

	
]]></Routine>
</Export>