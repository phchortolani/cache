<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWSETObject" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWSETObject
	
#include COMSYS
	
GetObjectId(pstrGlobal)
	;-------------------------------------------------------------------------------
	; Get the CachÃ© id from the @Net id.
	;
	; Inputs:
	; pstrGlobal: The name of the global to find the id for
	;
	; Returns:
	;
	; History:
	; 10-Jul-2007	RPW		SR15571: Created
	;-------------------------------------------------------------------------------
	new idANM,idObject,loop,strPiece
	
	; TODO : Consider rewrite with $ql and $qs - benchmark
	
	set idANM    = $translate($piece($piece(pstrGlobal,"(",2),")",1),"""")
	set idObject = ""
	for loop=1:1 {
		set strPiece = $piece(idANM,",",loop)
		quit:strPiece=""
		 
		set:loop'=1 idObject = idObject_"||" 
		set idObject = idObject_strPiece
	}
	
	quit idObject
	
Exists(pstrClassName,pidObject)
	;-------------------------------------------------------------------------------
	; Check if the data with the id exists on the object
	;
	; Inputs:
	; pstrClassName: The class to check
	; pidObject    : The id of the entry in the class
	;
	; Returns:
	;
	; History:
	; 10-Jul-2007	RPW		SR15571: Created
	;-------------------------------------------------------------------------------
	new blnExists
	
	set blnExists = $$$NO
	if (pstrClassName'="") && (pidObject'="") {
		set blnExists = $zobjclassmethod(pstrClassName,"%ExistsId",pidObject)
	}
	
	quit blnExists
	
SetGlobal(&pstrGlobal,&pobjWWW001,&pidClass)
	;-------------------------------------------------------------------------------
	; Get the actual global that needs to be used to load/save/kill the data
	;
	; Inputs:
	; pstrGlobal: The name of the global to load
	; pobjWWW001: The class entry for this class.
	;
	; Returns:
	;
	; History:
	; 10-Jul-2007	RPW		SR15571: Created
	;-------------------------------------------------------------------------------
	new strSaveInFile
	
	set pidClass=$piece($piece(pstrGlobal,"(",1),"^",2)
	
	set pobjWWW001=""
	
	if ($extract(pidClass,1,2)'="IN") && (($extract(pidClass,1,3)'="WWW") || (pidClass="WWW000")) {
		set pobjWWW001=$get(^WWW001(0,pidClass,1))
	}
	
	set strSaveInFile=$$$WWW001SaveDataInFile(pobjWWW001)
	
	if strSaveInFile'="" {
		set pstrGlobal="^"_strSaveInFile_"("_$piece(pstrGlobal,"(",2,99)
	}
	
	do ExtendedGlobalReference(.pstrGlobal,pobjWWW001)
	
	quit
	
ExtendedGlobalReference(&pstrGlobal,pobjWWW001)
	;-------------------------------------------------------------------------------
	; Get the extended global reference if it's required
	;
	; Inputs:
	; pstrGlobal: The global to extend
	; pobjWWW001: WWW001 object
	;
	; Returns:
	;
	; History:
	; 12-Jul-2007	RPW		SR15571: Created
	;-------------------------------------------------------------------------------
	new strUCI,strVolume
	
	; FIXME : <GRF> May need to consider Environment Syntax ^|nsp|gbl as well as
	;               bracked syntax in the $find test.
	
	set strUCI    = $$$WWW001OtherUCI(pobjWWW001)
	set strVolume = $$$WWW001OtherVolume(pobjWWW001)
 
	if (strUCI'="") && (strVolume'="") {
		if '$find(pstrGlobal,"^[") {
			set pstrGlobal="^["""_strUCI_""","""_strVolume_"""]"_$piece(pstrGlobal,"^",2,999)	
		}
	}
 
	quit
	
]]></Routine>
</Export>