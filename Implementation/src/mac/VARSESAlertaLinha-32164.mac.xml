<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESAlertaLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMSYS
#include COMConst
#include COMView
#include INConst
#include VARConst
#include VARSESPainelAbastecimento
 
VARSESAlertaLinha
	quit

IsFormInBuffer(pForm="")
	new rtrnBool
	set rtrnBool=0
	if $get(pForm)="VARSESAlerta" set rtrnBool=1
	if $get(pForm)="VARSESAlertaRegionais" set rtrnBool=1
	if $get(pForm)="VARSESAlertaLinha" set rtrnBool=1
	if $get(pForm)="VARSESAlertaRegionaisLinha" set rtrnBool=1
	if $get(pForm)="VARSESMonitoramentoEstoque" set rtrnBool=1
	if $get(pForm)="VARSESMonitoramentoEstoqueLinha" set rtrnBool=1
	if $get(pForm)="VARSESMonitoramentoEstoqueView" set rtrnBool=1
	q rtrnBool
		
OnBlur(pintCol="",pintRow="",pYKEY="",pYFELD="")
	new strStatus
	if $data(^VARSESAlertaLinha(YM,$$$KEY1(pYKEY),$$$KEY2(pYKEY),1)) {
		set strStatus=$$$Save("VARSESAlertaLinha",pYKEY,pYFELD,1)
	} else {
		//set strStatus=$$$MakeStatus("Salvo não foi possível")
		set strStatus=$$$MakeStatus($$$Text("MED00085"))  ;Salvo não foi possível)
	}
	if '$$$ISOK(strStatus) {
		write "alert('"_$$$Text("MED00085")_"');"
	}
	quit
 
GetItemGroup(pidItem)
	;Pega somente o grupo
	;XXYY: XX=grupo, YY=sub-grupo 
	quit $EXTRACT($$GetItemGroupSubGroup(pidItem),1,2)
 
GetItemSubGroup(pidItem)
	;Pega somente o sub grupo
	new idGrupoSubgrupo
	
	;XXYY: XX=grupo, YY=sub-grupo 
	set idGrupoSubgrupo=$$GetItemGroupSubGroup(pidItem)
	if ($LENGTH(idGrupoSubgrupo) > 2) {
		quit $EXTRACT(idGrupoSubgrupo,3,4)
	} else {
		 quit "" 
	}
 
GetItemGroupSubGroup(pidItem)
	;Pega o groupo seguido do subgrupo
	; 
	new objItem, idGrupo
	quit:pidItem="" ""
	
	set objItem  = $get(^INART(YM, pidItem, 1))
	
	;XXYY: XX=grupo, YY=sub-grupo
	set idGrupo  = $piece(objItem, Y, 30)
 
	quit idGrupo
	
GetDescricaoItem(pidItem)
 
	new objItem, strDescricaoItem
	quit:pidItem="" ""
 
	set objItem  		 = $get(^INART(YM, pidItem, 1))
	set strDescricaoItem = $piece(objItem, Y, 1)
 
	quit strDescricaoItem
	
GetUnidadeMedida(pidItem)
 
	new objItem, idUnidadeMedida, strDescricaoUnidadeMedida
	quit:pidItem="" ""
 
	set objItem  		 		  = $get(^INART(YM, pidItem, 1))
	set idUnidadeMedida  		  = $piece(objItem, Y, 40)
	set strDescricaoUnidadeMedida = $piece($get(^WWW101(YM, "EINHEIT", SPRACHE, idUnidadeMedida, 1)), Y, 1)
 
 	// --09/03/2008
 	// Mostrar apenas os três primeiros dígitos da Unidade de Medida.
 	set strDescricaoUnidadeMedida = $extract(strDescricaoUnidadeMedida,1,3)
 	// -- 
 
	quit strDescricaoUnidadeMedida
	
GetPadrao(pidItem)
 
	new objItem, idPadrao, strPadrao
	quit:pidItem="" ""
	
	set strPadrao = ""
	set objItem   = $get(^INART(YM, pidItem, 1))
	set idPadrao  = $$$INARTFREE5(objItem)
	//set:strPadrao'="" strPadrao = $piece($get(^WWW101(YM, "JA/NEIN", SPRACHE, idPadrao, 1)), Y, 1)
 	if idPadrao=0 set idPadrao=""
	quit idPadrao
	
GetDescricaoPadrao(pidItem)
 
	new idPadrao, strPadrao
	
	set idPadrao = $$GetPadrao(pidItem)
 
	if idPadrao = 1 {
		set strPadrao = $$$Text("MED00086")  ;Sim
	} else {
		set strPadrao = $$$Text("MED00087")  ;Não
	}
 
	quit strPadrao
	
GetIndiceCriticidade(pidItem)
 
	new idIndiceCriticidade
	quit:pidItem="" ""
 
	set idIndiceCriticidade = $$getIC^VARSESINReq(pidItem)
 
	quit idIndiceCriticidade
	
GetCurvaValor(pidItem)
 
	new idCurvaValor
	quit:pidItem="" ""
 
	set idCurvaValor = $$getABC^VARSESINReq(pidItem)
 
	quit idCurvaValor
	
GetPrecoUltimaCompra(pidItem)
 
 	;quit ""
	new curPrecoUltimaCompra, objCompany, idMoeda, objMoeda, strSymbol, blnSymbolOnTheRight,
		strUltimaCompra
	
	quit:pidItem="" ""
 
 	set strUltimaCompra 	 = ""
	set curPrecoUltimaCompra = $$^WWWTR(0, 8, $$getPrecoUltimaCompra^VARSESINReq(pidItem))
 
	set objCompany 		     = $get(^WWW012(0, YM, 1))
	set idMoeda    		     = $$$WWW012StandardCurrency(objCompany)
 	set objMoeda   			 = $get(^WWWWAE(0, idMoeda, 1))
 	set strSymbol  			 = $$$WWWWAESymbol(objMoeda)
 	set blnSymbolOnTheRight  = $$$WWWWAESymbolOnTheRight(objMoeda)
 
 	
 	if curPrecoUltimaCompra '= "" {
	 	if 'blnSymbolOnTheRight {
		 	set strUltimaCompra = strSymbol_" "_curPrecoUltimaCompra
	
	  	} else { 
	 	 	set strUltimaCompra = curPrecoUltimaCompra_" "_strSymbol
		}
 	}
 	
	quit strUltimaCompra
	
GetMovimentacao(pidItem, pidLocation)
 
	new fltMovimentacao
	quit:pidItem="" ""
 
	set fltMovimentacao = $$getMOV^VARSESINReq(pidItem, pidLocation)
 
	quit fltMovimentacao
	
GetConsumoMedioMensalRede(pidItem)
 
	new fltCustoMedioMensalRede
	quit:pidItem="" ""
 
	set fltCustoMedioMensalRede = $$getCMMRede^VARSESINReq(pidItem)
	
	quit fltCustoMedioMensalRede
	
GetEstoqueFisicoLocal(pidItem, pidLocation)
 
	new fltEstoqueFisicoLocal	
	quit:pidItem="" ""
 
	set fltEstoqueFisicoLocal = $$getEF^VARSESINReq(pidItem, pidLocation)
 
	quit fltEstoqueFisicoLocal
	
GetEstoqueFisicoRede(pidItem)
 
	new fltEstoqueFisicoRede
	quit:pidItem="" ""
 
	set fltEstoqueFisicoRede = $$getEFR^VARSESINReq(pidItem)
 
	quit fltEstoqueFisicoRede
	
GetEstoqueFisicoNIAB(pidItem)
 
	new fltEstoqueFisicoNIAB
	quit:pidItem="" ""
 
	set fltEstoqueFisicoNIAB = $$getEFNIAB^VARSESINReq(pidItem)
 
	quit fltEstoqueFisicoNIAB
	
GetEstoqueFisicoNMAC(pidItem)
 
	new fltEstoqueFisicoNMAC
	quit:pidItem="" ""
 
	set fltEstoqueFisicoNMAC = $$getEFNMAC^VARSESINReq(pidItem)
 
	quit fltEstoqueFisicoNMAC
	
GetPontoRessuprimento(pidItem, pidLocation)
 
	new fltPontoRessuprimento
	quit:pidItem="" ""
 
	set fltPontoRessuprimento = $$getPR^VARSESINReq(pidItem, pidLocation)	
 
	quit fltPontoRessuprimento
	
GetEstoqueSeguranca(pidItem, pidLocation)
 
	new fltEstoqueSeguranca
	quit:pidItem="" ""
 
	set fltEstoqueSeguranca = $$getES^VARSESINReq(pidItem, pidLocation)
 
	quit fltEstoqueSeguranca
	
GetEstoqueMaximo(pidItem, pidLocation)
 
	new fltEstoqueMaximo
	quit:pidItem="" ""
 
	set fltEstoqueMaximo = $$getEM^VARSESINReq(pidItem, pidLocation)
 
	quit fltEstoqueMaximo
	
GetEncomendasPendentes(pidItem, pidLocation)
 
	new intEncomendasPendentes
	quit:pidItem="" ""
 
	// Andre, 21/02/2008:
	set fltQuantidadePAMSemAFM = $$GetQuantidadeAAtenderPorItem^VARTRKPAMLineFake(pidItem, pidLocation)
	// set intEncomendasPendentes = $$getQuantidadePendente^VARSESINReq(pidItem, pidLocation)
	set intEncomendasPendentes = $$getQuantidadePendente^VARSESINReq(pidItem, pidLocation) + fltQuantidadePAMSemAFM
	
	quit intEncomendasPendentes
	
GetEstoqueVirtual(pidItem, pidLocation)
 
	new fltEstoqueVirtual
	quit:pidItem="" ""
 
	set fltEstoqueVirtual = $$getEV^VARSESINReq(pidItem, pidLocation)
 
	quit fltEstoqueVirtual
	
GetSugestao(pidItem, pidLocation)
 
	new fltEstoqueMaximo, fltEstoqueVirtual, fltQuantidadePAMSemAFM, fltPontoRessuprimento,
		fltSugestao, daysToCalcPAB
	
	set fltEstoqueMaximo       = $$GetEstoqueMaximo(pidItem, pidLocation)
	
	// Andre, 21/02/2008:
	// -----------------
	// EstoqueVirtual = Estoque Físico + $$getQuantidadePendente^VARSESINReq(pidItem, pidLocation)
	// Para que seja considerada a coluna de quantidade recebida da INAUFP:
	set fltEstoqueVirtual = $$GetEstoqueFisicoLocal(pidItem, pidLocation) + $$getQuantidadePendente^VARSESINReq(pidItem, pidLocation)
	
	// Andre, 21/02/2008:
	/*
	// Andre, 30/01/2008: usar PAB ao invés de EstoqueNaData:
	set daysToCalcPAB = $piece($get(^VARSESParams(YM,YM,1)),Y,6)
	if ( $get(daysToCalcPAB) = "" ) {
		set daysToCalcPAB = 365 // Se parâmetro indefinido, define 1 ano p/calcular PAB.
	}
	set fltEstoqueVirtual = $$GetPAB^INART(pidItem,pidLocation,$H+daysToCalcPAB)
	// set fltEstoqueVirtual      = $$EstoqueNaData^VARSESEstoque(YM, pidItem, pidLocation, $zdate($horolog,4))
	*/
	
	set fltQuantidadePAMSemAFM = $$GetQuantidadeAAtenderPorItem^VARTRKPAMLineFake(pidItem, pidLocation)
	;set fltQuantidadePAMSemAFM = 0
	set fltPontoRessuprimento  = $$GetPontoRessuprimento(pidItem, pidLocation)
 
	// Se o Estoque Virtual + PAMs não atendidas < Ponto de Ressuprimento, temos que fazer 
	// sugestão.
	if (fltEstoqueVirtual + fltQuantidadePAMSemAFM) < fltPontoRessuprimento {
		
		set fltSugestao = fltEstoqueMaximo - fltEstoqueVirtual - fltQuantidadePAMSemAFM
 
	} else {
		set fltSugestao = 0
	}
 
	quit fltSugestao
 
 
 /*
 // Não vamos mais nos relacionar com a INRequisition.	
GetSugestao(pidItem, pidLocation)
	// Soma a quantidade de todas os Supplies(INRequisition) que ainda não definiram a origem.
	// INRequisitions unfirmed e firmed.
 
	new fltSugestao, idRequisition, objRequisition, fltQuantidade
	quit:pidItem="" ""
	
	set fltSugestao = 0
 
 	
	$$$Order7(^INRequisitions,YM,101,pidItem,pidLocation,1,YM,idRequisition)
	
		set objRequisition = $get(^INRequisition(YM, YM, idRequisition, 1))
		set fltQuantidade  = $piece(objRequisition, Y, 3)
		
		set fltSugestao = fltSugestao + fltQuantidade
	
	$$$End
 
	$$$Order7(^INRequisitions,YM,101,pidItem,pidLocation,2,YM,idRequisition)
	
		set objRequisition = $get(^INRequisition(YM, YM, idRequisition, 1))
		set fltQuantidade  = $piece(objRequisition, Y, 3)
		
		set fltSugestao = fltSugestao + fltQuantidade
	
	$$$End
 
	quit fltSugestao
	*/
	
GetPAMs(pidItem, pidLocation)
 
	new arrPAMs, strPAMs, idPAM, intAFMCount, strNewLines
	quit:pidItem="" ""
 
	do getPAMs^VARSESINReq(pidItem, pidLocation, .arrPAMs)
 
 	set strPAMs = ""
 	$$$Order1(arrPAMs,idPAM)
 
		if $get(strNewLines) = "" set strNewLines = ";"
 		set strPAMs          = $select(strPAMs = "":idPAM,$$$YES: strPAMs_strNewLines_idPAM)
		set intAFMCount      = $$GetAFMCountNotReceived^VARSESPamAfm(idPAM, pidItem)
		set strNewLines      = $extract(";;;;;;;;;;;;;;;;;;;",1,intAFMCount)
 
 	$$$End
 
	quit strPAMs
	
GetAFMs(pidItem, pidLocation, &parrAFMs)
	
	new strAFMs, arrPAMs, arrAFMs, idPAM, idAFM, idxPAM, idxAFM
	quit:pidItem="" ""
 
	do getAFMs^VARSESINReq(pidItem, pidLocation, .arrAFMs)
	do getPAMs^VARSESINReq(pidItem, pidLocation, .arrPAMs)
	
	// Verificar para cada PAM, quais AFMs pertencem a ela.
	$$$Order1(arrPAMs,idPAM)
	
		set idxPAM = $$$Index(idPAM)
		$$$Order1(arrAFMs,idAFM)
		
			set idxAFM = $$$Index(idAFM)
			if $data(^VARSESPAMAFMs(YM,3,idxPAM,idxAFM)) {
				set arrPAMs(idPAM) = $select(arrPAMs(idPAM) = "": idAFM,
										    $$$YES: arrPAMs(idPAM)_";"_idAFM)							    
			}
		$$$End
	$$$End
 
 	set strAFMs = ""
	$$$Order1(arrPAMs,idPAM)
	
		if arrPAMs(idPAM) = "" {
			set arrPAMs(idPAM) = "Sem Nº AFM"
			set idAFMs 		   = "Sem Nº AFM"
		} else {
			set idAFMs 		   = arrPAMs(idPAM)
		}
		
		set strAFMs = $select(strAFMs = "": idAFMs,
	                    $$$YES:strAFMs_";"_idAFMs)
	$$$End
 
 	merge parrAFMs = arrPAMs
 
	quit strAFMs
	
GetEmpenhos(pidItem, pidLocation)
 
	new strEmpenhos, arrEmpenhos, arrAFMs, idPAM, idAFM, arrPAMs, strAFMs
	quit:pidItem="" ""
 	;if YBED = "FRANK" for i=1:1:100 hang 1
	do getEmpenhos^VARSESINReq(pidItem, pidLocation, .arrEmpenhos)
	do GetAFMs(pidItem, pidLocation, .arrAFMs)
 
	set strEmpenhos = ""
	$$$Order1(arrAFMs,idPAM)
 
		set strAFMs = arrAFMs(idPAM)
		while strAFMs '= "" {
			
			set idAFM 	       = $piece(strAFMs, ";", 1)
			set strAFMs 	   = $extract(strAFMs, $length(idAFM) + 2, $length(strAFMs))
		
			if idAFM = "Sem Nº AFM" {
				set idEmpenho = "Sem Nº Empenho"
			} else {
				set idEmpenho 	   = $select(arrEmpenhos(idAFM) = "": "Sem Nº Empenho", $$$YES: arrEmpenhos(idAFM))
			}
			set strEmpenhos    = $select(strEmpenhos = "": idEmpenho,
		                          $$$YES:strEmpenhos_"<BR>"_idEmpenho)
	}
	
	$$$End
 
	quit strEmpenhos
	
GetProcessos(pidItem, pidLocation)
 
	new strProcessos, arrProcessos, strProcessos, idProcesso, idPAM, strNewLines
	quit:pidItem="" ""
 
	do getProcessos^VARSESINReq(pidItem, pidLocation, .arrProcessos)
	
	set strProcessos = ""
	$$$Order1(arrProcessos,idPAM)
 
		if $get(strNewLines) = "" set strNewLines = ";"
 
		set idProcesso   = $select(arrProcessos(idPAM)="":"Sem Nº Processo",$$$YES:arrProcessos(idPAM))
 		set strProcessos = $select(strProcessos = "":idProcesso,$$$YES: strProcessos_strNewLines_idProcesso)
 
		set intAFMCount      = $$GetAFMCountNotReceived^VARSESPamAfm(idPAM, pidItem)
		set strNewLines      = $extract(";;;;;;;;;;;", 1, intAFMCount*1)
	
	$$$End
 
	quit strProcessos
	
GetDetentoresAtuais(pidItem, pidLocation)
 
	new strDetentoresAtuais,arrDetentor,strProcessos,idDetentor, idPAM, strNewLines, intAFMCount
	quit:pidItem="" ""
	do getDetentorProcessos^VARSESINReq(pidItem, pidLocation, .arrDetentor)
 	set strDetentoresAtuais=""
 	set strProcessos = ""
	$$$Order1(arrDetentor,idPAM)
 
		if $get(strNewLines) = "" set strNewLines = "<BR>"
 
		set idDetentor   		= $select(arrDetentor(idPAM)="":"Sem Nº Processo",$$$YES:arrDetentor(idPAM))
		set strDetentoresAtuais = $select(strDetentoresAtuais = "":idDetentor,$$$YES:strDetentoresAtuais_strNewLines_idDetentor)
 
		set intAFMCount      = $$GetAFMCountNotReceived^VARSESPamAfm(idPAM, pidItem)
		set strNewLines      = $extract("<BR><BR><BR><BR><BR><BR><BR><BR>", 1, intAFMCount*4)
	$$$End
	
	quit strDetentoresAtuais_" "
 
DeletarAlertaLinhas()
 
	new idItem, idLocation, objItem, idItemStatus, arrItems, intLinhasDeletadasOk,
	    intLinhasDeletadasErro, strStatus
 
	$$$VAR
	
	//write "Deletando as linhas de alerta.",!!
	write $$$Text("MED00088"),!!
 
	//write "Verificando os itens do Alerta que foram desativados.",!,!
	write $$$Text("MED00089"),!,!
 
	// Para todos os itens no Alerta, verificar quais ficaram inativos.
	$$$Order2(^VARSESAlertaLinha,YM,idLocation)
		$$$Order3(^VARSESAlertaLinha,YM,idLocation,idItem)
		
 			// Verificando se está ativo.
 			set objItem 	 = $get(^INART(YM, idItem, 1))
 			set idItemStatus = $piece(objItem, Y, 66)
			
			// Não deletar se o item estiver ativo.
			continue:(idItemStatus = 0)
			
			// Não deletar se o item tiver movimentação.
			continue:($$getExisteMovimentacao^VARSESINReq(idLocation, idItem))
 
			set arrItems(idLocation, idItem) = ""
		
		$$$End
	$$$End
	
	set intLinhasDeletadasOk   = 0
	set intLinhasDeletadasErro = 0
 
	// Deletandos os itens/locais identificados.
 	//write "Deletando os itens/locais identificados... ",!
 	write $$$Text("MED00090"),!
	$$$Order1(arrItems,idLocation)
	
		$$$Order2(arrItems,idLocation,idItem)
		
 			//write "Deletando a linha ["_idLocation_","_idItem_"]: "		
 			write $$$Text("MED00091")_" ["_idLocation_","_idItem_"]: "		
			set strStatus = $$$Kill("VARSESAlertaLinha",idLocation_$$$COMMA_idItem)
			if $$$ISOK(strStatus) {
				write "Ok",!
				set intLinhasDeletadasOk = intLinhasDeletadasOk + 1
			} else {
				write $$$Text("MED00092"),!  ;Erro
				set intLinhasDeletadasErro = intLinhasDeletadasErro + 1
			}		
		$$$End
	$$$End
 
	//write !,!,"Linhas deletadas com sucesso: "_intLinhasDeletadasOk,!
	write !,!,$$$Text("MED00093")_intLinhasDeletadasOk,!
	//write "Linhas não deletadas por erro: "_intLinhasDeletadasErro
	write $$$Text("MED00094")_intLinhasDeletadasErro
 
	quit 
 
ImportarAlertaLinhas()
 
	new idLocation, idItem, strStatus, intLinhasSalvasOk, objLocation,
		intLinhasSalvasErro, blnStorageLocation, objItem, idItemStatus
	
	kill ^VARSESTempListImpAlerta
	
	$$$VAR
	
	set intLinhasSalvasOk   = 0
	set intLinhasSalvasErro = 0
	
	//write "Criando as linhas de alerta.",!!
	write $$$Text("MED00095"),!!
 
	// Verificando os itens com autorização.
 	//write "Verificando os itens com autorização... ",!
 	write $$$Text("MED00096"),!
	$$$Order2(^INDRPITEM,YM,idLocation)
	
			$$$Order3(^INDRPITEM,YM,idLocation,idItem)
	
			// O item é considerado autorizado se existir um registro para ele no INDRPItem.
			continue:($data(^VARSESAlertaLinha(YM, idLocation, idItem, 1)))
 	
 			// Verificando se está ativo.
 			set objItem 	 = $get(^INART(YM, idItem, 1))
 			set idItemStatus = $piece(objItem, Y, 66)
 	
 			continue:(idItemStatus '= 0) ; 0 = item ativo.
 	
 			set ^VARSESTempListImpAlerta(idLocation, idItem) = ""
			
		$$$End	
	$$$End
	
	// Verificando os itens com movimentaçãoz.
 	//write "Verificando os itens não autorizados com movimentação... ",!
 	write $$$Text("MED00097"),!
	$$$Order3(^WWW0121,0,YM,idLocation)
	
		set objLocation = $get(^WWW0121(0, YM, idLocation, 1))
 
		// Não há necessidade de verificar os locais que não são de armazenagem.
		set blnStorageLocation = $piece(objLocation, Y, 24)
		continue:'blnStorageLocation
 
		$$$Order2(^INART,YM,idItem)
		
			// Pular os itens que já foram considerados como Ok na verificação dele ser ativo.
			continue:($data(^VARSESTempListImpAlerta(idLocation, idItem)))
 
			// O item é considerado como ativo se existir um registro para ele no INDRPItem.
			continue:($data(^VARSESAlertaLinha(YM, idLocation, idItem, 1)))
			
			// Pular se não existe movimentação para o item.
			continue:'($$getExisteMovimentacao^VARSESINReq(idLocation, idItem))
	
			set ^VARSESTempListImpAlerta(idLocation, idItem) = ""
	
		$$$End
	
	$$$End
	
	// Salvando os itens/locais identificados.
 	//write "Salvando os itens/locais identificados... ",!
 	write $$$Text("MED00098"),!
	$$$Order1(^VARSESTempListImpAlerta,idLocation)
	
		$$$Order2(^VARSESTempListImpAlerta,idLocation,idItem)
		
 			//write "Salvando a linha ["_idLocation_","_idItem_"]: "		
 			write $$$Text("MED00099")_" ["_idLocation_","_idItem_"]: "		
			set strStatus = $$$Save("VARSESAlertaLinha",idLocation_$$$COMMA_idItem,"~~",$$$YES)
			if $$$ISOK(strStatus) {
				write "Ok",!
				set intLinhasSalvasOk = intLinhasSalvasOk + 1
			} else {
				//write "Erro",!
				write $$$Text("MED00092"),!  ;Erro
				set intLinhasSalvasErro = intLinhasSalvasErro + 1
			}
			
		
		$$$End
	
	$$$End
 
	//write !,!,"Linhas salvas com sucesso: "_intLinhasSalvasOk,!
	write !,!,$$$Text("MED00100")_intLinhasSalvasOk,!
	//write "Linhas não salvas por erro: "_intLinhasSalvasErro
	write $$$Text("MED00101")_intLinhasSalvasErro
 
	quit $$$YES
 
GetTipoMovimentacao(pidItem, pidLocation)
 
	new objItemConfiguration
 
	// Pegando do DRP Item Master.
	set objItemConfiguration = $get(^INDRPITEM(YM, pidLocation, pidItem, 1))
 
	quit $piece(objItemConfiguration, Y, 5)
	
 
EditaObservacoesComite()
	
	// Rotina chamada na regra de customização no campo Observações (Comitê Gestor) do alerta.
	// Valida no cadastro de usuários se o usuário pode editar observações do Comitê Gestor no Alerta.
	// Essa validação não pôde ser feita via perfil de acesso, pois as permissões são dadas a usuários específicos com perfis de acesso diferentes.
 
	// Routine call the rule of customization in field observations (Management Committee) of alert. 
	// Validate the registration of users if the user can edit comments of the Management Committee in Alert. 
	// This validation could not be made via profile of access, because the permits are given to specific users with different profiles of access.
 
	new EditaObservacoesComite
	
	set EditaObservacoesComite = $piece($get(^WWW013(YM,YBED,1)),Y,127)
 
	if EditaObservacoesComite = 1 {	
		quit $$$NO
	}
		
	quit $$$YES
 
	
EditaObservacoesProgramacao()
 
	// Rotina chamada na regra de customização no campo Observações (Programação) do alerta.
	// Valida no cadastro de usuários se o usuário pode editar observações da Programação no Alerta.
	// Essa validação não pôde ser feita via perfil de acesso, pois as permissões são dadas a usuários específicos com perfis de acesso diferentes.
 
	new EditaObservacoesProgramacao
	
	set EditaObservacoesProgramacao = $piece($get(^WWW013(YM,YBED,1)),Y,128)
 
	if EditaObservacoesProgramacao = 1 {	
		quit $$$NO
	}
		
	quit $$$YES	
 
	
GetFornecedor(pidItem, pidLocation)
 
	new strFornecedores, arrFornecedores, arrAFMs, idPAM, idAFM, arrPAMs, strAFMs
	quit:pidItem="" ""
 	;if YBED = "FRANK" for i=1:1:100 hang 1
	do getFornecedores^VARSESINReq(pidItem, pidLocation, .arrFornecedores)
	do GetAFMs(pidItem, pidLocation, .arrAFMs)
 
	set strFornecedores = ""
	$$$Order1(arrAFMs,idPAM)
 
		set strAFMs = arrAFMs(idPAM)
		while strAFMs '= "" {
			
			set idAFM 	       = $piece(strAFMs, ";", 1)
			set strAFMs 	   = $extract(strAFMs, $length(idAFM) + 2, $length(strAFMs))
		
			if idAFM = "Sem Nº AFM" {
				set idFornecedor = "Sem Fornecedor"
			} else {
				set idFornecedor 	   = $select(arrFornecedores(idAFM) = "": "Sem Fornecedor", $$$YES: arrFornecedores(idAFM))
			}
			set strFornecedores    = $select(strFornecedores = "": idFornecedor,
		                          $$$YES:strFornecedores_"<BR>"_idFornecedor)
	}
	
	$$$End
 
	quit strFornecedores
	

GetDiasAbaixoPR(pidItem,pidLocation,pFormat=1)
	//Calcula há quantos dias um produto está abaixo do ponto de ressuprimento
	;pFormat = 0 - Retorna acima de 6 meses com seu valor numérico correto	
	;pFormat = 1 - Retorna acima de 6 meses como "Acima de 6 Meses"
	new idTipoEstoque, fltEF, fltPR, strNoDays, dteToday, dteLimit, dteTarget, dteAnalysis,
		fltEstoqueLocalData, fltEstoqueNUMABData, fltEstoqueGEMEXData, fltEstoqueData
 	
 	set strNoDays=""
 	//RETRIEVING FROM VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strNoDays=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,37)
		IF strNoDays'="" Q strNoDays
	}
 	
	set idTipoEstoque = $piece($get(^WWW0121(YM,YM,pidLocation,1)),Y,61)
	
	if idTipoEstoque = "FARMACIA" {
		set fltEF = $$GetEstoqueCentralFarmacia^VARSESAlertaLinha(pidItem, pidLocation)
	
	} elseif idTipoEstoque = "ALMOXARIFADO" {
		set fltEF = $$GetEstoqueCentralAlmoxarifado^VARSESAlertaLinha(pidItem, pidLocation)
	}
 
	set fltPR = $$GetPontoRessuprimento^VARSESAlertaLinha(pidItem, pidLocation)
 
	set strNoDays = ""
 
	if (fltEF >= fltPR) {
		quit strNoDays
	}
 		
	set dteToday = $piece($h,",",1)	
	set dteLimit = 61027
	
	set dteTarget = dteToday - 1
 
	for dteAnalysis = dteTarget:-1:dteLimit {
		
		if idTipoEstoque = "FARMACIA" {
			set fltEstoqueLocalData = $$GetStockAtDateFast^VARSESEstoqueHistorico(, pidItem, pidLocation, dteAnalysis)
			set fltEstoqueNUMABData = $$GetStockAtDateFast^VARSESEstoqueHistorico(, pidItem, 5070, dteAnalysis)
			set fltEstoqueGEMEXData = $$GetStockAtDateFast^VARSESEstoqueHistorico(, pidItem, 5071, dteAnalysis)
			
			set fltEstoqueData = fltEstoqueLocalData + fltEstoqueNUMABData + fltEstoqueGEMEXData
		
		} elseif idTipoEstoque = "ALMOXARIFADO" {
			set fltEstoqueData = $$GetStockAtDateFast^VARSESEstoqueHistorico(, pidItem, pidLocation, dteAnalysis)
		}		
		
		if (fltEstoqueData >= fltPR) {
			quit
		}
		
		if (strNoDays > 180) {
			if (pFormat = 1) {
				set strNoDays = "Acima de 6 meses"
			}
			quit
		}
		
		if strNoDays = "" set strNoDays = 0		
		set strNoDays = strNoDays + 1
	}
 
 
 	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,37)=strNoDays
	}
 	
	quit strNoDays
 
 
GetEstoqueCentralAlmoxarifado(pidItem,pidLocation)
 	//RETRIEVING FROM VARALERTA CACHE
 	new strStockAlmo
 	set strStockAlmo=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strStockAlmo=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,38)
		IF strStockAlmo'="" Q strStockAlmo
	}
	
	set strStockAlmo=$$GetEstoqueFisicoLocal(pidItem, pidLocation)
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,38)=strStockAlmo
	}
	
	quit strStockAlmo
 
	
GetEstoqueCentralFarmacia(pidItem,pidLocation)	
	new fltEstoqueLocal, fltEstoqueNUMAB, fltEstoqueGEMEX, fltEstoqueCentralFarmacia
 	set fltEstoqueCentralFarmacia=""
 	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set fltEstoqueCentralFarmacia=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,39)
		IF fltEstoqueCentralFarmacia'="" Q fltEstoqueCentralFarmacia
	}
	set fltEstoqueLocal = $$GetEstoqueFisicoLocal(pidItem, pidLocation)
	set fltEstoqueNUMAB = $$GetEstoqueFisicoNIAB(pidItem)
	set fltEstoqueGEMEX = $$GetEstoqueFisicoNMAC(pidItem)
	set fltEstoqueGCEAF = $$SQLGetQtdEstoque^VARTRKSQL(0,5095,pidItem)
 
	set fltEstoqueCentralFarmacia = fltEstoqueLocal + fltEstoqueNUMAB + fltEstoqueGEMEX + fltEstoqueGCEAF
 
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,39)=fltEstoqueCentralFarmacia
	} 
 
	quit fltEstoqueCentralFarmacia
	
GetStatus(pidItem)
	new objItem, itemStatus
	
	set itemStatus=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set itemStatus=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,40)
		IF itemStatus'="" Q itemStatus
	}
	
	set objItem    = $get(^INART(YM,pidItem,1))
	set itemStatus = $piece(objItem,Y,66)
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,40)=itemStatus
	} 
	
	quit itemStatus
	
GetCoberturaEstoque(pidItem)
	new fltEstoqueRede, fltCMMRede, fltCoberturaEstoque
	
	set fltCoberturaEstoque=""
	
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set fltCoberturaEstoque=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,41)
		IF fltCoberturaEstoque'="" Q fltCoberturaEstoque
	}
	
	set fltEstoqueRede = $$GetEstoqueFisicoRede(pidItem)
	set fltCMMRede	   = $$GetConsumoMedioMensalRede(pidItem)
	
	if fltCMMRede <= 0 quit 0
	if fltEstoqueRede <= 0 quit 0
	
	set fltCoberturaEstoque = $$Floor^COMUtilNum((fltEstoqueRede / fltCMMRede) * 30) //Não arredondar para cima, mesmo que seja 1,9 por exemplo.
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,41)=fltCoberturaEstoque
	} 
	
	quit fltCoberturaEstoque
	
GetCoberturaEstoqueCentral(pidItem)
	new fltEstoqueCentral, fltCMMRede, fltCoberturaEstoque
	
	set fltCoberturaEstoque=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set fltCoberturaEstoque=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,42)
		IF fltCoberturaEstoque'="" Q fltCoberturaEstoque
	}
	
	set fltEstoqueCentral = $$GetEstoqueCentralFarmacia(pidItem,5) + $$GetEstoqueCentralAlmoxarifado(pidItem,1)
	set fltCMMRede	      = $$GetConsumoMedioMensalRede(pidItem)
	
	if fltCMMRede <= 0 quit 0
	if fltEstoqueCentral <= 0 quit 0
	
	set fltCoberturaEstoque = $$Floor^COMUtilNum((fltEstoqueCentral / fltCMMRede) * 30) //Não arredondar para cima, mesmo que seja 1,9 por exemplo.
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,42)=fltCoberturaEstoque
	}
	
	quit fltCoberturaEstoque
	
	
GetDescricaoItemLink(pidItem)
	;Insere um link no campo descrição do produto para a tela de visão gerencial do produto
	new objItem, strDescricaoItem
	quit:pidItem="" ""
 	set strDescricaoItem=""
 	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strDescricaoItem=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,43)
		IF strDescricaoItem'="" Q strDescricaoItem
	}
 
	set objItem  		 = $get(^INART(YM, pidItem, 1))
	set strDescricaoItem = $piece(objItem, Y, 1)
	
	set YKEY = $piece(YKEY,",",2)
	set strDescricaoItem = "<A HREF='' class=link onClick=""subWindow('"_YAKTION_"EP=WWWFORM&amp;YFORM=VARSESConsultaGerencialProduto"_$$WWWCGI2^WWWCGI($$$YES)_"'); return false;"">"_strDescricaoItem_"</A>"
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,43)=strDescricaoItem
	}
	
	quit strDescricaoItem
	
	
GetCMMNovo(pidItem) 
	new fltCMMNovo
	quit:pidItem="" ""
	
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set fltCMMNovo=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,44)
		IF fltCMMNovo'="" Q fltCMMNovo
	}
	
  	;Apenas temporário para teste - solicitação da UAG
 	set fltCMMNovo = $piece($get(^VARSESCMMTemp(YM,pidItem,1)),Y,1)
 	set fltCMMNovo = $$^WWWTR(0,12,$$Ceiling^COMUtilNum(fltCMMNovo))
 	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,44)=fltCMMNovo
	}
 	 	 
	quit fltCMMNovo
	
GetCMMAtencaoBasica(pidItem)
	;Local de Atenção Básica = Local onde o Nível de Atenção (FREE12) = 1
	new idLocal, idNivelAtencao, fltCMML, fltCMMAtencaoBasica	
	
	set fltCMMAtencaoBasica = 0
	
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set fltCMMAtencaoBasica=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,45)
		IF fltCMMAtencaoBasica'="" Q fltCMMAtencaoBasica
	}
	set fltCMMAtencaoBasica = 0
	$$$Order5(^WWW0121s,YM,3,1,YM,idLocal)
		
		set idNivelAtencao = $piece($get(^WWW0121(YM,YM,idLocal,1)),Y,79)
		
		continue:(idNivelAtencao '= 1)
		
		set fltCMML = $$GetCMML^VARAlertaLocalLinha(idLocal,pidItem)
		set fltCMMAtencaoBasica = fltCMMAtencaoBasica + fltCMML
		
	$$$End
 	
 	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,45)=fltCMMAtencaoBasica
	}
 	
	quit fltCMMAtencaoBasica
	
GetCMMHospitalar(pidItem)
	;Local de Atenção Hospitalar = Local onde o Nível de Atenção (FREE12) = 3 ou 4
	new idLocal, idNivelAtencao, fltCMML, fltCMMHospitalar	
	
	set fltCMMHospitalar = 0
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set fltCMMHospitalar=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,46)
		IF fltCMMHospitalar'="" Q fltCMMHospitalar
	}
	set fltCMMHospitalar = 0
	$$$Order5(^WWW0121s,YM,3,1,YM,idLocal)
		
		set idNivelAtencao = $piece($get(^WWW0121(YM,YM,idLocal,1)),Y,79)
		
		continue:((idNivelAtencao '= 3) && (idNivelAtencao '= 4))
		
		set fltCMML = $$GetCMML^VARSESConsultaEstoqueItemRede(idLocal,pidItem)
		set fltCMMHospitalar = fltCMMHospitalar + fltCMML
		
	$$$End
 
 	 //SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,46)=fltCMMHospitalar
	}
 
	quit fltCMMHospitalar	
	
GetCMMAltoCusto(pidItem)
	;Local de Atenção de Alto Custo = Local onde o Nível de Atenção (FREE12) = 2
	new idLocal, idNivelAtencao, fltCMML, fltCMMAltoCusto
	
	set fltCMMAltoCusto = 0
	
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set fltCMMAltoCusto=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,47)
		IF fltCMMAltoCusto'="" Q fltCMMAltoCusto
	}
	set fltCMMAltoCusto=0
	
	$$$Order5(^WWW0121s,YM,3,1,YM,idLocal)
		
		set idNivelAtencao = $piece($get(^WWW0121(YM,YM,idLocal,1)),Y,79)
		
		continue:(idNivelAtencao '= 2)
		
		set fltCMML = $$GetCMML^VARSESConsultaEstoqueItemRede(idLocal,pidItem)
		set fltCMMAltoCusto = fltCMMAltoCusto + fltCMML
		
	$$$End
 
 	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,47)=fltCMMAltoCusto
	}
 
	quit fltCMMAltoCusto
	
GetNivelAtencao(pidItem)
	;Pega o nivel de atencao do produto
	; 
	new objItem, idGrupo
	quit:pidItem="" ""
	set strNivelAtencao=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strNivelAtencao=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,48)
		IF strNivelAtencao'="" Q strNivelAtencao
	}
	set objItem  = $get(^INART(YM, pidItem, 1))
	
	;XXYY: XX=grupo, YY=sub-grupo
	set strNivelAtencao  = $$$INARTFREE25(objItem) //$piece(objItem, Y, 30)
 
 	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,48)=strNivelAtencao
	}
 
	quit strNivelAtencao
	
	
GetDiasZerado(pidItem,pidLocation)
	//Calcula há quantos dias um produto está zerado em um determinado local
	quit:(( pidItem = "") || (pidLocation = "") ) ""
	
	new date, qtyEstoque, strNoDias, qtyCurrentEstoque, limite
	set strNoDias=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strNoDias=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,49)
		IF strNoDias'="" Q strNoDias
	}
	set qtyCurrentEstoque = $$GetEstoqueFisicoLocal^VARSESAlertaLinha(pidItem, pidLocation)
	
	if (qtyCurrentEstoque > 0) {
		quit 0  ;zero dias
	}	
	
	//Roda dias para saber há quantos está zerado
	set date      = $piece($horolog,",",1) ;hoje
	set limite    = date - 180
	set strNoDias = 0
		
	while (date >= limite) {  ; Limite = 6 meses (180 dias para trás)
			
		set qtyEstoque = $$GetStockAtDateFast^VARSESEstoqueHistorico("",pidItem,pidLocation,date)
			
		if (qtyEstoque = 0) {
			set strNoDias = $i(strNoDias)				
		
		} elseif (qtyEstoque > 0) {
			quit
		}
		
		set date = date - 1 ;decrescendo
	}
	
 
	if (strNoDias >= 180) {
		set strNoDias = "Acima de 6 meses"
	}
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,49)=strNoDias
	}
	
	quit strNoDias
	
GetDivulgar(pidItem)
 
	new objItem, idDivulgar
	quit:pidItem="" ""
	
	set objItem   = $get(^INART(YM, pidItem, 1))
	set idDivulgar  = $piece(objItem, Y, 410)
 	if idDivulgar=0 set idDivulgar=""
	quit idDivulgar
	
GetAtas(pidItem)
	quit:(( pidItem = ""))
	new strAta
	set strAta=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strAta=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,64)
		IF strAta'="" Q strAta
	}
	set s]]><![CDATA[trAtaData=$$GetAtaData(pidItem)
	if strAtaData'="" {
		for x=1:1:$length(strAtaData,";") {
			if strAta="" {
				set strAta=$piece($piece(strAtaData,";",x),"||",1)
			}else {
				set strAta=strAta_";"_$piece($piece(strAtaData,";",x),"||",1)
			} 
		}
	}
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,64)=strAta
	}
	
	quit strAta
	
GetSaldoAtas(pidItem)
	quit:(( pidItem = ""))
	new strAta
	set strAta=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strAta=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,65)
		IF strAta'="" Q strAta
	}
	set strAtaData=$$GetAtaData(pidItem)
	if strAtaData'="" {
		for x=1:1:$length(strAtaData,";") {
			if strAta="" {
	
				set strAta=$$^WWWTR(0,12,$piece($piece(strAtaData,";",x),"||",2))
			}else {
				set strAta=strAta_"<BR>"_$$^WWWTR(0,12,$piece($piece(strAtaData,";",x),"||",2))
			} 
		}
	}
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,65)=strAta
	}
	
	quit strAta
	
GetVigenciaAtas(pidItem)
	quit:(( pidItem = ""))
	new strAta,strAtaData
	set strAta=""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set strAta=$piece($get(^VARTempAlertaLocalCache(YBED,pidItem)),Y,66)
		IF strAta'="" Q strAta
	}
	
	set strAtaData=$$GetAtaData(pidItem)
	if strAtaData'="" {
		for x=1:1:$length(strAtaData,";") {
			if strAta="" {
				set strAta=$ZD($piece($piece(strAtaData,";",x),"||",3),4)
			}else {
				set strAta=strAta_"<BR>"_$ZD($piece($piece(strAtaData,";",x),"||",3),4)
			} 
		}
	}
	
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pidItem),Y,66)=strAta
	}
	
	quit strAta
	
GetAtaData(pItem)
	new returnString, idAta, Saldo, dteValidade
	
	set returnString = ""
	set arraySaldo   = ""
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {
		set returnString=$piece($get(^VARTempAlertaLocalCache(YBED,pItem)),Y,67)
		IF returnString'="" Q returnString
	}
	
	set mySQL = "SELECT Ata.CodATA as Ata,"
	set mySQL = mySQL_" $$SQLGetSaldoItemQuant^VARAtaLinha(Ata.CodAta,Linha.LinhadaAta) as Saldo,"
	set mySQL = mySQL_" $$GetValidadeAta^VARAta(Ata.CodAta,Linha.LinhadaAta) as DataValidade"
	set mySQL = mySQL_" FROM VARAta Ata"
	set mySQL = mySQL_" LEFT JOIN VARAtaLinha Linha"		
	set mySQL = mySQL_" ON Linha.CodAta = Ata.CodAta"
	set mySQL = mySQL_" WHERE UPPER(Ata.Status) = 1"
	set mySQL = mySQL_" AND Produto='"_pItem_"'"
	set mySQL = mySQL_" AND $$GetSituacaoItem^VARAtaLinha(Ata.CodAta,Linha.LinhadaAta,2) >= 5"
	set mySQL = mySQL_" ORDER BY $$GetValidadeAta^VARAta(Ata.CodAta,Linha.LinhadaAta)"
	
	set tRs = ##class(%Library.ResultSet).%New()
	set tRs.RuntimeMode = "0"	
	do tRs.Prepare(mySQL) 
	do tRs.Execute()
    
    while tRs.Next() {
	    set idAta = ""
	    set Saldo = ""
	    set idAta = tRs.Data("Ata")
	    set Saldo = tRs.Data("Saldo")
	    set dteValidade = tRs.Data("DataValidade") 
	    
	    if returnString = "" {
		    set returnString = idAta_"||"_Saldo_"||"_dteValidade
	    } else {
	    	set returnString = returnString_";"_idAta_"||"_Saldo_"||"_dteValidade
	    }
    }
    
    if $IsObject(tRs) {
		Do tRs.Close()
	}
	//SAVING IN VARALERTA CACHE
	if $$IsFormInBuffer^VARSESAlertaLinha($get(YFORM))=1 {//Get By Buffer
		set $piece(^VARTempAlertaLocalCache(YBED,pItem),Y,67)=returnString
	}
    quit returnString
    
GetPregaoData(pidItem,pblnExcluirFracassados=$$$YES)
	;------------------------------------------------------------------------
	; Parâmetros
	; 	pidItem: Código do Produto
	;	pblnExcluirFracassados: Excluir ou não os pregões desertos e fracassados
	;------------------------------------------------------------------------
	quit:(pidItem = "") ""
	
	new returnString, idPregao, idPregaoLinha, objPregaoLinha, sitItemPregao, chavePregao,
		chaveAta, idAta, idAtaLinha
	
	set returnString = ""
	
	set idAta 		 = ""
	set idAtaLinha 	 = ""
	
	$$$Order4(^VARPregaoLinhas,YM,3,pidItem,idPregao)	
		$$$Order5(^VARPregaoLinhas,YM,3,pidItem,idPregao,idPregaoLinha)
	
			set objPregaoLinha = $get(^VARPregaoLinha(YM,idPregao,idPregaoLinha,1))
			set sitItemPregao  = $$$VARPregaoLinhaSituacaodoPregao(objPregaoLinha)
			
			;Só considerar pregões com a situação = $$$AguardandoAceitacao ou $$$AceitoHabilitado
			if (pblnExcluirFracassados = $$$YES) {
				continue:( (sitItemPregao = $$$Deserto) || (sitItemPregao = $$$FracassadoPorPreco) || (sitItemPregao = $$$FracassadoPorDoc) )
			}
			
			;Se o pregão está associado a uma ata
			set chavePregao = idPregao_$$$COMMA_idPregaoLinha
			if $$isItemPregaoAssociadoAta^VARPregaoLinha(chavePregao) {
				
				set chaveAta = $$getAtaFromPregao^VARPregaoLinha(chavePregao)
				
				set idAta 	   = $$$KEY1(chaveAta)
				set idAtaLinha = $$$KEY2(chaveAta)				
				
				;Se a ata não tiver saldo disponível, o pregão em questão deve ser desconsiderado
				set saldoAta = +$$GetSaldoItemQuant^VARAtaLinha(chaveAta)
				continue:(saldoAta <= 0)
			}
			
			if returnString = "" {
				set returnString = idPregao_"||"_idPregaoLinha_"||"_sitItemPregao_"||"_idAta_"||"_idAtaLinha
			} else {
		    	set returnString = returnString_";"_idPregao_"||"_idPregaoLinha_"||"_sitItemPregao_"||"_idAta_"||"_idAtaLinha
			}
	
		$$$End
	$$$End    
	
	quit returnString	
]]></Routine>
</Export>