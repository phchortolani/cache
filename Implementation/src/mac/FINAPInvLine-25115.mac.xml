<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvLine
	
#include FINConst
#include WWWConst
#include COMSYS
#include INConst
	
#define LineIndex "^CacheTemp(YUSER,""FINAPInvLines"")"
#define VisibleColumn(%blnIncTax,%blnTotals) $select(%blnIncTax&&%blnTotals:$$$FldFINAPInvLineInvoiceTotalIncludingTax,%blnIncTax&&'%blnTotals:$$$FldFINAPInvLineInvoiceEachIncTax,'%blnIncTax&&%blnTotals:$$$FldFINAPInvLineInvoiceTotal,'%blnIncTax&&'%blnTotals:$$$FldFINAPInvLineInvoiceEach)
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1_"^FINAPInvLine("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1) 		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	; History:
	; 05-Mar-2005	JW		Removed ^WWWTR - now in PopulateDataField^COMUtils
	;-------------------------------------------------------------------------------
	
DefaultVariableInput(pCol,YKEY,YFELD) 
	;-------------------------------------------------------------------------------
	; Determines the values for manual fields
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 07-Sep-2005	RPW		SR13425: Call the CalculateTotalDS routine
	; 03-Aug-2005	shobby	SR11983 Created
	;-------------------------------------------------------------------------------
	new fltAdditional,strValue
	
	set strValue = ""
	if pCol = 35 {               ; FINAPInvLine F35 "Total after Discounts and Surcharges"
		set strValue = $$CalculateTotalDS(YKEY,YFELD)
	}
	quit strValue
	
	
CalculateTotalDS(pstrYKEY,pstrYFELD) 
	;-------------------------------------------------------------------------------
	; Caclulate the line total minus the additional charges
	;
	; Params:
	; pstrYKEY : The key of the invoice line
	; pstrYFELD: The data for the line
	;
	; Returns:
	;
	; History:
	; 09-Sep-2005	shobby	Code Check
	; 07-Sep-2005	RPW		SR13425: Created
	;-------------------------------------------------------------------------------
 	new fltAdditional,strValue
 	
	set fltAdditional = $$GetAdditionalCharges^FINAPInvCharge2(pstrYKEY,pstrYFELD)
	set strValue      = $$$FINAPInvLineInvoiceTotal(pstrYFELD)
	set strValue      = $$$FCAdd(strValue,fltAdditional)
 
	quit strValue
 
	
Receive(pYKEY)
	;-------------------------------------------------------------------------------
	; Load the receipt associated with a line in a separate window.
	;
	; Called By: OnDisplayRightClickMenu^FINAPInvLineEvents   [$$$AddToMenuList]
	;
	; Returns:
	;
	; History:
	; 02-Oct-2009	GRF		SR16361: Implement changed code
	; 17-Sep-2009	GRF		SR16361: Remove INWEAUF(VOR) processing; use
	; 							FINAPInvMatchCache
	; 17-Mar-2009	GRF		SR16424: Not processing index properly
	; 24-Feb-2005	Shobby	Created
	;-------------------------------------------------------------------------------
	new idInvMatch,idReceipt,objFINAPInvLine,objInvMatch
	
	$$$LogR("Receive",pYKEY)
	
	set objFINAPInvLine = $$GetYFELDEX^COMGridEdit31G("",pYKEY)
	set idInvMatch      = $$$FINAPInvLineCacheLink(objFINAPInvLine)
	if idInvMatch'="" {
		set objInvMatch = $get(^FINAPInvMatchCache(0,idInvMatch,1))
		set idReceipt   = $$$FINAPInvMatchCacheReceiptNumber(objInvMatch)
		
		if idReceipt'="" {
			if $data(^INRECSummary(0,idReceipt)) {
				do GoToForm^COMUtilForm("INReceipt",idReceipt,,,$$$YES)
			} else {
				do GoToForm^COMUtilForm("INREC",idReceipt,,,$$$YES)
			}
		}
	}
	quit
	
	
Order(pYKEY)
	;-------------------------------------------------------------------------------
	; Load the order associated with a line in a separate window.
	;
	; Returns:
	;
	; History:
	; 24-Feb-2005	Shobby	Created
	;-------------------------------------------------------------------------------
	new idLine,idOrder,objFINAPInvLine
	
	if $get(pYKEY)'="" {
		set objFINAPInvLine = $$GetYFELDEX^COMGridEdit31G("",pYKEY)
		set idOrder = $$$KEY1($$$FINAPInvLineOrderNumber(objFINAPInvLine))
		set idLine  = $$$KEY2($$$FINAPInvLineOrderNumber(objFINAPInvLine))
		if (idOrder'="") && (idLine'="") {	
			//do WindowOpen("INAUFP",idOrder_","_idLine)
			do GoToForm^COMUtilForm("INAUFP",idOrder_","_idLine,,,$$$YES)
		}
	}
	quit
	
	
OnBeforeDisplayCombo(pYKEY,pYFELD,pYCOL,&pSUCH)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 06-Apr-2005	PO		SR11349 support FC Var Post
	;-------------------------------------------------------------------------------
	new blnFlag
	
	set blnFlag = $$$NO
	if pYCOL=20 {
		do ComboValidUnits^FINAPInvLineDisplay(pYKEY,pYFELD,.pSUCH)
		set blnFlag = $$$YES
	
	} elseif (pYCOL=26) || (pYCOL=27) || (pYCOL=28) || (pYCOL=29) || (pYCOL=34) {
		do ComboValidVariances^FINAPInvLineDisplay(pYKEY,pYFELD,pYCOL,.pSUCH)
		set blnFlag = $$$YES
	}
	quit blnFlag
	
	
CanEffectInventory()
	;-------------------------------------------------------------------------------
	;
	;-------------------------------------------------------------------------------
	new blnAllowInvMod,objGenSetup
	
	set objGenSetup    = $get(^FINGeneralSetup(0,0,1))
	set blnAllowInvMod = +$$$FINGeneralSetupAllowInventoryModificatio(objGenSetup)
	
	quit blnAllowInvMod
	
	
OnAfterDataFields(pYKEY,pintYSEITE)
	;-------------------------------------------------------------------------------
	; Does the after data fields for the FINAPInvLine grid.
	;
	; Returns:
	;
	; History:
	; 25-Aug-2005	PO		SR12965: Stopped using old UpdateTax code and replaced
	;                       	it with SwitchFields, was unnecessarily and
	;                       	incorrectly calculating Tax Total.
	; 18-Jul-2005	RPW		SR11983: Update the Discount Tax here as well.
	; 17-Jun-2005	JW		SR12484: Check cache status
	; 03-May-2005	Paul K	Added Update Tax call. SR:12231
	; 17-Mar-2005	JW		SR11916: Headers now calculated from Grid End.
	; 11-Mar-2005	JW		Added page check.
	; 12-Jan-2005	shobby	Code Check.
	; 05-Jan-2005	RobertW	Modified to handle the grid toggling
	;-------------------------------------------------------------------------------
	new idVisibleClassField,strStatus
	
	if ($get(pintYSEITE)=1) do ToggleHeader()
	set idVisibleClassField = $$SwitchFields^FINAPInvLineTax2()
	
	$$$GRIDHideShowColumns($$$GetFormField("FINAPInvLine",$$$FldFINAPInvLineInvoiceEach),idVisibleClassField'=$$$FldFINAPInvLineInvoiceEach)
	$$$GRIDHideShowColumns($$$GetFormField("FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal),idVisibleClassField'=$$$FldFINAPInvLineInvoiceTotal)
	$$$GRIDHideShowColumns($$$GetFormField("FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax),idVisibleClassField'=$$$FldFINAPInvLineInvoiceEachIncTax)
	$$$GRIDHideShowColumns($$$GetFormField("FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax),idVisibleClassField'=$$$FldFINAPInvLineInvoiceTotalIncludingTax)
	
	set strStatus = $$CurrentStatus^FINAPInvMatchCache(pYKEY)
	if $$$ISERR(strStatus) {
		$$$Alert(strStatus)
	}
	quit
	
	
ToggleHeader()
	;-------------------------------------------------------------------------------
	; Toggle the header
	;
	; Returns:
	;
	; History:
	; 11-Mar-2005	JW		Added page check.
	;-------------------------------------------------------------------------------
	new strDelimiter,strToggle
	
	set strToggle    = $$$FINAPInvToggleHeader($$$GRIDYFELDContainer)
	set strDelimiter = $extract(strToggle,1)
	
	if $piece(strToggle,strDelimiter,2)="none" {
		write "SetGridHeight("_$piece(strToggle,strDelimiter,3)_");"
	}
	quit
	
	
UpdateContainer(pidField="",pobjGrid,pstrHeadYFELD="",pstrHeadYMFELD="")
	;-------------------------------------------------------------------------------
	; Calculates Header Totals
	;
	; Returns:
	;
	; History:
	; 22-Dec-2010	GRF		SR17639: call javascript function UpdateFieldFormat
	;							rather than ResetFieldFormat
	; 21-May-2009	GRF		adhoc: Variable Prefix - enumRound
	; 31-Jan-2006	SS		SR13497: Update discount fields
	; 25-Nov-2005	RPW		SR13887: Added the Closed field to the list of
	; 							acceptable container update fields
	; 30-Sep-2005	JW		SR11573: Param is now class field not form col
	; 19-Sep-2005	RPW		SR13524: Round the Variance amount so we don't get -0.00
	; 							(it's something line -0.001)
	; 09-Sep-2005	RPW		SR13456: Added check for tax inc/ex and pass to
	; 							CalculateHeaderTotalsLoop
	; 07-Sep-2005	RPW		SR13446: uncommented two FCUpdate calls.
	; 22-Jul-200	JW		SR12615: Updated calls to UpdateFieldFormat
	; 23-Jun-2005	PO/PK	SR12768: Do not use FCUpdate on strCalcTotal
	; 17-Jun-2005	PO		Make FC variance in partial FC format ie. Amount@Amount
	; 							so that value displayed in FC and base modes
	; 26-Apr-2005	Paul K	SR12188: Set total tax field.
	; 11-Apr-2005	RPW		SR11836: Support Using the header exchange rate field
	; 							for the currency conversions.
	; 06-Apr-2005	PO		SR11349: Support FC Var Post field
	; 16-Mar-2005	JW		SR11916: Created (Replaces CalculateHeaderTotals)
	;-------------------------------------------------------------------------------
	new blnForeignCurrency,blnIncTax,curTaxAmount,enumBGColor,enumRound,fltRate,objWWW012
	new strActual,strBGColor,strCalcTotal,strContainer,strFINAPInv,strFontColor,strINVPrice
	new strINVQ,strKey,strOrders,strOther,strOtherTtl,strRECQ,strVARFC,strVarianceTotal
	
	$$$LogR("UpdateContainer",pidField)
	
	// Update if not on blur, or if blurred from specified cells.
	if (pidField="")||($listfind($listbuild($$$FldFINAPInvLineInvoiceQuantity,$$$FldFINAPInvLineInvoiceEach,$$$FldFINAPInvLineVarianceFCDPost,$$$FldFINAPInvLineInvoiceTotal,$$$FldFINAPInvLineInvoiceEachIncTax,$$$FldFINAPInvLineInvoiceTotalIncludingTax,$$$FldFINAPInvLineClosed),pidField)) { ; SR13887
		
		set blnIncTax=$$$FINAPInvLinesIncludeTax(pstrHeadYFELD)
		
		do CalculateHeaderTotalsLoop(.pobjGrid,.strRECQ,.strINVQ,.strINVPrice,.strCalcTotal,.strOther,.strOrders,.strVARFC,.curTaxAmount,blnIncTax)
		
		set blnForeignCurrency = $$IsForeignCurrency^FINAPInvCurrency()
		
		set enumRound = 1     ; Mode=1 Recalc & Round the Base amount
		if 'blnForeignCurrency {
			set fltRate = $$$FINAPInvExchangeRate($$$GRIDYFELDContainer)
		} else {
			set fltRate = 1
		}
		
		set strCalcTotal = $$$FCUpdate(strCalcTotal,fltRate,enumRound)
		set strINVQ      = $$$FCUpdate(strINVQ,fltRate,enumRound)
		set strINVPrice  = $$$FCUpdate(strINVPrice,fltRate,enumRound)
		set strOther     = $$$FCUpdate(strOther,fltRate,enumRound)
		
		set $piece(pstrHeadYMFELD,Y,10) = strCalcTotal
		set $piece(pstrHeadYMFELD,Y,11) = strINVQ
		set $piece(pstrHeadYMFELD,Y,12) = strINVPrice
		
		set ^CacheTemp3WMTotal(YUSER)=strCalcTotal
		do UpdateDiscount^FINAPInv2(strCalcTotal)
		
		set $$$FINAPInvSelectedOrders(pstrHeadYFELD) = strOrders
		
		set strVarianceTotal = 0
		set strActual        = 0
		
		if pstrHeadYFELD'="" {
			set strActual        = $$$FINAPInvActualTotal(pstrHeadYFELD)
			set strVarianceTotal = $$$FCSub(strActual,strCalcTotal)
			set strVarianceTotal = $$$FCRound(strVarianceTotal)
			set strOtherTtl      = $$$FINAPInvOtherTotal(pstrHeadYFELD)
		}
		
		set $piece(pstrHeadYMFELD,Y,14) = strVarianceTotal
		
		if $$$FCZero(strVarianceTotal) { ; strVarianceTotal=0
			if '($$$FCZero(strActual)) { ; strActual'=0 {
				do UpdateFieldFormat^COMUtils("YFINAPInvM14.style","backgroundColor","green")
				do UpdateFieldFormat^COMUtils("YFINAPInvM14.style","color","ivory")
			}
		
		} else {
		;   SR17639 vvv
			set enumBGColor = $$$WWW012FrameBodyColor(YVOR1)
			set strBGColor = $piece($get(^WWW100(0,"FARBE","EN",enumBGColor,1)),Y,1)
			if strBGColor="" set strBGColor = "white" ;SR17639.1
			do UpdateFieldFormat^COMUtils("YFINAPInvM14.style","backgroundColor",strBGColor)
			do UpdateFieldFormat^COMUtils("YFINAPInvM14.style","color","black")
		;	do ResetFieldFormat^COMUtils("YFINAPInvM14.style","backgroundColor")
		;	do ResetFieldFormat^COMUtils("YFINAPInvM14.style","color")
		} ; SR17639 ^^^
		
		set $piece(pstrHeadYMFELD,Y,15) = strOther
		set $piece(pstrHeadYMFELD,Y,35) = strVARFC_"@"_strVARFC
	}
	quit
	
	
CalculateHeaderTotalsLoop(&pobjGrid,&pstrRECQ,&pstrINVQ,&pstrINVPrice,&pstrCalcTotal,&pstrOther,&pstrOrders,&pstrVARFC,&pcurTax,pblnIncTax)
	;-------------------------------------------------------------------------------
	; Calculate the total variance of received quantity
	;
	; Returns:
	;
	; History:
	; 18-Mar-2009	GRF		Identify ByRef parameters with "&"
	; 25-Nov-2005	RPW		SR13387: If a line is not closed, ignore its variance
	; 							due to qty change
	; 21-Oct-2005	PO		SR13702: Include Tax Total in calculated total whether
	; 							or not lines are taxable.
	; 09-Sep-2005	RPW		SR13456: Get tax inc/ex flag & pass to GetAdditionalCharges
	; 19-Aug-2005	RPW		SR11983: Cleaned up the sum of the lines for rounding errors
	; 06-Apr-2005	PO		SR11349 Support FC Var Post Field
	; 29-Jan-2004 	PK		Removed the FINAPInvLineSelected Property
	; 29-Dec-2004	RPW		Modified to handle the calculated total and the other
	; 							costs fields.
	; 27-Dec-2004	Shobby	SR10061: Created
	;-------------------------------------------------------------------------------
	new arrOrders,fltAdditional,fltAmount,fltInvoice,fltInvPrice,fltInvQ,fltTotal,fltVARFC
	new idFINAPInv,idFINAPInvLine,idOrder,objFINAPInv,objFINAPInvLine
	
	set pstrRECQ      = 0
	set pstrINVQ      = 0
	set pstrINVPrice  = 0
	set pstrCalcTotal = 0
	set pstrOther     = 0
	set pstrVARFC     = 0
	set pcurTax       = 0
	
	set idFINAPInv = ""
	for {
		set idFINAPInv = $order(pobjGrid(idFINAPInv))
		quit:idFINAPInv=""
		
		set idFINAPInvLine = ""
		for {
			set idFINAPInvLine = $order(pobjGrid(idFINAPInv,idFINAPInvLine))
			quit:idFINAPInvLine=""
			
			set objFINAPInvLine = $get(pobjGrid(idFINAPInv,idFINAPInvLine))
			set pstrRECQ	  = pstrRECQ+$$GetRECQ^FINAPInvLineGet(objFINAPInvLine)
			if $$$FINAPInvLineClosed(objFINAPInvLine) { ; SR13887
				set fltInvQ   = $$GetINVQ(objFINAPInvLine)
				set pstrINVQ  = $$$FCAdd(pstrINVQ,fltInvQ)
			}
			set fltAdditional = $$GetAdditionalCharges^FINAPInvCharge2(idFINAPInv_","_idFINAPInvLine,objFINAPInvLine,pblnIncTax)
			set pstrOther	  = $$$FCAdd(pstrOther,fltAdditional)
			set fltInvPrice   = $$GetINVPrice(objFINAPInvLine)
			set pstrINVPrice  = $$$FCAdd(pstrINVPrice,fltInvPrice)
			
			set fltTotal      = $$$FINAPInvLineInvoiceTotal(objFINAPInvLine)
			if idFINAPInvLine="Total" set fltTotal=0
 			set pstrCalcTotal = $$$FCAdd(pstrCalcTotal,fltTotal)
 			set pstrCalcTotal = $$$FCAdd(pstrCalcTotal,fltAdditional)
 			
 			set fltInvoice    = $$$FINAPInvLineInvoiceTotal(objFINAPInvLine)
 			set fltAmount     = $$$FCSub(fltTotal,fltInvoice)
			set pcurTax		  = $$$FCAdd(pcurTax,fltAmount)
			
			if $$$FINAPInvLineVarianceFCDPost(objFINAPInvLine)'=$$$EnumFINAPVARIANCEPOSTSupplier {
				set fltVARFC  = $$GetVARFC^FINAPInvLineGet(objFINAPInvLine)
				set pstrVARFC = $$$FCAdd(pstrVARFC,fltVARFC)
			}
			do GetOrderDetails^FINAPInvLineGet(objFINAPInvLine,.idOrder)
			if idOrder'="" set arrOrders(idOrder) = ""
		}
	}
	set pstrCalcTotal = $$$FCRound(pstrCalcTotal)
	set pstrOrders    = $$ArrayToString^COMUtilStr(.arrOrders,";")
	set objFINAPInv   = $$$GRIDYFELDContainer
	set pstrCalcTotal = $$$FCAdd(pstrCalcTotal,$$$FINAPInvTaxTotal(objFINAPInv))
	
 	quit
	
	
SetLineDefaults(pobjGrid)
	;-------------------------------------------------------------------------------
	; Reset quantity and invoice each. (Will trigger blur on these fields to update grid stuff)
	;
	; History:
	; 25-Aug-2005	PO		SR12965: Replaced UpdateTax with call to PopulateDataField
	;                           for Tax Total and replaced UpdatePriceFields with
	;                           CalculateAmountsFromInvoiceEach, ALSO using in
	;                           memory header and not the saved header
	; 05-Aug-2005	PO		SR13197: Calling UpdateTax to populate TaxTotal on
	; 							header, simply a display issue.
	; 29-Jun-2005	PO		SR12797: Set exchange rate for Invoice Each to current
	; 							amount, not order eachs rate.  And call
	; 							UpdatePriceFields^FINAPInvLineTax to ensure tax is
	; 							all correct.
	; 20-Jun-2005	PK		Added UpdateContainer call to set totals.SR:12496
	; 07-Apr-2005	RPW		SR11836: Modified OpenQuantity to UnmatchedQuantity,
	; 							removed duplicate line
	; 28-Feb-2005	JW		Unnecessary to loop through twice now.
	; 29-Jan-2005 	PK		Removed the FINAPInvLineSelected Property
	; 18-Dec-2004	RPW		Modified to work locally and call grid routines
	; 							for grid data.
	; 29-Dec-2004	RPW		Modified to handle the calculated total and 
	; 							the other costs fields.
	; 27-Dec-2004	Shobby	Created (SR10061)
	;-------------------------------------------------------------------------------
	new arrLines,idFINAPInv,idFINAPInvLine,idLine,objFINAPInvLine,objGrid,strYKEY
 
	merge objGrid = pobjGrid
 
	set idFINAPInv = ""
	for {
		set idFINAPInv = $order(pobjGrid(idFINAPInv))
		quit:idFINAPInv=""
		
		set idFINAPInvLine = ""
		for {
			set idFINAPInvLine = $order(pobjGrid(idFINAPInv,idFINAPInvLine))
			quit:idFINAPInvLine=""
			
			set objFINAPInvLine = $get(pobjGrid(idFINAPInv,idFINAPInvLine))
			
			set $$$FINAPInvLineInvoiceQuantity(objFINAPInvLine) = $$$FINAPInvLineUnmatchedQuantity(objFINAPInvLine)
			set $$$FINAPInvLineInvoiceEach(objFINAPInvLine)     = $$$FCUpdate($$$FINAPInvLineOrderEach(objFINAPInvLine),$$$FINAPInvExchangeRate(pobjGrid),1)
			do CalculateAmountsFromInvoiceEach^FINAPInvLineTax2(pobjGrid,.objFINAPInvLine)
			set pobjGrid(idFINAPInv,idFINAPInvLine) = objFINAPInvLine
			do OnGridUpdate^COMGridEdit31Events(idFINAPInvLine,pobjGrid(idFINAPInv,idFINAPInvLine),objGrid(idFINAPInv,idFINAPInvLine))
		}
	}
 	
	do PopulateDataField^COMUtils("FINAPInv",$$$FldFINAPInvTaxTotal,$$CalculateTotalTax^FINAPInvLineTax2(.objGrid),,.objGrid,$$$NO)
	do UpdateContainer^COMGridEdit31Interface()
	quit
	
	
SplitVariancePosting(pROW,pYFELD,pVARType,YKEY,pCOL)
	;-------------------------------------------------------------------------------
	; Sets up/Displays the variance posting screen. It retrieves the amounts from 
	; grid for the INV-$, INV-Q and OTH-$ fields. The quantity diff is calculated 
	; directly. It then shows the form FINAPInvLineVariance
	;
	; Returns:
	;
	; History:
	; 21-May-2009	GRF		adhoc : use elseif rather than repeated ifs (better
	; 							performance)
	; 07-Apr-2005	shobby	SR10549: Passed the Column number into the WWWDATEN
	; 							routine.  Required because Form Column does not
	; 							always match Class Column.
	; 07-Apr-2005	RPW		SR11836: Modified OpenQuantity to UnmatchedQuantity,
	; 							removed duplicate line
	; 28-Feb-2005	RPW		SR11684: Changed the heights - new button being added.
	; 01-Feb-2005	RPW		Use the methods to calculate the values instead of
	; 							screen scraping.
	; 19-Jan-2005	RPW		SR10061: Use multiple forms instead of one.
	; 14-Jan-2005	shobby	SR10061: Fixed window size, controls are now disabled
	; 							rather than hidden
	; 07-Jan-2005	RPW		Removed Trim, ConvertNumber handles this for us.
	; 06-Jan-2005	RPW		Modified to allow for nice sizing of dialog.
	; 05-Jan-2005	RPW		Created (SR10061)
	;-------------------------------------------------------------------------------
	new blnCanEffect,blnShowInv,fltQOH,idItem,intHeight,intOption,intQtyDiff,intWidth
	new strDiffs,strInvd,strInvq,strKey,strOthd,strScreen,URL,YHTML
	
	// We must be coming from a cell.
	
	if $get(pROW)'="" {
		set intQtyDiff = 0
		if (pVARType="TV") || (pVARType="IQ") {
			set intQtyDiff = $$$FINAPInvLineInvoiceQuantity(pYFELD)-$$$FINAPInvLineUnmatchedQuantity(pYFELD)
		}
		
		set blnCanEffect = $$CanEffectInventory()
		
		set strInvq = "0.0"
		set strInvd = "0.0"
		set strOthd = "0.0"
		
		if (pVARType="TV") || (pVARType="IQ") {
			set strInvq = $$GetINVQ(pYFELD)
		}
		
		if (pVARType="TV") || (pVARType="ID") {
			set strInvd = $$GetINVPrice(pYFELD)
		}
		
		if (pVARType="TV") || (pVARType="OD") {
			set strOthd = $$GetAdditionalCharges^FINAPInvCharge2(YKEY,pYFELD)
		}
		
		set strOthd    = strOthd+strInvd
		set strDiffs   = "'"_strInvq_Y_intQtyDiff_Y_strOthd_"'"
		set blnShowInv = $$$FINGeneralSetupAllowInventoryModificatio($get(^FINGeneralSetup(0,0,1)))
		set fltQOH     = $$GetSOHForItem^FINAPInvLineUtils($$$FINAPInvLineItem(pYFELD))
		
		; Set up and show the form.
		set strKey = $get(^WWWDATEN(0,+$HOROLOG,YUSER,YFORM,"V","REFERENCEKEY",pROW,1))
		set strKey = $translate(strKey,"""","")_","_pVARType
		set YHTML  = ""
 
		set intOption = $select(pVARType="TV":1,pVARType="IQ":2,pVARType="ID":3,pVARType="OD":3,1:"")
		set intOption = intOption_blnShowInv
		
		; FIXME : (minor) if blnShowInv is ever 0 rather than "" will not pick up options 10, 20, 30
		;         - why not force true boolean and match accordingly? <GRF>
		
		if intOption=1 {
			set strScreen = ""
			set intHeight = 180
			set intWidth  = 524
		
		} elseif intOption=11 {
			set strScreen = ""
			set intHeight = 214
			set intWidth  = 528
		
		} elseif intOption=2 {
			set strScreen = "2"
			set intHeight = 122
			set intWidth  = 420
		
		} elseif intOption=21 {
			set strScreen = "2"
			set intHeight = 122
			set intWidth  = 420
		
		} elseif intOption=3 {
			set strScreen = "3"
			set intWidth  = 416
			set intHeight = 148
		
		} elseif intOption=31 {
			set strScreen = "3"
			set intWidth  = 416
			set intHeight = 174
		}
		
		set URL = YAKTION_"EP=WWWFORM&YFORM=FINAPInvLineVariance"_strScreen_"&YUSER="_YUSER_"&YBED="_YBED_"&YTRAKT="_YTRAKT_"&YUCI="_$GET(YUCI)_"&YM="_YM_"&YLFDAT=Y"_YFORM_"D"_YLFN_"&YLFFORM="_YFORM_"&YHTMFORM1="_YHTMFORM_"&YKEY="_strKey_"&YOPT="_intOption_"&GALLOWINVMOD="_blnCanEffect
		set YHTML = YHTML_" var retval = EventValue("""_YUCI_""","""_YUSER_""","""_YFORM_""",""FIX"",""COMGridEdit31R"",""WWWDATEN"",""6"","""_YFORM_Y_"D"_Y_YLFN_Y_pROW_Y_pCOL_""");"
		set YHTML = YHTML_" window.showModalDialog("""_URL_"&YSEC=""+new Date().getSeconds()+""&GDIFFS=""+"_strDiffs_",""Variance Disbursement"",""DialogWidth: "_intWidth_"px; DialogHeight: "_intHeight_"px; resizable: no; status: no"");"
		set YHTML = YHTML_" EventValue("""_YUCI_""","""_YUSER_""","""_YFORM_""",""FIX"",""OnScreenUpdateStyle^FINAPInvLine"",""Y"_pROW_"_"_pCOL_""",""6"",""1"");"
		
		write YHTML
	}
	quit
	
	
OnScreenUpdateStyle(pstrYLFDAT,pblnUpdateMe)
    ;-------------------------------------------------------------------------------
    ; Allow a cell to cause updates to happen including to itself if needed
    ;
    ; Returns:
    ;
    ; History:
    ; 02-Feb-2005	shobby	Code Check.
    ; 01-Feb-2005	RPW		SR10061: Created
    ;-------------------------------------------------------------------------------
	new intCol
	
	if pblnUpdateMe {
		set intCol = $$$GetClassField("FINAPInvLine",$piece(pstrYLFDAT,"_",2))
		do AddReference^COMGridEdit31Interface(intCol)
	}
	do ScreenUpdateStyle^COMGridEdit31S(pstrYLFDAT)
	quit ""
	
	
ConvertNumber(pstrNumbers,b)
	;-------------------------------------------------------------------------------
	; Converts from display to logical the amount fields on the grid
	;
	; Returns:
	;
	; History:
	; 06-Jan-2005	RPW		SR10061: Created
	;-------------------------------------------------------------------------------
	quit $$^WWWTR(1,8,$piece(pstrNumbers,Y,1))_Y_$$^WWWTR(1,8,$piece(pstrNumbers,Y,2))_Y_$$^WWWTR(1,8,$piece(pstrNumbers,Y,3))
	
	
PreviouslyInvoiced(pstrYFELD,blnDetails=$$$NO,details)
	;-------------------------------------------------------------------------------
	; Calculates the previously invoiced quantities for this receipt.
	;
	; Params:	invoice line data
	; 			blnDetails - whether details of prev invoice are required (4th paramater)
	; 			details    - array of previous invoice details (by ref)
	; 			
	; Returns:	invoiced quantity
	;
	; History:
	; 18-Mar-2009	GRF		prefixes; doco - clarify amount and quantity
	; 19-Aug-2005	shobby	SR11983:Check that idInvMatch is not "" (Which it will
	; 							be for the simulated total discounts placeholder)
	; 16-Jun-2005	JW		SR12484: Rewrote to use MatchCache
	; 18-Mar-2005	PO		If no idReceipt then do not step through global
	; 10-Feb-2005	JW		Check posting dates.
	; 08-Feb-2005	RPW		The form is locked when the costs are posted, so use the
	; 							Costs Posted checkbox to determine if we are in the
	; 							calculation
	; 31-Jan-2005	JW		Addded details paramaters
	; 27-Jan-2005	JW		Created
	;-------------------------------------------------------------------------------
	new fltInvoiceQty,fltPrevInvQty,idInvMatch,idInvoice,idLine
	new objFINAPInvLine,objInvMatch,strInvoice
	
	set fltPrevInvQty = 0
	
	set objFINAPInvLine = $get(pstrYFELD)
	
	set idInvMatch = $$$FINAPInvLineCacheLink(objFINAPInvLine)
	if idInvMatch'="" {
		set objInvMatch = $get(^FINAPInvMatchCache(0,idInvMatch,1))
		for {                // Get link to previous match in cache
			set idInvMatch = $$$FINAPInvMatchCacheLink(objInvMatch)
			quit:idInvMatch=""
			
			set objInvMatch = $get(^FINAPInvMatchCache(0,idInvMatch,1))
			set strInvoice  = $$$FINAPInvMatchCacheInvoiceNumber(objInvMatch)
			set idInvoice   = $$$KEY1(strInvoice)
			set idLine      = $$$KEY2(strInvoice)
			quit:(idInvoice="")||(idLine="")
			
			set objFINAPInvLine = $get(^FINAPInvLine(0,idInvoice,idLine,1))
			set fltInvoiceQty   = +$$$FINAPInvLineInvoiceQuantity(objFINAPInvLine)
			
			set fltPrevInvQty = fltPrevInvQty + fltInvoiceQty
			if blnDetails {
				set details(idInvoice,idLine) = fltInvoiceQty
			}
		}
	}
	quit fltPrevInvQty
	
	
UnitOfMeasureCorrect(pYFELD="")
	;-------------------------------------------------------------------------------
	; Checks whether inventory UofM is acceptable for this line.
	;
	; Returns: blnCorrect
	;
	; History:
	; 21-May-2009	GRF		adhoc: prefix
	; 07-Apr-2005	RPW		SR11836: Modified OpenQuantity to UnmatchedQuantity,
	; 							removed duplicate line
	; 01-Mar-2005	PO		SR11349 Check FC amts not base
	; 30-Jan-2005	JW		Created
	;-------------------------------------------------------------------------------
	new blnCorrect
	
	set blnCorrect = $$$NO
	
	; #1 Invoice each and qty are same as receive - and rec unit is blank.
	if ($$$FCIsEqual($$$FINAPInvLineInvoiceEach(pYFELD),$$$FINAPInvLineOrderEach(pYFELD))) &&
	   ($$$FINAPInvLineInvoiceQuantity(pYFELD)=$$$FINAPInvLineUnmatchedQuantity(pYFELD))   &&
	   ($$$FINAPInvLineInvoiceUnit(pYFELD)="")                                                {
		set blnCorrect = $$$YES
	
	; #2 Invoice unit same as default unit 
	} elseif $$$FINAPInvLineInvoiceUnit(pYFELD)=$$GetQuantityUnit^FINAPInvLineGet(pYFELD) {
		set blnCorrect = $$$YES
	}
	quit blnCorrect
	
	
DisabledButton(pstrYKEY)
	;-------------------------------------------------------------------------------
	; Stops the grid buttons from working. Sets Q to 0 to continue, or 1 with a 
	; status to stop.
	;
	; Params:	pstrYKEY = The key for the invoice match line
	;			Q (byRef - implicit)
	; Returns:	
	;
	; History:
	; 04-Feb-2005	RPW		Created
	;-------------------------------------------------------------------------------
	new objInvoice,strStatus
	
	set pstrYKEY = $$$KEY1(pstrYKEY)
	
	if pstrYKEY="" {
		set Q = 0
	} else {
		set objInvoice=$get(^FINAPInv(0,pstrYKEY,1))
		if objInvoice'="" {
			if $$$FINAPInvCostsPosted(objInvoice) {	
				set Q = 1_" "_$$$Text("Fin00658") ; "Invoice can not be updated, costs already posted."
			}
		} else {
			set Q = 0
		}
	}
	quit
	
	
AttachAdditionalCharges(pintRow,pstrKey)
	;-------------------------------------------------------------------------------
	; Attach any additional charges to this row.
	;
	; Called by:
	;	OnLineAdded^FINAPInvLineEvents
	;
	; Returns:
	;
	; History:
	; 19-Oct-2005	JW		SR11573: No JS.
	; 08-Sep-2005	shobby	SR11983:Identify parent of this discount/charge.
	; 02-Sep-2005	RPW		SR11983:Hide header when we need to. This is a little
	; 							expensive so may look at cleaning this up later.
	; 30-Aug-2005	shobby	SR11983:Forward order now, cgeCreateExpandRow handles
	; 							the positioning.
	; 27-Jul-2005	shobby	SR11983:Reverse order in which lines are attached.
	; 29-Mar-2005	shobby	Created
	;-------------------------------------------------------------------------------
	new blnHide,idInvNo,idLineNo,idxLine,loop,objFINAPInv,objFINAPInvCharge
	
	set objFINAPInv = $$$GRIDYFELDContainer
	
	if $$$GRIDAllowLinkedLines {
		set idInvNo  = $$$KEY1(pstrKey)    ; from FINAPInvLine
		set idLineNo = $$$KEY2(pstrKey)
		
		set idxLine = $$$Index(idLineNo)   ; parent line
		if idxLine'="" {
			set blnHide = (objFINAPInv'="")
			
			set loop = ""
			for {
				set loop = $order(^FINAPInvCharges(0,2,idxLine,idInvNo,loop))
				quit:loop=""
				
				set objFINAPInvCharge = $get(^FINAPInvCharge(0,idInvNo,loop,1))
				;SR17630 $$$GRIDAddLine(objFINAPInvCharge,loop,"FINAPInvCharge2",$$$NO,idLineNo)
				do AddLine^COMGridEdit31Add(objFINAPInvCharge,loop,"FINAPInvCharge2",$$$NO,idLineNo) ;SR17630
				if blnHide {
					set blnHide = $$$NO
					do HideHeaders^FINAPInvDiscount(+$$$FINAPInvLinesIncludeTax(objFINAPInv))
				}
			}
		}
	}
	quit
	
	
OnLineDeleted(pstrYKEY,pintRowCount)
	;-------------------------------------------------------------------------------
	; If this is the last line removed unlock the supplier field
	; 
	; History:
	; 02-Mar-2006	JW		SR13305: Added pstrYKEY parameter. Moved DeleteAllVariances
	;  							from OnAfterDeleted.
	; 23-Sep-2005	JW		SR12880: Update for multiple pages.
	; 01-Sep-2005	RPW/PO/SH	SR11983: Unlock the invoice supplier and tax detail check boxes
	; 25-Aug-2005	PO		SR12965: Replaced UpdateTax with calls to GetObject and
	; 							PopulateDataField for Tax Total
	; 28-Jun-2005	JW		Redundant routine has been removed.
	; 03-May-2005	PK		Added Update Tax call. SR:12231
	; 03-Feb-2005	RPW		Created
	;-------------------------------------------------------------------------------
    new objInvoice
 	
 	do DeleteAllVariances^FINAPInvLineVariance(pstrYKEY)
 	
	if pintRowCount=1 {
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvImportNumber,   $$$NO,"FINAPInv")
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvSupplier,       $$$NO,"FINAPInv")
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvInvoiceSupplier,$$$NO,"FINAPInv")
	}
	
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES) ; returns both simple variable and array
	do PopulateDataField^COMUtils("FINAPInv",$$$FldFINAPInvTaxTotal,$$CalculateTotalTax^FINAPInvLineTax2(.objInvoice),,.objInvoice,$$$NO)
	quit
	
	
CreateInvoice(pidOrder,pidOrdLine,pidReceipt,pidRecLine,pidInvoice,pidItem,pidLocn,pidStorage,pcurProRata,pfltRecvdQty,penumInvUnit,penumOrdUnit)
	;-------------------------------------------------------------------------------
	; Create the FINAPInvLine record as needed to do 3WM.
	; 
	; Called by :	CreateInvoice^INReceiptInvoice - creates the records directly 
	;				from INRECSummary, and posts to the ledger directly from the  
	;				INReceipt form using the Invoice Tab.
	; 
	; Params:
	;	pidReceipt,pidRecLine  = ^INRECLine Keys
	;	pidInvoice             = ^FINAPInv Key
	;	pidItem                = Item Number
	;	pidLocn||pidStorage    = Allocation to Storage
	;	pcurProRata            = INRECSummary cost allocated across quantity in corresponding Receipt Lines
	;	pfltRecvQty            = Quantity Received   [in Order Unit ? SR16815]
	;	penumInvUnit           = Invoice Unit        [deprecated      SR16815]
	;	penumOrdUnit           = Order Unit
	; 
	; History:
	; 01-Oct-2009	GRF		SR16361: Set $$$FINAPInvLineClosed
	; 30-Sep-2009	PPP		SR16885: For a receipt without order, the Each Price
	;							needs to be converted to the price for the Received
	;							Unit. (Conversion Factor)
	; 30-Sep-2009	PPP		SR16910: FINAPInvLineReceivedQuantity was incorrectly
	; 							set as Cost of Each
	;						Corrected to be the Receive Qty.
	; 27-Aug-2009	DWR		SR16815: Received Qty passed in is now a conversion to 
	; 							ordered unit, change received unit to be the ordered
	; 							unit. this is required for 3WM to process. penumInvUnit
	; 							remains as passed in variable for future expansion of
	; 							FINAPInv processes.
	; 17-Jul-2009	GRF		SR16689: Activate new code - rename
	; 13-Jul-2009	GRF		SR16689: rewritten to exclude unused arguments
	; 21-May-2009	GRF		SR16363: Manage if missing MatchCache; $$$Index variables;
	; 							objInvoice commented
	; 21-May-2009	DWR		SR16363: Corrected parameter names "pid" instead of "pidx"
	; 15-May-2009	DWR		SR16535: corrected values that are being set, to allow 
	; 							partial invoicing of an existing order.
	; 13-May-2009	DWR		SR16363: changed to check for an order number, and if none
	; 							look for FINAPInvMatchCache Record created by looking
	; 							at index 6 (Receipt No, ReceiptLine).
	; 20-Apr-2009	DWR		SR16363: Created
	;-------------------------------------------------------------------------------
	new dteReceipt,idInvMatch,idItem,idLocn,idOrder,idOrderLine
	new objFINAPInvLine,objInvLine,objInvMatch,strStatus
	
	$$$LogR("CreateInvoice",pidReceipt_","_pidRecLine_":"_pidInvoice_","_pidItem_","_pidLocn_"||"_pidStorage)
 
	se]]><![CDATA[t strStatus  = $$$OK
	if pidOrder'="" {
		set idInvMatch = ""
		for {
			set idInvMatch = $order(^FINAPInvMatchCaches(0,1,$$$Index(pidOrder),$$$Index(pidOrdLine),idInvMatch))
			quit:idInvMatch=""
			set objInvMatch = $get(^FINAPInvMatchCache(0,idInvMatch,1))
			quit:'$$$FINAPInvMatchCacheCompleted(objInvMatch)            ; skip processed records
		}
			
	} else {
		set idInvMatch = $order(^FINAPInvMatchCaches(0,6,$$$Index(pidReceipt),$$$Index(pidRecLine),""),-1)
	}  ; SR16361 ^^^
	
	if $get(idInvMatch)'="" set objInvMatch = $get(^FINAPInvMatchCache(0,idInvMatch,1))
 
	if $data(objInvMatch) {         ; FIXME : parameters not used - why??? : pidOrder,pidOrdLine,pidItem,pidLocn,pidStorage <GRF>
		set idItem      = $$$FINAPInvMatchCacheItem(objInvMatch)
		set idOrder     = $$$FINAPInvMatchCacheSourceOrder(objInvMatch)  ; converts null to "0"
		set idOrderLine = $$$FINAPInvMatchCacheOrderLine(objInvMatch)
		set idLocn      = $$$FINAPInvMatchCacheLocation(objInvMatch)
	;	set idStore     = $$$FINAPInvMatchCacheStockLocation(objInvMatch)
		
		set dteReceipt  = $$$FINAPInvMatchCacheReceiptDate(objInvMatch)
		if dteReceipt="" set dteReceipt = +$horolog
		
		set objInvLine=""
		set $$$FINAPInvLineOrderQuantity(objInvLine)       	= $$$FINAPInvMatchCacheOrderQuantity(objInvMatch)
	//	set $$$FINAPInvLineReceivedQuantity(objInvLine)   = $$$FINAPInvMatchCacheEach(objInvMatch)  ;$$$FINAPInvMatchCacheTotalQuantity(objInvMatch) ;SR16910 ; SR16535
		set $$$FINAPInvLineReceivedQuantity(objInvLine)    	= pfltRecvdQty
		set $$$FINAPInvLineUnmatchedQuantity(objInvLine)  	= pfltRecvdQty  ;$$$FINAPInvMatchCacheUnmatchedQuantity(objInvMatch) ; SR16535
		set $$$FINAPInvLineCacheLink(objInvLine)           	= idInvMatch
		set $$$FINAPInvLineAddedFromCache(objInvLine)      	= $$$FINAPInvMatchCacheAddedToCache(objInvMatch)
		if idOrder'="" {
			set $$$FINAPInvLineOrderNumber(objInvLine)      = idOrder_$$$COMMA_idOrderLine
		}
		set $$$FINAPInvLineTaxCode(objInvLine)              = $$GetTaxCode^FINAPInvSearch(idOrder,idOrderLine,idItem)
		set $$$FINAPInvLineItem(objInvLine)                 = idItem
		set $$$FINAPInvLineReceiveLocation(objInvLine)      = idLocn
		set $$$FINAPInvLineReceiveStockLocation(objInvLine) = pidStorage
		set $$$FINAPInvLineReceiveDate(objInvLine)          = dteReceipt
		set $$$FINAPInvLineInvoiceQuantity(objInvLine)      = pfltRecvdQty  ;$$$FINAPInvMatchCacheTotalQuantity(objInvMatch) ; SR16535
		
		//SR16885
		if idOrder="" {   //Base Unit to Rec Unit
			set $$$FINAPInvMatchCacheEach(objInvMatch)      = $$$FINAPInvMatchCacheEach(objInvMatch) * $$GetUOMConversion^INUOMConversion(idItem,penumInvUnit)
		} ; used for FINAPInv but not saved in FINAPInvMatchCache
				
		set $$$FINAPInvLineOrderEach(objInvLine)            = $$$FINAPInvMatchCacheEach(objInvMatch)
		set $$$FINAPInvLineInvoiceEach(objInvLine)          = $$$FINAPInvMatchCacheEach(objInvMatch)
		set $$$FINAPInvLineInvoiceEachIncTax(objInvLine)    = $$$FINAPInvMatchCacheEach(objInvMatch)
	 	
		set $$$FINAPInvLineItemDescription(objInvLine)      = $$$INARTSearchName($get(^INART(0,idItem,1)))
		set $$$FINAPInvLineOrderUnit(objInvLine)            = penumOrdUnit
		set $$$FINAPInvLineInvoiceUnit(objInvLine)          = penumOrdUnit    ;penumInvUnit   ;SR16815
		set $$$FINAPInvLineInvoiceTotal(objInvLine)         = pcurProRata
		set $$$FINAPInvLineInvoiceTotalIncludingTax(objInvLine) = pcurProRata
		set $$$FINAPInvLineVarianceFCDPost(objInvLine)      = $$GetVARFCPost^FINAPInvLineGet(objInvLine)	 
		
		do ClosedDefault^FINAPInvMatchCache(.objInvLine)    ; sets D29 $$$FINAPInvLineClosed()  ; SR16361
		
		if $$$ISOK(strStatus) {
			set strStatus = $$$Save("FINAPInvLine",pidInvoice_$$$COMMA_pidRecLine,objInvLine,$$$YES)
		}
	;} else { ; Error situation should not occur TODO : add error message <GRF>
		
	}
	quit strStatus
	
	
	;-------------------------------------------------------------------------------
	
	
GetINVQ(pYFELD="")
	quit $$GetINVQ^FINAPInvLineGet(pYFELD)
	
GetINVQVP(pYFELD="")
	quit $$GetINVQVP^FINAPInvLineGet(pYFELD)
	
GetINVPrice(pYFELD="")
	quit $$GetINVPrice^FINAPInvLineGet(pYFELD)
	
GetINVPriceVP(pYFELD="")
	quit $$GetINVPriceVP^FINAPInvLineGet(pYFELD)
	
GetTotalVariance(pYKEY="",pYFELD="")
	quit $$GetTotalVariance^FINAPInvLineGet(pYKEY,pYFELD)
	
OnBlur(pCOL="",pROW="",pYFELD)
	do OnBlur^FINAPInvLineEvents2(pCOL,pROW,.pYFELD)
	quit
	
OnLineAdded(pintRowCount="",pstrKey="")
	do OnLineAdded^FINAPInvLineEvents(pintRowCount,pstrKey)
	quit
	
OnDisplayRightClickMenu(pYKEY="",pYFELD="",pYFORM="")
	quit $$OnDisplayRightClickMenu^FINAPInvLineEvents(pYKEY,pYFELD,pYFORM)
	
]]></Routine>
</Export>