<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARZebraRun" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARZebraRun
	quit

loadScript(idPrinterList, idPreferencialPrinter)

	&html<
		<applet id='jZebra' code='jzebra.PrintApplet.class' archive='./jZebra/jzebra.jar' width='0' height='0'>
			<param name='printer' value='zebra'>
			<!-- <param name='sleep' value='200'> -->
		</applet>
		<script type='text/javascript'>
		
		function onLoad() {
			var applet = document.jZebra;
			if (applet != null) {
				loadPrinterCombo();
			}
			else {
				window.setTimeout('onLoad()', 500);
			}
		}

		function loadPrinterCombo() {
			var applet = document.getElementById('jZebra');
			if (applet != null) {
				if (!applet.isDoneFinding()) {
					window.setTimeout('loadPrinterCombo()', 500);
				} else {
					var printersCSV = applet.getPrinters();
					var printers = printersCSV.split(',');
					var printerList = document.getElementById('#(idPrinterList)#');
					
					for (var i=0; i<printerList.length; i++) {
						printerList.remove(i);
					}
					for (p in printers) {
						if ((printers[p].substring(0,4) == 'S4M_') 
							||(printers[p].substring(0,8) == 'TLP2844_')) {
							var option=document.createElement('option');
							option.text=printers[p];
							option.value=printers[p];
							if (option.value == '#(idPreferencialPrinter)#') {
								option.selected=true;
							}
							try {
								printerList.add(option,null);
							}
							catch (e) {
								// for IE earlier than version 8
								printerList.add(option,printerList.options[null]);
							}
						}
					}
					if ('#(idPreferencialPrinter)#' != '') {
						setPrinter();
					}
				}
			} else {
				alert('O applet não foi carregado.');
			}
		}

		function setPrinter() {
			var printerList = document.getElementById('#(idPrinterList)#');
			if (printerList.length > 1) {
				if (printerList.selectedIndex > 0) {
					var strPrinter = printerList.options[printerList.selectedIndex].value;
					var applet = document.getElementById('jZebra');
					if (applet != null) {
						applet.findPrinter(strPrinter);
					}
					loadSetedPrinter();
				}
				else {
					//alert('Selecione uma impressora.');
				}
			}
			else{
				alert('Não foi identificada nenhuma impressora zebra instalada.');
			}
		}

		function loadSetedPrinter() {
			var applet = document.getElementById('jZebra');
			if (applet != null) {
				if (!applet.isDoneFinding()) {
					window.setTimeout('loadSetedPrinter()', 500);
				} else {
					var printer = applet.getPrinter();
					//alert(printer == null ? 'Impressora não encontrada.' : 'Impressora \'' + printer + '\' definida com sucesso.');
				}
			} else {
				alert('O applet não foi carregado.');
			}
		}

		function printZebra(strZebra) {
			var printerList = document.getElementById('#(idPrinterList)#');
			if (printerList.selectedIndex > 0) {
				var applet = document.getElementById('jZebra');
				applet.append(strZebra);
				applet.print();
				monitorPrinting();
			}
			else {
				alert('Selecione uma impressora.');
			}
		}
	
		function monitorPrinting() {
			var applet = document.jZebra;
			if (applet != null) {
				if (!applet.isDonePrinting()) {
					window.setTimeout('monitorPrinting()', 500);
				} else {
					var e = applet.getException();
					//alert(e == null ? 'Enviado para a impressora \''+applet.getPrinter()+'\' com sucesso.' : 'Erro na impressão: ' + e.getLocalizedMessage());
					if (e != null) {
						alert( 'Erro na impressão: ' + e.getLocalizedMessage());
					}
				}
			} else {
				alert('O applet não foi carregado.');
			}
		}
	
		function addEvent(obj, evType, fn) {
 			if (obj.addEventListener) {
   				obj.addEventListener(evType, fn, false);
   				return true;
 			}
 			else if (obj.attachEvent){
   				var r = obj.attachEvent('on'+evType, fn);
   				return r; 
 			}
 			else {
   				return false;
 			}
		}
		
		addEvent(window,'load', onLoad);
			
		</script>
	>
	
	quit

compactaCodigoBarras(strTexto)
	new blnNumerico, strCompactado, strPar1, strPar2

	set blnNumerico = 0
	set strCompactado = ""
	for i = 1:1:$length(strTexto) {
		if (blnNumerico &&
			(((i <= ($length(strTexto) - 1)) &&
			  ('$$isParNumerico($extract(strTexto, i, i + 1)))) ||
			 (i = $length(strTexto)))) {
			set blnNumerico = 0
			set strCompactado = strCompactado_">6"
		}
		elseif (('blnNumerico) &&
				(i <= ($length(strTexto) - 3)) &&
				$$isParNumerico($extract(strTexto, i, i + 1)) &&
				$$isParNumerico($extract(strTexto, i + 2, i + 3))) {
			set blnNumerico = 1
			set strCompactado = strCompactado_">5"
		}

		set strCompactado = strCompactado_$extract(strTexto, i, i)
		if (blnNumerico) {
			set i = i + 1
			set strCompactado = strCompactado_$extract(strTexto, i, i)
		}
	}

	quit strCompactado

isParNumerico(strTexto)
	if ($$isNumerico($extract(strTexto, 1, 1)) &&
		$$isNumerico($extract(strTexto, 2, 2))) {
		quit 1
	}

	quit 0

isNumerico(strChar)
	if (($ascii(strChar) >= $ascii("0")) &&
		($ascii(strChar) <= $ascii("9"))) {
		quit 1
	}

	quit 0

converteTabelaC(valor)
	new return, temp, temp2, i

	set return = ""
	set i = 1
	while (i < $length(valor)) {
		set temp = $extract(valor, i, i)
		set temp2 = $extract(valor, i + 1, i + 1)

		if (($$isNumerico(temp)) && ($$isNumerico(temp2))) {
			set return = return_temp_temp2
			set i = i + 2
		}
		elseif ($$isNumerico(temp2)) {
			set i = i + 1
		}
		else {
			set i = i + 2
		}
	}

	quit return

]]></Routine>
</Export>