<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INADJATTLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INADJATTLine	; Stock Adjustment Attribute Lines
	
#include COMSYS
#include INConst
#include WWWConst
#include COMConst
#include %occInclude
	
#define WSResponse(%Status,%TextCode) %Status_"~#"_%TextCode_": "_$$^WWWTEXT(%TextCode)
#define DELIM	$char(31)
	
#define FORMFldINADJATTLineNewLot	    	6
#define FORMFldINADJATTLineNewExpiryDate	7
#define FORMFldINADJATTLineNewBrand			8
#define FORMFldINADJATTLineNewOwner			9
#define FORMFldINADJATTLineNewProgram		10
#define FORMFldINADJATTLineAttributes    	11
	
OnBlur(pidClassField,&pobjLine,pidKeys="",pGridRow,pGridCol)
	;-------------------------------------------------------------------------------
	; On Blur from Item fields.
	; Calculate unit
	;
	; Called By : COMGridEdit31Events due to setting on form
	; 
	; Params:	pidClassField	- field id
	;
	; ByRefs:	pobjLine		- current line object
	;			GROW 			- current Grid Row
	; Returns:
	;
	; History:
	; 16-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new idItem,idUnit,objItem
	
	set idItem   = $$$INADJATTLineItem(pobjLine)
	
	; Field-Specific Processing
	;---------------------------------------
	; If item - update units, and unit cost
	if pidClassField = $$$FldINADJLineItem {
		if idItem="" {
			set idUnit  = ""
		} else {
			set objItem = $get(^INART(YM,idItem,1))
			set idUnit  =  $$$INARTUnitofMeasure($get(^INART(YM,idItem,1)))
		}
		set $$$INADJATTLineUnit(pobjLine)     = idUnit
	}
	
	; General Processing
	;---------------------------------------
	; Redraw DynTable
	do ShowItems^INADJATTTable(1,"INADJATT"_$$$DELIM_"INADJATTLine"_$$$DELIM_"dStockBundle"_$$$DELIM_pGridRow)
	quit
	
	
OnBeforeFormat(pstrYFIELDNAME,pstrText,pobjLine)
	;-------------------------------------------------------------------------------
	; Determine how particular fields on the Movement Line are to be displayed.
	;
	; Params:
	;	pstrYFIELDNAME	Field name   (e.g. Y3_6)
	;	pstrText		Not used
	;	pobjLine		Movement Line record
	;					(INMOVLine format corresponding to grid line from pstrYFIELDNAME)
	;
	; ByRefs:
	;	YGRIDWHITE
	;	YFONTCOLOR
	;	YKEY
	;
	; Returns: Nothing
	;
	; History:
	; 10-Sep-2013	SCR		CORE-266: Pass in Location to GetAttributes
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new blnAttrib,blnLotNo,blnLotUnique,blnUseByDate,fltQtyReqd
	new idBundle,idClassField,idFromStore,idItem,idLocn
	new intBrand,intCol,intOwner,intProgram,intRow,objBundle,objBundleStock
	new strBundleValues,objHeader
	
	; INIssue Header
	;---------------------------------------
	set objHeader  = $$$GRIDYFELDContainer
	quit:$$$INADJATTStatus(objHeader)>0         		; Active
 
	set idLocn     = $$$INADJATTLocation(objHeader)
	
	; INIssueLine from Grid
	;---------------------------------------
	set idItem      = $$$INADJATTLineItem(pobjLine)
	set idFromStore = $$$INADJATTLineFromStorage(pobjLine)
	set idBundle    = $$$INADJATTLineBundle(pobjLine)
	set fltQtyReqd  = $$$INADJATTLineUnitQuantity(pobjLine)
	
	; Grid Position
	;---------------------------------------
	$$$GRIDSplitKey(pstrYFIELDNAME,intRow,intCol)
	set idClassField = $$$GetClassField(YFORM,intCol)	

	do GetAttributes^INItemPolicyUtils(idItem, .blnLotNo, .blnUseByDate, .blnLotUnique, .intBrand, .intOwner, .intProgram,idLocn)

	; Bundle
	;---------------------------------------
	if (idClassField = $$$FldINADJATTLineBundle) {
		if (idItem '= "") && (idFromStore '= "") {
			set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(idItem_"||"_idLocn_"||"_idFromStore_"||"_idBundle)
			if (objBundleStock '= $$$NULLOREF) {
				set YTOOLTIP  = objBundleStock.Bundle.%Id()
				set objBundle = objBundleStock.Bundle
			} else {
				set objBundle = ##class(alSOH.dBundle).%OpenId(idBundle)
			}
			if idBundle = "" {
				set YWARNING = $$$YES
				set YTOOLTIP = "No Bundle Selected"
				
			} elseif objBundleStock '= $$$NULLOREF {             ; Tested above
				//Update "Bundle Values" as well as styling
				set strBundleValues = ##class(alSOH.iUSOH).RenderBundle(objBundleStock.Bundle,SPRACHE)
				set YENABLED = $$$NO
				do UpdateManualField^COMGridEdit31Interface(intRow,$$$FORMFldINADJATTLineAttributes,strBundleValues) ; YTEXT can't be set here, workaround
				
			} else {
				set YWARNING = $$$YES
			//	set YTOOLTIP = "Bundle "_idBundle_" doesn't exist in Storage:'"_idFromStore_"'"
				set YTOOLTIP = $$$MakeStatus("IN01212",idBundle,idFromStore)
			}
		}
		
	; Item
	;---------------------------------------
	} elseif (idClassField = $$$FldINADJATTLineItem) {
		set blnAttrib = $$HasPolicyAttributes^INItemPolicyUtils(blnLotNo, blnUseByDate, blnLotUnique, intBrand, intOwner, intProgram)
		if 'blnAttrib {
			set YWARNING = $$$YES
		//	set YTOOLTIP = "Bundle "_idBundle_" doesn't exist in Storage:'"_idFromStore_"'"
			set YTOOLTIP = $$$Text($lb("IN01213"))		
		}
		
	; From Storage
	;---------------------------------------
	//} elseif (idClassField = $$$FldINADJATTLineFromStorage) {
	
		
	; Quantity
	;---------------------------------------
	//} elseif (idClassField = $$$FldINADJATTLineUnitQuantity) {

	} elseif (idClassField = $$$FldINADJATTLineNewLot) {
		if blnLotNo {
			set YMANDATORY       = $$$YES 
			set YENABLED         = $$$YES
		} else {
			set YTOOLTIP         = ""
			set YMANDATORY       = $$$NO 
			set YENABLED         = $$$NO 
		}

	} elseif (idClassField = $$$FldINADJATTLineNewExpiryDate) {
		if blnUseByDate {
			set YMANDATORY       = $$$YES 
			set YENABLED         = $$$YES 
		} else {
			set YTOOLTIP         = ""
			set YMANDATORY       = $$$NO 
			set YENABLED         = $$$NO 
		}					

	} elseif (idClassField = $$$FldINADJATTLineNewBrand) {
		if (intBrand=1)||(intBrand=3) {
			set:intBrand=1 YMANDATORY = $$$YES
			set YENABLED         = $$$YES 
		} else {
			set YTOOLTIP         = ""
			set YMANDATORY       = $$$NO 
			set YENABLED         = $$$NO 
		}					

	} elseif (idClassField = $$$FldINADJATTLineNewOwner) {
		if (intOwner=1) || (intOwner=3) {
			set:intOwner=1 YMANDATORY = $$$YES
			set YENABLED         = $$$YES 
		} else {
			set YTOOLTIP         = ""
			set YMANDATORY       = $$$NO 
			set YENABLED         = $$$NO 
		}

	} elseif (idClassField = $$$FldINADJATTLineNewProgram) {
		if (intProgram=1) || (intProgram=3) {
			set:intProgram=1 YMANDATORY = $$$YES
			set YENABLED         = $$$YES 
		} else {
			set YTOOLTIP         = ""
			set YMANDATORY       = $$$NO 
			set YENABLED         = $$$NO 
		}
	}
	quit
	
	
UpdateContainer(pstrFld,&objGrid,&headYFELD,&headYMFELD)
	;-------------------------------------------------------------------------------
	; Checks whole grid, if a single record requires lot number or expiry,
	; show that column
	;		hide=$$YES or show=$$$NO
	; 
	; Called By : UpdateContainer^COMGridEdit31G  (see matching code in LoadGrid^INADJ)
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new blnHideExpiry,blnHideLotNumber,blnHideBrand,blnHideOwner,blnHideProgram
	new blnLotNo,blnUseByDate,blnLotUnique,idItem,intBrand,intOwner,intProgram
	new objItem,strAdjLine,strLineYKEY
	new idLoc

	set blnHideLotNumber = $$$YES
	set blnHideExpiry    = $$$YES
	set blnHideBrand     = $$$YES
	set blnHideOwner     = $$$YES
	set blnHideProgram   = $$$YES
	
	set idLoc		= $$$INADJATTLocation(headYFELD)

	set strLineYKEY = ""
	for {
		set strLineYKEY = $order(objGrid($$$GRIDYKEYContainer,strLineYKEY))
		quit:(strLineYKEY = "")
		continue:$data(^WWWDATEN(YM,$horolog,YUSER,"INADJATTLine","V","KILLEDRECORD",strLineYKEY))
		
		set strAdjLine = $$$GRIDGetYFELD(strLineYKEY)
		set idItem = $$$INADJLineItem(strAdjLine)
		if idItem'="" {
			do GetAttributes^INItemPolicyUtils(idItem,.blnLotNo,.blnUseByDate,.blnLotUnique,.intBrand,.intOwner,.intProgram,idLoc)
			if blnLotNo                         set blnHideLotNumber = $$$NO
			if blnUseByDate                     set blnHideExpiry    = $$$NO
			if (intBrand=1)   || (intBrand=3)   set blnHideBrand     = $$$NO
			if (intOwner=1)   || (intOwner=3)   set blnHideOwner     = $$$NO
			if (intProgram=1) || (intProgram=3) set blnHideProgram   = $$$NO
		}
	}
	
	$$$StartScript()
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewLot,blnHideLotNumber,"INADJATTLine")      ; F4
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewExpiryDate,blnHideExpiry,"INADJATTLine")  ; F6
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewBrand,blnHideBrand,"INADJATTLine")        ; F7
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewOwner,blnHideOwner,"INADJATTLine")        ; F8
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewProgram,blnHideProgram,"INADJATTLine")    ; F9
	$$$EndScript()
	
	quit
	
	
OnBeforeSave(pYM,pYFORM,pYKEY,pYFELD,pblnQtyCheck=$$$YES)
	;-------------------------------------------------------------------------------
	; Called by FORM,ob Before Saving Line
	;
	; History:
	; 10-Sep-2013	SCR		CORE-266: Pass in Location to GetAttributes
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new arrAttrib,blnAttrib,blnChanged,blnLotNo,blnLotUnique,blnUseByDate
	new idBundle,idItem,intBrand,intOwner,intProgram,objItem,sc,strStatus
	new objADJ,idLoc

	
	kill YRETVAL
	set strStatus = $$$OK

	set idItem    	= $$$INADJATTLineItem(pYFELD)
	set idBundle  	= $$$INADJATTLineBundle(pYFELD)
	set objADJ		= $get(^INADJATT(YM,$$$KEY1(pYKEY),1))
	set idLoc		= $$$INADJATTLocation(objADJ)
	

	do GetAttributes^INItemPolicyUtils(idItem,.blnLotNo,.blnUseByDate,.blnLotUnique,.intBrand,.intOwner,.intProgram,idLoc)

	if idItem '="" {
		set blnAttrib = $$HasPolicyAttributes^INItemPolicyUtils(blnLotNo,blnUseByDate,blnLotUnique,intBrand,intOwner,intProgram)
		if 'blnAttrib {
		//	set YTOOLTIP = "Bundle "_idBundle_" doesn't exist in Storage:'"_idFromStore_"'"
			set strStatus = $$$MakeStatus("IN01213")	
		}

		if $$$ISOK(strStatus) {
			if idBundle'="" {
			//Get the Original Attributes
				set sc = ##class(alSOH.iBundle).GetAttributesForBundle(idBundle,.arrAttrib)

				if $$$ISOK(sc) {
					set blnChanged = $$$NO
			
					if $data(arrAttrib("Brand")) {
						set:$get(arrAttrib("Brand"))'=$$$INADJATTLineNewBrand(pYFELD) blnChanged = $$$YES
					}
					if $data(arrAttrib("Lot Number")) {
						set:$get(arrAttrib("Lot Number"))'=$$$INADJATTLineNewLot(pYFELD) blnChanged = $$$YES
					}
					if $data(arrAttrib("Owner")) {
						set:$get(arrAttrib("Owner"))'=$$$INADJATTLineNewOwner(pYFELD) blnChanged = $$$YES
					}
					if $data(arrAttrib("Program")) {
						set:$get(arrAttrib("Program"))'=$$$INADJATTLineNewProgram(pYFELD) blnChanged = $$$YES
					}
					if $data(arrAttrib("Use By Date")) {			
						set:$get(arrAttrib("Use By Date"))'=$$$INADJATTLineNewExpiryDate(pYFELD) blnChanged = $$$YES
					}
			
					if blnChanged = $$$NO {
						set strStatus = $$$MakeStatus("IN01211",$$$KEY2(pYKEY))
					}	; "No Change in Item Attributes for Line(%1)"
				}	
			}
		
			if $$$ISOK(strStatus) {
				if ($$$INADJATTLineBundle(pYFELD) = "") {
					set strStatus = $$$MakeStatus("IN01210",$$$KEY2(pYKEY)) 	// "Please select a QOH record from the list for Line (%1)"
				
				} elseif blnLotNo && ($$$INADJATTLineNewLot(pYFELD) = "") {
					set strStatus = $$$MakeStatus("IN01061",$$$KEY2(pYKEY)) 	// "Line (%1) Lot Number not entered"
				
				} elseif blnUseByDate && ($$$INADJATTLineNewExpiryDate(pYFELD) = "") {
					set strStatus = $$$MakeStatus("IN01062",$$$KEY2(pYKEY)) 	// "Line (%1) Expiry Date not entered"
				
				} elseif (intBrand=1) && ($$$INADJATTLineNewBrand(pYFELD) = "") {
					set strStatus = $$$MakeStatus("IN01063",$$$KEY2(pYKEY)) 	// "Line (%1) Brand not entered"
				
				} elseif (intOwner=1) && ($$$INADJATTLineNewOwner(pYFELD) = "") {
					set strStatus = $$$MakeStatus("IN01064",$$$KEY2(pYKEY)) 	// "Line (%1) Owner not entered"
				
				} elseif (intProgram=1) && ($$$INADJATTLineNewProgram(pYFELD) = "") {
					set strStatus = $$$MakeStatus("IN01065",$$$KEY2(pYKEY)) 	// "Line (%1) Program not entered"
				
				} elseif pblnQtyCheck && ($$$INADJATTLineUnitQuantity(pYFELD) = 0) {
					set strStatus = $$$MakeStatus("IN00753")         			// "Quantity cannot be 0"
				}
			}
		}
	}	

	if $$$ISERR(strStatus) {
		set YRETVAL   = strStatus
	}
	if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
		quit strStatus
	}
	quit
	
]]></Routine>
</Export>