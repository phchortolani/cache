<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMDistUtilities" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMDistUtilities
 
#include COMSYS
#include WWWConst
 
Version(Modules)
	;-------------------------------------------------------------------------------
	;
	; History:
	; 24-Jun-2005	RobertW	SR12498: Changed Reporting to Reports
	; 31-May-2005	RobertW	SR12498: Added REP
	; 24-Feb-2005	RPW/PK	Added CST and STK
	; 05-Apr-2004	LW		Added WF
	; 25-feb-2004	LW		Added VAR
	; 20-jan-2004	LW		Added AEP
	; 09-Jul-2003	SCR		Added WWW,IN,TE module and Send Menus
	;-------------------------------------------------------------------------------
	new Count,Module,Menu,Version,Major,Minor,Sub,Data,Record,Len
	
	for Count=1:1:$length(Modules,",") {
		set Module=$piece(Modules,",",Count)
		if Module'="" {
			set Module=$zconvert(Module,"u")
			set Menu=""
			if Module="FIN" set Menu="Finance"
			if Module="COM" set Menu="System"
			if Module="SAL" set Menu="Sale"
			if Module="WWW" set Menu="@net_Manager"
			if Module="IN"  set Menu="AlphaLinc"
			if Module="TE"  set Menu="Time_Manager"
			if Module="AEP" set Menu="Advanced_Procurement"
			if Module="VAR" set Menu="Local_Customisation"
			if Module="WF"  set Menu="Workflow"
			if Module="CST" set Menu="Cost"
			if Module="STK" set Menu="Stock_Control"
			if Module="REP" set Menu="Reports"
			if Menu'="" {
				do Set("^WWWVERSION(0,",Menu)
				do KillSet("^WWW004(0,",Menu)
				do KillSet("^WWW0041(0,",Menu)
			}
		}		
	}
	quit
 
KillSet(Glo,Sub)
	;-------------------------------------------------------------------------------
	; Kill and Set a Global
	; History
	; 13-Mar-2007	RPW		SR15408: Use the KILLOUT macro
	;-------------------------------------------------------------------------------
	;write !,Glo," ",Sub
	//do Kill(Glo,Sub)
	$$$KILLOUT("K "_Glo_""""_Sub_""")")
	do Set(Glo,Sub)
	quit
	
	/* SR15408
Kill(Glo,Sub)
	;-------------------------------------------------------------------------------
	; Kill a Global
	;-------------------------------------------------------------------------------
	new KILL
	
	set KILL="K "_Glo_""""_Sub_""")" do KILL^WWWOUT
	quit
	*/
 
Set(Glo,Sub)
	;-------------------------------------------------------------------------------
	; Set a Global
	;
	; History:
	; 14-Nov-2005	JW		SR13543: Moved RekeyClass inside UMS1^WWWOUT
	; 20-May-2003	SCR		Changed Rekey Class from local to global
	;-------------------------------------------------------------------------------
	new PRUEF,DATEI
	
	set PRUEF=Glo_Sub_","
	set DATEI=Glo_""""_Sub_""",-1)"
	do UMS1^WWWOUT
	
	/*	SR13543
	set Glo=$piece(Glo,"^",2)
	set Glo=$piece(Glo,"(",1)
	set:Glo'="" ^mtemp("RekeyClass",$job,Glo)="" ; used by Rebuild Code
	*/
	quit
	
	
CheckEnums(pidRef="")
    ;-------------------------------------------------------------------------------
    ; Checks enums and their uniqueness.
    ; 
    ; Returns:Status
    ;
    ; History:
    ; 05-Jan-2005	GRF		SR10591 : Clarify return value; move strClass outside
    ; 							second loop; tested memory use not excessive - okay;
    ; 							add parameter default; translate string already has
    ; 							quote; use ACUTE
    ; 06-Dec-2004	Paul K	Created (SR10591)
    ;-------------------------------------------------------------------------------
	new arrEnums,idEnum,idRef,strClass,strParam,strStatus
	
	write !,"Checking for Duplicate Enum Definitions"
	quit:pidRef="IN" $$$OK
	
	set strStatus=$$$OK
	
	if pidRef'="" {
		set idRef=$order(^WWW101(0,pidRef),-1)
	} else {
		set idRef=""
	}
	for {
		set idRef=$order(^WWW101(0,idRef))
		quit:$extract(idRef,1,$length(pidRef))'=pidRef
		quit:idRef=""
		
		set strClass=$translate(idRef,"-.[],()/")
		set idEnum=""
		for {
			set idEnum=$order(^WWW101(0,idRef,"EN",idEnum))
			quit:idEnum=""
			
			set strParam=$$$WWW101Text($get(^WWW101(0,idRef,"EN",idEnum,1)))
			set strParam=$translate(strParam," -.[],()/'"_$$$ACUTE)
			if $data(arrEnums(strClass_strParam))&&($get(arrEnums(strClass_strParam))'=idEnum) {
				write !,strClass_strParam_" : "_$get(arrEnums(strClass_strParam))_" : "_idEnum
			//	write !,idRef_":"_idEnum
			//	set strStatus=$listbuild("Com00121",strClass_"-"_strParam)  ;Enum Check Failed.
			}
			set arrEnums(strClass_strParam)=idEnum
		}
	}
	
	quit strStatus        ; FIXME : Test is deprecated by failure to return a value - why perform? <GRF>
	
Question(pstrQuestion,pblnAutoBuild=$$$NO)
    ;-------------------------------------------------------------------------------
    ;
    ; History:
    ; 15-Oct-2007	GRF		Com00211 rather than COM03
    ; 05-Jan-2005	GRF		SR10591 : Clarify status value
    ;-------------------------------------------------------------------------------
	new strAnswer,strStatus
	
	set strStatus = $$$OK
	if 'pblnAutoBuild {
		write !,pstrQuestion
		read strAnswer
		if $zcvt(strAnswer,"U")'="Y" {
			set strStatus=$listbuild("Com00211",pstrQuestion)  ; "Question '%1' failed."
		}
	}
	quit strStatus
	
Command(pstrCommand)
	write !,"Command: "_pstrCommand
	do $zf(-1,pstrCommand)
	quit
 
CopyFiles(pstrFromString,pstrToDirectory)
    ;-------------------------------------------------------------------------------
    ; Copies files to another directory. can use wildcards.
    ; e.g. "\\Galileo\Inetpub\Development\Form_sal*.jpg"
    ;
    ; Shows what is going on on the screen.
    ; 
    ; Returns:Integer (Number of files copied)
	;
	; History:
	; 19-Jul-2005	RPW		SR12981: Moved Question/Command to COMDistUtilities
    ; 28-Sep-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
    new file,count
    
    set count=0
	if pstrToDirectory'="" {
		do Command("mkdir "_pstrToDirectory)
		set file = $zsearch(pstrFromString)
		for count=1:1 {
			quit:file=""
			
			do Command("copy "_file_" "_pstrToDirectory)
			Set file=$zsearch("")
		}
	}
	quit count
	
CompileClasses(pstrModule) 
    ;-------------------------------------------------------------------------------
    ; Compile Class to Cache Classes
    ;
    ; History:
    ; 19-Dec-2008	GRF		SR16253: Class not form
    ; 22-Feb-2005	Paul K	Reduce incidence of calling WWWVAR
    ; 15-Mar-2004	SCR		Created
    ;-------------------------------------------------------------------------------
    new idClass
    
    if $get(Y)="" do ^WWWVAR
    
    set idClass = pstrModule
    for {
	    set idClass = $order(^WWW001(0,idClass))
	    quit:$extract(idClass,1,$length(pstrModule))'=pstrModule
	    
	    do COMPILE^WWW001O(idClass)
    }
    quit
   
Level4Version(Systems,Init)
	;-------------------------------------------------------------------------------
	; Increment 4th Level of version number for Systems
	; If Init and there no 4th Level, set it to 1
	;-------------------------------------------------------------------------------
	new Count,Sub,System,Version
	
	for Count=1:1:$length($get(Systems),",") {
		set System=$piece(Systems,",",Count)
		if System'="" {
			set Version=$piece($get(^WWWVERSION(0,System,1)),"~",1)
			if Version'="" {
				set Sub=$piece(Version,".",4)
				if ($get(Init))&&(Sub="") {
					set Sub=1
				}
				if ('$get(Init)) {
					set Sub=Sub+1
				}
				if Sub {
					set $piece(Version,".",4)=Sub
					set $piece(^WWWVERSION(0,System,1),"~",1)=Version
				}
			}
		}
	}
	quit
 
CreateSecurityModules()
	;-------------------------------------------------------------------------------
	; Routine to create new security options, used to restrict access to modules
	; from the menu.
	; 
	; History:
	; 24-Jun-2005	RobertW	SR12498: Changed Reporting to Reports
	; 31-May-2005	RobertW	SR12498: Added REP
	; 05-apr-2004	lw		Added WF
	; 25-feb-2004	lwaugh	Added VAR
	; 20-jan-2004	lwaugh	Added AEP
	; 25-Jul-2003	shobby	Creation
	;-------------------------------------------------------------------------------
	do ^WWWSPEI("WWW101","MODULE,EN,FIN","Finance",1)
	do ^WWWSPEI("WWW101","MODULE,EN,FINGL","Finance - General Ledger",1)
	do ^WWWSPEI("WWW101","MODULE,EN,FINAR","Finance - Accounts Receivable",1)
	do ^WWWSPEI("WWW101","MODULE,EN,FINAP","Finance - Accounts Payable",1)
	do ^WWWSPEI("WWW101","MODULE,EN,SYS","System",1)
	do ^WWWSPEI("WWW101","MODULE,EN,SAL","Sales",1)
	do ^WWWSPEI("WWW101","MODULE,EN,AEP","Advanced Procurement",1)
	do ^WWWSPEI("WWW101","MODULE,EN,VAR","Local Customisation",1)
	do ^WWWSPEI("WWW101","MODULE,EN,WF","Workflow",1)
	do ^WWWSPEI("WWW101","MODULE,EN,STK","Stock Control",1)
	do ^WWWSPEI("WWW101","MODULE,EN,CST","Cost",1)
	do ^WWWSPEI("WWW101","MODULE,EN,REP","Reports",1)
	quit
	
	
UpdateVersion(pstrVersion)
	new strModule
	
	quit:pstrVersion=""
	
	do:$get(Y)="" ^WWWVAR
	
	set strModule = ""
	for {
		set strModule = $order(^WWWVERSION(YM,strModule))
		quit:strModule=""
		
		set $$$WWWVERSIONActualVersionNo(^WWWVERSION(0,strModule,1)) = pstrVersion
	}
	
	quit
	
]]></Routine>
</Export>