<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWFOR71" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWFOR71
	
	;---------------------------------------
	; SEE DOCO AT BOTTOM OF ROUTINE
	;---------------------------------------
	
#include COMSYS
#include WWWConst
	
#define LogR(%1,%2) 	;
#define LogR2(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWFOR71("_%2_") : "_$zh $$$JournalOn
#;define LogR2(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWFOR71("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	; Description of Function : Assembling Search Parameters
	;		
	;
	; Called By : Start^WWWFORM7, ^WWWPARA (for types "P", "D", "M")
	; 
	; Inputs :
	;	YPARA(1)	= Relation Database
	;	YPARA(2)	= Relational Primary Keys
	;	YPARA(3)	= Relational Display Items
	;	YPARA(12)	= Sort The Relation (boolean)
	;	YPARA(20)	= Relation Display Options
	;	YPARA(33)	= Display If Sort Key Equal
	;	YPARA(67)	= New Display fo Event Broker          NEUES ANZEIGEFELD AUS EVENTBROKER
	;	YPARA(79)	= Mark Field                           MARKIERUNGSFELD
	;	YPARA(120)	= bln:Without Primary Key              OHNE PRIMÄRSCHLÜSSEL J/N
	;
	; ByRef :
	;
	;
	; Returns :   ;AUSGANGSVARIABLEN
	;	S ^WWWSOR(YUSER,2,SORTIERFOLGE,PARAMETER) = GEFUNDENER TEXT ZUM PARAMETER
	;	S ^WWWSOR(YUSER,2,idxParameter,Parameter) = Found on the Text Parameters
	;	YPARA(0)	= Language Class for Relations (normally Class_"1" if not blank)
	;	YPARA(5)	= Search Key                           SCHLÜSSEL DER SUCHDATEI
	;	YPARA(7)	= Number of Parameters Found  (+1?)    ANZAHL DER GEFUNDENEN PARAMETER
	;	YPARA(20)	= SPÄTER ANZEIGEN = 1 ;display 
	;	YPARA(21)	= ANZAHL DER GEFUNDENEN TEXTE BEI "ANZEIGE SPÄTER"
	;				  (FÜR AUSWAHL DER ANZEIGE: TEXT/SELECTION/RADIO..)
	;	YPARA(51)	= MAXIMALE FELDLÄNGE DES SCHLÜSSELS ;field size 
	;	YPARA(52)	= MAXIMALE FELDLÄNGE DER Datenfelder ;field size the Properties 
	;	YPARA(55)	= 2 : ES GIBT MEHRERE PARAMETER NEBENEINANDER (ZEICHENART=COURIER)
	;				 ;it divers parameter abreast 
	;	YPARA(80)	= MARKIERUNGSFELDER ROT  ; red 
	;	YPARA(81)	= MARKIERUNGSFELDER GELB ; yellow 
	;	YPARA(82)	= MARKIERUNGSFELDER GRÜN ; green 
	;	YPARA(555)  = Input Type for last primary key
	;	YPARA("ANZ")		= Number of entries? compared with YANZMAX
	;	YPARA("CF")			= Calculated Field [semicolon delimited list]
	;	YPARA("Excluded")	= Number of items that exist but are not desired in the list. (Change combo to search?)
	;
	; History :
	; 07-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 13-Feb-2008	GRF		Doco
	; 28-Sep-2007	shobby	SRBR014731: Remember the number of items that were not
	; 							added to the drop down list.
	; 30-May-2006 	SC		SR14631: Show all selections for read-only multi-select lists.
	; 26-Apr-2006	JW&PP	SR14508: Don't check for space if we want an actual match (below)
	; 01-Sep-2005	JW		SR12966: INART is not shared
	; 13-Jul-2005	GRF		FIXME
	; 30-May-2005	RobertW	SR12056: Attempt at Performance Increase
	; 05-May-2005	shobby	2nd attempt.  If readonly still use a combo box but only
	; 							populate with the current value (SR12166)
	; 02-May-2005	shobby	Don't populate a list if the field is read only. (SR12166)
	; 02-May-2005	Paul K	Problem when key searching on is not last primary key and
	; 							last primary key is a date field. SR:12248
	; 05.08.1997	DT		(C) BY DITMAR TYBUSSEK
	;-------------------------------------------------------------------------------
	do PARAM
	$$$LogRx("Post:1")
	$$$LogRm(YPARA)
	$$$LogRx("Post:2")
	$$$LogRm(^WWWSOR(YUSER,2))

	quit
	
	
	; FIXME : repeats whole process when form contains multiple combo-boxes with
	;         the same relation (e.g. "JA/NEIN") - can we re-use on this one at
	;         least and perhaps on some others where no filtering occurs? 
PARAM
	;-------------------------------------------------------------------------------
	; History:
	; 07-Sep-2012	SCR		SR18105: Color code for form VARPARA
	; 07-May-2010	PPP		SR17287: If Calculated Rel field exists - set the normal
	;							Relation field to null
	; 29-Jun-2009	PPP		SR16663: Add the Calculated Relation Display Fields
	; 11-Dec-2007	GM		SRBR014601: Included "YKEY" parameter
	; 24-Oct-2007	shobby	SRBR014745: Don't limit the length of the text in a
	; 							dropdown.  It may have been customised larger than
	; 							the size defined in the class definition.
	; 09-Oct-2007	shobby	SRBR014744: Removed blnCheck flag that would decide if
	; 							the DataAccess routine is called.
	; 09-Oct-2007	shobby	SRBR014744: Pass the class that is being used to populate
	; 							the list in to the DataAccess call
	; 01-Oct-2007	shobby	SRBR014731: Keep the number of records that have been
	; 							filtered out to use in the calculation of whether
	; 							to change to a combo search.
	; 07-Aug-2007	shobby	BR014660: Create a KEY(0) variable.
	; 09-Jul-2007	shobby	BR014594: If this list is based on class fields then
	; 							display a bit more information for those fields
	; 							which are free fields.
	; 05-Jul-2007	shobby	BR014594: Create an array of KEY variables that hold
	; 							the pieces of the YKEY.  This is used as a parameter
	; 							in relational primary keys class design.
	;  6-Dec-2006	JW		BR014285: Data Access
	; 22-Aug-2006	JW		SR14929: Check data type before conversion (SR14604)
	; 18-Aug-2006	RPW/JW	SR14604: Make 0 always show a popup
	; 01-Aug-2006	JW		SR14604: Check limit if can change Combo to Search.
	;-------------------------------------------------------------------------------
	new ERSTFELD,FELDKEY,LC,UC,YANZMAX,YDATA,YFILE,YFILES,YSORTNAME,YMAXKEY,YSKPR
	new blnCheck,loop,strExec,strGlobal,KEY
	
	$$$LogR("PARAM",$get(YFORM))
	$$$LogRm(YPARA)
	
	;+++++++++++++++++++++++++++++++++++++++
	; Data Records :
	;	YDATA			objWWW001			Data Dictionary
	;+++++++++++++++++++++++++++++++++++++++
	
	for loop=1:1:20 {
		set KEY(loop) = $piece($get(YKEY),$$$COMMA,loop)
	}
	if KEY(1)'="" {    ;  Only relevant to WWW122D2 (Customizing Rules form)
		set KEY(0) = $$$WWW120ClassUsedInForm($get(^WWW120(0,KEY(1),1)))
	}
	
	set LC = "ÜÄÖüäöß][\}{|abcdefghijklmnopqrstuvwxyz,()@#$%^&*_=+<>?/"_$char(128)_""" "
	set UC = "UAOUAOSUAOUAOABCDEFGHIJKLMNOPQRSTUVWXYZ                   "
	
	kill ^WWWSOR(YUSER,2)
	
	set YPARA(21)  = 0
	set YPARA(55)  = 0
	set YPARA(80)  = ""  ;MARKIERUNGEN ROT  ;red 
	set YPARA(81)  = ""  ;MARKIERUNGEN GELB ;yellow 
	set YPARA(82)  = ""  ;MARKIERUNGEN GRÜN ;green 
	set YPARA(83)  = ""  ;MARKIERUNGEN GRÜN ;green    > blue?  see later
	set YPARA(84)  = ""  ;MARKIERUNGEN GRÜN ;green    > gray?  see later
	set YPARA(555) = ""  ;FORMAT DES KEY ;format KEY 
	set YDATA      = ""
	if $extract(YPARA(1),1,2)'="IN" if $extract(YPARA(1),1,3)'="WWW" set YDATA=$get(^WWW001(0,YPARA(1),1))  ;VARIABEL AUS DATENSATZDEF.  FELD 8=DATEIART
	
	; *****************************************************
	; FIXME : These routines do not exist - may never get called due to nature of alternate storage <GRF>
	;         The codes 6 & 7 have been removed from ^WWW100(0,"SPEICHERUNG")
	if $$$WWW001AltSaveProcedure(YDATA)=7 do ^WWWFOR717  ;SQLSTORAGE
	if $$$WWW001AltSaveProcedure(YDATA)=6 do ^WWWFOR71A  ;ABACUS
	; *****************************************************
	
	
	; YPARA(33) : Relation Test
	;             Index#,$$$Index(Value)                          Source from ^GLOBALs(0,Index#,idxValue)
	;             Index#,@Variable                                Source from ^GLOBALs(0,Index#,$$$Index(@Variable))
	;             Index#,$$$Index(Value),idxValue3,idxValue4      Source from ^GLOBALs(0,Index#,idxValue,3,4) see FIXME - believe should be
	;                                                             Source from ^GLOBALs(0,Index#,idxValue,idxValue3,idxValue4)
	set YSORTNAME=""
	if $piece($get(YPARA(33)),",",1)>0 do
	. set YSORTNAME = $piece($get(^WWW0013(0,YPARA(1),$piece(YPARA(33),",",1),1)),Y,1)
	. if YSORTNAME="" do
	. . if $piece(YDATA,Y,8)=4  set YSORTNAME = "Index"_$piece(YPARA(33),",",1)    ; WWW001AltSaveProcedure 4="Caché Object"
	. . if $piece(YDATA,Y,8)'=4 set YSORTNAME = +$piece(YPARA(33),",",1)

	
	set YFILE  = YPARA(1)
	if $piece(YDATA,Y,22)'="" set YFILE  = $piece(YDATA,Y,22)  ;ANDERE DATEI ;data file 
	set YFILES = YPARA(1)_"s"
	if $piece(YDATA,Y,23)'="" set YFILES = $piece(YDATA,Y,23)  ;ANDERE SORTDATEI
	if (+YPARA(3)=0) && (+YPARA("CF")=0) set YPARA(3) = 1
	set YPARA(3)    = $translate(YPARA(3),";",",")
	set YPARA("CF") = $translate($get(YPARA("CF")),";",",")
	if YPARA("CF")'="" set YPARA(3) = ""

	;if $piece(YSATZ,Y,23)=5 set YPARA(20)=1     ; "Relation Display Options" = 1 : "Display Relations after Input"
	;   02-May-2005:shobby:SR12166 - 
	;       If the field is read only then we probably don't need to populate a list
	;       at all and just use a disabled text box.
	;       This is accomplished by setting the value which marks whether 
	;       'Relation Display Options' is set to 'Display Relations after Input'.
	;       In which case the desired functionality is achieved.
	if YPARA(20)=1 quit:YINHALT=""  do PARAM1 quit   ;NUR WENN INHALT DANN ANZEIGE ;only when purport Show 
	if YTYPE="FILE"                 do PARAM2 quit   ;WENN DISKINHALT ;when 
	
	set YPARA(52)=$piece($get(YSATZ),Y,64)           ;MANUELLE LÄNGE DER RELATION (DATENFELDER) ;longitude the 
	set YPARA(51)=""                                 ;FELDLÄNGE FÜR PRIMÄRSCHLÜSSEL ;field size to 
	if $find(YPARA(52),"-") set YPARA(51)=$piece(YPARA(52),"-",1) set YPARA(52)=$piece(YPARA(52),"-",2)  ;WENN MIT "-" (PRIMÄRSCHLUESSEL)
	;QUIT:$DATA(^WWWSOR(YUSER,2))
	
	;YPARA(4) : LAUFVARIABLE
	set YPARA(4) = "^"_YFILE_"("_$$^WWWYM(YPARA(1),1)
	if $piece(YDATA,Y,12)'="" if $piece(YDATA,Y,13)'="" do  ;UCI UND VOL ;UCI And 
	. quit:$find(YPARA(4),"^[")
	. set YPARA(4)="^["""_$piece(YDATA,Y,12)_""","""_$piece(YDATA,Y,13)_"""]"_$piece(YPARA(4),"^",2,999)
	
	do  ;PRUEFEN AUF SORTKEY ;upon 
	. set YSKPR    = ""      ;PRUEFUNG AUF $D ;upon 
	. set YSKPR(1) = ""      ;PRUEFUNG AUF NICHT $D ;upon Not 
	. if +$piece($get(YPARA(33)),",",1)'=0 do
	. . set YSKPR(2)="^"_YFILES_"("_$$^WWWYM(YPARA(1),1) do  ;PRUEFEN CACHE
	. . . set YSKPR(2) = YSKPR(2)_""""_YSORTNAME_""""
	. . . set YSKPR(2) = YSKPR(2)_","
	. . ;
	. . if $piece(YPARA(33),",",3,99)'="" do  ;WEITERE VORGABEN 
	. . . new YI
	. . . for YI=3:1 set YI(1) = $piece(YPARA(33),",",YI) quit:YI(1)=""  set YSKPR(2) = YSKPR(2)_YI_","   ; FIXME : Should this be concatenate YI(1) rather than YI?
	. . ;
	. . set YSKPR(1)=YSKPR(2)_""" "",YPARA(5))"
	. . if $piece(YPARA(33),",",2)'="" do
	. . . if $extract($piece(YPARA(33),",",2))="@" set $piece(YPARA(33),",",2)=$$^WWWUMLAU(@($extract($piece(YPARA(33),",",2),2,99)),1)
	. . . quit:$piece(YPARA(33),",",2)="" 
	. . . if $extract($piece(YPARA(33),",",2))'="@"  set YSKPR = YSKPR(2)_""""_$piece(YPARA(33),",",2)_""""
	. . . if $extract($piece(YPARA(33),",",2))="@"   set YSKPR = YSKPR(2)_""""_@($piece(YPARA(33),",",2))_""""  ; FIXME : 2nd indirection requires variable to be in uppercase
	. . . if YPARA(2)'="" if $extract(YPARA(2))'="," set YSKPR = YSKPR_","_YPARA(2)  ;_","
	. . . set YSKPR = YSKPR_",YPARA(5)"
	. . . if $extract(YPARA(2))="," set YSKPR = YSKPR_YPARA(2)
	. . . set YSKPR = YSKPR_")"
	
	; Special for Item Master Data searches
	;---------------------------------------
	if $find($translate(YSKPR,""""),"^INARTs("_YM_",7,2,") do  quit
	. new NAME
	. set NAME = ""
	. for  set NAME = $order(^INARTs(YM,7,2,NAME)) quit:NAME=""  do
	. . set YPARA(5) = ""
	. . for YPARA(7)=1:1 set YPARA(5) = $order(^INARTs(YM,7,2,NAME,YPARA(5))) quit:YPARA(5)=""  do
	. . . set YSORT(1)  = NAME
	. . . set YSORT     = YPARA(5)
	. . . set YPARA(53) = $piece($get(^INART(YM,YPARA(5),1)),Y,1)
	. . . set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=" ("_YSORT_")  "_YPARA(53)
	
	set Q       = 0
	set YCOLOR  = 0 
	set YCOLOR1 = ""
	if $find(YPARA(2),"FARBE")                    set YCOLOR  = 1         ;WENN FARBCODE ;when colour
	; if (YPARA(1)="WWW101") || (YPARA(1)="INPARA") set YCOLOR1 = YPARA(2)  ;WENN FARBCODE IN TEXT ;when within Text 
	if (YPARA(1)="WWW101") || (YPARA(1)="INPARA") || (YPARA(1)="VARPARA") set YCOLOR1 = YPARA(2)  ;SR18105 ;WENN FARBCODE IN TEXT ;when within Text
	if $find(YPARA(2),"SCHRIFTART")               set YCOLOR  = 2         ;WENN SCHRIFTART ;when font
	
	for YI=1:1 set YPARA(9)=$piece(YPARA(2),",",YI) quit:YPARA(9)=""  set YPARA(4)=YPARA(4)_YPARA(9)_"," if $extract(YPARA(9))'="""" if $get(@(YPARA(9)))="" set Q=1 quit
	
	
	;---------------------------------------
	if Q=1 set Q=0 quit
	;---------------------------------------
	
	
	set YPARA(10)    = YPARA(4)_"YPARA(5))"  ;ZIELVARIABLE FÜR @VARIABLE
	set YPARA(5)     = ""
	set YPARA("ANZ") = 0                ; WACH WEGEN DMV PARAMETERANZEIGE WENN RELATION
	
	set YANZMAX = $$GetMaxSelectRecords^WWW012()
	if '$$ComboToSearch(YXTYP,YPARA(1)) {
		set YANZMAX = 9999
	}
	
	if ($piece(YSATZ,Y,23)=5) && ($$$WWW122DataInputType(YSATZ)'=6) {
		set YANZMAX  = 2
		set YPARA(5) = YINHALT
		set YPARA(5) = $order(@(YPARA(10)),-1)
	} 
	
	set strExec  = $$$WWW001DataAccess($get(^WWW001(0,YPARA(1),1)))
	set blnCheck = $$$YES
	
	set strGlobal = "^"_YFILE_"("_$$^WWWYM(YPARA(1),1)
	
	set YMAXKEY    = $length(YPARA(2),",")+1  ; null string => 1
	set YPARA(555) = $$$WWW002InputType($get(^WWW002(0,YPARA(1),YMAXKEY,1)))
	set YPARA(0)   = $$$WWW001LanguageClassForRelations($get(^WWW001(0,YPARA(1),1)))  ;SPRACHDATEI
	
	// TODO JW:
	// 	 - surely rewrite this doing $query ?
	// 	 - why are we rebuilding the global EVERY time ?   - different rules may apply to DataAccess when data is sourced from different forms/fields
	
	; YPARA(20) "Relation Display Options" '= 0 : "Display All Relations"
	; may treat "" differently depending on whether equated on setting YPARA(20)
	set YPARA("Excluded")=0
	for YPARA(7)=1:1 set YPARA(5)=$order(@(YPARA(10))) quit:YPARA(5)=""  do  if YPARA(20)'=0 quit:YPARA("ANZ")>YANZMAX  if $get(YYYFORM)="WWWHPR" quit:YPARA("ANZ")>3   ;BEI HILFE  ;next to succour 
	. if $piece(YDATA,Y,8)'=4 set YPARA(6)=YPARA(4)_""""_YPARA(5)_""",1)"  ;KEIN OBJECT ;no 
	. if $piece(YDATA,Y,8)=4  set YPARA(6)=YPARA(4)_""""_YPARA(5)_""")"    ;OBJECT
	. ;
	. //SET YPARA(44)="^"_YFILE_"("_$$^WWWYM(YPARA(1),1)	// BR014285
	. set YPARA(44) = ""
	. ;
	. for YI=1:1 set YPARA(19)=$piece(YPARA(2),",",YI) quit:YPARA(19)=""  do
	. . if $extract(YPARA(19))'="""" set YPARA(19)=""""_$get(@YPARA(19))_""""
	. . set YPARA(44) = YPARA(44)_YPARA(19)_","
	. ;
	. // Check data access
	. if (blnCheck&&'$$DataAccess^WWWFieldValidation(strExec,YPARA(44)_YPARA(5),YFORM,YTYP,YLFN,,YPARA(1),.blnCheck,YKEY)) set YPARA("Excluded")=YPARA("Excluded")+1 quit	// BR014285 ;BR014731  ;BR014744 ;BR014601
	. ;
	. set YPARA(44) = strGlobal_YPARA(44)
	. ;
	. if $piece(YDATA,Y,8)=4 do   ;NUR BEI FREMDSPEICHERUNG (LETZTER KEY) ;only next to 
	. . set ERSTFELD = $order(^WWW003(0,YPARA(1),""))
	. . set FELDKEY  = ""
	. . if ERSTFELD'="" set FELDKEY=$piece(^WWW003(0,YPARA(1),ERSTFELD,1),Y,11)
	. . set YPARA(19) = YPARA(44)_""""_YPARA(5)_""""
	. . if FELDKEY'="" set YPARA(19) = YPARA(19)_","_FELDKEY
	. . set YPARA(19) = YPARA(19)_")"
	. ;
	. if $piece(YDATA,Y,8)'=4 do  ;STANDARDSPEICHERUNG
	. . set YPARA(19) = YPARA(44)_""""_YPARA(5)_""",1)"
	. ;
	. ;BEC;ÄNDERUNG WACH 5 ZEILEN;2699013.12.04
	. if $piece(YDATA,Y,8)'=4 do  ;STANDARDSPEICHERUNG
	. . if $extract(YPARA(2))'="," set YPARA(19)=YPARA(44)_""""_YPARA(5)_""",1)"
	. . if $extract(YPARA(2))=","  set YPARA(19)=YPARA(44)_""""_YPARA(5)_""","""_@$piece(YPARA(2),",",2)_""",1)"  ;WAC;10.12.2004 WENN REALTION ,SPRACHE ALS Relations-Primärschlüssel
	. ;
	. //IF $EXTRACT(YPARA(2))'="," IF YSKPR(1)'="" IF $PIECE(YDATA,Y,8)'=4 IF $DATA(@(YSKPR(1))) SET YPARA(7)=YPARA(7)-1 QUIT  ;NUR WENN SORTKEY VORHANDEN ODER GLEICH ;only when on hand Or without delay 
	. if YSKPR="" if $extract(YPARA(2))'="," if YSKPR(1)'="" if $piece(YDATA,Y,8)'=4 if $data(@(YSKPR(1))) set YPARA(7)=YPARA(7)-1 quit  ; SR14508: Don't check for space if we want an actual match (below)
	. ;
	. ;IF YSKPR(1)'="" IF $PIECE(YDATA,Y,8)'=4 IF $DATA(@(YSKPR(1))) SET YPARA(7)=YPARA(7)-1 QUIT  ;NUR WENN SORTKEY VORHANDEN ODER GLEICH ;only when on hand Or without delay 
	. if YSKPR'="" if $piece(YDATA,Y,8)'=4 if '$data(@(YSKPR)) set YPARA(7)=YPARA(7)-1 quit  ;NUR WENN SORTKEY VORHANDEN ODER GLEICH ;only when on hand Or without delay
	. ;
	. ;MEHRFACHANZEIGEN SUCHEN (YPARA(3)) ;seek 
	. new YSORTXD
	. if YFILE'=YPARA(1) set YPARA(19)="^"_YPARA(1)_"("_$piece(YPARA(19),"(",2,99)
	. set YSORTXD=$$^WWWSETL(YPARA(19))   ;WERTE LESEN  ;read 
	. if YUCI="INTRAPREND" if YPARA(1)="WWW013" if +$piece(YSORTXD,Y,35)'=0 if $piece(YSORTXD,Y,35)<$horolog set YPARA(7)=YPARA(7)-1 quit  ;MITARBEITER AUSGESCHIEDEN 
	. set YSORT=""
	. ;
	. ; Calculated Fields
	. if $get(YPARA("CF"))'=""	do
	. . for YPARA(88)=1:1 quit:$piece(YPARA("CF"),",",YPARA(88))=""  do
	. . . set idField = $piece(YPARA("CF"),",",YPARA(88))
	. . . if idField set YSORT=YSORT_$$GetCalculatedValue(YPARA(1),idField,YPARA(2)_","_YPARA(5),YSORTXD)
	. ;
	. for YPARA(88)=1:1 quit:$piece(YPARA(3),",",YPARA(88))=""  do
	. . new YSORTX,YSORTX1,YSORTX2,YSORTX3
	. . set YSORTX=$piece(YSORTXD,Y,$piece(YPARA(3),",",YPARA(88)))   ;FELD LESEN  ;field read 
	. . ;
	. . if $get(YPARA(79))'="" do  ;MARKIERUNG
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=1 if $length(YPARA(80))<10000 set YPARA(80)=YPARA(80)_YPARA(5)_","  ; red
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=2 if $length(YPARA(81))<10000 set YPARA(81)=YPARA(81)_YPARA(5)_","  ; yellow
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=3 if $length(YPARA(82))<10000 set YPARA(82)=YPARA(82)_YPARA(5)_","  ; green 
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=4 if $length(YPARA(83))<10000 set YPARA(83)=YPARA(83)_YPARA(5)_","  ; blue 
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=5 if $length(YPARA(84))<10000 set YPARA(84)=YPARA(84)_YPARA(5)_","  ; gray
	. . ;
	. . set YSORTX2=$get(^WWW003(0,YPARA(1),$piece(YPARA(3),",",YPARA(88)),1))   ;AUS DATENSATZDEFINITION ;out of 
	. . set YSORTX1=$piece(YSORTX2,Y,3)   ;FELDART DER DATENFELDES ;the 
	. . set YSORTX4=$piece(YSORTX2,Y,4)   ;LÄNGE DES FELDES ;length 
	. . ;I $F(YPARA(2),",") I YSORTX4>25 S YSORTX4=25  ;MAXIMALE LÄNGE
	. . if +$piece(YPARA(52),",",YPARA(88))'=0 set YSORTX4=+$piece(YPARA(52),",",YPARA(88))   ;MANUELLE LÄNGE DER RELATION ;length
	. . if YPARA(88)'=1 set YPARA(55)=2  ;MEHRERE PARAMETER IN DER ANZEIGE! ;divers parameter within the 
	. . 
	. . if YSORTX'="" if $piece(YSORTX2,Y,8)'="" do  quit   ;WENN PARAMETER DES EINTRAGS ;when parameter 
	. . . new YFILE,YDATA
	. . . set YDATA="" if $extract($piece(YSORTX2,Y,8),1,2)'="IN" if $extract($piece(YSORTX2,Y,8),1,3)'="WWW" set YDATA=$get(^WWW001(0,$piece(YSORTX2,Y,8),1))  ;VARIABEL AUS DATENSATZDEF.  FELD 8=DATEIART ;out of field 
	. . . set YFILE=$piece(YSORTX2,Y,8)
	. . . if $piece(YDATA,Y,22)'="" set YFILE=$piece(YDATA,Y,22)  ;ANDERE DATEI ;data file 
	. . . set YSORTX3="^"_YFILE_"("_$$^WWWYM($piece(YSORTX2,Y,8))_","
	. . . if $piece(YDATA,Y,12)'="" if $piece(YDATA,Y,13)'="" do  ;UCI & VOL
	. . . . quit:$find(YSORTX3,"^[")
	. . . . set YSORTX3="^["""_$piece(YDATA,Y,12)_""","""_$piece(YDATA,Y,13)_"""]"_$piece(YSORTX3,"^",2,999)
	. . . ;
	. . . if $piece(YSORTX2,Y,9)'="" set:'$find($piece(YSORTX2,Y,9),"""") YPARA(7)=YPARA(7)-1 quit:'$find($piece(YSORTX2,Y,9),"""")  set YSORTX3=YSORTX3_$piece(YSORTX2,Y,9)_","
	. . . set YSORTX3=YSORTX3_""""_YSORTX_""""
	. . . if $piece(YDATA,Y,8)'=4 set YSORTX3=YSORTX3_",1)"
	. . . if $piece(YDATA,Y,8)=4  set YSORTX3=YSORTX3_")"
	. . . if YFILE'=$piece(YSORTX2,Y,8) set YSORTX3="^"_$piece(YSORTX2,Y,8)_"("_$piece(YSORTX3,"(",2,99)
	. . . set YSORTXX=$piece($$^WWWSETL(YSORTX3),Y,$piece($piece(YSORTX2,Y,10),",",1))
	. . . set YSORT=YSORT_YSORTXX_" "
	. . ;
	. . ;ZUSAMMENBAU DER ANZEIGEZEILE OHNE PARAMETER ;the without parameter 
	. . set YSORT=YSORT_$$GetLiteral^WWWTR(YSORTX1,YSORTX)_" "
	. ;
	. ;
	. ;ZUSAMMENSTELLEN
	. if YSORT="" set YSORT=" "
	. set YSORT(1)=YSORT
	. ;
	. ;UNTERSCHIEDLICHE SPRACHE ;Language 
	. if YPARA(0)'="" do
	. . set YPARA(99)="^"_YPARA(0)_"("_$$^WWWYM(YPARA(1),1)
	. . if $piece(YDATA,Y,12)'="" if $piece(YDATA,Y,13)'="" do  ;UCI UND VOL ;UCI And 
	. . . quit:$find(YPARA(99),"^[")
	. . . set YPARA(99)="^["""_$piece(YDATA,Y,12)_""","""_$piece(YDATA,Y,13)_"""]"_$piece(YPARA(99),"^",2,999)
	. . ;
	. . set Q=0
	. . for YI=1:1 set YPARA(9)=$piece(YPARA(2),",",YI) quit:YPARA(9)=""  set YPARA(99)=YPARA(99)_YPARA(9)_"," if $extract(YPARA(9))'="""" if $get(@(YPARA(9)))="" set Q=1 quit
	. . if Q=1 set Q=0 quit
	. . set YPARA(99)=YPARA(99)_"YPARA(5),"""_SPRACHE_""",1)"
	. . if $data(@(YPARA(99)))#10'=1 quit  ;KEIN SATZ ;no typesetting 
	. . set YSORT=$piece($get(@YPARA(99)),Y,1)
	. . if YSORT="" set YSORT=" "
	. . set YSORT(1)=YSORT
	. 
	. set YSORT = $$CheckFreeFields(YSORT,YPARA(1),YPARA(2),YPARA(5))   ;BR014594
	. ;SORTIERUNG ;sorting 
	. if +YPARA(12)=0 set YSORT(1)=YPARA(5)  ;NICHT SORTIERT ;Not 
	. set YSORT=$extract($translate(YSORT,"|"," "),1,100)
	. ;
	. ; YPARA(20) "Relation Display Options" = 1 : "Display Relations after Input"
	. ;
	. if (YXTYP'=6) && (YXTYP'=20) if YPARA(20)=1 if YXTYP'=1 do  if YPARA(22)=1 set YPARA(7)=YPARA(7)-1 quit
	. . new YYI
	. . set YPARA(22)=1
	. . if YUMLAU=""  if $find($translate(YPARA(5),LC,UC),$translate(YINHALT,LC,UC)) set YPARA(21)=YPARA(21)+1,YPARA(22)=0
	. . if YUMLAU'="" if $find($$^WWWUMLAU(YPARA(5),1),$$^WWWUMLAU(YINHALT,1))       set YPARA(21)=YPARA(21)+1,YPARA(22)=0
	. ;
	. if (YXTYP=6) || (YXTYP=20) if YPARA(20)=1 do  if YPARA(22)=1 set YPARA(7)=YPARA(7)-1 quit
	. . new YYI
	. . set YPARA(22)=1
	. . if YUMLAU=""  for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $find($translate(YPARA(5),LC,UC),$translate($piece(YINHALT,",",YYI),LC,UC)) set YPARA(21)=YPARA(21)+1,YPARA(22)=0 quit
	. . if YUMLAU'="" for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $find($$^WWWUMLAU(YPARA(5),1),$$^WWWUMLAU($piece(YINHALT,",",YYI),1)) set YPARA(21)=YPARA(21)+1,YPARA(22)=0 quit
	. ;
	. if YXTYP=1 if YPARA(20)=1 do  if YPARA(22)=1 set YPARA(7)=YPARA(7)-1 quit
	. . new YYI
	. . set YPARA(22)=1
	. . if YUMLAU=""  for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $translate(YPARA(5),LC,UC)=$translate($piece(YINHALT,",",YYI),LC,UC) set YPARA(21)=1,YPARA(22)=0,YPARA(7)=1 quit
	. . if YUMLAU'="" for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $$^WWWUMLAU(YPARA(5),1)=$$^WWWUMLAU($piece(YINHALT,",",YYI),1) set YPARA(21)=1,YPARA(22)=0,YPARA(7)=1 quit
	. ;
	. set YPARA(53)=YPARA(5)
	. if YPARA(555)=1  set YPARA(53)=$$^WWWDATE(YPARA(53))  ;DATUM IM KEY ;Date KEY 
	. if +YPARA(51)'=0 set YPARA(53)=$extract(YPARA(53)_"                                       ",1,$length(YPARA(51)))  ;LÄNGE PRIMÄRSCHLÜSSEL ;longitude 
	. ;
	. if $find(YSORT,"m2") set YSORT=$piece(YSORT,"m2",1)_"m²"_$piece(YSORT,"m2",2,99)
	. if $find(YSORT,"m3") set YSORT=$piece(YSORT,"m3",1)_"m³"_$piece(YSORT,"m3",2,99)
	. ;
	. set YPARA("ANZ")=$get(YPARA("ANZ"))+1  ;TYBD;18,2,2004
	. if $get(YPARA(120))'=1 do  ;TYBD;21,8,2004;SCHLÜSSEL ANZEIGE J/N;26262
	. . if $extract(YPARA(2))'="""" if +YPARA(12)'=0 do  ;wenn Parameter ;when Parameters 
	. . . if '$find(YPARA(53),"---------------") set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=YSORT_" - "_YPARA(53)_" " quit  ;$$^WWWUML(YSORT_" - "_YPARA(53)_" ") QUIT  ;BEI PARAMETERN
	. . . if $find(YPARA(53),"---------------")  set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=YPARA(53)_" "             quit  ;$$^WWWUML(YSORT_" - "_YPARA(53)_" ") QUIT  ;BEI PARAMETERN
	. . ;
	. . if $extract(YPARA(2))="""" if +YPARA(12)'=0 do  quit  ;SORTIERT 
	. . . if +YPARA(5)'=0!(YPARA(5)=0) set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=" "_YSORT_" " quit   ;$$^WWWUML(" "_YSORT_" ") QUIT   ;BEI PARAMETERN OHNE PARAMETERANGABE BEI ZAHLEN
	. . . if +YPARA(5)=0 if YPARA(5)'=0 do
	. . . . if $$$UPPER(YPARA(53))'=$$$UPPER(YPARA(5)) if '$find(YPARA(53),"---------------") set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=" "_YSORT_"-"_YPARA(53)_" " quit    ;WENN GLEICH DANN NICHT ;TYBD;1,8,2007;25508;$$^WWWUML(" "_YSORT_"-"_YPARA(53)_" ") QUIT   ;BEI PARAMETERN OHNE PARAMETERANGABE BEI BUCHSTABEN
	. . . . if '$find(YPARA(53),"---------------")                                            set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=" "_YPARA(53)_" "           quit   ;$$^WWWUML(" "_YSORT_"-"_YPARA(53)_" ") QUIT   ;BEI PARAMETERN OHNE PARAMETERANGABE BEI BUCHSTABEN
	. . ;
	. . if $translate(YPARA(53)," ")'=$translate(YSORT," ") if YSORT'="" if +YPARA(12)=0 do 
	. . . if '$find(YSORT,"---------------") do  quit
	. . . . set ^WWWSOR(YUSER,2,$extract($$$UPPER(YSORT(1)),1,100),YPARA(5))=YPARA(53)_" - "_YSORT_" " 
	. . . ;
	. . . if $find(YSORT,"---------------")  set ^WWWSOR(YUSER,2,$$$UPPER(YSORT(1)),YPARA(5))=YSORT_" " quit   ;$$^WWWUML(YPARA(53)_" - "_YSORT_" ") QUIT
	. . ;
	. . if $translate(YPARA(53)," ")=$translate(YSORT," ")||(YSORT="") if +YPARA(12)=0 set ^WWWSOR(YUSER,2,$$$UPPER(YSORT(1)),YPARA(5))=" "_YPARA(53)_" " quit   ;$$^WWWUML(" "_YPARA(53)_" ") QUIT
	. . ; 
	. if $get(YPARA(120))=1 do  ;TYBD;21,8,2004;SCHLÜSSEL ANZEIGE J/N;26262
	. . if $extract(YPARA(2))'="""" if +YPARA(12)'=0 do  ;wenn Parameter ;when Parameters 
	. . . if '$find(YPARA(53),"---------------") set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=YPARA(53)      quit  ;YSORT_" - "_YPARA(53)_" " QUIT  ;$$^WWWUML(YSORT_" - "_YPARA(53)_" ") QUIT  ;BEI PARAMETERN
	. . . if $find(YPARA(53),"---------------")  set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=YPARA(53)_" "  quit  ;$$^WWWUML(YSORT_" - "_YPARA(53)_" ") QUIT  ;BEI PARAMETERN
	. . . ;
	. . if $extract(YPARA(2))="""" if +YPARA(12)'=0 do  quit  ;SORTIERT 
	. . . if +YPARA(5)'=0!(YPARA(5)=0) set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=" "_YSORT_" " quit   ;$$^WWWUML(" "_YSORT_" ") QUIT   ;BEI PARAMETERN OHNE PARAMETERANGABE BEI ZAHLEN
	. . . if +YPARA(5)=0 if YPARA(5)'=0 do
	. . . . if $$$UPPER(YPARA(53))'=$$$UPPER(YPARA(5)) if '$find(YPARA(53),"---------------") set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=" "_YPARA(53)  ;" "_YSORT_"-"_YPARA(53)_" " QUIT    ;WENN GLEICH DANN NICHT ;TYBD;1,8,2007;25508;$$^WWWUML(" "_YSORT_"-"_YPARA(53)_" ") QUIT   ;BEI PARAMETERN OHNE PARAMETERANGABE BEI BUCHSTABEN
	. . . . if '$find(YPARA(53),"---------------") set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YPARA(5))=" "_YPARA(53)_" " quit   ;$$^WWWUML(" "_YSORT_"-"_YPARA(53)_" ") QUIT   ;BEI PARAMETERN OHNE PARAMETERANGABE BEI BUCHSTABEN
	. . . ;
	. . if $translate(YPARA(53)," ")'=$translate(YSORT," ") if YSORT'="" if +YPARA(12)=0 do 
	. . . if '$find(YSORT,"---------------") do  quit
	. . . . set ^WWWSOR(YUSER,2,$extract($zconvert(YSORT(1),"U"),1,100),YPARA(5))=YSORT   ;YPARA(53)_" - "_YSORT_" " 
	. . . ;   
	. . . if $find(YSORT,"---------------")  set ^WWWSOR(YUSER,2,$$$UPPER(YSORT(1)),YPARA(5))=YSORT_" " quit   ;$$^WWWUML(YPARA(53)_" - "_YSORT_" ") QUIT
	. . ;
	. . if $translate(YPARA(53)," ")=$translate(YSORT," ")!(YSORT="") if +YPARA(12)=0 set ^WWWSOR(YUSER,2,$$$UPPER(YSORT(1)),YPARA(5))=" "_YPARA(53)_" " quit   ;$$^WWWUML(" "_YPARA(53)_" ") QUIT
	
	quit
 
 
CheckFreeFields(pstrDescription,pstrDesignClass="",pstrListClass="",pintField="")
	;-------------------------------------------------------------------------------
	; Display more information in the list if this is a class definition field.
	; Include customisation and highlight with brackets any _FREE fields.
	;
	; Called By: PARAM^WWWFORM71
	; 
	; Params:
	; 	pstrDescription:  	The text to display in the list.  
	; 						Passes straight through if this is not WWW003
	; 	pstrDesignClass:	The class that the list is based on.
	; 						(Only interested if this is WWW003, class fields)
	; 	pstrListClass:		The class that the properties are used to populate the list.
	; 	pintField:			The field number.
	;
	; Returns:
	;
	; History:
	; 25-May-2009	shobby	SR16574: This routine should handle both class and form.
	; 							When pstrDesignClass is WWW003 then pintField is the
	; 							classfield, else it is the form field.
	; 17-Mar-2008	shobby	SRBR014874: Use $$$FREE macro, put blnFree test inside
	; 							the 'if' conditions.
	; 14-Mar-2008	GM		SRBR014874: Included conditions to show translation itens
	; 03-Aug-2007	shobby	SRBR014594: Handle the case where pstrListClass is
	; 							passed in as a string and not a variable.
	; 							ie INFIBPAR on the SALAccount form.
	; 09-Jul-2007	shobby	SRBR014594: Created
	;-------------------------------------------------------------------------------
	new blnFree,intClassField,intFormField,objWWW003,objWWW0031
	
	set blnFree = $$$NO
 
	if (pstrDesignClass="WWW003") || (pstrDesignClass="WWW122") {
		if (pstrListClass'="") && (pintField'="") {
			set blnFree = ($extract(pstrDescription,1,5)=$$$FREE)
			if ($extract(pstrListClass)="""") && ($extract(pstrListClass,$length(pstrListClass))="""") {
				set pstrListClass = $extract(pstrListClass,2,$length(pstrListClass)-1)
			} else {
				set pstrListClass = @pstrListClass
			}
				
			if pstrDesignClass="WWW122" {
				set intFormField  = pintField
				set intClassField = $$$GetClassField(pstrListClass,intFormField)
				if intClassField'="" {
					set pstrDescription = $$^WWWFELDNAME(pstrListClass,"D",intClassField)
				} else {
					set pstrDescription = $$^WWWFELDNAME(pstrListClass,"M",intFormField)
				}
				
			} elseif pstrDesignClass="WWW003" {
				set intClassField = pintField
				set intFormField  = $$$GetFormField(pstrListClass,intClassField)
				if intFormField'="" {
					set pstrDescription = $$^WWWFELDNAME(pstrListClass,"D",intClassField)
				} else {
					set pstrDescription = $get(^WWW0031(0,pstrListClass,intClassField,SPRACHE,1))
					if pstrDescription="" {
						set pstrDescription = $$$WWW003PropertyDescription($get(^WWW003(0,pstrListClass,intClassField,1)))
					}
				}																				
			}
			
			if $extract(pstrDescription,1,5)=$$$FREE {
				; if there is no customisation use the property name so we know which free field it is.
				set objWWW003       = $get(^WWW003(0,pstrListClass,intClassField,1))
				set pstrDescription = $$$WWW003PropertyName(objWWW003)
			}
			if blnFree set pstrDescription = "["_pstrDescription_"]"
		}
	} 	
	quit pstrDescription
	
	
ComboToSearch(penumDataType,pidRelation)
	;-------------------------------------------------------------------------------
	; Can this field be changed from a combo to a search ?
	;
	; Called By : BUILDSELECT^COMGridEdit31F, BUILDSELECTOVERRIDE^COMGridEdit31F,
	;             NeedToCheck^WWWFieldValidation, Start^WWWFORM7, PARAM^WWWFORM71
	; 
	; Params:	penumDataType 	- data type of the field
	; 			pidRelation		- relation class
	;
	; ByRefs:
	;
	; Returns:	boolean
	;
	; History:
	; 19-Oct-2010	Shobby	SR17565: removal of WWW001ComboToSearch test reverted
	; 22-Aug-2006	JW		SR14929: Created
	;-------------------------------------------------------------------------------
	new blnChange
	
	set blnChange = $$$NO
	
	if $case(+penumDataType,0:$$$YES,1:$$$YES,4:$$$YES,:$$$NO) {     ; "EINGABE"? Automatic/Text/Select ?
		;SR17565
		if $$$WWW001ComboToSearch($get(^WWW001(0,pidRelation,1))) {
			set blnChange = $$$YES
		}
	}
	quit blnChange
	
	
PARAM1
	;-------------------------------------------------------------------------------
	;PARAMETER NUR WENN FELDER mit einem Wert ;parameter only when by means of Value 
	; 
	; Called By: PARAM^WWWFORM71
	; 
	;-------------------------------------------------------------------------------
	quit:$data(^WWWSOR(YUSER,2))
	
	;IF +YPARA(3)=0 SET YPARA(3)=1 ;table-mat 
	set YPARA(4) = "^"_YFILE_"("_$$^WWWYM(YPARA(1),1)
	set Q      = 0
	set YCOLOR = 0
	if $find(YPARA(2),"FARBE") set YCOLOR=1
	for YI=1:1 set YPARA(9)=$piece(YPARA(2),",",YI) quit:YPARA(9)=""  set YPARA(4)=YPARA(4)_YPARA(9)_"," if $extract(YPARA(9))'="""" if $get(@(YPARA(9)))="" set Q=1 quit
	if Q=1 set Q = 0 quit
	
	if $piece(YDATA,Y,8)'=4 set YPARA(6) = YPARA(4)_""""_YINHALT_""",1)"
	if $piece(YDATA,Y,8)=4  set YPARA(6) = YPARA(4)_""""_YINHALT_""")"
	if YFILE'=YPARA(1) set YPARA(6) = "^"_YPARA(1)_"("_$piece(YPARA(6),"(",2,99)
	set YSORT = $$^WWWSETL(YPARA(6)) 

	if YSORT'="" do  quit
	. set YSORT(1)=""
	. // Calculated Fields //SR16663
	. if $get(YPARA("CF"))'=""	do
	. . for YPARA(88)=1:1 quit:$piece(YPARA("CF"),",",YPARA(88))=""  do
	. . . set idField = $piece(YPARA("CF"),",",YPARA(88))
	. . . if idField set YSORT(1)=YSORT(1)_$$GetCalculatedValue(YPARA(1),idField,YPARA(2)_","_YINHALT,YSORT)
	. ;
	. for YPARA(88)=1:1 quit:$piece(YPARA(3),",",YPARA(88))=""  do
	. . set YSORT(1)=YSORT(1]]><![CDATA[)_$piece(YSORT,Y,+$piece(YPARA(3),",",YPARA(88)))
	. . if $piece(YSORT,Y,+$piece(YPARA(3),",",YPARA(88)))'="" set YSORT(1)=YSORT(1)_","
	. . if $get(YPARA(79))'="" do  ;MARKIERUNG
	. . . if +$piece($$^WWWSETL(YPARA(6)),Y,YPARA(79))=1 set YPARA(80)=YINHALT  ;ROT  ;red
	. . . if +$piece($$^WWWSETL(YPARA(6)),Y,YPARA(79))=2 set YPARA(81)=YINHALT  ;GELB ;yellow
	. . . if +$piece($$^WWWSETL(YPARA(6)),Y,YPARA(79))=3 set YPARA(82)=YINHALT  ;GRÜN ;green
	. ;
	. if $extract($reverse(YSORT(1)))="," set YSORT(1)=$reverse($extract($reverse(YSORT(1)),2,99))   ;, AUSFILTERN;22,07,2003
	. set YPARA(21)=1
	. set YSORT(1)=$translate(YSORT(1),"()","[]")  ;FIS;11.05.04;25691
	. ;SET ^WWWSOR(YUSER,2,$$^WWWUPER(YINHALT),YINHALT)=YSORT(1)_" ("_YSORT(1)_")"    ;$$^WWWUML(YSORT(1))_" ("_$$^WWWUML(YSORT(1))_")";TYBD;28,7,2004;25887;
	. set ^WWWSOR(YUSER,2,$zconvert(YINHALT,"U"),YINHALT)=YSORT(1)_" ("_YSORT(1)_")"  ;$$^WWWUML(YSORT(1))_" ("_$$^WWWUML(YSORT(1))_")";TYBD;28,7,2004;25887;
	
	set YPARA(10)=YPARA(4)_"YPARA(5))"
	set YPARA(5)="" 
	
	; YPARA(20) "Relation Display Options" '= 1 : "Display Relations after Input"
	;                                      '= 0 : "Display All Relations"
	if YPARA(20)'=1 for YPARA(7)=1:1 set YPARA(5)=$order(@(YPARA(10))) quit:YPARA(5)=""  do  if YPARA(20)'=0 quit:YPARA(7)>1300  if $get(YYYFORM)="WWWHPR" quit:YPARA(7)>3   ;BEI HILFE  ;next to succour 
	. set YPARA(6)=YPARA(4)_""""_YPARA(5)_""",1)"
	. set YPARA(44)="^"_YFILE_"("_$$^WWWYM(YPARA(1),1)
	. for YI=1:1 set YPARA(19)=$piece(YPARA(2),",",YI) quit:YPARA(19)=""  do
	. . set:$extract(YPARA(19))'="""" YPARA(19)=""""_$get(@YPARA(19))_""""
	. . set YPARA(44)=YPARA(44)_YPARA(19)_","
	. ;
	. if $piece(YDATA,Y,8)=4 do
	. . set ERSTFELD=$order(^WWW003(0,YPARA(1),""))
	. . set FELDKEY=""
	. . if ERSTFELD'="" set FELDKEY=$piece(^WWW003(0,YPARA(1),ERSTFELD,1),Y,11)
	. . set YPARA(19)=YPARA(44)_""""_YPARA(5)_""""
	. . if FELDKEY'="" set YPARA(19)=YPARA(19)_","_FELDKEY
	. . set YPARA(19)=YPARA(19)_")"
	. ;
	. if $piece(YDATA,Y,8)'=4 set YPARA(19)=YPARA(44)_""""_YPARA(5)_""",1)"
	. ;
	. set YSORT="" 
	. for YPARA(88)=1:1 quit:$piece(YPARA(3),",",YPARA(88))=""  do
	. . new YSORTX,YSORTX1,YSORTX2,YSORTX3,YSORTX4
	. . if YFILE'=YPARA(1) set YPARA(19)="^"_YPARA(1)_"("_$piece(YPARA(19),"(",2,99)
	. . set YSORTX=$piece($$^WWWSETL(YPARA(19)),Y,$piece(YPARA(3),",",YPARA(88)))
	. . quit:YSORTX=""
	. . if $get(YPARA(79))'="" do  ;MARKIERUNG
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=1 set YPARA(80)=YPARA(80)_YPARA(5)_","  ; red 
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=2 set YPARA(81)=YPARA(81)_YPARA(5)_","  ; yellow
	. . . if +$piece($$^WWWSETL(YPARA(19)),Y,YPARA(79))=3 set YPARA(82)=YPARA(82)_YPARA(5)_","  ; green 
	. . ;
	. . if YPARA(88)'=1 set YPARA(55)=2
	. . set YSORTX2=$get(^WWW003(0,YPARA(1),$piece(YPARA(3),",",YPARA(88)),1))
	. . set YSORTX1=$piece(YSORTX2,Y,3)
	. . set YSORTX4=$piece(YSORTX2,Y,4)
	. . if $find(YPARA(3),",") if YSORTX4>25 set YSORTX4=25
	. . if +$piece($piece($get(YSATZ),Y,64),",",YPARA(88))'=0 set YSORTX4=+$piece($piece($get(YSATZ),Y,64),",",YPARA(88))   ;MANUELLE LÄNGE DER RELATION ;longitude the 
	. . if $piece(YSORTX2,Y,8)'="" do  quit   ;WENN PARAMETER ;when parameter 
	. . . new YFILE,YDATA
	. . . set YDATA="" if $extract($piece(YSORTX2,Y,8),1,2)'="IN" if $extract($piece(YSORTX2,Y,8),1,3)'="WWW" set YDATA=$get(^WWW001(0,$piece(YSORTX2,Y,8),1))  ;VARIABEL AUS DATENSATZDEF.  FELD 8=DATEIART ;out of field 
	. . . set YFILE=$piece(YSORTX2,Y,8)
	. . . if $piece(YDATA,Y,22)'="" set YFILE=$piece(YDATA,Y,22)  ;ANDERE DATEI ;data file 
	. . . set YSORTX3="^"_YFILE_"("_$$^WWWYM($piece(YSORTX2,Y,8))_","
	. . . if $piece(YSORTX2,Y,9)'="" quit:'$find($piece(YSORTX2,Y,9),"""")  set YSORTX3=YSORTX3_$piece(YSORTX2,Y,9)_","
	. . . set YSORTX3=YSORTX3_""""_YSORTX_""""
	. . . if $piece(YDATA,Y,8)'=4 set YSORTX3=YSORTX3_",1)"
	. . . if $piece(YDATA,Y,8)=4 set YSORTX3=YSORTX3_")"
	. . . if YFILE'=$piece(YSORTX2,Y,8) set YSORTX3="^"_$piece(YSORTX2,Y,8)_"("_$piece(YSORTX3,"(",2,99)
	. . . set YSORTXX=$piece($$^WWWSETL(YSORTX3),Y,$piece($piece(YSORTX2,Y,10),",",1))
	. . . set YSORT=YSORT_$extract(YSORTXX_"                                        ",1,YSORTX4)_" "
	. . ;
	. . set YSORT=YSORT_$extract($$GetLiteral^WWWTR(YSORTX1,YSORTX)_"                                        ",1,YSORTX4)_" "
	. ;
	. if YSORT="" set YSORT=" "
	. set YSORT(1)=YSORT
	. ;
	. set YPARA(0)=$$$WWW001LanguageClassForRelations($get(^WWW001(0,YPARA(1),1)))  ;Language class
	. if YPARA(0)'="" do
	. . set YPARA(99)="^"_YPARA(0)_"("_$$^WWWYM(YPARA(1),1)
	. . if $piece(YDATA,Y,12)'="" if $piece(YDATA,Y,13)'="" do  ;UCI UND VOL ;UCI And 
	. . . quit:$find(YPARA(99),"^[")
	. . . set YPARA(99)="^["""_$piece(YDATA,Y,12)_""","""_$piece(YDATA,Y,13)_"""]"_$piece(YPARA(99),"^",2,999)
	. . ;
	. . set Q=0
	. . for YI=1:1 set YPARA(9)=$piece(YPARA(2),",",YI) quit:YPARA(9)=""  set YPARA(99)=YPARA(99)_YPARA(9)_"," if $extract(YPARA(9))'="""" if $get(@(YPARA(9)))="" set Q=1 quit
	. . if Q=1 set Q=0 quit
	. . set YPARA(99)=YPARA(99)_"YPARA(5),"""_SPRACHE_""",1)"
	. . quit:$data(@(YPARA(99)))#10'=1
	. . set YSORT=$piece($get(@YPARA(99)),Y,1)
	. . if YSORT="" set YSORT=" "
	. . set YSORT(1)=YSORT
	. ;
	. if +YPARA(12)=0 set YSORT(1)=YPARA(5)  ;NICHT SORTIERT ;Not 
	. set YSORT=$extract($translate(YSORT,"|"," "),1,100)
	. ;
	. ; YPARA(20) "Relation Display Options" '= 1 : "Display Relations after Input"
	. ; 
	. if (YXTYP'=6) && (YXTYP'=20) if YPARA(20)=1 if YXTYP'=1 do  if YPARA(22)=1 set YPARA(7)=YPARA(7)-1 quit
	. . new YYI
	. . set YPARA(22)=1
	. . if YUMLAU="" if $find($translate(YPARA(5),LC,UC),$translate(YINHALT,LC,UC)) set YPARA(21)=YPARA(21)+1,YPARA(22)=0
	. . if YUMLAU'="" if $find($$^WWWUMLAU(YPARA(5),1),$$^WWWUMLAU(YINHALT,1))      set YPARA(21)=YPARA(21)+1,YPARA(22)=0
	. ;
	. if (YXTYP=6) || (YXTYP=20) if YPARA(20)=1 do  if YPARA(22)=1 set YPARA(7)=YPARA(7)-1 quit
	. . new YYI
	. . set YPARA(22)=1
	. . if YUMLAU=""  for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $find($translate(YPARA(5),LC,UC),$translate($piece(YINHALT,",",YYI),LC,UC)) set YPARA(21)=YPARA(21)+1,YPARA(22)=0 quit
	. . if YUMLAU'="" for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $find($$^WWWUMLAU(YPARA(5),1),$$^WWWUMLAU($piece(YINHALT,",",YYI),1))       set YPARA(21)=YPARA(21)+1,YPARA(22)=0 quit
	. ;
	. if YXTYP=1 if YPARA(20)=1 do  if YPARA(22)=1 set YPARA(7)=YPARA(7)-1 quit
	. . new YYI
	. . set YPARA(22)=1
	. . if YUMLAU=""  for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $translate(YPARA(5),LC,UC)=$translate($piece(YINHALT,",",YYI),LC,UC) set YPARA(21)=1,YPARA(22)=0,YPARA(7)=1 quit
	. . if YUMLAU'="" for YYI=1:1 quit:$piece(YINHALT,",",YYI)=""  if $$^WWWUMLAU(YPARA(5),1)=$$^WWWUMLAU($piece(YINHALT,",",YYI),1)       set YPARA(21)=1,YPARA(22)=0,YPARA(7)=1 quit
	. ;
	. if +YPARA(12)'=0 set ^WWWSOR(YUSER,2,$zconvert(YSORT(1),"U"),YPARA(5)) = YSORT_" ("_YPARA(5)_")"
	. if +YPARA(12)=0  set ^WWWSOR(YUSER,2,$zconvert(YSORT(1),"U"),YPARA(5)) = YPARA(5)_" ("_YSORT_")"
	
	quit
	
	
PARAM2
	;-------------------------------------------------------------------------------
	; LESEN DER DISK ALS PARAMETER ;read the when parameter 
	; 
	; Called By: PARAM^WWWFORM71
	; 
	;-------------------------------------------------------------------------------
	set YPARA(19) = YPARA(2)  ;SUCHSTRING
	if YPARA(19)'="" if $extract(YPARA(19))'="""" set YPARA(19) = $get(@YPARA(2)) if YPARA(19)="" quit  ;VARIABLENZUWEISUNG UND Q, WENN DIE VARIABLE ""
	set YPARA(19) = $translate(YPARA(19),"""*")
	if $find(YPARA(1),"##") {    ;wenn mandant = path in verzeichnis ;when within 
		set YPARA(1) = $piece(YPARA(1),"##",1)_$piece($translate($piece($get(^WWW012(0,YM,1)),Y,1),"-,+#/\()[]")," ",1)_$piece(YPARA(1),"##",2)
	}
	
	if $extract(YPARA(1),$length(YPARA(1)))'="\" set YPARA(1) = YPARA(1)_"\"
	set YPARA(1) = YPARA(1)_"*"                ;ALLES AUSWÄHLEN ;whatsoever pick out 
	set YSORT(1) = $zsearch(YPARA(1))
	if YSORT(1)'=""  for  set YSORT(1)=$zsearch("") quit:YSORT(1)=""  do
	. quit:$find(YSORT(1),"..")   ;DIRECTORY
	. quit:'$find(YSORT(1),".")   ;KEINE ERWEITERUNG ODER DIR ;no amplification Or yourself 
	. quit:'$find($piece(YSORT(1),"\",$length(YSORT(1),"\")),YPARA(19))      ;NICHT VORHANDEN IN SUCHSTRING, SUCHSTRING = FILENAME
	. set ^WWWSOR(YUSER,2,$$^WWWUMLAU(YSORT(1),3)_" ",YSORT(1))=YSORT(1)_" "
	. set YTYPE    = "TEXT"
	. set YPARA(7) = $get(YPARA(7))+1
	
	quit
	
	
GetCalculatedValue(pidClass,pidField,pidKeys,pstrData)
	;-------------------------------------------------------------------------------
	; Get the Calculated Value of the Field for a Class
	;
	; Called By: TEXT^COMGridEdit31F, MiniText^COMGridEdit31F,
	;            DisplayValue^COMViewFilter, CreateCombo^COMViewFilterCombo,
	;            PARAMETER^WWWEVENT, PARAM^WWWFORM71
	; 
	; Params:	pidClass	- Class
	;			pidField	- Calculated Field #
	;			pidKeys		- ID Keys
	;			pstrData	- Original Data
	;
	; ByRefs:
	;
	; Returns:	%String Value
	;
	; History:
	; 05-Jul-2011	shobby	SR17815: Somewhere buried deep down in the call to
	;							GetCalculatedValue, it may be that a calculated property
	;							is called that relies on YFELD being set.
	;							INMOVByPallet (OriginalPhysicalStorage) is an example.
	;							So the parameter has been renamed to YFELD .
	;							pstrData should remain because it is possible that INRECSummary
	;							is using this.
	; 29-Jun-2009	PPP		SR16663: Add the Calculated Relation Display Fields
	;-------------------------------------------------------------------------------
	new strValue,YFELD ;SR17815

	set YFELD=pstrData ;SR17815
	set pidKeys  = $translate(pidKeys,$char(34))
	set strValue = $$GetCalculatedValue^COMViewFilter(pidClass,"c"_pidField,pidKeys,pstrData," ")
	
	quit strValue
	
	/* EXAMPLES OF YPARA and WWWSOR USE			["--" : No entry]
	
			A number of the YPARA entries are used to simulate $query using $order
			 - would have been better using different variable names.
			These are indicated with "##".
			Others are used to construct the "Enum - Description  " string
			Those marked with "?" may not be cleared from some earlier processing
			rather than indicating actual data passed in.
	
	^WWW100(0,"JA/NEIN",SPRACHE,enumCode,1)
	---------------------------------------

	INITIAL YPARA								FINAL YPARA							FINAL WWWSOR
		0			  --							""									^WWWSOR(YUSER,2,0,0) = "0 - No  "
		1			WWW100							WWW100								^WWWSOR(YUSER,2,1,1) = "1 - Yes  "
		2			"JA/NEIN",SPRACHE				"JA/NEIN",SPRACHE
		3			1								1
		4			  --					##		^WWW100(0,"JA/NEIN",SPRACHE,
		5			  --					##		""
		6			  --					##		^WWW100(0,"JA/NEIN",SPRACHE,"1",1)
	?	7			0								3
		9			  --							""
		10			  --					##		^WWW100(0,"JA/NEIN",SPRACHE,YPARA(5))
		12			""								""
		19			  --					##		^WWW100(0,"JA/NEIN","EN","1",1)
		20			""								""
		21			  --							0
	?	29			1								1
		33			""								""
		44			  --					##		^WWW100(0,"JA/NEIN","EN",
		51			  --							""
		52			  --							""
		53			  --							1
		55			  --							0
		67			""								""
		79			""								""
	?	80			""								""
		81			  --							""
		82			  --							""
		83			  --							""
		84			  --							""
		88			  --							2
		120			""								""
		155			  --							6
		"ANZ"		  --							2
	?	"CF			""								""
		"Excluded"	  --							0
		
		
	^WWW100(0,"FARBE",SPRACHE,enumCode,1)
	---------------------------------------
	INITIAL YPARA								FINAL YPARA							FINAL WWWSOR
		0			  --							""									^WWWSOR(YUSER,2,1,1)   = "1 - aliceblue  "
		1			WWW100							WWW100								^WWWSOR(YUSER,2,2,2)   = "2 - antiquewhite  "
		2			"FARBE",SPRACHE					"FARBE",SPRACHE						...
		3			1								1									^WWWSOR(YUSER,284,284) = "284 - windowtext  "
		4			  --					##		^WWW100(0,"FARBE",SPRACHE,
		5			  --					##		""
		6			  --					##		^WWW100(0,"FARBE",SPRACHE,"284",1)
	?	7			0								169
		9			  --							""
		10			  --					##		^WWW100(0,"FARBE",SPRACHE,YPARA(5))
		12			""								""
		19			  --					##		^WWW100(0,"FARBE","EN","284",1)
		20			""								""
		21			  --							0
	?	29			1								1
		33			""								""
		44			  --					##		^WWW100(0,"FARBE","EN",
		51			  --							""
		52			  --							""
		53			  --							284
		55			  --							0
		67			""								""
		79			""								""
	?	80			""								""
		81			  --							""
		82			  --							""
		83			  --							""
		84			  --							""
		88			  --							2
		120			""								""
		155			  --							6
		"ANZ"		  --							168
	?	"CF			""								""
		"Excluded"	  --							0

	
		
	*/
	
	
	
	
]]></Routine>
</Export>