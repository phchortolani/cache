<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMUtilTranslate" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMUtilTranslate
	;-------------------------------------------------------------------------------
	; Translate CORE(EN) to another language
	; Add/Change customisable tables to prepare a language customised version of AlphaLinc.
	; Default assumes simplified Chinese (ZH).
	; 
	; Expects a text file "EN-ZH.txt", tab-delimited, 2 columns, EN then ZH (Simplified Chinese)
	; 
	; Impacts:
	; 	COMHelp				WWW0011				WWW120
	; 	COMHelpButton		WWW0021				WWW1201
	; 	COMHelpField		WWW0031				WWW1203
	; 	COMView				WWW003CalcLang		WWW120D
	; 	INPARA				WWW009				WWW121D1
	; 	WWWUSERPARA			WWW101				WWW122
	; 											WWW1221
	; 											WWW122D
	; 											WWW122D1
	; 											WWW124
	; 											WWW124D
	; 	Updates
	; 	WWW120D				(where can translate)
	; 	WWW120				(WHERE on the menu "Material_Management")
	; 	WWW122				(where can translate)
	; 	WWW122D				(where can translate)
	; 	COMView				(where can translate)
	; 			
	; 	Creates
	; 	WWW1201				WHERE Language1= "ZH"	(*,"ZH")
	; 	WWW1221				WHERE Language1= "ZH"	(*,*,"ZH")
	; 	WWW122D1			WHERE Language1= "ZH"	(*,*,*,"ZH")
	; 	WWW0031				WHERE Language1= "ZH"	(*,*,"ZH")
	; 	WWW0021				WHERE Language1= "ZH"	(*,*,"ZH")
	; 	WWW121D1			WHERE Language1= "ZH"	(*,*,*,"ZH")
	; 	WWW003CalcLang		WHERE Language1= "ZH"	(*,*,"ZH")
	; 	WWW0011				WHERE Language1= "ZH"	(*,"ZH")
	; 	
	; 	Updates/Creates
	; 	WWW124				WHERE Language1= "ZH"	(*,"ZH")
	; 	WWW124D				WHERE Language1= "ZH"	(*,"ZH")
	; 	WWW1203				WHERE Language1= "ZH"	(*,"ZH")
	; 	WWW009				WHERE Language1= "ZH"	("ZH")
	; 	WWW101				WHERE Language1= "ZH"	(*,"ZH")
	; 	WWWUSERPARA			WHERE Language1= "ZH"	(*,"ZH")
	; 	INPARA				WHERE Language1= "ZH"	(*,"ZH")
	; 	COMHelp				WHERE Language1= "ZH"	(*,"ZH")
	; 	COMHelpButton		WHERE Language1= "ZH"	(*,"ZH")
	; 	COMHelpField		WHERE Language1= "ZH"	(*,"ZH")
	; 		
	; Note:
	; 	1. COMUtilTranslateEN.mac should be used to create/change core (English) data.
	; 		It searches for Portuguese (PT) and translates to EN.
	; 		It assumes merging the SES deployment back into core.
	; 	2. This program (COMUtilTranslate.mac) does not impact the core data.
	; 		It creates/changes customisable data which overrides the core data as per
	; 		the language of the user login.
	; 	3. 	"EN" = English
	; 		"PT" = Portuguese (Brazil)
	; 		"ZH" = Chinese (simplified)
	; 		The default for this program is "ZH" Chinese.  Any language is allowed.
	; 		A possibility which initially seems silly is for EN to EN.  This would be one way
	; 		to deploy into another industry, or to handle problems like US English.
	; 		Example: "Patient" => "Customer"
	; 	
	; Logic:
	; 	1. Preparation:
	; 		Collate a list of all the EN phrases used anywhere, into one excel column.
	; 		To begin with, assume the list PT-EN gives the EN to be translated.
	; 		Translate the EN column into a second ZH column.
	; 		From excel, save as text, tab-delimitted.
	; 		Do this routine, passing in the text file.
	; 	2. Load the translation pairs.
	; 	3. Search all phrases in all customisable classes, looking for any phrases that match
	; 	 	one of the EN phrases.
	; 	4. Create/replace the customisable ZH data.
	; 
	; Limitations:
	; 	1. Assumes numeric code values.
	; 		If text (ZH or EN) has been used in a code value (enumeration, list of values, 
	; 		parameter), it will be left as text; only the description will be translated.
	; 		Programs might trigger logic based on the code value.
	; 	2. This method ignores context. 
	; 		Some translations may be inaccurate depending upon the context.
	; 
	; History:
	; 08-Jul-2011	GRF		SR16925: boolean macros; expand commands; arrange new commands;
	;							Add FIXME notes
	; 02-Dec-2008	CRH		Revised.
	; 18-Nov-2008	CRH		Renamed from COMUtilTranslate.mac to COMUtilTranslateEN.mac
	; 						Created COMUtilTranslate.mac from COMUtilTranslateEN.mac
	; 						COMUtilTranslate.mac now is from EN (core) to any other language.
	;-------------------------------------------------------------------------------
#include %occInclude
#include COMSYS
#include WWWConst
#include COMConst
#Define Tab $char(9)
#Define DoTheSave 0
	; 0=Diagnostic; 1=Update
#Define DoCoreToo 0
	; Some tables (eg. WWW120D) cannot be customised, cannot support multi-languages.
	; 0=Leave these as EN; 1=Replace with ZH
#Define DoTheReIndex 0
	; Indexes should normally be maintained okay by the $Save
	; 0=Rely on $Save; 1=Force a re-index
#Define TraceLevel 3
	; 0=No trace; 1=Control; 2=Detail; 3=Verbose; 4=Debug
#Define IFTrace(%Level)    if (($$$TraceLevel) >= %Level)
#Define Trace(%Level,%Msg) if (($$$TraceLevel) >= %Level) {w $zdt($h),$$$Tab,%Msg,!}
	
	
Start(pstrTranslations="\\medicalbox\Temp\EN-ZH.txt",pLanguage="ZH",pstrMenu="Material_Management") public
	;-------------------------------------------------------------------------------
	; Start = main program
	; 	do Start^COMUtilTranslate(""\\medicalbox\Temp\EN-ZH.txt"")
	; pstrTranslations	tab-delimited text, 2 columns, EN, ZH
	; 					EN <tab> ZH	[<tab>Check]
	; pLanguage			
	; pstrMenu			Menu branch, form titles will match these menu selections
	;------------------------------------------------------------------------------- 
	new arrPhrasesENtoZH,arrPhrasesZHtoEN,intRun,strStatus
 
	do ^WWWVAR				; initialise @NM variables
	
	$$$Trace(1,"# COMUtilTranslate version 02-Dec-2008")
	
	;***************************************
	tstart
	;***************************************
	do $ZUTIL(68,40,1)   	; end of file handling
	
	set strStatus=$$$OK
	;
	; Load EN-ZH Phrases
	;
	$$$Trace(1,"# Loading Phrases from "_pstrTranslations)
	set strStatus=$$LoadTranslationPairs(pstrTranslations,.arrPhrasesENtoZH,.arrPhrasesZHtoEN)
 
	for intRun=1:1:21 { ; eg. intRun=1,6  or  intRun=1:1:21
		quit:strStatus'=$$$OK
		
		if intRun=1 {
			$$$Trace(1,"# Forms, WWW120 ...")
			set strStatus=$$Forms(.arrPhrasesENtoZH,pLanguage)
		}	
		elseif intRun=2 {
			$$$Trace(1,"# Forms Var, WWW120D ...")
			set strStatus=$$FormsVar(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=3 {
			$$$Trace(1,"# Buttons, WWW124 ...")
			set strStatus=$$Buttons(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=4 {
			$$$Trace(1,"# Tabs, WWW1203 ...")
			set strStatus=$$Tabs(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=5 {
			$$$Trace(1,"# Captions, WWW122 ...")
			set strStatus=$$Captions(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=6 {
			$$$Trace(1,"# Free Captions, WWW122D  ...")
			set strStatus=$$FreeCaptions(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=7 {
			$$$Trace(1,"# App Params, WWW101 ...")
			set strStatus=$$AppParams(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=8 {
			$$$Trace(1,"# Language Text, WWW009 ...")
			set strStatus=$$LanguageText(.arrPhrasesENtoZH,.arrPhrasesZHtoEN,pLanguage)
		}
		elseif intRun=9 {
			$$$Trace(1,"# User Params, WWWUSERPARA ...")
			set strStatus=$$ParamUserPara(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=10 {
			$$$Trace(1,"# IN Params, INPARA ...")
			set strStatus=$$ParamInPara(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=11 {
			$$$Trace(1,"# Class Fields, WWW003  ...")
			set strStatus=$$ClassFields(.arrPhrasesENtoZH,pLanguage)
		}
 		elseif intRun=12 {
			$$$Trace(1,"# Class Index Fields, WWW002  ...")
			set strStatus=$$ClassIndexFields(.arrPhrasesENtoZH)
		}
 		elseif intRun=13 {
			$$$Trace(1,"# Class Index Fields Var, WWW121D  ...")
			set strStatus=$$ClassIndexFieldsVar(.arrPhrasesENtoZH,pLanguage)
		}
  		elseif intRun=14 {
			$$$Trace(1,"# Calc Fields, WWW003Calc  ...")
			set strStatus=$$CalcFields(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=15 {
			$$$Trace(1,"# Classes, WWW001  ...")
			set strStatus=$$Classes(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=16 {
			$$$Trace(1,"# COMView ...")
			set strStatus=$$COMView(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=17 {
			$$$Trace(1,"# COMHelp ...")
			set strStatus=$$COMHelp(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=18 {
			$$$Trace(1,"# COMHelpButton ...")
			set strStatus=$$COMHelpButton(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=19 {
			$$$Trace(1,"# COMHelpField ...")
			set strStatus=$$COMHelpField(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=20 {
			$$$Trace(1,"# Buttons, WWW124D ...")
			set strStatus=$$ButtonsD(.arrPhrasesENtoZH,pLanguage)
		}
		elseif intRun=21 {
			$$$Trace(1,"# Forms title, WWW004 to WWW120 ...")
			set strStatus=$$FormsMenu(pstrMenu)
		}
 
		else {
			$$$Trace(1,"  Bug. Option not implemented: " _ intRun)
			quit
		}
  
		$$$Trace(4,"  Completed")
	}
	;***************************************
	if $$$ISERR(strStatus) {
		$$$Trace(0,"# Completed with ERROR.")
		write !,"ERROR: ",strStatus,!
		write "ROLLBACK",!
		trollback
	}
	else {
		$$$Trace(0,"# Completed Successfully.")
		write !,"Completed Successfully.",!
		write "Test, then TCOMMIT or TROLLBACK",!
	}
	;***************************************
 
	quit strStatus
 
	;-------------------------------------------------------------------------------
	; EN-ZH.txt
	; 	Load text file into memory to form the basis of translations
	; 	parrPhraseEN = pairs, indexed on EN
	; 	parrPhraseZH = pairs, indexed on ZH
	; Note:
	; 1. Some EN strings are longer than 256.  Index fails. 
	; 	The array will index on first 50 chars,
	; 	then list duplicates within that as pairs of EN,ZH
	; 2. Should we ignore the first row of the input file, as it contains column labels?
	; 3. Case sensitivity is a pain.  We could uppercase on store, but for better logging,
	; 	we will do it every time with every compare.  Index is always capitals.
	; 4. Text file expected has EN <tab> ZH
	; 	then optionally also <tab>Check/OK
	;-------------------------------------------------------------------------------
LoadTranslationPairs(pstrFile,&parrPhraseEN,&parrPhraseZH) private
	new strStatus,intLine,strLine,strX
	new strEN,strZH,strCheck
 
 	set parrPhraseEN = ""
	set strStatus=$$$OK
	open pstrFile:"R":10 else  set strStatus="Can not open file "_pstrFile quit strStatus
	for intLine=1:1 {
		quit:$zeof
		quit:strStatus'=$$$OK
		continue:(intLine<=2)	// Ignore the first line as it contain the column headings
								// 1:1 gives 2 in the first pass (believe it or not)
		use pstrFile
		read strLine
		use 0
		quit:$zstrip(strLine,"<>W")=""
		
		set strEN=$zstrip($piece(strLine,$$$Tab,1),"<>W")
		set strZH=$zstrip($piece(strLine,$$$Tab,2),"<>W")
		set strCheck=$zstrip($piece(strLine,$$$Tab,3),"<>W")
		if (strCheck = "Check") {
			$$$Trace(3,"  "_intLine_$$$Tab_strLine)
		}
		// Some strings have annoying enclosing quotes, and double quotes inside
		// Strip by executing a set on the command line
		if (($extract(strEN,1,1) = $c(34)) && ($extract(strEN,$length(strEN)) = $c(34))) {
			set strX = "set strEN = " _ strEN
			xecute strX
		}
		if (($extract(strZH,1,1) = $c(34)) && ($extract(strZH,$length(strZH)) = $c(34))) {
			set strX = "set strZH = " _ strZH
			xecute strX
		}
		if ((strEN '= strZH) && ($length(strEN) > 0) && ($length(strZH) > 0)) {
			do AddPairEN(strEN, strZH, .parrPhraseEN)
			do AddPairZH(strEN, strZH, .parrPhraseZH)
		}
	} 
	close pstrFile
	$$$Trace(2,"Loaded "_(intLine - 1)_" phrases")
	quit strStatus
 
	;-------------------------------------------------------------------------------
	; Given a EN string, set pstrZH to its translation and return YES.
	; If no ZH translation is defined, set to the EN and return NO.
	;-------------------------------------------------------------------------------
TranslateEN(parrPhraseEN,pstrEN,&pstrZH) private
	new blnFound,strFind,strIndex,intSeq,strX
	
	$$$Trace(4,"  "_pstrEN)
	set strFind = $zstrip(pstrEN,"<>W")
	set pstrZH = pstrEN
	set blnFound = ((strFind '= $$$NULLOREF) && (strFind '= ""))
	if (blnFound) {
		set blnFound = $$$NO
		; Strip any annoying enclosing quotes
		if (($extract(strFind,1,1) = $c(34)) && ($extract(strFind,$length(strFind)) = $c(34))) {
			set strX = "set strFind = " _ strFind
			xecute strX
		}		
		set strIndex = $zcvt($extract(strFind,1,50),"u")	; All indexes stored upper case
		if ($data(parrPhraseEN(strIndex))) {
			set intSeq = ""
			for {
				set intSeq = $order(parrPhraseEN(strIndex,intSeq))
				quit:intSeq=""
				
				if (strFind = parrPhraseEN(strIndex,intSeq,"EN")) { 
					set pstrZH = parrPhraseEN(strIndex,intSeq,"ZH") 
					set blnFound = $$$YES
					quit
				}
			}
		}	
	}
	quit blnFound
	
	;-------------------------------------------------------------------------------
	; This is a reverse of the above.
	; Given a ZH string, set pstrEN to its equivalent and return YES.
	; If no EN equivalent is defined, set to the ZH and return NO
	;-------------------------------------------------------------------------------
TranslateZH(parrPhraseZH,pstrZH,&pstrEN) private
	new blnFound,strFind,strIndex,intSeq,strX
	
	$$$Trace(4,"  "_pstrZH)
	set strFind = $zstrip(pstrZH,"<>W")
	set pstrEN = pstrZH
	set blnFound = ((strFind '= $$$NULLOREF) && (strFind '= ""))
	if (blnFound) {
		set blnFound = $$$NO
		; Strip any annoying enclosing quotes
		if (($extract(strFind,1,1) = $c(34)) && ($extract(strFind,$length(strFind)) = $c(34))) {
			set strX = "set strFind = " _ strFind
			xecute strX
		}		
		set strIndex = $zcvt($extract(strFind,1,50),"u")	; All indexes stored upper case
		if ($data(parrPhraseZH(strIndex))) {
			set intSeq = ""
			for {
				set intSeq = $order(parrPhraseZH(strIndex,intSeq))
				quit:intSeq=""
				
				if (strFind = parrPhraseZH(strIndex,intSeq,"ZH")) { 
					set pstrEN = parrPhraseZH(strIndex,intSeq,"EN") 
					set blnFound = $$$YES
					quit
				}
			}
		}	
	}
	quit blnFound
	
	
	;-------------------------------------------------------------------------------
	; Store the translation pair in parrPhraseEN, to allow EN-ZH translation.
	;-------------------------------------------------------------------------------
AddPairEN(pstrEN,pstrZH,&parrPhraseEN) private
	new strIndex,intSeq,strZH
	
	set strIndex = $zcvt($extract(pstrEN,1,50),"u")	; All indexes stored upper case
 
	set intSeq = $order(parrPhraseEN(strIndex,""),-1)+1 
	
	if (intSeq = 1) || ('$$TranslateEN(.parrPhraseEN,pstrEN,.strZH)) {
		set parrPhraseEN(strIndex,intSeq,"EN")=pstrEN
		set parrPhraseEN(strIndex,intSeq,"ZH")=pstrZH
	}
	quit
		
	;-------------------------------------------------------------------------------
	; Store the translation pair in parrPhraseZH, to allow ZH-EN translate
	;-------------------------------------------------------------------------------
AddPairZH(pstrEN,pstrZH,&parrPhraseZH) private
	new strIndex,intSeq,strZH
	
	set strIndex = $zcvt($extract(pstrZH,1,50),"u")	; All indexes stored upper case
	set intSeq = $order(parrPhraseZH(strIndex,""),-1)+1 
	
	if (intSeq = 1) || ('$$TranslateZH(.parrPhraseZH,pstrZH,.pstrEN)) {
		set parrPhraseZH(strIndex,intSeq,"EN")=pstrEN
		set parrPhraseZH(strIndex,intSeq,"ZH")=pstrZH
	}
	quit
	
	
	;-------------------------------------------------------------------------------
	; WWW120	Forms
	; 	Keys:	FormName
	; 	Fields:	FormHeaderOrImageFile
	; Form titles
 	; Read WWW120, Create into WWW1201
	;-------------------------------------------------------------------------------
Forms(&parrPhraseEN,pLanguage) private
	new strStatus,strKey
	new objForm, obj1201
	new idForm
	new strFormHeaderOrImageFile
	new strZHFormHeaderOrImageFile
	
	set strStatus = $$$OK
	set idForm    = ""
	for {
		quit:strStatus'=$$$OK
		set idForm = $order(^WWW120(0,idForm))
		quit:idForm=""
		set objForm = $get(^WWW120(0,idForm,1))
		
		set strFormHeaderOrImageFile = $$$WWW120FormHeaderOrImageFile(objForm)
		
		if ($$TranslateEN(.parrPhraseEN,strFormHeaderOrImageFile,.strZHFormHeaderOrImageFile)) {
			; We have EN text for which we know ZH translation.
			; We can create the ZH customisation
			$$$Trace(4,"  "_idForm_$$$Tab_strFormHeaderOrImageFile_$$$Tab_strZHFormHeaderOrImageFile)
			if '$data(^WWW1201(0,idForm,pLanguage)) {
				; Create ZH
				set obj1201 = ""
				set $$$WWW1201Text(objForm) = strFormHeaderOrImageFile
				set strKey = idForm_","_pLanguage
				$$$Trace(2,"  Created WWW1201"_$$$Tab_strKey_$$$Tab_strFormHeaderOrImageFile)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW1201",strKey,obj1201,$$$YES)
				}
			}
		}
		else {
			$$$Trace(4,"  TRANSLATE?:"_idForm_$$$Tab_strFormHeaderOrImageFile)
		}
	}
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW1201")
	}
	quit strStatus
	
FormsVar(&parrPhraseEN,pLanguage) private
	;-------------------------------------------------------------------------------
	; WWW120D	Customised Forms
	; 	Keys:	FormName	Company
	; 	Fields:	FormHeaderOrImageFile	CustomHelpText
	; Forms, company override
	; Note: 
	; 	Ideally, we would copy EN into a customised class, but one does not exist.
	; 	This will change the core form titles and help text into ZH.
	; 	Multi-language support is not possible.
	; 	Q. Can LanguageText WWW009 be used somehow?
	;
	; History
	; 25-May-2011	shobby	SR16925.2: IndividualHelpText->CustomHelpText
	;-------------------------------------------------------------------------------
	new blnTranslated,idCompany,idForm,objForm
	new strCustomHelpText,strFormHeaderOrImageFile,strKey
	new strStatus,strZHCustomHelpText,strZHFormHeaderOrImageFile
	
	set strStatus = $$$OK
	set idForm = ""
	for {
		quit:strStatus'=$$$OK
		set idForm = $order(^WWW120D(0,idForm))
		quit:idForm=""
		
		set idCompany = ""
		for {
			quit:strStatus'=$$$OK
			set idCompany = $order(^WWW120D(0,idForm,idCompany))
			quit:idCompany=""
			set objForm = $get(^WWW120D(0,idForm,idCompany,1))
			
			set strFormHeaderOrImageFile = $$$WWW120DFormHeaderOrImageFile(objForm)
			set strCustomHelpText = $$$WWW120DCustomHelpText(objForm)
			
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strFormHeaderOrImageFile,.strZHFormHeaderOrImageFile)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strCustomHelpText,.strZHCustomHelpText) || blnTranslated
 
			if (blnTranslated) {
				set $$$WWW120DFormHeaderOrImageFile(objForm) = strZHFormHeaderOrImageFile
				set $$$WWW120DCustomHelpText(objForm) 	= strZHCustomHelpText
				set strKey = idForm_","_idCompany
				$$$Trace(2,"  "_strKey_$$$Tab_strFormHeaderOrImageFile_$$$Tab_strZHFormHeaderOrImageFile)				
				if ($$$DoTheSave && $$$DoCoreToo) {
					set strStatus = $$$Save("WWW120D",strKey,objForm,$$$YES)
				}
			}
		}
	}
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW120D")
	}
 
	quit strStatus
	
	;-------------------------------------------------------------------------------
	; Make form titles match menu prompts.
	; Process a specified menu branch, to make all forms linked from that menu
	; have their form title matching the menu prompt.
	; Note:
	; 	There are cases where multiple menu selections call the same form.
	; 	In these cases, the form title will be left as is.
	; 	The menu choices do not support multi-languages.
	; WWW120	Forms
	; 	Keys:	FormName
	; 	Fields:	FormHeaderOrImageFile
	; WWW004	Menu
	; 	Keys:	ApplicationName	MenuItemNumber
	; 	Fields:	FormName	MenuDescription
	;-------------------------------------------------------------------------------
FormsMenu(pstrApplicationName) private
	new strStatus,strKey
	new objMenu, objForm
	new idApplicationName, idMenuItemNumber
	new idFormName
	new strFormName, strMenuDescription
	new strFormHeaderOrImageFile
	new strZHFormHeaderOrImageFile
	new idMenuItemNumber2, objMenu2, strFormName2, blnFound
	
	set strStatus=$$$OK
	
	; Loop through the matching menu branch
	set idApplicationName = pstrApplicationName
	set idMenuItemNumber = ""
	for {
		quit:strStatus'=$$$OK
		set idMenuItemNumber = $order(^WWW004(0,idApplicationName,idMenuItemNumber))
		quit:idMenuItemNumber=""
		
		set objMenu = $get(^WWW004(0,idApplicationName,idMenuItemNumber,1))
		set strFormName = $$$WWW004FormName(objMenu)
		set strMenuDescription = $$$WWW004MenuDescription(objMenu)
		$$$Trace(4,"  "_strFormName)
		
		; Ignore this form if it is called more than once under this menu
		set idMenuItemNumber2 = ""
		set blnFound = $$$NO
		for {
			set idMenuItemNumber2 = $order(^WWW004(0,idApplicationName,idMenuItemNumber2))
			quit:idMenuItemNumber2=""
			if (idMenuItemNumber2 '= idMenuItemNumber) {
				set objMenu2 = $get(^WWW004(0,idApplicationName,idMenuItemNumber2,1))
				set strFormName2 = $$$WWW004FormName(objMenu2)
				set blnFound = (strFormName2 = strFormName)
				quit:blnFound'=$$$NO
			}
		}
		continue:blnFound'=$$$NO
		
		if (strFormName '= "") {
			; Get the matching form
			set objForm = $get(^WWW120(0,strFormName,1))
			set strFormHeaderOrImageFile = $$$WWW120FormHeaderOrImageFile(objForm)
			if ((strFormHeaderOrImageFile '= "")
				&& (strMenuDescription '= "")
				&& (strFormHeaderOrImageFile '= strMenuDescription)) {
				
				set $$$WWW120FormHeaderOrImageFile(objForm) = strMenuDescription
				set strKey = strFormName
				$$$Trace(2,"  "_strKey_$$$Tab_"["_strFormHeaderOrImageFile_"]"_$$$Tab_"["_strMenuDescription_"]")
				if ($$$DoTheSave && $$$DoCoreToo) {
					set strStatus = $$$Save("WWW120",strKey,objForm,$$$YES)
				}
			}
		}
	}
	quit strStatus
	
	;-------------------------------------------------------------------------------
	; WWW124	Buttons
	; 	Keys:	FormName	Language1	ButtonNumber
	; 	Fields:	ButtonDescription	Hilfe(Help)	PictureFileOnButton	ImageFileForDisabledButt
	; Search ZH buttons, replace EN text with ZH text, EN gif with ZH gif.
	; Search EN buttons, for those that do not have ZH defined, Create ZH button.
	; Expect button images to exist for translations
	; Notes:
	; 	This makes an assumption that the same button number has the same meaning
	; 	within each language.
 	;-------------------------------------------------------------------------------
Buttons(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objButton
	new idFormName,idLanguage1,idButtonNumber
	new strButtonDescription,	strHelp,	strPictureFileOnButton,		strImageFileForDisabledButto
	new strZHButtonDescription,	strZHHelp,	strZHPictureFileOnButton,	strZHImageFileForDisabledButto
	
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW124(0,idFormName))
		quit:idFormName=""
		
		;
		; Search ZH buttons, replace EN with ZH
		;
		set idLanguage1 = pLanguage
		set idButtonNumber=""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			
			set objButton = $get(^WWW124(0,idFormName,idLanguage1,idButtonNumber,1))
			set strButtonDescription 			= $$$WWW124ButtonDescription(objButton)
			set strHelp 						= $$$WWW124Hilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124PictureFileOnButton(objButton)
			set strImageFileForDisabledButto 	= $$$WWW124ImageFileForDisabledButto(objButton)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strButtonDescription,.strZHButtonDescription)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelp,.strZHHelp) || blnTranslated
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPictureFileOnButton,.strZHPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strImageFileForDisabledButto,.strZHImageFileForDisabledButto) || blnTranslated
 
			if (blnTranslated) { ; At least one of the strings needed translation
 
				set $$$WWW124ButtonDescription(objButton) 			= strZHButtonDescription
				set $$$WWW124Hilfe(objButton) 						= strZHHelp			
				set $$$WWW124PictureFileOnButton(objButton)			= strZHPictureFileOnButton
				set $$$WWW124ImageFileForDisabledButto(objButton) 	= strZHImageFileForDisabledButto					
				set strKey = idFormName_","_idLanguage1_","_idButtonNumber
				$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strPictureFileOnButton_$$$Tab_strZHPictureFileOnButton)				
				if (strHelp '= strZHHelp) {
					$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strHelp_$$$Tab_strZHHelp)				
				}
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW124",strKey,objButton,$$$YES)
				}
			}
		}
 
		;
		; Search EN buttons, for those that do not have ZH defined, Create ZH button
		; 
		set idLanguage1 = "EN"
		set idButtonNumber=""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			continue:$data(^WWW124(0,idFormName,pLanguage,idButtonNumber))      ; only consider extra "EN" buttons
			
			set objButton = $get(^WWW124(0,idFormName,idLanguage1,idButtonNumber,1))  ; EN without ZH
			set strButtonDescription 			= $$$WWW124ButtonDescription(objButton)
			set strHelp 						= $$$WWW124Hilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124PictureFileOnButton(objButton)
			set strImageFileForDisabledButto	= $$$WWW124ImageFileForDisabledButto(objButton)
						
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strButtonDescription,.strZHButtonDescription)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelp,.strZHHelp) ;$$$$$$$$$$$$$$$ Translate
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPictureFileOnButton,.strZHPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strImageFileForDisabledButto,.strZHImageFileForDisabledButto) || blnTranslated			
			
			set $$$WWW124ButtonDescription(objButton) 			= strZHButtonDescription
			set $$$WWW124Hilfe(objButton) 						= strZHHelp
			set $$$WWW124PictureFileOnButton(objButton)			= strZHPictureFileOnButton
			set $$$WWW124ImageFileForDisabledButto(objButton)	= strZHImageFileForDisabledButto				
			set strKey = idFormName_","_pLanguage_","_idButtonNumber
			$$$Trace(2,"  Created"_$$$Tab_idFormName_$$$Tab_strButtonDescription_$$$Tab_strZHButtonDescription)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWW124",strKey,objButton,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW124")
	}
	quit strStatus
	
	;-------------------------------------------------------------------------------
	; WWW124D	Additional buttons
	; 	Keys:	FormName	Language1	ButtonNumber
	; 	Fields:	ButtonDescription	Hilfe(Help)	PictureFileOnButton	ImageFileForDisabledButt
	; Buttons, separated from core 124, appended during a build.
	; Search ZH buttons, replace EN text with ZH text, EN gif with ZH gif.
	; Search EN buttons, for those that do not have ZH defined, Create ZH button.
	; Expect button images to exist for translations.
 	;-------------------------------------------------------------------------------
ButtonsD(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objButton
	new idFormName,idLanguage1,idButtonNumber
	new strButtonDescription,	strHelp,	strPictureFileOnButton,		strImageFileForDisabledButto
	new strZHButtonDescription,	strZHHelp,	strZHPictureFileOnButton,	strZHImageFileForDisabledButto
	
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW124D(0,idFormName))
		quit:idFormName=""
		
		;
		; Search ZH buttons, replace EN with ZH
		;
		set idLanguage1    = pLanguage
		set idButtonNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124D(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			
			set objButton = $get(^WWW124D(0,idFormName,idLanguage1,idButtonNumber,1))
			set strButtonDescription 			= $$$WWW124DButtonDescription(objButton)
			set strHelp 						= $$$WWW124DHilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124DPictureFileOnButton(objButton)
			set strImageFileForDisabledButto 	= $$$WWW124DImageFileForDisabledButto(objButton)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strButtonDescription,.strZHButtonDescription)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelp,.strZHHelp) || blnTranslated
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPictureFileOnButton,.strZHPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strImageFileForDisabledButto,.strZHImageFileForDisabledButto) || blnTranslated
 
			if (blnTranslated) { ; At least one of the strings needed translation
				set $$$WWW124DButtonDescription(objButton) 			= strZHButtonDescription
				set $$$WWW124DHilfe(objButton) 						= strZHHelp			
				set $$$WWW124DPictureFileOnButton(objButton)		= strZHPictureFileOnButton
				set $$$WWW124DImageFileForDisabledButto(objButton) 	= strZHImageFileForDisabledButto					
				set strKey = idFormName_","_idLanguage1_","_idButtonNumber
				$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strPictureFileOnButton_$$$Tab_strZHPictureFileOnButton)				
				if (strHelp '= strZHHelp) {
					$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strHelp_$$$Tab_strZHHelp)				
				}
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW124D",strKey,objButton,$$$YES)
				}
			}
		}
 
		;
		; Search EN buttons, for those that do not have ZH defined, Create ZH button
		; 
		set idLanguage1    = "EN"
		set idButtonNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124D(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			continue:$data(^WWW124D(0,idFormName,pLanguage,idButtonNumber))      ; only consider extra "EN" buttons
			
			set objButton = $get(^WWW124D(0,idFormName,idLanguage1,idButtonNumber,1))  ; EN without ZH
			set strButtonDescription 			= $$$WWW124DButtonDescription(objButton)
			set strHelp 						= $$$WWW124DHilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124DPictureFileOnButton(objButton)
			set strImageFileForDisabledButto	= $$$WWW124DImageFileForDisabledButto(objButton)
						
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strButtonDescription,.strZHButtonDescription)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelp,.strZHHelp) ;$$$$$$$$$$$$$$$ Translate
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPictureFileOnButton,.strZHPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strImageFileForDisabledButto,.strZHImageFileForDisabledButto) || blnTranslated			
			
			set $$$WWW124DButtonDescription(objButton) 			= strZHButtonDescription
			set $$$WWW124DHilfe(objButton) 						= strZHHelp
			set $$$WWW124DPictureFileOnButton(objButton)		= strZHPictureFileOnButton
			set $$$WWW124DImageFileForDisabledButto(objButton)	= strZHImageFileForDisabledButto				
			set strKey = idFormName_","_pLanguage_","_idButtonNumber
			$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strButtonDescription_$$$Tab_strZHButtonDescription)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWW124D",strKey,objButton,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW124D")
	}
	quit strStatus
	
	
	;-------------------------------------------------------------------------------
	; WWW1203	Tabs (tabsheets)
	; 	Keys:	FormName	Language1	Page1
	; 	Fields:	PictureFileForPageTag	ToolTip
	; Search ZH tabs, replace EN with ZH.
	; Search EN tabs, for those that do not have ZH defined, Create ZH tab.
 	;-------------------------------------------------------------------------------
Tabs(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objTab
	new idFormName,idLanguage1,idPage1
	new strPictureFileForPageTag,	strToolTip
	new strZHPictureFileForPageTag,	strZHToolTip
	
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW1203(0,idFormName))
		quit:idFormName=""
		
		;
		; Search ZH tabs, replace EN with ZH
		;
		set idLanguage1 = pLanguage
		set idPage1     = ""
		for {
			quit:strStatus'=$$$OK
			set idPage1 = $order(^WWW1203(0,idFormName,idLanguage1,idPage1))
			quit:idPage1=""
			
			set objTab = $get(^WWW1203(0,idFormName,idLanguage1,idPage1,1))
			set strPictureFileForPageTag	= $$$WWW1203PictureFileForPageTag(objTab)
			set strToolTip 					= $$$WWW1203ToolTip(objTab)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPictureFileForPageTag,.strZHPictureFileForPageTag)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strToolTip,.strZHToolTip) || blnTranslated ;$$$$$$$$$$$$$$$ Translate
			
			if (blnTranslated) { ; At least one of the strings needed translation
				set $$$WWW1203PictureFileForPageTag(objTab) = strZHPictureFileForPageTag
				set $$$WWW1203ToolTip(objTab) 				= strZHToolTip			
				set strKey = idFormName_","_idLanguage1_","_idPage1
				$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strPictureFileForPageTag_$$$Tab_strZHPictureFileForPageTag)
				if ($$$DoTheSave && (strStatus=$$$OK)) {
					set strStatus = $$$Save("WWW1203",strKey,objTab,$$$YES)
				}
			}
		}
 
		;
		; Search EN tabs, for those that do not have ZH defined, Create ZH tab
		; 
		set idLanguage1 = "]]><![CDATA[EN"
		set idPage1     = ""
		for {
			quit:strStatus'=$$$OK
			set idPage1 = $order(^WWW1203(0,idFormName,idLanguage1,idPage1))
			quit:idPage1=""
			continue:$data(^WWW1203(0,idFormName,pLanguage,idPage1))      ; only consider extra "EN" tabs
			
			set objTab = $get(^WWW1203(0,idFormName,idLanguage1,idPage1,1))  ; EN without ZH
			set strPictureFileForPageTag 	= $$$WWW1203PictureFileForPageTag(objTab)
			set strToolTip 					= $$$WWW1203ToolTip(objTab)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPictureFileForPageTag,.strZHPictureFileForPageTag)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strToolTip,.strZHToolTip) ;$$$$$$$$$$$$$$$ Translate
			
			set $$$WWW1203PictureFileForPageTag(objTab)	= strZHPictureFileForPageTag
			set $$$WWW1203ToolTip(objTab) 				= strZHToolTip			
			set strKey = idFormName_","_pLanguage_","_idPage1
			$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strPictureFileForPageTag_$$$Tab_strZHPictureFileForPageTag)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWW1203",strKey,objTab,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW1203")
	}
	quit strStatus
	
 
	;-------------------------------------------------------------------------------
 	; WWW122	Captions (field prompts) (Overrides WWW003)
 	; 	Keys:	FormName	DataItemNumber
 	; 	Fields:	GroupName	ManualCaption
 	; Search captions, (DO NOT replace EN with ZH)
 	; Copy into WWW1221
	;-------------------------------------------------------------------------------
Captions(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objCaption, obj1221
	new idFormName,idDataItemNumber
	new strGroupName,	strManualCaption
	new strZHGroupName,	strZHManualCaption
	new strLangTextID
	
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW122(0,idFormName))
		quit:idFormName=""
		
		;
		; Search captions, create WWW1221 (ZH)
		; Create WWW009 language text as needed
		;
		set idDataItemNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idDataItemNumber = $order(^WWW122(0,idFormName,idDataItemNumber))
			quit:idDataItemNumber=""
			
			set objCaption = $get(^WWW122(0,idFormName,idDataItemNumber,1))
			set strGroupName		= $$$WWW122GroupName(objCaption)
			set strManualCaption	= $$$WWW122ManualCaption(objCaption)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strGroupName,.strZHGroupName)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strManualCaption,.strZHManualCaption) || blnTranslated
			
			if (blnTranslated) { ; At least one of the strings needed translation
				; WWW122GroupName cannot be preserved in WWW1221.
				; Instead, we will find/create a LanguageText WWW009 for EN & ZH
				; and set that code in the field instead
				set strLangTextID = ""
				if (strGroupName '= "") {
					set strStatus=$$CreateWWW009(strGroupName, strZHGroupName, pLanguage, .strLangTextID)
				}
				if (strStatus=$$$OK) {
					; Preserve in WWW1221
					if '$data(^WWW1221(0,idFormName,idDataItemNumber,pLanguage)) {
						; Create ZH
						set obj1221 = ""
						set $$$WWW1221Text(obj1221) = strZHManualCaption
						set strKey = idFormName_","_idDataItemNumber_","_pLanguage
						$$$Trace(2,"  Created WWW1221"_$$$Tab_strKey_$$$Tab_strZHManualCaption_$$$Tab_strManualCaption)
						if ($$$DoTheSave) {
							set strStatus = $$$Save("WWW1221",strKey,obj1221,$$$YES)
						}
					}
				}
				if ((strStatus=$$$OK) && (strLangTextID '= "")){					
					set $$$WWW122GroupName(objCaption) = strLangTextID
					set strKey = idFormName_","_idDataItemNumber
					$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strLangTextID_$$$Tab_strManualCaption_$$$Tab_strZHManualCaption)
					if ($$$DoTheSave) {					
						set strStatus = $$$Save("WWW122",strKey,objCaption,$$$YES)
					}
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW122")
		do ReIndex^COMIndex("WWW1221")
	}
	quit strStatus
	
	
FreeCaptions(&parrPhraseEN,pLanguage) private
	;-------------------------------------------------------------------------------
 	; WWW122D	Customised captions
 	; 	Keys:	FormName	FieldNumber	Company
 	; 	Fields:	FieldDescription	GroupName	CustomHelpText
 	; Company override.
 	; Search captions, replace EN with ZH.
 	; Copy into WWW122D1
	;
	; 25-May-2011	shobby	SR16925.2: IndividualHelpText->CustomHelpText
	;-------------------------------------------------------------------------------
	new blnTranslated,idCompany,idFieldNumber,idFormName,obj122D1,objCaption
	new strCustomHelpText,strExecuteAfterDataField,strFieldDescription,strGroupName
	new strKey,strLangTextID,strStatus,strZHCustomHelpText
	new strZHExecuteAfterDataField,strZHFieldDescription,strZHGroupName
	
	$$$Trace(2,"     (Check the ZH executes similar code to EN)")
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW122D(0,idFormName))
		quit:idFormName=""
		
		set idFieldNumber = ""
		for {
			; FIXME : quit:strStatus'=$$$OK?
			set idFieldNumber = $order(^WWW122D(0,idFormName,idFieldNumber))
			quit:idFieldNumber=""
 
			;
			; Search captions, replace EN with ZH
			;
			set idCompany = ""
			for {
				quit:strStatus'=$$$OK
				set idCompany = $order(^WWW122D(0,idFormName,idFieldNumber,idCompany))
				quit:idCompany=""
				
				set objCaption = $get(^WWW122D(0,idFormName,idFieldNumber,idCompany,1))
				set strFieldDescription      = $$$WWW122DFieldDescription(objCaption)
				set strGroupName             = $$$WWW122DGroupName(objCaption)
				set strCustomHelpText        = $$$WWW122DCustomHelpText(objCaption) ;SR16925.2
				set strExecuteAfterDataField = $$$WWW122DExecuteAfterDataField(objCaption)
							
				; NOTE $$$Translate performs a change as well as returning a boolean
				set blnTranslated = $$TranslateEN(.parrPhraseEN,strFieldDescription,.strZHFieldDescription)
				set blnTranslated = $$TranslateEN(.parrPhraseEN,strGroupName,.strZHGroupName) || blnTranslated
				set blnTranslated = $$TranslateEN(.parrPhraseEN,strCustomHelpText,.strZHCustomHelpText) || blnTranslated
				set blnTranslated = $$TranslateEN(.parrPhraseEN,strExecuteAfterDataField,.strZHExecuteAfterDataField) || blnTranslated
				
				if (strExecuteAfterDataField '= "") && (strExecuteAfterDataField '= strZHExecuteAfterDataField) {
					$$$Trace(2,"     Ex(EN):"_$$$Tab_idFormName_$$$Tab_strExecuteAfterDataField)
					$$$Trace(2,"     Ex(ZH):"_$$$Tab_idFormName_$$$Tab_strZHExecuteAfterDataField)
				}
				
				if blnTranslated { ; At least one of the strings needed translation
					$$$Trace(2,"  TR->ZH"_$$$Tab_idFormName_$$$Tab_strFieldDescription_$$$Tab_strZHFieldDescription)
					; strGroupName cannot be preserved in WWW122D1
					; Instead, we will find/create a LanguageText WWW009 for EN & ZH
					; and set that code in the field instead
					set strLangTextID = ""
					if (strGroupName '= "") {
						set strStatus = $$CreateWWW009(strGroupName,strZHGroupName,pLanguage,.strLangTextID)
					}
					if (strStatus=$$$OK) {
						; Preserve in WWW122D1
						if '$data(^WWW122D1(0,idFormName,idFieldNumber,idCompany,pLanguage)) {
							; Create ZH
							set obj122D1 = ""
							set $$$WWW122D1FieldDescription(obj122D1) = strZHFieldDescription
							set strKey = idFormName_","_idFieldNumber_","_idCompany_","_pLanguage
							$$$Trace(2,"  Created WWW122D1"_$$$Tab_strKey_$$$Tab_strZHFieldDescription)
							if ($$$DoTheSave) {
								set strStatus = $$$Save("WWW122D1",strKey,obj122D1,$$$YES)
							}
						}
						if ((strStatus=$$$OK) && (strLangTextID '= "")) {						
							set $$$WWW122DGroupName(objCaption) 	= strLangTextID
							set strKey = idFormName_","_idFieldNumber_","_idCompany
							if ($$$DoTheSave) {
								set strStatus = $$$Save("WWW122D",strKey,objCaption,$$$YES)
							}
						}
					}
				}
			}
		}
	}
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW122D")
		do ReIndex^COMIndex("WWW122D1")
	}
	quit strStatus
	
	
CreateWWW009(pstrEN, pstrZH, pLanguage, &pstrLangTextID) private
  	;-------------------------------------------------------------------------------
 	; CreateWWW009
 	; 	Locate the given string in Language text WWW009.
 	; 	If it cannot be located, create a new WWW009.
 	; 	Avoid cases where the string already is a WWW009 code.
	;-------------------------------------------------------------------------------
	new idLanguage1,idTextNumber,objText
	new strKey,strlastID,strNextNum,strStatus,strText,strX
	
	set strStatus      = $$$OK
	set pstrLangTextID = ""
	;
	; Search existing codes
	; WWW009.TextNumber may have been already encoded and now passed in as if text
	; 
	if $data(^WWW009(0,pLanguage,pstrEN)) { set pstrLangTextID = pstrEN }
	if $data(^WWW009(0,pLanguage,pstrZH)) { set pstrLangTextID = pstrZH }
	if $data(^WWW009(0,"EN",pstrEN)) { set pstrLangTextID = pstrEN }
	if $data(^WWW009(0,"EN",pstrZH)) { set pstrLangTextID = pstrZH }	
 
	if (pstrLangTextID = "") {
		;
		; Search ZH text
		;
		set idLanguage1  = pLanguage
		set idTextNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
			}
			if ((strText = pstrEN) || (strText = pstrZH)) {
				set pstrLangTextID = idTextNumber
				$$$Trace(3,"  WWW009("_pstrLangTextID_")="_$$$Tab_pstrEN_$$$Tab_pstrZH)
				quit
			}
		}
	}
	
	if (pstrLangTextID = "") {
		;
		; Search EN text
		;
		set idLanguage1  = "EN"
		set idTextNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
			}
			if ((strText = pstrEN) || (strText = pstrZH)) {
				set pstrLangTextID = idTextNumber
				$$$Trace(3,"  WWW009("_pstrLangTextID_")="_$$$Tab_pstrEN_$$$Tab_pstrZH)				
				quit
			}
		}
	}
	
	if (pstrLangTextID = "") {
		; Create new WWW009 (EN) using next "MED" prefix
		set strlastID = $order(^WWW009(0,"EN","MED99999"),-1)
 		set strNextNum = $extract(strlastID,4,99) + 1
 		if (strNextNum < 1700) {
	 		set strNextNum = 1700
 		}
 		set strNextNum = "MED"_$tr($j(strNextNum,5)," ","0")
		set objText = ""
		set $$$WWW009Text(objText) = pstrEN
		set strKey = "EN,"_strNextNum
		$$$Trace(2,"  Created WWW009("_strKey_")="_$$$Tab_pstrEN_$$$Tab_pstrZH)	
		if ($$$DoTheSave) {
			set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
		}
		set pstrLangTextID = strNextNum
	}
	
	; Create new WWW009 (ZH)
	if (strStatus=$$$OK) {
		set $$$WWW009Text(objText) = pstrZH
		set strKey = pLanguage_","_pstrLangTextID			
		$$$Trace(2,"  Created WWW009("_strKey_")="_$$$Tab_pstrEN_$$$Tab_pstrZH)	
		if ($$$DoTheSave) {
			set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
		}
	}
 
	quit strStatus
 
 
 	;-------------------------------------------------------------------------------
	; WWW009	Language text (help, alerts, substitutions)
	; 	Keys:	Language1	TextNumber
	; 	Fields:	Text
	; Search ZH text which has EN text, create EN, replace EN with ZH.
	; Search EN text, create ZH.
	; Search ZH text, create EN.
 	;-------------------------------------------------------------------------------
LanguageText(&parrPhraseEN,&parrPhraseZH,pLanguage) private
	new strStatus,strKey,blnTranslated,strX
	new objText
	new idLanguage1,idTextNumber
	new strText
	new strZHText,strENText
	
	set strStatus=$$$OK
	;
	; Search ZH text which has EN text, create EN, replace EN with ZH.
	;
	set idLanguage1 = pLanguage
	set idTextNumber=""
	for {
		quit:strStatus'=$$$OK
		set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
		quit:idTextNumber=""
		
		set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))
		set strText	= $$$WWW009Text(objText)
		
		; Strip any annoying enclosing quotes
		if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
			set strX = "set strText = " _ strText
			xecute strX
			set $$$WWW009Text(objText) = strText
			set strKey = idLanguage1_","_idTextNumber			
			$$$Trace(2,"  Stripped WWW009("_strKey_")="_$$$Tab_strText)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
			}
		}
					
		if ($$TranslateEN(.parrPhraseEN,strText,.strZHText)) {
			$$$Trace(2,"  WWW009("_idTextNumber_")="_$$$Tab_strText_$$$Tab_strZHText)				
			;
			; We have EN text within a ZH node.
			; We will replace the EN text with translated ZH text.
			; But first, is there a EN node?  No or null? => Create it.
			; 
			if ($$$WWW009Text($get(^WWW009(0,"EN",idTextNumber,1)))="") {
				set strKey = "EN,"_idTextNumber			
				$$$Trace(2,"  Created WWW009("_strKey_")="_$$$Tab_strText_$$$Tab_strZHText)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
				}
			}
			set $$$WWW009Text(objText) = strZHText
			set strKey = idLanguage1_","_idTextNumber			
			$$$Trace(2,"  Created WWW009("_strKey_")="_$$$Tab_strText_$$$Tab_strZHText)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
			}
		}
	}
 
	if (strStatus=$$$OK) {
		;
		; Search EN text, for those that do not have ZH defined, Create ZH text
		; 
		set idLanguage1 = "EN"
		set idTextNumber=""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			continue:$data(^WWW009(0,pLanguage,idTextNumber))      ; only consider extra "EN" text
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))	; EN without ZH
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
				set $$$WWW009Text(objText) = strText
				set strKey = idLanguage1_","_idTextNumber			
				$$$Trace(2,"  Stripped WWW009("_strKey_")="_$$$Tab_strText)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
				}
			}
			
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strText,.strZHText)
			
			set $$$WWW009Text(objText) = strZHText
			set strKey = pLanguage_","_idTextNumber
			$$$Trace(2,"  Created WWW009("_strKey_")="_$$$Tab_strText_$$$Tab_strZHText)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
			}
		}	 
	}
	
	;
	; Check for cases where ZH nodes exist that do not have
	; an equivalent EN node, yet we are able to translate the ZH to EN,
	; and create a EN node.
	;
	if (strStatus=$$$OK) {
		;
		; Search ZH text, for those that do not have EN defined, Create EN text
		; 
		set idLanguage1  = pLanguage
		set idTextNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			
			continue:($$$WWW009Text($get(^WWW009(0,"EN",idTextNumber,1)))'="")
			     ; only consider extra "ZH" text
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))	; ZH without EN
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
				set $$$WWW009Text(objText) = strText
				set strKey = idLanguage1_","_idTextNumber			
				$$$Trace(2,"  Stripped WWW009("_strKey_")="_$$$Tab_strText)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
				}
			}
			
			set blnTranslated = $$TranslateZH(.parrPhraseZH,strText,.strENText)
			
			if (blnTranslated) {
				set $$$WWW009Text(objText) = strENText
				set strKey = "EN,"_idTextNumber
				$$$Trace(2,"  Created WWW009("_strKey_")="_$$$Tab_strENText_$$$Tab_strText)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
				}
			}
		}	 
	}
 
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW009")
	}
 
	quit strStatus
 
 	;-------------------------------------------------------------------------------
	; WWW101	App Params (list of values)
	; 	Keys:	ParameterDescription	Language1	SearchItem
	; 	Fields:	Text
	; Search ZH text replace EN with ZH.
	; Search EN text for those that do not have ZH defined, Create ZH text.
 	;-------------------------------------------------------------------------------
AppParams(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objText
	new idParamDesc,idLanguage1,idSearchItem
	new strText
	new strZHText
	
	set strStatus   = $$$OK
	set idParamDesc = ""
	for {
		quit:strStatus'=$$$OK
		set idParamDesc = $order(^WWW101(0,idParamDesc))
		quit:idParamDesc=""
		
		;
		; Search ZH text replace EN with ZH
		;
		set idLanguage1 = pLanguage
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWW101(0,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			
			set objText = $get(^WWW101(0,idParamDesc,idLanguage1,idSearchItem,1))
			set strText	= $$$WWW101Text(objText)
									
			if ($$TranslateEN(.parrPhraseEN,strText,.strZHText)) { 
				set $$$WWW101Text(objText) = strZHText
				set strKey = idParamDesc_","_idLanguage1_","_idSearchItem
				$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strText_$$$Tab_strZHText)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW101",strKey,objText,$$$YES)
				}
			}
		}
 
		;
		; Search EN text for those that do not have ZH defined, Create ZH text
		; 
		set idLanguage1 = "EN"
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWW101(0,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			continue:$data(^WWW101(0,idParamDesc,pLanguage,idSearchItem))      ; only consider extra "EN" tabs
			
			set objText = $get(^WWW101(0,idParamDesc,idLanguage1,idSearchItem,1))  ; EN without ZH
			set strText	= $$$WWW101Text(objText)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strText,.strZHText)
			
			set $$$WWW101Text(objText)	= strZHText
			set strKey = idParamDesc_","_pLanguage_","_idSearchItem
			$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strText_$$$Tab_strZHText)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWW101",strKey,objText,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW101")
	}
	quit strStatus
	
 
 	;-------------------------------------------------------------------------------
	; WWWUSERPARA	App Params (list of values)
	; 	Keys:	ParameterDescription	Language1	SearchItem
	; 	Fields:	Text
	; Search ZH text replace EN with ZH.
	; Search EN text for those that do not have ZH defined, Create ZH text.
 	;-------------------------------------------------------------------------------
ParamUserPara(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objText
	new idParamDesc,idLanguage1,idSearchItem
	new strText
	new strZHText
	
	set strStatus = $$$OK
	set idParamDesc = ""
	for {
		quit:strStatus'=$$$OK
		set idParamDesc = $order(^WWWUSERPARA(YM,idParamDesc))
		quit:idParamDesc=""
		
		;
		; Search ZH text replace EN with ZH
		;
		set idLanguage1 = pLanguage
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			
			set objText = $get(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))
			set strText	= $piece(objText,"~",1)
									
			if ($$TranslateEN(.parrPhraseEN,strText,.strZHText)) { 
				set $piece(objText,"~",1) = strZHText
				set strKey = idParamDesc_","_idLanguage1_","_idSearchItem					
				$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strText_$$$Tab_strZHText)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWWUSERPARA",strKey,objText,$$$YES)
				}
			}
		}
 
		;
		; Search EN text for those that do not have ZH defined, Create ZH text
		; 
		set idLanguage1  = "EN"
		set idSearchItem = ""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			continue:$data(^WWWUSERPARA(YM,idParamDesc,pLanguage,idSearchItem))      ; only consider extra "EN" tabs
			
			set objText = $get(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))  ; EN without ZH
			set strText	= $piece(objText,"~",1)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strText,.strZHText)
			
			set $piece(objText,"~",1) = strZHText
			set strKey = idParamDesc_","_pLanguage_","_idSearchItem				
			$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strText_$$$Tab_strZHText)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("WWWUSERPARA",strKey,objText,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWWUSERPARA")
	}
	quit strStatus
	
 	;-------------------------------------------------------------------------------
	; INPARA	IN Params
	; 	Keys:	ParameterDescription	Language1	SearchItem
	; 	Fields:	Text
 	;-------------------------------------------------------------------------------
ParamInPara(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objText
	new idParamDesc,idLanguage1,idSearchItem
	new strText
	new strZHText
	
	set strStatus = $$$OK
	set idParamDesc = ""
	for {
		quit:strStatus'=$$$OK
		set idParamDesc = $order(^INPARA(YM,idParamDesc))
		quit:idParamDesc=""
		
		;
		; Search ZH text replace EN with ZH
		;
		set idLanguage1  = pLanguage
		set idSearchItem = ""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			
			set objText = $get(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))
			set strText	= $piece(objText,"~",1)
									
			if ($$TranslateEN(.parrPhraseEN,strText,.strZHText)) { 
				set $piece(objText,"~",1) = strZHText
				set strKey = idParamDesc_","_idLanguage1_","_idSearchItem
				$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strText_$$$Tab_strZHText)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("INPARA",strKey,objText,$$$YES)
				}
			}
		}
 
		;
		; Search EN text for those that do not have ZH defined, Create ZH text
		; 
		set idLanguage1  = "EN"
		set idSearchItem = ""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			continue:$data(^INPARA(YM,idParamDesc,pLanguage,idSearchItem))      ; only consider extra "EN" tabs
			
			set objText = $get(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))  ; EN without ZH
			set strText	= $piece(objText,"~",1)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strText,.strZHText)
			
			set $piece(objText,"~",1) = strZHText
			set strKey = idParamDesc_","_pLanguage_","_idSearchItem
			$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strText_$$$Tab_strZHText)
			if ($$$DoTheSave) {
				set strStatus = $$$Save("INPARA",strKey,objText,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("INPARA")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; WWW003	Class defn of form captions (underneath WWW122)
 	; 	Keys:	Class	PropertyNumber
 	; 	Fields:	PropertyDescription	CaptionInForms
 	; Copy into WWW0031
	;-------------------------------------------------------------------------------
ClassFields(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objField, obj0031
	new idClass,idPropertyNumber
	new strPropertyDescription,		strCaptionInForms
	new strZHPropertyDescription,	strZHCaptionInForms
	
	set strStatus = $$$OK
	set idClass   = ""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^WWW003(0,idClass))
		quit:idClass=""
 
		;
		; Search captions, Create WWW0031(ZH)
		;
		set idPropertyNumber=""
		for {
			quit:strStatus'=$$$OK
			set idPropertyNumber = $order(^WWW003(0,idClass,idPropertyNumber))
			quit:idPropertyNumber=""
			
			set objField = $get(^WWW003(0,idClass,idPropertyNumber,1))
			set strPropertyDescription	= $$$WWW003PropertyDescription(objField)
			set strCaptionInForms		= $$$WWW003CaptionInForms(objField)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPropertyDescription,.strZHPropertyDescription)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strCaptionInForms,.strZHCaptionInForms) || blnTranslated
			
			if (blnTranslated) { ; At least one of the strings needed translation
				if '$data(^WWW0031(0,idClass,idPropertyNumber,pLanguage)) {
					; Create ZH
					set obj0031 = ""
					set $$$WWW0031PropertyDescription(obj0031) = strCaptionInForms
					; WWW0031PropertyDescription is used as the caption WWW003CaptionInForms
					set strKey = idClass_","_idPropertyNumber_","_pLanguage
					$$$Trace(2,"  Created WWW0031"_$$$Tab_strKey_$$$Tab_strCaptionInForms)
					if ($$$DoTheSave) {
						set strStatus = $$$Save("WWW0031",strKey,obj0031,$$$YES)
					}
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW0031")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; WWW002	Class defn of form captions (underneath WWW122, indexes separate from fields)
 	; 	Keys:	Class	PrimaryKeyNumber
 	; 	Fields:	PropertyDescription	TextInForms
  	; Copy into WWW0021
	;-------------------------------------------------------------------------------
ClassIndexFields(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objField, obj0021
	new idClass,idPrimaryKeyNumber
	new strPropertyDescription,		strTextInForms
	new strZHPropertyDescription,	strZHTextInForms
	
	set strStatus = $$$OK
	set idClass   = ""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^WWW002(0,idClass))
		quit:idClass=""
 
		;
		; Search captions, Create WWW0021 (ZH)
		;
		set idPrimaryKeyNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idPrimaryKeyNumber = $order(^WWW002(0,idClass,idPrimaryKeyNumber))
			quit:idPrimaryKeyNumber=""
			
			set objField = $get(^WWW002(0,idClass,idPrimaryKeyNumber,1))
			set strPropertyDescription	= $$$WWW002PropertyDescription(objField)
			set strTextInForms			= $$$WWW002TextInForms(objField)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strPropertyDescription,.strZHPropertyDescription)
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strTextInForms,.strZHTextInForms) || blnTranslated
			
			if (blnTranslated) { ; At least one of the strings needed translation
				; Preserve in WWW0021
				if '$data(^WWW0021(0,idClass,idPrimaryKeyNumber,pLanguage)) {
					; Create ZH
					set obj0021 = ""
					set $$$WWW0021PropertyDescription(obj0021) = strTextInForms
					; lost = strPropertyDescription
					; WWW0021PropertyDescription is used as the text WWW002TextInForms
					set strKey = idClass_","_idPrimaryKeyNumber_","_pLanguage
					$$$Trace(2,"  Created WWW0021"_$$$Tab_strKey_$$$Tab_strPropertyDescription)
					if ($$$DoTheSave) {
						set strStatus = $$$Save("WWW0021",strKey,obj0021,$$$YES)
					}
				}
			}
		}
	}
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW0021")
	}
	quit strStatus
	
	
ClassIndexFieldsVar(&parrPhraseEN,pLanguage) private
 	;-------------------------------------------------------------------------------
 	; WWW121D	Customised
 	; 	Keys:	FormName	PrimaryKeyNumber	Company
 	; 	Fields:	FieldDescription	CustomHelpText
 	; Copy into WWW121D1
	;
	; 25-May-2011	shobby	SR16925.2: HelpText->CustomHelpText
	;-------------------------------------------------------------------------------
	new blnTranslated,idCompany,idFormName,idPrimaryKeyNumber,obj121D1,objField
	new strCustomHelpText,strFieldDescription,strKey,strStatus
	new strZHCustomHelpText,strZHFieldDescription
	
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW121D(0,idFormName))
		quit:idFormName=""
 
		set idPrimaryKeyNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idPrimaryKeyNumber = $order(^WWW121D(0,idFormName,idPrimaryKeyNumber))
			quit:idPrimaryKeyNumber=""
 
			; Search captions, Create WWW121D1 (ZH)
			set idCompany = ""
			for {
				quit:strStatus'=$$$OK
				set idCompany = $order(^WWW121D(0,idFormName,idPrimaryKeyNumber,idCompany))
				quit:idCompany=""
				
				set objField = $get(^WWW121D(0,idFormName,idPrimaryKeyNumber,idCompany,1))
				set strFieldDescription	= $$$WWW121DFieldDescription(objField)
				set strCustomHelpText	= $$$WWW121DCustomHelpText(objField)  ;SR16925.2
							
				; NOTE $$$Translate performs a change as well as returning a boolean
				set blnTranslated = $$TranslateEN(.parrPhraseEN,strFieldDescription,.strZHFieldDescription)
				set blnTranslated = $$TranslateEN(.parrPhraseEN,strCustomHelpText,.strZHCustomHelpText) || blnTranslated ;SR16925.2
				
				if blnTranslated { ; At least one of the strings needed translation
					$$$Trace(2,"  TR->ZH"_$$$Tab_idFormName_$$$Tab_strFieldDescription_$$$Tab_strZHFieldDescription)
					; Preserve in WWW121D1
					if '$data(^WWW121D1(0,idFormName,idPrimaryKeyNumber,idCompany,pLanguage)) {
						; Create ZH
						set obj121D1 = ""
						set $$$WWW121D1FieldDescription(obj121D1) = strFieldDescription
						; lost = strCustomHelpText
						set strKey = idFormName_","_idPrimaryKeyNumber_","_idCompany_","_pLanguage
						$$$Trace(2,"  Created WWW121D1"_$$$Tab_strKey_$$$Tab_strFieldDescription)
						if ($$$DoTheSave) {
							set strStatus = $$$Save("WWW121D1",strKey,obj121D1,$$$YES)
						}
					}
				}
			}
		}
	}
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW121D1")
	}
	quit strStatus
	
	
 	;-------------------------------------------------------------------------------
 	; WWW003Calc	Class defn of form captions 
 	; 				(underneath WWW122, calculated fields separate from fields)
 	; 	Keys:	Class	PropertyNumber
 	; 	Fields:	Caption
 	; Copy into WWW003CalcLang
 	; 	Keys:	Class	CalculatedFieldNumber	Language1
 	; 	Fields:	Description
	;-------------------------------------------------------------------------------
CalcFields(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objCalc,objCalcLang
	new idClass,idPropertyNumber
	new strCaption
	new strZHCaption
	
	$$$Trace(1,"  (Lines with TRANSLATE?: may need translation)")
	set strStatus = $$$OK
	set idClass   = ""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^WWW003Calc(0,idClass))
		quit:idClass=""
		; continue:($extract(idClass,1,3) '= "VAR")  ; Do all classes?????
 
		set idPropertyNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idPropertyNumber = $order(^WWW003Calc(0,idClass,idPropertyNumber))
			quit:idPropertyNumber=""
 				
			set objCalc = $get(^WWW003Calc(0,idClass,idPropertyNumber,1))
			set strCaption	= $$$WWW003CalcCaption(objCalc)
			continue:($$$WWW003CalcAutoGenerated(objCalc) = 1)	; Avoid BASE fields  ??????
						
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strCaption,.strZHCaption)
			
			if (blnTranslated) { 
				; Save the EN into WWW003CalcLang (unless it already exists there)
				; Then replace the EN with ZH				
				if '$data(^WWW003CalcLang(0,idClass,idPropertyNumber,pLanguage)) {
					; Create EN
					set objCalcLang = ""
					set $$$WWW003CalcLangDescription(objCalcLang) = strZHCaption
					set strKey = idClass_","_idPropertyNumber_","_pLanguage
					$$$Trace(2,"  Created WWW003CalcLang"_$$$Tab_strKey_$$$Tab_strCaption_$$$Tab_strZHCaption)						
					if ($$$DoTheSave) {
						set strStatus = $$$Save("WWW003CalcLang",strKey,objCalc,$$$YES)
					}
				}
			} else {
				$$$Trace(1,"  TRANSLATE?:"_$$$Tab_idClass_$$$Tab_strCaption)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW003CalcLang")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; WWW001	Class defn, (appears in COMView)
 	; 	Keys:	ClassName
 	; 	Fields:	ClassDescription
 	; Copy into WWW0011
	;-------------------------------------------------------------------------------
Classes(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objClass, obj0011
	new idClassName
	new strClassDescription
	new strZHClassDescription
	
	set strStatus   = $$$OK
	set idClassName = ""
	for {
		quit:strStatus'=$$$OK
		set idClassName = $order(^WWW001(]]><![CDATA[0,idClassName))
		quit:idClassName=""
 
		set objClass = $get(^WWW001(0,idClassName,1))
		set strClassDescription	= $$$WWW001ClassDescription(objClass)
						
		set blnTranslated = $$TranslateEN(.parrPhraseEN,strClassDescription,.strZHClassDescription)
			
		if (blnTranslated) { 
			; Preserve in WWW0011
			if '$data(^WWW0011(0,idClassName,pLanguage)) {
				; Create ZH
				set obj0011 = ""
				set $$$WWW0011ClassDescription(obj0011) = strZHClassDescription
				set strKey = idClassName_","_pLanguage
				$$$Trace(2,"  Created WWW0011"_$$$Tab_strKey_$$$Tab_strClassDescription_$$$Tab_strZHClassDescription)
				if ($$$DoTheSave) {
					set strStatus = $$$Save("WWW0011",strKey,obj0011,$$$YES)
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW0011")
	}
	quit strStatus
 
		
 	;-------------------------------------------------------------------------------
 	; COMView	Favourites
 	; 	Keys:	Class	ViewNumber
 	; 	Fields:	Description		Distribute	User1
	; We are only interested in COMView favourites for VAR* classes.
 	; If any user created a favourite using EN, we want to distribute that to all users:
 	; 	blank out the User1
 	; 	set as Distribute
 	; Note:
 	; 	onBeforeSave for COMView calls a VAR routine.
	;-------------------------------------------------------------------------------
COMView(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objCOMView
	new idClass,idViewNumber
	new strDescription,strUser1, strDistribute
	new strZHDescription
	
	set strStatus = $$$OK
	$$$Trace(1,"  Skipped COMView")
	quit strStatus
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED CODE
	
	$$$Trace(1,"  (Lines with TRANSLATE?: may need translation)")
	set idClass = ""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^COMView(0,idClass))
		quit:idClass=""
		
		set idViewNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idViewNumber = $order(^COMView(0,idClass,idViewNumber))
			quit:idViewNumber=""
 
			set objCOMView = $get(^COMView(0,idClass,idViewNumber,1))
			set strDescription	= $$$COMViewDescription(objCOMView)
			set strUser1 = $$$COMViewUser1(objCOMView)
			set strDistribute = $$$COMViewDistribute(objCOMView)
							
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strDescription,.strZHDescription)
				
			if ((blnTranslated) || (strUser1 = "UNKNOWN")) { 
				set $$$COMViewDescription(objCOMView)	= strZHDescription
				set $$$COMViewUser1(objCOMView)			= ""	; All users
				set $$$COMViewDistribute(objCOMView)	= 1		; Always distribute
				set strKey = idClass_","_idViewNumber
				if (strUser1 = "UNKNOWN") {
					$$$Trace(2,"  All users:"_$$$Tab_strKey_$$$Tab_strDescription)
				}
				else {
					$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strDescription_$$$Tab_strZHDescription)
				}
				if ($$$DoTheSave && $$$DoCoreToo) {
					set strStatus = $$$Save("COMView",strKey,objCOMView,$$$YES)
				}
			} else {
				if (($extract(idClass,1,3) = "VAR")	
					&& (strDescription '= "Default")) {
					$$$Trace(1,"  TRANSLATE?:"_$$$Tab_idClass_$$$Tab_strDescription)
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMView")
	}
	quit strStatus
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED CODE
   		
 	;-------------------------------------------------------------------------------
 	; COMHelp
 	; 	Keys:	FormName	Language1
 	; 	Fields:	HelpText
 	; Limitations:
 	;	How can we identify EN text within ZH data?  The first pass dumped out all text
 	;	to manually be reviewed in the log file.
	;-------------------------------------------------------------------------------
COMHelp(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objCOMHelp
	new idFormName,idLanguage1
	new strHelpText
	new strZHHelpText
		
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^COMHelp(0,idFormName))
		quit:idFormName=""
		
		;
		; Search ZH text replace EN with ZH
		; Search EN text for those that do not have ZH defined, Create ZH text
		;
		set idLanguage1 = ""
		for {
			quit:strStatus'=$$$OK
			set idLanguage1 = $order(^COMHelp(0,idFormName,idLanguage1))
			quit:idLanguage1=""
 
			set objCOMHelp = $get(^COMHelp(0,idFormName,idLanguage1,1))
			set strHelpText	= $$$COMHelpHelpText(objCOMHelp)
			continue:($zstrip(strHelpText,"<>W")="")
 
			if (idLanguage1 = pLanguage) {
 				set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelpText,.strZHHelpText)
				if (blnTranslated) { 
					set $$$COMHelpHelpText(objCOMHelp) = strZHHelpText						
					set strKey = idFormName_","_idLanguage1
					$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strHelpText_$$$Tab_strZHHelpText)
					if ($$$DoTheSave) {
						set strStatus = $$$Save("COMHelp",strKey,objCOMHelp,$$$YES)
					}
				} else {
					$$$Trace(4,"  ZH OK"_$$$Tab_idFormName_$$$Tab_strHelpText)
				}
			} elseif (idLanguage1 = "EN") {
				continue:$data(^COMHelp(0,idFormName,pLanguage))
 				set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelpText,.strZHHelpText)
				if (blnTranslated) {
					// Create an ZH equivalent
					set $$$COMHelpHelpText(objCOMHelp) = strZHHelpText
					set strKey = idFormName_","_pLanguage
					$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strHelpText_$$$Tab_strZHHelpText)
					if ($$$DoTheSave) {
						set strStatus = $$$Save("COMHelp",strKey,objCOMHelp,$$$YES)
					}									
				} else {
					// We do not have a translation with which to create the ZH equivalent
					// Dump out to log file, add to translation table.
					$$$Trace(1,"  TRANSLATE?:"_$$$Tab_idFormName_$$$Tab_strHelpText)
				}
			}	
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMHelp")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; COMHelpButton
 	; 	Keys:	FormName	Language1	ButtonNumber
 	; 	Fields:	HelpText
 	; Limitations:
 	;	How can we identify EN text within ZH data?  The first pass dumped out all text
 	;	to manually be reviewed in the log file.
	;-------------------------------------------------------------------------------
COMHelpButton(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objCOMHelpButton
	new idFormName,idLanguage1,idButtonNumber
	new strHelpText
	new strZHHelpText
		
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^COMHelpButton(0,idFormName))
		quit:idFormName=""
		
		;
		; Search ZH text replace EN with ZH
		; Search EN text for those that do not have ZH defined, Create ZH text
		;
		set idLanguage1 = ""
		for {
			quit:strStatus'=$$$OK
			set idLanguage1 = $order(^COMHelpButton(0,idFormName,idLanguage1))
			quit:idLanguage1=""
			
			set idButtonNumber = ""
			for {
				quit:strStatus'=$$$OK
				set idButtonNumber = $order(^COMHelpButton(0,idFormName,idLanguage1,idButtonNumber))
				quit:idButtonNumber=""
 
				set objCOMHelpButton = $get(^COMHelpButton(0,idFormName,idLanguage1,idButtonNumber,1))
				set strHelpText	= $$$COMHelpButtonHelpText(objCOMHelpButton)
				continue:($zstrip(strHelpText,"<>W")="")
	 
				if (idLanguage1 = pLanguage) {
					set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelpText,.strZHHelpText)
					if (blnTranslated) { 
						set $$$COMHelpButtonHelpText(objCOMHelpButton) = strZHHelpText						
						set strKey = idFormName_","_idLanguage1_","_idButtonNumber
						$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strHelpText_$$$Tab_strZHHelpText)
						if ($$$DoTheSave) {
							set strStatus = $$$Save("COMHelpButton",strKey,objCOMHelpButton,$$$YES)
						}
					} else {
						$$$Trace(4,"  ZH OK"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				} elseif (idLanguage1 = "EN") {
					continue:$data(^COMHelpButton(0,idFormName,pLanguage,idButtonNumber))
					set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelpText,.strZHHelpText)
					if (blnTranslated) {
						// Create an ZH equivalent
						set $$$COMHelpHelpText(objCOMHelpButton) = strZHHelpText
						set strKey = idFormName_","_pLanguage_","_idButtonNumber
						$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strHelpText_$$$Tab_strZHHelpText)
						if ($$$DoTheSave) {
							set strStatus = $$$Save("COMHelpButton",strKey,objCOMHelpButton,$$$YES)
						}									
					} else {
						// We do not have a translation with which to create the ZH equivalent
						// Dump out to log file, add to translation table.
						$$$Trace(1,"  TRANSLATE:"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				}
			}	
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMHelpButton")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; COMHelpField
 	; 	Keys:	FormName	Language1	Number
 	; 	Fields:	HelpText
 	; Limitations:
 	;	How can we identify EN text within ZH data?  The first pass dumped out all text
 	;	to manually be reviewed in the log file.
	;-------------------------------------------------------------------------------
COMHelpField(&parrPhraseEN,pLanguage) private
	new strStatus,strKey,blnTranslated
	new objCOMHelpField
	new idFormName,idLanguage1,idNumber
	new strHelpText
	new strZHHelpText
		
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^COMHelpField(0,idFormName))
		quit:idFormName=""
		
		;
		; Search ZH text replace EN with ZH
		; Search EN text for those that do not have ZH defined, Create ZH text
		;
		set idLanguage1 = ""
		for {
			quit:strStatus'=$$$OK
			set idLanguage1 = $order(^COMHelpField(0,idFormName,idLanguage1))
			quit:idLanguage1=""
			
			set idNumber = ""
			for {
				quit:strStatus'=$$$OK
				set idNumber = $order(^COMHelpField(0,idFormName,idLanguage1,idNumber))
				quit:idNumber=""
 
				set objCOMHelpField = $get(^COMHelpField(0,idFormName,idLanguage1,idNumber,1))
				set strHelpText	= $$$COMHelpFieldHelpText(objCOMHelpField)
				continue:($zstrip(strHelpText,"<>W")="")
				set blnTranslated = $$TranslateEN(.parrPhraseEN,strHelpText,.strZHHelpText)
	 
				if (idLanguage1 = pLanguage) {
					if (blnTranslated) { 
						set $$$COMHelpFieldHelpText(objCOMHelpField) = strZHHelpText						
						set strKey = idFormName_","_idLanguage1_","_idNumber
						$$$Trace(2,"  TR->ZH"_$$$Tab_strKey_$$$Tab_strHelpText_$$$Tab_strZHHelpText)
						if ($$$DoTheSave) {
							set strStatus = $$$Save("COMHelpField",strKey,objCOMHelpField,$$$YES)
						}
					} else {
						$$$Trace(4,"  ZH OK"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				} elseif (idLanguage1 = "EN") {
					continue:$data(^COMHelpField(0,idFormName,pLanguage,idNumber))
					if (blnTranslated) {
						// Create an ZH equivalent
						set $$$COMHelpFieldHelpText(objCOMHelpField) = strZHHelpText
						set strKey = idFormName_","_pLanguage_","_idNumber
						$$$Trace(2,"  Created"_$$$Tab_strKey_$$$Tab_strHelpText_$$$Tab_strZHHelpText)
						if ($$$DoTheSave) {
							set strStatus = $$$Save("COMHelpField",strKey,objCOMHelpField,$$$YES)
						}									
					} else {
						// We do not have a translation with which to create the ZH equivalent
						// Dump out to log file, add to translation table.
						$$$Trace(1,"  TRANSLATE:"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				}
			}	
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMHelpField")
	}
	quit strStatus
 
]]></Routine>
</Export>