<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWDASHBOARDEntity" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWDASHBOARDEntity
	
#include COMConst
#include COMSYS
	
	;-------------------------------------------------------------------------------
	; Use of ^COMEntity(0,"THIS NAMESPACE",1)
	; 
	; If COMEntity is not updated following the copying of a namespace, data may be
	; posted into or retrieved from the wrong dataset.
	; 
	; This entry is used to identify situations where this may have occurred.
	; 
	; e.g. Copying namespace LIVE to TEST requires COMEntity to be modified to
	;      reflect the new mappings.
	;      
	;      "THIS NAMESPACE" needs to be defined under LIVE as "LIVE".  An error will
	;      be reported in the System Dashboard if it is not present.
	;      
	;      If LIVE is copied to TEST, "THIS NAMESPACE" will still point to "LIVE"
	;      and the Dashboard will show an error because it will expect it to point
	;      to "TEST".  A system user will need to edit the entities to make all
	;      references to "LIVE" be "TEST" instead.
	;-------------------------------------------------------------------------------
	
Message()
	;-------------------------------------------------------------------------------
	; Write out the warning messages for this test.
	; 
	; Called By: OnAfterDataFields^WWWDASHBOARD
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 21-Sep-2011	shobby	SR17835: Included 6th parameter (form) on "THIS NAMESPACE" line.
	; 15-Feb-2011	shobby	SR17661: Created
	;-------------------------------------------------------------------------------
	new idCOMEntity,objCOMEntity,strActual,strExpected
	
	do MessageLine($$CheckThisNamespace(),$$$Text("WWW00152"),$$^WWWFORMNAME("COMEntity"),"THIS NAMESPACE",$$$COMEntityNamespace($$GetDefaultEntity()),$zu(5),"COMEntity") ;SR17835
	;""WWW00152"  ;Check Entity setup"
	set idCOMEntity = ""
	for {
		set idCOMEntity = $order(^COMEntity(0,idCOMEntity))
		quit:idCOMEntity=""
		continue:idCOMEntity="THIS NAMESPACE"
		
		set objCOMEntity = $get(^COMEntity(0,idCOMEntity,1))
		set strExpected  = $$GetDefaultDatabaseForGlobals($$$COMEntityNamespace(objCOMEntity))
		set strActual    = $zu(5)
		do MessageLine(strExpected=strActual,$$$Text("WWW00152"),$$^WWWFORMNAME("COMEntity"),idCOMEntity,strExpected,strActual,"COMEntity")
	}
	quit
	
	
MessageLine(pblnFlag,YTOOLTIP,pstrTopic,YKEY,pstrExpected,pstrActual,pstrForm="")
	;-------------------------------------------------------------------------------
	; Write one line of the message
	; 
	; Called By: Message^WWWDASHBOARDEntity, OnAfterDataFields^WWWDASHBOARD
	; 
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Jul-2011	shobby	SR17835: Form to link to is now a parameter.
	; 15-Feb-2011	shobby	SR17661: Created
	;-------------------------------------------------------------------------------
	new strHelp,strImage
	
	set strHelp = YTOOLTIP
	set YBACK   = YBACK_YFORM_","
	
	if pblnFlag {
		set strImage = "ball_grey.gif"
		set YTOOLTIP = $$$Text(97)               ; "Ok"
	} else {
		set strImage = "ball.gif"
	}	
	
	write "<TR>"
	write "<TD><IMG SRC="_YGIF_strImage_" TITLE="""_YTOOLTIP_"""></TD>"
	write "<TD>"_pstrTopic_"</TD>"
	write "<TD><A HREF='"_YAKTION_"EP=WWWFORM&amp;YFORM="_pstrForm_$$WWWCGI2^WWWCGI()_"'>"_YKEY_"</TD>"
	write "<TD>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"_pstrExpected_"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>"
	write "<TD>"_pstrActual_"</TD>"
	write "<TD><IMG SRC="_YGIF_"help.gif onclick=""CallBackNow('Show^WWWPopupMessage','"_$$$JSText(strHelp)_"','"_pstrTopic_"');""></TD>" 
	write "</TR>"
	quit
	
	
Check()
	;-------------------------------------------------------------------------------
	; Checks whether the COMEntity setup matches the global mapping
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 15-Feb-2011	shobby	SR17661: Created
	;-------------------------------------------------------------------------------
	new blnResult
	
	set blnResult = $$CheckThisNamespace()
	if blnResult set blnResult = $$CheckMappedNamespaces()
	quit blnResult
	
	
CheckMappedNamespaces()
	new arrNS
	;do GetMappedNamespaces(.arrNS)
	quit $$CheckEntity(.arrNS)
	
	
GetDefaultEntity()
	quit $get(^COMEntity(0,"THIS NAMESPACE",1))
	
	
CheckThisNamespace()
	;-------------------------------------------------------------------------------
	; There is a special COMEntity that can be setup with a key "THIS NAMESPACE"
	; This has no functionality other than to indicate that this namespace has been
	; copied but no-one reviewed the COMEntity settings.
	;
	;
	; Returns:
	;
	; History:
	; 17-Feb-2011	shobby	SR17661: Created
	;-------------------------------------------------------------------------------
	new blnResult,objCOMEntity
	
	set blnResult    = $$$OK
	set objCOMEntity = $$GetDefaultEntity()
	if objCOMEntity'="" {
		if $$$COMEntityNamespace(objCOMEntity)'=$zu(5) {
			set blnResult = '$$$OK
		}
	}
	quit blnResult
	
	
	/*	
GetMappedNamespaces(&parrNS)
	;-------------------------------------------------------------------------------
	; Get a list of what namespaces constitue the 'other' namespaces in a multi
	; namespace setup.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 17-Feb-2011	shobby	SR17661: No longer used.
	; 15-Feb-2011	shobby	SR17661: Created
	;-------------------------------------------------------------------------------
	new strNS,arrNS,objResult,sc
	
	set strNS=$zu(5)
	zn "%SYS"
	Set objResult = ##class(%ResultSet).%New("Config.DataStorage:GlobalMappingList")
	set sc = objResult.Execute()
	if '$$$ISERR(sc) {
		while objResult.Next() {
			;write !, objResult.GetData(1)
			if objResult.GetData(1)=objResult.GetData(3) {
				set parrNS(objResult.GetData(1))=""
			}
		}
		do objResult.Close()
	}
	zn strNS
	quit
	*/
	
	
CheckEntity(parrNS)
	;-------------------------------------------------------------------------------
	; Compare the results with the COMEntity setup.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 15-Feb-2011	shobby	SR17661: Created
	;-------------------------------------------------------------------------------
	new objCOMEntity,idCOMEntity,blnResult
	
	set blnResult=$$$OK
	
	set idCOMEntity=""
	for {
		set idCOMEntity = $order(^COMEntity(0,idCOMEntity))
		quit:idCOMEntity=""
		
		set objCOMEntity = $get(^COMEntity(0,idCOMEntity,1))
		continue:idCOMEntity="THIS NAMESPACE"
		
		if $$GetDefaultDatabaseForGlobals($$$COMEntityNamespace(objCOMEntity))'=$zu(5) {
	;	if '$data(parrNS($$$COMEntityNamespace(objCOMEntity))) {
			set blnResult = '$$$OK
			quit
		}
	}
	quit blnResult
	
	
GetDefaultDatabaseForGlobals(pstrNS)
	;-------------------------------------------------------------------------------
	; Look at the cache configuration
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 15-Feb-2011	shobby	SR17661: Created
	;-------------------------------------------------------------------------------
	new strNS,strGlobal
	
	set strNS = $zu(5)
	zn "%SYS"
	do ##class(Config.Configuration).GetNamespace(pstrNS,.strGlobal)
	zn strNS
	quit $get(strGlobal)
	
]]></Routine>
</Export>