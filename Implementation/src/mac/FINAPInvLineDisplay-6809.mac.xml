<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvLineDisplay" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvLineDisplay
	
#include FINConst
#include WWWConst
#include COMSYS
#include INConst
	
ComboValidUnits(pYKEY,pYFELD,pSUCH)  ; FIXME : Base on INARTPACK instead? <GRF> see SR17939
	;-------------------------------------------------------------------------------
	; This routine creates a list of valid shipping units, by looking at the Invoice
	; Matching, the order and the UPC codes for the supplier.
	; 
	; Called By: OnBeforeDisplayCombo^FINAPInvLine
	; 
	; Returns:
	;
	; History:
	; 16-May-2011	GRF		Code cleanup - no functional change
	; 02-Oct-2009	GRF		SR16361: Use INRECLine in place of INWEFREI
	; 29-Aug-2005	shobby	SRVerbalFromSCR:Don't crash if idInvMatch is not defined.
	; 09-Jun-2005	JW/RW	SR12484: Modified to use INWEFREI not INWE
	; 14-Feb-2005	RobertW	Use INAUFPK instead of INAUFP
	; 11-Feb-2005	RobertW	Get the data for a receipt without order.
	; 27-Jan-2005	RobertW	Modified to look through INARTK
	; 18-Jan-2005	Shobby	Created (SR10061)
	;-------------------------------------------------------------------------------
	new YKEY,objFINAPInvLine,idSupplier,idOrder,objFAIMC,objINAUF,idReceipt,idRecLine
	new idUPC,objINARTUPC,idUnit,idLineItem,objINAUFP,objINARTK,objINAUFPK,objRecLine
	new idItem,idInvMatch,strKeys,idLocation,dteCreated,idUser,counter,objINWEFREI
	
	set objFINAPInvLine = pYFELD
	
	kill pSUCH
	set pSUCH = "SUCH"
	
	if $$$FINAPInvLineOrderUnit(objFINAPInvLine)'="" {
		; Unit from the Invoice Matching line if it exists.
		set pSUCH($$$FINAPInvLineOrderUnit(objFINAPInvLine)) = $$$FINAPInvLineOrderUnit(objFINAPInvLine)
	}
	
	do GetOrderDetails^FINAPInvLineGet(objFINAPInvLine,.idOrder,.idLineItem)
	if idOrder'="" {
		if idLineItem'="" {
			set objINAUFPK = $get(^INAUFPK(0,idOrder,idLineItem,1))
			set idUnit     = $$$INAUFPKDeliveryQuantityFullLot(objINAUFPK)
			if idUnit'="" {
				set pSUCH(idUnit) = idUnit
			}
		}
		
		set idItem = $$$FINAPInvLineItem(objFINAPInvLine)
		if idItem'="" {
			set objINAUF = $get(^INAUF(0,idOrder,1))
			if objINAUF'="" {
				set idSupplier = $$$INAUFSupplierNumber(objINAUF)
				if idSupplier'="" {   ; Various shipping units
					set idUPC = ""
					for {
						set idUPC = $order(^INARTUPC(0,idItem,idSupplier,idUPC))
						quit:idUPC=""
						
						set objINARTUPC = $get(^INARTUPC(0,idItem,idSupplier,idUPC,1))
						set idUnit = $piece(objINARTUPC,Y,2)
						if idUnit'="" {
							set pSUCH(idUnit) = idUnit
						}
					}
					
					; Search through the Item Supplier data, INARTK
					set objINARTK = $get(^INARTK(0,idItem,idSupplier,1))
					set idUnit = $$$INARTKDeliveryQuantityUnit(objINARTK)       ; D18
					if idUnit'="" {
						set pSUCH(idUnit) = idUnit
					}
				}
			}
		}
		
	} else {    // Receipt without order
		; FIXME : Base on INRECSummary <GRF>
		set idInvMatch = $$$FINAPInvLineCacheLink(objFINAPInvLine)
		if idInvMatch'="" {
			set objFAIMC  = $get(^FINAPInvMatchCache(0,idInvMatch,1))
			set idReceipt = $$$FINAPInvMatchCacheReceiptNumber(objFAIMC)
			set idRecLine = $$$FINAPInvMatchCacheReceiptLine(objFAIMC)
			if (idReceipt'="") && (idRecLine'="") {
				set objRecLine = $get(^INRECLine(0,idReceipt,idRecLine,1))
				set idUnit = $$$INRECLineReceivedUnit(objRecLine)
				if idUnit'="" set pSUCH(idUnit) = idUnit
				set idUnit = $$$INRECLineOrderedUnit(objRecLine)
				if idUnit'="" set pSUCH(idUnit) = idUnit
			}
		}
	}
	
	quit
	
	
ComboValidVariances(pYKEY,pYFELD,pYCOL,pSUCH)
	;-------------------------------------------------------------------------------
	; This routine creates a list of valid shipping units, by looking at the Invoice
	; Matching, the order and the UPC codes for the supplier.
	;
	; Returns:
	;
	; History:
	; 20-May-2005	PO		SR:11836 Using FC enums
	; 06-Apr-2005	PO		SR:11349 support FC Var Post
	; 27-Jan-2005	RobertW	Modified to look through INARTK
	; 18-Jan-2005	Shobby	Created (SR10061)
	;-------------------------------------------------------------------------------
	new objFINAPInvLine,idItem
	
	kill pSUCH
	set pSUCH="SUCH"
	
	set pSUCH($$$EnumFINAPVARIANCEPOSTSupplier) = $$$EnumFINAPVARIANCEPOSTSupplier
	
	if $$CanEffectInventory^FINAPInvLine() {
		if pYCOL'=34 {
			set pSUCH($$$EnumFINAPVARIANCEPOSTInventory)   = $$$EnumFINAPVARIANCEPOSTInventory
		} else {
			set pSUCH($$$EnumFINAPVARIANCEPOSTFCInventory) = $$$EnumFINAPVARIANCEPOSTFCInventory
		}
	}
	if pYCOL'=34 {
		set pSUCH($$$EnumFINAPVARIANCEPOSTExpense)   = $$$EnumFINAPVARIANCEPOSTExpense
		set pSUCH($$$EnumFINAPVARIANCEPOSTSplit)     = $$$EnumFINAPVARIANCEPOSTSplit
	} else {
		set pSUCH($$$EnumFINAPVARIANCEPOSTFCExpense) = $$$EnumFINAPVARIANCEPOSTFCExpense
	}
	quit
	
	
OnBeforeFormat(pYFIELDNAME,pYTEXT,pYFELD)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	; 
	; intCol refers to column layout in Form Definition
	;  1   1 - Item No.
	;  4   4 - Rec U/P
	;  5   7 - PO Nbr
	;  6   6 - Unmatched Quantity
	;  7  35 - Receive Date
	;  8  29 - C
	; 12  12 - Inv qty
	; 13  13 - Inv U/P
	; 20  20 - Inv um
	; 23    	INV-Q 
	; 24    	INV-$ 
	; 25    	OTH-$ 
	; 26  28 - Var Post
	; 27  30 - Variance INV-Q Post
	; 28  31 - Variance INV-$ Post
	; 29  32 - Variance OTH-$ Post
	; 30  14 - Total Total
	; 31  42 - U/P Inc Tax
	; 32  43 - Total Inc Tax
	; 33    	Var FC 
	; 34  45 - FC Var-$ Post
	;
	; History:
	; 16-May-2011	GRF		SR17250: get WWW122 obj with any customisation
	; 09-Jul-2009	GRF		SR16717: Identify ivory text (not changed)
	; 23-Mar-2009	GRF		SR16428: SysEnum Macro
	; 15-Jul-2005	RW		SR12891: Moved the GetToolTip call to FINAPVarianceUtilities
	; 07-Jul-2005	JW		SR12705: Use type for enabled check
	; 27-Jun-2005	PO		SR12705: Check YENABLED once and set blnEnabled
	; 24-Jun-2005	GRF		SR12787: Add parentheses to YENABLED check
	; 17-Jun-2005	JW		SR12484: Make item red if line needs updating
	; 01-Jun-2005	RobertW	SR12056: Use $$$DBLQUOTE instead of $c(34)
	; 03-May-2005	PO		SR11349: Attempted to not cause other default colour
	; 							problems, NB: This change is definitely necessary.
	; 26-Apr-2005	JW		Use correct default colour.
	; 18-Apr-2005	PO		SR11349: Do not change background colour if field not enabled
	; 07-Apr-2005	RobertW	SR11836: Modified OpenQuantity to UnmatchedQuantity,
	; 							removed duplicate line
	; 11-Mar-2005	PO		SR11349: use FCZero macro, and colour FC hdr fld orange
	; 15-Feb-2005	RobertW	If there is no column, ignore it.
	; 29-Jan-2004 	Paul K	Removed the FINAPInvLineSelected Property
	; 24-Jan-2005	Shobby	SR10061: Commented
	;-------------------------------------------------------------------------------
	new blnEnabled,idField,idType,intClassCol,intCol,objFINAPInv,objWWW122,strCol,strKey
	
	set intCol = $piece(pYFIELDNAME,"_",2)
	
	set YBACKGROUNDCOLOR = "ivory"
	
	set YFONTCOLOR  = $$$SysEnum("FARBE",$$$WWW012FontColor($get(^WWW012(0,0,1))))
	set objFINAPInv = $$$GRIDYFELDContainer
	set YTOOLTIP    = ""
	
	if intCol'="" {
	;	set objWWW122  = $get(^WWW122(0,YFORM,intCol,1))     ; SR17250
		set objWWW122  = $$Get^WWW122(YFORM,intCol)
		set idField    = $$$WWW122SequenceNumber(objWWW122)
		set idField    = $$$GetClassField(YFORM,intCol)
		set idType     = $$GetFieldType^COMUtilClass(YFORM,intCol)
		set strKey     = $$GetYKEY^COMGridEdit31Interface(+$piece(pYFIELDNAME,"Y",2))
		set blnEnabled = $$Enabled^COMGridEdit31Interface("",objWWW122,"",pYFELD,idType)
		
	 	if 'blnEnabled set YBACKGROUNDCOLOR=YGRAY
	 	
	 	if idField=$$$FldFINAPInvLineItem {
		 	if $$IsCurrent^FINAPInvMatchCache(pYFELD) {
			 	set YTOOLTIP = $$GetItemToolTip(pYFELD)
			 	
		 	} else {
				set YBACKGROUNDCOLOR = "red"
				set YTOOLTIP = $$$Text($listbuild("Fin00802"))
			} ; "The source data for this line has been modified. Delete and re-add the line before continuing."
			
		} elseif idField=$$$FldFINAPInvLineUnmatchedQuantity {
			if ($$$FINAPInvLineOrderNumber(pYFELD)'="") && ($$$FINAPInvLineOrderQuantity(pYFELD)'=$$$FINAPInvLineUnmatchedQuantity(pYFELD)) {
				set YFONTCOLOR = "red"
			}
			set YTOOLTIP=$$GetOpenQtyToolTip(pYFELD,strKey)
			
		} elseif (idField=$$$FldFINAPInvLineReceiveDate) {
			set YTOOLTIP = $$$Text("Fin00567")_$$GetReceivedLocationTranslation(pYFELD)
			
		} elseif $listfind($listbuild($$$FldFINAPInvLineInvoiceEach,$$$FldFINAPInvLineInvoiceTotal,$$$FldFINAPInvLineInvoiceEachIncTax,$$$FldFINAPInvLineInvoiceTotalIncludingTax),idField) {
			if blnEnabled && $$$FCZero($$$FCSub($$$FINAPInvLineInvoiceEach(pYFELD),$$$FINAPInvLineOrderEach(pYFELD))) {
				set YFONTCOLOR = "ivory"
			}
			set YTOOLTIP = $$GetPriceToolTip(idField,pYFELD,objFINAPInv)
			
		} elseif (idField=$$$FldFINAPInvLineInvoiceUnit) {
			if $$UnitOfMeasureCorrect^FINAPInvLine(pYFELD) {
				set YFONTCOLOR = "ivory"
			} else {
				set YBACKGROUNDCOLOR = "red"
			}
			set YTOOLTIP=$$$Text($listbuild("Fin00603",$$$FINAPInvLineUnmatchedQuantity(pYFELD),$$GetQuantityUnitTranslation(pYFELD)))
			; "Received Quantity : %1 - %2"
			
		} elseif (intCol=23) || (intCol=24) || (intCol=25) {  ; Manual Fields
			set YBACKGROUNDCOLOR = "darkorange"
			
		} elseif (intCol=33) { ;Manual Field
			if $$IsForeignCurrency^FINAPInvCurrency() {
				set YBACKGROUNDCOLOR = "CornflowerBlue"
			} else {
				set YBACKGROUNDCOLOR = "darkorange"
			}
			
		} elseif idField=$$$FldFINAPInvLineInvoiceQuantity {
			if (+$$$FINAPInvLineInvoiceQuantity(pYFELD)=$$$FINAPInvLineUnmatchedQuantity(pYFELD)) {
				set YFONTCOLOR = "ivory"
			
			} elseif ($$$FINAPInvLineInvoiceQuantity(pYFELD) > $$$FINAPInvLineUnmatchedQuantity(pYFELD)) {
				set YBACKGROUNDCOLOR="red"
			}
			
		} elseif $listfind($listbuild($$$FldFINAPInvLineVarianceINVQPost,$$$FldFINAPInvLineVarianceINVDPost,$$$FldFINAPInvLineVarianceOTHDPost,$$$FldFINAPInvLineVariancePosting),idField) {
			do ValidateSplits(pYFELD,strKey,idField,intCol)
			if idField=$$$FldFINAPInvLineVarianceINVQPost {
				set strCol = "IQ"
			
			} elseif idField=$$$FldFINAPInvLineVarianceINVDPost {
				set strCol = "ID"
			
			} elseif idField=$$$FldFINAPInvLineVarianceOTHDPost {
				set strCol = "OD"
			
			} else {
				set strCol = "TV"
			}
			
			set YTOOLTIP = $$GetToolTip^FINAPVarianceUtilities(strKey,strCol)
		}
		if $$$KEY2(strKey)="Total" set YHID = 1
	}
	quit
	
	
GetPriceToolTip(pidField,pobjLine,pobjFINAPInv)
	;-------------------------------------------------------------------------------
	; Make the ToolTip
	;
	; NOTE: Tool tip is currently always in base currency.
	;
	; Params:
	;
	; Returns:
	;
	;-------------------------------------------------------------------------------
	new strToolTip
	
	set strToolTip = ""
	if pidField'=$$$FldFINAPInvLineInvoiceEach              set strToolTip = strToolTip_$$$StrFINAPInvLineInvoiceEach_" : "_$$FormatCurrency^COMTable($$$FINAPInvLineInvoiceEach(pobjLine))_$$$CRLF
	if pidField'=$$$FldFINAPInvLineInvoiceTotal             set strToolTip = strToolTip_$$$StrFINAPInvLineInvoiceTotal_" : "_$$FormatCurrency^COMTable($$$FINAPInvLineInvoiceTotal(pobjLine))_$$$CRLF
	if pidField'=$$$FldFINAPInvLineInvoiceEachIncTax        set strToolTip = strToolTip_$$$StrFINAPInvLineInvoiceEachIncTax_" : "_$$FormatCurrency^COMTable($$$FINAPInvLineInvoiceEachIncTax(pobjLine))_$$$CRLF
	if pidField'=$$$FldFINAPInvLineInvoiceTotalIncludingTax set strToolTip = strToolTip_$$$StrFINAPInvLineInvoiceTotalIncludingTax_" : "_$$FormatCurrency^COMTable($$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine))_$$$CRLF
	
	quit strToolTip
	
	
GetItemToolTip(pYFELD)
	;-----------------------------------------------------------------------
	; 
	; Params:	pYFELD	objFINAPInvLine
	; 
	; Returns:    idItem: ItemDesc
	;             Supplier No.: SuppidItem
	;             Order Qty.  : fltQty           [stored in Inventory Units]
	;             Unit        : UnitDesc         [Inventory Units]
	; 
	; History:
	; 16-Oct-2009	GRF		SR16361: fix language text
	; 14-Oct-2009	DWR		SR16361: Internationalise
	; 02-Oct-2009	GRF		SR16361: Implement changed code
	; 17-Sep-2009	GRF		SR16361: Remove INWEAUF processing
	; 30-Aug-2006	GRF		SR12027: New Supplier No field, D1=>D8
	; 09-Jun-2005	JW/RW	SR12484: Modified to use INWEFREI not INWE
	; 11-Feb-2005	RW		Removed the supplier no if there is none same
	; 							with the order quantity.
	;-----------------------------------------------------------------------
	new strToolTip,objINARTK,strYFELDContainer,strItem,fltQuantity
	new idInvMatch,strKeys,idLocation,dteCreated,idUser,counter,objINWEFREI,idUnit
	
	set strYFELDContainer = $$$GRIDYFELDContainer
	set strToolTip        = ""
	
	if ($$$FINAPInvSupplier(strYFELDContainer)'="") && ($$$FINAPInvLineItem(pYFELD)'=""){
		set objINARTK = $get(^INARTK(0,$$$FINAPInvLineItem(pYFELD),$$$FINAPInvSupplier(strYFELDContainer),1))
		
		set strToolTip = strToolTip_$$$FINAPInvLineItem(pYFELD)_": "_$$$FINAPInvLineItemDescription(pYFELD)_$$$CRLF
		set strItem    = $$$INARTKSupplierItemNo(objINARTK)        ; D8
		if strItem'="" {
			set strToolTip = strToolTip_$$$Text($listbuild("Fin01093",strItem))_$$$CRLF	   ; "Supplier No.: %1"
		}
		set fltQuantity = $$$FINAPInvLineOrderQuantity(pYFELD)
		if fltQuantity'="" {
			set strToolTip=strToolTip_$$$Text($listbuild("Fin01094",fltQuantity))_$$$CRLF  ; "Order Qty.  : %1"
		}
		set idUnit = $$$FINAPInvLineOrderUnit(pYFELD)
		
		if idUnit'="" {
			set strToolTip = strToolTip_"Unit              : "_$$$AppEnum("EINHEIT",idUnit)	// FIXME: Internationalise ??
		}
	}
	quit strToolTip
	
	
GetOpenQtyToolTip(pYFELD,pYKEY)
	;----------------------------------------------------------------------------
	; Get the tool tip for the open qty field
	; 
	; History:
	; 03-Feb-2005	RobertW	Change literal strings into Language Text
	; 31-Jan-2005	JW		Created
	;----------------------------------------------------------------------------
	new tooltip,details,idFINAPInv,idFINAPInvLine,prevInvQty,recQty
	
	set recQty = $$$FINAPInvLineReceivedQuantity(pYFELD)
	set prevInvQty = $$PreviouslyInvoiced^FINAPInvLine(pYFELD,$$$YES,.details)
	
	set tooltip = $$$Text("Fin00647")_": "_recQty                      ; "Received Quantity"	
	set tooltip = tooltip_$$$CRLF_$$$Text("Fin00648")_": "_+prevInvQty ; "Previously Invoiced"
	
	set idFINAPInv=""
	for {
		set idFINAPInv = $order(details(idFINAPInv))
		quit:idFINAPInv=""
		
		set idFINAPInvLine = $order(details(idFINAPInv,""),1,prevInvQty)
		set tooltip = tooltip_$$$CRLF_" - "_idFINAPInv_","_idFINAPInvLine_" ("_prevInvQty_")"
	}
	if $$$FINAPInvLineOrderQuantity(pYFELD)'="" {
		set tooltip=tooltip_$$$CRLF_$$$Text("Fin00649")_": "_$$$FINAPInvLineOrderQuantity(pYFELD)
	} ; "Order Quantity"
	quit tooltip
	
	
ValidateSplits(pstrYFELD,pstrKEY,pintClassCol,pintFormCol)
	new idFINAPInv,idFINAPInvLine
	
	set idFINAPInv     = $$$KEY1(pstrKEY)
	set idFINAPInvLine = $$$KEY2(pstrKEY)
	
	if pintClassCol=$$$FldFINAPInvLineVarianceINVQPost {
		if $$$FINAPInvLineVarianceINVQPost(pstrYFELD)=4 {
			do ShowVarianceCompletion($$VarianceCompleted^FINAPInvLineVariance(idFINAPInv,idFINAPInvLine,"IQ"))
		} else {
			do ShowVarianceCompletion($$$YES)
		}
	}
	if pintClassCol=$$$FldFINAPInvLineVarianceINVDPost {
		if $$$FINAPInvLineVarianceINVDPost(pstrYFELD)=4 {
			do ShowVarianceCompletion($$VarianceCompleted^FINAPInvLineVariance(idFINAPInv,idFINAPInvLine,"ID"))
		} else {
			do ShowVarianceCompletion($$$YES)
		}
	}
	if pintClassCol=$$$FldFINAPInvLineVarianceOTHDPost {
		if $$$FINAPInvLineVarianceOTHDPost(pstrYFELD)=4 {
			do ShowVarianceCompletion($$VarianceCompleted^FINAPInvLineVariance(idFINAPInv,idFINAPInvLine,"OD"))
		} else {
			do ShowVarianceCompletion($$$YES)
		}
	}
	if pintClassCol=$$$FldFINAPInvLineVariancePosting {
		if $$$FINAPInvLineVariancePosting(pstrYFELD)=4 {
			do ShowVarianceCompletion($$VarianceCompleted^FINAPInvLineVariance(idFINAPInv,idFINAPInvLine,"TV"))
		} else {
			do ShowVarianceCompletion($$$YES)
		}
	}
	quit
	
	
ShowVarianceCompletion(pblnCompleted)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 14-Feb-2005	JW		YBACKGROUNDCOLOR may have already been set.
	;-------------------------------------------------------------------------------
	if pblnCompleted {
	;	set YBACKGROUNDCOLOR = $get(YCOLOFF,"ivory") ; JW
	} else {
		set YBACKGROUNDCOLOR = "red"
	}
	quit
	
	
GetReceivedLocationTranslation(pYFELD)
	;-------------------------------------------------------------------------------
	; Translates the Received location into descriptive text based on the class settings.
	;
	; Returns:
	;
	; History:
	; 31-Jan-2005	JW		Removed function GetReceivedLocation
	; 19-Jan-2005	Shobby	Created
	;-------------------------------------------------------------------------------
	new strLocn
	
	set strLocn = $$ClassTranslate^COMGridEdit31Interface($$$FINAPInvLineReceiveLocation(pYFELD),$$$FldFINAPInvLineReceiveLocation,"")
	set strLocn = $zcvt(strLocn,"I","HTML")
	quit strLocn
	
	
GetQuantityUnitTranslation(pYFELD)
	new strQtyUnit
	
	; following line will translate the unit, the actual field and class are not right but the value to
	; translate could come from many places and actually the piece on INWE is not set up with the expected
	; application parameter.
	set strQtyUnit = $$ClassTranslate^COMGridEdit31Interface($$GetQuantityUnit^FINAPInvLineGet(pYFELD),20,"FINAPInvLine")
	set strQtyUnit = $zcvt(strQtyUnit,"I","HTML")
	quit strQtyUnit
	
	
HideShowClosed(pa,pb) 
	;-------------------------------------------------------------------------------
	; Event wrapper for grid hiding rows function
	;
	; Params: not used
	;
	; Returns:
	;
	; History:
	; 19-Oct-2005	JW		SR11573: Created
	;-------------------------------------------------------------------------------
	$$$GRIDHideShowRows(8,1)
	quit ""
	
]]></Routine>
</Export>