<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESPatientConsumptionMCLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESPatientConsumptionMCLine
#include COMSYS
#include INConst
#include WWWConst
#include VARSESConst
#include VARConst
 	
 
OnAfterPrimaryKey(pYKEY) 
	;
	;	16-Jun-2009		heber	change ses 2009
	;
	new idINIssue, idINIssueLine, objINIssue, idTreatment
	
	set idINIssue = $piece(pYKEY,YKOMMA,1)
	set idINIssueLine = $piece(pYKEY,YKOMMA,2)
	set objINIssue = $get(^INIssue(YM,idINIssue,1))
	set objINIssueLine = $get(^INIssueLine(YM,idINIssue,idINIssueLine,1))
	set idTreatment = $$$INIssueReference(objINIssue) 	
	set STATUSLine = $$SetStatus(idTreatment,idINIssueLine)
	set MQTY=$$NormalQtyToBeConsumed(pYKEY)
	set MXQTY=$$MaxQtyToBeConsumed(pYKEY)
	
	if MQTY < 0 set MQTY = 0
	if MXQTY < 0 set MXQTY = 0
 
	set QTYCURRMONTH = +$$GetQtyConsumedCurrMonth^VARSESPatientConsumptionMCLog(idTreatment,idINIssueLine)
	set QTYTOTAL = $$GetTextOnConsumption^VARSESPatientConsumptionMCLog(idTreatment,idINIssueLine)
	set QTYPRESCRITA = $$getQuantidadePorMes^VARSESTreatmentMCLine(idTreatment, idINIssueLine)	
	set CUSTOTOTAL = $$$INIssueLineQtyIssued(objINIssueLine) * $$$INIssueLineUnitCost(objINIssueLine)
	// change ses 2009
	set CENTRALSTK = $$getSOHLocal($$$INIssueLineItem(objINIssueLine),YLOCATION)
 	//set CENTRALSTK = $$getSOHCompany($$$INIssueLineItem(objINIssueLine))

	quit
 
SetStatus(pidTreatment,pidLine)
	new strStatus
	
	set strStatus = $$StatusTreatmentMCLine^VARSESTreatmentMCLine(pidTreatment,pidLine)
	if (strStatus '= "") { 
		set strStatus = $piece($get(^INPARA(YM,"VARSESTREATMENTSTATUS",SPRACHE,strStatus,1)),Y,1)
	}
	quit strStatus
 
GetConsCurMonth(pidTMC,pidTMCLine)
    /*-------------------------------------------------------------------------------
    ; Routines called from Jasper Report  VARSESPatientConsumptionMC.jrxml
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new fltQty
	do ^WWWVAR
	set fltQty = +$$GetQtyConsumedCurrMonth^VARSESPatientConsumptionMCLog(pidTMC,pidTMCLine)
	quit fltQty
 
GetTxtConsAllMonths(pidTMC,pidTMCLine)
    /*-------------------------------------------------------------------------------
    ; Routines called from Jasper Report  VARSESPatientConsumptionMC.jrxml
    ; 
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new strTxt
	do ^WWWVAR
	set strTxt = $$GetTextOnConsumption^VARSESPatientConsumptionMCLog(pidTMC,pidTMCLine)
	if (strTxt = "") {
		set strTxt = "a"
	}
	quit strTxt
	
	;GetCurMonthConsQtytPCLine(pYKEY)
NormalQtyToBeConsumed(pYKEY)
    ;-------------------------------------------------------------------------------
    ; 
    ; 
	; Params:	pidAdj - INIssue id
    ; 
    ; Returns: 
    ;
    ; History:
    ; 08-Sep-2008	heber	SRBRxx	: Create
    ;-------------------------------------------------------------------------------
 	new idINIssue, idLine, objINIssue, idTreatment, objTreatmentMCLine, fltMaxMonth, fltQty 
 	
 	set idINIssue = $piece(pYKEY,YKOMMA,1)
 	set idLine = $piece(pYKEY,YKOMMA,2)	
 	set objINIssue = $get(^INIssue(YM,idINIssue,1))
 	set idTreatment = $$$INIssueReference(objINIssue)
  	set fltQty = $$GetThisMonthLineQty^VARSESTreatmentMCLine1(idTreatment, idLine)
 	
 	;MaxQtyToBeConsumed
	set fltMaxMonth = $$MaxQtyToBeConsumed^VARSESPatientConsumptionMCLog(idTreatment, idLine)
	if (fltQty > fltMaxMonth) {
		set fltQty = fltMaxMonth
	}
 	quit fltQty
 
	;GetCurMonthMaxQtytPCLine(pYKEY)
MaxQtyToBeConsumed(pYKEY)
    ;-------------------------------------------------------------------------------
    ; 
    ; 
	; Params:	pidAdj - INIssue id
    ; 
    ; Returns: 
    ;
    ; History:
    ; 08-Sep-2008	heber	SRBRxx	: Create
    ;-------------------------------------------------------------------------------
 	new idINIssue, idLine, objINIssue, idTreatment, objTreatmentMCLine, fltMaxMonth, fltQty 
 	
 	set idINIssue = $piece(pYKEY,YKOMMA,1)
 	set idLine = $piece(pYKEY,YKOMMA,2)
 	set objINIssue = $get(^INIssue(YM,idINIssue,1))
 	set idTreatment = $$$INIssueReference(objINIssue)
 	quit $$MaxQtyToBeConsumed^VARSESPatientConsumptionMCLog(idTreatment, idLine)
 
CreateLinesFromTreatment(pidTreatment,pidINIssue)
    ;-------------------------------------------------------------------------------
    ; Create entries on INIssueLine as specified on VARSESTreatment
    ; 
	; Params:	pidAdj - INIssue id
    ; 
    ; Returns: 
    ;
    ; History:
    ; 08-Sep-2008	heber	SRBRxx	: Create
    ;-------------------------------------------------------------------------------
 	new objTreatmentMC, objTreatmentMCLine, idTreatmentMCLine, fltQuantity, fltMaxMonth,
 		YKEY, YDATEI, YFELD, fltQty
 	if (pidTreatment= "") quit
 	set objTreatmentMC = $get(^VARSESTreatmentMC(YM,pidTreatment,1))
 	set idTreatmentMCLine = ""
 	
 	for {
		set idTreatmentMCLine = $order(^VARSESTreatmentMCLine(YM,pidTreatment,idTreatmentMCLine))
		quit:(idTreatmentMCLine = "")
		set objTreatmentMCLine = $get(^VARSESTreatmentMCLine(YM,pidTreatment,idTreatmentMCLine,1))
		
		set YFELD = ""
	 	set YKEY = pidINIssue _ "," _ idTreatmentMCLine
 		set YDATEI = "INIssueLine"
 		//todo verificar
 		set $$$INIssueLineItem(YFELD) = $$$VARSESTreatmentMCLineMedicine(objTreatmentMCLine)
		set $$$INIssueLineFREE4(YFELD) = $$$VARSESTreatmentMCLineCancel(objTreatmentMCLine)
		if ($$$INIssueLineFREE4(YFELD)) {
			set $$$INIssueLineFREE1(YFELD) = 0
		}
		set $$$INIssueLineUnit(YFELD) = $$LoadUnitOfMeasureList^INARTUtilities($$$INIssueLineItem(YFELD))
 		set $$$INIssueLineLocationInventory(YFELD) = $$getSOHLocal($$$INIssueLineItem(YFELD),YLOCATION) 		
 		set $$$INIssueLineDespatchStorage(YFELD) = YLOCATION 	
 		set $$$INIssueLineStatus(YFELD) = 1	
 		tstart
 		set strStatus=$$^WWWSPEI(YDATEI,YKEY,YFELD,1)
 		if (+strStatus) {
			if $tlevel>0 tcommit
		} else {
			trollback
		}
 	}
 	quit
 
CarregaEstoque(Key,Location)
	//Carrega o estoque na tela de consumo para paciente
	set dado=""
	set dado=$order(^INIssueLine(YM,Key,dado))
	while dado'= "" {
		set objLine  = $get(^INIssueLine(YM,Key,dado,1))
		set $$$INIssueLineLocationInventory(objLine)=$$getSOHLocal($$$INIssueLineItem(objLine),Location)
		set $$$INIssueLineNetworkInventory(objLine)=$$getSOHCompany($$$INIssueLineItem(objLine))
		set dado=$order(^INIssueLine(YM,Key,dado))
	}
	quit
	
CarregaEstoqueAjuste(Key,Location)
	//Carrega o estoque na tela de ajuste
	set dado=""
	set dado=$order(^INIssueLine(YM,Key,dado))
	while dado'= "" {
		set objLine  = $get(^INIssueLine(YM,Key,dado,1))
		set $$$INIssueLineLocationInventory(objLine)=$$getSOHLocal($$$INIssueLineItem(objLine),Location)
		set dado=$order(^INIssueLine(YM,Key,dado))
	}
	quit	
	
OnBlur(&pobjYFELD)
	set codProduto = $$$INIssueLineItem(YFELD)
	quit:(codProduto = "")
 
	if ($get(^INDRPITEM(YM,YLOCATION,codProduto,1)) = "") {
		$$$StartScript()
		w "alert('" _ $$$Text($listbuild(334020,codProduto)) _ "');"
		$$$EndScript()
		quit
	}
	set $$$INIssueLineUnit(YFELD)=$$LoadUnitOfMeasureList^INARTUtilities(codProduto)
 	set $$$INIssueLineLocationInventory(YFELD)=$$getSOHLocal($$$INIssueLineItem(YFELD),YLOCATION)
 	set $$$INIssueLineFREE3(YFELD)=$$getSOHCompany($$$INIssueLineItem(YFELD))
	quit
 
ChecarQuantidade()
	//Checa se as quantidades estão corretas
	//Vale tanto para a INIssue quanto para a VARSESCONSUMOPACIENTE. Observar que os dois forms usam os mesmos _FREE's.
	new fltMonthQty, idINIssue, objINIssue, idTreatment
	
	if $$$INIssueLineQtyPicked(YFELD)= "" quit 2
	if $$$INIssueLineQtyPicked(YFELD) < 0 {
		$$$StartScript()
		;w "alert('A quantidade não pode ser negativa. Favor corrigir.');"
		w "alert('" _ $$$Text(334021) _"');"
		$$$EndScript()
		quit 1
	}
	
	if $$$INIssueLineLocationInventory(YFELD) < $$$INIssueLineQtyPicked(YFELD) {
		$$$StartScript()
		;w "alert('A quantidade atendida não pode ser maior do que a quantidade disponível no estoque físico (local). Favor corrigir a quantidade digitada.');"
		w "alert('" _ $$$Text(334022) _"');"
		$$$EndScript()
		quit 1
	}
	
	// check if entered value is within consumption limits
	set idINIssue = $piece(YKEY,YKOMMA,1)
	set objINIssue = $get(^INIssue(YM,idINIssue,1))
	set idTreatment = $$$INIssueReference(objINIssue)
 
	;;;;;;;;;;;;;;
	// not allowed if qty available for dispensation is zero
	set fltMonthQty = $$QtyResidual^VARSESPatientConsumptionMCLog(idTreatment,$piece(YKEY,YKOMMA,2)) 
	if (fltMonthQty <= 0) && ($$$INIssueLineQtyPicked(YFELD) > 0) {
		$$$StartScript()
		w "alert('Não há mais medicamento a ser entregue. Favor informar quantidade zero (0).');"
		$$$EndScript()
		quit 1
	}

	quit 2
	
updateLines(idINIssue)
	;History
	; 16-Jul-2014	shobby	SESDF-1324 : Correction to obtaining the BundleId.
	
	new objLine, objINIssue
	set objLine = ""
	set objINIssue = $get(^INIssue(YM,idINIssue,1))
	set idIssueLine = ""
	set status = 1
	#Dim objIssueLineCreate as alDRP.dStockIssue
	set idIssueLine = $order(^INIssueLine(YM,idINIssue,idIssueLine))
 	for {
		quit:(idIssueLine = "")
		if ($length(idIssueLine,".") > 1) quit
		set objLine = $get(^INIssueLine(YM,idINIssue,idIssueLine,1))
		//todo inserir outra condição
		if ($$$INIssueLineQtyPicked(objLine) > 0 ) {
				if ((+$$$INIssueStatus(objINIssue) '= 0) &&  ($$$INIssueStatus(objINIssue) > 1)) {
					set $$$INIssueLineStatus(objLine)   = $$$INIssueStatus(objINIssue)
				}
				else {
					set $$$INIssueLineStatus(objLine) = 1
				}
				set strStatus = $$$Save("INIssueLine",idINIssue_$$$COMMA_idIssueLine,objLine,$$$YES)
				set $$$INIssueLineQtyRequired(objLine) = $$$INIssueLineQtyPicked(objLine)				
		 		set objIssueLineCreates = ##class(%Library.ListOfObjects).%New()
		 		if ($$$INIssueLineStatus(objLine) = 1){
		 			set objIssueLineCreates = ##class(alDRP.iDRP).SourceIssue($$$INIssueLineItem(objLine),$$$INIssueFromLocn(objINIssue),$$$INIssueLineQtyRequired(objLine))
					for iCount=1:1:objIssueLineCreates.Count() {
						set objIssueLineCreate = objIssueLineCreates.GetAt(iCount)
						;SESDF-1324 set $$$INIssueLineBundle(objLine) 	    = objIssueLineCreate.Bundle.GetBundleIDforHashKey(objIssueLineCreate.Bundle.GetBundleHash())
						set $$$INIssueLineBundle(objLine) 	    = objIssueLineCreate.Bundle.%Id() ;SESDF-1324 
						set $$$INIssueLineFromStorage(objLine)  = objIssueLineCreate.Storage.Code
						set $$$INIssueLineQtyIssued(objLine)	= objIssueLineCreate.QtyToIssue
						set $$$INIssueLineReference(objLine) 	= $$$INIssueReference(objINIssue)
						if (($$$INIssueStatus(objINIssue) '= 0) &&  ($$$INIssueStatus(objINIssue) > 1)) {
							set $$$INIssueLineStatus(objLine)   = $$$INIssueStatus(objINIssue)
						}
						else {
							set $$$INIssueLineStatus(objLine) = 1
						}
						if (objIssueLineCreates.Count() > 1 ){
							set idLines = idIssueLine_"."_iCount
						}
						else {
							set idLines = idIssueLine
						}
						set strStatus = $$$Save("INIssueLine",idINIssue_$$$COMMA_idLines,objLine,$$$YES)
					}						
					set idIssueLine = $order(^INIssueLine(YM,idINIssue,idIssueLine))
				}
			}
			else {
				//set status = "Não deve existir linhas com quantidade = 0 (zero). Favor exluir as linhas que não serão atendidas"
				set $$$INIssueLineBundle(objLine) 	    = 1
				set $$$INIssueLineQtyRequired(objLine)  = $$$INIssueLineQtyPicked(objLine)				
				set $$$INIssueLineQtyIssued(objLine)	= 0
				set strStatus = $$$Save("INIssueLine",idINIssue_$$$COMMA_idIssueLine,objLine,$$$YES)
				set idIssueLine = $order(^INIssueLine(YM,idINIssue,idIssueLine))
				//w strStatus
			}
 	}
	quit status
	
getSOHLocal(pItem,pLocation)
	// EF (Local)
	//do ^WWWVAR
	quit:($get(pItem) = "") $$$RecordNotSelected
	set qtLocal = ##class(alSOH.iSOH).GetQtyAvailable(pItem,pLocation)
	quit qtLocal
	//quit $$^INARTMENGE(pItem,,pLocation,,1,0,1)
 
getSOHCompany(codProduto)
	// EF(Rede)/Unidade de Estoque
	quit:($get(codProduto) = "") $$$RecordNotSelected
	set qtRede = ##class(alSOH.iSOH).GetQtyAvailable(codProduto)
	quit qtRede
 
GetQuantidade() // Pega a quantidade digitada pelo usuário no Free, transforma em valor negativo *(-1) e carrega no campo core de Quantidade.
	if ($$$INIssueLineQtyPicked(YFELD)'="") {
		set Quantidade = ($$$INIssueLineQtyPicked(YFELD))*(-1)
		quit Quantidade		
	}
	else {
		quit 0
	}	
 
GetQuantidadeBase() // Pega a quantidade digitada pelo usuário no Free, transforma em valor negativo *(-1) e carrega no campo core de Base Quantity.
	// Atenção: essa função só foi criada por motivos de bug no campo ReasonCode. Sem o valor BaseQuantity (YFELD 3) setado, o formulário não tira os itens do estoque.
	set Quantidade = ($$$INIssueLineQtyPicked(YFELD))*(-1)
	quit Quantidade		
 
IsNotEditable(pYFELD)
	if ($$$INIssueLineFREE4(pYFELD) = 1) {
		quit 1
	}
	if ($$$INIssueLineStatus(pYFELD) = 9) {
		quit 1
	}
	quit 0
]]></Routine>
</Export>