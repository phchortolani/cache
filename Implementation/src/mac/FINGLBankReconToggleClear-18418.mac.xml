<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBankReconToggleClear" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBankReconToggleClear
	
#include COMSYS
#include FINConst
#include WWWConst
	
PerformToggle(pblnChecked)
	;-------------------------------------------------------------------------------
	; Toggle Clear/Unclear of all the tran lines
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
	; 01-Mar-2006	SteveS	SR14204: Created
	;-------------------------------------------------------------------------------
	new arrGrid,blnToggle,idKey,idLine,objLine,objHeader
 
	$$$GRIDGetContents(.arrGrid)
	
	set idKey = $order(arrGrid(""))
		
	if (idKey'="") {
		set idLine = ""
		for {
			set idLine = $order(arrGrid(idKey,idLine))
			quit:(idLine="")
				
			set objLine = $get(arrGrid(idKey,idLine))
			if (+$$$FINGLBankReconMatchedCleared(objLine))'=(+pblnChecked) {
				do PerformMatch^FINGLBankReconMatched(,objLine,idKey,idLine,$$$ANBOOLEAN(pblnChecked))
				set arrGrid(idKey,idLine) = $get(^FINGLBankReconMatched(YM,idKey,idLine,1))
			}
		}	
	}
	
	$$$GRIDSetContents(.arrGrid)
	do ProcessFilters^FINGLBankReconMatched()
	quit
	
	
ManualChangesMade(pidBankRecon,pblnChecked) private
	;-------------------------------------------------------------------------------
	; Determines whether there have been manual changes made
	;
	; Params: pidBankRecon		: The bank rec number
	;
	; ByRefs:
	;
	; Returns: blnChangesMade
	;
	; History:
	; 01-Mar-2006	SteveS	SR14204: Created
	;-------------------------------------------------------------------------------
	new blnChangesMade
 
	set blnChangesMade = $$$NO
	
	if 'pblnChecked {
		set blnChangesMade = ($data(^FINGLBankReconMatcheds(YM,1,$$$ANINO,pidBankRecon))) ||
		                      $data(^FINGLBankReconMatcheds(YM,1,$$$NO,pidBankRecon)         )
	} else {
		set blnChangesMade = ''($data(^FINGLBankReconMatcheds(YM,1,$$$YES,pidBankRecon)))
	}
	
	quit blnChangesMade
	
	
Toggle(pblnChecked,pidBankRecon)
	;-------------------------------------------------------------------------------
	; Run from clicking the toggle checkbox
	;
	; Params: pblnChecked	: the checked status of the box
	; 		  pidBankRecon	: the bank rec number
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Mar-2006	SteveS	SR14204: Created
	;-------------------------------------------------------------------------------
	if '$$$NoKey(pidBankRecon) {
		if $$ManualChangesMade(pidBankRecon,pblnChecked) {
			do ConfirmPerformToggle(pblnChecked)
		} else {
			do PerformToggle(pblnChecked)
		}
	}
	quit	
	
	
ConfirmPerformToggle(pblnChecked)
	;-------------------------------------------------------------------------------
	; Confirm whether a toggle should be done.
	;
	; Params: pblnChecked		: Whether the box was ticked or not
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 02-Mar-2006	SteveS	SR14204: Created
	;-------------------------------------------------------------------------------
	write "if (confirm('"_$$$Text("Fin00996")_"')) {"  ;Manual changes will be lost. Press OK to continue or Cancel to save manual changes
	write "   CallBackNow('PerformToggle^FINGLBankReconToggleClear',"_pblnChecked_");"
	write "} else {"
	write "   CallBackNow('AbortToggle^FINGLBankReconToggleClear',"_pblnChecked_");"
	write "}"
	
	quit
	
	
CanToggle(pidBankRecon)
	;-------------------------------------------------------------------------------
	; Determines whether the Toggle checkbox should be enabled or not
	;
	; Params: pidBankRecon : the bank rec number
	;
	; ByRefs:
	;
	; Returns: blnCanToggle
	;
	; History:
	; 02-Mar-2006	SteveS	SR14204: Created
	;-------------------------------------------------------------------------------
	new blnCanToggle,objBankRecon,idAccount
 
	set blnCanToggle = $$$NO
	
	if '$$$NoKey(pidBankRecon) {
		set objBankRecon = $get(^FINGLBankRecon(YM,pidBankRecon,1))
		set idAccount    = $$$FINGLBankReconBankAccount(objBankRecon)
		if idAccount'="" {
			set blnCanToggle = '$data(^FINGLBankTran(YM,idAccount))
		}
	}
	quit blnCanToggle
	
	
ToggleMessage(pidBankRecon)
	;-------------------------------------------------------------------------------
	; If the toggle field is disabled, show the message afterwards
	;
	; Params: pidBankRecon		: The bank recon number
	;
	; ByRefs:
	;
	; Returns: strMessage (the message to show)
	;
	; History:
	; 02-Mar-2006	SteveS	SR14204: Created
	;-------------------------------------------------------------------------------
	new strMessage,objFINGLBankRecon,idAccount
 
	set strMessage = ""
	
	if '$$$NoKey(pidBankRecon) {
		if '$$CanToggle(pidBankRecon) {
			set objFINGLBankRecon = $get(^FINGLBankRecon(YM,pidBankRecon,1))
			set idAccount  = $$$FINGLBankReconBankAccount(objFINGLBankRecon)
			set strMessage = $$$Text($listbuild("Fin00997",idAccount)) ;Account `%1` has bank lines
		}
	}
	quit strMessage
	
	
AbortToggle(pblnChecked)
	;-------------------------------------------------------------------------------
	; Abort the toggle (sets the field back to whatever it was)
	;
	; Params: pblnChecked		: Whether the box was checked or not
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 02-Mar-2006	SteveS	SR14204: Created
	;-------------------------------------------------------------------------------
	do UpdateHeaderField^COMGridEdit31Interface("D"_$$$FldFINGLBankReconToggleStatus,$$$ANBOOLEAN('pblnChecked))
	quit
	
]]></Routine>
</Export>