<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWFLOE" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWFLOE
	
#include COMSYS
#include WWWConst
#define KillFormGlobal(%1,%2) do KillChildren^COMUtils(%1,%2)
	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		FORMULARDEF. LOESCHEN
	;		Form Definition Deletion
	;
	;	S VORG(1)="FORMNAME"  OR   S YKEY="FORMNAME"
	;	D ^WWWFLOE
	; 
	; Inputs : 
	;
	;
	; ByRef :
	;	VORG(1) = semicolon or comma delimited list of formnames to be deleted
	;	VORG(2) = blnClearMenus - defaults to $$$NO, set to $$$NO if use YKEY used
	;	          instead of VORG(1)
	;	YKEY    = alternative means of specifying formname list - called to delete THIS form
	;
	; Returns :
	;
	;
	; History :
	; 26-Sep-2006	GRF		SR13968: doco; boolean macros; add news; braces
	; 21.08.1997
	;-------------------------------------------------------------------------------
	new loop,VORGX
	
	;	YQ : blnDisplayMessage  $$$NO if VORG(1) used, $$$YES if YKEY used   (?)
	SET YQ = $$$NO
	IF $DATA(VORG(1)) {
		SET VORG(1) = $TRANSLATE(VORG(1),",",";")  ;ZU LÖSCHENDEN
	} else {
		IF ($GET(YKEY)'="") && '$DATA(^WWW120(0,YKEY)) {
			SET VORG(1)=YKEY
			SET YQ=$$$YES,VORG(2)=$$$NO  ;LÖSCHEN EIGENES FORMUALR ;Delete own form
		}
	}
	QUIT:'$DATA(VORG(1))
	QUIT:VORG(1)="" 
	FOR loop=1:1 QUIT:$PIECE(VORG(1),";",loop)=""  SET VORGX = $PIECE(VORG(1),";",loop) DO DEL
	KILL VORG
	QUIT
	
DEL ;LÖSCHEN ;Delete 
	QUIT:$EXTRACT(VORGX,1,3)="WWW"
	;---------------------------------------
	; EXECUTION DROPS THROUGH.
	; STANDARD EXECUTION DOESN"T ALLOW WWW* TO BE DELETED - call DEL1 
	;---------------------------------------
	
DEL1
    ;-------------------------------------------------------------------------------
    ;	SONDERLÖSCHUNG WWW MANUELLER EINSPRUNG
    ;   SPECIAL MANUAL RE-ENTRY POINT FOR DELETION OF WWW* FORMS
    ;   
    ;	S VORGX=FORM,VORG(2)=0
    ;	D DEL1^WWWFLOE
    ; 
    ; Inputs:
    ;
    ; Returns:
    ;
    ; History:
    ; 23-Mar-2010	shobby	SR17248: COMGridEditParameter
    ; 01-Jun-2009	shobby	SR16534: Include WWW122C2 (Core Rules)
	; 10-Sep-2008	shobby	BR014980: COMHelp* no longer necessary. (Temporary data)
    ; 08-Jan-2006	PO		SR15351: Deleting Dynamic Table records WWW120DynTable
    ; 08-Nov-2006	Steve S	SR14915: Delete help text class
    ; 13-Sep-2006	HeberB	SRBR014175: more classes to kill form references
    ; 19-Jan-2006	Steve S	SR13171: Also kill custom buttons
    ; 02-Sep-2005	JW		SR12966: WWW1205/WWW128 are not shared
    ; 08-Jul-2005	shobby	WWW126* classes are no longer shared.
    ;-------------------------------------------------------------------------------
    new MENU1,MENU2,SATZ,YDATEI,strStatus
    
    set strStatus = $$$OK
	SET YDATEI    = VORGX
	MERGE ^XWWW120(0,YDATEI)=^WWW120(0,YDATEI)
	MERGE ^XWWW121(0,YDATEI)=^WWW121(0,YDATEI)
	MERGE ^XWWW122(0,YDATEI)=^WWW122(0,YDATEI)
	
	DO ^WWWSKILL("WWW120",YDATEI)                KILL ^WWW120(0,YDATEI)
	DO ^WWWSKILL("WWW1201",YDATEI)               KILL ^WWW1201(0,YDATEI)
	DO ^WWWSKILL("WWW1203",YDATEI)               KILL ^WWW1203(0,YDATEI)
	DO ^WWWSKILL("WWW1203D",YDATEI)              KILL ^WWW1203D(0,YDATEI)
	DO ^WWWSKILL("WWW1205",YDATEI)               KILL ^WWW1205(YM,YDATEI)
	DO ^WWWSKILL("WWW1205B",YDATEI)              KILL ^WWW1205B(YM,YDATEI)
	DO ^WWWSKILL("WWW120D",YDATEI)               KILL ^WWW120D(0,YDATEI)
	do ^WWWSKILL("WWW120DynTable",YDATEI)        kill ^WWW120DynTable(0,YDATEI)
	DO ^WWWSKILL("WWW121",YDATEI)                KILL ^WWW121(0,YDATEI)
	DO ^WWWSKILL("WWW1210",YDATEI)               KILL ^WWW1210(0,YDATEI)
	DO ^WWWSKILL("WWW121D",YDATEI)               KILL ^WWW121D(0,YDATEI)		; SRBR014175
	DO ^WWWSKILL("WWW121D1",YDATEI)              KILL ^WWW121D1(0,YDATEI)
	DO ^WWWSKILL("WWW122D1",YDATEI)              KILL ^WWW122D1(0,YDATEI)
	DO ^WWWSKILL("WWW122D2",YDATEI)              KILL ^WWW122D2(0,YDATEI)
	DO ^WWWSKILL("WWW122D",YDATEI)               KILL ^WWW122D(0,YDATEI)
	DO ^WWWSKILL("WWW1211",YDATEI)               KILL ^WWW1211(0,YDATEI)
	DO ^WWWSKILL("WWW122",YDATEI)                KILL ^WWW122(0,YDATEI)
	DO ^WWWSKILL("WWW1221",YDATEI)               KILL ^WWW1221(0,YDATEI)
	DO ^WWWSKILL("WWW122C2",YDATEI)              KILL ^WWW122C2(0,YDATEI)		; SR16534
	DO ^WWWSKILL("WWW123",YDATEI)                KILL ^WWW123(0,YDATEI)
	DO ^WWWSKILL("WWW1231",YDATEI)               KILL ^WWW1231(0,YDATEI)
	DO ^WWWSKILL("WWW1232",YDATEI)               KILL ^WWW1232(0,YDATEI)
	DO ^WWWSKILL("WWW124",YDATEI)                KILL ^WWW124(0,YDATEI)
	DO ^WWWSKILL("WWW124D",YDATEI)               KILL ^WWW124D(0,YDATEI)
	DO ^WWWSKILL("WWW1251",YDATEI)               KILL ^WWW1251(0,YDATEI)
	DO ^WWWSKILL("WWW126",YDATEI)                KILL ^WWW126(YM,YDATEI)
	DO ^WWWSKILL("WWW1261",YDATEI)               KILL ^WWW1261(YM,YDATEI)
	DO ^WWWSKILL("WWW1262",YDATEI)               KILL ^WWW1262(YM,YDATEI)
	DO ^WWWSKILL("WWW127",YDATEI)                KILL ^WWW127(0,YDATEI)
	DO ^WWWSKILL("WWW128",YDATEI)                KILL ^WWW128(YM,YDATEI)
	DO ^WWWSKILL("WWW1280",YDATEI)               KILL ^WWW1280(YM,YDATEI)
	DO ^WWWSKILL("WWW1281",YDATEI)               KILL ^WWW1281(0,YDATEI)
	DO ^WWWSKILL("WWW129",YDATEI)                KILL ^WWW129(0,YDATEI)
	DO ^WWWSKILL("WWW1291",YDATEI)               KILL ^WWW1291(0,YDATEI)
	DO ^WWWSKILL("WWW131",YDATEI)                KILL ^WWW131(0,YDATEI)
	DO ^WWWSKILL("WWW132",YDATEI)                KILL ^WWW132(0,YDATEI)
	DO ^WWWSKILL("WWW133",YDATEI)                KILL ^WWW133(0,YDATEI)
	DO ^WWWSKILL("TSErrorsOnScreenshots",YDATEI) KILL ^TSErrorsOnScreenshots(0,YDATEI)  ; SRBR014175
	DO ^WWWSKILL("AEPUserFootPrint",YDATEI)      KILL ^AEPUserFootPrint(0,YDATEI)       ; SRBR014175
	DO ^WWWSKILL("COMGridEditParameter",YDATEI)  KILL ^COMGridEditParameter(0,YDATEI)   ; SR17248
 	
	; SRBR014175
	do RemoveFromClass("WWWBENCH",YDATEI,3)	
	do RemoveFromClass("WWWDATEN",YDATEI,3)	
	do RemoveFromClass("WWWPAGE",YDATEI,2)	
	do RemoveFromClass("WWWRECALL",YDATEI,2)	
	do RemoveFromClass("WWWWV",YDATEI,3)	
 
	IF $get(VORG(2))="1" DO
	. SET MENU1=""
	. FOR  SET MENU1=$ORDER(^WWW004(0,MENU1)) QUIT:MENU1=""  DO
	. . SET MENU2=""
	. . FOR  SET MENU2=$ORDER(^WWW004(0,MENU1,MENU2)) QUIT:MENU2=""  DO
	. . . SET SATZ=$GET(^WWW004(0,MENU1,MENU2,1))
	. . . IF $PIECE(SATZ,Y,2)=YDATEI DO
	. . . . DO ^WWWSKILL("WWW004",MENU1_","_MENU2)
	. . . . KILL ^WWW004(0,MENU1,MENU2,1)
	. . . . KILL ^WWW0041(0,MENU1,MENU2,1)
	
	IF ($GET(YQ)=$$$NO) {
		if $$$ISOK(strStatus) {
			WRITE VORGX_" "_$$^WWWTEXT(42)," ",YCR,"<BR>"         ; "Deleted!"
		} else {
			write $$$Text(strStatus)," ",YCR,"<BR>"		//SR14915
		}
	}
	quit
	
	
RemoveFromClass(pstrClassName,pstrSubscript,pintSubscript)
	;-------------------------------------------------------------------------------
	; Remove from class pstrClassName its entries which have
	; pstrSubscript as key pintSubscript
	;
	; Params: 
	; 	pstrClassName  : class name
	; 	pstrSubscript  : key
	; 	pintSubscript  : key subscript position
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 13-Nov-2006	HeberB	SRBR014175: Revised code by JW: 
	; 14-Sep-2006	HeberB	SRBR014175:	Created
	;-------------------------------------------------------------------------------
 	new strClassName,strCompany,loopSubs,loop,strQuery,strKeys,YM
	
	set strClassName = "^"_pstrClassName
 	
 	set strCompany = ""
	if $$$WWW001SharedFile($get(^WWW001(0,pstrClassName,1))) {
		set strCompany = 0
	}
	set pintSubscript = pintSubscript + 1		// add company level
	
	set strQuery = strClassName_"(strCompany)"
	for {
		set strQuery = $query(@strQuery)
		quit:strQuery=""
 		
 		if $qsubscript(strQuery,pintSubscript) = pstrSubscript {
 			set YM      = $qsubscript(strQuery,1)     ; Must define YM, as WWWSKILL uses YM
 			set strKeys = $piece(strQuery,",",2,pintSubscript)
			
			do ^WWWSKILL(pstrClassName,strKeys)
			kill @(strClassName_"("""_YM_""","_strKeys_")")
		}
	}	
	quit
	
]]></Routine>
</Export>