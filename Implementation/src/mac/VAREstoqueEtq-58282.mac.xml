<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VAREstoqueEtq" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VAREstoqueEtq
#include COMSYS


OnBeforeFormConstruction 
	
	if $get(^VARTempEstoqueEtq(YM,YBED,1)) = "" { 
		set $piece(^VARTempEstoqueEtq(YM,YBED,1),Y,2) = YLOCATION                
	}
	quit
OnAfterSave

	new Item
	set Item = $get(VORG(1))
 	do GoToForm^COMUtilForm("VAREstoqueEtq",Item,,,,,) 	
	
	quit

OnAfterDataFields
	
	do MontaGrid
	
	quit
	


MontaGrid
	quit:($get(VORG(1)) = "")
	
	new filterItem, Item, Local, Storage, Quantidade, Lote, Validade, totalQty, isBlockedStorage,
		prefixStyle, posfixStyle, reasonBlocked, descBlocked, gMod, gRua, gPredio
	
	set filterItem = $get(VORG(1))
	if filterItem = "" set filterItem = YKEY
	
	set filterLocal = YLOCATION    // Define o local corrente	
	
	set filterLike = filterItem_"%"
	
	&sql(DECLARE Stock CURSOR FOR
		SELECT
			tonumber($piece(StockLocation,"-",1)) as Mod,
        	tonumber($piece(StockLocation,"-",2)) as Rua,
        	tonumber($piece(StockLocation,"-",3)) as Predio,
			LocationName,
			StockLocation
		INTO :gMod,:gRua,:gPredio,:Local,:Storage
		FROM INLP
		WHERE StockLocation like :filterLike
		  AND LocationName = :filterLocal
		  AND Physical is null	
		ORDER BY 1,2,3
	)
	
	&sql(open Stock)
    if (SQLCODE) {
		quit
    }
	
	set EnderecoAnterior = ""
	
	//Tabela
   	new lstHeader
 	set lstHeader = ""
  	set lstHeader = lstHeader_$listbuild("Endereço","Detalhe","Situação do Endereço")
	
	if $$Start^COMTable(lstHeader) {	
	
		for { &sql(fetch Stock)
				   quit:SQLCODE

			set Modulo = $piece(Storage,"-",1)
			set Rua    = $piece(Storage,"-",2)
			set Predio = $piece(Storage,"-",3)
			set Andar  = $piece(Storage,"-",4)
			set Apto   = $piece(Storage,"-",5)
		
			set Detalhe = "Módulo: "_Modulo_"&nbsp;&nbsp;-&nbsp;&nbsp;"
			set Detalhe = Detalhe_"Rua: "_Rua_"&nbsp;&nbsp;-&nbsp;&nbsp;"
			set Detalhe = Detalhe_"Prédio: "_Predio_"&nbsp;&nbsp;-&nbsp;&nbsp;"
			set Detalhe = Detalhe_"Andar: "_Andar_"&nbsp;&nbsp;-&nbsp;&nbsp;"
			set Detalhe = Detalhe_"Apto: "_Apto


			do NewLine^COMTable()
	    	do InsertCell^COMTable(Storage)
	    	do InsertCell^COMTable(Detalhe)

			
			set EnderecoBloqueado = ""
			set EnderecoBloqueado = $$checkIfBlockedStorage(Local,Storage)

			set EnderecoDesabilitado = ""
			set EnderecoDesabilitado = $$checkIfDisusedStorage(Local,Storage)


			if (EnderecoBloqueado = 1) {
				set preEstilo = ""
				set posEstilo = ""

				set RazaoBloqueio = $piece($get(^INLP(YM,Local,Storage,1)),Y,20)
				set DescBloqueio = ""
				if RazaoBloqueio '= "" {
					set DescBloqueio = $piece($get(^INPARA(YM,"LPSPERRGRUND",SPRACHE,RazaoBloqueio,1)),Y,1)
				}
				set preEstilo = "<font color=red><span title = 'Endereço indisponível. Motivo: "_DescBloqueio_"'>"
				set posEstilo = "</span></font>"
				
				do InsertCell^COMTable(preEstilo_"Bloqueado"_posEstilo)
			}
			elseif (EnderecoDesabilitado = 1) {
				set preEstilo = "<font color=orange><span title = 'Endereço indisponível. Motivo: Desabilitado'>"
				set posEstilo = "</span></font>"
				
				do InsertCell^COMTable(preEstilo_"Desabilitado"_posEstilo)
	
			}
			else{
				do InsertCell^COMTable("OK")	
			}
			
			do EndLine^COMTable()
			
 	
	  	}	;end for
	
		do Stop^COMTable()	
		
	}
	
	&sql(close Stock)	
		
	
	quit


checkIfBlockedStorage(pidLocal,pidStorage)
	if pidStorage = "" quit ""
	quit $piece($get(^INLP(YM,pidLocal,pidStorage,1)),Y,8)
	

checkIfDisusedStorage(pidLocal,pidStorage)
	if pidStorage = "" quit ""
	quit $piece($get(^INLP(YM,pidLocal,pidStorage,1)),Y,4)

	
Imprimir()
	;do Imprimir^VARTCIEstoqueEtq()
	
	set Filtro = $G(VORG(1))
	set Local = YLOCATION
	
	if Filtro = "" {
		quit
	}
	
	do RunReportEstoqueEtq^VARJasperRunReport(Filtro,Local)
	
	quit
	
]]></Routine>
</Export>