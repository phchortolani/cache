<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INDRPSUPPLY" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INDRPSUPPLY ;INDRPSUPPLY;FAN;BERECHTIGEN ÄNDERUNG SUPPLY;29.11.2001
 
#include COMSYS
#include INConst
 
	;
	;/------------------------------------------------------------------\
	;| Description of Function :
	;|		BERECHTIGEN ÄNDERUNG SUPPLY
	;|
	;| Inputs : 
	;|
	;|
	;| ByRef :
	;|
	;|
	;| Returns :
	;|
	;|
	;| History :
	;|
	;| FAN	29.11.2001
	;|
	;\------------------------------------------------------------------/
	;
 
ACCESS ;BERECHTIGUNG VOR SPEICHERN PRÜFEN ;pre- Save sift 
	NEW ACCESS,BETRIEB,SUPPLY,YFELDOLD
	SET BETRIEB=$PIECE($GET(YKEY),",",1)
	QUIT:BETRIEB=""
	SET SUPPLY=$PIECE($GET(YKEY),",",2)
	QUIT:SUPPLY=""
	SET YFELD=$GET(YFELD)
	;SET ACCESS=$GET(^INDRPPLANNER(YM,BETRIEB,YBED,1))
	SET ACCESS=$$^INDRPACCESS(YLOCATION,YBED)              ;BEC;25255;03.03.04;BERECHTIGUNGEN
	SET YFELDOLD=$GET(^INDRPSUPPLY(YM,BETRIEB,SUPPLY,1))
	;ggf. ÄNDERUNG IN ACCESS^INDRPDEMAND
	;ÄNDERUNG DES DATENSATZES ;alteration 
	IF YFELDOLD'="" DO
	. IF $PIECE(YFELD,Y,19)'=1 IF $PIECE(YFELDOLD,Y,19)=1 DO  ;SUPPLY FREIGEBEN
	. . IF $PIECE(ACCESS,Y,7)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5)) QUIT  ;KEINE BERECHTIGUNG ;no 
	. . SET $PIECE(YFELD,Y,20)=+$H
	. . SET $PIECE(YFELD,Y,21)=YBED
	. . QUIT
	. IF $PIECE(YFELD,Y,98)=1 IF $PIECE(YFELDOLD,Y,98)'=1 DO  ;SUPPLY GELÖSCHT
	. . IF $PIECE(ACCESS,Y,8)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5))  ;KEINE BERECHTIGUNG ;no 
	. . QUIT
	. IF $GET(Q)'=1 IF $PIECE(YFELD,Y,99)=1 IF $PIECE(YFELDOLD,Y,99)'=1 DO  QUIT  ;SUPPLY ABGESCHLOSSEN
	. . IF $PIECE(ACCESS,Y,9)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5))  ;KEINE BERECHTIGUNG ;no 
	. . QUIT
	. IF $GET(Q)'=1 IF $PIECE(YFELD,Y,70)=9 IF $PIECE(YFELDOLD,Y,70)'=9 DO  QUIT  ;AUF SIMULATION GESETZT ;upon simulation staid 
	. . IF $PIECE(YFELDOLD,Y,2)'="" SET Q=1  DO ^WWWINFO($$^WWWTEXT(144))  QUIT  ;NICHT MÖGLICH (DA AUFTRAGSBEZOGEN) ;Not potential 
	. . IF $PIECE(ACCESS,Y,13)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5))  ;KEINE BERECHTIGUNG ;no 
	. . QUIT
	. QUIT
	;NEUANLAGE DATENSATZ ;data record 
	;IF YFELDOLD="" DO ^WWWINFO($$^WWWTEXT(5))
	QUIT
 
 
	;-------------------------------------------------------------------------------
	; For an INDRPSUPPLY record, determines if an associated INTFR transfer record 
	; exists and is valid.
	;
	; Params: pYKEY - key of the INDRPSUPPLY record.
	;
	; ByRefs:
	;
	; Returns: none
	;
	; History:
	; 22-Apr-2006	PO		SR14428: Created
	;-------------------------------------------------------------------------------
CanShowTransfer(pidKey)
	new idSupplyLoc,idSupply,objSupply,idTransferKey,idTFR,idTFRLine,strStatus
	
	set strStatus = $$$OK
	
	set idSupplyLoc = $piece(pidKey,$$$COMMA,1)
	set idSupply = $piece(pidKey,$$$COMMA,2)
 
	if '$$$NoKey(idSupplyLoc) && '$$$NoKey(idSupply) {
		set objSupply = $get(^INDRPSUPPLY(YM,idSupplyLoc,idSupply,1))
 
		set idTransferKey = $$$INDRPSUPPLYTransfer(objSupply)
		set idTFR = $piece(idTransferKey,$$$COMMA,1)
		set idTFRLine = $piece(idTransferKey,$$$COMMA,2)
 
		if $$$NoKey(idTFR) || $$$NoKey(idTFRLine) {
			set strStatus = $$$Text("IN00426")  ;Record not created by Transfer Order form.
		}
	} else {
		set strStatus = $$$Text(32072)  ;Please Select A Data Record First.
	}
 
	$$$YQHandler(strStatus)
 
	quit
 
	;-------------------------------------------------------------------------------
	; From INDRPSUPPLY form, resolves the associated INTFR transfer ID and Line, 
	; and performs GoToGridOnForm to show the transfer.
	;
	; Params: pYKEY - key of the INDRPSUPPLY record.
	;
	; ByRefs:
	;
	; Returns: none.
	;
	; History:
	; 22-Apr-2006	PO		SR14428: Created
	;-------------------------------------------------------------------------------
ShowTransfer(pidKEY)
 
	new intTransferNo, intGridLine, objINDRPSUPPLY
	set objINDRPSUPPLY = $get(^INDRPSUPPLY(YM,$piece(pidKEY,$$$COMMA,1),$piece(pidKEY,$$$COMMA,2),1))
	set intTransferNo = $piece($$$INDRPSUPPLYTransfer(objINDRPSUPPLY),$$$COMMA,1)
	set intGridLine = $piece($$$INDRPSUPPLYTransfer(objINDRPSUPPLY),$$$COMMA,2)
 
	do GoToGridOnForm^COMUtilForm("INTFR",intTransferNo,1,,,,,intGridLine)
 
	quit
 
QtyForCurrentState(pobjSupply)
	;-------------------------------------------------------------------------------
	; Retrieve the relevant quantity for the current state of the supply. Or in other words
	; the most recently entered quantity.
	;
	; A supply has four states that are of interest here
	; 1. Created  - D5
	; 2. Picked   - D50
	; 3. Shipped  - D26
	; 4. Received - D67
	;
	; Params: pobjSupply - A supply record (INDRPSUPPLY)
	;
	; Returns: fltQuantity - The current/relevant quantity
	;
	; History:
	; 10-Jan-2007	PO		SR15366: Created
	;-------------------------------------------------------------------------------
	new fltReceivedQty,fltShippedQty,fltPickedQty,fltQuantity
 
	set fltReceivedQty = $piece(pobjSupply,Y,67) // Have not used macro as it is incorrectly named, $$$INDRPSUPPLYReceivedQuantity1... need to find out whether used in any SQL queries
	;set fltReceivedQty = ""
	if fltReceivedQty '= "" {
		set fltQuantity = fltReceivedQty
	} else {
		set fltShippedQty = $piece(pobjSupply,Y,26) // Have not used macro as it is incorrectly named, $$$INDRPSUPPLYReceivedQuantity... need to find out whether used in any SQL queries
		if fltShippedQty '= "" {
			set fltQuantity = fltShippedQty
			;write $$^WWWZAHL(fltShippedQty,0,$length($piece(fltShippedQty,".",2)))
		} else {
			set fltPickedQty = $$$INDRPSUPPLYPickedQuantity(pobjSupply)
			if fltPickedQty '= "" {
				set fltQuantity = fltPickedQty
				;write $$^WWWZAHL(fltShippedQty,0,$length($piece(fltPickedQty,".",2)))
			} else {
				set fltQuantity = $$$INDRPSUPPLYQuantity(pobjSupply)
				;write $$^WWWZAHL(fltQuantity,0,$length($piece(fltQuantity,".",2)))
			}
		}
	}
 
	quit fltQuantity
]]></Routine>
</Export>