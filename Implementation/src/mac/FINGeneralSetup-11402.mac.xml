<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGeneralSetup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGeneralSetup
	
#include COMSYS
#include COMConst
#include FINConst
	
	;-------------------------------------------------------------------------------
	; 13-Feb-2006	SteveS	Added SetupObject macro
	;-------------------------------------------------------------------------------
	
#define SetupObject	$get(^FINGeneralSetup(YM,YM,1))
 
OnAfterPrimaryKey(pYKEY,pYFELD)
    ;-------------------------------------------------------------------------------
    ; Code to run after the primary key has been created.
    ;
    ; Returns:
    ;
    ; History:
    ; 17-Jul-2006	JW		SR14832: Create free fields COMTempList
    ; 06-Jul-2005	PO		SR12705: Included FCVarPost
    ; 07-Feb-2005	shobby	YFELD variable passed as parameter.
    ; 17-Jan-2005	RPW		Created (SR10061)
    ;-------------------------------------------------------------------------------
	if $data(pYFELD)=1 {
		do CreateVarianceCOMTempList(+$$$FINGeneralSetupAllowInventoryModificatio(pYFELD))
		do CreateVarianceCOMTempList(+$$$FINGeneralSetupAllowInventoryModificatio(pYFELD),,"FCVarPost")
		do ListUsedFreeFields^WWW122D("FINGLAccount")		//SR14832
	}
	quit
 
 
OnAfterDataFields(pYSEITE)
	;-------------------------------------------------------------------------------
    ; Execute After Data Fields...
    ;	Show reversal schedule on journal tab
    ;	
    ; Returns:
    ;
    ; History:
    ; 30-May-2005	JW		Created SR12427
    ;-------------------------------------------------------------------------------
	if (pYSEITE=5) { 
		do AfterDataField^COMSchedule(1,"FINGLJournal","PostReversals^FINGLJournal()",$$$Text("Fin00818"))  ; Transaction Reversal Schedule
	}
	quit
 
	
CreateVarianceCOMTempList(pblnShowInventory,pblnAllowSplit=$$$NO,pstrName="VarPost")
    ;-------------------------------------------------------------------------------
    ; Create the Variance COMTempList. It allows hiding/showing of the Inventory
    ; item from the list.
    ;
    ; Returns:
    ;
    ; History:
    ; 14-Nov-2006	GRF		SR15064: Don't include "Supplier" on FC Variance lists
    ; 06-Jul-2005	PO		SR12705: Included FCVarPost
    ; 19-Jan-2005	Paul K	Used Enum Macros.
    ; 17-Jan-2005	RPW		Created (SR10061)
    ;-------------------------------------------------------------------------------
	new idCOMTempList,objCOMTempList
	
	kill ^COMTempList(YM,YUSER,pstrName)
 
	if pstrName="VarPost" {
		set $$$COMTempListField1(objCOMTempList)=$$GetEnumDescription^COMUtils("FINAPVARIANCEPOST",$$$EnumFINAPVARIANCEPOSTExpense)
		set idCOMTempList=YUSER_","_pstrName_","_$$$EnumFINAPVARIANCEPOSTExpense
		do Save^FINSYS("COMTempList",idCOMTempList,objCOMTempList,1)
	} elseif pstrName="FCVarPost" {
		set $$$COMTempListField1(objCOMTempList)=$$GetEnumDescription^COMUtils("FINAPVARIANCEPOST",$$$EnumFINAPVARIANCEPOSTFCExpense)
		set idCOMTempList=YUSER_","_pstrName_","_$$$EnumFINAPVARIANCEPOSTFCExpense
		do Save^FINSYS("COMTempList",idCOMTempList,objCOMTempList,1)
	}
 
	if (pstrName="VarPost") && pblnShowInventory {
		set $$$COMTempListField1(objCOMTempList)=$$GetEnumDescription^COMUtils("FINAPVARIANCEPOST",$$$EnumFINAPVARIANCEPOSTInventory)
		set idCOMTempList=YUSER_","_pstrName_","_$$$EnumFINAPVARIANCEPOSTInventory
		do Save^FINSYS("COMTempList",idCOMTempList,objCOMTempList,1)
	} elseif pstrName="FCVarPost" {
		set $$$COMTempListField1(objCOMTempList)=$$GetEnumDescription^COMUtils("FINAPVARIANCEPOST",$$$EnumFINAPVARIANCEPOSTFCInventory)
		set idCOMTempList=YUSER_","_pstrName_","_$$$EnumFINAPVARIANCEPOSTFCInventory
		do Save^FINSYS("COMTempList",idCOMTempList,objCOMTempList,1)
	}
	
	; SR15064
	;set $$$COMTempListField1(objCOMTempList)=$$GetEnumDescription^COMUtils("FINAPVARIANCEPOST",$$$EnumFINAPVARIANCEPOSTSupplier)
	;set idCOMTempList=YUSER_","_pstrName_","_$$$EnumFINAPVARIANCEPOSTSupplier
	;do Save^FINSYS("COMTempList",idCOMTempList,objCOMTempList,1)
	
	if pstrName'="FCVarPost" {
		set $$$COMTempListField1(objCOMTempList)=$$GetEnumDescription^COMUtils("FINAPVARIANCEPOST",$$$EnumFINAPVARIANCEPOSTSupplier)
		set idCOMTempList=YUSER_","_pstrName_","_$$$EnumFINAPVARIANCEPOSTSupplier
		do Save^FINSYS("COMTempList",idCOMTempList,objCOMTempList,1)
	}
	
	if (pstrName="VarPost") && pblnAllowSplit {
		set $$$COMTempListField1(objCOMTempList)=$$GetEnumDescription^COMUtils("FINAPVARIANCEPOST",$$$EnumFINAPVARIANCEPOSTSplit)
		set idCOMTempList=YUSER_","_pstrName_","_$$$EnumFINAPVARIANCEPOSTSplit
		do Save^FINSYS("COMTempList",idCOMTempList,objCOMTempList,1)
	}
 
	quit
		
GetGLEffectiveDateType()
    ;-------------------------------------------------------------------------------
    ; Get the Type of the GL Effective Date.
    ;
    ; Params:
    ;
    ; Returns:
    ; 	intGLEffectiveDateType		The type of GL Effective Date
    ;
    ; History:
    ; 22-Jul-2005	RobertW	SR11983: Use the new function to get the setup object
    ; 29-Jun-2005	RobertW	SR12230: Created
    ;-------------------------------------------------------------------------------
	new objSetup,intGLEffectiveDateType
	
	set intGLEffectiveDateType=0
	
	set objSetup=$$$SetupObject
	if objSetup'="" {
		set intGLEffectiveDateType=$$$FINGeneralSetupGLEffectiveDate(objSetup)
	}
	
	quit intGLEffectiveDateType
	
GetExpireMinutes()
    ;-------------------------------------------------------------------------------
    ; Gets the number of minutes the GL Effective Date will expire.
    ;
    ; Params:
    ;
    ; Returns:
    ; intExpiry		The number of minutes for the entry to expire
    ;
    ; History:
    ; 22-Jul-2005	RobertW		SR11983: Use the new function to get the setup object
    ; 29-Jun-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
	new objSetup,intExpiry
	
	set intExpiry=0
	
	set objSetup=$$$SetupObject
	if objSetup'="" {
		set intExpiry=+$$$FINGeneralSetupUserSessionDateTimeoutmin(objSetup)
	}
	
	; Need to multiply by 60 as $h format is in seconds
	quit intExpiry*60
	
IsGLEffectiveDateInvoiceDate()
    ;-------------------------------------------------------------------------------
    ; Determines if we are checking for Invoice Date or the others
    ;
    ; Params:
    ;
    ; Returns:
    ; Boolean	True if we are using the Invoice Date
    ;
    ; History:
    ; 01-Jul-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
	quit $$GetGLEffectiveDateType()=3
	
UseAccrualReversal()
    ;-------------------------------------------------------------------------------
    ; Determines if we are using Accrual Reversal or not.
    ; 
    ; FIXME : The logic in the form ("Turn off Accrual Reversal") is the opposite of
    ;         the tag and the Parameter Name (AccrualReversal)
    ; Form Help : "When unchecked, the system will assume that no Receipt Accrual
    ;              has been posted to the General Ledger and therefore no accrual
    ;              reversal is required"					<GRF>
    ; 
    ; The default is No.
    ;
    ; Params:
    ;
    ; Returns:
    ; Boolean: Whether we are using the accrual or not
    ;
    ; History:
    ; 22-Jul-2005	RobertW		SR11983: Created
    ;-------------------------------------------------------------------------------
	quit +$$$FINGeneralSetupAccrualReversal($$$SetupObject)
 
SplitSupPaysByDepartment() 
    ;-------------------------------------------------------------------------------
    ; Determines whether supplier payments are to be split by department
    ;
    ; Returns: Whether supplier payments are to be split by department
    ;
    ; History:
    ; 13-Sep-2005	PO		SR12943: Created
    ;-------------------------------------------------------------------------------
	quit +$$$FINGeneralSetupSuppaysplitbydepartment($$$SetupObject)
	
	
TrialBalancePeriodType()
	/*------------------------------------------------------------------------------
	; Determine the type of period to use for trial balances
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns: idType
	;
	; History:
	; 10-Feb-2006	Steve S		SR13474: Created
	;-----------------------------------------------------------------------------*/
	new idType
 	
	set idType=$$$FINGeneralSetupPeriodType($$$SetupObject)
	if idType="" set idType=$$$EnumFINSYSPERIODTYPECalenderMonth
	
	quit idType
	
CanStorePieces()
	;-------------------------------------------------------------------------------
	; Hide Store Pieces button if appropriate fields not filled in.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Jul-2006	JW		SR14832: Created
	;-------------------------------------------------------------------------------
	new objSetup
	
	set objSetup = $$$SetupObject
	if ($$$FINGeneralSetupAccountDelimiter(objSetup)="")    ||
	   ($$$FINGeneralSetupStoreAccountPieces(objSetup)="")   {
		set Q=2
	}
	quit
	
StorePieces()
	;-------------------------------------------------------------------------------
	; Store pieces of all GL accounts (bg job)
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Jul-2006	JW		SR14832: Created
	;-------------------------------------------------------------------------------
	new idLog
	
	do StartLog^COMLog($$$Text("Fin01067"),.idLog)  ;Storing pieces of all General Ledger Accounts
	do JobWrapper^COMUtilJob("StorePiecesAllAccounts^FINGLAccount("""_idLog_""")",YUSER)
	
	set %("VAR","YBUTTON") = ""					//SR14832: Don't want button info passed through
	do GoToForm^COMUtilForm("COMMsg",idLog)
	
	quit
	
	
PrintingAccess()
	;-------------------------------------------------------------------------------
	; Determine if the current user has access to multi-print cheques
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns: blnAccess
	;
	; History:
	; 22-Sep-2006	Steve S		SR13944: Created
	;-------------------------------------------------------------------------------
	new blnAccess,strAccess
 
	set strAccess=$$$FINGeneralSetupPrintingAccess($$$SetupObject)
	set blnAccess=$$UserHasAccess^COMUtils(YBED,strAccess)
 
	quit blnAccess
	
]]></Routine>
</Export>