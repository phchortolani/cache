<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvChargeDivision" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvChargeDivision
	
#include COMSYS
#include FINConst
	
OnBlur(pCOL="",pROW="",pYFELD="")
    ;-------------------------------------------------------------------------------
    ; To calculate on blur of amount cells.
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Feb-2005	JW		Created
    ;-------------------------------------------------------------------------------
	new newAmount,oldAmount,total,apportioned
	
	set total=$$$FINAPInvChargeAmountTaxEx($$$GRIDYFELDContainer)
	set oldAmount = $$$FINAPInvChargeDivisionAmount(pYFELD)
	set newAmount = $$GetAmount(pYFELD,total)
	
	if (oldAmount-newAmount)'=0 {
		
		set $$$FINAPInvChargeDivisionAmount(pYFELD) = newAmount
		
		set apportioned = $piece($$GetYMFELDContainer^COMGridEdit31Interface(),Y,4)
		set apportioned = apportioned - oldAmount + $fnumber(newAmount,"",2)
		
		do UpdateApportioned(apportioned,total)
	}
	quit
	
	
OnAfterDataFields(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Runs after data fields.
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Feb-2005	JW		Created
    ;-------------------------------------------------------------------------------
	new apportioned,total
	
	if $get(pYKEY)'="" {
		set apportioned = $$CalculateApportioned^FINAPInvCharge(pYKEY)
		
		set total = $$$FINAPInvChargeAmountTaxEx($$$GRIDYFELDContainer)
		do UpdateApportioned(apportioned,total)
	}
	quit
	
	
UpdateApportioned(apportioned=0,total=0)
	;-------------------------------------------------------------------------------
    ; Update the apportioned field
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Jul-2005	JW		SR12615: Use ResetFieldFormat
    ; 16-Mar-2005	JW		Created
    ;-------------------------------------------------------------------------------
	do UpdateHeaderField^COMGridEdit31Interface("M4",apportioned)
	
	if (apportioned-total=0) {
		do UpdateFieldFormat^COMUtils("YFINAPInvChargeSplitM4.style","backgroundColor","green")
	
	} else {
		do ResetFieldFormat^COMUtils("YFINAPInvChargeSplitM4.style","backgroundColor")
	}
	quit
	
	
GetAmount(pYFELD="",total=0)
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; History:
    ; 11-Mar-2005	PO		SR11349 use FCZero macro
    ; 25-Feb-2005	JW		Created
    ;-------------------------------------------------------------------------------
	new amount
	
	if '$$$FCZero($$$FINAPInvChargeDivisionDollar(pYFELD)) {
		set amount = $$$FINAPInvChargeDivisionDollar(pYFELD)
	
	} elseif +$$$FINAPInvChargeDivisionPercent(pYFELD)'=0 {
		set amount = $$$FCRound($$$FCMult(total,($$$FINAPInvChargeDivisionPercent(pYFELD)/100)))
	
	} else {
		set amount = 0
	}
	quit amount
	
	
DivideEvenly()
    ;-------------------------------------------------------------------------------
    ; 
    ; Returns: nil
    ; 
    ; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
    ; 28-Feb-2005	JW		Created
    ;-------------------------------------------------------------------------------
	new arrGrid,numAccounts,idInvoice,idLine,idDiv,objLine,diff,total,amount
	
	$$$GRIDGetContents(.arrGrid)
	
	set idInvoice = $order(arrGrid(""))
	if idInvoice'="" {
		set idLine = $order(arrGrid(idInvoice,""))
		quit:idLine="" ""
		
		set objLine = $$$GRIDYFELDContainer
		set total   = $$$FINAPInvChargeAmountTaxEx(objLine)
		
		set numAccounts = 0
		set idDiv = ""
		for {
			set idDiv = $order(arrGrid(idInvoice,idLine,idDiv))
			quit:idDiv=""		
			
			set numAccounts = numAccounts + 1
		}
		quit:numAccounts=0
		
		set amount = $$$FCRound($$$FCDivd(total,numAccounts))
		
		for {
			set idDiv = $order(arrGrid(idInvoice,idLine,idDiv))
			quit:idDiv=""		
			
			set $$$FINAPInvChargeDivisionDollar(arrGrid(idInvoice,idLine,idDiv)) = amount
			set $$$FINAPInvChargeDivisionAmount(arrGrid(idInvoice,idLine,idDiv)) = amount
			set $$$FINAPInvChargeDivisionPercent(arrGrid(idInvoice,idLine,idDiv)) = ""
		}
		
		set diff = $$$FCSub(total,$$$FCMult(numAccounts,amount))
		if ('$$$FCZero(diff)) {
			// Add difference to last line
			set idDiv = $order(arrGrid(idInvoice,idLine,idDiv),-1)
			set $$$FINAPInvChargeDivisionDollar(arrGrid(idInvoice,idLine,idDiv)) = $$$FCAdd(amount,diff)
			set $$$FINAPInvChargeDivisionAmount(arrGrid(idInvoice,idLine,idDiv)) = $$$FCAdd(amount,diff)
		}
		do UpdateApportioned(total,total)
	}
	$$$GRIDSetContents(.arrGrid)
	quit
	
	
GetDefaultValues()
    ;-------------------------------------------------------------------------------
    ; Return the default FINSYSAccountGroupLine percents to the grid
    ;
    ; Returns:
    ;
    ; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
    ; 01-Mar-2005	JW		SR11405: Created
    ;-------------------------------------------------------------------------------
	new arrGrid,apportioned,idInvoice,idLine,idDiv,objLine,total,amount,idgroup,objDiv,idGroup
	
	$$$GRIDGetContents(.arrGrid)
	
	set idInvoice = $order(arrGrid(""))
	if idInvoice'="" {
		set idLine = $order(arrGrid(idInvoice,""))
		
		set objLine = $$$GRIDYFELDContainer
		set total   = $$$FINAPInvChargeAmountTaxEx(objLine)
		set idGroup = $$$FINAPInvChargeAccountGroup(objLine)
		
		set apportioned = 0
		set idDiv = ""
		for {
			set idDiv = $order(arrGrid(idInvoice,idLine,idDiv))
			quit:idDiv=""		
			
			set objDiv = ""
			
			set objLine = $get(^FINSYSAccountGroupLine(YM,idGroup,idDiv,1))
			set $$$FINAPInvChargeDivisionPercent(objDiv) = $$$FINSYSAccountGroupLinePercent(objLine)
			set amount = $$GetAmount^FINAPInvChargeDivision(objDiv,total)
			set $$$FINAPInvChargeDivisionAmount(objDiv) = amount
			
			set arrGrid(idInvoice,idLine,idDiv) = objDiv
			
			set apportioned = apportioned + $fnumber(amount,"",2)
		}
		do UpdateApportioned(apportioned,total)
	}
	
	$$$GRIDSetContents(.arrGrid)
	
	quit
	
]]></Routine>
</Export>