<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARWMSVisualizaRua" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARWMSVisualizaRua
#include COMSYS

PrintVisualizacaoRua(pidLocal,pidModulo,pidRua,pModo="Produto")
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Exibe a visualização da rua, mostrando os endereços contidos nesta
 	;   
    ; Chamado por:
    ;	Página VARWMSVisualizaRua.csp
    ; 
    ; Histórico:
    ;	31-Jan-2011	 Gustavo	Alterado - melhorias de performance
    ;	14-Set-2011	 Gustavo	Alterado - criação do modo de visualização por palete,
    ;									   caso o local seja do tipo que controla TSU
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------
	// Melhorias de Performance
	
	; Limpando o Cache
	kill ^VARTempWMSCacheEndereco(YBED)
	kill ^VARTempWMSCacheQtyColunas(YBED)
	
	; Constrói cache com endereços que contém palete. Esse cache substitui a execução da rotina
	; isAnyPalletInStorage^VARWMSUtils, que estava sendo executada 1 vez para cada endereço.  */	
	if (pModo = "Palete") {
		do CacheEnderecosComPaleteRua^VARWMSUtils(pidLocal,pidModulo,pidRua)
	}
	
	// Montando a visualização da rua		
	do BuildLadoRuaDetalhe(pidLocal,pidModulo,pidRua,"IMPAR",pModo)
		
	; Divisória entre as ruas	
	&html< <div class='divisoriaRua'></div> >
	
	do BuildLadoRuaDetalhe(pidLocal,pidModulo,pidRua,"PAR",pModo)
	
	quit

BuildLadoRuaDetalhe(pidLocal,pidModulo,pidRua,pLado,pModo="Produto")
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Constrói os endereços de armazenagem de um dos lados da rua, seguinte a lógica
    ;   Andar -> Prédio -> Apartamento.
 	;   
    ; Chamado por:
    ;	PrintVisualizacaoRua^VARWMSVisualizaRua
    ; 
    ; Histórico:
    ;	31-Jan-2011	 Gustavo	Atualizado para melhorias de performance
    ;	14-Set-2011  Gustavo	Atualizado para diferenciar modo Produto x modo Palete
    ;	02-Set-2011  Gustavo	Atualizado para tratar endereços desabilitados (disused)
    ; 	07-Jul-2011	 Gustavo	Criado		
    ;-------------------------------------------------------------------------------
	quit:( (pidLocal = "") || (pidModulo = "") || (pidRua = "") || (pLado = "") )	

	new strListaPredios, qtyColunas, qtyAndares, numTabela, cntAndar, cntPredio, numPredio,
		qtyAptosAndar, cntApto, idStorage, isStorageUsed, isStorageBlocked, userLockedObject,
		isStorageDisabled, paramQtyAptosAndar
	
	set paramQtyAptosAndar = $piece($get(^VAREnderecos(YM,pidLocal,pidModulo,1)),Y,5)
	
	set strListaPredios = $$getListaPredios^VARWMSUtils(pidLocal,pidModulo,pidRua,pLado,"RUA")
	quit:(strListaPredios = "")

	set qtyColunas = $$getQtyColunas^VARWMSUtils(pidLocal,pidModulo,pidRua,strListaPredios)
	quit:(qtyColunas = "")
	
	/* Melhorias de Performance		
	Constrói cache com a quantidade de colunas para reutilizar na construção da esteira */
	set ^VARTempWMSCacheQtyColunas(YBED,pLado) = qtyColunas	
	
	//Utiliza como base o prédio 1
	set qtyAndares = $$getQtyAndares^VARWMSUtils(pidLocal,pidModulo,pidRua,1)
	quit:(qtyAndares = "")
	
	if pLado = "IMPAR" set numTabela = 1
	if pLado = "PAR"   set numTabela = 2
	
	&html<
	<div style='display:inline-table;font-size:10px;'>
		<table cellspacing='0' cellpadding='0' id='table#(numTabela)#'>
	>
	
	//Andares
	for cntAndar = qtyAndares:-1:1 {		
		
		if ( (pLado = "IMPAR") && (cntAndar = qtyAndares) ) {
			do BuildTopoEsquerda(qtyAndares,qtyColunas)		
		}
		
		if ( (pLado = "PAR") && (cntAndar = qtyAndares) ) {
			do BuildTopoDireita(qtyAndares,qtyColunas)	
		}		

		&html<
			<tr>
		>
		
		//Prédios
		for cntPredio = 1:1:$length(strListaPredios,";") {
			set numPredio = $piece(strListaPredios,";",cntPredio)
			continue:(numPredio = "")
			
			;Caso já tenha o parâmetro definido, fica mais rápida a consulta			
			if (paramQtyAptosAndar > 0) {			
				set qtyAptosAndar = paramQtyAptosAndar			
			} else {
				;Calcula o número de apartamentos utilizando como base o primeiro andar
				set qtyAptosAndar = $$getQtyAptosPredioAndar^VARWMSUtils(pidLocal,pidModulo,pidRua,numPredio,1)	
			}
			
			//Apartamentos
			for cntApto = 1:1:qtyAptosAndar {
			
				set idStorage = pidModulo_"-"_pidRua_"-"_numPredio_"-"_cntAndar_"-"_cntApto	
				
				if (pModo = "Palete") {					
					set isStorageUsed = $data(^VARTempWMSCacheEndereco(YBED,idStorage))
				   ;set isStorageUsed = $$isAnyPalletInStorage^VARWMSUtils(pidLocal,idStorage)
				} else {
					set isStorageUsed = $$IsStorageUsed^INBESTNULL(pidLocal, idStorage)	
				}
					
				set isStorageBlocked = $$checkIfBlockedStorage^VARStock(pidLocal,idStorage)
				set isStorageDisabled = $$checkIfDisabledStorage^VARStock(pidLocal,idStorage)
				
				//Caso tenha mais de um apartamento por andar
				if (qtyAptosAndar > 1) {
									
					if (cntApto = 1) {
						if pLado = "IMPAR" {
							write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-top:1px solid black;background-color:#FFFFFF;"
						} else {
							write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-left: 1px solid black; border-top:1px solid black;background-color:#FFFFFF;"
						}
					
					} elseif ( (cntApto > 1) && (cntApto < qtyAptosAndar) ) {
						write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-top:1px solid black;background-color:#FFFFFF;"
					
					} elseif (cntApto = qtyAptosAndar) {
						
						if pLado = "IMPAR" {
							write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-right:1px solid black;border-top:1px solid black;background-color:#FFFFFF;"
						
						} elseif pLado = "PAR" {
							write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-top:1px solid black;background-color:#FFFFFF;"
						}
					} else {
						write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-right:1px solid black;border-top:1px solid black;background-color:#FFFFFF;"
					}
				
				//Caso tenha somente um apartamento no andar
				} else {
			 		if pLado = "IMPAR" {			 			
			 			write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-right:1px solid black;border-top:1px solid black;background-color:#FFFFFF;"
			 			
			 		} elseif pLado = "PAR" {
				 		write "<td align='center' id='"_idStorage_"' width='40' height='40' style='border-left:1px solid black;border-top:1px solid black;background-color:#FFFFFF;"
			 		}
				}
				
				do DesenhaBordas(cntAndar, pLado, numPredio, cntApto)
				
				//Caso o endereço esteja vazio				
				if (isStorageUsed = $$$NO) {
					do BuildEnderecoVazio(pidLocal,idStorage,pModo,isStorageDisabled,isStorageBlocked)

				} else {
					
					if (isStorageBlocked = $$$YES) {
						write "background-image:url("_YGIF_"boxBloqueado.png);' class='mark single'>"
					
					} elseif ( $$isStorageSetForTransaction^VARWMSTransaction(pidLocal,idStorage) ) {
						write "background-color: black;' class='single'>"
					
					} else {					
						write "' class='single'>"
					}
												
					//Caso o objeto tenha sido arrastado para outro endereço e não esteja processado ainda...
					if ($$isObjectSetForTransaction^VARWMSTransaction(pidLocal,idStorage) = $$$YES) {
						
						// ...procura por objetos de outros endereços que tenham sido arrastados para este (temporários)
						if ($$isStorageSetForTransaction^VARWMSTransaction(pidLocal,idStorage) = $$$YES) {
																											
							set sourceStorage = $$getStorageSetForTransaction^VARWMSTransaction(pidLocal,idStorage)
				
							do AddStorageContent(pidLocal,sourceStorage,pModo)
							do CreateStorageDiv(pidLocal,sourceStorage,pModo)
						}
					
					//Caso contrário insere o conteúdo real do endereço
					} else {					
						set userLockedObject = $$whoLockedObject^VARWMSTransaction(pidLocal,idStorage,YBED)
					
						do AddStorageContent(pidLocal,idStorage,pModo,isStorageBlocked,userLockedObject)				
						do CreateStorageDiv(pidLocal,idStorage,pModo,isStorageBlocked,userLockedObject)
					}
				}
		
				&html< </td> >
			}
		}			
		&html< </tr> >
	}
	
	&html< 	
		</table>
	</div>
	>

	quit
	
BuildTopoEsquerda(pqtyAndares,pqtyColunas)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Monta o topo a esquerda da tabela que mostra os endereços de armazenagem.
 	;   
    ; Chamado por:
    ;	BuildLadoRuaDetalhe^VARWMSVisualizaRua
    ; 
    ; Histórico:
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------
	quit:( (pqtyAndares = "") || (pqtyColunas = "") )
	
	new cntAndarBkgLeft
	
	&html<
	<tr height='10'>
		<td class='mark' valign='top' rowspan='7'>
			<img src='#(YGIF)#lateral_topo_e.png' width='18' height='30' alt='' /><br />
	>
	
		for cntAndarBkgLeft = 1:1:(pqtyAndares-1) {
			&html<
			<img src='#(YGIF)#lateral_meio_e.png' width='18' height='41' alt='' /><br /> 
			>
		}
		
	&html<
			<img src='#(YGIF)#lateral_base_e.png'  width='18' height='29' alt='' /><br />
		</td>
		<td class='mark' colspan='#(pqtyColunas-1)#' style='font-size:15px;background-color:#797979;'>&nbsp;</td>
		<td class='mark' style=background-image:url('#(YGIF)#borde_topo_e.png');background-repeat:no-repeat;>&nbsp;</td>
	</tr>
	>
	
	quit
	
BuildTopoDireita(pqtyAndares,pqtyColunas)	
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Monta o topo a direita da tabela que mostra os endereços de armazenagem.
 	;   
    ; Chamado por:
    ;	BuildLadoRuaDetalhe^VARWMSVisualizaRua
    ; 
    ; Histórico:
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------
	quit:( (pqtyAndares = "") || (pqtyColunas = "") )
	
	new cntAndarBkgRight
	
	&html<		
	<tr height='10'>
		<td class='mark' style=background-image:url('#(YGIF)#borde_topo_d.png');background-repeat:no-repeat;>&nbsp;</td>
		<td class='mark' colspan='#(qtyColunas-1)#_"' style='font-size:15px;background-color:#797979;'>&nbsp;</td>
		<td class='mark' valign='top' rowspan='7'>
			<img src='#(YGIF)#lateral_topo_d.png'  width='18' height='30' alt='' /><br />
	>
		
		for cntAndarBkgRight = 1:1:(qtyAndares-1) {
			&html<
			<img src='#(YGIF)#lateral_meio_d.png'  width='18' height='41' alt='' /><br />
			>
		}

	&html<
			<img src='#(YGIF)#lateral_base_d.png'  width='18' height='29' alt='' /><br />
		</td>
	</tr>
	>
		
	quit	
	
DesenhaBordas(pcntAndar, pLado, pnumPredio, pcntApto)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Caso esteja no primeiro andar, desenha a borda no chão.
    ;	Caso esteja no endereço mais a esquerda da tabela da direita, desenha a borda
 	;   
    ; Chamado por:
    ;	BuildLadoRuaDetalhe^VARWMSVisualizaRua
    ; 
    ; Histórico:
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------
	if (pcntAndar = 1) {
		write "border-bottom: 1px solid black;"
	}

	if ( (pLado = "PAR") && (pnumPredio = 2) && (pcntApto = 1) ) {
		write "border-left: 1px solid black;"	
	}	
	
	quit
	
AddStorageContent(pidLocal,pidEndereco,pModo="Produto",pisStorageBlocked=0,pUserLockedObject="")
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Quando um endereço tem produtos, esta função imprime na célula do endereço
    ;   de armazenagem a caixa que representa os produtos dentro do endereço. O
    ;   endereço pode ter produtos temporários, ou seja, que foram arrastados para
    ;	uma outra célula, mas a movimentação ainda não foi processada pelo usuário.
    ; 
    ; Histórico:
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------	
	quit:( (pidLocal = "") || (pidEndereco = "") )

	new idCategAlerta, imgBox, bkgColor, searchItem, isSearchItemInStorage, strCategAlerta
	
	if (pModo = "Palete") {
		set strCategAlerta = $piece($get(^VARTempWMSCacheEndereco(YBED,pidEndereco)),Y,1)
		set idCategAlerta  = $piece(strCategAlerta,";",1)
   	   ;set idCategAlerta = $$getCategAlertaProdEnd^VARWMSUtils(pidLocal,pidEndereco,pModo)
	
	} else {
		set idCategAlerta = $$getCategAlertaProdEnd^VARWMSUtils(pidLocal,pidEndereco,pModo)		
	}	
	
	set imgBox   	  = $$getImgBox^VARWMSUtils(idCategAlerta,pModo)
	set bkgColor 	  = $$getBkgColorAlerta^VARWMSUtils(idCategAlerta,pidLocal,pidEndereco,pModo)
	
	if (pisStorageBlocked = $$$YES) {
    	&html< 
    	<div id='#(pidEndereco)#' style="padding-top:5px;opacity:0.80;-moz-opacity: 0.80;filter: alpha(opacity=80);"> 
    	>
	} elseif (pUserLockedObject '= "") {
		&html< 
    	<div id='#(pidEndereco)#' style="padding-top:5px;opacity:0.50;-moz-opacity: 0.50;filter: alpha(opacity=50);">
    	>
 
	} else {
		&html<
		<div id='#(pidEndereco)#' class="drag">
		>
	}

	&html<		
				<!-- É necessário retornar falso no onclick para que este não conflite com o click de arrastar-e-saltar do drag'n'drop -->
			    <a id='#(pidEndereco)#Link' href="VARWMSVisualizaStorage.csp?local=#(pidLocal)#&endereco=#(pidEndereco)#&modo=#(pModo)#&bloqueio=#(pisStorageBlocked)#&situacao=#(pUserLockedObject)#" onclick="return false;" ondblclick="return ShowStorage(this.href,'#(pidEndereco)#Div','#(pidEndereco)#Link');">
				<img style="background-color:#(bkgColor)#" src='#(YGIF)##(imgBox)#' alt='' border='0' width='30' height='30' />
			</a>
		</div>
	>
	
	quit
	
BuildEnderecoVazio(pidLocal,idStorage,pModo="Produto",isStorageDisabled,isStorageBlocked)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Desenha a célula com o endereço vazio. Caso haja algum produto temporário,
    ;	ou seja, arrastado de uma célula para outra e ainda não processado, ele será
    ;	mostrado.
    ; 
    ; Histórico:
    ;	02-Set-2011	 Gustavo	Atualizado para tratar endereços desabilitados (disused)
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------	
	
	new descMotivoBloq, sourceStorage
	
	//Só escreve o endereço se o registro existir na INLP
	if $data(^INLP(YM,pidLocal,idStorage)) {
		
		if (isStorageDisabled = $$$YES) {			
			write "background-color:#999999;' class='mark' title='Endereço "_idStorage_" desabilitado'>"
		}
		
		elseif (isStorageBlocked = $$$YES) {							
			set descMotivoBloq = $$getMotivoEndBloqueado^VARWMSUtils(pidLocal,idStorage)						
			write "background-image:url("_YGIF_"boxBloqueado.png);' class='mark' title='Endereço "_idStorage_" (Bloqueado - "_descMotivoBloq_")'>"
						
		} else {

			if ($$isStorageSetForTransaction^VARWMSTransaction(pidLocal,idStorage) '= $$$YES) {							
				write "' class='single' title='Endereço "_idStorage_"'>"
							
				} else {
								
				write "background-color: black;' class='single' title='Endereço "_idStorage_"'>"
								
				set sourceStorage = $$getStorageSetForTransaction^VARWMSTransaction(pidLocal,idStorage)
				
				do AddStorageContent(pidLocal,sourceStorage,pModo)
				do CreateStorageDiv(pidLocal,sourceStorage,pModo)
			}							
		}
						
	} else {
		write "background-color:#ff8f8f;' class='mark' title='Endereço inexistente'>"
	}
	
	quit

CreateStorageDiv(pidLocal,pidEndereco,pModo="Produto",pIsStorageBlocked="",pUserLockedObject="")
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Cria o DIV (exibido no onDblClick) com os produtos existentes em um endereço
    ;	de armazenagem.
    ; 
    ; Histórico:
    ;	02-Fev-2011	 Gustavo	Incluído gif de loading para indicar ao usuário que
    ;							os dados estão carregando, tendo em vista que agora
    ;							o conteúdo das caixinhas são carregados utilizando Ajax.
    ;	31-Jan-2011	 Gustavo	Atualizado para melhorias de performance - a consulta
 	;							foi transferida para a VARWMSVisualizaStorage.csp.  						
    ;	14-Set-2011  Gustavo	Atualizado para diferenciar modo Produto x modo Palete
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------
	quit:( (pidLocal = "") || (pidEndereco = "") )
	
	&html< <div id='#(pidEndereco)#Div' style='display:none; background-color:white; border:1px solid black; font-size:10px;'>
		   <img src='#(YGIF)#loading2.gif' />
		   </div>
	>
	
	quit
	
	
PrintAreaTransferencia(pidLocal,pidModulo,pidRua,pModo="Produto")
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Exibe a esteira (área de transferência), onde é possível inserir os produtos
    ;   e movimentar entre outras ruas / módulos.
	;    
    ; Chamado por:
    ;	Página VARWMSVisualizaRua.csp
    ; 
    ; Histórico:
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------
	quit:( (pidLocal = "") || (pidModulo = "") || (pidRua = "") )
		
	new widthEsteira, idEnderecoRef, idEnderecoDestino, categAlerta, strCategAlerta, bkgColor, imgBox
	
	set widthEsteira = $$getWidthEsteira^VARWMSUtils(pidLocal,pidModulo,pidRua)
	
	&html<
	<table cellspacing='0' cellpadding='0'>
		<tr>
			<td class='mark esteira-esq' style='background-image:url(#(YGIF)#esteira_final_e.png)' width='27'>&nbsp;</td>
			<td align='center' valign='top' id='AreaTransferencia' class='esteira-meio' style='background-image: url(#(YGIF)#esteira_meio.png)' nowrap='nowrap' height='48' width='#(widthEsteira)#' width='auto'>
	>

		  	//Exibindo objetos na área de transferência
		  	$$$Order4(^VARTempWMSTransaction,YM,YBED,pidLocal,idEnderecoRef)
			  
		  		set idEnderecoDestino = $piece($get(^VARTempWMSTransaction(YM,YBED,pidLocal,idEnderecoRef)),Y,1)
				continue:(idEnderecoDestino '= "AreaTransferencia")

				if (pModo = "Palete") {
					set strCategAlerta = $piece($get(^VARTempWMSCacheEndereco(YBED,idEnderecoRef)),Y,1)
					set categAlerta = $piece(strCategAlerta,";",1)
   	   			   ;set CategAlerta = $$getCategAlertaProdEnd^VARWMSUtils(pidLocal,idEnderecoRef,pModo)
		
				} else {
					set categAlerta = $$getCategAlertaProdEnd^VARWMSUtils(pidLocal,idEnderecoRef,pModo)		
				}	
				
				set bkgColor    = $$getBkgColorAlerta^VARWMSUtils(categAlerta,pidLocal,idEnderecoRef,pModo)
				set imgBox      = $$getImgBox^VARWMSUtils(categAlerta,pModo)
			
				&html<
					<div id='#(idEnderecoRef)#' class="drag" style="display:inline;border:0;">
						<a id='#(idEnderecoRef)#Link' ondblclick="Popup.show('#(idEnderecoRef)#Div','#(idEnderecoRef)#Link','below adjacent-right',{'constrainToScreen':true});return false;" href="#">
							<img style="background-color:#(bkgColor)#" src='#(YGIF)##(imgBox)#' alt='' border='0' width='30' height='30' />
						</a>
					</div>
				>
					
				do CreateStorageDiv(pidLocal,idEnderecoRef,pModo)
	
		  $$$End
		  
	&html<
			</td>
			
			<td class='mark esteira-dir' style='background-image:url(#(YGIF)#esteira_final_d.png)' width='27'>&nbsp;</td>
		</tr>
	</table>
	>
	
	quit
	
PrepareTempVariables(YKEY, YAUSWAHL, YBED)		
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Seta as variáveis utilizadas na navegação.
    
    ; Chamado por:
    ;	Form VARWMSVisualizaModulo e VARWMSVisualizaRua
    ; 
    ; Histórico:
    ; 	07-Jul-2011  Gustavo	Criado
    ;-------------------------------------------------------------------------------
	kill ^VARTempWMSVisualiza(YM, YBED)
	set $piece(^VARTempWMSVisualiza(YM,YBED),Y,1) = YKEY
	set $piece(^VARTempWMSVisualiza(YM,YBED),Y,2) = YAUSWAHL
	
	quit
]]></Routine>
</Export>