<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMUtilError" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMUtilError
    ;-------------------------------------------------------------------------------
    ; Common Utilities for Error processing
    ; 
    ; See also : 
    ; 	COMUtilDate		Date/Time Utilities
    ; 	COMUtilStr		String Manipulation
    ; 	COMUtilGlo		Global Manipulation
    ; 	COMUtilForm		@netManager Form Utilities
    ; 	COMUtilClass	@netManager Class Utilities
	; 
	; History:  
	; 30-Mar-2007	GRF		SR12293: Moved GetDataBaseAdministrator to COMUtilUser
	; 23-Feb-2005	GRF		Created; moved some routines from COMUtils
    ;-------------------------------------------------------------------------------
#include COMConst
#include WWWConst
#include COMSYS
	
#define LogR(%1,%2)		;
#define LogRx(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^COMUtilError("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	
ReturnError(plstParams="")
    ;-------------------------------------------------------------------------------
	; Error log tracking for front end processes
	; Creates a Info error message on screen
	; 
	; plstParams		a strStatus error message
	; 
	; History:
	; 13-Dec-2006	JW&SH	SR****: Switched condition.  '$$$InHyperEvent is incorrect.
	; 10-Aug-2006	JW		SR13594: Added Alert when in hyperevent
	; 07-Sep-2005	shobby	SR12761/SR13438: Ignore if in a hyperevent, will crash with Javascript errors.
	; 						The error should still be reported during the submit.
	; 09-Jun-2005	PK/PO	Return JS if hyper-event. Reverted
	; 05-Jan-2003	Paul K	Created.
	;-------------------------------------------------------------------------------
	;if '$get(%("%KEY","HYPEREVENT")) {
	
	; TODO : WWWINFO already checks for $$$InHyperEvent so don't need to check again here.
	;        $$$Alert includes $$DecodeError call so entry in WWWINFO will convert list to
	;        string and then check that string doesn't need further conversion.
	;        Should have clear definition of what form parameter should be in and process
	;        accordingly - possibly separate entry points.                <GRF>
	
	$$$LogR("ReturnError",plstParams)
	
	if $$$InHyperEvent {          //SR13594
		$$$Alert(plstParams)      //SR13594
	
	} else {
		do:$io'["|ITNT|" ^WWWINFO($$DecodeError(plstParams))   ; FIXME : WWWINFO tests $$$InHyperEvent and performs $$$Alert
	}
	quit
	
	
RaiseError(plstParams="",pstrForm,pidKey)
    ;-------------------------------------------------------------------------------
	; Error log tracking for back end processes, creates a reminder text for all
	; system and database administators
	; 
	; History:
	; 30-Mar-2007	GRF		SR12293: Moved GetDataBaseAdministrator to COMUtilUser
	; 29-Jun-2005	JW		Moved null checks to top
    ;-------------------------------------------------------------------------------
	new strText,lstUsers,numUsers,lngUserLoop,strUser
	
	if ($get(pstrForm)'="") && ($get(pidKey)'="") {
		do RemoveError(pstrForm,pidKey)
		set strText  = $$DecodeError(plstParams)
	
		set lstUsers = $$GetDataBaseAdministrator^COMUtilUser()        ; SR12293
		set numUsers = $listlength(lstUsers)
	
		for lngUserLoop=1:1:numUsers {
			set strUser = $listget(lstUsers,lngUserLoop)
			set ^WWWWV(YM,strUser,$piece($horolog,",",1),pstrForm,pidKey,1) = $piece($horolog,",",1)_Y_$piece($horolog,",",2)_Y_""_Y_strText
		}
	}
	quit
	
	
RemoveError(pstrForm,pidKey)
    ;-------------------------------------------------------------------------------
    ; Removes user errors from the @Net error log.
    ; removes all reminders for all users for a given form and key
    ; Returns:
    ;
    ; History:
	; 30-Mar-2007	GRF		SR12293: Moved GetDataBaseAdministrator to COMUtilUser
    ; 29-Jun-2005	JW		Added null checks. Removed blnFound completely
    ; 30-Mar-2004	Paul K	Removes all instances, not just the first one.
    ;-------------------------------------------------------------------------------
	new dteErrorDate,lstUsers,strUser,lngUserLoop,numUsers
	
	quit:($get(pstrForm)="")||($get(pidKey)="")
	
	set dteErrorDate = ""
	;set blnFound     = $$$NO
	set lstUsers     = $$GetDataBaseAdministrator^COMUtilUser()      ; SR12293
	set numUsers     = $listlength(lstUsers)
	
	for lngUserLoop=1:1:numUsers {
		set strUser = $listget(lstUsers,lngUserLoop)
		for {
			set dteErrorDate = $order(^WWWWV(YM,strUser,dteErrorDate))
			quit:dteErrorDate=""
			
			kill ^WWWWV(YM,strUser,dteErrorDate,pstrForm,pidKey,1)
			
			;if $data(^WWWWV(YM,strUser,dteErrorDate,pstrForm,pidKey,1)) {
			;	set blnFound=$$$YES
			;	kill ^WWWWV(YM,strUser,dteErrorDate,pstrForm,pidKey,1)
			;}
			;quit:blnFound
		}
	}
	quit
	
	
DecodeError(plstParams="",pblnDecode=$$$NO,pidLang="")
    ;-------------------------------------------------------------------------------
	; Decodes a listbuild language text list into the appropriate string
	; 
	; N.B. don't pass through more than 9 extra params
	;
	; Params:
	; plstParams 	List or String 	contains a list of: Error No,Param1,Param2,...Param9
	;
	; History:
	; 09-Sep-2008	shobby	BR014979: Don't allow pidLang to change the system wide setting.
	; 05-Jan-2007	GRF		SR15338: $$IsList will invalidly treat strings composed of
	; 						string and list as a list.  This will cause problems if
	; 						$list... functions are used.
	; 03-Jan-2007	GRF		SR15338: Recognise possible leading zero-space
	; 22-Sep-2005	Steve S	Allow override language
	; 24-Jun-2005	RobertW	SR12690: Removed this as it's causing HTML issues with \'s.
	; 05-Feb-2004	PK		Try and convert the text if not a list.
	; 15-May-2003	PK		Checked to see if error is a list before decoding.
	; 15-Jan-2003	PK		Created(Commented)
	;-------------------------------------------------------------------------------
	new numParams,strText,lngLoop,strParam
	
	$$$DecomposeStatus(plstParams)   ; strip zero-space prefix   SR15338
	
	; Temp? code to handle older $$$NO_$listbuild(idErrorNo) strings   ; SR15338
	if $extract(plstParams,1)="0" set plstParams = $extract(plstParams,2,$length(plstParams))
    
    if $get(SPRACHE)="" do ^WWWVAR
    if (pidLang'="") {
	    new SPRACHE               ; BR014979
    	set SPRACHE = pidLang
	}
	
	if $$IsList^COMUtils(plstParams) {
		set numParams	= $listlength(plstParams)
		set strParam	= $listget(plstParams,1)
		set strText		= $$^WWWTEXT(strParam)  ; if param passed through, get message from WWWTEXT
		
		for lngLoop=1:1:(numParams-1) {  				; loop through the extra params, replacing the %1 etc with the param
			for {
				quit:$find(strText,"%"_lngLoop)=0       					; quit if can't find any more occurances
				quit:$find($listget(plstParams,lngLoop+1),"%"_lngLoop)'=0	; quit if param contains the string "%"
				
				set strText = $piece(strText,"%"_lngLoop,1)_$listget(plstParams,lngLoop+1)_$piece(strText,"%"_lngLoop,2,99)
			}
		}
		set plstParams = $listget(plstParams,1)
		
	} else {
	; 	NOTE : Can return spurious error messages if already expanded
	; 	       since space delimited sub-strings are checked for a
	; 	       matching idError : e.g. "Line Number 1 requires..."
	; 	       matches ^WWW009(0,1,"EN",1) = "User-Identification"
		if pidLang="" {
			set strText = $$^WWWTEXT(plstParams)
		} else {
			set strText = $$^WWWTEXT(plstParams,,,pidLang)	
		}
	}
	
	; 01-Jul-2005	RobertW		SR12690: Removed this line it's not needed
	;if pblnDecode set strText=$zcvt(strText,"o","JS")
	
	quit strText
	

DecodeCacheError(pobjStatus="",pblnIncludeLastError=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Decode an internal cache status string
    ;
    ; e.g. where pobjStatus is created by :
    ;  set pobjStatus = $system.Status.Error(5001,"Invalid StateId entered")
    ; err(1) will contain "ERROR #5001: Invalid StateId entered"
    ; 
    ;   Can have nested errors by using $system.Status.AppendStatus
    ;   e.g. 
    ;  set sc  = $system.Status.Error(5001,"Message1")
 	;  set sc2 = $system.Status.Error(5001,"Message2")
 	;  set sc  = $system.Status.AppendStatus(sc,sc2)
    ;   
    ;   DecodeCacheError returns just the first error
    ;  ERROR #5001: Message1
    ; 
    ; Returns:
    ;
    ; History:
    ; 03-Aug-2012 shobby	   SR18078: Corrected duplication of error message when there
    ;								is only one error.
    ; 18-Aug-2010 Pablo G/PPP  SR17505: Added Other Error Messages
    ; 07-Jul-2005 Steve S  SR10421: Created
 	;-------------------------------------------------------------------------------
	new arrErr,idLastErr,strLastError
	
	do $System.Status.DecomposeStatus(pobjStatus,.arrErr)
	 
	set strLastError = ""
	 
	//SR17505
	if (pblnIncludeLastError) {
		set idLastErr = $order(arrErr(""),-1)
		;18078 if idLastErr {
		if idLastErr>1 {									;18078 
			if $get(arrErr(idLastErr,"param",1))'="" {
				set strLastError = " - "_$get(arrErr(idLastErr,"param",1))
			} else {
				set strLastError = " - "_$get(arrErr(idLastErr,"caller"))
			}
		}
	}
	quit $select($get(arrErr(1))'="":arrErr(1)_strLastError,1:$get(arrErr))
	
		
ISStatusToDLStatus(sc,pblnFullMessage=$$$YES)
	;-------------------------------------------------------------------------------
	; Translate an Intersystems Status to a Disclinc Status
	;
	; e.g. set sc = $system.Status.Error(5395,"alPKG","TxName","Subr^COMRoutine()")
	; 
	; will return an error sc of the form;
	;   When strStatus is "0 "_$lb($lb(code,param,param,....),$lb(code,param,param,....),...)
	;                                ^^^^ 1st Error ^^^^         ^^^^ 2nd Error ^^^^       etc.
	; 
	; 
	; This subroutine will return the first error as a DiscLinc strStatus with the text as
	; 
	; ERROR #5395: Invalid routine to call from class 'alPKG' to method 'TxName' via label 'Subr^COMRoutine()'
	;---------------------------------------
	;
	; Inputs:
	;		sc					Cache standard status
	;		pblnFullMessage		What to include in strStatus
	;			$$$NO  : Uses just strXXX from strError = "ERROR #"_strAAA_": "_strXXX
	;			$$$YES : Uses whole strError
	;
	; Returns:
	;
	; History:
	; 30-Jul-2013	SCR		CORE-194: Always remove "ERROR #5001"
    ; 20-Sep-2010 	PPP 	SR17505:1 Bug Fix, Pass parameter through to DecodeCacheError
    ; 18-Aug-2010 	Pablo G/PPP SR17505: Added Other Error Messages
	; 24-Sep-2008	GRF		SR15903: Missing () around 2nd clause (removed redundant
	; 							 not zero check); standard variable naming;
	; 							 clarify; early exit.
	; 15-Sep-2008	HQN		SR15903: Added option to strip default object error code
	; 08-May-2008	GRF		SR15717: Prepend "0 " with MakeStatus
	; 10-Jul-2007	RPW		SR15571: Created
	;-------------------------------------------------------------------------------
	new strError,strStatus
	
	if sc=$$$YES quit $$$YES         ; no error - shortcut
	
	set strStatus = ""
	//set strError  = $$DecodeCacheError(sc,$$$YES)	//SR17505:1
	set strError  = $$DecodeCacheError(sc,pblnFullMessage)	//SR17505:1
	
	if strError'="" {
		if (pblnFullMessage=$$$NO) && $find(strError,"ERROR #") {
			set strError = $extract(strError,$find(strError,": ",$length("ERROR #")),$length(strError))
		}
		set:strError["#5001:" strError	= $piece(strError,"#5001:",2,99) ; CORE-194
		set strStatus = $$$MakeStatus("WWW00070",strError)     ; "%1"
	}
	quit strStatus


ISStatusToDLStatusAllMessages(sc)
	;-------------------------------------------------------------------------------
	; Translate All Intersystems Status to a Disclinc Status
	;
	; Inputs:
	;		sc					Cache standard status
	;
	; Returns:
	;
	; History:
	; 21-Jul-2010	PPP		SR17465: Created
	;-------------------------------------------------------------------------------
	new arrErr,intCnt,strError,strStatus
	
	if sc=$$$YES quit $$$YES         ; no error - shortcut
	
	set (strStatus,strError) = ""
	do $System.Status.DecomposeStatus(sc,.arrErr)

	set intCnt = 0
	for {
		set intCnt = $order(arrErr(intCnt))
		quit:intCnt=""
		
		set strError = strError_" <"_$get(arrErr(intCnt,"param",1))_"> "
	}

	if strError'="" set strStatus = $$$MakeStatus("WWW00070",strError)     ; "%1"
	quit strStatus
	
]]></Routine>
</Export>