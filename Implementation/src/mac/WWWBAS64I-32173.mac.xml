<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWBAS64I" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWBAS64I    ; (RT) Cache WebLink Developer: Base64 Encode/Decode ; 07 Jan 2000  4:50 PM  ; Compiled February 21, 2000 09:11:04  ; Compiled February 9, 2005 13:03:08
	; Version 4.3
	; +--------------------------------------------------------+
	; | Copyright 1986-2000 by InterSystems Corporation,       |
	; | Cambridge, Massachusetts, U.S.A.                       |
	; | All rights reserved.                                   |
	; |                                                        |
	; | Confidential, unpublished property of InterSystems.    |
	; |                                                        |
	; | This media contains an authorized copy or copies       | ;upon 
	; | of material copyrighted by InterSystems and is the     |
	; | confidential, unpublished property of InterSystems.    |
	; | This copyright notice and any other copyright notices  |
	; | included in machine readable copies must be reproduced | ;within 
	; | on all authorized copies.                              |
	; +--------------------------------------------------------+
	;----------------------------------------------------------------------------------
	; CHANGE MARKS:
	;   RT (14 Mar 2000) - Decode modified to work with pop3 functionality ;reg.tn. 
	;----------------------------------------------------------------------------------
	QUIT
	
IN(IN) ;EINKOMMENDE ZEICHEN DECODIEREN ;sign 
	NEW OUT
	KILL ^%work($j)
	SET ^%work($J,"Attachments",1,1)=$GET(IN)
	SET ^%work($J,"Attachments",1)=$GET(IN)
	DO decode(1)
	SET OUT=$GET(^%work($J,"Files",1,1))
	KILL ^%work($j)
	QUIT OUT
	
OUT(OUT) ;AUSGEHENDE ZEICHEN CODIEREN ;sign 
	NEW IN,in,outlines
	SET in(1)=$GET(OUT)
	DO encode(.in)  ;   %wldbas64(.in)
	SET IN=$GET(outlines(1))
	QUIT IN    
	
decode(%attachno) ;
	;decode BASE64 input string -- see RFC 2045 for specification
	; input is in ^%work($J,"Attachments")
	; output is in ^%work($J,"Files")
	new char64,i,j,bits,quad,f,c,buff,end,outs,lineno,olineno,%d
	KILL ^%work($J,"Files")
	SET %d=^%work($J,"Attachments",%attachno)
	;S %type=$P(%d,"~",1),%file=$P(%d,"~",2)
	SET ^%work($J,"Files",%attachno)=%d
	SET buff=$GET(^%work($J,"Attachments",%attachno,1))
	IF buff="" QUIT ""
	set char64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	set outs="",end=0,lineno=0,olineno=0
	
dec1 ;
	SET lineno=lineno+1
	SET buff=^%work($J,"Attachments",%attachno,lineno)
	
dec2 ;
	set quad=$EXTRACT(buff,1,4)
	IF $LENGTH(quad)<4,'end DO wmore GOTO dec2
	IF $LENGTH(quad)=0,end GOTO decx
	SET buff=$EXTRACT(buff,5,$LENGTH(buff))
	do dec3 IF f<0 GOTO decx
	IF $LENGTH(outs)>75 DO
	. SET olineno=olineno+1
	. SET ^%work($J,"Files",%attachno,olineno)=outs
	. SET outs=""
	GOTO dec2
	
decx ;
	if c="=" do
	. set j=j-1,f=0
	. if j=2 set outs=outs_$char(bits\16)
	. else  set outs=outs_$char(bits\1024,bits\4#256)
	SET olineno=olineno+1
	SET ^%work($J,"Files",%attachno,olineno)=outs
	QUIT
	
dec3 ;
	;N bits ;,j
	;f i=1:4:$l(ins) s quad=$e(ins,i,i+3) q:'$l(quad)  d  q:f<0
	set bits=0
	for j=1:1:$length(quad) do  quit:f<0
	. set c=$extract(quad,j),f=$find(char64,c)-2
	. if f>-1 set bits=bits*64+f
	if f>-1 set outs=outs_$char(bits\65536,bits\256#256,bits#256)
	QUIT
	
wmore  ; add next line onto buffer
	NEW line
	
wm2  ;
	SET lineno=lineno+1
	IF lineno>$ZPREVIOUS(^%work($J,"Attachments",%attachno,"")) SET end=1 QUIT  ; no more left
	SET line=$GET(^%work($J,"Attachments",%attachno,lineno))
	IF line="" GOTO m2
	SET buff=buff_line
	QUIT
	
more ; add next line onto buffer
	NEW line
	
m2 SET lineno=lineno+1
	IF lineno>$ZPREVIOUS(inlines("")) SET end=1 QUIT  ; no more left
	SET line=$GET(inlines(lineno))
	IF line="" GOTO m2
	SET buff=buff_line
	QUIT
	
encode(inlines) ;
	;encode BASE64 input string -- see RFC 2045 for specification
	new char64,i,j,triple,bits,buff,end,outs,lineno,olineno
	KILL outlines
	SET buff=$GET(inlines(1))
	IF buff="" QUIT ""
	set char64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	set outs="",end=0,lineno=0,olineno=0
	
enc1 SET lineno=lineno+1
	SET buff=inlines(lineno)
	
enc2 set triple=$EXTRACT(buff,1,3)
	IF $LENGTH(triple)<3,'end DO more GOTO enc2
	IF $LENGTH(triple)=0,end GOTO encx
	SET buff=$EXTRACT(buff,4,$LENGTH(buff))
	do enc3 ;I f<0 G encx
	IF $LENGTH(outs)>75 DO
	. SET olineno=olineno+1
	. SET outlines(olineno)=outs
	. SET outs=""
	GOTO enc2
	
encx ;
	SET olineno=olineno+1
	SET outlines(olineno)=outs
	QUIT
	
enc3 ;
	set bits=0
	for j=1:1:$length(triple) set bits=bits*256+$ascii(triple,j)
	
	; FIXME : use braces to guarantee true if/else?  need to understand intention
	
	if $length(triple)=3 set outs=outs_$extract(char64,bits\262144+1)_$extract(char64,bits\4096#64+1)_$extract(char64,bits\64#64+1)_$extract(char64,bits#64+1)
	else  if $length(triple)=2 set bits=bits*4,outs=outs_$extract(char64,bits\4096+1)_$extract(char64,bits\64#64+1)_$extract(char64,bits#64+1)_"="
	else  set bits=bits*16,outs=outs_$extract(char64,bits\64+1)_$extract(char64,bits#64+1)_"=="
	quit
	
encfil(file,%sessid) ;
	;encode BASE64 input string -- see RFC 2045 for specification
	; Encode direct from a file
	; First transfer file to work global - ^%wldwork(%sessid,lineno)
	NEW ok
	SET %sessid=+$GET(%sessid)
	SET ok=$$GET^%wldfile(file,%sessid)
	; Now encode it into ^%wldwork2(%sessid,lineno)
	new char64,i,j,triple,bits,buff,end,outs,lineno,olineno
	KILL ^%wldwork2(%sessid)
	SET buff=$GET(^%wldwork(%sessid,1))
	IF buff="" QUIT
	set char64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	set outs="",end=0,lineno=0,olineno=0
	
encf1 SET lineno=lineno+1
	SET buff=^%wldwork(%sessid,lineno)
	
encf2 set triple=$EXTRACT(buff,1,3)
	IF $LENGTH(triple)<3,'end DO moref GOTO encf2
	IF $LENGTH(triple)=0,end GOTO encfx
	SET buff=$EXTRACT(buff,4,$LENGTH(buff))
	do enc3 ;I f<0 G encx
	IF $LENGTH(outs)>75 DO
	. SET olineno=olineno+1
	. SET ^%wldwork2(%sessid,olineno)=outs
	. SET outs=""
	GOTO encf2
	
encfx ;
	SET olineno=olineno+1
	SET ^%wldwork2(%sessid,olineno)=outs
	QUIT
	
moref ; add next line onto buffer
	NEW line
	
mf2 SET lineno=lineno+1
	IF lineno>$ZPREVIOUS(^%wldwork(%sessid,"")) SET end=1 QUIT  ; no more left
	SET line=$GET(^%wldwork(%sessid,lineno))
	IF line="" GOTO mf2
	SET buff=buff_line
	QUIT
]]></Routine>
</Export>