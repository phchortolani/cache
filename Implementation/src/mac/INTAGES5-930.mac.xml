<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INTAGES5" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INTAGES5
#include COMSYS
#include INConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		TAGESABSCHLUSS - Subroutines split from INTAGES
	;
	; History :
	; 27-Nov-2006	JW		BR014285: Item group change
	; 25-Aug-2006	GRF		SR12027: quits
	; 02-Nov-2005	GRF		SR13791: Subroutines split due to excessive size
	;-------------------------------------------------------------------------------
	
SORTIMENT ;AUFBAU DER SORTIMENTSDATEI ;the
	
	/* BR014285: Not using this structure anymore. INITEMGROUPS is not used either.
	
	DO  ;WARENGRUPPEN /ITEMGROUP IN TEMPFILE;TYBD;18,11,2004;26812;
	. NEW WG,TRENN,STRUCT
	. ;
	. SET TRENN="."
	. SET STRUC=""
	. FOR  SET STRUC=$ORDER(^WWWSTRUKTUR(0,YM,STRUC)) QUIT:STRUC=""  DO
	. . SET STRUC(1)=$GET(^WWWSTRUKTUR(0,YM,STRUC,1))
	. . IF $PIECE(STRUC(1),Y,1)="INPARA" DO
	. . . IF $FIND($PIECE(STRUC(1),Y,2),"WARENGRUPPE") DO
	. . . . IF $PIECE(STRUC(1),Y,3)'="" DO
	. . . . . SET TRENN=$EXTRACT($TRANSLATE($PIECE($GET(^WWW100(0,"STRUKTUR",SPRACHE,$PIECE(STRUC(1),Y,3),1)),Y,1),"X"))
	. ;
	. IF TRENN="" SET TRENN="."
	. SET WG=""
	. FOR  SET WG = $ORDER(^INITEMGROUPS(YM,SPRACHE,WG)) QUIT:WG=""  DO
	. . IF '$DATA(^INPARA(YM,"WARENGRUPPE",SPRACHE,WG,1)) KILL ^INITEMGROUPS(YM,SPRACHE,WG)
	. ;
	. SET WG=""
	. FOR  SET WG = $ORDER(^INPARA(YM,"WARENGRUPPE",SPRACHE,WG)) QUIT:WG=""  DO
	. . SET WG(1)  = $PIECE($GET(^INPARA(YM,"WARENGRUPPE",SPRACHE,WG,1)),Y,1)
	. . SET WG(2)  = WG
	. . SET WG(4)  = "^INITEMGROUPS("_YM_","_""""_SPRACHE_""""_","
	. . FOR WG(3)=1:1 QUIT:$PIECE(WG(2),TRENN,WG(3))=""  SET WG(4)=WG(4)_""""_$PIECE(WG(2),TRENN,WG(3))_""""_","
	. . SET WG(4)  = WG(4)_"1)"
	. . SET @WG(4) = WG(1)
	
	*/
	
	KILL ^INSORTIMENT(YM)
	QUIT:$PIECE($GET(^INVORG(YM,YM,1)),Y,197)=1  ;to much in Itemfile no runthru INART;tybd;1,11,2004;26670
	
	;NEW SORT,ART,SPRACHE,YCHAR
	NEW SORT,ART,YCHAR
	
	;SET SPRACHE="" FOR  SET SPRACHE=$ORDER(^INPARA(YM,"SORTIMENT",SPRACHE)) QUIT:SPRACHE=""  DO
	DO
	. SET SORT=""
	. FOR  SET SORT=$ORDER(^INPARA(YM,"SORTIMENT",SPRACHE,SORT)) QUIT:SORT=""  DO
	. . SET SORT(0)   = $TRANSLATE(SORT,",;-_?/+*#':<>",".............")  ;ALLES PUNKT
	. . SET SORT("T") = $PIECE($GET(^INPARA(YM,"SORTIMENT",SPRACHE,SORT,1)),Y,1)
	. . ;SET SORT(9)  = "^INSORTIMENT("_""""_YM_""""_","_""""_SPRACHE_""""
	. . SET SORT(9)   = "^INSORTIMENT("_""""_YM_""""
	. . FOR SORT(1)=1:1 SET SORT(2)=$PIECE(SORT(0),".",SORT(1)) QUIT:SORT(2)=""  DO
	. . . SET SORT(9)=SORT(9)_","_""""_SORT(2)_""""
	. . ;
	. . SET SORT(8)  = SORT(9)_")"
	. . SET @SORT(8) = SORT("T")
	. . SET ART=""
	. . FOR  SET ART=$ORDER(^INARTs(YM,6,SORT,ART)) QUIT:ART=""  DO
	. . . SET YCHAR="-" IF $FIND(ART,YCHAR) IF $PIECE(ART,YCHAR,1)'="" IF $DATA(^INART(YM,$PIECE(ART,YCHAR,1))) QUIT  ;OBERTEIL DER VARIANTEN ;the 
	. . . SET YCHAR="." IF $FIND(ART,YCHAR) IF $PIECE(ART,YCHAR,1)'="" IF $DATA(^INART(YM,$PIECE(ART,YCHAR,1))) QUIT  ;OBERTEIL DER VARIANTEN ;the 
	. . . SET SORT("T")=$GET(^INART(YM,ART,1))
	. . . SET $PIECE(SORT("T"),Y,4)=ART  ;ARTIKELNUMMER IN DATENSATZ FÜR ANZEIGE ;within data record to Show 
	. . . SET SORT(8)=SORT(9)_","_""""_ART_""""_")"
	. . . SET @SORT(8)=SORT("T")
	. . . ;
	. . . ;ARTIKELVARIANTEN
	. . . FOR ART1=ART_"-",ART_"." FOR  SET ART1=$ORDER(^INART(YM,ART1)) QUIT:ART1=""  QUIT:$EXTRACT(ART1,1,$LENGTH(ART))'=ART  DO
	. . . . IF '$FIND(ART1,".") IF '$FIND(ART1,"-") QUIT  ;KEIN TEIL ;no part 
	. . . . SET SORT("T")=$GET(^INART(YM,ART1,1))
	. . . . SET SORT(0)=$TRANSLATE(ART1,",;-_?/+*#':<>",".............")  ;ALLES PUNKT
	. . . . SET $PIECE(SORT("T"),Y,4)=ART1  ;ARTIKELNUMMER IN DATENSATZ FÜR ANZEIGE ;within data record to Show 
	. . . . SET SORT(8)=SORT(9)
	. . . . FOR SORT(1)=1:1 SET SORT(2)=$PIECE(SORT(0),".",SORT(1)) QUIT:SORT(2)=""  DO
	. . . . . SET SORT(8)=SORT(8)_","_""""_SORT(2)_""""
	. . . . ;
	. . . . SET SORT(8)=SORT(8)_")"
	. . . . SET @SORT(8)=SORT("T")
	
	QUIT
	
BESTELLMENGE(YKEY,YLAST)
	;-------------------------------------------------------------------------------
	;	ERRECHNEN DES VERBRAUCHS/BESTELLMENGE     	CALCULATE CONSUMPTION/ORDERMIX
	;	
	;  YKEY = EINSPRUNG VON ARTIKEL-LIEFERANTENKONDITION
	;  YLAST:
	;     YKEY=""     = ALLE NEU RECHNEN
	;     YKEY'=""
	;  				0 = NUR DURCHSCHNITT
	;  				1 = LETZTEN WOCHEN UND MONATE
	;  				2 = LETZTEN MONATE
	;  				3 = LETZTEN WOCHEN
	;  				
	;  BERECHNUNG DER VERKAUFSZAHLEN DER LETZTEN WOCHEN UND MONATE IST WIEDER
	;  ABGESCHALTET, DA EINE BERECHNUNG
	;  MIT BITMAP SUCHE BEI ANFORDERUNG ERFOLGEN KANN, EIN SPEICHERN IM DATENSATZ
	;  IST NICHT MEHR NÖTIG ;FIS;18.01.05;27153
	;
	;  COMPUTATION OF THE SALES FIGURES OF THE LAST WEEKS AND MONTHS IS AGAIN
	;  SWITCHED OFF, THERE A COMPUTATION; WITH BIT-MAP SEARCH DURING REQUIREMENT
	;  SUCCESSES KNOWS, A STORING IN THE DATA RECORD IS NO MORE NECESSARY
	;  
	; History :
	; 03-Jun-2010	GRF		SR17146: call "DD.MM.YYYY" wrapper for WWWDATE1
	; 25-Aug-2006	GRF		SR12027: Doco; quits; !=>||
	; 18.01.2005	FIS		27153
	; 28.05.2001	FIS
	;-------------------------------------------------------------------------------
	
	;---------------------------------------
	;	D51			$$$INVORGLastCalculationLeavingAv()       *** RESET HERE ***
	;	D197		$$$INVORGProceedDailyFileWithNoIte()
	;	
	;	YFELD		objINARTK
	;---------------------------------------
	QUIT:$PIECE($GET(^INVORG(YM,YM,1)),Y,197)=1  ;to much in Itemfile no runthru INART;tybd;1,11,2004;26670
	
	NEW ART,LIEF,MENGE,SUM,MONTHAVG,DAYAVG,KALK
	
	SET YKEY	 = $GET(YKEY)
	SET ART		 = $PIECE(YKEY,",",1)
	SET LIEF	 = $PIECE(YKEY,",",2)
	SET YLAST	 = $GET(YLAST)
	SET MONTHAVG = ""
	
	IF YKEY="" DO
	. IF +$PIECE($GET(^INVORG(YM,YM,1)),Y,51)'<($HOROLOG-29) QUIT  ;FOR KALK="M1","M2","M3","W1","W2","W3"  SET KALK(KALK)="" QUIT  ;CALCULATE LAST MONTH AND WEEK SALE FOR ALL ITEMS
	. ;FOR KALK="M1","M2","M3","W1","W2","W3","XX"  SET KALK(KALK)=""  ;CALCULATE LAST SALE AND AVG. SALE FOR ALL ITEMS
	. FOR KALK="XX"  SET KALK(KALK)=""  ;CALCULATE AVG. SALE FOR ALL ITEMS
	. SET $PIECE(^INVORG(YM,YM,1),Y,51)=+$HOROLOG  ;SAVE CALCULATION DATE (RUNS EVERY 30 DAYS ONLY)
	
	;IF YKEY="" FOR KALK="M1","M2","M3","W1","W2","W3","XX"  SET KALK(KALK)=""  ;CALCULATE LAST SALE AND AVG. SALE FOR ALL ITEMS
	IF YKEY'="" IF YLAST=1  FOR KALK="M1","M2","M3","W1","W2","W3"  SET KALK(KALK)=""  ;CALCULATE LAST MONTH AND WEEK SALE FOR SINGLE ITEM
	IF YKEY'="" IF YLAST=2  FOR KALK="M1","M2","M3"                 SET KALK(KALK)=""  ;CALCULATE LAST MONTH SALE FOR SINGLE ITEM
	IF YKEY'="" IF YLAST=3  FOR KALK="W1","W2","W3"                 SET KALK(KALK)=""  ;CALCULATE LAST WEEKS SALE FOR SINGLE ITEM
	IF YKEY'="" IF +YLAST=0 FOR KALK="XX"                           SET KALK(KALK)=""  ;CALCULATE AVERAGE SALE FOR SINGLE ITEM
	
	DO
	. DO:ART'=""  IF ART="" FOR  SET ART=$ORDER(^INARTK(YM,ART)) QUIT:ART=""  DO
	. . IF '$DATA(^INART(YM,ART,1)) DO  QUIT                ;TYBD 21.08.2002
	. . . DO ^WWWSKILL("INARTK",ART)                        ;LÖSCHEN ;Delete
	. . ;
	. . ;FOR KALK="M1","M2","M3","W1","W2","W3","XX"  DO  ;SALE LAST: -1 MONTH, -2 MONTH, -3 MONTH, -1 WEEK, -2 WEEK, -3 WEEK, AVERAGE IN TIME HORIZON
	. . SET KALK=""
	. . FOR  SET KALK=$ORDER(KALK(KALK)) QUIT:KALK=""  DO  ;SALE LAST: -1 MONTH, -2 MONTH, -3 MONTH, -1 WEEK, -2 WEEK, -3 WEEK, AVERAGE IN TIME HORIZON
	. . . ;
	. . . SET PERIOD=$EXTRACT(KALK,2)       ;WHICH WEEK/MONTH
	. . . IF KALK="XX" SET PERIOD = $PIECE($GET(^INVORG(YM,YM,1)),Y,44)  ;NO OF MONTH FOR CALCUALTION AVG. SALE
	. . . IF +PERIOD=0 SET PERIOD = 6       ;DFTL AVG.
	. . . SET (SUM(1),SUM(2))=0
	. . . ;
	. . . NEW START,STOP
	. . . IF ($EXTRACT(KALK)="M") || (KALK="XX") DO  ;GET CALCULATION START ;MONTHLY SALE
	. . . . NEW MONAT,JAHR,YII
	. . . . SET JAHR  = $$^WWWYEAR($HOROLOG)
	. . . . SET MONAT = $$^WWWMONTH($HOROLOG)
	. . . . FOR YII=1:1:PERIOD DO
	. . . . . SET MONAT=MONAT-1
	. . . . . IF MONAT<1 SET MONAT=12 SET JAHR=JAHR-1
	. . . . ;
	. . . . SET START=$$DMY^WWWDATE1("01."_MONAT_"."_JAHR)   ; SR17146
	. . . ;
	. . . IF ($EXTRACT(KALK)="M") || (KALK="XX") DO  ;GET CALCULATION STOP ;MONTHLY SALE
	. . . . NEW MONAT,JAHR,TAG
	. . . . SET JAHR=$$^WWWYEAR($HOROLOG)
	. . . . IF KALK="XX"  SET MONAT = $$^WWWMONTH($HOROLOG)-1
	. . . . IF KALK'="XX" SET MONAT = $$^WWWMONTH($HOROLOG)-PERIOD
	. . . . IF MONAT<1    SET MONAT = 12  SET JAHR = JAHR-1
	. . . . SET TAG  = $$^WWWMONTHDAYS($$DMY^WWWDATE1("01."_MONAT_"."_JAHR))   ; SR17146
	. . . . SET STOP = $$DMY^WWWDATE1(TAG_"."_MONAT_"."_JAHR)                  ; SR17146
	. . . ;
	. . . IF $EXTRACT(KALK)="W" DO  ;GET CALCULATION START ;WEEKLY SALE
	. . . . NEW MONAT,JAHR,TAG
	. . . . SET TAG   = $HOROLOG-$$^WWWDAY(+$HOROLOG)+1  ;FIRST WEEK DAY
	. . . . SET START = (TAG-(PERIOD*7))
	. . . . SET STOP  = (TAG-1-((PERIOD-1)*7))
	. . . ;
	. . . SET SUM(1)=$$^INUMS(START,STOP,2,ART,2,1,,)  ;TOTAL SALES PER MONTH IN A STRING
	. . . FOR YI=1:1  SET SUM(2)=SUM(2)+$PIECE(SUM(1),",",YI) QUIT:$PIECE(SUM(1),",",YI,999)=""  ;TOTAL SALES SUM
	. . . IF KALK="XX" SET SUM(2)=$JUSTIFY(SUM(2)/PERIOD,0,2)  ;AVERAGE SALE PER MONTH
	. . . ;
	. . . ;SPEICHERN ;Save 
	. . . IF KALK="XX" SET MONTHAVG=SUM(2)
	. . . ;IF KALK="XX" SET $PIECE(^INART(YM,ART,1),Y,390)=SUM(2)      ;AVG. PER MONTH
	. . . ;IF KALK="XX" SET $PIECE(^INART(YM,ART,1),Y,394)=$JUSTIFY((SUM(2)/4.3),0,2)  ;AVG. PER WEEK
	. . . ;IF KALK="M1" SET $PIECE(^INART(YM,ART,1),Y,391)=SUM(2)      ;SALE LAST MONTH
	. . . ;IF KALK="M2" SET $PIECE(^INART(YM,ART,1),Y,392)=SUM(2)      ;SALE -2 MONTH
	. . . ;IF KALK="M3" SET $PIECE(^INART(YM,ART,1),Y,393)=SUM(2)      ;SALE -3 MONTH
	. . . ;IF KALK="W1" SET $PIECE(^INART(YM,ART,1),Y,395)=SUM(2)      ;SALE LAST WEEK
	. . . ;IF KALK="W2" SET $PIECE(^INART(YM,ART,1),Y,396)=SUM(2)      ;SALE -2 WEEK
	. . . ;IF KALK="W3" SET $PIECE(^INART(YM,ART,1),Y,397)=SUM(2)      ;SALE -3 WEEK
	. . ;
	. . IF $DATA(KALK("XX")) DO:LIEF'=""  IF LIEF="" FOR  SET LIEF=$ORDER(^INARTK(YM,ART,LIEF)) QUIT:LIEF=""  DO
	. . . SET YFELD = $GET(^INARTK(YM,ART,LIEF,1))
	. . . QUIT:YFELD=""  ;KEIN GÜLTIGER DATENSATZ ;no data record
	. . . ;
	. . . IF MONTHAVG'="" DO  ;SAVE AVG IN ITEM/SUPPLIER FILE
	. . . . SET $PIECE(YFELD,Y,66)                  = MONTHAVG
	. . . . SET $PIECE(^INARTK(YM,ART,LIEF,1),Y,66) = MONTHAVG
	. . . . DO ^WWWSSORT("INARTK",ART_","_LIEF)
	. . . ;
	. . . ;BESTELLVORSCHLAGSMENGE ERRECHNEN
	. . . ;IF $PIECE(YFELD,Y,67)=1 DO  ;RECHNEN JA ;have faith in yes 
	. . . IF $PIECE(YFELD,Y,218)=1 DO  ;RECHNEN JA ;have faith in yes 
	. . . . QUIT:$PIECE(YFELD,Y,65)=""  ;BESTELLRHYTMUS
	. . . . SET DAYAVG=MONTHAVG/30  ;DURCHSCHNITTLICHER ABGANG PRO TAG ;departure within TAG 
	. . . . ;SET MENGE=DAYAVG*($PIECE(YFELD,Y,65)+(+$PIECE(YFELD,Y,23)))  ;TAGESABGANG * (BESTELLRHYTMUS + LIEFERZEIT)
	. . . . SET MENGE=DAYAVG*$PIECE(YFELD,Y,65)  ;TAGESABGANG * BESTELLRHYTMUS
	. . . . IF +$PIECE(YFELD,Y,17)>MENGE SET MENGE=+$PIECE(YFELD,Y,17)  ;MINDESTBESTELLMENGE
	. . . . IF +$PIECE(YFELD,Y,12)'=0 IF (MENGE*$PIECE(YFELD,Y,12))<$PIECE(YFELD,Y,20) SET MENGE=$JUSTIFY($PIECE(YFELD,Y,20)/$PIECE(YFELD,Y,12),0,0)  ;MINDESTBESTELLWERT
	. . . . IF +$PIECE(YFELD,Y,72)'=0 DO  ;MINDESTBESTELLGEWICHT
	. . . . . NEW GEWICHT
	. . . . . SET GEWICHT=$PIECE($GET(^INART(YM,ART,1)),Y,43) 
	. . . . . IF +GEWICHT'=0 IF (MENGE*GEWICHT)<$PIECE(YFELD,Y,72) SET MENGE=$JUSTIFY($PIECE(YFELD,Y,72)/GEWICHT,0,0)
	. . . . ;
	. . . . IF +$PIECE(YFELD,Y,70)'=0 IF +$PIECE(YFELD,Y,70)<MENGE SET MENGE=+$PIECE(YFELD,Y,70)  ;MAX.BESTELLMENGE
	. . . . SET MENGE=$JUSTIFY(MENGE,0,0)
	. . . . ;
	. . . . ;SPEICHERN ;Save 
	. . . . SET $PIECE(^INARTK(YM,ART,LIEF,1),Y,60)=MENGE
	. . . . DO ^WWWSSORT("INARTK",ART_","_LIEF)
	
	QUIT
	
QUALMAN
	;-------------------------------------------------------------------------------
	;	QUALITÄTS-MANAGEMENT
	;
	;	LIEFERANTEN-AUSWERTUNG / WARENEINGÄNGE
	;
	; History :
	; 11-Feb-2008	GRF		SR15627: Use $$$save instead of direct set; objSupplier
	;-------------------------------------------------------------------------------
	NEW HIST,AUF,POS,ART,DAT,LIEF,YI,objSupplier,strStatus
	
	SET HIST=""
	SET HIST=$PIECE($GET(^INVORG(YM,YM,1)),Y,58)-1  ;ANZAHL TAGE FÜR BERECHNUNG QM-PUNKTE DURCHSCHNITT ;Number to average 
	IF (HIST="") || (HIST=-1) SET HIST=364
	SET YI=0   ;WEM;24973;22.01.2004;ZÄHLVARIABLE FÜR NENNER BEI DER DURCHNITTSBERECHNUNG
	KILL ^WWWSOR(YUSER)
	
	SET ART=""
	FOR  SET ART=$ORDER(^INAUFPs(YM,6,ART)) QUIT:ART=""  DO
	. SET DAT = $HOROLOG-HIST
	. FOR  SET DAT=$ORDER(^INAUFPs(YM,6,ART,DAT)) QUIT:DAT=""  DO
	. . SET AUF=""
	. . FOR  SET AUF=$ORDER(^INAUFPs(YM,6,ART,DAT,AUF)) QUIT:AUF=""  DO
	. . . SET POS=""
	. . . FOR  SET POS=$ORDER(^INAUFPs(YM,6,ART,DAT,AUF,POS)) QUIT:POS=""  DO
	. . . . SET POS1=$GET(^INAUFP(YM,AUF,POS,1))
	. . . . QUIT:POS1=""
	. . . . SET AUF1=$GET(^INAUF(YM,AUF,1))
	. . . . QUIT:AUF1=""
	. . . . ;
	. . . . IF $PIECE(POS1,Y,7)'=1  QUIT  ;KEINE BESTELLWARE ;no 
	. . . . IF $PIECE(POS1,Y,83)="" QUIT  ;KEINE BESTELLUNG GEDRUCKT ;no sales order 
	. . . . IF $PIECE(POS1,Y,12)="" QUIT  ;KEIN LIEFERANT ;no supplier 
	. . . . SET LIEF=$PIECE(POS1,Y,12)
	. . . . IF '$DATA(^INLIEF(YM,LIEF)) QUIT  ;EXISTIERT NICHT ;Not 
	. . . . SET YI=0   ;WEM;24973;22.01.2004;ZÄHLVARIABLE FÜR NENNER BEI DER DURCHNITTSBERECHNUNG
	. . . . ;
	. . . . ;WARENEINGANG SUCHEN ;receiving seek 
	. . . . IF $DATA(^INWEAUFALT(YM,AUF,POS)) DO
	. . . . . NEW BETR,LAG,WE,MERKER,PUNKTE
	. . . . . SET BETR=""
	. . . . . FOR  SET BETR=$ORDER(^INWEAUFALT(YM,AUF,POS,BETR)) QUIT:BETR=""  DO
	. . . . . . SET LAG=""
	. . . . . . FOR  SET LAG=$ORDER(^INWEAUFALT(YM,AUF,POS,BETR,LAG)) QUIT:LAG=""  DO
	. . . . . . . SET WE=""
	. . . . . . . FOR  SET WE=$ORDER(^INWEAUFALT(YM,AUF,POS,BETR,LAG,WE)) QUIT:WE=""  DO
	. . . . . . . . SET MERKER=$PIECE($GET(^INWEAUFALT(YM,AUF,POS,BETR,LAG,WE,1)),Y,10)
	. . . . . . . . QUIT:MERKER=""
	. . . . . . . . SET YI=YI+1   ;WEM;24973;22.01.2004;ZÄHLVARIABLE FÜR NENNER BEI DER DURCHNITTSBERECHNUNG
	. . . . . . . . SET PUNKTE=$PIECE($GET(^INWEMERKER(YM,MERKER,1)),Y,10)
	. . . . . . . . ;WEM;24973;22.01.2004;DURCHSCHNITTSBERECHNUNG KORRIGIERT
	. . . . . . . . IF PUNKTE="" SET YI=YI-1 QUIT
	. . . . . . . . IF $DATA(^WWWSOR(YUSER,LIEF)) SET ^WWWSOR(YUSER,LIEF)=($PIECE($GET(^WWWSOR(YUSER,LIEF)),Y,1)+PUNKTE)_Y_($PIECE($GET(^WWWSOR(YUSER,LIEF)),Y,2)+YI) QUIT
	. . . . . . . . SET ^WWWSOR(YUSER,LIEF)=(+PUNKTE)_Y_YI
	. . . . ;
	. . . . IF $DATA(^INWEAUF(YM,AUF,POS)) DO
	. . . . . NEW BETR,LAG,WE,MERKER,PUNKTE
	. . . . . SET BETR=""
	. . . . . FOR  SET BETR=$ORDER(^INWEAUF(YM,AUF,POS,BETR)) QUIT:BETR=""  DO
	. . . . . . SET LAG=""
	. . . . . . FOR  SET LAG=$ORDER(^INWEAUF(YM,AUF,POS,BETR,LAG)) QUIT:LAG=""  DO
	. . . . . . . SET WE=""
	. . . . . . . FOR  SET WE=$ORDER(^INWEAUF(YM,AUF,POS,BETR,LAG,WE)) QUIT:WE=""  DO
	. . . . . . . . SET MERKER=$PIECE($GET(^INWEAUF(YM,AUF,POS,BETR,LAG,WE,1)),Y,10)
	. . . . . . . . QUIT:MERKER=""
	. . . . . . . . SET YI=YI+1   ;WEM;24973;22.01.2004;ZÄHLVARIABLE FÜR NENNER BEI DER DURCHNITTSBERECHNUNG
	. . . . . . . . SET PUNKTE=$PIECE($GET(^INWEMERKER(YM,MERKER,1)),Y,10)
	. . . . . . . . ;WEM;24973;22.01.2004;DURCHSCHNITTSBERECHNUNG KORRIGIERT
	. . . . . . . . IF PUNKTE="" SET YI=YI-1 QUIT
	. . . . . . . . IF $DATA(^WWWSOR(YUSER,LIEF)) SET ^WWWSOR(YUSER,LIEF)=($PIECE($GET(^WWWSOR(YUSER,LIEF)),Y,1)+PUNKTE)_Y_($PIECE($GET(^WWWSOR(YUSER,LIEF)),Y,2)+YI) QUIT
	. . . . . . . . SET ^WWWSOR(YUSER,LIEF)=(+PUNKTE)_Y_YI
	
	SET LIEF=""
	FOR  SET LIEF=$ORDER(^WWWSOR(YUSER,LIEF)) QUIT:LIEF=""  DO   ;WEM;24973;22.01.2004;DURCHSCHNITTSBERECHNUNG KORRIGIERT
	. NEW BETRAG,SATZ
	. SET BETRAG=0
	. SET SATZ=$GET(^WWWSOR(YUSER,LIEF))
	. QUIT:SATZ=""
	. DO
	. . IF +$PIECE(SATZ,Y,2)=0 QUIT  ; ABBRUCH, DA SONST DIVISION DURCH NULL
	. . SET BETRAG=$JUSTIFY($PIECE(SATZ,Y,1)/$PIECE(SATZ,Y,2),0,2)
	. ;
	.;SET $PIECE(^INLIEF(YM,LIEF,1),Y,121)=BETRAG  ; SR15627   ;SPEICHERN PUNKTEDURCHSCHNITT ;Save 
	. set objSupplier = $get(^INLIEF(YM,LIEF,1))
	. set $$$INLIEFQMRating(objSupplier) = BETRAG        ; D121
	. set strStatus = $$$Save("INLIEF",LIEF,objSupplier,$$$YES)
 
	SET $PIECE(^INVORG(YM,YM,1),Y,59)=$HOROLOG  ;SPEICHERN DATUM ;Save Date 
	QUIT
	
	
]]></Routine>
</Export>