<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMJobWatch" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMJobWatch
	do Start()
	quit
Start(pintJob=0)    
    ;-------------------------------------------------------------------------------
    ; Watch Jobs - Help provide info on slow downs
    ;
    ; Show Date,Time,Job Number,Routine,Job Type,Total Lines,Total Global,
    ; Delta Lines,Delta Globals
    ;
    ; History:
    ; 07-Feb-2014	SCR		SESDF-899: Single Job Watch Option
    ; 25-May-2012	SCR		SR18008: Added job type 27
    ; 04-Jun-2009	shobby	SR16619: Adjustments to work with Cache 2008
    ; 16-Sep-2004	SCR		Added Type 2 (Backgound Jobs)
    ; 27-Aug-2004	SCR		Added Lines & Globals tracking
    ; 20-Aug-2004	SCR		Created
    ;-------------------------------------------------------------------------------
	new Last,Job,Proc,Type,State,Obj,Routine,JobNumber,Lines,LineDelta,Globals,GlobalDelta
	
	set Last=""
	for {
		hang .1
		set Job=""
		kill Proc
		for {
			set Job=$order(^$job(Job))
			quit:Job=""  
			continue:Job=$job ; Dont check this job
			if pintJob {
				continue:Job'=pintJob
			}
			set Type=$zutil(67,10,Job)
			if (Type=1)||(Type=2)||(Type=96)||(Type=104)||(Type=27) { ; SR18008
				set Proc(Job)=1
				set Obj=##class(alSYS.SYSTEM.Process).OpenId(Job) 	;SR16619
				if Obj="" {
					set State	= "HALT" ; Assume the job is closed
				} else {
					set State=Obj.StateGet()							;SR16619
					do ##class(alSYS.SYSTEM.Process).Close(.Obj)		;SR16619
				}
				if $get(Job(Job))=State continue
				set blnIdle	= (State="READ")||(State="HALT")
				set Routine	= $zutil(67,5,Job)
				set Lines  	= $zutil(67,8,Job)
				set Globals	= $zutil(67,9,Job)
				set strNS	= $zutil(67,6,Job)
				set strDetail	= $get(^CacheTempJobWatch(Job))
				
				if blnIdle {
					set LineDeltaTot   	= Lines-$get(Job(Job,"il"))
					set GlobalDeltaTot 	= Globals-$get(Job(Job,"ig"))
					set IntSecsTot		= $j($zh-$get(Job(Job,"it")),0,1)
					set Job(Job,"il")	= Lines
					set Job(Job,"ig")	= Globals
					set Job(Job,"it")	= 0
					set strIdle			= "Idle"
					kill ^CacheTempJobWatch(Job)
				} else {
					set LineDeltaTot	= ""
					set GlobalDeltaTot	= ""
					set IntSecsTot		= ""
					set strIdle			= "Running"
					set:'$get(Job(Job,"it")) Job(Job,"it")	= $zh
				}
				set LineDelta		= Lines-$get(Job(Job,"l"))
				set GlobalDelta 	= Globals-$get(Job(Job,"g"))
				set IntSecs			= $j($zh-$get(Job(Job,"t")),0,1)
				set Job(Job,"l")	= Lines
				set Job(Job,"g")	= Globals
				set Job(Job,"t")	= $zh
				write !,$zdt($h,3)," ",Job," ",strIdle," ",State," ",Routine," ",strNS," ",Type," ",LineDelta," ",GlobalDelta," ",IntSecs," ",LineDeltaTot," ",GlobalDeltaTot," ",IntSecsTot," ",strDetail
				set Job(Job)=State
				;set JobNumber=Job(Job,"jn")
				;do ##class(%ResultSet).RunQuery("%SYSTEM.Process","Variable",JobNumber,"%CGIEVAR(""HTTP_REFERER"")")
			}
		} 
	}
	quit
	;end
	
]]></Routine>
</Export>