<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARVolumeEstoqueDemo" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[#include VARConst
#include COMSYS
#include INConst

VARVolumeEstoqueDemo
	quit
	
OnAfterSave
	new Local,Programa,MostrarProgramas,MostrarValores,DesdeModulo,AteModulo,DesdeRua,AteRua

	set Local 	 = $get(VORG(1))
	set Programa = $get(VORG(2))
	set MostrarProgramas = $get(VORG(3))
	set MostrarValores   = $get(VORG(4))
	set DesdeModulo = $get(VORG(5))
	set AteModulo = $get(VORG(6))
	set DesdeRua = $get(VORG(7))
	set AteRua = $get(VORG(8))
	
	k ^VARTempVolumeEstoqueDemo
	
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,1) = Local
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,2) = Programa
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,3) = MostrarProgramas
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,4) = MostrarValores
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,5) = DesdeModulo
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,6) = AteModulo
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,7) = DesdeRua
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,8) = AteRua
	
	if ((Local="")&&(Programa="")){
		$$$Alert("É necessário preencher pelo menos o Local ou Programa.")
		do GoToForm^COMUtilForm("VARVolumeEstoqueDemo","",,,,,)
		quit
	}
	
	do RunReportVolumeEstoqueDemo^VARJasperRunReport(Local,Programa,MostrarProgramas,MostrarValores,DesdeModulo,AteModulo,DesdeRua,AteRua)
	
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,3) = ""
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,4) = ""
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,7) = ""
	set $piece(^VARTempVolumeEstoqueDemo(YM,YBED,1),Y,8) = ""
	
	quit
	
ExportarExcel()

	new Local,Programa,MostrarProgramas,MostrarValores,ObjPesquisa,meuSQL,blnMostrarPrograma,blnMostrarValores,
		sc,objExcel,stExcel,strTitle,strData,strCodProduto,strDescProduto,fltSomaProd,fltVolumeTotal,
		fltArmazCalc,strPrograma, SQLCODE
		
	quit:(YUSER="")
	
	set Local 				= $get(VORG(1))
	set Programa			= $get(VORG(2))
	set DesdeModulo 		= $get(VORG(5))
	set AteModulo 			= $get(VORG(6))
	set DesdeRua 			= $piece($$GetFormData^COMUtilForm(YFORM,"M"),Y,7)
	set AteRua				= $piece($$GetFormData^COMUtilForm(YFORM,"M"),Y,8)
	set blnMostrarValores	= $$$NO
	set blnMostrarPrograma	= $$$NO
	//Campos manuais do form
	set pMostrarProgramas 	= $piece($$GetFormData^COMUtilForm(YFORM,"M"),Y,3)
	set pMostrarValores 	= $piece($$GetFormData^COMUtilForm(YFORM,"M"),Y,4)

	Set ObjPesquisa = ##class(%ResultSet).%New()
	
	set meuSQL = "SELECT " 
 	set meuSQL = meuSQL_"alSOH.dBundleStock.Item as Produto, "
 	set meuSQL = meuSQL_"$$SQLGetDescricaoProduto^VARSQL(alSOH.dBundleStock.Item) as descProduto, "
 	set meuSQL = meuSQL_"SUM(alSOH.dBundleStock.QtyOnHand) as somaProduto, "
 	set meuSQL = meuSQL_"Pack.FREE1 as Volume, "
 	set meuSQL = meuSQL_"(SUM(alSOH.dBundleStock.QtyOnHand) * Pack.FREE1) as VolumeTotalCalc, "
 	set meuSQL = meuSQL_"(SUM(alSOH.dBundleStock.QtyOnHand) * Pack.FREE1 * $$GetPrecodeArmazenagem^VARVolumeEstoque(Pack.Company)) as PrecoArmazenagemCalc, "
 	set meuSQL = meuSQL_"$$SQLGetSiglaUnit^VARSQL(Pack.OuterUnit) as SiglaUnidade, "
	set meuSQL = meuSQL_"Bundle->Program as Programa, "
	set meuSQL = meuSQL_"$$GetNomePrograma^VARSQL(Bundle->Program) as DescPrograma "
	set meuSQL = meuSQL_"FROM alSOH.dBundleStock LEFT JOIN INARTPACK Pack "
	set meuSQL = meuSQL_"ON alSOH.dBundleStock.Item = Pack.ItemNo "
	set meuSQL = meuSQL_"AND $$SQLGetUnitMeasure^VARSQL(alSOH.dBundleStock.Item) = Pack.OuterUnit "
	set meuSQL = meuSQL_"AND Pack.Company = 0 "
	set meuSQL = meuSQL_"WHERE Pack.FREE1 IS NOT NULL "
	if ($length(Local) '= 0){
		set meuSQL = meuSQL_"AND Storage->Location = '"_Local_"' "
	}
	if ($length(Programa) '= 0){
		set meuSQL = meuSQL_"AND Bundle->Program = '"_Programa_"' "
	}

	if ($length(DesdeModulo) '= 0) {
		set meuSQL = meuSQL_" AND ($$GetEnderecoConsulta^VARVolumeEstoqueLocal($$SQLGetEnderecoFisico^VARSQL(Storage->Code,Storage->Physical->Code),1) >= "_DesdeModulo_") "
	}

	if ($length(AteModulo) '= 0) {
		set meuSQL = meuSQL_" AND ($$GetEnderecoConsulta^VARVolumeEstoqueLocal($$SQLGetEnderecoFisico^VARSQL(Storage->Code,Storage->Physical->Code),1) <= "_AteModulo_") "
	}

	if ($length(DesdeRua) '= 0) {
		set meuSQL = meuSQL_" AND ($$GetEnderecoConsulta^VARVolumeEstoqueLocal($$SQLGetEnderecoFisico^VARSQL(Storage->Code,Storage->Physical->Code),2) >= "_DesdeRua_") "
	}

	if ($length(AteRua) '= 0) {
		set meuSQL = meuSQL_" AND ($$GetEnderecoConsulta^VARVolumeEstoqueLocal($$SQLGetEnderecoFisico^VARSQL(Storage->Code,Storage->Physical->Code),2) <= "_AteRua_") "
	}
	if ((pMostrarValores '= "") && (pMostrarProgramas '= "")){
		set blnMostrarPrograma = $$$YES
		set blnMostrarValores = $$$YES
		set meuSQL = meuSQL_"GROUP BY  Bundle->Program,alSOH.dBundleStock.Item "
		set meuSQL = meuSQL_"ORDER BY TO_NUMBER(Bundle->Program), alSOH.dBundleStock.Item "
	}
	elseif (pMostrarProgramas '= "") {
		set blnMostrarPrograma = $$$YES
		set meuSQL = meuSQL_"GROUP BY  Bundle->Program,alSOH.dBundleStock.Item "
		set meuSQL = meuSQL_"ORDER BY TO_NUMBER(Bundle->Program), alSOH.dBundleStock.Item "
	}
	elseif (pMostrarValores '= ""){
		set blnMostrarValores = $$$YES
		set meuSQL = meuSQL_"GROUP BY  alSOH.dBundleStock.Item "
	}
	else {
		set meuSQL = meuSQL_"GROUP BY  alSOH.dBundleStock.Item "
	}
	do ObjPesquisa.Prepare(meuSQL)
	set sc = ObjPesquisa.Execute()
	
	set objExcel = ##class(VAR.infra.netmanager.ExportToExcel).%New()
	set stExcel = objExcel.Finalize(YUSER)
	
	if $$$ISOK(stExcel) {
		set objExcel.idSession = YUSER
		set strTitle = "CÓDIGO"_Y_"PRODUTO"_Y_"QUANT."_Y_"VOL. UN. (m³)"_Y_"VOLUME (m³)"
		
		if (blnMostrarValores) {
			set strTitle = strTitle_Y_"PREÇO ARMAZ. (R$)"
		}
		if (blnMostrarPrograma) {
			set strTitle = strTitle_Y_"PROGRAMA"
		}
		set stExcel = objExcel.Insert(strTitle)
	}
	
	while ObjPesquisa.Next(.sc) {

		set strCodProduto 	= ObjPesquisa.Data("Produto")
		set strDescProduto 	= ObjPesquisa.Data("descProduto")
		set fltSomaProd 	= $$Convert^WWWTR(0,12,ObjPesquisa.Data("somaProduto"))_" "_ObjPesquisa.Data("SiglaUnidade")
		set fltVolumeUni 	= $$Convert^WWWTR(0,12,ObjPesquisa.Data("Volume"),4)
		set fltVolumeTotal 	= $$Convert^WWWTR(0,12,ObjPesquisa.Data("VolumeTotalCalc"),4)
		set fltArmazCalc 	= $$Convert^WWWTR(0,12,ObjPesquisa.Data("PrecoArmazenagemCalc"),4)
		set strPrograma 	= ObjPesquisa.Data("Programa")
		
		set strData = strCodProduto_Y_strDescProduto_Y_fltSomaProd_Y_fltVolumeUni_Y_fltVolumeTotal
		
		if (blnMostrarValores) {
			set strData = strData_Y_fltArmazCalc
		}
		if (blnMostrarPrograma) {
			set strData = strData_Y_$$GetNomePrograma^VARSQL(strPrograma)
		}
		
		set stExcel = objExcel.Insert(strData)
	}
	
	do ObjPesquisa.Close()
	
	do objExcel.ExportExcel(objExcel.idSession)
	
	do GoToForm^COMUtilForm("VARVolumeEstoqueDemo","",,,,,)
	
	quit
	
OnAfterDataFields
	
	do PrintJSModuloRua^VARVolumeEstoque("M5","M6","M7","M8")
	do ObservacoesVolumeLocal^VARVolumeEstoque
	quit]]></Routine>
</Export>