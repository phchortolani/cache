<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBankReconLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBankReconLine
	;-------------------------------------------------------------------------------
	; 08-Jul-2003	SCR		Bug Fixes from Code Checking
	;-------------------------------------------------------------------------------
	#include COMSYS
	#Include FINConst
	#include FINSYS
 
ChargesInterest(pidBankRecon,pidBankReconLine)		// NOT CURRENTLY IN USE
	;-------------------------------------------------------------------------------
	; Creates a table for the list of charges and interests in FINGLBankRecon and
	; stores them in a temporary global for use by the DisplayGrid^COMTable
	;
	; History
	; 04-Apr-2003	SCR		Reversed Debit/Credit
	; 21-Mar-2003	shobby	YKEY for new records was being created incorrectly.
	; 12-Mar-2003	shobby	Determine if a record has already been posted.
	; 10-Mar-2003	shobby	Use WWWTEXT to translate the Withdrawal(Credit)/Deposit
	; 						(Debit) data labels.
	; 06-Mar-2003	shobby	Creation
	;-------------------------------------------------------------------------------
	new lstHeader,idBankReconLine,objBankReconLine,dteTransdate
	new idAccount,strAccountDescription
	
	set lstHeader=""
	set lstHeader=lstHeader_$lb($$$StrFINGLBankReconLineTransactionDate)
	set lstHeader=lstHeader_$lb($$$StrFINGLBankReconLineAccount)
	set lstHeader=lstHeader_$lb($$$StrFINGLAccountDescription)
	set lstHeader=lstHeader_$lb($$$StrFINGLBankReconLineReference)
	set lstHeader=lstHeader_$lb($$$StrFINGLBankReconLineDebit)
	set lstHeader=lstHeader_$lb($$$StrFINGLBankReconLineCredit)
	if $$Start^COMTable(lstHeader,$listbuild("Fin00150"),1) { ; Charges/Interest
		set dteTransdate=""
		for {
			set dteTransdate=$order(^FINGLBankReconLines(YM,2,pidBankRecon,dteTransdate),-1)
			quit:dteTransdate=""
			
			set idBankReconLine=""
			for {
				set idBankReconLine=$order(^FINGLBankReconLines(YM,2,pidBankRecon,dteTransdate,pidBankRecon,idBankReconLine))
				quit:idBankReconLine=""
				
				set objBankReconLine=$get(^FINGLBankReconLine(YM,pidBankRecon,idBankReconLine,1))
				set idAccount=$$$FINGLBankReconLineAccount(objBankReconLine)
				set strAccountDescription=""
				if idAccount'="" set strAccountDescription=$$$FINGLAccountDescription($get(^FINGLAccount(YM,idAccount,1)))
				
				do NewLine^COMTable($select(pidBankReconLine=idBankReconLine:"lightgreen",1:""))
				do InsertCellDate^COMTable($$$FINGLBankReconLineTransactionDate(objBankReconLine),"FINGLBankReconLine",pidBankRecon_","_idBankReconLine)
				do InsertCell^COMTable(idAccount,"FINGLBankReconLine",pidBankRecon_","_idBankReconLine)
				do InsertCell^COMTable(strAccountDescription,"FINGLBankReconLine",pidBankRecon_","_idBankReconLine)
				do InsertCell^COMTable($$$FINGLBankReconLineReference(objBankReconLine),"FINGLBankReconLine",pidBankRecon_","_idBankReconLine)
				do InsertCurrencyCell^COMTable($$$FINGLBankReconLineDebit(objBankReconLine),1,"FINGLBankReconLine",pidBankRecon_","_idBankReconLine)
				do InsertCurrencyCell^COMTable($$$FINGLBankReconLineCredit(objBankReconLine),1,"FINGLBankReconLine",pidBankRecon_","_idBankReconLine)
				do EndLine^COMTable()
				}
			}
		; add the "new" line
		if pidBankReconLine="" {
			do NewLine^COMTable()
			do InsertCell^COMTable("[New]","FINGLBankReconLine",pidBankRecon_",")
			do InsertCell^COMTable("")
			do InsertCell^COMTable("")
			do InsertCell^COMTable("")
			do InsertCell^COMTable("")
			do InsertCell^COMTable("")
			do EndLine^COMTable()
			}
		do Stop^COMTable()
		}
	quit
	
 
	
OnAfterDelete(pstrYKEY,pstrYFELD)
    ;-------------------------------------------------------------------------------
    ; Delete the Interest/Charge entry.
    ;
    ; Params:
    ; pstrYKEY : The YKEY of the record
    ; pstrYFELD: The YFELD of the bank reconciliation
    ;
    ; Returns:
    ;
    ; History:
    ; 23-Oct-2006	JW			SR15134: Look at kill status.
    ; 26-Sep-2005	RobertW		SR13304: Created
    ;-------------------------------------------------------------------------------
	new objBankRecon,idAccount,idBankTran,strStatus
	 
	set objBankRecon=$get(^FINGLBankRecon(YM,$piece(pstrYKEY,",",1),1))
	
	set idAccount=$$$FINGLBankReconBankAccount(objBankRecon)
	set idBankTran=$$$FINGLBankReconLineBankFileLine(pstrYFELD)
	
	if idBankTran'="" {
		set strStatus=$$SetManualMatch^FINGLBankTran(idBankTran,idAccount,$$$NO)
		if $$$ISERR(strStatus) {
			set Q = $$$QDontDelete		// SR15134
		}
	}
	
	quit
 
 
OnBeforeDelete(pstrYKEY,pstrYFELD)
	/*------------------------------------------------------------------------------
	; Determines whether we can delete this pre cleared entry.
	; 
	; We can not delete if this comes from another bank reconciliation
	;
	; Params:
	; pstrYKEY : The key to the line
	; pstrYFELD: The data for the line
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Oct-2006	JW		SR15134: Look at kill status
	; 10-Feb-2006	RPW		SR14135: Created
	;-----------------------------------------------------------------------------*/
	new strStatus
	
	if $get(YKILL)'="" {		// Only do this when delete is pressed in the grid (?)
		set strStatus = $$GLAdjUncomplete^FINGLBankReconMatchCache(pstrYKEY)				//SR15134
		
		if $$$ISERR(strStatus) {
			set Q = $$$QDontDelete
			do ReturnError^COMUtilError(strStatus)
		}
	}
	
	quit
 
 
GetDefaultAccount() 
	;-------------------------------------------------------------------------------
	; Get the GL Account field from the FINGLBank record that is being used.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	; The account id.
	;
	; History:
	; 22-Feb-2006	RPW		SR13816: Created
	;-------------------------------------------------------------------------------
 
	new idAccount,objBank
	
	set idAccount=""
	set objBank=$get(^FINGLBank(YM,$$$FINGLBankReconBankAccount($$$GRIDYFELDContainer),1))
	if objBank'="" {
		set idAccount=$$$FINGLBankGLAccount(objBank)
	}
 
	quit idAccount
	
OnBlur(pintCOL,pintROW,pstrYFELD) 
	;-------------------------------------------------------------------------------
	; Handle the onblur of the GL Adj grid.
	;
	; Params:
	; pintCOL  : The column on the grid
	; pintROW  : The row on the grid
	; pstrYFELD: The data of the grid line
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 27-Apr-2006	RPW		SR14459: If the reference or date are modified, then update
	; 						the match cache entry as well.
	; 04-Apr-2006	RPW		SR14459: Fixed a undefined error for objLine
	; 24-Mar-2006	RPW		SR14459: If the amounts are really changed then uncomplete the line
	; 07-Mar-2006	RPW		SR11305: Created
	;-------------------------------------------------------------------------------
 
	new idBankRecon,idLine,objLine,blnClear
 
	set idBankRecon = $$GetYKEYContainer^COMGridEdit31Interface()
	set idLine      = $$ReferenceKey^COMGridEdit31Interface(YFORM,pintROW)
	
	if $data(@("^"_YFORM_"("_$$^WWWKEYBUILD(idLine)_")")) {
		set objLine=$$$DATA(YFORM,idLine) ; 14459
	} else {
		set objLine=""
	}
		
	do SetDifference^FINGLBankReconGet(idBankRecon,YFORM,pintROW,.pstrYFELD,$$$FldFINGLBankReconLineDebit,$$$FldFINGLBankReconLineCredit)
	
	if (pintCOL=2)||(pintCOL=3) {
		
		if pintCOL=2 {
			set blnClear=$$$FINGLBankReconLineCredit(objLine)'=$$$FINGLBankReconLineCredit(pstrYFELD)
		} else {
			set blnClear=$$$FINGLBankReconLineDebit(objLine)'=$$$FINGLBankReconLineDebit(pstrYFELD)
		}
			
		do:blnClear GLAdjUncomplete^FINGLBankReconMatchCache($$ReferenceKey^COMGridEdit31Interface(YFORM,pintROW))
	}
	
	// SR14459 (27-Apr-2006 Bug Fix)
	if (pintCOL=4)||(pintCOL=6) {
		// Update the Match Cache entry.
		do UpdateMatchCache^FINGLBankReconMatchCache(idBankRecon,"FINGLBankReconLine",idLine,$$$FINGLBankReconLineTransactionDate(pstrYFELD),$$$FINGLBankReconLineReference(pstrYFELD))
	}
 
	quit ""
	
OnLineDeleted(pstrYKEY,pintRowCount)
	new intRow,idBankRecon
	
	set intRow=$$ReferenceRow^COMGridEdit31Interface(YFORM,$$$KEY2(pstrYKEY))
	set idBankRecon=$$$KEY1(pstrYKEY)
	
	do RemoveDifference^FINGLBankReconGet(idBankRecon,YFORM,intRow,YFELD,$$$FldFINGLBankReconLineDebit,$$$FldFINGLBankReconLineCredit)
	
	quit
	
	
	
OnBeforeSave(pYFELD)
	;-------------------------------------------------------------------------------
    ; Make sure an amount is entered
    ;
    ; Params: line object
    ;
    ; Returns: nil
    ;
    ; History:
    ; 27-Jun-2006	JW		SR13755: Created
	;-------------------------------------------------------------------------------
	
    if ($$$FINGLBankReconLineCredit(pYFELD)="") && ($$$FINGLBankReconLineDebit(pYFELD)="") {
		set YRETVAL = $listbuild("Fin01049")  ;Enter either a deposit or a withdrawal
	}
    
	quit
]]></Routine>
</Export>