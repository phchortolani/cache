<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMNumber" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMNumber
	;-------------------------------------------------------------------------------
    ; Number conversion routines
    ;-------------------------------------------------------------------------------
#include COMConst
 
NumberToWords(pfltDollars,pCase="U",pblnNumCents=1)
    ;-------------------------------------------------------------------------------
    ; Converts a number to words, can be in uppercase
    ; 
    ; Params:
    ; pfltDollars	Number	Number to convert
    ; pCase			Enum	Can be U - Uppercase
    ; 							   L - lowercase
    ; 							   T - Title
    ; pblnNumCents  Boolean Throw in Cents
    ; 
    ; Returns:String
    ;
    ; History:
    ; 05-Feb-2004	Paul K	Created (stolen from WRS)
    ;-------------------------------------------------------------------------------
	new lngOnes,lngThousands,lngMillions,lngUnits,lngCents,strWord
	 
	quit:pfltDollars'<1E9 "OVERFLOW"
	 
	set strWord     = ""
	set lngOnes     = pfltDollars\1
	set lngMillions = pfltDollars\1E6
	 
	if lngMillions>0 {
		set strWord     = strWord_$$NumtoStringHundreds(lngMillions)_"MILLION "
		set pfltDollars = pfltDollars-(lngMillions*1E6)
	}
 
	set lngThousands=pfltDollars\1000
	if lngThousands>0 {
		set strWord     = strWord_$$NumtoStringHundreds(lngThousands)_"THOUSAND "
		set pfltDollars = pfltDollars-(lngThousands*1000)
	}
	
	set lngUnits=pfltDollars\1
	if lngUnits>0 {
		if (strWord'="") && (lngUnits<100) set strWord=strWord_"AND "
		set strWord     = strWord_$$NumtoStringHundreds(lngUnits)
		set pfltDollars = (pfltDollars-lngUnits)#10
	}
	 
	if (strWord'="") set strWord = strWord_"DOLLAR"_$select(lngOnes=1:" ",lngOnes'=1:"S ")
	 
	if 'pblnNumCents {
	set lngCents = pfltDollars*100
	set strWord  = strWord_"AND "_$select(lngCents>0:$$NumtoStringHundreds(lngCents),1:"ZERO ")_"CENT"_$select(lngCents=1:"",lngCents'=1:"S")
	}
	 
	if pblnNumCents {
		set lngCents = pfltDollars*100
		set strWord  = strWord_"AND "_$translate($justify(lngCents,2)," ","0")_" CENT"_$select(lngCents=1:"",lngCents'=1:"S")
	}
	quit $zcvt(strWord,pCase)
	
	
NumtoStringHundreds(plngVal)
	new lngHundreds,strHundsWord,strHundsWord2
 
	set strHundsWord = ""
	set lngHundreds  = plngVal\100
	 
	if lngHundreds>0 {
		set strHundsWord = $piece("ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE",",",lngHundreds)_" HUNDRED "
		set plngVal      = plngVal-(lngHundreds*100)
	}
	 
	if plngVal>0 {
		if plngVal>19 {
			set strHundsWord2 = $$NumtoStringTens(plngVal)
		} else {
	 		set strHundsWord2 = $$NumtoStringTeens(plngVal)
		}
		if (plngVal>0) && (strHundsWord'="") {
			set strHundsWord = strHundsWord_"AND "
		}
	 	set strHundsWord = strHundsWord_strHundsWord2_" "
	}
	quit strHundsWord
 
 
NumtoStringTeens(plngVal)
 	quit $piece("ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE,TEN,ELEVEN,TWELVE,THIRTEEN,FOURTEEN,FIFTEEN,SIXTEEN,SEVENTEEN,EIGHTEEN,NINETEEN",",",plngVal)
 
 
NumtoStringTens(plngVal)
	 new lngTens,strTensWord,lngUnits
	 
	 set lngTens     = plngVal\10
	 set lngUnits    = plngVal-(lngTens*10)
	 set strTensWord = $piece(",TWENTY,THIRTY,FORTY,FIFTY,SIXTY,SEVENTY,EIGHTY,NINETY",",",lngTens)
	 quit:lngUnits=0 strTensWord    ; FIXME : replace early exit with if test
	 
	 set strTensWord = strTensWord_"-"_$piece("ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE",",",lngUnits)
	 quit strTensWord
	
]]></Routine>
</Export>