<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWZAHL" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMSYS
#include WWWConst
#define space40 "                                       "
 
WWWZAHL(pnumValueIn,pintWidth,pintDecimalPlaces,pidCurrencyCode,pblnSymbolOnRight="",pfltConvRate,pstrConvTimeStamp,pblnSymbol=$$$YES)
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		AUSGABE ZAHLENFORMAT
	;		Return formatted number
	;
	; Inputs : 
	; pnumValueIn       = Amount to be shown/converted                        ; DARZUSTELLENDER ZAHLENWERT
	; pintWidth         = Minimum Width of string, pads with spaces if necesary     DEFAULT=0  (OPTIONAL)
	; 		                                                                  ; MINDEST-AUSGABELÄNGE (RECHTSBÜNDIG)  
	; pintDecimalPlaces = Decimal Places to be shown  DEFAULT=2  (OPTIONAL)   ; ANZAHL DER NACHKOMMASTELLEN          
	; pidCurrencyCode   = Currency Code                                       ; WÄHRUNG DIE ANGEZEIGT WERDEN UND GGF GERECHNET WERDEN SOLL
	; pblnSymbolOnRight =	1         Right Justify currency                  ; WÄHRUNGSZEICHEN RECHTS NEBEN DER ZAHL
	; 						0 (not 1) Left Justify currency                   ; LINKS NEBEN DER ZAHL
	; 						""        Tri-state - use currency-based setting  ; WIE IM PARAMETER
	; pfltConvRate      = Alternate Conversion rate. Useful if A is not in Base Currency so you want the conversion rate of 1.
	;                                                                         ; ALTERNATIVER UMRECHNUNGSFAKTOR FREMDWÄHRUNG
	; pstrConvTimeStamp = which allows the routine to get the conversion rate at the specified date
	; pblnSymbol        = Show the currency symbol or not
	; 
	; ByRef :
	;
	;
	; Returns :
	; The modified currency value
	;
	; History :
	; 21-Sep-2010	GRF		-: Code clean up
	; 23-May-2007	GRF		SR15525: use COMUtilLocale function and ConvertLocaleNumber^WWWTR
	; 							to fix flawed logic; parameters renamed.
	; 23-Oct-2006	RPW		SR15068: Removed naked reference
	; 27-Jun-2006	RPW		SR14603: Determine whether to show the currency symbol or not.
	; 06-May-2005	SteveS	SR12291: Don't overwrite D, use DSYMBOL to store the currency symbol.
	; 24-Mar-2005	RPW		SR11959: Modified to get the date based conversion field
	; 08.08.1997	DT
	;-------------------------------------------------------------------------------
	new strCurrSymbol,strValueOut,TRENN,YWHR1,YWHR2
	
	;---------------------------------------
	; Parameter Check
	;---------------------------------------
	set pintWidth         = +$get(pintWidth)
	set pidCurrencyCode   =  $get(pidCurrencyCode)
	set pblnSymbolOnRight =  $get(pblnSymbolOnRight)
	if $get(pintDecimalPlaces)="" {
		set pintDecimalPlaces=$$GetDecimalPoints(pidCurrencyCode)   ; Currency format NOT floating
	}
	
	; If we have only a date field or nothing, the data is assumed to be wrong - set to NOW
	; Verify date and time are both numeric (strip leading zeros if formatted to (5N1","5N)
	set pstrConvTimeStamp=$get(pstrConvTimeStamp)
	if $length(pstrConvTimeStamp,",")=1 set pstrConvTimeStamp=$horolog
	set $piece(pstrConvTimeStamp,",",1)=+$piece(pstrConvTimeStamp,",",1)
	set $piece(pstrConvTimeStamp,",",2)=+$piece(pstrConvTimeStamp,",",2)
	
	;---------------------------------------
	; Variable Initiation
	;---------------------------------------
	do:$get(Y)="" ^WWWVAR
	if $get(SPRACHE)="" set SPRACHE="EN"
	set:$get(YDECIMAL)="" YDECIMAL = $extract($$GetNumberDelimiters^COMUtilLocale(SPRACHE),2)
	
	/* DISABLED AS SHOULD ALWAYS ALREADY BE IN INTERNAL FORMAT
	;  Previous code was usually ineffective and didn't get picked up 
	;---------------------------------------
	; Remove any literal Thousands/Decimals formatting - reinstalled later with $fnumber
	;---------------------------------------
	set pnumValueIn = $$ConvertLocaleNumber^WWWTR(pnumValueIn,YDECIMAL)
	*/
	
	;---------------------------------------
	; Apply Conversion Rate
	;---------------------------------------
	if +pnumValueIn=0 {
		set strValueOut=""
	} elseif (pidCurrencyCode'="") {
	;	FIXME : <GRF> Why is pidCurrencyCode anything other than "EUR" for Euros?   It is WWWWHR that returns
	;	              $char(128) as the symbol for currency "EUR" but this is not the currency code itself.
	;	              Should be able to get YWHR2 directly from all pidCurrencyCode values otherwise the
	;	              strCurrSymbol will be null for $char(128).
		set YWHR1 = pidCurrencyCode
		if $ASCII(YWHR1)=128 set YWHR1="EUR"
		if YWHR1="EU"        set YWHR1="EUR"
		
		set YWHR2 = $$FindConversionRate(YWHR1,pstrConvTimeStamp)
		if $get(pfltConvRate)'="" set YWHR2=pfltConvRate         ;UMRECHNUNGSFAKTOR FEMDWÄHRUNG
		
		if +YWHR2'=0 set pnumValueIn = pnumValueIn/YWHR2         ;WÄHRUNG UMRECHNEN ;money standard 
	}
	
	;---------------------------------------
	; Locale-Based FORMAT Thousands/Decimal Place
	;---------------------------------------
	set strValueOut = $fnumber(pnumValueIn,",",pintDecimalPlaces)
	set:YDECIMAL="," strValueOut = $TRANSLATE(strValueOut,",.",".,")    ; NOTE : Assumes only dot-comma or comma-dot formats.
	
	;---------------------------------------
	; Currency Symbol
	;---------------------------------------
	if pblnSymbol {
		set strCurrSymbol = $$^WWWWHR(pidCurrencyCode)
	
	;	set:pblnSymbolOnRight="" pblnSymbolOnRight = $$$WWWWAESymbolOnTheRight($GET(^WWWWAE(0,pidCurrencyCode,1)))
		set intPadding = pintWidth - $length(strValueOut)
		set:intPadding>0 strValueOut=$extract($$$space40,1,intPadding)_strValueOut
		
		if strCurrSymbol'="" {
			if pblnSymbolOnRight="" set pblnSymbolOnRight = $$$WWWWAESymbolOnTheRight($get(^WWWWAE(0,pidCurrencyCode,1)))
			if pblnSymbolOnRight=$$$YES {
				set strValueOut = strValueOut_" "_strCurrSymbol           ; "   12.00 FF"
			} else {
				set strValueOut = strCurrSymbol_" "_strValueOut           ; "$     12.00"
			}
		}
	}
	quit strValueOut
	
	
FindConversionRate(pstrFC,pstrTimeStamp,pblnReturnDateTime=$$$NO)
	;-------------------------------------------------------------------------------
	; Find the correct conversion rate given a date. First it checks WWWWAE and
	; if the date is older, checks WWWWAEDATE for the matching region of dates.
	; 
	; Parameters:
	; pstrFC			The foreign Currency type, ie USD or AUD
	; pstrTimeStamp		A time stamp in full horolog format.
	;
	; Returns:
	; The floating point conversion rate.
	;
	; History:
	; 12-Jan-2007	GRF		SR15376: restore missing test; boolean macro
	; 23-Oct-2006	RPW		SR15068: use new DateDiff macro
	; 23-Jan-2006	Steve S	Boolean macros
	; 18-May-2005	shobby	Default value for pstrTimeStamp SR12008
	;  9-May-2005	JW		Added $get
	; 07-Apr-2005	RobertW	SR11836: Allow the date and time of the exchange rate
	; 						to be returned as well.
	; 06-Apr-2005	RobertW	SR11836: Modified this to handle empty time, just add
	; 						1 to the day.  Also handles empty date.
	; 24-Mar-2005	RobertW	SR11959: Modified from FCConvRate in COMSYSFC
	;-------------------------------------------------------------------------------
	new objConvRate,dteRate,tmeRate,strIndex,blnQuit,strStart,strTimeIndex,strRate
	
	set objConvRate = ""
	set strRate     = ""
	
	if $get(pstrFC)'="" {
		set objConvRate = $get(^WWWWAE(0,pstrFC,1))
		set strStart    = $piece(objConvRate,Y,6)
		set strRate     = strStart
		if $get(pstrTimeStamp)="" {
			set pstrTimeStamp = $horolog
		}
		set dteRate = +$get(pstrTimeStamp)
		set tmeRate = $piece(pstrTimeStamp,",",2)
		if tmeRate="" {
			set dteRate = dteRate+1
		}
		set tmeRate = +tmeRate
		
		set pstrTimeStamp = dteRate_","_tmeRate
		
		if $$$DateDiff(pstrTimeStamp,strStart) > 0 {
			if $data(^WWWWAEDATE(0,pstrFC,dteRate,tmeRate,1))=1 {  ;We have an exact match return 
				set dtePrev = dteRate
				set tmePrev = $order(^WWWWAEDATE(0,pstrFC,dteRate,tmeRate+1))
				if tmePrev="" {
					set dtePrev = $order(^WWWWAEDATE(0,pstrFC,dteRate+1))
					if dtePrev'="" {
						set tmePrev = $order(^WWWWAEDATE(0,pstrFC,dtePrev,""))
					}
				}
				
				set strRate = +dteRate_","_+tmeRate
				if (dtePrev'="") && (tmePrev'="") {
					set objConvRate = ^WWWWAEDATE(0,pstrFC,dtePrev,tmePrev,1)
				}
				
			} else {
				set strIndex = ""
				set blnQuit  = $$$NO
				for {
					set strIndex = $order(^WWWWAEDATE(0,pstrFC,strIndex)) quit:strIndex=""
	 
					if (strIndex=dteRate) {
						set strTimeIndex = ""
						for {
							set strTimeIndex = $order(^WWWWAEDATE(0,pstrFC,strIndex,strTimeIndex))
							quit:strTimeIndex=""
							
							set blnQuit = (tmeRate<=strTimeIndex)
							quit:blnQuit
						}
					}
					
					if strIndex>dteRate {
						set blnQuit      = $$$YES
						set strTimeIndex = $order(^WWWWAEDATE(0,pstrFC,strIndex,""))
					}
					quit:blnQuit
				}
				
				set objConvRate=""
				if (strIndex'="")&&(strTimeIndex'="") {
					set objConvRate=$get(^WWWWAEDATE(0,pstrFC,strIndex,strTimeIndex,1))
					set dtePrev=strIndex
					set tmePrev=$order(^WWWWAEDATE(0,pstrFC,strIndex,strTimeIndex),-1)
					if tmePrev="" {
						set dtePrev=$order(^WWWWAEDATE(0,pstrFC,strIndex),-1)
						if dtePrev'="" {
							set tmePrev=$order(^WWWWAEDATE(0,pstrFC,dtePrev,""),-1)
						}
					}
					
					set strRate=+dtePrev_","_+tmePrev
				}
			}
		}
	}
	if objConvRate'=""     ; FIXME : no operation
	
	quit $piece(objConvRate,Y,5)_$select(pblnReturnDateTime:Y_strRate,$$$YES:"")
	
	
GetDecimalPoints(pstrFC) 
	;-------------------------------------------------------------------------------
	; Get the number of decimal places for a currency
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 21-Feb-2006	RPW		SR14229: Created
	;-------------------------------------------------------------------------------
	new intDP,objConvRate
	
	set intDP = 2
	if pstrFC'="" {
		set objConvRate = $get(^WWWWAE(0,pstrFC,1))
		if objConvRate'="" set intDP = $piece(objConvRate,"~",8)
	}
	
	if intDP="" set intDP = 2
	
	quit intDP
	
]]></Routine>
</Export>