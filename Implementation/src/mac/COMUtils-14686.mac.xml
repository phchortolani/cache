<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMUtils" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMUtils
#include COMConst
#include WWWConst
#include COMSYS
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^COMUtils("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	; Common Utilities
	; 
	; See also : 
	;	COMUtilDate		Date/Time Utilities
	;	COMUtilStr		String Manipulation
	;	COMUtilGlo		Global Manipulation
	;	COMUtilForm		@netManager Form Utilities
	;	COMUtilClass	@netManager Class Utilities
	;	COMUtilError	Error Handling Utilities
	; 
	; History:
	; 18-Jan-2007	GRF		SR15387: Doco
	; 24-Jun-2005	RobertW	SR12690: Fixed up local calls to DecodeError to use the one on COMUtilError
	; 23-Feb-2005	GRF		SR11499: moved some routines to COMUtilClass
	;						COMUtilForm and COMUtilError
	; 05-Nov-2004	GRF		Rationalise Utility Types; moved some routines to
	;						COMUtilStr & COMUtilDate
	;-------------------------------------------------------------------------------

HideControl(YFORM,pidClassField,pidField,pblnHidden,pstrType="D")  ;SR18016
	;-------------------------------------------------------------------------------
	; Hide some controls based on 'Rules' including the group (FIELDSET) that the control
	; is contained in.
	; Warning: The group will disappear based on whether the first control disappears.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 07-Feb-2013	shobby		SESPE-467: Adjustment for firefox.
	; 01-Jun-2012	shobby		SR18027: More protection if CAPTION or CONTROL don't exist (Maybe
	;								on another page).
	; 01-Jun-2012	shobby		SR18027: Only hide the group if all fields are hidden.
	; 23-May-2012	shobby		SR18016: pstrType so that Manual fields can be hidden as well.
	; 23-Aug-2011	shobby		SR17784: Check that the fieldset object exists.
	; 16-Aug-2011	shobby		SR17784: Created
	;-------------------------------------------------------------------------------
	new strHidden,objWWW122


	;SR18027 if pblnHidden { set strHidden="none" } else { set strHidden="block" }
	;SR18027 if pstrType="D" set pidField=pidClassField																		 ;SR18016
	;SR18027 write "var obj=document.getElementById('Y"_pYFORM_pstrType_pidField_"').parentNode.parentNode.parentNode;"       ;SR18016
	;SR18027 write "obj.style.display='"_strHidden_"';"
	;SR18027 set objWWW122   = $get(^WWW122(0,pYFORM,pidField,1))
	;SR18027 if ($$$WWW122NewGroup(objWWW122)=1)||($$$WWW122NewGroup(objWWW122)=2) {
	;SR18027 	write "  var obj=getParent(obj,'FIELDSET');"
	;SR18027 	write "  if (obj!=null) obj.style.display='"_strHidden_"';"
	;SR18027 }

	;SR18027 quit
	
	if pblnHidden { set strHidden="none" } else { set strHidden="block" }
	if ($get(YUSERAGENT)'="MSIE") && (strHidden="block") set strHidden=""	;SESPE-467
	if pstrType="D" set pidField=pidClassField																		 ;SR18016
	write "var obj=document.getElementById('Y"_pYFORM_pstrType_pidField_"_CAPTION');"
	write "if(obj!=null) obj.style.display='"_strHidden_"';"
	write "var obj=document.getElementById('Y"_pYFORM_pstrType_pidField_"_CONTROL');"
	write "if(obj!=null) {"
	write "  obj.style.display='"_strHidden_"';"
	
	set objWWW122   = $get(^WWW122(0,pYFORM,pidField,1))
	if ($$$WWW122NewGroup(objWWW122)=1)||($$$WWW122NewGroup(objWWW122)=2) {
		&html<
			if ('#(strHidden)#'=='none') {
				var obj3;
				var blnHide=true;
				var intChildren=obj.parentNode.children.length;
				for (var i=0;i!=intChildren;i++) {
					obj3=obj.parentNode.children[i];
					if (obj3.id!='') {
						if (obj3.style.display!='hidden') {
							var blnHide=false;
						}
					}
				}
			} else {
				blnHide=true;
			}
			if (blnHide) {
				var obj1=getParent(obj,'FIELDSET');
				if(obj1!=null) {
					obj1.style.display='#(strHidden)#';
				}
			}
		>
	}
	write "}"
	quit
	
	 
SplitNumeric(pstrNumber,&pstrAlpha,&pstrDigits)
	;-------------------------------------------------------------------------------
	; Takes a input and splits the numeric from the digit components 
	;
	; P0006 > 6000P intPos=4	pstrAlpha = "P"		pstrDigits = "0006"
	; 00006 > 60000 intPos=5	pstrAlpha = ""		pstrDigits = "00006"
	; 00P06 > 60P00 intPos=2	pstrAlpha = "00P"	pstrDigits = "06"
	; ABCDE > EDCBA intPos=0	pstrAlpha = "ABCDE"	pstrDigits = ""
	; P6.01 > 01.6P intPos=4    pstrAlpha = "P"		pstrDigits = "6.01"
	;
	; Inputs:
	;	pstrNumber: The original "number" contains alpha/numeric data
	;
	; ByRef:
	;	pstrAlpha : The alphabetic portion (can contain numbers)
	;	pstrDigits: The numeric only portion
	;
	; Returns:
	;
	; History:
	; 09-May-2007	RPW		SR15514: Created
	;-------------------------------------------------------------------------------
	new intLength,intPos,loop,strChar,strNumber
	
	set intLength = $length(pstrNumber)
	set strNumber = $reverse(pstrNumber)
	
	set intPos=0
	for loop=1:1:intLength {
		set strChar=$extract(strNumber,loop)
		quit:('(strChar?1N))&&(strChar'=".")
		
		set intPos=loop
	}
	
	set intPos     = intLength-intPos
	set pstrAlpha  = $extract(pstrNumber,1,intPos)
	set pstrDigits = $extract(pstrNumber,intPos+1,intLength)
		
	quit
	
AddSeconds(pdteDate="",lngSeconds=0)
	;-------------------------------------------------------------------------------
	; 12-Jul-2005	shobby		Scheduler running from old namespaces still requires this link.
	;-------------------------------------------------------------------------------
	quit $$AddSeconds^COMUtilDate(pdteDate,lngSeconds)
	
DateDiff(pdteFirst="",pdteSecond="")
	;-------------------------------------------------------------------------------
	; 12-Jul-2005	shobby		Scheduler running from old namespaces still requires this link.
	;-------------------------------------------------------------------------------
	quit $$DateDiff^COMUtilDate(pdteFirst,pdteSecond)
	
GetDaysInMonth(pdteDate="")
	;-------------------------------------------------------------------------------
	; 12-Jul-2005	shobby		Scheduler running from old namespaces still requires this link.
	;-------------------------------------------------------------------------------
	quit $$GetDaysInMonth^COMUtilDate(pdteDate)
	
DisplayMessage(YBACK,YKEY,plstMessage,pstrAppend="",pblnNewLine=$$$YES,YSEITE="")
	;-------------------------------------------------------------------------------
	; Displays a linked warning message to the screen.
	;
	; Returns:
	;
	; History:
	; 15-Jul-2005	shobby	SR12786: Included YSEITE.
	; 07-Jun-2005	shobby	SR12408: Placed YFORM into the YBACK variable to correct problem
	;						pressing the back button.  Note: Won't work if hyperlink
	;						jumps to same form but different key. @netManager limitation.
	; 02-Jun-2005	PO		FIXME: SR:12050 quick workaround for FC mode display
	; 01-Jun-2005	shobby	SR12245: Created
	;-------------------------------------------------------------------------------
	if pblnNewLine WRITE YCR,"<br>"
	write "<A HREF="""_YAKTION_"EP=WWWFORM&amp;YFORM="_YBACK
	if YSEITE'="" WRITE "&amp;YSEITE="_YSEITE
	SET YBACK=YFORM_","
	DO ^WWWCGI
	write """><font size=2 color="_YRED_">"
	write $$$Text(plstMessage)_pstrAppend
	write "</font></A>"
	quit
	
GetAmount(pcurDebit,pcurCredit,pcurAmountBase,pstrCurrency,pcurAmountFC,pfltRate)
	;-------------------------------------------------------------------------------
	; TODO : Should identify ByRef inputs - routine doesn't appear to be called
	;        anywhere. Should it be part of COMSYSFC instead? <GRF>
	;-------------------------------------------------------------------------------
	new curCreditBase,curCreditFC,curDebitBase,curDebitFC
	
	if pcurAmountBase>0 {
		set curCreditBase = pcurAmountBase
		set curCreditFC   = +$get(pcurAmountFC)
		set curDebitBase  = 0
		set curDebitFC    = 0
	} else {
		set curDebitBase  = -pcurAmountBase
		set curDebitFC    = -$get(pcurAmountFC)
		set curCreditBase = 0
		set curCreditFC   = 0
	}
	
	if pstrCurrency'="" {
		set pcurDebit =curDebitBase _"@"_pstrCurrency_"@"_curDebitFC _"@"_pfltRate
		set pcurCredit=curCreditBase_"@"_pstrCurrency_"@"_curCreditFC_"@"_pfltRate
	} else {
		set pcurDebit =curDebitBase
		set pcurCredit=curCreditBase
	}
	quit $$$OK
	
	
Round(pcurAmount)
	;-------------------------------------------------------------------------------
	; Rounding routine currently employed system wide.
	; Will need to change depending on currency involved
	; 
	; History:	
	; 28-Mar-2003	Paul K	Created(Commented)
	;-------------------------------------------------------------------------------
	; *******************************************
	; FIXME : Should calls to this use Round^COMUtilNum instead which isn't hard coded to 2dp? <GRF>
	; *******************************************
	
	$$$LogR("Round",pcurAmount)
	
	quit $fnumber(pcurAmount,"",2)
	
	
GetColour(pstrParam,plngNumber)
	;-------------------------------------------------------------------------------
	; gets a color for an application Parameter
	; 
	; History:
	; 12-May-2006	RPW		SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
	; 15-Jul-2005	shobby	SR12754:Replaced LANGUAGE global (not always reliable)
	; 15-Mar-2004	Paul K	Added macro usage
	;-------------------------------------------------------------------------------
	new strColourNumber,strColour
	
	set strColour=""
	set pstrParam=$$$UPPER(pstrParam)
	if $data(^WWW101(0,pstrParam,SPRACHE,plngNumber,1)) {
		set strColourNumber=$$$WWW101ColorCode($get(^WWW101(0,pstrParam,SPRACHE,plngNumber,1)))
	}
	
	if $get(strColourNumber)'="" {
		if $data(^WWW100(0,"FARBE",SPRACHE,strColourNumber,1)) {
			set strColour=$get(^WWW100(0,"FARBE",SPRACHE,strColourNumber,1))
		}
	}
	quit strColour
	
GetEnumDescription(pstrParam="",plngNumber="",pblnSysParam=$$$NO)
	;-------------------------------------------------------------------------------
	; Gets the description of an application/system parameter
	; 
	; Inputs:
	; 	pblnSysParam		$$$NO	Application Parameter (WWW101)
	; 						$$$YES	System Parameter      (WWW100)
	; History :
	; 12-May-2006	RPW		SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
	; 15-Jul-2005	shobby	SR12754: Replaced LANGUAGE global (not always reliable)
	; 20-Dec-2004	GRF		SR10478: Extract from System Parameters as well as
	;						from Application Parameters; add defaults
	;-------------------------------------------------------------------------------
	new strDescription
	
	if $get(SPRACHE)="" do ^WWWVAR
	set strDescription = plngNumber
	set pstrParam      = $$$UPPER(pstrParam)
	
	if plngNumber'="" {
		if pblnSysParam {
			set strDescription=$$$WWW100Text($get(^WWW100(0,pstrParam,SPRACHE,plngNumber,1)))
		} else {
			set strDescription=$$$WWW101Text($get(^WWW101(0,pstrParam,SPRACHE,plngNumber,1)))
		}
	}
	
	quit strDescription
	
GetFullGlobalID(pstrId)
	;-------------------------------------------------------------------------------
	; History:
	; 05-Nov-2004	GRF		Convert dot to { form
	;-------------------------------------------------------------------------------
	new strResult
	
	set strResult=""
	if pstrId'="" {
		if +pstrId'=pstrId {
			set pstrId=""""_pstrId_""""
		}
		set strResult=YM_","_pstrId_",1"
	}
	quit strResult
	
	
IsList(pstrList)
	;---------------------------------------------------------------------------------
	; Determines whether a variable is a list or a string.
	; 
	; 
	; History:	
	; 03-Jun-2009	SCR		SR16603: Added $listvalid function for versio 2008.2.3
	; 29-Jan-2007	JW		SR15358: Add extra islist check. This is the best we have so far.
	; 02-Oct-2006	RPW		SRBR014006: Reverted below changes. Check for >253 characters.
	;						NOTES: 1) Will need to check if string length becomes > 
	;						     32000 characters
	;						  2) Cache >=5.1 support new list functions, this should
	;						     negate this routine entirely
	;						  3) Exceptions are basically for that purpose, unknown
	;						     issues, they are slow and do a lot of unnecessary work.
	; 01-Oct-2006	shobby	SRBR014006 Reverted previous change.  Did not always work.
	; 23-May-2005	RobertW	SR10256: Rewritten to not use an error. The error is expensive.
	; 28-Jun-2003	LW		Re-written to work
	; 28-Mar-2003	Paul K	Created(Commented)
	;---------------------------------------------------------------------------------
	new loop,blnList
	
	set blnList = $$$NO
	
	if ##class(%SYSTEM.Version).GetNumber()>2008.1 {         ; SR16603
		xecute "set blnList=$listvalid(pstrList)" ; Execute required so it will compile for older versions
	
	} else {
		if $$islist^%occRun(pstrList) {		//SR15358
			for loop=1:1:$length(pstrList) {
				if $ascii($extract(pstrList,loop))<8 {
					set blnList=$$$YES
					quit
				}
			}
		}
	}
	quit blnList
	
	/*
	;new dummy,blnList	
	;set blnList=$$$NO
	;if $length(pstrList)'>253 { // The minimum list size is 255 chars, 253 + pointer + type (for 8 bit).
	;	set dummy=$ascii($extract(pstrList,2))
	;} else {
	;set dummy=$ascii($extract(pstrList,4))
	;}
	;if (dummy<8) {
	;	set blnList=$$$YES
	;}
	;quit blnList
	
	new dummy
	set $ZTRAP="IsListErr"
	set dummy=$list(pstrList,1)
	quit $$$YES 
	*/
	
IsBase64(pstrText="",pblnDblCrypt=$$$NO)
	;---------------------------------------------------------------------------------
	; Determines whether a string is base64 encrypted
	; 
	; Inputs: pstrText     = String to be checked
	;         pblnDblCrypt = Expect Decoded String to be Crypted (ie. MD5 Encryption)
	; 
	; History:	
	; 24-Oct-2008	FIS		SR16058: No Decode Check if Encoded String is expected to be crypted
	; 							Check for Hieroglyphics changed (spec. chars >50% = hieroglyphics)
	; 23-Oct-2008	FIS		SR16058: Changed to work without Error catching
	; 21-Oct-2008	FIS		SR16058: Created
	;---------------------------------------------------------------------------------
	new strTemp,blnIsBase64,idx,strTemp2
	
	set blnIsBase64 = $$$NO
	set pstrText    = $translate(pstrText,$char(10,13))  //kill CR/LF
	
	if (pstrText '= "") && ($length(pstrText)#4 = 0) {  //valid string length ?
		
		set blnIsBase64 = $$$YES
		set strTemp     = pstrText
		if ($extract(pstrText,$length(pstrText)-1,$length(pstrText)) = "==") {  //remove 0 bytes
			set strTemp = $extract(pstrText,1,$length(pstrText)-2)
		
		} elseif ($extract(pstrText,$length(pstrText)) = "=") {        //remove 0 byte
			set strTemp = $extract(pstrText,1,$length(pstrText)-1)
		}
		for idx = 1:1:$length(strTemp) {                  //illegal value
			if '$find("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",$extract(strTemp,idx)) {
				set blnIsBase64 = $$$NO
				quit
			}
		}
		if (blnIsBase64 = $$$YES) && (pblnDblCrypt = $$$NO) {
			set strTemp = $system.Encryption.Base64Decode(pstrText)  //Verify Decode Result
			if (strTemp '= "") {  //OriginalText Or Hieroglyphics  ?
				set strTemp2 = $translate(strTemp,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 ÜÄÖüäöß][\}{|~.,;:()@#$%^°&*-_=+<>?/´`'"_""""_$CHAR(128,10,13))
				if ($length(strTemp)-$length(strTemp2) '> 0) {
					set blnIsBase64 = $$$NO  //Not 1 useful character
				
				} elseif ($length(strTemp2) > ($length(strTemp)/2)) {
					set blnIsBase64 = $$$NO  //more than 50% special characters = hieroglyphics
				}
			}
		}
	}
	quit blnIsBase64
	
RebuildIndexes(pidClass)
	;---------------------------------------------------------------------------------
	;---------------------------------------------------------------------------------
	new idLog,strStatus,idClass
	
	set idLog=""
	set strStatus=$$StartLog^COMLog($$DecodeError^COMUtilError($listbuild("Com00060",pidClass)),.idLog)  ; Reindexing classes starting with : %1
	if pidClass="" {
		set idClass=""
	} else {
		set idClass=$order(^WWW001(0,pidClass),-1)
	}
	
	for {
		set idClass=$order(^WWW001(0,idClass))
		quit:idClass=""
		quit:$extract(idClass,1,$length(pidClass))'=pidClass
		quit:strStatus'=$$$OK
		
		set strStatus=$$AddMessage^COMLog(idLog,$$DecodeError^COMUtilError($listbuild("Com00061",idClass)))  ; Starting reindexing of class : %1
		do START1^WWWSORTGEN(idClass,0)
	}
	
	if strStatus=$$$OK set strStatus=$$AddMessage^COMLog(idLog,$$DecodeError^COMUtilError($listbuild("Com00062",pidClass)))  ; Reindexing complete for classes starting with : %1
	quit strStatus
	
GetNextNumber(pidClass,YLOCATION)
	;-------------------------------------------------------------------------------
	;  WWW1280 : Sequence Number Data Input
	;-------------------------------------------------------------------------------
	if (pidClass'="") && (YLOCATION'="") {
		if $get(^WWW1280(YM,pidClass,YLOCATION,1))="" {
			set ^WWW1280(YM,pidClass,YLOCATION,1)="LOCATION:0"
		}
	}
	quit $$^WWWNEXT(pidClass)
	
DefaultSequenceNo()
	;-------------------------------------------------------------------------------
	; 01-Sep-2014	shobby	ALPHAUP-137: SeqNo variable had been spelled incorrectly
	; 25-Jun-2014	shobby	CORE-385.19: DCM routines may not exist.
	;-------------------------------------------------------------------------------
	new SeqNo
	
	; try to use Site identifier	
	set SeqNo="" ;CORE-385.19 ;ALPHAUP-137
	if ##class(%Library.Routine).Exists("COMDCMUtilities") set SeqNo=$$getCurrentLocation^COMDCMUtilities() ;CORE-385.19
	if (SeqNo="") {
		; otherwise use Machine name
		set SeqNo=$$^WWWUMLAU($zutil(110),1)
	}
	set SeqNo=SeqNo_"0000000"
	
	quit SeqNo
	
GetIDPart(pstrGlobal,pintIndex)
	;-------------------------------------------------------------------------------
	; Function to extract the indexed component out of a global reference
	; 
	; History:
	; 20-Jun-2003	shobby	Moved from SYSUtils
	; 02-Jun-2003	shobby	Creation
	;-------------------------------------------------------------------------------
	
	; TODO : Check if this is required - can use $QS / $QSUBSCRIPT
	;        The only difference is that $QS will strip any enclosing quotes
	;        while this routine passes them back.
	;        (can then check if +x'=x to wrap in quotes if required)
	
	new strPart
	
	set strPart = $piece(pstrGlobal,"(",2)
	set strPart = $extract(strPart,1,$length(strPart)-1)
	set strPart = $piece(strPart,",",pintIndex)
	
	quit strPart
	
	
NotifyAdmin(pstrSource,pstrMsg)
	;-------------------------------------------------------------------------------
	; Notify the Administrators with a message
	; optionally include a link to a form and key
	; 
	; History:
	; 23-Mar-2007	GRF		SR15482: Use intLine and strNewLine with "<PRE>"
	; 21-Mar-2007	GRF		SR15482: replace to package message in ^WWWSOR
	; 21-Mar-2007	GRF		SR15046: Don't use default if no host is set up.
	; 20-Mar-2007	GRF		SR12293: use common function and restrict duplications
	; 20-Mar-2007	GRF		SR15478: Truncate Link message
	; 16-Oct-2006	JW		Added DEVMODE dump
	; 15-Mar-2005	Paul K	Added macro usage
	;-------------------------------------------------------------------------------
	new arrEmail,idMessage,idUserAccess,idUser,intLine,intUser,lstUsers,objUser,strEmailAddr,strNewLine,strStatus,strSubject,YI
	
	if $$$DEVMODE {
		$$$Dump
	}
	set strNewLine = "<BR>"
	set strStatus = $$$OK
	set idMessage = $$Allocate^WWWMAILS()
	
	; TODO : pstrMsg could be passed as actual strStatus list and then be converted
	;        to language-based text relevant to each recipient's specified language.  <GRF>
	
	set intLine = 0
	//SR15482: vvv 
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"<PRE>"
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"Error occurred in "_pstrSource
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"Error returned is "_pstrMsg
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"     Host: "_$zutil(110)
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"Namespace: "_$zutil(5)
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"     User: "_$get(YBED)
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"  Session: "_$get(YUSER)
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"     Time: "_$zdatetime($horolog)
	//SR15482: ^^^
	
	if ($get(YFORM)'="") {
		set YI=$get(YAKTION)_"EP=WWWFORM&amp;YFORM="_YFORM_"&amp;YKEY="_$get(YKEY)
		if ($get(YPARA)'="")  set YI=YI_"&amp;YPARA="_YPARA
		if ($get(YSEITE)'="") set YI=YI_"&amp;YSEITE="_YSEITE
		do VAR^WWWCGI
		set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"       Link: "_YI
	}
	set ^WWWSOR(idMessage,$increment(intLine)) = strNewLine_"</PRE>"
	
	
	set strSubject = "Error Report from "_pstrSource
	
	; Send to each administrator; once only to each e-mail address
	set lstUsers=$$GetDataBaseAdministrator^COMUtilUser()
	for intUser=1:1:$listlength(lstUsers) {
		set idUser = $listget(lstUsers,intUser)
		continue:idUser=""
		
		set objUser=$get(^WWW013(0,idUser,1))
		set strEmailAddr = $$$WWW013EMailAddress($get(^WWW013(0,idUser,1)))
		if (strEmailAddr'="") {
			if '$data(arrEmail(strEmailAddr)) {
				set arrEmail(strEmailAddr) = ""
				set strStatus=$$PackageMail^WWWMAILS(idMessage,strSubject,strEmailAddr,$$$WWW013Name(objUser))
			}
		}
	}
	
	do Deallocate^WWWMAILS(idMessage)
	quit strStatus
	
	
checkPatternMatch(pattern,value)
	;-------------------------------------------------------------------------------
	; check whether the pattern matches the value
	; 
	; History:
	; 19-Jun-2008	GRF		SR15787: Use Boolean Macros
	;-------------------------------------------------------------------------------
	new match,tmpPattern,numWildcards,cnt
	
	set match = $$$NO
	if (pattern'=value) {                             ; wildcard pattern
		set numWildcards = $length(pattern,"*")
		set tmpPattern   = ""
		for cnt = 1:1:numWildcards {
			set:(cnt'=1) tmpPattern=tmpPattern_".E"
			if ($piece(pattern,"*",cnt)'="") {
				set tmpPattern = tmpPattern_"1"""_$piece(pattern,"*",cnt)_""""
			}
		}
		if (value?@tmpPattern) {                      ; found a match
			set match = $$$YES
		}
	} else {
		set match = $$$YES                            ; direct match
	}
	
	quit match
	
	
LastData(Form="",Piece="",Type="M")
	;-------------------------------------------------------------------------------
	; Last Data from ^WWWDATEN
	;
	; Returns:
	;
	; History:
	; 05-Mar-2004	SCR		Created
	;-------------------------------------------------------------------------------
	new Data,Date,User
	
	set Data=""
	set Date=+$horolog
	set User=$get(YUSER)
	
	if Form="" set Form=" "
	if User="" set User=" "
	if Type="" set Type="M"
	
	set Data=$piece($get(^WWWDATEN(YM,Date,User,Form,Type,1)),"~",Piece)
	
	if Data="" {
		set Data=$piece($get(^WWWDATEN(YM,Date,User,Form,Type,2)),"~",Piece)
	}
	
	quit Data
	
	
GetNumNodes(pstrRootNode,pintMax=1E16)
	;-------------------------------------------------------------------------------
	; Get the number of data nodes of a particular subsript
	; 
	; e.g. Pass in "^INAUFP(0,1234" would return the number of line in an order.
	;
	; Returns:Integer
	;
	; History:
	; 01-Feb-2006	RPW		SR13710: Removed the default value of 1000, please pass in the default
	; 27-Oct-2004	Paul K	Created
	;-------------------------------------------------------------------------------
	new intCount,intLength,strSearchLoop
	
	set intCount=0
	set intLength=$length(pstrRootNode)
	set strSearchLoop=pstrRootNode_")"
	
	for {
		set strSearchLoop=$query(@strSearchLoop)
		quit:$extract(strSearchLoop,1,intLength)'=pstrRootNode
		
		set intCount=intCount+1
		quit:intCount=pintMax
	}
	
	if intCount=pintMax {
		set intCount=intCount_"+"
	}
	
	quit intCount
	
	
UserHasAccess(pstrUserID,pstrAccessLevels,pstrDelim=";",pblnDefault=$$$YES)
	;-------------------------------------------------------------------------------
	; Given a user name and string of access codes (semi-colon delimited), does
	; this user have the given access levels?
	; 
	; pstrUserID       : The User ID we are checking (eg, STEVES, MARIA, SHOBBY, etc.)
	; pstrAccessLevels : The string of access levels to check this user for (eg, 1;3;5).
	; 
	; if pstrUserID is not passed in, defaults to the current user (the YBED variable.)
	;
	; Returns: boolean ($$$YES/$$$NO)
	;
	; History:
	; 10-Spe-2012	SCR		SR18112: Add Default parameter
	; 26-Jul-2007	GRF		SRBR014575: Replace idx with loop!
	; 15-Sep-2005	SS / JW	SR13502: Only match one access level
	; 31-Jan-2005	Steve S	Created
	;-------------------------------------------------------------------------------
	new blnHasAccess,idUser,strViewAccess,objUser,strUserAccess,loop,strAccess
	
	;set blnHasAccess=$$$NO
	set blnHasAccess=pblnDefault ;SR18112

	set idUser=$get(pstrUserID)
	if idUser="" set idUser=$get(YBED)
	 
	set strViewAccess=$get(pstrAccessLevels)
	
	if (idUser'="") {
		if strViewAccess="" { 
			;set blnHasAccess=$$$YES
			set blnHasAccess=pblnDefault ;SR18112
		} else {
			set objUser=$get(^WWW013(0,idUser,1))
			set strUserAccess=$translate($$$WWW013UserAccess(objUser),";",pstrDelim)
			set strViewAccess = pstrDelim_strViewAccess_pstrDelim
			
			for loop=1:1:$length(strUserAccess,pstrDelim) {
				quit:(blnHasAccess)
				
				set strAccess=$piece(strUserAccess,pstrDelim,loop)
				if $find(strViewAccess,pstrDelim_strAccess_pstrDelim) {	
					set blnHasAccess=$$$YES ;One match is sufficient
				}
			}
		}
	}
	
	quit blnHasAccess
	
	
PopulateComboBox(pstrForm, pstrFieldNumber, pstrValue="", pstrFieldType="D", pstrRelationClass, pstrRelationKeys="",pstrFilter="") ;CORE-114
	;-------------------------------------------------------------------------------
	; This method is used to change a Datafield into a Combo Box. The options for
	; the combo box will be based on the relation class and on the relation primary
	; keys. This works exactly like on the relation of the data field definition.
	;
	; Params:	pstrForm					- form name
	;			pstrFieldNumber				- manual or data field number
	;			pstrValue					- value to be stored in field
	;			pstrFieldType				- field type - "M" or "D"
	;			pstrRelationClass			- the relation class used to build the combo
	;			pstrRelationKeys	- the relation primary keys used together with the relation class
	;			
	; History:
	; 21-Nov-2013	shobby	SESPE-601: removed KEYBUILD. Would turn variables such as SPRACHE into strings
	; 29-May-2013	shobby	CORE-114: New 'Filter' field to limit results collected by 'Rules'
	; 27-May-2013	shobby	CORE-110: Limit list based on conditions.
	; 26-Jul-2007	GRF		SRBR014575: Replace unnecessary indirect reference;
	;							replace idx with loop and increment as part of FOR
	;							command; replace objRecord with strData.
	; 18-Jul-2007	Frank	SRBR014575: Created
	;-------------------------------------------------------------------------------
	new idClass,idCompany,loop,objClass,strClassDef,strClassLoop,strCommand,strData,strYField
	new intLine,blnAdd,YKEY ;CORE-110.1 ;CORE-114
	
	set strYField = "Y"_pstrForm_pstrFieldType_pstrFieldNumber
	
	set objClass = $get(^WWW001(0,pstrRelationClass,1))
	if +$$$WWW001SharedFile(objClass) {
		set idCompany = 0
	} else {
		set idCompany = YM
	}

	// If the user set the primary keys for the relation database.
	if pstrRelationKeys '= "" {
		;SESPE-601 set pstrRelationKeys=$$^WWWKEYBUILD(pstrRelationKeys)
		set strClassDef = "^"_pstrRelationClass_"("_idCompany_","_pstrRelationKeys_",idClass"
	
	} else {
		set strClassDef = "^"_pstrRelationClass_"("_idCompany_",idClass"
	}
	set strClassLoop = "set idClass = $order("_strClassDef_"))"
	// Get the values to be populated.
	write "var arrValues = new Array();"
	write "var arrKeys = new Array();"
	set idClass = ""
	set intLine=-1																			  ;CORE-110.1
	for loop=0:1 {
		xecute strClassLoop
		quit:idClass=""
		set blnAdd=$$$YES ;CORE-114
		if $extract(pstrFilter)="@" {
			set YKEY=idClass
			xecute "set blnAdd="_$extract(pstrFilter,2,$length(pstrFilter)) 
		}
		if blnAdd { ;CORE-110.1 ;CORE-114
			set intLine=$increment(intLine)													  ;CORE-110.1
			set strData    = ""
			set strCommand = "set strData = $piece($get("_strClassDef_",1)),Y,1)"
			xecute strCommand
		
			; TODO Don't display primary key if checked off.
			write "arrValues["_intLine_"] = '"_idClass_" - "_$zconvert(strData,"o","JS")_"';" ;CORE-110.1
			write "arrKeys["_intLine_"] = '"_idClass_"';"									  ;CORE-110.1
		}
	}
	write "PopulateComboBox('"_pstrRelationClass_"','"_pstrRelationKeys_"','"_YHTMFORM_"','"_strYField_"',arrValues,arrKeys,'"_pstrValue_"');"
 
	quit
	
	
PopulateDataField(pstrForm,pstrFieldNumber,pstrValue,pstrFieldType="D",&pYFELD="",pblnDoEvent=$$$YES)
	;-------------------------------------------------------------------------------
	; NOTE: Please try and use this method with pblnDoEvent=$$$NO because the aim
	; will be to remove the call to EventValue!!
	;-------------------------------------------------------------------------------
	; 
	; Populate a data field with any data so that it will be "modified" allowing
	; the save data to work.
	; E.g. Pass in "FINAPInv",26,"Robert Wuttke" would update the field
	;		YFINAPInvD26 with the value Robert Wuttke
	;
	; Params:	pstrForm		- form name
	;			pstrFieldNumber	- manual or data field number
	;			pstrValue		- value to be stored in field
	;			pstrFieldType	- field type - "M" or "D"
	;			pYFELD			- can update pYFELD with value as well (reference)
	;			pblnDoEvent		- $$$YES - do call WWWEVENT which does OnBlurs etc
	;							  $$$NO - just store and display - no event.
	;							  
	;			Note: In the future, it may be appropriate to remove the parameter
	;			pblnDoEvent, and never do the event.
	;
	; Returns: Nothing
	; 
	; Caveat: Currently only works for text/memo fields.
	;
	; History:
	; 30-Apr-2013	shobby	CORE-88: Reset _oldvalue to detect later changes by user entry.
	; 08-Nov-2012	shobby	SR18182: WWW2 could now be a DIV not a FORM.
	; 21-Jun-2012	shobby	SR18026: Call to Fieldsize on type 7. Commented added 21-Sep to aid in patching.
	; 23-May-2012	shobby	SR18016: Optionally blur from the updated control when Manual Field
	; 07-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 31-Jan-2008	shobby	SRBR014861: Correct the screen update values.
	; 22-Aug-2007	shobby	SRBR014618: Get a value for YDECIMALLEN (Used in WWWTR)
	;  9-Dec-2005	JW		SR13195: Removed unecessary call
	; 03-Nov-2005	RPW		SR13085: Make the manual field update the pYFELD parameter
	;						as well. Useful for YMFELD
	; 17-Jun-2005	PO		Only use AmountForCurrentMode if type is currency
	; 15-Jun-2005	PO		SR:12626 Display right currency form forms current mode
	; 09-Jun-2005	shobby	Display the save changes message.  SR12408
	;  9-May-2005	JW		SR12309 - pblnDoEvent param added
	;  4-Mar-2005	JW		Change pstrClass to pstrForm. Get Class.
	;						Convert the value for display
	; 03-Mar-2005	Paul K	Modified to use with YES/NO fields.
	; 18-Feb-2005	JW		Use pstrClass instead of YFORM. Save to YMFELD.
	; 28-Dec-2004	RW		Created (SR10061)
	;-------------------------------------------------------------------------------
	new class,showVal,strModifier,strYField,type,YDECIMALLEN
	
	quit:pstrForm=""
	
	set class = $$$WWW120ClassUsedInForm($get(^WWW120(0,pstrForm,1)))
	
	set YDECIMALLEN=$$^WWWDECIMALLEN(pstrForm,pstrFieldNumber)
 
	set strModifier="value"
	set type = $$$WWW003InputType($$GetRelation^COMViewUtils(class,pstrFieldType_pstrFieldNumber,pstrForm))
	if (type = 2) {  ;yes/no field
		set strModifier="checked"
		if pstrValue {
			set showVal="true"
		} else {
			set showVal="false"
		}
	} elseif type = 8 {
		set showVal = "'"_$zconvert($$GetLiteral^WWWTR(type,$$AmountForCurrentMode^COMUtilCurrency(pstrValue,pstrForm)),"o","JS")_"'" ; Set display value.
	} elseif type =7  {
		set showVal = "'"_$zconvert($$FieldSize(pstrForm,pstrFieldNumber,$$GetLiteral^WWWTR(type,pstrValue)),"o","JS")_"'" ; Set display value.
	} else {
		set showVal = "'"_$zconvert($$GetLiteral^WWWTR(type,pstrValue),"o","JS")_"'" ; Set display value.
	}
	
	set strYField="Y"_pstrForm_pstrFieldType_pstrFieldNumber
	;set blnNotInHyperEvent = $$$NO
	;if '$$$InHyperEvent {
	;	set blnNotInHyperEvent = $$$YES
	;	write "<script type='text/javascript'><!--"_$$$CRLF
	;}
	;SR18182 write "document.WWW2."_strYField_"."_strModifier_"="_showVal_";" ; TODO: **** if save server data not checked on form then WWW2 form will not exist, could this ever be a problem ? should YHTMFORM be used instead. ****
	write "document.getElementById('"_strYField_"')."_strModifier_"="_showVal_";" ;SR18182 :Should fix previous comment.
	write "document.getElementById('"_strYField_"').setAttribute('_oldValue','"_$$$JSText(showVal)_"');" ;CORE-88
	;if blnNotInHyperEvent {
	;	write $$$CRLF_"//-->"_$$$CRLF_"</script>"
	;}
	
	; This line is the onblur event on the field which enables the data to be saved.
	
	if pstrFieldType="M" {
		set $piece(^WWWDATEN(YM,+$horolog,YUSER,pstrForm,"M",1),Y,pstrFieldNumber) = pstrValue
		s]]><![CDATA[et $piece(pYFELD,Y,pstrFieldNumber)=pstrValue ; SR13085
		if pblnDoEvent {
			write "EventValue('"_YUCI_"','"_YUSER_"','"_pstrForm_"','FIX','"_strYField_"','"_pstrValue_"','2','NOVALUE');"	
		}	
		
	} else {
		set $piece(pYFELD,Y,pstrFieldNumber)=pstrValue
		
		if pblnDoEvent {
		;	write "EventValue('"_YUCI_"','"_YUSER_"','"_YFORM_"','FIX"_YKEY_"','"_strYField_"','"_$zconvert(pstrValue,"o","JS")_"','2','NOVALUE');"
			
			;BR014861 vvv To rollback replace 2nd line with first line
		;	write "EventValue('"_YUCI_"','"_YUSER_"','"_pstrForm_"','FIX"_YKEY_"','"_strYField_"','"_$zconvert(pstrValue,"o","JS")_"','2','NOVALUE');"		
			write "EventValue('"_YUCI_"','"_YUSER_"','"_pstrForm_"','FIX"_YKEY_"','"_strYField_"',"_showVal_",'2','NOVALUE');"		
			;BR014861 ^^^
			
			;The following line can replace the line above and is guaranteed to be relative to the current page displayed.
			;write "with (document.WWW) { EventValue(YUCI.value,YUSER.value,'"_pstrForm_"','FIX"_YKEY_"','"_strYField_"','"_$zconvert(pstrValue,"o","JS")_"','2','NOVALUE'); }"
		} else {
			set $piece(^WWWDATEN(YM,+$horolog,YUSER,pstrForm,"D",1),Y,pstrFieldNumber) = pstrValue
		}
	}
	quit
	
FieldSize(YFORM,YBBN,pstrValue)
	;-------------------------------------------------------------------------------
	; Limits the returned result to the specified length
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 21-Jun-2012	shobby		SR18026: Created
	;-------------------------------------------------------------------------------
	new strValue,objWWW122

	set objWWW122=$$Get^WWW122(YFORM,YBBN)
	if $$$WWW122FieldSize(objWWW122)'="" {
		set pstrValue=$extract(pstrValue,1, $$$WWW122FieldSize(objWWW122)) ;SR18026
	}
	quit pstrValue


UpdateFieldFormat(pstrObjectName,pstrPropertyName,pstrValue="")
	;-------------------------------------------------------------------------------
	; Update a data field format. Pass in the fully formed field, ie YFINAPInvD1
	; and the object, ie style.backgroundColor and then the value.
	;
	;		js function "PrepareUpdate" is defined in WWWFORM8
	; 
	; Returns: Nothing
	; 
	; History:
	; 24-Jun-2010	SCR		SR17348: Quit if Mobile (PDA)
	; 27-Apr-2007	RPW		SRBR014310: Make the updates just a single call to a javascript function
	; 09-Apr-2007	shobby	SRBR014409:Stringent checking to see if the object exists.
	;						TODO:To improve performance move this testing in to the UpdateFieldFormat function.
	; 08-Sep-2005	shobby	SR13455: Watched JW put in a YHTMFORM test.
	; 13-Jul-2005	JW		SR12615: Use YHTMFORM. Call function if not true/false
	; 15-Mar-2005	JW		Added pString parameter - to add quotes.
	; 03-Jan-2005	RobW	Created (SR10061)
	;-------------------------------------------------------------------------------
	quit:($get(pstrPropertyName)="")||(pstrObjectName="")||($get(YHTMFORM)="")
	if ($get(%request)'="") && $find($get(%request.CgiEnvs("HTTP_USER_AGENT")),"Windows CE") {  ;SR17348
		quit 
	}
	;TODO Should have some sort of caching here... don't write to the screen if nothing has changed.
	;if YBED["SHOBBY" set ^zzSCH($i(^zzSCH))="PrepareUpdate('"_YHTMFORM_"','"_pstrObjectName_"','"_pstrPropertyName_"','"_pstrValue_"');"
	write "PrepareUpdate('"_YHTMFORM_"','"_pstrObjectName_"','"_pstrPropertyName_"','"_pstrValue_"');"
	quit
	
	
ResetFieldFormat(pstrObjectName,pstrPropertyName)
	;-------------------------------------------------------------------------------
	; Reset a data field format. Pass in the fully formed field, ie YFINAPInvD1
	; and the object, ie style.backgroundColor and then the value.
	;
	; Returns: Nothing
	; 
	; History:
	; 24-Jun-2010	SCR		SR17348: Quit if Mobile (PDA)
	; 08-Sep-2005	shobby	SR13455: Don't write when redrawing form, YHTMFORM is not defined.
	; 13-Jul-2005	JW		SR12615: Created
	;-------------------------------------------------------------------------------
	quit:pstrPropertyName=""
	quit:pstrObjectName=""
	quit:$get(YHTMFORM)="" ;SR13455
	
	$$$LogR("ResetFieldFormat",pstrObjectName_"<"_pstrPropertyName_"<")
	
	if ($get(%request)'="") && $find($get(%request.CgiEnvs("HTTP_USER_AGENT")),"Windows CE") { ; SR17348
		quit
	}
	
	write "ResetFieldFormat('document."_YHTMFORM_"."_pstrObjectName_"','"_pstrPropertyName_"'); "
	
	quit
	
	
writeOutScript(strScript="",strScriptType="type='text/javascript'")
	;-------------------------------------------------------------------------------
	; TODO: Use attachEvent instead of dodgy setTimeout
	; SR11188
	;-------------------------------------------------------------------------------
	write "<script "_strScriptType_"><!--",!
	write "function pjoAfterFormLoad() {",!
	write strScript,!
	write "}",!
	write "window.setTimeout('pjoAfterFormLoad()',500);",!
	;write "document.body.attachEvent('onload',pjoAfterFormLoad);",!
	write "// -->",!
	write "</script>",!
	
	quit
	
	
ExecuteCode(pstrCode)
	;-------------------------------------------------------------------------------
	; Attempt to execute the code and log an error on failure.
	; 
	; Frequent attempts to check subroutines that are validly not present so don't
	; record those of them as errors.  Would be nice to distinguish between real
	; errors and expected "not found".
	;
	; Returns:
	;
	; History:
	; 02-May-2007	GRF		SR15508: Make sure this error handler is called.
	;  6-Oct-2005	JW		SR11573: Quit with "exists" boolean
	; 15-Feb-2005	RobertW	Do not log NOLINE errors at all.
	; 03-Feb-2005	RobertW	Modified to show the error on the screen except for
	;							NOLINE or NOROUTINE errors
	; 28-Jan-2005	RobertW	Created (SR10061)
	;-------------------------------------------------------------------------------
	set $ztrap="ExecuteCodeError^COMUtils"
	xecute pstrCode
	quit $$$YES
	
ExecuteCodeError  ; Internal Tag
	new blnExists,strError,strUser
	
	set $ztrap=""
	
	set strError=$zerror
	
	if '$find(strError,"<NOLINE>") && '$find(strError,"<NOROUTINE>") {
		set blnExists = $$$YES
		
		if ($get(^DebugExecuteCode,0)'=0) {   ; SR16315 moved up
			set strUser = $get(YBED,"UNKNOWN")
			set ^ExecuteCodeError(strUser,$increment(^ExecuteCodeError(strUser)),$zdatetime($horolog,3),"Code")  = pstrCode
			set ^ExecuteCodeError(strUser,$increment(^ExecuteCodeError(strUser)),$zdatetime($horolog,3),"Error") = strError
		}
		
		// If the Routine doesn't exist or the Routine does, but the Label/Subroutine/Function doesn't,
		// let the user know with a popup.
		
		; "Code: ### Error: ###"
		set strError=$$DecodeError^COMUtilError($listbuild("Com00160"))_" "_$zconvert(pstrCode,"o","JS")_"\r\n"_$$DecodeError($listbuild("Com00161"))_" "_$zconvert(strError,"o","JS")
		write "alert('"_strError_"');"
		
	} else {
		set blnExists = $$$NO
	}
	
	quit blnExists
	
	
KillChildren(pidClass,pstrKeys)
	;-------------------------------------------------------------------------------
	; Kill all the child nodes of a global reference
	;
	; Params:	pidClass - @net class id, eg: "WWW124"
	;			pstrKeys - parent key, eg: "<form>,<language>"
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	;  6-Jul-2006	JW		Get @Net key not all keys, keybuild
	; 28-Apr-2006	JW		SR14508: Created
	;-------------------------------------------------------------------------------
	new strGlobal,query,strStatus
	
	set strStatus=$$$OK
	set strGlobal = "^"_pidClass_"("_$$$WWWYM(pidClass)_","_$$^WWWKEYBUILD(pstrKeys)_")"
	
	$$$Query(strGlobal,query)
		set strStatus = $$KILL(pidClass,$$$QueryANKey(query))
		quit:$$$ISERR(strStatus)
	$$$End
	quit strStatus
	
	
GetScanDelim()
	;-------------------------------------------------------------------------------
	; Get the delimiter for the Scan Data
	; Usage : #include COMSYS
	;         set strDelim = $$$ScanDelim
	;
	; Returns: Scan delim char
	;
	; History:
	; 20-Jul-2009	PPP		SR16773:Creation
	;-------------------------------------------------------------------------------
	new strDelim
	
	set strDelim = "@"
	if $get(^SysSetup("ScanDelim"))'="" set strDelim = $get(^SysSetup("ScanDelim"))
	quit strDelim	
	
	
	;********************************************************************
	; Relocated to COMUtilClass - please redirect calls to these routines
	;********************************************************************
	
KILL(pstrClass,pid)
	
	; Revised code in ^COMUtilClass             <<<<<<<<<<<<<<<<<<<<<<<<<<<
	
	;-------------------------------------------------------------------------------
	; WWWKILL Wrapper  -  see also DCMEvent : pidClass_"Kill"
	; 
	; Calling WWWKILL within a WWWKILL will fail because YFORM is not scoped
	;
	; Returns:
	;
	; History:
	; 04-Sep-2006	JW		SR14979: New YFELD. Not newed in WWWKILL.
	; 26-Apr-2006	SC		SR14414: Return strStatus from WWWKILL. Used to return VARHooks error. 
	; 01-Jul-2004	shobby	Creation (Copied from FINSYS)
	;-------------------------------------------------------------------------------
	new strStatus,YFELD,YFORM
	
	set YFORM     = pstrClass
	set strStatus = $$^WWWKILL(pstrClass,pid)
	
	quit strStatus
	
Save(Class,Key,Data,pblnLock,pblnBlockEvent=$$$NO,pblnDoOnBeforeSave=$$$YES)
	
	; Revised code in ^COMUtilClass             <<<<<<<<<<<<<<<<<<<<<<<<<<<
	; 
	; TODO : <GRF> Add extra parameter to pass pblnDoOnBeforeSave to WWWSPEI as
	;              Argument 8 (Default $$$YES)
	; 
	;-------------------------------------------------------------------------------
	; WWWSPEI Wrapper  -  see also DCMEvent : pidClass_"Save"
	; 
	; History:
	; 17-Feb-2014	shobby	SESDF-1095: pblnDoOnBeforeSave
	; 27-Jul-2009	GRF		SR16602: use $$$MakeStatus
	; 31-Jul-2008	Luke	SR15814: added "0 " to the return status 
	; 13-Apr-2006	SC		SR14414: Pass strStatus to WWWSPEI, gives VAR code an
	;							option to return a custom error message.
	; 17-Feb-2006	RPW		SR13697: If this a grid form do not overwrite the lock.
	; 09-Jun-2005	Steve S	Use $get for YKEY
	; 18-Mar-2005	GRF		SR10478 : Include parameter to stop WWWSPEI putting
	;							message on DCM Queue.
	; 19-Jan-2005	Steve S	Added $$$OK macro usage for Status	
	; 19-Aug-2004	SCR		Copied from FINSYS
	; 27-Feb-2004	shobby	Set default locking to 0 but not allow locking of 1
	;							when Class=YFORM
	; 26-Feb-2004	shobby	Returned default locking to 1 but override with 0 when
	;							Class=YFORM (Awaiting SR discussion with Germany 
	;							before finalising this)
	; 09-Jan-2004   lwaugh	Ensured Lock flag is passed to WWWSPEI
	; 07-Jul-2003	SCR		Added Lock Option, New YVOR
	;-------------------------------------------------------------------------------
	new Status,YVOR,objClass,strStatus
	
	if $get(pblnLock)'=$$$YES {
		set pblnLock = $$$NO
	
	} else {
		if Key=$get(YKEY) {
			set objClass = $get(^WWW120(0,Class,1))
			if ($get(YFORM)'="")                                &&
			   ($$$WWW120ClassUsedInForm(objClass)=$get(YFORM)) &&
			   ($$$WWW120FormType(objClass)'=12)                   {
				
				set pblnLock=$$$NO
			}
		}
	}
	
	new YFORM  ;*** Must be after the test that not saving to the currently displayed record 
	
	set YFORM = Class
	set Status = $$^WWWSPEI(Class,Key,Data,pblnLock,pblnBlockEvent,,.strStatus,pblnDoOnBeforeSave) ;SESDF-1095
	
	if Status'=$$$OK {
		if $$$ISERR(strStatus) {
			set Status = strStatus  // used if returning an error via VARHook code 
		
		} else  {
			// FIXME : A "Fin" language text in COM?
			set Status = $$$MakeStatus("Fin00212",Class,Key,Status)    ;SR15814: "System save failed, Class:%1 Key:2 Error%3"
			// FIXME : Return more meaningful error messages instead of 0, 9, etc.
		}
	}
	
	quit Status
	

	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;
	;                                                                              ;
	;                 O B S O L E T E   S U B R O U T I N E S                      ;
	;                                                                              ;
	;                 Please redirect calls to these routines                      ;
	;                                                                              ;
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
	
	
	;-------------------------------------------------------------------------------
	;  OBSOLETE : $$$Index has been redefined - use that
	;             or a direct reference to COMUtilIndex if necessary
	;-------------------------------------------------------------------------------
Index(pstrVal="",pidClass="")					          ;CORE-303
	quit $$Index^COMUtilIndex(pstrVal,pidClass) ;BR014941 ;CORE-303
	
	
	;********************************************************************
	; Relocated to COMUtilForm - please redirect calls to these routines
	; Check that parameters are initialised if defaults are not present
	; in replacement tag.
	;********************************************************************
 
GoToForm(pstrForm="",pidKey="",plngPage="",pstrParam="",pblnOpenNewWindow=$$$NO,pstrWindowName="")
	do GoToForm^COMUtilForm(pstrForm,pidKey,plngPage,pstrParam,pblnOpenNewWindow,pstrWindowName)
	quit
 
 
RedirectForm(YFORM="",YKEY="",YBACK="",YPARA="",YSEITE="")
	do RedirectForm^COMUtilForm(YFORM,YKEY,YBACK,YPARA,YSEITE)
	quit
	
	;********************************************************************
	; Relocated to COMUtilError - please redirect calls to these routines
	;********************************************************************
	
ReturnError(plstParams="")
	do ReturnError^COMUtilError(plstParams)
	quit
	
DecodeError(plstParams="",pblnDecode=$$$NO,pidLang="")
	; 24-Jun-2005	RobertW	SR12690: Removed this as it's causing HTML issues with \'s.
	quit $$DecodeError^COMUtilError(plstParams,pblnDecode,pidLang)
	
	
	;****************************************************************
	;
	;
	; Please add new subroutines ABOVE the obsolete tag marker ^^^^^
	;
	; Preferably categorise code so this routine gets no bigger!
	;
	;
	;****************************************************************
]]></Routine>
</Export>