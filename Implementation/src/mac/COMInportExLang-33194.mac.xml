<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMInportExLang" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMInportExLang
 	; Copied from WWWIN
 	; check for the killing of 
	
#define PROTOCOL(%1) set ^WWWERROR(0,+$horolog,$piece($horolog,",",2),0,1)=%1_" /  / "_$get(YBED) hang 1
	
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	;
	;                                     ALERT
	;                 
	; $$$PROTOCOL builds ^WWWERROR entries - 1 per second rather than using another
	; subscript - thus each call to $$$PROTOCOL needs a "hang 1" command.
	; 
	; These have been placed BEFORE the macro previously but an error situation will
	; cause the last entry to be over-written.  The hang commands have therefore been
	; moved INSIDE the macro and after the entry has been written.
	; 
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
#include COMSYS ;BR014836 
	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		PROGRAMMSTAND EINLESEN
	;
	; MANUELLER START VIA TERMINAL = D INPUT^WWWIN (WENN WWWOUT MANUELL EINGELESEN)
	;                                D START^WWWIN (AUTOMATISCHE INPUT AUS FTPROOT)
	; 
	; Called by : Form WWWIN (Import New Program Version) - Execute After Save
	; 
	; ByRef :
	;	VORG(3)		Filename	"Import Update File"
	;	VORG(4)		Boolean		"Apply File: formdat.txt in Path"
	;
	; History :
	; 13-Feb-2007	RPW		SR14900: Changed tag PROTOCOL to a macro & reversed change on 17-Oct-2006.
	; 09-Nov-2006	GRF		SR15194: ZZZ.COMUPGHandler being edited while build is
	;						running; doco; expand commands; !=>||; quits
	; 17-Oct-2006	RPW		SR14900: Make the system compile mac routines instead of INT
	; 30-May-2005	RPW		SR12056: Attempt at Performance Increase
	; 28.11.2003	BEC;TYBD 24721;DAMIT BEDIEHNER NICH VERLOREN GEHT / MELDUNG
	; 17.04.2003	FIS		23468
	; 07.10.1997	DT
	;-------------------------------------------------------------------------------
	NEW VORG1,VORG2,VORG3,VORG4,TEXT
	
	SET VORG1=1   ;$GET(VORG(1))  ;ÜBERNEHMEN J/N ;assume 
	SET VORG2=1   ;$GET(VORG(2))  ;LÖSCHEN NACH ÜEBERTRAG ;Delete within 
	SET VORG3=$GET(VORG(3))
	SET VORG4=$GET(VORG(4))
	
	xecute "ZL WWWIN ZS WWWINTEMP H 2" ; Make a copy of WWWIN and use it
	IF (VORG3'="") || (VORG4'="") JOB INPUT0^WWWINTEMP(VORG1,VORG2,VORG3,VORG4,$GET(SPRACHE),$GET(YBED))::1  IF '$TEST DO ^WWWINFO($$^WWWTEXT(144))  ; "Not possible"
	
	SET TEXT=$$^WWWTEXT(383)                           ;HINTERGRUND    ; "Program Has Started In Background" 
	IF VORG3="" IF VORG4="" SET TEXT=$$^WWWTEXT(32310) ;KEINE EINGABEN ; "No Selection Made" 
	DO ^WWWINFO(TEXT)  ;GESTARTET
	QUIT
	
	
START ;TERMINAL START  ;EINSPRUNG ;take-off 
	SET VORG(1)=1
	SET VORG(2)=1
	; FIXME : ? Hard-coded location.  UNIX?  <GRF>
	SET VORG(3)="C:\inetpub\ftproot\formdat.txt"
	SET %("VAR","YBED")=$GET(YBED)            ;BEC;TYBD;28.11.03;24721;DAMIT BEDIEHNER NICH VERLOREN GEHT / MELDUNG
	IF '$DATA(YBED) IF '$DATA(SPRACHE) DO ^WWWVAR
	DO INPUT
	QUIT
	
Terminal
	;-------------------------------------------------------------------------------
	; Start an upload from the Terminal instead of the using START as this is incorrect
	;
	; Returns:
	;
	; History:
	; 20-Jun-2005	RPW		Created
	;-------------------------------------------------------------------------------
	SET VORG1=1
	SET VORG2=1
	; FIXME : ? Hard-coded location.  UNIX?  <GRF>
	SET VORG3="c:\inetpub\ftproot\formdat.txt"
	SET %("VAR","YBED")=$GET(YBED)            ;BEC;TYBD;28.11.03;24721;DAMIT BEDIEHNER NICH VERLOREN GEHT / MELDUNG
	IF '$DATA(YBED) IF '$DATA(SPRACHE) DO ^WWWVAR
	DO INPUT
	QUIT
	
INPUT0(VORG1,VORG2,VORG3,VORG4,SPRACHE,YBED)        ;EINSPRUNG
	DO INPUT
	QUIT
	
INPUT
	;-------------------------------------------------------------------------------
	; History:
	; 20-Jul-2009 SCR	SR16775: Created / copied from WWWIN
	;-------------------------------------------------------------------------------
	NEW SORT,FORMS,KEEPHELP,CKFILE,arrLangClass
	
	kill %,%KEY
	SET %("VAR","YBED")=$GET(YBED)     ;BEC;TYBD;28.11.03;24721;DAMIT BEDIEHNER NICH VERLOREN GEHT / MELDUNG
	;do ^WWWVORG                       ; SR15647
	do ^WWWVAR
	SET $ZTRAP="^WWWERROR"
	;DO LOW^%PRIO
	
	; "Job Started"
	;=======================================
	SET $PIECE(^WWW120(0,"WWWIN",1),Y,110)=$$^WWWTEXT(32028)_": "_$$^WWWDATE($HOROLOG)_", "_$$^WWWTIME($HOROLOG)  ;LETZE AUFBEREITUNG
	
	kill ^WWWERROR   ;LÖSCHEN ALTE FEHLERPROTOKOLLE ;Delete old log
	kill ^CacheTempWWWINmac
	$$$PROTOCOL("Start Update Process")   ;TYBD;26134;PROTOCOLL DES UPDATE
	$$$PROTOCOL("Old Messages deleted")   ;TYBD;26134;PROTOCOLL DES UPDATE
	
	SET VORG(1)=$GET(VORG1)
	SET VORG(2)=$GET(VORG2)
	SET VORG(3)=$GET(VORG3)      
	SET VORG(4)=$GET(VORG4) 
	
	; Set the list of language clases
	set arrLangClass("WWW0011")=""
	set arrLangClass("WWW0021")=""
	set arrLangClass("WWW0031")=""
	set arrLangClass("WWW003CalcLang")=""
	set arrLangClass("WWW0041")=""
	set arrLangClass("WWW00411")=""
	set arrLangClass("WWW009")=""
	set arrLangClass("WWW100")=""
	set arrLangClass("WWW101")=""
	set arrLangClass("WWW1201")=""
	set arrLangClass("WWW1203")=""
	set arrLangClass("WWW1211")=""
	set arrLangClass("WWW1221")=""
	set arrLangClass("WWW124")=""
	set arrLangClass("WWW127")=""
	set arrLangClass("WWW1271")=""
	set arrLangClass("WWWClassTranslation")=""
	set arrLangClass("WWWDIC")=""
	set arrLangClass("WWWDICTIONARY")=""
	set arrLangClass("WWWDICTIONARY01")=""
	set arrLangClass("WWWEDUSP")=""
	set arrLangClass("WWWHTML")=""

	;+++++++++++++++++++++++++++++++++++++++
	; Import FORMDAT.TXT
	;+++++++++++++++++++++++++++++++++++++++
	
	IF VORG(4)=1 IF VORG(3)="" DO
	. NEW FILE
	. SET FILE=$TRANSLATE($PIECE($GET(^WWW012(0,YM,1)),Y,45),"/","\")
	. IF $EXTRACT($REVERSE(FILE))'="\" SET FILE=FILE_"\"
	. IF FILE="" SET FILE="C:\inetpub\ftproot\"
	. SET VORG(3)=FILE_"formdat.txt"
	
	IF $GET(VORG(3))'="" DO  ;ERST DATEN EINSPIELEN ;only 
	. NEW DATEI
	. SET DATEI=VORG(3)
	. NEW VORG,VORG1,VORG2,VORG3,VORG4
	. KILL ^WWWOUT
	. $$$PROTOCOL("Start Import FORMDAT.TXT")   ;TYBD;26134;PROTOCOLL DES UPDATE
	. SET VORG(1)=DATEI      ;IMPORTDATEI
	. SET VORG(2)="WWWOUT"   ;GLOBAL
	. SET VORG(3)=1          ;LÖSCHEN WWWOUT ;Delete 
	. FOR LFN=4:1:13 SET VORG(LFN)=""  ;TYBD;22.03.2005;10793;DFLT SETTINGS
	. SET VORG(999)=1        ;KEINE ANZEIGE ;no Show 
	. SET YQ=1
	. DO ^WWWIMPO            ;IMPORT VON DATEN ;importation 
	. $$$PROTOCOL("Import FORMDAT.TXT Finished")   ;TYBD;26134;PROTOCOLL DES UPDATE
	
	SET VORG(1)=$GET(VORG1)        
	SET VORG(2)=$GET(VORG2)        
	SET VORG(3)=$GET(VORG3)        
	IF '$DATA(VORG(1)) SET VORG(1)=1    ; FIXME : <GRF> Should these be testing for null or not $$$YES? Appears no longer used.
	IF '$DATA(VORG(2)) SET VORG(2)=1
	
	;SAVE HELP TEXT FOR RELOAD
	;	D1		$$$WWW012CompanyName()
	set KEEPHELP = $$$NO
	do
	. new YYM
	. set YYM = $order(^WWW012(0,""))
	. if YYM'="" if $find($zconvert($piece($get(^WWW012(0,YM,1)),Y,1),"U"),"KEEPHELP") set KEEPHELP = $$$YES
	; FIXME : <GRF> Only actually keeping the help data if the company name includes the text "KEEPHELP"
	
	; Preserve character conversion table and Help text
	;---------------------------------------
	IF KEEPHELP=$$$YES KILL ^WWWSOR(YUSER,"HELP")
	IF $DATA(^WWWUMLAU(0)) MERGE ^WWWSOR("UPDATE","WWWUMLAU")=^WWWUMLAU  ;SAVE UMLAU TABLE;TYBD;26844;24,11,2004
	
	;+++++++++++++++++++++++++++++++++++++++
	; Load Update
	; 	^WWWOUT(0,###,0,1) = kill command - expect just one instance at beginning of block relating to the global
	; 	^WWWOUT(0,###,1,1) = Key portion     ; e.g. ^WWW001(0,"WWW002",1)
	; 	^WWWOUT(0,###,2,1) = Data portion    ; e.g. "primary key~1~1~~WWW~~~~~~~~~~58826~TYBD~"
	;+++++++++++++++++++++++++++++++++++++++
	
	$$$PROTOCOL("Processing Update")
	SET FORMS    = $$$NO                    ;KEINE Formulare ;no forms     ; DEPRECATED with SR13543
	;SET YROUTINE = $$$NO                   ;KEINE PROGRAMME ;no routines  ; SR16253 replaced
	set ^CacheTempWWWINmac($job) = $$$NO    ; SR16253
	
	;UPDATE DER DATEN
	DO 
	. $$$PROTOCOL("Saving VAR text") ;	WWW00087 ;BR014836 
	. do SaveVarText()	;BR014836  ; SR16253
	. ;
	. ; ^WWW012E : Exchange Project Name In Code
	. NEW YXCHANGE               ;TYBD;16.05.2004
	. SET YXCHANGE = $$$NO
	. IF $DATA(^WWW012E(0)) IF $ZUTIL(5)'="INTRAPREND" SET YXCHANGE = $$$YES  ; FIXME : <GRF> Should this now check "DEV"?
	. ;
	. kill ^YLINEDOING
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWWOUT(0,LFN)) QUIT:LFN=""  DO
	. . set ^YLINEDOING=LFN                                    ; Progress Marker 
	. . ;
	. . ; Sort or Kill Data     ; e.g. K ^WWW127(0,"INAbc") 
	. . ;-----------------------------------
	. . SET EXEX=$GET(^WWWOUT(0,LFN,0,1))
	. . IF EXEX'="" DO
	. . . IF $EXTRACT(EXEX,1,5)="SORT " DO  QUIT
	. . . . SET SORT=$PIECE(EXEX," ",2) IF SORT'="" SET SORT(SORT)=""   ; FIXME : <GRF> Reindex based on "SORT" no longer functional
	. . . ;
	. . . ;IF KEEPHELP=$$$YES IF $EXTRACT(EXEX,1,9)="K ^WWW127" DO SAVEHELP(EXEX)  ;SAVE OLD HELP TEXT  ; SR16253
	. . . if $extract(EXEX,1,3)="K ^" do
	. . . . new srtClass
	. . . . set strClass=$piece($piece(EXEX,"^",2),"(",1)
	. . . . if strClass'="" do
	. . . . . if $data(arrLangClass(strClass)) do 
	. . . . . . write "Language Class: ",EXEX," Skipped",!
	. . . . . . set EXEX=""
	. . . write "Execute ",EXEX,!
	. . . XECUTE EXEX
	. . ;
	. . ; Build Data
	. . ;-----------------------------------
	. . SET S1=$GET(^WWWOUT(0,LFN,1,1))
	. . SET S2=$GET(^WWWOUT(0,LFN,2,1))
	. . if S1["^WWW" do
	. . . new strClass,strKey 
	. . . set strClass=$piece($piece(S1,"^",2),"(",1)
	. . . set strKey=$piece($piece(S1,"(0,",2),",1)")
	. . . set strKey=$translate(strKey,"""")
	. . . if $$CanTransfer^COMDCMLanguage(strClass,strKey,S2) do
	. . . . write "Skipping ",S1," = ",S2,!
	. . . . set S1=""
	. . QUIT:$EXTRACT(S1)'="^"
	. . ;QUIT  ; **************************** Do not do this for now!
	. . IF $FIND(S1,"^WWW") SET FORMS = $$$YES  ;FORMULARE VORHANDEN ;on hand     ; FIXME : Safer to check $extract in case this is ever a key <GRF>
	. . IF $FIND(S1,"^ROUTINE(") || $FIND(S1,"^rMAC(") || $FIND(S1,"^rINC(") DO
	. . . ;SET YROUTINE = $$$YES                  ; need to recompile    ; SR16253 replaced
	. . . ;set ^CacheTempWWWINmac($job) = $$$NO    ; need to recompile    ; SR16253
	. . . set ^CacheTempWWWINmac($job) = $$$YES    ; need to recompile    ; SR16253 ;changed to $$$YES (shobby)
	. . . SET FORMS    = $$$YES
	. . . 
	. . . SET ROUTINE=$TRANSLATE($PIECE($PIECE(S1,"(",2),",",1),"""")
	. . .;IF S2'="" IF ROUTINE'="" IF $EXTRACT(ROUTINE,1,5)'="WWWIN" IF $EXTRACT(ROUTINE)'="X" IF $FIND(S2,"@@AUTOSTART@@") SET PGM(ROUTINE)=""   ;AUTOSTART VON ROUTINEN
	. . . IF S2'="" IF ROUTINE'="" IF $EXTRACT(ROUTINE,1,5)'="WWWIN" IF $EXTRACT(ROUTINE)'="X" IF $FIND(S2,"@@AUTOSTART@@") SET ^CacheTempPostUpgrade(YUCI,ROUTINE)=""   ;AUTOSTART VON ROUTINEN //SR15488
	. . ;
	. . ; Replace all instances of one name with another
	. . ;-----------------------------------
	. . IF YXCHANGE=$$$YES DO     ;WENN MIT UMSETZTUNG DER ANWENDUNG 
	. . . SET S2=$$^WWWUML(S2,9)  ;FIS;13.05.04;25673
	. . . SET S1=$$^WWWUML(S1,9)  ;TYBD;16.05.2004 ;25673
	. . ;
	. . ; Don't update existing records       S1 = ^WWW001(0,"WWW002",1)
	. . ;-----------------------------------        ^^^^^^
	. . ;	D17		$$$WWW001OnlyNewDataRecordsOnUpdat()
	. . SET CKFILE=$PIECE($PIECE(S1,"(",1),"^",2)
	. . IF CKFILE'="" DO  QUIT:CKFILE=1 
	. . . IF $PIECE($GET(^WWW001(0,$EXTRACT(CKFILE,1,60),1)),Y,17)=1 IF $DATA(@S1) SET CKFILE=1  ;SCHON VORHANDEN
	. . ;
	. . SET @S1=S2
	. ;
	. ; Restore any saved Help or VAR Text
	. ;-------------------------------------
	. IF KEEPHELP=$$$YES DO GETHELP()                  ; SR16253
	. $$$PROTOCOL("Reloading VAR text")  ;"Reloading VAR text"  ;WWW00088 BR014836
	. DO GetVarText()		                 ;BR014836 ; SR16253
	
	
	; Merge previous character conversion table, over-writing any changes
	;---------------------------------------
	IF $DATA(^WWWSOR("UPDATE","WWWUMLAU")) MERGE ^WWWUMLAU=^WWWSOR("UPDATE","WWWUMLAU") KILL ^WWWSOR("UPDATE","WWWUMLAU")  ;RESTORE SAVED UMLAU TABLE;TYBD;26844;24,11,2004
	
	IF VORG(2)=1 KILL ^WWWOUT
	kill ^YLINEDOING
	KILL VORG
	
	SET YQ=0
	$$$PROTOCOL("Update Loading Finished")   ;TYBD;26134;PROTOCOLL DES UPDATE
	
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;DO  ;BUTTON BERICHTIGEN ;regulate 
	. NEW FORM,SPR,BUT
	. SET FORM=""
	. FOR  SET FORM=$ORDER(^WWW124(0,FORM)) QUIT:FORM=""  DO  
	. . SET SPR=""
	. . FOR  SET SPR=$ORDER(^WWW124(0,FORM,SPR)) QUIT:SPR=""  DO   
	. . . SET BUT=""
	. . . FOR  SET BUT=$ORDER(^WWW124(0,FORM,SPR,BUT)) QUIT:BUT=""  DO
	. . . . IF $PIECE($GET(^WWW124(0,FORM,SPR,BUT,1)),Y,4)="" SET $PIECE(^WWW124(0,FORM,SPR,BUT,1),Y,4)="999"  ; D4 $$$WWW124ColumnPosition
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	
	;IF $DATA(^INVORG(0)) IF '$DATA(^INPARA(YM,"ANREDE")) MERGE ^INPARA(YM,"ANREDE")=^WWW101(0,"ANREDE")
	
	;+++++++++++++++++++++++++++++++++++++++
	; Recompile Routines
	;+++++++++++++++++++++++++++++++++++++++
	do RecompileRoutines($get(YROUTINE),YUCI)        ; Replaced - original moved to COMUpgradeHandler   ; SR16253
 
	
	/*		SR13543 - now done with rest of classes
	;+++++++++++++++++++++++++++++++++++++++
	; Reindex     ;SORTIERSCHLUESSEL
	;+++++++++++++++++++++++++++++++++++++++
	
	$$$PROTOCOL("Start Recreate Sortkey")        ;TYBD;26134;PROTOCOLL DES UPDATE
	SET YQ=1
	IF FORMS=1 SET VORG(1)="WWW002;WWW003;WWW120;WWW121;WWW122;WWW124;WWW004;WWW101;WWW100;WWW009;WWW013;WWWDRAGDROP;WWWDRAGDROPD" DO ^WWWSORT  ;SORTIERSCHL. FELDER	
	SET SORT=""
	FOR  SET SORT=$ORDER(SORT(SORT)) QUIT:SORT=""  DO
	. SET VORG(1)=SORT
	. DO ^WWWSORT
	
	$$$PROTOCOL("Recreate Sortkey Finished")     ;TYBD;26134;PROTOCOLL DES UPDATE
	*/
	
	;+++++++++++++++++++++++++++++++++++++++
	; Reorganisation
	;+++++++++++++++++++++++++++++++++++++++
	;AUFBEREITEN MONATSDATEN
	$$$PROTOCOL("Start Reorganisation")          ;TYBD;26134;PROTOCOLL DES UPDATE
	;DO START^WWWMON
	DO START1^WWWMON($GET(YM),$GET(SPRACHE))     ;BEC;26420;27.09.04
	$$$PROTOCOL("Reorganisation Finished")       ;TYBD;26134;PROTOCOLL DES UPDATE
	
	;+++++++++++++++++++++++++++++++++++++++
	; Post Upgrade Processing
	;+++++++++++++++++++++++++++++++++++++++
	
	/* SR15488: Now done in PostUpgrade^COMUpgradeHandler
	$$$PROTOCOL("Start Automated Background Jobs")   ;TYBD;26134;PROTOCOLL DES UPDATE
	SET PROGR=""
	IF $DATA(PGM) FOR  SET PROGR=$ORDER(PGM(PROGR)) QUIT:PROGR=""  DO
	. SET YEXEC="DO"_" "_"^"_PROGR
	. DO
	. . NEW PROGR
	. . if $get(^SysSetup("LogUpgrade"))=1 $$$PROTOCOL(YEXEC)  //SR15311: Added this to look at problems, please turn this off when NOT debugging an upgrade
	. . XECUTE YEXEC
	
	$$$PROTOCOL("Background Jobs Finished")      ;TYBD;26134;PROTOCOLL DES UPDATE
	;END ;ultimate 
	*/
	
	;+++++++++++++++++++++++++++++++++++++++
	
	$$$PROTOCOL("Update Process Finished")       ;TYBD;26134;PROTOCOLL DES UPDATE
	
	; "Last Preparation"
	;=======================================
	;	D110		$$$WWW120FormInformation()
	SET $PIECE(^WWW120(0,"WWWIN",1),Y,110)=$$^WWWTEXT(32471)_": "_$$^WWWDATE($HOROLOG)_", "_$$^WWWTIME($HOROLOG)  ;LETZE AUFBEREITUNG
	IF $DATA(^WWW120(0,"INTAGES",1)) SET $PIECE(^WWW120(0,"INTAGES",1),Y,110)=""   ;ABARBEITEN TAGESDATEI
	;IF $GET(YBED)'="" DO MSG^WWW013MSG(YBED,$$^WWWTEXT(33362),$PIECE($GET(^WWW120(0,"WWWIN",1)),Y,1))  ; "Process Closed"
	quit
	
	
RecompileRoutines(pblnCompile=$$$YES,pidNamespace)
	;-------------------------------------------------------------------------------
	; History:
	; 14-Jan-2009	GRF		SR16253: REVISED VERSION
	;-------------------------------------------------------------------------------
	$$$PROTOCOL(" ")                             ; SR16253
	$$$PROTOCOL("Start Recompile Upgrade Routines")
	
	set strRtnList = "COMUpgradeHandler"    ; Comma-delimited list
	for loop = 1:1:$length(strRtnList,$$$COMMA) {
		set idRtnName = $piece(strRtnList,$$$COMMA,loop)
		set strResult = $$ROUTINE^%R(idRtnName_".MAC",.arrRoutine,.lstError,"LCS")
		if 'strResult {
			$$$PROTOCOL(" * MAC * "_idRtnName_" : "_$piece(strResult,"^",2))     ; SR16253
			set ^CacheTempWWWINmac($job,idRtnName) = lstError
			; If required, can then use something like
			;    do FMTERR^%R(.lstError,.arrRoutine,.arrLines)
			;    for loop=1:1:arrLines(0) w "Error(",loop,") = ",arrLines(loop)
		}
	}
	
	; NOTE : Reindex performed later
	;set strNum = ""
	;do ##class(%Library.RoutineIndex).RebuildIndex(pidNamespace,.strNum)    ; FIXME : Check returned sc? <GRF>
	
	$$$PROTOCOL("Upgrade Routines Recompiled")
	$$$PROTOCOL(" ")                             ; SR16253
	quit
	
	/*
	;-------------------------------------------------------------------------------
	;  PREVIOUS VERSION
	; 14-Jan-2009	GRF		SR16253: relocated to COMUpgradeHandler to ensure
	; 							available (build sequencing)
	; 13-Jan-2009	GRF		SR16253: separate RecompileRoutines; log better details
	;							for recompile errors (^CacheTempWWWINmac)
	;-------------------------------------------------------------------------------
	new arrRoutine,idRtnName,lstError,strNum,strResult
	
	$$$PROTOCOL(" ")                             ; SR16253
	$$$PROTOCOL("Start Recompile Routines")
	
	if pblnCompile=$$$YES {
		
		;-------------------------------------
		; .INT Files
		;-------------------------------------
		if $$$NEVER {                                ; <Block Disabled> ; SR16253
			set idRtnName="%zzzzzzzz"
			for {
				set idRtnName=$order(^ROUTINE(idRtnName))
				quit:idRtnName=""
				continue:idRtnName="WWWINTEMP"
				continue:$extract(idRtnName)="%"
				continue:$extract(idRtnName,1,3)="ZZZ"
			;	continue:$find(idRtnName,".")  ;KEINE PROGRAMME MIT . WEGEN KLASSENDEFINITION / DO NOT COMPILE CLASSES WITH A DOT.
				continue:$piece(idRtnName,".",$length(idRtnName,"."))="T1"
				continue:##class(%Dictionary.ClassDefinition).%ExistsId($piece(idRtnName,".",1,$length(idRtnName,".")-1))
			;	continue:idRtnName="WWWINSTALL"  ;TYBD;23,6,2004;
			
				set strResult = $$ROUTINE^%R(idRtnName_".INT",.arrRoutine,.lstError,"LCS")
				if 'strResult $$$PROTOCOL(" * INT * "_idRtnName_" : "_$piece(strResult,"^",2))     ; SR16253
			}
		}
		
		;-------------------------------------
		; .MAC Files                                     <Block Restored> ; SR16253
		; FIXME : Should we exclude idx.*? <GRF>
		;-------------------------------------
		set idRtnName = "%zzzzzzzz"
		for {
			set idRtnName = $order(^rMAC(idRtnName))
			quit:idRtnName=""
			continue:$extract(idRtnName)="%"
			continue:idRtnName="WWWINTEMP"
			continue:idRtnName="WWWINSTALL"
			continue:$piece(idRtnName,".",$length(idRtnName,"."))="T1"
			continue:##class(%Dictionary.ClassDefinition).%ExistsId($piece(idRtnName,".",1,$length(idRtnName,".")-1))
		;	continue:$find(idRtnName,".")  ;KEINE PROGRAMME MIT . WEGEN KLASSENDEFINITION / DO NOT COMPILE CLASSES WITH A DOT.
		
			set strResult = $$ROUTINE^%R(idRtnName_".MAC",.arrRoutine,.lstError,"LCS")
			if 'strResult {
				$$$PROTOCOL(" * MAC * "_idRtnName_" : "_$piece(strResult,"^",2))     ; SR16253
				set ^CacheTempWWWINmac($job,idRtnName) = lstError
				; If required, can then use something like
				;    do FMTERR^%R(.lstError,.arrRoutine,.arrLines)
				;    for loop=1:1:arrLines(0) w "Error(",loop,") = ",arrLines(loop)
			}
		}
		
		;-------------------------------------
		; .INC Files
		;-------------------------------------
		if $$$NEVER {                                ; <Block Disabled - don't compile .INC>
			set idRtnName="%zzzzzzzz" // SR14900
			for {
				set idRtnName=$order(^rINC(idRtnName))
				quit:idRtnName=""
				continue:$extract(idRtnName)="%"
				continue:idRtnName="WWWINTEMP"
				continue:$find(idRtnName,".")  ;KEINE PROGRAMME MIT . WEGEN KLASSENDEFINITION / DO NOT COMPILE CLASSES WITH A DOT.
			;	continue:idRtnName="WWWINSTALL"
			
				set strResult=$$ROUTINE^%R(idRtnName_".INC",.arrRoutine,.lstError,"LCS")
				if 'strResult $$$PROTOCOL(" * INC * "_idRtnName_" : "_$piece(strResult,"^",2))     ; SR16253
			}
		}
	}	
	
	set strNum = ""
	do ##class(%Library.RoutineIndex).RebuildIndex(pidNamespace,.strNum)    ; FIXME : Check returned sc? <GRF>
	$$$PROTOCOL("Routines Recompiled")
	$$$PROTOCOL(" ")                             ; SR16253
	quit
	*/
	/*  Old code - remove once reviewed ; SR16253
	IF $GET(YROUTINE)=$$$YES DO   ;RELOAD ALLE
	. ;
	. ;-------------------------------------
	. ; .INT Files                                     <Block Disabled> ; SR16253
	. ;-------------------------------------
	. ;SET YROUTINE="%zzzzzzzz" // SR14900
	. ;FOR  SET YROUTINE=$ORDER(^ROUTINE(YROUTINE)) QUIT:YROUTINE=""  DO
	. . QUIT:YROUTINE="WWWINTEMP"
	. . QUIT:$EXTRACT(YROUTINE)="%"          // SR15145
	. . QUIT:$EXTRACT(YROUTINE,1,3)="ZZZ"    // SR15145
	. . ;QUIT:$FIND(YROUTINE,".")  ;KEINE PROGRAMME MIT . WEGEN KLASSENDEFINITION / DO NOT COMPILE CLASSES WITH A DOT.
	. . QUIT:$piece(YROUTINE,".",$length(YROUTINE,"."))="T1" // SR14900
	. . QUIT:##class(%Dictionary.ClassDefinition).%ExistsId($piece(YROUTINE,".",1,$length(YROUTINE,".")-1)) // SR14900
	. . ;QUIT:YROUTINE="WWWINSTALL"  ;TYBD;23,6,2004;
	. . SET YERR=$$ROUTINE^%R(YROUTINE_".INT",.r,.e,"LCS")
	. . if 'YERR $$$PROTOCOL(" * INT * "_YROUTINE_" : "_$piece(YERR,"^",2))     ; SR16253
	. ;
	. ;-------------------------------------
	. ; .MAC Files                                     <Block Restored> ; SR16253
	. ; FIXME : Should we exclude idx.*? <GRF>
	. ;-------------------------------------
	. SET YROUTINE="%zzzzzzzz" // SR14900
	. FOR  SET YROUTINE=$ORDER(^rMAC(YROUTINE)) QUIT:YROUTINE=""  DO  ;NOCH NICHT FREIGESCHALTET, FIS,14.03.03 // SR14900
	. . QUIT:$EXTRACT(YROUTINE)="%"
	. . QUIT:YROUTINE="WWWINTEMP"
	. . QUIT:$piece(YROUTINE,".",$length(YROUTINE,"."))="T1" // SR14900
	. . QUIT:##class(%Dictionary.ClassDefinition).%ExistsId($piece(YROUTINE,".",1,$length(YROUTINE,".")-1)) // SR14900
	. . ;QUIT:$FIND(YROUTINE,".")  ;KEINE PROGRAMME MIT . WEGEN KLASSENDEFINITION / DO NOT COMPILE CLASSES WITH A DOT.
	. . QUIT:YROUTINE="WWWINSTALL"  ;TYBD;23,6,2004;
	. . QUIT:$EXTRACT(YROUTINE)="%"
	. . SET YERR=$$ROUTINE^%R(YROUTINE_".MAC",.r,.e,"LCS")
	. . if 'YERR do
	. . . $$$PROTOCOL(" * MAC * "_YROUTINE_" : "_$piece(YERR,"^",2))     ; SR16253
	. . . set ^CacheTempWWWINmac($job,YROUTINE) = e
	. ;
	. ;-------------------------------------
	. ; .INC Files                                     <Block Disabled - don't compile .INC>
	. ;-------------------------------------
	. ;SET YROUTINE="%zzzzzzzz" // SR14900
	. ;FOR  SET YROUTINE=$ORDER(^rINC(YROUTINE)) QUIT:YROUTINE=""  DO
	. . QUIT:$EXTRACT(YROUTINE)="%"
	. . QUIT:YROUTINE="WWWINTEMP"
	. . QUIT:$FIND(YROUTINE,".")  ;KEINE PROGRAMME MIT . WEGEN KLASSENDEFINITION / DO NOT COMPILE CLASSES WITH A DOT.
	. . ;QUIT:YROUTINE="WWWINSTALL"              ;TYBD;23,6,2004;
	. . SET YERR=$$ROUTINE^%R(YROUTINE_".INC",.r,.e,"LCS")
	. . if 'YERR $$$PROTOCOL(" * INC * "_YROUTINE_" : "_$piece(YERR,"^",2))     ; SR16253
 
	;IF $get(YROUTINE)=1 D NALL^%RCOMPIL   ; ALLE PROGRAMME: RECOMPLILE
	*/
	
SAVEHELP(pstrEXEX)
	;-------------------------------------------------------------------------------
	; SAVE OLD HELP TEXT
	; 
	; History:
	; 19-Dec-2008	GRF		SR16253: Add parentheses; pass parameter
	;-------------------------------------------------------------------------------
	NEW FORM,FIELD,LFD,TEXT
	
	SET FORM=$TRANSLATE($PIECE($PIECE(pstrEXEX,",",2),")",1),"""")
	QUIT:FORM=""
	QUIT:'$DATA(^WWW127(0,FORM))
	
	SET FIELD=""
	FOR  SET FIELD=$ORDER(^WWW127(0,FORM,FIELD)) QUIT:FIELD=""  DO
	. SET LFD=""
	. FOR  SET LFD=$ORDER(^WWW127(0,FORM,FIELD,LFD)) QUIT:LFD=""  DO
	. . SET TEXT=$GET(^WWW127(0,FORM,FIELD,LFD,"EN",1))
	. . IF TEXT'="" SET ^WWWSOR(YUSER,"HELP",FORM,FIELD,LFD,"EN")=TEXT
	
	QUIT
	
GETHELP()
	;-------------------------------------------------------------------------------
	; GET BACK OLD HELP TEXT
	; 
	; History:
	; 19-Dec-2008	GRF		SR16253: Add parentheses
	;-------------------------------------------------------------------------------
	NEW FORM,FIELD,LFD,TEXT
	
	SET FORM=""
	FOR  SET FORM=$ORDER(^WWWSOR(YUSER,"HELP",FORM)) QUIT:FORM=""  DO
	. SET FIELD=""
	. FOR  SET FIELD=$ORDER(^WWWSOR(YUSER,"HELP",FORM,FIELD)) QUIT:FIELD=""  DO
	. . SET LFD=""
	. . FOR  SET LFD=$ORDER(^WWWSOR(YUSER,"HELP",FORM,FIELD,LFD)) QUIT:LFD=""  DO
	. . . SET TEXT=$GET(^WWWSOR(YUSER,"HELP",FORM,FIELD,LFD,"EN"))
	. . . IF TEXT'="" SET ^WWW127(0,FORM,FIELD,LFD,"EN",1)=TEXT
	
	QUIT
	
Monitor()
	new intChange,intCurrent,intLast
	
	set intLast=""
	
	write "Waiting for the load.",!
	
	for {
		quit:$data(^WWWOUT(0))
	}
	
	for {
		quit:$get(^YLINEDOING)'=""
		
		set intLast=$order(^WWWOUT(0,""),-1)
		write "Still loading the update upto line "_intLast_$char(13)
		hang 1                   ; delay loop cycle
	}
	
	if intLast="" {
		set intLast=$order(^WWWOUT(0,""),-1)
	}
	
	write !
	set intChange="" 
	for {
		set intCurrent=$get(^YLINEDOING) 
		quit:intCurrent=""
		
		if (intCurrent'=intChange) {
			set intChange=intCurrent
			write intChange_" of "_intLast_" difference : "_(intLast-intChange)_"        "_$char(13)
		}
		
	}
	
	write !,"Loading and initial data storage complete."
	
	quit
	
	
SaveVarText()
	;-------------------------------------------------------------------------------
	; Save texts with "VAR" entries for Language Text form (WWW009)
	;
	; ByRefs:
	;
	; History:
	; 19-Dec-2008	GRF		SR16253: Add parentheses
	; 27-Mar-2008	shobby	SRBR014836: kill WWWSOR before starting
	; 27-Mar-2008	GRF		SRBR014836: removed redundant check for null
	; 25-Mar-2008	GM		SRBR014836: Created
	;-------------------------------------------------------------------------------
	new idText,idLang,strText
	
	kill ^WWWSOR(YUSER,"VAR")
	set idLang = ""
	for {
		set idLang=$order(^WWW009(0,idLang))
		quit:idLang=""
		
		set idText=$order(^WWW009(0,idLang,"VAR"),-1)
	    for {
			set idText=$order(^WWW009(0,idLang,idText)) 
			quit:$extract(idText,1,3)'="VAR"
			
			set strText = $get(^WWW009(0,idLang,idText,1))
			set ^WWWSOR(YUSER,"VAR",idLang,idText) = strText
	    }
	}
	
	quit
	
	
GetVarText()
	;-------------------------------------------------------------------------------
	; Get back texts with "VAR" entries for Language Text form (WWW009)
	;
	; ByRefs:
	;
	; History:
	; 19-Dec-2008	GRF		SR16253: Add parentheses
	; 27-Mar-2008	GRF		SRBR014836: removed left-over DO commands from dot format
	; 25-Mar-2008	GM		SRBR014836: Created
	;-------------------------------------------------------------------------------
	new idLang,idText,strText,blnChanged
	
	set blnChanged=$$$NO
	set idLang=""
	for {
		set idLang=$order(^WWWSOR(YUSER,"VAR",idLang))
		quit:idLang=""
		
		set idText=""
		for {
			set idText=$order(^WWWSOR(YUSER,"VAR",idLang,idText))
			quit:idText=""
			
			set strText = $get(^WWWSOR(YUSER,"VAR",idLang,idText))
			if strText'="" {
				set ^WWW009(0,SPRACHE,idText,1) = strText
				set blnChanged=$$$YES
			}
		}
	}	
	
	if blnChanged {
		do SetIndexDirty^COMIndex("WWW009") ; Rebuild index
		kill ^WWWSOR(YUSER,"VAR")
	}
	
	quit
	
]]></Routine>
</Export>