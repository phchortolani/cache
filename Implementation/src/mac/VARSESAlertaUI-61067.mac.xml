<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESAlertaUI" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMSYS
#include COMConst
#include COMView
#include VARConst
 
VARSESAlertaUI
	quit
	
	
FilterSugestao(pidItem, pidLocation)
 
	quit $$GetSugestao^VARSESAlertaLinha(pidItem, pidLocation) > 0
 
FilterCodigoItem(pidItem)
	; Este filtro serve apenas para alterar a sua descrição no campo calculado 
	quit pidItem
 
FilterConjuntoItens(pidItem)
	; Este filtro serve apenas para alterar a sua descrição no campo calculado 
	quit pidItem
 
FilterDescricaoItem(pidItem)
 
	quit $$GetDescricaoItem^VARSESAlertaLinha(pidItem)
 
FilterGrupoItem(pidItem)
 
	quit $$GetItemGroup^VARSESAlertaLinha(pidItem)
 
FilterSubGrupoItem(pidItem)
 
	quit $$GetItemSubGroup^VARSESAlertaLinha(pidItem)
 
FilterGrupoSubgrupoItem(pidItem) 
 
	quit $$GetItemGroupSubGroup^VARSESAlertaLinha(pidItem)
 
FilterIndiceCriticidade(pidItem)
	quit $$GetIndiceCriticidade^VARSESAlertaLinha(pidItem)
	
FilterCurvaABC(pidItem)
	quit $$GetCurvaValor^VARSESAlertaLinha(pidItem)
 
FilterMovimentacaoZero(pidItem,pidLocation)
	quit $$GetMovimentacao^VARSESAlertaLinha(pidItem,pidLocation) = 0
 
FilterPadraoMedicamentos(pidItem)
 	new objItem, strStatus
 	
 	set strStatus=$$$NO
	set objItem=$get(^INART(YM,pidItem,1))
 
	//--Gustavo@03/01/2008
	set ItemGroup = $piece(objItem, Y, 30)
	//--
 
	if (objItem'="") {
		;if ($piece(objItem, Y, 345)="FARMACIA" ) && ($$GetPadrao^VARSESAlertaLinha(pidItem) '= "") {
		if ($piece(objItem, Y, 345)="FARMACIA") && ($$GetPadrao^VARSESAlertaLinha(pidItem) '= "") && ($extract(ItemGroup,1,2) = "09") {		
				set strStatus=$$$YES	
			}
		}
	
	quit strStatus
	
FilterPadraoMateriais(pidItem)
	;Possuem o flag padrão e a estocagem é em almoxarifado
	new objItem, strStuatus
	
	set strStatus=$$$NO
	
	;if (YBED="FRANK") && (pidItem=3) for i=1:1:100 hang 1
	
	set objItem=$get(^INART(YM,pidItem,1))
	
	//--Gustavo@03/01/2008
	set ItemGroup = $piece(objItem, Y, 30)
	//--
	
	if (objItem'="") {
		;if ($piece(objItem, Y, 345)="ALMOXARIFADO" ) && ($$GetPadrao^VARSESAlertaLinha(pidItem) '= "") {
		if ($piece(objItem, Y, 345)="FARMACIA") && ($$GetPadrao^VARSESAlertaLinha(pidItem) '= "") && ($extract(ItemGroup,1,2) '= "09") {		
				set strStatus=$$$YES	
		}
	}
	
	quit strStatus
	
FilterEstoqueFisicoLocalZero(pidItem,pidLocation)
	;Pendente - Conferir: comparação por "" certo?
	new efl
	set efl=$$GetEstoqueFisicoLocal^VARSESAlertaLinha(pidItem,pidLocation)
	quit (efl = 0) || (efl = "")
 
FilterPAMSemProcesso(pidItem,pidLocation)
  ;Só retorna YES se a PAM não tiver nenhum registro
  ;
	;Refactory: fazer um extract do corpo desse método para outro lugar
	new strStatus, strPAMs, pams, objPAM, idPAM, idProcesso
	
	;Pega todos os ids dos PAMs
	set strPAMs = $$getPAMs^VARSESINReq(pidItem, pidLocation)
	
	;O item deve ser mostrado se não há processos para os PAMs
	set strStatus = $$$NO
	
	;Percorre todos da lista
	set objList=##class(Util.StringList).%New(strPAMs, ";")
	while objList.hasNext() {
		;Pega id
		set idPAM=objList.next()
		if ((idPAM="") || (idPAM=";")) continue
		
		set objPAM = $get(^VARTRKPAM(YM, idPAM, 1))
		
		;Verifica se tem processo
		set idProcesso = $piece($get(objPAM),Y,7)
		if (idProcesso = "") {
			set strStatus = $$$YES
			quit
		}
	}
	
	quit strStatus
 
FilterPAMSemAFM(pidItem,pidLocation)
	;Pendente: concluir
	;Só retorna YES se houver pelo menos uma PAM que não tiver AFM relacionada
	;
	;
	new strStatus, strPAMs, idPAM, arrPAMs, idPAMLine, idItem
 
	set strStatus = $$$NO
	
	;Pega todos os ids dos PAMs
	do getPAMs^VARSESINReq(pidItem, pidLocation, .arrPAMs)
	
	// Verificar se o item da PAM em questão possui alguma AFM.
	$$$Order1(arrPAMs,idPAM)
	
		$$$Order3(^VARTRKPAMLineFake,YM,idPAM,idPAMLine)
		
			set objPAMLine = ^VARTRKPAMLineFake(YM, idPAM, idPAMLine, 1)
			set idItem     = $$$VARTRKPAMLineFakeItem(objPAMLine)
			
			// Só nos interessa os PAM lines com o item em questão.
			continue:(idItem '= pidItem)
			
			// Se não tiver nenhuma AFM Line para essa PAM Line.
			if '$data(^VARSESPAMAFM(YM,idPAM,idPAMLine)) {
				set strStatus = $$$YES
				quit
			}
		
		$$$End
	
	$$$End
		
	quit strStatus
 
FilterAFMSemEmpenho(pidItem,pidLocation)
  ;Só retorna YES se todas as AFMs do item não tiverem nenhum registro
  ;
	;Refactory: fazer um extract do corpo desse método pára outro lugar
	new strStatus, strAFMs, objAFM, idAFM, idEmpenho
	
	;Pega todos os ids dos AFMs
	set strAFMs=$$getAFMs^VARSESINReq(pidItem, pidLocation)
	
	;if (YBED="SOEIRO") for i=1:1:100 HANG 1
	
	;Se está vazio não inclui o item
	quit:(strAFMs="") $$$NO
	
	;O item deve ser mostrado se não há processos para as AFMs
	set strStatus = $$$NO
	
	;Percorre todos da lista (a implementação interna de piece e extract é muito ruim)
	set objList=##class(Util.StringList).%New(strAFMs, ";")
	while objList.hasNext() {
		;Pega id
		set idAFM=objList.next()
		if ((idAFM="") || (idAFM=";")) continue
		
		;Pega o objeto AFM (INAUF)
		set objAFM = $GET(^INAUF(YM,idAFM,1))
		
		;Verifica se tem empenho
		set idEmpenho = $piece(objAFM,Y,336)
		if (idEmpenho = "") {
			set strStatus = $$$YES
			quit
		}
	}
	
	quit strStatus
 
FilterSemPAMSemAFM(pidItem,pidLocation)
	;Sem PAMs e sem AFMs
	quit $$GetPAMs^VARSESAlertaLinha(pidItem,pidLocation) = ""
	
FilterData()
 
	quit ""	
  
OnAfterDataFields()
 
	do LoadGrid() 
 
	quit	
 
LoadGrid()
 
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 1
	set $$$COMGridEditParameterGridName(YAUSWAHL)      = "VARSESAlertaLinha"
	set $$$COMGridEditParameterEnabled(YAUSWAHL)       = $$$YES
	set $$$COMGridEditParameterContainer(YAUSWAHL)     = "VARSESAlerta"
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL)	= $$$YES
	set $$$COMGridEditParameterDontStoreAll(YAUSWAHL)  = $$$YES
	set $$$COMGridEditParameterCOMViewGrid(YAUSWAHL)   = $$$YES
	
	$$$ClearExternalFilter(YFORM)
	do AddExternalFilter^COMViewFilter(YFORM, "P1", YLOCATION, $$$EnumCOMVIEWCOMPARATOREquals, $$$NO)
 
	; Filtro padrão: 
	;do AddExternalFilter^COMViewFilter(YFORM, "C1", $$$YES, $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
	
	;Filtra por código do item - item absoluto
	;do AddExternalFilter^COMViewFilter(YFORM, "P2", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
 	;Filtra por código do item - range (usa campo calculado FilterCodigoItem)
	;do AddExternalFilter^COMViewFilter(YFORM, "C2", "", $$$EnumCOMVIEWCOMPARATORBetween, $$$YES)
 
 	;Filtra por código do item - conjunto (usa campo calculado FilterConjuntoItens)
	;do AddExternalFilter^COMViewFilter(YFORM, "C17", "", $$$EnumCOMVIEWCOMPARATORWithin, $$$YES)
 
 	;Filtra por descrição do item (usa campo calculado FilterDescricao)
	;do AddExternalFilter^COMViewFilter(YFORM, "C3", "", $$$EnumCOMVIEWCOMPARATORLike, $$$YES)
 
 	;Filtra por grupo/sub-grupo do item
	;do AddExternalFilter^COMViewFilter(YFORM, "C18", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	;Filtra por grupo do item
	;do AddExternalFilter^COMViewFilter(YFORM, "C4", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
	
	;Filtra por sub-grupo
	;do AddExternalFilter^COMViewFilter(YFORM, "C5", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	;Filtra por índice de criticidade
	;do AddExternalFilter^COMViewFilter(YFORM, "C6", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	;Filtra por curva ABC
	;do AddExternalFilter^COMViewFilter(YFORM, "C7", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	;Filtra por zero de movimentação
	;do AddExternalFilter^COMViewFilter(YFORM, "C8", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	;Filtra por Padrão medicamentos
	;do AddExternalFilter^COMViewFilter(YFORM, "C9", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	;Filtra por Padrão materiais
	;do AddExternalFilter^COMViewFilter(YFORM, "C10", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
 	;Filtra por Estoque Fisico Local Zero
	;do AddExternalFilter^COMViewFilter(YFORM, "C11", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
	
	;Filtra por PAM sem processo
	;do AddExternalFilter^COMViewFilter(YFORM, "C12", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
	
	;Filtra por PAM sem AFM
	;do AddExternalFilter^COMViewFilter(YFORM, "C13", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
	
	;Situação impossível
	;Filtra por AFM sem PAM
	;do AddExternalFilter^COMViewFilter(YFORM, "C14", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
	
	;Filtra por AFM sem empenho
	;do AddExternalFilter^COMViewFilter(YFORM, "C15", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	;Filtra por registros sem PAM e sem AFM
	;do AddExternalFilter^COMViewFilter(YFORM, "C16", "", $$$EnumCOMVIEWCOMPARATOREquals, $$$YES)
 
	$$$GRIDStart("VARSESAlertaLinha",YLOCATION)
	do LoadCOMViewGrid^COMViewFilter("VARSESAlerta", "VARSESAlertaLinha")
 
	quit
		
SalvarAlerta()
 
	kill ^CacheTempMultiLock("VARSESAlerta")
	do SAVE^COMGridEdit31Save(YLOCATION) 
 
	quit
 
OnAfterSave()
 
	do SalvarAlerta()
	do GoToForm^COMUtilForm("VARSESAlerta",YKEY)
 
	quit
	
DefinirFonteSuprimentos()
 
	new idLocation, idItem, arrAlertaLinhas, objAlertaLinha, fltQuantidade, strStatus, arrDocs
	
	do SalvarAlerta()
	
	$$$Order5(^VARSESAlertaLinhas,YM,1,$$$YES,YLOCATION,idItem)
	
		set objAlertaLinha = $get(^VARSESAlertaLinha(YM, YLOCATION, idItem, 1))
		set fltQuantidade  = $$$VARSESAlertaLinhaQuantidade(objAlertaLinha)
		
		set arrAlertaLinhas(YLOCATION, idItem) = fltQuantidade
	
	$$$End
	
	if '$data(arrAlertaLinhas) {
		$$$StartScript()
		//write "alert('Nenhuma linha foi selecionada.');"
		write "alert('"_$$$Text("MED00102")_"');"
		$$$EndScript()
		do ReloadForm^COMUtilForm()
		quit
	}
	
 	;for i=1:1:100 hang 1
	
	set strStatus = $$DefinirFonteSuprimentos^VARSESAlertaBIZ(.arrAlertaLinhas, .arrDocs)
 
	if $$$ISOK(strStatus) {
 
 		do ClearSelectedLines(.arrAlertaLinhas)
		// A rotina SourceTxn^INReqSource já emitia um alerta. Mas, comentei para evitar duas msgs. Veja SR BR014697
		$$$StartScript()
		write "alert('"_$$PrepareMsg^VARSESINReqSource(.arrDocs)_"');"
		$$$EndScript()
 
		if ( $data(arrDocs("Purchase") ) ) {
			do GoToForm^COMUtilForm("VARTRKPAM", $order(arrDocs("Purchase","")), 1, "")
		}
		elseif ( $data(arrDocs("Transfer") ) ) {
				do GoToForm^COMUtilForm("VARSESSolicTransf", $order(arrDocs("Transfer","")), 1, "")
		}
		else {
			do ReloadForm^COMUtilForm()
		}
	}
	
	quit
 	
ClearSelectedLines(&parrAlertaLinhas)
 
	new idLocation, idItem, objAlertaLinha, strStatus
	
	$$$Order1(parrAlertaLinhas,idLocation)
 
		$$$Order2(parrAlertaLinhas,idLocation,idItem)
		
			set objAlertaLinha = $get(^VARSESAlertaLinha(YM, idLocation, idItem, 1))
 
			set $$$VARSESAlertaLinhaQuantidade(objAlertaLinha) = ""
			set $$$VARSESAlertaLinhaOk(objAlertaLinha)		   = $$$NO
			set strStatus = $$$Save("VARSESAlertaLinha",idLocation_$$$COMMA_idItem,objAlertaLinha,$$$YES)
		
		$$$End
	$$$End
 
	quit
]]></Routine>
</Export>