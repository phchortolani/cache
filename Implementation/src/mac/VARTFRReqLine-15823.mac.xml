<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARTFRReqLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARTFRReqLine
#include COMSYS
#include INConst
#include COMGridEdit31
#include %occInclude
	
#define FORMFldVARTFRReqLineItem	1
#define FORMFldVARTFRReqLineUnit	2
#define FORMFldVARTFRReqLineReqdQty	3
#define FORMFldVARTFRReqLineATP		6
#define FORMFldVARTFRReqLineMthCons	11
#define FORMFldVARTFRReqLineTotalCost 30

#define DELIM	$char(31)
#define ClassPropertyId(%FormFieldId)	$piece($get(^WWW122(0,YFORM,%FormFieldId,1)),Y,1)

OnBlurItem(pidGridRow,pidItemNo,&pobjLine)
	;-------------------------------------------------------------------------------
    ;
    ; History:
    ; 17-Oct-2013	SCR		SESDF-669: Created
    ;-------------------------------------------------------------------------------
	new arrItemList,clientParam,dteToday,idDataLine,idFoundRow,itemPadro,itemStatus
	new objINART,objItem,objReq,strStatus

	quit:($$$GRIDContainer = "INReq")
	
	set objReq	= $$$GRIDYFELDContainer
	if (pidItemNo '= "") {
		set objItem = ##class(alINV.iUINV).GetItem(pidItemNo)
		if objItem '= $$$NULLOREF {
			if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(0,YM,1)))) {
				// 12-Maio-2010  Check if Item is inactive
				set itemStatus = $piece($get(^INART(YM,pidItemNo,1)),Y,66)				
				if (itemStatus = 1) {
					w "javascript:alert('O produto "_pidItemNo_" está inativo. Favor verificar com a CAF.');"
					set $$$INReqLineItem(pobjLine) = ""
					quit
				}
			}
			
		// SR17274:  vvvvv
			do IncludedItems(.arrItemList)
			set dteToday = +$horolog
			
			set idFoundRow = $order(arrItemList(pidItemNo,""))
			if idFoundRow=pidGridRow set idFoundRow = $order(arrItemList(pidItemNo,idFoundRow))
			
			if idFoundRow'="" {
				set idDataLine = $piece($get(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","REFERENCEKEY",idFoundRow,1)),$$$COMMA,2)
				
				set $$$INReqLineItem(pobjLine) = ""   
				set strStatus = $$$MakeStatus("IN01228",pidItemNo,idDataLine) ; "Item %1 has already been included in line %2."
				$$$Alert(strStatus)                                           ; "Item %1 já foi incluída na linha %2." [PT]
				
			} else {
				if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(0,YM,1)))) {				
					// 06-Jun-2012 Lucas: Check if Item is 'Multidose - Coletivo' (INART-FREE15 = 1)
					if (pidItemNo '= ""){
						set objINART = $get(^INART(0,pidItemNo,1))
						if ($$$INARTFREE15(objINART) = 1){
							write "javascript:alert('ATENÇÃO! \n É necessária a devolução das embalagens vazias para atendimento da requisição pela farmácia.');"
						}
					}
				}
				
				//Populate Unit Listing
				set $$$INReqLineUnit(pobjLine) = $$LoadUnitOfMeasureList^INARTUtilities($$$INReqLineItem(pobjLine))  ; [IU]
				do OnBlurQtyOrdered^INReqLine(pidGridRow,$$$INReqLineQtyOrdered(pobjLine),.pobjLine) ; SR17090
				
				
			}
			
			if ( (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(0,YM,1)))) || 
			(+$$$WWWClientParamCoreChangesSESPE($get(^WWWClientParam(0,YM,1)))) ||
			(+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(0,YM,1)))) ) {
				
				
				set clientParam = $piece($get(^VARParametroCliente(YM,YM,1)),Y,76)
				set itemPadro	= $piece($get(^INART(YM,pidItemNo,1)),Y,280)
				
				if ( (clientParam = 1) && (itemPadro = 0) ) {
					$$$Alert("Não é permitida a requisição de produtos não padronizados.")
					set YFELD = ""
					
				}
				
			}

			set $$$INReqLineToSOH(pobjLine)					= ##class(alSOH.iSOH).GetQtyAvailable(pidItemNo, $$$INReqToLocn(objReq),,$$$YES)
			set $$$INReqLineFromSOH(pobjLine)				= ##class(alSOH.iSOH).GetQtyAvailable(pidItemNo, $$$INReqFromLocn(objReq),,$$$YES)
			set $$$INReqLineMonthlyConsumption(pobjLine)	= $$GetLocationConsumption^INARTConsumption(pidItemNo,$$$INReqToLocn(objReq))
		}
	}
	quit
IncludedItems(&arrItemList)
	;-------------------------------------------------------------------------------
	; Returns list of item codes already included in the current Transfer Requisition.              
	;
	; History:
	; 07-May-2010	GRF		SR17274: Merged with cleanup; rewritten with array
	; 20-Apr-2010	Karine	SR17274: Created - Block duplicate item on Requisition 
	;--------------------------------------------------------------------------------
	new dteToday,idGridRow,idItem,strItemList,idReq,arrGrid,objGridLine
	
	kill arrItemList
	
	set dteToday = +$horolog
	set strItemList = ""
	
	// Loop on grid lines:
	set idReq       = $$$GRIDYKEYContainer
	do GetGridContents^COMGridEdit31G(.arrGrid)					;SR17267
	set idGridRow = ""
	for {
		set idGridRow = $order(arrGrid(idReq,idGridRow))
		quit:idGridRow=""
		
		set objGridLine = $get(arrGrid(idReq,idGridRow))
		set idItem =  $$$INReqLineItem(objGridLine)
		continue:idItem=""
		set arrItemList(idItem,idGridRow) = idGridRow
	}
	quit
 
]]></Routine>
</Export>