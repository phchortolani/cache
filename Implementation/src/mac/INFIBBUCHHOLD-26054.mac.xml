<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INFIBBUCHHOLD" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INFIBBUCHHOLD
	;-------------------------------------------------------------------------------
	; Routines associated with form INFIBBUCHHOLD
	; 
	; History:
	; 24-Mar-2005	GRF		SR10478 : Created
	;-------------------------------------------------------------------------------
#include COMSYS
#include WWWConst
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^INFIBBUCHHOLD("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
AfterButton(pLocn="")
	;-------------------------------------------------------------------------------
	; List entry count for other site locations.
	; Edit table doesn't allow them to be listed After Data Fields.
	; 
	; History:
	; 16-Jun-2005	GRF		SR10478 : Created
	;-------------------------------------------------------------------------------
	new count,Locn,LocnDesc,LocnLength,lstHeader
	
 
	kill ^CacheTempINFIBBUCHHOLD2(YUSER)
	
	set Locn = ""
	for {
		set Locn=$order(^INFIBBUCHHOLD(YM,Locn))
		quit:Locn=""
		
		if Locn'=pLocn {
			set ^CacheTempINFIBBUCHHOLD2(YUSER,Locn) = ""
		}
	}
	if $data(^CacheTempINFIBBUCHHOLD2(YUSER)) {
		
		set lstHeader = ""
		
		; TODO : Internationalisation <GRF>
		do Start^COMTable(lstHeader,"Unprocessed Transactions are also present for Site Locations :")
		
		set Locn = ""
		for {
			set Locn=$order(^CacheTempINFIBBUCHHOLD2(YUSER,Locn))
			quit:Locn=""
			
			set LocnLength = $length(Locn)
			set LocnDesc   = Locn
			for count = LocnLength:1:10 {
				set LocnDesc = LocnDesc_"&nbsp;"
			}
			set LocnDesc = LocnDesc_"&nbsp;("_$$$WWW0121LocationName($get(^WWW0121(0,YM,Locn,1)))_")"
			
			do NewLine^COMTable("lightblue")
			do InsertCell^COMTable(LocnDesc)
			do EndLine^COMTable()
		}
		do Stop^COMTable()
	}
	quit
	
BeforeButton(pLocn="")	
	;-------------------------------------------------------------------------------
	; Populate List of Required Characteristics (#51)
	;
	; History:
	; 24-Mar-2005	GRF		SR10478 : Created
	;-------------------------------------------------------------------------------
	new Date,idx,objHold,objPolicy,PolicyDate,ReqdList,TranDate,TranType
	
	$$$LogR("BeforeButton",pLocn)
	
	quit:pLocn=""
	
	; Refresh Requirements each time form is redisplayed
	kill ^CacheTempINFIBBUCHHOLD(YUSER)
	
	set pLocn = $piece(pLocn,Y,1)
	
	set Date = ""
	for {
		set Date=$order(^INFIBBUCHHOLD(YM,pLocn,Date))
		quit:Date=""
		
		set idx = ""
		for {
			set idx=$order(^INFIBBUCHHOLD(YM,pLocn,Date,idx))
			quit:idx=""
			
			set objHold = $get(^INFIBBUCHHOLD(YM,pLocn,Date,idx,1))
			set objHold = $$Refresh(objHold)
			
			set TranDate = $piece(objHold,Y,2)
			set TranType = $piece(objHold,Y,50)
			if TranDate="" set TranDate = +$h
			if TranType'="" {
				
		$$$LogRx(Date_","_idx_"<"_TranType_"<"_TranDate_"<")
				
				set PolicyDate = $order(^INFIBCHARMATRIX(YM,TranType,TranDate+1),-1)
				set objPolicy  = $get(^INFIBCHARMATRIX(YM,TranType,PolicyDate,1))
				set ReqdList   = $piece(objPolicy,Y,1)
				
				if ReqdList'="" {
					set ReqdList = $$CheckReqd(ReqdList,TranType,objHold)
				}
				if ReqdList'="" {
					set $piece(objHold,Y,51) = "<font color=""red""><b>"_ReqdList_"</b></font>"
				} else {
					set $piece(objHold,Y,51) = ""
				}
				
				; WWWSPEI should not be necessary - no reason to index transient data
				set ^INFIBBUCHHOLD(YM,pLocn,Date,idx,1) = objHold
			}
		}
	}
	
	quit
	
Refresh(BUCHUNG)
	;-------------------------------------------------------------------------------
	; Update records prior to review
	; 
	;      **********************************************
	;      *                                            *
	;      *  NOTE : Variable name "BUCHUNG" *MUST* be  *
	;      *  retained to work with LOAD routine.       *
	;      *                                            *
	;      **********************************************
	; 
	; Returns : revised record
	;
	; History:
	; 24-Mar-2005	GRF		SR10478 : Created
	;-------------------------------------------------------------------------------
	do LOAD^INFIBBUCHCODE
	quit BUCHUNG
	
CheckReqd(pReqdList,pTranType,pobjHold)    ;PRIVATE
	;-------------------------------------------------------------------------------
	; Strip Characteristic Types from list and examine data
	; 
	; Returns : Semicolon delimited list of Required Character Types without data
	;
	; History:
	; 24-Mar-2005	GRF		SR10478 : Created
	;-------------------------------------------------------------------------------
	new CharType,DataPosn,delim,ReturnList
	
	; don't repeat extraction for a single display
	if '$data(^CacheTempINFIBBUCHHOLD(YUSER,pTranType)) do Split(pReqdList,pTranType)
	
	set ReturnList = ""
	set delim    = ""
	set CharType = ""
	for {
		set CharType = $order(^CacheTempINFIBBUCHHOLD(YUSER,pTranType,CharType))
		quit:CharType=""
		
		set DataPosn = $get(^CacheTempINFIBBUCHHOLD(YUSER,pTranType,CharType))
		
		if DataPosn {
			if $piece(pobjHold,Y,DataPosn)="" {
				set ReturnList=ReturnList_delim_CharType
				set delim=";"
			}
		}
	}
	quit ReturnList
	
Split(pReqdList,pTranType)
	;-------------------------------------------------------------------------------
	; Strip Characteristic Types from list into Array
	;
	; History:
	; 01-Apr-2005	GRF		SR10478 : Include To Location codes and Reason Code
	; 24-Mar-2005	GRF		SR10478 : Created
	;-------------------------------------------------------------------------------
	new CharString,CharType,DataPosn,DataString,idx1,idx2,LastPosn
	
	set CharString = "IC1,IC2,IC3,C-IC1,C-IC2,C-IC3,P-IC1,P-IC2,P-IC3,LC1,LC2,T-LC1,T-LC2,SC1,SC2,SC3,CC1,CC2,CC3,OC1,OC2,RC"
	set DataString = "70,71,72,73,74,75,76,77,78,80,81,85,86,90,91,92,95,96,97,100,101,103"
	;set CharString = "IC1,IC2,IC3,C-IC1,C-IC2,C-IC3,P-IC1,P-IC2,P-IC3,LC1,LC2,SC1,SC2,SC3,CC1,CC2,CC3,OC1,OC2"
	;set DataString = "70,71,72,73,74,75,76,77,78,80,81,90,91,92,95,96,97,100,101"
	
 
	if (pTranType="MVI") || (pTranType="MVO") {
		if (";"_pReqdList_";")[";LC1;" set pReqdList = pReqdList_";T-LC1"
		if (";"_pReqdList_";")[";LC2;" set pReqdList = pReqdList_";T-LC2"
	}
	
	set LastPosn=$length(pReqdList,";")
	for idx1=1:1:LastPosn {
		set CharType = $piece(pReqdList,";",idx1)
		set DataPosn=""
		
		for idx2=1:1:$length(CharString,$$$COMMA) {
			quit:DataPosn'=""
			
			if $piece(CharString,$$$COMMA,idx2)=CharType set DataPosn = $piece(DataString,$$$COMMA,idx2)
		}
		set ^CacheTempINFIBBUCHHOLD(YUSER,pTranType,CharType)=DataPosn
	}
	quit
	
]]></Routine>
</Export>