<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWSETS" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWSETS(pstrGlobal,pobjRecord,&pstrStatus)
#include WWWConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		Set Values
	;		WERTE SETZEN
	;	S YOK=$$^WWWSETS("^TEST(0,1,1)","DATA~DATA~DATA")
	;
	; Inputs : 
	;	pstrGlobal		Full Global Reference                KEY INKL "^DATEI(...)"
	;					e.g. pstrGlobal="^FINGLAccount(0,123,1)"
	;	pobjRecord		Data Record "X1~X2~ ... ~Xn"        DATENSATZ
	; 
	; ByRef :
	;	pstrStatus		
	;
	; Returns :
	;	blnError		$$$NO  : $$$QSave
	;					$$$YES : $$$QDontSave => HardFail in WWWSPEI
	;
	; History :
	; 22-Oct-2008	shobby	BR014985: Included change from FIS
	; 10-Jul-2007	RPW		SR15571: Complete rewrite to brace syntax and nice variables.
	; 05-Feb-2007	RPW		SR14900: Remove unused code.
	; 02-Jan-2006	GRF		Naked Reference (in disabled block!); doco; quits
	; 05-Jan-2006	Steve S	Added Doco
	; 04.09.1997	DT		(C) BY DITMAR TYBUSSEK
	;-------------------------------------------------------------------------------
	; objWWW001: Data Dictionary (WWW001)
	; 		D8 :	 Alternate Save Procedure
	; 		D9 :	 Record Length
	; 		D11:	 Alternate Delimiter (ASCII)
	; 		D12:	 Other UCI
	; 		D13:	 Other Volume
	; 		D18:	 Send Modification To
	; 		D22:	 Save Data In File
	; 
	; idClass:   Pure class name (e.g. "FINGLAccount")
	;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new blnError,enumAltSaveProc,idClass,intMaxLen,objWWW001,strAltDelim,strSaveInFile
	
	set blnError = $$$YES
	
	; FIXME : <GRF> simplify as
	;     quit:($extract($get(pstrGlobal))'="^")||$find(pstrGlobal,"""""") blnError
	quit:('$data(pstrGlobal))||(pstrGlobal="")||($extract(pstrGlobal)'="^")||($find(pstrGlobal,"""""")) blnError
	
	do SetGlobal^WWWSETObject(.pstrGlobal,.objWWW001,.idClass)
	
	set intMaxLen = $$$WWW001RecordLength(objWWW001)
	if (intMaxLen="") || (intMaxLen>325000) {
		set intMaxLen = 325000
	}
	
	;---------------------------------------
	;  1. Swap the Global name to that in $$$WWW001SaveDataInFile if applicable.
	;  2. Perform alternative storage if applicable, or
	;  3. Store the data in pobjRecord into the Global specified
	;---------------------------------------
	
	set enumAltSaveProc=$$$WWW001AltSaveProcedure(objWWW001)
	
	; FIXME : <GRF> write as "if 0 /elseif 4 /elseif 5" rather than nesting.
	;               Puts bulk of processing on first test.
	
	if enumAltSaveProc>0 {
		if enumAltSaveProc=4 {
			set blnError=$$OBJECT(idClass,pstrGlobal,pobjRecord,.pstrStatus)	;KLASSEN
		} elseif enumAltSaveProc=5 {
			do PROG(pstrGlobal,.pobjRecord)     
			set blnError=$$$NO					;DATEI FUER PROGRAMME ;data file 
		}
	} else {
		set strAltDelim=+$$$WWW001AltDelimiterASCII(objWWW001)
		; NULL or TILDE
		if (strAltDelim'=0)  && (strAltDelim'=126) {
			set pobjRecord=$translate(pobjRecord,Y,$char($piece(objWWW001,Y,11)))
		}
	
		;--------------------------------------- TSTART
		if $data(%KEY) TSTART
		;---------------------------------------
		if '$data(pobjRecord) set pobjRecord=""

		do Out^WWWDataExchange("Save",pstrGlobal,pobjRecord) //FIS 17-Jan-2008 ;BR014985
		set @pstrGlobal=$extract(pobjRecord,1,intMaxLen)
		set blnError=$$$NO
		;---------------------------------------
		if $data(%KEY) TCOMMIT		// JW FIXME: How about rollback otherwise ???
		;---------------------------------------
	}
	
	QUIT blnError
	
OBJECT(pidClass,pstrGlobal,pobjRecord,&pstrStatus)
	;-------------------------------------------------------------------------------
	;	SAVE AS OBJECT 
	;		SET YA2=##class(class).%New()   ;OPEN ;table-mat 
	;		SET YA2.NAME=VALUE              ;table-mat 
	;		SET YA5=YA2.%Save()             ;speichern ;table-mat memorize 
	;		SET YA5=YA2.%close()            ;close ;table-mat
	;
	; Inputs:
	;	pidClass		
	;	pstrGlobal		"^DATEI(KEY..)"
	;	pobjRecord		"GESAMTER;DATENSATZ;"
	;
	; ByRef:
	;	pstrStatus		
	; 
	; History:
	; 10-Jul-2007	RPW		SR15571: Complete rewrite to brace syntax and nice variables.
	;-------------------------------------------------------------------------------
	new blnError,enumInputType,idField,idList,idObject,loop,lstProperty
	new objField,objForm,strField,strPropertyName,strStatus
	
	set idObject=$$GetObjectId^WWWSETObject(pstrGlobal)
	
	if $$Exists^WWWSETObject(pidClass,idObject) {
		set objForm=$System.OBJ.OpenId(pidClass,idObject)
	} else {
		set objForm=$System.OBJ.New(pidClass)
		set objForm.Company=$piece(idObject,"||",1)
		$$$Order3(^WWW002,0,pidClass,idField)
			set objField=$translate($get(^WWW002(0,pidClass,idField,1)),";-:_/*#",",,,,,,,")  ;DEFINITON
			continue:objField=""
			
			set strPropertyName=$$$WWW002PropertyName(objField)
			if strPropertyName="" set strPropertyName=$$$WWW002PropertyDescription(objField)  ;PROPERTYNAME
			continue:strPropertyName=""
 
			set $zobjproperty(objForm,strPropertyName)=$piece(idObject,"||",idField+1)
		$$$End
	}
	
 	$$$Order3(^WWW003,0,pidClass,idField)
 		set objField=$translate($get(^WWW003(0,pidClass,idField,1)),";-:_/*#",",,,,,,,")  ;DEFINITON
		continue:objField=""
		
		set strPropertyName=$$$WWW003PropertyName(objField)  ;PROPERTYNAME
		if strPropertyName="" set strPropertyName=$$$WWW003PropertyDescription(objField)   ;PROPERTYNAME
		continue:strPropertyName=""  ;KEINER ;nobody 
		continue:$FIND(strPropertyName,".")
		
		set strField=$piece(pobjRecord,Y,idField)
		
		if $$$WWW003AlternateInputType(objField)'="" {
			do DEEPSAVE($$$WWW003AlternateInputType(objField),strPropertyName,objForm,strField)
		
		} else {
			set enumInputType=$$$WWW003InputType(objField)
			if enumInputType'=15 {
				/*
				if enumInputType=14 { // Timestamp
					if strField'="" {
						set strField=$zdatetime(strField,3) // ODBC Time this is required for Timestamps
					}
				}
				*/
				
				// Do not save fields if they have the same value as on disk
 
				if strField'=$zobjproperty(objForm,strPropertyName) {
					set $zobjproperty(objForm,strPropertyName)=strField
				}
			} else {
				set idList=strField
				set lstProperty=""
				
	;	NOTE : didn't have $translate(idList,";") check before SR15571
	;	       lstProperty will now have $listlength = 0 if idList is empty
	;	       whereas previously it had $listlength = 1 with first element = "".
	;	       But didn't have lstProperty'=$zobjproperty check either.     <GRF>
				if $translate(idList,";")'="" {
					for loop=1:1:$length(idList,";") {
						set lstProperty=lstProperty_$lb($piece(idList,";",loop))
					}
				}
				if lstProperty'=$zobjproperty(objForm,strPropertyName) {
					set $zobjproperty(objForm,strPropertyName)=lstProperty
				}
			}
		}
 	$$$End
 
	set strStatus=objForm.%Save() 
	
	set blnError=$$$NO
	if $$$ISERR(strStatus) {
		set pstrStatus=$$ISStatusToDLStatus^COMUtilError(strStatus)
		set blnError=$$$YES
	}
	quit blnError
	
DEEPSAVE(pidClass,pstrPropertyName,pobjForm,pidSubClass)
	;-------------------------------------------------------------------------------
	; Save existing objects 
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 10-Jul-2007	RPW		SR15571: Rewrote in brace syntax
	;-------------------------------------------------------------------------------
	new idObject,blnSame,objProperty
	
	quit:($get(YFORM)="")||($get(YUSER)="")||(pidSubClass="")
	
	set pidSubClass=$$^WWWYM(pidClass)_","_pidSubClass
		
	set idObject=$$GetObjectId^WWWSETObject("("_pidSubClass_")")
				
	if $$Exists^WWWSETObject(pidClass,idObject) {
		set objProperty=$zobjProperty(pobjForm,pstrPropertyName)
		set blnSame=$$$NO
		if objProperty'="" {
			set blnSame=(objProperty.%Id()=idObject)
		}
		set:'blnSame $zobjProperty(pobjForm,pstrPropertyName)=$System.OBJ.OpenId(pidClass,idObject)
	}
		
	QUIT
	
PROG(pstrGlobal,&pobjRecord) ;SCHREIBEN PROGRAMM ;write programme 
	;------------------------------------------------------------------------------- 
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 10-Jul-2007	RPW		SR15571: Rewrote in brace syntax
	;-------------------------------------------------------------------------------
	;; Normally Disclinc would always have this
	QUIT
	
	/* vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;QUIT   ;RISIKO
	NEW YPRO,YEXE,YDP,YNL,I,YI
	
	SET YPRO=$TRANSLATE($PIECE($PIECE(pstrGlobal,"(",2),",",2),"""")
	QUIT:(($EXTRACT(YPRO,1,3)="WWW") || ($EXTRACT(YPRO)'="Y"))
	SET YDP="|"
	SET YNL=""
	IF $TRANSLATE(pobjRecord,YDP)'="" {
		SET YEXE="ZR  F I=1:1 S YI=$P(pobjRecord,YDP,I) Q:$P(pobjRecord,YDP,I,9999)=YNL  I YI'=YNL ZI YI ZS @YPRO"
		XECUTE YEXE
	}
	QUIT
	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END */
	
]]></Routine>
</Export>