<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMClientMasterData" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMClientMasterData
	
#include WWWConst
#include %occInclude
#include COMConst
#include COMSYS
	
Get()
	;-------------------------------------------------------------------------------
	; Routine to 
	;	1. Export Masterfile data for the current N/S
	;	2. Email to support@disclinc.com
	;
	; Params:	pidFilePath	- file path
	;
	; ByRefs:
	;
	; Returns:	Status
	;
	; History:
	; 28-Jan-2011	PPP		SRxxxx: Created
	;-------------------------------------------------------------------------------
	new idFile,idFileCompressed,sc,strAuditFile,strFile,strPath
	
	set sc = $$$OK
	
	if $$$ISOK(sc) {
		set strFile = $zsearch("cache.dat")
		if strFile="" {
			set sc = "0:can not find cache.dat"
		}
	}
	
	if $$$ISOK(sc) {
		set strPath = $piece($zcvt(strFile,"l"),"cache.dat")
		if strPath="" {
			set sc = "0:No path found for Cache.dat"
		}
		//write !,strPath,!
	}
	
	//Audit File
	if $$$ISOK(sc) {
		set strAuditFile = strPath_"Copy2ftpMF.txt"
		do $zutil(140,5,strAuditFile)
		do Log^COMClientData("Path : "_strPath,strAuditFile,"Path")
	}
	
	set strPath = ##class(%File).NormalizeDirectory(strPath)
	set idFile  = $zu(110)_$zu(5)_$zdt(+$horolog,8)_".GSA"
	set sc      = $$Export(strPath, idFile, strAuditFile)
	
	if $$$ISOK(sc) {
		set sc = $$Compress(strPath,idFile,strAuditFile,.idFileCompressed)	
	}
	
	if $$$ISOK(sc) {
		set sc = $$SendEmail($get(idFileCompressed),$get(strAuditFile))
	}
	
	if $$$ISERR(sc) {
		write !,"Error:"_$$DecodeCacheError^COMUtilError(sc)
	}
	quit sc
	
	
Export(pstrPath,pidFile,pstrAuditFile,pstrTypes=",5,9,")
	;-------------------------------------------------------------------------------
	; Export the Masterfile Info from the N/S to a Global
	;
	; Params:	pidFile		: filename
	;			pstrTypes  	: 5 (MasterFile) 9 (User Settings) 
	; ByRefs:
	;
	; Returns:	Status
	;
	; History:
	; 28-Jan-2011	PPP		SRxxxx: Created
	;-------------------------------------------------------------------------------
	new Glo
	new idGlo
	new blnData
	new idClass
	new idType
	new sc
	new objClass
	new idFileExt
	
	do Log^COMClientData("Select Data to Exporting Started",pstrAuditFile,"Select to Export Started")
	set sc = $$$OK
	
	set Glo="^%zzzzz"
	for {
		set Glo=$order(^$Global(Glo))
		quit:Glo=""
		
		set blnData=+$data(@Glo)
		continue:'blnData
		continue:$extract(Glo,1,4)="^AEP"
		continue:$extract(Glo,1,4)="^REP"
		continue:$extract(Glo,1,4)="^SAL"
		
		set idClass = $piece(Glo,"^",2)
		
		if idClass'="" {
			set objClass = $get(^WWW001(0,idClass,1))
			set idType = $$$WWW001ClassType(objClass)
			
			if (pstrTypes [ (","_idType_",")) {
				//write !,idType," : ",idClass
				do Log^COMClientData(idType_" : "_idClass,pstrAuditFile)
				set idGlo(idClass_".gbl")=""
			}
		}
	}
	
	set idFileExt = pstrPath_pidFile
	
	//write !,"Exporting Data to "_idFileExt,!
	set sc = $$Log^COMClientData("Exporting Data to "_idFileExt,pstrAuditFile,"Export Started")
	
	if $$$ISOK(sc) {
		set sc = ##class(%Library.Global).Export(,.idGlo,idFileExt)
		do Log^COMClientData("Export Status:"_sc,pstrAuditFile,"Export Completed")
	}
	quit sc
	
	
Compress(pstrPath,pidFile,pstrAuditFile,&idFileCompressed)	
	;-------------------------------------------------------------------------------
	; Compress File
	;
	; Params:	pidFile				: filename
	;
	; ByRefs:
	;			idFileCompressed 	: ByRef returns the compressed file name (with path)
	;
	; Returns:	Status
	;
	; History:
	; 28-Jan-2011	PPP		SRxxxx: Created
	;-------------------------------------------------------------------------------
	new sc,strCompCode,strDate,strSendFile
	
	set sc = $$$OK
	set strCompCode = $get(^SysSetup("ClientData","CompStr"))
	; Command line compress string. Set based on compression software loaded on server
	; replacement strings:
	;  %f% file to be compressed
	;  %n% file name without extentsion
	;  %d% date
	; Example "c:\Program Files\7-Zip\7z.exe" a -t7z %n%.7z %f%"
	
	set strSendFile = $get(^SysSetup("ClientData","SendFile"))
	; file name to send via ftp, typically the compressed file
	; replacement strings:
	;  %f% file to be compressed
	;  %n% file name without extentsion
	;  %d% date
	; Example "%n%.7z"
	
	if $$$ISOK(sc) {
		set strDate = $zd(+$horolog,3)
		set sc = $$Log^COMClientData("Client Data Compression Started",pstrAuditFile,"Copy Started")
	}
		
	if $$$ISOK(sc) {
		if strCompCode="" {
			set sc = "0:No Command line for compression in ^SysSetup(""ClientData"",""CompStr"")"
			do Log^COMClientData(sc,pstrAuditFile)
		}
	}
	
	if $$$ISOK(sc) {
		if strSendFile="" {
			set sc = "0:No Send File in ^SysSetup(""ClientData"",""SendFile"")"
			do Log^COMClientData(sc,pstrAuditFile)
		}
	}
	
	if $$$ISOK(sc) {
		set sc = $$Compress^COMClientData(pstrPath_pidFile,strCompCode,strDate,pstrAuditFile)
		
		if $$$ISOK(sc) {
			set idFileCompressed = $piece(pidFile,".",1)
			if sc=$$$OK {
				set idFileCompressed = $$Convert^COMClientData(strSendFile,pstrPath_pidFile,strDate)
			}
		}
	}
	
	if $$$ISOK(sc) {
		do Log^COMClientData("File "_pidFile_" compressed to "_$get(idFileCompressed)_" Status="_sc,pstrAuditFile,"Compress Completed")
	} else {
		do Log^COMClientData("Error Status = "_sc,pstrAuditFile,"Error")
	}
	quit sc
	
	
SendEmail(pidFile , pstrAuditFile)
	;-------------------------------------------------------------------------------
	; Send an Email
	;
	; Params:	pidFile			: Filename
	;			pstrAuditFile	: Audit File
	; ByRefs:
	;
	; Returns:	Status
	;
	; History:
	; 28-Jan-2011	PPP		SRxxxx: Created
	;-------------------------------------------------------------------------------
	new arrDisp,strEmail,strPC,strStatus,strVer
	
	$$$VAR
	set strEmail = $$$WWW012EMailForHelp($get(^WWW012(0,YM,1)))
	set strVer   = $piece($get(^WWWVERSION(0,"AlphaLinc",1)),Y,1)
	set strPC    = strVer_" : "_$zu(110)_"/"_$zu(5)_" at "_$zdt($horolog,3)
	set arrDisp(1) = "Data Saved from : "_strPC
	set arrDisp(2) = "Attached File : "_pidFile
	set arrDisp(3) = "#attach "_pidFile		//#attach //server/dir1/.../dirN/filename
	set arrDisp(4) = "Attached Audit File : "_pstrAuditFile
	set arrDisp(5) = "#attach "_pstrAuditFile
	
	set strStatus = $$SendEmail^COMUtilMail(strEmail,"DEV", strPC,.arrDisp)
	
	quit strStatus
	
	
Import(pidFile)	
	;-------------------------------------------------------------------------------
	; Import Global Save File
	;
	; Params:	pidFile		: filename
	;
	; ByRefs:
	;
	; Returns:	Status
	;
	; History:
	; 28-Jan-2011	PPP		SRxxxx: Created
	;-------------------------------------------------------------------------------
	new sc
	
	set sc = ##class(%Library.Global).Import(,"*",pidFile)
	
	if $$$ISERR(sc) {
		write !,"Error:"_$$DecodeCacheError^COMUtilError(sc)
	}
		
	quit sc
	
]]></Routine>
</Export>