<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INReqRWLineUtils" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INReqRWLineUtils
	
#include %occInclude
#include COMSYS
#include INConst
#include COMConst
#include COMView
	
#define DELIM	$char(31)
	
UpdateDOView(&parrGrid)
	;-------------------------------------------------------------------------------
	; Recalculate the temporary PO/DO/DOLines based on selected Supply Recs
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 08-Apr-2010	GRF		SR17177: objGrid should be parrGrid
	; 08-Jan-2010	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	new dteShip,fltQty,idItem,idKey,idLocn,idPT,idRow,idSup,idTM,idUnit
	new intPO,intDO,intLN,objReq,strPO
	
	kill ^CacheTempSort(YUSER)

	set intPO = 0
	set idKey = ""
	for {

		set idKey = $order(parrGrid($$$GRIDYKEYContainer,idKey))
		quit:(idKey = "")
		continue:$data(^WWWDATEN(YM,+$horolog,YUSER,"INReqRWLine","V","KILLEDRECORD",idKey))
		
		set objReq = $$$GRIDGetYFELD(idKey)
		quit:objReq=""

		set idSup 	= $$$INRequisitionSupplier(objReq)
		continue:idSup=""

		set idRow = $get(^WWWDATEN(YM,+$horolog,YUSER,"INReqRWLine","V","REFERENCEROW",idKey,1))

		if '$$$INRequisitionRelease(objReq) {
			if idRow {
				do UpdateManualField^COMGridEdit31G(idRow,14,"")
			}		
			continue											// EARLY EXIT (Not yet flagged as released)
		}

		if ($$$INRequisitionUnitPrice(objReq)'="") && ($$$INRequisitionLocation(objReq)'="") {	

			set idPT = $$$INRequisitionPaymentTerms(objReq)
			if idPT="" {
				set idPT = " "
			}
			
			set idLocn = $$$INRequisitionShipTo(objReq)
			set idTM   = $$$INRequisitionTransportationMethod(objReq)
			if idTM="" {
				set idTM = " "
			}
			
			set dteShip	= $$$INRequisitionDueDate(objReq)
			if dteShip="" {
				set dteShip = +$horolog
			}
			
			//Calculate Order Lists
			set (intPO,intDO,intLN) = ""
			if (dteShip '= "") && (idLocn '= "") {  //Ship Date, ShipTo Location
				set idItem = $$$INRequisitionItem(objReq)
				if (idItem = "") set idItem = "*NOITEM*"_$zh
				set fltQty = $$$INRequisitionQuantity(objReq)
				set idUnit = $$$INRequisitionUnit(objReq)
				if (idUnit = "") set idUnit = "*NOUNIT*"_$zh

				set intPO = $get(^CacheTempSort(YUSER,"PO_Number",idSup))
				if (intPO = "") {  //No DO for this attributes yet
					set intPO = $order(^CacheTempSort(YUSER,"PO_Structure",""),-1)+1
					set ^CacheTempSort(YUSER,"PO_Structure",intPO)=idSup
					set ^CacheTempSort(YUSER,"PO_Number",idSup)=intPO
					//set ^CacheTempSort(YUSER,"PO_Numbers")=intPO
				}

				set intDO = $get(^CacheTempSort(YUSER,"DO_Number",intPO,dteShip,idLocn,idTM))
				if (intDO = "") {  //No DO for this attributes yet
					set intDO = $order(^CacheTempSort(YUSER,"PO_Structure",intPO,""),-1)+1  //Next DO
					set ^CacheTempSort(YUSER,"PO_Structure",intPO,intDO)=dteShip_":"_idLocn_":"_idTM
					set ^CacheTempSort(YUSER,"DO_Number",intPO,dteShip,idLocn,idTM) = intDO
				}
				set intLN = $get(^CacheTempSort(YUSER,"LN_Number",intPO,intDO,idItem,idUnit))
				if intLN {
					set ^CacheTempSort(YUSER,"PO_Structure",intPO,intDO,intLN) = $get(^CacheTempSort(YUSER,"PO_Structure",intPO,intDO,intLN))_","_idKey
					set $piece(^CacheTempSort(YUSER,"LN_Qty",intPO,intDO,intLN),":",3) = $piece($get(^CacheTempSort(YUSER,"LN_Qty",intPO,intDO,intLN)),":",3) + fltQty
				}
				if (intLN = "") {  //No Line for this item yet
					set intLN = $order(^CacheTempSort(YUSER,"PO_Structure",intPO,intDO,""),-1)+1  //Next LN
					set ^CacheTempSort(YUSER,"PO_Structure",intPO,intDO,intLN) = idKey
					set ^CacheTempSort(YUSER,"LN_Number",intPO,intDO,idItem,idUnit) = intLN
					set ^CacheTempSort(YUSER,"LN_Qty",intPO,intDO,intLN) = idItem_":"_idUnit_":"_fltQty
				}
				set ^CacheTempSort(YUSER,"Supply",idKey)=fltQty_":"_$$$INRequisitionLocation(objReq)
			}

			set strPO = $g(intPO)_" : "_$g(intDO)_" : "_$g(intLN)
			set ^CacheTempSort(YUSER,"Key",idKey)=strPO
			
			if idRow {
				do UpdateManualField^COMGridEdit31G(idRow,14,strPO)
			}
		}
	}

	do ShowDynaGrid($$$EnumWWWDYNTABLEAfterDataFields,"INReqRW"_$$$DELIM_"INReqRWLine"_$$$DELIM_1)
	quit
	
	
CalculatedPO(pYKEY)
	;-------------------------------------------------------------------------------
	; Called by Default Value of Field
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Jan-2010	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	new idKey
	
	set idKey = $$$KEY2(pYKEY)
	quit $get(^CacheTempSort(YUSER,"Key",idKey))


	/// ************************************** Dynamic Grid Log **************************///	

SetupDynaGrid()
	;-------------------------------------------------------------------------------
	; Called by Default Value of Field
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Jan-2010	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	new intPO
	new strDesc
	new intDO
	new intDL
	new strData
	new blnHide
	new idShipTo
	new objLocn
	new strSupplies
	new idItem
	new strItem
	new idUnit
	new strUnit
	new fltQty
	new intLN
	
	kill ^CacheTempDynamicTable(YUCI,YUSER)
	set blnHide = +$$$WWW012HideRelationClassIDs($get(^WWW012(0,YM,1)))

	set intPO=""
	for {
		set intPO = $order(^CacheTempSort(YUSER,"PO_Structure",intPO))
		quit:intPO=""
		
		set strData = $get(^CacheTempSort(YUSER,"PO_Structure",intPO))
		set strDesc = $select(blnHide:"",1:"("_strData_") ")_$$$INLIEFShortName($get(^INLIEF(0,strData,1)))
		do CreateDynaGridLine(intPO,,,strDesc)
		
		set intDO=""
		for {
			set intDO = $order(^CacheTempSort(YUSER,"PO_Structure",intPO,intDO))
			quit:intDO=""

			set strData  = $get(^CacheTempSort(YUSER,"PO_Structure",intPO,intDO))
			set idShipTo = $piece(strData,":",2)
			set objLocn  = $get(^WWW0121(0,YM,idShipTo,1))
			do CreateDynaGridLine(,intDO,,$$^WWWDATE(+strData),$select(blnHide:"",1:"("_idShipTo_") ")_$$$WWW0121LocationName(objLocn))

			set intLN=""
			for {
				set intLN = $order(^CacheTempSort(YUSER,"PO_Structure",intPO,intDO,intLN))
				quit:intLN=""

				set strSupplies = $get(^CacheTempSort(YUSER,"PO_Structure",intPO,intDO,intLN))
				set strData = $get(^CacheTempSort(YUSER,"LN_Qty",intPO,intDO,intLN))

				set idItem 	= $piece(strData,":",1)
				set strItem = $$$INARTSearchName($get(^INART(0,idItem,1)))

				set idUnit 	= $piece(strData,":",2)
				set strUnit	= $$$AppEnum("EINHEIT",idUnit)
				set fltQty 	= $piece(strData,":",3)
								
				set strItem	= 
				$select( blnHide && (strItem'=""):$$$JSText(strItem),
		        1:"("_$$$JSText(idItem)_") "_$$$JSText(strItem) )

				set strUnit	= 
				$select( blnHide && (strUnit'=""):$$$JSText(strUnit),
		        1:"("_$$$JSText(idUnit)_") "_$$$JSText(strUnit) )
				
				do CreateDynaGridLine(,,intLN,strItem,strUnit,$justify(fltQty,0,2))
				
				for i=1:1:$length(strSupplies,",") {    ; FIXME : single character variables in breach of coading styandards - use loop
					set idSupply = $piece(strSupplies,",",i)
					
					if idSupply'="" {
						set strData = $get(^CacheTempSort(YUSER,"Supply",idSupply))
						set fltQty 	= $piece(strData,":",1) 
						set idLocn 	= $piece(strData,":",2) 
						set objLocn = $get(^WWW0121(0,YM,idShipTo,1))

						do CreateDynaGridLine(,,,,,,idSupply,$justify(fltQty,0,2),$select(blnHide:"",1:"("_idLocn_") ")_$$$WWW0121LocationName(objLocn))
					}
				}
			}
		}	
	}
	quit
	
	
CreateDynaGridLine(pidPO="",pidDO="",pidDL="",pstrD1="",pstrD2="",pfltQty="",pidSupply="",pfltReq="",pstrD3="")
    ;-------------------------------------------------------------------------------
    ; Create DynaGrid Lines for Order Proposals
    ;
    ; Returns:
    ;
	; History:
	; 19-Jan-2010	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	new idLine
	new i
	
	set idLine = $order(^CacheTempDynamicTable(YUCI,YUSER,1,""),-1)+1
	set ^CacheTempDynamicTable(YUCI,YUSER,1,idLine,"data") = pidPO_Y_pidDO_Y_pidDL
	set ^CacheTempDynamicTable(YUCI,YUSER,1,idLine) = pidPO_Y_pidDO_Y_pidDL_Y_pstrD1_Y_pstrD2_Y_pfltQty_Y_pidSupply_Y_pfltReq_Y_pstrD3

	if pidPO'="" {    ; FIXME : single character variables in breach of coading styandards - use loop
		for i=1:1:9 {
			set $piece(^CacheTempDynamicTable(YUCI,YUSER,1,idLine,"col"),Y,i) = "red"
		}
	}
	if pidDO'="" {
		for i=2:1:9 {
			set $piece(^CacheTempDynamicTable(YUCI,YUSER,1,idLine,"col"),Y,i) = "lightgreen"
		}
	}
	if pidDL'="" {
		for i=3:1:9 {
			set $piece(^CacheTempDynamicTable(YUCI,YUSER,1,idLine,"col"),Y,i) = "lightblue"
		}
	}	
	if pidSupply '= "" {
		for i=7:1:9 {
			set $piece(^CacheTempDynamicTable(YUCI,YUSER,1,idLine,"col"),Y,i) = "lightcyan"
		}
	}
	quit
	
	
ShowDynaGrid(pidEvent,pidParameters)
    ;-------------------------------------------------------------------------------
    ; Show Price Rule Messages
    ;
    ; Returns:
    ;
	; History:
	; 19-Jan-2010	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	new lstHeaders,lstColTypes

	do SetupDynaGrid()

	//Note: Do not have ' (apostrophies in the Headers, Dynagrid does not like it")
	//$listbuild("P/O","D/O","D/L","Supplier/DueDate/Item","Ship To/Unit","Qty","Supply","Req Qty","Sold-To")
	set lstHeaders  = $listbuild($$$Text("IN01193"),$$$Text("IN01194"),$$$Text("IN01195"),$$$Text("IN01196"),$$$Text("IN01197"),$$$Text("IN01198"),$$$Text("IN01199"),$$$Text("IN01202"),$$$Text("IN01203"))
	set lstColTypes = $listbuild($listbuild("left","display"),$listbuild("left","display"),$listbuild("left","display"),$listbuild("left","display"),$listbuild("left","display"),$listbuild("right","display"),$listbuild("left","display"),$listbuild("right","display"),$listbuild("left","display"))
	
	do DrawTable^WWW120DynTable(lstHeaders,1,lstColTypes,pidParameters,"",pidEvent,,"IN01200")
	
	kill ^CacheTempDynamicTable(YUCI,YUSER)
	quit
	
]]></Routine>
</Export>