<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWOUT" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWOUT
#include COMSYS
#include WWWConst 
#include COMConst
#;SR15394
#;define Rekey(%1)		set ^mtemp("RekeyClass",$job,%1)="" ;Removed BR014797
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		HERAUSSPIELEN PROGRAMMVERSION
	; 
	; Called By : Form WWWOUT : Execute After Save
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 05-Feb-2007	JW		SR15394: Rekey WWW004.
	; 30-Mar-2006	SC		SR13942: Use JobWrapper^COMUtilJob
	; 02-Sep-2005	JW		SR12966: WWWSYSTEM1 is not shared
	; 22-Jun-2005	RPW		SR12022: Call the new COMDistOut3 if we are have a #
	; 							instead of a $ in VORG(3)
	; 06.Oct.1997  	DT
	;-------------------------------------------------------------------------------
	NEW VORG1,VORG2,VORG3,VORG4,VORG5,VORG6,VORG7,VORG8,VORG9,VORG10
	
	SET VORG1  = $GET(VORG(1)) 
	SET VORG2  = $GET(VORG(2)) 
	SET VORG3  = $GET(VORG(3))  
	SET VORG4  = $GET(VORG(4))  
	SET VORG5  = $GET(VORG(5))  
	SET VORG6  = $GET(VORG(6))  
	SET VORG7  = $GET(VORG(7))  
	SET VORG8  = $GET(VORG(8))
	SET VORG9  = $GET(VORG(9))
	SET VORG10 = $GET(VORG(10))
	JOB OUTPUT^WWWOUT(VORG1,VORG2,VORG3,VORG4,VORG5,VORG6,VORG7,VORG8,VORG9,VORG10)::1 IF '$TEST DO ^WWWINFO($$^WWWTEXT(144)) QUIT ;SR13942
	DO ^WWWINFO($$^WWWTEXT(383))  ; "Program Has Started In Background"
	QUIT
	
	
OUTPUT(VORG1,VORG2,VORG3,VORG4,VORG5,VORG6,VORG7,VORG8,VORG9,VORG10,pblnAddOn=$$$NO,pidConfig="") ;EINSPRUNG
	;-------------------------------------------------------------------------------
	; Called By :
	;	AEPExportNetMgr		: do OUTPUT^WWWOUT("",1,"#"_ModuleList,"","",1,systemList,"","","")
	;	COMDistOut6			: do OUTPUT^WWWOUT("",1,"#"_modulelist,"","",1,systemlist,"","","")
	;	COMVARBuild			: do OUTPUT^WWWOUT("",1,"#"_modulelist,"","",1,systemlist,"","","",$$$YES,pidConfig)
	;						                    1 2       3         4  5 6      7      8  9 10  AddOn
	; Inputs
	;		VORG2		blnKillFirst	Always $$$YES
	;		VORG3		strModuleList	"#" prefix ensures COMDistOut6 is called
	;		VORG6		blnKillAfter	Always $$$YES
	;		VORG7		strMenuList
	;		pblnAddOn
	;		pidConfig	
	;
	; History:
    ; 03-Jul-2009	PPP		SR16676: Add Specific Globals to the list
	; 24-Dec-2008	GRF		SR16253: Remove old commented blocks
	; 19-Dec-2008	GRF		SR16253: remove unnecessary VORG initialisation
    ; 08-Oct-2008	PPP		SR15868: New Parameter 'pblnAddOn', pidConfig
    ; 							If loading an AddOn do not add CORE class/forms etc 
    ; 							even if they are referenced
	; 15-Nov-2007	shobby	SRBR014797: Change rekey global to ^COMBuildRekey. Refer
	; 							 to SR if this seems stupid.
	; 27-Mar-2007	RPW		SR15408: Fixed to correctly follow old code.
	; 13-Mar-2007	RPW		SR15408: Mostly rewritten in { syntax
	; 06-Feb-2007	RPW		SR15394: Rekey the classes here not in Out^COMDistOut6
	; 04-May-2006	RPW		SR14354: Use COMDistOut6
	; 30-Mar-2006 	SC		SR13942: No longer set environment within routine. 
	; 							Maintained by calling function.	Reverted.
	; 28-Dec-2005	PO		SR14015: Call Out^COMDistOut5 instead of Out^COMDistOut3
	; 23-Jun-2005	RPW		SR12022,12280: If VORG(3) starts with a # call the out
	; 							routine on COMDistOut3 instead of COMDistOut
	; 17-Apr-2003	SCR		Disc Change to Routine Exists check
	; 05.12.2003	Bec		24774; CHECK IF COMPLED ROUTINE EXISTS
	;-------------------------------------------------------------------------------
	SET $ZTRAP="^WWWERROR"
	
	new strVORG7,strFORM
	
	DO LOW^%PRIO
	DO ^WWWVAR ;SR13942 reversed
	KILL ^WWWSOR(YUSER)
	
	LOCK +^WWWOUT:1 IF '$TEST QUIT
	
	SET VORG(1)   = $GET(VORG1)    ; FORMULARE      
	SET VORG(2)   = $GET(VORG2)    ; MIT LOESCHEN
	SET VORG(3)   = $GET(VORG3)    ; MODUL  ;module 
	SET VORG(4)   = $GET(VORG4)    ; MIT STANDARD
	SET VORG(5)   = $GET(VORG5)    ;  
	SET VORG(6)   = $GET(VORG6)    ; MIT EXPORT
	SET VORG(7)   = $GET(VORG7)    ; BESTIMMTE BEREICHE    
	SET VORG(8)   = $GET(VORG8)    ; ROUTINEN 
	SET VORG(9)   = $GET(VORG9)    ; WEITERE KLASSEN
	SET VORG(10)  = $GET(VORG10)   ; UEBERTAG AN SYSTEME
	
	SET YROUTINEN = VORG(8)      
	SET VORG(8)   = $TRANSLATE(VORG(8),";",",")   ;nur bestimmte PROGRAMME
	SET VORG(1)   = $TRANSLATE(VORG(1),",",";")   ;Form auswahl
	
	; SR16253 - guaranteed to have an existence above with $get
	;IF '$DATA(VORG(1)) SET VORG(1)=""  ; KEINE AUSWAHL ;no Selection 
	;SET VORG(1)=$TRANSLATE(VORG(1),",",";")  ;Form auswahl
	;IF '$DATA(VORG(3)) SET VORG(3)=""  ; nur module ;solely 
	;IF '$DATA(VORG(4)) SET VORG(4)=""  ; AUSLAGERUNGSDATEIEN
	;IF '$DATA(VORG(6)) SET VORG(6)=""  ; EXPORT VORBEREITEN ;prepare 
	;IF '$DATA(VORG(7)) SET VORG(7)=""  ; nur bestimmte Bereiche ;solely 
 
	IF VORG(2)="1" KILL ^WWWOUT(0)           ;löschen alten wert ; Fresh list 
	SET NUMMER = +$ORDER(^WWWOUT(0,""),-1)   ;next number
	
	; Disc Change ;STEVE ROBIN;17.04.2003
	;if $extract(VORG(3))="$" d:$DATA(^ROUTINE("COMDistOut")) Out^COMDistOut(VORG(3))            set VORG(3)=""
	;if $extract(VORG(3))="$" d:$$EXIST^%R("COMDistOut"_".OBJ",$G(YUCI)) Out^COMDistOut(VORG(3)) set VORG(3)=""
	
	; SR12022,12280: If VORG(3) starts with a # call the out routine on COMDistOut3 instead of COMDistOut
	
	; CreatePackage^COMDistOut6 prefixes module list with "#"
	if $extract(VORG(3))="#" do Out^COMDistOut6(VORG(3),VORG(7),$get(pidConfig)) set VORG(3)=""
	
	; 22-Jun-2005	RobertW		SR12022: Call the new COMDistOut6 if we are have a # instead of a $ in VORG(3) ; SR14015 // SR14354
	
	$$$KILLOUT("M ^WWWVERSION1=^WWWVERSION")  ;SPEICHERN VERSION FÜR MENUEUMSTRUKTURIERUNG;26370;TYBD;8,9,2004
	
	; SystemList : Remove Menu Categories - substring match
	;---------------------------------------
	if VORG(7)'="" {
		set strVORG7=$translate(VORG(7),";",",")
		set MENU1=""
		for {
			set MENU1=$order(^WWW004(0,MENU1))
			quit:MENU1=""
			continue:'$find(","_strVORG7_",",","_MENU1_",")
			
			$$$KILLOUT("K ^WWW004(0,"""_MENU1_""")")
			$$$KILLOUT("K ^WWW0041(0,"""_MENU1_""")")
		}
	}
	
	; Standard?
	; *** Normally null  BYPASS ***
	;---------------------------------------
	if VORG(4)=1 {
		new blnWWWInput
		set blnWWWInput=($find(VORG(7),"WWS"))||($find(VORG(7),"Input"))
		
		if blnWWWInput {
			new DEV,DEV0,DEV1
			
			//if $get(SPRACHE)="" set SPRACHE="DE"
			set SPRACHE="DE"
			
			$$$Order2(^WWW101,0,DEV)
				set DEV0=$$$NO
				$$$Order4(^WWW101,0,DEV,SPRACHE,DEV1)			
					if $piece($get(^WWW101(0,DEV,SPRACHE,DEV1,1)),Y,3)=1 set DEV0=$$$YES quit  ;COPY 0/1
				$$$End
				continue:DEV0=$$$NO
				
				$$$KILLOUT("K ^WWW101(0,"_""""_DEV_""""_")")
				set PRUEF = "^WWW101(0,"_DEV_","
				set DATEI = "^WWW101(0,"_""""_DEV_""""_",-1)"
				do UMS1
			$$$End
			
			$$$Order2(^WWW102,0,DEV)
				if $get(YCOUNTRY)="" set YCOUNTRY="DE"
				$$$Order4(^WWW102,0,DEV,YCOUNTRY,DEV1)
					if $piece($get(^WWW102(0,DEV,SPRACHE,DEV1,1)),Y,3)=1 set DEV0=$$$YES quit  ;COPY 0/1
				$$$End
				
				continue:DEV0=$$$NO
				$$$KILLOUT("K ^WWW102(0,"_""""_DEV_""""_")")
				set PRUEF = "^WWW102(0,"_DEV_","
				set DATEI = "^WWW102(0,"_""""_DEV_""""_",-1)"
				do UMS1
			$$$End
		}
		
		$$$Order2(^WWW120,0,strFORM)
			if $extract(strFORM,1,3)="WWW" {
				continue:$find(";"_VORG(1)_";",";"_strFORM_";")
				set VORG(1) = VORG(1)_strFORM_";"
			}
		$$$End
		
		if blnWWWInput {  ;ALLE IN'S AUSLAGERN = STANDARD AUSLAGERUNG
			if $extract(VORG(1),$length(VORG(1)))'=";" {
				set VORG(1) = VORG(1)_";"
			}
			$$$Order2(^WWW120,0,YDATEI)
				continue:$extract(YDATEI,1,2)'="IN"
				if '$find(";"_VORG(1)_";",";"_YDATEI_";") {
					set VORGX = YDATEI
					if VORGX'="" do UMS
				}
			$$$End
			
			$$$Order2(^WWW001,0,YDATEI)
				continue:$extract(YDATEI,1,2)'="IN"
				continue:$data(^WWW120(0,YDATEI))
				
				if '$find(";"_VORG(1)_";",";"_YDATEI_";") {
					set VORGX = YDATEI
					if VORGX'="" do UMS
				}
			$$$End
		}
		
		IF $FIND(VORG(7),"Time") {  ;ALLE IN'S AUSLAGERN = STANDARD AUSLAGERUNG
			if $extract(VORG(1),$length(VORG(1)))'=";" {
				set VORG(1) = VORG(1)_";"
			}
			$$$Order2(^WWW120,0,YDATEI)
				continue:$extract(YDATEI,1,2)'="TE"
				
				if '$find(";"_VORG(1)_";",";"_YDATEI_";") {
					set VORGX = YDATEI
					if VORGX'="" do UMS
				}
			$$$End
			
			$$$Order2(^WWW001,0,YDATEI)
				continue:$extract(YDATEI,1,2)'="TE"
				continue:$data(^WWW120(0,YDATEI))
				
				if '$find(";"_VORG(1)_";",";"_YDATEI_";") {
					set VORGX = YDATEI
					if VORGX'="" do UMS
				}
			$$$End
		}
	}
	
	
	; Other Classes            ; WEITERE KLASSEN
	; *** Normally null  BYPASS ***
	;---------------------------------------
	if VORG(9)'="" {
		set VORG(9)=$translate(VORG(9),";-*",",")
		new YI
		set YDATEI=""
		for {
			set YDATEI=$order(^WWW001(0,YDATEI))
			quit:YDATEI=""
			
			for YI=1:1 {
				quit:$piece(VORG(9),",",YI)=""
				
				if $piece(VORG(9),",",YI)=$EXTRACT(YDATEI,1,$LENGTH($PIECE(VORG(9),",",YI))) {
					if '$find(";"_VORG(1)_";",";"_YDATEI_";") {
						set VORGX=YDATEI
						if VORGX'="" do UMS
					}
				}
			}
		}
	}
	
	; Forms                      ; FORMULARE
	; *** Normally null  BYPASS ***
	;---------------------------------------
	for loopI=1:1 {
		quit:$piece(VORG(1),";",loopI,2000)=""
		set VORGX=$piece(VORG(1),";",loopI)
		if VORGX'="" do UMS
	}
	
	// This block already disabled
	/*
	; Application Parameters if @nM Menu specified
	;---------------------------------------
	;IF VORG(7)'="" IF $TRANSLATE(VORG(7),",;"_"""")'="@net Manager" SET UDAT="WWW101" DO   ;Application Parameter ; ANWENDUNGSPARAMETER 
	. SET PRUEF="^"_UDAT_"("
	. SET DATEI="^"_UDAT_"(-1)"
	. DO UMS1
	*/
	
	; SystemList
	;  - Update Version Details : General and by Installation if applicable
	;  - Menu Categories
	;---------------------------------------
	if VORG(7)'="" {
		new VERSION,BEREICH,YI,V7,V10,loop,SYSTEM,strModule,strFormName
		
		set V10 = $translate(VORG(10),";",",")          ; Installation list
		for YI=1:1 {
			set BEREICH = $piece(strVORG7,",",YI)       ; Menu Categories
			quit:BEREICH=""
			set VERSION = $get(^WWWVERSION(0,BEREICH,1))
			quit:VERSION=""
			
			set VERSION(1) = $piece(VERSION,Y,1)
			set VERSION(2) = $piece(VERSION(1),".",3)+1
			set $piece(VERSION,Y,1) = $piece(VERSION(1),".",1,2)_"."_VERSION(2)
			set $piece(VERSION,Y,2) = +$horolog
			set ^WWWVERSION(0,BEREICH,1)=VERSION
			for loop=1:1 {
				set SYSTEM=$piece(V10,",",loop) // SR15408
				quit:SYSTEM=""
				
				if $data(^WWWSYSTEM1(YM,SYSTEM,BEREICH,1)) {
					set $piece(^WWWSYSTEM1(YM,SYSTEM,BEREICH,1),Y,19) = VERSION 
					set $piece(^WWWSYSTEM1(YM,SYSTEM,BEREICH,1),Y,20) = +$horolog
				}
			}
		}
		
		
		; $$$WWW120Modules   looks like "CST;FIN;GL"
		; VORG(3)		may be prefix based - chack 
		; FIXME : needs ";"	in $find <GRF>
		
		// SR15408: Fixed to correctly follow the . code below. 27-Mar-2007
		$$$Order2(^WWW004,0,MENU1)
			continue:'$find(","_strVORG7_",",","_MENU1_",")
			$$$Order3(^WWW004,0,MENU1,MENU2)
				set SATZ=$get(^WWW004(0,MENU1,MENU2,1))
				set strModule=$$$WWW004Module1(SATZ)
				continue:(strModule'="")&&(VORG(3)'="")&&('$find(VORG(3),strModule))
					
				set strFormName = $$$WWW004FormName(SATZ)
				if (strFormName'="") && (VORG(3)'="") && ($$$WWW120Modules($get(^WWW120(0,strFormName,1)))'="") {
					continue:'$find(VORG(3),$$$WWW120Modules($get(^WWW120(0,strFormName,1))))
				}
				set DATEI="^WWW004(0,"""_MENU1_""","""_MENU2_""",1)"
				do SAVE
			$$$End
			set PRUEF="^WWW0041(0,"_MENU1_","
			set DATEI="^WWW0041(0,"_""""_MENU1_""""_",-1)"
			do UMS1
			set PRUEF="^WWW00411(0,"_MENU1_","
			set DATEI="^WWW00411(0,"_""""_MENU1_""""_",-1)"
			do UMS1
		$$$End
		;$$$Rekey("WWW004")	//SR15394 ;BR014797
		set ^COMBuildRekey($job,"WWW004")="" ;BR014797
	}
	
	; Standard?  Normally null
	;---------------------------------------
	IF VORG(4)=1 SET UDAT="" FOR  SET UDAT=$ORDER(^WWW001(0,UDAT)) QUIT:UDAT=""  DO   ;alle standard auslagerungsdateien ;All 
	. QUIT:+$PIECE($GET(^WWW001(0,UDAT,1)),Y,4)=0  ;KEINE AUSLAGERUNGSDATEI ;no 
	. QUIT:+$PIECE($GET(^WWW001(0,UDAT,1)),Y,8)>0  ;ALTERN SPEICH.
	. IF VORG(3)'="" QUIT:'$FIND($PIECE($GET(^WWW001(0,UDAT,1)),Y,5),VORG(3))  ;MODUL ;module 
	. IF VORG(1)="" IF $EXTRACT(UDAT,1,3)'="WWW" QUIT
	. DO
	. . IF UDAT="WWW009"     QUIT 
	. . IF UDAT="WWWVERSION" QUIT 
	. . $$$KILLOUT("K ^"_UDAT)
	. . $$$KILLOUT("K ^"_UDAT_"s")
	. ;
	. SET PRUEF = "^"_UDAT_"("
	. SET DATEI = "^"_UDAT_"(-1)"
	. DO UMS1
	. SET PRUEF = "^"_UDAT_"s("
	. SET DATEI = "^"_UDAT_"s(-1)"
	. DO UMS1
	
	; Other Classes : WWWAM*
	; Normally Null
	;---------------------------------------
	IF VORG(9)="WWWAM" SET UDAT="" FOR  SET UDAT=$ORDER(^WWW001(0,UDAT)) QUIT:UDAT=""  DO   ;alle standard auslagerungsdateien ;All 
	. QUIT:$EXTRACT(UDAT,1,5)'=VORG(9)
	. QUIT:+$PIECE($GET(^WWW001(0,UDAT,1)),Y,4)=1  ;KEINE AUSLAGERUNGSDATEI ;no 
	. DO
	. . $$$KILLOUT("K ^"_UDAT)
	. . $$$KILLOUT("K ^"_UDAT_"s")
	. ;
	. SET PRUEF = "^"_UDAT_"("
	. SET DATEI = "^"_UDAT_"(-1)"
	. DO UMS1
	. SET PRUEF = "^"_UDAT_"s("
	. SET DATEI = "^"_UDAT_"s(-1)"
	. DO UMS1

	//SR16676
	//Add globals that do not necessarily have a Class associated with them
	if '$get(pblnAddOn) {
		do SendGlobals
	}
	; Standard?  Normally null
	;---------------------------------------
	IF VORG(4)=1 DO  ;ALLE WWW'S AUSLAGERN = STANDARD AUSLAGERUNG
	. IF $EXTRACT(VORG(1),$LENGTH(VORG(1)))'=";" SET VORG(1)=VORG(1)_";"
	. SET YDATEI=""
	. FOR  SET YDATEI=$ORDER(^WWW001(0,YDATEI)) QUIT:YDATEI=""  DO
	. . QUIT:$EXTRACT(YDATEI,1,3)'="WWW"
	. . IF '$FIND(";"_VORG(1)_";",";"_YDATEI_";") SET VORGX=YDATEI IF VORGX'="" DO UMS 
	
	IF (VORG(8)'="") || (VORG(4)=1) DO ROUTINE  ;AUSWAHL PROGRAMME ;Selection 
	
	; Kill After Processing
	;---------------------------------------
	KILL ^WWWSOR(YUSER)
	IF VORG(6)'=1 QUIT  ;KEIN AUSLAGERN ;no 
	;VORG(1)=DATEI
	;VORG(2)=SCHLÜSSEL
	;VORG(3)=FILENAME
	;VORG(4)=FORMAT
	;VORG(5)=TRENNZEICHEN
	;VORG(6)=1 = LÖSCHEN DATEI ;Delete data file 
	
	// SR15394 vvvv
	;if $data(^mtemp("RekeyClass",$job)) {   ;BR014797
	if $data(^COMBuildRekey($job)) {   ;BR014797
		do Rebuild^COMDistOut6()
	}
	// SR15394 ^^^^
	KILL VORG
	SET VORG(1)="WWWOUT"
	SET VORG(2)=""
	SET VORG(3)="FORMDAT.TXT"
	SET VORG(4)=4
	SET VORG(5)=""
	SET VORG(6)=1
	;IF YROUTINEN'="" 
	SET VORG(999)=1  ;NICHT AUF DEV WENN ROUTINEN ;Not upon when 
	DO ^WWWEXPO
	LOCK -^WWWOUT
	KILL ^WWWOUT
	QUIT
	
UMS 
    ;-------------------------------------------------------------------------------
    ; umsetzen der dateien
    ; 
    ; Called By :
    ; 	This routine
    ; 	COMDistOutClass
    ; 	COMDistOutForm
    ; 
    ; Inputs:
    ; 	VORGX		YDATEI	(Class)
    ; 	VORG(3)		Must be set by calling routine or passed through to it.
    ; 
    ; Returns: Nothing
    ;
    ; History:
    ; 08-Sep-2011	shobby	SR17847: 120Hook, 120VARHook
	; 19-Nov-2009	shobby	SR17032: Disabled 'NumberOfHits' functionality.
    ; 03-Jul-2009	PPP		SR16676: Add Specific Globals to the list (REVERTED previous SR16676 23-Jun-2009)
    ; 23-Jun-2009	PPP		SR16676:Added WWWStatus into the Build Process
    ; 18-Jun-2009	PPP		SR16657:Added WWW122C2 (Core Rules), WWW120Scan into the Build Process
    ; 07-Oct-2008	PPP		SR15868:If pidConfig exists use it instead of the default Config
    ; 02-Sep-2008	GRF		Simplify SRBR014699 addition to list and remove second VORGX test
    ; 26-Aug-2008	PPP		SR15868 Do not include dependant CODE classes if AddOn Build
    ; 10-Oct-2007	shobby	SRBR014699: Previous change should have been 001Hook
    ; 10-Sep-2007	shobby	SRBR014699: Added WWW001Hook to A variable.
    ; 01-Jun-2007	shobby	SRBR014445: Disabled previous change.  This requires
    ; 							some more thought as there is no way *not* to have
    ; 							customisations overwritten if they are distributed.
    ; 							May be superceded by SRBR014103
    ; 11-May-2006	FF		SRBR014445: Added customization Globals
    ; 08-Jan-2006	PO		SR15351: Added WWW120DynTable form export list
    ; 22-Jun-2005	SCR		SR12755: Added WWW003Calc to Export List
    ; 09-Jun-2005	PO/PK	SR:12523 Included WWW0022 & WWW0032
    ;-------------------------------------------------------------------------------
	QUIT:VORGX=""
	
	; NOTE : VORG(3) set to null if COMDistOut6 is called.
	;	D24			$$$WWW120Modules()
	IF VORG(3)'="" IF $PIECE($GET(^WWW120(0,VORGX,1)),Y,24)'="" QUIT:'$FIND($PIECE($GET(^WWW120(0,VORGX,1)),Y,24),VORG(3))  ;module 
	
	
	; FIXME : <GRF> WWW001Hook and WWW001VARHooks are class-based rather than form-based.
	;         The fact they are in the list with form-based classes may not matter
	;         if VORGX is processed for entries in WWW001 and WWW120.  In some cases
	;         in OUTPUT above both WWW001 and WWW120 are called which means the data
	;         appears to be added to WWWOUT twice.
	;         Not Confirmed due to complicated parameters.
	
	
	SET DADEV=""
	;IF $DATA(^WWW120(0,VORGX,1)) SET $PIECE(^WWW120(0,VORGX,1),Y,50)=0  ;RESET HITS	;$$$WWW120NumberOfHits		;SR17032
	IF '$DATA(WWW120(0,VORGX)) SET DADEV=VORGX_","       ;NUR KLASSENDEFINITION NICHT FORMULAR ;only Not form 
	SET A="120,1201,1203,121,1210,1211,122,1221,123,1231,1232,124,1251,127,129,1291,131,132,133,DRAGDROP,DRAGDROPD" // SR15351
	SET A=A_",120DynTable,001Hook,120Scan,122C2,120Hook"         // SRBR014699  SR16657 SR16676
	
	set idBuildConfiguration = $get(pidConfig)	//SR15868
	if idBuildConfiguration = "" {           // SRBR014445
		set idBuildConfiguration  = $get(^COMDistOutConfDef(0,0,1))
	}
	
	; FIXME : idBuildConfiguration could still be null <GRF>
	
	set objBuildConfiguration = $get(^COMDistOutConf(0,idBuildConfiguration,1))
	;set blnIncludeCustomization = $$$COMDistOutConfIncludeCustomization(objBuildConfiguration)
	set blnIncludeCustomization=$$$NO ;BR014445 shobby
	if blnIncludeCustomization {
		set A = A_",002D,003D,1203D,120D,121D,121D1,122D,122D1,122D2,124D,001VARHooks,120VARHook"	
	}
	
	; FIXME : Some other customisations are also possible
	;   Based on AlphaLinc >> System >> Database And System Parameters >> Edit Program Entitlements
	; 			WWW0044, WWW00441, WWW00442, WWW0044, WWW120ButtonD1
	
	FOR I1=1:1 SET DNUM=$PIECE(A,",",I1) QUIT:DNUM=""  DO
	. $$$KILLOUT("K ^WWW"_DNUM_"(0,"_""""_VORGX_""""_")")
	. SET PRUEF = "^WWW"_DNUM_"(0,"_VORGX_","
	. SET DATEI = "^WWW"_DNUM_"(0,"_""""_VORGX_""""_",-1)"
	. IF DNUM="120" SET DATEI1="^WWW"_DNUM_"(0,"_""""_VORGX_""""_",1)" DO
	. . IF $DATA(@(DATEI1)) SET DEV=$PIECE(@(DATEI1),Y,11) IF DEV'="" SET DADEV=DADEV_DEV_","
	. ;
	. IF DNUM="131" SET DATEI1="^WWW"_DNUM_"(0,"_""""_VORGX_""""_",1,1)" DO
	. . IF $DATA(@(DATEI1)) SET DEV=$PIECE(@(DATEI1),Y,1) IF DEV'="" SET DADEV=DADEV_DEV_","
	. ;
	. DO UMS1
	
	;SR17248 vvvvv      Distribute data that contributes to form configuration but doesn't start with WWW
	new B
	set B="COMGridEditParameter"
	FOR I1=1:1 SET DNUM=$PIECE(B,",",I1) QUIT:DNUM=""  DO
	. $$$KILLOUT("K ^"_DNUM_"(0,"_""""_VORGX_""""_")")
	. SET PRUEF = "^"_DNUM_"(0,"_VORGX_","
	. SET DATEI = "^"_DNUM_"(0,"_""""_VORGX_""""_",-1)"
	. DO UMS1
	;SR17248 ^^^^^
	
	;SUCHEN DATENBANKDEFINITIONEN ;seek 
	IF DADEV'="" FOR I2=1:1 SET DEV=$PIECE(DADEV,",",I2) QUIT:DEV=""  DO  ;klassen definition
	. QUIT:$DATA(^WWWSOR(YUSER,DEV))  ;SCHON ÜBERTRAGEN ;yet transport 
	. if $get(pblnAddOn) && (DEV'[$get(Module)) quit
	. ;										// EXIT  SR15868
	. IF VORG(3)'="" IF $PIECE($GET(^WWW001(0,DEV,1)),Y,5)'="" QUIT:'$FIND(VORG(3),$PIECE($GET(^WWW001(0,DEV,1)),Y,5))  ;MODUL ;module // FIND THE WRONG WAY ROUND.
	. SET ^WWWSOR(YUSER,DEV)=""
	. SET A="001,0011,002,0021,003,0031,001B,0022,0032,003Calc" ; SR12523 ; SR12755
	. FOR I1=1:1 SET DNUM=$PIECE(A,",",I1) QUIT:DNUM=""  DO
	. . $$$KILLOUT("K ^WWW"_DNUM_"(0,"_""""_DEV_""")")
	. . SET PRUEF = "^WWW"_DNUM_"(0,"_DEV_","
	. . SET DATEI = "^WWW"_DNUM_"(0,"_""""_DEV_""",-1)"
	. . DO UMS1
	
	;IF VORG(8)="" WRITE VORGX_"  "_$$^WWWTEXT(30013),YCR,"<BR>"   ;WELCHE FORM
	QUIT
	
UMS1 ; 
    ;-------------------------------------------------------------------------------
    ; History:
	; 15-Nov-2007	shobby	SRBR014797: Change rekey global to ^COMBuildRekey.
	; 							Refer to SR if this seems stupid.
    ; 05-Feb-2007	JW		SR15394: Use macro.
    ; 19-Jan-2007	RPW		SR15121: Rewrote using Brace Syntax.
    ; 14-Nov-2005	JW		SR13543: Moved RekeyClass from Set^COMDistUtilities
    ;-------------------------------------------------------------------------------
	new Global
 
	set Global=$piece($piece(DATEI,"^",2),"(",1)
	if Global'="" {
		;set ^mtemp("RekeyClass",$job,Global)=""		//SR13543
		;$$$Rekey(Global)	 ; used by Rebuild Code ;BR014797
		set ^COMBuildRekey($job,Global)=""
	}
	
	for {
		set DATEI=$query(@DATEI)
		if '$find($translate(DATEI,""""),$translate(PRUEF,"""")) set DATEI=""
		quit:DATEI=""
		do SATZ
	}
	
	QUIT
	
SATZ
    ;-------------------------------------------------------------------------------
	;	EINZELSAETZE
	; History:
	; 05-Jun-2007	GRF		SR15121: Clarify dropthrough as explicit call to SAVE.
	; 19-Jan-2007	RPW		SR15121: Rewrote to use brace syntax.
    ;-------------------------------------------------------------------------------
	new strName
	
	set strName=$extract(DATEI,1,8)
	if strName'="^ROUTINE" {
		SET SATZ=$$^WWWSETL(DATEI)
	} else {
		SET SATZ=@DATEI
	}
	
	do SAVE
	quit
	
	
SAVE ;SPEICHERN DATENSATZ ;Save data record 
	IF $EXTRACT(DATEI,1,8)="^ROUTINE" IF $FIND(DATEI,","_""""_"MAP"_""""_",") QUIT  ;FALSCHES DATENFORMAT ;data format 
	new blnExport  ;SR12387 only send application parameters that are marked as 'Send for New version'
	
	set blnExport=1
	if $extract(DATEI,1,7)="^WWW101" {
		if $piece(SATZ,Y,3)'=1 {
			set blnExport=0
		}
	}
	
	if blnExport {
		set NUMMER=NUMMER+1
		set ^WWWOUT(0,NUMMER,1,1)=DATEI
		set ^WWWOUT(0,NUMMER,2,1)=$translate(SATZ,$char(13,10)," ")  ;FILTER LF ;strainer 
	}
	
	quit
	
KILL ;LOESCHEN DATENSATZ ;data record 
	set ^WWWOUT(0,$increment(NUMMER),0,1)=KILL
	quit
	
ROUTINE ;SAVE ROUTINEN
	NEW ROUTINE
	
	/*vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;SET ROUTINE=""
	;FOR  SET ROUTINE=$ORDER(^rINC(ROUTINE)) QUIT:ROUTINE=""  DO
	. QUIT:$EXTRACT(ROUTINE)="%"
	. ; 
	. IF VORG(4)'=1 QUIT:'$FIND(VORG(8),ROUTINE)
	. $$$KILLOUT("K ^rINC("_""""_ROUTINE_""""_")")
	. SET PRUEF = "^rINC("_ROUTINE_","
	. SET DATEI = "^rINC("_""""_ROUTINE_""""_",-1)"
	. DO UMS1
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END */ 
	
	SET ROUTINE=""
	FOR  SET ROUTINE=$ORDER(^ROUTINE(ROUTINE)) QUIT:ROUTINE=""  DO
	. QUIT:$EXTRACT(ROUTINE)="%"
	. ;
	. IF VORG(4)'=1 QUIT:'$FIND(VORG(8),ROUTINE)
	. IF '$FIND(VORG(7),"WWS")             IF $EXTRACT(ROUTINE,1,2)'="YW" IF $EXTRACT(ROUTINE,1,3)'="WWW" IF $EXTRACT(ROUTINE,1,3)'="YWW" QUIT:'$FIND(VORG(8),ROUTINE)  ;NICHT ÜBERTRAGEN ;Not transport 
	. IF VORG(4)=1 IF $FIND(VORG(7),"WWS") IF $EXTRACT(ROUTINE,1,2)'="YI" IF $EXTRACT(ROUTINE,1,2)'="TE"  IF $EXTRACT(ROUTINE,1,3)'="WWW" IF $EXTRACT(ROUTINE,1,2)'="IN" IF $EXTRACT(ROUTINE,1,3)'="YWW" QUIT:'$FIND(VORG(8),ROUTINE)  ;NICHT ÜBERTRAGEN ;Not transport 
	. $$$KILLOUT("K ^ROUTINE("_""""_ROUTINE_""""_")")
	. SET PRUEF = "^ROUTINE("_ROUTINE_","
	. SET DATEI = "^ROUTINE("_""""_ROUTINE_""""_",-1)"
	. DO UMS1
 
	/*vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;SET ROUTINE=""
	;FOR  SET ROUTINE=$ORDER(^rMAC(ROUTINE)) QUIT:ROUTINE=""  DO
	. QUIT:$EXTRACT(ROUTINE)="%"
	. ;
	. IF VORG(4)'=1 QUIT:'$FIND(VORG(8),ROUTINE)
	. IF '$FIND(VORG(7),"WWS") IF $EXTRACT(ROUTINE,1,2)'="YW" IF $EXTRACT(ROUTINE,1,3)'="WWW" IF $EXTRACT(ROUTINE,1,3)'="YWW" QUIT:'$FIND(VORG(8),ROUTINE)  ;NICHT ÜBERTRAGEN ;Not transport 
	. IF VORG(4)=1 IF $FIND(VORG(7),"WWS") IF $EXTRACT(ROUTINE,1,2)'="YI" IF $EXTRACT(ROUTINE,1,2)'="TE" IF $EXTRACT(ROUTINE,1,3)'="WWW" IF $EXTRACT(ROUTINE,1,2)'="IN" IF $EXTRACT(ROUTINE,1,3)'="YWW" QUIT:'$FIND(VORG(8),ROUTINE)  ;NICHT ÜBERTRAGEN ;Not transport 
	. $$$KILLOUT("K ^rMAC("_""""_ROUTINE_""""_")")
	. SET PRUEF = "^rMAC("_ROUTINE_","
	. SET DATEI = "^rMAC("_""""_ROUTINE_""""_",-1)"
	. DO UMS1
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END */ 
	
	QUIT


SendGlobals
    ;-------------------------------------------------------------------------------
    ; Add the list of Globals to the Build
    ; These globals do not necessarily have a Class associated with them
    ;
    ; History:
    ; 03-Jul-2009	PPP		SR16676: Add Specific Globals to the list
    ;-------------------------------------------------------------------------------
	new strGlobals
	new strGlo
	new intCnt
	
	set strGlobals = "WWWStatus"
	
	for intCnt=1:1 {

		set strGlo=$piece(strGlobals,",",intCnt)
		quit:strGlo=""

		$$$KILLOUT("K ^"_strGlo_"(0)")
		set PRUEF = "^"_strGlo_"(0,"
		set DATEI = "^"_strGlo_"(0)"
		do UMS1
	
	}
	
	quit
]]></Routine>
</Export>