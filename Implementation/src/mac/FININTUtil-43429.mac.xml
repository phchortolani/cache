<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FININTUtil" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FININTUtil ; Interface Utils
 
#include FINConst
#include COMSYS
 
RepostAllBlocks
	new Batch
	
	do KillSLBal
	Set Batch=""
	for {
		set Batch=$order(^FININTBatch(YM,Batch))
		quit:Batch=""
		do RepostBatchBlocks(Batch)
		
	}
	quit
	
	
 
RepostBatchBlocks(Batch)
	new Line,Rec,Block,Blocks
	
	; Step 1: Get a List of Blocks for the Batch
	set Line=""
	for {
		set Line=$order(^FININTBatchLine(YM,Batch,Line))
		quit:Line=""
		set Rec=$get(^FININTBatchLine(YM,Batch,Line,1))
		set Block=$piece(Rec,Y,1)\1
		if Block="" write !,"Error: No Block for Line: "_Line_" in Batch: "_Batch,! continue
		set Blocks(Block)=0
			
	}
	; Step 2: Repost Blocks
	set Block=""
	for {
		set Block=$order(Blocks(Block))
		quit:Block=""
		write !,"Posting Block: "_Block_" in Batch: "_Batch_" Status="
		write $$PostBlock^FININTBatch(Batch,Block)
		
	}
	quit
 
 
KillSLBal ; Kill all sub ledger balances
 
	new Class,Glo,Index
	
	write !,"Removing Sub Ledger Balances "
	for Class="APBalance","APInvoice","APInvoiceTax","APInvoiceTran","ARBalance","ARInvoice","ARInvoiceTax","ARInvoiceTran" {
		set Glo="^FIN"_Class
		set Index=Glo_"s"
		write "FIN"_Class," "
		kill @Glo
		kill @Index
		 
	}
	
	quit
	
	
	
ReverseBlock(pidBatch,pidBlock,&idRevBatch,&idRevBlock)
    /*-------------------------------------------------------------------------------
    ; Reverse a given FININTBlock posting.
    ; No tcommit etc here, need to do in wrapper code.
    ;
    ; Params: pidBatch, pidBlock - keys of the block (required)
    ;
    ; ByRefs: idRevBatch,idRevBlock - keys of reversed block
    ;
    ; Returns: status
    ;
    ; History:
    ;  9-Feb-2006	JW		Added last 2 ledger profile fields
    ; 16-Jan-2006	JW		SR14141: Created
    ;-------------------------------------------------------------------------------*/
	new objBatch,objBlock,strStatus,idxBatch,idBatchLine,objBatchLine,idBlockMinor
	
	set objBatch = $get(^FININTBatch(YM,pidBatch,1))
	set objBlock = $get(^FININTBatchBlock(YM,pidBatch,pidBlock,1))
	
	if $$$FININTBatchBlockPostedDate(objBlock)="" {
		set strStatus = $listbuild("Fin00950",pidBatch,pidBlock)  ;Batch %1, block %2 has not been posted
	} else {
		set strStatus=$$Allocate^FININTBatch(.idRevBatch,.idRevBlock,$$$FININTBatchBatchType(objBatch),
					$$$FININTBatchLocation(objBatch),$$$FININTBatchBatchDate(objBatch),
					$$$FININTBatchBlockDocumentDate(objBlock),$$$FININTBatchBlockUser1(objBlock),
					$$$FININTBatchBlockDepartment(objBlock),"FININTBatch",
					pidBatch,"Fin00949"_","_pidBatch_","_pidBlock)  		;Reversal of interface batch %1, block %2
		
		if $$$ISOK(strStatus) {
			
			set idxBatch = $$$Index(pidBatch)
			
			set idBlockMinor = ""
			for {
				set idBlockMinor=$order(^FININTBatchLines(YM,1,idxBatch,pidBlock,idBlockMinor))
				quit:idBlockMinor=""
				
				set idBatchLine=""
				for {
					set idBatchLine = $order(^FININTBatchLines(YM,1,idxBatch,pidBlock,idBlockMinor,pidBatch,idBatchLine))
					quit:idBatchLine=""
					
					set objBatchLine = $get(^FININTBatchLine(YM,pidBatch,idBatchLine,1))
					
					set strStatus=$$AddLine^FININTBatch(idRevBatch,idRevBlock,
									$$$FININTBatchLineAccount(objBatchLine),$$$FININTBatchLineAmount(objBatchLine),
									$$$FININTBatchLineInterfaceType(objBatchLine),$$$FININTBatchLineParameters(objBatchLine),
									$$$FININTBatchLineSource(objBatchLine),$$$FININTBatchLineReference(objBatchLine),$$$YES,
									$piece(objBatchLine,"~",11),$piece(objBatchLine,"~",12),		// Don't change these until next build (1.18)
									$$$FININTBatchLineCostMatrixKeys(objBatchLine),
									$$$FININTBatchLineCostMatrixValues(objBatchLine)_Y_$$$FININTBatchLineProfileLocation(objBatchLine)_Y_$$$FININTBatchLineProfileGroup(objBatchLine))	// Note 3 pieces
					
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			
			if $$$ISOK(strStatus) {
				set strStatus = $$PostBlock^FININTBatch(idRevBatch,idRevBlock)
			}
		}
	}
	quit strStatus
	
]]></Routine>
</Export>