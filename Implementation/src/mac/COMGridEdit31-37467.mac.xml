<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[COMGridEdit31  ; DEPRECATED - call Start directly - may be needed via JS call
	do Start(YFORM,YKEY)
	quit
 
#include WWWConst
#include COMConst
#include COMGridEdit31
	
#def1arg WWWDATEN(%args) ^WWWDATEN(0,+$horolog,YUSER,YFORM,"V",%args)
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGE31("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	;  *1  COMGridEdit31Head  (Followed by tag creating that part of the grid)
	;  *2  COMGridEdit31
	;  *3  COMGridEdit31Body
	;  *4  COMGridEdit31Body2
	;  *5  WWW120DynTable
	;-------------------------------------------------------------------------------
	;    Favourites                                                   [ ][ ][ ]        *** COMView
	;    (.) In form default                                          [ ][ ][ ]            External Filter
	; +- Field Selection --------------------------------------------------------+
	; | Field  [Comparator][Value]                                               |
	; | Field  [Comparator][Value]                                               |
	; +--------------------------------------------------------------------------+
	;    Status :
	; Search complete.  # record(s) found
	;-------------------------------------------------------------------------------
	; Key Name : Key Value         [optional - ^CacheTemp(YUSER,"Grid","ShowKeys") ]   *1 HEAD
	; Per Page: [   ]   Pages: .....                        [  ][  ][  ][  ][  ][  ]   *1 Pages / Buttons
	;-------------------------------------------------------------------------------  
	;  Line  |  P1  |  P2  |   Da Name   |   Db Name   |   Dc Name   |   Dd Name   |
	; Number | Name | Name |             |             |             |             |   *3 Head
	;--------+------+------+-------------+-------------+-------------+-------------+
	;        |      |      |             |             |             |             |   *4 CreateData / *3 AddLines
	;--------+------+------+-------------+-------------+-------------+-------------+
	;        |      |      |             |             |             |             |
	;--------+------+------+-------------+-------------+-------------+-------------+
	;
	;  Dynamic Table                                                                   *5 CreateDynTableCall
	;-------------------------------------------------------------------------------
	
	
Start(YFORM,YKEY)
	;-------------------------------------------------------------------------------
	; Start
	; 
	; Called as : $$$GRIDStart(...)
	; 
	; Params:	YFORM 	Grid (child) form
	; 			YKEY	Header (parent) key
	; ByRef :
	; 	YAUSWAHL		
	; 	YFELD			
	; 	YKILL
	; 	
	; Returns:
	;
	; History:
	; 21-Jun-2012	shobby	SR18026: Call to set up any LinkedTo controls
	; 16-Mar-2007	GRF		SR12505: doco; boolean macros
	; 31-Oct-2006	JW		BR014279: Added params
	; 21-Sep-2006	JW		SR15062: Removed FINGLBankRecon exception
	; 07-Aug-2006	JW		SR14730: Added Start tag, moved key check
	; 07-Feb-2006	JW		SR13305 : FINGLBankRecon exception.
	; 13-Feb-2006	JW		Check form type
	; 24-Oct-2005	JW		SR11573: Work out if same record.
	; 14-Oct-2005	JW		SR13581: Reverted below changes, don't cleanup if tab only.
	; 10-Oct-2005	shobby	SR13581: When changing tabs don't reload from disk but
	; 							use the in memory version. (CacheTempTabSwitch)
	; 22-Aug-2005	JW		SR13274: Check key is valid
	; 19-Jul-2005	RPW		SR12981: Moved CleanupPreviousInstance to COMGridEdit31Tools
	; 10-Dec-2004	JW		SR11004: Callbacks to be called on startup.
	; 10-Dec-2004	Shobby	Clean up (SR11175)
	;-------------------------------------------------------------------------------
	new blnSameRecord,blnTabOnly,idContainer,strStatus
	new YANZ,YCOL,YCOLON,YCOLUMNS,YDATEI,YDDSATZ,YFELD,YI,YMAXKEY,YROW,YSATZ

	$$$LogR("Start",YFORM_":"_YKEY_":"_YKILL)
	;+++++++++++++++++++++++++++++++++++++++
	;  blnTabOnly			
	;  blnSameRecord		
	;  
	;  YSATZ				objWWW120  - Form Header
	;  YVOR1				objWWW012  - General Parameters
	;+++++++++++++++++++++++++++++++++++++++
	
	set blnTabOnly  = $$$NO
	set idContainer = $$$COMGridEditParameterContainer(YAUSWAHL)
	
	if (idContainer'="") && (YFORM'="") && $data(^WWWDATEN(0,+$horolog,YUSER,idContainer,"Grid",YFORM)) {
		set blnTabOnly = $$$YES
	}
	
	set blnSameRecord = (YKEY=$$GetYKEY^COMGridEdit31G(,YFORM))
	
	$$$LogRx("31*1:"_blnTabOnly_"<"_blnSameRecord)
	
	if (YKILL'=3) && 'blnTabOnly {
		do CleanUpPreviousInstance^COMGridEdit31Tools(YFORM,blnSameRecord)
	}
	
	kill ^CacheTemp(YUSER,"Grid") ;Clean up any previous settings.
	
	set strStatus = $$$OK
	
	if (YFORM="") || '$data(^WWW120(0,YFORM)) {
		set strStatus = $listbuild(35)	                    ; "No Form Default"
	
	} else {
		set YSATZ = $get(^WWW120(0,YFORM,1))
	 	if YSATZ="" {
		 	set strStatus = $listbuild(35)                  ; "No Form Default"
		
		} else {
			set YDATEI = $$$WWW120ClassUsedInForm(YSATZ)
		 	if (YDATEI="") || '$data(^WWW001(0,YDATEI)) {
		 		set strStatus = $listbuild(191)	            ; "Wrong Class Default"
			 	
		 	} elseif $$$WWW120FormType(YSATZ)'=12 {
			 	set strStatus = $listbuild("Com00242")		; "Form is not of type 12 - Grid Edit Only"
			 	
		 	} else {
				set YMAXKEY = $order(^WWW002(0,YDATEI,""),-1)             ; Last Key #
				
				if $$GetKey^COMUtilClass(YKEY,YMAXKEY-1) {
				 	do GetGridDefaults(.YAUSWAHL,YSATZ)
				 	do GetLinkedTo^COMGridEdit31Links()  ;SR18026
				 	set $$$WWWDATEN("REFERENCEKEY") = $get(YKEY)
				 	
					if $get(YVOR1)="" set YVOR1 = $get(^WWW012(0,0,1))   ; Company Defaults
					
				 	write YCR,"<LINK REL=""stylesheet"" TYPE=""text/css"" HREF="""_YGIF_"GridEdit.css"">"
				 	
				 	do CreateJavaScript^COMGridEdit31J3()
				 	do CreateJavaScript^COMGridEdit31J2()
					do CreateGrid(YDATEI,YKEY,YMAXKEY,blnTabOnly)
				}
			}
		}
	}
	
	if $$$ISERR(strStatus) {
		write "<B><center><br>"_$$$Text(strStatus)_"</b>"
	}
	quit
	
	
GetFirstColumn(YFORM)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 17-Mar-2005	Shobby	Created (Rewrite of previous GetFirstColumn)
	;-------------------------------------------------------------------------------
	quit:$get(YFORM)="" ""
	quit $piece($get(^CacheTemp(YUSER,"Grid",YFORM,"COLUMNORDER")),",",1)
	
	
GetGridDefaults(&pYAUSWAHL,pYSATZ)
	;-------------------------------------------------------------------------------
	; Stores configuration type globals for this grid as set up in the AfterDataFields
	; method on the calling form.
	;
	; Returns:
	;
	; History:
	; 06-Dec-2012	shobby	HEVA-694: Removed redundant cell height calculation
	; 21-May-2012	shobby	SR18017: NewLine
	; 04-Apr-2012	shobby	SR17995: MaxWidth
	; 15-Sep-2010	shobby	SR17543: Hidden Columns
	; 18-May-2010	GRF		SR17253: replace 'i' with 'loop'; distinguish between
	; 							strPiece and strPieces (now strParamList)
	; 30-Oct-2008	SCR		SR16026: Use Get Rows Per Page function instead of Macro
	; 14-May-2008	shobby	SRBR014943: Each user has their own settings for PerPage
	; 30-Mar-2007	RPW		SRBR014416: Added new default for joining grids & comviews.
	; 15-Nov-2006	JW		SR14915: Added row height
	; 31-Aug-2006	JW		SR14907: ShowHeaderKeys
	; 09-Aug-2006	JW		SR14730: DontStoreAll
	; 03-Feb-2006	RPW		SR14093: Added support for Allow Delete when the grid is
	; 							locked and attempts to improve the draw speed of the
	; 							grid and do not draw the container.
	; 18-Oct-2005	PO		Newed idName,idContainer,intRows
	; 29-Mar-2005	shobby	Included a parameter for linked classes.
	; 11-Mar-2005	JW		Preserve YSEITE
	; 16-Feb-2005	shobby	Preserved VORG.
	; 09-Dec-2004	JW		SR11068: Added Field 'Link'. Not used at the moment
	; 06-Dec-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new idName,idContainer,intRows,loop,strParamList,strPiece
	
	kill ^CacheTemp(YUSER,"Grid")
	merge ^CacheTemp(YUSER,"Grid","VORG") = VORG
	
	if $get(pYAUSWAHL)="" {   ; Defaults if nothing specified
		set $$$COMGridEditParameterSharedForm(pYAUSWAHL)    = $$$NO
		set $$$COMGridEditParameterMaximumHeight(pYAUSWAHL) = 500
		set $$$COMGridEditParameterGridName(pYAUSWAHL)      = YFORM
		set $$$COMGridEditParameterUpdateFields(pYAUSWAHL)  = ""
		set $$$COMGridEditParameterClearFields(pYAUSWAHL)   = ""
		set $$$COMGridEditParameterDefaultFields(pYAUSWAHL) = ""
		set $$$COMGridEditParameterEnabled(pYAUSWAHL)       = $$$YES
		set $$$COMGridEditParameterCOMViewGrid(pYAUSWAHL)   = $$$NO
	}
	
	set ^CacheTemp(YUSER,"Grid","DontUpdateContainer") = +$$$COMGridEditParameterDontUpdateContainer(pYAUSWAHL)
	set ^CacheTemp(YUSER,"Grid","DontStoreAll")        = +$$$COMGridEditParameterDontStoreAll(pYAUSWAHL)
	set ^CacheTemp(YUSER,"Grid","SharedForm")          = +$$$COMGridEditParameterSharedForm(pYAUSWAHL)
	set ^CacheTemp(YUSER,"Grid","MaxHeight")           = +$$$COMGridEditParameterMaximumHeight(pYAUSWAHL)
	set ^CacheTemp(YUSER,"Grid","MaxWidth")            =  $$$COMGridEditParameterMaxWidth(pYAUSWAHL)	;SR17995
	set ^CacheTemp(YUSER,"Grid","COMView")             = +$$$COMGridEditParameterCOMViewGrid(pYAUSWAHL)
	set ^CacheTemp(YUSER,"Grid","NewLine")			   = +$$$COMGridEditParameterNewLine(pYAUSWAHL)	     ;SR18017
	
	set ^CacheTemp(YUSER,"Grid","HiddenColumns")	   = $$$COMGridEditParameterHiddenColumns(pYAUSWAHL) ;SR17543
	
	set idName      = $$$COMGridEditParameterGridName(pYAUSWAHL)
	set idContainer = $$$COMGridEditParameterContainer(pYAUSWAHL)
	
	set ^CacheTemp(YUSER,"Grid","Name")      = idName
	set ^CacheTemp(YUSER,"Grid","Container") = idContainer
	if (idName'="") && (idContainer'="") {
		set ^WWWDATEN(0,+$horolog,YUSER,idContainer,"Grid",idName) = $$$YES	// Store form - for saving
	}
	set intRows=+$$GetRowsPerPage(YBED,YFORM)
	if intRows=0 {
		set intRows = +$$$WWW120DGridRecordsPerPage($get(^WWW120D(0,idName,0,1)))
		if intRows=0 {
			set intRows = +$$$WWW120GridRecordsPerPage(pYSATZ)
			if intRows=0 set intRows = 20
		}
	}
	do GetRowsPerPage(YBED,YFORM,intRows)
	
	set strParamList = $$$COMGridEditParameterUpdateFields(pYAUSWAHL)
	for i=1:1:$length(strParamList,";") {
		set strPiece=$piece(strParamList,";",i)
		if strPiece'="" {
			if $piece(strPiece,"=",2)["-" {
				set ^CacheTemp(YUSER,"Grid","Calculated",$piece(strPiece,"=",2)) = $piece(strPiece,"=",1)
			} else {
				set ^CacheTemp(YUSER,"Grid","Update",$piece(strPiece,"=",2))     = $piece(strPiece,"=",1)
			}
		}
	}
	
	set strParamList = $$$COMGridEditParameterClearFields(pYAUSWAHL)
	for loop=1:1:$length(strParamList,";") {
		set strPiece = $piece(strParamList,";",loop)
		if strPiece'="" {
			set ^CacheTemp(YUSER,"Grid","Clear",$piece(strPiece,",",1)) = $piece(strPiece,",",2)
		}
	}				
	set strParamList = $$$COMGridEditParameterDefaultFields(pYAUSWAHL)
	for loop=1:1:$length(strParamList,";") {
		set strPiece = $piece(strParamList,";",loop)
		if strPiece'="" {
			set ^CacheTemp(YUSER,"Grid","DefaultFromPreviousLine",$piece(strPiece,",",1)) = $$$YES           ; SR12505
		}
	}
	set ^CacheTemp(YUSER,"Grid","Enabled")=+$$$COMGridEditParameterEnabled(pYAUSWAHL)
	
	set strParamList = $$$COMGridEditParameterCallBack(pYAUSWAHL)
	for loop=1:1:$length(strParamList,";") {
		set strPiece = $piece(strParamList,";",loop)
		if strPiece'="" {
			set ^CacheTemp(YUSER,"Grid","CallBack",$piece(strPiece,",",1)) = $piece(strPiece,",",2,999)
		}
	}			
	
	set ^CacheTemp(YUSER,"Grid","ExpandLines")=$$$COMGridEditParameterExpandLines(pYAUSWAHL)
	if $$$COMGridEditParameterLinks(pYAUSWAHL)'="" {
		set ^WWWDATEN(0,+$horolog,YUSER,$$$COMGridEditParameterGridName(pYAUSWAHL),"V","LINKS") = $$$COMGridEditParameterLinks(pYAUSWAHL)
	}
	
	set ^CacheTemp(YUSER,"Grid","ShowKeys") = $$$COMGridEditParameterShowHeaderKeys(pYAUSWAHL)
	set ^CacheTemp(YUSER,"Grid","YOPTION")  = $get(YOPTION)
	set ^CacheTemp(YUSER,"Grid","YOPTION1") = $get(YOPTION1)
	set ^CacheTemp(YUSER,"Grid","YSEITE")   = $get(YSEITE)
	set ^CacheTemp(YUSER,"Grid","YHEIGHT")  = 16 ; $$GetCellHeight^COMGridEdit31Tools(idName) ;HEVA-694
	
	kill pYAUSWAHL	
	quit
	
	
CreateGrid(YDATEI,YKEY,YMAXKEY,pblnTabOnly)
	;-------------------------------------------------------------------------------
	; Creates the header and body of the grid
	; 
	; Called By: Start^COMGridEdit31
	; 
	; Params:	YDATEI		- parent class
	; 			YKEY		- parent key
	; 			YMAXKEY		- number of grid keys
	; 			blnTabOnly 	- whether just changing tabs
	;
	; Returns:
	;
	; History:
	; 01-Dec-2010	GRF		SR17597: add DEVinfo textarea for debugging.
	;	Usage Example : (replace [text] with appropriate values)
	;		var DEVinfo = document.getElementById('DEVinfo');
	;		DEVinfo.value = '[Source :]\n';
	;		DEVinfo.value += '[DataName : ]'+document.getElementById('[idString]').[attribute]+'\n';
	;							
	;			
	; 19-Feb-2015	shobby	HEVA-1645: After the page has finished loading set the height of the grid.
	; 02-Apr-2014	shobby	SESDF-1237: Better management of timeout on cgeShowGrid	
	; 12-Feb-2014	shobby	SESDF-954: Reworked sizing of grids without using 'expression'
	; 21-Oct-2013	shobby	SESDF-672: Additonal parameter if AutoResizeRows on cgeShowGrid
	; 04-Mar-2012	shobby	CORE-69.1: Remove height setting in Firefox.
	; 08-Nov-2012	shobby	SR18190: cgeShowGrid can now retry on failure.
	; 18-Apr-2012	shobby	SR17995: If maxwidth of grid is -1 (autosize) then hide it until
	;							the width can be determined (from other displayed controls).		
	; 04-Apr-2012	shobby	SR17995: Set a maximum width of an edit grid.
	; 14-Feb-2012	shobby	SR17724: Fixed columns in grid
	; 14-Feb-2012	shobby	SR17724: Sizing of grid with Firefox.			
	; 27-Sep-2011	shobby	SR17853: Reverted doCancelEvent
	; 28-Mar-2011	shobby	SR17597.1 Make the displaying of DEVinfo user based.        
	; 24-Mar-2011	shobby	SR17687: Removed unnecessary cancelBubble
	; 15-Sep-2010	shobby	SR17543: Increase width to 99%
	; 24-Aug-2010	GRF		SR17515: FF:use width=95% rather than hardcoded 1000px
	; 06-Jul-2010	GRF		SR17414: replace expression with hard-coded height &
	;							width for Firefox *AND* expression for MSIE.
 	; 05-Jul-2010	GRF		SR17413: Right Mouse Button menu fix
	; 25-May-2009	PPP		SR16565: Scanning Prompt for Grid
	; 							 Create a New Line only if not a scan form
	; 03-Sep-2008	shobby	SRBR014893: Add a new line by default to an empty grid.
	; 29-Jun-2008	shobby	SRBR014962: More changes to grid heights.
	; 03-Jun-2008	GRF		SR15739: Revisions to CREATEDATA moved to new routine
	; 30-Jan-2008	shobby	SRBR014889: Better management of grid heights.
	; 27-Nov-2007	shobby	SRBR014779: Give the grid a tab sequence.
	; 06-Jul-2007	shobby	SRBR014553: Use standard routine to get form field data
	; 							(including customisations)
	; 04-Jun-2007	RPW		SR15524: Do not draw the grid data if this is a COMView grid.
	; 15-Jan-2007	RPW		SR15339: Do not focus the grid if the form is manually
	; 							set to focus via the forms "focus to data field number"
	; 							field. Also check form customisation
	; 04-Jan-2007	PO		SR15351: Hook for Dynamic Table
	; 31-Oct-2006	JW		BR014279: Added params
	; 21-Apr-2006	SC		SR14427: Add option to give focus to a grid line.
	; 25-Jan-2005	JW		SR13087: Call AddLine when changing tabs
	; 07-Dev-2005	PO		Onclick of the activefield will now open improved DOM viewer
	; 14-Oct-2005	JW		SR13581: pblnTabOnly param - don't recreate data
	; 28-Jan-2005	RPW		Made the line field bold on the first cell.
	; 17-Jan-2005	shobby	Made the grid a bit narrower for when there is a
	; 							vertical scrollbar.
	; 17-Jan-2004	RPW		Moved all default hidden fields before the
	; 							div in case they are needed.
	; 09-Oct-2004	shobby	Created
	;-------------------------------------------------------------------------------
	new intLeft,intTop,intMaxHeight,blnSharedForm,intMaxWidth,strFocus,idRow,intPage
	new intFormFocus,blnFocusGrid,intDisplay
 	
	set intLeft       = +$get(^CacheTemp(YUSER,"Grid","Left"))
	set intTop        = +$get(^CacheTemp(YUSER,"Grid","Top"))
	set blnSharedForm = +$get(^CacheTemp(YUSER,"Grid","SharedForm"))
	
	set intMaxWidth   = $get(^CacheTemp(YUSER,"Grid","MaxWidth"))			;SR17995
	set intMaxHeight = +$get(^CacheTemp(YUSER,"Grid","MaxHe]]><![CDATA[ight"))
	if intMaxHeight<1 set intMaxHeight=9999999999999
	
	write YCR,"<input type=""hidden"" id=""txtCampoAlterado"" value="""">"
	write YCR,"<input type=""hidden"" id=""nextactivefield"" value="""">"
	write YCR,"<input type=""hidden"" id=""activegrid"" value="""">"
	write YCR,"<input type=""hidden"" id=""sharedform"" value="""_blnSharedForm_""">"
	
	;---------------------------------------
	
	; *** COMView External Filter generated somewhere here
	;     or generated later and ends up displayed in the DIV <GRF>
	
	; SR17416 : expression() is a deprecated MSIE-only feature
	
	if (intMaxWidth=-1)||($$AutoResizeRows^WWW120($get(YFORM))) set intTop=intTop-10000 ;SR17995 ;SR18004
	;SR18004 if (intMaxWidth=-1) set intTop=intTop-10000 ;SR17995
	if blnSharedForm {
		write YCR,"<DIV TABINDEX=10000 id='gridDIV' class=gDIVsh _MaxWidth='"_intMaxWidth_"' " ;SR17995
		write "style='table-layout:fixed; top:"_intTop_"px; left:"_intLeft_"px; '" ;SESDF-954
		;SESDF-954
	} else {
		write YCR,"<DIV TABINDEX=10000 id='gridDIV' class=gDIVex _MaxWidth='"_intMaxWidth_"' " ;SR17995
		write "style='table-layout:fixed; top:"_intTop_"px; left:"_intLeft_"px; " ;SESDF-954 
	}

	; FF: onfocusin  IE: onfocus
	write YCR," "_$$Event^WWWFORMCrossBrowserSupport("onfocusin")_"='var retval=SetFocus(""Grid""); window.event.returnValue = false; window.event.cancelBubble = true;'"  //SR17253 ;SR17853
	write YCR," oncontextmenu='cgeRightClick(event); window.event.returnValue = false; window.event.cancelBubble = true;'"  //SR17253 SR17413 ;SR17853

	write YCR," onclick ='cgeTest2(event)'" ;  //SR17253 //SR17687
	write YCR,">"
	write YCR,"<a name='grid'>"
	write "</a>"

	do HEAD^COMGridEdit31Head(YDATEI,YKEY,YMAXKEY)
	if $$GridVersion^COMGridEdit31V2() do BODY^COMGridEdit31V2(intMaxHeight)  ;SR17724 ;SESDF-954
	if '$$GridVersion^COMGridEdit31V2() do BODY(intMaxHeight)				  ;SR17724 ;SESDF-954

	write YCR,"</DIV>" ;gridDIV"

	;---------------------------------------

 	if $data(^WWW120DynTable(0,$$$GRIDContainer)) {
	 	write "<div id='DynamicArea'>"
	 	do CreateDynTableCall^WWW120DynTable($$$GRIDContainer,YFORM,YSEITE)
		write YCR,"</div>"
 	}

	;---------------------------------------

	if $$$DEVMODE {
		write YCR,"<b>AF: <input id=""activefield"" value="""" onclick=""window.open('/global/dv.html');"">"
		write YCR,"FF: <input id=""focusfield"" value="""_$get(YFOCUSID)_""">"
		write YCR,"T:<input id=""test"" value="""_$get(YFOCUSID)_"""></b>"
		write YCR,"<a class=""link"" onclick=""cgeClearDEVinfo();""><img src="""_YGIF_"c.gif""></a>"    ; SR17597
		if $get(^SysSetup(YBED,"DEVinfo"))=0 {													;SR17597.1 User based.
			write YCR,"<input type=""hidden"" id=""DEVinfo"" value="""">"                      ; SR17597
		} else {
			write YCR,"<br/><textarea id='DEVinfo' cols=100 rows=20>DEVinfo</textarea><br/>"    ; SR17597
		}
	} else {
		write YCR,"<input type=""hidden"" id=""activefield"" value="""">"
		write YCR,"<input type=""hidden"" id=""focusfield"" value="""_$get(YFOCUSID)_""">"
		write YCR,"<input type=""hidden"" id=""test"" value="""_$get(YFOCUSID)_""">"
		write YCR,"<input type=""hidden"" id=""DEVinfo"" value="""">"                      ; SR17597
	}
	write YCR,YCR
	$$$StartScript()

	;write "window.attachEvent('onresize', function() {cgeSetWidth('"_intMaxWidth_"');});" 	;SESDF-954
	;write "window.attachEvent('onload',function() {cgeSetHeight('"_intMaxHeight_"')});"		;HEVA-1645
	write "cgeSetWidth('"_intMaxWidth_"');" 												;SESDF-954
	write "cgeSetHeight('"_intMaxHeight_"');" 												;SESDF-954

	write YCR,"InitGlobals('"_YUSER_"','"_YUCI_"','"_YFORM_"','"_$$GetDateFormat()_"','"_$zconvert(YGIF,"o","JS")_"','"_$get(YBED)_"');"
	write YCR,"  var focusfield=document.getElementById('focusfield').value;" ;W3C
	write YCR,"  if (focusfield != '') { "
	write YCR,"     var thefield=document.getElementById(focusfield);"
	write YCR,"	    if (thefield!=null) {"
	write YCR,"		   thefield.parentNode.firstChild.style.fontWeight='bold';"
	write YCR,"     } "
	write YCR,"  } "



	do StoreColumnOrder(YFORM)
	do Head^COMGridEdit31Body(YKEY,YFORM,YMAXKEY,"gridheadRow")

	if 'pblnTabOnly {
		if '$get(^CacheTemp(YUSER,"Grid","COMView")) {
			do CreateData^COMGridEdit31Body2(YKEY,YFORM)
		}
		do AllCallBacks^COMGridEdit31S()

	} else {
		if '$get(^CacheTemp(YUSER,"Grid","COMView")) {
			do AddLines^COMGridEdit31Body(YKEY,YFORM)
		}
	}
	do OnAfterDataFields^COMGridEdit31Events()

	set intPage      = $get($$$GRIDPage,1)
	// If we are in form where the focus has been specifically set, do not focus the grid.
	set intFormFocus = $$$WWW120FirstFocusToDataFieldNumb($get(^WWW120(0,$$$GRIDContainer,1)))
	set blnFocusGrid = $$$YES

	if intFormFocus'="" {
		set intDisplay = $$$WWW122DisplayOnPageNumber($$Get^WWW122(YFORM,intFormFocus))
		if YSEITE=intDisplay {
			set blnFocusGrid = $$$NO
			set strFocus     = ""
		}
	}

 	if blnFocusGrid {
		set strFocus="T"                         //Default Focus = Top
		if $get(^CacheTemp(YUSER,"GridLine"))'="" {
			set idRow = $get($$$WWWDATEN("REFERENCEROW",$get(^CacheTemp(YUSER,"GridLine")),1))
			if idRow'="" {
				set intPage  = $$GetPage^COMGridEdit31R(idRow)
				set strFocus = $$$GRIDGetFirstCell(idRow)
				kill ^CacheTemp(YUSER,"GridLine")
			}
		} else {
			if '$$IsScanReq^WWW120Scan(YFORM) {  //SR16565
				do AddDefaultLine()
			}
		}
	}
	if intPage > $$$GRIDNumPages set intPage = $$$GRIDNumPages
	
	write YCR,$$$GRIDGoToPage(intPage,$$$GRIDNumPages,strFocus,$$$NO)
	
	if (intMaxWidth=-1)||($$AutoResizeRows^WWW120($get(YFORM))) {
		write YCR,"cgeShowGrid(1,"_$$AutoResizeRows^WWW120($get(YFORM))_");" ;SESDF-1237
	}
	write "resetColumnWidths();"
	write "window.setTimeout('resetColumnWidths();',600);"
	$$$EndScript()

	write YCR
	
	quit
	
	
AddDefaultLine()
	;-------------------------------------------------------------------------------
	; Open grid automatically for editing
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 18-Apr-2013	shobby	CORE-78:	CanAddLine
	; 24-Sep-2012	shobby	SR18021:    Line of code commented to assist in patching
	;									SR18017.
	; 21-May-2012	shobby	SR18017:	Create a new line if configured.
	; 03-Sep-2008	shobby	SRBR014893: Created (based on Karine's changes)
	;-------------------------------------------------------------------------------
	new blnIsEnabled,intRowCount
	
	set YVOR=$get(^WWW120(0,YFORM,1)) ;SR18017

 	set blnIsEnabled = $get(^CacheTemp(YUSER,"Grid","Enabled"))                     //Karine@20/12/07 - Grid em edição
	set intRowCount  = $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","ROWCOUNT"))		//Karine@20/12/07 - Existe registro ?
	
	//Karine@20/12/07 - Abrir grid para edição automaticamente vvv				 
	if (blnIsEnabled=$$$YES)  {  //Karine@30/01/08	// Grid em edição && não existe nenhum registro	;SR18021 ;SR18017
		if (";"_$$$WWW120DoNOTDisplayStandardButto($get(^WWW120(0,YFORM,1)))_";")'[";1;" { ;SR18017
			; Don't do it if not allowed to add a new line
			if (intRowCount=0) {													;SR18017
				do AddLine^COMGridEdit31Add(,,YFORM,,,,,$$$YES)
			}
		}
		if ^CacheTemp(YUSER,"Grid","NewLine")  {									;SR18017
			if $$CanAddLine(YFORM,YVOR) do AddLine^COMGridEdit31Add(,,YFORM,,,,,$$$YES) 	;SR18017 ;CORE-78
			write YCR," window.setTimeout('moveFocusBottom();',1);"					;SR18017
		}																			;SR18017
	}
	quit 

CanAddLine(YFORM,YVOR)
	;-------------------------------------------------------------------------------
	; Determines if the last line on the grid has been saved.  If so we can add a
	; new line, if not then use the existing unfinished line
	;	  
	; Optional set lines if the pintRows is set
	; 
	; Returns:Number of Rows
	;
	; History:
	; 18-Apr-2013	shobby		CORE-78: Created
	;-------------------------------------------------------------------------------
	new blnAdd,intLast,idClass,YKEY,strGlobal,blnData
	
	set blnAdd=$$$YES
	set intLast = $order(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","REFERENCEKEY",""),-1)
	set YKEY = $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","REFERENCEKEY"))
	set idClass = $$$WWW120ClassUsedInForm(YVOR)
	if (intLast'="") && (idClass'="") {
		set strGlobal="^"_idClass_"("_$$$WWWYM(idClass)_","""_YKEY_""","_intLast_",1)"
		set blnData=$get(@strGlobal)
		if blnData="" set blnAdd=$$$NO
	} 
	quit blnAdd
	
GetRowsPerPage(pidUser,pidForm,pintRows=0)

	;-------------------------------------------------------------------------------
	; Gets the number of rows per page for the User / Form 
	; 	from the ^COMGridEditPerPage(YBED,YFORM,"Grid","PerPage") Global
	; 	If not defined return 20
	;	  
	; Optional set lines if the pintRows is set
	; 
	; Returns:Number of Rows
	;
	; History:
	; 30-Oct-2008	SCR		SR16026 Created
	;-------------------------------------------------------------------------------
	new intRows
	
	; Null or Invalid User or Form should not happen
	;   if it does, force to space and don't error.
	if $get(pidUser)="" set pidUser = " "
	if $get(pidForm)="" set pidForm = " "
	
	if $get(pintRows) {
		set ^COMGridEditPerPage(pidUser,pidForm,"Grid","PerPage") = pintRows
	}
	set intRows = $get(^COMGridEditPerPage(pidUser,pidForm,"Grid","PerPage"))
	if intRows<1 set intRows = 20
	
	quit intRows
	
	
GetDateFormat()
	; FIXME : GetDateFormat^COMUtilLocale also ensures TT/MM/JJJJ or DD/MM/AAAA => DD/MM/YYYY - replace this with common call?
	;-------------------------------------------------------------------------------
	; Gets the date format used for dates in the grid. This is used for sorting purposes.
	;
	; Returns:String
	;
	; History:
 	; 20-Jul-2011	shobby	SR17807:	GetFormat has moved.
	; 22-Apr-2010	GRF		-: Clear old commented code
	; 20-Aug-2007	GM		SR13729: Change "FELDFORMAT" parameter to $$GetFormat^INPARA()
	; 15-Jul-2005	shobby	SR12754:Replaced LANGUAGE global (not always reliable)
	; 14-Feb-2005	Paul K	Tested for LANGAUGE being defined.
	; 11-Feb-2005	Paul K	Created (SR#11717)
	;-------------------------------------------------------------------------------
	;SR17807 quit $$GetFormat^INPARA(1,"DD/MM/YYYY")  ;SR13729
	quit $$GetFormat^WWW100(1,"DD/MM/YYYY")  ;SR13729
	
GetMaxHeight() ;CORE-69.1
	new strMaxHeight

	set strMaxHeight=""
		
	if '$$$WWW012IgnoreMaximumHeight($get(^WWW012(0,0,1))) {
		set strMaxHeight = +$get(^CacheTemp(YUSER,"Grid","MaxHeight"))
		if strMaxHeight<1 set strMaxHeight=9999999999999
		set strMaxHeight="max-height:"_strMaxHeight_"px;"
	}
	quit strMaxHeight
	
	
BODY(pintMaxHeight="")
	;-------------------------------------------------------------------------------
	; TABLE BODY
	;
	; Returns:
	;
	; History:
	; 12-Feb-2014	shobby	SESDF-954: Reworking of grid height and width.
	; 04-Mar-2013	shobby	CORE-69.1: Height setting in Firefox.
	; 19-Apr-2011	shobby	SR17724: Removed old commented code.
	; 13-Jul-2010	GRF		SR17414: consolidate TABLEbd style in CSS file.
	; 08-Jul-2010	GRF		SR17408: use 100% for default width
	; 06-Jul-2010	GRF		SR17414: replace expression with hard-coded height &
	;							width for Firefox *AND* expression for MSIE.
	; 17-Feb-2009	shobby	SRAdHoc: Rewrote as HTML.  Commented out New's.  Can't
	; 							see why these are necessary.
	; 05-Sep-2008	HQN		Script is keyword, must enclose in quotes for font-family
	; 28-Feb-2008	shobby	SRBR014904: Allow grid lines to auto resize.
	; 26-Oct-2005	JW		SR13744: Remove $etrap - causing problems...
	; 04-May-2005   shobby  Consolidate code from BODY, BodyStart and BodyEnd
	;  2-Mar-2005	JW		OnAfterDataFields is done later in BODYADDROWS.
	; 19-Jan-2005	Shobby	Rewrite to remove the . notation.
	;-------------------------------------------------------------------------------
	; CORE-69.1     style='height:200px; width:100%; height:expression(gridDIV.clientHeight-gridbodyDIV.offsetTop); width:expression(gridDIV.offsetWidth-4); table-layout:fixed;'

	&html<
<DIV id='gridbodyDIV'
    class='gDIVbd'
    style='#($$GetMaxHeight())# width:100%; height:expression(gridDIV.clientHeight-gridbodyDIV.offsetTop); width:expression(gridDIV.offsetWidth-4); table-layout:fixed;'
	onscroll='cgeOnScroll();'>
  <TABLE cellspacing=0
      cellpadding=0
      AutoResizeRows=#($$AutoResizeRows^WWW120($get(YFORM)))#
      id='gridbody' onresize='cgeSetHeight("#(pintMaxHeight)#");'
      class='TABLEbd'>
    <TBODY id='TBODY'>
    </TBODY>
  </TABLE>
</DIV>
	>
	quit	
	
	
AddRows()
	;-------------------------------------------------------------------------------
	; 12-Apr-2010	GRF		- : Replace single character variables
	;-------------------------------------------------------------------------------
	new idx,intSub,loop,strPiece,strBigString
	
	set intSub = 1
	set strBigString(intSub) = ""
	set idx = ""
	for {
		set idx = $order(^CacheTemp(YUSER,"Grid","Rows",idx))
		quit:idx=""
		
		set strPiece = $get(^CacheTemp(YUSER,"Grid","Rows",idx))
		set strBigString(intSub) = strBigString(intSub)_strPiece_Y_"!@#$"_Y
		if $length(strBigString(intSub))>25000 {
			set intSub = intSub+1
			set strBigString(intSub) = ""
		}
	}
	
	if strBigString(intSub)'="" { 
		set strBigString(intSub)=$extract(strBigString(intSub),1,$length(strBigString(intSub))-6)
		write !,"cgeAddManyRows(TBODY,"""
		for loop=1:1:intSub {
			write strBigString(loop)
		}
		write """);"
	}
	quit
	
	
StoreColumnOrder(YFORM)
	;-------------------------------------------------------------------------------
	; Get the current column order
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 18-May-2010	GRF		-: Clear old commented code
	; 10-Jul-2007	RPW		SRBR014553: The class field and form fields are always
	; 							1 for 1.  WWWFELDNAME uses the class field.
	; 06-Jul-2006	shobby	SRBR014553: Use standard method to get form field information.
	; 23-Jun-2006	FrankF	SRBR014063: Don't show not customized free fields on the grid.
	; 28-Sep-2005	JW		SR11573: Remove pblnKill - now not needed. Changed name.
	; 08-Sep-2005	JW		SR13099: Check WWW122D properly. Use better variable
	; 							names. Return order.
	; 17-Mar-2005	shobby	Additional Charges.  Put the column order into a comma
	; 							separated string indexed by YFORM to support
	; 							multiple classes in a single grid.
	;  9-Mar-2005	JW		SR11848: Removed ShowCell - moved elsewhere
	;-------------------------------------------------------------------------------
	quit:$get(YFORM)="" ""
	
	new arrOrder,idCol,idField,idPage,idRow,idxYFORM,intCount,objField,objWWW122,strOrder
	
	; FIXME : Perhaps hide some columns if fields aren't needed? <GRF> - e.g. Lot No where no items use it?
	set idxYFORM = $$$Index(YFORM)
	set idPage   = ""
	for {
		set idPage = $order(^WWW122s(0,3,idxYFORM,idPage))
		quit:idPage=""
		
		set idRow = ""
		for {
			set idRow = $order(^WWW122s(0,3,idxYFORM,idPage,idRow))
			quit:idRow=""
			
			set idCol = ""
			for {
				set idCol = $order(^WWW122s(0,3,idxYFORM,idPage,idRow,idCol))
				quit:idCol=""
				
				set idField = ""
				for {
					set idField = $order(^WWW122s(0,3,idxYFORM,idPage,idRow,idCol,YFORM,idField))
					quit:idField=""
 					
					set objWWW122 = $$Get^WWW122(YFORM,idField) ; Don't show columns for free fields unless have a customization
					
					if $$^WWWFELDNAME(YFORM,"D",$$$WWW122SequenceNumber(objWWW122))'="_FREE" {
							set arrOrder($case($$$WWW122DisplayOnPageNumber(objWWW122),"":idPage,:$$$WWW122DisplayOnPageNumber(objWWW122)),
									     $case($$$WWW122ColumnPosition(objWWW122),"":idCol,:$$$WWW122ColumnPosition(objWWW122)),
									     $case($$$WWW122RowPosition(objWWW122),"":idRow,:$$$WWW122RowPosition(objWWW122)),
									     idField) = ""
					}
				}
			}
		}
	}
	
	set strOrder = ""
	for {
		set idPage = $order(arrOrder(idPage))
		quit:idPage=""
		
		for {
			set idCol = $order(arrOrder(idPage,idCol))
			quit:idCol=""
			
			for {
				set idRow = $order(arrOrder(idPage,idCol,idRow))
				quit:idRow=""
				
				for {
					set idField = $order(arrOrder(idPage,idCol,idRow,idField))
					quit:idField=""
					
					set strOrder = strOrder_","_idField
				}
			}
		}
	}
	
	set $extract(strOrder) = ""
	set ^CacheTemp(YUSER,"Grid",YFORM,"COLUMNORDER") = strOrder
	
	quit strOrder]]></Routine>
</Export>