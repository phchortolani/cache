<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARPreReqAprovacao" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARPreReqAprovacao
	#include COMSYS
	#include COMConst
	#include VARConst
	#include INConst

OnAfterPrimaryKey(pYKEY)
	;do OnAfterPrimaryKey^VARPreReqAprovacao(YKEY)
	do LoadListaLocalAbastecedor()
	
	quit
	
LoadListaLocalAbastecedor()
	;Popula COMTempList apenas com os Locais Centrais (Abastecedores)
	
	new CodLocal, NomeLocal, objLista, strLocaisCentrais, cnt	
	
	set objLista = ""
	
 	kill ^COMTempList(YM,YUSER,"VARPreReqLocalAbastecedor")
 
	set strLocaisCentrais = $$getLocaisCentraisEstoque^VARParametroCliente(YM)
	quit:(strLocaisCentrais = "")
	
	for cnt = 1:1:$length(strLocaisCentrais,";") {
	   	set CodLocal = $piece(strLocaisCentrais,";",cnt)	   	
	   	quit:(CodLocal = "")
	   				
		set $piece(objLista,Y,1) = $$SQLGetLocationName^VARSQL(CodLocal)
		set ^COMTempList(YM,YUSER,"VARPreReqLocalAbastecedor",CodLocal,1) = objLista
   	}
  
	quit 


OnAfterDataFields(pYKEY,pYFELD,pYSEITE)
	;do OnAfterDataFields^VARPreReqAprovacao(YKEY,YFELD,YSEITE)
 	new CriadoEm
 
	if pYSEITE = 1{
		set CriadoEm = $$$VARPreReqAprovacaoCriadoEm(pYFELD)
		;Se o campo CriadoEm estiver preenchido quer dizer que
		;o usuário salvou o registro, então monta a grid.
		if CriadoEm'="" {
			do LoadGrid(pYKEY,pYFELD,pYSEITE)
		}
	}
	elseif pYSEITE=2{ 
		do LoadGridSomenteLeitura(pYKEY,pYFELD,pYSEITE)
	}
	
	quit
	
	
LoadGrid(pYKEY="",pYFELD="",pYSEITE="")

	do LimparLinhas(pYKEY,pYFELD)
	do CarregarLinhas(pYKEY,pYFELD,pYSEITE)
	
	new pYFORM,YAUSWAHL
	set pYFORM="VARPreReqAprovacaoLinha"
	//set pYFELD=""
	//set pYKEY=$get(pYKEY)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=400
	set $$$COMGridEditParameterGridName(YAUSWAHL)=pYFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)='($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARPreReqAprovacao"
	
	;set ^CacheTemp(YUSER,"GridLine") = YPARA		//SR14979
	;SET ^CacheTempEvent(YUCI,pYFORM,"Display")=1
	;SET ^CacheTempEvent(YUCI,pYFORM,"Format")=1

	;Forçar alteração ao mudar de aba
	set idContainer = $$$COMGridEditParameterContainer(YAUSWAHL)
	kill ^WWWDATEN(YM, +$horolog, YUSER, idContainer, "Grid", pYFORM)

	$$$GRIDStart(pYFORM,pYKEY)


	quit
	

LoadGridSomenteLeitura(pYKEY="",pYFELD="",pYSEITE="")

	do LimparLinhas(pYKEY,pYFELD)
	do CarregarLinhas(pYKEY,pYFELD,pYSEITE)
	
	new pYFORM,YAUSWAHL
	set pYFORM="VARPreReqAprovacaoLinha"
	//set pYFELD=""
	//set pYKEY=$get(pYKEY)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=400
	set $$$COMGridEditParameterGridName(YAUSWAHL)=pYFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)=$$$NO
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARPreReqAprovacao"
	
	;set ^CacheTemp(YUSER,"GridLine") = YPARA		//SR14979
	;SET ^CacheTempEvent(YUCI,pYFORM,"Display")=1
	;SET ^CacheTempEvent(YUCI,pYFORM,"Format")=1

	;Forçar alteração ao mudar de aba
	set idContainer = $$$COMGridEditParameterContainer(YAUSWAHL)
	kill ^WWWDATEN(YM, +$horolog, YUSER, idContainer, "Grid", pYFORM)


	$$$GRIDStart(pYFORM,pYKEY)


	quit
	
OnBeforeSave(pYKEY)
	;do OnBeforeSave^VARPreReqAprovacao(YKEY)
 	 	 	
	new strStatus
	set strStatus=$$$GRIDSave(pYKEY)
	if $$$ISOK(strStatus) {
	} else {
		set Q=$$$QDontSave
	}
	quit
	
	
	
LimparLinhas(pYKEY,pYFELD)
	;Limpa todas as linhas da grid
	new Usuario
	
	if pYKEY="" quit
	
	set Usuario = pYKEY
	KILL ^VARPreReqAprovacaoLinha(YM,Usuario)
	
	quit
	
	
CarregarLinhas(pYKEY,pYFELD,pYSEITE)	
	
	new Usuario, idReq, idReqLinha, Programa
	
	if pYKEY="" quit
	
	set Usuario = pYKEY
	set cont    = 0
	
	if (pYSEITE = 2) {
		set msg = "<p><b>"
		set msg = msg_"Esses são os produtos já selecionados para Aprovação.<br>"
		set msg = msg_"Ao clicar em Aprovar, será gerada uma Requisição para cada Local Requisitante e Local Abastecedor.<br>"
		set msg = msg_"Quando a Quant. Aprovada for igual a 0 (zero), o item do Pedido de Transferência não será aprovado.<br>"
		set msg = msg_"</b></p>"
		W msg
		;W "<p><b>Esses são os produtos já selecionados para Aprovar.<br>Ao clicar em Aprovar será gerado uma Requisição para cada Local Solicitante e Local Abastecedor.<br><br>Exceto se a Quant. aprovada for igual a 0 (zero), nesse caso o item do Pedido de Transferência</b></p>"
	}
	
	set idReq=""
	for {
		set idReq = $order(^VARPreRequisicaoLinha(YM,idReq))
		quit:idReq=""
		
		set objPreRequisicao = $G(^VARPreRequisicao(YM,idReq,1))
		if objPreRequisicao = ""{
			quit
		}
		
		set LocalSolicitante = $$$VARPreRequisicaoLocalSolicitante(objPreRequisicao)
		set DataRequisicao   = $$$VARPreRequisicaoConfirmadoEm(objPreRequisicao)
		set Programa		 = $$$VARPreRequisicaoPrograma(objPreRequisicao)
	
		set idReqLinha=""
		for {
			set idReqLinha = $order(^VARPreRequisicaoLinha(YM,idReq,idReqLinha))
			quit:idReqLinha=""
			
			set objPreRequisicaoLinha = $G(^VARPreRequisicaoLinha(YM,idReq,idReqLinha,1))
			set QuantAprovada         = $$$VARPreRequisicaoLinhaQuantAprovada(objPreRequisicaoLinha)
			set LocalAbastecedor      = $$$VARPreRequisicaoLinhaLocalAbastecedor(objPreRequisicaoLinha)
			set Observacao		 	  = $$$VARPreRequisicaoLinhaObservacao(objPreRequisicaoLinha)
			
			;Se o Status da linha for diferente de 1-Ag. Aprovação continua
			if $$$VARPreRequisicaoLinhaStatus(objPreRequisicaoLinha)'= 1{
				continue
			}
			
			;Se for a Aba Selecionados só mostra os registros que já estão
			;com QuantAprovada e LocalAbastecedor definidos
			if (pYSEITE = 2) {
				if (QuantAprovada=0){
				
				}
				elseif (QuantAprovada="") || (LocalAbastecedor=""){
					continue
				}
				;Se o local abastecedor for diferente do local atual do usuário, continua
				elseif (LocalAbastecedor '= YLOCATION) {
					continue
				}
			}
			
			;Filtrar(pYFELDFiltro,pYFELDLinha,pYKEYReq)
			if '$$Filtrar(pYFELD,objPreRequisicaoLinha,idReq) {
				continue	
			}
			
		
			set objAprovacaoLinha = ""
			
			set $$$VARPreReqAprovacaoLinhaCodProduto(objAprovacaoLinha)       = $$$VARPreRequisicaoLinhaCodProduto(objPreRequisicaoLinha)
			set $$$VARPreReqAprovacaoLinhaUnidade(objAprovacaoLinha)          = $$$VARPreRequisicaoLinhaUnidade(objPreRequisicaoLinha)
			set $$$VARPreReqAprovacaoLinhaQuantRequisitada(objAprovacaoLinha) = $$$VARPreRequisicaoLinhaQuantRequisitada(objPreRequisicaoLinha)
			set $$$VARPreReqAprovacaoLinhaQuantAprovada(objAprovacaoLinha)    = $$$VARPreRequisicaoLinhaQuantAprovada(objPreRequisicaoLinha)
			set $$$VARPreReqAprovacaoLinhaLocalAbastecedor(objAprovacaoLinha) = $$$VARPreRequisicaoLinhaLocalAbastecedor(objPreRequisicaoLinha)
			set $$$VARPreReqAprovacaoLinhaNumRequisicao(objAprovacaoLinha)    = idReq
			set $$$VARPreReqAprovacaoLinhaItemRequisicao(objAprovacaoLinha)   = idReqLinha
			set $$$VARPreReqAprovacaoLinhaLocalSolicitante(objAprovacaoLinha) = LocalSolicitante
			set $$$VARPreReqAprovacaoLinhaObservacao(objAprovacaoLinha)		  = Observacao
			set $$$VARPreReqAprovacaoLinhaDataRequisicao(objAprovacaoLinha)	  = DataRequisicao
			set $$$VARPreReqAprovacaoLinhaPrograma(objAprovacaoLinha)	  	  = Programa
			
			set cont = cont + 1
			set ^VARPreReqAprovacaoLinha(YM,Usuario,cont,1) = objAprovacaoLinha
			
	
		}


	}
	
	
	quit
	
	
LimparFiltros()
	;do LimparFiltros^VARPreReqAprovacao()
	;Rotina que Limpa o formulário, excluindo o registro atual
	
	KILL ^VARPreReqAprovacao(YM,YBED)
	KILL ^VARPreReqAprovacaoLinha(YM,YBED)
	do ReloadForm^COMUtilForm()
	
	quit
	
	
	
Filtrar(pYFELDFiltro,pYFELDLinha,pYKEYReq)
	;Rotina que retorna 1-$$$YES se for para filtrar(mostrar) o registro
	;e 0-$$$NO se não for para mostrar o registro na tela.
	
	new Retorno
	
	set Retorno = $$$NO
 
	if pYFELDFiltro = "" quit Retorno
	if pYFELDLinha  = "" quit Retorno
	if pYKEYReq     = "" quit Retorno
	
	new objPreRequisicao	
	new FiltroLocalSolic, FiltroProduto, FiltroGrupoProduto, FiltroPrioridade, FiltroDataDesejada, 
		FiltroLocalAbastecedor, FiltroPrograma
	
	new VlrLocalSolic, VlrProduto, VlrGrupoProduto, VlrPrioridade, VlrDataDesejada, VlrLocalAbastecedor,
		VlrPrograma
	
	set objPreRequisicao = $get(^VARPreRequisicao(YM,pYKEYReq,1))
	if objPreRequisicao = "" quit Retorno
	
	set FiltroLocalSolic       = $$$VARPreReqAprovacaoLocalSolicitante(pYFELDFiltro)
	set FiltroProduto          = $$$VARPreReqAprovacaoProduto(pYFELDFiltro)
	set FiltroGrupoProduto     = $$$VARPreReqAprovacaoGrupoProduto(pYFELDFiltro)
	set FiltroPrioridade       = $$$VARPreReqAprovacaoPrioridade(pYFELDFiltro)
	set FiltroDataDesejada     = $$$VARPreReqAprovacaoDataDesejada(pYFELDFiltro)
	set FiltroLocalAbastecedor = $$$VARPreReqAprovacaoLocalAbastecedor(pYFELDFiltro)
	set FiltroPrograma		   = $$$VARPreReqAprovacaoPrograma(pYFELDFiltro)

 	if (FiltroLocalSolic = "") && (FiltroProduto = "") && (FiltroGrupoProduto = "")&&
	   (FiltroPrioridade = "") && (FiltroDataDesejada = "") && (FiltroLocalAbastecedor = "") &&
	   (FiltroPrograma = "") {
		set Retorno = $$$YES
		quit Retorno
	}
	
	;Dados da Requisição
	set VlrLocalSolic   = $$$VARPreRequisicaoLocalSolicitante(objPreRequisicao)
	set VlrPrioridade   = $$$VARPreRequisicaoPrioridade(objPreRequisicao)
	set VlrDataDesejada = $$$VARPreRequisicaoDataDesejada(objPreRequisicao)
	set VlrPrograma		= $$$VARPreRequisicaoPrograma(objPreRequisicao)

	;Dados da Requisição Linha
	set VlrProduto          = $$$VARPreRequisicaoLinhaCodProduto(pYFELDLinha)
	set VlrLocalAbastecedor = $$$VARPreRequisicaoLinhaLocalAbastecedor(pYFELDLinha)
	
	;Filtra por Local Solicitante
	if (FiltroLocalSolic '= "") {
		set Retorno = $$$NO
		if (FiltroLocalSolic = VlrLocalSolic){
			set Retorno = $$$YES
		}
		else{
			quit Retorno
		}
	}
	
	;Filtra por Produto
	if (FiltroProduto '= "") {
		set Retorno = $$$NO
		if (FiltroProduto = VlrProduto){
			set Retorno = $$$YES
		}
		else{
			quit Retorno
		}
	}

	;Filtra por Grupo e Subgrupo de Produto
	if (FiltroGrupoProduto '= "") {
		set VlrGrupoProduto     = $$SQLGetGrupoItem^VARSQL(VlrProduto)
		set Retorno = $$$NO
		if (FiltroGrupoProduto = $extract(VlrGrupoProduto,1,$length(FiltroGrupoProduto))){
			set Retorno = $$$YES
		}
		else{
			quit Retorno
		}
	}

	;Filtra por Prioridade
	if (FiltroPrioridade '= "") {
		set Retorno = $$$NO
		if (FiltroPrioridade = VlrPrioridade){
			set Retorno = $$$YES
		}
		else{
			quit Retorno
		}
	}

	;Filtra por Data Desejada
	if (FiltroDataDesejada '= "") {
		set Retorno = $$$NO
		;Filtra se a Data Desejada for "menor ou igual" que o filtro informado
		if (VlrDataDesejada <= FiltroDataDesejada){
			set Retorno = $$$YES
		}
		else{
			quit Retorno
		}
	}

	;Filtra por Local Abastecedor
	if (FiltroLocalAbastecedor '= "") {
		set Retorno = $$$NO
		if (FiltroLocalAbastecedor = VlrLocalAbastecedor){
			set Retorno = $$$YES
		}
		else{
			quit Retorno
		}
	}
	
	;Filtra por Programa
	if (FiltroPrograma '= ""){
		set Retorno = $$$NO
		if (FiltroPrograma = VlrPrograma){
			set Retorno = $$$YES
		}
		else{
			quit Retorno
		}
	}
 
	quit Retorno


ShowDinTable(pidEvent,pidParameters)
	;do ShowDinTable^VARPreReqAprovacao(1, "INReq"_$$$DELIM_"INReqLine"_$$$DELIM_1_$$$DELIM_1)	
	;Petik 07/07/2010
	;Copiado do método CORE ShowItems^INReqTable
	;
	
	set blnIsRequisitante = 0	//PTK $$CheckReadOnly^VARTCIReq()
	quit:(blnIsRequisitante = 1)

	new blnHide,lstHeaders,lstColTypes,strStatus,strFunction,fltBOH,fltATP,arrLocations
	new idKey,idGrid,idUsuario,idAprovacaoLinha,idLocn
	new objFiltro,objAprovacaoLinha,objPreRequisicao,objLocalSolic,objLocn
	new NumPreReq,LocalSolicitante,Produto,SiglaUnidade,QtdeRequisitada,CMML,EstoqueLocal,Passou
	new Programa, stockLabel

	set blnHide = +$$$WWW012HideRelationClassIDs($get(^WWW012(0,YM,1)))
	set idGrid  =  $$$DYNTABLEGridLineFocusGrid(pidParameters)
	
	set lstHeaders=""
	set lstColTypes=""
		
	kill ^CacheTempDynamicTable(YUCI,YUSER)
	
	set idKey     = $$ReferenceKey^COMGridEdit31Interface(idGrid,$$$DYNTABLEGridLineFocusRow(pidParameters)) // SR15339
	set idUsuario = $$$KEY1(idKey)
	set idAprovacaoLinha = $$$KEY2(idKey)
	
	//PTK if '$$Editable^INReq(idUsuario) quit
	//if '$$Editable^INReqKit()    		quit                    ; *** EARLY EXIT ***
	
	set objFiltro         = $$GetYFELDContainer^COMGridEdit31G()
	set objAprovacaoLinha = $$$GRIDGetYFELD(idAprovacaoLinha)
	
	set NumPreReq        = $$$VARPreReqAprovacaoLinhaNumRequisicao(objAprovacaoLinha)
	set objPreRequisicao = $G(^VARPreRequisicao(YM,NumPreReq,1))
	
	//PTK if $$$INReqType(objFiltro)=4	quit                     ; *** EARLY EXIT ***	//SR16688

	set strStatus = $$GetLock^WWWMultiLock("VARPreReqAprovacao",idGrid,idUsuario_$$$COMMA_idAprovacaoLinha,$$$NO)      // SR15339
	
	set strFunction = "FillLine"
	
	set LocalSolicitante = $$$VARPreRequisicaoLocalSolicitante(objPreRequisicao)
	set Programa		 = $$$VARPreRequisicaoPrograma(objPreRequisicao)
	set objLocalSolic    = $get(^WWW0121(0,YM,LocalSolicitante,1))
	set Produto          = $$$VARPreReqAprovacaoLinhaCodProduto(objAprovacaoLinha)
	set SiglaUnidade     = $$$RTRIMWS($$SQLGetSiglaUnit^VARSQL($$$VARPreReqAprovacaoLinhaUnidade(objAprovacaoLinha)) )
	set QtdeRequisitada  = $$^WWWTR(0,12,$$$VARPreReqAprovacaoLinhaQuantRequisitada(objAprovacaoLinha) )_" ("_SiglaUnidade_")"
	
	set CMML = $$GetCMML^VARAlertaLocalLinha(LocalSolicitante,Produto)	
	if (CMML = "") {
		set CMML = $$^WWWTR(0,12,-##class(alSOH.iSOHBalance).GetConsumptionDateRange(Produto,LocalSolicitante,$piece($horolog,",",1)-365,+$horolog))_" ("_SiglaUnidade_")"
	}
	
	set EstoqueLocal = $$^WWWTR(0,12,+$$^INARTMENGE(Produto,,LocalSolicitante,,1,1))_" ("_SiglaUnidade_")"
	
	if $$$ISERR(strStatus) {
		write "function "_strFunction_"() {"
		write "alert('"_$$$JSText($$$Text(strStatus))_"');"
		write "}"
	} else {
		write "function "_strFunction_"() {"
		write "CallBack(""WarehouseLine^VARPreReqAprovacao"", getRowNum(getFocusField()), this.DiscData[0]);"
		write "}"
	}
 	
 	
 	if (Programa = "") {
	 	set stockLabel = "Estoque Disponível"
 	} else {
	 	set stockLabel = "Estoque Disponível (Programa)"
 	}
						 
	set lstHeaders  = $listbuild("Local Solicitante",
								 "Quant. Requisitada",
								 "CMML",
								 "Estoque Local",
								 "Local Abastecedor",
								 stockLabel)
	
	set lstColTypes = $listbuild($listbuild("left","display"),
								 $listbuild("center","display"),
								 $listbuild("center","display"),
								 $listbuild("center","display"),
								 $listbuild("left","link"),
								 $listbuild("right","display"))
								 

	do GetWarehouseLocations(.arrLocations,Produto,+$horolog,QtdeRequisitada,Programa)
	
	set Passou = $$$NO
	
	set idLocn=""
	for {
		set idLocn=$order(arrLocations(idLocn))
		quit:idLocn=""

		continue:idLocn=LocalSolicitante
		
		set Passou = $$$YES
		
		set fltBOH = $$^WWWTR(0,12,$piece(arrLocations(idLocn),Y,1) )_" ("_SiglaUnidade_")"
		set fltATP = $$^WWWTR(0,12,$piece(arrLocations(idLocn),Y,2) )_" ("_SiglaUnidade_")"
		set objLocn = $get(^WWW0121(0,YM,idLocn,1))
		;set ^CacheTempDynamicTable(YUCI,YUSER,1,$increment(idAprovacaoLinha),"data") = "("_idLocn_") "_$$$WWW0121LocationName(objLocn)_Y_fltATP		//SR16688
		set ^CacheTempDynamicTable(YUCI,YUSER,1,$increment(idAprovacaoLinha),"data") = idLocn_Y_fltATP		//SR16688
		set ^CacheTempDynamicTable(YUCI,YUSER,1,idAprovacaoLinha) = $select(blnHide:"",1:"("_LocalSolicitante_") ")_$$$WWW0121LocationName(objLocalSolic)_Y_
														  QtdeRequisitada_Y_
														  CMML_Y_
														  EstoqueLocal_Y_
														  $select(blnHide:"",1:"("_idLocn_") ")_$$$WWW0121LocationName(objLocn)_Y_
														  fltBOH
	}

	;Desenha uma linha com qtdes zeradas se não entrou no for acima
	if (idLocn="") && (Passou=$$$NO) {
		set ^CacheTempDynamicTable(YUCI,YUSER,1,$increment(idAprovacaoLinha),"data") = LocalSolicitante		
		set ^CacheTempDynamicTable(YUCI,YUSER,1,idAprovacaoLinha) = $select(blnHide:"",1:"("_LocalSolicitante_") ")_$$$WWW0121LocationName(objLocalSolic)_Y_
														  QtdeRequisitada_Y_
														  CMML_Y_
														  EstoqueLocal_Y_
														  "Nenhum Local Abastecedor com Estoque"_Y_
														  0
														  
		;Altera todos as colunas para "display"
		set lstColTypes = $listbuild($listbuild("left","display"),
									 $listbuild("center","display"),
									 $listbuild("center","display"),
									 $listbuild("center","display"),
									 $listbuild("left","display"),
									 $listbuild("right","display"))
														  
		
	}	


	//SR16599
	//The last paramater (after pidEvent) needs to be set for the RowClick event, will be used by RowClick^WWW120DynTable
	//	e.g. "WarehouseLine^INReqTable"
	//	will be called with the following parameters
	//	1. Row ID
	//	2. Each entry in ^CacheTempDynamicTable(...,data) seperated by "~" will be a new parameter
	//			in this routines case : do WarehouseLine^INReqTable(pidRow,idLocn) will be executed on Row click
	do DrawTable^WWW120DynTable(lstHeaders,1,lstColTypes,pidParameters,strFunction,pidEvent,"WarehouseLine^VARPreReqAprovacao")
	
	//kill ^CacheTempDynamicTable(YUCI,YUSER,1)
	kill ^CacheTempDynamicTable(YUCI,YUSER)		//SR16599
	
	quit
	
	
WarehouseLine(pidRow,pidLocn,pfltATP="")
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By : CallBack in ShowItems^INReqTable [Function FillLine]
	;		
	; Inputs : 
	;
	; ByRef :
	; 	YFELD		FIXME : pYFELD/YFELD? <GRF>  Check calling routine
	;
	; Returns :
	;
	; History :
	; 11-Dec-2007	HQN		Added ATP update, should be all JS based,
	; 						does Global lookup at the moment
	; 23-Nov-2007	PPP		Created
	;-------------------------------------------------------------------------------
	do SetRecord^COMGridEdit31S1("VARPreReqAprovacaoLinha",pidRow,$$$FldVARPreReqAprovacaoLinhaLocalAbastecedor_$$$COMMA_pidLocn)
	;do UpdateManualField^COMGridEdit31Interface(pidRow,$$$FldVARPreReqAprovacaoLinhaLocalAbastecedor,pidLocn)	//pfltATP

	quit
	
	
GetWarehouseLocations(&parrLocns,pidItem,pdteDate,pfltQty,pidPrograma="")
	;-------------------------------------------------------------------------------
	; List all the locations with Stock for this item. Note the current location is excluded
	; The array contains the BOH and ATP quantites.
	;
	; Inputs:
	; 	pidItem			The item to search against
	;
	; ByRef:
	; 	parrLocns		The array of locations, with the BOH and ATP as the values
	;
	; Returns:
	;
	; History:
	; 15-Sep-2008	Luke	SR15886 Corrected the sourcing of locations to check 
	; 						validity of stock at a location 
	; 07-Dec-2007	GRF		SR15612: Apply OnDataAccess to filter the locations
	; 23-Nov-2007	PPP		SR15612 Created
	;-------------------------------------------------------------------------------
	new blnCheckFound, blnValid, fltATP, fltBOH, idLocn, strCallBack, sc
	new objItem, objLocn, objResultSet, strLocaisCentrais, cnt
	
	quit:$get(pidItem)=""
	
	set strCallBack   = $$$WWW001DataAccess($get(^WWW001(0,"WWW0121",1)))
	set blnCheckFound = $$$YES
	set sc = $$$OK

	set strLocaisCentrais = $$getLocaisCentraisEstoque^VARParametroCliente(YM)
	quit:(strLocaisCentrais = "")
	
	for cnt = 1:1:$length(strLocaisCentrais,";") {
	   	set idLocn = $piece(strLocaisCentrais,";",cnt)	   	
	   	quit:(idLocn = "")
	   	
 		// VVVVV SR15886
 		set objItem      = ##class(alINV.iUINV).GetItem(pidItem,.sc)
 		set objLocn      = ##class(alLOC.iLOC).GetLocation(idLocn,sc)
 		set objResultSet = ##class(alDRP.iDRP).SourceStock(objItem,objLocn)
 		
 		continue:(objResultSet.Count() = 0) 		
 		set blnValid = $$$YES

		if blnValid {
			set fltBOH = $$^INARTMENGE(pidItem,,idLocn,,0,1,,pidPrograma)
			set fltATP = $$^INATP1(pidItem,idLocn,pfltQty,pdteDate,1)
		
		//	if (fltBOH'=0) && (fltATP'=0) {
			set parrLocns(idLocn) = fltBOH_Y_fltATP
		}
	}

	quit
	
	
PodeLimparFiltros(pYKEY,pYFELD)
	;do PodeLimparFiltros^VARPreReqAprovacao(YKEY,YFELD)

	new strStatus
	
 	set strStatus = $$$OK
 	
 	if pYKEY="" {
 		quit strStatus 
 	}

	if pYFELD = ""{
		set strStatus = "Não existe nenhum filtro selecionado para limpar"	
	} 	
	
	if ($$$ISOK(strStatus)) && ($G(YSEITE) '= 1) {
		set strStatus = "Clique na aba Geral para Limpar os Filtros."
 	}

 	
 	$$$YQHandler(strStatus)
 	
 	quit strStatus
		
		
PodeAprovar(pYKEY,pYFELD,pYSEITE)
	;do PodeAprovar^VARPreReqAprovacao(YKEY,YFELD,YSEITE)

	new strStatus
	
 	set strStatus = $$$OK
 	
 	if pYKEY="" {
 		quit strStatus 
 	}
 	
	set PodeAprovar = $$$NO
	set idReq=""
	for {
		set idReq = $order(^VARPreRequisicaoLinha(YM,idReq))
		quit:idReq=""

		set idReqLinha=""
		for {
			set idReqLinha = $order(^VARPreRequisicaoLinha(YM,idReq,idReqLinha))
			quit:idReqLinha=""
		
			set objPreRequisicaoLinha = $G(^VARPreRequisicaoLinha(YM,idReq,idReqLinha,1))
			set QuantAprovada         = $$$VARPreRequisicaoLinhaQuantAprovada(objPreRequisicaoLinha)
			set LocalAbastecedor      = $$$VARPreRequisicaoLinhaLocalAbastecedor(objPreRequisicaoLinha)
		
			;Se o Status da linha for diferente de 1-Ag. Aprovação continua
			if $$$VARPreRequisicaoLinhaStatus(objPreRequisicaoLinha)'= 1{
				continue
			}
		
			if (QuantAprovada=0){
				set PodeAprovar = $$$YES
			}
			elseif (QuantAprovada > 0)&&(LocalAbastecedor'=""){
			//if (QuantAprovada'="")&&(LocalAbastecedor'=""){
				set PodeAprovar = $$$YES
			}
		
		}
	
	}

 	if PodeAprovar = $$$NO {
		set strStatus = "Não existe nenhum registro pronto para aprovar."_$c(10)_"Preencha a Quant. Aprovada e o Local Abastecedor para Aprovar."	 	
 	}
	
	;Por algum motivo essa validação não funcionou, ao clicar no botão Aprovar
	;sempre aparece essa mensagem
	;vvvvvv
	;if ($$$ISOK(strStatus)) && (pYSEITE '= 2) {
	;	set strStatus = "Clique na aba Selecionados para Aprovar."
 	;}
 	
	 	
 	$$$YQHandler(strStatus)
 	
 	quit strStatus



Aprovar(pYKEY,pYFELD)
	new strStatus
	
	set strStatus = $$$OK
	
 	do PodeAprovar(pYKEY,pYFELD,$G(YSEITE))
 	
 	if YQ = $$$YQEnable {
		set strStatus = $$Transaction^COMTransaction("AprovarTxn^VARPreReqAprovacao("""_pYKEY_""")",$$$YES)
 
		if $$$ISOK(strStatus) {
			set YSEITE = 1 // FIXME: This does not even fix all cases where page two is displayed.
			do ReloadForm^COMUtilForm()
		}
		else {
	 		do ReturnError^COMUtilError(strStatus)
 		}
		
 	} else {
	 	do ReturnError^COMUtils($$$YQMessage)
 	}
 
	quit strStatus



AprovarTxn(pYKEY)
	new strStatus,contLinha,idPreReq,objPreReq,LocalSolicitante,idPreReqLinha
	new objPreReqLinha,StatusLinha,QuantAprovada,LocalAbastecedor,idLocalSolicitanteOLD
	new idLocalAbastecedorOLD,NovaRequisicao,idLocalSolicitante,idLocalAbastecedor
	new idSeq,objTemp,contNovaLinha,objNovaReq,objNovaReqLinha,NovaRequisicaoLinha,ChavePreReqLinha
	new Programa
	
	set strStatus = $$$OK	
	
	kill ^VARTempPreReqAprovacao(YM,YBED)
	set contLinha = 0
	
	;Para cada linha da Pré-Requisição que estiver com o Status 1=Ag. Aprovação
	;E tiver os campos QuantAprovada e LocalAbastecedor preenchido
	;Joga numa temporária para depois gerar as requisições
	
	set idPreReq=""
	for {
		set idPreReq = $order(^VARPreRequisicaoLinha(YM,idPreReq))
		quit:idPreReq=""
		quit:'$$$ISOK(strStatus)
		
		set objPreReq = $G(^VARPreRequisicao(YM,idPreReq,1))
		if objPreReq = ""{
			set strStatus = "Objeto VARPreRequisicao não localizado"
		}
		quit:'$$$ISOK(strStatus)
		
		set LocalSolicitante = $$$VARPreRequisicaoLocalSolicitante(objPreReq)
		set Programa		 = $$$VARPreRequisicaoPrograma(objPreReq)

		set idPreReqLinha=""
		for {
			set idPreReqLinha = $order(^VARPreRequisicaoLinha(YM,idPreReq,idPreReqLinha))
			quit:idPreReqLinha=""
			quit:'$$$ISOK(strStatus)	
		
			set objPreReqLinha = $G(^VARPreRequisicaoLinha(YM,idPreReq,idPreReqLinha,1))
			if objPreReqLinha = ""{
				set strStatus = "Objeto VARPreRequisicaoLinha não localizado"
			}
			
			set StatusLinha      = $$$VARPreRequisicaoLinhaStatus(objPreReqLinha)
			set QuantAprovada    = $$$VARPreRequisicaoLinhaQuantAprovada(objPreReqLinha)
			set LocalAbastecedor = $$$VARPreRequisicaoLinhaLocalAbastecedor(objPreReqLinha)
			;Se o status da Linha não for 1=Ag. Aprovação, continua
			if (StatusLinha '= 1) {	;Ag. Aprovação
				continue
			}

			;Se o campo QuantAprovada for igual a 0 (zero) seta o status da
			;linha da Pre-Requisição para 5-Não Aprovado e grava AprovadoPor/AprovadoEm
			;
			if (QuantAprovada = 0) {
				;Grava os dados na Pre-Requisição
				set $$$VARPreRequisicaoLinhaStatus(objPreReqLinha)      = 5	;5-Não aprovado
				set $$$VARPreRequisicaoLinhaAprovadoEm(objPreReqLinha)  = $horolog
				set $$$VARPreRequisicaoLinhaAprovadoPor(objPreReqLinha) = YBED
			
				set ChavePreReqLinha = idPreReq_","_idPreReqLinha
				set strStatus = $$$Save("VARPreRequisicaoLinha", ChavePreReqLinha, objPreReqLinha, 1)
			
				quit:'$$$ISOK(strStatus)

				continue

			}

			;Se o local abastecedor for diferente do local atual do usuário, continua
			if (LocalAbastecedor '= YLOCATION) {
				continue
			}
			
			;Se os campos QuantAprovada ou LocalAbastecedor estiverem nulos, continua
			if (QuantAprovada = "") || (LocalAbastecedor = ""){
				continue
			}
			
			set contLinha = contLinha + 1
			set ^VARTempPreReqAprovacao(YM,YBED,LocalSolicitante,LocalAbastecedor,contLinha) = idPreReq_Y_idPreReqLinha
		
			;set ChaveLinha = pYKEY_","_Linha
			;set strStatus = $$$Save("VARPreRequisicaoLinha", ChaveLinha, objPreReqLinha, 1)
		
		}	
		
	
	}
	
	set idLocalSolicitanteOLD = ""
	set idLocalAbastecedorOLD = ""
	set NovaRequisicao        = ""
	
	
	;Agora varre a Global temporária para montar as requisições
	set idLocalSolicitante=""
	for {
		set idLocalSolicitante = $order(^VARTempPreReqAprovacao(YM,YBED,idLocalSolicitante))
		quit:idLocalSolicitante=""
		quit:'$$$ISOK(strStatus)
		
		set idLocalAbastecedor=""
		for {
			set idLocalAbastecedor = $order(^VARTempPreReqAprovacao(YM,YBED,idLocalSolicitante,idLocalAbastecedor))
			quit:idLocalAbastecedor=""
			quit:'$$$ISOK(strStatus)
			

			
			;Para cada sequência cria uma linha na Requisição
			set idSeq=""
			for {
				set idSeq = $order(^VARTempPreReqAprovacao(YM,YBED,idLocalSolicitante,idLocalAbastecedor,idSeq))
				quit:idSeq=""
				quit:'$$$ISOK(strStatus)
			
				set objTemp = $G(^VARTempPreReqAprovacao(YM,YBED,idLocalSolicitante,idLocalAbastecedor,idSeq))
				if objTemp'=""{
					set idPreReq      = $piece(objTemp,Y,1)
					set idPreReqLinha = $piece(objTemp,Y,2)
				}
				
				;Se for diferente pega o próximo número de requisição
				if (idLocalSolicitante '= idLocalSolicitanteOLD) || (idLocalAbastecedor '= idLocalAbastecedorOLD){
					
					;Antes de criar a nova Requisição confirma a anterior
					if NovaRequisicao '= ""{
						set strStatus = $$FirmTxn^INReq(NovaRequisicao)
						quit:'$$$ISOK(strStatus)
						
					}
					
					set NovaRequisicao = $$^WWWNEXT("INReq")
					
					set contNovaLinha = 0
					
					set idLocalSolicitanteOLD = idLocalSolicitante
					set idLocalAbastecedorOLD = idLocalAbastecedor
					
					set objPreReq = $G(^VARPreRequisicao(YM,idPreReq,1))
					set objNovaReq = ""
					
					set $$$INReqStatus(objNovaReq)   = 1	;1-Aberto
					set $$$INReqDate1(objNovaReq)    = +$Horolog
					set $$$INReqToLocn(objNovaReq)   = idLocalSolicitante
					set $$$INReqFromLocn(objNovaReq) = idLocalAbastecedor
					set $$$INReqPriority(objNovaReq) = $$$VARPreRequisicaoPrioridade(objPreReq)
					set $$$INReqDueDate(objNovaReq)  = $$$VARPreRequisicaoDataDesejada(objPreReq)
					set $$$INReqType(objNovaReq)     = 2	;2-Transferência interna
					set $$$INReqProgram1(objNovaReq) = Programa
					
					set strStatus = $$$Save("INReq", NovaRequisicao, objNovaReq, 1)
					
					quit:'$$$ISOK(strStatus)
					
				}
				
				
				set objPreReqLinha = $G(^VARPreRequisicaoLinha(YM,idPreReq,idPreReqLinha,1))

				;Insere os itens na nova Requisição
				set objNovaReqLinha = ""
				set $$$INReqLineItem(objNovaReqLinha)          = $$$VARPreRequisicaoLinhaCodProduto(objPreReqLinha)
				set $$$INReqLineUnit(objNovaReqLinha)          = $$$VARPreRequisicaoLinhaUnidade(objPreReqLinha)
				set $$$INReqLineQtyOrdered(objNovaReqLinha)    = $$$VARPreRequisicaoLinhaQuantAprovada(objPreReqLinha)
				set $$$INReqLineQtyRequired(objNovaReqLinha)   = $$$VARPreRequisicaoLinhaQuantAprovada(objPreReqLinha)
				set $$$INReqLineFromStockLocn(objNovaReqLinha) = $$$VARPreRequisicaoLinhaLocalAbastecedor(objPreReqLinha)
				set $$$INReqLineStatus(objNovaReqLinha)        = 1	;1-Aberto
				;set $$$INReqLineFREE1(objNovaReqLinha)         = CMM??
				set $$$INReqLineFREE10(objNovaReqLinha)        = $$$VARPreRequisicaoLinhaQuantRequisitada(objPreReqLinha)
				
				set contNovaLinha = contNovaLinha+1
				set NovaRequisicaoLinha = NovaRequisicao_","_contNovaLinha
				set strStatus = $$$Save("INReqLine", NovaRequisicaoLinha, objNovaReqLinha, 1)
				
				quit:'$$$ISOK(strStatus)
				
				;Grava os dados na Pre-Requisição
				set $$$VARPreRequisicaoLinhaStatus(objPreReqLinha)               = 2	;2-Ag. Atendimento
				set $$$VARPreRequisicaoLinhaNumRequisicaoGerada(objPreReqLinha)  = NovaRequisicao
				set $$$VARPreRequisicaoLinhaItemRequisicaoGerada(objPreReqLinha) = contNovaLinha
				set $$$VARPreRequisicaoLinhaAprovadoEm(objPreReqLinha)           = $horolog
				set $$$VARPreRequisicaoLinhaAprovadoPor(objPreReqLinha)          = YBED
				
				set ChavePreReqLinha = idPreReq_","_idPreReqLinha
				set strStatus = $$$Save("VARPreRequisicaoLinha", ChavePreReqLinha, objPreReqLinha, 1)
				
				quit:'$$$ISOK(strStatus)
				
			
			}	;end for idSeq	
		
		}	;end for idLocalAbastecedor
	
	}	;end for idLocalSolicitante
	
	;Confirma a última Requisição gerada
	if NovaRequisicao '= ""{
		set strStatus = $$FirmTxn^INReq(NovaRequisicao)
		quit:'$$$ISOK(strStatus) strStatus
		
	}

	quit strStatus

]]></Routine>
</Export>