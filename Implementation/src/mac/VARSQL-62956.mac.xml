<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="VARSQL" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[#include INConst
#include WWWConst
#include COMSYS
#include VARConst
#include MEDConst
#include FATConst
#include VARPainelAbastecimento

#import VAR.infra.util
 
#define ParamNotInformed "Parametro nao informado."
 
VARSQL
	quit

SQLLocal()
	;$$SQLLocal^VARSQL()

	quit "QUALQUER COISA"

SQLGetMovmtFromToCode(MovmtType,txnCode)
	 quit:(MovmtType="") ""
	 $$$VAR
	 set strMovmtFromTo = $$SQLGetMovmtFromTo^VARSQL(MovmtType,txnCode)
	 if strMovmtFromTo'="" set strMovmtFromTo=$piece(strMovmtFromTo,";",1)
	 quit strMovmtFromTo

SQLGetMovmtFromTo(MovmtType,txnCode)
	 quit:(MovmtType="") ""
	 $$$VAR
	 new debugedMovmtType,strMovmtFromTo
	 set debugedMovmtType = $listget(MovmtType, 1)
	 set strMovmtFromTo = $$GetMovmtFromTo^VARRelDistribuicao(debugedMovmtType,txnCode)
	 quit strMovmtFromTo
	
GetProgramName(pProgramKey)
	;04-Fev-2010 Karine
	new ProgramName
	set ProgramName = ""
	if pProgramKey '= "" {
		set ProgramName = $piece($get(^INPROJECT(0,pProgramKey,1)),"~",1)
	}

	quit:(ProgramName = "") pProgramKey	
	quit ProgramName

SQLGetLocationName(pidLocation)
	if pidLocation = "" quit ""
	quit $piece($get(^WWW0121(0,0,pidLocation,1)),"~",1)

SQLGetLocationSigla(pidLocation)
	if pidLocation = "" quit ""
	quit $piece($get(^WWW0121(0,0,pidLocation,1)),"~",84)
	
SQLGetLocationAddress(pidLocation)
	if pidLocation = "" quit ""
	
	new strAddress, objLocation, strStreet, strCity, strState, strZipcode
	
	set objLocation 	= $get(^WWW0121(0,0,pidLocation,1))
	
	set strStreet 		= $$$WWW0121Street(objLocation)
	set strCity 		= $$$WWW0121City(objLocation)
	set strState 		= $$$WWW0121State(objLocation)
	set strZipcode 		= $$$WWW0121Zipcode(objLocation)
	
	set strAddress = strStreet
	
	if strZipcode '= "" {
		if strAddress '= "" {
			set strAddress = strAddress_" - CEP: "_strZipcode
		} else {
			set strAddress = "CEP: "_strZipcode
		}
	}
	
	if strCity '= "" {
		if strAddress '= "" {
			set strAddress = strAddress_" - "_strCity
		} else {
			set strAddress = strCity
		}
	}
	
	if strState '= "" {
		if strAddress '= "" {
			set strAddress = strAddress_" - "_strState
		} else {
			set strAddress = strState
		}
	}
	
	quit strAddress
	
SQLGetDescFornecedor(pidFornecedor)
	if pidFornecedor = "" quit ""
	quit $piece($get(^INLIEF(0,pidFornecedor,1)),"~",4)

SQLGetTelFornecedor(pidFornecedor)
	if pidFornecedor = "" quit ""
	quit $piece($get(^INLIEF(0,pidFornecedor,1)),"~",208)
	
SQLGetContatoFornecedor(pidFornecedor)
	if pidFornecedor = "" quit ""
	set objFornecedor = $get(^INLIEF(0,pidFornecedor,1))
	quit $$$INLIEFContactPerson(objFornecedor)

SQLGetFaxFornecedor(pidFornecedor)
	if pidFornecedor  = "" quit ""
	set objFornecedor = $get(^INLIEF(0,pidFornecedor,1))
	quit $$$INLIEFFax(objFornecedor)

SQLGetEmailFornecedor(pidFornecedor)
	if pidFornecedor  = "" quit ""
	set objFornecedor = $get(^INLIEF(0,pidFornecedor,1))
	quit $$$INLIEFEmail(objFornecedor)

SQLGetCelFornecedor(pidFornecedor)
	if pidFornecedor  = "" quit ""
	set objFornecedor = $get(^INLIEF(0,pidFornecedor,1))
	quit $$$INLIEFFREE17(objFornecedor)
	
SQLGetDescricaoProduto(pidItem, pItemPedido = 0)
	if pidItem = "" quit ""
	If (pItemPedido = 1) {
		Quit $Select($$$INARTDescItemPedido($get(^INART(0,pidItem,1)))="":$$$INARTSearchName($get(^INART(0,pidItem,1))),1:$$$INARTDescItemPedido($get(^INART(0,pidItem,1)))) 
	}	
	quit $piece($get(^INART(0,pidItem,1)),"~",1)
	
SQLGetDescCompletaProduto(pidItem)
	;2010-08-25 Sósthenes
    if pidItem = "" quit ""
	quit $piece($get(^INART(0,pidItem,1)),"~",10)	

SQLGetDesCodProduto(pidItem)
	;09-Feb-2010 Karine
	new descCodProd, descProd
	set descCodProd = ""
	if pidItem '= "" {
	   set descProd = $piece($get(^INART(0,pidItem,1)),"~",1)
	   set descCodProd = pidItem_" - "_descProd
	}
	quit descCodProd

SQLGetUnitSigla(pidItem)
	quit:(pidItem = "") ""	
	
	new idUnit, descUnit		
	set idUnit 	 = $piece($get(^INART(0,pidItem,1)),"~",40)
	set descUnit = $$SQLGetDescCompletaUnit(idUnit)
 	
 	// Mostrar apenas os três primeiros dígitos da Unidade de Medida.	
	quit $extract(descUnit,1,3)
	
SQLGetUnitSigla2(pidItem)
	quit:(pidItem = "") ""	
	
	new idUnit, descUnit		
	set idUnit 	 = $piece($get(^INART(0,pidItem,1)),"~",40)
	set descUnit = $$SQLGetDescCompletaUnit(idUnit)
 	
 	// Mostrar apenas os dois primeiros dígitos da Unidade de Medida.	
	quit $extract(descUnit,1,2)
	
SQLGetUnitPerItem(pidItem)
	if pidItem = "" quit ""
	set idUnit = $piece($get(^INART(0,pidItem,1)),"~",40)
	//quit $get(^WWW101(0,"EINHEIT","PT",idUnit,1)) //Modificado o forma de saida por causa de um erro
	quit $$SQLGetDescUnit(idUnit)					//de subscript no relatório
	
SQLGetUnitMeasure(pidUnit)
	if pidUnit = "" quit ""
	quit $piece($get(^INART(0,pidUnit,1)),"~",40)
	
SQLGetDescCompletaUnit(pidUnit)
	quit:(pidUnit = "") ""
	set objWWW101 = $get(^WWW101(0,"EINHEIT","PT",pidUnit,1))
	set strUnit = $$$WWW101Text(objWWW101)
	quit strUnit
	
SQLGetDescUnit(pidUnit)
	quit:(pidUnit = "") ""
	set objWWW101 = $get(^WWW101(0,"EINHEIT","PT",pidUnit,1))
	set strUnit = $$$WWW101Text(objWWW101)
	quit $piece(strUnit,"-",2)
	
SQLGetUnitIdItem(pidItem)
	if pidItem = "" quit ""
	set idUnit = $piece($get(^INART(0,pidItem,1)),"~",40)
	quit idUnit

SQLGetSiglaUnit(pidUnit)
	quit:(pidUnit = "") ""
	set objWWW101 = $get(^WWW101(0,"EINHEIT","PT",pidUnit,1))
	set strUnit = $$$WWW101Text(objWWW101)
	quit $piece(strUnit,"-",1)
	
SQLGetGrupoItem(pidItem)
	if pidItem = "" quit ""
	quit $piece($get(^INART(0,pidItem,1)),"~",30)
	
SQLCompareGroupHierarchy(pidGrupo,pidCompareGrupo)
	new parentGroup
	if pidGrupo = "" quit 0
	if pidCompareGrupo = "" quit 0
	if pidGrupo=pidCompareGrupo quit 1
	set parentGroup=""
	set parentGroup=$piece($get(^INItemGroup(0,pidGrupo,1)),"~",1)
	if parentGroup=pidCompareGrupo quit 1
	quit 0
	
SQLGetDescGrupoItem(pidGrupo)
	if pidGrupo = "" quit ""
	quit $piece($get(^INItemGroup(0,pidGrupo,1)),"~",2)	
	
SQLGetDescGrupoPerItem(pidItem)
	if pidItem = "" quit ""
	set idGrupo = $piece($get(^INART(0,pidItem,1)),"~",30)
	//quit $piece($get(^INItemGroup(0,idGrupo,1)),"~",2) //Modificado o forma de saida por causa de um erro
	quit $$SQLGetDescGrupoItem(idGrupo)					 //de subscript no relatório
	
SQLGetYesOrNo(param)
	// Retorna o texto "Não" se parâmetro igual a zero, 
	// "Sim" se parâmetro igual a um, ou "?" se qualquer outro valor.
	if (+$get(param) = 0) {
		quit "Não"
	}
	if (+$get(param) = 1) {
		quit "Sim"
	}
	quit "?"
	
SQLGetUserNameOuCodigo(userNumber="")
	new userName 
	set userName = $$SQLGetUserName(userNumber)
	if (userName="") quit userNumber
	quit userName

SQLGetUserName(userNumber)
	if userNumber = "" quit ""
	quit $piece($get(^WWW013(0,userNumber,1)),"~",1)

SQLGetUserNumberAndName(userNumber)
	if userNumber = "" quit ""
	quit userNumber_" - "_$$SQLGetUserName(userNumber)

SQLGetUserTelDuty(user)
	if user = "" quit ""
	quit $piece($get(^WWW013(0,user,1)),"~",31)

SQLGetTimeStamp(pDate,pTime)
	; Transforma dois números em um timestamp do tipo HOROLOG
	new timestamp
	set timestamp=$get(pDate)
	if (timestamp'="") {
		if ($get(pTime)'="") {
			set timestamp=timestamp_","_pTime
		}
	}
	quit timestamp

FormatCurrency(amount)
	set Formatado = 0	
	if $g(YM) = "" do ^WWWVAR
	
	if amount = "" {
		quit 0
	} else { 
		set Formatado = $$^WWWTR(0,8,amount)	
	}	
	quit Formatado
	
FormatQuantity(amount)
	set Formatado = 0	
	if $g(YM) = "" do ^WWWVAR
	
	if amount = "" {
		quit 0
	} else { 
		set Formatado = $$^WWWTR(0,12,amount)	
	}	
	quit Formatado
		
SQLGetNumerico(valor)
 quit:($length($get(valor)) = 0) 0
 
 quit (valor + 0)
 

SQLDataValidade(idBundle)
	;19-Oct-2009 	Karine	Created
	;
	;Retorna a data de validade em timestamp 
	;
	set dteUseBy=""
	
	set dteUseBy= ##class(alSOH.iBundle).GetUseByDate(idBundle)
		
	if dteUseBy '= "" {
		set dteUseBy = $ZDATE(dteUseBy,4)	
	}
	quit dteUseBy
	
SQLGetLote(idBundle)
	;19-Oct-2009 	Karine	Created
	;
	;Retorna o lote através do Bundle ID 
	;
	set gLote=""
	
	set gLote = ##class(alSOH.iBundle).GetLotNumber(idBundle)
		
	quit gLote											
	
SQLGetDataFormatada2()
	; ----------------------
	; DD/MM/AAAA
	; ----------------------
	quit:$$SQLGetDataFormatada($horolog)
	
SQLGetDataFormatada(date)
	; ----------------------
	; DD/MM/AAAA
	; ----------------------
	quit:($get(date)="") ""
	quit $ZDATE(date,4)

SQLGetDataHoraFormatada(p1)
	; ----------------------
	; DD/MM/AAAA
	; ----------------------
	quit:($get(p1)="") ""
	quit $ZDATETIME(p1,4,2)
	
SQLGetDataInterna(date)
	quit:($get(date) = "") ""
	//quit $zdateh(date, 3) Modificado para converter formato "dd/mm/yyyy"
	quit $zdateh(date, 4)
 
SQLGetFormatDate(date)
	quit:($get(date)="") ""
	quit $ZDATETIME(date,4,1)
 
SQLGetFormatDate2(date)
	set date2=$piece(date,",",1)
	quit date2
	
	
SQLGetFormatDate3(date)	//Formato de Data 2007-01-30 (yyyy-mm-dd)
	quit:($get(date)="") ""
	quit $ZDATETIME(date,3)

SQLGetFormatDate4(date)
	set date4=$piece(date," ",1)
	quit date4
	 
SQLGetFormatDate5(date)
	set SPRACHE = "PT"
	set month = $$GetMonthString^COMUtilDate(date)
	set year  = ##class(%SYSTEM.SQL).YEAR($zdate(date,3))
	quit:($get(date)="") ""
	quit month_"/"_year
	
SQLGetAno(date)
	if ($get(date)="") quit ""
	quit ##class(%SYSTEM.SQL).YEAR($zdate(date,3))
	
SQLGetMes(date)
	if ($get(date)="") quit ""
	quit ##class(%SYSTEM.SQL).MONTH($zdate(date,3))
	
SQLGetFormatDateODBC(date)	//Formato de timestamp ODBC 2002-11-25 18:45:16.960000
	quit:($get(date)="") ""
	quit $ZDATETIME(date,3,1,6)
	
SQLGetUserParamDesc(param)
	// Obtém a descrição de um User Parameter (INPARA).
	// Esta função é usada em queries SQL.
	// O parâmetro da função deve conter o nome do parâmetro e
	// seu código, separado por "~", por exemplo:
	// "VARSESELEMENTODEDESPESA~1"
	set TextoParam = ""
	if ($get(param) = "") {
		set TextoParam = ""
	}
	else {
		set NomeParam = $piece(param,"~",1)
		set CodParam = $piece(param,"~",2)
		If (CodParam = "") Return ""
		set TextoParam = $piece($get(^INPARA(0,NomeParam,"PT",CodParam,1)),"~",1)
	}
	quit TextoParam
 
 
SQLGetAppParamDesc(param)
	// Obtém a descrição de um Application Parameter (WWW101).
	// Esta função é usada em queries SQL.
	// O parâmetro da função deve conter o nome do parâmetro e
	// seu código, separado por "~", por exemplo:
	// "VARSESELEMENTODEDESPESA~1"
	set TextoParam = ""
	if ($get(param) = "") {
		set TextoParam = ""
	}
	else {
		set NomeParam = $piece(param,"~",1)
		set CodParam = $piece(param,"~",2)
		set TextoParam = $piece($get(^WWW101(0,NomeParam,"PT",CodParam,1)),"~",1)
	}
	quit TextoParam		
	
	
SQLGetDetalheEndereco(pEndereco)
	;$$SQLGetDetalheEndereco^VARTCISQL(Endereco)
	;Retorna uma string com o detalhamento do endereço de armazenagem
	;separado por Modulo, Rua, Predio, Andar, Apto
	
	set Desc = ""
	if pEndereco '= ""{
		set Modulo = $$SQLGetParteDoEndereco(pEndereco,1)
		set Rua    = $$SQLGetParteDoEndereco(pEndereco,2)
		set Predio = $$SQLGetParteDoEndereco(pEndereco,3)
		set Andar  = $$SQLGetParteDoEndereco(pEndereco,4)
		set Apto   = $$SQLGetParteDoEndereco(pEndereco,5)
			
		set Desc = "Módulo: "_Modulo_" - "
		set Desc = Desc_"Rua: "_Rua_" - "
		set Desc = Desc_"Prédio: "_Predio_" - "
		set Desc = Desc_"Andar: "_Andar_" - "
		set Desc = Desc_"Apto: "_Apto
	}
	
	quit Desc	
	
SQLGetDetalheEnderecoCompacto(pEndereco)
	;$$SQLGetDetalheEnderecoCompacto^VARTCISQL(Endereco)
	;Retorna uma string com o detalhamento do endereço de armazenagem
	;separado por Modulo, Rua, Predio, Andar, Apto
	;com a descrição resumida
	
	set Desc = ""
	if pEndereco '= ""{
		set Modulo = $$SQLGetParteDoEndereco(pEndereco,1)
		set Rua    = $$SQLGetParteDoEndereco(pEndereco,2)
		set Predio = $$SQLGetParteDoEndereco(pEndereco,3)
		set Andar  = $$SQLGetParteDoEndereco(pEndereco,4)
		set Apto   = $$SQLGetParteDoEndereco(pEndereco,5)
			
		set Desc = "Mod:"_Modulo_" "
		set Desc = Desc_"Rua:"_Rua_" "
		set Desc = Desc_"Predio:"_Predio_" "
		set Desc = Desc_"Andar:"_Andar_" "
		set Desc = Desc_"Apto:"_Apto
	}
	
	quit Desc	
	
SQLGetParteDoGrupo(pGrupo,pPosicao)
	;$$SQLGetParteDoGrupo^VARSQL(pGrupo,pPosicao)
	;Retorna uma parte do grupo de acordo com a posição
	
	set Result = ""
	if (pGrupo '= "") && (pPosicao'=""){
		set Result = $piece(pGrupo,".",pPosicao)
	}
	quit Result	
	
SQLGetGrupoParaOrdenar(pGrupo)
	;$$SQLGetGrupoParaOrdenar^VARSQL(pGrupo)
	;Retorna um grupo próprio para ordenar em SQLs, usando string.
	
	set Result = ""
	
	if (pGrupo '= ""){
		set Nivel1 	= $$FillChar($$SQLGetParteDoGrupo(pGrupo,1),5,"0")
		set Nivel2 	= $$FillChar($$SQLGetParteDoGrupo(pGrupo,2),5,"0")
		set Nivel3 	= $$FillChar($$SQLGetParteDoGrupo(pGrupo,3),5,"0")
		set Nivel4 	= $$FillChar($$SQLGetParteDoGrupo(pGrupo,4),5,"0")
		set Result 	= Nivel1_"."_Nivel2_"."_Nivel3_"."_Nivel4
	}
	
	quit Result
	
SQLGetParteDoEndereco(pEndereco,pPosicao)
	;$$SQLGetParteDoEndereco^VARTCISQL(Endereco,Posicao)
	;Retorna uma parte do endereço de armazenagem
	;de acordo com a posição
	
	set Result = ""
	if (pEndereco '= "") && (pPosicao'=""){
		set Result = $piece(pEndereco,"-",pPosicao)
	}
	quit Result	
	
	
SQLGetEnderecoParaOrdenar(pEndereco)
	;$$SQLGetEnderecoParaOrdenar^VARTCISQL(Endereco)
	;Retorna um Endereço de Armazenagem próprio para ordenar
	;em SQLs, usando string.
	
	set Result = ""
	if (pEndereco '= ""){
		if ($piece(pEndereco,"-",3) '= ""){ //checar se é palete ou endereço com traço
			set Modulo = $$FillChar($$SQLGetParteDoEndereco(pEndereco,1),2,"0")
			set Rua    = $$FillChar($$SQLGetParteDoEndereco(pEndereco,2),2,"0")
			set Predio = $$FillChar($$SQLGetParteDoEndereco(pEndereco,3),2,"0")
			set Andar  = $$FillChar($$SQLGetParteDoEndereco(pEndereco,4),2,"0")
			set Apto   = $$FillChar($$SQLGetParteDoEndereco(pEndereco,5),2,"0")
			set Result = Modulo_"-"_Rua_"-"_Predio_"-"_Andar_"-"_Apto
		} else {
			set Result = pEndereco //se for palete, usa o próprio numero do palete para ordenar
		}
	}
	quit Result	
	
	
FillChar(pstrString,pintLength,pstrFillChar)
	;-------------------------------------------------------------------------------
	; Fills a string with a certain amount of a specific character.
	;
	; Parameters:
	;		pstrString		:	The string to fill
	;		pintLength		:	The number of occurrences to create
	;		pstrFillChar	:	The char(s) to fill with
	;
	; Returns:
	;		The filled string
	;		
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $translate($$RightPad(pstrString,pintLength)," ",pstrFillChar)
 
 
LeftPad(pstrString,pintLength)
	;-------------------------------------------------------------------------------
	; Left pad the string with spaces
	;
	; Parameters:
	;		pstrString	:	The string to pad
	;		pintLength	:	The amount of characters to pad out to
	;
	; Returns:
	; 		The padded string
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $reverse($justify($reverse($extract(pstrString,1,pintLength)),pintLength))
 
 
RightPad(pstrString,pintLength)
	;-------------------------------------------------------------------------------
	; Right pad the string with spaces
	;
	; Parameters:
	;		pstrString	:	The string to pad
	;		pintLength	:	The amount of characters to pad out to
	;
	; Returns:
	; 		The padded string
	;
	; History:
	; 02-Feb-2004		shobby		Creation (Adapted from WRS LedOnlineBanking)
	;-------------------------------------------------------------------------------
 	;
	quit $justify($extract(pstrString,1,pintLength),pintLength)
	
SQLGetMovTypeNumber(Mov)
	if Mov = "" quit ""
	
	set debug = $listget(Mov, 1)
	
	quit debug
	
SQLGetPatientName(pidPaciente)
	if pidPaciente = "" quit ""
	quit $piece($get(^MEDPatient(0,pidPaciente,1)),"~",23)	
	
SQLGetPatientDataNascimento(pidPaciente, exibicao = 0)
	if pidPaciente = "" quit ""
	if (exibicao = 1) {
		set data = $piece($get(^MEDPatient(0,pidPaciente,1)),"~",4)
		quit $select(data="":"",1:$zdate(data,4,,4))
	}else{
		quit $piece($get(^MEDPatient(0,pidPaciente,1)),"~",4)	
	}
SQLGetPatientRoom(pidPatient)
	if ($length(pidPatient) = 0) quit ""
	$$$VAR
	set found=0
	set idAdm = $order(^MEDAdmissions(YM,100,pidPatient,""),-1)
		
	while ((idAdm'="") && (found=0)) {

		set objAdm 		= $get(^MEDAdmission(0,idAdm,1))
		set idAlta 		= $$$MEDAdmissionDateDischarged(objAdm)
		set Room 		= $$$MEDAdmissionRoom(objAdm)

		if (idAlta = "") {
			set found=1
		}
		set idAdm = $ord]]><![CDATA[er(^MEDAdmissions(YM,100,pidPatient,idAdm),-1)
	}
	quit:(found=0) ""
	quit Room

SQLGetPatientBed(pidPatient)
	if ($length(pidPatient) = 0) quit ""
	$$$VAR
	set found=0
	set idAdm = $order(^MEDAdmissions(YM,100,pidPatient,""),-1)
		
	while ((idAdm'="") && (found=0)) {

		set objAdm 		= $get(^MEDAdmission(0,idAdm,1))
		set idAlta 		= $$$MEDAdmissionDateDischarged(objAdm)
		set Bed			= $$$MEDAdmissionBed(objAdm)

		if (idAlta = "") {
			set found=1
		}
		set idAdm = $order(^MEDAdmissions(YM,100,pidPatient,idAdm),-1)
	}
	quit:(found=0) ""
	quit Bed
	
SQLGetPatientLocation(pidPatient)
	if ($length(pidPatient) = 0) quit ""
	$$$VAR
	set found=0
	set idAdm = $order(^MEDAdmissions(YM,100,pidPatient,""),-1)
		
	while ((idAdm'="") && (found=0)) {

		set objAdm 		= $get(^MEDAdmission(0,idAdm,1))
		set idAlta 		= $$$MEDAdmissionDateDischarged(objAdm)
		set idUnidade 	= $$$MEDAdmissionLocation(objAdm)

		if (idAlta = "") {
			set found=1
		}
		set idAdm = $order(^MEDAdmissions(YM,100,pidPatient,idAdm),-1)
	}
	quit:(found=0) ""
	quit idUnidade
	
SQLGetPatientDateAdmitted(pidPatient)
	if ($length(pidPatient) = 0) quit ""
	set idMEDAdmission = $order(^MEDAdmissions(0,100,pidPatient,""),-1)
	if ($length(idMEDAdmission) = 0) quit ""
	set objMEDAdmission = ^MEDAdmission(0,idMEDAdmission,1)
	set DateAdmitted = $$$MEDAdmissionDateAdmitted(objMEDAdmission)
	
	quit DateAdmitted
	
SQLGetPatientFIA(pidPatient)
	if ($length(pidPatient) = 0) quit ""
	set idMEDAdmission = $order(^MEDAdmissions(0,100,pidPatient,""),-1)
	if ($length(idMEDAdmission) = 0) quit ""
	set objMEDAdmission = ^MEDAdmission(0,idMEDAdmission,1)
	set Fia = $$$MEDAdmissionFREE4(objMEDAdmission)
	
	quit Fia

SQLGetPatientBAA(pidPatient)
	if ($length(pidPatient) = 0) quit ""
	set idMEDAdmission = $order(^MEDAdmissions(0,100,pidPatient,""),-1)
	if ($length(idMEDAdmission) = 0) quit ""
	set objMEDAdmission = ^MEDAdmission(0,idMEDAdmission,1)
	set Baa = $$$MEDAdmissionFREE5(objMEDAdmission)
	
	quit Baa

SQLGetPatientAge(strDOB)
	set intAge = ($horolog - strDOB)\365
	if (intAge = 1) {
		set intAge = intAge_" ano"
	}else{
		set intAge = intAge_" anos"
	}
	quit intAge

SQLGetNomeEntidadeDoacao(pidEntidadeDoacao)
	if pidEntidadeDoacao = "" quit ""
	quit $piece($get(^VARDoacaoEntidade(0,pidEntidadeDoacao,1)),"~",1)	
	
SQLGetConvenioPaciente(pidConvenio)
	IF pidConvenio = "" QUIT ""
	QUIT $PIECE($GET(^MEDConvenio(0,pidConvenio,1)),"~",1)
	
SQLGetAutorizacaoPaciente(pidPatient,pidIssue)
	quit:((pidIssue = "") && (pidPatient = ""))
	set Nome = ""
	set Autorizacao = $p($g(^INIssue(0,pidIssue,1)),"~",12)
		if (Autorizacao '= "") {
			set Nome = $p($g(^VARPacienteAutorizacao(0,pidPatient,Autorizacao,1)),"~",1)
			}
	quit Nome

SQLGetNomeEntidade(pidEntidade)
	if pidEntidade = "" quit ""
	quit $piece($get(^VARDoacaoEntidade(0,pidEntidade,1)),"~",1)

SQLGetCustoMedioProd(pCodigoProduto)
	quit:($get(pCodigoProduto) = "") ""
	set record = $get(^INART(0,pCodigoProduto,1))
	
	quit $$$INARTAverageCost(record)
	
SQLGetAverageUsageLog(pDias,pField)
	;	Função criada para gerar a média de um campo especifico da tabela VARLicenseUsageLog em um determinado
	;	número de dias. Ex: Ultimos 30 Dias
	;		
	;
	;
	; pFields:
	;
	; 1 - 	CacheLicensesCurrentlyCon
	; 2 -	CacheLicensesCurrentlyAva
	; 3 -	MaximumCacheLicensesConsu 	
	; 4 - 	MinimumCacheLicensesAvail
	; 5 - 	AuthorizedCacheLicenses
	; 6 -	AlphalincLicensesCurrentl
	; 7 -	CacheCurrentCSPSessionsin
	; 8 -	CacheCurrentCSPSessionsac
	;
	;Histórico
	;
	;2010-05-11	Sósthenes Created	
	$$$VAR
	
	new Dia, Hora, Soma, Periodo, result
	
	if (pField="") || (pDias="") quit
	
	set result=$CASE(pField,"CacheLicensesCurrentlyCon":1,"CacheLicensesCurrentlyAva":2,"MaximumCacheLicensesConsu":3,
	"MinimumCacheLicensesAvail":4,"AuthorizedCacheLicenses":5,"AlphalincLicensesCurrentl":6,"CacheCurrentCSPSessionsin":7,
	"CacheCurrentCSPSessionsac":8,:"Error")
	
	set Soma = 0
	set DataDiaAtual = $p(+$h,",",1)
	set Periodo = (DataDiaAtual - pDias)
	set Dia = DataDiaAtual
	
	for {
		set Dia = $order(^VARLicenseUsageLog(YM,Dia), -1)
		if (Dia = "") || (Dia = Periodo) quit  
		set Hora=""
		for {
			set Hora = $order(^VARLicenseUsageLog(YM,Dia,Hora))
			quit:Hora="" 
				set Valor = $piece($get(^VARLicenseUsageLog(YM,Dia,Hora,1)),Y,result)
				set Soma = Soma + Valor
		}
	}
	quit Soma / (pDias*1000) //Usa o valor total da soma dos valores do campo dividido pelo número total de registros diarios
	
SQLGetUserActiveTime(idSession)
	
	new dteLogin, tmeLogin, tmeActive
		
		if ($data(^CacheTempSessionStart(+$h,idSession))) {  //Login from today
				set dteLogin = +$listget(^CacheTempSessionStart(+$h,idSession),1)
				set tmeLogin = $piece($listget(^CacheTempSessionStart(+$h,idSession),1),",",2)
		} 
		elseif ($data(^CacheTempSessionStart((+$h-1),idSession))) {  //Login from yesterday
				set dteLogin = +$listget(^CacheTempSessionStart((+$h-1),idSession),1)
				set tmeLogin = $piece($listget(^CacheTempSessionStart((+$h-1),idSession),1),",",2)
		}
		if (dteLogin = +$h) {
				set tmeActive = $piece($h,",",2)-tmeLogin
		}
		elseif (dteLogin = (+$h-1)) {
				set tmeActive = $piece($h,",",2) + (86400-tmeLogin)
			}
			
	quit $$^WWWTIME(tmeActive)
	
SQLGetDescPerfilUsuario(pidPerfil)
    if pidPerfil = "" quit ""
	quit $piece($get(^WWW101(0,"BERECHTIGUNG","PT",pidPerfil,1)),"~",1)		

SQLGetFormatedTime(time) // Formato de hora em hh:mm
    quit:($get(time) = "") ""
    quit $ztime(time, 2)
    
SQLGetFormatedTime2(time)
	quit:($get(time) = "") ""
	quit $$^WWWTIME(time)
	
SQLGetLocalEntrega(local)
	if local="" quit ""
	set retorno=""
	if $get(^WWW0121(0,0,local,1))'="" set retorno=$p($get(^WWW0121(0,0,local,1)),"~",4)
	quit retorno
	
SQLGetCondicaoPagamento(cod)
	new desc, obj
	set desc=""
	
	if ($get(cod)'="") {
		set obj=$get(^INKOND(0,cod,1))
		if (obj'="") {
			set desc=$piece(obj,"~",1)
		}
	}
	
	quit desc	
	
SQLGetNaturezaEntrada(CodNE)
	if CodNE="-1" set CodNE=1
	set Desc = ""
	if ($get(CodNE) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^INPARA(0,"RECTYPE","PT",CodNE,1)),"~",1)						
	}
	quit Desc
	
SQLGetPedidoQtyAtendida(pidPedido, pidPedidoLinha)
	if ((pidPedido) || (pidPedidoLinha)) ="" quit ""
	$$$VAR
	quit $$GetQuantidadeAtendida^VARPedidoCompraLinha(pidPedido, pidPedidoLinha)
	
	
SQLGetNivelAtencaoID(pidItem)
	// Código do Nível de Atenção
	quit:(pidItem = "") ""
	quit $piece($get(^INART(0,pidItem,1)),"~",282)
	
SQLGetNivelAtencaoDesc(idItem)
	// Nível de Atenção detalhada por descrição
	if idItem="" quit ""
 
	new nivelAtencao, descNivelAtencao, cnt, separador
 
	set nivelAtencao = $$SQLGetNivelAtencaoID(idItem)	
	if nivelAtencao = "" quit ""

	set descNivelAtencao = ""
	
	for cnt = 1:1:$length(nivelAtencao,";") {
		set separador = ""
		if cnt > 1 set separador = " / "
		continue:($piece(nivelAtencao,";",cnt) = "")
		set descNivelAtencao = descNivelAtencao_separador_$piece($get(^VARPARA(0,"NIVELDEATENCAO","PT",$piece(nivelAtencao,";",cnt),1)),"~",1)		
	}
	
	quit descNivelAtencao	

GetNomeTransportadora(idTransp)
	if idTransp = "" quit ""
	
	set nomeTransp = $piece($get(^VARTransportadora(0,idTransp,1)),"~",2)
	set nomeCodTransp = idTransp_" - "_nomeTransp
	
	quit nomeCodTransp
						
						
GetNomePrograma(idProgram)
	if idProgram = "" quit ""
	
	set nomePrograma = $piece($get(^INPROJECT(0,idProgram,1)),"~",1)
	
	quit nomePrograma
			
SQLGetDescTipoVarRec(idTipo)
	
	quit:(idTipo="") ""
	
	set descTipo = $$SQLGetUserParamDesc("VARRECTYPE~"_idTipo)

	quit descTipo
	
SQLGetDescTipoRec(idTipo)
	quit:(idTipo="") ""
	
	set descTipo = $$SQLGetUserParamDesc("RECTYPE~"_idTipo)

	quit descTipo
	
SQLGetUserParamDescVAR(param)
	// Obtém a descrição de um User Parameter VAR (VARPARA).
	// Esta função é usada em queries SQL.
	// O parâmetro da função deve conter o nome do parâmetro e
	// seu código, separado por "~", por exemplo:
	// "VARSESELEMENTODEDESPESA~1"
	;
	; History
	; 03-Oct-2013	shobby	HEVA-1133: Rewrote.  Don't fail when Nome/Cod missing.
	new TextoParam,NomeParam,CodParam
	
	set TextoParam = ""
	set param=$get(param)
	set NomeParam = $piece(param,"~",1)
	set CodParam = $piece(param,"~",2)
	if (NomeParam'="")&&(CodParam'="") {
		set TextoParam = $piece($get(^VARPARA(0,NomeParam,"PT",CodParam,1)),"~",1)
	}
	quit TextoParam

	
SQLGetINARTKOST(pItem)
	quit:(pItem="") ""
	
	$$$VAR 
	
	quit $$GetCost^INARTKOST(pItem)

SQLGetINItemCost(pItem)
	quit:(pItem="") ""
	
	$$$VAR
	
	quit $$GetCost^INItemCost(pItem)


SQLGetCustoMedioNewDtHr(idItem,idLocal="",vrDtHr="")

	do ^WWWVAR
	set fltCusto = $$GetCostAtTimeForLocn^INAvgCost(idItem,idLocal,,vrDtHr)
	
	quit fltCusto

SQLGetFormatDate6(date)
	set day = $piece($$SQLGetDataFormatada(date),"/",1)
	set SPRACHE = "PT"
	set month = $$GetMonthString^COMUtilDate(date)
	set year  = ##class(%SYSTEM.SQL).YEAR($zdate(date,3))
	quit:($get(date)="") ""
	quit day_" de "_month_" de "_year
	
SQLGetCodigoFornecedor(pidCompra)
	quit:(pidCompra="") ""
    $$$VAR
	quit $$getFornecedorCompra^VARCompra(pidCompra)
	
SQLGetDataEntregaEmpenho(pidCompra)
	quit:(pidCompra="") ""
    $$$VAR
	quit $$getDataEntregaEmpenho^VARCompra(pidCompra)
	
SQLGetDataEntregaNoOrdemCompra(pidNoOrdemCompra,pidEntrega)
 quit:((pidNoOrdemCompra) || (pidEntrega))="" ""

    $$$VAR
    
    set objEntrega    = $get(^VARCompraEntrega(YM,pidNoOrdemCompra,pidEntrega,1))
 set prazoEntrega  = $piece(objEntrega,Y,1)
 set dtEntregaBase = $$SQLGetDataEntregaEmpenho^VARSQL(pidNoOrdemCompra) 
 
 if (dtEntregaBase = "") quit ""
 
    quit ((+prazoEntrega) + dtEntregaBase)
    
SQLGetCustoMedio(idItem,pidLocal="")
	quit:(idItem="") ""
    $$$VAR
	quit $$GetCost^INItemCost(idItem,pidLocal)
	
SQLGetUnidadedoLocal(pidLocal)
	//Retorna a unidade do local	
	quit:(pidLocal = "") ""
	$$$VAR
	quit $$GetUnidadedoLocal^VARWWW0121(pidLocal)
	
SQLGetLocaisdaUnidade(pidUnidade)
	quit:(pidUnidade = "") ""
	$$$VAR
	set resultado = ""
	set strLocaisEstoque = $$GetLocaisdeEstoqueUnidade^VARWWW0121(pidUnidade)
			
	for cnt = 1:1:$length(strLocaisEstoque,";") {
  		set idLocal = $piece(strLocaisEstoque,";",cnt)	   	
  		quit:(idLocal = "")
  			   		
  		if (cnt > 1) set resultado = resultado_", "
  		set resultado= resultado_$$SQLGetLocationName^VARTRKSQL(idLocal)
	}
	
	quit resultado
	
SQLGetCMML(pidLocal,pidItem)
	quit:(pidLocal="") ""
    $$$VAR
	quit $$GetCMML^VARAlertaLocalLinha(pidLocal,pidItem)
	
GetBrandName(pBrandKey)
	new BrandName
	set BrandName = ""
	if pBrandKey '= "" {
		set BrandName = $piece($get(^INBrand(0,pBrandKey,1)),"~",1)
	}

	quit:(BrandName = "") pBrandKey	
	quit BrandName
	
SQLGetEnderecoPalete(pidLocation,pidEndereco)

    if pidLocation  = "" quit ""
    if pidEndereco  = "" quit ""
	quit $piece($get(^INLP(0,pidLocation,pidEndereco,1)),"~",22)
	
	
SQLGetDescTipoDoacao(idTipo)
	quit:(idTipo="") ""
	
	set descTipo = $$SQLGetUserParamDescVAR("TIPOSAIDA~"_idTipo)

	quit descTipo
	
SQLGetFiltroGrupo(pfiltroGrupo,pItem)
	if (pfiltroGrupo="") quit 1
	
	new pidGroup,blnFiltro
	set blnFiltro = $$$NO
	set pidGroup = $piece($get(^INART(0,pItem,1)),"~",30)
	
	while (pidGroup'="") {
		if (pidGroup = pfiltroGrupo){
			set blnFiltro = $$$YES
			quit
		}
		set pidGroup = $$$INItemGroupParentGroup($get(^INItemGroup(0,pidGroup,1)))
	}

	quit blnFiltro
	
SQLGetDescUnidadeMedida(pidItem)
	quit:(pidItem = "") ""	
	
	new idUnit, descUnit		
	set idUnit 	 = $piece($get(^INART(0,pidItem,1)),"~",40)
	set descUnit = $$SQLGetDescCompletaUnit(idUnit)
 	
 	// Mostrar apenas os três primeiros dígitos da Unidade de Medida.	
	quit descUnit

GetTemperaturaItem(idItem)
	new objINART
	if ($get(idItem)="") quit
	set objINART = ^INART(0,idItem,1)
	quit $$$INARTFREE9(objINART)

SQLGetTransfTransporte(pidTransporte)
	quit:(pidTransporte = "") ""	
	
	new descTransporte		
	set descTransporte 	 = $piece($get(^INDRPUMLKW(0,pidTransporte,1)),"~",1)
		
	quit descTransporte
	
SQLGetTransfStatus(pidStatus)
	quit:(pidStatus = "") ""	
	
	new descStatus		
	set objWWW101 = $get(^WWW101(0,"INTFRSTATUS","PT",pidStatus,1))
	set descStatus = $$$WWW101Text(objWWW101)
		
	quit descStatus
	
SQLGetStatusTransf(pidTransf)
	quit:(pidTransf="") ""
	
	if $data(^INTFR(0,pidTransf,1)) {
		quit $$$INTFRStatus(^INTFR(0,pidTransf,1))
	}
	
	quit ""
	
SQLGetCNPJFornecedor(pidFornecedor)
	if pidFornecedor = "" quit ""
	quit $piece($get(^INLIEF(0,pidFornecedor,1)),"~",201)
	
SQLGetValorTotalAta(pidAta)
	quit:(pidAta="") ""
    $$$VAR
	quit "R$ "_$$GetValorTotalAta^VARAta(pidAta)_",00"
	
SQLGetProviderName(pidProvider)
	if pidProvider = "" quit ""
	quit $piece($get(^MEDProvider(0,pidProvider,1)),"~",1)
	
SQLGetCID(pIDCID)
    if pIDCID = "" quit ""
    
    set descCid = $piece($get(^MEDICD(0,pIDCID,1)),"~",1)
	quit pIDCID_" - "_descCid	
	
SQLGetTextoSemAcento(pstrTexto)

	new i,strTextoLimpo,strAcentos,strSemAcentos,strLetraAcento,strLetraSAcento
	
	set strTextoLimpo	= $zstrip(pstrTexto,"<>w")
    set strAcentos 		= "ÁÇÍÓÚÉÄÏÖÜËÀÌÒÙÈÃÕÂÎÔÛÊáçíóúéäïöüëàìòùèãõâîôûê"
    set strSemAcentos   = "ACIOUEAIOUEAIOUEAOAIOUEacioueaioueaioueaoaioue"
    
    for i=1:1:$length(strAcentos) {
	    set strLetraAcento  = $extract(strAcentos,i)
	    set strLetraSAcento = $extract(strSemAcentos,i)
	    if $find(pstrTexto,strLetraAcento) {
		    set strTextoLimpo = $Replace(strTextoLimpo,strLetraAcento,strLetraSAcento)
	    }
    }
    
    quit strTextoLimpo
    
SQLGetContaContabil(pProduto)
	quit:(pProduto = "")
	set objProduto = ^INART(0,pProduto,1)
	set CodContaContabil = $$$INARTFREE3(objProduto)
	quit CodContaContabil

SQLGetDescContaContabil(pCodigoContabil)
	quit:(pCodigoContabil = "") ""
	set descContaContabil = $piece($get(^INPARA(0,"VARTCICONTACONTABIL","PT",pCodigoContabil,1)),"~",1)
	quit descContaContabil

SQLGetCodeDescContaContabil(pProduto)
	new strCodeContaContabil, strCodeDescContaContabil 
	
	quit:(pProduto = "")
	
	set (strCodeContaContabil, strCodeDescContaContabil) = ""
	
	set strCodeContaContabil = $$SQLGetContaContabil(pProduto)
	
	if (strCodeContaContabil '= "") {
		set strCodeDescContaContabil = strCodeContaContabil_" - "_$$SQLGetDescContaContabil(strCodeContaContabil)
	}
		
	quit strCodeDescContaContabil 

SQLGetEnderecoArmaz(pidBundle,&sc)
	set strStorage=""
	
	&sql(
		select Storage 
		into :strStorage
		from alSOH.dBundleStock
		where (Bundle = :pidBundle)
	)
	
	if 'SQLCODE {
		set sc = $$$OK
	} else {
		set sc = $system.Status.Error(5001,"Invalid Bundle ID")
	
	}
	quit $piece(strStorage,"||",2)
	
SQLGetPrazoValidadeAta(pValidade)
	set prazoValidade = ""
	set nDiasaVencer = pValidade - $piece($horolog,",",1)
	
	if (nDiasaVencer >= 0){
		set prazoValidade = $$^WWWTR(0,12,nDiasaVencer)_" dia(s)"
	}
	else {
		set prazoValidade = "Vencido há "_$$^WWWTR(0,12,nDiasaVencer*-1)_" dia(s)"
	}
	quit prazoValidade

GetFrequency(idFrequency)
	if ($length(idFrequency) = 0) quit ""
	set objFrequency = $get(^MEDFrequency(0,idFrequency,1))
	quit $$$MEDFrequencyFrequency(objFrequency)

SQLGetCorStatusEntrega(pDtEntrega,pDtAgendada,pidCompra,pNoEntrega1,pQuantidade,pItem,idEntregaLinha)
	set idCompra  = pidCompra
	set dtEntrega = pDtEntrega
	set stCompra  = $$GetStatusCompra^VARCompraEntregaAgendamento(idCompra)
	set NoEntrega1 = pNoEntrega1
	;set Quantidade = pQuantidade
	set QuantRecebida   = $$SQLGetQuantidadeRecebidaEntrega^VARSQL(idCompra,pNoEntrega1,idEntregaLinha)
	set Quantidade = $$SQLGetQuantidadeEntrega^VARSQL(idCompra,NoEntrega1,pItem)
	
	if ('QuantRecebida){
		set QuantRecebida = 0
	}
	
	if (pDtAgendada){ ; verifica agendadas
		if (QuantRecebida = Quantidade) {  ; entregue agendada
			set status = "ENTREGUE" 
			quit status
		} 
		elseif ($zdateh(pDtAgendada,4) >= $piece($horolog,$$$COMMA,1)){
			set status = "AGENDADA"
			quit status
		}
		else {
			set status = "ATRASADA"	
			quit status
		}
	}
	if ('pDtAgendada){ ; verifica previstas
		if (QuantRecebida = Quantidade){	; entregue prevista				
			set status = "ENTREGUE" 
			quit status
		}
		elseif ($zdateh(pDtEntrega,4) >= $piece($horolog,$$$COMMA,1)){
			set status = "PREVISTA"
			quit status
		}
		else {
			set status = "ATRASADA"
			quit status
		}
	}
	
GetVia(idVia)
	if ($length(idVia) = 0) quit ""
	set objVIA = $get(^INPARA(0,"MEDROUTEADMIN","PT",idVia,1))
	
	quit $$$INPARAText(objVIA)

GetNomeMedico(idMEDProvider)
	if ($length(idMEDProvider) = 0) quit ""
	set objMEDProvider = ^MEDProvider(0,idMEDProvider,1)
	
	quit $$$MEDProviderName(objMEDProvider)

GetEnderecoEstoqueDisponivel(idWWW0121)
	if ($length(i]]><![CDATA[dWWW0121) = 0) quit ""
	set objWW]]><![CDATA[W0121 = ^WWW0121(0,0,idWWW0121,1)
	
	quit $$$WWW0121OnHandStorage(objWWW0121)

GetBundle(idItem,Lote,idLocal,idEndereco)
	new Bundle
	if (($length(idItem) = 0)||($length(Lote) = 0)||($length(idLocal) = 0)||($length(idEndereco) = 0)) quit ""
	
	set Bundle = ""
	
	&sql(
		SELECT	Bundle 
		INTO	:Bundle
		FROM alSOH.dBundleStock
		WHERE Item = :idItem
		AND Bundle->LotNumber = :Lote
		AND Storage->Location = :idLocal
		AND Storage->Code= :idEndereco
	)
	
	if (SQLCODE '= 0) {
		quit ""
	}

	quit Bundle

GetStatusPrescriptionLine(idStatus)
	set objVARPARA = $get(^VARPARA(0,"VARSTATUSPRESCRISCAO","PT",+idStatus,1))
	
	quit $$$VARPARAText(objVARPARA)
	
GetPatientName(idMEDPatient)
	if ($length(idMEDPatient) = 0) quit ""
	set objMEDPatient = $get(^MEDPatient(0,idMEDPatient,1))
	
	quit $$$MEDPatientName(objMEDPatient)

SQLGetFormatDate7(date)
	; ----------------------
	; DD/MM/AAAA mesmo se for antes de 2000
	; ----------------------
	quit:($get(date)="") ""
	quit $zdate(date,4,,4)

SQLGetFormatDate8(date)	//Formato de Data 28/02/2012 12:30 (dd/mm/aaaa hh:mm)
	quit:($get(date)="") ""
	quit $ZDATETIME(date,4,2)

GetStatusDoseAdministracao(idStatus)
	if ($length(idStatus) = 0) quit ""
	quit $piece(^VARPARA(0,"VARSTATUSDOSEADMINISTRACAO","PT",idStatus,1),"~",1)

SQLGetUnitCostSummary(pReceiptNumber,pItem)
	set unitcost = ""
	&sql(
		select UnitCost
		into :UnitCost
		from SQLUser.INRECSummary
		where (ReceiptNumber = :pReceiptNumber and Item = :pItem)
	)
	
	if 'SQLCODE {
		set unitcost = UnitCost
	} 
	
	quit unitcost
	
SQLGetDataEntregaFinal(NoOrdemCompra, DataDeEntrega, NoAgendamento, NoEntrega1)
	quit:NoAgendamento="" DataDeEntrega
	
	$$$VAR
	
	new dataEntregaFinal,objAgend
	
	set objAgend = $get(^VARCompraEntregaAgendamento(YM, NoOrdemCompra,NoEntrega1, NoAgendamento, 1))			
	set dataEntregaFinal = $$$VARCompraEntregaAgendamentoData(objAgend)
	
	quit dataEntregaFinal
	
SQLGetQuantidadeEntrega(pNoOrdemCompra, NoEntrega1, pCodItem)
	set quantidade = ""
	&sql(
		select Compralinha.Quantidade 
		into :Quantidade
		from SQLUser.VARCompraEntrega as Compra
		inner join SQLUser.VARCompraEntregaLinha AS CompraLinha
		ON UPPER(CompraLinha.Company) = UPPER(Compra.Company) 
		AND UPPER(CompraLinha.NoOrdemCompra) = UPPER(Compra.NoOrdemCompra) 
		AND UPPER(CompraLinha.NoEntrega) = UPPER(Compra.NoEntrega1)
		where (Compra.NoOrdemCompra = :pNoOrdemCompra and NoEntrega1 = :NoEntrega1 and CompraLinha.Produto = :pCodItem)
	)
	
	if 'SQLCODE {
		set quantidade = Quantidade
	} 
	
	quit quantidade
	
SQLGetQuantidadeRecebidaEntrega(pidCompra,pidCompraLinha,pidEntrega,pidEntregaLinha)
	set quantRecebida = ""
	
	$$$VAR
	
	new idEntrega, objEntrega, prazoEntrega, idEntregaLinha, idItem, qtdeEntrega, qtdRecebida, qtdRecebidaTotal, blFlag
	
	set blFlag = $$$NO
		$$$Order3(^VARCompraEntregaLinha,YM,pidCompra,idEntrega)
					
			set objEntrega   = $get(^VARCompraEntrega(YM,pidCompra,idEntrega,1))
			set prazoEntrega = $$$VARCompraEntregaPrazodeEntrega(objEntrega)
				
			if ('blFlag){
				set blFlag = $$$YES
			
				$$$Order4(^VARCompraEntregaLinha,YM,pidCompra,idEntrega,idEntregaLinha)
					set qtdRecebidaTotal(pidCompra,idEntregaLinha) = +$$GetQtyReceived^INAUFP(pidCompra_$$$COMMA_pidCompraLinha)
				$$$End
			}
				
			$$$Order4(^VARCompraEntregaLinha,YM,pidCompra,idEntrega,idEntregaLinha)
				set objEntregaLinha = $get(^VARCompraEntregaLinha(YM,pidCompra,idEntrega,idEntregaLinha,1))
				
				set idItem 		 = $$$VARCompraEntregaLinhaProduto(objEntregaLinha)
				set qtdeEntrega  = $$$VARCompraEntregaLinhaQuantidade(objEntregaLinha) 
					
				if (qtdRecebidaTotal(pidCompra,idEntregaLinha) - qtdeEntrega >= 0) {
					set qtdRecebidaTotal(pidCompra,idEntregaLinha) = qtdRecebidaTotal(pidCompra,idEntregaLinha) - qtdeEntrega
					set qtdRecebida = qtdeEntrega
				}
				elseif (qtdRecebidaTotal(pidCompra,idEntregaLinha)<qtdeEntrega) && (qtdRecebidaTotal(pidCompra,idEntregaLinha)>=0) {
					set qtdRecebida = qtdRecebidaTotal(pidCompra,idEntregaLinha)
					set qtdRecebidaTotal(pidCompra,idEntregaLinha) = qtdRecebidaTotal(pidCompra,idEntregaLinha) - qtdeEntrega
				}
				else{
					set qtdRecebida = 0
				}
					
				if ((pidEntrega = idEntrega) && (pidEntregaLinha = idEntregaLinha)){
					set quantRecebida = qtdRecebida
				}
					
			$$$End
		$$$End
		set blFlag = $$$NO
		
	quit quantRecebida
	
SQLGetReceiptNumber(pNoOrdemCompra, idNoEntrega1)
	set NoRecebimento = ""
	&sql(
		select ReceiptNumber
		into :ReceiptNumber
		from SQLUser.INRECSummary
		where (PurchaseOrder = :pNoOrdemCompra and PurchaseOrderLine = :idNoEntrega1 and PurchaseOrder is not null)
	)
	
	if 'SQLCODE {
		set NoRecebimento = ReceiptNumber
	} 
	
	quit NoRecebimento
	
SQLGetDtRecebimento(pNoOrdemCompra,pItem)
	set dtRecebimento = ""
	&sql(
		select INREC.CreatedDate
		into :CreatedDate
		from SQLUser.INREC
		left join SQLUser.INRECLine
		on INREC.Company = INRECLine.Company and INREC.ReceiptNumber = INRECLine.ReceiptNumber
		where (INREC.Status = '1' AND INREC.FREE10 = :pNoOrdemCompra AND INRECLine.Item = :pItem)
	)
	
	if 'SQLCODE {
		set dtRecebimento = $piece(CreatedDate,",",1)
	} 
	
	quit dtRecebimento
	
SQLGetItemEntrega(pNoOrdemCompra, pNoEntrega1)
	set item = ""
	&sql(
		select Compralinha.Produto 
		into :Produto
		from SQLUser.VARCompraEntregaLinha as Compralinha
		where 
		NoEntrega = :pNoEntrega1
		and CAST(Compralinha.NoOrdemCompra as varchar) = :pNoOrdemCompra
	)
	if 'SQLCODE {
		set item = Produto
	} 
	
	quit item
	
SQLGetUnitINARTPACK()
	set unidade = ""
	&sql(
		select DISTINCT(OuterName) 
		into :unit
		from SQLUser.INARTPACK
	)
	
	if 'SQLCODE {
		set unidade = unit
	}
	quit
	
SQLGetCountUnitINARTPACK()
	set quantidade = ""
	&sql(
		select count(DISTINCT(OuterName)) 
		into :count
		from SQLUser.INARTPACK
	)
	
	if 'SQLCODE {
		set quantidade = count
	}
	quit quantidade
	
SQLGetCompanyName()
	set nome = ""
	&sql(
		select DISTINCT(CompanyName) 
		into :CompanyName
		from SQLUser.WWW012
	)
	
	if 'SQLCODE {
		set nome = CompanyName
	}
	quit nome
	
	
GetClassificacaoOcorrencia(idClassificacao)
	if ($length(idClassificacao) = 0) quit ""
	set objClassificacao = $get(^VARPARA(0,"CLASSIFICACAODESVIOQUALIDADE","PT",idClassificacao,1))
	
	quit $$$INPARAText(objClassificacao)
	
SQLGetCondicao(idCondicao)
	if idCondicao = "" quit ""
	
	set descCondicao = $piece($get(^INKOND(0,idCondicao,1)),"~",1)
	
	quit descCondicao	
	
SQLGetPhysicalStorage(pidStorage,pidLocation)
	new strReturn,objStorage
	set strReturn = pidStorage

	$$$VAR
	
	if ((pidStorage'="")&&(pidLocation'="")) {
		set objStorage=$get(^INLP(YM,pidLocation,pidStorage,1))
		if $$$INLPPhysical(objStorage)'="" set strReturn = $$SQLGetEnderecoParaOrdenar($$$INLPPhysical(objStorage))
	}
	
	quit strReturn

GetCentroCusto(idWWW0121)
	if ($length(idWWW0121) = 0) quit ""
	set objWWW0121 = $get(^WWW0121(0,0,idWWW0121,1))
	
	quit $$$WWW0121FREE3(objWWW0121)

GetValorPositivo(valor,pintMovementType="")
	; History
	; 14-Jan-2014	shobby	HEVA-1341: Reverse sign for types 22 and 37 (bring in line with RodaCMMPeriodoLocal^VARCMM)
	if (+valor < 0) set valor= -1 * +valor
	if (pintMovementType=22)||(pintMovementType=37) {
		if (+valor > 0) set valor= -1 * valor
	}
	quit +valor

FormatCurrencySemPonto(amount)
	quit $replace($$FormatCurrency(amount),".","")

SQLGetStrHorariosAdmMedicamento(pFrequencia,pHoraInicio)
	if (pFrequencia = "" || pHoraInicio = ""){
		quit ""
	}
	
	set strHorario = $piece($ztime(pHoraInicio),":",1)
	set Horario    = $piece($ztime(pHoraInicio),":",1)
	set HorarioFim = $piece($ztime(pHoraInicio),":",1)
	
	set frequencyConversion = $$$MEDFrequencyConversion(^MEDFrequency(0,pFrequencia,1)) //conversão para vezes ao dia
	set Frequencia = 24 / frequencyConversion //recupera qual a frequência em horas
	
	set dia = ""
	set fim = ""
	
	while (fim '= 1) {
		if (Frequencia >= 24){
			quit
		}
		
		set Horario = Horario + Frequencia
		
		if ((Horario >= HorarioFim) && (dia = 1)){
			set fim = 1
			quit
		}
		
		if (Horario >= 24){
			set Horario = Horario - 24
			set dia = 1
		}
		
		if (Horario < 10){
			set Horario = "0"_Horario
		}
		
		set strHorario = strHorario_" "_Horario
	}
	
	quit strHorario
	
SQLGetNomeMedico(idMEDProvider)
	if ($length(idMEDProvider) = 0) quit ""
	set objMEDProvider = ^MEDProvider(0,idMEDProvider,1)
	
	quit $$$MEDProviderName(objMEDProvider)
	
SQLGetCRMMedico(idMEDProvider)
	if ($length(idMEDProvider) = 0) quit ""
	set objMEDProvider = ^MEDProvider(0,idMEDProvider,1)
	
	quit $$$MEDProviderLicenseNumber(objMEDProvider)
	
SQLGetFornecedorRecebimento(idRecebimento)
	quit:(idRecebimento = "") ""
	set objRecebimento = $get(^INREC(0,idRecebimento,1))
	
	quit $$$INRECSupplier(objRecebimento)
	
SQLGetEmpenhoRecebimento(idRecebimento)
	quit:(idRecebimento = "") ""
	set objRecebimento = $get(^INREC(0,idRecebimento,1))
	
	quit $$$INRECFREE8(objRecebimento)
	
SQLGetNFRecebimento(idRecebimento)
	quit:(idRecebimento = "") ""
	set objRecebimento = $get(^INREC(0,idRecebimento,1))
	
	quit $$$INRECInvoiceNumber(objRecebimento)
	
SQLGetBrand(pBundle)
	set Marca = ""
	&sql(
		select Distinct Bundle->Brand
		into :Brand
		from alSOH.dBundleStock
		where Bundle = :pBundle
	)
	
	if 'SQLCODE {
		set Marca = Brand
	} 
	
	quit Marca
	
SQLGetTipoDescontoNF(LineType)
	quit:(LineType = "") ""	
	
	new descStatus		
	set ObjINSUPBuyingDiscount = $get(^INSUPBuyingDiscount(0,LineType,1))
	set descStatus = $$$INSUPBuyingDiscountDescription(ObjINSUPBuyingDiscount)
		
	quit descStatus
	
SQLGetUltimoDiaMes(pMes,pAno)
	
	set dtInicio = $zdateh("28/"_pMes_"/"_pAno,4)

	for {
		if (+$zdate(dtInicio+1,2) < +$zdate(dtInicio,2)) quit
		set dtInicio = $increment(dtInicio)	
	}
	
	quit dtInicio
	
SQLGetPrimeiroDiaMes(pMes,pAno)

	set dtInicio = $zdateh("01/"_pMes_"/"_pAno,4)
	
	quit dtInicio

GetDescPrograma(idProgram)
	if idProgram = "" quit ""
	
	set nomePrograma = $piece($get(^INPROJECT(0,idProgram,1)),"~",1)
	
	quit nomePrograma

SQLGetProgramaLinha(idCompra,idLinha)
	quit:(idCompra = "") ""
	set objINAUFP = $get(^INAUFP(0,idCompra,idLinha,1))
	quit $$$INAUFPFREE29(objINAUFP)
	
SQLGetCustoMedioNaData(idItem,pidLocal,pidData)
	quit:(idItem="") ""
    $$$VAR
	quit $$GetCost^INItemCost(idItem,pidLocal,,pidData)
	
GetDescMes(pMes)
	if ($length(pMes) = 0) quit ""
	set objWWW101 = $get(^WWW101(0,"COMMONTHSOFYEAR","PT",pMes,1))
	quit $$$WWW101Text(objWWW101)
	
GetMoedaFormatadaTabela(pValor)
	// formata o valor para organizar em uma COMTable
	if ($length(pValor) = 0) quit ""
	quit "&nbsp;R$&nbsp;"_$replace($$RightPad($$FormatCurrency(pValor),20)," ","&nbsp;")
	
SQLGetClassificacaoABC(idItem)
	quit:(idItem="") ""
	set objINART = $get(^INART(0,idItem,1))
	quit $$$INARTItemClassification(objINART)

getCentroCustoAdmissao(idIssue)
	$$$VAR
	
	new idCentroCusto,idMEDAdmissao,idWWW0121e
	
	set idCentroCusto =""
	set idMEDAdmissao = $$$INIssueFREE7($get(^INIssue(YM, idIssue, 1)))
	
	if ($length(idMEDAdmissao) > 0) {
		set idWWW0121 = $$$MEDAdmissionLocation($get(^MEDAdmission(YM, idMEDAdmissao, 1)))
		set idCentroCusto = $$GetCentroCusto^VARSQL(idWWW0121)
	}
	
	q idCentroCusto
	
SQLGetCentroCustoDesc(idCentroCusto)
	if idCentroCusto = "" quit ""
	set objCentroCusto = $get(^VARCentroCusto(0,idCentroCusto,1))
	quit $$$VARCentroCustoNomedoCentrodeCusto(objCentroCusto)
	
	
SQLResumoMovMensal(movimento)

	new controle
	set controle = ""
	
	if (movimento = "REQUISICAO"){
		
		set controle = "(-) Saída Via Requisição / FIA / Centro de Custo"
		quit controle
		
	}elseif (movimento = "DEVOLUCAO") {
		
		set controle = "(+) Entrada Via Devolução ao Estoque"
		quit controle
		
	}elseif (movimento = "DOACAO") {
		
		set controle = "(-) Saída Via Doação"
		quit controle
	
	}elseif (movimento = "EMPRESTIMO") {
		
		set controle = "(-) Saída Via Empréstimo / Devolução de Empréstimo"
		quit controle
		
	}elseif (movimento = "NF-RECEBIMENTO") {
		
		set controle = "(+) Entrada Via Nota Fiscal de Entrada"
		quit controle
		
	}elseif (movimento = "INVENTARIO-ENTRADA") {
		
		set controle = "(+) Entrada Via Inventário"
		quit controle
		
	}elseif (movimento = "INVENTARIO-SAIDA") {
		
		set controle = "(-) Saída Via Inventário"
		quit controle
		
	}elseif (movimento = "TFR-ENTRADA") {
		
		set controle = "(+) Entrada Via Transferência"
		quit controle
		
	}elseif (movimento = "TFR-SAIDA")  {
		
		set controle = "(-) Saída Via Transferência"
		quit controle
		
	}elseif (movimento = "NF-ESTORNO")  {
		
		set controle = "(-) Saída Via Nota Fiscal de Estorno"
		quit controle
		
	}elseif (movimento = "DESMONT-KIT")  {
		
		set controle = "(-) Saída Desmontagem de Kit"
		quit controle
		
	}elseif (movimento = "MONT-KIT")  {
		
		set controle = "(+) Entrada Montagem de Kit"
		quit controle
		
	}elseif (movimento = "SAIDA-ITEM-KIT")  {
		
		set controle = "(-) Saída do Item por Montagem de Kit"
		quit controle
		
	}elseif (movimento = "ESTORNO-ITEM-KIT")  {
		
		set controle = "(+) Entrada do Item por Desmontagem de Kit"
		quit controle
		
	}elseif (movimento = "AJUSTE")  {
		
		set controle = "(-) Atualização de Estoque"
		quit controle
	
	}
	

	quit controle
		
SQLGetRecebimentoFromINAUF(pidINAUF)
	quit:(pidINAUF="") ""
	
	new ReceiptNumber
	set ReceiptNumber = ""
	
    &SQL(
	  SELECT ReceiptNumber 
  	  INTO Recebimento
  	  FROM SQLUser.INREC
  	  WHERE 
	   	INREC.Company = 0
   		AND INREC.FREE10 = :pidINAUF
 	)
 	if 'SQLCODE {
		set ReceiptNumber = Recebimento
	} 
 	quit ReceiptNumber
 	
GetFornFechamentoContabil(company=0)
	set obParametroCliente = $get(^VARParametroCliente(company,company,1))
	set fornecedorFechamento = $$$VARParametroClienteFornecPadraoRecebDevoluca(obParametroCliente)
	
	quit fornecedorFechamento
	
SQLGetDescAbreviado(pText,pLength)
	;2012-12-07 Lucas
	new desc
	set desc = pText
    if pText = "" quit ""
    if ($length(pText) > pLength){
	    set desc = $extract(desc,1,pLength)_"..."
    }
	quit desc	
	
SQLGetImparPar(pNumber)
	new pResult
	quit:('$number(pNumber)) 3 ; Not valid number
	if (pNumber # 2 = 0){
		set pResult = 2 ; par
	}
	else {
		set pResult = 1 ; ímpar
	}
	quit pResult

SQLGetSituacaoPrazoEntrega(dtPrevista,dtAgendada,dtEntregue,QuantRecebida,Quantidade)
	set situacaoPrazo = ""
	
	if (QuantRecebida '= Quantidade) set dtEntregue = ""
	
	if (dtEntregue = ""){
		if (dtAgendada = ""){
			if (+$horolog > dtPrevista){
				set situacaoPrazo = 2 // Em Atraso
			}
			else {
				set situacaoPrazo = 1 // No Prazo
			}
		}
		else {
			if (+$horolog > dtAgendada){
				set situacaoPrazo = 2 // Em Atraso
			}
			else {
				set situacaoPrazo = 1 // No Prazo
			}
		}
	}
	else {
		if (dtAgendada = ""){
			if (dtEntregue > dtPrevista){
				set situacaoPrazo = 2 // Em Atraso
			}
			else {
				set situacaoPrazo = 1 // No Prazo
			}
		}
		else {
			if (dtEntregue > dtAgendada){
				set situacaoPrazo = 2 // Em Atraso
			}
			else {
				set situacaoPrazo = 1 // No Prazo
			}
		}		
	}
	quit situacaoPrazo
	
SQLGetGrupoPai(pGroupId)
 quit:(pGroupId = "") ""
 set idGrupoPai = $$$INItemGroupParentGroup($get(^INItemGroup(0,pGroupId,1)))
 quit:(idGrupoPai'="") idGrupoPai
 quit pGroupId
 
SQLGetStatusProduto(pidItem)
	if pidItem = "" quit ""
	quit $piece($get(^INART(0,pidItem,1)),"~",66) ;campo HoldReason

		
SQLGetDescQuebraLinha(pText,pLength)
	;2013-01-21 Lucas
	new desc
	if pText = "" quit ""
	set desc = pText
    set lengthTotal = $length(desc)
       
    while (lengthTotal > pLength){
	 	if (lengthTotal > pLength){
		 	set $extract(pText,1,pLength) = $extract(pText,1,pLength)_" <br/>"
		 	set pLength = pLength * 2
	 	}   
    }
    
	quit pText	
	
SQLGetDescUnidadeGestora(idStatus)
	quit:($length($get(idStatus)) = 0) ""
	set objVARPARA = $get(^VARPARA(0,"UNDGESTORA","PT",+idStatus,1))
	
	quit $$$VARPARAText(objVARPARA)
	
SQLGetSolucaoPrescLine(pPrescription,pLine)
	quit:(($length($get(pPrescription)) = 0) || ($length($get(pLine)) = 0)) ""
	quit $$$MEDPrescriptionLineSolution($get(^MEDPrescriptionLine(0,pPrescription,pLine,1)))
	
SQLGetSaldoFinalLivroReg(pMes,pAno,pLocal="",pGrupoItem="")
	;
	;05-Mai-2016	Victor Sandoli		HEVA-1967 Alteração para que valores não precisem ser recalculados
	;05-Fev-2015	FC					HEVA-1713 (SEDI) Alteração para exibir o saldo do livro dos documentos impressos antes da correção
	;09-Jan-2014	FC					HEVA-1681 Adicionado validação para considerar somente os itens do fechamento contábil
	;14-Out-2013	Petik				Adicionados parâmetros opcionais pLocal e pGrupoItem
	;
	quit:((pM]]><![CDATA[es="")||(pAno="")) 0
	
	;------------------------------------------------------------------------------------
	; Criada nova verificação para correções manuais nos saldos iniciais e finais do
	; mapa de movimentação mensal. 
	;	
	;	^VARMapaSaldoFinal(YM,pMes,pAno)
	;		-Pega o valor do saldo final definido previamente nesta global tendo
	;		 o mes e o ano como chaves.
	;
	;	^VARMapaValorOriginal(YM,YBED)
	;		-Se esta global estiver com o valor 1 ($$$YES) será mostrado o valor original
	;		 calculado pela soma das transações do até o periodo definido.
	;------------------------------------------------------------------------------------
	if ((##class(Util).GetNamespace() = "HEVA") 	&& 
		($data(^VARMapaSaldoFinal(YM,pMes,pAno))) 			&& 
		($get(^VARMapaValorOriginal(YM,YBED)) '= $$$YES)) {
			
		quit $get(^VARMapaSaldoFinal(YM,pMes,pAno))
	}
	elseif ((##class(Util).GetNamespace() = "SEDI")  &&
		($get(pGrupoItem) '= "") 	&& 
		($data(^VARMapaSaldoFinal(YM,pGrupoItem,pMes,pAno))) 			&& 
		($get(^VARMapaValorOriginal(YM,YBED)) '= $$$YES)) {
			
		quit $get(^VARMapaSaldoFinal(YM,pGrupoItem,pMes,pAno))
	}
	
	;HEVA-1967
	;--------------------------------------------------
	/*set strMes = $piece($zdate($horolog,4),"/",2)
	set strAno = $piece($zdate($horolog,4),"/",3)

	if (pAno<=strAno) {
		if (pAno=strAno){
			if (pMes<strMes){
				if ((pLocal'="") && (pGrupoItem'="")){
					if ($data(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal,pGrupoItem))'=0){
						set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal,pGrupoItem))
						quit $case(ValorCalculado,"":0,:ValorCalculado)
					}
				}elseif ((pLocal="") && (pGrupoItem'="")){
					if ($data(^VARSaldoFinalLivro(YM,pAno,pMes,"Group",pGrupoItem))'=0){
						set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes,"Group",pGrupoItem))
						quit $case(ValorCalculado,"":0,:ValorCalculado)
					}
				}elseif ((pLocal'="") && (pGrupoItem="")){
					if ($data(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal))'=0){
						set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal))
						quit $case(ValorCalculado,"":0,:ValorCalculado)
					}
				}else {
					if ($data(^VARSaldoFinalLivro(YM,pAno,pMes))'=0){
						set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes))
						quit $case(ValorCalculado,"":0,:ValorCalculado)
					} 
				}
			}	
		}else {
			if ((pLocal'="") && (pGrupoItem'="")){
				if ($data(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal,pGrupoItem))'=0){
					set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal,pGrupoItem))
					quit $case(ValorCalculado,"":0,:ValorCalculado)
				}
			}elseif ((pLocal="") && (pGrupoItem'="")){
				if ($data(^VARSaldoFinalLivro(YM,pAno,pMes,"Group",pGrupoItem))'=0){
					set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes,"Group",pGrupoItem))
					quit $case(ValorCalculado,"":0,:ValorCalculado)
				}
			}elseif ((pLocal'="") && (pGrupoItem="")){
				if ($data(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal))'=0){
					set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes,pLocal))
					quit $case(ValorCalculado,"":0,:ValorCalculado)
				}
			}else {
				if ($data(^VARSaldoFinalLivro(YM,pAno,pMes))'=0){
					set ValorCalculado = $get(^VARSaldoFinalLivro(YM,pAno,pMes))
					quit $case(ValorCalculado,"":0,:ValorCalculado)
				} 
			}
		}
	}
	;--------------------------------------------------
	*/
	new ValorTotal, strSQL, rsLivro, LocalCusto
	
	set ValorTotal = 0

	;15/10/2013
	;Como a rotina do custo médio precisa de um local
	;foi definido como Local padrão o 1 para os ambientes do HEVA e AME
	;e para o ambiente SEDI, foi usado o local SEDI
	set LocalCusto = 1
	if ( $piece(##class(Util).GetNamespace(), "-", $length(##class(Util).GetNamespace(), "-")) = "SEDI"){
		 set LocalCusto = "SEDI"
	}
	if (pLocal '= "") {
		set LocalCusto = pLocal
	}

	set strSQL     = ""
	set strSQL     = "SELECT "
	
	// 2014-09-30	Henrique Dias	HEVA-1606	Alterada a query abaixo para utilizar $$GetEstoqueOnHandAtDateForReport^VARMapaMovMensal
	
	if (pLocal = ""){
		;set strSQL = strSQL_" SUM( $$GetEstoqueOnHandAtDate^VARReposicao(ItemNumber,NULL,NULL,NULL,$$SQLGetUltimoDiaMes^VARSQL('"_pMes_"','"_pAno_"')) "
		;set strSQL = strSQL_"    * $$SQLGetAverageCostAtDate^VARSQL(ItemNumber,'"_LocalCusto_"',$$SQLGetUltimoDiaMes^VARSQL('"_pMes_"','"_pAno_"')) ) as ValorTotal "
		set strSQL = strSQL_" SUM($$GetValorEstoqueOnHandAtDate^VARReposicao(ItemNumber,NULL,NULL,NULL,$$SQLGetUltimoDiaMes^VARSQL('"_pMes_"','"_pAno_"'))) as ValorTotal "
	}
	else{
		;set strSQL = strSQL_" SUM( $$GetEstoqueOnHandAtDate^VARReposicao(ItemNumber,'"_pLocal_"',NULL,NULL,$$SQLGetUltimoDiaMes^VARSQL('"_pMes_"','"_pAno_"')) "
		;set strSQL = strSQL_"    * $$SQLGetAverageCostAtDate^VARSQL(ItemNumber,'"_LocalCusto_"',$$SQLGetUltimoDiaMes^VARSQL('"_pMes_"','"_pAno_"')) ) as ValorTotal "
		set strSQL = strSQL_" SUM($$GetValorEstoqueOnHandAtDate^VARReposicao(ItemNumber,'"_LocalCusto_"',NULL,NULL,$$SQLGetUltimoDiaMes^VARSQL('"_pMes_"','"_pAno_"'))) as ValorTotal "
	}
	set strSQL = strSQL_" FROM SQLUser.INART "
	set strSQL = strSQL_" WHERE Company = 0 "
	; HEVA-1681
	set strSQL = strSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(ItemNumber) = 0) "
	
	if (pGrupoItem '= ""){
		set strSQL = strSQL_" AND $$SQLGetGrupoPai^VARSQL(ItemGroup) = '"_pGrupoItem_"' "
	}
	
	set rsLivro = ##class(%ResultSet).%New()
	do rsLivro.Prepare(strSQL)
	do rsLivro.Execute()

	if (rsLivro.Next()){
		;check if this succeeded without errors		
		if ($SYSTEM.Status.IsOK(rsLivro)) {
			set ValorTotal = rsLivro.GetDataByName("ValorTotal")
		}
		else{
			quit 0
		}
	}

	if $IsObject(rsLivro){
		do rsLivro.Close()
	}
	
	
	set ValorTotal = $case(ValorTotal,"":0,:ValorTotal)

	;HEVA-1967
	;----------------------------------------------------------------------------
	if ((pLocal'="") && (pGrupoItem'="")){
		set ^VARSaldoFinalLivro(YM,pAno,pMes,pLocal,pGrupoItem) =  ValorTotal 
		
	}elseif ((pLocal="") && (pGrupoItem'="")){
		set ^VARSaldoFinalLivro(YM,pAno,pMes,"Group",pGrupoItem) =  ValorTotal
	
	}elseif ((pLocal'="") && (pGrupoItem="")){
		set ^VARSaldoFinalLivro(YM,pAno,pMes,pLocal) =  ValorTotal

	}else {
		set ^VARSaldoFinalLivro(YM,pAno,pMes) =  ValorTotal

	}
	;----------------------------------------------------------------------------
	
	quit ValorTotal
 	
SQLGetDescReason(idReason)
 	quit:(idReason="")
 	
 	set descReason = $piece($get(^VARPARA(0,"DEVOLUCAODISPENSACAO","PT",idReason,1)),"~",1)
 	
 	quit descReason
 
SQLGetDescReason2(idReason)
 	quit:(idReason="")
 	
 	set descReason = $piece($get(^VARPARA(0,"MOTIVOREJEICAO","PT",idReason,1)),"~",1)
 	
 	quit descReason	
 	
SQLGetINARTFREE25(pidProduto)
	quit:(pidProduto="")
	
	set free25 = $piece($get(^INART(0,pidProduto,1)),"~",300)
	
	quit free25
	
SQLGetDocketNoPaciente(pidINIssue)
	quit:(pidINIssue="") ""
	
	new idDoc, objIssue
	
	set idDoc = ""
	
	set objIssue = $get(^INIssue(0,pidINIssue,1))
	
	if (objIssue '="") {
		set idDoc = $$$INIssueDocketNo(objIssue)
		if ((idDoc = "")) {
			set idDoc = pidINIssue
		}
	}
	
	quit idDoc
	
SQLGetAverageCostAtDate(idItem,idLocal="",pData="")
	quit:(idItem="")
	
	$$$VAR

	set fltCusto = $$GetCostAtTimeForLocn^INAvgCost(idItem,idLocal,pData)

	quit fltCusto
	
SQLGetDatasEntregaCompra(pidCompra)
    &SQL(DECLARE cursorEntrega CURSOR FOR
    	 SELECT distinct Entrega_DataDeEntrega 
    	 INTO :DataEntrega FROM Report.VARCompra
		 WHERE NumeroCompra = :pidCompra
 	)
    &sql(OPEN cursorEntrega)
    &sql(FETCH cursorEntrega)
	set indiceData = 1
	set strDataEntrega = ""
    while ('SQLCODE) {
		set strDataEntrega = strDataEntrega_"Data da Entrega "_indiceData_": "_DataEntrega_" "
		set indiceData = indiceData + 1
	   	&sql(FETCH cursorEntrega)
	}
    &sql(CLOSE cursorEntrega)
    
    quit strDataEntrega

IsStorageLocn(pIdLocation)
	quit:($length(pIdLocation) = 0) $$$NO
	quit +($$$WWW0121StorageLocn(^WWW0121(0,0,pIdLocation,1)))
	
SQLGetDescViaAdministracao(pCodigo)
	quit:(pCodigo = "") ""
	set desc = $piece($get(^INPARA(0,"MEDROUTEADMIN","PT",$Get(pCodigo),1)),"~",1)
	quit desc

SQLPopulaTempMedSCIH(force = 0)	
	do SQLPopulaTempMedSCIH^VARSQLSCIH(force) 
	quit
	
SQLIsMedicamentoAdministrado(data, local, paciente, item) 
	quit $$SQLIsMedicamentoAdministrado^VARSQLSCIH(data, local, paciente, item) 
	
SQLIsAntimicrobiano(idItem)
	quit $$SQLIsAntimicrobiano^VARSQLSCIH(idItem)

SQLGetPatientFromDisp(pidDispense)
	quit:pidDispense="" ""
	
	new idPresc,objDispense,idPatient,objPresciption
	
	set idPresc = ""
	set idPatient = ""
	set objDispense=$get(^MEDDispense(0,pidDispense,1))
	
	if objDispense '= "" {
		set idPresc = $$$MEDDispensePrescription(objDispense)
		if idPresc '= "" {
			set objPresciption = $get(^MEDPrescription(0,idPresc,1))
			if objPresciption '= "" {
				set idPatient = $$$MEDPrescriptionPatientID(objPresciption)
			}
		}
	}
	quit idPatient
	
SQLGetDescClasseTerapeutica(pCodigo)
	quit:(pCodigo = "") ""
	set desc = $piece($get(^VARCodigoATC(0,pCodigo,1)),"~",1)
	quit desc	

SQLGetMedicamentoControlado(pidItem)
	if pidItem = "" quit ""
	quit $piece($get(^INART(0,pidItem,1)),"~",292) ;campo HoldReason

SQLUDOInPreviousDispense(idDispense="0",idLine="0")
	
	quit +$$$MEDDispenseLineUDOInPreviousDispense($get(^MEDDispenseLine(0,idDispense,idLine,1)))
	
	
SQLGetLocaisAbastecedores(pidLocn)
	$$$VAR
	quit:(pidLocn="")
	new idLocn,idLocn1,idLocn2,idLocn3,idLocn4,idLocn5,idLocn6

	set locais = "'"

	
	$$$Order3(^WWW0121,YM,YM,idLocn)
		
		set objLocal = $get(^WWW0121(YM,YM,idLocn,1))
		continue:(objLocal="")
		
		set LocnAbast = ";"_$$$WWW0121FREE11(objLocal)_";"
		
		if $find(LocnAbast,";"_pidLocn_";"){
			set locais = locais_idLocn_"','"
		}
	$$$End
	

	quit locais	
	
SQLGetLocalFilho(pidLocn)
	$$$VAR
	quit:(pidLocn="")
	new idLocn,idLocn1,idLocn2,idLocn3,idLocn4,idLocn5,idLocn6
	set idLocn = $$Index^COMUtilIndex(pidLocn,"WWW0121") 
	set idChildLocn=""
	set idChildLocn1=""
	set idChildLocn2=""
	set idChildLocn3=""
	set idChildLocn4=""
	set idChildLocn5=""
	set idChildLocn6=""
	
	kill ^COMTempList(0,YUSER,"VARLocaisFilhos")
	merge ^COMTempList(0,YUSER,"VARLocaisFilhos",pidLocn,1) = ^WWW0121(YM,0,pidLocn,1)
	
	set locais = pidLocn
	for {
		set idChildLocn = $order(^WWW0121s(0,2,0,idLocn,0,idChildLocn))
		quit:(idChildLocn="")
		merge ^COMTempList(0,YUSER,"VARLocaisFilhos",idChildLocn,1) = ^WWW0121(YM,0,idChildLocn,1)
		set locais = locais_"~"_idChildLocn
		for {
			set idLocn1 = idChildLocn
			set idChildLocn1=$order(^WWW0121s(0,2,0,idLocn1,0,idChildLocn1))
			quit:(idChildLocn1="")
			merge ^COMTempList(0,YUSER,"VARLocaisFilhos",idChildLocn1,1) = ^WWW0121(YM,0,idChildLocn1,1)
			set locais = locais_"~"_idChildLocn1
			for{
				set idLocn2 = idChildLocn1
				set idChildLocn2=$order(^WWW0121s(0,2,0,idLocn2,0,idChildLocn2))
				quit:(idChildLocn2="")
				merge ^COMTempList(0,YUSER,"VARLocaisFilhos",idChildLocn2,1) = ^WWW0121(YM,0,idChildLocn2,1)
				set locais = locais_"~"_idChildLocn2
				for{
					set idLocn3 = idChildLocn2
					set idChildLocn3=$order(^WWW0121s(0,2,0,idLocn3,0,idChildLocn3))
					quit:(idChildLocn3="")
					merge ^COMTempList(0,YUSER,"VARLocaisFilhos",idChildLocn3,1) = ^WWW0121(YM,0,idChildLocn3,1)
					set locais = locais_"~"_idChildLocn3
					for{
						set idLocn4 = idChildLocn3
						set idChildLocn4=$order(^WWW0121s(0,2,0,idLocn4,0,idChildLocn4))
						quit:(idChildLocn4="")
						merge ^COMTempList(0,YUSER,"VARLocaisFilhos",idChildLocn4,1) = ^WWW0121(YM,0,idChildLocn4,1)
						set locais = locais_"~"_idChildLocn4
						for{
							set idLocn5 = idChildLocn4
							set idChildLocn5=$order(^WWW0121s(0,2,0,idLocn5,0,idChildLocn5))
							quit:(idChildLocn5="")
							merge ^COMTempList(0,YUSER,"VARLocaisFilhos",idChildLocn5,1) = ^WWW0121(YM,0,idChildLocn5,1)
							set locais = locais_"~"_idChildLocn5
							for{
								set idLocn6 = idChildLocn5
								set idChildLocn6=$order(^WWW0121s(0,2,0,idLocn6,0,idChildLocn6))
								quit:(idChildLocn6="")	
								merge ^COMTempList(0,YUSER,"VARLocaisFilhos",idChildLocn6,1) = ^WWW0121(YM,0,idChildLocn6,1)	
								set locais = locais_"~"_idChildLocn6
							}	
						}
					}
				}
			}
		}
	}
	set locais = "'"_locais_"'"
	set locais = $replace(locais,"~","','")
	quit locais
	
	
GetGruposFilhos()
	
	new Grupos
	
	set Grupos = ""
	
	

	quit Grupos

GetCDs() 
	set locais = ""
	set pidLocn= ""
	for {
		set pidLocn = $order(^WWW0121(0,0,pidLocn))
		quit:(pidLocn="")
		if ($$SQLIsCD(pidLocn)) {
			if ($l(locais) = 0 ) {
				set locais = pidLocn
			}
			else {
				set locais = locais_"~"_pidLocn
			}
		}
	}
	quit locais
	
SQLIsCD(pidLocn="")
 	quit:(pidLocn="") 0
	new objLocn
	set objLocn = $Get(^WWW0121(0,0,pidLocn,1))
	if (objLocn = "") {
		quit 0
	}
	quit +$$$WWW0121FREE15(objLocn)
	
SQLGetTipoUnidadeDesc(tipo="",regional="")
	if (tipo = 0) {
		quit "Regional"
	}
	if (tipo = "") && (regional = "")  {
		quit "Tipo de Estabelecimento"
	}
	if ($g(tipo) '= "" ) {
		quit $piece($Get(^VARPARA(0,"TIPOUNIDADE","PT",tipo,1)),"~",1)
	}
	if (tipo = "") && (regional '= "") {
		quit "("_regional_") "_$$SQLGetLocationName^VARSQL(regional)
	}
	
	quit ""
	
SQLFiltroTipo(tipo="",tipoSql="")
	if ((tipo = "") ) {
		quit 1
	}
	if (tipo="--") {
		quit 1
	}
	if (tipo = tipoSql) {
		quit 1
	}
	else {
		quit 0
	}
	
SQLGetDataCadastroLocal(local="")
	set local = "0,"_local
	&SQL(select top 1 date1 into:dataLocal from SqlUser.WWWPRO where class = 'WWW0121' and primaryKey = :local order by Date1 )
	quit dataLocal
	
SQLGetTipoLocal(pidLocal="")	
	quit:pidLocal="" ""
 	set objLocal = $G(^WWW0121(0,0,pidLocal,1))
	quit $$$WWW0121FREE21(objLocal)
	
	
SQLGetTipoLocalPainel(pidLocal="")	
	new objLocal, tipoLocal
	quit:pidLocal="" ""
 	set objLocal = $G(^WWW0121(0,0,pidLocal,1))
 	set tipoLocal = $$$WWW0121FREE21(objLocal)
 	set localPai = $$$WWW0121ParentLocn(objLocal)
 	
 	if ((tipoLocal = 4) && (localPai '= "")) {
	 	set objLocal = $get(^WWW0121(0,0,localPai,1))
	 	set tipoLocal = $$$WWW0121FREE21(objLocal)
 	}
	quit tipoLocal
	
GetLocalPai(pidLocn="") 
 	quit:(pidLocn="") ""
	new objLocn
	set objLocn = $Get(^WWW0121(0,0,pidLocn,1))
	if (objLocn = "") {
		quit ""
	}
	quit $$$WWW0121ParentLocn(objLocn)
	
	; DASA-435: Função criada para recuperar todos os CDs que estão no sistema
SQLGetCDs()
	$$$VAR
	new lstCDs,sqlLocn
	
	set lstCDs = ""
	
	&SQL(
		DECLARE CURSORCD CURSOR FOR
		SELECT Location
		FROM SQLUser.WWW0121
		WHERE FREE15 = 1
	)
	&SQL(OPEN CURSORCD)
	for {
		&SQL(FETCH CURSORCD INTO :sqlLocn)
		quit:(SQLCODE '= 0)
		if (lstCDs = "") {
			set lstCDs = sqlLocn
		}
		else {
			set lstCDs = lstCDs _ ";" _ sqlLocn
		}
	}
	&SQL(CLOSE CURSORCD)
	quit lstCDs


SQLGetGrupoCod(pdescGrupo)
	$$$VAR
	quit:(pdescGrupo="") ""
	
	set codGrupo 	= ""
	set keyCodGrupo = ""
		
	set descricao = $zconvert(pdescGrupo,"U")
		
	$$$Order4(^INItemGroups,YM,3,descricao,codGrupo)
		set keyCodGrupo = codGrupo				
	$$$End
	
    quit keyCodGrupo
	
	
SQLGetCodUnit(pdescUnit)
	$$$VAR
	quit:(pdescUnit = "") ""
	
	set codUnit 	= ""
	set keyCodUnit  = ""
	set descUnit	= ""
	set abrevUnit	= ""
			
	for {
		set codUnit = $order(^WWW101(0,"EINHEIT","PT",codUnit))	
		quit:(codUnit = "")
		
		set obj = $get(^WWW101(0,"EINHEIT","PT",codUnit,1))
		set descUnit = $piece(obj,"~",1)		
		set abrevUnit = $replace($piece(descUnit,"-",1)," ","")
				
		if (abrevUnit = pdescUnit) {
		
			set keyCodUnit = codUnit		  
			
			quit			
			
		} else {
			
		set keyCodUnit = ""
					
		}
			
	}
	
	quit keyCodUnit
	
	
	
SQLGetCodPolicy(pdescPolicy)
	$$$VAR
	quit:(pdescPolicy = "") ""
	
	set codPolicy 	  = ""
	set keyCodPolicy  = ""
	set descPolicy	  = ""
	set abrevPolicy	  = ""
			
	for {
		set codPolicy = $order(^INItemPolicy(0,codPolicy))	
		quit:(codPolicy = "")
		
		set obj = $get(^INItemPolicy(0,codPolicy,1))
		set descPolicy   = $piece(obj,"~",1)
		
		if (pdescPolicy = descPolicy) {
			
			set keyCodPolicy = codPolicy		  
			
			quit
			
		} else {
				
			set abrevPolicy  = $replace($piece(descPolicy,"(",2),")","")
				
			if (abrevPolicy = pdescPolicy) {
		
				set keyCodPolicy = codPolicy		  
			
				quit			
			
			} else {
			
		set keyCodPolicy = ""
					
		}
			
	  }
	
	}
	
	quit keyCodPolicy
	
	

SQLGetCodStatus(pdescStatus)
	$$$VAR
	quit:(pdescStatus = "") ""
	set codStatus 	  		= ""
	set keyCodStatus  		= ""
	set descStatus	  		= ""
	set descAbreviadoStatus = ""
			
	for {
		set codStatus = $order(^INItemStatus(0,codStatus))	
		quit]]><![CDATA[:(codStatus = "")
		
		set obj = ]]><![CDATA[$get(^INItemStatus(0,codStatus,1))
		set descStatus   = $piece(obj,"~",1)
		set descAbreviadoStatus  = $extract($piece(obj,"~",1),1) 
		
		;BASIC-29
		if (($SYSTEM.SQL.UPPER(pdescStatus) = $SYSTEM.SQL.UPPER(descAbreviadoStatus))||(codStatus = pdescStatus)) {
			
			set keyCodStatus = codStatus		  
			
			quit
	
		} else {
			
		set keyCodStatus = 0
					
		}
		
		if (($SYSTEM.SQL.UPPER(pdescStatus) = $SYSTEM.SQL.UPPER(descStatus)) ||(codStatus = pdescStatus)) {
			
			set keyCodStatus = codStatus		  
			
			quit
	
		} else {
			
		set keyCodStatus = 0
					
		}
			
	  }
	
		
	quit keyCodStatus
	
	
	
SQLGetCodContaContabil(pdescContaContabil)
	$$$VAR
	quit:(pdescContaContabil = "") ""
	
	set codContaContabil 	 = ""
	set keyCodContaContabil  = ""
	set descContaContabil    = ""
				
	for {
		set codContaContabil = $order(^INPARA(0,"VARTCICONTACONTABIL","PT",codContaContabil))	
		quit:(codContaContabil = "")
		
		set obj = $get(^INPARA(0,"VARTCICONTACONTABIL","PT",codContaContabil,1))
		set descContaContabil   = $piece(obj,"~",1)
		
		if (pdescContaContabil = descContaContabil) {
			
			set keyCodContaContabil = codContaContabil	  
			
			quit
	
		} else {
			
		set keyCodContaContabil = ""
					
		}
			
	  }

	quit keyCodContaContabil
	
	
SQLGetFornStatus(pdescStatus)
	$$$VAR
	quit:(pdescStatus = "") ""
	
	set codStatus 	  = ""
	set keyCodStatus  = ""
	set descStatus	  = ""
				
	for {		
		set codStatus = $order(^INSupStatus(0,codStatus))	
		quit:(codStatus = "")
		
		set obj = $get(^INSupStatus(0,codStatus,1))
		set descStatus   = $piece(obj,"~",1)
		
		if (pdescStatus = descStatus) {
			
			set keyCodStatus = codStatus		  
			
			quit
	
		} else {
			
		set keyCodStatus = pdescStatus
					
		}
			
	  }
			
	quit keyCodStatus	
	
	
SQLGetFornNatureza(pdescNatureza)
	$$$VAR
	quit:(pdescNatureza = "") ""
	
	set codNatureza 	= ""
	set keyCodNatureza  = ""
	set descNatureza	= ""
				
	for {		
		set codNatureza = $order(^INPARA(0,"NATUREZAFISCAL","PT",codNatureza))	
		quit:(codNatureza = "")
		
		set obj = $get(^INPARA(0,"NATUREZAFISCAL","PT",codNatureza,1))
		set descNatureza   = $piece(obj,"~",1)
		
		if ($ZCVT(pdescNatureza,"U") = $ZCVT(descNatureza,"U")) {
			
			set keyCodNatureza = codNatureza		  
			
			quit
	
		} else {
			
		set keyCodNatureza = pdescNatureza
					
		}
			
	  }
			
	quit keyCodNatureza		
	
SQLGetContaEntrada(pProduto)
	new objINART
	if ($get(pProduto)="") quit ""
	set objINART = ^INART(0,pProduto,1)
	quit $$$INARTFREE21(objINART)
	
SQLGetDescContaEntrada(pProduto)

	if ($get(pProduto)="") quit
	set CodContaEntrada = $$SQLGetContaEntrada(pProduto)
	
	new objContaEntrada
	if ($get(CodContaEntrada)="") quit ""
	set objContaEntrada = $get(^VARPARA(0,"VARCONTAENTRADA","PT",CodContaEntrada,1))
	quit $piece(objContaEntrada,"~",1)
	
SQLGetStatusOrdem(idCompra)
	quit:(idCompra = "") ""
	set objINAUF = $get(^INAUF(0,idCompra,1))
	quit $$$INAUFFREE14(objINAUF)

SQLGetQtdeParcelas(cod)
	quit:cod="" 1
	set obj = $get(^INKOND(0,cod,1))
	set objVencimento = $piece(obj,"~",19)
	set:objVencimento="0" objVencimento = $piece(obj,"~",2)
	quit $length(objVencimento,",")

SQLGetSexoPaciente(codPaciente)
	quit:codPaciente="" ""
	
	set objPaciente = $get(^MEDPatient(0,codPaciente,1))
	quit:objPaciente="" ""
	
	set sexo = $$$MEDPatientGender(objPaciente)
	set descSexo = ""
	set:sexo'="" descSexo = $piece($get(^WWW101(0,"SEX","PT",sexo,1)),"~",1)

	quit descSexo
	
SQLGetPatientMonth(strDOB)
	set intMonth = ""
	;
	set day					= +$extract($zdate(strDOB,8),7,8)
	set month 			= +$extract($zdate(strDOB,8),5,6)
	set dayAtual		= +$extract($zdate($horolog,8),7,8)
	set monthAtual 	= +$extract($zdate($horolog,8),5,6)
	set qtdemonth		= 0
	;
	set qtdemonth = monthAtual-month
	if (qtdemonth < 0) set qtdemonth = 12 + qtdemonth 
	if (dayAtual < day) set qtdemonth = qtdemonth - 1
	;
	if (qtdemonth = 1) set intMonth = qtdemonth _ " mês"
	if (qtdemonth > 1) set intMonth = qtdemonth _ " meses"
	;
	quit intMonth
	
SQLGetImagemPEP(pTipo, pParametro)
	
	set retorno = ""

	if (pTipo = 1 && pParametro >= 60) {
		set retorno = "<i class='fas fa-blind' title='Idoso'></i>&nbsp;"
	}
	
	;<i class="fas fa-wheelchair" title="Cadeirante" style="display:none;"></i>&nbsp;
	;<i class="fas fa-bong" title="Aguardando Exame"></i>&nbsp;
	;<i class="fas fa-pills" title="Tomando Medicamento"></i>&nbsp;
	;<i class="fas fa-heartbeat" title="Pressão Alta" style="display:none;"></i>&nbsp;
	;<i class="fas fa-thermometer-full" title="Febre" style="display:none;"></i>&nbsp;
	;<i class="fas fa-lungs" title="Frequência Respiratória"></i>&nbsp;
	;<i class="fas fa-allergies" title="Alergia" style="display:none;"></i>

	quit retorno 
	
SQLAntGestacionaisPEP(codPEP)
	if codPEP="" quit ""
	set objPEP = $get(^VARPEP(0,codPEP,1))
	set retorno = ""
	for i=1:1:$length($piece(objPEP,"~",3),";"){
		set dataG = $piece($piece(objPEP,"~",3),";",i)
		if dataG="" continue
		set:retorno'="" retorno = retorno_"/ " 
		set retorno = retorno_$zdate(dataG,4)
	}
	quit retorno


SQLMolestiasPEP(codPEP,flMolestiasLivres)
	if codPEP="" quit ""
	set objPEP = $get(^VARPEP(0,codPEP,1))
	set retorno = ""
	for i=1:1:$length($$$VARPEPAnamneseMolestias(objPEP),";"){
		set molestia = $piece($$$VARPEPAnamneseMolestias(objPEP),";",i)
		if molestia="" continue
		if '$data(^VARCID(0,molestia,1)) continue
		set:retorno'="" retorno = retorno_"/ " 
		set retorno = retorno_"("_molestia_") "_$piece(^VARCID(0,molestia,1),"~",1)
	}
	if $$$VARPEPAnamneseMolestiasPregress(objPEP)'=""{
		set:retorno'="" retorno = retorno_$c(10) 
		set retorno = retorno_$$$VARPEPAnamneseMolestiasPregress(objPEP)
	}
	quit retorno
	
SQLHDPEP(codPEP)
	if codPEP="" quit ""
	set objPEP = $get(^VARPEP(0,codPEP,1))
	set retorno = ""
	for i=1:1:$length($$$VARPEPAnamneseHD(objPEP),";"){
		set HD = $piece($$$VARPEPAnamneseHD(objPEP),";",i)
		if HD="" continue
		if '$data(^VARCID(0,HD,1)) continue
		set:retorno'="" retorno = retorno_"/ " 
		set retorno = retorno_"("_HD_") "_$piece(^VARCID(0,HD,1),"~",1)
	}
	quit retorno

GetDescSala(codSala)
	quit:codSala="" ""
	
	set objSala = $get(^VARSalasAtendimentos(0,codSala,1))
	quit:objSala="" ""
	
	set descSala = $$$VARSalasAtendimentosNome(objSala)
	
	quit descSala	
	
GetDescCategoriaCID(codCategoria)
	quit:codCategoria="" ""
	
	Set descCategoria = "("_$piece($Get(^VARCIDCategorias(0,codCategoria,1)),"~",1)_" - "_$piece($Get(^VARCIDCategorias(0,codCategoria,1)),"~",2)_") "_$piece($Get(^VARCIDCategorias(0,codCategoria,1)),"~",4)

	quit descCategoria	
	
GetDescWorkFlowPEP(cid,sequencia)
	quit:cid="" ""
	quit:sequencia="" ""
	set YM=0
	set objWF 	= $get(^VARWorkFlowPEP(YM,cid,sequencia,1))
	set desc    = $$$VARWorkFlowPEPNome(objWF)
	set tipo	= $$$VARWorkFlowPEPTipodeWorkflow(objWF)
	if tipo=5||(tipo=12){
		set exames=""
		for i=1:1:$length(desc,";"){
			set objExames = $get(^VARExames(0,$piece(desc,";",i),1))
			set descExame = $$$VARExamesDescricaodoExame(objExames)
			if exames'="" set exames = exames_"/"
			set exames = exames_descExame
		}
		set desc = exames
	}
	quit desc

GetDescMedicamentos(codMedicamento,OnlySubDescription=0)
	if codMedicamento="" quit ""
	set medicamento = codMedicamento
	if $data(^VARMedicamento(0,codMedicamento,1)){
		set obj = $get(^VARMedicamento(0,codMedicamento,1))
		if OnlySubDescription=1{
			set medicamento = $$$VARMedicamentoNomeAlpha(obj)
		}else{
			set medicamento = $$$VARMedicamentoNome(obj)_" "_$$$VARMedicamentoSubDescricao(obj)_" ("_$$$VARMedicamentoDosagem(obj)_")"
		}
	}
	quit medicamento
	;
GetDescFrequencia(codFrequencia)
	if codFrequencia="" quit ""
	set obj = $get(^MEDFrequency(0,codFrequencia,1))
	set frequencia = $$$MEDFrequencyFrequency(obj)
	quit frequencia
	;
GetDescVia(codVia)
	if codVia="" quit ""
	set obj = $get(^INPARA(0,"MEDROUTEADMIN",SPRACHE,codVia,1))
	set via = $$$INPARAText(obj)
	quit via
	;
GetDescUnidade(codUnidade)
	do ^WWWVAR
	if codUnidade="" quit ""
	set obj = $get(^WWW101(0,"EINHEIT",SPRACHE,codUnidade,1))
	set unidade = $$$WWW101Text(obj)
	set unidade = $piece(unidade,"-",2,$length(unidade,"-"))
	quit unidade
	;
GetDescUnidadePEP(codUnidade)
	if codUnidade="" quit ""
	set objINPARA	= $get(^INPARA(YM,"UNIDDOSAGEM",SPRACHE,codUnidade,1))
	set unidade 	= $$$INPARAText(objINPARA)
	quit unidade
	;
GetDescViaPEP(codVia)
	new via
	set YM = 0
	if $get(SPRACHE)="" set SPRACHE = "PT"
	if codVia="" quit ""
	set objINPARA	= $get(^INPARA(YM,"VIAADMINISTRACAO",SPRACHE,codVia,1))
	set via 	= $$$INPARAText(objINPARA)
	quit via
	;
GetDescFrequenciaPEP(codFrequencia)
	new frequencia
	if codFrequencia="" quit ""
	set objINPARA	= $get(^INPARA(YM,"POSOLOGIA",SPRACHE,codFrequencia,1))
	set frequencia 	= $$$INPARAText(objINPARA)
	quit frequencia
	;
GetDescDuracaoPEP(codDuracao)
	new duracao
	set duracao = "Uso contínuo"
	if (codDuracao=0)||(codDuracao=""){
		set duracao = "Uso contínuo"
	}elseif codDuracao'?.N{
		set duracao = codDuracao
	}elseif codDuracao?.N{
		set duracao = "Por "_codDuracao_" dia"_$select(codDuracao>1:"s",1:"")
	}
	quit duracao
GetDescDosePEP(codDose)
	if codDose="" quit ""
	new dose
	set dose = "Variável"
	if +codDose'=0{
		set dose = codDose
	}
	quit dose	
GetDescObservacoesPEP(ID)
	if ID="" quit ""
	set company = $piece(ID,"||",1)
	set prescricao = $piece(ID,"||",2)
	set linha = $piece(ID,"||",3)
	set obj = $get(^VARPEPPremiumPrescricao(company,prescricao,linha,1))
	set dose = $$$VARPEPPremiumPrescricaoDose(obj)
	set unidade = $$$VARPEPPremiumPrescricaoUnidade(obj)
	set via = $$$VARPEPPremiumPrescricaoVia(obj) 
	set frequencia = $$$VARPEPPremiumPrescricaoFrequencia(obj)
	set duracao = $$$VARPEPPremiumPrescricaoDuracao(obj) 
	set observacoesTxt = $$$VARPEPPremiumPrescricaoObservacoes(obj) 
	//
	set dose = $$GetDescDosePEP(dose)
	set unidDesc = $zcvt($$GetDescUnidadePEP(unidade),"L")
	set doseTxt = ""
	for i=1:1:$length(dose,"/"){
		set doseA = $piece(dose,"/",i)
		if doseA="" continue
		if doseTxt'="" set doseTxt = doseTxt_" / "
		set doseTxt = doseTxt_$fnumber(doseA,".")_" "_unidDesc
	}
	
	//	
	set observacoes = doseTxt
	;
	set viaDesc = $zcvt($$GetDescViaPEP(via),"L")
	if viaDesc="" set viaDesc = via
	set observacoes = observacoes_" "_viaDesc
	;
	if $zcvt($$GetDescFrequenciaPEP(frequencia),"L")["x"{
		set freqDesc = $zcvt($$GetDescFrequenciaPEP(frequencia),"L")
		if freqDesc = "" set freqDesc = frequencia
	}else{
		set freqDesc = "de "_$zcvt($$GetDescFrequenciaPEP(frequencia),"L")
		if freqDesc = "de " set freqDesc = frequencia
	}
	set freqDesc = $zstrip(freqDesc,"<>w")
	if freqDesc'="" set observacoes = observacoes_" "_freqDesc
	;
	set duracaoDesc = $zcvt($$GetDescDuracaoPEP(duracao),"L")
	if duracaoDesc="" set duracaoDesc = duracao
	set observacoes = observacoes_", "_duracaoDesc
	;
	if observacoesTxt'=""{
		set observacoes = observacoes_$c(10)_$replace(observacoesTxt,$c(10)," - ")
	}
	set observacoes = $replace(observacoes,"<br>",$c(10))
	quit observacoes
	;
GetEnderecoPaciente(cod)
	if cod="" quit ""
	set obj = $get(^MEDPatient(0,cod,1))
	set rua = $$$MEDPatientStreet(obj)
	set numero = $$$MEDPatientFREE4(obj)
	set bairro = $$$MEDPatientFREE6(obj)
	set cidade = $$$MEDPatientCity(obj)
	set uf = $$$MEDPatientState(obj)
	set endereco = rua_$select(numero'="":" n "_numero,1:"")_$select(bairro'="":", "_bairro,1:"")_$select(cidade'="":", "_cidade,1:"")_$select(uf'="":" - "_uf,1:"")
	quit endereco
GetDiagnosticoPEP(codPaciente)
	set YM=0
	set dataPEP = ""
	set dataPEP = $order(^VARPEPPremiumPrimario(YM,codPaciente,dataPEP),-1)
	set cid = ""
	if dataPEP'=""{
		set obj = $get(^VARPEPPremiumPrimario(YM,codPaciente,dataPEP,1))
		set cids = $$$VARPEPPremiumPrimarioAnamneseHD(obj)
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if $data(^VARWorkFlowCID(YM,ccid)) set cid=ccid quit
		}
	}
	
	if cid=""{
		set cids = $get(^mtemp.cidspaciente($job,codPaciente))
		for i=1:1:$length(cids,";"){
			set ccid = $piece(cids,";",i)
			if ccid="" continue
			if $data(^VARWorkFlowCID(YM,ccid)) set cid=ccid quit
		}
	}
	quit cid

GetDiagnosticoDescPEP(cid)
	if cid="" quit ""
	set desc = ""
	set desc = $piece($get(^VARCID(0,cid,1)),"~",1)
	quit desc

SQLGetClassificacaoPaciente(codPaciente)
	if codPaciente="" quit ""
	set objPaciente = $get(^MEDPatient(0,codPaciente,1))
	quit:objPaciente="" ""
	set Classificacao = $$$MEDPatientClassificacao(objPaciente)
	set descC = ""
	if Classificacao=1 set descC = "Início de Tratamento"
	if Classificacao=2 set descC = "Em Tratamento"
	if Classificacao=3 set descC = "Óbito"
	quit descC

SQLValidaTipoProduto(codProduto)

	Set status = 0
	
	if (codProduto = "OUTROS" || (codProduto = "OUTROS7")) {
		Set status = 1
	}
	
	Quit status
	
ListMedicamentoRelatorio(pLista,flMedicamentoLivre)
	If (pLista = "") Quit ""
	Set descricaoTotal = ""
	For count = 1 : 1 : $LENGTH(pLista,";") {
		Set codMedicamento = $Piece(pLista,";",count)
		If (codMedicamento = "") Continue
		If ('$data(^VARMedicamento(0,codMedicamento))) Continue
		Set descricao = $Piece(^VARMedicamento(0,codMedicamento,1),"~",2)_"("_$Piece(^VARMedicamento(0,codMedicamento,1),"~",3)_")"
		Set descricaoTotal = descricaoTotal_$Select(descricaoTotal="":"",1:" | ")_descricao
	}
	if $$$VARPEPAnamneseMedicUtilizadasLi(objPEP)'=""{
		set:descricaoTotal'="" descricaoTotal = descricaoTotal_$c(10) 
		set descricaoTotal = descricaoTotal_$$$VARPEPAnamneseMedicUtilizadasLi(objPEP)
	}
	Return descricaoTotal 

GetDescDiagnostico(aDiag)
	Set texto = ""
	If (aDiag = "") {
		Quit texto
	}
	For count = 1 : 1 : $Length(aDiag,";") {
		Set ccid = $Piece(aDiag,";",count)	
		If '$Data(^VARCID(0,ccid)) {
			Continue
		}
		Set texto = texto _ "("_ccid_") "_$piece(^VARCID(0,ccid,1),"~",1)_"  "
	}
	Quit texto
	
GetReceituario(codAdmissao)
	Set texto = ""
	If (codAdmissao = "") {
		Quit texto
	}		
	Set meuSQL = 	"Select NumerodaLinha, Receituario From SQLUser.VARPEPReceituario " _
								"Where Company = 0 And NumerodoPEP = '"_codAdmissao_"'"
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		Set texto = texto _$Select(texto="":"",1:$C(10,10))_ "Receita "_rSet.%Get("NumerodaLinha")_": "_$C(10) _ rSet.%Get("Receituario")
	}
	Quit texto
	
GetExames(codAdmissao, tipo = 1)
	Set texto = ""
	If (codAdmissao = "") {
		Quit texto
	}		
	Set meuSQL = 	"Select  INART.SearchName, VARPEPExames.Observacoes " _
								"From  SQLUser.VARPEPExames, SQLUser.INART Where " _
								"VARPEPExames.Company = 0 And	VARPEPExames.NumerodoPEP = '"_codAdmissao_"' " _
								"And INART.ItemNumber = VARPEPExames.CodigodoExame1 "
	If (tipo = 1) {
		Set meuSQL = meuSQL _	"And %Upper(INART.ItemType) in (6, 4, 5) "
	}Else{
		Set meuSQL = meuSQL _	"And %Upper(INART.ItemType) in (7) "
	}
	Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	While(rSet.%Next()){
		If (rSet.%Get("SearchName") = "Outros") {
			Set texto = texto _$Select(texto="":"",1:$C(10))_ rSet.%Get("Observacoes")
		}else{
			Set texto = texto _$Select(texto="":"",1:$C(10))_ rSet.%Get("SearchName")_$Select(rSet.%Get("Observacoes")'="":"( "_rSet.%Get("Observacoes")_" )",1:"")
		}
	}
	Quit texto	
	;
getPatientAge(codPaciente)
	if codPaciente="" quit ""
	set objPaciente = $get(^MEDPatient(0,codPaciente,1))
	set dob = $$$MEDPatientDOB(objPaciente)
	set anos = ""
	if dob'=""{
		set nasc = $zdate(dob,8)
		set hoje = $zdate($horolog,8)
		set anos = $extract(hoje,1,4)-$extract(nasc,1,4)-1
		if $extract(hoje,5,8)>=$extract(nasc,5,8) set anos = anos +1
	}
	set texto = " ano"
	if anos>1 set texto = " anos"
	quit anos_texto
	;
SQLGetPatientProntuario(codPaciente)
	If (codPaciente = "") {
		Return ""
	} 
	
	Set objMEDPatient = $Get(^MEDPatient(0,codPaciente,1))
	
	If ($$$MEDPatientPID(objMEDPatient)'="") {
		Return $$$MEDPatientPID(objMEDPatient)
	}
	
	If ($Extract(codPaciente,1,5) = "10000") {
		Return codPaciente
	}
	
	If ($$$MEDPatientCodigoMotion(objMEDPatient)'="") {
		Return $$$MEDPatientCodigoMotion(objMEDPatient)
	}
	
	Set xCodMotion = ""
	For {
		Set xCodMotion = $Order(^PacienteMotion(0, xCodMotion))
		Quit:xCodMotion=""
		Quit:$Data(^PacienteMotion(0, xCodMotion, codPaciente))	
	}
	If (xCodMotion '= "") {
		Return xCodMotion
	}
	
	Return codPaciente
	
SQLGetCid(cid)
	if cid="" quit ""
	set retorno = ""
	for i=1:1:$length(cid,";"){
		set cid = $piece(cid,";",i)
		if cid="" continue
		if '$data(^VARCID(0,cid,1)) continue
		set:retorno'="" retorno = retorno_"/ " 
		set retorno = retorno_"("_cid_") "_$piece(^VARCID(0]]><![CDATA[,cid,1),"~",1)
	}
	quit retorno
getPatientDiagMAPPA(cid)
	if cid="" quit ""
	set desc = ""
	if cid'=""{
		set desc = $piece($get(^VARCID(0,cid,1)),"~",1)
	}
	quit desc
getEstadiamentoMAPPA(codPaciente,cid,ficha,estadiamento)
	if codPaciente=""||(cid="")||(ficha="")||(estadiamento="") quit ""
	kill ^mtemp.valoresEstadiamentoSalvos($job)
	kill ^mtemp.valoresSalvosPEP($job)
	set retorno = ##class(VAR.CSP.MAPPA).calcEstadiamento(codPaciente,cid,ficha,1,estadiamento,"",1)
	set descEstadiamento = ""
	if retorno.selEstagio'=""{
		set objEstadiamento = $get(^VARWorkFlowEstadiamento(0,cid,estadiamento,1))
		set descEstadiamento = $$$VARWorkFlowEstadiamentoDescricao(objEstadiamento)
		set objEstadiamento = $get(^VARWorkFlowEstadiamentoEstagio(0,cid,estadiamento,retorno.selEstagio,1))
		set descEstadiamento = descEstadiamento_" "_$$$VARWorkFlowEstadiamentoEstagioDescricao(objEstadiamento)
	}
	quit descEstadiamento
	;
getCodTratamentoMAPPA(codPaciente,cid,ficha)
	if codPaciente=""||(cid="")||(ficha="") quit ""
	set codRegime = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,""),-1)
	quit codRegime
	;
getTratamentoMAPPA(codPaciente,cid,ficha)
	if codPaciente=""||(cid="")||(ficha="") quit ""
	set codRegime = $order(^VARPEPPremiumTratamento(0,codPaciente,cid,ficha,""),-1)
	if codRegime'=""{
		set objRegime = $get(^VARWorkFlowRegTera(0,cid,codRegime,1))
		set descricao = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objRegime)
	}
	quit descricao
	;
getTipoPrescricao(NumerodaPrescricao,NumerodaLinha,desc=0)
	new (NumerodaPrescricao,NumerodaLinha,desc)
	set objPrescricao = $get(^VARPEPPremiumPrescricao(0,NumerodaPrescricao,NumerodaLinha,1))
	set cid = $$$VARPEPPremiumPrescricaoCodigodoCID(objPrescricao)
	set via = $$$VARPEPPremiumPrescricaoVia(objPrescricao)
	set codRecTera = $$$VARPEPPremiumPrescricaoCodigodaRecomendacaoTerap(objPrescricao)
	;
	set tipo="5~Outros"
	if via=2 set tipo="1~Via Endevenosa"
	if via=1,codRecTera'="",cid'="" {
		set codRegime = $piece(codRecTera,"^",2)
		set objRegime = $get(^VARWorkFlowRegTera(0,cid,+codRegime,1))
		set tipoRegime = $$$VARWorkFlowRegTeraTipodeRegime(objRegime)
		if tipoRegime=9 set tipo="3~Via Oral (terapias de suporte)"
		e  set tipo="2~Via Oral (regimes terapêuticos)"
	}
	if via=1,codRecTera="" set tipo="4~Via Oral"
	quit $piece(tipo,"~",desc+1)
	;
SQLAntGestacionaisPEPPremium(gestacionais)
	if gestacionais="" quit ""
	set retorno = ""
	for i=1:1:$length(gestacionais,";"){
		set dataG = $piece(gestacionais,";",i)
		if dataG="" continue
		set:retorno'="" retorno = retorno_"/ " 
		set retorno = retorno_$zdate(dataG,4)
	}
	quit retorno
SQLMedicamentos(medicamento)
	if medicamento="" quit ""
	set retorno = ""
	for i=1:1:$length(medicamento,";"){
		set med = $piece(medicamento,";",i)
		if med="" continue
		set obj = $get(^VARMedicamento(0,med,1))
		set desc = $$$VARMedicamentoNome(obj)_" "_$$$VARMedicamentoSubDescricao(obj)_" ("_$$$VARMedicamentoDosagem(obj)_")"
		set:retorno'="" retorno = retorno_"/ " 
		set retorno = retorno_desc
	}
	quit retorno
	;
GetChecaMedico(pYBED)
	Set flagUsuarioMedico = 0
	If (pYBED = "") {
		Return flagUsuarioMedico 	
	}
	Set codProfissional = $Order(^MEDProviders(0,1,$Replace(YBED,"_"," "),"")) 
	If (codProfissional = "") {
		Return flagUsuarioMedico 	
	}
	Set objMEDProvider = $Get(^MEDProvider(0, codProfissional, 1))
	;^INPARA(0,"MEDLICENSETYPE","PT",2231,1)="Médico"
	If ($$$MEDProviderLicenseType(objMEDProvider) = "2231") {
		Set flagUsuarioMedico = 1
	}	
	Return flagUsuarioMedico 
GetDescricaoPerfilComposicao(pJOB, pPerfilExame, pCompostoExame, pTipo)
	Set Descricao = ""
	If (pTipo = "P") {
		If ('$Data(^mtemp.VARPEPImprimirResultado(pJOB, pPerfilExame))) {
			Set Descricao = $$SQLGetDescricaoProduto^VARSQL(pPerfilExame)
			Set ^mtemp.VARPEPImprimirResultado(pJOB, pPerfilExame) = ""
		}
	}Else{
		If ('$Data(^mtemp.VARPEPImprimirResultado(pJOB, pPerfilExame, pCompostoExame))) {
			Set Descricao = $$SQLGetDescricaoProduto^VARSQL(pCompostoExame)
			Set ^mtemp.VARPEPImprimirResultado(pJOB, pPerfilExame, pCompostoExame) = ""
		}
	}
	Return Descricao

DiferencaDias(codigoPac, Data)
	
	new (codigoPac, Data)
	
	SET diferenca = ""
	
	SET Data = +Data
	
	
	SET query =" SELECT TOP 1 (" _ Data _ " - CriadoEm) AS Diferenca "
	SET query = query _	" FROM SQLUSER.VARProntuarioEletronico "
	SET query = query _ " WHERE COMPANY = 0 AND %UPPER(Paciente) = '" _  codigoPac _ "' AND (+CriadoEm < " _ Data _ ") "
	SET query = query _ " ORDER BY CriadoEm DESC"
	
	
	set rs= ##class(%SQL.Statement).%ExecDirect("",.query)
	
	WHILE(rs.%Next())
	{
		SET diferenca = rs.%Get("Diferenca")
	}
		
	QUIT diferenca
getDescExame(pidItem)
	if pidItem = "" quit ""
	set desc = pidItem
	if $data(^INART(0,pidItem,1)){
		set desc = $piece($get(^INART(0,pidItem,1)),"~",1)
	}
	quit desc
	;
GetDescConvenio(pConvenio)
	If (pConvenio = "") Return ""
	Return $$$MEDConvenioNome($Get(^MEDConvenio(0, pConvenio, 1)))
	;
GetDescPlanoSaude(pConvenio, pPlanoSaude)
	If (pConvenio = "" || (pPlanoSaude = "")) Return ""
	Return $$$MEDPlanoSaudeDescricao($Get(^MEDPlanoSaude(0, pConvenio, pPlanoSaude, 1)))
	;
GetCodGrupoAgendamento(pCodProduto)
	If (pCodProduto = "") Return ""
	Return $$$INARTGrupodeAgendamento($Get(^INART(0, pCodProduto, 1)))
	;
GetDescGrupoAgendamento(pCodGrupoAgendamento)
	If (pCodGrupoAgendamento = "") Return ""
	Return $$$VARGrupoAgendamentoDescricao($Get(^VARGrupoAgendamento(0, pCodGrupoAgendamento, 1)))
	;
GetTipoGrupoAgendamento(pCodGrupoAgendamento)
	If (pCodGrupoAgendamento = "") Return ""
	Return $$$VARGrupoAgendamentoTipo($Get(^VARGrupoAgendamento(0, pCodGrupoAgendamento, 1)))
	;
GetDescGrupoAgendamentoViaAgenda(pCodProfissional, pCodReferencia)
	If (pCodProfissional = "" || (pCodReferencia = "")) Return ""
	If ('$Data(^MEDProviderAgenda(0, pCodProfissional, pCodReferencia))) Return ""
	Set codGrupoAgendamento = $$$MEDProviderAgendaGrupoAgendamento(^MEDProviderAgenda(0, pCodProfissional, pCodReferencia, 1))
	Return $$GetDescGrupoAgendamento(codGrupoAgendamento)
	;
GetTipoGrupoAgendamentoViaAgenda(pCodProfissional, pCodReferencia)
	If (pCodProfissional = "" || (pCodReferencia = "")) Return ""
	If ('$Data(^MEDProviderAgenda(0, pCodProfissional, pCodReferencia))) Return ""
	Set codGrupoAgendamento = $$$MEDProviderAgendaGrupoAgendamento(^MEDProviderAgenda(0, pCodProfissional, pCodReferencia, 1))
	Return $$GetTipoGrupoAgendamento(codGrupoAgendamento)		
	;
GetDescSalasAtendimentos(pCodSala = "", pCodLeito = "")
	If (pCodSala = "") Return ""
	If (pCodLeito = "") {
		Return $$$VARSalasAtendimentosNome($Get(^VARSalasAtendimentos(0, pCodSala, 1)))
	}Else{
		Return $$$VARSalasAtendimentosNome($Get(^VARSalasAtendimentos(0, pCodSala, 1)))_" - "_$$$VARLeitosAtendimentosDescricao($Get(^VARLeitosAtendimentos(0, pCodSala, pCodLeito, 1)))
	}
	;
GetDescLeitoAtendimentos(pCodSala, pCodLeito)
	If (pCodSala = "" || (pCodLeito = "")) Return ""
	Return $$$VARLeitosAtendimentosDescricao($Get(^VARLeitosAtendimentos(0, pCodSala, pCodLeito, 1)))
	;
GetDescTempo(pTempo)
	Set pTempo = $ZTime(pTempo,2)
	Set Descricao = ""
	If (+$Piece(pTempo,":",1) > 0) {
		If (+$Piece(pTempo,":",1) = 1) Set Descricao = "1 Hora"		
		Else  Set Descricao = +$Piece(pTempo,":",1)_" Horas"
	}
	If (+$Piece(pTempo,":",2) > 0) {
		If (+$Piece(pTempo,":",2) = 1) Set Descricao = Descricao _$Select(Descricao="":"",1:" e ")_ "1 Minuto"		
		Else  Set Descricao = Descricao _$Select(Descricao="":"",1:" e ")_ +$Piece(pTempo,":",2)_" Minutos"
	}
	Return Descricao	
	;
GetDescSemana(pData, pTipoExib = 0)
	Set descricao(0) = "Domingo;Segunda;Terça;Quarta;Quinta;Sexta;Sabado"	
	Set descricao(1) = "Dom;Seg;Ter;Qua;Qui;Sex;Sab"	
	Return $Piece($Get(descricao(pTipoExib)),";",($ZDate(pData,10)+1))
	;
SQLGetProviderSexo(pidProvider, tipoExibicao = "I")
	If pidProvider = "" Return ""
	If (tipoExibicao = "I") {
		Return $$$MEDProviderSexo($Get(^MEDProvider(0,pidProvider,1)))			
	}
	Set codSexo = $$$MEDProviderSexo($Get(^MEDProvider(0,pidProvider,1)))	
	If (codSexo = "") Return ""		
	Return $$SQLGetAppParamDesc("SEX~"_codSexo)
	;
SQLDiaSemana(pData)
	If pData = "" Return ""
	If ($Length(pData,"/")>1) Set pData = $ZDAteH(pData,10)
	Return $ZDate(pData,10)
	;
GetMEDReservaHorarioTemp(pCodigoCheq, pDataAtend, pHoraAtend, pTipo = 20) 
	;pTipo =  20: Profissional
	;pTipo =  30: Grupo de Agendamento
	; 
	Return $Data(^MEDReservaHorarioTemps(0,pTipo,pCodigoCheq,pDataAtend,pHoraAtend))
	;
GetMEDPatientFone(pCodaciente) 
	If (pCodaciente = "") Return ""
	Set objMEDPatient = $Get(^MEDPatient(0,pCodaciente,1)) 
	Set numeroFone = $$$MEDPatientTel(objMEDPatient)
	If ($$$MEDPatientFREE2(objMEDPatient) '= "") {
		Set numeroFone = numeroFone _$Select(numeroFone="":"",1:" / ")_$$$MEDPatientFREE2(objMEDPatient)
	}
	Return numeroFone
	;
GetAgendaUnidade(pCodProfissional, pSequencia)
	If (pCodProfissional = "" || (pSequencia = "")) Return ""
	Set codUnidade = $$$MEDProviderAgendaUnidade($Get(^MEDProviderAgenda(0, pCodProfissional, pSequencia, 1)))
	Return codUnidade
	;
GetAgendaLocal(pCodProfissional, pSequencia)
	If (pCodProfissional = "" || (pSequencia = "")) Return ""
	Set codSala = $$$MEDProviderAgendaLocal1($Get(^MEDProviderAgenda(0, pCodProfissional, pSequencia, 1)))
	Return codSala
	;
GetVARSalasAtendimentosUnidade(pCodSala)
	If (pCodSala = "") Return ""
	Set codUnidade = $$$VARSalasAtendimentosUnidade($Get(^VARSalasAtendimentos(0, pCodSala, 1)))
	Return codUnidade
	;
GetCodSalasProfissional(pCodProfissional, pDataAtendimento, pHoraAtendimento)
	If (pCodProfissional = "" || (pDataAtendimento = "") || (pHoraAtendimento = "")) Return ""
	Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(0, pCodProfissional, pDataAtendimento, pHoraAtendimento, 1))
	Set referenciaPai = $$$MEDProviderAgendaHorarioReferenciaPai(objMEDProviderAgendaHorario)
	Set objMEDProviderAgenda = $Get(^MEDProviderAgenda(0, pCodProfissional, referenciaPai, 1))
	Set local1 = $$$MEDProviderAgendaLocal1(objMEDProviderAgenda)
	Return local1
	;
GetDescSalasProfissional(pCodProfissional, pDataAtendimento, pHoraAtendimento)
	If (pCodProfissional = "" || (pDataAtendimento = "") || (pHoraAtendimento = "")) Return ""
	Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(0, pCodProfissional, pDataAtendimento, pHoraAtendimento, 1))
	Set referenciaPai = $$$MEDProviderAgendaHorarioReferenciaPai(objMEDProviderAgendaHorario)
	Set objMEDProviderAgenda = $Get(^MEDProviderAgenda(0, pCodProfissional, referenciaPai, 1))
	Set local1 = $$$MEDProviderAgendaLocal1(objMEDProviderAgenda)
	Return $$GetDescSalasAtendimentos(local1)	
	;
GetAgendaIntervalo(pCodProfissional, pSequencia)
	Set rHoraIntervaloIni = "", rhoraIntervaloFim = ""
	If (pCodProfissional = "" || (pSequencia = "")) Return ""
	Set rHoraIntervaloIni = $$$MEDProviderAgendaIntervaloInicio($Get(^MEDProviderAgenda(0, pCodProfissional, pSequencia, 1)))
	Set rhoraIntervaloFim = $$$MEDProviderAgendaIntervaloFim($Get(^MEDProviderAgenda(0, pCodProfissional, pSequencia, 1)))
	Return $$$OK
	;
GetEnderecoUnidade(pCodUnidade)
	If (pCodUnidade = "") Return ""
	Set endereco = ""
	Set objWWW0121 			= $Get(^WWW0121(0, 0, pCodUnidade, 1))
	Set nomeLocal  			= $$$WWW0121LocationName(objWWW0121)
	Set logradouro 			= $$$WWW0121Street(objWWW0121)
	Set numeroEndereco 	= $$$WWW0121Numero(objWWW0121)
	Set complemento 		= $$$WWW0121Complemento(objWWW0121)
	Set bairro 					= $$$WWW0121CompanyName1(objWWW0121)
	Set cidade 					= $$$WWW0121City(objWWW0121)
	Set estado 					= $$$WWW0121FREE2(objWWW0121)
	Set cEP 						= $$$WWW0121Zipcode(objWWW0121)
	Set endereco = nomeLocal
	If (logradouro '= "") {
		Set endereco = endereco _ "<br>" _ logradouro_", "_numeroEndereco_" "_complemento
		Set endereco = endereco _ "<br>" _ bairro_" - "_cidade_"/"_estado
		Set endereco = endereco _ "<br>" _ "CEP: "_cEP
	}
	Return endereco
	;
GetResumoPreRequisitoProduto(pCodProcedimento)
	If (pCodProcedimento = "") Return ""
	Return $$$INARTResumodoPreRequisito($Get(^INART(0, pCodProcedimento, 1)))
	;
GetINARTSalesPrice(pCodItem)
	If (pCodItem = "") Return 0	
	Return +$$$INARTSalesPrice($Get(^INART(0, pCodItem, 1)))
GetOrganizacaoNome(pCodOrganizacao)
	new (pCodOrganizacao)
	If (pCodOrganizacao = "") quit ""
	Set objOrganizacao  = $Get(^FATOrganizacao(0, pCodOrganizacao, 1))
	Set nome 			= $$$FATOrganizacaoNome(objOrganizacao)
	quit nome
	;
GetOrganizacaoPai(pCodOrganizacao)
	new (pCodOrganizacao)
	If (pCodOrganizacao = "") quit ""
	Set objOrganizacao  = $Get(^FATOrganizacao(0, pCodOrganizacao, 1))
	Set pCodOrganizacao	= $$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	set nome = ""
	for {
		quit:pCodOrganizacao=""
		if nome'="" set nome = " > "_nome
		set nome = $$GetOrganizacaoNome(pCodOrganizacao)_nome
		Set objOrganizacao  = $Get(^FATOrganizacao(0, pCodOrganizacao, 1))
		Set pCodOrganizacao	= $$$FATOrganizacaoOrganizacaoPai(objOrganizacao)
	}
	quit nome
	;
FormataCNPJ(pCNPJ)
	If (pCNPJ = "") quit pCNPJ
	if pCNPJ'=14 quit pCNPJ
	set pCNPJ = $extract(pCNPJ,1,2)_"."_$extract(pCNPJ,3,5)_"."_$extract(pCNPJ,6,8)_"/"_$extract(pCNPJ,9,12)_"-"_$extract(pCNPJ,13,14)
	quit pCNPJ
	;
GetDescTratamentoMAPPA(codPaciente,cid,consulta,onlyCode="")
	new (codPaciente,cid,consulta,onlyCode)
	for {
		quit:(consulta="")||(consulta=0)
		set tratamento = ##class(VAR.CSP.MAPPA).recValorSalvo(codPaciente, cid, consulta, 1, "TRAT")
		set regime 	   = $piece(tratamento,"~",1)
		set regime 	   = $piece(regime,";",2)
		if regime'="" quit 
		set consulta = ##class(VAR.CSP.MAPPA).recConsultaAnterior(codPaciente,consulta)
	}
	if regime'="",onlyCode=""{
		set objTratamento = $get(^VARWorkFlowRegTera(0,cid,regime,1))
		set regime = $$$VARWorkFlowRegTeraDescricaodoRegimeTerapeutico(objTratamento)
	}
	quit regime
GetCicloTratamentoMAPPA(codPaciente,cid,consulta)
	new (codPaciente,cid,consulta)
	set regime = $$GetDescTratamentoMAPPA(codPaciente,cid,consulta,1)
	set ciclo=""
	if regime'=""{
		set ciclo = ##class(VAR.CSP.MAPPA).getCiclo(codPaciente, cid, consulta, regime)
	}
	quit ciclo
GetProfessionalName(usuario)
	new (usuario)
	if usuario="" quit ""
	set codProvider = $Order(^MEDProviders(0,1,$$Index^COMUtils(usuario),""))
	set nome = ""
	if codProvider=""{
		set obj = $get(^WWW013(0,usuario,1))
		set nome = $$$WWW013Name(obj)
	}else{
		set obj = $get(^MEDProvider(0,codProvider,1))
		set nome = $$$MEDProviderName(obj)
	}
	quit nome
GetDescricaoWorkFlow(cid,campo)
	new (cid,campo)
	set descricao = ""
	set codAtual = campo
	for {
		if codAtual="" quit
		set objAtu	= $get(^VARWorkFlowPEP(0,cid,codAtual,1))
		if descricao'="" set descricao = " - "_descricao
		set descricao 	= ##class(VAR.CSP.MAPPA).recDescricaoWorkFlow(cid,codAtual)_descricao
		set codAtual	= $piece($$$VARWorkFlowPEPPredecessor(objAtu),";",1)
	}
	set descricao = $replace(descricao,"<<<br>>>"," ")
	set descricao = $replace(descricao,"<br>"," ")
	quit descricao
	;
GetResultadoMAPPA(paciente,cid,consulta,sequencia)
	new (paciente,cid,consulta,sequencia)
	if (paciente="")||(cid="")||(consulta="")||(sequencia="") quit ""
	set resposta = ##class(VAR.CSP.MAPPA).recValorSalvo(paciente,cid,consulta,1,sequencia,0)
	set resposta2 = $piece(resposta,"~",2)
	set resposta = $piece(resposta,"~",1)
	if resposta="" quit ""
	set resposta = ##class(VAR.CSP.MAPPA).recRespostaTranslate(cid,sequencia,resposta,resposta2)
	set resposta = $replace(resposta,"<<<br>>>"," ")
	set resposta = $replace(resposta,"<br>"," ")
	quit resposta

GetDataHoraResultado(paciente,cid,consulta,sequencia)
	new (paciente,cid,consulta,sequencia)
	if (paciente="")||(cid="")||(consulta="")||(sequencia="") quit ""
	set resposta = ##class(VAR.CSP.MAPPA).recValorSalvo(paciente,cid,consulta,1,sequencia,0)
	set data = $piece(resposta,"~",3)
	set hora = $piece(resposta,"~",4)
	set resposta = ""
	if data'=""{
		set resposta = data_","_hora
	}
	quit resposta

GetProfessionalNameMAPPA(paciente,consulta)
	new (paciente,consulta)
	if paciente="" quit ""
	if consulta="" quit ""
	set objConsulta = ^VARPEPPremiumConsulta(0,paciente,consulta,1)
	set usuario = $$$VARPEPPremiumConsultaUsuarioResponsavelpeloFim(objConsulta)
	if usuario="" set usuario = $$$VARPEPPremiumConsultaUsuarioResponsavelpeloIni(objConsulta)
	set nome = $$GetProfessionalName(usuario)
	quit nome
GetEstadiamentoMAPPA(paciente,cid,consulta,estadiamento,somentePendente="")
	new (paciente,cid,consulta,estadiamento,vetorEstadiamento,somentePendente)
	if (paciente="")||(cid="")||(consul]]><![CDATA[ta="")||(estadiamento="") quit ""]]><![CDATA[
	kill ^mtemp.valoresEstadiamentoSalvos($job)
	kill ^mtemp.valoresSalvosPEP($job)
	if '$data(vetorEstadiamento(paciente,cid,consulta,estadiamento)){
		set objEstagio = ##class(VAR.CSP.MAPPA).calcEstadiamento(paciente,cid,consulta,1,estadiamento,+$h,1,0)
		set codEstagio = objEstagio.selEstagio
		set toolPendentes = objEstagio.estadiamentoPendente
		set vetorPendentes = objEstagio.estadiamentoVetor
		if vetorPendentes'=""{
			set texto = ""
			set iterator = vetorPendentes.%GetIterator()
			while iterator.%GetNext(.indice,.valor){
				if texto'="" set texto = texto_", "
				set texto = texto_valor.Grupo_" ("
				set texto2 = ""
				set iterator2 = valor.Linhas.%GetIterator()
				while iterator2.%GetNext(.indice2,.valor2){
					if texto2'="" set texto2 = texto2_", "
					set texto2 = texto2_valor2
					
				}
				set texto = texto_texto2_")"
			}
			set texto = $replace(texto,"<br>"," ")
			set vetorPendentes = texto
			;set vetorPendentes = vetorPendentes.%ToJSON()
		}
		set vetorEstadiamento(paciente,cid,consulta,estadiamento)=codEstagio_"|"_toolPendentes_"|"_vetorPendentes
	}
	set codEstagio = $piece(vetorEstadiamento(paciente,cid,consulta,estadiamento),"|",1)
	set toolPendentes = $piece(vetorEstadiamento(paciente,cid,consulta,estadiamento),"|",2)
	set vetorPendentes = $piece(vetorEstadiamento(paciente,cid,consulta,estadiamento),"|",3)
	set estagio="Estadiam. Pendente"
	if toolPendentes="<ul></ul>" set estagio="Estadiamento Não Calculável"
	if '$data(^VARPEPPremiumEstadiamento(0,paciente)){
		if codEstagio="" set estagio="Não realizado"
	}
	
	if somentePendente{
		if codEstagio'="" set vetorPendentes=""
		set estagio = vetorPendentes
	}else{
		if codEstagio'=""{
			set objEstagio 	= $get(^VARWorkFlowEstadiamentoEstagio(0,cid,estadiamento,codEstagio,1))
			set descEst 	= $$$VARWorkFlowEstadiamentoEstagioDescricao(objEstagio)
			set grupoRisco 	= $$$VARWorkFlowEstadiamentoEstagioGrupodeRisco(objEstagio)
			set estagio = descEst_" - "_grupoRisco
		}
	}
	quit estagio
GetDataHoraAdmissaoMAPPA(paciente,consulta)
	new (paciente,consulta)
	if (paciente="")||(consulta="") quit ""
	set objConsulta = ^VARPEPPremiumConsulta(0,paciente,consulta,1)
	set dataHora = $$$VARPEPPremiumConsultaDataHoradoIniciodaConsulta(objConsulta)
	if dataHora="" set dataHora = $$$VARPEPPremiumConsultaDataHoradoFimdaConsulta(objConsulta)
	quit dataHora
	;
GetTempoResultado(pCodItem)
	If (pCodItem = "") Return ""
	Set codExecutor = ""
	&SQL(
		Select Executor Into :codExecutor From SQLUser.VARManualExame
		Where Company = 0 And CodigoExame = :pCodItem
					And Situacao = 'A'
	)	
	Set tempoResultado = ""
	If (codExecutor '= "") {
		Set objVARManualExame = $Get(^VARManualExame(0, pCodItem, codExecutor, 1))
		Set tempoResultado = $$$VARManualExameTempoResultado(objVARManualExame)
	}
	Return $ZTime(tempoResultado,2)
	;
SQLGetEmailPaciente(codPaciente)
	If (codPaciente  = "") Return ""
	Return $$$MEDPatientEmail($Get(^MEDPatient(0, codPaciente, 1)))
	;
SQLGetTelefonePaciente(codPaciente)
	If (codPaciente  = "") Return ""
	Return $$$MEDPatientTel($Get(^MEDPatient(0, codPaciente, 1)))_"/"_$$$MEDPatientFREE2($Get(^MEDPatient(0, codPaciente, 1)))
	;
SQLGetEnderecoLocal(pCodLocal, pLinha)
	If (pCodLocal = "") Return ""		
	Set objWWW0121 = $Get(^WWW0121(0,0,pCodLocal,1))

	If (pLinha = 2) {
		Return $$$WWW0121Street(objWWW0121)_", "_$$$WWW0121Numero(objWWW0121)_" "_
					$$$WWW0121Complemento(objWWW0121)_" - "_$$$WWW0121CompanyName1(objWWW0121)	
	}
	If (pLinha = 3) {
		Return $$$WWW0121City(objWWW0121)_" - "_$$$WWW0121FREE2(objWWW0121)_" - "_$$$WWW0121Zipcode(objWWW0121)
	}
	If (pLinha = 4) {
		Return $$FormataFone^VARSQL($$$WWW0121Tel(objWWW0121))_" - "_$$$WWW0121Email(objWWW0121)
	}
	Return ""
	;
SQLFormatarValor(pValor)
	Return $FNumber(pValor,".",2)
	;
SQLGetEnderecoPaciente(pCodPaciente, pLinha)
	If (pCodPaciente = "") Return ""		
	Set objMEDPatient = $Get(^MEDPatient(0,pCodPaciente,1))
	If (pLinha = 1) {
		Return $$$MEDPatientStreet(objMEDPatient)_", "_$$$MEDPatientFREE4(objMEDPatient)_" "_
					$$$MEDPatientFREE3(objMEDPatient)_" - "_$$$MEDPatientFREE6(objMEDPatient)	
	}
	If (pLinha = 2) {
		Return $$$MEDPatientCity(objMEDPatient)_" - "_$$$MEDPatientState(objMEDPatient)_" - "_$$$MEDPatientZipCode(objMEDPatient)
	}
	Return ""
	;	
SQLGetRGPaciente(pCodPaciente)
	If (pCodPaciente = "") Return ""		
	Set objMEDPatient = $Get(^MEDPatient(0,pCodPaciente,1))
	Return $$$MEDPatientFREE7(objMEDPatient)
	;	
SQLGetHoraUnidade(pCodUnidade, pData)
	If (pCodUnidade = "" || (pData = "")) Return "~"
	;	
	Set objWWW0121 = $Get(^WWW0121(0, 0, pCodUnidade, 1))
	Set segundaSextaInicial = $$$WWW0121HorAberturaSegSexta(objWWW0121)
	Set segundaSextaFinal 	= $$$WWW0121HorFechamentoSegSexta(objWWW0121)
	Set funcSabados		 			= $$$WWW0121FuncionaSabados(objWWW0121)
	Set funcSabInicial 			= $$$WWW0121HorAberturaSabados(objWWW0121)
	Set funcSabFinal 				= $$$WWW0121HorFechamentoSabados(objWWW0121)
	Set funcDomingos 				= $$$WWW0121FuncionaDomingos(objWWW0121)
	Set funcDomInicial 			= $$$WWW0121HorAberturaDomingos(objWWW0121)
	Set funcDomFinal 				= $$$WWW0121HorFechamentoDomingos(objWWW0121)
	;
	Set diaSemana 					= $ZD(pData,10)
	;
	If (diaSemana = 0) { 
		If (+funcDomingos = 0) Return "~"
		Else  Return funcDomInicial_"~"_funcDomFinal
	}
	;
	If (diaSemana = 6) {
		If (+funcSabados = 0) Return "~"
		Else  Return funcSabInicial_"~"_funcSabFinal
	}
	;
	Return segundaSextaInicial_"~"_segundaSextaFinal
	;
GetINARTNecessidadeJejum(pCodItem)
	If (pCodItem = "") Return 0	
	Return +$$$INARTNecessidadeJejum($Get(^INART(0, pCodItem, 1)))
	;
GetMEDProviderForm(pCodProvider)
	If (pCodProvider = "") Return ""
	Set objMEDProvider = $Get(^MEDProvider(0, pCodProvider, 1))
	Set descProviderFormatado = $$$MEDProviderName(objMEDProvider)_" (CRM: "_$$$MEDProviderFREE3(objMEDProvider)_"/"_$$$MEDProviderLicenseNumber(objMEDProvider)_")"
	Return descProviderFormatado
	;
getItensCobraveisDesc(pItemCobravel)
	if pItemCobravel quit ""
	new item,desc
	set desc=""
	for i=1:1:$length(pItemCobravel,";"){
		set item = $piece(pItemCobravel,";",i)
		if item="" continue
		if desc'="" set desc = desc_", "
		set desc = desc_##class(VAR.CSP.FATTabelaComercial).recDescricaoINART(item)
	}
	quit desc
	;
getCategoriaItemDesc(pCodigoTabela,pCodigoCategoria)
	if (pCodigoTabela="")||(pCodigoCategoria="") quit ""
	set objCategoria = $get(^FATTabelaComercialCategoria(0,pCodigoTabela,pCodigoCategoria,1))
	set descCategoria = "("_pCodigoCategoria_") "_$$$FATTabelaComercialCategoriaDescricao(objCategoria)
	quit descCategoria
	;
recPreLote(pFatura,job="",loteAtual = "")
	new (pFatura,job,loteAtual)
	set numero = ""
	set query = "select codigodoprelote from SQLUser.FATPreLoteFaturas As PreLote where PreLote.Company=0 and %upper(PreLote.NumerodaFatura)='"_$replace(pFatura,"/"," ")_"' order by +codigodoprelote desc"
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set numero = rs.%Get("codigodoprelote")
		if job'=""{
			if $data(^mtemp.FATPreLote(job,pFatura)) {
				set numero = -1
				quit
			}
			if numero=loteAtual {
				set numero = ""
				quit
			}
		}
	}
	quit numero

recLote(pFatura,job="")
	new (pFatura,job)
	set numero = ""
	if job'="",pFatura'="" {
		set achou = 0
		set codAgendamento=""
		for {
			set codAgendamento = $order(^mtemp.FATLote(job,codAgendamento)) quit:codAgendamento=""
			set sequencia=""
			for {
				set sequencia = $order(^mtemp.FATLote(job,codAgendamento,sequencia)) quit:sequencia=""
				set obj = $get(^mtemp.FATLote(job,codAgendamento,sequencia,1))
				if $$$FATLoteFaturasCodigodoPaciente(obj)'=""{
					set numFatura		= $$$FATLoteFaturasNumerodaFatura(obj)
				}else{
					Set objVARAgendamentoProcedimentos = $Get(^VARAgendamentoProcedimentos(0, codAgendamento, sequencia, 1))
					set numFatura			= $$$VARAgendamentoProcedimentosControleAdmissao(objVARAgendamentoProcedimentos)
				}
				if pFatura=numFatura{
					set achou = 1
				}
				quit:achou
			}
			quit:achou
		}
		if achou quit -1
		
	}
	set query = "select codigodolote from SQLUser.FATLoteFaturas where Company=0 and %upper(NumerodaFatura)='"_$replace(pFatura,"/"," ")_"' "
	set rs = ##class(%SQL.Statement).%ExecDirect("",.query)
	while(rs.%Next()){
		set numero = rs.%Get("codigodolote")
	}
	quit numero

SQLGetFormatDateTimeDX(date)	//Formato de Data 2007/01/30 HH:MM:SS
	quit:($get(date)="") ""
	quit $replace($ZDATETIME(date,3),"-","/")

SQLGetFATModeloNotaFiscal(pCodModelo)
	quit:pCodModelo="" ""
	set obj = $get(^FATModeloNotaFiscal(0,pCodModelo,1))
	set nome = $$$FATModeloNotaFiscalNome(obj)
	quit nome
	;
SQLGetPatientCPF(pidPaciente)
	If pidPaciente = "" Return ""
	Return $Piece($Get(^MEDPatient(0,pidPaciente,1)),"~",11)		
	;
GetDescCondPagamento(pCodigo)
	If (pCodigo = "") Return ""
	Return $$$VARCondicoesPagamentoDescricao($Get(^VARCondicoesPagamento(0,pCodigo,1))) 	
	;
GetValorProcedimento(pCodigo, pCodAgendamento = "", pSequencia = "")
	If (pCodigo = "") Return 0
	Return ##Class(VAR.CSP.VARCadOrcamento).GetValorProcedimento(pCodigo, pCodAgendamento, pSequencia)
	;	
GetDataAtual()
	Return $ZDate(+$Horolog,4)
	;	
GetValorTotalAdmissao(pCodigodoAgendamento, pControleAdmissao, pYBED)
	If (pCodigodoAgendamento = "" || (pControleAdmissao = "") || ( pYBED = "")) Return 0
	Set valorTotal = 0
	Set sequencia = ""
	For {
		Set sequencia = $Order(^VARAgendamentoProcedimentos(0, pCodigodoAgendamento, sequencia))
		Quit:sequencia=""
		
		Set objeto = $Get(^VARAgendamentoProcedimentos(0, pCodigodoAgendamento, sequencia, 1))
		If ($$$VARAgendamentoProcedimentosDataHoraAdmissao(objeto)="") Continue
		If ($$$VARAgendamentoProcedimentosControleAdmissao(objeto)'=pControleAdmissao) Continue
		If ($$GetFATOrganizacaoEparticular^VARSQL($$$VARAgendamentoProcedimentosPlanodeSaude(objeto)) = 0) Continue
		
		Set codProcedimento = $$$VARAgendamentoProcedimentosProcedimento(objeto)
		Set codPplanoSaude 	= $$$VARAgendamentoProcedimentosPlanodeSaude(objeto)
		Set valor = $Piece($Get(^mtemp.ValorProcImp(pYBED,codPplanoSaude,codProcedimento)),"~",1)
		Set valorTotal = valorTotal + valor
	} 
	Return valorTotal	
	;
GetFATOrganizacaoEparticular(pCodOrganizacao)
	If (pCodOrganizacao = "") Return 0
	Set objOrganizacao  = $Get(^FATOrganizacao(0, pCodOrganizacao, 1))
	Return +$$$FATOrganizacaoEparticular(objOrganizacao)	
	;
SQLGetPatientCNS(codPaciente)
	If (codPaciente = "") Return ""
	Return $$$MEDPatientCartaoNacionaldeSaude($Get(^MEDPatient(YM, codPaciente, 1)))	
	;
SQLGetValorProcedimento(codProcedimento, codPlanoSaude, pYBED)
	If (codProcedimento = "" || (codPlanoSaude = "") || (pYBED = "")) Return 0
	Return $Piece($Get(^mtemp.ValorProcImp(pYBED,codPlanoSaude,codProcedimento)),"~",1)
	;
GetDescricaoSearchProduto(pidItem)
	If (pidItem = "") Return ""
	Set descricao = "("_pidItem_") "_$$SQLGetDescricaoProduto(pidItem)
	If ($$$INARTDescItemPedido($Get(^INART(0,pidItem,1)))'="") {
		Set descricao = descricao	 _" | "_$$$INARTDescItemPedido($Get(^INART(0,pidItem,1)))
	}
	If ($Data(^INARTAlias(0,pidItem))) {
		Set sequencia = ""
		For {
			Set sequencia = $Order(^INARTAlias(0,pidItem, sequencia))
			Quit:sequencia=""
			Set objeto = ^INARTAlias(0,pidItem, sequencia, 1)
			Set descricao = descricao _" | "_$$$INARTAliasSinonimo(objeto)	
		}
	}
	Return descricao
	;
GetCriadoPorAdmissao(pCodAdmissao)
	If (pCodAdmissao = "") Return ""
	Return $$$VARAgendamentoAdmissaoCriadoPor($Get(^VARAgendamentoAdmissao(0, pCodAdmissao, 1)))
	;
GetFontePagadora(pCodConvenio, pDesc = 0)
	If (pCodConvenio = "") Return ""
	Set codFontePagadora = "", xCodConvenio = pCodConvenio
	For {
		Set objFATOrganizacao = $Get(^FATOrganizacao(0, xCodConvenio, 1))
		If (+$$$FATOrganizacaoFontePagadoraAtivo(objFATOrganizacao)) {
			Set codFontePagadora = xCodConvenio
			Quit	
		} 
		Set xCodConvenio = $$$FATOrganizacaoOrganizacaoPai(objFATOrganizacao)
		Quit:xCodConvenio=""
	}
	if (pDesc = 1 && (codFontePagadora '= "")) {
		Set objFATOrganizacao = $Get(^FATOrganizacao(0, codFontePagadora, 1))
		return $$$FATOrganizacaoNome(objFATOrganizacao)
	}
	Return codFontePagadora	
	;
GetCentroCustoItem(pCodItem)
	If (pCodItem = "") Return ""
	Return $$$INARTCentrodeCusto($Get(^INART(0, pCodItem, 1)))	
	;
GetSenhaAgendamento(pNumAdmissaoControle)
	If (pNumAdmissaoControle = "") Return ""
	Set objVARAgendamentoAdmissao = $Get(^VARAgendamentoAdmissao(0, pNumAdmissaoControle, 1))
	Set senha = +$Piece(pNumAdmissaoControle,"/",2)_$$$VARAgendamentoAdmissaoCriadoData(objVARAgendamentoAdmissao)
	Return senha
	;
GetPrazoEntrega(pCodAgendamento, pSequencia, pTempo)
	If (pCodAgendamento = "" || (pSequencia = "")) Return 0
	Set objVARAgendProc 	= $Get(^VARAgendamentoProcedimentos(0, pCodAgendamento, pSequencia, 1))
	Set codProfissional 	= $$$VARAgendamentoProcedimentosProfissional(objVARAgendProc)
	Set codSala						= $$$VARAgendamentoProcedimentosCodigodaSala(objVARAgendProc)	
	Set horadeAtendimento	= $$$VARAgendamentoProcedimentosHoraAtendimento(objVARAgendProc)
	Set datadeAtendimento	=	$$$VARAgendamentoProcedimentosDataAtendimento(objVARAgendProc)
	Set dataAdmissao			= +$$$VARAgendamentoProcedimentosDataHoraAdmissao(objVARAgendProc)
	;
	Set codUnidade = ""
	If (codProfissional '= "") {
		Set objMEDProviderAgendaHorario = ""
		If (codProfissional '= "" && (horadeAtendimento '= "") && (datadeAtendimento '= "")) {
			Set objMEDProviderAgendaHorario = $Get(^MEDProviderAgendaHorario(0, codProfissional, datadeAtendimento, horadeAtendimento, 1))
		}
		Set referenciaPai = $$$MEDProviderAgendaHorarioReferenciaPai(objMEDProviderAgendaHorario)
		Set objMEDProviderAgenda = ""
		If (referenciaPai '= "") {
			Set objMEDProviderAgenda = $Get(^MEDProviderAgenda(YM, codProfissional, referenciaPai, 1))
		}
		Set codUnidade	= $$$MEDProviderAgendaUnidade(objMEDProviderAgenda)
	}ElseIf (codSala '= ""){
		Set objVARSalasAtendimentos = $Get(^VARSalasAtendimentos(0, codSala, 1))
		Set codUnidade	= $$$VARSalasAtendimentosUnidade(objVARSalasAtendimentos)
	}
	Set:codUnidade="" codUnidade = 1
	Set objWWW0121 = $Get(^WWW0121(0, 0, codUnidade, 1))
	;
	Set prazoHor = (pTempo\3600)+$Select((pTempo#3600)>0:1,1:0)
	Set prazoDia = (prazoHor\24)+$Select((prazoHor#24)>0:1,1:0)
	Set prazoDia = prazoDia + 1
	;	
	For dia = 1 : 1 : prazoDia {
		For {
			Set dataAdmissao =	dataAdmissao + 1
			If ($ZDate(dataAdmissao,10) = 0 && (+$$$WWW0121FuncionaDomingos(objWWW0121) = 0 )) Continue
			If ($ZDate(dataAdmissao,10) = 6 && (+$$$WWW0121FuncionaSabados(objWWW0121) = 0 )) Continue
			If ($Data(^VARDiasUnidadeNaoFunciona(0, codUnidade, dataAdmissao, 1))) Continue
			Quit
		}
	}
	;
	Return dataAdmissao	
	;
FormataFone(pFone) 
	If (pFone = "") Return ""
	Set fFone = ""
	Set xFone = $Tr(pFone,"()+- ","")
	If ($Length(xFone)=12) {
		Set fFone = "+"_$Extract(xFone,1,2)_" ("_$Extract(xFone,3,4)_") "_$Extract(xFone,5,8)_"-"_$Extract(xFone,9,12)		
	}ElseIf ($Length(xFone)=13) {
		Set fFone = "+"_$Extract(xFone,1,2)_" ("_$Extract(xFone,3,4)_") "_$Extract(xFone,5,9)_"-"_$Extract(xFone,10,13)		
	}ElseIf ($Length(xFone)=10) {
		Set fFone = "+55"_" ("_$Extract(xFone,1,2)_") "_$Extract(xFone,3,6)_"-"_$Extract(xFone,7,10)		
	}ElseIf ($Length(xFone)=11) {
		Set fFone = "+55"_" ("_$Extract(xFone,1,2)_") "_$Extract(xFone,3,7)_"-"_$Extract(xFone,8,11)		
	}Else{
		Return pFone
	}
	Return fFone
	;
SQLGetCRMNumMedico(idMEDProvider)
	If (idMEDProvider = "") Return ""
	Return $$$MEDProviderSSN($Get(^MEDProvider(0,idMEDProvider,1)))
	;
SQLGetCRMEstadoMedico(idMEDProvider)
	If (idMEDProvider = "") Return ""
	Return $$$MEDProviderFREE3($Get(^MEDProvider(0,idMEDProvider,1)))
	;		
GetDescTabelaComercial(pCodTabela)
	If (pCodTabela = "") Return ""
	Return $$$FATTabelaComercialNome($Get(^FATTabelaComercial(0,pCodTabela,1)))
	;
	
GetConteudoRelatCompl(pConteudo,pAdmissao,pSeq,pCod,pTipo,pCodCID="")
	set nomePaciente 		= ""
	set newConteudo  		= ""
	set descExam 		 		= ""
	set descMedicamento = ""
	if (pConteudo '= "" && pAdmissao '= "" && pSeq '= "" && pCod '= ""){
		if (pTipo = 2){
			for i=1:1:$LENGTH(pCod,"||"){
				set descExam = descExam_$S(descExam="":"",i=($L(pCod,"||")):" e ",1:", ")_$$getDescExame($p(pCod,"||",i))
			}
		}
		if (pTipo = 4){
				for i=1:1:$LENGTH(pCod,"||"){
				set descMedicamento = descMedicamento_$S(descMedicamento="":"",i=($L(pCod,"||")):" e ",1:", ")_$$GetDescMedicamento($p(pCod,"||",i),1)
			}
		}
		set nomePaciente = $$$MEDAdmissionFREE6($Get(^MEDAdmission(0,pAdmissao,1)))
	}
	set ]]><![CDATA[newConteudo = $replace(pConteudo,"<NOME>",nomePaciente)
	set newConteudo = $replace(newConteudo,"<EXAME>",descExam)
	set newConteudo = $replace(newConteudo,"<MEDICAMENTO>",$ZCONVERT(descMedicamento,"U"))
	set newConteudo = $replace(newConteudo,"<CID>",$$GetDescDiagnostico(pCodCID))
	return newConteudo
	;
	
GetDescMedicamento(codMedicamento,OnlySubDescription=0)
	if codMedicamento="" quit ""
	set medicamento = codMedicamento
	if $data(^VARMedicamento(0,codMedicamento,1)){
		set obj = $get(^VARMedicamento(0,codMedicamento,1))
		if OnlySubDescription=1{
			set medicamento = $$$VARMedicamentoNomeAlpha(obj)
		}else{
			set medicamento = $$$VARMedicamentoNome(obj)_" "_$$$VARMedicamentoSubDescricao(obj)_" ("_$$$VARMedicamentoDescricao(obj)_")"
		}
	}
	quit medicamento
	;
	
VerifGroupList(list1,list2)
	k ^mtemp.CodMed
	set list1 = $LISTFROMSTRING(list1,";")
	set list2 = $LISTFROMSTRING(list2,";")
	set flag = 0
	for i=1:1:$LISTLENGTH(list1){
		quit:(flag = 1)
		for j=1:1:$LISTLENGTH(list2){
			if ($LIST(list1,i)=$LIST(list2,j)){
				set ^mtemp.CodMed = $LIST(list1,i)
				set flag = 1 
				quit
			}	
		}
	}
	quit flag
	;
SQLGetCPFPaciente(pCodPaciente)
	If (pCodPaciente = "") Return ""		
	Set objMEDPatient = $Get(^MEDPatient(0,pCodPaciente,1))
	Return $$$MEDPatientSSN(objMEDPatient)	
	;
GetRegistroANS(pCodProcedimento, pCodConvenio, pCodAgendamento, pSeqAgendamento)
	If (pCodProcedimento = "" || (pCodConvenio = "") || (pCodAgendamento = "") || (pSeqAgendamento = "")) Return ""
	Set codPlano = $$$VARAgendamentoProcedimentosPlanodeSaude($Get(^VARAgendamentoProcedimentos(0, pCodAgendamento, pSeqAgendamento, 1)))
	Set xObjRegraComercial = ##Class(VAR.util.FATRegrasComerciais).%New(pCodProcedimento, codPlano, pCodAgendamento, pSeqAgendamento)
	If ('$IsObject(xObjRegraComercial)) Return ""
	Return xObjRegraComercial.CodigoExecutante
	;
GetDescModeloLote(pCodModelo="")
	If (pCodModelo = "") Return ""		
	Return $$$FATModeloLoteDescricao($Get(^FATModeloLote(0, pCodModelo, 1)))
	;
GetVARGraduacaoToxicidade(pCodGrau="")
	Return:(pCodGrau="") ""
	Return $piece($get(^VARGraduacaoToxicidade(0,pCodGrau,1)), "~", 2)
	
capitalize(text="")
 Return:text="" ""
 Return $zconvert(text,"w")
 	;
GrupoRelatorio(pConteudo = "", pTipoRetorno = 0)
	If (pConteudo = "") Return ""
	;
	Set retorno 	= ""
	Set numNivel 	= $Length(pConteudo,"||")
	;
	Set (retorno0, retorno1) = ""
	If ($Piece(pConteudo,"||",2) = "VARHabilidade") {
		Set retorno0 		= "Profissional - "_$Piece(^VARPARA(0,"TIPOHABILIDADE","PT", $Piece(pConteudo,"||",3), 1),"~",1)
		Set retorno1 		= "Profissional - "_$Piece(^VARPARA(0,"TIPOHABILIDADE","PT", $Piece(pConteudo,"||",3), 1),"~",1)
	}ElseIf ($Piece(pConteudo,"||",2) = "VARIdioma") {
		Set retorno0 		= "Profissional - Idioma"
		Set retorno1 		= "Profissional - Idioma"

	}ElseIf (numNivel = 3) {
		Set objWWWW001 	= $Get(^WWW001(0, $Piece(pConteudo,"||",2), 1))
		Set retorno0 		= $Piece($$$WWW001ClassDescription(objWWWW001)," - ",2)
		Set retorno1 		= retorno0
	}ElseIf (numNivel > 3) {
		Set yClasse 				= $Piece(pConteudo,"||",2)
		Set yColuna 				= $Piece(pConteudo,"||",3)
		Set yIndex 					= $Order(^WWW003s(0,3,$ZConvert(yClasse,"U"),$ZConvert(yColuna,"U"),yClasse,""))
		Set objWWWW001 			= $Get(^WWW001(0,yClasse,1))
		Set objWWW003Grupo 	= $Get(^WWW003(0,yClasse,yIndex,1))
		Set retorno0 				= $Piece($$$WWW001ClassDescription(objWWWW001)," - ",2)_" - "_$$$WWW003CaptionInForms(objWWW003Grupo)
		Set retorno1 				= $$$WWW003CaptionInForms(objWWW003Grupo)
	}
	;
	If (pTipoRetorno = 0) Return retorno0
	Return retorno1
	;	
GetHabilidade(pCodProf = "", pHabilidade = "", pRet = 0, pTipoDados = "T")	
	New (pCodProf, pHabilidade, pRet, pTipoDados)
	If (pCodProf = "" || (pHabilidade = "")) Return ""

	Set retorno = "", retorno1 = ""
	If ($Piece(pHabilidade,"_",3)="Grupo") {
		Set meuSQL = "Select * From SQLUser.VARHabilidades Where Company = 0 "
		Set meuSQL = meuSQL _ "And Tipo = "_$Piece(pHabilidade,"_",2)_" " 
		Set meuSQL = meuSQL _ "Order By Pacote, Descricao "
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	 	While (rSet.%Next()) {
			Set objetoPer = $Get(^VARBancoProfissionalHabilidades(0, pCodProf, rSet.%Get("Sequencia"), 1))
			If ($$$VARBancoProfissionalHabilidadesNivel(objetoPer)'="") {
				Set retorno = retorno _ 
											$Select(retorno="":"",1:" | ") _ 
											rSet.%Get("Descricao") _ 
											" - "_
											$$SQLGetUserParamDescVAR("NIVELHABILIDADE~"_$$$VARBancoProfissionalHabilidadesNivel(objetoPer))
				If (pTipoDados = "T") {
					Set retorno1 = retorno1_";"_rSet.%Get("Sequencia")_"-"_$$$VARBancoProfissionalHabilidadesNivel(objetoPer)
				}ElseIf (pTipoDados = "D") {
					Set retorno1 = retorno1_";"_rSet.%Get("Sequencia")
				}Else{
					Set retorno1 = retorno1_";"_$$$VARBancoProfissionalHabilidadesNivel(objetoPer)
				}
				
			}
	 	}
	}Else{
		Set objetoPer = $Get(^VARBancoProfissionalHabilidades(0, pCodProf, $Piece(pHabilidade,"_",3), 1))
		If ($$$VARBancoProfissionalHabilidadesNivel(objetoPer)'="") {
			Set retorno = $$SQLGetUserParamDescVAR("NIVELHABILIDADE~"_$$$VARBancoProfissionalHabilidadesNivel(objetoPer))
		}
	}
	If (pRet = 1) Quit retorno1_";"
	Quit retorno
	;	
GetIdioma(pCodProf = "", pHabilidade = "", pRet = 0)	
	New (pCodProf, pHabilidade, pRet)
	If (pCodProf = "" || (pHabilidade = "")) Return ""

	Set retorno = ""
	Set retorno1 = ""
	If ($Piece(pHabilidade,"_",2)="Grupo") {
		Set meuSQL = "Select * From SQLUser.VARPARA Where Company = 0 And ParameterName = 'IDIOMA' "
		Set meuSQL = meuSQL _ "And %Upper(Text) <> 'OUTRAS' Order By Text" 
		Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
	 	While (rSet.%Next()) {
			If '($Data(^VARBancoProfissionalIdioma(0, pCodProf, rSet.%Get("SearchWord")))) Continue
			Set objetoPer = $Get(^VARBancoProfissionalIdioma(0, pCodProf, rSet.%Get("SearchWord"), 1))
			
			Set xComp = $$SQLGetUserParamDescVAR("NIVELIDIOMA~"_$$$VARBancoProfissionalIdiomaCompreensao(objetoPer))
			Set xEsc 	= $$SQLGetUserParamDescVAR("NIVELIDIOMA~"_$$$VARBancoProfissionalIdiomaEscrita(objetoPer))
			Set xFala = $$SQLGetUserParamDescVAR("NIVELIDIOMA~"_$$$VARBancoProfissionalIdiomaFala(objetoPer))
			
			Set grupoD = ""
			Set:+$Piece(pHabilidade,"_",3)=1 grupoD = grupoD _$Select(grupoD="":"",1:" - ") _ xComp
			Set:+$Piece(pHabilidade,"_",4)=1 grupoD = grupoD _$Select(grupoD="":"",1:" - ") _ xEsc
			Set:+$Piece(pHabilidade,"_",5)=1 grupoD = grupoD _$Select(grupoD="":"",1:" - ") _ xFala
			
			Set retorno = retorno _ $Select(retorno="":"",1:" | ") _ rSet.%Get("Text") _" (" _ grupoD _ ")"
			Set retorno1 = retorno1_";"_rSet.%Get("SearchWord") 
	 	}
	}Else{
		Set objetoPer = $Get(^VARBancoProfissionalIdioma(0, pCodProf, $Piece(pHabilidade,"_",2), 1))
		If ($Piece(pHabilidade,"_",3)="Compreensao") {
			Set retorno = $$SQLGetUserParamDescVAR("NIVELIDIOMA~"_$$$VARBancoProfissionalIdiomaCompreensao(objetoPer))
		}ElseIf ($Piece(pHabilidade,"_",3)="Fala") {
			Set retorno = $$SQLGetUserParamDescVAR("NIVELIDIOMA~"_$$$VARBancoProfissionalIdiomaFala(objetoPer))
		}ElseIf ($Piece(pHabilidade,"_",3)="Escrita") {	
			Set retorno = $$SQLGetUserParamDescVAR("NIVELIDIOMA~"_$$$VARBancoProfissionalIdiomaEscrita(objetoPer))
		}
	}
	If (pRet = 1) Quit retorno1_";"
	Quit retorno
	;]]></Routine>
</Export>