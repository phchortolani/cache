<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMTree2" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMTree2
	;-------------------------------------------------------------------------------
	; This MAC routine displays tree information. A dummy template 
	; exists at the bottom of this routine to indicate usage.
	;
	;History:
	; 10-Dec-2004	GRF		SR11208 : Replace include ref to "SYSDisc" with "COMSYS"
	; 							which now includes "Storage" definition as well.
	; 24-May-2004	Paul K	Added "TopNode" macro.
	; 03-Sep-2003	Paul K	bug with Override ID in show node
	; 01-Sep-2003	Paul K	Added OverRide ID prop to get around limitations
	; 							of multi key trees.
	; 21-Aug-2003	Paul K	Modified storage to use YUSER instead of $job
	;-------------------------------------------------------------------------------
	#include COMSYS
	#define TopNode "TopNode"
 
DisplayGlobal(Heading,Global,StartKey)
	;-------------------------------------------------------------------------------
	; Displays any complex data in Tree view
	;-------------------------------------------------------------------------------
	new cmd,result
	
	set result=0
	set cmd="s result=$d("_Global_"("_StartKey_"))"
	xecute cmd
	
	if (result) {
		write "&nbsp;<FONT SIZE=2><B>"_Heading_"</B></FONT>"
		do StartTree($get(YPARA))
		do DisplayGlobalNode(Global,StartKey,"")
		do StopTree($$$YES)
	}
	quit
 
DisplayGlobalNode(Global,StartKey,NodeKey)
	new NewKey,ChildKey,cmd,ChildData
	
	set ChildKey=""
	for {
		if (NodeKey'="") {
			set NewKey=NodeKey_","""_ChildKey_""""
		} else {
			set NewKey=""""_ChildKey_""""
		}
		set cmd="s ChildKey=$o("_Global_"("_StartKey_","_NewKey_"))"
		xecute cmd
		quit:ChildKey=""
		
		if (NodeKey'="") {
			set NewKey=NodeKey_","""_ChildKey_""""
		} else {
			set NewKey=""""_ChildKey_""""
		}
		set ChildData=""
		set cmd="s ChildData=$g("_Global_"("_StartKey_","_NewKey_"))"
		xecute cmd
		
		do AddNode($translate(NodeKey,""""),$translate(NewKey,""""),ChildKey,ChildKey,"","","",0,ChildData,1)
		do DisplayGlobalNode(Global,StartKey,NewKey)
	}
 
	quit
 
CallBack(pidNode,pstrValue)
    ;-------------------------------------------------------------------------------
    ; Keep the storage values in line with those on screen
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 06-Jul-2005	shobby	SR??
    ;-------------------------------------------------------------------------------
    new strBranch,strOnClick,strLink
    
	if pstrValue="none" {
		kill $$$Storage("Expand",pidNode)
	} else {
		set $$$Storage("Expand",pidNode)=""
	;;	set strBranch=$$ShowBranch(pidNode,plngLevel,blnLowerNodes,$data($$$Storage("Expand",idNode)),plstEndStatus,pblnFixedTree)
		set strBranch=$$ShowBranch(pidNode,2,0,$data($$$Storage("Expand",pidNode)),"",1)
		set strBranch=strBranch_$$ShowImage("")
	;	set strLink=$$ShowLink
	;	write YCR,"ctAddNode('"_pidNode_"','aaaaa',1,'aaaaa','"_strBranch_"','"_YGIF_"');"
	}
	quit 1
 
 
StartTree(pidLastExpanded)
		
	if pidLastExpanded'="" {
		if $data($$$Storage("Expand",pidLastExpanded)) {
			kill $$$Storage("Expand",pidLastExpanded)
		} else {
			set $$$Storage("Expand",pidLastExpanded)=""
		}
	}
	do CreateJavascript^COMTree2Javascript()
	quit
 
StopTree(pblnIdOrder,pidHeadNode="",pblnFixedTree=$$$NO)
	;-------------------------------------------------------------------------------
	;
	; History:
    ; 10-Feb-2005	RPW		Added parameter pblnFixedTree which will stop the HTML
	; 							being written out for the + and - on the tree view.
	;-------------------------------------------------------------------------------
	if pidHeadNode="" set pidHeadNode=$$$TopNode
	write YCR,"<NOBR>"
	write YCR,"<TABLE"
 	write YCR,"BORDER=1"
	write YCR,"NOWRAP"
 	write YCR,"WIDTH=100%"
 	write YCR,"CELLSPACING=0>"
 	
	write YCR,"<TABLE"
 	write YCR,"BORDER=0"
	write YCR,"NOWRAP"
 	write YCR,"WIDTH=100%"
 	write YCR,"bgcolor="""_YGRAY_""""
 	do FARBE^WWWTAB
 	write YCR,"CELLSPACING=0>"
 	do DisplayNodes(pblnIdOrder,pidHeadNode,,,pblnFixedTree)
 	write YCR,"</TABLE>"
 	
 	write YCR,"</TABLE>"
	write YCR,"</NOBR>"
	do KillNodes()
	quit
 
AddNode(pidParent,pidNode,pstrTitle,pstrText,pstrImage,pstrForm="",pstrParam="",pblnHighLight="",pstrExtraData="",pblnLinkStopped="",plngPage="",plngOverRideId="",pblnExpand="")
	;-------------------------------------------------------------------------------
	; Inputs :
	;   1  pidParent		: 
	;   2  pidNode			: 
	;   3  pstrTitle		: 
	;   4  pstrText			: 
	;   5  pstrImage		: 
	;   6  pstrForm			: 
	;   7  pstrParam		: 
	;   8  pblnHighLight	: Display in bold
	;   9  pstrExtraData	: 
	;  10  pblnLinkStopped	: Don't link from this text to another form if $$$YES
	;  11  plngPage			: 
	;  12  plngOverRideId	: 
	;  13  pblnExpand		: Vary +/- indented tree (can also be null)
	; 
	; History
	; 10-Nov-2004	GRF		SR11205 : Doco; Boolean => Macro
	; 18-Aug-2004	shobby	pblnExpand (SR10265)
	;-------------------------------------------------------------------------------
	if pidParent="" set pidParent = $$$TopNode
	if pstrText=""  set pstrText  = "&nbsp"
	
	set $$$Storage("Id",pidParent,pidNode)   =$listbuild(pidNode,pstrText,pstrTitle,pstrImage,pstrForm,pstrParam,pblnHighLight,pstrExtraData,pblnLinkStopped,plngPage,plngOverRideId)
	set $$$Storage("Text",pidParent,pstrText)=$listbuild(pidNode,pstrText,pstrTitle,pstrImage,pstrForm,pstrParam,pblnHighLight,pstrExtraData,pblnLinkStopped,plngPage,plngOverRideId)
	if pblnExpand=$$$YES {
		set $$$Storage("Expand",pidNode)=""
	} elseif pblnExpand=$$$NO {
		kill $$$Storage("Expand",pidNode)
	}
	quit
 
DisplayNodes(pblnIdOrder,pidHeadNode=$$$TopNode,plngLevel=0,plstEndStatus="",pblnFixedTree=$$$NO,pblnExpand=1)
    ;-------------------------------------------------------------------------------
    ; Displays all of the subnodes for a node.
    ;
    ; Returns:
    ;
    ; History:
    ; 15-Jun-2005	GRF		Change ! to ||
    ; 10-Feb-2005	RobertW	Added parameter pblnFixedTree which will stop the HTML
	; 							being written out for the + and - on the tree view.
    ; 15-Apr-2004	Shobby	Fixed sorting by Text. (Only supports unique text).
    ;-------------------------------------------------------------------------------
	new strIndex,idNode,blnAtEnd,idNode1
	
	if pblnIdOrder {
		set strIndex="Id"
	} else {
		set strIndex="Text"
	}
 
	;Loop through head node, then through all lower nodes that are expanded
	set idNode=""
	for {
		set idNode=$order($$$Storage(strIndex,pidHeadNode,idNode))
		quit:idNode=""
		
		set blnAtEnd=$order($$$Storage(strIndex,pidHeadNode,idNode))=""
		if pblnIdOrder {
			set idNode1=idNode
		} else {
			set idNode1=$listget($get($$$Storage(strIndex,pidHeadNode,idNode)),1)
		}
		if pidHeadNode=$$$TopNode {
			set $$$Storage("Expand",idNode1)=""
			set $$$Storage("Expand",pidHeadNode)=""
		}
		if pblnExpand=1 set pblnExpand=$data($$$Storage("Expand",pidHeadNode))
		if plngLevel=0 set pblnExpand=1
		write $$ShowNode(pidHeadNode,idNode,strIndex,plngLevel,plstEndStatus_$listbuild(blnAtEnd),pblnFixedTree,pblnExpand)
		;if $data($$$Storage("Expand",idNode1)) || (plngLevel=0) {
			do DisplayNodes(pblnIdOrder,idNode1,plngLevel+1,plstEndStatus_$listbuild(blnAtEnd),pblnFixedTree,pblnExpand)
		;}
	}
	quit
 
KillNodes()
	kill $$$Storage("Id")
	kill $$$Storage("Text")
	kill $$$Storage("Used")
	quit
 
ShowNode(pidHeadNode,pidNode,pstrIndex,plngLevel,plstEndStatus,pblnFixedTree=$$$NO,pblnExpand=1)
	;-------------------------------------------------------------------------------
	; Show one node in the tree.
	;  
	; History:
    ; 10-Feb-2005	RobertW	Added parameter pblnFixedTree which will stop the HTML
	; 							being written out for the + and - on the tree view.
	; 10-Nov-2004	GRF		SR11205 : Remove "p" prefix from pblnLinkStopped
	; 07-Jul-2004	Paul K	Don't wrap the nodes (makes the tree look crappy)
	; 02-Jul-2003	Paul K	Don't show branching or add link to nodes that have
	; 							already been added
	; 18-Jun-2003	shobby	Bolded extradata if row is selected.
	; 18-Jun-2003	shobby	Handle multiple extradata columns
	;-------------------------------------------------------------------------------
	new blnHighLight,blnLowerNodes,blnNodeAlreadyAdded,i,idNode,lngOverRideId
	new lngPage,objNodeInfo,blnLinkStopped
	new strBack,strData,strExtraData,strForm,strImage,strParam,strText
	new strTitle,strHTML
	
	set strHTML=""
	
	set objNodeInfo    = $$$Storage(pstrIndex,pidHeadNode,pidNode)
	set idNode         = $listget(objNodeInfo,1)
	set strText        = $listget(objNodeInfo,2)
	set strTitle       = $listget(objNodeInfo,3)
	set strImage       = $listget(objNodeInfo,4)
	set strForm        = $listget(objNodeInfo,5)
	set strParam       = $listget(objNodeInfo,6)
	set blnHighLight   = $listget(objNodeInfo,7)
	set strExtraData   = $listget(objNodeInfo,8)
	set blnLinkStopped = $listget(objNodeInfo,9)
	set lngPage        = $listget(objNodeInfo,10)
 	set lngOverRideId  = $listget(objNodeInfo,11)
 	
	set blnNodeAlreadyAdded=$data($$$Storage("Used",idNode))
	set $$$Storage("Used",idNode)=""
	set blnLowerNodes = ((pidHeadNode'=0) && ($order($$$Storage(pstrIndex,idNode,""))'="") && 'blnNodeAlreadyAdded)
 
	if $data($$$Storage("Expand",pidHeadNode)) {
		set strHTML=strHTML_YCR_"<TR id="""_pidNode_"_tr"" style=""display:"_$select(pblnExpand:"inline",1:"none")_""" _level="_plngLevel_" _state="""_$select(blnLowerNodes:$select($data($$$Storage("Expand",pidNode)):"inline",1:"none"),1:"none")_""" >"
	} else {
		set strHTML=strHTML_YCR_"<TR id="""_pidNode_"_tr"" style=""display:none"" _level="_plngLevel_" _state="""_$select(blnLowerNodes:$select($data($$$Storage("Expand",pidNode)):"inline",1:"none"),1:"none")_""" >"
	}
 	set strHTML=strHTML_YCR_"<TD nowrap>"
	set strHTML=strHTML_YCR_"<FONT SIZE=2>"
	
	if pidNode'=$$$TopNode {
		;WRITE YCR,"<script type=""text/javascript"">"
	 	;write YCR,"  ctAddNode('"_pidHeadNode_"','"_idNode_"','1','"_$$ShowBranch(idNode,plngLevel,blnLowerNodes,$data($$$Storage("Expand",idNode)),plstEndStatus,pblnFixedTree)_"','"_YGIF_"');"
		;write YCR,"</script>"
	}
	
	
	set strHTML=strHTML_YCR_$$ShowBranch(idNode,plngLevel,blnLowerNodes,$data($$$Storage("Expand",idNode)),plstEndStatus,pblnFixedTree)
	
	set strBack=YBACK
	if ($piece(strBack,",",$length(strBack,",")-1)'=YFORM) && (YFORM'=strForm) set strBack=strBack_YFORM_","  ;only add YFORM to the stack if not last element
	
	set strHTML=strHTML_YCR_$$ShowLink(strTitle,blnLinkStopped,blnNodeAlreadyAdded,strForm,lngOverRideId,idNode,strBack,strParam,lngPage)
	set strHTML=strHTML_YCR_$$ShowImage(strImage,blnHighLight,blnNodeAlreadyAdded)
	if blnHighLight set strHTML=strHTML_YCR_"<B>"
	set strHTML=strHTML_YCR_strText
	if blnHighLight set strHTML=strHTML_YCR_"</B>"
 	
 	if ('blnLinkStopped && 'blnNodeAlreadyAdded) set strHTML=strHTML_YCR_"</A>"
 	
 	set strHTML=strHTML_YCR_"</FONT>"
	set strHTML=strHTML_YCR_"</TD>"
	
	if blnNodeAlreadyAdded {
		set strHTML=strHTML_YCR_"<TD WIDTH=20></TD>"
		set strHTML=strHTML_YCR_"<TD>"_$$DecodeError^COMUtils($listbuild("Com00079"))_"</TD>"  ; Data Element Already in Tree")
	
	} else {
		if '$$IsList^COMUtils(strExtraData) set strExtraData=$listbuild(strExtraData)
		for i=1:1:$listlength(strExtraData) {              ; FIXME : use loop not i
			set strData=$listget(strExtraData,i)
			set strHTML=strHTML_YCR_"<TD WIDTH=20></TD>"
			set strHTML=strHTML_YCR_"<TD nowrap ALIGN="_$select((strData=+strData)||($extract(strData)="$"):"RIGHT",1:"LEFT")_">"
			set strHTML=strHTML_YCR_"<FONT SIZE=2>"
			if blnHighLight set strHTML=strHTML_YCR_"<B>"
			set strHTML=strHTML_YCR_$listget(strExtraData,i)
			if blnHighLight set strHTML=strHTML_YCR_"</B>"
		 	set strHTML=strHTML_YCR_"</FONT>"
		 	set strHTML=strHTML_YCR_"</TD>"
		} 	
	}
 	set strHTML=strHTML_YCR_"</TR>"
	;if pidNode'=$$$TopNode set strHTML=""
	quit strHTML
 
ShowLink(pstrTitle,pblnLinkStopped,pblnNodeAlreadyAdded,pstrForm,plngOverRideId,pidNode,pstrBack,pstrParam,plngPage) 
    ;-------------------------------------------------------------------------------
    ; Subroutine of the hyperlink
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 08-Aug-2005	shobby	SR12913 Created
    ;-------------------------------------------------------------------------------
	new strHTML
	new YFORM,YKEY,YBACK,YPARA,YSEITE
	
	set strHTML=YCR_"<A "
	if pstrTitle'="" set strHTML=strHTML_"TITLE="""_pstrTitle_""" "
	if ('pblnLinkStopped && 'pblnNodeAlreadyAdded) {
		set strHTML=strHTML_"HREF="_""""_YAKTION_"EP=WWWFORM&amp;YFORM="_pstrForm_"&amp;YKEY="_$select(plngOverRideId="":pidNode,1:plngOverRideId)_"&amp;YBACK="_pstrBack
		if pstrParam'="" 		set strHTML=strHTML_"&amp;YPARA="_pstrParam
		if $get(plngPage)'="" 	set strHTML=strHTML_"&amp;YSEITE="_plngPage
		set strHTML=strHTML_$$WWWCGI2^WWWCGI()
		set strHTML=strHTML_""""
	}
	set strHTML=strHTML_">"
	quit strHTML
	
ShowBranch(pidNode,plngLevel,pblnLowerNodes,pblnShowMinus,plstEndStatus,pblnFixedTree=$$$NO)
	;--------------------------------------------------------------------------
	;
	; History:
	; 15-Jul-2005	RobertW	SR12981: use $increment instead of $i for code check reasons
    ; 10-Feb-2005	RobertW	Added parameter pblnFixedTree which will stop the HTML
	; 						being written out for the + and - on the tree view.
	;--------------------------------------------------------------------------
	new lngLevel,idNode,strHTML
	
	set strHTML=""
	for lngLevel=1:1:plngLevel {
		if lngLevel=plngLevel {
			if pblnLowerNodes {
				if 'pblnFixedTree {
					set idNode=$increment(^CacheTemp(YUSER,"Tree1"))
					set strHTML=strHTML_YCR_"<A id="_pidNode_" onclick='ctExpand("""_pidNode_""","""_YGIF_""",1);'>"
				}
				if pblnShowMinus {
					if $listget(plstEndStatus,lngLevel+1)  set strHTML=strHTML_$$ShowImage("eminus.gif")
					if '$listget(plstEndStatus,lngLevel+1) set strHTML=strHTML_$$ShowImage("minus.gif")
					}
				if 'pblnShowMinus {
					if $listget(plstEndStatus,lngLevel+1)  set strHTML=strHTML_$$ShowImage("eplus.gif")
					if '$listget(plstEndStatus,lngLevel+1) set strHTML=strHTML_$$ShowImage("plus.gif")
				}
				if 'pblnFixedTree {
					set strHTML=strHTML_YCR_"</A>"
				}
			} else {
				if lngLevel'=1 set strHTML=strHTML_"&nbsp;"
				if $listget(plstEndStatus,lngLevel+1)  set strHTML=strHTML_$$ShowImage("lplus.gif")
				if '$listget(plstEndStatus,lngLevel+1) set strHTML=strHTML_$$ShowImage("tplus.gif")
			}
		} else {
			if lngLevel'=1 set strHTML=strHTML_"&nbsp;"
			if $listget(plstEndStatus,lngLevel+1)  set strHTML=strHTML_$$ShowImage("bplus.gif")
			if '$listget(plstEndStatus,lngLevel+1) set strHTML=strHTML_$$ShowImage("iplus.gif")
			
		}
	}
	quit strHTML
	
ShowImage(pstrImage,pblnHighLight=0,pblnNodeAlreadyAdded=0)
	;-------------------------------------------------------------------------------
	;
	; History
	; 12-May-2006	RPW		SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
	; 02-Jul-2003	Paul K	Added Code to show error pic if node already added.
	; 19-Jun-2003	shobby	Put in a special code to suppress branch image
	;-------------------------------------------------------------------------------
	new strHTML
	
	set strHTML=""
	if $$$UPPER(pstrImage)="NOIMAGE" {
		set pstrImage=""
	} else {
		if pstrImage="" if pblnHighLight  set pstrImage="oopen.gif"
		if pstrImage="" if 'pblnHighLight set pstrImage="oclose.gif"
	}
	if pblnNodeAlreadyAdded set pstrImage="xxclose.gif"
	if pstrImage'="" {
		set strHTML="<IMG SRC="""_YGIF_pstrImage_""" align=top border=0 vspace=0 hspace=0>"
	}
	quit strHTML
 
	
TreeTemplate
	
	do StartTree^COMTree(YPARA)
	for {
		do AddNode^COMTree("pidParent","pidNode","pstrTitle","pstrText","pstrImage","pstrForm=""","pstrParam=""","pblnSelected","pstrExtraData")
	}
	do StopTree^COMTree("pblnIdOrder","pidHeadNode=""")
	quit
	
]]></Routine>
</Export>