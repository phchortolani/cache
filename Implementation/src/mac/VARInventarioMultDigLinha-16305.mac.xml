<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARInventarioMultDigLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARInventarioMultDigLinha
#include VARConst
#include INConst
 
OnBeforeDelete(pYFELD)
	if ($length($$$VARInventarioMultDigLinhaConfirmadoPor(pYFELD)) > 0) {
		set strStatus = $listbuild("Não é possível deletar uma linha depois que a contagem foi confirmada. Favor utilizar a tela de Digitação Realizada para corrigir eventuais erros com esse material.")
		set Q=$$$YQDisable(strStatus)
	}
	
	quit

CheckPoliticaItem(pPolicyProgram, pTipo)
	quit:(($length($get(YFORM)) = 0) || ($length($get(YKEY)) = 0)) $$$NO
	new intProgram, intLot, intExpiryDate, intBrand, idLocal
	set idLocal = $$GetLocalInventario^VARInventarioMultDig($$$KEY1(YKEY))
	set objYFELD = $$$GRIDGetYFELD()
	if ($length($get(objYFELD)) = 0) {
		set objYFELD = $get(^VARInventarioMultDigLinha(0, $$$KEY1(YKEY), $$$KEY2(YKEY), $$$KEY3(YKEY), $$$KEY4(YKEY), 1))
	}
	quit:($length(objYFELD) = 0) $$$NO

	do GetAttributes^INItemPolicyUtils($$$VARInventarioMultDigLinhaProduto(objYFELD), .intLot, .intExpiryDate, "", .intBrand, "", .intProgram, idLocal)
	if (pTipo = "PROGRAMA") {
		quit:(intProgram = pPolicyProgram) $$$YES
	}
	if (pTipo = "LOTE") {
		quit:(intLot = pPolicyProgram) $$$YES
	}
	if (pTipo = "VALIDADE") {
		quit:(intExpiryDate = pPolicyProgram) $$$YES
	}
	if (pTipo = "MARCA") {
		quit:(intBrand = pPolicyProgram) $$$YES
	}
	quit $$$NO

OnBlurProduto()
	quit:(($length($get(YFELD)) = 0) || ($length($get(YKEY)) = 0))
	new idProduto, idGrupo, line, objLine, idInventario, strStatus
	set idInventario = $$$KEY1(YKEY)
	set idProduto = $$$VARInventarioMultDigLinhaProduto(YFELD)
	set idGrupo = $$SQLGetGrupoItem^VARSQL(idProduto)
	set idLocalInventario = $$GetLocalInventario^VARInventarioMultDig(idInventario)
	set strStatus = $$$OK
	
	if ($length(idProduto) > 0) {
		if (($$$ISOK(strStatus)) && ('$data(^INART(YM,idProduto,1)))) {
			set strStatus = $$$MakeStatus("%1", "Produto inválido.")
		}
		if (($$$ISOK(strStatus)) && ($$SQLGetTipoEstoqueLocal^VARSQL(idLocalInventario) '= $$SQLGetEstoquePrincipal^VARSQL(idProduto))) {
			set strStatus = $$$MakeStatus("%1", "Esse produto é de "_$$SQLGetEstoquePrincipal^VARSQL(idProduto)_" e o inventário é de "_$$SQLGetTipoEstoqueLocal^VARSQL(idLocalInventario)_", por isso não pode ser inserido.")
		}
		
		if (($$$ISOK(strStatus)) && (+$$SQLGetCustoMedioProd^VARSQL(idProduto) <= 0)) {
			set strStatus = $$$MakeStatus("%1", "Esse produto não possui custo médio e não pode ser inserido no inventário. Favor entrar em contato com o suporte.")
		}
		
		if ($$$ISOK(strStatus)) {
			set strStatus = $$ApplyGroupFilter^INWEINVELINE(idInventario,idGrupo)
		}
		
		if ($$$ISERR(strStatus)) {
			$$$Alert(strStatus)
			set $$$VARInventarioMultDigLinhaProduto(YFELD) = ""
			set $$$VARInventarioMultDigLinhaUnidade(YFELD) = ""
			set $$$VARInventarioMultDigLinhaGrupo(YFELD) = ""
			quit
		}
		

		set line = $order(^INWEINV(YM,idInventario,""))
		while ($length(line) > 0) { 
			set objLine = $$GetStocktakeLine^INStocktaking(idInventario,line)
			quit:($$$INWEINVItemNumber(objLine) = idProduto)
			set line = $order(^INWEINV(YM,idInventario,line))
		}
	
		if ($length(line) = 0) {
			$$$Alert("Atenção: esse produto não faz parte da contagem deste inventário. Certifique-se de que as informações estão corretas. Qualquer dúvida, favor entrar em contato com o suporte.")
		}
		
	}

	set $$$VARInventarioMultDigLinhaUnidade(YFELD) = $$SQLGetUnitIdItem^VARSQL(idProduto)
	set $$$VARInventarioMultDigLinhaGrupo(YFELD) = idGrupo
	
	quit
	
SwitchObservacoesMode(pYKEY)
	quit:(pYKEY = "")
	
	new codInventario, codContagem, codUsuario, chave, blnDesabilitObserv, strStatus	
	
	set strStatus = $$$OK
	
	set codInventario = $$$KEY1(pYKEY)
	set codContagem   = $$$KEY2(pYKEY)
	set codUsuario    = $$$KEY3(pYKEY)
	
	set chave = codInventario_","_codContagem_","_codUsuario
	
	set objInventario = $get(^VARInventarioMultDig(YM,codInventario,codContagem,codUsuario,1))
	set blnDesabilitObserv = $$$VARInventarioMultDigHabilitarObservacoes(objInventario)
	
	if blnDesabilitObserv = $$$YES {
		set $$$VARInventarioMultDigHabilitarObservacoes(objInventario) = $$$NO
	} else {
		set $$$VARInventarioMultDigHabilitarObservacoes(objInventario) = $$$YES
	}
	
	set strStatus = $$$Save("VARInventarioMultDig",chave,objInventario,1)
	
	if $$$ISERR(strStatus) { 
		$$$StartScript()
		write "alert('Não foi possível executar a ação. Favor verificar.');"
		$$$EndScript()
	}	
	
	do GoToForm^COMUtilForm("VARInventarioMultDig",chave)
	quit

CheckObservacoesReadOnly(pYKEY)
	quit:(pYKEY = "")
	
	new codInventario, codContagem, codUsuario, chave, blnDesabilitObserv
	
	set codInventario = $$$KEY1(pYKEY)
	set codContagem   = $$$KEY2(pYKEY)
	set codUsuario    = $$$KEY3(pYKEY)
	quit +'$$$VARInventarioMultDigHabilitarObservacoes($get(^VARInventarioMultDig(YM,codInventario,codContagem,codUsuario,1)))
]]></Routine>
</Export>