<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWSORnew" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWSORnew(pidClass,pstrPrimaryKey,pstrVariableKey,pblnReverse,pintIndexKey,pintMaxRecords,penumCompleteKey,pstrDataContains,pstrKeyContains,pstrFixedKey)
 
#include COMSYS
#define UP		-1
#define DOWN	1
 
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		AUSWAHL AUS DATEI
	;		SELECTION FROM FILE
	;
	;	ERGEBNIS STEHT IN     / RESULTSET WILL BE IN            :  ^WWWSOR(YUSER,"KEY",LFN,KEY)=SCHLÜSSEL
	;	ALLE KEY' STEHEN IN   / ALL KEYS ARE IN                 :  ^WWWSOR(YUSER,"SEL",TEILKEY)=""
	;	LOCK IN               / DURING EXECUTION THE LOCK IS IN :  ^WWWSOR(YUSER,"LOCK")=$H
	;
	; Inputs : 	pidClass			- class name
	; 			pstrPrimaryKey		- FESTE PRIMÄRSCHLÜSSEL;FIXED KEY
	; 			pstrVariableKey		- VARIABLE PRIMÄRSCHLÜSSEL (AB KEY) ODER SORT AB ODER *=WILDCARD ;Or Confirm. Or 
	; 			pblnReverse 		- Orientation (Ascending/Descending) from YORIENT, YRICHT, etc.
	; 			pintIndexKey		- index key
	; 			pintMaxRecords 		- ANZAHL DER GESUCHTEN WERTE;NR. OF RECORDS ;Number the 
	; 			penumCompleteKey	- 1 = KOMPLETTER KEY; 2 LETZTER KEY FEHLT(GRID-SUCHE); 1 TOTALKEY; 2 PARTKEY (GRID)
	; 			pstrDataContains	- SATZ IN FORM YFELD, WENN $F DER SAETZE->DANN STOP  ;STOP IF FOUND
	;			pstrKeyContains  	- SATZ IN FORM YKEY,  WENN $F DER SAETZE->DANN STOP  ;STOP IF CONTAIN
	;			pstrFixedKey 		- FIX VORGABEN FÜR SORTKEY ; FIXED KEY FOR INDEX
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 31-Jul-2007	GRF		SR15571: Combine idClass/idClassIndex in if/else;
	; 						pstrDirection => pblnReverse.
	; 12-Jul-2007	RPW		SR15571: Rewrite into brace syntax and ignore differences
	; 						between object access (Access Type 4) and normal
	; 						Approach taken : If test is "enumAltSave=4", comment out;
	; 						if test is "enumAltSave'=4", delete that part of the test.
	; 03-May-2007	GRF		SR15509: Doco; quits; brace conversion with if/else
	; 						replacement; !/& => ||/&&; boolean macros
	; 05-Feb-2007	RPW		SR14900: Do not call code that doesn't exist
	; 03.02.1999	DT		(C) DITMAR TYBUSSEK
	;-------------------------------------------------------------------------------
	new enumAltSave,idClass,idClassIndex,idxClass,intCurrentCount,intDirection
	new intLength,loop,objRecord,objWWW001,strChar,strGlobal,strGlobalComma
	new strGlobalIdx,strGlobalIdxCopy,strGlobalTemp,strPiece,strSaveData
	new strSaveIndexKey,strSortName,strWildcard,strWWWYM1,tmeNow,tmsLock,YMAXKEY
	
	if pidClass'="" {
		set idxClass=$$^WWWUMLAU(pidClass)
		if $order(^WWW0011s(0,1,idxClass,""))'="" set pidClass=$order(^WWW0011s(0,1,idxClass,""))  ;tybd;16,2,2005;27239;ALTERNATIVE CLASS
	}
		
	set pstrFixedKey=$get(pstrFixedKey)
	
	if $extract(pstrFixedKey)="@" {
		if $extract(pstrFixedKey,2)'="$" {
			set pstrFixedKey=@($extract(pstrFixedKey,2,99))
		} else {
			xecute "set pstrFixedKey="_$extract(pstrFixedKey,2,99)
		}
	}
		
	quit:$get(pidClass)=""
	
	set tmeNow=$piece($horolog,",",2)   ;SUCHE NACH 30 SEKUNDEN STOPPEN ;search within 
	set objWWW001="" 
	if ($extract(pidClass,1,2)'="IN") && ($extract(pidClass,1,3)'="WWW") {
		 set objWWW001=$get(^WWW001(0,pidClass,1))
	}
	
	set enumAltSave=+$$$WWW001AltSaveProcedure(objWWW001)
	
	if enumAltSave=5 {
		set enumAltSave=0
	}
	
	set strSortName=""
	if pintIndexKey>0 {                                                        ; SR15509
		set strSortName = $piece($get(^WWW0013(0,pidClass,pintIndexKey,1)),Y,1)
		if strSortName="" {
	/*		if enumAltSave=4  {
				set strSortName="Index"_+pintIndexKey
			} else {
	*/
				set strSortName = +pintIndexKey
	/*		}*/
		}
	}
	
	;SUCHE IN ZEITABHÄNGIGER DATEI ;search within data file 
	if $get(YTIMEFORM)=1 set pidClass=pidClass_"t",pintIndexKey=0
	
	/*
	if enumAltSave=4 {                                                      ; SR15509
		if $extract(pstrVariableKey)="." set pstrVariableKey=$extract(pstrVariableKey,2,999)
		set pstrVariableKey=$TR(pstrVariableKey,"|")
	;	DO ##class(User.Find).Find(pidClass,pstrPrimaryKey,pstrVariableKey,pblnReverse,strSortName,pintMaxRecords,YUSER) // SR14900
		quit                                               // *** EARLY EXIT ***
	}
	*/
	
	set strSaveData     = $$$WWW001SaveDataInFile(objWWW001)
	set strSaveIndexKey = $$$WWW001SaveIndexKeyInFile(objWWW001)
	
	if strSaveData="" {                     ;ANDERE DATEI ;data file
		set idClass = pidClass
	} else {
		set idClass = strSaveData
	}
	
	if strSaveIndexKey="" {                 ;ANDERE SORTDATEI
		set idClassIndex = pidClass_"s"
	} else {
		set idClassIndex = strSaveIndexKey
	}
	
	set pstrDataContains = $get(pstrDataContains)
	set pstrKeyContains  = $get(pstrKeyContains)
	
	if YUMLAU="" {                                                      ; SR15509
		if pstrDataContains'="" set pstrDataContains = $translate(pstrDataContains,$$$LC,$$$UC)
		if pstrKeyContains'=""  set pstrKeyContains  = $translate(pstrKeyContains,$$$LC2,$$$UC2)
	} else {
		if pstrDataContains'="" set pstrDataContains = $$^WWWUMLAU(pstrDataContains,2)
		if pstrKeyContains'=""  set pstrKeyContains  = $$^WWWUMLAU(pstrKeyContains,2)
	}
	
	;---------------------------------------
	; Sort Direction        ;SORTIERRICHTUNG
	; pblnReverse			intDirection
	;				  use as Direction for $query after constructing global as string (see subr NEXT)
	; ------          ----------------------------
	;  NO				 1			Ascending	
	;  YES				-1			Descending
	;---------------------------------------
	set intDirection = $select(pblnReverse=$$$YES:$$$UP,1:$$$DOWN)
	
	KILL ^WWWSOR(YUSER,"SEL")
	KILL ^WWWSOR(YUSER,"KEY")
	set tmsLock=$horolog                 ;LOCK
	set ^WWWSOR(YUSER,"LOCK")=tmsLock
	
	if +pintMaxRecords=0 set pintMaxRecords=999999999
	/*
	if enumAltSave=4 {                                                     ; SR15509
		if intDirection=1 {
			if pintMaxRecords=2 set pintMaxRecords=1       ;EINEN WENIGER BEI VOR ;minus next to pre- 
		} else {
			if pintMaxRecords=1 set pintMaxRecords=2       ;EINEN MEHR BEI RUECK  ;more next to 
		}
	}
	*/
	set YMAXKEY = +$order(^WWW002(0,pidClass,""),-1)
	if YMAXKEY=0 set YMAXKEY = 1
	set strGlobalIdx    = ""
	set intCurrentCount = 0
	
	set intLength=$length(pstrVariableKey)
	if (intLength'=1) && ($extract(pstrVariableKey,intLength)="*") {
		set pstrVariableKey=$extract(pstrVariableKey,1,intLength-1)
	}
	
	set strWildcard=""  ;WILD-KEY
	;ALLES DURCHSUCHEN OHNE VORGABE ;search all without default
	if $extract(pstrVariableKey)="*" {                                                     ; SR15509
		if YUMLAU="" {
			set strWildcard     = $translate($extract(pstrVariableKey,2,99),$$$LC,$$$UC)
			set pstrVariableKey = "" 
		} else {
			set strWildcard     = $$$Index($extract(pstrVariableKey,2,99))
			set pstrVariableKey = ""
		}
	}
	
	;ALLES MIT VORGABE ;all with default 
	if $extract(pstrVariableKey)="|" {
		set strWildcard     = pstrVariableKey
		set pstrVariableKey = $extract(pstrVariableKey,2,999)
	}
	
	;ALLES AB ;whatsoever Confirm.
	if $extract(pstrVariableKey)="." {
		set pstrVariableKey = $extract(pstrVariableKey,2,999)
		if (intDirection=$$$UP) {
			if $length(pstrVariableKey)'=0 {
				if +pstrVariableKey=0 {
					set pstrVariableKey = pstrVariableKey_$$$C255
	;			} else {
	;				set pstrVariableKey = pstrVariableKey
				}
			}
		}
	}
	
	set strWWWYM1 = $$^WWWYM(pidClass,1)
	set strGlobal = "^"_idClass_"("_$$^WWWYM(pidClass,0)
	
	do ExtendedGlobalReference^WWWSETObject(.strGlobal,objWWW001)	
	
	set strGlobalTemp = strGlobal
	if +pintIndexKey'=0 {
		set strGlobalIdx = "^"_idClassIndex_"("_strWWWYM1
		set strGlobalIdx = strGlobalIdx_""""_strSortName_""""
		do ExtendedGlobalReference^WWWSETObject(.strGlobalIdx,objWWW001)	
	}
	
	;if pstrVariableKey'="" if pintMaxRecords>2 if pblnReverse= set pstrVariableKey=pstrVariableKey_$$$C255
	if (pstrVariableKey'="") && (pintMaxRecords>2) && (pblnReverse=$$$YES) {  ;FIS; 03.01.03
		if (pstrVariableKey'=0) && ($length(pstrVariableKey)'=$length(+pstrVariableKey)) {
			set pstrVariableKey = pstrVariableKey_$$$C255
		}
	}
	
	if (pstrVariableKey="") && (pblnReverse=$$$YES) {
		set pstrVariableKey = $$$C255
	}
	
	for loop=1:1 {
		set strPiece = $piece(pstrPrimaryKey,",",loop)
		quit:strPiece=""
		
		if strPiece=$piece(pstrVariableKey,",",loop) set $piece(pstrVariableKey,",",loop)=""
	}
	
	for loop=1:1:YMAXKEY {
		if $extract(pstrVariableKey,1)="," set pstrVariableKey=$extract(pstrVariableKey,2,999)
	}
	
	if pstrPrimaryKey'="" {
		for loop=1:1:YMAXKEY {
			set strPiece = $piece(pstrPrimaryKey,",",loop)
			quit:strPiece=""
			
			if $extract(strGlobal,$length(strGlobal))'="(" && ($extract(strGlobal,$length(strGlobal))'=",") {
				set strGlobal=strGlobal_","
			}
			set strGlobal=strGlobal_""""_$translate(strPiece,"""")_""""
		}
	}
	
	if (pstrVariableKey'="") || (pstrFixedKey'="") {
		for loop=1:1:YMAXKEY {
			quit:($piece(pstrVariableKey,",",loop)="")&&($piece(pstrFixedKey,",",loop)="") 
			
			if $piece(pstrFixedKey,",",loop)'="" {
				set $piece(pstrVariableKey,",",loop) = $piece(pstrFixedKey,",",loop)  ;VORGABE FESTER SORTKEY ;default 
			}
			if ($extract(strGlobal,$length(strGlobal))'="(") && ($extract(strGlobal,$length(strGlobal))'=",") {
				set strGlobal=strGlobal_","
			}
			set strGlobal = strGlobal_""""_$translate($piece(pstrVariableKey,",",loop),"""")_""""
			
			if +pintIndexKey'=0 {
				if YUMLAU="" {
					set strGlobalIdx = strGlobalIdx_","""_$translate($translate($piece(pstrVariableKey,",",loop),""""),$$$LC,$$$UC)_""""
				} else {
					set strGlobalIdx = strGlobalIdx_","""_$$$Index($translate($piece(pstrVariableKey,",",loop),""""))_""""
				}
			}
		}	
	}
	
	set strGlobalIdxCopy = "^"_idClassIndex_"("_strWWWYM1
	set strGlobalIdxCopy = strGlobalIdxCopy_""""_strSortName_""""
	if pstrFixedKey'=""    if pintIndexKey'=0    set strGlobalIdxCopy = strGlobalIdx
	if +pstrVariableKey'=0 if intDirection=$$$UP set strGlobalIdx     = strGlobalIdx_","""_$$$C255_""""
	
	;VERGLEICHSVARIABLE strGlobalComma
	set strGlobalComma="^"_idClass_"("_strWWWYM1
	do ExtendedGlobalReference^WWWSETObject(.strGlobalComma,objWWW001)
	
	if pstrPrimaryKey'="" {
		for loop=1:1:YMAXKEY {
			set strPiece=$piece(pstrPrimaryKey,",",loop)
			quit:strPiece=""
			
			set strChar=$extract(strGlobalComma,$length(strGlobalComma))
			if (strChar'="(") && (strChar'=",") {
				set strGlobalComma = strGlobalComma_","
			}
			set strGlobalComma = strGlobalComma_""""_$translate(strPiece,"""")_""""
		}
	}
	
	if pstrPrimaryKey'="" set strGlobalComma=strGlobalComma_","
	
	do ExtendedGlobalReference^WWWSETObject(.strGlobalIdxCopy,objWWW001)
	
	set strChar=$extract(strGlobal,$length(strGlobal))
	if intDirection=$$$DOWN {                                                     ; SR15509
		if strChar="(" set strGlobal=strGlobal_"-1"
		if strChar="," set strGlobal=strGlobal_"-1"
		
	} else {
		if strChar="(" set strGlobal=strGlobal_""""_$$$C255_""""
		if strChar="," set strGlobal=strGlobal_""""_$$$C255_""""
	}
	
	if (intDirection=$$$UP)                                  &&
	   (+pintIndexKey=0)                                     &&
	   ($length(strGlobal,",")'=(YMAXKEY+1))                 &&
	   ($extract(strGlobal,$length(strGlobal))   '= 1)       &&
	   ($extract(strGlobal,$length(strGlobal)-1) '= $$$C255) {
		
		set strGlobal=strGlobal_","""_$$$C255_""""
	}
	
	set strGlobal    = strGlobal_")"
	set strGlobalIdx = strGlobalIdx_")"
	
	if $find(strGlobalIdx,"(,") set strGlobalIdx = $piece(strGlobalIdx,"(,",1)_"("_$piece(strGlobalIdx,"(,",2,99)
	if $find(strGlobalIdx,",)") set strGlobalIdx = $piece(strGlobalIdx,",)",1)_")"
	
	if $find(strGlobalComma,"(,") set strGlobalComma = $piece(strGlobalComma,"(,",1)_"("_$piece(strGlobalComma,"(,",2,99)
	if $find(strGlobalComma,",)") set strGlobalComma = $piece(strGlobalComma,",)",1)_")"
	
	if $find(strGlobalIdxCopy,"(,") set strGlobalIdxCopy = $piece(strGlobalIdxCopy,"(,",1)_"("_$piece(strGlobalIdxCopy,"(,",2,99)
	if $find(strGlobalIdxCopy,",)") set strGlobalIdxCopy = $piece(strGlobalIdxCopy,",)",1)_")"
	
	if pstrVariableKey=$$$C255 set pstrVariableKey=""
	set objRecord=""
	
	//if +pintIndexKey=0 if enumAltSave=4 if $data(@(strGlobal))#10=1 DO SATZ1   ;DATENSATZ VORHANDEN ;data record on hand 
	
	for {
		do SATZ(idClass,pstrPrimaryKey,pstrVariableKey,pintIndexKey,intDirection,strWildcard,strSaveData,enumAltSave,.strGlobal,.strGlobalIdx,strGlobalComma,strGlobalTemp,strGlobalIdxCopy,.intCurrentCount,pstrFixedKey,penumCompleteKey,tmsLock,pstrKeyContains,pstrDataContains)
		quit:((strGlobal="") || (pintMaxRecords<=intCurrentCount) || ($piece($horolog,",",2)>(tmeNow+600)))
	}
		
	quit
	
SATZ(pidClass,pstrPrimaryKey,pstrVariableKey,pintIndexKey,pintDirection,pstrWildcard,pstrSaveData,penumAltSave,&pstrGlobal,&pstrGlobalIdx,pstrGlobalComma,pstrGlobalTemp,pstrGlobalIdxCopy,&pintCurrentCount,pstrFixedKey,penumCompleteKey,ptmsLock,pstrKeyContains,pstrDataContains) ;ZWISCHENSATZ SPEICHERN ;Save 
	;-------------------------------------------------------------------------------
	; History :
	; 12-Jul-2007	RPW		SR15571: Rewrite into brace syntax
	;-------------------------------------------------------------------------------
	new objRecord
	
	if +pintIndexKey=0 { 
		do NEXT(pidClass,pintDirection,pstrWildcard,pstrSaveData,.pstrGlobal,.objRecord,pstrGlobalComma)
	} else {
		do NEXTS(pidClass,pstrPrimaryKey,pintIndexKey,pintDirection,pstrWildcard,pstrSaveData,penumAltSave,.pstrGlobal,.objRecord,.pstrGlobalIdx,pstrGlobalComma,pstrGlobalTemp,pstrGlobalIdxCopy,pstrFixedKey)
	}
	
	do SATZ1(pidClass,pstrPrimaryKey,pstrVariableKey,pintIndexKey,pstrSaveData,penumAltSave,.pstrGlobal,.objRecord,.pstrGlobalIdx,.pintCurrentCount,penumCompleteKey,ptmsLock,pstrKeyContains,pstrDataContains)
 
	quit
	
NEXT(pidClass,pintDirection,pstrWildcard,pstrSaveData,&pstrGlobal,&pobjRecord,pstrGlobalComma)
	;-------------------------------------------------------------------------------
	;	NACHSTER DATENSATZ ;data record 
	;
	; History :
	; 31-Jul-2007	GRF		SR15571: Need to set a bypass boolean to ensure
	; 						only execute required code where dot-syntax QUITs have
	; 						been replaced.
	; 12-Jul-2007	RPW		SR15571: Rewrite into brace syntax
	;-------------------------------------------------------------------------------
	new blnProcess,blnQuit,strGlobalLoad
	
	for {
		set blnProcess = $$$YES     ; 31-Jul-2007  SR15571
		set blnQuit    = $$$YES
		set pstrGlobal = $query(@pstrGlobal,pintDirection)
		quit:pstrGlobal=""
		 
		set pobjRecord=""
		if pstrSaveData="" {
			set strGlobalLoad = pstrGlobal
		} else {
			set strGlobalLoad = "^"_pidClass_"("_$piece(strGlobalLoad,"(",2,99)
		}
		if strGlobalLoad'="" set pobjRecord=$$^WWWSETL(strGlobalLoad)
		
		if (pstrGlobal'="") && (pstrWildcard'="") && ($extract(pstrWildcard)'="|") {
			if YUMLAU="" {
				if '$find($translate(pstrGlobal_" "_pobjRecord,$$$LC,$$$UC),pstrWildcard) {
					set blnQuit    = $$$NO
					set blnProcess = $$$NO     ; 31-Jul-2007  SR15571
				}
			} else {
				if '$find($$$Index(pstrGlobal_" "_pobjRecord),pstrWildcard) {
					set blnQuit    = $$$NO
					set blnProcess = $$$NO     ; 31-Jul-2007  SR15571
				}
			}
	;		if 'blnQuit {     ; 31-Jul-2007  SR15571
			if blnProcess {
				if '$find($translate($$^WWWUMLAU(pstrGlobal),""""),$translate(","_$extract(pstrWildcard,2,99),"""")) {
					set pstrGlobal=""
				}
			}
		}
		
	;	if '$find($translate(pstrGlobal,""""),$translate(pstrGlobalComma,"""")) {     ; 31-Jul-2007  SR15571
		if blnProcess && '$find($translate(pstrGlobal,""""),$translate(pstrGlobalComma,"""")) {
			set pstrGlobal=""
		}
		
		quit:((pstrGlobal="") || (blnQuit))
	}
	
	quit
		
NEXTS(pidClass,pstrPrimaryKey,pintIndexKey,pintDirection,pstrWildcard,pstrSaveData,penumAltSave,&pstrGlobal,&pobjRecord,&pstrGlobalIdx,pstrGlobalComma,pstrGlobalTemp,pstrGlobalIdxCopy,pstrFixedKey)
	;-------------------------------------------------------------------------------
	;	NACHSTER DATENSATZ IN SORTFOLGE ;data record within 
	;
	;	The blnProcess flag behaves similarly to strStatus elsewhere.  If set to $$$NO
	;	it indicates that subsequent processing in the FOR loop is not to be executed.
	;	Control resumes at the QUIT command at the bottom of the FOR loop.
	;
	;
	; History :
	; 31-Jul-2007	GRF		SR15571: Need to convert quits to a bypass boolean to ensure
	; 						only end the FOR loop when either test is met.  Early quits
	; 						would have resulted in the FOR loop stopping when blnQuit
	; 						was set to $$$NO; don't use $reverse.
	; 12-Jul-2007	RPW		SR15571: Rewrite into brace syntax
	;-------------------------------------------------------------------------------
	new blnProcess,blnQuit,intIndexCount,loop,strChar,strGlobalLoad,strPiece,strTrimmed
	
	for {
		set blnProcess    = $$$YES     ; 31-Jul-2007  SR15571 vvv blnProcess
		set blnQuit       = $$$YES
		set pstrGlobalIdx = $query(@pstrGlobalIdx,pintDirection)
		
		if (pstrWildcard'="") && ($extract(pstrWildcard)="|") {
			if pstrGlobalIdx'="" {
				set strPiece = $extract(pstrWildcard,2,99)
				if '$find($translate(pstrGlobalIdx,""""),$translate(","_strPiece,"""")) {
					if +strPiece'=0 {
						set blnQuit    = $$$NO
					} else {
						set pstrGlobal = ""
					}
					set blnProcess = $$$NO
				}
			}
		}
		
		if blnProcess && (pstrFixedKey'="") {
			if (pstrGlobalIdx'="") && ('$find($translate(pstrGlobalIdx,""""),$translate(","_pstrFixedKey,""""))) {
				set pstrGlobal = ""
				set blnProcess = $$$NO
			}
			if (+pintIndexKey=pstrFixedKey) && ('$find($translate(pstrGlobalIdx,""""),$translate(","_+pintIndexKey_","_pstrFixedKey,""""))) {
				set pstrGlobal = ""
				set blnProcess = $$$NO
			}
		}
 
		if blnProcess && (pstrPrimaryKey'="") && (pstrGlobalIdx'="") && ('$find(","_$piece($translate(pstrGlobalIdx,""""),","_+pintIndexKey_",",2,99),$translate(","_pstrPrimaryKey_",",""""))) {
			set blnQuit    = $$$NO
			set blnProcess = $$$NO
		}
 
		if blnProcess && '$find($translate(pstrGlobalIdx,""""),$translate(pstrGlobalIdxCopy,"""")) {
			set pstrGlobal = ""
			set blnProcess = $$$NO
		}
		if blnProcess && (pstrGlobalIdx="") {
			set pstrGlobal = ""
			set blnProcess = $$$NO
		}
		
		if blnProcess {
			set intIndexCount = $length(pstrGlobalIdx,",")
			set strTrimmed    = $extract(pstrGlobalIdx,1,$length(pstrGlobalIdx)-1)  ;TYBD;WENN IM KEY "()" ENTHALTEN
		
		;-----	pstrGlobal -----
			set pstrGlobal    = pstrGlobalTemp
			for loop=(intIndexCount-YMAXKEY+1):1:intIndexCount {
				set strChar = $extract(pstrGlobal,$length(pstrGlobal))
				if (strChar'="(") && (strChar'=",") {
					set pstrGlobal = pstrGlobal_"," 
				}
				set pstrGlobal = pstrGlobal_$piece(strTrimmed,",",loop)
			}
			set pstrGlobal=pstrGlobal_")"
	 		
			if $find(pstrGlobal,"(,") {
				set pstrGlobal=$piece(pstrGlobal,"(,",1)_"("_$piece(pstrGlobal,"(,",2,99)
			}
			if $find(pstrGlobal,",)") {
				set pstrGlobal=$piece(pstrGlobal,",)",1)_")"
			}
			//if penumAltSave'=4 set pstrGlobal=$query(@pstrGlobal)
			set pstrGlobal    = $query(@pstrGlobal)
		;-----	
			
			set pobjRecord    = ""
			set strGlobalLoad = pstrGlobal
			if pstrSaveData'="" {
				set strGlobalLoad = "^"_pidClass_"("_$piece(strGlobalLoad,"(",2,99)
			}
			if strGlobalLoad'="" {
				set pobjRecord = $$^WWWSETL(strGlobalLoad)
			}
		
			if pstrWildcard'="" {
				if $extract(pstrWildcard)'="|" {
					if pstrGlobal'="" {
						if YUMLAU="" {
							if '$find($translate(pstrGlobal_" "_pobjRecord,$$$LC,$$$UC),pstrWildcard) {
								set blnQuit=$$$NO
							}
						} else {
							if '$find($$$Index(pstrGlobal_" "_pobjRecord),pstrWildcard) {
								set blnQuit=$$$NO 
							}
						}
					}
				}
			} else {
				if pstrPrimaryKey=""  {
					if '$find($translate(pstrGlobal,""""),$translate(pstrGlobalComma,"""")){
						set blnQuit=$$$NO
					}
				} else {
					if '$find($translate(pstrGlobal,""""),$translate(","_pstrPrimaryKey,"""")) {
						set blnQuit=$$$NO
					}
				}
			}
		}
	 	
	 	quit:((pstrGlobal="") || blnQuit)
	 }
	
	quit
	
	/*  replaces vvv 31-Jul-2007 SR15571
	// Due to complexity of rewrite, I am leaving the quits in place for the FOR loop.
	
	for {
		set blnQuit         = $$$YES
		set pstrGlobalIdx = $query(@pstrGlobalIdx,pintDirection)
		
		if (pstrWildcard'="") && ($extract(pstrWildcard)="|") {
			if pstrGlobalIdx'="" {
				set strPiece = $extract(pstrWildcard,2,99)
				if '$find($translate(pstrGlobalIdx,""""),$translate(","_strPiece,"""")) {
					if +strPiece'=0 {
						set blnQuit=$$$NO
					} else {
						set pstrGlobal=""
					}
					quit
				}
			}
		}
		
		if pstrFixedKey'="" {
			if (pstrGlobalIdx'="") && ('$find($translate(pstrGlobalIdx,""""),$translate(","_pstrFixedKey,""""))) {
				set pstrGlobal=""
				quit
			}
			if (+pintIndexKey=pstrFixedKey) && ('$find($translate(pstrGlobalIdx,""""),$translate(","_+pintIndexKey_","_pstrFixedKey,""""))) {
				set pstrGlobal=""
				quit
			}
		}
 
		if (pstrPrimaryKey'="") && (pstrGlobalIdx'="") && ('$find(","_$piece($translate(pstrGlobalIdx,""""),","_+pintIndexKey_",",2,99),$translate(","_pstrPrimaryKey_",",""""))) {
			set blnQuit=$$$NO
			quit
		}
 
		if '$find($translate(pstrGlobalIdx,""""),$translate(pstrGlobalIdxCopy,"""")) {
			set pstrGlobal=""
			quit
		}
		if pstrGlobalIdx="" {
			set pstrGlobal=""
			quit
		}
 
		set intIndexCount = $length(pstrGlobalIdx,",")
		set strLast       = $reverse($extract($reverse(pstrGlobalIdx),2,999))  ;TYBD;WENN IM KEY "()" ENTHALTEN
		set pstrGlobal    = pstrGlobalTemp
		for loop=(intIndexCount-YMAXKEY+1):1:intIndexCount {
			set intLength = $length(pstrGlobal)
			if ($extract(pstrGlobal,intLength)'="(") && ($extract(pstrGlobal,intLength)'=",") {
				set pstrGlobal = pstrGlobal_"," 
			}
			set pstrGlobal = pstrGlobal_$piece(strLast,",",loop)
		}
 
		set pstrGlobal=pstrGlobal_")"
 
		if $find(pstrGlobal,"(,") {
			set pstrGlobal=$piece(pstrGlobal,"(,",1)_"("_$piece(pstrGlobal,"(,",2,99)
		}
		if $find(pstrGlobal,",)") {
			set pstrGlobal=$piece(pstrGlobal,",)",1)_")"
		}
 
		//if penumAltSave'=4 set pstrGlobal=$query(@pstrGlobal)
		
		set pstrGlobal    = $query(@pstrGlobal)
		set pobjRecord    = ""
		set strGlobalLoad = pstrGlobal
		if pstrSaveData'="" {
			set strGlobalLoad="^"_pidClass_"("_$piece(strGlobalLoad,"(",2,99)
		}
		if strGlobalLoad'="" {
			set pobjRecord=$$^WWWSETL(strGlobalLoad)
		}
		
		if pstrWildcard'="" {
			if $extract(pstrWildcard)'="|" {
				if pstrGlobal'="" {
					if YUMLAU="" {
						if '$find($translate(pstrGlobal_" "_pobjRecord,$$$LC,$$$UC),pstrWildcard) {
							set blnQuit=$$$NO
							quit
						}
					} else {
						if '$find($$$Index(pstrGlobal_" "_pobjRecord),pstrWildcard) {
							set blnQuit=$$$NO 
							quit
						}
					}
				}
			}
		} else {
			if pstrPrimaryKey=""  {
				if '$find($translate(pstrGlobal,""""),$translate(pstrGlobalComma,"""")){
					set blnQuit=$$$NO
				}
			} else {
				if '$find($translate(pstrGlobal,""""),$translate(","_pstrPrimaryKey,"""")) {
					set blnQuit=$$$NO
				}
			}
		}
		
	 	quit:((pstrGlobal="") || (blnQuit))
	 }
	
	quit
	*/
	
SATZ1(pidClass,pstrPrimaryKey,pstrVariableKey,pintIndexKey,pstrSaveData,penumAltSave,&pstrGlobal,&pobjRecord,&pstrGlobalIdx,&pintCurrentCount,penumCompleteKey,ptmsLock,pstrKeyContains,pstrDataContains) ;
	;-------------------------------------------------------------------------------
	; History :
	; 31-Jul-2007	RPW		SR15571: Peer correction - missed test removed
	; 12-Jul-2007	RPW		SR15571: Rewrite into brace syntax
	;-------------------------------------------------------------------------------
	new blnQuit,intLength,loop,idField,objRecord,strGlobalLoad,strIndex
	new strIndexList,strIndexPiece,strKey,strPiece,strPiece2,strTempKey
	
	quit:((pstrGlobal="") || (pstrGlobalIdx=""))
	quit:(($length(pstrGlobal,",")>1) && ($find(pstrGlobal,"2)")) && ($find(pidClass,"t")))  ;2.EBENE BEI ZEITABHÄNGIGE ERFASSUNG   ;next to logging 
	quit:((pstrSaveData="") && ('$find(pstrGlobal,"^[")) && (pidClass'=$piece($piece(pstrGlobal,"^",2),"(",1)))
	
	set strKey=$translate($piece($piece($piece(pstrGlobal,"(",2,99),",",2,99),",1)",1),"""")
	//if penumAltSave=4 set strKey=$translate($piece($piece(pstrGlobal,"(",2),")",1),"""")
	
	if $find(strKey,")") set strKey=$piece(strKey,")",1)
	
	quit:((strKey="") || $find(strKey,")"))
	
	set strTempKey = strKey
	;if (penumAltSave>0) && (penumAltSave'=4) {     ; Rob's version
	if (penumAltSave>0) {                           ; revised correction 31-Jul-2007
		set intLength = $length(strTempKey,",")
		if intLength>YMAXKEY {
			set strTempKey=$piece(strTempKey,",",1,intLength-1)
		}
	}
	
	set intLength = $length(strTempKey,",")
	
	if ($length(strTempKey,",")>1) && (penumCompleteKey=2) {
		set strTempKey = $piece(strTempKey,",",1,$length(strTempKey,",")-1)
	}
	
	if +pintIndexKey=0 {
		set pstrVariableKey=$translate(strKey,"""")
		if $translate(pstrPrimaryKey,""""_",")'="" {
			set pstrVariableKey=$piece(pstrVariableKey,pstrPrimaryKey_",",2)
		}
		
	} else {                  ;VORAUSWAHL WENN SORT FÜR NEXT SEARCH ;when to 
		set blnQuit   = $$$NO
	;	set objRecord = $$^WWWSETL(pstrGlobal)
		set objRecord = pobjRecord
		set idField   = ""
		for { 
			set idField=$order(^WWW003(0,pidClass,idField)) 
			quit:idField=""
			
			set strIndex=$$$WWW003IndexKey($get(^WWW003(0,pidClass,idField,1)))
			quit:strIndex=""
			
			for loop=1:1 {
				set strIndexList = $piece(strIndex,",",loop)
				quit:strIndexList=""
				
				set strIndexPiece = +$piece(strIndexList,".",2)
				if strIndexPiece=0 set strIndexPiece=1
				quit:strIndexPiece'=1                      ;only first field 
				
				if $piece(pintIndexKey,".",1)=$piece(strIndexList,".",1) {
					set $piece(pstrVariableKey,",",strIndexPiece) = $translate($piece(objRecord,Y,idField),",") 
					set blnQuit=$$$YES
				}
				quit:blnQuit
			}
			quit:blnQuit
		}
	}
	
	//set YAUSWAHL=pstrVariableKey
	if ptmsLock'=$get(^WWWSOR(YUSER,"LOCK")) {
		halt                   ;FALSCHER LOCK          ; FIXME : HALT? Kills job  <GRF>
	}
	
	quit:$data(^WWWSOR(YUSER,"SEL",strTempKey))
	
	set pintCurrentCount=pintCurrentCount+1
	set ^WWWSOR(YUSER,"KEY",pintCurrentCount,strKey) = pstrGlobal
	set ^WWWSOR(YUSER,"SEL",strTempKey)              = ""
	
	if pstrKeyContains'="" {
		set blnQuit=$$$NO
		for loop=1:1 {
			quit:$translate($piece(strKey,",",loop),"""")=""
			
			if YUMLAU=""  {
				if '$find($translate($translate($piece(strKey,",",loop),""""),$$$LC2,$$$UC2),$piece(pstrKeyContains,",",loop)) {
					set blnQuit=$$$YES
					KILL ^WWWSOR(YUSER,"KEY",pintCurrentCount,strKey)
				}
			} else {
				if '$find($$^WWWUMLAU($translate($piece(strKey,",",loop),""""),2),$piece(pstrKeyContains,",",loop)) {
					set blnQuit=$$$YES
					KILL ^WWWSOR(YUSER,"KEY",pintCurrentCount,strKey)
				}
			}
			quit:blnQuit
		}
	}
	
	if (pstrDataContains'="") && (pstrGlobal'="") {
		if pstrSaveData="" {
			set strGlobalLoad = pstrGlobal
		} else {
			set strGlobalLoad = "^"_pidClass_"("_$piece(strGlobalLoad,"(",2,99)
		}
		if YUMLAU="" {
			set objRecord=$translate($$^WWWSETL(strGlobalLoad),$$$LC,$$$UC)
		} else {
			set objRecord=$$$Index($$^WWWSETL(strGlobalLoad))
		}
		for loop=1:1:$length(objRecord,Y) {
			set strPiece  = $piece(objRecord,Y,loop)
			set strPiece2 = $piece(pstrDataContains,Y,loop)
			if (strPiece2'="") && (strPiece'="") {
				if YUMLAU="" {
					if '$find($translate(strPiece,$$$LC,$$$UC),strPiece2) {
						KILL ^WWWSOR(YUSER,"KEY",pintCurrentCount,strKey)
					}
				} else {
					if '$find($$$Index(strPiece),strPiece2) {
						KILL ^WWWSOR(YUSER,"KEY",pintCurrentCount,strKey)
					}
				}
			}
		}
	}
	
	quit
	
]]></Routine>
</Export>