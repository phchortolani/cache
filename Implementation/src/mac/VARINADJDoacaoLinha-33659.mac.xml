<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARINADJDoacaoLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARINADJDoacaoLinha
#include %occInclude
#include COMSYS
#include INConst
#include COMGridEdit31

#define FORMFldINADJLineQuantity	 3
#define FORMFldINADJLineLotNo	    19
#define FORMFldINADJLineExpiryDate	20
#define FORMFldINADJLineBrand		21
#define FORMFldINADJLineOwner		22
#define FORMFldINADJLineProgram		23

#define DELIM	$char(31)


OnBlur(pidClassField,&pobjLine,pidKeys="",pGridRow)
	;-------------------------------------------------------------------------------
	; On Blur from Item, Qty and Unit fields.
	; Calculate unit, and costs
	;
	; Called By : COMGridEdit31Events due to setting on form
	; 
	; Params:	pidClassField	- field id
	;
	; ByRefs:	pobjLine		- current line object
	;			GROW 			- current Grid Row
	; Returns:
	;
	; History:
	; 24-May-2010   PPP     SR17320: Added call to DynaGrid
	; 12-Aug-2009	PPP		SR16765:Only update if expiry date is not blank
	; 17-Jun-2009 	PPP 	SR16510:Get the Lot from a method
	; 05-Mar-2009	GRF		SR16398: use $$$FORMFld... Macros
	; 24-Feb-2009	GRF		SR16394: Clarify pidClassField rather than pidField
	; 07-Jan-2009	HQN		SR16268: Suggest ExpirationDate for existing LotNumber
	; 							on inital entry
	; 06-Jan-2009	HQN		SR16268: Added LotNumber and Expiration date validation
	; 							trigger
	; 23-Oct-2008	HQN		SR16050: Always update Quantity on blur of any field
	; 20-May-2008	HQN 	SR15762: Rerender Quantity field; Use values for units
	; 							from line, would have been set prior
	; 12-May-2008	HQN		SR15726: Added reference and screen updates for
	; 							additional columns
	; 14-Aug-2006	JW		SR14826: Created
	;-------------------------------------------------------------------------------
	new curUnit,fltQuantity,idItem,idUnit,objBundle,objItem,objResultSet,objUItem,sc
	new dteExpiry

	
	set idItem = $$$INADJLineItem(pobjLine)
	
		; If item - update units, and unit cost
	if pidClassField = $$$FldINADJLineItem {
		if idItem="" {
			set curUnit = 0
			set idUnit  = ""
		} else {
			set objItem = $get(^INART(YM,idItem,1))
			set curUnit = $$GetCost^INARTKOST(idItem)
			set idUnit  = $$LoadUnitOfMeasureList^INARTUtilities(idItem)
		}
		set $$$INADJLineUnitCost(pobjLine) = curUnit
		set $$$INADJLineUnit(pobjLine)     = idUnit
		
		; 12-May-2008	; SR15726 vvvvv
		do AddReference^COMGridEdit31Interface($$$FldINADJLineLotNumber,"D")
		do AddReference^COMGridEdit31Interface($$$FldINADJLineExpirationDate,"D")
		do AddReference^COMGridEdit31Interface($$$FldINADJLineBrand)
		do AddReference^COMGridEdit31Interface($$$FldINADJLineOwner)
		do AddReference^COMGridEdit31Interface($$$FldINADJLineProgram1)
		; 12-May-2008	; SR15726 ^^^^
		
	} elseif pidClassField = $$$FldINADJLineQuantity { ; SR15762
		//do AddReference^COMGridEdit31Interface($$$FldINADJLineQuantity)
		do AddReference^COMGridEdit31Interface($$$FldINADJLineLotNumber)
		///do ScreenUpdateStyle^COMGridEdit31S("pY"_GROW_"_"_$$$FORMFldINADJLineQuantity)   ; F3
 	
 	; SR16286 vvvv
	} elseif pidClassField = $$$FldINADJLineExpirationDate {
		do AddReference^COMGridEdit31Interface($$$FldINADJLineLotNumber)
	
	} elseif pidClassField = $$$FldINADJLineLotNumber {

		//SR16510
		set dteExpiry = ##class(alSOH.iUItemPolicy).GetExpiryForLot(idItem,$$$INADJLineLotNumber(pobjLine))
		; Suggest Expiration Date if applicable
		//SR16765
		if dteExpiry'=""	{
			set $$$INADJLineExpirationDate(pobjLine) = dteExpiry
		}
		do AddReference^COMGridEdit31Interface($$$FldINADJLineExpirationDate)
		do AddReference^COMGridEdit31Interface($$$FldINADJLineLotNumber)

	} elseif pidClassField = $$$FldINADJLineBrand {
		//do AddReference^COMGridEdit31Interface($$$FldINADJLineBrand)
		//do ScreenUpdateStyle^COMGridEdit31S("pY"_GROW_"_"_$$$FORMFldINADJLineBrand) 	; F21
	}
 	; SR16286 ^^^^
	
	set curUnit = $$$INADJLineUnitCost(pobjLine)
	set idUnit  = $$$INADJLineUnit(pobjLine)

	if idItem'=""	{
		// Update base qty and total cost
		set fltQuantity = $$CalculateBaseQuantity^INUOMConversion(idItem,idUnit,$$$INADJLineQuantity(pobjLine))
		set $$$INADJLineBaseQuantity(pobjLine)	= fltQuantity
		set $$$INADJLineTotalCost(pobjLine) 	= $$GetCost^INARTKOST(idItem,fltQuantity)
	}
	
	do AddReference^COMGridEdit31Interface($$$FldINADJLineQuantity) ; SR15762
	do ScreenUpdateStyle^COMGridEdit31S("pY"_GROW_"_"_$$$WWW122SequenceNumber($get(^WWW122(0,YFORM,$$$FldINADJLineQuantity,1)))) ; SR16050

	//SR17320 - Redraw DynTable 
  	if $get(pGridRow)'=""    { 

  		do ShowItems^INADJTable(1,"INADJ"_$$$DELIM_"INADJLine"_$$$DELIM_"dStockBundle"_$$$DELIM_pGridRow) 
  	}

	quit

OnBlurQuantidade(pYKEY,pidClassField,&pobjLine)
	set ^zzPetik(1) = "Entrou"
	
	set ^zzPetik(2) = pYKEY
	
	quit:($$$KEY1(pYKEY)="")
	quit:($$$KEY2(pYKEY)="")
	
	set ^zzPetik(3) = "Entrou"
	
	set idItem = $$$INADJLineItem(pobjLine)
	set ^zHGD($zn)=pobjLine

	if pidClassField = 9 {	;9 = FREE1 - Quantidade
	
		set ^zzPetik(4) = "Entrou"
	
	
		if idItem="" {
			set qtdeDigitada = 0
		} else {
			set qtdeDigitada = $piece(pobjLine,Y,9)
		}		
		
		;Verifica se a qtdeDigitada é negativa
		if qtdeDigitada < 0 {
			set strMessage = "Quantidade não pode ser negativa."
			set $piece(pobjLine,Y,9) = 0
			
			set $$$INADJLineQuantity(pobjLine)      = 0
			set $$$INADJLineBaseQuantity(pobjLine)	= 0
			set $$$INADJLineTotalCost(pobjLine) 	= 0
			
			&js<
				alert("<%=strMessage%>");
			>
			quit
		}
		
		;Multiplica por -1 para ficar negativo,
		;isso indica uma saída do estoque
		set $$$INADJLineQuantity(pobjLine) = (qtdeDigitada * -1)
		
		do AddReference^COMGridEdit31Interface($$$FldINADJLineQuantity)
		do ScreenUpdateStyle^COMGridEdit31S("pY"_GROW_"_"_$$$FORMFldINADJLineQuantity)   ; F3
		
		set curUnit = $$$INADJLineUnitCost(pobjLine)
		set idUnit  = $$$INADJLineUnit(pobjLine)
		// Update base qty and total cost
		set fltQuantity = $$CalculateBaseQuantity^INUOMConversion(idItem,idUnit,$$$INADJLineQuantity(pobjLine))
		set $$$INADJLineBaseQuantity(pobjLine)	= fltQuantity
		set $$$INADJLineTotalCost(pobjLine) 	= $$GetCost^INARTKOST(idItem,fltQuantity)
	}
	
	quit
	
UpdateContainer(pstrFld,&objGrid,&headYFELD,&headYMFELD)
	;-------------------------------------------------------------------------------
	; Checks whole grid, if a single record requires lot number or expiry,
	; show that column
	;		hide=$$YES or show=$$$NO
	; 
	; Called By : UpdateContainer^COMGridEdit31G  (see matching code in LoadGrid^INADJ)
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 09-Jul-2009	PPP		SR16721: Optional policy definitions (can be 1-Yes, 2-No, 3-Optional)
	; 19-Jun-2009 	PPP 	SR16510: 	1. Updated routine to use INItemPolicy class
	; 05-Mar-2009	GRF		SR16398: FORMFld macros; clarify boolean usage and
	; 							simplify Hide/Show
	; 12-May-2008	HQN		SR15726: Moved from OnLineAdded
	;-------------------------------------------------------------------------------
	new blnHideExpiry,blnHideLotNumber,objItem,strAdjLine,strLineYKEY
	new blnHideBrand,blnHideOwner,blnHideProgram
	new blnLotNo, blnUseByDate, blnLotUnique, intBrand, intOwner, intProgram
	new idItem

	set blnHideLotNumber	= $$$YES
	set blnHideExpiry		= $$$YES
	set blnHideBrand 		= $$$YES
	set blnHideOwner 		= $$$YES
	set blnHideProgram 		= $$$YES
	
	set strLineYKEY = ""
	for {
		set strLineYKEY = $order(objGrid($$$GRIDYKEYContainer,strLineYKEY))
		quit:(strLineYKEY = "")
		continue:$data(^WWWDATEN(YM,$horolog,YUSER,"VARINADJDoacaoLinha","V","KILLEDRECORD",strLineYKEY))
		
		set strAdjLine = $$$GRIDGetYFELD(strLineYKEY)
		//SR16510
		set idItem = $$$INADJLineItem(strAdjLine)
		if idItem'=""	{
			do GetAttributes^INItemPolicyUtils(idItem, .blnLotNo, .blnUseByDate, .blnLotUnique, .intBrand, .intOwner, .intProgram)
			if blnLotNo							{	set blnHideLotNumber = $$$NO	}
			if blnUseByDate						{	set blnHideExpiry = $$$NO	}
			if (intBrand=1)||(intBrand=3) 		{	set blnHideBrand = $$$NO	}
			if (intOwner=1)||(intOwner=3) 		{	set blnHideOwner = $$$NO	}
			if (intProgram=1)||(intProgram=3) 	{	set blnHideProgram = $$$NO	}
		}
	}	

	$$$StartScript()
	$$$GRIDHideShowColumns($$$FORMFldINADJLineLotNo,blnHideLotNumber,"VARINADJDoacaoLinha")    	; F19
	$$$GRIDHideShowColumns($$$FORMFldINADJLineExpiryDate,blnHideExpiry,"VARINADJDoacaoLinha") 	; F20
	$$$GRIDHideShowColumns($$$FORMFldINADJLineBrand,blnHideBrand,"VARINADJDoacaoLinha")  			; F21
	$$$GRIDHideShowColumns($$$FORMFldINADJLineOwner,blnHideOwner,"VARINADJDoacaoLinha")  			; F22
	$$$GRIDHideShowColumns($$$FORMFldINADJLineProgram,blnHideProgram,"VARINADJDoacaoLinha")  		; F23
	$$$EndScript()
	
	quit	
	
	
	
OnBeforeFormat(pYFIELDNAME,pYTEXT,pYFELD)
	;-------------------------------------------------------------------------------
	; Called By :
	; 	Form - GridEdit:INADJLine
	; 
	; Inputs : 
	;	pYFIELDNAME	- 	Browser Element ID
	;	pYTEXT 		- 	Value currently in element
	;	pYFELD		-	ANM INIssueLine Data record
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 25-May-2010	PPP		SR17320:Check for existing QOH if Adj qty is -ve
	; 24-May-2010	PPP		SR17320:Removed QOH tool tip as the Dynagrid shows the QOH details
	; 30-Sep-2008	PPP		SR16918:Created new method LotExists to check for Lots
	; 05-Aug-2009	PPP		SR16765:Updated Lot Number and Expiry Date checks
	; 22-Jul-2009	PPP		SR16721:2 Missed the Policy Optional check for Program (corrected)
	; 09-Jul-2009	PPP		SR16721: Optional policy definitions (can be 1-Yes, 2-No, 3-Optional)
	; 19-Jun-2009 	PPP 	SR16510: 	1. Updated routine to use INItemPolicy class
	;									2. Included BRAND, OWNER, PROGRAM as additional
	;									   parameters for Bundle creation
	; 20-Mar-2009	GRF		SR16428: Call common code for CellColours; $$$OK return
	; 							not needed
	; 24-Feb-2009	GRF		SR16394: Clarify idClassField rather than idField
	; 06-Feb-2009	GRF		SR16328: EnumReadOnly Macro
	; 06-Jan-2009	HQN		SR16268: Added Unique Lot Number validation
	; 15-Dec-2008	GRF		SR16216: Actual text message - use idItem; use
	; 							$$Get^WWW122 to include customisations; apply to
	; 							expiry date as well.
	; 10-Dec-2008	HQN		SR16216: Stop internal error when ItemPolicy is
	; 							inaccessable.
	; 22-Oct-2008	HQN		SR16050: Show on the tooltip Available/Planned
	; 							Quantities if Item is set
	; 03-Sep-2008	GRF		SR15804: Replace message INADJ001 with IN00753; simplify
	; 20-May-2008	HQN		SR15762: Check for zero quantity
	; 12-May-2008	HQN		SR15726: Created
	;-------------------------------------------------------------------------------
	new blnFound,blnIsLotUnique,blnLotNo,blnLotExists,blnUseByDate,dteCurrentUseBy
	new idClassField,idCurrentLotNo,idItem,idStorage,intBrand,intCol,intOwner,intProgram,intRow
	new loopPolicyAttr,objBundle,objHeader,objItem,objResultSet,sc
	new strADJLine,strDefaultColor,strDisabledColor,strRequiredColor,strWarningColor

	if $$$INADJStatus($$$GRIDYFELDContainer) = 1 quit
	
	$$$GRIDSplitKey(pYFIELDNAME,intRow,intCol)
	
	set strDefaultColor  = $$CellColours^COMGridEditUtil(.strDisabledColor,.strRequiredColor,.strWarningColor,"","","INADJLine",intCol)
 	set YBACKGROUNDCOLOR = strDefaultColor
	set idClassField = $$$GetClassField(YFORM,intCol)

	//SR16510
	set strADJLine = $$$GRIDGetYFELD($$GetYKEY^COMGridEdit31Interface(intRow))
	set idItem     = $$$INADJLineItem(strADJLine)
	do GetAttributes^INItemPolicyUtils(idItem, .blnLotNo, .blnUseByDate, .blnLotUnique, .intBrand, .intOwner, .intProgram)		//SR16721

	; Lot Number
	;---------------------------------------
	if (idClassField = $$$FldINADJLineLotNumber) {

		set YBACKGROUNDCOLOR = strDisabledColor
		set YTOOLTIP = ""

		//SR16765
		if blnLotNo {
			set YBACKGROUNDCOLOR = strRequiredColor
			set YENABLED         = $$$YES 

			if ($$$INADJLineLotNumber(strADJLine) '= "") {
				//SR16918
				set blnLotExists = ##class(alSOH.iUItemPolicy).LotExists(idItem,$$$INADJLineLotNumber(strADJLine))

				//check if Qty < 0 (reducing the Qty, hence Lot has to exist, cannot create new ones)
				if ($$$INADJLineQuantity(strADJLine) < 0)	{
					if 'blnLotExists	{
						set YBACKGROUNDCOLOR = strWarningColor
						set YTOOLTIP = $$$Text("IN00866") ; "Invalid Lot Number"
					}
				}
			}
		}

	; Mark Expiry Date as Mandatory or R/O
	;---------------------------------------
	} elseif (idClassField = $$$FldINADJLineExpirationDate) {
		
		//SR16765
		set blnIsLotUnique = ##class(alSOH.iUItemPolicy).IsLotUnique(idItem,$$$INADJLineLotNumber(strADJLine),$$$INADJLineExpirationDate(strADJLine))

		if ($$$INADJLineQuantity(strADJLine) > 0)	{

			//SR16765			
			if blnUseByDate {
				if blnIsLotUnique=$$$YES {
					set YBACKGROUNDCOLOR = strRequiredColor
					if ($$$INADJLineExpirationDate(strADJLine) '= "")     &&
					   ($$$INADJLineExpirationDate(strADJLine) < $horolog)   { 
						set YTOOLTIP = $$$Text($listbuild("IN00867")) 			// "Invalid Expiry Date"
						set YBACKGROUNDCOLOR = strWarningColor
					}
					set YENABLED         = $$$YES 

				} else {
					set YBACKGROUNDCOLOR = strDisabledColor
					set YENABLED         = $$$NO 				
				}
				
			} else {
				set YTOOLTIP         = ""
				set YBACKGROUNDCOLOR = strDisabledColor
				set YENABLED         = $$$NO 
			}
			
		} else {

			set YBACKGROUNDCOLOR = strDisabledColor
			set YENABLED         = $$$NO 
		
		}				

	; Mark Non-Zero Quantity as Mandatory
	;---------------------------------------
	} elseif (idClassField = $$$FldINADJLineQuantity) { ; SR15762
		set strADJLine = $$$GRIDGetYFELD($$GetYKEY^COMGridEdit31Interface(intRow))
		set objHeader  = $$$GRIDYFELDContainer

		if ($$$INADJLineQuantity(strADJLine) = 0) {
			set YTOOLTIP = $$$Text("IN00753")         ; "Quantity cannot be 0"    ; SR15804 was INADJ001
			set YBACKGROUNDCOLOR = strWarningColor
		
		// SR17320: Not required
		//} else {   ; SR16050 vvvv
		//	if $$$INADJLineItem(strADJLine) '= "" {   ; "Available Quantity " and "Reserved"
		//		set idStorage = ""
		//		set:$$$INADJLineStockLocation(strADJLine)'="" idStorage = $$$INADJSiteLocation(objHeader)_"||"_$$$INADJLineStockLocation(strADJLine)
		//		set YTOOLTIP = $$$Text(32665)_":"_##class(alSOH.iSOH).GetQtyAvailable(idItem,$$$INADJSiteLocation(objHeader),idStorage)
		//		set YTOOLTIP = YTOOLTIP_$char(10)_$$$Text(33292)_":"_##class(alSOH.iSOH).GetQtyPlanned(idItem,$$$INADJSiteLocation(objHeader),idStorage)
		//	}

		//SR17320:
		} elseif ($$$INADJLineQuantity(strADJLine) < 0) {
		
			if '$$CheckForStock^INADJUtils(idItem,
											$$$INADJSiteLocation(objHeader),
											$$$INADJLineStockLocation(strADJLine),
											$$$INADJLineQuantity(strADJLine)*-1,
											$$$INADJLineLotNumber(strADJLine),
											$$$INADJLineExpirationDate(strADJLine),
											$$$INADJLineBrand(strADJLine),
											$$$INADJLineOwner(strADJLine),
											$$$INADJLineProgram1(strADJLine))	{
				set YWARNING = $$$YES
				set YTOOLTIP = $$$Text("IN00897")         ; "Not enough items in storage
			}		
		}          ; SR16050 ^^^^

	} elseif (idClassField = $$$FldINADJLineBrand) {

		if intBrand {
			set:intBrand=1 YBACKGROUNDCOLOR = strRequiredColor		//SR16721
			set YENABLED         = $$$YES 
		} else {
			set YTOOLTIP         = ""
			set YBACKGROUNDCOLOR = strDisabledColor
			set YENABLED         = $$$NO 
		}					

	} elseif (idClassField = $$$FldINADJLineOwner) {

		if intOwner {
			set:intOwner=1 YBACKGROUNDCOLOR = strRequiredColor		//SR16721
			set YENABLED         = $$$YES 
		} else {
			set YTOOLTIP         = ""
			set YBACKGROUNDCOLOR = strDisabledColor
			set YENABLED         = $$$NO 
		}
				
	} elseif (idClassField = $$$FldINADJLineProgram1) {

		if intProgram {
			//set:intProgram YBACKGROUNDCOLOR = strRequiredColor		//SR16721
			set:intProgram=1 YBACKGROUNDCOLOR = strRequiredColor		//SR16721:2
			set YENABLED         = $$$YES 
		} else {
			set YTOOLTIP         = ""
			set YBACKGROUNDCOLOR = strDisabledColor
			set YENABLED         = $$$NO 
		}					
	}	//End If
	
	quit
	

]]></Routine>
</Export>