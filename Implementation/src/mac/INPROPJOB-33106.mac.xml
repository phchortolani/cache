<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPROPJOB" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPROPJOB
#include COMSYS   // SR14746
#include INConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		PRODUKTIONSPLANUNG HINTERGRUNDJOB
	;
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 19-Jun-2007	GRF		SRBR014510: Naked Reference; Doco; quits
	; 21-Sep-2006	FAN		SR14746 Sales statistics incorrect
	; 28-Nov-2005	RPW		SR13916: ZKill ^INPROPJOB(YM)
	; 03.07.2002	ULM
	;-------------------------------------------------------------------------------
	;STARTEN DES PROTOKOLLES AUTOMATISCH (WWWTAG) ;launching automatic 
	;MANUELLER START AUS TERMINAL = D START^INPROPJOB(YM,SPRACHE)
	IF $GET(YM)="" DO ^WWWVAR
	JOB START^INPROPJOB(YM,SPRACHE)::1 QUIT:'$TEST  ;STARTEN HINTERGRUNDJOB ;launching 
	SET ^INPROPJOB1(YM,+$HOROLOG,$PIECE($HOROLOG,",",2),1)="1"_Y_"WWWTAG"_Y_+$HOROLOG_Y_$PIECE($HOROLOG,",",2)  ;PROTOKOLL GESTARTET ;protocol 
	
	;ULM, 11.03.03                                     start/STOP      LOCKDATEI    LOCKSTATUS  PRODUKTIONSPLANUNG
	SET ^INBACKJOBS1(YM,"INPROPJOB",+$HOROLOG,$PIECE($HOROLOG,",",2),1)="1"_Y_"WWWTAG"_Y_"INPROPJOB"_Y_"1"_Y_$$^WWWTEXT(33328)  ;PROTOKOLL GESTARTET, AUSWERTUNGSDATEI HINTERGRUNDJOBS
	QUIT
	
	
MANU ;MANUELLER START 
	;NOCH IN ROUTINE EINZUFÜGEN: PRÜFEN AUF DOPPELSTART/ EIN-AUSSCHALTER/PROTOKOLL ;yet within routine check upon 
	
	;STARTEN DES PROTOKOLLES WENN MANUELL AUSGELÖST (YBED) ;launching when 
	SET VORG(1)=+$GET(VORG(1))
	IF VORG(1)=0 DO ^WWWINFO($$^WWWTEXT(219)) QUIT  ;FALSCHE EINGABE
	
	IF VORG(1)=1 DO  ;STARTEN ;launching 
	. DO ^WWWINFO($$^WWWTEXT(150))  ;GESTARTET
	. JOB START^INPROPJOB(YM,SPRACHE)::1 QUIT:'$TEST  ;STARTEN HINTERGRUNDJOB ;launching 
	. SET ^INPROPJOB1(YM,+$HOROLOG,$PIECE($HOROLOG,",",2),1)="1"_Y_YBED_Y_+$HOROLOG_Y_$PIECE($HOROLOG,",",2)  ;PROTOKOLL GESTARTET ;protocol 
	. ;ULM, 11.03.03                                     start/STOP      LOCKDATEI    LOCKSTATUS  PRODUKTIONSPLANUNG
	. SET ^INBACKJOBS1(YM,"INPROPJOB",+$HOROLOG,$PIECE($HOROLOG,",",2),1)="1"_Y_YBED_Y_"INPROPJOB"_Y_"1"_Y_$$^WWWTEXT(33328)  ;PROTOKOLL GESTARTET, AUSWERTUNGSDATEI HINTERGRUNDJOBS
	
	IF VORG(1)=2 DO  ;STOPPEN
	. SET ^INPROPJOB1(YM,+$HOROLOG,$PIECE($HOROLOG,",",2),1)="2"_Y_YBED_Y_+$HOROLOG_Y_$PIECE($HOROLOG,",",2)  ;PROTOKOLL GESTOPPT ;protocol 
	. ;HIER PROZESS STOPPEN ;here is 
	. DO ^WWWINFO($$^WWWTEXT(151))  ;WIRD GESTOPPT
	. ;ULM, 11.03.03                                     start/STOP      LOCKDATEI    LOCKSTATUS  PRODUKTIONSPLANUNG
	. SET ^INBACKJOBS1(YM,"INPROPJOB",+$HOROLOG,$PIECE($HOROLOG,",",2),1)="2"_Y_YBED_Y_"INPROPJOB"_Y_"0"_Y_$$^WWWTEXT(33328)  ;PROTOKOLL GESTARTET, AUSWERTUNGSDATEI HINTERGRUNDJOBS
	
	QUIT
	
START(YM,SPRACHE)
	;-------------------------------------------------------------------------------
	;	HINTERGRUNDJOB
	;
	; History:
	; 18-Jun-2007	RPW		SRBR014510: Do not perform the actual planning tasks, if not required
	; 30-Jan-2007	RPW		SR15243: Call the new Perform Planning Tag.
	;-------------------------------------------------------------------------------
	NEW AUF,POS,OK,STOP,LASTDAY,LASTRUN,RICHT,TERMIN,NEURECH,ALLE
	
	SET $ZTRAP="^WWWERROR"
	
	IF $GET(YM)="" SET YM=0
	IF $GET(SPRACHE)="" SET SPRACHE="DE"
	SET ^INPROPJOB(YM)=""
	
	LOCK +^INPROPJOB(YM):0 IF '$TEST  QUIT  ;NICHT MÖGLICH (LÄUFT BEREITS) ;Not potential 
	DO
	. NEW YM,SPRACHE
	. DO ^WWWVAR
	
	DO LOW^%PRIO
	SET STOP=0
	SET YHANG=10  ;INTERVALL IN DER DER JOB GESTARTET WIRD ; TYBD 21.01.2003
	IF +$PIECE($GET(^INVORG(YM,YM,1)),Y,128)'=0 SET YHANG=$PIECE(^INVORG(YM,YM,1),Y,128)   ; SRBR014510 Naked Ref
	FOR  DO  HANG YHANG  QUIT:STOP=1
	. ;
	. ;--------------------------------
	. ;PRÜFEN OB PROZESS GESTOPPT WURDE ;check whether were 
	. ;
	. SET LASTDAY=$ORDER(^INPROPJOB1(YM,""),-1)          ;LETZTER BEARBEITUNGSTAG ;last 
	. IF LASTDAY="" SET STOP=1 QUIT                      ;NICHT KORREKT GESTARTET ;Not 
	. SET LASTRUN=$ORDER(^INPROPJOB1(YM,LASTDAY,""),-1)  ;SUCHEN LETZTER RUN ;seek last 
	. IF LASTRUN="" SET STOP=1 QUIT                      ;NICHT KORREKT GESTARTET ;Not 
	. IF $PIECE($GET(^INPROPJOB1(YM,LASTDAY,LASTRUN,1)),Y,1)'=1 SET STOP=1 QUIT  ;PROZESS GESTOPPT
	. ;--------------------------------
	. ;EXECUTE ARTIKELAUFBAU UND ANDERE ARTIKEL-JOBS
	. DO
	. . NEW NEXT,EXECUTE
	. . SET NEXT=""
	. . FOR  SET NEXT=$ORDER(^INARTJOB(YM,NEXT)) QUIT:NEXT=""  DO
	. . . LOCK +^INARTJOB(YM,NEXT):1
	. . . SET EXECUTE=$GET(^INARTJOB(YM,NEXT,1))
	. . . DO
	. . . . NEW NEXT
	. . . . if $get(^SysSetup("ProductionPlanning"))=1 IF EXECUTE'="" XECUTE EXECUTE  ;z.b.: DO ^INARTXL(...) // SRBR014510
	. . . ;
	. . . LOCK -^INARTJOB(YM,NEXT)
	. . . KILL ^INARTJOB(YM,NEXT,1)
	. ;
	. ;-----------------------------------
	. ;EXECUTE PRODUKTION ;EXECUTE production 
	. do PerformPlanning() //SR15243
 
	LOCK -^INPROPJOB(YM)
	ZKILL ^INPROPJOB(YM) ; SR13916: This needs to be killed or the healthcheck fails, plus it's set in the routine above
	QUIT
	
	
PlanOrders()
	;-------------------------------------------------------------------------------
	; Loop through the INPROPJOB global and plan each order line
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 30-Jan-2007	RPW		SR15243: Created
	;-------------------------------------------------------------------------------
	new blnPlanned,idOrder,idLine
	
	set blnPlanned=$$$NO
	
	$$$Order2(^INPROPJOB,YM,idOrder)
		$$$Order3(^INPROPJOB,YM,idOrder,idLine)
			do PlanOrderLine(idOrder,idLine,.blnPlanned)
		$$$End
	$$$End
	
	quit blnPlanned
	
PlanOrderLine(pidOrder,pidLine,&pblnPlanned,pobjJob="")
	;-------------------------------------------------------------------------------
	; Get the order line details and determine if it can be planned.
	; If not set the Production Is Planned field on the line to 2 (boolean has 4 values now!)
	; otherwise kill the data and tell the system the line is planned.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 30-Jan-2007	RPW		SR15243: Created
	;-------------------------------------------------------------------------------
	new objJob,idSort,dteSEDate,blnReplan,blnPlanned,objLine,strStatus
	
	if pobjJob="" {
		set objJob=$get(^INPROPJOB(YM,pidOrder,pidLine,1))
	} else {
		set objJob=pobjJob
	}
	
	set idSort=+$piece(objJob,Y,1)
	if idSort=0 set idSort=1
	set dteSEDate=$piece(objJob,Y,2)
	if dteSEDate="" {
		kill:pobjJob="" ^INPROPJOB(YM,pidOrder,pidLine)
	} else {
		set blnReplan=$piece(objJob,Y,3)
		set blnPlanned=$$^INPROPLAN(pidOrder,pidLine,idSort,dteSEDate,blnReplan)
		if 'blnPlanned {
			set objLine=$get(^INAUFP(YM,pidOrder,pidLine,1))
			set $$$INAUFPProductionIsPlanned(objLine)=2
			set strStatus=$$$Save("INAUFP",pidOrder_$$$COMMA_pidLine,objLine,$$$YES)
		} else {
			kill:pobjJob="" ^INPROPJOB(YM,pidOrder,pidLine)
			set pblnPlanned=$$$YES
		}
	}
	
	quit
	
PerformPlanning(pidOrder="",pidLine="",pobjJob)
	;-------------------------------------------------------------------------------
	; Determine if we are planning a single order or all that need to be planned.
	; If there is an order and a line, then plan this one, otherwise plan them all.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 30-Jan-2007	RPW		SR15243: Created
	;-------------------------------------------------------------------------------
	new blnPlanned
	
	if (pidOrder'="")&&(pidLine'="") {
		set blnPlanned=$$$NO
		do PlanOrderLine(pidOrder,pidLine,.blnPlanned,pobjJob)
	} else {
		set blnPlanned=$$PlanOrders()
	}
	if blnPlanned {
		do ^INMASCHAUSL
		if $$$INVORGUseGraphicDeliveryTraffic($get(^INVORG(YM,YM,1))) {
			do ^INMASCHLAST
		}
	}
	
	quit
	
STATUS   ;ANZEIGEN PROZESS-INFO ;display 
	DO FS^WWWTAB($$^WWWTEXT(32782))  ;PROZESS-INFO
	
	LOCK +^INPROPJOB(YM):0 IF '$TEST DO  QUIT  ;IN BEARBEITUNG  ;BEI ÄNEDERUNG DER LOCKDATEI AUCH ÄNDERUNG IN INBACKJOBS ;within adaptation next to the too alteration within 
	. NEW LASTRUN,TEXT,LASTDAY
	. SET TEXT="33098"  ;PROZESS GESTARTET
	. SET LASTDAY=$ORDER(^INPROPJOB1(YM,""),-1)  ;SUCHEN LETZTER TAG ;seek last TAG 
	. QUIT:LASTDAY=""
	. SET LASTRUN=$ORDER(^INPROPJOB1(YM,LASTDAY,""),-1)  ;SUCHEN LETZTER RUN ;seek last 
	. IF LASTRUN'="" DO
	. . IF $PIECE($GET(^INPROPJOB1(YM,LASTDAY,LASTRUN,1)),Y,1)'=1 DO
	. . . SET TEXT="33100"  ;PROZESS WIRD GESTOPPT
	. ;
	. WRITE "&nbsp;&nbsp;"_$$^WWWTEXT(TEXT)_""
	
	LOCK -^INPROPJOB(YM)
	WRITE "&nbsp;&nbsp;"_$$^WWWTEXT(33099)  ;PROZESS GESTOPPT
	DO FSE^WWWTAB
	QUIT
	
]]></Routine>
</Export>