<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INReqTemplate" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INReqTemplate
#include COMSYS
#include COMConst
#include INConst
	
	; FIXME : <GRF> Verify that strStatus is not to be returned for OnBeforeDelete/
	; 				OnBeforeSave/LoadGrid and, if that is the case, add NEW commands.
	
	
OnBeforeDelete(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; History:
	; 13-May-2008	Luke	SR15614: newed variables 
	; 20-Nov-2007	GRF		SR15614: Copied from INReq
	;-------------------------------------------------------------------------------
	new strStatus
	
	set Q = $$$QSave
	set strStatus = $$$OK       ;$$ExecuteRule(pYFORM,pYM,pstrKey,"Delete") 
 
	if $$$ISOK(strStatus) {
	;***************************************
	 	tstart
		if ($$DeleteAll^INReqTemplateLine() && $$$GRIDSave(pstrKey)) {
			$$$GRIDDelete
	 		tcommit
	 	} else {
		 	trollback
	;***************************************
		 	set strStatus = $$$NO      ; FIXME : <GRF> Error message?
	 	}
 	}
 	if $$$ISERR(strStatus) {
	 	do ReturnError^COMUtilError(strStatus)
	 	set Q=$$$QDontSave
 	}
 	quit
	
	
OnBeforeSave(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; this gets called before the screen write plus its enclosed in a hyper 
	; event or javascript call!
	;
	;
	; History:
	; 13-May-2008	Luke	SR15614: newed variables 
	; 20-Nov-2007	GRF		SR15614: Created
	;-------------------------------------------------------------------------------
 	new strStatus
 	set Q = $$$QSave
 	set strStatus = $$$OK     ;$$ExecuteRule(pYFORM,pYM,pstrKey,"Save") 
 	if $$$ISOK(strStatus) {
	 	set strStatus = $$$GRIDSave(pstrKey)
 	}
 	if $$$ISERR(strStatus) {
	 	do ReturnError^COMUtilError(strStatus)
	 	set Q=$$$QDontSave
 	}
 	quit
	
	
OnAfterSave(pidTemplate)
	;-------------------------------------------------------------------------------
	; Append the Requisition Lines to a template
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 20-Nov-2007	GRF		SR15614: Created
	;-------------------------------------------------------------------------------
	new idRequisition,intReqLine,intTempLine,objReqLine,objTemplate,objTemplateLine,strKey,strStatus
	
	set objTemplate = $get(^INReqTemplate(0,pidTemplate,1))
	set idRequisition = $$$INReqTemplateSourceReqn(objTemplate)
 
	if (idRequisition '= "") && '$data(^INReqTemplateLine(0,pidTemplate)) {
	;	Only load from requisition if no current lines
		set intTempLine = 0
		set intReqLine  = ""
		for {
			set intReqLine = $order(^INReqLine(0,idRequisition,intReqLine))
			quit:intReqLine=""
			
			set objReqLine = $get(^INReqLine(0,idRequisition,intReqLine,1))
			
			set objTemplateLine = ""
			set $$$INReqTemplateLineItem(objTemplateLine)          = $$$INReqLineItem(objReqLine)
			set $$$INReqTemplateLineUnit(objTemplateLine)          = $$$INReqLineUnit(objReqLine)
			set $$$INReqTemplateLineRequiredQty(objTemplateLine)   = $$$INReqLineQtyRequired(objReqLine)
			set $$$INReqTemplateLineFromStockLocn(objTemplateLine) = $$$INReqLineFromStockLocn(objReqLine)
			set intTempLine = intTempLine+1
			set strKey      = pidTemplate_$$$COMMA_intTempLine
			set strStatus   = $$$Save("INReqTemplateLine",strKey,objTemplateLine)
		}
	}
	;	set objReq = ##class(alREQ.dUReqLine).%OpenId("0||"_YKEY_"||"_pintRowCount)
	;	if (objReq = $$$NULLOREF )|| (objReq.DueDate = $$$NULLOREF) {
	;		set objReq = ##class(alREQ.dUReq).%OpenId("0||"_YKEY)		
	quit
	
	
OnAfterDataFields(pCompany,pidForm,pintPage,pstrKey,pobjReq)
	;-------------------------------------------------------------------------------
	; Display the Requisition Template Lines as a grid
	;
	; Called By: Form INReqTemplate - Execute After Data Fields
	; 
	; Params:
	; 
	; ByRef: REQNUM		?
	; 
	; Returns:
	;
	; History:
	; 20-Nov-2007	GRF		SR15614: Created
	;-------------------------------------------------------------------------------
	kill REQNUM            ; may be passed from INReq to populate $$$INReqTemplateSourceReqn
	                       ; - don't want it to be persistent
	if (pintPage = 1) {
		do LoadGrid(pCompany,pidForm,pstrKey,pobjReq)
	}
	quit
	
	
GetDefault(strFieldNo="")
	;-------------------------------------------------------------------------------
	; set Default Variable Input on form field to @$$GetDefault^INReqTemplate(7)
	;
	; Params:
	; 	strFieldNo	Form Field number; "P#" or # from D#
	; 
	; Implicit:
	; 	Interface()		Values preserved from form INReq [Was VORG() but apparently cleared]
	; 					(D# or P1WWWFORM from class INReq)
	; 	YBED			User code
	; 	
	; Returns:
	;	strValue	value to be used as the default
	;	
	; History:
	; 22-Nov-2007	GRF		SR15614: Created
	;-------------------------------------------------------------------------------
	new strValue
	
	; TODO : <GRF> Find better way to manage Requisition values than Interface array.
	
	
	if $$$NEVER {                     ; cover for elseif
	;if strFieldNo = "P1" {                       ; Clear template no
	;	set strValue = YKEY
	;	if YKEY=$get(VORG("P1")) {
	;		set strValue = ""
	;	}
	;	
	} elseif strFieldNo = 7 {                    ; Requisition No
		set strValue = $get(Interface("P1"))
		kill Interface("P1")
		
	} elseif strFieldNo = 8 {                    ; To Location
		set strValue = $get(Interface(3))
		kill Interface(3)
		
	} elseif strFieldNo = 9 {                    ; From Location
		set strValue = $get(Interface(4))
		kill Interface(4)
		
	} elseif strFieldNo = 10 {                   ; User
		set strValue = $get(YBED)
		
	} else {
		set strValue = ""
	}
	quit strValue
	
	
LoadGrid(pCompany,pidForm,pstrKey,pobjReq)
	;-------------------------------------------------------------------------------
	; Called By: OnAfterDataFields
	;-------------------------------------------------------------------------------
	; FIXME : strStatus not newed - see FIXME at top of routine <GRF>
	
	new blnLoadControls,YAUSWAHL,YFORM
		
	if (pstrKey '= "") {
		; FIXME : does editgrid do line locking?    <<< From INReq
		
		set YFORM = "INReqTemplateLine"
		set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
		set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 400
		set $$$COMGridEditParameterGridName(YAUSWAHL)      = YFORM
		set $$$COMGridEditParameterContainer(YAUSWAHL)     = "INReqTemplate"
	;	set $$$COMGridEditParameterUpdateFields(YAUSWAHL)  = "D8=3;D9=4;D10=3-4"
	;	set $$$COMGridEditParameterClearFields(YAUSWAHL)   = ""
	;	set $$$COMGridEditParameterDefaultFields(YAUSWAHL) = 7
		
		set strStatus       = $$$OK    ;$$ExecuteRule(YFORM,pCompany,pstrKey,"LoadGrid") 
		set blnLoadControls = $$$YES
	 	if $$$ISERR(strStatus) {
		 	set blnLoadControls = $$$NO
	 	}
		
		set $$$COMGridEditParameterEnabled(YAUSWAHL) = blnLoadControls
		do Start^COMGridEdit31(YFORM,pstrKey)
		do LoadLines()
	}
	quit
	
	
UseTemplate(pidToLocn,pidFromLocn,pidTemplCode="")
	;-------------------------------------------------------------------------------
	; Filter the cases to be shown in COMView for INReqTemplate
	;
	; Called by :
	;	INReq		Button 4 "Use Template"
	;	   CallBack('UseTemplate^INReqTemplate',document.WWW2.YINReqD3.value,
	;					document.WWW2.YINReqD4.value)
	;	INReqKit	Button 4 "Use Template"
	;	   CallBack('UseTemplate^INReqTemplate',document.WWW2.YINReqD3.value,
	;					document.WWW2.YINReqD4.value,document.WWW2.YINReqD38.value)
	;
	;	Callback routine will add the records to INReqLine / INReqKitLine
	; 
	; Returns:
	;
	; History:
	; 11-Jun-2009	DWR		SR16544: added third parameter, check for existance before
	; 							before continuing. This stops the user using Kit
	; 							requisition from trying to load 2 kits on the same
	; 							requisition. After save, the button is disabled.
	; 22-Nov-2007	GRF		SR15614: Created
	;-------------------------------------------------------------------------------
	if pidTemplCode'="" {
		$$$Alert($$$Text("IN01051"))         ; "One kit per requisition. Delete record to use another kit"
	} else {
		do Initialise^COMViewCustom("INReqTemplate","TemplateSelected^INReqTemplate",$$$YES,$$$NO)
		do Start^COMViewCustom()
	}
	quit
	
	
TemplateApplies(pidTemplate="",pidForm="")
	;-------------------------------------------------------------------------------
	; Used for Calculated property : Class INReqTemplate "TemplateApplies"
	; See WWW003Calc for class INReqTemplate
	; 
	; Inputs
	; pidForm
	; 	INReqTemplate	Always show - may need to elaborate based on user
	; 	INReq			Show unclassified or matching classified
	; 					(i.e. if Location is blank - unclassified
	; 					      if Location is set   - user's location must match
	;	Other			Always show - may need to elaborate based on user
	; 
	; pidTemplate		id of current record being checked
	; 
	; ByRef :
	; 	FFFORM			Preserved form name
	; 	FFKEY			Preserved id for original form
	; 	Interface()		Values preserved from form INReq [Was VORG() but apparently cleared]
	; 					(D# or P1WWWFORM from class INReq)
	; 
	; History:
	; 09-Jun-2010	PPP		SR17353: Updated the check for the Req Number (from a Global)
	; 15-May-2008	GRF		SR15614: Clarify "calling form" information when COMView
	; 							selects a template to populate the INReq lines
	; 26-Nov-2007	GRF		SR15614: Created
	;-------------------------------------------------------------------------------
	new blnApplies,idFromLocn,idINReq,idToLocn,objRequisition,objTemplate
		
	
	if pidForm="INReqTemplate" {
		set blnApplies = $$$YES
		
	} elseif pidForm="COMViewSearch" {
		
		//SR17353
		set idINReq = $get(^CacheTempInterface(YUSER,"P1"))
		set:idINReq="" idINReq=" "
		
		//if $get(FFFORM) = "INReq" {                             ; 15-May-2008
		//SR17353
		if $data(^INReq(0,idINReq,1)) {
			//set idINReq  = $get(FFKEY)
			//if idINReq="" set idINReq = $get(Interface("P1"))   ; Form INReq
			//if idINReq="" set idINReq = " "
			
			set objTemplate    = $get(^INReqTemplate(0,pidTemplate,1))
			set objRequisition = $get(^INReq(0,idINReq,1))
			
			set idToLocn   = $$$INReqToLocn(objRequisition)
			set idFromLocn = $$$INReqFromLocn(objRequisition)
			
			set blnApplies = $$$YES
			
			if $$$INReqTemplateToLocn(objTemplate) '= "" {
				if $$$INReqTemplateToLocn(objTemplate) '= idToLocn {
					set blnApplies = $$$NO
				}
			}
			if $$$INReqTemplateFromLocn(objTemplate) '= "" {
				if $$$INReqTemplateFromLocn(objTemplate) '= idFromLocn {
					set blnApplies = $$$NO
				}
			}
			if $$$INReqTemplateUsers(objTemplate) '= "" {
				if (";"_$$$INReqTemplateUsers(objTemplate)_";") '[ (";"_YBED_";") {
					set blnApplies = $$$NO
				}
			}
		
		} else {                        ; Other COMViewSearch calls
			set blnApplies = $$$YES
		}
		
	} else {
		set blnApplies = $$$YES
	}
	
	quit blnApplies	
	
TemplateSelected(pobjResultSet)
	;-------------------------------------------------------------------------------
	; Post-selection processing from COMView
	; 
	; History:
	; 22-Nov-2007	GRF		SR15614: Created
	;-------------------------------------------------------------------------------
	new idTemplate
	
	while pobjResultSet.Next() {
		set idTemplate = $$GetID^COMViewCustom(pobjResultSet)
		do UseTemplate^INReqLine(idTemplate)
	}
	quit
	
	
LoadLines()
	;-------------------------------------------------------------------------------
	; Copy INReqLine details to INReqTemplateLine grid from [S]ave Template button
	; on INReq form.
	; 
	; By Ref:
	;   pblnAdded : True if lines have been added to the Requistion Template Grid
	;	YGRIDWHITE
	;	YGRIDGRAY
	;	YUSER
	;	
	; History:
	; 16-Dec-2009	GRF		SR17079: Created
	;-------------------------------------------------------------------------------
	new blnOnlyDefaultRow,idFirstRow,idLastRow,idReqn,idReqnLine,intLFDAT
	new loop,objReqnLine,objRow1,objTemplateLine,strLFDAT
	
	set idReqn = $$$GRIDYKEYContainer
	quit:idReqn=""
	
	quit:'$data(^INReqLine(0,idReqn))            ; Must have lines
	quit:$data(^INReqTemplateLine(0,idReqn))     ; already populated - test before called?
	
	$$$GRIDAddBatchStart
	
	; Progressively eliminate cases
	; 1) Check for a single row
	;   a) ROWCOUNT '= 1 indicates can't be default  - append
	;   b) REFERENCEROW : If first'=last then some have been killed to leave ROWCOUNT=1
	; 
	; 2) If only line 1 is present check if it is a default line or an actual one
	;    - Load objRow1 and clear preset data (none in this case)
	;    - Check to see if all fields are null
	;    
	; NOTE : If lines exist in REFERENCEROW (even if killed), the new
	;        order will have lines numbered after those already there.
	;        This may appear to leave gaps in the numbering.
	;        An order loaded onto a grid where the default line has
	;        been deleted will start at line number 2.  This should
	;        be an unusual situation.
	
	set idReqnLine = ""
	for {
		set idReqnLine = $order(^INReqLine(0,idReqn,idReqnLine))
		quit:idReqnLine=""
		
		set objReqnLine = $get(^INReqLine(0,idReqn,idReqnLine,1))

		set $$$INReqTemplateLineItem(objTemplateLine)          = $$$INReqLineItem(objReqnLine)
		set $$$INReqTemplateLineUnit(objTemplateLine)          = $$$INReqLineUnit(objReqnLine)
		set $$$INReqTemplateLineRequiredQty(objTemplateLine)   = $$$INReqLineQtyOrdered(objReqnLine)
		set $$$INReqTemplateLineFromStockLocn(objTemplateLine) = $$$INReqLineFromStockLocn(objReqnLine)  ; actually site locn not storage
		
		set blnOnlyDefaultRow = ($get(^WWWDATEN(0,+$horolog,YUSER,"INReqTemplateLine","V","ROWCOUNT")) = 1)
			
		if blnOnlyDefaultRow {
			set idFirstRow = $order(^WWWDATEN(0,+$horolog,YUSER,"INReqTemplateLine","V","REFERENCEROW",""))
			set idLastRow  = $order(^WWWDATEN(0,+$horolog,YUSER,"INReqTemplateLine","V","REFERENCEROW",""),-1)
			set blnOnlyDefaultRow = ((idFirstRow=idLastRow) && (idFirstRow=1))
		}
		
		if blnOnlyDefaultRow {
			set objRow1 = $$$GRIDGetYFELD(1)    ; only obtained to see if it is empty except for default field valued
			set blnOnlyDefaultRow = ($translate(objRow1,Y,"")="")
		}
	; Replace default row with new details
	;-----------------------
		if blnOnlyDefaultRow {
			set strLFDAT = ""
			set intLFDAT = 1
			for loop=1:1:$length(objTemplateLine,Y) {
				set strDataItem = $piece(objTemplateLine,Y,loop)
				if strDataItem'="" {
				; e.g. objTemplateLine : 20484~1~~0~0~fsm~~20~5~0~5~~~0~0~~~~~~~~~~~~~~~~~"
				;      strLFDAT        : 1,20484~2,1~4,0~5,0~6,fsm~8,20~9,5~10,0~11,5~15,0~15,0
					set $piece(strLFDAT,Y,intLFDAT) = loop_$$$COMMA_strDataItem
					set intLFDAT = intLFDAT+1
				}
			}
			do SetRecord^COMGridEdit31S1("INReqTemplateLine",1,strLFDAT,,$$$NO)   ; => ^WWWDATEN
			
	; Append new row to existing rows
	;-----------------------
		} else {	
			do AddLine^COMGridEdit31Add(objTemplateLine,,"INReqTemplateLine",$$$YES,"",$$$NO,$$$NO,$$$NO)
		}
	}
		
	$$$GRIDAddBatchStop
	quit
	
]]></Routine>
</Export>