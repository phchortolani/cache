<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWFORMStatus" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWFORMStatus
#include COMSYS
 
CheckStatus()
    ;/*------------------------------------------------------------------------------
    ; Check whether datafields have changed - update status
    ;
    ; Params:
    ; 
    ; Returns: nil
    ;
    ; History:
    ; 1-Dec-2005	JW		SR13195: Created
    ;-----------------------------------------------------------------------------*/
	new idStatus,newStatus
	
	if ($get(YART)="D") && '$$GridHasChanged() {
		
		// 1: New
		// 2: Save Changes
		// 3: Saved
		// 4: Data Item in Use
		set idStatus = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"STATUS",1))
		set newStatus = idStatus
		
		if idStatus=$$$Changed {		// Changes have been made
			if '$$Changed() {
				set newStatus = $case($$IsNewRecord(), $$$YES:$$$New, $$$NO:$$$Saved )
			}
			
		} elseif idStatus'=$$$InUse {		// Record is not in use
			if $$Changed(YLFN) {
				set newStatus = $$$Changed
			}
		}
		do UpdateStatus(YFORM,newStatus)
	}
	
	quit
	
	
Changed(pintPiece=0)
	;-------------------------------------------------------------------------------
	; Check whether (a piece of) the form has changed
	;
	; Inputs: YART,YFORM,YUSER
	;
	; Params: pintPiece - piece to check. if not defined, it checks entire form
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	;  1-Dec-2005	JW		SR13195: Created
	;-------------------------------------------------------------------------------
	new idx,val
	
	for idx=1:1:2 {
		set val(idx) = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,YART,idx))
		if pintPiece set val(idx) = $piece(val(idx),Y,YLFN)
	}
	
	quit val(1)'=val(2)
 
	
UpdateStatus(pstrForm,pnewStatus,pblnForce=$$$NO,pstrText="") 
    ;/*-------------------------------------------------------------------------------
    ; Update the "changed" status of the form
    ;
    ; Params:	pstrForm - form to change
    ; 			pnewStatus - new status (BEARBEITUNG app param)
    ; 			pblnForce - whether to force the change
    ; 			pstrText - override of the default text
    ;
    ; ByRefs: nil
    ;
    ; Returns: nil
    ;
    ; History:
    ; 12-Dec-2007	LB		SR15598: Surrounded write with start & end JavaScript Macros
    ;  6-Jul-2006	JW		Added SysEnum macro; changed pblnForce default "" -> $$$NO
    ; 09-Dec-2005	JW		SR13195: Created
    ;-------------------------------------------------------------------------------*/
	new oldStatus
	
	set oldStatus = $get(^WWWDATEN(YM,+$horolog,YUSER,pstrForm,"STATUS",1))
	
	if pblnForce || (pnewStatus '= oldStatus) {
		set ^WWWDATEN(YM,+$horolog,YUSER,pstrForm,"STATUS",1) = pnewStatus
		if pstrText = "" set pstrText = $$$SysEnum("BEARBEITUNG",pnewStatus)
		
		$$$StartScript()
		write " BEARB("""_pstrText_""","_(pnewStatus'=$$$Changed)_");"
		$$$EndScript()
	}
	
	quit
	
	
IsNewRecord()
    ;/*-------------------------------------------------------------------------------
    ; Determine whether the current record is on disk or new.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 19-Nov-2008	HQN		Additional check for multipiece keys, check last key
    ; 						for new strings too
    ; 29-May-2006	JW		Remove + and ,
    ; 01-Dec-2005	JW		SR13195: Created
    ;-------------------------------------------------------------------------------*/
	new oldKey,newKey,blnNew,strOldKey,strNewKey
 
	; 19-Nov-2008 vvvv
	set strOldKey = $get(^WWWDATEN(YM,+$HOROLOG,YUSER,YFORM,"P",2))
	set strNewKey = $get(^WWWDATEN(YM,+$HOROLOG,YUSER,YFORM,"P",1))
	; 19-Nov-2008 ^^^^
	set oldKey = $translate(strOldKey,"+,")
	set newKey = $translate(strNewKey,"+,")
	;set blnNew = (oldKey="") || (oldKey'=newKey) ; 19-Nov-2008
	set blnNew = (oldKey="") || (oldKey'=newKey) || ($length(strOldKey,$$$COMMA)'=$length(strNewKey,$$$COMMA)) || ($piece(strNewKey,$$$COMMA,$length(strNewKey,$$$COMMA)) = "+")
	
	quit blnNew
	
	
GridHasChanged()
    ;/*-------------------------------------------------------------------------------
    ; Whether any of the grids have changed
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:	boolean
    ;
    ; History:
    ; 02-Dec-2005	JW		SR13195: Created
    ;-------------------------------------------------------------------------------*/
	new idGrid,blnChanged
	
	set blnChanged=$$$NO
	
	set idGrid=""
	for {
		set idGrid = $order(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"Grid",idGrid))
		quit:(idGrid="")
		continue:$get(^WWWDATEN(YM,+$horolog,YUSER,idGrid,"V","STATUS",1))'=$$$Changed
		
		set blnChanged = $$$YES
		quit
	}
	
	quit blnChanged
	
 
]]></Routine>
</Export>