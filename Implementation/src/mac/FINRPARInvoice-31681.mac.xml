<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINRPARInvoice" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINRPARInvoice
 
	;-------------------------------------------------------------------------------
	; Routines for reporting on a customer invoice
	;-------------------------------------------------------------------------------
	
	#include COMSYS
	#include FINConst
	#include WWWConst
 
PrintedStatus(pidCustomer,pidInvoice,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Gets "copy" text for an invoice report (where needed)
    ;
    ; Returns: string
    ;
    ; History:
    ; 16-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
	new strPrintedStatus,objInvoice,blnPrinted
	
	set strPrintedStatus=""
 
	if ($get(pidCustomer)'="")&&($get(pidInvoice)'="")&&($get(pidCompany)'="") {
		set objInvoice=$get(^FINARInvoice(pidCompany,pidCustomer,pidInvoice,1))
		set blnPrinted=$$$FINARInvoiceHasBeenPrinted(objInvoice)
		
		if 'blnPrinted {
			set $$$FINARInvoiceHasBeenPrinted(objInvoice)=$$$YES
			do Save^COMUtils("FINARInvoice",pidCustomer_","_pidInvoice,objInvoice,1)	
		} else {
			set strPrintedStatus="("_$$$Text("Com00194")_")"	
		}
	}
 
	quit strPrintedStatus
		
	
GetTaxAmount(pidCustomer,pidInvoice,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Get the tax amount on a FINARInvoice record
    ; (goes over the batch and sums the TAX batch lines)
    ;
    ; Returns: float
    ;
    ; History:
    ; 16-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
	new fltTax,idTran,objTran,idBatch,idInvLine,objInvLineRec,idBlock,idLine
	new objLineRec,fltAmount
	
	set fltTax=0
	
	if ($get(pidCustomer)'="")&&($get(pidInvoice)'="")&&($get(pidCompany)'="") {
		set idTran=""
		for {
			set idTran=$order(^FINARInvoiceTran(pidCompany,pidCustomer,pidInvoice,idTran))
			quit:idTran=""
 
			set objTran=$get(^FINARInvoiceTran(pidCompany,pidCustomer,pidInvoice,idTran,1))
			
			set idBatch=$$$FINARInvoiceTranInterfaceBatch(objTran)
			set idInvLine=$$$FINARInvoiceTranInterfaceBatchLine(objTran)
			
			if (idBatch'="")&(idInvLine'="") {
				set objInvLineRec=$get(^FININTBatchLine(pidCompany,idBatch,idInvLine,1))
				set idBlock=$$$FININTBatchLineBlockNumber(objInvLineRec)
				set idLine=""
				for  {
					set idLine=$order(^FININTBatchLine(pidCompany,idBatch,idLine))
					quit:idLine=""
					
					set objLineRec=$get(^FININTBatchLine(pidCompany,idBatch,idLine,1))
					continue:idBlock'=$$$FININTBatchLineBlockNumber(objLineRec)
					
					if $$$FININTBatchLineInterfaceType(objLineRec)="TAX" {
						set fltAmount=$$$FININTBatchLineAmount(objLineRec)
						set fltTax=fltTax+fltAmount
					}
				}
			}
		}	
	}
 
	quit $zabs(fltTax)
	
	
GetInvoiceType(pidCustomer,pidInvoice,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Returns the type of invoice ("Invoice" or "Tax Invoice")
    ;
    ; Returns: String
    ;
    ; History:
    ; 16-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
	new strType,objInvoice,fltTax
 
	set strType=""
	
	if ($get(pidCustomer)'="")&&($get(pidInvoice)'="")&&($get(pidCompany)'="") {
		set objInvoice=$get(^FINARInvoice(pidCompany,pidCustomer,pidInvoice,1))
		set fltTax=$$GetTaxAmount(pidCustomer,pidInvoice,pidCompany)
		
		if $$$FINARInvoiceBalance(objInvoice)>=0 {
			if +fltTax=0 {
				set strType=$$$Text("Fin00433")  ; "Invoice"
			} else {
				set strType=$$$StrFINARInvTaxInvoice ; "Tax Invoice"	
			}
		} else {
			if +fltTax=0 {
				set strType=$$$Text("Fin00433")_" ("_$$$StrFINARInvCredit_")" ; "Credit"
			} else {
				set strType=$$$Text("Fin00874")  ; "Tax Credit"
			}	
		}
		
	}
	
	quit $zcvt(strType,"U")
	
	
GetLineDescription(pidBatch,pidNumber,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Get a description of a batch line for the invoice
    ;
    ; Returns: String
    ;
    ; History:
    ; 16-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
	new strDescription,objLine,strLineType,strDesc,fltAmt
	
	quit ""
 
 	if $get(pidCompany)="" set pidCompany=0
	set strDescription=""
	
	if ($get(pidBatch)'="")&&($get(pidNumber)'="")&&($get(pidCompany)'="") {
		set objLine=$get(^FININTBatchLine(pidCompany,pidBatch,pidNumber,1))
		
		set fltAmt=$$$FININTBatchLineAmount(objLine)
		set strLineType=$zcvt($$$FININTBatchLineInterfaceType(objLine),"U")
		set strDesc=$piece($$$FININTBatchLineParameters(objLine),",",1)
		
		if $find(strLineType,"ADJ") {
			set strDescription=$$$Text("Fin00155")  ;Adjustment	
		} elseif strLineType="SALE" {
			set strDescription=$$GetProductDescription(strDesc)
		} else {
			set strDescription=strDesc
		}
				
		if (+fltAmt>0)&&(strLineType'="DISCOUNT") {
			set strDescription=strDescription_" ("_$$$StrFINARInvCredit_")"
		}
	}
 
	quit strDescription
		
GetPaymentAmount(pidCustomer,pidInvoice,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Get the amount paid off an invoice (difference between balance and total)
    ;
    ; Returns: float
    ;
    ; History:
    ; 17-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
 
	new fltAmount,objInvoice,fltBalance,fltTotal
 
	set fltAmount=0
	
	if ($get(pidCustomer)'="")&&($get(pidInvoice)'="")&&($get(pidCompany)'="") {
		set objInvoice=$get(^FINARInvoice(pidCompany,pidCustomer,pidInvoice,1))
		set fltBalance=$$$FINARInvoiceBalance(objInvoice)
		set fltTotal=$$$FINARInvoiceInvoiceTotal(objInvoice)
		set fltAmount=$zabs(fltTotal-fltBalance)	
	}
 
	quit fltAmount
	
 
LineInInvoice(pidCustomer,pidInvoice,pidTran,pidBatch,pidBatchLine,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Determines whether or not a batch line is part of a customer invoice
    ; (this depends on the block number of the transaction record)
    ;
    ; Returns: boolean
    ;
    ; History:
    ; 18-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
	new blnInInvoice,objTran,idBatch,idInvLine,objInvLine,idBlock
	new objLineRec
	
	if $get(pidCompany)="" set pidCompany=0
	
	set blnInInvoice=$$$YES
	
	if ($get(pidCustomer)'="")&&($get(pidInvoice)'="")&&($get(pidTran)'="")&&($get(pidCompany)'="") {		
		set objTran=$get(^FINARInvoiceTran(pidCompany,pidCustomer,pidInvoice,pidTran,1))
		set idBatch=$$$FINARInvoiceTranInterfaceBatch(objTran)
		set idInvLine=$$$FINARInvoiceTranInterfaceBatchLine(objTran)
				
		if (idBatch'="")&(idInvLine'="") {
			set objInvLine=$get(^FININTBatchLine(pidCompany,idBatch,idInvLine,1))
			set idBlock=$$$FININTBatchLineBlockNumber(objInvLine)
			
			if ($get(pidBatch)'="")&&($get(pidBatchLine)'="") {		
				set objLineRec=$get(^FININTBatchLine(pidCompany,pidBatch,pidBatchLine,1))
				set blnInInvoice=(idBlock=$$$FININTBatchLineBlockNumber(objLineRec))
			}
		}
	}
	
	quit blnInInvoice
	
	
IncludeLine(pstrLineType)
    ;-------------------------------------------------------------------------------
    ; Determines whether or not a certain type of interface line type
    ; should be included on the invoice statement.
    ;
    ; Returns: boolean
    ;
    ; History:
    ; 18-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
	new blnInclude
 
	set blnInclude=$$$YES
	
	if $get(pstrLineType)'="" {
		if ($extract(pstrLineType,1,2)="AP")||(pstrLineType="TAX")
		   ||(pstrLineType="COGS")||(pstrLineType="ACC")||(pstrLineType="INSHIP") {
			set blnInclude=$$$NO
		}		
	}
	
	quit blnInclude
	
	
GetProductDescription(pidItem)
    ;-------------------------------------------------------------------------------
    ; Gets a product's description from back office via DCM
    ;
    ; Returns: String
    ;
    ; History:
    ; 19-Aug-2005	Steve S		SR12482: Created
    ;-------------------------------------------------------------------------------
	new strDesc,strStatus,strGlobal,idProcess,idSite
	
	quit ""
 
	set strDesc=""
	
	if $get(pidItem)'="" {
		set strStatus=$$tryRelevantEvents^COMDCMControlModule("DISCLINC","FINARItemLoad","other",pidItem)
		if $$$ISOK(strStatus) {
			set strGlobal=$piece(strStatus,Y,2)
			set idProcess=$order(@strGlobal@(""))
			if idProcess'="" {
				set idSite=$order(@strGlobal@(idProcess,"INItemLoad",""))
				if idSite'="" {
					set strDesc=$get(@strGlobal@(idProcess,"INItemLoad",idSite,"Description",1))	
				}
			}
		}	
 
		if strDesc="" set strDesc=$$$Text("Fin00876")_": "_pidItem  ;Item
	}
	
	quit strDesc
 
GetBalanceAtDate(pidCustomerNumber,pidInvoiceNumber,pstrDate,pidCompany)
	;-------------------------------------------------------------------------------
	; Works out the balance outstanding for an Invoice based on the payments that have been made.
	;
	; Params:
	; pidCustomerNumber - Customer Id
	; pidInvoiceNumber - Invoice Id
	; pstrDate - Date to get balance for
	; pidCompany - Company Id
	;
	; ByRefs: None
	;
	; Returns: Balance
	;
	; History:
	; 16-Aug-2006	PO		SR14549: Created
	;-------------------------------------------------------------------------------
	new Y
 
	set Y = "~" // Hardcoded in WWWVORG
 
	quit $$GetBalanceAtDate^FINARInvoice(pidCustomerNumber,pidInvoiceNumber,pstrDate,pidCompany)
 
HasFilter(pidCompany,&pidFilterType)
	;-------------------------------------------------------------------------------
	; Determine whether there is a filter
	;
	; Params:
	; pidCompany - Company Id
	;
	; ByRefs:
	; pidFilterType - Current filter
	;
	; Returns: Whether there is a filter
	;
	; History:
	; 16-Aug-2006	PO		SR14549: Created
	;-------------------------------------------------------------------------------
 
	quit $$HasFilter^FINARInvoiceFilter(pidCompany,.pidFilterType)
 
Filter(pobjInvoice,pidFilter,pidLocation="")
	;-------------------------------------------------------------------------------
	; Determine whether there is a filter
	;
	; Params:
	; pobjInvoice - Invoice record
	; pidFilter - Filter Id
	; pidLocation - Location Id ~ Optional
	;
	; ByRefs: None
	;
	; Returns: Whether or not to include this record
	;
	; History:
	; 16-Aug-2006	PO		SR14549: Created
	;-------------------------------------------------------------------------------
 
	quit $$Filter^FINARInvoiceFilter(pobjInvoice,pidFilter,pidLocation)
 
Period(pidPeriodType,pdteDate,pdteStatementDate)
	;-------------------------------------------------------------------------------
	; Get the canonical month
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 05-Oct-2006	RPW		SR14549: Modified to use + instead of "", also pass in the statement date so we
	; 						can use this for the comparison.
	; 16-Aug-2006	PO		SR14549: Created
	;-------------------------------------------------------------------------------
	new lngCurrentMonth
 
	set lngCurrentMonth = ($$$DateYear(pdteDate) * 12)+$$$DateMonth(pdteDate)
 
	quit $$Period^FINARCustomer(pidPeriodType,pdteDate,$$$NO,pdteStatementDate,lngCurrentMonth)
]]></Routine>
</Export>