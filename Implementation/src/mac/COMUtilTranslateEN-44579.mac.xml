<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMUtilTranslateEN" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMUtilTranslateEN
	;-------------------------------------------------------------------------------
	; Translate core meta data based on a txt file
	; Used for converting SES var forms, classes & Parameters
	; Expect text file "PT-EN.txt", tab-delimited, 2 columns, PT then EN
	; 
	; Logic:
	; 	1. Preparation:
	; 		Collate a list of all the PT phrases used anywhere, into one excel column.
	; 		Translate the PT column into a second EN column.
	; 		From excel, save as text, tab-delimitted.
	; 		Do this routine, passing in the text file.
	; 	2. Load the translation pairs.
	; 	3. Search all phrases in all classes, looking for any phrases that match one of the 
	; 		PT phrases.
	; 	4. Replace any matches with the EN translation.
	; 	5. When PT language customisations exist without an EN equivalent, create the EN.
	; 
	; Limitations:
	; 	1. It may be more sensible to delete customisations rather than translate them.
	; 	If the records were deleted, the field names etc would come from the core data.
	; 	However, some customisations do more than translate, such as change the field position.
	; 	A separate analysis process is required to consider which customisations should in fact
	; 	be brought into the core data.  Consider especially:
	; 	WWW122D, WWW121D
	; 	2. The translation direction here is from PT to EN (core).  As a rough method, we could
	; 	simply change the input text file to be EN to CN to translate into Chinese.  A more
	; 	elegant method would be for EN to CN to impact only the customisations tables.
	; 	3. There could be problems with words like PT(data) = EN(date).  We could accidentally
	; 	translate valid EN words into some other EN word.
	; 	4. If PT has been used in a code value (enumeration, list of values, parameter), it will
	; 	be left as PT; only the code description will be translated.  Assumes numeric code values.
	; 	Programs might trigger logic based on the code value.
	; 	5. This method ignores context. Some translations may be inaccurate depending upon 
	; 	the context.
	; 
	; History:
	; 08-Jul-2011	GRF		SR16925: boolean macros; expand commands; arrange new commands;
	;							Add FIXME notes
	; 02-Dec-2008	CRH		Revise trace levels
	; 01-Dec-2008	CRH		0011, 0021, 0031, 003CalcLang, 1201, 121D1, 1221, 122D1 
	; 27-Nov-2008	CRH		Set form titles to match options on a specified menu,
	; 							except when multiple calls to the same form.
	; 25-Nov-2008	CRH		124D
	; 24-Nov-2008	CRH		Translate all COMView favourites, not just VAR forms.
	; 19-Nov-2008	CRH		WWW122DExecuteAfterDataField; Strip double quotes in
	; 							translation strings; Clobber empty language text;
	; 							Bug with multiples of the same index
	; 18-Nov-2008	CRH		Renamed from COMUtilTranslate.mac to COMUtilTranslateEN.mac
	; 							COMUtilTranslate.mac now is from EN (core) to any
	; 							other language.
	; 13-Nov-2008	CRH		YBED now corrected within onBeforeSave trigger; Log the
	; 							load file; Trim leading/trailing quotes; Create PT
	; 							language text as needed if possible
	; 11-Nov-2008	CRH		120D; Set YBED blank; Avoid re-index
	; 17-Oct-2008	CRH		COMHelp, Button images
	; 25-Sep-2008	CRH		SR15939: Created
	;-------------------------------------------------------------------------------
	
#include COMSYS
#include WWWConst
#include COMConst
#include %occInclude

#define Tab				$char(9)
#define DoTheSave		1
#define DoTheReIndex	0
#define TraceLevel		2
	; 0=No trace; 1=Control; 2=Detail; 3=Verbose; 4=Debug
#define IFTrace(%Level)    if (($$$TraceLevel) >= %Level)
#define Trace(%Level,%Msg) if (($$$TraceLevel) >= %Level) {w $zdt($h),$$$Tab,%Msg,!}
	
	;-------------------------------------------------------------------------------
	; Start = main program
	; 	do Start^COMUtilTranslateEN("\\supportbox\temp\UFH\PT-EN.txt")
	; pstrTranslations	tab-delimited text, 2 columns, PT, EN
	; 					PT <tab> EN	[<tab>Check]
	; pstrMenu			Menu branch, form titles will match these menu selections
	;------------------------------------------------------------------------------- 
Start(pstrTranslations="\\orion\temp\ufh\PT-EN.txt",pstrMenu="Material_Management") public
	new strStatus,intRun
	new arrPhrasesPTtoEN, arrPhrasesENtoPT
 
	do ^WWWVAR				; initialise @NM variables
	
	$$$Trace(1,"# COMUtilTranslateEN version 02-Dec-2008")
	
	;***************************************
	tstart
	;***************************************
	do $ZUTIL(68,40,1)   	; end of file handling
	
	set strStatus=$$$OK
	;
	; Load PT-EN Phrases
	;
	$$$Trace(1,"# Loading Phrases from "_pstrTranslations)
	set strStatus=$$LoadTranslationPairs(pstrTranslations,.arrPhrasesPTtoEN,.arrPhrasesENtoPT)
 
	for intRun=1:1:21 { ; eg. intRun=1,6  or  intRun=1:1:21
		quit:strStatus'=$$$OK
		
		if intRun=1 {
			$$$Trace(1,"# Forms, WWW120 ...")
			set strStatus=$$Forms(.arrPhrasesPTtoEN)
		
		} elseif intRun=2 {
			$$$Trace(1,"# Forms Var, WWW120D ...")
			set strStatus=$$FormsVar(.arrPhrasesPTtoEN)
		
		} elseif intRun=3 {
			$$$Trace(1,"# Buttons, WWW124 ...")
			set strStatus=$$Buttons(.arrPhrasesPTtoEN)
		
		} elseif intRun=4 {
			$$$Trace(1,"# Tabs, WWW1203 ...")
			set strStatus=$$Tabs(.arrPhrasesPTtoEN)
		
		} elseif intRun=5 {
			$$$Trace(1,"# Captions, WWW122 ...")
			set strStatus=$$Captions(.arrPhrasesPTtoEN)

		} elseif intRun=6 {
			$$$Trace(1,"# Free Captions, WWW122D  ...")
			set strStatus=$$FreeCaptions(.arrPhrasesPTtoEN)
		
		} elseif intRun=7 {
			$$$Trace(1,"# App Params, WWW101 ...")
			set strStatus=$$AppParams(.arrPhrasesPTtoEN)
		
		} elseif intRun=8 {
			$$$Trace(1,"# Language Text, WWW009 ...")
			set strStatus=$$LanguageText(.arrPhrasesPTtoEN,.arrPhrasesENtoPT)
		
		} elseif intRun=9 {
			$$$Trace(1,"# User Params, WWWUSERPARA ...")
			set strStatus=$$ParamUserPara(.arrPhrasesPTtoEN)
		
		} elseif intRun=10 {
			$$$Trace(1,"# IN Params, INPARA ...")
			set strStatus=$$ParamInPara(.arrPhrasesPTtoEN)
		
		} elseif intRun=11 {
			$$$Trace(1,"# Class Fields, WWW003  ...")
			set strStatus=$$ClassFields(.arrPhrasesPTtoEN)
		
		} elseif intRun=12 {
			$$$Trace(1,"# Class Index Fields, WWW002  ...")
			set strStatus=$$ClassIndexFields(.arrPhrasesPTtoEN)
		
		} elseif intRun=13 {
			$$$Trace(1,"# Class Index Fields Var, WWW121D  ...")
			set strStatus=$$ClassIndexFieldsVar(.arrPhrasesPTtoEN)
		
		} elseif intRun=14 {
			$$$Trace(1,"# Calc Fields, WWW003Calc  ...")
			set strStatus=$$CalcFields(.arrPhrasesPTtoEN)
		
		} elseif intRun=15 {
			$$$Trace(1,"# Classes, WWW001  ...")
			set strStatus=$$Classes(.arrPhrasesPTtoEN)
		
		} elseif intRun=16 {
			$$$Trace(1,"# COMView ...")
			set strStatus=$$COMView(.arrPhrasesPTtoEN)
		
		} elseif intRun=17 {
			$$$Trace(1,"# COMHelp ...")
			set strStatus=$$COMHelp(.arrPhrasesPTtoEN)
		
		} elseif intRun=18 {
			$$$Trace(1,"# COMHelpButton ...")
			set strStatus=$$COMHelpButton(.arrPhrasesPTtoEN)
		
		} elseif intRun=19 {
			$$$Trace(1,"# COMHelpField ...")
			set strStatus=$$COMHelpField(.arrPhrasesPTtoEN)
		
		} elseif intRun=20 {
			$$$Trace(1,"# Buttons, WWW124D ...")
			set strStatus=$$ButtonsD(.arrPhrasesPTtoEN)
		
		} elseif intRun=21 {
			$$$Trace(1,"# Forms title, WWW004 to WWW120 ...")
			set strStatus=$$FormsMenu(pstrMenu)
		
		} else {
			$$$Trace(1,"  Bug. Option not implemented: " _ intRun)
			quit
		}
  
		$$$Trace(4,"  Completed")
	}
	;***************************************
	if $$$ISERR(strStatus) {
		$$$Trace(0,"# Completed with ERROR.")
		write !,"ERROR: ",strStatus,!
		write "ROLLBACK",!
		trollback
	}
	else {
		$$$Trace(0,"# Completed Successfully.")
		write !,"Completed Successfully.",!
		write "Test, then TCOMMIT or TROLLBACK",!
	}
	;***************************************
 
	quit strStatus
	
	
	;-------------------------------------------------------------------------------
	; PT-EN.txt
	; Load text file into memory to form the basis of translations
	; Note:
	; 1. Some PT strings are longer than 256.  Index fails. 
	; 	The array will index on first 50 chars,
	; 	then list duplicates within that as pairs of PT,EN
	; 2. Should we ignore the first row of the input file, as it contains column labels?
	; 3. Case sensitivity is a pain.  We could uppercase on store, but for better logging,
	; 	we will do it every time with every compare.  Index is always capitals.
	; 4. Text file expected has PT <tab> EN
	; 	then optionally also <tab>Check/OK
	;-------------------------------------------------------------------------------
LoadTranslationPairs(pstrFile,&parrPhrasePT,&parrPhraseEN) private
	new strStatus,intLine,strLine,strX
	new strPT,strEN,strCheck
 
 	set parrPhrasePT = ""
	set strStatus=$$$OK
	open pstrFile:"R":10 else  set strStatus="Can not open file "_pstrFile quit strStatus
	for intLine=1:1 {
		quit:$zeof
		quit:strStatus'=$$$OK
		continue:(intLine<=2)	// Ignore the first line as it contain the column headings
								// 1:1 gives 2 in the first pass (believe it or not)
		use pstrFile
		read strLine
		use 0
		quit:$zstrip(strLine,"<>W")=""
		
		set strPT=$zstrip($piece(strLine,$$$Tab,1),"<>W")
		set strEN=$zstrip($piece(strLine,$$$Tab,2),"<>W")
		set strCheck=$zstrip($piece(strLine,$$$Tab,3),"<>W")
		if (strCheck = "Check") {
			$$$Trace(3,"  "_intLine_$$$Tab_strLine)
		}
		// Some strings have annoying enclosing quotes, and double quotes inside
		// Strip by executing a set on the command line
		if (($extract(strPT,1,1) = $c(34)) && ($extract(strPT,$length(strPT)) = $c(34))) {
			set strX = "set strPT = " _ strPT
			xecute strX
		}
		if (($extract(strEN,1,1) = $c(34)) && ($extract(strEN,$length(strEN)) = $c(34))) {
			set strX = "set strEN = " _ strEN
			xecute strX
		}
		if ((strPT '= strEN) && ($length(strPT) > 0) && ($length(strEN) > 0)) {
			do AddPairPT(strPT, strEN, .parrPhrasePT)
			do AddPairEN(strPT, strEN, .parrPhraseEN)
		}
	} 
	close pstrFile
	$$$Trace(2,"Loaded "_(intLine - 1)_" phrases")
	quit strStatus
 
	;-------------------------------------------------------------------------------
	; Given a PT string, set pstrEN to its translation and return YES.
	; If no EN translation is defined, set to the PT and return NO.
	;-------------------------------------------------------------------------------
TranslatePT(parrPhrasePT,pstrPT,&pstrEN) private
	new blnFound,strFind,strIndex,intSeq,strX
	
	$$$Trace(4,"  "_pstrPT)
	set strFind = $zstrip(pstrPT,"<>W")
	set pstrEN = pstrPT
	set blnFound = ((strFind '= $$$NULLOREF) && (strFind '= ""))
	if (blnFound) {
		set blnFound = $$$NO
		; Strip any annoying enclosing quotes
		if (($extract(strFind,1,1) = $c(34)) && ($extract(strFind,$length(strFind)) = $c(34))) {
			set strX = "set strFind = " _ strFind
			xecute strX
		}		
		set strIndex = $zcvt($extract(strFind,1,50),"u")	; All indexes stored upper case
		if ($data(parrPhrasePT(strIndex))) {
			set intSeq = ""
			for {
				set intSeq = $order(parrPhrasePT(strIndex,intSeq))
				quit:intSeq=""
				
				if (strFind = parrPhrasePT(strIndex,intSeq,"PT")) { 
					set pstrEN = parrPhrasePT(strIndex,intSeq,"EN") 
					set blnFound = $$$YES
					quit
				}
			}
		}	
	}
	quit blnFound
	
	;-------------------------------------------------------------------------------
	; This is a reverse of the above.
	; Given a EN string, set pstrPT to its equivalent and return YES.
	; If no PT equivalent is defined, set to the EN and return NO
	;-------------------------------------------------------------------------------
TranslateEN(parrPhraseEN,pstrEN,&pstrPT) private
	new blnFound,strFind,strIndex,intSeq,strX
	
	$$$Trace(4,"  "_pstrEN)
	set strFind = $zstrip(pstrEN,"<>W")
	set pstrPT = pstrEN
	set blnFound = ((strFind '= $$$NULLOREF) && (strFind '= ""))
	if (blnFound) {
		set blnFound = $$$NO
		; Strip any annoying enclosing quotes
		if (($extract(strFind,1,1) = $c(34)) && ($extract(strFind,$length(strFind)) = $c(34))) {
			set strX = "set strFind = " _ strFind
			xecute strX
		}		
		set strIndex = $zcvt($extract(strFind,1,50),"u")	; All indexes stored upper case
		if ($data(parrPhraseEN(strIndex))) {
			set intSeq = ""
			for {
				set intSeq = $order(parrPhraseEN(strIndex,intSeq))
				quit:intSeq=""
				
				if (strFind = parrPhraseEN(strIndex,intSeq,"EN")) { 
					set pstrPT = parrPhraseEN(strIndex,intSeq,"PT") 
					set blnFound = $$$YES
					quit
				}
			}
		}	
	}
	quit blnFound
	
	
	;-------------------------------------------------------------------------------
	; Store the translation pair in parrPhrasePT, to allow PT-EN translation.
	;-------------------------------------------------------------------------------
AddPairPT(pstrPT,pstrEN,&parrPhrasePT) private
	new strIndex,intSeq,strEN
	
	set strIndex = $zcvt($extract(pstrPT,1,50),"u")	; All indexes stored upper case
 
	set intSeq = $order(parrPhrasePT(strIndex,""),-1)+1 
	
	if (intSeq = 1) || ('$$TranslatePT(.parrPhrasePT,pstrPT,.strEN)) {
		set parrPhrasePT(strIndex,intSeq,"PT")=pstrPT
		set parrPhrasePT(strIndex,intSeq,"EN")=pstrEN
	}
	quit
		
	;-------------------------------------------------------------------------------
	; Store the translation pair in parrPhraseEN, to allow EN-PT translate
	;-------------------------------------------------------------------------------
AddPairEN(pstrPT,pstrEN,&parrPhraseEN) private
	new strIndex,intSeq,strEN
	
	set strIndex = $zcvt($extract(pstrEN,1,50),"u")	; All indexes stored upper case
	set intSeq = $order(parrPhraseEN(strIndex,""),-1)+1 
	
	if (intSeq = 1) || ('$$TranslateEN(.parrPhraseEN,pstrEN,.pstrPT)) {
		set parrPhraseEN(strIndex,intSeq,"PT")=pstrPT
		set parrPhraseEN(strIndex,intSeq,"EN")=pstrEN
	}
	quit
	
	
	;-------------------------------------------------------------------------------
	; WWW120	Forms
	; 	Keys:	FormName
	; 	Fields:	FormHeaderOrImageFile
	; Form titles
 	; Copy into WWW1201
	;-------------------------------------------------------------------------------
Forms(parrPhrasePT) private
	new idForm,obj1201,objForm
	new strENFormHeaderOrImageFile,strFormHeaderOrImageFile,strKey,strStatus
	
	set strStatus=$$$OK
	set idForm=""
	for {
		quit:strStatus'=$$$OK
		set idForm = $order(^WWW120(0,idForm))
		quit:idForm=""
		
		set objForm = $get(^WWW120(0,idForm,1))
		
		set strFormHeaderOrImageFile = $$$WWW120FormHeaderOrImageFile(objForm)
		if ($$TranslatePT(.parrPhrasePT,strFormHeaderOrImageFile,.strENFormHeaderOrImageFile)) {
			$$$Trace(2,"  "_idForm_$$$Tab_strFormHeaderOrImageFile_$$$Tab_strENFormHeaderOrImageFile)
			set $$$WWW120FormHeaderOrImageFile(objForm) = strENFormHeaderOrImageFile
			if ($$$DoTheSave) {
				if '$data(^WWW1201(0,idForm,"PT")) {
					; Create PT
					set obj1201 = ""
					set $$$WWW1201Text(objForm) = strFormHeaderOrImageFile
					set strKey = idForm_",PT"
					$$$Trace(2,"  Created WWW1201"_$$$Tab_strKey_$$$Tab_strFormHeaderOrImageFile)
					set strStatus = $$$Save("WWW1201",strKey,obj1201,$$$YES)
				}
				if (strStatus=$$$OK) {				
					set strKey = idForm
					set strStatus = $$$Save("WWW120",strKey,objForm,$$$YES)
				}
			}
		}
	}
	if ($$$DoTheReIndex) {          ; Re-Index
		do ReIndex^COMIndex("WWW120")
		do ReIndex^COMIndex("WWW1201")
	}
	quit strStatus
	
	
FormsVar(parrPhrasePT) private
	;-------------------------------------------------------------------------------
	; WWW120D	Customised Forms
	; 	Keys:	FormName	Company
	; 	Fields:	FormHeaderOrImageFile	CustomHelpText
	; Forms, company override
	; Note: Ideally, we would copy PT into a customised class, but one does not exist.
	;
	; History
	; 25-May-2011	shobby	SR16925.2: IndividualHelpText->CustomHelpText
	;-------------------------------------------------------------------------------
	new blnTranslated,idCompany,idForm,objForm
	new strCustomHelpText,strENCustomHelpText
	new strENFormHeaderOrImageFile,strFormHeaderOrImageFile,strKey,strStatus
	
	set strStatus = $$$OK
	set idForm    = ""
	for {
		quit:strStatus'=$$$OK
		set idForm = $order(^WWW120D(0,idForm))
		quit:idForm=""
		
		set idCompany = ""
		for {
			quit:strStatus'=$$$OK
			set idCompany = $order(^WWW120D(0,idForm,idCompany))
			quit:idCompany=""
 
			set objForm = $get(^WWW120D(0,idForm,idCompany,1))
			
			set strFormHeaderOrImageFile = $$$WWW120DFormHeaderOrImageFile(objForm)
			set strCustomHelpText        = $$$WWW120DCustomHelpText(objForm)
			
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strFormHeaderOrImageFile,.strENFormHeaderOrImageFile)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strCustomHelpText,.strENCustomHelpText) || blnTranslated
 
			if blnTranslated {
				$$$Trace(2,"  "_idForm_$$$Tab_strFormHeaderOrImageFile_$$$Tab_strENFormHeaderOrImageFile)
				set $$$WWW120DFormHeaderOrImageFile(objForm) = strENFormHeaderOrImageFile
				set $$$WWW120DCustomHelpText(objForm) 	= strENCustomHelpText
				if ($$$DoTheSave) {
					set strKey    = idForm_","_idCompany
					set strStatus = $$$Save("WWW120D",strKey,objForm,$$$YES)
				}
			}
		}
	}
	if ($$$DoTheReIndex) {          ; Re-Index
		do ReIndex^COMIndex("WWW120D")
	}
 
	quit strStatus
	
	;-------------------------------------------------------------------------------
	; Make form titles match menu prompts.
	; Process a specified menu branch, to make all forms linked from that menu
	; have their form title matching the menu prompt.
	; Note:
	; 	There are cases where multiple menu selections call the same form.
	; 	In these cases, the form title will be left as is.
	; WWW120	Forms
	; 	Keys:	FormName
	; 	Fields:	FormHeaderOrImageFile
	; WWW004
	; 	Keys:	ApplicationName	MenuItemNumber
	; 	Fields:	FormName	MenuDescription
	; UPDATE	SQLUser.WWW120, SQLUser.WWW004
	; 	SET		SQLUser.WWW120.FormHeaderOrImageFile = SQLUser.WWW004.MenuDescription
	; 	WHERE 	SQLUser.WWW004.ApplicationName = pstrApplicationName
	; 	AND 	SQLUser.WWW120.FormName = SQLUser.WWW004.FormName
	; 	AND NOT EXISTS (SELECT dup.FormName FROM SQLUser.WWW004 AS dup
	; 			WHERE dup.FormName = SQLUser.WWW004.FormName
	; 			AND dup.ApplicationName = SQLUser.WWW004.ApplicationName
	; 			AND dup.MenuItemNumber != SQLUser.WWW004.MenuItemNumber)
	;-------------------------------------------------------------------------------
FormsMenu(pstrApplicationName) private
	new strStatus,strKey
	new objMenu, objForm
	new idApplicationName, idMenuItemNumber
	new idFormName
	new strFormName, strMenuDescription
	new strFormHeaderOrImageFile
	new strENFormHeaderOrImageFile
	new idMenuItemNumber2, objMenu2, strFormName2, blnFound
	
	set strStatus=$$$OK
	
	; Loop through the matching menu branch
	set idApplicationName = pstrApplicationName
	set idMenuItemNumber = ""
	for {
		quit:strStatus'=$$$OK
		set idMenuItemNumber = $order(^WWW004(0,idApplicationName,idMenuItemNumber))
		quit:idMenuItemNumber=""
		
		set objMenu = $get(^WWW004(0,idApplicationName,idMenuItemNumber,1))
		set strFormName = $$$WWW004FormName(objMenu)
		set strMenuDescription = $$$WWW004MenuDescription(objMenu)
		$$$Trace(3,"  "_strFormName)
		
		; Ignore this form if it is called more than once under this menu
		set idMenuItemNumber2 = ""
		set blnFound = $$$NO
		for {
			set idMenuItemNumber2 = $order(^WWW004(0,idApplicationName,idMenuItemNumber2))
			quit:idMenuItemNumber2=""
			if (idMenuItemNumber2 '= idMenuItemNumber) {
				set objMenu2 = $get(^WWW004(0,idApplicationName,idMenuItemNumber2,1))
				set strFormName2 = $$$WWW004FormName(objMenu2)
				set blnFound = (strFormName2 = strFormName)
				quit:blnFound'=$$$NO
			}
		}
		continue:blnFound'=$$$NO
		
		if (strFormName '= "") {
			; Get the matching form
			set objForm = $get(^WWW120(0,strFormName,1))
			set strFormHeaderOrImageFile = $$$WWW120FormHeaderOrImageFile(objForm)
			if ((strFormHeaderOrImageFile '= "")
				&& (strMenuDescription '= "")
				&& (strFormHeaderOrImageFile '= strMenuDescription)) {
				
				$$$Trace(2,"  "_strFormName_$$$Tab_"["_strFormHeaderOrImageFile_"]"_$$$Tab_"["_strMenuDescription_"]")
				if ($$$DoTheSave) {
					set $$$WWW120FormHeaderOrImageFile(objForm) = strMenuDescription
					set strKey = strFormName
					set strStatus = $$$Save("WWW120",strKey,objForm,$$$YES)
				}
			}
		}
	}
	quit strStatus
	
	
	;-------------------------------------------------------------------------------
	; WWW124	Buttons
	; 	Keys:	FormName	Language1	ButtonNumber
	; 	Fields:	ButtonDescription	Hilfe(Help)	PictureFileOnButton	ImageFileForDisabledButt
	; Search EN buttons, replace PT text with EN text, PT gif with EN gif.
	; Search PT buttons, for those that do not have EN defined, Create EN button.
	; Expect button images to exist for translations
	; Notes:
	; 	This makes an assumption that the same button number has the same meaning
	; 	within each language.
 	;-------------------------------------------------------------------------------
Buttons(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objButton
	new idFormName,idLanguage1,idButtonNumber
	new strButtonDescription,	strHelp,	strPictureFileOnButton,		strImageFileForDisabledButto
	new strENButtonDescription,	strENHelp,	strENPictureFileOnButton,	strENImageFileForDisabledButto
	
	set strStatus=$$$OK
	set idFormName=""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW124(0,idFormName))
		quit:idFormName=""
		
		;
		; Search EN buttons, replace PT with EN
		;
		set idLanguage1 = "EN"
		set idButtonNumber=""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			
			set objButton = $get(^WWW124(0,idFormName,idLanguage1,idButtonNumber,1))
			set strButtonDescription 			= $$$WWW124ButtonDescription(objButton)
			set strHelp 						= $$$WWW124Hilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124PictureFileOnButton(objButton)
			set strImageFileForDisabledButto 	= $$$WWW124ImageFileForDisabledButto(objButton)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strButtonDescription,.strENButtonDescription)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strHelp,.strENHelp) || blnTranslated
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strPictureFileOnButton,.strENPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strImageFileForDisabledButto,.strENImageFileForDisabledButto) || blnTranslated
 
			if (blnTranslated) { ; At least one of the strings needed translation
				$$$Trace(3,"  TR->EN"_$$$Tab_idButtonNumber_$$$Tab_strButtonDescription_$$$Tab_strENButtonDescription)
				if (strHelp '= strENHelp) {
					$$$Trace(2,"  TR->EN"_$$$Tab_idButtonNumber_$$$Tab_strHelp_$$$Tab_strENHelp)
				}
				$$$Trace(2,"  TR->EN"_$$$Tab_idButtonNumber_$$$Tab_strPictureFileOnButton_$$$Tab_strENPictureFileOnButton)				
 
				if ($$$DoTheSave) {
					set $$$WWW124ButtonDescription(objButton) 			= strENButtonDescription
					set $$$WWW124Hilfe(objButton) 						= strENHelp			
					set $$$WWW124PictureFileOnButton(objButton)			= strENPictureFileOnButton
					set $$$WWW124ImageFileForDisabledButto(objButton) 	= strENImageFileForDisabledButto					
					set strKey = idFormName_","_idLanguage1_","_idButtonNumber
					set strStatus = $$$Save("WWW124",strKey,objButton,$$$YES)
				}
			}
		}
 
		;
		; Search PT buttons, for those that do not have EN defined, Create EN button
		; 
		set idLanguage1 = "PT"
		set idButtonNumber=""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			continue:$data(^WWW124(0,idFormName,"EN",idButtonNumber))      ; only consider extra "PT" buttons
			
			set objButton = $get(^WWW124(0,idFormName,idLanguage1,idButtonNumber,1))  ; PT without EN
			set strButtonDescription 			= $$$WWW124ButtonDescription(objButton)
			set strHelp 						= $$$WWW124Hilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124PictureFileOnButton(objButton)
			set strImageFileForDisabledButto	= $$$WWW124ImageFileForDisabledButto(objButton)
						
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strButtonDescription,.strENButtonDescription)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strHelp,.strENHelp) ;$$$$$$$$$$$$$$$ Translate
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strPictureFileOnButton,.strENPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strImageFileForDisabledButto,.strENImageFileForDisabledButto) || blnTranslated			
			
			$$$Trace(2,"  Created EN "_$$$Tab_idButtonNumber_$$$Tab_strButtonDescription_$$$Tab_strENButtonDescription)
			if ($$$DoTheSave) {
				set $$$WWW124ButtonDescription(objButton) 			= strENButtonDescription
				set $$$WWW124Hilfe(objButton) 						= strENHelp
				set $$$WWW124PictureFileOnButton(objButton)			= strENPictureFileOnButton
				set $$$WWW124ImageFileForDisabledButto(objButton)	= strENImageFileForDisabledButto				
				set strKey = idFormName_",EN,"_idButtonNumber
				set strStatus = $$$Save("WWW124",strKey,objButton,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW124")
	}
	quit strStatus
	
	;-------------------------------------------------------------------------------
	; WWW124D	Additional buttons
	; 	Keys:	FormName	Language1	ButtonNumber
	; 	Fields:	ButtonDescription	Hilfe(Help)	PictureFileOnButton	ImageFileForDisabledButt
	; Buttons, separated from core 124, appended during a build.
	; Search EN buttons, replace PT text with EN text, PT gif with EN gif.
	; Search PT buttons, for those that do not have EN defined, Create EN button.
	; Expect button images to exist for translations.
 	;-------------------------------------------------------------------------------
ButtonsD(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objButton
	new idFormName,idLanguage1,idButtonNumber
	new strButtonDescription,	strHelp,	strPictureFileOnButton,		strImageFileForDisabledButto
	new strENButtonDescription,	strENHelp,	strENPictureFileOnButton,	strENImageFileForDisabledButto
	
	set strStatus=$$$OK
	set idFormName=""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW124D(0,idFormName))
		quit:idFormName=""
		
		;
		; Search EN buttons, replace PT with EN
		;
		set idLanguage1 = "EN"
		set idButtonNumber=""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124D(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			
			set objButton = $get(^WWW124D(0,idFormName,idLanguage1,idButtonNumber,1))
			set strButtonDescription 			= $$$WWW124DButtonDescription(objButton)
			set strHelp 						= $$$WWW124DHilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124DPictureFileOnButton(objButton)
			set strImageFileForDisabledButto 	= $$$WWW124DImageFileForDisabledButto(objButton)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strButtonDescription,.strENButtonDescription)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strHelp,.strENHelp) || blnTranslated
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strPictureFileOnButton,.strENPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strImageFileForDisabledButto,.strENImageFileForDisabledButto) || blnTranslated
 
			if (blnTranslated) { ; At least one of the strings needed translation
				$$$Trace(3,"  TR->EN"_$$$Tab_idButtonNumber_$$$Tab_strButtonDescription_$$$Tab_strENButtonDescription)
				if (strHelp '= strENHelp) {
					$$$Trace(2,"  TR->EN"_$$$Tab_idButtonNumber_$$$Tab_strHelp_$$$Tab_strENHelp)				
				}
				$$$Trace(2,"  TR->EN"_$$$Tab_idButtonNumber_$$$Tab_strPictureFileOnButton_$$$Tab_strENPictureFileOnButton)				
 
				if ($$$DoTheSave) {
					set $$$WWW124DButtonDescription(objButton)         = strENButtonDescription
					set $$$WWW124DHilfe(objButton)                     = strENHelp			
					set $$$WWW124DPictureFileOnButton(objButton)       = strENPictureFileOnButton
					set $$$WWW124DImageFileForDisabledButto(objButton) = strENImageFileForDisabledButto					
					set strKey = idFormName_","_idLanguage1_","_idButtonNumber
					set strStatus = $$$Save("WWW124D",strKey,objButton,$$$YES)
				}
			}
		}
 
		;
		; Search PT buttons, for those that do not have EN defined, Create EN button
		; 
		set idLanguage1 = "PT"
		set idButtonNumber=""
		for {
			quit:strStatus'=$$$OK
			set idButtonNumber = $order(^WWW124D(0,idFormName,idLanguage1,idButtonNumber))
			quit:idButtonNumber=""
			continue:$data(^WWW124D(0,idFormName,"EN",idButtonNumber))      ; only consider extra "PT" buttons
			
			set objButton = $get(^WWW124D(0,idFormName,idLanguage1,idButtonNumber,1))  ; PT without EN
			set strButtonDescription 			= $$$WWW124DButtonDescription(objButton)
			set strHelp 						= $$$WWW124DHilfe(objButton)
			set strPictureFileOnButton			= $$$WWW124DPictureFileOnButton(objButton)
			set strImageFileForDisabledButto	= $$$WWW124DImageFileForDisabledButto(objButton)
						
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strButtonDescription,.strENButtonDescription)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strHelp,.strENHelp) ;$$$$$$$$$$$$$$$ Translate
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strPictureFileOnButton,.strENPictureFileOnButton) || blnTranslated
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strImageFileForDisabledButto,.strENImageFileForDisabledButto) || blnTranslated			
			
			$$$Trace(2,"  Created EN"_$$$Tab_idButtonNumber_$$$Tab_strButtonDescription_$$$Tab_strENButtonDescription)
			if ($$$DoTheSave) {
				set $$$WWW124DButtonDescription(objButton) 			= strENButtonDescription
				set $$$WWW124DHilfe(objButton) 						= strENHelp
				set $$$WWW124DPictureFileOnButton(objButton)			= strENPictureFileOnButton
				set $$$WWW124DImageFileForDisabledButto(objButton)	= strENImageFileForDisabledButto				
				set strKey = idFormName_",EN,"_idButtonNumber
				set strStatus = $$$Save("WWW124D",strKey,objButton,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW124D")
	}
	quit strStatus
	
	
	;-------------------------------------------------------------------------------
	; WWW1203	Tabs (tabsheets)
	; 	Keys:	FormName	Language1	Page1
	; 	Fields:	PictureFileForPageTag	ToolTip
	; Search EN tabs, replace PT with EN.
	; Search PT tabs, for those that do not have EN defined, Create EN tab.
 	;-------------------------------------------------------------------------------
Tabs(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objTab
	new idFormName,idLanguage1,idPage1
	new strPictureFileForPageTag,	strToolTip
	new strENPictureFileForPageTag,	strENToolTip
	
	set strStatus=$$$OK
	set idFormName=""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW1203(0,idFormName))
		quit:idFormName=""
		
		;
		; Search EN tabs, replace PT with EN
		;
		set idLanguage1 = "EN"
		set idPage1=""
		for {
			quit:strStatus'=$$$OK
			set idPage1 = $order(^WWW1203(0,idFormName,idLanguage1,idPage1))
			quit:idPage1=""
			
			set objTab = $get(^WWW1203(0,idFormName,idLanguage1,idPage1,1))
			set strPictureFileForPageTag	= $$$WWW1203PictureFileForPageTag(objTab)
			set strToolTip 					= $$$WWW1203ToolTip(objTab)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strPictureFileForPageTag,.strENPictureFileForPageTag)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strToolTip,.strENToolTip) || blnTranslated ;$$$$$$$$$$$$$$$ Translate
			
			if (blnTranslated) { ; At least one of the strings needed translation
				$$$Trace(2,"  TR->EN"_$$$Tab_idPage1_$$$Tab_strPictureFileForPageTag_$$$Tab_strENPictureFileForPageTag)
				if ($$$DoTheSave) {
					; Preserve in WWW1203(PT)
					if '$data(^WWW1203(0,idFormName,"PT",idPage1)) {
						set strKey = idFormName_",PT,"_idPage1
						$$$Trace(2,"  Created WWW1203(PT)"_$$$Tab_strKey_$$$Tab_strPictureFileForPageTag_$$$Tab_strENPictureFileForPageTag)						
						set strStatus = $$$Save("WWW1203",strKey,objTab,$$$YES)
					}
					set $$$WWW1203PictureFileForPageTag(objTab) = strENPictureFileForPageTag
					set $$$WWW1203ToolTip(objTab) 				= strENToolTip			
					if (strStatus=$$$OK) {
						set strKey = idFormName_","_idLanguage1_","_idPage1
						set strStatus = $$$Save("WWW1203",strKey,objTab,$$$YES)
					}
				}
			}
		}
 
		;
		; Search PT tabs, for those that do not have EN defined, Create EN tab
		; 
		set idLanguage1 = "PT"
		set idPage1=""
		for {
			quit:strStatus'=$$$OK
			set idPage1 = $order(^WWW1203(0,idFormName,idLanguage1,idPage1))
			quit:idPage1=""
			continue:$data(^WWW1203(0,idFormName,"EN",idPage1))      ; only consider extra "PT" tabs
			
			set objTab = $get(^WWW1203(0,idFormName,idLanguage1,idPage1,1))  ; PT without EN
			set strPictureFileForPageTag 	= $$$WWW1203PictureFileForPageTag(objTab)
			set strToolTip 					= $$$WWW1203ToolTip(objTab)
			set blnTranslated = $$Transl]]><![CDATA[atePT(.parrPhrasePT,strPictureFileForPageTag,.strENPictureFileForPageTag)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strToolTip,.strENToolTip) ;$$$$$$$$$$$$$$$ Translate
			
			$$$Trace(2,"  Created (EN)"_$$$Tab_idPage1_$$$Tab_strPictureFileForPageTag_$$$Tab_strENPictureFileForPageTag)
			set $$$WWW1203PictureFileForPageTag(objTab)	= strENPictureFileForPageTag
			set $$$WWW1203ToolTip(objTab) 				= strENToolTip			
			if ($$$DoTheSave) {
				set strKey = idFormName_",EN,"_idPage1
				set strStatus = $$$Save("WWW1203",strKey,objTab,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW1203")
	}
	quit strStatus
	
 
	;-------------------------------------------------------------------------------
 	; WWW122	Captions (field prompts) (Overrides WWW003)
 	; 	Keys:	FormName	DataItemNumber
 	; 	Fields:	GroupName	ManualCaption
 	; Search captions, replace PT with EN
 	; Copy into WWW1221
	;-------------------------------------------------------------------------------
Captions(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objCaption, obj1221
	new idFormName,idDataItemNumber
	new strGroupName,	strManualCaption
	new strENGroupName,	strENManualCaption
	new strLangTextID
	
	set strStatus=$$$OK
	set idFormName=""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW122(0,idFormName))
		quit:idFormName=""
		
		;
		; Search captions, replace PT with EN
		;
		set idDataItemNumber=""
		for {
			quit:strStatus'=$$$OK
			set idDataItemNumber = $order(^WWW122(0,idFormName,idDataItemNumber))
			quit:idDataItemNumber=""
			
			set objCaption = $get(^WWW122(0,idFormName,idDataItemNumber,1))
			set strGroupName		= $$$WWW122GroupName(objCaption)
			set strManualCaption	= $$$WWW122ManualCaption(objCaption)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strGroupName,.strENGroupName)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strManualCaption,.strENManualCaption) || blnTranslated
			
			if (blnTranslated) { ; At least one of the strings needed translation
				$$$Trace(2,"  TR->EN"_$$$Tab_idFormName_$$$Tab_strManualCaption_$$$Tab_strENManualCaption)
				set $$$WWW122GroupName(objCaption) 		= strENGroupName
				set $$$WWW122ManualCaption(objCaption)	= strENManualCaption			
				if ($$$DoTheSave) {
					; WWW122GroupName cannot be preserved in WWW1221.
					; Instead, we will find/create a LanguageText WWW009 for PT & EN
					; and set that code in the field instead
					if (strGroupName '= "") {
						set strStatus=$$CreateWWW009(strGroupName, strENGroupName, .strLangTextID)
						set $$$WWW122GroupName(objCaption) 		= strLangTextID
					}
					if (strStatus=$$$OK) {
						; Preserve in WWW1221
						if '$data(^WWW1221(0,idFormName,idDataItemNumber,"PT")) {
							; Create PT
							set obj1221 = ""
							set $$$WWW1221Text(obj1221) = strManualCaption
							; lost = strGroupName
							set strKey = idFormName_","_idDataItemNumber_",PT"
							$$$Trace(2,"  Created WWW1221"_$$$Tab_strKey_$$$Tab_strManualCaption)
							set strStatus = $$$Save("WWW1221",strKey,obj1221,$$$YES)
						}
					}
					if (strStatus=$$$OK) {					
						set strKey = idFormName_","_idDataItemNumber
						set strStatus = $$$Save("WWW122",strKey,objCaption,$$$YES)
					}
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {        ; Re-Index
		do ReIndex^COMIndex("WWW122")
		do ReIndex^COMIndex("WWW1221")
	}
	quit strStatus
 
  
FreeCaptions(parrPhrasePT) private
	;-------------------------------------------------------------------------------
 	; WWW122D	Customised captions
 	; 	Keys:	FormName	FieldNumber	Company
 	; 	Fields:	FieldDescription	GroupName	CustomHelpText
 	; Company override.
 	; Search captions, replace PT with EN.
 	; Copy into WWW122D1
	;
	; History
	; 25-May-2011	shobby	SR16925.2: IndividualHelpText->CustomHelpText
	;--------------------------------------------------------------------------------
	new blnTranslated,idCompany,idFieldNumber,idFormName,obj122D1,objCaption
	new strCustomHelpText,strENCustomHelpText,strENFieldDescription,strENGroupName
	new strENExecuteAfterDataField,strExecuteAfterDataField
	new strFieldDescription,strGroupName,strKey,strLangTextID,strStatus
	
	$$$Trace(2,"     (Check the EN executes similar code to PT)")
	
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW122D(0,idFormName))
		quit:idFormName=""
		
		set idFieldNumber = ""
		for {
			; FIXME : quit:strStatus'=$$$OK ?
			set idFieldNumber = $order(^WWW122D(0,idFormName,idFieldNumber))
			quit:idFieldNumber=""
 
			;
			; Search captions, replace PT with EN
			;
			set idCompany=""
			for {
				quit:strStatus'=$$$OK
				set idCompany = $order(^WWW122D(0,idFormName,idFieldNumber,idCompany))
				quit:idCompany=""
				
				set objCaption = $get(^WWW122D(0,idFormName,idFieldNumber,idCompany,1))
				set strFieldDescription      = $$$WWW122DFieldDescription(objCaption)
				set strGroupName             = $$$WWW122DGroupName(objCaption)
				set strCustomHelpText        = $$$WWW122DCustomHelpText(objCaption)		;SR16925.2
				set strExecuteAfterDataField = $$$WWW122DExecuteAfterDataField(objCaption)
							
				; NOTE $$$Translate performs a change as well as returning a boolean
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strFieldDescription,.strENFieldDescription)
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strGroupName,.strENGroupName) || blnTranslated
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strCustomHelpText,.strENCustomHelpText) || blnTranslated
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strExecuteAfterDataField,.strENExecuteAfterDataField) || blnTranslated
				
				if (strExecuteAfterDataField '= "") && (strExecuteAfterDataField '= strENExecuteAfterDataField) {
					$$$Trace(2,"     Ex(PT):"_$$$Tab_idFormName_$$$Tab_strExecuteAfterDataField)
					$$$Trace(2,"     Ex(EN):"_$$$Tab_idFormName_$$$Tab_strENExecuteAfterDataField)
				}
				
				if blnTranslated { ; At least one of the strings needed translation
					$$$Trace(2,"  TR->EN"_$$$Tab_idFormName_$$$Tab_strFieldDescription_$$$Tab_strENFieldDescription)
					set $$$WWW122DFieldDescription(objCaption)      = strENFieldDescription
					set $$$WWW122DGroupName(objCaption)             = strENGroupName
					set $$$WWW122DCustomHelpText(objCaption)        = strENCustomHelpText		;SR16925.2		
					set $$$WWW122DExecuteAfterDataField(objCaption) = strENExecuteAfterDataField
					if ($$$DoTheSave) {
						; strGroupName cannot be preserved in WWW122D1
						; Instead, we will find/create a LanguageText WWW009 for PT & EN
						; and set that code in the field instead
						if (strGroupName '= "") {
							set strStatus = $$CreateWWW009(strGroupName,strENGroupName,.strLangTextID)
							set $$$WWW122DGroupName(objCaption) = strLangTextID
						}
						if (strStatus=$$$OK) {
							; Preserve in WWW122D1
							if '$data(^WWW122D1(0,idFormName,idFieldNumber,idCompany,"PT")) {
								; Create PT
								set obj122D1 = ""
								set $$$WWW122D1FieldDescription(obj122D1) = strFieldDescription
								; lost = strGroupName
								; lost = strCustomHelpText
								; lost = strExecuteAfterDataField
								set strKey = idFormName_","_idFieldNumber_","_idCompany_",PT"
								$$$Trace(2,"  Created WWW122D1"_$$$Tab_strKey_$$$Tab_strFieldDescription)
								set strStatus = $$$Save("WWW122D1",strKey,obj122D1,$$$YES)
							}
							if (strStatus=$$$OK) {						
								set strKey = idFormName_","_idFieldNumber_","_idCompany
								set strStatus = $$$Save("WWW122D",strKey,objCaption,$$$YES)
							}
						}
					}
				}
			}
		}
	}
	if ($$$DoTheReIndex) {       ; Re-Index
		do ReIndex^COMIndex("WWW122D")
		do ReIndex^COMIndex("WWW122D1")
	}
	quit strStatus
	
	
CreateWWW009(pstrPT, pstrEN, &pstrLangTextID) private
  	;-------------------------------------------------------------------------------
 	; CreateWWW009
 	; 	Locate the given string in Language text WWW009.
 	; 	If it cannot be located, create a new WWW009.
 	; 	Avoid cases where the string already is a WWW009 code.
	;-------------------------------------------------------------------------------
	new idLanguage1,idTextNumber,objText
	new strKey,strlastID,strNextNum,strStatus,strText,strX
	
	set strStatus      = $$$OK
	set pstrLangTextID = ""
	;
	; Search existing codes
	; 
	if $data(^WWW009(0,"EN",pstrEN)) set pstrLangTextID = pstrEN
	if $data(^WWW009(0,"EN",pstrPT)) set pstrLangTextID = pstrPT
	if $data(^WWW009(0,"PT",pstrEN)) set pstrLangTextID = pstrEN
	if $data(^WWW009(0,"PT",pstrPT)) set pstrLangTextID = pstrPT
	
	if (pstrLangTextID = "") {         ; Search EN text
		set idLanguage1  = "EN"
		set idTextNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
			}
			if ((strText = pstrPT) || (strText = pstrEN)) {
				set pstrLangTextID = idTextNumber
				$$$Trace(3,"  WWW009("_pstrLangTextID_")="_$$$Tab_pstrPT_$$$Tab_pstrEN)
				quit
			}
		}
	}
	
	if (pstrLangTextID = "") {         ; Search PT text
		set idLanguage1  = "PT"
		set idTextNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
			}
			if ((strText = pstrPT) || (strText = pstrEN)) {
				set pstrLangTextID = idTextNumber
				$$$Trace(3,"  WWW009("_pstrLangTextID_")="_$$$Tab_pstrPT_$$$Tab_pstrEN)				
				quit
			}
		}
	}
	
	if (pstrLangTextID = "") {
		; Create new WWW009 using next "MED" prefix
		set strlastID = $ORDER(^WWW009(0,"EN","MED99999"),-1)
 		set strNextNum = $extract(strlastID,4,99) + 1
 		if (strNextNum < 1500) {
	 		set strNextNum = 1500
 		}
 		set strNextNum = "MED"_$tr($j(strNextNum,5)," ","0")
		set objText = ""
		set $$$WWW009Text(objText) = pstrEN
		set strKey = "EN,"_strNextNum
		set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
		if (strStatus=$$$OK) {
			set $$$WWW009Text(objText) = pstrPT
			set strKey = "PT,"_strNextNum			
			set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
		}
		$$$Trace(2,"  Created WWW009("_strNextNum_")="_$$$Tab_pstrPT_$$$Tab_pstrEN)	
		set pstrLangTextID = strNextNum
	}
 
	quit strStatus
 
 
 	;-------------------------------------------------------------------------------
	; WWW009	Language text (help, alerts, substitutions)
	; 	Keys:	Language1	TextNumber
	; 	Fields:	Text
	; Search EN text which has PT text, create PT.
	; Search EN text, replace PT with EN.
	; Search PT text, create EN.
	; Search EN text, create PT.
 	;-------------------------------------------------------------------------------
LanguageText(parrPhrasePT,parrPhraseEN) private
	new strStatus,strKey,blnTranslated,strX
	new objText
	new idLanguage1,idTextNumber
	new strText
	new strENText,strPTText
	
	set strStatus=$$$OK
	;
	; Search EN text, replace PT with EN
	;
	set idLanguage1 = "EN"
	set idTextNumber=""
	for {
		quit:strStatus'=$$$OK
		set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
		quit:idTextNumber=""
		
		set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))
		set strText	= $$$WWW009Text(objText)
		
		; Strip any annoying enclosing quotes
		if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
			set strX = "set strText = " _ strText
			xecute strX
			set $$$WWW009Text(objText) = strText
			set strKey = idLanguage1_","_idTextNumber			
			set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
		}
					
		if ($$TranslatePT(.parrPhrasePT,strText,.strENText)) {
			$$$Trace(2,"  WWW009("_idTextNumber_")="_$$$Tab_strText_$$$Tab_strENText)				
			;
			; We have PT text within a EN node.
			; We will replace the PT text with translated EN text.
			; But first, is there a PT node?  No or null? => Create it.
			; 
			if ($$$WWW009Text($get(^WWW009(0,"PT",idTextNumber,1)))="") {
				set strKey = "PT,"_idTextNumber			
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
				$$$Trace(3,"  Created WWW009("_strKey_")="_$$$Tab_strText)
			}
			set $$$WWW009Text(objText) = strENText
			if ($$$DoTheSave) {
				set strKey = idLanguage1_","_idTextNumber			
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
			}
		}
	}
 
	if (strStatus=$$$OK) {
		;
		; Search PT text, for those that do not have EN defined, Create EN text
		; 
		set idLanguage1 = "PT"
		set idTextNumber=""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			continue:$data(^WWW009(0,"EN",idTextNumber))      ; only consider extra "PT" text
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))	; PT without EN
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
				set $$$WWW009Text(objText) = strText
				set strKey = idLanguage1_","_idTextNumber			
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
			}
			
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strText,.strENText)
			
			$$$Trace(3,"  Created WWW009("_strKey_")="_$$$Tab_strText)
			set $$$WWW009Text(objText) = strENText
			if ($$$DoTheSave) {
				set strKey = "EN,"_idTextNumber
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
			}
		}	 
	}
	
	;
	; Check for cases where EN nodes exist that do not have
	; an equivalent PT node, yet we are able to translate the EN to PT,
	; and create a PT node to assist the PT translators.
	;
	if (strStatus=$$$OK) {
		;
		; Search EN text, for those that do not have PT defined, Create PT text
		; 
		set idLanguage1 = "EN"
		set idTextNumber=""
		for {
			quit:strStatus'=$$$OK
			set idTextNumber = $order(^WWW009(0,idLanguage1,idTextNumber))
			quit:idTextNumber=""
			
			continue:($$$WWW009Text($get(^WWW009(0,"PT",idTextNumber,1)))'="")
			     ; only consider extra "EN" text
			
			set objText = $get(^WWW009(0,idLanguage1,idTextNumber,1))	; EN without PT
			set strText	= $$$WWW009Text(objText)
			
			; Strip any annoying enclosing quotes
			if (($extract(strText,1,1) = $c(34)) && ($extract(strText,$length(strText)) = $c(34))) {
				set strX = "set strText = " _ strText
				xecute strX
				set $$$WWW009Text(objText) = strText
				set strKey = idLanguage1_","_idTextNumber			
				set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
			}
			
			set blnTranslated = $$TranslateEN(.parrPhraseEN,strText,.strPTText)
			
			if (blnTranslated) {
			$$$Trace(2,"  Created WWW009 PT ("_idTextNumber_")="_$$$Tab_strPTText_$$$Tab_strText)				
				set $$$WWW009Text(objText) = strPTText
				if ($$$DoTheSave) {
					set strKey = "PT,"_idTextNumber
					set strStatus = $$$Save("WWW009",strKey,objText,$$$YES)
				}
			}
		}	 
	}
 
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW009")
	}
 
	quit strStatus
 
 	;-------------------------------------------------------------------------------
	; WWW101	App Params (list of values)
	; 	Keys:	ParameterDescription	Language1	SearchItem
	; 	Fields:	Text
	; Search EN text replace PT with EN.
	; Search PT text for those that do not have EN defined, Create EN text.
 	;-------------------------------------------------------------------------------
AppParams(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objText
	new idParamDesc,idLanguage1,idSearchItem
	new strText
	new strENText
	
	set strStatus   = $$$OK
	set idParamDesc = ""
	for {
		quit:strStatus'=$$$OK
		set idParamDesc = $order(^WWW101(0,idParamDesc))
		quit:idParamDesc=""
		
		;
		; Search EN text replace PT with EN
		;
		set idLanguage1 = "EN"
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWW101(0,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			
			set objText = $get(^WWW101(0,idParamDesc,idLanguage1,idSearchItem,1))
			set strText	= $$$WWW101Text(objText)
									
			if ($$TranslatePT(.parrPhrasePT,strText,.strENText)) { 
				$$$Trace(2,"  TR->EN"_$$$Tab_idParamDesc_$$$Tab_strText_$$$Tab_strENText)
				set $$$WWW101Text(objText) = strENText
				if ($$$DoTheSave) {
					set strKey = idParamDesc_","_idLanguage1_","_idSearchItem
					set strStatus = $$$Save("WWW101",strKey,objText,$$$YES)
				}
			}
		}
 
		;
		; Search PT text for those that do not have EN defined, Create EN text
		; 
		set idLanguage1 = "PT"
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWW101(0,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			continue:$data(^WWW101(0,idParamDesc,"EN",idSearchItem))      ; only consider extra "PT" tabs
			
			set objText = $get(^WWW101(0,idParamDesc,idLanguage1,idSearchItem,1))  ; PT without EN
			set strText	= $$$WWW101Text(objText)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strText,.strENText)
			
			$$$Trace(2,"  Created"_$$$Tab_idParamDesc_$$$Tab_strText_$$$Tab_strENText)
			set $$$WWW101Text(objText)	= strENText
			if ($$$DoTheSave) {
				set strKey = idParamDesc_",EN,"_idSearchItem
				set strStatus = $$$Save("WWW101",strKey,objText,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW101")
	}
	quit strStatus
	
 
 	;-------------------------------------------------------------------------------
	; WWWUSERPARA	App Params (list of values)
	; 	Keys:	ParameterDescription	Language1	SearchItem
	; 	Fields:	Text
	; Search EN text replace PT with EN.
	; Search PT text for those that do not have EN defined, Create EN text.
 	;-------------------------------------------------------------------------------
ParamUserPara(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objText
	new idParamDesc,idLanguage1,idSearchItem
	new strText
	new strENText
	
	set strStatus=$$$OK
	set idParamDesc=""
	for {
		quit:strStatus'=$$$OK
		set idParamDesc = $order(^WWWUSERPARA(YM,idParamDesc))
		quit:idParamDesc=""
		
		;
		; Search EN text replace PT with EN
		;
		set idLanguage1 = "EN"
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			
			set objText = $get(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))
			set strText	= $piece(objText,"~",1)
									
			if ($$TranslatePT(.parrPhrasePT,strText,.strENText)) { 
				$$$Trace(2,"  TR->EN"_$$$Tab_idParamDesc_$$$Tab_strText_$$$Tab_strENText)
				set $piece(objText,"~",1) = strENText
				if ($$$DoTheSave) {
					set strKey = idParamDesc_","_idLanguage1_","_idSearchItem					
					set strStatus = $$$Save("WWWUSERPARA",strKey,objText,$$$YES)
				}
			}
		}
 
		;
		; Search PT text for those that do not have EN defined, Create EN text
		; 
		set idLanguage1 = "PT"
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			continue:$data(^WWWUSERPARA(YM,idParamDesc,"EN",idSearchItem))      ; only consider extra "PT" tabs
			
			set objText = $get(^WWWUSERPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))  ; PT without EN
			set strText	= $piece(objText,"~",1)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strText,.strENText)
			
			$$$Trace(2,"  Created"_$$$Tab_idParamDesc_$$$Tab_strText_$$$Tab_strENText)
			set $piece(objText,"~",1) = strENText
			if ($$$DoTheSave) {
				set strKey = idParamDesc_",EN,"_idSearchItem				
				set strStatus = $$$Save("WWWUSERPARA",strKey,objText,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {       ; Re-Index
		do ReIndex^COMIndex("WWWUSERPARA")
	}
	quit strStatus
	
 	;-------------------------------------------------------------------------------
	; INPARA	IN Params
	; 	Keys:	ParameterDescription	Language1	SearchItem
	; 	Fields:	Text
 	;-------------------------------------------------------------------------------
ParamInPara(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objText
	new idParamDesc,idLanguage1,idSearchItem
	new strText
	new strENText
	
	set strStatus=$$$OK
	set idParamDesc=""
	for {
		quit:strStatus'=$$$OK
		set idParamDesc = $order(^INPARA(YM,idParamDesc))
		quit:idParamDesc=""
		
		;
		; Search EN text replace PT with EN
		;
		set idLanguage1 = "EN"
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			
			set objText = $get(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))
			set strText	= $piece(objText,"~",1)
									
			if ($$TranslatePT(.parrPhrasePT,strText,.strENText)) { 
				$$$Trace(2,"  TR->EN"_$$$Tab_idParamDesc_$$$Tab_strText_$$$Tab_strENText)
				set $piece(objText,"~",1) = strENText
				if ($$$DoTheSave) {
					set strKey = idParamDesc_","_idLanguage1_","_idSearchItem
					set strStatus = $$$Save("INPARA",strKey,objText,$$$YES)
				}
			}
		}
 
		;
		; Search PT text for those that do not have EN defined, Create EN text
		; 
		set idLanguage1 = "PT"
		set idSearchItem=""
		for {
			quit:strStatus'=$$$OK
			set idSearchItem = $order(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem))
			quit:idSearchItem=""
			continue:$data(^INPARA(YM,idParamDesc,"EN",idSearchItem))      ; only consider extra "PT" tabs
			
			set objText = $get(^INPARA(YM,idParamDesc,idLanguage1,idSearchItem,1))  ; PT without EN
			set strText	= $piece(objText,"~",1)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strText,.strENText)
			
			$$$Trace(2,"  Created"_$$$Tab_idParamDesc_$$$Tab_strText_$$$Tab_strENText)
			set $piece(objText,"~",1) = strENText
			if ($$$DoTheSave) {
				set strKey = idParamDesc_",EN,"_idSearchItem
				set strStatus = $$$Save("INPARA",strKey,objText,$$$YES)
			}
		}
	}
	
	if ($$$DoTheReIndex) {   ; Re-Index
		do ReIndex^COMIndex("INPARA")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; WWW003	Class defn of form captions (underneath WWW122)
 	; 	Keys:	Class	PropertyNumber
 	; 	Fields:	PropertyDescription	CaptionInForms
 	; Copy into WWW0031
	;-------------------------------------------------------------------------------
ClassFields(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objField, obj0031
	new idClass,idPropertyNumber
	new strPropertyDescription,		strCaptionInForms
	new strENPropertyDescription,	strENCaptionInForms
	
	set strStatus=$$$OK
	set idClass=""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^WWW003(0,idClass))
		quit:idClass=""
 
		;
		; Search captions, replace PT with EN
		;
		set idPropertyNumber=""
		for {
			quit:strStatus'=$$$OK
			set idPropertyNumber = $order(^WWW003(0,idClass,idPropertyNumber))
			quit:idPropertyNumber=""
			
			set objField = $get(^WWW003(0,idClass,idPropertyNumber,1))
			set strPropertyDescription	= $$$WWW003PropertyDescription(objField)
			set strCaptionInForms		= $$$WWW003CaptionInForms(objField)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strPropertyDescription,.strENPropertyDescription)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strCaptionInForms,.strENCaptionInForms) || blnTranslated
			
			if (blnTranslated) { ; At least one of the strings needed translation
				$$$Trace(2,"  TR->EN"_$$$Tab_idClass_$$$Tab_strPropertyDescription_$$$Tab_strENPropertyDescription)
				set $$$WWW003PropertyDescription(objField) 	= strENPropertyDescription
				set $$$WWW003CaptionInForms(objField)		= strENCaptionInForms			
				if ($$$DoTheSave) {
					if '$data(^WWW0031(0,idClass,idPropertyNumber,"PT")) {
						; Create PT
						set obj0031 = ""
						set $$$WWW0031PropertyDescription(obj0031) = strCaptionInForms
						; lost = strPropertyDescription
						; WWW0031PropertyDescription is used as the caption WWW003CaptionInForms
						set strKey = idClass_","_idPropertyNumber_",PT"
						$$$Trace(2,"  Created WWW0031"_$$$Tab_strKey_$$$Tab_strPropertyDescription)
						set strStatus = $$$Save("WWW0031",strKey,obj0031,$$$YES)
					}
					if (strStatus=$$$OK) {
						set strKey = idClass_","_idPropertyNumber
						set strStatus = $$$Save("WWW003",strKey,objField,$$$YES)
					}
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {  ; Re-Index
		do ReIndex^COMIndex("WWW003")
		do ReIndex^COMIndex("WWW0031")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; WWW002	Class defn of form captions (underneath WWW122, indexes separate from fields)
 	; 	Keys:	Class	PrimaryKeyNumber
 	; 	Fields:	PropertyDescription	TextInForms
  	; Copy into WWW0021
	;-------------------------------------------------------------------------------
ClassIndexFields(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objField, obj0021
	new idClass,idPrimaryKeyNumber
	new strPropertyDescription,		strTextInForms
	new strENPropertyDescription,	strENTextInForms
	
	set strStatus=$$$OK
	set idClass=""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^WWW002(0,idClass))
		quit:idClass=""
 
		;
		; Search captions, replace PT with EN
		;
		set idPrimaryKeyNumber=""
		for {
			quit:strStatus'=$$$OK
			set idPrimaryKeyNumber = $order(^WWW002(0,idClass,idPrimaryKeyNumber))
			quit:idPrimaryKeyNumber=""
			
			set objField = $get(^WWW002(0,idClass,idPrimaryKeyNumber,1))
			set strPropertyDescription	= $$$WWW002PropertyDescription(objField)
			set strTextInForms			= $$$WWW002TextInForms(objField)
						
			; NOTE $$$Translate performs a change as well as returning a boolean
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strPropertyDescription,.strENPropertyDescription)
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strTextInForms,.strENTextInForms) || blnTranslated
			
			if (blnTranslated) { ; At least one of the strings needed translation
				$$$Trace(2,"  TR->EN"_$$$Tab_idClass_$$$Tab_strPropertyDescription_$$$Tab_strENPropertyDescription)
				set $$$WWW002PropertyDescription(objField) = strENPropertyDescription
				set $$$WWW002TextInForms(objField)         = strENTextInForms			
				if ($$$DoTheSave) {
					; Preserve in WWW0021
					if '$data(^WWW0021(0,idClass,idPrimaryKeyNumber,"PT")) {
						; Create PT
						set obj0021 = ""
						set $$$WWW0021PropertyDescription(obj0021) = strTextInForms
						; lost = strPropertyDescription
						; WWW0021PropertyDescription is used as the text WWW002TextInForms
						set strKey = idClass_","_idPrimaryKeyNumber_",PT"
						$$$Trace(2,"  Created WWW0021"_$$$Tab_strKey_$$$Tab_strPropertyDescription)
						set strStatus = $$$Save("WWW0021",strKey,obj0021,$$$YES)
					}
					if (strStatus=$$$OK) {
						set strKey = idClass_","_idPrimaryKeyNumber
						set strStatus = $$$Save("WWW002",strKey,objField,$$$YES)
					}
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW002")
		do ReIndex^COMIndex("WWW0021")
	}
	quit strStatus
	
	
ClassIndexFieldsVar(parrPhrasePT) private
 	;-------------------------------------------------------------------------------
 	; WWW121D	Customised
 	; 	Keys:	FormName	PrimaryKeyNumber	Company
 	; 	Fields:	FieldDescription	HelpText
 	; Copy into WWW121D1
	;
 	; 25-May-2011	shobby	SR16925.2: HelpText->CustomHelpText
	;-------------------------------------------------------------------------------
 	new blnTranslated,idCompany,idFormName,idPrimaryKeyNumber
	new obj121D1,objField,strCustomHelpText,strENCustomHelpText
	new strENFieldDescription,strFieldDescription,strKey,strStatus
	
	set strStatus  = $$$OK
	set idFormName = ""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^WWW121D(0,idFormName))
		quit:idFormName=""
 
		set idPrimaryKeyNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idPrimaryKeyNumber = $order(^WWW121D(0,idFormName,idPrimaryKeyNumber))
			quit:idPrimaryKeyNumber=""
 
			;
			; Search captions, replace PT with EN
			;
			set idCompany = ""
			for {
				quit:strStatus'=$$$OK
				set idCompany = $order(^WWW121D(0,idFormName,idPrimaryKeyNumber,idCompany))
				quit:idCompany=""
				
				set objField = $get(^WWW121D(0,idFormName,idPrimaryKeyNumber,idCompany,1))
				set strFieldDescription	= $$$WWW121DFieldDescription(objField)
				set strCustomHelpText	= $$$WWW121DCustomHelpText(objField) ;SR16925.2
							
				; NOTE $$$Translate performs a change as well as returning a boolean
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strFieldDescription,.strENFieldDescription)
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strCustomHelpText,.strENCustomHelpText) || blnTranslated ;SR16925.2
				
				if blnTranslated { ; At least one of the strings needed translation
					$$$Trace(2,"  TR->EN"_$$$Tab_idFormName_$$$Tab_strFieldDescription_$$$Tab_strENFieldDescription)
					set $$$WWW121DFieldDescription(objField) = strENFieldDescription
					set $$$WWW121DCustomHelpText(objField)   = strENCustomHelpText ;SR16925.2			
					if ($$$DoTheSave) {
						; Preserve in WWW121D1
						if '$data(^WWW121D1(0,idFormName,idPrimaryKeyNumber,idCompany,"PT")) {
							; Create PT
							set obj121D1 = ""
							set $$$WWW121D1FieldDescription(obj121D1) = strFieldDescription
							; lost = strCustomHelpText
							set strKey = idFormName_","_idPrimaryKeyNumber_","_idCompany_",PT"
							$$$Trace(2,"  Created WWW121D1"_$$$Tab_strKey_$$$Tab_strFieldDescription)
							set strStatus = $$$Save("WWW121D1",strKey,obj121D1,$$$YES)
						}
						if (strStatus=$$$OK) {						
							set strKey = idFormName_","_idPrimaryKeyNumber_","_idCompany
							set strStatus = $$$Save("WWW121D",strKey,objField,$$$YES)
						}
					}
				}
			}
		}
	}
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW121D")
		do ReIndex^COMIndex("WWW121D1")
	}
	quit strStatus
	
	
 	;-------------------------------------------------------------------------------
 	; WWW003Calc	Class defn of form captions 
 	; 				(underneath WWW122, calculated fields separate from fields)
 	; 	Keys:	Class	PropertyNumber
 	; 	Fields:	Caption
 	; Copy into WWW003CalcLang
 	; 	Keys:	Class	CalculatedFieldNumber	Language1
 	; 	Fields:	Description
 	; We are only interested in VAR* classes. 	
	;-------------------------------------------------------------------------------
CalcFields(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objCalc,objCalcLang
	new idClass,idPropertyNumber
	new strCaption
	new strENCaption
	
	; Only process classes VAR*
	$$$Trace(1,"  (Lines with TRANSLATE?: may need translation)")
	set strStatus = $$$OK
	set idClass   = ""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^WWW003Calc(0,idClass))
		quit:idClass=""
		continue:($extract(idClass,1,3) '= "VAR")
 
		set idPropertyNumber = ""
		for {
			quit:strStatus'=$$$OK
			set idPropertyNumber = $order(^WWW003Calc(0,idClass,idPropertyNumber))
			quit:idPropertyNumber=""
 				
			set objCalc = $get(^WWW003Calc(0,idClass,idPropertyNumber,1))
			set strCaption	= $$$WWW003CalcCaption(objCalc)
			continue:($$$WWW003CalcAutoGenerated(objCalc) = 1)	; Avoid BASE fields
						
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strCaption,.strENCaption)
			
			if (blnTranslated) { 
				$$$Trace(2,"  TR->EN"_$$$Tab_idClass_$$$Tab_strCaption_$$$Tab_strENCaption)
				if ($$$DoTheSave) {
					; Save the PT into WWW003CalcLang (unless it already exists there)
					; Then replace the PT with EN				
					if '$data(^WWW003CalcLang(0,idClass,idPropertyNumber,"PT")) {
						; Create PT
						set objCalcLang = ""
						set $$$WWW003CalcLangDescription(objCalcLang) = strCaption
						set strKey = idClass_","_idPropertyNumber_",PT"
						set strStatus = $$$Save("WWW003CalcLang",strKey,objCalc,$$$YES)
						$$$Trace(2,"  Created WWW003CalcLang"_$$$Tab_strKey_$$$Tab_strCaption_$$$Tab_strENCaption)						
					}
					if (strStatus=$$$OK) {
						set $$$WWW003CalcCaption(objCalc) 	= strENCaption
						set strKey = idClass_","_idPropertyNumber
						set strStatus = $$$Save("WWW003Calc",strKey,objCalc,$$$YES)
					}
				}
			} else {
				$$$Trace(1,"  TRANSLATE?:"_$$$Tab_idClass_$$$Tab_strCaption)
			}
		}
	}
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW003Calc")
		do ReIndex^COMIndex("WWW003CalcLang")
	}
	quit strStatus
	
	
 	;-------------------------------------]]><![CDATA[------------------------------------------
 	; WWW001	Class defn, (appears in COMView)
 	; 	Keys:	ClassName
 	; 	Fields:	ClassDescription
 	; Copy into WWW0011
	;-------------------------------------------------------------------------------
Classes(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objClass, obj0011
	new idClassName
	new strClassDescription
	new strENClassDescription
	
	set strStatus   = $$$OK
	set idClassName = ""
	for {
		quit:strStatus'=$$$OK
		set idClassName = $order(^WWW001(0,idClassName))
		quit:idClassName=""
 
		set objClass = $get(^WWW001(0,idClassName,1))
		set strClassDescription	= $$$WWW001ClassDescription(objClass)
						
		set blnTranslated = $$TranslatePT(.parrPhrasePT,strClassDescription,.strENClassDescription)
			
		if (blnTranslated) { 
			$$$Trace(2,"  TR->EN"_$$$Tab_idClassName_$$$Tab_strClassDescription_$$$Tab_strENClassDescription)
			if ($$$DoTheSave) {
				; Preserve in WWW0011
				if '$data(^WWW0011(0,idClassName,"PT")) {
					; Create PT
					set obj0011 = ""
					set $$$WWW0011ClassDescription(obj0011) = strClassDescription
					set strKey = idClassName_",PT"
					$$$Trace(2,"  Created WWW0011"_$$$Tab_strKey_$$$Tab_strClassDescription)
					set strStatus = $$$Save("WWW0011",strKey,obj0011,$$$YES)
				}
				if (strStatus=$$$OK) {
					set $$$WWW001ClassDescription(objClass)	= strENClassDescription
					set strKey = idClassName
					set strStatus = $$$Save("WWW001",strKey,objClass,$$$YES)
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("WWW001")
		do ReIndex^COMIndex("WWW0011")
	}
	quit strStatus
 
		
 	;-------------------------------------------------------------------------------
 	; COMView	Favourites
 	; 	Keys:	Class	ViewNumber
 	; 	Fields:	Description		Distribute	User1
	; We are only interested in COMView favourites for VAR* classes.
 	; If any user created a favourite using PT, we want to distribute that to all users:
 	; 	blank out the User1
 	; 	set as Distribute
 	; Note:
 	; 	onBeforeSave for COMView calls a VAR routine.
	;-------------------------------------------------------------------------------
COMView(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objCOMView
	new idClass,idViewNumber
	new strDescription,strUser1, strDistribute
	new strENDescription
		
	$$$Trace(1,"  (Lines with TRANSLATE?: may need translation)")
	set strStatus=$$$OK
	set idClass=""
	for {
		quit:strStatus'=$$$OK
		set idClass = $order(^COMView(0,idClass))
		quit:idClass=""
		
		set idViewNumber=""
		for {
			quit:strStatus'=$$$OK
			set idViewNumber = $order(^COMView(0,idClass,idViewNumber))
			quit:idViewNumber=""
 
			set objCOMView = $get(^COMView(0,idClass,idViewNumber,1))
			set strDescription	= $$$COMViewDescription(objCOMView)
			set strUser1 = $$$COMViewUser1(objCOMView)
			set strDistribute = $$$COMViewDistribute(objCOMView)
							
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strDescription,.strENDescription)
				
			if ((blnTranslated) || (strUser1 = "UNKNOWN")) { 
				if (strUser1 = "UNKNOWN") {
					$$$Trace(2,"  All users:"_$$$Tab_idClass_$$$Tab_strDescription)
				}
				else {
					$$$Trace(2,"  TR->EN"_$$$Tab_idClass_$$$Tab_strDescription_$$$Tab_strENDescription)
				}
				if ($$$DoTheSave) {
					set $$$COMViewDescription(objCOMView)	= strENDescription
					set $$$COMViewUser1(objCOMView)			= ""	; All users
					set $$$COMViewDistribute(objCOMView)	= 1		; Always distribute
					set strKey = idClass_","_idViewNumber
					set strStatus = $$$Save("COMView",strKey,objCOMView,$$$YES)
				}
			} else {
				if (($extract(idClass,1,3) = "VAR")	&& 
					(strDescription '= "Default"))     {
					$$$Trace(1,"  TRANSLATE?:"_$$$Tab_idClass_$$$Tab_strDescription)
				}
			}
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMView")
	}
	quit strStatus
 
   		
 	;-------------------------------------------------------------------------------
 	; COMHelp
 	; 	Keys:	FormName	Language1
 	; 	Fields:	HelpText
 	; Limitations:
 	;	How can we identify PT text within EN data?  The first pass dumped out all text
 	;	to manually be reviewed in the log file.
	;-------------------------------------------------------------------------------
COMHelp(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objCOMHelp
	new idFormName,idLanguage1
	new strHelpText
	new strENHelpText
		
	set strStatus=$$$OK
	set idFormName=""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^COMHelp(0,idFormName))
		quit:idFormName=""
		
		;
		; Search EN text replace PT with EN
		; Search PT text for those that do not have EN defined, Create EN text
		;
		set idLanguage1 = ""
		for {
			quit:strStatus'=$$$OK
			set idLanguage1 = $order(^COMHelp(0,idFormName,idLanguage1))
			quit:idLanguage1=""
 
			set objCOMHelp = $get(^COMHelp(0,idFormName,idLanguage1,1))
			set strHelpText	= $$$COMHelpHelpText(objCOMHelp)
			continue:($zstrip(strHelpText,"<>W")="")
			set blnTranslated = $$TranslatePT(.parrPhrasePT,strHelpText,.strENHelpText)
 
			if (idLanguage1 = "EN") {
				if (blnTranslated) { 
					$$$Trace(2,"  TR->EN"_$$$Tab_idFormName_$$$Tab_strHelpText_$$$Tab_strENHelpText)
					if ($$$DoTheSave) {
						set $$$COMHelpHelpText(objCOMHelp) = strENHelpText						
						set strKey = idFormName_","_idLanguage1
						set strStatus = $$$Save("COMHelp",strKey,objCOMHelp,$$$YES)
					}
				} else {
					$$$Trace(4,"  EN OK"_$$$Tab_idFormName_$$$Tab_strHelpText)
				}
			} elseif (idLanguage1 = "PT") {
				continue:$data(^COMHelp(0,idFormName,"EN"))
				if (blnTranslated) {
					// Create an EN equivalent
					$$$Trace(2,"  Created"_$$$Tab_idFormName_$$$Tab_strHelpText_$$$Tab_strENHelpText)
					if ($$$DoTheSave) {
						set $$$COMHelpHelpText(objCOMHelp) = strENHelpText
						set strKey = idFormName_",EN"
						set strStatus = $$$Save("COMHelp",strKey,objCOMHelp,$$$YES)
					}									
				} else {
					// We do not have a translation with which to create the EN equivalent
					// Dump out to log file, add to translation table.
					$$$Trace(1,"  TRANSLATE?:"_$$$Tab_idFormName_$$$Tab_strHelpText)
				}
			}	
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMHelp")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; COMHelpButton
 	; 	Keys:	FormName	Language1	ButtonNumber
 	; 	Fields:	HelpText
 	; Limitations:
 	;	How can we identify PT text within EN data?  The first pass dumped out all text
 	;	to manually be reviewed in the log file.
	;-------------------------------------------------------------------------------
COMHelpButton(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objCOMHelpButton
	new idFormName,idLanguage1,idButtonNumber
	new strHelpText
	new strENHelpText
		
	set strStatus=$$$OK
	set idFormName=""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^COMHelpButton(0,idFormName))
		quit:idFormName=""
		
		;
		; Search EN text replace PT with EN
		; Search PT text for those that do not have EN defined, Create EN text
		;
		set idLanguage1 = ""
		for {
			quit:strStatus'=$$$OK
			set idLanguage1 = $order(^COMHelpButton(0,idFormName,idLanguage1))
			quit:idLanguage1=""
			
			set idButtonNumber = ""
			for {
				quit:strStatus'=$$$OK
				set idButtonNumber = $order(^COMHelpButton(0,idFormName,idLanguage1,idButtonNumber))
				quit:idButtonNumber=""
 
				set objCOMHelpButton = $get(^COMHelpButton(0,idFormName,idLanguage1,idButtonNumber,1))
				set strHelpText	= $$$COMHelpButtonHelpText(objCOMHelpButton)
				continue:($zstrip(strHelpText,"<>W")="")
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strHelpText,.strENHelpText)
	 
				if (idLanguage1 = "EN") {
					if (blnTranslated) { 
						$$$Trace(2,"  TR->EN"_$$$Tab_idFormName_$$$Tab_strHelpText_$$$Tab_strENHelpText)
						if ($$$DoTheSave) {
							set $$$COMHelpButtonHelpText(objCOMHelpButton) = strENHelpText						
							set strKey = idFormName_","_idLanguage1_","_idButtonNumber
							set strStatus = $$$Save("COMHelpButton",strKey,objCOMHelpButton,$$$YES)
						}
					} else {
						$$$Trace(4,"  EN OK"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				} elseif (idLanguage1 = "PT") {
					continue:$data(^COMHelpButton(0,idFormName,"EN",idButtonNumber))
					if (blnTranslated) {
						// Create an EN equivalent
						$$$Trace(2,"  Created"_$$$Tab_idFormName_$$$Tab_strHelpText_$$$Tab_strENHelpText)
						if ($$$DoTheSave) {
							set $$$COMHelpHelpText(objCOMHelpButton) = strENHelpText
							set strKey = idFormName_",EN,"_idButtonNumber
							set strStatus = $$$Save("COMHelpButton",strKey,objCOMHelpButton,$$$YES)
						}									
					} else {
						// We do not have a translation with which to create the EN equivalent
						// Dump out to log file, add to translation table.
						$$$Trace(1,"  TRANSLATE:"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				}
			}	
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMHelpButton")
	}
	quit strStatus
 
 	;-------------------------------------------------------------------------------
 	; COMHelpField
 	; 	Keys:	FormName	Language1	Number
 	; 	Fields:	HelpText
 	; Limitations:
 	;	How can we identify PT text within EN data?  The first pass dumped out all text
 	;	to manually be reviewed in the log file.
	;-------------------------------------------------------------------------------
COMHelpField(parrPhrasePT) private
	new strStatus,strKey,blnTranslated
	new objCOMHelpField
	new idFormName,idLanguage1,idNumber
	new strHelpText
	new strENHelpText
		
	set strStatus=$$$OK
	set idFormName=""
	for {
		quit:strStatus'=$$$OK
		set idFormName = $order(^COMHelpField(0,idFormName))
		quit:idFormName=""
		
		;
		; Search EN text replace PT with EN
		; Search PT text for those that do not have EN defined, Create EN text
		;
		set idLanguage1 = ""
		for {
			quit:strStatus'=$$$OK
			set idLanguage1 = $order(^COMHelpField(0,idFormName,idLanguage1))
			quit:idLanguage1=""
			
			set idNumber = ""
			for {
				quit:strStatus'=$$$OK
				set idNumber = $order(^COMHelpField(0,idFormName,idLanguage1,idNumber))
				quit:idNumber=""
				
				set objCOMHelpField = $get(^COMHelpField(0,idFormName,idLanguage1,idNumber,1))
				set strHelpText	= $$$COMHelpFieldHelpText(objCOMHelpField)
				continue:($zstrip(strHelpText,"<>W")="")
				set blnTranslated = $$TranslatePT(.parrPhrasePT,strHelpText,.strENHelpText)
	 			
				if (idLanguage1 = "EN") {
					if (blnTranslated) { 
						$$$Trace(2,"  TR->EN"_$$$Tab_idFormName_$$$Tab_strHelpText_$$$Tab_strENHelpText)
						if ($$$DoTheSave) {
							set $$$COMHelpFieldHelpText(objCOMHelpField) = strENHelpText						
							set strKey = idFormName_","_idLanguage1_","_idNumber
							set strStatus = $$$Save("COMHelpField",strKey,objCOMHelpField,$$$YES)
						}
					} else {
						$$$Trace(4,"  EN OK"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				} elseif (idLanguage1 = "PT") {
					continue:$data(^COMHelpField(0,idFormName,"EN",idNumber))
					if (blnTranslated) {
						// Create an EN equivalent
						$$$Trace(2,"  Created"_$$$Tab_idFormName_$$$Tab_strHelpText_$$$Tab_strENHelpText)
						if ($$$DoTheSave) {
							set $$$COMHelpFieldHelpText(objCOMHelpField) = strENHelpText
							set strKey = idFormName_",EN,"_idNumber
							set strStatus = $$$Save("COMHelpField",strKey,objCOMHelpField,$$$YES)
						}									
					} else {
						// We do not have a translation with which to create the EN equivalent
						// Dump out to log file, add to translation table.
						$$$Trace(1,"  TRANSLATE:"_$$$Tab_idFormName_$$$Tab_strHelpText)
					}
				}
			}	
		}
	}
	
	if ($$$DoTheReIndex) {
		; Re-Index
		do ReIndex^COMIndex("COMHelpField")
	}
	quit strStatus
 
]]></Routine>
</Export>