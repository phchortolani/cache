<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINRPTBUtils" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINRPTBUtils
 
	;-----------------------------------------------------------------------------------------
	; Common AP/AR Trial Balance Report Utilities
	;-----------------------------------------------------------------------------------------
	
	#include COMSYS
	#include FINConst
 
GetStartAndEndDates(pdteDate,pidLang,pintNumPeriods,pidCompany)
	;-------------------------------------------------------------------------------
	; Make a list of periods.
	;
	; Params:
	; pdteDate - End date for range of periods
	; pidLang - Language (SPRACHE)
	; pidNumPeriods - Number of periods
	; pidCompany - Company Id (MY)
	;
	; ByRefs: None
	;
	; Returns: List of ranges (start and end dates)
	;
	; History:
	; 31-Jul-2006	PO		SR14872: Created - Replacement for GetDateRange
	;-------------------------------------------------------------------------------
	new lstRange,loop,dteDate,dteStart,strStart,strEnd
	new idPeriodType,YM
 
	set YM = $get(pidCompany)
 	set idPeriodType = $$TrialBalancePeriodType^FINGeneralSetup()
 	set lstRange = ""
 	set dteDate = pdteDate
 
	for loop = 1:1:pintNumPeriods {
		set strEnd = $$^WWWDATE(dteDate,pidLang)
		if loop < pintNumPeriods {
			if idPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
				set dteStart = $$GetStartOfMonth^COMUtilDate(dteDate)
			} elseif idPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
				set dteStart = dteDate - 29
			}
			set strStart = $$^WWWDATE(dteStart,pidLang)
		} else {
			set strStart = strEnd
			set strEnd = $$^WWWTEXT("Fin00968",,,pidLang)
		}
		set lstRange = lstRange_$listbuild(strStart,strEnd)
		set dteDate = dteStart - 1
	}
 
	quit lstRange
 
GetDateRange(pdteDate,pidLang,pstrType="CURRENT",pblnStart=$$$NO,pidCompany) // TODO: Remove code when known to not be in use. Replaced by GetStartAndEndDates.
	/*------------------------------------------------------------------------------
	; Output the appropriate date range string.
	;
	; Params: pdteDate		: The trial balance date
	; 		  pidLang		: The required language
	; 		  pstrType		: The period type
	; 		  					("Current": Current month)
	; 		  					("1Month" : Last month)
	; 		  					("2Month" : Two months ago)
	; 		  					("3Month" : Three months ago or prior)
	; 		  pblnStart		: Whether to output the start of the range or not
	;
	; ByRefs:
	;
	; Returns: strRange (string, a formatted date)
	;
	; History:
	; 06-Feb-2006	Steve S		SR13474: Created
	;-----------------------------------------------------------------------------*/
	new strRange,dteStartMonth,dteStartLastMonth,dteEndThreeMonth,dteStartTwoMonth
	new idPeriodType,YM
	
	set YM=$get(pidCompany)
 	set idPeriodType=$$TrialBalancePeriodType^FINGeneralSetup()
	set pstrType=$zconvert(pstrType,"U")
	set strRange=""
	
	if pstrType="CURRENT" {
		if pblnStart {
			if idPeriodType=$$$EnumFINSYSPERIODTYPECalenderMonth {
				set strRange=$$^WWWDATE($$GetStartOfMonth^COMUtilDate(pdteDate),pidLang)
			} elseif idPeriodType=$$$EnumFINSYSPERIODTYPE30Days {
				set strRange=$$^WWWDATE(pdteDate-29,pidLang)	
			}
		} else {
			set strRange=$$^WWWDATE(pdteDate,pidLang)
		}
		
	} elseif pstrType="1MONTH" {
		if idPeriodType=$$$EnumFINSYSPERIODTYPECalenderMonth {
			set dteStartLastMonth=$$GetStartOfMonth^COMUtilDate($$AddMonth^COMUtilDate(pdteDate,-1))
		} elseif idPeriodType=$$$EnumFINSYSPERIODTYPE30Days {
			set dteStartLastMonth=(pdteDate-59)
		}
		
		if pblnStart {
			set strRange=$$^WWWDATE(dteStartLastMonth,pidLang)
		} else {
			if idPeriodType=$$$EnumFINSYSPERIODTYPECalenderMonth {
				set strRange=$$^WWWDATE($$GetEndOfMonth^COMUtilDate(dteStartLastMonth),pidLang)
			} elseif idPeriodType=$$$EnumFINSYSPERIODTYPE30Days {
				set strRange=$$^WWWDATE(pdteDate-30,pidLang)
			}
		}
		
	} elseif pstrType="2MONTH" {
		if idPeriodType=$$$EnumFINSYSPERIODTYPECalenderMonth {
			set dteStartTwoMonth=$$GetStartOfMonth^COMUtilDate($$AddMonth^COMUtilDate(pdteDate,-2))
		} elseif idPeriodType=$$$EnumFINSYSPERIODTYPE30Days {
			set dteStartTwoMonth=(pdteDate-89)	
		}
		
		if pblnStart {
			set strRange=$$^WWWDATE(dteStartTwoMonth,pidLang)
		} else {
			if idPeriodType=$$$EnumFINSYSPERIODTYPECalenderMonth {
				set strRange=$$^WWWDATE($$GetEndOfMonth^COMUtilDate(dteStartTwoMonth),pidLang)
			} elseif idPeriodType=$$$EnumFINSYSPERIODTYPE30Days {
				set strRange=$$^WWWDATE(pdteDate-60,pidLang)	
			}
		}
		
	} elseif pstrType="3MONTH" {
		if idPeriodType=$$$EnumFINSYSPERIODTYPECalenderMonth {
			set dteEndThreeMonth=$$GetEndOfMonth^COMUtilDate($$AddMonth^COMUtilDate(pdteDate,-3))
		} elseif idPeriodType=$$$EnumFINSYSPERIODTYPE30Days {
			set dteEndThreeMonth=(pdteDate-90)
		}
		
		if pblnStart {
			set strRange=$$^WWWDATE(dteEndThreeMonth,pidLang)
		} else {
			set strRange=$$^WWWTEXT("Fin00968",,,pidLang)  ;or prior
		}
		
	}
 
	quit strRange
	
	
PeriodComponent(pidCompany,pdteTBDate,pstrReportBy=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate,
				pdteInvoice,pdteDue,pdteGLEff,pfltBalance,pstrPeriod="CURRENT") // FIXME: What uses this? Ought to change to be done effeciently.
	;-------------------------------------------------------------------------------
	; Returns the amount of an invoice balance that is a part of a period total.
	;
	; Params:	pidCompany		: The company number (YM)
	; 			pdteTBDate		: The trial balance date
	; 			pstrReportBy	: How we're reporting by
	; 			pdteInvoice		: The invoice date
	; 			pdteDue			: The due date of the invoice
	; 			pdteGLEff		: The GL Eff Date of the invoice
	; 			pfltBalance		: The balance of the invoice as at the TB date
	; 			pstrPeriod		: The period we're looking at
	; 		  					 ("Current": Current month)
	; 		  					 ("1Month" : Last month)
	; 		  					 ("2Month" : Two months ago)
	; 		  					 ("3Month" : Three months ago or prior)
	; 			
	; ByRefs:
	;
	; Returns: fltComponent (the component amount)
	;
	; History:
	; 09-Aug-2006	PO			SR14877: Removed calls to start and end of month COMUtilDate functions, now using macros
	; 14-Feb-2006	Steve S		SR13474: Created
	;-------------------------------------------------------------------------------
	new YM,fltComponent,idPeriodType,dteEnd,dteStart,dteDate,dteMonth
				
	set YM = pidCompany
	
	if pstrReportBy = $$$EnumFINSYSINVOICEDATETYPEInvoiceDate {
		set dteDate = pdteInvoice
	} elseif pstrReportBy = $$$EnumFINSYSINVOICEDATETYPEDueDate {
		set dteDate = pdteDue
	} elseif pstrReportBy = $$$EnumFINSYSINVOICEDATETYPEGLEffectiveDate {
		set dteDate = pdteGLEff
	}
	
	set fltComponent = 0
	set pstrPeriod = $$$UPPER(pstrPeriod)
	set idPeriodType = $$TrialBalancePeriodType^FINGeneralSetup()
 
	if pstrPeriod = "CURRENT" {
		set dteEnd = pdteTBDate
		if idPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set dteStart = $$$DateFirstDayOfMonth(pdteTBDate) // SR14877
		} elseif idPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			set dteStart = (pdteTBDate-29)
		}
	} elseif pstrPeriod = "1MONTH" {
		if idPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set dteMonth = $$AddMonth^COMUtilDate(pdteTBDate,-1)
			set dteStart = $$$DateFirstDayOfMonth(dteMonth) // SR14877
			set dteEnd = $$$DateLastDayOfMonth(dteMonth) // SR14877
		} elseif idPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			set dteStart = (pdteTBDate-59)
			set dteEnd = (pdteTBDate-30)
		}
	} elseif pstrPeriod = "2MONTH" {
		if idPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set dteMonth = $$AddMonth^COMUtilDate(pdteTBDate,-2)
			set dteStart = $$$DateFirstDayOfMonth(dteMonth) // SR14877
			set dteEnd = $$$DateLastDayOfMonth(dteMonth) // SR14877
		} elseif idPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			set dteStart=(pdteTBDate-89)
			set dteEnd=(pdteTBDate-60)
		}
	} elseif pstrPeriod = "3MONTH" {
		if idPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set dteStart = 0
			set dteEnd = $$$DateLastDayOfMonth($$AddMonth^COMUtilDate(pdteTBDate,-3)) // SR14877
		} elseif idPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			set dteStart = 0
			set dteEnd = (pdteTBDate-90)
		}
	}
 
	if (dteStart <= dteDate) && (dteDate <= dteEnd) set fltComponent = pfltBalance
 
	quit fltComponent
 
GetPeriodDates(pdteDate,pidCompany)
	/*------------------------------------------------------------------------------
	; Output the appropriate date range string.
	;
	; Params: pdteDate - The trial balance date
	; 		  pidCompany - Company Id
	;
	; ByRefs: None
	;
	; Returns: list of dates
	;
	; History:
	; 06-Feb-2006	PO		SR13474: Created, replaces GetDateRange & PeriodComponent
	;-----------------------------------------------------------------------------*/
	new dteStartOfCurrent,dteEndOfMonth1,dteStartOfMonth1,dteEndOfMonth2,dteStartOfMonth2,dteEndOfMonth3,idPeriodType
 
 	set idPeriodType = $$TrialBalancePeriodType^FINRPGeneralSetup(pidCompany)
 
	if idPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
		set dteStartOfCurrent = $$$DateFirstDayOfMonth(pdteDate)
		set dteEndOfMonth1 = dteStartOfCurrent - 1
		set dteStartOfMonth1 = $$$DateFirstDayOfMonth(dteEndOfMonth1)
		set dteEndOfMonth2 = dteStartOfMonth1 - 1
		set dteStartOfMonth2 = $$$DateFirstDayOfMonth(dteEndOfMonth2)
		set dteEndOfMonth3 = dteStartOfMonth2 - 1
	} elseif idPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
		set dteStartOfCurrent = pdteDate - 29
		set dteEndOfMonth1 = pdteDate - 30
		set dteStartOfMonth1 = pdteDate - 59
		set dteEndOfMonth2 = pdteDate - 60
		set dteStartOfMonth2 = pdteDate - 89
		set dteEndOfMonth3 = pdteDate - 90
	}
 
	quit $listbuild(dteStartOfCurrent,dteEndOfMonth1,dteStartOfMonth1,dteEndOfMonth2,dteStartOfMonth2,dteEndOfMonth3)
]]></Routine>
</Export>