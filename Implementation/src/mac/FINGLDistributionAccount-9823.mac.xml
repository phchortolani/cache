<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLDistributionAccount" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLDistributionAccount
	
#include FINConst
#include COMSYS
	
AddSourceAccount(pidDistribution,objDistribution)
	new idAccount
	kill ^FINGLDistributionAccount(YM,pidDistribution)
	if $get(objDistribution)="" set objDistribution=$get(^FINGLDistribution(YM,pidDistribution,1))
	set idAccount=$$$FINGLDistributionSourceAccount(objDistribution)
	if idAccount'="" do AddAccount(pidDistribution,idAccount,1,"")
	quit
 
AddManualAccount(pidDistribution)
	new objDistribution,idAccount
	set objDistribution=$get(^FINGLDistribution(YM,pidDistribution,1))
	set idAccount=$$$FINGLDistributionDestinationAccount(objDistribution)
	if idAccount'="" do AddAccount(pidDistribution,idAccount,1,$$$FINGLDistributionWeightingAccount(objDistribution))
	quit
 
AddExpenseAccount(pidDistribution)
	new objDistribution,idExpenseGroup,lstAccounts,lngNumAccounts,lngAccountGroup,idAccount,lngAccountLoop
	set objDistribution=$get(^FINGLDistribution(YM,pidDistribution,1))
	kill ^FINGLDistributionAccount(YM,pidDistribution)
	set idExpenseGroup=$$$FINGLDistributionExpenseGroup(objDistribution)
	if idExpenseGroup'="" {
		set lstAccounts=$$GetAccounts^FINSYSAccountGroup(idExpenseGroup)
		set lngNumAccounts=$listlength(lstAccounts)
		for lngAccountLoop=1:1:lngNumAccounts {
			set idAccount=$listget(lstAccounts,lngAccountLoop)
			do AddAccount(pidDistribution,idAccount,1,"")
		}
	}
	quit
	
	
AddProfileAccount(pidDistribution)
    ;-------------------------------------------------------------------------------
	; History:
	; 12-May-2006	RPW		SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
    ;-------------------------------------------------------------------------------
	new objDistribution,idProfile,strProfile,idAccount,idAccountAmountType,idWeightingProfile,idWeightAccount,curWeightAmount
	
	set objDistribution = $get(^FINGLDistribution(YM,pidDistribution,1))
	kill ^FINGLDistributionAccount(YM,pidDistribution)    ; FIXME: This class has indices - must use $$$Kill <GRF>
	set idProfile = $$$FINGLDistributionProfileAccount(objDistribution)
	if idProfile'="" {
		set strProfile = $translate(idProfile,"{}","AU")
		set strProfile = $$$UPPER(strProfile)
		set idAccountAmountType = $$$FINGLDistributionDistributionWeighting(objDistribution)
		set idWeightingProfile  = $$$FINGLDistributionWeightingProfile(objDistribution)
		
		set idAccount = ""
		for {
			set idAccount = $order(^FINGLAccounts(YM,6,strProfile,idAccount))
			quit:idAccount=""
			
			set idWeightAccount = $$GetBuddyAccount^FINGLProfile(idAccount,idWeightingProfile)
			set curWeightAmount = $$GetAccountTotal^FINGLAccount(idWeightAccount,idAccountAmountType)
			do AddAccount(pidDistribution,idAccount,curWeightAmount,idWeightAccount)
		}
	}
	quit
 
AddAccount(pidDistribution,pidAccount,pfltWeight,pidWeightingAccount)
    ;-------------------------------------------------------------------------------
	; 15-Jul-2003	SCR		Code Checking
    ;-------------------------------------------------------------------------------
	new objAccount,strStatus,idAmountType
 
	set objAccount   = $get(^FINGLDistributionAccount(YM,pidDistribution,pidAccount,1))
	set idAmountType = $$$FINGLDistributionDistributionWeighting($get(^FINGLDistribution(YM,pidDistribution,1)))
	
	if (+$$$FINGLDistributionAccountWeighting(objAccount)=0)!(pidWeightingAccount'=$$$FINGLDistributionAccountWeightingAccount(objAccount)) {
		if pidWeightingAccount'="" {
			set pfltWeight=$$GetAccountTotal^FINGLAccount(pidWeightingAccount,idAmountType)
		}
		set $$$FINGLDistributionAccountWeighting(objAccount)=pfltWeight
	}
	set $$$FINGLDistributionAccountWeightingAccount(objAccount)=pidWeightingAccount
	do Save^FINSYS("FINGLDistributionAccount",pidDistribution_","_pidAccount,objAccount,1)
	quit
	
	
ShowAccounts(pidDistribution,pidAccount)
	new idAccount,fltTotalWeight,objAccount,lstHeader,objDistributionAccount,objDistribution,numAccounts,curTotal
	new curUnRoundedTotal,lngNumPeriods,fltWeightingRounding,lngNumAccounts,lngCurrentAccount
	new strKey,fltWeight,curAmount
	
	set idAccount=""
	set fltTotalWeight=0
	set numAccounts=0
	set curUnRoundedTotal=0
	set lngCurrentAccount=0
	set pidAccount=$get(pidAccount)
	set curTotal=+$get(YPARA)
	if curTotal=0 set curTotal=$$GetRoundedTotal^FINGLDistribution(pidDistribution)
	set lstHeader=""
	set lstHeader=lstHeader_$lb($$$StrFINGLAccountNumber)
	set lstHeader=lstHeader_$lb($$$StrFINGLAccountDescription)
	set lstHeader=lstHeader_$lb($$$StrFINGLDistributionAccountWeighting)
	set lstHeader=lstHeader_$lb($$$Text("Fin00103",0))  ; Weighting Percentage
	set lstHeader=lstHeader_$lb($$$Text("Fin00112",0))  ; Destination Total
 
	if $$Start^COMTable(lstHeader,$listbuild("Fin00124",$$FormatCurrency^COMTable(curTotal)),1) {  ; Distribution of Accrual Total of %1.
		if pidDistribution'="" {
			if $data(^FINGLDistribution(YM,pidDistribution,1)) {
				set fltTotalWeight=$$GetTotalWeighting(pidDistribution)
				set objDistribution=$get(^FINGLDistribution(YM,pidDistribution,1))
				set lngNumPeriods=+$$$FINGLDistributionNumberofPeriods(objDistribution)
				set fltWeightingRounding=fltTotalWeight
				if fltWeightingRounding=0 set fltWeightingRounding=$$GetNumberOfAccounts(pidDistribution) set lngNumAccounts=fltWeightingRounding
				if lngNumPeriods>0 {
					for {
						set idAccount=$order(^FINGLDistributionAccount(YM,pidDistribution,idAccount))
						quit:idAccount=""
						set objDistributionAccount=$get(^FINGLDistributionAccount(YM,pidDistribution,idAccount,1))
						set objAccount=$get(^FINGLAccount(YM,idAccount,1))
						if $$Editable^FINSYSReview("FINGLDistribution",$$$FINGLDistributionStatus(objDistribution)) {
							set strKey=pidDistribution_","_idAccount
						} else {
							set strKey=""
						}
						set fltWeight=$$$FINGLDistributionAccountWeighting(objDistributionAccount)
						if fltTotalWeight=0 set fltWeight=1
						
						set curAmount=$select(fltWeightingRounding:$$Round^COMUtils(curTotal*fltWeight/fltWeightingRounding),1:0)
						do NewLine^COMTable($select(pidAccount=idAccount:"lightgreen",1:""))
						do InsertCell^COMTable(idAccount,"FINGLDistributionAccount",strKey)
						do InsertCell^COMTable($$$FINGLAccountDescription(objAccount),"FINGLDistributionAccount",strKey)
						do InsertCell^COMTable($select(fltTotalWeight:fltWeight,1:0),"FINGLDistributionAccount",strKey)
						do InsertCellPercentage^COMTable($select(fltTotalWeight:fltWeight/fltTotalWeight,1:1/lngNumAccounts),"FINGLDistributionAccount",strKey)
						do InsertCurrencyCell^COMTable(curAmount,1,"FINGLDistributionAccount",strKey)
						do EndLine^COMTable()
						
						set curTotal=curTotal-curAmount
						set fltWeightingRounding=fltWeightingRounding-fltWeight
					}
				}
			}
		}
		do Stop^COMTable()
	}
	quit
 
GetNumberOfAccounts(pidDistribution)
	new lngAccounts,idAccount
	
	set lngAccounts=0
	set idAccount=""
	for {
		set idAccount=$order(^FINGLDistributionAccount(YM,pidDistribution,idAccount))
		quit:idAccount=""
		set lngAccounts=lngAccounts+1
	}
	quit lngAccounts
 
GetTotalWeighting(pidDistribution)
	new idAccount,objDistributionAccount,fltWeight
	
	set fltWeight=0
	set idAccount=""
	for {
		set idAccount=$order(^FINGLDistributionAccount(YM,pidDistribution,idAccount))
		quit:idAccount=""
		set objDistributionAccount=$get(^FINGLDistributionAccount(YM,pidDistribution,idAccount,1))
		set fltWeight=fltWeight+$$$FINGLDistributionAccountWeighting(objDistributionAccount)
	}
	quit fltWeight
 
DisableClearButton(pYKEY,pYFELD)
    ;-------------------------------------------------------------------------------
    ; Disable clear button if no record selected
    ;
    ; Params: YKEY and YFELD
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 31-Oct-2005	PO		SR12776: Created
    ;-------------------------------------------------------------------------------
    new strStatus
    
    set strStatus = $$$OK
    
    if $$$NoKey(pYKEY) {
	    set strStatus=$listbuild("Fin00089")  ; "No Record Selected."
    }
    if $$$ISOK(strStatus) {
    	do CheckForDisabled(pYFELD)
    }
    
    if $$$ISERR(strStatus) {
    	set YQ = "1 "_$$$Text(strStatus)
    }
    
	quit
 
CheckForDisabled(pYFELD)
	;-------------------------------------------------------------------------------
	; Check whether a distribution has already been posted before allowing actions such
	; as Clearing of a Distribution Account.
	;
	; Returns:
	;
	; History:
	; 06-Feb-2004	shobby	Creation (TR006510)
	;-------------------------------------------------------------------------------
	new strMessage
	
	set strMessage=""
	;if $$$FINGLDistributionPosted(pYFELD)'="" {
	if +$$$FINGLDistributionStatus(pYFELD)'=$$$EnumFINSYSSTATUSUnposted {
		set strMessage=$listbuild("Fin00229")  ;"Distribution already posted."
	}
	
	if strMessage'="" {
		set YQ="1 "_$$$Text(strMessage)
	}
	quit
 
GetWeightingPercentage(YKEY)
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; History:
    ; 02-Dec-2004	Shobby	Return blank if invalid YKEY (Avoid GetWeightingPercentage+4^FINGLDistributionAccount error)
    ;-------------------------------------------------------------------------------
	new idDistribution,idAccount,strResult
	
	set strResult      = ""
	set idDistribution = $$$KEY1(YKEY)
	set idAccount      = $$$KEY2(YKEY)
	if (idDistribution'="") && (idAccount'="") {
		set strResult = $piece($get(^mtemp(0,YUSER,"Distribution",idDistribution,idAccount)),Y,1)
	}
	quit strResult
	
	
GetDestinationTotal(YKEY)
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; History:
    ; 02-Dec-2004	Shobby	Return blank if invalid YKEY (Avoid GetDestinationTotal+4^FINGLDistributionAccount error)
    ;-------------------------------------------------------------------------------
	new idDistribution,idAccount,strResult
	
	set strResult=""
	set idDistribution = $$$KEY1(YKEY)
	set idAccount      = $$$KEY2(YKEY)
	if (idDistribution'="") && (idAccount'="") {
		set strResult = $piece($get(^mtemp(0,YUSER,"Distribution",idDistribution,idAccount)),Y,2)
	}
	quit strResult
	
	
CallBack(pYKEY,pobjGrid)
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; 10-Dec-2004	JW		SR11004: Completed
    ;  2-Dec-2004	Shobby	Created (started)
    ;-------------------------------------------------------------------------------
	do GetWeightingInfo(pYKEY,.pobjGrid)
	quit
	
	
GetWeightingInfo(pYKEY,pobjGrid)
    ;-------------------------------------------------------------------------------
    ; Determine the weighting percentages and totals based on FINGLDistributionAccount
    ; contain in memory inside the grid.
    ;
    ; Returns: updated grid as paramater
    ;
    ; History:
    ; 10-Dec-2004	JW			SR11004: Completed
    ; 02-Dec-2004	Shobby/JW	Created
    ;-------------------------------------------------------------------------------
	new objFINGLDistributionAccount,idDistribution,idAccount,fltTotalWeight,fltWeightingRounding
	new curTotal,lngNumAccounts,fltWeight,curAmount,percent,objResult
	new objDistributionAccount
	
	set idDistribution=$p(pYKEY,YKOMMA,1)
 
	if $get(idDistribution)'="" {
		do GetTotals(idDistribution,.pobjGrid,.fltTotalWeight,.fltWeightingRounding)
		set lngNumAccounts=fltWeightingRounding	
 
		set curTotal=+$get(YPARA)
		if curTotal=0 set curTotal=$$GetRoundedTotal^FINGLDistribution(idDistribution)
 
		set idAccount=""
		for {
			set idAccount=$order(pobjGrid(idDistribution,idAccount))
			quit:idAccount=""
			
			set objDistributionAccount=$get(pobjGrid(idDistribution,idAccount))
			
			set fltWeight=$$$FINGLDistributionAccountWeighting(objDistributionAccount)
			if fltTotalWeight=0 set fltWeight=1	
			
			set curAmount = $select(fltWeightingRounding:curTotal*fltWeight/fltWeightingRounding,1:0)
			set curTotal  = $$$FCSub(curTotal,curAmount)
		;	set curAmount = $$FormatCurrency^COMTable(curAmount)
			
			set percent = $select(fltTotalWeight:fltWeight/fltTotalWeight,1:1/lngNumAccounts)
			set fltWeightingRounding=fltWeightingRounding-fltWeight
			
			set $p(pobjGrid(idDistribution,idAccount),Y,3) = $justify(percent*100,0,2)
			set $p(pobjGrid(idDistribution,idAccount),Y,4) = $justify(curAmount,0,2)
		}
	}
	quit
 
GetTotals(pidDistribution,pobjGrid,pfltTotalWeight,pfltWeightingRounding)
    ;-------------------------------------------------------------------------------
    ; In memory calculation to replace GetTotalWeighting.
    ;
    ; Returns:
    ;
    ; History:
    ; 16-Dec-2004	shobby	variables - Code Check
    ; 10-Dec-2004	JW		SR11004: Completed.
    ; 02-Dec-2004	Shobby	Created (SR10468)
    ;-------------------------------------------------------------------------------
	new idAccount,objDistributionAccount,fltWeight,lngNumAccounts
		
	set pfltTotalWeight=0
	set lngNumAccounts=0
	set idAccount=""
	for {
		set idAccount=$order(pobjGrid(pidDistribution,idAccount))
		quit:idAccount=""
		
		set objDistributionAccount=$get(pobjGrid(pidDistribution,idAccount))
		set pfltTotalWeight=pfltTotalWeight+$$$FINGLDistributionAccountWeighting(objDistributionAccount)
		set lngNumAccounts = lngNumAccounts + 1
	}
	
	set pfltWeightingRounding=pfltTotalWeight
	if pfltWeightingRounding=0 {
		set pfltWeightingRounding=lngNumAccounts
	}
	
	quit pfltTotalWeight
	
DynamicFields(pidDistribution)
	;-------------------------------------------------------------------------------
	; Evaluate and store Weighting Percentage and Destination Total.
	;
	; Returns:
	; 
	; Note: NO LONGER IN USE !!
	;
	; History:
	; 10-Dec-2004	JW	SR11004 Not in use.
	; 28-Nov-2004	JW	Created - taken from ShowAccounts
	;-------------------------------------------------------------------------------
	new fltWeight,fltTotalWeight,fltWeightingRounding,lngNumAccounts,objDistributionAccount
	new idAccount,percent,curTotal,curAmount
	
	quit ; SR11004
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED
	
	quit:$get(pidDistribution)=""
		
	kill ^mtemp(0,YUSER,"Distribution")
	
	set fltTotalWeight=$$GetTotalWeighting(pidDistribution)
	set fltWeightingRounding=fltTotalWeight
	if fltWeightingRounding=0 {
		set fltWeightingRounding=$$GetNumberOfAccounts(pidDistribution) 
		set lngNumAccounts=fltWeightingRounding	
	}
	
	set curTotal=+$get(YPARA)
	if curTotal=0 set curTotal=$$GetRoundedTotal^FINGLDistribution(pidDistribution)
	
	set idAccount=""
	for {
		set idAccount=$order(^FINGLDistributionAccount(YM,pidDistribution,idAccount))
		quit:idAccount=""
		
		set objDistributionAccount=$get(^FINGLDistributionAccount(YM,pidDistribution,idAccount,1))
		
		set fltWeight=$$$FINGLDistributionAccountWeighting(objDistributionAccount)
		if fltTotalWeight=0 set fltWeight=1	
		
		set curAmount=$select(fltWeightingRounding:$$Round^COMUtils(curTotal*fltWeight/fltWeightingRounding),1:0.00)
		set curTotal=curTotal-curAmount
		set curAmount = $$FormatCurrency^COMTable(curAmount)
		
		set percent = $select(fltTotalWeight:fltWeight/fltTotalWeight,1:1/lngNumAccounts)
		set percent = $$Round^COMUtils((percent*100))_" %"
		set fltWeightingRounding=fltWeightingRounding-fltWeight
		
		set ^mtemp(0,YUSER,"Distribution",pidDistribution,idAccount) = percent_Y_curAmount
	}
	
	quit
	
]]></Routine>
</Export>