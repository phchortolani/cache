<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMLocks" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMLocks
	;-------------------------------------------------------------------------------  ; Compiled March 30, 2005 09:32:15
	; Code Stolen primarily from ^LOCKTAB routine in %SYS
	; 
	; Creates a table of locks with the machine name of the person
	; who made the lock.
	; 
	; Used by the Locks Template.
	;
	; History:
	; 12-Jun-2009	shobby			SR16636:Rewrote to run in Cache2008
	; 18-Apr-2005	Paul K	 		Copied from SALLock
	; 30-Dec-2003   Paul Kalenjuk   Created
	;-------------------------------------------------------------------------------
 ;new COMMAND,INDEX,Routine
 ;new MSYS,FF,SL,BS,RM,SUB,XY  ; from CURRENT^%IS
 ;new context,LockTime,FreeSpace,StartOwner,LockData
 
MAIN(CurrentRoutine="")
	New Rset,idProcess,strLock,intLocks,objProcess,strRoutine

	write "<FONT SIZE=6>"
	write "Locks against files<p>"
	write "</FONT>"
	write "<FONT SIZE=4 FACE=""Courier New"">"
	write "Current Routine:"_CurrentRoutine_"<p>"
	write "<TABLE Border=1 Width=50% >"
	write "<TR><TH>Routine</TH><TH>Machine Name</TH></TR>"
	set CurrentRoutine=$piece(CurrentRoutine,".",1,$length(CurrentRoutine,".")-1)

	set intLocks=0
	Set Rset=##class(%ResultSet).%New("%SYS.LockQuery:List")
	do Rset.Execute()
	while Rset.Next() {
		set idProcess=Rset.GetData(2)
		set strLock=Rset.GetData(7)
		continue:((";^oddPro;^ROUTIN;^oddDEF;")'[(";"_$extract(strLock,1,7)))&&($extract(strLock,1,5)'="^rINC")
		set strRoutine=$piece(strLock,"""",2)
		;if strRoutine["." set strRoutine=$piece(strRoutine,".",1,$length(strRoutine,".")-1)

		write "<TR>"
		write "<TD>"
		if strRoutine=CurrentRoutine write "<B>"
		write strLock
		if strRoutine=CurrentRoutine write "</B>"
		write "</TD>"
		write "<TD>"
		if strRoutine=CurrentRoutine write "<B>"
		write ##class(alSYS.SYSTEM.Process).ClientNodeNameGet(idProcess)
		;write strRoutine_":"_CurrentRoutine
		if strRoutine=CurrentRoutine write "</B>"
		;write idProcess
		write "</TD>"
		write "</TR>"
		set intLocks=intLocks+1
	}
	do Rset.Close()


	write "</TABLE><p>"
	write "TotalNumber of Locks:"_intLocks
	write "</FONT>"
	quit "" 	

 
]]></Routine>
</Export>