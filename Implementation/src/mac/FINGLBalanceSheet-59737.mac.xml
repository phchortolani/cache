<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBalanceSheet" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBalanceSheet
	; 08-Jul-2003	SCR				Bug Fixes from Code Checking
 	#include COMSYS
	#include FINConst
 	
	#define Asset 				"1Asset"
	#define LiabilityEquity		"3LiabilityEquity"
	#define Liability			"31Liability"
	#define Equity				"32Equity"
	#define Earnings			"321Earnings"
	#define Retained			"321Retained"
 	
 	#define CurrYr	1
 	#define PrevYr	2
 
 
BalanceSheet()
	;------------------------------------------------------------------------------
	; Show the Chart of Accounts
	; 
	; History
	; 11-Dec-2006	shobby		SRBR014286:Corrected GIF names.
	; 13-Nov-2006	Steve S		SR15215: Show correct currency symbol
	; 12-Apr-2006	JW			SR14523: Add current earnings node, macros.
	; 18-Aug-2005	Steve S		Added $get() around fltTotal (potential UNDEFINED error)
	; 22-Jul-2005	Steve S		SR12669: Ignore accounts with zero balance
	; 30-Mar-2004	shobby		$get some variables that may not be defined.
	; 08-Jul-2003	SCR			Passed intYear to Find Parent	
	; 23-Jun-2003	shobby		Creation
	; 
	;-----------------------------------------------------------------------------
	new idDTD,idElement,idElementName,objFINGLAccount,idParent
	new idxAccountNumber,fltTotal,blnProceed,intYear,displayModifier
	new strCurrSymbol //SR15215
	
	set intYear=+$get(VORG(1))
	//if intYear=0 set intYear=2003
	if intYear=0 set intYear = $extract($zd($h,8),1,4)	//SR14523 - same as form default
	set strCurrSymbol = $$^WWWWHR(YWHR) //SR15215
	
	set idxAccountNumber=""
	for {
		set idxAccountNumber=$order(^FINGLAccount(YM,idxAccountNumber))
		quit:idxAccountNumber=""
		
		set objFINGLAccount=$get(^FINGLAccount(YM,idxAccountNumber,1))
		set blnProceed=$$$NO
		set idParent=$$FindParent(idxAccountNumber,.fltTotal,intYear)
		//if $get(+fltTotal($$$CurrYr))'=0 { ;SR12669
		if +fltTotal($$$CurrYr) || +fltTotal($$$PrevYr) { ;SR14523
		;do AddNode^COMTree(pidParent,pidNode,pstrTitle,pstrText,pstrImage,pstrForm="",pstrParam="",pblnSelected,pstrExtraData)
			if idParent'="" {
				if $$$FINGLAccountAccountType(objFINGLAccount)'=$$$EnumFINGLACCOUNTTYPEAsset {
					set displayModifier=-1	; Reverse sign on non-Asset accounts
				} else {
					set displayModifier=1
				}
				do AddNode^COMTree(idParent,
									idxAccountNumber,
									idxAccountNumber,
									idxAccountNumber_"("_$$$FINGLAccountDescription(objFINGLAccount)_")",
									$select($$$FINGLAccountAccountUsage(objFINGLAccount)=$$$EnumFINGLACCOUNTUSAGETransaction:"html.gif",1:""),
									"FINGLAccount",
									"",
									"",
									$lb($$FormatCurrency^COMTable(displayModifier*fltTotal($$$CurrYr)),$$FormatCurrency^COMTable(displayModifier*fltTotal($$$PrevYr))))
			}
		}
	}
	
	do StartTree^COMTree($get(YPARA))
	do AddNode^COMTree("","!3","","","NoImage","","",1,$lb(intYear,intYear-1),1,"")
	
	//SR15215
	do AddNode^COMTree("","BalanceSheet","",$$$Text("Fin00514"),"","","",1,$lb("("_strCurrSymbol_")","("_strCurrSymbol_")"),1)  ;Balance Sheet
	//do AddNode^COMTree("","BalanceSheet","",$$$Text("Fin00514"),"","","",1,$lb("($)","($)"),1)  ;Balance Sheet
	
	do AddNode^COMTree("BalanceSheet",$$$Asset,"",$$$Text("Fin00515"),"","","",1,$lb($$FormatCurrency^COMTable($get(fltTotal($$$Asset,$$$CurrYr))),$$FormatCurrency^COMTable($get(fltTotal($$$Asset,$$$PrevYr)))),1)   ;Assets
	
	//SR14523
	set fltTotal($$$Equity,$$$CurrYr)=$get(fltTotal($$$Equity,$$$CurrYr))+$get(fltTotal($$$Earnings,$$$CurrYr))+$get(fltTotal($$$Retained,$$$CurrYr))
	set fltTotal($$$Equity,$$$PrevYr)=$get(fltTotal($$$Equity,$$$PrevYr))+$get(fltTotal($$$Earnings,$$$PrevYr))+$get(fltTotal($$$Retained,$$$PrevYr))
	do AddNode^COMTree($$$Equity,$$$Earnings,"",$$$Text("Fin01011"),"","","",1,$lb($$FormatCurrency^COMTable(-1*$get(fltTotal($$$Earnings,$$$CurrYr))),$$FormatCurrency^COMTable(-1*$get(fltTotal($$$Earnings,$$$PrevYr)))),1)   ;Current Earnings
	do AddNode^COMTree($$$Equity,$$$Retained,"",$$$Text("Fin00516"),"","","",1,$lb($$FormatCurrency^COMTable(-1*$get(fltTotal($$$Retained,$$$CurrYr))),$$FormatCurrency^COMTable(-1*$get(fltTotal($$$Retained,$$$PrevYr)))),1)   ;Retained Earnings
	
	set fltTotal($$$LiabilityEquity,$$$CurrYr)=$g(fltTotal($$$Liability,$$$CurrYr))+$g(fltTotal($$$Equity,$$$CurrYr))
	set fltTotal($$$LiabilityEquity,$$$PrevYr)=$g(fltTotal($$$Liability,$$$PrevYr))+$g(fltTotal($$$Equity,$$$PrevYr))
	do AddNode^COMTree("BalanceSheet",$$$LiabilityEquity,"",$$$Text("Fin00517"),"","","",1,$lb($$FormatCurrency^COMTable(-1*fltTotal($$$LiabilityEquity,$$$CurrYr)),$$FormatCurrency^COMTable(-1*fltTotal($$$LiabilityEquity,$$$PrevYr))),1)   ;Liabilities & Owners Equity
	
	do AddNode^COMTree("BalanceSheet","2Spacer","","","NoImage","","",1,"",1)
	do AddNode^COMTree($$$LiabilityEquity,$$$Liability,"",$$$Text("Fin00518"),"","","",1,$lb($$FormatCurrency^COMTable(-1*$get(fltTotal($$$Liability,$$$CurrYr))),$$FormatCurrency^COMTable(-1*$get(fltTotal($$$Liability,$$$PrevYr)))),1)   ;Liability
	do AddNode^COMTree($$$LiabilityEquity,$$$Equity,"",$$$Text("Fin00519"),"","","",1,$lb($$FormatCurrency^COMTable(-1*$get(fltTotal($$$Equity,$$$CurrYr))),$$FormatCurrency^COMTable(-1*$get(fltTotal($$$Equity,$$$PrevYr)))),1)   ;Owners Equity
	
	do StopTree^COMTree(1)
	
	quit
	
	
FindParent(pidFINGLAccount,&pfltTotal,intYear)
	;------------------------------------------------------------------------------
	; Show the Chart of Accounts
	; 
	; History
	; 12-Apr-2006	JW		SR14523: Include opening balances. Add retained earnings accounts, macros.
	; 13-Apr-2005	PO		SR12135 specify which indexes need checking in GetOpeningBal^FINGLPeriodTotal
	; 17-Feb-2005	PO		SR11752 commented out fltTotal as not being used
	; 08-Jul-2003	SCR		Passed intYear to Find Parent	
	; 23-Jun-2003	shobby	Creation
	;-----------------------------------------------------------------------------
	new objFINGLAccountParent,idParent,strParent,strTemp,objFINGLAccount,idPeriod,intPeriods ;,fltTotal ; SR11752
	;
	set objFINGLAccount=$get(^FINGLAccount(YM,pidFINGLAccount,1))
	set idParent=$$$FINGLAccountParent(objFINGLAccount)
	set strParent=""
	
	set pfltTotal($$$CurrYr)=0
	set pfltTotal($$$PrevYr)=0
	
	if idParent'="" {
		set objFINGLAccountParent=$get(^FINGLAccount(YM,idParent,1))
		
		set strParent = $case($$$FINGLAccountAccountType(objFINGLAccount),
								$$$FINGLAccountAccountType(objFINGLAccountParent)	: idParent,
								$$$EnumFINGLACCOUNTTYPEEquity						: $$$Equity,
								$$$EnumFINGLACCOUNTTYPEAsset						: $$$Asset,
								$$$EnumFINGLACCOUNTTYPELiability					: $$$Liability,
								$$$EnumFINGLACCOUNTTYPEIncome						: $$$Earnings,
								$$$EnumFINGLACCOUNTTYPEExpense						: $$$Earnings)
		
		if $$$FINGLAccountAccountTypeModifier(objFINGLAccount)=$$$EnumFINGLACCOUNTTYPEMODIFIERRetainedEarnings {
			set strParent=$$$Retained	//SR14523
		}
		
		if (strParent'="") {
			set idPeriod=$$DefaultPeriod^FINGLPeriod()
			
			/*	SR14523
			set intPeriods($$$CurrYr)=$listlength($$GetPeriodsForYear^FINGLPeriod(idPeriod,intYear))
			set intPeriods($$$PrevYr)=$listlength($$GetPeriodsForYear^FINGLPeriod(idPeriod,intYear-1))
			set pfltTotal($$$CurrYr)=$$GetTotal^FINGLPeriodTotal(pidFINGLAccount,idPeriod,intYear,1,intYear,intPeriods($$$CurrYr),"","Number")
			set pfltTotal($$$PrevYr)=$$GetTotal^FINGLPeriodTotal(pidFINGLAccount,idPeriod,intYear-1,1,intYear-1,intPeriods($$$PrevYr),"","Number")
			*/
			set intPeriods = $$$FINGLPeriodTypePeriodsPerYear($get(^FINGLPeriodType(YM,idPeriod,1)))
			set pfltTotal($$$PrevYr) = $$GetTotal^FINGLPeriodTotal(pidFINGLAccount,idPeriod,"","",intYear-1,intPeriods,"","Number")
			set pfltTotal($$$CurrYr) = pfltTotal($$$PrevYr) + $$GetTotal^FINGLPeriodTotal(pidFINGLAccount,idPeriod,intYear,1,intYear,intPeriods,"","Number")
 
			set pfltTotal(strParent,$$$PrevYr)=$get(pfltTotal(strParent,$$$PrevYr))+pfltTotal($$$PrevYr)
			set pfltTotal(strParent,$$$CurrYr)=$get(pfltTotal(strParent,$$$CurrYr))+pfltTotal($$$CurrYr)
						
		}
	}
	quit strParent
	
	
]]></Routine>
</Export>