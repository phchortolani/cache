<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvPrePost" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvPrePost
#include FINConst
#include INConst
#include COMSYS
	;-------------------------------------------------------------------------------
	; Display and support of pre-posting information
	;
	; History:
	; 11-Feb-2005	RobertW	Added CR & DR suffixes to the amounts for Currency 1 & 2.
	;-------------------------------------------------------------------------------
#define Currency1(%obj,%type) "<span style='width:100%;text-align:right;font-size:12;color:"_$get(YBLUE,"darkblue")_"'>"_$$FormatCurrency^COMTable(%obj)_" "_%type_"</span>"
#define Currency2(%obj)       "<span style='width:100%;text-align:right;font-size:14;'>"_$$FormatCurrency^COMTable(%obj)_"</span>"
#define Currency3(%obj)       "<span style='width:100%;text-align:right;font-size:16;'>"_$$FormatCurrency^COMTable(%obj)_"</span>"
#define Currency4(%obj,%type) "<span style='width:100%;text-align:right;font-size:18;color:"_$get(YBLUE,"darkblue")_"'>"_$$FormatCurrency^COMTable(%obj)_" "_%type_"</span>"
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^FINAPInvPrePost("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
PrePost(pidInvoice="")
	;-------------------------------------------------------------------------------
	; Attempt to go to Pre-Post form - can't if totals don't match.
	;
	; Returns:
	;
	; History:
	; 14-Feb-2005	JW		Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$TotalsMatch^FINAPInv2(pidInvoice)
	
	if $$$ISOK(strStatus) {
		set strStatus = $$Populate^FINAPInvPrePopulate(pidInvoice)
	}
	
	if $$$ISOK(strStatus) {
		do GoToForm^COMUtilForm("FINAPInvPrePost",pidInvoice)
	} else {
		do ReturnError^COMUtils(strStatus)
	}
	quit
	
	
GetEditStatus(pidInvoice)
	;-------------------------------------------------------------------------------
	; Called from form field def
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	;-------------------------------------------------------------------------------
	new strMessage,strStatus
	
	set strMessage = ""
	
	if $get(pidInvoice)'="" {
		set strStatus = $$OnBeforeButtonLine^FINAPInv(pidInvoice,1)
		if $$$ISERR(strStatus) {
			set strMessage = $$$Text(strStatus)
		}
	}
	quit strMessage
	
	
OnBeforeSave(pidInvoice)
	;-------------------------------------------------------------------------------
	;
	; History
	; 10-Feb-2005	RobertW	General Cleanup of undefined and subscripts
	; 04-Feb-2005	RobertW	Fixed undefined variables pidLine and strType
	;-------------------------------------------------------------------------------
	new idLine,strStatus,strType
	
	set Q = $$$QDontSave
	
	if $get(pidInvoice)'="" {
		set idLine     = $$$KEY3(pidInvoice)
		set strType    = $$$KEY2(pidInvoice)
		set pidInvoice = $$$KEY1(pidInvoice)
		set strStatus  = $$$OK
		
		if (pidInvoice'="") && (strType'="") && (idLine'="") {
			if '$data(^FINAPInvPrePost(YM,pidInvoice,strType,idLine)) {
				set strStatus = $$$Text("391")               ; "Not Saved!"
			}
		}
		
		if $$$ISOK(strStatus) {
			set Q = $$$QSave
		} else {
			set Q = $$$QDontSave
		}
	}
	quit
	
	
Reset(pstrInvoice)
	;-------------------------------------------------------------------------------
	; Returns: Status
	;
	; History:
	; 09-Feb-2005	RobertW	Use reloadform to shorten YBACK
	; 07-Feb-2005	Shobby	Tidied up.
	;-------------------------------------------------------------------------------
	new idInvoice,objInvoice,strStatus
	
	set strStatus = $$$OK
	if $get(pstrInvoice)'="" {
		set idInvoice = $$$KEY1(pstrInvoice)
		if idInvoice'="" {
			set objInvoice = $get(^FINAPInv(YM,idInvoice,1))
			if $$$FINAPInvPostedDate(objInvoice)="" {
				set strStatus = $$Populate^FINAPInvPrePopulate(idInvoice,$$$YES)
			} else {
				set strStatus = $$$Text($listbuild("Fin00633",idInvoice))  ; "Cannot Reset accounts. Invoice %1 has been posted."
			}
		}
	}
	
	if $$$ISOK(strStatus) {
		do ReloadForm^COMUtilForm()
	} else {
		do ReturnError^COMUtilError(strStatus)
	}
	quit strStatus
 
AllowReset(pstrInvoice)
	;-------------------------------------------------------------------------------
	; Check if the invoice is posted, and if so, return an error message, otherwise
	; allow the Reset.
	;
	; Returns:
	;
	; History:
	; 08-Feb-2005	RobertW	Created
	;-------------------------------------------------------------------------------
	new idInvoice
	
	set Q = $$$QDontSave
	
	if ($data(pstrInvoice)'=0) && (pstrInvoice'="") {
		set idInvoice = $$$KEY1(pstrInvoice)
		if $$IsPosted^FINAPInv(idInvoice) {
			set Q = $$$QDontSave_" "_$$$Text($listbuild("Fin00633",idInvoice))  ; "Cannot Reset accounts. Invoice %1 has been posted."
		} else {
			set Q = $$$QSave
		}
	}
	quit
	
OnAfterDataFields(pidInvoice="")
	;-----------------------------------------------------------------------------
	;
	; History:
	; 06-Sep-2005	PO		SR13624: No need to determine currenct currency,
	; 							PrePost always displayed in base
	; 14-Feb-2005	JW		Populate before form is written
	; 11-Feb-2005	JW		Check for data inside populate routine
	; 10-Feb-2005	RobertW	General Cleanup of undefined and subscripts
	;-----------------------------------------------------------------------------
	new idInvoice,strStatus
	
	if pidInvoice="" set pidInvoice = $get(YPARA)
	
	; The following allows the screen to refresh as the invoice
	; variable will not exist and YPARA will be blank.
	
	if pidInvoice="" {
		if $IsObject($get(%session)) {
			set pidInvoice = $get(%session.Data("IMID"))
		}
	}
	
	do DisplayText^COMUtilForm("["_YWHR_"]",,,,1)
	if $get(pidInvoice)'="" do Display^FINAPInvPrePostDisplay(pidInvoice)
 
	quit
	
	
AddAmount(pidInvoice="",pidLine="",pcurAmount=0,penumType="",&parrChars,pblnNonStock=$$$NO)
	;------------------------------------------------------------------------------
	; Adds amounts for the invoice line/account
	; 
	; Called By:
	;	^FINAPInvPrePopulate
	; 
	; ByRef : parrChars - INPUT ONLY
	; 
	; History:
	; 09-Sep-2005	RPW		SR13466: The FC Var Expense Account is now treated as
	; 							a special case.
	; 15-Aug-2005	shobby	SR12823: If this is a non-stock item, override the
	; 							account to which the variances are posted to, to be
	; 							the same as the Invoice amounts
	; 20-May-2005	PO		SR12256: Added checking for FC variances
	; 03-May-2005	PO		SR12256: If CSTVals not defined pass it across safely.
	; 02-May-2005	PK		Removed Tax processing from here and subroutined saving
	; 							of pre-post line
	; 31-Mar-2005	GRF		SR10478: ByRef CSTVals in call to GetAccount
	; 10-Mar-2005	GRF		SR10478: Extra parameter for Char Matrix Account ID
	; 10-Feb-2005	RobertW	General Cleanup of undefined and subscripts
	; 04-Feb-2005	RobertW	Fixed undefined variable objPost
	; 27-Jan-2005	RobertW	Modified to handle by account and by line
	; xx-Jan-2005	PK		Created
	;------------------------------------------------------------------------------
	new arrCSTKey,curAmount,element,idAccount,objCSTVals,objPost,strStatus,strCSTKey
	
	set strStatus = $$$OK
	
	if (pidInvoice'="") && (pidLine'="") {
		if (+pcurAmount'=0) {
			if (penumType=$$$EnumFINAPVARIANCEPOSTExpense) { ; SR13466
				set strStatus = $$GetAccount(.idAccount,$$$FldINFIBPARAccountsMiscellaneousCost,pidInvoice,pidLine,.parrChars,.arrCSTKey,.objCSTVals)
			
			} elseif (penumType=$$$EnumFINAPVARIANCEPOSTInventory)   ||
			         (penumType=$$$EnumFINAPVARIANCEPOSTFCInventory)   {
				set strStatus = $$GetAccount(.idAccount,$$$FldINFIBPARInventoryAccount,pidInvoice,pidLine,.parrChars,.arrCSTKey,.objCSTVals)
			
			} elseif penumType=$$$EnumFINAPVARIANCEPOSTSupplier {
				set strStatus = $$GetSupplierAccount(.idAccount,pidInvoice)
			
			} else {
				set strStatus = $$GetAccount(.idAccount,penumType,pidInvoice,pidLine,.parrChars,.arrCSTKey,.objCSTVals)
			}
			
			if $$$ISOK(strStatus) {
				set strCSTKey = ""
				if $order(arrCSTKey(""))'="" {
					set strCSTKey = $get(arrCSTKey($order(arrCSTKey(""))))
				}
				
				set strStatus = $$SaveLine(pidInvoice,penumType,pidLine,idAccount,pcurAmount,strCSTKey,$get(objCSTVals))
			}
		}
	}
	quit strStatus
	
	
SaveLine(pidInvoice="",pType="",pidLine="",pidAccount="",pcurAmount="",pstrCSTKey="",pstrCSTValues="")
	;-------------------------------------------------------------------------------
	; Save a pre-post line
	; 
	; Called By:
	;	*	AddAmount^FINAPInvPrePost
	;	*	AddTaxAmount^FINAPInvPrePost
	;		AddDiscountAmount^FINAPInvPrePopulate
	; 
	; Returns:		Status
	;
	; History:
	; 12-Mar-2009	GRF		SR16361: Boolean and Status Macros
	; 06-Oct-2005	PO		SR13611: Use the correct exchange rate for adjustment.
	; 16-Sep-2005	PO		SR13489: Take base amount discrepancy into account.
	; 08-Sep-2005	RPW		SR:13446 Update to get the correct FC rate.
	; 20-May-2005	PO		SR:12256 Flag FC variance lines using new field created
	; 							for this purpose
	; 02-May-2005	Paul K	Created SR:12231
	;-------------------------------------------------------------------------------
	new strStatus,element,objPost,objInvoice,curPrePostAmount,fltExchangeRate
	
	$$$LogR("SaveLine",pidInvoice_"<"_pType_"<"_pidLine_"<"_pidAccount_"<"_pcurAmount_"<")
	
	if pstrCSTKey="" set pstrCSTValues = ""
	set strStatus = $$$OK
	
	if $$$ISOK(strStatus) && (pidAccount="") {
		set strStatus = $$$Text($listbuild("Fin00756",pidLine,pType))
	}  ; "Unable to get account for Line %1 type %2."
	
	if $$$ISOK(strStatus) && ((pidInvoice="") || (pType="") || (pidLine="")) {
		set strStatus = $$$Text($listbuild("Fin00757",pidInvoice,pidLine,pType))
	}  ; "Pre-Post Error. Invoice '%1', Line '%2', Type '%3'"
 
 	set objInvoice = $$$GRIDYFELDContainer
 
	if $$$ISOK(strStatus) {
		set objPost = $get(^FINAPInvPrePost(YM,pidInvoice,pType,pidLine,1))
		set $$$FINAPInvPrePostAccount(objPost) = pidAccount
		set curPrePostAmount = $$$FINAPInvPrePostAmount(objPost)
		if curPrePostAmount = "" {
			set fltExchangeRate = $$$FCRate(pcurAmount)
		} else {
			set fltExchangeRate = $$$FCRate(curPrePostAmount)
		}
	 	set curPrePostAmount = $$$FCAdd(curPrePostAmount,pcurAmount)
	 	if $$$AmountIsFC(pcurAmount) {
		 	set $$$FINAPInvPrePostAmount(objPost) = $$$FCUpdate(curPrePostAmount,fltExchangeRate,1)
	 	} else {
		 	set $$$FINAPInvPrePostAmount(objPost) = curPrePostAmount
	 	}
		set $$$FINAPInvPrePostNotes(objPost)            = $$GetNotes(pidInvoice,pidLine)
		set $$$FINAPInvPrePostCostMatrixKeys(objPost)   = pstrCSTKey
		set $$$FINAPInvPrePostCostMatrixValues(objPost) = $piece(pstrCSTValues,Y,1)  ;	pstrCSTValues = CSTVals_Y_SourceLocn_Y_SourceGroup
		set $$$FINAPInvPrePostProfileLocation(objPost)  = $piece(pstrCSTValues,Y,2)
		set $$$FINAPInvPrePostProfileGroup(objPost)     = $piece(pstrCSTValues,Y,3)
		if (pType=$$$EnumFINAPVARIANCEPOSTFCExpense) || (pType=$$$EnumFINAPVARIANCEPOSTFCInventory) {
			set $$$FINAPInvPrePostFCVariance(objPost)   = $$$YES
		}
		
		set strStatus = $$$Save("FINAPInvPrePost",pidInvoice_","_pType_","_pidLine,objPost,$$$YES)
	}
	quit strStatus
	
	
AddTaxAmount(pidInvoice="",pidLine="",pcurAmount=0)
	;-------------------------------------------------------------------------------
	; The Line Contains the tax amount for potenially different accounts, pro-rata it here.
	;
	; Returns:Status
	;
	; History:
	; 02-May-2005	Paul K	Created SR:12231
	;-------------------------------------------------------------------------------
	new strStatus,objLine,arrLine,idTax,idAccount,curAmount,objInvoice
	
	set strStatus = $$$OK 
	if (pidInvoice'="") && (pidLine'="") && (+pcurAmount'=0) {
		set objInvoice = $get(^FINAPInv(YM,pidInvoice,1))
		set objLine    = $get(^FINAPInvLine(YM,pidInvoice,pidLine,1))
		set arrLine(pidLine) = $$$FINAPInvLineTaxCode(objLine)_Y_1
		set strStatus = $$CalculateTaxes^COMTAX($$$FINAPInvTaxLocation(objInvoice),$$$FINAPInvInvoiceDate(objInvoice),.arrLine,1,pcurAmount)
		set idTax = ""
		for {
			set idTax = $order(arrLine(pidLine,idTax))
			quit:idTax=""
			quit:strStatus'=$$$OK
			
			set idAccount = $piece($get(arrLine(pidLine,idTax)),Y,3)
			set curAmount = $piece($get(arrLine(pidLine,idTax)),Y,4)
			set strStatus = $$SaveLine(pidInvoice,"TAX"_idTax,pidLine,idAccount,curAmount)
		}
	}
	quit strStatus
	
	
GetNotes(pidInvoice,pidLine)
	;-------------------------------------------------------------------------------
	; Get some information about how the variance was put together.
	;
	; Returns:
	;
	; History:
	; 10-Feb-2005	RobertW	^FINAPInvLineVariance needs YM as the first parameter.
	; 08-Feb-2005	Shobby	Created
	;-------------------------------------------------------------------------------
	new strNotes,objFINAPInvLineVariance,idVariance
	
	quit ""
	
	; TODO : Not implemented 
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv NOT IMPLEMENTED BEGIN
	set strNotes=""
	if ($get(pidInvoice)="") && ($get(pidLine)'="") {
		set strNotes=pidInvoice_","_pidLine_$$$CRLF
		set idVariance=""
		for {
			set idVariance=$order(^FINAPInvLineVariance(YM,pidInvoice,pidLine,idVariance))
			quit:idVariance=""
			
			set objFINAPInvLineVariance=$get(^FINAPInvLineVariance(YM,pidInvoice,pidLine,idVariance,1))
			if objFINAPInvLineVariance'="" {
				set strNotes=strNotes_objFINAPInvLineVariance_$$$CRLF
			}
		}
	}
	quit strNotes
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ NOT IMPLEMENTED END
	
GetAccount(&pidAccount,pidField,pidInvoice,pidLine,&parrChars,&parrCSTKey,&pobjCSTVals)
	;-----------------------------------------------------------------------------------
	; Gets the GL Account for the passed in params...
	; 
	; ByRef : parrChars,parrCSTKey
	; 
	; Returns : pobjCSTVals - ByRef
	; 
	; History
	; 18-Nov-2009	GRF		SR17046/SR16871: base INFIBPAR on location hierarchy
	; 12-Sep-2005	GRF		SR11866 : SR reference - see entries for 10478 (Mar/May)
	; 09-Sep-2005	RPW		SR13466 : If the account to be found is the FC Expense
	; 						account, get it from the Foreign Currency Realisation field
	; 							on the Supplier Control Account.
	; 03-May-2005	PO		SR12256 : Don't use idLocn as subscript if zero length
	; 02-May-2005	GRF		SR10478 : Don't call Acct ID Matrix for Variance Expense.
	; 31-Mar-2005	GRF		SR10478 : CSTVals now pCSTVals (ByRef) to return values.
	; 29-Mar-2005	GRF		Can't pass array element in as by reference - use "Profile"
	; 							as temp variable
	; 22-Mar-2005	GRF		Remove Temp Fix; activate changed code
	; 10-Mar-2005	GRF		SR10478 : Find Account ID from CST Char Matrix
	; 10-Feb-2005	RobertW	General Cleanup of undefined and subscripts.
	; 							Changed the setup slightly so that the pidInvoice and
	; 							pidLine are required.
	; 05-Feb-2005	MS		Temp Fix: undefined variable idLocn
	; 04-Feb-2005	RobertW	Fixed undefined variable strGroup
	;-----------------------------------------------------------------------------------
	new arrAccts,Date,element,idExpense,idLocn,idOrder,idProduct,idx
	new objLine,objAccounts,OrderType,Profile
	new StockLocn,strCode,strReplace,strGroup,strStatus,TranType,idAccount,objFINAPAccount
	
	quit:($get(pidInvoice)="")||($get(pidLine)="") $$$Text("Fin00640")  ;System error.
	
	set strStatus=$$$OK
	
	set objLine=$get(^FINAPInvLine(YM,pidInvoice,pidLine,1))
	set idProduct = $$$FINAPInvLineItem(objLine)
	set idLocn    = $$$FINAPInvLineReceiveLocation(objLine)
	set idExpense = $$$FINAPInvLineExpenseVarianceCode(objLine)
	set Date      = $$$FINAPInvLineReceiveDate(objLine)
	
	if idProduct'="" {
		set strGroup = $$$INARTItemGroup($get(^INART(YM,idProduct,1)))
	}
	
	if ($get(pidField)'="") && (idLocn'="") {
		; idLocn used in next line without even being set if section above fails if test
		; Even if it is defined, no check for null subscript
		
		; SR13466
		if pidField=$$$EnumFINAPVARIANCEPOSTFCExpense {
			// Get the supplier Control Account
			set strStatus = $$GetSupplierAccount(.idAccount,pidInvoice)
			if $$$ISOK(strStatus) {
				set objFINAPAccount = $get(^FINAPAccount(YM,idAccount,1))
				if objFINAPAccount'="" {
					set pidAccount = $$$FINAPAccountForeignCurrencyRealisatio(objFINAPAccount)  ; TODO : Tidy up property name
				}
			}
			
			if $get(pidAccount)="" {
				set pidField = $$$FldINFIBPARAccountsMiscellaneousCost
			}
			
			set objAccounts=""
		}
				
		if pidField'=$$$EnumFINAPVARIANCEPOSTFCExpense {
		;	set objAccounts = $get(^INFIBPAR(0,YM,idLocn,1))   ; SR17046/SR16871
			set objAccounts = $$GetGLParams^WWW0121Utils(idLocn)
			set pidAccount  = $piece(objAccounts,Y,pidField)
		} 
		
		if pidAccount'="" {
			set strStatus = $$Convert^FINGLProfileConv(.pidAccount,objAccounts,idProduct)
			
			if '$data(^FINGLAccount(YM,pidAccount,1)) {
				if $$$ISOK(strStatus) set strStatus = $listbuild("Fin00067",pidAccount)  ; "Account %1 does not exist"
			}
		} else {
			set strStatus = $listbuild("Fin00639",$$GetPropertyName^COMConst("INFIBPAR",pidField),idLocn)
		}  ; "No Account defined for field '%1' in general ledger specification at location '%2'."
	
	} elseif idLocn="" {
		set strStatus = $$$Text("Fin00758")  ; "No receive location provided."
	
	} else {
		set strStatus = $$$Text("Fin00640")  ; "System error."
	}
	
	if $$$ISERR(strStatus) {
		set strStatus = $$$Text($listbuild("Fin00586",pidLine,$$$Text(strStatus)))  ; "Problem Decoding Account For Line '%1'. Reason '%2'."
	
	} else {
		; *********************************************************
		;  CST Account Identification Matrix
		;   - Retrieve Characteristic Values associated with Data
		;   - Find Account if a Matrix has been defined.
		;   
		;   Pass in   array of default accounts    and
		;             array CharType = CharValue 
		;             element corresponds to the subscript in
		;                CSTMatrixType for that account type
		;             
		;   Get back  array of update accounts     and
		;             array (element) = TT,OT,AT,ED  Matrix Keys
		;             
		;   Convert   array   CharType = CharValue
		;    to       string  CT,CV;CT,CV;... + Locn & Group
		; *********************************************************
		if $$EXIST^%R("CSTMatrix.OBJ",$get(YUCI)) {
			set TranType  = "REC"                        ; to match INREC entry
			set OrderType = 2
			
			set element   = 0   ; Don't continue
			if pidField = $$$FldINFIBPARInventoryAccount          set element = 1     ;(=31)
			if pidField = $$$FldINFIBPARPurchases                 set element = 2     ;(=35) Goods Received Not Invoiced 
		;	if pidField = $$$FldINFIBPARAccountsMiscellaneousCost set element = 3 ;02-May-2005
			
			if element {
				kill arrAccts
				set arrAccts(element) = pidAccount
				
				do GetAccts^CSTMatrix(TranType,OrderType,Date,.parrChars,.arrAccts,.parrCSTKey)
				set pobjCSTVals = $$ArrayToString^COMUtilStr(.parrChars,$$$COMMA,$$$YES,";",$$$NO)
				set pobjCSTVals = pobjCSTVals_Y_idLocn_Y_strGroup
				
				; Handle ledger profiles returned from Account Identification Matrices
				set idx = ""
				for {
					set idx = $order(arrAccts(idx))
					quit:idx=""
					
					set Profile = arrAccts(idx)
					if Profile["{" {
						set strStatus = $$SALConvert^FINGLProfileConv(.Profile,idLocn,strGroup)
						if $$$ISOK(strStatus) set arrAccts(idx) = Profile
					}
				}
				set pidAccount = arrAccts(element)
			}
		}
	}
	quit strStatus
	
	
GetSupplierAccount(&pidAccount,pidInvoice)
	;-------------------------------------------------------------------------------
	; Get the control account for a supplier.
	;
	; ByRef  : pidAccount
	; Returns: Status
	;
	; History:
	; 12-Mar-2009	GRF		SR16361: & for byRef argument
	; 10-Feb-2005	RPW		General Cleanup of undefined and subscripts and the
	; 							comment of pidAccount
	; 07-Feb-2005	PK		Created
	;-------------------------------------------------------------------------------
	new idSupplier,strStatus
	
	set strStatus  = $$$OK
	set pidAccount = ""
	
	if ($get(pidInvoice)'="") {
		set idSupplier = $$$FINAPInvSupplier($get(^FINAPInv(YM,pidInvoice,1)))
		
		if (idSupplier'="") && ($$$FINAPSupplierControlAccount($get(^FINAPSupplier(YM,idSupplier,1)))'="") {
			set pidAccount = $$$FINAPSupplierControlAccount($get(^FINAPSupplier(YM,idSupplier,1)))
		
		} else {
			set strStatus = $listbuild("Fin00165",idSupplier)    ; FIXME : need separate error for idSupplier="" <GRF>
		}  ; "Supplier control account not valid for Supplier %1"
	}
	
	quit strStatus
	
	
Toggle
	;------------------------------------------------------------------------------
	; Toggles the display between line and account
	; 
	; History:
	; 28-Feb-2005	RPW		For build reasons, guard %session
	;  3-Feb-2005	JW		Use reloadform to shorten YBACK
	; 27-Jan-2005	RPW		Created (SR10061)
	;------------------------------------------------------------------------------
	new strToggle
	
	set strToggle = "BA"
	if $IsObject($get(%session)) {
		set strToggle = $get(%session.Data("GTOGGLE"),"BA")
	}
	
	if strToggle="BA" {
		set strToggle = "BL"
	} else {
		set strToggle = "BA"
	}
	if $IsObject($get(%session)) {
		set %session.Data("GTOGGLE") = strToggle
	}
	
	do ReloadForm^COMUtilForm()
	quit
	
 
 
 
]]></Routine>
</Export>