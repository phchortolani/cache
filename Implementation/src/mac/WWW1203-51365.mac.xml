<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW1203" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW1203
	
#include COMSYS
#include WWWConst
	
#define	SECURITY	"!!!ZZZZZZZZZZZZZZZZ"
	
	;-------------------------------------------------------------------------------
	; 19-Jun-2009	GRF		Doco; General clean up - old changes, authorisation and
	; 							order macros
	;-------------------------------------------------------------------------------
ACCESS(pidAccessForModule="",pidUsersAccess="")
	;-------------------------------------------------------------------------------
	; Overrides the call to WWWACCESS... To prevent System Administrator seeing tabs
	; that have been hidden with customisation.
	;
	; Params:
	; pidAccessForModule: The modules list
	; pidUsersAccess    : The user security list
	;
	; ByRefs:
	;
	; Returns:
	; A boolean, $$$YES - has access, $$$NO no access
	;
	; History:
	; 25-Oct-2006	RPW		SRBR014072: use new security macro, & added documentation
	; 							used boolean macros, modified param names to be per
	; 							coding standard
	; 25-Jun-2006	shobby	SRBR014072: Created
	;-------------------------------------------------------------------------------
	new blnAccess
	
	if pidUsersAccess=$$$SECURITY {
		set blnAccess = $$$NO
	} else {
		set blnAccess = $$^WWWACCESS(pidAccessForModule,pidUsersAccess)
	}
	quit blnAccess
	
	
GET(pidForm,pidLanguage,pidTab)
	;-------------------------------------------------------------------------------
	; Overrides the get method on WWW1203 to use customisation if there is any.
	; If the 'Hide' property on WWW1203, simulates not having relevant permissions to see
	; the tab by giving an 'impossible' AccessForModule.  Done this way to minimise
	; impact on existing code.
	;
	; Params:
	; pidForm    : The value of YFORM
	; pidLanguage: The value of SPRACHE
	; pidTab     : The current tab
	;
	; ByRefs:
	;
	; Returns:
	; The Combined WWW1203 and WWW1203D object to get the correct customisation
	;
	; History:
	; 08-Nov-2011	shobby	SR17846: Changed limits.  Core 0-49, Custom 50+
	; 03-Jul-2007	RPW		SRBR014503: If WWW1203 exists and WWW1203D does not and
	; 						the id of the tab is > 99 this means we have a customised
	; 						tab and it is not for this Company.
	; 25-Oct-2006	RPW		SRBR014072: Enabled handling of all the fields on the
	; 						Customisation form.  Most were ignored which would create
	; 						confusion if the values where modified.  Renamed parameters
	; 						to adhere to coding standards, documented the code.
    ; 16-Oct-2006 	HeberB	SRBR014280:	If CheckExecuteToHide result $$$YES then HIDE
	; 25-Jun-2006	shobby	SRBR014072: Created
	;-------------------------------------------------------------------------------
	new objWWW1203,objWWW1203D,strCommand,strResult
	
	set objWWW1203 = $get(^WWW1203(0,pidForm,pidLanguage,pidTab,1))
	
	if $$$WWW1203CheckExecuteToHide(objWWW1203)'="" {
		set strResult = ""
		set strCommand = "set strResult="_$$$WWW1203CheckExecuteToHide(objWWW1203)       ;   *** EXECUTE ? ***
	
		xecute strCommand
		
		if strResult { 
			set $$$WWW1203AccessForModule(objWWW1203) = $$$SECURITY
			quit objWWW1203                                                 ; *** EARLY EXIT ***
		}
	}
	
	set objWWW1203D=$get(^WWW1203D(0,pidForm,pidLanguage,pidTab,YM,1))
	if objWWW1203D'="" {
		; Allow all customizations to work as required.
		
		if $$$WWW1203DHide(objWWW1203D)=$$$YES {
			set $$$WWW1203AccessForModule(objWWW1203) = $$$SECURITY
			
		} else {
			if $$$WWW1203DAccessForModule(objWWW1203D)'="" {
				set $$$WWW1203AccessForModule(objWWW1203) = $$$WWW1203DAccessForModule(objWWW1203D)
			}
			
			if $$$WWW1203DUsersAccess(objWWW1203D)'="" {
				set $$$WWW1203UsersAccess(objWWW1203) = $$$WWW1203DUsersAccess(objWWW1203D)
			}
		}
		
		if $$$WWW1203PictureFileForPageTag(objWWW1203D)'="" {
			set $$$WWW1203PictureFileForPageTag(objWWW1203) = $$$WWW1203DPictureFileForPageTag(objWWW1203D)
		}
		
		if $$$WWW1203DToolTip(objWWW1203D)'="" {
			set $$$WWW1203ToolTip(objWWW1203) = $$$WWW1203DToolTip(objWWW1203D)
		}
		
		if $$$WWW1203DDataFieldSearchFunction(objWWW1203D)'="" {
			set $$$WWW1203DataFieldSearchFunction(objWWW1203) = $$$WWW1203DDataFieldSearchFunction(objWWW1203D)
		}
		
	} else { 
		if pidTab'<$$FirstCustom^WWW1203D() {
			set $$$WWW1203AccessForModule(objWWW1203) = $$$SECURITY
		}
	}
	quit objWWW1203
	
	
FindFirstTab(pidForm,pidLanguage,pidSite)
	;-------------------------------------------------------------------------------
	; Find the First Visible tab on a form
	;
	; Params:
	; pidForm    : The value of YFORM
	; pidLanguage: The value of SPRACHE
	; pidSite    : The current site (tab) (SEITE)
	;
	; ByRefs:
	;
	; Returns:
	; The site id that is the first one to be shown, it may not be in the first position.
	;
	; History:
	; 25-Oct-2006	RPW		SRBR014072: Created
	;-------------------------------------------------------------------------------
 	new idSite,idTab,objWWW1203
 	
	set idSite = pidSite
	set idTab = ""
	for {
		set idTab = $order(^WWW1203(0,pidForm,pidLanguage,idTab))
		quit:idTab=""
		
		set objWWW1203 = $$GET(pidForm,pidLanguage,idTab)
		if $$ACCESS^WWW1203($piece(objWWW1203,Y,6),$piece(objWWW1203,Y,5)) {
			set idSite = idTab
			quit
		}
	}
	quit idSite
	
	
OnBeforeButtonLine() 
	;-------------------------------------------------------------------------------
	; Don't allow any modify in English column when the YBACK(last form) is the
	; TSUtilityTab form, and when the tab was created by a custom tab.
	;
	; ByRefs:
	;
	; History:
	; 14-Jun-2007	shobby	SRBR014473: Used macro to set readonly.
	; 13-Jun-2007	GM		SRBR014473: Created
	;-------------------------------------------------------------------------------
	if $piece($get(YBACK),",",$length($get(YBACK),",")-1)="TSUtilityTab" {	
		if $$$KEY2(YKEY) = "EN" { 
			set $$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly
		}
	}
	do CheckCustomTabForEditing($$$KEY3(YKEY))
	quit
	
	
CheckCustomTabForEditing(pintPageNumber)
	;-------------------------------------------------------------------------------
	; Set the WWW1203 form to read only if the tab id was created by a custom tab
	;  (page number 50+).
	;
	; Params:
	; 	pintPageNumber - the page id of the tab to be checked.
	;
	; History:
	; 08-Nov-2011	shobby	SR17846:    Changed limits.  Core 0-49, Custom 50+
	; 27-Jun-2007	FRANK	SRBR014503: Created
	;-------------------------------------------------------------------------------
	// Tabs with page number 50+ should be read only.
	if pintPageNumber '<$$FirstCustom^WWW1203D() {						;SR17846
		set $$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly
	}
	quit
	
OnBeforeSaveHook()
	;-------------------------------------------------------------------------------
	; On before save hook for WWW1203.
	;
	; History:
	; 27-Jun-2007	FRANK	SRBR014503: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$CheckCustomTab($$$KEY3(YKEY))
	quit strStatus
	
	
CheckCustomTab(pintPageNumber)
	;-------------------------------------------------------------------------------
	; Check if the tab could be saved.
	;
	; Params:
	; 	pintPageNumber - the page id of the tab.
	;
	; Returns:
	;  An error status if the user tries to create a core tab with id 50+.
	;
	; History:
	; 03-Sep-2013	shobby	CORE-241: Improved error message
	; 08-Nov-2011	shobby	SR17846: Changed limits.  Core 0-49, Custom 50+
	; 27-Jun-2007	FRANK	SRBR014503: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	
	if pintPageNumber '<$$FirstCustom^WWW1203D() {					;SR17846
		set strStatus = $$$MakeStatus(34454,$$FirstCustom^WWW1203D()-1)
	}  ; "Page numbers 50 or greater are reserved for customization tabs only."
	quit strStatus
	
	
OnAfterSave(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Check the permissions of tabs in current form.
	;
	; Params: 	
	;
	; Returns:
	;
	; History:
	; 19-Jun-2009	GRF		If test did not have parentheses around code block;
	; 							variables to coding standard
	; 03-Sep-2007	GM		SRBR014630: Created
	;-------------------------------------------------------------------------------
	new idApp,idForm,idMenu,idTab,objWWW004,objWWW00444,objWWW1203,strStatus
	
	set strStatus=""
	set idApp = ""
	for {
		set idApp = $order(^WWW004(0,idApp))
		quit:idApp=""
		
		set idMenu = ""
		for {
			set idMenu = $order(^WWW004(0,idApp,idMenu))
			quit:idMenu=""
			
			set objWWW004 = $get(^WWW004(0,idApp,idMenu,1))
			if objWWW004 '="" {
				set idForm = $$$WWW004FormName(objWWW004)
				
				if idForm = $$$KEY1(pYKEY) {
					set idTab = $$$KEY3(pYKEY)
					set objWWW00444 = $get(^WWW00444(0,idApp,idMenu,idTab,1))
					
 					if ($$$WWW1203AccessForModule(YFELD)'="") || ($$$WWW1203UsersAccess(YFELD)'="") {			
		 				set $$$WWW00444Module1(objWWW00444)     = $$$WWW1203AccessForModule(YFELD) 
		 				set $$$WWW00444UserAccess(objWWW00444)  = $$$WWW1203UsersAccess(YFELD)
						set strStatus = $$$Save("WWW00444",idApp_","_idMenu_","_idTab,objWWW00444,$$$YES)
 					}
				}
			}
		}
	}
	quit strStatus
	
	
OnBeforeDeleteHook(pYKEY)
	;-------------------------------------------------------------------------------
	; On before delete hook for WWW1203. 
	; For pages < 50, delete Customisation tabs for all companies, if Core Tabs are deleted
	; 
	; pYKEY = return the keys
	; 	
    ; Returns:
    ; 	strStatus for the delete action.
    ; 	
	; History:
	; 08-Nov-2011	shobby	SR17846: Limit changed from 100 to 50 (FirstCustom)
	; 19-Jun-2009	GRF		idForm and idLang rather than repeatedly extracting keys
	; 05-Oct-2007	GM		SR15596: Created
	;-------------------------------------------------------------------------------
	new idCompany,idForm,idLang,idPage,strStatus
	
	$$$VAR
		
	set strStatus = $$$OK
	set idForm = $$$KEY1(pYKEY)
	set idLang = $$$KEY2(pYKEY)
	set idPage = $$$KEY3(pYKEY)
	
	if (idPage < $$FirstCustom^WWW1203D()) { 						;SR17846
		set idCompany = ""
		for {
			set idCompany = $order(^WWW1203D(0,idForm,idLang,idPage,idCompany))
			quit:idCompany=""
			
			set strStatus = $$DeleteCustomisationTab(idForm_$$$COMMA_idLang_$$$COMMA_idPage_$$$COMMA_idCompany)
		}
	}
	quit strStatus
	
	
DeleteCustomisationTab(pidCustomTab)
	;-------------------------------------------------------------------------------
	; Delete a customisation tab.
	;
	; 	pidCustomisationTab - the id of the customisation tab to be deleted.
	; 	
    ; Returns:
    ; 	strStatus for the delete action.
	;
	; History:
	; 05-Oct-2007	GM		SR15596: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$Kill("WWW1203D",pidCustomTab)
	quit strStatus
	
]]></Routine>
</Export>