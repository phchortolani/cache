<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARDWProducaoDiaria" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARDWProducaoDiaria
#include COMSYS

GeraProducaoDiaria(pDate)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Gera a produção diária.
    ;		Tipo 1 = Fracionamento (ou unitarização)
    ;		Tipo 2 = Montagem de Kits
	;
	; Chamado por:
	;	GeraProducaoMensal^VARDWProducaoMensal.mac
	;
    ; Histórico:
    ;	16-Fev-2012	 Gustavo	Criado
    ;-------------------------------------------------------------------------------
	quit:(pDate = "")
	
	do GeraProducaoDiariaUnit(pDate,1) //Tipo 1 - Fracionamento (ou unitarização)
	do GeraProducaoDiariaKits(pDate,2) //Tipo 2 - Montagem de Kits

	quit
	
	
GeraProducaoDiariaKits(pDate,pTipo=2)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Gera a produção diária de montagem de kits para os locais.
	;
    ; Histórico:
    ;	16-Fev-2012	 Gustavo	Criado	
    ;-------------------------------------------------------------------------------
	quit:( (pDate = "") || (pTipo = "") )
	
	new idLocal, quantidade

	&sql(DECLARE cursorLocaisKit CURSOR FOR
		  SELECT ProductionLocation, SUM(Receipt)
		    INTO :idLocal, :quantidade
		    FROM INMO
		   WHERE Status = 5
		     AND $piece(ReceiptFirmedDate,",",1) = :pDate
		     AND Receipt > 0
		GROUP BY ProductionLocation
	)
	
	&sql(open cursorLocaisKit)
   	quit:(SQLCODE)
   	
	for { &sql(fetch cursorLocaisKit)
		quit:(SQLCODE)
		
		set ^VARDWProducaoDiaria(YM,pTipo,idLocal,pDate,1) = quantidade
	}
	
	&sql(close cursorLocaisKit)

	quit

GeraProducaoDiariaUnit(pDate,pTipo=1)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Gera a produção diária de fracionamento (ou unitarização) para os locais.
	;
    ; Histórico:
    ;	16-Fev-2012	 Gustavo	Criado	
    ;-------------------------------------------------------------------------------
	quit:( (pDate = "") || (pTipo = "") )
	
	new idLocal, quantidade

	;SQL atualizado para buscar da nova estrutura de etapas
	&sql(DECLARE cursorLocais CURSOR FOR
		  SELECT Ordem.Local1, SUM(Etapa.QuantSelEtiq)
		  INTO :idLocal, :quantidade
		  FROM VAROrdemUnitarizacaoEtapa Etapa
		  INNER JOIN SQLUser.VAROrdemUnitarizacao AS Ordem
		  ON Ordem.CodOrdemUnitarizacao = Etapa.CodOrdemUnitarizacao
		  WHERE Etapa.Situacao = 1
			AND $piece(Etapa.Data,",",1) = :pDate
			AND Etapa.QuantSelEtiq > 0
		GROUP BY Ordem.Local1		  	  
	)

	/*
	&sql(DECLARE cursorLocais CURSOR FOR
		  SELECT Local1, SUM(Quantidade)
		    INTO :idLocal, :quantidade
		    FROM VAROrdemUnitarizacao
		   WHERE Status = 4
		     AND $piece(ConcluidoEm,",",1) = :pDate
		     AND Quantidade > 0
		GROUP BY Local1
	)
	*/
	
	&sql(open cursorLocais)
   	quit:(SQLCODE)
   	
	for { &sql(fetch cursorLocais)
		quit:(SQLCODE)
		
		set ^VARDWProducaoDiaria(YM,pTipo,idLocal,pDate,1) = quantidade
	}
	
	&sql(close cursorLocais)

	quit
	
	
GetQuantProducaoDiaria(pTipo,pidLocal,pDate)
	quit:( (pTipo = "") || (pidLocal = "") || (pDate = "") ) ""

	new fltQuantidade
	set fltQuantidade = 0

	//Busca no DataWarehouse caso o dado já tenha sido gerado
	if $data(^VARDWProducaoDiaria(YM,pTipo,pidLocal,pDate)) {		
		set fltQuantidade = $piece($get(^VARDWProducaoDiaria(YM,pTipo,pidLocal,pDate,1)),Y,1)
	
	//Caso contrário faz a consulta nas tabelas de origem dos dados
	} else {	
		if (pTipo = 1) {
			set fltQuantidade = +$$GetQuantProducaoDiariaUnit(pidLocal,pDate)	
		
		} elseif (pTipo = 2) {
			set fltQuantidade = +$$GetQuantProducaoDiariaKit(pidLocal,pDate)
		}	
	}

	quit fltQuantidade
	
GetQuantProducaoDiariaUnit(pidLocal,pDate)
	quit:( (pidLocal = "") || (pDate = "") ) ""
	
	new fltQuantidade
	set fltQuantidade = 0

	;SQL atualizado para buscar da nova estrutura de etapas
	&sql(SELECT SUM(Etapa.QuantSelEtiq)
		   INTO :fltQuantidade
		   FROM VAROrdemUnitarizacaoEtapa Etapa
		   INNER JOIN SQLUser.VAROrdemUnitarizacao AS Ordem
		   ON Ordem.CodOrdemUnitarizacao = Etapa.CodOrdemUnitarizacao
		   WHERE Etapa.Situacao = 1
		    AND Ordem.Local1 = :pidLocal
		    AND $piece(Etapa.Data,",",1) = :pDate
		    AND Etapa.QuantSelEtiq > 0
	)
	
	/*
	&sql(SELECT SUM(Quantidade)
		   INTO :fltQuantidade
		   FROM VAROrdemUnitarizacao
		  WHERE Status = 4
		    AND Local1 = :pidLocal
		    AND $piece(ConcluidoEm,",",1) = :pDate
		    AND Quantidade > 0
	)
	*/
	
	if (SQLCODE '= 0) {
		quit 0
	}	
	
	quit fltQuantidade


GetQuantProducaoDiariaKit(pidLocal,pDate)
	quit:( (pidLocal = "") || (pDate = "") ) ""
	
	new fltQuantidade
	set fltQuantidade = 0
	
	&sql(SELECT SUM(Receipt)
		    INTO :fltQuantidade
		    FROM INMO
		   WHERE Status = 5
		     AND ProductionLocation = :pidLocal
		     AND $piece(ReceiptFirmedDate,",",1) = :pDate
		     AND Receipt > 0
	)

	if (SQLCODE '= 0) {
		quit 0
	}
	
	quit fltQuantidade
]]></Routine>
</Export>