<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBankReconMatchCache" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBankReconMatchCache
	
#include FINConst
#include FINSYS
	
OnBeforeFormat(pidGrid,pstrText,pYFELD)
	;-------------------------------------------------------------------------------
	; Find the parent line and set the background colour to YDARKGRAY.
	;
	; Params:
	; pidGrid : The grid cell id
	; pstrText: The text of the grid
	; pYFELD  : The data for the grid row.
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 03-Oct-2006	JW/RPW	SR15091: Don't nest macros, get the correct row identifier.
	; 28-Feb-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new idParent,idBankRecon,idMatchLine,objParent,strId,idRow
 
	if $piece(pidGrid,"_",2)=6 {
		// Find the Manual Match details		
		set idBankRecon = $$GetYKEYContainer^COMGridEdit31Interface()
		set idParent    = $$$GetActiveParent(idBankRecon)
		
		if $$$IsValidKey(idBankRecon,idParent) {
			set idMatchLine = $piece(idParent,$$$COMMA,2)
			
			// Get the manual match entry
			set objParent = $get(^FINGLBankReconManualMatch(0,idBankRecon,idMatchLine,1))
			
			// Make sure the Class Id is the row we are interested in
			set strId = $$$KEY2($$$FINGLBankReconManualMatchClassId(objParent))
			set idRow = $$ReferenceRow^COMGridEdit31Interface($$$MATCHCACHE,strId)
			if idRow=+$piece(pidGrid,"Y",2) {
				set YBACKGROUNDCOLOR = YDARKGRAY
			}
		}
	}
	quit
	
	
CompleteByType(pstrType) 
	;-------------------------------------------------------------------------------
	; Complete the object regardless of the type, ie any type can be passed in here.
	;
	; Params:
	; pstrType: The class type, ie PreCleared, Line, Matched
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new arrGrid,idBankRecon,idParent,strData,objMatch,idCache,curRemaining,objCache,strStatus,blnIsDeposit
	new curDeposit,curWithdrawal,strReference,dteTransaction,idBankTran,strClass,idClass,idAccount
	new objType,idType,idLine,arrMatches,curTemp,idRow,objLine
	
	set idBankRecon = $$GetYKEYContainer^COMGridEdit31Interface()
	
	$$$GRIDGetContents(.arrGrid,$$$MATCHCACHE)
 
	set idParent = $$$GetActiveParent(idBankRecon)
	
	if '($$$IsValidKey(idBankRecon,idParent)) {
		$$$Alert("Fin00998")
		quit ""
	}
	
	set strData  = "^FINGLBankReconManualMatch("_$$^WWWKEYBUILD("0,"_idParent_$$$COMMA_1)_")"
	set objMatch = @strData
	set idCache  = $$$FINGLBankReconManualMatchClassId(objMatch)
	set strData  = "^FINGLBankReconMatchCache("_$$^WWWKEYBUILD("0,"_idCache_$$$COMMA_1)_")"
	
	set curRemaining = $$SumCleared^FINGLBankReconManualMatch(idCache)
	
	if (pstrType="FINGLBankReconMatched") && (+curRemaining'=0) {
		$$$Alert($listbuild("Fin00999",$$^WWWFELDNAME("FINGLBankRecon","M",36)))
		quit ""
	} ; "Unable to complete. The %1 must equal 0."
	
	set objCache = @strData
		
	set blnIsDeposit = $$$IsDeposit(objCache)
	
	if blnIsDeposit {
		set curDeposit=curRemaining
		set curWithdrawal=""
	} else {
		set curWithdrawal=curRemaining
		set curDeposit=""
	}
	
	set strReference   = $$$FINGLBankReconMatchCacheRef(objCache)
	set dteTransaction = $$$FINGLBankReconMatchCacheDate1(objCache)
	set idBankTran     = ""
	set strClass       = $$$FINGLBankReconMatchCacheClassType(objCache)
	set idClass        = $$$FINGLBankReconMatchCacheClassId(objCache)
	
	
	if ((strClass="FINGLBankReconPreCleared") || (strClass="FINGLBankReconMatched")) &&
	   (pstrType="FINGLBankReconPreCleared")                                            {
		set curTemp       = curWithdrawal
		set curWithdrawal = curDeposit
		set curDeposit    = curTemp
	}
	
	if strClass="FINGLBankTran" set idBankTran = $$$KEY2(idClass)
	
	set idAccount = $case(strClass,"FINGLBankTran":$$$KEY1(idClass),
								   "FINGLBankReconMatched":$$$FINGLBankReconMatchedAccount($$$DATA(strClass,idClass)),
								   "FINGLBankReconPreCleared":$$$FINGLBankReconPreClearedAccount($$$DATA(strClass,idClass)),
								   :"")
	
	
	
	if pstrType="FINGLBankReconPreCleared" {			
		set objType = $$CreatePreCleared^FINGLBankReconPreCleared(idBankRecon,curWithdrawal,curDeposit,strReference,dteTransaction,
				 idBankTran,idAccount,,,$$$YES,,.idType)
				 
	} elseif pstrType="FINGLBankReconLine" {
		set objType = $$SaveGLAdj^FINGLBankTran(idBankRecon,curWithdrawal,curDeposit,strReference,dteTransaction,idBankTran,.idType)
	}
 
 	if pstrType'="FINGLBankReconMatched" {	
		set idLine = $order(^FINGLBankReconMatchCache(0,idBankRecon,""),-1)
 	}
	
	if pstrType="FINGLBankReconPreCleared" {
		do SaveMatchCache^FINGLBankReconManualMatch(idBankRecon,.idLine,
								  $$$Text("Fin00894"),		// Pre Cleared
								  $$$FINGLBankReconPreClearedTransactionDate(objType),
								  $$$FINGLBankReconPreClearedReference(objType),
								  $$$FINGLBankReconPreClearedDebit(objType),
								  $$$FINGLBankReconPreClearedCredit(objType),
								  "FINGLBankReconPreCleared",
								  idType,$$$YES)
								  
	} elseif pstrType="FINGLBankReconLine" {
		do SaveMatchCache^FINGLBankReconManualMatch(idBankRecon,.idLine,
								  "GL Adj.",		// Pre Cleared
								  $$$FINGLBankReconLineTransactionDate(objType),
								  $$$FINGLBankReconLineReference(objType),
								  $$$FINGLBankReconLineDebit(objType),
								  $$$FINGLBankReconLineCredit(objType),
								  "FINGLBankReconLine",
								  idType,$$$YES)
	}
	
	if pstrType'="FINGLBankReconMatched" {
		set objCache = $get(^FINGLBankReconMatchCache(0,idBankRecon,idLine,1))
		set arrGrid(idBankRecon,idLine) = objCache
		do CreateManualMatch^FINGLBankReconManualMatch(idBankRecon,$$$MATCHCACHE,idBankRecon_$$$COMMA_idLine,$$$KEY2(idParent))
	}
 
	do GetManualArray^FINGLBankReconManualMatch(idBankRecon,$$$MATCHCACHE,idCache,.arrMatches)
	do CompleteMeAndMyChildren(idBankRecon,.arrMatches,.arrGrid,$$$YES)
							
	// Remove the active parent from grid.
	do UnsetActive^FINGLBankReconManualMatch(idParent)
	
	set idRow   = $$ReferenceRow^COMGridEdit31Interface($$$MATCHCACHE,$$$KEY2(idCache))
	set objLine = arrGrid(idBankRecon,idRow)
	set $$$FINGLBankReconMatchCacheComplete(objLine) = $$$YES
	set $$$FINGLBankReconMatchCacheCleared(objLine)  = $$$YES
	set arrGrid(idBankRecon,idRow) = objLine
	
	$$$GRIDSetContents(.arrGrid,$$$NO,$$$MATCHCACHE)
		
	write "SAVENOW();"
	quit
	
	
CompleteMeAndMyChildren(pidBankRecon,&parrMatches,&parrGrid="",
						pblnComplete,pblnUpdateGrid=$$$YES,pblnManual) 
	;-------------------------------------------------------------------------------
	; Find me and my children and mark them as complete.
	; It also updates the grid if needed
	;
	; Params:
	; pidBankRecon  : The id of the bank reconciliation
	; parrMatches   : The list of items that have been matched
	; parrGrid      : The grid items
	; pblnComplete  : Is this complete or uncomplete
	; pblnUpdateGrid: Should we update the grid
	; pblnManual    : Was this a manual match or not.
	;
	; ByRefs:
	; parrMatches
	; parrGrid
	;
	; Returns:
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: parrGrid rather than pobjGrid
	; 18-Oct-2006	JW		SR15134: Look at kill status. Note - not used.
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new intCache,idClass,idCacheClass,idManual,idRow
	new objData,strClass,strStatus
	
	set intCache = ""
	for {
		set intCache = $order(parrMatches(intCache))
		quit:intCache=""
		
		set idClass = parrMatches(intCache)
		set objData = $$$DATA($$$MATCHCACHE,idClass)
		
		set $$$FINGLBankReconMatchCacheComplete(objData) = $$$ANBOOLEAN(pblnComplete)
 
		if 'pblnComplete {
			set $$$FINGLBankReconMatchCacheCleared(objData) = $$$ANNO
			set $$$FINGLBankReconMatchCacheParent(objData)  = $$$ANNO
			set idManual  = $$FindManualMatchId^FINGLBankReconManualMatch(pidBankRecon,$$$MATCHCACHE,idClass)
			set strStatus = $$$Kill($$$MANUALMATCH,idManual)
		}
		set strStatus = $$$Save($$$MATCHCACHE,idClass,objData,$$$YES)
		
		set strClass = $$$FINGLBankReconMatchCacheClassType(objData)
		if strClass="FINGLBankReconMatched" {
			set idCacheClass = $$$FINGLBankReconMatchCacheClassId(objData)
			
			set objData=$$$DATA(strClass,idCacheClass)
			if $data(pblnManual) {
				set $$$FINGLBankReconMatchedManuallyCleared(objData) = $$$ANBOOLEAN(pblnManual)
			} else {
				set $$$FINGLBankReconMatchedManuallyCleared(objData) = $$$ANBOOLEAN(pblnComplete)
			}
			
			if 'pblnComplete {
				set $$$FINGLBankReconMatchedCleared(objData)        = $$$ANNO
				set $$$FINGLBankReconMatchedMatchReference(objData) = ""
				set $$$FINGLBankReconMatchedMatchDate(objData)      = ""
				set $$$FINGLBankReconMatchedMatchDiff(objData)      = ""
			}
			
			set $$$FINGLBankReconMatchedStatus(objData) = $$GetMatchStatus^FINGLBankReconMatched($$$FldFINGLBankReconMatchedStatus,objData,idCacheClass,$$$NO,$$$NO,pidBankRecon)
			
			do Save^COMUtils(strClass,idCacheClass,objData,$$$YES)
		}
		
		if strClass="FINGLBankTran" {
			set idCacheClass = $$$FINGLBankReconMatchCacheClassId(objData)
			set objData      = $$$DATA(strClass,idCacheClass)
			
			if 'pblnComplete {
				set $$$FINGLBankTranMatched(objData)     = $$$ANNO
				set $$$FINGLBankTranManualMatch(objData) = $$$ANNO
				
				do Save^COMUtils(strClass,idCacheClass,objData,$$$YES)
			}	
		}
		
		if pblnUpdateGrid {
			set idRow = $$ReferenceRow^COMGridEdit31Interface($$$MATCHCACHE,$$$KEY2(idClass))
			if idRow'="" {
				if $data(parrGrid(pidBankRecon,idRow)) {
					set objData = parrGrid(pidBankRecon,idRow)
					set $$$FINGLBankReconMatchCacheComplete(objData) = $$$ANBOOLEAN(pblnComplete)
					if 'pblnComplete {
						set $$$FINGLBankReconMatchCacheCleared(objData) = $$$ANNO
						set $$$FINGLBankReconMatchCacheParent(objData)  = $$$ANNO
					}
					set parrGrid(pidBankRecon,idRow) = objData
				}
			}
		}
	}
	quit
	
	
PreClearedComplete(a="",b="") 
	;-------------------------------------------------------------------------------
	; Call CompleteByType for the Pre Cleared entries.
	;
	; Params:
	; a
	; b
	;
	; ByRefs:
	;
	; Returns:
	; ""
	;
	; History:
	; 11-Aug-2006	PO		SR14331: Disable button if Bank Recon is not editable
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new strYKEY,idBankRecon,objBankRecon,strStatus
	
	set strYKEY = $$$GRIDGetCurrentYKEY
	
	set idBankRecon  = $$$KEY1(strYKEY)
	set objBankRecon = $get(^FINGLBankRecon(0,idBankRecon,1))
	
	set strStatus = $$Editable^FINSYSReview("FINGLBankRecon",$$$FINGLBankReconStatus(objBankRecon))
	if $$$ISOK(strStatus) {
		do CompleteByType("FINGLBankReconPreCleared")
	
	} else {
		$$$Alert(strStatus)
	}
	quit ""
	
	
GLAdjComplete(a="",b="") 
	;-------------------------------------------------------------------------------
	; Call CompleteByType for the GL Adj entries
	;
	; Params:
	; a
	; b
	;
	; ByRefs:
	;
	; Returns:
	; ""
	;
	; History:
	; 11-Aug-2006	PO		SR14331: Disable button if Bank Recon is not editable
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new strYKEY,idBankRecon,objBankRecon,strStatus
	
	set strYKEY = $$$GRIDGetCurrentYKEY
	
	set idBankRecon  = $$$KEY1(strYKEY)
	set objBankRecon = $get(^FINGLBankRecon(0,idBankRecon,1))
	
	set strStatus = $$Editable^FINSYSReview("FINGLBankRecon",$$$FINGLBankReconStatus(objBankRecon))
	if $$$ISOK(strStatus) {
		do CompleteByType("FINGLBankReconLine")
	
	} else {
		$$$Alert(strStatus)
	}
	quit ""
	
	
GLAdjUncomplete(pstrYKEY) 
	;-------------------------------------------------------------------------------
	; Call UncompleteByType for the GL Adj entries
	;
	; Params:
	; pstrYKEY: The id of the GL Adj entry
	;
	; ByRefs:
	;
	; Returns:	status
	; ""
	;
	; History:
	; 19-Oct-2006	JW		SR15134: Look at kill status. Return status
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
 	new strStatus
 	
	set strStatus = $$UncompleteByType(pstrYKEY,"FINGLBankReconLine")
	quit strStatus
	
	
PreClearedUncomplete(pstrYKEY) 
	;-------------------------------------------------------------------------------
	; Call UncompleteByType for the Precleared entries
	;
	; Params:
	; pstrYKEY: The id of the Precleared entry
	;
	; ByRefs:
	;
	; Returns:
	; ""
	;
	; History:
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	do UncompleteByType(pstrYKEY,"FINGLBankReconPreCleared")
	quit
	
	
Complete(a="",b="") 
	;-------------------------------------------------------------------------------
	; Call CompleteByType for the GL Trans entries
	;
	; Params:
	; a
	; b
	;
	; ByRefs:
	;
	; Returns:
	; ""
	;
	; History:
	; 11-Aug-2006	PO		SR14331: Disable button if Bank Recon is not editable
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new strYKEY,idBankRecon,objBankRecon,strStatus
	
	set strYKEY      = $$$GRIDGetCurrentYKEY
	set idBankRecon  = $$$KEY1(strYKEY)
	set objBankRecon = $get(^FINGLBankRecon(0,idBankRecon,1))
	
	set strStatus = $$Editable^FINSYSReview("FINGLBankRecon",$$$FINGLBankReconStatus(objBankRecon)) // SR14331
	if $$$ISOK(strStatus) {
		do CompleteByType("FINGLBankReconMatched")
	} else {
		$$$Alert(strStatus)
	}
	quit ""
	
	
MatchedUncomplete(pstrYKEY) 
	;-------------------------------------------------------------------------------
	; Call UncompleteByType for the GL Trans entries
	;
	; Params:
	; pstrYKEY: The id of the GL Trans entry
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 22-Jun-2006	RPW		SR14461: Commented
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	do UncompleteByType(pstrYKEY,"FINGLBankReconMatched")
	quit
	
	
UncompleteByType(pidType,pstrClass,pblnKill=$$$YES)
	;-------------------------------------------------------------------------------
	; Uncomplete the object regardless of the type, ie any type can be passed in here.
	;
	; Params:
	; pidType  : The id of the object to uncomplete
	; pstrClass: The class of the object to uncomplete
	; pblnKill : Whether to completely remove the entry
	;
	; ByRefs:
	;
	; Returns:	status
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
	; 18-Oct-2006	JW		SR15134: Look at kill status. Return status.
	; 22-Jun-2006	RPW		SR14461: Commented and allow the GL Trans tab to update the Grid.
	; 02-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new idBankRecon,idMe,objManual,blnUpdateGrid
	new idMatch,idParent,arrGrid,arrMatches,strStatus
	
	set strStatus = $$$OK
	quit:pidType="" strStatus
	
	// Find my parent match cache via manual match
	set idBankRecon = $$GetYKEYContainer^COMGridEdit31Interface()
	if idBankRecon'="" {
		set idMe = $$FindManualMatchId^FINGLBankReconManualMatch(idBankRecon,pstrClass,pidType)
		quit:idMe="" strStatus                                            ; *** EARLY EXIT ***
		
		set objManual = $$$DATA($$$MANUALMATCH,idMe)
		set idMatch   = $$$FINGLBankReconManualMatchClassId(objManual)
		set idParent  = $$$FINGLBankReconManualMatchParent(objManual)
		
		set blnUpdateGrid = ((YFORM="FINGLBankReconCompleted") || (YFORM="FINGLBankReconMatched"))
		
		set arrGrid = ""
		if blnUpdateGrid $$$GRIDGetContents(.arrGrid,YFORM)
		
		do GetManualArray^FINGLBankReconManualMatch(idBankRecon,$$$MATCHCACHE,idMatch,.arrMatches)
 		
		do CompleteMeAndMyChildren(idBankRecon,.arrMatches,.arrGrid,$$$NO,blnUpdateGrid)
		
		new YFELD
		
		do RemovePreClearedAndGLAdj(idBankRecon,.arrGrid,.arrMatches)
 		
 		if pblnKill {
	 		set strStatus = $$$Kill($$$MANUALMATCH,idMe)
	 		if $$$ISOK(strStatus) {
				set strStatus = $$BigKill(idBankRecon,idMatch,$$$MATCHCACHE,idMatch)
	 		}
		}
		
		if blnUpdateGrid $$$GRIDSetContents(.arrGrid,$$$NO,YFORM)		
	}
	quit strStatus
	
	
RemovePreClearedAndGLAdj(pidBankRecon,&parrGrid,&parrMatches) 
	;-------------------------------------------------------------------------------
	; Remove any Pre Cleared or GL Adj entries which where created by the CompleteByType
	; and "cleared" by the UncompleteByType
	;
	; Params:
	; pidBankRecon: The id of the bank reconciliation record
	; parrGrid    : The data in the grid
	; parrMatches : The matches that we have done
	;
	; ByRefs:
	; parrGrid
	; parrMatches
	;
	; Returns:
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: parrGrid rather than pobjGrid
	; 18-Oct-2006	JW		SR15134: Look at kill status. Note - not used.
	; 22-Jun-2006	RPW		SR14461: Commented
	; 08-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new intCache,idClass,objData,strStatus,idRow,strClass,idCache,idManual
	
	set intCache = ""
	for {
		set intCache = $order(parrMatches(intCache),-1)
		quit:intCache=""
		
		set idCache = parrMatches(intCache)
		set objData = $$$DATA($$$MATCHCACHE,idCache)
		
		set strClass = $$$FINGLBankReconMatchCacheClassType(objData)
		if strClass="FINGLBankReconPreCleared" {
			set idClass = $$$FINGLBankReconMatchCacheClassId(objData)
			set objData = $$$DATA(strClass,idClass)
			
			if $$$FINGLBankReconPreClearedClearedHere(objData) {
				set $$$FINGLBankReconPreClearedClearedHere(objData)=$$$ANNO
				set strStatus = $$$Save(strClass,idClass,objData,$$$YES)
				set idManual  = $$FindManualMatchId^FINGLBankReconManualMatch(pidBankRecon,strClass,idClass)
				set strStatus = $$$Kill($$$MANUALMATCH,idManual)
				do BigKill(pidBankRecon,idCache,strClass,idClass,.parrGrid)
			}
			
		} elseif strClass="FINGLBankReconLine" {
			set idClass   = $$$FINGLBankReconMatchCacheClassId(objData)
			set objData   = $$$DATA(strClass,idClass)
			set idManual  = $$FindManualMatchId^FINGLBankReconManualMatch(pidBankRecon,strClass,idClass)
			set strStatus = $$$Kill($$$MANUALMATCH,idManual)
			do BigKill(pidBankRecon,idCache,strClass,idClass,.parrGrid)
		}
	}
	quit
	
	
BigKill(pidBankRecon,pidForGrid,pstrClass,pidClass,&parrGrid) 
	;-------------------------------------------------------------------------------
	; Remove Manual Match or Completed records from the grid, otherwise kill the MatchCache
	; record completed, this is for PreCleared and GL Adj. The kill the actual record.
	;
	; Params:
	; pidBankRecon: The id of the bank reconciliation record
	; pidForGrid  : The data in the grid
	; pstrClass   : The class of the object
	; pidClass    : The id of the object
	; parrGrid    : The grid data
	;
	; ByRefs:
	; parrGrid
	;
	; Returns:
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: parrGrid rather than pobjGrid
	; 18-Oct-2006	JW		SR15134: Look at kill status. Return status.
	; 30-Jun-2006	RPW		SR14461
	; 28-Jun-2006	RPW		SR14461: Do not do the grid work, no longer needed
	; 22-Jun-2006	RPW		SR14461: Commented
	; 07-Mar-2006	RPW		SR13305: Created
	;-------------------------------------------------------------------------------
	new idRow,idGrid,strStatus
	
	set idGrid = $$$KEY2(pidForGrid)
	set idRow  = $$ReferenceRow^COMGridEdit31Interface(YFORM,idGrid)
	if (idRow="") && (YFORM="FINGLBankReconMatchCache") set idRow = idGrid
	if idRow'="" {
		kill parrGrid(pidBankRecon,idGrid)
		do KILLEDRECORDSet^COMGridEdit31Globals(YFORM,idRow)
	}
	
	set strStatus = $$$Kill($$$MATCHCACHE,pidForGrid)
	if $$$ISOK(strStatus) {
		set strStatus = $$$Kill(pstrClass,pidClass)
	}
	quit strStatus
	
	
GetCacheId(pidBankRecon,pidManual) 
	;-------------------------------------------------------------------------------
	; Returns the Cache Id of the Manual Match entry.
	;
	; Params:
	; pidBankRecon: The id of the bank reconciliation record
	; pidManual   : The id of the manual match cache.
	; 
	; ByRefs:
	;
	; Returns:
	; The id of the cache item pointed to by the manual match class
	;
	; History:
	; 22-Jun-2006	RPW		SR14461: Commented
	; 08-Mar-2006	JW		SR13305: Created
	;-------------------------------------------------------------------------------
	new objManual
	
	set objManual = $get(^FINGLBankReconManualMatch(0,pidBankRecon,pidManual,1))
	quit $$$KEY2($$$FINGLBankReconManualMatchClassId(objManual))
	
	
UpdateMatchCache(pidBankRecon,pstrForm,pidObject,pdteTransaction,pstrReference)
	;-------------------------------------------------------------------------------
	; Update the Match Cache entry when the progenitors date or reference are modified
	;
	; Params:
	; pidBankRecon   : The id of the bank reconciliation record
	; pstrForm       : The type of item being updated
	; pidObject      : The id of the item being updated
	; pdteTransaction: The new date
	; pstrReference  : The new reference
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 27-Apr-2006	RPW		SR14459: Created
	;-------------------------------------------------------------------------------
	new idCache,objCache,strStatus
 
	do FindManualMatchId^FINGLBankReconManualMatch(pidBankRecon,pstrForm,pidObject,.idCache)
 
	if $$$KEY2(idCache)'="" {
		set objCache = $$$DATA($$$MATCHCACHE,idCache)
		set $$$FINGLBankReconMatchCacheRef(objCache)   = pstrReference
		set $$$FINGLBankReconMatchCacheDate1(objCache) = pdteTransaction
		
		set strStatus = $$$Save($$$MATCHCACHE,idCache,objCache,$$$YES)
	}
	quit
	
]]></Routine>
</Export>