<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPHCBatchLineDetails" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPHCBatchLineDetails ;AP Invoice Transaction Health Check
	#Include FINHC

Verify(StartDate="",EndDate="",Location="",Level="",Result)
    ;-------------------------------------------------------------------------------
    ; Check that the different types of FINAPInvoiceTran have correct values in the
    ; Parameters,Source and Reference Fields.
    ;
    ; Returns:
    ;
    ; History:
    ; 24-May-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
	new strStatus,idBatch,idLine,objFININTBatchLine,strInterfaceTypes
	new strInterfaceType
	
	if $get(Y)="" d ^WWWVAR
	set strStatus=$$$OK
	kill Result

	set strInterfaceTypes=$$GetInterfaceTypes^FINARHCInvoice("AP")
	
	set idBatch=""
	for {
		set idBatch=$order(^FININTBatchLine(0,idBatch))
		quit:idBatch=""
		
		set idLine=""
		for {
			set idLine=$order(^FININTBatchLine(0,idBatch,idLine))
			quit:idLine=""
			
			set objFININTBatchLine=$get(^FININTBatchLine(0,idBatch,idLine,1))
			set strInterfaceType=$$$FININTBatchLineInterfaceType(objFININTBatchLine)
			if strInterfaceTypes[(YKOMMA_strInterfaceType_YKOMMA) {
				set strStatus=strStatus&&$$CheckDetails(idBatch,idLine,strInterfaceType,.Result)
			}
		}
	}
	
	if strStatus=$$$OK {
		set strStatus=2  ; Because this is a Standalone Check return 2 if Ok
	}
	quit strStatus
	
	
CheckDetails(pidBatch,pidLine,pstrInterfaceType,Result)
    ;-------------------------------------------------------------------------------
    ; Check that the Reference structure matches the Interface Type Definition
    ;
    ; Returns:
    ;
    ; History:
	; 12-Aug-2004	GRF		ALWAYS macro
    ; 11-Jun-2004	shobby	strObject may not have been defined.
    ; 24-May-2004	Shobby	Created
    ;-------------------------------------------------------------------------------
	new strStatus,strParameters,strSource,strReference,objFININTBatchLine
	new idAdjustment,idAdjustmentLine,strObject,objFINAPADJLine
	new idADJSupplier,idADJInvoice
	new idFINAPInvoiceTranSupplier,idFINAPInvoiceTranInvoice
	new objFININTInterfaceType
	new idParametersSupplier,idParametersInvoice
	
	set strStatus = $$$OK
	
	set objFININTBatchLine= $get(^FININTBatchLine(0,pidBatch,pidLine,1))
	set strReference      = $$$FININTBatchLineReference(objFININTBatchLine)
	set strSource         = $$$FININTBatchLineSource(objFININTBatchLine)
	set strParameters     = $$$FININTBatchLineParameters(objFININTBatchLine)

	if $$$ALWAYS { ;pstrInterfaceType="APADJ" {
		; Reference
		set idFINAPInvoiceTranSupplier = $order(^FINAPInvoiceTrans(0,2,pidBatch,pidLine,""))    ; FIXME $$$Index
		set strObject="^FININTBatchLine("_0_YKOMMA_pidBatch_YKOMMA_pidLine_YKOMMA_"1).  "
		if idFINAPInvoiceTranSupplier'="" {
			set idFINAPInvoiceTranInvoice=$order(^FINAPInvoiceTrans(0,2,pidBatch,pidLine,idFINAPInvoiceTranSupplier,""))
			if idFINAPInvoiceTranSupplier'=strReference {
				set Result("Hash",$$$ErrorNo(Result("Errors")))=strObject_"Reference='"_strReference_"' does not match Supplier='"_idFINAPInvoiceTranSupplier_"'"
			}
		}
		; Source
		if pstrInterfaceType="APADJ" {
			set idAdjustment=$piece(strSource,YKOMMA,1)
			if idAdjustment="" set idAdjustment=" "
			set idAdjustmentLine=$piece(strSource,YKOMMA,2)
			if idAdjustmentLine="" set idAdjustmentLine=" "
			set objFINAPADJLine=$get(^FINAPADJLine(0,idAdjustment,idAdjustmentLine,1))
			set idADJSupplier=$$$FINAPADJLineSupplier(objFINAPADJLine)
			set idADJInvoice=$$$FINAPADJLineRef(objFINAPADJLine)
			if (idADJSupplier'=idFINAPInvoiceTranSupplier)||(idADJInvoice'=idFINAPInvoiceTranInvoice)||($length(strSource,YKOMMA)'=2) {
				set Result("Hash",$$$ErrorNo(Result("Errors")))=strObject_"Source='"_strSource_"' should be a two part key referring to a FINAPADJLine."		
			}
		} elseif pstrInterfaceType="APC" {
			if strSource'=$piece(strParameters,YKOMMA,2) {
				set Result("Hash",$$$ErrorNo(Result("Errors")))=strObject_"Source='"_strSource_"' should be the Supplier("_$piece(strParameters,YKOMMA,2)_"."
			}
		} elseif pstrInterfaceType="APP" {
			if $length(strSource,YKOMMA)'=2 {
				set Result("Hash",$$$ErrorNo(Result("Errors")))=strObject_"Source='"_strSource_"' should be a two part key referring to a FINAPBankLine."		
			}
		}
		;Parameters
		set objFININTInterfaceType=$get(^FININTInterfaceType(0,pstrInterfaceType,1))
		if $length($$$FININTInterfaceTypeParameters(objFININTInterfaceType),YKOMMA)'=$length(strParameters,YKOMMA) {
			set Result("Hash",$$$ErrorNo(Result("Errors")))=strObject_"Parameters='"_strParameters_"' should be a "_$length($$$FININTInterfaceTypeParameters(objFININTInterfaceType),YKOMMA)_" part key matching the Parameters column in the Interface Type screen for '"_pstrInterfaceType_"' ("_$$$FININTInterfaceTypeParameters(objFININTInterfaceType)_")."
		}
		if idFINAPInvoiceTranSupplier'="" {
			set idParametersSupplier=$piece(strParameters,YKOMMA,1)
			set idParametersInvoice=$piece(strParameters,YKOMMA,2)
			if (idParametersSupplier'=idFINAPInvoiceTranSupplier)||(idParametersInvoice'=idFINAPInvoiceTranInvoice) {
				set Result("Hash",$$$ErrorNo(Result("Errors")))=strObject_"First two parts of Parameters='"_$piece(strParameters,YKOMMA,1,2)_"' should match with ^FINAPInvoiceTran(0"_YKOMMA_idFINAPInvoiceTranSupplier_YKOMMA_idFINAPInvoiceTranInvoice_YKOMMA_"1)."		
			}
		}
	}	
	quit strStatus

FixBatchLines()
    ;-------------------------------------------------------------------------------
    ; Fix AP type batch lines with incorrect Parameters, Source or Reference.
    ;
    ; Returns:
    ;
    ; History:
    ; 24-May-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
	new idBatch,idLine,objFININTBatchLine,strInterfaceType,strParameters,strSource
	new blnSave,strReference,strInterfaceTypes,strParametersAPC,strStatus
	new idSupplier,idInvoice
	
	if $get(Y)="" d ^WWWVAR
	set idBatch=""
	set strInterfaceTypes=$$GetInterfaceTypes^FINARHCInvoice("AP")
	for {
		set idBatch=$order(^FININTBatchLine(0,idBatch))
		quit:idBatch=""
		
		set idLine=""
		for {
			set blnSave=$$$NO
			set idLine=$order(^FININTBatchLine(0,idBatch,idLine))
			quit:idLine=""
			
			set objFININTBatchLine=$get(^FININTBatchLine(0,idBatch,idLine,1))
			set strInterfaceType=$$$FININTBatchLineInterfaceType(objFININTBatchLine)
			if strInterfaceTypes[(YKOMMA_strInterfaceType_YKOMMA) {
				set strParameters=$$$FININTBatchLineParameters(objFININTBatchLine)
				set strSource=$$$FININTBatchLineSource(objFININTBatchLine)
				set strReference=$$$FININTBatchLineReference(objFININTBatchLine)
				if strInterfaceType="APP" {
	;				if $length(strParameters,YKOMMA)>2 {
	;					set $$$FININTBatchLineParameters(objFININTBatchLine)=$piece(strParameters,YKOMMA,1,2)
	;					set blnSave=$$$YES
	;				}
					;if $length(strSource,YKOMMA)=1 {
					;	if $get(^FININTSale(0,strSource,"SaleID"))'=strSource {
					;		if $data(^FINARBank(0,strSource,1))'=0 {
					;			if $order(^FINARBankLine(0,strSource,""),-1)=1 {
					;				set $$$FININTBatchLineSource(objFININTBatchLine)=strSource_YKOMMA_"1"
					;				set blnSave=$$$YES
					;			}
					;		}
					;	}
					;}
				} elseif strInterfaceType="APADJ" {
					if $length(strReference,YKOMMA)=2 {
						set $$$FININTBatchLineSource(objFININTBatchLine)=strReference
						set blnSave=$$$YES
					}
				} elseif strInterfaceType="APC" {
					;if $get(^FININTSale(0,strSource,"SaleID"))=strSource {
					;	set strParametersAPC=$get(^FININTSale(0,strSource,"Supplier"))_YKOMMA
					;	set strParametersAPC=strParametersAPC_$get(^FININTSale(0,strSource,"Invoice Number"))_YKOMMA
					;	set strParametersAPC=strParametersAPC_$get(^FININTSale(0,strSource,"DueDate"))_YKOMMA
					;	set strParametersAPC=strParametersAPC_$get(^FININTSale(0,strSource,"Settlement Discount"))_YKOMMA
					;	set strParametersAPC=strParametersAPC_$get(^FININTSale(0,strSource,"Date"))
					;	if strParameters'=strParametersAPC {
					;		set $$$FININTBatchLineParameters(objFININTBatchLine)=strParametersAPC
					;		set blnSave=$$$YES
					;	}
					;}
				}
				if strReference'=$piece(strParameters,YKOMMA,1) {
					set $$$FININTBatchLineReference(objFININTBatchLine)=$piece(strParameters,YKOMMA,1)
					set blnSave=$$$YES
				}
				set idSupplier=$order(^FINAPInvoiceTrans(0,2,idBatch,idLine,""))   ; FIXME : $$$Index
				if idSupplier'="" {
					set idInvoice=$order(^FINAPInvoiceTrans(0,2,idBatch,idLine,idSupplier,""))
					if idInvoice'="" {
						if $piece(strParameters,YKOMMA,1,2)'=idSupplier_YKOMMA_idInvoice {
							set $piece(strParameters,YKOMMA,1,2)=idSupplier_YKOMMA_idInvoice
							set $$$FININTBatchLineParameters(objFININTBatchLine)=strParameters
							set blnSave=$$$YES
						}
					}
				}
				if blnSave {
					set strStatus = $$$Save("FININTBatchLine",idBatch_YKOMMA_idLine,objFININTBatchLine,$$$YES)
				}
			}
		}
	}
	quit
	
]]></Routine>
</Export>