<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31Excel" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMGridEdit31Excel
	
#include COMSYS
#def1arg WWWDATEN(%args)	^WWWDATEN(0,+$h,YUSER,YFORM,"V",%args)
	
ExportToExcel()
	;-------------------------------------------------------------------------------
	; Exports the contents of the current grid to Excel
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 16-Sep-2008	GRF		SR15920: Don't proceed if no lines on grid
	; 25-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	if $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","ROWCOUNT")) {         ; SR15920
		do WindowPrint^COMViewPrint($$$EnumDisplayTypeExcel,"Output^COMGridEdit31Excel(.objOutput)")
	}
	quit $$$OK
	
	
Output(&pobjOutput)
	;-------------------------------------------------------------------------------
	; Populates pobjOutput with the contents of the current on screen grid.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 10-Apr-2013	shobby	IPIRANGA-103.1: Leave room to additional keys on expanded lines.
	; 23-Mar-2013	shobby	IPIRANGA-103: Include expanded lines in the spreadsheet
	; 18-Nov-2009 	SCR		SR16929 Added strNull
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
 	new idData,intOrder,objData,strLine,strNull,strOrder,strOS,strPrevIO,intKeys
 	
	set strNull = $$NullDevice^COMUtilStr()
 	
	quit:$get(YFORM)=""
	quit:$get(YUSER)=""
	
	;SESDF-952 vvvvv
	if (+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1)))) && (YFORM = "VARAlertaLocalLinha"){
		set ^CacheTemp(YUSER,"Grid","Exporting") = $$$YES
	}
	;^^^^^
	
	;Suppress the screen output which would normally happen when this routine is being used
	;to populate the grid.
	set strPrevIO=$IO
	open strNull:"W"
	use strNull
	
	do BODYADDROWS^COMGridEdit31Body(1,0,999999,9999999) ;Populate WWWDATEN with all data.
	use strPrevIO
	close strNull
	do pobjOutput.WriteLine("<tr>")
 
	set strLine = $$GetHeaderKeys(YFORM)
	set intKeys=$length(strLine,Y)
	set strLine = strLine_Y_$$GetHeaderFields(YFORM)
	do pobjOutput.WriteLine($$OutputLine(.pobjOutput,strLine," class='header'")_"</tr>")
	
	do GetData(.objData,intKeys)
	do GetDataExpand(.objDataExpand,YFORM,intKeys)  ;IPIRANGA-103
	do SortData(.objData,.objDataExpand)	;IPIRANGA-103
	do OutputData(.pobjOutput,.objData)
	
	;SESDF-952 vvvvv
	if (+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1)))) && (YFORM = "VARAlertaLocalLinha"){
		set ^CacheTemp(YUSER,"Grid","Exporting") = $$$NO
	}
	;^^^^^
	
	quit


SortData(pobjData,pobjDataExpand)
	;-------------------------------------------------------------------------------
	; Sorts the data lines and expanded data lines
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 10-Apr-2013	shobby	IPIRANGA-103.1: Don't combine extra expanded keys as a single cell
	; 04-Apr-2013	shobby	HEVA-926:	  Fix bug that prevented data showing when there are no
	;									  Expaned lines.
	; 23-Mar-2013	shobby	IPIRANGA-103: Created
	;-------------------------------------------------------------------------------
 	new objSortedData,intKeys,idData,idDataExpand,strKeys,intExpand,idDataSorted,objFormat

	if $data(pobjDataExpand) {
		set intKeys=$order(^WWW002(0,$$$GetClass(YFORM),""),-1) ;$$NumberOfKeys^WWW002($$$GetClass(YFORM))
		set idData="" for { set idData=$order(pobjData(idData)) quit:idData=""
			set objSortedData(idData)=pobjData(idData)
			set strKeys=$piece(pobjData(idData),Y,1,intKeys)
			set intExpand=0
			set idDataExpand="" for { set idDataExpand=$order(pobjDataExpand(idDataExpand)) quit:idDataExpand=""
				if $piece(pobjDataExpand(idDataExpand),Y,1,intKeys)=strKeys {
					set intExpand=intExpand+1
					set idDataSorted=idData+(intExpand/1000+0)
					;set objSortedData(idDataSorted)=strKeys_"&nbsp;"_$piece(pobjDataExpand(idDataExpand),Y,intKeys+1,99999)
					set objSortedData(idDataSorted)=pobjDataExpand(idDataExpand)_"."
					set objFormat(idDataSorted)="X"
				}
			}
		}
	} else {							;HEVA-926
		merge objSortedData=pobjData	;HEVA-926
	}
	kill pobjData
	merge pobjData(1)=objSortedData
	merge pobjData(2)=objFormat
	quit  
 
OutputData(&pobjOutput,pobjData)
	;-------------------------------------------------------------------------------
	; Writes the collected lines into Excel
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 23-Mar-2013	shobby	IPIRANGA-103: Additional formatting if displaying expanded lines.
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new idData,strLine,strFormat
	
	set idData = ""
	for {
		set idData = $order(pobjData(1,idData))
		quit:idData=""
		
		set strLine = $$OutputLine(.pobjOutput,pobjData(1,idData),"")
		set strFormat = "<tr"
		if $data(pobjData(2)) {
			if $get(pobjData(2,idData))="X" {
				set strFormat=strFormat_" style='mso-outline-level:1;' "
			} else {
				set strFormat=strFormat_" style='background-color:lightgrey; font-weight:bold;' "
			}
		}
		set strFormat = strFormat_">"
		do pobjOutput.WriteLine(strFormat_strLine_"</tr>")
	}
	quit
	
 
GetData(&pobjData,pintKeys)
	;-------------------------------------------------------------------------------
	; Retrieves the data from WWWDATEN, translates it and puts in an array to display
	; in the grid.
	;
	; Called By: Output^COMGridEdit31Excel
	; 
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 21-Aug-2014	FrankF	
	; 10-Apr-2013	shobby	IPIRANGA-103.1: Leave room to additional keys on expanded lines.
	; 07-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls; & for argument
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 06-Nov-2009	shobby	SR16981: Call out to find relationships.
    ; 03-Jun-2008	GRF		SR15739: Revisions to GetNextDisplayLine moved to new
    ;							routine; parameter changes from $order direction to
    ;							pblnReverse (1=>$$$NO, -1=>$$$YES)
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new idxOrder,intOrder,strKey,intPieces,strOrder,strData,objWWW122,intInputType,intPos
	new intKeys,arrInputTypes,objWWW121,intColumnSplit
	set strOrder = $$GetColumnOrder(YFORM)
	set intOrder = 0
	set idxOrder = ""
	for {
		set idxOrder = $$GetNextDisplayLine^COMGridEdit31Body2(idxOrder,$$$NO)
		quit:idxOrder=""
 
		set strKey   = $$$WWWDATEN("REFERENCEKEY",idxOrder,1)
		set intOrder = intOrder+1
		for intPieces=1:1:pintKeys { ;Leave space for expanded keys
			set strData=$translate($piece(strKey,",",intPieces),"""")
			set strData=$$GetRelationKey(YFORM,intPieces,strData) ;IPIRANGA-103.1
			
			set strData = $$checkAndTranslateDateForKeyField(YFORM, intPieces, strData)
			set $piece(pobjData(intOrder),Y,intPieces) = strData
		}
		set intColumnSplit = 0
		for intPieces=1:1:$length(strOrder,Y) {
			set intPos  = $piece(strOrder,Y,intPieces)
			set strData = $get($$$WWWDATEN("Y"_idxOrder_"_"_intPos,1))
			set intPos  = $piece(strOrder,Y,intPieces)
			if '$data(arrInputTypes(intPos)) {
				set objWWW122    = $$Get^WWW122(YFORM,intPos)
				set intInputType = $$$WWW122InputType(objWWW122)
				set arrInputTypes(intPos) = intInputType ; Cache the input type
			}
			set intInputType = $get(arrInputTypes(intPos))
			set strData      = $$GetLiteral^WWWTR(intInputType,strData)
			
			if ($$forceExcelTextCellFormat(strData, intInputType)) {
				
 				set strData = "="""_strData_"""" ;data being misinterpreted by MSExcel as a date.
			}
			set strData = $$GetRelation(YFORM,intPos,strData,"D")

			if ($$IsSplitColumnForIpiranga(strData)) {
				set $piece(pobjData(intOrder),Y,intPieces+pintKeys+intColumnSplit) = $piece(strData,"|",1)
				set intColumnSplit = $increment(intColumnSplit)
				set $piece(pobjData(intOrder),Y,intPieces+pintKeys+intColumnSplit) = $piece(strData,"|",2)
				
			} else {
				set $piece(pobjData(intOrder),Y,intPieces+pintKeys+intColumnSplit) = strData
			}
		}
	}
	quit
	
checkAndTranslateDateForKeyField(pidForm, pintFormKeyNumber, pstrData)

	new idClass, objWWW121, intClassKeyNumber, objWWW002, intInputType	
	quit:pstrData="" pstrData
	
	set objWWW121 = $$Get^WWW121(pidForm, pintFormKeyNumber)	
	quit:objWWW121="" pstrData
	
	set intClassKeyNumber = $$$WWW121RowPosition(objWWW121)		
	quit:intClassKeyNumber="" pstrData

	set idClass = $$ClassUsedInForm^WWW120(pidForm)
	set objWWW002 = $get(^WWW002(0,idClass,intClassKeyNumber,1))
	set intInputType = $$$WWW002InputType(objWWW002)
	
	if (intInputType = 1) { // Date type
		quit $$^WWWDATE(pstrData)
	}
	
	quit pstrData
	
	
forceExcelTextCellFormat(pstrData, pintInputType)

	new flag
	
	set flag = $$hasSpecialCharacter(pstrData, pintInputType) && 
			   ($length(pstrData)<20) && 
			   '$$isDataOrTime(pintInputType) && 
			   ($translate(strData,"-/.")=+$translate(strData,"-/."))

	quit flag
	
	
hasSpecialCharacter(pstrData, pintInputType)

	new flag
	
	set flag = ($find(pstrData,"/") || 
			   ($$isMemoOrText(pintInputType) && ($find(strData,"-") || $find(strData,"."))))
			   
	quit flag
	

isDataOrTime(pintInputType)

	quit (pintInputType = 1) || (pintInputType = 7)
	
	
isMemoOrText(pintInputType)

	quit (pintInputType = 3) || (pintInputType = 6)
	

GetRelationKey(YFORM,YBBN,pstrData="")
	;-------------------------------------------------------------------------------
	; Gets the relation of primary keys
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 10-Apr-2013	shobby	IPIRANGA-103.1: Created
	;-------------------------------------------------------------------------------
	new objWWW121
	
	set objWWW121=$$Get^WWW121(YFORM,YBBN)

	set pstrData=$$GetRelation(YFORM,YBBN,pstrData,"P")
	if $$$WWW121TypeOfAcquisition(objWWW121)=6 {
		if pstrData'=+pstrData {
			if $translate($j(+pstrData,$length(pstrData))," ",0)=pstrData {
				; leading zeros
				if ('$$IsColumnPoloOrBaseForIpiranga(YFORM,YBBN)) {
					set pstrData="="""_pstrData_""""
				}
			}
		}
	}
	quit pstrData
	
	
GetDataExpand(&pobjData,YFORM,pintKeys)
	;-------------------------------------------------------------------------------
	; Gets the expanded line data.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 23-Mar-2013	shobby	IPIRANGA-103: Created
	;-------------------------------------------------------------------------------
	new lstLinks,loop,strLink

	set lstLinks = $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","LINKS"))
	for loop=1:1:$length(lstLinks,$$$SEMICOLON) {
		set strLink = $piece(lstLinks,$$$SEMICOLON,loop)
		if strLink'="" {
			set YFORM=strLink
			do GetData(.pobjData,pintKeys)
		}
	}
	quit		

	
GetColumnOrder(pYFORM)
	;-------------------------------------------------------------------------------
	; Determines the display column order.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new strOrder,objWWW122,intOrder,intFormField,strNewOrder,blnHidden
	
	set strNewOrder=""
	set strOrder=$$GetColumnOrder^COMGridEdit31Body(pYFORM)
	for intOrder=1:1:$length(strOrder,",") {
		set intFormField=$piece(strOrder,",",intOrder)
		set objWWW122=$$Get^WWW122(YFORM,intFormField)
		set blnHidden = (($$$WWW122DataInputType(objWWW122)=15) || '$$ShowCell^COMGridEdit31Body(YFORM,intFormField))
		if 'blnHidden {
			set strNewOrder=strNewOrder_intFormField_Y
		}
	}
	if strNewOrder'="" set strNewOrder=$piece(strNewOrder,Y,1,$length(strNewOrder,Y)-1)
	quit strNewOrder
 
GetHeaderFields(pYFORM)
	;-------------------------------------------------------------------------------
	; Prepare a list of Data Fields
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new strOrder,strLine,blnHidden,intOrder,objWWW122,intClassField,strType,intFormField,intField,strColumnName
	
	set strLine=""
	;Data Fields Order
	set strOrder=$$GetColumnOrder^COMGridEdit31Body(pYFORM)
	for intOrder=1:1:$length(strOrder,",") {
		set intFormField=$piece(strOrder,",",intOrder)
		set objWWW122=$$Get^WWW122(pYFORM,intFormField)
		
		set blnHidden = (($$$WWW122DataInputType(objWWW122)=15) || '$$ShowCell^COMGridEdit31Body(pYFORM,intFormField))
		if 'blnHidden {
			set intClassField=$$$WWW122SequenceNumber(objWWW122)
			if intClassField="" {
				set strType="M"
				set intField=intFormField
			} else {
				set strType="D"
				set intField=intClassField
			}
			set strColumnName = $$^WWWFELDNAME(pYFORM,strType,intField)
			
			if ($$IsSplitColumnForIpiranga(strColumnName)) {
				set strColumnName = $$SplitColumnForIpiranga(strColumnName)
			}
			
			set strLine=strLine_strColumnName_Y			
		}
	}
	if strLine'="" set strLine=$piece(strLine,Y,1,$length(strLine,Y)-1)
	quit strLine

SplitColumnForIpiranga(pstrName)

	new column1, column2

	set column1 = $extract(pstrName,0,$find(pstrName,"|")-2) _ ")"
	set column2 = $extract(pstrName,0,$find(pstrName,"(")-1) _ $extract(pstrName,$find(pstrName,"|"),$length(pstrName))

	quit column1_Y_column2

IsSplitColumnForIpiranga(pcolumnValue)

	quit ($$IsIpiranga() && ((YFORM = "VARIPPPlanoSuprimentoPolo") || (YFORM = "VARIPPPlanoSuprimentoBase")) && $find(pcolumnValue,"|"))

IsColumnPoloOrBaseForIpiranga(pform, pkeyNumber)

	quit ($$IsIpiranga() && ((YFORM = "VARIPPPlanoSuprimentoPolo") || (YFORM = "VARIPPPlanoSuprimentoBase")) && ((pkeyNumber = 3) || (pkeyNumber = 4)))
	
IsIpiranga()

	quit +$$$WWWClientParamCoreChangesIPIRANGA($get(^WWWClientParam(YM,YM,1)))
	
GetHeaderKeys(pYFORM)
	;-------------------------------------------------------------------------------
	; Prepare a list of primary keys
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 10-Apr-2013	shobby	IPIRANGA-103: Consider expanded lines.
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new idKey,strLine,lstLinks,loop
	
	; Assumes for now that only one expanded line and initial keys are the same as first line.
	set lstLinks = $get(^WWWDATEN(0,+$horolog,YUSER,pYFORM,"V","LINKS"))
	set strLink = $piece(lstLinks,$$$SEMICOLON,1)
	if strLink'="" {
		set pYFORM=strLink
	}
		
	set strLine=""
	set idKey=""
	for {
		set idKey=$order(^WWW121(0,pYFORM,idKey))
		quit:idKey=""
		set strLine=strLine_$$^WWWFELDNAME(pYFORM,"P",idKey)_Y
	}
	if strLine'="" set strLine=$piece(strLine,Y,1,$length(strLine,Y)-1)


	quit strLine
 
 
OutputLine(&pobjOutput,pstrLine,pstrFormat)
	;-------------------------------------------------------------------------------
	; Write line to the screen
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 06-Mar-2008	shobby	SRBR014446: Reworked to remove some annoying HTML
	; 							created by the FCKEditor
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new intCell,strLine,strPiece
	
	set strLine = ""
	for intCell=1:1:$length(pstrLine,Y) {
		set strPiece = $piece(pstrLine,Y,intCell)
		if $extract(strPiece,1,3)="<p>" set strPiece = $piece(strPiece,"<p>",2,9999999)
		set strLine = strLine_"<TD"_pstrFormat_">"_strPiece_"</TD>"
	}
	set strLine = $$FullReplace^COMUtilStr(strLine,"<html dir=´ltr´>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"<html dir=""ltr"">","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"<html dir='ltr'>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"<title>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"</title>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"<head>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"</head>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"</html>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"</body>","")
	set strLine = $$FullReplace^COMUtilStr(strLine,"</p>","<br>")
	
	quit strLine
	
	
GetRelation(YFORM,pintField,YTEXT,pblnHideRelationClassIDs=$$$NO,pstrType="D")  ;SR18063
	;-------------------------------------------------------------------------------
	; Wrapper to get field relations.
	; 
	; Called By: GetData^COMGridEdit31Excel
	; 
	; Inputs:	YFORM		(YFORM)
	; 			pintField	(intPos)
	; 			YTEXT		(strData)
	;
	; Returns: modified YTEXT
	;
	; History:
	; 10-Apr-2013	shobby	IPIRANGA-103.1: Also get relations of primary keys using pstrType
	; 20-Jul-2012	shobby	SR18063: Additional parameter to only return the relation part.
	; 06-Nov-2009	shobby	SR16981: Created
	;-------------------------------------------------------------------------------
	new YTXT,YTYP,YLFN,REL,PARA,RELF,SUCH,YLENGTH,YWIDTH,YCOLON,YCOLOFF,YVALIGN
	new YPADDING,YFTYPE,YHEIGHT,YFONT,YFONTSIZE,YHID

	do PARA^COMGridEdit31Body(pstrType,pintField,.YWIDTH,.YVALIGN,.YHEIGHT,.YFONT,.YFONTSIZE,.YTYP,.YFORM,.YLFN,.YTXT,.YDAT) // SR15466

	set YTEXT = $$MiniText^COMGridEdit31F(REL,PARA,YTEXT,.SUCH,RELF,"",RELCF,pblnHideRelationClassIDs)					;SR18063

	quit YTEXT
	
]]></Routine>
</Export>