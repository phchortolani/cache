<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="VARCSPUtils" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VARCSPUtils
#include COMSYS
#include VARConst
#include MEDConst
#include INConst
#include WWWConst
#define RemoveAcentos(%obj) $$SQLGetTextoSemAcento^VARSQL(%obj)

VerifySession(YBED, YUSER, RedirectURL)

	new objSession, strStatus
	
	set strStatus = 1
	
	set objSession = ##class(User.WWWUSER).%OpenId(YUSER)
	
	if ($IsObject(objSession)) {
		
		if (objSession.User1 '= YBED){
			set strStatus = 0
		}
		
	}else {
		set strStatus = 0
	}


	quit strStatus
 
VerifyUserSession(YBED)
	;Autenticação
	
	set ipcliente=""
	//Verificando IP do cliente para realizar bypass da autenticação caso seja a sala de situação ip->10.1.1.232
	;if ( $get(%request.CgiEnvs("REMOTE_ADDR")) = "10.85.3.103" ) {
	;	set ipcliente = $get(%request.CgiEnvs("X-Forwarded-For"))
	;}
	;else {
	;	set ipcliente = ""
	;}
	if (ipcliente = "") {
	      set ipcliente = $get(%request.CgiEnvs("REMOTE_ADDR"))
	}
	if (ipcliente = "") {
	 	  set ipcliente = $zutil(67, 15, $job)
	}
	    
	//Verificando se o usuário loggou pelo alphalinc   
	
	if ((YBED="") || (YBED="UNKNOWN")) {
		
		//Buscando ultimo login dessa sessão no Painel para permitir acesso dentro dos ultimos 30 minutos
		
		set lastUse=$get(^CacheTemp("CSPPage",%session.SessionId))
		set redirect=0
		if lastUse="" set redirect=1
		if $piece(lastUse,",",1)'=$piece($H,",",1) {
			set redirect=1
		}else {
			if $piece($H,",",2)-$piece(lastUse,",",2)>1800 set redirect=1
		}
			
		if (redirect=1) {		
			write "<script language='javascript'>"
			write "	 alert('Usuário não está logado ou a sessão expirou.');"
			write "	 window.location.href = 'COMLogin.cls';"
			write "</script",">"
			quit
		}
	}
	set ^CacheTemp("CSPPage",%session.SessionId)=$H
	
	quit
	
authBirdID(username,password)
	set servercess = $piece($GET(^VARCESS(YM,YM,1)),Y,1)
	set portcess = $piece($GET(^VARCESS(YM,YM,1)),Y,2)
	set auth = "Basic "_$system.Encryption.Base64Encode(username_":"_password)
	;
	; Chama o servidor CESS para assinatura do documento
	Set httprequest=##class(%Net.HttpRequest).%New()
	set httprequest.Server=servercess
	set httprequest.Port=portcess
	do httprequest.AuthorizationSet(auth)
	do httprequest.ContentTypeSet("application/json")
	Do httprequest.SetHeader("Accept","application/json")
	Do httprequest.SetHeader("VCSchemaCfg","returnAccessToken=true;lifetime=2592000;autoRevoke=false")
	set corpo = {}
	do corpo.%Set("type","PDFSignature")
	do corpo.%Set("hash_algorithm","SHA256")
	do corpo.%Set("mode","async")
	set signatureSett = []
	set sig = {}
	do sig.%Set("id","default")
	do sig.%Set("reason","Assinatura Eletronica")
	do sig.%Set("visible_signature",0)
	do signatureSett.%Push(sig)
	do corpo.%Set("signature_settings",signatureSett)
	;
	set extraInfo = []
	set extras = {}
	do extras.%Set("name","2.16.76.1.12.1.2")
	do extras.%Set("value","paciente")
	do extraInfo.%Push(extras)
	do corpo.%Set("extraInfo",extraInfo)
	do corpo.%Set("documents_source","UPLOAD_REFERENCE")
	do httprequest.EntityBody.Write(corpo.%ToJSON())
	set tSc = httprequest.Post("signature-service") ; Aqui pode ser get, put, post, ...
	if $$$ISERR(tSc) quit "0~Servidor de assinaturas está indisponível"
	set token = httprequest.HttpResponse.GetHeader("VCSCHEMADATA")
	set result = ""
	set obj = [].%FromJSON(httprequest.HttpResponse.Data.Read())
	if obj.status=401 quit "0~Senha Inválida"
	if obj.status'="" quit "0~Erro na autorização"
	set token = $piece(token,";",1)
	kill ^mtemp.CESSTOKENS(YBED)
	set ^mtemp.CESSTOKENS(YBED,YUSER) = $system.Encryption.Base64Encode(token)
	set:$get(YBED)'="" ret = $$$Save("VARUserBirdID",YBED,username,1)
	quit "1~Autenticado com sucesso"

getBirdID(YBED,YUSER)
	;
    set usaBirdID=""
    if YBED'=""{
	    set usaBirdID = $$$WWW013PossuiBirdID($get(^WWW013(YM,YBED,1)))
    }
    if usaBirdID'=1 quit "0"
	quit $get(^mtemp.CESSTOKENS(YBED,YUSER))_"~"_$get(^VARUserBirdID(0,YBED,1))

revokeBirdID(YBED,YUSER)
	;
	kill ^mtemp.CESSTOKENS(YBED,YUSER)
	quit 1
	
signaturePDF(reportName, arquivo, imgSignature, pGravarBird = "")
	;
	/*
	https://assinaturadigital.iti.gov.br/duvidas/#1587761771301-8f0416f4-c42c
	REFERÊNCIAS

	[1] OID para profissionais (médicos e farmacêuticos)

	2.16.76.1.4.2.2 		Conselho Federal de Medicina
	2.16.76.1.4.2.2.1		Número de registro do profissional
	2.16.76.1.4.2.2.2		UF de registro profissional
	2.16.76.1.4.2.2.3		Especialidade
	2.16.76.1.4.2.3			Conselho Federal de Farmácia
	2.16.76.1.4.2.3.1		Número de registro do profissional
	2.16.76.1.4.2.3.2		UF de registro profissional
	2.16.76.1.4.2.3.3		Especialidade
 
	[2] OID para documentos digitais em saúde
	2.16.76.1.12.1			Documentos Digitais da Saúde
	2.16.76.1.12.1.1		Prescrição de medicamento
	2.16.76.1.12.1.2		Atestado médico
	2.16.76.1.12.1.3		Solicitação de exame
	2.16.76.1.12.1.4		Laudo laboratorial
	2.16.76.1.12.1.5		Sumária de alta
	2.16.76.1.12.1.6		Registro de atendimento clínico
	2.16.76.1.12.1.7		Dispensação de medicamento
	2.16.76.1.12.1.8		Vacinação
	2.16.76.1.12.1.11		Relatório Médico	
	*/
	if '$data(^VARCESSRelatorios(YM,reportName,1)) quit "2~"
	set objConf = $get(^VARCESSRelatorios(YM,reportName,1))
	
	set encoded64 = $system.Encryption.Base64Encode(arquivo,1)
	i $l(encoded64)=0 quit "0~Erro na geração do relatório"
	;
	;
	set nomeArquivo = $$$VARCESSRelatoriosNomedoArquivoGerado(objConf)
	set visivel = $$$VARCESSRelatoriosAssinaturaVisivel(objConf)
	set posiX = $$$VARCESSRelatoriosPosicaoXdaassinatura(objConf)
	set posiY = $$$VARCESSRelatoriosPosicaoYdaassinatura(objConf)
	set width = $$$VARCESSRelatoriosLarguradaassinatura(objConf)
	set height = $$$VARCESSRelatoriosAlturadaassinatura(objConf)
	;
	set posiXImg = $$$VARCESSRelatoriosPosicaoXdaassinaturaAssin(objConf)
	set posiYImg = $$$VARCESSRelatoriosPosicaoYdaassinaturaAssin(objConf)
	set widthImg = $$$VARCESSRelatoriosLarguradaassinaturaAssina(objConf)
	set heightImg = $$$VARCESSRelatoriosAlturadaassinaturaAssinat(objConf)
	;	
	set pagina = $$$VARCESSRelatoriosPaginadaassinatura(objConf)
	set tipoRelatorio = $$$VARCESSRelatoriosTipodeRelatoriodeSaude(objConf)
	if pagina<1 set pagina = -1
	set nomeArquivo = $$$URLENCODE($piece(nomeArquivo,".",1)_".pdf")
	
	// se houver a imagem de assinatura, posiciona o BirdID mais para direita
	// para caber as duas assinaturas
	if reportName="VARReceituario" set posiX = posiX + $S(imgSignature'="":30,1:0)
	
	if reportName="VARPedidoExames" set posiX = posiX + 15
	
	;
	; Envia arquivo para assinatura
	set servercess = $piece($GET(^VARCESS(YM,YM,1)),Y,1)
	set portcess = $piece($GET(^VARCESS(YM,YM,1)),Y,2)
	set bearer = "Bearer "_$system.Encryption.Base64Decode(^mtemp.CESSTOKENS(YBED,YUSER))
	;
    ; Chama o servidor CESS para assinatura do documento
	Set httprequest=##class(%Net.HttpRequest).%New()
	set httprequest.Server=servercess
	set httprequest.Port=portcess
	do httprequest.AuthorizationSet(bearer)
	do httprequest.ContentTypeSet("application/json")
	Do httprequest.SetHeader("Accept","application/json")
	set corpo = {}
	do corpo.%Set("type","PDFSignature")
	do corpo.%Set("hash_algorithm","SHA256")
	do corpo.%Set("auto_fix_document",1)
	do corpo.%Set("mode","sync")
	set signatureSett = []
	set assinatura=""
	set prof = $order(^MEDProviders(YM,1,YBED,""))
#;	LEAN-247 vvv linha comentada
#;	if prof'=""{
#;		; Recupera o caminho de destino da assinatura
#;		set caminhoD = $$GetDiretorioFisico^VARBRDiretorios(0,17)
#;		if $$$isWINDOWS{
#;			if ($extract(caminhoD, $length(caminhoD)) '= "\") {
#;				set caminhoD = caminhoD _ "\"
#;			}
#;		}else{
#;			if ($extract(caminhoD, $length(caminhoD)) '= "/") {
#;				set caminhoD = caminhoD _ "/"
#;			}
#;		}
#;		set caminhoD = caminhoD_prof_".jpg"
#;		if $$$isWINDOWS{
#;			set caminhoD = $replace(caminhoD,"/","\")
#;		}else{
#;			set caminhoD = $replace(caminhoD,"\","/")
#;		}
#;		;
#;		//checa e cria se não houver, o diretorio
#;		if (##class(%File).Exists(caminhoD)) {
#;			Set stream=##class(%Stream.FileBinary).%New()
#;			Set sc=stream.LinkToFile(caminhoD)
#;			set len = 320000
#;			set arquivo = ""
#;			While len>0 {
#;				set arquivo = arquivo_stream.Read(.len)
#;			}	
#;			set ^zzsilmarf = arquivo
#;			if arquivo'=""{
#;				Set assinatura="data:image/png;base64,"_$system.Encryption.Base64Encode(arquivo)
#;			}
#;		}
#;	}
#;	if assinatura'="" {
#;		if posiXImg'="" set posiX = posiXImg
#;		if posiYImg'="" set posiY = posiYImg
#;		if widthImg'="" set width = widthImg
#;		if heightImg'="" set height = heightImg
#;	}
#;	LEAN-247 ^^^
	set sig = {}
	do sig.%Set("id",%session.SessionId)
	;do sig.%Set("contact","123456789")
	;do sig.%Set("location","Sao Paulo-SP")
	;do sig.%Set("reason","Assinatura Eletronica")
	do sig.%Set("visible_signature",+visivel)
	do sig.%Set("visible_sign_x",+posiX)
	do sig.%Set("visible_sign_y",+posiY)
	do sig.%Set("visible_sign_width",+width)
	do sig.%Set("visible_sign_height",+height)
	do sig.%Set("visible_sign_page",+pagina)
	do sig.%Set("visible_sign_img",assinatura)
	if +tipoRelatorio'=0{
		set relatorio = $$$INPARAText($get(^INPARA(YM,"DOCUMENTOSDIGITAISSAUDE",SPRACHE,tipoRelatorio,1)))
		set extraInfo = []
		set info = {}
		do info.%Set("name",tipoRelatorio)
		do info.%Set("value",$$$RemoveAcentos(relatorio))
		do extraInfo.%Push(info)
	}
	if prof'=""{
		set regMedico 	= $get(^MEDProvider(YM,prof,1))
		set licenca		= $$$MEDProviderLicenseNumber(regMedico)
		set uf			= $$$MEDProviderFREE3(regMedico)
		set especialidade	= $$$MEDProviderSpeciality(regMedico)
		if especialidade'="" set especialidade = $$$INPARAText($get(^INPARA(YM,"MEDSPECIALITY",SPRACHE,especialidade,1)))
		;
		set info = {}
		do info.%Set("name","2.16.76.1.4.2.2.1")
		do info.%Set("value",$$$RemoveAcentos(licenca))
		do extraInfo.%Push(info)

		set info = {}
		do info.%Set("name","2.16.76.1.4.2.2.2")
		do info.%Set("value",$$$RemoveAcentos(uf))
		do extraInfo.%Push(info)

		set info = {}
		do info.%Set("name","2.16.76.1.4.2.2.3")
		do info.%Set("value",$$$RemoveAcentos(especialidade))
		do extraInfo.%Push(info)

	}
	;
	do sig.%Set("extraInfo",extraInfo)

	do signatureSett.%Push(sig)
	do corpo.%Set("signature_settings",signatureSett)
	;
	do corpo.%Set("documents_source","DATA_URL")
	set documents = []
	set document = {}
	do document.%Set("id",0)
	do document.%Set("signature_setting","default")
	do document.%Set("original_file_name",nomeArquivo)
	do document.%Set("data","data:application\/pdf;base64,"_encoded64)
	do documents.%Push(document)
	do corpo.%Set("documents",documents)
	do httprequest.EntityBody.Write(corpo.%ToJSON())
	set tSc = httprequest.Post("signature-service") ; Aqui pode ser get, put, post, ...
	if $$$ISERR(tSc) quit "0~Servidor de assinaturas está indisponível"
	set result = ""
	set obj = [].%FromJSON(httprequest.HttpResponse.Data.Read())
	if obj.status=401 {
		kill ^mtemp.CESSTOKENS(YBED,YUSER)		
		quit "2~Token expirado"
	}
	if obj.status'=200 quit "2~Erro na assinatura do documento"
	set document = obj.documents.%Pop()
	set result = document.result
	quit "1~"_result]]></Routine>
</Export>