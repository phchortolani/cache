<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="REPExecute" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
REPExecute
	
#include %occInclude
#include REPConst
#include COMSYS
#include COMConst
#include WWWConst
	
#define ReportName "REPRUN"
#define HTTPOK	   200
#define Append(%1,%2)		set %1 = %1_"&"_(%2)
	
CreateForm(pidReport,pstrFormat="",pidLang="")
    ;-------------------------------------------------------------------------------
    ; Creates an @Net Manager form "on the fly" for the user to input the parameters
    ; for the report.
    ;
    ; Params: pidReport: 	The report id
    ; 		  pstrFormat:	The format to use
    ; 		  pidLang:		The language to use
    ;
    ; ByRefs:
    ; 
    ; Returns: string (the form id)
    ;
    ; History:
    ; 17-Nov-2009	GRF		$$$Save & strStatus throughout
    ; 27-Sep-2007	GRF		SR15603: Macro change
    ; 16-Jan-2007	SteveS	SR15355: Show relational display text
    ; 							Call GetFormHeader
    ; 29-Nov-2005	SteveS	SR13930: Add COMView PopUp Functionality
    ; 21-Nov-2005	SteveS	SR12974: Store pages/output options (email/printer/fax)
    ; 10-Oct-2005	SteveS	SR13651: Store form name for translation tool
    ; 06-Oct-2005	SteveS	SR13625: Call StoreHelpText
    ; 09-Sep-2005	SteveS	SR12483: Only show fields which require prompting
    ; 05-Sep-2005	SteveS	SR13391: Pass in the format
    ; 24-Jun-2005	SteveS	Created SR12738
    ;-------------------------------------------------------------------------------
	new idForm,objReport,strParamString,idParam,objForm,objParam,objField,strLookup
	new strDefault,strValue,objSystem,strRemark,strCodeBeforeRun,strExecCode,strStatus
	new blnFirstParam,idKey,strOutputParam,idx,strPage,blnBatch,strHelpText,objHelpText
	
	//TODO: Consider breaking this routine up, eg, FormHeader, Form Fields, etc.
	//		It's getting a little large!
	
	if ($get(pidReport)'="") {
		set idForm    = ($$$ReportName_YUSER)
		set objReport = $get(^REPReport(0,pidReport,1))
		set objSystem = $get(^REPSystem(0,YM,1))
		set blnBatch  = +$$$REPReportBatch(objReport)
		
		set strParamString = ""
		set idParam = ""
		for {
			set idParam = $order(^REPParameter(0,pidReport,idParam))
			quit:(idParam="")
			
			set objParam = $get(^REPParameter(0,pidReport,idParam,1))
			
			if '($$$REPParameterDoNOTPrompt(objParam)) {
				if $$$REPParameterType(objParam)=2 { ;Yes/No
					set strParamString=strParamString_"+VORG("_idParam_"),"
				} else {
					if $$$REPParameterNovalue(objParam) {
						set strParamString=strParamString_""""","	
					} else {
						set strParamString=strParamString_"VORG("_idParam_"),"
					}
				}
			} else {
				set strDefault=$$$REPParameterDefaultValue(objParam)
				if $extract(strDefault,1)="@" {
					set strValue=""
					xecute "set strValue="_$extract(strDefault,2,$length(strDefault))
					if $$$IsNum(strValue) {
						set strParamString=strParamString_strValue_","
					} else {
						set strParamString=strParamString_$$$DBLQUOTE_strValue_$$$DBLQUOTE_","	
					}	
				} else {
					if $$$IsNum(strDefault) {
						set strParamString=strParamString_strDefault_","
					} else {
						set strParamString=strParamString_$$$DBLQUOTE_strDefault_$$$DBLQUOTE_","
					}	
				}	
			}
		}
		
		if 'blnBatch {
			set idKey=$$GetNextKey^REPParameter(pidReport)
			set strOutputParam=""
			
			for idx=idKey:1:(idKey+3) {
				set strOutputParam=strOutputParam_"OUTPUT("_idx_"),"
			}
			set strOutputParam=$extract(strOutputParam,1,$length(strOutputParam)-1) ;remove last comma
		}
		
		set strParamString = $extract(strParamString,1,$length(strParamString)-1) ;remove last comma
		
		set strRemark="Auto generated at "_$$^WWWDATE(+$h)_" "_$$^WWWTIME($piece($h,",",2))_" by user "_YBED_" for report "_pidReport
		set strCodeBeforeRun=$$$REPReportExecuteBeforeRunning(objReport)
		
		if 'blnBatch {
			set strExecCode="do Execute^REPExecute("""_pidReport_""",$listbuild("_strParamString_"),"""_pstrFormat_""","""_pidLang_""","_strOutputParam_")"
		} else {
			set strExecCode="do CreateBatchJob^REPBatch("""_pidReport_""",$listbuild("_strParamString_"))"
		}
		
		set objForm=""
		
		set $$$WWW120FormHeaderOrImageFile(objForm)		= $$GetFormHeader(pidReport) //SR15355
		set $$$WWW120FormType(objForm)					= 4        ; Manual Input With Button
		
		if strCodeBeforeRun="" {                                   ; SR15603 vvv
			set $$$WWW120ExecuteOnAfterSaveData(objForm) = strExecCode
		} else {
			set $$$WWW120ExecuteOnAfterSaveData(objForm) = strCodeBeforeRun_" if (+$get(Q)=0)&&(+$get(YQ)=0) "_strExecCode
		}
		
		set $$$WWW120InheritCompanyProperties(objForm)	= $$$YES
		set $$$WWW120FormFormatting(objForm)			= 2
		set $$$WWW120ConstantFieldValidating(objForm)	= $$$YES
		set $$$WWW120SaveServerdata(objForm)			= $$$YES
		set $$$WWW120DoNOTDisplayStandardButto(objForm) = "8"
		;set $$$WWW120DoNOTDisplayStandardButto(objForm) = "1;2;4;5;8;9;10;11;12;13;14;15"
		set $$$WWW120Remarks(objForm)					= strRemark
		set $$$WWW120ExecuteAfterDataFields(objForm)	=$$$REPReportExecuteAfterDataFields(objReport) ;SR13930
		set $$$WWW120FirstFocusToDataFieldNumb(objForm) =$$$REPReportFirstFocus(objReport)
		set $$$WWW120ExecuteBeforeButtonline(objForm)	=$$$REPReportExecuteBeforeButtonLine(objReport)
		
		set strStatus = $$$Save("WWW120",idForm,objForm,$$$YES)
		
		set strHelpText=""
		if $data(^REPReportLang(0,pidReport,SPRACHE)) {
			set strHelpText=$$$REPReportLangHelpText($get(^REPReportLang(0,pidReport,SPRACHE,1)))
		} else {
			set strHelpText=$$$REPReportHelpText(objReport)
		}
		
		if $translate(strHelpText,"| ")="" set strHelpText=$$$Text("Com00125") ;No help text available
		
		set objHelpText=""
		set $$$WWW127HelpText(objHelpText)=strHelpText
		
		set strStatus = $$$Save("WWW127",idForm_",M,0,"_SPRACHE,objHelpText,$$$YES)
 		
 		if $$GetNumberOfPrompts^REPReportDef(pidReport)>0 {
	 		set blnFirstParam=$$$YES
			set idParam=""
			for {
				set idParam = $order(^REPParameter(0,pidReport,idParam))
				quit:(idParam="")
				
				set objParam=$get(^REPParameter(0,pidReport,idParam,1))
				continue:$$$REPParameterDoNOTPrompt(objParam)
				
				set objField=""
				
				if '$$$REPParameterCOMViewPopUp(objParam) {
					if blnFirstParam {
						set $$$WWW122NewGroup(objField)				=1 ;New Group
						set $$$WWW122GroupName(objField)			="REP00031" ;Parameter Input
						set blnFirstParam=$$$NO	
					}
				}
				
				set $$$WWW122ManualCaption(objField)          = $$GetCaption^REPParameter(pidReport,idParam,pidLang)
				set $$$WWW122FieldSize(objField)              = +$$$REPParameterSize1(objParam)
				set $$$WWW122ModifiedFieldLength(objField)    = +$$$REPParameterSize1(objParam)
				set $$$WWW122InputInVariable(objField)        = "VORG("_idParam_")"
				set $$$WWW122MandatoryInputItem(objField)     = $$$REPParameterMandatory(objParam)
				set $$$WWW122DisplayOnPageNumber(objField)    = 1 ;First Page
				set $$$WWW122ExecuteOnBlur(objField)          = $$$REPParameterExecuteonblur(objParam)
				set $$$WWW122ExecuteBeforeDataField(objField) = $$$REPParameterExecuteBeforeDataField(objParam)   ; SR15603
				set $$$WWW122ExecuteAfterDataField(objField)  = $$$REPParameterExecuteAfterDataField(objParam)    ; SR15603
				set $$$WWW122DataInputType(objField)          = $$$REPParameterInputType1(objParam)
				set $$$WWW122RowPosition(objField)            = $$$REPParameterRowPosition(objParam)
				set $$$WWW122ColumnPosition(objField)         = $$$REPParameterColumnPosition(objParam)
				
				if ($$$REPParameterUserslastvalue(objParam)&&($data(^CacheTempDefault(YBED,pidReport,idParam)))) {
					set $$$WWW122DefaultVariableInput(objField) = $get(^CacheTempDefault(YBED,pidReport,idParam))	
				} else {
					set $$$WWW122DefaultVariableInput(objField)	= $$$REPParameterDefaultValue(objParam)
				}
				
				set $$$WWW122RelationClass(objField)          = $$$REPParameterRelation(objParam)
				set $$$WWW122RelationalPrimaryKey(objField)   = $$$REPParameterRelationalKey(objParam)
				set $$$WWW122RelationalDataField(objField)    = $$$REPParameterRelationalDisplayItem(objParam) //SR15355
				
				set strLookup=$$$REPParameterLookuptype(objParam)
				
				if $$$REPParameterRelation(objParam)'="" {
					if (strLookup=$$$EnumREPLOOKUPTYPEMagnifyingglass)||(strLookup="") {
						if '$$$REPParameterMultiSelect(objParam) {
							set $$$WWW122RelationDisplayOptions(objField)   = 1  ; Display after input
							set $$$WWW122RelationWithSearchFuncti(objField) = $$$YES
							set $$$WWW122SearchAsFullTextSearch(objField)   = $$$YES
						}
					} else {
						set $$$WWW122RelationDisplayOptions(objField) = 0        ; Display all
					}
					
					if $$$REPParameterMultiSelect(objParam) {
						set $$$WWW122DataInputType(objField)=6	
					}
				} else {
					set $$$WWW122InputType(objField)=$$$REPParameterType(objParam)
				}
				
				if $$$REPParameterMultiSelect(objParam)&&$$$REPParameterCOMViewPopUp(objParam) {
					do AddPopUp(pidReport,idForm,idParam,pidLang)	
				} else {
					set strStatus = $$$Save("WWW122",idForm_","_idParam,objField,$$$YES)
					do AddJS(pidReport,idParam,idForm)
					do StoreHelpText(pidReport,idForm,idParam)
				}
			}
			if 'blnBatch do CreatePage(idForm,1,$$$Text("REP00046"))  ; "Parameters"
 		}
 		
 		if 'blnBatch {
	 		if $$GetNumberOfPrompts^REPReportDef(pidReport)>0 {
		 		set strPage=2	
	 		} else {
		 		set strPage=""	
	 		}
	 		do CreatePage(idForm,strPage,$$$Text("REP00068"))         ; "Output"
	 		do CreateOutputOptions^REPExecuteOutput(pidReport)
	 		do CreateOutputFields^REPExecuteOutput(pidReport,idForm,strPage)
 		}
		set ^CacheTempREPFORM(YUSER) = +$horolog
	}
	set ^CacheTempReport(YUSER,idForm) = pidReport
	quit idForm
 
 
AddJS(pidReport,pidParam,pidForm) private
	;-------------------------------------------------------------------------------
	; Add any required javascript event def's to the form
	;
	; Params: pidReport		: The report we're running
	; 		  pidParam		: The parameter we're processing
	; 		  pidForm		: The temp form name
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 26-May-2006	SteveS	Created
	;-------------------------------------------------------------------------------
	new idEvent,objWWW1291,strFunc,strJS,strStatus
 
	set idEvent = ""
	for {
		set idEvent = $order(^REPParameterJS(0,pidReport,pidParam,idEvent))
		quit:(idEvent="")
		
		set strFunc = ""
		for {
			set strFunc = $order(^REPParameterJS(0,pidReport,pidParam,idEvent,strFunc))
			quit:(strFunc="")
			
			set strJS = $$$REPParameterJSJavaScript($get(^REPParameterJS(0,pidReport,pidParam,idEvent,strFunc,1)))
			
			set objWWW1291 = ""
			set $$$WWW1291JavaScript(objWWW1291) = strJS
			set strStatus = $$$Save("WWW1291",pidForm_","_pidParam_","_idEvent_","_strFunc,objWWW1291,$$$YES)
		}
	}
	quit
	
	
AddPopUp(pidReport,idForm,idParam,pidLang="") private
    /*-------------------------------------------------------------------------------
    ; Add ComView PopUp Functionality to multi-select a parameter
    ;
    ; Params: pidReport: 	The report id
    ; 		  idForm:		The form id
    ; 		  idParam:		The parameter id
    ; 		  pidLang:		The language id
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 29-Nov-2005	SteveS	SR13930: Created
    ;-------------------------------------------------------------------------------*/
	new strName,objParam,objButton,idSeq,strCallBack,strHelp,strPicture,strStatus
 
	if pidLang="" set pidLang = SPRACHE
	
	set objParam    = $get(^REPParameter(0,pidReport,idParam,1))
	set strName     = $$GetCaption^REPParameter(pidReport,idParam,pidLang)
	set strCallBack = $translate($$$REPParameterCOMViewCallback(objParam),"´","'")
	set strHelp     = $$$REPParameterHelpText(objParam)
	set strPicture  = $$$REPParameterPictureFile(objParam)
	
	set objButton=""
	
	set $$$WWW124ButtonDescription(objButton)         = strName
	set $$$WWW124SetVariableYPARA(objButton)          = pidReport_","_strName
	set $$$WWW124AutomaticSUBMIT(objButton)           = $$$YES
	set $$$WWW124FunctionJavaScriptOnClick(objButton) = strCallBack
	set $$$WWW124Hilfe(objButton)                     = strHelp
	set $$$WWW124PictureFileOnButton(objButton)       = strPicture
 
	set idSeq=$order(^WWW124(0,idForm,pidLang,""),-1)+1
	
	set strStatus = $$$Save("WWW124",idForm_","_pidLang_","_idSeq,objButton,$$$YES)
	quit
	
	
CreatePage(pidForm,pidPage,pstrText) private
    /*-------------------------------------------------------------------------------
    ; Creates a page on a report input form
    ;
    ; Params: pidForm: 		The form id
    ; 		  pidPage:		The page id
    ; 		  pstrText:		The page name/text
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 21-Nov-2005	SteveS	SR12974: Created
    ;-------------------------------------------------------------------------------*/
	new objWWW1203,strKey,strStatus
 
	set objWWW1203=""
	
	if ($get(pidForm)'="") && ($get(pidPage)'="") && ($get(pstrText)'="") {
		set strKey = pidForm_","_SPRACHE_","_pidPage
		set $$$WWW1203PictureFileForPageTag(objWWW1203) = pstrText
		
		set strStatus = $$$Save("WWW1203",strKey,objWWW1203,$$$YES)
	}
	quit
	
		
StoreHelpText(pidReport,pidForm,pidParam) private
    ;-------------------------------------------------------------------------------
    ; Store help text for a parameter input field
    ;
    ; Params: pidReport: 	The report id
    ; 		  pidForm:		The form id
    ; 		  pidParam:		The parameter id
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 06-Oct-2005	SteveS	SR13625: Created
    ;-------------------------------------------------------------------------------
	new objHelpText,strHelpText,strStatus
	
	if ($get(pidReport)'="") && ($get(pidForm)'="") && ($get(pidParam)'="") {
		set strHelpText = $$$REPParameterLangHelpText($get(^REPParameterLang(0,pidReport,pidParam,SPRACHE,1)))
		if strHelpText="" set strHelpText = $$$REPParameterHelpText($get(^REPParameter(0,pidReport,pidParam,1)))
		if strHelpText="" set strHelpText = $$$Text("Com00125") ; "No help text available"
		
		set objHelpText=""
		
		set $$$WWW127HelpText(objHelpText)=strHelpText
		
		set strStatus = $$$Save("WWW127",pidForm_",M,"_pidParam_","_SPRACHE,objHelpText,$$$YES)
	}
	quit
	
	
GetFormHeader(pidReport)
	;-------------------------------------------------------------------------------
	; Return the header text for the parameter input form for this report
	;
	; Params:	pidReport	: The report id
	;
	; Returns:
	;
	; History:
	; 16-Jan-2007	SteveS	SR15355: Created
	;-------------------------------------------------------------------------------
	new strHeader,objREPReport
	
	set strHeader = $$$REPReportLangFormHeader($get(^REPReportLang(0,pidReport,SPRACHE,1)))
	
	if strHeader="" {
		set objREPReport = $get(^REPReport(0,pidReport,1))
		set strHeader = $$$REPReportFormHeader(objREPReport)	
		if strHeader="" {
			set strHeader = $$$REPReportNotes(objREPReport)
		}
	}
	quit strHeader
	
			
Execute(pidReport,plstParams="",pstrFormat="",pidLang="",
		pstrOutputOption=$$$EnumREPOUTPUTScreen,
		pidPrinter="",pstrEmail="",pstrFax="",pblnBatch=$$$NO,pidBatch="")
    ;-------------------------------------------------------------------------------
    ; Execute a report
    ;
    ; Params: pidReport: 		The report id
    ; 		  plstParams:		Parameter list to use
    ; 		  pstrFormat:		Format to output
    ; 		  pidLang:			Language to run in
    ; 		  pstrOutputOption:	Output enum to use
    ; 		  pidPrinter:		Printer id
    ; 		  pstrEmail:		Email string
    ; 		  pstrFax:			Fax Number
    ; 		  pblnBatch:		If this is a batch report or not
    ; 		  pidBatch:			If a batch, the batch number
    ;
    ; ByRefs:
    ; 
    ; Returns: strStatus ($$$OK or $lb(error))
    ;
    ; History:
    ; 05-Nov-2009	PPP		SR17013:Added ZEN Reports
    ; 25-Dec-2008   VIJAY	Added the Jasper Reports Logic
    ; 22-Nov-2006	SteveS	SR15210: Crystal Interface
    ; 14-Feb-2006	SteveS	SR13474: Use alternate reports, depending on params
    ; 05-Dec-2005	SteveS	SR12974: Support email/fax/printer
    ; 04-Oct-2005	SteveS	SR13103: Pass in the language
    ; 05-Sep-2005	SteveS	SR13391: Pass in the format
    ; 14-Jul-2005	SteveS	SR12959: Check for database connection
    ; 24-Jun-2005	SteveS	Created SR12738
    ;-------------------------------------------------------------------------------
	new strStatus,objReport,idWriter,strOutput,objSettings,strDatabase
	new strJReport
 
	set strStatus=$$$OK
	
	if $get(pidReport)="" {
		set strStatus=$listbuild("REP00001")  ;No record selected
	} else {
		do ReportName(.pidReport,plstParams) ;SR13474
		do ReportParameters(pidReport,.plstParams)
		
		set objReport=$get(^REPReport(0,pidReport,1))
		set objSettings=$get(^REPSystem(0,YM,1))
		
		set idWriter=$$GetWriter^REPReportDef(pidReport)
		if (pstrFormat="") set pstrFormat=$$$REPSystemDefaultFormat(objSettings)
		if (pstrFormat="") set pstrFormat=$$$EnumREPFORMATPDF //Ensure a format always exists
 
 		set strDatabase=$$$REPSystemJDBCDriver(objSettings) ;SR12959
 		
 		if strDatabase="" {
	 		set strStatus=$listbuild("REP00044")  ;No JDBC driver information found. Please check Report System Settings.
 		} elseif idWriter="" {
	 		set strStatus=$listbuild("REP00029")  ;No report writer defined
 		} else {
	 		//SR12974
			set strStatus=$$VerifyOutput^REPExecuteOutput(pstrOutputOption,pidPrinter,pstrEmail,pstrFax)

			if $$$ISOK(strStatus) {

				if idWriter=$$$EnumREPWRITERJReports {
					set strStatus = $$UpdateLanguageFile^REPTranslation(pidReport,pidLang) ;SR13103
					
					;SR12974
					if $$$ISOK(strStatus) {
						set strOutput = $$MakeJReportURL^REPJReport(pidReport,plstParams,pstrFormat,pidLang,
																	pstrOutputOption,pidPrinter,pstrEmail,pstrFax)
					}
					
				} elseif idWriter=$$$EnumREPWRITERCrystalReports { //SR15210
					set strOutput = $$MakeCrystalURL^REPCrystal(pidReport,plstParams,pstrFormat)

				} elseif idWriter=$$$EnumREPWRITERJasper { //Vijay- Added to call the Jasper Reports
					set strOutput = $$MakeJasperURL^REPJasper(pidReport,plstParams,pstrFormat)

				} elseif idWriter=$$$EnumREPWRITERZENReports {		//SR17013
					set strOutput = $$MakeZENURL^REPZEN(pidReport,plstParams,pstrFormat)

				} else {
					set strStatus=$listbuild("REP00028",idWriter_" - "_$$$AppEnum("REPWRITER",idWriter))
				} ; "Report writer `%1` not supported"
								
				if $$$ISOK(strStatus) set strStatus = $$UseURL(pidReport,strOutput,pstrOutputOption,idWriter)
				if $$$ISOK(strStatus)&&('pblnBatch) do StoreParamHistory(pidReport,plstParams)
			}
		}
	}
	
	if $$$ISOK(strStatus) {
		if ('pblnBatch)&&(pstrOutputOption'=$$$EnumREPOUTPUTScreen) {
			do ReturnError^COMUtilError($listbuild("REP00070",$$$AppEnum("REPOUTPUT",pstrOutputOption))) ;Operation successful (%1).
		}
		set strStatus = $$StoreRunHistory(pidReport,strOutput,pstrOutputOption,pidBatch,idWriter)
 
	} else { 
		if 'pblnBatch do ReturnError^COMUtilError(strStatus)
	}
	quit strStatus
	
	
ReportName(&pidReport,plstParams) private
	/*------------------------------------------------------------------------------
	; For a report, check if there is an alternate report that should
	; be run instead, depending on its parameter values.
	;
	; Params:	plstParams		: The parameters for this report
	;
	; ByRefs:	pidReport		: The report to run
	;
	; Returns:
	;
	; History:
	; 07-Sep-2010	GRF		Add "&"
	; 10-Feb-2006	SteveS	SR13474: Created
	;-----------------------------------------------------------------------------*/
	new idParam,objParam,strValue,blnChanged
	
	; <FIXME>: Support more than one condition?
	
	set blnChanged = $$$NO
	
	set idParam = ""
	for {
		set idParam = $order(^REPParameter(0,pidReport,idParam))
		quit:(idParam="")||blnChanged
		
		set objParam = $get(^REPParameter(0,pidReport,idParam,1))
		
		if $$$REPParameterAlternateReport(objParam) {
			set strValue = $$$REPParameterValue1(objParam)
			if strValue=$listget(plstParams,idParam) {
				set pidReport  = $$$REPParameterReport1(objParam)
				set blnChanged = $$$YES
			}	
		}	
	}
	quit
	
	
ReportParameters(pidReport,&plstParams) private 
	;-------------------------------------------------------------------------------
	; Processes a reports parameters.
	;
	; Params:	pidReport  : The report to process	
	;
	; ByRefs:	plstParams : The parameter list
	;
	; Returns:
	;
	; History:
	; 07-Sep-2010	GRF		Add "&"
	; 02-Nov-2006	SteveS	SR15164: Keep raw values via Setup Variable
	; 15-Feb-2006	SteveS	SR13474: Created
	;-------------------------------------------------------------------------------
	new idParam,objParam,strType,strValue,strValueNew,strForce
 
	set idParam = ""
	for {
		set idParam = $order(^REPParameter(0,pidReport,idParam))
		quit:(idParam="")
		
		set objParam = $get(^REPParameter(0,pidReport,idParam,1))
		set strType  = $$$REPParameterType(objParam)
		
		continue:(strType=2) ;booleans are handled at the form level, "" => 0
		
		set strValue = $listget(plstParams,idParam)
		
		if strValue="" {
			set strForce=$$$REPParameterForceValue(objParam)
			if (strForce'="") {
				if $extract(strForce)="@" {
					xecute "set strValue="_$extract(strForce,2,$length(strForce))	
				} else {
					set strValue = strForce	
				}	
			}
		}
		
		set strValueNew = strValue
		
		if '$get(^SysSetup(15164,"Raw Value")) { //SR15164
			set strValueNew = $$$Escape($$^WWWTR(1,strType,strValue))
		}
		
		if strValueNew'=strValue {
			set $list(plstParams,idParam) = strValueNew
		}		
	}
	quit
	
	
ShowReport(pidReport,pstrOutput="")
    ;-------------------------------------------------------------------------------
    ; Write the output URL to the browser
    ;
    ; Params: 	pidReport	:	The report id
    ; 			pstrOutput	: 	The output URL
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 29-Sep-2005	SteveS	SR12738: Created (moved from Execute^REPExecute)
    ;-------------------------------------------------------------------------------
	do ^WWWBACK
	write "<b>"_$$GetReportName^REPReportDef(pidReport)_"</b><br>"
	write pstrOutput
	write "<BR>"
	do ^WWWUP(1)
	write "<BR>"
	quit
	
	
StoreRunHistory(pidReport,pstrURL,pstrOutputOption,pidBatch,pidWriter) private
    ;-------------------------------------------------------------------------------
    ; Stores a reports run history
    ;
    ; Params: pidReport				: The report id
    ; 		  pstrURL				: The URL used
    ; 		  pstrOutputOption		: The output method
    ; 		  pidBatch				: The batch number
    ; 		  pidWriter				: The writer
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 24-Nov-2006	SteveS	SR15210: Store Writer
    ; 24-Apr-2006	SteveS	Use new REPLog
    ; 23-Sep-2005	SteveS	SR12738: Created (moved from Execute^REPExecute)
    ;-------------------------------------------------------------------------------
	new idLog,objREPLog,strStatus,tmsNow
 
	set tmsNow    = $horolog
	set objREPLog = ""
	
	set idLog = $$$NextKey("REPLog")
	
	set $$$REPLogRunDate(objREPLog)     = $piece(tmsNow,$$$COMMA,1)
	set $$$REPLogRunTime(objREPLog)     = $piece(tmsNow,$$$COMMA,2)
	set $$$REPLogReport(objREPLog)      = pidReport
	set $$$REPLogURL(objREPLog)          = pstrURL
	set $$$REPLogRunby(objREPLog)        = YBED
	set $$$REPLogOutputto(objREPLog)     = pstrOutputOption
	set $$$REPLogBatchNumber(objREPLog)  = pidBatch
	set $$$REPLogReportWriter(objREPLog) = pidWriter //SR15210
	
	set strStatus = $$$Save("REPLog",idLog,objREPLog,$$$YES)
 
	job PurgeLog^REPLog(YM,YUSER,YBED)
	
	quit strStatus
	
	
StoreParamHistory(pidReport,plstParams="")
    ;-------------------------------------------------------------------------------
    ; Store a user's last parameter values
    ;
    ; Returns:
    ;
    ; History:
    ; 29-Nov-2005	SteveS	SR13930: Skip parameters which use COMView PopUp
    ; 06-Sep-2005	SteveS	SR12738: Created
    ;-------------------------------------------------------------------------------
	new idx,idParam,objParam,objFormField,strStatus
 
	if $get(pidReport)'="" {
		for idx=1:1:$listlength(plstParams) {
			set ^CacheTempDefault(YBED,pidReport,idx)=$listget(plstParams,idx)
		}
		
		set idParam=""
		for {
			set idParam = $order(^REPParameter(0,pidReport,idParam))
			quit:idParam=""
			
			set objParam=$get(^REPParameter(0,pidReport,idParam,1))
			continue:$$$REPParameterDoNOTPrompt(objParam)
			continue:$$$REPParameterMultiSelect(objParam)&&$$$REPParameterCOMViewPopUp(objParam) ;SR13930
			
			set objFormField=$get(^WWW122(0,$$$ReportName_YUSER,idParam,1))
			
			if $$$REPParameterUserslastvalue(objParam) {
				if $data(^CacheTempDefault(YBED,pidReport,idParam)) {
					set $$$WWW122DefaultVariableInput(objFormField)=$get(^CacheTempDefault(YBED,pidReport,idParam))	
				}
			}
			set strStatus = $$$Save("WWW122",$$$ReportName_YUSER_","_idParam,objFormField,$$$YES)	
		}	
	}
	quit
	
	
PutInFrame(pidReport,strOutput="")
    ;-------------------------------------------------------------------------------
    ; Embed a http request string into a frame
    ;
    ; Returns:
    ;
    ; History:
    ; 18-Jul-2005	SteveS	SR12738: Created
    ;-------------------------------------------------------------------------------
	new strFrameOutput,objReport,intHeight,intWidth,strTitle
	
	;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	;
	; Standard A4 Frame Portrait  1050 (h) x 750  (w) PIXELS
	;					Landscape 750  (h) x 1050 (h) PIXELS
	;					
	;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	set strFrameOutput="<IFRAME src="""_strOutput_""""
	
	if $get(pidReport)'="" {
		set objReport = $get(^REPReport(0,pidReport,1))
		set strTitle  = $$GetReportName^REPReportDef(pidReport)
		
		if $$$REPReportPageType(objReport)=$$$EnumREPPAGETYPEPortrait {
			set intHeight = 1050
			set intWidth  =  750
			
		} else { ;                        =$$$EnumREPPAGETYPEPortrait
			set intHeight =  750
			set intWidth  = 1050
		}
								
		set strFrameOutput = strFrameOutput_" width="""_intWidth_""""
		set strFrameOutput = strFrameOutput_" height="""_intHeight_""""
		set strFrameOutput = strFrameOutput_" title="""_strTitle_""""
		set strFrameOutput = strFrameOutput_" frameBorder=yes"
	}
	
	set strFrameOutput = strFrameOutput_"></IFRAME>"
	
	quit strFrameOutput
	
	
Run(pidReport="",pstrFormat="",pidLang="",pstrOldForm="")
    ;-------------------------------------------------------------------------------
    ; Run a report.
    ;
    ; Params: pidReport: 	The report id
    ; 		  pstrFormat: 	Output format
    ;		  pidLang:		Language to use
    ;		  pstrOldForm:	Old YFORM
    ;
    ; ByRefs:
    ; 
    ; Returns: strForm used
    ;
    ; History:
    ; 14-Aug-2006	JW		SR14549: Report override
    ; 20-Nov-2005	SteveS	SR12974: Always construct the form
    ; 05-Sep-2005	SteveS	SR13391: Pass in the format
    ; 24-Jun-2005	SteveS	Created SR12738
    ;-------------------------------------------------------------------------------
	new strParamInput,strForm,lstParams,idParam,objParam,strDefValue
	new strValue,strYFORM,idReportOverride
	
	; get actual (could be overridden) if not on Report Def form
	if (YFORM'="REPReportDef") {
		set pidReport = $$GetActual^REPReportDef(pidReport)
	}
	
	quit:(pidReport="")   ; FIXME : needs to have return value - strForm
	
	set strForm = ""
	do CleanUp^REPExecuteCleanUp(pidReport)
	set strYFORM = $$CreateForm(pidReport,pstrFormat,pidLang)
	set %(YQUERY,"YFORM")=strYFORM
	if (pstrOldForm="")||(pstrOldForm=strYFORM) do GoToForm^COMUtilForm(strYFORM,"","","")
	set YFORM = strYFORM
			
	quit strForm
	
	
RunFromMenu(pYPARA)
    ;-------------------------------------------------------------------------------
    ; Run a report from the alphalinc menu
    ;
    ; Params: pYPARA: 		YPARA value
    ;
    ; ByRefs:
    ; 
    ; Returns:
    ;
    ; History:
    ; 01-Sep-2005	SteveS	SR13391: Created
    ;-------------------------------------------------------------------------------
	new idReport,strOldForm
 
	set strOldForm = $get(YFORM)
	set idReport   = $get(pYPARA)
	
	do Run(idReport,"","",strOldForm)
		
	quit
	
	
RunFromPrompt(pidReport="",pstrFormat="",pidLang="")
	;			VORG(1)		  VORG(2)     VORG(3)
    ;-------------------------------------------------------------------------------
    ; Run a report from the user "prompt" form
    ;
    ; Returns:
    ;
    ; History:
    ; 05-Sep-2005	SteveS	SR13391: Pass in the format
    ; 09-Aug-2005	SteveS	SR13103: Pass in language
    ; 05-Jul-2005	SteveS	SR11267: Created
    ;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	
	if pidReport="" {
		set strStatus = $listbuild("REP00042")             ; "No report specified"
		
	} elseif '$data(^REPReport(0,pidReport)) {
		set strStatus = $listbuild("REP00043",pidReport)   ; "Report `%1` does not exist"

	} else {
		do Run(pidReport,pstrFormat,pidLang)	
	}
	
	if $$$ISERR(strStatus) do ReturnError^COMUtilError(strStatus)
	quit
	
	
UseURL(pidReport,pstrURL="",pstrOutputOption=$$$EnumREPOUTPUTScreen,pidWriter)
    ;--------------------------------------------------------------------------------
    ; Fire a URL @ the server
    ;
    ; Params: pidReport:		The report being run
    ; 		  pstrURL:			The URL being fired
    ; 		  pstrOutputOption: The output method (enum)
    ;
    ; ByRefs:
    ; 
    ; Returns: strStatus ($$$OK or $lb(Error))
    ;
    ; History:
    ; 05-Nov-2009	PPP			SR17013 - Added ZEN REport Interface
    ;							1. 	The mode can be pdf only if $get(^%SYS("zenreport","transformerpath")
    ;							    is defined. (othrewise it is html format)
    ; 22-Nov-2005	Steve S		SR12974: Created
    ;---------------------------------------------------------------------------------
 	new httprequest,httpresponse,intPort,strCacheStatus,strError,strMode,strServer,strStatus
 	
 	set strStatus = $$$OK
  
	if $get(pidReport)'="" { 
	 	if (pstrOutputOption=$$$EnumREPOUTPUTScreen) {

		 	//SR17013
		 	if pidWriter = $$$EnumREPWRITERZENReports {
				set strMode = $select($get(^%SYS("zenreport","transformerpath"))'="":"pdf",1:"html")
				$$$Append(pstrURL,"$MODE="_strMode)
		 	}

			set pstrURL=$$PutInFrame(pidReport,pstrURL)
			do ShowReport(pidReport,pstrURL)

		} else {

			; FIXME: use do ##class(%Net.URLParser).Parse(pstrURL,.{OBJECT})
			set strServer=$piece($piece(pstrURL,"http://",2),":",1)
			set intPort=$piece($piece($piece(pstrURL,"http://",2),":",2),"/",1)
			
			set httprequest			= ##class(%Net.HttpRequest).%New()
			set httprequest.Server	= strServer
			set httprequest.Port	= intPort

			set strCacheStatus=httprequest.Get($$Replace^COMUtilStr(pstrURL,"http://"_strServer_":"_intPort,""))
 
			if $$$ISERR(strCacheStatus) {
				set strStatus=$listbuild("REP00069",$$DecodeCacheError^COMUtilError(strCacheStatus))  ; "Operation failure - Reason: `%1`"
			
			} else {
				set httpresponse=httprequest.HttpResponse
				if (httpresponse=$$$NULLOREF) {
					set strStatus=$listbuild("REP00090",strServer,intPort)  ; "No response from server `%1`, port `%2`."
				} else {
					if httpresponse.StatusCode'=$$$HTTPOK {
						if httpresponse.StatusLine="" {
							set strError=httpresponse.StatusCode	
						} else {
							set strError=httpresponse.StatusLine
						}
						if strError="" set strError=httpresponse.ReasonPhrase
						set strStatus=$listbuild("REP00069",strError)  ; "Operation failure - Reason: `%1`"
					}
				} 
			}
		}
	} else {
		set strStatus = $listbuild("REP00042")  ; "No report specified"
	}
	quit strStatus
	
	
CanRun(pidReport)
	;-------------------------------------------------------------------------------
	; Checks if the 'run' button is active
	;
	; Params: pidReport		: The report id
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 27-Nov-2006	SteveS	SR15214: Created
	;-------------------------------------------------------------------------------
	new objREPReport,strStatus
	
	set strStatus = $$$OK
	
	if $get(pidReport)="" {
		set strStatus = $listbuild("REP00001")  ; "No record selected"
	} else {
		set objREPReport = $get(^REPReport(0,pidReport,1))
		if $$$REPReportBatchModeOnly(objREPReport) {
			set strStatus = $listbuild("REP00133")  ; "Can be run via batch mode only."
		}
	}
	$$$YQHandler(strStatus)
	quit
	
]]></Routine>
</Export>