<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INCostCentreChange" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INCostCentreChange
	
#include COMSYS
#include INConst
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2)	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^INCostCentreChange("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
#;define enumEntity		0
#;define enumSite		1
#define enumDept		2
	
	;-------------------------------------------------------------------------------
	; SR17967 :
	;   ^CacheTempWWW0121("Path",YUCI,"1-2-34")                       = "~1-2-34~1-2-3,1-2,1~ENT~"
	;   ^CacheTempWWW0121("Hier",YUCI,"ENT",1,"1-2","1-2-3","1-2-34") = "Location 34~1-2-34~CostCentre"
	; 
	; replaced by
	;   ^WWW0121Path(0,"1-2-34",1)                     = "~1-2-34~1-2-3,1-2,1~ENT~"
	;   ^WWW0121Hier(0,"ENT",1,"1-2","1-2-3","1-2-34") = "Location 34~1-2-34~CostCentre"
	;-------------------------------------------------------------------------------
	
GetOriginalCC(pidLocn)
	;-------------------------------------------------------------------------------
	; Used to show Location tree.
	;
	; History:
	; 20-Nov-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idCostCentre
	
	if pidLocn'="" {
		set idCostCentre = $$$INFIBPARCostCentre($get(^INFIBPAR(0,0,pidLocn,1)))
	
	} else {
		set idCostCentre = ""
	}
	quit idCostCentre
	
	
ShowLocnTree(pidLocation)
	;-------------------------------------------------------------------------------
	; Used to show Location tree.
	; 
	; Called By: Form INCostCentreChange - Execute After Data Fields
	; 
	; History:
	; 30-Nov-2011	GRF		SR17967: move from CacheTemp to common global in nspace
	; 04-Dec-2009	GRF		SR16871: Exclude Departments
	; 20-Nov-2009	GRF		SR16871: Created based on SALCategory
	;-------------------------------------------------------------------------------
	new blnExpand,blnHighlight,idCostCentre,idLocn,idParent,idPendingCC
	new intDepth,objHierarchy
	new strExtra,strGlobal,strImage,strLocnName,strPath,strText

	;---------------------------------------
	; ^INCostCentreChange(idLocn) = newCC
	; 	
	; ^INCostCentreAudit(0,$$$NEXT) = Date~YBED
	; ^INCostCentreAuditLocn(0,$$$NEXT,idLocn) = oldCC~newCC
	;---------------------------------------
	
	set strPath = $translate($$GetPath^WWW0121Utils(0,pidLocation),Y,$$$COMMA)
	
	do NoteChangedSubLocns()
	
	do StartTree^COMTree($get(YPARA))
	
	set strGlobal     = "^WWW0121Hier(0)"   ; Variable number of keys
	for {
		set strGlobal = $query(@strGlobal)
		quit:(strGlobal="")

		set objHierarchy = @strGlobal
		set strLocnName  = $piece(objHierarchy,Y,1)
		set idLocn       = $piece(objHierarchy,Y,2)
		set idCostCentre = $piece(objHierarchy,Y,3)
		
		continue:($$$WWW0121LocationType($get(^WWW0121(0,0,idLocn,1))) = $$$enumDept)  ; exclude departments

		set intDepth = $qlength(strGlobal)
		if intDepth > 2 {
			set idParent = $qsubscript(strGlobal,intDepth-1)
		} else {
			set idParent = ""
		}
		
		set strText = " "_idLocn_" - "_strLocnName
		set strExtra = ""
		
		if idCostCentre'="" {
		;	set strLocnName = strLocnName_" (Cost Centre = "_idCostCentre_")"
			set strExtra = strExtra_" <font color=red>(Cost Centre = "_idCostCentre_")</font>"
		}
		if $data(^INCostCentreChange(0,idLocn)) { ; show being reset
			set idPendingCC = $piece(^INCostCentreChange(0,idLocn,1),Y,1)
			set strExtra = strExtra_" <font color=blue>(New Cost Centre = "_idPendingCC_")</font>"
		}

		set blnExpand    = (strPath[($$$COMMA_idLocn_$$$COMMA))
		set blnHighlight = (pidLocation=idLocn)
		
		if $data(@strGlobal)=1 {
			set strImage = "html.gif"
		} else {
			if blnExpand {
				set strImage = "oopen.gif"
			} else {
				if $data(^CacheTempCostCentreChange(YUCI,"CSL",idLocn)) {
					set strImage = "scrright.gif"    ; Highlight if sub-locns have changes 
					
				} else {
					set strImage = "oclose.gif" 
				}
			}
		}
		do AddNode^COMTree(idParent,idLocn,"",strText,strImage,"INCostCentreChange",idLocn,
		                   blnHighlight,strExtra,"","","",blnExpand,"")
	}
	do StopTree^COMTree(1)
	quit


NoteChangedSubLocns()
	;-------------------------------------------------------------------------------
	; Special index to highlight where a location has changes recorded for a sub-location
	;
	; History:
	; 20-Nov-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idChangedLocn,idLocn,loop,strPath
	
	kill ^CacheTempCostCentreChange(YUCI,"CSL")
	
	set idChangedLocn = ""
	for {
		set idChangedLocn = $order(^INCostCentreChange(0,idChangedLocn))
		quit:idChangedLocn=""
		
		set strPath = $translate($$GetPath^WWW0121Utils(0,idChangedLocn),Y,$$$COMMA)
		for loop=1:1:$length(strPath,$$$COMMA) {
			set idLocn = $piece(strPath,$$$COMMA,loop)
			continue:idLocn=""
			continue:idLocn=idChangedLocn
			
			set ^CacheTempCostCentreChange(YUCI,"CSL",idLocn) = ""
		}
	}
	quit
	
	
OnBeforeSave(pidLocn,pobjChange)
	;-------------------------------------------------------------------------------
	; If the new CC matches the existing record don't allow a change record to be created.
	; 
	; 
	; History:
	; 04-Dec-2009	GRF		SR16871: Exclude Departments
	; 03-Dec-2009	GRF		SR16871: Display reason record was not saved
	; 23-Nov-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idNewCC,idOldCC
	
	if $$$WWW0121LocationType($get(^WWW0121(0,0,pidLocn,1))) = 2 {
		do ReturnError^COMUtilError($listbuild("IN01157"))      ; "Cannot assign cost centres to a 'Department' Type Location"
		set Q = $$$QDontSave
	
	} else {
		set objFINParam = $get(^INFIBPAR(0,0,pidLocn,1))
		set idNewCC = $$$INCostCentreChangeCostCentre($get(pobjChange))
		set idOldCC = $$$INFIBPARCostCentre(objFINParam)
	
		if idNewCC=idOldCC {
			do ReturnError^COMUtilError($listbuild("IN01152"))  ; "Cost Centre not changed - not saved"
			set Q = $$$QDontSave
		}
	}
	quit
	
	
IsDisabled()
	;-------------------------------------------------------------------------------
	; Called By : Form INCostCentreChange : Button 1 "Update Locations"
	;
	; History:
	; 20-Nov-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	if $data(^INCostCentreChange(0)) {
		set YQ = $$$YQEnable
	} else {
		set YQ = $$$YQDisable("IN01156")   ; "Currently no changes prepared"
	}
	quit 
	
	
PostBatch()
	;-------------------------------------------------------------------------------
	; Called By : Form INCostCentreChange : Button 1 "Update Locations"
	;
	; History:
	; 29-Nov-2011	GRF		SR17967: Ensure location hierarchy is up-to-date before
	;							calling OnBeforeSave.
	; 04-Dec-2009	GRF		SR16871: If change to inherit CC and no other data then
	; 							delete Finance Parameters; add transaction processing
	; 20-Nov-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	; IDEA : process lower levels setting absolute definitions first
	;        - less likely to be double handling
	;        e.g.  Locn 1 - CC A  with sub-locn 2 inheriting
	;              change to
	;              Locn 1 - CC B  with sub-locn 2 - CC A
	;              
	;              Update 1 A=>B will flow on to update 2 A=>B
	;              Then will get update 2 B=>A
	;              
	; Single pass may not be possible or practical - especially with multiple levels
	;-------------------------------------- 
	new idChange,idChangedLocn,idFINPar,idNewCC,idOldCC,objAudit,objAuditLocn,objFINParam,strStatus
	
	$$$LogR("PostBatch","")
	$$$LogRm(^INCostCentreChange)
	
	set trap   = $ztrap
	set $ztrap = "PostBatchError"
	
	set strStatus = $$$OK
	do MakePath^WWW0121Utils()    ; SR17967
	
	if $data(^INCostCentreChange) {
		do ^WWWINFO($$^WWWTEXT(383))    ; "Program Has Started In Background"
		
		set idChange = $$^WWWNEXT("INCostCentreAudit")
		set objAudit = $horolog_Y_$get(YBED,"UNKNOWN")
		set strStatus = $$$Save("INCostCentreAudit",idChange,objAudit,$$$YES)
		
		if $$$ISOK(strStatus) {
			set idChangedLocn = ""
			for {
				set idChangedLocn = $order(^INCostCentreChange(0,idChangedLocn))
				quit:idChangedLocn=""
		
				set idNewCC = ^INCostCentreChange(0,idChangedLocn,1)
				set idOldCC = $$GetOriginalCC(idChangedLocn)
				
	$$$LogRx(idChangedLocn_":"_idOldCC_">"_idNewCC_"<")
				if (idNewCC'=idOldCC) {
				;+++++++++++++++++++++++++++
					tstart
				;+++++++++++++++++++++++++++
					
					set idFINPar     = 0_$$$COMMA_idChangedLocn
					set objAuditLocn = idOldCC_Y_idNewCC
					set objFINParam  = $get(^INFIBPAR(0,0,idChangedLocn,1))
					set $$$INFIBPARCostCentre(objFINParam) = idNewCC
					
					if $translate(objFINParam,Y,"")'="" {
						kill Q
						do OnBeforeSave^INFIBPAR(idFINPar,objFINParam)
						if $get(Q)'=$$$QDontSave {
							set strStatus = $$$Save("INFIBPAR",idFINPar,objFINParam,$$$YES)
							if $$$ISOK(strStatus) set strStatus = $$CreateAudit(objAuditLocn,idChange,idChangedLocn)
						}
					
					} else {
						set strStatus = $$$Kill("INFIBPAR",idFINPar)
						if $$$ISOK(strStatus) set strStatus = $$CreateAudit(objAuditLocn,idChange,idChangedLocn)
					}
				;+++++++++++++++++++++++++++
					if $$$ISOK(strStatus) {
						if $tlevel>0 tcommit
					} else {
						trollback
					}
				;+++++++++++++++++++++++++++
				}
			}
			do MakePath^WWW0121Utils()
		}
	
	} else { ; blocked with button logic
		do ^WWWINFO($$^WWWTEXT(32017))  ; "Check NOT Started"
	;	set strStatus = $$$MakeStatus(32017)
	}
	
	quit
	
	
PostBatchError  ;Internal Tag
	set $ztrap = ""
	;+++++++++++++++++++++++++++++++++++++++
	trollback
	;+++++++++++++++++++++++++++++++++++++++
	quit		
	
	
CreateAudit(pobjAuditLocn,pidChange,pidChangedLocn) private
	;-------------------------------------------------------------------------------
	; Called By : PostBatch
	;
	; History:
	; 04-Dec-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$Save("INCostCentreAuditLocn",pidChange_$$$COMMA_pidChangedLocn,pobjAuditLocn,$$$YES)
	if $$$ISOK(strStatus) kill ^INCostCentreChange(0,pidChangedLocn,1)
	quit strStatus
	
]]></Routine>
</Export>