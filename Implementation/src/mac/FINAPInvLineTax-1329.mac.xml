<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvLineTax" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvLineTax

 ;******************************************************************************************************
 ; PLEASE NOTE THE FOLLOWING PROCEDURES HAVE BEEN MADE OBSOLETE
 ; 
 ; OnChangeTaxInvoice  - REPLACED WITH OnChangeTaxInvoice^FINAPInvLineTax2
 ; OnChangeLinesIncTax - REPLACED WITH OnChangeLinesIncTax^FINAPInvLineTax2
 ; OnChangeLineTotal   - REPLACED WITH OnChangeLineTotal^FINAPInvLineTax2
 ; OnChangeTaxTotal    - REPLACED WITH OnChangeTaxTotal^FINAPInvLineTax2
 ; 
 ; BOTH OF THE FOLLOWING PROCEDURES ARE STILL BEING USED
 ; UpdateTax - Used by:
 ;             UpdateSupplier^FINAPInv2
 ;             OnAfterDataFields^FINAPInvLine
 ;             SetLineDefaults^FINAPInvLine
 ;             OnLineDeleted^FINAPInvLine
 ;             InvoicesSelected^FINAPInvSearch
 ; Apportion - ONLY USED BY UpdateTax
 ; 
 ; TODO: UpdateDiscountTax needs to be removed, only to be in FINAPInvLineTax2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************


    ;-------------------------------------------------------------------------------
    ; routines for getting tax rates and other tax stuff for invoices
    ;-------------------------------------------------------------------------------
#include WWWConst
#include COMSYS
#include COMConst
#include FINConst
#include INConst
 
 ;******************************************************************************************************
 ; THIS CODE IS NO LONGER IN USE, REPLACED WITH CalculateAmountsFromInvoiceEach^FINAPInvLineTax2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
 
UpdatePriceFields(pobjLine,pobjInvoice,pidField="",pblnUpdate=0)
    ;-------------------------------------------------------------------------------
    ; When particular price field changes (or the quantity field) reset the appropriate
    ; fields. If modifying a Tax Inc price, Invoice set to "Tax on Line".
    ;
    ; Returns:@Net object (FINAPInvLine)
    ;
    ; History:
    ; 06-Jul-2005	JW			SR12705: Added else condition - for when adding lines / recalculating (pidfield="")
    ; 05-Jul-2005	Shobby/PO	SR12705: Commented out lines of code that are prefixed with this SR#
    ; 01-Jun-2005	RobertW		SR12509: Use the unrounded unit price and then multiply by the quantity
    ; 							Also set the rate default to 1 not zero, and add one to the rate when we calculate it.
    ; 							It was always having 1 added in the code.
    ; 27-May-2005	Paul K		If not tax on line set total inc tax to be each * qty SR:12478
    ; 09-May-2005	Paul K		SR:12308 Work out total from each rather than total inc tax on total inc blur.
    ; 19-Apr-2005	Paul K		Round amounts according to field pre-sets SR:5
    ; 16-Mar-2005	PO			SR11349 Support FC
    ; 15-Mar-2005	Paul K		When mult by qty, use tax in unit price for tax inc total
    ; 10-Mar-2005	Paul K		Created
    ;-------------------------------------------------------------------------------
	new fltRate,fltQuantity
	
	set fltQuantity=$$$FINAPInvLineInvoiceQuantity(pobjLine)
	set fltRate=1
 
	
	if $$$FINAPInvTaxInvoice(pobjInvoice) {
		set fltRate=1+($$CombinedTaxRate^COMTAX($$$FINAPInvLineTaxCode(pobjLine),$$$FINAPInvTaxLocation(pobjInvoice),$$$FINAPInvInvoiceDate(pobjInvoice),1)/100)
	}
 
	if pidField=$$$FldFINAPInvLineInvoiceEach {  // this needs to be changed for SR12811
		; ** Following line is producing a rounding problem **
		; Problem is editting the InvoiceTotal causes InvoiceEach to change 
		set $$$FINAPInvLineInvoiceTotal(pobjLine)			  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
		;
		  ;SR12705 ;set $$$FINAPInvLineInvoiceEachIncTax(pobjLine)		  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax)
		;set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine)=$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceTotal(pobjLine),(1+fltRate)),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
		;set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEachIncTax(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)  ;SR:12478
		  ;SR12705 ;set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)  ;SR:12478
	} elseif  pidField=$$$FldFINAPInvLineInvoiceTotal {
		if +fltQuantity=0 set fltQuantity=1
		set $$$FINAPInvLineInvoiceEach(pobjLine)			  =$$$FCRound($$$FCDivd($$$FINAPInvLineInvoiceTotal(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEach)
		  ;SR12705 ;set $$$FINAPInvLineInvoiceEachIncTax(pobjLine)		  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax)
		;set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEachIncTax(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)  ;SR:12478
		  ;SR12705 ;set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)  ;SR:12478
	} elseif  pidField=$$$FldFINAPInvLineInvoiceEachIncTax {
		set $$$FINAPInvLineInvoiceEach(pobjLine)			  =$$$FCRound($$$FCDivd($$$FINAPInvLineInvoiceEachIncTax(pobjLine),fltRate),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEach)
		set $$$FINAPInvLineInvoiceTotal(pobjLine)			  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
		set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEachIncTax(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
		;set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)  ;SR:12478
	} elseif  pidField=$$$FldFINAPInvLineInvoiceTotalIncludingTax {
		if +fltQuantity=0 set fltQuantity=1
		set $$$FINAPInvLineInvoiceEach(pobjLine)	   		  =$$$FCRound($$$FCDivd($$$FCDivd($$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine),fltQuantity),fltRate),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEach)
		;set $$$FINAPInvLineInvoiceTotal(pobjLine)	   		  =$$$FCRound($$$FCDivd($$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine),(1+fltRate)),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
		set $$$FINAPInvLineInvoiceTotal(pobjLine)	   		  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)  ;PJK 2005-05-09 SR:12308 Work out total from each rather than total inc tax.
		set $$$FINAPInvLineInvoiceEachIncTax(pobjLine) 		  =$$$FCRound($$$FCDivd($$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax)
	} elseif  pidField=$$$FldFINAPInvLineInvoiceQuantity {
		set $$$FINAPInvLineInvoiceTotal(pobjLine)			  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),$$$FINAPInvLineInvoiceQuantity(pobjLine)),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
		;set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEachIncTax(pobjLine),$$$FINAPInvLineInvoiceQuantity(pobjLine)),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)
		set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),$$$FINAPInvLineInvoiceQuantity(pobjLine)),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)  ;SR:12478
		
	} else {  // SR12705: No field, so update all
		set $$$FINAPInvLineInvoiceTotal(pobjLine)			  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotal)
		set $$$FINAPInvLineInvoiceEachIncTax(pobjLine)		  =$$$FCRound($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax)
	  	set $$$FINAPInvLineInvoiceTotalIncludingTax(pobjLine) =$$$FCRound($$$FCMult($$$FCMult($$$FINAPInvLineInvoiceEach(pobjLine),fltRate),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceTotalIncludingTax)  ;SR:12478
	}
 
	quit pobjLine
 
 ;******************************************************************************************************
 ; THIS CODE IS NO LONGER IN USE, REPLACED WITH OnChangeTaxInvoice^FINAPInvLineTax2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
 
OnChangeTaxInvoice(pblnChecked=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Called from The "OnClick" javascript callback of the TaxInvoice Property of the header.
    ; Turns on taxes for this invoice.
    ;
    ; History:
    ; 19-Aug-2005	RPW		SR11983: Added code to update the discounts tax
    ; 18-Jul-2005	PO		Default blnLinesIncTax to $$$NO otherwise undefined error can occur
    ; 28-Jun-2005	JW		Removed call to PopulateDataField - unnecessary. Cleaned up.
    ; 02-Jun-2005	Paul K	SR:12520 Changed PopulateDataField to not call EventValue
    ; 02-Jun-2005	Paul K	Added 1 to 3rd param of Update Tax Call.
    ; 03-May-2005	Paul K	Added Update Tax call. SR:12231
    ; 21-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new idLine,objInvoice,idInvoice,objLine,objSupplier,blnLinesIncTax
	
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES) ; returns both simple variable and array
	;do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvTaxInvoice,pblnChecked,,.objInvoice,0)
	set $$$FINAPInvTaxInvoice(objInvoice)=pblnChecked
	set blnLinesIncTax=$$$NO
	
	if pblnChecked {
		if $$$FINAPInvSupplier(objInvoice)'="" {
			set objSupplier=$get(^FINAPSupplier(YM,$$$FINAPInvSupplier(objInvoice),1))
			set blnLinesIncTax=$$$FINAPSupplierInvoiceLinesContainTax(objSupplier)
		}
	} else {
		;set $$$FINAPInvTaxTotal(objInvoice)=0
		do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvTaxTotal,0,,.objInvoice,$$$NO)
	}
	do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvLinesIncludeTax,blnLinesIncTax,,.objInvoice,$$$NO)
	do UpdateTax(.objInvoice,$$$YES,$$$YES)
	do UpdateContainer^COMGridEdit31Interface()
	
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES,"FINAPInvCharge2") ; returns both simple variable and array
	do UpdateDiscountTax(.objInvoice,$$$YES,$$$YES,0)
	
	quit
 
 ;******************************************************************************************************
 ; THIS CODE IS NO LONGER IN USE, REPLACED WITH OnChangeLinesIncTax^FINAPInvLineTax2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
 
OnChangeLinesIncTax(pblnChecked=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Called when user clicks on the "Lines include Tax" checkbox.
    ;
    ; History:
    ; 19-Aug-2005	RPW		SR11983: Added code to update the discounts tax
    ; 28-Jun-2005	JW		Removed call to PopulateDataField - unnecessary. Cleaned up.
    ; 02-Jun-2005	Paul K	SR:12520 Changed PopulateDataField to not call EventValue
    ; 18-May-2005	Paul K	Pass in Param of 1 into UpdateTax to force use of ex tax recalc.
    ; 03-May-2005	Paul K	Created SR:12231
    ;-------------------------------------------------------------------------------
	new objInvoice
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES) ; returns both simple variable and array
	;do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvLinesIncludeTax,pblnChecked,,.objInvoice,0)
	set $$$FINAPInvLinesIncludeTax(objInvoice)=pblnChecked
 
	do UpdateTax(.objInvoice,$$$YES,$$$YES)
	do UpdateContainer^COMGridEdit31Interface()
	
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES,"FINAPInvCharge2") ; returns both simple variable and array
	do UpdateDiscountTax(.objInvoice,$$$YES,$$$YES,pblnChecked)
 
	quit
 
 ;******************************************************************************************************
 ; THIS CODE IS NO LONGER IN USE, REPLACED WITH OnChangeLineTotal^FINAPInvLineTax2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
 
OnChangeLineTotal(pblnChecked=0)
    ;-------------------------------------------------------------------------------
    ; Called when the user click on the "Lines as Totals" checkbox.
    ;
    ; History:
    ; 03-May-2005	Paul K		Created SR:12231
    ;-------------------------------------------------------------------------------
	new objInvoice
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES) ; returns both simple variable and array
	set $$$FINAPInvShowLinesasTotals(objInvoice)=pblnChecked
	do UpdateTax(.objInvoice)
	
	quit
 
 ;******************************************************************************************************
 ; THIS CODE IS NO LONGER IN USE, REPLACED WITH OnChangeTaxTotal^FINAPInvLineTax2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
 
OnChangeTaxTotal()
    ;-------------------------------------------------------------------------------
    ; Called when user changes the Total Tax amount. Should ony be able to happen if
    ; "Tax On Line" is turned off.
    ;
    ; History:
    ; 03-May-2005	Paul K		Created SR:12231
    ;-------------------------------------------------------------------------------
    new objInvoice
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES) ; returns both simple variable and array
	if ('$$$FINAPInvLinesIncludeTax(objInvoice)) && ($$$FINAPInvTaxInvoice(objInvoice)) {
		do UpdateTax(.objInvoice,1)
		do UpdateContainer^COMGridEdit31Interface()
	}
	
	quit
 
 ;******************************************************************************************************
 ; THERE ARE NO CALLS TO THIS CODE HARD-CODED IN OTHER PROCEDURES, Does not seem likely to be used anywhere else
 ;******************************************************************************************************
 
VisibleColumn(pblnLineIncTax=0,pblnShowLinesasTotals=0,pblnUseEach=0)
    ;-------------------------------------------------------------------------------
    ; Given The Includes Tax and Show Lines as Totals fields which price are we showing?
    ;
    ; Returns:ID (FINAPInvLine Field)
    ;
    ; History:
    ; 20-Jun-2005	Paul K		Created SR:12496
    ;-------------------------------------------------------------------------------
 
	new intField
	if (pblnLineIncTax)&&('pblnUseEach) {
		if pblnShowLinesasTotals {
			set intField=$$$FldFINAPInvLineInvoiceTotalIncludingTax
		} else {
			set intField=$$$FldFINAPInvLineInvoiceEachIncTax
		}
	} else {
		if pblnShowLinesasTotals {
			set intField=$$$FldFINAPInvLineInvoiceTotal
		} else {
			set intField=$$$FldFINAPInvLineInvoiceEach
		}
	}
	quit intField
 
 ;******************************************************************************************************
 ; THIS PROCEDURE IS STILL BEING USED BY OTHER FINAPInv CODE,
 ; 
 ; !! HOWEVER !! NO NEW CODE SHOULD USE THIS PROCEDURE AS IT IS BEING PHASED OUT AS IT COMBINES TOO
 ; MANY DIFFERENT AND UNRELATED FUNCTIONS
 ; 
 ; FOR SOME OF THE FUNCTIONALITY THAT THIS PROCEDURE PROVIDES SEE UpdateTax^FINAPInvLineTax2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
 
UpdateTax(&parrInvoice,pblnUpdate=0,pblnUseEach=0)
    ;-------------------------------------------------------------------------------
    ; Multiple functions:
    ;  - Sets tax related fields to enabled/disabled visible/invisible depending on current screen.
    ;  - Updates total tax if tax on lines
    ;  - Updates lines tax if tax not on lines.
    ;
    ; parrInvoice contains ***BOTH*** header (as variable) and grid contents (as array)
    ;
    ; History:
	; 10-Apr-2010	GRF		SR17177: parrInvoice/objInvoice rather than pobjInvoice;
	; 							GRID Macros
    ; 20-Jun-2005	PaulK	SR12496: Sub-routined determination of which column to
    ; 							show and add reference to price field on screen.
  	; 02-Jun-2005	PaulK	SR12520:  Changed PopulateDataField to not call EventValue
    ; 18-May-2005	PaulK	SR12360: Added Use Each Param.
    ; 06-May-2005	PaulK	SR12188: Fixed invalid tax code issue
    ; 03-May-2005	PaulK	Created
    ;-------------------------------------------------------------------------------
	new arrTaxLines,blnChecked,blnLineIncTax,blnTaxInv,curTaxAmount,fltQuantity
	new idInvoice,idLine,intField,objInvoice,objLine
	
	if '$data(parrInvoice) do GetObject^COMGridEdit31Interface(.parrInvoice,$$$YES)
 	; Contains ***BOTH*** header (as variable) and grid contents (as array)
 	set objInvoice = parrInvoice  ; SR17177
 
	set blnLineIncTax = $$$FINAPInvLinesIncludeTax(objInvoice)
	set blnTaxInv     = $$$FINAPInvTaxInvoice(objInvoice)
	set curTaxAmount  = 0
	
	if '$$$FINAPInvCostsPosted(objInvoice) {
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvTaxTotal,		'blnTaxInv||blnLineIncTax,"FINAPInv")
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvLinesIncludeTax,'blnTaxInv,"FINAPInv")
	}
	
	$$$GRIDHideShowColumns(13,( blnLineIncTax)||( $$$FINAPInvShowLinesasTotals(objInvoice)))    ;Unit Price(Ex)
	$$$GRIDHideShowColumns(30,( blnLineIncTax)||('$$$FINAPInvShowLinesasTotals(objInvoice)))    ;Total     (Ex)
	$$$GRIDHideShowColumns(31,('blnLineIncTax)||($$$FINAPInvShowLinesasTotals(objInvoice)))     ;Unit Price(Inc)
	$$$GRIDHideShowColumns(32,('blnLineIncTax)||(' $$$FINAPInvShowLinesasTotals(objInvoice)))   ;Total     (Inc)
	
	
	set intField = $$VisibleColumn(blnLineIncTax,$$$FINAPInvShowLinesasTotals(objInvoice),pblnUseEach)
	do AddReference^COMGridEdit31Interface(intField,"D","FINAPInvLine")
 
	set idInvoice = $order(parrInvoice(""))
	if idInvoice'="" {
		set idLine = ""
		for {
			set idLine = $order(parrInvoice(idInvoice,idLine))
			quit:idLine=""
			
			set objLine = $get(parrInvoice(idInvoice,idLine))
			if blnLineIncTax {
				set parrInvoice(idInvoice,idLine) = $$UpdatePriceFields(objLine,objInvoice,intField,1)
				set curTaxAmount = $$$FCAdd(curTaxAmount,$$$FCSub($$$FINAPInvLineInvoiceTotalIncludingTax(parrInvoice(idInvoice,idLine)),$$$FINAPInvLineInvoiceTotal(parrInvoice(idInvoice,idLine))))
			} else {
				if +$$CombinedTaxRate^COMTAX($$$FINAPInvLineTaxCode(objLine),$$$FINAPInvTaxLocation(objInvoice),$$$FINAPInvInvoiceDate(objInvoice),1)'=0 {
					set arrTaxLines(idLine) = $$$FINAPInvLineInvoiceTotal(objLine)
				}
			}
		}
		
		if blnLineIncTax {
			do PopulateDataField^COMUtils("FINAPInv",$$$FldFINAPInvTaxTotal,curTaxAmount,,.objInvoice,0)
		
		} else {
			do Apportion(.arrTaxLines,$$$FINAPInvTaxTotal(objInvoice))
			for {
				set idLine = $order(arrTaxLines(idLine))
				quit:idLine=""
				
				set objLine     = $get(parrInvoice(idInvoice,idLine))
				set fltQuantity = $$$FINAPInvLineInvoiceQuantity(objLine)
				if +fltQuantity=0 set fltQuantity = 1
				
				set $$$FINAPInvLineInvoiceTotalIncludingTax(objLine)=arrTaxLines(idLine)
				set $$$FINAPInvLineInvoiceEachIncTax(objLine)=$$$FCRound($$$FCDivd($$$FINAPInvLineInvoiceTotalIncludingTax(objLine),fltQuantity),"FINAPInvLine",$$$FldFINAPInvLineInvoiceEachIncTax)
				set parrInvoice(idInvoice,idLine)=objLine
			}
		}
		
	}
 
	if pblnUpdate $$$GRIDSetContents(.parrInvoice)
	quit
	
	
UpdateDiscountTax(parrInvoice,pblnUpdate=0,pblnUseEach=0,pblnIncTax=0) 
    ;-------------------------------------------------------------------------------
    ; Update the tax for the discounts
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros;
	; 							parrInvoice/objInvoice rather than pobjInvoice
    ; 10-Aug-2005	RPW		SR11983: Created
    ;-------------------------------------------------------------------------------
 	new arrGrid,fltDiscount,idInvoice,idLine,objInvoice,strYFELD,strKEY
 
 	if '$data(parrInvoice) do GetObject^COMGridEdit31Interface(.parrInvoice,$$$YES)
 	; Contains ***BOTH*** header (as variable) and grid contents (as array)
 	set objInvoice = parrInvoice  ; SR17177
 
	quit:'$data(parrInvoice)
	
	$$$GRIDGetContents(.arrGrid,"FINAPInvCharge2")
	
	quit:'$data(arrGrid)
	
	set idInvoice = $order(parrInvoice(""))
	if idInvoice'="" {
		set idLine = ""
		for {
			set idLine = $order(arrGrid(idInvoice,idLine))
			quit:idLine=""
			
			set strYFELD    = arrGrid(idInvoice,idLine)
			set strKEY      = idInvoice_","_$$ReferenceRow^COMGridEdit31Interface("FINAPInvCharge2",idLine)
			set fltDiscount = $$GetDiscountAmount^FINAPInvCharge2(strKEY,strYFELD)
			set $$$FINAPInvChargeAmount(strYFELD)=fltDiscount
			do CalculateTax^FINAPInvDiscount(idInvoice,.strYFELD,objInvoice,'pblnIncTax)
			set parrInvoice(idInvoice,idLine)=strYFELD
		}
	}
	
	do HideHeaders^FINAPInvDiscount(pblnIncTax)
	
	if pblnUpdate $$$GRIDSetContents(.parrInvoice,,"FINAPInvCharge2")
	
	quit
 
 ;******************************************************************************************************
 ; THIS CODE IS STILL IN USE BUT IS BEING PHASED OUT, SEE Apportion^FINAPInvLineTax2 FOR THE CODE THAT
 ; REPLACES THIS PROCEDURE (Minimal change made, just moved for code grouping purposes)
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
 
Apportion(&parrLines,pcurAmount)
    ;-------------------------------------------------------------------------------
    ; A generic function, given a simple array of numbers, apportion pcurAmount over those
    ; array lines, remembering the unrounded decimal.
    ; 
    ; Note: does not handle the sum of the numbers being zero. (mix of +ve and -ve)
    ; 
    ; Returns:Nothing (parrLines passed by reference)
    ;
    ; History:
    ; 10-Apr-2010	GRF		SR17177: Add "&"
    ; 14-Jun-2005	PK/PO	SR12589: switched args to FCMult as multiplier is
    ;							expected to be a plain number
    ; 26-Apr-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new idLine,curTotal,curAmount
	
	set curTotal = 0
	set idLine   = ""
	for {
		set idLine = $order(parrLines(idLine))
		quit:idLine=""
		
		set curTotal = $$$FCAdd(curTotal,parrLines(idLine))
	}
	if +curTotal'=0 {
		for {
			set idLine = $order(parrLines(idLine))
			quit:idLine=""
			
			if +parrLines(idLine)'=0 {
				set curAmount=$$$FCRound($$$FCMult(pcurAmount,$$$FCDivd(parrLines(idLine),curTotal)))
				set curTotal   = $$$FCSub(curTotal,parrLines(idLine))
				set pcurAmount = $$$FCSub(pcurAmount,curAmount)
				set parrLines(idLine) = $$$FCAdd(parrLines(idLine),curAmount)
			}
		}
	}
	quit
	
]]></Routine>
</Export>