<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPUserSessionDate" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPUserSessionDate
 
#include COMSYS
#include WWWConst
#include FINConst
 
OnBeforeButtonLine()
    ;-------------------------------------------------------------------------------
    ; Before the screen is drawn, get the current UserSessionDate and store it in VORG(1)
    ; so that the screen can read it.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 05-Jul-2005	RobertW		SR12230: Added namespace to cachetemp global
    ; 29-Jun-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
    ;
 
	new dteUserSessionDate
	
	set dteUserSessionDate=$get(^CacheTempUserSessionDate($zu(5),YBED))
	if dteUserSessionDate="" set dteUserSessionDate=+$h
	
	set VORG(1)=dteUserSessionDate
	
	quit
 
OnAfterDataFields()
 
    ;-------------------------------------------------------------------------------
    ; Get the current date and store in into the Form Information field on the
    ; current form.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 05-Jul-2005	RobertW		SR12230: Added namespace to cachetemp global
    ; 29-Jun-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
    ;
 
	do SaveFormInformation(YFORM,$get(^CacheTempUserSessionDate($zu(5),YBED),+$h))
 
	quit
 
Save()
    ;-------------------------------------------------------------------------------
    ; Get the current session date from the user entry and store it in the form field
    ; Form Information. Lastly, reload the form
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 05-Jul-2005	RobertW		SR12230: Added namespace to cachetemp global
    ; 29-Jun-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
    ;
 
	new dteUserSessionDate,objForm,strNamespace
	
	set dteUserSessionDate=$get(VORG(1),+$h)
	set strNamespace=$zu(5)
	
	set ^CacheTempUserSessionDate(strNamespace,YBED)=dteUserSessionDate
	set ^CacheTempUserSessionDate(strNamespace,YBED,"Time")=$piece($h,",",2)+$$GetExpireMinutes^FINGeneralSetup()
	
	do SaveFormInformation(YFORM,dteUserSessionDate)
		
	set Q=$$$QSave
	
	do ReloadForm^COMUtilForm()
	
	quit
	
GetGLEffectiveDate(pdteInvoiceDate)
    ;-------------------------------------------------------------------------------
    ; Calculates the effective date as follows:
    ; 
    ; Get the currently stored date, or today.
    ; 
    ; Read Finance -> Setup => General Setup, General Tab, GL Effective Date Field.
    ; 
    ; if this is 0, then return the date from above
    ; if this is 1, then return the date from above plus 1
    ; if this is 2, then return the date from above minus 1
    ; if this is 3, then return the passed in to Invoice Date.
    ;
    ; Params:
    ; pdteInvoiceDate	This is the passed in invoice date
    ;
    ; Returns:
    ; The General Ledger Effective Date
    ;
    ; History:
    ; 05-Jul-2005	RobertW		SR12230: Added namespace to cachetemp global
    ; 29-Jun-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
    new dteUserSessionDate,dteDate,intGLEffectiveDateType
	
	if $get(pdteInvoiceDate)="" set pdteInvoiceDate=+$h
	
	set dteUserSessionDate=$get(^CacheTempUserSessionDate($zu(5),YBED))
	if dteUserSessionDate="" set dteUserSessionDate=+$h
	
	set intGLEffectiveDateType=+$$GetGLEffectiveDateType^FINGeneralSetup()
		
	if intGLEffectiveDateType=0 {
		set dteDate=dteUserSessionDate
	} elseif intGLEffectiveDateType=1 {
		set dteDate=dteUserSessionDate+1
	} elseif intGLEffectiveDateType=2 {
		set dteDate=dteUserSessionDate-1
	} elseif intGLEffectiveDateType=3 {
		set dteDate=pdteInvoiceDate
	}
	
	quit dteDate
	
HasExpired()
    ;-------------------------------------------------------------------------------
    ; Determine if the user entered Sessin Date is no longer valid.
    ; 
    ; If the setup says expire in 3 minutes, this will determine if the date has expired
    ;
    ; Params:
    ;
    ; Returns:
    ; blnExpired	Whether the data has expired.
    ;
    ; History:
    ; 05-Jul-2005	RobertW		SR12230: Added namespace to cachetemp global
    ; 29-Jun-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
    ;
 
	new tmeSet,tmeNow,blnExpired,dteDate,strNamespace
	
	set blnExpired=$$$NO
	
	set strNamespace=$zu(5)
	
	if $data(^CacheTempUserSessionDate(strNamespace,YBED,"Time")) {
		set tmeSet=^CacheTempUserSessionDate(strNamespace,YBED,"Time")
		set tmeNow=$piece($h,",",2)
		
		set blnExpired=tmeSet<=tmeNow
		
		if blnExpired {
			kill ^CacheTempUserSessionDate(strNamespace,YBED)
			set dteDate=$$GetGLEffectiveDate()
			set ^CacheTempUserSessionDate(strNamespace,YBED)=+$h
			kill ^CacheTempUserSessionDate(strNamespace,YBED,"Time")
			
			do SaveFormInformation("FINAPUserSessionDate",dteDate)
		}
	}	
	
	quit blnExpired
	
SaveFormInformation(pstrYForm,pdteDate)
    ;-------------------------------------------------------------------------------
    ; Set the field Form Information to an message regarding the currently set User
    ; Session Date.
    ;
    ; Params:
    ; pstrYFORM		The form to update
    ; pdteDate		The date we are changing the Form Information field to
    ;
    ; Returns:
    ;
    ; History:
    ; 29-Jun-2005	RobertW		SR12230: Created
    ;-------------------------------------------------------------------------------
    ;
 
	new objForm
		
	set objForm=$get(^WWW120(0,pstrYForm,1))
	if objForm'="" {
		set $$$WWW120FormInformation(objForm)=$$$Text($listbuild("Fin00817",$$^WWWDATE(pdteDate)))  ;User Session Date: %1
		do Save^FINSYS("WWW120",pstrYForm,objForm,1)
	}
]]></Routine>
</Export>