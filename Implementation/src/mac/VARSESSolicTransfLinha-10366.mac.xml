<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESSolicTransfLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESSolicTransfLinha
	#include COMConst
	#include INConst
	#include WWWConst
	#include FIN
 	#include COMSYS
	#include COMGridEdit31
	#include VARSESConst
	#include VARConst
 
PostableFavoritos(pYKEY)
 
	new status 
	
	set status = $piece($get(^VARSESSolicTransf(YM,pYKEY,1)),Y,21)	
	
	if status > 0 {
		set YQ = 1_$$$Text("MED01213")  ;Essa solicitação já foi processada e não é possível inserir produtos ;use text macro;15-Sep-2008
	}
	
	quit
 
ExecuteOnClick()
	new YFORM
	
	set YFORM="VARSESSolicTransf"
	do GoToForm^COMUtilForm("VARSESItensFavoritosSolic",YBED,1,YKEY)
	quit
 
SetYOPTION()
	if YKEY="" quit 1
	if $piece($get(^WWW121(YM,YM,YLOCATION,1)),Y,24)'=1 {
		set YOPTION=1
	}
	else {
		set YOPTION=2
	}
 
	quit 1 
 
OnBlurItem(pYFELD)
	new item, gridLine, listOfItemCodes, itemJaIncluido, focusField, currentLine, seq
 
	quit:(pYFELD = "")
	set item = $P(YFELD,Y,1)
	quit:(item = "")
	
	if '$data(^INART(0, item, 1)) {
		set $PIECE(YFELD,Y,1)=""
		$$$Alert($$$Text($listbuild("MED01214",item)))  ;Item '%1' inexistente ;use text macro;15-Sep-2008
		quit
	}
	
	// Andre, 08/10/2007. Se o produto já foi incluído em outra linha, impede:
	set listOfItemCodes = $$ItensJaIncluidos()
	set date = $piece($horolog,YKOMMA,1)
	set focusField = $get(^WWWDATEN(0,date,YUSER,"VARSESSolicTransfLinha","V","FOCUSFIELD"))
	set currentLine = $extract($piece(focusField,"_",1),2,$length(focusField))
	set itemJaIncluido = 0
	for gridLine=1:1:$length(listOfItemCodes) {
		// Skips if dealing with current line of the grid:
		if (gridLine = currentLine) {
			continue
		}
		if ($piece(listOfItemCodes,Y,gridLine) = item) {
			set itemJaIncluido = 1
			quit
		}
	}
	set seq = ""
	if (itemJaIncluido) {
		// Searches for the "Seq." value of the grid line:
		for {
			set seq = $order(^WWWDATEN(0,date,YUSER,"VARSESSolicTransfLinha","V","REFERENCEROW",seq))
			quit:(seq = "")
			if ($get(^WWWDATEN(0,date,YUSER,"VARSESSolicTransfLinha","V","REFERENCEROW",seq,1)) = gridLine) {
				quit
			}
		}
		// ----
		set $PIECE(YFELD,Y,1)=""
		;$$$Alert("Item '"_item_"' já incluído em outra linha desta solicitação (Seq. = "_seq_").")
		$$$Alert($$$Text($listbuild("MED01215",item,seq))_".")  ;Item '%1' já incluído em outra linha desta solicitação (Seq. = %2) ;use text macro;15-Sep-2008
		quit
	}
	//set ^AndreDebug("listOfItemCodes")=item_"|"_listOfItemCodes_"|"_focusField_"|"_currentLine_"|"_itemJaIncluido_"|"_seq
	// Andre - fim.
 
 
	// Se produto não for autorizado, limpa o campo:
	
	set objSolicTransf = $get(^VARSESSolicTransf(YM,$piece(YKEY,",",1),1))	
	
	set LocalSolicitante = $PIECE(objSolicTransf,Y,2)	
	set LocalAbastecedor = $PIECE(objSolicTransf,Y,3)	
	set TipoTransacao = $PIECE(objSolicTransf,Y,15)
	
	if TipoTransacao = "TRANSFERENCIA" {
		if $get(^INDRPITEM(0,LocalSolicitante,item,1))="" {
			set $PIECE(YFELD,Y,1)=""
			;$$$Alert("Item '"_item_"' não autorizado para a localidade '"_YLOCATION_"' para essa operação.")
			$$$Alert($$$Text($listbuild("MED01216",item,YLOCATION))_".")  ;Item '%1' não autorizado para a localidade '%2' para essa operação ;use text macro;15-Sep-2008
			QUIT
		}			
	}	
			
	if TipoTransacao = "CONSUMO" {
		if $get(^INDRPITEM(0,LocalAbastecedor,item,1))="" {
			set $PIECE(YFELD,Y,1)=""
			;$$$Alert("Item '"_item_"' não autorizado para a localidade '"_YLOCATION_"' para essa operação.")
			$$$Alert($$$Text($listbuild("MED01216",item,YLOCATION))_".")  ;Item '%1' não autorizado para a localidade '%2' para essa operação ;use text macro;15-Sep-2008
			QUIT
		}
	}
	
	
 
	// Carrega unidade de medida:
	set $piece(YFELD,Y,3)=$piece($get(^INART(0,item,1)),Y,40)
	
	// Carrega Grupo do Produto:
	set $piece(YFELD,Y,14)=$piece($get(^INART(0,item,1)),Y,30)
	
	// Carrega estoque físico local do abastecedor:
	set $piece(YFELD,Y,8)=$$getSOHLocal(item,YLOCATION)
	set $piece(YFELD,Y,9)=$$getSOHLocal(item,$PIECE($GET(^VARSESSolicTransf(0,$piece(YKEY,YKOMMA,1),1)),Y,3))
	quit
    
CarregaEstoque(Key,Location) 
	set dado=""
	set dado=$order(^VARSESSolicTransfLinha(YM,Key,dado))
	while dado'= "" {
		set $piece(^VARSESSolicTransfLinha(YM,Key,dado,1),Y,8)=$$getSOHLocal($piece(^VARSESSolicTransfLinha(YM,Key,dado,1),Y,1),Location)
		set dado=$order(^VARSESSolicTransfLinha(YM,Key,dado))
	}
	quit
	
getSOHLocal(pItem,pLocation)
	// EF (Local)
	//do ^WWWVAR
	quit:($get(pItem) = "") $$$RecordNotSelected
	;quit $$$INDRPBESTVORonHandInventoryUM($get(^INDRPBESTVOR(YM,YLOCATION,YKEY,1)))
	//quit $$^WWWTR(0,8,$$^INARTMENGE(pItem,,pLocation,,1,0))
	quit $$^INARTMENGE(pItem,,pLocation,,1,0,1)
	
ItensJaIncluidos()
	// Andre, 08/10/2007.
	// Returns the list of item codes already included in the current 
	// Transfer Requisition (Solicitação de Transferência).
	
	new counter, date, gridLine, gridColumnForItemCode, listOfItemCodes
	
	set date = $piece($horolog,YKOMMA,1)
	set gridColumnForItemCode = 1
	set listOfItemCodes = ""
 
	// Loop on grid lines:
	set gridLine = 1
	for {
		set itemCode = $get(^WWWDATEN(0,date,YUSER,"VARSESSolicTransfLinha","V","Y"_gridLine_"_"_gridColumnForItemCode,1))
		quit:(itemCode = "")
		// If grid line was not deleted, include item code in the list of already included itens:
		if ($get(^WWWDATEN(0,date,YUSER,"VARSESSolicTransfLinha","V","KILLEDRECORD",gridLine)) '= 1) {
			set $piece(listOfItemCodes,Y,gridLine) = itemCode
		}
		set gridLine = gridLine + 1
	}
	quit listOfItemCodes
 
CarregarFavoritos(pidUsuario, pidSolicTransf)
 
	do GoToForm^COMUtilForm(YFORM, pidUsuario, ,pidSolicTransf)
 
	quit
	
OnBeforeFieldUnidadePacote(pCodProduto)
	// 08/01/2008 - Andre:
	// Carrega lista de unidades (de pacote) permitidas para o produto
	// escolhido.
	
	new unidade, objUnidade, descUnidade
	
	quit:( $get(pCodProduto) = "" )
	
	set unidade = ""
	for {
		set unidade = $order(^VARSESUnidadesDoProduto(YM,pCodProduto,unidade))
		quit:($get(unidade) = "")
		
		set objUnidade = $get(^VARSESUnidadesDoProduto(YM,pCodProduto,unidade,1))
		
		set descUnidade = $piece($get(^WWW101(YM,"EINHEIT",LANGUAGE,unidade,1)),Y,1)
		
		set ^VARSESTempListSolTrfLinUnidade(YM,YUSER,unidade,1) = descUnidade
	}
	
	quit
	
	
OnBlurUnidadePacote()
	// 08/01/2008 - Andre:
	do CalcularQtdBase
	quit
	
	
OnBlurQtdPacote()
	// 08/01/2008 - Andre:
	do CalcularQtdBase
	quit
 
CalcularQtdBase
	// 08/01/2008 - Andre:
	// Calcula a quantidade base como resultado da multiplicação da
	// quantidade de pacotes pelo fator de conversão da unidade do
	// pacote.
	
	set unidadePacote = $piece(YFELD,Y,12)
	quit:( $get(unidadePacote) = "" )
	
	set codProduto = $piece(YFELD,Y,1)
	quit:( $get(codProduto) = "" )
	
	set fatorDeConversao = $piece($get(^VARSESUnidadesDoProduto(YM,codProduto,unidadePacote,1)),Y,1)
	quit:( $get(fatorDeConversao) = "" )
	
	set qtdPacotes = $piece(YFELD,Y,13)
	quit:( $get(qtdPacotes) = "" )
	
	// Muda a quantidade base:
	set qtdBase = qtdPacotes * fatorDeConversao
	set $piece(YFELD,Y,2) = qtdBase
	
	quit
	
GetSituacao(pobjSolicLinha)
 
	new idStatus, idNivelAtendimento, strStatus, strNivelAtendimento
	
	set idStatus  = $$$VARSESSolicTransfLinhaStatus1(pobjSolicLinha)
 
	// Se o status tiver um valor, pegar a sua descrição.
	if idStatus '= "" {
		set strStatus = $piece($get(^INPARA(0, "VARSESSOLICLINHASTATUS", SPRACHE, idStatus, 1)), Y, 1)
	}
	
	// Retornar vazio se não houver nenhum status setado.
	quit:(idStatus = "") ""
 
	set idNivelAtendimento = $$$VARSESSolicTransfLinhaNiveldeAtendimento(pobjSolicLinha)
	
	// Se o nível de atendimento tiver um valor, pegar a sua descrição.
	if idNivelAtendimento '= "" {
		set strNivelAtendimento = $piece($get(^INPARA(0, "VARSESSOLICLINHAATENDIMENTO", SPRACHE, idNivelAtendimento, 1)), Y, 1)
	}
	
	// Retornar vazio se não houver nenhum nível de atendimento setado.
	quit:(idNivelAtendimento = "") ""
 
	quit strStatus_" - "_strNivelAtendimento
	
OnBeforeSave()
 
	new objSolic, idSolic
	
	set idSolic  = $$$KEY1(YKEY)
	set objSolic = $get(^VARSESSolicTransf(YM, idSolic, 1))
	
	set $$$VARSESSolicTransfLinhaStatus1(YFELD) = $$CalcularStatus(objSolic, YFELD)
	set $$$VARSESSolicTransfLinhaNiveldeAtendimento(YFELD) = $$CalcularNivelAtendimento(YFELD)
 
	quit $$$OK
	
CalcularNivelAtendimento(pobjSolicLinha)
 
	new idNivelAtendimento, fltQuantidadeAtendida, fltQuantidadeSolicitada
 
 	set fltQuantidadeAtendida   = +$$$VARSESSolicTransfLinhaQuantTransf(pobjSolicLinha)
 	set fltQuantidadeSolicitada = +$$$VARSESSolicTransfLinhaQuantidade(pobjSolicLinha)
 
	// Se a quantidade atendida for igual a zero, será 0- Não Atendida;
	if fltQuantidadeAtendida = 0 {
		set idNivelAtendimento = $$$SolicLinhaNaoAtendida
		
	} elseif (fltQuantidadeAtendida > 0) && (fltQuantidadeAtendida < fltQuantidadeSolicitada) {
 
		// Se a quantidade atendida na linha é > 0 e < quantidade solicitada, será 
		// 1- Parcialmente Atendida
		set idNivelAtendimento = $$$SolicLinhaParcialmenteAtendida
 
	} elseif fltQuantidadeAtendida >= fltQuantidadeSolicitada {
 
		// Se a quantidade atendida = quantidade solicitada, será 2- Totalmente Atendida
		set idNivelAtendimento = $$$SolicLinhaTotalmenteAtendida
	}
 
	quit idNivelAtendimento
	
RegerarStatus(pidSolic, pobjSolic)
 
	new idSolicLine, objSolicLine, strStatus
 
	$$$Order3(^VARSESSolicTransfLinha,YM,pidSolic,idSolicLine)
	
		set objSolicLine = $get(^VARSESSolicTransfLinha(YM, pidSolic, idSolicLine, 1))
		
		set $$$VARSESSolicTransfLinhaStatus1(objSolicLine) = $$CalcularStatus(pobjSolic, objSolicLine)
		set strStatus = $$$Save("VARSESSolicTransfLinha",pidSolic_$$$COMMA_idSolicLine,objSolicLine,$$$YES)
	
	$$$End
 
	quit	
	
CalcularStatus(pobjSolic, pobjSolicLinha)
 
	new blnProcessado, idStatus, fltQuantidadeCancelada, fltQuantidadeRejeitada,
		fltQuantidadeAtendida, fltQuantidadeSolicitada
 
	set blnProcessado = $$$VARSESSolicTransfProcessado(pobjSolic)
 
	// Se tiver sido processado, seta como 1- Aguardando Atendimento, senão como 0- Em Aberto.
	set idStatus = $select(blnProcessado: $$$SolicLinhaAguardandoAtendimento, 
						  'blnProcessado: $$$SolicLinhaEmAberto)
 
 	set fltQuantidadeCancelada  = +$$$VARSESSolicTransfLinhaQuantidadeCancelada(pobjSolicLinha)
 	set fltQuantidadeRejeitada  = +$$$VARSESSolicTransfLinhaQuantidadeRejeitada(pobjSolicLinha)
 	set fltQuantidadeAtendida   = +$$$VARSESSolicTransfLinhaQuantTransf(pobjSolicLinha)
 	set fltQuantidadeSolicitada = +$$$VARSESSolicTransfLinhaQuantidade(pobjSolicLinha)
 
	// Se tiver alguma quantidade rejeitada, setar o status como 2- Rejeitado.
	if fltQuantidadeRejeitada > 0 {
		set idStatus = $$$SolicLinhaRejeitada
	}
	
	// Se a quantidade atentida + a quantidade cancelada for igual a quantidade solicitada,
	// setar o status como 3- Encerrado.
	if fltQuantidadeAtendida + fltQuantidadeCancelada >= fltQuantidadeSolicitada {
		set idStatus = $$$SolicLinhaEncerrada
	}
 
	quit idStatus
 
CanCancel(pidSolic) 
	// Ver comentário da Tag SetVisaoSolicitanteAbastecedor^VARSESSolicTransf para saber os
	// detalhes de como as macros são calculadas.
	new intVisao
	set intVisao = $$GetVisaoSolicitanteAbastecedor^VARSESSolicTransf(,pidSolic)
 
 	set YQ = $select(intVisao = $$$VISAOINDISPONIVEL: $$$YQDisable("Opção disponível apenas quando o status da solicitação for 'Aguardando Atendimento'."),
 					(intVisao = $$$VISAOABASTECEDOR) || (intVisao = $$$VISAOEXTERNA): $$$YQDisable("Opção disponível apenas para o Solicitante."),
 					 $$$YES: $$$YQEnable)
	quit
	
CanReject(pidSolic)
	// Ver comentário da Tag SetVisaoSolicitanteAbastecedor^VARSESSolicTransf para saber os
	// detalhes de como as macros são calculadas.
	new intVisao
	set intVisao = $$GetVisaoSolicitanteAbastecedor^VARSESSolicTransf(,pidSolic)
 
 	set YQ = $select(intVisao = $$$VISAOINDISPONIVEL: $$$YQDisable("Opção disponível apenas quando o status da solicitação for 'Aguardando Atendimento'."),
 					(intVisao = $$$VISAOSOLICITANTE) || (intVisao = $$$VISAOEXTERNA): $$$YQDisable("Opção disponível apenas para o Abastecedor."),
 					 $$$YES: $$$YQEnable)
	quit
	
PrintJS()
	
	write !,"<script language=""javascript"">"
	
	&js<
 
	function iePrompt(message){
	   var settings = "dialogWidth: 290px; dialogHeight: 160px; center: yes; edge: raised; scroll: no; status: no";
	   return window.showModalDialog("#(YGIF)#VARSESPrompt.html", message, settings);
	}
 
	function rejectLines() {
		CallBackNow('CanRejectLines^VARSESSolicTransf');
	}		
 
	function cancelLines() {
		CallBackNow("CanCancelLines^VARSESSolicTransf");
	}
	>
	
	write !,"</script>"
 
	quit
	
GetQuantidadeAAtender(pobjSolicLinha)
 
	new fltQuantidadeRejeitada, fltQuantidadeCancelada, fltQuantidadeAtendida,
	    fltQuantidadeSolicitada, fltQuantidadeAAtender
 
	set fltQuantidadeRejeitada  = $$$VARSESSolicTransfLinhaQuantidadeRejeitada(pobjSolicLinha)
	set fltQuantidadeCancelada  = $$$VARSESSolicTransfLinhaQuantidadeCancelada(pobjSolicLinha)
	set fltQuantidadeAtendida   = $$$VARSESSolicTransfLinhaQuantTransf(pobjSolicLinha)
	set fltQuantidadeSolicitada = $$$VARSESSolicTransfLinhaQuantidade(pobjSolicLinha)
 
	set fltQuantidadeAAtender = fltQuantidadeSolicitada - fltQuantidadeAtendida - fltQuantidadeCancelada - fltQuantidadeRejeitada
 	if fltQuantidadeAAtender < 0 set fltQuantidadeAAtender = 0
 
	quit fltQuantidadeAAtender
	
UpdateMotivoCancelamento(pidSolic, pidSolicLinha, pstrMotivo)
 
	new objSolicLinha, strStatus
 
	set objSolicLinha = $get(^VARSESSolicTransfLinha(YM, pidSolic, pidSolicLinha, 1))
	set $$$VARSESSolicTransfLinhaMotivodoCancelamento(objSolicLinha) = pstrMotivo
	
	set strStatus = $$$Save("VARSESSolicTransfLinha",pidSolic_$$$COMMA_pidSolicLinha,objSolicLinha,$$$YES)
 
	quit strStatus
	
UpdateDataCancelamentoRejeicao(pidSolic, pidSolicLinha, pdata)
 
	new objSolicLinha, strStatus
 
	set objSolicLinha = $get(^VARSESSolicTransfLinha(YM, pidSolic, pidSolicLinha, 1))
	set $$$VARSESSolicTransfLinhaDataCancelamentoRejeicao(objSolicLinha) = pdata
	
	set strStatus = $$$Save("VARSESSolicTransfLinha",pidSolic_$$$COMMA_pidSolicLinha,objSolicLinha,$$$YES)
 
	quit strStatus
	
UpdateUsuarioCancelamentoRejeicao(pidSolic, pidSolicLinha, pidUsuario)
 
	new objSolicLinha, strStatus
 
	set objSolicLinha = $get(^VARSESSolicTransfLinha(YM, pidSolic, pidSolicLinha, 1))
	set $$$VARSESSolicTransfLinhaUsuarioCancelamentoRejeic(objSolicLinha) = pidUsuario
	
	set strStatus = $$$Save("VARSESSolicTransfLinha",pidSolic_$$$COMMA_pidSolicLinha,objSolicLinha,$$$YES)
 
	quit strStatus
	
UpdateMotivoRejeição(pidSolic, pidSolicLinha, pstrMotivo)
 
	new objSolicLinha, strStatus
 
	set objSolicLinha = $get(^VARSESSolicTransfLinha(YM, pidSolic, pidSolicLinha, 1))
	set $$$VARSESSolicTransfLinhaMotivodaRejeicao(objSolicLinha) = pstrMotivo
	
	set strStatus = $$$Save("VARSESSolicTransfLinha",pidSolic_$$$COMMA_pidSolicLinha,objSolicLinha,$$$YES)
 
	quit strStatus
	
PrintLogs(pidSolic, pblnHeader)
	
	new idSolicLinha, objSolicLinha, fltQuantidadeCancelada, fltQuantidadeRejeitada,
	    strMotivoCancelamento, strMotivoRejeicao, idItem, strDescricaoItem
	
	quit:(pidSolic = "")
	
	write "<FONT SIZE=""2"">"
	
	$$$Order3(^VARSESSolicTransfLinha,YM,pidSolic,idSolicLinha)
 
		set objSolicLinha = $get(^VARSESSolicTransfLinha(YM, pidSolic, idSolicLinha, 1))
		
		set fltQuantidadeCancelada = $$$VARSESSolicTransfLinhaQuantidadeCancelada(objSolicLinha)
		set fltQuantidadeRejeitada = $$$VARSESSolicTransfLinhaQuantidadeRejeitada(objSolicLinha)
		set idItem 				   = $$$VARSESSolicTransfLinhaCodigodoProduto(objSolicLinha)
		set strDescricaoItem	   = $$GetDescricao^VARSESProduto(idItem)
		set strData			  	   = $$^WWWDATE($$$VARSESSolicTransfLinhaDataCancelamentoRejeicao(objSolicLinha))
		set idUsuario		  	   = $$$VARSESSolicTransfLinhaUsuarioCancelamentoRejeic(objSolicLinha)
 
		if idUsuario '= "" {
			set objUsuario		  	   = $get(^WWW013(YM, idUsuario, 1))
			set strUsuario		  	   = idUsuario _ " - " _ $piece(objUsuario, Y, 1)
		}
		
		if fltQuantidadeRejeitada > 0 {
			
			if 'pblnHeader {
				do PrintHeader^VARSESSolicTransf()
				set pblnHeader = $$$YES
			}
			set strMotivoRejeicao = $$$VARSESSolicTransfLinhaMotivodaRejeicao(objSolicLinha)
			do PrintLogRow^VARSESSolicTransf($$$Text("MED01217"), "("_idItem_") "_strDescricaoItem, strMotivoRejeicao, strData, strUsuario)  ;Item Rejeitado ;use text macro;15-Sep-2008
		}
		
		if fltQuantidadeCancelada > 0 {
			if 'pblnHeader {
				do PrintHeader^VARSESSolicTransf()
				set pblnHeader = $$$YES
			}
			set strMotivoCancelamento = $$$VARSESSolicTransfLinhaMotivodoCancelamento(objSolicLinha)
			do PrintLogRow^VARSESSolicTransf($$$Text("MED01218"), "("_idItem_") "_strDescricaoItem, strMotivoCancelamento, strData, strUsuario)  ;Item Cancelado ;use text macro;15-Sep-2008
		}
	
	$$$End
	if pblnHeader do Stop^COMTable()
 
	quit	
]]></Routine>
</Export>