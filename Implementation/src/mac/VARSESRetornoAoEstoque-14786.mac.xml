<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESRetornoAoEstoque" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESRetornoAoEstoque
	#include COMConst
	#include INConst
	#include WWWConst
	#include FIN
	#include VARConst
	#include COMSYS
 
CanViewReport()
 	//Gustavo, 11/10/2007, ainda não implementado.. aguardando relatório de Devolução ficar pronto.
 	//Desabilita o botão de relatório caso a solicitação não tenha sido processada.
 	
 	if (YKEY) {	 		 	
		if $$$VARSESRetornoAoEstoqueFirmado(YFELD) '= 1 {
			set YQ = 1_$$$Text("MED01142")  ;O relatório só fica disponível após a devolução ter sido processado ;use text macro;15-Sep-2008
		}  	
		else { 
			set YQ = $$$YQEnable
		} 	
 	} 
	quit
 
GetLocalSolicitante()
	//Gustavo, 25/09/07
	//Pega o local solicitante na INTFR e põe na Devolução
	
	set DocumentoConsumo = $PIECE(YFELD,Y,1)
	if DocumentoConsumo '= "" {
		set LocalSolicitante = $PIECE($GET(^INTFR(YM,DocumentoConsumo,1)),"~",4)
	}
	else {
		set LocalSolicitante = ""
	}
	quit LocalSolicitante
 
OnBeforeEditAccess(pidRetornoEstoque)
	
	new objRetornoEstoque, objLocation, blnLocalArmazenagem		
 
	if (pidRetornoEstoque '= "") {
		
		set objRetornoEstoque = $get(^VARSESRetornoAoEstoque(YM,YKEY,1))
	
		if YLOCATION '= $piece(objRetornoEstoque,Y,2) && $data(^VARSESRetornoAoEstoque(YM,YKEY,1)) {
			;$$$Alert("Esse documento é do local "_$piece(objRetornoEstoque,Y,2)_"! Seu local é "_YLOCATION_". A tela ficará disponível apenas para consulta de documentos.")
			$$$Alert($$$Text($listbuild("MED01143",$piece(objRetornoEstoque,Y,2),YLOCATION))_".")  ;Esse documento é do local %1! Seu local é %2. A tela ficará disponível apenas para consulta de documentos ;use text macro;15-Sep-2008
			quit $$$NO
		}
		
		elseif $piece(objRetornoEstoque,Y,6) = 1 {
			quit $$$NO
		}
		
		elseif (($piece(objRetornoEstoque,Y,1) = "") && ($piece(objRetornoEstoque,Y,1) = 11))   {
			do ListaLocaisConsumo^VARSESINTFR
		}				
					
	} else {
		
		set objLocation 		= $get(^WWW0121(0, YM, YLOCATION, 1))
		set blnLocalArmazenagem = $$$WWW0121StorageLocn(objLocation)
		do ListaLocaisConsumo^VARSESINTFR
		 
		if 'blnLocalArmazenagem {
			
			$$$Alert($$$Text($listbuild("MED01144",YLOCATION))_".")  ;O local atual (%1) não pode realizar devoluções. A tela ficará disponível apenas para consulta de documentos ;use text macro;15-Sep-2008
			quit $$$NO
		}
	}   	
 
	quit $$$OK
 
	
OnBeforeButtonLine
	set local=$piece($get(^WWW0121(YM,YM,YLOCATION,1)),Y,8)
	kill ^COMTempList(YM,YUSER,"VARSESACESSOLOCAL")
	SET dado=""
	set dado=$order(^VARSESACESSOLOCAL(YM,local,3,dado))
	while dado'="" {
		SET supplier=$piece($get(^VARSESACESSOLOCAL(YM,local,3,dado,1)),Y,2)
		set $piece(^COMTempList(YM,YUSER,"VARSESACESSOLOCAL",supplier,1),Y,1)=$piece($get(^INLIEF(YM,supplier,1)),Y,8)
		set dado=$order(^VARSESACESSOLOCAL(YM,local,3,dado))
		}
	do ListConsumosParaSetor
	do ListConsumosParaPaciente()
	do ListProdutos
	quit
 
OnAfterDataFields(pYKEY,pYFELD)
	;------------------------------------------------------------------------------
	; Used on INLIEF, if tab is number 3, loads the grid
	;
	; Returns:
	;
	; History:
	; 14-Nov-2006	RGB		Created (SR BR014300)
	;-------------------------------------------------------------------------------
	do LoadGrid(pYKEY)
 	quit
 
ListConsumosParaSetor
	//Gustavo, 25/09/07
	//Lista os Consumos para Setor
	//Pega na INTFR só o que seja CONSUMOSETOR e já tenha sido processado.
	
	kill ^VARSESTEMPListConsumo(YM,YUSER)
	
	set Consumo = ""				
		
	for {
		
		set Consumo = $order(^INTFRs(YM,100,"CONSUMOSETOR",YLOCATION,3,Consumo))
		quit:(Consumo = "")
				
		set LocalAbastecedor = $piece($get(^INTFR(YM,Consumo,1)),"~",3)
		set LocalSolicitante = $piece($get(^INTFR(YM,Consumo,1)),"~",4)
		set Data = $piece($get(^INTFR(YM,Consumo,1)),"~",17)
			
		set ^VARSESTEMPListConsumo(YM,YUSER,Consumo,1) = LocalAbastecedor_Y_LocalSolicitante_Y_Data
		
	}
		
	quit
 
ListConsumosParaPaciente()
 
	new idxPaciente, idConsumo, objConsumo, objTempList, strStatus, idxLocal
 
	kill ^VARSESTEMPListConsumoPaciente(YM, YUSER)
	
	// Para identificar quais registros no INADJ são consumos para paciente, é só verificar se
	// o campo 'Cód. Paciente' FREE3, foi preenchido.
	$$$Order3(^INADJs,YM,101,idxPaciente)
		
		$$$Order4(^INADJs,YM,101,idxPaciente,idxLocal)
		
			continue:(idxPaciente = " ")
			$$$Order5(^INADJs,YM,101,idxPaciente,idxLocal,idConsumo)
				continue:(idxLocal '= $$$Index(YLOCATION))
		
				set objConsumo = $get(^INADJ(YM, idConsumo, 1))
				
				// Verificar se o consumo foi processado.
				if $piece(objConsumo, Y, 9) = 1 {
					
					set $$$VARSESTEMPListConsumoPacienteLocalAbastecedor(objTempList) = $piece(objConsumo, Y, 8)
					set $$$VARSESTEMPListConsumoPacienteData(objTempList)       = $piece(objConsumo, Y, 7)
					set $$$VARSESTEMPListConsumoPacientePrescricao(objTempList) = $piece(objConsumo, Y, 23)
					
					set strStatus = $$$Save("VARSESTEMPListConsumoPaciente",YUSER_$$$COMMA_idConsumo,objTempList)
				}
		
			$$$End
		$$$End
	$$$End
 
	quit
 
LoadGrid(pid="")
	;-------------------------------------------------------------------------------
	; Display the Line Items associated with this Receive.
	;
	; Returns:
	;
	; History:
	; 14-Nov-2006	RGB		Created (SR BR014300)
	;-------------------------------------------------------------------------------
	new objInvoice,YFORM,YKEY,YAUSWAHL,YFELD,objVARTRKATARequest,strData
	set YFORM="VARSESRetornoAoEstoqueLinha"
	set YFELD=""
	set YKEY=$get(pid)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=290
	set $$$COMGridEditParameterGridName(YAUSWAHL)=YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)='($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARSESRetornoAoEstoque"
	
	do ^COMGridEdit31
	
	quit
 
 
OnBeforeSave(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Saves the grid
	;
	; Returns:
	;
	; History:
	; 14-Nov-2006	RGB		Created (SR BR014300)
	;-------------------------------------------------------------------------------
	new strStatus
	set strStatus=$$$GRIDSave(pYKEY)
	if $$$ISOK(strStatus) {
	} else {
		set Q=$$$QDontSave
	}
	quit
	
OnAfterDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Calls the com grid interface for deleting a line
	;
	; Returns:
	;
	; History:
	; 14-Nov-2006	RGB		Created (SR BR014300)
	;-------------------------------------------------------------------------------
	do DELETE^COMGridEdit31Interface()
	quit
	
 
OnBeforeFormConstruction(pidField,pobjLine)
	new idItem
 
	if pidField = $$$FldINTFRLineUnit {
		set idItem = $$$INTFRLineItem(pobjLine)
		if idItem '= "" do LoadUnitOfMeasureList^INARTUtilities(idItem)
	}
 
	quit
	
ListProdutos
	kill ^COMTempList(YM,YUSER,"VARSESRetornoAoEstoqueProdutos")
	set Produto = ""
	for {
		set Produto = $order(^INDRPITEM(0,YLOCATION,Produto))
		quit:(Produto = "")
		set ^COMTempList(YM,YUSER,"VARSESRetornoAoEstoqueProdutos",Produto,1)=$piece($get(^INART(0,Produto,1)),Y,1)
	}
	QUIT
	
 
Process(pidReturn)
 
	new strStatus, objReturn, parrErrorMessage, strErrorMessage, intErrorMessage
 
	if ($get(pidReturn) = "") {
		$$$Alert($$$Text("MED01145"))  ;Erro: No. do Retorno não informado ;use text macro;15-Sep-2008
		do ReloadForm^COMUtilForm()
		quit
	}
	
	set objReturn = $get(^VARSESRetornoAoEstoque(YM, pidReturn, 1))
	if (objReturn = "") {
		$$$Alert($$$Text($listbuild("MED01146",pidReturn)))  ;Erro: não encontrado retorno de no. '%1' ;use text macro;15-Sep-2008
		do ReloadForm^COMUtilForm()
		quit
	}
 
	IF $PIECE(^VARSESRetornoAoEstoque(0,pidReturn,1),Y,6)=1 {
		$$$Alert($$$Text($listbuild("MED01147",pidReturn)))  ;Erro: documento de Retorno '%1' já processado ;use text macro;15-Sep-2008
		do ReloadForm^COMUtilForm()
		quit
	}
	
	if $$IsDevolucaoComDocumento(pidReturn) { //Gustavo@18/06/2008 - pular validação caso a devolução seja sem documento.
		
		if '$$CanDevolverItens(pidReturn, .parrErrorMessage) {
 
			set strErrorMessage = ""
			$$$Order1(parrErrorMessage,intErrorMessage)
		
				set strErrorMessage = strErrorMessage _ parrErrorMessage(intErrorMessage)_"\n"
		
			$$$End
		
			$$$StartScript()
			write "alert('"_strErrorMessage_"');"
			$$$EndScript()
			do ReloadForm^COMUtilForm()
			quit
		}
	}
	
	set strStatus = $$Transaction^COMTransaction("ProcessTxn^VARSESRetornoAoEstoque("""_pidReturn_""","""_objReturn_""")", $$$YES)
	
	if $$$ISOK(strStatus) {
		$$$Alert($$$Text("MED01148"))  ;Devolução ao Estoque processado com sucesso! ;use text macro;15-Sep-2008
		
		do ReloadForm^COMUtilForm()
	}
 
	quit
 
ProcessTxn(pidReturn,pobjReturn)
 
	new RetornoAoEstoqueLinha, strStatus, idRetornoEstoqueLinha, strItems, idItem, fltQuantidadeADevolver, idLocation, objItem
	
	IF pidReturn="" {
		quit "0~"_$$$Text("MED01149")  ;Erro: no. do documento de Retorno não informado ;use text macro;15-Sep-2008
	}
	set RetornoAoEstoqueLinha=""
	for {
		set RetornoAoEstoqueLinha = $order(^VARSESRetornoAoEstoqueLinha(0,YKEY,RetornoAoEstoqueLinha))
		quit:(RetornoAoEstoqueLinha = "")
		set objVARSESRetornoAoEstoqueLinha = $get(^VARSESRetornoAoEstoqueLinha(YM,YKEY,RetornoAoEstoqueLinha,1))
		continue:(objVARSESRetornoAoEstoqueLinha = "")
		continue:(+$$$VARSESRetornoAoEstoqueLinhaQuantidadeDevolvida(objVARSESRetornoAoEstoqueLinha) = 0)
		
		set VORG(1)=""
		set VORG(2)=""
		set VORG(3)=""
		set VORG(4)=""
		set VORG(5)=""
		set VORG(6)=""
		set VORG(7)=""
		set VORG(8)=""
		set VORG(9)=""
		set VORG(10)=""
		set VORG(11)=""
		set VORG(13)=""
		set VORG(14)=""
		set VORG(19)=""
		set VORG(100)=""
		set VORG(1)=$piece(pobjReturn,Y,2) //"" PIECE 2
		set VORG(2)=$piece(pobjReturn,Y,5) //"" PIECE 5
		set VORG(3)=$piece(pobjReturn,Y,4) //"" piece 4
		set VORG(4)=$piece(objVARSESRetornoAoEstoqueLinha,Y,1) //="" line piece 1
		set objItem = $$GetItem^INART(VORG(4))
		set VORG(5)=$piece(objItem,Y,140) ; puts the old average price in as if it were price of *this* receipt
		; why? because this routine uses INWEFREI code which updates average price. We don't want that effect here
		; BUT THIS IS A KLUDGE ... really we shouldn't be using INWEFREI for return from consumption!
		; (Perhaps we can refactor out some of the common parts)
	
		set VORG(6)=$piece(objVARSESRetornoAoEstoqueLinha,Y,2) //"" line piece 2
		set VORG(7)=""
		set VORG(8)=""
		set VORG(9)=$piece(pobjReturn,Y,3) //"" piece 3
		set VORG(10)=""
		set VORG(11)=""
		set VORG(13)=""
		set VORG(14)=""
		set VORG(19)=""
		set VORG(100)=""
		// Andre, 21/05/2008: Now, routine Run^VARSESINWEFREI returns status:
		//do Run^VARSESINWEFREI
		set strStatus = $$Run^VARSESINWEFREI()
	}
	// Andre, 21/05/2008: checking strStatus:
	if ( '$$$ISOK(strStatus) ) {
		quit strStatus
	}
	
	;set $PIECE(^VARSESRetornoAoEstoque(0,YKEY,1),Y,6)=1
	set $$$VARSESRetornoAoEstoqueFirmado(pobjReturn) = $$$YES
	set strStatus = $$$Save("VARSESRetornoAoEstoque",pidReturn,pobjReturn,$$$YES)
	
	// Montar o ajuste de estoque para o MedTrak;
	set strItems = ""
	$$$Order3(^VARSESRetornoAoEstoqueLinha,YM,pidReturn,idRetornoEstoqueLinha)
 
		set objRetornoEstoqueLinha = $get(^VARSESRetornoAoEstoqueLinha(YM, pidReturn, idRetornoEstoqueLinha, 1))
		set idItem				   = $$$VARSESRetornoAoEstoqueLinhaCodigodoProduto(objRetornoEstoqueLinha)
		set fltQuantidadeADevolver = $$$VARSESRetornoAoEstoqueLinhaQuantidadeDevolvida(objRetornoEstoqueLinha)
		
		if fltQuantidadeADevolver > 0 {
			if strItems '= "" set strItems = strItems_"|"
			set strItems = strItems_idItem_"~"_(+fltQuantidadeADevolver)
		}
 
	$$$End
	
	set idLocation = $$$VARSESRetornoAoEstoqueLocalAbastecedor(pobjReturn)
	do AjustarEstoqueClient^VARSESIntegration($horolog, idLocation, strItems, pidReturn)
	
	quit $$$YES
	
 
onAfterSaveHook()
 
	new strStatus
	set strStatus = $$$OK
 
	if ($data(^VARSESRetornoAoEstoqueLinha(YM,YKEY)) '= 10) {
 
		//Grava as linhas
		if $$$VARSESRetornoAoEstoqueNoSolicitacao(YFELD) '= "" {
			set strStatus = $$CopyConsumoSetorLinhas($$$VARSESRetornoAoEstoqueNoSolicitacao(YFELD),YKEY)
 
		} elseif $$$VARSESRetornoAoEstoqueNoConsumoparaPaciente(YFELD) '= "" {
			set strStatus = $$CopyConsumoPacienteLinhas($$$VARSESRetornoAoEstoqueNoConsumoparaPaciente(YFELD),YKEY)
		}		
	}
	
	quit strStatus
	
CopyConsumoPacienteLinhas(pidConsumo, pidRetornoAoEstoque)
 
	new idConsumoLinha, objConsumoLinha, objRetornoAoEstoqueLinha, strStatus, fltQuantidadeAtendida
 
	set strStatus = $$$OK
	$$$Order3(^INADJLine,YM,pidConsumo,idConsumoLinha)
	
		set objConsumoLinha = $get(^INADJLine(YM, pidConsumo, idConsumoLinha, 1))
	
		set fltQuantidadeAtendida = $piece(objConsumoLinha, Y, 4)
		if (fltQuantidadeAtendida < 0) { set fltQuantidadeAtendida = fltQuantidadeAtendida * (-1) }
		set $$$VARSESRetornoAoEstoqueLinhaCodigodoProduto(objRetornoAoEstoqueLinha)     = $piece(objConsumoLinha, Y, 1)
		set $$$VARSESRetornoAoEstoqueLinhaUnidadedeEstoque(objRetornoAoEstoqueLinha)    = $piece(objConsumoLinha, Y, 5)
		set $$$VARSESRetornoAoEstoqueLinhaQuantidadeConsumida(objRetornoAoEstoqueLinha) = fltQuantidadeAtendida
 
		set strStatus = $$$Save("VARSESRetornoAoEstoqueLinha",pidRetornoAoEstoque_$$$COMMA_idConsumoLinha,objRetornoAoEstoqueLinha,$$$YES) 
		quit:($$$ISERR(strStatus))
	$$$End
 
	quit strStatus
	
CopyConsumoSetorLinhas(pidTransf,pidTFR)
	// Copia as linhas da Transferência para a Devolução.
	new strStatus,idTransfLinha,objTransfLinha,objVARSESRetornoAoEstoqueLinha,idOutraTFR,listOutrasTFR
 
	set strStatus = $$$YES
	
	quit:(pidTransf = "") $$$YES
	quit:(pidTFR = "") $$$YES
 
	set idTransfLinha = ""
	for {
		set idTransfLinha = $order(^INTFRLine(YM,pidTransf,idTransfLinha))
		quit:(idTransfLinha = "")
 
		set objTransfLinha = $get(^INTFRLine(YM,pidTransf,idTransfLinha,1))
		quit:(objTransfLinha = "")				
		
		set objVARSESRetornoAoEstoqueLinha = ""
		set $$$VARSESRetornoAoEstoqueLinhaCodigodoProduto(objVARSESRetornoAoEstoqueLinha)     = $$$INTFRLineItem(objTransfLinha)
		set $$$VARSESRetornoAoEstoqueLinhaUnidadedeEstoque(objVARSESRetornoAoEstoqueLinha)    = $$$INTFRLineUnit(objTransfLinha)
		set $$$VARSESRetornoAoEstoqueLinhaQuantidadeConsumida(objVARSESRetornoAoEstoqueLinha) = $$$INTFRLineQuantity(objTransfLinha)		
		
		set strStatus = $$$Save("VARSESRetornoAoEstoqueLinha",pidTFR_$$$COMMA_idTransfLinha,objVARSESRetornoAoEstoqueLinha,$$$YES) 
		quit:($$$ISERR(strStatus))
	}
	quit strStatus
	
CanDevolverItens(pidRetornoEstoque, &pstrErrorMessage)
 
	new idRetornoEstoqueLinha, objRetornoEstoqueLinha, idItem, arrItensDevolvidos, arrItensADevolver, fltQuantidadeADevolver,
		objRetornoEstoque, idConsumoSetor, fltQuantidadeJaDevolvida, idx, idDevolucao, idDevolucaoLinha, blnCanDevolverItens
 
	set blnCanDevolverItens	   = $$$YES
	set objRetornoEstoque 	   = $get(^VARSESRetornoAoEstoque(YM, pidRetornoEstoque, 1))
	set idConsumoSetor 	  	   = $$$VARSESRetornoAoEstoqueNoSolicitacao(objRetornoEstoque)	
	
	do GetItensADevolver(pidRetornoEstoque, .arrItensADevolver)
 
	$$$Order3(^VARSESRetornoAoEstoqueLinha,YM,pidRetornoEstoque,pidRetornoEstoqueLinha)
 
		set objRetornoEstoqueLinha = $get(^VARSESRetornoAoEstoqueLinha(YM, pidRetornoEstoque, pidRetornoEstoqueLinha, 1))
		set idItem				   = $$$VARSESRetornoAoEstoqueLinhaCodigodoProduto(objRetornoEstoqueLinha)
		set fltQuantidadeConsumida = $$GetQuantidadeConsumida(pidRetornoEstoque, idItem)
		
		kill arrItensDevolvidos
		set fltQuantidadeJaDevolvida = $$GetQuantidadeJaDevolvida(idConsumoSetor, idItem, .arrItensDevolvidos)
		
		// Verificando se a quantidade a ser devolvida é maior que o que foi consumido considerando o que já foi devolvido.
		if (fltQuantidadeJaDevolvida + arrItensADevolver(idItem)) > fltQuantidadeConsumida {
			
			set pstrErrorMessage(01) = $$$Text($listbuild("MED01150",idItem))  ;Limite máximo para devolução excedido para o item: %1 ;use text macro;15-Sep-2008
			set pstrErrorMessage(02) = ""
			set pstrErrorMessage(03) = $$$Text($listbuild("MED01151",fltQuantidadeConsumida))  ;Quantidade consumida: %1 ;use text macro;15-Sep-2008
			set pstrErrorMessage(04) = ""
			set pstrErrorMessage(05) = $$$Text($listbuild("MED01152",arrItensADevolver(idItem)))  ;Quantidade a devolver: %1 ;use text macro;15-Sep-2008
			set pstrErrorMessage(06) = ""
			
			if $data(arrItensDevolvidos) = 10 {
				set pstrErrorMessage(07) = $$$Text("MED01153")_":"  ;Quantidades já devolvidas ;use text macro;15-Sep-2008
				set pstrErrorMessage(08) = ""
			}
			
			set idx = 1
			$$$Order1(arrItensDevolvidos,idDevolucao)
			
				$$$Order2(arrItensDevolvidos,idDevolucao,idDevolucaoLinha)
					
					;set pstrErrorMessage(90 + idx) = "Devolução: "_idDevolucao_", Linha: "_idDevolucaoLinha_", Quantidade: "_arrItensDevolvidos(idDevolucao, idDevolucaoLinha)
					set pstrErrorMessage(90 + idx) = $$$Text("MED01154")_": "_idDevolucao_", "_$$$Text("MED01155")_": "_idDevolucaoLinha_", "_$$$Text("MED01156")_": "_arrItensDevolvidos(idDevolucao, idDevolucaoLinha)  ;use text macro;15-Sep-2008
					set idx = idx + 1
				
				$$$End
			
			$$$End
	
			set blnCanDevolverItens	   = $$$NO
			quit
		}
 
	$$$End
 
	quit blnCanDevolverItens
 
GetItensADevolver(pidRetornoEstoque, &parrItens)
 
	new pidRetornoEstoqueLinha, idItem, objRetornoEstoqueLinha, fltQuantidadeADevolver
	
	$$$Order3(^VARSESRetornoAoEstoqueLinha,YM,pidRetornoEstoque,pidRetornoEstoqueLinha)
	
		set objRetornoEstoqueLinha = $get(^VARSESRetornoAoEstoqueLinha(YM, pidRetornoEstoque, pidRetornoEstoqueLinha, 1))
		set idItem				   = $$$VARSESRetornoAoEstoqueLinhaCodigodoProduto(objRetornoEstoqueLinha)
		set fltQuantidadeADevolver = $$$VARSESRetornoAoEstoqueLinhaQuantidadeDevolvida(objRetornoEstoqueLinha)
		
		set parrItens(idItem) = +$get(parrItens(idItem)) + fltQuantidadeADevolver
	
	$$$End
 
	quit
	
GetQuantidadeJaDevolvida(pidConsumoSetor, pidItem, &parrDetalhes)
 
	new idxConsumoSetor, idRetornoEstoque, fltTotalQuantidadeDevolvida, idRetornoEstoqueLinha, objRetornoEstoqueLinha,
		fltQuantidadeDevolvida
 
	set idxConsumoSetor = $$^WWWUMLAU(pidConsumoSetor, 1)
	set fltTotalQuantidadeDevolvida = 0
 
	$$$Order5(^VARSESRetornoAoEstoques,YM,2,$$$YES,idxConsumoSetor,idRetornoEstoque)
	
		$$$Order5(^VARSESRetornoAoEstoqueLinhas,YM,1,pidItem,idRetornoEstoque,idRetornoEstoqueLinha)
		
			set objRetornoEstoqueLinha = $get(^VARSESRetornoAoEstoqueLinha(YM, idRetornoEstoque, idRetornoEstoqueLinha, 1))
			set fltQuantidadeDevolvida = $$$VARSESRetornoAoEstoqueLinhaQuantidadeDevolvida(objRetornoEstoqueLinha)
			set fltTotalQuantidadeDevolvida = fltTotalQuantidadeDevolvida + fltQuantidadeDevolvida
			
			set:(fltQuantidadeDevolvida > 0) parrDetalhes(idRetornoEstoque, idRetornoEstoqueLinha) = fltQuantidadeDevolvida
		
		$$$End
	
	$$$End	
	
	quit fltTotalQuantidadeDevolvida
	
GetQuantidadeConsumida(pidRetornoEstoque, pidItem)
 
	new fltQuantidadeConsumida, fltTotalQuantidadeConsumida, idRetornoEstoqueLinha, objRetornoEstoqueLinha
 
	set fltTotalQuantidadeConsumida = 0
	$$$Order5(^VARSESRetornoAoEstoqueLinhas,YM,1,pidItem,pidRetornoEstoque,idRetornoEstoqueLinha)
	
		set objRetornoEstoqueLinha      = $get(^VARSESRetornoAoEstoqueLinha(YM, pidRetornoEstoque, idRetornoEstoqueLinha, 1))
		set fltQuantidadeConsumida      = $$$VARSESRetornoAoEstoqueLinhaQuantidadeConsumida(objRetornoEstoqueLinha)
		set fltTotalQuantidadeConsumida = fltTotalQuantidadeConsumida + fltQuantidadeConsumida
	
	$$$End
 
	quit fltTotalQuantidadeConsumida
 
OnBeforeDeleteHook(pidRetornoAoEstoque)
 
	do DeleteLines^VARSESRetornoAoEstoqueLinha(pidRetornoAoEstoque)
 
	quit $$$OK
	
CanProcess(pYKEY) 	
	new objDevolucao, ConsumoSetor, ConsumoPaciente, Status
	
	if (pYKEY '= "") {
	
		set objDevolucao 	= $get(^VARSESRetornoAoEstoque(YM,pYKEY,1))
		set ConsumoSetor 	= $piece(objDevolucao,Y,1)
		set ConsumoPaciente = $piece(objDevolucao,Y,11)
		set Status 		 	= $piece(objDevolucao,Y,6)
	
		if ((ConsumoSetor = "") && (ConsumoPaciente = "")) {
			do VerificaProdutosRepetidos(pYKEY)
		}
	
		if Status > 0 { 
			set YQ = 1_$$$Text("MED01157")  ;Registro já processado ;use text macro;15-Sep-2008			
		}	
	}
	
	quit
		
IsDevolucaoComDocumento(pidReturn)
 
	new objDevolucao
	
	set objDevolucao = $get(^VARSESRetornoAoEstoque(YM,pidReturn,1))
	
	if (($piece(objDevolucao,Y,1) = "") && ($piece(objDevolucao,Y,11) = ""))  {
		quit $$$NO
	}
	
	quit $$$YES	
	
OnBeforeSaveHook(YFELD)
	
	new ConsumoSetor, ConsumoPaciente, LocalSolicitante
	
	set ConsumoSetor 	 = $$$VARSESRetornoAoEstoqueNoSolicitacao(YFELD)
	set ConsumoPaciente  = $$$VARSESRetornoAoEstoqueNoConsumoparaPaciente(YFELD)
	set LocalSolicitante = $$$VARSESRetornoAoEstoqueLocalSolicitante(YFELD)
	
	if ((LocalSolicitante = "") && (ConsumoSetor = "") && (ConsumoPaciente = "")) {	
		$$$Alert($$$Text("MED01158")_".")  ;Favor informar o Local Solicitante, já que não foi informado um Consumo para Setor ou Consumo para Paciente ;use text macro;15-Sep-2008
		quit $$$NO
	}
	
	quit $$$YES
	
 
VerificaProdutosRepetidos(pYKEY)
	;-------------------------------------------------------------------------------
    ; Validate if there are any repeated items in the grid.
    ;
    ; History:
    ; 19-Jun-2008	Gustavo Fiuza	Created
    ;------------------------------------------------------------------------------- 	
 	
	new LineItem, objLineItem, NoProduto, ArrayProdutos, Count,
		ExisteRepeticao, ArrayRepetidos, ArrayMensagens, cnt, ArrayLinhas, 
		Count1, LineItem1, Rec, Count2, Count3, NoDocumento
	
	set LineItem = ""
	set ArrayProdutos = ""
	set Count = 0
	set ArrayRepetidos = ""
	set ExisteRepeticao = 0
	set Count3 = 0
	set NoDocumento = $piece(pYKEY,",",1)
	
	for {
   		set LineItem = $order(^VARSESRetornoAoEstoqueLinha(YM,NoDocumento,LineItem))            
   		quit:(LineItem = "")
   	
   		set Count = Count + 1
   		
    	set objLineItem = $get(^VARSESRetornoAoEstoqueLinha(YM,NoDocumento,LineItem,1))
    				    			
    	set NoProduto = $piece(objLineItem,Y,1)    	    	    	
 
		if ($find(ArrayProdutos,NoProduto) && (Count > 1)) {
			
			set ExisteRepeticao = 1
			
			if '$find(ArrayRepetidos,NoProduto) {
				if Count3 = 0 {
					set ArrayRepetidos = NoProduto
				}
				else { 
					set ArrayRepetidos = ArrayRepetidos_";"_NoProduto
				}
				set Count3 = Count3 + 1
			}											
		}  
		
		set ArrayProdutos = ArrayProdutos_";"_NoProduto_"("_Count_")"
		 		
	}
	
	set ArrayMensagens = ""
	
 	for cnt=1:1:$length(ArrayRepetidos) {
		
		set Rec = $piece(ArrayRepetidos,";",cnt)
		quit:(Rec = "")
			
		set Count1 = 0
		set LineItem1 = ""
		set ArrayLinhas = ""
		set Count2 = 0
		
		for {
   			set LineItem1 = $order(^VARSESRetornoAoEstoqueLinha(YM,NoDocumento,LineItem1))            
   			quit:(LineItem1 = "")
   			
   			set Count1 = Count1 + 1
   		
    		set objLineItem = $get(^VARSESRetornoAoEstoqueLinha(YM,NoDocumento,LineItem1,1))
    				    			
    		set NoProduto = $piece(objLineItem,Y,1)
    	
    		if $piece(ArrayRepetidos,";",cnt) = NoProduto {
	  		  	if Count2 = 0 {	
	  		  		set ArrayLinhas = LineItem1
	  		  	}
	  		  	else { 
	  		  		set ArrayLinhas = ArrayLinhas_", "_LineItem1 
	  		  	}
	  		  	set Count2 = Count2 + 1
    		}    			
		 	
		}
		
		set Mensagem = $$$Text("MED01009")_" "_Rec_" -> "_$$$Text("MED01110")_" "_ArrayLinhas  ;Produto -> Seq. ;use text macro;15-Sep-2008
		set ArrayMensagens = ArrayMensagens_$char(10)_Mensagem
		 		
 	}
	
	if ExisteRepeticao = 1 {		
		set YQ = 1_$$$Text("MED01159")_" "_         ;Não é possível processar porque existem produtos repetidos na devolução. ;use text macro;15-Sep-2008
		            $char(10)_""_ArrayMensagens_""
		quit			
	}  			   		
 
	quit
	
]]></Routine>
</Export>