<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARGerarTSU" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARGerarTSU
	// TSU Utilities
	quit

#include INConst
#include WWWConst
#include COMSYS


Process(pidUser,pblnVerbose=0)
	;-------------------------------------------------------------------------------
	; Create and Print TSU - INLP data
	;   called from form VARGerarTSU -> OnAfterSave call
	;
	; Inputs: 
	;	pidUser		-	No of TSU's
	;	pblnVerbose -	Display created TSU on screen
	;
	; Returns: none
	;
	; History:
	; 20-Jun-2011	PPP		SR17717: Created
	;-------------------------------------------------------------------------------
	new strStatus
	new arrTSU

	set Q         = $$$QSave
	set strStatus = $$$OK
	//set:'$get(VORG(1)) VORG(1)=1
	
	if $get(VORG(1))="" set strStatus = $$$MakeStatus("219")							//Wrong Data Input
	if $get(pidUser)="" set strStatus = $$$MakeStatus("SALCST0011")						//Incorrect User ID
	
	if $$$ISOK(strStatus)	{
		if '$data(^WWW013(0,pidUser)) set strStatus = $$$MakeStatus("SALCST0011")		//Incorrect User ID

		if $$$ISOK(strStatus)	{
			$$$VAR
	
			set idLoc = $$$WWW013HomeLocation($get(^WWW013(0,pidUser,1)))
			if idLoc="" set strStatus = $$$MakeStatus("IN01281")						//Location Required
	
			if $$$ISOK(strStatus)	{
				set strStatus = $$Create(idLoc,$get(VORG(1)),.arrTSU, pblnVerbose)
			}
		}
		
	}

  	if $$$ISOK(strStatus) {
	  	
	  	//Print the TSU that have been created
	  	do PrintTSU(.arrTSU)
	  	
	  	// Insert the created TSU's in a temp list to be displayed on the screen later
	  	k ^VARTempTSU(YBED)
	  	merge ^VARTempTSU(YBED) = arrTSU
	  	
	 	do ^WWWFORM
	 	
 	} else {
	 	do ReturnError^COMUtilError(strStatus)
 	}
 	
 	$$$YQHandler(strStatus)
	
	//set ^zzPP($i(^zzPP))=strStatus
	
	quit


Create(pidLocation, pintNumber = 1, &parrTSU, pblnVerbose = 0)
	;-------------------------------------------------------------------------------
	; Creation of TSU - INLP data
	;  
	; for Next Number definition the following needs to be setup
	; ^WWW1280(0,"INLP",idLoc,1)="LOCATION-000000~~~"
	;
	; Inputs: 
	;	pidLocation		-	Location of TSU's
	;	pintNumber		-	No of TSU's to be created
	;
	; Returns: strStatus
	;
	; History:
	; 08-Jun-2011	PPP		SR17717: Created
	;-------------------------------------------------------------------------------
	new strStatus
	new idRecStorage
	new intCnt
	new idStorage
	new objStorage
	new idKey
	new enumStatus
	
	set strStatus = $$$OK
	set YLOCATION = $get(pidLocation)
	
	TSTART
	
	if $get(YLOCATION)'=""	{
	
		set idRecStorage = $$$WWW0121ReceiptStorage($get(^WWW0121(0,0,pidLocation,1)))
		
		if idRecStorage = ""	{
			
			set strStatus = $$$MakeStatus("IN01076",pidLocation)	//Default Receipt Storage not found for location %1
			
		} else {

			set enumStatus = $order(^INLPStatuss(0,1,$$$YES,""))   	//Default Status
			
			if enumStatus="" {

				set strStatus = $$$MakeStatus("IN01300") 			//"Status code not specified and no default code present."
			
			} else {

				for intCnt=1:1:pintNumber	{
		
					quit:$$$ISERR(strStatus)
				
					for	{
						set idStorage = $$^WWWNEXT("INLP")
						quit:'$data(^INLP(0,pidLocation,idStorage))
					}
				
					if idStorage '= "" {
						set idKey = pidLocation_","_idStorage
				
						set $$$INLPRemarks(objStorage)				= "TSU "_idStorage
						set $$$INLPTemporaryStorageUnit(objStorage)	= 1
						set $$$INLPPhysical(objStorage)				= idRecStorage
					
						set strStatus = $$$Save("INLP",idKey,objStorage,$$$YES)
					
						write:$get(pblnVerbose) !,"Creating Storage "_idStorage_" Status : "_strStatus
						
						if $$$ISOK(strStatus) {
							set parrTSU(idStorage)=""
						}
					
					}

				}
			
			}

		}
	
	} else {
	
		set strStatus = $$$MakeStatus("Fin00652")	//No location passed in.
	
	}
	
	if $$$ISOK(strStatus)	{
		
		if $TLEVEL>0	{
			TCOMMIT
		}
		
	} else {
	
		TROLLBACK
	
	}
	
	quit strStatus


PrintTSU(&parrTSU)
	;-------------------------------------------------------------------------------
	; Print the Created TSU - INLP data
	;  
	;
	; Inputs: 
	;	parrTSU		-	Array of TSU's
	;
	; Returns: strStatus
	;
	; History:
	; 20-Jun-2011	PPP		SR17717: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK

	set idTSU = ""
	
	for	{
		set idTsU = $order(parrTSU(idTSU))
		quit:idTSU=""
	
		/*
			///////  PRINT BARCODES FOR TSU ////////////////
			set strStatus = PrintTSUBarcode(idTSU)

		*/

		quit:$$$ISERR(strStatus)
	}
		
	quit strStatus
	
DisplayPallets(pidUser)
	;-------------------------------------------------------------------------------
	; Display the TSU's created on the screen
	;   called from form VARGerarTSU -> OnAfterDataFields call
	;
	; Inputs: 
	;	pidUser		-	User logged in
	;
	; Returns: none
	;
	; History:
	; 05-Sep-2011	Carlos Bergfeld		Created
	;-------------------------------------------------------------------------------
	new lstHeader, count, idTSU
	
	// display the TSU's created in a COMTable
	if ('$data(^VARTempTSU(pidUser))) quit
	set lstHeader = ""
	set lstHeader = $listbuild("#","Palete")
	if $$Start^COMTable(lstHeader,"Paletes gerados:") {
		set count = 0
		
		set idTSU = ""
		for {
			set idTSU = $order(^VARTempTSU(pidUser,idTSU))
			if idTSU = "" quit
			
			// insert TSU number in COMTable
			set count = $i(count)
			do NewLine^COMTable()
			do InsertCell^COMTable(count,,,,"RIGHT")
			do InsertCell^COMTable(idTSU,,,,"CENTER")		
			do EndLine^COMTable()
		}
		
		// the temp global has to be cleaned after used
		k ^VARTempTSU(pidUser)
		
		do Stop^COMTable()
	}
	
	
	quit


]]></Routine>
</Export>