<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INAUFTEILE" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INAUFTEILE(YAUFTRAG,YPOS)
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		TEILE NEUAUFBAU AUFTRAGSPOSITION
	;	AUFBAUEN DER TEILE / AUCH EINSPRUNG VON AUSSEN
	;		DIVIDE RECONSTRUCTION ORDERLINE
	;   DEVELOP THE PARTS/ALSO RE-ENTRY POINT FROM THE OUTSIDE
	; 
	; 	Create ^INAUFPT  (period-delimited string as single key)
	; 	  from ^INAUFPXL (several comma-delimited keys)
	; 
	; Called by :
	;	INAUF				INAUFANLAGE			INAUFHKNEU			INAUFPT
	;	INAUFPTBINF			INAUFLIST1			INAUFTEILEKOST		INFERTPLATZ
	;	INPROPLANDR			INPROPRODU			INPROPRODU2			INPROPROHTML
	;	INSHOPSU			INVORKALK			INWEAUFPUM			INWEFERTUM
	;	and					INSERV096			INSERV097
	; 
	; Inputs : 
	;	YAUFTRAG	AUFTRAG		Order
	;	YPOS		POSITION	Order Line
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 31-Jul-2006	GRF		Doco; Naked References; use idDRP
	; 21-Jul-2005	GRF		SR13024 : Doco
	; 08.12.2000	DT		Created
	;-------------------------------------------------------------------------------
	NEW ART,BETRIEB,DATUM,idDRP,SATZ,SUCH,SUCH1,YYI
	
	QUIT:'$DATA(YAUFTRAG)
	QUIT:'$DATA(YPOS)
	QUIT:YAUFTRAG=""
	QUIT:YPOS=""
	
	;+++++++++++++++++++++++++++++++++++++++
	;	SATZ		objINAUFP
	;	SUCH1		objINAUFPXL		^INAUFPXL(YM,idOrder,idOrdLine,PartNo[,Sub-PartNo[,Sub-Sub-PartNo[,...] ] ])
	;	
	; Variables
	;	SUCH(0)		Number of levels in SUCH(1)
	;	SUCH(1)		INAUFPXL Part Keys : PartNo[,Sub-PartNo[,Sub-Sub-PartNo[,...] ] ]
	;	SUCH(2)		INAUFPT Part Key   : Period-delimited string
	;	SUCH(3)		Quantity
	;	SUCH("M")		
	;+++++++++++++++++++++++++++++++++++++++
	
	SET SATZ=$get(^INAUFP(YM,YAUFTRAG,YPOS,1))          ; 31-Jul-2006 : if not defined will equal "" so no need for $data and default of null
	
	KILL ^INAUFPT(YM,YAUFTRAG,YPOS)  ;NEU AUFBAUEN ;recent construct 
	
	SET SUCH="^INAUFPXL("_""""_YM_""""_","_""""_YAUFTRAG_""""_","_YPOS_")"
	FOR  DO  QUIT:SUCH=""
	. NEW ART
	. SET SUCH=$QUERY(@SUCH)
	. ;$PIECE(SUCH,",",2)'=YAUFTRAG SET SUCH="" QUIT   ;07.06.04;FAN;25794
	. IF $TR($PIECE(SUCH,",",2),"""")'=YAUFTRAG SET SUCH="" QUIT    ;07.06.04;FAN;25794; WENN alphanumerischen Auftragsnummern SOLL INAUFPZ AUCH AUFBAUEN.
	. IF $PIECE(SUCH,",",3)>YPOS SET SUCH="" QUIT  ;KEINE WEITEREN  ;TYBD;27.01.03 ;no more
	. IF $PIECE(SUCH,",",3)=YPOS DO
	. . SET SUCH1=@SUCH
	. . SET SUCH(1)=$PIECE($PIECE(SUCH,")",1),",",4,99)
	. . IF SUCH(1)'="" IF $FIND(SUCH(1),".") KILL @SUCH QUIT
	. . SET SUCH(0)=$LENGTH(SUCH(1),",")  ;ANZAHL DER ,
	. . ;
	. . ; NOTE : ^INAUFPXL may not always have 3 keys hence $data'=11
	. . ;
	. . ;RUESTZEIT NUR BEI LEISTUNGEN GÜLTIG;FIS;25.05.04;25780
	. . ;  Services D40 : 2/10/11 = Hr/Min/Industry-Min
	. . IF +$PIECE(SUCH1,Y,70)'=0 IF $DATA(@SUCH)'=11 DO  ;KEINE UNTERTEILE ;no parts
	. . . IF $PIECE(SUCH1,Y,40)'=2 IF $PIECE(SUCH1,Y,40)'=10 IF $PIECE(SUCH1,Y,40)'=11 SET $PIECE(SUCH1,Y,70)=""  ;KEINE LEISTUNG=KEINE RÜSTZEIT ;no setup time 
	. . ;
	. . ; Calculate the quantity               ; BERECHNEN DER BENÖTIGTEN MENGE
	. . ;   Order Qty * Part Qty [unless Part Qty = 0 - services?]
	. . ;   => D39		$$$INAUFPXLOutput1()
	. . ;   => D195		$$$INAUFPXLBasisQuantityWithPartQu()
	. . ;-----------------------------------
	. . SET SUCH(3)=$PIECE($GET(SATZ),Y,5)  ;BASISMENGE
	. . SET SUCH("M",+SUCH(0))=$PIECE(SUCH1,Y,5)
	. . FOR YYI=1:1:SUCH(0) IF +$GET(SUCH("M",YYI))'=0 SET SUCH(3)=SUCH(3)*$GET(SUCH("M",YYI))
	. . SET $PIECE(SUCH1,Y,39)=SUCH(3)   ;MENGE FÜR PRODUKTION ;quantity to production 
	. . ;
	. . SET SUCH(3)=$PIECE($GET(SATZ),Y,5)  ;BASISMENGE
	. . FOR YYI=1:1:SUCH(0)-1 IF +$GET(SUCH("M",YYI))'=0 SET SUCH(3)=SUCH(3)*$GET(SUCH("M",YYI))
	. . SET $PIECE(SUCH1,Y,195)=SUCH(3)   ;BASISMENGE FÜR STUECKLISTEN DRUCK ;to printing 
	. . ;
	. . SET SUCH(2)=""
	. . FOR YYI=1:1:SUCH(0) SET SUCH(2)=SUCH(2)_$PIECE(SUCH(1),",",YYI)_"."
	. . SET ^INAUFPT(YM,YAUFTRAG,YPOS,SUCH(2),1)=SUCH1  ;ZWISCHENDATEI
	. . ;
	. . ;SORT FÜR DIE SUCHE NACH ARTIKELN IN DEN TEILEN ;to who search within within 
	. . SET ART=$PIECE(SUCH1,Y,4)
	. . IF ART="" SET ART=" "
	. . SET ^INAUFPTs(YM,1,$$^WWWUMLAU(ART,1),YAUFTRAG,YPOS,SUCH(2))=""    ;SPEICHERN TEILE IN AUFTRAG ;Save within order 
	. . SET DATUM=$PIECE(SUCH1,Y,168)
	. . IF DATUM="" SET DATUM=" "
	. . SET ^INAUFPTs(YM,2,$$^WWWUMLAU(DATUM,1),YAUFTRAG,YPOS,SUCH(2))=""  ;SPEICHERN DATUM DER PLANUNG ;Save Planning Date 
	. . ;
	. . ; Save update ^INAUFPXL
	. . SET @SUCH=SUCH1
	. . ;
	. . SET BETRIEB=$PIECE($GET(^INAUF(YM,YAUFTRAG,1)),Y,6)
	. . IF BETRIEB="" SET BETRIEB=YLOCATION
	. . set idDRP = $PIECE(SUCH1,Y,200)                             ; 31-Jul-2006
	. . IF idDRP'="" IF $DATA(^INDRPDEMAND(YM,BETRIEB,idDRP,1)) DO
	. . . SET $PIECE(^INDRPDEMAND(YM,BETRIEB,idDRP,1),Y,72)=YAUFTRAG_"."_YPOS_"."_SUCH(2)  ;SPEICHERN TEILESTRUKTUR IN DEMAND ;Save within 
	
	QUIT
	
]]></Routine>
</Export>