<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPVarianceUtilities" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPVarianceUtilities
 
#include FINConst
#include FIN
 
#define VarianceTemp "^CacheTemp(YUSER,""FINAPInvLineVariance"")"
#define	EXPPAMT			16
#define	INVPAMT			17
#define	SUPPAMT			18
 
Swizzle(pstrYKEY,pstrYMFELD="")
    ;-------------------------------------------------------------------------------
    ; Swizzle into memory an Invoice Line Variance. If does this by calling GetVarianceData
    ; which will get the on disk version of the variance if not already in memory.
    ; 
    ; If something is retrieved, ie there is a saved variance or an in memory variance
    ; then we can setup the values as needed
    ; 
    ; If you pass "" as pstrYMFELD, it will not overwrite the first three pieces of
    ; the data, which is the initially passed in information.
    ; 
    ; We then store this in memory.
    ;
    ; Returns: 
    ;
    ; History:
    ; 24-Jun-2005	PO		SR12705: Now using GetKey^COMUtilClass
    ; 03-Feb-2005	RPW		Created
    ;-------------------------------------------------------------------------------
    ;
	new strTemp,idAPInv,idAPInvLine,idAPInvLineVariance
	new NEWYMFELD,i
	
	quit:$get(pstrYKEY)=""	// If there is no key, quit out of this routine
	
	set strTemp=pstrYMFELD
	
	; Store the key locally, we have to do this as the Save routine doesn't have this information
	;set ^CacheTempFINAPInvLineVarianceTemp(YFORM,YUSER,"YKEY")=YKEY
	set @$$$VarianceTemp@("KEY")=pstrYKEY
	; Get the YKEY and see if we have a record.
	
	;set idAPInv=$piece(pstrYKEY,YKOMMA,1)
	;set idAPInvLine=$piece(pstrYKEY,YKOMMA,2)
	;set idAPInvLineVariance=$piece(pstrYKEY,YKOMMA,3)
	do GetKey^COMUtilClass(pstrYKEY,,,.idAPInv,.idAPInvLine,.idAPInvLineVariance)
	
	; Check if there is a record, and if so load it.
	
	set NEWYMFELD=$$GetVarianceData(idAPInv,idAPInvLine,idAPInvLineVariance)
	
	if NEWYMFELD'="" {
		; Copy YMFELD from NEWYMFELD	
		set pstrYMFELD=NEWYMFELD
		
		; Okay the first couple of pieces are from outside, copy them back.
		if strTemp'="" {
			for i=1:1:$length(strTemp,"~") {
				set $piece(pstrYMFELD,Y,i)=$piece(strTemp,Y,i)
			}
		}
	}
	
	set @$$$VarianceTemp@("YMFELD")=pstrYMFELD
	
	quit
	
GetVarianceData(idAPInv,idAPInvLine,idAPInvLineVariance)
    ;-------------------------------------------------------------------------------
    ; Get the current variance data from either the CacheTemp area or form the 
    ; actual global. If there is nothing matching return an empty string.
    ;
    ; Returns:  YMFELD	 = objFINAPInvLineVariance
    ;
    ; History:
    ; 20-Sep-2006	GRF		Doco
    ; 02-Feb-2005	RPW		Created by JW
    ;-------------------------------------------------------------------------------
	new YMFELD
	
	set YMFELD=""
	
	quit:($get(idAPInv)="")||($get(idAPInvLine)="")||($get(idAPInvLineVariance)="") YMFELD
	
	if $data(@$$$VarianceTemp@("DATA",idAPInv,idAPInvLine,idAPInvLineVariance))'=0 {
		set YMFELD=@$$$VarianceTemp@("DATA",idAPInv,idAPInvLine,idAPInvLineVariance)
	} elseif $data(^FINAPInvLineVariance(YM,idAPInv,idAPInvLine,idAPInvLineVariance,1))'=0 {
		set YMFELD=^FINAPInvLineVariance(YM,idAPInv,idAPInvLine,idAPInvLineVariance,1)     ; FIXME : can just use $get rather than testing with $data <GRF>
	}
	
	quit YMFELD
	
GetToolTip(pstrKey,pstrType)
    ;-------------------------------------------------------------------------------
    ; Get the tooltip as relevant for the type of variance.
    ;
    ; Returns: 
    ;
    ; History:
    ; 27-Jun-2005	PO		SR12705: changed to use $$$EnumFINAPVARIANCEPOSTSplit
    ; 						instead of 4
    ; 24-Jun-2005	PO		SR12705: Now using GetKey^COMUtilClass
    ; 14-Mar-2005	PO		SR11349
    ; 02-Feb-2005	RPW		Created
    ;-------------------------------------------------------------------------------
	new idAPInv,idAPInvLine,strData,strToolTip,intQty,fltAmount
	new strQtyError,strAmountError,objFINAPInvLine
	
	set strToolTip=""
	
	quit:$$GetKey^COMUtilClass(pstrKey,,,.idAPInv,.idAPInvLine)=$$$NO strToolTip
	
	set objFINAPInvLine=$$GetYFELDEX^COMGridEdit31Interface("",idAPInv_","_idAPInvLine)
	set strData=$$GetVarianceData^FINAPVarianceUtilities(idAPInv,idAPInvLine,pstrType)
	
	if objFINAPInvLine'="" {
		
		if strData'="" {
			;set fltAmount=+$$$FINAPInvLineVarianceAmountVariance(strData)
			set fltAmount=$$$FINAPInvLineVarianceAmountVariance(strData)
			if $$$AmountIsFC(fltAmount) {
				set fltAmount=$$$FCAmount(fltAmount)
			}
			set strAmountError=$$$Text($listbuild("Fin00632",$$^WWWFORMAT("FINAPInvLineVariance","D",$$$FldFINAPInvLineVarianceAmountVariance,fltAmount)))
			set intQty=+$$$FINAPInvLineVarianceQuantityVariance(strData)
			set strQtyError=$$$Text($listbuild("Fin00632",$$^WWWTR(0,4,intQty)))
			
			if pstrType="IQ" {
				// Can only have quantity variance
				// 
				if $$$FINAPInvLineVarianceINVQPost(objFINAPInvLine)=$$$EnumFINAPVARIANCEPOSTSplit {
					if intQty'=0 {
						set strToolTip=strQtyError
					}
				}
			} elseif pstrType="ID" {
				// Can only have value variance
				
				if $$$FINAPInvLineVarianceINVDPost(objFINAPInvLine)=$$$EnumFINAPVARIANCEPOSTSplit {
					;if fltAmount'=0 {
					if '$$$FCZero(fltAmount) {
						set strToolTip=strAmountError
					}
				}
			} elseif pstrType="OD" {
				if $$$FINAPInvLineVarianceOTHDPost(objFINAPInvLine)=$$$EnumFINAPVARIANCEPOSTSplit {
					;if fltAmount'=0 {
					if '$$$FCZero(fltAmount) {
						set strToolTip=strAmountError
					}
				}
			} else {
				if $$$FINAPInvLineVariancePosting(objFINAPInvLine)=$$$EnumFINAPVARIANCEPOSTSplit {
					;if (fltAmount'=0)&&(intQty'=0) {
					if '$$$FCZero(fltAmount)&&(intQty'=0) {
						set strToolTip=$$$Text($listbuild("Fin00646",$$^WWWFORMAT("FINAPInvLineVariance","D",$$$FldFINAPInvLineVarianceAmountVariance,fltAmount),$$^WWWTR(0,4,intQty)))
					;} elseif (fltAmount'=0)&&(intQty=0) {
					} elseif '$$$FCZero(fltAmount)&&(intQty=0) {
						set strToolTip=strAmountError
					;} elseif (intQty'=0)&&(fltAmount=0) {
					} elseif (intQty'=0)&&$$$FCZero(fltAmount) {
						set strToolTip=strQtyError
					}
				}
			}
		} else {
			set strToolTip=$$$Text($listbuild("Fin00653"))
		}
	}
	quit strToolTip
	
Buttons
    ;-------------------------------------------------------------------------------
    ; Draw the save and delete buttons on the screen.
    ;
    ; Returns:
    ;
    ; History:
    ; 28-Feb-2005	RPW		Added a table to group the buttons and a call to HELP1 in
    ; 						WWWFORMF to display the help button (SR11684). HELP was
    ; 						modified to change the form to show the wait cursor. This
    ; 						was not good, HELP1 appears to be the original version,
    ; 						calling this got rid of the sideeffect.
    ; 05-Jan-2005	RPW		Created for 3 Way Match (SR10061)
    ;-------------------------------------------------------------------------------
 
	; TODO: Shouldn't be including HTML / js in this module
 
	write YCR
	write YCR,"<div align=right>"
	write YCR_"<table align=right><tr>"
	write YCR,"<td>"
	write YCR,"<A HREF="_""""_"#"_""""
	write YCR," onclick="_""""_"{ EventValue('"_YUCI_"','"_YUSER_"','"_YFORM_"','FIX','SaveData^FINAPInvLineVarMod','NOVALUE','6','NOVALUE'); window.close() "
	write YCR,"}"_""""
	write YCR,">"
	write YCR,"<IMG SRC="_""""_YGIF_"save.gif"_""""_" ALIGN=ABSBOTTOM TITLE="_""""_$$^WWWTEXT(11)_""""_" border=0>"
	write YCR,"</A>"
	write YCR,"</td>"
	write YCR,"<td>"
	write YCR,"<IMG SRC="_""""_YGIF_"spacer.gif"_""""_" ALIGN=ABSBOTTOM border=0>"
	write YCR,"</td>"
	write YCR,"<td>"
	write YCR,"<A HREF="_""""_"#"_""""
	write YCR," onclick="_""""_"{ EventValue('"_YUCI_"','"_YUSER_"','"_YFORM_"','FIX','DeleteData^FINAPInvLineVariance','NOVALUE','6','NOVALUE'); window.close() "
	write YCR,"}"_""""
	write YCR,">"
	write YCR,"<IMG SRC="_""""_YGIF_"del.gif"_""""_" ALIGN=ABSBOTTOM TITLE="_""""_$$^WWWTEXT(41)_""""_" border=0>"
	write YCR,"</A>"
	write YCR,"</td>"
	write YCR,"<td>"
	write YCR,"<IMG SRC="_""""_YGIF_"spacer.gif"_""""_" ALIGN=ABSBOTTOM border=0>"
	write YCR,"</td>"
 
	do HELP^WWWFORMF
	
	write YCR_"</tr></table>"
	write YCR,"</div>"
	
	quit
	
UpdateScreen(pfltTotal=0,pintSumqty=0,pstrType,pfltInvP=0,pfltExpP=0,pfltSupP=0)
    ;-------------------------------------------------------------------------------
    ; Draws the remaining unallocated amount on the screen
    ;
    ; Returns:
    ;
    ; History:
    ; 14-Mar-2005	PO		SR11349
    ; 02-Feb-2005	RPW		Modified to use the system generated macros
    ; 24-Jan-2005	RPW		Draw the % amounts on the screen as well.
    ; 20-Jan-2005	RPW		Update the quantity on an IQ as well.
    ; 18-Jan-2005	RPW		Only perform the population of FldFINAPInvLineVarianceAmountVariance
    ; 						if there is a variance to worry about.
    ; 						Same goes for FldFINAPInvLineVarianceQuantityVariance
    ; 						only if we are a full variance.
    ; 05-Jan-2005	RPW		Created for 3 Way Match (SR10061)
    ;-------------------------------------------------------------------------------
	quit:$get(pstrType)=""
	
	if pstrType'="IQ" {
		;do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvLineVarianceAmountVariance,-pfltTotal,"M")
		do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvLineVarianceAmountVariance,$$$FCSign(pfltTotal),"M")
	}
	if (pstrType="TV")||(pstrType="IQ") {
		do PopulateDataField^COMUtils(YFORM,$$$FldFINAPInvLineVarianceQuantityVariance,pintSumqty,"M")
	}
	if (pstrType="TV")||(pstrType'="IQ") {
		do PopulateDataField^COMUtils(YFORM,$$$INVPAMT,pfltInvP,"M")
		do PopulateDataField^COMUtils(YFORM,$$$EXPPAMT,pfltExpP,"M")
		do PopulateDataField^COMUtils(YFORM,$$$SUPPAMT,pfltSupP,"M")
	}
	
	quit
	
OnBlurAfterData
    ;-------------------------------------------------------------------------------
    ; Code to run the OnBlur even after the data fields. Cleaner interface
    ;
    ; Returns:
    ;
    ; History:
    ; 02-Feb-2005	RPW		Modified to use the system generated macros
    ; 19-Jan-2005	RPW		But we must set the Variance Temps version of YMFELD
    ; 						
    ; 19-Jan-2005	RPW		Only perform the OnBlur code if there is a dollar
    ; 						variance to worry about
    ; 05-Jan-2005	RPW		Created for 3 Way Match (SR10061)
    ;-------------------------------------------------------------------------------
	$$$StartScript()
	;write "<script type='text/javascript'>"
	do OnBlur^FINAPInvLineVariance($$$FldFINAPInvLineVarianceAmountVariance,0)
	;write "</script>"
	$$$EndScript()
	
	quit
	
 
]]></Routine>
</Export>