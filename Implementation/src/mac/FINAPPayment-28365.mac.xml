<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPPayment" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPPayment  ; Supplier Payments
	
#include FINConst
#include FIN
#include COMSYS
#include WWWConst
	
OnAfterPrimaryKey(YKEY="",YFELD="") 
    ;-------------------------------------------------------------------------------
    ; Set the YOPTION flag.  This is used to either hide the 'Last Cheque Number' and 
    ; 'Next Cheque Number' fields if the payment type is not cheque.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 09-Sep-2005	shobby	SR12761: Created
    ;-------------------------------------------------------------------------------
	set YOPTION = ($$$FINAPPaymentPaymentMethod(YFELD)=$$$EnumFINARBANKLINEMETHODCheque)
	quit
	
	
OnCheckForDisabled(YA="",YKEY="",YFELD="")
    ;-------------------------------------------------------------------------------
    ; Checks to see if the user wish to cancel the check on Unpost, otherwise
    ; just unpost.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 02-May-2006	SteveS	SR14592: Cannot double click unpost
    ; 12-Jan-2006	PO		SR14118: Wrap UnPost in transaction handling code
    ; 12-Jul-2005	shobby	SR12678 Created
    ;-------------------------------------------------------------------------------
    new objWWW012
 
	; FIXME: The UnPost button shouldn't be using this code. Should have a generic @net
	; manager function for yes/no/cancel confirms. <Steve S>
 
	do IsPosted2^FINAPPayment(YKEY)
 
	; Note: No " are included in the js here as the js is written out into the page (href of an anchor tag) completely unescaped, since the href uses " to
	; quote the content no " can exist with the content. The js function doLink unescapes and executes the js, at which point the %22s will be unescaped
	; to ", hence \\\%22 will be \\\". The call to CallBack which calls CallBackNow will result in \\\" being unescaped to ".
	; 
	; Solution applied to versions prior to 1.18.0 differ slightly as used core components do not exist.
 
 	set objWWW012 = $get(^WWW012(0,0,1))
 
	if $$$FINAPPaymentPaymentMethod(YFELD)=$$$EnumFINARBANKLINEMETHODCheque {
		if $$$WWW012DisplayButtonOnBottomLine(objWWW012) = 3 {
			set $$$WWW124FunctionJavaScriptOnClick(YA) = "eval(unescape('var result=VBConfirm(\'"_$$$Text("Fin00843")_"\',35,\'"_$$$Text("Fin00844")_"\'); if (result!=2) { NewPage(document.WWW); CallBack(\'Perform^COMTransaction\',\'"_YFORM_"\',\'"_YKEY_"\',\'UnPost^FINAPPaymentUnPost(\\\\\%22"_YKEY_"\\\\\%22,\'+(result==6?1:0)+\')\',\'Fin00893\'); OPENNOW(); }'));"
		} else {
			set $$$WWW124FunctionJavaScriptOnClick(YA) = "var result=VBConfirm('"_$$$Text("Fin00843")_"',35,'"_$$$Text("Fin00844")_"'); if (result!=2) { NewPage(document.WWW); CallBack('Perform^COMTransaction',document.WWW.YFORM.value,'"_YKEY_"','UnPost^FINAPPaymentUnPost(\\\%22"_YKEY_"\\\%22,'+(result==6?1:0)+')','Fin00893'); OPENNOW(); }"
		}  ; (843) "Do you want to cancel the cheque?"  ...  (844) "Unpost Supplier Payments"  ...  (893) "Record has been cancelled."
	} else {
		if $$$WWW012DisplayButtonOnBottomLine(objWWW012) = 3 {
			set $$$WWW124FunctionJavaScriptOnClick(YA) = "NewPage(document.WWW); eval(unescape('CallBack(\'Perform^COMTransaction\',\'"_YFORM_"\',\'"_YKEY_"\',\'UnPost^FINAPPaymentUnPost(\\\\\%22"_YKEY_"\\\\\%22,0)\',\'Fin00893\'); OPENNOW();'));"
		} else {
			set $$$WWW124FunctionJavaScriptOnClick(YA) = "NewPage(document.WWW); CallBack('Perform^COMTransaction',document.WWW.YFORM.value,'"_YKEY_"','UnPost^FINAPPaymentUnPost(\\\%22"_YKEY_"\\\%22,0)','Fin00893'); OPENNOW();"
		}
    }
	quit
	
	
OnAfterFormConstruction(pstrField="")
    ;-------------------------------------------------------------------------------
    ; Code to run after a field has been constructed
    ;
    ; Returns:
    ;
    ; History:
    ; 24-May-2005	shobby	Created SR12245
    ;-------------------------------------------------------------------------------
    ;
	if pstrField="Message" {
		do CheckForUnpostedSupplierPayments(YKEY,YFELD)
	}
	quit
	
	
CheckForUnpostedSupplierPayments(YKEY="",YFELD="")
    ;-------------------------------------------------------------------------------
    ; Display a message and link if there are outstanding unposted payments in the system.
    ;
    ; Returns:
    ;
    ; History:
    ; 22-Feb-2006	SC		SR13157: Update index number for FINAPPayments
    ; 24-May-2005	shobby	Created SR12245
    ;-------------------------------------------------------------------------------
	new idPayment,idxGroup,idxLocn,strYKEY
	
	if (YKEY'="") && (YFELD'="") {
		set idxLocn   = $$$Index($$$FINAPPaymentLocation(YFELD))
		set idxGroup  = $$$Index($$$FINAPPaymentGroup1(YFELD))
		set idPayment = ""
		for {
			set idPayment=$order(^FINAPPayments(0,61,0,idxLocn,idxGroup,idPayment))
			quit:idPayment=""
			if (idPayment'=$get(YKEY)) && ($get(YKEY)'="") {
				do DisplayMessage^COMUtils("FINAPPayment",idPayment,$listbuild("Fin00771",idPayment,$$Status^FINAPPaymentLine(YKEY)))
				quit
			} ; "There are unposted Supplier Payments in the system, including payment number ´%1´.  Filter:%2"
		}
	}
	quit
	
	
OnBeforeButtonLine(pidFINAPPayment)
	;-------------------------------------------------------------------------------
	; Routines called Before Button Line.
	;
	;
	; History:
	; 26-Jun-2006	RPW		SR13173: Check if the gl effective date has expired
	; 16-May-2006	SteveS	SR14579: Speed up + general clean up
	; 							 Only call CheckClearances when posted
	; 19-Oct-2005	SteveS	SR13216: Check for bank rec clearances
	; 23-Aug-2005	SteveS	Renamed from BeforeButtonLine
	; 14-Jan-2005	PO		SR11188 Created.
	;-------------------------------------------------------------------------------
	new objFINAPPayment,intStatus
	
	set ^CacheTempFINAPPaymentLines(YUSER)=0
	
	if '$$$NoKey(pidFINAPPayment) {
		do CheckGLEffectiveDateExpiration^FINAPUtilities() // SR13173
		set objFINAPPayment=$get(^FINAPPayment(0,pidFINAPPayment,1))
		set intStatus=$$$FINAPPaymentStatus(objFINAPPayment)
		
		do CheckRecordConsistency^FINAPPayment2(pidFINAPPayment)
		do ReadOnly(pidFINAPPayment)
		do CheckForEFTFile^FINAPPaymentEFT(pidFINAPPayment)
		
		if intStatus=$$$EnumFINSYSSTATUSPosted { //SR14579
			do CheckClearances^FINAPPaymentUnPost(pidFINAPPayment) ;SR13216
		}
	}
	quit
	
	
ReadOnly(pKey)
	;-------------------------------------------------------------------------
	; Disables the form
	; 
	; History
	; 31-Oct-2011	GRF		-: Use Data Macros
	; 19-Oct-2005	JW		SR13216: Use $$$NoKey
	; 14-Oct-2005	SteveS	SR13216: Also check the Payment Lines form
	; 22-Dec-2004	JW		SR10925: Don't hide if on Payment Screen.
	; 							and no need to hide search button,
	; 							and add to already hidden buttons.
	; 04-Jul-2003	shobby	Hide some buttons
	;--------------------------------------------------------------------------
	new idPay,idPayLine,intStatus
	
	set idPay     = $$$KEY1(pKey)
	set idPayLine = $$$KEY2(pKey)
	
	if '$$$NoKey(idPay) {
		if $$$NoKey(idPayLine) {
			set intStatus = $$$FINAPPaymentStatus($get(^FINAPPayment(0,idPay,1)))
		} else {
			set intStatus = $$$FINAPPaymentLineStatus($get(^FINAPPaymentLine(0,idPay,idPayLine,1)))
		}
		
		if '$$Editable^FINSYSReview("FINAPPayment",intStatus) {
			set $$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly
			if idPay'=pKey { 	; Hide New,Open
			;	set $piece(YVOR,Y,94) = $piece(YVOR,Y,94)_";1;2"
				set $$$WWW120DoNOTDisplayStandardButto(YVOR) = $$$WWW120DoNOTDisplayStandardButto(YVOR)_";1;2"   ; D94
			}
		}
	}
	quit
	
	
OnAfterDelete(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Code to run after a record has been deleted.
    ;
    ; Returns:
    ; 
	; Notes: (Do not remove the following notes, used by 'Structure')
    ;		**Delete Check - FINAPPaymentAccount**
    ;		**Delete Check - FINAPPaymentLine**
    ;		**Delete Check - FINAPPaymentInvoice**
    ;		
    ; History:
    ; 08-Mar-2004	shobby	Created
    ;-------------------------------------------------------------------------------
	do KillLines(pYKEY,1)
	quit
	
	
OnBeforeSave(pYKEY="",pYFELD="")
	;------------------------------------------------------------------------------
	; Updates the Last Cheque Number before saving
	; 
	; History
	; 07-Sep-2005	shobby	SR12761: Only check for used Cheque if Payment method is by cheque.
	; 23-Aug-2005	SteveS	SR12761: Validate Cheque Number
	; 							General cleanup, status usage
	; 24-Feb-2004	shobby	Disabled.
	; 24-Feb-2004	shobby	Only update if not posted.
	; 30-Jun-2003	shobby	Creation
	; -----------------------------------------------------------------------------
	new intChqNum,strStatus
		 	
	set strStatus=$$$OK
	
	if $$$FINAPPaymentNextChequeNumber(pYFELD)="" {
		set intChqNum=$$UpdateLastChequeNumber()
	} else {
		set intChqNum=$$$FINAPPaymentNextChequeNumber(pYFELD)	
	}
	if $$$FINAPPaymentPaymentMethod(pYFELD)=$$$EnumFINARBANKLINEMETHODCheque {
		set strStatus=$$IsChequeUsed^FINAPChequeBook($$$FINAPPaymentBankAccount(pYFELD),intChqNum,pYKEY)
		if $$$ISERR(strStatus) {
			set YFELD=pYFELD
			do UpdateLastChequeNumber^FINAPPayment()
			set strStatus = $$$Save("FINAPPayment",pYKEY,YFELD,$$$YES)
		}
	}
	
	if $$$ISERR(strStatus) {
		set Q=$$$QDontSave
		do ReturnError^COMUtilError(strStatus)
	}
	quit
	
	
AllPaymentLinesZero(paymentID)
    ;-------------------------------------------------------------------------------
    ; For a particular supplier payment run, checks whether or not all the payment
    ; lines are zero amount.
    ;
    ; Returns: boolean
    ;
    ; History:
    ; 07-Mar-2005	SteveS	Added check for payment lines in IF test
    ; 09-Dec-2004	SteveS	Created (SR10923)
    ;-------------------------------------------------------------------------------
	new idPaymentLine,blnStatus,objPaymentLine,curTotal
	
	set blnStatus = $$$YES
	
	if ($get(paymentID)'="") && ($data(^FINAPPaymentLine(0,paymentID))) {
		set idPaymentLine = ""
		for {
			set idPaymentLine = $order(^FINAPPaymentLine(0,paymentID,idPaymentLine))
			quit:(idPaymentLine="")||('blnStatus)
			
			set objPaymentLine = $get(^FINAPPaymentLine(0,paymentID,idPaymentLine,1))
			set blnStatus      = (+$$$FINAPPaymentLineTotal(objPaymentLine)=0)
		}
	}
	quit blnStatus
	
	
OnAfterDataFields(pYKEY="")
	;-------------------------------------------------------------------------------
	; Code called from an @netManager form after data fields.
	;
	; Returns:
	;
	; History:
	; 16-May-2006	SteveS	SR14579: Call ShowPayments^FINAPPaymentShow
	; 31-May-2004	SCR		FC Upgrade
	; 23-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
 	if '$$$NoKey(pYKEY) do ShowPayments^FINAPPaymentShow(pYKEY)
	do UpdateLastChequeNumber()
	quit $$$OK
	
	
UpdateLastChequeNumber(pstrOldValue="")
	; Updates the Last Cheque Number field.
	; 
	; History
	; 10-Feb-2006	JW		SR14036: No longer use GetNextCheque3
	; 11-Jul-2005	shobby	SR12678: If cheque number is blank then get the next available
	;							taking into account cancelled cheques.
	; 17-Mar-2004	shobby	intNumber may not have been defined. (TR006823/TR006822)
	; 12-Mar-2004	shobby	Update the Cheque numbers when the bank account changes.
	; 23-Feb-2004	shobby	Next Cheque number as well.
	; 10-Oct-2003	shobby	Only update if the Payment has not yet been posted. (TR006214)
	;-----------------------------------------------------------------------------------------
	new strAccount,intNumber
	
	set intNumber=""
	if $get(YFELD)'="" {
		set strAccount=$$$FINAPPaymentBankAccount(YFELD)
		if (strAccount'="") && $$Editable^FINSYSReview("FINAPPayment",$$$FINAPPaymentStatus(YFELD)) {
			set intNumber=$$GetLastNumber^FINAPChequeBook(strAccount)
			set %TXT(1)=$get(%TXT(1))_"#Y"_YFORM_"D13~"_intNumber
			set $$$FINAPPaymentLastChequeNumber(YFELD)=intNumber
			if pstrOldValue'=strAccount {
				set $$$FINAPPaymentNextChequeNumber(YFELD)=""
			}
			
			if $$$FINAPPaymentNextChequeNumber(YFELD)="" {
				do GetNextCheque^FINAPChequeBook(strAccount,.intNumber)	//SR14036
				
				set %TXT(1)=%TXT(1)_"#Y"_YFORM_"D14~"_intNumber
				set $$$FINAPPaymentNextChequeNumber(YFELD)=intNumber
			}
		}
	}
	quit intNumber
	
	
GetBatchBlock(pidFINAPPayment,pidBatch="",pidBlock="")
    ;-------------------------------------------------------------------------------
    ; Determines the Batch and the Block for this payment.
    ;
    ; Returns:
    ;
    ; History:
    ; 26-Feb-2004	shobby	Created
    ;-------------------------------------------------------------------------------
	new strStatus,idLineNumber,objFININTBatchLine
	
	set strStatus=$$$OK
	set pidBatch=$order(^FININTBatchLines(0,3,"APP",pidFINAPPayment,""))     ; FIXME : $$$Index?
	if pidBatch'="" {
		set idLineNumber=$order(^FININTBatchLines(0,3,"APP",pidFINAPPayment,pidBatch,""))
	}
	if idLineNumber'="" {
		set objFININTBatchLine=$get(^FININTBatchLine(0,pidBatch,idLineNumber,1))
		if objFININTBatchLine'="" {
			set pidBlock=$$$FININTBatchLineBlockNumber(objFININTBatchLine)
		}
	}
	if pidBlock="" {
		set strStatus=$listbuild("Fin00265",pidFINAPPayment)
	} ; "Interface Batch and Block information not found for payment '%1'."
	quit strStatus
	
	
UnPostBlock(pidFINAPPayment)
    ;-------------------------------------------------------------------------------
    ; Unpost all the blocks for this payment
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Feb-2004	shobby	Created
    ;-------------------------------------------------------------------------------
	new idBatch,idBlock,strStatus
	
	set idBatch=""
	set strStatus=$$$OK
	for {
		set idBatch=$order(^FININTBatchLines(0,3,"APP",pidFINAPPayment,idBatch))  ; FIXME : $$$Index?
		quit:idBatch=""
		
		set idBlock=""
		for {
			set idBlock=$order(^FININTBatchLines(0,3,"APP",pidFINAPPayment,idBatch,idBlock))
			quit:idBlock=""
		}
	}
	quit strStatus
	
	
Unallocated(Supplier,Amount,InvoiceNumber)
	;-------------------------------------------------------------------------------
	;this method creates a new invoice
	;
	; History
	; 06-Jan-2006	SC		SR14146: Updated check for existing unallocated payments. Check in LastInvoice. 
	; 30-Jun-2003	shobby	$get around InvoiceNumber
	;-------------------------------------------------------------------------------
	new LastInvoice,Number
	
	set InvoiceNumber=$get(InvoiceNumber)
	if +Amount'=0 {
		; find out the new number of the invoice
		set LastInvoice=$order(^FINAPInvoice(0,Supplier,$$^WWWTEXT("Fin00057")_" - 999"),-1)
		if $find(LastInvoice,$$^WWWTEXT("Fin00057"))  {
			;set Number=+$piece(InvoiceNumber," - ",2)+1
			set Number=+$piece(LastInvoice," - ",2)+1  ;SR14146 an outstanding un-allocated invoice exists
			set Number=$translate($justify(Number,3)," ","0")
			set InvoiceNumber=$$^WWWTEXT("Fin00057")_" - "_Number  ;generate new invoice number
		}
		else {
			set InvoiceNumber=$$^WWWTEXT("Fin00057")_" - 001"
		}
	}
	quit
	
	
DistributeTaxDiscount(pidPay,pidPayLine,Invoice,Batch,BlockNumber,Supplier,DiscAmount,pblnReverse=$$$NO)
    ;-------------------------------------------------------------------------------
	; Post Discount and Distribute any Required Taxes
    ;
    ; Returns:
    ;
    ; History:
    ; 31-Jan-2006	SteveS	SR13497 Use the required disc GL Account
    ; 31-May-2004	SCR		FC Upgrade
    ; 11-May-2004	shobby	Included pidPayLine as part of strSource
    ; 11-May-2004   Shobby  pblnReverse flag for unposting
    ;-------------------------------------------------------------------------------
	new idTaxCode,objFINAPInvoice,InvTotal,RecTax,TaxKey,TaxAmount,TaxAcc,idDiscAcc
	new strSource,strStatus
	
	set strStatus = $$$OK
	
	; Loop through taxes on the original invoices
	; Calculate tax based on the % of Discount Taken and % of the Tax taken.
	set strSource       = pidPay_","_pidPayLine
	set objFINAPInvoice = $get(^FINAPInvoice(0,Supplier,Invoice,1))
	set InvTotal        = $$$FINAPInvoiceInvoiceTotal(objFINAPInvoice)
	
	set idTaxCode=""
	for {
		set idTaxCode = $order(^FINAPInvoiceTax(0,Supplier,Invoice,idTaxCode))
		quit:(idTaxCode="")||(strStatus'=$$$OK)
		
		set RecTax = $get(^FINAPInvoiceTax(0,Supplier,Invoice,idTaxCode,1))
		if +InvTotal'=0 {
			set TaxAmount  = $$$FINAPInvoiceTaxAmount(RecTax)*DiscAmount/InvTotal
			set TaxAcc     = $$$FINAPInvoiceTaxAccount(RecTax)
			set TaxAmount  = $$Round^COMUtils(TaxAmount)
			set strStatus  = $$AddLine^FININTBatch(Batch,BlockNumber,TaxAcc,$$$FCSign(TaxAmount),"TAX","",strSource,Supplier,pblnReverse)
			set DiscAmount = $$$FCSub(DiscAmount,TaxAmount)
		}
	}
	
	; Post the Discount, less the taxes.
	; Use the required disc GL Account
	; 1. Check Invoice
	; 2. Check Supplier
	; 3. Check Supplier Control Account
	set idDiscAcc = $$$FINAPInvoiceDiscountGLAccount(objFINAPInvoice)
	if idDiscAcc="" set idDiscAcc = $$$FINAPSupplierDiscountGLAccount($get(^FINAPSupplier(0,Supplier,1)))
	if idDiscAcc="" set idDiscAcc = $$GetDiscountAccount^FINAPSupplier(Supplier)
	
	set strStatus=$$AddLine^FININTBatch(Batch,BlockNumber,idDiscAcc,$$$FCSign(DiscAmount),"SDISC","",strSource,Supplier,pblnReverse)
	quit strStatus
	
	
UpdateChequeNumber(Pay,PayLine,Head,RecLine,BankAccount,ChequeNumber)
	; Update the Cheque number, using the Cheque Book records.
	; 
	; History
	; 02-Dec-2005	PO		SR13948: Included handling for PrePayments
	; 29-Jul-2003	shobby	Call to routine to Update the Last Used Cheque in ^FINAPChequeBook (TR5728)
	;---------------------------------------------------------------------------------
	new Status,YFORM,RetValue,strPaymentMethod
	
	set Status = $$$OK
	set YFORM  = "FINAPPaymentLine"
	set strPaymentMethod = $$$FINAPPaymentPaymentMethod(Head)
	
	if $case(strPaymentMethod,$$$EnumFINARBANKLINEMETHODCheque:1,$$$EnumFINARBANKLINEMETHODPrePayment:1,:0) {
		if $$$FINAPPaymentLineChequeNumber(RecLine)="" {
			set Status = $$GetNextCheque^FINAPChequeBook(BankAccount,.ChequeNumber,$case(strPaymentMethod,$$$EnumFINARBANKLINEMETHODPrePayment:$$$YES,:$$$NO),Pay) ; SR13948
			if Status=$$$OK {
				set $$$FINAPPaymentLineChequeNumber(RecLine)=ChequeNumber
				set RetValue = $$$Save(YFORM,Pay_","_PayLine,RecLine,$$$YES)
				if RetValue=$$$OK {
					set Status = $$UpdateChequeNumber^FINAPChequeBook(Head,RecLine)	
				} else {
					set Status = $listbuild("Fin00169")  ; "Supplier cheque number could not be updated"	
				}			
			}
		}
	}
	quit Status
	
	
GetYKEY()
    ;-------------------------------------------------------------------------------
    ; Determines the value of YKEY from YKEY or YFKEY if in a hyperevent.
    ;
    ; Returns:
    ;
    ; History:
    ; 27-Feb-2004	shobby	Created
    ;-------------------------------------------------------------------------------
	new strYKEY
	
	if $get(YKEY)="" {
		set strYKEY=$get(YFKEY)
	} else {
		set strYKEY=$get(YKEY)
	}
	quit strYKEY
	
	
KillLines(pidPay,pblnZero)
	;-------------------------------------------------------------------------------
	; Method Usage
	;
	; Params:	pidPay - FINAPPayment id
	; 			pblnZero
	;
	; ByRefs:
	;
	; Returns:	status
	;
	; History:
	; 19-Oct-2006	JW		SR15134: Look at kill status. Added return value.
	;-------------------------------------------------------------------------------
	new idPayLine,strStatus
	
	set strStatus = $$$OK
	
	set idPayLine=""
	for {
		set idPayLine=$order(^FINAPPaymentLine(0,pidPay,idPayLine))
		quit:idPayLine=""
		set strStatus = $$KillLine^FINAPPaymentLine(pidPay,idPayLine,pblnZero)
		quit:$$$ISERR(strStatus)
	}
	quit strStatus
	
	
Postable(pidPay,&pblnPost=0,&pintSuggestedStatus="")
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; History:
    ; 26-Jun-2006		RPW		SR13173: Check if the GL Effective Date is valid
    ; 11-Jan-2005		RPW		SR14144: Do not check for held invoices when the 
    ; 								invoice is not selected for payment. Also fixed
    ; 								the held invoice error message.
    ; 09-Sep-2005		shobby	SR12671:Only check IsChequeUsed if payment method is by cheque.
    ; 14-Jul-2005		PO		SR12850 If zero payment method payment line must include invoices
    ; 04-Mar-2005		PO		SR11790 Display more user friendly msg than No record.
    ; 28-Feb-2005		PO		SR11790 If pidPay is assigned a plus sign then no record
    ; 08-Feb-2005		JW		SR11687 Added call to ValidInvoiceAmounts
    ; 24-Jan-2005		PO		SR11505 Checking for payment lines less than zero.
    ; 20-Dec-2004		SteveS	SR10923: Added check for zero payment lines
    ; 27-Oct-2004		Shobby	Corrected spelling of strStatus
    ;-------------------------------------------------------------------------------
	new objPayment,strStatus,paymentMethod,idPayLine,objFINAPPaymentLine,idPayInvoice,idSupplier
	
	set strStatus = $$$OK
	set idPayLine = ""
	
	if '$$$NoKey(pidPay) {
		set objPayment=$get(^FINAPPayment(0,pidPay,1))
		
		if $$$ISOK(strStatus) {
			set strStatus=$$ValidGLEffectiveDate^FINGLEffectiveDate($$$FINAPPaymentPaymentDate(objPayment),$$$FINAPPaymentPaymentDate(objPayment),$$$FldFINAPPaymentPaymentDate)
		}	
		if $$$FINAPPaymentPaymentMethod(objPayment)=$$$EnumFINARBANKLINEMETHODCheque {   ; not used
			set strStatus=$$IsChequeUsed^FINAPChequeBook($$$FINAPPaymentBankAccount(objPayment),$$$FINAPPaymentNextChequeNumber(objPayment),pidPay)
		}
		if $$$ISOK(strStatus) {
			set paymentMethod=$$$FINAPPaymentPaymentMethod(objPayment)
			
			if (paymentMethod=$$$EnumFINARBANKLINEMETHODZeroPayment) && '$$AllPaymentLinesZero(pidPay) {
				set strStatus=$listbuild("Fin00528")  ; "All payment lines must be zero to post a Zero Payment."
			}
			if $data(^FINAPPaymentLine(0,pidPay)) && $$AllPaymentLinesZero(pidPay) && (paymentMethod'=$$$EnumFINARBANKLINEMETHODZeroPayment) { ; use else clause !!
				set strStatus=$listbuild("Fin00529")  ; "Must select Zero Payment type when all payment lines are zero."
			}
			if (paymentMethod=$$$EnumFINARBANKLINEMETHODZeroPayment) {
				for {
					set idPayLine = $order(^FINAPPaymentLine(0,pidPay,idPayLine))
					quit:idPayLine=""
					set objFINAPPaymentLine = $get(^FINAPPaymentLine(0,pidPay,idPayLine,1))
		
					if '$data(^FINAPPaymentInvoice(0,pidPay,idPayLine)) {
						set strStatus=$listbuild("Fin00848",idPayLine)
					; "Payment Line ´%1´ must include invoices when the Zero Payment Method is used."
					
					} else {
						set idSupplier = $$$FINAPPaymentLineSupplierNumber(objFINAPPaymentLine)
						set idPayInvoice = ""
						for {
							set idPayInvoice = $order(^FINAPPaymentInvoice(0,pidPay,idPayLine,idPayInvoice))
							quit:idPayInvoice=""
							continue:'$$$FINAPPaymentInvoicePay($get(^FINAPPaymentInvoice(0,pidPay,idPayLine,idPayInvoice,1))) ; SR14144 We should not check invoices not meant for us!
							
							if $$$FINAPInvoiceOnHold($get(^FINAPInvoice(0,idSupplier,idPayInvoice,1))) {
								set strStatus=$listbuild("Fin00948",idPayLine) ; "Payment Line '%1' cannot include held invoices when the Zero Payment Method is used."
								
							}
							quit:$$$ISERR(strStatus)
						}
					}
					quit:$$$ISERR(strStatus)
				}
				set idPayLine = ""
			}
		} else {
			;set strStatus=$zcvt(strStatus,"o","JS")
		}
	} else {
		set strStatus=$listbuild("Fin00690")  ; "Please Select A Data Record First."
	}
	
	if $$$ISOK(strStatus) set strStatus=$$Editable^FINSYSReview("FINAPPayment",$$$FINAPPaymentStatus($get(^FINAPPayment(0,pidPay,1))),.pblnPost,.pintSuggestedStatus)
	if $$$ISOK(strStatus) if '$data(^FINAPPaymentLine(0,pidPay)) set strStatus=$listbuild("Fin00182")  ; "ayments must have lines before it can be posted."
	if $$$ISOK(strStatus) set strStatus=$$ValidSupplierDetails^FINAPPaymentEFT(pidPay)
	
	if $get(pidPay)'="" {
		for {
			set idPayLine = $order(^FINAPPaymentLine(0,pidPay,idPayLine))
			quit:idPayLine=""
			
			if $$$FINAPPaymentLineTotal($get(^FINAPPaymentLine(0,pidPay,idPayLine,1)))<0 {
				set strStatus=$listbuild("Fin00211") ; "Supplier Payments cannot be less than 0."
			}
			quit:$$$ISERR(strStatus)
		}
	}
	if $$$ISOK(strStatus) {
		set YQ=0
	} else {
		set YQ="1 "_$$$Text(strStatus)
	}
	quit strStatus
	
	
Editable(pidPay)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 04-Mar-2005	PO		SR11790 Display more user friendly msg than No record.
    ; 28-Feb-2005	PO		SR11790 If pidPay is assigned a plus sign then no record
    ;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus=$$$OK
	
	if $$$NoKey(pidPay) set strStatus=$listbuild("Fin00690")  ; "Please Select A Data Record First."
	
	if $$$ISOK(strStatus) set strStatus=$$Editable^FINSYSReview("FINAPPayment",$$$FINAPPaymentStatus($get(^FINAPPayment(0,pidPay,1))))
	
	if $$$ISOK(strStatus) {
		set YQ=0
	} else {
		set YQ="1 "_$$$Text(strStatus)
	}
	quit strStatus
	
	
GetChequeNumber(pstrYKEY)
	;--------------------------------------------------------------------------
	; History
	; 
	; 10-Jan-2005	SteveS	SR10648:Only use default if no other account
	; 18-Jun-2003	PaulK	Modified to get last cheque from default bank account.
	;--------------------------------------------------------------------------
	new idBankAccount,intLastChqNum
 
	set idBankAccount = $$$KEY1($get(pstrYKEY))
	if idBankAccount="" set idBankAccount=$$GetDefaultBankAccount^FINGLBank()
	
	set intLastChqNum = $$GetLastNumber^FINAPChequeBook(idBankAccount)
	quit intLastChqNum
	
	
IsPosted(pidPay)
	;--------------------------------------------------------------------------
	; Used by the print cheques button.
	; 
	; History
	; 27-Jun-2003	shobby	Creation (TR005488)
	; -------------------------------------------------------------------------
	new objFINAPPayment,strMessage
	
	set strMessage=""
	
	if $$$NoKey(pidPay) {
		set strMessage=$$$Text("Fin00690")  ; "Please Select A Data Record First."
	
	} else {
		set objFINAPPayment=$get(^FINAPPayment(0,pidPay,1))
		if objFINAPPayment'="" {
			if $$$FINAPPaymentStatus(objFINAPPayment)'=$$$EnumFINSYSSTATUSPosted {
				set strMessage=$$$Text($lb("Fin00234"))
			; "Payments must be posted before printing Cheques."
			
			} elseif $$$FINAPPaymentPaymentMethod(objFINAPPayment)'=$$$EnumFINARBANKLINEMETHODCheque {
				set strMessage=$$$Text($lb("Fin00235"))
			} ; "´Payment Method´ for this Supplier Payment is not set up as ´Cheque´."
		
		} else {
			set strMessage=$$$Text($listbuild("Fin00167",pidPay))
		} ; "Supplier Payment ´%1´ is not defined"
	}
	if strMessage'="" {
		set YQ="1 "_strMessage
	} else {
		do CanPrintCheque(pidPay)
	}
	quit
	
	
IsPosted2(pidFINAPPayment="")
    ;-------------------------------------------------------------------------------
    ; Determines if a payment exists and has been posted. (If it has then we can unpost it).
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Jul-2005	sh/rw/ss	Reverted strStatus back to listbuild.  Message was not appearing on dialog box.
    ; 04-Mar-2005	PO			SR11790 Display more user friendly msg than No record.
    ; 28-Feb-2005	PO			SR11790 If pidFINAPPayment is assigned a plus sign then no record
    ; 01-Oct-2004	Paul K		Added unpostable call and cleaned status flow.
    ; 26-Feb-2004	shobby		Created
    ;-------------------------------------------------------------------------------
	new objFINAPPayment,strStatus
	
	set strStatus=$$$OK
	
	if $$$NoKey(pidFINAPPayment) { ; ($get(pidFINAPPayment)="")||($get(pidFINAPPayment)="+")
		set strStatus=$listbuild("Fin00690")  ;Please Select A Data Record First.
	} else {
		set objFINAPPayment=$get(^FINAPPayment(0,pidFINAPPayment,1))
		set strStatus=$$UnPostable^FINSYSReview("FINAPPayment",$$$FINAPPaymentStatus(objFINAPPayment))
	}
	
	if strStatus=$$$OK {
		set YQ=$$$YQEnable
	} else {
		set YQ=$$$YQDisable(strStatus)
		;set YQ="1 "_strStatus
	}
	quit YQ
	
	
CanGoToLines(pidPayment)
    ;-------------------------------------------------------------------------------
    ; Checks whether or not lines can be added
    ;
    ; Returns:
    ;
    ; History:
    ; 09-Sep-2005	shobby	SR12671:Only check IsChequeUsed if payment method is by cheque.
    ; 26-Aug-2005	SteveS	SR12761: Created
    ;-------------------------------------------------------------------------------
	new idAcc,idChqNum,objPayment,strStatus
	
	set strStatus=$$$OK
	
	if $get(pidPayment)'="" {
		set strStatus=$$Editable(pidPayment)
		if $$$ISOK(strStatus) {
			set objPayment=$get(^FINAPPayment(0,pidPayment,1))
			if $$$FINAPPaymentPaymentMethod(objPayment)=$$$EnumFINARBANKLINEMETHODCheque {
				set idAcc=$$$FINAPPaymentBankAccount(objPayment)
				set idChqNum=$$$FINAPPaymentNextChequeNumber(objPayment)
				set strStatus=$$IsChequeUsed^FINAPChequeBook(idAcc,idChqNum,pidPayment)
			}
		}
	} else {
		set strStatus=$listbuild("Fin00089")  ; "No Record Selected."
	}
	if $$$ISOK(strStatus) {
		set YQ=0	
	} else {
		set YQ="1 "_$$$Text(strStatus)	
	}
	quit
	
	
PaymentTotal(pidPayment)
	;-------------------------------------------------------------------------------
	; Get the total value of this payment run
	;
	; Returns: currency
	;
	; History:
	; 19-Oct-2005	SteveS	SR13216: Created
	;-------------------------------------------------------------------------------
	new curTotal,idLine,curLineAmount
	
	set curTotal=0
	
	if '$$$NoKey(pidPayment) {
		set idLine=""
		for {
			set idLine=$order(^FINAPPaymentLine(0,pidPayment,idLine))
			quit:idLine=""
			
			set curLineAmount=$$$FINAPPaymentLineTotal($get(^FINAPPaymentLine(0,pidPayment,idLine,1)))	
			set curTotal=$$$FCAdd(curTotal,curLineAmount)
		}
	}
	quit curTotal
	
	
CanPrintCheque(pidPayment)
	;-------------------------------------------------------------------------------
	; Determine whether the Cheque Printing is allowed to be performed
	;
	; Params: Key for a Supplier Payment record
	;
	; ByRefs: YQ
	;
	; Returns: Nothing
	;
	; History:
	; 22-Sep-2006	SteveS	SR13944: Check for user access to multi-print
	; 16-May-2006	PO		SR14004: Created
	;-------------------------------------------------------------------------------
	new idLine,objFINAPPayment,objLine,strStatus,tmsPrinted
	
	set strStatus = $$$OK
	
	set idLine = ""
	for {
		set idLine = $order(^FINAPPaymentLine(0,pidPayment,idLine))
		quit:idLine=""
		
		set objLine = $get(^FINAPPaymentLine(0,pidPayment,idLine,1))		
		quit:$$$FINAPPaymentLineStatus(objLine)=$$$EnumFINSYSSTATUSPosted
	}
	
	if (idLine="") {
		set strStatus = $listbuild("REP00119")        ; "There are no cheques to print."
	} else {
		set objFINAPPayment = $get(^FINAPPayment(0,pidPayment,1))
		set tmsPrinted = $$$FINAPPaymentChequePrinted(objFINAPPayment)
		
		if (tmsPrinted'="") { // already printed
			if '$$PrintingAccess^FINGeneralSetup() {
				set strStatus=$listbuild("Fin01075")  ; "User not authorised to reprint cheques"
			}
		}
	}
	$$$YQHandler(strStatus)
	quit
	
	
GetType()
	;-------------------------------------------------------------------------------
	; Get the Type for the Effective Date
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	; The type of the effective date
	;
	; History:
	; 26-Jun-2006	RPW		SR13173: Created
	;-------------------------------------------------------------------------------
	quit "APPAY"
	
]]></Routine>
</Export>