<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPOUtil" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPOUtil
	
#include COMSYS
#include INConst
#include %occInclude
#include COMGridEdit31
	
#define LogR(%1,%2) 	;
#define LogR2(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^INRECSummaryUtil("_%2_") : "_$zh $$$JournalOn
#;define LogR2(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^INRECSummaryUtil("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn

GetInvOrderQty()
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 18-Jan-2010	DAVID		SR<>: Created
	;-------------------------------------------------------------------------------
	
	quit
	
GetPurOrderUnit(pidItem,pidSupplier)
	;-------------------------------------------------------------------------------
	; Get the order unit for the supplier as defined in INARTK, otherwise use the 
	; Items default Inventory QTY.
	;
	; Inputs:
	;
	; Returns: Item Unit to use for the order
	;
	; History:
	; 18-Jan-2010	DWR		SR17074: Created
	;-------------------------------------------------------------------------------
	new enumUnit
	
	set enumUnit = ""
	
	set objItemSup = $get(^INARTK(0,pidItem,pidSupplier,1))
	if objItemSup'=$$$NULLOREF {
		set enumUnit = $$$INARTKDeliveryQuantityUnit(objItemSup)
		
		if enumUnit="" {
			set enumUnit = $$GetInventoryUOM^INUOMConversion(pidItem)
		}
	} else {
		set enumUnit = $$GetInventoryUOM^INUOMConversion(pidItem) 
	}
	
	quit enumUnit
	
ProcessSupplies(pidOrder)
	;-------------------------------------------------------------------------------
	; Check If any Supplies require Updating (have been removed or added in Purchase
	; Order Maintenence)
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 22-Jan-2010	DWR		SR17074: Created
	;-------------------------------------------------------------------------------
	set strStatus = $$$OK
	
	if $data(^CacheTempSupply(YUSER)) {
		;------------------------------
		; Removed supplies
		;------------------------------
		set idSupplyMinus = ""
		for {
			set idSupplyMinus = $order(^CacheTempSupply(YUSER,"INPOLineRemove",idSupplyMinus))
			quit:idSupply=""
			
			set objSupply = $get(^INRequisition(0,0,idSupplyMinus,1))
			
			set $$$INRequisitionStatus(objSupply)   = 3
			set $$$INRequisitionINPOLine(objSupply) = ""
			set $$$INRequisitionINPOID(objSupply)   = ""
			set $$$INRequisitionRelease(objSupply)  = $$$NO

			set strStatus = $$$Save("INRequisition","0,"_idSupplyMinus,objSupply,$$$YES)
			quit:$$$ISERR(strStatus)
		}
		;------------------------------
		; Added supplies
		;------------------------------
		if $$$ISOK(strStatus) {
			set idSupplyAdd = ""
			for {
				set idSupplyAdd = $order(^CacheTempSupply(YUSER,"INPOLineAdd",idSupplyAdd))
				quit:idSupplyAdd=""
				
				set idLine = $get(^CacheTempSupply(YUSER,"INPOLineAdd",idSupplyAdd))
						
				set objSupply = $get(^INRequisition(0,0,idSupplyAdd,1))
			
				set $$$INRequisitionStatus(objSupply)   = 3
				set $$$INRequisitionINPOID(objSupply)   = pidOrder
				set $$$INRequisitionINPOLine(objSupply) = idLine
				set $$$INRequisitionRelease(objSupply)  = $$$NO

				set strStatus = $$$Save("INRequisition","0,"_idSupplyAdd,objSupply,$$$YES)
				quit:$$$ISERR(strStatus)
			}
		}
	}
	
	quit strStatus
]]></Routine>
</Export>