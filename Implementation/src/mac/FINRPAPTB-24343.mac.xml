<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINRPAPTB" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINRPAPTB
	#include COMSYS
	#include FINConst
	
	;-------------------------------------------------------------------------------
	; Routines related to running the supplier trial balance report
	;-------------------------------------------------------------------------------
 
GetSupplierRow(pidSupplier,pdteDate,pstrReportBy=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate,
			   pidCompany,pidLocation,pidLang)
	/*------------------------------------------------------------------------------
	; Return a row-set for the supplier trial balance
	;
	; Params:	pidSupplier		: The supplier number
	; 			pdteDate		: The trial balance date
	; 			pstrReportBy	: How to report by
	; 			pidCompany		: The company (YM) value
	; 			pidLocation		: The current location (YLOCATION) value
	; 			pidLang			: The current language (SPRACHE) value
	;
	; ByRefs:
	;
	; Returns: lstRow (a row set)
	;
	; History:
	; 11-Sep-2006	JW			SR14771: Translate group ; to ,
	; 07-Feb-2006	Steve S		SR13474: Created
	;-----------------------------------------------------------------------------*/
	new lstRow,lstTrialBalances,fltTotal,idx,strAmounts,curTemp,YM,SPRACHE,YLOCATION
	new objFINAPSupplier,strGroup
 
 	set YM			=	pidCompany
 	set YLOCATION	=	pidLocation
 	set SPRACHE		=	pidLang
 	
 	set strAmounts=""
	set lstRow=""
	
	set lstTrialBalances=$$CalcPeriodTotal^FINAPSupplier(pidSupplier,pdteDate,,,pstrReportBy)
	
	if (lstTrialBalances'="") {
		set fltTotal=0
		
		for idx=1:1:3 {
			set strAmounts=strAmounts_$$$FCBase($listget(lstTrialBalances,idx))_","
			set fltTotal=fltTotal+$listget(lstTrialBalances,idx)
		}
		
		set curTemp = $listget(lstTrialBalances,idx+1)+$listget(lstTrialBalances,idx+2)
		set strAmounts=strAmounts_curTemp_","
		set fltTotal=fltTotal+curTemp
		set strAmounts=strAmounts_fltTotal
	}
	
	set objFINAPSupplier=$get(^FINAPSupplier(YM,pidSupplier,1))
	
	set strGroup=$translate($$$FINAPSupplierSupplierGroup(objFINAPSupplier),";",",")	//SR14771
	
	set lstRow=lstRow_$listbuild(pidSupplier)
	set lstRow=lstRow_$listbuild($$$FINAPSupplierSupplierName(objFINAPSupplier))
	set lstRow=lstRow_$listbuild(strGroup)
	
	for idx=1:1:5 {
		set lstRow=lstRow_$listbuild($piece(strAmounts,",",idx))		
	}
 	
	quit lstRow			
	
GetGLEffectiveDate(pidCompany,pidSupplier,pidInvoice)
	/*------------------------------------------------------------------------------
	; For a supplier invoice, retrieve its GL Effective date.
	;
	; Params: pidCompany		: The company number
	; 		  pidSupplier		: The supplier number
	; 		  pidInvoice		: The invoice number
	;
	; ByRefs:
	;
	; Returns: dteGLEff (date)
	;
	; History:
	; 07-Feb-2006	Steve S		SR13474: Created
	;-----------------------------------------------------------------------------*/
	new YM
	set YM=$get(pidCompany)
 
	quit $$GetGLEffDate^FINAPInvoice(pidSupplier,pidInvoice)
	
	
InvoiceBalance(pidCompany,pidSupplier,pidInvoice,pdteDate)
	/*------------------------------------------------------------------------------
	; Return an invoice balance for a date (call back from SQL)
	;
	; Params: pidCompany		: The company number
	; 		  pidSupplier		: The supplier number
	; 		  pidInvoice		: The invoice number
	; 		  pdteDate			: The date to return the balance for
	;
	; ByRefs:
	;
	; Returns: curAmount, in base format
	;
	; History:
	; 07-Feb-2006	Steve S		SR13474: Created
	;-----------------------------------------------------------------------------*/
	new YM,curAmount
	
	set YM=pidCompany
	set curAmount=$$GetInvoiceBalance^FINAPSupplier(pidSupplier,pidInvoice,pdteDate)
	
	quit $justify($$$FCBase(curAmount),0,2)
	
	
IncludeInvoice(pidCompany,pidSupplier,pidInvoice,pdteDate,
			   pstrReportBy=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate)
	/*------------------------------------------------------------------------------
	; Determines whether or not an invoice should be displayed on
	; the report
	;
	; Params: pidCompany		: The company number (YM)
	; 		  pidSupplier		: The supplier on the invoice
	; 		  pidInvoice		: The invoice number
	; 		  pdteDate			: The trial balance date
	; 		  pstrReportBy		: How this trial balance is reporting by
	;
	; ByRefs:
	;
	; Returns: blnInclude ($$$YES/$$$NO)
	;
	; History:
	; 07-Feb-2006	Steve S		SR13474: Created
	;-----------------------------------------------------------------------------*/
	new blnInclude,YM,objFINAPInvoice,dteReportDate,curBalance
			   
	set blnInclude=$$$NO
	set YM=$get(pidCompany)
	
	if ($get(pidSupplier)'="")&&($get(pidInvoice)'="")&&(YM'="") {
		set objFINAPInvoice=$get(^FINAPInvoice(YM,pidSupplier,pidInvoice,1))
		if pstrReportBy=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate {
			set dteReportDate=$$$FINAPInvoiceInvoiceDate(objFINAPInvoice)	
		} elseif pstrReportBy=$$$EnumFINSYSINVOICEDATETYPEDueDate {
			set dteReportDate=$$$FINAPInvoiceDueDate(objFINAPInvoice)
		} elseif pstrReportBy=$$$EnumFINSYSINVOICEDATETYPEGLEffectiveDate {
			set dteReportDate=$$GetGLEffectiveDate(pidCompany,pidSupplier,pidInvoice)
		}
		
		if ($get(dteReportDate)'="")&&(dteReportDate<=pdteDate) {
			set curBalance=$$GetInvoiceBalance^FINAPSupplier(pidSupplier,pidInvoice,pdteDate)
			if ($$$FCBase(curBalance)'=0) set blnInclude=$$$YES
		}	
	}		   
			   
	quit blnInclude
	
	
SupplierName(pidCompany,pidSupplier)
	/*------------------------------------------------------------------------------
	; Retrieve a supplier's name from the invoice
	;
	; Params: pidCompany		: The company number (YM)
	; 		  pidSupplier		: The supplier number
	;
	; ByRefs:
	;
	; Returns: strName (string)
	;
	; History:
	; 07-Feb-2006	Steve S		SR13474: Created
	;-----------------------------------------------------------------------------*/
	new strName
	
	set strName=""
 
	if ($get(pidCompany)'="")&&($get(pidSupplier)'="") {
		set strName=$$$FINAPSupplierSupplierName($get(^FINAPSupplier(pidCompany,pidSupplier,1)))	
	}
 
	quit strName
	
	
SupplierGroup(pidCompany,pidSupplier)
	;-------------------------------------------------------------------------------
	; Retrieves a supplier's group
	;
	; Params: pidCompany		: The company number (YM)
	; 		  pidSupplier		: The supplier number
	;
	; ByRefs:
	;
	; Returns:	idGroup			: The supplier group
	;
	; History:
	; 14-Sep-2006	PO			SR14771: translate ; to ,
	; 14-Feb-2006	Steve S		SR13474: Created
	;-------------------------------------------------------------------------------
	new idGroup,objFINAPSupplier
 
	set idGroup=""
 
	if ($get(pidCompany)'="")&&($get(pidSupplier)'="") {
		set objFINAPSupplier=$get(^FINAPSupplier(pidCompany,pidSupplier,1))
		set idGroup = $translate($$$FINAPSupplierSupplierGroup(objFINAPSupplier),";",",") // SR14771
	}
 
	quit idGroup
	
	
OnBeforeRunning()
	;-------------------------------------------------------------------------------
	; Routine to run before running the report
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 04-Sep-2006	PO			SR14920: Set up date ranges
	; 31-Jul-2006	PO			SR14872: Populate report parameters.
	; 24-Jul-2006	Steve S		Created
	;-------------------------------------------------------------------------------
	new lstRange,dteTrialBalanceDate // SR14872
	
	if '$data(^CacheTempSuppliers(YUSER)) {
		set Q=$$$QDontSave
		do ReturnError^COMUtilError($$$Text("Fin00163"))  ;Supplier Required
	} else { // SR14872
		set dteTrialBalanceDate = VORG(4)
		//set lstRange = $$GetStartAndEndDates^FINRPTBUtils(VORG(4),SPRACHE,4,YM)
		set lstRange = $$GetPeriodDates^FINRPTBUtils(dteTrialBalanceDate,YM)
		set VORG(10) = $$Date^COMRPUtil($listget(lstRange,1),SPRACHE)	// CurrentStart
		set VORG(11) = $$Date^COMRPUtil(dteTrialBalanceDate,SPRACHE)	// CurrentEnd
		set VORG(12) = $$Date^COMRPUtil($listget(lstRange,3),SPRACHE)	// 1MonthStart
		set VORG(13) = $$Date^COMRPUtil($listget(lstRange,2),SPRACHE)	// 1MonthEnd
		set VORG(14) = $$Date^COMRPUtil($listget(lstRange,5),SPRACHE)	// 2MonthStart
		set VORG(15) = $$Date^COMRPUtil($listget(lstRange,4),SPRACHE)	// 2MonthEnd
		set VORG(16) = $$Text^COMRPUtil("Fin00968",SPRACHE)				// 3MonthStart
		set VORG(17) = $$Date^COMRPUtil($listget(lstRange,6),SPRACHE)	// 3MonthEnd
	}
 
	quit
 
Period(pidCompany,pidPeriodType,pdteDate,pdteTrialBalanceDate,plngCurrentMonth)
	;-------------------------------------------------------------------------------
	; Get the Periods from the FINAPSupplier. This is an interface routine for Reports.
	; 
	; NOTE: YM is not set from Reports.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 11-Aug-2006	PO/RW		SR14872: Created, codecheck
	;-------------------------------------------------------------------------------
	new YM
	
	set YM = pidCompany
 
	quit $$Period^FINAPSupplier(pidPeriodType,pdteDate,$$$NO,pdteTrialBalanceDate,plngCurrentMonth)
 
GenerateData(pidCompany,pidLanguage,pdteTrialBalanceDate,pidInvoiceDateType,pidUser,plstPeriodDates)
	;-------------------------------------------------------------------------------
	; Generate the body of the detail for the Detailed AP Trial Balance report
	;
	; Params:
	; pidCompany - Company Id
	; pidLanguage - Language Id
	; pdteTrialBalanceDate - Trial Balance Date
	; pidInvoiceDateType - Invoice Date Type / Report By
	; pidUser - User Id
	; plstPeriodDates - List of start and end dates for periods
	;
	; ByRefs: None
	;
	; Returns: List of totals for the whole Trial Balance
	;
	; History:
	; 14-Sep-2006	PO		SR14771: translate ; to ,
	; 29-Aug-2006	PO		SR14920: Created
	;-------------------------------------------------------------------------------
	new idSupplier,idInvoice,objInvoice,objSupplier,strSupplierGroup,strSupplierName
	new curSupplierCurrentTotal,curSupplierMonth1Total,curSupplierMonth2Total,curSupplierMonth3Total,curSupplierTotalBalance
	new curCurrentTotal,curMonth1Total,curMonth2Total,curMonth3Total,curTotalBalance,lstSupplierTotals
 
	set curCurrentTotal = 0
	set curMonth1Total = 0
	set curMonth2Total = 0
	set curMonth3Total = 0
	set curTotalBalance = 0
 
	$$$Order2(^CacheTempSuppliers,pidUser,idSupplier)
		set lstSupplierTotals = ""
 
		set objSupplier = $get(^FINAPSupplier(pidCompany,idSupplier,1))
		set strSupplierGroup = $translate($$$FINAPSupplierSupplierGroup(objSupplier),";",",") // SR14771
		set strSupplierName = $$$FINAPSupplierSupplierName(objSupplier)
 
		if $$IncludeInvoices(pidCompany,idSupplier,pdteTrialBalanceDate,pidInvoiceDateType,pidLanguage,pidUser,plstPeriodDates,strSupplierGroup,strSupplierName,.lstSupplierTotals) {
			
			set curSupplierCurrentTotal = $listget(lstSupplierTotals,1)
			set curSupplierMonth1Total = $listget(lstSupplierTotals,2)
			set curSupplierMonth2Total = $listget(lstSupplierTotals,3)
			set curSupplierMonth3Total = $listget(lstSupplierTotals,4)
			set curSupplierTotalBalance = $listget(lstSupplierTotals,5)
			
			set ^CacheTempRow(pidUser,idSupplier) = $listbuild(strSupplierGroup,
															   strSupplierName,
															   idSupplier,																	; Supplier Id 
															   $$FormatCurrency^COMRPUtil(curSupplierCurrentTotal,pidCompany,pidLanguage),	; Supplier's current total
															   $$FormatCurrency^COMRPUtil(curSupplierMonth1Total,pidCompany,pidLanguage),	; Supplier's month 1 total
															   $$FormatCurrency^COMRPUtil(curSupplierMonth2Total,pidCompany,pidLanguage),	; Supplier's month 2 total
															   $$FormatCurrency^COMRPUtil(curSupplierMonth3Total,pidCompany,pidLanguage),	; Supplier's month 3 total
															   $$FormatCurrency^COMRPUtil(curSupplierTotalBalance,pidCompany,pidLanguage))	; Supplier's balance
													
			set curCurrentTotal = curCurrentTotal + curSupplierCurrentTotal
			set curMonth1Total = curMonth1Total + curSupplierMonth1Total
			set curMonth2Total = curMonth2Total + curSupplierMonth2Total
			set curMonth3Total = curMonth3Total + curSupplierMonth3Total
			set curTotalBalance = curTotalBalance + curSupplierTotalBalance
		}
	$$$End
 
	quit $listbuild(curCurrentTotal,curMonth1Total,curMonth2Total,curMonth3Total,curTotalBalance)
 
IncludeInvoices(pidCompany,pidSupplier,pdteTrialBalanceDate,pidInvoiceDateType,pidLanguage,pidUser,plstPeriodDates,pstrSupplierGroup,pstrSupplierName,&plstSupplierTotals)
	;-------------------------------------------------------------------------------
	; Include Supplier's invoices and sum the amounts
	;
	; Params:
	; pidCompany - Company Id
	; pidSupplier - Supplier Id
	; pdteTrialBalanceDate - Trial Balance Date
	; pidInvoiceDateType - Invoice Date Type / Report By
	; pidLanguage - Language Id
	; pidUser - User Id
	; plstPeriodDates - List of start and end dates for periods
	; pstrSupplierGroup - 
	; pstrSupplierName - 
	;
	; ByRefs: plstSupplierTotals
	;
	; Returns: $$$YES if one or more invoices is included, otherwise $$$NO
	;
	; History:
	; 30-Aug-2006	PO		SR14920: Created
	;-------------------------------------------------------------------------------
	new idInvoice,objInvoice,dteInvoice,strInvoiceDate,dteDue,strDueDate,dteGLEff,strGLEffDate
	new dteDate,curCurrentAmount,curMonth1Amount,curMonth2Amount,curMonth3Amount,curBalance,blnIncluded,intCount
	new dteStartOfCurrent,dteEndOfMonth1,dteStartOfMonth1,dteEndOfMonth2,dteStartOfMonth2,dteEndOfMonth3
	new curSupplierCurrentTotal,curSupplierMonth1Total,curSupplierMonth2Total,curSupplierMonth3Total,curSupplierTotalBalance
 
	set curSupplierCurrentTotal = 0
	set curSupplierMonth1Total 	= 0
	set curSupplierMonth2Total 	= 0
	set curSupplierMonth3Total 	= 0
	set curSupplierTotalBalance = 0
 
	set dteStartOfCurrent 		= $listget(plstPeriodDates,1)
	set dteEndOfMonth1 			= $listget(plstPeriodDates,2)
	set dteStartOfMonth1 		= $listget(plstPeriodDates,3)
	set dteEndOfMonth2 			= $listget(plstPeriodDates,4)
	set dteStartOfMonth2 		= $listget(plstPeriodDates,5)
	set dteEndOfMonth3 			= $listget(plstPeriodDates,6)
 
	set blnIncluded = $$$NO
 
	$$$Order3(^FINAPInvoice,pidCompany,pidSupplier,idInvoice)
		continue:'$$IncludeInvoice(pidCompany,pidSupplier,idInvoice,pdteTrialBalanceDate,pidInvoiceDateType)
	
		set objInvoice 		= $get(^FINAPInvoice(pidCompany,pidSupplier,idInvoice,1))
 
		set dteInvoice 		= $$$FINAPInvoiceInvoiceDate(objInvoice)
		set strInvoiceDate 	= $$Date^COMRPUtil(dteInvoice,pidLanguage)
		set dteDue 			= $$$FINAPInvoiceDueDate(objInvoice)
		set strDueDate 		= $$Date^COMRPUtil(dteDue,pidLanguage)
		set dteGLEff 		= $$GetGLEffectiveDate(pidCompany,pidSupplier,idInvoice)
		set strGLEffDate 	= $$Date^COMRPUtil(dteGLEff,pidLanguage)
 
		if pidInvoiceDateType = $$$EnumFINSYSINVOICEDATETYPEInvoiceDate {
			set dteDate = dteInvoice
		} elseif pidInvoiceDateType = $$$EnumFINSYSINVOICEDATETYPEDueDate {
			set dteDate = dteDue
		} elseif pidInvoiceDateType = $$$EnumFINSYSINVOICEDATETYPEGLEffectiveDate {
			set dteDate = dteGLEff
		}
 
		set curCurrentAmount = 0
		set curMonth1Amount = 0
		set curMonth2Amount = 0
		set curMonth3Amount = 0
 
		if $$$DateWithinRange(dteDate,dteStartOfCurrent,pdteTrialBalanceDate) {
			set curCurrentAmount = $$InvoiceBalance(pidCompany,pidSupplier,idInvoice,pdteTrialBalanceDate)
			set curSupplierCurrentTotal = curSupplierCurrentTotal + curCurrentAmount
			set curBalance = curCurrentAmount
		} elseif $$$DateWithinRange(dteDate,dteStartOfMonth1,dteEndOfMonth1) {
			set curMonth1Amount = $$InvoiceBalance(pidCompany,pidSupplier,idInvoice,pdteTrialBalanceDate)
			set curSupplierMonth1Total = curSupplierMonth1Total + curMonth1Amount
			set curBalance = curMonth1Amount
		} elseif $$$DateWithinRange(dteDate,dteStartOfMonth2,dteEndOfMonth2) {
			set curMonth2Amount = $$InvoiceBalance(pidCompany,pidSupplier,idInvoice,pdteTrialBalanceDate)
			set curSupplierMonth2Total = curSupplierMonth2Total + curMonth2Amount
			set curBalance = curMonth2Amount
		} elseif dteDate <= dteEndOfMonth3 {
			set curMonth3Amount = $$InvoiceBalance(pidCompany,pidSupplier,idInvoice,pdteTrialBalanceDate)
			set curSupplierMonth3Total = curSupplierMonth3Total + curMonth3Amount
			set curBalance = curMonth3Amount
		}
		set curSupplierTotalBalance = curSupplierTotalBalance + curBalance
 
		set ^CacheTempAPTBInvoice(pidUser,pidSupplier,$increment(intCount)) = $listbuild(pstrSupplierGroup,	; Supplier's group
																						 pstrSupplierName,	; Supplier's name
																						 pidSupplier,		; Supplier Id
																						 idInvoice,			; Invoice Id
																						 strInvoiceDate,	; Invoice date (formatted)
																						 dteInvoice,		; Invoice date
																						 strDueDate,		; Due Date (formatted)
																						 dteDue,			; Due Date
																						 strGLEffDate,		; GL effective date (formatted)
																						 dteGLEff,			; GL effective date
																						 $$FormatCurrency^COMRPUtil(curCurrentAmount,pidCompany,pidLanguage),	; Invoice's current amount
																						 $$FormatCurrency^COMRPUtil(curMonth1Amount,pidCompany,pidLanguage),	; Invoice's month 1 amount
																						 $$FormatCurrency^COMRPUtil(curMonth2Amount,pidCompany,pidLanguage),	; Invoice's month 2 amount
																						 $$FormatCurrency^COMRPUtil(curMonth3Amount,pidCompany,pidLanguage),	; Invoice's month 3 amount
																						 $$FormatCurrency^COMRPUtil(curBalance,pidCompany,pidLanguage))			; Invoice's balance
		
		set blnIncluded = $$$YES
	$$$End
 
	set plstSupplierTotals = $listbuild(curSupplierCurrentTotal,
										curSupplierMonth1Total,
										curSupplierMonth2Total,
										curSupplierMonth3Total,
										curSupplierTotalBalance)
 
	quit blnIncluded
]]></Routine>
</Export>