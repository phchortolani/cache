<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INSHIPINFO" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INSHIPINFO
#include COMSYS
#include INConst
 
OnAfterDataFields(YKEY="",YFELD="")
	do ^INSHIPINFOSUCH
	quit
	
OnAfterFormConstruction(YKEY="",YFELD="")
	quit
 
OnAfterPrimaryKey(YKEY="",YFELD="")
	quit
	
OnAfterSave(YKEY="",YFELD="")
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 11-Oct-2006	GRF		SR15107: Split INSHIPINFOCOSTSCustoms as separate routine
	; 13-Jul-2005	shobby	SR12744:Don't bother displaying a message just update
	; 						the data with the new values.
	; 19-Jun-2005	shobby	Use the unformatted value to compare with fltAmount.
	; 						Problem ie (1,274.00<>1274) SR12679
	;-------------------------------------------------------------------------------
    do OnAfterSave^INSHIPINFOTL
    
	new fltAmount,strMessage,objINSHIPINFOCOSTS,strStatus
	
	set fltAmount=$$GetEstimatedCosts(YKEY,YFELD)
 
	if +$$$INSHIPINFOEstimatedCosts(YFELD)'=+fltAmount {
		;set strMessage=$lb("IN00337",$j(fltAmount,1,2))  ;Warning! Review Service Costs
		;do DisplayMessage^COMUtils("INSHIPINFOCOSTS",YKEY_",CUSTOMS",strMessage,,0)
		set objINSHIPINFOCOSTS=$get(^INSHIPINFOCOSTS(YM,YKEY,"CUSTOMS",1))
	;	set $$$INSHIPINFOCOSTSEstimatedCosts(objINSHIPINFOCOSTS)=$$GetCustoms^INSHIPINFOCOSTS(YKEY_",CUSTOMS",YFELD)  ; SR15107
		set $$$INSHIPINFOCOSTSEstimatedCosts(objINSHIPINFOCOSTS)=$$GetCustoms^INSHIPINFOCOSTSCustoms(YKEY_",CUSTOMS",YFELD)
		set strStatus=$$Save^COMUtils("INSHIPINFOCOSTS",YKEY_",CUSTOMS",objINSHIPINFOCOSTS,1)
		set $$$INSHIPINFOEstimatedCosts(YFELD)=$$^INSHIPINFOCC(YKEY)
		set strStatus=$$Save^COMUtils("INSHIPINFO",YKEY,YFELD,1)
	}
	quit
 
 
GetEstimatedCosts(YKEY,YFELD)
	;-------------------------------------------------------------------------------
	; Determine the Estimated Service Costs based on the current 'Country Of Origin'
	; setting.  Which will indicate whether the service costs need to be updated.
	;
	; Returns:
	;
	; History:
	; 11-Oct-2006	GRF		SR15107: Split INSHIPINFOCOSTSCustoms as separate routine
	; 10-Jun-2005	shobby	Created SR12408
	;-------------------------------------------------------------------------------
	new fltAmount,idImport,idType,objINSHIPINFOCOSTS
	
	set fltAmount=0
	set idImport=$piece(YKEY,",",1)
	
	if idImport'="" {
		set idType=""
		for {
			set idType=$order(^INSHIPINFOCOSTS(YM,idImport,idType))
			quit:idType=""
			
			set objINSHIPINFOCOSTS=$get(^INSHIPINFOCOSTS(YM,idImport,idType,1))
			if idType="CUSTOMS" {
	;			set fltAmount=$$$FCAdd(fltAmount,$$GetCustoms^INSHIPINFOCOSTS(YKEY_",CUSTOMS",YFELD))  ; SR15107
				set fltAmount=$$$FCAdd(fltAmount,$$GetCustoms^INSHIPINFOCOSTSCustoms(YKEY_",CUSTOMS",YFELD))
			} else {
				set fltAmount=$$$FCAdd(fltAmount,$$$INSHIPINFOCOSTSEstimatedCosts(objINSHIPINFOCOSTS))
			}
		}
	}
	quit fltAmount
	
OnAfterDelete(pidImport)
	;-------------------------------------------------------------------------------
	; Routine to run after deleting an import record
	;
	; Params: pidImport		: The import number
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 06-Dec-2006	Steve S		SR15233: Created
	;-------------------------------------------------------------------------------
	if $get(pidImport)'="" {
		do RemoveLines(pidImport)
	}
	
	quit
	
RemoveLines(pidImport)
	;-------------------------------------------------------------------------------
	; Remove the import lines once an import is deleted
	;
	; Params: pidImport		: The import number
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 06-Dec-2006	Steve S		SR15233: Created
	;-------------------------------------------------------------------------------
	new idxImport,idOrder,idLine,idSupp,idConf,strKey
	new strStatus
 
	set idxImport = $$$Index(pidImport)
	set strStatus = $$$OK
 
	set idOrder=""
	for {
		set idOrder = $order(^INAUFPAs(YM,2,idxImport,idOrder))
		quit:(idOrder="")||($$$ISERR(strStatus))
		
		set idLine=""
		for {
			set idLine = $order(^INAUFPAs(YM,2,idxImport,idOrder,idLine))
			quit:(idLine="")||($$$ISERR(strStatus))
			
			set idSupp=""
			for {
				set idSupp = $order(^INAUFPAs(YM,2,idxImport,idOrder,idLine,idSupp))
				quit:(idSupp="")||($$$ISERR(strStatus))
				
				set idConf = ""
				for {
					set idConf = $order(^INAUFPAs(YM,2,idxImport,idOrder,idLine,idSupp,idConf))
					quit:(idConf="")||($$$ISERR(strStatus))
					
					set strKey = idOrder_","_idLine_","_idSupp_","_idConf
					
					set strStatus=$$$Kill("INAUFPA",strKey)
				}
			}
		}
	}
 
	quit
	
]]></Routine>
</Export>