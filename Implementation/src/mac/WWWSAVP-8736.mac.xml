<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWSAVP" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWSAVP
	
#include COMSYS
#include WWWConst
	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		Check Form Key
	;		PRUEFEN PRIMÄRSCHLUESSEL
	;
	; NOTE: Keys YKEY(YI) are in external (display) format
	;
	; History :
	; 01-Jun-2010	GRF		SR17146: Call common code for Dates
	; 20-Oct-2008	GRF		SR12505: Corrections to OnlyAllowChars test; Recognise
	; 							WWW121D
	; 20-Aug-2007	GM		SR13729: Change "FELDFORMAT" parameter to $$GetFormat^INPARA()
	; 15-Mar-2007	GRF		SR12505: Implement code for $$$WWW121DontAllowChars;
	; 							Naked References; use YTYP, idChangeInput
	; 13-Mar-2007	GRF		SR12505: Doco; expand commands; remove unneeded +; &&
	; 							rather than &.
	; 24-Mar-2006	JW		SR14422: Change to internal format
    ; 28-Oct-2005	JW		SR13074: Exchange Rate type
	; 25-Jul-2005	JW		SR12615: Relation validation
	; 30-May-2005	RobertW	SR12056: Attempt at Performance Increase
	; 27.09.1999	DT
	;-------------------------------------------------------------------------------
	
PRUEFP
	;-------------------------------------------------------------------------------
	;	Check keys    ; PRUEFEN PRIMÄRSCHLUESSEL
	; 
	; Called By : WWWSAVE, COMUtilStr
	; 
	; Inputs : 
	; 	poldYFELD		No longer used
	; 	
	; ByRef :
	;	YI			Key Number
	;	YTYP		Input Type            ERFASSUNGSTYP		^WWW002 D3
	;	YKEY(YI)	String list of keys   PRIMAERSCHLUESSEL
	;	YALLKEY		
	;	YLFZ		
	;
	; History
	; 25-Jun-2012	shobby	SR17817: Include WWW012
	; 21-Jun-2012	shobby	SR17817: Previous change only when the first primary key is location.
	;							eg.  includes INDRPDEMAND but excludes WWW122
	; 21-Nov-2011	shobby	SR17817: Call WWWNEXT when class has multiple keys.
 	; 09-Aug-2011	shobby	SR17807: GetFormat has moved.
	;-------------------------------------------------------------------------------
	new A,idChangeInput,internalA,objCustomData,Q,strAllowChars,strBlockChars,strTestChar
	new YPR,YPR1,YPR2,YPRUEF,YTEXT
	
	QUIT:$GET(YALLKEY)=9
	
	IF '$DATA(YLFZ) SET YLFZ=0
	 
	; Field Name - for error reporting
	;---------------------------------------
	SET YTEXT = $PIECE($GET(^WWW002(0,YDATEI,YI,1)),Y,2)
	IF $DATA(^WWW0021(0,YDATEI,YI,SPRACHE,1)) SET YTEXT = $PIECE($get(^WWW0021(0,YDATEI,YI,SPRACHE,1)),Y,1)
	
	set A             = $get(YKEY(YI))
	set YPRUEF        = $get(^WWW121(0,YFORM,YI,1))
	set objCustomData = $get(^WWW121D(0,YFORM,YI,YM,1))
	
	//set A = $zstrip(A,"<>W")		TODO - strip leading AND trailing spaces - anything else ?
	;                                      If do strip trailing space, can amend the next test which translates spaces to nulls before testing
	
	; Counter (InputType 9) - next number
	;---------------------------------------
	IF ($EXTRACT($TRANSLATE(A," "))="+")||(($$$WWW121AutomaticSequenceCounter(YPRUEF)=$$$YES)&&(A=""))||((YTYP=9)&&(A="")) DO
	. IF $EXTRACT(A,2,99)'="" IF $DATA(^WWW001(0,$EXTRACT(A,2,99))) SET A=$$^WWWNEXT($EXTRACT(A,2,99)) QUIT  ;TYBD;7,1,2004;ANDERER VORGABE IN DER DATEI DER LFD NUMMER
	. ;SR17817 IF YI'=1 quit:$TRANSLATE(YFKEY,",")=""  SET A=$$^WWWNEXT1(YDATEI,YFKEY,YI) QUIT
	. ;SR17817 IF (YI'=1)&&('$data(^WWW128(0,YDATEI))) QUIT:$TRANSLATE(YFKEY,",")=""  SET A=$$^WWWNEXT1(YDATEI,YFKEY,YI) QUIT ;SR17817
	. IF (YI'=1)&&(('$data(^WWW128(0,YDATEI)))||(($$$WWW002RelationClass($get(^WWW002(0,YDATEI,1,1)))'="WWW0121")&&($$$WWW002RelationClass($get(^WWW002(0,YDATEI,1,1)))'="WWW012"))) QUIT:$TRANSLATE(YFKEY,",")=""  SET A=$$^WWWNEXT1(YDATEI,YFKEY,YI) QUIT ;SR17817
	. SET A=$$^WWWNEXT(YDATEI)
	
	;NÄCHSTER DATENSATZ ;data record 
	IF YTYP=9 IF $EXTRACT(A)="+" DO
	. IF $EXTRACT(A,2,99)'="" IF $DATA(^WWW001(0,$EXTRACT(A,2,99))) SET A=$$^WWWNEXT($EXTRACT(A,2,99)) QUIT  ;TYBD;7,1,2004;ANDERER VORGABE IN DER DATEI DER LFD NUMMER
	. IF A'="+" QUIT
	. SET A=$$^WWWNEXT(YDATEI)
	
	IF A="+" SET A=" "		// TODO - remove this
	;---------------------------------------
	
	; Valid Relation, Mandatory Checks
	;---------------------------------------
	set strStatus = $$Validate(YDATEI,YFORM,YI,.A,$$$YES)
	if $$$ISERR(strStatus) {
		set A = ""				; Clear field if not valid
		SET ^WWWSOR(YUSER,$increment(YLFZ)) = YTEXT_": "_$$$Text(strStatus)_"|"
	}
	
	; "Min. Input Length"
	;---------------------------------------
	if (+$$$WWW121MinInputLength(YPRUEF)'=0) && ($length(A)<$$$WWW121MinInputLength(YPRUEF)) {
		set ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(268)_" "_+$$$WWW121MinInputLength(YPRUEF)_"|"
	}
	
	; "Only Following Characters Allowed"
	;---------------------------------------
	set strAllowChars = $$$WWW121OnlyAllowChars(YPRUEF)
	if strAllowChars'="" {
		for YPR1=1:1:$length(A) {
			set strTestChar = $extract(A,YPR1)
			
			if '$find(strAllowChars,strTestChar) {
				set ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(269)_" "_strAllowChars_"|"
				quit
			}
		}		
	}
	
	; "The following characters are not allowed"
	;---------------------------------------
	set strBlockChars = $$$WWW121DDontAllowCharacters(objCustomData)
	if strBlockChars="" set strBlockChars = $$$WWW121DontAllowChars(YPRUEF)
	for YPR1=1:1:$length(strBlockChars) {
		set strTestChar = $extract(strBlockChars,YPR1)
		continue:strTestChar=" "
		
		if A[strTestChar {
			set ^WWWSOR(YUSER,$increment(YLFZ)) = YTEXT_": "_$$^WWWTEXT(287)_" "_strBlockChars_"|"
			quit
		}
	}
	
	; Fill with zeroes (max 15 leading zeros)
	; FIXME : Strings with leading digits will get zero fill, those with leading alpha will not <GRF> 
	;---------------------------------------
	IF +$$$WWW121ForceStringLengthTo(YPRUEF)'=0 IF +A'=0 SET A=$EXTRACT((1_$EXTRACT("000000000000000",1,$$$WWW121ForceStringLengthTo(YPRUEF))+A),2,99)     ; SR12505
	
	; Character conversion
	;---------------------------------------
	set idChangeInput = $$$WWW121ChangeInputAs(YPRUEF)
	IF +$$$WWW121ChangeInputAs(YPRUEF)'=0 DO
	. IF idChangeInput="1" SET A = $$$UPPER(A)
	. IF idChangeInput="2" SET A = $$$LOWER(A)
	. IF idChangeInput="3" DO
	. . SET YPR=A,A=""
	. . FOR YPR1=1:1 SET YPR2=$PIECE(YPR," ",YPR1) QUIT:$PIECE(YPR," ",YPR1,999)=""  SET A=A_$$$UPPER($EXTRACT(YPR2))_$$$LOWER($EXTRACT(YPR2,2,5000))_" "
	. ;
	. IF idChangeInput="4" DO
	. . SET YPR=A,A=""
	. . FOR YPR1=1:2 SET YPR2=$EXTRACT(YPR,YPR1,YPR1+1) QUIT:YPR2=""  SET:$EXTRACT(YPR2,2)'=" " YPR2=$EXTRACT(YPR2)_" "_$EXTRACT(YPR2,2) SET A=A_YPR2
	. ;
	. IF idChangeInput="5" SET A=$TRANSLATE(A," ")                                     ;LEER ;void 
	. IF idChangeInput="6" SET A=$TRANSLATE($$^WWWUMLAU(A,3)," ")                      ;GROß UND OHNE LEER ;macro- And without void 
	. IF idChangeInput="7" SET A=$TRANSLATE(A,"][\}{|~,()@#$%^&*_=+<>?/-.:´`§²³!°µ")  ;OHNE SONDERZEICHEN;FIS;08.04.03/TYBD ;without special character 
	
	
	; SR17146 vvv
	; Check date
	;---------------------------------------
	if (YTYP=1) set A = $$CheckDate^WWWSAVD(A,SPRACHE,YUSER,YTEXT,.YLFZ)
	
	/*
	; Check date     ; "Wrong Date", "Wrong Date Format"
	;---------------------------------------
	IF YTYP=1 DO
	. IF A="." SET A=$$^WWWDATE($HOROLOG)
	. IF $EXTRACT(A)="-" IF +$EXTRACT(A,2,9)'=0 SET A = $$^WWWDATE($HOROLOG-$EXTRACT(A,2,9))
	. IF $EXTRACT(A)="+" IF +$EXTRACT(A,2,9)'=0 SET A = $$^WWWDATE($HOROLOG+$EXTRACT(A,2,9))
	. IF $LENGTH(A,".")=3 IF $LENGTH($PIECE(A,".",3))=2 IF $LENGTH(A)=8 DO 
	. . IF $EXTRACT(A,7,8)>25 SET A=$EXTRACT(A,1,2)_"."_$EXTRACT(A,4,5)_"."_$EXTRACT($PIECE($$^WWWDATE($HOROLOG),".",3),1,2)_$EXTRACT(A,7,8) QUIT
	. . IF $EXTRACT(A,7,8)<26 SET A=$EXTRACT(A,1,2)_"."_$EXTRACT(A,4,5)_"."_20_$EXTRACT(A,7,8)
	. ;
	. IF '$FIND(A,".") IF '$FIND(A,"/") IF $LENGTH(A)=8 SET A=$EXTRACT(A,1,2)_"."_$EXTRACT(A,3,4)_"."_$EXTRACT(A,5,8)
	. IF A'="" SET YPR=$$^WWWDATE1(A) IF YPR=""                                       SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(271)_"|"
	. IF SPRACHE="DE" IF A'="" IF '$FIND(A,"W") IF '$FIND(A,"w") IF $LENGTH(A,".")'=3 SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(272)_A_"|"
	*/
	; SR17146 ^^^
	
	; Time     ; "Wrong Time", "Wrong Time Format"
	;---------------------------------------
	IF YTYP=7 DO
	. IF A'="" IF '$FIND(A,":") DO
	. . IF $LENGTH(A)<3 SET A=+A_":00"
	. . IF $LENGTH(A)=3 SET A=+$EXTRACT(A)_":"_+$EXTRACT(A,2,3)
	. . IF $LENGTH(A)=4 SET A=+$EXTRACT(A,1,2)_":"_+$EXTRACT(A,3,4)
	. ;
	. IF A="." SET A=$$^WWWTIME($HOROLOG)
	. IF A'="" SET YPR=$$^WWWTIME1(A) IF YPR=""          SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(273)_"|"
	. IF A'="" IF ($LENGTH(A,":")<2)&&($LENGTH(A,".")<2) SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(274)_"|"
	
	; Amount fields  "Wrong Amount"
	;---------------------------------------
	IF (YTYP=8) || (YTYP=12) || (YTYP=18) DO
	. NEW A1,B1,B2,Z
	. SET Z=0
	. DO:'$FIND(A,"@")  IF $FIND(A,"@") SET B1=$PIECE(A,"@",1) SET B2=$PIECE(A,"@",2) SET B3=$PIECE(A,"@",3) NEW A SET A=B1 DO  SET A=B2 DO  SET A=B3 DO  ;FIS;21.05.04;25727;FREMDWÄHRUNG
	. . new YYDECIMAL
	. . ;SR17807 set YYDECIMAL = $$GetFormat^INPARA(8,YDECIMAL)
	. . set YYDECIMAL = $$GetFormat^WWW100(8,YDECIMAL)			;SR17807 
	. . set YYDECIMAL = $extract($translate(YYDECIMAL,"nNxX"),2)
	. . IF YYDECIMAL="" SET YYDECIMAL=YDECIMAL
	. . IF $GET(YYDECIMAL)="," IF $LENGTH(A,",")>2 SET:Z=0 YLFZ=YLFZ+1 SET Z=1 SET ^WWWSOR(YUSER,YLFZ)=YTEXT_": "_$$^WWWTEXT(275)_" "_A_"|"
	. . IF $GET(YYDECIMAL)="." IF $LENGTH(A,".")>2 SET:Z=0 YLFZ=YLFZ+1 SET Z=1 SET ^WWWSOR(YUSER,YLFZ)=YTEXT_": "_$$^WWWTEXT(275)_" "_A_"|"
	
	; Pattern Match  "Wrong Input Format"
	;---------------------------------------
	IF $$$WWW121Patternmatch(YPRUEF)'="" SET YPR=$$$WWW121Patternmatch(YPRUEF) IF A?@YPR=0 SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(276)_"|"
	
	IF $DATA(^WWWSOR(YUSER)) SET YKFEHL=1
	
	; Explicit character conversion in keys
	;---------------------------------------
	SET YKEY(YI)=$TRANSLATE(A,"%","/")
	QUIT 
	
	
Validate(pidClass,pidForm,pidField,&pstrValue,pblnDisplay=$$$NO)
	;-------------------------------------------------------------------------------
	; Validation of key part
	;
	; Called By : WWWFORMValidation, PRUEFP^WWWSAVP
	; 
	; Params:	pidClass	- class id
	; 			pidForm 	- form id
	; 			pidField	- data field number (WWW003)
	; 			pblnDisplay	- whether pstrValue is display value (or storage)
	;
	; ByRefs:	pstrValue	- key value, can be set to null
	;
	; Returns:	status - whether there is a problem
	;
	; History:
	; 06-Jan-2011	GRF		SR17579: Use explicit tag
	; 08-Aug-2006	JW		SR13594: Created
	;-------------------------------------------------------------------------------
	new strStatus,objField,strReason,strIn,strOut,idType
 
	set strStatus = $$$OK
	set objField  = $get(^WWW122(0,pidForm,pidField,1))
	set idType    = $$$WWW122InputType(objField)
	
	set strIn = $select(pblnDisplay:$$GetInternal^WWWTR(idType,pstrValue),1:pstrValue)
	
	if '$$ValidRelation^WWWFieldValidation("P",pidClass,pidForm,pidField,strIn,$$$NO,.strReason) {
		if $get(strReason)="" {
			set strOut    = $select(pblnDisplay:pstrValue,1:$$GetLiteral^WWWTR(idType,pstrValue))
			set strReason = $listbuild("WWW00028",strOut)                      ; "´%1´ is invalid"
		}
		set pstrValue = ""	; Clear field if not valid
	}
	
	if pstrValue="" {
		set strStatus = $select(strReason="":$listbuild(278),1:strReason)      ; "No Primary Key"
	}
	quit strStatus
	
]]></Routine>
</Export>