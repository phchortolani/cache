<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INTRNLoadList" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INTRNLoadList
#include INConst
#include COMSYS
 
#def1arg TempStore(%1) ^CacheTemp(YUCI,YUSER,%1)
 
CanPrintLoad(pidTFR)
	;-------------------------------------------------------------------------------
	; Determines whether Load List can be displayed
	;
	; Params:
	; pidTFR - Key of header record
	;
	; ByRefs: None
	;
	; Returns: Nothing (changes @NM variable YQ)
	;
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;-------------------------------------------------------------------------------
	new objTFR,objTFRPickLine,strStatus
	
	set strStatus=$$IsPrintingValid^INTRNValidation(pidTFR)

	if ((+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) ||
	     (+$$$WWWClientParamCoreChangesSESPE($get(^WWWClientParam(YM,YM,1)))) ||
	     (+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1))))) {
		if $$$ISOK(strStatus) {
			set objTFR = $get(^INTFR(YM,pidTFR,1))
			if ($$$INTFRFREE6(objTFR) '= ""){
				set strStatus = $$$NO
			}
		}
	}
  
	if $$$ISOK(strStatus) {
		set objTFR = $get(^INTFR(YM,pidTFR,1))
		
		if $$$INTFRPickListPrinted(objTFR) = "" {
			set strStatus = "IN00422"  ;Pick list needs to be printed."
		
		} else {
			set strStatus = $$ProductError^INTRNValidation("IN00438")  ;Please fix all errors before printing. 
		}
	}
 
	$$$YQHandler(strStatus)
 
	quit
 
 
 
PrintLoad(pidTFR)
	;-------------------------------------------------------------------------------
	; Display Load List
	;
	; Params:
	; pidTFR - Key of header record
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;-------------------------------------------------------------------------------
	do CanPrintLoad(pidTFR) 
	
	if YQ = $$$YQEnable {
		do PrintLoadList(pidTFR)
	} else {
		do ReturnError^COMUtils($$$YQMessage)
	}
 
	quit
 
PrintLoadList(pidTFR)
	;-------------------------------------------------------------------------------
	; Display the Pick List
	;
	; Params:
	; pidTFR - Transfer Order Id
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$Transaction^COMTransaction("PrintLoadListTxn^INTRNLoadList("""_pidTFR_""")",$$$YES)
 
	if $$$ISOK(strStatus) {
		//set $piece(^INUSER(YM,YBED,1),Y,76) = $$$INTFRTour($get(^INTFR(YM,pidTFR,1)))
		//do GoToTransferForm(61) ;BR014631
		;do GoToForm^COMUtilForm("INTRANSFER","","","",,,61)
		set strStatus = $$PrintLoadListDoc(pidTFR)
	}
 
	quit
	
PrintLoadListTxn(pidTFR)
	;-------------------------------------------------------------------------------
	; Update the load list printed time stamp.
	;
	; Params:
	; pidTFR - Transfer Order Id
	;
	; ByRefs: None
	;
	; Returns: strStatus - $$$OK if successful, otherwise error message
	;
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;-------------------------------------------------------------------------------
	new objTFR,strStatus
 
	set objTFR = $get(^INTFR(YM,pidTFR,1))
 
	set $$$INTFRLoadListPrinted(objTFR) = $horolog
	set strStatus = $$$Save("INTFR",pidTFR,objTFR,$$$YES)
	
	quit strStatus
	
	
PrintLoadListDoc(pidTFR)
	;-------------------------------------------------------------------------------
	; Finally Print the Load List (HTML Print)
	;
	; Params:
	; pidTFR - Transfer Order Id
	;
	; ByRefs: None
	;
	; Returns: strStatus - $$$OK if successful, otherwise error message
	;
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;-------------------------------------------------------------------------------
	new idShipLocn,objTFR,strStatus
	new ANZM,SOR,VERSNR,TOUR,TOUR1,TOURB,TOURD,BETV,BETVB,DEMAND,DEMAND1,objTour
	new ART,ART1,ARTB,MENGEL,MENGEREST,KG,M3,EINHEIT,INWE1,LAP,LAP1,WED,SATZ,SOR1,VOL,YDDSATZ,ABTEILUNG,ANZSEIT
	
	set strStatus=$$$OK
	//set idShipLocn=$GET(YLOCATION)
 
	set objTFR = $get(^INTFR(YM,pidTFR,1))
	set idShipLocn = $$$INTFRSendingLocation(objTFR)
	
	SET VERSNR=objTFR		//$PIECE($GET(^INUSER(YM,YBED,1)),Y,76)  ;DISPATCH NUMMER
	IF VERSNR="" DO ^WWWINFO($$^WWWTEXT(46),1,,1) QUIT      ; "No Data Available"
	
	KILL ^WWWSOR(YUSER)
	SET ANZM=0 
	//set objTour = $get(^INDRPUMTOUR(YM,idShipLocn,VERSNR,1))
	
	set SOR = $$StoreLinesInCache(idShipLocn,pidTFR,$get(EINHEIT))
	SET YNOFOOT=1
	DO ^WWWBACK
	DO DRUCK(pidTFR)
	IF ANZM=0 DO ^WWWINFO($$^WWWTEXT(46),1,,1)
	KILL ^WWWSOR(YUSER)
		
	quit strStatus
 
 
StoreLinesInCache(pidSendingLocn,pidTFR,pstrUnit)
	;-------------------------------------------------------------------------------
	;	This sub-routine is to replace SORT when displaying the Load List of a
	;	Transfer Order (as opposed to an Inter-Warehouse Traffic Workflow)
	;
	;	A number of changes have occurred due the implementing of reservations in
	;	Transfer Orders, subsequently this sub-routine is a complete replacement.
	;
	; Params:
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;-------------------------------------------------------------------------------
	new idKey,idTFR,idxLine,idPickLine,objPickLine,objLine,strUnit,idItem,fltQuantity,objTour,objItem,dteDeliveryDate,idUOM,strItemDescription
	new idDemand,objDemand,idSupply,idReceivingLocn,objLocation,strLocation,idPickSequence,idDepartment,idSendingStockLocn,objStockLocns
	new idDispatch,strDesignation,strStatus,objTFR,idxTFR,fltDemandQuantity,fltWeight,fltVolume,fltTotalWeight,fltTotalVolume,intSort
	new idShipLocn,DEMAND,DEMAND1 // These two lines are support code for updating demand & supply
	
	set idShipLocn = pidSendingLocn
 
 	//set objTour = $get(^INDRPUMTOUR(YM,pidSendingLocn,pidTour,1))
	//set $$$INDRPUMTOURLoadListPrinted(objTour) = $$$YES
	//set strStatus = $$$Save("INDRPUMTOUR",pidSendingLocn_","_pidTour,objTour,$$$YES)
 
 	//set idDispatch = $$$INDRPUMTOURDispatch(objTour)
 	//set strDesignation = $$$INDRPUMLKWDesignation($get(^INDRPUMLKW(YM,idDispatch,1)))	; Designation
 
	//set idTFR = $$$INDRPUMTOURTransfer(objTour)
	set idTFR  = pidTFR
	set idxTFR = $$$Index(idTFR)
	set objTFR = $get(^INTFR(YM,idTFR,1))
	set idReceivingLocn = $$$INTFRReceivingLocation(objTFR)	; Receiving location
	set objLocation = $get(^WWW0121(0,YM,idReceivingLocn,1))
	set strLocation = $$$WWW0121LocationName(objLocation)	; Stock location description
	set dteDeliveryDate = ""		//$$$INDRPUMTOURDeliveryDate(objTour)	; Delivery Date
 
	set intSort = +$$$INVORGLoadListDRPSortBy($get(^INVORG(YM,YM,1)))
 
	$$$Order4(^INTFRPickLines,YM,1,idxTFR,idxLine)
		set objPickLine = $get(^INTFRPickLine(YM,idTFR,$order(^INTFRPickLines(YM,1,idxTFR,idxLine,idTFR,"")),1))
		set objLine     = $get(^INTFRLine(YM,idTFR,$$$INTFRPickLineSourceline(objPickLine),1))
 
		set idItem  = $$$INTFRLineItem(objLine)
		set objItem = $get(^INART(YM,idItem,1))
 
		set fltWeight = +$$$INARTWeight(objItem)
		set fltVolume = +$$$INARTVolume(objItem)
 
		set idUOM = $$$INARTUnitofMeasure(objItem)	; Items Unit of Measure
		if idUOM = "" {
			set strUnit = $get(pstrUnit)
		} else {
			set strUnit = $$$AppEnum("EINHEIT",idUOM)
		}
 
		set strItemDescription = "("_idItem_") "_$extract($$$INARTSearchName(objItem),1,15)_"..."	; Item Description
 
		set idDemand  = $piece($$$INTFRLineDemand(objLine),$$$COMMA,2)	; Demand ID
		set objDemand = $get(^INDRPDEMAND(YM,pidSendingLocn,idDemand,1))
		
		/*
		if $$$INDRPDEMANDLoadedQuantity(objDemand) '= "" {
			set fltDemandQuantity = $$$INDRPDEMANDLoadedQuantity(objDemand)
		} elseif $$$INDRPDEMANDPickedQuantity(objDemand) '= "" {
			set fltDemandQuantity = $$$INDRPDEMANDPickedQuantity(objDemand)
		} else {
			set fltDemandQuantity = $$$INDRPDEMANDQuantity(objDemand)
		}
		*/
		set fltDemandQuantity = $$$INTFRLineQuantity(objLine)
 
		//set DEMAND = idDemand // These three lines are for updating the demand & supply
		//set DEMAND1 = objDemand
		//do DEMANDEIN
 
		set idSupply = $$$INDRPDEMANDOrderNo(objDemand)	; Supply ID - Field never appears to be populated
 
		$$$Order6(^INTFRPickLines,YM,1,idxTFR,idxLine,idTFR,idPickLine)
			set objPickLine = $get(^INTFRPickLine(YM,idTFR,idPickLine,1))
 
			set fltQuantity = $$$INTFRPickLinePickedQuantity(objPickLine)				; Picked Quantity
			set idSendingStockLocn = $$$INTFRPickLineSendingStockLocation(objPickLine)	; Sending Stock Location
			set objStockLocns = $get(^INLP(YM,pidSendingLocn,idSendingStockLocn,1))
			set idPickSequence = $$$INLPPickSequence(objStockLocns)						; Pick Sequence
			if idPickSequence = "" set idPickSequence = " "
			set idDepartment = $$$INLPDepartment(objStockLocns)							; Department
			if idDepartment = "" set idDepartment = " "
 
			set fltTotalWeight = $justify(fltWeight*fltQuantity,0,2)
			set fltTotalVolume = $justify(fltVolume*fltQuantity,0,2)
			if intSort = 1 {
				SET ^WWWSOR(YUSER,idTFR,idDemand) = idTFR_Y_strItemDescription_Y_fltDemandQuantity_" "_strUnit_Y_fltTotalWeight_Y_fltTotalVolume_Y_idDemand_Y_idSupply
			} elseif intSort = 0 {
				set ^WWWSOR(YUSER,idTFR,idDepartment,idPickSequence,idDemand) = idTFR_Y_strItemDescription_Y_fltDemandQuantity_" "_strUnit_Y_fltTotalWeight_Y_fltTotalVolume_Y_idDemand_Y_idSupply
			}
		$$$End
	$$$End
 
	quit intSort
 
DRUCK(pidTFR)
	;------------------------------------------------------------------
	;  PRINT LOAD LIST
	;
	;  ÃœBERSCHRIFT ;superscription 
	;  
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;------------------------------------------------------------------
	new objVORGLANG
 
	set objTFR = $get(^INTFR(YM,pidTFR,1))
	set idFromLoc = $$$INTFRSendingLocation(objTFR)
	set idToLoc   = $$$INTFRReceivingLocation(objTFR)
	set idRef     = $$$INTFRDispatch(objTFR)
	set intStatus = $$$INTFRStatus(objTFR)
	
	SET VORG1=$GET(^INVORG(YM,YM,1))
	set objVORGLANG = $get(^INVORGLANG(YM,YM,SPRACHE,1)) //SR14230
	SET TEXT=$$$INVORGLANGTextWithinManifest(objVORGLANG)          ;ZUSATZTEXT
	;SET TEXT=$PIECE(VORG1,Y,53)          ;ZUSATZTEXT
	SET ANZSEIT=$PIECE(VORG1,Y,83)        ;MAXIMAL ANZAHL PRO SEITE ;Number within side 
	IF ANZSEIT="" SET ANZSEIT=30
	SET UES=""
	SET $PIECE(UES,Y,1)=$$^WWWTEXT(207)   ;NR
	SET $PIECE(UES,Y,2)=$$^WWWTEXT(32024) ;ARTIKEL ;item 
	SET $PIECE(UES,Y,3)=$$^WWWTEXT(31407) ;MENGE   ;quantity 
	
	DO  ;KG
	. IF $DATA(^WWW0031(0,"INART",43,SPRACHE,1)) SET $PIECE(UES,Y,4)=$PIECE(^WWW0031(0,"INART",43,SPRACHE,1),Y,1) QUIT
	. SET $PIECE(UES,Y,4)=$PIECE(^WWW003(0,"INART",43,1),Y,1)
	
	DO  ;MÂ³
	. SET VOL=$PIECE($GET(^WWW003(0,"INART",44,1)),Y,1)
	. IF $DATA(^WWW0031(0,"INART",44,SPRACHE,1)) SET VOL=$PIECE(^WWW0031(0,"INART",44,SPRACHE,1),Y,1)
	. IF $FIND(VOL,"m2") SET VOL=$PIECE(VOL,"m2",1)_"m"_"<sup>"_2_"</sup>"_$PIECE(VOL,"m2",2,99)
	. IF $FIND(VOL,"m3") SET VOL=$PIECE(VOL,"m3",1)_"m"_"<sup>"_3_"</sup>"_$PIECE(VOL,"m3",2,99)
	. SET $PIECE(UES,Y,5)=VOL
	  
	SET $PIECE(UES,Y,6)=$$^WWWTEXT(32612)     ;DEMAND
	SET $PIECE(UES,Y,7)=$$^WWWTEXT(32047)     ;AUFTRAG ;mandate  ;order 
	
	IF +SOR=0 SET VERSNR="" FOR  SET VERSNR=$ORDER(^WWWSOR(YUSER,VERSNR)) QUIT:VERSNR=""  DO
	. SET ABTEILUNG=""
	. FOR  SET ABTEILUNG=$ORDER(^WWWSOR(YUSER,VERSNR,ABTEILUNG)) QUIT:ABTEILUNG=""  DO
	. . SET ANZM=0
	. . SET SUM(1)=0  ;GEWICHT ;wt. 
	. . SET SUM(2)=0  ;VOLUMEN ;volume 
	. . SET SUM(3)=0  ;MENGE ;quantum  ;quantity 
	. . //SET TOUR1=$GET(^INDRPUMTOUR(YM,idShipLocn,VERSNR,1))
	. . SET TOURB=""
	. . SET BETVB=""
	. . SET BETV=idFromLoc	//$PIECE(TOUR1,Y,3)
	. . SET TOUR=idRef		//$PIECE(TOUR1,Y,2)
	. . IF TOUR=""   SET TOUR=" "
	. . IF TOUR'=""  SET TOURB=$PIECE($GET(^INDRPUMLKW(YM,TOUR,1)),Y,2)
	. . IF BETVB'="" SET BETVB="("_BETV_") "_$PIECE($GET(^WWW0121(0,YM,BETV,1)),Y,1)
	. . ;
	. . IF ANZM>0 DO FF^WWWW()
	. . DO UEBER(pidTFR)
	. . SET YDDSATZ=0
	. . SET LFN=""
	. . FOR  SET LFN=$ORDER(^WWWSOR(YUSER,VERSNR,ABTEILUNG,LFN)) QUIT:LFN=""  DO
	. . . SET DEMAND=""
	. . . FOR  SET DEMAND=$ORDER(^WWWSOR(YUSER,VERSNR,ABTEILUNG,LFN,DEMAND)) QUIT:DEMAND=""  DO
	. . . .SET SOR1=$GET(^WWWSOR(YUSER,VERSNR,ABTEILUNG,LFN,DEMAND))
	. . . . IF ANZM'=0 IF ANZM#ANZSEIT=0 DO   ;NEUE SEITE ;side 
	. . . . . WRITE "</TD></TR>"
	. . . . . WRITE "</TABLE>"
	. . . . . ;DO ZUSATZTEXT
	. . . . . DO FF^WWWW()
	. . . . . DO UEBER(pidTFR)
	. . . . DO ANZ
	. . DO SUMME
	. . DO STOP^WWWTAB
	. . DO ZUSATZTEXT
	
	IF $GET(SOR)=1 DO
	. SET VERSNR=""
	. FOR  SET VERSNR=$ORDER(^WWWSOR(YUSER,VERSNR)) QUIT:VERSNR=""  DO
	. . SET ANZM=0
	. . SET SUM(1)=0  ;GEWICHT ;wt. 
	. . SET SUM(2)=0  ;VOLUMEN ;volume 
	. . SET SUM(3)=0  ;MENGE   ;quantity 
	. . SET TOUR1=$GET(^INDRPUMTOUR(YM,idShipLocn,VERSNR,1))
	. . SET TOURB=""
	. . SET BETVB=""
	. . SET BETV=$PIECE(TOUR1,Y,3)
	. . SET TOUR=$PIECE(TOUR1,Y,2)
	. . IF TOUR=""   SET TOUR=" "
	. . IF TOUR'=""  SET TOURB=$PIECE($GET(^INDRPUMLKW(YM,TOUR,1)),Y,2)
	. . IF BETVB'="" SET BETVB="("_BETV_") "_$PIECE($GET(^WWW0121(0,YM,BETV,1)),Y,1)
	. . ;
	. . IF ANZM>0 DO FF^WWWW()
	. . DO UEBER
	. . SET YDDSATZ=0
	. . SET DEMAND=""
	. . FOR  SET DEMAND=$ORDER(^WWWSOR(YUSER,VERSNR,DEMAND)) QUIT:DEMAND=""  DO
	. . . SET SOR1=$GET(^WWWSOR(YUSER,VERSNR,DEMAND))
	. . . ;
	. . . IF ANZM'=0 IF ANZM#ANZSEIT=0 DO   ;NEUE SEITE ;side 
	. . . . WRITE "</TD></TR>"
	. . . . WRITE "</TABLE>"
	. . . . ;DO ZUSATZTEXT
	. . . . DO FF^WWWW()
	. . . . DO UEBER
	. . . DO ANZ
	. . DO SUMME
	. . DO STOP^WWWTAB
	. . DO ZUSATZTEXT
	
	QUIT
	
ANZ
	;-------------------------------------------------------------------------------
	; Display a single line of the Load List
	;
	; Params: None
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 07-Aug-2008	PP		SR15812: Created
	;-------------------------------------------------------------------------------
	new strAlternate
 
	SET ANZM=ANZM+1
	DO NL^WWWTAB
	DO NFZ^WWWTAB
	WRITE ANZM
	WRITE "&nbsp;"
	
	DO ZW^WWWTAB
	WRITE $PIECE(SOR1,Y,2)          ;ART ;Type 
	WRITE "&nbsp;"
	
	DO ZWR^WWWTAB
	set strAlternate = $$BaseQuantity^INTRANSFER5(idShipLocn,$piece(SOR1,Y,6),$piece($piece(SOR1,Y,3)," ",2)) // SR14847
	if strAlternate '= "" {
		write strAlternate
	}
	WRITE $PIECE(SOR1,Y,3)          ;MENGE ;quantity 
	SET SUM(3)=SUM(3)+$PIECE(SOR1,Y,3) 
	WRITE "&nbsp;"
	
	DO ZWR^WWWTAB
	WRITE $PIECE(SOR1,Y,4)          ;KG
	SET SUM(1)=SUM(1)+$PIECE(SOR1,Y,4) 
	WRITE "&nbsp;"
	
	DO ZWR^WWWTAB
	WRITE $PIECE(SOR1,Y,5)          ;M3
	SET SUM(2)=SUM(2)+$PIECE(SOR1,Y,5) 
	WRITE "&nbsp;"
	
	DO ZWZ^WWWTAB
	WRITE $PIECE(SOR1,Y,6)          ;DEMAND
	WRITE "&nbsp;"
	
	DO ZWZ^WWWTAB
	WRITE $PIECE(SOR1,Y,7)          ;AUFTRAG ;order 
	WRITE "&nbsp;"
	
	DO EF^WWWTAB
	DO EL^WWWTAB
	WRITE YCR
	
	QUIT
	
SUMME ;SUMMENZEILE
	DO NL^WWWTAB
	DO NF^WWWTAB
	WRITE "&nbsp;"
	
	DO ZW^WWWTAB
	WRITE "&nbsp;"
	
	DO ZW^WWWTAB
	WRITE "&nbsp;"
	
	DO ZWR^WWWTAB
	WRITE "<B>"
	WRITE $TRANSLATE($JUSTIFY(SUM(1),0,2),".",",")  ;GEWICHT ;wt. 
	WRITE "</B>"
	WRITE "&nbsp;"
	
	DO ZWR^WWWTAB
	WRITE "<B>"
	WRITE $$^WWWZAHL(SUM(2),,3)  ;VOLUMEN ;volume 
	WRITE "</B>"
	WRITE "&nbsp;"
	
	DO ZW^WWWTAB
	WRITE "&nbsp;" 
	
	DO ZW^WWWTAB
	WRITE "&nbsp;"
	
	DO EF^WWWTAB
	DO EL^WWWTAB
	WRITE YCR
	QUIT
	
DEMANDEIN     ;IN DRP DEMAND SPEICHE ;within DRP spoke 
	NEW SATZ,KEY
	
	SET KEY=idShipLocn_","_DEMAND
	SET SATZ=DEMAND1
	DO
	. SET $PIECE(SATZ,Y,52)=$HOROLOG                                       ;LADELISTE DRUCK AM ;printing to the 
	. IF $PIECE(DEMAND1,Y,50)="" SET $PIECE(SATZ,Y,50)=$PIECE(SATZ,Y,5)    ;GEPICKT MENGE ;quantity 
	. IF $PIECE(DEMAND1,Y,60)="" SET $PIECE(SATZ,Y,60)=$PIECE(SATZ,Y,50)   ;GELADET MENGE ;quantity 
	. ;IF $P(DEMAND1,Y,26)="" SET $PIECE(SATZ,Y,26)=$PIECE(SATZ,Y,60)      ;GELIEFERT MENGE
	. SET YOK=$$^WWWSPEI("INDRPDEMAND",KEY,SATZ,1)
	. DO ^INDRPSAVED(KEY,SATZ)  ;UPDATE SUPPLY OF DESTINATION LOCATION;FIS;01.04.04 ;LOCATION 
	
	QUIT
	
ZUSATZTEXT   ;ZUSATZTEXT
 	IF ANZM'=0 IF TEXT'="" DO
	. WRITE "<BR>"
	. IF '$FIND(TEXT,"<") DO  QUIT
	. . FOR YI=1:1  QUIT:$PIECE(TEXT,"|",YI,9999)=""  WRITE $PIECE(TEXT,"|",YI),"<BR>",YCR  ;NUR TEXT ;only Text 
	. FOR YI=1:1  QUIT:$PIECE(TEXT,"|",YI,9999)=""  WRITE $PIECE(TEXT,"|",YI),YCR  ;HTML
	
	WRITE YCR
	DO FF^WWWW()
	WRITE YCR
	WRITE YCR
	QUIT
	
UEBER(pidTFR) ;  
	DO KOPF(pidTFR)
	
	DO START100^WWWTAB  ;STARTEN DER ÃœBERSCHRIFT ;launching the superscription 
	WRITE "<THEAD>" 
	DO NL^WWWTAB
	FOR I=1:1 QUIT:$PIECE(UES,Y,I,99)=""  DO NHWZ^WWWTAB WRITE $PIECE(UES,Y,I),"&nbsp;" DO EH^WWWTAB
	DO EL^WWWTAB
	WRITE "</THEAD>"
	QUIT
	
KOPF(pidTFR) 
	;-------------------------------------------------------------------------------
	; Heading
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 15-May-2006	PO		SR14427: If transfer performed via Transfer Order form
	; 						then display relevant details (Phase 2)
	;-------------------------------------------------------------------------------
	new idTFR,dteTransfer,objRecord,strDescription
	new objTFR
	
	set objTFR    = $get(^INTFR(YM,pidTFR,1))
	set idFromLoc = $$$INTFRSendingLocation(objTFR)
	set idToLoc   = $$$INTFRReceivingLocation(objTFR)
	set idRef     = $$$INTFRDispatch(objTFR)
	set intStatus = $$$INTFRStatus(objTFR)
	
	DO START1000^WWWTAB
	WRITE YCR,"<TR><TD>"
	WRITE "<NOBR>"
	
	WRITE YCR,"<TABLE BORDER=0 CELLSPACING=1 WIDTH=100%><TR>",YCR
	
	WRITE "<TD ALIGN=CENTER COLSPAN=2>"
	WRITE "<FONT SIZE=3>"
	WRITE "<B>"
	WRITE YKOPF
	WRITE "</B>"
	WRITE "</FONT>"
	WRITE "<BR>"
	WRITE "<FONT SIZE=1>"
	WRITE $$^WWWTEXT(388)_": "_idFromLoc_" "_$PIECE($GET(^WWW0121(0,YM,idFromLoc,1)),Y,1)  ;NAME
	IF +$get(SOR)=0 DO
	. WRITE "&nbsp;&nbsp;&nbsp;&nbsp;"
	. WRITE $$^WWWTEXT(3172)_": "_$GET(ABTEILUNG)
	. IF $GET(ABTEILUNG)'=" " WRITE " - "_$PIECE($GET(^WWW0124(YM,$GET(ABTEILUNG),1)),Y,1)     ;ABTEILUNG ;speciality 
	
	WRITE "</FONT>"
	WRITE "</TD>",YCR
	WRITE "</TR></TABLE>",YCR
	
	DO
	. //NEW TOUR1
	. //SET TOUR1=$GET(^INDRPUMTOUR(YM,idShipLocn,VERSNR,1))
	. WRITE YCR,"<TABLE BORDER=0 CELLSPACING=1 WIDTH=100%>"
	. WRITE "<TR><TD WIDTH=33%>"
	. WRITE "<FONT SIZE=2>"
	. WRITE "<B>"
	. WRITE $$^WWWTEXT(32807)_" "_$$^WWWTEXT(388)_": "  ;BETRIEB
	. WRITE idToLoc	//$PIECE(TOUR1,Y,3)  ;FÃœR BETRIEB ;to location 
	. IF idToLoc'="" WRITE " "_$PIECE($GET(^WWW0121(0,YM,idToLoc,1)),Y,1)  ;NAME
	. WRITE "<BR>"
	. WRITE $$^WWWTEXT(32808)_": "   ; "Route" 
	. WRITE idRef
	. IF idRef'="" WRITE " "_$PIECE($GET(^INDRPUMLKW(YM,idRef,1)),Y,2)
	. ;IF $PIECE(TOUR1,Y,10)'="" WRITE " ( "_$PIECE(TOUR1,Y,10)_" )"
	. WRITE "</B>"
	. WRITE "</TD>",YCR
	. ;
	. WRITE "<TD ALIGN=CENTER VALIGN=BOTTOM WIDTH=33%>"
	. WRITE "<FONT SIZE=2>"
	. WRITE "<B>"
	. WRITE " "
	. WRITE "<BR>"
	. DO
	. . IF $DATA(^WWW0031(0,"INDRPUMTOUR",10,SPRACHE,1)) WRITE $PIECE(^WWW0031(0,"INDRPUMTOUR",10,SPRACHE,1),Y,1) QUIT
	. . WRITE $PIECE($GET(^WWW003(0,"INDRPUMTOUR",10,1)),Y,1)
	. //WRITE ": "_$PIECE(TOUR1,Y,10)  ;VERSANDTERMIN
	. WRITE "</B>"
	. WRITE "</TD>",YCR
	. ;
	. WRITE "<TD ALIGN=RIGHT VALIGN=BOTTOM WIDTH=33%>"
	. WRITE "<FONT SIZE=2>"
	. WRITE "<B>"
	. ;
	. ;------------------------------------- SR14427 OLD CODE
	. ;DO             ;VERSANDNUMMER
	. ;. IF $DATA(^WWW0031(0,"INDRPDEMAND",41,SPRACHE,1)) IF $PIECE($GET(^WWW0031(0,"INDRPDEMAND",41,SPRACHE,1)),Y,1)'="" WRITE $PIECE($GET(^(1)),Y,1)  QUIT
	. ;. IF $DATA(^WWW003(0,"INDRPDEMAND",41,1)) IF $PIECE($GET(^WWW003(0,"INDRPDEMAND",41,1)),Y,1)'="" WRITE $PIECE($GET(^(1)),Y,1)  QUIT
	. ;
	. ;WRITE ": "_VERSNR
	. ;WRITE "<BR>"
	. ;WRITE $$^WWWTEXT(32168)_": "         ;LIEFERTERMIN ;time of delivery 
	. ;WRITE $$^WWWDATE($PIECE(TOUR1,Y,1))  ;VERSANDTERMIN
	. ;
	. ;------------------------------------- SR14427 NEW CODE
	. //set idTFR = $$$INDRPUMTOURTransfer(TOUR1)
	. ;
	. if pidTFR '= "" do
	. . write $$^WWWFELDNAME("INTFR","P",1)_": "_pidTFR
	. . write "<br />"_$$$Text(32168)_": "_$$^WWWDATE($$$INTFRDueDate(objTFR))
	. ;------------------------------------- SR14427
	. WRITE "</B>"
	. WRITE "</TD></TR>",YCR
	
	WRITE "</TABLE>",YCR
	
	DO EH^WWWTAB
	DO EL^WWWTAB
	DO STOP^WWWTAB
	QUIT
	
]]></Routine>
</Export>