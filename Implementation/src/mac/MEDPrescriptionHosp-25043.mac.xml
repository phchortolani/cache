<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="MEDPrescriptionHosp" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
MEDPrescriptionHosp

#include COMSYS 
#include MEDConst
#include INConst
#include WWWConst
	
	
IsDisabled(YKEY="",pintButton)
	;-------------------------------------------------------------------------------
	; Checks to see if buttons should be disabled.
	;
	; Inputs: 
	;
	; Returns:
	;
	; History:
	; 18-Oct-2012	shobby	SR18130.2: Tooltip message
	; 16-Oct-2012	shobby	SR18130.1: Created
	;-------------------------------------------------------------------------------
	
	if pintButton=4 {  ; New button
		if YKEY="" {
			set YQ=$$$YES
		} else {
			if '$$CheckAdmitted^MEDPatient("","",$get(YPARA)) {		;SR18130.2
				set YQ=$$$YQDisable("MED01309") 					;SR18130.2 ;"Cannot create new prescription as patient does not have an active admission" 
			}														;SR18130.2
		}
	}
	quit
	
	
BeforeButtonLine()
	;-------------------------------------------------------------------------------
	; Get Patient and Admission data for manual fields 
	;
	; Inputs: 
	;
	; Returns:
	;
	; History:
	; 24-Oct-2014	SCR		HEVA-1580: Use 1st Line if no line is specified
	; 16-Nov-2012	shobby	SR18020: Don't need PatientData here.
	; 05-Nov-2012	SCR		SR18141: Pass in YKEY to PatientData	
	; 19-Oct-2012	SCR		SR18142: Set To Date to $h+1 & set Duration = 1
	; 21-Jun-2012	shobby	SR18026: Removed code no longer required.
	; 14-Jun-2012	SCR		Default Infusion Rate to 1
	; 19-Apr-2012	SCR		Added objLine for manual fields
	; 28-Mar-2012	SCR		Added New Rx option
	; 08-Mar-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim idADM,idPrescription,idRxLine,objPrescription,idPatient,objLine,idItem,idStatus,idLineStatus As %String
#Dim blnNewRx As %Boolean
	new blnNewRx,idLine,idLineStatus,idPatient,idPrescription,idRxLine,idStatus
	new objLine,objPrescription
	
	set gPatient=""
	set gAdmission=""
	kill ^CacheTempMedRx(YUSER,"Line")
	set blnNewRx=$$$NO ; Used for forcing a new prescription - Set via YPARA via 'New' function
	set idPrescription=$piece(YKEY,",",1)
	if $get(YPARA)["GridLine," {
		set ^CacheTemp(YUSER,"GridLine") = $piece(YPARA,",",2)
		set YPARA=""
	}
	if (idPrescription="")&&($get(YPARA)="") {
		set YPARA=$get(^CacheTempMedRx(YUSER,"PID"))_",New"
	}

	if idPrescription'="" {
		set objPrescription=$get(^MEDPrescription(YM,idPrescription,1))
		set idPatient= $$$MEDPrescriptionPatientID(objPrescription)
		set YPARA=idPatient
		
	} elseif $get(YPARA)'="" {
		set idPatient=YPARA
		if idPatient[",New" {
			set blnNewRx=$$$YES
			set idPatient=$piece(idPatient,",New",1)
			set YPARA=idPatient
		} 
	}
	set $$$MEDPrescriptionPatientID(YFELD)=idPatient
	set ^CacheTempMedRx(YUSER,"PID")=idPatient

	;SR18020 do PatientData(.YMFELD,YKEY) ; SR18141
	;do PatientData(.YMFELD,YFELD)
	if (YKEY="")&&($get(idPatient)'="")&&(blnNewRx'=$$$YES) {
		set idPrescription=$order(^MEDPrescriptions(YM,1,$$$Index(idPatient),""),-1)
		if idPrescription'="" {
			set objPrescription=$get(^MEDPrescription(YM,idPrescription,1))
			set YKEY = idPrescription
			set idRxLine=$order(^MEDPrescriptionLine(YM,idPrescription,""),-1)
			if idRxLine'="" {
				;set YKEY=idPrescription_","_idRxLine
			}
		
		}
	}
	if (YKEY="") && ($get(idPatient)'="") {
		set YKEY=$$CreateBlankRx(idPatient)
		set idPrescription=YKEY
	}
	if ($$$MEDPrescriptionStatus($get(objPrescription))>0) &&('$data(^CacheTemp(YUSER,"GridLine"))) { ; if not open and no line select
		set ^CacheTemp(YUSER,"GridLine")=$order(^MEDPrescriptionLine(YM,$piece(YKEY,","),"")) ; set it 1st line
		set $piece(YKEY,",",2) = $get(^CacheTemp(YUSER,"GridLine"))
	}


	set objLine	= ""
	set idLine	= $piece(YKEY,",",2)
	if idLine="" {
		set idLine	= $order(^MEDPrescriptionLine(YM,idPrescription,"")) ; use 1st Line
	}
	if (idLine'="") {
		set objLine=$get(^MEDPrescriptionLine(YM,idPrescription,idLine,1)) ; used by manual fields
		set ^CacheTempMedRx(YUSER,"Line") = idLine ; Current Line  , FIXME - need to be checked
		
		do Solution^MEDPrescriptionSolLine($$$MEDPrescriptionLineSolution(objLine))
		set idLineStatus =  $$$MEDPrescriptionLineStatus(objLine)
		
		
	} else {
		set $piece(YMFELD,Y,19) = "."
		set $piece(YMFELD,Y,20) = $ztime($piece($h,",",2),2)
		set $piece(YMFELD,Y,21) = 1 	; SR18142
		set $piece(YMFELD,Y,22) = $h+1 	; SR18142
		;set $piece(YMFELD,Y,22) = "."
		set $piece(YMFELD,Y,23) = $ztime($piece($h,",",2),2)
		set idLineStatus = 0
		
	}
	set $piece(YMFELD,Y,1) = $piece(YKEY,",",1)
	set idStatus= +$$$MEDPrescriptionStatus($get(objPrescription))
	set $piece(YMFELD,Y,11) = $$GetDescription^WWWStatus("MEDPrescription",+idStatus,$get(SPRACHE))
	set $piece(YMFELD,Y,13) = $$GetDescription^WWWStatus("MEDPrescription",+idLineStatus,$get(SPRACHE))

	if $piece(YKEY,",")'="" {

		if '$$Editable^MEDPrescription($piece(YKEY,","),1) {
			set $$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly

		}
	}
	do LoadDiluentList("")
	set:$piece(YMFELD,Y,33)="" $piece(YMFELD,Y,33)=1 ; Default Infussion Rate
	
	quit

CreateBlankRx(pidPatient)
	;-------------------------------------------------------------------------------
	; Create a Blank Prescription Header and Save, This allow Grid Edit to load
	;
	; Params PID
	;
	; Returns YKEY
	;
	; History:
	; 22-Jun-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new idRx,objRx,strStatus
	
	set objRx=""
	set $$$MEDPrescriptionProviderNumber(objRx) = $$Default^MEDProviderDataAccess()
	set $$$MEDPrescriptionPatientID(objRx)	= pidPatient
	set $$$MEDPrescriptionDueDate(objRx)	= +$h
	set $$$MEDPrescriptionDueTime(objRx)	= $piece($h,",",2)
	set $$$MEDPrescriptionDateCreated(objRx)= +$h
	if $$$MEDPrescriptionStatus(objRx)="" {
		set $$$MEDPrescriptionStatus(objRx)=0
	}
	set idRx=$$^WWWNEXT("MEDPrescription")
	set strStatus=$$$Save("MEDPrescription",idRx,objRx,1)
	quit idRx

New(pidRx)
	;-------------------------------------------------------------------------------
	; New Prescription for current patient
	;
	;
	; History:
	; 25-Oct-2012		shobby	SR18130.2: Check for valid admission.
	; 08-May-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new strStatus 							;SR18130.2
	
	set pidRx=$piece(pidRx,",",1)

	set strStatus=$$CheckAdmitted^MEDPatient("",pidRx)		;SR18130.2
	if $$$ISOK(strStatus) {									;SR18130.2
		set YPARA=$get(^CacheTempMedRx(YUSER,"PID"))_",New"
		Do RedirectForm^COMUtilForm("MEDPrescriptionHosp","","MEDPrescriptionHosp,",YPARA,"")
	} else {												;SR18130.2
		$$$Alert(strStatus)									;SR18130.2
		do ReloadForm^COMUtilForm()							;SR18130.2
	}														;SR18130.2
	quit


PatientData(&pstrYMFELD,pidRx)
	;-------------------------------------------------------------------------------
	; Get Patient and Admission data for manual fields
	;
	; Inputs: 	Manual field data (YMFELD)
	;			Current ID
	;
	; Returns: Data to Display
	;
	; History:
	; 16-Nov-2012	shobby	SR18020: Now redundant?
	; 05-Nov-2012	SCR		SR18141: Pass in pidRx and use objRx
	; 05-Nov-2012	SCR		SR18141: Pass CreatedOn for Tracking data & time
	; 12-Oct-2012	SCR		SR18141: Retain Admission details
	; 03-Oct-2012	SCR		SR17993: Use Common code
	; 18-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim objPatient,objADM as %String	
	new idPatient,lstPatData,objRx
	
	set objRx=""
	set pidRx=$piece(pidRx,",",1)
	set:pidRx'="" objRx=$get(^MEDPrescription(YM,pidRx,1))

	set idPatient = $$$MEDPrescriptionPatientID(objRx)
	;do GetPatientDataViaID^MEDPrescriptionCommon(idPatient, .lstPatData)
	;do GetPatientDataViaID^MEDPrescriptionCommon(idPatient, .lstPatData, $$$MEDPrescriptionDateCreated(pstrYFELD)) ; SR18141
	do GetPatientDataViaID^MEDPrescriptionCommon(idPatient, .lstPatData, $$$MEDPrescriptionCreatedOn(objRx)) ; SR18141
	// 1. Admission Location Key
	// 2. 
	;SR18020 // 3. Patient Name
	;SR18020 // 4. Patient ID
	;SR18020 // 5. Patient DOB
	;SR18020 // 6. Admission Location Name
	;SR18020 // 7. Admission Room
	;SR18020 // 8. Admission Bed
	;SR18020 // 9. Admission Date
	;SR18020 // 10. Patient Allergies
	;SR18020 set $piece(pstrYMFELD,Y,3) = $lg(lstPatData,3) ; Name
	;SR18020 set $piece(pstrYMFELD,Y,4) = idPatient  ; PID
	;SR18020 set $piece(pstrYMFELD,Y,5) = $lg(lstPatData,5)  ;Years Old  Dob + Age

	;SR18020 set $piece(pstrYMFELD,Y,6) =  $lg(lstPatData,6) ; Admission Location
	;SR18 020 set $piece(pstrYMFELD,Y,7) =   $lg(lstPatData,7) ; Admission Room
	;SR18020 set $piece(pstrYMFELD,Y,8) =   $lg(lstPatData,8) ; Admission Bed
	;SR18020 set $piece(pstrYMFELD,Y,9) =   $lg(lstPatData,9) ; Admission Date & Time
	;SR18020 set $piece(pstrYMFELD,Y,10) =   $lg(lstPatData,10) ; Allergies

	set $piece(pstrYMFELD,Y,3)=""
	quit 

ManualData(pintData)
	;-------------------------------------------------------------------------------
	; Get Patient and Admission data for manual fields
	;
	; Inputs: Input Field
	;
	; Returns: Data to Display
	;
	; History:
	; 16-Nov-2012	shobby	SR18020: Most of this dont in MEDPatientDetails now.
	; 19-May-2012	SCR		SR17993: Added Provider
	; 13-Mar-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim strData,objLoc,idLoc,idPrescription,objPrescription As %String	
	new idPrescription,objPrescription,strData
	set strData=""
	if pintData=9 { ; Provider
		set idPrescription=$piece(YKEY,",",1)
		if (idPrescription'="") && (idPrescription'="+") {
			set objPrescription=$get(^MEDPrescription(YM,idPrescription,1))
			set strData=    $$$MEDPrescriptionProviderNumber(objPrescription) 
		}
	}


	quit strData
	
OnBeforeSave(&pstrYFELD)
	;-------------------------------------------------------------------------------
	; Create / Update Prescription Header
	;
	; Inputs: record
	;
	; Returns:
	;
	; History:
	; 16-Sep-2013	SCR		CORE-93: Set Create Date Conditionaly
	; 20-Dec-2012	shobby	HEVA-713: Include time in from date/to date validation
	; 16-Nov-2012	shobby	SR18020: Not using YMFELD for Patient information
	; 30-Oct-2012	SCR		SR18142: Date validation
	; 23-Oct-2012	shobby	SR18130.2 : Can't save if no active admission.
	; 18-Oct-2012 	SCR		SR18142: Prevent From date being back dated & To being before from date
	; 21-Jun-2012	shobby	SR18026: From/To time handle by 'Field Size' setup.
	; 17-Jun-2012	SCR		SR17993: Added extra Qty validation (Core Rule/Manual Field/Required Field Bug)
	; 12-Jun-2012	SCR		SR17993: 
	; 04-Jun-2012	SCR		SR17993: Time Validation
	; 17-May-2012	SCR		SR17993: Set Created Date
	; 15-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim idPrescription,objPrescription,strStatus,idLine As  %String	
	new idPrescription,objPrescription,strStatus
	
	set strStatus=$$$OK 																			;SR18130.2
	;SR18020 if '$$CheckAdmitted^MEDPatient("","",$piece(YMFELD,Y,4)) {								;SR18130.2
	if '$$CheckAdmitted^MEDPatient("","",$$$MEDPrescriptionPatientID(YFELD)) {						;SR18130.2 ;SR18020
		set strStatus=$$$MakeStatus("MED01310")  ; "Patient does not have an active admission" 		;SR18130.2
		set Q=$$$QDontSave 																			;SR18130.2
		do ReturnError^COMUtils(strStatus)															;SR18130.2
	} 																								;SR18130.2
	
	if $$$ISOK(strStatus) {
		if ($piece(YMFELD,Y,24)'="") && ('$piece(YMFELD,Y,25)) {
			set Q=$$$QDontSave
			do ReturnError^COMUtils("MED01280")  ;Diluent Quantity required
		}
		if ($piece(YMFELD,Y,15)'>0) {
			set Q=$$$QDontSave
			do ReturnError^COMUtils("MED01283")  ;Dose must be greater than 0~
		}
		; SR18142 vvvv
		if $piece(YMFELD,Y,19)<$h {
			set Q=$$$QDontSave
			do ReturnError^COMUtils("MED01299")  ;From Date can not be back dated
		}
		;HEVA-713 if $piece(YMFELD,Y,22)'>$piece(YMFELD,Y,19) {
		if ($piece(YMFELD,Y,22)*86400+$piece(YMFELD,Y,23))'>($piece(YMFELD,Y,19)*86400+$piece(YMFELD,Y,20)) {	;HEVA-713
			set Q=$$$QDontSave
			do ReturnError^COMUtils("MED01264")  ;'To' date must be greater than 'From' date~
		}
		; SR18142 ^^^^
		;SR18020 set $$$MEDPrescriptionPatientID(pstrYFELD)	= $piece(YMFELD,Y,4)
		set $$$MEDPrescriptionDueDate(pstrYFELD)	= $piece(YMFELD,Y,19)
		set $$$MEDPrescriptionDueTime(pstrYFELD)	= $piece(YMFELD,Y,20)
		set:'$$$MEDPrescriptionDateCreated(pstrYFELD) $$$MEDPrescriptionDateCreated(pstrYFELD)= +$h
		if $$$MEDPrescriptionStatus(pstrYFELD)="" {
			set $$$MEDPrescriptionStatus(pstrYFELD)=0
		}
	}
	quit
	 
OnAfterSave(pidPrescription,&pstrYFELD,pstrMFELD)
	;-------------------------------------------------------------------------------
	; Create / Update Line
	;
	; Inputs: key
	;
	; Returns:
	;
	; History:
	; 15-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim strStatus,idLine,objLine As  %String	
	new strStatus,idLine,objLine
	set idLine=$get(^CacheTempMedRx(YUSER,"Line")) ; Current Line


	if 'idLine {
		set idLine=$order(^MEDPrescriptionLine(YM,pidPrescription,""),-1)+1
	}
	;SR18026 set objLine=$get(^MEDPrescriptionLine(YM,pidPrescription,idLine,1))
	;SR18026 do SetLine(.objLine,pstrMFELD)
	
	;SR18026 set strStatus=$$$Save("MEDPrescriptionLine",pidPrescription_","_idLine,objLine,1)

	do ReNumber^MEDPrescriptionRenum(pidPrescription)
	
	quit 
	
SetLine(&pobjLine,pstrMFELD)
	;-------------------------------------------------------------------------------
	; Update Line from manual fields
	;
	; Inputs: objLine , Manual Filelds
	;
	; Returns: objLine by Ref
	;
	; History:
	; 30-May-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	
	set $$$MEDPrescriptionLineDoseTotalQuantity(pobjLine) = $$DoseTotal^MEDPrescriptionLine(pobjLine)
	quit


OnBlurItem(pYKEY, pidGridRow, pidItem,pidUnit,pidFreq,pidRoute,pidDiluent)
	;-------------------------------------------------------------------------------
	; On Blur from Item
	;	Populates Unit dropdown
	;
	; Called By : form $MEDPrescriptionLine & MEDPrescriptionHospLine
	;		
	; Params:	Key,grow,item
	;			Unit, Fequency,Route, Diluent, Total Dose Quantity (field numbers)
	;			
	;
	; ByRefs:	pobjLine	- current line object
	;
	; Returns:
	;
	; History :
	; 29-Jan-2013	SCR		HEVA-762: Disabled call to DrugInteraction
	; 23-Jan-2013	shobby	HEVA-762: Reenable call to DrugInteraction
	; 24-Oct-2012	SCR		SR18138: Update Volume
	; 10-Oct-2012	SCR		SR18139: Use Frequency function
	; 29-Jun-2012	SCR		SR17993: Added Total Dose Quantity update
	; 25-Jun-2012	SCR		SR17993: Update Grid
	; 05-Jun-2012	SCR		SR17993: Added Diluent
	; 16-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new objItem,strLineKey,objLine,intGridLine,arrGrid,idUnit
	
	//Populate Unit Listing
	set idUnit=$$UpdateUnits^INARTUNIT(pidItem,"Y"_YFORM_pidUnit)
	do UpdateDiluent(pidItem,"Y"_YFORM_pidDiluent)
	if pidItem'="" {
		set objItem = $get(^INART(0,pidItem,1))
		;set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_pidFreq_"~"_$$$INARTMedFrequency(objItem) 
		set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_pidFreq_"~"_$$Frequency(objItem) ; SR18139
		set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_pidRoute_"~"_$$$INARTMedRouteOfAdministration(objItem)
		do UpdateGrid^COMGridEdit31Links("Y"_YFORM_pidUnit,idUnit,"",1) 
		;do UpdateGrid^COMGridEdit31Links("Y"_YFORM_pidFreq,$$$INARTMedFrequency(objItem),"",1) 
		do UpdateGrid^COMGridEdit31Links("Y"_YFORM_pidFreq,$$Frequency(objItem),"",1)  ; SR18139
		do UpdateGrid^COMGridEdit31Links("Y"_YFORM_pidRoute,$$$INARTMedRouteOfAdministration(objItem),"",1) 

	}
	do VolumeUpdate() ; SR18138
	;do DrugInteraction(pYKEY,pidItem,"MEDPrescriptionHospLine") ;HEVA-762
	quit

Frequency(pobjItem)
	;-------------------------------------------------------------------------------
	; Get Defualt Frequency
	; 	1st from item if none use MEDPresciptionSetup
	;
	; Returns:
	;
	; History:
	; 10-Oct-2012	SCR		SR18139: Created
	;-------------------------------------------------------------------------------
	new idFreq,objSetup
	set idFreq=$$$INARTMedFrequency(pobjItem)
	if idFreq="" {
		set objSetup=$get(^MEDPrescriptionSetup(0,YM,1)) 
		set idFreq	= $$$MEDPrescriptionSetupDefaultFrequency(objSetup)
	}
	quit idFreq

UpdateTDQ(pintItem,pintDose,pintFreq,pintDur,pintTDQ,pintFromDate,pintFromTime,pintToDate,pintToTime)
	;-------------------------------------------------------------------------------
	; Update Total Dose Quantity on blur
	;
	; Returns:
	;
	; History:
	; 20-Dec-2012	shobby	HEVA-713: Use date/time in calculation
	; 29-Jun-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new objLine,intTDQ
	
	if pintTDQ {
		set objLine=""
		set $$$MEDPrescriptionLineItem(objLine)		= $piece(YMFELD,Y,pintItem)
		set $$$MEDPrescriptionLineDoseQty(objLine)	= $piece(YMFELD,Y,pintDose)
		set $$$MEDPrescriptionLineFrequency(objLine)= $piece(YMFELD,Y,pintFreq)
		set $$$MEDPrescriptionLineDuration(objLine)	= $piece(YMFELD,Y,pintDur)
		
		set $$$MEDPrescriptionLineFromDate(objLine) = $piece(YMFELD,Y,pintFromDate)	;HEVA-713
		set $$$MEDPrescriptionLineFromTime(objLine) = $piece(YMFELD,Y,pintFromTime)	;HEVA-713
		set $$$MEDPrescriptionLineToDate(objLine) = $piece(YMFELD,Y,pintToDate)		;HEVA-713
		set $$$MEDPrescriptionLineToTime(objLine) = $piece(YMFELD,Y,pintToTime)		;HEVA-713
		set intTDQ=$$DoseTotal^MEDPrescriptionLine(objLine)
		
		;set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pintTDQ_"~"_intTDQ
		set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pintTDQ_"~"_$$UpdateManualField^WWWFORMUtil(YFORM,pintTDQ,intTDQ)  ;HEVA-775
		set $piece(YMFELD,Y,pintTDQ)=intTDQ
		do UpdateGrid^COMGridEdit31Links("Y"_YFORM_"M"_pintTDQ,intTDQ,"",1) 
	}

	quit

OnBlurDur(&pobjMData,&pintDur,pidTo,pintFrom,pintDurFld,&pstrFrom)
	;-------------------------------------------------------------------------------
	; On Blur Duration or From Date - Update To Date based on Duration and From Date 
	; Used by MEDPrescriptionHosp & MEDPrescriptionSol
	;
	; Inputs: Line , Duration (passback)
	;		To Date, From Date, Duration, Total Dose Quantity fields
	;
	; Returns:
	;
	; History:
	; 03-Jan-2013	shobby	HEVA-713.3: Corrected setting of tmeTo
	; 20-Dec-2012	shobby	HEVA-713: Rewrote
	; 31-Oct-2012	SCR		SR18142: Send Back From Date Text
	; 18-Jul-2012	SCR		SR17993: Update Grid (Required for actual Save)
	; 29-Jun-2012	SCR		SR17993: Update Total Dose Quantity
	; 15-May-2012	PPP		SR17993: Convert date from External to Internal
	; 17-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim strText as  %String
	;#dim intDur as %Integer
	new dtFrom,dtTo,idToTme,intDur,strDateTime,strText,tmeTo

	set idToTme="M"_($extract(pidTo,2,3)+1)
	set intDur	= $piece(pobjMData,Y,pintDurFld)
	if intDur<0 {
		set intDur=0
		set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pintDurFld_"~"_intDur
		set pintDur=intDur
		set $piece(pobjMData,Y,pintDurFld)=pintDur ; Required
	} 
	set dtFrom	= $piece(pobjMData,Y,pintFrom)_","_$piece(pobjMData,Y,pintFrom+1)
	set strDateTime    = $$$ToSeconds(dtFrom)+(intDur*86400)
	set dtTo    = strDateTime\86400
	set tmeTo   = strDateTime-(dtTo*86400)
	set strText = $$^WWWTR(0,1,dtTo)
	set %TXT(1)	= %TXT(1)_"#"_"Y"_YFORM_pidTo_"~"_strText
	set strText = $$OutTime^WWWTR(tmeTo)
	set strText = $extract(strText,1,5)
	set %TXT(1)	= %TXT(1)_"#"_"Y"_YFORM_idToTme_"~"_strText
	set $piece(pobjMData,Y,22)=dtTo
	set $piece(pobjMData,Y,23)=tmeTo
	do UpdateGrid^COMGridEdit31Links("Y"_YFORM_pidTo,dtTo,"",1) 
	do UpdateGrid^COMGridEdit31Links("Y"_YFORM_idToTme,tmeTo,"",1) 
	if YFORM="MEDPrescriptionHosp" do UpdateTDQ^MEDPrescriptionHosp(14,15,17,21,34,19,20,22,23) ;HEVA-713
	quit


	;HEVA-713 OnBlurDurOld(&pobjMData,&pintDur,pidTo,pintFrom,pintDurFld,&pstrFrom)
	;HEVA-713 ;-------------------------------------------------------------------------------
	;HEVA-713 ; On Blur Duration or From Date - Update To Date based on Duration and From Date 
	;HEVA-713 ; Used by MEDPrescriptionHosp & MEDPrescriptionSol
	;HEVA-713 ;
	;HEVA-713 ; Inputs: Line , Duration (passback)
	;HEVA-713 ;		To Date, From Date, Duration, Total Dose Quantity fields
	;HEVA-713 ;
	;HEVA-713 ; Returns:
	;HEVA-713 ;
	;HEVA-713 ; History:
	;HEVA-713 ; 31-Oct-2012	SCR		SR18142: Send Back From Date Text
	;HEVA-713 ; 18-Jul-2012	SCR		SR17993: Update Grid (Required for actual Save)
	;HEVA-713 ; 29-Jun-2012	SCR		SR17993: Update Total Dose Quantity
	;HEVA-713 ; 15-May-2012	PPP		SR17993: Convert date from External to Internal
	;HEVA-713 ; 17-Apr-2012	SCR		SR17993: Created
	;HEVA-713 ;-------------------------------------------------------------------------------
	;HEVA-713 #dim strText as  %String
	;HEVA-713 #dim intDur as %Integer
	;HEVA-713 new strText,intDur,dtTo,dtFrom

	;HEVA-713 set intDur	= $piece(pobjMData,Y,pintDurFld)
	;HEVA-713 if intDur<0 {
	;HEVA-713 	set intDur=0
	;HEVA-713 	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pintDurFld_"~"_intDur
	;HEVA-713 	set pintDur=intDur
	;HEVA-713 	set $piece(pobjMData,Y,pintDurFld)=pintDur ; Required
	;HEVA-713 } 
	;HEVA-713 set dtFrom	= $$^WWWTR(1,1,$piece(pobjMData,Y,pintFrom))	;SR18142
	;HEVA-713 set pstrFrom= $$^WWWTR(0,1,dtFrom)							;SR18142
	;HEVA-713 set dtTo	= (dtFrom+intDur)								;SR18142
	;HEVA-713 ;set dtTo	= ($$^WWWTR(1,1,$piece(pobjMData,Y,pintFrom))+intDur)
	;HEVA-713 set strText = $$^WWWTR(0,1,dtTo)
	;HEVA-713 set %TXT(1)	= %TXT(1)_"#"_"Y"_YFORM_pidTo_"~"_strText
	;HEVA-713 set $piece(pobjMData,Y,22)=dtTo
	;HEVA-713 do UpdateGrid^COMGridEdit31Links("Y"_YFORM_pidTo,dtTo,"",1) 
	;HEVA-713 do UpdateTDQ^MEDPrescriptionHosp(14,15,17,21,34) ;HEVA-713
	;HEVA-713 quit
	
	
OnBlurDiag(pidDiag,pintDescFld)
	;-------------------------------------------------------------------------------
	; On Blur Diag, Update Description field
	;
	; Returns:
	;
	; History:
	; 18-Jul-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new strDesc
	set strDesc=""
	if pidDiag'="" {
		set strDesc= $$$MEDICDDescription($get(^MEDICD(YM,pidDiag,1)))
	}
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pintDescFld_"~"_strDesc
	quit

OnBlurTime(&YMFELD)
	;-------------------------------------------------------------------------------
	; Updates the duration field based on a change of any of the date/time fields
	;
	; Returns:
	;
	; History:
	; 20-Jan-2013	shobby	HEVA-774: Updated the grid before the value is changed in the header form
	;							to reflect the number formatting.
	; 03-Jan-2013	shobby	HEVA-713.3: Improve accuracy of duration calculations.
	; 20-Dec-2012	shobby	HEVA-713: Created
	;-------------------------------------------------------------------------------
	new fltDur,intDurField
	if YFORM="MEDPrescriptionHosp" {
		set fltDur=$$$DateDiff($piece(YMFELD,Y,19)_","_$piece(YMFELD,Y,20),$piece(YMFELD,Y,22)_","_$piece(YMFELD,Y,23))
		set intDurField=21
	} elseif YFORM="MEDPrescriptionSol" {
		set fltDur=$$$DateDiff($piece(YMFELD,Y,17)_","_$piece(YMFELD,Y,18),$piece(YMFELD,Y,20)_","_$piece(YMFELD,Y,21))
		set intDurField=19
	}
	set fltDur=fltDur/86400
	set $piece(YMFELD,Y,intDurField)=fltDur
	do UpdateGrid^COMGridEdit31Links("Y"_YFORM_"M"_intDurField,fltDur,"",1) ;HEVA-774
	set fltDur=$$GetLiteral^WWWTR(12,fltDur)
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_intDurField_"~"_fltDur
	if YFORM="MEDPrescriptionHosp" do UpdateTDQ^MEDPrescriptionHosp(14,15,17,21,34,19,20,22,23) ;HEVA-713
	;if YFORM="MEDPrescriptionSol" do UpdateTDQ^MEDPrescriptionHosp(14,15,17,21,34,17,18,20,21) ;HEVA-713
	quit fltDur

	;HEVA-713 OnBlurTo(pobjMData,pidDur,pintFrom,pintTo,&pstrDate)
	;HEVA-713 ;-------------------------------------------------------------------------------
	;HEVA-713 ; On Blur To Date - Update Duration and From & To Dates 
	;HEVA-713 ; Used by MEDPrescriptionHosp & MEDPrescriptionSol
	;HEVA-713 ;
	;HEVA-713 ; Inputs: Line
	;HEVA-713 ;
	;HEVA-713 ; Returns:
	;HEVA-713 ;
	;HEVA-713 ; History:
	;HEVA-713 ; 01-Nov-2012	SCR		SR18142: Turn off error message (Stops reformating date)
	;HEVA-713 ; 31-Oct-2012	SCR		SR18142: Send Back 'To Date' Text	
	;HEVA-713 ; 29-Oct-2012	SCR		SR18142: Update Grid and YMFELD
	;HEVA-713 ; 24-May-2012	SCR		SR17993: Created
	;HEVA-713 ;-------------------------------------------------------------------------------
	;HEVA-713 #dim intDur,intTo,intFrom as  %String
	;HEVA-713 new intDur,intTo,intFrom
	;HEVA-713 set intTo=$piece(pobjMData,Y,pintTo)
	;HEVA-713 set intFrom=$piece(pobjMData,Y,pintFrom)
	;HEVA-713 if +intTo'=intTo {
	;HEVA-713 	set intTo=$$^WWWTR(1,1,intTo)
	;HEVA-713 }
	;HEVA-713 if +intFrom'=intFrom {
	;HEVA-713 	set intFrom=$$^WWWTR(1,1,intFrom)
	;HEVA-713 }
	;HEVA-713 set pstrDate=$$^WWWTR(0,1,intTo)	;SR18142
	;HEVA-713 set intDur = (intTo-intFrom)
	;HEVA-713 ;HEVA-713 if intDur<1 {
	;HEVA-713 	;set %TXT(1)=%TXT(1)_"!"_$$$Text("MED01264")  ;'To' date greater than 'From' date
	;HEVA-713 ;HEVA-713 } else {
	;HEVA-713 	;set:+intDur=0 intDur=1
	;HEVA-713 	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_pidDur_"~"_intDur
	;HEVA-713 	set $piece(pobjMData,Y,+$extract(pidDur,2,4))=intDur			; SR18142
	;HEVA-713 	do UpdateGrid^COMGridEdit31Links("Y"_YFORM_pidDur,intDur,"",1)	; SR18142
	;HEVA-713 ;HEVA-713 }
	;HEVA-713 do UpdateTDQ^MEDPrescriptionHosp(14,15,17,21,34,17,18,20,21) ;HEVA-713
	;HEVA-713 quit
	
OnBlurDose(&pobjMData,pidDose)
	;-------------------------------------------------------------------------------
	; On Blur Dose - Must be greater than 0
	; Used by MEDPrescriptionHosp 
	;
	; Inputs: Line id
	;
	; Returns:
	;
	; History:
	; 08-Feb-2013	SCR		HEVA-800: Convert number based on region
	; 07-Feb-2013	SCR		HEVA-800: Round to 2 dp
	; 24-Oct-2012	SCR		SR18138: Update Volume
	; 29-Jun-2012	SCR		SR17993: Update Total Dose Quantity
	; 20-Jun-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new fltDose
	set fltDose=$piece(pobjMData,Y,pidDose)
	set fltDose = $$RoundDose^MEDPrescriptionCommon(fltDose) ; HEVA-800	
	if (fltDose'>0)&&(fltDose'="") {
		set %TXT(1)=%TXT(1)_"!"_$$$Text("MED01283")  ;Dose must be greater than 0~
	} else {
		set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pidDose_"~"_$$Convert^WWWTR(0,12,fltDose)  ; HEVA-800	
		;set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pidDose_"~"_fltDose  ; HEVA-800	
		set $piece(pobjMData,Y,pidDose) = fltDose  ; HEVA-800	 
		do VolumeUpdate() ; SR18138
	}
	quit

OnBlurDilQty(&pobjMData,pidDose)
	;-------------------------------------------------------------------------------
	; On Blur Diluent Qty 
	; Used by MEDPrescriptionHosp 
	;
	; Inputs: Line id
	;
	; Returns:
	;
	; History:
	; 07-Feb-2013	SCR		HEVA-800: Created
	;-------------------------------------------------------------------------------
	new fltQty
	set fltQty=$piece(pobjMData,Y,pidDose)
	set fltQty = $$RoundDose^MEDPrescriptionCommon(fltQty)
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pidDose_"~"_fltQty
	set $piece(pobjMData,Y,pidDose) = fltQty 
	do VolumeUpdate()
	quit
	
VolumeUpdate()
	;-------------------------------------------------------------------------------
	; Update Volume & Infusion Time
	;
	; History:
	; 24-Oct-2012	SCR		SR18138: Created
	;-------------------------------------------------------------------------------
	new idDil,idItem,intDose,intVol,idUnit
	set idDil 	= $piece(YMFELD,Y,24)
	set idItem 	= $piece(YMFELD,Y,14)
	set intDose = $piece(YMFELD,Y,15)
	set idUnit	= $piece(YMFELD,Y,16)
	set intVol = $$VolumeItem^MEDPrescriptionSolLine(idItem,idUnit) * intDose
	if idDil'="" {
		set intDose = $piece(YMFELD,Y,25)
		set intVol = intVol + ($$VolumeItem^MEDPrescriptionSolLine(idDil) * intDose)
	}
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M43"_"~"_$$^WWWTR(0,12,intVol)
	set $piece(YMFELD,Y,43) = intVol
	do InfusionTime()
	quit

InfusionTime()
	;-------------------------------------------------------------------------------
	; Update Infusion Time
	; 
	; History:
	; 24-Oct-2012	SCR		SR18138: Created
	;-------------------------------------------------------------------------------
	new intVol,intRate,idUnit,intTime,intQPH
	set intVol 	= $piece(YMFELD,Y,43)
	set intRate = $piece(YMFELD,Y,28)
	set idUnit	= $piece(YMFELD,Y,33)	
	do InfuseTime^MEDPrescriptionSol(intVol,1,intRate,idUnit,.intTime,.intQPH)
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M29"_"~"_$$^WWWTR(0,12,intTime)
	set $piece(YMFELD,Y,29) = intTime
	do UpdateGrid^COMGridEdit31Links("Y"_YFORM_"M29",intTime,"",1)  
	quit
	
	
	
	
OnBlurDiluent(pobjMData,pintDiluent,pintUOM)
	;-------------------------------------------------------------------------------
	; On Blur Diluent - Update Diluent UOM
	; Used by MEDPrescriptionHosp 
	;
	; Inputs: Manual Data, Diluent Field, UOM Field
	;
	; Returns:
	;
	; History:
	; 24-Oct-2012	SCR		SR18138: Update Volume
	; 19-Oct-2012	shobby	SR18165: Corrected management of data when updating diluent.
	; 14-Jun-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim idDuluent as  %String
	new idDiluent,strUOM 																; SR18165
	
	set idDiluent=$piece(pobjMData,Y,pintDiluent)
	if idDiluent'="" {   ; Diluent
		set strUOM=$$$AppEnum("EINHEIT",$piece($get(^INART(YM,idDiluent,1)),Y,40))		; SR18165
	} else {
		set strUOM=""																	; SR18165
		set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M25~"										; SR18165
		do UpdateGrid^COMGridEdit31Links("Y"_YFORM_"M25","","",1)  						; SR18165
	}
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_pintUOM_"~"_strUOM							; SR18165
	do UpdateGrid^COMGridEdit31Links("Y"_YFORM_"M35",strUOM,"",1)  						; SR18165
	do VolumeUpdate() ; SR18138
	
	quit
	
OnAfterButtonLine(pYPARA)
	do Display^MEDPatientDetails($$$MEDPrescriptionPatientID(YFELD))
	quit

OnAfterDataFields(pidPatient)
	quit
OnAfterDataFields1(YMFELD="")
	;-------------------------------------------------------------------------------
	; Show current lines, Current Drugs & History
	;
	; Inputs: Key
	;
	; Returns:
	;
	; History:
	; 06-Feb-2013	shobby	SESPE-467: Formatting for firefox.
	; 16-Nov-2012	shobby	SR18020: TODO Create a new call out from WWWFORM to do this.
	; 16-Nov-2012	shobby	SR18020: Not using YMFELD for Patient information
	; 16-Jul-2012	SCR		SR17993: Added Java Script (From Dispense)
	; 06-Jun-2012	SCR		SR17993: Seperate Divs
	; 19-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim idRx,objRx
	new idPatient
	;SR18020 set idPatient=$piece(YMFELD,Y,4)
	set idPatient=$$$MEDPrescriptionPatientID(YFELD) ;SR18020 
 	if idPatient'="" {
		write "<DIV id='MEDDD' style='float:left; position:relative; top:0px;'>"
		;SR18182 write "<DIV style='border:1px ; position:absolute; top:75px; left:850px; width:220px; height:800;'>"
		write "<DIV style='border:none ; top:75px; wid1th:220px; '>"
		write "<DIV style='border:1px solid black; position:relative; top:0px; left:0px; width:100%; height:auto;'>"
		do ShowDrugs^MEDPrescriptionHospTable(idPatient)
	 	write "</DIV>"
		write "<DIV style='border:1px; position:relative; float:top; left:0px; width:100%; height:10px;'>"		
		write "</DIV>" 	
		write "<DIV style='border:1px solid black; position:relative; float:top; left:0px; width:100%; height:auto;'>"		
		do ShowHist^MEDPrescriptionHospTable(idPatient)
	 	write "</DIV>"
 		do SetupJS^MEDDispenseJS(YVOR)
		write "</DIV>" ;SR18182
		write "</DIV>"
	}
	quit

CanValidate(pidPres, pobjPres)
	;-------------------------------------------------------------------------------
	; Validate Prescription in 'MEDDispense'
	;
	; Inputs: Key
	;
	; Returns: strStatus
	;
	; History:
	; 03-Jan-2013	SCR		HEVA-738: Handle 'Rejected' Status
	; 23-Oct-2012	shobby	SR18130.2:  Check if patient is admitted.
	; 09-Jun-2012 SCR	SR17993: Changed Status to include 1
	; 01-Jun-2012 PPP  	SR18002: Created
	;-------------------------------------------------------------------------------
	new idSta
	new strDispenseStatus
	new strStatus

 	set strStatus = $$$OK
	if '$$$NoKey(pidPres) {
		if '$$CheckAdmitted^MEDPatient("","",$$$MEDPrescriptionPatientID(pobjPres)) set strStatus=$$$MakeStatus("MED01310")  ; "Patient does not have an active admission" ;SR18130.2
		if $$$ISOK(strStatus) {														;SR18130.2
			set idSta = +$$$MEDPrescriptionStatus(pobjPres)
			set:idSta=10 idSta=2.5 ; HEVA-738
		  	if (idSta < 1) || (idSta > 5) {		//Open, Administration Complete  ; SR17993
		  	;if (idSta < 2) || (idSta > 5) {		//Open, Administration Complete
				set strDispenseStatus = $$GetDescription^WWWStatus("MEDPrescription",idSta,$get(SPRACHE))
		 		set strStatus = $$$MakeStatus("MED00398",strDispenseStatus)   //Invalid Status (%) for current operation
		 	}	
		}
	}

 	$$$YQHandler(strStatus)
	
	quit strStatus
	
Validate(pidRx,pdtStart="",pdtEnd="")
	;-------------------------------------------------------------------------------
	; Validate Prescription in 'MEDDispense'
	;
	; Inputs: Key
	;
	; Returns: strStatus
	;
	; History:
	; ]]><![CDATA[06-Nov-2014	SCR		HEVA-1623: If times are entered and the last dispense is rejected, 
	;									do not use if the times do not match
	; 14-Oct-2014	SCR		HEVA-1580: Pass in Times
	; 22-Nov-2012	SCR		SR18211: Create new Dispense if last Dispense is processed
	; 12-Nov-2012	SCR		SR18199: Force id to prescription number only	
	; 26-Oct-2012	shobby	SR18130.2: Check for valid admission.
	; 01-Jun-2012	PPP		SR18002.2: Create the Dispense on Validation if one does not exist 	 
	; 01-Jun-2012	PPP		SR18002.1: not OK if Status > 3 	 
	; 16-May-2012	PPP		SR18002: Added more logic to display new/old dispense
	; 16-May-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new blnRej,idDispense,idLine,idSta,objDispense,objLine,strParam,strStatus
 	
	set strStatus=$$$OK 
	set pidRx=$piece(pidRx,",") ; SR18199
	set strStatus=$$CheckAdmitted^MEDPatient("",pidRx)												;SR18130.2
	if $$$ISERR(strStatus) {																		;SR18130.2
		$$$Alert(strStatus)																			;SR18130.2
	} 																								;SR18130.2
	if $$$ISOK(strStatus) {

	 	set $piece(strParam," ",1) = pidRx
	 	set $piece(strParam," ",2) = pdtStart
	 	set $piece(strParam," ",3) = pdtEnd

		//^MEDDispenses(0,1,"MP0043","PP0000002")=""
		//Get the last Dispense for this Prescription
		set idDispense = $order(^MEDDispenses(0,1,$$$Index(pidRx),""),-1)
	
		if idDispense'="" {
			set objDispense = $get(^MEDDispense(0,idDispense,1))
		  	set idSta = $$$MEDDispenseStatus(objDispense)
		  	//SR18002.1
		  	if (idSta > 2) {		; SR18211
		  	;if (idSta > 3) {		//Partial Processed, Processed
		   		set idDispense=""
		  	}
		  	if idDispense'="" {
			  	if (pdtStart'="") && (pdtEnd'="") {
					if $$RecjectOK^MEDDispenseIssue(idDispense,pdtStart,pdtEnd) {
					  	set idDispense	= ""
				  	}
			  	}
		  	}
  
		}
	 
		if idDispense = "" {
			set strStatus = $$CreateDispense^MEDDispense(pidRx, .idDispense,pdtStart,pdtEnd)
		}
 
		;set $piece(strParam,"Y",1) = ""
		if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
			do GoToForm^COMUtilForm("MEDDispense",$get(idDispense),1,$get(strParam))
		} else {
			do GoToForm^COMUtilForm("MEDDispense",$get(idDispense),"",$get(strParam))
		}
	} else {
		do ReloadForm^COMUtilForm()																;SR18130.2
	}
 	
 	quit strStatus 

TimeCheck(&pstrTime)
	;-------------------------------------------------------------------------------
	; Validate Time
	;
	; Inputs: Key
	;
	; Returns: strStatus
	;
	; History:
	; 04-Jun-2012 SCR  SR17993: Created
	;-------------------------------------------------------------------------------
	quit ;SR18026	
	new tmTime
	if pstrTime="." {
		set pstrTime=$ztime($piece($h,",",2),2)
	}
	set tmTime=$ztimeh(pstrTime,2,"err") 
	if tmTime="err" {
		set Q=$$$QDontSave
		do ReturnError^COMUtils("MED01265")  ;Incorrect Time~
	} else {
		set pstrTime=$ztime(tmTime,2)
	}
	quit ;SR18026
UpdateDiluent(pidItem,YUPDATE)
	;-------------------------------------------------------------------------------
	; Update the Diluent List (Combo Box) based on the Item Provided
	;
	; Inputs:
	;	pidItem
	;	YUPDATE in the form  "Y"_YFORM_YART_FIELD 
	;
	; Returns:
	;
	; History:
	; 24-Jul-2012	SR17993: Limit the size of list (width)
	; 05-Jun-2012	SR17993: Created
	;-------------------------------------------------------------------------------
	new idUnit,idUnitSel,YI,objSetup,idCat,idItem,objItem,intSize,strDesc
	set objSetup=$get(^MEDPrescriptionSetup(0,YM,1)) 
	set intSize= $$$MEDPrescriptionSetupDiluentNameSize(objSetup)
	set:intSize<1 intSize=20
	
	set %TXT(1)=$get(%TXT(1))
	if $get(pidItem)="" {
		set %TXT(1) = %TXT(1)_"#"_YUPDATE_"~REMOVE"
		set %TXT(1) = %TXT(1)_"#"_YUPDATE_"~"_$$$NULLID_"~"_$$$SPACE_"~"_0
		quit
	}
	
	set YI=0
	set %TXT(1) = %TXT(1)_"#"_YUPDATE_"~REMOVE"
	set %TXT(1) = %TXT(1)_"#"_YUPDATE_"~"_$$$NULLID_"~"_$$$SPACE_"~"_YI
	do LoadDiluentList(pidItem)
	set idItem = ""
	for YI(1)=1:1 {
		set idItem = $order(^COMTempList(0,YUSER,"Diluent",idItem))
		quit:idItem=""
		set strDesc = $piece($get(^INART(YM,idItem,1)),Y,1)
		set strDesc = $extract(strDesc,1,intSize)
		set %TXT(1) = %TXT(1)_"#"_YUPDATE_"~"_idItem_"~"_idItem_" - "_strDesc_"~"_YI(1)
	}
	quit

LoadDiluentList(pidItem="")
	;-------------------------------------------------------------------------------
	; Update the Diluent List (COMTempList) based on the Item Provided
	;
	; Inputs:
	;	pidItem
	;	YUPDATE in the form  "Y"_YFORM_YART_FIELD 
	;
	; Returns:
	;
	; History:
	; 24-Jul-2012	SR17993: Limit the size of list (width)
	; 05-Jun-2012	SR17993: Created
	;-------------------------------------------------------------------------------
	new idUnit,idUnitSel,YI,objSetup,idCat,idItem,objItem,intSize,strDesc
	
	set objSetup=$get(^MEDPrescriptionSetup(0,YM,1)) 
	set idCat=$$$MEDPrescriptionSetupDiluentCategory(objSetup) 
	set intSize= $$$MEDPrescriptionSetupDiluentNameSize(objSetup)
	set:intSize<1 intSize=20
	kill ^COMTempList(0,YUSER,"Diluent")
	if idCat'="" {
		set idCat=$$$Index(idCat)
		set idItem = ""
		for YI(1)=1:1 {
			set idItem = $order(^INARTs(YM,6,idCat,idItem))
			quit:idItem=""
			set strDesc = $piece($get(^INART(YM,idItem,1)),Y,1)
			set strDesc = $extract(strDesc,1,intSize)
			set ^COMTempList(0,YUSER,"Diluent",idItem,1) = strDesc_"~"_YI(1)
		}
	}
	quit
	
Process(pidRx)
	;-------------------------------------------------------------------------------
	; Create diluent lines and Process the Prescription
	;
	; Inputs: id
	;
	; Returns:
	;
	; History:
	; 23-Oct-2012	shobby	SR18130.2 : Can't process if no active admission.
	; 08-Jun-2012	SR17993: Created
	;-------------------------------------------------------------------------------
	
	new strStatus
	
	set strStatus=$$CheckAdmitted^MEDPatient("",pidRx) 							;SR18130.2
	if $$$ISERR(strStatus) { 													;SR18130.2
		$$$Alert(strStatus)														;SR18130.2
		do ReloadForm^COMUtilForm()												;SR18130.2
	} else { 																							;SR18130.2
		set strStatus = $$Transaction^COMTransaction("ProcessTxn^MEDPrescriptionHosp("""_pidRx_""")",$$$NO)
		if $$$ISOK(strStatus) do Firm^MEDPrescription(pidRx)
	}
	quit strStatus

ProcessTxn(pidRx)
	;-------------------------------------------------------------------------------
	; Update the Remarks
	;
	; Inputs: id
	;
	; Returns:
	;
	; History:
	; 24-Jan-2013	SCR		HEVA-781: Correct numeric test
	; 21-Jan-2013	SCR		HEVA-737: if Urgent & If Needed show 'URGENT and IF NECESSARY'
	; 10-Jan-2013	shobby	HEVA-756: Additional info
	; 08-Jun-2012	SR17993: Created
	;-------------------------------------------------------------------------------
	new strStatus,idLine,objLine,strRemark,strText
	set strStatus=$$$OK
	
	set idLine=""
	for {
		set idLine=$order(^MEDPrescriptionLine(YM,pidRx,idLine))
		quit:idLine=""
		quit:strStatus'=$$$OK
		set objLine=$get(^MEDPrescriptionLine(YM,pidRx,idLine,1))
		set strText=""
		if $$$MEDPrescriptionLineUrgent(objLine) {
			set strText=$$$Text("MED01284")  ;URGENT
			; HEVA-737 vvvv
			if $$$MEDPrescriptionLineIfNeeded(objLine) {
				set strText=strText_" "_$$$Text("SALCST0224") ; and
			}
			; HEVA-737 ^^^^

		}
		if $$$MEDPrescriptionLineIfNeeded(objLine) {
			set:strText'="" strText=strText_" "
			set strText=strText_$$$Text("MED01285")  ;IF NEEDED
		}
		
		;HEVA-756 vvvv
 		if $$$MEDPrescriptionLinePRN(objLine) {
			set:strText'="" strText=strText_"|"
	 		set strText=strText_$$$Text("MED01420")  ;PRN
	 	}
 		if +$$$MEDPrescriptionLineAdministeronly(objLine)>0 { ; HEVA-781
 		;if $$$MEDPrescriptionLineAdministeronly(objLine)'="" {
			set:strText'="" strText=strText_"|"
	 		set strText=strText_$$$Text($lb("MED01421",$$$MEDPrescriptionLineAdministeronly(objLine))) ;Administer Only %1
 		}
		;HEVA-756^^^^
		
		set strRemark= $$$MEDPrescriptionLineRemarks(objLine)
		if $extract(strRemark,1,$length(strText))'=strText {
			set strRemark=strText_$select(strRemark="":"",1:"|"_strRemark) 
		}
		if $$$MEDPrescriptionLineRemarks(objLine)'=strRemark {
			set $$$MEDPrescriptionLineRemarks(objLine)=strRemark
			set strStatus=$$$Save("MEDPrescriptionLine",pidRx_","_idLine,objLine,1)
		}
	}
	if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
		if ($$$ISOK(strStatus)) {
				set strStatus = $$CreateDose^VARDose(pidRx)
		}
	}
	quit strStatus
 
DrugInteraction(pidRx,pidItem,pidGridForm)
	;-------------------------------------------------------------------------------
	; Check the Drug Interaction
	;
	; Params:	pidDispense	- Dispense
	;
	; Returns:	
	;
	; History:
	; 23-Jan-2013	shobby	HEVA-762: Don't test line if it doesn't have an item
	; 16-Jul-2012	SCR		SR17993: Created
    ;-------------------------------------------------------------------------------
	new strMsg,arrGrid,arrDrugs,idLine1,objLine1,idItem1,idDiluent,intCont,intSize,intLines
	
	set strMsg=""
	
	if '$$$NoKey(pidRx) {
		$$$GRIDGetContents(.arrGrid,pidGridForm) ;HEVA-762
		set:pidItem'="" arrDrugs("l",pidItem)=""
		set idLine1 = ""
		for {
			set idLine1 = $order(arrGrid(pidRx,idLine1))
			quit:idLine1=""
			
			set objLine1 = $get(arrGrid(pidRx,idLine1))
			set idItem1 =  $$$MEDPrescriptionLineItem(objLine1) ;HEVA-762
			if idItem1'="" {
				set arrDrugs("l",idItem1)=""

				//SR18002.1
				set idDiluent =  $$$MEDPrescriptionLineDiluent(objLine1)
				if idDiluent'="" {
					;set arrDrugs("d",idItem1,idDiluent)=""
					set arrDrugs("l",idDiluent)=""

				}
			}
			
		}
	}
	set strMsg=$$GetInteractionMessage^MEDDrugInteraction(.arrDrugs,.intCont,pidRx)
	
	if strMsg'="" {
		set intLines = $l(strMsg,"</br>")+2
		set intSize = intLines * 27
		
		if (intSize > 600){
			set intSize = 600
		}
		set strMsg = $replace(strMsg,"'","`")
		set strMsg = $$$Text($lb("MED00416",intCont))_strMsg		//Dispense contains <b>%1</b> Drug Interaction(s)</br>
			
		$$$JS("ShowMsgInteracao( '"_strMsg_"','"_intSize_"');")
	
	}
	
	quit
Suspend(pstrKey)
	;-------------------------------------------------------------------------------
	; Suspend Rx or Rx Line 
	; 
	; Param YKEY = Rx or Rx,Line  
	;
	; History:
	; 12-Jul-2012	SCR		SR17979: Created
	;-------------------------------------------------------------------------------
	

	new strPrompt
	new strCallback
	new idRx
	new strYKEY
	new strAlert

	if ($get(pstrKey) '= "") {
		set strYKEY = pstrKey
	} else {
		set strYKEY = $$GetKey^COMGridEdit31G()
	}
	
	set strPrompt   = $$$JSText($$$Text( "MED01289"))  ;Please specify the reason for Suspension
	set strCallback = "SuspenseSet^MEDPrescriptionHosp"
	set idRx	 	= $$$KEY1(strYKEY)
	set strAlert 	= $$$JSText($$$Text("MED00415")) //Please enter a Reason

	$$$StartScript()
	&js<
		//var strResult=prompt('#(strPrompt)#','','');
		
		var strResult = iePrompt('#(strPrompt)#');
				
		if (strResult!=false) {
			CallBackNow('#(strCallback)#','#(strYKEY)#',strResult);
		} else {
			CallBackNow('GoToForm^COMUtilForm','MEDPrescriptionHosp','#(idRx)#');		
		}
		
	>
	$$$EndScript()
	
	quit $$$OK

SuspenseSet(pidRx, pstrReason="xxxx")
	;-------------------------------------------------------------------------------	
	; Set the status and add Reason to Remarks
	;
	; Params:	pidRx	- Prescription, Line Key
	;			Reason
	;
	; Returns:	
	;
	; History:
	; 26-Jul-2012	SCR		SR17994 : Created
	;-------------------------------------------------------------------------------	
	new strStatus,YKEY
	set YKEY  = $piece(pidRx,",",1)
	
	set strStatus = $$Transaction^COMTransaction("SuspendTxn^MEDPrescription("""_YKEY_""","""_pstrReason_""")",$$$YES)
	
	
	Do RedirectForm^COMUtilForm("MEDPrescriptionHosp",YKEY,"MEDPrescriptionHosp,",YPARA,"")

	;quit strStatus
	quit $$$OK

PatientList()

	;-------------------------------------------------------------------------------
	; Jump back to Patient list in search mode
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 08-Aug-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	Do RedirectForm^COMUtilForm("MEDPrescriptionPat","","","","",$$$YES)
	quit

]]></Routine>
</Export>