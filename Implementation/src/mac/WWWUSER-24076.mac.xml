<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWUSER" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWUSER
#include COMSYS
#include WWWConst
 
GetChildUser(pidUser) 
    ;--------------------------------------------------------------------------------
    ; Get a child user id for the current user
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 11-Jan-2007	JW		BR014262: Changed "-" to "x" to resolve multiple problems.
    ; 19-Apr-2006	JW		Only have two levels of YUSER
    ; 10-Nov-2005	JW		SR13817: Created
    ;---------------------------------------------------------------------------------
	new idChildUser
	
	set pidUser = $$$GetParentUser(pidUser)
	do {
		//set idChildUser = pidUser_"-"_$random(1000)
		set idChildUser = pidUser_"x"_$random(1000)		//BR014262
	} while ($data(^WWWUSER(0,idChildUser)))
	
	quit idChildUser
	
	
CopyParent(pidUser,pblnNewSession=$$$YES)
    ;--------------------------------------------------------------------------------
    ; If no data in current user, copy from GetParentUser.
    ;
    ; Params: 	pidUser			- child user
    ; 			pblnNewSession	- if we are opening a new browser session (window)
    ;
    ; ByRefs:
    ;
    ; Returns: null. writes to current user if null.
    ;
    ; History:
    ; 18-Dec-2006	JW		BR014262: Set frame formed to null. Added pblnNewSession
    ; 27-Mar-2006	SC		SR13942: Created 
    ;---------------------------------------------------------------------------------
    new idParentUser,objUser
	
	if '$data(^WWWUSER(0,pidUser,1)) {
		set idParentUser = $$$GetParentUser(pidUser)
		if idParentUser'="" {	//SR13817 - child user
			
			set objUser = $get(^WWWUSER(0,idParentUser,1))		// BR014262
			if pblnNewSession set $$$WWWUSERFrameFormed(objUser)=""
			set ^WWWUSER(0,pidUser,1) = objUser
			
			//set ^WWWUSER(0,pidUser,1) = $get(^WWWUSER(0,idParentUser,1))	BR014262
		}
	}
	quit

NewUser(pidUser,pblnNewSession=$$$YES)
	;-------------------------------------------------------------------------------
	; Create a new user
	;
	; History:
	; 11-Apr-2013	shobby	CORE-70: Created
	;-------------------------------------------------------------------------------
	new objWWWUser,idUser
	set objWWWUser=^WWWUSER(0,pidUser,1)
	set idUser=$$NewUserSession^WWWUSER()
	set $$$WWWUSERFrameFormed(^WWWUSER(0,objWWWUser,1))=""
	set ^WWWUSER(0,idUser,1)=objWWWUser
	quit idUser

	
CreateChildUser(pidUser,pblnNewSession=$$$YES)
	;-------------------------------------------------------------------------------
	; Get a child user and create its WWWUSER record.
	;
	; Params:	pidUser			- parent user
	; 			pblnNewSession	- if we are opening a new browser session (window)
	;
	; Returns:	child id
	;
	; History:
	; 11-Jan-2007	JW		SRBR014262: Created
	;-------------------------------------------------------------------------------
	new idChildUser
	
	set idChildUser = $$GetChildUser^WWWUSER(pidUser)
	do CopyParent^WWWUSER(idChildUser,pblnNewSession)
	
	quit idChildUser
	
			
NewUserSession(pstrSource="")
	;-------------------------------------------------------------------------------
	; Create New User Session (YUSER) which is unique across namespaces
	;
	;     set YUSER = $$NewUserSession^WWWUSER("audit string")
	;     then construct ^WWWUSER(0,YUSER,1)
	;
	; 
	; Returns:	session id (YUSER) and builds ^CacheTempSession(YUSER)
	;
	; History:
	; 30-Apr-2010	GRF		-: Add second "1" to break up long string of zeros in
	; 							initial value (for developers benefit);  initialise
	; 							outside FOR loop
	; 19-Feb-2009	FIS		SR16065: store Client IP in CacheTempSession
	; 15-Jan-2009	GRF		SR15853: to retain unpredictability add random component
	; 							to the increment; added pstrSource
	; 14-Jan-2009	FIS		SR15853: re-written using $increment - no need to lock,
	; 							no $random required
	; 14-Jan-2009	FIS		SR15853: 11 digits session id to not correlate with 10
	; 							digit PID ($job)
	; 18-Aug-2008	FIS		SR15853: Created
	;-------------------------------------------------------------------------------
	new idSession
	
	;for {
	;	if (+$get(^CacheTempSession) = 0) {      ; Initiate with 11 digits
	;;		set idSession = $increment(^CacheTempSession,10000000000+$random(100000))
	;		set idSession = $increment(^CacheTempSession,10010000000+$random(100000))
	;	} else {
	;		set idSession = $increment(^CacheTempSession,1+$random(10000))
	;	}
	;	quit:'$data(^WWWUSER(0,idSession))  //old data, not removed yet
	;}
	
	if ($get(^CacheTempSession)<10010000000) set ^CacheTempSession = 10010000000   ; Initialise with 11 digits
	for {
		set idSession = $increment(^CacheTempSession,1+$random(10000))
		quit:'$data(^WWWUSER(0,idSession))  //old data, not removed yet
	}
	
	set ^CacheTempSession(idSession) = $listbuild($job,$zutil(5),pstrSource,$select($get(%request)'="":%request.CgiEnvs("REMOTE_ADDR"),1:$get(%CGIEVAR("HTTP_USER_AGENT"))))
	set ^CacheTempSessionStart(+$horolog,idSession) = $listbuild($horolog,$zhorolog)
	
	quit idSession
	
	
LogAction(idSession)
	;-------------------------------------------------------------------------------
	; Log last Action Event
	;
	; History:
	; 19-Feb-2009	FIS		SR16065: Created
	;-------------------------------------------------------------------------------
	set ^CacheTempSessionLastAction(idSession) = $listbuild($horolog,$zhorolog)
	quit
	
	
EndSession(idSession)
	;-------------------------------------------------------------------------------
	; Flag Session As Ended
	;
	; History:
	; 19-Feb-2009	FIS		SR16065: Created
	;-------------------------------------------------------------------------------
	set ^CacheTempSessionEnd(idSession) = $listbuild($horolog,$zhorolog)
	quit
	
	
GetActiveSessions(arrActiveSessions,intCount)
	;-------------------------------------------------------------------------------
	; Return Current Session Numbers in an Array
	; 
	; ByRef arrActiveSessions (as global array)
	; OR
	; Global Ref. arrActiveSessions (ie. "^CacheTempCurrentSessions")
	; 
	; ByRef intCount (returns total number of open sessions)
	;
	; History:
	; 27-Feb-2009	FIS		SR16065: Web Service Session added
	; 27-Feb-2009	FIS		SR16065: ByRef intCount added to return number of sessions
	; 19-Feb-2009	FIS		SR16065: Created
	;-------------------------------------------------------------------------------
	new dteDay,idSession,sqlRS
	set intCount = $get(intCount)
	
	// Alphalinc User Sessions
	// -----------------------
	for dteDay = +$horolog-1,+$horolog {  //sessions started yesterday or today only
		set idSession = ""
		for {
			set idSession = $order(^CacheTempSessionStart(dteDay,idSession))
			quit:idSession=""
			
			continue:'$data(^WWWUSER(0,idSession))           //invalid session id
			continue:'$data(^CacheTempSession(idSession))    //invalid session id
			continue:$listget(^CacheTempSession(idSession),2)'=$zu(5)  //count own namespce only
			continue:$data(^CacheTempSessionEnd(idSession))  //Session Ended
			continue:'$data(^CacheTempSessionLastAction(idSession))
			
			set dteLastAction = $listget(^CacheTempSessionLastAction(idSession),1)
			
			if (+dteLastAction = +$horolog) && ($piece(dteLastAction,",",2) < ($piece($horolog,",",2)-900)) continue  //session not active
			if (+dteLastAction < +$horolog) && ($piece($horolog,",",2) > 900) continue  //session not active
			
			set intCount = intCount + 1  //FIS;27-Feb-2009
			
			if $extract($get(arrActiveSessions)) = "^" {
				set @arrActiveSessions@(idSession)=""
			} else {
				set arrActiveSessions(idSession)=""
			}
		}
	}
	
	// Alphalinc Web Service Sessions
	// ------------------------------
	do ##class(alWEB.WS.Session).ClearSessions()  //delete all old sessions
	set sqlRS = ##class(%Library.ResultSet).%New()
    if (sqlRS.Prepare("SELECT %ID FROM alWEB_WS.Session")) {
	    if (sqlRS.Execute()) {
		    while (sqlRS.Next()) {
			    set idSession = sqlRS.Get("ID")
			    if (idSession '= "") && (##class(alWEB.WS.Session).ValidateSession(idSession) = 1) {
					set intCount = intCount + 1
					if $extract($get(arrActiveSessions)) = "^" {
						set @arrActiveSessions@("WS"_idSession)=""
					} else {
						set arrActiveSessions("WS"_idSession)=""
					}
			    }
		    }
	    }
    }
 
	quit
	
 
	
]]></Routine>
</Export>