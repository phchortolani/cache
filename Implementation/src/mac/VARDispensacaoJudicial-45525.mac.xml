<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARDispensacaoJudicial" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARDispensacaoJudicial
	quit
	
#include COMSYS
#include INConst
#include VARConst
#include VARLog

OnAfterDataFields(pidYFORM,pidYKEY,pidYFELD)

	do OnAfterDataFields^MEDPrescriptionDispense(pidYFORM,pidYKEY,pidYFELD)
	
	quit:(pidYKEY="")

	do LoadGridUltimasDisp
	
	quit
	
LoadGridUltimasDisp()


	new BuscaUltDisp,lstHeader,meuSQL,count,DataHora,Produto,Lote,Validade,QuantPrescrita,
		QuantDispensada,idPaciente
	
	set idPaciente      = $get(VORG(1))
	quit:(idPaciente="")
	
	set lstHeader		= ""
	set BuscaUltDisp 	= ##class(%ResultSet).%New("%DynamicQuery:SQL")

	set meuSQL = "SELECT TOP 3 " 
    set meuSQL = meuSQL_" $$SQLGetFormatDate^VARSQL(INIssue.Posted) Data, "
    set meuSQL = meuSQL_" $$SQLGetDesCodProduto^VARSQL(INIssueLine.Item) Produto, "
    set meuSQL = meuSQL_" $$SQLGetLote^VARSQL(INIssueLine.Bundle) Lote, "
    set meuSQL = meuSQL_" $$SQLDataValidade^VARSQL(INIssueLine.Bundle) Validade, "
    set meuSQL = meuSQL_" INIssueLine.QtyRequired as QuantPrescrita, "
    set meuSQL = meuSQL_" INIssueLine.QtyIssued as QuantDispensada, "
    set meuSQL = meuSQL_" INIssueLine.IssueNumber as CodDisp "
    set meuSQL = meuSQL_" FROM INIssue "
    set meuSQL = meuSQL_" LEFT JOIN INIssueLine ON "
    set meuSQL = meuSQL_" INIssueLine.IssueNumber = INIssue.IssueNumber "
    set meuSQL = meuSQL_" AND INIssueLine.Company = INIssue.Company "
    set meuSQL = meuSQL_" WHERE INIssue.Company  = 0 "
    set meuSQL = meuSQL_" AND INIssue.DemandType = 3 " 	   //Dispensação | Venda
    set meuSQL = meuSQL_" AND INIssue.Type       = 5 "	   //Prescrição
    set meuSQL = meuSQL_" AND INIssueLine.Status = 7 "	   //Processado
    set meuSQL = meuSQL_" AND INIssue.CustomerID = ? "	   //Paciente
    set meuSQL = meuSQL_" ORDER BY INIssue.Posted Desc "
       
    do BuscaUltDisp.Prepare(meuSQL)
    do BuscaUltDisp.Execute(idPaciente)
    
    set lstHeader = lstHeader_$listbuild("Número</BR>Dispensação","Data - Hora","Produto","Lote","Validade","Quantidade </BR>Prescrita","Quantidade</BR> Dispensada")
    
    if $$Start^COMTable(lstHeader,"Últimas dispensações para o paciente") {
	    set count = 0
	    While BuscaUltDisp.Next() {
	    	set count 	 = $increment(count)
	    	
			set idDisp			= BuscaUltDisp.Get("CodDisp")
	    	set DataHora        = BuscaUltDisp.Get("Data")
	    	set Produto         = BuscaUltDisp.Get("Produto")
	    	set Lote            = BuscaUltDisp.Get("Lote")
	    	set Validade        = BuscaUltDisp.Get("Validade")
	    	set QuantPrescrita  = BuscaUltDisp.Get("QuantPrescrita")
	    	set QuantDispensada = BuscaUltDisp.Get("QuantDispensada")
	    	  	
	    	do NewLine^COMTable()
	    	do InsertCell^COMTable(idDisp,"VARDispensacaoJudicial",idDisp,,"CENTER")	
			do InsertCell^COMTable(DataHora,"VARDispensacaoJudicial",idDisp,,"CENTER")
			do InsertCell^COMTable(Produto,"VARDispensacaoJudicial",idDisp,,"LEFT")
			do InsertCell^COMTable(Lote,"VARDispensacaoJudicial",idDisp,,"CENTER")
			do InsertCell^COMTable(Validade,"VARDispensacaoJudicial",idDisp,,"CENTER")
			do InsertCell^COMTable(QuantPrescrita,"VARDispensacaoJudicial",idDisp,,"RIGHT")
			do InsertCell^COMTable(QuantDispensada,"VARDispensacaoJudicial",idDisp,,"RIGHT")
			do EndLine^COMTable()
    	}
    	
    	if (count = 0) {
	    	do NewLine^COMTable("lightsteelblue")
	    	do InsertCell^COMTable("<strong>Nenhum registro foi encontrado.</strong>",,,,"LEFT",,9)
	    	do EndLine^COMTable()
    	}
    	do Stop^COMTable()
    }
    
    do BuscaUltDisp.Close()
    
    quit
    

Postable(pidIssue,pobjIssue)
	;---------------------------------------------------------------------------- 
	; Customização de mensagens.
	;
	; Chamado por:
	; 
	; Botão "Processar" no formulário VARDispensacaoJudicial
	;
	; History:
	; 11-Nov-2011   SLV		Permitir produtos zerados ou sem estoque
	; 27-Sep-2011	SLV		Created
	;-----------------------------------------------------------------------------	

	set strStatus 		= $$$OK
	set idLocn  		= $$$INIssueFromLocn(pobjIssue)
		
	if '$$$NoKey(pidIssue) {
		if $$$ISOK(strStatus) {
			if (idLocn'="") && (idLocn'=YLOCATION) {
				set strStatus = $$$MakeStatus("MED01143",idLocn,YLOCATION) ; "This document belongs to Location %1! This Location is %2. The screen will be available only for viewing documents"
			} 
			if $$$INIssueStatus(pobjIssue) > 1 {
				set strStatus = $$$MakeStatus("MED01157")  ; "Registro processado."
			}
			if $$$ISOK(strStatus) {
				if '$data(^INIssueLine(0,pidIssue)) {
					set strStatus = $$$MakeStatus("MED00356")  ; "Prescription has no lines"
				}
			}
			if $$$ISOK(strStatus) {
				set intUltLinha 	= $order(^INIssueLine(0,pidIssue,""),-1)
				if ($$ChecarQtdProdutosSemEstoque(pidIssue) >= intUltLinha) { //Permitir expedição de produtos zerados ou sem estoque
					set strStatus = 0_" Todos os produtos não possuem estoque. Impossível processar."
				} 
			}
		}
	}
	
	$$$YQHandler(strStatus)	
	quit strStatus
	
	
CreateIssuePatient(pidINIssue,pidLocn,pidItem,pidUnit,pfltQtyReq,pidLine,&pidLn,&pblnNotFirst,&pfltOutstanding)
	;---------------------------------------------------------------------------- 
	; Criação de uma dispensação priorizando o estoque do paciente.
	;
	; Chamado por:
	; 
	; CreateIssueLine^MEDPrescriptionIssue
	;
	; History:
	; 17-Oct-2011	SLV		Created
	;-----------------------------------------------------------------------------		
	
	new objIssue,PatientID,objItem,objStorage,objQtySOH,objQtySOH,QtyTotal,objResultSet,
		idBundle,idxAttribute,dateVal,objBundleStock,strStatus

	set objIssue    = $get(^INIssue(YM,pidINIssue,1))
	set PatientID   = $$$INIssueCustomerID(objIssue)
	set objItem     = ##class(alINV.dItem).%OpenId(pidItem)
	set objStorage  = ##class(alLOC.dStorage).%OpenId(pidLocn_"||"_PatientID)
	
	quit:(objStorage=$$$NULLOREF) $$$OK //Se o paciente não estiver cadastrado como endereço, saia. (Early exit) 
	
	set objQtySOH   = ##class(alSOH.dSOH).GetSOH(objItem,objStorage)
	set objCliente  = $get(^VARParametroCliente(0,0,1))
	set idTpEstoque = $$$VARParametroClienteTipoEstoqueJudicial(objCliente)
	set strStatus   = $$GravarDataRetorno(pidINIssue)
	set QtyTotal 	= 0
																			               
	if ($$$ISOK(strStatus) && (objQtySOH '= $$$NULLOREF) 
		 && (objQtySOH.QtyOnHand > 0) && (idTpEstoque = 1) ) {		 ;Individualizado
		set objResultSet =  ##class(%Library.ResultSet).%New("alSOH.dBundleStock:GetBundles")
		if objResultSet.Execute(objItem.%Id(),objStorage.%Id()) {
			while objResultSet.Next() {
				continue:(pfltOutstanding <= 0) //Quantidade total já foi atendida
				
				set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(objResultSet.Data("ID"))
				set idBundle 	   = objBundleStock.Bundle.%Id()				
				set idxAttribute   = objBundleStock.Bundle.Attributes.FindObjectId(idBundle_"||Use By Date")
				set dateVal        = objBundleStock.Bundle.Attributes.GetAt(idxAttribute).AttributeValue
				
				continue:(dateVal<+$horolog) //Não inserir produtos vencidos
					
				set $$$INIssueLineStatus(objINIssueLine)          = 1				
				set $$$INIssueLineQtyRequired(objINIssueLine) 	  = pfltQtyReq
				if (objBundleStock.QtyOnHand >= pfltOutstanding) {
					set $$$INIssueLineQtyIssued(objINIssueLine)   = pfltOutstanding
					set QtyTotal = QtyTotal + pfltOutstanding
				} else {
					set $$$INIssueLineQtyIssued(objINIssueLine)   = objBundleStock.QtyOnHand
					set QtyTotal = QtyTotal + objBundleStock.QtyOnHand
				}
				set $$$INIssueLineItem(objINIssueLine)        = pidItem
				set $$$INIssueLineUnit(objINIssueLine)        = pidUnit
			//	set $$$INIssueLineToStorage(objINIssueLine)   = idToStorage
				set $$$INIssueLineFromStorage(objINIssueLine) = PatientID
				set $$$INIssueLineBundle(objINIssueLine)      = idBundle
				set $$$INIssueLineReference(objINIssueLine)   = pidINIssue
				
				if pblnNotFirst = $$$YES {
					set pidLn    = $increment(pidLn)
					set pidLine = (pidLine\1)_"."_pidLn
				} else {
					set pblnNotFirst = $$$YES
				}
				
				set pfltOutstanding = pfltQtyReq - QtyTotal
				
				set strStatus = $$$Save("INIssueLine",pidINIssue_","_pidLine,objINIssueLine,$$$YES)
				quit:$$$ISERR(strStatus)
			}			
		}
	}

	quit strStatus
	
	
CanViewReport(pidIssue)

	new objIssue
	
	set strStatus = $$$OK
	
	if $$$NoKey(pidIssue) {
		set strStatus = $$$MakeStatus(32072)  ; "Please Select A Data Record First."
 
	} else {
		set objIssue = $get(^INIssue(YM,pidIssue,1))
		if ($$$INIssueStatus(objIssue) < 9) {
			set strStatus = "Somente poderão ser impressas as dispensações processadas."
		}
	}
	
	$$$YQHandler(strStatus)
	
	quit	
	
	
ImprimeRelatorio(pidYKEY)
	quit:(pidYKEY="")
	
	if ($$GetPreferencia^VARPreferenciasUsuario($$$FldVARPreferenciasUsuarioTelaFiltroRelatorio) = 1){
		do GotoFiltrosRelatorio^VARFiltrosRelatorio("RunReportDispJudicial",0,1,,pidYKEY)
	} else {
		do RunReportDispJudicial^VARJasperRunReport(pidYKEY)
	}
		
	quit
	
CheckIfPreecheDtRetorno(pidIssue)

	set blnPreeche = $$$NO

	set objIssue = $get(^INIssue(YM,pidIssue,1))
	
	if (('$$$NoKey(pidIssue)) && ($$$INIssueStatus(objIssue) < 9)) {
		set blnPreeche = $$$YES		
	}
	
	quit blnPreeche
	
	
GravarDataRetorno(pidIssue)
	; Grava a data de retorno automaticamente após o clique do botão "Atender" no formulário de prescrição

	new strStatus,objIssue

	set strStatus = $$$OK
	set objIssue  = $get(^INIssue(YM,pidIssue,1))
	
	if (objIssue '= "") {
		set $$$INIssueFREE4(objIssue) = +$horolog+30
		set strStatus = $$$Save("INIssue",pidIssue,objIssue,$$$YES)
	}
	
	quit strStatus
	
	
Processar(pidKEY)
	;-------------------------------------------------------------------------------
	; Verifica se existem produtos sem estoque ou zerados cadastrados na dispensação 
	; para tratamento diferenciado, caso contrário, executa a rotina padrão de postagem.
    ; 
	; Returns:Status
	;
	; Called by: 
	;	Botão "Processar" no formulário "VARDispensacaoJudicial"
	;
	; History:
	; 07-Nov-2011	SLV		Created
	;-------------------------------------------------------------------------------
	
	new strStatus
	
	set strStatus = $$$OK
	
	if ($$ChecarQtdProdutosSemEstoque(pidKEY) > 0) {
		$$$StartScript()
			write "if (confirm('Um ou mais produtos não têm estoque suficiente. Os mesmos serão removidos.\r\nDeseja continuar?')) { CallBackNow('Transaction^COMTransaction','ProcessarTxn^VARDispensacaoJudicial("""_pidKEY_""")','1'); }"
		$$$EndScript()
	} else {
		$$$StartScript()
			write "try { CallBackNow('Transaction^COMTransaction','Post^MEDPrescriptionDispense("""_pidKEY_""")','1'); } catch(e) {}"
		$$$EndScript()
	}
		
	do RedirectForm^COMUtils("VARDispensacaoJudicial",pidKEY)
	
	quit
	
	
ProcessarTxn(pidIssue)
	;-------------------------------------------------------------------------------
	; Remove as linhas dos produtos sem estoque e processa a dispensação, ignorando
	; alguns pré-requisitos do sistema (Post^MEDPrescriptionDispense).
    ; 
	; Returns:Status
	;
	; Called by: 
	;	Processar^VARDispensacaoJudicial
	;
	; History:
	; 07-Nov-2011	SLV		Created
	;-------------------------------------------------------------------------------

	new strStatus
	
	set strStatus = $$$OK

	if $$$ISOK(strStatus) { 
		set strStatus = $$ClearBlanks(pidIssue) //Limpa os registros sem estoque.
	}	
	if $$$ISOK(strStatus) { 
		set strStatus = $$PostTxn^INIssueAuto(pidIssue)		
	} else {
		$$$Alert("Erro ao processar a dispensação")
		$$$VARLOGERROR("Erro ao processar dispensação "_pidIssue_" "_strStatus)
	}
	
	quit strStatus
	

ChecarQtdProdutosSemEstoque(pidIssue)
	;-------------------------------------------------------------------------------
	; Retorna a contagem de produtos na dispensação nos quais não possuem estoque.
	;
    ; 
	; Returns:Integer
	;
	; Called by: 
	; 	Processar^VARDispensacaoJudicial
	;   Postable^VARDispensacaoJudicial
	;
	; History:
	; 07-Nov-2011	SLV		Created
	;-------------------------------------------------------------------------------

	new intProdSemEstoque
	
	set intProdSemEstoque = 0
	
	$$$Order3(^INIssueLine,YM,pidIssue,idLinha)
		set objIssueLine 	 = $get(^INIssueLine(0,pidIssue,idLinha,1))
		if ($$CheckSIfStockAvaliable^VARDispJudicialLine(pidIssue,objIssueLine)) { //Se for necessário mudar a cor (strStatus = 1), não existe estoque
			set intProdSemEstoque = $increment(intProdSemEstoque)
		} 		
	$$$End
	
	quit intProdSemEstoque	
	
	
ClearBlanks(pidIssue)
	;-------------------------------------------------------------------------------
	; Clear/Delete All Lines where the Qty is Blank or Zero
	;
    ; 
	; Returns:Status
	;
	; History:
	; 07-Nov-2011	SLV		Adapted from INReq
	;-------------------------------------------------------------------------------
	new idLine,objIssueLine,strStatus
	
	set strStatus = $$$OK
	
	set idLine = ""
	for {
		quit:$$$ISERR(strStatus)
		
		set idLine = $order(^INIssueLine(0,pidIssue,idLine))
		quit:idLine=""
		
		set objIssueLine = $get(^INIssueLine(0,pidIssue,idLine,1))
		
		if ((+$$$INIssueLineQtyIssued(objIssueLine)=0) || 
			($$CheckSIfStockAvaliable^VARDispJudicialLine(pidIssue,objIssueLine))){  ; Remove Blank or Zero lines or Not avaliable on stock
			set strStatus = $$$Kill("INIssueLine",pidIssue_$$$COMMA_idLine)
		}
	}
	quit strStatus				
]]></Routine>
</Export>