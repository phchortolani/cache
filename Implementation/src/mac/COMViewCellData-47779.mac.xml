<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMViewCellData" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMViewCellData
	
#include COMSYS
#include WWWConst
#include COMConst
#include COMView
	
SubClass(pidClass,pidKey,pobjKey,pstrField)
    ;-------------------------------------------------------------------------------
    ; Used to get data from non-related class columns that point to other classes.
    ;
    ; Returns:String
    ;
    ; History:
    ; 18-Jul-2006	RPW		SR14760: If the field type is P, remove any leading and
    ; 							trailing quotes.  qsubscript returned the value
    ; 							without quotes.
    ;  9-Feb-2006	JW		Try to define keys first. Don't use qsubscript etc.
    ; 12-Apr-2005	Paul K	Commented
    ;------------------------------------------------------------------------------
	new blnValid,idClass,idField1,idField2,idForm,idKey,numKeys,objRelation
	new strField1,strField2,strRef,strRelation,strType1,strType2,strValue
	
	set strValue  = ""
 
	set strField1 = $piece(pstrField,".",1)
	set strType1  = $extract(strField1)
	set idField1  = $extract(strField1,2,99)
	
	set strField2 = $piece(pstrField,".",2)
	set strType2  = $extract(strField2)
	set idField2  = $extract(strField2,2,99)
	
	set objRelation = $$GetRelation^COMViewUtils(pidClass,strField1)
	set idClass     = $$$WWW002RelationClass(objRelation)
	
	if idClass'="" {
		set strRef = "^"_idClass_"("_$select($$$WWW001SharedFile($get(^WWW001(0,idClass,1))):0,1:YM)
		
		set numKeys = 1
		set idForm  = $get(^CacheTempView(YUSER,"Form"))
		if (idForm'="") && ($$$WWW002RelationalPrimaryKeys(objRelation)'="") {
			set strRelation = $$$WWW002RelationalPrimaryKeys(objRelation)
			
			if $$DefineKeys^WWWFieldValidation(idForm,strRelation,pidKey,pobjKey) {
				set strRef  = strRef_","_strRelation
				set numKeys = $length(strRelation,",")+1
			}
		}
		
		if $order(^WWW002(0,idClass,""),-1)=numKeys {
			if strType1="P" if $piece(pidKey,",",idField1)'="" set strRef = strRef_","_$$$Add($piece(pidKey,",",idField1))
			if strType1="D" if $piece(pobjKey,Y,idField1)'=""  set strRef = strRef_","_$$$Add($piece(pobjKey,Y,idField1))
		} elseif strType1="P" {
			set idKey = ""
			for {
				set idKey = $order(^WWW002(0,idClass,idKey))
				quit:idKey=""
				
				if $piece(pidKey,",",idKey)'=""	set strRef = strRef_","_$$$Add($piece(pidKey,",",idKey))
			}
		}
		set strRef = strRef_",1)"		
		
		if $order(^WWW002(0,idClass,""),-1)=($length(strRef,",")-2) {
			if strType2="P" {
				set strValue = $piece(strRef,",",idField2+1)
				if $extract(strValue)="""" {
					set strValue = $extract(strValue,2,$length(strValue)-1)
				}
			}
			if strType2="D" set strValue = $piece($get(@strRef),Y,idField2)
		}
	}
	quit strValue
	
	
ShowCompleteData(pintX,pintY,pidKey,pidField)
    ;-------------------------------------------------------------------------------
	; Show all the data for a particular cell in the search grid.
	;
	; History:
	; 10-Feb-2005	PO		SR10965 Created.
    ;-------------------------------------------------------------------------------
	new strHTML,idClass,strAlign,lstData
	
 	set idClass = $get(^CacheTempView(YUSER,"Class"))
 	if idClass'="" {
	; FIXME : <GRF> GetRelation^COMViewUtils is a function.
		do GetRelation^COMViewUtils(.idClass,.pidField)
		set lstData = $$GetData(idClass,pidKey,pidField,.strAlign,$$$NO)
 
		do DisplayPopup("<b>Complete data for field</b><br />",$listget(lstData,2),"",strAlign,pintX,pintY)
 	}
	quit
	
	
ShowCompleteHistory(pintX,pintY,pidKey,pidField)
	;-------------------------------------------------------------------------------
	; Show
	;
	; History:
	; 27-Aug-2012	shobby	SR18069: Language Texts
	; 10-Feb-2005	PO		Created.
	;-------------------------------------------------------------------------------
	new idClass,lstHistory,strAlign,strHTML
	
	set idClass  = $get(^CacheTempView(YUSER,"Class"))
	set strAlign = ""
	if idClass'="" {
	; FIXME : <GRF> GetRelation^COMViewUtils is a function.
		do GetRelation^COMViewUtils(.idClass,.pidField)
		set lstHistory = $$GetHistory(idClass,pidKey,pidField,.strAlign,$$$NO)
 
		do DisplayPopup("<b>"_$$$Text("Com00350")_"</b><br />",$listget(lstHistory,2),"",strAlign,pintX,pintY) ;History for field ;SR18069
	}
	quit
	
	
DisplayPopup(pstrDataBefore="",pstrTableData="",pstrDataAfter="",pstrAlign="left",pintX=0,pintY=0,pintWidth=500)
	;-------------------------------------------------------------------------------
	; Display a popup on the screen
	;
	; History:
	; 17-Aug-2010	shobby	SR17445.1: Changes for firefox to display the popup correctly.
    ; 01-Sep-2008	shobby	SRBR014976: Set the FontFace as per company settings.
	; 10-Feb-2005	PO		SR10965 Created.
	;-------------------------------------------------------------------------------
	new intHeight,strHTML
	
	set intHeight = 200
	set strHTML   = pstrDataBefore
	
	if $length(pstrTableData)>0 {
		set strHTML = strHTML_"<table style='table-layout:fixed;width:100%;'><tr>"
		set strHTML = strHTML_"<td style='word-wrap:break-word;width:100%;text-align:"_pstrAlign_";'>"_pstrTableData_"</td>"
		set strHTML = strHTML_"</tr></table>"
	}
	
	set strHTML = strHTML_pstrDataAfter
	
	set strHTML = "<DIV style='position:absolute;width:100%;overflow-y:scroll;height:100%;'>"_strHTML
	set strHTML = $$Replace^COMUtilStr(strHTML,"|","<br>")
	set strHTML = strHTML_"</DIV>"
	
	write "PopupWindow.document.body.style.border='1px solid orange';"
	write "PopupWindow.document.body.style.height='100%';" //SR17445.1
	write "PopupWindow.document.body.style.overflowY='auto';"
	write "PopupWindow.document.body.style.fontFamily='"_$$FontFace^WWW012()_"';" ;BR014976
	write "PopupWindow.document.body.style.fontSize='12px';"
	write "PopupWindow.document.body.style.color='Navy';"
	write "PopupWindow.document.body.style.backgroundColor=NetBorderColor;"
	write "PopupWindow.document.body.innerHTML='"_$zcvt(strHTML,"o","JS")_"';"
	write "var obj=document.getElementById('desc');" ; <---- SHOULD I BE USING desc element ??
	write "PopupWindow.show(-1000,-1000,"_pintWidth_","_intHeight_",obj);"  ;SR17445
	//SR17445 write "window.setTimeout('PopupWindow.show('+"_pintX_"+','+"_pintY_"+',"_pintWidth_",PopupWindow.document.body.children[0].offsetHeight);',50);"
	write "window.setTimeout('PopupWindow.show('+"_pintX_"+','+"_pintY_"+',"_pintWidth_","_intHeight_");',50);" //SR17445
	;write "showPopup('PopupWindow','"_pintWidth_"','		;SR17445.1
	quit
	
	
GetHistory(pidClass,pidKey,pidField,pstrAlign,blnTruncate=$$$YES)
	;-------------------------------------------------------------------------------
	;
	; History:
	; 27-Aug-2012	shobby	SR18069: Language Texts.
	; 11-Jun-2010	GRF		SR17146: Use specified date format rather than default
	; 05-Sep-2005	JW		SR12966: WWWPRO is not shared.
	; 10-Feb-2005	PO		Created.
	;-------------------------------------------------------------------------------
	new dteDate,dteTimeStamp,idField,strAfter,strBefore,strResult,strUser
	
	set pidClass  = $zstrip(pidClass,"<>W")
	set pidKey    = $zstrip(pidKey,"<>W")
	set pidField  = $zstrip(pidField,"<>W")
	set strResult = ""
	set dteDate   = ""
 
	if $extract(pidField)="D" {
		set idField = $extract(pidField,2,$length(pidField))
		set strUser = ""
		
		set dteTimeStamp = ""
		for {
			set dteTimeStamp = $order(^WWWLAST(YM,pidClass,pidKey,dteTimeStamp))
			quit:dteTimeStamp=""
			
			set strUser = $order(^WWWPRO(YM,pidClass,+dteTimeStamp,$piece(dteTimeStamp,",",2),strUser))
			quit:strUser=""
 
			set strBefore = $piece($get(^WWWPRO(YM,pidClass,+dteTimeStamp,$piece(dteTimeStamp,",",2),strUser,pidKey,0,1)),Y,idField)
			set strAfter  = $piece($get(^WWWPRO(YM,pidClass,+dteTimeStamp,$piece(dteTimeStamp,",",2),strUser,pidKey,1,1)),Y,idField)
			if strBefore'=strAfter {
				set strResult = strResult_"<b> "_$$$Text("Com00345")_"</b> "_strUser_"<br />"  ;Change made by user: ;SR18069
	;			set strResult = strResult_"<b>Change made at:</b> "_$$^WWWTIME(dteTimeStamp)_" on "_$$^WWWDATE(dteTimeStamp,1)_"<br />"  ; SR17146
				set strResult = strResult_"<b>"_$$$Text("Com00346")_"</b> "_$$^WWWTIME(dteTimeStamp)_" on "_$$^WWWDATE(dteTimeStamp)_"<br />" ;Change made at: ;SR18069
				set strResult = strResult_"<b>"_$$$Text("Com00347")_"</b><br />"_$listget($$DisplayValue^COMViewFilter(pidClass,pidField,strBefore,pidKey,.pstrAlign,$$$NO),2)_"<br />"  ;Before ;SR18069
				set strResult = strResult_"<b>"_$$$Text("Com00348")_"</b><br />"_$listget($$DisplayValue^COMViewFilter(pidClass,pidField,strAfter,pidKey,.pstrAlign,$$$NO),2)_"<br />"   ;After  ;SR18069
			}
		}
	}
	if strResult="" { set strResult = "<b>"_$$$Text("Com00349")_"</b>" }  ;;There is no history for this field. ;SR18069
	
	quit $listbuild(0,strResult)
	
	
GetData(pidClass,pidRef,pidField,pstrCellAlign,blnTruncate=$$$YES,pidFieldComplete="",pidForm="",pstrExpandSeparator="")
	;-------------------------------------------------------------------------------
	; Get "related classes" data for a field. ie fields that contains a "C"_class.
	; 
	; Parameters:
	; 			pidFieldComplete	:	The extended identifier of the field
	; 			pidForm				:	The form related to this class.  For Related
	; 									Classes this will be the same as the class.
	; 			pstrExpandSeparator	:	What to use to delineate multiline relationships
	; 
	; History:
	; 12-Feb-2014	shobby	SESDF-943: Correct 'equal' search on related classes.
	; 03-Mar-2010	GRF		-: commented code cleanup
	; 23-Feb-2009	shobby	SR16386:  Added section of code to determine the value
	; 						  of a calculated field on a subclass of the class that
	; 						  is being searched in COMView.
	; 21-Feb-2008	shobby	SRBR014900: pstrExpandSeparator
	; 20-Feb-2008	shobby	BR014900: pidForm, Use a different separator when
	; 							breaking the resultset in to multiple lines.
	; 							Retrieve the relationship filter on this field and
	; 							identify the field with pidFieldComplete.  Reapply
	; 							the filters again to the field if this is a related
	; 							field with multiple values.
	; 19-Feb-2008	shobby	BR014900: Determines whether each part of a multipart
	; 							record match the search criteria.
	; 							Note: Only applies to data fields.
	; 06-Apr-2005 	Paul K	Modified to work with multiple primary keys
	; 08-Feb-2005	PK & PO	SR10965 Created.
	;-------------------------------------------------------------------------------
	new blnCutShort,id,intCount,intMaxDataLen,intMaxRecords,lstValue,KeyLoop
	new objCOMViewConfig,objFilter,objFixedFilter
	new strCompany,strGlobal,strGlobalLoop,strResult,strResultTemp
 
	do GetFilter(pidFieldComplete,.objFilter,.objFixedFilter)
	
	set strCompany = $select($$$WWW001SharedFile($get(^WWW001(0,pidClass,1))):0,1:YM)
	
	set strGlobalLoop = "^"_pidClass_"("_strCompany
	for KeyLoop=1:1:$length(pidRef,",") {
		set strGlobalLoop = strGlobalLoop_","_$$$Add($piece(pidRef,",",KeyLoop))
	}
	set strGlobal     = strGlobalLoop_","
	set strGlobalLoop = strGlobalLoop_")"
 
	set strResult   = ""
	set blnCutShort = $$$NO
	set intCount    = 0
	
	set objCOMViewConfig = $get(^COMViewConfig(0,YM,1))
	
	set intMaxDataLen = $$$COMViewConfigMaxdatalength(objCOMViewConfig)
	set intMaxRecords = $$$COMViewConfigMaxrecords(objCOMViewConfig)
	
	if intMaxDataLen'>0 {
		set intMaxDataLen=100
	}
	if intMaxRecords'>0 {
		set intMaxRecords=5
	}
	if $$ExpandSelection^COMViewConfig() {
		set intMaxRecords = 2000
		set blnTruncate   = $$$NO
	}

	for {
		set strGlobalLoop = $query(@strGlobalLoop)
		quit:$extract(strGlobalLoop,1,$length(strGlobal))'=strGlobal
		
		if strResult'="" {
			if $$ExpandSelection^COMViewConfig() {
				; Use a different separator here as the results may already contain line breaks.
				set strResult = strResult_pstrExpandSeparator
			} else {
				set strResult = strResult_"<br />"
			}
		}
		if $extract(pidField)="P" {
			set intCount = intCount+1
			set lstValue = $$DisplayValue^COMViewFilter(pidClass,pidField,$qsubscript(strGlobalLoop,$extract(pidField,2,99)+1),pidRef,.pstrCellAlign,blnTruncate)
			if blnTruncate &&
			   (($listget(lstValue,1)) || ($length(strResult_$listget(lstValue,2))>intMaxDataLen) || (intCount>intMaxRecords)) {
				
				set strResult   = strResult_"..."
				set blnCutShort = $$$YES
				quit
			}
			set strResult = strResult_$listget(lstValue,2)
		
		} elseif $extract(pidField)="C" {
			new strValue                        ; FIXME
			set strValue = ""
 
			; SR16386 vvvvvv
			set id       = $translate($piece(strGlobalLoop,",",2,$length(strGlobalLoop,",")-1),"""")
			set intCount = intCount+1
			set strValue = $$GetCalculatedValue^COMViewFilter(pidClass,pidField,id,@strGlobalLoop,1)
			
			set lstValue = $$DisplayValue^COMViewFilter(pidClass,pidField,strValue,pidRef,.pstrCellAlign,blnTruncate,,pidForm)
			if (pidFieldComplete'="")                                             &&
			   ($$ExpandSelection^COMViewConfig())                                &&
			   ($data(^CacheTempSQL($$$SQLID,"RelationFilter",pidFieldComplete)))    {
				
				set strResultTemp = $$TestValue($listget(lstValue,2),objFilter)
				if strResultTemp'="####################" set strResultTemp = $$TestValue(strResultTemp,objFixedFilter)
				set strResult = strResult_strResultTemp
			} else {
				set strResult = strResult_$listget(lstValue,2)
			}
			; SR16386 ^^^^^^
	
		} elseif $extract(pidField)="D" {
			new strValue
			
			set strValue=$piece($get(@strGlobalLoop),Y,$extract(pidField,2,99)) ;SESDF-943
			set intCount = intCount+1
			;  with related fields the form of the relation is passed.
			set lstValue = $$DisplayValue^COMViewFilter(pidClass,pidField,$piece($get(@strGlobalLoop),Y,$extract(pidField,2,99)),pidRef,.pstrCellAlign,blnTruncate,,pidForm)
			if blnTruncate &&
			   (($listget(lstValue,1)) || ($length(strResult_$listget(lstValue,2))>intMaxDataLen) || (intCount>intMaxRecords)) {
				set strResult   = strResult_"..."
				set blnCutShort = $$$YES
				quit
			}
			if (pidFieldComplete'="")                                             &&
			   ($$ExpandSelection^COMViewConfig())                                &&
			   ($data(^CacheTempSQL($$$SQLID,"RelationFilter",pidFieldComplete)))    {
				
				;SESDF-943 set strResultTemp = $$TestValue($listget(lstValue,2),objFilter)
				set strResultTemp = $$TestValue(strValue,objFilter) ;SESDF-943
				if strResultTemp'="####################" set strResultTemp = $$TestValue(strResultTemp,objFixedFilter) ;SESDF-943
				set strResult = strResult_strResultTemp
			} else {
				set strResult = strResult_$listget(lstValue,2)
			}
		}
	}
	quit $listbuild(blnCutShort,strResult)
	
	
GetFilter(pidFieldComplete,&pobjFilter,&pobjFixedFilter)
	;-------------------------------------------------------------------------------
	; Gets the in memory filters that have been applied to the 'Headers' and applies
	; also to the 'lines' if we are displaying every line individually.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Feb-2008	shobby	SRBR014900: Created
	;-------------------------------------------------------------------------------
	new idFilter
	
	set pobjFilter      = ""
	set pobjFixedFilter = ""
	
	set idFilter = $get(^CacheTempSQL($$$SQLID,"RelationFilter",pidFieldComplete,"Filter"))
	if idFilter'="" set pobjFilter = $get(^CacheTempView(YUSER,"Filter",idFilter))
	
	set idFilter = $get(^CacheTempSQL($$$SQLID,"RelationFilter",pidFieldComplete,"FixedFilter"))
	if idFilter'="" set pobjFixedFilter = $get(^CacheTempView(YUSER,"FixedFilter",idFilter))
	quit
 
 
TestValue(pstrText,pobjFilter)
	;-------------------------------------------------------------------------------
	; Tests whether the current piece of a multipart cell matches the search criteria.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Feb-2008	shobby	SRBR014900: Created
	;-------------------------------------------------------------------------------
	new strComp,strValue,strText
	
	set strText = pstrText
	if pobjFilter'="" {
		set strComp  = $$$COMViewFilterComparator(pobjFilter)
		set strValue = $$$COMViewFilterValue1(pobjFilter)
		
		if strComp=$$$EnumCOMVIEWCOMPARATORGreaterThan {
			if strText'>strValue set strText = ""
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATORLessThan {
			if strText'<strValue set strText = ""
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATOREquals {
			if strText'=strValue set strText = ""
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATORNotEquals {
			if strText=strValue set strText = ""
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATORStartsWith {
			if $extract(strText,1,$length(strValue))'=strValue set strText = ""
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATORContains {
			if '$find(strText,strValue) set strText = ""
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATORBetween {
			if $extract(strValue)=$$$DBLQUOTE {		// Remove quotes
				set strValue = $extract(strValue,2,$length(strValue)-1)
			}
			if $piece(strValue,"&",1)="" {
				if strText>$piece(strValue,"&",2) set strText = ""
			
			} elseif $piece(strValue,"&",2)="" {
				if strText<$piece(strValue,"&",1) set strText = ""
			
			} elseif (strText'>($piece(strValue,"&",1))) ||
			         (strText'<($piece(strValue,"&",2)))    {
				set strText = ""
			}
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATORWithin {
			;TODO don't know how to do this yet so allow everything the SQL would have excluded 'header'
			;records that fail to meet the criteria... We just aren't removing the 'lines' yet.
		
		} elseif strComp=$$$EnumCOMVIEWCOMPARATORLike {
			;TODO don't know how to do this yet so allow everything the SQL would have excluded 'header'
			;records that fail to meet the criteria... We just aren't removing the 'lines' yet.
		}
		if strText="" set strText = "####################"
	}
	quit strText
	
]]></Routine>
</Export>