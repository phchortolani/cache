<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBankReconUtilities" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBankReconUtilities
 
#include COMSYS 
#include FINConst
#include FINSYS
 
#define FORMNAME	"FINGLBankReconMatched"
 
#include COMGridEdit31Interface
 
Unmatch(pblnFindCache) 
	;-------------------------------------------------------------------------------
	; Unmatch the current row when the U button is pressed
	;
	; Params:
	; pblnFindCache: If this is $$$YES, then this is a FINGLBankReconMatched, not a MatchCache.
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 28-Jun-2006	RPW			SR14461: Use strKey instead of idCache, we need to update
	; 							this value. Also set idManual to " " to stop error message.
	; 19-Mar-2006	RPW			SR14461: Created
	;-------------------------------------------------------------------------------
	new strKey,idBankRecon,idLine,objCache,objParent,idParent,objManual,idManual
	new blnKill,strForm
	
	set strForm=YFORM
	
	new YFORM
	
	set strKey = $$$GRIDGetCurrentYKEY
	set blnKill=$$$NO	
	
	set idBankRecon = $$$KEY1(strKey)
	set idLine = $$$KEY2(strKey)
	set idManual=""
	
	if strForm'="FINGLBankReconCompleted" {
		set YFORM="FINGLBankReconMatchCache"
	} else {
		set YFORM=strForm
	}
	
	if idLine'="" {
		if pblnFindCache {
			set idManual=$$FindManualMatchId^FINGLBankReconManualMatch(idBankRecon,$$$FORMNAME,idLine,.strKey) // SR14461
			set idLine=$$$KEY2(strKey) // SR14461
		}
			
		set objCache = $get(^FINGLBankReconMatchCache(YM,idBankRecon,idLine,1))
		
		if '$$$FINGLBankReconMatchCacheParent(objCache) {
			set idManual = $order(^FINGLBankReconManualMatchs(YM,1,$$$Index($$$MATCHCACHE),$$$Index(strKey),idBankRecon,""))
			if idManual'="" {
				set objManual = $get(^FINGLBankReconManualMatch(YM,idBankRecon,idManual,1))
				
				set idParent = $$$FINGLBankReconManualMatchParent(objManual)
				set objParent = $get(^FINGLBankReconManualMatch(YM,idBankRecon,idParent,1))
				
				set idLine = $$$KEY2($$$FINGLBankReconManualMatchClassId(objParent))
				set objCache = $get(^FINGLBankReconMatchCache(YM,idBankRecon,idLine,1))
			}
		}
		if (idManual'="")||($$$FINGLBankReconMatchCacheParent(objCache)) {
			set idManual=" "  // SR14461
			do UncompleteByType^FINGLBankReconMatchCache($$$FINGLBankReconMatchCacheClassId(objCache),$$$FINGLBankReconMatchCacheClassType(objCache),blnKill) 		
		}
	}
 
 	if idManual'="" {
		write $$$ChangeTabs(4)
 	} else {
	 	$$$Alert("Fin01044")  ;The line selected is unmatched
 	}
	
	quit ""
	
CanUnmatch(pstrYKEY) 
	;-------------------------------------------------------------------------------
	; Whether a line can be unmatched.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Jun-2006	RPW		SR14461: Moved from FINGLBankReconCompleted
	; 06-Mar-2006	JW		SR13305: Created
	;-------------------------------------------------------------------------------
	new idBankRecon,idParent,idCache,objCache
	
	quit $$$OK
	/*
	set idBankRecon = $$$KEY1(pstrYKEY)
	
	// Do not allow unmatching if there already is an incomplete match in process...
	
	set idParent = $$$KEY2($$$GetActiveParent(idBankRecon))	// Manual match id
	if idParent'="" {
		
		set idCache = $$GetCacheId^FINGLBankReconMatchCache(idBankRecon,idParent)
		set objCache = $get(^FINGLBankReconMatchCache(YM,idBankRecon,idCache,1))
		
		if '$$$FINGLBankReconMatchCacheComplete(objCache) && ($$ChildrenCount^FINGLBankReconManualMatch(idBankRecon,idParent)>0) {
			set YQ=$$$YQDisable("Fin01002")  ;Cannot uncomplete, there is an another match in progress (complete or unclear it)
		}
	}
	
	quit
	*/
 
AllBankRecsIncludeBankLines()
	;-------------------------------------------------------------------------------
	; Flag all Bank Reconciliations (FINGLBankRecon) to apparently include bank lines.
	;
	; ** Call by the Upgrade Handler **
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 11-Aug-2006	PO		SR14331: Created
	;-------------------------------------------------------------------------------
	new idCompany,idBankRecon,objGLRecon
 
	quit:$data(^LogUpgradeHandler("BankRecsIncludeBankLines")) $$$OK
 
	set ^LogUpgradeHandler("BankRecsIncludeBankLines") = $horolog
 
	$$$Order1(^FINGLBankRecon,idCompany)
		$$$Order2(^FINGLBankRecon,idCompany,idBankRecon)
			set $$$FINGLBankReconIncludesBankLines(^FINGLBankRecon(idCompany,idBankRecon,1)) = $$$YES
		$$$End
	$$$End
 
	quit $$$OK
]]></Routine>
</Export>