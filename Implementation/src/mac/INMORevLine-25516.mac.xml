<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INMORevLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INMORevLine
	
#include COMGridEdit31
#include COMSYS
#include INConst
#include %occInclude
	
#define FORMFldINMORevLineLot	8
	
OnBeforeFormat(pYFIELDNAME,pYTEXT,pobjLine)
	;-------------------------------------------------------------------------------
	; set Color on fields that fail validation
	;	
	; Called By :
	;	Form - GridEdit:INMORevLine
	;	Routines -
	;		
	; Inputs : 
	;	pYFIELDNAME	-	Browser Element ID "tdY#row#_#col#"
	;	pYTEXT		-	Value currently in element
	;	pYFELD		-	@nM INIssueLine Data record
	;
	; ByRef :
	;
	; Returns : 
	;
	; History :
	; 11-May-2010	PPP		SR16573
	;-------------------------------------------------------------------------------
	new fltQtyIssued,fltQtyRev,fltTotalRev,idBundle,idClassField,idItem,idLineNumber,idRev
	new intRow,intCol,objBundle,objHeader,strBundleValues
	
	//SR16573/1
	; Grid Position
	;---------------------------------------
	$$$GRIDSplitKey(pYFIELDNAME,intRow,intCol)
	set idClassField = $$$GetClassField(YFORM,intCol)
	
	set idBundle     = $$$INMORevLineBundle(pobjLine)
	if (idClassField = $$$FldINMORevLineBundle) {
		if idBundle '= "" { 
		    //Update "Bundle Values" as well as styling
			set objBundle = ##class(alSOH.dBundle).%OpenId(idBundle)
			set strBundleValues = ##class(alSOH.iUSOH).RenderBundle(objBundle,SPRACHE)
			set YTOOLTIP        = idBundle	//objBundleStock.%Id()     ; TODO : use idBundle with $get(^Development)
			do UpdateManualField^COMGridEdit31Interface(intRow,$$$FORMFldINMORevLineLot,strBundleValues) ; YTEXT can't be set here, workaround
			
		} else {
			set YWARNING = $$$YES
			set YTOOLTIP = $$$Text($listbuild("IN01248",intRow))
		} ; "Stock Bundle required on line %1.  Select from Grid below."
	}
	
	set idRev        = $$$KEY1(YKEY)
	set idLineNumber = $$$KEY2(YKEY)
		
	; INIssue Header
	;---------------------------------------
	set objHeader  = $$$GRIDYFELDContainer
	quit:$$$INMORevStatus(objHeader)>0         		; Active
	
	; INMORevLine from Grid
	;---------------------------------------
	set idItem       = $$$INMORevLineItem(pobjLine)
	set idBundle     = $$$INMORevLineBundle(pobjLine)
	set fltQtyIssued = $$$INMORevLineIssuedQuantity(pobjLine)
	set fltQtyRev    = $$$INMORevLineReversedQuantity(pobjLine)
	
	; Qty Issued
	;-----------------------------------
	if (idClassField = $$$FldINMORevLineReversedUnitQuantity) {
		set fltTotalRev = $$GetTotalRev(idLineNumber)+fltQtyRev
		
		if fltTotalRev '= fltQtyIssued  {
			set YWARNING = $$$YES
			set YTOOLTIP = $$$Text($listbuild("IN01253",fltTotalRev,fltQtyIssued,idLineNumber))
		} ; "Total Reversed Qty (%1) must be equal to Issued Quantity (%2) for Line %3"

		if idBundle = "" { 
			set YWARNING = $$$YES
			set YTOOLTIP = $$$Text($listbuild("IN01248",intRow))
		} ; "Stock Bundle required on line %1.  Select from Grid below."
	}
	quit
	
	
OnBlurUnitRevQty(pidRev,&pobjRev)
	;-------------------------------------------------------------------------------
	; Called From: OnBlur of the Unit Reversed Qty INMORevLine
	; 
	; Inputs:
	;	pidRev		Reverse ID
	;	pobjRev		(ByRef) Reverse Line Details
	; 
	; History:
	; 11-May-2010	PPP		SR16573: Created
	;-------------------------------------------------------------------------------
	set $$$INMORevLineReversedQuantity(pobjRev) = $$$INMORevLineReversedUnitQuantity(pobjRev)*$$GetUOMConversion^INUOMConversion($$$INMORevLineItem(pobjRev),$$$INMORevLineUnit(pobjRev))
	
	quit
	
	
GetTotalRev(pidLn)
	;-------------------------------------------------------------------------------
	; Get the Sum of all Reversed quantity for a Line
	;
	; ByRef :
	;
	; Returns : 
	;
	; History :
	; 16-Aug-2010	GRF		SR16573: Correction to Edit Grid variable use & prefix
	; 11-May-2010	PPP		SR16573: Created
	;-------------------------------------------------------------------------------
	new fltQtyRev,idDataLine,idGridRow,objIssueLine
	
	set fltQtyRev   = 0
	set idDataLine = ""
	for {
		set idDataLine = $order($$$WWWDATEN("REFERENCEROW",idDataLine))
		quit:idDataLine=""
		continue:(idDataLine=pidLn)                    //Skip current line
		continue:(idDataLine\1)'=(pidLn\1)
		
		set idGridRow = $get($$$WWWDATEN("REFERENCEROW",idDataLine,1))
		continue:($get($$$WWWDATEN("KILLEDRECORD",idGridRow))=$$$YES)
		
		set objIssueLine = $$GetYFELD^COMGridEdit31G(YFORM,idGridRow)	
		set fltQtyRev    = fltQtyRev + $$$INMORevLineReversedQuantity(objIssueLine)
	}
	quit fltQtyRev
	/*
	new fltQtyRev,idIssueLine,idLn,strIssueLine
	
	set fltQtyRev   = 0
	set idIssueLine = ""
	for {
		set idIssueLine = $order($$$WWWDATEN("REFERENCEROW",idIssueLine))
		quit:(idIssueLine="")
		
		set idLn = $translate(idIssueLine,"x",".")
		continue:(idLn=pidLn)                    //Skip current line
		continue:(idLn\1)'=(pidLn\1)
		continue:($get($$$WWWDATEN("KILLEDRECORD",$get($$$WWWDATEN("REFERENCEROW",idIssueLine,1))))=1)
		
		set strIssueLine = $$$GRIDGetYFELD(idIssueLine)
		set fltQtyRev    = fltQtyRev + $$$INMORevLineReversedQuantity(strIssueLine)
	}
	quit fltQtyRev
	*/
	
OnBeforeSave(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; OnBeforeSave of the INMORevLine
	;
	; 
	; History :
	; 11-May-2010	PPP		SR16573: Created
	;-------------------------------------------------------------------------------
	new fltQtyIssued,fltQtyPlanned,fltTotQtyIssued,idLn,objBundleStock,sc
	new fltTotalRev
	
	set idLn = $$$KEY2(pYKEY)
	
	if $$$INMORevLineBundle(pYFELD)="" {
		set YRETVAL = $$$MakeStatus("IN01226",idLn)
		; "Please select 'Lot' details for Line %1 from the Dynamic Grid below"
	
	} else {
		set fltTotalRev = $$GetTotalRev(idLn)+$$$INMORevLineReversedQuantity(pYFELD)
		
		if fltTotalRev '= $$$INMORevLineIssuedQuantity(pYFELD)  {
			set YRETVAL = $$$MakeStatus("IN01253",fltTotalRev,$$$INMORevLineIssuedQuantity(pYFELD),idLn)
		} ; "Total Reversed Qty (%1) must be equal to Issued Quantity (%2) for Line %3"
	}
	quit
	
	
OnBeforeCopy(pidMORevLine,&pobjMORevLine)
	;-------------------------------------------------------------------------------
	; When a New line is added through Copy remove some properties already set.
	;
	; Params:
	; pidMORevLine -  Rev MO Line Id
	; pobjMORevLine - Rev MO Line record
	;
	; ByRefs: pobjMORevLine
	;
	; Returns: Nothing
	;
	; History:
	; 12-Aug-2010	PPP		SR16573: Created
	;-------------------------------------------------------------------------------
	set $$$INMORevLineBundle(pobjMORevLine)               = ""
	set $$$INMORevLineReversedUnitQuantity(pobjMORevLine) = ""	
	set $$$INMORevLineReversedQuantity(pobjMORevLine)     = ""	
	quit
	
	
OnBeforeDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; This routine makes sure you cant delete the lines created by Sourcing
	; CAN delete copied lines.
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 13-Aug-2010	PPP		SR16573:Created
	;-------------------------------------------------------------------------------
	if pYKEY '[ "." {		
		set Q = $$$QDontDelete_$$$Text("IN00464")
	} ; "Cannot delete a system generated line"
	
	quit
	
]]></Routine>
</Export>