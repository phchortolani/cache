<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARMapaMovMensal" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARMapaMovMensal
	#include INConst
	#include WWWConst
	#include VARConst
	#import VAR.infra.util
	#define MesInicial $$$VARParametroClienteMesSaldoInicialReceb($get(^VARParametroCliente(0,0,1)))
	#define AnoInicial $$$VARParametroClienteAnoSaldoInicialReceb($get(^VARParametroCliente(0,0,1)))
	quit
	
OnAfterSave
	new Local, Grupo, Mes, Ano
	
	kill ^VARTempMapaMovMensal(YM,YBED)
	
	set Local 	= $get(VORG(1))
	set Grupo 	= $get(VORG(2))
	set Mes 	= $get(VORG(3))
	set Ano		= $get(VORG(4))
	
	set $piece(^VARTempMapaMovMensal(YM,YBED,1),Y,1) = Local
	set $piece(^VARTempMapaMovMensal(YM,YBED,1),Y,2) = Grupo
	set $piece(^VARTempMapaMovMensal(YM,YBED,1),Y,3) = Mes
	set $piece(^VARTempMapaMovMensal(YM,YBED,1),Y,4) = Ano
	
	if ((Mes = "")||(Ano = "")){
		$$$Alert("Preencha todos os campos obrigatórios.")
		do GoToForm^COMUtilForm("VARMapaMovMensal","",,,,,)
		quit
	} elseif ($$CheckFechamentoContabil^VAREntradaNotaFiscal(Mes,Ano) = $$$NO){
		$$$Alert("Este relatório está disponível somente para os meses/anos que já foi gerado o fechamento contábil.")
		do GoToForm^COMUtilForm("VARMapaMovMensal","",,,,,)
		quit
	}
	set ^zzGuilherme($zn) = Local_" - "_Grupo_" - "_Mes_" - "_Ano
	do RunReportMapaMovMensal^VARJasperRunReport(Local,Grupo,Mes,Ano)
	
	quit
	
OnBeforeButtonLine(pYFELD)	
	do LoadListaLocaisDeEstoque
	quit
 	
LoadListaLocaisDeEstoque
	new CodLocal, NomeLocal, objLista, objUsuario, perfilUsuario, locaisPermitidos
	
	set objLista = ""
	
	set objUsuario = $get(^WWW013(YM,YBED,1))		
    set perfilUsuario = $$$WWW013UserAccess(objUsuario)
	set locaisPermitidos = $$$WWW013AllowedLocations(objUsuario)
	
 	kill ^COMTempList(YM,YUSER,"VARLocais")
 
	&sql(
		DECLARE CursorLocais CURSOR FOR 
		SELECT Location, LocationName
		INTO :CodLocal, :NomeLocal
		FROM SQLUser.WWW0121
 		WHERE COMPANY = :YM
 		AND StorageLocn = 1
 		ORDER BY to_number(Location) )
 		
	
	&sql(OPEN CursorLocais)
    IF (SQLCODE) {
		QUIT
    }
    
   	FOR { &sql(FETCH CursorLocais)
		QUIT:SQLCODE
		
		; Caso o usuário não seja administrador e o local não esteja na
		; lista de locais permitidos ao usuário, não popula
		if ((perfilUsuario '= 1) &&
			('$find(";"_locaisPermitidos_";", ";"_CodLocal_";"))) {
			continue
		}

		set $piece(objLista, Y, 1) = NomeLocal
		set ^COMTempList(YM,YUSER,"VARLocais",CodLocal,1)=objLista
   	}
 
   	&sql(CLOSE CursorLocais)
 
	quit
	
GetSaldoInicial(pMes,pAno,pGrupoPai="",pLocal="")
	new ValorTotal, DataFinal, FilterLocal, LocalCusto
	set ValorTotal 	= 0
	set DataFinal  	= ""
	set FilterLocal = ""
	
	;------------------------------------------------------------------------------------
	;05-Fev-2015	FC		HEVA-1713 (SEDI)	Alteração para exibir o saldo inicial dos documentos impressos antes da correção
	; Criada nova verificação para correções manuais nos saldos iniciais e finais do
	; mapa de movimentação mensal. 
	;	
	;	^VARMapaSaldoInicial(YM,pMes,pAno)
	;		-Pega o valor do saldo inicial definido previamente nesta global tendo
	;		 o mes e o ano como chaves.
	;
	;	^VARMapaValorOriginal(YM,YBED)
	;		-Se esta global estiver com o valor 1 ($$$YES) será mostrado o valor original
	;		 calculado pela soma das transações do até o periodo definido.
	;------------------------------------------------------------------------------------
	if ((##class(Util).GetNamespace() = "HEVA") && 
		($data(^VARMapaSaldoInicial(YM,pMes,pAno))) 			&& 
		($get(^VARMapaValorOriginal(YM,YBED)) '= $$$YES)) {
			
		quit $get(^VARMapaSaldoInicial(YM,pMes,pAno))
	}
	elseif ((##class(Util).GetNamespace() = "SEDI") &&
		($get(pGrupoPai) '= "") 	&& 
		($data(^VARMapaSaldoInicial(YM,pGrupoPai,pMes,pAno))) 			&& 
		($get(^VARMapaValorOriginal(YM,YBED)) '= $$$YES)) {
			
		quit $get(^VARMapaSaldoInicial(YM,pGrupoPai,pMes,pAno))
	}
	
	if (pLocal'=""){
		if ($get(^WWW0121(0,0,pLocal,1)) '= ""){
			set FilterLocal = pLocal
		}
	}
	
	if ( (pMes '= $$$MesInicial) || (pAno '= $$$AnoInicial) ){
		set DataInicial = "01/"_$$FillChar^VARSQL(pMes, 2, 0)_"/"_pAno
		set DataFinal = $zdate($zdateh($SYSTEM.SQL.DATEADD("dd",-1,$zdateh(DataInicial,4)),3),4)		

		;15/10/2013
		;Como a rotina do custo médio precisa de um local
		;foi definido como Local padrão o 1 para os ambientes do HEVA e AME
		;e para o ambiente SEDI, foi usado o local SEDI
		set LocalCusto = 1
		if ( $piece(##class(Util).GetNamespace(), "-", $length(##class(Util).GetNamespace(), "-")) = "SEDI"){
			 set LocalCusto = "SEDI"
		}
		
		// 2014-09-30	Henrique Dias	HEVA-1606	Alterada a query abaixo para utilizar $$GetEstoqueOnHandAtDateForReport^VARMapaMovMensal
		// 2015-01-30	FC				HEVA-1681	Alteração para utilizar a função GetValorEstoqueOnHandAtDate
		&sql(
			--SELECT	SUM($$GetEstoqueOnHandAtDate^VARReposicao(ItemNumber, :FilterLocal, NULL, NULL, TO_DATE(:DataFinal, 'DD/MM/YYYY')) *
			--SELECT	SUM($$GetEstoqueOnHandAtDateForReport^VARMapaMovMensal(ItemNumber, :FilterLocal, TO_DATE(:DataFinal, 'DD/MM/YYYY')) *
			--$$SQLGetAverageCostAtDate^VARSQL(ItemNumber, :LocalCusto, TO_DATE(:DataFinal, 'DD/MM/YYYY')))
			SELECT	SUM($$GetValorEstoqueOnHandAtDate^VARReposicao(ItemNumber, :FilterLocal, NULL, NULL, TO_DATE(:DataFinal, 'DD/MM/YYYY')))
			INTO	:ValorTotal
			FROM	SQLUser.INART
			WHERE	Company = 0
			AND 	($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(ItemNumber) = 0)
			AND		((:pGrupoPai IS NULL) OR ($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(ItemNumber)) = :pGrupoPai))
		)
		
		quit ValorTotal
	}
	
	quit ValorTotal
	
GetMesAnoInicialFechamento(pMes,pAno)
	new blnPeriodoInicial
	
	set blnPeriodoInicial = $$$NO
	
	if ( (pMes = $$$MesInicial) && (pAno = $$$AnoInicial) ){
		set blnPeriodoInicial = $$$YES
	}
	
	quit blnPeriodoInicial
	
GetReasonCode(pTxnCode)
	$$$VAR

	if ($length(pTxnCode) = 0) quit 0

	quit $$$INADJReasonCode($get(^INADJ(YM, pTxnCode, 1)))
	
GetTipoINADJ(pTxnCode)
	$$$VAR
	
	;1- Doação
	;2- Empréstimo
	
	if ($length(pTxnCode) = 0) quit 0

	quit $$$INADJFREE2($get(^INADJ(YM, pTxnCode, 1)))
	
GetLocalDestinoTransf(pTxnCode)
	new idWWW0121

	$$$VAR

	if ($length(pTxnCode) = 0) quit ""

	set idWWW0121 = $$$INTFRReceivingLocation($get(^INTFR(YM, pTxnCode, 1)))
	if ($length(idWWW0121) = 0) quit ""

	quit idWWW0121
	
GetEstoqueOnHandAtDateForReport(pidItem, pidLocation= "",pDate= "")

	;-------------------------------------------------------------------------------
	; Gets the Transaction Qty based on Transactions for a given Start and End Dates
	; for an Item & Location
	;
	; Returns: Qty - %Float
	;
	; History:
	; 16-Apr-2009	PPP		SR16441: Created
	;-------------------------------------------------------------------------------
 	If pDate="" set pDate = +$horolog
 
	Set fltQty    = 0
	Set returnQty = 0	
	Set pdteStart = ""
    Set pdteStart = +pdteStart  ;SR17698
 
	&SQL(SELECT SUM(QtyMoved) 
		   INTO :fltQty 
		   FROM alSOH.dStockHistory 
		  WHERE Item = :pidItem 
		    AND (Location = :pidLocation  OR :pidLocation is NULL) 
		    AND (DateConfirmed BETWEEN :pdteStart AND :pDate) 
		    AND (NonStock is null or NonStock=0))
		    
	If (SQLCODE = 0)
	{
		Set returnQty = fltQty
	}

	Quit returnQty
	
OnAfterDataFields()
	kill ^CacheTempMapaMovMensalXLS
	quit

ExibeResultados()
	
	new qhnd
	do ##class(Report.VARMapaMovMensal).VARMapaMovMensalExecute(.qhnd,$piece(^VARTempMapaMovMensal(YM,YBED,1),Y,3),$piece(^VARTempMapaMovMensal(YM,YBED,1),Y,4),"","")
	
	new resultRow,AtEnd
	set resultRow=$lb("") 
	set AtEnd=0
	set count = 0
	
	set csscab = "" _
	"<style>"_
	".cab { color:red; }" _
	"</style>"
	
	// Cabeçalho
	set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,$i(count),1) = "<tr class='cab'><td rowspan=2>SALDO ANTERIOR</td><td>ENTRADA</td><td>Devolução</td><td rowspan=2>Doação</td><td rowspan=2>Emprést.</td><td rowspan=2>Ordem Prod.</td><td>Mont. Kit</td><td>E. Item D. Kit</td><td>Nota Fiscal</td><td>Arredonda.</td><td rowspan=2>Atualização de <br/> Estoque</td><td rowspan=2>Inventário</td><td rowspan=2>Transf.</td><td rowspan=2>Prod. Fração</td><td rowspan=2>Saldo Atual</td></tr>"
	set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,$i(count),1) = "<tr class='cab'><td>SAÍDA</td><td>Requisição</td><td>Desm. Kit</td><td>S. Item M. Kit</td><td>NF. Devol.</td><td>NF. Estorno</td></tr>"
	
	set tfltSaldoAnterior	 = 0
	set tfltDevolucao		 = 0
	set tfltRequisicao		 = 0
	set tfltDoacaoEntrada	 = 0
	set tfltDoacaoSaida		 = 0
	set tfltEmprestimoEnt	 = 0
	set tfltEmprestimoSai	 = 0
	set tfltOrdemProdEnt	 = 0
	set tfltOrdemProdSai	 = 0
	set tfltMontagemKit		 = 0
	set tfltDesmontagemKit	 = 0
	set tfltEntradaItemDKit	 = 0
	set tfltSaidaItemMKit	 = 0
	set tfltNFRecebimento    = 0
	set tfltNFDevolucao		 = 0
	set tfltArredondamento	 = 0
	set tfltNFEstorno		 = 0
	set tfltAtualizacaoEstEnt= 0
	set tfltAtualizacaoEstSai= 0
	set tfltInventarioEnt	 = 0
	set tfltInventarioSai	 = 0
	set tfltTransferEnt		 = 0
	set tfltTransferSai		 = 0
	set tfltProdFracaoEnt	 = 0
	set tfltProdFracaoSai	 = 0
	set tfltSaldoAtual 		 = 0
	
	for {
		do ##class(Report.VARMapaMovMensal).VARMapaMovMensalFetch(.qhnd,.resultRow,.AtEnd)
		quit:(AtEnd = 1)
		
		set strGrupo 			= $lg(resultRow,1)
		set strDescGrupo		= $lg(resultRow,2)
		
		set fltSaldoAnterior 	= $lg(resultRow,3)
		
		set fltDevolucao		= $lg(resultRow,4)
		set fltRequisicao		= $lg(resultRow,5)
		
		set fltDoacaoEntrada	= $lg(resultRow,6)
		set fltDoacaoSaida		= $lg(resultRow,7)
		
		set fltEmprestimoEnt	= 0
		set fltEmprestimoSai	= $lg(resultRow,8)
		
		set fltOrdemProdEnt		= 0
		set fltOrdemProdSai		= 0
		
		set fltMontagemKit		= $lg(resultRow,9)
		set fltDesmontagemKit	= $lg(resultRow,10)
		
		set fltEntradaItemDKit	= $lg(resultRow,11)
		set fltSaidaItemMKit	= $lg(resultRow,12)
		
		set fltNFRecebimento    = $lg(resultRow,13)
		set fltNFDevolucao		= 0
				
		set fltArredondamento	= $lg(resultRow,20)
		set fltNFEstorno		= $lg(resultRow,14)
		
		set fltAtualizacaoEstEnt= $lg(resultRow,15)
		set fltAtualizacaoEstSai= 0
		
		set fltInventarioEnt	= $lg(resultRow,16)
		set fltInventarioSai	= $lg(resultRow,17)
		
		set fltTransferEnt		= $lg(resultRow,18)
		set fltTransferSai		= $lg(resultRow,19)
		
		set fltProdFracaoEnt	= 0
		set fltProdFracaoSai	= 0
		
		set fltSaldoAtual 		= $lg(resultRow,21)
		
		set tfltSaldoAnterior 	 = tfltSaldoAnterior		+fltSaldoAnterior
		set tfltDevolucao		 = tfltDevolucao			+fltDevolucao		
		set tfltRequisicao		 = tfltRequisicao			+fltRequisicao		
		set tfltDoacaoEntrada	 = tfltDoacaoEntrada		+fltDoacaoEntrada	
		set tfltDoacaoSaida		 = tfltDoacaoSaida			+fltDoacaoSaida		
		set tfltEmprestimoEnt	 = tfltEmprestimoEnt		+fltEmprestimoEnt	
		set tfltEmprestimoSai	 = tfltEmprestimoSai		+fltEmprestimoSai	
		set tfltOrdemProdEnt	 = tfltOrdemProdEnt			+fltOrdemProdEnt		
		set tfltOrdemProdSai	 = tfltOrdemProdSai			+fltOrdemProdSai		
		set tfltMontagemKit		 = tfltMontagemKit			+fltMontagemKit		
		set tfltDesmontagemKit	 = tfltDesmontagemKit		+fltDesmontagemKit	
		set tfltEntradaItemDKit	 = tfltEntradaItemDKit		+fltEntradaItemDKit	
		set tfltSaidaItemMKit	 = tfltSaidaItemMKit		+fltSaidaItemMKit	
		set tfltNFRecebimento    = tfltNFRecebimento    	+fltNFRecebimento    
		set tfltNFDevolucao		 = tfltNFDevolucao			+fltNFDevolucao		
		set tfltArredondamento	 = tfltArredondamento		+fltArredondamento	
		set tfltNFEstorno		 = tfltNFEstorno			+fltNFEstorno		
		set tfltAtualizacaoEstEnt= tfltAtualizacaoEstEnt	+fltAtualizacaoEstEnt
		set tfltAtualizacaoEstSai= tfltAtualizacaoEstSai	+fltAtualizacaoEstSai
		set tfltInventarioEnt	 = tfltInventarioEnt		+fltInventarioEnt	
		set tfltInventarioSai	 = tfltInventarioSai		+fltInventarioSai	
		set tfltTransferEnt		 = tfltTransferEnt			+fltTransferEnt		
		set tfltTransferSai		 = tfltTransferSai			+fltTransferSai		
		set tfltProdFracaoEnt	 = tfltProdFracaoEnt		+fltProdFracaoEnt	
		set tfltProdFracaoSai	 = tfltProdFracaoSai		+fltProdFracaoSai	
		set tfltSaldoAtual 		 = tfltSaldoAtual 			+fltSaldoAtual
		
		set objExcel1 = "<tr>"
		set objExcel1 = objExcel1 _ "<td rowspan=2>"_fltSaldoAnterior_"</td>"
		set objExcel1 = objExcel1 _ "<td>ENTRADA</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltDevolucao,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltDoacaoEntrada,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltEmprestimoEnt,2)_"</td>"
		
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltOrdemProdEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltMontagemKit,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltEntradaItemDKit,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltNFRecebimento,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltArredondamento,2)_"</td>"
		
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltAtualizacaoEstEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltInventarioEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltTransferEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,fltProdFracaoEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td rowspan=2>"_$$^WWWTR(0,12,fltSaldoAtual,2)_"</td>"
		set objExcel1 = objExcel1 _ "</tr>"
		
		set objExcel2 = "<tr>"
		
		set objExcel2 = objExcel2 _ "<td>SAÍDA</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltRequisicao,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltDoacaoSaida,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltEmprestimoSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltOrdemProdSai,2)_"</td>"
		
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltDesmontagemKit,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltSaidaItemMKit,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltNFDevolucao,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltNFEstorno,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltAtualizacaoEstSai,2)_"</td>"
		
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltInventarioSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltTransferSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,fltProdFracaoSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "</tr>"
		
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,$i(count),1) = "<tr><td colspan=15><strong>Grupo de Estocagem: " _ strGrupo _ " - " _strDescGrupo_"</strong></td></tr>"
		
		set countLin1 = $i(count)
		set countLin2 = $i(count)
		
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,countLin1,1) = objExcel1
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,countLin2,1) = objExcel2
	
	}
	
	if (count > 0) {
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,$i(count),1) = "<tr></tr>"
		// Totais
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,$i(count),1) = "<tr class='cab'><td rowspan=2>SALDO ANTERIOR</td><td>TOTAL</td><td>Devolução</td><td rowspan=2>Doação</td><td rowspan=2>Emprést.</td><td rowspan=2>Ordem Prod.</td><td>Mont. Kit</td><td>E. Item D. Kit</td><td>Nota Fiscal</td><td>Arredonda.</td><td rowspan=2>Atualização de <br/> Estoque</td><td rowspan=2>Inventário</td><td rowspan=2>Transf.</td><td rowspan=2>Prod. Fração</td><td rowspan=2>Saldo Atual</td></tr>"
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,$i(count),1) = "<tr class='cab'><td>GERAL</td><td>Requisição</td><td>Desm. Kit</td><td>S. Item M. Kit</td><td>NF. Devol.</td><td>NF. Estorno</td></tr>"
		
		set objExcel1 = "<tr>"
		set objExcel1 = objExcel1 _ "<td rowspan=2>"_$$^WWWTR(0,12,tfltSaldoAnterior,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>ENTRADA</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltDevolucao,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltDoacaoEntrada,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltEmprestimoEnt,2)_"</td>"
		
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltOrdemProdEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltMontagemKit,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltEntradaItemDKit,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltNFRecebimento,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltArredondamento,2)_"</td>"
		
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltAtualizacaoEstEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltInventarioEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltTransferEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td>"_$$^WWWTR(0,12,tfltProdFracaoEnt,2)_"</td>"
		set objExcel1 = objExcel1 _ "<td rowspan=2>"_$$^WWWTR(0,12,tfltSaldoAtual,2)_"</td>"
		set objExcel1 = objExcel1 _ "</tr>"
		
		set objExcel2 = "<tr>"
		
		set objExcel2 = objExcel2 _ "<td>SAÍDA</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltRequisicao,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltDoacaoSaida,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltEmprestimoSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltOrdemProdSai,2)_"</td>"
		
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltDesmontagemKit,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltSaidaItemMKit,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltNFDevolucao,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltNFEstorno,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltAtualizacaoEstSai,2)_"</td>"
		
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltInventarioSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltTransferSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "<td>"_$$^WWWTR(0,12,tfltProdFracaoSai,2)_"</td>"
		set objExcel2 = objExcel2 _ "</tr>"
		
		set countLin1 = $i(count)
		set countLin2 = $i(count)
		
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,countLin1,1) = objExcel1
		set ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED,countLin2,1) = objExcel2
	
	}
	
	do ##class(Report.VARMapaMovMensal).VARMapaMovMensalClose(qhnd)
	
	quit
	
	// BASIC-12
ExportarExcel()
	
	kill ^CacheTempMapaMovMensalXLS(YM,YUSER,YBED)
	
	do ExibeResultados()
	
	$$$VAR
	if ('$data(^CacheTempMapaMovMensalXLS(YM,YUSER,YBED))) {
		$$$Alert("IN00740")
	}
	else {
		do ExportarExcel^VARExportarExcelMapaMovMensal("CacheTempMapaMovMensalXLS")
	}
	do GoToForm^COMUtilForm("VARMapaMovMensal",1,,,,,)
	quit
	
]]></Routine>
</Export>