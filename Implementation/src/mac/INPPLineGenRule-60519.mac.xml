<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPPLineGenRule" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPPLineGenRule ; Price Plane Line Generate Rule
	
#include INConst
#include COMSYS
	
OnBeforeFormat(pstrYFieldName,pstrText,pobjRuleLine)
	;-------------------------------------------------------------------------------
	; Display field in error with message if data entry is incorrect
	;
	; Params:
	; pstrYFieldName - Current Edit Grid field name
	; pstrText - Current fields content
	; pobjRuleLine - Current Edit Grid record
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 25-Feb-2009	GRF		SR16394: Clarify idClassField rather than idField
	; 24-Jan-2007	JW		SR15280: Multiple calculation removed.
	; 20-Dec-2006	RPW		SR15326: If this is store managed, we must have a location.
	; 07-Dec-2006	PO		SR15280: Created
	;-------------------------------------------------------------------------------
	new enumType,idClassField,idCol,idRow,strFormula
	
	$$$GRIDSplitKey(pstrYFieldName,idRow,idCol) 
	
	set idClassField = $$$GetClassField(YFORM,idCol)
	
	if (idClassField = $$$FldINPPLineGenRuleItem) || (idClassField = $$$FldINPPLineGenRuleItemGroup) {
		if ($$$INPPLineGenRuleItem(pobjRuleLine) '= "") && ($$$INPPLineGenRuleItemGroup(pobjRuleLine) '= "") {
			set YBACKGROUNDCOLOR = YRED
			set YTOOLTIP = $$$Text("IN00572")  ;Item and Item Group must not both be filled out.
		}
		
	} elseif idClassField = $$$FldINPPLineGenRulePricingFormula {
		set strFormula = $$$INPPLineGenRulePricingFormula(pobjRuleLine)		//JW
		if '$$$BracketsMatch(strFormula) {
			set YBACKGROUNDCOLOR = YRED
			set YTOOLTIP = $$$Text("IN00579")  ;Brackets not matching in pricing forumla.
		} elseif '$$$ValidCharsInExpression(strFormula) {
			set YBACKGROUNDCOLOR = YRED
			set YTOOLTIP = $$$Text("IN00580")  ;Invalid characters in pricing formula.
		}
		
	} elseif idClassField = $$$FldINPPLineGenRuleLocation {
		set enumType=$$GetParentPlanType^INUPPLineGenRule()
		
		if enumType=$$$EnumINITEMPRICETYPEStoreManaged {
			if $$$INPPLineGenRuleLocation(pobjRuleLine)="" {
				set YBACKGROUNDCOLOR=YRED
				set YTOOLTIP=$$$Text("IN00599")  ;Location is required for Store Managed Price Plan Generators.
			}
		}
	}
	
	quit
	
	
OnBeforeDisplayCombo(pstrYKEY,pobjLine,pintCol,&parrComboItems)
	;-------------------------------------------------------------------------------
	; Only show the locations as follows:
	; Marketing: Show the same locations as the POS
	; Selling  : Show only the locations that are listed as customers
	; 
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 25-Feb-2009	GRF		SR16394: idxLocn not idLocation
	; 20-Dec-2006	RPW		SR15326: Created
	;-------------------------------------------------------------------------------
	new enumType,idxLocn,loop
	
	kill parrComboItems
	set parrComboItems = "SUCH"
	
	set enumType = $$GetParentPlanType^INUPPLineGenRule()
	
	if enumType=$$$EnumINITEMPRICETYPEMarketingCost {
		// Show only the locations that the POS sees.
		do FillCombo(.parrComboItems)
		
	} elseif enumType=$$$EnumINITEMPRICETYPESellingPrice {
		// Should only show locations attached to a customer.
		
		set idxLocn = ""
		for {
			set idxLocn = $order(^INKUNDEs(YM,31,idxLocn))
			quit:idxLocn=""
			continue:idxLocn=" "
			
			set parrComboItems(idxLocn) = idxLocn      ; FIXME : This will NOT distinguish between locations "ABC" and "abc" etc. <GRF>
		}
		
	} else { ; Only the current location
		set parrComboItems(YLOCATION)=YLOCATION
	}
	
	quit $$$YES
	
	
FillCombo(&parrComboItems)
	;-------------------------------------------------------------------------------
	; Get the list of locations that the POS uses.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Dec-2006	RPW		SR15326: Created
	;-------------------------------------------------------------------------------
	new lstLocn,loop,loopInternal,idLocation,lstLocations
	
	set lstLocations = $$GetOrderedListOfLocations^SALCSTShipFromSearch()
	for loop=1:1:2 {
		set lstLocn = $listget(lstLocations,loop)
		for loopInternal=1:1:$listLength(lstLocn) {
			set idLocation = $listGet(lstLocn,loopInternal)
			continue:idLocation=""		//SR14933 - don't set to space
			
			set parrComboItems(idLocation) = idLocation
		}
	}
	
	quit
	
]]></Routine>
</Export>