<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARManipulacaoMagistralLineScan" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARManipulacaoMagistralLineScan
	#include VARConst
	#include INConst

	;Comment to force recompile
AddScanLine(pidScan)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs: 
	;
	; Returns:
	;
	; History:
	; 28-Aug-2014	SCR			HEVA-1591: Item Check
	; 11-Oct-2013	shobby		HEVA-1148: Created (based on INADJ)
	;-------------------------------------------------------------------------------
	new arrBundle,arrFields,arrItemAttrib,blnItemExists,idBundle,idClass
	new idFromLocn,idItem,idLine,idLot,idMagistral,idStorage,objHeader,objItemAttib
	new objLine,objOldData,sc,strDelim,strOrigItemLot,strStatus
 	
 	set strDelim 		= $$$ScanDelim
 	set strStatus		= $$$OK

	set idItem = ""	
	if $get(YFORM)'="" {
		set idClass			= $$$GetClass(YFORM)
		set objLine			= ""
		set idItem			= $piece(pidScan,strDelim,1)               //SR16773
		set idLot			= $piece(pidScan,strDelim,2)               //SR16773
		set objHeader		= $$$GRIDYFELDContainer
	 	set idFromLocn		= $$$VARManipulacaoMagistralProductionLocation(objHeader)
  		set blnItemExists	= $$$NO
  		
  		set idMagistral		= $$$KEY1($$$GRIDYKEYContainer)
 		set LOCATION		= idFromLocn ; Export Used by validation
 		// For Picking Screens Only
 		// arrBundle(Bundle ID ,Storage ID) = Qty
		if (idLot'="") {
 			set sc = $$GetBundleData^WWW120Scan(idItem,idFromLocn,idLot,.arrBundle,.idBundle,.idStorage)	//SR16510
 		}
 		else {
 			set sc = $$GetBundleForAttData^WWW120Scan(idItem,idFromLocn,pidScan,.arrBundle,.idBundle,.idStorage)
 		}
  
 		if $$$ISERR(sc) set strStatus = $$ISStatusToDLStatus^COMUtilError(sc) quit strStatus    //EARLY EXIT
 		
		if $$$ISOK(strStatus) {
			set strStatus	= $$GridItemOK^VARManipulacaoMagistralLine(idItem)
			if $$$ISERR(strStatus) {
				quit strStatus    //EARLY EXIT
			}
		}


		//Process only if Bundle Exist for the Item/Lot combination and has Qty
		if $get(idBundle)'="" {
 
			//Get the data for the Item if it already exists
			//Need to update arrBundle if lines already exist
			//** INADJLine dont have bundle **
		//	set idLine = $$GetExistingItemRowData(idItem,.idBundle,.idStorage,.arrBundle,.blnItemExists)
			set idLine = $$GetRowLineWithQtyChecks^COMGridEdit31Scan(idItem, 
			                                                         $$$FldVARManipulacaoMagistralLineItem, 
			                                                         $$$FldVARManipulacaoMagistralLineBundle,
			                                                         $$$FldVARManipulacaoMagistralLineStockLocation, 
			                                                         $$$FldVARManipulacaoMagistralLineQuantity, 
			                                                         .idBundle, 
			                                                         .idStorage, 
			                                                         .arrBundle, 
			                                                         .blnItemExists,
			                                                         $$$FldVARManipulacaoMagistralLineLotNumber,
			                                                         idLot)
			
			set (objLine,objOldData) = $$$GRIDGetYFELD(idLine)
			set strOrigItemLot 		 = $$$VARManipulacaoMagistralLineLotNumber(objLine)
			if idLot="" set idLot= ##class(alSOH.iBundle).GetLotNumber(idBundle)
			if ((idLine) && (idLot'="") && (idLot = strOrigItemLot)) {
				set $$$VARManipulacaoMagistralLineQuantity(objLine) = $$$VARManipulacaoMagistralLineQuantity(objLine) + 1
				
				kill arrFields
				//set the array for the fields that are updated
				set arrFields($$$FldVARManipulacaoMagistralLineQuantity)		= $$$VARManipulacaoMagistralLineQuantity(objLine)		//UPDATE
				
				set YLFN = $$$FldVARManipulacaoMagistralLineItem //Avoid error at OnBlur^INADJLine
				
				//Updates the Row and Displayes it (for existing lines)
				//If the row is on another page displays the lines at the top of the grid
				do UpdateRow^COMGridEdit31Scan(YFORM, idLine, .arrFields, objOldData)
	 
			} else {
				if $get(idBundle)'="" {
					;if (blnItemExists = $$$NO) {
						set objItemAttib = ##class(alSOH.iBundle).GetAttributesForBundle(idBundle,.arrItemAttrib)
				
						set $$$VARManipulacaoMagistralLineItem(objLine)     = idItem   
						                          
						set $$$VARManipulacaoMagistralLineQuantity(objLine)   	= 1
						set $$$VARManipulacaoMagistralLineUnit(objLine)        = $$$INARTUnitofMeasure($get(^INART(YM,idItem,1)))
						set $$$VARManipulacaoMagistralLineStockLocation(objLine)  			= idStorage
						
						set $$$VARManipulacaoMagistralLineBrand(objLine)   	    = $get(arrItemAttrib("Brand"))
						;set $$$INADJLineOwner(objLine)			= $get(arrItemAttrib("Owner"))
						;set $$$INADJLineProgram1(objLine)			= $get(arrItemAttrib("Program"))
						set $$$VARManipulacaoMagistralLineExpirationDate(objLine) = ##class(alSOH.iBundle).GetUseByDate(idBundle)
						set $$$VARManipulacaoMagistralLineLotNumber(objLine)      = ##class(alSOH.iBundle).GetLotNumber(idBundle)
						set $$$VARManipulacaoMagistralLineBundle(objLine)      =idBundle
						;set $$$INADJLineReasonCode(objLine)  	= $$GetReasonCode^INADJLine()
						
						$$$GRIDAddLine(objLine)
					;}					
				} else {
					set strStatus = $$$MakeStatus("IN01039")
				}   ; "Cannot Add Lines to Current Record"
			}		
			
		} else {
			set strStatus = $$$MakeStatus("IN01040",idItem,idFromLocn)
		}   ; "Stock Unavailable for Item %1 at Location %2"
 
	}
		
	quit $$$OK
	/***
GetMagistralLine(pidMagistral, pidItem)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs: 
	;
	; Returns:
	;
	; History:
	; 11-Oct-2013	shobby		HEVA-1148: Created
	;-------------------------------------------------------------------------------
 	new idMagistralLine,objMagistralLine

	set idMagistralLine = "" for { set idMagistralLine = $order(^INADJLine(YM,pidMagistral,idMagistralLine)) quit:idMagistralLine=""
		set objMagistralLine = $get(^VARManipulacaoMagistralLine(YM,pidMagistral,idMagistralLine,1))
		if $$$INIssueRevLineItemNo(objMagistralLine) = pidItem quit
	}
	
	quit idINADJLine
	***/
]]></Routine>
</Export>