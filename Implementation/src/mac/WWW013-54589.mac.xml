<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW013" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW013
	#include COMSYS
	#include WWWConst
	#include COMConst
	#define KeyWords(%1) (%1["^WWW013(")||(%1["SET YBER")||(%1["SET YBEDBER")
	#define setREADONLY(%1)      set %TXT(1) = %TXT(1)_"#Y"_YFORM_"D"_%1_"~READ"
	#define setEDITABLE(%1)      set %TXT(1) = %TXT(1)_"#Y"_YFORM_"D"_%1_"~WRITE"
	#define setBACKGROUND(%1,%2) set %TXT(1) = %TXT(1)_"#Y"_YFORM_"D"_%1_"~BACKGROUND~"_%2

OnBeforeSaveHook(&YFELD)
	if ($length($$$WWW013LicenseUserId($get(YFELD))) = 0) {
		set $$$WWW013LicenseUserId(YFELD) = $get(YKEY)
	}

	quit $$$OK
 
Find()
    ;-------------------------------------------------------------------------------
    ; Entry point to find any code that may need to be adjusted to force a user who
    ; has system administrator access to have the permissions even if other permissions
    ; are added.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Aug-2007	shobby		SRBR014321: Created
    ;-------------------------------------------------------------------------------*/
	;
	new idRoutine,idVersion,idLine,strLine,intCount,strVariable
	
	$$$VAR
	set intCount=0
	$$$Order1(^rMAC,idRoutine)
		$$$Order2(^rMAC,idRoutine,idVersion)
			set strVariable=""
			$$$Order3(^rMAC,idRoutine,idVersion,idLine)
				if $extract(idRoutine,1,3)'="idx" {
					set strLine=$get(^rMAC(idRoutine,idVersion,idLine))
					if strLine'["BR014321" {
						if $$FindText(strLine,.strVariable) {
							set intCount=intCount+1
							write !,idRoutine_","_idVersion_","_idLine_$char(8,8,8)_strLine
						}
					}
				}
			$$$End
		$$$End
	$$$End
	write $$$CRLF_$$$CRLF_"Count="_intCount
	quit
	
FindText(pstrLine,&pstrVariable)
    ;-------------------------------------------------------------------------------
    ; Used to support the 'Find' routine to find any code that may need to be adjusted to force a user who
    ; has system administrator access to have the permissions even if other permissions
    ; are added.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Aug-2007	shobby		SRBR014321: Created
    ;-------------------------------------------------------------------------------*/
	;
	new blnInterested
	
	set pstrLine=$piece(pstrLine,";",1)
	set blnInterested=$$$NO
	if $$$KeyWords(pstrLine) set pstrLine=$$FullReplace^COMUtilStr($$$UPPER(pstrLine),"$DATA(^WWW013(")
	if $$$KeyWords(pstrLine) set pstrLine=$$FullReplace^COMUtilStr(pstrLine,"KILL ^WWW013")
	if $$$KeyWords(pstrLine) set pstrLine=$$FullReplace^COMUtilStr(pstrLine,"$ORDER(^WWW013(")
	if $$$KeyWords(pstrLine) set pstrLine=$$FullReplace^COMUtilStr(pstrLine,"$O(^WWW013(")
	
	if $$$KeyWords(pstrLine) {
		set blnInterested=$$$YES
		if pstrLine["^WWW013(" {
			;Actually these checks are more for 'disinterested' ie specific exclusions apply
			set blnInterested=$$CheckForPiece(pstrLine)&&$$CheckForMacro(pstrLine)
		}
	}
	quit blnInterested
	
	
KeyWords(pstrLine)
    ;-------------------------------------------------------------------------------
    ; Used to support the 'Find' routine to find any code that may need to be adjusted to force a user who
    ; has system administrator access to have the permissions even if other permissions
    ; are added.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Aug-2007	shobby		SRBR014321: Created
    ;-------------------------------------------------------------------------------*/
	;
	quit (pstrLine["^WWW013(")||(pstrLine["SET YBER")||(pstrLine["SET YBEDBER")
	
	
CheckForMacro(pstrLine)
    ;-------------------------------------------------------------------------------
    ; Used to support the 'Find' routine to find any code that may need to be adjusted to force a user who
    ; has system administrator access to have the permissions even if other permissions
    ; are added.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Aug-2007	shobby		SRBR014321: Created
    ;-------------------------------------------------------------------------------*/
	;
	new strMacro,intChar,strTrigger
	
	;if idRoutine="WWWWVMAIL" if idLine=50 break
	set blnInterested=$$$YES
	set intChar=$find(pstrLine,"^WWW013(")
	set pstrLine=$extract(pstrLine,1,intChar-1)
	
	for strTrigger="=",":" {	
		if pstrLine[strTrigger {
			; Exclude where macros are used but it isn't WWWUserAccess
			set strMacro=$zstrip($piece(pstrLine,strTrigger,$length(pstrLine,strTrigger),$length(pstrLine,strTrigger)),"*W")
			if $extract(strMacro,1,9)="$$$WWW013" {
				if $extract(strMacro,19)'="USERACCESS" {
					set blnInterested=$$$NO
					quit
				}
			}
		}
	}
	quit blnInterested
 
 
CheckForPiece(pstrLine)
    ;-------------------------------------------------------------------------------
    ; Used to support the 'Find' routine to find any code that may need to be adjusted to force a user who
    ; has system administrator access to have the permissions even if other permissions
    ; are added.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Aug-2007	shobby		SRBR014321: Created
    ;-------------------------------------------------------------------------------*/
	;
	new blnInterested
	
	set blnInterested=$$$YES
	if ($$$UPPER(pstrLine)["$P") {
		if '(pstrLine[",Y,3)") {
			set blnInterested=$$$NO
		}
	}
	quit blnInterested
	
CreateUser(&parrResponse,pidUser, pstrName, pstrPassword, pidHomeLocation, plstAllowedLocations, pstrEmail="", pstrAccess )
    ;-------------------------------------------------------------------------------
    ; Create a @NM User ( Called from webserver)
    ; Params:
    ; parrResponse	= Response 
	; pidUser		= User Id (No spaces, Upper case, must be unique)
	; pstrName		= User Name
	; pstrPassword	= Password
	; pidHomeLoc 	= Default Location
	; plstAllowedLoc = List of Locations (Comma Delimeted)
	; pstrEmail		= Email
	; pstrAccess 	= User Access
    ; Returns: Status
    ;
    ; History:
    ; 28-Jun-2011	SCR		SR17809: Created
    ;-------------------------------------------------------------------------------*/
	;
	new strStatus,ojbUser
	
	set strStatus=$$$OK
	 
	set plstAllowedLocations=$translate(plstAllowedLocations,",",";")
	set parrResponse="" ; Default Response
	
	set pidUser = $zcvt(pidUser,"u")
	set ojbUser = ""
	set $$$WWW013Name(ojbUser) 				= pstrName
	set $$$WWW013Password1(ojbUser)			= pstrPassword
	set $$$WWW013HomeLocation(ojbUser)		= pidHomeLocation
	set $$$WWW013AllowedLocations(ojbUser)	= plstAllowedLocations
	set $$$WWW013EMailAddress(ojbUser)		= pstrEmail
	set $$$WWW013UserAccess(ojbUser)		= pstrAccess
	set pidUser = $zcvt(pidUser,"U")
	if (strStatus=$$$OK) {
		set strStatus=$$$Save("WWW013",pidUser,ojbUser,$$$YES)
	}
	quit strStatus

MenuType()
	;-------------------------------------------------------------------------
	; History
	; 15-Jul-2014	shobby	HEVA-1565 : Created
	;-------------------------------------------------------------------------
	new idMenu
	
	set idMenu = ""
	
	if $get(YBED)'="" set idMenu = $$$WWW013MenuType($get(^WWW013(0,YBED,1)))
	if idMenu=""   	  set idMenu = $$$WWW012MenuType($get(^WWW012(0,0,1)))
	quit idMenu

]]></Routine>
</Export>