<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESPainelPDPASProduto" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESPainelPDPASProduto
#include COMSYS
#include VARSESConst
#include VARSESPainelAbastecimento
 
getSeriesEvolucaoProduto(pProduto,pAno,pidUnidade)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Retorna a série no formato [n1,n2,n3] para um ano.
    ;
    ; Chamado por:
    ;	VARSESPainelPDPASProduto.csp
    ; 
    ; Histórico:
    ; 	07-Ago-2013		Criado
    ;-------------------------------------------------------------------------------
	quit:( (pProduto = "") || (pAno = "") ) ""
 
	new strSeries, strCompetencia, mes, mesRef, competencia, valorMensal
 
	set strSeries = ""	
	set strCompetencia = ""
    
    for mes = 1:1:12 {
	    
	    //Formatando 01, 02, 03 ao invés de 1, 2, 3.
	 	if (mes < 10) {
		 	set mesRef = "0"_mes
	 	} else {
		 	set mesRef = mes	
	 	}
	 	
	 	set competencia = pAno_mesRef
	 	set valorMensal = $$getValorMensal^VARDWPDPAS(competencia,pProduto,pidUnidade)	 	
 			
		if (strSeries = "") {
			set strSeries = "["_valorMensal
		} else {
			set strSeries = strSeries_","_valorMensal
		}
		
		set competencia = $$RetornaMesCompetencia^VARSESPainelPDPASUtils($extract(competencia,5,6),$$$YES)
		if (strCompetencia = "") {			
			set strCompetencia = "['"_competencia_"'"
		} else {
			set strCompetencia = strCompetencia_",'"_competencia_"'"
		}
		
    }
    
	set strSeries = strSeries_"]"
	set strCompetencia = strCompetencia_"]"
	
	quit strSeries_"||"_strCompetencia
	
getSeriesParticipProduto(pidProduto,pPeriodo)
	quit:( (pidProduto = "") || (pPeriodo = "") ) ""
	
	new count, meuSQL, rsSQL, quantTotal, valorTotal, bkgColor, totalGeral, UoM,
		idUnidade, descUnidade, strSeries, strDescLocal, strSaldo, saldoRemanescente,
		strPie, strListUnidades, strUnidadesFaltantes, idUnidFaltante, descUnidadeFaltante,
		siglaUnidadeFaltante, strIdUnidade
	
	set count = 0
	set totalGeral = 0
 	
 	set strListUnidades = ""
 	set strUnidadesFaltantes = ""
 	
 	set strSeries = ""
 	
 	set strDescLocal = ""
 	set strSaldo  	 = ""
 	set strPie	  	 = ""
 	set strIdUnidade = ""
 
 	set meuSQL = "SELECT UnidadeSaude,"
	set meuSQL = meuSQL_" SUM(QuantTotal) as Quantidade, "
	set meuSQL = meuSQL_" SUM(ValorTotal) as ValorTotal"
	set meuSQL = meuSQL_" FROM VARDWPDPAS"
	set meuSQL = meuSQL_" WHERE Produto = "_pidProduto
	set meuSQL = meuSQL_" AND $$ExtractAnoFromCompetencia^VARSESPainelPDPASUtils(Competencia) = "_pPeriodo
	set meuSQL = meuSQL_" GROUP BY UnidadeSaude"
	set meuSQL = meuSQL_" ORDER BY ValorTotal desc"
	
	set rsSQL = ##class(%ResultSet).%New()  ;Create Result Set Object
	do rsSQL.Prepare(meuSQL) ;Prepare Query
	do rsSQL.Execute()  	 ;Execute Query 	 
 	
	while (rsSQL.Next()) {		
		set idUnidade   = rsSQL.GetData(1)
		set quantTotal  = rsSQL.GetData(2)
		set valorTotal  = rsSQL.GetData(3)
		
		if (strListUnidades = "") {
			set strListUnidades = ";"_idUnidade
		} else {
			set strListUnidades = strListUnidades_";"_idUnidade
		}		
		
		set descUnidade = $piece($get(^VARSESUNI(0,idUnidade,1)),Y,1)		
		set siglaUnidade = $piece(descUnidade," - ",1)
		
		set saldoRemanescente = 8000 - valorTotal
		
		if (strPie = "") {
			set strPie = "{ name: '"_siglaUnidade_"', y: "_valorTotal_", sliced: true, selected: true}"
		} else {
			set strPie = strPie_",['"_siglaUnidade_"', "_valorTotal_"]"
		}
		
		if (strSeries = "") {			
			set strSeries = "["_valorTotal_""
		} else {
			set strSeries = strSeries_","_valorTotal
		}	
 
		if (strDescLocal = "") {			
			set strDescLocal = "['"_siglaUnidade_"'"
		} else {
			set strDescLocal = strDescLocal_",'"_siglaUnidade_"'"
		}		
		
		if (strSaldo = "") {
			set strSaldo = "["_saldoRemanescente
		} else {
			set strSaldo = strSaldo_","_saldoRemanescente
		}
		
		if (strIdUnidade = "") {
			set strIdUnidade = "["_idUnidade
		} else {
			set strIdUnidade = strIdUnidade_","_idUnidade
		}				
	}
 	
	do rsSQL.Close()
 
  	set strUnidadesFaltantes = $$GetUnidadesFaltantes^VARSESPainelPDPASUtils(strListUnidades_";") 	
 
	if (strUnidadesFaltantes '= "") {		
		for cnt = 1:1:$length(strUnidadesFaltantes,";") {      	
    		set idUnidFaltante = $piece(strUnidadesFaltantes,";",cnt)
    		continue:(idUnidFaltante = "")
    		
			set descUnidadeFaltante = $piece($get(^VARSESUNI(0,idUnidFaltante,1)),Y,1)		
			set siglaUnidadeFaltante = $piece(descUnidadeFaltante," - ",1)
	
			if (strSeries = "") {
				set strSeries = "[0"
			} else {
				set strSeries = strSeries_",0"
			}
	
			if (strDescLocal = ""){			
				set strDescLocal = "['"_siglaUnidadeFaltante_"'"
			} else {
				set strDescLocal = strDescLocal_",'"_siglaUnidadeFaltante_"'"
			}		
		
			if (strSaldo = "") {
				set strSaldo = "[8000"
			} else {
				set strSaldo = strSaldo_",8000"
			}
			
			if (strIdUnidade = "") {
				set strIdUnidade = "["_idUnidFaltante
			} else {
				set strIdUnidade = strIdUnidade_","_idUnidFaltante
			}			
		}
	}
 	
	set strSeries    = strSeries_"]"
	set strDescLocal = strDescLocal_"]"
	set strSaldo     = strSaldo_"]"
	set strIdUnidade = strIdUnidade_"]"
 
	quit strSeries_"||"_strDescLocal_"||"_strSaldo_"||"_strPie_"||"_strIdUnidade
 
PrintSaldoProduto(pstrSeries,pPeriodo,pidProduto)
	quit:( (pstrSeries = "") || (pPeriodo = "") )
	
	new strUnidades, strValorGasto, strSaldoDisp, cnt, idUnidadeSaude
	
	set strUnidades = $piece(pstrSeries,"||",5)
	set strUnidades = $$Replace^COMUtilStr(strUnidades,"[","")
	set strUnidades = $$Replace^COMUtilStr(strUnidades,"]","")
	
	set strValorGasto = $piece(pstrSeries,"||",1)
	set strValorGasto = $$Replace^COMUtilStr(strValorGasto,"[","")
	set strValorGasto = $$Replace^COMUtilStr(strValorGasto,"]","")
	
	set strSaldoDisp = $piece(pstrSeries,"||",3)
	set strSaldoDisp = $$Replace^COMUtilStr(strSaldoDisp,"[","")
	set strSaldoDisp = $$Replace^COMUtilStr(strSaldoDisp,"]","")		
	
	write "<table cellspacing='1' style='width:899px'>"
	write "	<tr style='background-color:#2c6c7f;color:white'>"
	write "		<th>#</th>"
	write " 	<th>Código</th>"
	write "		<th>Unidade de Saúde</th>"
	write "		<th>Valor Gasto</th>"
	write "		<th>%</th>"		
	write "		<th>Saldo Disponível</th>"
	write "		<th>%</th>"
	write "	</tr>"
	
	for cnt = 1:1:$length(strUnidades,",") {
    	set idUnidadeSaude = $piece(strUnidades,",",cnt)
    	continue:(idUnidadeSaude = "")
 
	  	if (cnt#2=0) set bkgColor = "#F0F0F0"
	  	if (cnt#2=1) set bkgColor = "#E0E0E0"
    	    	
		//Para poder usar a função WWWTR		
		set:($get(SPRACHE) = "") SPRACHE = "PT"
		set:($get(YBED) = "") YBED = "UNKNOWN"
		//
		
		write "	<tr style='background-color:"_bkgColor_"'>"
    	write " 	<td>"_cnt_"</td>"
    	write " 	<td><a class='link' href='VARSESPainelPDPASProduto.csp?fProduto="_pidProduto_"&fUnidade="_idUnidadeSaude_"'>"_idUnidadeSaude_"</a></td>"
    	write "		<td><a class='link' href='VARSESPainelPDPASProduto.csp?fProduto="_pidProduto_"&fUnidade="_idUnidadeSaude_"'>"_$piece($get(^VARSESUNI(0,idUnidadeSaude,1)),Y,1)_"</a></td>"
    	write "		<td nowrap='nowrap' style='text-align:right'>"_$$FormatCurrency^COMTable($piece(strValorGasto,",",cnt))_"</td>"
    	write "		<td nowrap='nowrap' style='text-align:right'>"_$$^WWWTR(0,8,(($piece(strValorGasto,",",cnt)/8000)*100))_"%</td>"
    	write "		<td nowrap='nowrap' style='text-align:right'>"_$$FormatCurrency^COMTable($piece(strSaldoDisp,",",cnt))_"</td>"
     	write "		<td nowrap='nowrap' style='text-align:right'>"_$$^WWWTR(0,8,(($piece(strSaldoDisp,",",cnt)/8000)*100))_"%</td>"
   	write "	</tr>"
	}
	
	write "</table>"	
	
	quit
 
PrintEvolucaoSerie(pAnoAtual,pAnoAnter,pAnoAnter2,pSerieAnoAtual,pSerieAnoAnter,pSerieAnoAnter2,pTipo)
	new strAnoAtual, strAnoAnter, totalAnoAtual, totalAnoAnter
		
	set strAnoAtual  = $$Replace^COMUtilStr($piece(pSerieAnoAtual,"||",1),"[","")
	set strAnoAtual  = $$Replace^COMUtilStr($piece(strAnoAtual,"||",1),"]","")
	set strAnoAnter  = $$Replace^COMUtilStr($piece(pSerieAnoAnter,"||",1),"[","")
	set strAnoAnter  = $$Replace^COMUtilStr($piece(strAnoAnter,"||",1),"]","")
	set strAnoAnter2 = $$Replace^COMUtilStr($piece(pSerieAnoAnter2,"||",1),"[","")
	set strAnoAnter2 = $$Replace^COMUtilStr($piece(strAnoAnter2,"||",1),"]","")	
	
	set totalAnoAtual  = $$GetTotalSerie^VARSESPainelPDPASUtils(strAnoAtual)
	set totalAnoAnter  = $$GetTotalSerie^VARSESPainelPDPASUtils(strAnoAnter)
	set totalAnoAnter2 = $$GetTotalSerie^VARSESPainelPDPASUtils(strAnoAnter2)
	
	if (pTipo = "rede") {
		set fontSize = 11
	} else {
		set fontSize = 12
	}
	
	write "<table cellspacing='1' style='width:899px;margin-left:2px;font-size:"_fontSize_"px'>"
	write "	<tr style='background-color:#2c6c7f;color:white'>"
	write "		<th>Ano</th>"
	write " 	<th>Jan</th>"
	write "		<th>Fev</th>"
	write "		<th>Mar</th>"
	write "		<th>Abr</th>"
	write "		<th>Mai</th>"
	write "		<th>Jun</th>"
	write "		<th>Jul</th>"
	write "		<th>Ago</th>"
	write "		<th>Set</th>"
	write "		<th>Out</th>"
	write "		<th>Nov</th>"
	write "		<th>Dez</th>"
	write "		<th>Total</th>"
	write "	</tr>"
	
	write "	<tr style='background-color:#E0E0E0'>"
	write "		<td style='text-align:center'><strong>"_pAnoAtual_"</strong></td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,1,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,2,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,3,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,4,pTipo)_"</td>"	
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,5,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,6,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,7,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,8,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,9,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,10,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,11,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAtual,12,pTipo)_"</td>"
	
	//Totalizador
	if pTipo = "rede" {
		write "	<td style='text-align:right;font-weight:bold'>R$ "_$$^WWWTR(0,12,totalAnoAtual,0)_"</td>"
	} else {	
		write "	<td style='text-align:right;font-weight:bold'>"_$$FormatCurrency^COMTable(totalAnoAtual)_"</td>"
	}	
	write "	</tr>"
	
	write "	<tr style='background-color:#F0F0F0'>"
	write "		<td style='text-align:center'><strong>"_pAnoAnter_"</strong></td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,1,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,2,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,3,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,4,pTipo)_"</td>"	
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,5,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,6,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,7,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,8,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,9,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,10,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,11,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter,12,pTipo)_"</td>"
	
	//Totalizador
	if (pTipo = "rede") {
		write "	<td style='text-align:right;font-weight:bold'>R$ "_$$^WWWTR(0,12,totalAnoAnter,0)_"</td>"
	} else {
		write "	<td style='text-align:right;font-weight:bold'>"_$$FormatCurrency^COMTable(totalAnoAnter)_"</td>"		
	}
	
	write "	</tr>"	

	write "	<tr style='background-color:#F0F0F0'>"
	write "		<td style='text-align:center'><strong>"_pAnoAnter2_"</strong></td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,1,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,2,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,3,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,4,pTipo)_"</td>"	
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,5,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,6,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,7,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,8,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,9,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,10,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,11,pTipo)_"</td>"
	write "		<td style='text-align:right'>"_$$GetFormattedValueFromSerie^VARSESPainelPDPASUtils(strAnoAnter2,12,pTipo)_"</td>"
	
	//Totalizador
	if (pTipo = "rede") {
		write "	<td style='text-align:right;font-weight:bold'>R$ "_$$^WWWTR(0,12,totalAnoAnter2,0)_"</td>"
	} else {
		write "	<td style='text-align:right;font-weight:bold'>"_$$FormatCurrency^COMTable(totalAnoAnter2)_"</td>"		
	}
	
	write "</table>"
	
	quit
 
PrintComprasProduto(pidProduto,pPeriodo)
	quit:( (pidProduto = "") || (pPeriodo = "") )
	
	new count, meuSQL, rsSQL, quantTotal, valorTotal, bkgColor, totalGeral, UoM, idUnidade,
		totalGeralQuant, totalGeralValor
	
	set totalGeralQuant = 0	
	set totalGeralValor = 0
	
	set count = 0
	set UoM   = $$SQLGetUnitMeasure^VARSQL(pidProduto)
	
	set meuSQL = "SELECT UnidadeSaude,"
	set meuSQL = meuSQL_" SUM(QuantTotal) as Quantidade, "
	set meuSQL = meuSQL_" SUM(ValorTotal) as ValorTotal"
	set meuSQL = meuSQL_" FROM VARDWPDPAS"
	set meuSQL = meuSQL_" WHERE Produto = "_pidProduto
	set meuSQL = meuSQL_" AND $$ExtractAnoFromCompetencia^VARSESPainelPDPASUtils(Competencia) = "_pPeriodo
	set meuSQL = meuSQL_" GROUP BY UnidadeSaude"
	set meuSQL = meuSQL_" ORDER BY ValorTotal desc"
	
	write "<table cellspacing='1' style='width:899px'>"
	write "	<tr style='background-color:#2c6c7f;color:white'>"
	write "		<th>#</th>"
	write " 	<th>Código</th>"
	write "		<th>Unidade de Saúde</th>"
	write "		<th>Quantidade</th>"
	write "		<th>UN</th>"
	write "		<th>Valor Total</th>"
	write "	</tr>"
	
	set rsSQL = ##class(%ResultSet).%New()  ;Create Result Set Object
	do rsSQL.Prepare(meuSQL) ;Prepare Query
	do rsSQL.Execute()  	 ;Execute Query 	 
 	
	while (rsSQL.Next()) {		
		set idUnidade   = rsSQL.GetData(1)
		set quantTotal  = rsSQL.GetData(2)
		set valorTotal  = rsSQL.GetData(3)
		
		set totalGeralQuant = totalGeralQuant + quantTotal
		set totalGeralValor = totalGeralValor + valorTotal
		
		set descUnidade = ""		
		
		set count = $increment(count)
		
	  	if (count#2=0) set bkgColor = "#F0F0F0"
	  	if (count#2=1) set bkgColor = "#E0E0E0"
 
		//Para poder usar a função WWWTR		
		set:($get(SPRACHE) = "") SPRACHE = "PT"
		set:($get(YBED) = "") YBED = "UNKNOWN"
		//
		
		write "	<tr style='background-color:"_bkgColor_"'>"
		write " <td>"_count_"</td>"		
		write " <td><a class='link' href='VARSESPainelPDPASProduto.csp?fProduto="_pidProduto_"&fUnidade="_idUnidade_"'>"_idUnidade_"</a></td>"	
		write " <td><a class='link' href='VARSESPainelPDPASProduto.csp?fProduto="_pidProduto_"&fUnidade="_idUnidade_"'>"_$piece($get(^VARSESUNI(0,idUnidade,1)),Y,1)_"</a></td>"
		write " <td style='text-align:right'>"_$$^WWWTR(0,12,quantTotal)_"</td>"
		write " <td style='text-align:center'>"_$$SQLGetSiglaUnit^VARSQL(UoM)_"</td>"
		write " <td nowrap='nowrap' style='text-align:right'>"_$$FormatCurrency^COMTable(valorTotal)_"</td>"		
		write "</tr>"	
		
	}			
 
	if (count = 0) {
		write "<tr style='background-color:white'>"
		write "	<td colspan='6'>Nenhum registro encontrado.</td>"
		write "</tr>"	
	} else {
		write "<tr style='background-color:lightsteelblue'>"
		write "	<td colspan='3' style='text-align:right'><strong>Total Geral&nbsp;</strong></td>"
		write "	<td nowrap='nowrap' style='text-align:right'><strong>"_$$^WWWTR(0,12,totalGeralQuant)_"</strong></td>"
		write " <td style='text-align:center'>"_$$SQLGetSiglaUnit^VARSQL(UoM)_"</td>"
		write "	<td nowrap='nowrap' style='text-align:right'><strong>"_$$FormatCurrency^COMTable(totalGeralValor)_"</strong></td>"
		write "</tr>"
	}
	
	write "</table>"
	do rsSQL.Close()
	
	quit
	
getSeriesPrecoProduto(pidProduto,pPeriodo,pidUnidade="")
	quit:( (pidProduto = "") || (pPeriodo = "") ) ""
	
	new dteInicial, dteFinal, strScatter, strTableData, lastUnidade, countPrecos, totalPrecos,
		maiorPreco, menorPreco, strScatter
	
	set dteInicial = "01/01/"_pPeriodo
	set dteFinal   = "31/12/"_pPeriodo
	
	set dteInicial = $zdateh(dteInicial,4)
	set dteFinal   = $zdateh(dteFinal,4)
	
	set strScatter 	 = ""
	set strScatter2	 = ""
	set strTableData = ""
	
	set meuSQL = "SELECT $$getUnidadeSaudeLocal^VARSESWWW0121(Compra.LocaldeCompra),"
	set meuSQL = meuSQL_" Proposta.PrecoUnitario,"
	set meuSQL = meuSQL_" Proposta.QuantidadeOfertada,"
	set meuSQL = meuSQL_" $piece(Compra.CriadoEm,',',1)"
	set meuSQL = meuSQL_" FROM VARSESCOMPRASPropostaLinha Proposta"
	set meuSQL = meuSQL_" INNER JOIN VARSESCOMPRAS Compra on Compra.NoProcessoCompra = Proposta.NoProcessodeCompra"
	set meuSQL = meuSQL_" WHERE UPPER(Proposta.Resultado) = 1"
	set meuSQL = meuSQL_" AND Compra.Modalidade = '10'"
	set meuSQL = meuSQL_" AND Proposta.Produto = "_pidProduto
 
	if (pidUnidade '= "") {
		set meuSQL = meuSQL_" AND $$getUnidadeSaudeLocal^VARSESWWW0121(Compra.LocaldeCompra) = "_pidUnidade
	}
	
	if (dteInicial '= "") {
		set meuSQL = meuSQL_" AND $piece(Compra.CriadoEm,',',1) >= "_dteInicial
	}
	
	if (dteFinal '= "") {
		set meuSQL = meuSQL_" AND $piece(Compra.CriadoEm,',',1) <= "_dteFinal
	}
	
	set rsSQL = ##class(%ResultSet).%New()  ;Create Result Set Object
	do rsSQL.Prepare(meuSQL) ;Prepare Query
	do rsSQL.Execute()  	 ;Execute Query
	
	set lastUnidade = ""
	set countPrecos = 0
	set totalPrecos = 0
	set totalQuant  = 0
	set maiorPreco  = 0 
	set menorPreco  = 0
	
	while (rsSQL.Next()) {		
		set idUnidade     = rsSQL.GetData(1)
		set precoUnitario = +rsSQL.GetData(2)
		set Quantidade    = +rsSQL.GetData(3)
		set dteCompra     = rsSQL.GetData(4)
		
		set tickAno = $extract($zdate(dteCompra,8),1,4)
		set tickMes = $extract($zdate(dteCompra,8),5,6) - 1 //Months in Date.UTC() are indexed from 0, not 1
		set tickDia = $extract($zdate(dteCompra,8),7,8)
 
		set descUnidade = $piece($get(^VARSESUNI(0,idUnidade,1)),Y,1)		
		set siglaUnidade = $piece(descUnidade," - ",1)
		
		set countPrecos = $increment(countPrecos)
		set totalPrecos = totalPrecos + (precoUnitario * Quantidade)
		set totalQuant  = totalQuant + Quantidade
		
		//Maior e menor Preço
		if (precoUnitario > maiorPreco) {
			set maiorPreco = precoUnitario
		}
		
		if (menorPreco = 0) {
			set menorPreco = precoUnitario
		} elseif (precoUnitario < menorPreco) {
			set menorPreco = precoUnitario	
		}
		
		// strScatter
		if (idUnidade '= lastUnidade) {			
			if (strScatter = "") {
				set strScatter = "{ name: '"_siglaUnidade_"', data:["
			} else { 
				set strScatter = strScatter_"]}, { name: '"_siglaUnidade_"', data:["
			}		
			set strScatter = strScatter_"["_Quantidade_", "_$$Round^COMUtilNum(precoUnitario)_"]"		
		} else {		
			set strScatter = strScatter_",["_Quantidade_", "_$$Round^COMUtilNum(precoUnitario)_"]"
		}
		
		// strScatter2
		if (idUnidade '= lastUnidade) {
			if (strScatter2 = "") {
				set strScatter2 = "{ name: '"_siglaUnidade_"', data:["
			} else { 
				set strScatter2 = strScatter2_"]}, { name: '"_siglaUnidade_"', data:["
			}		
			set strScatter2 = strScatter2_"[Date.UTC("_tickAno_", "_tickMes_", "_tickDia_"), "_$$Round^COMUtilNum(precoUnitario)_"]"
		} else {		
			set strScatter2 = strScatter2_",[Date.UTC("_tickAno_", "_tickMes_", "_tickDia_"), "_$$Round^COMUtilNum(precoUnitario)_"]"
		}	
		
		set lastUnidade = idUnidade
 
		//strs for Tables	
		if (strTableData = ""){			
			set strTableData = idUnidade_","_precoUnitario_","_Quantidade_","_dteCompra
		} else {
			set strTableData = strTableData_";"_idUnidade_","_precoUnitario_","_Quantidade_","_dteCompra
		}		
	}
	
	set strScatter = strScatter_"]}"
	set strScatter2 = strScatter2_"]}"
	
	do rsSQL.Close()
	
	set precoMedio  = totalPrecos / totalQuant
	set strConsolid = countPrecos_","_precoMedio_","_maiorPreco_","_menorPreco
 
	quit strScatter_"||"_strTableData_"||"_strConsolid_"||"_strScatter2
	
PrintResumoPrecoProduto(pidProduto,pSerie)
	quit:((pidProduto = "") || (pSerie = "") )
	
	new dataTableSerie, cnt, lineData, idUnidade, precoUnit, quantCompra, dteCompra,
		bkgColor, UoM
	
	set dataTableSerie = $piece(pSerie,"||",2)
	set UoM = $$SQLGetUnitPerItem^VARSQL(pidProduto)
 
	write "<table cellspacing='1' style='width:899px'>"
	write "	<tr style='background-color:#2c6c7f;color:white'>"
	write "		<th>#</th>"
	write " 	<th>Código</th>"
	write "		<th>Unidade de Saúde</th>"
	write "		<th>Data da Compra</th>"	
	write "		<th>Quantidade Comprada</th>"
	write "		<th>UN</th>"	
	write "		<th>Preço Unitário</th>"
	write "	</tr>"
 
	for cnt = 1:1:$length(dataTableSerie,";") {      	
    	set lineData = $piece(dataTableSerie,";",cnt)
    	continue:(lineData = "")
		
		set idUnidade   = $piece(lineData,",",1)
		set precoUnit   = $piece(lineData,",",2)
		set quantCompra = $piece(lineData,",",3)
		set dteCompra   = $piece(lineData,",",4)
		
	  	if (cnt#2=0) set bkgColor = "#F0F0F0"
	  	if (cnt#2=1) set bkgColor = "#E0E0E0"
 
		//Para poder usar a função WWWTR		
		set:($get(SPRACHE) = "") SPRACHE = "PT"
		set:($get(YBED) = "") YBED = "UNKNOWN"
		//				
		
		write "	<tr style='background-color:"_bkgColor_"'>"
		write " <td>"_cnt_"</td>"
		write " <td><a class='link' href='VARSESPainelPDPASProduto.csp?fProduto="_pidProduto_"&fUnidade="_idUnidade_"'>"_idUnidade_"</a></td>"	
		write " <td><a class='link' href='VARSESPainelPDPASProduto.csp?fProduto="_pidProduto_"&fUnidade="_idUnidade_"'>"_$piece($get(^VARSESUNI(0,idUnidade,1)),Y,1)_"</a></td>"
		write "	<td style='text-align:center'>"_$zdate(dteCompra,4)_"</td>"		
		write " <td style='text-align:right'>"_$$^WWWTR(0,12,quantCompra)_"</td>"
		write " <td style='text-align:center'>"_$$SQLGetSiglaUnit^VARSQL(UoM)_"</td>"
		write " <td nowrap='nowrap' style='text-align:right;font-weight:bold'>"_$$FormatCurrency^COMTable(precoUnit)_"</td>"		
		write "</tr>"
    }
	
	write "</table>"
	
	quit
	
PrintQuadroResumoPreco(pidProduto,pSerie,pPeriodo,pstrDataCompraCentral)
	quit:((pidProduto = "") || (pSerie = "") )
	
	new strQuadroResumo, countCompras, precoMedio, maiorPreco, menorPreco,
		qtdeUltCompraCentral, precUltCompraCentral, dateUltCompraCentral	
	
	set qtdeUltCompraCentral = $piece(pstrDataCompraCentral,";",1)
	set precUltCompraCentral = $piece(pstrDataCompraCentral,";",2)
	set dateUltCompraCentral = $piece(pstrDataCompraCentral,";",5)	
	
	set strQuadroResumo = $piece(pSerie,"||",3)	
	set countCompras = $piece(strQuadroResumo,",",1)
	set precoMedio	 = $piece(strQuadroResumo,",",2)
	set maiorPreco   = $piece(strQuadroResumo,",",3)
	set menorPreco	 = $piece(strQuadroResumo,",",4)  	
	
	write "<div style='width:899px;padding:5px;line-height:18px;font-size:13px'>"
	write "	<strong>Resumo Geral (PDPAS)</strong><br />"
	write "		Quant. Compras em "_pPeriodo_": <strong>"_countCompras_"</strong>&nbsp;&nbsp;&nbsp;&nbsp;"
	write "		Preço Médio Ponderado: <font color='green'><strong>"_$$FormatCurrency^COMTable(precoMedio)_"</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;"
	write "		Menor Preço: <font color='blue'><strong>"_$$FormatCurrency^COMTable(menorPreco)_"</strong></font>&nbsp;&nbsp;&nbsp;&nbsp;"
	write "		Maior Preço: <font color='red'><strong>"_$$FormatCurrency^COMTable(maiorPreco)_"</strong></font><br />"
	write "</div>"
 
	write "<div style='width:899px;padding:5px;line-height:18px;font-size:13px'>"
	write "	<strong>Última Compra do Produto nas Centrais</strong><br />"
	write "		Preço: <strong>"_$$FormatCurrency^COMTable(precUltCompraCentral)_"</strong>&nbsp;&nbsp;&nbsp;&nbsp;"
	write "		Quantidade: "_$$^WWWTR(0,12,qtdeUltCompraCentral)_"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
	write "		Data: "_dateUltCompraCentral
	write "</div>"
	
	quit
	
PrintHeader(pQuadrante,pidVisao,pcountConsulta,pidUnidade,pPeriodo="")
	quit:(pidVisao = "")
 
	write "<div style='width:784px;font-size:15px;color:#333333;margin-top:10px;padding-top:10px;padding-bottom:10px;padding-left:4px'>"
 
 	if (pQuadrante = "Evolucao") {
	 	 
 		if (pidVisao = "Geral") {
			write "	<strong>"_pcountConsulta_". Evolução dos Gastos com o Produto no PDPAS na Rede (ano atual e anterior)</strong>"
 		} elseif (pidVisao = "Unidade") {
			write "	<strong>"_pcountConsulta_". Evolução dos Gastos com o Produto no PDPAS na Unidade "_$$GetSiglaUnidadeSaude^VARSESPainelPDPASUtils(pidUnidade)_" (ano atual e anterior)</strong>"	
 		}	
 	
 	} elseif (pQuadrante = "DistribUnidade") {
		write "	<strong>"_pcountConsulta_". Unidades que compraram o Produto utilizando o PDPAS no ano de "_pPeriodo_"</strong>"	
 	
 	} elseif (pQuadrante = "SaldoUnidades") {
		write "	<strong>"_pcountConsulta_". Saldo do Produto no PDPAS por Unidade em "_pPeriodo_"</strong>"	 	
 	
 	} elseif (pQuadrante = "DispersaoPrecos") {
	 	 
 		if (pidVisao = "Geral") {
			write "	<strong>"_pcountConsulta_". Mapa de Preços do Produto no PDPAS em "_pPeriodo_"</strong>"
 		} elseif (pidVisao = "Unidade") {
			write "	<strong>"_pcountConsulta_". Mapa de Preços do Produto no PDPAS na Unidade "_$$GetSiglaUnidadeSaude^VARSESPainelPDPASUtils(pidUnidade)_" em "_pPeriodo_"</strong>"
 		}	
 	
 	}
 	
	write "</div>"
	
	quit
	
	
PrintObtencaoProduto(pidProduto,pstrSeries,pPeriodo)
	quit:( (pidProduto = "") || (pstrSeries = "") || (pPeriodo = "") )
	
	new strUnidades, strValorGasto, strSaldoDisp, cnt, idUnidadeSaude, dteInicial,
		dteFinal, quantTransfCentrais, cntLocais, strLocaisEstoque, idLocalEstoque
		
	
	set strUnidades = $piece(pstrSeries,"||",5)
	set strUnidades = $$Replace^COMUtilStr(strUnidades,"[","")
	set strUnidades = $$Replace^COMUtilStr(strUnidades,"]","")
 
	set dteInicial = "01/01/"_pPeriodo
	set dteFinal   = "31/12/"_pPeriodo
 
	write "<table cellspacing='1' style='width:899px'>"
	write "	<tr style='background-color:#2c6c7f;color:white'>"
	write "		<th>#</th>"
	write " 	<th>Código</th>"
	write "		<th>Unidade de Saúde</th>"
	write "		<th>Transf. Centrais</th>"
	write "	</tr>"	
 
	for cnt = 1:1:$length(strUnidades,",") {
    	set idUnidadeSaude = $piece(strUnidades,",",cnt)
    	continue:(idUnidadeSaude = "")
 
	  	if (cnt#2=0) set bkgColor = "#F0F0F0"
	  	if (cnt#2=1) set bkgColor = "#E0E0E0"
 
		//Para poder usar a função WWWTR		
		set:($get(SPRACHE) = "") SPRACHE = "PT"
		set:($get(YBED) = "") YBED = "UNKNOWN"
		//
		
		set strLocaisEstoque = $$getLocaisEstoqueFromUnidade^VARSESPainelPDPASUtils(idUnidadeSaude)
		
		//Zerando quantidade para a unidade de saúde		
		set quantTransfCentrais = 0		
		for cntLocais = 1:1:$length(strLocaisEstoque,";") {
    		set idLocalEstoque = $piece(strLocaisEstoque,";",cntLocais)
    		continue:(idLocalEstoque = "")			
		
			;set quantTransfCentrais = quantTransfCentrais + $$GetQtdRecTransf^VARSESAlertaRegionaisLinha(1,idLocalEstoque,pidProduto,dteInicial,dteFinal)
			;set quantTransfCentrais = quantTransfCentrais + $$GetQtdRecTransf^VARSESAlertaRegionaisLinha(5,idLocalEstoque,pidProduto,dteInicial,dteFinal)
			;set quantTransfCentrais = quantTransfCentrais + $$GetQtdRecTransf^VARSESAlertaRegionaisLinha(5070,idLocalEstoque,pidProduto,dteInicial,dteFinal)
		}
 
		write "	<tr style='background-color:"_bkgColor_"'>"
    	write " 	<td>"_cnt_"</td>"
    	write " 	<td>"_idUnidadeSaude_"</td>"
    	write "		<td>"_$piece($get(^VARSESUNI(0,idUnidadeSaude,1)),Y,1)_"</td>"
    	write "		<td>"_quantTransfCentrais_"</td>"
    	;write " 	<td>"_$$^WWWTR(0,12,quantTransfCentrais)_"</td>"
   		write "	</tr>"
	}
	
	write "</table>"   		
 
 
	
	quit	
	
checkPeriodoContemDados(pidProduto,pPeriodo,pidUnidade="")
	quit:( (pidProduto = "") || (pPeriodo = "") ) $$$NO	
	
	if (pidUnidade = "") {
	
		&sql(SELECT TOP 1 Produto
		 	FROM VARDWPDPAS
		 	WHERE Produto = :pidProduto
		   	AND $$ExtractAnoFromCompetencia^VARSESPainelPDPASUtils(Competencia) = :pPeriodo
		)
		
	} else {
		
		&sql(SELECT TOP 1 Produto
		 	FROM VARDWPDPAS
		 	WHERE Produto = :pidProduto
		   	AND $$ExtractAnoFromCompetencia^VARSESPainelPDPASUtils(Competencia) = :pPeriodo
		   	AND UnidadeSaude = :pidUnidade
		)		
	
	}
	
	if (SQLCODE = 0) {
		quit $$$YES
	}
		
	quit $$$NO
]]></Routine>
</Export>