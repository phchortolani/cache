<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLJournalIC" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
    ;-------------------------------------------------------------------------------
    ; FINGLJournalIC - Routines relating to the Journal and Inter company.
    ;-------------------------------------------------------------------------------
	#include FINConst
	#include COMSYS
	#include WWWConst
 
ShowInterCompanyColumns(pblnShow=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Show/Hide Intercompany columns when form is loaded or when inter company checked
    ;
    ; History:
    ; 27-Jun-2005	JW			SR10412: Cleaned up. Added status
    ; 21-Jun-2005	Paul K		Created
    ;-------------------------------------------------------------------------------
	
	$$$GRIDHideShowColumns("1;2;7",'pblnShow) 	;Company, Company Account, Status
	$$$GRIDHideShowColumns(3,pblnShow)   		;Account
	
	quit
	
	
AccountSearch(pstrLine)
    ;-------------------------------------------------------------------------------
    ; Tailor the Account search to whether there is an intercompany key on this line.
    ;
    ; History:
    ; 21-Jun-2005	Paul K		Created
    ;-------------------------------------------------------------------------------
	new objJournal,idJournal,idLine,objLine
	
	set idLine=$piece($piece(pstrLine,"Y",2),"_",1)
 
	if idLine'="" {
		set objLine=$$GetYFELD^COMGridEdit31G("FINGLJournalLine",idLine)
		if $$$FINGLJournalLineCompany1(objLine)'="" {
			do Initialise^COMViewCustom("FINICAccount")
			do AddFilter^COMViewCustom("P1","=",$$$FINGLJournalLineCompany1(objLine))
			do AddFilter^COMViewCustom("D"_$$$FldFINICAccountBlockedReason,"=","")
		} else {
			do Initialise^COMViewCustom("FINGLAccount")
			do AddFilter^COMViewCustom("D"_$$$FldFINGLAccountAccountUsage,"=",$$$EnumFINGLACCOUNTUSAGETransaction)
			do AddFilter^COMViewCustom("D"_$$$FldFINGLAccountEnablepostingsecurity,"=","")
		}
		do Start^COMViewCustom("WWW2.Y"_idLine_"_2")
	}
	quit
	
 
OnBlurCompany(pROW,pidCompany,pobjJournalLine)
    ;-------------------------------------------------------------------------------
    ; Set the default distribution account when company selected.
    ;
    ; History:
    ; 29-Jun-2005	JW		SR10412: Added pROW. Update status. Set accounts to null if company null.
    ; 21-Jun-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new objICSetup
	
	if pidCompany'="" {
		set objICSetup=$get(^FINICSetup(YM,pidCompany,1))
		set $$$FINGLJournalLineCompanyAccount(pobjJournalLine)=$$$FINICSetupDefaultDistributionAccoun(objICSetup)
		set $$$FINGLJournalLineAccount(pobjJournalLine)=$$$FINICSetupToAccount(objICSetup)
	} else {
		set $$$FINGLJournalLineCompanyAccount(pobjJournalLine)=""
		set $$$FINGLJournalLineAccount(pobjJournalLine)=""
	}
	
	do UpdateManualField^COMGridEdit31Interface(pROW,7,$$GetAccountStatus(pobjJournalLine))
	
	quit
	
 
OnBlurCompanyAccount(pROW,pidCompanyAccount,pobjJournalLine)
    ;-------------------------------------------------------------------------------
    ; If this line is not an intercompany line set the "normal" account property to be
    ; the same as the "Company Account".
    ;
    ; Returns:nothing (pobjJournalLine passed by reference)
    ;
    ; History:
    ; 29-Jun-2005	JW		SR10412: Added pROW. Update status.
    ; 21-Jun-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
    
	if $$$FINGLJournalLineCompany1(pobjJournalLine)="" {
		set $$$FINGLJournalLineAccount(pobjJournalLine)=pidCompanyAccount
	}
	do UpdateManualField^COMGridEdit31Interface(pROW,7,$$GetAccountStatus(pobjJournalLine))
 
	quit
 
 
GetAccountStatus(pobjLine="")
    ;-------------------------------------------------------------------------------
    ; Return the blocked status for an inter-company account
    ;
    ; Params:	pobjLine - the journal line object
    ;
    ; Returns:	"" if ""
    ; 			Otherwise - status of account
    ;
    ; History:
    ; 28-Jun-2005	JW		SR10412: Created
    ;-------------------------------------------------------------------------------
	new strMsg,idCompany,idAcct,strDescription,objAcct
	
	set strMsg=""
	
	set idAcct = $$$FINGLJournalLineCompanyAccount(pobjLine)
	if idAcct'="" {
		set idCompany = $$$FINGLJournalLineCompany1(pobjLine)
		if idCompany="" { // not IC
			if '$data(^FINGLAccount(YM,idAcct,1)) {
				set strMsg = $$$Text($listbuild("Fin00067",idAcct)) ; Account %1 does not exist
			} else {
				set strDescription = $$$FINGLAccountDescription($get(^FINGLAccount(YM,idAcct,1)))
			}
			
		} elseif $data(^FINICAccount(YM,idCompany,idAcct,1)) {  ; IC account in IC list - Get reason
			set objAcct = $get(^FINICAccount(YM,idCompany,idAcct,1))
			set strMsg = $$$FINICAccountBlockedReason(objAcct)
			set strDescription = $$$FINICAccountDescription(objAcct)
			
		} else {		  ; Account not in IC list
			if $$$FINICSetupOtherAccountsAllowed($get(^FINICSetup(YM,idCompany,1))) { ; Allowed
				set strMsg = $$$Text("Fin00823")  ;Account not validated until post
				
			} else {	; not allowed
				set strMsg = $$$Text($listbuild("Fin00824",idAcct))  ;Account %1 not in Inter Company List
			}
		}
		
		if strMsg="" {		// If it's ok, show the description
			set strMsg = $$$Text("Fin00755")_" ("_$get(strDescription)_")" ; OK
		}
	}
	
	quit strMsg
	
 
 
 
GetJournalArray(pidJournal,parrSites)
    ;-------------------------------------------------------------------------------
    ; Return in parrSites an array of all of the jouranls that are going 
    ; to be created on the receiving side.
    ; 
    ; Returns: (by ref)	parrsites(idCompany,idLine) = reference
    ; 					parrsites(idCompany,idLine,account) = amount
    ; 
    ; History:
    ; 30-Jun-2005	JW		SR10412: Completed
    ; 24-Jun-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
    new idLine,objLine,objIC,idInterCompany,curAmount,idFromAcct
    
	if $get(pidJournal)'="" && $$$FINGLJournalInterCompany($get(^FINGLJournal(YM,pidJournal,1))) {
		
		set idLine=""
		for {
			set idLine=$order(^FINGLJournalLine(YM,pidJournal,idLine))
			quit:idLine=""
			
			set objLine=$get(^FINGLJournalLine(YM,pidJournal,idLine,1))
			set idInterCompany=$$$FINGLJournalLineCompany1(objLine)
			if idInterCompany'="" {
				set objIC=$get(^FINICSetup(YM,idInterCompany,1))
				set idFromAcct = $$$FINICSetupFromAccount(objIC)
				if idFromAcct = "" set idFromAcct=" "
				
				set parrSites(idInterCompany,idLine)=$$$FINGLJournalLineReference(objLine)
				set curAmount=$$$FINGLJournalLineDebit(objLine)-$$$FINGLJournalLineCredit(objLine)
				set parrSites(idInterCompany,idLine,$$$FINGLJournalLineCompanyAccount(objLine))=curAmount
				
				// Sum up the "From Account" values in the first line
				set parrSites(idInterCompany,0,idFromAcct) = $get(parrSites(idInterCompany,0,idFromAcct))-curAmount
			}
		}
	}
	
	quit
	
	/* SR13087: This routine is now OBSOLETE as IC is now at the transaction level 
ReceiveJournal(parrJournal,pstrJournalHist="",pobjSendJournal="",pCompanyName="")
    ;-------------------------------------------------------------------------------
    ; Process the Array data to create(or validate) a journal(or a list of accounts).
    ;
    ; Returns:Status
    ; 	      (pstrJournalHist passed by reference)
    ;
    ; History:
    ; 23-Jan-2006	RPW		SR13087: Call the ValidateAccount on FINGLTranIC, not here.
    ; 27-Jun-2005	JW		SR10412: Cleaned up status usage. Added language text.
    ; 						If validating, quit with first error. Don't return array.
    ; 28-Apr-2005	Paul K	SR10412: Created
    ;-------------------------------------------------------------------------------
	new strStatus,blnCreate,idSendJournal,idSendJournalHist,idJournalLine,objLine,idLine
	new idAccount,curAmount,idJournal,objJournal
	
	set idSendJournal=$piece(pstrJournalHist,",",1)
	set idSendJournalHist=$piece(pstrJournalHist,",",2)
	
	set blnCreate=(idSendJournalHist'="")
	
	set strStatus=$$$OK
	if blnCreate {
		set idJournal=$$^WWWNEXT("FINGLJournal")
		set objJournal=""
		set $$$FINGLJournalDescription(objJournal)=$$$FINGLJournalDescription(pobjSendJournal)
		set $$$FINGLJournalJournalType(objJournal)=$$$EnumFINGLJOURNALTYPEOnceOff
		set $$$FINGLJournalNotes(objJournal)=$$$Text($listbuild("Fin00822",pCompanyName,idSendJournal))_"|"_$$$FINGLJournalNotes(pobjSendJournal) ;Created by Company %1 from Journal number %2
		set $$$FINGLJournalCreatedDate(objJournal)=$$$FINGLJournalCreatedDate(pobjSendJournal)
		set $$$FINGLJournalCreatedBy(objJournal)=$$$FINGLJournalCreatedBy(pobjSendJournal)
		set $$$FINGLJournalModifiedDate(objJournal)=$$$FINGLJournalModifiedDate(pobjSendJournal)
		set $$$FINGLJournalModifiedBy(objJournal)=$$$FINGLJournalModifiedBy(pobjSendJournal)
		set $$$FINGLJournalTransactionDate(objJournal)=$$$FINGLJournalTransactionDate(pobjSendJournal)
		set $$$FINGLJournalAmountType(objJournal)=$$$FINGLJournalAmountType(pobjSendJournal)
		set $$$FINGLJournalStatus(objJournal)=$$$EnumFINSYSSTATUSPending
		set strStatus=$$Save^COMUtils("FINGLJournal",idJournal,objJournal,1)
	}
	
	if $$$ISOK(strStatus) {
		
		set idLine=""
		for {
			set idLine=$order(parrJournal(idLine))
			quit:idLine=""
			
			set idAccount=""
			for {
				set idAccount=$order(parrJournal(idLine,idAccount))
				quit:idAccount=""
				
				set curAmount=$get(parrJournal(idLine,idAccount))
				if 'blnCreate {
					;set parrJournal(idLine,idAccount)=$$ValidateAccount(idAccount,curAmount)
					;set strStatus = $$ValidateAccount(idAccount,curAmount) ; SR13087
					set strStatus = $$ValidateAccount^FINGLTranIC(idAccount,curAmount) ; SR13087
					
					if $$$ISERR(strStatus) {
						if idLine=0 { // "To Account"
							set strStatus=$listbuild("Fin00825",idAccount,$$$Text(strStatus)) ;`To Account` %1 failed. Reason: %2
						} else {
							set strStatus=$listbuild("Fin00385",idLine,$$$Text(strStatus)) ; Line %1 failed. Reason: %2
						}
					}
					
				} else {
					set objLine=""
					set idJournalLine=$order(^FINGLJournalLine(YM,idJournal,""),-1)+1
					set $$$FINGLJournalLineAccount(objLine)=idAccount
					set $$$FINGLJournalLineReference(objLine)=$get(parrJournal(idLine))
					if curAmount>0 {
						set $$$FINGLJournalLineDebit(objLine)=curAmount
					} else {
						set $$$FINGLJournalLineCredit(objLine)=-curAmount
					}
					set strStatus=$$Save^COMUtils("FINGLJournalLine",idJournal_","_idJournalLine,objLine,1)
				}
				
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
		
		if $$$ISOK(strStatus) && blnCreate {
			if $$$FINGeneralSetupAutoPostInterCompanyJourn($get(^FINGeneralSetup(YM,YM,1))) {
				do Post^FINGLJournal(idJournal,$$$YES)
			}
			set pstrJournalHist=idJournal
		}
	}
	
	quit strStatus
	*/
 
	/* SR13087: No longer required. Code now resides in FINGLTranIC
ValidateAccount(pidAccount="",curAmount="")
    ;-------------------------------------------------------------------------------
    ; Ensure that the account is postable.
    ;
    ; Returns:DCM Status
    ;
    ; History:
    ; 27-Jun-2005	JW		SR10412: Cleaned up status usage. Removed unused variable
    ; 22-Apr-2005	Paul K	SR10412: Created
    ;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus=$$ValidateAccount^FINGLAccountTran(pidAccount)
	
	if $$$ISOK(strStatus) {
		set strStatus=$$CanPostToThisAccount^FINGLAccountProcess(pidAccount,curAmount)
	}
	
	quit strStatus
	*/
  
ValidateAccounts(pidJournal)
    ;-------------------------------------------------------------------------------
    ; Validate the journal's IC company's accounts
    ; Future enhancement: just validate this journal's IC accounts.
    ; 
    ; Params: journal key
    ;
    ; Returns: nil
    ;
    ; History:
    ; 30-Jun-2005	JW		SR10412: Created
    ;-------------------------------------------------------------------------------
	new idLine,idInterCompany,arrCompanies
	if $get(pidJournal)'="" {
		
		set idLine=""
		for {
			set idLine=$order(^FINGLJournalLine(YM,pidJournal,idLine))
			quit:idLine=""
			
			set idInterCompany=$$$FINGLJournalLineCompany1($get(^FINGLJournalLine(YM,pidJournal,idLine,1)))
			if idInterCompany'="" {
				if '$data(arrCompanies(idInterCompany)) {
					do ValidateAccounts^FINICSetup(idInterCompany)
					set arrCompanies(idInterCompany)=""
				}
			}
		}
	}
	do ReloadForm^COMUtilForm()
	
	quit
]]></Routine>
</Export>