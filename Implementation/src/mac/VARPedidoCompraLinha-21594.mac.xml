<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARPedidoCompraLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARPedidoCompraLinha
#include COMSYS
#include COMConst
#include INConst
#include VARConst
 	
LoadGrid(pid="")
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnAfterDataFields^VARPedidoCompra.mac
    ; 
    ; Histórico:
    ; 	25-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	new YFORM, YFELD, YKEY, YAUSWAHL
	
	set YFORM = "VARPedidoCompraLinha"
	set YFELD = ""
	set YKEY = $get(pid)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)	= 1
	set $$$COMGridEditParameterGridName(YAUSWAHL)	= YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)	= '($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)	= "VARPedidoCompra"
	
	if ((YKEY '= "") || (YKEY '= "+")){
		if (YKEY = "+"){
			$$$GRIDStart(YFORM,YKEY)
			quit
		}
		
		set objPedidoCompra = ^VARPedidoCompra(0,YKEY,1)
		set statusPedidoCompra = $$$VARPedidoCompraStatus(objPedidoCompra)
		if ((statusPedidoCompra = 1) || (statusPedidoCompra = 3)){
			do ForcarAtualizacaoAoMudarAba()
		}
	}
	else {
		do ForcarAtualizacaoAoMudarAba()
	}

	$$$GRIDStart(YFORM,YKEY)
	
	quit
	
OnBeforeSave(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnBeforeSave^VARPedidoCompra.mac
    ; 
    ; Histórico:
    ; 	25-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	
	new strStatus
	set strStatus=$$$GRIDSave(pYKEY)
	if $$$ISOK(strStatus) {
	} else {
		set Q=$$$QDontSave
	}
	quit

OnAfterDataFields(pYKEY,pYFELD,pYSEITE)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnAfterDataFields^VARPedidoCompra.mac
    ; 
    ; Histórico:
    ; 	28-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	set YOPTION1 = 0
	do CanArquivar($piece(YKEY, YKOMMA, 1))
	if ('YQ) {
		set YOPTION1 = 1
	}
	
 	quit

OnAfterDelete(pYKEY)
	do DELETE^COMGridEdit31Interface()
	quit
	
OnBeforeSaveHook()
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Nunca deixar o valor booleano ser salvo como vazio "", apenas como 0 ou 1.
    ;
    ; Chamado por:
    ;	Hook OnBeforeSave da classe VARPedidoCompraLinha.
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	new blnTotalmenteRecebida
	set blnTotalmenteRecebida = $$$VARPedidoCompraLinhaQuantidadeTotalmenteAtend(YFELD)
 
	if blnTotalmenteRecebida = "" {
		set $$$VARPedidoCompraLinhaQuantidadeTotalmenteAtend(YFELD) = $$$NO
	}
 
	quit $$$OK
	
OnBlurProduto(pintCol,pintRow,&pobjYFELD)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo ExecuteOnBlur do campo (1)-Produto no form VARPedidoCompraLinha 
    ; 
    ; Histórico:
    ;	16-Dez-2016		FC		LEAN-3: Load INLIEF code on OnBlur
    ; 	28-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	new idPedidoCompra, idProduto, objProduto, Unidade, Grupo, blnErro, strListItemCodes, 
		strDate, strFocusField, intCurrentLine, blnItemJaIncluido, intGridLine, intSeq

	set idProduto = $piece(pobjYFELD,Y,1)
	
	if idProduto = "" {
		set $piece(YFELD,Y,2) = ""	;Unidade
		set $piece(YFELD,Y,3) = ""	;Grupo
		set $piece(YFELD,Y,4) = ""	;Quantidade
		set $piece(YFELD,Y,5) = ""	;CMM
		set $piece(YFELD,Y,6) = ""	;Estoque
		quit
	}
	
	set objProduto = $get(^INART(0,idProduto,1))	
	set Grupo	   = $piece(objProduto,Y,30)
	set Unidade    = $piece(objProduto,Y,40)
	
	set blnErro = $$$NO
	
	// 25-Ago-2010 Karine : Copied from INRECSummary - Inactive items cannot be received	
	if idProduto '= "" {
		new itemStatus
		set itemStatus = $piece($get(^INART(YM,idProduto,1)),Y,66)			
		if (itemStatus = 1) {
			set $piece(pobjYFELD, Y, 1) = ""
			set blnErro = $$Erro("O produto '"_idProduto_"' está inativo. Favor verificar com a CAF.")
		}
	}
	
	//Checking if the item was already used
	set strListItemCodes = $$GetItensJaIncluidos()
	
	set strDate = $piece($horolog, YKOMMA, 1)
	set strFocusField = $get(^WWWDATEN(0, strDate, YUSER, "VARPedidoCompraLinha","V", "FOCUSFIELD"))
	set intCurrentLine = $extract($piece(strFocusField, "_", 1), 2,
		$length(strFocusField))
	
	set blnItemJaIncluido = $$$NO
	
	for intGridLine = 1:1:$length(strListItemCodes, Y) {
		continue:(intGridLine = intCurrentLine)
 
		if ($piece(strListItemCodes, Y, intGridLine) = idProduto) {
			set blnItemJaIncluido = $$$YES
			quit
		}
	}
 
	if (blnItemJaIncluido) {
		// Searches for the "Seq." value of the grid line:
		set intSeq = ""
		for {
			set intSeq = $order(^WWWDATEN(0, strDate, YUSER, "VARPedidoCompraLinha",
				"V", "REFERENCEROW", intSeq))
			quit:(intSeq = "")
 
			quit:($get(^WWWDATEN(0, strDate, YUSER, "VARPedidoCompraLinha",
				"V", "REFERENCEROW", intSeq, 1)) = intGridLine)
		}
 
		set $piece(pobjYFELD, Y, 1) = ""
		set blnErro = $$Erro("O produto '"_idProduto_"' já foi incluído em outra linha do pedido (Seq. = "_intSeq_").")
	}	
 
	//Loading other fields
	if blnErro '= $$$YES {
		set $piece(pobjYFELD,Y,2) = Unidade
		set $piece(pobjYFELD,Y,3) = Grupo
		set $piece(pobjYFELD,Y,5) = $$GetCMMRede^VARAlertaLinha(idProduto)			;CMM para a empresa
		set $piece(pobjYFELD,Y,6) = $$GetEstoqueDisponivel^VARReposicao(idProduto, YLOCATION)		;Estoque para a empresa
		// LEAN-3: Load INLIEF code on OnBlur
		set $piece(pobjYFELD,Y,13)= $$CarregaFornecedorItem^VARPedidoCompraLinha(idProduto)
	}
	
	quit
	
OnBeforeFormat(pYFIELDNAME, strText, YFELD)
	;-------------------------------------------------------------------------------
    ; Descrição: 
 	;	Volta os parâmetros alterados em GetValorPadraoAArquivar().
    ;
    ; Chamado por:
    ;	NetManager core.
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	quit:($length($get(YQ)) = 0)
 
	if ('YQ) {
		set ^CacheTemp(YUSER,"Grid","Enabled") = 0
 		set ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","AUTHORISATION",1) = 5
	}
	set ^CacheTempEvent(YUCI,YFORM,"Format") = 0
	quit	
	
OnBlurAArquivar(&YFELD)
	;-------------------------------------------------------------------------------
    ; Descrição: 
 	;  	Mantém o valor do campo em memória (WWWDATEN).	
    ;
    ; Chamado por:
    ;	Campo ExecuteOnBlur do campo (14)-A Arquivar no form VARPedidoCompraLinha
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	if ((+YLFN > 0) && ($length(YLFDAT) > 0)) {
		set $piece(YFELD,Y,YLFN) = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",YLFDAT,1))
	}
	quit	
	
CanArquivar(idPedidoCompra)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função GetValorPadraoAArquivar^VARPedidoCompraLinha.mac
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new objPedidoCompra
 
	if ($length($get(idPedidoCompra)) = 0) {
		set objPedidoCompra = ""
	}
	else {
		set objPedidoCompra = $get(^VARPedidoCompra(YM,idPedidoCompra,1))
	}
	do CanArquivarDoc^VARPedidoCompra(idPedidoCompra,objPedidoCompra)
	quit	

ArquivarIndividual(pidPedidoCompra, pidPedidoCompraLinha, pblnTudo, pblnCancelar, pintQuantidadeAArquivar)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função ArquivarDoc^VARPedidoCompra.mac
    ; 
    ; Histórico:
    ; 	01-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new objPedidoCompraLinha, fltQuantidadePedido, fltQuantidadeArquivada, fltQuantidadeAtendida, strStatus
 	
	set objPedidoCompraLinha   = $get(^VARPedidoCompraLinha(YM,pidPedidoCompra,pidPedidoCompraLinha,1))
	set fltQuantidadePedido    = $$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha)
	set fltQuantidadeArquivada = +$$$VARPedidoCompraLinhaQuantidadeArquivada(objPedidoCompraLinha)
	
	if ('pblnCancelar) {
		set fltQuantidadeAtendida = $$GetQuantidadeAtendida(pidPedidoCompra, pidPedidoCompraLinha)
		
		if (pblnTudo) {
			set pintQuantidadeAArquivar = fltQuantidadePedido - fltQuantidadeAtendida
			set $$$VARPedidoCompraLinhaQuantidadeTotalmenteAtend(objPedidoCompraLinha) = $$$YES
		}
		elseif (pintQuantidadeAArquivar > (fltQuantidadePedido - fltQuantidadeAtendida)) {
			quit $$$MakeStatus("Quantidade solicitada para arquivar do produto "_$$$VARPedidoCompraLinhaProduto(objPedidoCompraLinha)_" é maior do que a disponível.")
		}
		
		set $$$VARPedidoCompraLinhaQuantidadeArquivada(objPedidoCompraLinha) = fltQuantidadeArquivada + pintQuantidadeAArquivar
		set $$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha) = fltQuantidadePedido - pintQuantidadeAArquivar
	
	} else {
		set $$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha) = fltQuantidadePedido + fltQuantidadeArquivada
		set $$$VARPedidoCompraLinhaQuantidadeArquivada(objPedidoCompraLinha) = 0
		set $$$VARPedidoCompraLinhaQuantidadeTotalmenteAtend(objPedidoCompraLinha) = $$$YES
 	}
 
	set strStatus = $$$Save("VARPedidoCompraLinha",pidPedidoCompra_$$$COMMA_pidPedidoCompraLinha,objPedidoCompraLinha,$$$YES)
	quit strStatus
	
ArquivarOnClickJS(idPedidoCompra)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função PrintJS^VARPedidoCompraLinha.MAC
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	set YQ = $$$YQEnable
	do CanArquivar(idPedidoCompra)
	if ($extract(YQ, 1, 1) '= $$$YQEnable) {
		&js<
		    alert('#($piece(YQ, "1", 2))#');
		>
		quit
	}
 
	&js<
	    var motivo = iePrompt('Favor inserir o motivo do arquivamento dos produtos do pedido de compra:');
		if (motivo) {
			CallBackNow("ArquivarOnClick^VARPedidoCompraLinha", '#(idPedidoCompra)#', motivo);
		}
	> 
	quit
	
ArquivarOnClick(idPedidoCompra, strMotivoArquivamento)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função ArquivarOnClickJS^VARPedidoCompraLinha.MAC
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	new YFORM, YSEITE, intQtdeLinhas, strQtdsAArquivar, blnAlgoAArquivar, intQtde, objPedidoCompra, i, strStatus,
		strMotivoArquivamentoFormatado
	
	set YFORM = "VARPedidoCompraLinha"
 
	set blnAlgoAArquivar = 0
	set strQtdsAArquivar = ""
		
	;Essa abordagem não funciona, o seq. fica perdido caso alguma linha intermediária do grid tenha sido deletada
	;set intQtdeLinhas = $get($$$WWWDATEN("V","ROWCOUNT"))	
	;for i = 1:1:intQtdeLinhas {
	
	set i = ""	
	for {
		set i = $order(^WWWDATEN(YM,+$h,YUSER,YFORM,"V","REFERENCEROW",i))		
		quit:(i = "")
		
		set intQtde = +$get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","Y"_i_"_14",1))
		set $piece(strQtdsAArquivar, Y, i) = intQtde 
		
		if (intQtde > 0) {
			set blnAlgoAArquivar = 1
		}
	}
 
	if ('blnAlgoAArquivar) {
		$$$StartScript()
		write "alert('A quantidade a ser arquivada de algum dos produtos do pedido de compra deve ser maior que zero!');"
		$$$EndScript()
	}
	elseif ($length(strMotivoArquivamento) = 0) {
		$$$StartScript()
		write "alert('Entre com o motivo do arquivamento dos produtos do pedido de compra!');"
		$$$EndScript()
	}
	else {
		if ($length(strMotivoArquivamento, """") = 1) {
			set strMotivoArquivamentoFormatado = strMotivoArquivamento
		}
		else {
			set strMotivoArquivamentoFormatado = ""
			for i = 1:1:$length(strMotivoArquivamento, """") {
				set strMotivoArquivamentoFormatado = strMotivoArquivamentoFormatado_
					$piece(strMotivoArquivamento, """", i)_""""""
			}
		}
 
		set strStatus = $$Transaction^COMTransaction("Arquivar^VARPedidoCompraLinha("""_idPedidoCompra_""","""_strQtdsAArquivar_""","""_strMotivoArquivamentoFormatado_""")", $$$YES)
		if $$$ISOK(strStatus) {
			$$$StartScript()
			write "alert('Produtos do pedido de compra arquivado com sucesso!');"
			$$$EndScript()
 
			set YFORM = "VARPedidoCompra"
			set YSEITE = 3
			do GoToForm^COMUtilForm(YFORM, idPedidoCompra, 4, $get(YPARA), $$$NO)
		}
		else {
			$$$StartScript()
			write "alert('Erro ao arquivar produtos do pedido de compra. => "_$$DecodeError^COMUtilError(strStatus)_"');"
			$$$EndScript()
		}
	}
	quit ""
	
Arquivar(pidPedidoCompra, pstrQtdsAArquivar, pstrMotivoArquivamento)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função ArquivarOnClick^VARPedidoCompraLinha.MAC
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	new idPedidoCompraLinha, intQuantidadeAArquivar, strStatus, objPedidoCompra
 
	$$$Order3(^VARPedidoCompraLinha,YM,pidPedidoCompra,idPedidoCompraLinha)
	
		set intQuantidadeAArquivar = +$piece(pstrQtdsAArquivar, Y, idPedidoCompraLinha)
		
		if (intQuantidadeAArquivar > 0) {
			set strStatus = $$ArquivarIndividual(pidPedidoCompra, idPedidoCompraLinha, 0, 0, intQuantidadeAArquivar)
			if $$$ISERR(strStatus) {
				set $zerror = $$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
	 
			do RegistrarAlteracao^VARPedidoCompraHistorico(pidPedidoCompra, 3,
				idPedidoCompraLinha, intQuantidadeAArquivar, pstrMotivoArquivamento) ;3 = #define HistAlterArquivar  3
		}
 
	$$$End
 
	quit $$$OK
	
GetQuantidadeAAtender(pidPedidoCompra, pidPedidoCompraLinha)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Retorna a quantidade a atender de uma linha do pedido de compra, que corresponde 
    ;   a quantidade no pedido menos a quantidade já atendida.
    ;
    ; Chamado por:
    ;	Função ArquivarDoc^VARPedidoCompra.mac
    ;	Função ArquivarIndividual^VARPedidoCompraLinha.mac
    ;	Campo Valor Padrão do campo (11)-Quant. Atendida no form VARPedidoCompraLinha
    ; 
    ; Histórico:
    ; 	01-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
    $$$VAR
    
	new objPedidoCompraLinha, fltQuantidadePedido, fltQuantidadeAtendida, fltQuantidadeAAtender
	
	set objPedidoCompraLinha = $get(^VARPedidoCompraLinha(YM, pidPedidoCompra, pidPedidoCompraLinha, 1))
	
	set fltQuantidadePedido   = $$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha)
	set fltQuantidadeAtendida = $$GetQuantidadeAtendida(pidPedidoCompra, pidPedidoCompraLinha)
	set fltQuantidadeAAtender = fltQuantidadePedido - fltQuantidadeAtendida
 
	quit fltQuantidadeAAtender

GetQuantidadeAtendida(pidPedidoCompra, pidPedidoCompraLinha)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Calcula a quantidade existente em ordens de compra para a linha do pedido de
    ;	compra.
    ;
    ; Chamado por:
    ;	Função ArquivarDoc^VARPedidoCompra.mac
    ;	Função ArquivarIndividual^VARPedidoCompraLinha.mac
    ;	Campo Valor Padrão do campo (11)-Quant. Atendida no form VARPedidoCompraLinha
    ; 
    ; Histórico:
    ; 	01-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	quit:(($length(pidPedidoCompra) = 0) || ($length(pidPedidoCompraLinha) = 0)) ""

	new fltQuantidadeTotal, idCompra, idCompraLinha, objCompraLinha, fltQuantidade 	

	//Somando as quantidades em uso 	
 	set fltQuantidadeTotal = 0
 	
 	$$$Order5(^INAUFPs,YM,105,$$Index^COMUtilIndex(pidPedidoCompra,"INAUFP"),pidPedidoCompraLinha,idCompra)
 		
 		$$$Order6(^INAUFPs,YM,105,$$Index^COMUtilIndex(pidPedidoCompra,"INAUFP"),pidPedidoCompraLinha,idCompra,idCompraLinha)
 			
 			set objCompraLinha = $get(^INAUFP(YM,idCompra,idCompraLinha,1))
 			set fltQuantidade  = $piece(objCompraLinha,Y,5) 			
 			set fltQuantidadeTotal = fltQuantidadeTotal + fltQuantidade
 		
 		$$$End
 		
 	$$$End
 	
 	quit fltQuantidadeTotal
	
GetQuantidadeArquivada()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função GetQuantidadeTotal^VARPedidoCompraLinha.mac
    ;	Campo Valor Padrão do campo (12)-Quant. Arquivada no form VARPedidoCompraLinha 
    ; 
    ; Histórico:
    ; 	28-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	quit:(($length($get(YKEY)) = 0) || ($length($get(YFELD)) = 0) ||
		  ($length($$$VARPedidoCompraLinhaQuantidadeArquivada(YFELD)) = 0)) 0
 
	quit $$$VARPedidoCompraLinhaQuantidadeArquivada(YFELD)

GetItensJaIncluidos()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnBlurProduto^VARPedidoCompraLinha.mac
    ; 
    ; Histórico:
    ; 	28-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	new strListItemCodes, strDate, intGridColItemCode, intGridLine, intItemCode
	
	set strListItemCodes = ""
 
	// Loop on grid lines:
	set strDate = $piece($horolog, YKOMMA, 1)
	set intGridColItemCode = 1
	set intGridLine = 0
	for {
		set intGridLine = $increment(intGridLine)
		set intItemCode = $get(^WWWDATEN(0,strDate,YUSER,"VARPedidoCompraLinha","V", "Y"_intGridLine_"_"_intGridColItemCode,1))
		quit:(intItemCode = "")
 
		continue:(+$get(^WWWDATEN(0,strDate,YUSER,"VARPedidoCompraLinha","V","KILLEDRECORD",intGridLine)))
 
		set $piece(strListItemCodes, Y, intGridLine) = intItemCode
	}
 
	quit strListItemCodes
	
GetQuantidadeAAtenderPorProduto(pidItem, pidLocation)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ; 	Verifica em TODOS os pedidos de compra as quantidades que ainda não foram 
    ;	atendidas para um determinado produto.
    ; 
    ; Histórico:
    ; 	28-Jun-2010		Criado
    ;-------------------------------------------------------------------------------
	new fltQuantidade, idPedidoCompra, idPedidoCompraLinha, objPedidoCompra, idLocation
	
	set fltQuantidade = 0
 
	$$$Order5(^VARPedidoCompraLinhas,YM,2,$$$NO,$$Index^COMUtilIndex(pidItem,"VARPedidoCompraLinha"),idPedidoCompra)
		
		$$$Order6(^VARPedidoCompraLinhas,YM,2,$$$NO,$$Index^COMUtilIndex(pidItem,"VARPedidoCompraLinha"),idPedidoCompra,idPedidoCompraLinha)
			;set objPedidoCompra = $get(^VARPedidoCompra(YM, idPedidoCompra, 1))
			;set idLocation = $$$VARPedidoCompraLocaldeEntrega(objPedidoCompra)
			;continue:(idLocation '= pidLocation)
				
			set fltQuantidade = fltQuantidade + $$GetQuantidadeAAtender(idPedidoCompra, idPedidoCompraLinha)
		$$$End
	
	$$$End
 
	quit fltQuantidade

GetQuantidade()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função GetQuantidadeTotal^VARPedidoCompraLinha.mac
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	quit:(($length($get(YKEY)) = 0) || ($length($get(YFELD)) = 0) ||
		  ($length($$$VARPedidoCompraLinhaQuantidade(YFELD)) = 0)) 0
 
	quit $$$VARPedidoCompraLinhaQuantidade(YFELD)
	
GetQuantidadeTotal()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo Valor Padrão do campo (13)-Quant. Total no form VARPedidoCompraLinha
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	quit:(($length($get(YKEY)) = 0) || ($length($get(YFELD)) = 0)) 0
 
	quit ($$GetQuantidade() + $$GetQuantidadeArquivada())
	
GetValorPadraoAArquivar()
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Torna o campo habilitado quando o grid estiver desabilitado
    ;
    ; Chamado por:
    ;	Campo Valor Padrão do campo (14)-A Arquivar no form VARPedidoCompraLinha
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	do CanArquivar($piece(YKEY, YKOMMA, 1))
	if ('YQ) {
		set ^CacheTemp(YUSER,"Grid","Enabled") = 1
		set ^CacheTempEvent(YUCI,YFORM,"Format") = 1
	}
	quit ""

GetLineNumber(pidPedidoCompra, pidItem)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Pega o número da linha de acordo com o código do produto.
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new idPedidoCompraLinha
	set idPedidoCompraLinha = $Order(^VARPedidoCompraLinhas(YM, 1, $$Index^COMUtilIndex(pidItem,"VARPedidoCompraLinha"), pidPedidoCompra, ""))
	quit idPedidoCompraLinha
	
PrintJS(pobjForm)	
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnAfterDataFields^VARPedidoCompra.MAC
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	write !, "<script language=""javascript"">"
	&js<
	function arquivar() {
		CallBackNow("ArquivarOnClickJS^VARPedidoCompraLinha", idPedidoCompra);
	}
	>
	write !, "</script>"
	quit
	
UpdateUsedQuantity(pidPedidoCompra, pidPedidoCompraLinha, pfltQuantidadeAIgnorar=0)
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Atualiza o campo booleano que diz se a linha já foi totalmente atendida ou não 
	;  	(é só isso mesmo?).
    ;
    ; Chamado por:
    ;	PENDÊNCIA ?
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	/*
	new objPedidoCompraLinha, fltQuantidadeAtendida, strStatus, objPedidoCompra, blnQuantidadeTotalmenteAtend, fltQuantidadeTotal
 
	// Remove aspas da variável:
	// Para depurar, e causar erro na deleção da INAUF, comente a linha a seguir:
 	set pidPedidoCompra = $translate(pidPedidoCompra,"""") 
 	set pidPedidoCompraLinha = $translate(pidPedidoCompraLinha,"""") 
	set objPedidoCompraLinha = $get(^VARPedidoCompraLinha(YM, pidPedidoCompra, pidPedidoCompraLinha, 1))
 
 	// Se não encontrar a linha do pedido de compra, retorna erro:
 	if ( $get(objPedidoCompraLinha) = "" ) {
	 	set strStatus = "0~Erro: não encontrada linha "_pidPedidoCompraLinha_" do pedido de compra "_pidPedidoCompra
	 	quit strStatus
 	}

	set blnEncerrado = 0
	if ($$$VARPedidoCompraLinhaQuantidadeTotalmenteAtend(objPedidoCompraLinha) = $$$YES) {
		set objPedidoCompra = $get(^VARPedidoCompra(YM, pidPedidoCompra, 1))
		set blnEncerrado = ($$$VARPedidoCompraStatus(objPedidoCompra) = 3)
	}
 
	set fltQuantidadeAtendida = $$GetQuantidadeAtendida(pidPedidoCompra, pidPedidoCompraLinha) - pfltQuantidadeAIgnorar
 
	if ('blnEncerrado) {
		set blnQuantidadeTotalmenteAtend = ($$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha) = fltQuantidadeAtendida)
		set $$$VARPedidoCompraLinhaQuantidadeTotalmenteAtend(objPedidoCompraLinha) = blnQuantidadeTotalmenteAtend
	}
	else {
		if ($$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha) > fltQuantidadeAtendida) {
			// Devolver quantidade após o pedido de compra ter sido encerrado não
			// deveria ser uma situação válida. De qualquer forma,
			// aqui está a implementação para tratar esse caso.
			set fltQuantidadeTotal = $$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha) + 			
			$$$VARPedidoCompraLinhaQuantidadeArquivada(objPedidoCompraLinha)
 
			set $$$VARPedidoCompraLinhaQuantidade(objPedidoCompraLinha) = fltQuantidadeAtendida
			set $$$VARPedidoCompraLinhaQuantidadeArquivada(objPedidoCompraLinha) = fltQuantidadeTotal - fltQuantidadeAtendida
		}
		else {
			// Este caso não deve acontecer
		}
	}
	set strStatus = $$$Save("VARPedidoCompraLinha",pidPedidoCompra_$$$COMMA_pidPedidoCompraLinha,objPedidoCompraLinha,$$$YES)
	
	*/
	
	quit strStatus
 	
	
SetQuantidadeVisivel()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo ExecuteBeforeDataField na customização do campo (4)-Quantidade do form
    ;	VARPedidoCompraLinha.
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	set idPedidoCompra = $piece($get(YKEY), $get(YKOMMA), 1)
	if ($length(idPedidoCompra) > 0) {
		set YOPTION = $$OnBeforeEditAcessHook^VARPedidoCompra($get(^VARPedidoCompra(0, idPedidoCompra, 1)))
	
	} else {
		set YOPTION = 1
	}
 
	quit
	
Erro(pMensagem)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnBlurProduto^VARPedidoCompraLinha.MAC
    ; 
    ; Histórico:
    ; 	28-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	new blnErro
	
	$$$Alert(pMensagem)
	
	set $piece(pobjYFELD,Y,1) = ""
	set blnErro = $$$YES
	
	quit blnErro
	
ForcarAtualizacaoAoMudarAba()
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Força a atualização do grid de linhas do pedido de compra quando muda de aba.
    ; 	Caso contrário, a mudança do estado do campo "a arquivar" feita a seguir ocorre 
	;  	apenas na primeira vez.
    ;
    ; Chamado por:
    ;	Função LoadGrid^VARPedidoCompraLinha.MAC
    ; 
    ; Histórico:
    ; 	05-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	set idContainer = $$$COMGridEditParameterContainer(YAUSWAHL)
	kill ^WWWDATEN(YM, +$horolog, YUSER, idContainer, "Grid", YFORM)
	quit
	
CarregaFornecedorItem(pItem)
	;-------------------------------------------------------------------------------
	; Descrição:
	;	Recupera o código do fornecedor padrão que está no cadastro do item, caso exista um fornecedor vinculado
	;
	; Chamado por:
	;	OnBlurProduto^VARPedidoCompraLinha
	;
	; Ex: @$$CarregaFornecedorItem^VARPedidoCompraLinha($P(YFELD,Y,1))
	;
	; Histórico:
	;	14-Dez-20016	FC	LEAN-3	Criado	
	;-------------------------------------------------------------------------------
	$$$VAR
	
	new codForn
	
	set codForn = ""
	
	set codForn = $$$INARTFREE36($get(^INART(YM,pItem,1)))
	
	quit codForn

TemLinhasPendentes(pYKEY)
	new strStatus, sqlCountLinha
	
	set strStatus = $$$OK
	set sqlCountLinha = 0
	
	&SQL(
		SELECT COUNT(DISTINCT Linha)
		INTO :sqlCountLinha
		FROM %IGNOREINDICES SortIndex3 SQLUser.VARPedidoCompraLinha
		WHERE Company = 0
		AND NoPedido = :pYKEY
		AND $$GetQuantidadeAAtender^VARPedidoCompraLinha(NoPedido, Linha) > 0
		AND Fornecedor IS NOT NULL
	)
	
	if (sqlCountLinha <= 0) {
		set strStatus = $$$NO
	}
	
	quit strStatus
]]></Routine>
</Export>