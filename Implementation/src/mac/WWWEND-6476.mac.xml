<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWEND" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWEND
#include COMSYS
#include WWWConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		SESSION ENDE
	;
	; Note:	**** Redundant after SR16427
	;
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 23-Mar-2009	shobby	SR16427: Don't load the temporary close down form.
	; 19-Mar-2009	shobby	SR16427: Changed the 'job CleanUpBackground' to
	; 							'do CleanUpBackground' (much faster now)
	; 18-Feb-2009	FIS		SR16065: added tiemout to work properly (needs time to
	; 							start the job)
	; xx-Mar-2007	Shobby	SRBR014275: Call new cookie code.
	; 18-Jan-2007	Steve S	SR15355: Pass company to the clean up routine
	; 19-Dec-2006	JW		BR014262: Only end session for parent user.
	; 05-May-2006	Steve S	SR14508: Clean up Cache Temp's, multi-locks
	; 13-Apr-2006	JW		Removed + from user id's in lock check
	; 13-Dec-2005	Steve S	SR14019: Do NOT call WWWVAR -- this will change YUSER!!!
	; 21.04.2002	DT		Created
	;-------------------------------------------------------------------------------
	WRITE "<HTML>"
	WRITE "<BODY"
	;WRITE " onload=""window.Parent.close();self.close()"""
	;WRITE " onLoad=""self.close()"""
	WRITE " onLoad=""window.setTimeout('self.close()',500);"""       //SR16065
	WRITE ">"
	
	$$$StartScript()
	;WRITE "document.close();"
	WRITE "window.setTimeout('document.close()',500);"              //SR16065
	$$$EndScript()
	
	WRITE "<input type=button value=Close onClick=""self.close()"">"
	do CleanUpBackground(YM,YUSER)                                  //SR15355 ;SR16427
	//job CleanUpBackground(YUSER)                                  //SR14508
	WRITE "</BODY>",YCR
	WRITE "</HTML>",YCR	
	if $$$IsTopUser(YUSER) && ($get(YHYPER)=1) && ($data(%session)) {    //BR014262
		if $$RemoveCookie^COMUtilCookie(%session.SessionId) {             ;BR014275
			;set %session.EndSession = 1 ;shobby 25-Nov-2009.  Testing.  Is this what causes timeout errors?
		}
	}
	quit
	
	
End(YM,YUSER)
	;-------------------------------------------------------------------------------
	; Replacement for the main WWWEND routine.  It should not be necessary to load a
	; temporary form to close another form.
	; This is called directly (see example in WWWMENU5)
	;
	;
	; ByRefs:
	;
	; Returns:
	;
	; 19-Mar-2009	shobby	SR16427: Created
	;-------------------------------------------------------------------------------
	do CleanUpBackground(YM,YUSER)
	if $$$IsTopUser(YUSER) && ($get(YHYPER)=1) && ($data(%session)) {		//BR014262
		if $$RemoveCookie^COMUtilCookie(%session.SessionId) {                ;BR014275
			;set %session.EndSession = 1  ;shobby 25-Nov-2009.  Testing.  Is this what causes timeout errors?
		}
	}
	quit 1

	
CleanUpBackground(pYM,pYUSER)
	;-------------------------------------------------------------------------------
	; Clean up any old session-based data when logging out.
	;
	; Params: 	pYM			: The company number
	; 			pYUSER		: The YUSER number
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 09-Nov-2011	shobby	SR17936: Clean up WWWDATEN when window is closed or returned
	;								 to the Login screen.
	; 02-Mar-2010	shobby	SR17208: Improved fast version of cleanup.
	; 07-Aug-2009	shobby	SR16758: If ending the session remove any left over locks.
	; 19-Mar-2009	shobby	SR16427: Subroutine ordering through CacheTemp globals
	; 19-Feb-2009	FIS		SR16065: keep CacheTempSession*, mark session as ended
	; 18-Jan-2007	Steve S	SR15355: Clear off COMTempList entries
	; 							 Clear off YUCI-based CacheTemp's
	; 19-Dec-2006	JW		BR014262: Reset frame formed.
	; 12-May-2006	Steve S	SR14508: Created
	;-------------------------------------------------------------------------------
	new YUSER,Y,YM,strNS,strUser
	
	set YUSER = pYUSER
	set Y     = "~"
	set YM    = pYM
	set strNS = $zutil(5)
	
	if $data(^CacheTempLockInterest(YUSER)) { ;SR16758
		do RemoveLockingInterest^COMLock($piece(^CacheTempLockInterest(YUSER),Y,1),$piece(^CacheTempLockInterest(YUSER),Y,1))
	}

	// Kill off old ^WWW006 entries
	do CleanUpLocks^WWW006(YUSER,$$$YES)
	
	kill ^WWWSOR(YUSER)
	kill ^COMTempList(YM,YUSER)                                      //SR15355
	kill ^WWWDATEN(0,+$h,YUSER) ;SR17936
	
	if $data(^WWWUSER(0,YUSER)) {
		set $$$WWWUSERFrameFormed(^WWWUSER(0,YUSER,1))=""	         //BR014262
		set $$$WWWUSERTransactionnoLockReturnI(^WWWUSER(0,YUSER,1))=""
	}
		
	// Kill off any multi-locks
	do ClearOld^WWWMultiLock(YUSER)
	
	// Kill off any old cache temp's
	set strUser = $$^WWWKEYBUILD(YUSER)   ; FIXME : not used - remove?
	
	;SR17208 if '$data(^WWWCacheTempList(strNS)) || ($get(^WWWCacheTempList(strNS,"!LastBuilt"))'=+$horolog) {
	;SR17208 	job BuildList(strNS)
	;SR17208 } else {
		do ClearList(strNS,YUSER)
	;SR17208 }
 	quit
 
 
BuildList(YUCI)
	;-------------------------------------------------------------------------------
	; Build up a list of things that can be blown away.
	; Note that ordering through the ^$global variable is very slow so we have to cache
	; the results to get reasonable performance.
	;
	;
	; ByRefs:
	;
	; Returns:
	; 
	; 02-Mar-2010	shobby	SR17208: Redundant.
	; 19-Jun-2009	shobby	SR16644: Clear the list of things to clear before rebuilding.
	; 19-Mar-2009	shobby	SR16427: Created
	;-------------------------------------------------------------------------------
	quit

	;SR17208 new idBase,idGlobal
	
	;SR17208 set idBase 	 = "^CacheTemp"
	;SR17208 set idGlobal = $order(^$global(idBase),-1)
	
	;SR17208 kill ^WWWCacheTempList(YUCI)                                ;SR16644
	;SR17208 set ^WWWCacheTempList(YUCI,"!LastBuilt") = +$horolog
 	;SR17208 for {
	;SR17208 	set idGlobal=$order(^$global(idGlobal))
	;SR17208 	write !,idGlobal
	;SR17208 	quit:($extract(idGlobal,1,$length(idBase))'=idBase)     ; Only ^CacheTemp*
	;SR17208 	continue:($extract(idGlobal,1,17)="^CacheTempSession")  ;SR16065: keep session information
	;SR17208 ;	continue:($extract(idGlobal,1,14)="^CacheTempList")  	;SR16427: Keep the list of things not to keep (19-Jun-2009: Actually the variable is WWWCacheTempList)
		
	;SR17208 	set ^WWWCacheTempList(YUCI,idGlobal)=""
	;SR17208 }
	;SR17208 do ClearList(YUCI,YUSER)
	;quit
	
	
ClearList(YUCI,YUSER)
 	;-------------------------------------------------------------------------------
	; Clears out the CacheTemp variables
	;
	;
	; ByRefs:
	;
	; Returns:
	;
	; 02-Mar-2010	shobby	SR17208: Simplified using call to COMSYSGlobalQuery
	; 19-Jun-2009	shobby	SR16644: Validation added
	; 23-Mar-2009	shobby	SR16427: Enclosed subscripts of kills in quotes to
	; 							 handle YUSER values that are strings.
	; 19-Mar-2009	shobby	SR16427: Created
	;-------------------------------------------------------------------------------
	new idGlobal,objGlobal
	
	do Global^COMSYSGlobalQuery(.objGlobal,"^CacheTemp",$$$YES)			;SR17208
	
	;set idGlobal = "!LastBuilt"
	set idGlobal=""
	for {
	;	set idGlobal = $order(^WWWCacheTempList(YUCI,idGlobal))		;SR17208
		set idGlobal = $order(objGlobal(idGlobal))						;SR17208
		quit:idGlobal=""
		
		continue:($extract(idGlobal,1,17)="^CacheTempSession")  	    ;SR17208
		if $$IsValid(idGlobal) {                                     ; SR16644
			kill @(idGlobal_"("""_YUSER_""")")                       //SR15355
			kill @(idGlobal_"("""_YUCI_""","""_YUSER_""")")          //SR15355
		}
	}
 
 	do EndSession^WWWUSER(YUSER)  //SR16065:mark session as ended
 	quit
	
	
IsValid(pidGlobal)
	;-------------------------------------------------------------------------------
	; Checks whether somehow we ended up with an invalid global name
	; On MANUALWINDOWS we ended up with a global named ^CacheTempWWW0121RelTmp644ADA.
	; The dot on the end is impossible but yet it was there and trying to kill it
	; would cause the ClearList to crash.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 30-Jun-2009	GRF		SR16644: boolean macros
	; 19-Jun-2009	shobby	SR16644: Created
	;-------------------------------------------------------------------------------
	new strTemp,strTrap
	
	set strTrap = $ztrap      ; FIXME : we aren't restoring this
	set $ztrap  = "Continue"
	set strTemp = $data(@pidGlobal)
	quit $$$OK
Continue ; Internal Tag
	set $ztrap = ""
 	quit $$$NO
]]></Routine>
</Export>