<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31Add" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMGridEdit31Add
#include COMGridEdit31
	
#def1arg WWWDATEN(%args) ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",%args)
#include WWWConst
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGEAdd("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)  	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)  	$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
DisplayBatchLines(pblnGotoPage=$$$YES)
	;-------------------------------------------------------------------------------
	; Either add displayable lines to current page, or go to last page.
	;
	; Params:
	; 
	; Returns:
	;
	; History:
	; 09-Feb-2007	RPW		SR15426: Do not goto the last row.
	; 11-Nov-2005	JW		SR13834: $get - who knows why it is undefined...
	; 20-Oct-2005	JW		SR11573: Created
	;-------------------------------------------------------------------------------
	new blnContinue,intPages,YFORM
	
	if $get(^CacheTemp(YUSER,"Grid","AddBatch")) {
		kill ^CacheTemp(YUSER,"Grid","AddBatch")
		set YFORM       = $$$GRIDName
		set intPages    = $$$GRIDNumPages
		set blnContinue = ($get($$$GRIDPage) = intPages)		//SR13834
		
		write YCR,$$MadeChange^COMGridEdit31S()
		write:pblnGotoPage YCR,$$$GRIDGoToPage(intPages,intPages,"B",blnContinue) // SR15426
	}
	
	quit
	
	; Copy : do AddLine^COMGridEdit31Add(objLine,strData,,$$$YES,"",$$$YES,$$$NO,$$$NO)
	
AddLine(pYFELD,pYKEY,YFORM,pblnCreateRow=$$$YES,pidParent="",pblnInsert=$$$NO,pblnNEEDNAME=$$$NO,pblnNewLine=$$$NO,&pintAddedRowId)
	;-------------------------------------------------------------------------------
	; Add a line to the grid that is not stored in the global
	; Either a new line (pYFELD doesn't exist) from inside the grid
	; Otherwise a populated record from outside.
	;
	; Also called as $$$GRIDAddLine
	; 
	; Params:
	; 1.	pYFELD			data for the line
	; 2.	pYKEY			the id of the line - null if appending, e.g. 4.03 if
	;							copying line 4* and already have 4.01 and 4.02
	; 3.	YFORM			Form name - obtained from ^CacheTemp if blank
	; 4.	pblnCreateRow	? Batch Mode?
	; 5.	pidParent		key of the parent line
	; 6.	pblnInsert		#6 / #8 = $$$NO  / $$$YES for create new line with [NEW] button
	;						        = $$$YES / $$$NO  for copy
	;						        = $$$NO  / $$$NO  for create new line OTHER than [NEW] button
	; 7.	pblnNEEDNAME	Set to $$$YES in COMViewFilter call, otherwise $$$NO (currently)
	; 8.	pblnNewLine		YES if this line was added by pressing the [New] button on the grid.
	; 
	; Passed Implicitly:
	;	YGRIDLOADED		boolean
	; 
	; Returns: nil
	;
	; History:
	; 11-Aug-2009	GRF		SR16787: kill existing "REFRESH" list; call CheckRefresh
	; 03-Sep-2008	shobby	SRBR014893: Don't display the 'Save Changes?' message for a new (empty) line.
	; 03-Jun-2008	GRF		SR15739: Revised code : LineDataAdd^COMGridEdit31Body2
	; 26-May-2008	GRF		SR15739+: single call to form name
	; 22-May-2008	GRF		SR15739: *** REVERT CHANGES FROM 15-May onwards
	; 21-May-2008	GRF		SR15739: Split line for readability
	; 19-May-2008	HQN		SR15759: Don't re-sort when Adding from the New Button, already done
	; 16-May-2008	HQN		SR15739: Empty grids that have been sorted have no focus field
	; 15-May-2008	HQN		SR15739: Re-sort if list was sorted prior, direct insert
	;							of DISPLAYORDER will be invalid
	; ***********
	; 28-Nov-2007	shobby	SRBR014826: pblnNewLine
	; 28-Nov-2006	JW		SR15249: Moved success check to top.
	; 13-Nov-2006	JW		SR14550: Get the new record here - not in BodyFieldCell.
	; 05-Sep-2006	JW		SR14979: Always display added line
	; 07-Aug-2006	JW		SR14730: Put success check in here, codecheck.
	; 10-Apr-2006	JW		SR14421: Update for row insertion. Added pblnInsert
	; 11-Nov-2005	JW		SR13834: $get - who knows why it is undefined...
	; 19-Oct-2005	JW		SR11573: Paging.
	; 02-Sep-2005	RPW		SR11983: Set YGRIDLOADED to $$$YES so that we know this
	;							base grid line was added by a user initiated event.
	;							This has to be changed to be passed through to the
	;							callback OnLineAdded later, but this was too much
	;							stuffing around before a build.
	; 24-Aug-2005	shobby	SR11983:Parameter to mark that this is for an expanded line.
	; 23-May-2005	JW		SR12324: Use WWWKEYBUILD - was incorrect for multiple keys.
	; 27-Apr-2005	JW		SR12226: Move focus to first cell.
	; 21-Mar-2005	shobby	Passed YFORM as a parameter into GetNextLine
	; 28-Feb-2005	JW		Added pYKEY parameter - instead of always counter.
	; 18-Feb-2005	JW		Cleaned up - added outOfGrid boolean
	; 13-Jan-2005	JW		Created (Needs clean up)
	;-------------------------------------------------------------------------------
	new blnSuccess,idParentRow,idOldRow,idRow,intCount,intPages,lstLinks
	new oldYKEY,strGridName,YKEY,YYKEY
	
	;if $get(YFORM)="" set YFORM = $get(^CacheTemp(YUSER,"Grid","Name"))
	set strGridName = $$$GRIDName                     ; SR15739+
	if $get(YFORM)="" set YFORM = strGridName         ; SR15739+
	
	if $get(^CacheTemp(YUSER,"Grid","AddBatch")) {
		set pblnCreateRow = $$$NO
	}
	$$$LogR("AddLine",$get(pYFELD)_"<"_YUSER_"<"_YFORM_"<"_pblnNEEDNAME_"<"_$get(pidParent))
	$$$LogRm(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEROW"))
	
	if YFORM'=strGridName {                           ; SR15739+
	;if YFORM'=$get(^CacheTemp(YUSER,"Grid","Name")) {
		;Additional lines linked to a grid line.  Used when starting the grid to remove any 
		;artifacts left over from a previous instance of the grid.
		
	;	set lstLinks=$get(^WWWDATEN(YM,+$horolog,YUSER,$get(^CacheTemp(YUSER,"Grid","Name")),"V","LINKS"))
	;	if $find(";"_lstLinks_";",";"_YFORM_";")=0 {
	;		set $piece(^WWWDATEN(YM,+$horolog,YUSER,$get(^CacheTemp(YUSER,"Grid","Name")),"V","LINKS"),";",$length(lstLinks,";")+1)=YFORM
	;	}
		
		set lstLinks=$get(^WWWDATEN(YM,+$horolog,YUSER,strGridName,"V","LINKS")) ; SR15739+
		if $find(";"_lstLinks_";",";"_YFORM_";")=0 {
			set $piece(^WWWDATEN(YM,+$horolog,YUSER,strGridName,"V","LINKS"),";",$length(lstLinks,";")+1) = YFORM ; SR15739+
		}
		
	} else {
		set YGRIDLOADED=$$$YES
	}
	
	if 'pblnNEEDNAME {
		set idRow      = $$GetNextLine(YFORM,.pYKEY,pblnInsert)
		set idOldRow   = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEROW",pYKEY,1))
		set blnSuccess = ((idOldRow="") || $$$KilledRecord(idOldRow,YFORM))
		
	} else {    ; COMViewFilter call
		set idRow      = $$GetNextLine(YFORM,pYKEY,pblnInsert)
		set blnSuccess = $$$YES
	}
	
	if blnSuccess {
		set YKEY = $$GetYKEYContainer^COMGridEdit31Interface()
		if YKEY = "" {                             // Do not require lines to relate to header
			set YYKEY = $$^WWWKEYBUILD(pYKEY)
		} else {
			set YYKEY = $$^WWWKEYBUILD(YKEY_","_pYKEY)
		}
		
		set idParentRow=""
		if pidParent'="" {
		;	set idParentRow = $get(^WWWDATEN(YM,+$horolog,YUSER,$$$GRIDName,"V","REFERENCEROW",pidParent,1))
			set idParentRow = $get(^WWWDATEN(YM,+$horolog,YUSER,strGridName,"V","REFERENCEROW",pidParent,1))   ; SR15739+
			set ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","PARENT",idParentRow,idRow) = ""
		}
		
		if $data(pYFELD) {
			set ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","YFELD",idRow,1) = pYFELD
		} else {
			set pYFELD = $$GetNewRecord(YFORM,YYKEY,idRow)
		}
	;	do LINEDATA^COMGridEdit31Body(YFORM,YYKEY,pYFELD,idRow,.intCount,$$$YES,,,pblnNewLine)	 ;BR014826 ; SR15739 03-Jun-2008
		set pintAddedRowId = idRow	//SRxxxx
		do LineDataAdd^COMGridEdit31Body2(YFORM,YYKEY,pYFELD,idRow,.intCount,pblnNewLine)
		do SetRefresh^COMGridEdit31Events(YFORM,YYKEY,pYFELD)   ; SR16787
		;                                                              pblnDisplay
	; vvv *** REVERTED 22-May-2008 SR15739
	;	; Re-sort if list was sorted prior to insertions
	;	
	;	if $data($$$WWWDATEN("LASTSORT")) && $data($$$WWWDATEN("FOCUSFIELD")) && 'pblnNewLine {
	;		do OnSortGrid^COMGridEdit31Events($$$WWWDATEN("FOCUSFIELD"),$$$WWWDATEN("LASTSORT"))    ; SR15739 ; SR15759 ; 21-May-2008
	;	}
	; ^^^
		
		; FIXME : <HUYN> Regarding COMView filter as header for Grid Edit.
		;         May need to distinguish between regular SQL result set and code-generated
		;         result set (with additional filtering not available through SQL) in order
		;         to permit OnBeforeDisplayLine (e.g. for INReqIssueLine)
		
		set $$$GRIDRowCount = intCount
			
		if pblnCreateRow {
			set intPages = $$$GRIDNumPages  ;FIXME.  This crashes when using FINAPInv form with additonal lines.
			if pblnInsert {                      //  Update page after insertion
				write YCR,$$$GRIDGoToPage($$GetPage^COMGridEdit31R(idRow),intPages,$$$GRIDGetFirstCell(idRow),$$$NO)
				
			} elseif (idParentRow'="") || ($get($$$GRIDPage) = intPages) {
				do DISPLAYLINE^COMGridEdit31Body(YFORM,idRow,$$$YES,idParentRow)
				if idParentRow="" {
					write YCR," moveFocusBottom(); "
				}
				
			} else {
				write YCR,$$$GRIDGoToPage(intPages,intPages,"B",$$$NO)
			}
			if 'pblnNewLine write YCR,$$MadeChange^COMGridEdit31S() ;BR014893
		}
	}
	quit
	
	
GetNewRecord(pidForm,pstrKey,pidRow)
	;-------------------------------------------------------------------------------
	; Get the default record (YFELD) to be added to the grid.
	;
	; Params:	pidForm - grid form
	;			pstrKey	- current row key
	;			pidRow	- current row id
	;
	; ByRefs:
	;
	; Returns:	string - data record
	;
	; History:
	; 19-Jun-2009	GRF		Order macro
    ; 03-Jun-2008	GRF		SR15739: Revisions to GetNextDisplayLine moved to new
    ; 							routine; parameter changes from $order direction to
    ; 							pblnReverse (1=>$$$NO, -1=>$$$YES)
	; 13-Nov-2006	JW		SR14450: Created
	;-------------------------------------------------------------------------------
	new idxForm,idClass,objData,idClsField,idFormField,strPrevYLFDAT,strValue,objFldCust,idType
	
	set idxForm = $$$Index(pidForm)
	set idClass = $$$GRIDClass(pidForm)
	
	set objData = ""
	
	set idClsField = ""
	for {
		set idClsField = $order(^WWW122s(0,5,idxForm,idClsField))
		quit:idClsField=""
		continue:idClsField=" "						// Data fields only.
		
		set idFormField = $order(^WWW122s(0,5,idxForm,idClsField,pidForm,""))
							// Get from previous line
		if $get(^CacheTemp(YUSER,"Grid","DefaultFromPreviousLine",idFormField))'="" {
	;		set strPrevYLFDAT = "Y"_$$GetNextDisplayLine^COMGridEdit31Body(pidRow,-1)_"_"_idFormField ; SR15739
			set strPrevYLFDAT = "Y"_$$GetNextDisplayLine^COMGridEdit31Body2(pidRow,$$$YES)_"_"_idFormField
			set strValue = $get($$$WWWDATEN(strPrevYLFDAT,1))
			
		} else {			// Get Default value
			set idType = $$$WWW003InputType($get(^WWW003(0,idClass,idClsField,1)))
			set strValue = $$GetDefaultValue^COMGridEdit31Body(pidForm,pstrKey,idFormField,idType,objData,idClsField)
		}
		set $piece(objData,Y,idClsField) = strValue
	}
	
	quit objData
	
	
Duplicate() ; DO NOT CALL - USE NEW VERSION
	;-------------------------------------------------------------------------------
	; REVISED VERSION IN COMGridEdit31Copy
	;-------------------------------------------------------------------------------
	; 
	; 
	; Copy the current row. The new row will have the same key + an increment.
	;
	; Called By :
	; 	COMGridEdit31Interface		$$$GRIDDuplicate - without return value -
	; 								only used by INReqCommon
	; 	COMGridEdit31R
	; 	
	; Params:
	;
	; ByRefs:
	;
	; Returns: Null for YRETVAL in COMGridEdit31R
	;
	; History:
	; 22-Jun-2008	GRF		Remove commented block
	; 24-Jan-2008	GM		SRBR014877: Created new variable "idSupplier" to get
	;							correct key and put in comments the condition for
	;							"idParent'=idHolder"
	; 19-May-2007	RPW		SR15518: Now do a forward probe and allow "originals"
	;							to be created.
	; 16-May-2007	RPW		SR15518: If an id does not exist in WWWDATEN, check if
	;							it exists in the actual data structure. If not,
	;							then we can use this number, otherwise keep going.
	; 09-May-2007	RPW		SR15514: Make the copy button work with non numerics
	; 04-Apr-2006	JW		SR14421: Created
	;-------------------------------------------------------------------------------
	quit $$Duplicate^COMGridEdit31Copy()
	
	


GetNextLine(YFORM,&pid,pblnInsert=$$$NO)
	;-------------------------------------------------------------------------------
	; Rewrite of GetNextLine
	;
	; If pid is null (called from
	;
	;
	; Returns:
	;
	; History:
	; 20-Feb-2014	shobby	CORE-355: Include some code that had not been patched from SR17673
	; 13-Sep-2013	shobby	IPIRANGA-162.1: Missing line could cause duplicate cell id's in grids with expanded lines.
	; 14-Nov-2012	shobby	SR18191: Patched in changes from SR17931.	
	; 14-Oct-2011	shobby	SR17931: REFERENCEKEY and REFERENCEROW are both used to determine the last
	;                           id, as there may be records that don't display on grid but exist on disc
	;							(and vice versa).
	; 28-Sep-2009	PPP		SR16905: Update to get the next Number (was not considering deleted lines)
	; 01-Sep-2009	shobby	SRAdhoc: Speed up determining of the last line
	; 28-Jul-2009	PPP		SR16528-2: Updated logic to get nextline
	; 14-Jul-2009	PPP		SR16528: Added code to $order inorder to get the last line (issue with 3WM)
	; 14-May-2009	GRF		SR16528: REVERTED until Issue Requisition can be checked
	; 							- okay with old but not with 13 May change.
	; 13-May-2009	GRF		SR16528: "Total" causes problem if loading multiple lines
	; 							since will return the same next line no each time.
	; 21-May-2008	GRF		SR15739: "loop" rather than single character variable
	; 28-Nov-2007	shobby	SRBR014286: DISPLAYORDER can't be used to determine the
	;							next row because it can return the id number of an
	;							existing row.
	; 29-May-2007	RPW		SR15513: Handle "backwards" numbering
	; 11-Jul-2006	JW		SR14730: Set strForm
	; 04-Apr-2006	JW		SR14421: Handle copied row #s. Use DisplayOrder.
	; 25-Aug-2005	RPW		SR11983: Handle the Total field.
	; 30-Mar-2005	shobby	Created
	;-------------------------------------------------------------------------------
	new dteToday,idHeaderKey,idLastKey,idLastRow,idLine,idLink,idLnCnt
	new idMaxLine,intDelRow,loop,lstLinks,strForm,strLink

	set dteToday = +$horolog     ; SR17673

	if $get(pid)="" {
		set pid = $order(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","REFERENCEROW",""),-1)
		; SR17814 if pid="Total" {
		for {                   ; SR17814 - Need to find the highest numeric id
			quit:(+pid=pid)
			quit:(pid="")
			set pid=$order(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","REFERENCEROW",pid),-1)
		}
		set pid=pid\1+1                                         ; 2 or 2.01 => 3
		if '$$CanLock^WWWFORMLocking($$$GRIDContainer) {
			set idHeaderKey = $$$GRIDYKEYContainer
			
			lock +^CacheTempIncrement(YFORM,idHeaderKey):10
			if $data(^CacheTempIncrement(YFORM,idHeaderKey)) {
				set pid = $increment(^CacheTempIncrement(YFORM,idHeaderKey))
			} else {
				set ^CacheTempIncrement(YFORM,idHeaderKey) = pid
			}
			lock -^CacheTempIncrement(YFORM,idHeaderKey)
		}
	}
	
	set strForm = $get(^CacheTemp(YUSER,"Grid","Name"))
	
	if pblnInsert {
		;	INSERT - 
		;		pid = 6.01	idLastKey = 6		idLine = 6			=> 6.01 Returned
		;		pid = 6.03  idLastKey = 6.02
		;		   if not yet saved				idLine = 6x02		=> 6.03 Returned
		;		   if loaded from saved copy	idLine = 8			=> 8.01 Returned
		set idLastKey = $order(^WWWDATEN(YM,dteToday,YUSER,YFORM,"V","REFERENCEROW",pid),-1)
		if idLastKey="" set idLastKey=pid                                               // SR15513
		set idLine = $get(^WWWDATEN(YM,dteToday,YUSER,strForm,"V","REFERENCEROW",idLastKey,1))
		;	NOTE : Internal Ref # will never contain text other than sys generated "x" (js has problem with dot)
		set idLine = $translate($translate(idLine,"x",".")+$$$CopyIncrement,".","x")	// increment counter
		
		
	} else {
		set idLastRow = $order(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","REFERENCEROW",""),-1) 					     ;SR17931
		if idLastRow'="" set idLastRow = $get(^WWWDATEN(0,dteToday,YUSER,strForm,"V","REFERENCEROW",idLastRow,1)) ;SR17931
		set idLastKey = $order(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","REFERENCEKEY",""),-1)					     ;SR17931
		if idLastKey>idLastRow {																			     ;SR17931
			set idLine = idLastKey																				 ;SR17931
		} else {																								 ;SR17931
			set idLine = idLastRow																				 ;SR17931
		}																										 ;SR17931
 	
		if '$get(idLine) set idLine = $order(^WWWDATEN(0,dteToday,YUSER,strForm,"V","REFERENCEROW",""),-1) ;IPIRANGA-162.1
		 
		; FIXME : This uses the earlier of the two logics preceding SR16528 - may need revision - Check charges on 3WM? <GRF>
		set lstLinks=$get(^WWWDATEN(YM,dteToday,YUSER,strForm,"V","LINKS"))
		for loop=1:1:$length(lstLinks,$$$SEMICOLON) {
			set strLink=$piece(lstLinks,$$$SEMICOLON,loop)
			if strLink'="" {
				set idLink = $order(^WWWDATEN(YM,dteToday,YUSER,strLink,"V","REFERENCEKEY",""),-1)
				$$$LogRx("idLink <"_idLink_"<"_idLine_"<")
				if idLink>idLine {
					set idLine = idLink
				}
			}
		}
		set idLine=idLine\1+1
	}
	quit idLine
]]></Routine>
</Export>