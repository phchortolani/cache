<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31R" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include WWWConst
#include COMGridEdit31
#include COMConst
	
COMGridEdit31R(YINHALT,YLFDAT)
    ;-------------------------------------------------------------------------------
    ; History:
    ; 21-Jul-2009	shobby	SR16730: New button for popup properties.
    ; 03-Jun-2008	GRF		SR15739: Revisions to Duplicate moved to new routine.
	; 25-Feb-2008	shobby	SRBR014446: Add "EXPORTTOEXCEL"
    ;-------------------------------------------------------------------------------
	new YRETVAL
	;if $g(YBED)="GRF" quit $$newCOMGridEdit31R($g(YINHALT),$g(YLFDAT))
	set YRETVAL = ""
	if $get(YLFDAT)="" set YLFDAT = ""
	if YINHALT="SETFOCUS"            {  set YRETVAL = $$SETFOCUS(YLFDAT)
	} elseif YINHALT="REORDERLAYOUT" {  set YRETVAL = $$REORDERLAYOUT(YLFDAT)
	} elseif YINHALT="TEST"		     {  set YRETVAL = $$TEST(YLFDAT)
	} elseif YINHALT="VALIDATE"      {  set YRETVAL = $$VALIDATE(YLFDAT)
	} elseif YINHALT="WWWDATEN"      {  set YRETVAL = $$WWWDATEN(YLFDAT)
	} elseif YINHALT="BODYADDROWS"   {  set YRETVAL = $$BODYADDROWS(YLFDAT)
	} elseif YINHALT="PERPAGE"       {  set YRETVAL = $$PERPAGE(YLFDAT)
	} elseif YINHALT="SEARCHDATA"    {  set YRETVAL = $$SEARCHDATA()
	;} elseif YINHALT="COPY"         {  set YRETVAL = $$Duplicate^COMGridEdit31Add()	//SR14221 ; SR15739
	} elseif YINHALT="COPY"          {  set YRETVAL = $$Duplicate^COMGridEdit31Copy()
	} elseif YINHALT="EXPORTTOEXCEL" {  set YRETVAL = $$ExportToExcel^COMGridEdit31Excel()	;BR014446
	} elseif YINHALT="POPUP"         {  set YRETVAL = $$Create^COMGridEdit31ExtraFields(YFORM,YBED,YLFDAT,$$$YES)	;SR16730
	} elseif YINHALT="ALIGN"         {  set YRETVAL = $$ALIGN(YLFDAT)
	}
	quit YRETVAL


ALIGN(YLFDAT)
	;-------------------------------------------------------------------------------
	; Aligns the width of the columns in the expanded lines to those of the primary lines.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 26-Mar-2012	shobby		SR17724: Created
	;-------------------------------------------------------------------------------
	;SR17724 Created
	new idForm,idField,strStatus,objCOMGridEditLayout,idLayout

	set idForm=$get(^WWWDATEN(YM,+$h,YUSER,YFORM,"V","LINKS"))
	if idForm'="" {
		set idField="" for { set idField=$order(^COMGridEditLayout(YM,YBED,idForm,idField)) quit:idField=""
			set strStatus=$$KILL^COMUtils("COMGridEditLayout",YBED_","_idForm_","_idField)
		}

		set idField="" for { set idField=$order(^COMGridEditLayout(YM,YBED,YFORM,idField)) quit:idField=""
			set objCOMGridEditLayout=$get(^COMGridEditLayout(YM,YBED,YFORM,idField,1))
			set $$$COMGridEditLayoutWidth(objCOMGridEditLayout)=$$$COMGridEditLayoutWidth(objCOMGridEditLayout)
			if $extract(idField)="P" {
				set idLayout=YBED_","_idForm_",P"_$order(^WWW121(0,idForm,""),-1)
			} else {
				set idLayout=YBED_","_idForm_","_idField
			}
			set strStatus=$$Save^COMUtils("COMGridEditLayout",idLayout,objCOMGridEditLayout,$$$YES)
		}
	}
	quit $$$YES
	 
newCOMGridEdit31R(pstrEventVal,YLFDAT)    ; see SR16533 <GRF> Test Fix for BODYADDROWS issue - not enabled yet
    ;-------------------------------------------------------------------------------
    ; History:
    ; 03-Jun-2008	GRF		SR15739: Revisions to Duplicate moved to new routine.
	; 25-Feb-2008	shobby	SRBR014446: Add "EXPORTTOEXCEL"
    ;-------------------------------------------------------------------------------
	new YRETVAL,YINHALT
 
	set YRETVAL = ""
	if $get(YLFDAT)="" set YLFDAT = ""
	if pstrEventVal="SETFOCUS"            {  set YRETVAL = $$SETFOCUS(YLFDAT)
	} elseif pstrEventVal="REORDERLAYOUT" {  set YRETVAL = $$REORDERLAYOUT(YLFDAT)
	} elseif pstrEventVal="TEST"		  {  set YRETVAL = $$TEST(YLFDAT)
	} elseif pstrEventVal="VALIDATE"      {  set YRETVAL = $$VALIDATE(YLFDAT)
	} elseif pstrEventVal="WWWDATEN"      {  set YRETVAL = $$WWWDATEN(YLFDAT)
	} elseif pstrEventVal="BODYADDROWS"   {  set YRETVAL = $$BODYADDROWS(YLFDAT)
	} elseif pstrEventVal="PERPAGE"       {  set YRETVAL = $$PERPAGE(YLFDAT)
	} elseif pstrEventVal="SEARCHDATA"    {  set YRETVAL = $$SEARCHDATA()
	;} elseif pstrEventVal="COPY"         {  set YRETVAL = $$Duplicate^COMGridEdit31Add()	//SR14221 ; SR15739
	} elseif pstrEventVal="COPY"          {  set YRETVAL = $$Duplicate^COMGridEdit31Copy()
	} elseif pstrEventVal="EXPORTTOEXCEL" {  set YRETVAL = $$ExportToExcel^COMGridEdit31Excel()	;BR014446
	}
 
	quit YRETVAL
 	/*
ADDLINE(pYLFDAT="")			// Currently not in use.
    ;-------------------------------------------------------------------------------
    ; Adds an expanded line to the grid
    ;
    ; Returns:
    ;
    ; History:
    ; 24-Aug-2005	shobby	SR11983:Parameter to mark that this is for an expanded line.
    ; 06-Apr-2005	shobby	Created SR:SR11983
    ;-------------------------------------------------------------------------------
	new YFORM,YKEY,YFELD,ROW,PARENT
	
	set YFORM=$piece(pYLFDAT,";",1)
	set YKEY=$piece(pYLFDAT,";",2)
	set ROW=$piece($piece(pYLFDAT,";",3),"_",1)
	set PARENT=$piece(pYLFDAT,";",4)
	set YFELD=$piece(pYLFDAT,";",5,9999)
	
	;do AddLine^COMGridEdit31(YFELD,YKEY,YFORM,$$$NO,ROW)
	do AddLine^COMGridEdit31Add(YFELD,YKEY,YFORM,$$$NO,PARENT)
	quit ""
 
 	
 BODYADDROWS(pYLFDAT="")
	new strRETVAL,blnContinue,YROW,YSUCH,intLimit
	
	set blnContinue = $piece(pYLFDAT,Y,1)
	set YROW        = $piece(pYLFDAT,Y,2)
	set YSUCH       = $piece(pYLFDAT,Y,3)
	set intLimit    = $piece(pYLFDAT,Y,4)
	set strRETVAL   = $$BODYADDROWS^COMGridEdit31Body(blnContinue,.YROW,.YSUCH,YROW+10)
	quit strRETVAL
 	*/
 
BODYADDROWS(pYLFDAT="")
	;-------------------------------------------------------------------------------
	; History:
	; 19-Oct-2005	JW		SR11573: Rewritten
	;-------------------------------------------------------------------------------
	new blnContinue,intPage,strRETVAL
	
	set intPage     = $piece(pYLFDAT,Y,1)
	set blnContinue = $piece(pYLFDAT,Y,2)
	
	set strRETVAL = $$BODYADDROWS^COMGridEdit31Body(intPage,blnContinue)
	quit strRETVAL
	
	
PERPAGE(pintPerPage="") 
	;-------------------------------------------------------------------------------
	; Change the number per page
	;
	; Params:
	;
	; Returns:
	;
	; History:
    ; 30-Oct-2008	SCR		SR16026: Use Get Rows Per Page function instead of Macro
	; 14-May-2008	shobby	SRBR014943:GRIDPerPage (use $get)
	; 20-Oct-2005	JW		SR11573: Created
	;-------------------------------------------------------------------------------
	new blnOk,intPrev
	
	set intPrev = $$GetRowsPerPage^COMGridEdit31(YBED,YFORM)
	if (pintPerPage > 0) && (pintPerPage '= intPrev ) && (pintPerPage\1 = pintPerPage) {
		do GetRowsPerPage^COMGridEdit31(YBED,YFORM,pintPerPage)
		set blnOk = $$$YES_Y_$$$GRIDNumPages
		
	} else {
		set blnOk = $$$NO_Y_intPrev
	}
	quit blnOk	
	
 
REORDERLAYOUT(pYLFDAT)
    ;-------------------------------------------------------------------------------
    ; Reorders the order of displayed columns
    ;
    ; Returns:
    ;
    ; History:
    ; 15-Mar-2012	shobby	SR17724.29: Fixed problem when dragging from the scroll area
    ;							in to the first column of the fixed area.
    ; 13-Apr-2010	GRF		-: loop rather than idx; idForm rather than strForm
    ;							(confusion with strFrom)
    ; 15-Dec-2005	RPW/PO	SR13940: Ordering of the columns is now inverted.
    ; 12-Sep-2005	JW		SR13099: Store changes in WWW122D not WWW122.
    ; 26-Jun-2005	shobby	Removed the cached column order so that the new order is
    ; 							used when creating new lines.
    ; 07-Feb-2004	shobby	Improved positioning when multiple rows have same value.
    ; 29-Dec-2004	Shobby	SR10061: Created
    ;-------------------------------------------------------------------------------
	new idField,idForm,intFrom,intTo,loop,strOrder,objField,objFieldOld,strFrom,strStatus,strTo

	set idForm  = $get(^CacheTemp(YUSER,"Grid","Name"))
	
	set intFrom = $piece($piece(pYLFDAT,";",1),"_",3)   ; FIXME : intFrom/intTo are not integers
	set intTo   = $piece($piece(pYLFDAT,";",2),"_",3)

	set idForm=YFORM ; SR17724.29
	if $piece(pYLFDAT,";",3)'="" {
		do setFixedColumns^COMGridEdit31V2(idForm,$piece($piece(pYLFDAT,";",3),",",2)) ;SR17724.29
	}
	
	set strFrom	= $$$COMMA_intFrom_$$$COMMA
	set strTo	= $$$COMMA_intTo_$$$COMMA
	
	set strOrder = $$$COMMA_$$GetColumnOrder^COMGridEdit31Body(idForm)_$$$COMMA
	set strOrder = $piece(strOrder,strFrom,1)_$$$COMMA_$piece(strOrder,strFrom,2)			// Remove column
	if intTo="" {
		;At the start 17724.29
		set strOrder=$$$COMMA_$piece(strFrom,$$$COMMA,2)_strOrder
	} else {
		set strOrder = $piece(strOrder,strTo,1)_$$$COMMA_intTo_strFrom_$piece(strOrder,strTo,2)	// Re-add
	}
	set $extract(strOrder) = ""						// Remove end commas
	set $extract(strOrder,$length(strOrder)) = ""
	
	for loop=1:1:$length(strOrder,$$$COMMA) {
		set idField = $piece(strOrder,$$$COMMA,loop)
		
		set objField    = $get(^WWW122D(0,idForm,idField,YM,1))
		set objFieldOld = objField
		
		set $$$WWW122DDisplayOnPage(objField)     = 1
		set $$$WWW122DLinePosition(objField)      = loop
		set $$$WWW122DTabulatorPosition(objField) = 1
		
		if objFieldOld'=objField {
			set strStatus = $$$Save("WWW122D",idForm_","_idField_","_YM,objField,$$$YES)
		}
	}
	set ^CacheTemp(YUSER,"Grid",YFORM,"COLUMNORDER")=strOrder ;SR12743
	
	quit $$$OK
	
	
VALIDATE(pstrInput)
    ;-------------------------------------------------------------------------------
    ; Validates the integrity of the contents of the grid that are about to be saved.
    ;
    ; Returns:	error message if any, otherwise ""
    ;
    ; History:
    ; 11-Mar-2009	HQN		AdHoc: Pass full parameter list explicitly use idForm
    ; 27-Jun-2006	JW		SR13755: Return message not status.
    ; 26-Jun-2006	JW		SR12775: Pass YFELD to Validate
    ; 30-Sep-2005	JW		SR11573: Just pass in line, not field
    ; 14-Apr-2005	Paul K	SR12136: Pass through 1 to run grid's OnBeforeSave code
    ; 28-Feb-2005	JW		Check objdisc for data
    ; 31-Jan-2004	shobby	Code Check.
    ; 23-Nov-2004	Shobby	Created (SR10468)
    ;-------------------------------------------------------------------------------
	new strForm,idKey,strStatus,objMemory,objOrig,idLine,strKey,strMessage
	
	set strStatus  = $$$OK
	set strMessage = ""
	
	set strForm = $get(^CacheTemp(YUSER,"Grid","Name"))
	if strForm'="" {
		set idKey = ""
		for {
			set idKey = $order(^WWWDATEN(YM,+$horolog,YUSER,strForm,"V","REFERENCEKEY",idKey))
			quit:idKey=""
			
			if '$$$KilledRecord(idKey,strForm) {				
				set strKey    = $get(^WWWDATEN(YM,+$horolog,YUSER,strForm,"V","REFERENCEKEY",idKey,1))
				set idLine    = $$$KEY2(strKey)
				set objMemory = $$GetYFELD^COMGridEdit31G(strForm,idKey,$$$YES,.objOrig)
				
				if '$data(objOrig) || (objMemory'=objOrig) {
					set strStatus = $$Validate^COMGridEdit31Save("Y"_idKey,objMemory,$$$YES,strForm)
				}
			}
			if $$$ISERR(strStatus) {
				set strMessage = $$$Text(strStatus)     ; Decode status
				quit
			}
		}
	}
	quit strMessage
 
 
DELETE()
	;-------------------------------------------------------------------------------
	; Delete ^CacheTemp Grid data, so grid will be remade on next display.
	; Called from OnAfterDelete procedure of parent form.
	; 							
	; Note: only necessary when grid is displayed on a page other than the first.
	; 
	; Returns: nil
	;
	; History:
	; 19-Jul-2005	RPW		SR12981: Moved CleanupPreviousInstance to COMGridEdit31Tools
	; 06-Jan-2005	PO & JW	SR11425 Created
	;-------------------------------------------------------------------------------
	do CleanUpPreviousInstance^COMGridEdit31Tools($$$GRIDName)
	
	kill ^CacheTemp(YUSER,"Grid")
	quit
	
	
SETFOCUS(YLFDAT)
    ;-------------------------------------------------------------------------------
    ; Changes the active grid on the shared form.
    ;
    ; Returns:
    ;
    ; History:
    ; 15-Oct-2004	shared	Created
    ;-------------------------------------------------------------------------------
	new YRETVAL
 
	set YRETVAL=""
	if $get(YLFDAT)="" {
		kill ^CacheTemp(YUSER,"Grid","ActiveGrid")
	} else {
		set ^CacheTemp(YUSER,"Grid","ActiveGrid")=YLFDAT
	}	
	quit YRETVAL
	
	
WWWDATEN(YLFDAT)
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; History:
    ; 07-Apr-2005	shobby	SR10549: Passed Column number into the WWWDATEN routine.
    ; 							Required because Form Column does not always match
    ; 							Class Column.
    ;-------------------------------------------------------------------------------
	new YFORM,YART,YLFN,YROW,YBBN
	
	set YFORM = $piece(YLFDAT,Y,1)
	set YART  = $piece(YLFDAT,Y,2)
	set YLFN  = $piece(YLFDAT,Y,3)
	set YROW  = $piece(YLFDAT,Y,4)
	set YBBN  = $piece(YLFDAT,Y,5)
	set $piece(^WWWDATEN(YM,+$horolog,YUSER,YFORM,YART,1),Y,YLFN) = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","Y"_YROW_"_"_YBBN,1))
 
	quit $$$YES
	
	
HideShowRows(pintCol,blnChecked=$$$YES,pblnShow="",pblnRefresh=$$$YES,pstrValue,pblnEquals=$$$YES,pblnKill=$$$YES)
    ;-------------------------------------------------------------------------------
    ; Hide selected rows based on whether a field is checked
    ; 
    ; Inputs:
    ;	pblnShow		Set to $$$YES to display the line
    ;					       $$$NO  to hide the line
    ;					       ""     to toggle between hide and show
    ;	
    ;	Process removes current HIDDEN line Status for ***ALL*** lines and then
    ;	rebuild the HIDDEN values based on the instruction given.
    ;	
    ;	Test if a particular field (pintCol) is either equal to or not equal to
    ;	(pblnEquals) a particular value (pstrValue).
    ;	
    ;	If we need to check for $$$YES (1) and $$$NO (0 or null) we set blnChecked
    ;	and do not pass ANYTHING - even NULL in as pstrValue.
    ;	This allows us to check for an actual null in a field when we set pstrValue to null.
    ;	
    ;	pblnRefresh=$$$YES	Return to the current/first? grid page - check
    ;
    ;	pblnKill : If there are multiple conditions to be considered, set to $$$YES
    ;	           for the first condition and then $$$NO for subsequent conditions.
    ;	           Any matches are added to the list of hidden entries; a hidden
    ;	           entry will not be "shown" by a subsequent condition.
    ; 
    ; ByRef: YUSER,YFORM
    ; 
    ; Returns:
    ;
    ; History:
    ; 13-Oct-2010	shobby	SR17541: Add pblnKill - optionally kill HIDDEN, we may
    ;							want multiple conditions.
    ; 22-Feb-2006	Steve S	SR14149: Compare with any value, not just checkbox
    ; 25-Jan-2005	JW		SR13087: Check for killed records
    ; 14-Oct-2005	JW		SR11573: Rewrote to be Cache not JS (moved from *S)
    ; 09-Mar-2005	JW		Created
    ;-------------------------------------------------------------------------------
	new WWWDATEN,blnShow,idRow,intCount,blnMatch
	
	quit:$get(pintCol)=""
	
	if pblnShow="" {
		set pblnShow = $data($$$WWWDATEN("HIDDEN"))
	}
	if pblnKill kill $$$WWWDATEN("HIDDEN")
	if 'pblnShow {
		set intCount = 0
		set idRow=""
		for {
			set idRow = $order($$$WWWDATEN("REFERENCEKEY",idRow))
			quit:idRow=""
			continue:$$$KilledRecord(idRow,YFORM)
			
			if '$data(pstrValue) {
				if pblnEquals {
					set blnMatch = (+$get($$$WWWDATEN("Y"_idRow_"_"_pintCol,1)) = blnChecked)
				} else {
					set blnMatch = (+$get($$$WWWDATEN("Y"_idRow_"_"_pintCol,1)) '= blnChecked)
				}
				
			} else {
				if pblnEquals {
					set blnMatch = ($get($$$WWWDATEN("Y"_idRow_"_"_pintCol,1)) = pstrValue)
				} else {
					set blnMatch = ($get($$$WWWDATEN("Y"_idRow_"_"_pintCol,1)) '= pstrValue)
				}
			}
			
			if blnMatch {
				set WWWDATEN(idRow) = $$$YES
				set intCount = intCount + 1
			}
		}
		
		set WWWDATEN = intCount
		merge $$$WWWDATEN("HIDDEN") = WWWDATEN
	}
	
	if pblnRefresh write YCR,$$$GRIDGoToPage(1,$$$GRIDNumPages,"T",$$$NO)
	quit
	
	
ShowAllRows()
	;-------------------------------------------------------------------------------
	; Undoes any hidden rows from HideShowRows
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 22-Feb-2006	Steve S	SR14110: Created
	;-------------------------------------------------------------------------------
	kill $$$WWWDATEN("HIDDEN")
	write YCR,$$$GRIDGoToPage(1,$$$GRIDNumPages,"T",$$$NO)
 
	quit
	
	
	;-------------------------------------------------------------------------------
	; Examples: (Ignoring form name)
	; 
	;   (12,$$$YES)				Hide column 12
	;   
	;   ("1;2;3","0;1;1")		Show column 1, hide columns 2 and 3
	;   
	;   ("1;2;3")				Hide columns 1, 2 & 3
	;   
	;   ("1;2;3","1;0")			Show column 1, explicitly hide column 2 and hide
	;   						column 3 because that was the last hide/show option
	;   						specified.
	;-------------------------------------------------------------------------------
HideShowColumns(pstrCols="",pstrHideSwitches="",pstrForm="")
	;-------------------------------------------------------------------------------
	; Hide / Show columns dynamically.
	;
	; Params:	pstrCols         - semicolon-delimited list of form column ids
	; 			pstrHideSwitches - semicolon-delimited list of whether to
	; 			                   hide=$$YES, or show=$$$NO
	; 			                   [other values will be treated as $$$NO]
	; 			
	; 	Note: 	If an element of strHideSwitches is "", it will default to the previous
	; 			element. First element defaults to $$$YES.  
	; 			e.g. If all elements need to be hidden, just pass in "".
	; 
	; Returns:
	;
	; History:
	; 15-Jul-2010	CB/GRF	SR17403: Synchronise Grid Widths
	; 17-Jun-2009	GRF		Doco; clarify variable name (pstrHideSwitches); prefixes
	; 14-Oct-2005	JW		SR11573: moved from *S
	; 16-Mar-2005	JW		Changed 2nd parameter to a list
	; 10-Mar-2005	JW		SR11848: Created
	;-------------------------------------------------------------------------------
	new blnHide,idCol,intCols,loop
	
	quit:$get(pstrCols)=""
	quit:'$$GridExists^COMGridEdit31G()
	
	if $get(pstrForm)="" set pstrForm = $$$GRIDName
	set blnHide = $$$YES
 
	set intCols = $length(pstrCols,$$$SEMICOLON)
	for loop=1:1:intCols {
		set idCol = $piece(pstrCols,$$$SEMICOLON,loop)
		if $piece(pstrHideSwitches,$$$SEMICOLON,loop)'="" {
			set blnHide = $piece(pstrHideSwitches,$$$SEMICOLON,loop)
		}
		write " hideShowColumn("_idCol_",("_blnHide_"==1),'"_pstrForm_"');" 
	}
	write " syncGridWidths();" ; SR17403
	quit
	
	
SEARCHDATA()
	;-------------------------------------------------------------------------------
	; Search invoices
	;
	; Returns:
	;
	; History:
	; 26-Mar-2007	PO		-: New idFilter,objFilter
	; 04-May-2006	JW		SR14508: Changed YDATEI to YFORM
	; 08-Jun-2005	JW/RW	Created SR12484
	;-------------------------------------------------------------------------------
	new blnGroup,blnNoConversion,idComparitor,idx,idField,idFilter,idKey
	new loop,objFilter,strKey,strValue,YDATEI,YFORM
	
	set strKey = $$GetYKEY^COMGridEdit31G()
	set YFORM = $$$GRIDName
	
	do Initialise^COMViewCustom(YFORM,"RecordSelected^COMGridEdit31R")
	if strKey="" {
		set idFilter = ""
		for {
			set idFilter = $order(^CacheTempView(YUSER,"Filter",idFilter))
			quit:idFilter=""
			
			set objFilter = $get(^CacheTempView(YUSER,"Filter",idFilter))
 
			set idField         = $$$COMViewFilterField(objFilter)
			set strValue        = $$$COMViewFilterValue1(objFilter)
			set idComparitor    = $$$COMViewFilterComparator(objFilter)
			set blnGroup        = $$$COMViewFilterGroupBy(objFilter)
			set blnNoConversion = $$$COMViewFilterNoconversion(objFilter)
 
			do AddFilter^COMViewCustom(idField,idComparitor,strValue,blnGroup,blnNoConversion)
		}
		
	} else {
		set idKey = ""
		for loop=1:1:$length(strKey,",") {
			set idKey = $piece(strKey,",",loop)
			do AddFilter^COMViewCustom("P"_loop,"=",idKey)
		}
	}
	do Start^COMViewCustom()
	quit ""
	
	
RecordSelected(pobjResultSet) 
	;-------------------------------------------------------------------------------
	; Go to (first) record selected
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 13-Feb-2007	RPW		SR15426: Get the correct YUSER
	; 21-Oct-2005	JW		SR11573: Created
	;-------------------------------------------------------------------------------
	new blnUpdate,idKey,idRow,idUser,intPage,parentKey,strKey,YFORM
	
	if pobjResultSet.Next() {
		set strKey=$$GetID^COMViewCustom(pobjResultSet)
		
		// SR15426: vvv
		set idUser=$$$GetParentUser(YUSER)
		new YUSER
		
		set YUSER=idUser
		// SR15426: ^^^
		
		set parentKey = $piece(strKey,",",1,$length(strKey,",")-1)
		set idKey     = $piece(strKey,",",$length(strKey,","))
		set YFORM = $$$GRIDName
		
		if parentKey = $$GetYKEY^COMGridEdit31G() {		// Same parent
			set idRow = $get($$$WWWDATEN("REFERENCEROW",idKey,1))
			
			if idRow'="" {
				if $data($$$WWWDATEN("REFERENCEKEY",idRow,1)) {	// FIXME - not displayed
					if $$$KilledRecord(idRow,YFORM) {
						$$$Alert("Com00231")	  ; "That record has been deleted."
					
					} elseif $$$ViewableRow(idRow,YFORM) {
						
						if $$$DisplayedRecord(idRow,YFORM) {
							set intPage = $$$GRIDPage
							set blnUpdate=$$$YES
							
						} else {
							set blnUpdate=$$$NO
							set intPage = $$GetPage(idRow)
						}
						write $$$GRIDGoToPage(intPage,$$$GRIDNumPages,$$$GRIDGetFirstCell(idRow),blnUpdate)
					}
				}
			}
		}
		// else {		TODO
		//	do GoToForm^COMGridEdit31G($$$GRIDContainer,parentKey,$get(^CacheTemp(YUSER,"Grid","YSEITE")),idKey)
		// }
	}
	quit
	
	
GetPage(pidRow)
	;-------------------------------------------------------------------------------
	; Get the page a record should be on - traverse the sorted records back to the
	; start from the current row (pidRow) to determine how many pages exist before
	; this position.
	;
	; Params:
	;
	; Returns:
	;
	; History:
    ; 30-Oct-2008	SCR		SR16026: Use Get Rows Per Page function instead of Macro
    ; 03-Jun-2008	GRF		SR15739: Revisions to GetNextDisplayLine moved to new
    ;							routine; parameter changes from $order direction to
    ;							pblnReverse (1=>$$$NO, -1=>$$$YES)
	; 14-May-2008	shobby	SRBR014943: $$$GRIDPerPage (Use $get)
	; 21-Oct-2005	JW		SR11573: Created
	;-------------------------------------------------------------------------------
	new intCount,intPage,perPage
	
	set perPage = $$GetRowsPerPage^COMGridEdit31(YBED,YFORM) ;SR16026  ;BR014943
	for intPage=1:1 {
		set intCount = 0
		while intCount < perPage {
			set pidRow = $$GetNextDisplayLine^COMGridEdit31Body2(pidRow,$$$YES)
			quit:pidRow=""
			
			set intCount = intCount + 1
		}
		quit:pidRow=""
	}
	quit intPage
	
	
TEST(YLFDAT)
	new x,loop,y,name
	
	set x=$zhorolog
	set ^y(1,2,3)="aaa"
	for loop=1:1:1000000 {
		;set name=$get(^y(1,2,3))
		set name=^y(1,2,3)
	}
	set x=$zhorolog-x
	write !,x
 	quit $$$OK 
	
]]></Routine>
</Export>