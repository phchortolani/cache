<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLProfile" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLProfile
	
#include COMSYS
#include FINConst
	
#define fldAccountType 	1
#define fldDescription 	2
#define fldAccountUsage 3
#define fldParent 		4
#define fldSign 		5
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^FINGLProfile("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
StartMake()
    ;-------------------------------------------------------------------------------
    ; Entry point for the GL Profile make process.
    ;
    ; Returns:
    ;
    ; History:
    ; 29-Apr-2006	SC		SR13942: Undo Changes
    ; 29-Mar-2006	SC		SR13942: Use JobWrapper^COMUtilJob.
    ; 22-Feb-2006	JW		SR13942: Rolled back change
    ; 20-Dec-2005	RPW		SR13942: Pass the current environment through to the job.
    ; 01-Dec-2004	Shobby	SR11080: Created
    ;-------------------------------------------------------------------------------
	new Log
	
	do StartLog^COMLog("Profile Make",.Log) ;Customer Period Totals Recalculation
	do JobWrapper^COMUtilJob("Doit^FINGLProfile(0,"""_YPARA_""","""_Log_""")",YUSER)
	
	hang 1 ;wait for the process to start up
	
	; Ready to goto the Detail form
	do RedirectForm^COMUtils("COMMsg",Log,",","","")
	
	quit
	
	
Doit(pidCompany=0,Process,Log) ; Main entry point
	;-------------------------------------------------------------------------------
	; History:
	; 07-Dec-2009	GRF		SR17041: Local error processing since FINSYSStatus
	; 							doesn't note in COMMsg (see Make)
	; 29-Apr-2006	SC		SR12942: Undo Changes.
	; 29-Mar-2006 	SC		SR13942: No longer set environment within routine. 
	; 						Maintained by calling function.
	; 02-Jun-2005	PaulK	Moved build to FINGLProfileBuild
	; 22-Feb-2005	PaulK	Reduce incedence of calling WWWVAR
	; 13-Dec-2004	GRF		SR10105 : Wrong message text shown
	; 01-Dec-2004	shobby	SR11080: Use COMLog messaging system rather than
	; 							FINSysStatus
	; 11-Feb-2004	SCR		Moved New commands
	;-------------------------------------------------------------------------------
	new strStatus
	
	;set $ztrap = "Error^FINSYSStatus"  ; 07-Dec-2009
	set $ztrap = "DoItError"
	
	$$$LogR("Doit",$get(Process))
	
	set strStatus = $$$OK
 
	;+++++++++++++++++++++++++++++++++++++++
	LOCK +^FIN("Process",0,Process):5 else  set strStatus = $listbuild("Fin00713")  ; "Unable to acquire lock"
	;+++++++++++++++++++++++++++++++++++++++
 
	if strStatus=$$$OK {
		do AddMessage^COMLog(Log,$$$Text("Fin00026"))  ; "Running"
		set strStatus = $$Make(Process,Log)
	}
	if strStatus=$$$OK {
		set strStatus = $$Build^FINGLProfileBuild(Process,Log)
	}
 	
	if strStatus=$$$OK {
		do AddMessage^COMLog(Log,$$$Text("Fin00027"))  ; "Completed"
	} else {
		do AddMessage^COMLog(Log,$$$Text(strStatus))   ; "Failed %1"
	}		
	;+++++++++++++++++++++++++++++++++++++++
	LOCK -^FIN("Process",0,Process)
	;+++++++++++++++++++++++++++++++++++++++
	quit
	
DoItError ; Internal Tag
	new strError,strErrorCode
	
	set $ztrap = ""
	set strError     = $zerror
	set strErrorCode = $piece($piece(strError,">",1),"<",2)
	do AddMessage^COMLog(Log,$$$Text("Fin00028")_" "_strErrorCode)  ; "Error"
	$$$LogRx("DoItError:"_strError)
	quit
	
	
Make(Process,Log)
	;-------------------------------------------------------------------------------
	; Make at tempory list of accounts in ^mtemp($job)
	; 
	; Process - Process Key, used for Logging
	; 
	; History:
	; 01-Dec-2004	shobby	SR11080: Use COMLog messaging rather than FINSysStatus
	; 27-Feb-2004	SCR		Added Code List
	;-------------------------------------------------------------------------------
	new idProfile,intItems,intCount,objProfile,strStatus,Tmp
	new intPercent0,intPercent1,LogEntry
	
	$$$LogR("Make",$get(Process))
	
	set intCount    = 0
	set intPercent0 = 0
	set intPercent1 = 0
	set strStatus   = $$$OK
	
	set Tmp = "^mtemp($job)"
	kill @Tmp
	
	; Get a count of the items to process
	set idProfile = ""
	for {
		set idProfile = $order(^FINGLProfile(0,idProfile))
		quit:idProfile=""
		
		set intCount=intCount+1
	}
	set intItems = intCount
	
	; Do the work
	if intItems>0 {
		set intCount = 0
		for {
			set idProfile = $order(^FINGLProfile(0,idProfile)) 
			quit:idProfile=""  
			quit:strStatus'=$$$OK
			
			set intCount    = intCount+1
			set intPercent0 = $justify(intCount/intItems*10,0,0)*10
			if intPercent1'=intPercent0 {
				do AddMessage^COMLog(Log,$$$Text($listbuild("Fin00421",intPercent0)),.LogEntry)  ; "Make - %1% Complete."
				set intPercent1 = intPercent0
			}
			set objProfile = $get(^FINGLProfile(0,idProfile,1))
			set strStatus  = $$ProcessAccount(idProfile,objProfile,idProfile,Tmp,"")
		}
	}
	
	quit strStatus
	
	
ProcessAccount(Number,pobjProfile,Profile,Tmp,CodeList)
	;-------------------------------------------------------------------------------
	; Look for Profile substitution tags and convert them
	; 
	; Number  - Account Number
	; Data    - Account Data
	; Profile - Profile Number - For Error tracking
	; Tmp     - Temporary Storage
	; 
    ; History:
	; 27-Feb-2004	SCR		Added Code List
	;-------------------------------------------------------------------------------
	new Status
	
	$$$LogR("ProcessAccount",Number_"<"_pobjProfile_"<"_Profile_"<"_Tmp_"<"_CodeList_"<")
	
	if $io["|TNT|" write !,"Processing Account ",Number," ",pobjProfile," ",Profile," ",CodeList
 	if $find(Number,"{") {
		set Status = $$ProcessCode(Number,pobjProfile,Profile,Tmp,CodeList)
	} else {
		set Status = $$ProcessSave(Number,pobjProfile,Profile,Tmp,CodeList)
	}	
	quit Status
	
	
ProcessSave(Number,pobjAccount,Profile,Tmp,CodeList)	; Save Resolved Profile
	;-------------------------------------------------------------------------------
	; 
    ; History:
    ; 30-Sep-2004	JW		SR10409: Added RollUpTo field
	; 27-Feb-2004	SCR		Added Code List
	;-------------------------------------------------------------------------------
	new Status
	
	$$$LogR("ProcessSave",Number_"<"_pobjProfile_"<"_Profile_"<")
	
	set Status = $$$OK
 
	if $find($$$FINGLAccountParent(pobjAccount),"{") {
		set Status = $listbuild("Fin00063",$$$FINGLAccountParent(pobjAccount),Number)
		; "Ledger Profile Make, Parent Account has a unresolved Code [%1] in Account %2."
	
	} elseif $find($$$FINGLProfileDescription(pobjAccount),"{") {
		set Status = $listbuild("Fin00044",$$$FINGLProfileDescription(pobjAccount),Number)
		; "Ledger Profile Make, Description has a unresolved Code [%1] in Account %2."
	
	} elseif $find($$$FINGLProfileRollUpTo(pobjAccount),"{") {		; SR10409
		set Status = $listbuild("Fin00367",$$$FINGLProfileRollUpTo(pobjAccount),Number)
		; "Ledger Profile Make, Roll Up To Account has a unresolved Code [%1] in Account %2."
	
	} elseif $data(@Tmp@("new",Number)) {             				; If Account is Already defined
		set Status = $listbuild("Fin00064",Number)
		; "Ledger Profile Make, Can not created a 2nd Account %1 "
	
	} else {
		set @Tmp@("new",Number)   = pobjAccount
		set @Tmp@("new",Number,1) = Profile
		set @Tmp@("new",Number,2) = $extract(CodeList,2,999)  ; Trim off leading comma
	}
	quit Status
	
	
ProcessCode(Number,Data,Profile,Tmp,CodeList)
	;-------------------------------------------------------------------------------
	; Process Code
	; 
	; Inputs : 
	; 		Profile		e.g. 12.3{Location}{Category}.45
	; 
    ; History:
    ; 07-Dec-2009	GRF		SR17041: use idxCodeType & retain CodeType
    ; 12-May-2006	RPW		SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
    ; 30-Mar-2005	PJK		SR11903: was quitting without return value
	; 10-Dec-2004	shobby	SR10841: Renamed from Exceptions
    ; 30-Sep-2004	JW		SR10409: Added RollUpTo field
	; 02-Jul-2004	shobby	ProfileCodeTypes are now a class.
	; 29-Jun-2004	shobby	LocationTest
	; 27-Feb-2004	SCR		Added Code List
	; 11-Feb-2004	SCR		Moved New commands
	; 09-Jul-2003	SCR		Added 'Tmp'
	;-------------------------------------------------------------------------------
	new AccountType,AccountUsage,arrProfile,CodeType,Description
	new id,idProfileChild,idProfileCode,idxCodeType,intCnt,intCodeType
	new NewCodeList,objNewProfile,objProfileCode,Parent
	new RollUpTo,Sign,Status,strModifiedAccountUsage
	
	$$$LogR("ProcessCode",Number_"<"_Data_"<"_Profile_"<")
	
	if $io["|TNT|" write !,"ProcessCode ",Number
	
	set Status = $$$OK
	
	if Data'="" {
		set AccountType  = $piece(Data,Y,$$$fldAccountType)
		set Description  = $piece(Data,Y,$$$fldDescription)
		set AccountUsage = $piece(Data,Y,$$$fldAccountUsage)
		set Parent       = $piece(Data,Y,$$$fldParent)
		set Sign         = $piece(Data,Y,$$$fldSign)
		set RollUpTo     = $$$FINGLProfileRollUpTo(Data) ; SR10409
		
		set CodeType = $piece($piece(Number,"{",2),"}",1)       ; Get Code
		;set CodeType = $$$UPPER(CodeType)           ; SR17041 vvv
		;if CodeType="" set CodeType = " "
		set idxCodeType = $$$UPPER(CodeType)
		if idxCodeType="" set idxCodeType = " "      ; SR17041 ^^^
		
		; Use Index = ^WWW101s(0,1,"CATEGORY","FINGLPROFILECODE","EN",2)=
	;	set intCodeType = +$order(^WWW101s(0,1,CodeType,"FINGLPROFILECODE",SPRACHE,""))
	;	set intCodeType = +$order(^FINGLProfileCodeTypes(0,1,CodeType,""))     ; SR17041
		set intCodeType = +$order(^FINGLProfileCodeTypes(0,1,idxCodeType,""))
		
		; FIXME : Integer so will always be numeric but user could define type "0" <GRF>
		
		if 'intCodeType set Status = $listbuild("Fin00065",CodeType,Number) ; "Ledger Profile Make, can't resolve Code [%1] in Account %2"
		
		if Status=$$$OK {
			kill idProfileCode
			kill objNewProfile
			kill intCnt
		
			do ExpandProfile(Profile,.arrProfile)  ; Find types where main entry is the parent.  arrProfile is likely to be empty.
	
			set idProfileCode = ""
			for intCnt=1:1 {
				set idProfileCode = $order(^FINGLProfileCode(0,intCodeType,idProfileCode))
				quit:idProfileCode=""
				
				if $$Exceptions(Profile,intCodeType,idProfileCode) {  ; Handle Exceptions - is location idProfileCode to be included?
					set objProfileCode = $get(^FINGLProfileCode(0,intCodeType,idProfileCode,1))
					set strModifiedAccountUsage = AccountUsage
					if $$LocationTest(Profile,CodeList,objProfileCode,.arrProfile,CodeType) {
						set objNewProfile = $$Convert(Number,CodeType,idProfileCode)
						set objNewProfile = objNewProfile_Y_AccountType
						set objNewProfile = objNewProfile_Y_$$Convert(Description,CodeType,$piece(objProfileCode,Y,1))
						set objNewProfile = objNewProfile_Y_strModifiedAccountUsage
						set objNewProfile = objNewProfile_Y_$$Convert(Parent,CodeType,idProfileCode)
						set $$$FINGLProfileRollUpTo(objNewProfile) = Y_$$Convert(RollUpTo,CodeType,idProfileCode)
						set objNewProfile(idProfileCode) = objNewProfile
					}
				}
			}
			
			set idProfileCode = ""
			for  {
				set idProfileCode = $order(objNewProfile(idProfileCode))
				quit:idProfileCode=""
				quit:$$$ISERR(Status)
				
				set objNewProfile = objNewProfile(idProfileCode)
				set Number        = $piece(objNewProfile,Y,1)
				set NewCodeList   = CodeList_";"_CodeType_"="_idProfileCode
				set Status        = $$ProcessAccount(Number,$piece(objNewProfile,Y,2,99),Profile,Tmp,NewCodeList)  ; RECURSIVE CALL
			}
		}
	} else {
		set Status = $listbuild("Fin00714",Number)  ; "No Data for GL Number %1"
	}
	quit Status
	
	
Exceptions(Profile,Type,Code)
	;-------------------------------------------------------------------------------
	; *ONLY* For Location substitution
	; 
	; History
	; 10-Dec-2004	shobby	SR10841: Renamed from Exceptions.
	;-------------------------------------------------------------------------------
	new Exclude,Include,Record,Status
	
	set Status = $$$OK
	set Record = $get(^FINGLProfile(0,Profile,1))
	
	if Type=1 {                                    ; Location
		set Include = $piece(Record,Y,9)
		set Exclude = $piece(Record,Y,10)
		if Include'="" {
			if (";"_Include_";")'[(";"_Code_";") set Status = $$$NO   ; not in Include list
		}
		if Exclude'="" {
			if (";"_Exclude_";")[(";"_Code_";")  set Status = $$$NO   ; in Exclude list
		}
	}
	quit Status
	
	
Convert(pstrData,pstrType,pstrCode)
	;-------------------------------------------------------------------------------
	; Convert profile code to data                "123.{Location}.45" => "123.09.45"
	; 
	; Inputs :	pstrData - Data to Convert        "123.{Location}.45"
	;			pstrType - Code Type              "{Location}"
	;			pstrCode - text to replace        "09"
	;			
	; History:
	; 07-Dec-2009	GRF		SR17041: pass in actual string so don't need Proper
	; 							conversion			
	;-------------------------------------------------------------------------------
	new strType,strData
	
	set strData = pstrData
	;et strType = "{"_$$Proper^COMUtilStr(pstrType)_"}"   ; SR17041
	set strType = "{"_pstrType_"}"
	if pstrData[strType {
	 set strData = $piece(strData,strType,1)_pstrCode_$piece(strData,strType,2,99)
	}
	quit strData
	
	
ParentChange(pidProfile="",pidParent="")
    ;-------------------------------------------------------------------------------
    ; Pass in "Y" params
    ;
    ; History:
    ; 24-Mar-2005	PaulK	Created
    ;-------------------------------------------------------------------------------
	new objProfile
	
	if (pidProfile="") && (pidParent'="") {  ; only change new accounts
		set objProfile = $get(^FINGLProfile(0,pidParent,1))
		if objProfile="" set objProfile = $get(^FINGLAccount(0,pidParent,1))
		set %TXT(1) = "#Y"_YFORM_"D1~"_$$$FINGLProfileAccountType(objProfile)
		set %TXT(1) = %TXT(1)_"#Y"_YFORM_"D3~"_$$$FINGLProfileAccountUsage(objProfile)
	}
	quit
	
	
GetBuddyAccount(SourceAccount="",BuddyProfile="") 
    ;-------------------------------------------------------------------------------
    ; Get Buddy Account using Profile code matching
    ; Example: 	Source Account = 10.01.20, its Profile = 10.{Location}.{Category}
    ; 			Buddy Profile  = 40.{Category}.50.{Location}
    ; 			Returns 40.20.50.01
    ; 
    ; Called By : AddProfileAccount^FINGLDistributionAccount
    ; 
    ; Returns:  Buddy Account or Null if it can not be processed
    ;
    ; History:
    ; 27-Feb-2004	SCR		Revamp (Profile Codes on each 
    ;-------------------------------------------------------------------------------
	new Status,BuddyAccount,SourceAccountRec,ProfileCodes
	new Count,Code,Value,Codes,CodeValue
	
	set Status       = $$$OK
	set BuddyAccount = "" ; Default
	
	; Step 1: Get Source Account's Profile (Must Have)
	; ================================================
	if (SourceAccount="") {
		set Status = $$$NO  ; Can not continue if no Source Account
	
	} else {
		set SourceAccountRec = $get(^FINGLAccount(0,SourceAccount,1))
		set ProfileCodes     = $$$FINGLAccountProfileCodes(SourceAccountRec)
		if ProfileCodes="" set Status = $$$NO 
	}
	
	; Step 2: Get a list of Profile codes from the Account Example {Location}="01"
	; ============================================================================
	if Status=$$$OK {
		for Count=1:1:$length(ProfileCodes,";") {
			set CodeValue = $piece(ProfileCodes,";",Count)
			set Code      = $piece(CodeValue,"=",1)
			set Value     = $piece(CodeValue,"=",2)
			if (Code'="") && (Value'="") {
				set Codes(Code) = Value	
			}
		}
	}	
	
	; Step 3: Substitute the Codes in the Buddy Profile Acct to get the Buddy Acct
	; ============================================================================
	if Status=$$$OK {
		for Count=1:1:100 {
			quit:BuddyProfile'["{"
			quit:Status=$$$NO
			
			set Code = $piece($piece(BuddyProfile,"{",2),"}",1)
			set Code = $zconvert(Code,"u")
			if Code="" {
				set Status = $$$NO
				
			} else {
				if $data(Codes(Code)) {
					set Value = Codes(Code)
				} else {
					set Status = $$$NO
				}
			}
			if Status=$$$OK {
				set BuddyProfile = $piece(BuddyProfile,"{",1)_Value_$piece(BuddyProfile,"}",2,99)
			}
		}
	}
	
	if Status=$$$OK {
		set BuddyAccount = BuddyProfile   ; FIXME : What are we doing with BuddyAccount? <GRF>
	}
	
	quit BuddyProfile
	
	
ShowAccounts(pidProfile)
	;-------------------------------------------------------------------------------
	; Show Profile Account and any GL Account generated for the Profile passed int
	; 
	; History
	; 16-Nov-2004	SCR		SR10922: Removed Profile List (Too Slow)
	; 15-Jul-2004	shobby	Parent link, will now link to Parent Account.
	; 09-Jul-2003	SCR		Corrected conversion of key ;$$^WWWUMLAU
	;-------------------------------------------------------------------------------
	new idAccount,objAccount,lstHeader,strProfile,idProfile
 
	set lstHeader=""
	set lstHeader=lstHeader_$listbuild($$$StrFINGLAccountNumber)
	set lstHeader=lstHeader_$listbuild($$$StrFINGLAccountAccountType)
	set lstHeader=lstHeader_$listbuild($$$StrFINGLAccountDescription)
	set lstHeader=lstHeader_$listbuild($$$StrFINGLAccountAccountUsage)
	set lstHeader=lstHeader_$listbuild($$$StrFINGLAccountParent)
	
	do Start^COMTable(lstHeader,$$$Text($listbuild("Fin00107",pidProfile),0))  ; Accounts For Profile %1
 
	if pidProfile'="" {
		set idAccount  = ""
		set strProfile = $$^WWWUMLAU(pidProfile,1)
		for {
			set idAccount=$order(^FINGLAccounts(0,6,strProfile,idAccount))
			quit:idAccount=""
			
			do NewLine^COMTable()
			set objAccount=$get(^FINGLAccount(0,idAccount,1))
			do InsertCell^COMTable(idAccount,"FINGLAccount",idAccount)
			do InsertCell^COMTable($$GetEnumDescription^COMUtils("FINGLACCOUNTTYPE",$$$FINGLAccountAccountType(objAccount)),"FINGLAccount",idAccount)
			do InsertCell^COMTable($$$FINGLAccountDescription(objAccount),"FINGLAccount",idAccount)
			do InsertCell^COMTable($$GetEnumDescription^COMUtils("FINGLACCOUNTUSAGE",$$$FINGLAccountAccountUsage(objAccount)),"FINGLAccount",idAccount)
			do InsertCell^COMTable($$$FINGLAccountParent(objAccount),"FINGLAccount",idAccount)
			do EndLine^COMTable()
		}
	}
	do Stop^COMTable()
	quit
	
Test
	do Doit(0,"Make")
	quit
	
PopulateCombos()
    ;-------------------------------------------------------------------------------
    ; Calls functions to populate combos.
    ;
    ; Returns: nil
    ;
    ; History:
    ; 30-Sep-2004	JW		Created
    ;-------------------------------------------------------------------------------
	kill ^FINSYSTempList(0,YUSER)
	do PopulateParentCombo()
	do PopulateRollUpToCombo()
	quit
	
	
PopulateParentCombo()
	;--------------------------------------------------------------------------
	; Populates the COMTempList for the Parent combo. 
	; Fills it full of : Parent GL Accounts that are not profile accounts 
	; 					 Parent Profiles
	; 
	; Retutns: Nothing
	; 
	; History:
	; 30-Sep-2004	JW		SR10409: Moved kill statement to PopulateCombos()
	; 28-Aug-2003	PaulK	Created
	;-------------------------------------------------------------------------------
	new idAccount,objAccount,objSYSList
	
	set idAccount = ""
	for {
		set idAccount = $order(^FINGLAccounts(0,3,2,idAccount))
		quit:idAccount=""
		
		set objAccount = $get(^FINGLAccount(0,idAccount,1))
		if ($$$FINGLAccountProfileIndicator(objAccount)="") {
			set objSYSList = ""
			set $$$FINSYSTempListField1(objSYSList) = $$$FINGLAccountDescription(objAccount)
			do Save^FINSYS("FINSYSTempList",YUSER_",FINGLProfileD2,"_idAccount,objSYSList,1)
		}
	}
	set idAccount = ""
	for {
		set idAccount = $order(^FINGLProfiles(0,3,2,idAccount))
		quit:idAccount=""
		
		set objAccount = $get(^FINGLProfile(0,idAccount,1))
		set objSYSList = ""
		set $$$FINSYSTempListField1(objSYSList) = $$$FINGLProfileDescription(objAccount)
		do Save^FINSYS("FINSYSTempList",YUSER_",FINGLProfileD2,"_idAccount,objSYSList,1)
	}
	quit
	
	
PopulateRollUpToCombo()
	;--------------------------------------------------------------------------
	; Populates the COMTempList for the RollUpTo combo. 
	; Fills it full of : Statistical GL Accounts that are not profile accounts 
	; 					 Statistical Profiles
	; 
	; NB: This is virtually identical to above routine - should combine later.
	; 
	; Returns: Nothing
	; 
	; History:
    ; 30-Sep-2004	JW		Created
    ;-------------------------------------------------------------------------------
	new idAccount,objAccount,objSYSList
	
	set idAccount = ""
	for {
		set idAccount = $order(^FINGLAccounts(0,4,7,idAccount))
		quit:idAccount=""
 
		set objAccount = $get(^FINGLAccount(0,idAccount,1))
		if $$$FINGLAccountProfileIndicator(objAccount)="" {
			set objSYSList = ""
			set $$$FINSYSTempListField1(objSYSList) = $$$FINGLAccountDescription(objAccount)
			do Save^FINSYS("FINSYSTempList",YUSER_",FINGLProfileRUT,"_idAccount,objSYSList,1)
		}
	}
	set idAccount = ""
	for {
		set idAccount = $order(^FINGLProfiles(0,4,7,idAccount))
		quit:idAccount=""
 
		set objAccount = $get(^FINGLProfile(0,idAccount,1))
		set objSYSList = ""
		set $$$FINSYSTempListField1(objSYSList) = $$$FINGLProfileDescription(objAccount)
		do Save^FINSYS("FINSYSTempList",YUSER_",FINGLProfileRUT,"_idAccount,objSYSList,1)
	}
 
	quit
	
	
CanDelete(pYKEY)
	quit
	
	
OnBeforeDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Checks whether this item can be deleted.
	; 
	; History
	; 19-Nov-2004	PO		SR10627 Allow deletion if profile has accounts
	; 09-Mar-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$CheckLinks^FINSYS(pYKEY,$listbuild("FINGLDistribution"),"FINGLProfile")
	quit strStatus
 
 
CheckAccounts(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Check whether Accounts created by this profile can be deleted.
    ;
    ; Returns:
    ;
    ; History:
    ; 21-Jun-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
	new idAccount,idxProfile,objFINGLAccount,strStatus
	
	set strStatus  = $$$OK
	set idxProfile = $$^WWWUMLAU(pYKEY,1)
	
	set idAccount = ""
	for {
		set idAccount = $order(^FINGLAccounts(0,6,idxProfile,idAccount))
		quit:idAccount=""
		
		set objFINGLAccount = $get(^FINGLAccount(0,idAccount,1))
		set strStatus       = $$CanDeleteAccount^FINGLAccountProcess(idAccount,$$$YES)
		quit:$$$ISERR(strStatus)
	}
	quit strStatus
	
	
LocationTest(pstrProfile,pstrCodeList,pobjFINGLProfile,parrProfile,pstrCodeType)
    ;-------------------------------------------------------------------------------
    ; Find if a location has been set up in a state.
    ;
    ; Returns:
    ;
    ; History:
	; 12-Aug-2004	GRF		ALWAYS macro
    ; 29-Jun-2004	Shobby	Created
    ;-------------------------------------------------------------------------------
	new blnResult,idState,idx,strCode,idParent,blnTest,objFINGLProfileCodeType
	new idParentSetting,intIndex
	
	set blnResult = $$$YES
	set idx = ""
	if $data(parrProfile(pstrCodeType,"Parents")) {
		for {
			quit:blnResult=$$$NO
			set idx = $order(parrProfile(pstrCodeType,"Parents",idx))
			quit:idx=""
			
			set strCode = $$Index^FINSYS(parrProfile(pstrCodeType,"Parents",idx))
			if pstrCodeList[strCode {
				set objFINGLProfileCodeType = $get(^FINGLProfileCodeType(0,idx,1))
				set intIndex = +$$$FINGLProfileCodeTypeIndex1(objFINGLProfileCodeType)
				set idParent = $piece(pstrCodeList,strCode_"=",2)
				set idParent = $piece(idParent,";",1)
				
				set blnTest  = $$$NO                     ; FIXME : This will cause for loop to stop without need for following test - is this right?
				
			;	xecute "set blnTest = (idParent=$piece(pobjFINGLProfile,Y,"_(4+$get(parrProfile(strCode)))_"))"
			;	xecute "set idParentSetting = $piece(pobjFINGLProfile,Y,"_(4+$get(parrProfile(strCode)))_")"
				set idParentSetting=""
				xecute "set idParentSetting=$piece(pobjFINGLProfile,Y,"_(4+intIndex)_")"
				if (idParent'=idParentSetting) && (idParentSetting'="") {
					set blnResult=$$$NO
				}
			}
		}
	}
	quit blnResult
	
	
ExpandProfile(pstrProfile,&parrProfile)
    ;-------------------------------------------------------------------------------
    ; Break up the Profile into its components.
    ;
    ; Returns:
    ;
    ; History:
    ; 01-Jul-2004   Shobby   SR10027: Created
    ;-------------------------------------------------------------------------------
	new strPiece,intCount,strPieceUpper,idx,intIndex,str
	
	kill parrProfile
	
	$$$LogRx("EP1:"_pstrProfile)
	
	for {
		set strPiece = $piece(pstrProfile,"{",2)           ; 12.3{xxx}{yyy}.45 => xxx}  ;  {yyy}.45 => yyy}.45  ;  ""
		quit:strPiece=""
		
		set strPiece      = $piece(strPiece,"}",1)         ; xxx} => xxx                ;  yyy}.45 => yyy
	;	set strPieceUpper = $$Index^FINSYS(strPiece)
		set strPieceUpper = $$$Index(strPiece)             ; XXX                        ; YYY
		set intIndex      = $order(^FINGLProfileCodeTypes(0,1,strPieceUpper,""))
		set idx = ""
		for {
			set idx = $order(^FINGLProfileCodeTypes(0,2,intIndex,idx))     ; Is this the parent for other types?
			quit:idx=""
 
			set parrProfile(strPieceUpper,"Parents",idx) = $piece($get(^FINGLProfileCodeType(0,idx,1)),Y,1)
		}		
		set pstrProfile=$piece(pstrProfile,"}",2,9999)     ; 12.3{xxx}{yyy}.45 => {yyy}.45  => .45
	}
	
	quit
	
	
GetParent(pidProfile)
    ;-------------------------------------------------------------------------------
    ; Given a GL Profile, finds its parent (if one exists)
    ;
    ; Returns: string
    ;
    ; History:
    ; 21-Dec-2004	SteveS	Created
    ;-------------------------------------------------------------------------------
	new objProfile,idParentProfile
	
	set idParentProfile = ""
 
	if $get(pidProfile)'="" {
		set objProfile      = $get(^FINGLProfile(0,pidProfile,1))
		set idParentProfile = $$$FINGLProfileParent(objProfile)	
	}
	
	quit idparentProfile
	
	
OnBlurBASCode(pstrProfileData)
    ;-------------------------------------------------------------------------------
    ; Code to execute when a BAS Code has been selected
    ;
    ; Returns: nothing
    ;
    ; History:
    ; 21-Dec-2004	SteveS	SR11280: Created
    ;-------------------------------------------------------------------------------
	new strBASCode,strError,strProfileType,strProfileTypeText
	
	set strBASCode     = $$$FINGLProfileFREE1(pstrProfileData)
	set strProfileType = $$$FINGLProfileAccountType(pstrProfileData)
	
	if (strBASCode'="") && (strProfileType'="") {
		if (strProfileType'=$$$EnumFINGLACCOUNTTYPEIncome)    &&
		   (strProfileType'=$$$EnumFINGLACCOUNTTYPEExpense)   &&
		   (strProfileType'=$$$EnumFINGLACCOUNTTYPELiability) &&
		   (strProfileType'=$$$EnumFINGLACCOUNTTYPEEquity)      {
			
		   set strProfileTypeText = $$GetEnumDescription^COMUtils("FINGLACCOUNTTYPE",strProfileType)
		   set strError = $$$Text($listbuild("Fin00538",strProfileTypeText))
		   write "alert("""_$zconvert(strError,"O","JS")_""");"	   
		}  ; "WARNING: BAS Codes are normally not applied to profiles of type ´%1´."
	}
	
	quit
	
	
OnBlurAccountType(pstrProfileData)
    ;-------------------------------------------------------------------------------
    ; Code to execute when an Account Type has been selected
    ;
    ; Returns: nothing
    ;
    ; History:
    ; 21-Dec-2004	SteveS	SR11280: Created
    ;-------------------------------------------------------------------------------
	do OnBlurBASCode(pstrProfileData)
	quit
	
]]></Routine>
</Export>