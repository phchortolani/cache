<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INTAGES1" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INTAGES1
#include COMSYS
#include INConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		BERICHTIGEN AUFTRAGSSTATUS NACH ÜBERGABE FIBU
	;		(CORRECT JOB STATUS AFTER DELIVERY FIBU)
	;
	; Inputs : 
	;
	; ByRef :
	;
	; Called by : Routine INTAGES - Daily Batch Process  ;AUFRUF DURCH INTAGES !
	;
	; Returns :
	; 
	;
	; History :
	; 29-Oct-2008	GRF		SR16070: doco only
	; 02-Sep-2008	HQN		For an invoiced orderline, impact stock
	; 24-Jul-2007	GRF		Naked Ref; Doco; boolean macros
	; 25-Sep-2006	GRF		Remove unnecessary do levels in AUFKALK; doco
	; 21-SEP-2006	FAN		SR14746 Sales statistics incorrect
	; 18-Aug-2006	JW		SR14714: Moved BESTELLUNGOK, YFAVORIT to CheckForComplete.
	; 11-Jul-2006	GRF		Doco; quits
	; 06-Apr-2006	GRF		Doco
	; 10-Mar-2006	SC		SR14349: Encapsulated single record check into CheckForComplete.
	; 						Move YWG definition to CheckForComplete.
	; 03-Aug-2005	GRF		Mark Disabled block; doco
	; 16.08.2004	FIS
	;-------------------------------------------------------------------------------
	NEW AUF,AUF1,DRPNEU,MENGE,POS,POS1,Q,REOK,REORG,WARENLIEF,WEOK,WH,YEKP,YFORM,YI,YOK,YORG
	
	; D18		$$$INVORGOpenOrderReorganization()
	 
	;SET AUFTRAGOK	   = $TRANSLATE($PIECE($GET(^INVORG(YM,YM,1)),Y,32),";",",")  ;AUFTRÃGE NUR OK, WENN BELEGE GEDRUCK
	;SET BESTELLUNGOK  = $TRANSLATE($PIECE($GET(^INVORG(YM,YM,1)),Y,34),";",",")  ;BESTELLUNGEN NUR OK, WENN BELEGE GEDRUCK
	SET REORG		  = +$PIECE($GET(^INVORG(YM,YM,1)),Y,18)                      ;ANZAHL DER TAGE VOR REORG ;Number the pre- 
	SET REORG		  =  $HOROLOG-REORG                                           ;REORG AB TAG        ;Confirm. TAG 
	;SET YWG		   = $PIECE($GET(^INVORG(YM,YM,1)),Y,13)           //SR14349  ;VORGABE WARENGRUPPE ;default 
	;IF YWG="" SET YWG = $ORDER(^INPARA(YM,"WARENGRUPPE",SPRACHE,YWG)) //SR14349
	;SET YFAVORIT      = $PIECE($GET(^INVORG(YM,YM,1)),Y,203)                     ; FAVORITE;TYBD;
	
	
	/*vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;DATENBEREINIGUNG IM FALLE DES FALLES
	;SET AUF="" FOR  SET AUF=$ORDER(^INAUFP(YM,AUF)) QUIT:AUF=""  DO   ;OP DATENSATZ VORHANDEN ;data record on hand 
	. ;IF '$DATA(^INAUF(YM,AUF,1)) KILL ^INAUFP(YM,AUF) QUIT  ;POSITION OHNE AUFTRAG
	. IF '$DATA(^INAUF(YM,AUF,1)) DO ^WWWSKILL("INAUFP",AUF) QUIT  ;POSITION OHNE AUFTRAG ;without proposition 
	. IF $PIECE($GET(^INAUF(YM,AUF,1)),Y,2)="" DO  ;AUFTRÄGE OHNE AUFTRAGSART;FIS;25660;06.07.04
	. . ;IF $PIECE($GET(^INAUF(YM,AUF,1)),Y,1)'=""  SET $PIECE(^INAUF(YM,AUF,1),Y,2)=0 QUIT  ;KUNDENAUFTRAG ;customer´s order 
	. . ;IF $PIECE($GET(^INAUF(YM,AUF,1)),Y,12)'="" SET $PIECE(^INAUF(YM,AUF,1),Y,2)=2 QUIT  ;LF-BESTELLUNG
	. . ;SET $PIECE(^INAUF(YM,AUF,1),Y,2)=1  ;EIGENFERTIGUNG
	
	;RÜCKHOLEN DATEN NUR IM SONDERFALL ; TYBD;8,12,2003
	;;;;SET AUF="" FOR  SET AUF=$ORDER(^INAUF(YM,AUF)) QUIT:AUF=""  DO
	. SET AUF1=$GET(^INAUF(YM,AUF,1))
	. IF $PIECE(AUF1,Y,2)'=0 QUIT   
	. IF $PIECE(AUF1,Y,60)'=1 QUIT   
	. SET POS="" FOR  SET POS=$ORDER(^INAUFP(YM,AUF,POS)) QUIT:POS=""  DO   ;Prüfen erledigung der positionen ;who 
	. . SET POS1=$GET(^INAUFP(YM,AUF,POS,1))
	. . IF $$$INAUFPTotalSalesPrice(POS1)'<0 DO  
	. . . QUIT:$PIECE(POS1,Y,60)=""   ;ERLEDIGT UND IN FIBU ;And within 
	. . . IF $FIND(","_AUFTRAGOK_",",",7,") IF $$$INAUFPBillPrintedDate(POS1)="" DO
	. . . . IF $FIND(","_AUFTRAGOK_",",",6,") IF $$$INAUFPDeliveryNotePrintedDate(POS1)="" DO
	. . . . . SET $PIECE(POS1,Y,60)=0  ;ERLEDIGT UND IN FIBU ;And within 
	. . . . . SET YOK=$$^WWWSPEI("INAUFP",AUF_","_POS,POS1,1)
	. . . . . ;SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,60)="" ;NICHT OK ;Not 
	. . . . . ;SET $PIECE(^INAUF(YM,AUF,1),Y,60)=""  ;KEINE POSITION ;no 
	. . . . . IF '$DATA(^INAUF1(YM,AUF,1)) DO
	. . . . . . DO  ;25931;TYBD;18,6,2004;BITMAP FÜR INAUF1
	. . . . . . . NEW YFORM,YVOR
	. . . . . . . SET YA=$$^WWWSPEI("INAUF1",AUF,Y_$PIECE(AUF1,Y,2)_Y_Y_$PIECE(AUF1,Y,4),1)
	. . . . . . . ;SET ^INAUF1(YM,AUF,1)=Y_$PIECE(AUF1,Y,2)_Y_Y_$PIECE(AUF1,Y,4)  ;NOCH NICHT ERLEDIGT
	. . . . . . ;
	. . . . . . IF $PIECE(AUF1,Y,2)=1 SET $PIECE(^INAUF1(YM,AUF,1),Y,1)=$$^WWWTEXT(32037)  ;EIGEN ;personal 
	. . . . . . IF $PIECE(AUF1,Y,2)=0 IF $PIECE(AUF1,Y,1)'="" SET $PIECE(^INAUF1(YM,AUF,1),Y,1)=$PIECE($GET(^INKUNDE(YM,$PIECE(AUF1,Y,1),1)),Y,8)  ;KUNDE ;customer 
	. . . . . . IF $PIECE(AUF1,Y,2)=2 IF $PIECE(AUF1,Y,12)'="" SET $PIECE(^INAUF1(YM,AUF,1),Y,1)=$PIECE($GET(^INLIEF(YM,$PIECE(AUF1,Y,12),1)),Y,8) ;LIEFERANT ;supplier 
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END */
	
	
	; SET MISSING CONVERSION PERIODS      ;SETZEN FEHLENDE UMSATZ ZEITRÄUME
	;---------------------------------------
	;  Updates ^INAUFP
	;---------------------------------------
	DO                          ;27153;FIS;17.01.05
	. NEW SORT,AUF,POS,OPEN
	. SET OPEN=" "
	. FOR SORT=23,27,24,25,26,28,29,30 DO
	. . SET AUF=""
	. . FOR  SET AUF=$ORDER(^INAUFPs(YM,SORT,OPEN,AUF)) QUIT:AUF=""  DO
	. . . SET POS=""
	. . . FOR  SET POS=$ORDER(^INAUFPs(YM,SORT,OPEN,AUF,POS)) QUIT:POS=""  DO
	. . . . DO SET^INAUFPVALDATE(AUF,POS)
	
	;+++++++++++++++++++++++++++++++++++++++
	; Index 5 - (1) 60 : blnLineCompleted
	;	        (2)  4 : idItem
	;	INVORG	D197		$$$INVORGProceedDailyFileWithNoIte()
	;	INAUF	D60			$$$INAUFOrderCompleted()
	;	INAUFP	D60			$$$INAUFPPosCompleted()
	;+++++++++++++++++++++++++++++++++++++++
	;  Kills   ^INAUFP
	;  Updates ^INAUF1
	;---------------------------------------
	
	IF $PIECE($GET(^INVORG(YM,YM,1)),Y,197)'=$$$YES DO   ;too much in Itemfile no runthru INART;tybd;1,11,2004;26670
	. ;;;;DO  ;PRÜFEN/RÜCKHOLEN OFFENE AUFTRÄGE;FIS;09.12.03
	. NEW ABGE,AUF,POS,ART,AUFTEXT,POK,AOK,SATZ,YOK
	. FOR ABGE=0," " DO
	. . SET ART=""
	. . FOR  SET ART=$ORDER(^INAUFPs(YM,5,ABGE,ART)) QUIT:ART=""  DO
	. . . SET AUF=""
	. . . FOR  SET AUF=$ORDER(^INAUFPs(YM,5,ABGE,ART,AUF)) QUIT:AUF=""  DO
	. . . . IF '$DATA(^INAUF1(YM,AUF)) DO
	. . . . . SET AUF1=$GET(^INAUF(YM,AUF,1))
	. . . . . IF +$PIECE(AUF1,Y,60)=$$$YES DO  ;SORTKEY PRÜFEN ;check if Order Completed
	. . . . . . SET POK=1
	. . . . . . SET POS=""
	. . . . . . FOR  SET POS=$ORDER(^INAUFP(YM,AUF,POS)) QUIT:POS=""  DO                 ;POSITION ABGESCHLOSSEN JA/NEIN
	. . . . . . . IF $PIECE($GET(^INAUFP(YM,AUF,POS,1)),Y,60)'=$$$YES SET POK=0 QUIT     ; Order Line Completed
	. . . . . . . IF $DATA(^INAUFPs(YM,5,ABGE,ART,AUF,POS)) DO                           ;SORTKEY FALSCH ;wrong 
	. . . . . . . . DO ^WWWSKILL("INAUFP",AUF_","_POS,1)
	. . . . . . . . DO ^WWWSSORT("INAUFP",AUF_","_POS)
	. . . . . . ;
	. . . . . . IF POK=0 SET $PIECE(AUF1,Y,60)=$$$NO  ;AUFTRAG WIEDER ÖFFNEN ;Order Completed 
	. . . . . ;
	. . . . . IF +$PIECE(AUF1,Y,60)=$$$NO DO  ;OFFENER AUFTRAG ;order 
	. . . . . . SET AUFTEXT=""
	. . . . . . SET SATZ=""
	. . . . . . IF $PIECE(AUF1,Y,2)=0 IF $PIECE(AUF1,Y,1)'=""  SET AUFTEXT=$PIECE($GET(^INKUNDE(YM,$PIECE(AUF1,Y,1),1)),Y,8)  ;KUNDE     ;customer 
	. . . . . . IF $PIECE(AUF1,Y,2)=2 IF $PIECE(AUF1,Y,12)'="" SET AUFTEXT=$PIECE($GET(^INLIEF(YM,$PIECE(AUF1,Y,12),1)),Y,8)  ;LIEFERANT ;supplier 
	. . . . . . IF $PIECE(AUF1,Y,2)=1 SET AUFTEXT=$$^WWWTEXT(32037)  ;AUFTRAGSTEXT EIGENFERTIGUNG
	. . . . . . DO  ;25931;TYBD;18,6,2004;BITMAP FÜR INAUF1
	. . . . . . . NEW YFORM,YVOR
	. . . . . . . SET YA=$$^WWWSPEI("INAUF1",AUF,AUFTEXT_Y_$PIECE(AUF1,Y,2)_Y_Y_$PIECE(AUF1,Y,4),1)
	
	; Check Open Orders
	SET AUF=""
	FOR  SET AUF=$ORDER(^INAUF1(YM,AUF)) QUIT:AUF=""  DO   ;Prüfen erledigung der positionen ;who 
	. do CheckForComplete(AUF) //SR14349
	
		
	;---------------------------------------
	;  Kills   ^INAUF1
	;  Updates ^INAUF1
	;---------------------------------------
	SET AUF=""
	FOR  SET AUF=$ORDER(^INAUF1(YM,AUF)) QUIT:AUF=""  DO  ;TYBD;12.06.2003;23777; NUR ALLE OFFENEN
	. SET AUFTR=$GET(^INAUF(YM,AUF,1))
	. IF $PIECE(AUFTR,Y,60)=1 DO       ;REORG  WEIL OK ;since 
	. . IF $PIECE(AUFTR,Y,97)'="" IF (REORG=$PIECE(AUFTR,Y,97)) || (REORG>$PIECE(AUFTR,Y,97)) DO ^WWWSKILL("INAUF1",AUF) KILL ^INAUF1(YM,AUF) QUIT  ;AUFTRAG ERLEDIGT ;order 
	. . IF +$PIECE(AUFTR,Y,2)=0 IF $PIECE(AUFTR,Y,97)="" DO
	. . . DO ^WWWSKILL("INAUF1",AUF)   ;LÖSCHEN;TYBD;18,6,2004;MIT SORTKEY
	. . . KILL ^INAUF1(YM,AUF,1)
	. . ;
	. . IF +$PIECE(AUFTR,Y,2)=0 QUIT  ;KUNDENAUFTRÄGE
	. . DO ^WWWSKILL("INAUF1",AUF)    ;LÖSCHEN;TYBD;18,6,2004;MIT SORTKEY
	. . KILL ^INAUF1(YM,AUF)          ;LAGERBESTELLUNGEN UND EIGENAUFTRÄGE ;And 
	. ;
	. IF '$DATA(^INAUFP(YM,AUF)) IF $PIECE(AUFTR,Y,41)="" DO   ;REORG  WEIL KEINE POSITION UND KEINE DATEN ;since no And no 
	. . DO ^WWWSKILL("INAUF1",AUF)   ;LÖSCHEN;TYBD;18,6,2004;MIT SORTKEY
	. . KILL ^INAUF1(YM,AUF) QUIT    ;AUFTRAG ERLEDIGT ;order 
	. ;
	. IF +$PIECE(AUFTR,Y,60)=0 DO
	. . QUIT:'$DATA(^INAUFP(YM,AUF))  ;KEINE POSITION ;no line
	. . IF '$DATA(^INAUF1(YM,AUF,1)) DO
	. . . DO  ;25931;TYBD;18,6,2004;BITMAP FÜR INAUF1
	. . . . NEW YFORM,YVOR
	. . . . SET YA=$$^WWWSPEI("INAUF1",AUF,Y_$PIECE(AUFTR,Y,2)_Y_Y_$PIECE(AUFTR,Y,4),1)
	. . . . ;SET ^INAUF1(YM,AUF,1)=Y_$PIECE(AUFTR,Y,2)_Y_Y_$PIECE(AUFTR,Y,4)  ;NOCH NICHT ERLEDIGT
	. . . ;
	. . . IF $PIECE(AUFTR,Y,2)=1 SET $PIECE(^INAUF1(YM,AUF,1),Y,1)=$$^WWWTEXT(32037)  ;EIGEN ;personal 
	. . . IF $PIECE(AUFTR,Y,2)=0 IF $PIECE(AUFTR,Y,1)'=""  SET $PIECE(^INAUF1(YM,AUF,1),Y,1)=$PIECE($GET(^INKUNDE(YM,$PIECE(AUFTR,Y,1),1)),Y,8) ;KUNDE     ;customer 
	. . . IF $PIECE(AUFTR,Y,2)=2 IF $PIECE(AUFTR,Y,12)'="" SET $PIECE(^INAUF1(YM,AUF,1),Y,1)=$PIECE($GET(^INLIEF(YM,$PIECE(AUFTR,Y,12),1)),Y,8) ;LIEFERANT ;supplier 
	
	;Positionen prüfen ;Check Order Line Items
	;---------------------------------------
	;  Kills   ^INAUFPT, ^INAUFPXL
	;  Updates ^INAUFP, ^INAUFPT, ^INAUFPXL, ^INXAUFPT, ^INXAUFPXL
	;---------------------------------------
	SET AUF=""
	FOR  SET AUF=$ORDER(^INAUF1(YM,AUF)) QUIT:AUF=""  DO
	. SET POS=""
	. FOR  SET POS=$ORDER(^INAUFP(YM,AUF,POS)) QUIT:POS=""  DO
	. . KILL ^WWWSOR(YUSER,"AUFSORT")
	. . SET DRPNEU=0
	. . SET WH=$PIECE($GET(^INAUFP(YM,AUF,POS,1)),Y,7)        ;LOSCHEN DER TEILE WENN WH=BESTELLEN ;the when 
	. . IF WH=1 DO
	. . . QUIT:$PIECE($GET(^INVORG(YM,YM,1)),Y,69)=$$$YES     ;UNTERTEILE NICHT LÖSCHEN ;Not Delete 
	. . . MERGE ^INXAUFPT(YM,AUF,POS)=^INAUFPT(YM,AUF,POS)
	. . . KILL ^INAUFPT(YM,AUF,POS)                           ;TEILE NICHT BIE BESTELLUNG ;Not sales order 
	. . . MERGE ^INXAUFPXL(YM,AUF,POS)=^INAUFPXL(YM,AUF,POS)
	. . . KILL ^INAUFPXL(YM,AUF,POS)                          ;TELESTRUKTUR
	. . ;
	. . ; AUFBAU DER TEILE ; STRUCTURE OF THE PARTS
	. . SET MENGE=$PIECE($GET(^INAUFP(YM,AUF,POS,1)),Y,5) 
	. . SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,39)=MENGE
	. . ;
	. . ; LÖSCHEN AUFTRAGSPOSITION WEIL KEIN ARTIKEL ;Delete since no item
	. . IF $PIECE($GET(^INAUFP(YM,AUF,POS,1)),Y,4)="" DO ^INAUFKILL(AUF_","_POS) QUIT 
	. . ;
	. . IF WH'=1 SET ^INAUFPXL(YM,AUF,POS)=$GET(^INAUFP(YM,AUF,POS,1))
	. . SET NETT0 = $$^INAUFPNETTO(AUF,POS)  ;NEURECHNEN DER Preise in pos ;the Prices within 
	. . SET YEKP  = $$^INAUFKOST(AUF,POS)    ;NEURECHNEN POSITIONS-EK
	. . IF +YEKP'=0 SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,47)=YEKP
	. . NEW SUCH,YYI,SUCH1
	. . SET SUCH="^INAUFPXL("_""""_YM_""""_","_""""_AUF_""""_","_"-1"_")"
	. . KILL ^INAUFPT(YM,AUF,POS)
	. . ;
	. . FOR  DO  QUIT:SUCH=""
	. . . SET SUCH=$QUERY(@SUCH)
	. . . IF $TRANSLATE($PIECE(SUCH,",",2),"""")'=AUF SET SUCH="" QUIT  ;21.06.04;FAN;25794; WENN alphanumerischen Auftragsnummern SOLL DATEN AUCH AUFBAUEN.
	. . . ;IF $PIECE(SUCH,",",2)'=AUF SET SUCH="" QUIT  ;21.06.04;FAN;25794; 
	. . . IF $PIECE(SUCH,",",3)=POS DO
	. . . . SET SUCH1=@SUCH
	. . . . SET SUCH(1)=$PIECE($PIECE(SUCH,")",1),",",4,99)
	. . . . SET SUCH(0)=$LENGTH(SUCH(1),",")  ;ANZAHL DER ,
	. . . . ;
	. . . . ;RUESTZEIT NUR BEI LEISTUNGEN GÜLTIG;FIS;25.05.04;25780
	. . . . IF +$PIECE(SUCH1,Y,70)'=0 IF $DATA(@SUCH)'=11 DO  ;KEINE UNTERTEILE ;no 
	. . . . . IF $PIECE(SUCH1,Y,40)'=2 IF $PIECE(SUCH1,Y,40)'=10 IF $PIECE(SUCH1,Y,40)'=11 SET $PIECE(SUCH1,Y,70)=""  ;KEINE LEISTUNG=KEINE RÜSTZEIT ;no setup time 
	. . . . ;
	. . . . ;NEURECHNEN AUSFÜHRUNGSZEIT;FIS;16.08.04;26268
	. . . . IF $PIECE(SUCH1,Y,26)="" IF $PIECE(SUCH1,Y,4)'="" SET $PIECE(SUCH1,Y,26)=$PIECE($GET(^INART(YM,$PIECE(SUCH1,Y,4),1)),Y,26)  ;HOLEN ARTIKELART;FIS;14.02.2005
	. . . . IF $DATA(@SUCH)'=11 DO
	. . . . . NEW RUEST,TIME
	. . . . . SET (RUEST,TIME)=""
	. . . . . IF $PIECE(SUCH1,Y,45)'="" IF $PIECE(SUCH1,Y,26)=2 SET TIME=$PIECE(SUCH1,Y,45)
	. . . . . IF $PIECE(SUCH1,Y,70)'="" IF $PIECE(SUCH1,Y,26)=2 SET RUEST=$PIECE(SUCH1,Y,70)
	. . . . . SET ^WWWSOR(YUSER,"AUFSORT",SUCH(0),$TRANSLATE(SUCH(1),",",".")_".")=TIME_Y_RUEST
	. . . . ;
	. . . . ;BERECHNEN DER BENÖTIGTEN MENGE ;calculate the quantity 
	. . . . IF +MENGE=0 SET MENGE=1
	. . . . SET SUCH(3)=MENGE  ;BASISMENGE
	. . . . SET SUCH("M",+SUCH(0))=$PIECE(SUCH1,Y,5)
	. . . . FOR YYI=1:1:SUCH(0) IF +$GET(SUCH("M",YYI))'=0 SET SUCH(3)=SUCH(3)*$GET(SUCH("M",YYI))
	. . . . SET $PIECE(SUCH1,Y,39)=SUCH(3)   ;MENGE FÜR PRODUKTION ;quantity to production 
	. . . . ;
	. . . . SET SUCH(2)=""
	. . . . ;IF $PIECE(SUCH1,Y,19)="" SET $PIECE(SUCH1,Y,19)=$PIECE($GET(^INAUF(YM,AUF,1)),Y,19)  ;LIEFERTERMIN
	. . . . FOR YYI=1:1:SUCH(0) SET SUCH(2)=SUCH(2)_$PIECE(SUCH(1),",",YYI)_"."
	. . . . IF $PIECE(SUCH1,Y,61)="" IF $PIECE(SUCH1,Y,4)'="" SET $PIECE(SUCH1,Y,61)=$PIECE($GET(^INART(YM,$PIECE(SUCH1,Y,4),1)),Y,61)
	. . . . IF SUCH(2)'="" SET ^INAUFPT(YM,AUF,POS,SUCH(2),1)=SUCH1
	. . . . SET @SUCH=SUCH1
	. . . . ;
	. . . . ;	D70		$$$INVORGDRPActivated()
	. . . . IF $PIECE($GET(^INVORG(YM,YM,1)),Y,70)=1 DO  ;FIS;DRP DEMANDS KORRIGIEREN;07.07.04;26056
	. . . . . NEW BETRIEB
	. . . . . SET BETRIEB=$PIECE($GET(^INAUF(YM,AUF,1)),Y,6)
	. . . . . IF BETRIEB="" SET BETRIEB=YLOCATION
	. . . . .;IF $PIECE(SUCH1,Y,200)'="" IF $DATA(^INDRPDEMAND(YM,BETRIEB,$PIECE(SUCH1,Y,200),1)) SET $PIECE(^(1),Y,72)=AUF_"."_POS_"."_SUCH(2) QUIT  ;SPEICHERN TEILESTRUKTUR IN DEMAND ;Save within   ; Naked Ref
	. . . . . IF $PIECE(SUCH1,Y,200)'="" IF $DATA(^INDRPDEMAND(YM,BETRIEB,$PIECE(SUCH1,Y,200),1)) SET $PIECE(^INDRPDEMAND(YM,BETRIEB,$PIECE(SUCH1,Y,200),1),Y,72)=AUF_"."_POS_"."_SUCH(2) QUIT  ;SPEICHERN TEILESTRUKTUR IN DEMAND ;Save within 
	. . . . . IF $PIECE(SUCH1,Y,200)'="" IF '$DATA(^INDRPDEMAND(YM,BETRIEB,$PIECE(SUCH1,Y,200),1)) DO
	. . . . . . SET $PIECE(SUCH1,Y,200)=""
	. . . . . . SET $PIECE(@SUCH,Y,200)=""
	. . . . . . SET $PIECE(^INAUFPT(YM,AUF,POS,SUCH(2),1),Y,200)=""
	. . . . . ;
	. . . . . IF $PIECE(SUCH1,Y,200)="" SET DRPNEU=1
	. . ;
	. . DO AUFKALK  ;22.09.04:NEURECHNEN ZEITEN
	. . DO ^INAUFHKNEU(AUF,POS)  ;NEURECHNEN HERSTELLKOSTEN;22.09.04
	. . KILL ^WWWSOR(YUSER,"AUFSORT")
	. . IF DRPNEU=1 DO START^INDRPPRODU(AUF,POS,1)  ;FIS;GGF. NEUE DEMANDS ERSTELLEN;FIS;07.07.04;26056
	
	/*
	; vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;;;;;;SET AUF="" FOR  SET AUF=$ORDER(^INAUF1(YM,AUF)) QUIT:AUF=""  DO
	. IF '$DATA(^INAUFP(YM,AUF)) DO
	. . NEW YFORM
	. . SET YFORM="INAUF"
	. . DO ^WWWKILL("INAUF",AUF)    ;LÖSCHEN DATEN UND SORTKEY ;Delete And 
	. . DO ^WWWSKILL("INAUF1",AUF)  ;LÖSCHEN DATEN UND SORTKEY ;WWWSKILL;TYBD;24,8,2004
	. . KILL ^INAUF1(YM,AUF)        ;LÖSCHEN DATENSATUZ ;Delete 
	; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	*/
	
	;LÖSCHEN ZWISCHENDATEI EIGENFERTIGUNGEN ;Delete 
	IF $DATA(^INAUF1SEL(YM)) KILL ^INAUF1SEL(YM)    ;DATEI OFFENE EIGENFERTIGUNGEN ;data file 
	IF $DATA(^INAUF1SELT(YM)) KILL ^INAUF1SELT(YM)  ;SUMMEN ;total 
	IF $DATA(^INAUF1SEL3(YM)) KILL ^INAUF1SEL3(YM)  ;LEISTUNGEN, SORTIERT NACH AUSFÜHRUNGSDATUM
	
	DO ^INAUF1SEL(1)  ;IMMER STARTEN ;always launch
	
	;MASCHINENAUSLASTUNG AUFBEREITEN
	;	D136		$$$INVORGUseGraphicDeliveryTraffic()
	;	D197		$$$INVORGProceedDailyFileWithNoIte()
	IF $PIECE($GET(^INVORG(YM,YM,1)),Y,197)'=1 DO ^INMASCHAUSL  ;26670;TYBD;1,11,2004;NO PRODUCTION
	IF $PIECE($GET(^INVORG(YM,YM,1)),Y,197)'=1 IF $PIECE($GET(^INVORG(YM,YM,1)),Y,136)=1 DO ^INMASCHLAST  ;AUFBEREITUNG FÜR XGANTT ;to 
	;LÖSCHEN ZWISCHENDATEI SERIENNUMMER-ZUORDNUNG ;Delete 
	IF $DATA(^INAUF1SEL2(YM)) KILL ^INAUF1SEL2(YM)  
	QUIT
 
CheckForComplete(AUF)
	;-------------------------------------------------------------------------------
	; Encapsulated section from INTAGES1.
	; Runs checking on an Order Record, Set complete if appropriate.
	; 
	; 		Updates :	^INAUFP (x2)
	; 					^INKUNDEFAVORIT
	; 					^INAUFPFAVORIT
	; 					^INAUFPTSN
	;
	; Params: AUF - Order number.
	; 
	; Called by: INTAGES, ...^INTAGES1, INRECH1
	;
	; Returns:
	;	Q
	;	
	; History:
	; 01-Jun-2012	shobby	SR17960: Used the UserIdentifierDRPProcess to determine the user. 
	; 29-Mar-2012	shobby	SR17960: Don't cause an update if the record doesn't change.
	;							
	; 15-Feb-2010	PPP		SR17175: Updated the CheckforComplete - 
	;						i. Do not look at INWEAUF (Old Receipts)
	;						ii. Do not look at INERECH1(Old Invoices)
	; 30-Oct-2008	GRF		SR16070: Repeated test removed; doco; remove 2006 'save'
	; 							changes (commented code); hardcoded completion on Invoicing
	; 08-Oct-2008	HQN		SR16009: Complete the plannedmovement for invoicing and printing
	; 24-Jul-2007	GRF		Naked Ref; Doco; boolean macros
	; 27-Nov-2006	JW		BR014285: Item group change
	; 18-Aug-2006	JW		SR14714: Defined BESTELLUNGOK, YFAVORIT - moved from above
	; 10-Mar-2006	SC		SR14349: Created
	;-------------------------------------------------------------------------------
	new AUFTRAGOK,BESTELLUNGOK,YFAVORIT,YWG
	new AUFORIGINAL,YBED,objINVORG 								;SR17960
	
	set objINVORG=$GET(^INVORG(YM,YM,1))						;SR17960
	set YBED= $$$INVORGUserIdentifierDRPProcess(objINVORG)    	;SR17960
	if YBED="" set YBED="DRP"								    ;SR17960
	SET YWG = $$$INVORGDefaultItemGroup(objINVORG)				;SR17960
	IF YWG="" SET YWG = $ORDER(^INItemGroup(YM,""))
	
	;SET AUFTRAGOK     = $TRANSLATE($PIECE($GET(^INVORG(YM,YM,1)),Y,32),";",",") ; SR16070
	set AUFTRAGOK     = ",7,"
	SET BESTELLUNGOK  = $TRANSLATE($PIECE($GET(^INVORG(YM,YM,1)),Y,34),";",",")  ;BESTELLUNGEN NUR OK, WENN BELEGE GEDRUCK
	SET YFAVORIT      = $PIECE($GET(^INVORG(YM,YM,1)),Y,203)                     ; Save Customer Favorites For Items Search
	
	;+++++++++++++++++++++++++++++++++++++++
	;	AUF1		objINAUF
	;	SATZ		objINAUF
	;	POS1		objINAUFP
	;	POS1X		objINAUFP
	;+++++++++++++++++++++++++++++++++++++++
	SET AUF1=$GET(^INAUF(YM,AUF,1))
	set AUFORIGINAL=AUF1 ;SR17960
	
	;---------------------------------------
	; - Set flag to show order is complete.
	; - Check each order line,
	;     Where appropriate - release reserved stock and process issue.
	; 	  Change flag to "Open" if line isn't complete.
	; - If flag still shows order is complete, Mark the order as complete
	;---------------------------------------
	
	SET Q=1  ;AUFTRAG ABGESCHLOSSEN ;order 
	IF '$DATA(^INAUFP(YM,AUF)) SET Q=0  ;KEINE POSITIONEN ;no line
	
	SET POS=""
	FOR  SET POS=$ORDER(^INAUFP(YM,AUF,POS)) QUIT:POS=""  DO   ;Prüfen erledigung der positionen ;who 
	. SET POS1=$GET(^INAUFP(YM,AUF,POS,1))
	. ;
 	. IF $PIECE(AUF1,Y,2)=0 IF $PIECE(AUF1,Y,1)'="" IF $PIECE(POS1,Y,360)="" DO  ;SAVE CUSTOMER IN LINE ITEM IF MISSING;10-Jul-2006;FIS;SR14746
 	. . SET $PIECE(POS1,Y,360)=$PIECE(AUF1,Y,1)
 	. . ;DO SAVE^WWWSPEI("INAUFP",AUF_","_POS,POS1,1)
 	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES) // SR14746
	. ;
	. IF $PIECE(POS1,Y,26)=2 IF $PIECE(POS1,Y,90)'=$$$YES SET $PIECE(POS1,Y,90)=$$$YES SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,90)=$$$YES  ;LEISTUNG LIEFERFÄHG;TYBD;19,08,2003;24171
	. IF $PIECE(POS1,Y,26)=6 IF $PIECE(POS1,Y,90)'=$$$YES SET $PIECE(POS1,Y,90)=$$$YES SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,90)=$$$YES  ;LEISTUNG LIEFERFÄHG;TYBD;19,08,2003;24171
	. ;
	. ; 1) Build favorites list from Customer Orders
	. ;---------------------------------------
	. IF (YFAVORIT=$$$YES) IF $PIECE(AUF1,Y,2)=0 DO
	. . NEW ART	
	. . SET ART=$PIECE(POS1,Y,4)
	. . QUIT:ART=""  ;NO ITEM
	. . QUIT:$DATA(^INKUNDEFAVORIT(YM,$PIECE(AUF1,Y,1),ART,1))  ;FAVORIT VORHANDEN
	. . DO
	. . . QUIT:$PIECE(AUF1,Y,1)=""   ;KEIN KUNDE / NO CUSTOMER
	. . . SET YFORM="INKUNDEFAVORIT"
	. . . SET YOK=$$^WWWSPEI("INKUNDEFAVORIT",$PIECE(AUF1,Y,1)_","_ART,Y,1)  ;KUNDENFAVORIT
	. . ;
	. . QUIT:$PIECE(AUF1,Y,6)=""   ;KEIN BETRIEB / NO LOCATION
	. . QUIT:$DATA(^INAUFPFAVORIT(YM,$PIECE(AUF1,Y,6),ART,1))
	. . DO
	. . . SET YFORM="INAUFPFAVORIT"
	. . . SET YOK=$$^WWWSPEI("INAUFPFAVORIT",$PIECE(AUF1,Y,6)_","_ART,Y,1)  ;GESAMTFAVORIT
	. ;
	. ; 2) Immediate Order Settlement - Customer Order without a customer number
	. ;---------------------------------------
	. IF $PIECE(AUF1,Y,2)=0 IF $PIECE(AUF1,Y,1)'="" DO
	. . NEW ERL
	. . SET ERL=0
	. . QUIT:$PIECE(POS1,Y,83)=""   ; Order not printed      ; NOCH NICHT BESTELLT
	. . QUIT:$PIECE(POS1,Y,91)'=""  ; Delivery Note recorded ; SCHON OK 
	. . ;
	. . ;vvvvv Naked Ref
	. . ;IF $PIECE(POS1,Y,12)'="" IF $PIECE(AUF1,Y,1)'="" IF $PIECE($GET(^INKUNDELIEF(YM,$PIECE(AUF1,Y,1),$PIECE(POS1,Y,12),1)),Y,34)'="" IF $PIECE($GET(^INRAHMEN(YM,$PIECE(^(1),Y,34),1)),Y,245)=1 SET ERL=1  ;RAHMENVERTRAGS=ERLEDIG
	. . ;
	. . ; Order In The Name Of The Customer
	. . ;   INKUNDE		D229	Customer Master Data
	. . ;   INLIEF		D245	Supplier Master Data
	. . ;   INRAHMEN	D245	Supplier Master Contracts
	. . ;IF $PIECE(POS1,Y,12)'="" IF $PIECE(AUF1,Y,1)'="" DO    ; Already tested ; SR16070
	. . IF $PIECE(POS1,Y,12)'="" do
	. . . new idSupplier
	. . . set idSupplier = $PIECE($GET(^INKUNDELIEF(YM,$PIECE(AUF1,Y,1),$PIECE(POS1,Y,12),1)),Y,34)
	. . . ; FIXME : <GRF> ^INRAHMEN has two keys (Supplier and ContractNo) - 
	. . . IF (idSupplier'="") && ($PIECE($GET(^INRAHMEN(YM,idSupplier,1)),Y,245)=1) SET ERL=1  ;RAHMENVERTRAGS=ERLEDIG
	. . ;^^^^^ Naked Ref
	. . ;
	. . IF $PIECE($GET(^INKUNDE(YM,$PIECE(AUF1,Y,1),1)),Y,229)=1 SET ERL=1
	. . IF $PIECE(POS1,Y,12)'="" IF $PIECE($GET(^INLIEF(YM,$PIECE(POS1,Y,12),1)),Y,245)=1 SET ERL=1
	. . ;DO:$PIECE($GET(^INKUNDE(YM,$PIECE(AUF1,Y,1),1)),Y,229)=1  IF $PIECE(POS1,Y,12)'="" IF $PIECE($GET(^INLIEF(YM,$PIECE(POS1,Y,12),1)),Y,245)=1 DO   ;NICHT ALLE ERLEDIGT
	. . IF ERL=1 DO
	. . . SET $PIECE(POS1,Y,90) = $$$YES                          ;AUSLIEFERFAEHIG ; Ready For Delivery
	. . . SET $PIECE(POS1,Y,91) = "AUTO"                          ;LIEFERSCHEIN
	. . . SET $$$INAUFPDeliveryNotePrintedDate(POS1) =+$HOROLOG   ;DRUCKDATUM
	. . . SET $PIECE(POS1,Y,93) = $PIECE($HOROLOG,",",2)          ;UHRZEIT
	. . . SET $PIECE(POS1,Y,94) = "SYSTEM"
	. . . IF $PIECE(POS1,Y,12)'="" IF $PIECE(AUF1,Y,1)'="" IF $PIECE($GET(^INKUNDELIEF(YM,$PIECE(AUF1,Y,1),$PIECE(POS1,Y,12),1)),Y,32)=1!($PIECE(AUF1,Y,210)="") DO   ;KEINE SPEZIALZUSCHLÄGE ALLES ERLEDIGT;14,12,2004
	. . . . QUIT:$PIECE(POS1,Y,4)=$PIECE($GET(^INKUNDELIEF(YM,$PIECE(AUF1,Y,1),$PIECE(POS1,Y,12),1)),Y,30)  ;DIES IST DER ARTIKEL DER GEBÜHREN;TYB;14,12,2004  ;FIS;22.12.04
	. . . . SET $PIECE(POS1,Y,96) = "AUTO"                  ;RECHNUNG
	. . . . SET $$$INAUFPBillPrintedDate(POS1) =+$HOROLOG   ;DRUCKDATUM
	. . . . SET $PIECE(POS1,Y,98) = $PIECE($HOROLOG,",",2)  ;UHRZEIT
	. . . . SET $PIECE(POS1,Y,99) = "SYSTEM"
	. . . ;
	. . . SET YFORM="INAUFP"
	. . . SET YOK=$$^WWWSPEI("INAUFP",AUF_","_POS,POS1,1)
	. ;
	. ; 3) Customer Order - Check if line barrier exists for Lay By/Away (pre-payment)
	. ;---------------------------------------
	. IF $PIECE(AUF1,Y,2)=0 IF $PIECE(POS1,Y,205)=$$$YES IF $PIECE(POS1,Y,204)=$PIECE($GET(^INVORG(YM,YM,1)),Y,137) DO
	. . NEW DEBIT,AUFWERT,ANZAHL,OK,SALDO,POSX,POS1X,DAT,YFELDPZ
	. . QUIT:$PIECE(AUF1,Y,1)=""
	. . SET OK=0
	. . DO
	. . . SET AUFWERT=0
	. . . ; FIXME : ? Should there be a "FOR" here or are we specifically only processing the first entry? <GRF>
	. . . SET POSX="" SET POSX=$ORDER(^INAUFP(YM,AUF,POSX)) QUIT:POSX=""  DO  ;ERRECHNEN AUFTRAGSWERT
	. . . . SET POS1X=$GET(^INAUFP(YM,AUF,POSX,1))
	. . . . IF +$PIECE(POS1X,Y,9) =$$$YES QUIT       ;STORNO    ; Cancellation
	. . . . IF +$PIECE(POS1X,Y,60)=$$$YES QUIT       ;ABGESCHLOSSENE POSITION
	. . . . SET AUFWERT=AUFWERT+$PIECE(POS1X,Y,123)  ; Sum of Net Sales Price
	. . . ;
	. . . SET ANZAHL=0
	. . . SET DAT=""
	. . . FOR  SET DAT=$ORDER(^INAUFPZ(YM,AUF,DAT)) QUIT:DAT=""  DO  ;ERRECHNEN GESAMT ANZAHLUNG ;total down payment 
	. . . . SET YFELDPZ=$GET(^INAUFPZ(YM,AUF,DAT,1))
	. . . . IF $PIECE(YFELDPZ,Y,25)'="" SET ANZAHL=ANZAHL+$PIECE(YFELDPZ,Y,2)
	. . . ;
	. . . IF AUFWERT'>ANZAHL SET OK=1 QUIT  ;FÜR DIESEN AUFTRAG AUSREICHEND ANGEZAHLT ;to order 
	. . . SET DEBIT=$PIECE($GET(^INKUNDE(YM,$PIECE(AUF1,Y,1),1)),Y,48)
	. . . IF DEBIT="" SET DEBIT=$PIECE(AUF1,Y,1)
	. . . SET SALDO=$$^INSALDO(DEBIT)
	. . . IF $FIND(SALDO,"S")||($FIND(SALDO,"D")) IF SALDO'<$$^INKUNDAUF($PIECE(AUF1,Y,1),3) SET OK=1 QUIT  ;INSGESAMT AUSREICHENDES GUTHABEN ;together 
	. . ;
	. . QUIT:OK=0
	. . SET $PIECE(POS1,Y,205)=$$$NO
	. . SET $PIECE(POS1,Y,204)=""
	. . SET $PIECE(POS1,Y,207)=+$HOROLOG
	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES)
	. ;
	. ; 4) Supply (Waive On-line Pick Reservation)
	. ;    Clear 'Pick List PrintedBy' if no 'Pick List Printed' date
	. ;---------------------------------------
	. IF $PIECE(POS1,Y,89)'="" IF $PIECE(POS1,Y,87)="" DO
	. . SET $PIECE(POS1,Y,89)=""
	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES)
	. ;
	. ; 5) If Update Order 'Bill Printed' details from more recent line with 'Bill Printed'
	. ;---------------------------------------
	. IF $$$INAUFPBillPrintedDate(POS1)'="" DO  ;RE.DRUCK IN AUFTRAG = POSITIONSDRUCK (FALLS NOCH NICHT DURCH INDRUCK GESPEICHERT) ;within order yet Not trans- 
	. . QUIT:$PIECE(AUF1,Y,97)>$$$INAUFPBillPrintedDate(POS1)  ;NICHT, WENN DRUCKDATUM IN AUFTRAG > DRUCKDATUM IN POSITION
	. . FOR YI=96,97,98,99 SET $PIECE(^INAUF(YM,AUF,1),Y,YI)=$PIECE(POS1,Y,YI) SET $PIECE(AUF1,Y,YI)=$PIECE(POS1,Y,YI)
	. . ; FIXME : Direct set of INAUF but D96 and D97 both have indices <GRF>
	. ;
	. ; 6) Mark a Manually Closed Line as 'Line Completed'
	. ;    If Order is 'Completed' and line isn't revert Order to 'Not Completed'
	. ;---------------------------------------
	. IF $PIECE(POS1,Y,215)=$$$YES SET $PIECE(POS1,Y,60)=$$$YES   ;MANUELL GESCHLOSSEN ;thick 
	. IF $PIECE(AUF1,Y,60)=$$$YES IF $PIECE(POS1,Y,60)'=$$$YES DO  ;AUFTRAG NICHT ABGESCHLOSSEN WENN POS. OFFEN ;order Not when vulnerable 
	. . SET $PIECE(AUF1,Y,60)=$$$NO
	. . SET $PIECE(^INAUF(YM,AUF,1),Y,60)=0            ;DO ^WWWSSORT("INAUF",AUF)     //SORTKEY // SR14746 ;SR17960
	. . ;SR17960 DO
	. . ;SR17960 . NEW SATZ
	. . ;SR17960 . SET SATZ=$GET(^INAUF(YM,AUF,1))
	. . ;SR17960 . SET $PIECE(SATZ,Y,60)=$$$NO  
	. . ;SR17960 . SET strStatus=$$$Save("INAUF",AUF,SATZ,$$$YES)     // SR14746
	. ;
	. ; 7) Remove order line if no data available (First 12 fields are blank)
	. ;---------------------------------------
	. IF $TRANSLATE($PIECE(POS1,Y,1,12),Y)="" DO ^INAUFKILL(AUF_","_POS) QUIT
	. ;
	. ; 8) Set Line Order Date to Header Order Date
	. ;    Get Default Group for Line if no group present
	. ;---------------------------------------
	. DO
	. . NEW SATZ
	. . SET SATZ=$GET(^INAUFP(YM,AUF,POS,1))
	. . SET $PIECE(SATZ,Y,193)=$PIECE(AUF1,Y,4)   // SR14746;AUFTRAGSDATUM
	. . IF YWG'="" IF $PIECE(SATZ,Y,30)="" SET $PIECE(SATZ,Y,30)=YWG // SR14746
	. . //IF $PIECE(SATZ,Y,30)'="" IF '$DATA(^INPARA(YM,"WARENGRUPPE",SPRACHE,$PIECE(SATZ,Y,30))) SET $PIECE(SATZ,Y,30)=YWG  // SR14746
	. . IF $PIECE(SATZ,Y,30)'="" IF '$DATA(^INItemGroup(YM,$PIECE(SATZ,Y,30))) SET $PIECE(SATZ,Y,30)=YWG  //BR014285
	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,SATZ,$$$YES)     // SR14746
	. ;
	. ; 9) No further processing for this line if completed or cancelled
	. ;---------------------------------------
	. IF $PIECE(POS1,Y,9) =$$$YES QUIT  ;STORNO
	. IF $PIECE(POS1,Y,60)=$$$YES QUIT  ;AUSGELIEFERT UND OK ;And 
	. ;
	. ; 10) Manufacturing Order checking
	. ;---------------------------------------
	. IF $PIECE(AUF1,Y,2)=1 IF $PIECE(POS1,Y,165)'="" DO  QUIT:$PIECE(POS1,Y,60)=$$$YES  ;EIGEN-ENTWICKLUNG
	. . ;IF '$DATA(^INPROSTEMP(YM,$PIECE(POS1,Y,165),1)) IF '$DATA(^INPROSTEMP1(YM,$PIECE(POS1,Y,165),1))               QUIT  ;NOCH KEINE FERTIGUNG
	. . ;IF $DATA(^INPROSTEMP(YM,$PIECE(POS1,Y,165),1))  IF $PIECE($GET(^INPROSTEMP(YM,$PIECE(POS1,Y,165),1)),Y,24)'=1  QUIT  ;NICHT ABGESCHLOSSEN
	. . ;IF $DATA(^INPROSTEMP1(YM,$PIECE(POS1,Y,165),1)) IF $PIECE($GET(^INPROSTEMP1(YM,$PIECE(POS1,Y,165),1)),Y,24)'=1 QUIT  ;NICHT ABGESCHLOSSEN
	. . IF $DATA(^INPROSTEMP1(YM,$PIECE(POS1,Y,165),1)) IF $PIECE($GET(^INPROSTEMP1(YM,$PIECE(POS1,Y,165),1)),Y,22)="" IF $PIECE(POS1,Y,245)="" QUIT  ;BESTAND NOCH NICHT BERICHTIGT ;yet Not 
	. . IF $PIECE(POS1,Y,90)'=$$$YES QUIT     ;NOCH NICHT GEFERTIGT ;yet Not 
	. . ;IF $PIECE(POS1,Y,264)=""    QUIT     ;NOCH NICHT GEFERTIGT
	. . SET $PIECE(POS1,Y,60)=$$$YES          ;ERLEDIGT UND IN FIBU ;And within 
	. . SET YFORM="INAUFP"
	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES) // SR14746
	. . ;DO SAVE^WWWSPEI("INAUFP",AUF_","_POS,POS1,1)
	. . ;SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,60)=1  // SR14746;OK
	. . ;
	. . ;ZUGEORDNETE SERIENNUMMERN;FIS;29.12.03;24854
	. . MERGE ^INAUFPTSNALT(YM,AUF,POS)=^INAUFPTSN(YM,AUF,POS)  ;SPEICHERN HISTORY ;Save 
	. . DO ^WWWSKILL("INAUFPTSN",AUF_","_POS)                   ;FREIGEBEN ZUGEORDNETE SERIENNUMMERN
	. . ;DO ^WWWSSORT("INAUFPTSNALT",AUF_","_POS)               ;SORTDSATEI
	. ;
	. ; 11) Customer Order Checking (No further processing for this line if completed at end)
	. ;     If Total Sales Price *IS NOT* negative
	. ;     Update Reservation and Stock On Hand - If Bill has been printed
	. ;---------------------------------------
	. SET REOK=1
	. IF $PIECE(AUF1,Y,2)=0 IF $PIECE(POS1,Y,119)'<0 DO  QUIT:$PIECE(POS1,Y,60)=$$$YES  ;KUNDENAUFTRAG, KEIN GUTSCHRIFT   
	. . DO  QUIT:$PIECE(POS1,Y,60)=$$$YES             ;ERLEDIGT UND IN FIBU ; $$$INAUFPPosCompleted()
	. . . IF $FIND(","_AUFTRAGOK_",",",7,")   IF $$$INAUFPBillPrintedDate(POS1)'="" DO
	. . . . IF $FIND(","_AUFTRAGOK_",",",6,") IF $$$INAUFPDeliveryNotePrintedDate(POS1)'="" DO
	. . . . . SET $PIECE(POS1,Y,60)=$$$YES            ;ERLEDIGT UND IN FIBU
	. . . . . NEW YFORM,YVOR
	. . . . . SET YFORM="INAUFP"
	. . . . . SET YVOR=""
	. . . . . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES)
	. . ; 
	. . IF $$$INAUFPDeliveryNotePrintedDate(POS1)="" IF $PIECE(POS1,Y,309)'=$$$YES QUIT:$FIND(","_AUFTRAGOK_",",",6,")  ;LIEFERSCHEIN WICHTIG ;packing slip weighty 
	. . IF $$$INAUFPBillPrintedDate(POS1)=""          QUIT:$FIND(","_AUFTRAGOK_",",",7,")  ;RECHNUNG WICHTIG ;calculation important 
	. . IF $PIECE(POS1,Y,79)=""                       QUIT:$FIND(","_AUFTRAGOK_",",",2,")  ;AB WICHTIG ;Confirm. important 
	. . IF $PIECE(POS1,Y,83)="" IF $PIECE(POS1,Y,7)=3 QUIT:$FIND(","_AUFTRAGOK_",",",3,")  ;BESTELLUNG WICHTIG (NUR BESTELLWARE) ;sales order important 
	. . IF AUFTRAGOK="" IF $$$INAUFPBillPrintedDate(POS1)=""  QUIT   ;IN FIBU UND OK ODER RECHNUNG GEDRUCKT 
	. . SET REOK=0
	. . SET WEOK=0
	. . IF $PIECE(POS1,Y,26)=2 SET REOK=1 SET WEOK=1   ;LEISTUNGEN (KEIN WE)       ; Item Type - Service
	. . IF $PIECE(POS1,Y,26)=6 SET REOK=1 SET WEOK=1   ;LEISTUNGEN (KEIN WE)       ; Item Type - Overall Performance
	. . IF $PIECE(POS1,Y,7)=2  SET REOK=1 SET WEOK=1   ;AUS LAGERBESTAND (KEIN WE) ; Source - From stock
	. . IF $PIECE(POS1,Y,7)=3  SET REOK=1              ;EIGENFERTIGUNG (KEINE ER)  ; Source - Production
	. . IF REOK=0 DO
	. . . NEW RENR,REM,LIEF
	. . . IF '$FIND(","_AUFTRAGOK_",",","_7_",") SET REOK=1 QUIT     ;RECHNUNG NICHT WICHTIG ;tab Not weighty 
	. . . IF '$DATA(^INERECH1(YM,AUF,YI))        SET REOK=1 QUIT     ;KEINE EINGANGSRECHNUNG ;no 
	. . . SET LIEF=""
	. . . FOR  SET LIEF=$ORDER(^INERECH1(YM,AUF,YI,LIEF)) QUIT:LIEF=""  DO
	. . . . SET RENR=""
	. . . . FOR  SET RENR=$ORDER(^INERECH1(YM,AUF,YI,LIEF,RENR)) QUIT:RENR=""  DO
	. . . . . QUIT:$PIECE(^INERECH1(YM,AUF,YI,LIEF,RENR,1),Y,80)'=""  ;KEINE WARENRECHNUNG SONDERN SERVICE KOSTEN;FIS;08.09.04;25736
	. . . . . SET REM=$PIECE(^INERECH1(YM,AUF,YI,LIEF,RENR,1),Y,24)
	. . . . . IF REM="" SET REOK=1 QUIT
	. . . . . IF $PIECE($GET(^INERECHMERKER(YM,+REM,1)),Y,2)=$$$YES SET REOK=1  ;AUSGESCHALTET: WENN RECHNUNG OK DANN WE AUCH OK ;table-mat when tab In too 
	. . ;
	. . QUIT:REOK=0
	. . IF WEOK=0 DO
	. . . NEW BET,LAP,WE,WEM
	. . . IF '$FIND(","_AUFTRAGOK_",",","_7_",") SET WEOK=1 QUIT  ;RECHNUNG NICHT WICHTIG ;tab Not weighty 
	. . . IF '$DATA(^INWEAUF(YM,AUF,POS))        SET WEOK=1 QUIT  ;KEIN WE Z.B. BEI LEISTUNGEN ODER AUSGELIEFERT ;no Goods In 
	. . . SET BET=""
	. . . FOR  SET BET=$ORDER(^INWEAUF(YM,AUF,POS,BET)) QUIT:BET=""  DO
	. . . . SET LAP=""
	. . . . FOR  SET LAP=$ORDER(^INWEAUF(YM,AUF,POS,BET,LAP)) QUIT:LAP=""  DO
	. . . . . SET WE=""
	. . . . . FOR  SET WE=$ORDER(^INWEAUF(YM,AUF,POS,BET,LAP,WE)) QUIT:WE=""  DO
	. . . . . . SET WEM=$PIECE($GET(^INWEAUF(YM,AUF,POS,BET,LAP,WE,1)),Y,10)
	. . . . . . IF WEM="" SET WEOK=1 QUIT  ;KEIN EINGANGSRECHNUNGS-MERKER GESETZT
	. . . . . . IF $PIECE($GET(^INWEMERKER(YM,WEM,1)),Y,2)=$$$YES SET WEOK=1     ; $$$INWEMERKERReceivingOK
	. . ;
	. . QUIT:WEOK=0
	. . SET $PIECE(POS1,Y,60)=$$$YES  ;ERL]]><![CDATA[EDIGT UND IN FIBU ;And within 
	. . SET YFORM="INAUFP"
	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES)
	. . ;
	. . IF $PIECE($GET(POS1),Y,97)'="" DO                      ;WE LÖSCHEN GGF, WENN WH NACH RECHNUNGSDRUCK  TYBD 01.06.2002
	. . . do CompleteMovement^INAUFWH(AUF,POS) ; 02-Sep-2008 V2 Processing for SOH Impacting
	. . . MERGE ^INWEAUFALT(YM,AUF,POS)=^INWEAUF(YM,AUF,POS)   ;ERFASSUNG WARENEINGGANG ;logging 
	. . . DO ^WWWSSORT("INWEAUFALT",AUF_","_POS)
	. . . DO ^WWWSKILL("INWEAUF",AUF_","_POS)
	. . . MERGE ^INWEAUFALTS(YM,AUF,POS)=^INWEAUFS(YM,AUF,POS)
	. . . DO ^WWWSSORT("INWEAUFALTS",AUF_","_POS)
	. . . DO ^WWWSKILL("INWEAUFS",AUF_","_POS)
	. ;
	. ; 12) Customer Order Checking (No further processing for this line if completed at end)
	. ;     If Total Sales Price *IS* negative
	. ;     Update Reservation and Stock On Hand
	. ;---------------------------------------
	. IF $PIECE(AUF1,Y,2)=0 IF $PIECE(POS1,Y,119)<0 DO  QUIT:$PIECE(POS1,Y,60)=$$$YES  ;KUNDENAUFTRAG, WENN GUTSCHRIFT PRÜFUNG NUR, OB RECHNUNG GEDRUCKT.   FAN 14.01.2002 GUTSCHRIFT
	. . IF $$$INAUFPBillPrintedDate(POS1)="" QUIT
	. . SET $$$INAUFPPosCompleted(POS1)=1            ;ERLEDIGT
	. . SET YFORM="INAUFP"
	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES) // SR14746
	. . do CompleteMovement^INAUFWH(AUF,POS) ; 08-Oct-2008 V2 Processing for SOH Impacting
	. ;
	. ; 13) Purchase Order Checking (No further processing for this line if completed at end)
	. ;---------------------------------------
	. IF $PIECE(AUF1,Y,2)=2 DO  QUIT:$PIECE(POS1,Y,60)=1  ;LEFERANTEN-BESTELLUNG
	. . IF $PIECE(POS1,Y,26)'=2 IF $PIECE(POS1,Y,26)'=6 IF '$DATA(^INWEAUF(YM,AUF,POS))  QUIT:$FIND(","_BESTELLUNGOK_",",","_6_",")  ;LIEFERSCHEIN WICHTIG ;packing slip weighty 
	. . IF $PIECE(POS1,Y,26)'=2 IF $PIECE(POS1,Y,26)'=6 IF '$DATA(^INERECH1(YM,AUF,POS)) QUIT:$FIND(","_BESTELLUNGOK_",",","_7_",")  ;RECHNUNG WICHTIG ;tab weighty 
	. . SET REOK=0
	. . SET WEOK=0
	. . SET WARENLIEF=""  ;WARENLIEFERANT;FIS;25736;08.09.04
	. . DO
	. . . IF '$FIND(","_BESTELLUNGOK_",",","_7_",") SET REOK=1 QUIT  ;RECHNUNG NICHT WICHTIG ;tab Not important
	. . . NEW RENR,REM,LIEF
	. . . IF '$DATA(^INERECH1(YM,AUF,POS)) SET REOK=1 QUIT   ;KEINE EINGANGSRECHNUNG ;no 
	. . . SET LIEF=""
	. . . FOR  SET LIEF=$ORDER(^INERECH1(YM,AUF,POS,LIEF)) QUIT:LIEF=""  DO
	. . . . SET RENR=""
	. . . . FOR  SET RENR=$ORDER(^INERECH1(YM,AUF,POS,LIEF,RENR)) QUIT:RENR=""  DO
	. . . . . QUIT:$PIECE(^INERECH1(YM,AUF,POS,LIEF,RENR,1),Y,80)'=""  ;KEINE WARENRECHNUNG SONDERN SERVICE KOSTEN;FIS;08.09.04;25736
	. . . . . SET WARENLIEF=LIEF  ;WARENLIEFERANT
	. . . . . SET REM=$PIECE(^INERECH1(YM,AUF,POS,LIEF,RENR,1),Y,24)
	. . . . . IF REM="" SET REOK=1 QUIT  ;SET WEOK=1   ;KEIN EINGANGSRECHNUNGS-MERKER GESETZT ;table-mat no staid 
	. . . . . IF $PIECE($GET(^INERECHMERKER(YM,+REM,1)),Y,2)=1 SET REOK=1   ;SET WEOK=1 ;table-mat 
	. . ;
	. . QUIT:REOK=0
	. . IF WEOK=0 DO
	. . . IF '$FIND(","_BESTELLUNGOK_",",","_6_",") SET WEOK=1 QUIT  ;LIEFERUNG NICHT WICHTIG ;Not important
	. . . NEW BET,LAP,WE,WEM
	. . . IF '$DATA(^INWEAUF(YM,AUF,POS)) SET WEOK=1 QUIT  ;KEIN WIE Z.B. BEI LEISTUNGEN ;no such as e.g. next to LEISTUNGEN 
	. . . SET BET=""
	. . . FOR  SET BET=$ORDER(^INWEAUF(YM,AUF,POS,BET)) QUIT:BET=""  DO
	. . . . SET LAP=""
	. . . . FOR  SET LAP=$ORDER(^INWEAUF(YM,AUF,POS,BET,LAP)) QUIT:LAP=""  DO
	. . . . . SET WE=""
	. . . . . FOR  SET WE=$ORDER(^INWEAUF(YM,AUF,POS,BET,LAP,WE)) QUIT:WE=""  DO
	. . . . . . SET WEM=$PIECE($GET(^INWEAUF(YM,AUF,POS,BET,LAP,WE,1)),Y,10)
	. . . . . . IF WEM="" SET WEOK=1 QUIT  ;KEIN WE-MERKER GESETZT ;no staid 
	. . . . . . IF $PIECE($GET(^INWEMERKER(YM,WEM,1)),Y,2)=1 SET WEOK=1
	. . ;
	. . QUIT:WEOK=0
	. . IF $PIECE(POS1,Y,83)="" QUIT:$FIND(","_BESTELLUNGOK_",",","_3_",")  ;BESTELLUNG WICHTIG ;sales order important 
	. . //SR17175 VVVV
	. . //IF BESTELLUNGOK="" IF '$DATA(^INWEAUF(YM,AUF,POS)) IF '$DATA(^INWEAUFALT(YM,AUF,POS)) QUIT   ;KEIN WE ;no In 
	. . //IF BESTELLUNGOK="" IF '$DATA(^INERECH1(YM,AUF,POS)) QUIT   ;KEINE RECHNUNG ;no tab 
	. . //IF BESTELLUNGOK="" IF WARENLIEF="" QUIT                    ;KEIN WARENLIEFERANT;FIS;25736;08.09.04
	. . //if $piece(POS1,Y,109)<$piece(POS1,Y,5) QUIT					//SR17175 Not yet competely received Qty 
	. . if $$$INAUFPIncomingGoodsQuantity(POS1)<$$$INAUFPQuantity(POS1) QUIT
	. . //SR17175 ^^^
	. . SET $PIECE(POS1,Y,60)=$$$YES                               ;ERLEDIGT UND IN FIBU ;And within 
	. . SET YFORM="INAUFP"
	. . SET strStatus=$$$Save("INAUFP",AUF_","_POS,POS1,$$$YES)    // SR14746
	. . ;DO SAVE^WWWSPEI("INAUFP",AUF_","_POS,POS1,1)
	. . ;SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,60)=1  ;OK // SR14746
	. ;
	. ; 14) Order Line is still open so Order can't be 'Complete'
	. ;---------------------------------------
	. SET Q=0
	
	SET YFORM="INAUF"
	IF Q=1 {
		SET $$$INAUFOrderCompleted(AUF1) = $$$YES
		if AUF1'=AUFORIGINAL SET strStatus=$$$Save("INAUF",AUF,AUF1,$$$YES) ;SR17960
		; previous line may not save due to earlier direct global set and requires
		; following line.
		SET $PIECE(^INAUF(YM,AUF,1),Y,60)=$$$YES							;SR17960
	}
	QUIT 
	
	
AUFKALK  ;NEURECHNEN RÜST- UND AUSFÜHRUNGSZEITEN
	SET LEVEL=""
	FOR  SET LEVEL=$ORDER(^WWWSOR(YUSER,"AUFSORT",LEVEL),-1)  QUIT:LEVEL=""  DO
	. SET TEIL=""
	. FOR  SET TEIL=$ORDER(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL))  QUIT:TEIL=""  DO
	. . IF LEVEL>0 IF $TRANSLATE(TEIL,"0.")'="" DO
	. . . NEW TEIL1,TIME,RUEST,SATZ
	. . . SET TIME  = $PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,1)
	. . . SET RUEST = $PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,2)
	. . . SET TEIL1 = $REVERSE($PIECE($REVERSE(TEIL),".",3,99))
	. . . IF TEIL1="" SET TEIL1=0
	. . . IF TEIL1'=0 SET SATZ=$GET(^INAUFPT(YM,AUF,POS,TEIL1_".",1))
	. . . IF TEIL1=0  SET SATZ=$GET(^INAUFP(YM,AUF,POS,1))
	. . . SET MENGE = $PIECE(SATZ,Y,5)
	. . . SET ART   = $PIECE(SATZ,Y,4)
	. . . SET $PIECE(^WWWSOR(YUSER,"AUFSORT",(LEVEL-1),TEIL1_"."),Y,1)=($PIECE($GET(^WWWSOR(YUSER,"AUFSORT",(LEVEL-1),TEIL1_".")),Y,1)+($JUSTIFY(TIME*MENGE,0,0)))
	. . . SET $PIECE(^WWWSOR(YUSER,"AUFSORT",(LEVEL-1),TEIL1_"."),Y,2)=($PIECE($GET(^WWWSOR(YUSER,"AUFSORT",(LEVEL-1),TEIL1_".")),Y,2)+($JUSTIFY(RUEST*$$^INPROLOS(ART,MENGE),0,0)))
	
	SET LEVEL=""
	FOR  SET LEVEL=$ORDER(^WWWSOR(YUSER,"AUFSORT",LEVEL),-1)  QUIT:LEVEL=""  DO
	. SET TEIL=""
	. FOR  SET TEIL=$ORDER(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL))  QUIT:TEIL=""  DO
	. . IF $TRANSLATE(TEIL,"0.")'="" DO
	. . . NEW DATEI,YI,TIME,RUEST
	. . . SET DATEI="^INAUFPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS
	. . . FOR YI=1:1  QUIT:$PIECE(TEIL,".",YI)=""  SET DATEI=DATEI_","_$PIECE(TEIL,".",YI)
	. . . SET DATEI=DATEI_")"
	. . . QUIT:'$DATA(@DATEI)
	. . . SET $PIECE(@DATEI,Y,45)=$PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,1)
	. . . SET $PIECE(@DATEI,Y,70)=$PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,2)
	. . . SET $PIECE(^INAUFPT(YM,AUF,POS,TEIL,1),Y,45)=$PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,1)
	. . . SET $PIECE(^INAUFPT(YM,AUF,POS,TEIL,1),Y,70)=$PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,2)
	. . ;
	. . IF $TRANSLATE(TEIL,"0.")="" DO
	. . . SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,45)=+$PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,1)
	. . . SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,70)= $PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,2)
	. . . SET $PIECE(^INAUFPXL(YM,AUF,POS),Y,45)=+$PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,1)
	. . . SET $PIECE(^INAUFPXL(YM,AUF,POS),Y,70)= $PIECE($GET(^WWWSOR(YUSER,"AUFSORT",LEVEL,TEIL)),Y,2)
	
	QUIT
	
	/* Data changes for ^INAUFKILL (Doesn't consider ^WWWSOR)
	   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ 
			Kill   ^INAUF,  ^INAUFA,  ^INAUF1,  ^INAUFPZ,  ^INAUFPARA
			Update ^INXAUF, ^INXAUFA, ^INXAUF1, ^INXAUFPZ, ^INXAUFPARA
	
	>  POSITION^INAUFKILL
	
			Kill   ^INRESERVIERT
			Update ^INDRPNETCHANGE
			
			Kill   ^INAUFP, ^INAUFPA, ^INAUFPIMPACT, ^INAUFPINTRA, ^INAUFPK, ^INAUFPLA, ^INAUFPREL, ^INAUFPSP
			Kill   ^INAUFPT, ^INAUFPTEXTRA, ^INAUFPTEXTRAV, ^INAUFPTEXTRAW, ^INAUFPTSN, ^INAUFXL
			Kill   ^INERECH1, ^INWEAUF, ^INWEAUFPT, ^INWEAUFS
			
			Update ^INXAUFP, ^INXAUFPA, ^INXAUFPIMPACT, ^INXAUFPINTRA, ^INXAUFPK, ^INXAUFPLA, ^INXAUFPREL, ^INXAUFPSP
			Update ^INXAUFPT, ^INXAUFPTEXTRA, ^INXAUFPTEXTRAV, ^INXAUFPTEXTRAW, ^INXAUFPTSN, ^INXAUFXL
			Update ^INXERECH1, ^INXWEAUF, ^INXWEAUFPT, ^INXWEAUFS
	
	> >  DRP^INAUFKILL
			Kill   ^INDRPDEMAND
	
	> > >  DRPWV^INAUFKILL
			Kill   ^INDRPWV
	
	> >  ^INARTPLUS
			Kill   ^INWEAUF
			Update ^INPROSTEMP, ^INPROSTEMP1, INAUFP, INWE, ^INWEAUFS
	
	> > >  ^INARTPLUS1
			Update ^INWES, ^INWEAUF, INWE
	
	> > > >  ^INARTMINUS
			Update ^INPROSTEMPT, ^INAUFP, ^INAUFPT, ^INAUFPTSN, ^INAUFPXL, ^INWE, ^INWEAUF, ^INWEAUFPT
	
	> > > > >  ^INARTPLUS1  >>>
	> > > > >  ^INPROWEMINUS					---
	> > > > >  SERIE^INARTMINUS
			Kill   ^INWES
			Update ^INWEAUFS
	> > > > > >  ^INSNHIST  >>>
	
	> > > > >  KOMMISSION^INARTMINUS
			Update ^INWEAUF, ^INAUF
	> > > > > >  ^INAUFANLAGE
	> > > > > > >  AUFTRAG^INAUFANLAGE
			Update ^INAUFA (update copy from ^INKUNDEA or ^INLIEFA), ^INKUNDED, ^INAUF, ^INAUF1
	
	> > > > > > >  POSITION^INAUFANLAGE
			Update ^INAUFPK, ^INAUFP, ^INAUFPSP, ^INAUFPXL
	> > > > > > > >  SetAgreementPrice^INAUFANLAGE
			Update ^INAUFPK
	> > > > > > > >  ^INSALESPRICE				---
	> > > > > > > >  ^INARTHIST  >>>
	> > > > > > > >  ^INAUFPVALDATE				---
	> > > > > > > >  ^INAUFPXLDEL
			Kill   ^INAUFPXL
	> > > > > > > >  ^INAUFTEILE
			Kill   ^INAUFPT
			Update ^INAUFPT, ^INAUFPTs, ^INAUFPXL, ^INDRPDEMAND
	> > > > > > > >  START^INDRPPRODU
			Update ^INDRPDEMAND, ^INAUFPT
	> > > > > > > >  ^INAUFKOST					---
	> > > > > > > >  INARTKOSTEX^INARTKOST		---
	> > > > > > > >  ^INQTYUNIT					---
	> > > > > > > >  ^INAUFPNETTO				---
	> > > > > > > >  ^INAUF1SEL
			Kill   ^INAUF1SEL, ^INAUF1SEL3, ^INAUF1SELT
			Update ^INARTJOB, ^INAUF1SEL, ^INAUF1SEL3, ^INAUF1SELT
	..........................................................
	> > > > > > > >  ^INAUFWH
			Kill   ^INAUFPT, ^INAUFPXL
			Update ^INAUF, ^INAUF1, ^INAUFP, ^INRESERVIERT, ^INDRPDEMAND, ^INDRPSUPPLY
	> > > > > > > > >  START^INDRPPRODU  >>>
	> > > > > > > > >  ^INAUF1SEL  >>>
	> > > > > > > > >  ^INAUFPKNEU
			Update ^INAUFP, ^INAUFPK
	> > > > > > > > >  AUS^INWER
			Update ^INWE, ^INWER, ^INARTHIST
	> > > > > > > > >  ^INARTMINUS  >>>
	..........................................................
	
	> > > > > > > >  RELOCATE^INRESERVIERT
	...
	> > > > > > > >  ZUSATZ^INAUF1  >>>
	> > > > > > > >  ^INAUFPOS
			Update ^INAUF, ^INAUFP, ^INAUFPK, ^INAUFPSP (from ^INARTSP), ^INDRPNETCHANGE
	> > > > > > > > >  ^INARTMINUS  >>>
	
	> > > > > >  ^INWEAUF
	...
	> > > > >  ^INFIBBUCH  >>>
	> > > > >  ^INARTHIST  >>>
	
	> > > >  Increment^INWECounter
			Update ^INWECounter
	
	> > > >  ^INARTAVG
			Update ^INART, ^INARTAVG
	
	> > > >  PostLabour^INARTPLUS1			---
	> > > > >  ^INPROSTEMP0
			Kill   ^INPROSTEMP0
			Update ^INPROSTEMP0
	> > > > > >  ^WWW013ZZEIT				---
	> > > > >  ^INARTKOSTT					---
	> > > > >  ^INFIBBUCH
	> > > > > >  REGEL^INFIBBUCH			---
	> > > > > >  BUCH^INFIBBUCH
			Update ^INFIBBUCH, ^INFIBBUCHPROT
	> > > > > > >  ^INFIBBUCHHOLD
			Update ^INFIBBUCHHOLD
	> > > > > > >  ^INFIBBUCH4
	> > > > > > > >  ^INFIBBUCH41/2/3/4
			Update ^mtemp($j)
	
	> > > > >  SaveService^INARTPLUS1
			Update INAUFP
	
	> > > >  SPEI^INARTPLUS1
			Update ^INPROSTEMP, ^INPROSTEMP1, ^INAUF, ^INAUFP, ^INAUFPT, ^INAUFPXL, ^INDRPDEMAND
	
	> > > >  AutoUpdate^INStockValAdjust
	> > > > >  FIBU^INARTHIST
	> > > > > >  Update^INStockVal
			Kill   ^INStockVal
			Update ^INStockVal
	> > > > > >  ^INFIBBUCH  >>>
	
	
	> > > >  HIST^INSNHIST	>>>
	> > > >  STOP^INWKZHIST
			Update ^INWERKZEUG
	> > > >  ^INARTKOST
			Update ^INARTPREISLOG
			
	
	
	> > >  ^INARTHIST
			Update ^INDRPNETCHANGE, ^INARTHIST, ^INARTHISTL
	> > > >  FIBU^INARTHIST  >>>
	
	
	> > > SERIE^INARTPLUS
			Kill   ^INWEAUFS
			Update ^INWES, ^INWEAUFALTS
	
	
	> > > ^INSNHIST
		Update ^INSNHIST
	
	
	
	> >  ZUSATZ^INAUF1
		Update ^INAUF
	> > >  ^INAUFPIMPACT
		Update INAUFPIMPACT
	*/
	
]]></Routine>
</Export>