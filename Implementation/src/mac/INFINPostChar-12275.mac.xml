<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INFINPostChar" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INFINPostChar
	
#include COMSYS
#include %occInclude
#include INConst
#include FINConst
#include FINEnum
	
PostingCharMatch(&pobjFINMsg,pidRecordType="",penumType="",pidLocn="",pstrKey="")	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		POSTING CHARACTERISTICS MATCHING
	; 
	; Called By : INFINInterface
	; 
	; Inputs  :
	;   
	; History :
	; 21-Sep-2009	DWR		SR16880: Modified version of ^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	do Load(.pobjFINMsg,penumType)
	do HealthCheck(.pobjFINMsg,pidRecordType,penumType,pidLocn,pstrKey)
	quit
	
	
Load(&pobjFINMsg,penumType="")
	;-------------------------------------------------------------------------------
	; Load Characteristic values into INFIBBUCH/FINMessage (Booking/Reservation)
	; record if not already present.
	; Uses Item Group recursion
	; 
	; History :
	; 24-Sep-2009	GRF		SR16880: use idOrder, idOrdLine
	; 21-Sep-2009	DWR		SR16880: Modified from LOAD^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	new enumOrdType,idCustomer,idFromLocn,idFromStore,idSupplier,idToLocn,idToStore
	new idItem,idOrder,idOrdLine,objOrder,objOrderLine,strPostChars
	
	set idOrder   = $$$FINMessageOrderNo(pobjFINMsg)
	set idOrdLine = $$$FINMessageOrderLine(pobjFINMsg)
	
	; ITEMS & Recursive ITEM GROUPS with COMPONENT & PARENT ITEMS
	;------------------------------------------------------------
	set idItem = $$$FINMessageItem(pobjFINMsg)
	if idItem="" {
		if (idOrder'="") && idOrdLine {
			set idItem = $$$INAUFPItemName($get(^INAUFP(0,idOrder,idOrdLine,1)))
		}
	}
	do ProcessItem(idItem,.pobjFINMsg)
 	
	; STORAGES & LOCATIONS   [DEPARTMENTS DEPRECATED]
	;---------------------------------------
	set idFromLocn  = $$$FINMessageFromLocn(pobjFINMsg)
	set idFromStore = $$$FINMessageFromStorage(pobjFINMsg)
	set idToLocn    = $$$FINMessageToLocn(pobjFINMsg)
	set idToStore   = $$$FINMessageToStorage(pobjFINMsg)
	
	do GetLocationChars(idFromLocn,idFromStore,idToLocn,idToStore,.pobjFINMsg)
	
	; ORDERS
	;---------------------------------------
	set objOrder = ""
	if idOrder'="" {
		set objOrder = $$GetObjOrder^INRECSummaryUtil(idOrder)
		if objOrder'=$$$NULLOREF {
			set strPostChars = $$GetOrderPostChars^INRECSummaryUtil(objOrder)
			if $$$FINMessageOrdPostChar1(pobjFINMsg)="" set $$$FINMessageOrdPostChar1(pobjFINMsg) = $piece(strPostChars,Y,1)
			if $$$FINMessageOrdPostChar1(pobjFINMsg)="" set $$$FINMessageOrdPostChar1(pobjFINMsg) = $piece(strPostChars,Y,2)
		}
	}
	
	; SUPPLIERS & SUPPLIER GROUPS FOR SUPPLIER INVOICES ONLY
	;---------------------------------------
	if penumType=$$$EnumSuppInvoice {
		set idSupplier = $$$FINMessageDebitAccount(pobjFINMsg)  ; FIXME is it ever possible for the 2 to be out of sync, and if so it might crash DWR
		do GetSupplierChars(idSupplier,.pobjFINMsg)
		
	; CUSTOMERS & CUSTOMER GROUPS FOR CUSTOMER INVOICES ONLY
	;---------------------------------------
	} elseif penumType=$$$EnumCustInvoice {
		set idCustomer = $$$FINMessageCreditAccount(pobjFINMsg)  ; FIXME is it ever possible for the 2 to be out of sync, and if so it might crash DWR
		do GetCustomerChars(idCustomer,.pobjFINMsg)
	
	; SUPPLIERS OR CUSTOMERS (WITH GROUPS) FOR INVENTORY CHANGE ONLY
	;---------------------------------------
	} elseif penumType=$$$EnumStockChange {
		if objOrder'=$$$NULLOREF {
			set enumOrdType = $$GetOrderType^INRECSummaryUtil(objOrder)
			
			if enumOrdType = 0 {   ; Customer Order - which may have associated Supplier Order
				if $$$FINMessageMovementFlag(pobjFINMsg) = 0 {
					if idOrdLine'="" {
						set objOrderLine = $$GetObjOrderLine^INRECSummaryUtil(idOrder,idOrdLine)
						set idSupplier   = $$GetLineSupplier^INRECSummaryUtil(objOrderLine)
						do GetSupplierChars(idSupplier,.pobjFINMsg)
					}
				
				} else {
					set idCustomer = $$GetCustomerNo^INRECSummaryUtil(objOrder)
					do GetCustomerChars(idCustomer,.pobjFINMsg)
				
				}
			} elseif enumOrdType=2 {   ; Supplier Order
				set idSupplier = $$GetSupplierID^INRECSummaryUtil(objOrder)
				do GetSupplierChars(idSupplier,.pobjFINMsg)
			}
		}
	}
	; TODO : Add Reason Code if extended from Adjustments - see routine INFIBBUCHCODE for draft example
	quit
	
	
ProcessItem(pidItem="",&pobjFINMsg="")
	;-------------------------------------------------------------------------------
	; 
	; History :
	; 21-Sep-2009	DWR		SR16880: Modified from ^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	if pidItem'="" {
		do GetItemChars(pidItem,.pobjFINMsg)	
		
		; COMPONENT ITEM CODE (C-IC#)	COMPONENT ITEM = ITEM
		if $$$FINMessageCompItemPostChar1(pobjFINMsg)="" set $$$FINMessageCompItemPostChar1(pobjFINMsg) = $$$FINMessageItemPostChar1(pobjFINMsg)
		if $$$FINMessageCompItemPostChar2(pobjFINMsg)="" set $$$FINMessageCompItemPostChar2(pobjFINMsg) = $$$FINMessageItemPostChar2(pobjFINMsg)
		if $$$FINMessageCompItemPostChar3(pobjFINMsg)="" set $$$FINMessageCompItemPostChar3(pobjFINMsg) = $$$FINMessageItemPostChar3(pobjFINMsg)
	}
	
	; PARENT ITEM CODE (P-IC#)
	set pidItem = $$$FINMessageParentItem(pobjFINMsg)
	if pidItem'="" {
		do GetParentItemChars(pidItem,.pobjFINMsg)
	} else {
		; NO PARENT ITEM -> PARENT ITEM = ITEM
		if $$$FINMessageParItemPostChar1(pobjFINMsg)="" set $$$FINMessageParItemPostChar1(pobjFINMsg) = $$$FINMessageItemPostChar1(pobjFINMsg)
		if $$$FINMessageParItemPostChar2(pobjFINMsg)="" set $$$FINMessageParItemPostChar2(pobjFINMsg) = $$$FINMessageItemPostChar2(pobjFINMsg)
		if $$$FINMessageParItemPostChar3(pobjFINMsg)="" set $$$FINMessageParItemPostChar3(pobjFINMsg) = $$$FINMessageItemPostChar3(pobjFINMsg)
	}
	quit
	
	
GetSupplierChars(pidSupplier="",&pobjFINMsg)
	;-------------------------------------------------------------------------------
	; Load 3 Supplier Characteristic Codes into INFIBBUCH/FINMessage record.
	; General settings at Supplier Group will be overwritten by specific settings on
	; Supplier record.
	; 
	; History :
	; 21-Sep-2009	DWR		SR16880: Modified from ^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	new idGroup,objSupGroup,objSupplier
	
	quit:pidSupplier=""
	
	set objSupplier = $get(^INLIEF(0,pidSupplier,1))
	if $$$FINMessageSupPostChar1(pobjFINMsg)="" set $$$FINMessageSupPostChar1(pobjFINMsg) = $$$INLIEFPostingCharacteristic1(objSupplier)
	if $$$FINMessageSupPostChar2(pobjFINMsg)="" set $$$FINMessageSupPostChar2(pobjFINMsg) = $$$INLIEFPostingCharacteristic2(objSupplier)
	if $$$FINMessageSupPostChar3(pobjFINMsg)="" set $$$FINMessageSupPostChar3(pobjFINMsg) = $$$INLIEFPostingCharacteristic3(objSupplier)
	
	set idGroup = $$$INLIEFSuppliersGroup(objSupplier)
	if idGroup'="" {
		set objSupGroup = $get(^INFIBSUPGROUP(0,idGroup,1))
		if $$$FINMessageSupPostChar1(pobjFINMsg)="" set $$$FINMessageSupPostChar1(pobjFINMsg) = $$$INFIBSUPGROUPPostingChar1(objSupGroup)
		if $$$FINMessageSupPostChar2(pobjFINMsg)="" set $$$FINMessageSupPostChar2(pobjFINMsg) = $$$INFIBSUPGROUPPostingChar2(objSupGroup)
		if $$$FINMessageSupPostChar3(pobjFINMsg)="" set $$$FINMessageSupPostChar3(pobjFINMsg) = $$$INFIBSUPGROUPPostingChar3(objSupGroup)
	}
	quit
	
	
GetCustomerChars(pidCustomer="",&pobjFINMsg)
	;-------------------------------------------------------------------------------
	; Load 3 Customer Characteristic Codes into INFIBBUCH/FINMessage record.
	; General settings at Customer Group will be overwritten by specific settings on
	; Customer record.
	; 
	; History :
	; 21-Sep-2009	DWR		SR16880: Modified from ^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	new idGroup,objCustGroup,objCustomer
	
	quit:pidCustomer=""
	
	set objCustomer = $get(^INKUNDE(0,pidCustomer,1))
	if $$$FINMessageCustPostChar1(pobjFINMsg)="" set $$$FINMessageCustPostChar1(pobjFINMsg) = $$$INKUNDEPostingCharacteristic1(objCustomer)
	if $$$FINMessageCustPostChar2(pobjFINMsg)="" set $$$FINMessageCustPostChar2(pobjFINMsg) = $$$INKUNDEPostingCharacteristic2(objCustomer)
	if $$$FINMessageCustPostChar3(pobjFINMsg)="" set $$$FINMessageCustPostChar3(pobjFINMsg) = $$$INKUNDEPostingCharacteristic3(objCustomer)
	
	set idGroup = $piece(objCustomer,Y,31)
	if idGroup'="" {
		set objCustGroup = $get(^INFIBCUSTGROUP(0,idGroup,1))
		if $$$FINMessageCustPostChar1(pobjFINMsg)="" set $$$FINMessageCustPostChar1(pobjFINMsg) = $$$INFIBCUSTGROUPPostingChar1(objCustGroup)
		if $$$FINMessageCustPostChar2(pobjFINMsg)="" set $$$FINMessageCustPostChar2(pobjFINMsg) = $$$INFIBCUSTGROUPPostingChar2(objCustGroup)
		if $$$FINMessageCustPostChar3(pobjFINMsg)="" set $$$FINMessageCustPostChar3(pobjFINMsg) = $$$INFIBCUSTGROUPPostingChar3(objCustGroup)
	}
	
	quit
	
	
GetItemChars(pidItem="",&pobjFINMsg)
	;-------------------------------------------------------------------------------
	; Load 3 Item Characteristic Codes into INFIBBUCH/FINMessage record.
	; Specific settings from Item will apply before successive settings from the
	; Item Group hierarchy.
	; 
	; ByRef : 
	; 
	; History :
	; 21-Sep-2009	DWR		SR16880: Modified from ^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	new blnFinished,idGroup,objItem,objItemGroup

	if pidItem'="" {
		set objItem=$get(^INART(0,pidItem,1))
		
		if $$$FINMessageItemPostChar1(pobjFINMsg)=""{
			set $$$FINMessageItemPostChar1(pobjFINMsg) = $$$INARTPostingCharacteristic1(objItem)
		}
		
		if $$$FINMessageItemPostChar2(pobjFINMsg)=""{
			set $$$FINMessageItemPostChar2(pobjFINMsg) = $$$INARTPostingCharacteristic2(objItem)
		}
		
		if $$$FINMessageItemPostChar3(pobjFINMsg)=""{
			set $$$FINMessageItemPostChar3(pobjFINMsg) = $$$INARTPostingCharacteristic3(objItem)
		}
		
		set idGroup = $$$INARTItemGroup(objItem)
		if idGroup="" {
			set idGroup = $$$INVORGDefaultItemGroup($get(^INVORG(0,0,1)))
		}
		
		; Continue searching up Item Category Chain until we have a value for each Char Type
		; or reach top of chain
		; e.g. Item 123 => Item Group A-AA-5 => Group A-AA => Group A [stops]
		;      If all three characteristic types have values earlier, don't check further.
		for {
			set blnFinished=(($$$FINMessageItemPostChar1(pobjFINMsg)'="") &&
			                 ($$$FINMessageItemPostChar2(pobjFINMsg)'="") &&
			                 ($$$FINMessageItemPostChar3(pobjFINMsg)'="")   )
			quit:blnFinished
			quit:idGroup=""
						
			set objItemGroup = $get(^INFIBITEMGROUP(0,idGroup,1))
			if $$$FINMessageItemPostChar1(pobjFINMsg)="" set $$$FINMessageItemPostChar1(pobjFINMsg) = $$$INFIBITEMGROUPPostingChar1(objItemGroup)
			if $$$FINMessageItemPostChar2(pobjFINMsg)="" set $$$FINMessageItemPostChar2(pobjFINMsg) = $$$INFIBITEMGROUPPostingChar2(objItemGroup)
			if $$$FINMessageItemPostChar3(pobjFINMsg)="" set $$$FINMessageItemPostChar3(pobjFINMsg) = $$$INFIBITEMGROUPPostingChar3(objItemGroup)
		
			set idGroup = $$$INItemGroupParentGroup($get(^INItemGroup(0,idGroup,1)))
		}
	}
	quit
	
	
GetParentItemChars(pidItem="",&pobjFINMsg)
	;-------------------------------------------------------------------------------
	; Load 3 Item Characteristic Codes into INFIBBUCH/FINMessage record based on
	; parent item where Raw Mats => Finished Goods
	; 
	; History :
	; 21-Sep-2009	DWR		SR16880: Modified from ^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	new blnFinished,idGroup,objItem,objItemGroup

	if pidItem'="" {
		set objItem = $get(^INART(0,pidItem,1))
		
		if $$$FINMessageParItemPostChar1(pobjFINMsg)=""{
			set $$$FINMessageParItemPostChar1(pobjFINMsg) = $$$INARTPostingCharacteristic1(objItem)
		}
		
		if $$$FINMessageParItemPostChar2(pobjFINMsg)=""{
			set $$$FINMessageParItemPostChar2(pobjFINMsg) = $$$INARTPostingCharacteristic2(objItem)
		}
		
		if $$$FINMessageParItemPostChar3(pobjFINMsg)=""{
			set $$$FINMessageParItemPostChar3(pobjFINMsg) = $$$INARTPostingCharacteristic3(objItem)
		}
		
		set idGroup = $$$INARTItemGroup(objItem)
		if idGroup="" {
			set idGroup = $$$INVORGDefaultItemGroup($get(^INVORG(0,0,1)))
		}
		
		; Continue searching up Item Category Chain until we have a value for each Char Type
		; or reach top of chain
		; e.g. Item 123 => Item Group A-AA-5 => Group A-AA => Group A [stops]
		;      If all three characteristic types have values earlier, don't check further.
		for {
			set blnFinished=(($$$FINMessageParItemPostChar1(pobjFINMsg)'="") &&
			                 ($$$FINMessageParItemPostChar2(pobjFINMsg)'="") &&
			                 ($$$FINMessageParItemPostChar3(pobjFINMsg)'="")   )
			quit:blnFinished
			quit:idGroup=""
						
			set objItemGroup = $get(^INFIBITEMGROUP(0,idGroup,1))
			if $$$FINMessageParItemPostChar1(pobjFINMsg)="" set $$$FINMessageParItemPostChar1(pobjFINMsg) = $$$INFIBITEMGROUPPostingChar1(objItemGroup)
			if $$$FINMessageParItemPostChar2(pobjFINMsg)="" set $$$FINMessageParItemPostChar2(pobjFINMsg) = $$$INFIBITEMGROUPPostingChar2(objItemGroup)
			if $$$FINMessageParItemPostChar3(pobjFINMsg)="" set $$$FINMessageParItemPostChar3(pobjFINMsg) = $$$INFIBITEMGROUPPostingChar3(objItemGroup)
		
			set idGroup = $$$INItemGroupParentGroup($get(^INItemGroup(0,idGroup,1)))
		}
	}
	quit

		
GetLocationChars(pidFromLocn,pidFromStore,pidToLocn,pidToStore,&pobjFINMsg)
	;-------------------------------------------------------------------------------
	; Load 2 Location Characteristic Codes into INFIBBUCH/FINMessage record for both
	; Location From & Location To.  Settings at storage level would only be expected
	; in special cases such as QA Inspection and Customer/Supplier Returns.
	; 
	; TODO : Does not currently follow the location hierarchy to allow more general
	; settings to be specified rather than setting the posting characteristics for
	; each location.
	;    
	; Check Storage then Location      [Department is DEPRECATED]
	; 
	; History :
	; 21-Sep-2009	DWR		SR16880: Modified from ^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	new objLocn,objStorage
	
	if pidToLocn'="" {
		if pidToStore'="" {
			set objStorage = $get(^INLP(0,pidToLocn,pidToStore,1))
			if $$$FINMessageToLocnPostChar1(pobjFINMsg)="" set $$$FINMessageToLocnPostChar1(pobjFINMsg) = $$$INLPPostingCharacteristic1(objStorage)
			if $$$FINMessageToLocnPostChar2(pobjFINMsg)="" set $$$FINMessageToLocnPostChar2(pobjFINMsg) = $$$INLPPostingCharacteristic2(objStorage)
		}
		set objLocn = $get(^WWW0121(0,0,pidToLocn,1))
		if $$$FINMessageToLocnPostChar1(pobjFINMsg)="" set $$$FINMessageToLocnPostChar1(pobjFINMsg) = $$$WWW0121PostingCharacteristic1(objLocn)
		if $$$FINMessageToLocnPostChar2(pobjFINMsg)="" set $$$FINMessageToLocnPostChar2(pobjFINMsg) = $$$WWW0121PostingCharacteristic2(objLocn)
		
	}
	if pidFromLocn'="" {
		if pidFromStore'="" {
			set objStorage = $get(^INLP(0,pidFromLocn,pidFromStore,1))
			if $$$FINMessageFromLocnPostChar1(pobjFINMsg)="" set $$$FINMessageFromLocnPostChar1(pobjFINMsg) = $$$INLPPostingCharacteristic1(objStorage)
			if $$$FINMessageFromLocnPostChar2(pobjFINMsg)="" set $$$FINMessageFromLocnPostChar2(pobjFINMsg) = $$$INLPPostingCharacteristic2(objStorage)
		}
	
		set objLocn = $get(^WWW0121(0,0,pidFromLocn,1))
		if $$$FINMessageFromLocnPostChar1(pobjFINMsg)="" set $$$FINMessageFromLocnPostChar1(pobjFINMsg) = $$$WWW0121PostingCharacteristic1(objLocn)
		if $$$FINMessageFromLocnPostChar2(pobjFINMsg)="" set $$$FINMessageFromLocnPostChar2(pobjFINMsg) = $$$WWW0121PostingCharacteristic2(objLocn)
	}
	quit
	
	
HealthCheck(&pobjFINMsg,pidRecordType="",penumType="",pidLocn="",pstrKey="")
	;-------------------------------------------------------------------------------
	;  CHECK FOR REQUIRED CHARACTERISTICS
	;
	; History :
	; 13-Oct-2009	DWR		SR16880: If Reson code is required and has not been
	; 							set, use the general company parameter default RC
	; 21-Sep-2009	DWR		SR16880: Modified from HEALTHCHECK^INFIBBUCHCODE
	;-------------------------------------------------------------------------------
	new blnHoldTx,dteCurrentPolicy,enumCharValue,enumTxnType,intNumParams,intPieceNo
	new intSeq,loop,objMatrix,strCodeList,strFieldList,strStatus
	
	set enumTxnType = $$$FINMessageCharacteristicType(pobjFINMsg)  ;TRANSACTION TYPE (ISS, REC, ADJ, ...)
	set blnHoldTx   = $$$NO 
	
	if enumTxnType'="" {
		if $data(^INFIBCHARMATRIX(0,enumTxnType)) {
			set dteCurrentPolicy = $order(^INFIBCHARMATRIX(0,enumTxnType,$horolog+1),-1)
			if dteCurrentPolicy'="" {
				set objMatrix = $get(^INFIBCHARMATRIX(0,enumTxnType,dteCurrentPolicy,1))
				if $$$INFIBCHARMATRIXRequired(objMatrix)'="" {
					set strFieldList = "70,71,72,73,74,75,76,77,78,80,81,85,86,90,91,92,95,96,97,100,101,103"	
					set strCodeList  = "IC1,IC2,IC3,C-IC1,C-IC2,C-IC3,P-IC1,P-IC2,P-IC3,LC1,LC2,T-LC1,T-LC2,SC1,SC2,SC3,CC1,CC2,CC3,OC1,OC2,RC"
					set intNumParams = $length(strFieldList,",")
					for loop=1:1:intNumParams {
						quit:blnHoldTx=$$$YES
						
						set intPieceNo    = $piece(strFieldList,",",loop)      ; Data Position
						set enumCharValue = $piece(strCodeList,",",loop)       ; CV Code
						set enumCharValue = ";"_enumCharValue_";"
						if $piece(pobjFINMsg,Y,intPieceNo)=""{
							if $find(";"_$$$INFIBCHARMATRIXRequired(objMatrix)_";",enumCharValue) {
								if enumCharValue=";RC;"{
									set objParam = $get(^INVORG(0,0,1))
									if $$$INVORGDefaultAdjustReason(objParam)'=""{
										set $$$FINMessageAdjReasonCode(pobjFINMsg)= $$$INVORGDefaultAdjustReason(objParam)
									} else {
										set blnHoldTx = $$$YES
									}
								}
							}
						}
					}
				}
			}
		}
	}
							
	if blnHoldTx {
		if pidLocn="" set pidLocn = YLOCATION
		
		set intSeq = $order(^INFIBBUCHHOLD(0,pidLocn,+$horolog,""),-1)+1
		set $$$FINMessageTxnType(pobjFINMsg)    = penumType
		set $$$FINMessageRecordType(pobjFINMsg) = pidRecordType
		set $$$FINMessageTxnDefData(pobjFINMsg) = pstrKey
		set strStatus = $$$Save("INFIBUCHHOLD",pidLocn_$$$COMMA_+$horolog_$$$COMMA_intSeq,pobjFINMsg)
		set pobjFINMsg = ""
	}   ; FIXME : An error on save will still remove data in pobjFINMsg meaning tx will
		;         be lost.  Ideally strStatus should cause the PostTxn to roll back. <GRF>
	quit

]]></Routine>
</Export>