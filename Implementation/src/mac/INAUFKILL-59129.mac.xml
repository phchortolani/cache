<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INAUFKILL" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INAUFKILL(YKEY,YDRPKILL)
#include INConst
#include COMSYS
#include INAConst
#include %occInclude
	/*------------------------------------------------------------------------------
	; Description of Function :
	;		LOESCHEN AUFTRÄGE
	;		DELETE ORDERS
	;		
	; Inputs : 
	;	YKEY		
	;		#1 YAUFTRAG		Order No
	;		#2 YPOS			Order Line
	;	YDRPKILL		 ;AUTOM. LÖSCHEN DURCH DRP PROZESS
	;	
	;
	; ByRef :
	;
	;
	; Returns :
	;	Q	0	Deletion
	;		1	No Deletion
	;
	; History :
	; 17-Feb-2010	GRF		SR17189: Was deleting INAUF before other WWWKILL steps
	; 03-Jul-2009	GRF		SR16649: use macros
	; 06-Apr-2006	GRF		Doco
	; 02.02.2005	FIS		27220
	; 21.09.2004	FIS		26407
	; 21.06.2004	FAN		25794
	; 07.08.2000	DT		Created
	;-----------------------------------------------------------------------------*/
	NEW ACCESS,YAUFTRAG,YDATEI,YFELD,YFORM,YPOS,YVOR,YVORG
	
	//set Q=$$$QDontDelete
	//quit
	
	quit:$GET(YKEY)=""
	
	SET YAUFTRAG = $$$KEY1(YKEY)
	SET YPOS     = $$$KEY2(YKEY)
	SET YDRPKILL = +$GET(YDRPKILL)  ;AUTOM. LÖSCHEN DURCH DRP PROZESS;26407;FIS;21.09.04
	
	;WENN KEINE POSITON, DANN ALLE POSITIONEN LÖSCHEN
	QUIT:$GET(YAUFTRAG)=""  ;KEIN AUFTRAG ;no order 
	
	;BERECHTIGUNG PRÜFEN !  -> SYSTEM-ADMIN KANN IMMER LÖSCHEN ! ;check authorisation - system admin can always Delete 
	SET ACCESS = 0
	IF $FIND(","_$$^WWWBEDBER(YBED)_",",","_"1"_",") SET ACCESS=1
	;SET ACCESS=1  ;IMMER LÖSCHEN
	
	SET Q = $$$QDelete
	
	IF YPOS'="" DO POSITION QUIT  ;NUR POS LÖSCHEN ;only Delete order line
	
	;AUFTRAGSKOPF ; Order Heading
	;	D97		$$$INAUFBillPrintedDate()
	IF YPOS="" DO
	. IF ACCESS'=1 IF $PIECE($GET(^INAUF(YM,YAUFTRAG,1)),Y,97)'=""                    SET Q = $$$QDontDelete QUIT  ;RECHNUNG GEDRUCKT ;tab 
	. ; FIXME : will always process with removal of INWEAUF*. Test INRECSummarys/INRECLines?   SR16361
	. IF ACCESS'=1 IF $DATA(^INWEAUF(YM,YAUFTRAG)) || $DATA(^INWEAUFALT(YM,YAUFTRAG)) SET Q = $$$QDontDelete QUIT  ;WE BEREITS ERFOLGT ;In yet 
	. ;
	. FOR  SET YPOS=$ORDER(^INAUFP(YM,YAUFTRAG,YPOS)) QUIT:YPOS=""  DO POSITION
	. ;
	. quit:Q=$$$QDontDelete  ;KEIN LÖSCHEN ;no Delete 
	. ;
	. ;   LÖSCHEN ;Delete
	. SET YFELD=""
	. IF YDRPKILL'=1 MERGE ^INXAUF(YM,YAUFTRAG)=^INAUF(YM,YAUFTRAG)
	. ; SR17189 DO ^WWWSKILL("INAUF",YAUFTRAG)
	. ;
	. IF YDRPKILL'=1 MERGE ^INXAUFA(YM,YAUFTRAG)=^INAUFA(YM,YAUFTRAG)  ;Anschriften ;address class 
	. DO ^WWWSKILL("INAUFA",YAUFTRAG)
	. ;
	. ;OFFENE AUFTRÄGE
	. SET YFELD=""
	. IF YDRPKILL'=1 MERGE ^INXAUF1(YM,YAUFTRAG)=^INAUF1(YM,YAUFTRAG)
	. DO ^WWWSKILL("INAUF1",YAUFTRAG)
	. ;
	. IF YDRPKILL'=1 MERGE ^INXAUFPZ(YM,YAUFTRAG)=^INAUFPZ(YM,YAUFTRAG)   ;ZAHLUNGSVEREINBARUNGEN
	. DO ^WWWSKILL("INAUFPZ",YAUFTRAG)
	. ;
	. IF YDRPKILL'=1 MERGE ^INXAUFPARA(YM,YAUFTRAG)=^INAUFPARA(YM,YAUFTRAG)   ;POSITIONSGRUPPEN
	. DO ^WWWSKILL("INAUFPARA",YAUFTRAG)
	 
	QUIT
	
	
POSITION
    ;-------------------------------------------------------------------------------
    ;		LÖSCHEN POSITIONEN ;Delete order line
    ; 
	;	Kill   ^INRESERVIERT
	;	Update ^INDRPNETCHANGE
	;	
	;	Kill   ^INAUFP, ^INAUFPA, ^INAUFPIMPACT, ^INAUFPINTRA, ^INAUFPK, ^INAUFPLA, ^INAUFPREL, ^INAUFPSP
	;	Kill   ^INAUFPT, ^INAUFPTEXTRA, ^INAUFPTEXTRAV, ^INAUFPTEXTRAW, ^INAUFPTSN, ^INAUFXL
	;	Kill   ^INERECH1, ^INWEAUF, ^INWEAUFPT, ^INWEAUFS
	;	
	;	Update ^INXAUFP, ^INXAUFPA, ^INXAUFPIMPACT, ^INXAUFPINTRA, ^INXAUFPK, ^INXAUFPLA, ^INXAUFPREL, ^INXAUFPSP
	;	Update ^INXAUFPT, ^INXAUFPTEXTRA, ^INXAUFPTEXTRAV, ^INXAUFPTEXTRAW, ^INXAUFPTSN, ^INXAUFXL
	;	Update ^INXERECH1, ^INXWEAUF, ^INXWEAUFPT, ^INXWEAUFS
    ; 
    ; History:
    ; 02-Oct-2009	GRF		SR16361: implement use of INRECSummary & INRECLine
    ; 							indices in place of INWEAUF*
    ; 07-Dec-2006	Steve S	SR15233: Import Check
    ; 22-Nov-2005	JW		SR13877: Reverted change, functionality now in INARTPLUS
    ; 16-Nov-2005	RPW		SR13869: Added a routine to start to handle the multiple
    ; 						locations/stock location tuples.
    ;-------------------------------------------------------------------------------
	NEW ART,REST,FERTIGUNG,POS1,XAUF,XPOS,INFERTIGUNG,SUCH,BETRIEB,DEMAND
	
	;+++++++++++++++++++++++++++++++++++++++
	;	@SUCH		objINAUFPXL		Order Bill of Production
	;	POS1		objINAUFP		Order Line
	;	D4		$$$INAUFPItemNumber()
	;	D7		$$$INAUFPSource()
	;	D97		$$$INAUFPBillPrintedDate()
	;	D145	$$$INAUFPStockOrder()
	;	D146	$$$INAUFPStockOrderLineItem()
	;+++++++++++++++++++++++++++++++++++++++
	
	SET POS1=$GET(^INAUFP(YM,YAUFTRAG,YPOS,1))
	QUIT:POS1=""
	
	SET ART  = $PIECE(POS1,Y,4)   ;ARTIKEL ;item 
	SET REST = $PIECE(POS1,Y,5)   ;MENGE   ;quantity 
	SET BETRIEB = $PIECE($GET(^INAUF(YM,YAUFTRAG,1)),Y,6)  ;BETRIEB   ; D6 $$$INAUFLocation()
	IF BETRIEB="" SET BETRIEB = $GET(YLOCATION)
	
	IF ACCESS'=1 IF $PIECE(POS1,Y,97)'=""                                                     SET Q=$$$QDontDelete QUIT  ;RECHNUNG GEDRUCKT ;tab 
	; FIXME : will always process with removal of INWEAUF*. Test INRECSummarys/INRECLines?   SR16361
	IF ACCESS'=1 IF $DATA(^INWEAUF(YM,YAUFTRAG,YPOS)) || $DATA(^INWEAUFALT(YM,YAUFTRAG,YPOS)) SET Q=$$$QDontDelete QUIT  ;WE BEREITS ERFOLGT ;In yet 
	
	;	D165	$$$INAUFPXLManufacturingNumber()
	SET INFERTIGUNG=0
	IF $PIECE(POS1,Y,7)=3 DO  ;PRÜFEN FERTIGUNGSSTATUS ;check manufacturing order status. 
	. SET SUCH="^INAUFPXL("_""""_YM_""""_","_""""_YAUFTRAG_""""_","_YPOS_")"
	. FOR  DO  QUIT:SUCH=""
	. . SET SUCH=$QUERY(@SUCH)
	. . IF $TRANSLATE($PIECE(SUCH,",",2),"""")'=YAUFTRAG SET SUCH="" QUIT  ;21.06.04;FAN;25794; WENN alphanumerischen Auftragsnummern SOLL DATEN AUCH AUFBAUEN.
	. . ;IF $PIECE(SUCH,",",2)'=YAUFTRAG SET SUCH="" QUIT  ;21.06.04;FAN;25794;  ;FALSCHER AUFTRAG
	. . IF $PIECE(SUCH,",",3)=YPOS DO
	. . . IF $PIECE(@SUCH,Y,165)'="" IF $DATA(^INPROSTEMP0(YM,$PIECE(@SUCH,Y,165))) SET INFERTIGUNG=1
	
	IF ACCESS'=1 IF INFERTIGUNG=1              set Q = $$$QDontDelete quit         ; *** EARLY EXIT ***
	if $$GetImportNo^INAUFP(YAUFTRAG,YPOS)'="" set Q = $$$QDontDelete quit         ; *** EARLY EXIT ***   ; SR15233 Import Check
	
	DO  ;LAGERBESTELLUNG
	. SET XAUF = $PIECE(POS1,Y,145)  ;LAGERBESTELLUNG
	. SET XPOS = $PIECE(POS1,Y,146)  ;LAGERBESTELLUNG
	. IF XAUF'="" IF XPOS'="" DO
	. . KILL ^INRESERVIERT(YM,XAUF,XPOS,YAUFTRAG,YPOS)   ;RESERVIERUNG LÖSCHEN ;Delete 
	
	IF $PIECE(POS1,Y,7)=5 DO  ;ZUR SICHERHEIT LÖSCHEN tybd:17,09,2003
	. SET XAUF=""
	. FOR  SET XAUF=$ORDER(^INRESERVIERT(YM,XAUF)) QUIT:XAUF=""  DO
	. . SET XPOS=""
	. . FOR  SET XPOS=$ORDER(^INRESERVIERT(YM,XAUF,XPOS)) QUIT:XPOS=""  DO
	. . . IF $DATA(^INRESERVIERT(YM,XAUF,XPOS,YAUFTRAG,YPOS)) KILL ^INRESERVIERT(YM,XAUF,XPOS,YAUFTRAG,YPOS)
	
	;+++++++++++++++++++++++++++++++++++++++
	;	D70		$$$INVORGDRPActivated()
	;	D217	$$$INVORGDRPOnlyForNetChange()
	;+++++++++++++++++++++++++++++++++++++++
	IF BETRIEB'="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,70)=1 DO  ;BEDARF AUS DRP LÖSCHEN ;out of DRP Delete 
	. DO DRP(YAUFTRAG,YPOS,BETRIEB,YDRPKILL)  ;LÖSCHEN DEMANDS ;Delete 
	. ;JOB DRP(YAUFTRAG,YPOS,YLOCATION,YDRPKILL):(:1):1 IF '$TEST DO DRP(YAUFTRAG,YPOS,BETRIEB,YDRPKILL)  ;JOB STARTEN  ;NICHT MÖGLICH, DA INAUFPXL ERFORDERT ! ;FIS;21.09.04
	
	IF $PIECE(POS1,Y,4)'="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,217)=1 SET ^INDRPNETCHANGE(YM,$PIECE(POS1,Y,4),1)=""  ;FIS;29.04.05;SR12200
	
	;	D2		$$$INAUFOrderType()   ; *NOT* Purchase Order
	IF ART'="" IF $PIECE($GET(^INAUF(YM,YAUFTRAG,1)),Y,2)'=2 DO
	.;IF '$DATA(^INWEAUF(YM,YAUFTRAG,YPOS)) IF '$DATA(^INWEAUFALT(YM,YAUFTRAG,YPOS)) QUIT    ; SR16361
	. if '$data(^INRECSummarys(0,1,$$$Index(YAUFTRAG),$$$Index(YPOS))) && '$data(^INRECLines(0,4,$$$Index(YAUFTRAG),$$$Index(YPOS))) quit
	. SET YOK=$$^INARTPLUS(YAUFTRAG,YPOS,ART,REST,,$PIECE(POS1,Y,56),,$PIECE(POS1,Y,253))
	;. set YOK=$$UndoSourceLines(YAUFTRAG,YPOS,ART,POS1) ; SR13869 SR13877
	
	; LÖSCHEN ;Delete
	DO
	. SET YFELD=""
	. IF YDRPKILL'=1 MERGE ^INXAUFP(YM,YAUFTRAG,YPOS)=^INAUFP(YM,YAUFTRAG,YPOS)               ;POSITIONS DATEI  SORT! ;data file 
	. DO ^WWWSKILL("INAUFP",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPA(YM,YAUFTRAG,YPOS)=^INAUFPA(YM,YAUFTRAG,YPOS)             ;ABDATEI  SORT!
	. DO ^WWWSKILL("INAUFPA",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPK(YM,YAUFTRAG,YPOS)=^INAUFPK(YM,YAUFTRAG,YPOS)             ;KONDITIONEN ;terms of payment 
	. DO ^WWWSKILL("INAUFPK",YAUFTRAG_","_YPOS)
	. ;IF YDRPKILL'=1 MERGE ^INXWEAUF(YM,YAUFTRAG,YPOS)=^INWEAUF(YM,YAUFTRAG,YPOS)             ;WARENEINGANG  SORT! ;receiving  ; SR16361
	. ;DO ^WWWSKILL("INWEAUF",YAUFTRAG_","_YPOS)
	. ;IF YDRPKILL'=1 MERGE ^INXWEAUFS(YM,YAUFTRAG,YPOS)=^INWEAUFS(YM,YAUFTRAG,YPOS)           ;SERIENNUMMERN  SORT!            ; SR16361
	. ;DO ^WWWSKILL("INWEAUFS",YAUFTRAG_","_YPOS)
	. ;  Instance 1
	. IF YDRPKILL'=1 MERGE ^INXWEAUFPT(YM,YAUFTRAG,YPOS)=^INWEAUFPT(YM,YAUFTRAG,YPOS)         ;UNTERTEILE WARENHERKUNFT;FIS;10.09.03;24243
	. DO ^WWWSKILL("INWEAUFPT",YAUFTRAG_","_YPOS)
	. ;
	. IF YDRPKILL'=1 MERGE ^INXERECH1(YM,YAUFTRAG,YPOS)=^INERECH1(YM,YAUFTRAG,YPOS)           ;RECHNUNG ;tab 
	. DO ^WWWSKILL("INERECH1",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPSP(YM,YAUFTRAG,YPOS)=^INAUFPSP(YM,YAUFTRAG,YPOS)           ;SPRACHENTEXTE
	. DO ^WWWSKILL("INAUFPSP",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPINTRA(YM,YAUFTRAG,YPOS)=^INAUFPINTRA(YM,YAUFTRAG,YPOS)     ;SPRACHENTEXTE
	. DO ^WWWSKILL("INAUFPINTRA",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPXL(YM,YAUFTRAG,YPOS)=^INAUFPXL(YM,YAUFTRAG,YPOS)           ;TEILESTRUKTUR
	. KILL ^INAUFPXL(YM,YAUFTRAG,YPOS)  ;TEILE
	. IF YDRPKILL'=1 MERGE ^INXAUFPT(YM,YAUFTRAG,YPOS)=^INAUFPT(YM,YAUFTRAG,YPOS)             ;TEILESTRUKTUR
	. DO ^WWWSKILL("INAUFPT",YAUFTRAG_","_YPOS)
	. KILL ^INAUFPT(YM,YAUFTRAG,YPOS)  ;TEILE
	. IF YDRPKILL'=1 MERGE ^INXAUFPREL(YM,YAUFTRAG,YPOS)=^INAUFPREL(YM,YAUFTRAG,YPOS)         ;POSITIONS ABRUFDATEI
	. DO ^WWWSKILL("INAUFPREL",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPLA(YM,YAUFTRAG,YPOS)=^INAUFPLA(YM,YAUFTRAG,YPOS)           ;POSITIONS LIEFERANSCHRIFT
	. DO ^WWWSKILL("INAUFPLA",YAUFTRAG_","_YPOS) 
	. ;  Instance 2
	. IF YDRPKILL'=1 MERGE ^INXWEAUFPT(YM,YAUFTRAG,YPOS)=^INWEAUFPT(YM,YAUFTRAG,YPOS)         ;ENTNAHME-LAGERPLÄTZE
	. DO ^WWWSKILL("INWEAUFPT",YAUFTRAG_","_YPOS)
	. ;
	. IF YDRPKILL'=1 MERGE ^INXAUFPTEXTRA(YM,YAUFTRAG,YPOS)=^INAUFPTEXTRA(YM,YAUFTRAG,YPOS)   ;EXTRA UND ZUSATZKOSTEN ;extra And additional costs 
	. DO ^WWWSKILL("INAUFPTEXTRA",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPTEXTRAV(YM,YAUFTRAG,YPOS)=^INAUFPTEXTRAV(YM,YAUFTRAG,YPOS) ;VERSCHNITT DETAILS
	. DO ^WWWSKILL("INAUFPTEXTRAV",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPTEXTRAW(YM,YAUFTRAG,YPOS)=^INAUFPTEXTRAW(YM,YAUFTRAG,YPOS) ;WERKZEUGKOSTEN DETAILS
	. DO ^WWWSKILL("INAUFPTEXTRAW",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPTEXTRAE(YM,YAUFTRAG,YPOS)=^INAUFPTEXTRAE(YM,YAUFTRAG,YPOS) ;EXTRAKOSTEN DETAILS
	. DO ^WWWSKILL("INAUFPTEXTRAE",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPTSN(YM,YAUFTRAG,YPOS)=^INAUFPTSN(YM,YAUFTRAG,YPOS)         ;SN-ZUORDNUNG
	. DO ^WWWSKILL("INAUFPTSN",YAUFTRAG_","_YPOS)
	. IF YDRPKILL'=1 MERGE ^INXAUFPIMPACT(YM,YAUFTRAG,YPOS)=^INAUFPIMPACT(YM,YAUFTRAG,YPOS)   ;ZUSATZKOSTEN JA POSITION;FIS;07.03.05;27445
	. DO ^WWWSKILL("INAUFPIMPACT",YAUFTRAG_","_YPOS)
	
	IF $PIECE($GET(^INVORG(YM,YM,1)),Y,209)=1 DO  ;NEURECHNEN ZUSATZKOSTEN IM AUFTRAG;FIS;02.02.05;27220
	. NEW YFELD
	. SET YFELD=$GET(^INAUF(YM,YAUFTRAG,1))
	. IF YFELD'="" DO ZUSATZ^INAUF1()
	
	;Clear off any Reservation Lists	; SR 15249	30-Nov-2006 PPP
	;
	do OnBeforeDelete^INAUFP(YAUFTRAG_","_YPOS)
	QUIT
	
	
DRP(YAUFTRAG,YPOS,BETRIEB,KILL) 
    /*------------------------------------------------------------------------------
    ;		LÖSCHEN DEMANDS AUS DRP ;Delete out of DRP
    ; 
	; Inputs : 
	;	BETRIEB		ZUSTÄNDIGER BETRIEB
	;	
	; ByRef :
	;	POS1		SATZ AUFTRAGSPOSITION
    ;-----------------------------------------------------------------------------*/
	
	;SET $ZTRAP="^WWWERROR"
	;DO ^WWWVAR
	;SET YBED=$PIECE($GET(^INVORG(YM,YM,1)),Y,79)   ;DRP HINTERGRUNDJOB
	;IF YBED="" SET YBED="UNKNOWN"
	
	;+++++++++++++++++++++++++++++++++++++++
	;	@SUCH		objINAUFPXL		Order Bill of Production
	;	POS1		objINAUFP		Order Line
	;	SATZ		objINDRPDEMAND
	;+++++++++++++++++++++++++++++++++++++++
	
	SET KILL = +$GET(KILL)  ;AUTOM. LÖSCHEN DURCH DRP PROZESS;26407;FIS;21.09.04
	IF $GET(BETRIEB)="" SET BETRIEB = YLOCATION
	
	IF $GET(YAUFTRAG)'="" IF $DATA(YPOS)'="" DO
	. SET SUCH="^INAUFPXL("_""""_YM_""""_","_""""_YAUFTRAG_""""_","_YPOS_")"
	. FOR  DO  QUIT:SUCH=""
	. . SET SUCH=$QUERY(@SUCH)  ;UNTERTEILE
	. . IF $TRANSLATE($PIECE(SUCH,",",2),"""")'=YAUFTRAG SET SUCH="" QUIT  ;21.06.04;FAN;25794; WENN alphanumerischen Auftragsnummern SOLL DATEN AUCH AUFBAUEN.
	. . ;IF $PIECE(SUCH,",",2)'=YAUFTRAG SET SUCH="" QUIT  ;21.06.04;FAN;25794;  ;FALSCHER AUFTRAG
	. . IF $PIECE(SUCH,Y,4)'="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,217)=1 SET ^INDRPNETCHANGE(YM,$PIECE(SUCH,Y,4),1)=""  ;FIS;29.04.05;SR12200
	. . IF $PIECE(SUCH,",",3)=YPOS DO
	. . . IF $PIECE(@SUCH,Y,200)'="" DO  ;KEINE DEMAND-NUMMER ;no 
	. . . . NEW SATZ,YFORM,YVOR,YOK
	. . . . SET DEMAND = $PIECE(@SUCH,Y,200)
	. . . . QUIT:DEMAND=""
	. . . . IF KILL=1 DO  QUIT  ;LÖSCHEN, DA UNBEARBEITET (SONST ZU VIELE DATEN) 26407;FIS;21.09.04
	. . . . . DO ^WWWSKILL("INDRPDEMAND",BETRIEB_","_DEMAND)  ;LÖSCHEN SORTKEY+DATENSATZ ;Delete 
	. . . . . DO DRPWV(BETRIEB,DEMAND)
	. . . . ;
	. . . . SET SATZ=$GET(^INDRPDEMAND(YM,BETRIEB,DEMAND,1))
	. . . . QUIT:SATZ=""
	. . . . SET $PIECE(SATZ,Y,98)  = 1  ;VORGANG GELÖSCHT
	. . . . SET $PIECE(SATZ,Y,72)  = ""  ;TEILE-EINTRAG
	. . . . SET $PIECE(SATZ,Y,115) = $$^WWWTEXT(33695)  ;AUFTRAGSPOSITION GELÖSCHT
	. . . . SET YOK = $$^WWWSPEI("INDRPDEMAND",BETRIEB_","_DEMAND,SATZ,1)
	. . . . DO DRPWV(BETRIEB,DEMAND)
	. ;
	. IF $PIECE(POS1,Y,200)'="" DO  ;HAUPTTEIL
	. . NEW SATZ,YFORM,YVOR,YOK
	. . SET DEMAND = $PIECE(@POS1,Y,200)
	. . QUIT:DEMAND=""
	. . IF KILL=1 DO  QUIT  ;LÖSCHEN, DA UNBEARBEITET (SONST ZU VIELE DATEN) 26407;FIS;21.09.04
	. . . DO ^WWWSKILL("INDRPDEMAND",BETRIEB_","_DEMAND)  ;LÖSCHEN SORTKEY+DATENSATZ ;Delete 
	. . . DO DRPWV(BETRIEB,DEMAND)
	. . ;
	. . SET SATZ = $GET(^INDRPDEMAND(YM,BETRIEB,DEMAND,1))
	. . QUIT:SATZ=""
	. . SET $PIECE(SATZ,Y,98)  = 1  ;VORGANG GELÖSCHT
	. . SET $PIECE(SATZ,Y,72)  = ""  ;TEILE-EINTRAG
	. . SET $PIECE(SATZ,Y,115) = $$^WWWTEXT(33695)  ;AUFTRAGSPOSITION GELÖSCHT
	. . SET YOK = $$^WWWSPEI("INDRPDEMAND",BETRIEB_","_DEMAND,SATZ,1)
	. . DO DRPWV(BETRIEB,DEMAND)
	
	QUIT
	
	
DRPWV(pBET,DEMAND)
	;-------------------------------------------------------------------------------
	;  LÖSCHEN WIEDERVORLAGEN UND DRP MELDUNGEN
	;  DELETE RE-SUBMISSIONS AND DRP MESSAGES
	;  
	; History :
	; 19-Jun-2005	GRF 	SR12701 : Undefined variable DEMANDS replaced with
	; 							DEMAND; BET was being newed in DO - never used from
	; 							parameter list or passed back so argument renamed
	; 27-May-2005	FIS		27207/SR12356
	;-------------------------------------------------------------------------------
	new ART,BET,DAT,MIT,TYP,XKEY ; <-- TODO: No need for XKEY, variable from old code
	
	quit:'$data(^INDRPWVs(YM,1,DEMAND))
	  
 	SET BET=""
 	FOR  {
	 	SET BET=$ORDER(^INDRPWVs(YM,1,DEMAND,BET))
	 	QUIT:BET=""
		
		SET MIT=""
		FOR {
			SET MIT=$ORDER(^INDRPWVs(YM,1,DEMAND,BET,MIT))
			QUIT:MIT=""
			
			SET DAT=""
			FOR {
				SET DAT=$ORDER(^INDRPWVs(YM,1,DEMAND,BET,MIT,DAT))
				QUIT:DAT=""
				
				SET TYP=""
				FOR {
					SET TYP=$ORDER(^INDRPWVs(YM,1,DEMAND,BET,MIT,DAT,TYP))
					QUIT:TYP=""
					
					SET ART=""
					FOR {
						SET ART=$ORDER(^INDRPWVs(YM,1,DEMAND,BET,MIT,DAT,TYP,ART))
						QUIT:ART=""
						
						DO ^WWWSKILL("INDRPWV",BET_","_MIT_","_DAT_","_TYP_","_ART_","_DEMAND)
					} ; FIXME : DEMAND is the index version - may need to get P6 from INDRPWVs in case there is a difference <GRF>
				}
			}
		}
 	}
	
	QUIT
	
	; vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;IF $DATA(^INDRPWV(YM,BET,"1",DEMAND)) DO
	. SET MIT=""
	. FOR  SET MIT=$ORDER(^INDRPWV(YM,BET,"1",DEMAND,MIT)) QUIT:MIT=""  DO
	. . SET DAT=""
	. . FOR  SET DAT=$ORDER(^INDRPWV(YM,BET,"1",DEMAND,MIT,DAT)) QUIT:DAT=""  DO
	. . . SET XKEY=$GET(^INDRPWV(YM,BET,"1",DEMAND,MIT,DAT,1))
	. . . IF $PIECE(XKEY,Y,1)'="" IF $PIECE(XKEY,Y,2)'="" IF $PIECE(XKEY,Y,3)'="" IF $PIECE(XKEY,Y,4)'="" IF $DATA(^WWWWV(YM,$PIECE(XKEY,Y,1),$PIECE(XKEY,Y,2),$PIECE(XKEY,Y,3),$PIECE(XKEY,Y,4))) DO
	. . . . DO ^WWWSKILL("WWWWV",$PIECE(XKEY,Y,1)_","_$PIECE(XKEY,Y,2)_","_$PIECE(XKEY,Y,3)_","_$PIECE(XKEY,Y,4))
	. . . . QUIT
	. . . DO ^WWWSKILL("INDRPWV",BET_","_"1"_","_DEMAND_","_MIT_","_DAT)
	
	QUIT
	; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	
	
UndoSourceLines(pidOrder,pidLine,pidProduct,pobjLine)
    ;--------------------------------------------------------------------------------
    ; Undo the sourcing of each source for each line, there may be multiples and these
    ; may not always be the same location/stock location as the header
    ;
    ; Params:
    ;	pidOrder  : The id of the Order
    ;	pidLine   : The id of the order line
    ;	pidProduct: The id of the product
    ;	pobjLine  : The data for the line
    ;
    ; Returns:	$$$OK
    ;
    ; History:
    ; 22-Nov-2005	JW			SR13877: Not in use - functionality now in INARTPLUS
    ; 16-Nov-2005	RobertW		SR13869: Created
    ;-------------------------------------------------------------------------------
	new idClass,idLoc,idStockLocn,YOK,idLocation,objOrder,fltQty,dteDate
	
	set objOrder=$get(^INAUF(YM,pidOrder,1))
	if objOrder'="" {
		
		set idLocation=$$$INAUFLocation(objOrder)
	 	
		for idClass="^INWEAUF","^INWEAUFALT" {
			if $data(@idClass@(YM,pidOrder,pidLine)) {
				set idLoc=""
				for {
					set idLoc=$order(@idClass@(YM,pidOrder,pidLine,idLoc))
					quit:idLoc=""
					
					set $$$INAUFLocation(objOrder)=idLoc
					set ^INAUF(YM,pidOrder,1)=objOrder // Yes, I know this should be WWWSPEI, but I don't care, we will reset this at the end
					
					set idStockLocn=""
					
					for {
						set idStockLocn=$order(@idClass@(YM,pidOrder,pidLine,idLoc,idStockLocn))
						quit:idStockLocn=""
						
						set dteDate=""
						set fltQty=0
						
						for {
							set dteDate=$order(@idClass@(YM,pidOrder,pidLine,idLoc,idStockLocn,dteDate))
							quit:dteDate=""
							
							set fltQty=fltQty+$piece(@idClass@(YM,pidOrder,pidLine,idLoc,idStockLocn,dteDate,1),Y,4)
						}
						do ^INARTPLUS(pidOrder,pidLine,pidProduct,fltQty,,$$$INAUFPNewSerialNumber(pobjLine),,idStockLocn)
					}
				}
			}
		}
	}
	
	set $$$INAUFLocation(objOrder)=idLocation
	do Save^COMUtils("INAUF",pidOrder,objOrder,1) ; Make sure nothing has screwed the indexes.
	
	quit $$$OK
	
	
CanDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Callback for @net manager form.
	; 
	; Performs a check to see if this order/order line record should have the
	; DELETE button enabled.
 	; This routine does the "Can Delete?" check for both the header and the lines.
 	; The order has a different system that other screens; not the usual header with a grid.
	;
	; Params: pYKEY		: The YKEY value
	; 
	; Called From:
	; 	INAUF		Execute Before Delete Possibility (CALLBACK)
	; 	INAUFP		Execute Before Delete Possibility (CALLBACK)
	; 
	; ByRefs: Q - may be set earlier
	;
	; Returns:
	;
	; History:
	; 03-Jul-2009	GRF		SR16649: IsDeletable^INAUFP now checks for receipts;
	; 							removed inappropriate early quits (not needed except
	; 							for FOR loops.)
	; 15-Oct-2008	HQN		SR15863: Moved line checks into INAUFP where it
	; 							logically should have been
	; 							Added Called From Information
	; 							TODO: Move logic for Purchase Order into IsDeletable^INAUFP()
	; 14-Oct-2008	Luke	SR16010 added checks for printed CO
	; 08-Oct-2008	Luke   	SR16010 Added check for Purchase Order, Customer orders are handled 
	; 							differently 
	; 08-Oct-2008	Luke	SR15863 rewritten and corrected the Delete check for the
	; 							header and the lines to check for "if printed" and
	; 							"if any Receipts" reference it
	; 06-Dec-2006	Steve S	SR15233: Created
	;-------------------------------------------------------------------------------
	new idLine,idOrder,idRec,objOrder
	
 	set idOrder = $$$KEY1(pYKEY)      quit:(idOrder="")
	set idLine 	= $$$KEY2(pYKEY)
	
	//header check
	set objOrder =  $get(^INAUF(YM,idOrder,1))
	if $$$INAUFOrderprintedatthe(objOrder) = "" {
		
	;	Purchase Order
	;---------------------------------------
		if $$$INAUFOrderType(objOrder) = "2" {             //SR16010
			//Check Lines if available 
			if idLine="" {	
				for {
					set idLine = $order(^INAUFP(YM,idOrder,idLine))
					quit:(idLine="")
					
					if $$GetImportNo^INAUFP(idOrder,idLine)'="" {
						set Q = $$$QDontDelete
						quit
					
					} elseif '$$IsDeletable^INAUFP(idOrder_","_idLine) {    ; SR16649
						set Q = $$$QDontDelete_$listbuild("IN01074",idLine)  ; "Line %1 is specified on a Goods Receipt"
						quit
					} 
				}
				//  Check the Receipts 
				if Q=$$$QDelete {
					set idRec = "" 
					&sql(select id into :idRec from SQLUser.INREC where SupplierOrder = :idOrder )
					if SQLCODE = 0 {
						if (idRec '= $$$NULLOREF) {
							set Q = $$$QDontDelete
		;					quit
						}
					}
				}
				
			} else {		//line check
				if $$GetImportNo^INAUFP(idOrder,idLine)'="" {
					set Q = $$$QDontDelete
				}
				
				//  Check the Receipts 
				if Q=$$$QDelete {
					set idRec = "" 
					&sql(select id into :idRec from SQLUser.INREC where SupplierOrder = :idOrder )
					if SQLCODE = 0 {
						if (idRec '= $$$NULLOREF) {
							set Q = $$$QDontDelete
	;						quit
						}
					}
				}
				if Q=$$$QDelete && '$$IsDeletable^INAUFP(idOrder_","_idLine) {    ; SR16649
					set Q = $$$QDontDelete_$listbuild("IN01074",idLine)  ; "Line %1 is specified on a Goods Receipt"
				} 
				
			}
			
	;	Customer Order
	;---------------------------------------
		} elseif $$$INAUFOrderType(objOrder) = "0" {            ; VVV SR16010 14-Oct-2008
			if idLine="" {	
				for {
					set idLine = $order(^INAUFP(YM,idOrder,idLine))
					quit:(idLine="")
					
					; 15-Oct-2008 SR15863 vvvv
					if $$IsDeletable^INAUFP(idOrder_","_idLine) = $$$NO {
						set Q = $$$QDontDelete
						quit
					}
					; 15-Oct-2008 SR15863 ^^^^
					/* ; 15-Oct-2008 SR15863 REMOVED vvvv
					if $$$INAUFPOrderconfirmationdate($get(^INAUFP(YM,idOrder,idLine,1))) '="" {
							set Q=$$$QDontDelete
							quit
					}
					*/ ; 15-Oct-2008 SR15863 REMOVED ^^^^
				}
			} else {
				; 15-Oct-2008 SR15863 vvvv
				if $$IsDeletable^INAUFP(idOrder_","_idLine) = $$$NO {
					set Q=$$$QDontDelete
	;				quit
				}
				; 15-Oct-2008 SR15863 ^^^^
				/* ; 15-Oct-2008 SR15863 REMOVED vvvv
				if $$$INAUFPOrderconfirmationdate($get(^INAUFP(YM,idOrder,idLine,1))) '="" {
					set Q=$$$QDontDelete
	;				quit
				}
				*/ ; 15-Oct-2008 SR15863 REMOVED ^^^^
			}
		}                                                       ; ^^^ SR16010 14-Oct-2008
	
	} else { ; Once Printed, can not delete
		set Q = $$$QDontDelete
	}
	
	quit
	
]]></Routine>
</Export>