<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvUpgrade" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
    ;-------------------------------------------------------------------------------
    ; Routines relating to the patching of Invoice and Invoice Line globals
    ;-------------------------------------------------------------------------------
	#include COMSYS
	#include FINConst
 
SetTaxFields(pstrInvoicePrefix="")
    ;-------------------------------------------------------------------------------
    ; Sets the Tax Location and Tax Code Fields if null.
    ;
    ; Returns:Status
    ;
    ; History:
    ; 02-May-2005	Paul K		Created SR:12231
    ;-------------------------------------------------------------------------------
	new strStatus,idInvoice,objInvoice,idLine,objLine,intChanged
	
	set intChanged=0
	set strStatus=1
	
	if pstrInvoicePrefix="" {
		set idInvoice=""
	} else {
		set idInvoice=$order(^FINAPInv(YM,pstrInvoicePrefix),-1)
	}
	for {
		set idInvoice=$order(^FINAPInv(YM,idInvoice))
		quit:$extract(idInvoice,1,$length(pstrInvoicePrefix))'=pstrInvoicePrefix
		quit:idInvoice=""
		quit:strStatus'=1
		set objInvoice=$get(^FINAPInv(YM,idInvoice,1))
		if ($$$FINAPInvTaxLocation(objInvoice)="")&&($$$FINAPInvInvoiceSupplier(objInvoice)'="") {
			set intChanged=intChanged+1
			set $$$FINAPInvTaxLocation(objInvoice)=$$GetTaxLocation^FINAPSupplier($$$FINAPInvInvoiceSupplier(objInvoice))
			set strStatus=$$Save^COMUtils("FINAPInv",idInvoice,objInvoice,1)
		}
		set idLine=""
		for {
			set idLine=$order(^FINAPInvLine(YM,idInvoice,idLine))
			quit:idLine=""
			quit:strStatus'=1
			set objLine=$get(^FINAPInvLine(YM,idInvoice,idLine,1))
			if $$$FINAPInvLineTaxCode(objLine)="" {
				set intChanged=intChanged+1
				set $$$FINAPInvLineTaxCode(objLine)=$$GetTaxCode^FINAPInvSearch($piece($$$FINAPInvLineOrderNumber(objLine),",",1),$piece($$$FINAPInvLineOrderNumber(objLine),",",2),$$$FINAPInvLineItem(objLine),objInvoice)
				set strStatus=$$Save^COMUtils("FINAPInvLine",idInvoice_","_idLine,objLine,1)
			}
		}
	}
	write !,"Changed:"_intChanged,!
	if strStatus'=1 {
		write !,$$$Text(strStatus)
	}
	quit strStatus
 
RecalculateTotals()
    ;-------------------------------------------------------------------------------
    ; Recalculates all of the invoice totals on the lines.
    ;
    ; Returns:Status
    ;
    ; History:
    ; 02-May-2005	Paul K		Moved from RecalculateAll^FINAPInvLineTax
    ; 11-Mar-2005	Paul K		Created
    ;-------------------------------------------------------------------------------
	new strStatus,idInvoice,objInvoice,idLine,objLine,intCount
	
	set strStatus=1
	set intCount=0
	set idInvoice=""
	for {
		set idInvoice=$order(^FINAPInv(YM,idInvoice))
		quit:idInvoice=""
		set objInvoice=$get(^FINAPInv(YM,idInvoice,1))
		set idLine=""
		for {
			set idLine=$order(^FINAPInvLine(YM,idInvoice,idLine))
			quit:idLine=""
			set objLine=$get(^FINAPInvLine(YM,idInvoice,idLine,1))
			do CalculateAmountsFromInvoiceEach^FINAPInvLineTax2(objInvoice,.objLine) ; SR12965
			;set objLine=$$UpdatePriceFields^FINAPInvLineTax(objLine,objInvoice)
			if objLine'=$get(^FINAPInvLine(YM,idInvoice,idLine,1)) {
				set strStatus=$$$Save("FINAPInvLine",idInvoice_","_idLine,objLine,1)
				if strStatus=1 set intCount=intCount+1
			}
			quit:strStatus'=1
		}
		quit:strStatus'=1
	}
	write !,"Changed: "_intCount
	if strStatus'=1 {
		write !,$$$Text(strStatus)
	}
	quit strStatus
]]></Routine>
</Export>