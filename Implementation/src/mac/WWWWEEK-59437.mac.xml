<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWWEEK" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWWEEK(YDATUM="",YPARA)
	
#include COMSYS
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWWEEK("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		CONVERT DATE TO WEEK AS PER ISO 8601 (German DIN 1355)
	;
	;			W $$^WWWWEEK("20.10.2002")
	;
	; Inputs : 
	;	YDATUM = $H OR DD.MM.YYYY  (will accept DD/MM/YYYY or DD-MM-YYYY)
	;
	;	YPARA=1 : Return WW.YYYY KW ;week 
	;	YPARA=2 : Return YYYYWW			ISO 8601 standard
	;	YPARA=3 : Return YYYY-WW
	;	YPARA=4 : Return WW
	;	Default : Return WWYYYY
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 01-Nov-2010	GRF		SR17585.2: Re-write WOC to use new subroutines GetWeek
	;							and CalcWeek - simplify calculation and preserve so
	;							don't need to repeatedly calculate.
	; 29-Oct-2010	GRF		SR17585.1: Special Days of Week variables missed; tests
	;							for 1st Jan excludes all first days and all days in
	;							January but error in comparing "1" instead of "01"
	;							meant code worked for most dates.
	; 28-Oct-2010	GRF		SR17585: Code to determine if week should be 01xxxx or
	;							53yyyy (where xxxx is current year and yyyy is
	;							previous year) was using variable for Day Of Week
	;							(1=Mon) instead of Month (1=Jan)
	; 07-Jun-2010	GRF		SR17146: call "DD.MM.YYYY" wrapper for WWWDATE1 (DMY) &
	;							for WWWDATE (IntToDMY); Inappropriate logic negation
	;							MON and TAG treated as both "01" and 1 without
	;							string to numeric conversion
	; 16.06.2003	WEM
	;-------------------------------------------------------------------------------
	new DAT,JAH,WOC,MON,TAG,DAYS,YI,YQ,SDAY,SFWOCDAY,DAY,LYDAY,SPRACHE,WEEK
	
	set SPRACHE="DE"
	
	set YPARA = $get(YPARA)
	if YDATUM="" set YDATUM = +$horolog
	set YDATUM = $translate(YDATUM," ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")
	
	set WEEK = $$WOC(YDATUM)
	quit WEEK
	
	
WOC(pstrInputDate)	
	;-------------------------------------------------------------------------------
	; Inputs: pstrInputDate ($h or DD*MM*YYYY where * can be ./-)
	; 
	; ByRef : YPARA - output format
	; 
	; History:
	; 24-Mar-2011	GRF		SR17585.1: Manage short year case
	; 01-Nov-2010	GRF		SR17585: Revised version
	;-------------------------------------------------------------------------------
	new dteInput,strWeekInput
	
	if $find(pstrInputDate,"/")       set pstrInputDate = $translate(pstrInputDate,"/",".")
	if $find(pstrInputDate,"-")       set pstrInputDate = $translate(pstrInputDate,"-",".")
	if $piece(pstrInputDate,".",3)="" set pstrInputDate = $$IntToDMY^WWWDATE($piece(pstrInputDate,".",1))
	
	set dteInput     = $$DMY^WWWDATE1(pstrInputDate)
	if $length($piece(pstrInputDate,".",3))'=4 set pstrInputDate = $$IntToDMY^WWWDATE(dteInput)  ; SR17585.1
	set strWeekInput = $$GetWeek(dteInput,pstrInputDate)
	
	if YPARA=1 {
		set strWeekInput = $extract(strWeekInput,5,6)_"."_$extract(strWeekInput,1,4)_" "_$$^WWWTEXT(385)  ; "Week "
		
	} elseif YPARA=2 {
		; ISO Standard - no alteration
		
	} elseif YPARA=3 {
		set strWeekInput = $extract(strWeekInput,1,4)_"-"_$extract(strWeekInput,5,6)
		
	} elseif YPARA=4 {
		set strWeekInput = $extract(strWeekInput,5,6)
	
	} else {
		set strWeekInput = $extract(strWeekInput,5,6)_$extract(strWeekInput,1,4)
	}
	quit strWeekInput
	
	
GetWeek(pdteInput,pstrDMYInput)
	;-------------------------------------------------------------------------------
	; Calculate week in ISO 8601 format (YYYYnn) for input date
	; 
	; Inputs:
	;  - pdteInput    : Input date in horolog format
	;  - pstrDMYInput : Input date in DD.MM.YYYY standard string
	; 
	; Returns: Week Number
	; 
	; History:
	; 01-Nov-2010	GRF		SR17585: Created
	;-------------------------------------------------------------------------------
	new dteLastSundayPY,dteLastSundayThisYear,intThisYear,intNextYear,intWeekNo
	new strWeekInput,strWeekNextNewYear,strWeekJan1
	
	set intThisYear = $piece(pstrDMYInput,".",3)
	set intNextYear = intThisYear + 1
	
	do CalcWeek(intThisYear,.dteLastSundayPY,.strWeekJan1)
	do CalcWeek(intNextYear,.dteLastSundayThisYear,.strWeekNextNewYear)
	
	if pdteInput > dteLastSundayThisYear {
		set strWeekInput = strWeekNextNewYear
		
	} elseif pdteInput > dteLastSundayPY {
		set intWeekNo    = (pdteInput - dteLastSundayPY - 1) \7 +1
		set strWeekInput = intThisYear_$translate($justify(intWeekNo,2)," ","0")
	
	} else {  ; 1 Jan to 3 Jan in certain years will be in prev year
		set strWeekInput = strWeekJan1
	}
	quit strWeekInput
	
	
CalcWeek(pintThisYear,&pdteLastSundayPY,&pstrWeekJan1)
	;-------------------------------------------------------------------------------
	; Calculate week in ISO 8601 format (YYYYnn) where Week 1 for a year is the week
	; with the year's first Thursday in it.
	;  - Jan 04 is always in Week 1
	;  - Dec 28 is always in last week of its year
	;  
	; Monday is always the first day of the week under the standard.
	; If 1 Jan is Fri/Sat/Sun it is in week 52 or 53 of previous year.
	; 
	; Inputs:
	;  - Year of input date (YYYY)
	; 
	; Returns (ByRef) :
	;  - $horolog of last Sunday of the Previous Year (could be 1, 2, or 3 Jan)
	;  - string of week number (YYYYnn) for 1 Jan of this year
	; 
	; History:
	; 01-Nov-2010	GRF		SR17585: Created
	;-------------------------------------------------------------------------------
	;
	;  Prev Year  Jan1  DoW      1   1   2   2   3   3   4   4   5   5   6   6   7   7
	;  Prev Year Leap Year       N   Y   N   Y   N   Y   N   Y   N   Y   N   Y   N   Y
	;  Weeks in Prev Year       52  52  52  52  52  53  53  53  52  52  52  52  52  52
	;  Input Year Jan 1 DoW      2   3   3   4   4   5   5   6   6   7   7   1   1   2
	;  Input Year Jan 1 WeekNo  01  01  01  01  01  53  53  53  52  52  52  01  01  01
	;  
	;  Case                      1   1   1   1   1   2   2   2   3   3   3   1   1   1
	;  
	;  1.   If Jan 1 Dow < 5, Week No will always be YYYY01
	;       else
	;  2.      If PY Jan 1 DoW = 3 or 4, Week No will always be PPPP53
	;          else
	;  3.         Week No will always be PPPP52
	;-------------------------------------------------------------------------------
	new blnLeapYear,dteJan1,enumDoWJan1,enumLastNewYear,intPrevYear,objWeek,strStatus
	
	set objWeek = $get(^WWWWEEK(0,pintThisYear,1))
	
	if objWeek'="" {
		set pdteLastSundayPY = $piece(objWeek,Y,1)    ; $$$WWWWEEKLastSundayPrevYear
		set pstrWeekJan1     = $piece(objWeek,Y,2)    ; $$$WWWWEEKWeekNoForJan1st
		
	} else {
		set dteJan1          = $$DMY^WWWDATE1("01.01."_pintThisYear)
		set enumDoWJan1      = $$^WWWDAY(dteJan1)
		set pdteLastSundayPY = dteJan1 - enumDoWJan1
		set pstrWeekJan1     = pintThisYear_"01"           ; Case 1
		
		if enumDoWJan1 > 4 {
			set pdteLastSundayPY = pdteLastSundayPY+7
			set intPrevYear      = pintThisYear-1
			set enumLastNewYear  = $$^WWWDAY($$DMY^WWWDATE1("01.01."_intPrevYear))
			set blnLeapYear      = $$IsLeapYear^COMUtilDate(intPrevYear)
			
			if (enumLastNewYear < 5) {
				set pstrWeekJan1 = intPrevYear_53          ; Case 2
				
			} else {
				set pstrWeekJan1 = intPrevYear_52          ; Case 3
			}
		}
		set objWeek = pdteLastSundayPY_Y_pstrWeekJan1
		set strStatus = $$$Save("WWWWEEK",pintThisYear,objWeek,$$$YES)
	}
	quit
	
	
oldWOC(YDATUM)
	new intEOLastYear,intEOYWeekDay,intLastNewYear,intNewYearsDay,intTodaysDay    ; SR17146
	
	SET DAT      = YDATUM    ; +$h or DD.MM.YYYY
	SET WOC      = 1
	SET DAYS     = 1
	SET DAY      = 0
	SET LYDAY    = 0
	SET YQ       = 0
	SET SFWOCDAY = 1
	
	IF $FIND(DAT,"/")       SET DAT = $PIECE(DAT,"/",1)_"."_$PIECE(DAT,"/",2)_"."_$PIECE(DAT,"/",3)
	;F $PIECE(DAT,".",3)="" SET DAT = $$^WWWDATE($PIECE(YDATUM,".",1))   ; SR17146
	IF $PIECE(DAT,".",3)="" SET DAT = $$IntToDMY^WWWDATE($PIECE(YDATUM,".",1))
	IF $FIND(DAT,"/")       SET DAT = $PIECE(DAT,"/",1)_"."_$PIECE(DAT,"/",2)_"."_$PIECE(DAT,"/",3)
	IF $FIND(DAT,"-")       SET DAT = $TRANSLATE(DAT,"-",".")
	SET TAG = $PIECE(DAT,".",1)
	set MON = $PIECE(DAT,".",2)
	set JAH = $PIECE(DAT,".",3)
	
	;CALCULATES CALENDAR WEEK BASED ON 1ST OF JANUARY
	;SET SDAT = $$^WWWDATE1("01.01."_JAH)                    ; SR17146 not used - use clearer variables
	;SET SDAY = $$^WWWDAY(SDAT)                ; WHICH DAY OF WEEK
	
	; Special Days of Week : 1=Monday through 7=Sunday       ; SR17146 vvv
	; DAT : DD.MM.YYYY
	set intTodaysDay   = $$^WWWDAY($$DMY^WWWDATE1(DAT))
	set intNewYearsDay = $$^WWWDAY($$DMY^WWWDATE1("01.01."_JAH))
	set intEOYWeekDay  = $$^WWWDAY($$DMY^WWWDATE1("31.12."_JAH))
	set intLastNewYear = $$^WWWDAY($$DMY^WWWDATE1("01.01."_(JAH-1)))
	set intEOLastYear  = $$^WWWDAY($$DMY^WWWDATE1("31.12."_(JAH-1)))
	
	DO
	. ; End of Year => Week 1 of following year or week 52/53 of this year
	. ;-------------------------------------
	.;IF MON=12 IF JAH=$$^WWWYEAR($$^WWWDATE1(DAT)) IF (TAG=31)!(TAG=30)!(TAG=29)  DO    ; SR17146 - already know year=year
	.;. IF ($$^WWWDAY($$^WWWDATE1("31.12."_JAH))=3) || ($$^WWWDAY($$^WWWDATE1("31.12."_JAH))=2) || ($$^WWWDAY($$^WWWDATE1("31.12."_JAH))=1) DO    ; SR17146
	. IF (MON=12) && ((TAG=31) || (TAG=30) || (TAG=29))  DO 
	. . IF (intEOYWeekDay=3) || (intEOYWeekDay=2) || (intEOYWeekDay=1) DO  ; KW=1 31ST OF DECEMBER IS MONDAY,TUESDAY,WEDNESDAY 
	. . . SET WOC = 1 
	. . . SET JAH = JAH+1 
	. . . SET YQ  = 1 
	. . ;
	. . QUIT:YQ=1  
	. . SET WOC=52                                             ; KW=52 YEAR STARTED OR ENDED NOT WITH THURSDAY (DEFAULT) ;privation 
	. .;IF ($$^WWWDAY($$^WWWDATE1("01.01."_JAH))=4) || ($$^WWWDAY($$^WWWDATE1("31.12."_JAH))=4) SET WOC=53   ; SR17146
	. . IF (intNewYearsDay=4) || (intEOYWeekDay=4) SET WOC=53   ; KW=53 YEAR STARTED OR ENDED WITH THURSDAY
	. . SET YQ=1
	. ;
	. QUIT:YQ=1
	. ;
	. ; Start of Year => Week 52/53 of previous year
	. ;--------------------------------------
	. IF (+MON=1) && ((TAG="01") || (TAG="02") || (TAG="03")) DO   ;WEM;22960;02.09.2003;ADDED SPECIAL HANDLINK FIRST THREE DAYS OF JANUARY
	. .;IF JAH#4=0 IF $$^WWWDAY($$^WWWDATE1("01.01."_JAH))=4 SET YQ=1 QUIT   ; SR17146
	. .;IF $$^WWWDAY($$^WWWDATE1(TAG_".01."_(JAH)))>4 IF ($$^WWWDAY($$^WWWDATE1("01.01."_(JAH-1)))=4) || ($$^WWWDAY($$^WWWDATE1("31.12."_(JAH-1)))=4) SET WOC=53 SET JAH=JAH-1 SET YQ=1 QUIT
	. .;IF $$^WWWDAY($$^WWWDATE1(TAG_".01."_(JAH)))>4 SET WOC=52 SET JAH=JAH-1 SET YQ=1
	. . IF (JAH#4=0) && (intNewYearsDay=4) SET YQ=1 QUIT   ; WILL BE HANDLED IN LEAP YEAR CALCULATION AT THE END OF ROUTINE
	. . IF (intTodaysDay>4) do
	. . . IF (intLastNewYear=4) || (intEOLastYear=4) SET WOC=53 SET JAH=JAH-1 SET YQ=1 quit
	. . . SET WOC=52 SET JAH=JAH-1 SET YQ=1
	. ;
	. QUIT:YQ=1
	. ;
	. ; Last Year had 53 weeks (01.01.=THURSDAY) - before 8th Jan
	. ;--------------------------------------
	.;IF $$^WWWDAY($$^WWWDATE1("01.01."_(JAH-1)))=4 IF $$^WWWMONTH($$^WWWDATE1(YDATUM))=1 IF TAG<8 DO   ; SR17146
	.;. SET LYDAY=$$^WWWDAY($$^WWWDATE1("31.12."_(JAH-1)))   ; WEEKDAY OF THE 31st OF DECEMBER LAST YEAR ;charge 
	. IF (intLastNewYear=4) IF +MON=1 IF TAG<8 DO   ; ADDED SPECIAL HANDLING WHEN YEARS STARTS WITH THURSDAY, MONTH = JANUARY AND DAY<8
	. . SET LYDAY = intEOLastYear   ; WEEKDAY OF THE 31st OF DECEMBER LAST YEAR
	. . DO  QUIT:YQ=1
	. . . IF LYDAY=7 SET WOC=1 SET YQ=1
	. . . IF LYDAY=6 DO
	. . . . IF intTodaysDay=1 SET WOC=53 SET JAH=JAH-1   ; SR17146 replace all $$^WWWDAY($$^WWWDATE1(YDATUM)) with intTodaysDay
	. . . . IF intTodaysDay>1 SET WOC=1
	. . . . SET YQ=1
	. . . ;
	. . . IF LYDAY=5 DO
	. . . . IF intTodaysDay>5 SET WOC=53 SET JAH=JAH-1
	. . . . IF intTodaysDay<6 SET WOC=1
	. . . . SET YQ=1
	. . . ;
	. . . IF LYDAY=4 DO
	. . . . IF intTodaysDay>4 SET WOC=53 SET JAH=JAH-1
	. . . . IF intTodaysDay<5 SET WOC=1
	. . . . SET YQ=1
	. . . ;
	. . . IF LYDAY=3 DO
	. . . . IF intTodaysDay>3 SET WOC=53 SET JAH=JAH-1
	. . . . IF intTodaysDay<4 SET WOC=1 
	. . . . SET YQ=1
	. . . ;
	. . . IF LYDAY=2 DO
	. . . . IF intTodaysDay>2 SET WOC=53 SET JAH=JAH-1
	. . . . IF intTodaysDay<3 SET WOC=1
	. . . . SET YQ=1
	. . . ;
	. . . IF LYDAY=1 DO
	. . . . IF intTodaysDay>1 SET WOC=53 SET JAH=JAH-1
	. . . . IF intTodaysDay<2 SET WOC=1
	. . . . SET YQ=1
	. ;
	. QUIT:YQ=1
	. ;
	. ; Last Year had 53 weeks (31.12.=THURSDAY) - before 4th Jan
	. ;--------------------------------------
	.;IF $$^WWWDAY($$^WWWDATE1("31.12."_(JAH-1)))=4 IF $$^WWWMONTH($$^WWWDATE1(YDATUM))=1 IF TAG<4 DO   ; SR17146
	.;IF intEOLastYear=4 IF intTodaysDay=1 IF TAG<4 DO    ; SR17585
	. IF intEOLastYear=4 IF MON=1 IF TAG<4 DO
	. . SET WOC = 53
	. . SET JAH = JAH-1
	. . SET YQ  = 1
	. ;
	. QUIT:YQ=1
	. ;
	. ;
	. IF WOC=1  DO
	. . FOR YI=1,2,3,4,5,6,7 DO  QUIT:SDAY=1   ; GET FIRST MONDAY OF YEAR
	. . . SET SDAY=$$^WWWDAY($$DMY^WWWDATE1("0"_YI_".01."_JAH))      ; SR17146 add DMY tag                 
	. .;
	. .; SR17146 NOTE : Original NOTs in wrong places
	. .;IF '$$^WWWDAY($$^WWWDATE1("01.01."_(JAH-1)))=4 IF '$$^WWWDAY($$^WWWDATE1("31.12."_(JAH-1)))=4 DO   ;WEM#22960;22.08.2003;ADDED
	. .;. IF $$^WWWMONTH($$^WWWDATE1(YDATUM))=1 IF TAG<8 IF TAG<YI SET WOC=52 SET JAH=JAH-1 SET YQ=1 QUIT
	. . IF (intLastNewYear'=4) && (intEOLastYear'=4) DO
	. . . IF +MON=1 IF TAG<8 IF TAG<YI SET WOC=52 SET JAH=JAH-1 SET YQ=1 QUIT     ; FIXME : if TAG<YI then must always be <8 since max YI=7
	. . ;
	. . QUIT:YQ=1
	. . ;
	. . IF (YI'=1) && (YI'=7) SET YI=YI-1
	. . IF $$^WWWDAY($$DMY^WWWDATE1("06.01."_JAH))=1 SET YI=6        ; SR17146 add DMY tag
	. . IF YI'=1 SET SFWOCDAY=YI                   ; STARTDAY OF 2ND WEEK
	. .;IF YI=1 IF +MON'=1 IF +TAG'=1 SET SFWOCDAY=8 ; IF INPUT NOT 01.01.XXXX SET START SECOND WEEK TO 8 ;privation table-mat take-off 
	. . IF YI=1 IF '((+MON=1) && (+TAG=1)) SET SFWOCDAY=8 ; IF INPUT NOT 01.01.XXXX SET START SECOND WEEK TO 8 ;SR17585.1 
	. . ;
	. .;IF TAG="01" IF $$^WWWMONTH($$^WWWDATE1(YDATUM))'=1 IF $$^WWWDAY($$^WWWDATE1(DAT))=7 IF $$^WWWDAY($$^WWWDATE1("01.01."_(JAH-1)))'=4 IF $$^WWWDAY($$^WWWDATE1("31.12."_JAH))'=4 IF $P($$^WWWWEEK("31.12."_JAH,1),".",1)'="01" SET WOC=WOC-1   ;WEM;22960;02.09.2003;ADDED
	. .;IF TAG="01" IF +MON'=1 IF intTodaysDay=7 IF $$^WWWDAY($$DMY^WWWDATE1("01.01."_(JAH-1)))'=4 IF $$^WWWDAY($$DMY^WWWDATE1("31.12."_JAH))'=4 IF $PIECE($$^WWWWEEK("31.12."_JAH,1),".",1)'="01" SET WOC=WOC-1   ; SR17585.1
	. . IF TAG="01" IF +MON'=1 IF intTodaysDay=7 IF intLastNewYear'=4 IF intEOYWeekDay'=4 IF $PIECE($$^WWWWEEK("31.12."_JAH,1),".",1)'="01" SET WOC=WOC-1
	. . ;
	. .; SR17146
	. .;IF $$^WWWDAY($$^WWWDATE1("31.12."_(JAH-1)))=4 SET SFWOCDAY=11   ;WEM;22960;22.08.2003;ADDED
	. .;IF $$^WWWDAY($$^WWWDATE1("01.01."_(JAH-1)))=4 DO
	. .;. SET LYDAY=$$^WWWDAY($$^WWWDATE1("31.12."_(JAH-1)))   ; WEEKDAY OF THE 31st OF DECEMBER LAST YEAR ;charge 
	. . IF intEOLastYear=4 SET SFWOCDAY=11   ;WEM;22960;22.08.2003;ADDED
	. . IF intLastNewYear=4 DO
	. . . SET LYDAY    = intEOLastYear   ; WEEKDAY OF THE 31st OF DECEMBER LAST YEAR 
	. . . SET SFWOCDAY = (7-LYDAY)+8
	. ;
	. QUIT:YQ=1
	. ;
	. ;
	. ;--------------------------------------
	.;IF +MON'=1 IF +TAG'=1 DO
	. IF '((+MON=1) && (+TAG=1)) DO    ; SR17585.1
	. .; SR17146
	. .;SET DAYS=($$^WWWDATE1(DAT)-$$^WWWDATE1(SFWOCDAY_".01."_JAH))  ; NUMBER OF DAYS FROM DATE AND THE DAY OF THE 2ND WEEK IN JANUARY TO BE CONVERTED ;within 
	. .;IF DAYS=0 IF $$^WWWDAY($$^WWWDATE1(TAG_".01."_JAH))=1 SET WOC=WOC+1 QUIT  ; IF NUM DAYS=0 AND DATE=MONDAY THEN 2ND WEEK
	. . SET DAYS=($$DMY^WWWDATE1(DAT)-$$DMY^WWWDATE1(SFWOCDAY_".01."_JAH))  ; NUMBER OF DAYS FROM DATE AND THE DAY OF THE 2ND WEEK IN JANUARY TO BE CONVERTED ;within 
	. . IF DAYS=0 IF $$^WWWDAY($$DMY^WWWDATE1(TAG_".01."_JAH))=1 SET WOC=WOC+1 QUIT  ; IF NUM DAYS=0 AND DATE=MONDAY THEN 2ND WEEK
	. . IF DAYS=0 SET WOC=1 QUIT  ; IF NUM DAYS=0 AND DATE IS NOT MONDAY THEN 1ST WEEK ;privation 
	. . IF DAYS#7=0 DO 
	. . . IF DAYS'=0 IF DAYS'=7 SET WOC = WOC+(DAYS/7)+1
	. . . IF DAYS=7             SET WOC = WOC+2  ;TYBD;WACH MELDUNG BEI 17.1.2004; FALSCH;
	. . ;
	. . IF DAYS#7'=0 DO
	. . . IF DAYS>7           SET WOC = WOC+($PIECE(DAYS/7,".",1)+1)
	. . . IF DAYS<7 IF DAYS>0 SET WOC = WOC+1 QUIT
	. . . IF DAYS<0           SET WOC = 1
	
	; SPECIAL CALCULATION LEAP YEARS
	;---------------------------------------
	IF (JAH#4=0) && (WOC'=52) && (WOC'=53) DO                                   ;WEM;24433;17.10.2003
	. IF (JAH=2028) || (JAH=2056) || (JAH=2084) || (JAH=2112) || (JAH=2140) DO   ; SPECIAL LEAP YEARS (ALL 28 YEARS)
	. .;IF $EXTRACT(DAT,1,6)'="01.10." IF $$^WWWDAY($$^WWWDATE1(DAT))=7 SET WOC=WOC-1 IF WOC<1 SET WOC=1 SET YQ=1 QUIT  ; SR17146
	. . IF $EXTRACT(DAT,1,6)'="01.10." IF intTodaysDay=7 SET WOC=WOC-1 IF WOC<1 SET WOC=1 SET YQ=1 QUIT
	. . IF WOC>1 SET WOC=WOC-1 SET YQ=1 QUIT
	. . IF WOC<2               SET YQ=1 QUIT
	. ;
	. QUIT:YQ=1
	.;IF $$^WWWDAY($$^WWWDATE1("01.01."_JAH))=4 DO   ; SPECIAL LEAP YEAR (STARTS WITH THURSDAY)   ; SR17146
	.;. IF $$^WWWDAY($$^WWWDATE1(DAT))=7 IF $EXTRACT(DAT,4,6)'="01." DO   ; MONTH NOT JANUARY
	. IF intNewYearsDay=4 DO   ; SPECIAL LEAP YEAR (STARTS WITH THURSDAY)
	. . IF intTodaysDay=7 IF $EXTRACT(DAT,4,6)'="01." DO   ; MONTH NOT JANUARY
	. . . IF $EXTRACT(DAT,1,3)="01." SET YQ=1 QUIT
	. . . SET WOC=WOC-1              SET YQ=1 QUIT
	. . ;
	. . QUIT:YQ=1
	. .;IF $$^WWWDAY($$^WWWDATE1(DAT))=7 IF $EXTRACT(DAT,4,6)="01." DO   ; MONTH = JANUARY   ; SR17146
	. . IF intTodaysDay=7 IF $EXTRACT(DAT,4,6)="01." DO                  ; MONTH = JANUARY
	. . . IF (+TAG=2) || (+TAG=3) SET WOC=1     SET YQ=1 QUIT
	. . . IF (TAG=18) || (TAG=25) SET WOC=WOC-1 SET YQ=1 QUIT
	. ;
	. QUIT:YQ=1
	. ;
	. IF intTodaysDay=7 DO   ; NORMAL LEAP YEARS
	. . IF (intNewYearsDay=7) && (WOC>2) SET WOC=WOC-1                    QUIT
	. . IF (intNewYearsDay=1) || (intNewYearsDay=2) || (intNewYearsDay=3) QUIT   ; FIXME - Do nothing?
	.; IF $$^WWWDAY($$^WWWDATE1(DAT))=7 DO   ; NORMAL LEAP YEARS   ; SR17146
	.; . IF $$^WWWDAY($$^WWWDATE1("01.01."_JAH))=7 IF WOC>2 SET WOC=WOC-1 QUIT
	.; . IF $$^WWWDAY($$^WWWDATE1("01.01."_JAH))=1!($$^WWWDAY($$^WWWDATE1("01.01."_JAH))=2)!($$^WWWDAY($$^WWWDATE1("01.01."_JAH))=3) QUIT
	
	; FIXED RULE FOR DECEMBER SPECIAL LEAP YEARS (ALL 28 YEARS)
	IF (JAH=2028) || (JAH=2056) || (JAH=2084) || (JAH=2112) || (JAH=2140) IF (MON=12) && ((WOC=52) || (WOC=53)) DO
	. IF TAG<17                      QUIT
	. IF TAG=17           SET WOC=50 QUIT
	. IF TAG>17 IF TAG<25 SET WOC=51 QUIT
	. IF TAG>24 SET WOC=52
	
	SET WOC = $EXTRACT(100+WOC,2,3)
	
	IF YPARA=1 QUIT WOC_"."_JAH_" "_$$^WWWTEXT(385)  ; "Week "
	IF YPARA=2 QUIT JAH_WOC
	IF YPARA=3 QUIT JAH_"-"_WOC
	IF YPARA=4 QUIT WOC 
	QUIT WOC_JAH
	
	
WOC1(YDATUM) ;
	
OLDVERSION ;ALTE VERSION GGF LÖSCHEN ;Delete 
	;
	QUIT
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK
	NEW DAT,JAH,WOC,MON,TAG
	;
	;
	;YDATUM=$H ODER TT.MM.JJJJ ;Or 
	;
	;YPARA=1 AUSGABE IN WW.JJJJ KW ;expenses within week 
	;YPARA=2 AUSGABE IN JJJJWW ;expenses within 
	;YPARA=3 AUSGABE IN JJJJ-WW ;expenses within 
	SET YPARA=$GET(YPARA)
	IF '$DATA(YDATUM) SET YDATUM=""
	IF YDATUM="" SET YDATUM=+$HOROLOG
	;
	SET DAT=YDATUM
	IF $FIND(DAT,"/") SET DAT=$PIECE(DAT,"/",2)_"."_$PIECE(DAT,"/",1)_"."_$PIECE(DAT,"/",3)
	IF $P(DAT,".",3)="" SET DAT=$$^WWWDATE($P(YDATUM,".",1))
	IF $FIND(DAT,"/") SET DAT=$PIECE(DAT,"/",2)_"."_$PIECE(DAT,"/",1)_"."_$PIECE(DAT,"/",3)
	IF $FIND(DAT,"-") SET DAT=$TRANSLATE(DAT,"-",".")
	SET MON=$PIECE(DAT,".",2),JAH=$PIECE(DAT,".",3),TAG=$PIECE(DAT,".",1)
	
	SET DAT=$$^WWWDATE1("01.01."_JAH)
	SET DAT=$$^WWWDAY(DAT)  ;wochentag des 1.1.
	IF +MON=1,TAG<$PIECE("1;0;0;0;4;3;2",";",DAT) DO
	. SET JAH=JAH-1,MON=12,TAG=31
	. SET DAT=$$^WWWDATE1("01.01."_JAH)
	. SET DAT=$$^WWWDAY(DAT)
	
	SET DAT(1)=$PIECE("0;1;2;3;-3;-2;-1",";",DAT)
	SET WOC=DAT(1)+TAG+$PIECE("0,31,59,90,120,151,181,212,243,273,304,334",",",MON)
	SET DAT("LY")=$SELECT(JAH#100:JAH#4=0,1:JAH#400=0)
	IF DAT("LY"),MON>2 SET WOC=WOC+1
	SET WOC=WOC\7+(WOC#7'=0) 
	IF WOC=53 DO
	. IF $PIECE($GET(^WWW100(0,"WEEKS",SPRACHE,JAH,1)),Y,1)=53 QUIT   ;TYBD;22960;17.5.2003; PARAMETER FÜR JAHRESZAHL
	. IF $PIECE($GET(^WWW100(0,"WEEKS",SPRACHE,JAH,1)),Y,1)=52 SET JAH=JAH+1,WOC=1 QUIT   ;TYBD;22960;17.5.2003; PARAMETER FÜR JAHRESZAHL
	. IF DAT=4,'DAT("LY") QUIT
	. IF DAT=3,DAT("LY")  QUIT
	. SET JAH=JAH+1,WOC=1
	
	SET WOC=$EXTRACT(100+WOC,2,3)
	IF YPARA=1 QUIT WOC_"."_JAH_" "_$$^WWWTEXT(385)  ;KW ;week 
	IF YPARA=2 QUIT JAH_WOC      ;KW ;week 
	IF YPARA=3 QUIT JAH_"-"_WOC  ;KW ;week 
	QUIT WOC_JAH
	
]]></Routine>
</Export>