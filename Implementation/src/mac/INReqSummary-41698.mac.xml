<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INReqSummary" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INReqSummary
	
#include %occInclude
#include COMSYS
#include INConst
#include COMConst
#include COMView
	
OnAfterDataFields(pstrCompany, pstrForm)
	;-------------------------------------------------------------------------------
	; Description : To Load The ComView
	;	
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 24-Mar-2009	 KALYAN	Created
	;-------------------------------------------------------------------------------
	kill ^INReqSummary
	kill ^INReqSummarys
	do GetRequisitionRecords           // To fetch unfirmed records from INRequsition to INReqSummary
	do LoadGrid(pstrCompany,pstrForm)
	quit
	
	
LoadGrid(pstrCompany=0,pstrForm,pblnLocked=$$$NO)
	;-------------------------------------------------------------------------------
	;			
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 24-Mar-2009	 KALYAN	Created	
	;-------------------------------------------------------------------------------
	new YFORM,YKEY,YAUSWAHL,YFELD
 	do ClearOld^WWWMultiLock(YUSER)
 	
 	$$$ClearExternalFilter("INPOReqSummary") ; YFORM is used as a global within COMGridEdit31
	set YFORM = "INReqSummary"
 
	set YFELD = ""
	set YKEY  = ""  //YUSER		// No header
 
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)          = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)       = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)            = "INReqSummary"
	set $$$COMGridEditParameterEnabled(YAUSWAHL)             = $$$YES
	set $$$COMGridEditParameterContainer(YAUSWAHL)           = "INPOReqSummary"
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL) = $$$YES
	set $$$COMGridEditParameterCOMViewGrid(YAUSWAHL)         = $$$YES
 	
	do Start^COMGridEdit31(YFORM,YKEY)
	set YFORM = "INPOReqSummary"                 ; COMViewFilter uses YFORM byref
	
	do LoadCOMViewGrid^COMViewFilter("INPOReqSummary","INReqSummary",1)
	quit $$$YES
 
	
GetRequisitionRecords
	;-------------------------------------------------------------------------------
	; Description :
	; Fetches the Unfirmed lines from INRequisition and populates to INReqSummary
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 01-Oct-2009	SCR		SR16922: Corrected the Next number on idINReqSummary
	; 24-Mar-2009	KALYAN	Created	
	;-------------------------------------------------------------------------------
	new dteDue,idINReq,idINRSTemp,idSupplier,idINReqSummary,StkProgram
	new objINReq,objINReqSummary,strStatus
	new dteRelease
	
	set idINRSTemp      = ""
	set objINReqSummary = ""
	set idINReqSummary  = ""
	
	//^INRequisitions(0,6,3,"IG02",0,1619)=""
	set idSupplier=""
	for {
		
		set idSupplier = $order(^INRequisitions(YM,6,3,idSupplier))
		quit:idSupplier=""
		
 		set idINReq = ""
 		for {
			set idINReq = $order(^INRequisitions(YM,6,3,idSupplier,YM,idINReq))
			quit:idINReq=""

			set objINReq = $get(^INRequisition(YM,YM,idINReq,1))
			quit:objINReq=""
				
			if ($$$INRequisitionStockProgram(objINReq)="") {
				set StkProgram=""
			} else {
				set StkProgram=$$$INRequisitionStockProgram(objINReq)
			}
			set idINReqSummary  = idSupplier
			set objINReqSummary = $get(^INReqSummary(YM,idINReqSummary,1))
	
			if (objINReqSummary="") {				
				set objINReqSummary=$$NewReqSummary(idSupplier,StkProgram,objINReq,.idINReqSummary)
			} else {
				if (StkProgram'=$$$INReqSummaryStockProgram(objINReqSummary)){
    				set objINReqSummary=$$NewReqSummary(idSupplier,StkProgram,objINReq,.idINReqSummary)
				}
			}
		
			set dteDue = $$$INRequisitionDueDate(objINReq)
			if dteDue = "" {
				set dteDue = +$horolog
			}
		
			set dteRelease = $$GetReleaseDate(idSupplier, $$$INRequisitionItem(objINReq),$$$INRequisitionLocation(objINReq), dteDue)
		
			if dteDue>($horolog+30) {
				set $$$INReqSummaryRelease301(objINReqSummary) = $$$INReqSummaryRelease301(objINReqSummary)+1
		
			} elseif dteDue>($horolog+15) {
				set $$$INReqSummaryRelease30(objINReqSummary)  = $$$INReqSummaryRelease30(objINReqSummary)+1
		
			} elseif dteDue>($horolog+3) {
				set $$$INReqSummaryRelease15(objINReqSummary)  = $$$INReqSummaryRelease15(objINReqSummary)+1
		
			} else {
				set $$$INReqSummaryRelease3(objINReqSummary)   = $$$INReqSummaryRelease3(objINReqSummary)+1
			}
					
			set strStatus = $$$Save("INReqSummary",idINReqSummary,objINReqSummary,1)
					
		
 		}
		
	}
	quit	
	

GetReleaseDate(pidSupplier, pidItem, pidLoc, pdteDue)
	;-------------------------------------------------------------------------------
	; Separate function to calculate the Release Date, given Due Date, Supplier, 
	; Item, Ship-to Location, Sold-To location, considering all expected lead times.
	; For now, this simply sets Release Date to be the Due Date, but a future enhancement 
	; will make this more advanced.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 08-Dec-2009	PPP		SR<>: Created
	;-------------------------------------------------------------------------------
	
	quit pdteDue

	
GetLinesOutstanding(pstrSupplier,pStkProgram,pintLocation=$$$NULLOREF)
	;-------------------------------------------------------------------------------
	; Show the count of outstanding requisition lines in INRequisition 
	;    for a particular Supplier
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 
	; 14-Dec-2009	PPP		SR17077:Status has to 3 - Sourced 
	; 24-Mar-2009	KALYAN	Created
	;-------------------------------------------------------------------------------
	new intLineCount,objResult
	
	set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
	if ((pstrSupplier '= "") && (pStkProgram '= ""))  {
		if (pintLocation '= $$$NULLOREF) {
			do objResult.Prepare("SELECT count(ID) AS intLinesOutstanding FROM SQLUser.INRequisition WHERE (Supplier = ?) AND (StockProgram=?) AND Status=3")
			do objResult.Execute(pstrSupplier,pStkProgram)
		} else {
			do objResult.Prepare("SELECT count(ID) AS intLinesOutstanding FROM SQLUser.INRequisition WHERE (Supplier = ? ) AND (StockProgram=?) AND Status=3 ")
			do objResult.Execute(pstrSupplier,pStkProgram)
		}
	} elseif(pStkProgram '="") {
		do objResult.Prepare("SELECT count(ID) AS intLinesOutstanding FROM SQLUser.INRequisition WHERE Supplier is null AND (StockProgram=?)  AND Status=3 ")
		do objResult.Execute(pStkProgram)
		
	} elseif(pstrSupplier '= "") {
		do objResult.Prepare("SELECT count(ID) AS intLinesOutstanding FROM SQLUser.INRequisition WHERE  (Supplier=?) and StockProgram is null AND Status=3 ")
		do objResult.Execute(pstrSupplier)
	} else {
		do objResult.Prepare("SELECT count(ID) AS intLinesOutstanding FROM SQLUser.INRequisition WHERE Supplier is null and StockProgram is null and Status=3 ")
		do objResult.Execute()
	}
	set intLineCount = 0
	if objResult.Next() {
		set intLineCount = objResult.Data("intLinesOutstanding")
	} else {
		set intLineCount = ""
	}
	do objResult.%Close()
	
	quit intLineCount
	
 
GetEarliestReleaseDate(pstrSupplier)
	;-------------------------------------------------------------------------------
	; Get the earliest Release date of particular supplier from existing 
	; 				requisition lines
	;			
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 14-Dec-2009	PPP		SR17077:Status has to 3 - Sourced 
	; 04-Apr-2009	KALYAN	Created
	;-------------------------------------------------------------------------------
	new dteMinDueDate,objResult
 
	set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
	if (pstrSupplier =" "){
		do objResult.Prepare("SELECT MIN(DueDate) AS minDueDate FROM SQLUser.INRequisition WHERE Supplier is null and  Status=3 ")
		do objResult.Execute()
	} else {
		do objResult.Prepare("SELECT MIN(DueDate) AS minDueDate FROM SQLUser.INRequisition WHERE Supplier = ? and  Status=3 ")
		do objResult.Execute(pstrSupplier)
	}
	if objResult.Next() {
		set dteMinDueDate = objResult.Data("minDueDate")
	} else {
		set dteMinDueDate = ""
	}
	do objResult.%Close()
	
	quit dteMinDueDate
	
	
GetLocations(pstrsupplier)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 14-Dec-2009	PPP		SR17077:Status has to 3 - Sourced 
	; 04-Apr-2009	KALYAN	Created
	;-------------------------------------------------------------------------------
	new intLocations,objResult
 
	set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
	do objResult.Prepare("SELECT COUNT(DISTINCT Location) AS Location FROM SQLUser.INRequisition WHERE Supplier = ? AND Status=3")
	do objResult.Execute(pstrsupplier)
	if objResult.Next() {
		set intLocations = objResult.Data("Location")
	} else {
		set intLocations = ""
	}
	do objResult.%Close()
	
	quit intLocations
  
	
ReleaseWorkPad2(pYKEY)
	;-------------------------------------------------------------------------------
	; Redirects to Release Workpad-2 after selecting particular supplier
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 14-Dec-2009	PPP		SR17077	: Check for Supplier, Back Arrow functionality
	; 24-Mar-2009	ELITSER	SR<>	: Created
	;-------------------------------------------------------------------------------
	new idSupplier,strStatus
	
	set idSupplier = $$GetKey^COMGridEdit31G()
	if (pYKEY '= "") set idSupplier = pYKEY
	set idSupplier = $translate(idSupplier," ")

	if (idSupplier '="") && (idSupplier'="NotSourced") {

		//FIXME: Not sure why this works, needed for the back arrow to go to the right form
		set YBACK = "INPOReqSummary,"
		set YFORM = "INPOReqSummary"
	
		do GoToForm^COMUtilForm("INReqRW",YM,"",idSupplier)
	
	} else {
		do GoToForm^COMUtilForm("INPOReqSummary",YM)
	}
	
	quit
	


NewReqSummary(pidSupplier,pStkProgram,pobjINReq,&pidINReqSummary)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 14-Dec-2009	PPP		SR17077: Supplier is the Primary Key for the Summary Record
	; 01-Oct-2009	SCR		SR16922: Pass back pidINReqSummary
	;-------------------------------------------------------------------------------
	new objINReqSummary
	
	set objINReqSummary=""
	set pidINReqSummary=$$$INRequisitionSupplier(pobjINReq)		//$$^WWWNEXT("INReqSummary")
	set $$$INReqSummaryNoOfLines(objINReqSummary)	   		= $$GetLinesOutstanding($translate(pidSupplier," "),pStkProgram,$$$INRequisitionLocation(pobjINReq))
	set $$$INReqSummaryEarliestReleaseDate(objINReqSummary)	= $$GetEarliestReleaseDate(pidSupplier)
	set $$$INReqSummarySites(objINReqSummary)          		= $$GetLocations(pidSupplier)
	set $$$INReqSummaryStockProgram(objINReqSummary)  		= $$$INRequisitionStockProgram(pobjINReq)
	set:pidINReqSummary="" pidINReqSummary="Not Sourced"
	
	quit objINReqSummary
	
]]></Routine>
</Export>