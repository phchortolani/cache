<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMChangeHistory" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMChangeHistory
	
#include COMConst
#include COMGridEdit31
	
#define	 CommaToSlash(%1)	$translate(%1,$$$COMMA,"/")
	
AddEntry(pidCompany,pidForm,pidUser,pidKey,pstrData)
	;-------------------------------------------------------------------------------
	; Add a Change History entry.
	;
	; Params:
	;
	; Returns:
	; $$$OK If the entry is saved correctly.
	;
	; History:
	; 31-May-2007	RPW		SR15513: If the entry exists find the next one.
	; 05-Jan-2007	RPW		SR15359: Created
	;-------------------------------------------------------------------------------
 
	new YM,objChangeHistory,strStatus,idKey,tmsTimestamp,idClass
	
	// Change ~ to 每, allows multiple field changes to be shown nicely.
	
	if $find(pstrData,"~") {
		set pstrData = $translate(pstrData,"~","每")
	}
	
	set idClass=$$$WWW120ClassUsedInForm($get(^WWW120(0,pidForm,1)))
	if idClass="" set idClass = pidForm
	
	set objChangeHistory=""
	set $$$COMChangeHistoryData(objChangeHistory)=pidForm_":"_pstrData
	
	set YM = 0    ;pidCompany
	set tmsTimestamp = $horolog
	set tmeNow       = $$$KEY2(tmsTimestamp)
	
	set idKey = idClass_$$$COMMA_
	            (+tmsTimestamp)_$$$COMMA_
	            tmeNow_$$$COMMA_
	            pidUser_$$$COMMA_
	            $$$CommaToSlash(pidKey)
			 
	// Find the first non-existent key
	for {
		quit:'$data(@("^COMChangeHistory("_$$^WWWKEYBUILD("0,"_idKey)_",1)"))
		set $piece(idKey,$$$COMMA,3) = $piece(idKey,$$$COMMA,3)+$$$CopyIncrement
	}
	
	set strStatus = $$$Save("COMChangeHistory",idKey,objChangeHistory,$$$YES)
	quit strStatus
	
	
DrawTable(pidEvent,pidParameters)
	;-------------------------------------------------------------------------------
	; This is called to draw the actual COMAudit table on the screen.
	; 
	; Has some hacks to allow grid/no grid forms to work nicely.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 11-Jan-2007	PO		SR15339: Table heading
	; 09-Jan-2006	SteveS	SR15342: Show latest changes first
	; 08-Jan-2006	PO		SR15351: Changed conflicting coding, one using form as
	;							key other using class
	; 05-Jan-2006	PO		SR15351: Changed as I changed the interface for the
	;							Dynamic Table code
	; 05-Jan-2007	RPW		SR15359: Created
	;-------------------------------------------------------------------------------
	new idxClass,idxKey,objChangeHistory,idLine,idForm,idKey,idFullKey,strNamespace,idClass,dteDate,tmeTime,idUser,strData,lstHeaders,idTableData
	new lstColTypes,strFunction
	
	if pidEvent = $$$EnumWWWDYNTABLEGridLineFocus {
		set idForm = $$$DYNTABLEGridLineFocusGrid(pidParameters)
		set idKey  = $$ReferenceKey^COMGridEdit31Interface(idForm,$$$DYNTABLEGridLineFocusRow(pidParameters))
		
	} elseif pidEvent = $$$EnumWWWDYNTABLEAfterDataFields {
		set idForm = $$$DYNTABLEGridLineFocusForm(pidParameters)
		set idKey  = $$$DYNTABLEAfterDataFieldsKey(pidParameters)
	} // SR15351 ^^^
 
	set idClass   = $$$GRIDClass(idForm)
	set idFullKey = $$$CommaToSlash(idKey) ; Change all commas to "/".
	set idxClass  = $$$Index(idClass)
	set idxKey    = $$$Index(idFullKey)
	set idLine    = 0
	
	kill ^CacheTempDynamicTable(YUCI,YUSER,1)
	
	// Show latest changes first
	set dteDate = ""
	for {
		set dteDate = $order(^COMChangeHistorys(YM,1,idxClass,idxKey,idClass,dteDate),-1)   ; Reverse Order
		quit:dteDate=""
		
		set tmeTime = ""
		for {
			set tmeTime = $order(^COMChangeHistorys(YM,1,idxClass,idxKey,idClass,dteDate,tmeTime),-1)   ; Reverse Order
			quit:tmeTime=""
			
			set idUser = ""
			for {
				set idUser = $order(^COMChangeHistorys(YM,1,idxClass,idxKey,idClass,dteDate,tmeTime,idUser))
				quit:idUser=""

				set objChangeHistory = $get(^COMChangeHistory(YM,idClass,dteDate,tmeTime,idUser,idFullKey,1))
				
				// Change 每 to &#7e; which is the tilde (~) character, allows full data changes to be shown
				// and | symbols to <br />
				set strData = $$Replace^COMUtilStr($$$COMChangeHistoryData(objChangeHistory),"每","&#x7e;")
				set strData = $$Replace^COMUtilStr(strData,"|","<br />")
				
				set ^CacheTempDynamicTable(YUCI,YUSER,1,$increment(idLine)) = strData
			}
		}
	}
	set lstHeaders  = "" ;$listbuild($$^WWWFELDNAME("COMChangeHistory","D",$$$FldCOMChangeHistoryData))
	set idTableData = 1
	set lstColTypes = $listbuild($listbuild("left","display"))
	set strFunction = ""
 
	do DrawTable^WWW120DynTable(lstHeaders,idTableData,lstColTypes,pidParameters,strFunction,pidEvent)
	
	kill ^CacheTempDynamicTable(YUCI,YUSER,1)
	quit
	
]]></Routine>
</Export>