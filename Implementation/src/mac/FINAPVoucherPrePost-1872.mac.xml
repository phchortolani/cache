<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPVoucherPrePost" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
 
FINAPVoucherPrePost
 
	#include FINConst
	#include COMSYS		
	
	#define Currency(%obj,%type) "<span style='width:100%;text-align:right;font-size:18;color:Black'>"_$$FormatCurrency^COMTable(%obj)_" "_%type_"</span>"
	#define CurrencyLarge(%obj,%type) "<span style='width:100%;text-align:right;font-size:22;color:Black'>"_$$FormatCurrency^COMTable(%obj)_" "_%type_"</span>"
	#define InvoiceLine	"INVLINE"
	#define Title(%1) "<span style='width:100%;text-align:right;font-size:20;color:Black'>"_$$$Text(%1)_"</span>"
	#define Reverse(%list) $listbuild($listget(%list,2),$listget(%list,1))
	#define ReverseCheck if (curTotal<=0) set lstRow = $$$Reverse(lstRow)
	#define Pad(%str) $translate($justify(%str,3)," ",0)
 
ShowPrePostInfo(pidVoucher)
    ;-------------------------------------------------------------------------------
    ; Code to Redirect to the PrePost data for a supplier voucher
    ;
    ; Returns:
    ;
    ; History:
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	if '$$$NoKey(pidVoucher) {
		do ClearPrePostData(pidVoucher)
		do StorePrePostData(pidVoucher)
		do GoToForm^COMUtilForm("FINAPVoucherPrePost",pidVoucher)
	} else {
		do ReturnError^COMUtilError("Fin00089") ;No Record Selected	
	}
	
	quit
	
ClearPrePostData(pidVoucher)
    ;-------------------------------------------------------------------------------
    ; Clear any old pre post data.
    ;
    ; Returns:
    ;
    ; History:
    ; 20-Oct-2006	JW			SR15134: Look at kill status. Return status.
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	new idVoucher,strType,idLine,idSplitRef,strStatus
	
	set idVoucher=$get(pidVoucher)
	set strStatus = $$$OK
	
	if (idVoucher'="") {
		set strType=""
		for {
			set strType=$order(^FINAPVoucherPrePost(YM,idVoucher,strType))
			quit:strType=""
			
			set idLine=""
			for {
				set idLine=$order(^FINAPVoucherPrePost(YM,idVoucher,strType,idLine))
				quit:idLine=""
				
				set idSplitRef=""
				for {
					set idSplitRef=$order(^FINAPVoucherPrePost(YM,idVoucher,strType,idLine,idSplitRef))
					quit:idSplitRef=""
					
					set strStatus = $$$Kill("FINAPVoucherPrePost",idVoucher_","_strType_","_idLine_","_idSplitRef)		// SR15134
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}	
	}
 
	quit strStatus		// SR15134
	
StorePrePostData(pidVoucher)
    ;-------------------------------------------------------------------------------
    ; Store all the prepost data for a supplier voucher
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Oct-2005	Steve S		SR13738: Stored padded with leading zeros
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	new idVoucher,objVoucher,idInvLine,objInvoiceLine,fltLineAmount,idGLAccount
	new idAccGroup,idLine,taxLines,idTax,objTax,strTaxType,idAccount,fltTax
	new strTaxText,objGLAccount,objDivision,strDescription
	
	set idVoucher=$get(pidVoucher)
 
	if (idVoucher'="") {
		set objVoucher=$get(^FINAPInv(YM,idVoucher,1))
 
		set idInvLine=""
		for {
			set idInvLine=$order(^FINAPInvCharge(YM,idVoucher,idInvLine))
			quit:idInvLine=""
 
			set objInvoiceLine=$get(^FINAPInvCharge(YM,idVoucher,idInvLine,1))
			continue:$$$FINAPInvChargeIsOnCharge(objInvoiceLine)
			
			set fltLineAmount  =$$$FINAPInvChargeAmountTaxEx(objInvoiceLine)
			set idGLAccount	   =$$$FINAPInvChargeAccount(objInvoiceLine)
			set idAccGroup	   =$$$FINAPInvChargeAccountGroup(objInvoiceLine)
			set strDescription =$$$FINAPInvChargeReference(objInvoiceLine)_$$$CRLF_$$$Text($lb("Fin00789",idInvLine)) ;Invoice Line %1
 
			if idGLAccount'="" {
				do StoreNode(idVoucher_","_$$$InvoiceLine_","_$$$Pad(idInvLine)_","_" ", ;SR13738
							strDescription,fltLineAmount,idGLAccount)
			} else {
				for {
					set idGLAccount=$order(^FINAPInvChargeDivision(YM,idVoucher,idInvLine,idGLAccount))
					quit:idGLAccount=""
					
					set strDescription=$$$FINAPInvChargeReference(objInvoiceLine)_$$$CRLF_$$$Text($lb("Fin00789",idInvLine)) ;Invoice Line %1
					
					set objGLAccount=$get(^FINGLAccount(YM,idGLAccount,1))
					set objDivision=$get(^FINAPInvChargeDivision(YM,idVoucher,idInvLine,idGLAccount,1))
						
					if $$$FINAPInvChargeDivisionDollar(objDivision)="" {
						set strDescription=strDescription_$$$CRLF_$$$Text("Fin00808")  ;Percentage Split Amount
						set strDescription=strDescription_$$$CRLF_$$$FINAPInvChargeDivisionPercent(objDivision)_"%"
					} else {
						set strDescription=strDescription_$$$CRLF_$$$Text("Fin00762")  ;Fixed Split Amount
					}
				
					set fltLineAmount=$$$FINAPInvChargeDivisionAmount(objDivision)
					do StoreNode(idVoucher_$$$COMMA_$$$InvoiceLine_$$$COMMA_$$$Pad(idInvLine)_$$$COMMA_idGLAccount, ;SR13738
								strDescription,fltLineAmount,idGLAccount,idAccGroup)	
				}
			}
		}
		
		if $$$FINAPInvTaxInvoice(objVoucher) {
			do ComputeTaxLines(idVoucher,.taxLines)
			
			set idLine=""
			for {
				set idLine=$order(taxLines(idLine))
				quit:idLine=""
					
				set idTax=""
				for {
					set idTax=$order(taxLines(idLine,idTax))
					quit:idTax=""
						
					set objTax	   = $get(taxLines(idLine,idTax))
					set strTaxType = $piece(objTax,Y,1)
					set idAccount  = $piece(objTax,Y,3)
					set fltTax	   = $piece(objTax,Y,4)
					
					set strTaxText=strTaxType
					if strTaxText="" set strTaxText=$$$Text("Fin00793")  ;No tax type specified
					set strTaxText=strTaxText_$$$CRLF_$$$Text($lb("Fin00790",idLine))  ;Taxes for invoice line %1
 
					do StoreNode(idVoucher_$$$COMMA_$$$Pad(idLine)_$$$COMMA_$$$Pad(idTax)_$$$COMMA_" ",
								strTaxText,fltTax,idAccount)	
				}
			}
		}
	}
 
 
	quit	
	
OnAfterDataFields(YKEY)
    ;-------------------------------------------------------------------------------
    ; Routine to execute after data fields
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	if $get(YKEY)'="" do ShowTree(YKEY)
	quit
 
	
ShowTree(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Shows the prepost tree
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 14-Nov-2006	Steve S		SR14766: Debit/Credit columns
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	new idVoucher,strExpandString,objVoucher,idSupplier,idControlAccount,objControlAccount
	new idInvLine,strInvLineKey,objLine,idGLAccount,objGLAccount,idTaxLine
	new objTaxLine,idAccount,idSplitCharge,objCharge,curTotal,lstRow
 
	set idVoucher=$piece($get(pYKEY),$$$COMMA,1)
 
	set strExpandString=""
	
	if $data(^CacheTempExpandTree(YUSER,"Voucher")) set strExpandString=$$$YES
	if $data(^CacheTempCollapseTree(YUSER,"Voucher")) set strExpandString=$$$NO
	
	if (idVoucher'="") {
		set objVoucher=$get(^FINAPInv(YM,idVoucher,1))
		set idSupplier=$$$FINAPInvInvoiceSupplier(objVoucher)
		set idControlAccount=$$GetControlAccount^FINAPSupplier(idSupplier)
		
		if (idControlAccount'="") {
			set objControlAccount=$get(^FINGLAccount(YM,idControlAccount,1))
		} else {
			set objControlAccount=""	
		}
		
		do StartTree^COMTree(YPARA)
		
		//SR14766: vvvvvvvvvvvvvvvvvvvvvvvvvvvv
		do AddNode^COMTree("",
						   "PrePostTree",
						   "",
						   $$$Text("Fin01087"), ;Pre Post Tree
						   "",
						   "",
						   "",
						   "",
						   $listbuild($$$Title("Fin00791"),$$$Title("Fin01086")), ;Debit ;Credit
						   "",
						   1)
		//SR14766: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
		
		//SR14766
		set curTotal = -$$$FINAPInvActualTotal(objVoucher)
		set lstRow = $listbuild($$$CurrencyLarge($zabs(curTotal),""),"")
		$$$ReverseCheck
		
		do AddNode^COMTree("PrePostTree",
							idVoucher,
							$$$FINGLAccountDescription(objControlAccount),
							$$$StrFINAPSupplierControlAccount_$$$SPACE_idControlAccount,
							"",
							"FINAPVoucherPrePost",
							"",
							"",
							lstRow,
							$$$YES,
							"",
							"",
							strExpandString)				
		
		set idInvLine=""
		
		for {
			set idInvLine=$order(^FINAPVoucherPrePost(YM,idVoucher,$$$InvoiceLine,idInvLine))
			quit:idInvLine=""
			
			set strInvLineKey=idVoucher_$$$COMMA_idInvLine
			
			//SR14766
			set curTotal = -$$GetVoucherLineTotal(idVoucher,+idInvLine)
			set lstRow = $listbuild("",$$$Currency($zabs(curTotal),""))
			$$$ReverseCheck
			
			do AddNode^COMTree(idVoucher,
							strInvLineKey,
							"",
							$$$StrFINAPInvChargeLine_$$$SPACE_(+idInvLine),
							"",
							"FINAPVoucherPrePost",
							"",
							"",
							lstRow,
							$$$YES,
							"",
							"",
							strExpandString)
				
			if $data(^FINAPVoucherPrePost(YM,idVoucher,$$$InvoiceLine,idInvLine," ")) {
				set objLine=$get(^FINAPVoucherPrePost(YM,idVoucher,$$$InvoiceLine,idInvLine," ",1))
				
				set idGLAccount=$$$FINAPVoucherPrePostGLAccount(objLine)
				set objGLAccount=$get(^FINGLAccount(YM,idGLAccount,1))
				
				//SR14766
				set curTotal = -$$$FINAPVoucherPrePostAmount(objLine)
				set lstRow = $listbuild("",$$FormatCurrency^COMTable($zabs(curTotal)),"")
				$$$ReverseCheck
				
				do AddNode^COMTree(strInvLineKey,
								strInvLineKey_$$$COMMA_$$$InvoiceLine,
								$$$FINGLAccountDescription(objGLAccount),
								$$$StrFINAPInvChargeAccount_" "_idGLAccount,
								$select(pYKEY=(idVoucher_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine_$$$COMMA_" "):"oopen.gif",1:"oclose.gif"),
								"FINAPVoucherPrePost",
								"",
								pYKEY=(idVoucher_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine_$$$COMMA_" "),
								lstRow,
								"",
								"",
								idVoucher_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine_$$$COMMA_" ",
								strExpandString)
			} else {
				set idSplitCharge=""
				for {
					set idSplitCharge=$order(^FINAPVoucherPrePost(YM,idVoucher,$$$InvoiceLine,idInvLine,idSplitCharge))
					quit:idSplitCharge=""
					continue:idSplitCharge=" "
					
					set objLine=$get(^FINAPVoucherPrePost(YM,idVoucher,$$$InvoiceLine,idInvLine,idSplitCharge,1))
					set objGLAccount=$get(^FINGLAccount(YM,idSplitCharge,1))
					
					//SR14766
					set curTotal = -$$$FINAPVoucherPrePostAmount(objLine)
					set lstRow = $listbuild("",$$FormatCurrency^COMTable($zabs(curTotal)),"")
					$$$ReverseCheck
					
					do AddNode^COMTree(strInvLineKey,
								strInvLineKey_$$$COMMA_idSplitCharge,
								$$$FINGLAccountDescription(objGLAccount),
								$$$StrFINAPInvChargeAccount_" "_idSplitCharge,
								$select(pYKEY=(idVoucher_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine_$$$COMMA_idSplitCharge):"oopen.gif",1:"oclose.gif"),
								"FINAPVoucherPrePost",
								"",
								pYKEY=(idVoucher_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine_$$$COMMA_idSplitCharge),
								lstRow,
								"",
								"",
								idVoucher_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine_$$$COMMA_idSplitCharge,
								strExpandString) 	
				}
			}
 
			if $$$FINAPInvLinesIncludeTax(objVoucher)&&(+$$$FINAPInvChargeTax($get(^FINAPInvCharge(YM,idVoucher,+idInvLine,1)))'=0) {
				do AddNode^COMTree(strInvLineKey,
									strInvLineKey_$$$COMMA_"Tax",
									"",
									$$$Text("Fin00763"),  ;Tax Component
									"",
									"FINAPVoucherPrePost",
									"",
									"",
									"",
									$$$YES,
									"",
									"",
									strExpandString)
									
				set idTaxLine=""
				for {
					set idTaxLine=$order(^FINAPVoucherPrePost(YM,idVoucher,idInvLine,idTaxLine))
					quit:idTaxLine=""
					
					set objTaxLine=$get(^FINAPVoucherPrePost(YM,idVoucher,idInvLine,idTaxLine," ",1))
					
					set idAccount=$$$FINAPVoucherPrePostGLAccount(objTaxLine)
					set objGLAccount=$get(^FINGLAccount(YM,idAccount,1))
					
					//SR14766
					set curTotal = -$$$FINAPVoucherPrePostAmount(objTaxLine)
					set lstRow = $listbuild("",$$FormatCurrency^COMTable($zabs(curTotal)),"")
					$$$ReverseCheck
					
					do AddNode^COMTree(strInvLineKey_$$$COMMA_"Tax",
										strInvLineKey_$$$COMMA_"Tax"_idTaxLine,
										$$$FINGLAccountDescription(objGLAccount),
										$$$StrFINAPInvChargeAccount_$$$SPACE_idAccount,
										$select(pYKEY=(idVoucher_$$$COMMA_idInvLine_$$$COMMA_idTaxLine_$$$COMMA_" "):"oopen.gif",1:"oclose.gif"),
										"FINAPVoucherPrePost",
										"",
										pYKEY=(idVoucher_$$$COMMA_idInvLine_$$$COMMA_idTaxLine_$$$COMMA_" "),
										lstRow,
										"",
										"",
										idVoucher_$$$COMMA_idInvLine_$$$COMMA_idTaxLine_$$$COMMA_" ",
										strExpandString)
				}
			}
		}
		
		if ('$$$FINAPInvLinesIncludeTax(objVoucher))&&($$$FINAPInvTaxInvoice(objVoucher)) {
			do AddNode^COMTree(idVoucher,
								idVoucher_$$$COMMA_"Tax",
								"",
								$$$Text("Fin00763"),  ;Tax Component
								"",
								"FINAPVoucherPrePost",
								"",
								"",
								$lb("",$$$Currency($$$FINAPInvTaxTotal(objVoucher),"")),
								"",
								"",
								"",
								strExpandString)
			
			
			set idInvLine=""
			for {
				set idInvLine=$order(^FINAPVoucherPrePost(YM,idVoucher,idInvLine))
				quit:idInvLine=""
				continue:(idInvLine=$$$InvoiceLine)
				
				set idTaxLine=""
				for {
					set idTaxLine=$order(^FINAPVoucherPrePost(YM,idVoucher,idInvLine,idTaxLine))
					quit:idTaxLine=""
						
					set objTaxLine=$get(^FINAPVoucherPrePost(YM,idVoucher,idInvLine,idTaxLine," ",1))
					
					set idAccount=$$$FINAPVoucherPrePostGLAccount(objTaxLine)
					set objGLAccount=""
					
					if idAccount'="" set objGLAccount=$get(^FINGLAccount(YM,idAccount,1)) 
					
					//SR14766
					set curTotal = -$$$FINAPVoucherPrePostAmount(objTaxLine)
					set lstRow = $listbuild("",$$FormatCurrency^COMTable($zabs(curTotal),""))
					$$$ReverseCheck
					
					do AddNode^COMTree(idVoucher_$$$COMMA_"Tax",
										idVoucher_$$$COMMA_"Tax"_$$$COMMA_idInvLine_$$$COMMA_idTaxLine,
										$$$FINGLAccountDescription(objGLAccount),
										$$$StrFINAPInvChargeAccount_$$$SPACE_idAccount,
										$select(pYKEY=(idVoucher_$$$COMMA_idInvLine_$$$COMMA_idTaxLine_$$$COMMA_" "):"oopen.gif",1:"oclose.gif"),
										"FINAPVoucherPrePost",
										"",
										pYKEY=(idVoucher_$$$COMMA_idInvLine_$$$COMMA_idTaxLine_$$$COMMA_" "),
										lstRow,
										"",
										"",
										idVoucher_$$$COMMA_idInvLine_$$$COMMA_idTaxLine_$$$COMMA_" ",
										strExpandString)
					}
				}
			}
		
		do StopTree^COMTree(1)
	
	}
 
	kill ^CacheTempExpandTree(YUSER,"Voucher")
	kill ^CacheTempCollapseTree(YUSER,"Voucher")
 
	quit
	
 
ComputeTaxLines(pidVoucher,pTaxLines)
    ;-------------------------------------------------------------------------------
    ; Compute all the tax lines in the supplier invoice.
    ;
    ; Returns:ptaxLines (by ref)
    ;
    ; History:
    ; 26-Oct-2005	JW			SR13743: COMTAX now has pblnTaxInc param.
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	new objVoucher,idTaxLocation,blnTaxInvoice,dteTransDate,idLine,objInvoiceLine
	new taxCode,strStatus,curAmount,blnInclTax
	
	set strStatus=$$$OK
	
	if $get(pidVoucher)'="" {
		set objVoucher=$get(^FINAPInv(YM,pidVoucher,1))
		
		set idTaxLocation=$$$FINAPInvTaxLocation(objVoucher)
		set blnTaxInvoice=$$$FINAPInvTaxInvoice(objVoucher)
		set dteTransDate=$$$FINAPInvEnteredDate(objVoucher)
		
		set blnInclTax = $$$FINAPInvLinesIncludeTax(objVoucher)
		
		set idLine=""
		for {
			set idLine=$order(^FINAPInvCharge(YM,pidVoucher,idLine))
			quit:idLine=""
 
			set objInvoiceLine=$get(^FINAPInvCharge(YM,pidVoucher,idLine,1))
			continue:$$$FINAPInvChargeIsOnCharge(objInvoiceLine)
			
			set taxCode = $$IsTaxable^COMTAX($$$FINAPInvChargeTaxCode(objInvoiceLine),blnTaxInvoice,,idTaxLocation)
			
			if +taxCode'=0 {
				;set pTaxLines(idLine) = taxCode_Y_$$$FINAPInvChargeAmountTaxEx(objInvoiceLine)		//SR13743
				
				set curAmount = $select(blnInclTax:$$$FINAPInvChargeAmount(objInvoiceLine),
												 1:$$$FINAPInvChargeAmountTaxEx(objInvoiceLine))
				set pTaxLines(idLine) = taxCode_Y_curAmount
				
			}
		}
		
		do CalculateTaxes^COMTAX(idTaxLocation,dteTransDate,.pTaxLines,,$$$FINAPInvTaxTotal(objVoucher),blnInclTax)	//SR13743
 
	}
		
	quit
	
	
GetVoucherLineTotal(pidVoucher,pidLine)
    ;-------------------------------------------------------------------------------
    ; Get a voucher's line total amount (inc tax)
    ;
    ; Returns:
    ;
    ; History:
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	new fltLineTotal,objLine,objVoucher
 
	set fltLineTotal=0
 
	if ($get(pidVoucher)'="")&&($get(pidLine)'="") {
		set objVoucher=$get(^FINAPInv(YM,pidVoucher,1))
		set objLine=$get(^FINAPInvCharge(YM,pidVoucher,pidLine,1))
		
		if $$$FINAPInvLinesIncludeTax(objVoucher) {
			set fltLineTotal=$$$FINAPInvChargeAmount(objLine)
		} else {
			set fltLineTotal=$$$FINAPInvChargeAmountTaxEx(objLine)
		}
	}
	
	quit fltLineTotal
	
 
StoreNode(pidNode,pstrDesc,pfltAmount,pidAccount="",pidGroup="") private
    ;-------------------------------------------------------------------------------
    ; Store a prepost node.
    ;
    ; Returns:
    ;
    ; History:
    ; 20-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	new objPrePost
	
	set objPrePost=""
	
	set $$$FINAPVoucherPrePostDescription(objPrePost)  =pstrDesc
	set $$$FINAPVoucherPrePostAmount(objPrePost)	   =pfltAmount
	set $$$FINAPVoucherPrePostGLAccount(objPrePost)	   =pidAccount
	set $$$FINAPVoucherPrePostAccountGroup(objPrePost) =pidGroup
 
	do Save^COMUtils("FINAPVoucherPrePost",pidNode,objPrePost,1)
 
	quit
	
ExpandAll()
    ;-------------------------------------------------------------------------------
    ; Expand the entire tree
    ;
    ; Returns:
    ;
    ; History:
    ; 06-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	set ^CacheTempExpandTree(YUSER,"Voucher")=$$$YES
	do ReloadForm^COMUtilForm()
 
	quit
	
	
CollapseAll()
    ;-------------------------------------------------------------------------------
    ; Collapse the entire tree
    ;
    ; Returns:
    ;
    ; History:
    ; 06-Jun-2005	Steve S		Created SR:12250
    ;-------------------------------------------------------------------------------
	set ^CacheTempCollapseTree(YUSER,"Voucher")=$$$YES
	do ReloadForm^COMUtilForm()
 
	quit
]]></Routine>
</Export>