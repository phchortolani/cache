<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESFarmaciaAltoCustoUtil" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESFarmaciaAltoCustoUtil
	#include COMSYS
	#include VARConst
	#include VARSESFarmaciaAltoCusto
	#include INConst
	quit
 
#define TRIM(%str) $zstrip(%str, "<>W")
 	//okv3
GetDataHoraAtual()
	quit $horolog
	//quit $zdatetimeh("11/10/2010 17:35:00")
 	//okv3
IsAcessoPermitido()
	new bolPermitido, objParams, strLocations, intLoop, strLocation
 
	set bolPermitido = $$$NO
	set bolPermitido = $$IsFarmaciaAltoCusto(YLOCATION) 
	quit bolPermitido
	
CadastraFarmaciaAltoCusto(pLocation)
	new strStatus, objParams, strLocations
	$$$VAR
	set strStatus = 1
	set objParams = $get(^VARSESParams(0,0,1))
	set strLocations = $$$VARSESParamsFarmaciaAltoCusto(objParams)
	set isFarmaciaAltoCusto = $$IsFarmaciaAltoCusto(pLocation)
	if ('isFarmaciaAltoCusto) {
		set $$$VARSESParamsFarmaciaAltoCusto(objParams) =
		 $$$VARSESParamsFarmaciaAltoCusto(objParams) _";"_pLocation
		set strStatus = $$$Save("VARSESParams",0,objParams,$$$YES)
	}
	quit strStatus
	
IsFarmaciaAltoCusto(pLocation)
	new blnAltoCusto, strLocations, objParams, listAltoCusto
	$$$VAR
	set blnEspecializada = 0
	
	set objParams = $get(^VARSESParams(0,0,1))
	set strLocations = $$$VARSESParamsFarmaciaAltoCusto(objParams)
	set listAltoCusto = $LISTFROMSTRING(strLocations,";")
	set blnAltoCusto = $LISTFIND(listAltoCusto,pLocation)
	
	if (blnAltoCusto > 0) {
		quit 1
	}
	else {
		quit 0
	}	
	
 	//okv3
GetMes(pDataReferencia="")
	if ($length(pDataReferencia) = 0) quit ""
 
	quit $extract($zdate(+pDataReferencia, 4), 4, 10)
	//okv3
DataPrimeiroIgualAoSegundoHC(pDataMes1, pDataMes2)
	set strMes1 = $$GetMes^VARSESFarmaciaAltoCustoUtil(pDataMes1)
	set strMes2 = $$GetMes^VARSESFarmaciaAltoCustoUtil(pDataMes2)
	quit strMes1=strMes2
	//okv3
DataPrimeiroMaiorQueSegundoHC(pDataMes1, pDataMes2)
	set booleano = 1
	set strMes1 = $$GetMes^VARSESFarmaciaAltoCustoUtil(pDataMes1)
	set strMes2 = $$GetMes^VARSESFarmaciaAltoCustoUtil(pDataMes2)
	if (($piece(strMes1,"/",2)) > ($piece(strMes2,"/",2))){
		set booleano = 1
	} elseif (($piece(strMes1,"/",2)) < ($piece(strMes2,"/",2))) {
		set booleano = 0
	} else {
		set booleano = (+$piece(strMes1,"/",1)) > (+$piece(strMes2,"/",1))
	}
	quit booleano
 	//okv3
GetDescricaoMes(pMes)
	new intMes
 
	if ($length(pDataReferencia) = 0) quit ""
 
	set intMes = $extract(pMes, 1, 2)
	quit $$$TRIM($piece($get(^WWW009(0,SPRACHE,30023,1)),",",intMes))
 	//okv3
GetDescricaoMesAbreviado(pDataReferencia)
	quit $extract($$GetDescricaoMes(pDataReferencia), 1, 3)
	//okv3
ConverteStatusPrescricao(pStrStatus)
	set intStatus = 0
	set strStatus = $ZCONVERT(pStrStatus,"U")
	
	if (strStatus = "SOLICITADO") set intStatus = $$$TreatmentStatusTRAKSolicitado
	if (strStatus = "AVALIADO") set intStatus = $$$TreatmentStatusTRAKAvaliado
	if (strStatus = "APROVADO") set intStatus = $$$TreatmentStatusTRAKAprovado
	if (strStatus = "REPROVADO") set intStatus = $$$TreatmentStatusTRAKReprovado
	if (strStatus = "DEVOLVIDO") set intStatus = $$$TreatmentStatusTRAKDevolvido
	quit intStatus
	//okv3
CompararPrescricao(pPai, pFilhos)
	// verificar pai (e registrar se houver alteracao)
	new status, obj
	set status = $$$OK
	
	if ($data(^VARSESTreatmentHC(0, pPai.NumeroPedidoAutorizacao, 1)) = 0) {
		// registrar inclusao
		// pPai.NumeroPedidoAutorizacao, 1, 0, 0, 0, $h
		//do RegistrarAlteracao^VARSESTreatmentHCHist(pPai.NumeroPedidoAutorizacao, 1, 0, 0, 0, $h)				
		
	} else {
		// verificar filho (e registrar onde houve alteracoes)
		set obj = ^VARSESTreatmentHC(0, pPai.NumeroPedidoAutorizacao, 1)
		if ($$$VARSESTreatmentHCStatus(obj)=$$$TreatmentStatusCancelado) {
			set status = $$$MakeStatus("O Número de Autorização já existe e está cancelado.")
		}
		if ($$$ISOK(status)) {
			set status = $$CompararPrescricaoFilhos(pFilhos)
		}
	}
	quit status
 	//okv3
CompararPrescricaoFilhos(pFilhos)
	new id, lista, total, i1, line, total2, i2, id2, status
	set status = $$$OK
	set id = pFilhos.NumeroPedidoAutorizacao 
	merge lista = pFilhos
	set total = pFilhos.Linhas.Count()
	set i1 = 1
	while (i1 <= total) {
		set line = pFilhos.Linhas.GetAt(i1)
		if (line.SeqRegistrado '= 0) {
			set id2 = line.SeqRegistrado
			
		} else {
			set i1 = $i(i1)
			continue
		}
		set total2 = line.Linhas1.Count() //$order(lista(i,""),-1)
		set i2 = 1
		while (i2 <= total2) {
			set line1 = line.Linhas1.GetAt(i2) //lista(i,i2)
			if ($data(^VARSESTreatmentHCLine1(0,id,i1,i2,1))) {
				set objTreatmentHCLine1 = ^VARSESTreatmentHCLine1(0,id,i1,i2,1)
				if (line1.Quantidade '= $$$VARSESTreatmentHCLine1Quantidade(objTreatmentHCLine1)){
					do RegistrarAlteracao^VARSESTreatmentHCHist( id, 7, i1, i2, line1.Quantidade, $h)
				}
			} else {
				//set status = $$$MakeStatus("Erro na alteração da prescricao '"_id_"',Linha'"_i1_"',Seq'"_i2_"'")
				//quit
			}
				
			set i2 = $i(i2)
		}
		set i1 = $i(i1)
	}
	quit status
	//okv3
ConverteProcedimentoSUSparaProduto(pCodigo, &pSaida)
	$$$VAR
	new status, indice, proximo, produto, tamanho, i
	set status = $$$OK
	if ($get(pCodigo)="") {
		set pSaida = ""	
		quit $$$MakeStatus("Codigo de procedimento vazio")
	}
	set indice = $order(^VARSESINARTRelacaos(YM, 1, 
		$$$CodigoExternoProcedimentoSUS, pCodigo, ""))
	for {
		if (indice = "") set status =  $$$MakeStatus("Não existe um produto cadastrado para procedimento """_pCodigo_""", por favor entre em contato com a Farmácia Central")
		quit:indice=""
		set proximo = $order(^INART(YM,""))
		
		set pSaida = ""
		for {
			quit:proximo=""
			set produto = ^INART(YM,proximo,1)
			set tamanho = ($length($$$INARTFREE4(produto),";"))
			for i= 1:1:tamanho {
				
				if ($piece(($$$INARTFREE4(produto)),";",i)	= indice) {
				set pSaida = proximo
				quit
				}
			}
			quit:pSaida'=""
			set proximo = $order(^INART(YM,proximo))
		}
		quit:pSaida'=""
		set indice = $order(^VARSESINARTRelacaos(YM, 1, 
		$$$CodigoExternoProcedimentoSUS, pCodigo, indice))
	}
	quit status
	//okv3
	/// Busca um Profissional de saude pelo número do 
	/// CRM e o tipo de documento (CRM ou CRO, via d regra)
BuscaProfissionalPorNumeroDocumento(pTipoDoc, pNumeroDoc)
	quit $order(^MEDProviders(YM, 100, pNumeroDoc, ""))
	//okv3
AtualizaSituacaoEnvio(pidTreatmentHC, pstrMesFechamento, pstrStatusEnvio)
	new idTreatmentHCLine, idTreatmentHCLine1, objTreatmentHCLine1,
		strMesFechamentoLinha, strStatus
 
	set strStatus = $$$OK
	set idTreatmentHCLine = $order(^VARSESTreatmentHCLine1(YM, pidTreatmentHC, ""))
	while ($length(idTreatmentHCLine) > 0) {
		set idTreatmentHCLine1 = $order(^VARSESTreatmentHCLine1(YM, pidTreatmentHC,
			idTreatmentHCLine, ""))
		while ($length(idTreatmentHCLine1) > 0) {
			set objTreatmentHCLine1 = ^VARSESTreatmentHCLine1(YM, pidTreatmentHC,
				idTreatmentHCLine, idTreatmentHCLine1, 1)
 
			set strMesFechamentoLinha = $$GetMes^VARSESFarmaciaAltoCustoUtil(
				$$$VARSESTreatmentHCLine1DataReferencia(objTreatmentHCLine1))
				
			if (strMesFechamentoLinha = pstrMesFechamento) {
				// incrementar o numero de tentativas de envio
				set $$$VARSESTreatmentHCLine1NumeroTentativasEnvio(objTreatmentHCLine1) = +$$$VARSESTreatmentHCLine1NumeroTentativasEnvio(objTreatmentHCLine1) + 1
				
				if (+pstrStatusEnvio = 1) {
					set $$$VARSESTreatmentHCLine1Enviado(objTreatmentHCLine1) = 1
					set $$$VARSESTreatmentHCLine1ErroNoEnvio(objTreatmentHCLine1) = ""
				}
				else {
					set $$$VARSESTreatmentHCLine1ErroNoEnvio(objTreatmentHCLine1) =
						$extract(pstrStatusEnvio, 2, $length(pstrStatusEnvio))
				}
				set $$$VARSESTreatmentHCLine1DataHoraUltimoEnvio(objTreatmentHCLine1) = $horolog
				set strStatus = $$$Save("VARSESTreatmentHCLine1",pidTreatmentHC_$$$COMMA_idTreatmentHCLine_$$$COMMA_idTreatmentHCLine1,objTreatmentHCLine1,$$$YES)
				if ('$$$ISOK(strStatus)) {
					set $zerror = "Erro ao alterar status da prescrição => "_
						$$DecodeError^COMUtilError(strStatus)
					//zquit 1 goto @$ztrap
					
				}
			}
			if ('$$$ISOK(strStatus)) { quit }
 
			set idTreatmentHCLine1 = $order(^VARSESTreatmentHCLine1(YM,
				pidTreatmentHC, idTreatmentHCLine, idTreatmentHCLine1))
		}
 		if ('$$$ISOK(strStatus)) { quit }
		set idTreatmentHCLine = $order(^VARSESTreatmentHCLine1(YM, pidTreatmentHC,
			idTreatmentHCLine))
	}

	//set strStatus = $$UpdateStatus^VARSESTreatmentHCLine1(pidTreatmentHC)

	quit strStatus

]]></Routine>
</Export>