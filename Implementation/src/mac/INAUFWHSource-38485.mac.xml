<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INAUFWHSource" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INAUFWHSource
#include COMSYS
#include INConst
#include %occInclude
 
ListStorages(YI,ART,AUF,POS,pobjINVORG)
	;-------------------------------------------------------------------------------
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 22-Oct-2008	GRF		SR16031: prefixes
	; 14-Oct-2008	PPP		SR16031: Created
	;-------------------------------------------------------------------------------
	new arrLocn,BET,idLocn,idRefillStore,objItem,objLine,objResultSet
 
	set BET=""     ; location
 
	if $$$INVORGAccessOtherItemLocns(pobjINVORG)'=$$$YES SET BET=YLOCATION
 
 	set objResultSet = ##class(%Library.ResultSet).%New()
	if objResultSet.Prepare("SELECT Location FROM alSOH.dStockBalance WHERE Item = ?") {
		if objResultSet.Execute(ART) {
			while objResultSet.Next() {
				set idLocn = objResultSet.Data("Location")
				if idLocn'="" {
					set arrLocn(idLocn)=""
				}
			}
		}
	}
 
	set objLine = $get(^INAUFP(YM,AUF,POS,1))
	set idRefillStore = $$$INAUFPDefaultLocationForStockRe(objLine)
	set objItem       = ##class(alINV.iUINV).GetItem(ART)
 
	if BET'="" {
		do ListStoragesForLocn(YI,objItem,BET,idRefillStore)
	
	} else {
		set idLocn = ""
		for {
			set idLocn = $order(arrLocn(idLocn))
			quit:idLocn=""
			
			do ListStoragesForLocn(YI,objItem,idLocn,idRefillStore)
		}
	}
 
	quit
 
ListStoragesForLocn(YI,pobjItem,pidLocn,pidRefillStore)
	;-------------------------------------------------------------------------------
	; List the Storages For a Location
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Jan-2009	GRF		SR16317: Revise "Bundle" display; internationalise
	; 22-Oct-2008	GRF		SR16031: unnecessary "if QOH<=0" branch (which should
	; 							have been "else") merged as common code
	; 14-Oct-2008	PPP		SR16031: Created
	;-------------------------------------------------------------------------------
	new loop,lstBundleStocks,objBundleStock,objLocn,strClass
	
	if (pidRefillStore="") || ((pidRefillStore'="") && (pidRefillStore=pidLocn)) {
		set objLocn = ##class(alLOC.iULOC).GetLocation(pidLocn)
		set lstBundleStocks = ##class(alDRP.iDRP).SourceStock(pobjItem,objLocn)
 
		for loop=1:1:lstBundleStocks.Count() {
			set objBundleStock = lstBundleStocks.GetAt(loop)
			set strClass=""
 
			if objBundleStock.QtyOnHand '> 0  {
				set strClass=" CLASS=""warning"""
			}
 
			write "<INPUT TYPE=""CHECKBOX"" NAME=""YFUNCT"" VALUE="""_YI_"|"_objBundleStock.Storage.Code_"|||["_objBundleStock.%Id()_"]"_""" onClick=""window.location='"
			if objBundleStock.QtyOnHand > 0 write YAKTION_"EP=WWWFORM&YFORM="_YFORM_"&YFUNCT='+this.value+'"
			do ^WWWCGI
			write "'"">"
			
		;	write "<LABEL"_strClass_">From Stock("_objBundleStock.Storage.Location.Code_" / "_objBundleStock.Storage.Code_" / "_objBundleStock.Bundle.%Id()_" / "_objBundleStock.QtyOnHand_")</LABEL></INPUT><BR/>" ; SR16317
			;  "From Stock"
			write "<LABEL"_strClass_">"_$$^WWWTEXT(32937)_" ("_
			           objBundleStock.Storage.Location.Code_" / "_
			           objBundleStock.Storage.Code_") "_
			           objBundleStock.QtyOnHand_"</LABEL></INPUT><BR/>"
 
		}
	}
 
	quit	
]]></Routine>
</Export>