<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="VARImportacaoCadastroAgendaMedica" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VARImportacaoCadastroAgendaMedica
	;
  #include COMSYS
  #include VARConst
  #include MEDConst
  #include TemConst
  #include INConst
	;
LimparArquivosAnteriores()
	Kill ^TempMEDProviderAgenda
	Return $$$OK 
	;
Contador()
	Set DataHora = $Now()
	Set contador = +DataHora + $Piece($Piece(DataHora,",",2),".",1) + $Piece($Piece(DataHora,",",2),".",2) + $Random(100000)
	Quit contador	
	;
ProcessarArquivo()
	$$$VAR
	Set YM = 0
	Set Y = "~"
	Set contador = ""
	For {
		Set contador = $Order(^TempMEDProviderAgenda(0,contador))
		Quit:contador=""
		;
		Set objTempMEDProviderAgenda = $Get(^TempMEDProviderAgenda(0,contador,1))
		;
		Set codProfissional = $$$TempMEDProviderAgendaProfissional(objTempMEDProviderAgenda)
		Set codUnidade			= $$$TempMEDProviderAgendaUnidade(objTempMEDProviderAgenda)
		Set codGrupoAgend 	= $$$TempMEDProviderAgendaGrupoAgendamento(objTempMEDProviderAgenda)
		Set tempoAtend 			= $$$TempMEDProviderAgendaTempoAtendimento(objTempMEDProviderAgenda)
		Set restGeral 			= $$$TempMEDProviderAgendaRestricaoGeral(objTempMEDProviderAgenda)
		Set codLocal 				= $$$TempMEDProviderAgendaLocal1(objTempMEDProviderAgenda)
		Set permEncaixe 		= $$$TempMEDProviderAgendaPermiteEncaixe(objTempMEDProviderAgenda)
		Set qtdeEncaixe 		= $$$TempMEDProviderAgendaQtdeEncaixe(objTempMEDProviderAgenda)
		Set dtInicioAtend 	= $$$TempMEDProviderAgendaDataInicioAtendimento(objTempMEDProviderAgenda)
		Set hrInicioAtend 	= $$$TempMEDProviderAgendaHoraInicioAtendimento(objTempMEDProviderAgenda)
		Set hrFinalAtend 		= $$$TempMEDProviderAgendaHoraFinalAtendimento(objTempMEDProviderAgenda)
		Set repeticao 			= $$$TempMEDProviderAgendaRepeticao(objTempMEDProviderAgenda)
		Set nosDias 				= $$$TempMEDProviderAgendaNosDias(objTempMEDProviderAgenda)
		Set dtFinalAtend 		= $$$TempMEDProviderAgendaDataFinalAtendimento(objTempMEDProviderAgenda)
		Set hrIntervInicio 	= $$$TempMEDProviderAgendaHoraIntervaloInicio(objTempMEDProviderAgenda)
		Set hrIntervFim 		= $$$TempMEDProviderAgendaHoraIntervaloFim(objTempMEDProviderAgenda)
		;	
		Set $Piece(pRegistro,"~",1) = codProfissional
		Set $Piece(pRegistro,"~",3) = codUnidade
		Set $Piece(pRegistro,"~",5) = codGrupoAgend
		Set $Piece(pRegistro,"~",7) = tempoAtend
		Set $Piece(pRegistro,"~",8) = restGeral
		Set $Piece(pRegistro,"~",9) = codLocal
		Set $Piece(pRegistro,"~",11) = permEncaixe
		Set $Piece(pRegistro,"~",12) = qtdeEncaixe
		Set $Piece(pRegistro,"~",13) = $ZDate(dtInicioAtend,4)
		Set $Piece(pRegistro,"~",14) = hrInicioAtend
		Set $Piece(pRegistro,"~",15) = hrFinalAtend
		Set $Piece(pRegistro,"~",16) = repeticao
		Set $Piece(pRegistro,"~",17) = nosDias
		Set $Piece(pRegistro,"~",18) = $Select(dtFinalAtend="":"",1:$ZDate(dtFinalAtend,4))
		;
		Set strStatus = $$ValidarConflito("")
		If (strStatus '= 1) Quit 
		;
		Set codProfissional = $$$TempMEDProviderAgendaProfissional(objTempMEDProviderAgenda)
		Set codUnidade			= $$$TempMEDProviderAgendaUnidade(objTempMEDProviderAgenda)
		Set codGrupoAgend 	= $$$TempMEDProviderAgendaGrupoAgendamento(objTempMEDProviderAgenda)
		Set tempoAtend 			= $$$TempMEDProviderAgendaTempoAtendimento(objTempMEDProviderAgenda)
		Set restGeral 			= $$$TempMEDProviderAgendaRestricaoGeral(objTempMEDProviderAgenda)
		Set codLocal 				= $$$TempMEDProviderAgendaLocal1(objTempMEDProviderAgenda)
		Set permEncaixe 		= $$$TempMEDProviderAgendaPermiteEncaixe(objTempMEDProviderAgenda)
		Set qtdeEncaixe 		= $$$TempMEDProviderAgendaQtdeEncaixe(objTempMEDProviderAgenda)
		Set dtInicioAtend 	= $$$TempMEDProviderAgendaDataInicioAtendimento(objTempMEDProviderAgenda)
		Set hrInicioAtend 	= $$$TempMEDProviderAgendaHoraInicioAtendimento(objTempMEDProviderAgenda)
		Set hrFinalAtend 		= $$$TempMEDProviderAgendaHoraFinalAtendimento(objTempMEDProviderAgenda)
		Set repeticao 			= $$$TempMEDProviderAgendaRepeticao(objTempMEDProviderAgenda)
		Set nosDias 				= $$$TempMEDProviderAgendaNosDias(objTempMEDProviderAgenda)
		Set dtFinalAtend 		= $$$TempMEDProviderAgendaDataFinalAtendimento(objTempMEDProviderAgenda)
		Set hrIntervInicio 	= $$$TempMEDProviderAgendaHoraIntervaloInicio(objTempMEDProviderAgenda)
		Set hrIntervFim 		= $$$TempMEDProviderAgendaHoraIntervaloFim(objTempMEDProviderAgenda)
		;
		If (repeticao = "D") {
			Set repeticao = 1
		}ElseIf (repeticao = "S") {
			Set repeticao = 2
		}ElseIf (repeticao = "M") {
			Set repeticao = 3
		}Else{
			Set repeticao = 0
		}
		;
		Set nosDias = $Replace(nosDias,"DOM",0),nosDias = $Replace(nosDias,"SEG",1)
		Set nosDias = $Replace(nosDias,"TER",2),nosDias = $Replace(nosDias,"QUA",3)
		Set nosDias = $Replace(nosDias,"QUI",4),nosDias = $Replace(nosDias,"SEX",5)
		Set nosDias = $Replace(nosDias,"SAB",6)
		;
		If (",1,S,SIM,"[(","_$ZConvert(permEncaixe,"U")_",")) {
			Set permEncaixe = 1	
			If (+qtdeEncaixe <= 0) Set qtdeEncaixe = 1
		}Else{
			Set permEncaixe = 0
			Set qtdeEncaixe = 0
		}
		;
		If (dtFinalAtend = "") Set dtFinalAtend = dtInicioAtend
		;
		Set pIdAgenda = $Order(^MEDProviderAgenda(YM, codProfissional, ""),-1) + 1	
		Set objAgenda = $Get(^MEDProviderAgenda(YM, pCodProfissional, pIdAgenda, 1))
		;
		Set $$$MEDProviderAgendaUnidade(objAgenda) 						= codUnidade
		Set $$$MEDProviderAgendaGrupoAgendamento(objAgenda) 	= codGrupoAgend
		Set $$$MEDProviderAgendaTempodeAtendimento(objAgenda) = $ZTimeH(tempoAtend,2)
		Set $$$MEDProviderAgendaRestricaoGeral(objAgenda) 		= restGeral
		Set $$$MEDProviderAgendaLocal1(objAgenda) 						= codLocal
		Set $$$MEDProviderAgendaPermiteEncaixe(objAgenda) 		= permEncaixe
		Set $$$MEDProviderAgendaQtdeEncaixe(objAgenda) 				= qtdeEncaixe
		Set $$$MEDProviderAgendaDataInicial(objAgenda) 				= dtInicioAtend
		Set $$$MEDProviderAgendaHoraInicial(objAgenda) 				= $ZTimeH(hrInicioAtend,2)
		Set $$$MEDProviderAgendaHoraFinal(objAgenda) 					= $ZTimeH(hrFinalAtend,2)
		Set $$$MEDProviderAgendaIntervaloInicio(objAgenda) 		= $ZTimeH(hrIntervInicio,2,"")
		Set $$$MEDProviderAgendaIntervaloFim(objAgenda) 			= $ZTimeH(hrIntervFim,2,"")
		Set $$$MEDProviderAgendaRepeticao(objAgenda) 					= repeticao
		Set $$$MEDProviderAgendaRepetiraCada(objAgenda) 			= 0
		Set $$$MEDProviderAgendaNosDias(objAgenda) 						= nosDias
		Set $$$MEDProviderAgendaQtdeOcorrencia(objAgenda) 		= 0
		Set $$$MEDProviderAgendaCriadoEm(objAgenda) 					= $Horolog
		Set $$$MEDProviderAgendaCriadoPor(objAgenda) 					= YBED
		Set xDataInicial 																			= profDataInicio
		Set $$$MEDProviderAgendaDataFinal(objAgenda) 					= dtFinalAtend
		;
		Set strStatus = $$$Save("MEDProviderAgenda", pCodProfissional_$$$COMMA_pIdAgenda, objAgenda, $$$YES)
		If ('$$$ISERR(strStatus)) {
			Set strStatus = ##Class(VAR.CSP.VARCadProfissional).GerarAgenda(pCodProfissional, pIdAgenda, xDataInicial, YBED)
		}
	}
	Return strStatus
	;
ValidarConflito(pValorEntrada="")
	Set xRegistro = pRegistro ;$Piece(pRegistro,"~",2,$Length(pRegistro,"~"))

	Set strStatus 					= $$$OK
	Set dataAtual 					= +$Horolog
	Set pCodProfissional 		= $Piece(xRegistro,"~",1)
	Set pSequenciaAgenda 		= ""
	Set pTipoRepeticao			= $Piece(xRegistro,"~",18)
	Set pNosDias						= $ZConvert($Piece(xRegistro,"~",19),"U")
	Set pHoraInicio					= $ZTimeH($Piece(xRegistro,"~",14),2,"")
	Set pHoraFim						= $ZTimeH($Piece(xRegistro,"~",15),2,"")
	Set pTempoAtendimento 	= $ZTimeH($Piece(xRegistro,"~",7),2,"")
	Set pRestricaoGeral			= $ZConvert($Replace($Piece(xRegistro,"~",8),",",";"),"U")
	;
	If (pHoraInicio = "" || (pHoraFim = "" || pTempoAtendimento = "")) Quit "Erro;"
	If (pCodProfissional=""||('$Data(^MEDProvider(0,pCodProfissional)))) Quit "Erro;"	
	;
	If (pTipoRepeticao = "D")	{
		Set pTipoRepeticao = 1
	}ElseIf (pTipoRepeticao = "S") {
		Set pTipoRepeticao = 2
	}ElseIf (pTipoRepeticao = "M") {
		Set pTipoRepeticao = 3
	}Else{
		Set pTipoRepeticao = 0
	}
	;
	Set pNosDias = $Replace(pNosDias,"DOM",0),pNosDias = $Replace(pNosDias,"SEG",1)
	Set pNosDias = $Replace(pNosDias,"TER",2),pNosDias = $Replace(pNosDias,"QUA",3)
	Set pNosDias = $Replace(pNosDias,"QUI",4),pNosDias = $Replace(pNosDias,"SEX",5)
	Set pNosDias = $Replace(pNosDias,"SAB",6)
	;
	;
	Set profDataInicio 	= $ZDateH($Piece(xRegistro,"~",13),4,,,,,,,"")
	Set profDataFinal 	= $ZDateH($Piece(xRegistro,"~",20),4,,,,,,,"")
	;
	Set dataInicial 	= profDataInicio
	Set dataFinal			= profDataFinal
	Set horaInicial 	= pHoraInicio
	Set horaFinal 		= pHoraFim
	Set tempoAtend 		= pTempoAtendimento
	Set tipoRepeticao = pTipoRepeticao
	Set repetirCada 	= 0
	Set nosDias				= pNosDias
	;
	Set conRepeticao	= ""
	Set flagPrimeira	= 1
	Set mesAtual 			= +$Piece($ZDate(dataInicial,4),"/",2)
	;
	Set profUnidade		= $Piece(xRegistro,"~",3)
	Set profLocal			= $Piece(xRegistro,"~",9)
	If (profUnidade=""||('$Data(^WWW0121(0,0,profUnidade)))) Quit "Erro;"	
	If (profLocal=""||('$Data(^VARSalasAtendimentos(0,profLocal)))) Quit "Erro;"	
	If ($$$VARSalasAtendimentosUnidade(^VARSalasAtendimentos(0,profLocal,1)) '= profUnidade) Quit "Erro;"
	;	
	Set countSala = 0
	&SQL(
		Select Count(*) Into :countSala From SQLUser.SQLUser.VARGrupoAgendamentoLocAtend
		Where Company = 0 And Unidade = :profUnidade And Sala = :profLocal
	)
	If (countSala > 0) {
		Set strStatus 	= '$$$OK
		Set strMensagem = "Sala/Leito já cadastrado para outro procedimento."
		Quit
	}
	;
	If (pSequenciaAgenda '= "") {
		Set objeto = $Get(^MEDProviderAgenda(YM, pCodProfissional, pSequenciaAgenda, 1))
		If (profDataFinal < $$$MEDProviderAgendaDataFinal(objeto)) {
			Quit
		}Else{
			Set dataInicial = $$$MEDProviderAgendaDataFinal(objeto) + 1
		}	
	}
	;
	For data = dataInicial : 1 : dataFinal {
		If (tipoRepeticao = 2) { ;Repetição Semanal
			If (repetirCada > 0 && ($ZDate(data,10) = 0)) {
				Set conRepeticao = conRepeticao + 1
				If (conRepeticao <= repetirCada && (flagPrimeira = 0)) {
					Set data = data + 6
					Continue	
					Set conRepeticao = 0
				}
				Set flagPrimeira = 0
				Set conRepeticao = 0
			}
			If ((nosDias '= "") && ((";"_nosDias_";") '[ (";"_$ZDate(data,10)_";"))) Continue 
		}
		If (tipoRepeticao = 3) { ;Mensal
			If (repetirCada > 0 && (+$Piece($ZDate(data,4),"/",2) '= mesAtual)) {
				Set conRepeticao = conRepeticao + 1
				If (conRepeticao <= repetirCada) {
					Set data = $$GetEndOfMonth^COMUtilDate(data)
					Continue	
				}
				Set conRepeticao	= 0
			}
		}
		
		Set mesAtual = +$Piece($ZDate(data,4),"/",2)
		For hora = horaInicial : tempoAtend : (horaFinal-tempoAtend) {
			;
			Set meuSQL = "Select DatadeAtendimento From SQLUser.MEDProviderAgendaHorario "
			Set meuSQL = meuSQL _ "Where Company = 0 And CodigoProfissional = '"_pCodProfissional_"' "
			Set meuSQL = meuSQL _ "And DatadeAtendimento = '"_data_"' " 
			Set meuSQL = meuSQL _ "And ( HoradeAtendimento BetWeen "_hora_" And "_(hora+(tempoAtend))_" "
			Set meuSQL = meuSQL _ "Or (HoradeAtendimento+(TempodeAtendimento-1)) BetWeen "_hora_" And "_(hora+tempoAtend)_")"
			Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
			Do rSet.%Next()
			If (rSet.%ROWCOUNT '= 0) {
				Set strStatus 	= '$$$OK
				Set strMensagem = "Dados informado irá gerar conflito para o dia "_$ZDate(rSet.%Get("DatadeAtendimento"),4)_", favor analisar."
				Quit
			}					
			;
			Set meuSQL = "Select Top 1 Hor.CodigoProfissional "
			Set meuSQL = meuSQL _ "From SQLUser.MEDProviderAgendaHorario As Hor, "
			Set meuSQL = meuSQL _ "SQLUser.MEDProviderAgenda As Age "
			Set meuSQL = meuSQL _ "Where Hor.Company = 0 And Age.Company = 0 "
			Set meuSQL = meuSQL _ "And Age.CodigoProfissional = Hor.CodigoProfissional "
			Set meuSQL = meuSQL _ "And Age.Sequencia = Hor.ReferenciaPai "
			Set meuSQL = meuSQL _ "And Hor.DatadeAtendimento = '"_data_"' " 
			Set meuSQL = meuSQL _ "And (Hor.HoradeAtendimento BetWeen "_hora_" And "_(hora+(tempoAtend))_" "
			Set meuSQL = meuSQL _ "Or (Hor.HoradeAtendimento+(Hor.TempodeAtendimento-1)) BetWeen "_hora_" And "_(hora+tempoAtend)_")"
			Set meuSQL = meuSQL _ "And Age.Local1 = '"_profLocal_"' "
			Set rSet = ##class(%SQL.Statement).%ExecDirect("",meuSQL)
			Do rSet.%Next()
			If (rSet.%ROWCOUNT '= 0) {
				Set strStatus 	= '$$$OK
				Set strMensagem = "Local já reservado para o Profissional "_$$SQLGetProviderName^VARSQL(rSet.%Get("CodigoProfissional"))_", favor analisar."
				Quit
			}					
			Quit:strStatus'=$$$OK
		}
		Quit:strStatus'=$$$OK
	}
	If (strStatus '= $$$OK) {
		Quit "Erro;-"_strMensagem
	}
	Return $$$OK]]></Routine>
</Export>