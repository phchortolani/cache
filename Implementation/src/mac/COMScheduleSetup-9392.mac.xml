<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMScheduleSetup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMScheduleSetup
	
AfterDataFields
	;-------------------------------------------------------------------------------
	; Called By : Form COMScheduleSetup
	;-------------------------------------------------------------------------------
	if YSEITE=1 {
		do MessageQuery
	
	} elseif YSEITE=2 {
		do AfterDataField^COMSchedule(7,"COMScheduleMessage","PurgeMessages^COMScheduleSetup(7)")
	}
	quit
	
	
MessageQuery
	new Query

	set Query("Name")="Many"
	set Query("Class")="COMScheduleMessage"
	set Query("Col",1)="D~3~L"                     	; Message Created -> links to schedule entry
	set Query("Col",2)="D~12~L~R~COMSchedule~Sched"	; Schedule description -> links to schedule entry
	set Query("Col",3)="D~1~L"                     	; Message -> links to schedule entry
	set Query("Col",4)="D~2~L"                     	; Time Taken -> links to schedule entry
	set Query("Ref","Sched")="^COMSchedule(0,$$Data(.id,""P~1"",,1),1)"
	set Query("Link")="COMSchedule~P~1"
	set Query("Form")=YFORM
	set Query("Loop")="MessageQueryLoop^COMScheduleSetup"
	set Query("Get")="set id=$get(^COMScheduleMessage(0,id(1),id(2),1))"
	set VORG=""
	do Query^COMQuery(.Query,.VORG)
	quit
	
	
MessageQueryLoop(&Query,&Storage,&VORG)
	;-------------------------------------------------------------------------------
	; 
	; Storage = "^mtemp(""Query"","_$job_","""_QueryName_""")"
	; 
	; History:
	; 05-Apr-2007	GRF		SR15387: use intCount rather than count.
	;-------------------------------------------------------------------------------
	new intCount,dteMsgDate,id
	
	kill ^mtemp("Query",$job)
	set intCount   = 0
	set dteMsgDate = ""
	for {
		set dteMsgDate = $order(^COMScheduleMessages(0,1,dteMsgDate),-1)
		quit:dteMsgDate=""
		
		set id(1) = ""
		for {
			set id(1) = $order(^COMScheduleMessages(0,1,dteMsgDate,id(1)))
			quit:id(1)=""
			
			set id(2) = ""
			for {
				set id(2) = $order(^COMScheduleMessages(0,1,dteMsgDate,id(1),id(2)))
				quit:id(2)=""
				
				set intCount = intCount+1
				merge @Storage@(intCount) = id
			}
		}
	}
	quit intCount
	
	
PurgeMessages(plngDaystoRetain)
	;-------------------------------------------------------------------------------
	; Purge schedule messages.
	;
	; Called By : AfterDataFields^COMHousekeeping, AfterDataFields^COMScheduleSetup
	;             
	; Returns:Status(string)
	;
	; History:
	; 16-Nov-2011	shobby	SR17935: Non-existent variable Y0 replaced with 0
	; 05-Apr-2007	GRF		SR15387: change plngDaystoPurge to plngDaystoRetain to
	; 						reflect actual use; use idSchedule,intMsgNo rather than id array.
	; 22-Feb-2005	Paul K	Reduce incidence of calling WWWVAR
	;-------------------------------------------------------------------------------
	new dteMsgDate,dtePurgeDate,idCompany,idSchedule,intCount,intMsgNo
	
	if $get(Y)="" do ^WWWVAR
	set dtePurgeDate = $horolog-plngDaystoRetain
	set intCount = 0
	
	set dteMsgDate = ""
	for {
		set dteMsgDate = $order(^COMScheduleMessages(0,1,dteMsgDate))
		quit:dteMsgDate=""
		quit:dteMsgDate>dtePurgeDate
		
		set idSchedule = ""
		for {
			set idSchedule = $order(^COMScheduleMessages(0,1,dteMsgDate,idSchedule)) ;SR17935 
			quit:idSchedule=""
			
			set intMsgNo = ""
			for {
				set intMsgNo = $order(^COMScheduleMessages(0,1,dteMsgDate,idSchedule,intMsgNo))
				quit:intMsgNo=""
				
				set intCount = intCount+1
				do ^WWWKILL("COMScheduleMessage",idSchedule_","_intMsgNo)
			}
		}
	}
	quit $$DecodeError^COMUtils($listbuild("Com00013",intCount))  ; "%1 message logs purged"
	
]]></Routine>
</Export>