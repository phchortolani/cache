<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINSYSAccountGroup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINSYSAccountGroup
	#Include FINConst
	#Include FIN
	#Include COMConst
	
	
GetAccounts(idExpenseGroup)
	;------------------------------------------------------------------------------
	;
	; History
	; 08-Jul-2003		shobby		Handle multiple accounts in a group (TR005485)
	; 
	;------------------------------------------------------------------------------
	;
	new objExpenseGroup,strAccountKey,lstAccounts,idAccount,strKey1,strKey2
	new i,intLength,strAccountKeyAll
	set lstAccounts=""
	
	set objExpenseGroup=$get(^FINSYSAccountGroup(YM,idExpenseGroup,1))
	set strAccountKeyAll=$$$FINSYSAccountGroupAccountKey(objExpenseGroup)
	;
	if strAccountKeyAll'="" {
		set intLength=$length(strAccountKeyAll,";")
		for i=1:1:intLength {
			set strAccountKey=$piece(strAccountKeyAll,";",i)
			if strAccountKey'="" {
				if '$find(strAccountKey,"%") {
					if $data(^FINGLAccount(YM,strAccountKey,1)) set lstAccounts=lstAccounts_$listbuild(strAccountKey)
				} else {  ;account key contains a wild card. find all accounts that match wild card.
					set strKey1=$piece(strAccountKey,"%",1)
					set strKey2=$piece(strAccountKey,"%",2)
					set idAccount=strKey1
					for {
						set idAccount=$order(^FINGLAccount(YM,idAccount))
						quit:$extract(idAccount,1,$length(strKey1))'=strKey1
						quit:idAccount=""
						if ($extract(idAccount,$length(idAccount)-$length(strKey2)+1,$length(idAccount))=strKey2)!(strKey2="") set lstAccounts=lstAccounts_$listbuild(idAccount)
					}
				}
			}
		}
	}
	quit lstAccounts
 
 
OnBeforeDelete(pYKEY) // 1-Mar-2005 JW: Currently not in use
	;-------------------------------------------------------------------------------
	; Determines whether an Account Group can be deleted based on whether it is used
	; in Customer Banking or Supplier Payments.
	;
	; Notes: (Do not remove the following notes, used by 'Structure')
	; 		**Delete Check** FINARBankAccount - Allow broken links.
	; 		**Delete Check** FINAPPaymentAccount - Allow broken links.
	; 		**Delete Check** FINGLDistribution - Allow broken links.
	; 		
	; Returns:
	; 
	; History:
	; 10-Mar-2004		shobby		No testing required before deleting FINSYSAccountGroups.  Happy to have dead end links in the data. (Discussion with SR)
	; 08-Mar-2004		shobby		Moved code into a standard subroutine.
	; 08-Mar-2004		shobby		Index test requires the pYKEY to be in Upper Case.
	; 08-Mar-2004		shobby		Check for any Distributions that use this Account group.
	; 03-Dec-2003		shobby		Creation (TR006513)
	;-------------------------------------------------------------------------------
 	;
	;quit $$CheckLinks^FINSYS(pYKEY,$lb("FINARBankAccount","FINAPPaymentAccount","FINGLDistribution"),"FINSYSAccountGroup")
	quit $$$OK
 
 
OnAfterSave(pYKEY) // 1-Mar-2005 JW: Currently not in use
    ;-------------------------------------------------------------------------------
    ; Code to run after saving a record.
    ;
    ; Returns:
    ;
    ; History:
    ; 18-May-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
	;
	;do UpdateAccounts(pYKEY)
	quit $$$OK
 
OnBeforeSave(pYKEY,pYFELD="")
    ;-------------------------------------------------------------------------------
    ; Get the grid to save its contents
    ; 
    ; Also: (taken from LoadLines^FINSYSAccountGroupLine)
    ; Synchronises the accounts list on FINSYSAccountGroup with the FINSYSAccountGroupLine
    ; class.  FINSYSAccountGroupLine is a new class to supercede this property which is
    ; still maintained for backwards compatibility.
    ; 
    ; Returns:
    ;
    ; History:
    ; 28-Feb-2005	JW		SR11405: Created
    ;-------------------------------------------------------------------------------
	new strStatus,arrAccounts
	
	quit:pYKEY=""
	
	set strStatus=$$$GRIDSave(pYKEY)
	
	if $$$ISOK(strStatus) {
		merge arrAccounts = ^FINSYSAccountGroupLine(YM,pYKEY)
		set $$$FINSYSAccountGroupAccountKey(pYFELD) = $$ArrayToString^COMUtilStr(.arrAccounts,";")
	}
	
	if $$$ISOK(strStatus) {
		set Q=$$$QSave
	} else {
		set Q=$$$QDontSave
	}
	
	quit
 
 
 
BeforeButtonLine() // 1-Mar-2005 JW: Currently not in use
    ;-------------------------------------------------------------------------------
    ; Code to run Before the button line is displayed
    ;
    ; Returns:
    ;
    ; History:
    ; 18-May-2004   Shobby   Created (TR007710)
    ;-------------------------------------------------------------------------------
	;
	set YOPTION=$$LargeNumberOfAccounts()
	quit $$$OK
 
 
LargeNumberOfAccounts(pintNumber) // 1-Mar-2005 JW: Currently not in use
    ;-------------------------------------------------------------------------------
    ; Determines whether the number
    ;
    ; Returns:
    ;
    ; History:
    ; 20-May-2004   Shobby   Created (TR007710)
    ;-------------------------------------------------------------------------------
 
	quit $$GetNumberOfTransactionAccounts^FINGLAccount()>500
 
 
Test(pblnFlag=$$$YES)
    ;-------------------------------------------------------------------------------
    ; Used to create and remove dummy accounts
    ;
    ; Returns:
    ;
    ; History:
    ; 20-May-2004   Shobby   Created (TR007710)
    ;-------------------------------------------------------------------------------
	;
	new id,i,objFINGLAccount
	if pblnFlag {
		set objFINGLAccount=$get(^FINGLAccount(YM,"10010.00.00",1))
		for i=1:1:1000 {
			set id="99999.999."_i
			do Save^FINSYS("FINGLAccount",id,objFINGLAccount)
		}
	} else {
		set id=""
		for {
			set id=$order(^FINGLAccount(YM,id))
			quit:id=""
			if $extract(id,1,9)="99999.999" {
				do KILL^FINSYS("FINGLAccount",id)
			}
		}
	}
	quit
 
 
AfterDataFields(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Code to run after saving a record.
    ;
    ; Returns:
    ;
    ; History:
    ;  2-Nov-2004	JW		SR10590: Added parameter to ShowLines
    ; 18-May-2004   Shobby	Created
    ;-------------------------------------------------------------------------------
	
	;do ShowLines(pYKEY,YOPTION)
	do LoadGrid(pYKEY)
	
	quit $$$OK
	
 
LoadGrid(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
	; 05-Dec-2008	GRF		Clarify Enabled test
    ; 28-Feb-2005	JW		SR11405: Created
    ;-------------------------------------------------------------------------------
	new YFORM,YKEY,YAUSWAHL,YFELD
	
	set YFORM="FINSYSAccountGroupLine"
	set YFELD=""
	set YKEY=$get(pYKEY)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 290
	set $$$COMGridEditParameterGridName(YAUSWAHL)      = YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)       = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)     = "FINSYSAccountGroup"
	do ^COMGridEdit31
	
	quit
 
 
 
ShowLines(pYKEY,pLarge) // 1-Mar-2005 JW: Currently not in use
    ;-------------------------------------------------------------------------------
    ; Show the Account Group Lines
    ;
    ; Returns:
    ;
    ; History:
    ;  2-Nov-2004	JW		SR10590: Display message if accounts > 500.
    ;  						Added paramater - so don't have to check number again.
    ; 18-May-2004   Shobby	Created (TR007710)
    ;-------------------------------------------------------------------------------
	;
	new lstHeader,i,lstAccounts,intLines,objFINSYSAccountGroup,idAccountGroup
	new idAccount,objFINGLAccount,strDescription
	
	if '$get(pLarge) set pLarge = $$LargeNumberOfAccounts()
	
	if pLarge=$$$YES { ; Only use this method if we have a large number of accounts (SR:10590)
		write "<blockquote><FONT color=black size=2>"_
			$$$Text("Fin00405")_   ;Note: The number of accounts available exceeds the predefined limit of 500, 
			"</FONT></blockquote>" ;therefore to add accounts to this group, the Edit Lines button must be used.
	
		if $get(pYKEY)'="" {
			kill ^CacheTemp(YUSER,"ShowLines")
			set lstHeader=""
			set lstHeader=lstHeader_$lb($$$Text("Fin00318"))	;Number
			set lstHeader=lstHeader_$lb($$$Text("Fin00317")) ;Account
		
			if $$Start^COMTable(lstHeader,$$$Text("Fin00041")) { ; Lines
				set idAccountGroup=pYKEY
				set objFINSYSAccountGroup=$get(^FINSYSAccountGroup(YM,idAccountGroup,1))
				set lstAccounts=$$$FINSYSAccountGroupAccountKey(objFINSYSAccountGroup)
				set intLines=$length(lstAccounts,";")
				for i=1:1:intLines {
					set idAccount=$piece(lstAccounts,";",i)
					if idAccount'="" {
						set objFINGLAccount=$get(^FINGLAccount(YM,idAccount,1))
						set strDescription=$$$FINGLAccountDescription(objFINGLAccount)
						set ^CacheTemp(YUSER,"ShowLines",idAccount)=strDescription
					}
				}
				set idAccount=""
				set i=0
				for {
					set idAccount=$order(^CacheTemp(YUSER,"ShowLines",idAccount))
					quit:idAccount=""
					set strDescription=$get(^CacheTemp(YUSER,"ShowLines",idAccount))
					do NewLine^COMTable("")
					do InsertCell^COMTable($i(i),"FINSYSAccountGroupLine",idAccountGroup_YKOMMA_i)
					do InsertCell^COMTable(idAccount_" - "_strDescription,"FINSYSAccountGroupLine",idAccountGroup_YKOMMA_i)
					do EndLine^COMTable()
				}
			do Stop^COMTable()
			}
		}
	}
	quit
 
 
Search()
    ;-------------------------------------------------------------------------------
    ; New method to add lines to the group - uses COMView and EditGrid.
    ; Called by the "L" button to search for accounts
    ;
    ; Returns: $$$OK
    ;
    ; History:
    ; 28-Feb-2005	JW			SR11405: Created
    ;-------------------------------------------------------------------------------
	
	do Initialise^COMViewCustom("FINGLAccount","AccountsSelected^FINSYSAccountGroup")
	do AddFilter^COMViewCustom("D"_$$$FldFINGLAccountAccountUsage,"=",$$$EnumFINGLACCOUNTUSAGETransaction)
	do Start^COMViewCustom()
	
	quit $$$OK
 
 
AccountsSelected(pobjResultSet)
    ;-------------------------------------------------------------------------------
    ; Add accounts to the grid.
    ;
    ; Returns:
    ;
    ; History:
    ; 20-Oct-2005	JW		SR11573: Use Batching to add
    ; 24-Jun-2005	JW		SR12627: Validate account
    ; 28-Feb-2005	JW		SR11405: Created
    ;-------------------------------------------------------------------------------
	new idKey,strStatus
	
	$$$GRIDAddBatchStart
	while pobjResultSet.Next() {
		set idKey=$$GetID^COMViewCustom(pobjResultSet)
		
		set strStatus = $$ValidateAccount^FINGLAccountTran(idKey)  ; SR12627
		if $$$ISOK(strStatus) {
			$$$GRIDAddLine("",idKey)
		} else {
			$$$Alert(strStatus)
		}
	}
	$$$GRIDAddBatchStop
	
	quit
	
	
	
	
]]></Routine>
</Export>