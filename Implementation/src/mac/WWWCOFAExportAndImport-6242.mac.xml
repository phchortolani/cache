<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWCOFAExportAndImport" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWCOFAExportAndImport
 
#include WWWConst
#include COMSYS
 
	; TODO : If appropriate include ability to export a module, sub module or list of forms
 
 /* FROM WWWCODA
 MERGE ^WWW001(0,VORG(2))=^WWW001(0,VORG(1))
 DO ^WWWSSORT("WWW001",VORG(2))
 MERGE ^WWW0011(0,VORG(2))=^WWW0011(0,VORG(1))
 DO ^WWWSSORT("WWW0011",VORG(2))
 MERGE ^WWW0021(0,VORG(2))=^WWW0021(0,VORG(1))
 DO ^WWWSSORT("WWW0021",VORG(2))
 MERGE ^WWW002(0,VORG(2))=^WWW002(0,VORG(1))
 DO ^WWWSSORT("WWW002",VORG(2))
 MERGE ^WWW003(0,VORG(2))=^WWW003(0,VORG(1))
 DO ^WWWSSORT("WWW003",VORG(2))
 MERGE ^WWW0031(0,VORG(2))=^WWW0031(0,VORG(1))
 DO ^WWWSSORT("WWW0031",VORG(2))
 
 Class Defs
 
 "WWW001","WWW0011","WW0021","WW002","WWW003","WWW0031"
 
 Class Def customisations
 
 "WW002D","WWW003D"
 
 */
ExportPackage(pstrPrefix,pstrType="",pstrFileName="",pintIncludeCustomisations=1,pstrUser="",pstrDate="")
    ;-------------------------------------------------------------------------------
    ; Exports all classes or forms with the specified prefix to a single file which
    ; can be loaded in to another namespace.
    ; Called from Command Prompt only at this stage.
    ; TODO:Only supports classes.  Include form support later.
    ;
    ; Params:
    ;
    ; Returns:
    ; 
    ; Examples:
	; class - do ExportPackage^WWWCOFAExportAndImport("AEP",2,"\\galileo\user\a.txt")
	; class - do ExportPackage^WWWCOFAExportAndImport("AEPCompanyParameter",2,"\\galileo\user\a.txt")
	; form  - do ExportPackage^WWWCOFAExportAndImport("AEP",1,"\\galileo\user\a.txt")
	; menu  - do ExportPackage^WWWCOFAExportAndImport("Advanced_Procurement",4,"\\galileo\user\a.txt")
	; help  - do ExportPackage^WWWCOFAExportAndImport("AEP",7,"\\desenv\frank\Help-BR.txt")
    ;
    ; History:
    ; 03-Dec-2005	shobby		SR13478: Allow Help Text to be limited to last changed by.
    ; 28-Nov-2005	shobby		SR13748: Expanded to support help text.
    ; 03-Nov-2005	SHOBBS		SR13748: Created
    ;-------------------------------------------------------------------------------
	new YSEITE,strName,VORG,hdlFile
	
	if pstrType'="" {
		set pstrPrefix = $zconvert(pstrPrefix,"u")
		if $get(Y)="" do ^WWWVAR
		set YSEITE = pstrType
		set hdlFile = ##class(%File).%New(pstrFileName)
		do hdlFile.Open("WSN")
		do hdlFile.%Close()
		kill hdlFile
		
		set strName = ""
		if (pstrType=1) {
			for {
				set strName=$order(^WWW120(0,strName))
				quit:strName=""
				
				if $zconvert($extract(strName,1,$length(pstrPrefix)),"u")=pstrPrefix  {
					write !,strName
					set VORG(pstrType,1) = strName
					set VORG(pstrType,2) = strName
					set VORG(pstrType,3) = pstrFileName
					set VORG(pstrType,4) = pintIncludeCustomisations
					set VORG(pstrType,7) = 1               ;Append to file
					do WhatToDo
				}
			}
		
		} elseif pstrType=2 {
			for {
				set strName=$order(^WWW001(0,strName))
				quit:strName=""
				
				if $zconvert($extract(strName,1,$length(pstrPrefix)),"u")=pstrPrefix  {
					write !,strName
					set VORG(pstrType,1) = strName
					set VORG(pstrType,2) = strName
					set VORG(pstrType,3) = pstrFileName
					set VORG(pstrType,4) = $$$YES          ;Help
					set VORG(pstrType,5) = pintIncludeCustomisations
					set VORG(pstrType,7) = 1               ;Append to file
					do WhatToDo
				}
			}
		
		} elseif pstrType=4 {
			for {
				set strName = $order(^WWW004(0,strName))
				quit:strName=""
				
				if $zconvert($extract(strName,1,$length(pstrPrefix)),"u")=pstrPrefix {
					write !,strName
					set VORG(pstrType,1) = strName
					set VORG(pstrType,2) = strName
					set VORG(pstrType,3) = pstrFileName
					set VORG(pstrType,4) = pintIncludeCustomisations
					set VORG(pstrType,7) = 1               ;Append to file
					do WhatToDo
				}
			}
		
		} elseif pstrType=5 {
			set VORG(pstrType,1) = "WWW009"
			set VORG(pstrType,2) = "WWW009"
			set VORG(pstrType,3) = pstrFileName
			set VORG(pstrType,8) = pstrPrefix
			do WhatToDo
		
		} elseif pstrType=6 {
			set VORG(pstrType,1) = "WWW101"
			set VORG(pstrType,2) = "WWW101"
			set VORG(pstrType,3) = pstrFileName
			set VORG(pstrType,8) = pstrPrefix
			do WhatToDo
		
		} elseif pstrType=7 {                    ; Help Text
			set VORG(pstrType,1)  = "WWW127"
			set VORG(pstrType,2)  = "WWW127"
			set VORG(pstrType,3)  = pstrFileName
			set VORG(pstrType,8)  = pstrPrefix
			set VORG(pstrType,9)  = pstrUser
			set VORG(pstrType,10) = pstrDate
			do WhatToDo
			set VORG(pstrType,1) = "WWW1271"
			set VORG(pstrType,2) = "WWW1271"
			set VORG(pstrType,7) = 1
			do WhatToDo
		}
	}
	quit
 
	 
WhatToDo
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 05-May-2005	PO		Created SR:12218
    ;-------------------------------------------------------------------------------
	if $get(YSEITE)=1       { 	do ExportForm(YSEITE)
	} elseif $get(YSEITE)=2 {	do ExportClass(YSEITE)
	} elseif $get(YSEITE)=3 {	do Import(YSEITE)
	} elseif $get(YSEITE)=4 {	do ExportMenu(YSEITE)
	} elseif $get(YSEITE)=5 {	do ExportLanguageText(YSEITE)
	} elseif $get(YSEITE)=6 {	do ExportApplicationParameters(YSEITE)
	} elseif $get(YSEITE)=7 {	do ExportHelpText(YSEITE)
	}
	quit
 
ExportHelpText(pidPage)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 04-Dec-2005	shobby		SR13478:Selection based on date.
    ; 28-Nov-2005	shobby		Created SR13748
    ;-------------------------------------------------------------------------------
    new strFileName,strPrefix,hdlFile,blnAppend,strFrom,strCode,strUser,strDate
    
	set strFrom        =  $get(VORG(pidPage,1))
	set strFileName    =  $get(VORG(pidPage,3))
	set strPrefix      =  $get(VORG(pidPage,8))
	set blnAppend      = +$get(VORG(pidPage,7))
	set strUser        =  $get(VORG(pidPage,9))
	set strDate        =  $get(VORG(pidPage,10))
		 
	set hdlFile = ##class(%File).%New(strFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WS"_$select(blnAppend:"A",1:"N")) {
			do hdlFile.MoveToEnd()
			do hdlFile.WriteLine() ; Used to signal start of new section
			do hdlFile.WriteLine($zconvert("^"_strFrom_"(0)","o","JS"))
			set strCode="^"_strFrom_"(0,"""_strPrefix_""")"
			for {
				set strCode=$query(@strCode)
				quit:strCode=""
				
				if (strUser="") || (strFrom="WWW1271") || (strUser=$$$WWW127ChangedBy(@strCode)) {
					if (strDate="") || (strFrom="WWW1271") || ((strDate'>$$$WWW127DateChanged(@strCode)) && ($$$WWW127DateChanged(@strCode)'="")) {
						;w !,$extract($$Replace^COMUtils($piece(strCode,",",2),""""),1,$length(strPrefix))
						if $zconvert($extract($$Replace^COMUtilStr($piece(strCode,",",2),""""),1,$length(strPrefix)),"u")=$zconvert(strPrefix,"u") {
							write !,strCode
							do hdlFile.WriteLine($zconvert(strCode_"="""_$$RemoveQuotes(@strCode)_"""","o","JS"))
						}
					}
				}
			}
			do hdlFile.Close()
 		}
	}
	quit
	
	
ExportApplicationParameters(pidPage)
    ;-------------------------------------------------------------------------------
    ; Put application parameters in a file to be imported.
    ; Not linked to export screen. Just run from terminal prompt.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 08-Nov-2005	shobby		SR12765: Created
    ;-------------------------------------------------------------------------------
	new strFrom,strTo,strFileName,strPrefix,hdlFile
	new strLanguage,strCode,strGlobal,strData,strItem
	
	set strFrom        = $get(VORG(pidPage,1))
	set strTo          = $get(VORG(pidPage,2))
	set strFileName    = $get(VORG(pidPage,3))
	set strPrefix      = $get(VORG(pidPage,8))
 
	set hdlFile = ##class(%File).%New(strFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WSN") {
			do hdlFile.MoveToEnd()
			do hdlFile.WriteLine() ; Used to signal start of new section
			do hdlFile.WriteLine($zconvert("^WWW101(0)","o","JS"))
			
			set strCode = strPrefix
			for {
				set strCode = $order(^WWW101(0,strCode))
				quit:strCode=""
				quit:$zconvert(strPrefix,"u")'=$zconvert($extract(strCode,1,$length(strPrefix)),"u")
				
				set strLanguage = ""
				for {
					set strLanguage = $order(^WWW101(0,strCode,strLanguage))
					quit:strLanguage=""
					
					set strItem = ""
					for {
						set strItem = $order(^WWW101(0,strCode,strLanguage,strItem))
						quit:strItem=""
						
						set strGlobal = "^WWW101(0,"""_strCode_""","""_strLanguage_""","_strItem_",1)"
						set strData = $get(^WWW101(0,strCode,strLanguage,strItem,1))
						set strData = $$Replace^COMUtilStr(strData,"""""","""")
						if $extract(strData,1)=""""                set strData = $extract(strData,2,$length(strData))
						if $extract(strData,$length(strData))="""" set strData = $extract(strData,1,$length(strData)-1)
						set strData = $$Replace^COMUtilStr(strData,"""","Â´")
						write !,strGlobal_"="_strData
						do hdlFile.WriteLine($zconvert(strGlobal_"="""_strData_"""","o","JS"))
					}
				}
			}
			do hdlFile.Close()
 		}
	}
	
	quit
	
 
 
ExportSystemParameters(pidPage)
    ;-------------------------------------------------------------------------------
    ; Put System parameters in a file to be imported.
    ; Not linked to export screen. Just run from terminal prompt.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 02-Mar-2008	PPP		SR: Created
    ;-------------------------------------------------------------------------------
	new strFrom,strTo,strFileName,strPrefix,hdlFile
	new strLanguage,strCode,strGlobal,strData,strItem
	
	//set strFrom   = $get(VORG(pidPage,1))
	//set strTo     = $get(VORG(pidPage,2))
	set strFileName = $get(VORG(pidPage,3))
	set strPrefix   = $get(VORG(pidPage,8))
 
	set hdlFile = ##class(%File).%New(strFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WSN") {
			do hdlFile.MoveToEnd()
			do hdlFile.WriteLine() ; Used to signal start of new section
			do hdlFile.WriteLine($zconvert("^WWW100(0)","o","JS"))
			
			set strCode = $order(^WWW100(0,strPrefix),-1)
			for {
				set strCode = $order(^WWW100(0,strCode))
				quit:strCode=""
				quit:$zconvert(strPrefix,"u")'=$zconvert($extract(strCode,1,$length(strPrefix)),"u")
				
				set strLanguage = ""
				for {
					set strLanguage = $order(^WWW100(0,strCode,strLanguage))
					quit:strLanguage=""
					
					set strItem = ""
					for {
						set strItem = $order(^WWW100(0,strCode,strLanguage,strItem))
						quit:strItem=""
						
						set strGlobal="^WWW100(0,"""_strCode_""","""_strLanguage_""","_strItem_",1)"
						set strData=$get(^WWW100(0,strCode,strLanguage,strItem,1))
						set strData=$$Replace^COMUtilStr(strData,"""""","""")
						if $extract(strData,1)="""" set strData=$extract(strData,2,$length(strData))
						if $extract(strData,$length(strData))="""" set strData=$extract(strData,1,$length(strData)-1)
						set strData=$$Replace^COMUtilStr(strData,"""","Â´")
						write !,strGlobal_"="_strData
						do hdlFile.WriteLine($zconvert(strGlobal_"="""_strData_"""","o","JS"))
					}
				}
			}
			do hdlFile.Close()
 		}
	}
	
	quit
	
		
RemoveQuotes(pstrText)
    ;-------------------------------------------------------------------------------
    ; Remove quotes from text.  Not supported by Importing.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 04-Nov-2005	shobby	SR12765: Created
    ;-------------------------------------------------------------------------------
	set pstrText=$$Replace^COMUtilStr(pstrText,"""""","""")
	if $extract(pstrText,1)="""" set pstrText=$extract(pstrText,2,$length(pstrText))
	if $extract(pstrText,$length(pstrText))="""" set pstrText=$extract(pstrText,1,$length(pstrText)-1)
	set pstrText=$$Replace^COMUtilStr(pstrText,"""","Â´")
	quit pstrText
	
	 
ExportLanguageText(pidPage) 
    ;-------------------------------------------------------------------------------
    ; Put menu texts in a file to be imported.
    ; Not linked to export screen. Just run from terminal prompt.
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 04-Nov-2005	shobby	SR12765: Created
    ;-------------------------------------------------------------------------------
	new strFrom,strTo,strFileName,strPrefix,hdlFile
	new strLanguage,strCode,strGlobal,strData
	
	set strFrom        = $get(VORG(pidPage,1))
	set strTo          = $get(VORG(pidPage,2))
	set strFileName    = $get(VORG(pidPage,3))
	set strPrefix      = $get(VORG(pidPage,8))
 
	set hdlFile = ##class(%File).%New(strFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WSN") {
			do hdlFile.MoveToEnd()
			do hdlFile.WriteLine() ; Used to signal start of new section
			do hdlFile.WriteLine($zconvert("^WWW009(0)","o","JS"))
			set strLanguage=""
			for {
				set strLanguage=$order(^WWW009(0,strLanguage))
				quit:strLanguage=""
				
				set strCode=strPrefix
				for {
					set strCode=$order(^WWW009(0,strLanguage,strCode))
					quit:strCode=""
					quit:$zconvert(strPrefix,"u")'=$zconvert($extract(strCode,1,$length(strPrefix)),"u")
					
					set strGlobal="^WWW009(0,"""_strLanguage_""","""_strCode_""",1)"
					set strData=$get(^WWW009(0,strLanguage,strCode,1))
					set strData=$$Replace^COMUtilStr(strData,"""""","""")
					if $extract(strData,1)="""" set strData=$extract(strData,2,$length(strData))
					if $extract(strData,$length(strData))="""" set strData=$extract(strData,1,$length(strData)-1)
					set strData=$$Replace^COMUtilStr(strData,"""","Â´")
					write !,strGlobal_"="_strData
					do hdlFile.WriteLine($zconvert(strGlobal_"="""_strData_"""","o","JS"))
				}
			}
			do hdlFile.Close()
 		}
	}
	
	quit
	
	
ExportMenu(pidPage)
    ;-------------------------------------------------------------------------------
    ; Exports a form and all its associated records, does the same as WWWCOFA except result is written to a flat file
    ;
    ; Copy From Form - VORG(pidPage,1)
    ; Copy To Form - VORG(pidPage,2)
    ; Target File - VORG(pidPage,3)
    ; Copy With Help Text - VORG(pidPage,4)
    ; Copy With Customisations - VORG(pidPage,5)
    ; 
    ; History:
	; 04-Jun-2009	shobby	SR16619: Cache 2008 adjustments
    ; 03-Nov-2005	shobby	SR13748: Allow appending to file to export many classes at once.
    ; 03-Nov-2005	shobby	SR13748: WW002 and WW0021 should have had an extra W
    ; 14-Jun-2005	PO		Included filter classes (WWW0022,WWW0032), & changed language texts
    ; 12-May-2005	PO		Created SR:12218
    ;-------------------------------------------------------------------------------
	new strTo,strFrom,blnIncludeHelp,strGlobal,hdlFile,strFileName,strFileLocation,strMachine
	new blnIncludeCustomisations,blnIncludeClasses,blnAppend
 
	set strFrom        = $get(VORG(pidPage,1))
	set strTo          = $get(VORG(pidPage,2))
	set strFileName    = $get(VORG(pidPage,3))
	set blnIncludeCustomisations = $get(VORG(pidPage,4))
	set blnAppend	   = +$get(VORG(pidPage,7))
 
	if strTo="" set strTo = strFrom	
	set hdlFile = ##class(%File).%New(strFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WS"_$select(blnAppend:"A",1:"N")) {
			do hdlFile.MoveToEnd()
			for strGlobal="WWW004","WWW0041","WWW00411" {
				do WriteToFile(strTo,strFrom,strGlobal,hdlFile)
			}
 
			do hdlFile.Close()
 
			set strFileLocation = ##class(%File).NormalizeDirectory(##class(%File).GetDirectory(strFileName))
			set strFileName     = ##class(%File).GetFilename(strFileName)
			set strMachine      = ##class(alSYS.SYSTEM.Process).ClientNodeNameGet($job)  ;SR16619
 
			;FIXME : Couldn't think of a more appropriate way of reporting status.
			if 'blnAppend {
				if $extract(strFileLocation,1,2)="\\" {
					do ReturnError^COMUtils($listbuild("WWW00013",strFileLocation_strFileName)) ;  The file has been created at `%1`.
				} else {
					do ReturnError^COMUtils($listbuild("WWW00014",strFileLocation_strFileName,strMachine)) ;  The file has been created at `%1` on the machine `%2`.
				}
			}
 
		} else {
			if 'blnAppend do ReturnError^COMUtils($listbuild("WWW00018",strFileName,strTo)) ;  Unable to open the file `%1` to export the class `%2`.
		}
	} else {
		if 'blnAppend do ReturnError^COMUtils($listbuild("WWW00019",strFileName,strTo)) ;  Unable to allocate the file `%1` for exporting the class `%2`.
	}
 
	kill hdlFile
 
	quit
	
	
ExportForm(pidPage)
    ;-------------------------------------------------------------------------------
    ; Exports a form and all its associated records, does the same as WWWCOFA except result is written to a flat file
    ;
    ; Copy From Form - VORG(pidPage,1)
    ; Copy To Form - VORG(pidPage,2)
    ; Target File - VORG(pidPage,3)
    ; Copy With Help Text - VORG(pidPage,4)
    ; Copy With Customisations - VORG(pidPage,5)
    ; 
    ; History:
	; 08-Sep-2011	shobby	SR17847: WWW120Hook, WWW120VARHook
    ; 23-Mar-2010	shobby	SR17248: COMGridEditParameter
	; 04-Jun-2009	shobby	SR16619: Cache 2008 adjustments
    ; 01-Jun-2009	shobby	SR16534: Include WWW122C2 (core Rules)
    ; 09-Sep-2008	shobby	BR014980: COMHelp* information is now temporary data.
    ; 08-Jan-2006	PO		SR15351: Corrected some existing code and added in Dynamic Table
    ; 03-Nov-2005	shobby	SR13748:Allow appending to file to export many forms at once.
    ; 14-Jun-2005	PO		Changed language texts
    ; 04-May-2005	PO		Created SR:12218
    ;-------------------------------------------------------------------------------
	new strTo,strFrom,blnIncludeHelp,strGlobal,hdlFile,strFileName,strFileLocation,strMachine
	new blnIncludeCustomisations,blnIncludeClasses,blnAppend
 
	set strFrom                  = $get(VORG(pidPage,1))
	set strTo                    = $get(VORG(pidPage,2))
	set strFileName              = $get(VORG(pidPage,3))
	set blnIncludeHelp           = $get(VORG(pidPage,4))
	set blnIncludeCustomisations = $get(VORG(pidPage,5))
	;et blnIncludeClasses        = $get(VORG(pidPage,6))
	set blnAppend	             = +$get(VORG(pidPage,7))
 
	if strTo="" set strTo = strFrom	
	set hdlFile = ##class(%File).%New(strFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WS"_$select(blnAppend:"A",1:"N")) {
			for strGlobal="WWW120","WWW1201","WWW1203","WWW121","WWW1210","WWW1211","WWW122","WWW1221","WWW123","WWW1231","WWW122C2" {
				do WriteToFile(strTo,strFrom,strGlobal,hdlFile)
			}
			
			for strGlobal="WWW1232","WWW124","WWW1251","WWW129","WWW1291","WWW131","WWW132","WWW133","WWWDRAGDROP","WWWDRAGDROPD" {
				do WriteToFile(strTo,strFrom,strGlobal,hdlFile)
			}
			
			for strGlobal="WWW120DynTable","COMGridEditParameter","WWW120Hook" {  ;SR17847
				do WriteToFile(strTo,strFrom,strGlobal,hdlFile)
			}
			
			if blnIncludeCustomisations {
				for strGlobal="WWW120D","WWW121D","WWW121D1","WWW122D","WWW122D1","WWW122D2","WWW126","WWW120VARHook" { ;SR17847
					do WriteToFile(strTo,strFrom,strGlobal,hdlFile)
				}
			}
 
			if blnIncludeHelp do WriteToFile(strTo,strFrom,"WWW127",hdlFile)
 
			do hdlFile.Close()
 
			set strFileLocation = ##class(%File).NormalizeDirectory(##class(%File).GetDirectory(strFileName))
			set strFileName     = ##class(%File).GetFilename(strFileName)
			set strMachine      = ##class(alSYS.SYSTEM.Process).ClientNodeNameGet($job)  ;SR16619
 
			;FIXME : Couldn't think of a more appropriate way of reporting status.
			if 'blnAppend {
				if $extract(strFileLocation,1,2)="\\" {
					do ReturnError^COMUtils($listbuild("WWW00013",strFileLocation_strFileName)) ;  The file has been created at `%1`.
				} else {
					do ReturnError^COMUtils($listbuild("WWW00014",strFileLocation_strFileName,strMachine)) ;  The file has been created at `%1` on the machine `%2`.
				}
			}
 
		} else {
			if 'blnAppend do ReturnError^COMUtils($listbuild("WWW00015",strFileName,strTo)) ;  Unable to open the file `%1` to export the form `%2`.
		}
	} else {
		if 'blnAppend do ReturnError^COMUtils($listbuild("WWW00016",strFileName,strTo)) ;  Unable to allocate the file `%1` for exporting the form `%2`.
	}
 
	kill hdlFile
	quit
	
	
ExportClass(pidPage)
    ;-------------------------------------------------------------------------------
    ; Exports a form and all its associated records, does the same as WWWCOFA except result is written to a flat file
    ;
    ; Copy From Form - VORG(pidPage,1)
    ; Copy To Form - VORG(pidPage,2)
    ; Target File - VORG(pidPage,3)
    ; Copy With Help Text - VORG(pidPage,4)
    ; Copy With Customisations - VORG(pidPage,5)
    ; 
    ; History:
	; 04-Jun-2009	shobby	SR16619: Cache 2008 adjustments
    ; 27-Jul-2007	GM		BR014618: Make appear WWW001Hook and WWW001VARHooks
    ; 							classes in text files
    ; 03-Nov-2005	shobby	SR13748: Allow appending to file to export many classes at once.
    ; 03-Nov-2005	shobby	SR13748: WW002 and WW0021 should have had an extra W
    ; 14-Jun-2005	PO		Included filter classes (WWW0022,WWW0032), & changed language texts
    ; 12-May-2005	PO		Created SR:12218
    ;-------------------------------------------------------------------------------
	new strTo,strFrom,blnIncludeHelp,strGlobal,hdlFile,strFileName,strFileLocation,strMachine
	new blnIncludeCustomisations,blnIncludeClasses,blnAppend
 
	set strFrom                  = $get(VORG(pidPage,1))
	set strTo                    = $get(VORG(pidPage,2))
	set strFileName              = $get(VORG(pidPage,3))
	set blnIncludeCustomisations = $get(VORG(pidPage,4))
	set blnAppend	             = +$get(VORG(pidPage,7))
 
	if strTo="" set strTo = strFrom	
	set hdlFile = ##class(%File).%New(strFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WS"_$select(blnAppend:"A",1:"N")) {
			do hdlFile.MoveToEnd()
			for strGlobal="WWW001","WWW0011","WWW0021","WWW0022","WWW002","WWW003","WWW0031","WWW0032","WWW001Hook" {
				do WriteToFile(strTo,strFrom,strGlobal,hdlFile)
			}
 
			if blnIncludeCustomisations {
				for strGlobal="WWW002D","WWW003D","WWW001VARHooks" {
					do WriteToFile(strTo,strFrom,strGlobal,hdlFile)
				}
			}
 
			do hdlFile.Close()
 
			set strFileLocation = ##class(%File).NormalizeDirectory(##class(%File).GetDirectory(strFileName))
			set strFileName     = ##class(%File).GetFilename(strFileName)
			set strMachine      = ##class(alSYS.SYSTEM.Process).ClientNodeNameGet($job)  ;SR16619
 
			;FIXME : Couldn't think of a more appropriate way of reporting status.
			if 'blnAppend {
				if $extract(strFileLocation,1,2)="\\" {
					do ReturnError^COMUtils($listbuild("WWW00013",strFileLocation_strFileName)) ;  The file has been created at `%1`.
				} else {
					do ReturnError^COMUtils($listbuild("WWW00014",strFileLocation_strFileName,strMachine)) ;  The file has been created at `%1` on the machine `%2`.
				}
			}
 
		} else {
			if 'blnAppend do ReturnError^COMUtils($listbuild("WWW00018",strFileName,strTo)) ;  Unable to open the file `%1` to export the class `%2`.
		}
	} else {
		if 'blnAppend do ReturnError^COMUtils($listbuild("WWW00019",strFileName,strTo)) ;  Unable to allocate the file `%1` for exporting the class `%2`.
	}
 
	kill hdlFile
	quit
	
	
WriteToFile(pstrTo,pstrFrom,pstrGlobal,phdlFile)
    ;-------------------------------------------------------------------------------
    ; Perform the write operation of particular section of global
    ;
    ; History:
    ; 12-Feb-2009	SCR		SR16348: Dont Send Data over 10K
    ; 14-Jun-2005	PO		Changed language texts
    ; 04-May-2005	PO		Created SR:12218
    ;-------------------------------------------------------------------------------
	new strQuery,strBase,intBaseLength,strShared,strOld,strNew,strData
 
	if $$$WWW001SharedFile($get(^WWW001(0,pstrGlobal,1))) {
		set strShared = 0
	} else {
		set strShared = YM
	}
 
	if pstrTo'=+pstrTo {
		set strNew = ","""_pstrTo_""""
	} else {
		set strNew = ","_pstrTo
	}
 
	if pstrFrom'=+pstrFrom {
		set strOld = ","""_pstrFrom_""""
	} else {
		set strOld = ","_pstrFrom
	}
 
	set strBase = "^"_pstrGlobal_"("_strShared_strOld
	set intBaseLength = $length(strBase)
	set strQuery = strBase_")"
 
	do phdlFile.WriteLine() ; Used to signal start of new section
	do phdlFile.WriteLine($zconvert($$Replace^COMUtilStr(strQuery,strOld,strNew),"o","JS"))
 
	for {
		set strQuery = $query(@strQuery)
		quit:(strQuery="")||($extract(strQuery,1,intBaseLength)'=strBase)
		set strData = @strQuery
		if $length(strData)>10000 continue
		do phdlFile.WriteLine($zconvert($$Replace^COMUtilStr(strQuery,strOld,strNew)_"="""_
		                      $$Replace^COMUtilStr(@strQuery,$$$DBLQUOTE,$$$DBLQUOTE_$$$DBLQUOTE)_"""","o","JS"))
	}
	quit
	
	
Import(pidPage,pblnDisplayMessages=$$$YES)
    ;-------------------------------------------------------------------------------
    ; Import records
    ;
    ; File to import from - VORG(pidPage,1)
    ; Whether section of global gets killed before import - VORG(pidPage,2)
    ;
    ; Where ## is the page/tab id.
    ;
    ; History:
    ; 12-Feb-2009	shobby/SR	SRAdhoc: Incorrect test on strength length could cause crash.
    ; 24-Oct-2008	shobby		SR16062: Parameter to suppress the display of messages when running from a terminal prompt
    ; 28-Mar-2006	PO:			Indexes were not being created as call to WWWSSORT was not correctly implemented
    ; 14-Jun-2005	PO			Changed language texts
    ; 06-May-2005	shobby/PO	SR12218 - Include test for no data.
    ; 04-May-2005	PO			Created SR:12218
    ;-------------------------------------------------------------------------------
	new hdlFile,intLengthRead,strExecute,blnKillBeforeCreate,blnDoKill,strLine,strFileName
	new strBase,strGlobal,strKeys,intCount,blnFirst,strData,strClass,strKey
 
	set strFileName         = $get(VORG(pidPage,1))
	set blnKillBeforeCreate = $get(VORG(pidPage,2))
 
	set blnDoKill = $$$NO
	set blnFirst  = $$$NO
	set strBase   = ""
 
	set hdlFile = ##class(%File).%New(strFileName)
 
	if hdlFile '= "" {
		if $get(^SysSetup("SHOBBY"))&&(hdlFile.Open("RS:/IOTABLE=""RAW"""))||('$get(^SysSetup("SHOBBY"))&&(hdlFile.Open("RS"))) {   ;SR17180
			for {
				set intLengthRead = 32000
				set strLine = $zconvert(hdlFile.Read(.intLengthRead),"i","JS")

				if strLine="" {  ;start of a new section
					if blnKillBeforeCreate set blnDoKill=$$$OK
					set blnFirst=$$$OK
					quit:intLengthRead=-1 ; Since every line is terminated with a line sep will end here
					continue
				}
				if blnDoKill {
					set blnDoKill = $$$NO
					set strBase  = strLine
					if strLine'="" {
						set strClass = $qsubscript(strLine,0)
						set strClass = $extract(strClass,2,$length(strClass))
						set strKey = ""
						for intCount = 2:1:$qlength(strLine)-1 {
							set strKey = strKey_","_$qsubscript(strLine,intCount)
						}
						set strKey = $extract(strKey,2,$length(strKey)-1)
						do KILL^COMUtils(strClass,strKey)
					}
				}
				if blnFirst {
					set blnFirst=$$$NO
					quit:intLengthRead=-1 ; Make sure quit out if file malformed
					continue
				}
				set strData=$piece(strLine,"=",2,99999)
				if $length(strData)>15000 {   ; Handle long strings and avoid STORE errors in the execute
					set strGlobal=$piece(strLine,"=",1)
					xecute "set "_strGlobal_"="_$extract(strData,1,15000)_""""
					xecute "set "_strGlobal_"="_strGlobal_"_"""_$extract(strData,15001,50000)
				} else {
					xecute "set "_strLine
				}
				;  The following will generate indexes, NOT creating all the indices that
				;  WWWSPEI does though. However to use SPEI need to change code just above
				set strGlobal = $piece(strLine,"=",1)
				set strClass  = $qsubscript(strGlobal,0)
				set strClass  = $extract(strClass,2,$length(strClass))
				set strKey = ""
				for intCount = 2:1:$qlength(strGlobal)-1 {
					set strKey = strKey_","_$qsubscript(strGlobal,intCount)
				}
				set strKey = $extract(strKey,2,$length(strKey)-1)
				do ^WWWSSORT(strClass,strKey)
				
				quit:intLengthRead=-1      ; Make sure quit out if file malformed
			}
			
			do hdlFile.Close()
			
			if pblnDisplayMessages do ReturnError^COMUtils($$$Text($listbuild("WWW00017",strFileName)))  ; The file `%1` has been successfully used for importing. ;16062
			
		} else {
			if pblnDisplayMessages do ReturnError^COMUtils($$$Text($listbuild("WWW00011",strFileName))) ;  Unable to open the file `%1` for importing. ;16062
		}
	} else {
		if pblnDisplayMessages do ReturnError^COMUtils($$$Text($listbuild("WWW00012",strFileName))) ;  Unable to allocate the file `%1` for importing. ;16062
	}
	
	kill hdlFile
	quit
	
	
 /* NOT SO SIMPLE
GenerateFile(pstrFileName,pstrProcedure,parrArgs)
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; History:
	; 04-Jun-2009	shobby	SR16619: Cache 2008 adjustments
    ; 12-May-2005	PO		Created
    ;-------------------------------------------------------------------------------
	new hdlFile,strFileLocation,strFileName,strMachine
 
	set hdlFile = ##class(%File).%New(pstrFileName)
	
	if hdlFile '= "" {
		if hdlFile.Open("WSN") {
 
			xecute "do "_pstrProcedure_"(hldFile,parrArgs)"
 
			do hdlFile.Close()
 
			set strFileLocation = ##class(%File).NormalizeDirectory(##class(%File).GetDirectory(pstrFileName))
			set strFileName     = ##class(%File).GetFilename(pstrFileName)
			set strMachine      = ##class(alSYS.SYSTEM.Process).ClientNodeNameGet($job)  ;SR16619
 
			;FIXME : Couldn't think of a more appropriate way of reporting status.
			if $extract(strFileLocation,1,2)="\\" {
				do ReturnError^COMUtils($$$Text($listbuild("WWW00013",strFileLocation_pstrFileName))) ;  The file has been created at `%1`.
			} else {
				do ReturnError^COMUtils($$$Text($listbuild("WWW00014",strFileLocation_pstrFileName,strMachine))) ;  The file has been created at `%1` on the machine `%2`.
			}
 
		} else {
			do ReturnError^COMUtils($$$Text($listbuild("WWW00015",pstrFileName,strTo))) ;  Unable to open the file `%1` to export the form `%2` to.
		}
	} else {
		do ReturnError^COMUtils($$$Text($listbuild("WWW00016",pstrFileName,strTo))) ;  Unable to allocate the file `%1` for exporting the form `%2` to.
	}
 
	kill hdlFile
 
	quit
 */
	
]]></Routine>
</Export>