<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31J1" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[COMGridEdit31J1
	;-------------------------------------------------------------------------------
	; History:
	; 27-Oct-2008	GRF		SRBR014962: Provide Tag per coding standards
	;;-------------------------------------------------------------------------------
	do CreateJavascript()     ; Temporary code in case of legacy calls.
	quit
	
CreateJavascript()
  	;-------------------------------------------------------------------------------
 	; function getFirstCellEx
 	; 16-Sep-2013	shobby	IPIRANGA-162.4: Removed the row object doesn't return the correct object. 
  	;-------------------------------------------------------------------------------
 	; function moveFocusLeft
 	; 22-Feb-2012	shobby	SR17724.26: Don't move onto primary keys with the left arrow.
 	;-------------------------------------------------------------------------------
 	; function isHiddenCol
 	; 05-Mar-2012	shobby	SR17724.24: More reliable determination of whether the cell
 	;							is in an expanded row.
 	; 01-Mar-2012	shobby	SR17724.20: Needed to separate the Fixed and Scrolling column
 	;							logic
 	;-------------------------------------------------------------------------------
 	; function deleteRow
 	; 23-Feb-2012	shobby	SR17724.11: Set focus to grid on initial load with Firefox
 	;
 	;-------------------------------------------------------------------------------
 	; function deleteRow
 	; 22-Feb-2012	shobby	SR17724.10: Also delete fixed columns.
 	;
 	;-------------------------------------------------------------------------------
 	; function gridEventWithin
 	; 22-Feb-2012	shobby	SR17724.9: Corrected for use with fixed columns
 	; 14-Feb-2012	shobby	SR17724: Common function to determine where events occurred
 	;
 	;-------------------------------------------------------------------------------
 	; function gridOnMouseMove
 	; 20-Mar-2012	shobby	SR17724: Get drag drop working for expanded columns.
 	; 28-Feb-2012	shobby	SR17724.14: Don't allow resizing of 'expansion' column.
 	; 22-Feb-2012	shobby	SR17724.9: Corrected for use with fixed columns
 	; 14-Feb-2012	shobby	SR17724: Removed the restriction on showing pointers when
 	;							there are multiple pages.
 	;-------------------------------------------------------------------------------
 	; function moveFocusPageDn
 	; 14-Feb-2012	shobby	SR17724: Alternative version when using fixed columns.
 	;-------------------------------------------------------------------------------
 	; function moveFocusHome
  	; 07-Mar-2012	shobby	SR17724.12: Get Home working for expanded lines.
	; 23-Feb-2012	shobby	SR17724.13: Changes so that moving home can handle hidden
 	;							fixed columns.
 	; 16-Feb-2012	shobby	SR17724: Alternative version when using fixed columns.
 	;-------------------------------------------------------------------------------
 	; function getNextSibling
 	; 16-Feb-2012	shobby	SR17724: Allow skipping across fixed column boundary
 	;-------------------------------------------------------------------------------
 	; function moveFocusTabEnter
 	; 14-Mar-2012	shobby	SR17724.28: Improvements when using shift tab across fixed
 	;							column boundary.
 	; 23-Feb-2012	shobby	SR17724.12: Go to next row if there are no active fields
 	;							in the scrolling area and the tab key was pressed in
 	;							the fixed area and
 	; 17-Feb-2012	shobby	SR17724.4: Allow skipping across fixed column boundary
 	;-------------------------------------------------------------------------------
 	; function moveFocusEnd
 	; 17-Feb-2012	shobby	SR17724.5: Skip across fixed column boundary when end is pressed.
 	;-------------------------------------------------------------------------------
 	; function getRow
 	; 21-Feb-2012	shobby	SR17724.7: Shifted most code in to getRowId for reuse.
 	; 12-Feb-2012	shobby	SR17724.5: Expanded rows need to be treated differently in
 	;							determining the row.
 	;-------------------------------------------------------------------------------
 	; function getNextSiblingHorizontal
 	; 20-Feb-2012	shobby	SR17724.5: Expanded rows have different DOM structure.
 	;-------------------------------------------------------------------------------
 	; function getPreviousSiblingHorizontal
 	; 21-Feb-2012	shobby	SR17724.7: Expanded rows have different DOM structure.
 	;-------------------------------------------------------------------------------
 	; function getRowId
 	; 07-Mar-2012	shobby	SR17724.12: Get Home working for expanded lines.
 	; 21-Feb-2012	shobby	SR17724.7: Created
 	;-------------------------------------------------------------------------------
 	; function getRowKey
 	; 21-Feb-2012	shobby	SR17724.7: Created
 	;-------------------------------------------------------------------------------
 	; function moveFocus
 	; 08-Mar-2012	shobby	SR17724.26: Show and hide the expanded line fixed column headings.
 	; 29-Feb-2012	shobby	SR17724.18: Don't scroll into view scrolling columns when
 	;							navigating amongst fixed columns.
 	; 21-Feb-2012	shobby	SR17724.8: Call to getRowKey to find which field to make
 	;							bold when changing selected rows.
 	;-------------------------------------------------------------------------------
 	; function isExpanded
 	; 21-Feb-2012	shobby	SR17724.8: Created (Determines whether a cell is in an 
 	;							expanded line.
 	;-------------------------------------------------------------------------------
	; function GetBorderStyle
	; 
	; Get border style of a cell.
	;
	; Params:	pthis	- TD id
	;
	; Returns:	string - border style
	;
	; History:
	; 29-Feb-2012	shobby	SR17724.19: tdEnd to fix Expanded lines display area is 
	;							limited to width of main lines
	; 02-Mar-2011	shobby	SR17673: Removed unused nonexistent property 'resizing'
	; 30-Jul-2010	FIS		SR17401: style change as per Carlos suggestion
	; 26-Jun-2006	JW		SR12775: Rewrote. Removed error/required processing.
 	;-------------------------------------------------------------------------------
	; function setDelayedFocus
	; 
	; Waits for a specific time (10 ms) and tries to set the focus and
	; activate a field in the Grid.
	;
	; Params:	pfocusField	- field id to focus
	;          pcount - counter of tries
	;
	; Returns:
	;
	; History:
	; 22-May-2009	Pablo	SRBR014991: Created.
	;-------------------------------------------------------------------------------
	; function moveFocus
	; 
	; Move focus to another cell in the grid
	; 	objRicht.parentNode.firstChild.style.fontWeight is line number - used to
	; 		emphasise focus line
	;
	; Params:	
	;
	; Returns:	nil
	;
	; History:
	; 28-Jul-2010	shobby	SR17475: Additional hidden check.
	; 12-Jul-2010	GRF		SR17433: Check if field is hidden before setting focus.
	; 08-Jul-2010	FIS		SR17410: mark focus field with thicker border in FF;
	;							handle shiftkey with firefox
	; 06-Jul-2010	shobby	SR17404: getPreviousSibling. Firefox, and most other
	; 							browsers, will treat empty white-spaces or new lines
	; 							as text nodes, Internet Explorer will not. So, in
	; 							this function, we have a function that checks the
	; 							node type of the previous sibling node.
	; 							Element nodes has a nodeType of 1, so if the
	; 							previous sibling node is not an element node, it
	; 							moves to the previous node, and checks if this node
	; 							is an element node. This continues until the
	; 							previous sibling node (which must be an element
	; 							node) is found.
	; 							This way, the result will be correct in all browsers
	; 09-June2010	GRF		SR17148: focusfieldNew not focusFieldNew
	; 22-May-2009	Pablo	SRBR014991: Set delayed focus to the current grid field.
	; 09-Feb-2009	shobby	SR16344: Speed up.
	; 30-Oct-2007	Karine	BR014722: Change the behavior of "Enter Key" to the same
	; 							as "Tab Key"
 	; 06-Sep-2006	JW		SR14484: Changed zIndex to display
	; 26-Jun-2006	JW		SR12775: Only continue if cell has changed
	;-------------------------------------------------------------------------------
	; function moveFocusTabPrevRow
	; 
	; Move focus up one row, last cell if possible.
	;
	; Params:	
	;
	; Returns:	nil
	;
	; History:
	; 26-Jun-2006	JW		SR12775: Change pages if not last page
	; 09-Mar-2005 	JW		SR11848: Replaced.
	;-------------------------------------------------------------------------------
	; function moveFocusTabNextRow
	; 
	; Move focus down one row, to the first cell if possible.
	;
	; Params:	
	;
	; Returns:	nil
	;
	; History:
	; 23-Feb-2012	shobby	SR17724.12 Fixed some problems with Tab to next row
	;							if initial next row columns are hidden.
	; 18-Jun-2010	PPP		SR17xxx: Locked Property direct access, instead of
	; 							getAttribute("Locked")
	; 20-Nov-2006	JW		SR14550: Added timeout to allow other events to fire
	; 							first (ie Blur)
	; 26-Jun-2006	JW		SR12775: Change pages if not last page
	; 09-Mar-2005	JW		SR11848: Replaced.
	;-------------------------------------------------------------------------------
	&js<
	//<script language="javascript">
	//<!--
	//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 	function gridEventWithin(pobject,pContainer,pContainerDIV,pclientX) {
		//SR17724 //SR17724.9 
		var intContainerOffsetLeft;
		if (isNewGrid()) {
			intContainerOffsetLeft=pContainer.offsetLeft;
		} else {
			intContainerOffsetLeft=0;
		}
		//window.status=currentHeader().id+'.'+pobject.parentNode.id+'||'+isNewGrid()+':'+(document.getElementById('GridVersion'))+':'+intContainerOffsetLeft+':'+pContainer.id+'+'+pContainerDIV.id+'+'+pContainer.offsetLeft+'+'+pContainerDIV.scrollLeft+'+'+pobject.offsetLeft+'+'+pobject.offsetWidth+'-'+pContainer.scrollLeft+'+'+pContainer.offsetLeft+'-'+pclientX+'-'+document.body.scrollLeft+'='+(pContainerDIV.offsetLeft+pobject.offsetLeft+pobject.offsetWidth-pContainer.scrollLeft+intContainerOffsetLeft-pclientX-document.body.scrollLeft); //SR17724	 	
		return (pContainerDIV.offsetLeft+pobject.offsetLeft+pobject.offsetWidth-pContainer.scrollLeft+intContainerOffsetLeft-pclientX-document.body.scrollLeft)<5; //SR17724
 	}
	function getContainer(pobj) {  //SR17724.9 
		var obj=pobj;
		var id=obj.id;
		var idContainer='';
		
		while (id!='gridDIV') {
			obj=obj.parentNode
			id =obj.id
			if ((id=='gridheadRowKey')||(id=='gridheadRow')||(id=='gridheadRow2Key')||(id=='gridheadRow2')) {
				idContainer=id;
				break;
			}
		}
		return id;
	}
	function gridonmousemove(pgridhead,pevent,pgridbody,pthis) {
		var strCurrentHeader=currentHeader().id;
		if ((strCurrentHeader=='gridhead')||(strCurrentHeader=='gridheadKey')) {
			if (isFixedCol(getContainer(pevent.srcElement))) {					 //SR17724.16
				var objContainer    = document.getElementById('gridheadKey');    //SR17724.16
				var objContainerDIV = document.getElementById('gridheadDIVKey'); //SR17724.16 
			} else {
				var objContainer    = document.getElementById('gridhead');       //SR17724.16
				var objContainerDIV = document.getElementById('gridheadDIV');    //SR17724.16 
			}
		} else if ((strCurrentHeader=='gridhead2')||(strCurrentHeader=='gridhead2Key')) {
			if (isFixedCol(getContainer(pevent.srcElement))) {					 //SR17724.16
				var objContainer    = document.getElementById('gridhead2Key');    //SR17724.16
				var objContainerDIV = document.getElementById('gridheadDIV2Key'); //SR17724.16 
			} else {
				var objContainer    = document.getElementById('gridhead2');       //SR17724.16
				var objContainerDIV = document.getElementById('gridhead2DIV');    //SR17724.16 
			}
		} else {
			alert(strCurrentHeader);
		}
		
		if ((pevent.srcElement.id=='THkey_Expand')||(pevent.srcElement.id=='THfld_Expand')||(pevent.srcElement.id=='Expand')) {							 //SR17724.14
			pthis.style.cursor='pointer';									 //SR17724.14
		} else if (gridEventWithin(pthis,objContainer,objContainerDIV,pevent.clientX)) { //SR17724
			//SR17724if (pthis.offsetLeft+pthis.offsetWidth-gridbodyDIV.scrollLeft+gridbodyDIV.offsetLeft-(pevent.clientX+document.body.scrollLeft)<5) { //SR17724
			pthis.style.cursor='col-resize';
		} else {
			//SR17724 if (GRIDNumPages==1) {		// SR11573 - sort only if one page
			//SR17724 	//pthis.style.cursor='hand';
				pthis.style.cursor='pointer';  //SR17253
			//SR17724 } else {
			//SR17724 	pthis.style.cursor='auto';
			//SR17724 }
		}
		pevent.srcElement.style.cursor=pthis.style.cursor;
		//SR17724 window.status=pthis.id+'.'+pevent.srcElement.id+'.'+pthis.style.cursor+'.'+pevent.srcElement.style.cursor+'::'+pevent.srcElement.className;
	}
	
 	function gridonclick(pevent,pgridhead,pgridbody,pgridbodyDIV) {
	 	if (!GRESIZING) {
		 	var manual = false;
	 	
			var srcElement=findObjectTagName(pevent.srcElement,'TH');
			cgeCancelDrag();
			moveFocus(getFocusField(),1,0);
			if (isFixedCol(getContainer(srcElement))) {
				var objContainer    = document.getElementById('gridheadKey');    //SR17724.16
				var objContainerDIV = document.getElementById('gridheadDIVKey'); //SR17724.16
			} else {
				var objContainer    = document.getElementById('gridhead');    	 //SR17724.16
				var objContainerDIV = document.getElementById('gridheadDIV');    //SR17724.16
			}
			if (!gridEventWithin(srcElement,objContainer,objContainerDIV,pevent.clientX)) { //SR17724 //SR17724.16
				//SR17724 if (srcElement.offsetLeft+srcElement.offsetWidth-pgridbodyDIV.scrollLeft-pevent.clientX>=5) {
				if (!manual) {
				    //if (GRIDNumPages==1) {		// SR11573 - sort only if one page
					sortColumn(pevent,pgridbody);
				}
			}
		}
		GRESIZING=false; //SR17724
	}
 	
	function GetBorderStyle(pthis) {
		var gridhead=document.getElementById('gridhead');  //SR17253
		//var strBorder="1px outset";
		if (pthis.id.split('_')[0]=='tdEnd') {
			strBorder='none'; //SR17724.19
		} else if (pthis.id==getFocusField()) {
				strBorder="2px solid black";
		} else {
			var strBorder="1px outset yellow"; //SR17401
		}
		return strBorder;
	}

	
	function SetFocus(pstrName) {
		var blnSharedForm=document.getElementById('sharedform').value;
		var gridDIV      =document.getElementById('gridDIV');  //SR17253

		document.getElementById('activegrid').value=pstrName;
		if ((pstrName=='')&&(blnSharedForm==1)) {
			//SR17253 gridDIV.style.border='2px solid gray';
			gridDIV.className='gDIVsh';
		} else {
			gridDIV.className='gDIVex';
			//SR17253 gridDIV.style.border='2px solid blue';
			if (document.getElementById('gridbody').rows.length==0) {			//SR17253
				//on first entry into an empty grid.  SR12409
				if ((event!=null) && (window.event.srcElement!=null) &&(window.event.srcElement.id == 'gridbodyDIV') && (event.srcElement.id.split("_")[0]!="CLICK")) { // SR14427
					if (document.getElementById('addnew').value==1) {
						var retval = EventValue(YUCI,YUSER,YFORM,"FIX","COMGridEdit31S","CREATE","6","");
						gridbodyDIV.onscroll();
					}
				}
			}
		}
		
		var strFocus=getFocusField()
		
		if ((strFocus!='')&&(strFocus!='td'+document.getElementById('activefield').value)) {
			//SR12058
			var objFocus=document.getElementById(getFocusField());

			if (objFocus!=null) {
				//objFocus.style.border=GetBorderStyle(objFocus);
			}
		}
	}
		
	function moveFocusTop() {
		var TBODY=document.getElementById('TBODY');	//SR17253
		if (TBODY.children.length>0) {
			moveFocus(TBODY.children[0].children[TBODY.children[0].children.length-1].id,1,0,1);
			moveFocus(36);
		}
		SetFocus('Grid'); //SR17724.11
	}
	
	function moveFocusBottom() {
		var TBODY=document.getElementById('TBODY');	//SR17253.2001-07-01
		
		if (TBODY.children.length>0) {
			moveFocus(TBODY.children[TBODY.children.length-1].children[TBODY.children[0].children.length-1].id,1,1,1);
			moveFocus(36);
		}
	}
 	
	function setDelayedFocus(pfocusField, pcount) {
		//TODO SR17630
		if (pcount >= 500)
			return;
		
		yfield = pfocusField.substring(2, 999);
		if (document.getElementById('td' + yfield) == null) {
			setTimeout('setDelayedFocus("' + pfocusField + '", ' +
				(pcount + 1) + ');', 10);
		} else {
			activateField(yfield);
		}
	}
 	
	function moveFocus(richt,fix,nofocus,normcolor) {
		var focusfieldNew;
		var blnFocusFlag;
		var objFocusField;
		var objRicht;
		var gridDIV    =document.getElementById('gridDIV');			//SR17253
		var gridbodyDIV=document.getElementById('gridbodyDIV');		//SR17253

		var gridhead2=document.getElementById('gridhead2');			//SR17630
		var gridhead=document.getElementById('gridhead');			//SR17630
		var focusfield=getFocusField();

		if ((richt!=focusfield)||(fix==1)) {
			if (fix == 1) {
]]><![CDATA[				setFocusField(richt);
				if (focusfield != '') { //SR17724.8
					objFF = document.getElementById(focusfield);
					if (objFF!=null) {
						//getRowKey(objFF.id).firstChild.style.fontWeight='normal'; //SR17724.8 
						if (richt!=focusfield) focusOff(objFF);
					}
				}
				if (richt!='') {
					objRicht=document.getElementById(richt);
					if (objRicht!=null) {
						//getRowKey(objRicht.id).firstChild.style.fontWeight='bold'; //SR17724.8 
						if (normcolor == 1) {
							if (richt!=focusfield) focusOn(objRicht);
						} else {
							objRicht.style.border='2px solid red';
							objRicht.value='+';
						}
						if ((nofocus!=1) && (objRicht.style.visibility!='hidden')&&(objRicht.className.indexOf('hide')==-1) ) {  //SR17475
							objRicht.focus();
						}
					}
				}

			} else if (focusfield!='') { // JW 1-Dec-2004: Make sure there is a line
				blnFocusFlag=false
				focusfieldNew=focusfield;
				objFocusField=document.getElementById(focusfield);
				if        (richt==9)  { focusfieldNew=moveFocusTabEnter(focusfield);  //BR014882
				} else if (richt==13) { focusfieldNew=moveFocusTabEnter(focusfield);  //BR014882
				} else if (richt==37) { focusfieldNew=moveFocusLeft(focusfield);
				} else if (richt==39) { focusfieldNew=moveFocusRight(focusfield);
				} else if (richt==38) { focusfieldNew=moveFocusUp(objFocusField);   //note object
				} else if (richt==40) { focusfieldNew=moveFocusDown(objFocusField); //note object
				} else if (richt==36) { focusfieldNew=moveFocusHome(focusfield);
				} else if (richt==35) { focusfieldNew=moveFocusEnd(focusfield);
				} else if (richt==34) { focusfieldNew=moveFocusPgDn(focusfield);
				} else if (richt==33) { focusfieldNew=moveFocusPgUp(focusfield);
				}
				if (focusfieldNew!=focusfield) {	//SR12775
					getRowKey(focusfield).firstChild.style.fontWeight='normal'; //SR17724.8 
					getRowKey(focusfieldNew).firstChild.style.fontWeight='bold'; //SR17724.8 
					retval=focusfieldNew;
					if ((retval!='') && (retval!=richt)) {
						setFocusField(retval);
						focusfieldNew=document.getElementById(retval);
						focusOff(objFocusField);
						focusOn(focusfieldNew);
						
						if (document.getElementById('GridVersion').value==1) {
							if (!isFixedCol(focusfieldNew.parentNode.id)) { //SR17724.18
								var Left=gridbodyDIV.scrollLeft;
								if (focusfieldNew.offsetLeft+focusfieldNew.offsetWidth>gridbodyDIV.scrollLeft+gridbodyDIV.clientWidth) {
									Left=-gridbodyDIV.clientWidth+focusfieldNew.offsetLeft+focusfieldNew.offsetWidth;
								}
								if ((focusfieldNew.offsetLeft)<(Left+10)) {
									Left=(focusfieldNew.offsetLeft);
									if (Left<200) {
										Left=0;
									}
								}
								if (Left!=gridbodyDIV.scrollLeft) gridbodyDIV.scrollLeft=Left;
							}
						} else {
							if ((focusfieldNew.offsetLeft+focusfieldNew.offsetWidth)>(gridDIV.offsetWidth+gridDIV.offsetLeft+gridbodyDIV.scrollLeft)) {
								gridbodyDIV.scrollLeft=(focusfieldNew.offsetLeft+focusfieldNew.offsetWidth-gridDIV.offsetWidth);
							}
							if ((focusfieldNew.offsetLeft)<(gridbodyDIV.scrollLeft+10)) {
								gridbodyDIV.scrollLeft=(focusfieldNew.offsetLeft);
								if (gridbodyDIV.scrollLeft<200) {
									gridbodyDIV.scrollLeft=0;
								}
							}
						}
						if ((focusfieldNew.offsetTop+focusfieldNew.offsetHeight)>(gridbodyDIV.offsetHeight+gridbodyDIV.scrollTop)) {
							gridbodyDIV.scrollTop=focusfieldNew.offsetTop+gridbodyDIV.scrollTop;
						} else if ((focusfieldNew.offsetTop)<(gridbodyDIV.scrollTop)) {
							gridbodyDIV.scrollTop=focusfieldNew.offsetTop;
						}
						//setTimeout('setDelayedFocus("' + retval + '", 0);', 10); //SRBR014991
					}
				}
			}
			if (document.getElementById('gridhead2')!=null) {
				var gridheadDIVKey=document.getElementById('gridheadDIVKey');		//SR17724.6
				var gridheadDIV2Key=document.getElementById('gridheadDIV2Key');		//SR17724.6
				if ((getFocusField()=='') || (document.getElementById(getFocusField()).parentNode._Form) == YFORM) {
					gridhead2.style.display = 'none';		//SR14484
					gridhead.style.display = 'block';
					if (gridheadDIV2Key!=null) {
						gridheadDIV2Key.style.display = 'none';		//SR14484 	//SR17724.26
						gridheadDIVKey.style.display = 'block';					//SR17724.26
					}
				} else {
					gridhead.style.display = 'none';		//SR14484
					gridhead2.style.display = 'block'; //SR17724
					if (gridheadDIV2Key!=null) {
						gridheadDIVKey.style.display = 'none';		//SR14484		//SR17724.26
						gridheadDIV2Key.style.display = 'block'; //SR17724			//SR17724.26
					}
				}
			}
			gridbodyDIV.onscroll();   //SR12798
		}
		function focusOn(pobj) {
			cor = pobj.style.borderColor
			if (cor!=corCampoObrigatorio){
				cor="black"
			}
			pobj.style.border='2px solid '+cor;
			getRowKey(pobj.id).firstChild.style.fontWeight='bold'; //SR17724.8 
			if ((isFF())&&(pobj.className=='TDfld')) pobj.style.width=(pobj.clientWidth-2)+'px';
		}
		function focusOff(pobj) {
			cor = pobj.style.borderColor
			if (cor=="black"){
				cor = "white"
			}
			pobj.style.border='1px outset '+cor;
			getRowKey(pobj.id).firstChild.style.fontWeight='normal'; //SR17724.8 
			if ((isFF())&&(pobj.className=='TDfld')) pobj.style.width=(pobj.clientWidth+2)+'px';
		}
		function moveFocusLeft(pfocusfield) {
			var focusfieldNew=pfocusfield;
			var objPrev;
			var blnFlag=true;
			while (blnFlag==true) {
				//SR17724.7 objPrev = document.getElementById(focusfieldNew).previousSibling;
				objPrev = getPreviousSiblingHorizontal(document.getElementById(focusfieldNew)); //SR17724.7 
				if (objPrev!=null) {
					//SR17724.26 if (objPrev.id == '') {
					if (objPrev.id.search('tdY') != 0) { //SR17724.26
						focusfieldNew=pfocusfield;
						blnFlag=false;
					} else if (objPrev.id.search("Key")>-1) {
						focusfieldNew=pfocusfield;
						blnFlag=false;
					} else {
						if (!isHiddenCol(objPrev)) { // SR11848: Keep going if hidden
							//if (objPrev.getAttribute("Locked")) {
							if (objPrev.Locked) {	//SR17xxxx
								if (blnFocusFlag==false) {
									blnFlag=false;
								}
							} else {
								blnFlag=false;
							}
						}
						focusfieldNew=objPrev.id;
					}
				} else {
					focusfieldNew=pfocusfield;
					blnFlag=false;
				}
			}
			return focusfieldNew;
		}
		
		function moveFocusRight(pfocusfield) {
			var focusfieldNew=pfocusfield;
			var objNext;
			var blnFlag=true;
			while (blnFlag==true) {
				//SR17724 objNext = document.getElementById(focusfieldNew).nextSibling;
				objNext = getNextSiblingHorizontal(document.getElementById(focusfieldNew)); //SR17724
				if (objNext == null) {
					focusfieldNew=pfocusfield;
					blnFlag=false;
				} else {
					if (!isHiddenCol(objNext)) { // SR11848: Keep going if hidden
					//	if (objNext.getAttribute("Locked")) {
						if (objNext.Locked) {	//SR17xxxx
							if (blnFocusFlag==false) {
								blnFlag=false;
							}
						} else {
							blnFlag=false;
						}
					}
					focusfieldNew=objNext.id;
				}
			}
			return focusfieldNew;
		}
 
		function moveFocusUp(pobjFocusField) {
			var focusfieldNew=pobjFocusField.id;
		//	var previousSibling=pobjFocusField.parentNode.previousSibling;
			var previousSibling=getPreviousSibling(pobjFocusField.parentNode);
			var quit=(previousSibling==null);
			
			while (!quit) {
				if (previousSibling==null) {
					quit=true;
				} else {
					// This handles non-displayed lines
					if (previousSibling.style.display!="none") {
						try {
							focusfieldNew=previousSibling.children[pobjFocusField.cellIndex].id;
							quit=true;
						} catch (Exception) {
							previousSibling=getPreviousSibling(previousSibling);
						}
					} else {
						//previousSibling=previousSibling.previousSibling;
						previousSibling=getPreviousSibling(previousSibling);
						if (previousSibling==null) {
							quit=true;
						}
					}
				}
			}				
			return focusfieldNew;
		}
		function isFixedCol(pid) {
			return (pid.indexOf('Key')>0); //SR17724
		}
		function getRow(pid) { //SR17724.5 //SR17724.7
			return document.getElementById(getRowId(pid));
			//return document.getElementById(document.getElementById(pid).parentNode.id.split('Key')[0]);			
		}
		function getRowId(pid) { //SR17724.7
			var obj = document.getElementById(pid);
			
			while (obj!='') {
				if (obj.id.substring(0,7)=='GridRow') {
					if (obj.id.charAt(obj.id.length-1)!='a') {
						break;
					}
				}
				obj=obj.parentNode;
			}
			if (isFixedCol(obj.id)) {
				if (isExpanded(pid)) {
					result=obj.id.split('aKey')[0]; //SR17724.12
				} else {
					result=obj.id.split('Key')[0];  //SR17724.12
				}
			} else {
				result=obj.id
			}
			//SR17724.8 if (currentHeader().id=='gridhead2') { //SR17724.5
			if (isExpanded(pid)) { //SR17724.8
				result=result+'a';				   //SR17724.5
			}									   //SR17724.5
			return result
		}
		function getRowKey(pid) { //SR17724.7 //SR17724.8
			if (document.getElementById('GridVersion').value!=1) {
				return document.getElementById(getRowId(pid));
			} else {
				return document.getElementById(getRowId(pid)+'Key');
			}
		}
		function getNextSiblingHorizontal(pobjNode) {
			var objNode=pobjNode;
			if (currentHeader().id=='gridhead') {
				if ((objNode.nextSibling==null)&&(isFixedCol(objNode.parentNode.id))) { //SR17724
 					objNode=getRow(objNode.id).children[0]; //SR17724.5
				} else {
					objNode=objNode.nextSibling;
				}
			} else {
				if ((objNode.nextSibling==null)&&(isFixedCol(objNode.parentNode.id))) { //SR17724.5
 					objNode=getRow(objNode.id).children[0];
 					//objNode=getRow(objNode.id).children[0].children[0].children[0].children[0].children[0]; //SR17724.5
				} else { //SR17724.5
					objNode=objNode.nextSibling;
				}
			}
			return objNode;
		}
		function getPreviousSiblingHorizontal(pobjNode) { //SR17724.7
			var objNode=pobjNode;
			if (currentHeader().id=='gridhead') {
				if ((objNode.previousSibling==null)&&(!isFixedCol(objNode.parentNode.id))) { //SR17724
 					objNode=getRowKey(objNode.id).lastChild; //SR17724.5
				} else {
					objNode=objNode.previousSibling;
				}
			} else {
				if ((objNode.previousSibling==null)&&(!isFixedCol(objNode.parentNode.id))) { //SR17724.5
 					objNode=getRowKey(objNode.id).lastChild; //SR17724.5
				} else { //SR17724.5
					objNode=objNode.previousSibling;
				}
			}
			return objNode;
		}
		function getNextSibling(pobjNode) {
			var objNode=pobjNode;
			
			var blnExpanded=isExpanded(pobjNode.children[0].id);
			while (true) {
				if (currentHeader().id=='gridhead') {
					objNode=objNode.nextSibling;
				} else {
					try {
						objNode=objNode.parentNode.parentNode.parentNode.parentNode.nextSibling.children[0].children[0].children[0].children[0];
					} catch (Exception) {
						objNode=null;
					}
				}
				if (objNode==null) break;
				if (isExpanded(objNode.children[0].id)==blnExpanded) break;
			}
			return objNode;
		}
		
		function getPreviousSibling(pobjNode) {
			var objNode=pobjNode;

			if (currentHeader().id=='gridhead') {
				objNode=objNode.previousSibling;
				if ((objNode!=null) && (objNode.nodeType!=1)){
					objNode=getPreviousSibling(objNode); //SR17404
				}
			} else {
				try {
					objNode=objNode.parentNode.parentNode.parentNode.parentNode.previousSibling.children[0].children[0].children[0].children[0];
				} catch (Exception) {
					objNode=null;
				}
			}
			return objNode;
		}
		
		function moveFocusDown(pobjFocusField) {
			var focusfieldNew=pobjFocusField.id;
		//	var nextSibling=pobjFocusField.parentNode.nextSibling;
			var nextSibling=getNextSibling(pobjFocusField.parentNode);
			var quit=(nextSibling==null);
			
			while (!quit) {
				
				if (nextSibling==null) {
					quit=true;
				} else {
					// This handles non-displayed lines
					if (nextSibling.style.display!="none") {
						try {
							focusfieldNew=nextSibling.children[pobjFocusField.cellIndex].id;
							quit=true;
						} catch (Exception) {
							nextSibling=getNextSibling(nextSibling);
						}
					} else {
						//nextSibling=nextSibling.nextSibling;
						nextSibling=getNextSibling(nextSibling);
						if (nextSibling==null) {
							quit=true;
						}
					}
				}
			}		
			return focusfieldNew;
		}		
				
		function moveFocusTabEnter(pfocusfield) {
			var focusfieldNew=pfocusfield;
			var nextSibling;
			var objChildren=document.getElementById(pfocusfield).parentNode.children;
			var moving;
			blnFocusFlag=true  // SR11186
			
			do {
				//if ((event.shiftKey==false)&&(event.shiftLeft==false)) {  //SR17410
				//if ((event.shiftKey==false||typeof(event.shiftKey)=='undefined')&&(event.shiftLeft==false||typeof(event.shiftLeft)=='undefined')) {
				if (!event||(!event.shiftKey)) { //Previous line just a complicated way of doing this???
					
					//SR17724.4 if (objChildren[objChildren.length-1].id == document.getElementById(pfocusfield).id) {
					if (objChildren[objChildren.length-1].id == pfocusfield) { 						//SR17724.4
						if (isFixedCol(document.getElementById(pfocusfield).parentNode.id)) {		//SR17724.4
							focusfieldNew=moveFocusRight(pfocusfield);
							if (focusfieldNew==pfocusfield) focusfieldNew=moveFocusTabNextRow(pfocusfield); //SR17724.12
						} else {
							focusfieldNew=moveFocusTabNextRow(pfocusfield);
						}
					} else {
						focusfieldNew=moveFocusRight(pfocusfield);
						if (pfocusfield==focusfieldNew) {
							focusfieldNew=moveFocusTabNextRow(pfocusfield);
						}
					}
				} else {
					if (objChildren[0].id==pfocusfield) { //SR17724.28
						if (!isFixedCol(document.getElementById(pfocusfield).parentNode.id)) {		//SR17724.4
							focusfieldNew=moveFocusLeft(pfocusfield);
							if (focusfieldNew==pfocusfield) focusfieldNew=moveFocusTabPrevRow(pfocusfield); //SR17724.12
						} else {
							focusfieldNew=moveFocusTabNextRow(pfocusfield);
						}
					} else {
						focusfieldNew=moveFocusLeft(pfocusfield);
						if (pfocusfield==focusfieldNew) {
							focusfieldNew=moveFocusTabPrevRow(pfocusfield);
						}
					}
				}
				// SR11186
				if (pfocusfield==focusfieldNew) {  // no more enabled fields
					focusfieldNew = focusfield
					moving=false
				} else {
					pfocusfield=focusfieldNew
					//moving = document.getElementById(focusfieldNew).getAttribute("Locked")
					moving = document.getElementById(focusfieldNew).Locked 	//SR17xxxx
				}
			} while (moving)
			return focusfieldNew;
		}
		
		function moveFocusTabNextRow(pfocusfield) {
			// Move down, if can - then move home.
		//	var retval
			var focusfieldNew = moveFocusDown(document.getElementById(pfocusfield)); //SR17724.12
			if (focusfieldNew == pfocusfield) {
				
				if (GRIDPage!=GRIDNumPages) {					//SR12775
					GoToPage(GRIDPage+1,GRIDNumPages,"T",0);
					
				} else if (document.getElementById('addnew').value==1) {
					// Can't move down, but can create new row. so do it
					//retval = EventValue(YUCI,YUSER,YFORM,"FIX","COMGridEdit31S","CREATE","6","");
					window.setTimeout('EventValue(YUCI,YUSER,YFORM,"FIX","COMGridEdit31S","CREATE","6","")',0);	//SR14550
				}
			} else {
				focusfieldNew = moveFocusHome(focusfieldNew);
			}
			return focusfieldNew;
		}
		
		function moveFocusTabPrevRow(pfocusfield) {
			// Move up, if can - then move to end.
			var focusfieldNew = moveFocusUp(document.getElementById(pfocusfield))
			if (focusfieldNew != pfocusfield) {
				focusfieldNew = moveFocusEnd(focusfieldNew)
			} else if (GRIDPage!=1) {					//SR12775
				GoToPage(GRIDPage-1,GRIDNumPages,"E",0)
			}
			return focusfieldNew;
		}
		function moveFocusHome(pfocusfield) {
			var firstFld;
			var focusfieldNew=pfocusfield;
			var objFocus=document.getElementById(pfocusfield)
			if (objFocus!=null && objFocus.firstChild != null) {
				if (document.getElementById('GridVersion').value==1) {
					var intFixedColumns=getFixedColumns(pfocusfield); //SR17724.12
					if (intFixedColumns>0) {
						var objRow=document.getElementById(document.getElementById(pfocusfield).parentNode.id.split('Key')[0]+'Key');
						var intFirstFixedColumn = objRow.children.length-intFixedColumns;
					} else {
						var objRow=document.getElementById(document.getElementById(pfocusfield).parentNode.id.split('Key')[0]);
						var intFirstFixedColumn = 0;
					}
					if (isExpanded(pfocusfield)) {
						firstFld = objRow.children[intFirstFixedColumn];
					} else {
						firstFld = objRow.children[intFirstFixedCol]]><![CDATA[umn];
					}
					if (firstFld==n]]><![CDATA[ull) {
						//All fixed columns may be hidden SR17724.12
						var objRow=document.getElementById(document.getElementById(pfocusfield).parentNode.id.split('Key')[0]);
						var intFirstFixedColumn = 0;
						firstFld = objRow.children[intFirstFixedColumn];
					}
					focusfieldNew=firstFld.id; // SR11247
				
					if (isHiddenCol(firstFld)) { // SR11848: Move over if hidden
						focusfieldNew = moveFocusRight(focusfieldNew);
					}
				} else {
					var i = 0;  //SR17724.13
					do { // JW Don't go on primary keys
						firstFld = document.getElementById(pfocusfield).parentNode.children[i++];
						//SR177234.13 } while (firstFld.id=='')
					} while (firstFld.className.substring(0,5)!='TDfld')  //SR177234.13 
					focusfieldNew=firstFld.id; // SR11247
				
					if (isHiddenCol(firstFld)) { // SR11848: Move over if hidden
						focusfieldNew = moveFocusRight(focusfieldNew);
					}
				}
			}
			return focusfieldNew;
		}
	
		function moveFocusEnd(pfocusfield) {
			var lastFld;
			var focusfieldNew=pfocusfield;
			var objChildren;

			if (!isFixedCol(getRow(pfocusfield).id)) {						//SR17724.5
				pfocusfield=getRow(pfocusfield).children[0].id;				//SR17724.5
			}																//SR17724.5
			if (document.getElementById(pfocusfield).lastChild != null) {   //SR17724.5
			//	objChildren=document.getElementById(pfocusfield).parentNode.parentNode.lastChild.children;
				objChildren=document.getElementById(pfocusfield).parentNode.children;
				lastFld=objChildren[objChildren.length-1];
				focusfieldNew=lastFld.id;
				if (isHiddenCol(lastFld)) {// SR11848: Move over if hidden
					focusfieldNew = moveFocusLeft(focusfieldNew);
				}
			}
			return focusfieldNew;
		}
		
		function moveFocusPgDn(pfocusfield) {
			var focusfieldNew=pfocusfield;

			if (document.getElementById('GridVersion').value==1) {
				var parentNode=document.getElementById(pfocusfield).parentNode;
				if ((parentNode.rowIndex + 10) >= parentNode.parentNode.children.length) {	// JW >= not >
					var focusfieldNew = parentNode.parentNode.children[parentNode.parentNode.children.length-1].children[document.getElementById(pfocusfield).cellIndex].id;
				} else {
					var focusfieldNew = parentNode.parentNode.children[parentNode.rowIndex + 10].children[document.getElementById(pfocusfield).cellIndex].id;
				}

				var Top=gridbodyDIV.scrollTop;
				if (focusfieldNew.offsetTop+focusfieldNew.offsetHeight>gridbodyDIV.scrollTop+gridbodyDIV.clientHeight) {
					Top=-gridbodyDIV.clientHeight+focusfieldNew.offsetTop+focusfieldNew.offsetHeight;
				}
				if ((focusfieldNew.offsetTop)<(Top+10)) {
					Top=(focusfieldNew.offsetTop);
					if (Top<200) {
						Top=0;
					}
				}
				if (Top!=gridbodyDIV.scrollTop) gridbodyDIV.scrollTop=Top;
			} else {
				var parentNode=document.getElementById(pfocusfield).parentNode;
				if ((parentNode.rowIndex + 10) >= parentNode.parentNode.children.length) {	// JW >= not >
					parentNode.parentNode.children[parentNode.parentNode.children.length-1].children[document.getElementById(pfocusfield).cellIndex].scrollIntoView(true);
					var focusfieldNew = parentNode.parentNode.children[parentNode.parentNode.children.length-1].children[document.getElementById(pfocusfield).cellIndex].id;
				} else {
					parentNode.parentNode.children[parentNode.rowIndex + 10].children[document.getElementById(pfocusfield).cellIndex].scrollIntoView(true);
					var focusfieldNew = parentNode.parentNode.children[parentNode.rowIndex + 10].children[document.getElementById(pfocusfield).cellIndex].id;
				}
			}
			return focusfieldNew;
		}
		
		function moveFocusPgUp(pfocusfield) {
			var focusfieldNew=pfocusfield;
			var parentNode=document.getElementById(pfocusfield).parentNode;
			if ((parentNode.rowIndex - 10) < 0) {
				var focusfieldNew = parentNode.parentNode.children[0].children[document.getElementById(focusfield).cellIndex].id;
			} else {
				var focusfieldNew = parentNode.parentNode.children[parentNode.rowIndex - 10].children[document.getElementById(focusfield).cellIndex].id;
			}
			return focusfieldNew;
		}
	}
	//----------  End MoveFocus Code-----------------------------------
	function canExpand() {
		return document.getElementById('THkey_Expand')!=null; //SR17724.29
	}
	function isExpanded(pid) { //SR17724.8
		return document.getElementById(pid).className.indexOf('TDfldEx')>-1;
	}
	function isNewGrid() {
		return (document.getElementById('GridVersion').value==1); //SR17724
	}
	function getFixedColumns(pid) { //SR17724.12
		var intFixedColumns;
		if (isExpanded(pid)) {
			intFixedColumns=document.getElementById('FixedColumnsExpanded').value;
		} else {
			intFixedColumns=document.getElementById('FixedColumns').value;
		}
		return intFixedColumns; 
	}
 
	function StoreFocus() {
		var yfield=getFocusField().substring(2,999);
		var retval = EventValue(YUCI,YUSER,YFORM,'FIX','COMGridEdit31S','SETFOCUSFIELD','6',yfield);
	}
		
	function deleteGrid() {
		// SR13655: added to increase speed of delete
		setFocusField('');
		var objGrid = document.all.gridbody;
		while (objGrid.rows.length>0) {
			objGrid.deleteRow();
		}
		GoToPage(1,1,"",0);
	}
 
	function deleteRow(strCell) {
		//TODO SR17630
		var previousFF = getFocusField();
		var objCell=document.getElementById('td'+strCell);
		//SR17630 alert(objCell.parentNode._Form);
		var intLine=objCell.parentNode.rowIndex;
		var strDelete='';
		var strRef;
		var TBODY=document.getElementById('TBODY');	//SR17253.2001-07-01

	  if ('td'+strCell == previousFF) {
		  moveFocus(40);
		  if (getFocusField()==previousFF) {
			  moveFocus(38);
			  if (getFocusField()==previousFF) {
				  setFocusField('');
				  if (objCell.parentNode.id.indexOf('_')!=-1) {
					  strRef=document.getElementById(objCell.parentNode.id.split('_')[0]).rowIndex;
					  moveFocus(getFirstCell(TBODY.rows[strRef]),1,1,1);
				  }
			  }
		  }
	  }
	  intLine=getGridRow(objCell);
 
	  expandObject(TBODY.rows[intLine].id);
	  if (TBODY.rows[intLine].id.indexOf('_')==-1) {
		  for (var i = intLine+1; i < document.getElementById('gridbody').rows.length; i++) {
			  if (document.getElementById('gridbody').rows[i].id.indexOf('_')==-1) {
				  break;
			  } else {
		  	  	strCell=getFirstCell(document.getElementById('gridbody').rows[i].children[0].children[0].children[0].children[0]).substring(2,9999);
		  	    strDelete=strCell+';'+i+','+strDelete;
		 	  }
		  }
	  }
	  if (strDelete!='') {
		  for (i = 0; i < (strDelete.split(',').length-1); i++) {
			  strCell=strDelete.split(',')[i]
			  retval = EventValue(document.WWW.YUCI.value,document.WWW.YUSER.value,document.getElementById('gridbody').rows[strCell.split(';')[1]].children[0].children[0].children[0].children[0]._Form,'FIX','COMGridEdit31S','KILL','6',strCell);
		  }
	  }	 
	  //SR17724.10 document.all.gridbody.deleteRow(intLine);
	  document.getElementById('gridbody').deleteRow(intLine); //SR17724.10 
	  if (document.getElementById('gridbodyKey')!=undefined) {
		  document.getElementById('gridbodyKey').deleteRow(intLine); //SR17724.10 
		  cgeOnScroll();											 //SR17724.10
	  }
	  
	  if (intLine==0) { resetColumnWidths(); }
	}

	function getFirstCell(objBODY) {
		var id='';
		if (objBODY.id.indexOf('Key')!=-1) {
			var id=getFirstCellEx(objBODY);
		} else {
			var id=getFirstCellEx(document.getElementById(objBODY.id+'Key'));
		}
		if (id=='') id=getFirstCellEx(document.getElementById(objBODY.id.replace('Key','')));
		return id;
	}
	//function getFirstCellEx1(objBODY) { //SR17724.A
	//	var id='';
	//	if ((objBODY!=null)&&(objBODY.rows!=null)&&(objBODY.rows[0].cells!=null)) {
	//		//if (objBODY.id.indexOf('_')!=-1) objBODY=objBODY.children[0].children[0].children[0].children[0]
	//		for (var i = 0; i < objBODY.rows[0].cells.length; i++) {
	//			objCell=objBODY.rows[0].cells[i];
	//			if (objCell.className.indexOf('TDfld')!=-1) {
	//				if (!isHiddenCol(objCell)) {
	//					id=objCell.id;
	//					break;
	//				}
	//			}
	//		}
	//	}
	//	return id;
	//}
  	function getFirstCellEx(objBODY) {
		var id='';
		if ((objBODY!=null)&&(objBODY.cells!=null)) {
			//if (objBODY.id.indexOf('_')!=-1) objBODY=objBODY.children[0].children[0].children[0].children[0]
			for (var i = 0; i < objBODY.cells.length; i++) {
				objCell=objBODY.cells[i];
				if (objCell.className.indexOf('TDfld')!=-1) {
					if (!isHiddenCol(objCell)) {
						id=objCell.id;
						break;
					}
				}
			}
		}
		return id;
  	}
	function getGridRow(pobj) {
		var idRow;
		var parentNode;
		var arr;
		
		idRow='';
		if (pobj!=null) {
			idRow=pobj.id;
			if ((idRow.substr(0,7)=='GridRow')&&(idRow.substr(idRow.length-1)!='a')) {
				idRow=pobj.rowIndex;
			} else {
				idRow=getGridRow(pobj.parentNode);
			}
		}
		return idRow;
	}
	
	function resetColumnWidths() {
		
		var gridheadRow=document.getElementById('gridheadRowKey');		//SR17253.2010-07-01
		var gridbody   =document.getElementById('gridbodyKey');	    //SR17253.2010-07-01
		var intCells   =gridheadRow.children.length;
		for (var j=0;j< gridbody.rows.length;j++) {
			for (var i = 0; i < intCells; i++) {
				if (gridbody.rows[j].cells[i]!=null) {
					tamanho = $(gridheadRow.cells[i]).width() + 1;
					gridbody.rows[j].cells[i].style.width=tamanho;
					gridbody.rows[j].cells[i].style.maxWidth=tamanho;
					gridbody.rows[j].cells[i].style.minWidth=tamanho;
				}
			}
		}


		var gridheadRow=document.getElementById('gridheadRow');		//SR17253.2010-07-01
		var gridbody   =document.getElementById('gridbody');	    //SR17253.2010-07-01
		var intCells   =gridheadRow.children.length;
		for (var j=0;j< gridbody.rows.length;j++) {
			for (var i = 0; i < intCells; i++) {
				if (gridbody.rows[j].cells[i]!=null) {
					tamanho = $(gridheadRow.cells[i]).width() + 1;
					gridbody.rows[j].cells[i].style.width=tamanho;
					gridbody.rows[j].cells[i].style.maxWidth=tamanho;
					gridbody.rows[j].cells[i].style.minWidth=tamanho;
				}
			}
		}
	}
	
	// 10-Mar-2005 JW	SR11848: is the column that this cell is in, hidden?
	function isHiddenCol(objCell) {
		//return (objCell.style.display=='none');  //BR014904 25-Mar-2008 reverted
		var Key="";												//SR17724.20
		if (isFixedCol(objCell.parentNode.id)) Key='Key';		//SR17724.20
		if (objCell.id.split('_')[0]=='tdEnd') {
			return true; //SR17724.19
		    //} else if (currentHeader()==document.getElementById('gridhead'+Key)) {
		} else if (!isExpanded(objCell.id)) {
			return (document.getElementById('gridheadRow'+Key).children[objCell.cellIndex].Hidden);
		} else {
			return document.getElementById('gridheadRow2'+Key).children[objCell.cellIndex].Hidden;
		}
	}
	
 	//-->
	//</script>
	>
	quit
	
	// function moveFocusTab(pfocusfield) { //BR014882
 		/* //BR014882
		// BR014722 vvv
		function moveFocusEnter(pfocusfield) { // BR014722
			var focusfieldNew=pfocusfield;
			var nextSibling;
			var objChildren=document.getElementById(pfocusfield).parentNode.children;
			var moving;  //BR014882
			blnFocusFlag=true  
			do {  //BR014882
				if (objChildren[objChildren.length-1].id == document.getElementById(pfocusfield).id) {
					focusfieldNew=moveFocusTabNextRow(pfocusfield);
				} 
				else {
					focusfieldNew=moveFocusRight(pfocusfield);
					if (pfocusfield==focusfieldNew) {
						focusfieldNew=moveFocusTabNextRow(pfocusfield);
					}
				}
					
				if (pfocusfield==focusfieldNew) {  // no more enabled fields
					focusfieldNew = focusfield
					moving=false  //BR014882
				} else {
					pfocusfield=focusfieldNew
					//moving = document.getElementById(focusfieldNew).getAttribute("Locked")  //BR014882
					moving = document.getElementById(focusfieldNew).Locked 	//SR17xxxx
				}
				
			}while (moving)  //BR014882
			
			return focusfieldNew;							
		}	
		// BR014722 ^^^ 
		*/ //BR014882]]></Routine>
</Export>