<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWFORMCrossBrowserSupportProperties" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWFORMCrossBrowserSupportProperties

Setup()
	;-------------------------------------------------------------------------------
	; Code broken out of WWWFORMCrossBrowserSupport
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 03-Sep-2013	shobby		CORE-213.6: Strip extract Firefox tabs from the innerTEXT string.
	; 28-Oct-2011	shobby		SR17725: Bring the FF activeElement behaviour in to line
	;							    with IE.
	; 27-Sep-2011	shobby		SR17853: Created
	;-------------------------------------------------------------------------------
	quit
	&js<
		//If browser doesn't have an outerHTML property (firefox) then let's create a whole
		//heap of things to make firefox accept IE specific syntax.
		var _emptyTags = {
		   "IMG":   true,
		   "BR":    true,
		   "INPUT": true,
		   "META":  true,
		   "LINK":  true,
		   "PARAM": true,
		   "HR":    true
		};
		HTMLElement.prototype.__defineSetter__("oldWidth", function (sText) {
			this.setAttribute("oldWidth",sText);
		});
		HTMLElement.prototype.__defineGetter__("oldWidth", tmpGet = function () {
			return this.getAttribute("oldWidth");
		});
		HTMLElement.prototype.__defineSetter__("innerText", function (sText) {
			this.innerHTML = convertTextToHTML(sText);
			return sText;
		});
		
		var tmpGet;
		HTMLElement.prototype.__defineGetter__("innerText", tmpGet = function () {
			var r = this.ownerDocument.createRange();
			r.selectNodeContents(this);
			r=r.toString(); 			//CORE-233.6
			return r.replace('\n',' '); //CORE-233.6
		});
		
		HTMLElement.prototype.__defineSetter__("outerText", function (sText) {
			this.outerHTML = convertTextToHTML(sText);
			return sText;
		});
		HTMLElement.prototype.__defineGetter__("outerText", tmpGet);
		
		HTMLElement.prototype.insertAdjacentText = function (sWhere, sText) {
			this.insertAdjacentHTML(sWhere, convertTextToHTML(sText));
		};
		HTMLElement.prototype.__defineGetter__("outerHTML", function () {
			var attrs = this.attributes;
			var str = "<" + this.tagName;
			for (var i = 0; i < attrs.length; i++)
				str += " " + attrs[i].name + "=\"" + attrs[i].value + "\"";
			
			if (_emptyTags[this.tagName])
				return str + ">";
			
			return str + ">" + this.innerHTML + "</" + this.tagName + ">";
		});
		HTMLElement.prototype.__defineSetter__("outerHTML", function (sHTML) {
			var r = this.ownerDocument.createRange();
		//	alert(this.innerHTML);
			r.setStartBefore(this);
			var df = r.createContextualFragment(sHTML);
			this.parentNode.replaceChild(df, this);
		});
		Event.prototype.__defineSetter__("cancelBubble", function (b) {
   			if (b) this.stopPropagation();
		});
		Event.prototype.__defineSetter__("returnValue", function (b) {
			if (!b) this.preventDefault();
		});
		Event.prototype.__defineGetter__("srcElement", function () {
   			var node = this.target;
   			while (node.nodeType != 1) node = node.parentNode;
   			return node;
		});
		Event.prototype.__defineGetter__("toElement", function () {  //SR17439
			if (this.type=='mouseout') {
				return this.relatedTarget;
			} else if (this.type=='mouseover') {
				return this.target;
			}
		});
		//Event.prototype=window.event;
		Event.prototype.__defineGetter__("fromElement", function () {  //SR17439
			if (this.type=='mouseout') {
				return this.target;
			} else if (this.type=='mouseover') {
				return this.relatedTarget;
			}
		});
	    Event.prototype.__defineGetter__("x", function() {
	        return this.pageX;
	    });
	    Event.prototype.__defineGetter__("y", function() {
	        return this.pageY;
	    });
		
	    Event.prototype.__defineGetter__("offsetX", function() {
	        return this.layerX;
	    });
	    Event.prototype.__defineGetter__("offsetY", function() {
	        return this.layerY;
	    });
		
		//Event.prototype.__defineGetter__("screenX", function(a) { //SR17454
			//Don't appear to be able to override built in properties.
		//	return 'X';
		//});
		
		//Event.prototype._screenX=Event.screenX;
		//Event.prototype.__defineGetter__("screenX", function() { //SR17454
		//	alert(1);
		//	return 1;
		//});
		//Object.defineProperty(Event.prototype, 'target', {
  		//	get: function() {
    	//		return this.srcElement;
  		//	}
		//});
		
		var allGetter = function () {  //SR17425
			var a = this.getElementsByTagName("*");
			var node = this;
			a.tags = function (sTagName) {
				return node.getElementsByTagName(sTagName);
			};
			return a;
		};
		HTMLDocument.prototype.__defineGetter__("all", allGetter);
		HTMLElement.prototype.__defineGetter__("all", allGetter);
		
		HTMLDocument.prototype.__defineGetter__("frames", function() {  //SR17454
			return document.getElementsByTagName('FRAME');
		});
		
		HTMLDocument.prototype.__defineGetter__("activeElement", function() {
	        return window.event.srcElement; //SR17725
	    });


		HTMLFrameElement.prototype._location=HTMLFrameElement.location;
		HTMLFrameElement.prototype.__defineSetter__("location", function(locn) { //SR17454
			this._location=locn;
			this._location.href=locn.href;
		});
		HTMLFrameElement.prototype.__defineGetter__("location", function() {
			return this;
		});
		
		event=Event; //CORE-81
		//Event.prototype.__defineGetter__("KeyCode", function() {
		//	//alert(event.keyCode);
		//	return event.keyCode;
		//});
	>
	quit
]]></Routine>
</Export>