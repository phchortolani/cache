<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31J4" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[COMGridEdit31J4
	
CreateJavascript(pdteDate="")
	;-------------------------------------------------------------------------------
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 02-Apr-2014	shobby	SESDF-1237: Better management of timeout on cgeShowGrid	
	; 11-Dec-2013	shobby	SESDF-672.4: Limit the times that the grid will be resized during construction.
	; 24-Oct-2013	shobby	SESDF-672.2: Remove previous change.  Messes up cellIndex and causes errors on grid navigation.
	; 22-Oct-2013	shobby	SESDF-672.1: cgeBodyFieldCell. Display none on hidden fields.
	; 22-Oct-2013	shobby	SESDF-672.1: Missing parameter when cgeShowGrid calls itself.
	; 21-Oct-2013	shobby	SESDF-672: Additonal parameter if AutoResizeRows on cgeShowGrid
	; 24-Sep-2013	shobby	IPIRANGA-173.1: Put a null event on click of empty expand cells.
	; 18-Sep-2013	shobby	IPIRANGA-162.4b: Removed Javascript error when focus field not defined.
	; 04-Sep-2013	shobby	CORE-233.11: cgeOnScroll. Removed DIVSpaceHolder
	; 15-Aug-2013	shobby	CORE-233.4: Remove border from hidden cells.
	; 08-Jul-2013	shobby	CORE-142.2: cgeBodyFieldCell corrected javascript error in Firefox.
	; 01-Jul-2013	shobby	CORE-142: Make sure columns that have 0 width do not display in Firefox.
	; 27-Jun-2013	shobby	IPIRANGA-125: Hide permanent buttons if column is hidden.
	; 26-Feb-2013	shobby	IPIRANGA-108: Corrected a javascript error
	; 31-Jan-2013	shobby	IPIRANGA-104: Check that object exists.
	; 08-Nov-2012	shobby	SR18182: WWW2 may be a DIV instead of a FORM so cursor
	;								 manipulation has been changed.
	; 08-Nov-2012	shobby	SR18190: cgeShowGrid.  Retry if grid is not ready to show.
	; 11-Sep-2012	shobby	SR18084.1: Rework to prevent multiple messages if item is not
	;								 found.
	; 17-Aug-2012	shobby	SR18084: enterScan so scan will be triggered
	;								 by enter key.
	; 21-Jun-2012	shobby	SR18026: Generates an event on ChangeRow if defined.
	; 18-Apr-2012	shobby	SR17995: cgeShowGrid.  Grid is initially hidden until it's 
	;							width can be determined, then shown by this function.
	; 26-Mar-2012	shobby	SR17724.52: Better alignment using pixels instead of points
	;							when creating headings.
	; 05-Mar-2012	shobby	SR17724.24: cgeOnScroll. Some changes to position the grid
	;							spacer.
	; 04-Mar-2012	shobby	SR17724.22: Disallow sorting on expanded lines.
	; 29-Feb-2012	shobby	SR17724.19: Put hidden expansion cell on lines for use
	;							if expanded lines are wider.
	; 01-Feb-2011	shobby	SR17640: Send focus back to the scanning field.
	; 25-Jun-2010	GRF		SR17377: move obsolete code to COMGridEdit31J4ObsCode
	; 06-Feb-2009	shobby	SR16042: Check that the field exists before trying to
	;							update it in cgeUpdateValue
	; 29-May-2007	RPW		SR15513: Modified the cgeBodyFieldKey so that it can
	;							handle dynamic colours and tooltips.
	; 15-Feb-2007	PO		SR15426: Introduce Redraw feature for the DynamicTable
	; 15-Jan-2007	PO		SR15426: Added blnDrawDynTableOnNextFocus, updated
	;							setFocusField and created RedrawDynTable
	; 21-Dec-2006	PO		SR15351: Added SwitchReadOnly
	; 19-Oct-2005	JW		SR11573: Paging
	; 22-Jul-2005	shobby	Date of the JS file to be created. SR13058
	;-------------------------------------------------------------------------------
	; function purge() : from http://javascript.crockford.com/memory/leak.html  SR15246
	;
	;-------------------------------------------------------------------------------
	
	;--------------------------------------- <GRF>
	;  with gridheadDIV.style.left=(-gridbodyDIV.scrollLeft+'px'); in try/catch
	;  
	;  FF   : jerky alignment as head catches up to body but okay
	;  MSIE : head scrolls faster than body - further out of sync as scrolling right increases
	;         window.status monitoring shows gridbodyDIV.style.left is null
	;  
	;  adding gridbodyDIV.style.left=(-gridbodyDIV.scrollLeft+'px'); to try/catch as well
	;  FF   : body scrolls faster than head as above for MSIE but opposite effect
	;  MSIE : in sync but difficult to move at fine level (no fine tuning - double effect?)
	;
	;
	; see http://support.mozilla.com/en-US/forum/1/609986
	;	"div.scrollLeft doen't work in firefox"  for firefox 3.6 (08-Mar-2010)
	;	
	;	Puzzling since we *DO* get a value in gridbodyDIV.scrollLeft that appears appropriate
	;	(and the problem also manifests in MSIE)
	;	
	; 
	; Possibility :	
	; function updatePosition(e)
	;	x = (document.all) ? window.event.x + document.body.scrollLeft : e.pageX;
	;	Div.style.left = (x + 30) + "px"; 
	;	
	;	
	; http://support.mozilla.com/en-US/forum/1/249635?s=scrollLeft&as=s
	; 	"I wrote a complex cross-browser jsp/js page which allows vertical and 
	; 	 horizontal scrolling of a table while maintaining a static row and column
	; 	 header (you can always see the headers no matter how far right or down
	; 	 you scroll in the table)."		(09-Jan-2009)
	; 	 
	; 	 No Reply - wrong forum?
	; 
	; 
	;     function getScrollXY() {		// (May-2003)
	;	      var scrOfX = 0, scrOfY = 0;
	;	      if( typeof( window.pageYOffset ) == 'number' ) {											//Netscape compliant
	;	        scrOfY = window.pageYOffset;
	;	        scrOfX = window.pageXOffset;
	;	        
	;	      } else if( document.body && ( document.body.scrollLeft || document.body.scrollTop ) ) {	//DOM compliant
	;	        scrOfY = document.body.scrollTop;
	;	        scrOfX = document.body.scrollLeft;
	;	        
	;	      } else if( document.documentElement &&
	;	          ( document.documentElement.scrollLeft || document.documentElement.scrollTop ) ) {		//IE6 standards compliant mode
	;	        scrOfY = document.documentElement.scrollTop;
	;	        scrOfX = document.documentElement.scrollLeft;
	;	      }
	;	      return [ scrOfX, scrOfY ];
	;	    }
	; 
	; 
	; 
	;---------------------------------------
	
	//------------------------------------------------------------------------------
	// function cgeOnScroll
	//    Adjust the grid headings to match the location of the grid body when
	//    scrolling left or right
	//
	// History:
	// 29-Feb-2012	shobby	SR17724.19: Width of grid is the maximum of lines width
	//							and expanded lines width.
	// 14-Feb-2012	shobby	SR17724: New logic when grid has fixed columns.
	// 19-Apr-2011	shobby	SR17724: Removed old commented code.
	// 28-Feb-2011  shobby	SR17628: Commented out some redundant commands.
	// 16-Jul-2010	GRF		SR17424: was adjusting both the div and the table with
	// 							Double effect in MSIE (gridhead2 in same div)
	//------------------------------------------------------------------------------
	
	&js<
//<script language="javascript">
//<!--
 
	var blnDrawDynTableOnNextFocus = false; // SR15426  //W3C
	
	function cgeOnScroll2() {
		return 1;
		document.getElementById('gridbodyDIV').style.height=(document.getElementById('gridDIV').clientHeight-document.getElementById('gridbodyDIV').offsetTop)+'px';
		return 1;
	}
	var YFINISHEDLOADINGGRIDTIMEOUT;
	function cgeShowGrid(pintTimes,pblnAuto) { //SESDF-1237
		window.clearTimeout(YFINISHEDLOADINGGRIDTIMEOUT);
		YFINISHEDLOADINGGRIDTIMEOUT=window.setTimeout(function() { cgeShowGridEx(pintTimes,pblnAuto) },2);
	}
	function cgeShowGridEx(pintTimes,pblnAuto) { //SR17995 //SR18190
		var fltWidth=-1;						//SR18190
		if (YFINISHEDLOADINGGRID==true) {
			if (document.getElementById('gridDIV').offsetTop<-1000) {
				with (document.getElementById('gridDIV').style) {
					if (document.getElementById('gridDIV').getAttribute('_MaxWidth')==-1) {
						document.getElementById('gridDIV').style.width='0px'; //SR18190
						width=(document.getElementById('WWW2').offsetWidth)+'px';
						fltWidth=width;			//SR18190
					}
					top=(parseInt(document.getElementById('gridDIV').style.top)+10000)+'px';
				}
				cgeOnScroll();  //FF display scroll bar correctly
			}
			syncGridSize();
		}
		//SESDF-1237 if ((fltWidth==-1)&&(pintTimes<100)&&(document.getElementById('gridDIV').getAttribute('_MaxWidth')==-1)) window.setTimeout(function() { cgeShowGrid(pintTimes+1,pblnAuto) },200); //SR18190	 //SESDF-672.1	
		if ((fltWidth==-1)&&(pintTimes<100)&&(document.getElementById('gridDIV').getAttribute('_MaxWidth')==-1)) {cgeShowGrid(pintTimes+1,pblnAuto);} //SR18190	 //SESDF-672.1	
		resetColumnWidths();
	}
	function cgeOnScroll() {
		var gridhead       =document.getElementById('gridhead');    //SR17724
		var gridheadKey    =document.getElementById('gridheadKey');    //SR17724
		var gridhead2      =document.getElementById('gridhead2');   //SR17724.24
		var gridbody       =document.getElementById('gridbody');    //SR17724.24
		var gridheadDIV    =document.getElementById('gridheadDIV');
		var gridheadDIVKey =document.getElementById('gridheadDIVKey'); //SR17995
		var gridheadDIV2Key=document.getElementById('gridheadDIV2Key');
		var gridbodyDIV    =document.getElementById('gridbodyDIV');
		var gridbodyDIVKey =document.getElementById('gridbodyDIVKey'); //SR17724.24

 		if (document.getElementById('GridVersion').value!=1) {
			try {
				gridheadDIV.style.left=(-gridbodyDIV.scrollLeft+'px');
			} catch(e) {
			}
 		} else {
	 		gridhead.style.height=''; //SR17724.30
	 		gridheadKey.style.height='';
	 		if (gridheadKey.clientHeight>gridhead.clientHeight) {
		 		gridhead.style.height=gridheadKey.clientHeight+'px';
	 		}
		 	gridheadKey.style.height='100%';
			try {
				gridhead.style.left=(-gridbodyDIV.scrollLeft+'px'); //SR17724 
				gridhead2.style.left=(-gridbodyDIV.scrollLeft+'px'); //SR17724 
			} catch(e) {
			}
			try {
				//gridbodyDIVKey.style.top=(-gridbodyDIV.scrollTop+'px'); //SR17724
				document.getElementById('gridbodyDIVKey').style.height = gridbodyDIVKey.style.height
				document.getElementById('gridbodyDIVKey').style.top=(-gridbodyDIV.scrollTop+'px'); //SR17724
			} catch(e) {
			}	
			if (document.getElementById('gridbodyDIVInner')!=null) { //SR17724
				if (!isIE()) {									 //SR17724
					var intHeight=getGridHeight(300,#(+$piece($get(^WWW012(0,YM,1)),Y,203))#);
					var intHeight=300; //SR17724.24
					gridbodyDIV.style.height=intHeight;
					gridbodyDIVKey.style.height=intHeight;
					gridbodyDIV.style.width=(document.getElementById('gridDIV').clientWidth-gridbodyDIV.offsetLeft)+'px'; //SR17724
					gridheadDIV.style.width=(document.getElementById('gridDIV').clientWidth-gridbodyDIV.offsetLeft)+'px'; //SR17724
				}
			}
 		}
 		var gridhead2=document.getElementById('gridhead2');
		if (gridhead2!=null) {
			var current=gridhead2.style.display;
			gridhead2.style.display=''; //SR17724.19
			var EndWidth=gridhead2.scrollWidth-gridhead.scrollWidth;
			if (EndWidth>0) {
				if (document.getElementById('tdEnd_1')!=null) document.getElementById('tdEnd_1').style.width=EndWidth+'px';
			}
			gridbody.style.width=Math.max(gridhead.offsetWidth,gridhead2.offsetWidth)+'px'; //SR17724
			if (gridheadDIV2Key!=null) gridheadDIV2Key.style.width=gridheadDIVKey.clientWidth+'px';
			if(isFF()) gridheadDIV2Key.style.width="-moz-max-content";
			gridhead2.style.display=current;
		}
	}
	
	function cgeGridDate() {
		return '#($zdt(pdteDate,3))#';
	}
	//-->
	//</script>
	>
	
	
	//------------------------------------------------------------------- ALPHA SORT
	// function cgeAddBlock : Add a block of lines to the grid
	//
	// Params:	pintPage		- page to display
	//			pstrFocus		- where the focus should go
	//			pblnContinue	- whether this is a subsequent block
	//
	// Returns:	nil
	//
	// History:
	// 26-Jun-2006	JW		SR12775: Added "E" focus
	// 19-Oct-2005	JW		SR11573: Rewritten
	//------------------------------------------------------------------------------
	// function cgeAddManyRows : 
	// 
	//------------------------------------------------------------------------------
	// function cgeBodyFieldCell : Add a 'TD' to a 'TR' for data fields
	//
	// Params:	
	//
	// Returns:	TD object
	//
	// History:
	// 28-Feb-2012	shobby	SR17724.14: Firefox requires maxwidth set as well as width 
	//							when resizing columns.
	// 22-Feb-2012	shobby	SR17724.6: Correctly positioning of fixed/scrolling separator
	//							after sort.
	// 14-Feb-2012	shobby	SR17724: Refined logic of determining cell width.
	// 17-Feb-2011	shobby	SR17658: Reverted to previous version was crashing with
	//							form VARIPIPlanoSuprimento.  Additional changes to
	//							manage cell sizing and hidden columns in FF.
	// 24-Jun-2010	GRF		SR17377: Cross-browser revision
	// 14-May-2010	shobby	SR17304: event.button adjustment for firefox.
	// 24-Jun-2009	shobby	SR16673: Don't use the cgeOnMouseDownDisabled function.
	//							Interferes with dynamic enabling/disabling of cells.
	// 25-Mar-2008	shobby	SRBR014904: Previous change reverted.  Interferes with
	//							column sizing.
	// 19-Mar-2008	shobby	SRBR014904: Better management of hidden columns.
	// 26-Jun-2006	JW		SR12775: Removed required param, processing
	//------------------------------------------------------------------------------
	// cgeExpandBodyFieldCell : Add a 'TD' to a 'TR' for data fields
	//                          Equivalent of cgeBodyFieldCell for Expanded grid
	//                          lines such as charges on Finance Inventory Match
	//
	// History:
	// 17-Nov-2010	GRF		SR17597: Created from prior version of cgeBodyFieldCell
	//------------------------------------------------------------------------------
	// function cgeBodyFieldKey : Add a 'TD' to a 'TR' for key fields
	// 
	// History:
	// 23-Feb-2012	shobby	SR17724.13: Put an event on the Primary so that when clicking
	//							the row can be selected.
	// 14-Feb-2012	shobby	SR17724: Refined logic of determining cell width.
	// 17-Feb-2011	shobby	SR17658: Changes to manage cell sizing & hidden columns
	//							in FF.
	// 01-Dec-2010	GRF		SR17597: modified to create unique ids for TD key
	//							entries (Line No and [+] columns)
	// 24-Jun-2010	GRF		SR17377: Cross-browser revision
	//------------------------------------------------------------------------------
	// function cgeBodyRow : Create 'TR' Element
	// 02-Feb-2012	shobby	SR17724: Additional Field 'Type'
	//------------------------------------------------------------------------------
	// function cgeBodyRowEnd : 
	// 
	//------------------------------------------------------------------------------
	// function cgeHeadFields : Create 'TH' Element
	//
	// History:
	// 17-Feb-2011	shobby	SR17658: Disabled blnAttach.  Was stopping resizing of cols.
	// 06-Dec-2010	GRF		SR17597: pass and use blnAttach - expanded form operation
    // 30-June-2010	GRF		SR17377: use IE versions of THhide/TDhide class names
	// 24-Jun-2010	GRF		SR17377: Cross-browser revision
	// 01-May-2009	shobby	SR16507: Don't show grid date; Moved to 'Per Page' object
	// 25-Mar-2008	shobby	SRBR014904: Previous change reverted. Interferes with
	// 							sizing of columns
	// 19-Mar-2008	shobby	SRBR014904: Better management of hidden columns.
	// 09-Mar-2005	JW		SR11848: Added hidden parameter
	//------------------------------------------------------------------------------
	// function cgeonclick : 
	//
	//------------------------------------------------------------------------------
	// function cgeonmousedown : 
	//
	//------------------------------------------------------------------------------
	//  function cgeOnMouseDownDisabled
	// 
	// History:
	// 06-Jul-2010	GRF		SR17413: pass event to function
	//------------------------------------------------------------------------------
	//  function cgeOnMouseDownEnabled
	// 
	// History:
	// 06-Jul-2010	GRF		SR17413: pass event to function
	//------------------------------------------------------------------------------
	// function cgeTest2 : 
	//
	//------------------------------------------------------------------------------
	// function cgeUpdateStyle : Update the Style of the Grid Field
	//
	// History:
	// 14-Nov-2011	shobby	SR17934: cgeUpdateStyle enable/disable checkbox.
	// 16-Feb-2010	shobby	SR15753: Disable checkboxes (When did this stop working?)
	// 12-Aug-2009	PPP		SR16765:The check was checking for objNewStyle[4],
	// 							changed to objNewStyle[3]
	// 22-Jun-2009	PPP		SR16510:Added a new entry to update the RO value (in ObjNewstyle)
	//						ObjNewStyle = COLOR_Y_BACKGROUNDCOLOR_Y_TOOLTIP_Y_LOCKED
	//------------------------------------------------------------------------------
	// function cgeUpdateValue : Update the Value of the Grid Field
	//
	// History:
	// 21-Jul-2010	GRF		SR17444: use the text div id ("tdY#_#dt") to store new
	/]]><![CDATA[/ 							value
	// 15-Jul-2010	GRF		SR17428: firstChild works differently because MSIE and
	//  						FF interpret what is a child differently.
	//------------------------------------------------------------------------------
	// function createDIV : Create a 'DIV' Element
	//
	//------------------------------------------------------------------------------
	// function createInput : Create an 'INPUT' Element
	//
	//------------------------------------------------------------------------------
	// function findParentOf : 
	//
	//------------------------------------------------------------------------------
	//	function getCell(row,col)
	//
	// History:
	// 19-Jan-2005	JW		Get the cell object from row and column parameters
	//------------------------------------------------------------------------------
	// function getColNum : 
	//
	//------------------------------------------------------------------------------
	// function getColWidth : 
	//
	//------------------------------------------------------------------------------
	//	function getFocusField
	//
	// History:
	// 15-Feb-2007	PO		SR15246
    // 03-Jan-2007	PO		SR15351: Changed setFocusField to include Dynamic Table hook
	// 01-Feb-2005	JW
	//------------------------------------------------------------------------------
	//	function getRowNum
	//
	// History:
	// 19-Jan-2005	JW		Get the row number from a cell object id.
	//------------------------------------------------------------------------------
	// function GoToPage : Display another page
	//
	// Params:	pintPage		- page to display
	//			numPages		- total number of pages
	//			pstrFocus		- where the focus should go
	//			pblnContinue	- whether this is a subsequent block
	//
	// Returns:	nil
	//
	// History:
	// 13-Apr-2010	shobby	SR17253: Additional parameter required in call to GoToPage
	// 26-Jun-2006	JW		SR12775: Store current page
	// 19-Oct-2005	JW		SR11573: Created
	//------------------------------------------------------------------------------
	// function gridAddHeader : 
	//
	//------------------------------------------------------------------------------
	// function gridDeleteSelection : 
	//
	//------------------------------------------------------------------------------
	//	function hideShowColumn
	//
	// History:
	// 15-Jul-2010	GRF		SR17429: update all rows rather than just row[0] - test
	// 08-Jul-2010	CB		SR17403: relocate syncGridWidths from CGE31Body
    // 30-June-2010	GRF		SR17377: use IE versions of THhide/TDhide class names
    // 18-Jun-2010	GRF		SR17377: Change className THfld <=> THhide and
    // 							TDfld <=> TDhide to remove border
	// 15-Feb-2007	PO		SR15246
	// 10-Mar-2005	JW		SR11848: hide or show a column.
	//------------------------------------------------------------------------------
	// function InputData : Input Scanned Data
	//
	// Params:	obj
	//
	// Returns:	nil
	//
	// History:
	// 19-May-2009	PPP		SR16565: Created (Scan Field on Grid)
	//------------------------------------------------------------------------------
	// function isValid :
	// 
	//------------------------------------------------------------------------------
	// function pagesText :
	// 
	// History:
	// 13-Apr-2010	shobby	SR17253: Additional parameter required in call to GoToPage
	// 01-Apr-2008	shobby	SRBR014927: Put some additional spaces to increase the
	//							distance between the page links.
	//						SR11573: Created
	//------------------------------------------------------------------------------
	// function PerPage :
	// 
	//------------------------------------------------------------------------------
	// function purge : 
	//
	//------------------------------------------------------------------------------
	// function RedrawDynTable : 
	//
	//------------------------------------------------------------------------------
	// function RemoveChildren : [should use purge() - see note]
	//
	//------------------------------------------------------------------------------
	// function setFocusField : 
	//
	//------------------------------------------------------------------------------
	// function setFocusGrid : 
	//
	//------------------------------------------------------------------------------
	// function SwitchReadOnly : 
	//
	//------------------------------------------------------------------------------
	// function  : syncGridWidths
	//
	// History:
	// 17-Feb-2011	shobby	SR17658: Removed some unnecessary commands with seem to
	//							cause the headings to collapse when clicked.
	// 01-Dec-2010	GRF		SR17597: added +'px' when setting style.width
	// 09-Jun-2010	CarlosB	SR17253: created
	//------------------------------------------------------------------------------
	// function cgeClearDEVinfo
	// 
	// Clear textarea with id=DEVinfo when button [C] is clicked (both established
	// in CreateGrid^COMGridEdit31)
	// 
	// On clearing also shows the browser version - not normally present to limit
	// confusion.
	// 
	// Add code to JS functions or execute in write commands as debug trace.
	// Replaces or appends string to textarea.  '\n' provides new line.
	// 
	// Warning : May slow down grid operation while present.
	//           Do not leave debug lines in code when creating a build.
	// 
	//	Usage Example : (replace [text] with appropriate values)
	//		var DEVinfo = document.getElementById('DEVinfo');
	//		DEVinfo.value = '[Source :]\n';
	//		DEVinfo.value += '[DataName : ]'+document.getElementById('[idString]').[attribute]+'\n';
	// 
	// History:
	// 27-Sep-2011	shobby	SR17853: Reverted doCancelEvent
	// 24-Jun-2011	PPP		SR17802: Pass new parameter 'Type', Error Code
	// 03-Dec-2010	GRF		SR17597: Development tool created
	//------------------------------------------------------------------------------
	
	&js<
//<script language="javascript">
//<!--
	
	function cgeClearDEVinfo() {   // SR17597
		var DEVinfo = document.getElementById('DEVinfo');
		DEVinfo.value = 'DEVinfo ['+navigator.userAgent+"] ";
	}
	
	function cgeAddBlock(pintPage,pstrFocus,pblnContinue) {
		var param=pintPage+'~'+pblnContinue;
		var retval = EventValue(YUCI,YUSER,YFORM,'FIX','COMGridEdit31R','BODYADDROWS','6',param);

		if (pstrFocus=='T') {
			moveFocusTop();
			pstrFocus = '';
		}
		if (retval==1) {
			var strCommand='cgeAddBlock('+pintPage+',\''+pstrFocus+'\',1);';
			window.setTimeout(strCommand,10);
			
		} else {
			if (pstrFocus=='B') {				//Move to Bottom Left
				moveFocusBottom();
				
			} else if (pstrFocus=='E') {		//Move to Bottom Right (End)
				moveFocusBottom();
				moveFocus(35);
				
			} else if (pstrFocus!='') {			// Move to pstrFocus cell
				moveFocus(pstrFocus,1,1,1);
				moveFocus(36); // This can be an issue if you want to Goto a particular field using GotoPage : check SR14427
				SetFocus('Grid');
			}
			document.getElementById('WWW2').style.cursor = 'auto'; //SR18182
			YFINISHEDLOADINGGRID=true;
			cgeShowGrid(1,#($$AutoResizeRows^WWW120($get(YFORM)))#);
		}
	}
	
	function GoToPage(pintPage,numPages,pstrFocus,pintBlnContinue) {
		document.getElementById('WWW2').style.cursor = 'wait';
		
		if (numPages == null) {
			numPages = pintPage;
		}
		
		GRIDPage = pintPage;
		GRIDNumPages = numPages;		// Global set
		pagesText(numPages,pintPage);
		
		if (pintBlnContinue!=1) {	
			var af = document.getElementById('activefield').value;
			if (af!='') {
				saveDataNow(af);
			}
			setFocusField(''); // SR14427
			
			var objGrid = document.getElementById('gridbody');
			while (objGrid.rows.length>0) {
				objGrid.deleteRow(0);		//SR17253
			}
			
			var objGrid = document.getElementById('gridbodyKey');
			if (objGrid!=undefined) {
				while (objGrid.rows.length>0) {
					objGrid.deleteRow(0);		//SR17724
				}
			}
		}
		cgeAddBlock(pintPage,pstrFocus,pintBlnContinue);
	}
	
	function PerPage(obj) {
		var retval = EventValue(YUCI,YUSER,YFORM,'FIX','COMGridEdit31R','PERPAGE','6',obj.value);
		
		retval=retval.split('~');
		
		if (retval[0]==1) {
			GoToPage(1,retval[1],'T',0);  //SR17253
		} else {
			obj.value = retval[1];
		}
	}
 
	function InputData(obj,objNewStyle) {
		var objStyle=obj.style;
		objNewStyle=objNewStyle.split('~');
		if ('#($$MenuType^WWW013())#'=='14'){
			objStyle.borderColor=objNewStyle[0];
		}else{
			objStyle.backgroundColor=objNewStyle[0];
		}
 
		if (obj.value!='') {
			var param=obj.value+'~'+YFORM
			var retval = EventValue(YUCI,YUSER,YFORM,'FIX','COMGridEdit31Scan','READ','6',param);
			
			retval=retval.split('~');
			
			if (retval[0]==1) {
				param=retval[1]+'~'+YFORM+'~'+retval[2]+'~'+retval[3]+'~'+retval[4]
				EventValue(YUCI,YUSER,YFORM,'FIX','COMGridEdit31Scan','UPDATE','6',param);;
				obj.value = '';
			} else {
				obj.value = retval[1];
				if ('#($$MenuType^WWW013())#'=='14'){
					objStyle.borderColor=objNewStyle[1];
				}else{
					objStyle.backgroundColor=objNewStyle[1];
				}
			}
			window.setTimeout(function () {
				obj.focus();
				obj.select();  //SR18084.1
			}, 0);

		}
	}
	
	function enterScan(event,obj,objNewStyle) {
		if(window.event) { // IE8 and earlier
			keynum = event.keyCode;
	  } else if(event.which) { // IE9/Firefox/Chrome/Opera/Safari
			keynum = event.which;
		}
    if (keynum == 13) {
    	window.setTimeout(function() {document.getElementById('perpage').focus(); document.getElementById(obj.id).focus();},1);  //18084.1 
   	}
	 }
	 
	  
	// if the form has a scan input field, then it should get the focus  SR17640
	function setFocusScanField() {
		if(document.getElementById('inputdata')) {
			document.getElementById('inputdata').focus();
		}
	}
	window.attachEvent('onload', setFocusScanField);


	function pagesText(pMax,pCurrent,pGroup) {
		var txt,grpSize,lstGrp,stop,start;
		
		grpSize = 10;
		
		if (pGroup == null) {
			pGroup = Math.floor((pCurrent-1) / grpSize + 1);
		}
		
		if (pGroup == 1) {
			txt = "&nbsp;"
		} else {
			txt = Link(1,"&lt;&lt") + Link(pGroup-1,"&lt");
		}
		
		stop = pGroup*grpSize;
		start = stop-grpSize+1;
		
		if (stop > pMax) {
			stop = pMax;
		}
		
		for (var i = start; i <= stop; i++) {
			if (pCurrent==i) {
				txt = txt+" <b>&nbsp;"+i+"&nbsp;</b>";
			} else {
				txt = txt+" <a href='#grid' onClick=\'GoToPage("+i+","+pMax+",\"T\",0);\'>&nbsp;"+i+"&nbsp;</a>";
			}
		}
		
		if (stop != pMax) {
			lstGrp = Math.floor((pMax-1) / grpSize + 1);
			txt = txt + Link(pGroup+1,"&gt") + Link(lstGrp,"&gt;&gt");
		}
		document.all.pages.innerHTML = txt;
		
		function Link(pGroup,pText) {
			return "&nbsp<a href='#grid' onClick=\'pagesText("+pMax+","+pCurrent+","+pGroup+");\'>&nbsp;"+pText+"&nbsp;</a>";
		}
	}
	
	function cgeUpdateValue(id,Value) {
		if (document.getElementById(id+'_checkbox')!=null) {
			document.getElementById(id+'_checkbox').checked=+Value;
			
		} else if (document.getElementById(id)!=null) { //16042			
			var divid = document.getElementById(id+'dt');
			if (divid!=null) {
				divid.innerHTML=Value;
			}
		}
	}
	
	function isValid(value) {
		return ((value!="")&&(value!=null));
	}		
	
	function cgeUpdateStyle(id,objNewStyle) {
		var objObject=document.getElementById(id);
		if (objObject!=null) {
			var objStyle=objObject.style;
			objNewStyle=objNewStyle.split('~');
			if (isValid(objNewStyle[0])) objStyle.color=objNewStyle[0];
			if (isValid(objNewStyle[1])) {
				if ('#($$MenuType^WWW013())#'=='14'){
					objStyle.borderColor=objNewStyle[1];
				}else{
					objStyle.backgroundColor=objNewStyle[1];
				}
			}
			if (objNewStyle[2]!=null) objObject.title=objNewStyle[2];
		
			//SR16510
			if (document.getElementById(id+'_checkbox')!=null) {
				objObject.disabled=objNewStyle[3]==0;
				document.getElementById(id+'_checkbox').disabled=objNewStyle[3]==0; //SR17934
			} else {
				objObject.Locked=objNewStyle[3]==0;
			}
			//SR16510
			if (objNewStyle[3]!=-1) {
				//objObject.detachEvent('onmousedown',0)
				//objObject.attachEvent('onmousedown',objObject.Locked?cgeOnMouseDownDisabled:cgeOnMouseDownEnabled);
			}
		}
		return;         // FIXME : return without value?
	}
	
	
	// ********************** Row Creation Code ************************************
	var gCOLON='';      // not used?
	
	//function cgeBodyRow(Body,idRow,show) {
	function cgeBodyRow(Body,idRow,Form,Header,Type) {
		var newRow=document.createElement('tr');
		
		newRow.id='GridRow'+idRow+Type;
		if (newRow.id.indexOf('_')==-1) {newRow.style.display='block'};

		newRow._Form=Form;
		newRow.style.fontSize='10pt';
		newRow.style.fontFamily='Symbol';
		
		newRow.Header = Header;
		
		return newRow;
	}
	
	function cgeBodyRowEnd(Body,pnewRow) {
		Body.appendChild(pnewRow);
	}
	
	// SR17377 replacement
	function cgeAddManyRows(Body,strBigString) {
		var Rows=strBigString.split('~!@#$~');
		var intRows=Rows.length-1;
		
		for (var i = 0; i != intRows ; i++) {
			var Cols=Rows[i].split('~');
			cgeBodyFieldCell(Cols[0],Cols[1],Cols[2],Cols[3],Cols[4],Cols[5],Cols[6],Cols[7],Cols[8],Cols[9]);
			cgeBodyRowEnd(Body);
		}
	}
	
	// ********************** Field Creation Code **********************************
	function cgeHeadFields(objHeadRow,HeadType,Col,innerHTML,fontFamily,fontSize,width,height,bgColor,type,hidden,form,blnAttach) {
		var objTH=document.createElement('TH');
		var objStyle=objTH.style;
		
		if (Col=='Expand') {
		//	form='';   //SR17597
			form='_';
		} else {
			form='_'+form+'_';
		}
		if (HeadType=='Key') {
			objTH.className='THkey';
			objTH.id='THkey'+form+Col;		
		} else {
			if (hidden==1) {
				objTH.className='THhide'+getBrowser();
			} else {
				objTH.className='THfld';
			}
			objTH.id='THfld'+form+Col;
		}
		objTH.Hidden = hidden==1;
		objTH.unselectable='on';
		objTH.type=type;
		
		objStyle.fontFamily=fontFamily;
		objStyle.fontSize=fontSize+'pt';
		if ('#($$MenuType^WWW013())#'=='14'){
			objStyle.borderColor=bgColor;
		}else{
			objStyle.backgroundColor=bgColor;
		}
		objStyle.borderBottom='0px solid white';
		objStyle.borderTop='0px solid white';
		objStyle.borderLeft='1px solid white';
		objStyle.borderRight='0px solid white';
		if (hidden==1) { 
			objTH.innerHTML='';
			objStyle.width='0px';
		} else {
			objTH.innerHTML=innerHTML+' ';
			//if ((objHeadRow.id=='gridheadRow2Key')&&(HeadType=='Key')) {
			//	objStyle.width=document.getElementById('gridheadRowKey').cells[0].style.width;
			//} else {
				objStyle.height='30px';
				objStyle.width=width+'px';
			//}
		}
	//	totalWidth=totalWidth+objStyle.width;   // concept only -GRF-
		
		//if (blnAttach==true) {      //SR17597  //SR17658
			objTH.attachEvent('onmousedown',function() { 
				cgeonmousedown(window.event,objHeadRow.id); 
			}); //SR17325.1  //SR17224
			objTH.attachEvent('onmousemove',cgeonmousemove); //SR17325.1
			objTH.attachEvent('onmouseup',function(){
				if ($("#txtCampoAlterado").val() != "") {
					setTimeout(function(){ $('.THkey').click(); }, 10);
					$("#txtCampoAlterado").val("");
				}
			}); //SR17325.1
		//}                           //SR17597  //SR17658
		objHeadRow.appendChild(objTH);
	}
	
	// SR17377 replacement
	function cgeBodyFieldKey(objGridRow,pfont,fontsize,pheight,bgColor,innerHTML,tooltip,THname,Expand) {  //SR17628
		var newCell=document.createElement('TD');

		if (Expand==1) {
			newCell.className='TDkeyEx';
		} else {
			newCell.className='TDkey';
		}
	
		if (THname!='Expand') {               // SR17597
			newCell.id='td'+objGridRow.id;                 // "tdGridRow6"
			newCell.attachEvent('onmousedown',function() { moveFocus(getFirstCell(document.getElementById(objGridRow.id)),1,1,1); window.event.returnValue=false; window.event.cancelBubble=true;}); //SR17724.13
		} else {
			newCell.id='td'+objGridRow.id+'Exp';           // "tdGridRow6Exp"
			newCell.attachEvent('onmousedown',function() { window.event.returnValue=false; window.event.cancelBubble=true;}); //IPIRANGA-173.1
		}
		newCell.innerHTML=unescape(innerHTML);
		if (typeof(tooltip)!="undefined") { newCell.title=tooltip; }


		with (newCell.style) {
			font=fontsize+'pt '+pfont;
			backgroundColor=bgColor;
			if (document.getElementById('GridVersion').value!=1) {
				width=objGridRow.Header.rows[0].cells[objGridRow.children.length].style.width;
			} else {
				if (document.getElementById('THkey_'+THname)==null) {
					width=0;
				} else {
				    width=document.getElementById('THkey_'+THname).style.width; //SR17724
				}
			}
			minWidth=width;
			maxWidth=width;
			if (pheight!='') { height=pheight+'pt';}
		}
		objGridRow.appendChild(newCell);
	}
	
	func]]><![CDATA[tion cgeBodyFieldCell(Row,fieldna]]><![CDATA[me,font,fontsize,backgroundColor,height,textAlign,innerHTML,enabled,title,pCOLON,fontcolor,Header,Expand,pblnLastKey,pblnEnd) {  //SR17628
		
		var newCell=document.createElement('TD');
		var strFont=fontsize+'pt '+font;

		newCell.id=getFieldId(fieldname,Row._Form); //SR17630 //SR17673.2
		if ((title!='')&&(title!=null)) {newCell.title=title;}
		newCell.noWrap=true;  //SR18004
		var cellStyle=newCell.style;
		if ((fontsize+'pt')!=Row.style.fontSize) {
			cellStyle.fontSize=fontsize+'pt';
		}
		if (pblnLastKey==1) {
			//newCell.style.borderRight='0px'; //SR17724.6
		} else if (fieldname.indexOf('End_')>-1) {
			newCell.style.border='none'; //SR17724.19
		}
		if (fontcolor!='') { cellStyle.color=fontcolor;}
		if (Expand==1) {  //SR17628
			newCell.className='TDfldEx';
		} else { 
			newCell.className='TDfld';
		}
		if (backgroundColor!='') {
 			if ("#($$MenuType^WWW013())#"==14){
	 			if (backgroundColor==corCampoObrigatorio){
 					cellStyle.border="1px solid "+backgroundColor
	 			}else{
		 			cellStyle.backgroundColor=backgroundColor; 
	 			}
 			}else{
 				cellStyle.backgroundColor=backgroundColor; 
 			}
		}
		if (textAlign!='') {
			cellStyle.textAlign=textAlign;
		}
		newCell.Locked=enabled==0;
		
		if (pblnEnd!=1) newCell.attachEvent('onmousedown',cgeOnMouseDownEnabled); //16673

		if (innerHTML!='') {
			newCell.innerHTML=unescape(innerHTML);
		}
		if (document.getElementById('GridVersion').value!=1) {
			if (fieldname.indexOf('End_')<0) {
				var width=Row.Header.rows[0].cells[Row.children.length].clientWidth;
				if (width=='') {
					width=Row.Header.rows[0].cells[Row.children.length].style.width;
				} else {
					width=width+2;
				}
			}
		} else {
			//if (Row.id.split('_')[1]!=undefined) {
				//SR17724 Expanded lines
				width=20;
				if (document.getElementById('THfld_'+Row._Form+'_'+fieldname.split('_')[1]) != null) { //TODO
					var width=document.getElementById('THfld_'+Row._Form+'_'+fieldname.split('_')[1]).clientWidth; //SR17724
					if (width=='') {
						var strWidth=document.getElementById('THfld_'+Row._Form+'_'+fieldname.split('_')[1]).style.width;
						strWidth=parseInt(strWidth);
						//if (strWidth!=0) strWidth=strWidth+1;
						if ((Row.id.split('_')[1]!=undefined)&&(strWidth!=0)) {strWidth=strWidth+1;}
						width=strWidth+'px';
						//width=document.getElementById('THfld_'+Row._Form+'_'+fieldname.split('_')[1]).style.width; //SR17724
					} else {
						width=width-1;   //SR17724
						width=width+2;
					}
				}
			//} else {
			//	if (document.getElementById('THfld_'+Row._Form+'_'+fieldname.split('_')[1]) != null) { //TODO
			//		var width=document.getElementById('THfld_'+Row._Form+'_'+fieldname.split('_')[1]).clientWidth; //SR17724
			//		if (width=='') {
			//			 width=document.getElementById('THfld_'+Row._Form+'_'+fieldname.split('_')[1]).style.width; //SR17724
			//		} else {
			//			width=width+1;   //SR17724
			//			if ((pblnLastKey)&&(isIE())) { width=width-1;}
			//		}
			//		if (!isIE()&&(width>0)) width=width-2; //SR17724.14
			//	}
			//}
		}
		//if (fieldname.indexOf('End_')>-1) alert('4='+fieldname);
		if (((parseInt(width)==0))&&(!isIE())) { //CORE-142  //SESDF-672.1 //SESDF-672.2
			cellStyle.display='none';
		}		
		if (parseInt(width)==0) { //CORE-142  //SESDF-672.1 //SESDF-672.2
			cellStyle.display.height='0px';
		}
		//if (fieldname.indexOf('End_')>-1) alert('5=width='+width);
		if (fieldname.indexOf('End_')<0) {
			cellStyle.width=width;  //SR17658
			
			if (newCell.id.indexOf('tdExCon')<0) cellStyle.maxWidth=width; //SR17724.14
		}

		if (height!='') {
			cellStyle.height=height+'pt'; //SR17724
		}
		Row.appendChild(newCell);
		if (parseInt(newCell.style.width)==0) { //IPIRANGA-125
			var obj=newCell.children[0];
			while (obj!=null) {
				if (obj.id==('BTN'+fieldname)) {
					obj.style.visibility='hidden';
				}
				obj=obj.nextSibling;
			}
		}
		if (!isIE()) { //CORE-142
			var obj=newCell.children[0];
			if (obj!=null) {			//CORE-142.2
				obj.style.width='1px';
				obj.style.width=(parseInt(newCell.style.width)-8)+'px'; //CORE-237
			}							//CORE-142.2
		}
		if (parseInt(width)==0) { //CORE-142  //SESDF-672.1 //SESDF-672.2  //SESDF-672.3
			newCell.className='TDhide'+getBrowser();
		}		
		return newCell;
	}
	
	function cgeExpandBodyFieldCell(objGridRow,fieldname,font,fontsize,bgColor,enabled,Header) {   // SR17597
		var newCell=document.createElement('TD');
		var cellStyle=newCell.style;
		
		var strFont=fontsize+'pt '+font;
		
		newCell.id='td'+fieldname;
		newCell.noWrap=true;
		newCell.Locked=enabled==0;
		
		if ((fontsize+'pt')!=objGridRow.style.fontSize) {
			cellStyle.fontSize=fontsize+'pt';
		}
		if (bgColor!='') { cellStyle.backgroundColor=bgColor; }
		cellStyle.width=objGridRow.Header.rows[0].cells[objGridRow.children.length].style.width;
		
		newCell.className='TDfld';
		newCell.attachEvent('onmousedown',cgeOnMouseDownEnabled);
		
		objGridRow.appendChild(newCell);
		return newCell;
	}	
	
	// ****************************************************************************
	
	function cgeOnMouseDownEnabled(event) {      //SR17413
		if (!event) event=window.event;
		
		var field = typeof(event) != 'undefined' ? findObjectTagName(event.srcElement,'TD') : null;
		if (field!=null) {  //IPIRANGA-104
			if (field.id.substr(0,7)!='tdExCon') {  //ignore yellow space on expanded lines.
				if (doGetMouseButton(event)=='LEFT') {			//SR17304
					if (field) activateField(field.id.substr(2));   //SR17253 //SR17325.1
				} else {
					if (field) moveFocus(field.id,1,1,1);			//SR17253 //SR17325.1
				}
			}
		}
	}
	
	function cgeOnMouseDownDisabled(event) {     //SR17414
		if (!event) event=window.event;
		moveFocus(findObjectTagName(event.srcElement,'TD').id,1,1,1);					//SR17253 //SR17325.1
	}
	
	// ****************************************************************************
	
	function createInput(pid,pvalue,ptype) {
		var objInput=document.createElement('INPUT');
		objInput.id=pid;
		objInput.value=pvalue;
		objInput.type=ptype;
		gridDIV.appendChild(objInput);
	}
	
	function setFocusGrid() {
		var retval=SetFocus('Grid');
		if (window.event) {
			window.event.returnValue = false;
			window.event.cancelBubble = true;
		}
	}
	
	function gridAddHeader() {
		var objTable=document.createElement('TABLE');
		objTable.cellSpacing=0;
		objTable.cellPadding=0;
		
		var objRow=document.createElement('ROW');
		objRow.id="gridKeys";
		objTable.appendChild(objRow);
		gridDIV.appendChild(objTable);
	}
	
	function createDIV(pLeft,pTop) {
		var objDIV=document.createElement("DIV");
		objDIV.id='gridDIV';
		objDIV.className='gDIVsh';
		objDIV.style.top=pTop;
		objDIV.attachEvent('onfocusin',setFocusGrid) ;
		
		document.getElementById('xxx').appendChild(objDIV);
	
		createInput('activefield','','hidden');
		createInput('nextactivefield','','hidden');
		createInput('activegrid','','');
		createInput('sharedform',0,'hidden');
		createInput('focusfield','','hidden');
		createInput('test','','hidden');
	}
		
	// ****************************************************************************
	
	function cgeonclick() {
		cgeCancelDrag();											//SR17724.22
		if (event.srcElement.parentNode.id!='gridheadRow2') {		//SR17724.22
			//SR17724
			var strType=getParent(window.event.srcElement,'TH').parentNode.id.split('gridheadRow')[1]; //SR17724.2
			gridonclick(window.event,document.getElementById('gridhead'+strType),document.getElementById('gridbody'+strType),document.getElementById('gridbodyDIV'+strType));
		}
	}
	
	//function cgeonmousemove() { // JW SR11734 - added header null check. //SR17325.1
	function cgeonmousemove(event) { // JW SR11734 - added header null check. //SR17325.1
		if (!event) event=window.event;
		var header = findObjectTagName(event.srcElement,'TH'); //SR17325.1
		if (header != null) {  // set pointer type
			gridonmousemove(document.getElementById('gridhead'),event,document.getElementById('gridbody'),header);  //SR17253
		}
	}

	function cgeonmousedown(event,pidHeaderRow) {	//SR17325.1  //SR17224
		if (!event) event=window.event;
		if (event.srcElement.className!='THkey') {                  //SR17253 //SR17325.1
			cgeDragColumn(event);	//SR17253
		}
		gridStartColumnResize();  //SR17253	//SR17325.1
	}
	
	function cgeTest2(event) {			//SR17253  //SR17687
		var obj=findObjectTagName(event.srcElement,'TH');
		if (obj!=null) {
			var className=obj.className;
			if ((className=='THkey')||(className=='THfld')) {
				cgeonclick(event);		//SR17253
			}
		}
		event.cancelBubble=true;
	}
	
	
	var ShowAllLines=new Array(); //null;
	
	
	// ??				Changed to allow both selected and unselected
	function gridDeleteSelection(pintCol,areChecked) {
	 	var TBODY=document.getElementById('TBODY');	   //SR17253.2001-07-01

		//var intRows=gridbodyDIV.children[0].children[0].children.length;
		var intRows=TBODY.children.length;
		var i,attr;
		var intRemoved=0;
		var focusField=getFocusField();
		
		if (focusField!='') {
			var focusRow=getRowNum(focusField);
			var blnShowing=true;
		}
		
		for (i = intRows; i != 0 ; i--) {
			var row = TBODY.children[i-1];
			var rowNum = getRowNum(row.children[row.children.length-1].id);
			var cell = getCell(rowNum,pintCol);
			
			if (cell!=null) {
				//attr = cell.checked;
				//if (blnNotCheckBox) {
				//	attr = cell.value;
				//}
				//if (attr == pValue) {
				if (cell.checked==areChecked) {
					if (ShowAllLines[pintCol]==null) {
						row.style.display='none';
						intRemoved++;
						if (rowNum==focusRow) {
							blnShowing=false;
						}
					} else {
						row.style.display='block';
					}
				}
			}
		}
		
		// If we are on a removed field, we must attempt to find a row above and then below (if we don't find one)
		// to focus on. 
	
		if (intRemoved!=intRows) {
			if (focusField=='') { // go to first cell
				// moveFocus(TBODY.children[0].children[1].id,1,0,1)
				moveFocusTop();
			} else if (!blnShowing) {
				moveFocus(38,0,0,'');
				if (getFocusField()==focusField) {
					moveFocus(40,0,0,'');
				}
			}
		} else if (intRows > 0) {
			//PreviousSelected=focusField;
			moveFocus('',1);
			setFocusField('');
		}
			
		if (ShowAllLines[pintCol]==null) {
			ShowAllLines[pintCol]=1;
		} else {
			ShowAllLines[pintCol]=null;
		}
	}
	
	function getRowNum(cellObj) {
		if (cellObj.indexOf('tdGridRow')>-1) {
			return cellObj.split('tdGridRow')[1];		//SR17306
		} else if (cellObj.indexOf('tdEnd_')>-1) {		//IPIRANGA-108
			return cellObj.split('tdEnd_')[1];			//IPIRANGA-162.4b
		} else if (cellObj=="") {						//IPIRANGA-162.4b
			return "";			//IPIRANGA-108
		} else {
			return cellObj.split("Y")[1].split("_")[0];
		}
	}
	
	function getColNum(cellObj) {
		return cellObj.split("_")[1];
	}
	
	function getCell(row,col) {
		return document.getElementById('Y'+row+'_'+col)
	}
	
	function getFocusField() {
		return document.getElementById('focusfield').value;
	}
	
	function setFocusField(val) {
		if ((val != '' || blnDrawDynTableOnNextFocus) && (typeof(DrawDynTable_GridFieldFocus) != 'undefined')) { // SR15351 vvv // SR15246
			if (val != '') { // SR15246
				var row = getRowNum(val),
					curFld = getFocusField(),
					curRow = curFld == '' ? '' : getRowNum(curFld);
			} else { // SR15246 vvv
				var row = '';
			} // SR15246 ^^^
			if (curRow == '' || curRow != row || blnDrawDynTableOnNextFocus) { // SR15246
				var retTemp = EventValue(YUCI,YUSER,YFORM,"FIX","COMGridEdit31ExtraFields","FIX","6",YFORM+'~'+val);
				DrawDynTable_GridFieldFocus(row);
				blnDrawDynTableOnNextFocus = false; // SR15246
			}
		} // SR15351 ^^^
		if (typeof(callChangeRow)!='undefined') {						//SR18026
			//NOTE: callChangeRow is optionally defined in COMGridEdit31Links
			if (val!='') {
				//SR18016
				var row1=getRowNum(val);
				var row0=-1;
				if (getFocusField()!='') row0=getRowNum(getFocusField());
				if (row0!=row1) {
					window.setTimeout(function() {callChangeRow(row1+'~'+val);},10);		//SR18026
				}
			}
		}  																//SR18026
		document.getElementById('focusfield').value=val;
	}
	function ChangeRow(val) { //SR18026
		var retTemp = EventValue(YUCI,YUSER,YFORM,'FIX','COMGridEdit31S','CHANGEROW','6',val);
		return val;
	}

	// This is necessary since not all cells have a width specified, 1 px dropped so
	// as to be less than col width otherwise wrapping will occur.
	// This is also rather dodgy, subtracting 1 pixel is sometimes enough to prevent
	// wrapping though not always. Don't know if 2 will always prevent wrapping.
	function getColWidth(intCol,domObj) {
		return (parseInt(parseFloat(document.getElementById('THfld'+intCol).style.width)*gridRatio())-2-domObj.children[1].offsetWidth);
	}
	
	function getCellWidth(domObj) { // <-- doing this instead of hardcoded as that can be error prone.
		var domParObj=findParentOf(domObj,'TD'),
		    width = 0;
		
		if (domParObj!=null) {
			if (domParObj.rowIndex==1 || domParObj.id.split('GridRow')[1]==1) {
				width = domObj.parentNode.offsetWidth;
			} else {
				width = domParObj.style.width;
			}
		}
		return width;
	}
	
	function findParentOf(domObj,strType) { // <-- Could extend this to look for objects with particular ids
		return (domObj.nodeName.toLowerCase()==strType?domObj:typeof(domObj.parentNode)=='object'?findParentOf(domObj.parentNode,strType):null);
	}
	
	function hideShowColumn(idCol,pHide,pForm) {
		var focusfield;
		var objTH=document.getElementById('THfld_'+pForm+'_'+idCol);
	 	var gridbody=document.getElementById('gridbody');	   //SR17253.2001-07-01
		var numRows=gridbody.rows.length;                      //SR17429
		var rowNo;
		var strClass;

		if (objTH!=null) {
			var objTHstyle = objTH.style;
		// If toggling Hide/Show state, save new state and then perform appropriate Hide/Show operations
			if (objTH.Hidden != pHide) {
				objTH.Hidden = pHide;
				
				if (pForm==YFORM) {    // SR17429 added
					if (numRows>0) {
						if (pHide) {
							strClass = 'TDhide'+getBrowser();
						} else {
							strClass = 'TDfld';
						}
							
						for (rowNo = numRows-1; rowNo >= 0 ; rowNo--) {
							gridbody.rows[rowNo].cells[objTH.cellIndex].className = strClass;
						}
					}
				}
				//SR17325.2 ^^^^

				if (pHide) {
					objTH.setAttribute('oldWidth',objTHstyle.width);
					if (pForm==YFORM) {
						objTH.oldInner = objTH.innerHTML;
						objTH.innerHTML = '';
					//	objTH.className = 'THhide';             // SR17377  //SR17377 display/visibility switch GRF
						objTH.className = 'THhide'+getBrowser();
						objTHstyle.width = 0;
					} else {
						objTHstyle.width=0;
						setWidth(objTH.cellIndex,0,'gridhead2');
					}
					focusfield = getFocusField();
					
					// Move the focus if hiding the currently focussed field
					if ((focusfield!='') && document.getElementById(focusfield).cellIndex == objTH.cellIndex) {
						moveFocus(39,0,0,'');
						if (getFocusField()==focusfield) {
							moveFocusLeft(37,0,0,'');
						}
					}
					
				} else {
					if (objTH.getAttribute('oldWidth')!=null) {
						if (pForm==YFORM) {
							//objTHstyle.width = objTH.style.oldWidth;
							objTHstyle.width = objTH.getAttribute('oldWidth');
							objTH.innerHTML = objTH.oldInner;
							objTH.className = 'THfld';          // SR17377
						} else {
							objTHstyle.width=objTH.getAttribute('oldWidth');
							setWidth(objTH.cellIndex,objTH.getAttribute('oldWidth'),'gridhead2');
						}
					}
				}
				
				if (pForm==YFORM) {   //SR17429
					if (numRows>0) {
						for (rowNo = numRows-1; rowNo >= 0 ; rowNo--) {
							with (gridbody.rows[rowNo].cells[objTH.cellIndex].style) {
								width = objTHstyle.width;
								maxWidth = objTHstyle.width;
								display = 'table-cell';
								if (pHide) {	//CORE-233.4
									border='none';
								} else {
									border='1px outset white';
								}
							}
						}
					}
				}
			}
		}
	//	syncGridWidths();    //SR17403 - removed
	}
 
	function SwitchReadOnly(pRow,pCol,pblnDisabled,pstrEnabled,pstrDisabled) {
		//TODO SR17630
		//SR17630 var field = document.getElementById('tdY'+pRow+'_'+pCol);
		var field = document.getElementById('tdY'+pRow+'_'+pCol); //SR17630 
		var fieldCheckbox = document.getElementById('tdY'+pRow+'_'+pCol+'_checkbox');
		
		field.Locked = pblnDisabled ? true : false;
		if (typeof(fieldCheckbox) != 'undefined' && fieldCheckbox != null) {
			fieldCheckbox.disabled = pblnDisabled ? true : false;
		}
		field.style.backgroundC]]><![CDATA[olor = field.Locked ? pstrDisabled : pstrEnabled;
		field.attachEvent('onmousedown',field.Locked?cgeOnMouseDownDisabled:cgeOnMouseDownEnabled);
	}
	
	function RedrawDynTable() { // SR15246
		window.setTimeout('blnDrawDynTableOnNextFocus = true; setFocusField(getFocusField());',CallBackDelay);
	}
	
	// SR15246 - Should use purge, however need to investigate as not working when
	//           quickly tested (subsequent d.innterHTML = ''; causes unknown js error)
	function RemoveChildren(d,pblnKillObject) {
		if (d != null && typeof(d) == 'object') {
			while (d.firstChild != null) {
				d.removeChild(d.firstChild);
			}
			if (pblnKillObject && d.parentNode != null) {
				d.parentNode.removeChild(d);
			}
		}
	}
	
	function purge(d) {
		if (typeof(d) == 'object' && d != null) {
			var a = d.attributes, i, l, n;
			if (a) {
				l = a.length;
				for (i = 0; i < l; i += 1) {
					n = a[i].name;
					if (typeof d[n] === 'function') {
						d[n] = null;
					}
				}
			}
			a = d.childNodes;
			if (a) {
				l = a.length;
				for (i = 0; i < l; i += 1) {
					purge(d.childNodes[i]);
				}
			}
		}
	}
	
	// Synchronize the width of the grid's header and body tables with the sum of the header's cells widths.
	function syncGridWidths() {
		if (navigator.userAgent.indexOf('MSIE') == -1) {
			document.getElementById('gridbody').style.width = document.getElementById('gridhead').offsetWidth+'px';
		}
	}
	function syncGridSize() { //SR18004
		syncGridWidths();
 		autoResize();		
	}
	//-->
	//</script>
	>
	quit]]></Routine>
</Export>