<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINUtils" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINUtils
	
#include COMSYS
#include FINConst
	
	;-------------------------------------------------------------------------------
	; History
	; 11-Jul-2005	GRF		ANMTagCheck() moved to COMUtilsRtn
	;-------------------------------------------------------------------------------
	
DecodeError(plstParams,pblnDecode=1)
    ;-------------------------------------------------------------------------------
    ; Wrapper for DecodeError^COMUtils, ensures Javascript compatibility.
    ;
    ; Returns:
    ;
    ; History:
    ; 16-Jun-2005	RobertW	Fixed quickly
    ; 17-Aug-2004	Shobby	Created (SR10257)
    ;-------------------------------------------------------------------------------
	new strText
	
	set strText=$$DecodeError^COMUtilError(plstParams)
	if pblnDecode set strText=$zcvt(strText,"o","JS")
	quit strText
	
AddItem(pstrItem,pstrNew)
	;-----------------------------------------------------------------------
	; Adds an item into a list, Useful for manipulating YVOR
	; 
	; History
	; 06-Jul-2003	shobby	Creation (TR005552)
	; -----------------------------------------------------------------------
	set pstrItem=pstrItem_";"
	if pstrItem=";" {
		set pstrItem=pstrNew
	} elseif '$find(pstrItem,";"_pstrNew_";") {
		set pstrItem=pstrItem_";"_pstrNew
	}
	quit pstrItem
	
FindGraphics(File="") 
	;-------------------------------------------------------------------------------
	; Find Graphics files in a file
	;
	; Returns:
	;
    ; History:
	; 11-Apr-2005	SCR		Added "'"
	; 20-Mar-2004	SCR		Added News
	; 02-Mar-2004	SCR		Created
	;-------------------------------------------------------------------------------
	new Graphics,Check,Text,Item,ext,Field 
	new Header1,Header2,Last,exts,Glo,Ref,Type,Count
	
	open File:"r"
	use File
	read Header1,Header2
	use 0
	write Header1,!,Header2,!
	set Last=$horolog
	set ext=".gif,.ico,.jp"
	set exts=$length(ext,",")
	for Count=1:1 {
		use File
		read Glo,Ref
		use 0
		quit:Glo="*"
		
		set Text=$zcvt(Ref,"l")
		set Check=$$$NO
		for Type=1:1:exts {
			if Text[$piece(ext,",",Type) {
				set Check=$$$YES
			}
		}
		if Check=$$$YES {
			set Text=$translate(Text,""",|'","~~~~")
			for Item=1:1:$length(Text,"~") {
				set Field=$piece(Text,"~",Item)
				for Type=1:1:exts {
					if Field[$piece(ext,",",Type) {
						set Graphics(Field)=$get(Graphics(Field))+1
					}
				}
			}
		}
	}
	Close File
	zw Graphics
	quit
	
ClassCompile() 
    ;-------------------------------------------------------------------------------
    ; Compile Class to Cache Classes
    ;
    ; Returns:
    ;
    ; History:
    ; 02-Mar-2005	Paul K		Reduce incidence of calling WWWVAR (SR#11305)
    ; 15-Mar-2004	SCR			Created
    ;-------------------------------------------------------------------------------
    ;
    new Form
    
    if $get(Y)="" do ^WWWVAR // TODO: MUST NOT be here, if for dev purposes put in DEV code
    
    set Form="FIN"
    for {
	    set Form=$order(^WWW001(0,Form))
	    quit:$extract(Form,1,3)'="FIN"
	    do COMPILE^WWW001O(Form)
    }
    
    quit
	
Format(Data,Type=8,pblnIn=0)
	;-------------------------------------------------------------------------------
	; Formats data for logical to display and vise versa
	; 
	; Params:
	; Data		String		String that requires conversion
	; Type		Enum        Relation: ^WWW100 Parameter: "FELDTYP",SPRACHE 
	; 						Common Numbers:
	;							1 = Date
	;							7 = Time
	;							8 = Currency
	; 							14= Timestamp
	; pblnIn	Boolean		If true : Display to Logical
	; 						If false: Logical to Display
	; Returns:String
	;
	; History:
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 17-Feb-2004   Paul K	Commented
	;-------------------------------------------------------------------------------
	new Formatted
	
	;if (pblnIn=1) && (Type=1) set Data=$$DateFix(Data)  ; Compensate for problem in $$^WWWTR
	set Formatted = $$Convert^WWWTR(pblnIn,Type,Data)
	quit Formatted
	
GetFINPARADescription(pstrParam="",plngNumber="")
    ;-------------------------------------------------------------------------------
    ; Returns the description of a FINPARA user parameter.
    ;
    ; History:
    ; 12-May-2006	RPW			SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
	; 15-Jul-2005	shobby		SR12754:Replaced LANGUAGE global (not always reliable)
    ; 19-Jan-2005	Steve S	Created
    ;-------------------------------------------------------------------------------
	new strDescription
	
	if $get(SPRACHE)="" do ^WWWVAR // TODO: MUST NOT be here, if for dev purposes put in DEV code
	set pstrParam      = $$$UPPER(pstrParam)
	set strDescription = plngNumber
	
	if plngNumber'="" {
		set strDescription = $piece($get(^FINPARA(YM,pstrParam,SPRACHE,plngNumber,1)),Y,1)
	}
	
	quit strDescription
	
CheckForm(pidForm,pidClass,pidDefault="")
    ;-------------------------------------------------------------------------------
    ; Check the form is for the specified Class
    ; if the form is not for the specfied class the default form is used
    ; if the default is null or does not belong the specified class then first form that does belong to the class is used.
    ; the form is returned if it can verifiied else null is returned
    ;
    ; Params:
    ; pidForm	= form id
    ; pidClass	= class id
    ; pidDefault= default form id (Optional)
    ;
    ; Returns: form or null
    ;
    ; History:
    ; 06-Nov-2005	SCR		SR13578: Created
    ;-------------------------------------------------------------------------------
	new objForm,idFormClass,blnOK,strIndex
	
	set blnOK=$$$NO 								; Default to not ok
	if $get(pidClass)="" 	set pidClass=" "		; if no class use space to prevent errors
	if $get(pidForm)="" 	set pidForm=" "			; if no form use space to prevent errors
	set objForm		= $get(^WWW120(0,pidForm,1))
	set idFormClass	= $$$WWW120ClassUsedInForm(objForm)
	if idFormClass=pidClass {
		set blnOK = $$$OK				; Form Class = Check Class , no more checking required
	}
	if (blnOK=$$$NO)&&(pidDefault'="")  {
		set pidForm     = pidDefault
		set idFormClass	= $$$WWW120ClassUsedInForm(objForm)
		if idFormClass=pidClass {
			set blnOK = $$$OK			; Default Form Class = Check Class , no more checking required
		}
	}
	if blnOK=$$$NO {
		set strIndex = $$Index^FINSYS(pidClass)		
		set pidForm  = $order(^WWW120s(0,1,strIndex,"")) 	; use the first form for the class
		if pidForm'="" set blnOK = $$$OK
	}
	
	quit pidForm
	
]]></Routine>
</Export>