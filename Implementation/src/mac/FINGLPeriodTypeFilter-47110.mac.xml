<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLPeriodTypeFilter" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLPeriodTypeFilter
	#include COMSYS
	#include FINConst
 		
YearCheck(pintYear)
	;-------------------------------------------------------------------------------
	; Check the year filter
	;
	; Params: pintYear		: Year to check
	;
	; ByRefs:
	;
	; Returns: blnFlag	(Whether this year is ok or not)
	;
	; History:
	; 09-Nov-2006	Steve S		SR14496: Created
	;-------------------------------------------------------------------------------
	new blnFlag,intYear
 
	set blnFlag=$$$YES
 
	set intYear = $get(^CacheTempPeriodFilter(YUSER,"Year"))
	if (intYear'="")&&(pintYear'=intYear) {
		set blnFlag=$$$NO
	}
 
	quit blnFlag
	
	
DateCheck(pdteStart,pdteEnd)
 	;-------------------------------------------------------------------------------
	; Check date ranges
	;
	; Params: pdteStart,pdteEnd	: Start/end dates of the period
	;
	; ByRefs:
	;
	; Returns: blnOK (Whether we're in the specified range or not)
	;
	; History:
	; 09-Nov-2006	Steve S		SR14496: Created
	;-------------------------------------------------------------------------------
	new blnOK,dteFrom,dteTo
 
	set blnOK = $$$YES
 
	set dteFrom = $get(^CacheTempPeriodFilter(YUSER,"FromDate"))
	if (dteFrom'="")&&(pdteStart<dteFrom) {
		set blnOK=$$$NO
	}
	
	set dteTo = $get(^CacheTempPeriodFilter(YUSER,"ToDate"))
	if (dteTo'="")&&(pdteEnd>dteTo) {
		set blnOK=$$$NO
	}
 
	quit blnOK
 
 
ApplyFilter()
 	;-------------------------------------------------------------------------------
	; Add the filters into the system and refresh the form
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 09-Nov-2006	Steve S		SR14496: Created
	;-------------------------------------------------------------------------------
	new strYMFELD
 
	set strYMFELD = $$GetFormData^COMUtilForm(YFORM,"M")
 
	set ^CacheTempPeriodFilter(YUSER,"Year") 		= $piece(strYMFELD,Y,9)
	set ^CacheTempPeriodFilter(YUSER,"FromDate") 	= $piece(strYMFELD,Y,10)
	set ^CacheTempPeriodFilter(YUSER,"ToDate") 		= $piece(strYMFELD,Y,11)
	
	do ReloadForm^COMUtilForm()
 
	quit
	
	
PopulateYearsList(pidPeriodType)
	;-------------------------------------------------------------------------------
	; Populate the years drop-down list
	;
	; Params: pidPeriodType	: The period type key
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 09-Nov-2006	Steve S		SR14496: Created
	;-------------------------------------------------------------------------------
	new lstYears,intIndex,intYear
 
	kill ^COMTempList(YM,YUSER,"Years")
 
	if '$$$NoKey(pidPeriodType) {
		set lstYears=$$GetYearsForPeriod^FINGLPeriod(pidPeriodType,,$$$NO)
		for intIndex=1:1:$listlength(lstYears) {
			set intYear = $listget(lstYears,intIndex)
			set ^COMTempList(YM,YUSER,"Years",intYear,1)=""
		}
	} else {
		kill ^CacheTempPeriodFilter(YUSER)
	}
	
	quit
	
	
DefaultYear(pidPeriodType)
	;-------------------------------------------------------------------------------
	; Gets the default Year filter
	;
	; Params: pidPeriodType	: The period type key
	;
	; ByRefs:
	;
	; Returns: intYear
	;
	; History:
	; 09-Nov-2006	Steve S		SR14496: Created
	;-------------------------------------------------------------------------------
	new intYear,lstYears,dteToday
 
	set intYear = ""
	
	if '$$$NoKey(pidPeriodType) {
		set lstYears = $$GetYearsForPeriod^FINGLPeriod(pidPeriodType,,$$$NO)
		if $data(^CacheTempPeriodFilter(YUSER,"Year")) {
			set intYear=$get(^CacheTempPeriodFilter(YUSER,"Year"))
		} else {
			set dteToday = +$horolog
			set intYear = $$$DateYear(dteToday)
			if '$listfind(lstYears,intYear) {
				set intYear=""
			} else {
				set ^CacheTempPeriodFilter(YUSER,"Year")=intYear
			}
		}
	}
 
	quit intYear
]]></Routine>
</Export>