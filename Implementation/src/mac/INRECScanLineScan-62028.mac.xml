<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INRECScanLineScan" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INRECScanLineScan
	
#include COMGridEdit31
#include INConst
#include %occInclude
#include COMSYS
		
AddScanLine(pidScan, pidType)
    ;-------------------------------------------------------------------------------
    ; Routine to Add a new line to a Grid after a Scan is validated
    ;
    ; Assumptions :
    ;  YFORM	-	 Form Name
    ; 
    ; Returns:
    ; 	Status
    ;
    ; History:
	; 28-Jun-2011	PPP		SR17802/1: Added Lot # and Expiration Date checks
	; 22-Jun-2011	PPP		SR17802: Created
    ;-------------------------------------------------------------------------------
 	new idLoc
 	new idItem
 	new objHeader
 	new idRecNo
 	new idSupplier
 	new idSupOrder
 	new idTSU
 	new idDataLine
 	new objOldData
 	new objLine
 	new arrFields
 	new strStatus
 	new idClass
 	new idLot
 	new dteExp
 	new strDelim
 	
 	set strStatus = $$$OK

	set idItem     	= $piece(pidScan,$$$ScanDelim,1)
	set objHeader  	= $$$GRIDYFELDContainer
	set idSupOrder	= $$$INRECSupplierOrder(objHeader)
	set strDelim	= $$$ScanDelim
 	
 	if (pidType = "") || (pidType = 1)	{
		set idItem = ""	
	
		if $get(YFORM)'="" {
			set idClass    	= $$$GetClass(YFORM)
			set objLine    	= ""
			set idItem     	= $piece(pidScan,strDelim,1)

			set idLot     	= $piece(pidScan,strDelim,2)						//Lot #
			set dteExp     	= $$GetDateFormatted($piece(pidScan,strDelim,3))	//Expiry Date

			//set ^zzPP($i(^zzPP))=idLot_":"_dteExp_":"_pidScan

			set objHeader  = $$$GRIDYFELDContainer
			//set idRecNo    = $$$KEY1(objHeader)
			set idSupplier = $$$INRECSupplier(objHeader)
			set idLoc		= $$$INRECLocation(objHeader)
			set idSupOrder	= $$$INRECSupplierOrder(objHeader)
			
			if idSupOrder '= ""	{
				if '$$OrderContainsProduct(idSupOrder,idItem)	{
					set strStatus = $$$MakeStatus("IN00668",idItem,idSupOrder)
					quit strStatus													//EARLY EXIT (Item onot on Order)
				}
			}

			set idTSU = $get(^CacheTemp(YUCI,YUSER,"TSU"))
			set idDataLine = $$GetRowLineREC(idItem,idLot,dteExp,idTSU)		//SR17802/1
		
			if idDataLine {
				set (objLine,objOldData) = $$$GRIDGetYFELD(idDataLine)
				set $$$INRECScanLineUnitQuantityReceived(objLine)    	= $$$INRECScanLineUnitQuantityReceived(objLine)+ 1
				set arrFields($$$FldINRECScanLineUnitQuantityReceived) 	= $$$INRECScanLineUnitQuantityReceived(objLine)
			
				//	Updates the Row and Displays it (for existing lines)
				//	If the row is on another page displays the lines at the top of the grid
				do UpdateRow^COMGridEdit31Scan(YFORM,idDataLine,.arrFields,objOldData)
			
			} else {  //New Line
				set $$$INRECScanLineItem(objLine)              		= idItem
				set $$$INRECScanLineUnitQuantityReceived(objLine)   = 1
				set $$$INRECScanLineReceivedUnit(objLine)      		= $$GetSupplierUOM^INARTUtilities(idItem,idSupplier)

				set ($$$INRECScanLineLocation(objLine),LOCATION)	= idLoc

				if idTSU = ""	{
					set idTSU = $$GetStorage^INLP(idItem,idLoc)
				}
				
				set $$$INRECScanLineStorage(objLine)           		= idTSU

				//SR17802/1
				if $get(idLot)'="" {
					set $$$INRECScanLineLotNumber(objLine)			= idLot
				}

				//SR17802/1
				if $get(dteExp)'="" {
					set $$$INRECScanLineExpirationDate(objLine)		= dteExp
				}
			
				//set ^zzPP($i(^zzPP))=objLine
				
				$$$GRIDAddLine(objLine,,idClass,,,,,,.idDataLine)
				do SimulateBlurOnAdd^COMGridEdit31Scan(idDataLine,objLine,"",YFORM,$$$FldINRECScanLineUnitQuantityReceived_","_$$$FldINRECScanLineStorage)
			}
		
		}
	
	//Storage (INLP)
 	} elseif pidType = 2 {
	 	
		set ^CacheTemp(YUCI,YUSER,"TSU") = $piece(pidScan,$$$ScanDelim,1)

 	}
 	
	quit $$$OK
	

GetDateFormatted(pdteDate)
    ;-------------------------------------------------------------------------------
    ; Get the formatted Date
    ; 
    ; Input : Unformatted Date (yyyymmdd)
    ;
    ; History:
	; 22-Jun-2011	PPP		SR17802: Created
    ;-------------------------------------------------------------------------------
	new dteFormatted

	set $ztrap = "GetDateFormattedError"
	set dteFormatted = ""

	if ( (pdteDate '= "") && ($length(pdteDate) > 5) ) {
		set dteFormatted = $zdh(pdteDate,4)
	}

	quit dteFormatted

GetDateFormattedError()
	quit ""
	
GetRowLineREC(pidItem, pidLot, pdteExp, pidTSU)
    ;-------------------------------------------------------------------------------
    ; Get the Row & Details for a given Item if it exists
    ; This is not generic but specific for a Receipt (because of Scans)
    ;
    ; Returns:
    ;
    ; History:
	; 28-Jun-2011	PPP		SR17802/1: Added Lot # and Expiration Date checks
	; 22-Jun-2011	PPP		SR17802: Created
    ;-------------------------------------------------------------------------------
	new idDataLine,idLine,objGridLine
		
	set idLine     = ""         ; FIXME : Why not just return idDataLine
	set idDataLine = "" 
	for {
		set idDataLine = $order($$$WWWDATEN("REFERENCEROW",idDataLine))
		quit:idDataLine=""
		
		continue:($get($$$WWWDATEN("KILLEDRECORD",$get($$$WWWDATEN("REFERENCEROW",idDataLine,1))))=$$$YES)
		
		set objGridLine = $$$GRIDGetYFELD(idDataLine)
		continue:($$$INRECScanLineItem(objGridLine)'=pidItem)
		
		if $get(pidTSU)'="" {
			continue:($$$INRECScanLineStorage(objGridLine)'=pidTSU)
		}

		//SR17802/1
		if $get(pidLot)'="" {
			continue:($$$INRECScanLineLotNumber(objGridLine)'=pidLot)
		}

		//SR17802/1
		if $get(pdteExp)'="" {
			continue:($$$INRECScanLineExpirationDate(objGridLine)'=pdteExp)
		}

		set idLine = idDataLine
		
		quit
	}
	
	quit idLine

OrderContainsProduct(pidOrder, pidItem)	
    ;-------------------------------------------------------------------------------
    ; Find if the Order has the Item as a Line
    ;
    ; Returns: Boolean
    ;
    ; History:
	; 24-Jun-2011	PPP		SR17802: Created
    ;-------------------------------------------------------------------------------
	
	quit +$data(^INAUFPs(0,8,pidItem,pidOrder))
	
]]></Routine>
</Export>