<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPP00Preview" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPP00Preview
	
#include INConst
#include COMConst
#include COMSYS
#include COMView
	
OnBeforeSave(YKEY,&YFELD)
	;-------------------------------------------------------------------------------
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 05-May-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$GRIDSave(YKEY)
	if $$$ISERR(strStatus) {
		$$$Alert(strStatus)
		set Q = $$$QDontSave
	}
	quit strStatus
	
OnAfterDataFields(YKEY)
	;-------------------------------------------------------------------------------
	; On After Data Fields load edit grid
	;
	; Params:
	; pidINPP00GenRule - Price Plan Generation Rule Id
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 05-May-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
 	if YSEITE=1 {
		do LoadGrid(YKEY,"INPP00Preview")
 	}
	
	quit
	
LoadGrid(YKEY,pstrForm)
	;-------------------------------------------------------------------------------
	; Load Edit Grid
	;
	; Params:
	; pidINPP00GenRule - Price Plan Generation Rule Id
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 13-Jul-2009	shobby	SR16511: Call to LoadCOMViewGrid requires YKEY
	; 05-May-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new YFORM,YAUSWAHL,YFELD
	
	set YFORM = pstrForm
	set YFELD = ""
	
	;set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
	;;set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 300
	;set $$$COMGridEditParameterGridName(YAUSWAHL)      = YFORM
	;set $$$COMGridEditParameterEnabled(YAUSWAHL)       = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	;set $$$COMGridEditParameterContainer(YAUSWAHL)     = "INPP00Preview"
 
	;do ^COMGridEdit31
 
	$$$ClearExternalFilter(YFORM)
	if '$$$NoKey(YKEY) {
		do AddExternalFilter^COMViewFilter(YFORM,"D1","",$$$EnumCOMVIEWCOMPARATORStartsWith,$$$YES)
	;	do AddExternalFilter^COMViewFilter(YFORM,"D24",$h+$$GetHorizon^INReqCommon()+1,$$$EnumCOMVIEWCOMPARATORLessThan,$$$YES)
	;	do AddExternalFilter^COMViewFilter(YFORM,"D15",$$$EnumINREQSTATUSUnfirmed,$$$EnumCOMVIEWCOMPARATOREquals,$$$ANNO)
		// SR15513 ^^^
		
		do LoadGrid2(YFORM,YKEY)
		do LoadCOMViewGrid^COMViewFilter(YFORM,YFORM_"Line"_",,"_YKEY,1) // SR15435 ;16511
	} 
	quit
 
LoadGrid2(pstrForm,pYKEY)
	new YFORM,YKEY,YAUSWAHL,YFELD
	
	kill ^CacheTempLocked(YUSER)
	do ClearOld^WWWMultiLock(YUSER)
		
	set YFORM	= pstrForm_"Line"
	set YFELD	= ""
	set YKEY	= pYKEY
	
	if $get(YVOR)="" set YVOR=$get(^WWW120(0,pstrForm,1))
		
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)          = $$$YES
	;set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)      = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)            = YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)             = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)           = pstrForm
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL) = $$$YES
	set $$$COMGridEditParameterCOMViewGrid(YAUSWAHL)         = $$$YES // SRBR014416
	
	do ^COMGridEdit31
	quit
 
CreatePreview(pidRuleHeader)
	;-------------------------------------------------------------------------------
	; Create the Price Plan Preview.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 03-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new objINPP00GenRuleLine,strStatus,idINPP00Preview,objPrices
 
 	set strStatus = $$$OK
 	do PreservePrices(pidRuleHeader,.objPrices)
	set strStatus = $$$Kill("INPP00Preview",pidRuleHeader)
	if $$$ISOK(strStatus) set strStatus = $$CreatePreviewHeader(pidRuleHeader)
	if $$$ISOK(strStatus) set strStatus = $$CreatePreviewLines(pidRuleHeader,.objPrices)
	quit strStatus


PreservePrices(pidRuleHeader,&pobjPrices)
	;-------------------------------------------------------------------------------
	; If users have already entered a price don't lose it when re-generating the preview.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idLine,objINPP00PreviewLine
	
	set idLine=""
	for {
		set idLine=$order(^INPP00PreviewLine(YM,pidRuleHeader,idLine))
		quit:idLine=""
		
		set objINPP00PreviewLine = $get(^INPP00PreviewLine(YM,pidRuleHeader,idLine,1))
		set pobjPrices($$$INPP00PreviewLineItem(objINPP00PreviewLine),$$$INPP00PreviewLineLocation(objINPP00PreviewLine)) = $$$INPP00PreviewLineNewPrice(objINPP00PreviewLine)
	}
	quit

 
CreatePreviewHeader(pidRuleHeader)
	new strStatus,objINPP00GenRule,objINPP00Preview
	
	set strStatus = $$$OK
	
	set objINPP00GenRule = $get(^INPP00GenRule(YM,pidRuleHeader,1))
 
	set objINPP00Preview = ""
	set $$$INPP00PreviewFromDate(objINPP00Preview) = $$GetTimestamp($$$INPP00GenRuleValidFromDate(objINPP00GenRule),$$$INPP00GenRuleValidFromTime(objINPP00GenRule))
	set $$$INPP00PreviewToDate(objINPP00Preview)   = $$GetTimestamp($$$INPP00GenRuleValidToDate(objINPP00GenRule)  ,$$$INPP00GenRuleValidToTime(objINPP00GenRule))
	set $$$INPP00PreviewPricePlanType(objINPP00Preview) = $$$INPP00GenRulePricePlanType(objINPP00GenRule)
	
	set strStatus = $$$Save("INPP00Preview",pidRuleHeader,objINPP00Preview,$$$YES)
 
	quit strStatus
	
	
CreateIndex(pidRuleHeader,&parrRuleIndex)
	;-------------------------------------------------------------------------------
	; Here we want to create a special type of index to process the rule lines in the
	; order of precedence.
	; We can't use a standard index on this because numeric entries sort before a <space>.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 03-Aug-2009	shobby	SR16511: Include additonal key for Maximum Cost
	; 11-May-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idRuleLine,idRuleIndex,objINPP00GenRuleLine,fltMaximumCost
	
	set idRuleLine = ""
	for {
		set idRuleLine = $order(^INPP00GenRuleLine(YM,pidRuleHeader,idRuleLine))
		quit:idRuleLine=""
		
		set objINPP00GenRuleLine = $get(^INPP00GenRuleLine(YM,pidRuleHeader,idRuleLine,1))
		set fltMaximumCost       = +$$$INPP00GenRuleLineLow(objINPP00GenRuleLine)
	;	if fltMaximumCost="" set fltMaximumCost = " "
		
		if $$$INPP00GenRuleLineItem(objINPP00GenRuleLine)'="" {
			set idRuleIndex=1
		
		} elseif $$$INPP00GenRuleLineItemGroup(objINPP00GenRuleLine)'="" {
			set idRuleIndex=2
		
		} elseif $$$INPP00GenRuleLinePriceCategory(objINPP00GenRuleLine)'="" {
			set idRuleIndex=3
		
		} else {
			set idRuleIndex=99
		}
		set parrRuleIndex(idRuleIndex,fltMaximumCost,idRuleLine)=""
	}
	quit
	
	
CreatePreviewLines(pidRuleHeader,pobjPrices)
	;-------------------------------------------------------------------------------
	; Creates the Preview Lines
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 03-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new arrRuleIndex,idGroup,idItem,idLine,idMaximumCost,idRuleIndex,idRuleLine
	new objINPP00GenRule,objINPP00GenRuleLine,objINPP00PreviewLine,strStatus
	
	set strStatus = $$$OK
	set idLine    = ""
	set objINPP00GenRule = $get(^INPP00GenRule(YM,pidRuleHeader,1))
 
 	do CreateIndex(pidRuleHeader,.arrRuleIndex)
 	
 	set idRuleIndex = ""
 	for {
	 	set idRuleIndex = $order(arrRuleIndex(idRuleIndex))
 		quit:idRuleIndex=""
	 	
	 	set idMaximumCost = ""
	 	for {
		 	set idMaximumCost = $order(arrRuleIndex(idRuleIndex,idMaximumCost),-1)
	 	 	quit:idMaximumCost=""
	 	 	
	 		set idRuleLine = ""
	 		for {
		 		set idRuleLine = $order(arrRuleIndex(idRuleIndex,idMaximumCost,idRuleLine))
	 			quit:idRuleLine=""
	 		
				set objINPP00GenRuleLine = $get(^INPP00GenRuleLine(YM,pidRuleHeader,idRuleLine,1))
				if $$$INPP00GenRuleLineItem(objINPP00GenRuleLine)'="" {
					set strStatus = $$CreatePreviewItem(pidRuleHeader,idRuleLine,.idLine,$$$INPP00GenRuleLineItem(objINPP00GenRuleLine),$$$INPP00GenRuleCostPointDate(objINPP00GenRule),$$$INPP00GenRuleCostPointTime(objINPP00GenRule),,.pobjPrices)
				
				} elseif $$$INPP00GenRuleLineItemGroup(objINPP00GenRuleLine)'="" {
					set strStatus = $$CreatePreviewItems(40,pidRuleHeader,idRuleLine,.idLine,$$$INPP00GenRuleLineItemGroup(objINPP00GenRuleLine),$$$INPP00GenRuleCostPointDate(objINPP00GenRule),$$$INPP00GenRuleCostPointTime(objINPP00GenRule),,.pobjPrices)
				
				} elseif $$$INPP00GenRuleLinePriceCategory(objINPP00GenRuleLine)'="" {
					set strStatus = $$CreatePreviewItemsByCategory(pidRuleHeader,idRuleLine,.idLine,$$$INPP00GenRuleLinePriceCategory(objINPP00GenRuleLine),$$$INPP00GenRuleCostPointDate(objINPP00GenRule),$$$INPP00GenRuleCostPointTime(objINPP00GenRule),.pobjPrices)
				
				} else {
					set strStatus = $$CreatePreviewItemsByLocation(pidRuleHeader,idRuleLine,.idLine,$$$INPP00GenRuleLineLocation(objINPP00GenRuleLine),$$$INPP00GenRuleCostPointDate(objINPP00GenRule),$$$INPP00GenRuleCostPointTime(objINPP00GenRule),.pobjPrices)
				}
				quit:$$$ISERR(strStatus)
	 		}
	 		quit:$$$ISERR(strStatus)
	 	}
		quit:$$$ISERR(strStatus)
 	}
	quit strStatus
 
 
CreatePreviewItemsByLocation(pidRuleHeader,pidRuleLine,&pidLine,pidCategory,pdteDate,ptmeTime,&pobjPrices)
	new idItem,strStatus,intCount
	
	set strStatus = $$$OK
	set intCount  = 0
	set idItem = ""
	for {
		set idItem = $order(^INART(YM,idItem))
		quit:idItem=""
		
		set intCount = intCount+1
		;quit:intCount>1000
		set strStatus = $$CreatePreviewItem(pidRuleHeader,pidRuleLine,.pidLine,idItem,pdteDate,ptmeTime,,.pobjPrices)
		quit:$$$ISERR(strStatus)
	}
	quit $$$OK
	
	
CreatePreviewItemsByCategory(pidRuleHeader,pidRuleLine,&pidLine,pidCategory,pdteDate,ptmeTime,&pobjPrices)
	;-------------------------------------------------------------------------------
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 03-Nov-2009	GRF		SR16871: idRuleLine instead of pidRuleLine
	; 11-May-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new arrPriority,idCategory,idINItemGroup,idLevel,idPriority
	new objINItemGroup,strStatus
	
	set strStatus=$$$OK
	
	; FIXME : objINPP00GenRuleLine not defined; idLine => pidLine?
	
	; Look at which items are in a price category.
	set strStatus=$$CreatePreviewItems(17,pidRuleHeader,pidRuleLine,.idLine,$$$INPP00GenRuleLinePriceCategory(objINPP00GenRuleLine),pdteDate,ptmeTime,,.pobjPrices)
	
	; Now look at which groups are in a price category.
	set idINItemGroup=""
	for {
		; First process the groups at the bottom of the tree, then work upwards.
		set idINItemGroup=$order(^INItemGroup(YM,idINItemGroup))
		quit:idINItemGroup=""
		
		set idCategory=$$GetPriceCategoryForItemGroup^INCategory(idINItemGroup)
		if idCategory'="" {
			set ^arrPriority($$GetLevel^INBItemGroup(idINItemGroup,YM),idINItemGroup)=idCategory
		}
	}
	set idLevel=""
	for {
		set idLevel=$order(^arrPriority(idLevel))
		quit:idLevel=""
		
		set idINItemGroup=""
		for {
			set idINItemGroup=$order(^arrPriority(idLevel,idINItemGroup))
			quit:idINItemGroup=""
			
			set idCategory=^arrPriority(idLevel,idINItemGroup)
			if idCategory'="" {
				set strStatus=$$CreatePreviewItems(40,pidRuleHeader,pidRuleLine,.pidLine,idINItemGroup,pdteDate,ptmeTime,".1."_idINItemGroup,pobjPrices)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	quit strStatus
	
	
	; FIXME : Tag too close to CreatePreviewItem
CreatePreviewItems(pidIndex,pidRuleHeader,pidRuleLine,&pidLine,pidCollection,pdteDate,ptmeTime,pstrRuleLevel="",pobjPrices)
	;-------------------------------------------------------------------------------
	; Based on categories or groups.  Create a list of items
	;
	; Params:
	; 	pidCollection:  May be a Group or a Category
	;
	; Returns:
	;
	; History:
	; 11-May-2009	SHOBBY0		SR16511: Created
	;-------------------------------------------------------------------------------
	new idItem,idxCollection,strStatus
	
	set strStatus     = $$$OK
	set idxCollection = $$$Index(pidCollection)
	
	set idItem = ""
	for {
		set idItem = $order(^INARTs(0,pidIndex,idxCollection,idItem))
		quit:idItem=""
		quit:$$$ISERR(strStatus)
		
		set strStatus = $$CreatePreviewItem(pidRuleHeader,pidRuleLine,.pidLine,idItem,pdteDate,ptmeTime,pstrRuleLevel,.pobjPrices)
	}
	
	quit strStatus
	

	; FIXME : Tag too close to CreatePreviewItems
CreatePreviewItem(pidRuleHeader,pidRuleLine,pidLine,pidItem,pdteDate,ptmeTime,pstrRuleLevel="",pobjPrices)
	;-------------------------------------------------------------------------------
	; Creates a line 
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 03-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new fltCost,objINPP00GenRuleLine,objINPP00PreviewLine,idINPP00PreviewLine,strStatus
 
	set strStatus=$$$OK
	
	set objINPP00GenRuleLine=$get(^INPP00GenRuleLine(YM,pidRuleHeader,pidRuleLine,1))
 
	if '$$Exists($$$INPP00GenRuleLineLocation(objINPP00GenRuleLine),pidItem,pidRuleHeader) {
	;	set fltCost = $$GetCostAsAtDateAndTime^INARTAVG(pidItem,pdteDate,ptmeTime)
		set fltCost = $$GetCostBasedOnCostBasis^INPP00GenRuleLine(pidItem,pidRuleHeader,pidRuleLine)
		if (fltCost'<$$$INPP00GenRuleLineLow(objINPP00GenRuleLine))||($translate($$$INPP00GenRuleLineLow(objINPP00GenRuleLine)," ")="") {
			set objINPP00PreviewLine=""
			set pidLine=pidLine+1
			set idINPP00PreviewLine = pidRuleHeader_","_pidLine
			set $$$INPP00PreviewLineItem(objINPP00PreviewLine) = pidItem
			set $$$INPP00PreviewLineUnit(objINPP00PreviewLine) = $$GetUOM^INPP00GenRuleLine(pidItem)  ;$$$INPP00GenRuleLineUnit(objINPP00GenRuleLine)
			set $$$INPP00PreviewLineCost(objINPP00PreviewLine) = fltCost
			
			set $$$INPP00PreviewLineCurrentPrice(objINPP00PreviewLine) = +$$GetPrice^INItemPrice(pidItem,$$$INPP00PreviewLineUnit(objINPP00PreviewLine),1,$$$INPP00GenRuleLineLocation(objINPP00GenRuleLine),$$$INPP00GenRulePricePlanType($get(^INPP00GenRule(YM,pidRuleHeader,1))),$horolog,"","",0)
			;set $$$INPP00PreviewLineCurrentPrice(objINPP00PreviewLine)=$$^INSALESPRICE(pidItem,1,$$$INPP00GenRuleLineLocation(objINPP00GenRuleLine))
			set $$$INPP00PreviewLineLocation(objINPP00PreviewLine)=$$$INPP00GenRuleLineLocation(objINPP00GenRuleLine)
			set $$$INPP00PreviewLineActive1(objINPP00PreviewLine)=$$Active(pidItem)
			
			if $$$INPP00PreviewLineActive1(objINPP00PreviewLine) {
				set $$$INPP00PreviewLineSuggestedPrice(objINPP00PreviewLine)=$$CalculatePrice(pidRuleHeader,pidRuleLine,objINPP00PreviewLine)	
				; Variance
				if +$$$INPP00PreviewLineCurrentPrice(objINPP00PreviewLine)=+$$$INPP00PreviewLineSuggestedPrice(objINPP00PreviewLine) {
					set $$$INPP00PreviewLineVariance(objINPP00PreviewLine)=0
				
				} elseif +$$$INPP00PreviewLineCurrentPrice(objINPP00PreviewLine)=0 {
					set $$$INPP00PreviewLineVariance(objINPP00PreviewLine)=100
				
				} else {
					set $$$INPP00PreviewLineVariance(objINPP00PreviewLine)=+(($$$INPP00PreviewLineSuggestedPrice(objINPP00PreviewLine)-$$$INPP00PreviewLineCurrentPrice(objINPP00PreviewLine))*100/$$$INPP00PreviewLineCurrentPrice(objINPP00PreviewLine))
				}
				set $$$INPP00PreviewLineVariance(objINPP00PreviewLine)=$justify($$$INPP00PreviewLineVariance(objINPP00PreviewLine),0,2)
				
				if $$$INPP00GenRuleLineExclude(objINPP00GenRuleLine) {
					set $$$INPP00PreviewLineExcluded(objINPP00PreviewLine)=$$$YES
					if $$$INPP00GenRuleLinePrice(objINPP00GenRuleLine)'="" {
						set $$$INPP00PreviewLineNewPrice(objINPP00PreviewLine)=$$$INPP00PreviewLineSuggestedPrice(objINPP00PreviewLine)
					
					} else {
						set $$$INPP00PreviewLineNewPrice(objINPP00PreviewLine)=$$$INPP00PreviewLineCurrentPrice(objINPP00PreviewLine)
					}
					set $$$INPP00PreviewLineAccept(objINPP00PreviewLine)=$$$YES
				
				} else {
					set $$$INPP00PreviewLineNewPrice(objINPP00PreviewLine)=$get(pobjPrices(pidItem,$$$INPP00GenRuleLineLocation(objINPP00GenRuleLine)))
				}
			
			} else {
				set $$$INPP00PreviewLineExcluded(objINPP00PreviewLine)=$$$YES
				set $$$INPP00PreviewLineAccept(objINPP00PreviewLine)=$$$YES
			}	
			set $$$INPP00PreviewLineRule(objINPP00PreviewLine)=pidRuleLine_pstrRuleLevel
	
			
			set $$$INPP00PreviewLinePriceCategory(objINPP00PreviewLine)=$$GetPriceCategoryForProduct^INCategory(pidItem)
			set strStatus = $$$Save("INPP00PreviewLine",pidRuleHeader_","_pidLine,objINPP00PreviewLine,$$$YES)
		}
	}	
	quit strStatus
 
 
Active(pidItem)
	;-------------------------------------------------------------------------------
	; If this item is not active then exclude from pricing.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 14-Oct-2009	GRF		SR16511: Property name change
	; 04-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new blnActive,objINART,objINItemGroup
	
	set objINART  = $get(^INART(YM,pidItem,1))
	set blnActive = (+$$$INARTHoldReason(objINART)=0)
	if blnActive set blnActive = '$$$INARTNotInPriceRuleCalc(objINART)
	
	if blnActive && ($$$INARTItemGroup(objINART)'="") {
		set objINItemGroup=$get(^INItemGroup(YM,$$$INARTItemGroup(objINART),1))
		if objINItemGroup'="" {
			if $$$INItemGroupActive1(objINItemGroup) {
				set blnActive = '$$$INItemGroupNotInPriceRuleCalc(objINItemGroup)
			}
		}
	}
	quit blnActive
	
	
Exists(pidLocation,pidItem,pidRuleHeader)
	quit $data(^INPP00PreviewLines(YM,1,$$$Index(pidLocation),$$$Index(pidItem),pidRuleHeader))
 
 
OnBeforeDelete(YKEY)  ; FIXME : pidTFR not defined
	new strStatus
	
	set strStatus = $$Transaction^COMTransaction("DeleteTxn^INPP00Preview("""_YKEY_""")")
	
	if $$$ISERR(strStatus) {
		do ReturnError^COMUtilError($listbuild("IN00462",pidTFR,$$$Text(strStatus)))  ; "Delete of Transfer Order %1 unsuccessful. Reason: %2"
		set Q = $$$QDontDelete // SR15098
	}
	
	quit strStatus
	
DeleteTxn(YKEY)
	new strStatus,idLine
	
	set strStatus = $$$OK
	set idLine    = ""
	for {
		set idLine = $order(^INPP00PreviewLine(YM,YKEY,idLine))
		quit:idLine=""
		
		set strStatus = $$$Kill("INPP00PreviewLine",YKEY_$$$COMMA_idLine)
		quit:$$$ISERR(strStatus)
	}
	if $$$ISOK(strStatus) set strStatus = $$SetStatus^INPP00GenRule(YKEY,$$$EnumCOMSYSSTATUSBuilding)
	quit strStatus
	
	
CalculatePrice(pidRuleHeader,pidLine,pobjINPP00PreviewLine)
	;-------------------------------------------------------------------------------
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 24-Aug-2009	shobby	SR16511: Refer Guy email where markup is a multiplier
	; 							not a percentage.
	; 24-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new fltPrice,objINPP00GenRuleLine,fltCost
	
	set fltPrice=""
	set fltCost=$$$INPP00PreviewLineCost(pobjINPP00PreviewLine)
	set objINPP00GenRuleLine=$get(^INPP00GenRuleLine(YM,pidRuleHeader,pidLine,1))

	if $$GetPriceTypePolicy^INPP00GenRuleLine($$$INPP00PreviewLineItem(pobjINPP00PreviewLine),$$$INPP00PreviewLineLocation(pobjINPP00PreviewLine)) {
		set fltPrice=$$GetFixedPrice^INPP00GenRuleLine($$$INPP00PreviewLineItem(pobjINPP00PreviewLine),$$$INPP00PreviewLineLocation(pobjINPP00PreviewLine))
	
	} elseif $$$INPP00GenRuleLinePrice(objINPP00GenRuleLine)'="" {
		set fltPrice=$$$INPP00GenRuleLinePrice(objINPP00GenRuleLine)
	
	} elseif +$$$INPP00GenRuleLineExclude(objINPP00GenRuleLine) {
		set fltPrice=$$$INPP00PreviewLineCurrentPrice(pobjINPP00PreviewLine)
	
	} elseif $$$INPP00GenRuleLineMarkUp(objINPP00GenRuleLine)'="" {
		set fltPrice=$$$FCMult($$$INPP00GenRuleLineMarkUp(objINPP00GenRuleLine),fltCost)
		;set fltPrice=$$$FCDivd(fltPrice,100)
		set fltPrice=$$$FCAdd(fltPrice,fltCost)
		if fltPrice<$$$INPP00GenRuleLineMinimumPrice(objINPP00GenRuleLine) {
			set fltPrice=$$$INPP00GenRuleLineMinimumPrice(objINPP00GenRuleLine)
		}
	}
	quit fltPrice
 
 
	; --------------------------------------- Update -------------------------------------------------
UpdateTxn(pidRuleHeader)
	;-------------------------------------------------------------------------------
	; Update the prices
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 05-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idLine,strStatus,objINPP00PreviewLine,objINPP00Preview
	new objINARTPREISBE,objINART,idINARTPREISBE,objINARTPREISBE1,idINARTPREISBE1
	;new objINARTPREISBE

	set strStatus=$$$OK
	
	set objINPP00Preview=$get(^INPP00Preview(YM,pidRuleHeader,1))
	
	set idLine=""
	for {
		set idLine=$order(^INPP00PreviewLine(YM,pidRuleHeader,idLine))
		quit:idLine=""
		quit:$$$ISERR(strStatus)
		
		set objINPP00PreviewLine=$get(^INPP00PreviewLine(YM,pidRuleHeader,idLine,1))
		if $$$INPP00PreviewLineAccept(objINPP00PreviewLine)&&$$$INPP00PreviewLineActive1(objINPP00PreviewLine) {
			;FIXME Work out what the Price Identifier should be.
			;
			set idINARTPREISBE=$$$INPP00PreviewLineItem(objINPP00PreviewLine)_","_$$$INPP00PreviewLineLocation(objINPP00PreviewLine)
			set objINARTPREISBE=""
			set objINART=$get(^INART(YM,$$$INPP00PreviewLineItem(objINPP00PreviewLine),1))
			set $$$INARTPREISBEItemGroup(objINARTPREISBE)=$$$INARTItemGroup(objINART)
			
			set strStatus = $$$Save("INARTPREISBE",idINARTPREISBE,objINARTPREISBE,$$$YES)
			
			if $$$ISOK(strStatus) {
				;set $$$INARTSalesPrice(objINART)=$$$INPP00PreviewLineNewPrice(objINPP00PreviewLine)
				set $$$INARTPriceIdentifier(objINART)="BP"
				set strStatus = $$$Save("INART",$$$INPP00PreviewLineItem(objINPP00PreviewLine),objINART,$$$YES)
			}
			
			if $$$ISOK(strStatus) {
				;do Recalc^INARTPREISBE(idINARTPREISBE,$$$NO)	//SR15104
				
				set objINARTPREISBE1=""
				set idINARTPREISBE1=idINARTPREISBE_","_$$$INARTPriceIdentifier(objINART)_","_$$$INPP00PreviewFromDate(objINPP00Preview)
				set $$$INARTPREISBE1ValidTo(objINARTPREISBE1) = $$$INPP00PreviewToDate(objINPP00Preview)
				set $$$INARTPREISBE1Base(objINARTPREISBE1)    = $$$INPP00PreviewLineNewPrice(objINPP00PreviewLine)
				set $$$INARTPREISBE1PricePlanRule(objINARTPREISBE1)=$$GetRemark(pidRuleHeader,$$$INPP00PreviewLineRule(objINPP00PreviewLine))
				
				set strStatus = $$$Save("INARTPREISBE1",idINARTPREISBE1,objINARTPREISBE1,$$$YES)
			}
		}
	}
	if $$$ISOK(strStatus) set strStatus = $$SetStatus^INPP00GenRule(pidRuleHeader,$$$EnumCOMSYSSTATUSUsed)
	do ReloadForm^COMUtilForm()
	quit strStatus
	
	
GetRemark(pidRuleHeader,pidRuleLine)
	;-------------------------------------------------------------------------------
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 16-Jul-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	;quit $$^WWWFELDNAME("INPP00GenRule","P",1)_" ("_pidRuleHeader_","_pidRuleLine_")"
	quit pidRuleHeader_","_pidRuleLine
 
 
Update(YKEY)
	;-------------------------------------------------------------------------------
	; Transaction wrapper to post the records
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 05-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$Transaction^COMTransaction("UpdateTxn^INPP00Preview("""_YKEY_""")")
	
	if $$$ISERR(strStatus) {
		do ReturnError^COMUtilError($listbuild("IN00462",YKEY,"Price Update Failed!"))
		set Q = $$$QDontDelete
	}
	
	quit strStatus
	
	
	;----------------------------------------- Tools -------------------------------------------------
GetTimestamp(pdteDate,ptmeTime)
 	new strTimestamp
 	
 	set strTimestamp=pdteDate
 	if ptmeTime'="" set strTimestamp=strTimestamp_","_ptmeTime
 	quit strTimestamp
 
 
IsDisabled(pintButton,pidRuleHeader)
	;-------------------------------------------------------------------------------
	; Should the buttons be disabled?
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 16-Jul-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new strStatus,enmStatus,idLine
	
	set strStatus = $$$OK
	
	if '$$$NoKey(pidRuleHeader) {
		set enmStatus=$$GetStatus^INPP00GenRule(pidRuleHeader)
		if pintButton=1 { ;Post
			set idLine=$order(^INPP00PreviewLines(YM,3," ",$$$Index(pidRuleHeader),""))
			if enmStatus=$$$EnumCOMSYSSTATUSUsed {
				set strStatus = $$$MakeStatus("IN00377")        ; "Record Already Processed."
			
			} elseif '$data(^INPP00PreviewLines(YM,2,1,$$$Index(pidRuleHeader))) {
				set strStatus = $$$MakeStatus("IN01087")        ; "No lines accepted."
			
			} elseif idLine'="" {
				set strStatus=$$$MakeStatus("IN01088",idLine)   ; "Item on line '%1' has no 'Pack Unit' defined."
			}
		}
	}
	$$$YQHandler(strStatus)
 	
	quit strStatus
	
	
OnBeforeButtonLine(YKEY)
	;-------------------------------------------------------------------------------
	; Description :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 16-Jul-2009	DavidR	SR16511: Created
	;-------------------------------------------------------------------------------
	if $$GetStatus^INPP00GenRule(YKEY)=$$$EnumCOMSYSSTATUSUsed  {
		set $$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly
	}
	quit
	
]]></Routine>
</Export>