<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INMOIssue" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INMOIssue
	
#include COMSYS
#include INConst
#include COMConst
	
#define enumAverageCost		9
	
OnBeforeSave(pYKEY)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 30-Apr-2010	PPP		SR16573: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$GRIDSave(YKEY)
	
	if $$$ISERR(strStatus) {	
		do ReturnError^COMUtilError(strStatus)
		set Q = $$$QDontSave
	}
	quit
	
	
OnAfterDataFields(pYKEY, pYFELD)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 30-Apr-2010	PPP		SR16573: Created
	;-------------------------------------------------------------------------------
	quit:pYKEY=""
	
	if YSEITE=1 do LoadINMOIssueLine(pYKEY,pYFELD)	
	quit
	
	
OnBeforeFormConstruction(pYKEY)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 30-Apr-2010	PPP		SR16573: Created
	;-------------------------------------------------------------------------------
	new idIssue
	
	quit:YPARA=""
	
	set idIssue = $order(^INIssues(0,6,$$$Index(pYKEY),""))
	
	if (idIssue'="") {
	    set YKEY  = idIssue
	    set YPARA = ""
	
	} else {
		set YKEY = ""
	}
	quit
	
	
IsFirmable(pidIssue)
	;-------------------------------------------------------------------------------
	; Checks whether the INIssue record can be firmed or not 
	; Params:
	;
	; Returns:
	;
	; History:
	; 13-Sep-2012	PPP		SR18113:Included Location validation on the firm button of the INMO (C100)	
	; 02-Nov-2009	GRF		SR16871: Boolean macros
	; 09-JUN-2009	Kalyan	SR16573: Created
	;-------------------------------------------------------------------------------
	new blnFirmable,idIssueLine,objINIssue,objIssueLine,strStatus,objQtyItem,arrItems,idItem,fltQtyItem,idFromLocn,
		fltQtyOnHand,idCurrItem	
	
 	set strStatus   = $$$OK
	set blnFirmable = $$$YES
	
	if (pidIssue'="") {
		set objINIssue = $get(^INIssue(0,pidIssue,1))
		
		if ($$$INIssueStatus(objINIssue) = 9) {
			set strStatus = $$$MakeStatus("IN01218")     ; "Order has already been Issued"
		
		} else {
			set idIssueLine=""
			for {
				set idIssueLine = $order(^INIssueLine(0,pidIssue,idIssueLine))
				quit:idIssueLine=""
				
				set objIssueLine = $get(^INIssueLine(0,pidIssue,idIssueLine,1))
				set idCurrItem = $$$INIssueLineItem(objIssueLine)
				
				set objQtyItem = $get(arrItems(idCurrItem))
				if (objQtyItem '= "") {
					set arrItems(idCurrItem) = objQtyItem + $$$INIssueLineQtyIssued(objIssueLine)
				}
				else {
					set arrItems(idCurrItem) = $$$INIssueLineQtyIssued(objIssueLine)
				}
				
				if ($$$INIssueLineQtyIssued(objIssueLine)="") || ($$$INIssueLineFromStorage(objIssueLine)="") {
					set blnFirmable = $$$NO
				} else {
					set blnFirmable = $$$YES
				}
			}
			
			if 'blnFirmable {
				set strStatus = $$$MakeStatus("IN01220")
			} ; "Please enter Issued Quantity and select the Storage from the below grid, for all the lines"
		}
		
		//SR18113
		if ($$$INIssueFromLocn(objINIssue) '= YLOCATION) {
      		set strStatus = $$$MakeStatus("IN01338")		;Only the Supplying Location can perform this operation
		}
		
		//HEVA-1073
		if $$$ISOK(strStatus) {
			set idItem=""
			for {
				set idItem = $order(arrItems(idItem))
				quit:(idItem="")
				quit:('$$$ISOK(strStatus))
				
				set fltQtyItem 	= $get(arrItems(idItem))
				set idFromLocn	= $$$INIssueFromLocn(objINIssue)
				
				set fltQtyOnHand = ##class(alSOH.piSOHQty).GetQtyAvailable(idItem,idFromLocn)
				
				if (fltQtyOnHand<fltQtyItem) {
					set strStatus = $$$MakeStatus("IN01040",idItem,idFromLocn)
				}
			}
		}
	}
 	$$$YQHandler(strStatus)
	quit strStatus	
		
	
LoadINMOIssueLine(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 30-Apr-2010	PP		SR16573: Created
	;-------------------------------------------------------------------------------
	new YFORM,YKEY,YAUSWAHL,YFELD
	
	set YFORM = "INMOIssueLine"			
	set YKEY = $get(pYKEY)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)			= $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)		= 200
	set $$$COMGridEditParameterGridName(YAUSWAHL) 			= YFORM
	set $$$COMGridEditParameterUpdateFields(YAUSWAHL) 		= ""
	set $$$COMGridEditParameterClearFields(YAUSWAHL) 		= ""
	set $$$COMGridEditParameterDefaultFields(YAUSWAHL) 		= ""
	set $$$COMGridEditParameterContainer(YAUSWAHL) 			= "INMOIssue"
	set $$$COMGridEditParameterEnabled(YAUSWAHL)			= ($$$INIssueStatus(pYFELD) = 1) ; open
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL)=$$$YES
	do ^COMGridEdit31
	do ^WWWVAR
	quit
	
	
FirmIssue(pidIssue)
	;-------------------------------------------------------------------------------
	; Firms the Issue Lines and creates the Receipt Lines
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 
	; 10-Jul-2009	Vijay	SR16573: Modified to Update the Status of Prodution
	;							order to "Issued" if FIRM was successful 
	; 02-Jul-2009	Kalyan	SR16573: Created
	;-------------------------------------------------------------------------------
	new idProdOrder,objINMO,objINIssue,strStatus
	
	set strStatus = $$Transaction^COMTransaction("PostTxn^INIssueAuto("""_pidIssue_""")",$$$YES)
	
	if $$$ISOK(strStatus) {
		set objINIssue  = $get(^INIssue(0,pidIssue,1))
		set idProdOrder = $$$INIssueProductionOrder(objINIssue)    ; FIXME : Test for null
		
		set objINMO     = $get(^INMO(0,idProdOrder,1))
		set $$$INMOStatus(objINMO) 				= 4				// Issued
		set $$$INMOIssueFirmedDate(objINMO) 	= $horolog
		set $$$INMOIssueFirmedBy(objINMO) 		= $get(YBED)
		set strStatus = $$$Save("INMO",idProdOrder,objINMO,$$$YES)
		
		if $$$ISOK(strStatus) {
			set strStatus = $$CreateReceiptData(pidIssue)
			do ReloadForm^COMUtilForm()
		}
	}
	quit strStatus
	
	
CreateReceiptData(pidIssue)
	;-------------------------------------------------------------------------------
	; Creates a INREC and INRECLine records for the Finished Good Item
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 10-Sep-2013	SCR		CORE-266: Pass in Location to GetAttributes
	; 12-Sep-2012	PPP		SR18111: Added $$GetItemExpirationDate (BR core change C97)
	; 21-Feb-2012	PPP		SR17982: Remove the '+" for horolog to record time as well
	; 06-May-2010	PPP		SR16573: Only set the Lot if Lot required item
	; 06-Jan-2010	GRF		SR17080: tag change
	; 02-Nov-2009	GRF		SR16871: YBED not YUSER; boolean macros; variable names
	; 03-Aug-2009	PPP		SR16815: Changed $$$INRECLineBaseQuantity to
	; 							$$$INRECLineOrderQuantity
	; 22-Jul-2009	Srapol	SR16573: Call GetItemCost to get the  finished good Item
	; 							cost
	; 13-Jul-2009	Vijay	SR16573: Created
	;-------------------------------------------------------------------------------
 	new blnLotNo,curTotal,idINREC,idINRECLine,idINMOLine,idProdOrder
 	new objINREC,objINRECLine,objINMO,objINIssue,strStatus
 	
 	if (pidIssue'="") {
		set objINIssue  = $get(^INIssue(0,pidIssue,1))
	 	set idProdOrder = $$$INIssueProductionOrder(objINIssue)
	 	set objINMO     = $get(^INMO(0,idProdOrder,1))
	 	quit:objINMO=""
		
	 	set objINREC = "" 
	 	set $$$INRECStatus(objINREC)          = 0  ; $$$EnumINSTATUSUnprocessed
		set $$$INRECLocation(objINREC)        = $$$INMOReceiptLocation(objINMO)
		set $$$INRECCreatedBy(objINREC)       = YBED    ;YUSER
		set $$$INRECCreatedDate(objINREC)     = $horolog		//SR17982
		set $$$INRECProcessedBy(objINREC)     = YBED    ;YUSER
		set $$$INRECProcessedDate(objINREC)   = $horolog		//SR17982
		set $$$INRECProductionOrder(objINREC) = idProdOrder
		set $$$INRECType(objINREC)            = 1		// Manufacturing Receipt
	 	
	 	set idINREC   = $$^WWWNEXT("INREC")
		set strStatus = $$$Save("INREC",idINREC,objINREC,$$$YES)
		
		; FIXME : Take into account INRECLine D65/66 Received/Ordered Unit <GRF>
		
		if $$$ISOK(strStatus) {	
			set curTotal = $$GetItemCost(pidIssue)
			
			set $$$INRECLineQuantity(objINRECLine)       = $$$INMOMinimumQuantity(objINMO)
			set $$$INRECLineUnit(objINRECLine)           = $$$INMOUnitOfMeasure(objINMO)
			set $$$INRECLineOrderQuantity(objINRECLine)  = $$$INMOMinimumQuantity(objINMO)    //SR16815
			set $$$INRECLineItem(objINRECLine)           = $$$INMOItemCode(objINMO)
			set $$$INRECLineLocation(objINRECLine)       = $$$INMOReceiptLocation(objINMO)
			set $$$INRECLineStockLocation(objINRECLine)  = $$DefaultStorage^INRECLine($$$INMOReceiptLocation(objINMO),$$$INMOItemCode(objINMO)) ; SR17080
			set $$$INRECLineEach(objINRECLine)			 = $$$FCDivd(curTotal,$$$INMOMinimumQuantity(objINMO))
			set $$$INRECLineTotal(objINRECLine)			 = curTotal
			set $$$INRECLineFlag(objINRECLine) 			 = 1
			
			do GetAttributes^INItemPolicyUtils($$$INRECLineItem(objINRECLine),.blnLotNo,,,,,,$$$INMOReceiptLocation(objINMO))
			if blnLotNo {
				//Link Lot # to the PO if Item is a Lot Controlled Item
				set $$$INRECLineLotNumber(objINRECLine) 	 = idProdOrder
			}
			//SR18111
			//set $$$INRECLineExpirationDate(objINRECLine) = ""
			set $$$INRECLineExpirationDate(objINRECLine) = $$GetItemExpirationDate(pidIssue)
		
			set strStatus = $$$Save("INRECLine",idINREC_",1",objINRECLine,$$$YES)
		}
 	}
	quit strStatus

GetItemExpirationDate(pidIssue)
	;-------------------------------------------------------------------------------
	; Get item expiration date when receiving production
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 12-Sep-2012	PPP	SR18111: Created (BR core change C97)
	;-------------------------------------------------------------------------------
	new dteCur, objIssueLine, idLocn, idLine, dteExpiration
 
	set idLine = $order(^INIssueLine(0,pidIssue,""))
	set objIssueLine = $get(^INIssueLine(0,pidIssue,idLine,1))
	set dteCur = ##class(alSOH.iBundle).GetUseByDate($$$INIssueLineBundle(objIssueLine))
	
	for {
 		set idLine = $order(^INIssueLine(0,pidIssue,idLine))
  		quit:idLine=""
  
  		set objIssueLine = $get(^INIssueLine(0,pidIssue,idLine,1))
  		set dteExpiration = ##class(alSOH.iBundle).GetUseByDate($$$INIssueLineBundle(objIssueLine))
  	
  		if (dteExpiration '= $$$NULLOREF){
   			set dteCur = $$$Min(dteCur,dteExpiration )
   				if (dteCur = $$$NULLOREF) set dteCur = dteExpiration
  		}
 	
 	}
 
	quit dteCur

	
GetItemCost(pidIssue)
	;-------------------------------------------------------------------------------
	; Caculates the cost of FinishedGood Item from the Issue lines
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 02-Nov-2009	GRF		SR16871: INItemCost with location replaces INARTKOST;
	; 							Return value missing from first quit; variables not
	; 							newed (standardise); get locn from header
	; 22-Jul-2009	Srapol	SR16573: Created
	;-------------------------------------------------------------------------------
	new curCost,curExt,curUnit,fltQty,idItem,idLine,idLocn,objIssue,objIssueLine
	
	set curCost=0
	quit:pidIssue="" curCost
	
	set objIssue = $get(^INIssue(0,pidIssue,1))
	set idLocn   = $$$INIssueFromLocn(objIssue)
	set idLine   = ""
	for {
		set idLine = $order(^INIssueLine(0,pidIssue,idLine))
		quit:idLine=""
		
		set objIssueLine = $get(^INIssueLine(0,pidIssue,idLine,1))
		set idItem = $$$INIssueLineItem(objIssueLine)
		set fltQty  = $$$INIssueLineQtyIssued(objIssueLine)
		set curUnit = $$GetCost^INItemCost(idItem,idLocn,$$$enumAverageCost)
		set curExt  = $$$FCMult(curUnit,fltQty)
		set curCost = $$$FCAdd(curCost,curExt)
	;	set curCost = $$$FCAdd(curCost,$$$FCMult($$GetCostV2^INARTKOST(idItem),$$$INIssueLineQtyIssued(objIssueLine)))  ; SR16871
	}
	quit curCost
	
OnBeforeButtonLine(pYKEY)
	set YOPTION1 = 1
	
	if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(0,0,1)))) {	
		quit:(pYKEY="")
	
		set objIssue  = $get(^INIssue(YM,pYKEY,1))
		set prodOrder = $$$INIssueProductionOrder(objIssue)
	
		quit:(prodOrder="")
	
		set objProd	 = $get(^INMO(YM,prodOrder,1))
		set prodType = $$$INMOType(objProd)
	
		if (prodType = 2) {
			set YOPTION1 = 2
		}
	}
	
	quit
	
OnBlurReceiptLocation(pYFELD)
	if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(0,0,1)))) {
		quit:(pYFELD="")
	
		set costCentre 		= ""
		set receiptLocation = $piece(pYFELD,Y,13)
	
		if (receiptLocation '= ""){
			set objWWW0121 = $get(^WWW0121(YM,YM,receiptLocation,1))
			set costCentre = $$$WWW0121FREE3(objWWW0121)
		}
	
		set $piece(YFELD,Y,20) = costCentre
	}
	
	quit
]]></Routine>
</Export>