<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESPainelPDPASUtils" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESPainelPDPASUtils
#include COMSYS
#include VARConst
#include VARSESPainelPDPAS
 
GetDescGrupoPDPASFromID(pidGrupoPDPAS,abreviado=$$$NO)
	quit:(pidGrupoPDPAS = "") ""
	
	new descGrupoPDPAS
	set descGrupoPDPAS = ""
	set descGrupoPDPAS = $case(pidGrupoPDPAS,$$$Medicamento:"Medicamento", $$$MaterialMedico:"Material Médico",
								$$$Almoxarifado:"Almoxarifado", $$$Odontologico:"Odontológico",
								$$$Laboratorio:"Laboratório", $$$Nutricao:"Nutrição", $$$OPME:"OPME",
								$$$Manutencao:"Manutenção", $$$Informatica:"Informática", $$$Outros:"Outros")
								
	if (abreviado = $$$YES) { 
		quit $extract(descGrupoPDPAS,1,3)
	}
	 	
	quit descGrupoPDPAS
 
GetGrupoPDPASFromID(pidGrupoProduto)
	quit:(pidGrupoProduto = "") ""
	
	new idGrupoPDPAS, prefixoGrupo, prefixoGrupoSubgrupo
		
	set idGrupoPDPAS = ""
	set prefixoGrupo = $extract(pidGrupoProduto,1,2)
	set prefixoGrupoSubgrupo = 	$extract(pidGrupoProduto,1,5)
	
	if (prefixoGrupo = $$$GrupoMedicamento) {
		set idGrupoPDPAS = $$$Medicamento
	
	} elseif (prefixoGrupo = $$$GrupoMaterialMedico) {
		
		if (prefixoGrupoSubgrupo = $$$GrupoOPME) {		
			set idGrupoPDPAS = $$$OPME
		} else {
			set idGrupoPDPAS = $$$MaterialMedico
		}
	
	} elseif ($find($$$GrupoAlmoxarifado,prefixoGrupo)) {
		set idGrupoPDPAS = $$$Almoxarifado	
	
	} elseif (prefixoGrupo = $$$GrupoOdontologico) {
		set idGrupoPDPAS = $$$Odontologico	
	
	} elseif (prefixoGrupo = $$$GrupoLaboratorio) {
		set idGrupoPDPAS = $$$Laboratorio	
	
	} elseif (prefixoGrupo = $$$GrupoNutricao) {
		set idGrupoPDPAS = $$$Nutricao
			
	} elseif ($find($$$GrupoManutencao,prefixoGrupo)) {
		set idGrupoPDPAS = $$$Manutencao
	
	} elseif (prefixoGrupo = $$$GrupoInformatica) {
		set idGrupoPDPAS = $$$Informatica	
	
	} else {
		set idGrupoPDPAS = $$$Outros
	}
								
	quit idGrupoPDPAS
	
RetornaMesCompetencia(month,abreviado=$$$NO)
	quit:(month = "") ""
	
	new descMesPT
	set descMesPT = $case(month,"01":"Janeiro", "02":"Fevereiro", "03":"Março",
								"04":"Abril",   "05":"Maio",      "06":"Junho",
								"07":"Julho",   "08":"Agosto",    "09":"Setembro",
								"10":"Outubro",  "11":"Novembro", "12":"Dezembro")
								
	if (abreviado = $$$YES) { 
		quit $extract(descMesPT,1,3)
	}
	
	quit descMesPT
	
	
GetTotalSerie(strSerie,separator=",")
	new cnt, value, totalValue
 
	set totalValue = 0
 
	for cnt = 1:1:$length(strSerie,separator) {      	
    	set value = $piece(strSerie,separator,cnt)    	
    	set totalValue = totalValue + value    
	}
 
	quit totalValue	
	
ExtractAnoFromCompetencia(pCompetencia)
	quit:(pCompetencia = "") ""	
	new ano
	set ano = $extract(pCompetencia,1,4)	
	quit ano
	
GetFormattedValueFromSerie(pstrSerie,position,pTipo="")
	quit:( (pstrSerie = "") || (position = "") ) ""
	
	if (pTipo = "rede") {
		quit $$^WWWTR(0,12,($piece(pstrSerie,",",position)),0)
	}
	
	quit $$Replace^COMUtilStr($$FormatCurrency^COMTable($piece(pstrSerie,",",position)),"R$ ","")		
		
GetUnidadesFaltantes(pstrListUnidades)
	quit:(pstrListUnidades = "") ""
	
	new listUnidadesFaltantes, idUnid
	
	set listUnidadesFaltantes = ""
	
	$$$Order2(^VARSESUNI,0,idUnid)
		
		set objUnid = $get(^VARSESUNI(0,idUnid,1))		
		
		;Somente unidades que tenham CPNJ cadastrado
		if ($$$VARSESUNICNPJ(objUnid) '= "") {
			
			if '$find(pstrListUnidades,";"_idUnid_";") {
				if listUnidadesFaltantes = "" {
					set listUnidadesFaltantes = idUnid
				} else {
					set listUnidadesFaltantes = listUnidadesFaltantes_";"_idUnid
				}
			}		
		}
	$$$End
	
	quit listUnidadesFaltantes
 
GetSiglaUnidadeSaude(pidUnidadeSaude)
	quit:(pidUnidadeSaude = "") ""
	quit $piece($piece($get(^VARSESUNI(0,pidUnidadeSaude,1)),"~",1)," - ",1)
 
GetTipoVisaoConsulta(pidUnidade="",pidGrupo="")	
	new tipoVisao, descVisao
	
	set tipoVisao = ""
	set descVisao = ""	
	
	if ( (pidUnidade = "") && (pidGrupo = "") ) {
		set tipoVisao = "Geral"
		set descVisao = "Visão da Rede"
	
	} elseif ( (pidUnidade '= "") && (pidGrupo = "") ) {
		set tipoVisao = "Unidade"
		set descVisao = "Visão da Unidade"
 
	} elseif ( (pidUnidade = "") && (pidGrupo '= "") ) {
		set tipoVisao = "Grupo"
		set descVisao = "Visão do Grupo"
	
	} elseif ( (pidUnidade '= "") && (pidGrupo '= "") ) {
		set tipoVisao = "UnidadeeGrupo"
		set descVisao = "Visão da Unidade e Grupo"	
	}
	
	quit tipoVisao_","_descVisao

GetCompetenciaAnterior(pCompetencia)
    ;18-Out-2011 Petik
    ;$$GetCompetenciaAnterior^VARIPPSQL("YYYYMM")
    ;Rotina para retornar a competência anterior
    ;A competência deve estar no formato YYYYMM

    quit:(pCompetencia = "") ""
    
    new Ano,Mes,mesAnterior,anoAnterior,competenciaAnterior
    
    set Ano = $extract(pCompetencia,1,4)
    set Mes = $extract(pCompetencia,5,6)

    ;Remove zeros a esquerda
    set Mes = $zstrip($fnumber(Mes,"T"),"<>W")
    
    if (Mes > 1){
        set mesAnterior = Mes-1 
        ;Preenche com zeros a esquerda
        set mesAnterior = $$FillChar^VARSQL(mesAnterior,2,"0")  
        set anoAnterior = Ano
    } else {
        set mesAnterior = 12        
        set anoAnterior = Ano-1
    }

    set competenciaAnterior = anoAnterior_mesAnterior

    quit competenciaAnterior
    

GetProximaCompetencia(pCompetencia)
    ;12-Dez-2011 Petik
    ;$$GetProximaCompetencia^VARIPPSQL("YYYYMM")
    ;Rotina para retornar a próxima competência
    ;A competência deve estar no formato YYYYMM

    quit:(pCompetencia = "") ""
    
    new Ano,Mes,mesAnterior,anoAnterior,competenciaAnterior
             new proximoMes,proximoAno,proximaCompetencia
    
    set Ano = $extract(pCompetencia,1,4)
    set Mes = $extract(pCompetencia,5,6)

    ;Remove zeros a esquerda
    set Mes = $zstrip($fnumber(Mes,"T"),"<>W")
    
    if (Mes < 12){
        set proximoMes = Mes+1 
        ;Preenche com zeros a esquerda
        set proximoMes = $$FillChar^VARSQL(proximoMes,2,"0")  
        set proximoAno = Ano
    } else {
        set proximoMes = "01"        
        set proximoAno = Ano+1
    }

    set proximaCompetencia = proximoAno_proximoMes

    quit proximaCompetencia
]]></Routine>
</Export>