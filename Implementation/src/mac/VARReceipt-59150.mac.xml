<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARReceipt" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMSYS
#include INConst
#include COMConst
#include %occInclude
#include COMGridEdit31
#include INSYS
#include VARConst

VARReceipt

	quit
	
	
CheckUnitCost(pObjSummary)
    ;-------------------------------------------------------------------------------
    ; Returns if the unit cost is the same as in the OrderLine
    ;		
    ; Call:   OnBeforeSave^INRECSummary -->> changed on core code
    ;
    ; Params: Receipt Line Object
    ;
    ; Returns: Yes or No : let save or not
    ;
    ; History:
    ; 02-Jul-2012	Gustavo		Alterado para ignorar linhas da Summary que não sejam
    ;							do tipo 0-Produto.
    ; 17-Nov-2009	Karine		Created
    ;-------------------------------------------------------------------------------
	
	new status, idOrder, idOrderLine, objOrderLine, orderCost, receiptCost, objRecSummary 
	
	if pObjSummary '= "" {
		set status       = $$$OK
		set idOrder      = $piece(pObjSummary,Y,1)
		set idOrderLine  = $piece(pObjSummary,Y,2)
		set idLineType   = $piece(pObjSummary,Y,5)
		
		;Ignora linhas da Summary que não sejam do tipo 0-Produto
		quit:(idLineType '= 0) status
	
		if idOrder '= "" {	
			set objOrderLine = $get(^INAUFP(YM,idOrder,idOrderLine,1))
	
			set orderCost    = $piece(objOrderLine,Y,282)
			set receiptCost  = $piece(pObjSummary,Y,14)
			set getProduto   = $piece(pObjSummary,Y,6)
			;for k=1:1:100 hang 1
	
			if receiptCost '= 0 {
				if orderCost '= receiptCost {
					set status = 0_" O valor do produto "_getProduto_" não confere com a Ordem de Compra." 	
				}
			}
		}	
	}
	quit status	
	
ImprimeRelatorio(YKEY)
	if ($$GetPreferencia^VARPreferenciasUsuario($$$FldVARPreferenciasUsuarioTelaFiltroRelatorio) = 1){
		do GotoFiltrosRelatorio^VARFiltrosRelatorio("RunReportNotaRecebimento",0,1,,YKEY)
	} else {
		do RunReportNotaRecebimento^VARJasperRunReport(YKEY)
	}
		
	quit
	
ImprimeRelatorioFisico(YKEY)
	if ($$GetPreferencia^VARPreferenciasUsuario($$$FldVARPreferenciasUsuarioTelaFiltroRelatorio) = 1){
		do GotoFiltrosRelatorio^VARFiltrosRelatorio("RunReportNotaRecebimentoFisico",0,1,,YKEY)
	} else {
		do RunReportNotaRecebimentoFisico^VARJasperRunReport(YKEY)
	}
		
	quit
	
CanViewReport()
	set saida = ((YKEY '= "") && ($piece(YFELD, Y, 4) = 1)	)
	if ('saida){
		new strStatus
	    set strStatus = "Não é possível gerar relatório"	
	    $$$YQHandler(strStatus)
	}
	quit

CanViewReportConferencia()
	set saida = ((YKEY '= "") && ($piece(YFELD, Y, 20) = 1)	)
	if ('saida){
		new strStatus
	    set strStatus = "Não é possível gerar relatório"	
	    $$$YQHandler(strStatus)
	}
	quit	

ImprimeGuiaConferencia(YKEY)
		
		do RunReportGuiaConferencia^VARJasperRunReport(YKEY)
	quit
	
PreencheEmpenho(YKEY, YFELD)
	new strEmpenho, objRecebimento, idOrdemFornecimento, objOrdemFornecimento
	
	set idOrdemFornecimento = $$$INRECFREE10(YFELD)
	
	set objRecebimento = $get(^INREC(0,YKEY,1))
	
	// se a ordem de fornecimento do YFELD for diferente da que está salva no banco,
	// então a ordem de fornecimento acabou de ser inserida e o empenho deve ser preenchido
	if ( (idOrdemFornecimento '= "") && (idOrdemFornecimento '= $$$INRECFREE10(objRecebimento)) ) {
		set objOrdemFornecimento = $get(^INAUF(0,idOrdemFornecimento,1))
		set strEmpenho = $$$INAUFApproval1(objOrdemFornecimento)
	} else {
		set strEmpenho = ""
	}
	
	quit strEmpenho
]]></Routine>
</Export>