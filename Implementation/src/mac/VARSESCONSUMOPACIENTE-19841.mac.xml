<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESCONSUMOPACIENTE" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESCONSUMOPACIENTE
	#include COMConst
	#include INConst
	#include WWWConst
	#include FIN
 	#include COMSYS
	#include COMGridEdit31
	#include VARConst
 
checkNascimento()
	set pidNascimento=""
	set pidNascimento=$PIECE($GET(^VARSESPACIENTE(YM,$PIECE(YFELD,Y,12),1)),Y,8)
	set pidNascimento=$ZD(pidNascimento,4)
	quit pidNascimento
 
 
CanViewReport()
 	//Gustavo, 11/10/2007
 	//Desabilita o botão de relatório caso a solicitação não tenha sido processada.
 	
 	if (YKEY) {
		if $$$INADJStatus(YFELD) '= 1 {
			//set YQ = 1_"O relatório só fica disponível após o documento ter sido processado."
			set YQ = 1_$$$Text("MED00138")  ;O relatório só fica disponível após o documento ter sido processado.
		}  	
		else { 
			set YQ = $$$YQEnable
		} 	
 	} 
	quit
 
checkPaciente()
	set dado=$piece(YFELD,Y,12)
	IF dado="" quit ""
	if ($get(^VARSESPACIENTE(YM,dado,1))'="") {
		quit dado
		}
	quit ""
	
checkCodigoPaciente()
	if (($piece(YFELD,Y,18)'= "") && ($PIECE(YFELD,Y,12)="")) quit 1
	quit 0
 
result()
	//set dado=$order(^VARSESPACIENTEs(0,1,$$^WWWUMLAU($piece(YFELD,Y,18),1),""))
	//set $piece(YFELD,Y,15)=dado
	quit $PIECE($get(^VARSESPACIENTE(YM,$PIECE(YFELD,Y,12),1)),Y,1)
 
searchMedico()
 
	;for i=1:1:100 hang 1
	set strFormData = $$$GetFormData(YFORM,"D")
	set dado = $piece(strFormData,Y,19)
 
	quit:$get(^CacheTempVARSESCONSUMOPACIENTEMEDICO(YUSER))=dado $$$OK
 
	set ^CacheTempVARSESCONSUMOPACIENTEMEDICO(YUSER) = dado
 
	kill ^COMTempList(YM,YUSER,"VARSESCONSUMOPACIENTEMEDICO")
 
	set dadoMAX = $$^WWWUMLAU(dado,1)
	
	set medico = ""
	set idxNome = ""
 
	set idxNome = $order(^VARSESProfSaudes(0,1,dadoMAX))
	// Se o nome entrado coincidir com o nome inteiro registrado.
	if $order(^VARSESProfSaudes(0,1,dadoMAX,"")) '= "" {
		set idxNome = dadoMAX
	} else {
		set idxNome = $order(^VARSESProfSaudes(0,1,dadoMAX))
	}
 
	set i = 1
	set blnMaxNumberResults = $$$NO
	set blnNamePrefix = (dadoMAX = $extract(idxNome, 1, $length(dadoMAX)))
	
	while blnNamePrefix && 'blnMaxNumberResults {
	;while blnNamePrefix {
		
		set medico = $order(^VARSESProfSaudes(0, 1, idxNome, ""))
		set medicodado = $get(^VARSESProfSaude(YM, medico, 1))
		if dadoMAX = $extract($$^WWWUMLAU($piece(medicodado, Y, 2), 1), 1, $length(dadoMAX)) {
 
			set ^COMTempList(YM,YUSER,"VARSESCONSUMOPACIENTEMEDICO",dado,medico,1) = $piece(medicodado,Y,2)
			set i = i + 1
			if i = 100 {
				
				set blnMaxNumberResults = $$$YES
				;write "alert(2);"
				//write "alert('Número máximo de 100 profissionais de saúde retornado na pesquisa. Refine mais sua pesquisa.');"
				write "alert('"_$$$Text("MED00139")_"');"
				
				;$$$Alert("Número máximo de 100 pacientes retornado na pesquisa. Refine mais sua pesquisa.")
			}
		}
 
		set idxNome = $order(^VARSESProfSaudes(0,1,idxNome))
		set blnNamePrefix = (dadoMAX = $extract(idxNome, 1, $length(dadoMAX)))
	}
 
	quit $$$OK
 
search()
 
	;if YBED = "FRANK" for i=1:1:100 hang 1
	set strFormData = $$$GetFormData(YFORM,"D")
	set dado = $piece(strFormData,Y,18)
 
	quit:$get(^CacheTempVARSESCONSUMOPACIENTE(YUSER))=dado $$$OK
 
	set ^CacheTempVARSESCONSUMOPACIENTE(YUSER) = dado
 
	kill ^COMTempList(YM,YUSER,"VARSESCONSUMOPACIENTE")
 
	set dadoMAX = $$^WWWUMLAU(dado,1)
	
	set idxNome = ""
 
	// Se o nome entrado coincidir com o nome inteiro registrado.
	if $order(^VARSESPACIENTEs(0,1,dadoMAX,"")) '= "" {
		set idxNome = dadoMAX
	} else {
		set idxNome = $order(^VARSESPACIENTEs(0,1,dadoMAX))
	}
 
	set i = 1
	set blnMaxNumberResults = $$$NO
	set blnNamePrefix = (dadoMAX = $extract(idxNome, 1, $length(dadoMAX)))
	
	while blnNamePrefix && 'blnMaxNumberResults {
	;while blnNamePrefix {
		
		set paciente = ""
		for {
			set paciente = $order(^VARSESPACIENTEs(0, 1, idxNome, paciente))
			quit:(paciente = "")
			
			set pacientedado = $get(^VARSESPACIENTE(YM, paciente, 1))
			if dadoMAX = $extract($$^WWWUMLAU($piece(pacientedado, Y, 1), 1), 1, $length(dadoMAX)) {
	 
				set ^COMTempList(YM,YUSER,"VARSESCONSUMOPACIENTE",dado,paciente,1) =$ZDATE($piece(pacientedado,Y,8),4)_"-"_$piece(pacientedado,Y,1)
				set i = i + 1
				if i = 100 {
					
					set blnMaxNumberResults = $$$YES
					;write "alert(2);"
					//write "alert('Número máximo de 100 pacientes retornado na pesquisa. Refine mais sua pesquisa.');"
					write "alert('"_$$$Text("MED00140")_"');" ;Número máximo de 100 pacientes retornado na pesquisa. Refine mais sua pesquisa.
					;$$$Alert("Número máximo de 100 pacientes retornado na pesquisa. Refine mais sua pesquisa.")
				}
			}
			quit:blnMaxNumberResults
		}
		
		set idxNome = $order(^VARSESPACIENTEs(0,1,idxNome))
		set blnNamePrefix = (dadoMAX = $extract(idxNome, 1, $length(dadoMAX)))
	}
	set dado=$order(^VARSESPACIENTEs(0,1,$$^WWWUMLAU($piece(YFELD,Y,18),1),""))
	set $piece(YFELD,Y,15)=dado
 
	quit $$$OK
	
OnBeforeEditAccess()
 
	if YFORM = "VARSESCONSUMOPACIENTE" {
	//Bloqueia o form para usuários que não estejam lotados em locais de Farmácia
		set TipoUsuario = $PIECE($GET(^WWW0121(0,YM,YLOCATION,1)),Y,61) //(Almoxarifado, Farmácia ou Centro de Custo)
			if (TipoUsuario'="FARMACIA") {
				$$$StartScript()
				//w "alert('Essa tela só pode ser utilizada por usuários lotados em locais de FARMACIA! Seu local é do tipo "_$PIECE($GET(^WWW0121(0,YM,YLOCATION,1)),Y,61)_".'); "
				w "alert('"_$$$Text("MED00141")_$PIECE($GET(^WWW0121(0,YM,YLOCATION,1)),Y,61)_".'); "
				$$$EndScript()
				quit 0
			}
		}		
		
	if YKEY'="" {
 
		set LocalUsuario = $PIECE(YFELD,Y,8)
		set Processado = $PIECE(YFELD,Y,9)		
		
		if YFORM = "VARSESCONSUMOPACIENTE" {
		//Se o form for "Efetivar Consumo para Paciente", carrega o E.F.(Local) e o E.F.(Rede)			
		//Gustavo, 27/09/2007: conforme solicitação do Marcelo e Soleni,
		//deve ser mantido a quantidade em estoque da data de processamento.
		
			if Processado '= 1 {
				do CarregaEstoque^VARSESCONSUMOPACIENTELinha(YKEY,LocalUsuario)
			}
		}
 
		elseif YFORM = "INADJ" {
		//Se o form for INADJ, carrega apenas o E.F.(Local)			
			
			if Processado '= 1 {
				do CarregaEstoqueAjuste^VARSESCONSUMOPACIENTELinha(YKEY,LocalUsuario)
			}		
		}		
 
			
		if YLOCATION'=$PIECE($GET(^INADJ(YM,YKEY,1)),Y,8) && $data(^INADJ(YM,YKEY,1)) {
		//Bloqueia o form se o registro for referente a um local que não o do usuário
			$$$StartScript()
			//w "alert('Esse documento é do local "_$PIECE($GET(^INADJ(YM,YKEY,1)),Y,8)_"!  Seu local é "_YLOCATION_". A tela ficará disponível apenas para consulta de documentos.'); "
			w "alert('"_$$$Text($listbuild("MED00142",$PIECE($GET(^INADJ(YM,YKEY,1)),Y,8),YLOCATION))_"'); "
			$$$EndScript()
			QUIT 0
		}
	}
	quit 1
 
 
validarPaciente()
	if $piece(YFELD,Y,12)'="" {
		if $get(^VARSESPACIENTE(YM,$PIECE(YFELD,Y,12),1))'="" {
			quit 0
		}
		quit 1
	}
	quit 2
	
validarProfSaude()
	if $piece(YFELD,Y,11)'="" {
		if $get(^VARSESProfSaude(YM,$PIECE(YFELD,Y,11),1))'="" {
			quit 0
		}
		quit 1
	}
	quit 2
		
	
OnBeforeButtonLine(pidAdj,pobjAdj,&pobjForm)
    ;-------------------------------------------------------------------------------
    ; Set form to readonly if not editable
    ;
    ; Params:	pidAdj		- Adj id
    ; 			pobjAdj		- Adj object
    ;
    ; Returns:	pobjForm	- Form object (WWW120)
    ;
    ; History:
	; 15-Aug-2006	JW		SR14826: Created
    ;-------------------------------------------------------------------------------
	if '$$$NoKey(pidAdj) {
		if '$$Editable(pidAdj) {
			set $$$WWW120AuthorizationToModifyData(pobjForm) = 5	// Read Only
		}
	}
	
	quit
 
Editable(pidAdj) 
    ;-------------------------------------------------------------------------------
    ; Is form editable (unprocessed) ?
    ;
    ; Params:	pidAdj - Adj id
    ;
    ; Returns:	status
    ;
    ; History:
    ; 15-Aug-2006	JW		SR14826: Created
    ;-------------------------------------------------------------------------------
	new strStatus,objAdj
	
	set strStatus = $$$OK
	
	if $data(^INADJ(YM,pidAdj,1)) {
		set objAdj=$get(^INADJ(YM,pidAdj,1))
		
		if $$$INADJStatus(objAdj) '= $$$EnumINSTATUSUnprocessed {
			set strStatus = $listbuild("IN00377")  ;Record already processed
		}
	}
	quit strStatus
 
 
Postable(pidAdj) 
	;-------------------------------------------------------------------------------
	; Test whether this record is postable
	;
	; Params:	pidAdj - INADJ id
	;
	; ByRefs:
	;
	; Returns:	postable status
	;
	; History:
	; 15-Aug-2006	JW		SR14826: Created
	;-------------------------------------------------------------------------------
	quit:$$$NoKey(pidAdj) '$$$OK
	new strStatus
	
	set strStatus = $$Editable(pidAdj)
	
	if $$$ISOK(strStatus) {
		if '$data(^INADJLine(YM,pidAdj)) {
			set strStatus = $listbuild("IN00517")  ;  Adjustment must have lines
		}
	}
	
	if $$$ISOK(strStatus) {
		set YQ=$$$QSave
	} else {
		set YQ=$$$QDontSave_" "_$$$Text(strStatus)
	}
 	
	quit strStatus
 
 
OnBeforeSave(pidAdj)
    ;-------------------------------------------------------------------------------
    ; Stock Adjustment
    ; 
	; Params:	pidAdj - INADJ id
    ; 
    ; Returns: 
    ;
    ; History:
    ; 17-Aug-2006	JW		SR14826 : Rewrote
    ; 21-Jul-2006	FAN		SR14826 : Created
    ;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$Editable(pidAdj)
	
	if $$$ISOK(strStatus) {
		set strStatus=$$$GRIDSave(pidAdj)
	}
	
	if $$$ISERR(strStatus) {
		set Q=$$$QDontSave
		do ReturnError^COMUtilError(strStatus)
	}
	
	quit
	
	
Post(pidADJ)
    ;-------------------------------------------------------------------------------
    ; Post adj
    ;
    ; Returns:Status
    ;
    ; History:
    ; 25-Jul-2006	FAN		SR14828: 
    ;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus=$$Transaction^COMTransaction("PostTxn^INADJ("""_pidADJ_""")",$$$YES)
	
	if $$$ISOK(strStatus) {
		do ReloadForm^COMUtilForm()
		
	}
	quit strStatus
	
PostTxn(pidAdj)
    ;-------------------------------------------------------------------------------
    ; Post adj
    ;
    ; Returns:Status
    ;
    ; History:
    ; 16-Aug-2006	JW		SR14826: Rewrote
    ; 10-Aug-2006	SC		SR14826: fltQuantity is not defined. do u mean fltADJ???
    ; 25-Jul-2006	FAN		SR14826: 
    ;-------------------------------------------------------------------------------
	new idLine,idItem,idLoc,idStkLoc,dteSOH,fltQty,strStatus
	new objAdj,objAdjLine,idReason,curCost,objSOH,fltQtyLeft
	
	set strStatus = $$Editable(pidAdj)
	
	if $$$ISOK(strStatus) {
		set objAdj=$get(^INADJ(YM,pidAdj,1))
		
		set idLoc 	= $$$INADJSiteLocation(objAdj)
		//set dteAdj	= $$$INADJStockAdjustmentDate(objAdj)
		
		$$$Order3(^INADJLine,YM,pidAdj,idLine)
	 		set objAdjLine=$get(^INADJLine(YM,pidAdj,idLine,1))
	 		
			set idItem		= $$$INADJLineItem(objAdjLine)
			set idStkLoc	= $$$INADJLineStockLocation(objAdjLine)
			set fltQty		= $$$INADJLineBaseQuantity(objAdjLine)
			set idReason 	= $$$INADJLineReasonCode(objAdjLine)
			set curCost		= $$$INADJLineTotalCost(objAdjLine)
			set fltQtyLeft	= fltQty
			
			if fltQtyLeft<0 {
				$$$Order5(^INWE,YM,idItem,idLoc,idStkLoc,dteSOH)
					quit:fltQtyLeft=0
					// TODO - Only for same batch, and expiry date
					set strStatus = $$Adjust^INWE(idItem,idLoc,idStkLoc,dteSOH,.fltQtyLeft,$$$NO)
					quit:$$$ISERR(strStatus)
				$$$End
			}
			
			if fltQtyLeft {
				set dteSOH = $order(^INWE(YM,idItem,idLoc,idStkLoc,""),-1)
				if dteSOH'="" {					// Add to last batch
					set strStatus = $$Adjust^INWE(idItem,idLoc,idStkLoc,dteSOH,.fltQtyLeft,$$$YES)
					
				}					// Or if all else fails, create new INWE
				if fltQtyLeft {
					set $$$INWEQuantity(objSOH)		= fltQtyLeft
					set $$$INWEQuantityUnit(objSOH)	= $$$INADJLineUnit(objAdjLine)
					set $$$INWEUnitPrice(objSOH)	= $$$INADJLineUnitCost(objAdjLine)
					
					set dteSOH = $$Increment^INWECounter(idItem,idLoc,idStkLoc)
					set strStatus = $$$Save("INWE",idItem_","_idLoc_","_idStkLoc_","_dteSOH,objSOH,1)
				}
			}
			if $$$ISOK(strStatus) {			// History for whoel qty
				;do History(idItem,idLoc,idStkLoc,fltQty,curCost,idReason)
				do History(idItem,idLoc,idStkLoc,fltQty,curCost,idReason,$get(YFORM),pidAdj_","_idLine)  ;BR014754
			}
		$$$End
			
		if $$$ISOK(strStatus) {
			set $$$INADJStatus(objAdj) = $$$EnumINSTATUSProcessed
			set strStatus = $$$Save("INADJ",pidAdj,objAdj,1)
		}
	}
	quit strStatus
 
LoadGrid(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Code for Grid Edit 
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Jul-2006	FAN		SR14828: Created
    ;-------------------------------------------------------------------------------
	new idForm,YAUSWAHL
	set idForm="VARSESCONSUMOPACIENTELinha"
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=400
	set $$$COMGridEditParameterGridName(YAUSWAHL)=idForm
	set $$$COMGridEditParameterUpdateFields(YAUSWAHL)="D2=7"
	set $$$COMGridEditParameterEnabled(YAUSWAHL)=($piece(YVOR,Y,23)'=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL) = "VARSESCONSUMOPACIENTE"
	
	$$$GRIDStart(idForm,pYKEY)
	
	quit 
	
OnAfterDataFields(pidAdj)
    ;-------------------------------------------------------------------------------
    ; Code to run when called by the AfterDataField event on the @netManager form.
    ;
    ; History:
    ; 21-JUL-2006		FAN			SR14826: Created
    ;-------------------------------------------------------------------------------
 	kill ^CacheTempVARSESCONSUMOPACIENTEMEDICO(YUSER)
	kill ^CacheTempVARSESCONSUMOPACIENTE(YUSER)
	do LoadGrid(pidAdj)
	quit
 
 
 
History(pidItem,pidLoc,pidStkLoc,pfltQty,pcurCost,pidReason,pstrSourceForm="",pidSourceId="")  ;BR014754
	;-------------------------------------------------------------------------------
	; Update History for this adjustment
	;
	; Params:	pidItem,pidLoc,pidStkLoc - SOH keys
	; 			pfltQty		- qty adjusted
	; 			pcurCost	- cost update
	; 			pidReason	- 
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 17-Aug-2006	JW		SR14826: Created
	;-------------------------------------------------------------------------------
	new strText,idDelStkLoc
	
	set strText = $$$Text($listbuild("IN00520",pfltQty,pidLoc,pidStkLoc,pidReason))	;%1 Adjusted From %2/%3 Reason Code %4
	
	set idDelStkLoc = $$$INVORGDeleteStockLocation($get(^INVORG(YM,YM,1)))
	if idDelStkLoc="" set idDelStkLoc = "X"
	
	;do ^INARTHIST(pidItem,strText,pidLoc,,,-pfltQty,,-pcurCost,idDelStkLoc,,pidStkLoc,,,pidLoc,,"ADJ",,,pidReason)
	do ^INARTHIST(pidItem,strText,pidLoc,,,-pfltQty,,-pcurCost,idDelStkLoc,,pidStkLoc,,,pidLoc,,"ADJ",,,pidReason,,,pstrSourceForm,pidSourceId) ;BR014754
	
	quit
	
ProcessOnClick(pidAdjustment)
 
	do Perform^COMTransaction(YFORM,YKEY,"StartProcess^VARSESCONSUMOPACIENTE("""_pidAdjustment_""")","Fin00365")
 
	quit
	
StartProcess(pidAdjustment)
 
	new strStatus
	set strStatus = $$Transaction^COMTransaction("Process^VARSESCONSUMOPACIENTE("""_pidAdjustment_""")", $$$YES)
 
	quit
	
Process(pidAdjustment)
 
	new strStatus, objAdjustment
	
	set strStatus = $$PostTxn^INADJ(pidAdjustment)
	
	if $$$ISOK(strStatus) {	
	
		set objAdjustment = $get(^INADJ(YM, pidAdjustment, 1))
		
		set $$$INADJStockAdjustmentDate(objAdjustment) = $horolog
		
		set strStatus = $$$Save("INADJ",pidAdjustment,objAdjustment,$$$YES)
		if '$$$ISOK(strStatus) {
			//set $zerror = "Erro no ajuste de estoque. => "_$$DecodeError^COMUtilError(strStatus)
			set $zerror = $$$Text("MED00143")_" => "_$$DecodeError^COMUtilError(strStatus)
			zquit 1 GOTO @$ZTRAP
		}
			
		set pDate = $Horolog
		set pLocalEst=$piece($get(^INADJ(YM,pidAdjustment,1)),Y,8)
		set pItens=""
		set dado=""
		set dado=$order(^INADJLine(YM,pidAdjustment,dado))
		while dado'="" {
			if pItens'="" set pItens=pItens_"|"
			set pItens=pItens_$piece($get(^INADJLine(YM,pidAdjustment,dado,1)),Y,1)_Y_$piece($get(^INADJLine(YM,pidAdjustment,dado,1)),Y,4)
			set dado=$order(^INADJLine(YM,pidAdjustment,dado))
		}
 
		do AjustarEstoqueClient^VARSESIntegration(pDate,pLocalEst,pItens,pidAdjustment)
		
		do ReloadForm^COMUtilForm()
	
	} else {
	
		//set $zerror = "Erro no ajuste de estoque. => "_$$DecodeError^COMUtilError(strStatus)
		set $zerror = $$$Text("MED00143")_" => "_$$DecodeError^COMUtilError(strStatus)
		zquit 1 GOTO @$ZTRAP
	}
 
	quit $$$OK 
	
OnBlurCNS()
	new objConsumoPaciente, strCNS, idPaciente, objPaciente, strNome, dteNascimento, strNomeMae
 
	set objConsumoPaciente = $$$GetFormData("VARSESCONSUMOPACIENTE","D")
	set strCNS 			   = $$$INADJFREE12(objConsumoPaciente)
	
	quit:(strCNS = "")
	
	if '$data(^VARSESPACIENTEs(YM, 2, strCNS)) {
	
		//$$$Alert("CNS '"_strCNS_"' não encontrado no sistema.")
		$$$Alert("CNS '"_strCNS_"'"_$$$Text("MED00144"))  ;não encontrado no sistema.
 
		do PopulateDataField^COMUtils("VARSESCONSUMOPACIENTE", 22, "", "D")
	} else {
		
		set idPaciente  = $order(^VARSESPACIENTEs(YM, 2, strCNS, ""))
		set objPaciente = $get(^VARSESPACIENTE(YM, idPaciente, 1))
		set strNome 	   = $$$VARSESPACIENTENome(objPaciente)
		set dteNascimento  = $$^WWWDATE($$$VARSESPACIENTEDataNascimento(objPaciente))
		set strNomeMae	   = $$$VARSESPACIENTENomedaMae(objPaciente)
		
		do PopulateDataField^COMUtils("VARSESCONSUMOPACIENTE", 18, strNome, "D")
		do PopulateDataField^COMUtils("VARSESCONSUMOPACIENTE", 12, idPaciente, "D")
		do PopulateDataField^COMUtils("VARSESCONSUMOPACIENTE", 16, strNomeMae, "D")
		
		write "document.WWW2.YVARSESCONSUMOPACIENTED17.value = '"_dteNascimento_"';"
	}
 
	quit
 
]]></Routine>
</Export>