<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARExportarExcel" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARExportarExcel

	#include COMSYS
	
	
	;---------------------------------------------------------------------------------------------------------------------
	; Arquivo contendo rotinas para exportação de uma global para o Excel.
	;
	; Para funcionar é necessário gravar em uma global os dados que se deseja exportar para o excel.
	; A global deve estar no formato ^NomeGlobal(YM,YUSER,YBED,Cont,1)
	;	Onde:
	;		- "Cont" deve ser um sequencial numérico começando por 0 (zero).
	;		- Na linha 0 (zero) devem estar os títulos das colunas que serão gravados na planilha.
	;		- Se não existir linha 0(zero), a planilha ficará sem títulos nas colunas.
	;
	; Depois, basta chamar a rotina ExportarExcel^VARExportarExcel("NomeGlobal") em qualquer evento.
	;	Ex:
	;	--------------------------------------------Início do Exemplo
	;	ExecuteOnClickBotao(pYKEY)
	;		set ^VARTempRelatorioXLS(YM,YUSER,YBED,0,1) = "Título1~Título2~Título3~Título4"
	;		set ^VARTempRelatorioXLS(YM,YUSER,YBED,1,1) = "Linha1Col1~Linha1Col2~Linha1Col3~Linha1Col4"
	;		set ^VARTempRelatorioXLS(YM,YUSER,YBED,2,1) = "Linha2Col1~Linha2Col2~Linha2Col3~Linha2Col4"
	;		set ^VARTempRelatorioXLS(YM,YUSER,YBED,3,1) = "Linha3Col1~Linha3Col2~Linha3Col3~Linha3Col4"
	;		do ExportarExcel^VARExportarExcel("VARTempRelatorioXLS")		;O nome da global não pode conter o caracter ^(circunflexo) no início
	;		do GoToForm^COMUtilForm("VARRelatorio",pYKEY)
	;		quit
	;	--------------------------------------------Fim do Exemplo
	;
	; Histórico
	; 13-Out-2011 - PTK		Criação
	;
	;---------------------------------------------------------------------------------------------------------------------
	

ExportarExcel(pGlobal)

	$$$StartScript()
	do WindowPrint^COMViewPrint($$$EnumDisplayTypeExcel,"Output^VARExportarExcel(.objOutput,"_""""_pGlobal_""""_")")
	$$$EndScript()
	 
	quit    


Output(&pobjOutput,pGlobal)
	;-------------------------------------------------------------------------------
	; Rotina para gerar objData a partir da Global passada como parâmetro
	;
	; Histórico
	; 13-Out-2011 - PTK		Criação
	;-------------------------------------------------------------------------------
 	new ExistemDados,Titulos,idLinha,objLinha,objData
 	
	quit:$get(YFORM)=""
	quit:$get(YUSER)=""
	quit:$get(YBED)=""
	quit:$get(pGlobal)=""

	xecute "set ExistemDados = $D(^"_pGlobal_"(YM,YUSER,YBED))"
	
	quit:('ExistemDados)
	
	xecute "set ParametrosPagina = $data(^"_pGlobal_"(YM,YUSER,YBED,0,""PAGE_HEADER"",1))"
	
	;Se tiver uma linha com os cabeçalhos da página
	if (ParametrosPagina > 0){
		set idCabecalhoPagina = ""
		for {
			xecute "set idCabecalhoPagina = $order(^"_pGlobal_"(YM,YUSER,YBED,0,""PAGE_HEADER"",idCabecalhoPagina))"
			if ($length(idCabecalhoPagina) = 0) quit

			xecute "set objCabecalhoPagina = $get(^"_pGlobal_"(YM,YUSER,YBED,0,""PAGE_HEADER"",idCabecalhoPagina))"
			do pobjOutput.WriteLine("<tr>")
			do pobjOutput.WriteLine($$OutputLine(.pobjOutput,objCabecalhoPagina," class='header'",
				" align='right'"_Y_" align='left'")_"</tr>")
		}

		do objOutput.WriteLine("</table>")
		do objOutput.WriteLine("<table border=0 cellpadding=0 cellspacing=0'>")
		do pobjOutput.WriteLine("<tr><td>&nbsp;</td></tr>")
		do objOutput.WriteLine("</table>")
		do objOutput.WriteLine("<table border=1 cellpadding=0 cellspacing=0'>")
	}

	xecute "set Titulos = $G(^"_pGlobal_"(YM,YUSER,YBED,0,1))"
	
	;Se tiver uma linha com os títulos monta o cabeçalho
	if (Titulos '= ""){
		do pobjOutput.WriteLine("<tr>")
		do pobjOutput.WriteLine($$OutputLine(.pobjOutput,Titulos," class='header'")_"</tr>")
	}
	
	set idLinha = ""
	for {
		xecute "set idLinha = $order(^"_pGlobal_"(YM,YUSER,YBED,idLinha))"
		quit:idLinha=""
		
		;Não precisa exportar o cabeçalho novamente
		if idLinha=0 {
			continue
		}
		
		xecute "set objLinha = $G(^"_pGlobal_"(YM,YUSER,YBED,idLinha,1))"

		set objData(idLinha) = objLinha
	
	}

	do OutputData(.pobjOutput,.objData)

	quit
 
 
OutputData(&pobjOutput,pobjData)
	;
	;Copiado por Petik da rotina OutputData^COMGridEdit31Excel em 13-Out-2011
	;
	;-------------------------------------------------------------------------------
	; Writes the collected lines into Excel
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new idData,strLine
	
	set idData=""
	for {
		set idData=$order(pobjData(idData))
		quit:idData=""
		
		set strLine=$$OutputLine(.pobjOutput,pobjData(idData),"")
		do pobjOutput.WriteLine("<tr>"_strLine_"</tr>")
	}
	quit
	

OutputLine(&pobjOutput,pstrLine,pstrFormat,pstrIndividualFormat="")
	;
	;Copiado por Petik da rotina OutputLine^COMGridEdit31Excel em 13-Out-2011
	;
	;-------------------------------------------------------------------------------
	; Write line to the screen
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 06-Mar-2008	shobby	SRBR014446: Reworked to remove some annoying HTML
	; 							created by the FCKEditor
	; 26-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
	new intCell,strLine,strPiece
	
	set strLine=""
	for intCell=1:1:$length(pstrLine,Y) {
		set strPiece=$piece(pstrLine,Y,intCell)
		if $extract(strPiece,1,3)="<p>" set strPiece=$piece(strPiece,"<p>",2,9999999)
		set strLine=strLine_"<td"_pstrFormat_$piece($get(pstrIndividualFormat),Y,intCell)_">"_strPiece_"</td>"
	}
	set strLine=$$FullReplace^COMUtilStr(strLine,"<html dir=´ltr´>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<html dir=""ltr"">","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<html dir='ltr'>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<title>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</title>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<head>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</head>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</html>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</body>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</p>","<br>")
	
	quit strLine


]]></Routine>
</Export>