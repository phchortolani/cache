<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINARCustomer" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINARCustomer
	; 08-Jul-2003	SCR				Bug Fixes from Code Checking
	#Include FIN
	#Include FINConst
	#Include COMConst
 
Paymt(pidCustomer="")
    ;-------------------------------------------------------------------------------
    ; Called by the "B" button to search for customer banking details.
    ;
    ; History:
    ; 10-Feb-2005		Paul K			Created
    ;-------------------------------------------------------------------------------
    if pidCustomer'="" {
		do Initialise^COMViewCustom("FINARBankLine","","",1)
		do AddFilter^COMViewCustom("D"_$$$FldFINARBankLineCustomerNumber,"=",pidCustomer)
		do Start^COMViewCustom()
    }
    
	quit $$$OK
 
		
InvoiceSearch(pidCustomer="")
    ;-------------------------------------------------------------------------------
    ; Called by the "I" button to searh for Invoices for a Customer
    ;
    ; History:
    ; 19-Apr-2005		Paul K			Use InvoiceDetail Form instead of Invoice
    ; 19-Apr-2005		SCR				SR11476 Created
    ;-------------------------------------------------------------------------------
    if pidCustomer'="" {
		do Initialise^COMViewCustom("FINARInvoiceDetail","","",1)
		do AddFilter^COMViewCustom("P"_$$$FldFINARInvoiceCustomerNumber,"=",pidCustomer)
		do Start^COMViewCustom()
    }
    
	quit $$$OK
 
PrintStatement(pYPARA)
    ;-------------------------------------------------------------------------------
    ; Print the current customers statement.
    ;
    ; Returns:
    ;
    ; History:
    ;  6-Jan-2005	JW			SR11172: Date is index 3, not 2.
    ; 04-Jun-2004	shobby		Reset the REPDef values so the Customer Statement selection screen is not affected.	
    ; 04-Jun-2004   Shobby   	Created (TR007282)
    ;-------------------------------------------------------------------------------
    ;
    new tmpVORG
    
    set VORG(1)=pYPARA
    ;set VORG(2)=+$h
    set VORG(3)=+$h		; SR11172
	
	merge tmpVORG=^REPDef(YM,YBED,"FINARST")
	do Run^REP("FINARST")
	kill ^REPDef(YM,YBED,"FINARST")
	merge ^REPDef(YM,YBED,"FINARST")=tmpVORG
	quit
 
AddCustomer(pidCustomer,pidControlAccount)
	new strStatus,objCustomer
 
	set strStatus=1
	if pidCustomer'="" {
		if '$data(^FINARCustomer(YM,pidCustomer,1)) {
			set objCustomer=""
			set $$$FINARCustomerControlAccount(objCustomer)=pidControlAccount
			set strStatus=$$Save^FINSYS("FINARCustomer",pidCustomer,objCustomer,1)
		}
	}
	quit strStatus
	
	
GetSettlementDiscount(pidCustomer,pidTerm="")
	;-------------------------------------------------------------------
	;
	; History
	; 10-Mar-2005		Steve S			SR11844: If passing in a term, use it.
	; 26-Jun-2003		shobby			Make code more robust if no objTerm found (TrackRecord 005467)
	; 
	; ------------------------------------------------------------------
	; 
	new idTerm,strDiscount,objTerm
	
	if pidTerm="" { ;SR11844
		set idTerm=$$GetTerm(pidCustomer)
	} else {
		set idTerm=pidTerm
	}
 
	set strDiscount=0
	if idTerm'="" {
		set objTerm=$get(^FINSYSTerm(YM,idTerm,1))
		if objTerm'="" {
			set strDiscount=$$$FINSYSTermDiscount1(objTerm)_"%"
		}
	}
	quit strDiscount
 
DefaultControl(Number)
	; Get Default Customer Control Account for a Number
	; Use First Account
	New Control
	set Control=$order(^FINARAccount(YM,""))
	Quit Control
	
	
GetTerm(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Given a customer number, find their discount terms.
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Mar-2005	Steve S		Commented
    ;-------------------------------------------------------------------------------
	new objCustomer,idTerm,idControlAccount,objControlAccount
	
	set idTerm=""
	
	if $get(pidCustomer)'="" {
		set objCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		set idTerm=$$$FINARCustomerDiscountTerm(objCustomer)
		if (idTerm="") {
			set idControlAccount=$$$FINARCustomerControlAccount(objCustomer)
			if (idControlAccount'="") {
				set objControlAccount=$get(^FINARAccount(YM,idControlAccount,1))
				set idTerm=$$$FINARAccountDefaultDiscountTerm(objControlAccount)
			}
		}
	}
	
	quit idTerm
	
	
GetFreightDiscount(Customer)
	; Get Freight on Discount flag for a Customer
	
	new CusRec,ControlRec,ControlAccount,Freight
	
	set Freight=1 ; Default
	
	if Customer'="" {
		set CusRec=$get(^FINARCustomer(YM,Customer,1))
		set ControlAccount=$$$FINARCustomerControlAccount(CusRec)
		if ControlAccount'="" {
			set ControlRec=$get(^FINARAccount(YM,ControlAccount,1))
			set Freight=$$$FINARAccountDiscountonFreight(ControlRec)
		}
	}
	
	quit Freight
 
GetDueDate(pidCustomer,pdteTransDate,pidTerm="")
    ;-------------------------------------------------------------------------------
    ; Given a customer and transaction date, return the due date.
    ; 
    ; Can also specify a term, otherwise get the term from the customer file.
    ;
    ; Returns: dteDueDate
    ;
    ; History:
    ; 28-Jan-2005		Steve S			SR10424 Added pidTerm parameter (OVER-RIDE)
    ; 15-Mar-2004		shobby			End of month date calculation.
    ;-------------------------------------------------------------------------------
	
	new idTerm,dteDueDate,objTerm
	set dteDueDate=pdteTransDate
	
	;SR10424 If a term has been specified, use it - otherwise, get the terms
	;from the customer data.
	
	if pidTerm="" { 
		set idTerm=$$GetTerm(pidCustomer)
	} else {
		set idTerm=pidTerm
	}
	
	if idTerm'="" {
		set objTerm=$get(^FINSYSTerm(YM,idTerm,1))
		if $$$FINSYSTermBasedOn(objTerm)=$$$EnumFINSYSTERMBASEDEndofMonth {
			set dteDueDate=dteDueDate+$$^WWWMONTHDAYS(dteDueDate)-$$^WWWDAY1(dteDueDate)
		}
		set dteDueDate=dteDueDate+$$$FINSYSTermDiscount1Days(objTerm)
	}
	quit dteDueDate
	
GetControlAccount(pidCustomer,pidControlAccount)
    ;-------------------------------------------------------------------------------
    ; Get a customer's control account
    ;
    ; Returns:
    ;
    ; History:
    ; 31-May-2005	Steve S		Commented
    ;-------------------------------------------------------------------------------
 
	new strStatus,objCustomer
	set strStatus=1
	
	if pidCustomer="" set strStatus=$listbuild("Fin00078")  ; No customer for Sale
	if strStatus=1 if '$data(^FINARCustomer(YM,pidCustomer,1)) set strStatus=$listbuild("Fin00079",pidCustomer)  ; Customer not Found
	if strStatus=1 {
		set objCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		set pidControlAccount=$$$FINARCustomerControlAccount(objCustomer)
		if pidControlAccount="" set strStatus=$listbuild("Fin00080",pidCustomer)  ; No customer control account for customer %1
		}
	if strStatus=1 if '$data(^FINARAccount(YM,pidControlAccount,1)) set strStatus=$listbuild("Fin00081",pidCustomer)  ; Customer control account not valid for customer %1
	quit strStatus
 
GetCustomerControlAccount(pidCustomer)
	;History:
	;02-06-2003  Newed strStatus
	new idAccount,strStatus
	set idAccount=""
	set strStatus=$$GetControlAccount(pidCustomer,.idAccount)
	if strStatus'=1 set idAccount=$$DefaultControl^FINARCustomer()
	quit idAccount
	
AgedTrialBalance(pidAccount="",pidControlAccount="")
	new strStatus
	new idControlAccount,idAccount,objFINARCustomer
	;
	set strStatus=$$$OK
	set idAccount=""
	kill ^mtemp($Job,"AgedTrialBalance")
	w !
	;
	while 1 {
		set idAccount=$order(^FINARCustomer(YM,idAccount))
		quit:idAccount=""
		set objFINARCustomer=$get(^FINARCustomer(YM,idAccount,1))
		set idControlAccount=$$$FINARCustomerControlAccount(objFINARCustomer)
		if idControlAccount="" {
			set idControlAccount="N/A"
		}
		set ^mtemp($Job,"AgedTrialBalance",idControlAccount,idAccount)=objFINARCustomer
	}
	;
	; Display Results
	new objFINARAccount,strDescription,strName
	set idControlAccount=""
	while 1 {
		set idControlAccount = $order(^mtemp($Job,"AgedTrialBalance",idControlAccount))
		quit:idControlAccount=""
		
		set objFINARAccount=$get(^FINARAccount(YM,idControlAccount,1))
		if objFINARAccount="" {
			set strDescription="N/A"
		} else {
			set strDescription=$$$FINARAccountDescription(objFINARAccount)
		}
		;w "Control Account : "_idControlAccount_" : "_strDescription_$$$CRLF
		set idAccount=""
		while 1 {
			set idAccount = $order(^mtemp($Job,"AgedTrialBalance",idControlAccount,idAccount))
			quit:idAccount=""
			
			set objFINARCustomer=$get(^mtemp($Job,"AgedTrialBalance",idControlAccount,idAccount))
			set strName=$$$FINARCustomerCustomerName(objFINARCustomer)
			;write "   "_idAccount_" "_strName,!
		}
	}
	;
	kill ^mtemp($Job,"AgedTrialBalance")
	;
	quit strStatus
 
CalcPeriodTotal(pidAccount,pdteDate="",pblnIncludeForwardDated=$$$NO,pstrFCCode="",pidCompany="",
				pstrDateType=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate)
	;--------------------------------------------------------------------------------------------------
	;
	; This routine gets aged trial balance info for Receivables.
	; 
	; ********   Any changes should also be put in CalcPeriodTotal^FINAPSupplier **********
	;
	; History
	; 16-Oct-2006	PO			SR14942: If there is no GL Effective date then use invoice date... will happen when int batches deleted (data take on)
	; 24-Aug-2006	PO			SR14942: Corrected 30 day period type where not including future dates
	; 10-Feb-2006	Steve S		SR13474: Added pstrDateType (can report by various dates)
	; 13-Jan-2006	JW			SR14189 Get balance at date, not current balance.
	; 02-Sep-2005	Steve S		SR12483 Return 4 periods, not 3 -- use company parameter
	; 29-May-2005	SCR			SR12220	Invoice Filter
	; 01-Dec-2004	PO			SR10947 Convert from base currency to foreign
	; 20-Sep-2004	shobby		Flag to included forward dated invoices (SR10380)
	; 20-Sep-2004	shobby		Foreign Currency
	; 13-Nov-2003	shobby		Rewrote the searching through FINARInvoice.
	; 29-Jun-2003	LW			Changed to use FINARInvoice balance and invoice date
	; 20-Jun-2003	shobby		GetIDPart is now located in COMUtils (TrackRecord 005422)
	; 04-Jun-2003	shobby		Was skipping the first record.
	; 03-Jun-2003	shobby		Adjustment 3 month calculation.
	; 02-Jun-2003	shobby		Get Info for each specified account.
	; 26-May-2003	shobby		Creation
	; 
	; -------------------------------------------------------------------------------------------------
	;
	; TODO: This function needs to be reworked to be in a similar fashion to the FINAP code
	;
	new fltAmount,lngCurrentMonth,lngMnth1Month,lngMnth2Month,lngMnth3Month,lngMnth4Month
	new objFINARInvoice,node,idx,strKey,strDate,aryData,lngMonth,intPeriod,objTran,idTran
	new dteDateOrig,idBatch
	;
	if $get(pdteDate)="" set pdteDate=+$h
	set fltAmount(1)=0
	set fltAmount(2)=0
	set fltAmount(3)=0
	set fltAmount(4)=0
	set fltAmount(5)=0 ;SR12483
	if pidCompany="" set pidCompany=YM
	
	if $get(pidAccount)'="" {
		set lngCurrentMonth=$$Month^REP(pdteDate)
		set lngMnth1Month=lngCurrentMonth-1
		set lngMnth2Month=lngCurrentMonth-2
		set lngMnth3Month=lngCurrentMonth-3
		set lngMnth4Month=lngCurrentMonth-4 ;SR12483
		;
		set dteDateOrig=pdteDate
		if pblnIncludeForwardDated set pdteDate=pdteDate+10000 ;SR10380
		
		set node=""
		for {
			set node=$order(^FINARInvoice(pidCompany,pidAccount,node))
			quit:node=""
			
			set objFINARInvoice=$get(^FINARInvoice(pidCompany,pidAccount,node,1))
			
			;SR13474: Get the required date from the invoice
			if pstrDateType=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate {
				set strDate=$$$FINARInvoiceInvoiceDate(objFINARInvoice)
			} elseif pstrDateType=$$$EnumFINSYSINVOICEDATETYPEDueDate {
				set strDate=$$$FINARInvoiceDueDate(objFINARInvoice)
			} elseif pstrDateType=$$$EnumFINSYSINVOICEDATETYPEGLEffectiveDate {
				set strDate=$$GetGLEffDate^FINARInvoice(pidAccount,node)
			}
			
			if $get(strDate)="" set strDate = $$$FINARInvoiceInvoiceDate(objFINARInvoice) // SR14942
			
			if strDate <= pdteDate { // SR14942
				set fltAmount=$$GetBalanceAtDate^FINARInvoice(pidAccount,node,pdteDate,pidCompany)	//SR14189, SR14942: do inside if instead of outside
			//if (strDate'="")&&(strDate<=pdteDate) {			//SR14189
			//	set fltAmount=$$$FINARInvoiceBalance(objFINARInvoice)
				if pstrFCCode'="" { ; SR10947
					set fltAmount=$$$FCAmount(fltAmount)
				}
				if ('$$$FCZero(fltAmount)) {  ; This will check for Invoices with a balance in local & fc
					if $$QueryCheck^FINARInvoiceFilter(pidAccount_","_node,objFINARInvoice) { ; Invoice Filter
						set aryData(strDate)=$$$FCAdd($get(aryData(strDate)),fltAmount)
					}
				}
			}
		}
			
		set node=""
		for   {
			set node=$order(aryData(node))
			quit:node=""
			set fltAmount=aryData(node)
			if +fltAmount'=0 {
				set lngMonth=$$Month^REP(node)
				if pblnIncludeForwardDated { ;SR10380
					;SR13474
					if $$TrialBalancePeriodType^FINGeneralSetup()=$$$EnumFINSYSPERIODTYPECalenderMonth {
						set intPeriod=$select(lngMonth>=lngCurrentMonth		:1,
											  lngMonth=lngMnth1Month		:2,
											  lngMonth=lngMnth2Month		:3,
											  lngMonth=lngMnth3Month		:4,
											  lngMonth<=lngMnth4Month		:5,
											  $$$YES						:0)  ;SR12483
					
					} elseif $$TrialBalancePeriodType^FINGeneralSetup()=$$$EnumFINSYSPERIODTYPE30Days {
						set intPeriod=$select(node>=(dteDateOrig-29)		:1,
											  node>=(dteDateOrig-59)		:2,
											  node>=(dteDateOrig-89)		:3,
											  node>=(dteDateOrig-119)		:4,
									 		  node<=(dteDateOrig-120)		:5,
									  		  $$$YES						:0)
					}
				
				} else {
					;SR13474
					if $$TrialBalancePeriodType^FINGeneralSetup()=$$$EnumFINSYSPERIODTYPECalenderMonth {
						set intPeriod=$select((lngMonth=lngCurrentMonth)&&(node<=dteDateOrig)		:1,
											  lngMonth=lngMnth1Month								:2,
											  lngMonth=lngMnth2Month								:3,
											  lngMonth=lngMnth3Month								:4,
											  lngMonth<=lngMnth4Month								:5,
											  $$$YES												:0)  ;SR12483
					
					} elseif $$TrialBalancePeriodType^FINGeneralSetup()=$$$EnumFINSYSPERIODTYPE30Days {
						if node <= dteDateOrig { // SR14942
							set intPeriod = $select(node>=(dteDateOrig-29)	:1,
													node>=(dteDateOrig-59)	:2,
													node>=(dteDateOrig-89)	:3,
													node>=(dteDateOrig-119)	:4,
													node<=(dteDateOrig-120)	:5,
										  			$$$YES					:0)
						} else {
							set intPeriod = 0
						}
					}
					
				}
				
				if intPeriod'=0 set fltAmount(intPeriod)=$$$FCAdd(fltAmount(intPeriod),fltAmount)
			
			}
		}
	}
	
	quit $listbuild(fltAmount(1),fltAmount(2),fltAmount(3),fltAmount(4),fltAmount(5))
 
Period(pidPeriodType,pdteDate,pblnIncludeForwardDated,pdteDateOrig,plngCurrentMonth)
	;-------------------------------------------------------------------------------
	; Period that a date is part of
	;
	; Params:
	; pidPeriodType - Type of period (monthly or lots of 30 days)
	; pdteDate - Invoice/Due/GL effecitve Date (will be increased by 10,000 if pblnIncludeForwardDated)
	; pblnIncludeForwardDated - Whether dates after pdteDate are to be include
	; pdteDateOrig - Original Invoice/Due/GL effecitve Date
	; plngCurrentMonth - Absolute month number for pdteDate
	;
	; ByRefs: None
	;
	; Returns: Period
	;
	; History:
	; 14-Sep-2006	PO		SR15010: Corrected calculation
	; 24-Aug-2006	PO		SR14942: Corrected 30 day period type where not including future dates
	; 16-Aug-2006	PO		SR14549: Created
	;-------------------------------------------------------------------------------
	new intPeriod,lngMonth
 
	if pblnIncludeForwardDated {
		if pidPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set lngMonth = ($$$DateYear(pdteDate) * 12)+$$$DateMonth(pdteDate) // SR15010
			set intPeriod = $select(lngMonth>=plngCurrentMonth		:1,
									lngMonth=(plngCurrentMonth-1)	:2,
									lngMonth=(plngCurrentMonth-2)	:3,
									lngMonth=(plngCurrentMonth-3)	:4,
									lngMonth<=(plngCurrentMonth-4)	:5,
									$$$YES							:0)
		} elseif pidPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			set intPeriod = $select(pdteDate>=(pdteDateOrig-29)		:1,
									pdteDate>=(pdteDateOrig-59)		:2,
									pdteDate>=(pdteDateOrig-89)		:3,
									pdteDate>=(pdteDateOrig-119)	:4,
						 			pdteDate<=(pdteDateOrig-120)	:5,
						  			$$$YES							:0)
		}
	} else {
		if pidPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set lngMonth = ($$$DateYear(pdteDate) * 12)+$$$DateMonth(pdteDate) // SR15010
			set intPeriod = $select((lngMonth=plngCurrentMonth)&&(pdteDate<=pdteDateOrig)	:1,
									lngMonth=(plngCurrentMonth-1)							:2,
									lngMonth=(plngCurrentMonth-2)							:3,
									lngMonth=(plngCurrentMonth-3)							:4,
									lngMonth<=(plngCurrentMonth-4)							:5,
									$$$YES													:0)
		} elseif pidPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			if pdteDate <= pdteDateOrig { // SR14942
				set intPeriod = $select(pdteDate>=(pdteDateOrig-29)		:1,
										pdteDate>=(pdteDateOrig-59)		:2,
										pdteDate>=(pdteDateOrig-89)		:3,
										pdteDate>=(pdteDateOrig-119)	:4,
										pdteDate<=(pdteDateOrig-120)	:5,
							  			$$$YES							:0)
			} else {
				set intPeriod = 0
			}
		}
	}
 
	quit intPeriod
 
GetBalance(pYKEY,pintField)
	;-------------------------------------------------------------------------------------------
	;
	; This routine calculates the PeriodTotals.  Fields 1-4 are on the same tab and are called
	; from the property on the form.  The calculation is done once for performance reasons and
	; then cached.  Field 5 is also on the 'Period Totals' tab, so the calculation may or may
	; not need to be done when field 5 calls this routine.
	; 
	; History
	; 30-Nov-2005	PO			SR13929: CalcPeriodTotal was changed under SR12483, this procedure has now been changed accordingly.
	; 20-Sep-2004	shobby		Pass a flag into CalcPeriodTotal to included forward dated invoices (SR10380)
	; 17-Aug-2004	shobby		PeriodTotal value would not have been calculated when on Tab 5. (Never been to field one to create the values). (SR10260)
	; 26-Feb-2004	SCR			Bug Fix
	; 
	;--------------------------------------------------------------------------------------------
	;
	new lstPeriodTotals,strResult
	;
	set strResult=""
	if pintField=1 {
		set lstPeriodTotals=$$CalcPeriodTotal(pYKEY,,$$$YES)
		set strResult=$listget(lstPeriodTotals,1)
		set ^CacheTemp(YUSER,"GetBalance","Period1Month")=$listget(lstPeriodTotals,2)
		set ^CacheTemp(YUSER,"GetBalance","Period2Month")=$listget(lstPeriodTotals,3)
		set ^CacheTemp(YUSER,"GetBalance","Period3Month")=$listget(lstPeriodTotals,4)+$listget(lstPeriodTotals,5)
		set ^CacheTemp(YUSER,"GetBalance","PeriodTotal")=$listget(lstPeriodTotals,1)+$listget(lstPeriodTotals,2)+$listget(lstPeriodTotals,3)+$listget(lstPeriodTotals,4)+$listget(lstPeriodTotals,5)
	} elseif pintField=2 {
		set strResult=$get(^CacheTemp(YUSER,"GetBalance","Period1Month"))
	} elseif pintField=3 {
		set strResult=$get(^CacheTemp(YUSER,"GetBalance","Period2Month"))
	} elseif pintField=4 {
		set strResult=$get(^CacheTemp(YUSER,"GetBalance","Period3Month"))
		kill ^CacheTemp(YUSER,"GetBalance")
	} elseif pintField=5 {
		if '$data(^CacheTemp(YUSER,"GetBalance","PeriodTotal")) {
			set lstPeriodTotals=$$CalcPeriodTotal(pYKEY,,$$$YES)
			set ^CacheTemp(YUSER,"GetBalance","PeriodTotal")=$listget(lstPeriodTotals,1)+$listget(lstPeriodTotals,2)+$listget(lstPeriodTotals,3)+$listget(lstPeriodTotals,4)+$listget(lstPeriodTotals,5)
		}
		set strResult=$get(^CacheTemp(YUSER,"GetBalance","PeriodTotal"))
		kill ^CacheTemp(YUSER,"GetBalance")
	}
	quit strResult
 
OnAfterDataFields(Customer="") 
    ;-------------------------------------------------------------------------------
    ; After Data Field for Finance Customers
    ;
    ; Returns:
    ;
    ; History:
    ; 09-Nov-2006	JW			SR15190: Always show grid - for cleanup purposes.
    ; 24-Mar-2005	shobby		Renamed from AfterDataFields.
    ; 01-Feb-2005	Steve S		SR11554 Remove processing of Payment tab
    ; 24-Nov-2004	PO			SR11007 Use the edit grid for customer invoices
    ; 25-Feb-2004	SCR			Created
    ;-------------------------------------------------------------------------------
 	
	if YSEITE=1 { ; SR11007
		//if Customer'="" {		SR15190
			do LoadGrid(Customer)
		//}
	} elseif YSEITE=3 { ; SR11554 Period totals are now on page 3
		do ShowPeriods^FINARPeriod(Customer)
	}
 
	quit
 
LoadGrid(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Load the edit grid
    ;
    ; Returns:
    ;
    ; History:
	; 05-Dec-2008	GRF		Clarify Enabled test
    ; 07-Aug-2006	JW		SR14730: Added DontUpdateContainer/StoreAll. GRIDStart macro
    ; 11-Aug-2005	Steve S	Made grid slightly larger (400 instead of 200)
    ; 10-Dec-2004	shobby	Removed null YKEY test (SR11175)
    ; 25-Feb-2004	PO		Created
    ;-------------------------------------------------------------------------------
	new idForm,YAUSWAHL
	set idForm="FINARInvoice"
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)          = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)       = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)            = idForm
	set $$$COMGridEditParameterEnabled(YAUSWAHL)             = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)           = "FINARCustomer"
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL) = $$$YES
	set $$$COMGridEditParameterDontStoreAll(YAUSWAHL)        = $$$YES
	
	$$$GRIDStart(idForm,pYKEY)
	
	quit
 
 
OnBeforeSave(pYKEY="",YFELD)
    ;-------------------------------------------------------------------------------
    ; Execute before save
    ;
    ; Returns:
    ;
    ; History:
    ; 27-Apr-2005	JW		SR12144: Check account.
    ;-------------------------------------------------------------------------------
	new strStatus,idAccount,objAccount
	
	set strStatus=$$$OK
	
	set idAccount = $$$FINARCustomerDefaultExpenseAccount(YFELD)
	if (idAccount'="") {
		set objAccount = $get(^FINGLAccount(YM,idAccount,1))
		if $$$FINGLAccountAccountUsage(objAccount)'=$$$EnumFINGLACCOUNTUSAGETransaction {
			set strStatus = $lb("Fin00751")  ;Default Expense Account is not a valid transaction account
		}
	}
 
	if $$$ISOK(strStatus) {
		set strStatus=$$$GRIDSave(pYKEY)
	}
	
	if $$$ISOK(strStatus) {
		set Q=$$$QSave
	} else {
		do ReturnError^COMUtils(strStatus)
		set Q=$$$QDontSave
	}
	
	quit
 
GetChequeNumberFromReference(pstrReference)
    ;-------------------------------------------------------------------------------
    ; Gets the Cheque Number (if it exists) by a reference to a FININTBatchLine
    ;
    ; Returns:
    ;
    ; History:
    ; 28-Jul-2004   Shobby   Created (SR10170)
    ;-------------------------------------------------------------------------------
	;
	new strChequeNumber,idBank,idBankLine,objFINARBank,objFINARBankLine
	
	set strChequeNumber=""
	set idBank=$piece(pstrReference,YKOMMA,1)
	set idBankLine=$piece(pstrReference,YKOMMA,2)
	if (idBank'="")&&(idBankLine'="") {
		set objFINARBankLine=$get(^FINARBankLine(YM,idBank,idBankLine,1))
		set strChequeNumber=$$$FINARBankLineChequeNumber(objFINARBankLine)
	}
	quit strChequeNumber
	
	
OnBeforeDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Checks whether this item can be deleted.
	; 
	; History
	; 09-Mar-2004		shobby		Creation
	; 
	;-------------------------------------------------------------------------------
	;
	quit $$CheckLinks^FINSYS(pYKEY,$lb("FINARInvoice","FINARADJLine","FINARBankLine"),"FINARCustomer")
 
 
UpdateBanking(pobjSale,pintPaymentLine)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 31-Mar-2004   shobby   	Created (TR006419)
    ;-------------------------------------------------------------------------------
	;
	new strStatus,idFINARCustomer,objFINARCustomer
	new strBankName,strBankAccountNumber,strBankBSB
	
	set strStatus=$$$OK
	set idFINARCustomer=$get(@pobjSale@("Customer"))
	if idFINARCustomer'="" {
		set objFINARCustomer=$get(^FINARCustomer(YM,idFINARCustomer,1))
		if objFINARCustomer '="" {
			set strBankName			=$get(@pobjSale@("Payments",pintPaymentLine,"PayRefAccName"))
			set strBankAccountNumber=$get(@pobjSale@("Payments",pintPaymentLine,"PayRefAccNo"))
			set strBankBSB			=$get(@pobjSale@("Payments",pintPaymentLine,"PayRefBSB"))
			
			if strBankName'="" 			set $$$FINARCustomerBankName(objFINARCustomer)=strBankName
			if strBankAccountNumber'="" set $$$FINARCustomerBankAccountNumber(objFINARCustomer)=strBankAccountNumber
			if strBankBSB'="" 			set $$$FINARCustomerBankBSB(objFINARCustomer)=strBankBSB
			
			set strStatus=$$$Save("FINARCustomer",idFINARCustomer,objFINARCustomer,1)
		}
	}
	quit strStatus
 
 
OnBeforeButtonLine(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Routine to execute before button line on the customer form.
    ;
    ; Returns:
    ;
    ; History:
    ; 30-Mar-2005	Steve S		Created (SR11937)
    ;-------------------------------------------------------------------------------
	new objCustomer,idTaxLocation,idTaxCode
	
	kill ^COMTempList(YM,YUSER,"TaxCodes")
	
	if ($get(pidCustomer)'="") {
		set objCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		set idTaxLocation=$$$FINARCustomerTaxLocation(objCustomer)
		
		if idTaxLocation'="" {
			set idTaxCode=""
			for {
				set idTaxCode=$order(^COMTAXTable(YM,idTaxLocation,idTaxCode))
				quit:(idTaxCode="")
				
				set ^COMTempList(YM,YUSER,"TaxCodes",idTaxCode,1)=$$$AppEnum("MWST",idTaxCode)
			}	
		}
	}
 
	quit
 
OnBlurTaxLocation(pstrData)
    ;-------------------------------------------------------------------------------
    ; Code to execute on blur of the tax location field.
    ;
    ; Returns:
    ;
    ; History:
    ; 15-Aug-2005	JW		SR12615: Don't need to clear field or alert.
    ; 30-Mar-2005	Steve S	Created (SR11937)
    ;-------------------------------------------------------------------------------
	new objCustomer,idTaxLocation,idTaxCode,strError,idCurrentTaxCode,blnFound
	
	set blnFound=$$$NO
	set objCustomer=$get(pstrData)
	
	if objCustomer'="" {
		set idTaxLocation=$$$FINARCustomerTaxLocation(objCustomer)
		set idCurrentTaxCode=$$$FINARCustomerDefaultTaxCode(objCustomer)
		if idTaxLocation'="" {
			if $$IsValidLocation^COMTAXLocation(idTaxLocation) {
				do StartCombo^COMCombo("document.WWW2.Y"_YFORM_"D"_$$$FldFINARCustomerDefaultTaxCode,"",1)
				set idTaxCode=""
				for {
					set idTaxCode=$order(^COMTAXTable(YM,idTaxLocation,idTaxCode))
					quit:idTaxCode=""
					if idTaxCode=idCurrentTaxCode set blnFound=$$$YES
					do AddOption^COMCombo(idTaxCode,$zcvt(idTaxCode_" - "_$$GetEnumDescription^COMUtils("MWST",idTaxCode),"o","JS"))
				}
				do StopCombo^COMCombo()
				if blnFound do PopulateDataField^COMUtils(YFORM,$$$FldFINARCustomerDefaultTaxCode,idCurrentTaxCode)
			} else {
				;do PopulateDataField^COMUtils(YFORM,$$$FldFINARCustomerTaxLocation,"")		//SR12615
				do EmptyDefaultTaxCode()
				;set strError=$lb("Fin00715",idTaxLocation)  ;Tax Location '%1' is not valid
				;$$$Alert(strError)
			}
		} else {
			do EmptyDefaultTaxCode()
		}
		
		if blnFound=$$$NO do PopulateDataField^COMUtils(YFORM,$$$FldFINARCustomerDefaultTaxCode,"") 
	}
 
	quit
	
 
EmptyDefaultTaxCode()
    ;-------------------------------------------------------------------------------
    ; "Empties" the Default Tax Code drop down list.
    ;
    ; Returns:
    ;
    ; History:
    ; 30-Mar-2005	Steve S		Created (SR11937)
    ;-------------------------------------------------------------------------------
 
	do StartCombo^COMCombo("document.WWW2.Y"_YFORM_"D"_$$$FldFINARCustomerDefaultTaxCode,"",1)
	do StopCombo^COMCombo()
		
	quit
	
	
GetDefaultTaxCode(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Gets a customers default Tax Code
    ;
    ; Returns:
    ;
    ; History:
    ; 30-Mar-2005	Steve S		Created
    ;-------------------------------------------------------------------------------
 
	new idTaxCode,objCustomer
 
	set idTaxCode=""
	
	if $get(pidCustomer)'="" {
		set objCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		set idTaxCode=$$$FINARCustomerDefaultTaxCode(objCustomer)	
	}
	
	quit idTaxCode
	
HasTaxIncluded(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Checks whether a customer has tax included in their invoices
    ;
    ; Returns:
    ;
    ; History:
    ; 30-Mar-2005	Steve S		Created
    ;-------------------------------------------------------------------------------
 
	new objCustomer,blnHasTaxIncluded
	
	if $get(pidCustomer)'="" {
		set objCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		set blnHasTaxIncluded=+$$$FINARCustomerTaxIncluded(objCustomer)	
	}
 
	quit blnHasTaxIncluded
	
	
GetCustomerName(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Get a customer's name
    ;
    ; Returns:
    ;
    ; History:
    ; 07-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	new strName,objCustomer
 
	set strName=""
	
	if $get(pidCustomer)'="" {
		set objCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		set strName=$$$FINARCustomerCustomerName(objCustomer)
	}
 
	quit strName
	
	
GetTaxLocation(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Get the customer's tax location. If not set up, use the current
    ; location's tax location.
    ;
    ; Returns: tax location
    ;
    ; History:
    ; 08-Apr-2005	JW		Created SR12098
    ;-------------------------------------------------------------------------------
	new location
	
	set location=""
	
	if pidCustomer'="" {
		set location = $$$FINARCustomerTaxLocation($get(^FINARCustomer(YM,pidCustomer,1)))
		if location="" {
			set location = $$CurrentTaxLocation^COMTAXLocation()
		}
	}
	
	quit location
	
OnAfterButtonLine(pidCus="")
    ;-------------------------------------------------------------------------------
    ; On After Button Line
    ; Show Cutomer Status
    ;
    ; Returns:
    ;
    ; History:
    ; 31-May-2005	SCR		Created SR12220:
    ;-------------------------------------------------------------------------------
    ;
	new strText
	set strText="["_$$Status(pidCus)_"]"
	do DisplayText^COMUtilForm(strText)
 
	quit
Status(pidCus="")
    ;-------------------------------------------------------------------------------
    ; Customer Status
    ;
    ; Returns: Html Message
    ;
    ; History:
    ; 30-May-2005	SCR		Created SR:12220
    ;-------------------------------------------------------------------------------
    ;
	new strText,strFilter
	
	set strFilter=$$QueryStatus^FINARInvoiceFilter(pidCus)
 
	quit strFilter
 
 
IsUsable(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Whether customer can be used at this time.
    ;
    ; Params:	pidCustomer
    ;
    ; Returns: status
    ;
    ; History:
    ; 27-Sep-2005	JW		SR13447: Created (copied from FINAPSupplier)
    ;-------------------------------------------------------------------------------
	new dteInactive,strStatus
	
	set strStatus = $$$OK
	
	if $get(pidCustomer)'="" {
		set dteInactive = $$$FINARCustomerInactiveDate($get(^FINARCustomer(YM,pidCustomer,1)))
		if (dteInactive'="") && (+$horolog >= dteInactive) {
			set strStatus = $listbuild("Com00227",pidCustomer) ; Customer %1 is inactive
		}
	}
	
	quit strStatus
	
 
GetOutput(pidCustomer,pblnEmail=$$$YES,pblnStatement=$$$NO)
    /*-------------------------------------------------------------------------------
    ; Get a customer's output parameter (fax/email)
    ;
    ; Params: pidCustomer:	The customer id
    ; 		  pblnEmail:	Whether or not to return email (else fax)
    ;
    ; ByRefs:
    ; 
    ; Returns: string
    ;
    ; History:
    ; 26-Jun-2006	Steve S		SR14514: Statements/invoices have their own params now
    ; 19-Dec-2005	RPW			SR12974: Use new striptonumber macro.
    ; 06-Dec-2005	Steve S		SR12974: Created
    ;-------------------------------------------------------------------------------*/
	new strOutput,objFINARCustomer
 
	set strOutput=""
	
	if $get(pidCustomer)'="" {
		set objFINARCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		if pblnEmail {
			//SR14514
			if pblnStatement {
				set strOutput=$$$FINARCustomerEmailforStatements(objFINARCustomer)	
			} else {
				set strOutput=$$$FINARCustomerSendInvoicesVia(objFINARCustomer)
			}
			
			if strOutput="" {
				set strOutput=$$$FINARCustomerEmail(objFINARCustomer)
			}
		} else {
			set strOutput=$$$StripToNumber($$$FINARCustomerFax(objFINARCustomer))
			//set strOutput=$$StripToNumber^COMUtilStr(strOutput)
		}	
	}
 
	quit strOutput
	
	
GetPreferredOutput(pidCustomer,pblnStatement=$$$NO)
	;-------------------------------------------------------------------------------
	; For a customer, get their "send documents via" setting.
	;
	; Params: pidCusto]]><![CDATA[mer		: The customer number
	;
	; ByRefs:
	;
	; Returns: strOutput
	;
	; History:
	; 21-Jun-2006	Steve S		SR14514: Created
	;-------------------------------------------------------------------------------
	new strOutput,objFINARCustomer
 
	set strOutput=""
	
	if $get(pidCustomer)'="" {
		set objFINARCustomer=$get(^FINARCustomer(YM,pidCustomer,1))
		if pblnStatement {
			set strOutput=$$$FINARCustomerSendStatementsVia(objFINARCustomer)
		} else {
			set strOutput=$$$FINARCustomerSendInvoicesVia(objFINARCustomer)
		}
		
		if strOutput="" set strOutput=$$$EnumCOMDOCUMENTOUTPUTPrinter
	}
 
	quit strOutput
	
	
HasOutstandingInvoices(pidCustomer,pdteDate,pblnIncludeZero=$$$NO)
	;-------------------------------------------------------------------------------
	; For a customer and date, does the customer have outstanding invoices?
	;
	; Params:	pidCustomer		: The customer number
	; 			pdteDate		: The date to check
	; 			pblnIncludeZero	: Whether to include zero balance invoices
	;
	; ByRefs:
	;
	; Returns: blnHasOutstanding (boolean)
	;
	; History:
	; 21-Mar-2006	Steve S		SR14449: Created
	;-------------------------------------------------------------------------------
	new blnHasOutstanding,idInvoice,fltBal
 
	set blnHasOutstanding=$$$NO
	
	if $get(pdteDate)="" set pdteDate=+$horolog
	set idInvoice=""
	
	if $get(pidCustomer)'="" {
		for {
			set idInvoice=$order(^FINARInvoice(YM,pidCustomer,idInvoice))
			quit:(idInvoice="")||(blnHasOutstanding)
			
			set fltBal=$$GetBalanceAtDate^FINARInvoice(pidCustomer,idInvoice,pdteDate)
			set blnHasOutstanding=((+fltBal=0)&&pblnIncludeZero)||(+fltBal'=0)
		}
	}
 
	quit blnHasOutstanding
]]></Routine>
</Export>