<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLRepPer" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLRepPer  ; Trial Balance Report
	
#include COMSYS
#include FINConst
#include REPConst
	
TranAcc(StartRec,Result,Param)
	;-------------------------------------------------------------------------
	; Called to start a repeat row
	;
	; History
	; 25-Jun-2004	shobby	Foreign Currency.
	; 07-Jul-2003	shobby	Variables
	;-------------------------------------------------------------------------
	new RepSpece,Template,TempSpec,RunCode,Level,Total,Rec
	new SortBy,Acc,Count,Amt,SortCode,SortKey
	
	set SortBy=$get(Param("Sort"))
	if SortBy<2 set SortCode = "Set SortKey=Acc"                ; Sort by Number
	if SortBy=2 set SortCode = "Set SortKey=$piece(Rec,Y,2)"    ; Sort by Description
	
	; Scan all Transaction Accounts
	
	kill ^mtemp("Rep",YUSER)
	kill ^mtemp("RepDrill",YUSER)
	
	set Acc = ""
	for {
		set Acc = $order(^FINGLAccounts(0,3,1,Acc))   ; "Transactions"
		quit:Acc=""
		
		set Rec = $get(^FINGLAccount(0,Acc,1))
		if $piece(Rec,Y,3)=1 {  ; Only Sub Accounts
			set Amt=$$GetTotal(Acc,Param("Period Type"),"","",Param("Year End"),Param("Period End"),"")
			;set ^SS(Acc)=Param("Period Type")_","_Param("Year End")_","_Param("Period End")_" = "_Amt
			if Amt {
				xecute SortCode
				set ^mtemp("Rep",YUSER,1,SortKey_" ",Acc)=Amt
			}
		}
	}	
	set SortKey=""
	set Count=0
	for {
		set SortKey=$order(^mtemp("Rep",YUSER,1,SortKey))
		quit:SortKey=""
		set Acc=""
		for {
			set Acc=$order(^mtemp("Rep",YUSER,1,SortKey,Acc))
			quit:Acc=""
			set Amt=$get(^mtemp("Rep",YUSER,1,SortKey,Acc))
			set Count=Count+1
			set ^mtemp("Rep",YUSER,2,Count)=$get(^FINGLAccount(0,Acc,1))
			set ^mtemp("Rep",YUSER,2,Count,"id")=Acc
			set ^mtemp("Rep",YUSER,2,Count,"Form")="FINGLAccount"
			if Amt>0 set ^mtemp("Rep",YUSER,2,Count,"Dr")=Amt
			if Amt<0 {
				set $piece(Amt,":",1)=$$$FCSign(Amt)
				set ^mtemp("Rep",YUSER,2,Count,"Cr")=Amt
			}
		}
	}
	set Result="^mtemp(""Rep"","""_YUSER_""",2)"
	
 
	quit
	;===========================================================
	; Drill Down Code
PeriodDrill(Cell,Parent) 
    ;-------------------------------------------------------------------------------
    ; Call from a Period Total, Drill down to Period amounts
    ;
    ; Returns:
    ;
    ; History:
    ; 22-Feb-2005	Paul K		Reduce incedence of calling WWWVAR
    ;-------------------------------------------------------------------------------
	New Report,Level,Param,Data
	
	set Report=$get(^mtemp("RepParam",Parent,"Report"))
	set Level=$get(^mtemp("RepParam",Parent,"Level"))
	set Data=$get(^mtemp("Rep",Parent,"Drill",Cell,"Data"))
	set Param("Account")=$piece(Data,":",3)
	set Param("Period Type")=$piece(Data,":",4)
	set Param("Year Start")=$piece(Data,":",5)
	set Param("Period Start")=$piece(Data,":",6)
	set Param("Year End")=$piece(Data,":",7)
	set Param("Period End")=$piece(Data,":",8)
	set Param("Tran Type")=$piece(Data,":",9)
	set Level=2 
	
	set YFORM="REPRUN"_Parent
	set %("%KEY","YFORM")=YFORM
	;write Report,":",$get(Level),":",YFORM,":",YUSER
	if $get(Y)="" do ^WWWVAR
	do Run^REPRun(Report,.Param,Level,1)
	set YFORM=""  ; Stops the Form Running!
 
	quit
	
	
AccountDetail(StartRec,Result,Param) ; Called to start a repeat row
	new Amount, DataType, Account, PeriodType, StartYear, StartPeriod, EndYear, EndPeriod, TranType, Periods
	new RepSpece,Template,TempSpec,RunCode,Level,Total,Rec
	new SortBy,Acc
	
	; Scan all Transaction Accounts               ; FIXME : replace ^mtemp
	
	kill ^mtemp("Rep",YUSER)
	kill ^mtemp("RepDrill",YUSER)
	
	set Result="^mtemp(""Rep"","""_YUSER_""",2)"
	
	set Account     = $get(Param("Account"))
	set PeriodType  = $get(Param("Period Type"))
	set StartYear   = $get(Param("Year Start"))
	set StartPeriod = $get(Param("Period Start"))
	set EndYear     = $get(Param("Year End"))
	set EndPeriod   = $get(Param("Period End"))
	set TranType    = $get(Param("Tran Type"))
	
	do GetTotal(Account, PeriodType, StartYear, StartPeriod, EndYear, EndPeriod, TranType, .Periods)
 
	new Count,Per,Period,PeriodNumber
	set Per = ""
	for {
		set Per = $order(Periods(Per))
		quit:Per=""
		
		set Rec = Periods(Per)
		set Acc = $piece(Rec,":",3)
		set PeriodNumber = $piece(Rec,":",4)
		set Period       = $get(^FINGLPeriod(0,PeriodNumber,1))
		
		set Count = $increment(^mtemp("Rep",YUSER,2))
		set ^mtemp("Rep",YUSER,2,Count)          = $get(^FINGLAccount(0,Acc,1))
		set ^mtemp("Rep",YUSER,2,Count,"id")     = Acc
		set ^mtemp("Rep",YUSER,2,Count,"Form")   = "FINGLAccount"
		set ^mtemp("Rep",YUSER,2,Count,"Amount") = Rec
		set ^mtemp("Rep",YUSER,2,Count,"Period") = Period
	}
	
	quit
	
	; PeriodDrill down to Transactions
	; 
 
TranDrill(Cell,Parent) 
    ;-------------------------------------------------------------------------------
    ; Call from a Period Total, Drill down to Period amounts
    ;
    ; Returns:
    ;
    ; History:
    ; 22-Feb-2005	Paul K		Reduce incedence of calling WWWVAR
    ;-------------------------------------------------------------------------------
 
	new Report,Data,YFORM,Param,Period,PeriodRec,Level
	
	set Report=$get(^mtemp("RepParam",Parent,"Report"))
	set Data=$get(^mtemp("Rep",Parent,"Drill",Cell,"Record","Amount"))
	set Param("Account")=$piece(Data,":",3)
	set Param("Period")=$piece(Data,":",4)
	set Param("Tran Type")=$piece(Data,":",5)
	set Period=Param("Period")
	if Period="" set Period=" "
	set PeriodRec=$get(^FINGLPerio(0,Period,1))
	set Param("Tran Start")=$piece(PeriodRec,Y,2)
	set Param("Tran End")=$piece(PeriodRec,Y,3)
 
	set Level=3
		
	set YFORM="REPRUN"_Parent
	set %("%KEY","YFORM")=YFORM
	;write Report,":",$get(Level),":",YFORM,":",YUSER
	if $get(Y)="" do ^WWWVAR
	do Run^REPRun(Report,.Param,Level,1)
	set YFORM=""  ; Stops the Form Running!
	quit
	
	
TranShow  ; Drill Down to Transaction, Internal Tag
	; Setup YFORM
	new YPARA 
	set YFORM="FINGLTran"
	set YPARA=$piece($get(^mtemp("Rep",Parent,"Drill",Cell,"Record")),Y,1)
	set %("%KEY","YPARA")=YPARA
	quit
	
	
PeriodTran(StartRec,Result,Param) ; Called to start a repeat row
	new Account,TranType,StartDate,EndDate
	New Date,Tran,TranRec,Line,LineRec,Count
 
	set Account   = $get(Param("Account"))
	set TranType  = $get(Param("Tran Type"))
	set StartDate = $get(Param("Tran Start"))
	set EndDate   = $get(Param("Tran End"))
 
	kill ^mtemp("Rep",YUSER)
	kill ^mtemp("RepDrill",YUSER)
	set ^mtemp("RepDrill",YUSER,"DrillClass")="@d TranShow^FINGLRepPer"
	
	set Result="^mtemp(""Rep"","""_YUSER_""",2)"
 
	if StartDate="" set StartDate = 1
	if EndDate=""   set EndDate   = 99999
	if Account=""   set Account   = " "
	
	set Date = StartDate-1
	for  {
		set Date=$order(^FINGLTranLines(0,1,Account,Date)) ; for each date fo
		quit:Date=""
		quit:Date>EndDate
		
		set Tran=""
		for {
			set Tran=$order(^FINGLTranLines(0,1,Account,Date,Tran),-1) ; for each tran
			quit:Tran=""
			
			set Line=""
			set TranRec=$get(^FINGLTran(0,Tran,1))
			if TranType'="",TranType'=$piece(TranRec,Y,3) continue  ; Transaction type filter
			
			for {
				set Line=$order(^FINGLTranLines(0,1,Account,Date,Tran,Line)) ; for each line
				quit:Line=""
				
				set LineRec=$get(^FINGLTranLine(0,Tran,Line,1))
				set Count=$increment(^mtemp("Rep",YUSER,2))
				set ^mtemp("Rep",YUSER,2,Count)=LineRec
				set ^mtemp("Rep",YUSER,2,Count,"id")=Tran_","_Line
				set ^mtemp("Rep",YUSER,2,Count,"Form")="FINGLTranLine"
			}
		}
	}
	quit
	
	
	; ==============================================================
	; Supporting Functions
	; ==============================================================
 
GetTotal(Account, PeriodType, StartYear, StartPeriod, EndYear, EndPeriod, TranType, Periods)
	; History
	; 13-Jul-2006	JW			SR14836: Index variable. Use it.
	; 18-Nov-2003	shobby		Period rework.  intNumber should have been used to calculate totals rather than Period
	;
	;--------------------------------------------------------------------------------------------------
	;
	new Amount,Year,Period,intNumber,objFINGLPeriod,idxPeriodType
	
	Kill Periods
	set Periods=0
	set Year=$select(StartYear:StartYear-1,1:"")
	set Amount=0
	if StartPeriod="" set StartPeriod=" "
 	
 	set idxPeriodType = $$$Index(PeriodType)		// SR14836
 	
	for {
		set Year=$order(^FINGLPeriods(0,1,idxPeriodType,Year))		// SR14836
		if Year="" Quit
		if EndYear,Year>EndYear Quit
		;set Period=$select(Year=StartYear&StartPeriod:StartPeriod-1,1:"")
		set objFINGLPeriod=$get(^FINGLPeriod(0,StartPeriod,1))
		set intNumber=$$$FINGLPeriodNumber(objFINGLPeriod)-1
		for {
			set intNumber=$order(^FINGLPeriods(0,1,idxPeriodType,Year,intNumber))	// SR14836
			quit:intNumber=""
			set Period=$order(^FINGLPeriods(0,1,idxPeriodType,Year,intNumber,""))	// SR14836
			if Year=EndYear,Period>EndPeriod quit
 
			set Amount=Amount+$$GetPeriodTotal(Account,Period,TranType,.Periods)
		}
	}
	set Amount=Amount_":FINGLPerRange:"_Account_":"_PeriodType_":"_StartYear_":"_StartPeriod_":"_EndYear_":"_EndPeriod_":"_TranType
	
	quit Amount
 
GetPeriodTotal(pidAccount,pidPeriod,pidTranType,Periods)
	;
	; 14-Apr-2005		RobertW		SR12159: Make sure that FINGLTranType is no longer shared.
	; 
	new amt,Per
	;
	set pidTranType=$get(pidTranType)
	;
	if pidTranType'="" {
		set amt=$get(^FINGLPeriodTotal(0,pidAccount,pidPeriod,pidTranType,1))
		if amt,$data(Periods) {
			set Periods=Periods+1
			set Periods(Periods)=amt_":"_"FINGLPer"_":"_pidAccount_":"_pidPeriod_":"_pidTranType
		}
	}
	if pidTranType="" {
		set amt="",pidTranType=""
		for  {
			set pidTranType=$order(^FINGLPeriodTotal(0,pidAccount,pidPeriod,pidTranType))
			if pidTranType="" quit
			if '$$$FINGLTranTypeBudget($get(^FINGLTranType(0,pidTranType,1))) {
				set Per=$get(^FINGLPeriodTotal(0,pidAccount,pidPeriod,pidTranType,1))
				if Per {
					set amt=amt+Per
					if $data(Periods) {
						set Periods=Periods+1
						set Periods(Periods)=Per_":"_"FINGLPer"_":"_pidAccount_":"_pidPeriod_":"_pidTranType
					}
				}
			}
		}
	}
	quit amt
 
 
Input(Report,Param)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 27-Apr-2004	shobby		Get the default value for the period if the previous default was not valid (See GetValue). (TR007562)
    ; 27-Apr-2004   Shobby      Use the Period as a parameter when determining YEARSTART and YEAREND (TR007562)
    ;-------------------------------------------------------------------------------
	;
	new Period,strYearStart,strYearEnd
	
	set Period=$get(Param("Period Type"))
	if Period="" set Period=$$DefaultPeriod^FINGLPeriod()
	do Year(YUSER,"YEARSTART",Period)
	do Year(YUSER,"YEAREND",Period)
	set strYearStart=$$GetValue(YUSER,"YEARSTART",.Param,"Year Start",Report,$$DefaultYear())
	set strYearEnd=$$GetValue(YUSER,"YEAREND",.Param,"Year End",Report,$$DefaultYear())
 
	do Period(YUSER,"PERIODSTART",Period,strYearStart)
	do Period(YUSER,"PERIODEND",Period,strYearEnd)
	;do GetValue(YUSER,"PERIODEND",.Param,"Period End",Report,"")
	quit
 
 
GetValue(pYUSER,pstrType,pobjParam,pstrParamName,pstrReport,pstrDefault)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 11-May-2004	shobby	 passed pstrParamName into UpdateInput
    ; 27-Apr-2004   Shobby   Determines the default value for the particular type of year. (TR007562)
    ;-------------------------------------------------------------------------------
	;
	new strValue,strParamName
	
	set strValue=$get(pobjParam(pstrParamName))
	if strValue="" set strValue=" "
	if $get(^REPRepLookUp(0,pYUSER,pstrType,strValue,1))'=strValue {
		set strValue=pstrDefault
		if strValue="" set strValue=" "
		if $get(^REPRepLookUp(0,pYUSER,pstrType,strValue,1))'=strValue {
			set strValue=$order(^REPRepLookUp(0,pYUSER,pstrType,""),-1)
		}		
	}
	do UpdateInput(pstrReport,strValue,pstrParamName)
	quit strValue
 
 
UpdateInput(pstrReport,pstrValue,pstrParamName)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 11-May-2004	shobby	 3rd Parameter pstrParamName
    ; 27-Apr-2004   Shobby   Updates the input value if the default is not in the current selection. (TR007562)
    ;-------------------------------------------------------------------------------
	;
	new idxNumber,objREPRepInp
	
	set idxNumber=""
	for {
		set idxNumber=$order(^REPRepInp(0,pstrReport,idxNumber))
		quit:idxNumber=""
		set objREPRepInp=$get(^REPRepInp(0,pstrReport,idxNumber,1))
		if objREPRepInp'="" {
			if $$$REPRepInpCode(objREPRepInp)=pstrParamName {
				set ^REPDef(0,YBED,pstrReport,idxNumber)=pstrValue
				quit
			}
		}
	}
	quit
 
 
Period(User,Code,Period,Year)
	;------------------------------------------------------------------------------
	; History
	; 19-Nov-2003	shobby	Removed previous change.
	; 17-Nov-2003	shobby	Modified Key to ensure ordered by date.
	; 17-Nov-2003	shobby	Put a carriage return in after every sixth input control (TR006374 - well sort of)
	; 07-Jul-2003	shobby	Variables
	;------------------------------------------------------------------------------
	new List,Count,Rec,id
	new Key,Data
	
	kill ^REPRepLookUp(0,User,Code)
	set List=$$GetPeriodsForYear^FINGLPeriod(Period,Year)
	for Count=1:1:$listlength(List) {
		set id=+$listget(List,Count)
		set Rec=$get(^FINGLPeriod(0,id,1))
		set Key=id
		set Data=$$^WWWDATE($piece(Rec,Y,2))
		if Count#6=0 set Data=Data_"<BR>"
		set ^REPRepLookUp(0,User,Code,Key,1)=Data  ;<SCH>
	}
	quit
	
	
Year(User,Code,Period="")
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 13-Jul-2006	JW		SR14836: Index variable. Use it.
    ; 27-Apr-2004   Shobby   Use Period as a parameter to work out the Year. (TR007562)
    ;-------------------------------------------------------------------------------
	new Year,Count,strStatus,idxPeriodType
	
	kill ^REPRepLookUp(0,User,Code)
	
	set Count=0
	set strStatus=$$$OK
	if Period="" {
		for Year= +$zdate($horolog-30,3)+1:-1: +$zdate($horolog-30,3)-4 {
			set Count=Count+1
			set ^REPRepLookUp(0,User,Code,Year,1)=Year
		}
	} else {
		set idxPeriodType = $$$Index(Period)		// SR14836
		set Year=""
		for {
			quit:$$$ISERR(strStatus)
			set Year=$order(^FINGLPeriods(0,1,idxPeriodType,Year))	// SR14836
			quit:Year=""
			
			set strStatus = $$$Save("REPRepLookUp",User_","_Code_","_Year,Year,$$$YES)
		}
	}
	quit strStatus
	
	
PRC(Param)
	;-------------------------------------------------------------------------------
	; Forces the PeriodType to the first one.  Otherwise the periods will not match
	;
	; Returns:
	;
	; History:
	; 19-Nov-2003	shobby	Creation (TR006374)
	;-------------------------------------------------------------------------------
	set ^REPDef(0,YBED,"FINGLTB",2) = 1
	quit
	
	
DefaultYear()
	quit +$zdate($horolog-30,3)
	
DefaultPeriod()
	quit $$DefaultPeriod^FINGLPeriod()
	
]]></Routine>
</Export>