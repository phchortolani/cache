<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COM.fwk.util.NMUtil" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#define CustomerClassName            "AEPCustomer"
#define SupplierClassName            "AEPSupplier"
#define ProductClassName             "AEPProduct"
#define ProductPerSupplierClassName  "AEPProductPerSupplier"
#define ProductPerLocationClassName  "AEPProductPerLocation"
 
 
 ; 
 ; THIS ROUTINE WAS CREATED ONLY TOAVOID THE COM.fwk PACKAGE TO BE 
 ; DEPENDENT ON APPLICATION MODULES.
 ; 
 ; ALL METHODS SHOULD BE PUT INSIDE THE FRAMEWORK CLASSES.
 ; 
 ; Author: Tharsis Campos - Disclinc Brasil
 ; 
 
 
 ; Sets a Global @net Manager Variable
setGlobalVariable(name, value, setDirectVariable)
	;-------------------------------------------------------------------------------
	; Returns:
	;
	; History:
	; 22-Feb-2007	RPW		SR14900: If the %request object doesn't exist, quit.
	; 11-Jan-2006	Frank	SR14111 - Tools module exporting: Fixing routines 
	; 									  to make the Alphalinc Suite Builder work.
	;-------------------------------------------------------------------------------
 
	; setDirectVariable [IN] = If 1, sets the direct form of the variable.
	;                          Ex: set YKEYS=value; set YPARA="abc";
	
	// SR14900: Let's new some variables.
	new strxecute
	
	quit:$get(%request)=""       // SR14900  
	quit:'$isObject(%request)    ;SR14111
	
	set %(YQUERY, name) = value
	set %("VAR", name) = value
	
	if $data(%request) {
		set %request.Data(name) = value
	}
	
	if (+$get(setDirectVariable) = 1) {
		set value = ##class(COM.fwk.util.StringUtil).substituteString(value, """", """""") 
		set strxecute = "set " _ name _ "=""" _ value _ """"
		XECUTE strxecute
	}
	
	quit
	
	
 ; Create Manual (WWWMANU) URL
createNewManualLink(execCommand,form,keys,activeTabbedPageCode,returnForm)	
	new YFORM,YBACK,YKEY
    
    set YFORM = form
	set YKEY  = keys
	
	write YAKTION_"EP=WWWMANU&YEXEC="_execCommand_"&YFORM="_form
	if $get(activeTabbedPageCode)'="" write "&YSEITE="_activeTabbedPageCode
	;if $get(returnForm)'="" set YBACK=returnForm_","
	if $data(returnForm) {
		if $get(returnForm)'="" {
			set YBACK=$$getCorrectHistory(returnForm)
		} else {
			set YBACK=""
		}
	}
	do ^WWWCGI
	quit
	
 
getCorrectHistory(history)
	if (YFORM=$$getLastFormInHistory(history))                && 
	   ( (YFORM="AEPOfferSeller") || (YFORM="AEPOfferBuyer")) &&
	   ($get(YFKEY)="")                                          {
		
		quit $$getPreviousHistory(history)_","
		
	} elseif (YFORM=$$getLastFormInHistory(history))    &&
	         (  (YFORM="AEPReqWorkflowDocumentTrack")   ||
	            (YFORM="AEPPurchaseRequisition")        ||
	            (YFORM="AEPPurchaseRequisitionLine")  )    {
		quit $$getPreviousHistory(history)_","
	
	} else {
		quit $$getCurrentHistory(history)_","
	}
		
 
getLastFormInHistory(history)
	new lastForm
	
	; taking out the last comma present in all YBACKs, if there is any.
	if $extract(history,$length(history),$length(history))'="," {
		set lastForm=history
	} else {
		set lastForm=$extract(history,1,$length(history)-1)
	}
	
	set lastForm=$extract(lastForm,$$lastIndexOf(lastForm,",")+1,$length(lastForm))
 
	quit lastForm
 	
 ; *******    HISTORY NAVIGATION    *******
 
 ; This method should be used if you are recreating an entry form and want
 ; to keep the previous YBACK.
getPreviousHistory(currentYBACK)
	quit $extract(currentYBACK,1,$$lastIndexOf($extract(currentYBACK,1,$length(currentYBACK)-1),",")-1)
 
 ; This method should be used if you are recreating an form and want
 ; to keep the previous YBACK. It just remove the last comma.
 
getCurrentHistory(history)
	if $extract(history,$length(history),$length(history))'="," {
		quit history
	} else {
		quit $extract(history,1,$length(history)-1)
	} 
	
 
 ; Return the last index of the given caracter in the given String
 ; or 0 if the caracter was not found.
lastIndexOf(string,caracter)
	new loop,lastIndex
	
	set loop=1,lastIndex=0	
	for {
		quit:$extract(string,loop)=""
		if $extract(string,loop)=caracter {
			set lastIndex=loop
		}
		set loop=loop+1		
	}
	quit lastIndex
		
 
 // set useDifferentCall to call "*do "
formatRoutineCallForManualLink(routineCall, useDifferentCall)
	if +$get(useDifferentCall) {
		quit "*do "_routineCall
	} else {
		quit "do "_routineCall
	}		
 		
 		
 		
 ; *******    STREAM FUNCTIONS    *******
 
 new isOpen,io,stream,file
 
startRedirectStdout()
	quit:+$get(isOpen)=1
	set io=$io
	set stream=##class(%FileCharacterStream).%New()
	do stream.Write("") ; force stream's file to open
	set file=stream.Filename ; get filename and make current device
	use file
	set isOpen=1
	quit
 
stopRedirectStdout(buffer)
	quit:+$get(isOpen)=0
	new len
	close file
	use io
	set len=16000
	set buffer=""
	while 'stream.AtEnd {
		set buffer=buffer_stream.Read(.len)
	}
	set isOpen=0
	quit
 
 	
 ; *******    CGI LINKS    *******
 
 ; Create Save (WWWSAVE) URL
createNewSaveLink(form,keys,additionalParam,returnForm,returnKeys,isHelp)
	new YFORM,YBACK,YFKEY,YKEY
	
	set YFORM = form
	set YKEY  = keys   ; Create new record if YKEY is empty
	                   ; Open an existing record if YKEY is filled
	
	write YAKTION_"EP=WWWSAVE&YFORM="_form
	if $get(additionalParam)'="" write "&YAUSWAHL="_additionalParam
	if $data(returnKeys) {
		set YFKEY=returnKeys
	} else {
		set YFKEY=""
	}
	;if $get(returnForm)'="" set YBACK=returnForm_","
	if $data(returnForm) {
		if $get(returnForm)'="" {
			set YBACK=$$getCorrectHistory(returnForm)
		} else {
			set YBACK=""
		}
	}
	if +$get(isHelp) = 1 {
		write "&YOPEN=SAVEHELP"
	}
	
	do ^WWWCGI
	quit
 
 
 
 ; *******    CGI LINKS    *******
 
 ; Create Form (WWWFORM) URL
	//createNewFormLink(form,keys,additionalParam,returnForm,returnKeys)	//SR14178
createNewFormLink(form,keys,additionalParam,returnForm,returnKeys,param)
    ;-------------------------------------------------------------------------------
    ; 
    ;
    ; History:
    ; 
 	; 09-Oct-2007	Karine	BR014648: Check if back button is passing correct keys 
    ; 14-Mar-2006	hjrb	SR14178: added YPARA to link	
    ;-------------------------------------------------------------------------------
	;
	if 1 {
		new YFORM,YBACK,YFKEY,YPARAbkp
        set YFORM=form
        new YKEY
		set YKEY=keys   ; Create new record if YKEY is empty
		                ; Open an existing record if YKEY is filled
 
  		//SR14178
  		if ($data(param) '= 0) {
	 		set YPARAbkp=YPARA	
	 		set YPARA=param	
 		}
 
		write YAKTION_"EP=WWWFORM&YFORM="_form
		if $get(additionalParam)'="" write "&YAUSWAHL="_additionalParam
		if $data(returnKeys) {
			set YFKEY=returnKeys
		} else {
			set YFKEY=""
		}
		;if $get(returnForm)'="" set YBACK=returnForm_","
		if $data(returnForm) {
			if $get(returnForm)'="" {
				set YBACK=$$getCorrectHistory(returnForm)
			} else {
				set YBACK=""
			}
		}
		
		if YFKEY="" {  //BR014648 force to get parameters if returnKeys is empty
			set YFKEY=..getRequest().getFormParameter()
		}
		
		do ^WWWCGI
 
  		//SR14178
  		if ($data(param) '= 0) {
	 		set YPARA=YPARAbkp
 		}
 
 
	}
	quit
 
 
 ; Returns the local AEP class (or form) name associated
 ; with the external class (or form) name
getUrlMapAlternativeForm(form)
	quit:form="INKUNDE" ($$$CustomerClassName)
	quit:form="INLIEF" ($$$SupplierClassName)
	quit:form="INART" ($$$ProductClassName)
	quit:form="INARTK" ($$$ProductPerSupplierClassName)
	quit:form="INDRPITEM" ($$$ProductPerLocationClassName)
	quit form
 
 
 
 
 
 
 ; Begins a Table.
beginTable(is100PercentWidth)
	if is100PercentWidth=1 {
		do START100^WWWTAB
	} else {
		do START^WWWTAB
	}
	quit
 
 ; Ends a Table.
endTable()
	do STOP^WWWTAB
	quit
 
 
 ; Create Header Column
createHeaderColumn(columnWidth,cellAlignment,fieldName,withUpDownSortButtons,colSpan,rowSpan)
	new width
	set width="WIDTH="_+$get(columnWidth)
	if +$get(columnWidth)<0 set width=""
	write "<TH NOWRAP "_width_" BGCOLOR=darkgray "
	if +$get(colSpan) > 1 {
		write " COLSPAN="_+$get(colSpan)
	}
	if +$get(rowSpan) > 1 {
		write " ROWSPAN="_+$get(rowSpan)
	}
	write " ALIGN="_cellAlignment_">",!
	write "<FONT SIZE="_""""_$piece(YVOR,Y,7)_""""_">",!
	write " "
	write fieldName
	if withUpDownSortButtons=1 {
		do createUpDownSortButtons()
	}
	write " "
	write "</TH>",!
	quit
 
 
 ; Create Up and Down Buttons
createUpDownSortButtons()
    write "<A TITLE="_""""_$$getLanguageText("AEP00121")_""""_" HREF="_""""_""""_"> <IMG SRC="_""""_YGIF_"scrup.gif"_""""_" BORDER=0></A>"_
          "<A TITLE="_""""_$$getLanguageText("AEP00121")_""""_" HREF="_""""_""""_"> <IMG SRC="_""""_YGIF_"scrdown.gif"_""""_" BORDER=0></A>"
    quit
 
 
 
 ; Get Language Text
getLanguageText(textNumber)
	new languageText
	set languageText = $$^WWWTEXT(textNumber)
	set languageText = $$replaceFixedTextFromString(languageText,"&lt;","<")
	set languageText = $$replaceFixedTextFromString(languageText,"&gt;",">")
	quit languageText
 
 
 
 
replaceFixedTextFromString(string,textToFind,textToReplace)
	set length = $length(string,textToFind)
	set result = $piece(string,textToFind,1)
	new i
	for i=2:1:length {
		set result = result_textToReplace_$piece(string,textToFind,i)
	}
	quit result
	
	
 
 ; Create Form
createForm(form,keys,returnForm,param,aditionalParam,activeTabbedPageCode)
	if $get(form)'="" do setGlobalVariable("YFORM",form,1)
	if $get(keys)'="" do setGlobalVariable("YKEY",keys,1)
	;if $get(returnForm)'="" do setGlobalVariable("YBACK",returnForm_",",1)
	if $data(returnForm) {
		if $get(returnForm)'="" {
			do setGlobalVariable("YBACK",$$getCorrectHistory(returnForm),1)
		} else {
			do setGlobalVariable("YBACK","",1)
		}
	}
	if $get(param)'="" do setGlobalVariable("YPARA",param,1)
	if $get(aditionalParam)'="" do setGlobalVariable("YAUSWAHL",aditionalParam,1)
	if +$get(activeTabbedPageCode)'=0 {
		do setGlobalVariable("YSEITE",activeTabbedPageCode,1)
		set %request.Data("YOPEN")=2
	}
	do ^WWWFORM
	quit
 
 
 ; Formats Date to the Specific Language Default Format
getFormattedDate(date)
	quit $$^WWWDATE(date,SPRACHE)
	
]]></Routine>
</Export>