<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWIMPO" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWIMPO
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		IMPORT VON DATEIEN
	;
	;	SET VORG(1)   =IMPORTFILE ;table-mat 
	;	SET VORG(2)   =GLOBAL ;table-mat 
	;	SET VORG(3)   =LÖSCHEN DATEI 0/1                    / DELETE GLOBEL YES/NO ;table-mat data file 
	;	SET VORG(4)   =1.ZEILE = KLASSENDEF 0/1             / 1st ROW IS CLASS DEFINITION YES/NO ;table-mat 
	;	SET VORG(5)   =FELDNUMMER = PRIMÄRSCHL.  XX,XX,     / FIELD NO. OF PRIMARY KEY
	;	SET VORG(6)   =IMPORTTRENNER $C(XX)                 / DELIMITER OF IMPORT ;table-mat importation 
	;	SET VORG(7)   =DATEITRENNER  $C(XX)                 / DELIMITER OF FILE ;table-mat 
	;	SET VORG(8)   =CONVERT AFTER LOADING                / CONVERTIERUNG ;table-mat rump 
	;	SET VORG(9)   =FIST LINE = PROPERTIES 0/1           / PROPERTIES ;table-mat 
	;	SET VORG(10)  =TEXT ONLY                            / TEXT ;table-mat Text 
	;	SET VORG(11)  =SCRIPT							    / SCRIPT AS BATCH LIKE "COPY D:*.* C:/SUPPLIERS/PICTURES/1343/
	;	SET VORG(12)  = EXECUTE			    			    / EXECUTE FOR IMPORT
	;	SET VORG(13)  = PARAMETER FOR CONVERT			    / PARAMETER FOR CONVERT	
	;	SET VORG(14)  = FILE CONTAINS UNICODE/UTF-8 FORMATTED DATA	
	;	SET VORG(999) =1 = KEINE AUSGABE AUF BILDSCHIRM     / NO PRINT OF SCREEN ;table-mat no expenses upon monitor 
	;	DO ^WWWIMPO
	;
    ;	Called by : INPUT^WWWIN with VORG() =    
    ;		1		dir/file
    ; 		2		WWWOUT     => DATEI
    ; 		3		1
    ; 		4-13	""         (Doesn't execute SCRIPT, CONVERT or OPEN^WWWSTART)
    ; 		999		0
    ; 
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
    ; 16-Jan-2009	FIS			SR16304: Read Unicode with UTF-8 Translation Table
	; 14-Nov-2006	GRF			Doco; Dots; quits
	; 30-May-2005	RobertW		SR12056: Attempt at Performance Increase
	; 04-JUL-2005	INTRAPREND	SR11891 CHANGED THAT AFTER LOADING THE FILE, THE LAST
	;							RECORD WILL BE DELETED IF RECORD IS EMPTY (THIS ONLY
	;							HAPPENS ON A LINUX SYSTEM)
	; 30-JUN-2005	INTRAPREND	SR11891 CHANGED, THAT CREATING NEW CLASSES ARE NOT A
	; 							headquarters data file  
	; 01.10.1999	DT			(C) BY DITMAR TYBUSSEK
	;-------------------------------------------------------------------------------
	NEW DATEI,XSAT,TRENN,TRENN1,TRENN2,LW,ANZBL,LFNP,IMPO,IMPO1,IMPOX,HEADX,ENCODE
	
	DO SCRIPT
	DO IMPORT
	DO CONVERT
	IF $GET(VORG(999))'=1 DO OPEN^WWWSTART DO
	. IF $GET(YIMPORTPROT)'="" WRITE YIMPORTPROT,"<BR>"
	. WRITE $$^WWWTEXT(30013),"<BR>"                       ; "Transfer Finished"
	QUIT
	
SCRIPT ;EXECUTE SCRIPT
	IF $GET(VORG(12))'="" XECUTE VORG(12) ;TYBD;GEMIMPORT;17,11,2004
	QUIT:$GET(VORG(11))=""
	DO
	. NEW YOK,LINE,COMMAND
	. FOR LINE=1:1 SET COMMAND=$PIECE(VORG(11),"|",LINE) QUIT:$PIECE(VORG(11),"|",LINE,9999)=""  DO  
	. . SET YOK=$ZF(-1,""""_COMMAND_"""")  ;BATCH 
	. . ;WRITE COMMAND,"<BR>"
	
	QUIT
	
IMPORT
    ;-------------------------------------------------------------------------------
    ;	START IMPORT
    ; Reads a file into a global ; common function
    ;
    ; 
    ; Returns: Nothing
    ;
    ; History:
    ; 26-Feb-2007	RPW		SR14900: Use if and else if.
    ; 18-Jun-2005	SCR		SR12686: removed check for "*" & "**" in file, rely on
    ; 						eof check. This stopped upgrades from completing
    ;-------------------------------------------------------------------------------
	QUIT:VORG(1)=""  ;IMPORT DATEI ;importation data file 
	QUIT:$EXTRACT(VORG(1),$LENGTH(VORG(1)))="."
	QUIT:VORG(2)=""   ;GLOBAL
	
	SET YVON=1   ;LESEN AB ZEILE  ;read Confirm. 
	SET TRENN1=+VORG(6)   ;import trenner
	SET TRENN=TRENN1
	SET ENCODE=$PIECE($GET(^WWWENCODE(0,TRENN,1)),Y,1)  ;26971;TYBD;IMPORT MIT TRENNERUMWANDLUNG IN ENCODE;10,12,2004
	SET TRENN2=VORG(7)   ;interner trenner
	SET VORG(5)=$TRANSLATE(VORG(5),";",",")
	;IF +TRENN1=0 SET TRENN1=59 ;table-mat 
	IF +TRENN2=0 SET TRENN2=126                ; tilde
	SET TRENN1=$CHAR(TRENN1)
	SET TRENN2=$CHAR(TRENN2)
	SET Y8B1=$CHAR(132,129,148,225,142,154,153)
	SET Y8B2=$CHAR(228,252,246,223,196,220,214)            ; äüößÄÜÖ
	;SET VORG(2)=$TRANSLATE($$^WWWUMLAU(VORG(2),1)," ")
	SET VORG(2)=$TRANSLATE(VORG(2)," -,;:_#*+'ß?=)(&$§!")
	SET YDATA=$GET(^WWW001(0,VORG(2),1))
	SET YLANG=$PIECE(YDATA,Y,9)
	IF YLANG="" SET YLANG=32000
	IF VORG(3)="1" SET DATEI="^"_VORG(2)_"("_YM_")" KILL @DATEI   ;löschen alte werte ;redeem 
	SET LW=VORG(1)
	// SR14900: vvv
	IF VORG(5)="" {   ;kein primär ;not 
		SET DATEI="^"_VORG(2)_"("_YM_","_""""_""""_")"
		SET YVON=$ORDER(@DATEI,-1)+1
		SET DATEI="^"_VORG(2)_"("_YM_",YLFNID,1)"   ;BEC;27935;30.06.05;CHANGED TO SHARED FILE
	} else {
		SET YVON=1
		SET DATEI="^"_VORG(2)_"("_YM
		FOR YLFN=1:1 QUIT:$PIECE(VORG(5),",",YLFN)=""  SET DATEI=DATEI_",YLFN"_YLFN SET @("YLFN"_YLFN)=YLFN
		SET DATEI=DATEI_",1)"
	}
	// SR14900: ^^^
	
	;+++++++++++++++++++++++++++++++++++++++
	;  IMPLICIT DROP THROUGH
	;+++++++++++++++++++++++++++++++++++++++
	
DATEI
	IF $$^WWWFILECHECK(LW)'=1 DO FEHL QUIT     ;FILE DOES NOT EXIST    ;BEC;26599;16.11.04; 
	SET YBSZ=$$READ^WWWDEV(LW,+$GET(VORG(14)))  ;Open as Unicode/UTF-8 ;SR16304
	IF YBSZ="" DO FEHL QUIT
	
	;+++++++++++++++++++++++++++++++++++++++
	;  IMPLICIT DROP THROUGH
	;+++++++++++++++++++++++++++++++++++++++
	
DEV
	;-------------------------------------------------------------------------------
	; History :
	; 07-Jun-2010	GRF		SR17146: call "DD.MM.YYYY" wrapper for WWWDATE1
	; 23-Apr-2007	RPW		SR15501: Handle the extra line read via unix when using primary keys
	; 04-JUL-2005	INTRAPREND	SR11891 CHANGED THAT AFTER LOADING THE FILE, THE LAST
	;							RECORD WILL BE DELETED IF RECORD IS EMPTY (THIS ONLY
	;							HAPPENS ON A LINUX SYSTEM)
	; 30-JUN-2005	INTRAPREND	SR11891 CHANGED, THAT CREATING NEW CLASSES ARE NOT A
	; 							headquarters data file  
	;-------------------------------------------------------------------------------
	new objLastEntry,idLastEntry
	
	USE YBSZ
	
	SET YBSZ1=""  ;EXPORT XML BEI IMPORT ;XML next to importation 
	SET ANZBL=0   ;ANZAHL DER NICHT BELEGTEN DATENSÄTZE ;Number the Not 
	SET IMGL1=""  ;MERKER FÜR DEN KEY BEI GLOBALIMPORT ;to KEY next to 
	SET IMGL=0    ;IMPORT DATEI FLAGG (MSM format) ;importation data file 
	SET LFNP=1
	SET HEADX=""  ;HEADER UMGESETZT ""=NOCH NICHT 1=ANGEFANGEN 2=BEENDET
	SET XMLFILE=0   ;1 IS XML FILE
	SET YEOFILE=$ZUTIL(68,40,1) ;Calling $ZUTIL(68,40,1) eliminates the <ENDOFFILE> error for sequential files for the current process. Instead, when the end of a file is reached, the READ command returns a null string, the $ZPOS special variable is set to "" (the null string), and the $ZEOF special variable is set to 1. 
	
	;-----------------------------------------------------------------------------------------------------------
	;FOR YLFN=YVON:1 USE YBSZ READ SAT#YLANG:0 QUIT:$ZEOF=-1  S:'$TEST XSAT="EOF" QUIT:SAT="EOF"  DO  I SAT="" I $G(XSAT)="EOF" S ^TEST1="ENDE" Q
	FOR YLFN=YVON:1 USE YBSZ READ SAT#YLANG:0 QUIT:$ZEOF=-1  SET:'$TEST XSAT="EOF" QUIT:SAT="EOF"  DO  IF SAT="" IF $GET(XSAT)="EOF" QUIT  ;S ^TEST1="ENDE" Q    ;SR11891;SR11891INTRAPREND;30-JUNE-2005;TEST1 DELETED
	. ;IF IMGL=0 IF $TRANSLATE(SAT,$CHAR(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25)_" ")="" QUIT
	. set:VORG(5) YLFN1="" // SR15501
	. IF YLFN=1 IF $FIND(SAT,"(MSM format)") SET IMGL=1 QUIT  ;ist ein global ;is uni- 
	. IF YLFN=1 IF $FIND(SAT,"<?xml")!($FIND(SAT,"<BMECAT ")) DO 
	. . SET XMLFILE=1
	. . SET YBSZ1=$PIECE($GET(^WWW012(0,YM,1)),Y,98)_"XMLIMPORT"_$JOB_".XML"
	. . SET YBSZ1=$$^WWWDEV(YBSZ1)
	. ;
	. IF TRENN=59 IF $FIND(SAT,"&euro;") SET SAT=$$^WWWTRANSLATE(SAT,"&euro;","EURO")
	. IF TRENN=59 IF $FIND(SAT,"&EURO;") SET SAT=$$^WWWTRANSLATE(SAT,"&EURO;","EURO")
	. ;
	. ;IF XML
	. IF YBSZ1'="" DO  QUIT
	. . NEW SAT1,SAT2
	. . SET SAT2=SAT
	. . FOR  QUIT:$PIECE(SAT,"><",2,9999)=""  DO
	. . . SET SAT1=$PIECE(SAT,"><",1)_">"
	. . . SET SAT="<"_$PIECE(SAT,"><",2,9999)
	. . . SET NNX=$GET(NNX)+1
	. . . USE YBSZ1 WRITE SAT1,!   ;SPEICHERN ZWISCHENDATEI XML ;Save XML 
	. . ;
	. . IF SAT'="" USE YBSZ1 WRITE SAT,!
	. . SET SAT=SAT2
	. ;
	. IF IMGL=2 QUIT  ;ENDE MERKER GLOBAL-IMPORT ;termination 
	. ;
	. ;IF SIMPLE GLOBAL
	. IF IMGL=1 DO  QUIT   ;GLOBAL-IMPORT
	. . SET ANZBL=0  ;BEI IMPORT MAM ;next to importation 
	. . ;IF SAT="*" SET IMGL=2 QUIT 				;SR12686 Removed
	. . ;IF SAT="**" SET IMGL=2 SET ANZBL=21 QUIT	;SR12686 Removed
	. . IF YLFN=2 QUIT
	. . IF YLFN#2=1 SET IMGL1="" IF $EXTRACT(SAT)="^" SET IMGL1=SAT   ;SICHERN KEY ;safeguard KEY 
	. . IF YLFN#2=0 IF IMGL1'="" SET @IMGL1=SAT  ;SPEICHRN DATENSATZ  ;data record 
	. ;
	. ;DELETE "" AND RESET DELIMITER
	. SET IMPO=$TRANSLATE($EXTRACT(SAT,1,YLANG),TRENN1_"""",TRENN2)
	. IF $LENGTH(IMPO,"'")>2 SET IMPO=$TRANSLATE(IMPO,"'")  ;'TEXT'
	. DO TREN59
	. ;
	. ;CHECK FOR FIST IF FIRST LINE = DESCRIPTION ;top 
	. SET YCONTINUE=0
	. IF YLFN=1 IF VORG(4)=1 SET IMPOX=IMPO IF '$DATA(^WWW001(0,VORG(2),1)) DO  DO FIRST  ;WENN ERSTE ZEILE=DEVINITION ;when premier 
	. . SET IMPO1=IMPO
	. . READ SAT:0 QUIT:SAT=""
	. . SET IMPO=$TRANSLATE($EXTRACT(SAT,1,YLANG),TRENN1,TRENN2)
	. . SET YCONTINUE=1
	. ;
	. IF YLFN=1 IF VORG(4)=1 IF $GET(YCONTINUE)'=1 QUIT  ;TYBD;11,2,2004
	. ;
	. ;WENN PRIMÄRSCHL / INCL PRIM ;when PRIM 
	. SET (LFN1,LFN2,LFN3,LFN4,LFN5,LFN6,LFN7,LFN8,LFN9,LFN10)=" "
	. SET IMPO(1)=""   ;DATENZEILE
	. SET YI(9)=""
	. IF VORG(5)'="" FOR YI=1:1 SET YI(1)=$PIECE(IMPO,TRENN2,YI) QUIT:$PIECE(IMPO,TRENN2,YI,999)=""  DO
	. . SET YI(2)=$FIND(","_VORG(5)_",",","_YI_",")/2-1 
	. . IF YI(2)>0 DO  QUIT
	. . . NEW YFF
	. . . FOR YI(2)=1:1 SET YFF=$PIECE(VORG(5),",",YI(2)) QUIT:YFF=""  QUIT:$PIECE(VORG(5),",",YI(2))=YI
	. . . QUIT:YFF=""
	. . . SET @("YLFN"_YI(2))=$TRANSLATE(YI(1),",()%","    ")
	. . . IF $TRANSLATE(YI(1),","," ")="" SET @("YLFN"_YI(2))=" "
	. . . SET $PIECE(IMPO,TRENN2,YI)=""
	. . ;
	. . SET YI(9)=$GET(YI(9))+1
	. . SET $PIECE(IMPO(1),TRENN2,YI(9))=$PIECE(IMPO,TRENN2,YI)
	. . IF HEADX'=2 SET HEADX=1 IF VORG(4)=1 IF $GET(IMPOX)'="" SET $PIECE(IMPOX,TRENN2,YI(9))=$PIECE(IMPOX,TRENN2,YI) SET $PIECE(IMPOX,TRENN2,YI)=""
	. ;
	. IF HEADX=1 SET HEADX=2  ;HEADER NICHT MEHR UMSTELEN ;Not more 
	. ;
	. IF VORG(5)'="" SET IMPO=IMPO(1)  ;SET FIELDS=CONTENT ;table-mat 
	. ;
	. ;FESTE DATENFELD GRÖSSE OHNE TRENNZEICHEN ;data item without 
	. IF $ASCII(TRENN1)=0 DO  ;WENN FESTE LÄNGE ;when longitude 
	. . NEW IMPO1,YLFD3,YLFD4,MAX,ZWS
	. . SET MAX=0
	. . SET IMPO1=IMPO
	. . SET IMPO=""
	. . ;
	. . SET YLFD3=""
	. . FOR  SET YLFD3=$ORDER(^WWW003(0,VORG(2),YLFD3)) QUIT:YLFD3=""  DO
	. . . SET YLFD4=$PIECE($GET(^WWW003(0,VORG(2),YLFD3,1)),Y,4)
	. . . SET ZWS=$EXTRACT(IMPO1,MAX+1,MAX+YLFD4)
	. . . FOR  QUIT:$EXTRACT($REVERSE(ZWS))'=" "  SET ZWS=$REVERSE($EXTRACT($REVERSE(ZWS),2,9999))
	. . . SET $PIECE(IMPO,TRENN2,YLFD3)=ZWS
	. . . SET MAX=MAX+YLFD4
	. ;
	. ;WENN HEADER SORKEY ;when 
	. IF $GET(VORG(9))=1 IF $GET(IMPOX)'="" DO  ;UMSETZUNG ;transferral 
	. . NEW YI,YLFD3,YLFNX
	. . SET IMPO(1)=IMPO
	. . SET IMPO=""
	. . FOR YLFD3=1:1 SET ZWS=$PIECE(IMPO(1),TRENN2,YLFD3) QUIT:$PIECE(IMPO(1),TRENN2,YLFD3,9999)=""  IF ZWS'="" DO
	. . . ;
	. . . FOR  QUIT:$EXTRACT($REVERSE(ZWS))'=" "  SET ZWS=$REVERSE($EXTRACT($REVERSE(ZWS),2,9999))  ;TYBD;15,1,2005;SPACE AM ENDE
	. . . QUIT:ZWS=""  ;TYBD;SPACE?
	. . . SET YLFNX=$PIECE(IMPOX,TRENN2,YLFD3)
	. . . SET YLFD3X=YLFD3
	. . . DO   ;SUCHEN FELDZUGEHÖRIGKEIT ;seek 
	. . . . NEW YII,YQ,YQ1
	. . . . SET YQ=0   ;NICHT GEFUNDEN ;Not 
	. . . . DO
	. . . . . SET YLFNX(1)=""
	. . . . . FOR  SET YLFNX(1)=$ORDER(^WWW003(0,VORG(2),YLFNX(1))) QUIT:YLFNX(1)=""  DO  QUIT:YQ=1
	. . . . . . SET YLFNX(2)=$PIECE($GET(^WWW003(0,VORG(2),YLFNX(1),1)),Y,1)
	. . . . . . ;
	. . . . . . IF $EXTRACT(YLFNX(2),1,5)="_FREE" SET YLFNX(2)=$PIECE($GET(^WWW003(0,VORG(2),YLFNX(1),1)),Y,25)  ;SQL NAME WENN FREE;TYBD;3,1,2004
	. . . . . . ;IF $$^WWWUPER(YLFNX(2))=$$^WWWUPER(YLFNX) SET YLFD3X=YLFNX(1) SET YQ=1 DO  QUIT   ;GEFUNDEN;TYBD;
	. . . . . . IF $zconvert(YLFNX(2),"U")=$zconvert(YLFNX,"U") SET YLFD3X=YLFNX(1) SET YQ=1 DO  QUIT   ;GEFUNDEN;TYBD;
	. . . . . . . ;UMWANDELN PARAMETER ;transmute parameter 
	. . . . . . . SET YQ1=0
	. . . . . . . IF $PIECE($GET(^WWW003(0,VORG(2),YLFNX(1),1)),Y,8)'="" SET YLFNX(3)=$PIECE(^(1),Y,8) SET YLFNX(8)=$PIECE($TRANSLATE($PIECE(^(1),Y,10),";",","),",",1) DO
	. . . . . . . . SET YLFNX(4)="^"_YLFNX(3)_"("_""""_YM_""""
	. . . . . . . . IF $TRANSLATE($PIECE($GET(^WWW003(0,VORG(2),YLFNX(1),1)),Y,9)," ,")'="" SET YLFNX(4)=YLFNX(4)_","_$PIECE(^(1),Y,9)
	. . . . . . . . SET YLFNX(4)=YLFNX(4)_",YLFNX(5)"
	. . . . . . . . SET YLFNX(6)=YLFNX(4)_")"
	. . . . . . . . SET YLFNX(7)=YLFNX(4)_",1)"
	. . . . . . . . SET YLFNX(5)=""
	. . . . . . . . FOR  SET YLFNX(5)=$ORDER(@YLFNX(6)) QUIT:YLFNX(5)=""  DO  QUIT:YQ1=1
	. . . . . . . . . IF $PIECE($GET(@YLFNX(7)),Y,YLFNX(8))=$TRANSLATE(ZWS,"""") SET ZWS=YLFNX(5) SET YQ1=1
	. . . ;
	. . . ;IF ENCODE'="" IF $FIND(ZWS,ENCODE) SET ZWS=$$^WWWTRANSLATE(ZWS,ENCODE,TRENN)   ;26971;TYBD;IMPORT MIT TRENNER IM TRENNER;10,12,2004
	. . . SET $PIECE(IMPO,TRENN2,YLFD3X)=ZWS
	. ;
	. ;NEUAUFBAU IMPO
	. IF SPRACHE="DE" SET YLFD3="" FOR  SET YLFD3=$ORDER(^WWW003(0,VORG(2),YLFD3)) QUIT:YLFD3=""  DO
	. . SET YLFD4=$PIECE($GET(^WWW003(0,VORG(2),YLFD3,1)),Y,3)
	. . IF SPRACHE="DE" IF (YLFD4=8) || (YLFD4=4) SET $PIECE(IMPO,TRENN2,YLFD3)=$TRANSLATE($PIECE(IMPO,TRENN2,YLFD3),",",".")
	. . IF SPRACHE="DE" IF (YLFD4=1) DO    ; date as YYYYMMDD  ; FIXME - could be DDMMYYYY at 19th or 20th of month
	. . . IF '$FIND($PIECE(IMPO,TRENN2,YLFD3),".") && ($LENGTH($PIECE(IMPO,TRENN2,YLFD3))=8) DO
	. . . . IF ($EXTRACT($PIECE(IMPO,TRENN2,YLFD3),1,2)=19) || ($EXTRACT($PIECE(IMPO,TRENN2,YLFD3),1,2)=20) DO
	. . . . .;SET $PIECE(IMPO,TRENN2,YLFD3) = $$^WWWDATE1($PIECE(IMPO,TRENN2,YLFD3))  ;DATUMSFORMAT   ; SR17146
	. . . . . SET $PIECE(IMPO,TRENN2,YLFD3) = $$^WWWDATE1($PIECE(IMPO,TRENN2,YLFD3),"YYYYMMDD")  ;DATUMSFORMAT
	. . ; date as DD.MM.YYYY
	. .;IF SPRACHE="DE" IF YLFD4=1 IF $FIND($PIECE(IMPO,TRENN2,YLFD3),".") SET $PIECE(IMPO,TRENN2,YLFD3)=$$^WWWDATE1($PIECE(IMPO,TRENN2,YLFD3))  ;DATUMSFORMAT ; SR17146
	. . IF SPRACHE="DE" IF YLFD4=1 IF $FIND($PIECE(IMPO,TRENN2,YLFD3),".") SET $PIECE(IMPO,TRENN2,YLFD3)=$$DMY^WWWDATE1($PIECE(IMPO,TRENN2,YLFD3))  ;DATUMSFORMAT
	. . IF SPRACHE="DE" IF YLFD4=7 IF $FIND($PIECE(IMPO,TRENN2,YLFD3),":") SET $PIECE(IMPO,TRENN2,YLFD3)=$$^WWWTIME1($PIECE(IMPO,TRENN2,YLFD3))  ;DATUMSFORMAT
	. ;
	. IF ENCODE'="" IF TRENN'="" IF $FIND(IMPO,ENCODE) SET IMPO=$$^WWWTRANSLATE(IMPO,ENCODE,TRENN1)    ;26971;TYBD;IMPORT MIT TRENNER IM TRENNER;10,12,2004
	. SET IMPO=$TRANSLATE(IMPO,Y8B1_$CHAR(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),Y8B2)
	. ;
	. ;-------------------------------------
	. ; Save Imported Data into Global Record (e.g. ^WWWOUT)
	. ;   a) Recognised @netManager Class - Save through correct process
	. ;   b) Other Globals
	. ;-------------------------------------
	. ;
	. IF $DATA(^WWW001(0,VORG(2))) DO
	. . NEW YVOR,YFORM,YKEY,YII
	. . IF $DATA(^WWW120(0,VORG(2))) SET YFORM=VORG(2)
	. . SET YKEY=""
	. . quit:VORG(5)&&(YLFN1="") // SR15501
	. . FOR YII=1:1 QUIT:$GET(@("YLFN"_YII))=""  SET YKEY=YKEY_","_$TRANSLATE(@("YLFN"_YII),"(),%")
	. . SET YLFNID=$GET(YLFNID)+1    ;BEC/tybd;27935;SR11891;30.06.05;CHANGED TO SHARED FILE
	. . IF $EXTRACT(YKEY)="," SET YKEY=$EXTRACT(YKEY,2,999)
	. . IF YKEY'="" SET YOK=$$^WWWSPEI(VORG(2),YKEY,IMPO,1) QUIT
	. . SET @DATEI=IMPO
	. ;
	. IF '$DATA(^WWW001(0,VORG(2))) DO
	. . SET YLFNID=$GET(YLFNID)+1    ;BEC/tybd;27935;SR11891;30.06.05;CHANGED TO SHARED FILE
	. . SET @DATEI=IMPO
	
	
	if ($get(VORG(5))="") && ($get(VORG(2))'="") {
		set idLastEntry=""
		set idLastEntry=$order(@("^"_VORG(2)_"("""_YM_""",idLastEntry)"),-1)
		if idLastEntry'="" {
			set objLastEntry="^"_VORG(2)_"("""_YM_""","_idLastEntry_",1)"
			if $translate($get(@objLastEntry),$char($get(VORG(7))))="" kill @objLastEntry
		}
	}
	/*
	IF $GET(VORG(5))="" IF $GET(VORG(2))'="" DO    ;BEC;27935;SR11891;01.07.05
 	. NEW DATEI,YII
 	. SET DATEI="^"_VORG(2)_"("_""""_YM_""""_",YII)"
 	. SET YII=""
 	. SET YII=$ORDER(@DATEI,-1)
 	. IF YII'="" DO
 	. . SET DATEI(1)="^"_VORG(2)_"("_""""_YM_""""_","_YII_",1)"
 	. . IF $TRANSLATE($GET(@DATEI(1)),$CHAR($GET(VORG(7))))="" KILL @DATEI(1)
 	*/
 	
	CLOSE YBSZ   ;CLOSE IMPORT FILE ;importation 
	
	IF YBSZ1'="" {  ;CLOSE EXPORT XML TEMPFILE
		CLOSE YBSZ1
		//NEW YDATEI,YDTD
		//SET YDATEI=VORG(2)
		//SET YDTD=""  ;
		DO ^WWWXMLIN(,VORG(2),"")   ;IMPORT XMLFILE;MUSS COMPILETE KLASSE SEIN ;importation groovy its 
	}
	
	
	/*
	IF YBSZ1'="" DO  ;CLOSE EXPORT XML TEMPFILE
	. CLOSE YBSZ1
	. NEW YDATEI,YDTD
	. SET YDATEI=VORG(2)
	. SET YDTD=""  ;
	. DO ^WWWXMLIN(,YDATEI,YDTD)   ;IMPORT XMLFILE;MUSS COMPILETE KLASSE SEIN ;importation groovy its 
	*/
	
	QUIT
	
CONVERT  ;CONVERT FILE AND SORTKEY 
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;DO
	. NEW YDATEI
	. SET YDATEI=$GET(VORG(2))
	. NEW VORG
	. SET YQ=1
	. SET VORG(1)=YDATEI
	. DO ^WWWSORT   ;sortkey neu ;recent 
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	
	IF $GET(VORG(8))'="" IF $DATA(^WWWCONVERT(0,VORG(8))) DO ^WWWCONVERT(VORG(8),,$GET(VORG(13)))  ;TYBD;STARTEN CONVERTIERUNG NACH IMPORT ;launching within importation 
	QUIT
	
FEHL
	;-------------------------------------------------------------------------------
	;FEHLER AUF DISK ;shortcoming upon 
	;
	; History:
	; 27-Mar-2008	GRF		SR15647: Add a second's delay to ensure not being over-written
	;-------------------------------------------------------------------------------
	;IF $GET(VORG(999))'=1 DO OPEN^WWWSTART WRITE $$^WWWTEXT(191)
	IF $GET(VORG(999))=1 {
		SET ^WWWERROR(0,+$HOROLOG,$PIECE($HOROLOG,",",2),0,1)="Could not open File / Import /"_$GET(YBED) 
		hang 1       ; SR15647
	}
	IF $GET(VORG(999))'=1 DO   ;BEC;26599;15.11.04
	. WRITE "<BR>"
	. DO OPEN^WWWSTART 
	. WRITE "<FONT COLOR="_YRED_">"
	. WRITE $$^WWWTEXT(191)_": "
	. WRITE $GET(LW),"<br>"
	. WRITE $$^WWWTEXT(34012)     ;Datei existiert nicht
	. WRITE "</FONT>","<BR><BR>"
	
	SET ^WWWERROR(0,+$HOROLOG,$PIECE($HOROLOG,",",2),0,1)="Could not open File / Import /"_$GET(YBED)_"/"_$GET(LW) 
	hang 1       ; SR15647
	QUIT
	
FIRST ;ERSTE ZEILE = DATENSATZDEFINITION ;premier 
	NEW YI,YLANG
	
	;SET ^WWW001(0,VORG(2),1)=VORG(2)_Y_Y_1
	SET ^WWW001(0,VORG(2),1)=VORG(2)_Y_Y     ;_1    ;BEC;SR11891;SHARED FILE
	IF VORG(5)="" SET ^WWW002(0,VORG(2),1,1)=$$^WWWTEXT(30)_Y_$$^WWWTEXT(30)_Y_4_Y_6
	FOR YI=1:1 SET YI(1)=$PIECE(IMPO1,TRENN2,YI) QUIT:$PIECE(IMPO1,TRENN2,YI,999)=""  DO
	. SET YTYPE=6
	. SET YLANG=$LENGTH(YI(1))
	. SET YLANG=30
	. SET YPR=$PIECE(IMPO,TRENN2,YI)
	. IF +YPR'=0 SET YTYPE=4 SET YLANG=12
	. IF +YPR'=0 IF $LENGTH(YPR)=5 IF $EXTRACT(YPR,3)=":" SET YTYPE=7 SET YLANG=5
	. IF +YPR'=0 IF $LENGTH(YPR)'>12  IF $LENGTH(YPR,".")=2 IF +$PIECE(YPR,".",2)'=0 SET YTYPE=8 SET YLANG=12
	. IF +YPR'=0 IF $LENGTH(YPR)="10" IF $LENGTH(YPR,".")=3 SET YTYPE=1 SET YLANG=10    ; date as "DD.MM.YYYY"
	. IF YLANG>50 SET YTYPE=3
	. SET YI(2)=$FIND(","_VORG(5)_",",","_YI_",")/2-1
	. IF YI(2)>0 DO  QUIT
	. . NEW YFF
	. . FOR YI(2)=1:1 SET YFF=$PIECE(VORG(5),",",YI(2)) QUIT:YFF=""  QUIT:$PIECE(VORG(5),",",YI(2))=YI
	. . QUIT:YFF=""
	. . SET YI(1)=$TRANSLATE(YI(1),"""")
	. . SET ^WWW002(0,VORG(2),YI(2),1)=YI(1)_Y_YI(1)_Y_YTYPE_Y_YLANG_Y
	. ;
	. SET YI(1)=$TRANSLATE(YI(1),"""")
	. SET YI(9)=$GET(YI(9))+1
	. SET ^WWW003(0,VORG(2),YI(9),1)=YI(1)_Y_YI(1)_Y_YTYPE_Y_YLANG_Y
	
	QUIT
	
TREN59 ;
	NEW YFF
	
	SET TRENN3=""""
	FOR YFF=2:2 QUIT:$PIECE(IMPO,TRENN3,YFF,999)=""  SET $PIECE(IMPO,TRENN3,YFF)=$TRANSLATE($PIECE(IMPO,TRENN3,YFF),TRENN2," ")
	QUIT
	
]]></Routine>
</Export>