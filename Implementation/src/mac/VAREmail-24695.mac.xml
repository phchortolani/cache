<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VAREmail" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VAREmail
#include COMSYS

IsValidEmailAddress(pEmail)
	;-------------------------------------------------------------------------------
    ; Verifica se o endereço de e-mail é válido.
    ; Ps: foi feito só uma verificação básica. Mais pode ser incluído para aprimorá-la.
    ; 
    ; History:
    ; 17-Nov-2009	Gustavo Fiuza		Created
    ;-------------------------------------------------------------------------------
	//Validações Preliminares
	if pEmail = "" quit $$$NO
	if '$find(pEmail,"@") quit $$$NO  ;Verifica a existência de "@"
	if '$find(pEmail,".") quit $$$NO  ;Verifica a existência de "."
	//
 
	;Verifica se existem pelo menos 2 caracteres antes do @
	if $find(pEmail,"@") {
		if $length($piece(pEmail,"@",1)) < 2 {
			quit $$$NO
		}
	}
 
	quit $$$YES

EnviarEmail(pRemetente,pUser,pAssunto,pMensagem, pMensagemStream="")
	;-------------------------------------------------------------------------------
	;  03-May-2008  GustavoFiuza     Sends email using core methods.
	;-------------------------------------------------------------------------------
 
	new Message, strStatus, Assunto, EmailDestino, EmailOrigem, Remetente, User,
		Password
	
	set strStatus = $$$OK
	
	;Inicia o email	
	set Message = $$Allocate^WWWMAILS()
	set objUsuario   = $get(^WWW013(YM,pUser,1))
	set EmailDestino = $$$WWW013EMailAddress(objUsuario)
	set Destinatario = $$$WWW013Name(objUsuario)
	set EmailOrigem  = $piece($GET(^WWW012(0,YM,1)),Y,84)	;Nome do Usuário para E-Mail Automático
	
		
	;Cria a mensagem
	set intLine = 0
	set ^WWWSOR(Message,$increment(intLine)) = $$FullReplace^COMUtilStr(pMensagem,"|","<br>")
	
	;Envia o e-mail
  	set strStatus = $$VARPackageMail(Message,pAssunto,EmailDestino,Destinatario,EmailOrigem,pRemetente,"","",pMensagemStream)
	
	;Encerra o e-mail
	do Deallocate^WWWMAILS(Message)
 	
	quit strStatus

VARPackageMail(pidMessage,pstrSubject="",pstrRecipient,pstrDisplayTo="",pstrSender="",pstrDisplayFrom="",pidUser="",pstrPassword="",pMensagemStream="")
	;-------------------------------------------------------------------------------
	; History:
	;  05-Oct-2011	RGB		Added SSLConfig, retrieving it from TCIPIPEmailServer string, example: SSL:GMAIL//smtp.gmail.com
	;						The SSLConfig is GMAIL and the server is smtp.gmail.com
	;  03-May-2008  GFiuza  The only difference between this VAR version and the core 
	;  						is the commented line set strOffset = $$Offset(+$$$WWW012GMTOffsethour(objCompany)),
	;  						that has been replaced by set strOffset = 1.
	;  
	;  21-Mar-2007	GRF		SR15482: created from main and CACHE subroutines as new
	;  						entry point.
	;-------------------------------------------------------------------------------
	new objCompany,strDomain,strHost,strOffset,strStatus,strSMTPPort,strSSLConfig
	
	set strStatus  = $$$OK
	set objCompany = $get(^WWW012(0,YM,1))
	
	if (($get(pidMessage)="") && ('$IsObject(pMensagemStream))) set strStatus='$$$OK     ; TODO : error messages
	if $$$ISOK(strStatus) && '$data(^WWWSOR(pidMessage)) set strStatus='$$$OK
	if (($$$ISOK(strStatus)) && ($get(pidMessage)="")) if (pMensagemStream.SizeGet() = 0) set strStatus='$$$OK
	if $$$ISOK(strStatus) && ($get(pstrRecipient)="")    set strStatus='$$$OK
	//if $$$ISOK(strStatus) && (pstrSender="") {
	if $$$ISOK(strStatus) {
		set pidUser=$$$WWW012AutoEmailUsername(objCompany)
		set strSender = $$$WWW012AutoEmailUsername(objCompany)
		set pstrPassword= $$$WWW012AutoEmailPassword(objCompany)
	}
	if $$$ISOK(strStatus) {
		set strSMTPPort = $$$WWW012PortNumberSMTP(objCompany)
		set strHost     = $$$WWW012TCPIPEMailServer(objCompany)
		if strHost="" set strStatus=$$$NO
	}
	if $$$ISOK(strStatus) {
		;set strOffset = $$Offset(+$$$WWW012GMTOffsethour(objCompany))
		set strOffset = 1
		set strDomain = $$$WWW012EMailDomainName(objCompany)
		if $piece(pstrSender,"@",2)=""    set pstrSender    = $piece(pstrSender,"@",1)_"@"_strDomain
		if $piece(pstrRecipient,"@",2)="" set pstrRecipient = $piece(pstrRecipient,"@",1)_"@"_strDomain
		
		set strStatus = $$SMTPSend^WWWSMTP2(pidMessage,  strHost,         pstrSender,    pstrRecipient, pstrSubject,  strOffset,
			                                    strSMTPPort, pstrDisplayFrom, pstrDisplayTo, pidUser,       pstrPassword,  $$$YES, "", pMensagemStream)
	}
	quit strStatus

EnviarEmails(pYKEY="")
	if (pYKEY = "") quit
	
	kill ^debugEnviarEmail(YBED)
	set ^debugEnviarEmail(YBED,"BEGIN") = $ZDATETIME($H,4)
	
	new objEmail
	
	set objEmail=$get(^VAREmail(YM,pYKEY,1))
	
	new status,intLine,idMessage,vAttached
	new vSubject,vRecipient,vDisplayTo,vSender,vDisplayFrom,vUser,vPassword		
		
	set message = "<br>"_$piece(objEmail,Y,5)_"<br><br><br>"_$piece(objEmail,Y,14)
	set anexos = $piece(objEmail,Y,6)	
	set outrosAnexos = $piece(objEmail,Y,17)
	
	;Define as variáveis
	;De: Nome <e-mail>
	if $find($piece(objEmail,Y,1),"<") '= 0 {
		set Nome  = $piece($piece(objEmail,Y,1),"<",1)
		set email = $piece($piece(objEmail,Y,1),"<",2)
	}
	else {
		set Nome  = $piece($piece(objEmail,Y,1),"@",1)
		set email = $piece(objEmail,Y,1)
	}
	set vDisplayFrom = Nome
	set vSender      = 	$piece(email,">",1)
	;set $piece(objEmail,Y,2) = "xxx@gmail.com,yyy@gmail.com" //emails utilizados para testes
	;Para: Nome <e-mail>	
	set vList = $$getListPadronizada($piece(objEmail,Y,2))
	
	;Assunto:
	set vSubject     = $piece(objEmail,Y,4)	
	
	;Autenticação:
	set vUser        = $$$WWW012AutoEmailUsername($get(^WWW012(0,YM,1)))
	set vPassword    = $$$WWW012AutoEmailPassword($get(^WWW012(0,YM,1)))
	
	;Inicia o email
	set idMessage    = $$Allocate^WWWMAILS()
		
	;Cria a mensagem	
	set intLine = 0
	set ^WWWSOR(idMessage,$increment(intLine)) = $$FullReplace^COMUtilStr(message,"|","<br>")
			
	;Anexa arquivos
	new caminho
	set caminho = ""
	;set Repositorio = $get(^VAREmailTemp(YM,YUSER,"Repositorio"))
	set Repositorio = $piece(objEmail,Y,16)
	set Rconnected = 0
	
	set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"Repositorio") = Repositorio
	
	if (Repositorio = "") || (Repositorio = "Modelo") {
		
		//VARCEL	set caminho = $piece($get(^VARCELDIRETORIOS(YM,10,1)),Y,1)
		
	} elseif (Repositorio = "Jasper") {
				
		;set caminho = $piece($GET(^VARJasper(YM,YM,1)),Y,1)
		
		;Isso será feito de outra forma:
		;Toda vez que o caché inicializa, deve-se executar o comando abaixo para criar "R:" unidade mapeada da pasta de relatorios do celsomasrep.
		;Do CreateNetworkShares^VAREmail2()
		;set Rconnected = $$CreateNetworkShares^VAREmail2()		
		;set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"conectando R:") = Rconnected
		;Lucas 06/11/2008.
		
		;NOVO CAMINHO em \\celsomasrep
		//VARCEL	set caminho = $piece($get(^VARCELDIRETORIOS(YM,100,1)),Y,1)
		set caminho = $piece($GET(^VARJasper(YM,YM,1)),Y,1)
		set caminho = $translate(caminho,"/","\")
		if $EXTRACT(caminho,$LENGTH(caminho))'="\" {
			set caminho=caminho_"\"  
		}
		set caminho=caminho_"Compiled\"
		
	} elseif (Repositorio = "AnexosProcesso") {
		//VARCEL	set caminho = "$piece($get(^VARCELDIRETORIOS(YM,??,1)),Y,1)"
		set caminho = $translate(caminho,"/","\")
	}		
	
	if $EXTRACT(caminho,$LENGTH(caminho))'="\" {
		set caminho=caminho_"\"  
	}
	
	set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"caminho dos anexos") = caminho
 
	set i = 1
	while ($piece(anexos,"|",i) '= "") {		
		set ^WWWSOR(idMessage,$increment(intLine)) = "#attach "_caminho_$piece(anexos,"|",i)
		set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"anexos",i) = "#attach "_caminho_$piece(anexos,"|",i)
		set i = i + 1
	}
	set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"outrosAnexos") = outrosAnexos
	if (outrosAnexos '= ""){
		
		new outrosCaminho, diretorioPai
		
		set diretorioPai = $piece($get(^VARBRDiretorios(YM,$get(^VAREmailTemp(YM,YUSER,"Modulo")),1)),Y,4)
		if (diretorioPai '= "") {
			set outrosCaminho = $piece($get(^VARBRDiretorios(YM,diretorioPai,1)),Y,1)
		}
		
		if $EXTRACT(outrosCaminho,$LENGTH(outrosCaminho))'="\" {
			set outrosCaminho=outrosCaminho_"\"  
		}
		set outrosCaminho = outrosCaminho_$piece($get(^VARBRDiretorios(YM,$get(^VAREmailTemp(YM,YUSER,"Modulo")),1)),Y,1)
		if $EXTRACT(outrosCaminho,$LENGTH(outrosCaminho))'="\" {
			set outrosCaminho=outrosCaminho_"\"  
		}
		set outrosCaminho=outrosCaminho_pYKEY_"\"
		
		set j = 1
		
		while ($piece(outrosAnexos,",",j) '= "") {			
			set ^WWWSOR(idMessage,$increment(intLine)) = "#attach "_outrosCaminho_$piece(outrosAnexos,",",j)
			;set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"outrosAnexos",j) = "#attach "_outrosCaminho_$piece(outrosAnexos,",",j)
			set j = j + 1
		}	
		
	}
			
	;Prepara e envia o "email"
	;PackageMail(pidMessage,pstrSubject="",vList,pstrSender="",pstrDisplayFrom="",pidUser="",pstrPassword="")
	;set status = $$PackageMail(idMessage,vSubject,vList,vSender,vDisplayFrom,vUser,vPassword)			
	set status = $$PackageMailLista(idMessage,vSubject,vList,vSender,vDisplayFrom,vUser,vPassword)			
	
	set ^debugEnviarEmail(YBED,"END") = $ZDATETIME($H,4)
	if $$$ISERR(status) {
		do $system.OBJ.DisplayError(status)	
		if (YBED = "LUCAS") {
			set messagem = status
		} else {
			set messagem = "Não foi possível enviar o e-mail, tente novamente por favor."
		}
	}
	else {
		set $piece(objEmail,Y,9) = $H
		set $piece(objEmail,Y,10) = YBED
		;Insere os dados na Classe(Classe,Chave Primária,Valores,SempreSalvar)
		
		set strStatus = $$$Save("VAREmail",pYKEY,objEmail,1)
		
		if $$$ISOK(strStatus) {			
			set messagem = "e-mail enviado com sucesso."
			
			set ExecutarAposEnviar = ""
			set ExecutarAposEnviar = $piece(objEmail,Y,19)
			
			if ExecutarAposEnviar '= "" {
				XECUTE ExecutarAposEnviar
			}
			
			write "<script type='text/javascript'> "
			write "alert('"_messagem_"');"
			write "window.close();"
			write "</script> "
		}
	}
	
	;do RedirectForm^COMUtilForm("VAREmail",pYKEY,YBACK_","_"","","")
	
 	;Encerra o e-mail
	do Deallocate^WWWMAILS(idMessage)
		
	quit
		
PackageMailLista(pidMessage,pstrSubject="",vList,pstrSender="",pstrDisplayFrom="",pidUser="",pstrPassword="")
	new objCompany,strDomain,strHost,strOffset,strStatus,strSMTPPort
	
	set strStatus  = $$$OK
	set objCompany = $get(^WWW012(0,YM,1))
	set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"OK1") = strStatus
	if $get(pidMessage)=""                               set strStatus='$$$OK     ; TODO : error messages
	if $$$ISOK(strStatus) && '$data(^WWWSOR(pidMessage)) set strStatus='$$$OK
	if $$$ISOK(strStatus) && ($get(vList)="")    set strStatus='$$$OK
	if $$$ISOK(strStatus) && (pstrSender="") {
		set strSender = $$$WWW012AutoEmailUsername(objCompany)
	}
	set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"OK2") = strStatus
	if $$$ISOK(strStatus) {
		set strSMTPPort = $$$WWW012PortNumberSMTP(objCompany)
		set strHost     = $$$WWW012TCPIPEMailServer(objCompany)
		if strHost="" set strStatus=$$$NO
	}
	set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"OK5") = strStatus
	if $$$ISOK(strStatus) {
		set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"OK3") = strStatus
		set strOffset = $$Offset(+$$$WWW012GMTOffsethour(objCompany))
		set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"strOffset") = strOffset
		set strDomain = $$$WWW012EMailDomainName(objCompany)
		if $piece(pstrSender,"@",2)=""    set pstrSender    = $piece(pstrSender,"@",1)_"@"_strDomain		
		set strStatus = $$SMTPSendLista(pidMessage,  strHost,  pstrDisplayFrom, pstrSender, vList, pstrSubject,  strOffset,
		                                    strSMTPPort, pidUser,       pstrPassword,  $$$YES)
		set ^debugEMAIL(YBED,YUSER,$Zdatetime($H,4),"OK4") = strStatus
	}
	quit strStatus
	
Offset(pfltOffset)
	;-------------------------------------------------------------------------------
	; History:
	;  20-Mar-2007	GRF		SR15046: Created. Isolate Timezone calculation.
	;-------------------------------------------------------------------------------
	new strMin,strOffset
	
	set strOffset = "+"
	if pfltOffset<0 {
		set strOffset  = "-"
		set pfltOffset = -pfltOffset
	}
	set strMin     = pfltOffset#1*60
	set pfltOffset = pfltOffset\1
	if strMin=0     set strMin="00"
	if strMin#15'=0 set strMin="00"              ; only allow 0, 15, 30, 45 min
	
	set strOffset=strOffset_$extract(100+pfltOffset,2,3)_strMin
 
	quit strOffset
	
SMTPSendLista(REQUEST,SMTPDOMAIN="",DISPLAYFROM="",FROM="",EMAILLIST="",SUBJECT="",TIMEZONE="",SMTPPORT=25,USER="",PASS="",pblnHTML=$$$YES)
	;-------------------------------------------------------------------------------
	;
	; Inputs : 
	;	REQUEST			Array identifier		"MAILOUT"_YUSER
	;	SMTPDOMAIN		Host                    e.g. "mail.service.com"
	;	FROM			Sender                  e.g. "support@service.com"
	;	TO				Recipient               e.g. "user.name@customer.com"
	;	SUBJECT			E-mail Subject Line     e.g. "Server Alert"
	;	TIMEZONE		GMT                     from $$$WWW012GMTOffsethour()
	;	SMTPPORT		Port Number             from $$$WWW012PortNumberSMTP()
	;	DISPLAYFROM		Displayed Sender        e.g. "Support Centre"
	;	DISPLAYTO		Displayed Recipient     e.g. "John Smith"
	;	USER			User Name               Where mail requires authorisation (?)
	;	PASS			Password					ditto
	;	pblnHTML		Set output to HTML format (or plain text if NO)
	;	
	; ByRef :
	;	^WWWSOR(REQUEST,NUM)	contains text to be output
	;
	; Returns :
	;	send mail status
	;	
	; History :
	; 23-Mar-2007	GRF		SR15046: Don't write "<BR>" as new line in HTML - may be
	; 						passing a table structure - include in "text to array" routine.
	; 22-Mar-2007	GRF		SR15046: Restored BIGSEND and created SMTPSend from 
	; 						20-Mar-2007 version; adjust argument line and test REQUEST
	; 20-Mar-2007	GRF		SR15046: Change IsHTML flag; boolean macros; brace format;
	; 						initialise parameters instead of set/get; explicitly pass
	; 						REQUEST; allow choice of HTML or not; use %Library.File functions.
	;-------------------------------------------------------------------------------
	new auth,blnAttach,m,nestedm,NUM,strLine,s,status,strFile,strNewLine,strOldTR,strPath,strTR
	
	if $get(REQUEST)="" set status=$$$NO quit    ; FIXME : error handling <GRF>
	
	set $ztrap="^WWWERROR"
	do LOW^%PRIO
	if SMTPPORT="" set SMTPPORT=25               ; DEFAULT
	set strNewLine = $char(13,10)
	
	set s = ##class(%Net.SMTP).%New()
	set s.smtpserver = SMTPDOMAIN                ; SMTPHOST
	set s.port       = SMTPPORT
	set m = ##class(%Net.MailMessage).%New()
	
	if (USER'="") && (PASS'="") {
		set auth=##class(%Net.Authenticator).%New() ; use default authentication list
		set auth.UserName   = USER
		set auth.Password   = PASS
		set s.authenticator = auth
	}
	
	set m.From    = DISPLAYFROM_" <"_FROM_">"    ; FROM ADRESS
		
	set i = 1
	if ($$countEmailList(EMAILLIST) = i) {
		do m.To.Insert(EMAILLIST)        ; TO ADRESS
	} elseif ($$countEmailList(EMAILLIST) > i) {
		if ($piece($get(^VARSESEmailParametros(YM,1,1)),Y,2) '= ""){
			do m.To.Insert($piece($get(^VARSESEmailParametros(YM,1,1)),Y,2)) ; TO ADRESS
		}
		while ($piece(EMAILLIST,",",i) '= ""){
			set DISPLAYTO = $piece(EMAILLIST,",",i)
			set NAME = $piece(DISPLAYTO,"<",1)
			set ADDRESS = $piece(DISPLAYTO,"<",2)
			
			/*if ((i=1) && ($piece($get(^VARSESEmailParametros(YM,1,1)),Y,2)="")) {
				do m.To.Insert(NAME_" <"_ADDRESS)   ; BCC ADRESS
			} else {
				do m.Bcc.Insert(NAME_" <"_ADDRESS)   ; BCC ADRESS
			}*/
			do m.To.Insert(NAME_" <"_ADDRESS)
			
			set i = i +1
		}
	}
	;do m.Cc.Insert("admin"_" <"_"admin@disclinc.com>")   ; BCC ADRESS
	set m.Subject = SUBJECT                      ; MAILSUBJECT
	set m.Charset = "iso-8859-1"
	set m.IsHTML  = ''pblnHTML                   ; force boolean    ;SR15046
	
	if TIMEZONE'="" set s.timezone=TIMEZONE
	
	;Ajuste Lucas 20/02/2009 16:33
	set ErroAnexar = $$$OK
	;TEXT:/ATTACH IN ^WWWSOR(REQUEST)
	set blnAttach = $$$NO
	if REQUEST'="" {
		set NUM=""
		for {
			set NUM=$order(^WWWSOR(REQUEST,NUM))
			quit:NUM=""
			
			set strLine = $get(^WWWSOR(REQUEST,NUM))
			
			if $find(strLine,"#attach") {                                       ; #attach //server/dir1/.../dirN/filename
			;	NOTE: If this is \\server\share under unix, strPath will
			;	      be blank - doesn't support UNC in the code!
				set strPath   = $translate($PIECE(strLine,"#attach",2)," ")
				set strFile   = ##class(%Library.File).GetFilename(strPath)     ; filename
				set strPath   = ##class(%Library.File).GetDirectory(strPath)    ; //server/dir1/.../dirN/
			;	Third parameter - isBinary - not specified (attaching text file = $$$NO, pics?)   TODO : Test (#attbin?)
				set status    = m.AttachFile(strPath,strFile)
				if $$$ISOK(status) {
					set blnAttach = $$$YES
				} else {
					set blnAttach = $$$NO
					set ErroAnexar = "Erro ao anexar arquivo, o e-Mail não foi enviado."
					quit
				}
			} else {
				do m.TextData.Write(strLine)
				do m.TextData.Write(strNewLine)
			}
		}
	}
	
	; see INTERSYSTEMS example - attachment to message  This appears totally separate from previous attachment
	if blnAttach=$$$YES {
		set nestedm = m.AttachNewMessage()
	;	set status=nestedm.AttachFile("c:\cachesys\bin","test.bin")
	} /*else {
		if '$$$ISOK(ErroAnexar) {
			quit ErroAnexar
		}		
	}*/
 	
 	// Andre, 03/12/2009: Only sends email if host is actual SESDF production environment:
 	/*if ( $piece( $zu(131,1), ",", 1) = "MATERIAL:10.85.3.184" ) {
		set status = s.Send(m)                         ; SEND MAIL
 	}*/
 	set status = s.Send(m)                         ; SEND MAIL
	do NORMAL^%PRIO
	
	quit status
	
countEmailList(list)
	new count
	
	set count = 0
	while ($piece(list,",",count+1) '= ""){
		set count = count + 1
	}
 
	quit count
	
PodeEnviar(pYKEY,pYFELD) 
	;-------------------------------------------------------------------------------
	; Testa se esse email pode ser enviado (ou já foi)
	; 
	; do PodeEnviar^VAREmail(YKEY,YFELD)
	;-------------------------------------------------------------------------------
	quit:$$$NoKey(pYKEY) '$$$OK
	
	new strStatus, EnviadoEm, ListaCampos
	
	set strStatus = $$$OK
	set EnviadoEm = $piece(pYFELD,Y,9)
	
    if (EnviadoEm '= ""){
    	set strStatus = $$$NO	
    	set strStatus = $listbuild("Esse e-mail já foi enviado."_$CHAR(13,10)_" Utilize a opção Encaminhar E-mail para enviá-lo novamente!")
    }
    else
    {
		;Verifica se os campos obrigatórios estão preenchidos
	
		set ListaCampos = ""
			
		;Campo De
		if $piece(pYFELD,Y,1) = "" {
			set ListaCampos = "  - De"	
		}
		;Campo Para
		if $piece(pYFELD,Y,2) = "" {
			set ListaCampos = ListaCampos_$CHAR(13,10)_"  - Para"	
		}
		;Campo Assunto
		if $piece(pYFELD,Y,4) = "" {
			set ListaCampos = ListaCampos_$CHAR(13,10)_"  - Assunto"	
		}
		;Campo Mensagem
		if $piece(pYFELD,Y,5) = "" {
			set ListaCampos = ListaCampos_$CHAR(13,10)_"  - Mensagem"	
		}		
		;Campo Assinatura
		if $piece(pYFELD,Y,14) = "" {
			set ListaCampos = ListaCampos_$CHAR(13,10)_"  - Assinatura"	
		}
 
		if ListaCampos '= "" {
			set strStatus = $$$NO	
			set strStatus = $listbuild("Preencha os Campos Obrigatórios que estão faltando"_$CHAR(13,10)_" e salve seu registro para poder enviar o e-mail!"_$CHAR(13,10)_" Campos que ainda não foram preenchidos:"_$CHAR(13,10)_ListaCampos)
		}
 
    }
 
	if $$$ISOK(strStatus) {
		set YQ=$$$QSave
	} else {
		set YQ=$$$QDontSave_" "_$$$Text(strStatus)
	}
	 	
	quit strStatus
	
CriaRegistroEmailJasper(codEmail="",pstrDe="",pstrPara="",pstrAssunto="",pstrMensagem="",pstrAnexos="",
						pstrCodModulo="",pstrCodRegistro="",pstrProcedencia="",pstrAssinatura="",pstrRepositorio="",
						pidDestinatarios="",pblnExecutarAposEnviar="")
	;O parametro é uma var por referencia, caso queira o codigo do email gerado
	;Do CriaRegistroEmailJasper^VAREmail()
		
	new objEmail,ProximoReg	
	set objEmail=""			
	
	set $piece(objEmail,Y,1)  = pstrDe
	set $piece(objEmail,Y,2)  = pstrPara
	set $piece(objEmail,Y,4)  = pstrAssunto
	set $piece(objEmail,Y,5)  = pstrMensagem
	set $piece(objEmail,Y,6)  = pstrAnexos
	set $piece(objEmail,Y,11) = pstrCodModulo
	set $piece(objEmail,Y,12) = pstrCodRegistro
	set $piece(objEmail,Y,13) = pstrProcedencia
	set $piece(objEmail,Y,14) = pstrAssinatura
	set $piece(objEmail,Y,16) = pstrRepositorio
	set $piece(objEmail,Y,18) = pidDestinatarios
	set $piece(objEmail,Y,19) = pblnExecutarAposEnviar
	
	;Pega próximo número do Email
	set ProximoReg = $$^WWWNEXT("VAREmail")	
			
	;Insere os dados na Classe(Classe,Chave Primária,Valores,SempreSalvar)
	do ^WWWSPEI("VAREmail",ProximoReg,objEmail,1)	
			
	set codEmail = ProximoReg	
	
	quit
	
openPopUpEmail(codEmail)
	set URL = YAKTION_"EP=WWWFORM&amp;YFORM=VAREmail&amp;YUCI="_YUCI_"&amp;YBED="_YBED_"&amp;YM="_YM_"&amp;YUSER="_YUSER_"&amp;YKEY="_codEmail
	
	&js<
		window.open("#(URL)#","EmailPopup","HEIGHT=690,WIDTH=720,LEFT=0,TOP=0,SCROLLBARS=YES,RESIZEABLE=YES");
		>
	
	quit
	
getListPadronizada(pList)
	
	new list,listAUX,i,vList,Nome,email,vDisplayTo,vRecipient
	
	;Retirar "enter"
	set listAUX  = $$FullReplace^COMUtilStr(pList,"|","")
	;substituir ";" por ","
	set list  = $$FullReplace^COMUtilStr(listAUX,";",",")
		
	set i = 1
	set vList = ""
	while ($piece(list,",",i) '= "") {
		if $find($piece(list,",",i),"<") '= 0 {
			set Nome  = $piece($piece(list,",",i),"<",1)
			set email = $translate($piece($piece(list,",",i),"<",2)," ","") 
		}
		else{
			set Nome  = $piece($piece(list,",",i),"@",1)
			set email = $translate($piece(list,",",i)," ","")
		}
		set vDisplayTo   = Nome
		set vRecipient   = $piece(email,">",1)
		set vList = vList_vDisplayTo_" <"_vRecipient_">,"
		
		set i = i + 1
	}
	
	quit vList
	
setPara(pYKEY,pYLFELD)
	;Do setPara^VAREmail(YKEY,YFELD)
 
	if ($piece(pYLFELD,Y,2)="") quit	
		
	;Retirar "enter"
	set listAUX  = $$FullReplace^COMUtilStr($piece(pYLFELD,Y,2),"|",",")
	;substituir ";" por ","
	set list  = $$FullReplace^COMUtilStr(listAUX,";",",")
	
	do PopulateDataField^COMUtils("VAREmail",2,list)
	
	quit

EnviaEmailContratos(pRemetente,pUser,pAssunto,pMensagem)
	;-------------------------------------------------------------------------------
	;  03-May-2008  GustavoFiuza     Sends email using core methods.
	;-------------------------------------------------------------------------------
 
	new pidMessage, status, Assunto, EmailDestino, EmailOrigem, Remetente, User,
		Password, message
	
	;Inicia o email		
	set pidMessage = $$Allocate^WWWMAILS()
 
 	;Definindo o Remetente
	if pRemetente = "GerenciaDeContratos" {
		set Remetente 	= "Coordenação de Contratos"
		set EmailOrigem = $piece($get(^VARContratoParametrosEmail(YM,YM,1)),Y,1)
	
	} elseif pRemetente = "GerenciaDeConvenios" {
		set Remetente 	= "Coordenação de Convênios"
		set EmailOrigem = $piece($get(^VARContratoParametrosEmail(YM,YM,1)),Y,3)	
	
	} else {
		set Remetente   = $piece($get(^WWW013(YM,pRemetente,1)),Y,1)
		set EmailOrigem = $piece($get(^WWW013(YM,pRemetente,1)),Y,9)
	}
	
	;Definindo o Destinatário	
	if pUser = "GerenciaDeContratos" {
		set Destinatario = "Coordenação de Contratos"
		set EmailDestino = $piece($get(^VARContratoParametrosEmail(YM,YM,1)),Y,1)
	
	} elseif pUser = "GerenciaDeConvenios" {
		set Destinatario = "Coordenação de Convênios"
		set EmailDestino = $piece($get(^VARContratoParametrosEmail(YM,YM,1)),Y,3)
	
	} else {	
		set Destinatario = $piece($get(^VARContratoExecutorCad(YM,pUser,1)),Y,1)	
		set EmailDestino = $piece($get(^VARContratoExecutorCad(YM,pUser,1)),Y,3)
 
		//Caso não encontre nome para o usuário, vai buscar no cadastro de usuários
		if Destinatario = "" {
			set Destinatario = $piece($get(^WWW013(YM,pUser,1)),Y,1)
		}
		//Caso não encontre e-mail para o usuário, vai buscar no cadastro de usuários
		if EmailDestino = "" {
			set EmailDestino = $piece($get(^WWW013(YM,pUser,1)),Y,9)
		}
	}
	
	;Validando o email de destino
	if EmailDestino = "" {	
		quit "O email não foi enviado para "_Destinatario_". Motivo: endereço de email inexistente."
	} 
	elseif $$IsValidEmailAddress(EmailDestino) = $$$NO {	
		quit "O email não foi enviado para "_Destinatario_". Motivo: endereço de email inválido."
	}
		
	;Conteúdo do email
	set Assunto = pAssunto
	set message = pMensagem
		
	;Cria a mensagem
	set intLine = 0
	set ^WWWSOR(pidMessage,$increment(intLine)) = $$FullReplace^COMUtilStr(message,"|","<br>")
	
	;Envia o e-mail
  	set status = $$VARPackageMail(pidMessage,Assunto,EmailDestino,Destinatario,EmailOrigem,Remetente)
	
	;Encerra o e-mail
	do Deallocate^WWWMAILS(pidMessage)	
 
	quit status
]]></Routine>
</Export>