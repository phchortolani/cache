<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMCustomisation" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMCustomisation
#include %occInclude
#include COMSYS
	
Start()
	;-------------------------------------------------------------------------------
	; Start Colection of Customizations to be saved for a module
	; 
	; This is run from the command line in the namespace that contains the custom data
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new idClass,idConfig,strCmd
	
	do ^WWWVAR
	do SetUp()
	set idConfig=$$GetCurrentConfig()
	write "Current Config: "_idConfig,!
	do Cmd(.strCmd)
	quit
	
	
Cmd(&pstrCmd)
	;-------------------------------------------------------------------------------
	; Read and process a command
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new blnCont,idClass,intPage,strCmd
	
	set blnCont=$$$OK
	set intPage=1
	do {
		set idClass=$$GetCurrentClass()
		write !,"Current Class: ",idClass
		read !,"Cmd (l,q,c,i,e,u,d,f,p,m,g,?) :",*strCmd
		set strCmd=$char(strCmd)
		if strCmd="q" {
			set blnCont=$$$NO
		}
		if strCmd="?" {
			write "Enter Command from the following",!
			write "l = List a page of data",!
			write "q = quit process",!
			write "c = change class",!
			write "i = include data records from the class",!
			write "e = exclude data records from the class",!
			write "u = page up, display data for the previous page",!
			write "d = page down, display data for the next page",!
			write "f = form compare",!
			write "p = include INPARA",!
			write "m = include Menu",!
			write "g = generate rountine",!
			write "     Note include & exclude can be for a single record",!
			write "     or a range of records IE 10-20",! 
		}
		if (strCmd="l") || (strCmd="u") || (strCmd="d") {
			if (strCmd="u") && (intPage>1) {
				set intPage=intPage-1
			} 
			if (strCmd="d") {
				set intPage=intPage+1
			}
			do List(.intPage)
		}
		if strCmd="c" {
			do GetCurrentClass($$$YES)
			set intPage=1
		}
		if (strCmd="i") || (strCmd="e") { ; Include nodes
			do ListChange(strCmd)
		}
		if strCmd="f" {
			do FormCompare()
		;	do FormCompare^COMCustomisationForm()     ; TODO
		}
		if strCmd="p" {
			do Para()
		}
		if strCmd="m" {
			do Menu()
		}
		if strCmd="g" {
			do Generate()
		}
	} while (blnCont)
	
	quit
	
Menu()
	;-------------------------------------------------------------------------------
	; Method Add/Edit Menus WWW004
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 25-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new blnQuit,idConfig,strPrefix,strCmd
	
	set blnQuit=$$$NO
	set idConfig=$$GetCurrentConfig()
	set strPrefix="" 
	do {
		write !,"Existing Menu Prefixes"
		for {
			set strPrefix=$order(^VARCustom("Config",idConfig,"Menu",strPrefix))
			quit:strPrefix=""
			write !,strPrefix
		}
		write !,"Enter i to insert, r to remove, l to list, q to quit",!
		read "Command: ",strCmd
		if strCmd="q" {
			set blnQuit=$$$YES
		}
		if (strCmd="i") || (strCmd="r") {
			read " Prefix: ",strPrefix
			if strPrefix'="" {
				if strCmd="i" {
					set ^VARCustom("Config",idConfig,"Menu",strPrefix)=""
				} 
				if strCmd="r" {
					kill ^VARCustom("Config",idConfig,"Menu",strPrefix)
				} 
			}
		}
		if strCmd="l" {
			do MenuList(1)
		}
	} while (blnQuit=$$$NO)
	
	quit
	
	
MenuList(pblnVerbose=$$$YES)
	;-------------------------------------------------------------------------------
	; List INPARA
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 25-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new blnQuit,idConfig,idLang,idPara,strCmd,strGlo,strPrefix
	
	set blnQuit   = $$$NO
	set idConfig  = $$GetCurrentConfig()
	set strPrefix = "" 
	kill ^VARCustom("Config",idConfig,"Class","WWW004")
	for {
		set strPrefix=$order(^VARCustom("Config",idConfig,"Menu",strPrefix))
		quit:strPrefix=""
		
		set strGlo="^WWW004(0,"""_strPrefix_""")"
		for {
			set strGlo=$query(@strGlo)
			set idPara=$qsubscript(strGlo,2)
			set idLang=$qsubscript(strGlo,3)
			quit:$extract(idPara,1,$length(strPrefix))'=strPrefix
			
			write:pblnVerbose !,idPara," ",idLang," ",@strGlo
			set ^VARCustom("Config",idConfig,"Class","WWW004","Include",strGlo)=@strGlo
		}
	}
	quit
	
	
Para()
	;-------------------------------------------------------------------------------
	; Add/Edit INPARA
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 25-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new blnQuit,idConfig,strPrefix,strCmd
	
	set blnQuit=$$$NO
	set idConfig=$$GetCurrentConfig()
	set strPrefix="" 
	do {
		write !,"Existing INPARA Prefixes"
		for {
			set strPrefix=$order(^VARCustom("Config",idConfig,"Para",strPrefix))
			quit:strPrefix=""
			
			write !,strPrefix
		}
		write !,"Enter i to insert, r to remove, l to list, q to quit",!
		read "Command: ",strCmd
		if strCmd="q" {
			set blnQuit=$$$YES
		}
		if (strCmd="i") || (strCmd="r") {
			read " Prefix: ",strPrefix
			if strPrefix'="" {
				if strCmd="i" {
					set ^VARCustom("Config",idConfig,"Para",strPrefix)=""
				} 
				if strCmd="r" {
					kill ^VARCustom("Config",idConfig,"Para",strPrefix)
				} 
			}
		}
		if strCmd="l" {
			do ParaList(1)
		}
	} while (blnQuit=$$$NO)
	
	quit
	
ParaList(pblnVerbose=1)
	;-------------------------------------------------------------------------------
	; List INPARA
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 25-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new blnQuit,idConfig,strPrefix,strCmd,strGlo,idPara,idLang
	
	set blnQuit=$$$NO
	set idConfig=$$GetCurrentConfig()
	kill ^VARCustom("Config",idConfig,"Class","INPARA")
	
	set strPrefix="" 
	for {
		set strPrefix=$order(^VARCustom("Config",idConfig,"Para",strPrefix))
		quit:strPrefix=""
		
		set strGlo="^INPARA(0,"""_strPrefix_""")"
		for {
			set strGlo=$query(@strGlo)
			set idPara=$qsubscript(strGlo,2)
			set idLang=$qsubscript(strGlo,3)
			quit:$extract(idPara,1,$length(strPrefix))'=strPrefix
			
			write:pblnVerbose !,idPara," ",idLang," ",@strGlo
			set ^VARCustom("Config",idConfig,"Class","INPARA","Include",strGlo)=@strGlo
		}
	}
	quit
	
	
FormCompare()	; TODO : split form processing to COMCustomisationForm()
	;-------------------------------------------------------------------------------
	; Form compare across namespaces
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new arrNS,intNS,strNS,idForm,idLine,idTab,idButton,objForm,objLine,objTab,objButton
	new intClass,lstClass,strGlo,strNew,strKey,intKey,idClass,strLast,strLocal,strCompare
	new strTempKey
	
	set arrNS(2)=$$GetCompareNS()
	set arrNS(1)=$ZNSPACE
	
	set strLast=$horolog
	
	kill ^VARCustom("Compare","Forms")
	kill ^VARCustom("Log","Forms")
	
	for intNS=1,2 {
		set strNS=arrNS(intNS)
		set lstClass=$get(^VARCustom("Sys","FormDef"))
		for intClass=1:1:$length(lstClass,",") {
			set idClass="WWW"_$piece(lstClass,",",intClass)
			set strGlo="^["""_strNS_"""]"_idClass
			for {
				set strGlo=$query(@strGlo)
				quit:strGlo=""
				continue:$extract($qsubscript(strGlo,2),1,2)'="IN"
				
				set idForm=$qsubscript(strGlo,2)
				set strNew="^VARCustom(""Compare"",""Forms"","""_idForm_""","""
				set strKey=""
				for intKey=3:1:$qlength(strGlo)-1 {
					set strKey=strKey_$qsubscript(strGlo,intKey)_","
				}
				set strNew=strNew_strKey_idClass_""","""_strNS_""")"
				set @strNew=@strGlo
				if strLast'=$horolog {
					write strGlo,!
					set strLast=$horolog
				}
			}
		}
	}
	
	set idForm=""
	for {
		set idForm=$order(^VARCustom("Compare","Forms",idForm))
		quit:idForm=""
 
		set strKey     = "WWW120"
		set strLocal   = $get(^VARCustom("Compare","Forms",idForm,strKey,arrNS(1)))
		set strCompare = $get(^VARCustom("Compare","Forms",idForm,strKey,arrNS(2)))
		if (strLocal="")&&(strCompare="") {
			continue
		}
		if strLocal="" {
			do FormLog(idForm,strKey,"",0,"New Form in "_arrNS(2)_" ["_strCompare_"]")
			continue
		}
		if strCompare="" {
			do FormLog(idForm,strKey,"",0,"New Form in "_arrNS(1)_" ["_strLocal_"]")
			continue
		}
		
		set strKey=""
		for {
			set strKey=$order(^VARCustom("Compare","Forms",idForm,strKey))
			quit:strKey=""
			
			set idClass    = $piece(strKey,",",$length(strKey,","))
			set strLocal   = $get(^VARCustom("Compare","Forms",idForm,strKey,arrNS(1)))
			set strCompare = $get(^VARCustom("Compare","Forms",idForm,strKey,arrNS(2)))
			if strLocal'=strCompare {
				set strTempKey=$piece(strKey,",",1,$length(strKey,",")-1)
					if strTempKey=idClass {
						set strTempKey=""
				}
				if strLocal="" {
					do FormLog(idForm,idClass,strTempKey,0,"New Class in "_arrNS(2)_" ["_strCompare_"]")
					if (idClass="WWW124") && ($piece(strCompare,Y,68)'=1) {
						do LoadFormButtonCustom(idForm,strKey,strCompare)
					}
					continue
				}
				if strCompare="" {
					do FormLog(idForm,idClass,strTempKey,0,"New Class in "_arrNS(1)_" ["_strLocal_"]")
					continue
				}
				do FormCompareDetail(idForm,idClass,strKey,strLocal,strCompare)
			}
		}
	}
	quit
 
LoadFormButtonCustom(pidForm,pstrKey,pobjButton)
	;-------------------------------------------------------------------------------
	; Load button from the compare namespace to the current namespace WWW124 -> WWW124D
	;
	; Params:	pidForm		= Form  IE INART
	; 			pstrKey		= Extra keys IE 23 for data field
	; 			pstrC
	; 			pstrMsg		= Message text
	;
	; Returns:
	;
	; History:
	; 24-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new idLang,idButt,strInput,objExistingButton,strNewKey
	
	write !,"New Button compare name space"
	write !,"Key = ",pstrKey," Data = ",pobjButton
	write !,"Exiting Form Buttons for from ",pidForm
	set idLang=""
	for {
		set idLang=$order(^WWW124(0,pidForm,idLang))
		quit:idLang=""
		
		set idButt=""
		for {
			set idButt=$order(^WWW124(0,pidForm,idLang,idButt))
			quit:idButt=""
			
			set objExistingButton=$get(^WWW124(0,pidForm,idLang,idButt,1))
			write !,"Lang: ",idLang," id: ",idButt," Obj: ",objExistingButton
		}
	}
	
	write !,"Exiting Form Custom Buttons for from ",pidForm
	set idLang=""
	for {
		set idLang=$order(^WWW124D(0,pidForm,idLang))
		quit:idLang=""
		
		set idButt=""
		for {
			set idButt=$order(^WWW124D(0,pidForm,idLang,idButt))
			quit:idButt=""
			
			set objExistingButton=$get(^WWW124D(0,pidForm,idLang,idButt,1))
			write !,"Lang: ",idLang," id: ",idButt," Obj: ",objExistingButton
		}
	}
	
	read !,"Add ? ",strInput			;<FIXME> what if input "yes"? <DWR>
	if strInput="y" {
		set idLang = $$$KEY1(pstrKey)
		set idButt = $order(^WWW124D(0,pidForm,idLang,""),-1)+1
		set strNewKey=pidForm_","_idLang_","_idButt
		if $$$Save("WWW124D",strNewKey,pobjButton,$$$YES)
	}
	quit
 
 
FormLog(pidForm,pidClass,pstrKey,pidFld,pstrMsg)
	;-------------------------------------------------------------------------------
	; Record form changes
	;
	; Params:	pidForm		= Form  IE INART
	; 			pstrKey		= Extra keys IE 23 for data field
	; 			pidFld		= Field id, 0 for no field
	; 			pstrMsg		= Message text
	;
	; Returns:
	;
	; History:
	; 24-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new intMsg,objFld,intType,strTab
	
	set strTab=$char(9)
	set intMsg=$increment(^VARCustom("Log","Forms"))
	set ^VARCustom("Log","Forms",intMsg)=pidForm_strTab_pidClass_" ("_$piece($get(^WWW001(0,pidClass,1)),Y,1)_")"_strTab_pstrKey_strTab_pidFld_strTab_pstrMsg
	write intMsg_","_^VARCustom("Log","Forms",intMsg),!
	quit
	
	
FormCompareDetail(pidForm,pidClass,pstrKey,pstrLocal,pstrCompare)
	;-------------------------------------------------------------------------------
	; Detailed Compare of form changes
	;
	; Params:	pidForm		= Form  IE INART
	; 			pidClass	= Class IE WWW122
	; 			pstrKey		= Extra keys IE 23 for data field
	; 			pstrLocal	= Local form definition
	; 			pstrCompare	= Compare form definition
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new idFld,intType,objFld,strCompareClean,strCompareFld,strFld,strLocalClean,strLocalFld,strStatus
	
	set strStatus=$$$OK
	
	set pstrKey=$piece(pstrKey,",",1,$length(pstrKey,",")-1)
	if pstrKey=pidClass {
		set pstrKey=""
	}
	set idFld=""
	for {
		set idFld=$order(^WWW003(0,pidClass,idFld))
		quit:idFld=""
		if $data( ^VARCustom("Sys","Ignore",pidClass,idFld)) {
			continue
		}
		set strLocalFld     = $piece(pstrLocal,Y,idFld)
		set strCompareFld   = $piece(pstrCompare,Y,idFld)
		set strLocalClean   = $translate($zconvert(strLocalFld,"l")," ")
		set strCompareClean = $translate($zconvert(strCompareFld,"l")," ")
		set strLocalClean   = $piece(strLocalClean,";",1)
		set strCompareClean = $piece(strCompareClean,";",1)
		if strLocalClean'=strCompareClean {
			set objFld  = $get(^WWW003(0,pidClass,idFld,1))
			set intType = $piece(objFld,Y,3)
			if intType = 1 {
				if strLocalFld'="" {
					set strLocalFld = $zdate(strLocalFld,3)
				}
				if strCompareFld'="" {
					set strCompareFld = $zdate(strCompareFld,3)
				}
			}
			if intType = 14 {
				if strLocalFld'="" {
					set strLocalFld = $zdatetime(strLocalFld,3)
				}
				if strCompareFld'="" {
					set strCompareFld = $zdatetime(strCompareFld,3)
				}
			}
			do FormLog(pidForm,pidClass,pstrKey,idFld_" "_$piece(objFld,Y,1),"Local="_strLocalFld_" Compare="_strCompareFld)
 
		}
	}
	quit
 
GetCompareNS()
	;-------------------------------------------------------------------------------
	; Get Compare Name Space
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new strNS
	
	set strNS=$get(^VARCustom("Sys","Current Compare NS"))
	
	if strNS="" {
		write !,"No Current Compare Name Space, Please enter a name space."
		do {
			read !,"Enter Name Space for compare: ",strNS  ;<FIXME> will users know the correct format? <DWR>
		} while strNS'?1a.na
		set ^VARCustom("Sys","Current Compare NS")=strNS
	}
	quit strNS
 
 
Generate()
	;-------------------------------------------------------------------------------
	; Generate a cache routine
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 08-Dec-2008	GRF		SR16167: missing quit added at end
	; 26-Nov-2008	SCR		SR16167: Split in multiple routines to stop 'Routine too
	; 							big' error 
	; 25-Nov-2008	SCR		SR16167: Check for non existent data
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new idClass,idConfig,intKey,intRoutine,intSize,objCurrentRtn,objData,objRtn
	new strCode,strCurrentRoutine,strGlo,strKey,strMainRoutine,strTest
	
	set idConfig = $$GetCurrentConfig()
	do ParaList(0)
	do MenuList(0)
	set intRoutine        = 0
	set intSize           = 0
	set strMainRoutine    = idConfig
	set strCurrentRoutine = strMainRoutine
	
	set objRtn = ##class(%Routine).%New(strMainRoutine)
	if ##class(%Routine).Exists(strMainRoutine) {
		do objRtn.Clear()
	}
	
	use 0
	write !,"Created rtn: ",strMainRoutine
	
	set objCurrentRtn=objRtn
	do objRtn.WriteLine(strMainRoutine_"  ; Compile by COMCustomisation")
	do objRtn.WriteLine("#Include COMSYS")
	do objRtn.WriteLine("Load(pintMode=1)")
	do objRtn.WriteLine(" New intSave")
	
	set idClass=""
	for {
		set idClass=$order(^VARCustom("Config",idConfig,"Class",idClass))
		quit:idClass=""
		
		do objCurrentRtn.WriteLine(" ; Loading Class: "_idClass)
		do objCurrentRtn.WriteLine(" set intSave=$increment(^VARCustomSave"_idClass_")")
		do objCurrentRtn.WriteLine(" merge ^VARCustomSave"_idClass_"(intSave)=^"_idClass)
		do objCurrentRtn.WriteLine(" set ^VARCustomSave"_idClass_"(intSave)=""Custom Data Saved from "_idClass_" at ""_$zdt($h,3)")
		do objCurrentRtn.WriteLine(" Write ""Saving "_idClass_" in ^VARCustomSave"_idClass_",intSave)"",!")
		do objCurrentRtn.WriteLine(" Write ""Updating "_idClass_""",!")
				
		set strGlo="" 
		for {
			set strGlo=$order(^VARCustom("Config",idConfig,"Class",idClass,"Include",strGlo))
			quit:strGlo=""
			
			set objData=$get(^VARCustom("Config",idConfig,"Class",idClass,"Include",strGlo))
			set strKey=""
			;if strGlo["^WWW003CustomIndex(0,""INADJ"",200,1" break
			
			set strTest="^"_idClass_"(0,"  ; Used for test if the data still exists
			for intKey=2:1:$qlength(strGlo)-1 {
				set $piece(strKey,",",intKey-1)=$qsubscript(strGlo,intKey)
				set strTest=strTest_""""_$qsubscript(strGlo,intKey)_""","
			}
			set strTest=strTest_"1)"
			;write !,strTest
			if '$data(@strTest) {
				use 0
				write strTest," does not exists, removing",*7
				kill ^VARCustom("Config",idConfig,"Class",idClass,"Include",strGlo)
				continue
			
			} else {
				if @strTest'=objData {
					write !,strTest," warning data changed **************************",*7
					write !,"I=",objData
					write !,"D=",@strTest,!
					set objData=@strTest
					set ^VARCustom("Config",idConfig,"Class",idClass,"Include",strGlo)=objData
					write "Updated",!
				}
			}
			;write !,strGlo,"=",strKey
			set strKey=""""_$$DoubleQuotes^COMUtilStr(strKey)_""""
			;write !,strGlo,"=",objData
			set objData=""""_$$DoubleQuotes^COMUtilStr(objData)_""""
			set strCode=" do Save("""_idClass_""","_strKey_","_objData_",pintMode)"
			set intSize=intSize+$length(strCode)
			if intSize>25000 {
				set intSize=0
				if intRoutine>0 { 
					do GenerateSubRtnClose(objCurrentRtn,strMainRoutine)
				}
				set objCurrentRtn=$$GenerateSubRtnOpen(.intRoutine,strMainRoutine)
				do objRtn.WriteLine(" do Load^"_objCurrentRtn.NameGet()_"(pintMode)")
			}
			do objCurrentRtn.WriteLine(strCode)
		}
		do objCurrentRtn.WriteLine(" Write ""Finished Updating "_idClass_""",!")
		
	}
	if intRoutine>0 { 
		do GenerateSubRtnClose(objCurrentRtn,strMainRoutine)
	}
	do objRtn.WriteLine(" quit")
	do objRtn.WriteLine("Save(pstrClass,pstrKey,pstrData,pintMode=1)")
	do objRtn.WriteLine(" if pintMode=1 {")
	do objRtn.WriteLine("  write $$$Save(pstrClass,pstrKey,pstrData,1)")
	do objRtn.WriteLine(" } else {")
	do objRtn.WriteLine("  do ProcessSave^COMCustomisation(pstrClass,pstrKey,pstrData,pintMode)")
	do objRtn.WriteLine(" }")
	do objRtn.WriteLine(" quit")
	
	do objRtn.Compile("-d")
	use 0
	write !,"Compiled rtn: ",strMainRoutine
	do objRtn.%Close()
	quit
	
	
GenerateSubRtnOpen(&pintRoutine,pstrMainRoutine)
	;-------------------------------------------------------------------------------
	; Start a extra cache routine
	;
	; Params: 	pintRoutine = Routine number , used to create a sequencial suffix
	; 			pstrMainRoutine = Main Rountine name
	;
	; Returns:	New routine object
	;
	; History:
	; 26-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new objCurrentRtn,strCurrentRoutine
	
	set pintRoutine=pintRoutine+1
	set strCurrentRoutine=pstrMainRoutine_pintRoutine
	set objCurrentRtn=##class(%Routine).%New(strCurrentRoutine)
	if ##class(%Routine).Exists(strCurrentRoutine) {
		do objCurrentRtn.Clear()
	}
	use 0
	write !,"Created rtn: ",strCurrentRoutine
	do objCurrentRtn.WriteLine(strCurrentRoutine_"  ; Compile by COMCustomisation")
	do objCurrentRtn.WriteLine("#Include COMSYS")
	do objCurrentRtn.WriteLine("Load(pintMode=1)")
 	quit objCurrentRtn
 	
GenerateSubRtnClose(pobjCurrentRtn,pstrMainRoutine)
	;-------------------------------------------------------------------------------
	; Close a extra cache routine
	;
	; Params: 	pobjCurrentRtn = Routine object to close
	; 			pstrMainRoutine = Main Rountine name
	;
	; Returns:	nothing
	;
	; History:
	; 26-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	do pobjCurrentRtn.WriteLine(" quit")
	do pobjCurrentRtn.WriteLine("Save(pstrClass,pstrKey,pstrData,pintMode=1)")
	do pobjCurrentRtn.WriteLine(" do Save^"_pstrMainRoutine_"(pstrClass,pstrKey,pstrData,pintMode)")
	do pobjCurrentRtn.WriteLine(" quit")
	do pobjCurrentRtn.Compile("-d")
	use 0
	write !,"Compiled rtn: ",pobjCurrentRtn.NameGet()
	do pobjCurrentRtn.%Close()
	quit
 
ProcessSave(pstrClass,pstrKey,pstrData,pintMode)
	;-------------------------------------------------------------------------------
	; Process a Save from the generated cache routing
	;
	; Params:	pstrClass	= Class
	; 			pstrKey		= Keys
	; 			pstrData	= Data
	; 			pintMode	= process mode (1 = Normal Save, others reserved for future options)
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	if pintMode=1 {
		write !,"Saving ",pstrClass," @ ",pstrKey
		if $$$Save(pstrClass,pstrKey,pstrData,$$$YES) {
			write " ok "
		} else {
			write " not ok "
		}
	}
 
 	
	quit
	
	
ListChange(pstrCmd)
	;-------------------------------------------------------------------------------
	; Change the list of data to be saved in the cache routine
	;
	; Params:	pstrCmd		= Command 'Include' or 'Exlude'
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new idClass,idConfig,intEnd,intIndex,intStart,objData,strGlo,strRange,strStatus
	
	set strStatus=$$$OK
	set idConfig=$$GetCurrentConfig()
	write " ",$select(pstrCmd="i":"Incude",1:"Exclude") ;<FIXME> should this be "e":"Exclude" ?? <DWR>
	read " Range: ",strRange							;<FIXME> what if its entered incorerctly, without "-" adds space or uses "/"?<DWR>
	set intStart=+strRange
	set intEnd=+$piece(strRange,"-",2)
	if 'intEnd set intEnd=intStart
	if (intEnd<intStart) || ('intStart) || ('$data(^VARCustom("temp","list",intStart))) || ('$data(^VARCustom("temp","list",intEnd))) {
		write " Invalid Range ",*7
		set strStatus=$$$NO
	}
	if strStatus=$$$OK {
		for intIndex=intStart:1:intEnd {
			set strGlo  = $get(^VARCustom("temp","list",intIndex,"Global"))
			set objData = $get(^VARCustom("temp","list",intIndex,"Data"))
			set idClass = $extract($piece(strGlo,"(",1),2,99)
			if pstrCmd="i" {
				set ^VARCustom("Config",idConfig,"Class",idClass,"Include",strGlo)=objData
			}
			if pstrCmd="e" {
				kill ^VARCustom("Config",idConfig,"Class",idClass,"Include",strGlo)
			}
		}
	}
	quit
	
	
List(&pintPage=1)
	;-------------------------------------------------------------------------------
	; List a page of data for the current class
	;
	; Params:	pintPage		= Page number
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new strGlo,idClass,idConfig,intIndex,idKey,idFld,idForm,objForm
	new objKey,objFld,objData,intMaxFld,intFlds
	
	set idClass  = $$GetCurrentClass()
	set idConfig = $$GetCurrentConfig()
	set strGlo   = "^"_idClass
	
	kill ^VARCustom("temp","list")
	
	set idKey=""
	set intMaxFld=$order(^WWW003(0,idClass,""),-1)
	for intIndex=1:1 {
		set strGlo=$query(@strGlo)
		quit:strGlo=""
		
		set objData=@strGlo
		set intFlds=$length(objData,Y)
		if intFlds>intMaxFld {
			write !,"******************************************"
			write !,strGlo," Truncate ",intFlds," fields to ",intMaxFld," fields"
			set objData=$piece(objData,Y,1,intMaxFld)
		}
		if intIndex-1\50+1=pintPage {
			write !,"******************************************"
			write !,strGlo,"=",objData
			set idKey=""
			for { 
				set idKey=$order(^WWW002(0,idClass,idKey))
				quit:idKey=""
				
				set objKey=$get(^WWW002(0,idClass,idKey,1))
				write !,$piece(objKey,Y,1),"=",$qsubscript(strGlo,idKey+1)
			}
			set idFld=""
			for {
				set idFld=$order(^WWW003(0,idClass,idFld))
				quit:idFld=""
				
				set objFld=$get(^WWW003(0,idClass,idFld,1))
				if $piece(objData,Y,idFld)'="" {
					write !,$piece(objFld,Y,1),"=",$piece(objData,Y,idFld)
				}
			}
			write !,"Index ",intIndex," ",$select($data(^VARCustom("Config",idConfig,"Class",idClass,"Include",strGlo)):"Included",1:"Excluded")
		}
		set ^VARCustom("temp","list",intIndex,"Global")=strGlo
		set ^VARCustom("temp","list",intIndex,"Data")=objData
	}
	write !,"Page: ",pintPage," of ",intIndex-2\50+1," Pages"
	quit
 
GetCurrentConfig()
	;-------------------------------------------------------------------------------
	; Get the Current Configuration ( Module)
	; 	if there is no Current Configuration ask for one and then save it!
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new idConfig
	
	set idConfig=$get(^VARCustom("Sys","Current Config"))
	
	if idConfig="" {
		write !,"No Current Config, Please enter a config name."
		write !,"The name will become the routine name and should match the same as the module IE VARSESCustomData"
		do {
			read !,"Enter Config Name: ",idConfig
		} while idConfig'?1a.na
		set ^VARCustom("Sys","Current Config")=idConfig
	}
	quit idConfig
	
GetCurrentClass(pblnChange=$$$NO)
	;-------------------------------------------------------------------------------
	; Get the Current class
	; 	if there is no Current ask for one from a list.
	; 	if the Change flag is set then also ask for the new class
	;
	; Params: pblnChange = Change flag
	;
	; Returns:
	;
	; History:
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new idClass,arrClass,intIndex
	
	set idClass=$get(^VARCustom("Sys","Current Class"))
	
	if (idClass="") || (pblnChange=$$$YES) {
		write !,"No Current Class, Please Select a class"
		do {
			set idClass=""
			for intIndex=1:1 {
				set idClass=$order(^VARCustom("Sys","Class",idClass))
				quit:idClass=""
				
				set arrClass(intIndex)=idClass
				write !,intIndex,"=",idClass," ",$get(^VARCustom("Sys","Class",idClass))
			}
			write !,"Enter Class Number (1-",(intIndex-1),"): "
			read intIndex
		} while '$data(arrClass(+intIndex))
		set ^VARCustom("Sys","Current Class")=arrClass(+intIndex)
	}
	quit idClass
	
	
SetUp()
	;-------------------------------------------------------------------------------
	; Setup the list of Custom Classes
	;
	; Params: 
	;
	; Returns:
	;
	; History:
	; 20-Sep-2011	GRF		SR17847: WWW120VARHook
	; 08-Sep-2011	shobby	SR17847: WWW120Hook
	; 21-Nov-2008	SCR		SR16167: Created
	;-------------------------------------------------------------------------------
	new strFormDefList
	
	set ^VARCustom("Sys","Class","WWW001VARHooks")    = "VAR Hooks"
	set ^VARCustom("Sys","Class","WWW002D")           = "Primary Key Customisation"
	set ^VARCustom("Sys","Class","WWW003CustomIndex") = "Custom Index"
	set ^VARCustom("Sys","Class","WWW003CustomIndexLine") = "Custom Index Line"
	set ^VARCustom("Sys","Class","WWW003D")        = "Property Name Properties"
	set ^VARCustom("Sys","Class","WWW00411")       = "Main Menu Translation"
	set ^VARCustom("Sys","Class","WWW00441")       = "Program-entitlements"
	set ^VARCustom("Sys","Class","WWW00442")       = "Program-button-entitlements"
	set ^VARCustom("Sys","Class","WWW00443")       = "Form Button Description"
	set ^VARCustom("Sys","Class","WWW00444")       = "Program-button-entitlements"
	set ^VARCustom("Sys","Class","WWW00445")       = "Form Button Description"
	set ^VARCustom("Sys","Class","WWW1203D")       = "Tab Customising"
	set ^VARCustom("Sys","Class","WWW120BUTTOND1") = "Edit Access For Buttons"
	set ^VARCustom("Sys","Class","WWW120D")        = "Customising Form"
	set ^VARCustom("Sys","Class","WWW120VARHook")  = "VAR Form Hooks"               ;SR17847
	set ^VARCustom("Sys","Class","WWW121D")        = "Company Dependent Defaults"
	set ^VARCustom("Sys","Class","WWW121D1")       = "Customizing For Languages"
	set ^VARCustom("Sys","Class","WWW122D")        = "Company Dependent Defaults"
	set ^VARCustom("Sys","Class","WWW122D1")       = "Customizing For Languages"
	set ^VARCustom("Sys","Class","WWW122D2")       = "Customizing Rules"
	set ^VARCustom("Sys","Class","WWW124D")        = "Custom Buttons"
	;et strFormDefList = "120,1201,1203,121,1210,1211,122,1221,123,1231,1232,124,1251,127,129,1291,131,132,133"   ; SRBR014699
	;et strFormDefList = strFormDefList_",DRAGDROP,DRAGDROPD,120DynTable,001Hook"                 ; SRBR014699
	set strFormDefList = "120,1203,121,1210,1211,122,123,1231,1232,124,1251,129,1291,131,132,133"                 ;SR17847
	set strFormDefList = strFormDefList_",DRAGDROP,DRAGDROPD,120DynTable,001Hook,120Hook"         ;SR17847
	set ^VARCustom("Sys","FormDef")  = strFormDefList
	set ^VARCustom("Sys","ClassDef") = "001,0011,002,0021,003,0031,001B,0022,0032,003Calc" 
	
	; Fields to ignore during compare
	set ^VARCustom("Sys","Ignore","WWW120",50)=1 ; Number of Hits
	set ^VARCustom("Sys","Ignore","WWW120",72)=1 ; Created By
	set ^VARCustom("Sys","Ignore","WWW120",73)=1 ; Date Created
	set ^VARCustom("Sys","Ignore","WWW120",74)=1 ; Changed By
	set ^VARCustom("Sys","Ignore","WWW120",75)=1 ; Date Changed
	
	set ^VARCustom("Sys","Ignore","WWW124",72)=1 ; Created By
	set ^VARCustom("Sys","Ignore","WWW124",73)=1 ; Date Created
	set ^VARCustom("Sys","Ignore","WWW124",74)=1 ; Changed By
	set ^VARCustom("Sys","Ignore","WWW124",75)=1 ; Date Changed
	set ^VARCustom("Sys","Ignore","WWW124",66)=1 ; Help
	set ^VARCustom("Sys","Ignore","WWW124",9) =1 ; Picture
	set ^VARCustom("Sys","Ignore","WWW124",21)=1 ; Image File For Disabled Button
	set ^VARCustom("Sys","Ignore","WWW124",22)=1 ; User Access
	
	set ^VARCustom("Sys","Ignore","WWW122",100)=1 ; Created By
	set ^VARCustom("Sys","Ignore","WWW122",101)=1 ; Date Created
	set ^VARCustom("Sys","Ignore","WWW122",102)=1 ; Changed By
	set ^VARCustom("Sys","Ignore","WWW122",103)=1 ; Date Changed
	
	set ^VARCustom("Sys","Ignore","WWW122",3) =1 ; Row
	set ^VARCustom("Sys","Ignore","WWW122",4) =1 ; Col
	set ^VARCustom("Sys","Ignore","WWW122",12)=1 ; Manual Caption
	set ^VARCustom("Sys","Ignore","WWW122",15)=1 ; Default Input
	set ^VARCustom("Sys","Ignore","WWW122",23)=1 ; Remark
	set ^VARCustom("Sys","Ignore","WWW122",26)=1 ; User Access for change
	set ^VARCustom("Sys","Ignore","WWW122",38)=1 ; New Group
	set ^VARCustom("Sys","Ignore","WWW122",39)=1 ; Group Name
	set ^VARCustom("Sys","Ignore","WWW122",60)=1 ; Page Number
	set ^VARCustom("Sys","Ignore","WWW122",13)=1 ; Mandatory
	set ^VARCustom("Sys","Ignore","WWW122",88)=1 ; Length
	
	set ^VARCustom("Sys","Ignore","WWW121",100)=1 ; Date Created
	set ^VARCustom("Sys","Ignore","WWW121",101)=1 ; Created By
	set ^VARCustom("Sys","Ignore","WWW121",102)=1 ; Date Changed
	set ^VARCustom("Sys","Ignore","WWW121",103)=1 ; Changed By
	
	quit
	
	
TurnOnVar()
	;-------------------------------------------------------------------------------
	;
	; History:
	; 20-Sep-2011	GRF		SR17847: WWW120VARHook
	;-------------------------------------------------------------------------------
	; FIXME :
	; Check WWW00411,WWW00441,WWW00442,WWW00443,WWW00444,WWW00445,
	; WWW1203D,120BUTTOND1
	
	; FIXME : see note below
	
	new strStatus 
	
	set strStatus = $$$OK 
	
	merge ^WWW002D  = ^storeWWW002D
	merge ^WWW002Ds = ^storeWWW002Ds
	kill ^storeWWW002D
	kill ^storeWWW002Ds
	
	merge ^WWW003D  = ^storeWWW003D
	merge ^WWW003Ds = ^storeWWW003Ds
	kill ^storeWWW003D
	kill ^storeWWW003Ds
	
	merge ^WWW120D  = ^storeWWW120D
	merge ^WWW120Ds = ^storeWWW120Ds
	kill ^storeWWW120D
	kill ^storeWWW120Ds
	
	merge ^WWW121D  = ^storeWWW121D
	merge ^WWW121Ds = ^storeWWW121Ds
	kill ^storeWWW121D
	kill ^storeWWW121Ds
	
	merge ^WWW121D  = ^storeWWW121D
	merge ^WWW121Ds = ^storeWWW121Ds
	kill ^storeWWW121D
	kill ^storeWWW121Ds
	
	merge ^WWW122D  = ^storeWWW122D
	merge ^WWW122Ds = ^storeWWW122Ds
	kill ^storeWWW122D
	kill ^storeWWW122Ds
	
	merge ^WWW124D  = ^storeWWW124D
	merge ^WWW124Ds = ^storeWWW124Ds
	kill ^storeWWW124D
	kill ^storeWWW124Ds
 	
	merge ^WWW121D1 = ^storeWWW121D1
	kill ^storeWWW121D1
 
	merge ^WWW122D1 = ^storeWWW122D1
	kill ^storeWWW122D1
 
	merge ^WWW122D2 = ^storeWWW122D2
	kill ^storeWWW122D2
	
	merge ^WWW001VARHooks = ^storeWWW001VARHooks
	kill ^storeWWW001VARHooks
	
	merge ^WWW120VARHook = ^storeWWW120VARHook               ;SR17847
	kill ^storeWWW120VARHook

	quit strStatus 
	
	
TurnOffVar()
	;-------------------------------------------------------------------------------
	;
	; History:
	; 20-Sep-2011	GRF		SR17847: WWW120VARHook
	;-------------------------------------------------------------------------------
	; FIXME : Doesn't appear to be being called yet - no history to indicate who created (SCR?)
	;         Any clean up in the "official" globals will not be cleared from a previous
	;         ^store### copy with merge and could then be r]]><![CDATA[estored to core version by
	;         subsequent merge.  Do we need to kill the ^store### globals before merging?
	;         (They are kiled after merging back but this may not be done between builds.)
	;         Ditto for killing official globals before merging back in TurnOnVar?  <GRF>
	
	new strStatus 
	
	set strStatus = $$$OK 
	
	merge ^storeWWW002D  = ^WWW002D
	merge ^storeWWW002Ds = ^WWW002Ds
	kill ^WWW002D
	kill ^WWW002Ds
	
	merge ^storeWWW003D  = ^WWW003D
	merge ^storeWWW003Ds = ^WWW003Ds
	kill ^WWW003D
	kill ^WWW003Ds
	
	merge ^storeWWW120D  = ^WWW120D
	merge ^storeWWW120Ds = ^WWW120Ds
	kill ^WWW120D
	kill ^WWW120Ds
	
	merge ^storeWWW121D  = ^WWW121D
	merge ^storeWWW121Ds = ^WWW121Ds
	kill ^WWW121D
	kill ^WWW121Ds
	
	merge ^storeWWW121D  = ^WWW121D
	merge ^storeWWW121Ds = ^WWW121Ds
	kill ^WWW121D
	kill ^WWW121Ds
	
	merge ^storeWWW122D  = ^WWW122D
	merge ^storeWWW122Ds = ^WWW122Ds
	kill ^WWW122D
	kill ^WWW122Ds
	
	merge ^storeWWW124D  = ^WWW124D
	merge ^storeWWW124Ds = ^WWW124Ds
	kill ^WWW124D
	kill ^WWW124Ds
 	
	merge ^storeWWW121D1 = ^WWW121D1
	kill ^WWW121D1
 
	merge ^storeWWW122D1 = ^WWW122D1
	kill ^WWW122D1
 
	merge ^storeWWW122D2 = ^WWW122D2
	kill ^WWW122D2
	
	merge ^storeWWW001VARHooks  = ^WWW001VARHooks
	kill ^WWW001VARHooks
	
	merge ^storeWWW120VARHook  = ^WWW120VARHook               ;SR17847
	kill ^WWW120VARHook

	quit strStatus 
	
	
SaveVar()
	;-------------------------------------------------------------------------------
	;
	; History:
	; 20-Sep-2011	GRF		SR17847: WWW120VARHook
	;-------------------------------------------------------------------------------
	new strStatus 
	
	set strStatus = $$$OK 
	
	merge ^storeWWW002D  = ^WWW002D
	merge ^storeWWW002Ds = ^WWW002Ds
	
	merge ^storeWWW003D  = ^WWW003D
	merge ^storeWWW003Ds = ^WWW003Ds
	
	merge ^storeWWW120D  = ^WWW120D
	merge ^storeWWW120Ds = ^WWW120Ds
	
	merge ^storeWWW121D  = ^WWW121D
	merge ^storeWWW121Ds = ^WWW121Ds
	
	merge ^storeWWW121D  = ^WWW121D
	merge ^storeWWW121Ds = ^WWW121Ds
	
	merge ^storeWWW122D  = ^WWW122D
	merge ^storeWWW122Ds = ^WWW122Ds
	
	merge ^storeWWW124D  = ^WWW124D
	merge ^storeWWW124Ds = ^WWW124Ds
 
	merge ^storeWWW121D1 = ^WWW121D1
 
	merge ^storeWWW122D1 = ^WWW122D1
 
	merge ^storeWWW122D2 = ^WWW122D2
	
	merge ^storeWWW001VARHooks  = ^WWW001VARHooks
	merge ^storeWWW120VARHook   = ^WWW120VARHook               ;SR17847
	
	quit strStatus 
	
TurnOffVarForForm(pidForm)
	;-------------------------------------------------------------------------------
	; Remove Customisations for a FORM
	;
	; Params: pidForm
	;
	; Returns:
	;
	; History:
	; 20-Sep-2011	GRF		SR17847: WWW120VARHook
	; 08-Dec-2008	GRF		SR16221: Remove unneeded strStatus (first quit did not
	; 							match final quit)
	; 05-Dec-2008	PPP		SR16221: Created
	;-------------------------------------------------------------------------------
	;new strStatus 
	
	do:$get(Y)="" ^WWWVAR
	
	if ($get(pidForm)="") || '$data(^WWW120(0,pidForm)) write !,"Please enter a valid Form..." quit
	
	;set strStatus = $$$OK
	
	merge ^storeFWWW002D(0,pidForm) = ^WWW002D(0,pidForm)
	kill ^WWW002D(0,pidForm)
	do ReIndex^COMIndex("WWW002D")
	
	merge ^storeFWWW003D(0,pidForm) = ^WWW003D(0,pidForm)
	kill ^WWW003D(0,pidForm)
	do ReIndex^COMIndex("WWW003D")
	
	merge ^storeFWWW120D(0,pidForm) = ^WWW120D(0,pidForm)
	kill ^WWW120D(0,pidForm)
	do ReIndex^COMIndex("WWW120D")
	
	merge ^storeFWWW121D(0,pidForm) = ^WWW121D(0,pidForm)
	kill ^WWW121D(0,pidForm)
	do ReIndex^COMIndex("WWW121D")
	
	merge ^storeFWWW122D(0,pidForm) = ^WWW122D(0,pidForm)
	kill ^WWW122D(0,pidForm)
	do ReIndex^COMIndex("WWW122D")
 
	merge ^storeFWWW124D(0,pidForm) = ^WWW124D(0,pidForm)
	kill ^WWW124D(0,pidForm)
	do ReIndex^COMIndex("WWW124D")
 
	merge ^storeFWWW121D1(0,pidForm) = ^WWW121D1(0,pidForm)
	kill ^WWW121D1(0,pidForm)
	do ReIndex^COMIndex("WWW121D1")
 
	merge ^storeFWWW122D1(0,pidForm) = ^WWW122D1(0,pidForm)
	kill ^WWW122D1(0,pidForm)
	do ReIndex^COMIndex("WWW122D1")
 
	merge ^storeFWWW122D2(0,pidForm) = ^WWW122D2(0,pidForm)
	kill ^WWW122D2(0,pidForm)
	do ReIndex^COMIndex("WWW122D2")
	
	merge ^storeFWWW001VARHooks(0,pidForm) = ^WWW001VARHooks(0,pidForm)
	kill ^WWW001VARHooks(0,pidForm)
	do ReIndex^COMIndex("WWW001VARHooks")
	
	merge ^storeFWWW120VARHook(0,pidForm) = ^WWW120VARHook(0,pidForm)               ;SR17847
	kill ^WWW120VARHook(0,pidForm)
	do ReIndex^COMIndex("WWW120VARHook")
	
	quit
	
	
EnableCOREPurchasing()
	;-------------------------------------------------------------------------------
	; Remove Purchasing Customisations for a FORM to enable CORE processing
	;
	; Params: pidForm
	;
	; Returns:
	;
	; History:
	; 05-Dec-2008	PPP		SR16221: Created
	;-------------------------------------------------------------------------------
	write !,"Removing Customisations for Purchasing & Rec Forms",!
	
	write !,"INAUF"
	do TurnOffVarForForm("INAUF")
 
	write !,"INAUFP"
	do TurnOffVarForForm("INAUFP")	
 
	write !,"INREC"
	do TurnOffVarForForm("INREC")
 
	write !,"INRECLine"
	do TurnOffVarForForm("INRECLine")
 
	do ClearCustomButtons("INREC")
 
	quit
	
	
ClearCustomButtons(pidForm)
    ;-------------------------------------------------------------------------------
    ; Clear all custom buttons that have been inserted into a form
    ;
    ; Params: pidForm:		The id of the form
    ;
    ; ByRefs:
    ;
    ; Returns: nothing
    ;
    ; History:
    ; 19-Jan-2006	SteveS	SR13171: Created
    ;-------------------------------------------------------------------------------
	new idLang,idSeq,strKey,idForm
	
	set idLang=""
	for {
		set idLang=$order(^WWW124s(0,10,$$$YES,pidForm,idLang))
		quit:(idLang="")
	
		set idSeq=""
		for {
			set idSeq=$order(^WWW124s(0,10,$$$YES,pidForm,idLang,idSeq))
			quit:(idSeq="")
	
			set strKey=(pidForm_","_idLang_","_idSeq)
			
			do KILL^COMUtils("WWW124",strKey)
		}	
	}		
 
	quit	
	
]]></Routine>
</Export>