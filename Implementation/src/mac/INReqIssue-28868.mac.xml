<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INReqIssue" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INReqIssue
	
#include COMSYS
#include COMConst
#include INConst
#include COMView
#include %occInclude
	
OnAfterDataFields(pstrCompany,pstrForm)
	;-------------------------------------------------------------------------------
	; 1. Ensure any requisition where all lines are closed is marked as closed.
	; 2. Display requisitions that are ready for issue as a COMView selection
	;			
	; Called By : Form INReqIssue, INReqIssueAsLine
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns : Nothing
	; 
	; Status 1	Open
	;        2	Firmed			<<
	;        3	Active			<<
	;        4	Prepared		<<
	;        6	Pending			<<
	;        7	Active/Pending			FIXME : How does this differ from 3 & 6?
	;        8	Manual-Close
	;        9	Auto-Close
	;
	; History :
	; 13-Jan-1010	GRF		SR17111: use strSelect for readability
	; 27-Jul-2009	DWR		SR16790: remove status of prepared (4)
    ; 29-May-2009	PPP		SR16586: Exclude if Status is 1, 4 & 7 as well
	; 04-Apr-2008	GRF		SR15625: ISOK rather than 'ISERR
	; 24-Jan-2008	HQN		SR15625: Changed class signature dREQ to dUReq
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new objReq,objResultSet,sc,strSelect
	
	// sanitizing the list
	set objResultSet = ##class(%Library.ResultSet).%New()
	// mimic the COMView filter		//SR16586
	set strSelect = "SELECT INReq.ID FROM INReq INNER JOIN INReqLine ON INReq.ReqNum = INReqLine.ReqNumber"
	set strSelect = strSelect_" WHERE INReqLine.FromStockLocn = "_YLOCATION
	;set strSelect = strSelect_" AND INReq.Status <> 1 AND INReq.Status <> 5 AND INReq.Status <> 7"  ; SR16790
	set strSelect = strSelect_" AND INReq.Status <> 1 AND INReq.Status <> 7"
	set strSelect = strSelect_" AND INReq.Status <> 8 AND INReq.Status <> 9 GROUP BY ReqNum"
	
	do objResultSet.Prepare(strSelect)
	set sc = objResultSet.Execute()
	while (objResultSet.Next(.sc)) {
		set objReq = ##class(alREQ.dUReq).%OpenId(objResultSet.Data("ID"))
		if $$$ISOK(objReq) {
			do objReq.AutoClose()
		}
	}
	
	do LoadGrid(pstrCompany,pstrForm)
	quit
	
	
LoadGrid(pstrCompany=0,pstrForm,pblnLocked=$$$NO)
	;-------------------------------------------------------------------------------
	; Display requisitions that are ready for issue as a COMView selection
	; 
	; Then uses the "[C]reate Issue from Requisition" button on grid form
	; INReqIssueAsReq via FulfilRequisition^INReqIssueAsReq to populate
	; INIssue/INIssueLine or INTFR/INTFRLine.
	;			
	; Called By : OnAfterDataFields
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 24-Dec-2013	shobby	SESDF-655: Don't show status 5 (Delivered)
	; 27-Jul-2009	DWR		SR16790	don't show prepared status issues
    ; 29-May-2009	PPP		SR16586: Change Like to Startswith
	; 18-Dec-2007	PPP		Added new 'To Location' filter
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new YFORM,YKEY,YAUSWAHL,YFELD
 
	kill ^CacheTempLocked(YUCI,YUSER)
	do ClearOld^WWWMultiLock(YUSER)
 
	$$$ClearExternalFilter("INReqIssue") 
	
	//YFORM is used as a global within COMGridEdit31
	set YFORM = pstrForm_"AsReq"
	
	//do AddExternalFilter^COMViewFilter("INReqIssue","P"_$$$FldINReqReqNum,"",$$$EnumCOMVIEWCOMPARATORLike,$$$YES)
	do AddExternalFilter^COMViewFilter("INReqIssue","P"_$$$FldINReqReqNum,"",$$$EnumCOMVIEWCOMPARATORStartsWith,$$$YES)  //SR16586
	if (+$$$WWWClientParamCoreChangesSESPE($get(^WWWClientParam(0,0,1)))){
		do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqType  ,2,$$$EnumCOMVIEWCOMPARATOREquals,$$$ANNO)  //SR16544
	}else {
		do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqType  ,"",$$$EnumCOMVIEWCOMPARATORStartsWith,$$$YES)  //SR16544
	}
	do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqStatus,1,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)
	
	//should be based on Issue Status if it has one, atm its based on req status
	do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqStatus,4,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)   // SR16790
	do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqStatus,5,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)   ;SESDF-655
	do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqStatus,7,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)
	do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqStatus,8,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)
	do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqStatus,9,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)
	
	if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
		do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqFromLocn,YLOCATION,$$$EnumCOMVIEWCOMPARATOREquals,$$$ANNO)
	}else {
		do AddExternalFilter^COMViewFilter("INReqIssue","P"_$$$FldINReqReqNum_".CINReqLine.D9",YLOCATION,$$$EnumCOMVIEWCOMPARATOREquals,$$$ANNO)
		do AddExternalFilter^COMViewFilter("INReqIssue","P"_$$$FldINReqReqNum_".CINReqLine.D10",8,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)
		do AddExternalFilter^COMViewFilter("INReqIssue","P"_$$$FldINReqReqNum_".CINReqLine.D10",9,$$$EnumCOMVIEWCOMPARATORNotEquals,$$$ANNO)
	}
	
	if (+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(0,0,1)))) {
		do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqDueDate,"",$$$EnumCOMVIEWCOMPARATORGreaterThan,$$$YES)
	}
	
	if (+$$$WWWClientParamCoreChangesSESPE($get(^WWWClientParam(0,0,1)))) {
		do AddExternalFilter^COMViewFilter("INReqIssue","C4","",$$$EnumCOMVIEWCOMPARATOREquals,$$$ANNO)
		do AddExternalFilter^COMViewFilter("INReqIssue","C5","0",$$$EnumCOMVIEWCOMPARATORGreaterThan,$$$ANNO)
	}
    
	do AddExternalFilter^COMViewFilter("INReqIssue","D"_$$$FldINReqToLocn,"",$$$EnumCOMVIEWCOMPARATORStartsWith,$$$YES)
	
	if (((+$$$WWWClientParamCoreChangesSESPE($get(^WWWClientParam(YM,YM,1)))) ||
	      (+$$$WWWClientParamCoreChangesHCB($get(^WWWClientParam(YM,YM,1))))  || 
	      (+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1)))))) {
		if ('+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1)))){
			do AddExternalFilter^COMViewFilter("INReqIssue","C50","",$$$EnumCOMVIEWCOMPARATORNotEquals,$$$YES)
		}
		do AddExternalFilter^COMViewFilter("INReqIssue","C51","",$$$EnumCOMVIEWCOMPARATORNotEquals,$$$YES)
		do AddExternalFilter^COMViewFilter("INReqIssue","C52","",$$$EnumCOMVIEWCOMPARATORNotEquals,$$$YES)
	}
	
	set YFELD	= ""
	set YKEY	= ""		// No header
	;do SetYFORM^COMGridEdit31Head("INReq")
 
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)          = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)       = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)            = YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)             = $$$NO
	set $$$COMGridEditParameterContainer(YAUSWAHL)           = "INReqIssue"
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL) = $$$YES
	set $$$COMGridEditParameterCOMViewGrid(YAUSWAHL)         = $$$YES
 
	do Start^COMGridEdit31(YFORM,YKEY)
	set YFORM = "INReqIssue"                 ; COMViewFilter uses YFORM byref
	
	do LoadCOMViewGrid^COMViewFilter("INReqIssue","INReqIssueAsReq",1)
 
	quit $$$YES
	
	
FirmIssue(pYKEY,&pYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;	pYKEY
	;
	; ByRef :
	;	pYFELD
	; 
	; Implicit :
	;	YKEY
	;	YFORM
	;	YM
	;	YQ
	;
	; Returns :
	;
	; History :
    ; 29-May-2009	PPP		SR16586: Simplify Process (remove unnecessary calls to
    ; 							Script Engine/State Engine)
	; 11-Dec-2007	HQN		Code cleanup, added new
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	
	//if $$$INIssueStatus(pYFELD)'=2 || ($$$INIssueStatus(pYFELD)'=7) {
	//	set strStatus = $$$MakeStatus("INREQ05")
	//}
 
	if $$$ISOK(strStatus) {	
		set strStatus = $$Transaction^COMTransaction("FirmTxn^INReqIssue("""_pYKEY_""")",$$$YES)
	}
	
  	if $$$ISOK(strStatus) {
	 	do ^WWWFORM
 	} else {
	 	do ReturnError^COMUtilError(strStatus)
 	}
 
 	$$$YQHandler(strStatus)
	quit
	
	
FirmTxn(pidReq)
	;-------------------------------------------------------------------------------
	;		Forces a change of state to FIRMED
	; 
	; Called By :
	; 	Form - INReq
	; 	Routines -
	; 		Button from INReq form
	;		
	; Inputs : 
	;	companyId 	- 	Primary Key of Company
	;	reqId 		- 	%Id of INReq instance
	;
	; ByRef :
	;
	; Returns :
	;
	; History :	
    ; 29-May-2009	PPP		SR16586: Simplify Process (remove unnecessary calls to
    ; 							Script Engine/State Engine)
	;-------------------------------------------------------------------------------
	new objReq,sc,strStatus
	
	set (strStatus,sc) = $$$OK
	
	set objReq = ##class(alREQ.dUReqIssue).%OpenId("0||"_pidReq)
 
	if objReq'= $$$NULLOREF {
 		set sc = objReq.FirmIssue() 
		
		if $$$ISOK(sc) set sc= objReq.%Save()
 		do objReq.%Close()
	}
	
	if $$$ISOK(strStatus) {
 		set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc,$$$NO)
	}
 	quit strStatus
 
	
OnBeforeDelete(pYKEY,&pYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By : NO CALLS FOUND Dec 2009 <GRF>
	;		
	; Inputs : 
	;	pYKEY
	;
	; ByRef :
	;	pYFELD
	; 
	; Implicit :
	;	YKEY
	;	YFORM
	;	YM
	;	Q
	;	
	; Returns :
	;
	; History :
	; 11-Dec-2007	HQN		Code cleanup, added new
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	
	//set strStatus = $$ExecuteRule(YFORM,YM,YKEY,"Delete")
	 
	if $$$ISOK(strStatus) {
		set strStatus = $$$GRIDSave(pYKEY)
	} else {
		do ReturnError^COMUtilError(strStatus)
		set Q = $$$QDontSave
	}
	quit
 
	; this gets called before the screen write plus its enclosed in a hyper event or javascript call!
 
OnBeforeSave(pYKEY,&pYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;	pYKEY
	;
	; ByRef :
	;	pYFELD
	; 
	; Implicit :
	;	YKEY
	;	YFORM
	;	YM
	;	Q
	;
	; Returns :
	;
	; History :
	; 11-Dec-2007	HQN		Code cleanup, added new
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	//set strStatus = $$ExecuteRule(YFORM,YM,YKEY,"Save") 
 
	// Status is Firmed/Partial
	if ($$$INIssueStatus(pYFELD)'=2) || ($$$INIssueStatus(pYFELD)'=7) {
		set strStatus = $$$MakeStatus("INREQ05")                ; "Requisition is not Outstanding"
	}
	
	if $$$ISOK(strStatus) {
		set strStatus = $$$GRIDSave(pYKEY)
	}
	
	if $$$ISERR(strStatus) {
		do ReturnError^COMUtilError(strStatus)
		set Q = $$$QDontSave
	}
	
	quit
	
	
firmcheck(pYKEY,pYFELD)   ; FIXME : naming conventions (related to alSYS.Script.piScriptPopulate?) <GRF>
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;	pYKEY
	;	pYFELD
	; 
	; Implicit :
	;	YKEY
	;	YFORM
	;	YM
	;	YQ
	;
	; Returns :
	;
	; History :
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	; FIXME : <GRF> parameters not used - see YKEY; Capitalise tag
	new blnStatus,objReq
	
	set blnStatus = $$$YES
	//set strStatus = $$ExecuteRule(YFORM,YM,YKEY,"firmcheck")
 
	if ($$$INIssueStatus(pYFELD) = 7) {
		set objReq = ##class(alREQ.dUReqIssue).%OpenId("0||"_YKEY)
		if objReq'=$$$NULLOREF {
			set blnStatus = objReq.PartialIssue()
			do objReq.%Close()
		}
	}
 
	/*
	if $$$ISOK(strStatus) {
		set blnStatus = $$$YES
	} else {
		do ReturnError^COMUtilError(strStatus)
		set blnStatus = $$$NO
	}
	*/
	
	$$$YQHandler(blnStatus)
	quit blnStatus
	
	
GetLinesOutstanding(pstrReqNum,pintLocation=$$$NULLOREF)
	;-------------------------------------------------------------------------------
	;
	;			(Unsure if this means "lines not sourced" or "lines incomplete")
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new intLineCount,objResult
	
	set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
	if (pintLocation '= $$$NULLOREF) {
		do objResult.Prepare("SELECT count(ID) AS intLinesOutstanding FROM SQLUser.INReqLine WHERE ReqNumber = ? AND QtyIssued < QtyRequired AND FromStockLocn = ? GROUP BY ReqNumber")
		do objResult.Execute(pstrReqNum, pintLocation)
	} else {
		do objResult.Prepare("SELECT count(ID) AS intLinesOutstanding FROM SQLUser.INReqLine WHERE ReqNumber = ? AND QtyIssued < QtyRequired")
		do objResult.Execute(pstrReqNum)
	}
	set intLineCount = 0
	if objResult.Next() {
		set intLineCount = objResult.Data("intLinesOutstanding")
	} else {
		set intLineCount = ""
	}
	do objResult.%Close()
	
	quit intLineCount
	
	
GetEarliestDueDate(pstrReqNum)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new dteMinDueDate,objResult
	
	set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
	do objResult.Prepare("SELECT MIN(DueDate) AS minDueDate FROM SQLUser.INReqLine WHERE ReqNumber = ? GROUP BY ReqNumber")
	do objResult.Execute(pstrReqNum)
	if objResult.Next() {
		set dteMinDueDate = objResult.Data("minDueDate")
	} else {
		set dteMinDueDate = ""
	}
	do objResult.%Close()
	
	quit dteMinDueDate
	
	
GetActiveIssueNumber(pstrReqNum)
	;-------------------------------------------------------------------------------
	; Description :
	;	Gets the active issue for this location
	;			
	; Called By :
	;		
	; Inputs : pstrReqNum	Requisition Number
	;
	; ByRef : YLOCATION
	;
	; Returns :
	;
	; History :
	; 15-Aug-2012	PPP		SR18081: Updated with the right GetIssueRoutine
	; 20-Oct-2009	DWR		SR16958: moved set of idType only if Obj set. only set obj
	; 							if a validkey has been passed in.
	; 10-Jun-2009	DWR		SR16544: $$$INReqReqType changed to $$$INReqType; idType
	; **-Jan-2009	HQN		SR16296: Handle Transfers
	; 11-Dec-2007	HQN		Code cleanup, added new
	; 11-Dec-2007	HQN		Added Open Issue to query & constraint for this location
	; 07-Dec-2007	HQN		Changed DemandType value comparison to reflect new
	;							status code (5->7); Added reverse ordering to query,
	;							Checks Line status for Open Status; retrieves latest
	;-------------------------------------------------------------------------------
	new idIssueNo,idType,objUReq
	
	set idIssueNo = $$$NULLOREF  
	if $get(pstrReqNum)'="" {                              //SR16958
	set objUReq   = $get(^INReq(0,pstrReqNum,1))
	 	;set idType    = $$$INReqType(objUReq)  //SR16544  //SR16958
 
	 	///*
		if objUReq '= "" {
			set idType    = $$$INReqType(objUReq)  //SR16544  //SR16958		
			if idType = 1 {                          ; Department
				/* SR18081
				set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
				do objResult.Prepare("SELECT INIssue.IssueNumber FROM INIssue INNER JOIN INIssueLine ON INIssue.IssueNumber = INIssueLine.IssueNumber WHERE INIssue.Reference = ? AND DemandType=7 AND (INIssue.Status = 7 OR INIssue.Status = 3 OR INIssue.Status = 1) AND INIssueLine.Status = 1 AND INIssue.FromLocn = ? GROUP BY INIssueLine.IssueNumber ORDER BY INIssue.IssueNumber DESC") ; get the latest active one, query wrong atm
				do objResult.Execute(pstrReqNum,YLOCATION)
				if objResult.Next() {
					set idIssueNo = objResult.Data("IssueNumber")
				}
				*/
				set idIssueNo = $$GetActiveIssueNumber^INReqIssueAsReq(pstrReqNum)		//SR18081
			
			} elseif idType = 2 {                    ; Transfer
				set idIssueNo = $$GetActiveTransfer^INReqIssueAsReq(pstrReqNum)
		
			} elseif idType = 4 {                    ; Kit
				set idIssueNo = $$GetActiveIssueNumber^INReqIssueAsReq(pstrReqNum)
			}
		}
	}
	quit idIssueNo
	
GetPickDate(pstrReqNum)
	;-------------------------------------------------------------------------------
	; Description :
	;	Get the Pick Printed Date/Time
	;			
	; Called By :
	;		
	; Inputs : pstrReqNum	Requisition Number
	;
	; ByRef : YLOCATION
	;
	; Returns :
	;
	; History :
	; 17-Dec-2014	SCR		SESDF-655: Created
	;-------------------------------------------------------------------------------
	new idTfr,idIss,idType,objUReq,dtPick,objIss,objTfr
	
	set dtPick = $$$NULLOREF  
	if $get(pstrReqNum)'="" {                              //SR16958
	set objUReq   = $get(^INReq(0,pstrReqNum,1))
	 	;set idType    = $$$INReqType(objUReq)  //SR16544  //SR16958
 
	 	///*
		if objUReq '= "" {
			set idType    = $$$INReqType(objUReq)  //SR16544  //SR16958		
			if idType = 1 {                          ; Department
				/* SR18081
				set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
				do objResult.Prepare("SELECT INIssue.IssueNumber FROM INIssue INNER JOIN INIssueLine ON INIssue.IssueNumber = INIssueLine.IssueNumber WHERE INIssue.Reference = ? AND DemandType=7 AND (INIssue.Status = 7 OR INIssue.Status = 3 OR INIssue.Status = 1) AND INIssueLine.Status = 1 AND INIssue.FromLocn = ? GROUP BY INIssueLine.IssueNumber ORDER BY INIssue.IssueNumber DESC") ; get the latest active one, query wrong atm
				do objResult.Execute(pstrReqNum,YLOCATION)
				if objResult.Next() {
					set idIssueNo = objResult.Data("IssueNumber")
				}
				*/
				set idIss = $$GetActiveIssueNumber^INReqIssueAsReq(pstrReqNum)		//SR18081
				if idIss'="" {
					set objIss	= $get(^INIssue(YM,idIss,1))
					set dtPick	= $$$INIssuePickTimestamp(objIss)
				}
			
			} elseif idType = 2 {                    ; Transfer
				set idTfr = $$GetActiveTransfer^INReqIssueAsReq(pstrReqNum) 
				if idTfr'="" {
					set objTfr	= $get(^INTFR(YM,idTfr,1))
					set dtPick	= $$$INTFRPickListPrinted(objTfr)
				}
			}
		
		}
	}
	quit dtPick
	
GetActiveIssue(pidType, pstrReqNum, pidLocation)     ; DEPRECATED  
	;-------------------------------------------------------------------------------
	; Returns the Issue ID for the first record that is still active for this 
	; Requisition ID
	; 
	; History:
	; 03-Jun-2009	PPP		SR16544: Created (Needed as new Req/Issue type 4 (Kit) 
	; 							is added
	;-------------------------------------------------------------------------------
	new idIssueNo,objResult,strSQL
	
	set idIssueNo=""
	
	set objResult = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
	set strSQL 	= 	"SELECT INIssue.IssueNumber FROM INIssue INNER JOIN INIssueLine ON INIssue.IssueNumber = INIssueLine.IssueNumber "_
					"WHERE INIssue.Type = ? AND INIssue.Reference = ? AND DemandType=7 "_
					"AND (INIssue.Status = 7 OR INIssue.Status = 3 OR INIssue.Status = 1) "_
					"AND INIssueLine.Status = 1 AND INIssue.FromLocn = ? "_
					"GROUP BY INIssueLine.IssueNumber ORDER BY INIssue.IssueNumber DESC"
 
	if objResult.Prepare(strSQL) {
		do objResult.Execute(pidType, pstrReqNum ,pidLocation)
		if objResult.Next() {
			set idIssueNo = objResult.Data("IssueNumber")
		}
	}
	
	quit idIssueNo
	
	
GetRequisitionIssues()   ; DEPRECATED?
	;-------------------------------------------------------------------------------
	;			
	; Called By : none found
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	quit
CheckQty(pidIssue)
	;-------------------------------------------------------------------------------
	; Check that all Lines match the Requestion Lines
	; Params:
	;
	; ByRefs: None
	;
	; Returns: Status
	;
	; History:
	; 15-Mar-2013	SCR		HEVA-811: Added More or Less validation
	; 07-Mar-2013	SCR		HEVA-811: Created
	;-------------------------------------------------------------------------------
	new strStatus,idLine,objVORG,arrQty,idReqLine,fltPickQty,objIssue,idReq,objLine
	new objReqLine,fltReqQty
	
	set strStatus 	= $$$OK
	quit:pidIssue="" strStatus ; Fast Exist
	set objVORG		= $get(^INVORG(YM,YM,1))
	
	set objIssue	= $get(^INIssue(YM,pidIssue,1))
	set idReq		= $$$INIssueReference(objIssue)
	quit:idReq="" strStatus ; Fast Exist
	
	set idLine		= ""
	for {
		set idLine		= $order(^INIssueLine(YM,pidIssue,idLine))
		quit:idLine=""
		set objLine		= $get(^INIssueLine(YM,pidIssue,idLine,1))
		set idReqLine	= $$$INIssueLineReference(objLine)
		continue:idReqLine=""
		set arrQty(idReqLine)= $get(arrQty(idReqLine)) + $$$INIssueLineQtyIssued(objLine)
	}	
	set idReqLine	= ""
	for {
		set idReqLine 	= $order(arrQty(idReqLine))
		quit:idReqLine=""
		set fltPickQty	= arrQty(idReqLine)
		set objReqLine	= $get(^INReqLine(YM,idReq,idReqLine,1))
		set fltReqQty 	= $$$INReqLineQtyOrdered(objReqLine)
		if (fltPickQty>fltReqQty) && '$$$INVORGIssueMorethantheRequested(objVORG) {
			set strStatus	=  $listbuild("IN01405",fltPickQty,fltReqQty,idReqLine)  ;Pick Quantity (%1) can not be greater than Requested Quantity (%2) Line (%3)
		}
		if (fltPickQty<fltReqQty) && '$$$INVORGIssueLessthantheRequested(objVORG) {
			set strStatus	=  $listbuild("IN01407",fltPickQty,fltReqQty,idReqLine)  ;Pick Quantity (%1) can not be less than Requested Quantity (%2) Line (%3)
		}
		quit:strStatus'=$$$OK
	}
	
	quit strStatus
	
	
	/*
	
	                   EXAMPLES OF Script Engin e/State Engine USE
	
	
	
	/*
ExecuteRule(pidForm,YM,YKEY="",pstrMethod)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 08-Dec-2008	GRF		SR16218: Changed class signature dREQIssue to dUReqIssue
	; 09-Sep-2008 	Luke	SR15897 Reverted SR15800:
	; 12-Aug-2008	Luke	SR15814: Corrected sc formation and use
	; 17-Jul-2008   Luke    SR15800: Add check if the Conversion has been run
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new blnDoRule,objReq,strStatus, sc 
	
	set strStatus = $$$OK
	set sc = $$$OK 
	set blnDoRule = $$$YES 
	if (YKEY '= "+")||(YKEY '= "") {
		set blnDoRule = $$$NO
	}
	if blnDoRule {
		set objReq = ##class(alREQ.dUReqIssue).%OpenId("0||"_YKEY)
		if objReq'=$$$NULLOREF {		
			set sc = ##class(alSYS.Script.iScriptEngine).RunRule(objReq,pstrMethod,pidForm)
			set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc)
		}
	}
	quit strStatus
	
	
ExecuteStatus(pidForm,YM,YKEY="",pstrMethod)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 08-Dec-2008	GRF		SR16218: Changed class signature dREQIssue to dUReqIssue
	; 09-Sep-2008 	Luke	SR15897 Reverted SR15800:
	; 12-Aug-2008	Luke	SR15814: Corrected sc formation and use
	; 17-Jul-2008   Luke    SR15800: Add check if the Conversion has been run
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new objReq,strStatus,sc
	
	set sc = $$$OK 
	set strStatus = $$$OK
	if (YKEY '= "+") || (YKEY '= "") {
		set objReq = ##class(alREQ.dUReqIssue).%OpenId("0||"_YKEY)
		if objReq'=$$$NULLOREF {		
			set sc = ##class(alSYS.State.iState).ChangeStatusV1(objReq,pstrMethod,pidForm)
			set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc)
		}
	}
	quit strStatus
	*/
	
	/*
FirmIssue(pYKEY,&pYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;	pYKEY
	;
	; ByRef :
	;	pYFELD
	; 
	; Implicit :
	;	YKEY
	;	YFORM
	;	YM
	;	YQ
	;
	; Returns :
	;
	; History :
	; 11-Dec-2007	HQN		Code cleanup, added new
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	; FIXME : see firmcheck comments
	new strStatus
	
	set strStatus = $$$YES
	//set strStatus = $$ExecuteStatus(YFORM,YM,YKEY,"Firm") 
	
	
	if $$$ISOK(strStatus) {
		do ^WWWFORM
	} else {
		do ReturnError^COMUtilError(strStatus)
	}
	
	$$$YQHandler(strStatus)	
	quit 
	*/
		
]]></Routine>
</Export>