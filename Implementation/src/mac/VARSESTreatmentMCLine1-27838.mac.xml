<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESTreatmentMCLine1" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include WWWConst
#include INConst
#include VARSESConst 
#include VARConst 
#include VARSESTreatmentMC
#include COMConst
#include COMSYS
 
VARSESTreatmentMCLine1
 
OnLineAdded(pintRowCount="",pstrKey="") 
    ;-------------------------------------------------------------------------------
    ; When a discount line is added, check if it's dirty, ie the user was the last
    ; to modify the value, even when last saved.
    ;
    ; Params:
    ; pintRowCount: The row number added
    ; pstrKey     : The YKEY or the row and owner
    ;
    ; Returns:
    ;
    ; History:
    ; 17-Aug-2005	RobertW		SR11983: Created
    ;-------------------------------------------------------------------------------
	new objTMCLine2
 		
	quit
 
OnAfterPrimaryKey(pYKEY,pYFELD)
	new idTMC, idTMCLine, idTMCLine1
	
	set QTYConsumedLine1 = 0
	set idTMC = $piece(pYKEY,YKOMMA,1)
	set idTMCLine1 = $piece(pYKEY,YKOMMA,2)
 	set idTMCLine = $$$VARSESTreatmentMCLine1Parent(pYFELD)
	set QTYConsumedLine1 = $$GetQtyConsumedOnMonth^VARSESPatientConsumptionMCLog(idTMC,idTMCLine,idTMCLine1)
	set TXTMonth = $$GetLine1TxtMonth(idTMC,idTMCLine1)
	set TXTNumber = idTMCLine _ "." _ $$GetMonth(idTMC,idTMCLine1)
	quit
 
	;;===================== 
 
GetTotalLineQty(pidTreatment,pidLine)
    /*-------------------------------------------------------------------------------
    ; Returns the total quantity of a line
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	$$$VAR
	
	new idTMCLine1, fltQty, idxLine, objTMCLine1
	
	set fltQty = 0
	set idTMCLine1 = ""
 
	set idxLine = $$$Index(pidLine)
	for {
		set idTMCLine1 = $order(^VARSESTreatmentMCLine1s(YM,1,idxLine,pidTreatment,idTMCLine1))	
		quit:(idTMCLine1 = "")
		set objTMCLine1 = $get(^VARSESTreatmentMCLine1(YM,pidTreatment,idTMCLine1,1))	
		set fltQty = $$$VARSESTreatmentMCLine1QuantityperMonth(objTMCLine1) + fltQty
	}
	quit fltQty
 
GetCurrentMonth(pidTreatment,pstrDate="")
    /*-------------------------------------------------------------------------------
    ; Return the id (integer starting from 1) of the Line1 Month associated with the 
    ; current month, if it is first(1), second(2), and so on......counting from the
    ; month of first consumption
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
	; 02-Feb-2010   sósthenes   Modified
    ;-------------------------------------------------------------------------------*/
	new idTMCLine1,strFirstDate, strCurrDate, intFirstMonth, intFirstYear, 
		intCurrMonth, intCurrYear, idMonth
 	;for i=1:1:999 hang 1
 	
	set idTMCLine1 = ""
	quit:((pidTreatment = "")||((pidTreatment = "+"))) idTMCLine1
		set strFirstDate = $$GetFirstConsumptionDate^VARSESPatientConsumptionMCLog(pidTreatment)
	; if no consumption yet, returns first idMonth
	quit:(strFirstDate = "") 1
 
 	; parte modificada para relatório da data de retorno
 	; set strCurrDate = $piece($horolog,Y,1)
	if (pstrDate = "") {
		set strCurrDate = $piece($horolog,Y,1)
	} else {
		set strCurrDate =  $piece(pstrDate,Y,1)
	}
	
	set strFirstDate = $$GetMonthYear^VARSESPatientConsumptionMCLog(strFirstDate)
	set intFirstMonth = $piece(strFirstDate,Y,1)
	set intFirstYear = $piece(strFirstDate,Y,2)
	
	set strCurrDate = $$GetMonthYear^VARSESPatientConsumptionMCLog(strCurrDate)
	set intCurrMonth = $piece(strCurrDate,Y,1)
	set intCurrYear = $piece(strCurrDate,Y,2)
	
	if (intFirstYear = intCurrYear) {
		set idMonth = intCurrMonth + 1 - intFirstMonth
	} else {
		set idMonth = (12 + 1 - intFirstMonth)
		set idMonth = idMonth + intCurrMonth
		set idMonth = +idMonth + ((intCurrYear - intFirstYear - 1) * 12)
	} 
	quit idMonth
 
GetMonthFromLine1(pidTreatment,pidLine1)
    /*-------------------------------------------------------------------------------
    ; Return the text  (Jan,Feb,Mar,...) month of the provided Line1
    ; Called from Jasper report
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 05-Oct-2009	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	do ^WWWVAR
	set SPRACHE="PT"
 	quit $$GetLine1TxtMonth(pidTreatment,pidLine1) 
 
GetLine1TxtMonth(pidTreatment,pidLine1)
    /*-------------------------------------------------------------------------------
    ; Return the text  (Jan,Feb,Mar,...) month of the provided Line1
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new intLineMonth, strStatusTMC, intStartMonth, strMonth, strFirstDate, idKey2,
		idLinePrevious, intMonth, intCount, intCountPrevious, idKey, strKey, idParent
	
	set strMonth = ""
	quit:((pidTreatment = "") || (pidLine1 = "")) strMonth
	;quit:( $data(^VARSESTreatmentMCLine1(YM,pidTreatment,pidLine1,1))= 0) strMonth
	
	// no data available yet, get month another way
	// then do it only if editable
	if ( $data(^VARSESTreatmentMCLine1(YM,pidTreatment,pidLine1,1))= 0) {
 
		set intMonth = $piece($zdate($horolog,4),"/",2)
		set strMonth = $$GetTxtMonth(intMonth,1)
		;^WWWDATEN(0,61344,6073257,"VARSESTreatmentMCLine1","V","REFERENCEKEY",4,1)=10000085,2
		set idKey = ""
		for {
			set idKey = $order(^WWWDATEN(0,+$horolog,YUSER,"VARSESTreatmentMCLine1","V","REFERENCEKEY",idKey))
			quit:(idKey = "")
			set strKey = $get(^WWWDATEN(0,+$horolog,YUSER,"VARSESTreatmentMCLine1","V","REFERENCEKEY",idKey,1))
			if (($piece(strKey,YKOMMA,1) = pidTreatment) && ($piece(strKey,YKOMMA,2) = pidLine1)) {
				set idParent = ""
				for {
					set idParent = $order(^WWWDATEN(0,+$horolog,YUSER,"VARSESTreatmentMCLine1","V","PARENT",idParent))
					quit:(idParent = "")
					if ($data(^WWWDATEN(0,+$horolog,YUSER,"VARSESTreatmentMCLine1","V","PARENT",idParent,idKey)) > 0) {
						set intCount = 0
						set idKey2 = ""
						for {
							set idKey2 = $order(^WWWDATEN(0,+$horolog,YUSER,"VARSESTreatmentMCLine1","V","PARENT",idParent,idKey2))
							quit:(idKey2 = "")
							set intCount = intCount + 1
							quit:(idKey2 = idKey)
						}
						set intLineMonth = intCount
					}
				}
			}
		}	
	} else {
		set intLineMonth = $$GetMonth(pidTreatment,pidLine1)
	}	
 
	set strStatusTMC = $$StatusTreatmentMC^VARSESTreatmentMC(pidTreatment)
	set intStartMonth = $piece($$GetMonthYear^VARSESPatientConsumptionMCLog($horolog),Y,1)
	if (strStatusTMC '= $$$TMCEditable) {
		set strFirstDate = $$GetFirstConsumptionDate^VARSESPatientConsumptionMCLog(pidTreatment)
		if (strFirstDate '= "") {
			set strFirstDate = $$GetMonthYear^VARSESPatientConsumptionMCLog(strFirstDate)
			set intStartMonth = $piece(strFirstDate,Y,1)
		}	
	}
	if '$data(intLineMonth)	set intLineMonth = $$GetMonth(pidTreatment,pidLine1) + 1
	set strMonth = $$GetTxtMonth(intLineMonth,intStartMonth)
	
	quit strMonth
 
GetTxtMonth(pintMonth,pintStartMonth)
    /*-------------------------------------------------------------------------------
    ; Return the text  (Jan,Feb,Mar,...) month 
    ;
    ; Params:
    ; 			pintMonth		-	number 1,2,3..........24...48
    ; 			pintStartMonth	-	number 1...12 of reference base month
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new intMonthEnd, strMonth 
	
	set intMonthEnd = pintMonth + pintStartMonth -1 
	set intMonthEnd = intMonthEnd # 12
	if intMonthEnd = 0 set intMonthEnd = 12
	set strMonth = $piece($get(^WWW009(0,SPRACHE,30023,1)),",",intMonthEnd)
	set strMonth = $translate(strMonth, " ", "")
	set strMonth = $translate(strMonth, "~", "")
 
	quit strMonth
	
	
GetMonth(pidTreatment,pidLine1)
    /*-------------------------------------------------------------------------------
    ; Return the sequential month number (1,2,3...) 
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new objTMCL1,idParent,idxParent,intMonth, idLine
 
	set objTMCL1 = $get(^VARSESTreatmentMCLine1(YM,pidTreatment,pidLine1,1))
	set idParent = $$$VARSESTreatmentMCLine1Parent(objTMCL1)
	set idxParent = $$$Index(idParent)
 
	set intMonth = 0
	set idLine = ""
	for {
		set idLine=$order(^VARSESTreatmentMCLine1s(YM,1,idxParent,pidTreatment,idLine))	
		quit:(idLine = "")
		set intMonth = intMonth + 1
		quit:(idLine = pidLine1)
	}
	quit intMonth
 
GetMonthFromLine(pidTreatment,pidLine1)
    /*-------------------------------------------------------------------------------
    ; Return the sequential month number (1,2,3...) 
    ; Called from Jasper report
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	do ^WWWVAR
 	quit $$GetMonth(pidTreatment,pidLine1)
	
 
GetThisMonthLineQty(pidTreatment="", pidLine="", pstrDate="")
    /*-------------------------------------------------------------------------------
    ; Return the qty defined for the current month
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new fltQty, intMonthCount, idMonth, objLine1, loop, idxLine
	;for i=1:1:999 hang 1
	
	
	
	set idxLine = $$$Index(pidLine)
	set fltQty = 0
	
	quit:((pidTreatment="") || (pidTreatment="+"))
	
	; parte modificada para relatório de data retorno
	; set intMonthCount = $$GetCurrentMonth(pidTreatment)
	if (pstrDate '= "") {
		set intMonthCount = $$GetMonthFromDate(pidTreatment,pstrDate)
	} else {
		set intMonthCount = $$GetCurrentMonth(pidTreatment)	
	}
	
	if (intMonthCount '= "") {
		
		set idMonth = ""
		for loop = 1:1:intMonthCount {
			set idMonth = $order(^VARSESTreatmentMCLine1s(YM,1,idxLine,pidTreatment,idMonth))
			quit:(idMonth = "")
		}
		if (idMonth '= "") {
			set objLine1 = $get(^VARSESTreatmentMCLine1(YM,pidTreatment,idMonth, 1))
			if (objLine1 '= "") {
				set fltQty = $$$VARSESTreatmentMCLine1QuantityperMonth(objLine1)	
			}
		}
	}
	quit fltQty
	
GetThisMonthLineQty1(pidTreatment="", pidLine="", pstrDate="")
     
     
   $$$VAR
   quit $$GetThisMonthLineQty(pidTreatment, pidLine, pstrDate)
 
	
GetLineDuration(pidTreatment, pidLine)
    /*-------------------------------------------------------------------------------
    ; Return line duration based on entered months per line
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 06-Oct-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new intDuration, idMonth, idxLine
	
	set intDuration = 0
	set idMonth = ""
	
	set idxLine = $$$Index(pidLine)
	for {
		set idMonth = $order(^VARSESTreatmentMCLine1s(YM,1,idxLine,pidTreatment,idMonth))	
		quit:(idMonth = "")
		set intDuration = intDuration + 1
	}
	quit intDuration	
	
IsLine1NotEditable(pYKEY,pYFELD)	
	new idTMC, idLine
	
	set idTMC = $piece(pYKEY,YKOMMA,1)
	
	quit:($$IsTreatmentNotEditable^VARSESTreatmentMC(idTMC)) $$$OK
	
	set idLine = $$$VARSESTreatmentMCLine1Parent(pYFELD)
	quit $$IsCancelled^VARSESTreatmentMCLine(idTMC,idLine)
	
GetMonthLineQtyByDate(pidTreatment="", pidLine="", pstrDate="")
    /*-------------------------------------------------------------------------------
    ; Return the qty to be dispensed at the provided date 
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 24-Jan-2010	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
    new fltQty, intCurrMonth, intCurrYear, strDate, intMonth, intYear, fltQuantity, fltConsumed
 
	set strDate = $$GetMonthYear^VARSESPatientConsumptionMCLog($horolog)
	set intCurrMonth = $piece(strDate,Y,1)
	set intCurrYear = $piece(strDate,Y,2)
			
	set strDate = $$GetMonthYear^VARSESPatientConsumptionMCLog(pstrDate)
	set intMonth = $piece(strDate,Y,1)
	set intYear = $piece(strDate,Y,2)
 
 
	if ((intMonth = intCurrMonth) && (intYear = intCurrYear)) {
		set fltQuantity = $$GetThisMonthLineQty^VARSESTreatmentMCLine1(idTMC, idTMCLine)
		set fltConsumed = $$GetQtyConsumedCurrMonth^VARSESPatientConsumptionMCLog(idTMC, idTMCLine)
		set fltQty = fltQuantity - fltConsumed
	} else {
		set fltQty = $$GetThisMonthLineQty(pidTreatment, pidLine, pstrDate)
	}	
	quit fltQty
	
GetMonthFromDate(pidTreatment,pstrDate)
    /*-------------------------------------------------------------------------------
    ; Return the id (integer starting from 1) of the Line1 Month associated with the 
    ; provided month, if it is first(1), second(2), and so on......counting from the
    ; month of first consumption
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 24-Jan-2010	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new strDate
	set strDate = $$GetCurrentMonth(pidTreatment,pstrDate)
	quit strDate
 
	
]]></Routine>
</Export>