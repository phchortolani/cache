<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESSOLICPRECO" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESSOLICPRECO
#include COMConst
#include INConst
#include WWWConst
#include FIN
#include VARConst
#include COMSYS
	
OnAfterDataFields(pYKEY,pYFELD,pYSEITE)
 
	IF YSEITE=1 {
		do LoadGrid(pYKEY)
		do LoadTablePregao(pYKEY)
	}
	
 	quit
 	
 
LoadGrid(pid="")
 
	new objInvoice,YFORM,YKEY,YAUSWAHL,YFELD,objVARTRKATARequest,strData
	set YFORM="VARSESSOLICPRECOLinha"
	set YFELD=""
	set YKEY=$get(pid)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=290
	set $$$COMGridEditParameterGridName(YAUSWAHL)=YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)='($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARSESSOLICPRECO"
	
	do ^COMGridEdit31
	
	quit
 
 
OnBeforeSave(pYKEY,pYFELD)
 
	new strStatus
	set strStatus=$$$GRIDSave(pYKEY)
	if $$$ISOK(strStatus) {
	} else {
		set Q=$$$QDontSave
	}
	quit
	
OnAfterDelete(pYKEY)
 
	do DELETE^COMGridEdit31Interface()
	quit
	
OnBlurLine(pintCol,pintRow,&pobjYFELD)
 
	new Produto, objProduto, UnidadeMedida, idLocal, estoquePrincipal, EstoqueCentral, objSRP, NaturezaPedido, ProdutoNatureza, idProduto, strStatus
 	
	//Item Data
	set Produto = $piece(pobjYFELD,Y,1)			
	
	if Produto = "" {
		set $piece(pobjYFELD,Y,2)  = ""
		set $piece(pobjYFELD,Y,3)  = ""
		set $piece(pobjYFELD,Y,8)  = ""
		set $piece(pobjYFELD,Y,9)  = ""
		set $piece(pobjYFELD,Y,10) = ""
		quit
	}
				
	set objProduto 		 = $get(^INART(0,Produto,1))	
	set UnidadeMedida	 = $$$INARTUnitofMeasure(objProduto)
	set grupo			 = $$$INARTItemGroup(objProduto)
	set estoquePrincipal = $$$INARTFREE35(objProduto)
	set ProdutoNatureza  = $$$INARTFREE1(objProduto)
	set idProduto 		 = Produto
	set blnErro 		 = $$$NO
	set strStatus		 = $$$OK
 	
 	set objSRP			 = $get(^VARSESSOLICPRECO(YM,$$$KEY1(YKEY),1))
 	set idLocal 		 = $$$VARSESSOLICPRECOSetorSolicitante(objSRP)
 	set NaturezaPedido   = $$$VARSESSOLICPRECONaturezadaEntrada(objSRP)
 	
	if ((NaturezaPedido >= 1) && (NaturezaPedido <= 4)) { //SRP's de Estoque
		
		if ((ProdutoNatureza = 5) || (ProdutoNatureza = 6)) { //Produto é patrimônio ou uso específico
			set strStatus = "0 A natureza de fornecimento do produto não confere com a natureza de entrada da SRP."
		}	
		
		elseif ($extract(idProduto,1) = "P") { // idProduto começa com P
			set strStatus = "0 O código do produto começa com P. A natureza de entrada da SRP não é patrimônio."
		}	
	}
	elseif NaturezaPedido = 5 { //SRP de Patrimônio

		if ($extract(idProduto,1) '= "P") {
			set strStatus = "0 O código do produto não começa com P."
		}

		elseif ($extract(idProduto,1) = "P") && (ProdutoNatureza '= 5)  {
			set strStatus = "0 A natureza de fornecimento do produto não é patrimônio."
		}		
	}
	elseif NaturezaPedido = 6 { // SRP de Uso Específico				
	
		if ProdutoNatureza '= 6 {
			set strStatus = "0 A natureza de fornecimento do produto não é uso específico."
		}
	
		elseif ($extract(idProduto,1) = "P") { // Produto começa com P
			set strStatus = "0 O código do produto começa com P. A natureza de entrada da SRP não é patrimônio."
		}			
	}
	elseif NaturezaPedido = 7 { // SRP de recebimento regional
		if ((ProdutoNatureza = 5) || (ProdutoNatureza = 6)) { //Produto é patrimônio ou uso específico
			set strStatus = "0 A natureza de fornecimento do produto não confere com a natureza de entrada da SRP."
		}	
	
		elseif ($extract(idProduto,1) = "P") { // idProduto começa com P
			set strStatus = "0 O código do produto começa com P. A natureza de entrada da SRP não é patrimônio."
		}	
	}
 	
 	if ($$$ISOK(strStatus)){
		set blnErro = $$ValidaItemJaIncluso(idProduto) 	
 	}
 	
 	if ($$$ISERR(strStatus)){
 		$$$StartScript()
 			write "alert('"_$$DecodeError^COMUtilError(strStatus)_"');"
 		$$$EndScript()
 		set $piece(pobjYFELD,Y,1)  = ""
 		quit
 	}

	set EstoqueCentral   = $$GetEstoqueFisicoCentral^VARReposicao(Produto)
	
	set $piece(pobjYFELD,Y,2)  = grupo
	set $piece(pobjYFELD,Y,3)  = UnidadeMedida
	set $piece(pobjYFELD,Y,8)  = EstoqueCentral
	set $piece(pobjYFELD,Y,9)  = $$GetCMM^VARReposicao(Produto)
	set $piece(pobjYFELD,Y,10) = $$GetCoberturaEstoque^VARReposicao(Produto)
	
	quit 
	
ValidaItemJaIncluso(pidProduto)

	new strStatus
	
	set strStatus = $$$OK
	
	if $$$ISOK(strStatus) {
		//Checking if the item was already used
		set strListItemCodes = $$GetItensJaIncluidos()
	
		set strDate = $piece($horolog, YKOMMA, 1)
		set strFocusField = $get(^WWWDATEN(0, strDate, YUSER, "VARSESSOLICPRECOLinha","V", "FOCUSFIELD"))
		set intCurrentLine = $extract($piece(strFocusField, "_", 1), 2,
			$length(strFocusField))
	
		set blnItemJaIncluido = $$$NO
	
		for intGridLine = 1:1:$length(strListItemCodes, Y) {
			continue:(intGridLine = intCurrentLine)
 
			if ($piece(strListItemCodes, Y, intGridLine) = idProduto) {
				set blnItemJaIncluido = $$$YES
				quit
			}
		}
 
		if (blnItemJaIncluido) {
			// Searches for the "Seq." value of the grid line:
			set intSeq = ""
			for {
				set intSeq = $order(^WWWDATEN(0, strDate, YUSER, "VARSESSOLICPRECOLinha",
					"V", "REFERENCEROW", intSeq))
				quit:(intSeq = "")
 
				quit:($get(^WWWDATEN(0, strDate, YUSER, "VARSESSOLICPRECOLinha",
					"V", "REFERENCEROW", intSeq, 1)) = intGridLine)
			}
 
			set $piece(pobjYFELD, Y, 1) = ""
			set strStatus = "O produto '"_idProduto_"' já foi incluído em outra linha da SRP (Seq. = "_intSeq_")."
		}
	}
	
	quit strStatus
	
GetItensJaIncluidos()

	new strListItemCodes, strDate, intGridColItemCode, intGridLine, intItemCode
	
	set strListItemCodes = ""
 
	// Loop on grid lines:
	set strDate = $piece($horolog, YKOMMA, 1)
	set intGridColItemCode = 1
	set intGridLine = 0
	for {
		set intGridLine = $increment(intGridLine)
		set intItemCode = $get(^WWWDATEN(0,strDate,YUSER,"VARSESSOLICPRECOLinha","V", "Y"_intGridLine_"_"_intGridColItemCode,1))
		quit:(intItemCode = "")
 
		continue:(+$get(^WWWDATEN(0,strDate,YUSER,"VARSESSOLICPRECOLinha","V","KILLEDRECORD",intGridLine)))
 
		set $piece(strListItemCodes, Y, intGridLine) = intItemCode
	}
 
	quit strListItemCodes

CanProcess(idVARSESSOLIC,objVARSESOLIC)
	;-------------------------------------------------------------------------------
    ; Verifica se é possível processar o documento
    ;
    ; History:
    ; 10-Sep-2012	Marcelo Ottoni	Created
    ;-------------------------------------------------------------------------------	
 
	new idItem, strInativo
	
	if idVARSESSOLIC="" quit
	set YQ = $$$YQEnable
	if $$$VARSESSOLICPRECOStatus(objVARSESOLIC)=1 {
		set YQ = 1_"Essa SRP já foi processada."
		quit
	}
	if $$$VARSESSOLICPRECOStatus(objVARSESOLIC)=3 {
		set YQ = 1_"Essa SRP já foi processada e foi cancelada."
		quit
	}
	set idVARSESSOLICLine=""
	set idVARSESSOLICLine=$order(^VARSESSOLICPRECOLinha(YM,idVARSESSOLIC,idVARSESSOLICLine))
	if idVARSESSOLICLine="" {
		set YQ = 1_"Toda SRP requer uma linha!"
		quit
	}
 
	set strInativo = ""
	while idVARSESSOLICLine'= "" {
		set objVARSESOLICLine=$get(^VARSESSOLICPRECOLinha(YM,idVARSESSOLIC,idVARSESSOLICLine,1))
		if (($piece(objVARSESOLICLine,Y,4)<=0) || ($piece(objVARSESOLICLine,Y,4)="")) {
			set YQ = 1_"Toda linha da SRP requer uma quantidade!"
			quit
		}
		
		set idItem = $piece(objVARSESOLICLine,Y,1)
		if idItem = "" {
			set YQ = 1_"Toda linha requer um produto!"
			quit
		}
		if ($$getItemStatus^VARTRKINART(idItem) > 0) {		
			if strInativo = "" { 
				set strInativo = idItem 
			}
			elseif strInativo '= "" {
				set strInativo = strInativo_", "_idItem 
			}
		}
		set idVARSESSOLICLine=$order(^VARSESSOLICPRECOLinha(YM,idVARSESSOLIC,idVARSESSOLICLine,1))
	}
	
	if strInativo '= "" {		
		set YQ = 1_"Atenção, os seguintes produtos estão inativos: "_strInativo_"."_$char(10)_"Não é possível criar SRPs de produtos que estão inativos."
		quit
	}
	
	if YQ'=0 quit
	set YQ = $$$YQEnable
	quit
 
ProcessarSRP(pYKEY)
	;-------------------------------------------------------------------------------
    ; Seta o status da SRP para Processado
    ;
    ; History:
    ; 10-Sep-2012	Marcelo Ottoni	Created
    ;-------------------------------------------------------------------------------	
	quit:(pYKEY = "")
	
	new strStatus, objSRP
	set strStatus = $$$OK
	
	set objSRP = $get(^VARSESSOLICPRECO(YM,pYKEY,1))			
	
	if $$$VARSESSOLICPRECOStatus(objSRP)'=1 {
	
		set $$$VARSESSOLICPRECOStatus(objSRP)=1
		
		set strStatus = $$$Save("VARSESSOLICPRECO",pYKEY,objSRP,1)
		
		if ($$$ISOK(strStatus)){ // Altera o status das linhas para 1 (Aguardando Pregão)
			set strStatus = $$AtualizaStatusLinha(pYKEY,"",1)
		}
	
		if $$$ISERR(strStatus) { 
			$$$StartScript()
			w "alert('Não foi possível processar o documento. Favor verificar.');"
			$$$EndScript()
		}	
		
		do GoToForm^COMUtilForm("VARSESSOLICPRECO",pYKEY)	
	}
		
	quit
	
CanRevisar(pYKEY)
	;-------------------------------------------------------------------------------
    ; Verifica se a SRP admite ser revisada
    ;
    ; History:
    ; 10-Sep-2012	Marcelo Ottoni	Created
    ;-------------------------------------------------------------------------------	
 	quit:(pYKEY = "")
 	
 	new statusSRP, objSRP	
 
	set objSRP = $get(^VARSESSOLICPRECO(YM,pYKEY,1))			
	set statusSRP = $$$VARSESSOLICPRECOStatus(objSRP)
 
	if $data(^VARPregaos(YM,1,$$$Index(pYKEY))) {
		set YQ = $$$YQDisable("Esta SRP foi associada a um pregão e não é mais possível revisá-la.")	
	
	} elseif (statusSRP = "") {
		set YQ = $$$YQDisable("Esta SRP já está em modo de edição.")
	
	} else { 
		set YQ = $$$YQEnable
	}
	
	quit
	
RevisarSRP(pYKEY)
	;-------------------------------------------------------------------------------
    ; Seta o status da SRP vazia (não firmado)
    ;
    ; History:
    ; 10-Sep-2012	Marcelo Ottoni	Created
    ;-------------------------------------------------------------------------------	
	quit:(pYKEY = "")
	
	new strStatus, objSRP
	set strStatus = $$$OK
	
	set objSRP = $get(^VARSESSOLICPRECO(YM,pYKEY,1))			
	
	if $$$VARSESSOLICPRECOStatus(objSRP)=1 {
	
		set $$$VARSESSOLICPRECOStatus(objSRP)=""
		
		set strStatus = $$$Save("VARSESSOLICPRECO",pYKEY,objSRP,1)
	
		if $$$ISERR(strStatus) { 
			$$$StartScript()
			w "alert('Não é possível revisar a SRP. Favor verificar.');"
			$$$EndScript()
		}	
		
		do GoToForm^COMUtilForm("VARSESSOLICPRECO",pYKEY)	
	}
		
	quit
	
GetPregao(pidSRP)
	;-------------------------------------------------------------------------------
    ; Retorna o pregão associado a esta SRP.
    ;
    ; History:
    ; 11-Sep-2012	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------	
	quit:(pidSRP = "") ""
	
	$$$VAR
	new idPregao
	set idPregao = $order(^VARPregaos(YM,1,$$$Index(pidSRP),""))
 
	quit idPregao
	
GetQtdeItensSRP(pidSRP)
	quit:(pidSRP = "") ""
	$$$VAR
	new countLinhas, idLinhaSRP
	set countLinhas = 0
	
	$$$Order3(^VARSESSOLICPRECOLinha,YM,pidSRP,idLinhaSRP)		
		set countLinhas = $increment(countLinhas)	
	$$$End
	
	quit countLinhas
	
	
OnBeforeDataAccessCallback(YFORM,YKEY)
	;-------------------------------------------------------------------------------
    ; Filtra os dados da classe. *NÃO* foi implementado como um Hook, mas como um 
    ; evento da definição da classe na aba "Callback (Retorno)".
    ; 
    ; History:
    ; 13-Mar-2013	Gustavo Fiuza		Created
    ;-------------------------------------------------------------------------------
	new blnDataAccess, objSRP
	set blnDataAccess = $$$YES	
	
	if YBED '= "GUSTAVO" quit 1
	
	//Filtro é aplicado SOMENTE na consulta de SRP da tela de pregão
	if (YFORM = "VARPregao") {
		set objSRP = $get(^VARSESSOLICPRECO(YM,YKEY,1))
 
		;Não mostra SRPs que não estiverem processadas
		if $$$VARSESSOLICPRECOStatus(objSRP) '= 1 { ;1-Processado
			set blnDataAccess = $$$NO
		}
		
		;Não mostra SRPs que já foram inseridas em outros pregões
		if $data(^VARPregaos(YM,1,$$$Index(YKEY))) {
			set blnDataAccess = $$$NO	
		}		
	}
    
    quit blnDataAccess
    
    
LoadTablePregao(pidSRP)
	quit:($$$NoKey(pidSRP))
 
	new lstHeader, objPregao, noProcesso, dteAbertura
	
	if $data(^VARPregaos(YM,1,$$$Index(pidSRP))) {
 
	 	set lstHeader = ""
	  	set lstHeader = lstHeader_$listbuild("No. Pregão","No. Processo","Abertura do Pregão","Encerramento do Pregão","Qtde. Itens Aguard.","Qtde. Itens Fracassados","Qtde. Itens Aceitos","Total de Itens")
	  	
	  	if $$Start^COMTable(lstHeader,"Pregão associado a esta Solicitação de Registro de Preço",,,$$$NO) {
	
			$$$Order4(^VARPregaos,YM,1,$$$Index(pidSRP),idPregao)
				
				set objPregao   = $get(^VARPregao(YM,idPregao,1))
				set noProcesso  = $$$VARPregaoNumeroProcesso(objPregao)
				set dteAbertura = $$$VARPregaoDataAbertura(objPregao)
				set dteEncerram = $$$VARPregaoDataEncerramento(objPregao)
				
				set:(dteAbertura '= "") dteAbertura = $zdate(dteAbertura,4)
				set:(dteEncerram '= "") dteEncerram = $zdate(dteEncerram,4)
				
				set qtdeAguard 	 = +$$GetQuantItensSituacao^VARPregaoLinha(idPregao,0)
				set qdteFracasso = +$$GetQuantItensSituacao^VARPregaoLinha(idPregao,1) + $$GetQuantItensSituacao^VARPregaoLinha(idPregao,2) + $$GetQuantItensSituacao^VARPregaoLinha(idPregao,3)
				set qtdeAceitos  = +$$GetQuantItensSituacao^VARPregaoLinha(idPregao,4)
				
				set qtdeTotal = +(qtdeAguard + qdteFracasso + qtdeAceitos)
				
				do NewLine^COMTable()
				do InsertCell^COMTable(idPregao,"VARPregao",idPregao)
				do InsertCell^COMTable(noProcesso,"VARPregao",idPregao)
				do InsertCell^COMTable(dteAbertura,"VARPregao",idPregao,,"center")
				do InsertCell^COMTable(dteEncerram,"VARPregao",idPregao,,"center")
				do InsertCell^COMTable(qtdeAguard,"VARPregao",idPregao,,"right")
				do InsertCell^COMTable(qdteFracasso,"VARPregao",idPregao,,"right")
				do InsertCell^COMTable(qtdeAceitos,"VARPregao",idPregao,,"right")
				do InsertCell^COMTable(qtdeTotal,"VARPregao",idPregao,,"right")
				do EndLine^COMTable()
		
			$$$End
			
			do Stop^COMTable()
	  	}
		
	}
	
	quit
 
checkSRPVinculado(pSRP)
	quit:(pSRP = "") 0
	new countSRPVinculada
	
	&sql(SELECT COUNT(*)
	INTO :countSRPVinculada
	FROM SQLUser.VARPREGAO
	WHERE NumeroSRP = :pSRP)
	
	if (SQLCODE) quit 0
	
	quit countSRPVinculada
	
isItemSRPAssociadoPregao(pYKEY)
	quit:(pYKEY = "") $$$NO
 
	new idSRP, idSRPLinha
	
	set idSRP 	   = $$$KEY1(pYKEY)
	set idSRPLinha = $$$KEY2(pYKEY)
	
	if $data(^VARPregaoLinhas(YM,2,idSRP,idSRPLinha)) {
		quit $$$YES
	}
 
	quit $$$NO
	
GetSRPs(pidItem)
	quit:(pidItem = "") ""
	
	new idSRP, idSRPLinha, idStatus
	
	set returnString = ""
	
	$$$Order3(^VARSESSOLICPRECOLinhas,YM,3,idStatus)
		continue:((idStatus '= 0) && (idStatus '= 1) && (idStatus '= 2) && (idStatus '= 3))
		$$$Order5(^VARSESSOLICPRECOLinhas,YM,3,idStatus,pidItem,idSRP)
			$$$Order6(^VARSESSOLICPRECOLinhas,YM,3,idStatus,pidItem,idSRP,idSRPLinha)
				if returnString = "" {
					set returnString = idSRP_"||"_idSRPLinha
				} else {
			    	set returnString = returnString_";"_idSRP_"||"_idSRPLinha
				}			
			$$$End
		$$$End
	$$$End
	
	quit returnString

getSRPByNumProcesso(pNumProcesso)
	quit:(pNumProcesso = "") 0
	new numSRP
	
	&sql(SELECT NumerodoPAM
	INTO :numSRP
	FROM SQLUser.VARSESSOLICPRECO
	WHERE NumerodoProcesso = :pNumProcesso)
	
	if (SQLCODE) quit 0
	
	quit numSRP
GetQtdAbertaPorItem(pItem, pLocal)
	new qtdAberta
	quit:((pItem = "") || (pLocal = "")) ""
	
	&sql(SELECT SUM(SRPLinha.Quant)
	INTO :qtdAberta
	FROM SQLUser.VARSESSOLICPRECOLinha AS SRPLinha
	INNER JOIN SQLUser.VARSESSOLICPRECO AS SRP ON SRP.NumerodoPAM = SRPLinha.ID1
	WHERE SRPLinha.CdigoDescrio = :pItem
	AND SRP.SetorSolicitante = :pLocal
	AND SRPLinha.Status in (0, 1, 2, 3) )
	
	if (SQLCODE) quit ""
	
	quit +qtdAberta
	
AtualizaStatusLinha(pSRP,pLinha="",pStatus)
	quit:(pSRP = "") 0_"SRP não encontrada"
	new idLinha, objSRPLinha, strStatus
	
	set strStatus = $$$OK
	
	if ($get(pLinha) = ""){
		set idLinha = ""
		for {
			set idLinha = $order(^VARSESSOLICPRECOLinha(YM,pSRP,idLinha))
			quit:(idLinha = "")
			set objSRPLinha = $get(^VARSESSOLICPRECOLinha(YM,pSRP,idLinha,1))	
			set $$$VARSESSOLICPRECOLinhaStatus(objSRPLinha) = pStatus
			set strStatus = $$$Save("VARSESSOLICPRECOLinha",pSRP_$$$COMMA_idLinha,objSRPLinha,$$$YES)
		}	
	} else {
		set idLinha = pLinha
		set objSRPLinha = $get(^VARSESSOLICPRECOLinha(YM,pSRP,idLinha,1))	
		set $$$VARSESSOLICPRECOLinhaStatus(objSRPLinha) = pStatus
		set strStatus = $$$Save("VARSESSOLICPRECOLinha",pSRP_$$$COMMA_idLinha,objSRPLinha,$$$YES)
	}
			
	quit strStatus
]]></Routine>
</Export>