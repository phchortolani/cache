<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPROSTEMP0" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPROSTEMP0(STEMP,YRETURN)
#include COMSYS
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		AUFBAUEN DER INPROSTEMP0 AUS WWW013Z
	;
	; Inputs : 
	;	STEMP		FERTIGUNGSNUMMER
	;	YRETURN		SORTIERUNG DER RÜCKGABE-WERTE: ;the 
	;				"" = RÜCKGABE DER GESAMTZEIT 'ZEIT(0)' UNTER BERÜCKSICHTIGUNG DER ARBEITS/PAUSENZEITEN
	;				 1 = RÜCKGABE DER EINZELWERTE JE ARBEITSGANG (STEMPEL-UNTERNUMMER) 'ZEITEN' (1#ZEIT(1)~2#ZEIT(2)~...)
	;				 2 = RÜCKGABE DER GESAMTZEIT 'ZEIT(0)' 1 X MIT UND 1 X OHNE ABZUG DER ARBEITS/PAUSENZEITEN (ZEIT(0)~ZEIT(0))
	;				 		 ;the X by means of And X without disc. the 
	;				 3 = RÜCKGABE DER ZEITEN JE ARBEITSTAG (DATUM1#ZEIT(DATUM1)~DATUM2#ZEIT(DATUM2)~...)
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 24-Jul-2007	GRF		SR15579: use idxSTEMP; quits
	; 23-Jul-2005	GRF		SR13024: Doco; disabled block
	; 01.08.2001	DT
	;-------------------------------------------------------------------------------
	NEW FERT,BETR,DAT,MIT,UHR,GK,LFN,SATZ,START,ZEIT,VVV,SEKUNDEN,ZEITEN,LGK,SEKUNDEN2,idxSTEMP
 
	SET ZEIT(0)=0
	SET ZEITEN=""  ;FÜR RÜCKGABE DER EINZELZEITEN ;to the 
	QUIT:$PIECE($GET(STEMP),",",1)="" ZEIT(0)
	
	SET STEMP     = $PIECE(STEMP,",",1)
	SET YRETURN   = $GET(YRETURN)
	SET SEKUNDEN  = 0
	SET SEKUNDEN2 = 0
	SET LFN       = 0
	
	DO ^WWWSKILL("INPROSTEMP0",STEMP)  ;Löschen alte Daten ;Delete Data 
	set idxSTEMP =  $$^WWWUMLAU(STEMP,1)      ; vvv SR15579
	SET BETR=""
	FOR  SET BETR=$ORDER(^WWW013Zs(YM,1,idxSTEMP,BETR)) QUIT:BETR=""  DO
	. SET DAT=""
	. FOR  SET DAT=$ORDER(^WWW013Zs(YM,1,idxSTEMP,BETR,DAT)) QUIT:DAT=""  DO
	. . SET MIT=""
	. . FOR  SET MIT=$ORDER(^WWW013Zs(YM,1,idxSTEMP,BETR,DAT,MIT)) QUIT:MIT=""  DO
	. . . SET VVV=0  ;LAUFVARIABLE STARTZEIT (GESTEMPELT)
	. . . SET LGK=0  ;LETZTER STEMPEL ;last pestle 
	. . . SET UHR=""
	. . . FOR  SET UHR=$ORDER(^WWW013Zs(YM,1,idxSTEMP,BETR,DAT,MIT,UHR)) QUIT:UHR=""  DO
	. . . . SET GK=""
	. . . . FOR  SET GK=$ORDER(^WWW013Zs(YM,1,idxSTEMP,BETR,DAT,MIT,UHR,GK)) QUIT:GK=""  DO
	. . . . . IF GK'=4 IF GK'=5 QUIT
	. . . . . SET FERT=$GET(^WWW013Z(YM,BETR,DAT,MIT,UHR,GK,1))
	. . . . . QUIT:FERT=""
	. . . . . ;
	. . . . . ;ÜBERTRAGEN ZEITEN NACH INPROSTEMP0 ;transport within 
	. . . . . ;----------------------------------
	. . . . . SET LFN=LFN+1
	. . . . . SET SATZ=""
	. . . . . SET $PIECE(SATZ,Y,19)=MIT  ;MITARBEITER
	. . . . . SET $PIECE(SATZ,Y,10)=$PIECE(FERT,Y,10)  ;ARBEITSGANG
	. . . . . ;START ;take-off 
	. . . . . IF GK=4 SET $PIECE(SATZ,Y,14)=DAT SET $PIECE(SATZ,Y,15)=UHR
	. . . . . ;STOP
	. . . . . IF GK=5 SET $PIECE(SATZ,Y,16)=DAT SET $PIECE(SATZ,Y,17)=UHR
	. . . . . ;
	. . . . . SET ^INPROSTEMP0(YM,STEMP,LFN,1)=SATZ
	. . . . . DO ^WWWSSORT("INPROSTEMP0",STEMP_","_LFN)  ;AUFBEREITEN SORTKEY
	. . . . . ;
	. . . . . ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	. . . . . ;NEUAUFBAU STEMPELDATEI FALLS HAUPTSATZ GELÖSCHT ;provided that 
	. . . . . ;;;IF '$DATA(^INPROSTEMP(YM,STEMP)) IF '$DATA(^INPROSTEMP1(YM,STEMP)) DO  ;PRÜFUNG IN INTAGES WEGEN GENAUER TEILESTRUKTUR;FIS;24780;09.12.03
	. . . . . . NEW STEMP1
	. . . . . . SET STEMP1=""
	. . . . . . SET $PIECE(STEMP1,Y,1)=$PIECE(FERT,Y,6)  ;AUFTRAG ;mandate  ;order 
	. . . . . . SET $PIECE(STEMP1,Y,2)="???"  ;AUFTRAGSTEXT (KENNZEICHEN FÜR WIEDERBELEBTE INPROSTEMP) ;to 
	. . . . . . SET $PIECE(STEMP1,Y,3)=$PIECE(FERT,Y,7)  ;POS
	. . . . . . IF $PIECE(FERT,Y,6)'="" IF $PIECE(FERT,Y,7)'="" SET $PIECE(STEMP1,Y,4)=$PIECE($GET(^INAUFP(YM,$PIECE(FERT,Y,6),$PIECE(FERT,Y,7),1)),Y,4)  ;ARTIKEL ;item 
	. . . . . . SET ^INPROSTEMP1(YM,STEMP,1)=STEMP1
	. . . . . ;
	. . . . . ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	. . . . . ;
	. . . . . ;
	. . . . . ;BERECHNEN STEMPELZEITEN ;calculate 
	. . . . . ;-----------------------
	. . . . . SET YU=+$PIECE(FERT,Y,10)  ;ARBEITSGANG (STEMPEL-UNTERNUMMER)
	. . . . . IF YRETURN'=1 SET YU=0     ;OHNE ;without 
	. . . . . IF YRETURN=3  SET YU=DAT   ;WERTE JE DATUM ;once Date 
	. . . . . ;
	. . . . . IF GK=5 IF LGK=0 QUIT      ;STOP OHNE START ;without take-off 
	. . . . . IF GK=5 IF LGK=5 QUIT      ;DOPPELTER STOP
	. . . . . IF GK=4 IF LGK=4 QUIT      ;DOPPELTER START ;take-off 
	. . . . . SET LGK=GK                 ;MERKEN LETZTER STEMPEL ;last pestle 
	. . . . . ;
	. . . . . ;ANGESTEMPELT
	. . . . . IF GK=4 DO
	. . . . . . SET VVV=UHR  ;STARTZEIT
	. . . . . ;
	. . . . . ;ABGESTEMPELT
	. . . . . IF GK=5 IF +VVV'=0 IF UHR>VVV DO
	. . . . . . SET SEKUNDEN=$$^WWW013ZZEIT(DAT,MIT,VVV,UHR) ;ERRECHNEN DAUER ;permanence 
	. . . . . . IF YRETURN=2 SET SEKUNDEN2=SEKUNDEN2+$$^WWW013ZZEIT(DAT,MIT,VVV,UHR,1) ;ERRECHNEN DAUER OHNE PAUSEN ;permanence without 
	. . . . . . IF $GET(SEKUNDEN)>0 DO
	. . . . . . . SET ZEIT(YU)=$GET(ZEIT(YU))+SEKUNDEN  ;SUMMIEREN ARBEITSGANG ;summarize 
	. . . . . . ;
	. . . . . . SET VVV=UHR  ;MERKEN STARTZEIT FALLS STEMPELFEHLER (Z.B. 4,5,5,..)
	
	IF (YRETURN=1)||(YRETURN=3) DO  ;RÜCKGABE DER EINZELWERTE JE ARBEITSGANG / ODER DATUM ;the once Or Date 
	. SET YU="" FOR  SET YU=$ORDER(ZEIT(YU)) QUIT:YU=""  DO
	. . IF YRETURN=3 QUIT:YU=0  ;KEIN GÜLTIGES DATUM ;no Date 
	. . SET ZEITEN=ZEITEN_YU_"#"_$GET(ZEIT(YU))_Y
	. ;
	. SET ZEIT(0)=ZEITEN
	
	IF YRETURN=2 SET ZEIT(0)=ZEIT(0)_Y_SEKUNDEN2
	
	QUIT ZEIT(0)
	
]]></Routine>
</Export>