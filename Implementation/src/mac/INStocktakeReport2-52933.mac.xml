<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INStocktakeReport2" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INStocktakeReport2
#include COMSYS
#include INConst
#include %occInclude
	
Report() ; TODO : pass VORG as parameters
	;-------------------------------------------------------------------------------
	;  Stocktake Difference Report - derived from INWEINVDIF
	;  
	;  NOTE : MATERIAL^INWEINVDIF not copied across
	; 
	; Called By:
	;	Button "D" - Stocktake Difference Report on form INWEINVD via GoTo^INWEINVD
	;
	; ByRef :
	;	VORG array from form INWEINVD
	;
	; Returns :
	;
	;
	; History :
	; 03-Nov-2008	PP		SR16117: Clear Cache
	; 08-Oct-2008	GRF		SR15810: Copied
	; 03-Oct-2008	GRF		SR15810: Specific tag to meet coding standards.
	; 03-Oct-2008	GRF		SR15810: $$CorrectByHistory^INWEINRUECK was being based
	; 							on comma-delimited location list - corrected pending
	; 							replacement (Comment here rather than code changes).
	;-------------------------------------------------------------------------------
	new blnPosted,blnItemSort,fltTotalDec,fltTotalInc,idCountNo,idStocktake
	new strFromStore,strGroupList,strHeading,strLocnList,strToStore
	
	set idStocktake  =   $get(VORG(1))
	if idStocktake=""  do ^WWWINFO($$^WWWTEXT(32292)_" "_$$^WWWTEXT(47)) quit       ; "Check Please! Selection" 
	
	set strLocnList  =   $get(VORG(2))            ; semicolon delimited lists
	set strGroupList =   $get(VORG(3))            ; for filtering lines
	set strFromStore =   $get(VORG(7))
	set strToStore   =   $get(VORG(8))
	set blnPosted    = ''$get(VORG(11))     ; Include Posted Lines
	set blnItemSort  = ''$get(VORG(12))	    ; Sort by Item Number
	set idCountNo    =  +$get(VORG(15))
	
	set fltTotalInc = 0
	set fltTotalDec = 0
 
	kill ^CacheTempStocktakePost(YUCI,idStocktake)		//SR16117
	
	set strHeading = $$SetHeader(blnPosted)
	
	do SortLines(idStocktake,idCountNo,blnPosted,blnItemSort)
	do ^WWWBACK
	do Print^WWWLISTKOPF("9;13;14")                        ; Print Stocktake Criteria 
	do PrintHeader(idStocktake,strHeading) 
	do PrintLines(idStocktake,idCountNo,strLocnList,strGroupList,strFromStore,strToStore,blnPosted,.fltTotalInc,.fltTotalDec)
	do PrintTotals(blnPosted,fltTotalInc,fltTotalDec)
	write "</TABLE>",YCR                    ; close second table opened in PrintHeader
	
	quit
	
SetHeader(pblnPosted)
	;-------------------------------------------------------------------------------
	;	BEARBEITEN ÃœBERSCHRIFT ;Heading
	; 
	; History :
	; 08-Oct-2008	GRF		SR15810: Separate Heading
	;-------------------------------------------------------------------------------
	new strHeading
	;                                               Stocktake Difference Report
	;                                                 ########  -  DD/MM/YYYY
	;---------------------------------------------------------------------------------------------------------------+~~~~~~~~+
	; Id# | Storage | Item | Description |  Count   | Adjusted  | Stock On Hand | Difference | Unit of | Difference | Posted |
	;     |         |      |             | Quantity | Count Qty |   Quantity    |            | Measure |   Value    |        |
	;---------------------------------------------------------------------------------------------------------------+~~~~~~~~+
	;     |         |      |             |          |           | Total Value   |            |         |      $0.00 |        |
	;     |         |      |             |          |           |               |            |         |            |        |
	;     |         |      |             |          |           | Positive Adj. |            |         |      $0.00 |        |
	;     |         |      |             |          |           | Negative Adj. |            |         |      $0.00 |        |
	;---------------------------------------------------------------------------------------------------------------+~~~~~~~~+
	
	; TODO : Text string for "Adjusted Count Qty"
	
	set strHeading = $$$StrINWEINVStocktakingCountingNumber_Y_$$$StrINWEINVStockLocation_Y_$$^WWWTEXT(32024)
	set strHeading = strHeading_Y_$$^WWWTEXT(32026)_Y_$$$StrINWEINVActualQuantity_Y_"Adjusted Count Qty"
	set strHeading = strHeading_Y_$$^WWWTEXT("IN00449")_Y_$$^WWWTEXT(32259)_Y_$$^WWWTEXT(32030)_Y_$$^WWWTEXT(32259)_" "_$$^WWWTEXT(32325)
	
	if pblnPosted set strHeading = strHeading_Y_$$$StrINWEINVPosted
	
	quit strHeading	
	
SortLines(pidStocktake,pidCountNo,pblnPosted,pblnItemSort)
	;-------------------------------------------------------------------------------
	; Inputs : 
	; 	pidStocktake	Stocktake Identifier
	; 	pidCountNo		
	; 	pblnPosted  	Show posted entries?
	; 	pblnItemSort	Are we sorting?
	;
	; Returns :
	;
	; History :
	; 08-Oct-2008	GRF		SR15810: Copied and modified
	;-------------------------------------------------------------------------------
	new idItemKey,idLineNo,idLocnKey,objCount,objSTLine
	
	kill ^CacheTempStocktakeReport(YUCI,"Diff",YUSER)
	
	set idLineNo = "" 
	for {
		set idLineNo = $order(^INWEINV(YM,pidStocktake,idLineNo))
		quit:idLineNo=""
		
		set objSTLine = $get(^INWEINV(YM,pidStocktake,idLineNo,1))
		set objCount  = $get(^INWEINVCount(YM,pidStocktake,idLineNo,pidCountNo,1))
		
		continue:+$$$INWEINVCountQuantity(objCount)=+$$$INWEINVTargetQuantity(objSTLine)
		continue:('pblnPosted && ($$$INWEINVPosted(objSTLine)'=""))	         ; Already Posted
		continue:$$$INWEINVActualQuantity(objSTLine)=""                      ; Not Counted
		continue:$$$INWEINVItemNumber(objSTLine)=""
		
		if pblnItemSort {
			set idItemKey = $$$INWEINVItemNumber(objSTLine)
			set idLocnKey = $$$INWEINVLocation(objSTLine)
		} else {
			set idItemKey = " "
			set idLocnKey = " "
		}
		set ^CacheTempStocktakeReport(YUCI,"Diff",YUSER,idItemKey,idLocnKey,idLineNo)=""
	}
	
	quit
	
PrintLines(pidStocktake,pidCountNo,pstrLocnList,pstrGroupList,pstrFromStore,pstrToStore,pblnPosted,&fltTotalInc,&fltTotalDec)
	;-------------------------------------------------------------------------------
	; Display
	;
	; History:
	; 17-Nov-2008	HQN		SR16125: Moved $$CopyCountsToINWEINV from within 
	; 							PrintOneLine to here, recalc once only
	; 08-Oct-2008	GRF		SR15810: Copied and modified
	;-------------------------------------------------------------------------------
	new idDefGroup,idItemKey,idLineNo,idLocnKey,objSetup,objStocktake,tmsInvCreated
	
	set pstrLocnList  = ";"_pstrLocnList_";"
	set pstrGroupList = ";"_pstrGroupList_";"
	
	set YDDSATZ       = 0
	set objStocktake  = $get(^INWEINVP(YM,pidStocktake,1))
	set tmsInvCreated = $$$INWEINVPSystemDate(objStocktake)
	set objSetup      = $get(^INVORG(YM,YM,1))
	set idDefGroup    = $$$INVORGDefaultItemGroup(objSetup)
	
	set strStatus = $$CopyCountsToINWEINV^INWEINVCount(pidStocktake) ; SR16125
	
	set idItemKey = ""
	for {
		set idItemKey = $order(^CacheTempStocktakeReport(YUCI,"Diff",YUSER,idItemKey))
		quit:idItemKey=""
		
		set idLocnKey = ""
		for {
			set idLocnKey = $order(^CacheTempStocktakeReport(YUCI,"Diff",YUSER,idItemKey,idLocnKey))
			quit:idLocnKey=""
			
			set idLineNo = ""
			for {
				set idLineNo = $order(^CacheTempStocktakeReport(YUCI,"Diff",YUSER,idItemKey,idLocnKey,idLineNo))
				quit:idLineNo=""
				continue:$$CountEqualsTarget^INWEINVCount(pidStocktake,idLineNo,pidCountNo)
				
				do PrintOneLine(pidStocktake,idLineNo,tmsInvCreated,pidCountNo,idDefGroup,pstrLocnList,pstrGroupList,pstrFromStore,pstrToStore,pblnPosted,.fltTotalInc,.fltTotalDec)
			}
		}
	}
	quit
	
PrintOneLine(pidStocktake,pidLineNo,ptmsCreated,pidCountNo,pidDefGroup,pstrLocnList,pstrGroupList,pstrFromStore,pstrToStore,pblnPosted,&fltTotalInc,&fltTotalDec)
	;-------------------------------------------------------------------------------
	; Display a line
	;
	; Params:	pidLineNo   - INWEINV line number
	; 			ptmsCreated - When the stocktake count was created.
	;
	; History:
	; 17-May-2011	shobby	SR17755: Formatting of Storage
	; 04-Jan-2010	PPP		SR17645: Added new parameter, idBundle for $$CorrectByHistoryV2
	; 17-Nov-2008	HQN		SR16125: Moved $$CopyCountsToINWEINV call to PrintLines.
	; 							Wrong to recalc every line, for every line
	; 03-Nov-2008	PP		SR16117: Corrected Call
	; 08-Oct-2008	GRF		SR15810: Copied and modified
	; 17-Sep-2008	GRF		Restore missing ". ;" lines - okay operationally since
	; 							we close up the gaps in the .INT file but potentially
	; 							dangerous if someone adds a comment line or something
	; 							without the correct number of dots.
	; 17-Dec-2007   PJones 	BR014799 : We need to make sure we're getting the
	; 							up-to-date count
	; 10-Dec-2007	GRF		BR014557: Corrected tag name - updated in INStocktaking
	; 							but not here; UNDEFINED error on idStocktake - changed
	; 							to VORG(1)
	; 14-Nov-2007	shobby	SRBR014793: Do the difference compared to the currently
	; 							selected count
	;-------------------------------------------------------------------------------
	new arrAttr,curCost,curDiscount,fltAdjustedCount,fltAdjustedDiff,fltDeltaQty,fltQtyCounted,fltSnapQty,loop
	new idAttr,idBundle,idCount,idItem,idItemGroup,idLocn,idOrderNo,idOrderLine,idStore,idUnit
	new objCount,objItem,objSTLine,strBGColour,strItemName,strMatch,strRemark,strStatus,strText,strUnit,tmsCounted
	
	;set strStatus = $$CopyCountsToINWEINV^INWEINVCount(pidStocktake) ; SR16125
	set objSTLine = $$GetINWEINVwithLatestCount^INWEINVCount(pidStocktake,pidLineNo)  ; INWEINV structure with INWEINVCount info
	
	set idLocn = $$$INWEINVLocation(objSTLine)
	quit:((pstrLocnList'=";;") && '$find(pstrLocnList,";"_idLocn_";"))
	
	set idStore = $$$INWEINVStockLocation(objSTLine)
	quit:((pstrFromStore'="") && (pstrFromStore ]] idStore    ))
	quit:((pstrToStore  '="") && (idStore       ]] pstrToStore))
	
	set idItem = $$$INWEINVItemNumber(objSTLine)
	quit:idItem=""
	set objItem = $get(^INART(YM,idItem,1))
	
	set idItemGroup = $$$INARTItemGroup(objItem)
	if idItemGroup="" set idItemGroup = pidDefGroup
	quit:((pstrGroupList'=";;") && '$find(pstrGroupList,";"_idItemGroup_";"))
	
	;---------------------------------------
	
	set idBundle  = $$$INWEINVBundleID(objSTLine)
	set strMatch  = idItem_$$$COMMA_idLocn_$$$COMMA_idStore_$$$COMMA_idBundle
	
	set tmsCounted = $$$INWEINVCountTimestamp(objSTLine)
	
	set strUnit = ""
	set idUnit  = $$$INARTUnitofMeasure(objItem)
	if idUnit'="" set strUnit=$piece($get(^WWW101(0,"EINHEIT",SPRACHE,idUnit,1)),Y,1)
	if strUnit="" set strUnit = "Unit:"_idUnit
	
	set fltSnapQty    = $$$INWEINVTargetQuantity(objSTLine)
	set fltDeltaQty = 0
	if '$data(^CacheTempStocktakePost(YUCI,pidStocktake,strMatch)) {
		set ^CacheTempStocktakePost(YUCI,pidStocktake,strMatch) = ""
		//set fltDeltaQty = $$GetSnapAdjustment^INStocktakeUtil(idItem,idLocn_"||"_idStore,idBundle,ptmsCreated,tmsCounted)
		//set fltDeltaQty = $$CorrectByHistoryV2^INWEINVUtils(idItem,ptmsCreated,tmsCounted,idLocn,idStore)	//SR16117
		set fltDeltaQty = $$CorrectByHistoryV2^INWEINVUtils(idItem,ptmsCreated,tmsCounted,idLocn,idStore,idBundle)	//SR17645
	}
	
	set idCount  = $order(^INWEINVCount(YM,pidStocktake,pidLineNo,""),-1)      ; FIXME : will this be the same as pidCountNo?
	set objCount = $get(^INWEINVCount(YM,pidStocktake,pidLineNo,idCount,1))
	
	set fltQtyCounted    = $$$INWEINVCountQuantity(objCount)    ; count as at tmsCounted  : From ^INWEINVCount
	set fltAdjustedCount = fltQtyCounted - fltDeltaQty          ; Count as at ptmsCreated
	set fltAdjustedDiff  = fltAdjustedCount - fltSnapQty
	
	;---------------------------------------
	
	; New Line
	;+++++++++++++++++++++++++++++++++++++++
	set YDDSATZ = $get(YDDSATZ) + 1
	set strBGColour = " BGCOLOR="_$select(YDDSATZ#2:YWHITE,1:YGRAY)
	write YCR,"<TR>"
	
	; Line No (ID#)
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
	write $justify(pidLineNo,4,0)
	write "&nbsp;</FONT></TD>"
	
	; Location / Storage
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"
	;SR17755 write idLocn," / ",idStore
	write idLocn," / "_$$CodeWithTSU2^INLP(idLocn,idStore) ;SR17755
	if $$$INWEINVStockLocationNote(objSTLine) = "HISTORY" write " "_$$^WWWTEXT(32859)_"&nbsp;"	; "History"
	
	do GetAttributes^INStocktakeUtil(idItem,objSTLine,SPRACHE,.arrAttr)
	set idAttr = ""
	for {
		set idAttr = $order(arrAttr(idAttr))
		quit:idAttr=""
		
		write "<BR>",$piece(arrAttr(idAttr),"~",1),": ",$piece(arrAttr(idAttr),"~",2),"&nbsp;"
	}
	write "</FONT></TD>"
	
	; Item ID, Group
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"
	write idItem_"<BR>"
	if idItemGroup'="" write "("_idItemGroup_") "_$$GetDescription^INDItemGroup(idItemGroup)
	write "&nbsp;</FONT></TD>"
	
	; Description : Order|Reservation, ItemName, Remarks
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"
	set idOrderNo   = $$$INWEINVOrderNumber(objSTLine) 
	set idOrderLine = $$$INWEINVLineItemsNumber(objSTLine) 
	
	if $$$INWEINVStockType(objSTLine)="S" {
		write "<b>"
		write $$^WWWTEXT(32047)_": "_idOrderNo_"-"_idOrderLine		; "Order"
		write "</b><BR>"
	
	} elseif $$$INWEINVStockType(objSTLine)="R" {
		write "<b>"
		write $$^WWWTEXT(32480)_": "_idOrderNo		                ; "Reserved"
		write "</b><BR>"
	}
	
	set strItemName = $$$INARTSearchName(objItem)
	write $extract(strItemName,1,40)
	
	set strRemark = $$$INARTRemarks(objItem)
	if $translate(strRemark,"| ")=$translate(strItemName,"| ") set strRemark=""
	if strRemark'="" WRITE "<BR>"
	
	; LONG TEXT - vertical separator indicates new line - changed to space - broken into 40 characters 
	for loop=1:1 {
		quit:$piece(strRemark,"|",loop,999)=""
		
		set strText = $translate($$^WWWUML($piece(strRemark,"|",loop),1),"|"," ")
		continue:$translate(strText," ")=""
		
		write $extract(strText,1,40)
		if $extract(strText,41,80)'=""   write "<BR>",$extract(strText,41,80)
		if $extract(strText,81,120)'=""  write "<BR>",$extract(strText,81,120)
		if $extract(strText,121,160)'="" write "<BR>",$extract(strText,121,160)
		if $piece(strRemark,"|",loop+1,999)'="" write "<BR>",YCR
	}
	write "&nbsp;</FONT></TD>"
	
	; Count Quantity
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
	write fltQtyCounted
	write "&nbsp;</FONT></TD>"
	
	; Adjusted Count Quantity
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
	write fltAdjustedCount
	write "&nbsp;</FONT></TD>"
	
	; Snapped Quantity (Stock On Hand)
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
	write fltSnapQty
	write "&nbsp;</FONT></TD>"
	
	; Difference
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
	write fltAdjustedDiff
	write "&nbsp;</FONT></TD>"
	 
	; Unit
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
	write strUnit
	write "&nbsp;</FONT></TD>"
		
	; Difference Value
	;---------------------------------------
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
	set curCost     = $$CalculatePrice^INStocktakeUtil(idItem,objItem,objSTLine,idLocn)
	set curDiscount = $justify($$$INWEINVStocktakingDiscount(objSTLine)/100*curCost,0,2)
	set curCost     = (curCost - curDiscount) * fltAdjustedDiff
	if curCost > 0 {
		set fltTotalInc = fltTotalInc + $justify(curCost,0,2)
	} else {
		set fltTotalDec = fltTotalDec + $justify(curCost,0,2)
	}
	
	write $$^WWWZAHL(curCost,0,2,YWHR)
	write "</FONT></TD>"
	
	if pblnPosted {
		write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
		write $$^WWWDATE($$$INWEINVPosted(objSTLine))
		write "&nbsp;"
		write "</FONT></TD>"
	}
	
	write "</TR>"
	
	quit
	
	
PrintTotals(pblnPosted,pfltTotalInc,pfltTotalDec)
	;-------------------------------------------------------------------------------
	; Display totals
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-May-2006	JW		SR14508: Made bold.
	;-------------------------------------------------------------------------------
	do TotalLine(pblnPosted,32059,pfltTotalInc+pfltTotalDec,$$$YES)   ;Total Value
	do TotalLine(pblnPosted,)
	do TotalLine(pblnPosted,"IN00478",pfltTotalInc)                   ;Positive Adj.
	do TotalLine(pblnPosted,"IN00479",pfltTotalDec)                   ;Negative Adj.
	
	quit
 
TotalLine(pblnPosted,pstrTitle="",pfltAmount="",pblnBold=$$$NO)	
	;-------------------------------------------------------------------------------
	; Display total line
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-May-2006	JW		SR14653: Encapsulated from GESAMT
	;-------------------------------------------------------------------------------
	new strBGColour
	
	; New Line
	;+++++++++++++++++++++++++++++++++++
	set YDDSATZ = $get(YDDSATZ) + 1
	set strBGColour = " BGCOLOR="_$select(YDDSATZ#2:YWHITE,1:YGRAY)
	write YCR,"<TR>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"   ; 1
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"               ; 2
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"   ; 3
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"   ; 4
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"   ; 5
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"   ; 6
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=MIDDLE"_strBGColour_"><FONT SIZE=1>"  ; 7
	if pblnBold write "<B>"
	write $$^WWWTEXT(pstrTitle)       ; "Total Value", etc.
	if pblnBold write "</B>"
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP"_strBGColour_"><FONT SIZE=1>"               ; 8
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"   ; 9
	write "&nbsp;"
	write "</FONT></TD>"
	
	write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"   ;10
	if pfltAmount'="" {
		if pblnBold write "<B>"
		write $$^WWWZAHL(pfltAmount,0,2,YWHR)
		if pblnBold write "</B>"
	}
	write "&nbsp;"
	write "</FONT></TD>"
	
	if pblnPosted {                                                               ;11
		write YCR,"<TD NOWRAP VALIGN=TOP ALIGN=RIGHT"_strBGColour_"><FONT SIZE=1>"
		write "&nbsp;"
		write "</FONT></TD>"
	}
	write "</TR>",YCR
	
	quit
	
	
PrintHeader(pidStocktake,pstrHeading)
	new loop
	
	write "<CENTER>"
	do START00^WWWTAB
	write YCR,"<TR><TH><FONT SIZE=3>"
	write "<B>"
	write "<NOBR>"
	write $$$Text("IN00461")                ; "Stocktake Difference Report"
	do Title^INStocktakeReportCommon(pidStocktake)
	write "</B>"
	write "<BR>"
	write "</NOBR>"
	write "</FONT></TH></TR>",YCR
	write "</TABLE>",YCR
	write "<BR>"
	write "</CENTER>"
	
	do START100^WWWTAB 
	write "<THEAD>" 
	write YCR,"<TR>"
	for loop=1:1 {
		quit:$piece(pstrHeading,Y,loop,99)=""
		
		write YCR,"<TH BGCOLOR="_YDARKGRAY_"><FONT SIZE=1>"
		write $piece(pstrHeading,Y,loop),"&nbsp;"
		write "</FONT></TH>"
	}
	write "</TR>",YCR
	write "</THEAD>"
	quit
	
	
 
]]></Routine>
</Export>