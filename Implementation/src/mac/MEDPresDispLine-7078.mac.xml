<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="MEDPresDispLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
MEDPresDispLine
	
#include INConst
#include COMSYS
#include %occInclude
#include COMGridEdit31
	
#define FORMFldMEDPresDispLineUnit   2
#define FORMFldINIssueLineLotNo      5
	
GetLotAttributes(pidKeys,pobjLine)
	;-------------------------------------------------------------------------------
	; used as default value for Lot number (manual field) based on stored lot number
	; and bundle. 
	;
	; Inputs:
	; pidKeys - keys of line
	; pobjline - line in question 
	;
	; Returns:
	; strBundleValues - lot attributes to display on screen
	;
	; History:
	; 17-Jul-2009	DWR		SR16642: Created
	;-------------------------------------------------------------------------------
	new idBundle,idFromStore,idItem,idLocn,idRow,idToStore,objBundle,objBundleStock
	new objHeader,strBundleValues
	
	set strBundleValues = ""
	
	if '$$$NoKey(pidKeys) {
		set objHeader  = $$$GRIDYFELDContainer
		set idLocn     = $$$INIssueFromLocn(objHeader)
		set idRow      = $$$KEY2(pidKeys)
		;---------------------------------------
		; INIssueLine from Grid (form MEDPresDisLine)
		;---------------------------------------
		set idItem      = $$$INIssueLineItem(pobjLine)
		set idFromStore = $$$INIssueLineFromStorage(pobjLine)
		set idToStore   = $$$INIssueLineToStorage(pobjLine)   
		set idBundle    = $$$INIssueLineBundle(pobjLine)
		
		if (idItem '= "") && (idFromStore '= "") {    ; Don't bother to validate until a value exists
			set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(idItem_"||"_idLocn_"||"_idFromStore_"||"_$$$INIssueLineBundle(pobjLine))
			if (objBundleStock '= $$$NULLOREF) {
				set objBundle = objBundleStock.Bundle
			} else {
				set objBundle = ##class(alSOH.dBundle).%OpenId(idBundle)
			}
			
			if objBundleStock '= $$$NULLOREF {             
				set strBundleValues = ##class(alSOH.iUSOH).RenderBundle(objBundleStock.Bundle,SPRACHE)
			}
		}
	}
	quit strBundleValues
	
	
OnBeforeDisplayCombo(pstrKeys,pobjIssue,pintCol,&pSUCH)
	;-------------------------------------------------------------------------------
	; Populates the Received UOM with the UOM as defined in INARTPACK only, excludes
	; units that the item does not come in.
	; 
	; set pSUCH as the items to be used when you override the list (set via blnOverride)
	;
	; Inputs:
	;	pstrKeys	- YKEY
	;	pobjIssue	- YFELD
	;	pintCol     - Edit Grid Column Id
	;	pSUCH       - Search Array
	; 
	; Returns: $$$YES or $$$NO (override the data) 
	;
	; History:
	; 15-Jul-2011	GRF		SR17669: Call common code
	; 30-May-2009	DavidR	SR16642: Created
	;-------------------------------------------------------------------------------
	new blnOverride
	
	set blnOverride = $$$NO
	
	; F11 - Received Unit
	;---------------------------------------
	if pintCol = $$$FORMFldMEDPresDispLineUnit { ; SR17669 vvv
		set blnOverride = $$LoadCombo^INARTPACK($$$INIssueLineItem(pobjIssue),blnOverride,.pSUCH)
	}
	quit blnOverride
	/*
	if pintCol = $$$FORMFldMEDPresDispLineUnit  {
		kill pSUCH
		set pSUCH  = "SUCH"
		set idItem = $$$INIssueLineItem(pobjIssue)
		if idItem '= "" {
			set enumUnit = ""
			for {
				set enumUnit = $order(^INARTPACK(YM,idItem,enumUnit))
				quit:enumUnit=""
				
				set pSUCH(enumUnit) = enumUnit
			}
			set blnOverride = $$$YES
		}
	}	
	quit blnOverride
	*/                                           ; SR17669 ^^^
	
	
GetSOHLocal(pYFELD="",pYKEY="")
	;-------------------------------------------------------------------------------
	; Default Value Form MEDPresDispLine calculate stock on hand for an item at Locn
	; 
	; History:
	; 27-Aug-2009	GRF		SR16860: Use tag entry point rather than bare routine
	; 26-Aug-2009	DWR		SR16860: re-factored to get the From Location from the
	; 							header in case being viewed from another location.
	; 							Returns 0 if there is no from location.
	; 30-May-2009	DavidR	SR16642: Created copied from INDispenseToPatientLine
	;-------------------------------------------------------------------------------
	new fltQtyAtLocn,idFromLocn,objHeader
	
	set fltQtyAtLocn = 0
	if '$$$NoKey(pYKEY) {
		set objHeader = $get(^INIssue(0,$$$KEY1(pYKEY),1))
		if objHeader'=$$$NULLOREF {		
			set idFromLocn   = $$$INIssueFromLocn(objHeader)
			set fltQtyAtLocn = $$GetQty^INARTMENGE($$$INIssueLineItem(YFELD),$$$NO,idFromLocn,$$$NO,1,$$$NO,$$$YES)
		}
	}
	quit fltQtyAtLocn
	
	
GetSOHCompany(pYFELD="")
	;-------------------------------------------------------------------------------
	; Default Value on Form MEDPresDispLine calculate stock on hand for an item at YM
	;
	; History:
	; 27-Aug-2009	GRF		SR16860: Use tag entry point rather than bare routine
	; 30-May-2009	DavidR	SR16642: Created copied from INDispenseToPatientLine
	;-------------------------------------------------------------------------------
	quit $$GetQty^INARTMENGE($$$INIssueLineItem(YFELD),$$$NO,,$$$NO,1,$$$NO,$$$NO)
	
	
OnBeforeCopy(pstrKey,&pobjLine)
	;-------------------------------------------------------------------------------
	; action to function on copy of line
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 24-Jul-2009	DWR		SR16642: Created
	;-------------------------------------------------------------------------------
	set $$$INIssueLineQtyIssued(pobjLine)   = ""
	set $$$INIssueLineFromStorage(pobjLine) = ""
	set $$$INIssueLineBundle(pobjLine)      = ""
	quit
	
	
OnBeforeDelete(pidKeys,pobjLine)
	;-------------------------------------------------------------------------------
	; Check if its a whole line, these have been created from the prescription and
	; connot be deleted.
	;
	; Inputs:
	;
	; Returns: nothing
	;
	; History:
	; 24-Jul-2009	DWR		SR16774: Created
	;-------------------------------------------------------------------------------
	new idLineNumber
	
	if '$$$NoKey(pidKeys) {
		set idLineNumber = $$$KEY2(pidKeys)
		if idLineNumber\1=idLineNumber {
			set Q = $$$QDontDelete
			$$$Alert($listbuild("MED00392",idLineNumber))
		}  ; "Cannot delete line %1 - It is a prescription line"
	}
	quit
	
	
OnBeforeSave(pidKEYS,pobjLine)
	;-------------------------------------------------------------------------------
	; check for 0 amounts and negative numbers
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 
	; 29-Aug-2012	SCR		SR18095: Allow dispense qty to be less than pick qty
	; 04-Nov-2010	PPP		SR16642: Converted sc to strStatus
	; 24-Jul-2009	DWR		SR16774: Created
	;-------------------------------------------------------------------------------
	new fltQOH,fltQtyIssued,fltQtyPlanned,fltQtyReqd,fltStockBundleQty,fltTotalIssued
	new idBundle,idFromLocn,idFromStore,idItem,idLineNumber
	new objBundleStock,objHeader,sc,strStatus
	
	set strStatus = $$$OK
	
	set idItem         = $$$INIssueLineItem(pobjLine)
	set idFromStore    = $$$INIssueLineFromStorage(pobjLine)
	set idBundle       = $$$INIssueLineBundle(pobjLine)
	set fltQtyIssued   = $$$INIssueLineQtyIssued(pobjLine)
	set fltQtyReqd     = $$$INIssueLineQtyRequired(pobjLine)
	set idLineNumber   = $$$KEY2(pidKEYS)
	set fltTotalIssued = $$GetTotalIssued(idLineNumber)+$$$INIssueLineQtyIssued(pobjLine)
	set objHeader      = $$$GRIDYFELDContainer
	set idFromLocn     = $$$INIssueFromLocn(objHeader)
	
	if $$$INIssueLineQtyIssued(pobjLine) <= 0 {
		set strStatus = $$$MakeStatus("MED00393")	  				; "Quantity issued must be greater than 0"
	
	} elseif $$$INIssueLineFromStorage(pobjLine) = "" {
		set strStatus = $$$MakeStatus("MED00394",idLineNumber)     	; "'From Storage' required on line %1"
	
	} elseif $$$INIssueLineBundle(pobjLine) = "" {
		set strStatus = $$$MakeStatus("MED00395",idLineNumber)     	; "Bundle required on line %1"			
	; SR18095 vvvvvvvv
	;} elseif (fltTotalIssued '= fltQtyReqd) {
	;	set strStatus = $$$MakeStatus("IN01222",fltTotalIssued,fltQtyReqd,idLineNumber)
	;	; "Total Quantity Issued (%1) has to be equal to the Unit Quantity (%2) for Line %3"			
	
	} elseif (fltTotalIssued > fltQtyReqd) {
		set strStatus = $$$MakeStatus("IN00770",fltTotalIssued,fltQtyReqd,idLineNumber)
		; "Total Quantity Issued (%1) exceeds the Quantity Requested (%2) for Requisition Line %3"

	; SR18095 ^^^^^^^
	} else {
		set fltQOH = ##class(alSOH.piSOHQty).GetQtyOnHand(idItem,idFromLocn,idFromLocn_"||"_idFromStore)
		set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(idItem_"||"_idFromLocn_"||"_idFromStore_"||"_idBundle,,.sc)
		if $$$ISOK(sc) {
			set fltStockBundleQty = 0
			if (objBundleStock '= $$$NULLOREF) set fltStockBundleQty = objBundleStock.QtyOnHand
			
			set fltQtyPlanned = ##class(alSOH.iSOHBalance).GetQtyPlanned(idItem,idFromLocn,idFromLocn_"||"_idFromStore,idBundle)
			
			if (fltQtyIssued > (fltStockBundleQty-fltQtyPlanned)) {
				set strStatus = $$$MakeStatus("alMOV0004",fltStockBundleQty,fltQtyPlanned)
			 ;  "Not enough Items in Storage (Quantity = %1)(Planned Quantity = %2)"
				
			} elseif (fltQtyIssued > fltQOH) {
				set strStatus = $$$MakeStatus("alMOV0003",fltQOH)
			} ; "Not enough Items in Storage (Quantity = %1)"
		} else {
			//SR16642
			set strStatus = $$ISStatusToDLStatus^COMUtilError(sc)
		}
	}
	
	if $$$ISERR(strStatus) {
		set YRETVAL = strStatus
	}
	quit strStatus
	
	
CheckLines(pidIssue,pobjIssue)
	;-------------------------------------------------------------------------------
	; check that the qtys are matched against what is required if the prescription 
	; type is 2 (Customs Manufacture).
	;
	; Inputs:
	;
	; Returns: strStatus
	;
	; History:
	; 29-Aug-2012	SCR		SR18095: Allow dispense qty to be less than pick qty
	; 12-Apr-2010	GRF		SR17177: GRID Macros
	; 24-Jul-2009	DWR		SR16642: Created
	;-------------------------------------------------------------------------------
	new arrGrid,arrRequired,arrSum,idLine,idMainLine,objLine,strStatus
	
	set strStatus = $$$OK
	
	;---------------------------------------
	; arrRequired : QtyRequired for main line only
	; arrSum      : combined QtyIssued
	;---------------------------------------
	
	;$$$GRIDGetContents(.arrGrid,"MEDPresDispLine")
	$$$GRIDGetContents(.arrGrid) ; SR18095
	set idLine= ""
	for {
		set idLine = $order(arrGrid(pidIssue,idLine))
		quit:idLine=""
		
		set idMainLine = idLine\1
		set objLine    = arrGrid(pidIssue,idLine)
		
		if idMainLine=idLine {
			set arrRequired(idMainLine) = $$$INIssueLineQtyRequired(objLine)
		}
		set arrSum(idMainLine) = $get(arrSum(idMainLine)) + $$$INIssueLineQtyIssued(objLine)
	}
	
	set idLine=""
	for {
		set idLine = $order(arrRequired(idLine))
		quit:idLine=""
		; SR18095 vvvvvv
		;if arrRequired(idLine)'=$get(arrSum(idLine)) {
		;	set strStatus = $$$MakeStatus("IN01222",$get(arrSum(idLine)),arrRequired(idLine),idLine)
		;	quit
		;} ; "Total Quantity Issued (%1) has to be equal to the Unit Quantity (%2) for Line %3"
		if arrRequired(idLine)<$get(arrSum(idLine)) {
			set strStatus = $$$MakeStatus("IN00770",$get(arrSum(idLine)),arrRequired(idLine),idLine)
			quit
		} ; "Total Quantity Issued (%1) exceeds the Quantity Requested (%2) for Requisition Line %3"
		; SR18095 ^^^^^^^
	}
	quit strStatus
	
	
OnBeforeFormat(pYFIELDNAME,pYTEXT,pobjLine)
	;-------------------------------------------------------------------------------
	;	
	; Called By :
	;	Form - GridEdit:MEDPresDispLine
	;	Routines -
	;
	; Inputs : 
	;	pYFIELDNAME	-	Browser Element ID "tdY#row#_#col#"
	;	pYTEXT		-	Value currently in element
	;	pYFELD		-	@nM INIssueLine Data record
	;
	; History :
	; 14-Sep-2010	PPP		SR16642: Created
	;-------------------------------------------------------------------------------
	new fltQOH,fltQtyIssued,fltQtyPlanned,fltQtyReqd,fltStockBundleQty,fltTotalIssued
	new idBundle,idClassField,idFromLocn,idFromStore,idIssueNumber,idItem,idLineNumber,idToLocn
	new intRow,intCol
	new objBundle,objBundleStock,objHeader,objStock,sc,strBundleValues
	
	set idIssueNumber = $$$KEY1(YKEY)
	set idLineNumber  = $$$KEY2(YKEY)
	
	; INIssue Header
	;---------------------------------------
	set objHeader  = $$$GRIDYFELDContainer
	quit:$$$INIssueStatus(objHeader)>3
	
	set idFromLocn = $$$INIssueFromLocn(objHeader)
	set idToLocn   = $$$INIssueToLocn(objHeader)
	
	; INIssueLine from Grid
	;---------------------------------------
	set idItem       = $$$INIssueLineItem(pobjLine)
	set idFromStore  = $$$INIssueLineFromStorage(pobjLine)
	set idBundle     = $$$INIssueLineBundle(pobjLine)
	set fltQtyIssued = $$$INIssueLineQtyIssued(pobjLine)
	set fltQtyReqd   = $$$INIssueLineQtyRequired(pobjLine)
	
	; Grid Position
	;---------------------------------------
	$$$GRIDSplitKey(pYFIELDNAME,intRow,intCol)
	set idClassField = $$$GetClassField(YFORM,intCol)
	
	// Item
	;---------------------------------------
	if (idClassField = $$$FldINIssueLineItem) {
		set objStock= ##class(alSOH.dStockBalance).%OpenId(idItem_"||"_ idFromLocn,,.sc)	
		if objStock = $$$NULLOREF {
			set YWARNING = $$$YES
			set YTOOLTIP = $$$Text($listbuild("IN01049",idLineNumber))
		} ; "Cannot fulfill Issue Quantity for Line %1"
		
	//Bundle
	} elseif (idClassField = $$$FldINIssueLineBundle) {
		// Don't bother to validate until a value exists
		if (idBundle'= "") {
			set objBundle = ##class(alSOH.dBundle).%OpenId(idBundle)
			if (objBundle '= $$$NULLOREF) {
				set strBundleValues = ##class(alSOH.iUSOH).RenderBundle(objBundle,SPRACHE)
				set YENABLED        = $$$NO
				do UpdateManualField^COMGridEdit31Interface(intRow,$$$FORMFldINIssueLineLotNo,strBundleValues)
			}
		}
		
	//Issued Qty
	} elseif (idClassField = $$$FldINIssueLineQtyIssued) {
		set fltTotalIssued = $$GetTotalIssued(idLineNumber)+fltQtyIssued
		
		if fltQtyIssued = "" {
			set YWARNING = $$$YES
			; FIXME : Message?
			
		} elseif fltQtyIssued '> 0 {
			set YWARNING = $$$YES
			set YTOOLTIP = $$$Text("IN00632")    ; "Quantity must be greater than 0"
			
		} elseif (fltTotalIssued '= fltQtyReqd) {
			set YWARNING = $$$YES
			set YTOOLTIP = $$$Text($listbuild("IN01222",fltTotalIssued,fltQtyReqd,idLineNumber))
			; "Total Quantity Issued (%1) has to be equal to the Unit Quantity (%2) for Line %3"			
			
		} else {
			set fltQOH = ##class(alSOH.piSOHQty).GetQtyOnHand(idItem,idFromLocn,idFromLocn_"||"_idFromStore)
			set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(idItem_"||"_idFromLocn_"||"_idFromStore_"||"_idBundle,,.sc)
			if $$$ISOK(sc) {
				set fltStockBundleQty = 0
				set:(objBundleStock '= $$$NULLOREF) fltStockBundleQty = objBundleStock.QtyOnHand
				set fltQtyPlanned = ##class(alSOH.iSOHBalance).GetQtyPlanned(idItem,idFromLocn,idFromLocn_"||"_idFromStore,idBundle)
				
				if (fltQtyIssued > (fltStockBundleQty-fltQtyPlanned)) {
					set YWARNING = $$$YES
					set YTOOLTIP = $$$Text("IN00437")_" = "_(fltStockBundleQty-fltQtyPlanned) ; "Available Quantity"
					
				} elseif (fltQtyIssued > fltQOH) {
					set YWARNING = $$$YES
					set YTOOLTIP = $$$Text("IN00437")_" = "_fltQOH                            ; "Available Quantity"
				
				} else {
					//Check Prior Line entries, sum quantities
					if objBundleStock '= $$$NULLOREF {						
						if (fltTotalIssued > objBundleStock.QtyOnHand) {
							set YWARNING = $$$YES
							set YTOOLTIP = $$$Text($listbuild("alMOV0003",objBundleStock.QtyOnHand))
						} ; "Not enough Items in Storage (Quantity = %1)"
					}
				}
					
			}	
		}
	}
	quit
	
	
GetTotalIssued(pidLn)
	;-------------------------------------------------------------------------------
	; Get the Sum of all Issued quantity for a Line
	;
	; ByRef :
	;
	; Returns : 
	;
	; History :
	; 25-Jun-2012	SCR		SR17993: Return 0, Confict with Solutions ***FIXME ****
	; 14-Sep-2010	PPP		SR16642: Created
	;-------------------------------------------------------------------------------
	new fltQty,idDataLine,idGridRow,objIssueLine
	
	set fltQty   = 0
	quit fltQty
	set idDataLine = ""
	for {
		set idDataLine = $order($$$WWWDATEN("REFERENCEROW",idDataLine))
		quit:idDataLine=""
		
		continue:(idDataLine=pidLn)                    //Skip current line
		continue:(idDataLine\1)'=(pidLn\1)
		
		set idGridRow = $get($$$WWWDATEN("REFERENCEROW",idDataLine,1))
		continue:($get($$$WWWDATEN("KILLEDRECORD",idGridRow))=$$$YES)
		
		set objIssueLine = $$GetYFELD^COMGridEdit31G(YFORM,idGridRow)	//$$$GRIDGetYFELD(idDataLine)
		set fltQty       = fltQty + $$$INIssueLineQtyIssued(objIssueLine)
	}
	quit fltQty
	
]]></Routine>
</Export>