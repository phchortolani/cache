<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLHCAccountPeriodTotal" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLHCAccountPeriodTotal ; Period Total Health Check
	#Include FINHC
	#define Check "^CacheTemp(YUSER,""AccountPeriodTotal"")"



CheckParentZCRC(StartDate="",EndDate="",Location="",Level="",Result)
	quit $$AccountPeriodTotalZCRC(StartDate,EndDate,Location,Level,.Result,"Parent")


CheckChildZCRC(StartDate="",EndDate="",Location="",Level="",Result)
	quit $$AccountPeriodTotalZCRC(StartDate,EndDate,Location,Level,.Result,"Child")

	
AccountPeriodTotalZCRC(StartDate="",EndDate="",Location="",Level="",Result,pstrCheckType)
	;-------------------------------------------------------------------------------
	; Check Account Period Totals
	;
	; Returns:
	;
	; History:
	; 08-Sep-2004		shobby		WWWVAR
	; 03-May-2004		shobby		Creation
	;-------------------------------------------------------------------------------
 	;
	new idFINGLAccount,Depth,Amt,Hash,idFINGLAccountLast,HashValue,idType,idPeriod
	
	if $get(Y)="" d ^WWWVAR
	kill Result  				; Clear Result
	set Depth=$length(Level) 	; Set the detail depth
	set idFINGLAccount=Level	; Set the idFINGLAccount to Start at the Level ( Optimisation )
	
	xecute "do APT"_pstrCheckType_"(idFINGLAccount)"
	
	if (idFINGLAccount'="")&&($data(@$$$Check@(pstrCheckType,idFINGLAccount))) {	; If the Start Account exsits, go back one
		set idFINGLAccount=$order(@$$$Check@(pstrCheckType,idFINGLAccount),-1) 	
	}
	
	for {											; Start of the Loop
		set idFINGLAccount=$order(@$$$Check@(pstrCheckType,idFINGLAccount))
		quit:idFINGLAccount=""
		if $extract(idFINGLAccount,1,Depth)'=Level {  					; If the Account is outside the Level
			if (+Level'=Level)||(+idFINGLAccount'=idFINGLAccount) { 	; If it is a String Quit
				quit
			} else { 			; Do number checking
				set idFINGLAccountLast=idFINGLAccount
				; Pad out the Number with zeros
				; Example if the Level is 13 Check 13, 130, 1300, 13000 etc.
				set idFINGLAccount=Level_$translate($justify("",$Length(idFINGLAccount)-Depth)," ","0")
				if idFINGLAccountLast>idFINGLAccount set idFINGLAccount=idFINGLAccount_"0" ; If the Account is Greater than the Level add an zero.
				; If the Account exists, go back one
				if (idFINGLAccount'="")&&($data(@$$$Check@(pstrCheckType,idFINGLAccount))) set idFINGLAccount=$order(@$$$Check@(pstrCheckType,idFINGLAccount),-1)
			}
		} else {				; Record the Info
			set idPeriod=""
			for {
				set idPeriod=$order(@$$$Check@(pstrCheckType,idFINGLAccount,idPeriod))
				quit:idPeriod=""		
				set idType=""
				for {
					set idType=$order(@$$$Check@(pstrCheckType,idFINGLAccount,idPeriod,idType))
					quit:idType=""
					set Amt=$get(@$$$Check@(pstrCheckType,idFINGLAccount,idPeriod,idType)) ; Get the Amount
					set Result("Total")=$$$FCAdd($get(Result("Total")),Amt)
					set Hash=$extract(idFINGLAccount,1,Depth+1)
					if Hash="" set Hash="?"
					set HashValue=$zcrc(idFINGLAccount_"("_idPeriod_","_idType_")="_Amt,7)
					set Result("Hash",Hash)=$zcrc($get(Result("Hash",Hash))_HashValue,7)
				}
			}
		}
	}
	kill @$$$Check@(pstrCheckType)
	
	Quit 1


APTParent(pidFINGLAccount="")
    ;-------------------------------------------------------------------------------
    ; Creates a list of Parent Accounts and the Period Totals for them.
    ;
    ; Returns:
    ;
    ; History:
    ; 14-Apr-2005		RobertW		SR12159: Make sure that FINGLTranType is no longer shared.
    ; 09-Sep-2004	shobby	 $$$FCBase (SR10349)
    ; 10-Aug-2004	shobby	 Ignore budgets, children don't have to add up to parent.
    ; 03-May-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
	;
	new idFINGLAccount,objFINGLPeriodTotal,fltAmount,idType,idPeriod,objFINGLTranType

	kill @$$$Check@("Parent")

	if pidFINGLAccount'="" {
		set idFINGLAccount=$order(^FINGLAccounts(YM,3,2,pidFINGLAccount_" "),-1)
	} else {
		set idFINGLAccount=""
	}

	for {
		set idFINGLAccount=$order(^FINGLAccounts(YM,3,2,idFINGLAccount))
		quit:idFINGLAccount=""
		quit:(pidFINGLAccount'="")&&($extract(idFINGLAccount,1,$length(pidFINGLAccount))'=pidFINGLAccount)
		set idPeriod=""
		for {
			set idPeriod=$order(^FINGLPeriodTotal(YM,idFINGLAccount,idPeriod))
			quit:idPeriod=""
			set idType=""
			for {
				set idType=$order(^FINGLPeriodTotal(YM,idFINGLAccount,idPeriod,idType))
				quit:idType=""
				set objFINGLTranType=$get(^FINGLTranType(YM,idType,1))
				if '$$$FINGLTranTypeBudget(objFINGLTranType) {  ;Ignore budgets, children don't have to add up to Budget.
					set objFINGLPeriodTotal=$get(^FINGLPeriodTotal(YM,idFINGLAccount,idPeriod,idType,1))
					set fltAmount=$$$FINGLPeriodTotalAmount(objFINGLPeriodTotal)
					if +fltAmount=0 {
						kill @$$$Check@("Parent",idFINGLAccount,idPeriod,idType)
					} else {
						set @$$$Check@("Parent",idFINGLAccount,idPeriod,idType)=$$$FCBase(fltAmount)
					}
				}
			}
		}
	}
	quit 1


APTChild(pidFINGLAccount="")
    ;-------------------------------------------------------------------------------
    ; Creates a list of Parent Accounts and the Balance of their child accounts.
    ;
    ; Notes:
    ; 		1.  Orders through FINGLAccounts and not FINGLPeriodTotal to support the 'Level'
    ; 		parameter when starting at specific accounts.
    ; 		2.  Working off of Parent Account property so no need to exclude Transaction
    ; 		Accounts
    ; 
    ; Returns:
    ;
    ; History:
    ; 14-Apr-2005		RobertW		SR12159: Make sure that FINGLTranType is no longer shared.
    ; 09-Sep-2004	shobby	 $$$FCBase (SR10349)
    ; 10-Aug-2004	shobby	 Ignore budgets, children don't have to add up to parent.
    ; 03-May-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
	;
	new idFINGLAccount,objFINGLAccount,fltAmount,idFINGLAccountParent,idType,idPeriod
	new objFINGLPeriodTotal,objFINGLTranType
	
	kill @$$$Check@("Child")
	
	if pidFINGLAccount'="" {
		set idFINGLAccountParent=$order(^FINGLAccounts(YM,50,pidFINGLAccount_" "),-1)
	} else {
		set idFINGLAccountParent=""
	}
	
	for {
		set idFINGLAccountParent=$order(^FINGLAccounts(YM,50,idFINGLAccountParent))
		quit:idFINGLAccountParent=""
		quit:(pidFINGLAccount'="")&&($extract(idFINGLAccountParent,1,$length(pidFINGLAccount))'=pidFINGLAccount)
		if idFINGLAccountParent'=" " {  ; Skip top account
			set idFINGLAccount=""
			for {
				set idFINGLAccount=$order(^FINGLAccounts(YM,50,idFINGLAccountParent,idFINGLAccount))
				quit:idFINGLAccount=""
				set idPeriod=""
				for {
					set idPeriod=$order(^FINGLPeriodTotal(YM,idFINGLAccount,idPeriod))
					quit:idPeriod=""
					set idType=""
					for {
						set idType=$order(^FINGLPeriodTotal(YM,idFINGLAccount,idPeriod,idType))
						quit:idType=""
						set objFINGLTranType=$get(^FINGLTranType(YM,idType,1))
						if '$$$FINGLTranTypeBudget(objFINGLTranType) {  ;Ignore budgets, children don't have to add up to Budget.
							set objFINGLPeriodTotal=$get(^FINGLPeriodTotal(YM,idFINGLAccount,idPeriod,idType,1))
							set fltAmount=$$$FCAdd($get(@$$$Check@("Child",idFINGLAccountParent,idPeriod,idType)),$$$FINGLPeriodTotalAmount(objFINGLPeriodTotal))
							if +fltAmount=0 {
								kill @$$$Check@("Child",idFINGLAccountParent,idPeriod,idType)
							} else {
								set @$$$Check@("Child",idFINGLAccountParent,idPeriod,idType)=$$$FCBase(fltAmount)
							}
						}
					}
				}
			}
		}
	}
	quit 1


Check(StartDate="",EndDate="",Location="",Level="",Result)
    ;-------------------------------------------------------------------------------
    ; Stand Alone check of Period Totals.  Allows drill down when AccountPeriodTotalZRCR
    ; reports errors.
    ;
    ; Returns:
    ;
    ; History:
    ; 03-May-2004   Shobby   Created
    ;-------------------------------------------------------------------------------

	new strStatus,idFINGLAccount,strRelationship,idPeriod,idType,fltAmountParent,fltAmountChild
	
	
	if $get(YUSER)="" do ^WWWVAR

	kill @$$$Check
	kill Result	

	set strStatus=$$$OK
	do APTParent(Level)
	do APTChild(Level)

	set strRelationship=""
	for {
		set strRelationship=$order(@$$$Check@(strRelationship))
		quit:strRelationship=""
		set idFINGLAccount=""
		for {
			set idFINGLAccount=$order(@$$$Check@(strRelationship,idFINGLAccount))
			quit:idFINGLAccount=""
			set idPeriod=""
			for {
				set idPeriod=$order(@$$$Check@(strRelationship,idFINGLAccount,idPeriod))
				quit:idPeriod=""
				set idType=""
				for {
					set idType=$order(@$$$Check@(strRelationship,idFINGLAccount,idPeriod,idType))
					quit:idType=""
					set fltAmountParent=$get(@$$$Check@("Parent",idFINGLAccount,idPeriod,idType))
					set fltAmountChild =$get(@$$$Check@("Child",idFINGLAccount,idPeriod,idType))
					if strRelationship="Child" {
						if fltAmountParent'=fltAmountChild {
							set Result("Hash",$$$ErrorNo(Result("Errors")))=$$$Text($lb("Fin00343",idFINGLAccount,idPeriod,idType,fltAmountParent,fltAmountChild,$$GetListOfChildAccounts(idFINGLAccount,idPeriod,idType)))  ;Account Period Total (%1,%2,%3). Amount(%4) does not match Child Amounts(%5) : %6.
							set strStatus='$$$OK
						}
						; Parent is removed if the amounts balance, loop will continue on from
						; block of 'Child' records to 'Parent' records.  Anything found in 
						; 'Parent' must be in error or it would have been removed by the following
						; command when looping through 'Child'.
						kill @$$$Check@("Parent",idFINGLAccount,idPeriod,idType)
					} else {
						set Result("Hash",$$$ErrorNo(Result("Errors")))=$$$Text($lb("Fin00343",idFINGLAccount,idPeriod,idType,fltAmountParent,fltAmountChild,$$GetListOfChildAccounts(idFINGLAccount,idPeriod,idType)))  ;Account Period Total (%1,%2,%3). Amount(%4) does not match Child Amounts(%5) : %6.
						set strStatus='$$$OK
					}
				}
			}
		}
	}

	kill @$$$Check

	if strStatus=$$$OK {
		set strStatus=2  ; Because this is a Standalone Check return 2 if Ok
	}
	quit strStatus


GetListOfChildAccounts(pidFINGLAccountParent,pidPeriod,pidType)
    ;-------------------------------------------------------------------------------
    ; Gets a list of child accounts and there amounts for reporting discrepancies.
    ;
    ; Returns:
    ;
    ; History:
    ; 03-May-2004   Shobby   Created
    ;-------------------------------------------------------------------------------
	;
	new lstChildren,idFINGLAccount
	
	set idFINGLAccount=""
	set lstChildren=""
	for {
		set idFINGLAccount=$order(^FINGLAccounts(YM,50,pidFINGLAccountParent,idFINGLAccount))
		quit:idFINGLAccount=""
		set lstChildren=lstChildren_idFINGLAccount_"("_+$get(^FINGLPeriodTotal(YM,idFINGLAccount,pidPeriod,pidType,1))_") "
	}
	
	quit lstChildren
]]></Routine>
</Export>