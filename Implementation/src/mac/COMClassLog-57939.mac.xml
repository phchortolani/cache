<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMClassLog" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMClassLog  ; Log/Save Class & Form changes
 
#include COMSYS
#include WWWConst
 
Log(Class="",Key="",Data="") 
    ;-------------------------------------------------------------------------------
    ; Log Change
    ;
    ; Returns:
    ;
    ; History:
	; 27-Aug-2007	GRF		allow unique entries for namespace
    ; 27-May-2005	RobertW	SR12056: Only do work if we need to.
    ; 12-Apr-2005	SCR		SR
    ;-------------------------------------------------------------------------------
	if Class="" quit
	if Key=""   quit
 
	new ListTime,BaseClass,strTime,strFileName,intMode,strPath,machineName,processNumber
	new User,Prefix	
 
	set Key=$piece(Key,",")
	
	Lock +^COMClassLog:.5
	; Check List of Classes Build Time, More than 60 Secs old rebuild it.
	set ListTime=$get(^mtemp("COMClassLog"))
	
	if (ListTime+60<$zh) || 'ListTime || (ListTime>$zh) {
		do BuildList()
	}
	Lock -^COMClassLog
	set BaseClass=$get(^mtemp("COMClassLog",Class))
	if BaseClass'="" {
		set Prefix=$select(BaseClass="WWW001":"Class-",1:"Form-")
		For intMode=1:1:3 {
			if $data(^%SourceCode($znspace)) {                                    ; 27-Aug-2007
				set strPath=$piece($get(^%SourceCode($znspace)),"|",intMode)
			} else {	
				set strPath=$piece($get(^%SourceCode),"|",intMode)
			}
 
			if strPath'="" {
				set strFileName=Prefix_Key
				if intMode=2 {
					set strFileName=strFileName_"-"_$znspace
				}
				if intMode=3 {
					set User=$get(YBED)
					if User="" {
						set processNumber=$piece($io,"|",4)
						set User=$zutil(67,12,processNumber)
					}
					set strTime=$tr($zdt($h,3)," :","--")
					set strTime=$extract(strTime,1,$length(strTime)-4)
					set strFileName=strFileName_"-"_$znspace_"-"_strTime_"-"_User
					set strPath=strPath_$piece(Key,".",1)_"\"
					do $zf(-1,"mkdir "_strPath)
				}
				do CopyToFile(BaseClass,Key,strPath_strFileName_".txt")
			}
		}
 
	}	
	
	quit
	
BuildList()
    ;-------------------------------------------------------------------------------
    ; Build a List of Classes
    ;
    ; Returns:
    ;
    ; History:
    ; 12-Apr-2005		SCR			Created
    ;-------------------------------------------------------------------------------
	new Classes,Count,Class
	
	kill ^mtemp("COMClassLog")
	set Classes=$$GetClasses("WWW001") ; Classes
	for Count=1:1:$length(Classes,",") {
		set Class=$piece(Classes,",",Count)
		if Class'="" {
			set ^mtemp("COMClassLog",Class)="WWW001"
		}
	}
	set Classes=$$GetClasses("WWW120") ; Classes
	for Count=1:1:$length(Classes,",") {
		set Class=$piece(Classes,",",Count)
		if Class'="" {
			set ^mtemp("COMClassLog",Class)="WWW120"
		}
	}
	set ^mtemp("COMClassLog")=$zh
	quit
	
CopyToFile(RootClass,Name,filename)
	;----------------------------------------------------------------
    ;
    ; Returns:Status
    ;
    ; History:
    ; 12-Apr-2005	SCR		Created 
	;----------------------------------------------------------------
	new Class,Classes,Count,Glo,Key,MaxKey,Rec,Status,Sub,file
	
 	set Status=$$$OK
 	
	set file = ##class(%File).%New(filename)
	do file.Open("WSN")
	if '##class(%File).Exists(filename) {
	 	set Status='$$$OK  ; Can not Open File %1
	}
 	 
 	if $$$ISOK(Status) {
		set Classes=$$GetClasses(RootClass)
		for Count=1:1:$length(Classes,",") {
			set Class=$piece(Classes,",",Count)
			set Glo="^"_Class_"(0,"""_Name_""")"
			set MaxKey=$ORDER(^WWW002(0,Class,""),-1)
			for {  
				set Glo=$query(@Glo)
				quit:Glo=""
				
				if ($qsubscript(Glo,2)'=Name) Quit			; if old Template
				quit:$$$ISERR(Status)
				
				if ($qsubscript(Glo,1)=0)  				; If Same Company
					&&($qsubscript(Glo,MaxKey+2)=1) {		; if Last Subscript = 1
					set Key=""					
					for Sub=1:1:MaxKey {					; Create New Key
						set $piece(Key,",",Sub)=$qsubscript(Glo,Sub+1) 
					}
					set Rec=$get(@Glo)
					;write Class,Y,Key,Y,Rec,!
					do file.WriteLine(Class_Y_Key_Y_Rec)
				}
			}
		}
		do file.Close()
	}
	
	quit Status
 	
CopyFromFile(filename)
    ;-------------------------------------------------------------------------------
    ; Copies a template from a file.
    ; 
    ;
    ; Returns:Status
    ;
    ; History:
    ; 12-Apr-2005	SCR		Created 
    ;-------------------------------------------------------------------------------
	new Class,IO,Key,Line,Rec,Status,Template,stream
	
	set Status=$$$OK
	set Template=""
	
	set stream = ##class(%FileCharacterStream).%New()
	set stream.Filename = filename
 	
	while 'stream.AtEnd {
		set Line=stream.ReadLine()
			
		set Class=$piece(Line,Y,1)
		set Key=$piece(Line,Y,2)
		set Rec=$piece(Line,Y,3,999)
 	}
	quit Status
	
GetClasses(Primary="")
    ;-------------------------------------------------------------------------------
	; Get Class for a Primary Key & The Primary Class
    ; Returns:Status
    ;
    ; History:
    ; 02-Oct-2007	GRF		SR15604: exclude logging records.
    ; 12-Apr-2005	SCR		Created 
    ;-------------------------------------------------------------------------------
	new Class,Classes,Key,KeyRec,ClassRec
	new Exclude
	
	if Primary="" set Primary=" "
	
	if $get(^mtemp("GetClasses",Primary))'="" quit $get(^mtemp("GetClasses",Primary))
	set Classes=Primary
	
	set Exclude = ",WWWDLF,WWWDMEU,WWWSORTKEY,WWWSTRUCT,WWW1205,WWW1205B,WWW120D,WWW121D,WWW121D1,WWW121D2,WWW1251,WWW126,WWW1261,WWW1262,"
	set Exclude = Exclude_"WWWPRO,WWWPRODAT,"    ; SR15604
	set Class="WWW"
	for {
		set Class=$order(^WWW001(0,Class)) 
		quit:$extract(Class,1,3)'="WWW"
		
		if Exclude[(","_Class_",") continue
		
		set Key=+$order(^WWW002(0,Class,""))
		set KeyRec=$get(^WWW002(0,Class,Key,1))
		if $$$WWW002RelationClass(KeyRec)=Primary {
			set ClassRec=$get(^WWW001(0,Class,1))
			set Classes=Classes_","_Class
		}
	}
	set ^mtemp("GetClasses",Primary)=Classes
	quit Classes
]]></Routine>
</Export>