<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARFiltrosRelatorio" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARFiltrosRelatorio
	quit
	
	
GotoFiltrosRelatorio(pNomeRotinaJasper="",pCheck=0,pRadio=1,pFormularioFiltro="VARFiltrosRelatorio",pParametrosJasper="")
	;Chama a página que contem os filtros para gerar o relatório.
	;Essa rotina é necessária para salvar todo os parâmetros do
	;form original que serão utilizados na criação do relatório.
	;Uso: colocar no hook do form:
	;  do GotoFiltrosRelatorio^VARFiltrosRelatorio("RunReportMov",0,1,"VARFiltrosRelatorio","x;y;z")
	;  
	;Parâmetros:
	;  pRotinaJasper - ver rotina desejada no arquivo VARJasperRunReport.mac
	;                  as rotinas que precisam de parametros devem usar
	;                  sua própria tela com filtros especiais
	;                  
	; Valores iniciais a serem exibidos para os dois rádios:
	; 
	; 1º) pCheck: 0:não, 1:sim
	; 2º) pRadio: 1:Sequencia, 2:Código produto, 3: Descrição produto (quando usado com classificarSeqCodDes)
	;             ou
	;             1:Código produto, 2: Descrição produto  (quando usado com classificarCodDes: versões "SemSeq")
	;                  
	;  pFormularioFiltro - nome do formulário que contém os filtros desejados. Até o momento
	;                      existem 2 possibilidades: VARFiltrosRelatorioSemSeq ou VARFiltrosRelatorio
	;  
	;  pParametrosJasper - os parametros que serão usados na rotina jasper que gera
	;                      o relatório. Os parâmetros são separados por ";"
	;                                      
	;
	;Histórico:
	;07-Oct-2010 Marcelo Jardim : copied from SES
	;19-Fev-2008 Soeiro:	criado
	
	new parametros
	
	if (pNomeRotinaJasper="") {
		w !,"Erro: VARFiltroRelatorio.mac a rotina jasper deve ser especificada",!
		w !,"YFORM"=$get(YFORM)
		quit
	}
	
	//Grava variáveis usadas. Atenção a ordem é YFORM;YKEY;pNomeRotinaJasper;Check;Radio;Parametros
	set parametros=YFORM_";"_YKEY_";"_pNomeRotinaJasper_";"_pCheck_";"_pRadio_";"_pParametrosJasper
	set ^zzFellipe("parametro") = YFORM_";"_YKEY_";"_pNomeRotinaJasper_";"_pCheck_";"_pRadio_";"_pParametrosJasper
	set ^VARFiltrosRelatorio(YBED,"parametros iniciais")=parametros
	set ^VARFiltrosRelatorio(YBED,"parametros pParametrosJasper")=$get(pParametrosJasper)
	
	//Vai para a outra página
	do GoToForm^COMUtilForm(pFormularioFiltro, YKEY,,parametros)
	quit
	
OnAfterButtonLine()
 	;----------------------------------------------------
 	;Retira as variáveis necessárias para que os campos
 	;hidden do formulário sejam corretamente preenchidos.
 	;Esta rotina é chamada pelo formulário que contém os filtros
 	;a serem passados pro relatório.
 	;
 	;Atenção: a ordem do YPARA é YFORM;YKEY
 	;
 	;Histórico:
 	;19-Fev-2008 Soeiro:	Criado
 	;---------------------------------------------------------
 	
	if ($data(YPARA)) {
 
		//Copia o primeiro valor que é sempre um YFORM
		set valorYFORM=$piece(YPARA,";",1)
		
		//Copia o segundo, que é considerado o YKEY
		set valorYKEY=$piece(YPARA,";",2)
		
		//Copia a rotina que executa o relatório
		set valorRotinaJasper=$piece(YPARA,";",3)
		
		//Prepara valores iniciais para o formulário (o form usa esses valores)
		set classificarGrupo=$piece(YPARA,";",4) ;pCheck
 
		set classificarSeqCodDes=$piece(YPARA,";",5) ;pRadio
		
		//Copia os parâmetros extras, se existirem
		set valorParametrosJasper=$piece(YPARA,";",6,$LENGTH(YPARA))
	}
	
	quit
 
OnAfterButtonLineSemSeq()
 	;----------------------------------------------------
 	;Retira as variáveis necessárias para que os campos
 	;hidden do formulário sejam corretamente preenchidos.
 	;Esta rotina é chamada pelo formulário que contém os filtros
 	;a serem passados pro relatório.
 	;
 	;
 	;Atenção: a ordem do YPARA é YFORM;YKEY
 	;
 	;Histórico:
 	;19-Fev-2008 Soeiro:	Criado
 	;---------------------------------------------------------
 	
	if ($data(YPARA)) {
 
 		//Copia o primeiro valor que é sempre um YFORM
		set valorYFORM=$piece(YPARA,";",1)
		
		//Copia o segundo, que é considerado o YKEY
		set valorYKEY=$piece(YPARA,";",2)
		
		//Copia a rotina que executa o relatório
		set valorRotinaJasper=$piece(YPARA,";",3)
		
		//Prepara valores iniciais para o formulário (o form usa esses valores)
		set classificarGrupo=$piece(YPARA,";",4) ;pCheck
 
		set classificarCodDes=$piece(YPARA,";",5) ;pRadio
			
		//Copia os parâmetros extras, se existirem
		set valorParametrosJasper=$piece(YPARA,";",6,$LENGTH(YPARA))
	}
	
	quit
 
OnAfterSave()
	;-----------------------------------
	; Executa o relatório usando as variáveis dos
	; filtros como parâmetros. As variáveis globais que devem
	; existir antes dessa chamada:
	; 
	; valorYKEY - KEY do registro do form que chamou a tela de filtros.
	;             Cada relatório pode usar ou não isso, mas o valor deve existir
	;             
	; valorYFORM - form que chamou a tela de filtros.
	;              Cada relatório pode usar ou não isso, mas o valor deve existir
	;              
	; valorRotinaJasper - nome da rotina que gera o relatório
	; 
	; 1º) pCheck: classificarGrupo= 0:não, 1:sim
	; 2º) pRadio: classificarSeqCodDes= 1:Sequencia, 2:Código produto, 3: Descrição produto
	; 
	; Outras globais: valores específicos que cada relatório usa
	;
 	;Histórico:
 	;07-Oct-2010 Marcelo Jardim : copied from SES
 	;19-Fev-2008 Soeiro:	Criado
	;--------------------------
 	
	//Testa se a rotina existe
	if ($get(valorRotinaJasper)="") {
		w !,"Erro: VARFiltroRelatorio.mac a rotina jasper deve ser especificada",!
		w !,"YFORM"=$get(YFORM)
		quit
	}
	
	if ($get(valorParametrosJasper)'="") {
		set valorParametrosJasper=$$generateQuotedParameters(valorParametrosJasper)
	}
	set ^VARFiltrosRelatorio(YBED,"ExecuteCode")="do "_valorRotinaJasper_"^VARJasperRunReport("_valorParametrosJasper_")"
	do ExecuteCode^COMUtils("do "_valorRotinaJasper_"^VARJasperRunReport("_valorParametrosJasper_")")
	quit	
	
OnAfterSaveSemSeq()
	;-----------------------------------
	; Executa o relatório usando as variáveis dos
	; filtros como parâmetros. As variáveis globais que devem
	; existir antes dessa chamada:
	; 
	; valorYKEY - KEY do registro do form que chamou a tela de filtros.
	;             Cada relatório pode usar ou não isso, mas o valor deve existir
	;             
	; valorYFORM - form que chamou a tela de filtros.
	;              Cada relatório pode usar ou não isso, mas o valor deve existir
	;              
	; valorRotinaJasper - nome da rotina que gera o relatório
	; 
	; 1º) pCheck: classificarGrupo= 0:não, 1:sim
	; 2º) pRadio: classificarCodDes= 1:Código produto, 2: Descrição produto
	; 
	; Outras globais: valores específicos que cada relatório usa
	;
 	;Histórico:
 	;07-Oct-2010 Marcelo Jardim : copied from SES
 	;19-Fev-2008 Soeiro:	Criado
	;--------------------------
 
	//Testa se a rotina existe
	if ($get(valorRotinaJasper)="") {
		w !,"Erro: VARFiltroRelatorio.mac a rotina jasper deve ser especificada",!
		w !,"YFORM"=$get(YFORM)
		quit
	}
 
 	if ($get(valorParametrosJasper)'="") {
		set valorParametrosJasper=$$generateQuotedParameters(valorParametrosJasper)
	}
 	
	set ^VARFiltrosRelatorio(YBED,"ExecuteCode")="do "_valorRotinaJasper_"^VARJasperRunReport("_valorParametrosJasper_")"
	do ExecuteCode^COMUtils("do "_valorRotinaJasper_"^VARJasperRunReport("_valorParametrosJasper_")")
	quit
	
generateQuotedParameters(originalParameters)
	; Quotes and replaces , for ;
	; Gets a list of 123;0;derr;ytyt and generates: "123","0","derr","ytyt"
	new result,objList, s
	set result=""
	
	if ($get(originalParameters)="") quit ""
	
	;set result1 = $piece(originalParameters,";",1)
	;set result2 = $piece(originalParameters,";",2)
	;set result = """"_result1_""","""_result2_""""
	set result1 = $piece(originalParameters,";",1)
	set result = """"_result1_""""
 	set result2 = $piece(originalParameters,";",2)
 	if result2 '="" {
  	  set result = """"_result1_""","""_result2_""""
   	}
   	set result3 = $piece(originalParameters,";",3)
 	if result3 '="" {
  	  set result = """"_result1_""","""_result2_""","""_result3_""""
 	}
   	set result4 = $piece(originalParameters,";",4)
 	if result4 '="" {
  	  set result = """"_result1_""","""_result2_""","""_result3_""","""_result4_""""
 	}
   	set result5 = $piece(originalParameters,";",5)
 	if result5 '="" {
  	  set result = """"_result1_""","""_result2_""","""_result3_""","""_result4_""","""_result5_""""
 	}
	quit result	
	
	
	;Search all of them
	
	set objList=##class(Util.StringList).%New(originalParameters, ";")
	while objList.hasNext() {
		//Pega id
		set s=objList.next()
		if ((s="") || (s=";")) continue
		
		if (result="") {
			set result=""""_s_""""
		} else {
			set result=result_","""_s_""""
		}
		
	}
		
	quit result
]]></Routine>
</Export>