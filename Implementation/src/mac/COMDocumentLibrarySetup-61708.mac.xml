<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMDocumentLibrarySetup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMDocumentLibrarySetup
	#include COMSYS
 	#include WWWConst
 	#include COMConst
 	#include %occInclude
 
#define Separator	$select($System.Version.GetOS()="UNIX":"/",1:"\")  
 
OnAfterDataFields()
	;-------------------------------------------------------------------------------
	; Display the grid of when this task is to be scheduled.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	if YSEITE=2 {
		do AfterDataField^COMSchedule(7,"GetDocuments","Start^COMDocumentLibrarySetup("""_$get(YKEY)_""")")
	}
	quit
 
 
Start(pYKEY)
	;-------------------------------------------------------------------------------
	; Start the process to copy the files. 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 15-Jun-2007	HeberB	SRBR014439: Pending the use of $ZF
	; 12-Jun-2007	HeberB	SRBR014439: Added directory path copy
	; 19-Apr-2007	RPW		SRBR014271: Log is not a valid variable name, should be idLog
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new idLog,objCOMDocumentLibrarySetup
	
 	if '$$$NoKey(pYKEY) {
		set objCOMDocumentLibrarySetup=$get(^COMDocumentLibrarySetup(YM,pYKEY,1))
		if objCOMDocumentLibrarySetup'="" {
			do StartLog^COMLog($$$COMDocumentLibrarySetupDescription(objCOMDocumentLibrarySetup),.idLog)
			; SRBR014439
			job CopyFTP(idLog,objCOMDocumentLibrarySetup)
			;if ($$$COMDocumentLibrarySetupMasterCopyOn(objCOMDocumentLibrarySetup) = 1) { ; FTP
			;	job CopyFTP(idLog,objCOMDocumentLibrarySetup)
			;} elseif ($$$COMDocumentLibrarySetupMasterCopyOn(objCOMDocumentLibrarySetup) = 2) { ; Directory
			;	job CopyDirectory(idLog,objCOMDocumentLibrarySetup)
			;}			
			do RedirectForm^COMUtilForm("COMMsg",idLog,YFORM_",","","")
		}
 	}
	quit
 
 
GetVersion()
	;-------------------------------------------------------------------------------
	; Get the System Version Number  
	;
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	; String of the Alphalinc Version number.
	;
	; History:
	; 19-Apr-2007	RPW		SRBR014271: Created
	;-------------------------------------------------------------------------------
 
	quit $$$WWWVERSIONActualVersionNo($get(^WWWVERSION(0,"AlphaLinc",1)))
 
 
CopyFTP(pidLog,pobjCOMDocumentLibrarySetup)
	;-------------------------------------------------------------------------------
	; Copy all modified files found in the specified FTP site. 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Apr-2007	RPW		SRBR014271: No need for user to type //, just like upgrade handler. Added pidLog
	; 14-Mar-2007	shobby		SRBR014271:	Language texts
	; 05-Mar-2007	shobby		SRBR014271: Removed the limitation of only copying current version
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new ftpURL,UrlComponents,strUsername,strPassword,intPos,strVersion,strStatus,YUSER
 	new intCount,intTotalCount,strHost,strPath,strPort,strFTP
 		
	if $get(Y)="" do ^WWWVAR
	
	set strStatus=$$$OK
 
 	set intTotalCount=$$GetEstimatedNumberOfFiles()
	set intCount=0
 
		
	do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00282",$$$COMDocumentLibrarySetupDescription(pobjCOMDocumentLibrarySetup)))) ;Starting %1 Update.
	set strVersion=$$GetVersion()
	if strVersion'="" {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00283",strVersion)))   ;Version %1 Found.
		set strVersion=$piece(strVersion,".",1,2)
		set ftpURL="//"_$$$COMDocumentLibrarySetupFTPURL(pobjCOMDocumentLibrarySetup)
		;set ftpURL=$$$COMDocumentLibrarySetupFTPURL(pobjCOMDocumentLibrarySetup)_"/Version "_strVersion_"/HTML"
		set strUsername = $$$COMDocumentLibrarySetupUsername(pobjCOMDocumentLibrarySetup)
		set strPassword = $$$COMDocumentLibrarySetupPassword1(pobjCOMDocumentLibrarySetup)
		
		do ##class(%Net.URLParser).Parse(ftpURL,.UrlComponents)
		if (($get(UrlComponents("scheme"))'="ftp") && ($get(UrlComponents("scheme"))'="")) {
			set strStatus=$$^WWWTEXT("Com00040") ; URL scheme must be FTP
		} else {
			set strHost	=$get(UrlComponents("host"))
			set strPath =$get(UrlComponents("path"))
			set strPort =$get(UrlComponents("port"))
			
			set:(strPort="") strPort=21
			
			; Attempt to connect
			do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00284",strHost)))  ;Connection to %1.
			set strFTP=##class(%Net.FtpSession).%New()
			if '(strFTP.Connect(strHost,strUsername,strPassword,strPort)) {
				do AddMessage^COMLog(pidLog,$$$Text("Com00285")_$$$Text("Com00041"))  ;Failed:Invalid login details
			} else {
				set strStatus=$$ReadFolder(pidLog,.strFTP,strPath,"/",$$$COMDocumentLibrarySetupLocalPath(pobjCOMDocumentLibrarySetup),.intCount,intTotalCount)
				do strFTP.Logout()
			}
		}
	}
	if $$$ISOK(strStatus) {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00286",$$$COMDocumentLibrarySetupDescription(pobjCOMDocumentLibrarySetup))))	;%1 Completed.
	} else {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00287",$$$COMDocumentLibrarySetupDescription(pobjCOMDocumentLibrarySetup))))	;%1 Failed! %2
	}
	quit strStatus
	
 
ReadFolder(pidLog,pstrFTP,pstrPathFrom,pstrSubPathFrom,pstrPathTo,pintCount,pintTotalCount)
	;-------------------------------------------------------------------------------
	; Loops through the files found on the FTP site, attempting to copy files or recursively
	; calling this routine when directories are found. 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 03-May-2007	HeberB	SRBR014271: Missing pidLog
	; 19-Apr-2007	RPW		SRBR014271: Make Separator a macro, added pidLog, handle errors from List
	; 						Removed no-op code.
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new strStatus,intPos,strLine,strNewLine,strFilename,strFileDate,objStream
 	new objFile,strMessageLogDate
 	
	set strMessageLogDate=$h
	set strStatus=$$SetDirectory(pidLog,.pstrFTP,pstrPathFrom_pstrSubPathFrom)
	if $$$ISOK(strStatus) {
		set strStatus=$$List(.pstrFTP,.objStream)
		if $$$ISOK(strStatus) {
			for {
				;quit:$$$ISERR(strStatus)
				set intPos=999
				set strLine=objStream.ReadLine(.intPos)
				quit:(intPos=-1)			                 ; EOF
				; remove duplicate white-spaces
				set strLine=$translate(strLine,$char(9)," ")	 ; replace tabs
				for   {
					set intPos=$find(strLine,"  ")
					quit:(intPos=0)		                 ; None found
					
					set strNewLine=$extract(strLine,1,intPos-2)_$extract(strLine,intPos,999)
					set strLine=strNewLine
				}
				; Now ready to extract the useful stuff
				set strFilename    = $piece(strLine," ",4,999)
				set strFileDate    = $piece(strLine," ",1,2)
		 
				if $piece(strLine," ",3)="<DIR>" {
					;set strStatus=$$ReadFolder(.pstrFTP,pstrPathFrom,pstrSubPathFrom_strFilename_"/",pstrPathTo,.pintCount,pintTotalCount)
					set strStatus=$$ReadFolder(pidLog,.pstrFTP,pstrPathFrom,pstrSubPathFrom_strFilename_"/",pstrPathTo,.pintCount,pintTotalCount)
					//if strStatus=$$$OK set strStatus=$$SetDirectory(.pstrFTP,pstrPathFrom_pstrSubPathFrom) // SRBR014271 This does nothing
				} else {
					set strStatus=##class(%Library.File).CreateDirectoryChain($translate(pstrPathTo_pstrSubPathFrom,"/",$$$Separator))
					; If copy fails ignore and go to next file.  Will be picked up next time the process runs.
					do CopyFile(pidLog,pstrFTP,pstrPathFrom,pstrSubPathFrom_strFilename,strFileDate,.strMessageLogDate,pstrPathTo,.pintCount,pintTotalCount)
				}
			}
		}
	}
	quit strStatus
 
	/* 
GetFreeDriver()	
	;-------------------------------------------------------------------------------
	; Find free driver to connect to remote site 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2007	HeberB	SRBR014439: Created
	;-------------------------------------------------------------------------------
	;
	new intChar, strCmd, strDriver
	
	set strDriver = ""
	
	for intChar = $ascii("Z"):-1:$ascii("F") {
		set strCmd = "dir " _ $char(intChar) _ ":"
		set strStatus = $ZF(-1,strCmd)
		if (strStatus=1) {
			set strDriver = $char(intChar)
			set strCmd = "net use " _ $char(intChar) _ ": /delete"
			set strStatus = $ZF(-1,strCmd)
		}
		
	}
 	quit strDriver
 
ValidatePath(pstrPath)
	;-------------------------------------------------------------------------------
	; Verify whether path is correct and with valid chars only 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2007	HeberB	SRBR014439: Created
	;-------------------------------------------------------------------------------
	;
	new strResult,intLen
	//for i=1:1:1000 { HANG 1 }
	set intLen = $length(pstrPath)
	
	set strResult = pstrPath ?1"\\".E
	quit:(strResult = 0) $$$NO
 
	set strResult = $$ValidateDirectory($extract(pstrPath,3,intLen))
 
	quit strResult
 
ValidateDirectory(pstrPath)
	;-------------------------------------------------------------------------------
	; Check folder names have valid chars only and backslash separatec
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2007	HeberB	SRBR014439: Created
	;-------------------------------------------------------------------------------
	;
	new strResult, intPos, intLen
 
	set strResult = $$$NO
 
	set intLen = $length(pstrPath)
	set intPos = $find(pstrPath,"\")
	
	if (intPos > 0) {
		set intPos = intPos - 1
		if (intLen > intPos) {	; chars after backslash
			set strResult = $$CheckFolderName($extract(pstrPath,1,intPos-1))
			if (strResult = $$$OK) {
				set strResult = $$ValidateDirectory($extract(pstrPath,intPos+1,intLen))
			}
		}
		if (intLen = intPos) {	; last char is a backslash
			set strResult = $$CheckFolderName($extract(pstrPath,1,intLen-1))
		}
	} else {	; intPos = 0 -> no more backslash	
	 	set strResult = $$CheckFolderName($extract(pstrPath,1,intLen))
	} 
	quit strResult
 
CheckFolderName(pstrPath)
	;-------------------------------------------------------------------------------
	; Check folder names have valid chars only 
	;
	;The Windows RSS Platform imposes the following constraints on feed and folder names:
	;
	;You may use any character in the current code page, including Unicode characters, 
	;for a feed or folder name, except control characters in the range of 0 (zero) through 31. 
	;If a method is called with a name that contains one or more control characters, the method will fail.
	;
	;The backslash (\) is reserved for use as a path separator and may not be used as part 
	;of a feed or folder name. It is valid only as part of a path.
	;
	;Folder and feed names are limited to 120 characters in length. If a method is called 
	;with a name longer then 120 characters, the method will fail.
	;
	;Folder paths (including the feed name) must be less than MAX_PATH in length after encoding.
	;
	;Note   To allow a wider variety of names, some characters that are normally disallowed 
	;by the file system are encoded. Encoding introduces additional characters into a name, 
	;up to twice its original length. The encoded names, when concatenated, must not exceed MAX_PATH. 
	;
	;The empty string (string of zero length) is reserved for the root subscription folder.
	;
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2007	HeberB	SRBR014439: Created
	;-------------------------------------------------------------------------------
	;
	new strResult, intLen
	
	set intLen = $length(pstrPath)
	
	; no blank folder name
	quit:(intLen = 0) $$$NO
 
	; no longer than 120
	quit:(intLen > 120) $$$NO
	
	; no control chars 0..31	
	set strResult = pstrPath?.E1.C.E
	quit:(strResult = 1) $$$NO
	
	; no "\" on folder names
	set strResult = pstrPath?.E1."\".E
	quit:(strResult = 1) $$$NO
 
	quit $$$OK
 
 
ExecuteCommand(pstrCmd) 
	;-------------------------------------------------------------------------------
	; Execute DOS command line
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2007	HeberB	SRBR014439: Created
	;-------------------------------------------------------------------------------
	;
	new strResult
	set strResult = $ZF(-1,pstrCmd)
	if (strResult = 0) {
		set strResult = $$$OK
	} else {
		set strResult = $$$NO
	}
	quit strResult
 
DisconnectRemoteDirectory(pstrDriver)
	;-------------------------------------------------------------------------------
	; Disconnect from remote directory
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2007	HeberB	SRBR014439: Created
	;-------------------------------------------------------------------------------
	;
	new strCmd
	set strCmd = "net use "_pstrDriver_": /delete "
	quit $$ExecuteCommand(strCmd)
 
ConnectRemoteDirectory(pstrDriver,pstrPath)
	;-------------------------------------------------------------------------------
	; Connect to remote directory
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2007	HeberB	SRBR014439: Created
	;-------------------------------------------------------------------------------
	;
	new strCmd
	set strCmd = "net use "_pstrDriver_": "_pstrPath	
	quit $$ExecuteCommand(strCmd)
 
CopyFilesFromRemoteDirectory(pstrDriver,pstrLocalPath) 
	;-------------------------------------------------------------------------------
	; Copy all modified files found in the specified Directory path. 
	;	/D - copy files whose source time newer than target
	;	/E - copy files and folders
	;	/V - verifies each file
	;	/Q - does not display while copying
	;	/K - copy files attributes
	;	/Y - suppress prompting to overwrite
	;	/C - continues copying even if error occurs
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 11-Jun-2007	heberb		SRBR014439: Created based on CopyFTP
	;-------------------------------------------------------------------------------
	;
	new strCmd
	set strCmd = "xcopy /D /E /V /Q /K /Y /C "_pstrDriver_": "_pstrLocalPath
	quit $$ExecuteCommand(strCmd)
 	
CopyDirectory(pidLog,pobjCOMDocumentLibrarySetup)
	;-------------------------------------------------------------------------------
	; Copy all modified files found in the specified Directory path. 
	;	TODO : MODIFIED
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 11-Jun-2007	heberb		SRBR014439: Created based on CopyFTP
	;-------------------------------------------------------------------------------
	;
	new strVersion,strStatus,strRemotePath,strLocalPath,strDriver	;,strUsername,strPassword
 		
	if $get(Y)="" do ^WWWVAR
	//for i=1:1:1000 { hang 1 }
	set strStatus = $$$NO
 
	do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00282",$$$COMDocumentLibrarySetupDescription(pobjCOMDocumentLibrarySetup)))) ;Starting %1 Update.
 
	set strVersion=$$GetVersion()
	if strVersion'="" {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00283",strVersion)))   ;Version %1 Found.
		set strVersion=$piece(strVersion,".",1,2)
 
		set strRemotePath = $$$COMDocumentLibrarySetupFTPURL(pobjCOMDocumentLibrarySetup)
		;set strUsername   = $$$COMDocumentLibrarySetupUsername(pobjCOMDocumentLibrarySetup)
		;set strPassword   = $$$COMDocumentLibrarySetupPassword1(pobjCOMDocumentLibrarySetup)
		set strLocalPath  = $$$COMDocumentLibrarySetupLocalPath(pobjCOMDocumentLibrarySetup)
		
		; find an empty drive letter
		set strDriver = $$GetFreeDriver()
 
		if (strDriver '= "") {
 
			; Attempt to connect
			do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00284",strRemotePath)))  ;Connection to %1.		
			; connect to remote directory
			set strStatus = $$ConnectRemoteDirectory(strDriver,strRemotePath)
 
			if (strStatus = $$$OK) {
				; do copy
				set strStatus = $$CopyFilesFromRemoteDirectory(strDriver,strLocalPath)
 
				if (strStatus = $$$OK) {
					do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00286",$$^WWWTEXT("143"))))  ;%1 completed
				} else {
					do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00287",$$^WWWTEXT("143"))))  ;Failed copy
				}
				set strStatus = $$DisconnectRemoteDirectory(strDriver)
			} 
		}
	}
	if $$$ISOK(strStatus) {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00286",$$$COMDocumentLibrarySetupDescription(pobjCOMDocumentLibrarySetup))))	;%1 Completed.
	} else {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00287",$$$COMDocumentLibrarySetupDescription(pobjCOMDocumentLibrarySetup))))	;%1 Failed! %2
	}
	quit strStatus
	
 	*/
 
 
 
GetIndex(pidLog,pstrMessageLogDate)
	;-------------------------------------------------------------------------------
	; Updates the message log every 100 seconds 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Apr-2007	RPW		SRBR014271: Added pidLog
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new intIndex,objCOMMsgLog
	
	set intIndex=$order(^COMMsgLog(0,pidLog,""),-1)
	if intIndex'="" {
		if $$DateDiff^COMUtilDate(pstrMessageLogDate,$h)>100 {
			set objCOMMsgLog=$get(^COMMsgLog(0,pidLog,intIndex,1))
			set intIndex=intIndex+1
			set pstrMessageLogDate=$h
		}
	}	
 	quit intIndex
 	
 	
GetEstimatedNumberOfFiles()
	;-------------------------------------------------------------------------------
	; Estimates the number of files that will be downloaded based on the number that
	; were downloaded previously.  Approximate only, not accurate. 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Apr-2007	RPW		SRBR014271: idx is a variable prefix, not a variable name.
	; 						According to usage, this is a file path.
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new intCount,strFilePath
	
	set intCount="?"
	set strFilePath=""
	for {
		set strFilePath=$order(^COMDocumentLibrary(strFilePath))
		quit:strFilePath=""
		set intCount=intCount+1
	}
	quit intCount
 
CopyFile(pidLog,pstrFTP,pstrPathFrom,pstrFileName,pstrfileDate,pstrMessageLogDate,pstrPathTo,pintCount,pintTotalCount)
	;-------------------------------------------------------------------------------
	; If the specified file is out of date download a new copy from the FTP site. 
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 03-May-2007	HeberB	SRBR014271: Missing pidLog
	; 19-Apr-2007	RPW		SRBR014271: Make Separator a macro. Added pidLog
	; 14-Mar-2007	shobby		SRBR014271:	Language texts
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new objStream,strFileName,strStatus,strFileNameTo
 
	set strStatus=$$$OK
	set strFileName=$translate(pstrFileName,"/",$$$Separator)
	set strFileName=$$FixFileName(strFileName)
	set strFileNameTo=pstrPathTo_strFileName
	if pintCount'="?" set pintCount=pintCount+1
	if +pintCount>pintTotalCount set pintTotalCount=pintCount
	if ($get(^COMDocumentLibrary(pstrPathFrom_pstrFileName))'=pstrfileDate)||'(##class(%Library.File).Exists(pstrPathTo_strFileName)) {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00288",pintCount,pintTotalCount,strFileName)),$$GetIndex(pidLog,.pstrMessageLogDate)) ;%1 of %2 copying: %3
		Set objStream=##class(%FileBinaryStream).%New()
		set strStatus=objStream.LinkToFile(strFileNameTo)         ; 03-Aug-2004 <TODO?>
		if $$$ISOK(strStatus) set strStatus=pstrFTP.Retrieve(pstrPathFrom_pstrFileName,.objStream)
		if $$$ISOK(strStatus) set strStatus=objStream.SaveStream()
		if $$$ISOK(strStatus) set strStatus=objStream.%Close()
		if $$$ISOK(strStatus) set ^COMDocumentLibrary(pstrPathFrom_pstrFileName)=pstrfileDate
	} else {
		;do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00289",pintCount,pintTotalCount,strFileName)),$$GetIndex(.pstrMessageLogDate)) ;%1 of %2 ignoring: %3
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00289",pintCount,pintTotalCount,strFileName)),$$GetIndex(pidLog,.pstrMessageLogDate)) ;%1 of %2 ignoring: %3
	}
	if $$$ISERR(strStatus) do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00290",strFileName))) ;Copying: %1 Failed!
	quit strStatus
 
 
FixFileName(pstrFileName,pstrFrom="",pstrTo="")
	;-------------------------------------------------------------------------------
	; File names may have been modified to include an underscore as the last character.
	; This may have something to do with the virus scan software.  Until this is 
	; resolved this routine will assume that the filenames need to be adjusted.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 03-Oct-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	if (pstrFrom="")&&(pstrTo="") {
		set pstrFileName=$$FixFileName(pstrFileName,".gi_",".gif")
		set pstrFileName=$$FixFileName(pstrFileName,".jp_",".jpg")
		set pstrFileName=$$FixFileName(pstrFileName,".pn_",".png")
	} else {
		if $extract(pstrFileName,$length(pstrFileName)-3,$length(pstrFileName))=pstrFrom {
			set $extract(pstrFileName,$length(pstrFileName)-3,$length(pstrFileName))=pstrTo
		}
	}
	quit pstrFileName
	
	 
SetDirectory(pidLog,pstrFTP,pstrPath="")
	;-------------------------------------------------------------------------------
	; Sets the ftp connection to the specified directory.
	; 
	; if pstrPath is "", use the current directory.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Apr-2007	RPW		SRBR014271: Use a variable instad of calling WWWTEXT mutliple times
	; 						with the same parameter. Added pidLog
	; 14-Mar-2007	shobby		SRBR014271:	Language texts
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new strStatus,strError
	
	set strStatus=$$$OK
	if (pstrPath'="") {
		; Change to the appropriate directory
		if '(pstrFTP.SetDirectory(pstrPath)) {
			set strError=$$^WWWTEXT("Com00042") ; Could not access requested directory
			set strStatus='$$$OK_Y_strError ; Could not access requested directory
			do AddMessage^COMLog(pidLog,strError) ;Could not access requested directory
		}
	}	
	quit strStatus
 
 
List(pstrFTP,pobjStream)
	;-------------------------------------------------------------------------------
	; Gets the list of files and folders in the current directory.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Apr-2007	RPW		SRBR014271: Handle objects not being created correctly.
	; 25-Sep-2006	shobby		SRBR014271: Created
	;-------------------------------------------------------------------------------
	;
	new strStatus
	
	set strStatus=$$$OK 
	; Get the current files available
	set pobjStream=##class(%GlobalCharacterStream).%New()
	if (pobjStream=$$$NULLOREF) ||(pobjStream'=$$$NULLOREF) && ('(pstrFTP.List("",pobjStream))) {
		set strStatus='$$$OK_Y_$$^WWWTEXT("Com00043") ; Could not get contents of directory
	}
	quit strStatus
]]></Routine>
</Export>