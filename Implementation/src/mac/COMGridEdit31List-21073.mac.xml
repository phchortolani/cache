<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31List" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMGridEdit31List
	
#include COMGridEdit31
#def1arg WWWDATEN(%args) ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",%args)
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGEList("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1) 	 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)  	$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	
	;-------------------------------------------------------------------------------
	; "DISPLAYLIST"   - for sequence  3,5,4,2,1
	;    (shown with space rather than actual null)
	;    
	;    ,0) = "3~1"    --+   Forward Traversal
	;    ,1) = " ~2"      |                *<-+
	;    ,2) = "1~4"      |            <-+  --+
	;    ,3) = "5~ "    <-+  --+         |
	;    ,4) = "2~5"           |  <-+  --+
	;    ,5) = "4~3"         <-+  --+
	;
	;  1.  Get (...,0) and look at #1 for forward link or #2 for backward link
	;  2.  Forward traversal  : set CurrentLine = #1 of (...,"DISPLAYLIST",CurrentLine), stopping when null
	;   or Backward traversal : set CurrentLine = #2 of (...,"DISPLAYLIST",CurrentLine), stopping when null
	;   
	;-------------------------------------------------------------------------------
 
 
CreateDisplayList(pstrOrder)
	;-------------------------------------------------------------------------------
	; Create display sequence as doubly-linked list from Comma-delimited string
	; NOTE: pstrOrder contains null first piece
	; 
	; 	(...,"DISPLAYLIST",0)     = firstidKey~lastidKey
	; 	(...,"DISPLAYLIST",idKey) = nextidKey~previdKey
	; 		idKey matches (...,"REFERENCEKEY",idKey,1) 
	;
	; History:
	; 26-Jun-2009	GRF		SR15739: Audit entry removed - LogR now available
	; 28-Oct-2008	GRF		SR16083: Removed line copied as expansion of macro for
	; 							checking - shouldn't have been left in code.
	; 26-May-2008	GRF		SR15739: Created
	;-------------------------------------------------------------------------------
	new idLine,intFirstPosn,intLines,loop
 
	$$$LogR("CreateDisplayList",pstrOrder)
	set intFirstPosn = 2     ; NOTE: pstrOrder contains null first piece
	
	kill $$$WWWDATEN("DISPLAYLIST")
	;set $$$WWWDATEN("DISPLAYSORT") = pstrOrder   ; Testing/Audit use only SR15739
	
	set intLines = $length(pstrOrder,$$$COMMA)
	set $$$WWWDATEN("DISPLAYLIST",0) = $piece(pstrOrder,$$$COMMA,intFirstPosn)_Y_$piece(pstrOrder,$$$COMMA,intLines)
	
	for loop=intFirstPosn:1:intLines {
		set idLine=$piece(pstrOrder,$$$COMMA,loop)
		set $$$WWWDATEN("DISPLAYLIST",idLine) = $piece(pstrOrder,$$$COMMA,loop+1)_Y_$piece(pstrOrder,$$$COMMA,loop-1)
	}
	$$$LogRm($$$WWWDATEN("DISPLAYLIST"))
	$$$LogRx("*CDL*")
	quit
	
	
InsertLine(pidNew,pdteToday)	
	;-------------------------------------------------------------------------------
	; Insert new line as both forward and backward link in doubly-linked list
	; 
	; - Get Forward Link from Origin
	; - Create entry for New Line based on Origin and Forward Link
	; - Update Origin to point to New Line
	; - Add New Line as Backward Link to either entry for Forward Link or,
	;   if Origin was previously the last link, to entry zero.
	; 
	; Called by : COMGridEdit31Body2
	; 
	; Inputs:
	;	pidNew		New link key
	;	pdteToday	Future replacement for repeated +$horolog
	; 
	; History:
	; 16-Sep-2008	GRF		SR15888: End of chain link is null not zero
	; 26-May-2008	GRF		SR15739: Created
	;-------------------------------------------------------------------------------
	new idNextLink,idOrigin
	
	$$$LogR("InsertLine",pidNew)
	; 3x01 => 3.01 => 3
	
	if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
		new nextSub
		
		set nextSub = $piece($get(pidNew),"x",2)
		if ($find(pidNew,"x") && (+nextSub > 1)) {			
			set idOrigin   = $order($$$WWWDATEN("REFERENCEKEY",pidNew),-1)
		}
		else {
			set idOrigin   = +$order($$$WWWDATEN("REFERENCEKEY",$translate(pidNew,"x",".")),-1)
		}
	} else {
		set idOrigin   = +$order($$$WWWDATEN("REFERENCEKEY",$translate(pidNew,"x",".")),-1)
	}
	set idNextLink = $piece($get($$$WWWDATEN("DISPLAYLIST",idOrigin)),Y,1)
	
	;set $$$WWWDATEN("DISPLAYLIST",pidNew) = idNextLink_Y_idOrigin     ; SR15888
	if idOrigin=0 {
		set $$$WWWDATEN("DISPLAYLIST",pidNew) = idNextLink_Y
	} else {
		set $$$WWWDATEN("DISPLAYLIST",pidNew) = idNextLink_Y_idOrigin
	}
	
	set $piece($$$WWWDATEN("DISPLAYLIST",idOrigin),Y,1) = pidNew
	
	if idNextLink = "" {
		set $piece($$$WWWDATEN("DISPLAYLIST",0),Y,2) = pidNew
	} else {
		set $piece($$$WWWDATEN("DISPLAYLIST",idNextLink),Y,2) = pidNew
	}
	$$$LogRm($$$WWWDATEN("DISPLAYLIST"))
	$$$LogRx("*IL*")
	
	quit
	
	;                                        (If called instead of AppendLine)
	;          pidNew = 1x01              ;          pidNew = 3             
	; Before          After Insertion     ; Before          After Insertion
	; Key = Data     Key   =     Data     ; Key = Data     Key   =     Data
	;------------   --------------------  ;------------   --------------------   
	; 0 =  1 ~ 2      0    =    1 ~ 2     ; 0 =  1 ~ 2      0    =    1 ~ 3     
	; 1 =  2 ~ ""     1    = 1x01 ~ ""    ; 1 =  2 ~ ""     1    =    2 ~ ""    
	; 2 = "" ~ 1      2    =   "" ~ 1x01  ; 2 = "" ~ 1      2    =    3 ~ 1  
	;               "1x01" =    2 ~ 1     ;                 3    =   "" ~ 2     
	
	;-------------------------------------------------------------------------------
	; NOTE : If REFERENCEKEY link is not present idOrigin will always be 0.
	;        e.g. if we already have DISPLAYLIST for 1, 2, 3 then InsertLine(2x01)
	;        will set idOrigin to        0
	;        and idNextLink will then be 1.
	;        
	;        This creates   (DISPLAYLIST,2x01)            to "1~"
	;        and changes    (DISPLAYLIST,0)    from "1~3  to "2x01~3".
	;        We then change (DISPLAYLIST,1)    from "2~"  to "2~2x01".
	;        
	;        Similarly InsertLine(4) in this case
	;        will set idOrigin to        0
	;        and idNextLink will then be 1.
	;        
	;        This creates   (DISPLAYLIST,4)               to "1~"
	;        and changes    (DISPLAYLIST,0)    from "1~3"  to "4~3".
	;        We then change (DISPLAYLIST,1)    from "2~"   to "2~4".
	;-------------------------------------------------------------------------------
	
	
TestInsert(pidNew)
	;-------------------------------------------------------------------------------
	; Utility for testing inserting into a linked list
	; 
	; WARNING : This does not update "REFERENCEKEY" so may get incorrect sequence.
	;           See notes above.
	;           
	; d ^WWWVAR
	; zw ^WWWDATEN(0,+$h,-666)
	;-------------------------------------------------------------------------------
	new Y,YFORM,YM,YUSER
	
	set Y     = "~"
	set YM    = 0
	set YUSER = -666
	set YFORM = "Test31List"
	
	do InsertLine(pidNew,+$horolog)
	quit
	
		
TestAppend(pidNew)
	;-------------------------------------------------------------------------------
	; Utility for testing appending to the end of a linked list
	; 
	; d ^WWWVAR
	; zw ^WWWDATEN(0,+$h,-666)
	;-------------------------------------------------------------------------------
	new Y,YFORM,YM,YUSER
	
	set Y     = "~"
	set YM    = 0
	set YUSER = -666
	set YFORM = "Test31List"
	
	do AppendLine(pidNew,+$horolog)
	quit
	
	
AppendLine(pidNew,pdteToday)
	;-------------------------------------------------------------------------------
	; Add new node to end of list
	;
	; Called by : COMGridEdit31Body2
	; 
	; Inputs:
	;	pidNew		New link key
	;	pdteToday	Future replacement for repeated +$horolog
	; 
	; History: 
	; 16-Sep-2008	GRF		SR15888: End of chain link is null not zero
	; 26-May-2008	GRF		SR15739: Created
	;-------------------------------------------------------------------------------
	new idOldLast
	
	$$$LogR("AppendLine",pidNew)
	set idOldLast = $piece($get($$$WWWDATEN("DISPLAYLIST",0)),Y,2)
	
	;set $$$WWWDATEN("DISPLAYLIST",pidNew) = Y_idOldLast     ; SR15888
	if idOldLast=0 {
		set $$$WWWDATEN("DISPLAYLIST",pidNew) = Y
	} else {
		set $$$WWWDATEN("DISPLAYLIST",pidNew) = Y_idOldLast
	}
	
	if idOldLast = "" {
		set $piece($$$WWWDATEN("DISPLAYLIST",0),Y,1) = pidNew
	} else {
		set $piece($$$WWWDATEN("DISPLAYLIST",idOldLast),Y,1) = pidNew
	}
	set $piece($$$WWWDATEN("DISPLAYLIST",0),Y,2) = pidNew
	$$$LogRm($$$WWWDATEN("DISPLAYLIST"))
	$$$LogRx("*AL*")
	
	quit
	
	;  0 = "" ~ ""    0 =  1 ~ 1     0 =  1 ~ 2     0 =  1 ~ 3
	;                 1 = "" ~ ""    1 =  2 ~ ""    1 =  2 ~ ""
	;                                2 = "" ~ 1     2 =  3 ~ 1
	;                                               3 = "" ~ 2
	
	
GetList(pblnReverse=$$$NO)
	;-------------------------------------------------------------------------------
	; Utility for checking list as built
	; 
	; Convert List to comma-delimited string (note pre-requisites)
	;   s YM    = 0
	;   s YUSER = ...
	;   s YFORM = "..."
	;
	;	w $$GetList^COMGridEdit31List()     ; forward order
	;	w $$GetList^COMGridEdit31List(1)    ; reverse order
	; 
	; Returns :
	;	strList		comma-delimited version of linked list
	; 
	; History: 
	; 26-May-2008	GRF		SR15739: Created
	;-------------------------------------------------------------------------------
	new delim,intPiece,loop,strList
	
	set intPiece = $select(pblnReverse:2,1:1)
	
	set strList = ""
	set delim   = ""
	set loop    = 0
	for {
		set loop = $piece($get($$$WWWDATEN("DISPLAYLIST",loop)),Y,intPiece)
		quit:loop=""
		
		set strList = strList_delim_loop
		set delim   = $$$COMMA
	}
	quit strList
	
]]></Routine>
</Export>