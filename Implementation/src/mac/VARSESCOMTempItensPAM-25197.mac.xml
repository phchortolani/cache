<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESCOMTempItensPAM" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESCOMTempItensPAM
 
#include COMSYS
#include COMConst
#include INConst
#include WWWConst
#include FIN
#include VARConst
#include VARSESConst
#include COMView 
 
Show()
	new YFORM
	set YFORM="VARSESINAUF"
	set YKEY=$PIECE(YKEY,YKOMMA,1)
	if $get(^VARSESCOMTempItensPAM(YM,YKEY,1))="" {
		do CreateEntry(YKEY)
	}
	do UpdateGrid(YKEY)
	do GoToForm^COMUtilForm("VARSESCOMTempItensPAM",YKEY,1,"")
 	;do RedirectForm^COMUtilForm("VARSESCOMTempItensPAM", YKEY, YBACK, YKEY, 1)
	quit
 
ValidarQuantidade()
	if (($piece(YFELD,Y,7)>$piece(YFELD,Y,5)) && ($piece(YFELD,Y,7)'="")) {
		$$$StartScript()
		//w "alert('Quantidade não pode ser maior que a quantidade disponível!');"
		w "alert('"_$$$Text("MED00133")_"');"  ;Quantidade não pode ser maior que a quantidade disponível!
		$$$EndScript()
		QUIT 1
	}
	QUIT 0
 
OnBeforeButtonLine()
 
	quit 
 
CreateEntry(IDVARSESCOMTempItensPAM)
	set objVARSESCOMTempItensPAM=$H
	set strStatus = $$$Save("VARSESCOMTempItensPAM",IDVARSESCOMTempItensPAM,objVARSESCOMTempItensPAM,1)
	;do RedirectForm^COMUtilForm("VARSESCOMTempItensPAM", YKEY, "VARSESINAUF", YKEY, 1)
	quit
	
UpdateGrid(IDVARSESCOMTempItensPAM)
	/*
	set IDLine=""
	set IDLine=$order(^VARSESCOMTempItensPAMLinha(YM,IDVARSESCOMTempItensPAM,IDLine))
	while IDLine'="" {
		if $piece($GET(^VARSESCOMTempItensPAMLinha(YM,IDVARSESCOMTempItensPAM,IDLine,1)),Y,6)'=1 KILL ^VARSESCOMTempItensPAMLinha(YM,IDVARSESCOMTempItensPAM,IDLine,1)
		set IDLine=$order(^VARSESCOMTempItensPAMLinha(YM,IDVARSESCOMTempItensPAM,IDLine))
	}*/
	// Andre, 11/04/2008 - Exclui registro a registro, ao invés de fazer kill por PAM, para
	// que os índices sejam corretamente atualizados:
	// Linha antiga:
	// kill ^VARSESCOMTempItensPAMLinha(YM,IDVARSESCOMTempItensPAM)
	set IDLine=""
	set IDLine=$order(^VARSESCOMTempItensPAMLinha(YM,IDVARSESCOMTempItensPAM,IDLine))
	while IDLine'="" {
		set killStatus = $$KILL^COMUtils("VARSESCOMTempItensPAMLinha",IDVARSESCOMTempItensPAM_","_IDLine)
		set IDLine=$order(^VARSESCOMTempItensPAMLinha(YM,IDVARSESCOMTempItensPAM,IDLine))
	}
	// Fim - Andre, 11/04/2008
	set Location=$piece($GET(^INAUF(YM,IDVARSESCOMTempItensPAM,1)),Y,6)
	set item=""
	set item=$order(^INDRPITEM(YM,Location,item))
	while item'="" {
		set PAM=""
		set PAM=$ORDER(^VARTRKPAMLineFakes(YM,20,$$$NO,item,PAM))
		WHILE PAM'="" {
			if ((Location=$piece($get(^VARTRKPAM(YM,PAM,1)),Y,3)) && ($PIECE($GET(^INAUF(YM,IDVARSESCOMTempItensPAM,1)),Y,347)=$piece($get(^VARTRKPAM(YM,PAM,1)),Y,1))) {
				set PAMLine=""
				set PAMLine=$order(^VARTRKPAMLineFakes(YM,20,$$$NO,item,PAM,PAMLine))
				set qtddisponivel = $$GetQuantidadeAAtender^VARTRKPAMLineFake(PAM,PAMLine)
				set qtdatendida=$$GetQuantidadeAtendida(IDVARSESCOMTempItensPAM,PAM,PAMLine)
				set qtddisponivel=qtddisponivel+qtdatendida
				if qtdatendida=0 {
					set objVARSESCOMTempItensPAMLinha=PAM_Y_item_Y_$piece($get(^INART(YM,item,1)),Y,1)_Y_$piece($get(^INART(YM,item,1)),Y,40)_Y_qtddisponivel_Y_0_Y_Y_PAMLine_Y_$piece($get(^VARTRKPAM(YM,PAM,1)),Y,7)
				}
				else {
					set objVARSESCOMTempItensPAMLinha=PAM_Y_item_Y_$piece($get(^INART(YM,item,1)),Y,1)_Y_$piece($get(^INART(YM,item,1)),Y,40)_Y_qtddisponivel_Y_1_Y_qtdatendida_Y_PAMLine_Y_$piece($get(^VARTRKPAM(YM,PAM,1)),Y,7)
				}
				if qtddisponivel'=0 set strStatus = $$$Save("VARSESCOMTempItensPAMLinha",IDVARSESCOMTempItensPAM_YKOMMA_PAM_"-"_item,objVARSESCOMTempItensPAMLinha,1)
			}
			set PAM=$ORDER(^VARTRKPAMLineFakes(YM,20,$$$NO,item,PAM))
		}
		set item=$order(^INDRPITEM(YM,Location,item))
	}
	DO InserirPAMsCompletATend(IDVARSESCOMTempItensPAM)
	quit
 
InserirPAMsCompletATend(idAFM)
	set idAFMLinha=""
	set idAFMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha))
	while idAFMLinha'="" {
		set PAM="" 
		SET PAM=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM))
		while PAM'="" {
			set PAMLinha=""
			set PAMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM,PAMLinha))
			while PAMLinha'="" {
				set query=$query(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM,PAMLinha))
				set ChavePAM=$translate($piece(query,YKOMMA,7),"""","")
				IF ChavePAM="1-08/000095" {
				//	SET X=0
				//	WHILE X=0 {
				//		HANG 1
				//	}
				}
				set ChavePAMLinha=$translate($piece(query,YKOMMA,8),"""","")
				set ChaveAFM=$translate($piece(query,YKOMMA,9),"""","")
				set ChaveAFMLinha=$translate($piece(query,YKOMMA,10),"""","")
				set ChaveAFMLinha=$translate(ChaveAFMLinha,")","")
				set objPAMLineFake=$get(^VARTRKPAMLineFake(YM,ChavePAM,ChavePAMLinha,1))
				SET item=$piece(objPAMLineFake,Y,1)
				set qtddisponivel = $$GetQuantidadeAAtender^VARTRKPAMLineFake(ChavePAM,ChavePAMLinha)
				set qtddisponivel=qtddisponivel+$piece($get(^VARSESPAMAFM(YM,ChavePAM,ChavePAMLinha,ChaveAFM,ChaveAFMLinha,1)),Y,1)
				set objVARSESCOMTempItensPAMLinha=ChavePAM_Y_item_Y_$piece($get(^INART(YM,item,1)),Y,1)_Y_$piece($get(^INART(YM,item,1)),Y,40)_Y_qtddisponivel_Y_1_Y_$piece($get(^VARSESPAMAFM(YM,ChavePAM,ChavePAMLinha,ChaveAFM,ChaveAFMLinha,1)),Y,1)_Y_ChavePAMLinha_Y_$piece($get(^VARTRKPAM(YM,ChavePAM,1)),Y,7)
				set strStatus = $$$Save("VARSESCOMTempItensPAMLinha",idAFM_YKOMMA_ChavePAM_"-"_item,objVARSESCOMTempItensPAMLinha,1)
				//set strStatus=$$$Kill("VARSESPAMAFM",$piece(query,YKOMMA,7)_YKOMMA_$piece(query,YKOMMA,8)_YKOMMA_$piece(query,YKOMMA,9)_YKOMMA_$piece(query,YKOMMA,10))
				set PAMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM,PAMLinha))
			}
			SET PAM=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM))	
		}
		set idAFMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha))
	}
	quit
 
GetQuantidadeAtendida(idAFM,idPAM,idPAMLine)
	set idAFMLine=""
	set idAFMLine=$order(^VARSESPAMAFM(YM,idPAM,idPAMLine,idAFM,idAFMLine))
	if idAFMLine="" quit 0
	set objVARSESPAMAFM=$get(^VARSESPAMAFM(YM,idPAM,idPAMLine,idAFM,idAFMLine,1))
	if objVARSESPAMAFM="" quit 0
	set quantidade=$piece(objVARSESPAMAFM,Y,1)
	IF quantidade="" quit 0
	quit quantidade
 
OnAfterDataFields(pYKEY,pYFELD)
	do LoadGrid(pYKEY)
 
 	quit
 	
 
LoadGrid(pid="")
 
	new objInvoice,YFORM,YKEY,YAUSWAHL,YFELD,objVARTRKATARequest,strData
	set YFORM="VARSESCOMTempItensPAMLinha"
	set YFELD=""
	set YKEY=$get(pid)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=500
	set $$$COMGridEditParameterGridName(YAUSWAHL)=YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)='($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARSESCOMTempItensPAM"
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL)	= $$$YES
	set $$$COMGridEditParameterDontStoreAll(YAUSWAHL)  = $$$YES
	set $$$COMGridEditParameterCOMViewGrid(YAUSWAHL)   = $$$YES
	$$$ClearExternalFilter("VARSESCOMTempItensPAM")
	 do AddExternalFilter^COMViewFilter("VARSESCOMTempItensPAM", "P1", YKEY, $$$EnumCOMVIEWCOMPARATOREquals, $$$NO)
	
	$$$GRIDStart(YFORM,YKEY)
	set YFORM="VARSESCOMTempItensPAM"  ;shobby 06-Feb-2008
	do LoadCOMViewGrid^COMViewFilter("VARSESCOMTempItensPAM", "VARSESCOMTempItensPAMLinha",1) ;shobby 06-Feb-2008
	;do LoadCOMViewGrid^COMViewFilter("VARSESCOMTempItensPAM", "VARSESCOMTempItensPAMLinha")  ;shobby 06-Feb-2008
	
	quit
 
 
 
OnBeforeSave(IDAFM)
	
	new strStatus
	set strStatus = $$$GRIDSave(IDAFM)
	quit
	
OnAfterSave(IDAFM)
	set strStatus = $$Transaction^COMTransaction("InsereItensPAMNaAFM^VARSESCOMTempItensPAM("""_IDAFM_""")",$$$YES)
	if $$$ISERR(strStatus) {
		$$$StartScript()
		//w "alert('Ocorreu um erro ao inserir itens na afm ->"_strStatus_"');"
		w "alert('"_$$$Text("MED00134")_strStatus_"');"
		$$$EndScript()
	}
	do RedirectForm^COMUtilForm("VARSESINAUF", IDAFM, YBACK, YKEY, 1)
	//do InsereItensPAMNaAFM(IDAFM)
	quit
 
 
GetNext(pidItem,pidAFM)
	;-------------------------------------------------------------------------------
	; Determines the next number to be used for the key of INAUFP
	; Replaces the WWWNEXT calculation that was sharing numbers against all PAM's
	; This routine just uses an increasing number, or an existing number if the item is
	; found to match.
	; Also need to support the fact that already a number of items exist in the system
	; that have numbers that do not conform to this rule.
	; 
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 08-Feb-2008	shobby	 Created
	;-------------------------------------------------------------------------------
	new idINAUFP
 
	set idINAUFP=""
	set idINAUFP= $order(^INAUFPs(YM,8,$$Index^COMUtils(pidItem),pidAFM,idINAUFP))
	if idINAUFP="" {
		for idINAUFP=1:1:99999999 {
			if '$data(^INAUFP(YM,pidAFM,idINAUFP)) {
				quit
			}
		}
	}
	if idINAUFP="" set idINAUFP=1
	quit idINAUFP
	
InsereItensPAMNaAFM(IDAFM)
	;-------------------------------------------------------------------------------
	; 
	; 
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 08-Feb-2008	shobby	 Redirected determination of next idINAUFP to the $$GetNext Routine.
	;-------------------------------------------------------------------------------
 
	do LimpaItensPAMNaAFM(IDAFM)
	do LimpaVARSESPAMAFM(IDAFM)
	set item=""
	set item=$order(^VARSESCOMTempItensPAMLinhas(YM,1,1,item))
	while item'="" {
		set ListaProcesso=""
		set ListaPAMs=""
		set quantidadeTotal=0
		set idLinhaPAM=""
		set idLinhaPAM=$order(^VARSESCOMTempItensPAMLinhas(YM,1,1,item,IDAFM,idLinhaPAM))
		
		if idLinhaPAM'="" {
			set idINAUFP=$$GetNext(item,IDAFM)  						;shobby 08-Feb-2008
			;set idINAUFP=""											;shobby 08-Feb-2008
			;set idINAUFP= $ORDER(^INAUFPs(YM,8,item,IDAFM,idINAUFP))	;shobby 08-Feb-2008
			;IF idINAUFP="" set idINAUFP=$$^WWWNEXT("INAUFP")			;shobby 08-Feb-2008
			;if IDAFM = "1-08/000024" { for k=1:1:100 hang 1}
			while idLinhaPAM'="" {
				set quantidade=0
				set quantidade=quantidade+$PIECE($get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1)),Y,7)
				set quantidadeTotal = quantidadeTotal + quantidade
				if ListaPAMs= "" {
					// Andre, 11/04/2008 - Separando uma linha (abaixo) em diversas linhas:
					// set ListaProcesso=$PIECE($get(^VARTRKPAM(YM,$PIECE($get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1)),Y,1),1)),Y,7)
					set objVARSESCOMTempItensPAMLinha = $get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1))
					set auxPAM = $PIECE(objVARSESCOMTempItensPAMLinha,Y,1)
					set objAuxVARTRKPAM = $get(^VARTRKPAM(YM,auxPAM,1))
					set ListaProcesso=$PIECE(objAuxVARTRKPAM,Y,7)
					// Fim - Andre, 11/04/2008
					set ListaPAMs=$PIECE($get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1)),Y,1)
				}
				else {
					set ListaProcesso=ListaProcesso_";"_$PIECE($get(^VARTRKPAM(YM,$PIECE($get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1)),Y,1),1)),Y,7)
					set ListaPAMs=ListaPAMs_";"_$PIECE($get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1)),Y,1)
				}
				
				set idVARSESPAMAFM=$PIECE($get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1)),Y,1)_YKOMMA_$PIECE($get(^VARSESCOMTempItensPAMLinha(YM,IDAFM,idLinhaPAM,1)),Y,8)_YKOMMA_IDAFM_YKOMMA
				
					set idVARSESPAMAFM=idVARSESPAMAFM_idINAUFP
				
				set strStatus=$$$Save("VARSESPAMAFM",idVARSESPAMAFM,quantidade,1)
				if $$$ISERR(strStatus) {
					set $zerror = "Erro ao salvar na classe de relação VARSESPAMAFM. => "_$$DecodeError^COMUtilError(strStatus)
					zquit 1 GOTO @$ZTRAP
				}
				set idLinhaPAM=$order(^VARSESCOMTempItensPAMLinhas(YM,1,1,item,IDAFM,idLinhaPAM))
			}
	
			set objINAUFP=""
			if $get(^INAUFP(YM,IDAFM,idINAUFP,1))'="" {
				set objINAUFP=$get(^INAUFP(YM,IDAFM,idINAUFP,1))
			}
			else {
				set $piece(objINAUFP,Y,1) 	= $piece($get(^INART(YM,item,1)),Y,1)
				set $piece(objINAUFP,Y,4) 	= item
				set $piece(objINAUFP,Y,40) 	= $piece($get(^INART(YM,item,1)),Y,40) // Unidade de medida
				set $piece(objINAUFP,Y,7)		= 1 // Origem = 1 - Ordem
				set $piece(objINAUFP,Y,12) 	= "" // Fornecedor
				set $piece(objINAUFP,Y,30)	= "" // Grupo
				
			}
			set $piece(objINAUFP,Y,5)=quantidadeTotal
			set $piece(objINAUFP,Y,6)=quantidadeTotal
			set $piece(objINAUFP,Y,285) = 0 ; Status = Aberta.
			set $piece(objINAUFP,Y,289) = ListaPAMs
			set $piece(objINAUFP,Y,290) = ListaProcesso
			set strStatus=$$$Save("INAUFP",IDAFM_YKOMMA_idINAUFP,objINAUFP,1)
			if $$$ISERR(strStatus) {
				//set $zerror = "Erro ao salvar as linhas na AFM. => "_$$DecodeError^COMUtilError(strStatus)
				set $zerror = $$$Text("MED00135")_"=> "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
		}
		set item=$order(^VARSESCOMTempItensPAMLinhas(YM,1,1,item))
	}
	quit $$$OK
	
LimpaItensPAMNaAFM(IDAFM)
	set idINAUFP=""
	set idINAUFP=$order(^INAUFP(YM,IDAFM,idINAUFP))
	while idINAUFP'="" {
		set item=$piece($GET(^INAUFP(YM,IDAFM,idINAUFP,1)),Y,4)
		set idLinhaPAM=""
		set idLinhaPAM=$order(^VARSESCOMTempItensPAMLinhas(YM,1,1,item,IDAFM,idLinhaPAM))
		if idLinhaPAM="" {
			set strStatus=$$$Kill("INAUFP",IDAFM_YKOMMA_idINAUFP)
			if $$$ISERR(strStatus) {
				//set $zerror = "Erro ao salvar as linhas na AFM. => "_$$DecodeError^COMUtilError(strStatus)
				set $zerror = $$$Text("MED00135")_"=> "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}			
		}
		set idINAUFP=$order(^INAUFP(YM,IDAFM,idINAUFP))
	}
	quit
	
LimpaVARSESPAMAFM(IDAFM)
 
	set PAM=""
	set PAM=$ORDER(^VARSESPAMAFMs(YM,2,$$$Index(IDAFM),PAM))
	while PAM'="" {
		set PAMLine=""
		set PAMLine=$ORDER(^VARSESPAMAFMs(YM,2,$$$Index(IDAFM),PAM,PAMLine))
		while PAMLine'= "" {
			set AFMLine=""
			set AFMLine=$ORDER(^VARSESPAMAFMs(YM,2,$$$Index(IDAFM),PAM,PAMLine,IDAFM,AFMLine))
			WHILE AFMLine'="" {
				set strStatus=$$$Kill("VARSESPAMAFM",PAM_YKOMMA_PAMLine_YKOMMA_IDAFM_YKOMMA_AFMLine)
				if $$$ISERR(strStatus) {
					//set $zerror = "Erro ao remover as relações entre PAM e AFM. => "_$$DecodeError^COMUtilError(strStatus)
					set $zerror = $$$Text("MED00136")_"=> "_$$DecodeError^COMUtilError(strStatus)
					zquit 1 GOTO @$ZTRAP
				}
				set AFMLine=$ORDER(^VARSESPAMAFMs(YM,2,$$$Index(IDAFM),PAM,PAMLine,IDAFM,AFMLine))
			}
			set PAMLine=$ORDER(^VARSESPAMAFMs(YM,2,$$$Index(IDAFM),PAM,PAMLine))
		}
		set PAM=$ORDER(^VARSESPAMAFMs(YM,2,$$$Index(IDAFM),PAM))
	}
	quit
 /*
InsereFavoritosNaSolic(pYKEY)
 
	new ItemFavorito
	
	new idSolic, idLinhaSolic,idItemNaSolic, ArrayItens, blnItemExisteNaSolic,
		idLinhaFavoritos, idNovaLinhaNaSolic, Inserir, Item, ItemInteiro, idUltimaLinhaSolic,
		ChaveItem, objRegistroItemFavorito, status
	
	;set idSolic = $PIECE($GET(^VARSESItensFavoritosSolic(YM,pYKEY,1)),"~",2)	
	set idSolic = YPARA
	
	//Início - Monta o Array de Itens
	set idLinhaSolic = ""
	set idItemNaSolic  = ""
	set ArrayItens 	 = ""
		
	for {
		set idLinhaSolic = $order(^VARSESSolicTransfLinha(YM,idSolic,idLinhaSolic))
		quit:(idLinhaSolic = "")
	
		set idItemNaSolic = $piece($get(^VARSESSolicTransfLinha(YM,idSolic,idLinhaSolic,1)),"~",1)
		
		set ArrayItens = ArrayItens_";"_idItemNaSolic_";"						
	}
	//Fim - Monta o Array de Itens
		
	set blnItemExisteNaSolic = 0	
	set idLinhaFavoritos     = ""	
	set idNovaLinhaNaSolic   = 0
	set idUltimaLinhaSolic   = 0
	
	
	for {
		set idLinhaFavoritos = $order(^VARSESItensFavoritosLinha(YM,pYKEY,idLinhaFavoritos))
		quit:(idLinhaFavoritos = "")
						
		set Inserir = $piece($get(^VARSESItensFavoritosLinha(YM,pYKEY,idLinhaFavoritos,1)),"~",2)
		
		if (Inserir = 1) { //caso o checkbox de "Usar" esteja marcado, vai inserir na solic
			
			set Item = $piece($get(^VARSESItensFavoritosLinha(YM,pYKEY,idLinhaFavoritos,1)),"~",1)
			
			set ItemInteiro = ";"_Item_";" //para não dar problema no find 9004 em 90040.
			
			set idUltimaLinhaSolic = idLinhaFavoritos //Vai setando sempre o id da última linha na Solic para quando for salvar as novas, começar a partir da última + 1.
									
			if $find(ArrayItens,ItemInteiro) { //Se o item já existe na solicitação
				set blnItemExisteNaSolic = "1"
			}
			
			if '$find(ArrayItens,ItemInteiro) { //Se o item não existe na solicitação
				
				if idNovaLinhaNaSolic > 0 { set idNovaLinhaNaSolic = idNovaLinhaNaSolic + 1 }
				if idNovaLinhaNaSolic = 0 { set idNovaLinhaNaSolic = idUltimaLinhaSolic	}
													
				set ChaveItem = idSolic_$$$COMMA_idNovaLinhaNaSolic
				set objRegistroItemFavorito = $get(^VARSESSolicTransfLinha(YM, ChaveItem, 1))
			
				set $piece(objRegistroItemFavorito,Y,1) = Item
				set $piece(objRegistroItemFavorito,Y,3) = $piece($get(^INART(0,Item,1)),Y,40)
				set $piece(objRegistroItemFavorito,Y,8) = $$getSOHLocal(Item,YLOCATION)
				set $piece(objRegistroItemFavorito,Y,9) = $$getSOHLocal(Item,$piece($get(^VARSESSolicTransf(YM,idSolic,1)),"~",3))																											
			
				set status = $$Save^COMUtils("VARSESSolicTransfLinha", ChaveItem, objRegistroItemFavorito, 1)
	
				if (('status)&&(status'="ROLLBACK")) { 
					do StartScript^COMUtiljavascript()
					w "alert('Não foi possível salvar os itens na Solicitação.'); "
					do EndScript^COMUtiljavascript()
				}				
			}			
		}					
	}		
 
 
	if (blnItemExisteNaSolic = 1) {
		do StartScript^COMUtiljavascript()
		w "alert('Alguns dos itens selecionados já existem na solicitação e não serão inseridos novamente.'); "
		do EndScript^COMUtiljavascript()
	}
			
	do GoToForm^COMUtilForm("VARSESSolicTransf", idSolic)	
	
	quit */
CarregaCOMTempItens
	DO ^WWWVAR
	SET YM=0
	SET AFM=""
	SET AFM=$ORDER(^VARSESPAMAFMs(0,1,AFM))
	while AFM'="" {
		//w AFM_" Linhas:"
		//w !
		//set ^VARSESCOMTempItensPAM(0,AFM,1)=$h
		SET AFMLine=""
		SET AFMLine=$ORDER(^VARSESPAMAFMs(0,1,AFM,AFMLine))
		while AFMLine'="" {
			//w AFMLine
			//w !
			set PAM=""
			set PAM=$order(^VARSESPAMAFMs(0,1,AFM,AFMLine,PAM)) 
			while PAM'=""{
				SET PAMLine=""
				set PAMLine=$order(^VARSESPAMAFMs(0,1,AFM,AFMLine,PAM,PAMLine)) 
				while PAMLine'="" {
					set quantidade=$piece($get(^VARSESPAMAFM(0,PAM,PAMLine,AFM,AFMLine,1)),Y,1)
					if quantidade="" {
						//w "Erro!! Quantidade vazia PAM="_PAM_" Linha="_PAMLine_" AFM="_AFM_" Linha="_AFMLine
						w $$$Text($listbuild("MED00137",PAM,PAMLine,AFM,AFMLinha))
					}
					else {
						set objPAMLinha=$get(^VARTRKPAMLineFake(0,PAM,PAMLine,1))
						SET obj=""
						set $piece(obj,Y,1)=PAM
						set $piece(obj,Y,2)=$piece(objPAMLinha,Y,1)
						set $piece(obj,Y,3)=$piece($GET(^INART(0,$piece(objPAMLinha,Y,1),1)),Y,1)
						set $piece(obj,Y,4)=$piece($GET(^INART(0,$piece(objPAMLinha,Y,1),1)),Y,40)
						set $piece(obj,Y,5)=quantidade+$$GetQuantidadeAAtender^VARTRKPAMLineFake(PAM,PAMLine)
						set $piece(obj,Y,6)=1
						set $piece(obj,Y,7)=quantidade
						set $piece(obj,Y,8)=PAMLine
						set $piece(obj,Y,9)=$piece($get(^VARTRKPAM(0,PAM,1)),Y,7)
						// Andre, 11/04/2008: usando $$Save ao invés de set:
						// set ^VARSESCOMTempItensPAMLinha(0,AFM,PAM_"-"_$piece(objPAMLinha,Y,1),1)=obj
						set status = $$Save^COMUtils("VARSESCOMTempItensPAMLinha",AFM_","_PAM_"-"_$piece(objPAMLinha,Y,1),obj,1)
					}
					set PAMLine=$order(^VARSESPAMAFMs(0,1,AFM,AFMLine,PAM,PAMLine)) 
				}
				set PAM=$order(^VARSESPAMAFMs(0,1,AFM,AFMLine,PAM)) 
			}
			SET AFMLine=$ORDER(^VARSESPAMAFMs(0,1,AFM,AFMLine))
		}
		//w !
		SET AFM=$ORDER(^VARSESPAMAFMs(0,1,AFM))
	}
	// Andre, 11/04/2008 - Comentando linha a seguir pois não é mais necessário
	// reindexar já que a global está sendo criada com $$Save ao invés de set:
	// S VORG(1)="VARSESCOMTempItensPAMLinha" D ^WWWSORT
	QUIT
]]></Routine>
</Export>