<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWSAVD" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWSAVD
#include WWWConst
	
#define LogR(%1,%2) 	;
#define LogR2(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWSAVD("_%2_") : "_$zh $$$JournalOn
#;define LogR2(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWSAVD("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		Check Form Data Field
	;		DATENFELDER PRUEFEN
	;
	; Inputs : 
	;	YI			SEQ NO
	;	YFELD		RECORD
	;	YTYP		DATATYPE
	;	YLFZ		?
	;	YALLKEY		?
	;	YDATEI		
	;	SPRACHE		
	;
	; NOTE: Data YFELD is in external (display) format
	;
	; History :
	; 06-Jan-2011	GRF		SR17579: Use explicit tag
	; 01-Jun-2010	GRF		SR17146: Call common code for Dates
	; 20-Oct-2008	GRF		SR12505: Corrections to OnlyAllowChars test; Recognise
	; 							WWW122D
	; 20-Aug-2007	GM		SR13729: Change "FELDFORMAT" parameter to $$GetFormat^INPARA()
	; 14-Mar-2007	GRF		SR12505: Implement code for $$$WWW122DontAllowChars;
	; 							conversion macros; idChangeInput
	; 09-Mar-2007	GRF		SR12505: Change macro to $$$WWW122OnlyAllowChars; naked ref
	; 29-Sep-2006	HeberB	SRBR014265: Added YFELD as param to Validate
	; 10-Aug-2006	JW		SR13594: Encapsulated validation.
	; 29-Jun-2006	JW		SR12775: Add and return pblnValid, fix error check.
	; 24-Mar-2006	JW		SR14422: Change to internal format
    ; 28-Oct-2005	JW		SR13074: Exchange Rate type
	; 16-Aug-2005	JW		SR12290: Don't validate if no change. Return better
	; 							error msg if not valid.
	; 25-Jul-2005	JW		SR12615: Relation validation
	; 30-May-2005	RobertW	SR12056: Attempt at Performance Increase
	; 21.06.1999  	DT
	;-------------------------------------------------------------------------------
	
PRUEFD(poldYFELD="")
	;-------------------------------------------------------------------------------
	;	Check data field    ; PRUEFEN DATENFELDER
	; 
	; Called By : WWWSAVE
	; 
	; Inputs : 
	; 	poldYFELD		No longer used
	; 	
	; ByRef :
	; 	YDATEI			idClass
	; 	YFORM			idFormName
	; 	YKEY(1)			String list of keys
	; 	YFELD			Current data record
	; 	YI				Current class field number - field in YFELD
	; 	YALLKEY		
	; 	YLFZ
	; 	YTYP
	; 	
	;-------------------------------------------------------------------------------
	; 	A				Field data - taken from YFELD for piece YI
	; 	YBBN			First form field associated with class field no (can only display one) : idFormField
	; 	YPRUEF			Form data field parameters : objWWW122
	;-------------------------------------------------------------------------------
 	; 09-Aug-2011	shobby	SR17807: GetFormat has moved.

	new A,idChangeInput,objCustomData,Q,strAllowChars,strBlockChars,strTestChar,YPR,YPRUEF,YTEXT

	$$$LogR2("PRUEFD",$get(YFORM)_":"_$get(YI)_"<"_$get(YTYP)_"<"_$get(YFELD)_"<")
	
	QUIT:$GET(YALLKEY)=9
	
	IF '$DATA(YLFZ) SET YLFZ=0
	
	; Field Name - for error reporting
	;---------------------------------------
	SET YTEXT = $PIECE($GET(^WWW003(0,YDATEI,YI,1)),Y,2)
	IF $DATA(^WWW0031(0,YDATEI,YI,SPRACHE,1)) SET YTEXT = $PIECE(^WWW0031(0,YDATEI,YI,SPRACHE,1),Y,1)
	
	; vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv FIXME : <GRF> WWW003 [D22] (and thus this block) is deprecated <GRF>
	
	SET YTEXT(1) = $$$WWW003UniqueKey($GET(^WWW003(0,YDATEI,YI,1)))
	
	IF YTEXT(1)=$$$YES DO   ;PRUEFEN DOPPELTER KEY BEI PRIMÄRSCHL IN DATENFELD ;KEY next to within data item 
	. QUIT:'$DATA(YKEY(1))
	. NEW DATA,YDATA
	. SET YDATA=$GET(^WWW001(0,YDATEI,1))
	. IF $$$WWW001AltSaveProcedure(YDATA)'=4 SET DATA="^"_YDATEI_"("_$$^WWWYM(YDATEI,1)_""""_YKEY(1)_""""_",1)"
	. IF $$$WWW001AltSaveProcedure(YDATA)=4  SET DATA="^"_YDATEI_"("_$$^WWWYM(YDATEI,1)_""""_YKEY(1)_""""_")"
	. SET DATA(1)=$$^WWWSETL(DATA)
	. QUIT:DATA(1)=""  ;DATENSATZ NICHT VORHANDEN ;data record Not on hand 
	
	; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ FIXME
	
	SET A = $PIECE(YFELD,Y,YI)
	//set origA = A
	
	SET YBBN = $ORDER(^WWW122s(0,4,YI,YFORM,""))
	SET YPRUEF        = ""
	set objCustomData = ""
	IF YBBN'="" {
		set YPRUEF        = $get(^WWW122(0,YFORM,YBBN,1))
		set objCustomData = $get(^WWW122D(0,YFORM,YBBN,YM,1))
	}
	
	SET YDECIMALLEN=2
	IF (YBBN'="") && ($GET(YM)'="") && $DATA(^WWW122D(0,YFORM,YBBN,YM,1)) {
		IF $$$WWW122DDecimals(^WWW122D(0,YFORM,YBBN,YM,1))'="" SET YDECIMALLEN=$$$WWW122DDecimals(^WWW122D(0,YFORM,YBBN,YM,1))
	}
	
	; Counter (InputType 9) - next number
	;---------------------------------------
	if (YTYP=9) && (A="+") set A = $$^WWWNEXT(YDATEI)
	
	; Valid Relation, Mandatory Checks
	;---------------------------------------
	set strStatus = $$Validate(YDATEI,YFORM,YI,.A,$$$YES,YFELD)
	if $$$ISERR(strStatus) {
		set A = ""			// SR12615: Clear field if not valid
		set ^WWWSOR(YUSER,$increment(YLFZ)) = YTEXT_": "_$$$Text(strStatus)_"|"
	}
 	
	; "Min. Input Length"
	;---------------------------------------
	if (+$$$WWW122MinInputLength(YPRUEF)'=0) && ($length(A)<$$$WWW122MinInputLength(YPRUEF)) {
		set ^WWWSOR(YUSER,$increment(YLFZ)) = YTEXT_": "_$$^WWWTEXT(268)_" "_+$$$WWW122MinInputLength(YPRUEF)_"|"
	}
	
	; "Only Following Characters Allowed"
	;---------------------------------------
	set strAllowChars = $$$WWW122OnlyAllowChars(YPRUEF)
	if strAllowChars'="" {
		for YPR1=1:1:$length(A) {
			set strTestChar = $extract(A,YPR1)
			
			if '$find(strAllowChars,strTestChar) {
				set ^WWWSOR(YUSER,$increment(YLFZ)) = YTEXT_": "_$$^WWWTEXT(269)_" "_strAllowChars_"|"
				quit
			}
		}		
	}
		
	; "The following characters are not allowed"
	;---------------------------------------
	set strBlockChars = $$$WWW122DDontAllowCharacters(objCustomData)
	if strBlockChars="" set strBlockChars = $$$WWW122DontAllowChars(YPRUEF)
	for YPR1=1:1:$length(strBlockChars) {
		set strTestChar = $extract(strBlockChars,YPR1)
		continue:strTestChar=" "
		
		if A[strTestChar {
			set ^WWWSOR(YUSER,$increment(YLFZ)) = YTEXT_": "_$$^WWWTEXT(287)_" "_strBlockChars_"|"
			quit
		}
	}
	
	; Fill with zeroes (max 15 leading zeros)
	; FIXME : Strings with leading digits will get zero fill, those with leading alpha will not <GRF> 
	;---------------------------------------
	if (+$$$WWW122ForceStringLengthTo(YPRUEF)'=0) && (+A'=0) {
		set A = $extract((1_$extract("000000000000000",1,+$$$WWW122ForceStringLengthTo(YPRUEF))+A),2,99)
	}
	
	; Character conversion
	;---------------------------------------
	set idChangeInput = $$$WWW122ChangeInputAs(YPRUEF)
	IF +idChangeInput'=0 DO
	. IF idChangeInput="1" SET A=$$$UPPER(A)      
	. IF idChangeInput="2" SET A=$$$LOWER(A)
	. IF idChangeInput="3" DO
	. . SET YPR=A,A=""
	. . FOR YPR1=1:1 SET YPR2=$PIECE(YPR," ",YPR1) QUIT:$PIECE(YPR," ",YPR1,999)=""  SET A=A_$$$UPPER($EXTRACT(YPR2))_$$$LOWER($EXTRACT(YPR2,2,5000))_" "
	. ;
	. IF idChangeInput="4" DO
	. . SET YPR=A,A=""
	. . FOR YPR1=1:2 SET YPR2=$EXTRACT(YPR,YPR1,YPR1+1) QUIT:YPR2=""  SET:$EXTRACT(YPR2,2)'=" " YPR2=$EXTRACT(YPR2)_" "_$EXTRACT(YPR2,2)_" " SET A=A_YPR2
	. ;
	. IF idChangeInput="5" SET A=$TRANSLATE(A," ")
	. IF idChangeInput="6" SET A=$TRANSLATE($zconvert(A,"U")," ")
	. IF idChangeInput="7" SET A=$TRANSLATE(A,"][\}{|~,()@#$%^&*_=+<>?/-.:´`§²³!°µ")  ;OHNE SONDERZEICHEN;FIS;08.04.03/TYBD 10.06.2003 ;without special character 
	
	
	; SR17146 vvv
	; Check date
	;---------------------------------------
	if (YTYP=1) && (A'="") set A = $$CheckDate(A,SPRACHE,YUSER,YTEXT,.YLFZ)
	
	/*
	; Check date     ; "Wrong Date", "Wrong Date Format"
	;---------------------------------------
	IF YTYP=1 DO
	. QUIT:A=""
	. IF A="." SET A=$$^WWWDATE($HOROLOG)
	. IF $EXTRACT(A)="-" IF +$EXTRACT(A,2,9)'=0 SET A=$$^WWWDATE($HOROLOG-$EXTRACT(A,2,9))
	. IF $EXTRACT(A)="+" IF +$EXTRACT(A,2,9)'=0 SET A=$$^WWWDATE($HOROLOG+$EXTRACT(A,2,9))
	. IF $LENGTH(A,".")=3 IF $LENGTH($PIECE(A,".",3))=2 IF $LENGTH(A)=8 DO     ; MM.DD.YY or DD.MM.YY
	. . ; FIXME : $$^WWWDATE returns with FORMAT delimiter not "."
	. . IF $EXTRACT(A,7,8)>25 SET A=$EXTRACT(A,1,2)_"."_$EXTRACT(A,4,5)_"."_$EXTRACT($PIECE($$^WWWDATE($HOROLOG),".",3),1,2)_$EXTRACT(A,7,8) QUIT
	. . IF $EXTRACT(A,7,8)<26 SET A=$EXTRACT(A,1,2)_"."_$EXTRACT(A,4,5)_"."_20_$EXTRACT(A,7,8)  ; FIXME : Hardcoded to 20xx for first 25 years
	. ;
	. IF '$FIND(A,".") IF '$FIND(A,"/") IF $LENGTH(A)=8 SET A=$EXTRACT(A,1,2)_"."_$EXTRACT(A,3,4)_"."_$EXTRACT(A,5,8)
	. IF A'="" SET YPR=$$^WWWDATE1(A) IF YPR=""                                       SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(271)_"|"
	. IF SPRACHE="DE" IF A'="" IF '$FIND(A,"W") IF '$FIND(A,"w") IF $LENGTH(A,".")'=3 SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(272)_"|"
	*/
	; SR17146 ^^^
	
	; Time     ; "Wrong Time", "Wrong Time Format"
	;---------------------------------------
	IF YTYP=7 DO
	. QUIT:A=""
	. IF A="." SET A=$$^WWWTIME($HOROLOG)
	. IF A'="" IF '$FIND(A,":") DO
	. . IF $LENGTH(A)<3 SET A=+A_":00"
	. . IF $LENGTH(A)=3 SET A=+$EXTRACT(A)_":"_+$EXTRACT(A,2,3)
	. . IF $LENGTH(A)=4 SET A=+$EXTRACT(A,1,2)_":"_+$EXTRACT(A,3,4)
	. ;
	. IF A'="" SET YPR=$$^WWWTIME1(A) IF YPR=""       SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(273)_"|"
	. IF A'="" IF $LENGTH(A,":")<2&($LENGTH(A,".")<2) SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(274)_"|"
	
	; Amount fields  "Wrong Amount"
	;---------------------------------------
	IF (YTYP=8) || (YTYP=12) || (YTYP=18) DO
	. NEW A1,B1,B2,Z
	. SET Z=0
	. DO:'$FIND(A,"@")  IF $FIND(A,"@") SET B1=$PIECE(A,"@",1) SET B2=$PIECE(A,"@",2) SET B3=$PIECE(A,"@",3) NEW A SET A=B1 DO  SET A=B2 DO  SET A=B3 DO  ;FIS;21.05.04;25727;FREMDWÄHRUNG
	. . new YYDECIMAL
	. . ;SR17807 set YYDECIMAL = $$GetFormat^INPARA(8,YDECIMAL)
	. . set YYDECIMAL = $$GetFormat^WWW100(8,YDECIMAL)
	. . set YYDECIMAL = $extract($translate(YYDECIMAL,"nNxX"),2)
	. . IF YYDECIMAL="" SET YYDECIMAL = YDECIMAL
	. . IF $GET(YYDECIMAL)="," IF $LENGTH(A,",")>2 SET:Z=0 YLFZ=YLFZ+1 SET Z=1 SET ^WWWSOR(YUSER,YLFZ)=YTEXT_": "_$$^WWWTEXT(275)_" "_A_"|" 
	. . IF $GET(YYDECIMAL)="." IF $LENGTH(A,".")>2 SET:Z=0 YLFZ=YLFZ+1 SET Z=1 SET ^WWWSOR(YUSER,YLFZ)=YTEXT_": "_$$^WWWTEXT(275)_" "_A_"|"
	
	; Pattern Match  "Wrong Input Format"
	;---------------------------------------
	IF $$$WWW122PatternMatch(YPRUEF)'="" SET YPR=$$$WWW122PatternMatch(YPRUEF) IF A?@YPR=0 SET ^WWWSOR(YUSER,$increment(YLFZ))=YTEXT_": "_$$^WWWTEXT(276)_"|"
	
	;VARIABLE ZUWEISEN ;assign to variable 
	SET $PIECE(YFELD,Y,YI)=$$GetInternal^WWWTR(YTYP,A)
	quit
	
	
CheckDate(pstrDate,pidLanguage,YUSER,pstrText,&pintSeq)
	;-------------------------------------------------------------------------------
	; Convert possible incomplete literal date to the standard literal format and
	; check that this will result in a valid date
	; 
	; History:
	; 31-May-2010	GRF		SR17146: extracted from PRUEFD as common correction for
	; 							WWWSAVD, WWWSAVM, WWWSAVP
	;-------------------------------------------------------------------------------
	new dteInternal,strDelim,strFormat
	
	do GetDateFormat^COMUtilLocale(.strFormat,.strDelim,SPRACHE)
	
	do LitToStdLit^WWWDATE1(.pstrDate,SPRACHE)
	
	if (pstrDate'="") && ($$StdLitToInt^WWWDATE1(pstrDate,strFormat,strDelim)="") {
		set ^WWWSOR(YUSER,$increment(pintSeq)) = pstrText_": "_$$^WWWTEXT(271)_"|"
	} ; "Wrong Date"
	
	quit pstrDate
	
	
Validate(pidClass,pidForm,pidField,&pstrValue,pblnDisplay=$$$NO,pstrData)
	;-------------------------------------------------------------------------------
	; Validation of data piece
	;
	; Called By : WWWFORMValidation, PRUEFD^WWWSAVD
	; 
	; Params:	pidClass	- class id
	; 			pidForm 	- form id
	; 			pidField	- data field number (WWW003)
	; 			pblnDisplay	- whether pstrValue is display value (or storage)
	; 			pstrData	- YFELD
	;
	; ByRefs:	pstrValue	- field value, can be set to null
	; 			YOPTION
	; 			YOPTION1
	;
	; Returns:	status - whether there is a problem
	;
	; History:
	; 02-Jul-2013	SCR			CORE-86: Pass id & obj to $$ValidRelation^WWWFieldValidation
	; 06-Nov-2008	shobby		SR16123:    Standardised routine to determine InputType
	; 22-Jan-2008	heber		SRBR014794:	fix byref parameter
	; 12-Nov-2007	shobby		SRBR014737: If idType can't be found from the form use the class.
	; 26-Nov-2007	GM/Shobby	SRBR014737: Get values from $$get^WWW122()
	; 06-Sep-2007	shobby		SRBR014638: Simplified the mandatory determination.
	; 29-Sep-2006	HeberB		SRBR014265: Added YFELD as param to Validate
	; 							Checking if mandatory field defined WWW122D2
	; 24-Aug-2006	JW			SR14939: Wrong variable used
	; 08-Aug-2006	JW			SR13594: Created (encapsulated)
	;-------------------------------------------------------------------------------
	new strStatus,objField,strReason,blnMandatory,strYOPTION,strYOPTION1,blnNull
	new strIn,strOut,idType,idFormField
	
	$$$LogR("Validate",pidClass_"<"_pidForm_"<"_pidField_"<"_$get(pstrValue))
	set strStatus = $$$OK
 	set idFormField = $order(^WWW122s(0,4,pidField,pidForm,""))
	set idType = $$GetInputType^WWWSAVE(pidClass,pidField,pidForm)
	
	set strIn = $select(pblnDisplay:$$GetInternal^WWWTR(idType,pstrValue),1:pstrValue)
	;if '$$ValidRelation^WWWFieldValidation("D",pidClass,pidForm,pidField,strIn,$$$NO,.strReason) {
	if '$$ValidRelation^WWWFieldValidation("D",pidClass,pidForm,pidField,strIn,$$$NO,.strReason,YKEY,pstrData) { ; CORE-86

		if $get(strReason)="" {
			set strOut    = $select(pblnDisplay:pstrValue,1:$$GetLiteral^WWWTR(idType,pstrValue))
			set strReason = $listbuild("WWW00028",strOut)       ; "´%1´ is invalid"
		}
	$$$LogRx("V1:"_$get(strReason))
		set pstrValue = ""	; Clear field if not valid
	}
	
	if (pstrValue="") && (idType'=2) {
		if idFormField'="" {
			set objField = $get(^WWW122(0,pidForm,idFormField,1))
			
	; Caution:  CheckRules does conditional checks based on pstrData,
	;           $$$WWW122D2MandatoryField(objRule) won't be enough <shobby> (don't need to pass pstrData further up)
			do CheckRules^WWWFORMD(pidForm,idFormField,.pstrData,"","","",.blnMandatory)
			
			if blnMandatory {
				set strYOPTION  = $$$WWW122OnlyShowIfOptionYOPTION(objField)
				set strYOPTION1 = $$$WWW122OnlyShowIfOptionYOPTION1(objField)
				set blnNull     = $$$NO
				
				if strYOPTION'="" {
					if $find(","_strYOPTION_",",","_$get(YOPTION)_",")   set blnNull = $$$YES
				
				} elseif strYOPTION1'="" {
					if $find(","_strYOPTION1_",",","_$get(YOPTION1)_",") set blnNull = $$$YES
				
				} else {
					set blnNull = $$$YES
				}
	
				if blnNull {
					set strStatus = $select(strReason="":$listbuild(267),1:strReason)      ; "Mandatory Field"
				}
			}
		}
	}
 
	quit strStatus
	
]]></Routine>
</Export>