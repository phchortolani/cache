<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMFormCreate" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMFormCreate
	;-------------------------------------------------------------------------------
	; Construct Temporary Forms
	; 
	; History
	; 23-Mar-2005	PO		SR11349 Created - taken from CSTInputForm & CSTCommon
	;-------------------------------------------------------------------------------
	;
	; 23-Mar-2005 Development of this has been halted as a more appropriated means
	; has been used for the SR11349. I have left this routine as it may still have
	; a use.
	;
 
#include WWWConst
#include COMSYS
	
Run(pstrSourceForm="",pstrDestinationForm="",pstrCommand="")
	;-------------------------------------------------------------------------------
	; This routine creates a tailored input form (pstrDestinationForm_YUSER) based on
	; the form pstrSourceForm.
	; 
	; Usage: To alter the form being created use the pstrCommand argument, use this
	; argument to call the relevant procedure to alter the form being generated.
	; 
	; pstrCommand("Form") - procedure to alter Form def. ^WWW120
	; pstrCommand("Key") - procedure to alter Key def. ^WWW121
	; pstrCommand("Data") - procedure to alter Data def. ^WWW122
	; pstrCommand("Custom") - procedure to alter Custom def. ^WWW122D
	; 
	; All calls can accept an argument of objRecord to modify the definition.
	; 
	; The calls for Key, Data and Custom can accept an argument of idx to
	; determine current record.
	; 
	; Example: where pstrCommand("Data") is set to "do ModDataDef^FINAPInv(.objRecord,idx)"
	; 
	; NOTE: currently not supporting addition of new records, if you want a "new" field
	; to be displayed on the generated form it needs to be done by hiding/unhiding.
	; 
	; History
	; 23-Mar-2005	PO		SR11349 Created
	;-------------------------------------------------------------------------------
	new blnOK,idx,KEY1,strSourceData,strCheckRecord
	
	set YKEY  = $get(^WWWDATEN(YM,+$horolog,YUSER,pstrSourceForm,"P",1))
	set KEY1  = YKEY
	set blnOK = $$$YES
	
	for idx=1:1:$length(KEY1,$$$COMMA) {
		set VORG(idx) = $piece(KEY1,$$$COMMA,idx)
		if VORG(idx)="" set blnOK = $$$NO
	}
	
	if blnOK {
		set strSourceData = $$$WWW120ClassUsedInForm($get(^WWW120(0,pstrSourceForm,1)))
		if strSourceData = "" {
			set strSourceData = pstrSourceForm
		}
		set strCheckRecord = "^"_strSourceData_"("
		if $$$WWW001SharedFile($get(^WWW120(0,strSourceData,1))) {
			set strCheckRecord = strCheckRecord_"0"
		} else {
			set strCheckRecord = strCheckRecord_"YM"
		}
		set strCheckRecord = strCheckRecord_","_KEY1_",1)"
 
		if '$data(@strCheckRecord) {
			set blnOK = $$$NO
			; Must Save Default Record First
			do writeOutScript^COMUtils("alert('"_$$^WWWTEXT("CSTERR00212")_"')")
		}
	}
	
	if blnOK {
		new YKEY,YFORM
		set YKEY=KEY1
		set YFORM=$$Make(pstrSourceForm,pstrDestinationForm,pstrCommand)
		if YFORM'="" {
			set %("VAR","YFORM")=YFORM
			set %("VAR","YKEY") =KEY1
			do ^WWWFORM
		}
	} else {
		; TODO : can we retain WrongData or SaveChange state?
		; refresh
		set %("VAR","YFORM")=YFORM
		set %("VAR","YKEY") =KEY1
		do ^WWWFORM
	}
	quit
	
Make(pstrSourceForm="",pstrDestinationForm="",pstrCommand="")
	;-------------------------------------------------------------------------------
	; Collect data from Report Spec for BuildForm
	; 
	; History
	; 23-Mar-2005	PO		SR11349 Created - taken from CSTInputForm
	;-------------------------------------------------------------------------------
	new AcctType,strBaseName,ColCodes,EffectDate,strFormName,objDefault,objMatPat,OrderType
	new PatternDate,TranType
	
	set strBaseName = pstrDestinationForm
	set strFormName = strBaseName_YUSER
	
	do CleanUp(strBaseName)
	lock +^CSTForm(strFormName)
	do BuildForm(pstrSourceForm,strFormName,pstrCommand)
	; Should code unlock here or is that done implicitly ? I didn't think it would be.
 
	;if ColCodes'="" {
	;	do CleanUp(strBaseName)
	;	lock +^CSTForm(strFormName)
	;	do BuildForm(pstrSourceForm,strFormName,pstrCommand) ; ,ColCodes
	;} else {
		; TODO : error processing
		; 		 none of the following were entirely satisfactory
		; 		 though WWWINFO came close - maybe %TXT(1)?
		; 		 
		; 		 *** See INFIBCHARMATRIX - may have a solution or else use Phil's Javascript
		; 		 
		;set Q=1
		;do ReturnError^COMUtils("CSTERR.....")
		;do Alert^SALCSTIntSystem($$^WWWTEXT("CSTERR....."))
		;write "window.alert('"_$$^WWWTEXT("CSTERR.....")_"');"
		;do ^WWWINFO(text)
	;	set strFormName=""
	;}
	
	quit strFormName
	
BuildForm(pstrSourceForm="",pstrDestinationForm="",pstrCommand="") ; ,pColCodes=""
	;-------------------------------------------------------------------------------
	; Build the Temp Form
	;   Copy WWW120/WWW121/WWW122 details from named form
	;   Use WWW122D to override Columns (change name or hide)
	;   Copy Help messages from WWW127
	; 
	; History
	; 23-Mar-2005	PO		SR11349 Created - taken from CSTInputForm
	;-------------------------------------------------------------------------------
	new idx,objRecord
	
	do ClearForm(pstrDestinationForm)            ; Refresh self regardless of lock
	
	; *****  FORM  *****************************************************************
	
	set objRecord=$get(^WWW120(0,pstrSourceForm,1))
	
	xecute $get(pstrCommand("Form"))
	
	do ^WWWSPEI("WWW120",pstrDestinationForm,objRecord,1)
	
	; *****  FORM KEYS  ************************************************************
	
	set idx=""
	for {
		set idx = $order(^WWW121(0,pstrSourceForm,idx))
		quit:idx=""
		
		set objRecord=$get(^WWW121(0,pstrSourceForm,idx,1))
		
		xecute $get(pstrCommand("Key")) ; argument idx
		
		do ^WWWSPEI("WWW121",pstrDestinationForm_","_idx,objRecord,1)
	}
	
	; *****  FORM DATA FIELDS  *****************************************************
	
	set idx=""
	for {
		set idx = $order(^WWW122(0,pstrSourceForm,idx))
		quit:idx=""
		
		set objRecord = $get(^WWW122(0,pstrSourceForm,idx,1))
		
		xecute $get(pstrCommand("Data")) ; argument idx 
		
		do ^WWWSPEI("WWW122",pstrDestinationForm_","_idx,objRecord,1)
		
		; Replace with correct Column Header or mark as hidden
		;if idx<AcctColNo {
		;	set objFormCust=""
		;	if ColCode="" {
		;		set $piece(objFormCust,Y,13) = $$$YES			; Hidden
		;	} else {
		;		set $piece(objFormCust,Y,6)  = ColCode			; Header
		;	}
		;	do ^WWWSPEI("WWW122D",pstrDestinationForm_","_idx_","_YM,objFormCust,1)
		;}
		
		xecute $get(pstrCommand("Custom")) ; argument idx 
		
		do ^WWWSPEI("WWW122D",pstrDestinationForm_","_idx_","_YM,objRecord,1)
	}
 
	; *****  FORM HELP  ************************************************************
	
	if $$$NEVER {			; <GRF> TODO: - COMMENTED OUT SO CODE CHECK SKIPS THIS
	;set idx=""
	;for {
	;	set idx = $order(^WWW127(0,SourceForm,idx))
	;	quit:idx=""
	;	
	;	set objFormKey=$get(^WWW121(0,SourceForm,idx,1))
	;	do ^WWWSPEI("WWW127",pFormName_","_idx,objFormKey,1)
	;}
	}
	
	quit
	
CleanUp(pstrBaseName)
	;-------------------------------------------------------------------------------
	; Remove Forms no longer in use
	; 
	; History
	; 23-Mar-2005	PO		SR11349 Created - taken from CSTCommon
	;-------------------------------------------------------------------------------
	new BaseLength,FormName
	
	set FormName   = pstrBaseName
	set BaseLength = $length(pstrBaseName)
	for { 
		set FormName=$order(^WWW120(0,FormName))
		quit:$extract(FormName,1,BaseLength)'=pstrBaseName
		
		if '$data(^$LOCK("^CSTForm("""_FormName_""")")) {
			do ClearForm(FormName)
		}
	}
 
	quit
	
ClearForm(pstrFormName="")
	;-------------------------------------------------------------------------------
	; Remove a specific Form and the associated classes
	; 
	; History
	; 23-Mar-2005	PO		SR11349 Created - taken from CSTCommon
	;-------------------------------------------------------------------------------
	
	quit:pstrFormName=""
	do KILL^COMUtils("WWW120",pstrFormName)
	; TODO : also kill ^WWW127 entries if necessary
	quit
]]></Routine>
</Export>