<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWRECALL" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWRECALL
 
#include WWWConst
 
	;-------------------------------------------------------------------------------
	; Save record as a recall point.
	;
	; Params:
	; pidUser - User name
	; pidForm - Form name
	; pidType - Field type
	; pobjRecord - 
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 29-May-2006	PO		SR14679: Created
	;-------------------------------------------------------------------------------
SaveRecallRecord(pidUser,pidForm,pidType,pobjRecord)
	new strStatus,intNumber,intNoFields,intNewRecall,strValue,objWWW122,idField //,idRecall
 	
	quit:(pobjRecord'="")&&($$RecallRecord(pidUser,pidForm,pidType)=pobjRecord) // Do not save recall if same as previous
 
	// Some possible options for recall counter
	//
	//Just count up and up
	//set idField = $order(^WWWRECALL(YM,pidUser,pidForm,pidType,idField))
	//set intNewRecall = $order(^WWWRECALL(YM,pidUser,pidForm,pidType,idField,""),-1)+1
	//
	//Base the counter on the date and time
	//set intNewRecall = $translate($h,",") ; User can't really perform more than one save per second, so could use this
	//
	// OR
	//
	//Use a loop, so instead of continually increasing the Count, key has a limited number of possible values ie. 20
	//and a separate record eg. ^WWWCURRENTRECALL(YM,pidUser,pidForm,pidType,1) is used to determine most recent recall
 
	set intNewRecall = 1
 	
	set intNoFields = $length(pobjRecord,Y)
	for idField = 1:1:intNoFields {
		set objWWW122 = $get(^WWW122(0,pidForm,idField,1))
		continue:$$$WWW122SequenceNumber(objWWW122)'=""
 
		set $$$WWWRECALLValue1(^WWWRECALL(YM,pidUser,pidForm,pidType,idField,intNewRecall,1)) = $piece(pobjRecord,Y,idField)
 
		//set intNumber = 1
		//set intCount = intNewRecall
		// Don't need to do this if using a loop.
		//for {
		//	set idRecall = $order(^WWWRECALL(YM,pidUser,pidForm,pidType,idField,idRecall),-1)
		//	quit:idRecall=""
 
		//	set intNumber = intNumber + 1
		//	if intNumber > 20 { ; FIXME/FINISHME : parameterise this!
		//		kill ^WWWRECALL(YM,pidUser,pidForm,pidType,idField,idRecall)
		//	}
		//}
	}
 
	quit
 
	;-------------------------------------------------------------------------------
	; Recall what record that was previously entered
	;
	; Params:
	; pidUser - User name
	; pidForm - Form name
	; pidType - Field type
	; pidRecall - What to recall (most recent, ...) currently only able to recall most recent
	;
	; ByRefs: None
	;
	; Returns: Constucted record
	;
	; History:
	; 29-May-2006	PO		SR14679: Created
	;-------------------------------------------------------------------------------
RecallRecord(pidUser,pidForm,pidType,pidRecall=1)
	new objRecord,idField,intCount
 
	set objRecord = ""
 
	// Select the most recent data to recall if a no particular "recall" requested (pintCount).
	//if pintCount = "" {
	//	set idField = $order(^WWWRECALL(YM,pidUser,pidForm,pidType,idField))
	//	set pidRecall = $order(^WWWRECALL(YM,pidUser,pidForm,pidType,idField,""),-1)
	//}
 
	// Populate record
	set idField = ""
	for {
		set idField = $order(^WWWRECALL(YM,pidUser,pidForm,pidType,idField))
		quit:idField=""
 
		set $piece(objRecord,Y,idField) = $$$WWWRECALLValue1($get(^WWWRECALL(YM,pidUser,pidForm,pidType,idField,pidRecall,1)))
	}
 
	quit objRecord
 
	;-------------------------------------------------------------------------------
	; To be called from a field definition
	;
	; Params:
	; pidUser - User name
	; pidForm - Form name
	; pidType - Field type
	; pidField - Field id / number
	; pidRecall - What to recall (most recent, ...) currently only able to recall most recent
	;
	; ByRefs: None
	;
	; Returns: Previous value
	;
	; History:
	; 29-May-2006	PO		SR14679: Created
	;-------------------------------------------------------------------------------
RecallField(pidUser,pidForm,pidType,pidField,pidRecall=1)
	quit $$$WWWRECALLValue1($get(^WWWRECALL(YM,pidUser,pidForm,pidType,pidField,pidRecall,1)))
]]></Routine>
</Export>