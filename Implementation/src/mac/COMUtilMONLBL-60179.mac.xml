<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMUtilMONLBL" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMUtilMONLBL
 
	; This routine cleans up a file created from ^%MONLBL
	; 1 Removes blank lines
	; 2 Removes routines with no data
	; 3 Adds the Routine Name to each line
	; 4 Removes routine lines that have not been used
 
Start(pstrFileIn,pstrFileOut)
	;-------------------------------------------------------------------------------
	; Convert %MONLBL
	;
	; Params: 
	; 	pstrFileIn  = File to process
	; 	pstrFileOut = Output fiel
	;
	; Returns:
	;
	; History:
	; 03-Nov-2008	SCR		Added Label
	; 31-Oct-2008	SCR		Created
	;-------------------------------------------------------------------------------
	new strRoutine,strLine,intLine,intLineCnt,intTime,intTotalTime
	new strLabel,strTemp,strCode
	
	open pstrFileIn:"RS":1    else  write "can not open ",pstrFileIn quit
	
	open pstrFileOut:"WSN":10 else  write "can not open ",pstrFileOut close pstrFileIn quit
	
	if $ZUTIL(68,40,1)  ; Turn on eof mode
	
	for {
		use pstrFileIn
		read strLine
		quit:$zeof
		
		use 0
		if strLine="" {
			continue
		}
		if $piece(strLine," ",1)="Routine" {
			set strRoutine=$piece(strLine," ",2)
			set strLabel=strRoutine 				; Default Label 
			if strLine["no data yet" continue
		}
		if +strLine {
			set strCode=$extract(strLine,39,9999)
			set intLine=+strLine
			set strLine=$zstrip($piece(strLine," ",2,99999),"<W")
			set intLineCnt=+strLine
			if 'intLineCnt continue
			
			set strLine=$zstrip($piece(strLine," ",2,99999),"<W")
			set intTime=+strLine
			set strLine=$zstrip($piece(strLine," ",2,99999),"<W")
			set intTotalTime=+strLine
			set strLine=$zstrip($piece(strLine," ",2,99999),"<W")
			set strCode=$translate(strCode,$char(9)," ") 			 ; Code without tabs
			set strTemp=$piece($translate(strCode,"("," ")," ",1)
			if strTemp'="" {
				set strLabel=strTemp
			}
			use pstrFileOut
			write strRoutine_$char(9)_intLine_$char(9)_intLineCnt_$char(9)_intTime
			write $char(9)_intTotalTime_$char(9)_strLabel_$char(9)_strLine,!
			use 0
			write strRoutine_$char(9)_strLine,!
		}
	}
	
	close pstrFileIn
	close pstrFileOut
	
	quit

Live(plstRtns="",plstMetrics="",plstProc="") 
	new sc
	if plstRtns="" {
		set plstRtns=$listbuild("COM*","WWW*")
	}
	if plstMetrics="" {
		set plstMetrics=$listbuild(34,51,52)
	}
	if plstProc="" {
		set plstProc=$listbuild(648)
	}
	set sc=##class(%Monitor.System.LineByLine).Start(plstRtns)
	write !,sc," Started "
	read " Press any key ",*key
	set strMetrics=##class(%Monitor.System.LineByLine).GetMetrics()
	set intCnt=$l(strMetrics,",")
	set objRset=##class(%ResultSet).%New("%Monitor.System.LineByLine:Result")
	do objRset.Execute("COMViewFilter")
	write "LineByLine" 
	for i=1:1:intCnt {
		write ?(12*i),$p(strMetrics,",",i)," "
	}
	for l=1:1 {
		set more=objRset.Next()
		quit:'more
		set x=objRset.GetData(1)
		write !,l,"." 
		for i=1:1:intCnt {
			w ?(12*i),$li(x,i)
		}
	}
	kill rset
	set sc=##class(%Monitor.System.LineByLine).Stop()
	quit
]]></Routine>
</Export>