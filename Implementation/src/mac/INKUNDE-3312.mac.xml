<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INKUNDE" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INKUNDE ;INKUNDE;DT;PRUEFEN;KUNDENDATEN;  ; Compiled January 7, 2005 13:55:11
#include INConst
#include COMSYS
#include WWWConst
#include COMConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		PRUEFEN
	;
	; Inputs : 
	;	YKEY
	;	YFELD		objINKUNDE
	;
	; ByRef :
	;	YOK			status
	;
	; Returns : Nothing
	;
	;
	; History :
	; 25-Jan-2008	GRF		SR15629: expand commands; quits; doco
	; 31.12.2004	FIS		26636;PRÜFEN STEUERKENNZEICHEN
	; 14.11.2003	FIS		23963;AUSGESCHALTET
	; 14.05.2003	FIS		35571;PRÜFEN ADRESSGRUPPEN
	; 22.09.2000	DT		KUNDENDATEN
	;-------------------------------------------------------------------------------
	IF YFORM="INKUNDE" DO SAVE^INKUNDED54  ;FIS;PRÜFEN STEUERKENNZEICHEN;31.12.04;26636
	DO KOND
	SET $PIECE(YFELD,Y,202)=1 DO ^INDOC("INKUNDE",YKEY,YFELD)   ;SCHREIBEN BRIEF ;write letter 
	IF $PIECE(YFELD,Y,216)=1 SET $PIECE(YFELD,Y,36)=""     ;KREDITEINHEIT  ;;14.05.03;35571;PRÜFEN ADRESSGRUPPEN
	IF $PIECE(YFELD,Y,217)=1 SET $PIECE(YFELD,Y,37)=""     ;VERKAUFSEINHEIT
	IF $PIECE(YFELD,Y,218)=1 SET $PIECE(YFELD,Y,38)=""     ;RECHNUNGSNASCHRIFT
	;IF $PIECE(YFELD,Y,219)=1 SET $PIECE(YFELD,Y,39)=""    ;LIEFERANSCHRIFT ;FIS;AUSGESCHALTET;14.11.03;23963
	SET YOK=$$^WWWSPEI("INKUNDE",YKEY,YFELD)
	if YOK set YOK=$$$GRIDSave(YKEY)
	DO KOPIE
	DO DOPPEL
	QUIT
	
KOND ;ZAHLUNGS KONDITIONEN ;terms of payment 
	NEW KOND
	
	QUIT:$GET(YKEY)=""
	SET YKEY=$PIECE(YKEY,",",1)
	QUIT:YKEY=""
	QUIT:$GET(YFELD)=""
	
	SET KOND=$PIECE(YFELD,Y,56)   ;KONDITIONEN VORHANDEN ;terms of payment on hand 
	QUIT:KOND=""
	
	SET KOND1=$GET(^INKOND(YM,KOND,1))        ;DATEN AUS KONDITIONSDATEI ;out of 
	SET $PIECE(YFELD,Y,74)=$PIECE(KOND1,Y,3)  ;SKONTO 
	SET $PIECE(YFELD,Y,75)=$PIECE(KOND1,Y,2)  ;TAGE 
	SET $PIECE(YFELD,Y,76)=$PIECE(KOND1,Y,4)  ;NETTO
	QUIT
	
KOPIE  ;
	IF $GET(FFFELD)'="" IF $PIECE(FFFELD,"~",1,26)=$PIECE(YFELD,"~",1,26) IF $PIECE(FFFELD,Y,200)=$PIECE(YFELD,Y,200) QUIT   ;Q: WENN HAUPT INFOMATION NICHT GEÄNDERT ;when pate Not 
	
	IF $PIECE(YFELD,Y,200)'="" DO     ;ÄNDERUNG KOPIE IN LIEF ;alteration copy within 
	. NEW SATZ,KEY,YI,DATA
	. SET DATA=0
	. SET SATZ=""
	. IF $DATA(^INLIEF(YM,$PIECE(YFELD,Y,200),1)) SET SATZ=$GET(^(1)) SET DATA=1
	. FOR YI=1:1:26 SET $PIECE(SATZ,Y,YI)=$PIECE(YFELD,Y,YI)
	. SET $PIECE(SATZ,Y,200)=YKEY
	. SET KEY=$PIECE(YFELD,Y,200)
	. SET YOK=$$^WWWSPEI("INLIEF",KEY,SATZ,1)
	. DO
	. . NEW YBACK,YKEY
	. . SET YI=YAKTION_"EP=WWWFORM&YFORM=INLIEF&YKEY="_$PIECE(YFELD,Y,200)
	. . SET YBACK="INKUNDE,"
	. . DO VAR^WWWCGI
	. ;
	. IF DATA'=1 DO        ;NEUANLAGE LIEFERANT: (NR) BEZEICHNUNG ;notation 
	. . DO ^WWWINFO($$^WWWTEXT(58,,1)_" "_$$^WWWTEXT(32096,,1)_" "_$$^WWWTEXT(32022,,1)_": "_" ("_$PIECE(YFELD,Y,200)_") "_$PIECE(YFELD,Y,8),0,YI)
	. ;
	. IF DATA=1 DO        ;ÄNDEREN DATENSATZ BEI LIEFERANT ;data record next to supplier 
	. . DO ^WWWINFO($$^WWWTEXT(40,,1)_" "_$$^WWWTEXT(32096,,1)_" "_$$^WWWTEXT(32022,,1)_": "_" ("_$PIECE(YFELD,Y,200)_") "_$PIECE(YFELD,Y,8),0,YI)
	. ;
	. DO ^WWWFORM2
	. SET Q=1              ;KEINE FORMULAR ANZEIG NACH INFO ;no form within 
	
	QUIT
	
DOPPEL  ;
	QUIT:$PIECE(YFELD,Y,200)'=""      ; $$$INKUNDECustomerisSupplier()
	
	NEW BEZ
	
	SET BEZ=$$^WWWUMLAU($PIECE(YFELD,Y,8),1)
	IF $DATA(^INLIEFs(YM,1,BEZ)) DO        ;sOK
	. SET LIEF=$ORDER(^INLIEFs(YM,1,BEZ,""))        ;sOK
	. QUIT:$PIECE($GET(FFFELD),"~",1,26)=$PIECE(YFELD,"~",1,26)     ;Q: WENN HAUPT INFOMATION NICHT GEÄNDERT ;when pate Not 
	. DO
	. . SET FFFELD=YFELD
	. . NEW YBACK,YKEY
	. . SET YI=YAKTION_"EP=WWWFORM&YFORM=INLIEF&YKEY="_LIEF
	. . SET YBACK="INKUNDE,"
	. . DO VAR^WWWCGI
	. ;
	. DO ^WWWINFO($$^WWWTEXT(32796,,1)_"&nbsp;&nbsp;&nbsp;"_" ("_LIEF_") "_$PIECE(YFELD,Y,8),0,YI)
	. DO ^WWWFORM2
	. SET Q=1              ;KEINE FORMULAR ANZEIG NACH INFO ;no form within 
	
	QUIT
	
KILL(KUNDE)
	;-------------------------------------------------------------------------------
	;	EINSPRUNG NACH LÖSCHEN ;within Delete 
	;
	; History:
	; 05-Dec-2006	RPW		SR15273: if we are going to kill the customer, kill the
	; 							categories for them as well.
	;-------------------------------------------------------------------------------
	QUIT:$GET(KUNDE)=""
	
	DO ^WWWSKILL("INPARTN",KUNDE)
	DO ^WWWSKILL("INKUNDED",KUNDE)
	DO ^WWWSKILL("INKUNDEA",KUNDE)
	DO ^WWWSKILL("INKUNDEAP",KUNDE)
	DO ^WWWSKILL("INKUNDEB",KUNDE)
	DO ^WWWSKILL("INKUNDEK",KUNDE)
	DO ^WWWSKILL("INKUNDEKR",KUNDE)
	DO ^WWWSKILL("INKUNDEP",KUNDE)
	DO ^WWWSKILL("INKUNDEPR",KUNDE)
	DO ^WWWSKILL("INAUFAUTO",KUNDE)
	do ^WWWSKILL("INCustomerCategory",KUNDE) // SR15273
	DO  ;LÖSCHEN BRIEFE ;Delete 
	. SET YREF=KUNDE
	. FOR  SET YREF=$ORDER(^INDMS(YM,YREF)) QUIT:YREF=""  QUIT:$PIECE(YREF,".",1)'=KUNDE  DO  ;SUCHEN BELEGE ;seek 
	. . KILL ^INDMS(YM,YREF)
	
	QUIT
	
KILL1 ;KEIN LÖSCHEN MÖGLICH ;no Delete potential 
	;-------------------------------------------------------------------------------
	; Determines whether a customer can be deleted
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 22-Mar-2006	Steve S	SR14448: Commented: Check ALL orders/offers
	;-------------------------------------------------------------------------------
	new idxCustomer
	
	set Q=$$$QDelete
	quit:$get(YKEY)=""
	
	set idxCustomer=$$$Index(YKEY)	
	if $data(^INAUFs(YM,1,idxCustomer)) || $data(^INANGs(YM,1,idxCustomer)) set Q=$$$QDontDelete
	
	//SR14448: Commented: This old code only checks OPEN orders/offers!
 
	;IF $$^INKUNDAUF(YKEY,1)'=0 SET Q=1   ;AUFRTÄGE VORHANDEN ;on hand 
	;IF $$^INKUNDANG(YKEY,1)'=0 SET Q=1   ;ANGEBOTE VORHANDEN ;on hand 
	;IF Q=1 DO ^WWWINFO($$^WWWTEXT(32528),1)   ;NICHT GELÖSCHT, DA AUFTRÄGE
	
	quit
	
	
IsUsable(pidCustomer)
    ;-------------------------------------------------------------------------------
    ; Whether customer can be used at this time.
    ;
    ; Params:	pidCustomer
    ;
    ; Returns:	status - $$$OK or error msg
    ;
    ; History:
    ; 27-Sep-2005	JW		SR13447: Created (copied from INLIEF)
    ;-------------------------------------------------------------------------------
	new strStatus,dteInactive
	
	set strStatus = $$$OK
	
	if $get(pidCustomer)'="" {
		set objCustomer = $get(^INKUNDE(YM,pidCustomer,1))
		
		set dteInactive = $$$INKUNDEInactiveDate(objCustomer)
		if (dteInactive'="") && (+$horolog >= dteInactive) {
			set strStatus = $listbuild("Com00227",pidCustomer) ; Customer %1 is inactive
			
		;} elseif $$$INKUNDECustomerFlags(objCustomer)=1 {
		;	set strStatus = $listbuild("Com00228",pidCustomer) ; Customer %1 is suspended
		}
	}
	quit strStatus
	
	
OnAfterDataFields(pidCustomer)
	;-------------------------------------------------------------------------------
	; After the form is drawn
	;
	; Params:
	; pidCustomer: The id of the customer.
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 06-Dec-2006	RPW		SR15273: Created
	;-------------------------------------------------------------------------------
	if $get(YSEITE)=7 {
		do LoadGrid(pidCustomer)
	}
	
	quit
	
	
LoadGrid(pidCustomer)
	;-------------------------------------------------------------------------------
	; Display the Line Items associated with this Receive.
	;
	; Parameters:
	; pidCustomer: The id of the customer.
	;
	; History:
	; 05-Dec-2008	GRF		Clarify Enabled test
	; 06-Dec-2006	RPW		SR15273:Created
	;-------------------------------------------------------------------------------
	new YFORM,YKEY,YAUSWAHL,YFELD
	
	set YFORM="INCustomerCategory"
	set YFELD=""
	set YKEY=$get(pidCustomer)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 290
	set $$$COMGridEditParameterGridName(YAUSWAHL)      = YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)       = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)     = "INKUNDE"
		 
	do ^COMGridEdit31
	
	quit
	
]]></Routine>
</Export>