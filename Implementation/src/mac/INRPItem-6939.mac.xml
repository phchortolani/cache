<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INRPItem" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INRPItem
 
	#include COMSYS
	#include INConst
 
GetQOH(pidItem,pidCompany)
    ;-------------------------------------------------------------------------------
    ; Get the total quantity on hand for a company
    ;
    ; Returns: float
    ;
    ; History:
    ; 29-Jun-200p	PPP			SR16663 : Update process to use INARTMENGE (Calculated Field)
    ; 07-Sep-2005	Steve S		Created SR:11267
    ;-------------------------------------------------------------------------------
	new fltQty,idLoc,idBin,dteReceived,objReceived
 
    //set fltQty=0

	set fltQty=$$^INARTMENGE(pidItem)
    
    // SR14389: FIXME - this should use INARTMENGE !!!
    /*
    if ($get(pidItem)'="")&&($get(pidCompany)'="") {
	    set idLoc=""
	    for {
		    set idLoc=$order(^INWE(pidCompany,pidItem,idLoc))
		    quit:idLoc=""
		    
		    set idBin=""
			for {
				set idBin=$order(^INWE(pidCompany,pidItem,idLoc,idBin))
				quit:idBin=""
			
				set dteReceived=""
				for {
					set dteReceived=$order(^INWE(pidCompany,pidItem,idLoc,idBin,dteReceived))
					quit:(dteReceived="")
				
					set objReceived=$get(^INWE(pidCompany,pidItem,idLoc,idBin,dteReceived,1))
					set fltQty=fltQty+$$$INWEQuantity(objReceived)
				}	
			}  
	    }  
    }
    */
    quit fltQty
    
    
GetGroupDesc(pidCompany,pidGroup,pidLang)
    ;-------------------------------------------------------------------------------
    ; Get an item group's description
    ;
    ; Returns: String
    ;
    ; History:
    ; 01-Feb-2007	Steve S		SR15416: Set up SPRACHE here!!
    ; 27-Nov-2006	JW			BR014285: Item group change
    ; 22-Sep-2005	Steve S		SR11267: Created
    ;-------------------------------------------------------------------------------
	new strDesc,YM,SPRACHE
 
	set strDesc=""
	
	if ($get(pidCompany)'="")&&($get(pidLang)'="") {
		if $get(pidGroup)'="" {
			//set strDesc="("_pidGroup_") "_$$$INPARAText($get(^INPARA(pidCompany,"WARENGRUPPE",pidLang,pidGroup,1)))
			set YM		= pidCompany
			set SPRACHE = pidLang //SR15416
			set strDesc="("_pidGroup_") "_$$GetDescription^INDItemGroup(pidGroup)	//BR014285
		} else {
			set strDesc=$$^WWWTEXT("IN00333",,,pidLang)  ;None	
		}		
	}
 
	quit strDesc
	
	
GetUOM(pidCompany,pidItem,pidLang)
    ;-------------------------------------------------------------------------------
    ; Get an item's UOM description
    ;
    ; Returns: String
    ;
    ; History:
    ; 22-Sep-2005	Steve S		SR11267: Created
    ;-------------------------------------------------------------------------------
	new strUOM,objINART,idUnit
 
	set strUOM=""
	
	if ($get(pidCompany)'="")&&($get(pidItem)'="")&&($get(pidLang)'="") {
		set objINART=$get(^INART(pidCompany,pidItem,1))
		set idUnit=$$$INARTUnitofMeasure(objINART)
 
		if idUnit'="" {
			set strUOM=$$Enum^REPUtilities("EINHEIT",pidLang,idUnit)	
		} else {
			set strUOM=$$^WWWTEXT("IN00333",,,pidLang)  ;None
		}		
	}
 
	quit strUOM
	
	
UnitPrice(pidCompany,pidItem,pidLocation)
	;-------------------------------------------------------------------------------
	; Return the unit price of a product for a location
	;
	; Params:	pidCompany		: The company number (YM)
	; 			pidItem			: The item number
	;
	; ByRefs:
	;
	; Returns: curPrice (the unit price)
	;
	; History:
	; 06-Apr-2006	Steve S		SR14416: Created
	;-------------------------------------------------------------------------------
	new curPrice
	
	set curPrice=0
	
	if ($get(pidCompany)'="")&&($get(pidItem)'="")&&($get(pidLocation)'="") {
		do ^WWWVAR
		set YM=pidCompany
		set YLOCATION=pidLocation
		
		set curPrice=$$^INSALESPRICE(pidItem,1,pidLocation)
	}
	
	quit curPrice
	
 
ItemDetail(pidCompany,pidItem,pidPiece)
	;-------------------------------------------------------------------------------
	; Retrieve a piece of item detail
	;
	; Params:	pidCompany		: The company number (YM)
	; 			pidItem			: The item number
	; 			pidPiece		: The piece number of the record
	;
	; ByRefs:
	;
	; Returns: strDetail	(The detail requested)
	;
	; History:
	; 06-Apr-2006	Steve S		SR14416: Created
	;-------------------------------------------------------------------------------
	new YM,strDetail,objINART
 
	set Y="~"
	set YM=$get(pidCompany)
	set strDetail=""
	
	if (YM'="")&&($get(pidItem)'="") {
		set objINART=$get(^INART(YM,pidItem,1))
		if +$get(pidPiece)'=0 {
			set strDetail=$piece(objINART,Y,pidPiece)
		}
	}
	
	quit strDetail
	
	
GetQOHFromLocation(pidCompany,pidLocation,pidItem)
	;-------------------------------------------------------------------------------
	; Get QOH for an item for a specific location.
	; (Essentially a wrapper for INARTMENGE).
	;
	; Params:	pidCompany		: The company number (YM)
	; 			pidLocation		: The location to get qty for
	; 			pidItem			: The item number
	;
	; ByRefs:
	;
	; Returns: fltQty
	;
	; History:
	; 11-Apr-2006	Steve S		SR14419: Created
	;-------------------------------------------------------------------------------
	new fltQty
 
	set fltQty=0
 
	if ($get(pidCompany)'="")&&($get(pidLocation)'="")&&($get(pidItem)'="") {
		do ^WWWVAR
		set YM=$get(pidCompany)
		set YLOCATION=$get(pidLocation)
		set fltQty=$$^INARTMENGE(pidItem,,pidLocation)
	}
 
 
	quit fltQty
	
	
GetPurchaseUOM(pidCompany,pidItem,pidSupplier)
	;-------------------------------------------------------------------------------
	; Get the UOM for an item from a supplier
	;
	; Params:	pidCompany		: The company number (YM)
	; 			pidItem			: The item number
	; 			pidSupplier		: The supplier number
	;
	; ByRefs:
	;
	; Returns: strUnit
	;
	; History:
	; 13-Apr-2006	Steve S		SR14417: Created
	;-------------------------------------------------------------------------------
	new YM,strUnit,objINARTK,objINART
 
	set YM=$get(pidCompany)
	set strUnit=""
	
	if (YM'="")&&($get(pidItem)'="")&&($get(pidSupplier)'="") {
		set objINARTK=$get(^INARTK(YM,pidItem,pidSupplier,1))
		set strUnit=$$$INARTKDeliveryQuantityUnit(objINARTK)
		
		if strUnit="" {
			set objINART=$get(^INART(YM,pidItem,1))
			set strUnit=$$$INARTUnitofMeasure(objINART)
		}
	}
 
	quit strUnit
]]></Routine>
</Export>