<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBankTranShow" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBankTranShow
	#include COMSYS
	#include FINConst
	#include WWWConst
	#include FINSYS
	
	#define	TRAN		1
	#define TRANLINE	2
	#define ACCOUNT		3
	#define	BANKRECON	4
	#define	DATA		5
	#define	TYPE		6
	
#define IsOnInterestCharges(%1,%2)		''$data(^FINGLBankReconLines(YM,1,%1,%2))
#define IsOnPreCleared(%1,%2)			''$data(^FINGLBankReconPreCleareds(YM,3,%1,%2))
#define IsManualMatch(%1,%2)			''$data(^FINGLBankTrans(YM,4,$$$YES,$$$Index(%2),%1))
#define HasUnCleared(%idBank)			''$data(^FINGLBankReconMatcheds(YM,1," ",%idBank))
#define HasCleared(%idBank)				''$data(^FINGLBankReconMatcheds(YM,1,$$$YES,%idBank))
 
#define ApplyFilter(%a,%b) 	" CallBack('ApplyFilter^FINGLBankTranFilter','"_%a_"','"_%b_"');"_$$$ChangeTabs(2)
#define ApplyPCFilter		" CallBack('SetFilter^FINGLBankReconPreCleared');"_$$$ChangeTabs(7)
 
ShowMatchValues(pidBankRecon) 
	/*------------------------------------------------------------------------------
	; Display the Match Values
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 07-Mar-2006	Steve S		SR14126: Link to Pre Clear entries
	; 22-Feb-2006	Steve S		SR14149: Amount/Ref/Date drilldown.	JW: Updated calls
	; 21-Feb-2006	Steve S		SR14110: Show counters/totals		JW: Updated calls
	; 27-Oct-2005	PO			SR13686: Include DR/CR counts for all Match Value types
	; 26-Sep-2005	RPW			SR13304: Added in Manually Matched lines.
	; 16-Sep-2005	RPW			SR13302: Get the total of the unmatched bank lines
	; 13-Sep-2005	RobertW		SR13303: Added in Match Reference and Amount
	;-----------------------------------------------------------------------------*/
	new lstHeader,lstLoop,strOption,strDescription,TransLoop,curDebitTotal,curCreditTotal
	new arrUncleared,arrCleared,strSpecifier,arrLines,strDebits,strCredits
	new intDeposits,intWithdrawals,curDeposits,curWithdrawals,intCR,intDR,curCR,curDR
	new intCRTest,intDRTest
	
	set intDeposits=0
	set intWithdrawals=0
	set curDeposits=0
	set curWithdrawals=0
	
	if ('$$$NoKey(pidBankRecon)) {
		do SumUncleared^FINGLBankTran(pidBankRecon,.arrUncleared)		// Uncleared transactions
		do SumCleared^FINGLBankTran(pidBankRecon,.arrCleared)			// Cleared transactions
 
		set lstHeader=""
		set lstHeader=lstHeader_$listbuild(" ")
		
		if $get(YWHR)="" set YWHR="AUD"
		set strSpecifier=$$$WWWWAESymbol($get(^WWWWAE(0,YWHR,1)))
		
		;SR14110: Debit/Credit => Deposit/Withdrawal
		set strDebits=$$$Text("Fin00975")  ;Deposits
		set strCredits=$$$Text("Fin00976")  ;Withdrawals
		;set strCredits=$$$Text("Fin00901")  ;Credits
		;set strDebits =$$$Text("Fin00900")  ;Debits
		
		set lstHeader=lstHeader_$listbuild("# "_strDebits)  ;Debits
		set lstHeader=lstHeader_$listbuild("#  "_strCredits)  ;Credits
		set lstHeader=lstHeader_$listbuild(strSpecifier_" "_strDebits)  ;Debits
		set lstHeader=lstHeader_$listbuild(strSpecifier_" "_strCredits)  ;Credits
		  
		do Start^COMTable(lstHeader,$$$Text("Fin00974"),1) ;Match Values
		set lstLoop=$listbuild($$$EnumFINGLBANKRECONLOADTYPEAmount,
							   $$$EnumFINGLBANKRECONLOADTYPEAmountandRef,
							   $$$EnumFINGLBANKRECONLOADTYPEAmountandDate,
							   $$$EnumFINGLBANKRECONLOADTYPEAmountDateandRef,
							   "PC","MAN","UBL","UCT","CT") ; SR13303, SR13302
		
		for TransLoop=1:1:$listlength(lstLoop) {
			set strOption=$listget(lstLoop,TransLoop)
			set strDescription=$$$AppEnum("FINGLBANKRECONLOADTYPE",strOption)
			if strOption="UCT" set strDescription=$$$Text("Fin00404")  ;Uncleared Transactions ; SR13302
			if strOption="CT" set strDescription=$$$Text("Fin00895")  ;Cleared Transactions
			if strOption="MAN" {
				set strDescription=$$$Text("Fin00521")  ;Manual
				do SumManualMatch^FINGLBankTran(pidBankRecon,.arrLines)
			}
			
			if strOption="PC" { //SR14126
				set strDescription=$$$Text("Fin01003")  ;Pre Cleared Matches
				do PreClearCount^FINGLBankTran(pidBankRecon,.arrLines)
			}
			
			; SR13302: Get the Unmatched Bank Lines credits and debits.
			if strOption="UBL" {
				set strDescription=$$$Text("Fin00891")  ;Un-matched Bank Lines"
				do SumUnmatchedBankLines^FINGLBankTran(pidBankRecon,.arrLines)
			}
			
			if strOption="UCT" { ;SR14110
				do NewLine^COMTable("darkgray")
				do InsertCell^COMTable($$$UPPER($$$Text("Fin00071")))  ;Total
				do InsertCell^COMTable(intDeposits)
				do InsertCell^COMTable(intWithdrawals)
				do InsertCurrencyCell^COMTable(curDeposits)
				do InsertCurrencyCell^COMTable(curWithdrawals)
				do EndLine^COMTable()
				
				do NewLine^COMTable("darkgray")
				do InsertCell^COMTable("<B>"_$$$Text("Fin00977")_"</B>")  ;GL Transaction Status Summary
				do InsertCell^COMTable("")
				do InsertCell^COMTable("")
				do InsertCell^COMTable("")
				do InsertCell^COMTable("")
				do EndLine^COMTable()
			}
			
			do NewLine^COMTable()
			
			set intCR=0
			set intDR=0
			set curDR=0
			set curCR=0
			
			if (strOption="UCT") { ;SR14110
				if $$$HasUnCleared(pidBankRecon) {
					do InsertCellJS^COMTable(strDescription,$$$ApplyFilter($$$FldFINGLBankReconMatchedCleared,$$$YES))
					//do InsertCellCallback^COMTable(strDescription,"ApplyClearedFilter^FINGLBankTranFilter",pidBankRecon_","_$$$NO)
				} else {
					do InsertCell^COMTable(strDescription)	
				}
				
			} elseif (strOption="CT") { ;SR14110
				if $$$HasCleared(pidBankRecon) {
					
					do InsertCellJS^COMTable(strDescription,$$$ApplyFilter($$$FldFINGLBankReconMatchedCleared,$$$NO))
					//do InsertCellCallback^COMTable(strDescription,"ApplyClearedFilter^FINGLBankTranFilter",pidBankRecon_","_$$$YES)
				} else {
					do InsertCell^COMTable(strDescription)
				}
				
			} elseif ((strOption=$$$EnumFINGLBANKRECONLOADTYPEAmount)||			;SR14149
					 (strOption=$$$EnumFINGLBANKRECONLOADTYPEAmountandRef)||
					 (strOption=$$$EnumFINGLBANKRECONLOADTYPEAmountandDate)||
					 (strOption=$$$EnumFINGLBANKRECONLOADTYPEAmountDateandRef)) {
				do CountByType^FINGLBankTran(strOption,pidBankRecon,.intDRTest,.intCRTest)
				if (intDRTest'=0)||(intCRTest'=0) {
					do InsertCellJS^COMTable(strDescription,$$$ApplyFilter($$$FldFINGLBankReconMatchedMatchType,$case(strOption,0:"00",1:"01",10:"10",11:"11",:"")))
					//do InsertCellCallback^COMTable(strDescription,"ApplyMatchTypeFilter^FINGLBankTranFilter",pidBankRecon_","_$case(strOption,0:"00",1:"01",10:"10",11:"11",:""))
				} else {
					do InsertCell^COMTable(strDescription)
				}
			
			} elseif (strOption="PC") { //SR14126
				if (+$get(arrLines("DR","Count")))||(+$get(arrLines("CR","Count"))) {
					do InsertCellJS^COMTable(strDescription,$$$ApplyPCFilter)
				} else {
					do InsertCell^COMTable(strDescription)
				}
			} else {
				//do InsertCell^COMTable(strDescription,YFORM,pidBankRecon,strOption)
				do InsertCellJS^COMTable(strDescription,$$$ChangeTabs($case(strOption,"UBL":4,:8)))
			}
			
			if (strOption="MAN")||(strOption="UBL")||(strOption="PC") {
				set intDR=$get(arrLines("DR","Count"))
				set intCR=$get(arrLines("CR","Count"))
				do InsertCell^COMTable(intDR)
				do InsertCell^COMTable(intCR)
			} elseif strOption="UCT" {
				set intDR=$get(arrUncleared("DR","Count"))
				set intCR=$get(arrUncleared("CR","Count"))
				do InsertCell^COMTable(intDR)
				do InsertCell^COMTable(intCR)
			} elseif strOption="CT" {
				set intDR=$get(arrCleared("DR","Count"))
				set intCR=$get(arrCleared("CR","Count"))
				do InsertCell^COMTable(intDR)
				do InsertCell^COMTable(intCR)
			} else {
				do CountByType^FINGLBankTran(strOption,pidBankRecon,.intDR,.intCR)
				;set intDR=$get(^CacheTempMatched(YUSER,strOption,"DR","MatchCount"))
				;set intCR=$get(^CacheTempMatched(YUSER,strOption,"CR","MatchCount"))
				do InsertCell^COMTable(intDR)
				do InsertCell^COMTable(intCR)
			}
			
			set intWithdrawals=intWithdrawals+intCR
			set intDeposits=intDeposits+intDR
			
			; SR13302: If we are the unmatched bank lines, 
			; get the data from the local variables instead of the global
			
			if (strOption="UBL")||(strOption="MAN")||(strOption="PC") {
				set curDR=$get(arrLines("DR","Total"))
				set curCR=$get(arrLines("CR","Total"))
				do InsertCurrencyCell^COMTable(curDR)
				do InsertCurrencyCell^COMTable(curCR)
			} elseif strOption="UCT" {
				set curDR=$get(arrUncleared("DR","Total"))
				set curCR=$get(arrUncleared("CR","Total"))
				do InsertCurrencyCell^COMTable(curDR)
				do InsertCurrencyCell^COMTable(curCR)
			} elseif strOption="CT" {
				set curDR=$get(arrCleared("DR","Total"))
				set curCR=$get(arrCleared("CR","Total"))
				do InsertCurrencyCell^COMTable(curDR)
				do InsertCurrencyCell^COMTable(curCR)
			} else {
				do AmountByType^FINGLBankTran(strOption,pidBankRecon,.curDR,.curCR)
				;set curDR=+$get(^CacheTempMatched(YUSER,strOption,"DR","Amount"))
				;set curCR=+$get(^CacheTempMatched(YUSER,strOption,"CR","Amount"))
				do InsertCurrencyCell^COMTable(curDR)
				do InsertCurrencyCell^COMTable(curCR)
			}
			
			set curDeposits=curDeposits+curDR
			set curWithdrawals=curWithdrawals+curCR
			
			do EndLine^COMTable()
		}
		
		do Stop^COMTable()
	}
 
	quit
			
ShowMatchValueTransactions(pidBankRecon,pstrYPARA) 
	/*------------------------------------------------------------------------------
	; Determine which grid to show when a match type is clicked.
	; UBL = Exceptions
	; MAN = Manually Matched Transactions
	; Rest = Show the transactions for this account type.
	;
	; Params:
	; pidBankRecon: The id of the bank reconciliation object
	; pstrYPARA   : This holds the type of transaction grid to show
	;
	; Returns:
	;
	; History:
	; 22-Sep-2005	RobertW		SR13304: Created
	;-----------------------------------------------------------------------------*/
	new strType,strDescription
	
	quit:($get(pidBankRecon)="")||($get(pstrYPARA)="")
 	
	set strType=pstrYPARA
	set strDescription=""
	
	if strType'="" {
		if strType="UBL" {
			do ShowExceptions(pidBankRecon,$$$YES)
		} elseif strType="MAN" {
			do ShowManual(pidBankRecon)
		}
		/* else {
			set strDescription=$$$AppEnum("FINGLBANKRECONLOADTYPE",strType)
			if strDescription="" set strDescription=strType
			
			do ShowTransactionsForAccount(pidBankRecon,strType,strDescription)
		}*/
	}
 
	quit
		
ShowExceptions(pidBankRecon,pstrYPARA)
	/*------------------------------------------------------------------------------
	; Show a table of the current outstanding exceptions.
	; This shouldn't be large (hopefully).
	; If a particular exception is selected,, shows a list of
	; possible GLTran lines that it could be associated with.
	; 
	;
	; History:
	; 27-Feb-2006	Steve S	SR14126: Don't show matched bank lines
	; 27-Sep-2005	JW		SR13304: Show charge/interest and precleared
	; 26-Sep-2005	RPW		SR13304: Always show all the lines and fixed language text.
	; 14-Sep-2005	RPW		SR1300*: How about making it currency formatted?
	; 22-Oct-2004	Paul K	Created
	;-----------------------------------------------------------------------------*/
	new lstHeader,objBankRecon,idBankAccount,idTran,objTran
	new curDebitTotal,curCreditTotal,blnShowAll,blnLocked
	
	if '$$$NoKey(pidBankRecon) {
		set objBankRecon=$get(^FINGLBankRecon(YM,pidBankRecon,1))
		set blnLocked=$$$ISERR($$Editable^FINSYSReview("FINGLBankRecon",$$$FINGLBankReconStatus($get(^FINGLBankRecon(YM,pidBankRecon,1)))))
		set idBankAccount=$$$FINGLBankReconBankAccount(objBankRecon)
		set lstHeader=""
		
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranLine)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranDebitAmount)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranCreditAmount)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranTransactionDate)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranReference)
		set lstHeader=lstHeader_$listbuild($$$Text("Fin00894"))  ;Pre Cleared
		set lstHeader=lstHeader_$listbuild($$$Text("Fin00150"))  ;Charges/Interest
		set lstHeader=lstHeader_$listbuild($$$Text("Fin00899")) ; Manual Match
		
		do Start^COMTable(lstHeader,$$$Text("Fin00403"),$$$YES)  ;Bank Transaction Lines.
		if idBankAccount'="" {
			set idTran=""
			for {
				set idTran=$order(^FINGLBankTran(YM,idBankAccount,idTran))
				quit:(idTran="")
				
				set objTran=$get(^FINGLBankTran(YM,idBankAccount,idTran,1))
				if '$$$FINGLBankTranMatched(objTran) { //SR14126
				;if '$$$FINGLBankTranMatched(objTran) || '$$$IsOnPreCleared(idTran,pidBankRecon) || '$$$IsOnInterestCharges(idTran,pidBankRecon) {	// JW
					do NewLine^COMTable()
					do InsertCell^COMTable(idTran)
					do InsertCurrencyCell^COMTable($$$FINGLBankTranDebitAmount(objTran))
					do InsertCurrencyCell^COMTable($$$FINGLBankTranCreditAmount(objTran))
					do InsertCellDate^COMTable($$$FINGLBankTranTransactionDate(objTran))
					do InsertCell^COMTable($$$FINGLBankTranReference(objTran))
					do InsertCellRadioButton^COMTable(idBankAccount_"|"_idTran_"|"_pidBankRecon,"AddToPreCleared^FINGLBankTran",$$$IsOnPreCleared(idTran,pidBankRecon),blnLocked,idTran)
					do InsertCellRadioButton^COMTable(idBankAccount_"|"_idTran_"|"_pidBankRecon,"AddToChargeInterest^FINGLBankTran",$$$IsOnInterestCharges(idTran,pidBankRecon),blnLocked,idTran)
					do InsertCellRadioButton^COMTable(idBankAccount_"|"_idTran_"|"_pidBankRecon,"ManualMatch^FINGLBankTran",$$$IsManualMatch(idTran,idBankAccount),blnLocked,idTran)
				}
			}
			
			if (idTran'="") {
				do NewLine^COMTable()
				do InsertCell^COMTable($$$Text("Fin00402"),"FINGLBankRecon",pidBankRecon,1_","_$piece(pstrYPARA,",",2),"","",5)  ;Truncated. Click to See All.
			}
		}
			
		do Stop^COMTable()
	}
	
	quit
	
ShowManual(pidBankRecon)
	/*------------------------------------------------------------------------------
	; Show a table of the manually matched bank lines.
	;
	; Params:	pidBankRecon: The id of the bank reconciliation record
	;
	; Returns:
	;
	; History:
	; 26-Sep-2005	RobertW		SR13304: Created
	;-----------------------------------------------------------------------------*/
	new intCount,intMax,lstHeader,objBankRecon,idBankAccount,idTran,objTran
	new curDebitTotal,curCreditTotal,blnLocked,idxBankAccount,YBACK
	
	if pidBankRecon'="" {
		set objBankRecon=$get(^FINGLBankRecon(YM,pidBankRecon,1))
		set blnLocked=$$$ISERR($$Editable^FINSYSReview("FINGLBankRecon",$$$FINGLBankReconStatus($get(^FINGLBankRecon(YM,pidBankRecon,1)))))
		set idBankAccount=$$$FINGLBankReconBankAccount(objBankRecon)
		
		set lstHeader=			$listbuild($$$StrFINGLBankTranLine)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranDebitAmount)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranCreditAmount)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranTransactionDate)
		set lstHeader=lstHeader_$listbuild($$$StrFINGLBankTranReference)
		set lstHeader=lstHeader_$listbuild($$$Text("Fin00899"))  	;Manual Match
		
		do Start^COMTable(lstHeader,$$$Text("Fin00403"),1)  ;Bank Transaction Lines.
		if idBankAccount'="" {
			set idTran=""
			for {
				set idTran=$order(^FINGLBankTrans(YM,4,$$$YES,idBankAccount,idTran))
				quit:idTran=""
 
				set objTran=$get(^FINGLBankTran(YM,idBankAccount,idTran,1))
				do NewLine^COMTable()
				do InsertCell^COMTable(idTran)
				do InsertCurrencyCell^COMTable($$$FINGLBankTranDebitAmount(objTran))
				do InsertCurrencyCell^COMTable($$$FINGLBankTranCreditAmount(objTran))
				do InsertCellDate^COMTable($$$FINGLBankTranTransactionDate(objTran))
				do InsertCell^COMTable($$$FINGLBankTranReference(objTran))
				do InsertCell^COMTable("Manual Match",YFORM,pidBankRecon,idBankAccount_$$$COMMA_idTran,,4)
			}
			
		}
			
		do Stop^COMTable()
	}
	quit
]]></Routine>
</Export>