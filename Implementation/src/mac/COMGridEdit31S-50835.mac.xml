<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31S" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include WWWConst
#include COMGridEdit31
	
#def1arg WWWDATEN(%args) ^WWWDATEN(0,+$horolog,YUSER,YFORM,"V",%args)
	
#define LogR(%1,%2) 	;
#define LogR2(%1,%2) 	;
#define LogR3(%1,%2) 	;
#define LogR4(%1,%2) 	;
#define LogRx(%1)		;
#define LogR2x(%1)		;
#define LogR3x(%1)		;
#define LogR4x(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGES("_%2_") : "_$zh $$$JournalOn
#;define LogR2(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGES("_%2_") : "_$zh $$$JournalOn
#;define LogR3(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGES("_%2_") : "_$zh $$$JournalOn
#;define LogR4(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGES("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogR2x(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogR3x(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogR4x(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
COMGridEdit31S(YINHALT,params="",pblnChanged=$$$YES)
	;-------------------------------------------------------------------------------
	; IP Code to write the JS of the grid
	; 
	; Called By : DeleteAll^COMGridEdit31S
	;             js function saveData() [COMGridEdit31J5 => griden1.js]
	; 
	; Returns:
	;
	; History:
	; 14-Jun-2012	shobby	SR18033: On the click event recheck the status of buttons which
	;							are marked as 'Dynamic'.  Enables/Disables.
	; 25-Jun-2012	GRF		SR18012: Base "REFRESH" on idDataLine rather than idGridRow
	;							[Doesn't include changes for SR18033, SR18032,
	;							SR18016, SR18004, SR17724]
	; 05-Jun-2012	shobby	SR18032: Don't lose the value if we have an editable manual field.
	; 24-May-2012	shobby	SR18016: Callouts to ChangeRow*
	; 26-Apr-2012	shobby	SR18004: Inactivating field may cause row height to resize.
	; 27-Feb-2012	shobby	SR17724: If first column of new line is readonly then
	;							move to the next line.
	; 17-Jan-2011	GRF		SR17579: YFELD needs to be set prior to calling PARA (is
	;							already reset after rounding process)
	; 16-Sep-2010	GRF		SR17547: Remove extra quit & reinstated SR16399 change
	; 14-Oct-2009	shobby	SR16894: Use JSESC function to handle characters such as | and ~.
	; 09-Oct-2009	shobby	SR16933: Reverted yesterdays change.
	; 22-Sep-2009	shobby	SR16894: Changed the encoding of the text passed to
	; 							inactivateField as it sets the value with innerHTML.
	; 10-Sep-2009	PPP		SR16886: Dynamically change the Format of the Primary
	; 							Key Cell
	; 09-Aug-2009	GRF		SR16787: Clear "REFRESH"
	; 06-May-2009	PPP		SR16521: Barcode Scanning to identify Item, 
	; 							check if YINHALT has changed onBlur
	; 28-Nov-2007	shobby	SRBR014826: When adding a new line, pass true for the
	; 							pblnInsert flag.
	; 02-Jul-2007	GRF		SRBR014567: Dot level cleanup for readability
	; 29-Jun-2007	shobby	SRBR014567: Change so that grid can handle 'European'
	; 							number formats ie 1.000,23 (Based on SysSetup flag)
	; 06-Mar-2007	PO		SR15466: Pass YDAT by reference
	; 17-Aug-2006	JW		SR14826: Run UpdateContainer.
	; 27-Jun-2006 	JW		SR13755: Check change in currency fields if now null
	; 26-Jun-2006	JW		SR12775: Encapsulate SetFocusField and always call.
	; 							Remove validation - now in OnBeforeFormat.
	; 							InactivateField params changed. Change YLFDAT param
	; 							to params.
	; 02-Mar-2006	JW		SR13305: Removed call to OnAfterDelete and added pstrYKEY
	;  							parameter to OnLineDeleted
	; 16-Feb-2006	RPW		SR14135: If the row is -1, then do not check the
	;     						onbeforedelete.  Allow locked rows to stay locked
	;     						when delete fails
	; 06-Feb-2006	RPW		SR14093: Added pblnChanged so that we can say that all
	; 							changes should not happen.
	; 19-Dec-2005	RPW		SR14056: Due to the way the grid works, currencies are
	; 							already changed and updated before here, so we can
	; 							not check for changed against WWWDATEN.  The simple
	; 							answer is to not do them at all.
	; 							Issue 12.667 effectively = 12.67 so the blur code
	; 							is not called.
	; 09-Dec-2005	JW		SR13195: Only call madechange, if have made change
	; 28-Oct-2005	JW		SR13074: Exchange Rate type
	; 19-Oct-2005	JW		SR11573: Paging: Killing lines.
	; 12-Oct-2005	JW		SR13670: OnBeforeDelete.
	; 01-Sep-2005	PO/RPW	SR12965: Use EDITGRIDROWCOUNT macro & use DLDPStorage
	; 							for rounding stored values
	; 29-Mar-2005	shobby	DeleteRow now requires a cell reference rather than a
	; 							line reference.
	; 21-Mar-2005	PO		SR11349: FC support
	; 21-Jan-2005	RPW		SR10061: Added callback to get information before
	; 							calling inactivate on the cell.
	; 13-Jan-2005	JW		Added new cge functions
	; 16-Dec-2004	JW		SR11268: Added saving fix.
	; 07-Dec-2004	JW		SR11144: Changed the way the 1st column is found for
	;  							focusing.  Uses ^WWWSOR(YUSER,"COLUMNORDER") instead
	;  							of WWWDATEN
	; 29-Nov-2004	RPW		Modified to allow the New button to call the SAVENEWLINE
	; 							and Update routines automatically. (SR10468)
	;-------------------------------------------------------------------------------
	new YDATEI,YKEY,YDATEI1,YLFN,YOK,YERR,YRETVAL,YFIELDNAME,YHTML,YTEXT,YINHALT1
	new idCell,intRow,GKEY,GDATA,GOBJECT,YFELD,YROW,YNEW,YOLD,YYFELD,YBBN,YYLFDAT,YKILL
	new oldYINHALT

	set YRETVAL = ""
	set YERR    = 0
	
	$$$LogR("COMGridEdit31S",YINHALT_"<"_$get(params))

	; Create new data record
	;---------------------------- 
	; 16933 vvvvv SR17547
	if YINHALT="CREATE" {
		do AddLine^COMGridEdit31Add(,,,,,,,$$$YES)
		write "if (document.getElementById(getFocusField()).Locked) {moveFocus(39);}" ;SR17724.17
		quit YRETVAL                                       ; EARLY EXIT
	}
	; 16933 ^^^^
	if $piece(params,$$$SEMICOLON,3)'="" {
		new YFORM
		set YFORM = $piece(params,$$$SEMICOLON,3)
	}
	set intRow = $piece(params,$$$SEMICOLON,2)
	set YLFDAT = $piece(params,$$$SEMICOLON,1)
	
	if YINHALT="CHANGEROW" quit $$CHANGEROW(params) ;SR18016 ; EARLY EXIT
	
	$$$SetFocusField(YLFDAT)
	quit:YINHALT="SETFOCUSFIELD" YRETVAL                   ; EARLY EXIT
	
	if YINHALT="CLICK" {
		set YRETVAL = $$OnClick(params) 
		do CheckButtons ;SR18033
		quit YRETVAL  ; EARLY EXIT
	}	
	
	;ÄNDERUNGEN SPEICHERN - Save Changes
	;--------------------
	new strStatus
	
	set strStatus = $$$OK
	if YLFDAT'="" do
	. set YDATEI = $$$GRIDClass(YFORM)
	. if YDATEI=""        set YERR = 1 quit
	. set YROW = $extract($piece(YLFDAT,"_",1),2,999)           ; idGridRow    "2x01"
	. if +YROW=0          set YERR = 1 quit
	. set YKEY = $$GetYKEY^COMGridEdit31G(YROW,YFORM)           ; strDataKeys  "REC0123",2.01
	. if YKEY=""          set YERR = 1 quit
	. if $find(YKEY,",,") set YERR = 1 quit
	. set YBBN = $piece(YLFDAT,"_",2)
	. if +YBBN=0          set YERR = 1 quit
	. ;
	. new YTXT,YLFN,YTYP,REL,PARA,RELF,SUCH,YFIELDNAME,YLENGTH,YWIDTH,YCOLON,YCOLOFF,YVALIGN,YPADDING,YHEIGHT,YFONT,YFONTSIZE,YFOCUS
	. set YFIELDNAME = YLFDAT
	. set YFELD = $$GetYFELD^COMGridEdit31G(YFORM,YROW)         ; objClass           ; SR17579 17-Jan-2010
	. $$$LogRx("YFELD:1>"_YFELD_"<")
	. ;
	. do PARA^COMGridEdit31Body("D",YBBN,.YWIDTH,.YVALIGN,.YHEIGHT,.YFONT,.YFONTSIZE,.YTYP,.YFORM,.YLFN,.YTXT,.YDAT)
	. if +YLFN=0          set YERR=1 quit
	. ;
	. set YKILL = 0
	. if YINHALT="KILL"              set YKILL = 1
	. if $$$KilledRecord(YROW,YFORM) set YKILL = 2  ; BEREITS GELÖSCHT  /  Already Cleared
	. ;
	. set YINHALT = $get($$$WWWDATEN(YLFDAT,1))
	. ;
	. ; Round floating and Currency types
	. if (YTYP=8) || (YTYP=12) || (YTYP=18) do
	. .; FIXME : <GRF> This should ALWAYS be in internal format but conversion of
	. .;               "USD123.45" or "USD123.45@.75" type data does not seem to
	. .;               be happening elsewhere.
	. . $$$LogRx("Pre RoundNumber:1:")
	. . set YINHALT = $$RoundNumber(YLFDAT,YINHALT,YTYP,DLDPStorage)
	. . set $$$WWWDATEN(YLFDAT,1) = YINHALT
	. ;
	. set YFELD = $$GetYFELD^COMGridEdit31G(YFORM,YROW)         ; objClass  ; FIXME: Remove now? Can it have changed?
	. $$$LogRx("YFELD:2>"_YFELD_"<")
	. ;
	. ; 01-Feb-2005 JW - Don't delete globals - wait for main save.
	. if YKILL=1 do  ;LÖSCHEN
	. . set YTEXT=""
	. . set Q = 0
	. . if intRow'=-1 do
	. . . set strStatus = $$OnBeforeDelete^COMGridEdit31Events(YFORM,YKEY,YFELD)
	. . if $$$ISERR(strStatus) do  quit
	. . . set YKILL = 0
	. . ;
	. . do KILLEDRECORDSet^COMGridEdit31Globals(YFORM,YROW)
	. .;do ClearRefresh^COMGridEditRefresh(YROW)                    ; SR16787
	. . do ClearRefresh(YROW)                                       ; SR18012
	. . do OnLineDeleted^COMGridEdit31Events(YFORM,YKEY,$increment($$$GRIDRowCount,-1))
	. . do UpdateContainer^COMGridEdit31G()
	. quit:$$$ISERR(strStatus)
	. ;
	. new blnChanged
	. ;
	. set blnChanged = $$$YES
	. ;shobby Rob ignore some of the events if value has not changed.
	. if YKILL=0 do
	. . set YTEXT = $$WWWTR(0,YTYP,YINHALT,DLDP)  ; DP wrapper  => Literal format
	. . if YTYP=2 set YTEXT=+YTEXT
	. . if (YTYP=8) && (YINHALT'="") quit         ; skip Currency if not blank
	. . set blnChanged = ($get($$$WWWDATEN("REFERENCEVALUE",YLFDAT,1))'=YTEXT)
	. ;
	. set blnChanged = (blnChanged && pblnChanged)     ; Take into account whether the grid has changed
	. if blnChanged do
	. . do CallBacks(YBBN)
	. . do ClearFields(YDATEI,YBBN,YLFDAT,YINHALT,YTYP)
	. . do MadeChange()
	. ;
	. if YKILL=0 do                         ;SPEICHERN / Save   [YINHALT/$p(YFELD,Y,YLFN) Internal => YTEXT Literal format]
	. . if blnChanged do
	. . . set oldYINHALT=YINHALT
	. . . do OnBlur^COMGridEdit31Events(YLFDAT,YKEY,.YFELD) 
	. . . ;SR18032 if ($piece(YFELD,Y,YLFN)'=YINHALT) || (oldYINHALT'=YINHALT) set YTEXT=$$WWWTR(0,YTYP,$piece(YFELD,Y,YLFN),DLDP)  ; DP wrapper
	. . . ;SR18032 vvvvv
	. . . if ($piece(YFELD,Y,YLFN)'=YINHALT) || (oldYINHALT'=YINHALT) do
	. . . . if $$$WWW122SequenceNumber(YTXT)'="" do
	. . . . . set YTEXT=$$WWWTR(0,YTYP,$piece(YFELD,Y,YLFN),DLDP)  ; DP wrapper
	. . . . if $$$WWW122SequenceNumber(YTXT)="" do
	. . . . . ; For manual fields
	. . . . . set YTEXT=$$WWWTR(0,YTYP,YINHALT,DLDP)  ; DP wrapper
	. . . ;SR18032 ^^^^^
	. . . set $$$WWWDATEN("REFERENCEVALUE",YLFDAT,1)=YTEXT  ;SPEICHERN ANZEIGEFORMAT
	. ;
	. $$$LogRx("YFELD:3>"_YFELD_"<")
	. ;
	. if YKILL=2 set YTEXT="######"         ;BEREITS GELÖSCHT  /  Already Cleared
	. ;
	. set YFIELDNAME = YLFDAT
	. set YHTML      = $$TEXT^COMGridEdit31F(,YFIELDNAME,.YTXT,.PARA,REL,YTEXT,YTYP)
	. ;
	. if YHTML'="" do
	. .;SET YHTML = $$ESC^WWWENCODE(YHTML)          ; SR16894
	. .;SET YHTML = $zconvert(YHTML,"O","JS")       ; SR16894
	. . set YHTML = $$JSESC^WWWENCODE(YHTML)
	. . set YRETVAL=YRETVAL_"#FUNCTION~inactivateField("""_YLFDAT_""","""_YHTML_""","""_YFORM_"""); syncGridSize();" ;SR17630 ;SR18004
	. . if YKILL=1 set YRETVAL = YRETVAL_$$KillLine(YFORM,YROW)
	. . set ^WWWDATEN(0,+$horolog,YUSER,"RECORDEXISTS",$get(^CacheTemp(YUSER,"Grid","Container")),1) = 0
	. ;
	. do UpdatePrimaryKeyFormat(YROW,YFELD)
	if YERR'=0 set YRETVAL="!"_$$^WWWTEXT(391,,1)_" "_$$^WWWTEXT(32292,,1)    ; "Not Saved!"   "Check Please!"
	quit YRETVAL

CheckButtons()
	new idButton,objWWW124,YLFN,YA
	
	set YLFN="" for { set YLFN=$order(^WWW124(0,YFORM,SPRACHE,YLFN)) quit:YLFN=""
		set objWWW124=$get(^WWW124(0,YFORM,SPRACHE,YLFN,1))
		if $$$WWW124Dynamic(objWWW124) {
			do CheckButton(objWWW124,YLFN)
		}
	}
	quit

CheckButton(YA,YLFN)
	;-------------------------------------------------------------------------------
	; Dynamic updates a buttons state enabled/disabled.
	;
	; NOTE:	Don't mess with the variable names here, the button code has some global variables
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 12-Jun-2012	shobby		SR18033: Created
	;-------------------------------------------------------------------------------
	new YQ,YKEY,HTML,blnButtons,YFOART,YVOR,Q,YVOR
	
	set YVOR=$get(^WWW120(0,YFORM,1))
	set YFOART = $$$WWW120FormType(YVOR)
	set $$$WWW120PicturesAsButtons(YVOR)=1
	set YQ=0
	set blnButtons=1

	set YKEY= $$GetYKEY^COMGridEdit31G()

	set HTML=$$Button^WWWFORMC2012(YA,YBACK,"","","","",YFORM,SPRACHE,YLFN,$$$NO)

	set HTML=$$$JSText(HTML)
	write "var obj=document.getElementById('Y"_YFORM_"D"_YLFN_"CONTAINER');"
	write "if (obj.innerHTML!='"_HTML_"') {"
	write "  obj.innerHTML='"_HTML_"';"
	write "}"
	quit	
	
CHANGEROW(params)
	;-------------------------------------------------------------------------------
	; If configured (LinkedTo) then call out to update header from grid.  Later this
	; could call to user code as well.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 26-Jun-2012	SCR			SR17993: Added on row change hook
	; 21-Jun-2012	shobby		SR18026: Created
	;-------------------------------------------------------------------------------
	new YRETVAL,YROW,YBBN,YFOCUSFIELD
	
	set YRETVAL=""
	set YROW=$piece(params,Y,1)
	set YFOCUSFIELD=$piece($piece(params,Y,2),"td",2)
	set YBBN=$piece(YFOCUSFIELD,"_",2)
	set $$$WWWDATEN("FOCUSFIELD")=YFOCUSFIELD
	do ExecuteHook^WWW001Hook($$$GetClass(YFORM),$$$EnumWWWEVENTTYPEOnAfterRowChange,.YKEY,.YFELD,YFORM)   ; SR17993
	do UpdateHeader^COMGridEdit31Links(YFORM,YROW) ;SR18026
	quit YRETVAL
	
	
ClearRefresh(pidGridRow)
	;-------------------------------------------------------------------------------
	; Wrapper to call with idDataLine
	; 
	; History:
	; 02-Jul-2012	GRF		SR18012/SR18052: Use YFORM rather than hardcoded form name
	; 01-Jul-2012	GRF		SR18012: Add null variable check
	; 25-Jun-2012	GRF		SR18012: Base "REFRESH" on idDataLine rather than idGridRow
	;-------------------------------------------------------------------------------
	;do ClearRefresh^COMGridEditRefresh(pidGridRow) quit       ; SR18012 - effect of prior code
	new idDataLine,strKey
	
	set strKey  = $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","REFERENCEKEY",pidGridRow,1))  ; SR18052
	set strKey  = $translate(strKey,$$$DBLQUOTE)
	set idDataLine = $piece(strKey,$$$COMMA,$length(strKey,$$$COMMA))
	if idDataLine'="" do ClearRefresh^COMGridEditRefresh(idDataLine)    ; SR18012
	quit
	
	
UpdatePrimaryKeyFormat(YROW,YFELD)
	;-------------------------------------------------------------------------------
	; Update the Format for the Primary Key Cell if needed
	;
	; Inputs:YROW,YFELD
	;
	; Returns:none
	;
	; History:
	; 10-Sep-2009	PPP		SR16886: Created
	;-------------------------------------------------------------------------------
	new blnUpdate
	
	set blnUpdate        = $$$NO
	set YTOOLTIP         = ""
	set YBACKGROUNDCOLOR = "silver" ; FIXME
	
	if $get(YFONTCOLOR)="" {
		set YFONTCOLOR = $$$SysEnum("FARBE",$$$WWW012FontColor($get(^WWW012(0,0,1))))
	}
	
	do UpdatePrimaryKeyFormat^COMGridEdit31Events(YFORM,YROW,YFELD,.blnUpdate)  ; NOTE : could delete blnUpdate
	if $get(blnUpdate) {
		do UpdateStyle^COMGridEdit31Interface("tdGridRow"_YROW,YFONTCOLOR_Y_YBACKGROUNDCOLOR_Y_$zconvert(YTOOLTIP,"o","JS")_Y_0)
	}
	quit	
	
	
MadeChange()
	;-------------------------------------------------------------------------------
	; Change the status msg to "Save Changes" if not already
	;
	; Returns:
	;
	; History:
	;  9-Dec-2005	JW		SR13195: Call generic update status routine
	; 20-Oct-2005	JW		SR11573: Created
	;-------------------------------------------------------------------------------
	new oldStatus,newStatus
 	
 	set newStatus = 2		// Save Changes
	set oldStatus = $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","STATUS",1))
	
	if oldStatus'=newStatus {
	 	set ^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","STATUS",1) = newStatus
	 	do UpdateStatus^WWWFORMStatus($get(^CacheTemp(YUSER,"Grid","Container")),newStatus)
	}
		 
	quit ""
	
	
KillLine(YFORM,YROW) 
	;-------------------------------------------------------------------------------
	; Kill a line and display another / move pages if necessary
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 13-Oct-2005	JW		SR11573: Created
	;-------------------------------------------------------------------------------
	new numPagesNew,thisPage,strRetval,strFocus,blnContinue
	
	set strRetval = " deleteRow("""_YLFDAT_"""); "
	
	if YFORM = $$$GRIDName {
		kill $$$WWWDATEN("DISPLAYED",$$$GRIDIdx(YROW))
		set $$$WWWDATEN("DISPLAYED") = $get($$$WWWDATEN("DISPLAYED"))-1
 		
		set numPagesNew = $$$GRIDNumPages
		set thisPage    = $$$GRIDPage
 		
		set blnContinue = (thisPage'>numPagesNew)
		if 'blnContinue set thisPage = numPagesNew
		
		set strFocus  = $select(blnContinue:"",1:"B")
		set strRetval = strRetval_$$$GRIDGoToPage(thisPage,numPagesNew,strFocus,blnContinue)
	}
	quit strRetval
	
	
RoundNumber(pYLFDAT,pYINHALT,pYTYP,pDLDP)
	;-------------------------------------------------------------------------------
	; Round numbers, because it's not done in WWWEVENT.
	; 
	; Returns: rounded number
	;
	; History:
	; 20-Jun-2006	JW		SR14748: Added +. Don't store trailing zeroes.
	; 08-May-2006	JW		SR14508: If null, quit with null
	; 21-Mar-2005	JW		Use fnumber not justify
	; 04-Mar-2005	JW		Created
	;-------------------------------------------------------------------------------
	new edittedVal
	
	$$$LogR("RoundNumber",pYINHALT_"<"_pYTYP_"<"_$get(pDLDP))
	quit:pYINHALT="" ""
	
	set edittedVal = +$fnumber($get(pYINHALT),"",+$get(pDLDP))
	
	// Add other pieces of FC
	if (pYTYP=8) && ($length(pYINHALT,"@")=3) {
		set $piece(edittedVal,"@",2) = $piece(pYINHALT,"@",2,3)
	}
	$$$LogRx(edittedVal)
	quit edittedVal
	
	
ClearFields(pYDATEI,pYBBN,pYLFDAT,pYINHALT,pYTYP=0)
	;-------------------------------------------------------------------------------
	; Clears data from a field that is bound to a changed field in another column.
	; When one is changed the other is cleared.
	;
	; Returns:
	;
	; History:
	; 05-Jul-2007	shobby	SRBR014553: Use standard routine to access WWW122
	; 28-Oct-2005	JW		SR13074: Exchange Rate type
	; 08-Jun-2005	PO		SR:12523 Now using PerformClear
	; 28-Feb-2005	JW		firstChild should be cleared, not the TD.
	; 23-Feb-2005	JW		But need to check for non-numeric type! (Added pYTYP)
	; 09-Dec-2004	PO		Clear field if zero value entered
	; 18-Nov-2004	Shobby	Created (10468)
	;-------------------------------------------------------------------------------
	new intFieldToChange,strKey,YLFN
	
	set intFieldToChange = $get(^CacheTemp(YUSER,"Grid","Clear",pYBBN))
	if intFieldToChange'="" {
		; numeric with value of zero or else a null
		if ( ((pYTYP=4) || (pYTYP=8) || (pYTYP=12) || (YTYP=18)) && (+$get(pYINHALT)=0) )
			|| ($get(pYINHALT)="") {
			
			set strKey  = pYLFDAT
			set YLFN    = pYBBN
			set YINHALT = "" ; This is here to fix problem as other code not using above method
			
		} else {
			set strKey  = $piece(pYLFDAT,"_",1)_"_"_intFieldToChange ;id will not necessarily match line index.
			set YLFN    = $$$WWW122SequenceNumber($$Get^WWW122(YFORM,+intFieldToChange)) ; FIXME : Field used is not customisable - faster to have direct get
		}
		do PerformClear(strKey,YLFN)
	}
	quit
	
	
PerformClear(pstrKey,pYLFN)
	;-------------------------------------------------------------------------------
	; Clear a particular field in the grid
	;
	; Returns: Nothing
	;
	; History:
	; 08-Jun-2005	PO		Created SR:12523 - Moved from ClearFields
	;-------------------------------------------------------------------------------
	set $$$WWWDATEN(pstrKey,1)=""
	set $$$WWWDATEN("REFERENCEVALUE",pstrKey,1)=""
	set $piece(YFELD,Y,pYLFN)=""
	write "td"_pstrKey_".firstChild.innerHTML = '&nbsp;';"  ;%TXT(1)/YRETVAL process won't work here.
	
	quit
	
	
AllCallBacks()
	;-------------------------------------------------------------------------------
	; Call all of the callbacks that may apply to the current grid.
	; Currently used on grid startup.
	;
	; Returns: nil
	;
	; History:
	; 17-Feb-2005	JW		Removed script as have moved call to this function.
	; 10-Dec-2004	JW		SR11004: Created
	;-------------------------------------------------------------------------------
	new column
	
	if $data(^CacheTemp(YUSER,"Grid","CallBack")) {
		set column = ""
		for {
			set column = $order(^CacheTemp(YUSER,"Grid","CallBack",column))
			quit:column=""
			
			do CallBacks(column)
		}
	}
	quit
	
	
CallBacks(pYBBN)
	;-------------------------------------------------------------------------------
	; Calls out to the displayed form to update multiple fields based on one change.
	; 
	; Returns: nil
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid* rather than objGrid*
	; 27-Jan-2009	GRF		SR16281: no single char variables (=>loopi)
	; 19-Oct-2005	JW		SR11573: Only update screen for displayed lines
	; 18-Feb-2005	JW		Removed params - I think this function should really be zoned out!!
	; 14-Dec-2004	JW		Current line update is now done with OnBlur. This function
	; 						updates every line of the grid.
	; 10-Dec-2004	JW		SR11004: Allow update of all lines, not just current.
	; 18-Nov-2004	Shobby	SR10468: Created
	;-------------------------------------------------------------------------------
	new arrGrid,arrGridOld,loopi,strRoutine,strKey,YLFN,strYFELDOld,YKEY
	new indirectYFELD,indirectYFELDOld,strField,strYFELD,strYKEY
	
	set strRoutine = $get(^CacheTemp(YUSER,"Grid","CallBack",pYBBN))
	
	if strRoutine'="" {
	  	set YKEY = $$GetYKEY^COMGridEdit31G()
	  	
		set strRoutine="do "_strRoutine
		do GetGridContents^COMGridEdit31G(.arrGrid)
		merge arrGridOld = arrGrid
		
		xecute strRoutine                   ; *** EXECUTE ***  Wrapper for other executable calls
			
		set strKey = ""
		for {
			set strKey = $order($$$WWWDATEN("REFERENCEKEY",strKey))
			quit:strKey=""
			
			set strYKEY = $get($$$WWWDATEN("REFERENCEKEY",strKey,1))
			
			set indirectYFELD    = "arrGrid("_strYKEY_")"
			set indirectYFELDOld = "arrGridOld("_strYKEY_")"
			
			set strYFELD    = $get(@indirectYFELD)
			set strYFELDOld = $get(@indirectYFELDOld)
			
			if strYFELD'=strYFELDOld {
				for loopi=1:1:$length(strYFELD) {
					if $piece(strYFELD,Y,loopi)'=$piece(strYFELDOld,Y,loopi) {
						set strField = "Y"_strKey_"_"_loopi
						set $$$WWWDATEN(strField,1)                  = $piece(strYFELD,Y,loopi)
						set $$$WWWDATEN("REFERENCEVALUE",strField,1) = $piece(strYFELD,Y,loopi)
						
						if $$$DisplayedRecord(strKey,YFORM) {
							write "td"_strField_".innerHTML = '"_$piece(strYFELD,Y,loopi)_"';"
						} ; %TXT(1)/YRETVAL process won't work here.
					}
				}
			}
		}
	}
	quit
	
	
GetLastValidRow(curLine,pidForm)
	;-------------------------------------------------------------------------------
	; Get the last row of the grid that has not been deleted.
	; If curLine is defined, get the previous row to it.
	; 
	; Params: curLine - current line
	; 
	; Returns:
	;
	; History:
	; 22-Feb-2005	JW		Added current line param
	; 15-Feb-2005	JW		Retrieved.
	;  1-Feb-2005	JW		Moved from COMGridEdit31S
	; 27-Nov-2004	Shobby	SR10468: Created
	;-------------------------------------------------------------------------------
	new intRow
	
	set intRow = $get(curLine)
	for {
		set intRow = $order($$$WWWDATEN("REFERENCEKEY",intRow),-1)
		quit:intRow=""
		quit:'$$$KilledRecord(intRow,pidForm)
	}
	quit intRow
	
	
OnClick(pYLFDAT,pstrForceValue="")
	;------------------------------------------------------------------------------- 
	; Calls out to click events and updates the values according to changes in the YFELD
	; variable passed to the method.
	;
	; Returns:
	;
	; History:
	; 14-Jan-2013	shobby	HEVA-759: Don't update record when the field is a filename
	; 08-Jan-2012	PPP		SR18002:Added OnClick for Field Type 11 (File)
	; 09-Dec-2009	SCR		SRBR014376: Add Quote Checking
	; 02-Sep-2009	shobby	SR16511: Determine if ctrl key was held down.
	; 07-May-2009	shobby	SR16524: OnBeforeClick functionality.
	; 09-Dec-2005	JW		SR13195: Have made change
	; 06-Oct-2005	JW		SR11573: Call CallEvent
	; 26-Jul-2005	shobby	SR12890 : Force the setting of the RECORDEXISTS global
	; 							to allow save to function properly.
	; 24-May-2005	JW		SR11573: For OnBlur, extra param - so don't update header
	; 							multiple times
	; 20-Jan-2005	RPW		SR10061: Modified this call name to include the word Form.
	; 14-Jan-2005	shobby	SR10061: Translate Form field to Class field for data storage.
	; 13-Jan-2005	shobby	SR10061: pstrForceValue forces update to cell even if
	; 							changed ie ClickAllRows will update checkboxes
	; 							without them being clicked on.
	; 07-Dec-2004	Shobby	SR10468: Created
	;-------------------------------------------------------------------------------
	new blnChanged,blnClick,blnCtrl,blnFile,blnShift,i,intClassField,intCol,intRow
	new strCode,strRoutine,strYFELDOld,strYKEY,GDATA,GKEY,YRETVAL
	
	set blnFile    = $piece(pYLFDAT,$$$SEMICOLON,5)	//SR18002
	set blnCtrl    = $piece(pYLFDAT,$$$SEMICOLON,4)
	set blnShift   = $piece(pYLFDAT,$$$SEMICOLON,2)
	set pYLFDAT    = $piece(pYLFDAT,$$$SEMICOLON,1)
	set GKEY       = ""
	set GDATA      = ""
	set intRow     = ""
	set blnChanged = $$$YES
	
	set $ztrap="OnClickError"

	set YRETVAL=""	
	if $get(pYLFDAT)'="" {
		// FIXME JW - What is this? A key or a bodged fieldname ?
		set GKEY = $piece(pYLFDAT,"_",1)_"_"_"5" ;id will not necessarily match line index.
		
		set intRow = $piece($piece(pYLFDAT,"_",1),"Y",2)
		set intCol = $piece(pYLFDAT,"_",2)
		set GDATA  = $$GetYFELD^COMGridEdit31G(YFORM,intRow)
		
		set blnClick = $$$YES
		
		set strCode = "set blnClick=$$OnBeforeClick^"_YFORM_"("""_$$DoubleQuotes^COMUtilStr(GDATA)_""")"
		do ExecuteCode^COMUtils(strCode)                                            ; *** EXECUTE ? ***
		
		quit:'blnClick YRETVAL				;################  Early quit
		
		set intClassField = $$$GetClassField(YFORM,intCol)
		set strYFELDOld   = GDATA

		//SR18002: Do not change value if Type = File
		if 'blnFile {
			if pstrForceValue="" {
				set $piece(GDATA,Y,intClassField) = '$piece(GDATA,Y,intClassField)
			} else {
				set $piece(GDATA,Y,intClassField) = $get(pstrForceValue)
			}
		} else {
			quit YRETVAL
		}
		
		if blnShift="true" {
			do ClickAllRows(intRow,intCol,pYLFDAT,$piece(GDATA,Y,intClassField),blnShift,blnCtrl)
		}
		
		$$$CallEvent("do OnClick^"_YFORM_"("_intCol_",.GDATA,blnShift,blnCtrl)","Click")    ; *** EXECUTE ? ***
		
		set ^WWWDATEN(0,+$horolog,YUSER,"RECORDEXISTS",$get(^CacheTemp(YUSER,"Grid","Container")),1) = 0
		
		do MadeChange()
	}
	;***************************************
	;  EXPLICIT DROP THROUGH
	;***************************************
	
OnClickError ; Internal Tag
	set $ztrap=""
	do ScreenUpdate(pYLFDAT,GDATA,strYFELDOld,$select(pstrForceValue'="":-1,1:$piece(pYLFDAT,"_",2)))
	set strYKEY = $$GetYKEY^COMGridEdit31G(intRow,YFORM)
	do OnBlur^COMGridEdit31Events(pYLFDAT,strYKEY,GDATA,(pstrForceValue=""))
	quit YRETVAL
	
	
ClickAllRows(pintRow,pintCol,pYLFDAT,pstrValue,pblnShift=$$$NO,pblnCtrl=$$$NO)
	;-------------------------------------------------------------------------------
	; If the shift key has been held down when clicking a check box then apply the
	; click to all rows.
	;
	; Returns:
	;
	; History:
	; 07-Aug-2006	JW		SR14730: Check for data - may not exist
	; 01-Mar-2006	JW		SR13305: Only update if changing value.
	; 13-Jan-2005	Shobby	SR10061: Created
	;-------------------------------------------------------------------------------
	new intLine,strCellRef
	
	set intLine = ""
	for {
		set intLine = $order($$$WWWDATEN("REFERENCEKEY",intLine))
		quit:intLine=""
		
		set strCellRef="Y"_intLine_"_"_pintCol
		if strCellRef'=pYLFDAT {
			if '$data($$$WWWDATEN(strCellRef)) || (+$$$WWWDATEN(strCellRef,1)'=pstrValue) {
				do OnClick(strCellRef_";0;;"_pblnCtrl,pstrValue)
			}
		}
	}
	quit YRETVAL
	
	
	; NOTE: There is a similar procedure SetRecord^COMGridEdit31S1, these may be merged or
	; at least made to use common components at a later stage when the Dynamic Table settles.
	
ScreenUpdate(pYLFDAT,pYFELDNew,pYFELDOld,pintCurrentCell,pblnUpdateScreen=$$$YES,pblnUpdateStyle=$$$YES)
	;-------------------------------------------------------------------------------
	; If YFELD has changed update $$$WWWDATEN("REFERENCEVALUE") & the screen
	; 
	; Inputs:
	;	pintCurrentCell  : If specified, stops refresh of current cell
	; 
	; Returns:
	;
	; History:
	; 25-May-2011	GRF		SR17250: call common function for decimal places
	; 18-Feb-2010	shobby	SR17120: Adjustment to REFERENCEVALUE (except for dates).
	; 07-Aug-2009	GRF		SR16787: update REFERENCEVALUE even if not displayed
	; 21-Apr-2008	heber	SRBR014936: Apply style changes if requested
	; 12-Dec-2007	GRF		i=>loop
	; 19-Oct-2005	JW		SR11573: Only update screen if being displayed
	; 01-Sep-2005	PO		SR12965: Allow storage of currency amounts to be greater
	; 							than displayed value
	; 20-Jul-2005	RPW		SR12981: Defined blnStop
	; 04-Mar-2005	JW		SR11833: Correct Number data
	; 14-Feb-2005	RPW		Fully introduced new screen updating code.
	; 03-Feb-2005	shobby	Flag for updating screen (may want to update data only
	; 							such as when called from Update^FINAPInv)
	; 31-Jan-2005	RPW		No longer get the color during the check for modified
	; 							field value stages, leave that that to the referencelist
	; 							message which does all colours and tooltips.
	; 27-Jan-2005	RPW		The ReferenceValue should be unformatted, otherwise
	; 							the selection control does not work.
	; 17-Jan-2005	sh/jw/ss*	Removed $$ShowCell test.
	; 14-Jan-2005	shobby	Translate class field to form field (SR10061)
	; 13-Jan-2005	shobby	Call the cgeUpdateValue method to update the contents of
	; 							a cell.  That method can handle different control types.
	; 30-Dec-2004	RPW		SR10061: Make sure the colour on the cell is set correctly.
	; 17-Dec-2004	JW		SR11294: TD's innerHTML was being changed instead of the DIV's
	; 07-Dec-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new loop,strKey,intFormField,strText,strColour,strCellRow,strValue,madeChange,strClass
	new intType,objData,dpNum,blnStop,strData,idRow
 	
	$$$LogR2("ScreenUpdate",pYLFDAT_"<"_$get(pintCurrentCell)_"<"_pblnUpdateScreen_"<"_pblnUpdateStyle)
	
 	; pYLFDAT    :  Y1x01_0  (note: column 0)    or Y1_23
 	; pYFELDOld  :  20785~1~~0~1~~~14~1~14~~~~~370~-74~~~~0~20000210~~~~~DP~1~20~~0~~~14~
 	; pYFELDNew  :  20785~1~~0~1~~~14~1~14~~~~~280~-56~~~~0~20000210~~~~~DP~1~20~~0~~~14~
 	; strCellRow :  Y1x01
 	; idRow      :   1x01   (idGridRow)
 	
 	;    Access each piece in turn, combining with strCellRow.
 	;    Convert Class D# to Form F# as intFormField  (intCol)
 	
	set madeChange = $$$NO
	
	if pYFELDNew'=pYFELDOld {
		set strClass   = $$$GRIDClass(YFORM)
		set strCellRow = $piece(pYLFDAT,"_",1)
		set idRow      = $piece(strCellRow,"Y",2)
		
		for loop=1:1:$length(pYFELDNew,Y) {
			if $piece(pYFELDNew,Y,loop)'=$piece(pYFELDOld,Y,loop) {
				set intFormField = $$$GetFormField(YFORM,loop)
				
				set strKey   = strCellRow_"_"_intFormField ;id will not necessarily match line index.
				set strValue = $piece(pYFELDNew,Y,loop)
				set strData  = strValue
				set blnStop  = $$$NO
				
				set objData = $get(^WWW003(0,strClass,loop,1))		;SR17120
				set intType    = $$$WWW003InputType(objData)		;SR17120
				if (strValue'="") {
					if (intType=8) || (intType=12) {
		;				set dpNum    = $$GetDecimalPointNum^COMGridEdit31Body(YFORM,intFormField,objData)   ; SR17250
						set dpNum    = $$GetDecimalPlaces^COMUtilNum(YFORM,intFormField,"",pYFELDNew,"")
	$$$LogR2x("Pre RoundNumber:2:"_strValue_"<"_dpNum_"<"_intFormField_":"_objData)
						set strValue = $$RoundNumber(strKey,strValue,intType,dpNum)
	$$$LogR2x("Pre RoundNumber:3:"_strValue_"<"_$$GetDPNumForStorage^COMGridEdit31Body(dpNum,objData))
						set strData  = $$RoundNumber(,strData,intType,$$GetDPNumForStorage^COMGridEdit31Body(dpNum,objData))
						set blnStop  = (strData=$piece(pYFELDOld,Y,loop))
	$$$LogR2x("SU:1:"_loop_"<"_strKey_"<"_intType_"<"_dpNum_"<"_strValue_"<"_strData)
					}
				}

				if 'blnStop {
					set $$$WWWDATEN(strKey,1) = strData     ; "Y2x01_3"
					
					set YBBN    = $get(YBBN,loop)
					set strText = $$ScreenTranslate(strKey,strValue,$get(dpNum))
			; TODO (shobby)  17120 vvvvv    This seems a bit wrong and will probably put &nbsp; into empty grid cells.
					if intType'=1 {
						set $$$WWWDATEN("REFERENCEVALUE",strKey,1) = strValue
					} else {
						set $$$WWWDATEN("REFERENCEVALUE",strKey,1) = strText
					}
						
					if $$$DisplayedRecord(idRow,YFORM) {	; only if on screen
	$$$LogR2x("SU:2:"_strKey_"<"_strText_">")
						if pblnUpdateScreen {
							if intFormField'=$get(pintCurrentCell) {
								;SR17673.2 write "cgeUpdateValue('td"_strKey_"','"_strText_"');"
								write "cgeUpdateValue(getFieldId('"_strKey_"','"_YFORM_"'),'"_strText_"');"  ;SR17673.2
								set madeChange = $$$YES
							}
						}
					}
				}
			}
		}
	}
	if madeChange write YCR,$$MadeChange()     ; FIXME : Only]]><![CDATA[ ever returns ""  - why write anything? <GRF>
	
	if pblnUpdateStyle {
		do ScreenUpdateStyle(pYLFDAT,pblnUpdateScreen)
	}
	quit
	
	
	; NOTE: There is a similar procedure at DisplayData^COMGridEdit31F, these may be
	; merged or at least made to use common components at a later stage when the
	; Dynamic Table settles.
	
ScreenUpdateStyle(pstrYLFDAT,pblnUpdateScreen=$$$YES)
	;-------------------------------------------------------------------------------
	; On some field change, associated fields that should then be updated are passed
	; to AddReference^COMGridEdit31Events for storing in $$$WWWDATEN("REFERENCELIST")
	; 
	; This routine passes some default values to CGE31Events which calls
	; OnBeforeFormat^[FORM] that may modify the background colour or tooltip.
	; OnBeforeFormat may also cause other fields to be updated - 
	; (e.g. Reselection of stock in a storage can change the bundle and the Bundle
	; Attribute Values then need to be refreshed.)
	; 
	; The resultant details are then passed to the js cgeUpdateStyle() function
	; which replaces FG Colour, BG Colour and Title.
	;-------------------------------------------------------------------------------
	; 
	; Inputs:
	;	pstrYLFDAT			"pY"_GridRow_"_"_GridCol
	;	pblnUpdateScreen	if $$$NO simply removes REFERENCELIST
	; 
	; Returns:
	;
	; History:
	; 22-Oct-2010	GRF		-: remove SR15753 commented code
	; ??-Feb-2010	shobby	SR15753: Rewritten.
	; 03-Sep-2009	GRF		SR16787: RefreshGridLines updates associated lines but
	; 							GROW/YROW were not being reset so wrong data was
	; 							being used to determine the rules.  Load intRow into
	; 							these variables for use in CheckRules.
	; 18-Aug-2009	DWR		SR16797: After further discussions, changes reinstated
	; 14-Aug-2009	DWR		SR16797: reverted changes, kept commented for info
	; 30-Jul-2009	DWR		SR16797: Do Check Rules to make sure all core rules are
	; 							checked, possible that there in no OnBeforeFormat
	; 							routine any more for a form.
	; 22-Jun-2009 	PPP 	SR16510: Pass YENABLED to cgeUpdateStyle (to update RO)
	; 16-Jun-2009	GRF		SR16598: Pass YENABLED to cgeUpdateStyle - REVERTED
	; 17-Jan-2007	RPW		SR15351: Pass Edit Grid row to OnBeforeFormat so record
	; 							is only retrieved once
	; 29-Dec-2006	RPW		SR15316: Ignore YHID it's not necessary here
	; 26-Jun-2006	JW		SR12775: Get/set colours properly. Changed in OnBeforeFormat.
	; 21-Jun-2005	shobby	SR12632: Pass updatestyle parameter as ~ delimited string.
	; 03-Feb-2005	RPW		Created
	;-------------------------------------------------------------------------------
	new blnReadOnly,idField,intCol,intRow,loop,objRow
	new strDisabledFontColor,strField,strFontColour,strReferenceList
	new GROW,YHID,YROW,YENABLED,YFONTCOLOR,YBACKGROUNDCOLOR,YTOOLTIP
	new YWARNING,YMANDATORY,YREQUIRED
	
	set intRow = $piece($piece(pstrYLFDAT,"_",1),"Y",2)
	set intCol = $piece(pstrYLFDAT,"_",2)
	set (GROW,YROW) = intRow
	
	set objRow = $$GetYFELD^COMGridEdit31G(YFORM,intRow)
 	
 	do CheckRules^WWWEVENT(YFORM,objRow,intRow)
	
	set strReferenceList = ","_$$GetColumnOrder^COMGridEdit31Body(YFORM)_","
	
	kill $$$WWWDATEN("REFERENCELIST")
		
	if pblnUpdateScreen {
		for loop=2:1:$length(strReferenceList,",")-1 {
			set idField = $piece(strReferenceList,",",loop)
			continue:(idField="")||(idField=0)             ; TODO JW - work out how this could happen!
			
			set YHID                 = ""
			set strField             = "Y"_intRow_"_"_idField
			set YTOOLTIP             = ""
			set YBACKGROUNDCOLOR     = "ivory"
			set YFONTCOLOR           = "black"
			set YENABLED             = $$$YES
			set YMANDATORY           = $$$NO
			set YWARNING             = $$$NO
			set YREQUIRED            = $$$NO
			set strDisabledFontColor = ""
			
			new YTEXT
			
			set blnReadOnly = 'YENABLED
			do CheckRules^WWWFORMD(YFORM,idField,objRow,"",.blnReadOnly,"",.YMANDATORY,$$$YES,.YBACKGROUNDCOLOR,"","","","","","",.strDisabledFontColor)
			set YENABLED = 'blnReadOnly
			do OnBeforeFormat^COMGridEdit31Events(YFORM,strField,$$$YES,,objRow)
			if 'YENABLED && (strDisabledFontColor'="") set YFONTCOLOR = strDisabledFontColor
			do UpdateStyle^COMGridEdit31Interface("td"_strField,YFONTCOLOR_Y_YBACKGROUNDCOLOR_Y_$zconvert(YTOOLTIP,"o","JS")_Y_YENABLED)
		}
	}
	quit
	
	
ScreenTranslate(pYLFDAT,pstrValue,dpNum=0)
	;-------------------------------------------------------------------------------
	; Works out the data type for the specified cell.
	; 
	; Called By: ScreenUpdate^COMGridEdit31S
	; 
	; Returns:
	;
	; History:
	; 22-Mar-2011	shobby	SR17688: Moved some code in to GetValue
	; 23-Nov-2010	shobby	SR17590: Translate yes/no grid fields.
	; 17-Nov-2009	PPP		SR17029: Include RELCF as a newed variable and pass into
	; 							MiniText as a parameter 
	; 28-Feb-2008	shobby	SRBR014894: Call MiniText
	; 05-Jul-2007	shobby	SRBR014553: Use standard routine to access WWW122
	; 06-Mar-2007	PO		SR15466: Pass YDAT by reference
	; 07-Mar-2005	JW		SR11833: Added dpNum
	; 28-Feb-2005	JW		Set "" to "&nbsp;"
	; 31-Jan-2005	shobby	Passed parameters into MiniText
	; 18-Jan-2005	RobertW	Modified to handle relationships (SR10061)
	; 07-Dec-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new intFormCol,intClassCol,intDataType,strClassName,strFormName,text
	
	$$$LogR("ScreenTranslate",$get(pYLFDAT)_"<"_$get(pstrValue)_"<"_dpNum)
	
	set intDataType  = 0
	set pstrValue    = $get(pstrValue)
	set strClassName = $$$GRIDClass(YFORM)
	
	if (strClassName'="") && (YFORM'="") {
 		set intFormCol  = $piece(pYLFDAT,"_",2)
 		set intClassCol = $$$WWW122SequenceNumber($$Get^WWW122(YFORM,+intFormCol)) ; FIXME : Field used is not customisable - faster to have direct get
 		if +intClassCol'=0 {
 			set intDataType = $piece($get(^WWW003(0,strClassName,intClassCol,1)),Y,3)
 		}
	}
	
	; FIXME : use separate tag as a wrapper for proper isolation of newed variables <GRF>
	if ($get(intFormCol)'="") && ((intDataType=6)||(intDataType=2)) {  ; SR17590
		set pstrValue = $$GetValue(pYLFDAT,pstrValue,.YTEXT)           ; SR17688
	}
	
	set text = $$WWWTR($$$NO,intDataType,pstrValue,dpNum)
	if text="" set text = "&nbsp;"
	
	quit text


GetValue(pYLFDAT,pstrValue,&YTEXT)
	;-------------------------------------------------------------------------------
	; 
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 22-Mar-2011	shobby	SR17688: Ensure that there is a value for YKEY.
	; 22-Mar-2011	shobby	SR17688: Extracted code from ScreenTranslate
	;-------------------------------------------------------------------------------
	new PARA,REL,RELCF,RELF,SUCH
	new YTXT,YTYP,YLFN,YTEXTOLD,YLENGTH,YWIDTH,YCOLON,YCOLOFF,YVALIGN,YPADDING,YFTYPE,YHEIGHT,YFONT,YFONTSIZE,YHID
	new YKEY,intRow,intCol
	
	$$$GRIDSplitKey(pYLFDAT,intRow,intCol)
	set YKEY = $$GetYKEY^COMGridEdit31G(intRow)

	set YTEXTOLD  = $get(YTEXT,"undefined")
	do PARA^COMGridEdit31Body("D",intCol,.YWIDTH,.YVALIGN,.YHEIGHT,.YFONT,.YFONTSIZE,.YTYP,.YFORM,.YLFN,.YTXT,.YDAT)
	set YTEXT     = pstrValue
	
	set pstrValue = $$MiniText^COMGridEdit31F(REL,PARA,YTEXT,.SUCH,RELF,YTXT,RELCF)  //SR17029
	if YTEXTOLD'="undefined" set YTEXT = YTEXTOLD
	quit pstrValue
	
	
WWWTR(pYIO,pYTYP,pYINHALT,pDLDP)
	;-------------------------------------------------------------------------------
	; Wrapper for ^WWWTR - allows change of decimal place for currency.
	; 
	; Inputs:	pYIO	: blnToInternal : $$$NO Int=>Ext format, $$$YES Ext=>Int
	; 
	; Returns:
	; 
	; History:
	; 17-Jan-2011	GRF		SR17579: pass pDLDP as third parameter (needs explicit
	;							override for FP, etc.)
	; 07-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 15-Jun-2005	RW/JW	SR12484 Really corrected handling of extra dps.
	; 15-Jun-2005	PO		SR12589 Corrected handling of extra dps.
	; 07-Jun-2005	RW/JW	Don't show extra DPs for floats
	; 31-Mar-2005	PO		SR11349 FC support
	; 07-Mar-2005	JW		Created SR11824
	;-------------------------------------------------------------------------------
	new YDECIMALLEN
	
	$$$LogR3("WWWTR",$get(pYIO)_"<"_$get(pYTYP)_"<"_$get(pYINHALT)_"<"_$get(pDLDP))
	
	if (pYTYP=8) && ($$$CurrencyToUse="Foreign") && $$$AmountIsFC(pYINHALT) {
		set pYINHALT = $$$FCAmount(pYINHALT)
	}
	
	if $get(pDLDP)'="" set YDECIMALLEN = pDLDP      ; used by WWWTR
	;set pYINHALT = $$Convert^WWWTR(pYIO,pYTYP,pYINHALT)   ; SR17579
	if pYIO {
		set pYINHALT = $$GetInternal^WWWTR(pYTYP,pYINHALT,$get(pDLDP))
	} else {
		set pYINHALT = $$GetLiteral^WWWTR(pYTYP,pYINHALT,$get(pDLDP))
	}
	
	if (pYTYP=12) {		// Floating - remove excess zeroes after dp
		if +$piece(pYINHALT,YDECIMAL,2) {
			set $piece(pYINHALT,YDECIMAL,2) = $reverse(+$reverse($piece(pYINHALT,YDECIMAL,2)))
			
		} else {
			set pYINHALT = $piece(pYINHALT,YDECIMAL,1)
		}
	}
	$$$LogR3x($get(YDECIMALLEN)_"<"_pYINHALT)
	quit pYINHALT
	
	
DeleteAll(pstrType,pstrData)
	;-------------------------------------------------------------------------------
	; Allow all the rows in a grid to be deleted in the standard way.
	;
	; Params:
	; pstrType: Always blank, not used (YINHALT)
	; pstrData: Always blank, not used (YVAR)
	;
	; ByRefs:
	;
	; Returns:
	; Empty string.
	;
	; History:
	; 23-Mar-2006	RPW		SR14457: Call OnBeforeDeleteAll to determine if we can
	; 							delete these entries.
	; 08-Feb-2006	RPW		SR13655: Do not throw out the data anymore.
	; 06-Feb-2006	RPW		SR14093: Created
	;-------------------------------------------------------------------------------
	new intRow,intCol,idLine,strResult,blnIsDisplayed,idFirstLine,blnDeleteAll
	
	set blnDeleteAll = $$OnBeforeDeleteAll^COMGridEdit31Events()
	
	if blnDeleteAll {
		set idFirstLine = $order($$$WWWDATEN("REFERENCEROW",""))
		set intCol      = $order($$$WWWDATEN("REFERENCEVALUE",""))
		
		if intCol'="" {
			set intCol = $piece(intCol,"_",2)
			set idLine = ""
			for {
				set idLine = $order($$$WWWDATEN("REFERENCEROW",idLine),-1)
				quit:idLine=""
				
				set intRow    = $$$WWWDATEN("REFERENCEROW",idLine,1)
				set YLFDAT    = "Y"_intRow_"_"_intCol
				set strResult = $$^COMGridEdit31S("KILL",YLFDAT_";"_intRow,(idFirstLine=idLine))
			}
		}
	}
	quit blnDeleteAll
	
]]></Routine>
</Export>