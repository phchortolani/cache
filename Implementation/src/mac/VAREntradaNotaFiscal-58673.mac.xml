<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="VAREntradaNotaFiscal" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VAREntradaNotaFiscal
	#include INConst
	#include VARConst

	#define FiltroEntradaNotaFiscal						^CacheTempEntradaNotaFiscal(YUCI, YUSER, "Filtro")
	#define VARTempEntradaNotaFiscalVisao(%obj)			$piece(%obj,"~",1)
	#define VARTempEntradaNotaFiscalMes(%obj)			$piece(%obj,"~",2)
	#define VARTempEntradaNotaFiscalAno(%obj)			$piece(%obj,"~",3)
	#define VARTempEntradaNotaFiscalLocal(%obj)			$piece(%obj,"~",4)
	#define VARTempEntradaNotaFiscalGrupo(%obj)			$piece(%obj,"~",5)
	#define VARTempEntradaNotaFiscalProduto(%obj)		$piece(%obj,"~",6)
	#define VARTempEntradaNotaFiscalNotaFiscal(%obj)	$piece(%obj,"~",7)
	#define VARTempEntradaNotaFiscalSerie(%obj)			$piece(%obj,"~",8)
	#define VARTempEntradaNotaFiscalObservacao(%obj)	$piece(%obj,"~",9)
	#define VARTempEntradaNotaFiscalFornecedor(%obj)	$piece(%obj,"~",10)
	
	#define STATUSFECHAMENTOENVIOCONFIRMADO				2

	quit

OnAfterSave()

	kill $$$FiltroEntradaNotaFiscal
	
	set $$$VARTempEntradaNotaFiscalVisao($$$FiltroEntradaNotaFiscal)		= $get(VORG(1))
	set $$$VARTempEntradaNotaFiscalMes($$$FiltroEntradaNotaFiscal)			= $get(VORG(2))
	set $$$VARTempEntradaNotaFiscalAno($$$FiltroEntradaNotaFiscal)			= $get(VORG(3))
	set $$$VARTempEntradaNotaFiscalLocal($$$FiltroEntradaNotaFiscal)		= $get(VORG(4))
	set $$$VARTempEntradaNotaFiscalGrupo($$$FiltroEntradaNotaFiscal)		= $get(VORG(5))
	set $$$VARTempEntradaNotaFiscalProduto($$$FiltroEntradaNotaFiscal)		= $get(VORG(6))
	set $$$VARTempEntradaNotaFiscalNotaFiscal($$$FiltroEntradaNotaFiscal)	= $get(VORG(7))
	set $$$VARTempEntradaNotaFiscalSerie($$$FiltroEntradaNotaFiscal)		= $get(VORG(8))
	set $$$VARTempEntradaNotaFiscalObservacao($$$FiltroEntradaNotaFiscal)	= $get(VORG(9))
	set $$$VARTempEntradaNotaFiscalFornecedor($$$FiltroEntradaNotaFiscal)	= $get(VORG(10))

	do VARLogAfterSave^VARUtil(YBED,YFORM)
 	do GoToForm^COMUtilForm("VAREntradaNotaFiscal",1,,,,,)	
	
	quit

OnAfterDataFields()
	new objEntradaNotaFiscal, vVisao, vMes, vAno, vLocal, vGrupo, vProduto, vNotaFiscal, vSerie, vObservacao
	
	kill ^CacheTempEntradaNotaFiscalXLS
	
	if ('$$isAfterSaveLogged^VARUtil(YBED,YFORM)) quit
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	set objEntradaNotaFiscal = $get($$$FiltroEntradaNotaFiscal)
	
	set vVisao		= $$$VARTempEntradaNotaFiscalVisao(objEntradaNotaFiscal)
	set vMes		= $$$VARTempEntradaNotaFiscalMes(objEntradaNotaFiscal)
	set vAno		= $$$VARTempEntradaNotaFiscalAno(objEntradaNotaFiscal)
	set vLocal		= $$$VARTempEntradaNotaFiscalLocal(objEntradaNotaFiscal)
	set vGrupo		= $$$VARTempEntradaNotaFiscalGrupo(objEntradaNotaFiscal)
	set vProduto	= $$$VARTempEntradaNotaFiscalProduto(objEntradaNotaFiscal)
	set vNotaFiscal	= $$$VARTempEntradaNotaFiscalNotaFiscal(objEntradaNotaFiscal)
	set vSerie		= $$$VARTempEntradaNotaFiscalSerie(objEntradaNotaFiscal)
	set vObservacao	= $$$VARTempEntradaNotaFiscalObservacao(objEntradaNotaFiscal)
	set vFornecedor	= $$$VARTempEntradaNotaFiscalFornecedor(objEntradaNotaFiscal)
	
	if ($$CheckFechamentoContabil(vMes,vAno) = $$$NO){
		$$$Alert("Este relatório está disponível somente para os meses/anos que já foi enviado o fechamento contábil.")
		quit 
	}
	
	if (vVisao = 1) {
		do PrintGridSintetico(vMes, vAno, vLocal, vGrupo, vProduto, vNotaFiscal, vSerie, vObservacao,vFornecedor)
	}
	elseif (vVisao = 2) {
		do PrintGridAnalitico(vMes, vAno, vLocal, vGrupo, vProduto, vNotaFiscal, vSerie, vObservacao,vFornecedor)
	}
	
	quit

PrintGridSintetico(pMes, pAno, pLocal, pGrupo, pProduto, pNotaFiscal, pSerie, pObservacao, pFornecedor)
	new lstHeader, strSql, rs, count
	
	set strSql =	"SELECT	$extract($$SQLGetGrupoItem^VARSQL(INRECSummary.Item),1,3) As GrupoProduto, "_
					"		ROUND(SUM(INRECSummary.ExtendedCostBASE),2) As ValorTotalNota, "_
					"		$$GetSaldoSinteticoEstornada^VAREntradaNotaFiscal("_pMes_","_pAno_",$extract($$SQLGetGrupoItem^VARSQL(INRECSummary.Item),1,3)) As ValorTotalNotaEstornada, "_
					"		ROUND(SUM(INRECSummary.UnitQtyReceived),2) As Quantidade "_
					"  ,(SELECT NVL(ROUND(SUM(DiscountRate),2),0) "_
					"  FROM INRECSummary As INRECSummary2 "_
					"  WHERE INRECSummary2.ReceiptNumber = INRECSummary.ReceiptNumber "_
					"  AND INRECSummary2.LineType = 4) As ValorFrete, "_
					"  INREC1.Supplier As Fornecedor "_
					"FROM INRECSummary "_
					"INNER JOIN INREC As INREC1 "_
					"		ON	INREC1.Company = INRECSummary.Company "_
					"		AND	INREC1.ReceiptNumber = INRECSummary.ReceiptNumber "_
					"		AND	INREC1.FREE10 IS NOT NULL "_
					"		AND	INREC1.Status IN (1,4) "_
					"LEFT JOIN INREC As INREC2 "_
					"		ON	INREC2.Company = INRECSummary.Company "_
					"		AND	INREC2.ReceiptNumber = INRECSummary.ReceiptNumber "_
					"		AND	INREC2.FREE10 IS NOT NULL "_
					"		AND	INREC2.Status IN (1,4) "_
					"LEFT JOIN ( "_
					"			SELECT	StockHistory2.Reference, "_
					"					StockHistory2.Item, "_
					"					ROUND(SUM(StockHistory2.TxValue),2) As TxValue "_
					"			FROM alSOH.dStockHistory As StockHistory2 "_
					"			INNER JOIN INREC As INREC2 "_
					"				ON	INREC2.Company = 0 "_
					"				AND	INREC2.ReceiptNumber = StockHistory2.Reference "_
					"				AND	INREC2.FREE10 IS NOT NULL "_
					"				AND	INREC2.Status IN (1,4) "_
					"		GROUP BY StockHistory2.Reference, StockHistory2.Item "_
					"		) As StockHistoryNF "_
					"		ON	StockHistoryNF.Reference = INREC2.ReceiptNumber "_
					"		AND	StockHistoryNF.Item = INRECSummary.Item "_
					"WHERE	INRECSummary.Company = 0 "_
					"AND	INRECSummary.LineType = 0 "_
					"AND    ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(INRECSummary.Item) = 0) "_
					$$GetFiltroSQLSintetico(pMes, pAno, pLocal, pGrupo, pProduto, pNotaFiscal, pSerie, pFornecedor)_
					"GROUP BY "_
					"		$extract($$SQLGetGrupoItem^VARSQL(INRECSummary.Item),1,3) "_
					"ORDER BY "_
					"		TO_NUMBER($extract($$SQLGetGrupoItem^VARSQL(INRECSummary.Item),1,3)) "
	;w strSql
	#dim rs As %ResultSet
	set rs = ##class(%ResultSet).%New()
	do rs.Prepare(strSql)
	do rs.Execute()

	set count = 0
	set lstHeader = $listbuild("Grupo", "Desc. Grupo", "Quantidade", "Valor NF (R$)", "NF Estornada (R$)", "Valor Total (R$)")
	
	set ^CacheTempEntradaNotaFiscalXLS(YM,YUSER,YBED,0,1) = $listtostring(lstHeader,"~")
	
 	if ($$Start^COMTable(lstHeader,,,,$$$NO,$$$NO)) {
	   	while (rs.Next()) {
			set count = count + 1
			set objExcel = ""
		   	do NewLine^COMTable()
			do InsertCell^COMTable(rs.Get("GrupoProduto"), , , , "CENTER")
			do InsertCell^COMTable($$SQLGetDescGrupoItem^VARSQL(rs.Get("GrupoProduto")))
			do InsertCell^COMTable($$^WWWTR(0,18,rs.Get("Quantidade"),4), , , , "RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,rs.Get("ValorTotalNota"),4)_"&nbsp;&nbsp;", , , , "RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,rs.Get("ValorTotalNotaEstornada"),4)_"&nbsp;&nbsp;", , , , "RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,(rs.Get("ValorFrete")+rs.Get("ValorTotalNota")+rs.Get("ValorTotalNotaEstornada")),4)_"&nbsp;&nbsp;", , , , "RIGHT")
			do EndLine^COMTable()
			
			set objExcel = rs.Get("GrupoProduto")_"~"_$$SQLGetDescGrupoItem^VARSQL(rs.Get("GrupoProduto"))_"~"_$$^WWWTR(0,18,rs.Get("Quantidade"),4)
			set objExcel = objExcel_"~"_$$^WWWTR(0,8,rs.Get("ValorTotalNota"),4)_"~"_$$^WWWTR(0,8,rs.Get("ValorTotalNotaEstornada"),4)
			set objExcel = objExcel_"~"_$$^WWWTR(0,8,(rs.Get("ValorFrete")+rs.Get("ValorTotalNota")+rs.Get("ValorTotalNotaEstornada")),4)
			set ^CacheTempEntradaNotaFiscalXLS(YM,YUSER,YBED,count,1) = objExcel
	   	}
		do Stop^COMTable()
 	}

	quit

PrintGridAnalitico(pMes, pAno, pLocal, pGrupo, pProduto, pNotaFiscal, pSerie, pObservacao, pFornecedor)
	;************************************************************************************* 
	; Histórico
	; 2017-01-04	Henrique Dias	LEAN-18	  Incluir coluna no relatório Entrada via Nota Fiscal
	;*************************************************************************************	
	new lstHeader, strSql, rs, count, rsStatus, diaAtual, fornecedorAtual, notaAtual, totalNotaAtual, totalDiaAtual,
		freteAtual, descontoAtual, parcelasAtual, diasPagamentoAtual, porcentagemParcelasAtual, valorParcelaAtual,
		vencimentoParcelaAtual, observacaoAtual
	
	
	set strSql = 	" SELECT * FROM ( "_
					" SELECT "_
					"  CASE WHEN INREC1.FREE3 IS NULL THEN INREC1.InvoiceNumber ELSE INREC1.InvoiceNumber||'-'||INREC1.FREE3 END As NotaFiscal, "_
					"  INRECSummary.ReceiptNumber AS Documento, " _
					"  'Normal' As SituacaoNota, "_
					"  INREC1.Location as LocalRec, "_
					"  $$SQLGetDataFormatada^VARSQL(INREC1.ProcessedDate) As DataEmissao, "_
					"  $$SQLGetDataFormatada^VARSQL(INREC1.ProcessedDate) As DataDigitacao, "_
					"  (SELECT NVL(ROUND(SUM(DiscountRate),2),0) "_
					"  FROM INRECSummary As INRECSummary2 "_
					"  WHERE INRECSummary2.ReceiptNumber = INRECSummary.ReceiptNumber "_
					"  AND INRECSummary2.LineType = 4) As ValorFrete, "_
					"  (SELECT NVL(ROUND(SUM(DiscountRate),2),0) "_
					"  FROM INRECSummary As INRECSummary2 "_
					"  WHERE INRECSummary2.ReceiptNumber = INRECSummary.ReceiptNumber "_
					"  AND INRECSummary2.LineType = 1) As ValorDesconto, "_
					"  INREC1.InvoiceTotal As ValorTotalNota, "_
					"  $$SQLGetDescricaoProduto^VARSQL(INRECSummary.Item) As DescProduto, "_
					"  INRECSummary.Item As Produto, "_
					"  $$SQLGetSiglaUnit^VARSQL(INRECSummary.ReceivedUnit) As UnidadeMedida, "_
					"  'Sim' As Estoque, "_
					"  $extract($$SQLGetGrupoItem^VARSQL(INRECSummary.Item),1,3) As GrupoProduto, "_
					"  NULL As Sim, "_
					"  INRECSummary.PurchaseOrder As OrdemCompra, "_
					"  ROUND(INRECSummary.UnitQtyReceived,4) As Quantidade, "_
					"  INRECSummary.UnitCost As ValorUnitario, "_
					"  TO_NUMBER(0) As ValorFreteItem, "_
					"  INRECSummary.ExtendedCostBASE As ValorTotalProdutoReal, "_
					"  StockHistory.TxValue As ValorTotalProdutoStockHistoryReal, "_
					"  INRECSummary.ExtendedCostBASE As ValorProduto, "_
					"  TO_NUMBER(0) As ValorGrupo, "_
					"  INKOND.FREE1 As Parcelas, "_
					"  INKOND.FREE2 As DiasPagamento, "_
					"  ROUND((100/INKOND.FREE1),2)||'%' As PorcentagemParcelas, "_
					"  ROUND((INREC1.InvoiceTotal/INKOND.FREE1),2) As ValorParcela, "_
					"  $$GetDiasVencimento^VAREntradaNotaFiscal(INREC1.ProcessedDate,INKOND.TermFlag) As VencimentoParcela, "_
					"  INREC1.Notes As Observacao, "_
					"  $$SQLGetDescFornecedor^VARSQL(INREC1.Supplier) As DescFornecedor, "_
					"  INREC1.Supplier As Fornecedor, "_
					"  $$SQLGetContaEntrada^VARSQL(INRECSummary.Item) as CodContaEntrada, $$SQLGetDescContaEntrada^VARSQL(INRECSummary.Item) as DescContaEntrada, "_
					"  INKOND.TermFlag As TermFlag "_
					" FROM INRECSummary "_

					" INNER JOIN "_

					" (SELECT Reference, Item, ROUND(SUM(TxValue),2) As TxValue "_
					" FROM alSOH.dStockHistory "_
					" WHERE MovementType_MovementTypeId = 1 "_
					" GROUP BY Reference, Item) AS StockHistory "_

					" ON StockHistory.Reference = INRECSummary.ReceiptNumber "_
					" AND StockHistory.Item = INRECSummary.Item "_

					" INNER JOIN INREC As INREC1 "_
					" ON INREC1.Company = INRECSummary.Company "_
					" AND INREC1.ReceiptNumber = INRECSummary.ReceiptNumber "_

					" LEFT JOIN INKOND "_
					" ON INKOND.Company = INREC1.Company "_
					" AND INKOND.TermFlag = INREC1.FREE14 "_

					" WHERE INRECSummary.Company = 0 "_
					" AND INREC1.FREE10 IS NOT NULL "_
					" AND INRECSummary.LineType = 0 "_
					" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(INRECSummary.Item) = 0) "_

					" UNION "_

					" SELECT  "_
					"  $$GetNotaFiscalEstorno^VAREntradaNotaFiscal(StockHistory.Reference) as NotaFiscal, "_
					"  '' AS Documento, " _
					"  'Estornada' as SituacaoNota, "_
					"  StockHistory.Location as LocalRec, "_
					"  TO_CHAR(StockHistory.DateConfirmed, 'DD/MM/YYYY') AS DataEmissao, "_
					"  TO_CHAR(StockHistory.DateConfirmed, 'DD/MM/YYYY') AS DataDigitacao, "_
					"  '' as ValorFrete, "_
					"  '' as ValorDesconto, "_
					"  '' as ValorTotalNota, "_
					"  $$SQLGetDescricaoProduto^VARSQL(StockHistory.Item) as DescProduto, "_
					"  StockHistory.Item AS Produto, "_
					"  $$SQLGetUnitSigla^VARSQL(StockHistory.Item) as UnidadeMedida, "_
					"  'Sim' as Estoque, "_
					"  $extract($$SQLGetGrupoItem^VARSQL(StockHistory.Item),1,3) As GrupoProduto, "_
					"  NULL As Sim, "_
					"  $$GetOrdemCompraEstorno^VAREntradaNotaFiscal(StockHistory.Reference) As OrdemCompra, "_
					"  ROUND(StockHistory.QtyMoved, 4) As Quantidade, "_
					"  ROUND($$GetValorPositivo^VARSQL(StockHistory.TxValue) / StockHistory.QtyMoved, 4) As ValorUnitario, "_
					"  '' As ValorFreteItem, "_
					"  ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) As ValorTotalProdutoReal, "_
					"  ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) As ValorTotalProdutoStockHistoryReal, "_
					"  ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) As ValorProduto, "_
					"  '' As ValorGrupo, "_
					"  '' As Parcelas, "_
					"  '' As DiasPagamento, "_
					"  '' As PorcentagemParcelas, "_
					"  '' As ValorParcela, "_
					"  '' As VencimentoParcela, "_
					"  '' As Observacao, "_
					"  $$SQLGetDescFornecedor^VARSQL($$GetFornecedorEstorno^VAREntradaNotaFiscal(StockHistory.Reference)) As DescFornecedor, "_
					"  $$GetFornecedorEstorno^VAREntradaNotaFiscal(StockHistory.Reference) As Fornecedor, "_
					"  $$SQLGetContaEntrada^VARSQL(StockHistory.Item) as CodContaEntrada, $$SQLGetDescContaEntrada^VARSQL(StockHistory.Item) as DescContaEntrada, "_
					"  '' As TermFlag "_

					" FROM alSOH.dStockHistory StockHistory "_

					" WHERE ($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 7) "_
					" AND ($$GetTipoEstorno^VARFechamentoContabil(StockHistory.Reference) = 1) "_
					" AND ($$GetFornecedorEstorno^VARFechamentoContabil(StockHistory.Reference) <> $$GetFornFechamentoContabil^VARSQL()) "_
					" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "_
					" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "_

					" ) "_
					$$GetFiltroSQL(pMes, pAno, pLocal, pGrupo, pProduto, pNotaFiscal, pSerie, pFornecedor, "D")_
					" ORDER BY DataEmissao, Fornecedor, Notafiscal "
	;w strSql
	#dim rs As %ResultSet
	set rs = ##class(%ResultSet).%New()
	do rs.Prepare(strSql)
	do rs.Execute()

	set count = 0
	set rsStatus = rs.Next()

	set lstHeader = $listbuild("Produto", "Conta Contábil", "Conta Entrada", "U. A.", "Estoc.", "Est", "Sim", "Qtde.", "Vl. Aquisição (R$)", "Vl. Fr. Item (R$)", "Vl. Total (R$)")
	
   	while (rsStatus) {
		set diaAtual = rs.Get("DataEmissao")
		set totalDiaAtual 	= 0
		set totalPorData  	= 0
		write "	<hr /><h2>&nbsp;"_diaAtual_"</h2>",!
		
	   	while (rsStatus) {
		   	if (diaAtual '= rs.Get("DataEmissao")) quit
			set fornecedorAtual = rs.Get("Fornecedor")
			set totalFornecedor = 0
			Write "	<div style='border-width:1px;border-style:dashed;border-color:gray;background-color:#E3E3E3;padding:10px;margin-top:10px;'>",!
			Write "	<h3>"_(fornecedorAtual)_" - "_($$SQLGetDescFornecedor^VARSQL(fornecedorAtual))_"</h3>",!
			
			
		   	while (rsStatus) {
			   	if ((diaAtual '= rs.Get("DataEmissao")) || (fornecedorAtual '= rs.Get("Fornecedor"))) quit
				set notaAtual = rs.Get("NotaFiscal")
				set totalNotaEstornada = 0
				set VencimentoParcela = rs.Get("VencimentoParcela")
				// LEAN-52: Recupera a data de emissão da NF
				set dtEmissaoNF = rs.Get("DataEmissao")
				if (rs.Get("SituacaoNota") = "Normal") {
					if (rs.Get("Documento") '= "") {
						set dtEmissaoNF = $$$INRECInvoiceDate($get(^INREC(YM,rs.Get("Documento"),1)))
						if (dtEmissaoNF '= "") {
							set VencimentoParcela = $$GetDiasVencimento^VAREntradaNotaFiscal(dtEmissaoNF,rs.Get("TermFlag"))
							
							set dtEmissaoNF = $zdate(dtEmissaoNF,4)
						}
					}
				}

				Write "	<div style='border-width:1px;border-style:dotted;border-color:gray;background-color:#E3E3E3;padding:10px;margin-top:10px;'>",!
				Write "		<table style=""font-size:10pt;width:600px;text-align:left;"">",!
				Write "			<tr>",!
				Write "				<th><strong>Nº. Nota Fiscal</strong></th>",!
				Write "				<th><strong>Situação da Nota</strong></th>",!
				Write "				<th><strong>Data de Emissão</strong></th>",!
				Write "				<th><strong>Data de Digitação</strong></th>",!
				Write "				<th><strong>Ordem de Compra</strong></th>",!
				Write "				</tr>",!
				Write "			<tr>",!
		]]><![CDATA[		Write "				<td>"_(rs.Get("NotaFiscal"))_"</td>",!
				Write "				<td>"_(rs.Get("SituacaoNota"))_"</td>",!
				Write "				<td>"_(dtEmissaoNF)_"</td>",!
				Write "				<td>"_(rs.Get("DataDigitacao"))_"</td>",!
				Write "				<td>"_(rs.Get("OrdemCompra"))_"</td>",!
				Write "			</tr>",!
				Write "		</table>",!
				
				set ^CacheTempEntradaNotaFiscalXLS(YM,YUSER,YBED,0,1) = "No. Nota Fiscal~Fornecedor~Situação da nota~Data de Emissão~Data Digitação~ Valor do Frete~Valor do Desconto~ Valor Total da Nota~Dias~%Parcela~Valor Parcela~Vencto"_"~"_$listtostring(lstHeader,"~")
					
			 	if ($$Start^COMTable(lstHeader,,,,$$$NO,$$$NO)) {
				   	while (rsStatus) {
					   	if ((diaAtual '= rs.Get("DataEmissao")) || (fornecedorAtual '= rs.Get("Fornecedor")) || (notaAtual '= rs.Get("NotaFiscal"))) quit
						set count = count + 1
						
						set objExcel = ""
						
					   	do NewLine^COMTable()
						do InsertCell^COMTable(rs.Get("Produto")_" - "_$$SQLGetDescricaoProduto^VARSQL(rs.Get("Produto")))
						do InsertCell^COMTable($$SQLGetCodeDescContaContabil^VARSQL(rs.Get("Produto")))
						do InsertCell^COMTable(rs.Get("CodContaEntrada")_" - "_rs.Get("DescContaEntrada"), , , , "CENTER")
						do InsertCell^COMTable(rs.Get("UnidadeMedida"), , , , "CENTER")
						do InsertCell^COMTable(rs.Get("Estoque"), , , , "CENTER")
						do InsertCell^COMTable(rs.Get("GrupoProduto"), , , , "CENTER")
						do InsertCell^COMTable(rs.Get("Sim"), , , , "CENTER")
						do InsertCell^COMTable($$^WWWTR(0,8,rs.Get("Quantidade"),4), , , , "CENTER")
						do InsertCell^COMTable($$^WWWTR(0,8,rs.Get("ValorUnitario"),4)_"&nbsp;&nbsp;", , , , "RIGHT")
						do InsertCell^COMTable($$^WWWTR(0,8,rs.Get("ValorFreteItem"),4)_"&nbsp;&nbsp;", , , , "RIGHT")
						do InsertCell^COMTable($$^WWWTR(0,8,rs.Get("ValorProduto"),4)_"&nbsp;&nbsp;", , , , "RIGHT")
						do EndLine^COMTable()
						
						set objExcel = rs.Get("NotaFiscal")_"~"_rs.Get("Fornecedor")_"-"_rs.Get("DescFornecedor")_"~"_rs.Get("SituacaoNota")_"~"_dtEmissaoNF_"~"_rs.Get("DataDigitacao")_"~"_rs.Get("ValorFrete")_"~"_rs.Get("ValorDesconto")_"~"_rs.Get("ValorTotalNota")_"~"_rs.Get("DiasPagamento")_"~"_rs.Get("PorcentagemParcelas")_"~"_rs.Get("ValorParcela")_"~"_VencimentoParcela
						set objExcel = objExcel _"~"_ rs.Get("Produto")_" - "_$$SQLGetDescricaoProduto^VARSQL(rs.Get("Produto"))
						set objExcel = objExcel _"~"_ $$SQLGetCodeDescContaContabil^VARSQL(rs.Get("Produto"))
						set objExcel = objExcel _"~"_ (rs.Get("CodContaEntrada")_" - "_rs.Get("DescContaEntrada"))
						set objExcel = objExcel _"~"_ rs.Get("UnidadeMedida")
						set objExcel = objExcel _"~"_ rs.Get("Estoque")
						set objExcel = objExcel _"~"_ rs.Get("GrupoProduto")
						set objExcel = objExcel _"~"_ rs.Get("Sim")
						set objExcel = objExcel _"~"_ rs.Get("Quantidade")
						set objExcel = objExcel _"~"_ $$^WWWTR(0,8,rs.Get("ValorUnitario"),4)
						set objExcel = objExcel _"~"_ $$^WWWTR(0,8,rs.Get("ValorFreteItem"),4)
						set objExcel = objExcel _"~"_ $$^WWWTR(0,8,rs.Get("ValorProduto"),4)
						
						set ^CacheTempEntradaNotaFiscalXLS(YM,YUSER,YBED,count,1) = objExcel
						
						set totalFornecedor = totalFornecedor + rs.Get("ValorProduto")
						set totalPorData	= totalPorData + rs.Get("ValorProduto")
						
						if (rs.Get("SituacaoNota") = "Estornada") {
							set totalNotaEstornada = totalNotaEstornada + rs.Get("ValorProduto")
						}
						
						set totalNotaAtual 			 = rs.Get("ValorTotalNota")
						set freteAtual 				 = rs.Get("ValorFrete")
						set descontoAtual 			 = rs.Get("ValorDesconto")
						set parcelasAtual 			 = rs.Get("Parcelas")
						set diasPagamentoAtual 		 = rs.Get("DiasPagamento")
						set porcentagemParcelasAtual = rs.Get("PorcentagemParcelas")
						set valorParcelaAtual 		 = +rs.Get("ValorParcela")
						set vencimentoParcelaAtual 	 = VencimentoParcela
						set observacaoAtual 		 = rs.Get("Observacao")
						set situacaoNota 			 = rs.Get("SituacaoNota")
						set rsStatus 				 = rs.Next()
				   	}
				   	
					do Stop^COMTable()
					
					Write "	<table style=""font-size:10pt;width:600px;"">",!
					Write "		<tr>",!
					Write "			<td colspan=""4""><strong>Valor do Frete:</strong> R$ "_($$FormatCurrency^VARSQL(freteAtual))_"</td>",!
					Write "		</tr>",!
					Write "		<tr>",!
					Write "			<td colspan=""4""><strong>Valor do Desconto:</strong> R$ "_($$FormatCurrency^VARSQL(descontoAtual))_"</td>",!
					Write "		</tr>",!
					Write "		<tr>",!
					Write "			<td colspan=""4""><strong>Valor Total da Nota:</strong> R$ "_($$FormatCurrency^VARSQL(totalNotaAtual))_"</td>",!
					Write "		</tr>",!
					Write "		<tr>",!
					Write "			<td><strong>Dias:</strong> "_(diasPagamentoAtual)_"</td>",!
					Write "			<td><strong>% Parcela:</strong> "_(porcentagemParcelasAtual)_"</td>",!
					Write "			<td><strong>Valor da Parcela:</strong> R$ "_($$FormatCurrency^VARSQL(valorParcelaAtual))_"</td>",!
					Write "			<td><strong>Vencimento:</strong> "_(vencimentoParcelaAtual)_"</td>",!
					Write "		</tr>",!
					Write "	</table>",!
					
					if (+pObservacao) {
						write "	<strong>Observações:</strong> "_observacaoAtual,!
					}
					if (situacaoNota = "Normal") {
						set totalDiaAtual = totalDiaAtual + totalNotaAtual
					}
					elseif (situacaoNota = "Estornada") {
						set totalDiaAtual = totalDiaAtual + totalNotaEstornada
					}

					write "	</div>",!
			 	}
		   	}
		   	
		   	set totalFornecedor = totalFornecedor + freteAtual
		   	set totalPorData	= totalPorData + freteAtual
		   	
		   	write "	<h3>&nbsp;Valor Total do Fornecedor: R$ "_($$FormatCurrency^VARSQL(totalFornecedor))_"</h3>",!
		   	write "	</div>",!
	   	}
	   	write "	<h2>&nbsp;Valor Total da Data: R$ "_$$FormatCurrency^VARSQL(totalPorData)_"</h2>",!
	   	;write "	<h2>&nbsp;Valor Total da Data: R$ "_$$FormatCurrency^VARSQL(totalDiaAtual)_"</h2>",!
   	}
	if ('count) {
	   	write "	<br /><strong>Nenhum registro encontrado.</strong>",!
	}

	do rs.Close()
  	
	quit

CheckFechamentoContabil(pMes,pAno)
	new status, CheckPeriodo
	set status = $$$NO
	quit $$$OK
	set CheckPeriodo = $$SQLGetUserParamDescVAR^VARSQL("VARPERIODOFECHAMENTO~"_pMes_"/"_pAno)
	
	if (CheckPeriodo '= ""){
		set status = $$$OK
	}
	
	quit status
	
GetFiltroSQL(pMes, pAno, pLocal, pGrupo, pProduto, pNotaFiscal, pSerie, pFornecedor, pTipoData = "E")
	new strSQL
	set strSQL = ""

	if pTipoData="E" {
		set strSQL = strSQL_
				" WHERE $$SQLGetAno^VARSQL($$SQLGetDataInterna^VARSQL(DataEmissao)) = "_pAno_" "_
				" AND $$SQLGetMes^VARSQL($$SQLGetDataInterna^VARSQL(DataEmissao)) = "_pMes_" "
	} else {
		set strSQL = strSQL_
				" WHERE $$SQLGetAno^VARSQL($$SQLGetDataInterna^VARSQL(DataDigitacao)) = "_pAno_" "_
				" AND $$SQLGetMes^VARSQL($$SQLGetDataInterna^VARSQL(DataDigitacao)) = "_pMes_" "
	}
	
	if ($length(pLocal) >0) {
		set strSQL = strSQL_
					 "AND LocalRec = '"_pLocal_"' "
	}
	
	if ($length(pGrupo) >0) {
		if ($$SQLGetGrupoPai^VARSQL(pGrupo) = pGrupo){
			set strSQL = strSQL_
			 " AND $$SQLGetGrupoPai^VARSQL(GrupoProduto) = '"_pGrupo_"' "
		}else{
			set strSQL = strSQL_
			 " AND GrupoProduto = '"_pGrupo_"' "
	
		}		
	}	
	if ($length(pProduto) >0) {
		set strSQL = strSQL_
					 " AND Produto = '"_pProduto_"' "
	}
	if ($length(pNotaFiscal) >0) {
		set strSQL = strSQL_
					 " AND $piece(NotaFiscal,'-',1) = '"_pNotaFiscal_"' "
	}
	if ($length(pSerie) >0) {
		set strSQL = strSQL_
					 " AND $piece(NotaFiscal,'-',2) = '"_pSerie_"' "
	}
	if ($length(pFornecedor) >0){
		set strSQL = strSQL_
					 " AND Fornecedor = '"_pFornecedor_"' "
	}	
	
	quit strSQL

GetFiltroSQLSintetico(pMes, pAno, pLocal, pGrupo, pProduto, pNotaFiscal, pSerie, pFornecedor)
	new strSQL
	set strSQL = ""

	set strSQL = strSQL_
				"AND $$SQLGetAno^VARSQL(INREC1.ProcessedDate) = "_pAno_" "_
				"AND $$SQLGetMes^VARSQL(INREC1.ProcessedDate) = "_pMes_" "
	
	if ($length(pLocal) >0) {
		set strSQL = strSQL_
					 "AND INREC1.Location = '"_pLocal_"' "
	}
	if ($length(pGrupo) >0) {
		if ($$SQLGetGrupoPai^VARSQL(pGrupo) = pGrupo){
			set strSQL = strSQL_
			 " AND $$SQLGetGrupoPai^VARSQL($extract($$SQLGetGrupoItem^VARSQL(INRECSummary.Item),1,3)) = '"_pGrupo_"' "
		}else{
			set strSQL = strSQL_
		   		"AND $extract($$SQLGetGrupoItem^VARSQL(INRECSummary.Item),1,3) = '"_pGrupo_"' "
	
		}		
	}
	if ($length(pProduto) >0) {
		set strSQL = strSQL_
					 "AND INRECSummary.Item = '"_pProduto_"' "
	}
	if ($length(pNotaFiscal) >0) {
		set strSQL = strSQL_
					 "AND INREC1.InvoiceNumber = '"_pNotaFiscal_"' "
	}
	if ($length(pSerie) >0) {
		set strSQL = strSQL_
					 "AND INREC1.FREE3 = '"_pSerie_"' "
	}
	if ($length(pFornecedor) >0){
		set strSQL = strSQL_
					 " AND INREC1.Supplier = '"_pFornecedor_"' "
	}
	
	quit strSQL

GetDiasVencimento(pData, pCondicao)
	if (($length(pData)=0) || ($length(pCondicao)=0)) quit ""
	$$$VAR
	set listaDias = $listFromString($$$INKONDFREE2(^INKOND(YM,pCondicao,1)),$$$COMMA)
	set ptr = 0
	set strDiasVencimento = ""
	while ($listNext(listaDias,ptr,dia)) {
		set strDiasVencimento = strDiasVencimento_$$SQLGetDataFormatada^VARSQL(pData+dia)_", "
	}
	set strDiasVencimento = $extract(strDiasVencimento,1,$length(strDiasVencimento)-2)
	
	quit strDiasVencimento

Imprimir()
	new objEntradaNotaFiscal, vVisao, vMes, vAno, vLocal, vGrupo, vProduto, vNotaFiscal, vSerie, vObservacao
	
	if (^WWWDATEN(YM,+$horolog,YUSER,YFORM,"M",1) '= ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"M",2)) {
		$$$Alert("É necessário salvar os novos filtros antes de imprimir o relatório.")
		do GoToForm^COMUtilForm(YFORM,"")
		quit
	}
	
	set objEntradaNotaFiscal = $get($$$FiltroEntradaNotaFiscal)
	
	set vVisao		= $$$VARTempEntradaNotaFiscalVisao(objEntradaNotaFiscal)
	set vMes		= $$$VARTempEntradaNotaFiscalMes(objEntradaNotaFiscal)
	set vAno		= $$$VARTempEntradaNotaFiscalAno(objEntradaNotaFiscal)
	set vLocal		= $$$VARTempEntradaNotaFiscalLocal(objEntradaNotaFiscal)
	set vGrupo		= $$$VARTempEntradaNotaFiscalGrupo(objEntradaNotaFiscal)
	set vProduto	= $$$VARTempEntradaNotaFiscalProduto(objEntradaNotaFiscal)
	set vNotaFiscal	= $$$VARTempEntradaNotaFiscalNotaFiscal(objEntradaNotaFiscal)
	set vSerie		= $$$VARTempEntradaNotaFiscalSerie(objEntradaNotaFiscal)
	set vObservacao	= $$$VARTempEntradaNotaFiscalObservacao(objEntradaNotaFiscal)
	set vFornecedor = $$$VARTempEntradaNotaFiscalFornecedor(objEntradaNotaFiscal)
	
	if ($$CheckFechamentoContabil(vMes,vAno) = $$$NO){
		$$$Alert("Este relatório está disponível somente para os meses/anos que já foi enviado o fechamento contábil.")
		do GoToForm^COMUtilForm(YFORM,"")
		quit 
	}
	
	if (vVisao = 1) {
		do RunReportEntradaNotaFiscalSintetico^VARJasperRunReport(vMes, vAno, vLocal, vGrupo, vProduto, vNotaFiscal, vSerie, vObservacao, vFornecedor)
	}
	elseif (vVisao = 2) {
		do RunReportEntradaNotaFiscalAnalitico^VARJasperRunReport(vMes, vAno, vLocal, vGrupo, vProduto, vNotaFiscal, vSerie, vObservacao, vFornecedor)
	}
	
	quit
	
GetFornecedorEstorno(pTxnCode)
	$$$VAR

	if ($length(pTxnCode) = 0) quit ""
	
	set RecOrigem = $$$INRECReceiptSourceNo($get(^INREC(YM, pTxnCode, 1)))
	quit:RecOrigem="" ""
	
	quit $$$INRECSupplier($get(^INREC(YM, RecOrigem, 1)))

GetNotaFiscalEstorno(pTxnCode)
	$$$VAR

	if ($length(pTxnCode) = 0) quit ""
	
	set RecOrigem = $$$INRECReceiptSourceNo($get(^INREC(YM, pTxnCode, 1)))
	quit:RecOrigem="" ""
	
	set objRecOrigem = $get(^INREC(YM, RecOrigem, 1))
	
	if ($$$INRECFREE3(objRecOrigem) = ""){
		quit $$$INRECInvoiceNumber(objRecOrigem)
	} else {
		quit "E"_$$$INRECInvoiceNumber(objRecOrigem)_"-"_$$$INRECFREE3(objRecOrigem)
	}
	
	quit ""
	
GetOrdemCompraEstorno(pTxnCode)
	$$$VAR

	if ($length(pTxnCode) = 0) quit ""
	
	set RecOrigem = $$$INRECReceiptSourceNo($get(^INREC(YM, pTxnCode, 1)))
	quit:RecOrigem="" ""
	
	quit $$$INRECFREE10($get(^INREC(YM, RecOrigem, 1)))
	
GetSaldoSinteticoEstornada(pMes,pAno,pGrupoPai="")
	set ValorEstornada = 0

	&sql(
		SELECT 
		SUM(ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4)) as TxValue
		INTO ValorEstornada
		
		FROM alSOH.dStockHistory StockHistory

		WHERE ($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 7)
		AND ($$GetTipoEstorno^VARFechamentoContabil(StockHistory.Reference) = 1)
		AND ($$GetFornecedorEstorno^VARFechamentoContabil(StockHistory.Reference) <> $$GetFornFechamentoContabil^VARSQL())
		AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída')
		AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0)

		AND $$SQLGetAno^VARSQL(StockHistory.DateConfirmed) = :pAno
		AND $$SQLGetMes^VARSQL(StockHistory.DateConfirmed) = :pMes

		GROUP BY $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(StockHistory.Item))
	)
	
	quit ValorEstornada
	
ExportarExcel()
	$$$VAR
	if ('$data(^CacheTempEntradaNotaFiscalXLS(YM,YUSER,YBED))) {
		$$$Alert("IN00740")
	}
	else {
		do ExportarExcel^VARExportarExcel("CacheTempEntradaNotaFiscalXLS")
	}
	do GoToForm^COMUtilForm("VAREntradaNotaFiscal",1,,,,,)
	quit]]></Routine>
</Export>