<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMPIT16510A" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMPIT16510A
#include COMSYS
#include INConst
 
Execute(pidLog)
	;-------------------------------------------------------------------------------
	; Post Installation Task : <Populate INItemPolicy data with existing alINV.dItemPolicy>
	; 
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 23-Jun-2009 	PPP 	SR16510: Populate INItemPolicy data with previousy
	;						existing alINV.dItemPolicy
	;-------------------------------------------------------------------------------
	new strStatus,strThis
	
	;---------------------------------------
	;  Ensure required variables are set
	;---------------------------------------
	$$$VAR
	
	;---------------------------------------
	;  Use routine name to ensure routine
	;  is run only once.
	;---------------------------------------
	set strThis   = $zname
	set $ztrap="ExecuteError"
	
	quit:$data(^LogUpgradeHandler(strThis))
	
	;---------------------------------------
	;  Actual Data Change
	;---------------------------------------
	tstart
 	
 	set strStatus = $$$OK
 	 
	set ^LogUpgradeHandler(strThis)=$horolog

	kill ^COMConversion(0,"INItemPolicy",1)
	
	if $$$ISOK(strStatus) {
		if '$data(^INItemPolicy(YM,1)) {
			set objPolicy = "Blank Policy~~~1~1"
			set strStatus = $$$Save("INItemPolicy",1,objPolicy,$$$YES)
		}
	}

	if $$$ISOK(strStatus) {
		if '$data(^INItemPolicy(YM,2)) {
			set objPolicy = "Lot Num Policy~1~~~1"
			set strStatus = $$$Save("INItemPolicy",2,objPolicy,$$$YES)
		}
	}

	if $$$ISOK(strStatus) {
		if '$data(^INItemPolicy(YM,3)) {
			set objPolicy = "Lot Num Policy~1~~~2"
			set strStatus = $$$Save("INItemPolicy",3,objPolicy,$$$YES)
		}
	}

	if $$$ISOK(strStatus) {
		if '$data(^INItemPolicy(YM,4)) {
			set objPolicy = "Use By Date Policy~1~1~~3"
			set strStatus = $$$Save("INItemPolicy",4,objPolicy,$$$YES)
		}
	}

	set ^COMConversion(0,"INItemPolicy",1)="alSOH.dUSourcingPolicy"

	if $$$ISERR(strStatus) {	
		trollback
		do AddMessage^COMLog(pidLog,"Data conversion failure: "_$$$Text(strStatus))
	
	} else {
		tcommit
	}
	quit
	
ExecuteError ; Internal Tag
	set $ztrap=""
	do:$get(pidLog)'="" AddMessage^COMLog(pidLog,strThis_": Failure "_$zcvt($zerror,"o","JS"))
	
	quit
 
 	
]]></Routine>
</Export>