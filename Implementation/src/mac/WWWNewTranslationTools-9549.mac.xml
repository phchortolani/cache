<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWNewTranslationTools" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWNewTranslationTools
	#include COMSYS
	#include WWWConst
 
 
Format(pstrClass,pstrKey,pstrField,pstrDescription,pstrlng1Text,pstrlng2Text)
	;-------------------------------------------------------------------------------
	; Formatting of a line of the report
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new strText
	
	set strText=pstrClass_" "_pstrKey_" "_pstrField_" "_pstrDescription_" "_pstrlng1Text_" "_pstrlng2Text_" "_$$$CRLF
	;set strText=$$LJustify(pstrClass,15)_" "_$$LJustify(pstrKey,25)_" "_$Justify(pstrField,5)_" "_$$LJustify(pstrDescription,20)_" "_$$LJustify(pstrlng1Text,25)_" "_$$LJustify(pstrlng2Text,24)_" "_$$$CRLF
	;set strText=$$Replace^COMUtilStr(strText," ","&nbsp;")
	quit strText
 
 
LJustify(pstrText,pintWidth)
	;-------------------------------------------------------------------------------
	; Left justify a field
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	quit $reverse($justify($reverse(pstrText),pintWidth))
 
 
Append(pobjMessage,pstrType,pstrLine)
	;-------------------------------------------------------------------------------
	; adds a line of text.  Written to handle large amounts of data.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new intCurrent
	
	set intCurrent=$order(pobjMessage(pstrType,""),-1)+1
	if $get(pobjMessage(pstrType,intCurrent))="" set pobjMessage(pstrType,intCurrent)=""
	if ($length(pobjMessage(pstrType,intCurrent))+$length(pstrLine))>32255 {
		set intCurrent=intCurrent+1
		set pobjMessage(pstrType,intCurrent)=""
	}
	set pobjMessage(pstrType,intCurrent)=pobjMessage(pstrType,intCurrent)_pstrLine
	quit
 
 
Display(&pobjMessage,pblnEmail=$$$NO,plng2="PT",pintTotalErrors=0)
	;-------------------------------------------------------------------------------
	; Display the results to a terminal prompt or send an email to all translators
	; with an email address defined.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 21-Mar-2007	GRF		SR15482: replace to package message in ^WWWSOR (Now adding
	; 						<BR> to each line in WWWSMTP2)
	; 01-Dec-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new arrEmail,idMessage,idWWW013,loop,objWWW013,strEmailAddr,strStatus
	
	if 'pblnEmail {
		write pobjMessage("Header")
		for loop=1:1:$order(pobjMessage("Body",""),-1) {
			write pobjMessage("Body",loop)
		}
		write pobjMessage("Summary")
	} else {
		set idMessage = $$Allocate^WWWMAILS()
		set ^WWWSOR(idMessage,loop) = pobjMessage("Header")_"<BR>"
		for loop=1:1:$order(pobjMessage("Body",""),-1) {
			set ^WWWSOR(idMessage,loop+2) = pobjMessage("Body",loop)
		}
		set loop = $order(^WWWSOR(idMessage,""),-1)+1
		set ^WWWSOR(idMessage,loop) = pobjMessage("Summary")
		
		if (pintTotalErrors>0) {
			set idWWW013=""
			for {
				set idWWW013=$order(^WWW013(0,idWWW013))
				quit:idWWW013=""
				
				set objWWW013=$get(^WWW013(0,idWWW013,1))
				if $$$WWW013CompilerTranslator(objWWW013)=plng2 {
					set strEmailAddr = $$$WWW013EMailAddress(objWWW013)
					if (strEmailAddr'="") {
						if '$data(arrEmail(strEmailAddr)) {
							set arrEmail(strEmailAddr) = ""
							set strStatus=$$PackageMail^WWWMAILS(idMessage,"Translation Errors",strEmailAddr,$$$WWW013Name(objWWW013),"","Translation")
						}
					}
				}
			}
		}
		do Deallocate^WWWMAILS(idMessage)
	}
	quit
	
	/*
oldDisplay(pobjMessage,pblnEmail=$$$NO,plng2="PT",pintTotalErrors=0)
	;-------------------------------------------------------------------------------
	; Display the results to a terminal prompt or send an email to all translators
	; with an email address defined.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 21-Mar-2007	GRF		SR15482: replaced to package message in ^WWWSOR
	; 01-Dec-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new i,objWWW013,idWWW013,strMessage,idType,strEmail,intLength,TEXT
	
	if 'pblnEmail {
		write pobjMessage("Header")
		for i=1:1:$order(pobjMessage("Body",""),-1) {
			write pobjMessage("Body",i)
		}
		write pobjMessage("Summary")
	} else {
		set TEXT(1)=pobjMessage("Header")_"<BR><BR>"
		for i=1:1:$order(pobjMessage("Body",""),-1) {
			set TEXT(i+2)=$$Replace^COMUtilStr(pobjMessage("Body",i),$$$CRLF,"<BR>")
		}
		set TEXT($order(TEXT(""),-1)+1)=$$Replace^COMUtilStr(pobjMessage("Summary"),$$$CRLF,"<BR>")
	}
		
	if (pblnEmail)&&(pintTotalErrors>0) {
		set idWWW013=""
		for {
			set idWWW013=$order(^WWW013(0,idWWW013))
			quit:idWWW013=""
			
			set objWWW013=$get(^WWW013(0,idWWW013,1))
			if $$$WWW013CompilerTranslator(objWWW013)=plng2 {
				if $$$WWW013EMailAddress(objWWW013)'="" {
					;WWWMAILS(    HOST,             , SENDER               ,RECEIP                          ,SUBJECT             ,TXT  ,DISPLAYFROM  ,DISPLAYTO  ,USER  ,PASS)
					do ^WWWMAILS("mail.disclinc.com","support@disclinc.com",$$$WWW013EMailAddress(objWWW013),"Translation Errors",,"Translation",$$$WWW013Name(objWWW013))	
				}
			}
		}
	}
	quit
	*/
	
INDRPPARA(plng1="EN",plng2="PT",pblnEmail=$$$NO)
	;-------------------------------------------------------------------------------
	; Formatting of a line of the report
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034: Rewritten to store results in an array which
	; 									may be sent in an email
	;-------------------------------------------------------------------------------
	new idx1,obj1,obj2,idx2,strMessage,objError,intCount,idKey
	new obj1Comp,obj2Comp,idx,intMax,strSpacer,intTotalCount,strError,intErrors,intTotalErrors
 	new objMessage
 	
	if $get(Y)="" do ^WWWVAR
	set intCount=0
	set intTotalCount=0
	set intTotalErrors=0
	set idx1=""
	set objMessage("Header")=$$Format("Class","Key","Field","Description",plng1_" value",plng2_" value")
	for {
		set idx1=$order(^INDRPPARA(YM,idx1))
		quit:idx1=""
		
		set idx2=""
		for {
			set intErrors=0
			set idx2=$order(^INDRPPARA(YM,idx1,plng1,idx2))
			quit:idx2=""
			
			set obj1=$get(^INDRPPARA(YM,idx1,plng1,idx2,1))
			set obj2=$get(^INDRPPARA(YM,idx1,plng2,idx2,1))
 
			set idKey=idx1_$$$COMMA_plng2_$$$COMMA_idx2
 
			if obj2="" {
				do Append(.objMessage,"Body",$$LogError("INDRPPARA",idKey,-1,obj1,obj2,"Parameter missing!",.intErrors))
			} else {
				;do Append(.objMessage,$$StandardErrorCheck("WWW1203",idx1,idKey,$$$FldWWW1203PictureFileForPageTag,obj1,obj2,.intErrors))
			}
			;do DefinitionCheck("INDRPPARA",idx1,idKey,obj1,obj2,.intErrors,";"_$$$FldWWW1203PictureFileForPageTag_";","Tab")
 			if intErrors>0 {
	 			set intCount=intCount+1
 			}
 			set intTotalCount=intTotalCount+1
 			set intTotalErrors=intTotalErrors+intErrors
		}
	}
	set objMessage("Summary")=$$Summary(intCount,intTotalCount,intTotalErrors)
	do Display(.objMessage,pblnEmail,plng2,intTotalErrors)
	quit
 
 
 
FormPrimaryKey(plng1="EN",plng2="PT")
 	do FromDefault(plng1,plng2,"WWW1211")
 	quit
 
 
FromDefault(plng1="EN",plng2="PT",pstrClass="")
	;-------------------------------------------------------------------------------
	; Creates a list of likely errors in tabs by comparing the second specified
	; language with the first.
	; Run from the terminal prompt.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034:	LogError and StandardErrorCheck not return strings
	; 21-Sep-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new strForm,obj1,obj2,intNumber,strMessage,objError,intCount,idKey
	new obj1Comp,obj2Comp,idx,intMax,strSpacer,intTotalCount,strError,intErrors,intTotalErrors
	new intIndex,strBaseClass
	
	if $get(Y)="" do ^WWWVAR
	set intCount=0
	set intTotalCount=0
	set intTotalErrors=0
	set strForm=""
	set strBaseClass=$extract(pstrClass,1,$length(pstrClass)-1)
	write "Class"_$$$TAB_"Key"_$$$TAB_"Field"_$$$TAB_"Description"_$$$TAB_plng1_" value"_$$$TAB_plng2_" value"
 
	for {
		xecute "set strForm=$order(^"_strBaseClass_"(0,strForm))"
		quit:strForm=""
		
		set intNumber=""
		for {
			xecute "set intNumber=$order(^"_strBaseClass_"(0,strForm,intNumber))"
			quit:intNumber=""
			
			set obj1=""
			xecute "set obj1=$get(^"_strBaseClass_"(0,strForm,intNumber,1))"
			if obj1'="" {
				set intErrors=0
				set obj2=""
				xecute "set obj2=$get(^"_pstrClass_"(0,strForm,intNumber,plng2,1))"
	 
				set idKey=strForm_$$$COMMA_intNumber_$$$COMMA_plng2
	 
				if obj2="" {
					write $$LogError(pstrClass,idKey,0,obj1,obj2,"Record missing!",.intErrors)
				} else {
					write $$StandardErrorCheck(pstrClass,strForm,idKey,1,obj1,obj2,.intErrors)
				}
	 			if intErrors>0 {
		 			set intCount=intCount+1
	 			}
	 			set intTotalCount=intTotalCount+1
	 			set intTotalErrors=intTotalErrors+intErrors
			}
		}
	}
	write $$Summary(intCount,intTotalCount,intTotalErrors)
	quit
 
 
Tab(plng1="EN",plng2="PT")
	;-------------------------------------------------------------------------------
	; Creates a list of likely errors in tabs by comparing the second specified
	; language with the first.
	; Run from the terminal prompt.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034:	LogError and StandardErrorCheck not return strings
	; 21-Sep-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new strForm,obj1,obj2,intNumber,strMessage,objError,intCount,idKey
	new obj1Comp,obj2Comp,idx,intMax,strSpacer,intTotalCount,strError,intErrors,intTotalErrors
	
	if $get(Y)="" do ^WWWVAR
	set intCount=0
	set intTotalCount=0
	set intTotalErrors=0
	set strForm=""
	write "Class"_$$$TAB_"Key"_$$$TAB_"Field"_$$$TAB_"Description"_$$$TAB_plng1_" value"_$$$TAB_plng2_" value"
	for {
		set strForm=$order(^WWW1203(0,strForm))
		quit:strForm=""
		
		set intNumber=""
		for {
			set intErrors=0
			set intNumber=$order(^WWW1203(0,strForm,plng1,intNumber))
			quit:intNumber=""
			continue:$extract(strForm,1,6)="REPRUN"
			
			set obj1=$get(^WWW1203(0,strForm,plng1,intNumber,1))
			set obj2=$get(^WWW1203(0,strForm,plng2,intNumber,1))
 
			set idKey=strForm_$$$COMMA_plng2_$$$COMMA_intNumber
 
			if obj2="" {
				write $$LogError("WWW1203",idKey,0,obj1,obj2,"Tab missing!",.intErrors)
			} else {
				write $$StandardErrorCheck("WWW1203",strForm,idKey,$$$FldWWW1203PictureFileForPageTag,obj1,obj2,.intErrors)
			}
			do DefinitionCheck("WWW1203",strForm,idKey,obj1,obj2,.intErrors,";"_$$$FldWWW1203PictureFileForPageTag_";","Tab")
 			if intErrors>0 {
	 			set intCount=intCount+1
 			}
 			set intTotalCount=intTotalCount+1
 			set intTotalErrors=intTotalErrors+intErrors
		}
	}
	write $$Summary(intCount,intTotalCount,intTotalErrors)
	quit
 
StandardErrorCheck(pstrClass,pstrForm,pidKey,pintField,pobj1,pobj2,pintErrors)
	;-------------------------------------------------------------------------------
	; Error checks that are common for each type of check.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034:	LogError and StandardErrorCheck not return strings
	; 21-Sep-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new objWWW003,strError
	
	set strError=""
	set objWWW003=$get(^WWW003(0,pstrClass,pintField,1))
	if ($piece(pobj1,Y,pintField)=$piece(pobj2,Y,pintField))&&($piece(pobj1,Y,pintField)'="") {
		set strError=$$LogError(pstrClass,pidKey,pintField,pobj1,pobj2,"'"_$$$WWW003CaptionInForms(objWWW003)_"' not translated!",.pintErrors)
	}
	if ($piece(pobj1,Y,pintField)'="")&&($piece(pobj2,Y,pintField)="") {
		set strError=strError_$$LogError("WWW1203",pidKey,pintField,pobj1,pobj2,"'"_$$$WWW003CaptionInForms(objWWW003)_"' missing!",.pintErrors)
	}
	quit strError
	
	
Button(plng1="EN",plng2="PT")
	;-------------------------------------------------------------------------------
	; Creates a list of likely errors in buttons by comparing the second specified
	; language with the first.
	; Run from the terminal prompt.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034:	LogError and StandardErrorCheck not return strings
	; 21-Sep-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new strForm,obj1,obj2,intNumber,strMessage,objError,intCount,idKey
	new obj1Comp,obj2Comp,idx,intMax,strSpacer,intTotalCount,strError,intErrors,intTotalErrors
	
	if $get(Y)="" do ^WWWVAR
	set intCount=0
	set intTotalCount=0
	set intTotalErrors=0
	set strForm=""
	write "Class"_$$$TAB_"Key"_$$$TAB_"Field"_$$$TAB_"Description"_$$$TAB_plng1_" value"_$$$TAB_plng2_" value"
	for {
		set strForm=$order(^WWW124(0,strForm))
		quit:strForm=""
		
		set intNumber=""
		for {
			set intErrors=0
			set intNumber=$order(^WWW124(0,strForm,plng1,intNumber))
			quit:intNumber=""
			
			set obj1=$get(^WWW124(0,strForm,plng1,intNumber,1))
			set obj2=$get(^WWW124(0,strForm,plng2,intNumber,1))
 
			set idKey=strForm_$$$COMMA_plng2_$$$COMMA_intNumber
 
			if obj2="" {
				write $$LogError("WWW124",idKey,0,obj1,obj2,"Button missing!",.intErrors)
			} else {
				if $$$WWW124ButtonDescription(obj2)="" {
					write $$LogError("WWW124",idKey,$$$FldWWW124ButtonDescription,obj1,obj2,"Button 'Description' missing!",.intErrors)
				}
				if ($$$WWW124ButtonDescription(obj1)=$$$WWW124ButtonDescription(obj2))&&($zcvt($$$WWW124ButtonDescription(obj1),"U")'="OK") {
					write $$LogError("WWW124",idKey,$$$FldWWW124ButtonDescription,obj1,obj2,"Button 'Description' "_plng2_" is the same as "_plng1_"!",.intErrors)
				}				
				if $extract($$$WWW124ButtonDescription(obj2),1,3)="***" {
					write $$LogError("WWW124",idKey,$$$FldWWW124ButtonDescription,obj1,obj2,"Button 'Description' not translated properly!",.intErrors)
				}
				write $$StandardErrorCheck("WWW124",strForm,idKey,$$$FldWWW124Hilfe,obj1,obj2,.intErrors)
				write $$StandardErrorCheck("WWW124",strForm,idKey,$$$FldWWW124AcknowledgementTextBefore,obj1,obj2,.intErrors)
			}
			do DefinitionCheck("WWW124",strForm,idKey,obj1,obj2,.intErrors,";"_$$$FldWWW124ButtonDescription_";"_$$$FldWWW124AcknowledgementTextBefore_";"_$$$FldWWW124Hilfe_";","Button")
 			if intErrors>0 {
	 			set intCount=intCount+1
 			}
 			set intTotalCount=intTotalCount+1
 			set intTotalErrors=intTotalErrors+intErrors
		}
	}
	write $$Summary(intCount,intTotalCount,intTotalErrors)
	quit
 
 
DefinitionCheck(pstrClass,pstrForm,pidKey,pobj1,pobj2,pintErrors,pstrExclusions,pstrMessage)
	;-------------------------------------------------------------------------------
	; Check the class definition and find which fields that should be the same are
	; actually different.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034:	LogError and StandardErrorCheck not return strings
	; 21-Sep-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new intMax,idx
	
	set intMax=$order(^WWW003(0,pstrForm,""),-1)
	for idx=1:1:intMax {
		if (pstrExclusions)'[(";"_idx_";") {
			if $piece(pobj1,Y,idx)'=$piece(pobj2,Y,idx) {
				write $$LogError(pstrClass,pidKey,idx,pobj1,pobj2,pstrMessage_" definition changed.",.pintErrors)
			}
		}
	}
	
	
LogError(pstrClass,pidKey,pintField,pobj1,pobj2,pstrMessage,pintErrors)
	;-------------------------------------------------------------------------------
	; Write the error to screen.  TAB separated so that when using terminal logging
	; can be loaded in to Excel.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034:	LogError and StandardErrorCheck not return strings
	; 21-Sep-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new strLink,objData1,objData2
	
	set pintErrors=pintErrors+1
	if pintField'=-1 {
		set pobj1=$piece(pobj1,Y,pintField)
		set pobj2=$piece(pobj2,Y,pintField)
	}
	set strLink="" ;$$getFormLink^TSCompareNamespaces("WWW124", idKey)
	quit $$Format(pstrClass,pidKey,pintField,pstrMessage,pobj1,pobj2)
	
	
Summary(pintCount=0,pintTotalCount=0,pintTotalErrors=0)
	;-------------------------------------------------------------------------------
	; Creates the Error summary.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2006	shobby	SRBR014034: Message is not returned as a string.
	; 21-Sep-2006	shobby	SRBR014034: Created
	;-------------------------------------------------------------------------------
	new strSummary
	
	set strSummary=   $$$CRLF_$$$CRLF_"Total Errors      ="_$justify(pintTotalErrors,7)
	set strSummary=strSummary_$$$CRLF_"Number of items   ="_$justify(pintTotalCount,7)
	set strSummary=strSummary_$$$CRLF_"Total with Errors ="_$justify(pintCount,7)
	set strSummary=strSummary_$$$CRLF_"--------------------------"
	set strSummary=strSummary_$$$CRLF_(((((pintTotalCount-pintCount)/pintTotalCount)*10000)\1)/100_"% Complete")
	quit strSummary
	
 
]]></Routine>
</Export>