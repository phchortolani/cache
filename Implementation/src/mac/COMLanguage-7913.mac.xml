<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMLanguage" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMLanguage
    ;-------------------------------------------------------------------------------
    ; Methods relating to languages and language conversion
    ; 
    ; History:
    ; 13-Nov-2004	GRF		Correction to spelling (langauge and launguage)
    ;-------------------------------------------------------------------------------
#include COMSYS
#include COMConst
#include WWWConst
	
ShowText(pidText,pstrFormOverride="")
    ;-------------------------------------------------------------------------------
    ; Used to show language text gris in @Net.
    ;
    ; History:
    ; 12-May-2006	RPW			SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
    ; 05-Aug-2005	Steve S		Added form override
	; 15-Jul-2005	shobby		SR12754:Replaced LANGUAGE global (not always reliable)
	; 23-Jun-2003	Paul K		Modified to show correct form depending on what
	; 							context it is being used in ("SAL","COM","FIN")
    ;-------------------------------------------------------------------------------
	new idText,arrText,lstHeader,strText,strForm,strEnd
	
	if pstrFormOverride="" {
		set strForm=$$$UPPER(pidText)_"Language"
	} else {
		set strForm=$$$UPPER(pidText)_pstrFormOverride	
	}
	
	set lstHeader=""
	set lstHeader=lstHeader_$lb("Text Number")
	set lstHeader=lstHeader_$lb("Text")
	
	set strEnd=pidText
	if $get(pidText)="" set pidText="COM"
	
	for {
		set pidText=$order(^WWW009(0,SPRACHE,pidText))
		quit:$extract(pidText,1,3)'=strEnd
		
		set arrText(^WWW009(0,SPRACHE,pidText,1))=pidText
		}
	
	if $$Start^COMTable(lstHeader){
		set strText=""
		for {
			set strText=$order(arrText(strText))
			quit:strText=""
			
			do NewLine^COMTable("")
			do InsertCell^COMTable(arrText(strText),strForm,SPRACHE_","_arrText(strText))
			do InsertCell^COMTable(strText,strForm,SPRACHE_","_arrText(strText))
			do EndLine^COMTable()
			}
		do Stop^COMTable()
		}
	quit
 
 /*
ConvertTags(pstrText,pstrFromLanguage="",pstrToLanguage="",pstrReference="")
    ;-------------------------------------------------------------------------------
    ; Converts text, but leaves tags alone.
    ;
    ; Returns:String
    ;
    ; History:
    ; 27-Aug-2004		Paul Kalenjuk			Created
    ;-------------------------------------------------------------------------------
 
	new BracketLoop,strText
	if pstrText'="" {
		for BracketLoop=1:1:$length(pstrText,"<") {
			set strText=""
			if $piece(pstrText,">",1,BracketLoop-1)'="" {
				set strText=$piece(pstrText,">",1,BracketLoop-1)_">"
			}
			if $piece($piece(pstrText,">",BracketLoop),"<",1)'="" {
				set strText=strText_$$ConvertLines($piece($piece(pstrText,">",BracketLoop),"<",1),pstrFromLanguage,pstrToLanguage,pstrReference)
			}
			if $piece(pstrText,"<",BracketLoop+1,999)'="" {
				set strText=strText_"<"_$piece(pstrText,"<",BracketLoop+1,999)
			}
			set pstrText=strText
		}
	}
	quit pstrText
 */
 
 /*
ConvertLines(pstrText,pstrFromLanguage="",pstrToLanguage="",pstrReference="")
    ;-------------------------------------------------------------------------------
    ; Looks for language conversion for each line of passed in text.
    ;
    ; Returns:String
    ;
    ; History:
    ; 27-Aug-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
	new LineLoop
	
	for LineLoop=1:1:$length(pstrText,"|") {
		set $piece(pstrText,"|",LineLoop)=$$ConvertText($piece(pstrText,"|",LineLoop),pstrFromLanguage,pstrToLanguage,pstrReference)
	}
	quit pstrText
 */	
 
 /* Commented out because it's not used.	
ConvertText(pstrText,pstrFromLanguage="",pstrToLanguage="",pstrReference="")
    ;-------------------------------------------------------------------------------
    ; Converts a string from one language to another. caches the results.
    ;
    ; History:
    ; 21-Jul-2004	Paul K	Website changed.
    ; 30-Jun-2004   Paul K	Created
    ;-------------------------------------------------------------------------------
	new %html,blnFound,Correctness,LanguageLoop,Line,objDICTIONARY,strAfter,strBefore
	new strText,strURL
 
	set strText=""
	
	if pstrText'="" {
		if (pstrFromLanguage="EN")&&(pstrToLanguage'="") {
			if $length(pstrText)<=255 {
				for Correctness=0:1:2 {
					if $data(^WWWDICTIONARY(Correctness,pstrToLanguage,pstrText)) {
						set strText=$piece($get(^WWWDICTIONARY(Correctness,pstrToLanguage,pstrText,1)),Y,1)
					}
					quit:strText'=""
				}
			} else {
				set LanguageLoop=""
				for Correctness=2:1:3 {
					for {
						set LanguageLoop=$order(^WWWDICTIONARY(Correctness,pstrToLanguage,LanguageLoop))
						quit:LanguageLoop=""
						quit:strText'=""
						
						set objDICTIONARY=$get(^WWWDICTIONARY(Correctness,pstrToLanguage,LanguageLoop,1))
						if $piece(objDICTIONARY,Y,1)=pstrText {
							set strText=$piece(objDICTIONARY,Y,2)
						}
					}
					quit:strText'=""
				}
			}
			
		}
		if strText="" {
			set strBefore="name=""translation"""
			set pstrText=$translate(pstrText,"@|&"," ")
			set strURL="http://www.systranlinks.com/systran/cgi?partner=systran-Abacho-de&ab_cmd=translate&lp="_$zcvt(pstrFromLanguage,"l")_"_"_$zcvt(pstrToLanguage,"l")_"&urltext="_pstrText
			
			if (pstrFromLanguage'="")&&(pstrToLanguage'="") {
			 	if +$$GET^WWWHTTP(strURL,40)'=0 {
				 	set Line=""
	
				 	set blnFound=0
				 	for {
					 	set Line=$order(%html(Line))
					 	quit:Line=""
					 	if $find(%html(Line),strBefore) {
						 	set strText=$piece($piece(%html(Line),">",2),"<",1)
						 	set blnFound=1
					 	}
					 	quit:blnFound
				 	}
				 	if (blnFound)&&(pstrFromLanguage="EN")&&(strText'="") {
					 	write !,!,"Source :"_pstrText
					 	write !,"Convert:"_strText
					 	if $length(pstrText)<=255 {
					 		set ^WWWDICTIONARY(1,pstrToLanguage,pstrText,1)=strText_Y_pstrReference
					 	} else {
						 	set ^WWWDICTIONARY(3,pstrToLanguage,($order(^WWWDICTIONARY(3,pstrToLanguage,""),-1)+1),1)=pstrText_Y_strText_Y_pstrReference
					 	}
				 	}
			 	}
			}
		}
	}
 	quit strText
 */
 
GetLanguageClasses()
    ;-------------------------------------------------------------------------------
    ; Get a list of classes that are likely to contain language conversions
    ;
    ; Returns:list
    ;
    ; History:
    ; 01-Jul-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
    new idClass,idKey,lstClasses,objClass,objKey
 
	set lstClasses=""
	set idClass=""
	for {
		set idClass=$order(^WWW001(0,idClass))
		quit:idClass=""
		
		set objClass=$get(^WWW001(0,idClass,1))
		if $$GetKey(idClass)'="" {
			set lstClasses=lstClasses_$listbuild(idClass)
		}
	}
	quit lstClasses
 
GetKey(pidClass="")
    ;-------------------------------------------------------------------------------
    ; Gets the primary key number of the language.
    ;
    ; Returns:Number
    ;
    ; History:
    ; 26-Sep-2006	shobby	SRBR014034:Included classes that use the keyword LANGUAGE instead of SPRACHE.
    ; 26-Aug-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
	new idKey,objKey
	
	set idKey=""
	if pidClass'="" {
		for {
			set idKey=$order(^WWW002(0,pidClass,idKey))
			quit:idKey=""
			set objKey=$get(^WWW002(0,pidClass,idKey,1))
			quit:(($$$WWW002RelationClass(objKey)="WWW100")&&(($find($$$WWW002RelationalPrimaryKeys(objKey),"""SPRACHE"""))||($find($$$WWW002RelationalPrimaryKeys(objKey),"""LANGUAGE"""))))
		}
	}
	quit idKey
	
CreateText(pidModule,pstrText)  ;Keep run from Studio Template
    ;-------------------------------------------------------------------------------
    ; Creates a new language text for a module
    ;
    ; History:
    ; 04-Jul-2005	RobertW	SR12527: Fixed Status usage for ReturnError
    ; 05-May-2005	Paul K	Changed logic to cater for WWW Module.
    ; 15-Mar-2005	GRF		Boolean Macros
    ; 17-Aug-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
	new idLanguage,intLargest,strStatus
	
	if pidModule="FIN" set pidModule="Fin"
	if pidModule="COM" set pidModule="Com"
	set intLargest=0
	
	set idLanguage=pidModule
	for {
		set idLanguage=$order(^WWW009(0,"EN",idLanguage))
		quit:$extract(idLanguage,1,$length(pidModule))'=pidModule
		if $piece(idLanguage,pidModule,2)>intLargest {
			set intLargest=$piece(idLanguage,pidModule,2)	
		}	
	}
	set idLanguage = pidModule_$translate($justify(intLargest+1,$select($length(intLargest)<4:5,1:$length(intLargest)))," ","0")
	set strStatus  = $$^WWWSPEI("WWW009","EN,"_idLanguage,pstrText,1)
	; if strStatus=9 ... possible NOT OK state from WWWSPEI
	if strStatus=$$$OK {
		if $find(pstrText,"%") {
			write "$listbuild("""_idLanguage_""",)  ;"_pstrText
			//write "$$$Text($listbuild("""_idLanguage_""",))"
		} else {
			write """"_idLanguage_"""  ;"_pstrText
			//write "$$$Text("""_idLanguage_""")"
		}
	} else {
		write "Save Failed"
	}
	quit idLanguage
 
AfterDataFields(pidKey="",pblnShowAll=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Shows a list of language conversion globals to set.
    ;
    ; History:
    ; 15-Mar-2005	GRF		Missing quit at end
    ; 19-Aug-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
	new ClassLoop,idClass,idKey,idProperty,lstClasses,lstHeader
	new objLanguageConversion,objWWW003
	
	set lstHeader=""
	set lstHeader=lstHeader_$lb($$$StrCOMLanguageConversionLangaugeClass)
	set lstHeader=lstHeader_$lb($$$StrCOMLanguageConversionDataField)
	set lstHeader=lstHeader_$lb($$$StrCOMLanguageConversionSourceClass)
	set lstHeader=lstHeader_$lb($$$StrCOMLanguageConversionSourceField)
 
	do Start^COMTable(lstHeader,"Language Conversion Globals")          ; Period Details
 
 	set lstClasses=$$GetLanguageClasses()
 	for ClassLoop=1:1:$listlength(lstClasses) {
	 	set idClass=$listget(lstClasses,ClassLoop)
	 	;continue:($e(idClass,1,3)'="SAL")&&($e(idClass,1,3)'="WWW")
	 	set idProperty=""
	 	for {
		 	set idProperty=$order(^WWW003(0,idClass,idProperty))
		 	quit:idProperty=""
		 	
		 	set idKey=idClass_","_idProperty
		 	set objLanguageConversion=$get(^COMLanguageConversion(0,idClass,idProperty,1))
		 	set objWWW003=$get(^WWW003(0,idClass,idProperty,1))
		 	if (pblnShowAll) || ('$$$COMLanguageConversionNoConversionRequired(objLanguageConversion)) {
			 	if ($$$WWW003InputType(objWWW003)=6) ||
			 	   ($$$WWW003InputType(objWWW003)=3)   {
				 	
				 	if $$$WWW003RelationDatabase(objWWW003)="" {
						do NewLine^COMTable($select(idKey=pidKey:"lightgreen",1:""))
						do InsertCell^COMTable(idClass,"COMLanguageConversion",idKey)
						do InsertCell^COMTable($$$WWW003PropertyDescription(objWWW003),"COMLanguageConversion",idKey)
						
						if ($$$COMLanguageConversionSourceClass(objLanguageConversion)'="") &&
						   ($$$COMLanguageConversionSourceField(objLanguageConversion)'="")    {
							
							do InsertCell^COMTable($$$COMLanguageConversionSourceClass(objLanguageConversion),"COMLanguageConversion",idKey)
							do InsertCell^COMTable($$$WWW003PropertyDescription($get(^WWW003(0,$$$COMLanguageConversionSourceClass(objLanguageConversion),$$$COMLanguageConversionSourceField(objLanguageConversion),1))),"COMLanguageConversion",idKey)
						} else {
							do InsertCell^COMTable("Not yet defined","COMLanguageConversion",idKey)
							do InsertCell^COMTable("","COMLanguageConversion",idKey)
						}
						do EndLine^COMTable()
				 	}
			 	}
		 	}
		}
	}
	do Stop^COMTable()
	quit
	
ConvertFormGroups(pstrModule="SAL",pstrLanguage="EN",pblnFix=$$$NO)  ;Keep run from terminal
    ;-------------------------------------------------------------------------------
    ; Converts Group texts to language texts, can be run on different modules.
    ;
    ; Returns:Status
    ;
    ; History:
	; 03-Jul-2014	shobby	CORE-385.20: Break link to SAL module
    ; 13-Nov-2006	JW		SR14550: Pass in form to CalculateString
    ; 02-Aug-2006	JW		SR14882: Check for calculated group name
    ; 15-Mar-2005	GRF		Boolean Macros
    ; 16-Jun-2004   Paul K	Created
    ;-------------------------------------------------------------------------------
	new idForm,idFormField,idLanguage,objFormField,strName,strStatus
	
	set strStatus=$$$OK
	set idForm=pstrModule
	for {
		set idForm=$order(^WWW122(0,idForm))
		quit:idForm=""
		quit:$extract(idForm,1,$length(pstrModule))'=pstrModule
		
		set idFormField=""
		for {
			set idFormField=$order(^WWW122(0,idForm,idFormField))
			quit:idFormField=""
			
			set objFormField=$get(^WWW122(0,idForm,idFormField,1))
			set strName=$piece($$$WWW122GroupName(objFormField),";",1)
			set strName=$translate(strName," ")
			if strName'="" {
				if strName = $$CalculateString^WWWFORMD(strName,idForm) {	//SR14882 - no calculation		//SR14550
					if '$data(^WWW009(0,pstrLanguage,strName)) {
						if pblnFix {
							set idLanguage=$$CreateText^COMLanguage(pstrModule,$$$WWW122GroupName(objFormField))
							if strStatus=$$$OK {
								set $$$WWW122GroupName(objFormField)=idLanguage_";"_$$$WWW122GroupName(objFormField)
								;CORE-385.20 set strStatus=$$$SaveGlobal("WWW122",idForm,idFormField,objFormField)
								set strStatus=$$Save^COMUtils("WWW122",idForm_","_idFormField,objFormField,$$$YES) ;CORE-385.20 
							}
						}
						write !,idForm_":"_idFormField_":"_$$$WWW122GroupName(objFormField)
					}
				}
			}
			quit:strStatus'=$$$OK
		}
		quit:strStatus'=$$$OK
	}
	quit strStatus
 
 
LostText(pstrModule="FIN")
	; 19-Jul-2005	RPW			SR12981: Pass intCount into the routines by reference
	new intCount
	
	kill ^CacheTemp(YUSER,"Language")
	set intCount=0
	do LostTextCode("\\orion\wwwroot\Language texts\Lost\BKP_"_pstrModule_"_20050512_EN_Help.csv",1,.intCount)
	do LostTextCode("\\orion\wwwroot\Language texts\Lost\BKP_"_pstrModule_"_20050420_EN_Help.csv",2,.intCount)
	do CleanUp()
	quit
 
LostTextCode(pstrFile,pintPiece,pintCount)
	; 19-Jul-2005	RPW			SR12981: Change intCount into pintCount
	new strCurrentIO,strLine,strGlobal,strFile1,strFile2
	new strKey1,strKey2,strKey3,strPiece,strField,strValue
		
	do $ZUTIL(68,40,1)
	set strCurrentIO=$io
	open pstrFile:"RS":0
	
	use pstrFile
	for {
		quit:$zeof=-1
		read strLine
		set pintCount=pintCount+1
		set strGlobal=$piece(strLine,";",2)
		set strKey1=$piece($piece(strGlobal,"^",2),"(",1)
		set strPiece=$translate($piece($piece(strGlobal,"(",2),")",1),"""")
		set strKey2=$piece(strPiece,",",2)
		set strKey3=$piece(strPiece,",",3)
		set strField=$piece(strLine,";",3)
		set strValue=$piece(strLine,";",5)
		if (strKey1'="")&&(strKey2'="")&&(strKey3'="")&&(strField'="")&&(strValue'="") {
			if strKey1="WWW003" {
				;if pintPiece=2 break
				;if $translate($get(^CacheTemp(YUSER,"Language",strKey1,strKey2,strKey3,strField))," ")=$translate(strValue," ") {
				if $get(^CacheTemp(YUSER,"Language",strKey1,strKey2,strKey3,strField))=strValue {
					kill ^CacheTemp(YUSER,"Language",strKey1,strKey2,strKey3,strField)
				} else {
					set $piece(^CacheTemp(YUSER,"Language",strKey1,strKey2,strKey3,strField),"~",pintPiece)=strValue
				}
			}
		}
	}
	use strCurrentIO
	close pstrFile
 	quit
 
 
CleanUp()
	new idx1,idx2,idx3,idx4,strValue
	
	set idx1=""
	for {
		set idx1=$order(^CacheTemp(YUSER,"Language",idx1))
		quit:idx1=""
		set idx2=""
		for {
			set idx2=$order(^CacheTemp(YUSER,"Language",idx1,idx2))
			quit:idx2=""
			set idx3=""
			for {
				set idx3=$order(^CacheTemp(YUSER,"Language",idx1,idx2,idx3))
				quit:idx3=""
				set idx4=""
				for {
					set idx4=$order(^CacheTemp(YUSER,"Language",idx1,idx2,idx3,idx4))
					quit:idx4=""
					set strValue=$get(^CacheTemp(YUSER,"Language",idx1,idx2,idx3,idx4))
					if ($find(strValue,Y)=0)||($piece(strValue,Y,1)="")||($piece(strValue,Y,2)="") {
						kill ^CacheTemp(YUSER,"Language",idx1,idx2,idx3,idx4)
					} elseif (idx1="WWW003")&&($piece(strValue,Y,1)=$piece($get(^WWW003(0,idx2,idx3,1)),Y,idx4)) {
						kill ^CacheTemp(YUSER,"Language",idx1,idx2,idx3,idx4)
					}
				}
			}
		}
	}
 	quit
]]></Routine>
</Export>