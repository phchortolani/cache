<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="VARJasperRun" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VARJasperRun
#include COMSYS
#include VARConst
#include MEDConst
 
Start(reportname,fileName="")
 
	;-------------------------------------------------------------------------------
	; Start
	; This routine will get the configuration for Jasper, builds a link for a report
	;
	; Params:
	; reportname= name of the report to be filled
	;
	; ByRefs: None
	;
	; Returns: Initiated Link
	;
	; History:
	; 13-Jul-2007 	RGB		Created
	;-------------------------------------------------------------------------------
	set ^VARSESJasperRunLog(+$order(^VARSESJasperRunLog(""),-1)+1)=$get(YBED)_"~"_$get(reportname)_"~"_$zdatetime($horolog,2,1)_"~"_$horolog
	
	/*IF YBED'="" {
		set User=YBED
	} 
	else { 
		set User="NOUSER"
	}*/
	if (fileName = "") {
		IF YBED'="" {
			set User=YBED
		}
		else { 
			set User="NOUSER"
		}
	} else {
		set User=fileName
	}
	
	set Folder=$piece($GET(^VARJasper(YM,YM,1)),Y,1)
	set cacheport=$piece($zutil(67,7,$JOB),"|",3)
	N ipd,cache
	S ipd=$ZU(54,13,$ZU(54,0)) ; get ip address + domain name
	S cache=$P(ipd,",",1)
	if $piece($GET(^VARJasper(YM,YM,1)),Y,3)="10.150.0.5" set cache = "10.150.0.5" ; MIGRA
	if $piece($GET(^VARJasper(YM,YM,1)),Y,3)="10.150.0.10" set cache = "localhost" ; Acesso ao Iris pelo endereço local do tomcat 
	if $piece($GET(^VARJasper(YM,YM,1)),Y,3)="alphalean.logplanning.com.br" set cache = "10.150.0.10"			; Produção
	if $piece($GET(^VARJasper(YM,YM,1)),Y,3)="alphaleanhom.logplanning.com.br" set cache = "10.150.0.11"	; HML
	if $zconvert($zversion,"U")["IRIS" set Connection = "jdbc:IRIS://"_cache_":"_cacheport_"/"_YUCI
	e  set Connection = "jdbc:Cache://"_cache_":"_cacheport_"/"_YUCI
	set tomcat=$piece($GET(^VARJasper(YM,YM,1)),Y,3)
	;if tomcat="localhost" set tomcat=%CGIEVAR("SERVER_NAME")
	set tomcatport=$piece($GET(^VARJasper(YM,YM,1)),Y,4)
	//set ipcliente=$ZUTIL(67,15,$JOB) // get client ip
	set ipcliente = $get(%request.CgiEnvs("REMOTE_ADDR"))

	;Petik 25/05/2010
	;Não precisa mais dessas linhas
	;vvvvv
	//if ipcliente="187.6.84.125" set tomcat="200.199.160.234"
	
	;Se o usuário estiver acessando de fora da SECONCI (usando IP externo)
	;Seta o tomcat para o IP externo da SECONCI 
	set proc = ##class(%SYS.ProcessQuery).%OpenId($job)
	if (proc.ClientNodeName="187.62.220.242"){ ;|| (proc.ClientNodeName="compras.saude.al.gov.br"){
		set tomcat="187.62.220.242"
	}
	
	;Por garantia estou testando o SERVER_NAME também
	;Pois de acordo com o Pablo o ClientNodeName pode vir diferente 
	;se estiver passando por um roteador 
	if (tomcat'="187.62.220.242")&&($get(%CGIEVAR("SERVER_NAME"))="187.62.220.242") {
		set tomcat="187.62.220.242"
		set ^zzVARJasperLog($JOB,YBED) = "ClientNodeName: "_proc.ClientNodeName_" SERVER_NAME: "_$get(%CGIEVAR("SERVER_NAME"))
	}
	if (tomcat'="187.62.220.242")&&($get(%CGIEVAR("SERVER_NAME"))="192.168.200.113") {
		set tomcat="187.62.220.242"
		set ^zzVARJasperLog($JOB,YBED) = "ClientNodeName: "_proc.ClientNodeName_" SERVER_NAME: "_$get(%CGIEVAR("SERVER_NAME"))
	}
	
	if (tomcat'="187.62.220.242")&&($get(%CGIEVAR("SERVER_NAME"))="intranet.disclinc.com.br") {
		set tomcat="intranet.disclinc.com.br"
		set tomcatport = "9090"
		set ^zzVARJasperLog($JOB,YBED) = "ClientNodeName: "_proc.ClientNodeName_" SERVER_NAME: "_$get(%CGIEVAR("SERVER_NAME"))
	}

	;^^^^^
	;Fim Petik 25/05/2010
	set servletadress=$piece($GET(^VARJasper(YM,YM,1)),Y,2)	
	if tomcat'["http" set tomcat = "http://"_tomcat
	set link= "window.location = '"_tomcat_":"_tomcatport_servletadress_"JasperReportServlet?connection="_Connection_"&user="_User_"&folder="_Folder_"&reportName="_reportname
	set ^zzRubensDebug($JOB,YBED)=link  
	quit link
 
BackLink(link)
	N ipd,cache
	S ipd=$ZU(54,13,$ZU(54,0))
	S cache=$P(ipd,",",1)
	set ipcliente=$ZUTIL(67,15,$JOB) // get client ip
	if ipcliente="201.34.45.243" set cache="200.193.236.50"
	if tomcat'["http" set tomcat = "http://"_tomcat
	set link=cache_"/CSP/"_YUCI_"/"_link
	set link=$$Replace^COMUtilStr(link,"&amp;","|")
	set link=$$Replace^COMUtilStr(link,"&","|")
	quit link

addParameter(link,parameter,number)
	;-------------------------------------------------------------------------------
	; addParameter
	; This routine will add parameters to the previously created link
	;
	; Params:
	; link= link created by Start^VARJasperRun
	; 
	; parameter= data to be inserted. *DON'T* translate anything. Put it exactly like
	;            you want it to be diplayed. 
	;            displayed. Any character can be used, including html tags, pipes, etc.
	;            
	; number = number of the parameter, ranging from 1 to 20
	;
	; ByRefs: None
	;
	; Returns: Link with parameter added to it
	;
	; History:
	; 22-Fev-2008   Soeiro  Put a filter to convert anything to a correct URL
	;                       parameter. Example: "a a.b,c/d\e:f|g#h@i$j&l[mr" -> a%20a.b%2Cc/d%5Ce%3Af%7Cg%23h@i$j%26l%5Bmr
	; 13-Jul-2007 	RGB		SR14849: Created
	;-------------------------------------------------------------------------------
	set link=link_"&ReportParameter"_number_"="_$ZCONVERT($get(parameter),"O","URL")
	quit link
	
addUserParameter(link,parameterName,parameterValue)
	;-------------------------------------------------------------------------------
	; addParameter
	; This routine will add a parameter to the previously created link.
	; This routine handles every character translation that might be necessary.
	;  
	; Params:
	; link= link created by Start^VARJasperRun
	; 
	; parameterName=the name of a parameter. Must be a URL valid string
	; 
	; parameterValue= data to be inserted. It can contain any character.
	;            *DON'T* translate anything. Put it exactly like
	;            you want it to be diplayed. I.e: don't use "&amp;". Use "&" if want "&" to be
	;            displayed. Any character can be used, including html tags, pipes, etc.
	;            
	;
	; ByRefs: None
	;
	; Returns: Link with parameter added to it
	;
	; History:
	; 22-Fev-2008   Soeiro  Created
	;-------------------------------------------------------------------------------
	set link=link_"&"_parameterName_"="_$ZCONVERT($get(parameterValue),"O","URL")
	quit link
	
Run(link)
	;-------------------------------------------------------------------------------
	; Run
	; This routine close the link and run it calling the servlet to fill the report
	;
	; Params:
	; link= link created by Start^VARJasperRun
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 
	; 22-Fev-2008	Soeiro	Added a debug mode, the server date-time and the current USER 
	;                       for logging purposes. 
	; 13-Jul-2007 	RGB		SR14849: Created
	;-------------------------------------------------------------------------------
	
	//Uncomment the following line to have debug info printed in tomcat's log
	//0=no parameters, no sql
	//1=all parameters printed
	//2=all parameters printed and the raw SQL query that Jasper is going to use
	set link=$$addUserParameter(link,"debugMode","1")
	
	//Current date-time for the log YYYY-MM-DD hh:mm 
	set link=$$addUserParameter(link,"dateTime",$zdatetime($horolog,3,1))
	
	//Current user
	set link=$$addUserParameter(link,"operatingUser",$get(YBED))
	
	set link=link_"'"
	
	$$$StartScript()
	write link
	$$$EndScript()
	set ^zzsilmar = link
	quit
	
CreateReport(link)
	;-------------------------------------------------------------------------------
	; Run
	; This routine close the link and run it calling the servlet to fill the report
	;
	; Params:
	; link= link created by Start^VARJasperRun
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 
	; 22-Fev-2008	Soeiro	Added a debug mode, the server date-time and the current USER 
	;                       for logging purposes. 
	; 13-Jul-2007 	RGB		SR14849: Created
	;-------------------------------------------------------------------------------
	
	//Uncomment the following line to have debug info printed in tomcat's log
	//0=no parameters, no sql
	//1=all parameters printed
	//2=all parameters printed and the raw SQL query that Jasper is going to use
	set link=$$addUserParameter(link,"debugMode","1")
	
	//Current date-time for the log YYYY-MM-DD hh:mm 
	set link=$$addUserParameter(link,"dateTime",$zdatetime($horolog,3,1))
	
	//Current user
	set link=$$addUserParameter(link,"operatingUser",$get(YBED))
	
	set link=link_"'"
	
	/*$$$StartScript()
	write link
	$$$EndScript()*/
	new httprequest,server,port,toGet
	Set httprequest=##class(%Net.HttpRequest).%New()
	
	if link["https" set link = $piece(link,"https://",2)
	if link["http" set link = $piece(link,"http://",2)
	set link = $extract(link,1,$length(link)-1)
	
	set server = $piece($piece(link,"/",1),":",1)
	set port = $piece($piece(link,"/",1),":",2)
	set toGet = $extract(link,$find(link,"/")-1,*)
	Set httprequest.Server = server
	Set httprequest.Port = port
	
	Do httprequest.Get(toGet)
	;Do httprequest.HttpResponse.OutputToDevice()
	quit
	
ViewInForm(pLink,pReportName="",pTipoAbertura=1, pTipoRetorno = 0, pGravarBird = "")
            ;-------------------------------------------------------------------------------
            ; ViewInForm
            ; Finishes building the link and open it in an internal frame of the @NM form
            ; "VARTCIViewReportInFrame".
            ;
            ; Params:
            ; pLink = link created by Start^VARJasperRun
            ; pReportName = report name to be used as title of the "VARTCIViewReportInFrame" form.
            ; (This requires core change to V2^WWWKOPF.MAC.)
            ;
            ; ByRefs: None
            ;
            ; Returns: Nothing
            ;
            ; History:
            ; 
            ; 28-Sep-2009 Andre Zuvanov Created
            ;-------------------------------------------------------------------------------
            if ($$isExplicitLicenseUserIdentification^COMSTARTZstart()) {
				if ('$$allocReportLicense^COMSTARTZstart("JASPER")){
					$$$StartScript()
					write !, "alert('Não há licenças disponíveis para a geração deste relatório!')"
					$$$EndScript()
					
					do GoToForm^COMUtilForm(YFORM,YKEY)
				}
			}
			
            //Uncomment the following line to have debug info printed in tomcat's log
            //0=no parameters, no sql
            //1=all parameters printed
            //2=all parameters printed and the raw SQL query that Jasper is going to use
            set pLink=$$addUserParameter(pLink,"debugMode","1")
            
            //Current date-time for the log YYYY-MM-DD hh:mm 
            set pLink=$$addUserParameter(pLink,"dateTime",$zdatetime($horolog,3,1))
            
            //Current user
            set pLink=$$addUserParameter(pLink,"operatingUser",$get(YBED))
            
            //Current namespace
            set pLink=$$addUserParameter(pLink,"namespace",$get(YUCI))
            
            //Current image web address
            set pLink=$$addUserParameter(pLink,"imageWebAddress",$$$VARJasperImageWebAddress($get(^VARJasper(YM,YM,1))))
            
            //Current definition of the user identification
            set pLink=$$addUserParameter(pLink,"isExplicitIdentification",$$isExplicitLicenseUserIdentification^COMSTARTZstart())
            
            //set pLink=pLink_"'"
            
            // Removing the javascript code to open report URL:
            set pLink = $piece(pLink,"window.location = '",2)
            
            
			// ***
			set pLink = pLink_"&downloadFilename=/relatorio"
			// ***
            if $data(^mtemp.CESSTOKENS(YBED,YUSER)){
	            SET ^zzsilmar = pLink
	            set retorno = $$AssignFile(pLink,pReportName,pGravarBird)
	            set status  = $piece(retorno,"~",1)
	            set retorno = $piece(retorno,"~",2)
            	if status=1{
	            	set objCESS = $GET(^VARCESS(YM,YM,1))
					set servercess = $piece(objCESS,Y,1)
					set portcess = $piece(objCESS,Y,2)
					set servercessExt = $piece(objCESS,Y,3)
					set portcessExt = $piece(objCESS,Y,4)
					
	            	set retorno = $replace(retorno,servercess_":"_portcess,servercessExt_":"_portcessExt)
            		if (pTipoRelatorio = 1){
	            		write !, "window.open('"_retorno_"','_blank');" 		 ; Abre na mesma aba
	            	}
	            	else{
		            	;write !, "window.open('"_retorno_"','"_pReportName_"');" ; Cria uma nova aba para download
            			write !, "window.open('"_retorno_"','_self');" 		 ; Abre na mesma aba
	            	}
	            	quit
            	}else{
	            	write:retorno'="" "alert('"_retorno_"')"
            	}
            }
            set ^CacheTempViewReport(YM,YUCI,YUSER) = pLink
            
            // pLink is passed to form as YPARA and pReportName as YAUSWAHL:
            ;do GoToForm^COMUtilForm( "VARTCIViewReportInFrame", "", "", pLink, , ,$get(pReportName) ) 
			// ***
            ;do GoToForm^COMUtilForm( "VARTCIViewReportInFrame", "", "", , , ,$get(pReportName) ) 

			new strBack,strURL
	
			set strBack = $get(YBACK)     ; "A,B,C,D,E,"
			if (YFORM'="") && ($piece(strBack,",",$length(strBack,",")-1)'=YFORM) && (strBack'=YFORM) {
				set strBack = strBack_YFORM_","  ;only add YFORM to the stack if not last element
			}

			set strURL = YAKTION_"EP=WWWFORM&amp;YFORM=VARTCIViewReportInFrame"
			if strBack '= "" {
				set strURL = strURL_"&amp;YBACK="_strBack
				set strURL = strURL_"&amp;YFKEY="_YKEY
				set strURL = strURL_"&amp;YPARA="_pReportName
			}
			set strURL = strURL_"&amp;YBED="_YBED
			set strURL = strURL_"&amp;YM="_YM
			set strURL = strURL_"&amp;YUCI="_YUCI
			set strURL = strURL_"&amp;YUSER="_YUSER
			if (pTipoRetorno = 1){
				quit "window.open("""_pLink_""",'"_pReportName_"','location=no,menubar=no,status=no,toolbar=no');" 	
			}
			if (pTipoAbertura = 1) {
				$$$StartScript() // SR15090
				;write !, "document.frames.parent[document.frames.parent.length-1].location = '"_strURL_"';"
				write !, "parent.frames[parent.frames.length-1].location = '"_strURL_"';"
				$$$EndScript() // SR15090
				// ***
			}else{
				write !, "window.open("""_pLink_""",'"_pReportName_"','location=no,menubar=no,status=no,toolbar=no');"
			}        
            quit

AssignFile(pLink,pFileName="",pGravarBird="")
	kill ^zzsilmar
	if '$data(^mtemp.CESSTOKENS(YBED,YUSER)) quit "2~Sem token gerado" ; Token armazenado
	// LEAN-247 vvv
 	set idProvider = $order(^MEDProviders(0,1,$Replace(YBED,"_"," "),""))
 	Set objProvider = ""
 	set:idProvider'="" objProvider = $get(^MEDProvider(0,idProvider,1))
 	set imgSignature = ""
 	if $$$MEDProviderPossuiAssinatura(objProvider)
 	{
  	set caminhoD = $$GetDiretorioFisico^VARBRDiretorios(0,17)
		if $$$isWINDOWS
		{
			if ($extract(caminhoD, $length(caminhoD)) '= "\")
			{
				set caminhoD = caminhoD _ "\"
			}
		}
		else
		{
			if ($extract(caminhoD, $length(caminhoD)) '= "/")
			{
				set caminhoD = caminhoD _ "/"
			}
		}
		
		set caminhoD = caminhoD_idProvider_".jpg"
		
		if $$$isWINDOWS set caminhoD = $replace(caminhoD,"/","\")
		else  set caminhoD = $replace(caminhoD,"\","/")
		
		// verifica se o arquivo existe
		if (##class(%File).Exists(caminhoD))
		{
			set caminhoV = $$GetDiretorioVirtual^VARBRDiretorios(0,17)
			set imgSignature = caminhoV_"/"_idProvider_".jpg"
  		set pLink = $$addUserParameter(pLink, "signature", imgSignature)
		}
  }
  // LEAN-247 ^^^^
	set tomcat=$piece($GET(^VARJasper(YM,YM,1)),Y,5)
	set tomcatport=$piece($GET(^VARJasper(YM,YM,1)),Y,6)
	set tomcatportExternal=$piece($GET(^VARJasper(YM,YM,1)),Y,4)
    set server = tomcat
    set server = "localhost"
    set port = tomcatport
	set ^zzsilmar("url") = pLink_"|"_tomcatportExternal_"|"_tomcatportExternal
    set url = $piece(pLink,tomcatportExternal,2,$l(pLink,tomcatportExternal))
	Set httprequest=##class(%Net.HttpRequest).%New()
	set httprequest.Server=server
	set httprequest.Port=port
	set tSc = httprequest.Get(url) ; Aqui pode ser get, put, post, ...
	set ^zzsilmar("status") = server_"~"_port_"~"_tSc
	if $$$ISERR(tSc) quit "0~Servidor de relatórios indisponível"
	set arquivo = httprequest.HttpResponse.Data.Read()
	i $l(arquivo)=0 quit "0~Erro na geração do relatório"
	set ^zzsilmar("ARQUIVO") = arquivo
	;
	set reportName = $piece(pLink,"reportName=",2)
	set reportName = $piece(reportName,"&",1)
	set retorno = $$signaturePDF^VARCSPUtils(reportName,arquivo,imgSignature,pGravarBird)
	If (pGravarBird '= "") {
  		set caminhoD = $$GetDiretorioFisico^VARBRDiretorios(0,13)
		if $$$isWINDOWS {
			if ($extract(ca]]><![CDATA[minhoD, $length(caminhoD)) '= "\"){
				set caminhoD = caminhoD _ "\"
			}
			Set caminhoD = caminhoD_"pdf\"_$Piece(pGravarBird,"|",1)_"\"
		}else{
			if ($extract(caminhoD, $length(caminhoD)) '= "/"){
				set caminhoD = caminhoD _ "/"
			}
			Set caminhoD = caminhoD_"pdf/"_$Piece(pGravarBird,"|",1)_"/"
		}
		if $$$isWINDOWS set caminhoD = $replace(caminhoD,"/","\")
		else  set caminhoD = $replace(caminhoD,"\","/")
		;
		Set xServer = $Piece($Piece(retorno,"/",3),":",1)
		Set xPorta 	= $Piece($Piece(retorno,"/",3),":",2)
		Set xUrl 	= $Piece(retorno,"/",4,$Length(retorno,"/"))
		;
		Set xHTTPRequest = ##class(%Net.HttpRequest).%New()
		Set xHTTPRequest.Server = xServer
		Set xHTTPRequest.Port 	= xPorta
		Set tSc = xHTTPRequest.Get(xUrl)
		If '$$$ISERR(tSc) {
			Set file = ##class(%File).%New(caminhoD_$Piece(pGravarBird,"|",2)_".pdf")
			Do file.Open("WSN")
			Do file.Write(xHTTPRequest.HttpResponse.Data.Read($$$MaxCacheInt))
			Do file.Close()
		}
	}
	quit retorno
	;
BackButton()
	new strKey,lastFORM,backHistory,pYPARA,abaAtual,objForm

	set strKey = ""
	set lastFORM = $p(YBACK,",",$l(YBACK,",")-2)
	if (lastFORM = "VARFiltrosRelatorio"){
		
		set lastFORM = $p(YBACK,",",$l(YBACK,",")-3)
		set strKey = $piece($get(^VARFiltrosRelatorio(YBED,"parametros iniciais")),";",2)
		set backHistory = $piece(YBACK,lastFORM,1)
		
	}elseif (lastFORM = "VARFiltrosRelatorioSemSeq"){
		
		set lastFORM = $p(YBACK,",",$l(YBACK,",")-3)
		set strKey = $piece($get(^VARFiltrosRelatorio(YBED,"parametros iniciais")),";",2)
		set backHistory = $piece(YBACK,lastFORM,1)
		if (lastFORM = "INWEINVD"){
			set strKey = ($piece($get(^VARFiltrosRelatorio(YBED,"parametros iniciais")),";",6))
		}
		
	}elseif (lastFORM = "VARDose"){
		
		set pYPARA = $piece($get(^VARTempDose(0,YBED,1)),Y,1)
		set abaAtual = $piece($get(^VARTempDose(0,YBED,1)),Y,2)
		do GoToForm^COMUtilForm(lastFORM,"",abaAtual,pYPARA)
		quit
		
	}elseif (lastFORM = "MEDDispense"){
		
		if ($get(^VARTempMEDDispenseSeparacao(YM,YBED)) = $$$NO) {
			set backHistory = $piece(YBACK,"VARTCIViewReportInFrame",1)
		} else {
			set YPARA = "Lista de Separação"
			set backHistory = $piece(YBACK,"VARTCIViewReportInFrame",1)
		}
		
		k ^VARTempMEDDispenseSeparacao(YM,YBED)
	}else{
		set backHistory = $piece(YBACK,"VARTCIViewReportInFrame",1)
	}
	
	if (strKey=""){
		set strKey = YFKEY
	}
	
	//Para carregar o registro ao voltar do relatório para a tela de consulta (SESPE-317)
	if (lastFORM '= "") {		
		set objForm = $get(^WWW120(YM,lastFORM,1))
		
		;4=Entrada manual (com botão)
		if ($$$WWW120FormType(objForm) = 4)  {
			do VARLogAfterSave^VARUtil(YBED,lastFORM)
		}
	}	
	
	if ($get(YPARA)="Lista de Separação") {
		do RedirectForm^COMUtilForm(lastFORM,strKey,backHistory,"",2)
	}else{
		do RedirectForm^COMUtilForm(lastFORM,strKey,backHistory,"","")
	}
	quit]]></Routine>
</Export>