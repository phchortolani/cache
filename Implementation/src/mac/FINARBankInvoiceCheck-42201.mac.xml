<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINARBankInvoiceCheck" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINARBankInvoiceCheck
	#include COMSYS
	#include FINConst
 
CanPayInvoice(pYKEY)
	;-------------------------------------------------------------------------------
	; For a banking invoice, is it already flagged as "pay" on another
	; unposted banking record?
	;
	; Params: pYKEY		: The banking invoice we're checking
	;
	; Returns: blnFlag
	;
	; History:
	; 22-Jun-2006	Steve S		SR14698: Created
	;-------------------------------------------------------------------------------
	new strStatus,idBank,idBankLine,idBankInv,objFINARBankLine,idCustomer,idxCustomer
	new idBankLoop,objFINARBank,idBankLoopLine
 
	set strStatus=$$$OK
 
	set idBank		=$$$KEY1(pYKEY)
	set idBankLine	=$$$KEY2(pYKEY)
	set idBankInv	=$$$KEY3(pYKEY)
	
	if (idBank'="")&&(idBankLine'="")&&(idBankInv'="") {
		set objFINARBankLine=$get(^FINARBankLine(YM,idBank,idBankLine,1))
		set idCustomer=$$$FINARBankLineCustomerNumber(objFINARBankLine)
		set idxCustomer=$$$Index(idCustomer)
		
		set idBankLoop=""
		for {
			set idBankLoop=$order(^FINARBankLines(YM,50,idxCustomer,idBankLoop))
			quit:(idBankLoop="")||$$$ISERR(strStatus)
			
			set objFINARBank=$get(^FINARBank(YM,idBankLoop,1))
			continue:($$$FINARBankPostedDate(objFINARBank)'="") // ignore already posted
			
			set idBankLoopLine=""
			for {
				set idBankLoopLine=$order(^FINARBankLines(YM,50,idxCustomer,idBankLoop,idBankLoopLine))
				quit:(idBankLoopLine="")||$$$ISERR(strStatus)
				continue:(idBankLoop=idBank)&&(idBankLoopLine=idBankLine)
				
				if $data(^FINARBankInvoices(YM,5,$$$YES,idBankLoop,idBankLoopLine,idBankInv)) {
					set strStatus=$listbuild("Fin01046",idBankInv,idBankLoop,idBankLoopLine) ;Invoice %1 has been paid on banking record %2, line %3.
				}				
			}
		}
	} else {
		set strStatus=$listbuild("Fin00089")  ;No Record Selected.	
	}
 
 
	quit strStatus
	
	
InvoiceIsFree(pidBank,pidBankLine,pidBankInv)
	;-------------------------------------------------------------------------------
	; Is this invoice free for payment?
	; Used during the creation/auto allocation process.
	;
	; Params:	pidBank		: The banking number
	; 			pidBankLine : The line number
	; 			pidBankInv	: The invoice number
	;
	; ByRefs:
	;
	; Returns: blnFlag	(whether or not this invoice is free for payment)
	;
	; History:
	; 01-Dec-2009	GRF		SR17007: separate tags for multi-lock operations
	; 23-Jun-2006	SteveS	SR14698: Created
	;-------------------------------------------------------------------------------
	new blnFlag,idCustomer,objFINARBankLine,strLockKey,strYKEY
 
	set blnFlag = $$$NO
	
	if '$$$NoKey(pidBank) && ($get(pidBankLine)'="") && ($get(pidBankInv)'="") {
		set strYKEY = pidBank_","_pidBankLine_","_pidBankInv
		set blnFlag = $$$ISOK($$CanPayInvoice(strYKEY))
		
		if blnFlag {
			set objFINARBankLine = $get(^FINARBankLine(YM,pidBank,pidBankLine,1))
			set idCustomer = $$$FINARBankLineCustomerNumber(objFINARBankLine)
			set strLockKey = idCustomer_","_pidBankInv
		;	set blnFlag = $$$ISOK($$GetLock^WWWMultiLock("FINARBankLine","FINARBankInvoice",strLockKey,$$$NO))	; SR17007
			set blnFlag = $$$ISOK($$GetLock^WWWMultiLock("FINARBankLine","FINARBankInvoice",strLockKey))	
		}
	}
 
	quit blnFlag
	
 
]]></Routine>
</Export>