<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARConsCentroCusto" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARConsCentroCusto
	#include WWWConst
	#include INConst
	quit

OnAfterSave
	new Local, Grupo, Mes, Ano, Visao, CurvaABC

	kill ^VARTempConsCentroCusto(YM,YBED)
	
	set Visao 	 = $get(VORG(1))
	set Mes 	 = $get(VORG(2))
	set Ano 	 = $get(VORG(3))
	set Local	 = $get(VORG(4))
	set Grupo	 = $get(VORG(5))
	set Produto	 = $get(VORG(6))
	set CurvaABC = $get(VORG(7))
	
	set $piece(^VARTempConsCentroCusto(YM,YBED,1),Y,1) = Visao
	set $piece(^VARTempConsCentroCusto(YM,YBED,1),Y,2) = Mes
	set $piece(^VARTempConsCentroCusto(YM,YBED,1),Y,3) = Ano
	set $piece(^VARTempConsCentroCusto(YM,YBED,1),Y,4) = Local
	set $piece(^VARTempConsCentroCusto(YM,YBED,1),Y,5) = Grupo
	set $piece(^VARTempConsCentroCusto(YM,YBED,1),Y,6) = Produto
	set $piece(^VARTempConsCentroCusto(YM,YBED,1),Y,7) = CurvaABC
	
	do VARLogAfterSave^VARUtil(YBED,YFORM)
	do GoToForm^COMUtilForm("VARConsCentroCusto",1,,,,,)	
	
	quit

OnAfterDataFields
	new objTemp, vVisao, vMes, vAno, vLocal, vGrupo, vProduto, vCurvaABC, querySQL

	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	set objTemp = $get(^VARTempConsCentroCusto(YM,YBED,1))
	
	set vVisao		= $piece(objTemp,Y,1)
	set vMes		= $piece(objTemp,Y,2)
	set vAno		= $piece(objTemp,Y,3)
	set vLocal		= $piece(objTemp,Y,4)
	set vGrupo		= $piece(objTemp,Y,5)
	set vProduto	= $piece(objTemp,Y,6)
	set vCurvaABC	= $piece(objTemp,Y,7)
	
	if ($$CheckFechamentoContabil^VAREntradaNotaFiscal(vMes,vAno) = $$$NO){
		$$$Alert("Este relatório esta disponível somente para os meses/anos que já foi gerado o fechamento contábil.")
		quit
	}
	
	if (vVisao = 1){		//Sintético
	
		set querySQL = $$MontaSQLSintetico(vMes,vAno,vLocal,vProduto,vGrupo,vCurvaABC)
		
		do ExibeResultadosSintetico(querySQL,vVisao,vMes,vAno,vLocal,vGrupo,vProduto,vCurvaABC)
	
	} elseif (vVisao = 2){	//Analítico
	
		set querySQL = $$MontaSQLAnalitico(vMes,vAno,vLocal,vProduto,vGrupo,vCurvaABC)
		
		do ExibeResultadosAnalitico(querySQL,vVisao,vMes,vAno,vLocal,vGrupo,vProduto,vCurvaABC)
	
	}
	
	quit

MontaSQLSintetico(pMes,pAno,pLocal,pProduto,pGrupo,pCurvaABC)
	new meuSQL, DataInicial, DataFinal
	
	set DataInicial = $zdateh(pMes_"/01/"_pAno)
	set DataFinal  	= $$SQLGetUltimoDiaMes^VARSQL(pMes,pAno)
	
	set meuSQL = ""
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" Movimento, "
	set meuSQL = meuSQL_" CentroCusto, "
	set meuSQL = meuSQL_" $$SQLGetCentroCustoDesc^VARSQL(CentroCusto) as DescCentroCusto, "
	set meuSQL = meuSQL_" SUM(ROUND(ValorDevolucao, 4)) as DevolucaoFinal, "
	set meuSQL = meuSQL_" -SUM(ROUND(ValorConsumo, 4)) as ConsumoFinal "
	
	set meuSQL = meuSQL_" FROM ( "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'DEVOLUCAO' as Movimento, "
	set meuSQL = meuSQL_" CASE $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) "
  	set meuSQL = meuSQL_" WHEN 'Entrada' "
	set meuSQL = meuSQL_" THEN $$GetCentroCustoEntrada^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved, StockHistory.LineNumber) "
	set meuSQL = meuSQL_" ELSE $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) END as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" CASE $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) "
  	set meuSQL = meuSQL_" WHEN 'Entrada' "
    set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
    set meuSQL = meuSQL_" ELSE ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END as ValorDevolucao, "
	set meuSQL = meuSQL_" '0' as ValorConsumo "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (22)) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada') "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 1) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorRecebimento^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetTipoRecebimento^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada')) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 7) "
	set meuSQL = meuSQL_" AND ($$GetNatureza^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) = 'DB') "
	set meuSQL = meuSQL_" AND ($$GetTipoEstorno^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorEstorno^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída'))) "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	if (pProduto '= ""){
		set meuSQL = meuSQL_" AND (StockHistory.Item = '"_pProduto_"') "
	}
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'REQUISICAO' as Movimento, "
	set meuSQL = meuSQL_" $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" '0' AS ValorDevolucao, "
	set meuSQL = meuSQL_" ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as ValorConsumo "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (11, 21)) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 35) "
	set meuSQL = meuSQL_" AND (($$GetTipoProducao^VARFechamentoContabil(StockHistory.Reference) = 2) OR ($$IsSaidaParaManipulacaoMagistral^VARFechamentoContabil(StockHistory.Reference,35) = 1)))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	if (pProduto '= ""){
		set meuSQL = meuSQL_" AND (StockHistory.Item = '"_pProduto_"') "
	}
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'TFR-SAIDA' as Movimento, "
	set meuSQL = meuSQL_" $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" '0' AS ValorDevolucao, "
	set meuSQL = meuSQL_" ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as ValorConsumo "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (((($$IsRouteFromRequisitante^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 30 "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito') "
	set meuSQL = meuSQL_" AND ($$IsLocalDestinoTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)) "
	set meuSQL = meuSQL_" OR ($$IsRouteFromAbastecedor^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 31  "
	set meuSQL = meuSQL_" AND ($$IsLocalAceiteTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)))) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 32) "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito'))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	if (pProduto '= ""){
		set meuSQL = meuSQL_" AND (StockHistory.Item = '"_pProduto_"') "
	}
	
	set meuSQL = meuSQL_" ) "
	
	set meuSQL = meuSQL_" WHERE Movimento IS NOT NULL "
	
	if (pLocal '= ""){
		set meuSQL = meuSQL_" AND CentroCusto = '"_$$GetCentroCusto^VARSQL(pLocal)_"' "	
	}
	if (pGrupo '= ""){
		set meuSQL = meuSQL_" AND $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) = '"_$$SQLGetGrupoPai^VARSQL(pGrupo)_"' "
	}
	if (pCurvaABC '= ""){
		set meuSQL = meuSQL_" AND $$SQLGetClassificacaoABC^VARSQL(Produto) = '"_pCurvaABC_"' "
	}
	
	set meuSQL = meuSQL_" GROUP BY CentroCusto "
	set meuSQL = meuSQL_" ORDER BY CentroCusto "
	
	quit meuSQL
	
MontaSQLAnalitico(pMes,pAno,pLocal,pProduto,pGrupo,pCurvaABC)
	new meuSQL, DataInicial, DataFinal
	
	set DataInicial = $zdateh(pMes_"/01/"_pAno)
	set DataFinal  	= $$SQLGetUltimoDiaMes^VARSQL(pMes,pAno)
	
	set meuSQL = ""
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" Movimento, "
	set meuSQL = meuSQL_" CentroCusto, "
	set meuSQL = meuSQL_" $$SQLGetCentroCustoDesc^VARSQL(CentroCusto) as DescCentroCusto, "
	set meuSQL = meuSQL_" $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) as GrupoPai, "
	set meuSQL = meuSQL_" $$SQLGetDescGrupoItem^VARSQL($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto))) as DescGrupo, "
	set meuSQL = meuSQL_" SUM(ROUND(ValorDevolucao, 4)) as DevolucaoFinal, "
	set meuSQL = meuSQL_" -SUM(ROUND(ValorConsumo, 4)) as ConsumoFinal "
	
	set meuSQL = meuSQL_" FROM ( "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'DEVOLUCAO' as Movimento, "
	set meuSQL = meuSQL_" CASE $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) "
  	set meuSQL = meuSQL_" WHEN 'Entrada' "
	set meuSQL = meuSQL_" THEN $$GetCentroCustoEntrada^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved, StockHistory.LineNumber) "
	set meuSQL = meuSQL_" ELSE $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) END as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" CASE $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) "
  	set meuSQL = meuSQL_" WHEN 'Entrada' "
    set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
    set meuSQL = meuSQL_" ELSE ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END as ValorDevolucao, "
	set meuSQL = meuSQL_" '0' as ValorConsumo "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (22)) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada') "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 1) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorRecebimento^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetTipoRecebimento^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada')) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 7) "
	set meuSQL = meuSQL_" AND ($$GetNatureza^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) = 'DB') "
	set meuSQL = meuSQL_" AND ($$GetTipoEstorno^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorEstorno^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída'))) "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	if (pProduto '= ""){
		set meuSQL = meuSQL_" AND (StockHistory.Item = '"_pProduto_"') "
	}
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'REQUISICAO' as Movimento, "
	set meuSQL = meuSQL_" $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" '0' AS ValorDevolucao, "
	set meuSQL = meuSQL_" ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as ValorConsumo "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (11, 21)) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 35) "
	set meuSQL = meuSQL_" AND (($$GetTipoProducao^VARFechamentoContabil(StockHistory.Reference) = 2) OR ($$IsSaidaParaManipulacaoMagistral^VARFechamentoContabil(StockHistory.Reference,35) = 1)))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	if (pProduto '= ""){
		set meuSQL = meuSQL_" AND (StockHistory.Item = '"_pProduto_"') "
	}
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'TFR-SAIDA' as Movimento, "
	set meuSQL = meuSQL_" $$GetCentroCustoSaida^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) as CentroCusto, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" '0' AS ValorDevolucao, "
	set meuSQL = meuSQL_" ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as ValorConsumo "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (((($$IsRouteFromRequisitante^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 30 "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito') "
	set meuSQL = meuSQL_" AND ($$IsLocalDestinoTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)) "
	set meuSQL = meuSQL_" OR ($$IsRouteFromAbastecedor^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 31  "
	set meuSQL = meuSQL_" AND ($$IsLocalAceiteTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)))) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 32) "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito'))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	if (pProduto '= ""){
		set meuSQL = meuSQL_" AND (StockHistory.Item = '"_pProduto_"') "
	}
	
	set meuSQL = meuSQL_" ) "
	
	set meuSQL = meuSQL_" WHERE Movimento IS NOT NULL "
	
	if (pLocal '= ""){
		set meuSQL = meuSQL_" AND CentroCusto = '"_$$GetCentroCusto^VARSQL(pLocal)_"' "	
	}
	if (pGrupo '= ""){
		set meuSQL = meuSQL_" AND $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) = '"_$$SQLGetGrupoPai^VARSQL(pGrupo)_"' "
	}
	if (pCurvaABC '= ""){
		set meuSQL = meuSQL_" AND $$SQLGetClassificacaoABC^VARSQL(Produto) = '"_pCurvaABC_"' "
	}
	
	set meuSQL = meuSQL_" GROUP BY CentroCusto, $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) "
	set meuSQL = meuSQL_" ORDER BY CentroCusto, GrupoPai "
	
	quit meuSQL

ExibeResultadosSintetico(pquerySQL,pVisao,pMes,pAno,pLocal,pGrupo,pProduto,pCurvaABC)
	new rsConsCentroCusto, lstHeader, count, fltSomaConsumoTotal, fltSomaDevolucaoTotal, fltValorTotal
	
	set rsConsCentroCusto = ##class(%ResultSet).%New()	

	do rsConsCentroCusto.Prepare(pquerySQL)
	do rsConsCentroCusto.Execute()
	
	set count 		   			= 0
	set fltSomaConsumoTotal		= 0
	set fltSomaDevolucaoTotal	= 0
	set fltValorTotal 			= 0	
	
	w "<div style=padding-left:2px>"
	
	set lstHeader = ""
	set lstHeader = lstHeader_$listbuild("Centro de Custo","Valor&nbsp;<br />&nbsp;&nbsp;Consumo (R$)","Valor&nbsp;<br />&nbsp;&nbsp;Devolução (R$)","Total (R$)")
	
	do Start^COMTable(lstHeader,,,,,$$$YES)
	
	while (rsConsCentroCusto.Next()) {
			
		set Movimento		= rsConsCentroCusto.GetData(1)
		set CentroCusto		= rsConsCentroCusto.GetData(2)	
		set DescCentroCusto	= rsConsCentroCusto.GetData(3)
		set DevolucaoFinal	= rsConsCentroCusto.GetData(4)
		set ConsumoFinal	= rsConsCentroCusto.GetData(5)

		do NewLine^COMTable()
		do InsertCell^COMTable(CentroCusto_" - "_DescCentroCusto,,,,"LEFT",,,,,1)
		do InsertCell^COMTable($$^WWWTR(0,8,ConsumoFinal,2),,,,"RIGHT")
		do InsertCell^COMTable($$^WWWTR(0,8,DevolucaoFinal,2),,,,"RIGHT")
		do InsertCell^COMTable($$^WWWTR(0,8,(ConsumoFinal-DevolucaoFinal),2),,,,"RIGHT")
		do EndLine^COMTable()
		
		set fltSomaConsumoTotal 	= fltSomaConsumoTotal + ConsumoFinal
		set fltSomaDevolucaoTotal 	= fltSomaDevolucaoTotal + DevolucaoFinal
		set fltValorTotal 			= fltValorTotal + (ConsumoFinal - DevolucaoFinal)

		set count = $i(count)
		
	}
	
	if (count > 0) {
		do NewLine^COMTable("lightsteelblue")
		do InsertCell^COMTable("<strong>Total Geral</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaConsumoTotal)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaDevolucaoTotal)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltValorTotal)_"</strong>",,,,"RIGHT")
		do EndLine^COMTable()

	} elseif (count = 0){
		do NewLine^COMTable()
		do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,4)
		do EndLine^COMTable()
		
	}
	
	do Stop^COMTable()
	
	do rsConsCentroCusto.Close()
	
	w "</div>"
	
	quit

ExibeResultadosAnalitico(pquerySQL,pVisao,pMes,pAno,pLocal,pGrupo,pProduto,pCurvaABC)
	new rsConsCentroCusto, lstHeader, count, fltSomaConsumoCentroCusto, fltSomaConsumoTotal,
		fltSomaDevolucaoCentroCusto, fltSomaDevolucaoTotal, fltValorTotal, fltSomaCentroCusto, idLastLocation
	
	set rsConsCentroCusto = ##class(%ResultSet).%New()	

	do rsConsCentroCusto.Prepare(pquerySQL)
	do rsConsCentroCusto.Execute()
	
	set count 		   				= 0
	set fltSomaConsumoCentroCusto 	= 0
	set fltSomaConsumoTotal			= 0
	set fltSomaDevolucaoCentroCusto	= 0
	set fltSomaDevolucaoTotal		= 0
	set fltValorTotal 				= 0
	set fltSomaCentroCusto			= 0
	set idLastCostCenter			= ""	
	
	w "<div style=padding-left:2px>"
	
	set lstHeader = ""
	set lstHeader = lstHeader_$listbuild("Grupo Estocagem","Valor&nbsp;<br />&nbsp;&nbsp;Consumo (R$)","Valor&nbsp;<br />&nbsp;&nbsp;Devolução (R$)","Total (R$)")
	
	while (rsConsCentroCusto.Next()) {
			
		set Movimento		= rsConsCentroCusto.GetData(1)
		set CentroCusto		= rsConsCentroCusto.GetData(2)	
		set DescCentroCusto	= rsConsCentroCusto.GetData(3)
		set GrupoPai		= rsConsCentroCusto.GetData(4)
		set DescGrupo		= rsConsCentroCusto.GetData(5)
		set DevolucaoFinal	= rsConsCentroCusto.GetData(6)
		set ConsumoFinal	= rsConsCentroCusto.GetData(7)
		
		if (count = 0) {
			do Start^COMTable(lstHeader,CentroCusto_" - "_DescCentroCusto,,,$$$YES)
		}
		
	   	if ( (idLastCostCenter '= CentroCusto) && (idLastCostCenter '= "") ) {
			
		   	do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Total do Centro de Custo</strong>",,,,"RIGHT")
			do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaConsumoCentroCusto)_"</strong>",,,,"RIGHT")
			do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaDevolucaoCentroCusto)_"</strong>",,,,"RIGHT")
			do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaCentroCusto)_"</strong>",,,,"RIGHT")
			do EndLine^COMTable()
			
			set fltSomaCentroCusto			= 0
			set fltSomaConsumoCentroCusto	= 0
			set fltSomaDevolucaoCentroCusto	= 0
			
			do Stop^COMTable()
			do Start^COMTable(lstHeader,CentroCusto_" - "_DescCentroCusto,,,$$$YES)
			
			do NewLine^COMTable()
			do InsertCell^COMTable(GrupoPai_" - "_DescGrupo,,,,"LEFT",,,,,1)
			do InsertCell^COMTable($$^WWWTR(0,8,ConsumoFinal,2),,,,"RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,DevolucaoFinal,2),,,,"RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,(ConsumoFinal-DevolucaoFinal),2),,,,"RIGHT")
			do EndLine^COMTable()
			
			set fltSomaConsumoCentroCusto 	= fltSomaConsumoCentroCusto + ConsumoFinal
			set fltSomaConsumoTotal 		= fltSomaConsumoTotal + ConsumoFinal
			set fltSomaDevolucaoCentroCusto = fltSomaDevolucaoCentroCusto + DevolucaoFinal
			set fltSomaDevolucaoTotal 		= fltSomaDevolucaoTotal + DevolucaoFinal
			set fltSomaCentroCusto 			= fltSomaCentroCusto + (ConsumoFinal - DevolucaoFinal)
			set fltValorTotal 				= fltValorTotal + (ConsumoFinal - DevolucaoFinal)
						
	   	
	   	} else {
		   	
		   	do NewLine^COMTable()
			do InsertCell^COMTable(GrupoPai_" - "_DescGrupo,,,,"LEFT",,,,,1)
			do InsertCell^COMTable($$^WWWTR(0,8,ConsumoFinal,2),,,,"RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,DevolucaoFinal,2),,,,"RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,(ConsumoFinal-DevolucaoFinal),2),,,,"RIGHT")
			do EndLine^COMTable()
			
			set fltSomaConsumoCentroCusto 	= fltSomaConsumoCentroCusto + ConsumoFinal
			set fltSomaConsumoTotal 		= fltSomaConsumoTotal + ConsumoFinal
			set fltSomaDevolucaoCentroCusto = fltSomaDevolucaoCentroCusto + DevolucaoFinal
			set fltSomaDevolucaoTotal 		= fltSomaDevolucaoTotal + DevolucaoFinal
			set fltSomaCentroCusto 			= fltSomaCentroCusto + (ConsumoFinal - DevolucaoFinal)
			set fltValorTotal 				= fltValorTotal + (ConsumoFinal - DevolucaoFinal)
			
	   	}

		set idLastCostCenter = CentroCusto
		set count = $i(count)

	}
	
	if (count > 0) {
		do NewLine^COMTable("lightsteelblue")
		do InsertCell^COMTable("<strong>Total do Centro de Custo</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaConsumoCentroCusto)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaDevolucaoCentroCusto)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaCentroCusto)_"</strong>",,,,"RIGHT")
		do EndLine^COMTable()
		
		do NewLine^COMTable("lightsteelblue")
		do InsertCell^COMTable("<strong>Total Geral</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaConsumoTotal)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaDevolucaoTotal)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltValorTotal)_"</strong>",,,,"RIGHT")
		do EndLine^COMTable()
		
		do Stop^COMTable()
		
	} elseif (count = 0){
		do Start^COMTable(lstHeader,,,,$$$YES)
			
		do NewLine^COMTable()
		do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,4)
		do EndLine^COMTable()
		
		do Stop^COMTable()
	}
	
	do rsConsCentroCusto.Close()
	
	w "</div>"
	
	quit
	
OnBeforeButtonLine(pYFELD)	
	do LoadListaLocaisDeEstoque
	quit

LoadListaLocaisDeEstoque
	new CodLocal, NomeLocal, objLista, objUsuario, perfilUsuario,
		locaisPermitidos

	set objLista = ""

	set objUsuario = $get(^WWW013(YM,YBED,1))		
    set perfilUsuario = $$$WWW013UserAccess(objUsuario)
	set locaisPermitidos = $$$WWW013AllowedLocations(objUsuario)

 	kill ^COMTempList(YM,YUSER,"VARLocais")

	&sql(
		DECLARE CursorLocais CURSOR FOR 
		SELECT Location, LocationName
		INTO :CodLocal, :NomeLocal
		FROM WWW0121
 		WHERE COMPANY = :YM
 		AND StorageLocn = 1
 		ORDER BY to_number(Location) )


	&sql(OPEN CursorLocais)
    IF (SQLCODE) {
		QUIT
    }

   	FOR { &sql(FETCH CursorLocais)
		QUIT:SQLCODE
		
		; Caso o usuário não seja administrador e o local não esteja na
		; lista de locais permitidos ao usuário, não popula
		if ((perfilUsuario '= 1) &&
			('$find(";"_locaisPermitidos_";", ";"_CodLocal_";"))) {
			continue
		}

		set $piece(objLista, Y, 1) = NomeLocal
		set ^COMTempList(YM,YUSER,"VARLocais",CodLocal,1)=objLista
   	}

   	&sql(CLOSE CursorLocais)
 
	quit
	
ImprimeRelatorio()	
	set vVisao		= $get(VORG(1))
	set vMes		= $get(VORG(2))
	set vAno		= $get(VORG(3))
	set vLocal		= $get(VORG(4))
	set vGrupo		= $get(VORG(5))
	set vProduto	= $get(VORG(6))
	set vCurvaABC	= $get(VORG(7))

	if ((vMes = "")||(vAno = "")) {
		$$$Alert("Preencha todos os campos obrigatórios.")
		do GoToForm^COMUtilForm("VARConsGrupoEstocagem","")
	} elseif ($$CheckFechamentoContabil^VAREntradaNotaFiscal(vMes,vAno) = $$$NO){
		$$$Alert("Este relatório esta disponível somente para os meses/anos que já foi gerado o fechamento contábil.")
		quit
	}
	
	do RunReportConsCentroCusto^VARJasperRunReport(vVisao,vMes,vAno,vLocal,vGrupo,vProduto,vCurvaABC)
	
	quit
]]></Routine>
</Export>