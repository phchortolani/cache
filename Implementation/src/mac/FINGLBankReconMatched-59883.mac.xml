<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBankReconMatched" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBankReconMatched
 
#include COMSYS 
#include FINConst
#include FINSYS
 
#define FORMNAME	"FINGLBankReconMatched"
 
#include COMGridEdit31Interface
 
 
OnBlur(pintCOL,pintROW,pstrYFELD)
	;-------------------------------------------------------------------------------
	; On Blur code from the grid
	;
	; Params: pintCOL		: Column Number
	; 		  pintROW		: Row id
	; 		  pstrYFELD		: YFELD value
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Mar-2006	Steve S		Commented
	;-------------------------------------------------------------------------------
	if pintCOL=3 do PerformMatch(pintROW,.pstrYFELD)
	quit
	
PerformMatch(pintROW,pstrYFELD,pidBankRecon,pidRow,pblnClear)
	;-------------------------------------------------------------------------------
	; When a checkbox is cleared, update the header information.
	;
	; Params:
	; pintCOL  : The grid column
	; pintROW  : The grid row
	; pstrYFELD: The grid row data
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Jul-2010	shobby	SR17411: Reversed innerText change.
	; 17-May-2010	shobby	SR17253: setInnerText functionality for firefox.
	; 09-Mar-2006	RPW		SR13305: Make sure everything is updated correctly with this match.
	; 06-Mar-2006	Steve S	SR14126: Matching Pre Clear logic
	; 01-Mar-2006	Steve S	SR14204: Moved from OnBlur, extra params, support toggle all
	; 21-Feb-2006	RPW		SR14229: Get the save matched record and update the screen
	; 17-Feb-2006	RPW		SR13675: Created
	;-------------------------------------------------------------------------------
	new idBankRecon,intLoop,idRow,strStatus,idMatched,blnClear
 
	// SR14204
	if $get(pidBankRecon)="" {
		set idBankRecon=$$GetYKEYContainer^COMGridEdit31Interface()
	} else {
		set idBankRecon=pidBankRecon
	}
		
	// SR14229
	if $get(pidRow)="" {
		set idRow=$$ReferenceRow^COMGridEdit31Interface(YFORM,pintROW)
	} else {
		set idRow=pidRow	
	}
	
	// SR14204
	if '$data(pblnClear) {	
		set blnClear='$$$FINGLBankReconMatchedCleared(pstrYFELD)
	} else {
		set blnClear='pblnClear
	}
	
	set blnClear=$$$ANBOOLEAN(blnClear)
	
	do UpdateCleared^FINGLBankRecon(idBankRecon,
	                                idBankRecon,
	                                $$$FINGLBankReconMatchedTransaction1(pstrYFELD),
	                                $$$FINGLBankReconMatchedTransactionLine(pstrYFELD),
	                                blnClear,$$$YES)
		
	write "document.all.td102.innerText='"_$$FormatCurrency^COMTable($get(^CacheTempBankRecon(YUSER,"TD")))_"';"
	write "document.all.td103.innerText='"_$$FormatCurrency^COMTable($get(^CacheTempBankRecon(YUSER,"TW")))_"';"
	write "document.all.td105.innerText='"_$$FormatCurrency^COMTable($get(^CacheTempBankRecon(YUSER,"UN")))_"';"
		
	; We need to reload from disk the changed values, so we have to modify pstrYFELD here
		
	set pstrYFELD=$get(^FINGLBankReconMatched(YM,idBankRecon,idRow,1))
	
	set idMatched=idBankRecon_$$$COMMA_idRow
		
	set $$$FINGLBankReconMatchedStatus(pstrYFELD)         = $select(blnClear:"",$$$YES:$$GetMatchStatus($$$FldFINGLBankReconMatchedStatus,pstrYFELD,idMatched,,,idBankRecon))
	set $$$FINGLBankReconMatchedMatchReference(pstrYFELD) = $select(blnClear:"",$$$YES:$$GetMatchStatus($$$FldFINGLBankReconMatchedMatchReference,pstrYFELD,idMatched,,,idBankRecon))
	set $$$FINGLBankReconMatchedMatchDate(pstrYFELD)      = $select(blnClear:"",$$$YES:$$GetMatchStatus($$$FldFINGLBankReconMatchedMatchDate,pstrYFELD,idMatched,,,idBankRecon))
	set $$$FINGLBankReconMatchedMatchDiff(pstrYFELD)      = $select(blnClear:"",$$$YES:$$GetMatchStatus($$$FldFINGLBankReconMatchedMatchDiff,pstrYFELD,idMatched,,,idBankRecon))
		
	set strStatus=$$$Save("FINGLBankReconMatched",idMatched,pstrYFELD,1) // SR13813
	
	if blnClear {
		do RemoveFromManualMatch^FINGLBankReconManualMatch(idBankRecon,YFORM,idMatched)
		do RemoveFromPreCleared^FINGLBankReconPreClearedMatch(idBankRecon,idRow) //SR14126
	}
 
	if '$data(^FINGLBankReconMatcheds(YM,1,$$$YES,idBankRecon)) { //SR14204
		do UpdateHeaderField^COMGridEdit31Interface("D28",$$$ANNO)
	} elseif ('($data(^FINGLBankReconMatcheds(YM,1,$$$ANINO,idBankRecon))))&&('$data(^FINGLBankReconMatcheds(YM,1,$$$NO,idBankRecon))) {
		do UpdateHeaderField^COMGridEdit31Interface("D28",$$$YES)
	}
 
	quit
	
UpdateMatched(pidBankRecon,pidTran,pidTranLine,pblnCleared,pblnManual,
			  pstrRef="",pdteTransaction="",pidBankLine="",pstrType="")
	;-------------------------------------------------------------------------------
	; Find the Matched record for this transaction line and set the cleared/manually cleared
	; flags.
	;
	; Params:
	; pidBankRecon: The id of the bank reconciliation record
	; pidTran     : The id of the gl transaction
	; pidTranLine : The id of the gl transaction line
	; pblnCleared : Whether this matched record is cleared
	; pblnManual  : Whether this matched record is manually cleared
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 20-Feb-2006	RPW		SR14229: Added extra bits about reference and date, bank tran and match type (search)
	; 17-Feb-2006	RPW		SR13675: Created
	;-------------------------------------------------------------------------------
	new objBankReconMatched,idBankReconMatched,strStatus
	
	set objBankReconMatched=""
 
	set idBankReconMatched=$order(^FINGLBankReconMatcheds(YM,3,pidTran,pidTranLine,pidBankRecon,""))
	if idBankReconMatched'="" {
		set objBankReconMatched=$get(^FINGLBankReconMatched(YM,pidBankRecon,idBankReconMatched,1))
		if objBankReconMatched'="" {
			set $$$FINGLBankReconMatchedCleared(objBankReconMatched)        			= $$$ANBOOLEAN(pblnCleared)
			set $$$FINGLBankReconMatchedManuallyCleared(objBankReconMatched)			= $$$ANBOOLEAN(pblnManual)
			set $$$FINGLBankReconMatchedMatchReference(objBankReconMatched)				= pstrRef	
			set $$$FINGLBankReconMatchedMatchDate(objBankReconMatched)      			= pdteTransaction
			set $$$FINGLBankReconMatchedMatchDiff(objBankReconMatched)      			= $select(pdteTransaction'="":pdteTransaction-$$$FINGLBankReconMatchedTransactionDate(objBankReconMatched),1:"")
			set $$$FINGLBankReconMatchedBankTranLine(objBankReconMatched)   			= pidBankLine
			set $$$FINGLBankReconMatchedMatchType(objBankReconMatched)      			= pstrType
			set $$$FINGLBankReconMatchedStatus(objBankReconMatched)         			= $$GetMatchStatus($$$FldFINGLBankReconMatchedStatus,objBankReconMatched,pidBankRecon_$$$COMMA_idBankReconMatched,,,pidBankRecon)
			
			set strStatus=$$$Save("FINGLBankReconMatched",pidBankRecon_$$$COMMA_idBankReconMatched,objBankReconMatched,1) // SR13813
		}
	}
	
	quit objBankReconMatched
 
GetMatchStatus(pintCol,pstrYFELD,pstrYKEY="",pblnMulti=$$$NO,pblnUpdateRelatives=$$$YES,pidBankRecon)
	;-------------------------------------------------------------------------------
	; Get the correct match values for the grid.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 17-Feb-2006	RPW		SR13697: Created
	;-------------------------------------------------------------------------------
	new strResult,strType,blnMulti,idParent,idManual,objManual,idBankRecon,intCount
	new blnClear
	
	set strResult=""
 
	if pintCol=$$$FldFINGLBankReconMatchedStatus {
		
		set blnMulti=pblnMulti
		
		set blnClear=+$$$FINGLBankReconMatchedCleared(pstrYFELD)
		
		if pblnUpdateRelatives {
			set idManual=$$FindManualMatchId^FINGLBankReconManualMatch(pidBankRecon,"FINGLBankReconMatched",pstrYKEY)
			if $$$IsValidKey(pidBankRecon,idManual) {
				set objManual=$$$DATA($$$MANUALMATCH,idManual)
				if $$$FINGLBankReconManualMatchClassType(objManual)=$$$MATCHCACHE {
					set idParent=$$$FINGLBankReconManualMatchParent(objManual)
					if idParent=0 {
						set idParent=$$$KEY2(idManual)
					} else {
						set idParent=idParent
					}
					set intCount=$$ChildrenCount^FINGLBankReconManualMatch(pidBankRecon,idParent)
					set blnMulti=intCount>$select(blnClear:1,1:2)
					do MakeMulti(pidBankRecon,pintCol,$$$FINGLBankReconManualMatchClassId(objManual),blnMulti)
				}
			}
		}
		
		if blnClear {
			
			if +$$$FINGLBankReconMatchedManuallyCleared(pstrYFELD) {
				set strResult=$$$Text($select(blnMulti:"Fin01001",1:"Fin00521"))  ; Multi ; Manual
			} else {
				set strType=+$$$FINGLBankReconMatchedMatchType(pstrYFELD)
				set strResult=$$$Text($case(strType,0:"Fin00520",1:"Fin00981",10:"Fin00982",11:"Fin00983"))
			}
		}
	} elseif pintCol=$$$FldFINGLBankReconMatchedMatchReference {
		if (+$$$FINGLBankReconMatchedCleared(pstrYFELD))&&('$$$FINGLBankReconMatchedManuallyCleared(pstrYFELD)) {
			set strResult=$$$FINGLBankReconMatchedMatchReference(pstrYFELD)
		}
	} elseif pintCol=$$$FldFINGLBankReconMatchedMatchDate {
		if (+$$$FINGLBankReconMatchedCleared(pstrYFELD))&&('$$$FINGLBankReconMatchedManuallyCleared(pstrYFELD)) {
			set strResult=$$$FINGLBankReconMatchedMatchDate(pstrYFELD)
		}
	} elseif pintCol=$$$FldFINGLBankReconMatchedMatchDiff {
		if (+$$$FINGLBankReconMatchedCleared(pstrYFELD))&&('$$$FINGLBankReconMatchedManuallyCleared(pstrYFELD)) {
			set strResult=$$$FINGLBankReconMatchedMatchDiff(pstrYFELD)
		}
	}
	
	
	quit strResult
	
OnAfterDataFields()
	;-------------------------------------------------------------------------------
	; Routine to run after data fields
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 02-Mar-2006	Steve S		Created
	;-------------------------------------------------------------------------------
	do ProcessFilters()
	quit
	
		
ProcessFilters()
	;-------------------------------------------------------------------------------
	; Process filters (moved from OnAfterDataFields)
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 22-Feb-2006	Steve S		SR14149: Match Type Filter
	; 21-Feb-2006	Steve S		SR14110: Created
	;-------------------------------------------------------------------------------
	new idField,strValue
	
	if $data(^CacheTempFilter(YUSER)) {
		set idField=$order(^CacheTempFilter(YUSER,""))
		set strValue=$get(^CacheTempFilter(YUSER,idField))
		
		if idField=$$$FldFINGLBankReconMatchedCleared {
			$$$GRIDHideShowRows(idField,strValue,$$$NO)
		} elseif idField=$$$FldFINGLBankReconMatchedMatchType { ;SR14149
			$$$GRIDHideShowRows(idField,,$$$NO,$$$YES,strValue,$$$NO)	
		}
	}
	
	do UpdateHeaderField^COMGridEdit31G("M35",$$GetFilter^FINGLBankTranFilter())
 
	quit
	
	
ClearFilters(pa,pb)
	;-------------------------------------------------------------------------------
	; Blow away any existing filters and show all the lines.
	;
	; Params: pa,pb		: Not used -- passed in by the hyperevent from WWWEVENT
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 22-Feb-2006	Steve S		SR14110: Created
	;-------------------------------------------------------------------------------
	if $data(^CacheTempFilter(YUSER)) {
		kill ^CacheTempFilter(YUSER)
		do UpdateHeaderField^COMGridEdit31G("M35",$$$Text("Fin00888")) ;None
		do ShowAllRows^COMGridEdit31R()
	} else {
		$$$Alert("Fin00985")  ;No filter applied	
	}
	
	quit ""
	
MakeMulti(pidBankRecon,pintCol,pidParent,pblnSetMulti) 
	;-------------------------------------------------------------------------------
	; This will update all the children of a parent and make the status MULTI
	; when required.
	;
	; Params:
	; pidBankRecon: The id of the bank reconciliation record
	; pintCol     : The column being modified
	; pidParent   : The parent manual match records id
	; pblnSetMulti: Is this to be set to multi or not?
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 03-Mar-2006	RPW		SR13697: Created
	;-------------------------------------------------------------------------------
 
	new arrMatches,idLine,strClass,idClass,objMatched,strStatus
	
	do GetMatchArray^FINGLBankReconManualMatch(pidBankRecon,$$$MATCHCACHE,pidParent,.arrMatches)
	
	set idLine=""
	for {
		set idLine=$order(arrMatches(idLine))
		quit:idLine=""
		
		set strClass=$piece(arrMatches(idLine),Y,1)
		set idClass=$piece(arrMatches(idLine),Y,2)
		
		if strClass="FINGLBankReconMatched" {		
			set objMatched=$$$DATA(strClass,idClass)
			if '(($$$FINGLBankReconMatchedStatus(objMatched)=$$$Text("Fin01001") && pblnSetMulti) ||($$$FINGLBankReconMatchedStatus(objMatched)=$$$Text("Fin00521") && 'pblnSetMulti)) {
				set $$$FINGLBankReconMatchedStatus(objMatched)=$$GetMatchStatus(pintCol,objMatched,idClass,pblnSetMulti,$$$NO,pidBankRecon)
				set strStatus=$$$Save(strClass,idClass,objMatched,$$$YES)
			}
		}
	}
	
	quit
	
	
	
DisableCleared(pstrYKEY,pstrYFELD) 
	;-------------------------------------------------------------------------------
	; Disable the cleared checkbox if we have lines
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Oct-2006	Steve S	SR15116: Reverted disabling if Multi Only
	; 11-Aug-2006	SC		SR14332: Disable checkbox if AllowMultiOnly.
	; 08-Mar-2006	JW		SR13305: Created
	;-------------------------------------------------------------------------------
	new idAccount
	set idAccount = $$$FINGLBankReconBankAccount($$$GRIDYFELDContainer)
 
	//SR15116: Commented 
	//if $$$AllowMultiOnly(idAccount) set YHID=1 //SR14332
	if (idAccount'="") && ($data(^FINGLBankTran(YM,idAccount))) set YHID=1
 	
	quit
	
 
Unmatch(a,b) 
	;-------------------------------------------------------------------------------
	; Unmatch the current row when the U button is pressed
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Mar-2006	RPW			SR14461: Created
	;-------------------------------------------------------------------------------
	
	do Unmatch^FINGLBankReconUtilities($$$YES)
	
	quit ""
]]></Routine>
</Export>