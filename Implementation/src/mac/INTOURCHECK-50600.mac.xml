<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INTOURCHECK" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INTOURCHECK(AUF,POS,VART,TAG,ALLE)
	#include COMSYS
	#include INConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		PRÜFEN TOUR FÜR AUSLIEFERUNG
	;
	; Inputs : 
	;	AUF			Order No
	;	POS			Order Line
	;	VART		Delivery type
	;	TAG			Delivery Date
	;	ALLE		All Routes?   (bln)
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 11-Jul-2007	GRF		SR15558: Doco; quits; boolean macro
	; 07.04.2003	FIS
	;-------------------------------------------------------------------------------
	NEW TOUR,ADR1,POS1,ERR,TOUREN,CUST,TO,ERR,VA
	
	SET AUF  = $GET(AUF)    ;ORDER
	SET POS  = $GET(POS)    ;L.I.
	SET VART = $GET(VART)   ;VORGEGEBENE VERSANDART / FIX TYPE OF DELIVERY
	SET TAG  = $GET(TAG)    ;VORGEGEBENE AUSLIEFRUNGSTAG / FIX DELIVERY DATE
	SET ALLE =+$GET(ALLE)   ;ALLE MÖGLICHEN TOUREN? JA/NEIN /ALL TOURS Y/N
	SET TOUR = ""
	SET ADR1 = ""           ;ADRESSEE
	
	IF (AUF'="") && (POS'="") DO
	. SET CUST=$PIECE($GET(^INAUF(YM,AUF,1)),Y,1)  ;KUNDE / CUSTOMER
	. IF CUST'="" SET ADR1=$PIECE($GET(^INKUNDE(YM,CUST,1)),Y,1,24)  ;KUNDENANSCHRIFT / CUSTOMER ADDRESS
	. IF $DATA(^INAUFA(YM,AUF,6)) DO  ;LIEFERANSCHRIFT / DELIVERY ADDRESS
	. . SET ADR1=$GET(^INAUFA(YM,AUF,6,1))
	. . IF CUST'="" SET $PIECE(ADR1,Y,18)=$PIECE($GET(^INKUNDE(YM,CUST,1)),Y,18)   ;UNDEF;TYBD;8,10,2004
	. ;
	. IF $DATA(^INAUFPA(YM,AUF,POS)) DO  ;POSITIONS-LIEFERANSCHRIFT  / POSITION DEL. ADDRESS
	. . SET ADR1=$GET(^INAUFA(YM,AUF,POS,1))
	. . IF CUST'="" SET $PIECE(ADR1,Y,18)=$PIECE($GET(^INKUNDE(YM,CUST,1)),Y,18)  ;UNDEF;TYBD;8,10,2004
	
	KILL TOUREN
	DO TOUR       ; ^INSPEDTOUR() => TOUREN()
	SET VA=""
	FOR  SET VA=$ORDER(TOUREN(VA)) QUIT:VA=""  DO  QUIT:ALLE'=$$$YES
	. SET TO=""
	. FOR  SET TO=$ORDER(TOUREN(VA,TO)) QUIT:TO=""  DO  QUIT:ALLE'=$$$YES
	. . IF TOUR="" SET TOUR=VA_","_TO QUIT
	. . SET TOUR=TOUR_Y_VA_","_TO
	
	QUIT TOUR
	
TOUR     ;ERMITTELN IN FRAGE KOMMENDE TOUREN ;find within caption 
	NEW TO,TO1,OK,REGION,PLZBEREICH,PLZ,YI
	
	SET ADR1 = $GET(ADR1)
	DO:VART'=""  IF VART="" FOR  SET VART=$ORDER(^INSPEDTOUR(YM,VART)) QUIT:VART=""  DO
	. SET TO=""
	. FOR  SET TO=$ORDER(^INSPEDTOUR(YM,VART,TO)) QUIT:TO=""  DO
	. . SET TO1=$GET(^INSPEDTOUR(YM,VART,TO,1))
	. . SET ERR=0
	. . ;
	. . ;WOCHENTAGE
	. . IF $PIECE(TO1,Y,5)'="" DO
	. . . IF '$FIND(","_$TRANSLATE($PIECE(TO1,Y,5),";",",")_",",","_$$^WWWDAY(TAG)_",") SET ERR=1  ;FALSCHER WOCHENTAG
	. . ;
	. . ;REGION
	. . IF ADR1'="" IF $PIECE(TO1,Y,6)'="" DO
	. . . SET REGION=$PIECE(ADR1,Y,18)
	. . . IF REGION'="" IF '$FIND(","_$TRANSLATE($PIECE(TO1,Y,6),";",",")_",",","_REGION_",") SET ERR=2  ;FALSCHE REGION
	. . ;
	. . ;PLZ-BEREICHE
	. . IF ADR1'="" IF $PIECE(TO1,Y,8)'="" DO
	. . . SET $PIECE(TO1,Y,8)=$TRANSLATE($PIECE(TO1,Y,8),",",";")
	. . . FOR YI=1:1  QUIT:$PIECE($PIECE(TO1,Y,8),";",YI,999)=""  DO
	. . . . QUIT:$PIECE($PIECE(TO1,Y,8),";",YI)=""
	. . . . SET PLZBEREICH=$PIECE($GET(^INPARA(YM,"PLZBEREICHE",SPRACHE,$PIECE($PIECE(TO1,Y,8),";",YI),1)),Y,1)
	. . . . SET PLZ=$PIECE(ADR1,Y,12)
	. . . . IF PLZ'="" IF PLZBEREICH'="" DO
	. . . . . SET PLZBEREICH=$TRANSLATE(PLZBEREICH,"/;|\+ '"_"""",",,,,,")
	. . . . . IF $FIND(PLZBEREICH,"-") DO  QUIT
	. . . . . . IF $PIECE(PLZBEREICH,"-",1)']]PLZ SET ERR=3 QUIT  ;FALSCHER PLZ-BEREICH
	. . . . . . IF $PIECE(PLZBEREICH,"-",2)]]PLZ  SET ERR=3 QUIT  ;FALSCHER PLZ-BEREICH
	. . . . . ;
	. . . . . IF '$FIND(","_PLZBEREICH_",",","_PLZ_",") SET ERR=3  ;FALSCHER PLZ-BEREICH
	. . ;
	. . IF ERR=0 SET TOUREN(VART,TO)=""
	
	QUIT
	
PRUEF(AUF,POS,VART,TOUR,TAG) ;PRÜFEN, OB TOUR EINE GÜLTIGE TOUR IST
	NEW TOUREN,OK
	
	SET OK=0
	SET TOUREN=$$^INTOURCHECK(AUF,POS,VART,TAG,1)
	IF TOUREN'="" IF $FIND(Y_TOUREN_Y,Y_VART_","_TOUR_Y) SET OK=1
	QUIT OK
	
	
IncludeTour(pdteTour)
    /*-------------------------------------------------------------------------------
    ; Determines whether or not a tour date should be included in INTOUR.
    ; Checks the number of purge days allowed, and validates this against
    ; today's date to determine.
    ;
    ; Params: pdteTour 	: The date of the tour. (Required)
    ;
    ; ByRefs:
    ;
    ; Returns: boolean
    ;
    ; History:
    ; 22-Jan-2006	RPW/SS		SR13993: Code Review, remove "" ambiguity
    ; 21-Dec-2005	Steve S		SR13993: Created
    ;-------------------------------------------------------------------------------*/
	new blnInclude,intPurgeDays
 
	set blnInclude=$$$NO
	
	set intPurgeDays=$$$INVORGTrafficPurgeHorizonDays($get(^INVORG(YM,YM,1)))
	if intPurgeDays="" set intPurgeDays=60
		
	if (pdteTour+intPurgeDays)>$horolog set blnInclude=$$$YES	
	 
	quit blnInclude
	
	
	;SET TOUR=$ORDER(^INTOUR(YM,TOUR))
	;QUIT:TOUR=""
	;QUIT:(TOUR+HIST)>(+$HOROLOG)
		
	;KILL ^INTOUR(YM,TOUR)  ;LÖSCHEN ALTES TOURDATUM ;Delete 
	
]]></Routine>
</Export>