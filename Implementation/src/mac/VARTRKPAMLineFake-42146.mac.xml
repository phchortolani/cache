<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARTRKPAMLineFake" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMConst
#include INConst
#include WWWConst
#include FIN
#include VARConst
#include COMSYS
 
VARTRKPAMLineFake
	quit
	
OnAfterDataFields(pYKEY,pYFELD,pYSEITE)
 
	IF YSEITE=1 do LoadGrid(pYKEY)
 	quit
 	
 
LoadGrid(pid="")
 
	new objInvoice,YFORM,YKEY,YAUSWAHL,YFELD,objVARTRKATARequest,strData
	set YFORM="VARTRKPAMLineFake"
	set YFELD=""
	set YKEY=$get(pid)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=290
	set $$$COMGridEditParameterGridName(YAUSWAHL)=YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)='($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARTRKPAM"
	
	do ^COMGridEdit31
	
	quit
 
 
OnBeforeSave(pYKEY,pYFELD)
 
	new strStatus
	set strStatus=$$$GRIDSave(pYKEY)
	if $$$ISOK(strStatus) {
	} else {
		set Q=$$$QDontSave
	}
	quit
	
OnAfterDelete(pYKEY)
 
	do DELETE^COMGridEdit31Interface()
	quit
	
UpdateUsedQuantity(pidPAM, pidPAMLine, fltQuantityToIgnore=0)
 
	// Atualiza os valores das quantidades sendo usadas na AFM baseadas na classe VARSESPamAfm.
	new objPAMLine, fltQuantity, fltUsedQuantity, strStatus,
	    blnQuantidadeTotalmenteUsada
	
	set fltUsedQuantity = $$GetQuantidadeAtendida(pidPAM, pidPAMLine)
	set fltUsedQuantity = fltUsedQuantity - fltQuantityToIgnore
	
	// Andre, 19/02/2008: Remove aspas da variável:
 
	// Para depurar, e causar erro na deleção da INAUF, comente a linha a seguir:
 	set pidPAM = $translate(pidPAM,"""") 
 	set pidPAMLine = $translate(pidPAMLine,"""") 
	set objPAMLine  				 = $get(^VARTRKPAMLineFake(YM, pidPAM, pidPAMLine, 1))
 
 	// Andre 19/02/2008: Se não encontrar a linha da PAM, retorna erro:
 	if ( $get(objPAMLine) = "" ) {
	 	set strStatus = "0~Erro: não encontrada linha "_pidPAMLine_" da PAM "_pidPAM
	 	quit strStatus
 	}
 	
 	set fltQuantity 				 = $$$VARTRKPAMLineFakeQuantity(objPAMLine)
	
	set blnQuantidadeTotalmenteUsada = (fltQuantity = fltUsedQuantity)
	/*IF $PIECE($GET(^VARTRKPAM(pidPAM)),Y,14)'=1 {
		set blnQuantidadeTotalmenteUsada=1
	}*/
	set $$$VARTRKPAMLineFakeQuantidadeTotalmenteAtend(objPAMLine) = blnQuantidadeTotalmenteUsada
	set strStatus = $$$Save("VARTRKPAMLineFake",pidPAM_$$$COMMA_pidPAMLine,objPAMLine,$$$YES)
	
	quit strStatus
	
GetQuantidadeAtendida(pidPAM, pidPAMLine)
 
	new fltQuantidade, idAFM, idAFMLine, objPAMAFM
	
	// Somando as quantidades em uso.
	set fltQuantidade = 0
	$$$Order4(^VARSESPAMAFM,YM,pidPAM,pidPAMLine,idAFM)
	
		$$$Order5(^VARSESPAMAFM,YM,pidPAM,pidPAMLine,idAFM,idAFMLine)
		
			set objPAMAFM     = $get(^VARSESPAMAFM(YM, pidPAM, pidPAMLine, idAFM, idAFMLine, 1))
			set fltQuantidade = fltQuantidade + $$$VARSESPAMAFMQtdAtendida(objPAMAFM)
		
		$$$End	
	$$$End
	
	quit fltQuantidade
	
GetQuantidadeAAtender(pidPAM, pidPAMLine)
 
	new objPAMLine, fltQuantidadePedida, fltQuantidadeAtendida, fltQuantidadeAAtender
	
	set objPAMLine = $get(^VARTRKPAMLineFake(YM, pidPAM, pidPAMLine, 1))
	
	set fltQuantidadePedida   = $$$VARTRKPAMLineFakeQuantity(objPAMLine)
	set fltQuantidadeAtendida = $$GetQuantidadeAtendida(pidPAM, pidPAMLine)
	set fltQuantidadeAAtender = fltQuantidadePedida - fltQuantidadeAtendida
 
	quit fltQuantidadeAAtender
	
GetQuantidadeAAtenderPorItem(pidItem, pidLocation)
	// Verifica em todas as PAMs as quantidades que ainda não foram atendidas
	// para o item especificado.
 
	new fltQuantidade, idPAM, idPAMLine, objPAM, idLocation
	
	set fltQuantidade = 0
 
	$$$Order5(^VARTRKPAMLineFakes,YM,20,$$$NO,$$$Index(pidItem),idPAM)
	
		$$$Order6(^VARTRKPAMLineFakes,YM,20,$$$NO,$$$Index(pidItem),idPAM,idPAMLine)
	
			set objPAM     = $get(^VARTRKPAM(YM, idPAM, 1))
			set idLocation = $$$VARTRKPAMSetorSolicitante(objPAM)
			continue:(idLocation '= pidLocation)
			
			set fltQuantidade = fltQuantidade + $$GetQuantidadeAAtender(idPAM, idPAMLine)
			
		$$$End
	
	$$$End
 
	quit fltQuantidade
	
OnBeforeSaveHook()
	// Nunca deixar o valor booleano ser salvo como vazio "", apenas como 0 ou 1.
 
	new blnTotalmenteRecebida
	set blnTotalmenteRecebida = $$$VARTRKPAMLineFakeQuantidadeTotalmenteAtend(YFELD)
 
	if blnTotalmenteRecebida = "" {
		set $$$VARTRKPAMLineFakeQuantidadeTotalmenteAtend(YFELD) = $$$NO
	}
 
	quit $$$OK
 
GetItemGroup(pidItem)
 
	new objItem, idGrupo
	quit:pidItem="" ""
	
	set objItem  = $get(^INART(YM, pidItem, 1))
	set idGrupo  = $piece(objItem, Y, 30)
 
	quit idGrupo
	
CancelarPAMLines(pidPAM)
 
	new idPAMLine, objPAMLine, strStatus
	
	$$$Order3(^VARTRKPAMLineFake,YM,pidPAM,idPAMLine)
	
		set objPAMLine = $get(^VARTRKPAMLineFake(YM, pidPAM, idPAMLine, 1))
		set $$$VARTRKPAMLineFakeQuantidadeTotalmenteAtend(objPAMLine) = $$$YES
		set strStatus = $$$Save("VARTRKPAMLineFake",pidPAM_$$$COMMA_idPAMLine,objPAMLine,$$$YES)
	
	$$$End
 
	quit
	
	
 // Pega o número da linha de acordo com o código do item.
GetLineNumber(pidPAM, pidItem)
 
	new idPAMLine
	
	set idPAMLine = $Order(^VARTRKPAMLineFakes(YM, 21, pidItem, pidPAM, ""))
 
	quit idPAMLine
]]></Routine>
</Export>