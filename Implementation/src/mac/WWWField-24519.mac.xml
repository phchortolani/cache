<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWField" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWField
	
#include WWWConst
#include COMSYS
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^WWWField("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
GetDetails(YFORM,YART,YLFN,&pidClass,&pintFormFld,&pobjForm,&pobjFormFld,&pobjClsFld,&pobjCustFld,&pintType,&pobjClsCustFld)
	;-------------------------------------------------------------------------------
	; Get the form record and other form details
	;
	; Params:	YFORM       - WWW120 key
	; 			YART		- "P" / "D"
	; 			YLFN		- WWW002/WWW003 id
	; 			pidClass 	- WWW001 id
	; 			pintFormFld	- WWW121/WWW122 id
	; 			pobjForm	- WWW120 record
	; 			pobjFormFld	- WWW121/WWW122 record
	; 			pobjClsFld	- WWW002/WWW003 record
	; 			pobjCustFld - WWW121D/WWW122D record
	; 			pintType	- field data type
	; 			pobjClsCustFld - WWW002D record
	;
	; Returns:	field record
	;
	; History:
	; 18-Sep-2007	shobby	SRBR014619: Use standard interface to WWW122 to
	;							consider customisation as well.
	; 10-Apr-2007	PO		SR15442: Included class customisation field
	; 23-Jan-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	
	$$$LogR("GetDetails",$get(YFORM)_"<"_$get(YART)_"<"_$get(YLFN))
	
	set pintFormFld = YLFN   ; Form field # defaults to class field #
	
	set pobjForm = $get(^WWW120(0,YFORM,1))
	set pidClass = $$$WWW120ClassUsedInForm(pobjForm)
	
	set pobjFormFld = ""
	set pobjClsFld  = ""
	set pobjCustFld = ""
	
	if YART="P" {
		set pobjFormFld = $get(^WWW121(0,YFORM,pintFormFld,1))   ;DATEN AUS PRIMÄRSCHLÜSSEL ;out of 
		set pobjCustFld = $get(^WWW121D(0,YFORM,pintFormFld,YM,1))
		
		if pidClass'="" {		// Does it make sense to have a key but no class ? Manual form wouldn't have key?
			set pobjClsFld     = $get(^WWW002(0,pidClass,YLFN,1))
			set pobjClsCustFld = $get(^WWW002D(0,pidClass,YLFN,YM,1))
		}
		
	} else {
		if YART="D" {
			set pintFormFld = $order(^WWW122s(0,4,YLFN,YFORM,""))   ; Actual Form Fld # is first form field to link to class field
			if (pidClass'="") {
				set pobjClsFld = $get(^WWW003(0,pidClass,YLFN,1))
			}
		}
		
		if pintFormFld'="" {
			set pobjFormFld = $$Get^WWW122(YFORM,pintFormFld)
			set pobjCustFld = $get(^WWW122D(0,YFORM,pintFormFld,YM,1))
		}
	}
	
	set pintType = $$GetInputType(YART,YLFN,pobjFormFld,pobjClsFld,pobjCustFld)
	quit
	
	
GetInputType(YART,YLFN,pobjFormFld,pobjClsFld,pobjCustFld)
	;-------------------------------------------------------------------------------
	; Get the field's input type
	;
	; Params:
	;
	; Returns:	enum
	;
	; History:
	; 30-Jan-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	new intType
	
	if YART="P" {
		set intType = $$$WWW002InputType(pobjClsFld)
		if (intType="") && (YLFN'=1) set intType = 1                 ; Date field for time forms?
	
	} else {
		
		set intType = $$$WWW122DInputType(pobjCustFld)
		if intType="" {
			if $$$WWW122DataInputType(pobjFormFld)=3 {               ; Checkbox
				set intType = 2
			
			} else {
				set intType = $$$WWW122InputType(pobjFormFld)
				
				if (intType="") && (YART="D") {
					set intType = $$$WWW003InputType(pobjClsFld)     ; Get from class
				}
			}
		}
	}
	
	if intType="" set intType = 6                                    ; Default to text type.
	quit intType
	
	
GetID(pidForm,pidFormFld,&pstrType,&pintField)
	;-------------------------------------------------------------------------------
	; Get the HTML id for a given @net form / field. Also return field details.
	; (Not for primary keys)
	;
	; Params:
	;
	; Returns:	string id
	;
	; History:
	; 27-Mar-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	new idClsFld
	
	set idClsFld = $$$WWW122SequenceNumber($get(^WWW122(0,pidForm,pidFormFld,1)))
	
	if idClsFld="" {
		set pstrType = "M"
		set pintField = pidFormFld
	} else {
		set pstrType = "D"
		set pintField = idClsFld
	}
	quit "Y"_pidForm_pstrType_pintField
	
	
SplitID(strField,pidForm,&YART,&YLFN)
	;-------------------------------------------------------------------------------
	; split a field's HTML id into parts
	;
	; Params:
	; 	strField										e.g. YINAbcD16
	; 	pidForm		Form Name							e.g. INAbc
	;
	; Returns:
	;	YART	(ByRef)		Field Type (P,D,M,???)		e.g. D
	;	YLFN	(ByRef)		Field Number				e.g. 16
	; 
	; History:
	; 26-Mar-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	set YART = $$$StripNum($piece(strField,pidForm,2))	// YFORM_YART_YLFN
	set YLFN = $piece(strField,pidForm_YART,2)			// Field number
	
	set:YART="" YART="D"
	
	quit
	
	
GetLast(&YINHALT)
	;-------------------------------------------------------------------------------
	; Recall a previous input for the current field.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 07-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 21-Feb-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	new YA,YKEY,YLAST,YII,NUM,strStored
	
	$$$LogR("GetLast",$get(YINHALT)_"<")
	
	set NUM = $extract(YINHALT,3,5)+1
	set YINHALT = ""
	set strStored = ""
	
	if YDATEI'="" {
		set YKEY=$get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"P",1))
		if YKEY'="" {
			set YA=""
			set YA(1)="^WWWLAST("""_YM_""","""_YDATEI_""","""_YKEY_""",YA)"
			set YA(2)="^WWWLAST("""_YM_""","""_YDATEI_""","""_YKEY_""",YA,1)"
			set YLAST=""
			for YII=1:1:NUM-1 set YA=$order(@(YA(1)),-1) quit:YA=""
			set YA=$order(@(YA(1)),-1)
			
			if YA'="" {
				set strStored = $piece($get(@(YA(2))),Y,YLFN)
				set YINHALT = $$GetLiteral^WWWTR(YTYP,strStored)
			}
		}
	}
	quit strStored
	
]]></Routine>
</Export>