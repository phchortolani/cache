<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INATP1" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INATP1(ART,LOC,QTY,DAT,RET)	;INATP1;FIS;AUFBEREITEN ATP INFORMATIONEN;27.10.2003  ; Compiled February 7, 2005 16:02:05
#include COMSYS
#include INConst
#include WWWConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		AUFBEREITEN ATP INFORMATIONEN ;Prepares ATP information.
	;
	; Inputs : 
	;	ART = ITEM NUMBER ;Type ITEM 
	;	LOC = WAREHOUSE LOCATION
	;	QTY = REQUIRED QUANTITY
	;	DAT = REQUIRED DATE
	;	RET = RETURN TYPE:
	;	      0: AVAILABLE YES/NO
	;	      1: AVAILABLE QUANTITY
	;	      2: DATES TO FULFIL REQ. QTY. (DATE1#QTY1~DATE2#QTY2~...)
	;	      3: CHECK NEGATIVE ATP (0 = NO NEGATIVE ATP, 1=NEGATIVE ATP, 2=NEGATIVE, BUT ALLOWED)
	;	      4: RETUNS ALL ATP DATES, SAME AS 2 BUT IGNORING THE REQUIRED QTY
	;	      5: RETURNS THE NEXT DELIVERY DATE
	;	     10: AVAILABLE QUANTITY ATP~PAB~CPAB
	;
	; ByRef :
	;
	;
	; Returns :
	;	YRETVAL
	;
	; History :
	; 28-May-2008	GRF		SR15776: replace INARTMENGE call with equivalent entry
	; 							point after specifying ExcludeBlocked; remove
	; 							unnecessary arithmetic conversions
	; 29-Oct-2007	FIS		BR014564: ATP request with PAB and CPAB
	; 16-Jan-2007	GRF		SR15344: Doco; quits
	; 04-Aug-2006	FIS		SR14823: USE LEADTIME OUT OF SUPPLIER IF AVAILABLE
	; 14-Dec-2005	JW		SR14025: Reverted 13881 change - use INVORG setting (p 157)
	; 25-Nov-2005	JW		SR13881: Do not include unavailable stock
	; 02-Aug-2005   PP		SR13132: if RET=5 get the next delivery date if available
	; 18-Jul-2005	GRF		SR12275 : Clarify code (doco)
	; 18-Jul-2005 	MS		SR12275: for RET=4: set leadtime to today if no DRP
	; 						setups for lead time
	; 13-Jul-2005	RPW		SR12889: Should only check for <0 not <=0 for the SOH
	; 						quantity as you may be allocating all the stock on hand.
	; 27.10.2003	FIS
	;-------------------------------------------------------------------------------
	NEW YRETVAL,DAT1,DAYS,LEADTIME,DAT1,QTY1,ATPQTY,INSIDE,OUTSIDE
	
	SET YRETVAL=""
	;WEM;24554;20.11.2003;AVOIDING PROBLEMS
	SET ART =  $get(ART)				QUIT:ART="" YRETVAL				;ITEM
	SET LOC =  $GET(LOC)				IF LOC="" SET LOC=YLOCATION		;LOCATION
	SET QTY = +$GET(QTY)												;QUANTITY
	SET DAT =  $GET(DAT)												;REQUIRED DATE
	SET RET = +$GET(RET)												;RETURN TYPE
	
	KILL ^WWWSOR(YUSER,"ATP")
	KILL ^WWWSOR(YUSER,"PAB")   ;BR014564
	KILL ^WWWSOR(YUSER,"CPAB")  ;BR014564
	
	//SET ^WWWSOR(YUSER,"ATP",+$HOROLOG)=$$^INARTMENGE(ART,,LOC,,8)            ;SR13881 ;SR14025
 ;	set ^WWWSOR(YUSER,"ATP",+$horolog) = $$^INARTMENGE(ART,,LOC,,0)            ;AVAILABLE TO PROMISE (NUR FREIE MENGE)
 ;	set ^WWWSOR(YUSER,"ATP",+$horolog) = $$^INARTMENGE(ART,,LOC,,0,,$$$YES)    ;AVAILABLE TO PROMISE - exclude if expired ;SR15776
	set ^WWWSOR(YUSER,"ATP",+$horolog) = $$AvailToPromise^INARTMENGE(ART,LOC)  ;AVAILABLE TO PROMISE - exclude if expired
	IF RET=10 SET ^WWWSOR(YUSER,"PAB",+$HOROLOG)=$$^INARTMENGE(ART,,LOC,,2)    ;BR014564
	IF RET=10 SET ^WWWSOR(YUSER,"CPAB",+$HOROLOG)=$GET(^WWWSOR(YUSER,"PAB",+$HOROLOG))  ;BR014564
 	
	if RET=5,DAT="" set DAT=$horolog+1		;SR13132
	
	IF DAT'="" DO
	. NEW BGJOB,YLOCATION,ATPREQUEST
	. SET YLOCATION=LOC                 ;SET LOCATION 
	. SET BGJOB=1
	. SET ATPREQUEST=1
	. SET DAYS=""                       ;NO. OF DAYS FOR CALCULATION
	. ;IF (RET=0)||(RET=1) IF +DAT'<$HOROLOG SET DAYS=(DAT-(+$HOROLOG)+1)  ;TO REQUIRED DATE ONLY
	. IF (RET=0)||(RET=1)||(RET=10) IF DAT'<$HOROLOG SET DAYS=(DAT-$HOROLOG+1)  ;TO REQUIRED DATE ONLY;BR014564
	. SET ^INDRPUSER(YM,YUSER,1)=Y_ART_Y_Y_Y_Y_DAYS_Y  ;DURCHLAUFEN BIS DATUM ;until Date 
	. DO RUN^INDRPRUN
	
	;---------------------------------------
	; AVAILABLE YES/NO
	;---------------------------------------
	IF RET=0 DO
	. IF DAT=""  SET DAT1=+$HOROLOG
	. IF DAT'="" SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT+1),-1) SET:DAT1="" DAT1=+$HOROLOG
	. IF $GET(^WWWSOR(YUSER,"ATP",DAT1))'<QTY SET YRETVAL=1 QUIT
	. SET YRETVAL=0
	
	;---------------------------------------
	; AVAILABLE QUANTITY
	;---------------------------------------
	IF RET=1||(RET=10) DO  ;BR014564
	. IF DAT=""  SET DAT1=+$HOROLOG
	. IF DAT'="" SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT+1),-1) SET:DAT1="" DAT1=+$HOROLOG
	. SET YRETVAL=+$GET(^WWWSOR(YUSER,"ATP",DAT1))
	. IF RET=10 SET YRETVAL=YRETVAL_"~"_$GET(^WWWSOR(YUSER,"PAB",DAT1))_"~"_$GET(^WWWSOR(YUSER,"CPAB",DAT1))  ;BR014564
	
	;---------------------------------------
	; DATES TO FULFILL REQUIRED QUANTITY
	;---------------------------------------
	IF RET=2 DO
	. SET LEADTIME = $HOROLOG+$$LEADTIME(ART,LOC)
	. SET ATPQTY=0  ;QTY FOR ATP
	. IF DAT=""  SET DAT1=+$HOROLOG
	. IF DAT'="" SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT+1),-1) SET:DAT1="" DAT1=+$HOROLOG
	. SET DAT1=DAT1-1
	. FOR  SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT1)) QUIT:DAT1=""  QUIT:DAT1>LEADTIME  DO  QUIT:ATPQTY'<QTY
	. . SET QTY1=$GET(^WWWSOR(YUSER,"ATP",DAT1))-ATPQTY  ;ATP QTY AT THIS DATE (REDUCE USED ATP QTY) ;ATP ATP 
	. . ;IF QTY1'>0 QUIT ; 13-Jul-2005	RPW		SR12889: Should only check for <0 not <=0 as you may be allocating all the stock on hand.
	. . IF QTY1<0 QUIT
	. . SET ATPQTY = ATPQTY+QTY1  ;USE TO FULFIL REQUIRED QTY
	. . IF ATPQTY>QTY SET QTY1=(ATPQTY-QTY)  ;MAX. NEEDED QTY
	. . SET YRETVAL = YRETVAL_DAT1_"#"_QTY1_Y
	. ;
	. IF ATPQTY<QTY DO
	. . SET YRETVAL = YRETVAL_LEADTIME_"#"_(QTY-ATPQTY)  ;REST ;residue 
	
	;---------------------------------------
	; CHECK FOR NEGATIVE ATP
	;---------------------------------------
	IF RET=3 DO
	. SET YRETVAL  = 0  ;NO NEGATIVE ATP
	. SET LEADTIME = $$LEADTIME(ART,LOC,1)  ;LEAD TIME
	. SET INSIDE   = $PIECE(LEADTIME,Y,2)
	. SET OUTSIDE  = $PIECE(LEADTIME,Y,3)
	. SET LEADTIME = $HOROLOG+$PIECE(LEADTIME,Y,1)
	. SET ATPQTY   = 0  ;QTY FOR ATP
	. IF DAT=""  SET DAT1=+$HOROLOG
	. IF DAT'="" SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT+1),-1) SET:DAT1="" DAT1=+$HOROLOG
	. SET DAT1=DAT1-1
	. FOR  SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT1)) QUIT:DAT1=""  DO  QUIT:YRETVAL=1
	. . SET QTY1   = $GET(^WWWSOR(YUSER,"ATP",DAT1))
	. . SET ATPQTY = ATPQTY+QTY1
	. . IF (ATPQTY-QTY)<0 DO  ;NEGATIVE ATP
	. . . SET YRETVAL=1
	. . . IF DAT1'>LEADTIME IF INSIDE=1 SET YRETVAL=2
	. . . IF DAT1>LEADTIME IF OUTSIDE=1 SET YRETVAL=2
	
	;---------------------------------------
	; ALL ATP DATES FOR THE REQUIRED PRODUCT, REGARDLESS
	; OF THE REQUESTED QUANTITY;STEVE(DISCLINC);16.12.03
	;---------------------------------------
	IF RET=4 DO
	. SET LEADTIME = $$LEADTIME(ART,LOC)
	. ; leadtime is 0 at this point if no leadtime info setup for DRP/Item
	. ;IF LEADTIME'=0 SET LEADTIME=LEADTIME+$HOROLOG	; SR12275 commented out this line
	. SET LEADTIME = LEADTIME+$HOROLOG					; SR12275 replaced above line with this line
	. SET ATPQTY   = 0                                   ; QTY FOR ATP
	. IF DAT=""  SET DAT1 = +$HOROLOG
	. IF DAT'="" SET DAT1 = $ORDER(^WWWSOR(YUSER,"ATP",DAT+1),-1) SET:DAT1="" DAT1=+$HOROLOG
	. SET DAT1=DAT1-1
	. FOR  SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT1)) QUIT:DAT1=""  QUIT:DAT1>LEADTIME  DO  ;QUIT:ATPQTY'<QTY
	. . ; don't quit on (ATPQTY'<QTY) condition; we always want to get ANY
	. . SET QTY1=$GET(^WWWSOR(YUSER,"ATP",DAT1)) ; CVP we return the total ATP the client does the split (-ATPQTY  ;ATP QTY AT THIS DATE (REDUCE USED ATP QTY)) ;whole ATP ATP ATP 
	. . ;IF QTY1'>0 QUIT ; 13-Jul-2005	RPW		SR12889: Should only check for <0 not <=0 as you may be allocating all the stock on hand.
	. . IF QTY1<0 QUIT
	. . SET ATPQTY=ATPQTY+QTY1  ;USE TO FULFIL REQUIRED QTY
	. . ; CVP Ignore this test; we always want to get it all the way up to the LeadTime
	. . ;IF ATPQTY>QTY SET QTY1=(ATPQTY-QTY)          ; MAX. NEEDED QTY
	. . IF YRETVAL '= "" SET YRETVAL = YRETVAL_Y      ; insert a delimiter
	. .;SET YRETVAL = YRETVAL_DAT1_"#"_QTY1           ; IN changed it. QTY1 is the period ATP not the Cum
	. . SET YRETVAL = YRETVAL_DAT1_"#"_ATPQTY
	. ;
	. ;IF ATPQTY<QTY DO CVP: always show LT as "ANY"
	. IF LEADTIME'=0 DO
	. . IF YRETVAL '= "" SET YRETVAL = YRETVAL_Y      ; insert delimiter
	. . SET YRETVAL = YRETVAL_LEADTIME_"#ANY"         ; add lead time and "ANY"
 
	;---------------------------------------
	;RETURNS THE NEXT DELIVERY DATE FOR THE ITEM
	;---------------------------------------
	IF RET=5 DO
	. IF DAT=""   SET DAT1=+$HOROLOG
	. IF DAT'=""  SET DAT1=$ORDER(^WWWSOR(YUSER,"ATP",DAT-1))
	. if DAT1=""  SET YRETVAL="" QUIT
	. IF +$GET(^WWWSOR(YUSER,"ATP",DAT1)) SET YRETVAL=DAT1 QUIT
	. SET YRETVAL=""
 
	KILL ^WWWSOR(YUSER,"ATP")
	KILL ^WWWSOR(YUSER,"PAB")   ;BR014564
	KILL ^WWWSOR(YUSER,"CPAB")  ;BR014564
	IF $EXTRACT($REVERSE(YRETVAL))=Y SET YRETVAL=$EXTRACT(YRETVAL,1,($LENGTH(YRETVAL)-$LENGTH(Y)))   ;WEM;24554;20.11.2003;DELETE LAST CHAR IN YRETVAL IF IT IS Y
	QUIT YRETVAL
	
LEADTIME(ART,LOC,NEGATIVE)
	;-------------------------------------------------------------------------------
	; History:
	; 24-Jan-2007	GRF		SR15344: Quits on LEADTIME stopping INSIDE/OUTSIDE calculation
	; 09-Jan-2007	RPW		SR15344: Call GetSpecificLeadTime requesting supplier information
	;-------------------------------------------------------------------------------
	quit $$GetSpecificLeadTime($$$DRPSupplier,$get(LOC),$get(ART),$get(NEGATIVE))
	
	;-------------------------------------------------------------------------------
	; GET ITEM PURCHASE ORDER LEAD TIME
	; 
	; General Entries
	;	INDRPSYS     : DRP/MRP Master Data >> Text & System Params >> Edit General DRP/MRP System Params
	; overridden by
	;	INDRPITEMS   : DRP/MRP Master Data >> Item Params >> DRP/MRP Item Master Data for Item Group
	; and then by
	;	INDRPITEM    : DRP/MRP Master Data >> Item Params >> DRP/MRP Item Master Data for Location
	; 
	; Overrode
	; 
	; INSIDE     : Boolean
	; OUTSIDE    : Boolean
	; 
	; 
	;-------------------------------------------------------------------------------
	NEW ART2,INSIDE,LEADTIME,OUTSIDE,SAVETIME,WAGRU
	
	SET ART = $GET(ART)			IF ART="" QUIT ""
	SET LOC = $GET(LOC)			IF LOC="" SET LOC=YLOCATION
	
	SET NEGATIVE = +$GET(NEGATIVE)  ;CHECK IF NEGATIVE ATP ALLOWED
	SET INSIDE   = 0
	SET OUTSIDE  = 0
	SET LEADTIME = 0  ;+$PIECE($GET(^INDRPSYS(YM,LOC,1)),Y,2)  ;DFLT. LEAD TIME ;FIS;25.04.05;SR12200
	
	SET SAVETIME=+$PIECE($GET(^INDRPSYS(YM,LOC,1)),Y,34)   ;SAFETY DAYS LEAD TIME
	
	IF NEGATIVE=1 DO
	. SET INSIDE =+$PIECE($GET(^INDRPSYS(YM,LOC,1)),Y,35)  ;NEGATIVE ATP INSIDE LEADTIME ALLOWED
	. SET OUTSIDE=+$PIECE($GET(^INDRPSYS(YM,LOC,1)),Y,36)  ;NEGATIVE ATP OUTSIDE LEADTIME ALLOWED
	
	; ITEM GROUP
	;---------------------------------------
	SET WAGRU=$PIECE($GET(^INART(YM,ART,1)),Y,30)
	IF WAGRU="" SET WAGRU=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)            ;DFLT. GROUP
	IF WAGRU'="" IF $DATA(^INDRPITEMS(YM,LOC,WAGRU,1)) SET ART2=^INDRPITEMS(YM,LOC,WAGRU,1) DO  ;GROUP INFORMATION
	. IF +$PIECE(ART2,Y,85)'=0 SET SAVETIME=$PIECE(ART2,Y,85)            ;PLUS LEAD TIME SAFETY DAYS
	. ;
	. ;IF +$PIECE(ART2,Y,12)'=0 SET LEADTIME=$PIECE(ART2,Y,12) QUIT       ;PURCHASE ORDER LEAD TIME ;26863;FIS;29.11.04
	. ;IF $PIECE(ART2,Y,19)'="" IF +$PIECE($GET(^INLIEF(YM,$PIECE(ART2,Y,19),1)),Y,46)'=0 SET LEADTIME=$PIECE($GET(^INLIEF(YM,$PIECE(ART2,Y,19),1)),Y,46)  ;DFLT. PURCHASE ORDER LEAD TIME  ;FIS;22.10.04
	. ;SR14823;FIS;04.08.06;USE LEADTIME OUT OF SUPPLIER IF AVAILABLE
	. IF $PIECE(ART2,Y,19)'="" IF +$PIECE($GET(^INLIEF(YM,$PIECE(ART2,Y,19),1)),Y,46)'=0 SET LEADTIME=$PIECE($GET(^INLIEF(YM,$PIECE(ART2,Y,19),1)),Y,46)  ;DFLT. PURCHASE ORDER LEAD TIME  ;FIS;22.10.04
	. IF LEADTIME=0 IF +$PIECE(ART2,Y,12)'=0 SET LEADTIME=$PIECE(ART2,Y,12)       ;PURCHASE ORDER LEAD TIME ;26863;FIS;29.11.04
	. ;
	. QUIT:NEGATIVE'=1
	. SET INSIDE  = $PIECE(ART2,Y,86)   ;NEGATIVE ATP INSIDE  LEAD TIME
	. SET OUTSIDE = $PIECE(ART2,Y,87)   ;NEGATIVE ATP OUTSIDE LEAD TIME
	
	; ITEM INFORMATION
	;---------------------------------------
	IF $DATA(^INDRPITEM(YM,LOC,ART,1)) SET ART2=^INDRPITEM(YM,LOC,ART,1) DO
	. IF +$PIECE(ART2,Y,85)'=0 SET SAVETIME=$PIECE(ART2,Y,85)         ;PLUS LEAD TIME SAFETY DAYS
	. ;
	. ;+++++++++++++++++++++++++++++++++++++
	. ; Do level added ensure quits on first two lines only stop further 
	. ; LEADTIME calculation without stopping INSIDE/OUTSIDE being set?
	. ; Move test for null supplier before lines.     SR15344
	. ;+++++++++++++++++++++++++++++++++++++
	. DO
	. . IF +$PIECE(ART2,Y,12)'=0 SET LEADTIME=$PIECE(ART2,Y,12) QUIT    ;PURCHASE ORDER LEAD TIME ;26863;FIS;29.11.04
	. . QUIT:$PIECE(ART2,Y,19)=""
	. . IF +$PIECE($GET(^INARTK(YM,ART,$PIECE(ART2,Y,19),1)),Y,23)'=0 SET LEADTIME=$PIECE($GET(^INARTK(YM,ART,$PIECE(ART2,Y,19),1)),Y,23) QUIT  ;DFLT. PURCHASE ORDER LEAD TIME  ;FIS;22.10.04
	. . IF +$PIECE($GET(^INLIEF(YM,$PIECE(ART2,Y,19),1)),Y,46)'=0     SET LEADTIME=$PIECE($GET(^INLIEF(YM,$PIECE(ART2,Y,19),1)),Y,46)       ;DFLT. PURCHASE ORDER LEAD TIME  ;FIS;22.10.04
	. ;
	. QUIT:NEGATIVE'=1
	. SET INSIDE  = $PIECE(ART2,Y,86)  ;NEGATIVE ATP INSIDE LEAD TIME
	. SET OUTSIDE = $PIECE(ART2,Y,87)  ;NEGATIVE ATP OUTSIDE LEAD TIME
	
	SET LEADTIME=LEADTIME+SAVETIME
	;IF +LEADTIME=0 SET LEADTIME=LEADTIME+SAVETIME  ;FIS;THAT'S WHAT I SUGGEST;05.05.05;SR12261;SR12275
	
	IF NEGATIVE=1 QUIT LEADTIME_Y_+INSIDE_Y_+OUTSIDE
	QUIT LEADTIME
	
 
	;-------------------------------------------------------------------------------
	; Get either the QOH or the AQOH, depending on the amount of AQOH
	;
	; Params:
	; pidItem    : The product to get the quantity for
	; pidLocation: The location to get the quantity for
	; pdteDate   : The default date to search for.
	;
	; ByRefs:
	;
	; Returns:
	; float : Either the QOH or AQOH
	;
	; History:
	; 26-Apr-2006	RPW/PO		SR14427: Created
	;-------------------------------------------------------------------------------
GetAvailableQuantity(pidItem,pidLocation,pdteDate)
	new fltQuantity
	
	if $$IsConsumable^INARTLOCPAR(pidItem,pidLocation) {
		set fltQuantity=1E16
	} else {
	
		set pdteDate=$get(pdteDate,+$horolog)
		
		set fltQuantity=$$^INARTMENGE(pidItem,,pidLocation)
		if $$INATP1(pidItem,pidLocation,fltQuantity,pdteDate,3)'=0 {
			set fltQuantity = $$INATP1(pidItem,pidLocation,fltQuantity,pdteDate,1)
		}
	}
	
	quit fltQuantity
 
 // Replacement code done as part of peer review of SR15344 vvv
#define Company 0
#define Group 1
#define Item 2
 // ^^^
	
GetSpecificLeadTime(penumLeadTime,pidLocation,pidItem,pblnNegative=$$$NO)
	;-------------------------------------------------------------------------------
	; Return the offset of time for a INDRPITEM
	;
	; Params:
	; penumLeadTime: The lead time either 0 - Supplier
	; 									  1 - Confirm
	; 									  2 - Place
	; 									  3 - Raise
	; 									  4 - Source
	; 									  5 - Firm
	; pidLocation  : The location of the item
	; pidItem      : The id of the item
	;
	;-------------------------------------------------------------------------------
	; For both Negative Inside/Outside lead time flags and duration in days...
	; 
	; General Entries
	;   INVORG       : System >> Program Parameters >> Edit General Parameters
	;	INDRPSYS     : DRP/MRP Master Data >> Text & System Params >> Edit General DRP/MRP System Params
	; overridden by
	;	INDRPITEMS   : DRP/MRP Master Data >> Item Params >> DRP/MRP Item Master Data for Item Group
	; and then by
	;	INDRPITEM    : DRP/MRP Master Data >> Item Params >> DRP/MRP Item Master Data for Location
	;-------------------------------------------------------------------------------
	; Returns:
	;
	; History:
	; 24-Jan-2007	GRF		SR15344: INDRPITEMSSupplierDays macro correction
	; 16-Jan-2007	GRF		SR15344: Doco; boolean macro (+ RPW - Peer review mods)
	; 09-Jan-2007	RPW		SR15344: Modified to replace LEADTIME
	; 14-Dec-2006	RPW		SR15316: Created (Copied from REQUISITIONVAR)
	;-------------------------------------------------------------------------------
	new arrLead,blnInside,blnOutside,idItemGroup,idSupplier,intDays,intLead,intSafetyDays,intVal
	new loop,objDRPItem,objDRPItems,objDRPSYS,objINVORG
	
	if pidLocation="" set pidLocation=YLOCATION
	;---------------------------------------
	quit:pidItem="" 0
	;---------------------------------------
	
	set objDRPSYS  = $get(^INDRPSYS(YM,pidLocation,1))
	set objINVORG  = $get(^INVORG(YM,YM,1))
	set objDRPItem = $get(^INDRPITEM(YM,pidLocation,pidItem,1))
	
	set idItemGroup=$$$INARTItemGroup($get(^INART(YM,pidItem,1)))
	if idItemGroup="" {
		set idItemGroup=$$$INVORGDefaultItemGroup(objINVORG)
	}
	
	set objDRPItems=""
	if idItemGroup'="" {
		set objDRPItems=$get(^INDRPITEMS(YM,pidLocation,idItemGroup,1))
	}
	;---------------------------------------
	quit:(objDRPItem="")&&(objDRPItems="")&&(objINVORG)="" 0
	;---------------------------------------
	
	; NEGATIVE ATP INSIDE/OUTSIDE LEADTIME ALLOWED
	if pblnNegative {
		set blnInside  = $$$NO
		set blnOutside = $$$NO
		
		if objDRPItem'="" {
			set blnInside  = $$$INDRPITEMNegativeATPInsideLeadTim(objDRPItem)
			set blnOutside = $$$INDRPITEMNegativeATPOutsideLeadTi(objDRPItem)
		} elseif objDRPItems'="" {
			set blnInside  = $$$INDRPITEMSNegativeATPInsideLeadTim(objDRPItems)
			set blnOutside = $$$INDRPITEMSNegativeATPOutsideLeadTi(objDRPItems)
		} else {
			set blnInside =+$$$INDRPSYSNegATPInsideLeadTime(objDRPSYS)
			set blnOutside=+$$$INDRPSYSNegATPOutsideLeadTime(objDRPSYS)
		}
	}
	
	if penumLeadTime>$$$DRPFirm set penumLeadTime=$$$DRPFirm
	
	set arrLead($$$Company,$$$DRPSupplier) = $$$FldINVORGSupplier
	set arrLead($$$Company,$$$DRPConfirm)  = $$$FldINVORGConfirm
	set arrLead($$$Company,$$$DRPPlace)    = $$$FldINVORGPlace
	set arrLead($$$Company,$$$DRPRaise)    = $$$FldINVORGRaise
	set arrLead($$$Company,$$$DRPSource)   = $$$FldINVORGSource
	set arrLead($$$Company,$$$DRPFirm)     = $$$FldINVORGFirm
	
	set arrLead($$$Group,$$$DRPSupplier)   = $$$FldINDRPITEMSSupplierDays
	set arrLead($$$Group,$$$DRPConfirm)    = $$$FldINDRPITEMSConfirm
	set arrLead($$$Group,$$$DRPPlace)      = $$$FldINDRPITEMSPlace
	set arrLead($$$Group,$$$DRPRaise)      = $$$FldINDRPITEMSRaise
	set arrLead($$$Group,$$$DRPSource)     = $$$FldINDRPITEMSSource
	set arrLead($$$Group,$$$DRPFirm)       = $$$FldINDRPITEMSFirm
	
	set arrLead($$$Item,$$$DRPSupplier)    = $$$FldINDRPITEMSupplier
	set arrLead($$$Item,$$$DRPConfirm)     = $$$FldINDRPITEMConfirm
	set arrLead($$$Item,$$$DRPPlace)       = $$$FldINDRPITEMPlace
	set arrLead($$$Item,$$$DRPRaise)       = $$$FldINDRPITEMRaise
	set arrLead($$$Item,$$$DRPSource)      = $$$FldINDRPITEMSource
	set arrLead($$$Item,$$$DRPFirm)        = $$$FldINDRPITEMFirm
	
	set intLead = 0
	
	for loop = 0:1:penumLeadTime {
		set intDays = $piece(objDRPItem,Y,arrLead($$$Item,loop))
		if intDays="" {
			set intDays=$piece(objDRPItems,Y,arrLead($$$Group,loop))
			if intDays="" {
				set intDays=$piece(objINVORG,Y,arrLead($$$Company,loop))
			}
		} 
		set intLead = intLead + intDays
	}
	
	set intSafetyDays=+$$$INDRPITEMSafetyDaysForPlanningLead(objDRPItem)
	if intSafetyDays=0 {
		set intSafetyDays=+$$$INDRPITEMSSafetyDaysForPlanningLead(objDRPItems)
		if intSafetyDays=0 {
			set intSafetyDays=+$$$INDRPSYSSafetyDaysForLeadTime(objDRPSYS)
		}
	}
	
	; If no Lead Time get default from Supplier/Item or Supplier
	if (penumLeadTime=$$$DRPSupplier) && (intLead=0) {
		set idSupplier = $$$INDRPITEMSupplierOfStockOrder(objDRPItem)
		set:idSupplier="" idSupplier = $$$INDRPITEMSSupplier(objDRPItems)
		
		if idSupplier'="" {
			set intVal = +$$$INARTKDeliveryPeriodInDays($get(^INARTK(YM,pidItem,idSupplier,1)))
			set:intVal'=0 intLead = intVal
			if intLead=0 {
				set intVal = +$$$INLIEFDeliveryTimeInDays($get(^INLIEF(YM,idSupplier,1)))
				set:intVal'=0 intLead = intVal
			}
		}
	}
	
 	set intLead=intLead+intSafetyDays
 	if pblnNegative set intLead=intLead_Y_+blnInside_Y_+blnOutside
	
	quit intLead
	
]]></Routine>
</Export>