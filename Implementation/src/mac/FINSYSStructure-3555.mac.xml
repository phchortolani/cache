<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINSYSStructure" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINSYSStructure
	
#include COMSYS
	
Start()
	;--------------------------------------------------------------------------------
	;
	; History
	; 25-Feb-2004	shobby	WWW001 not shared.
	; 15-Sep-2003	shobby	Creation
	;--------------------------------------------------------------------------------
	new strClass
	
	set strClass=""
	do StartTree^COMTree($get(YPARA))
	do AddNode("",1,"","Classes","","","","","","","")
	
	for {
		set strClass=$order(^WWW001(0,strClass))
		quit:strClass=""
		
		do AddNodes(strClass)
	}
	do StopTree^COMTree(1)
	quit
	
	
AddNodes(pstrClass,pstrParent="")
	;-------------------------------------------------------------------------------
	; Method Usage
	;
	; Returns:
	;
	; History:
	; 06-Nov-2003	shobby	Pulled out of Start
	;-------------------------------------------------------------------------------
	new arrRelations,blnErrors,strClass
 	
	if $extract(pstrClass,1,3)="FIN" {
	;	set strClass  = pstrParent_pstrClass
		set blnErrors = $$AddProperties(pstrClass,.arrRelations)
		set blnErrors = +$get(arrRelations(pstrClass))
		do AddNode(1,pstrClass,"",pstrClass,"","","","","","","")
		do AddNode(pstrClass,pstrClass_"Refers To","","Refers To","","","","","","","")
		do AddNode(pstrClass,pstrClass_"Referred By","","Referred By","","","",blnErrors,"","","")
		set $$$Storage("Expand",pstrClass_"Referred By") = ""
		kill $$$Storage("Expand",pstrClass_"Refers To")
	}
	quit
	
	
AddNode(pidParent="",pidNode="",pstrTitle="",pstrText="",pstrImage="",pstrForm="",pstrParam="",pblnHighLight="",pstrExtraData="",pblnLinkStopped="",plngPage="",plngOverRideId="")
	;--------------------------------------------------------------------------------
	;
	; History
	; 13-May-2004	GRF		Clarify If Test
	;--------------------------------------------------------------------------------
	if $$$NEVER {
		write !,pidNode
	} else {
		set $$$Storage("Expand",pidNode)=""
		do AddNode^COMTree(pidParent,pidNode,pstrTitle,pstrText,pstrImage,pstrForm,pstrParam,pblnHighLight,pstrExtraData,pblnLinkStopped,plngPage,plngOverRideId)
	}
	quit
	
AddProperties(pstrClass,parrRelations)
	;--------------------------------------------------------------------------------
	;
	; History
	; 13-May-2004	GRF		Clarify If Test
    ; 03-May-2004   shobby	Replaced YKOMMA with ","
	; 08-Mar-2004	shobby	Only highlight 'Referred By's that need investigation.
	; 15-Sep-2003	shobby	Creation
	;--------------------------------------------------------------------------------
	new blnErrors,idKey,objKey,strKey,strMessage,strProperty,strRelation
	new strSortedKey,strType
	
	set blnErrors = $$$NO
	for strType="^WWW002","^WWW003" {
		set idKey = ""
		for {
			set blnErrors = $$$NO
			xecute "set idKey=$order("_strType_"(YM,pstrClass,idKey))"
			quit:idKey=""
			
			set objKey=""
			xecute "set objKey=$get("_strType_"(YM,pstrClass,idKey,1))"
			
			set strKey = $piece(objKey,Y,1)
			;AddNode(pidParent,pidNode,pstrTitle,pstrText,pstrImage,pstrForm="",pstrParam="",pblnHighLight="",pstrExtraData="",pblnLinkStopped="",plngPage="")
			set strRelation=$piece(objKey,Y,8)
			if strRelation'="WWW100" {
				set strSortedKey=pstrClass_":"_strType_":"_$justify(idKey,10)
				if strRelation="WWW101" {
					;w "idKey="_idKey_","_$piece(objKey,Y,9)
					;w $get(^WWW101(YM,$piece($piece(objKey,Y,9),",",1),""""_SPRACHE_"""",idKey,1))
					;w "/"_YM_","_$piece($piece(objKey,Y,9),",",1)_","_""""_SPRACHE_""""_","_idKey_"\"
					;w $piece($piece($piece(objKey,Y,9),"""",2),"""",1)
				
				} else {
					if strRelation'="" {
						if strType="^WWW002" {
							if $$$ALWAYS { ;$$HasValidLinksToKey(pstrClass,strRelation,idKey,strSortedKey) {
								set $$$Storage("Expand",pstrClass)=""
								do AddNode(pstrClass_"Refers To",strSortedKey_strKey,"",strKey_" ("_strRelation_")","html.gif","","",strRelation'="","","","")
								;if strRelation="FINAPADJ" {
								;	do AddNodes(strRelation,pstrClass_"Refers To"_strSortedKey_strKey)
								;}
								set strMessage=$$GetMessage(strRelation,pstrClass,objKey)
								if 'blnErrors set blnErrors=(strMessage="")
								do AddNode(strRelation_"Referred By",strSortedKey,"",pstrClass,"html.gif","","",blnErrors,strMessage,"","")
								if blnErrors {
									set parrRelations(strRelation)=1
									do AddNode(strRelation,strRelation_"Referred By","","Referred By",,,,1)
								}
							}
						
						} else {
							if $$$ALWAYS { ;$$HasValidLinksToData(pstrClass,strRelation,idKey,strSortedKey) {
								set $$$Storage("Expand",pstrClass)=""
								do AddNode(pstrClass_"Refers To",strSortedKey_strKey,"",strKey_" ("_strRelation_")","html.gif","","",strRelation'="","","","")
								;if strRelation="FINAPADJ" do AddNodes(strRelation)
								set strMessage=$$GetMessage(strRelation,pstrClass,objKey)
								if 'blnErrors set blnErrors=(strMessage="")
								do AddNode(strRelation_"Referred By",strSortedKey,"",pstrClass,"html.gif","","",blnErrors,strMessage,"","")
								if blnErrors {
									set parrRelations(strRelation)=1
									do AddNode(strRelation,strRelation_"Referred By","","Referred By",,,,1)
								}
							}
						}
					}
				}
			}
		}
	}
	quit blnErrors
	
GetMessage(pstrRelation,pstrClass,pobjKey)
    ;-------------------------------------------------------------------------------
    ; Find some relationship between classes
    ;
    ; Returns:
    ;
    ; History:
    ; 03-Mar-2004	shobby	Created
    ;-------------------------------------------------------------------------------
    new strMessage
    
    set strMessage = ""
    if strMessage="" set strMessage = $$GetDeleteAlsoSubForms(pstrRelation,pstrClass)
    if strMessage="" set strMessage = $$GetDeleteAlsoTheFollowingSubForms(pstrRelation,pstrClass)
    if strMessage="" set strMessage = $$GetTestIdentifier(pstrRelation,pstrClass,pobjKey)
	quit strMessage
	
	
GetDeleteAlsoSubForms(pstrRelation,pstrClass)
    ;-------------------------------------------------------------------------------
    ; Should be obvious
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Mar-2004	shobby	Created
    ;-------------------------------------------------------------------------------
	new idx,objWWW002,objWWW120,strMessage
    
	set strMessage=""
	set objWWW120=$get(^WWW120(0,pstrRelation,1))
	if $piece(objWWW120,Y,73)=1 {
	    set idx=""
		for {
			set idx=$order(^WWW002(0,idx))
			quit:idx=""
			
			if idx=pstrClass {
				set objWWW002=$get(^WWW002(0,idx,1,1))
				if $piece(objWWW002,Y,8)=pstrRelation {
					if strMessage'="" set strMessage=strMessage_","
					set strMessage=strMessage_pstrClass
				}
			}
		}
	    if strMessage'="" set strMessage="Delete Also SubForms - "_strMessage
	}
	quit strMessage
	
GetDeleteAlsoTheFollowingSubForms(pstrRelation,pstrClass)
    ;-------------------------------------------------------------------------------
    ; Should be obvious
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Mar-2004	shobby	Check only for the class that we are interested in.
    ; 03-Mar-2004	shobby	Created
    ;-------------------------------------------------------------------------------
	new objWWW120,strMessage
	
	set strMessage=""
	set objWWW120=$get(^WWW120(0,pstrRelation,1))
	if $find(","_$piece($get(objWWW120),Y,127)_",",","_pstrClass_",") {
		set strMessage=pstrClass
	}
    if strMessage'="" set strMessage="Delete Also The Following SubForms - "_strMessage
	quit strMessage


GetTestIdentifier(pstrRelation,pstrClass,pobjKey)
    ;-------------------------------------------------------------------------------
    ; Finds an indicator that there is some code to check whether a relationship between
    ; classes is verified before allowing deletion of an object.
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Mar-2004	shobby	Update to allow a code comment to be shown in the
    ; 							structure so that we know that certain validation
    ; 							may not be required.
    ; 08-Mar-2004	shobby	Look for a call to standard dependency checking method.
    ; 03-Mar-2004	shobby	Created
    ;-------------------------------------------------------------------------------
	new idx,intIndex,strClass,strLine,strMessage
	
	set strMessage = ""
	
	set idx = ""
	for {
		set idx = $order(^rMAC(pstrRelation,0,idx))
		quit:idx=""
		quit:(strMessage'="")
		
		set strLine=$get(^rMAC(pstrRelation,0,idx))
		if $find(strLine,"CheckLinks^FINSYS") {
			set strLine = $piece(strLine,"$lb(",2)
			set strLine = $piece(strLine,")",1)
			if $find(strLine,""""_pstrClass_"""") {
				set intIndex = $piece(pobjKey,Y,6)
			;	set intIndex = $$IndexNo^FINSYS(pstrClass,pstrRelation)
				set strMessage = "**Delete Check - "_pstrClass_"** ("_intIndex_")"
			}
		} elseif $find(strLine,"**Delete Check**") {
			set strClass = $piece(strLine," - ",1)
			set strClass = $piece(strClass,"**Delete Check** ",2)
			if strClass=pstrClass {
				set strMessage = $extract(strLine,$find(strLine,"*")-1,$length(strLine))
			}
		}
	}
	quit strMessage
	
]]></Routine>
</Export>