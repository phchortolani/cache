<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINSYSRepeatGroup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
	#Include FIN
	#Include FINConst
	#Include COMConst
	#Include COMSYS
	#Include WWWConst
 
OnBeforeSave(pobjRepeatGroup)
    ;-------------------------------------------------------------------------------
    ; Code to execute before saving a repeat group record.
    ;
    ; Returns:
    ;
    ; History:
    ; 04-Jul-2005	RobertW		SR12527: Fixed Status usage for ReturnError
    ; 04-Apr-2005	Steve S		SR11669: Created (Copied from COMSchedule)
    ;-------------------------------------------------------------------------------
	new strStatus,increment,incrementValue,daysOfMonth,dayOfMonth,daysOfWeek
	new monthsOfYear,strIncrementDesc,timeToRun
	
	set strStatus=$$$OK
	
	if $get(pobjRepeatGroup)'="" {
		set increment		 =$$$FINSYSRepeatGroupTimeIncrement(pobjRepeatGroup)
		set incrementValue   =$$$FINSYSRepeatGroupIncrementValue(pobjRepeatGroup)
		set daysOfMonth		 =$$$FINSYSRepeatGroupDaysofmonth(pobjRepeatGroup)
		set dayOfMonth		 =$$$FINSYSRepeatGroupDayofmonth(pobjRepeatGroup)
		set daysOfWeek		 =$$$FINSYSRepeatGroupDaysofweek(pobjRepeatGroup)
		set monthsOfYear	 =$$$FINSYSRepeatGroupMonthsofyear(pobjRepeatGroup)
		set timeToRun		 =$$$FINSYSRepeatGroupTimetorun(pobjRepeatGroup)
		set strIncrementDesc =$$$AppEnum("COMTIMEINCREMENT",increment)
 
		if $$$FINSYSRepeatGroupPermitSchedules(pobjRepeatGroup) {
			if increment'="" { ;increment chosen -- perform validation
				if (increment=$$$EnumCOMTIMEINCREMENTSeconds)||(increment=$$$EnumCOMTIMEINCREMENTMinutes)||(increment=$$$EnumCOMTIMEINCREMENTHours) {
					if incrementValue="" {
						set strStatus=($listbuild("Com00141",strIncrementDesc))  ;Must specify an Increment Value for '%1' Increment Type.
					}
					
				} elseif (increment=$$$EnumCOMTIMEINCREMENTDaysofWeek) {
					if (timeToRun="") {
						set strStatus=($listbuild("Com00142",strIncrementDesc))  ;Must specify a Time to Run for Increments of type ´%1´.
					} elseif (daysOfWeek="") {
						set strStatus=($listbuild("Com00144",strIncrementDesc))  ;Must specify Days of Week for Increments of type ´%1´.
					}
					
				} elseif (increment=$$$EnumCOMTIMEINCREMENTDaysofMonth) {
					if (timeToRun="") {
						set strStatus=($listbuild("Com00142",strIncrementDesc))  ;Must specify a Time to Run for Increments of type ´%1´.	
					} elseif (daysOfMonth="") {
						set strStatus=($listbuild("Com00145",strIncrementDesc))  ;Must specify Days of Month for Increments of type ´%1´.
					}
					
				} elseif (increment=$$$EnumCOMTIMEINCREMENTMonthsofYear) {
					if (timeToRun="") {
						set strStatus=($listbuild("Com00142",strIncrementDesc))  ;Must specify a Time to Run for Increments of type ´%1´.
					} elseif (monthsOfYear="") {
						set strStatus=($listbuild("Com00146",strIncrementDesc))  ;Must specify Months of Year for Increments of type ´%1´.
					} elseif (dayOfMonth="") {
						set strStatus=($listbuild("Com00147",strIncrementDesc))  ;Must specify a Day of Month for Increments of type ´%1´.
					}
				}
			} else { ;no increment chosen -- all other fields must therefore be blank
				if incrementValue'="" {
					set strStatus=$listbuild("Fin00723",$$$StrFINSYSRepeatGroupIncrementValue,$$$StrFINSYSRepeatGroupTimeIncrement)  ;Can not specify '%1' when %2 has not been chosen	
				} elseif timeToRun'="" {
					set strStatus=$listbuild("Fin00723",$$$StrFINSYSRepeatGroupTimetorun,$$$StrFINSYSRepeatGroupTimeIncrement)  ;Can not specify '%1' when %2 has not been chosen		
				} elseif monthsOfYear'="" {
					set strStatus=$listbuild("Fin00723",$$$StrFINSYSRepeatGroupMonthsofyear,$$$StrFINSYSRepeatGroupTimeIncrement)  ;Can not specify '%1' when %2 has not been chosen	
				} elseif daysOfWeek'="" {
					set strStatus=$listbuild("Fin00723",$$$StrFINSYSRepeatGroupDaysofweek,$$$StrFINSYSRepeatGroupTimeIncrement)  ;Can not specify '%1' when %2 has not been chosen		
				} elseif daysOfMonth'="" {
					set strStatus=$listbuild("Fin00723",$$$StrFINSYSRepeatGroupDaysofmonth,$$$StrFINSYSRepeatGroupTimeIncrement)  ;Can not specify '%1' when %2 has not been chosen			
				} elseif dayOfMonth'="" {
					set strStatus=$listbuild("Fin00723",$$$StrFINSYSRepeatGroupDayofmonth,$$$StrFINSYSRepeatGroupTimeIncrement)  ;Can not specify '%1' when %2 has not been chosen				
				}
			}
		}
	}
 
	if $$$ISERR(strStatus) {
		set Q=$$$QDontSave
		do ReturnError^COMUtils(strStatus)	
	}
	
	quit
	
	
OnAfterDelete(pidGroup)
    ;-------------------------------------------------------------------------------
    ; Code to execute after deleting a repeat group
    ;
    ; Returns:
    ;
    ; History:
    ; 23-Oct-2006	JW			SR15134: Look at kill status. Use KILL^COMSchedule
    ; 08-Apr-2005	Steve S		Created SR11669
    ;-------------------------------------------------------------------------------
 	new strStatus
 	
 	if $get(pidGroup)'="" {
 		set strStatus = $$KILL^COMSchedule("FINSYSRepeatGroup",pidGroup)
 		if $$$ISERR(strStatus) {
			set Q = $$$QDontDelete		// SR15134
		}
 	}
 	quit
 	
 	/*	SR15134
	new idClassIdx,idGroupIdx,idSchedule
	
	if $get(pidGroup)'="" {
		set idClassIdx=$$$Index("FINSYSRepeatGroup")
		set idGroupIdx=$$$Index(pidGroup)
		
		set idSchedule=$order(^COMSchedules(YM,1,idClassIdx,idGroupIdx,""))
		
		if idSchedule'="" do KILL^COMUtils("COMSchedule",idSchedule)	
	}
	
	quit
 	*/
	
OnAfterSave(pidGroup="")
    ;-------------------------------------------------------------------------------
    ; Routine to run after saving a data record.
    ;
    ; Returns:
    ;
    ; History:
    ; 07-Apr-2005	Steve S		Created SR:11669
    ;-------------------------------------------------------------------------------
	new objGroup,idClassIdx,idSchedule,idTimeIncrement,intIncrementValue,tmeTimeToRun
	new strMonthsOfYear,strDaysOfWeek,strDaysOfMonth,intDayOfMonth,objSchedule
	new idClass,idTypeReference,strDescription,strCode,idGroupIdx
	
	if pidGroup'="" {
		set objGroup   = $get(^FINSYSRepeatGroup(YM,pidGroup,1))
		set idClassIdx = $$$Index("FINSYSRepeatGroup")
		set idGroupIdx = $$$Index(pidGroup)
		set idSchedule = $order(^COMSchedules(YM,1,idClassIdx,idGroupIdx,""))
		
		if $$$FINSYSRepeatGroupPermitSchedules(objGroup) {	
			if idSchedule="" {
				set idSchedule = $$^WWWNEXT("COMSchedule")		
			} 
			
			set idTimeIncrement   = $$$FINSYSRepeatGroupTimeIncrement(objGroup)
			set intIncrementValue = $$$FINSYSRepeatGroupIncrementValue(objGroup)
			set tmeTimeToRun      = $$$FINSYSRepeatGroupTimetorun(objGroup)
			set strMonthsOfYear   = $$$FINSYSRepeatGroupMonthsofyear(objGroup)
			set strDaysOfWeek     = $$$FINSYSRepeatGroupDaysofweek(objGroup)
			set strDaysOfMonth    = $$$FINSYSRepeatGroupDaysofmonth(objGroup)
			set intDayOfMonth     = $$$FINSYSRepeatGroupDayofmonth(objGroup)
 
			set objSchedule     = ""
			set idClass         = "FINSYSREPEATGROUP"
			set idTypeReference = pidGroup
			set strDescription  = $$$Text("Fin00725")_" "_$$$StrFINARInvRepeatGroup_": "_pidGroup_" ("_$$$FINSYSRepeatGroupName(objGroup)_")"  ;Schedule for Repeat Group xxx: <name> <description>
			set strCode         = "PostGroupSchedule^FINInvGroupPost(´"_pidGroup_"´)"
 
				
			set $$$COMScheduleClass(objSchedule)            = idClass
			set $$$COMScheduleTypeReference(objSchedule)    = idTypeReference
			set $$$COMScheduleDescription(objSchedule)      = strDescription
			set $$$COMScheduleCode(objSchedule)             = strCode
			set $$$COMScheduleTimeIncrement(objSchedule)    = idTimeIncrement
			set $$$COMScheduleIncrementValue(objSchedule)   = intIncrementValue
			set $$$COMScheduleTimeToRun(objSchedule)        = tmeTimeToRun
			set $$$COMScheduleMonthsOfYear(objSchedule)     = strMonthsOfYear
			set $$$COMScheduleDaysOfWeek(objSchedule)       = strDaysOfWeek
			set $$$COMScheduleMultiDaysOfMonth(objSchedule) = strDaysOfMonth
			set $$$COMScheduleSingleDOM(objSchedule)        = intDayOfMonth
 
			
			do Save^COMUtils("COMSchedule",idSchedule,objSchedule,1)
			do AfterScheduleSave^COMSchedule(idSchedule)
			
		} elseif idSchedule'="" {
			do KILL^COMUtils("COMSchedule",idSchedule)	
		}	
	}
 
	quit
	
 
OnBeforeDelete(pidGroup="")
    ;-------------------------------------------------------------------------------
    ; Code to execute before deleting a data record
    ;
    ; Returns:
    ;
    ; History:
    ; 17-Aug-2005	JW			SR13272: Use $$^WWWFORMNAME
    ; 08-Apr-2005	Steve S		Created SR:11669
    ;-------------------------------------------------------------------------------
	new idGroupIdx,idInvoice,strStatus,idParent,idVoucher
	
	set strStatus=$$$OK
	
	if pidGroup'="" {
		set idGroupIdx=$$$Index(pidGroup)
		set idInvoice=""
		
		for {
			set idInvoice=$order(^FINARInvs(YM,2,idGroupIdx,idInvoice))
			quit:(idInvoice="")||(strStatus'=$$$OK)
			
			set idParent=$$GetParent^FINARInv(idInvoice)
			if idParent="" { ;is a parent invoice
				;set strStatus=$listbuild("Fin00733",pidGroup,$$$WWW120FormHeaderOrImageFile($get(^WWW120(0,"FINARInv",1))),idInvoice)  ;Can not delete Repeat Group %1. It is in use by '%2', record '%3'.
				set strStatus=$listbuild("Fin00733",pidGroup,$$^WWWFORMNAME("FINARInv"),idInvoice)  ;Can not delete Repeat Group %1. It is in use by '%2', record '%3'.
			}
		}
		
		if strStatus=$$$OK {
			set idParent=""
			
			for {
				set idParent=$order(^FINAPInvs(YM,4,idGroupIdx,idParent))
				quit:idParent'=$$$Index("") ;get parent vouchers only
				
				set idVoucher=""
				for {
					set idVoucher=$order(^FINAPInvs(YM,4,idGroupIdx,idParent,idVoucher))
					quit:idVoucher=""
					
					if strStatus=$$$OK {
						;set strStatus=$listbuild("Fin00733",pidGroup,$$$WWW120FormHeaderOrImageFile($get(^WWW120(0,"FINAPVoucher",1))),idVoucher)  ;Can not delete Repeat Group %1. It is in use by '%2', record '%3'.	
						set strStatus=$listbuild("Fin00733",pidGroup,$$^WWWFORMNAME("FINARInv"),idVoucher)  ;Can not delete Repeat Group %1. It is in use by '%2', record '%3'.	
					}	
				}	
			}	
		}	
	}
	
	if strStatus'=$$$OK {
		set Q=$$$QDontSave
		do ReturnError^COMUtils(strStatus)	
	}
	
	quit
 
 
GetVoucherUsage(pidGroup="")
    ;-------------------------------------------------------------------------------
    ; Gets number of AP Parent Vouchers that are using this group.
    ;
    ; Returns:
    ;
    ; History:
    ; 08-Apr-2005	Steve S		Created SR:11669
    ;-------------------------------------------------------------------------------
 
	new intCount,idGroupIdx,idVoucher,objVoucher
	set intCount=0
 
	if '$$$NoKey(pidGroup) {		
		set idGroupIdx=$$$Index(pidGroup)
		set idVoucher=""
		
		for {
			set idVoucher=$order(^FINAPInvs(YM,4,idGroupIdx,idVoucher))
			quit:idVoucher=""
			
			if $$Postable^FINAPInvPost(idVoucher) {
				set intCount=intCount+1
			}
		}
	}
	
	quit intCount
	
 
GetInvoiceUsage(pidGroup="")
    ;-------------------------------------------------------------------------------
    ; Gets number of AR Parent Invoices that are using this group.
    ;
    ; Returns:
    ;
    ; History:
    ; 08-Apr-2005	Steve S		Created SR:11669
    ;-------------------------------------------------------------------------------
	
	new intCount,idGroupIdx,idInvoice,objInvoice
	
	set intCount=0
	
	if '$$$NoKey(pidGroup) {
		set idGroupIdx=$$$Index(pidGroup)
		set idInvoice=""
		
		for {
			set idInvoice=$order(^FINARInvs(YM,2,idGroupIdx,idInvoice))
			quit:idInvoice=""
			
			if $$Postable^FINARInvPost(idInvoice,$$$YES) {
				set intCount=intCount+1	
			}
		}
	}
	
	quit intCount
]]></Routine>
</Export>