<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARPainelEvolutivo" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARPainelEvolutivo

#include VARConst
#include COMSYS
#include COMConst
#include INConst
	
 ; w $$GetEstoque^VARPainelEvolutivo(201601)
GetEstoque(competencia, produto="", local="",tipo="", grupo = "",pVisaoFilho = "")
	set vazio = ""
	
	if (produto  '= vazio) {
		set ^CacheTempFelipe($i(^CacheTempFelipe),$zn) = competencia_"^"_tipo_"^"_local_"^"_produto_"^"_pVisaoFilho
		quit $$GetEstoqueItem(competencia, tipo, local, produto, pVisaoFilho)
	}
	elseif (grupo '= vazio ) {
		quit $$GetEstoqueGrupo(competencia, tipo, local, grupo, pVisaoFilho)
	}
	elseif (local '= vazio) {
		quit $$GetEstoqueLocalComposto(competencia, tipo, local, pVisaoFilho)
	}
	elseif (tipo '= vazio) {
		quit $$GetEstoqueTipo(competencia, tipo)
	}
	else {
		quit $$GetEstoqueGeral(competencia)
	}
	quit total
	
	
GetTotalEstoque(Regional="",Produto="",tipo="",grupo="",filtros="",pVisaoFilho="") 
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	set serieAnterior = ##class(Tasc.dashboard.Serie).%New()
	set serieAtual = ##class(Tasc.dashboard.Serie).%New()	
	new total, j, idxTotal
	set (total) = 0	
	set ano = $piece($zdate($horolog),"/",3)
	for idxTotal = 0:1:1 {
		set ano = +ano - idxTotal
		for j = 1:1:12 {
			if (j < 10) {
				set mes = "0"_j
			}
			else {
				set mes = j
			}
			set competencia = ano_mes
			
			set total = +$$GetEstoque(competencia,Produto,Regional,tipo,grupo,pVisaoFilho)
			
			set $p(filtros,"&",6) = "fCompetencia="_competencia
			
			set filtrosLink = filtros
			if (total = 0) {
				set filtrosLink = ""
			}
				 if (idxTotal = 1) {
						set anoanterior = ano
						set serieAnterior.Cor="Black"
						set serieAnterior.Titulo = ano
						set serieAnterior.Categoria = "ano"
						do serieAnterior.InsertSubSeries($$GetDescMes^VARSQL(j)_ "",total,"","#F0F0F0",filtrosLink, "Estabs: "_ $$GetTotalUnidadesPorCompetencia(ano_mes,tipo,Regional))
					}
					if (idxTotal = 0) {
						set serieAtual.Cor="Black"
						set serieAtual.Titulo = ano
						set serieAtual.Categoria = "ano"
						do serieAtual.InsertSubSeries($$GetDescMes^VARSQL(j)_ "",total,"","#F0F0F0",filtrosLink, "Estabs: "_  $$GetTotalUnidadesPorCompetencia(ano_mes,tipo,Regional))
					}
		}
	}	
	do series.Insert(serieAnterior)
	do series.Insert(serieAtual)
	quit series

GetSeriePorTipoUnidade(competencia, tipoUnidade="", Filtro= "")
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	&sql(DECLARE GetTipoUnidade CURSOR FOR
		select valor, sum(valor) as total, unidade into :valor,:total,:unidade from VARPainelDasaResumo 
		where 
		competencia = :competencia
		and 
		tipo = :tipoUnidade
		and 
		valor > 0
		order by valor desc  )
	&sql(OPEN GetTipoUnidade)
	&sql(FETCH GetTipoUnidade)
	set count = 0
	 WHILE (SQLCODE = 0) {
		set count = count + 1
		if (total > 0) {
			set serieTipo = ##class(Tasc.dashboard.Serie).%New()
			set serieTipo.Cor = "Black"
			set serieTipo.Valor = valor
			set serieTipo.Link = $$MontaLink(Filtro,"fRegional="_unidade)
			set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipo=")
	
			if (total > 0) {
				set porcentagem = (valor/total)  * 100
				do serieTipo.TituloColuna.Insert("Porcentagem")
				;do serieTipo.ColunaTabela.Insert(123)
				do serieTipo.ColunaTabela.Insert($$^WWWTR(0,12,porcentagem,4)_"%")
				set serieTipo.Titulo = "("_unidade_")  "_$$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
				set serieTipo.Categoria = $$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
			}

			
			do series.Insert(serieTipo)
		}
	    &sql(FETCH GetTipoUnidade)
	 }
	 &sql(CLOSE GetTipoUnidade)

	quit series
	
GetSerieUnidades(competencia, tipoUnidade="",item = "",grupo="", Filtro= "")
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	&SQL(
		SELECT SUM(Valor) TotalGeral INTO :sqlTotalGeral
		FROM VARPainelDasaItens
		WHERE Competencia = :competencia
		AND (NVL(:item,'') = Item OR NVL(:item,'') = '')
	)
	
	set (sqlCompetencia, sqlTipo, sqlTotal) = ""
	
	&sql(DECLARE GetUnidadeEv CURSOR FOR
		
		SELECT Competencia, Tipo, SUM(Valor) Total
		INTO :sqlCompetencia, :sqlTipo, :sqlTotal
		
		FROM VARPainelDasaItens
		
		WHERE Competencia = :competencia
		AND (NVL(:item,'') = Item OR NVL(:item,'') = '')
		
		GROUP BY Tipo
		
		ORDER BY Total desc)
	
	&sql(OPEN GetUnidadeEv)
	&sql(FETCH GetUnidadeEv)
	set count = 0
	 WHILE (SQLCODE = 0) {
		set count = count + 1
		if (sqlTotal > 0) {
			set serieTipo = ##class(Tasc.dashboard.Serie).%New()
			set percentual = (sqlTotal/sqlTotalGeral) *100
			set serieTipo.Categoria = $$SQLGetTipoUnidadeDesc^VARSQL(sqlTipo)
			set serieTipo.Titulo = ""_$$SQLGetTipoUnidadeDesc^VARSQL(sqlTipo) 
			set serieTipo.Cor = "Black"
			set serieTipo.Valor = sqlTotal
			set serieTipo.Link = $$MontaLink(Filtro,"fTipo="_sqlTipo)
			set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipoLink="_sqlTipo)
			do series.Insert(serieTipo)
		}
	    &sql(FETCH GetUnidadeEv)
	 }
	 &sql(CLOSE GetUnidadeEv)

	quit series
		
	
GetSeriePorTipoUnidadeItem(competencia, tipoUnidade="",item = "", Filtro= "")
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	&sql(DECLARE cUnidadeItem CURSOR FOR
		select EstoqueTotalLocal, sum(EstoqueTotalLocal) as total, unidade into :valor,:total,:unidade from VARPainelDasa
		where 
		competencia = :competencia
		and 
		$$SQLGetTipoLocal^VARSQL(Unidade)  = :tipoUnidade
		and 
		item = :item
		and
		EstoqueTotalLocal > 0
		order by total desc  )
	
	&sql(OPEN cUnidadeItem)
	&sql(FETCH cUnidadeItem)
	set count = 0
	 WHILE (SQLCODE = 0) {
		set count = count + 1
		if (total > 0) {
			set serieTipo = ##class(Tasc.dashboard.Serie).%New()
			set serieTipo.Cor = "Black"
			set serieTipo.Valor = valor
			set serieTipo.Link = $$MontaLink(Filtro,"fRegional="_unidade)
			set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipo=")
		
			if (total > 0) {
				set porcentagem = (valor/total)  * 100
				do serieTipo.TituloColuna.Insert("Porcentagem")
				;do serieTipo.ColunaTabela.Insert(123)
				do serieTipo.ColunaTabela.Insert($$^WWWTR(0,12,porcentagem,4)_"%")
				set serieTipo.Titulo = "("_unidade_")  "_$$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
				set serieTipo.Categoria = $$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
			}
			do series.Insert(serieTipo)
		}
	    &sql(FETCH cUnidadeItem)
	 }
	 &sql(CLOSE cUnidadeItem)

	quit series
	/**/
	
GetSerieSubRegionais(competencia, regional="" ,tipo="", produto="",grupo="",filtros="",pVisaoFilho="")
 	new local, totalSerie
 	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	set listaSub = ##class(%ListOfDataTypes).%New()
	
	kill ^seriesDashboard("GetSerieSubRegionais"_competencia_regional)
	if (pVisaoFilho '= 1) {
		if (tipo'="") {
			set listaSub = ##class(Tasc.stock.Util).GetListaLocaisPorTipo(tipo)
		}
		else {
			set listaSub = ##class(Tasc.stock.Util).GetListaSubLocais(regional)
		}
	}
	do listaSub.Insert(regional)
	set totalizado = 0
	set indice = 0
	set totalSerie = 0
	for idxSub=1:1:listaSub.Count() {
		set local = listaSub.GetAt(idxSub)
		if (($$SQLGetTipoLocal^VARSQL(local) '= tipo) && (tipo'="")) {
			continue
		}
		if (tipo = "") {
			if (( $$SQLGetTipoLocal^VARSQL(local) '= 4)
			 && ( $$SQLGetTipoLocal^VARSQL(local) '= $$SQLGetTipoLocal^VARSQL(regional)) 
			 && ( $$SQLGetTipoLocal^VARSQL(local) '= ""))		 {
				continue
			}
		}
		set serie = ##class(Tasc.dashboard.Serie).%New()
		do serie.TituloColuna.Insert("Início Operações")
		do serie.TituloColuna.Insert("Porcentagem")
		set dataInicio = $$GetDataCadLocal^VARPainelUtil(local)
		set operando = ""
		if (dataInicio '= "") {
			set operando =""_$piece($zdate(dataInicio,4),"/",2,3)_""
		}
		set serie.Cor=""
		;
		set descLocal = $$SQLGetLocationName^VARSQL(local)
		set descLocal = "("_local_") "_descLocal
		
		do serie.ColunaTabela.Insert(operando)
		if (local = regional) {
			if ((produto="") && (grupo = "")) {
				set serie.Valor = +$$GetEstoque(competencia,"",local,tipo,"",pVisaoFilho) - totalizado
			}else {
				set serie.Valor = +$$GetEstoque(competencia,produto,local,tipo,grupo,pVisaoFilho) - totalizado
			}
		}
		else {
			if ((produto="") && (grupo = "")) {
				set serie.Valor = +$$GetEstoque(competencia,"",local,tipo)
			}else {
				set serie.Valor = +$$GetEstoque(competencia,produto,local,tipo,grupo)
			}
			set totalizado = totalizado + serie.Valor
		}
		set totalSerie = totalSerie + serie.Valor
		
		set serie.Categoria = descLocal
		set serie.Titulo = descLocal
		
		set serie.Link = $$MontaLink(filtros,"fRegional="_local)
		set serie.Link = $$MontaLink(serie.Link,"fTipo=")
		
		if (local = regional) {
			set serie.Link = $$MontaLink(serie.Link,"fVisaoFilho=1")
		}
		else {
			set serie.Link = $$MontaLink(serie.Link,"fVisaoFilho=")
		}
		if (serie.Valor > 0) {
			set indice = indice + 1
			set serie.Ordered = "GetSerieSubRegionais"_competencia_regional
			set ^seriesDashboard(serie.Ordered,serie.Valor,$increment(^seriesDashboard(serie.Ordered,serie.Valor))) = indice
			do series.Insert(serie)
		}
	}
	if (totalSerie = 0) {
		set totalSerie = totalizado
	}
	for idx = 1:1:series.Count() {
		if (totalSerie > 0) {
			set percentagem = (series.GetAt(idx).Valor / totalSerie) * 100
			do series.GetAt(idx).ColunaTabela.Insert($$^WWWTR(0,12,percentagem,4)_"%")
		}
	}
	set ^DasaCompUnidade(competencia) = series.Count()
	quit series
	/**/
	
CarregaSerieGrupo(competencia,regGlobal)	
	new total, totalSerie
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	set total = ""
	set totalSerie = 0
	for {
		set total = $ZPREVIOUS(^SerieGrupoPaineis(competencia,regGlobal,total))
		quit:total=""
			set grp = ""
		for {
			set grp = $order(^SerieGrupoPaineis(competencia,regGlobal,total,grp))
			quit:grp=""
			
			if (total > 0) {
				set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
				set serieGrupo.Categoria = $$SQLGetDescGrupoItem^VARSQL(grp)
				set serieGrupo.Titulo = ""_$$SQLGetDescGrupoItem^VARSQL(grp)
				set serieGrupo.Cor = "Black"
				set serieGrupo.Valor = total
				do serieGrupo.TituloColuna.Insert("Porcentagem")
				set totalSerie = totalSerie + total
				do series.Insert(serieGrupo)
			}
		}
	}
	for idx = 1:1:series.Count() {
		if (totalSerie > 0) {
			set percentagem = (series.GetAt(idx).Valor / totalSerie) * 100
			do series.GetAt(idx).ColunaTabela.Insert($$^WWWTR(0,12,percentagem,4)_"%")
		}
	}
	quit series

	
GetSerieGrupo(competencia,regional="", grupo="")
	 ;set ser = $$GetSerieGrupo^VARPaineisEstoque(201512)
	if (regional = "") {
		set regGlobal = "--"
	} 
	else {
		set regGlobal = regional
	}
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	&sql(DECLARE GetStockGrupo CURSOR FOR
		select sum(EstoqueTotalLocal) as total , $$SQLGetGrupoItem^VARSQL(item) into :total,:grupo 
		from VARPainelDasa 
		where 
		competencia = :competencia 
		and $$SQLIsCD^VARSQL(unidade) <> 1
		and ( $$SQLUnidadeGet^VARPaineisEstoque(:regional)=1 
		or unidade = :regional) 
		group by $$SQLGetGrupoItem^VARSQL(item) 
		order by total desc  )
	&sql(OPEN GetStockGrupo)
	&sql(FETCH GetStockGrupo)
	set count = 0
	 WHILE (SQLCODE = 0) {
		set count = count + 1
		if (total > 0) {
			set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
			set serieGrupo.Categoria = $$SQLGetDescGrupoItem^VARSQL(grupo)
			set serieGrupo.Titulo = ""_$$SQLGetDescGrupoItem^VARSQL(grupo)
			set serieGrupo.Cor = "Black"
			set serieGrupo.Valor = total
			do serieGrupo.TituloColuna.Insert("Porcentagem")
			do serieGrupo.ColunaTabela.Insert(12)
			do series.Insert(serieGrupo)
		}
	    &sql(FETCH GetStockGrupo)
	 }
	 &sql(CLOSE GetStockGrupo)

	quit series
	
	
SQLUnidadeGet(unidade="") 
	if (unidade = "") {
		quit 1
	}
	quit 0
	

GetSerieAgrupadas()
	set seriesG = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
	set ano = $$SQLGetAno^VARSQL(+$HOROLOG)
	set anoAnterior = ano - 1
	set series1 = ##class(Tasc.dashboard.Serie).%New()
	set series1.Categoria = anoAnterior
	set series1.Titulo = anoAnterior
	set series2 = ##class(Tasc.dashboard.Serie).%New()
	set series2.Categoria = ano
	set series2.Titulo = ano
	
	set series1.SubSeries = $$GetSerieGrupo(anoAnterior_"12")
	set series2.SubSeries = $$GetSerieGrupo(ano_"12")
	
	do series1.CalculaValorTotal()
	do series2.CalculaValorTotal()
	 
	do seriesG.Insert(series1)
	do seriesG.Insert(series2)
	
	quit seriesG
	
 ;w $$GetTipoUnidade^VARPaineisEstoque("A16")
GetTipoUnidade(lcl)

	if ($l(lcl) > 0 ) {
		quit $$$WWW0121FREE21($g(^WWW0121(0,0,lcl,1)))
	}
	else {
		quit ""
	}

GetTotalUnidadesPorCompetencia(Competencia, tipo="", regional="")
	set qt = 0
	
	set anoC = $e(Competencia,1,4)
	set mesC = $e(Competencia,5,6)
	
	if (Competencia > $extract($zdate($horolog,8),1,6)) {
		quit 0
	}
	
	if (regional '= "" ) {
		&SQL(select Count(*) into :qt from WWW0121 where  UPPER(ParentLocn) = :regional and $$GetDataCadLocal^VARPainelUtil(location) < $$SQLGetUltimoDiaMes^VARSQL(:mesC,:anoC))
		quit +qt
	}

	&SQL(select count(unidade) into :qt from VARPainelDasaResumo where Competencia = :Competencia and tipo <> 4 and  $$SQLFiltroTipo^VARSQL(:tipo,tipo)=1 and Valor > 0)
	if (qt = 0) {
		set CompAnoAnterior = (+$e(Competencia,1,4)-1)_$e(Competencia,5,6)
		&SQL(select count(unidade) into :qt from VARPainelDasaResumo where Competencia = :CompAnoAnterior and tipo <> 4  and  $$SQLFiltroTipo^VARSQL(:tipo,tipo)=1 and Valor > 0)
	}
	quit +qt
	
GetLinhaGrupoLocal(competencia,location="", grupo="",tipo ="",item="" ,link="",pVisaoFilho="")
	if (item'="") {
		quit $$GetLinhaGrupoLocalItem(competencia,location,grupo,item,link,tipo)
	}
	if (grupo '="") {
		quit $$GetLinhaGrupoLocalItem(competencia,location,grupo,item,link,tipo,pVisaoFilho)
	}
	
	if ($get(tipo) = "") {
		set tipo = $$SQLGetTipoLocalPainel^VARSQL(location)
	}
	
	
	 ;set ser = $$GetLinhaGrupoLocal^VARPaineisEstoque(201512)
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
	&sql(
		SELECT SUM(Valor) Total
		INTO :sqlTotalLocal
		FROM VARPainelDASAGrupos

		WHERE Competencia = :competencia
		AND (Estabelecimento = NVL(:location,'')
			OR (
				NVL(:pVisaoFilho,'') <> 1 
				AND $$GetLocalPai^VARSQL(Estabelecimento) = NVL(:location,'')
				AND Tipo = NVL(:tipo,'')
			)
		)
	)
	
	if (sqlTotalLocal > 0) {
		&sql(
			DECLARE CGrupoByLocn CURSOR FOR
			SELECT SUM(Valor) Total, Grupo, Estabelecimento
			INTO :sqlTotal, :sqlGrupo, :sqlEstabelecimento
			FROM VARPainelDASAGrupos

			WHERE Competencia = :competencia
			AND (Estabelecimento = NVL(:location,'')
				OR (
					NVL(:pVisaoFilho,'') <> 1 
					AND $$GetLocalPai^VARSQL(Estabelecimento) = NVL(:location,'')
					AND Tipo = NVL(:tipo,'')
				)
			)

			GROUP BY Grupo
			ORDER BY Total DESC
		)
		
		&sql(OPEN CGrupoByLocn)
		&sql(FETCH CGrupoByLocn)
		set count = 0
		 WHILE (SQLCODE = 0) {
			set count = count + 1
			if (sqlTotal > 0) {
				set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
				set serieGrupo.Categoria = $$SQLGetDescGrupoItem^VARSQL($$SQLGetGrupoPai^VARSQL(sqlGrupo))
				set serieGrupo.Titulo = ""_$$SQLGetDescGrupoItem^VARSQL($$SQLGetGrupoPai^VARSQL(sqlGrupo))
				set serieGrupo.Cor = "Black"
				set serieGrupo.Valor = $fnumber(sqlTotal,"D",2) ;$$^WWWTR(0,12,total,2)
				do serieGrupo.TituloColuna.Insert("SubGrupo")
				do serieGrupo.ColunaTabela.Insert($$SQLGetDescGrupoItem^VARSQL(sqlGrupo))
				do serieGrupo.TituloColuna.Insert("Percentual")
				set percent = (sqlTotal/sqlTotalLocal) *100
				do serieGrupo.ColunaTabela.Insert($$^WWWTR(0,12,percent,2)_"%")
				set serieGrupo.Link = $$MontaLink(link,"fGrupo="_sqlGrupo)
				do series.Insert(serieGrupo)
			}
		    &sql(FETCH CGrupoByLocn)
		 }
		 &sql(CLOSE CGrupoByLocn)
	}
	quit series
	
GetLinhaGrupoLocalItem(competencia, location="", SubGrupo="",item="",link="",pTipo="",pVisaoFilho="")
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
	
	if ((pTipo = "") && (location '= "")) {
		set pTipo = $$SQLGetTipoLocalPainel^VARSQL(location)
	}
	
	&SQL(
		DECLARE CItem CURSOR FOR
		SELECT DISTINCT Item.ID, Item.Item, Item.Estabelecimento, Item.Tipo, Item.Valor, Item.Qtde

		FROM VARPainelDasaItens Item
		
		WHERE Item.Competencia = :competencia
		
		AND (Item.Item = NVL(:item,'') OR NVL(:item,'') = '')

		AND (Item.Tipo = NVL(:pTipo,'') OR NVL(:pTipo,'') = '')

		AND (Item.Grupo = NVL(:SubGrupo,'') OR NVL(:SubGrupo,'') = '')

		AND (
			(Item.Estabelecimento = NVL(:location,'') OR NVL(:location,'') = '')

			OR (NVL(:pVisaoFilho,'') <> 1 
			AND $$GetLocalPai^VARSQL(Estabelecimento) = NVL(:location,'')
			AND Tipo = NVL(:pTipo,''))
		)
		
		ORDER BY Item.Valor DESC
	)
	
	&SQL(OPEN CItem)
	
	for {
		&SQL(FETCH CItem INTO :sqlID, :sqlItem, :sqlLocal, :sqlTipo, :sqlValor, :sqlQtde)
		quit:(SQLCODE '= 0)
		
		set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
			
		if (item '= "") {
			set serieGrupo.Categoria = "("_sqlLocal_") "_ $$SQLGetLocationName^VARSQL(sqlLocal)
			set serieGrupo.Titulo = "("_sqlLocal_") "_$$SQLGetLocationName^VARSQL(sqlLocal)
		}
		else {
			set serieGrupo.Categoria = "("_sqlItem_") "_ $$SQLGetDescricaoProduto^VARSQL(sqlItem)
			set serieGrupo.Titulo = "("_sqlItem_") "_$$SQLGetDescricaoProduto^VARSQL(sqlItem)
		}
		set serieGrupo.Cor 		= "Black"
		set serieGrupo.Link 	= $$MontaLink(link,"fProd="_sqlItem)
		set serieGrupo.Valor 	= sqlValor
		
		do serieGrupo.TituloColuna.Insert("Un. de Medida")
		do serieGrupo.ColunaTabela.Insert($$SQLGetUnitSigla^VARSQL(sqlItem))
		do serieGrupo.TituloColuna.Insert("Quantidade")
		do serieGrupo.ColunaTabela.Insert($$^WWWTR(0,12,sqlQtde,2)_"")
		do series.Insert(serieGrupo)
	}
	&SQL(CLOSE CItem)
	
	/**/
	quit series
	
GetLinhaGrupoLocalItemOld(competencia, location="", SubGrupo="",item="",link="")
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
	
	; Recupera tipo do estabelecimento do local que foi passado como parâmetro
	set tipo = $$SQLGetTipoLocalPainel^VARSQL(location)
	
	; Varre pelo índice VARPainelDasaLocaiss(0,1,local,localFilho,Tipo)
	set strLocalFilho 	= ""
	set strLocal		= ""
	for {
		; Sai neste ponto, pq na última execução, tem que executar a regra para o local que o chamou
		quit:((strLocalFilho = "") && (strLocal '= ""))
		
		set strLocalFilho = $order(^VARPainelDasaLocaiss(0,1,location,strLocalFilho))
		; Se já varreu todos os locais filhos, agora considera o proprio local
		set strLocal = strLocalFilho
		if (strLocalFilho = "") {
			set strLocal = location
		}
		
		; Se o local for de um tipo diferente
		continue:('$data(^VARPainelDasaLocaiss(0,2,strLocal,tipo)))
		
		set strItem = ""
		
		for {
			set strItem = $order(^VARPainelDasaItens(0,competencia,tipo,strLocal,SubGrupo,strItem))
			quit:(strItem = "")
			
			set objItem = $get(^VARPainelDasaItens(0,competencia,tipo,strLocal,SubGrupo,strItem,1))
			continue:(objItem = "")
			
			set qtde 	= $$$VARPainelDasaItensQtde(objItem)
			set valor 	= $$$VARPainelDasaItensValor(objItem)
			
			set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
			
			if (item '= "") {
				set serieGrupo.Categoria = "("_strLocal_") "_ $$SQLGetLocationName^VARSQL(strLocal)
				set serieGrupo.Titulo = "("_strLocal_") "_$$SQLGetLocationName^VARSQL(strLocal)
			}
			else {
				set serieGrupo.Categoria = "("_strItem_") "_ $$SQLGetDescricaoProduto^VARSQL(strItem)
				set serieGrupo.Titulo = "("_strItem_") "_$$SQLGetDescricaoProduto^VARSQL(strItem)
			}
			set serieGrupo.Cor 		= "Black"
			set serieGrupo.Link 	= $$MontaLink(link,"fProd="_strItem)
			set serieGrupo.Valor 	= valor
			
			do serieGrupo.TituloColuna.Insert("Un. de Medida")
			do serieGrupo.ColunaTabela.Insert($$SQLGetUnitSigla^VARSQL(strItem))
			do serieGrupo.TituloColuna.Insert("Quantidade")
			do serieGrupo.ColunaTabela.Insert($$^WWWTR(0,12,qtde,2)_"")
			do series.Insert(serieGrupo)
		}
	 }
		
	/**/
	quit series
	

	
MontaLink(linkUrl,variavel)
	set linkNovo = linkUrl
	for i=1:1:$length(linkUrl,"&") {
		set filtro = $piece($piece(linkUrl,"&",i),"=",1)
		if (filtro = $piece(variavel,"=",1)) {
			set $piece(linkNovo,"&",i) = variavel
		}
	}
	quit linkNovo
		
getTextLogExecucao(pobjUltimaExecucao)
	new dataUltimaExecucao,horaUltimaExecucao
	set dataUltimaExecucao = $piece(pobjUltimaExecucao,"~",1)
	set horaUltimaExecucao = $piece(pobjUltimaExecucao,"~",2)
	quit "Os dados exibidos foram gerados em  <strong>"_$zdate(dataUltimaExecucao,4)_"</strong> às <strong>"_$extract($ztime(horaUltimaExecucao),1,5)_"</strong>."

GetEstoqueItem(competencia,tipo="", local="", produto, pVisaoFilho = "")
	set valor = 0
	if (tipo = "") {
		set tipo = $$SQLGetTipoLocalPainel^VARSQL(local)
	}
	&SQL(SELECT Sum(Valor) 
		 INTO :valor
		 FROM VARPainelDasaItens
		 WHERE competencia = :competencia
		 AND item = :produto
		 AND ((NVL(:tipo,'') = '') OR (tipo = NVL(:tipo,'')))
		 AND (
		 	(NVL(:local,'') = '') 
		 	OR (
		 		estabelecimento = NVL(:local,'')
		 		OR (NVL(:pVisaoFilho,'') <> 1 
				AND $$GetLocalPai^VARSQL(Estabelecimento) = NVL(:local,'')
				AND Tipo = NVL(:tipo,''))
			)
		 )
	)
	quit valor

GetEstoqueGrupo(competencia, tipo="", local="", grupo, pVisaoFilho = "")
	set soma = 0
	set idTipo = ""
	for {
		if (tipo = "") {
			set idTipo = $order(^VARPainelDasaGrupos(0,competencia,idTipo))
			quit:idTipo=""
		}
		else {
			set idTipo = tipo
		}
		set idLocal = ""
		for {
			if (local = "") {
				set idLocal = $order(^VARPainelDasaGrupos(0,competencia,idTipo,idLocal))
				quit:idLocal=""
			}
			else {
				set idLocal = local
			}
			set soma = soma + $$$VARPainelDasaGruposValor($get(^VARPainelDasaGrupos(0,competencia,idTipo,idLocal,grupo,1)))
			if (local '= "") {
				/****************************************************************************************/
				if (pVisaoFilho '= 1) {
					set strLocalFilho = ""
					; Previne que entre locais com tipos diferentes
					if ($$SQLGetTipoLocalPainel^VARSQL(local) = idTipo) {
						for {
							set strLocalFilho = $order(^VARPainelDasaLocaiss(0,1,local,strLocalFilho))
							quit:(strLocalFilho = "")
							
							; Considera somente como filho se for do tipo mesmo tipo do local pai
							continue:('$data(^VARPainelDasaLocaiss(0,1,local,strLocalFilho,idTipo)))
							set soma = soma + $$$VARPainelDasaGruposValor($get(^VARPainelDasaGrupos(0,competencia,idTipo,strLocalFilho,grupo,1)))
						}
					}
				}
				/****************************************************************************************/
				quit
			}
		}
		if (tipo '= "") {
			quit
		}
	}
	
	quit soma

GetEstoqueLocalComposto(competencia, tipo, local, pVisaoFilho = "")
	new strValor, strLocalFilho
	
	set strValor = 0
	
	; Se o tipo estiver vazio
	if ($get(tipo) = "") {
		set tipo = $$SQLGetTipoLocalPainel^VARSQL(local)
	}
	if ($get(tipo) = "") { quit strValor }
	
	set strValor = strValor + $$GetEstoqueLocal(competencia, tipo, local)
	
	
	; Varre o índice do local pai
	if (pVisaoFilho = "") {
		set strLocalFilho = ""
		for {
			set strLocalFilho = $order(^VARPainelDasaLocaiss(0,1,local,strLocalFilho))
			quit:(strLocalFilho = "")
			
			; Considera somente como filho se for do tipo mesmo tipo do local pai
			continue:('$data(^VARPainelDasaLocaiss(0,1,local,strLocalFilho,tipo)))
			set strValor = strValor + $$GetEstoqueLocal(competencia, tipo, strLocalFilho)
		}
	}
	
	quit strValor

GetEstoqueLocal(competencia, tipo, local)
	quit +$$$VARPainelDasaLocaisValor($get(^VARPainelDasaLocais(0,competencia,tipo,local,1)))		

GetEstoqueTipo(competencia, tipo) 
	quit +$$$VARPainelDasaTiposValor($get(^VARPainelDasaTipos(0,competencia,tipo,1)))

GetEstoqueGeral(competencia)
	quit +$$$VARPainelDasaGeralValor($get(^VARPainelDasaGeral(0,competencia,1)))
]]></Routine>
</Export>