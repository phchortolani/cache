<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="MEDPrescriptionSolLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
MEDPrescriptionSolLine
#include COMConst
#include INConst
#include COMGridEdit31
#include MEDConst

#define FORMFldMEDPrescriptionLineDoseUOM  3

OnAfterRowChange(pstrYFORM,pstrParams)
 	;-------------------------------------------------------------------------------
 	; Show line status for each line
 	; Params:
 	;
 	; Returns:
 	;
 	; History:
	; 31-Jan-2013	SCR		HEVA-751: Created
 	;-------------------------------------------------------------------------------
 	new idLineStatus,strLineStatus,YFELD
	set YFELD = $$GetYFELD^COMGridEdit31G(pstrYFORM,pstrParams)         
	set idLineStatus =  +$$$MEDPrescriptionLineStatus(YFELD)
	set strLineStatus = $$GetDescription^WWWStatus("MEDPrescription",+idLineStatus,$get(SPRACHE))
	do PopulateDataField^COMUtils("MEDPrescriptionSol",14,strLineStatus,"M",YFELD)
	quit 1

OnBeforeDisplayLine(pYKEY,YFELD)
 	;-------------------------------------------------------------------------------
 	; Show lines for the current solution number (Filter based on Solution Number)
 	; Params:
 	;
 	; Returns:
 	;
 	; History:
	; 02-Apr-2012	SCR		SR17994 Created
 	;-------------------------------------------------------------------------------
 #dim blnOK,intSol As %Boolean
 	new blnOK,intSol
 	set blnOK=$$$NO

 	set intSol=$$Solution()
 	if intSol = $$$MEDPrescriptionLineSolution(YFELD) {
	 	set blnOK=$$$YES
 	}

	quit blnOK
	
OnBeforeFormat(pYFIELDNAME,pYTEXT,pYFELD)
	;-------------------------------------------------------------------------------
	; Called By :
	; 	Form - GridEdit:INADJLine
	; 
	; Inputs : 
	;	pYFIELDNAME	- 	Browser Element ID
	;	pYTEXT 		- 	Value currently in element
	;	pYFELD		-	ANM INIssueLine Data record
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 20-Apr-2012	SCR		SR17994 Created
 	;-------------------------------------------------------------------------------
	new intRow,intCol,idClassField,objLine

	if $$$MEDPrescriptionStatus($$$GRIDYFELDContainer) > 0 quit
	
	$$$GRIDSplitKey(pYFIELDNAME,intRow,intCol)
	set idClassField = $$$GetClassField(YFORM,intCol)
	set objLine = $$$GRIDGetYFELD($$GetYKEY^COMGridEdit31Interface(intRow))
	set idClassField = $$$GetClassField(YFORM,intCol)

	if idClassField=$$$FldMEDPrescriptionLineDoseQty {
		if ($$$MEDPrescriptionLineDoseQty(objLine)'>0)&&($$$MEDPrescriptionLineDoseQty(objLine)'="") {
			set YTOOLTIP = $$$Text("MED01283")  ;Dose must be greater than 0
			set YWARNING = $$$YES
		}
	}

	quit
OnBeforeValidation()
 	;-------------------------------------------------------------------------------
 	; Copy Manual fields to grid line
 	; Params:
 	;
 	; Returns:
 	;
 	; History:
	; 08-Nov-2012	SCR		SR18138 Moved Dose checking to OnBeforeSave
	; 02-Apr-2012	SCR		SR17994 Created
 	;-------------------------------------------------------------------------------
 	new strYMFELD,strStatus,idItem
 	kill YRETVAL
	
	set strStatus=$$$OK
 	set strYMFELD=$get(^WWWDATEN(0,+$h,YUSER,"MEDPrescriptionSol","M",1)) 
 	if strYMFELD'="" do UpdateLine(strYMFELD,.YFELD)
	set $$$MEDPrescriptionLineSolution(YFELD)=$get(^CacheTempMedRx(YUSER,"SOL-CUR"))
	;if $$$MEDPrescriptionLineDoseQty(YFELD)'>0 {
	;	set strStatus = $$$Text("MED01283")  ;Dose must be greater than 0
	;	set YRETVAL = strStatus
	;	set Q=1
	;}
	quit strStatus
	
OnBeforeSave()
 	;-------------------------------------------------------------------------------
 	; Check Line before saving
 	; Params:
 	;
 	; Returns:
 	;
 	; History:
	; 08-Nov-2012	SCR		SR18138 Created
 	;-------------------------------------------------------------------------------
 	new strYMFELD,strStatus,idItem
 	kill YRETVAL
	
	set strStatus=$$$OK
	if $$$MEDPrescriptionLineDoseQty(YFELD)'>0 {
		set strStatus = $$$Text("MED01283")  ;Dose must be greater than 0
		set YRETVAL = strStatus
		set Q=1
	}
	set idItem = $$$MEDPrescriptionLineItem(YFELD)
	if '$$Checkml(idItem) {
		set strStatus = $$$Text("MED01312")  ;Missing 'mL' unit for Item, Volume calcultion can will not be made
		set YRETVAL = strStatus
		set Q=1
	}
	quit strStatus

Solution(pblnReset=$$$NO,pintSet="")
 	;-------------------------------------------------------------------------------
 	; Get/Set/Reset Solution number
 	; Params: Reset
 	;
 	; Returns: Current or next solution number
 	;
 	; History:
	; 26-Apr-2012	SCR		SR17994 Created
 	;-------------------------------------------------------------------------------

#dim intSol As %Integer
#dim idRx,idLine,objLine As %String
	new intSol,idLine,idRx,objLine,intSet
	set intSol=0
	if pblnReset {
		kill ^CacheTempMedRx(YUSER,"SOL")
	}
	if pintSet {
		set ^CacheTempMedRx(YUSER,"SOL")=pintSet
		set intSet = pintSet
	}
	set intSol=$get(^CacheTempMedRx(YUSER,"SOL"))	
	set idRx=$piece($get(YKEY),",",1)
	if ('intSol) && (idRx'="") {
		set idLine=""
		for {
			set idLine=$order(^MEDPrescriptionLine(YM,idRx,idLine))
			quit:idLine=""
			set objLine=$get(^MEDPrescriptionLine(YM,idRx,idLine,1))
			if intSol'> $$$MEDPrescriptionLineSolution(objLine) {
				set intSol=$$$MEDPrescriptionLineSolution(objLine)+1
			}
		}
		set:'intSol intSol=1
		set:intSol ^CacheTempMedRx(YUSER,"SOL")=intSol	
		
	}
	quit intSol

OnBeforeDisplayCombo(pstrKeys,pobjPres,pintCol,&pSUCH)
	;-------------------------------------------------------------------------------
	; Populates the Dose UOM with the UOM as defined in INARTPACK only, excludes
	; units that the item does not come in.
	; 
	; set pSUCH as the items to be used when you override the list (set via blnOverride)
	;
	; Inputs:
	;	pstrKeys	- YKEY
	;	pobjPres	- YFELD
	;	pintCol     - Edit Grid Column Id
	;	pSUCH       - Search Array
	; 
	; Returns: $$$YES or $$$NO (override the data) 
	;
	; History:
	; 15-Jul-2011	GRF		SR17669: Call common code
	; 26-Jun-2009	DWR		SR16303: Created
	;-------------------------------------------------------------------------------
	new blnOverride
	
	set blnOverride = $$$NO
	
	; F11 - Received Unit
	;---------------------------------------
	if pintCol = $$$FORMFldMEDPrescriptionLineDoseUOM {    ; SR17669 vvv
		set blnOverride = $$LoadCombo^INARTPACK($$$MEDPrescriptionLineItem(pobjPres),blnOverride,.pSUCH)
	}
	quit blnOverride

OnBlurItem(pYKEY, pidGridRow, pidItem, &pobjLine)
	;-------------------------------------------------------------------------------
	; On Blur from Item
	;	Populates Unit dropdown
	;
	; Called By : form $MEDPrescriptionLine & MEDPrescriptionHospLine
	;		
	; Params:	(YKEY,GROW,YINHALT,.YFELD)
	;
	; ByRefs:	pobjLine	- current line object
	;
	; Returns:
	;
	; History :
	; 
	; 24-Oct-2012	SCR		SR18138: Update Volume
	; 10-Oct-2012	SCR		SR18139: Use Frequency function
	; 09-May-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
 	new strYMFELD,objItem	
	do OnBlurItem^MEDPrescriptionLine(pYKEY,pidGridRow,pidItem,.pobjLine)
	if pidItem'="" {
		set objItem = $get(^INART(0,pidItem,1))
		;do:$$$INARTMedFrequency(objItem)'="" UpdateHeaderField^COMGridEdit31G("M22",$$$INARTMedFrequency(objItem))
		do:$$$INARTMedFrequency(objItem)'="" UpdateHeaderField^COMGridEdit31G("M22",$$Frequency^MEDPrescriptionHosp(objItem))  ; SR18139
		do:$$$INARTMedRouteOfAdministration(objItem)'="" UpdateHeaderField^COMGridEdit31G("M23",$$$INARTMedRouteOfAdministration(objItem))
	}
 	set strYMFELD=$get(^WWWDATEN(0,+$h,YUSER,"MEDPrescriptionSol","M",1))  
 	if strYMFELD'="" {
	 	do UpdateLine(strYMFELD,.pobjLine)
	 	do OnBlur(pYKEY,pidGridRow,pidItem,.pobjLine) ;SR18138
 	}

 	;if strYMFELD'="" do UpdateLine(strYMFELD,.pobjLine)
 	
	quit
	
	
OnBlur(pYKEY,pidGridRow,pidField,&pobjLine)
	;-------------------------------------------------------------------------------
	; On Blur from Dose Qty/Frequency/DurationDays/Dose UOM
	;	Populates Unit dropdown
	;
	; Called By : form $MEDPrescriptionLine 
	;		
	; Params:	(GROW,YINHALT,.YFELD)
	;
	; ByRefs:	pobjLine	- current line object
	;
	; Returns:
	;
	; History :
	; 07-Feb-2013	SCR		HEVA-800: Round to 2 dp
	; 10-Jan-2013	SCR		HEVA-753: Continuous Solution Dose Calculation
	; 30-Nov-2012	SCR		SR18216: Calculate Qty if Continuous is Set
	; 10-Oct-2012	SCR		SR18138:Pass in Unit
	; 21-Jun-2012	SCR		SR17993:Update Total Qty 
	; 09-May-2012	SCR		SR17993:Created
	;-------------------------------------------------------------------------------
	new strYMFELD,intVolume,intQty,intRate,intTime,intQPH,idUnit,blnCont,fltDays,fltHours
	
	; HEVA-800 vvvv
	if $$$MEDPrescriptionLineDoseQty(pobjLine) {	  
		set $$$MEDPrescriptionLineDoseQty(pobjLine)=$$RoundDose^MEDPrescriptionCommon($$$MEDPrescriptionLineDoseQty(pobjLine))	
	}
	; HEVA-800 ^^^^
	do OnBlur^MEDPrescriptionLine(pYKEY,pidGridRow,pidField,.pobjLine)
	do Volume(pidGridRow,pobjLine)
	
	
	set strYMFELD	= $$GetYMFELDContainer^COMGridEdit31Interface(1)
	set intVolume 	= $$UpdateVolume($$$YES)
	set intQty		= $piece(strYMFELD,Y,30)
	set idUnit		= $piece(strYMFELD,Y,25) 	; SR18138
	set intRate		= $piece(strYMFELD,Y,24)
	set blnCont		= $piece(strYMFELD,Y,26)	; SR18216
	; HEVA-753 vvvv
	set fltDays		= (($piece(strYMFELD,Y,20)*86400)+$piece(strYMFELD,Y,21))-(($piece(strYMFELD,Y,17)*86400)+($piece(strYMFELD,Y,18))) ;HEVA-713
	set fltDays		= fltDays/86400
	set fltHours	= fltDays*24

	do InfuseTime^MEDPrescriptionSol(intVolume,.intQty,intRate,idUnit,.intTime,.intQPH,blnCont,fltHours)
	
	;do InfuseTime^MEDPrescriptionSol(intVolume,.intQty,intRate,idUnit,.intTime,.intQPH,blnCont) ; SR18216
	; HEVA-753 ^^^^
	;do InfuseTime^MEDPrescriptionSol(intVolume,intQty,intRate,idUnit,.intTime,.intQPH) ; SR18138

	do UpdateHeaderField^COMGridEdit31G("M27",intTime)
	do UpdateHeaderField^COMGridEdit31G("M31",intQPH)	
	do UpdateHeaderField^COMGridEdit31G("M34",intVolume)
	do UpdateHeaderField^COMGridEdit31G("M30",intQty)

	quit
	
UpdateLine(pstrYMFELD,&pobjLine)
	;-------------------------------------------------------------------------------
	;	Update Line with manual fields
	;		
	; Params:	(YMFELD,.YFELD)
	;
	; Returns:
	;
	; History :
	; 
	; 26-Feb-2013	SCR		HEVA-866: Add PRN Field
	; 29-Nov-2012	SCR		SR18214: Added Administer only
	; 10-May-2012	SCR		SR17993:Created
	;-------------------------------------------------------------------------------
	set $$$MEDPrescriptionLineFromDate(pobjLine)	= $piece(pstrYMFELD,Y,17)
	set $$$MEDPrescriptionLineFromTime(pobjLine)	= $piece(pstrYMFELD,Y,18)
	;set $$$MEDPrescriptionLineFromTime(pobjLine)	= $ztimeh($piece(pstrYMFELD,Y,18),2)
	set $$$MEDPrescriptionLineDuration(pobjLine)	= $piece(pstrYMFELD,Y,19)
	set $$$MEDPrescriptionLineToDate(pobjLine)		= $piece(pstrYMFELD,Y,20)
	set $$$MEDPrescriptionLineToTime(pobjLine)		= $piece(pstrYMFELD,Y,21)
	;set $$$MEDPrescriptionLineToTime(pobjLine)		= $ztimeh($piece(pstrYMFELD,Y,21),2)
	set $$$MEDPrescriptionLineFrequency(pobjLine)	= $piece(pstrYMFELD,Y,22)
	set $$$MEDPrescriptionLineRouteOfAdministration(pobjLine)=$piece(pstrYMFELD,Y,23)
	set $$$MEDPrescriptionLineInfusionSpeed(pobjLine)= $piece(pstrYMFELD,Y,24)
	set $$$MEDPrescriptionLineInfusionUOM(pobjLine)	= $piece(pstrYMFELD,Y,25)
	set $$$MEDPrescriptionLineContinuous(pobjLine)	= $piece(pstrYMFELD,Y,26)
	set $$$MEDPrescriptionLineInfusionTime(pobjLine)= $piece(pstrYMFELD,Y,27)
	set $$$MEDPrescriptionLineIfNeeded(pobjLine)	= $piece(pstrYMFELD,Y,28)
	set $$$MEDPrescriptionLineUrgent(pobjLine)		= $piece(pstrYMFELD,Y,29)
	set $$$MEDPrescriptionLineDiluentQty(pobjLine)	= $piece(pstrYMFELD,Y,30)
	set $$$MEDPrescriptionLineInfusionPump(pobjLine)= $piece(pstrYMFELD,Y,32)
	set $$$MEDPrescriptionLineRemarks(pobjLine)		= $piece(pstrYMFELD,Y,33)
	;set $$$MEDPrescriptionLineDispenseUOM(pobjLine) = $$DispensingUOM^MEDPrescriptionLine($$$KEY1(YKEY),objLine)
	set $$$MEDPrescriptionLineDoseTotalQuantity(pobjLine) = $$DoseTotal^MEDPrescriptionLine(pobjLine)
	;set $$$MEDPrescriptionLineDispenseQuantity(pobjLine)  = +$$DispensingQty^MEDPrescriptionLine($$$KEY1(YKEY),objLine)
	set $$$MEDPrescriptionLineAdministeronly(pobjLine)= $piece(pstrYMFELD,Y,35) ; SR18214
	set $$$MEDPrescriptionLinePRN(pobjLine)			= $piece(pstrYMFELD,Y,36) ; HEVA-866
	quit

Volume(pidGridRow,pobjLine,pblnNoUpdate=0)
	;-------------------------------------------------------------------------------
	; Set Volume
	; required.
	;
	; Returns:
	;
	; History:
	; 24-Oct-2012	SCR		SR18156: Use Unit Conversion
	; 10-May-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim idItem,objItem,idUOM,strStatus As %String
#dim intQty,intConv,intVol
	new idItem,objItem,idUOM,intQty,intConv,intVol,strStatus,idBase,idUOM
	set strStatus=$$$OK
	set idItem	= $$$MEDPrescriptionLineItem(pobjLine)
	set intQty	= $$$MEDPrescriptionLineDoseQty(pobjLine)
	set idUOM	= $$$MEDPrescriptionLineDoseUOM(pobjLine) ; SR18156
	if idItem="" set strStatus=$$$NO
	if strStatus=$$$OK {
		set intVol = $$VolumeItem(idItem,idUOM) ; SR18156
		;set objItem	= $get(^INART(YM,idItem,1))
		;set intVol	= $$$INARTVolume(objItem)

		if intVol {
			set intQty=intQty*intVol
			if 'pblnNoUpdate $$$GRIDUpdateManualField(pidGridRow,32,intQty)
		} else {
			if 'pblnNoUpdate $$$GRIDUpdateManualField(pidGridRow,32,"#")
		}
	}
	quit intQty

VolumeItem(pidItem,pidUnit="")
	;-------------------------------------------------------------------------------
	; Get Volume for Item / Unit
	; if no unit use base unit
	;
	; Returns:
	;
	; History:
	; 07-Nov-2012	SCR		SR18138: Use "ML" unit (Default id 170)
	; 24-Oct-2012	SCR		SR18156: Created
	;-------------------------------------------------------------------------------
	new objItem,intVol,idBase,intConv,idML,objSetup
	quit:pidItem="" 0
	; SR18138 vvvv
	set objSetup=$get(^MEDPrescriptionSetup(0,YM,1))		
	set idML	= $$$MEDPrescriptionSetupmLUnit(objSetup)
	set:idML="" idML=170 ; Default Unit for ML
	set objItem	= $get(^INART(YM,pidItem,1))
	set idBase 	= $$$INARTUnitofMeasure(objItem)
	set:pidUnit="" pidUnit=idBase
	set intVol	= $$Convert^INUOMConversion(pidItem,1,pidUnit,idML, $$$NO)
	set:'$$Checkml(pidItem) intVol=0
	quit intVol
	; SR18138 ^^^^
	/***
	set objItem	= $get(^INART(YM,pidItem,1))
	set intVol	= $$$INARTVolume(objItem)
	set idBase 	= $$$INARTBaseUnit(objItem)
	;set:pidUnit'="" intVol	= $$Convert^INUOMConversion(pidItem,intVol,idBase,pidUnit, $$$NO)
	if pidUnit'="" {
		set intConv	= $$Convert^INUOMConversion(pidItem,1,idBase,pidUnit, $$$NO)
		set:intConv intVol = intVol / intConv
	}
	quit intVol
	***/
Checkml(pidItem)
	;-------------------------------------------------------------------------------
	; Check Item for the mL Unit
	; 
	;
	; Returns: 1 unit defined else 0
	;
	; History:
	; 07-Nov-2012	SCR		SR18138: Created
	;-------------------------------------------------------------------------------
	new objSetup,blnOK
	set objSetup=$get(^MEDPrescriptionSetup(0,YM,1))		
	set idML	= $$$MEDPrescriptionSetupmLUnit(objSetup)
	set:idML="" idML=170 ; Default Unit for ML
	set:$get(pidItem)="" pidItem=" " ; Stop Suscript Error 
	if $data(^INARTPACK(YM,pidItem,idML)) {
		set blnOK=$$$YES
	} else {
		set blnOK=$$$NO
	}
	quit blnOK

OnAfterDataFields()
	;-------------------------------------------------------------------------------
	; Update Volume
	;
	; Returns:
	;
	; History:
	; 10-May-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
	do UpdateVolume()
	quit
	
UpdateVolume(pblnNoUpdate=0,pblnSavedData=0,pidRx="")	
	;-------------------------------------------------------------------------------
	; Set Volume on each line & Return total
	;
	; Param:	pblnNoUpdate: no update
	;			pblnSavedData: Used Saved Data
	;			pidRx: Prescription ID (Optional)
	;
	; Returns:
	;
	; History:
	; 10-Jan-2013	SCR		HEVA-753: Pass in ID
	; 10-May-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
	
#dim arrLines As %ArrayOfDataTypes
#dim idLine,objLine,strStatus,idRx As %String
#dim intSol,intTotal,intGridLine As %Integer
	new arrLines,idLine,objLine,intSol,strStatus,intTotal,idRx,intGridLine
	
	set:pblnSavedData=$$$YES pblnNoUpdate=$$$YES
	; FIXME handle status
	do:'pblnSavedData GetGridContents^COMGridEdit31G(.arrLines,"MEDPrescriptionSolLine")
	set idRx=$piece(YKEY,",",1)
	set:pidRx idRx=pidRx ; HEVA-753
	set intTotal=0
	set idLine=""
	set intSol=$$Solution^MEDPrescriptionSolLine()
	for {
		if pblnSavedData=$$$YES {
			set idLine=$order(^MEDPrescriptionLine(YM,idRx,idLine))
			quit:idLine=""
			set objLine=$get(^MEDPrescriptionLine(YM,idRx,idLine,1))
			set intGridLine=0
		} else {
			set idLine=$order(arrLines(idRx,idLine))
			quit:idLine=""
			set objLine=$get(arrLines(idRx,idLine))
			set intGridLine=$$GetLineId^COMGridEdit31G(idLine,"MEDPrescriptionSolLine")
		}
		if $$$MEDPrescriptionLineSolution(objLine)'=intSol continue
		set intTotal=intTotal + $$Volume(intGridLine,objLine,pblnNoUpdate) 

	}
	quit intTotal
	

]]></Routine>
</Export>