<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARRotinasFormatar" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARRotinasFormatar

    #include COMSYS
    #include VARConst

	;---------------------------------------------------------------------------------------------------------------------
	; Arquivo contendo rotinas para formatação de dados para usar durante importação de arquivos
	;
	; Observações sobre as rotinas de formatação:
	;	- Devem conter somente um parâmetro de entrada.
	;	- Devem sempre retornar algum valor, sendo:
	;		- Em caso de Sucesso: o valor formatado.
	; 		- Em caso de Falha  : retorna o texto "Erro;mensagem" onde mensagem é diferente para cada rotina de formatação.
	;
	;---------------------------------------------------------------------------------------------------------------------
	
	quit


GeraContadorLinhaCC(pidImportar,pDadosDestino,pLinha)

	quit:(pidImportar   = "") ""
	quit:(pDadosDestino = "") ""
	quit:(pLinha        = "") ""
	
	new objImportarArquivo,idConfig,objConfig,ClasseDestino,QtdeChavesPrimarias,
	Chave,Sep,ContChave,idChavePrimaria,proxCodigo
	
	set objImportarArquivo = $G(^VARImportarArquivo(YM,pidImportar,1))
	set idConfig           = $$$VARImportarArquivoCodConfiguracao(objImportarArquivo) 
	
	set objConfig = $G(^VARImportarConfig(YM,idConfig,1))
	
	set ClasseDestino       = $$$VARImportarConfigClasseDestino(objConfig)
	set QtdeChavesPrimarias = $$GetQtdeChavesPrimarias^VARImportarConfigCampos(ClasseDestino)

	set Chave = ""
	set Sep   = ""
	set ContChave = 0
	;Monta a chave primária de acordo com a classe de destino
	set idChavePrimaria = ""
	for {
		set idChavePrimaria=$order(^WWW002(YM,ClasseDestino,idChavePrimaria))
		quit:idChavePrimaria=""
		set Chave = Chave_Sep_$piece(pDadosDestino,Y,idChavePrimaria)
		set Sep       = ","
		set ContChave = ContChave + 1
		if (ContChave = (QtdeChavesPrimarias - 1)) {
			quit	;sai do for pois é a última chave, teoricamente a que precisa do contador
		}
	}

	;Verifica se já existe um registro com a mesma chave primária
	if $D(^VARTempImportarArquivoContPK(YM,pidImportar,Chave)){
		;Se já existe o registro pega o próximo número e já incrementa o contador
		set proxCodigo  = $increment(^VARTempImportarArquivoContPK(YM,pidImportar,Chave), 1)
	}	
	else{
		;Senão, inicia o contador com 1
		set proxCodigo = 1
		set ^VARTempImportarArquivoContPK(YM,pidImportar,Chave) = proxCodigo
	
	}
		
	quit proxCodigo
]]></Routine>
</Export>