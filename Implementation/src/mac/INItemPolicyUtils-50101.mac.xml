<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INItemPolicyUtils" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INItemPolicyUtils	
	
#include INConst
#include %occInclude
#include COMSYS
#include COMConst
	
GetAttributes(pidItem,&pblnLotNo,&pblnUseByDate,&pblnLotUnique,&pintBrand,&pintOwner,&pintProgram,pidLoc="")
	;-------------------------------------------------------------------------------
	; For a given item, get the Item attribute requirements based on the Item Policy
	;
	; History:
	; 08-Sep-2013	SCR		CORE-266: Non Lot controlled Locations
	; 18-Jan-2010	shobby	SR15753: Default to 'No' if not defined. (Brand/Owner/Program)
	; 09-Jul-2009	PPP		SR16721: Optional policy definitions (can be 1-Yes, 2-No, 3-Optional)
	; 25-Jun-2009	GRF		SR16510: Could have item without policies in which case
	; 							switches would not be altered - always set defaults;
	; 							use boolean macros
	; 17-Jun-2009	PPP		SR16510: Created
	;-------------------------------------------------------------------------------
	new idPolicy,objItem,objPolicy
	new objLoc


	if $get(YM)="" set YM = 0
	
	set pblnUseByDate = $$$NO
	set pblnLotNo     = $$$NO
	set pblnLotUnique = $$$NO
	set pintBrand     = $$$NO    ; FIXME : boolean variable replaced with tri-state $$$NO is no longer valid <GRF>
	set pintOwner     = $$$NO
	set pintProgram   = $$$NO
	
	if $get(pidItem)'="" {
		set objItem  = $get(^INART(0,pidItem,1))
		set idPolicy = $$$INARTItemPolicy(objItem)
	
		if idPolicy'="" {
			set objPolicy     = $get(^INItemPolicy(0,idPolicy,1))
			set pblnUseByDate = +$$$INItemPolicyExpiryDate(objPolicy)
			set pblnLotNo     = +$$$INItemPolicyLotNumber(objPolicy)
			set pblnLotUnique = +$$$INItemPolicyIsLotUnique(objPolicy)
			set pintBrand     = +$$$INItemPolicyBrand(objPolicy)     ; (can be 1-Yes, 2-No, 3-Optional) vvv
			if 'pintBrand set pintBrand = 2
			set pintOwner     = +$$$INItemPolicyOwner(objPolicy)
			if 'pintOwner set pintOwner = 2
			set pintProgram   = +$$$INItemPolicyProgram1(objPolicy)
			if 'pintProgram set pintProgram = 2
		}	
	}
	if pidLoc'="" {
		set objLoc=$get(^WWW0121(0,YM,pidLoc,1))
		if $$$WWW0121OnlyTrackPrograms(objLoc) {
			set pblnUseByDate = $$$NO
			set pblnLotNo     = $$$NO
			set pblnLotUnique = $$$NO
			set pintBrand     = $$$NO   
			set pintOwner     = $$$NO
		}
	}
	quit
	
	
CheckItemAttributes(pidItem,pfltQty=0,pstrLotNumber="",pdteExpiry="",pstrBrand="",pstrOwner="",pstrProgram="",&parrError,pidLoc="")
	;-------------------------------------------------------------------------------
	; For a given item check if the attributes are valid 
	;	- requirements based on the Item Policy
	;
	; Returns: Boolean
	;	
	; By Ref: array of errors - parrError
	;
	; History:							
	; 10-Sep-2013	SCR		CORE-266: Pass in Location for Lot / no Lot Control
	; 09-Jul-2009	PPP		SR16721: Optional policy definitions
	; 							(can be 1-Yes, 2-No, 3-Optional)
	; 17-Jun-2009	PPP		SR16510: Created
	;-------------------------------------------------------------------------------
	new blnLotNo,blnLotUnique,blnUseByDate,idPolicy,intBrand,intOwner,intProgram
	new objItem,objPolicy,sc
	
	kill parrError

	set sc = $$$OK

	do GetAttributes(pidItem,.blnLotNo,.blnUseByDate,.blnLotUnique,.intBrand,.intOwner,.intProgram,pidLoc)
	
	if blnLotNo       && (pstrLotNumber="") set parrError("IN01061") = ""  ; "Line (%1) Lot Number not entered"
	if blnUseByDate   && (pdteExpiry="")    set parrError("IN01062") = ""  ; "Line (%1) Expiry Date not entered"
	if (intBrand=1)   && (pstrBrand="")     set parrError("IN01063") = ""  ; "Line (%1) Brand not entered"
	if (intOwner=1)   && (pstrOwner="")     set parrError("IN01064") = ""  ; "Line (%1) Owner not entered"
	if (intProgram=1) && (pstrProgram="")   set parrError("IN01065") = ""  ; "Line (%1) Program not entered"
	
	if blnLotUnique && (pfltQty>0) {
		if '##class(alSOH.iUItemPolicy).IsLotUnique(pidItem,pstrLotNumber,pdteExpiry) {
			set parrError("IN00880") = ""                                  ; "Lot Number must be unique"
		}
	}
	quit $select($data(parrError):$$$NO,1:$$$YES)
	
	
HasPolicyAttributes(pblnLotNo=0, pblnUseByDate=0, pblnLotUnique=0, pintBrand=0, pintOwner=0, pintProgram=0)
	;-------------------------------------------------------------------------------
	; Based on the Policy Attributes return if item has policies or not 
	;	- requirements based on the Item Policy
	;
	; Returns: Boolean
	;	
	; By Ref: array of errors - parrError
	;
	; History:							
	; 18-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new blnAttrib
	
	set blnAttrib = $$$NO
	
	if pblnLotNo || pblnUseByDate || (pintBrand'=2) || (pintOwner'=2) || (pintProgram'=2) {
		set blnAttrib = $$$YES
	}
	quit blnAttrib


ValidateItemAttributes(pidKey,pidItem,pfltQty,pstrLotNumber="",pdteExpiration="",pstrBrand="",pstrOwner="",pstrProgram="",pidLoc="")
	;-------------------------------------------------------------------------------
	; Validate the Attributes for an Item based on the Item Policy
	;
	; History:
	; 10-Sep-2013	SCR		CORE-266: Pass in Location for Lot / no Lot Control
	; 29-Apr-2010	PP		SR<>: 
	;-------------------------------------------------------------------------------
	new arrErr,blnOK,strStatus
	
	set strStatus = $$$OK	
	
	set blnOK = $$CheckItemAttributes(pidItem,pfltQty,pstrLotNumber,pdteExpiration,pstrBrand,pstrOwner,pstrProgram,.arrErr,pidLoc)
	
	if '$$$ISOK(blnOK) {
		set strStatus = $$$MakeStatus($order(arrErr("")),pidKey)
	}
	
	quit strStatus
	

]]></Routine>
</Export>