<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINARInvPrePost" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINARInvPrePost
 
	#include FINConst
	#include COMSYS		
	
	#define Currency(%obj,%type) "<span style='width:100%;text-align:right;font-size:18;color:Black'>"_$$FormatCurrency^COMTable(%obj)_" "_%type_"</span>"
	#define CurrencyLarge(%obj,%type) "<span style='width:100%;text-align:right;font-size:22;color:Black'>"_$$FormatCurrency^COMTable(%obj)_" "_%type_"</span>"
	#define Title(%1) "<span style='width:100%;text-align:right;font-size:20;color:Black'>"_$$$Text(%1)_"</span>"
	#define InvoiceLine	"INVLINE"
	#define Reverse(%list) $listbuild($listget(%list,2),$listget(%list,1))
	#define ReverseCheck if blnCredit { set curTotal=-curTotal } if (curTotal<=0) set lstRow = $$$Reverse(lstRow)
	#define Pad(%str) $translate($justify(%str,3)," ",0) 
 
ShowPrePostInfo(pidInvoice)
    ;-------------------------------------------------------------------------------
    ; Code to Redirect to the PrePost data for a customer invoice
    ;
    ; Returns:
    ;
    ; History:
    ; 11-May-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	if '$$$NoKey(pidInvoice) {
		do ClearPrePostData(pidInvoice)
		do StorePrePostData(pidInvoice)
		do GoToForm^COMUtilForm("FINARInvPrePost",pidInvoice)
	} else {
		do ReturnError^COMUtilError("Fin00089") ;No Record Selected	
	}
	
	quit
	
ClearPrePostData(pidInvoice)
    ;-------------------------------------------------------------------------------
    ; Clear any old pre post data.
    ;
    ; Returns:
    ;
    ; History:
    ; 23-Oct-2006	JW			SR15134: Look at kill status. Return status.
    ; 02-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
	new idInvoice,strType,idLine,strKey,strStatus
	
	set strStatus = $$$OK
	
	set idInvoice=$get(pidInvoice)
	
	if idInvoice'="" {
		set strType=""
		for {
			set strType=$order(^FINARInvPrePost(YM,idInvoice,strType))
			quit:strType=""
			
			set idLine=""
			for {
				set idLine=$order(^FINARInvPrePost(YM,idInvoice,strType,idLine))
				quit:idLine=""
				
				set strKey=idInvoice_$$$COMMA_strType_$$$COMMA_idLine
				set strStatus = $$$Kill("FINARInvPrePost",strKey)
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}	
	}
 	
	quit strStatus
	
StorePrePostData(pidInvoice)
    ;-------------------------------------------------------------------------------
    ; Store all the prepost data for this invoice
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Oct-2005	Steve S		SR13738: Stored padded with leading zeros
    ; 02-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
	new idInvoice,objInvoice,idLine,idInvLine,objInvoiceLine,fltLineAmount,idTax,objTax
	new strTaxType,idAccount,fltTax,taxLines,strTaxText
 
	set idInvoice=$get(pidInvoice)
 
	if idInvoice'="" {
		set objInvoice=$get(^FINARInv(YM,idInvoice,1))
 
		set idInvLine=""
		for {
			set idInvLine=$order(^FINARInvLine(YM,idInvoice,idInvLine))
			quit:idInvLine=""
 
			set objInvoiceLine=$get(^FINARInvLine(YM,idInvoice,idInvLine,1))
			set fltLineAmount=$$$FINARInvLineAmountTaxEx(objInvoiceLine)
			
			do StoreNode(idInvoice_$$$COMMA_$$$InvoiceLine_$$$COMMA_$$$Pad(idInvLine), ;SR13738: Use $$$Pad
						$$$FINARInvLineDescription(objInvoiceLine)_$$$CRLF_$$$Text($lb("Fin00789",idInvLine)),
						fltLineAmount,$$$FINARInvLineGLAccount(objInvoiceLine))
			
		}
		
		if $$$FINARInvTaxInvoice(objInvoice) {
			do ComputeTaxLines(idInvoice,.taxLines)
			
			set idLine=""
			for {
				set idLine=$order(taxLines(idLine))
				quit:idLine=""
					
				set idTax=""
				for {
					set idTax=$order(taxLines(idLine,idTax))
					quit:idTax=""
						
					set objTax	   =$get(taxLines(idLine,idTax))
					set strTaxType = $piece(objTax,Y,1)
					set idAccount  = $piece(objTax,Y,3)
					set fltTax	   = $piece(objTax,Y,4)
					
					set strTaxText=strTaxType
					if strTaxText="" set strTaxText=$$$Text("Fin00793")  ;No tax type specified
					set strTaxText=strTaxText_$$$CRLF_$$$Text($lb("Fin00790",idLine))  ;Taxes for invoice line %1
 
					do StoreNode(idInvoice_$$$COMMA_$$$Pad(idLine)_$$$COMMA_$$$Pad(idTax),
								strTaxText,fltTax,idAccount)	
				}
			}
		}
	}
 
 
	quit	
	
OnAfterDataFields(YKEY)
    ;-------------------------------------------------------------------------------
    ; Routine to execute after data fields
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 11-May-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
	do:('$$$NoKey(YKEY)) ShowTree(YKEY)
	quit
 
	
ShowTree(pYKEY)
    ;-------------------------------------------------------------------------------
    ; Shows the prepost tree
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 14-Nov-2006	Steve S		SR14766: Debit/Credit columns
    ; 06-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
	new idInvoice,objInvoice,idCustomer,idControlAccount,objControlAccount,idInvLine
	new strInvLineKey,objLine,idGLAccount,objGLAccount,idTaxLine,objTaxLine,idAccount
	new strExpandString,blnCredit,lstRow,curTotal
 
	set idInvoice=$piece(pYKEY,$$$COMMA,1)
 
	set strExpandString=""
	if $data(^CacheTempExpandTree(YUSER)) set strExpandString=$$$YES
	if $data(^CacheTempCollapseTree(YUSER)) set strExpandString=$$$NO
	
	if '$$$NoKey(idInvoice) {
		set objInvoice=$get(^FINARInv(YM,idInvoice,1))
		set idCustomer=$$$FINARInvCustomer(objInvoice)
		set blnCredit = +$$$FINARInvCredit(objInvoice) //SR14766
		set idControlAccount=$$GetCustomerControlAccount^FINARCustomer(idCustomer)
		set objControlAccount=$get(^FINGLAccount(YM,idControlAccount,1))
 
		do StartTree^COMTree(YPARA)
		
		//SR14766: vvvvvvvvvvvvvvvvvvvvvvvvvvvv
		do AddNode^COMTree("",
						   "PrePostTree",
						   "",
						   $$$Text("Fin01087"), ;Pre Post Tree
						   "",
						   "",
						   "",
						   "",
						   $listbuild($$$Title("Fin00791"),$$$Title("Fin01086")), ;Debit ;Credit
						   "",
						   1)
		//SR14766: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
		
		//SR14766
		set curTotal = $$GetTotal^FINARInv(idInvoice)
		set lstRow = $listbuild($$$CurrencyLarge($zabs(curTotal),""),"")
		$$$ReverseCheck
		
		do AddNode^COMTree("PrePostTree",
							idInvoice,
							$$$FINGLAccountDescription(objControlAccount),
							$$$StrFINARCustomerControlAccount_$$$SPACE_idControlAccount,
							"",
							"FINARInvPrePost",
							"",
							"",
							lstRow,
							$$$YES,
							"",
							"",
							strExpandString)				
		
		set idInvLine=""
		
		for {
			set idInvLine=$order(^FINARInvPrePost(YM,idInvoice,$$$InvoiceLine,idInvLine))
			quit:idInvLine=""
			
			set strInvLineKey=idInvoice_$$$COMMA_idInvLine
			set objLine=$get(^FINARInvPrePost(YM,idInvoice,$$$InvoiceLine,idInvLine,1))
			
			//SR14766
			set curTotal = $$GetInvoiceLineTotal(idInvoice,+idInvLine)
			set lstRow = $listbuild("",$$$Currency($zabs(curTotal),""))
			$$$ReverseCheck
			
			do AddNode^COMTree(idInvoice,
							strInvLineKey,
							"",
							$$$StrFINARInvLineLineNumber_$$$SPACE_(+idInvLine),
							"",
							"FINARInvPrePost",
							"",
							"",
							lstRow,
							$$$YES,
							"",
							"",
							strExpandString)
			
			set idGLAccount=$$$FINARInvPrePostGLAccount(objLine)
			set objGLAccount=$get(^FINGLAccount(YM,idGLAccount,1))
			
			//SR14766
			set curTotal = $$$FINARInvPrePostAmount(objLine)
			set lstRow = $listbuild("",$$FormatCurrency^COMTable($zabs(curTotal)),"")
			$$$ReverseCheck
			
			do AddNode^COMTree(strInvLineKey,
							strInvLineKey_$$$COMMA_$$$InvoiceLine,
							$$$FINGLAccountDescription(objGLAccount),
							$$$StrFINARInvLineGLAccount_" "_idGLAccount,
							$select(pYKEY=(idInvoice_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine):"oopen.gif",1:"oclose.gif"),
							"FINARInvPrePost",
							"",
							pYKEY=(idInvoice_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine),
							lstRow,
							"",
							"",
							idInvoice_$$$COMMA_$$$InvoiceLine_$$$COMMA_idInvLine,
							strExpandString)
 
			if $$$FINARInvLinesIncludeTax(objInvoice)&&(+$$$FINARInvLineTax($get(^FINARInvLine(YM,idInvoice,+idInvLine,1)))'=0) {
				do AddNode^COMTree(strInvLineKey,
									strInvLineKey_$$$COMMA_"Tax",
									"",
									$$$Text("Fin00763"),  ;Tax Component
									"",
									"FINARInvPrePost",
									"",
									"",
									"",
									$$$YES,
									"",
									"",
									strExpandString)
									
				set idTaxLine=""
				for {
					set idTaxLine=$order(^FINARInvPrePost(YM,idInvoice,idInvLine,idTaxLine))
					quit:idTaxLine=""
					
					set objTaxLine=$get(^FINARInvPrePost(YM,idInvoice,idInvLine,idTaxLine,1))
					set idAccount=$$$FINARInvPrePostGLAccount(objTaxLine)
					set objGLAccount=$get(^FINGLAccount(YM,idAccount,1))
					
					//SR14766
					set curTotal = $$$FINARInvPrePostAmount(objTaxLine)
					set lstRow = $listbuild("",$$FormatCurrency^COMTable($zabs(curTotal)),"")
					$$$ReverseCheck
					
					do AddNode^COMTree(strInvLineKey_$$$COMMA_"Tax",
										strInvLineKey_$$$COMMA_"Tax"_idTaxLine,
										$$$FINGLAccountDescription(objGLAccount),
										$$$StrFINARInvLineGLAccount_$$$SPACE_idAccount,
										$select(pYKEY=(idInvoice_$$$COMMA_idInvLine_$$$COMMA_idTaxLine):"oopen.gif",1:"oclose.gif"),
										"FINARInvPrePost",
										"",
										pYKEY=(idInvoice_$$$COMMA_idInvLine_$$$COMMA_idTaxLine),
										lstRow,
										"",
										"",
										idInvoice_$$$COMMA_idInvLine_$$$COMMA_idTaxLine,
										strExpandString)
				}
			}
		}
		
		if ('$$$FINARInvLinesIncludeTax(objInvoice))&&($$$FINARInvTaxInvoice(objInvoice)) {
			
			//SR14766
			set curTotal = $$$FINARInvTax(objInvoice)
			set lstRow = $listbuild("",$$$Currency($zabs(curTotal),""))
			$$$ReverseCheck
			
			do AddNode^COMTree(idInvoice,
								idInvoice_$$$COMMA_"Tax",
								"",
								$$$Text("Fin00763"),  ;Tax Component
								"",
								"FINARInvPrePost",
								"",
								"",
								lstRow,
								"",
								"",
								"",
								strExpandString)
			
			
			set idInvLine=""
			for {
				set idInvLine=$order(^FINARInvPrePost(YM,idInvoice,idInvLine))
				quit:idInvLine=""
				continue:(idInvLine=$$$InvoiceLine)
				
				set idTaxLine=""
				for {
					set idTaxLine=$order(^FINARInvPrePost(YM,idInvoice,idInvLine,idTaxLine))
					quit:idTaxLine=""
						
					set objTaxLine=$get(^FINARInvPrePost(YM,idInvoice,idInvLine,idTaxLine,1))
					set idAccount=$$$FINARInvPrePostGLAccount(objTaxLine)
					set objGLAccount=""
					
					if idAccount'="" set objGLAccount=$get(^FINGLAccount(YM,idAccount,1)) 
					
					//SR14766
					set curTotal = $$$FINARInvPrePostAmount(objTaxLine)
					set lstRow = $listbuild("",$$FormatCurrency^COMTable($zabs(curTotal),""))
					$$$ReverseCheck
					
					do AddNode^COMTree(idInvoice_$$$COMMA_"Tax",
										idInvoice_$$$COMMA_"Tax"_$$$COMMA_idInvLine_$$$COMMA_idTaxLine,
										$$$FINGLAccountDescription(objGLAccount),
										$$$StrFINARInvLineGLAccount_$$$SPACE_idAccount,
										$select(pYKEY=(idInvoice_$$$COMMA_idInvLine_$$$COMMA_idTaxLine):"oopen.gif",1:"oclose.gif"),
										"FINARInvPrePost",
										"",
										pYKEY=(idInvoice_$$$COMMA_idInvLine_$$$COMMA_idTaxLine),
										lstRow,
										"",
										"",
										idInvoice_$$$COMMA_idInvLine_$$$COMMA_idTaxLine,
										strExpandString)
					}
				}
			}
		
		do StopTree^COMTree(1)
	
	}
 
	kill ^CacheTempExpandTree(YUSER)
	kill ^CacheTempCollapseTree(YUSER)
 
	quit
	
 
ComputeTaxLines(pidInvoice,pTaxLines)
    ;-------------------------------------------------------------------------------
    ; Compute all the tax lines in the current invoice.
    ;
    ; Returns:ptaxLines (by ref)
    ;
    ; History:
    ; 26-Oct-2005	JW			SR13743: COMTAX now has pblnTaxInc param.
    ; 26-May-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
	new objInvoice,idTaxLocation,dteTransDate,strStatus,idLine,objInvoiceLine,taxCode,curAmount,blnInclTax
	
	set strStatus=$$$OK
	
	if $get(pidInvoice)'="" {
		set objInvoice=$get(^FINARInv(YM,pidInvoice,1))
		
		set idTaxLocation=$$$FINARInvTaxLocation(objInvoice)
		set dteTransDate=$$$FINARInvTransactionDate(objInvoice)
		
		set blnInclTax = $$$FINARInvLinesIncludeTax(objInvoice)
		
		set idLine=""
		for {
			set idLine=$order(^FINARInvLine(YM,pidInvoice,idLine))
			quit:idLine=""
 
			set objInvoiceLine=$get(^FINARInvLine(YM,pidInvoice,idLine,1))
			set taxCode = $$IsTaxable^COMTAX($$$FINARInvLineTaxCode(objInvoiceLine),$$$FINARInvTaxInvoice(objInvoice),,$$$FINARInvTaxLocation(objInvoice))
				
			if taxCode'=0 {
				;set pTaxLines(idLine) = taxCode_Y_$$$FINARInvLineAmountTaxEx(objInvoiceLine)		//SR13743
				
				set curAmount = $select(blnInclTax:$$$FINARInvLineAmount(objInvoiceLine),
												 1:$$$FINARInvLineAmountTaxEx(objInvoiceLine))
				set pTaxLines(idLine) = taxCode_Y_curAmount
			}
		}
		
		do CalculateTaxes^COMTAX(idTaxLocation,$$$FINARInvTransactionDate(objInvoice),.pTaxLines,,$$$FINARInvTax(objInvoice),blnInclTax)	//SR13743
	}
		
	quit
	
	
GetInvoiceLineTotal(pidInvoice,pidLine)
    ;-------------------------------------------------------------------------------
    ; Get an invoice line's total amount (inc tax)
    ;
    ; Returns:
    ;
    ; History:
    ; 06-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	new fltLineTotal,objLine,objInvoice
 
	set fltLineTotal=0
 
	if ($get(pidInvoice)'="")&&($get(pidLine)'="") {
		set objInvoice=$get(^FINARInv(YM,pidInvoice,1))
		set objLine=$get(^FINARInvLine(YM,pidInvoice,pidLine,1))
		
		if $$$FINARInvLinesIncludeTax(objInvoice) {
			set fltLineTotal=$$$FINARInvLineAmount(objLine)
		} else {
			set fltLineTotal=$$$FINARInvLineAmountTaxEx(objLine)
		}
	}
	
	quit fltLineTotal
	
	
StoreNode(pidNode,pstrDesc,pfltAmount,pidAccount) private
    ;-------------------------------------------------------------------------------
    ; Store a prepost node.
    ;
    ; Returns:
    ;
    ; History:
    ; 02-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	new objPrePost
	
	set objPrePost=""
	
	set $$$FINARInvPrePostDescription(objPrePost) =pstrDesc
	set $$$FINARInvPrePostAmount(objPrePost)	  =pfltAmount
	set $$$FINARInvPrePostGLAccount(objPrePost)   =pidAccount
	
	do Save^COMUtils("FINARInvPrePost",pidNode,objPrePost,1)
 
	quit
	
	
GetStatus(pidInvoice)
    ;-------------------------------------------------------------------------------
    ; Show status of an invoice
    ;
    ; Returns: string
    ;
    ; History:
    ; 04-Jul-2005	Steve S		Use strMessage, not strStatus
    ; 07-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	new strMessage,objInvoice,strPostStatus
 
	set strMessage=""
 
	if $get(pidInvoice)'="" {
		set objInvoice=$get(^FINARInv(YM,pidInvoice,1))
		set strPostStatus=$$$FINARInvStatus(objInvoice)
		set strMessage=$$$Text($lb("Fin00794",pidInvoice,$$$AppEnum("FINSYSSTATUS",strPostStatus)))  ;Invoice ´%1´ has status ´%2´
	} else {
		set strMessage=$$$Text($lb("Fin00565",pidInvoice))  ;No invoice data - Invoice Number ´%1´.	
	}
 
	quit strMessage
	
	
ExpandAll()
    ;-------------------------------------------------------------------------------
    ; Expand the entire tree
    ;
    ; Returns:
    ;
    ; History:
    ; 06-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	set ^CacheTempExpandTree(YUSER)=$$$YES
	do ReloadForm^COMUtilForm()
 
	quit
	
	
CollapseAll()
    ;-------------------------------------------------------------------------------
    ; Collapse the entire tree
    ;
    ; Returns:
    ;
    ; History:
    ; 06-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	set ^CacheTempCollapseTree(YUSER)=$$$YES
	do ReloadForm^COMUtilForm()
 
	quit
	
	/* SR14766: Disabled
ShowCredit(pidInvoice)
    ;-------------------------------------------------------------------------------
    ; Show 'credit' text, if a credit invoice.
    ;
    ; Returns:
    ;
    ; History:
    ; 07-Jun-2005	Steve S		Created SR:12340
    ;-------------------------------------------------------------------------------
 
	new strCredit,objInvoice
 
	set strCredit=""
	
	if $get(pidInvoice)'="" {
		set objInvoice=$get(^FINARInv(YM,pidInvoice,1))
		if $$$FINARInvCredit(objInvoice) {
			set strCredit=$$$Text("Fin00792")  ;Is a credit invoice	
		}	
	}
 
	quit strCredit
	*/
]]></Routine>
</Export>