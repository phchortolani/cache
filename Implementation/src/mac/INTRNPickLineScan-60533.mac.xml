<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INTRNPickLineScan" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INTRNPickLineScan
	
#include COMGridEdit31
#include INConst
#include %occInclude
#include COMSYS
	
AddScanLine(pidScan)
    ;-------------------------------------------------------------------------------
    ; Routine to Add a new line to a Grid after a Scan is validated
    ;
    ; Assumptions :
    ;  YFORM	-	 Form Name
    ; 
    ; Returns:
    ; 	Status
    ;
    ; History:
    ; 17-Nov-2009	PPP		SR16762: New parameter to GetBundleForAttData, Transfer ID
    ; 20-Jul-2009	PPP		SR16773: ScanDelimiter is a function now
    ; 23-Jun-2009	PPP		SR16510: Updated for User defined policies
    ; 25-May-2009	PPP		SR16565: Scanning Prompt for Grid
    ;-------------------------------------------------------------------------------
	new arrAttributes,arrBundle,arrFields,blnItemExists,dteUBD,idBundle,idClass
	new idData,idFromLocn,idItem,idLine,idLot,idOriginalLine,idStorage,idTrn
	new objData,objLine,objOldData,sc,strDelim,strKey,strStatus
 	
 	set strDelim  = $$$ScanDelim
	set strStatus = $$$OK
	set idItem    = ""	
	
	if $get(YFORM)'="" {
		set idClass       = $$$GetClass(YFORM)
		set objLine       = ""
		set idItem        = $piece(pidScan,strDelim,1)					//SR16773
		set idLot         = $piece(pidScan,strDelim,2)					//SR16773
 		set blnItemExists = $$$NO
 	 	set idFromLocn    = $$$INTFRSendingLocation($$$GRIDYFELDContainer)
 		set idTrn         = $$$KEY1($$$GRIDYKEYContainer)
 
 		// For Picking Screens Only
 		// arrBundle(Bundle ID ,Storage ID) = Qty
 		//set sc = $$GetBundleData^WWW120Scan(idItem, idFromLocn, idLot, .arrBundle, .idBundle, .idStorage)
 		//SR16762
		if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
	  		set sc = $$GetBundleData^WWW120Scan(idItem, idFromLocn, idLot, .arrBundle, .idBundle, .idStorage,idTrn)
		}
		else {
	  		set sc = $$GetBundleForAttData^WWW120Scan(idItem, idFromLocn, pidScan, .arrBundle, .idBundle, .idStorage, idTrn)	//SR16510
		}
 
 		if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
 			if $$$ISERR(sc) set strStatus = $$ISStatusToDLStatus^COMUtilError(sc,$$$NO) if $find(strStatus,"ERRO #5001") set strStatus = $$$MakeStatus("alS00001",idLot) quit strStatus			//EARLY EXIT
 		}
 		else {
	 		if $$$ISERR(sc) set strStatus = $$ISStatusToDLStatus^COMUtilError(sc) quit strStatus			//EARLY EXIT
 		}
 		
		//Process only if Bundle Exist for the Item/Lot combination and has Qty
		if $get(idBundle)'="" {
 
			//Get the data for the Item if it already exists
			//Need to update arrBundle if lines already exist
			//blnItemExists = $$YES if item already exists in the current Grid. (cannot add new items)
			//set idLine = $$GetExistingItemRowData(idItem, idBundle, idStorage, .arrBundle, .blnItemExists)
			
 			set idLine = $$GetRowLineWithQtyChecks^COMGridEdit31Scan(idItem, 
								$$$FldINTFRPickLineItem, 
								$$$FldINTFRPickLineBundle, 
								$$$FldINTFRPickLineSendingStockLocation, 
								$$$FldINTFRPickLinePickedQuantity, 
								.idBundle,
								.idStorage,
								.arrBundle,
								.blnItemExists)
 
			if idLine {
				set (objLine,objOldData) = $$$GRIDGetYFELD(idLine)
 
				set $$$INTFRPickLinePickedQuantity(objLine)      = $$$INTFRPickLinePickedQuantity(objLine) + 1
				set $$$INTFRPickLinePriorPickedQuantity(objLine) = $$$INTFRPickLinePriorPickedQuantity(objLine) + 1
				
				kill arrFields
				//set the array for the fields that are updated
				set arrFields($$$FldINTFRPickLinePickedQuantity)      = $$$INTFRPickLinePickedQuantity(objLine)       //UPDATE
				set arrFields($$$FldINTFRPickLinePriorPickedQuantity) = $$$INTFRPickLinePriorPickedQuantity(objLine)  //UPDATE
				
				//Updates the Row and Displayes it (for existing lines)
				//If the row is on another page displays the lines at the top of the grid
				do UpdateRow^COMGridEdit31Scan(YFORM, idLine, .arrFields, objOldData)
	 		
	 		// Only Add new lines in this FORM for existing Items
			} else {
				
				if blnItemExists = $$$YES {
					set idOriginalLine = $$GetTrnLine(idTrn,idItem)

					if idOriginalLine'="" {
						kill arrAttributes
						// This is specific to INIssue, INTFR , Copy the original Data and Update Relevant details
						// Cannot create new data records only copies, has important info DEMAND NO, REFERENCE etc.
						set strStatus = $$DuplicateOnly^COMGridEdit31Scan(idTrn_$$$COMMA_idOriginalLine,.objLine,.strKey)

						set $$$INTFRPickLineItem(objLine)                 = idItem
						set $$$INTFRPickLineSendingStockLocation(objLine) = idStorage
						set $$$INTFRPickLinePriorSendingBin(objLine)      = idStorage	
						set $$$INTFRPickLineQuantity(objLine)             = 1
						set $$$INTFRPickLinePickedQuantity(objLine)       = 1
						set $$$INTFRPickLinePriorPickedQuantity(objLine)  = 1
						set $$$INTFRPickLineBundle(objLine)               = idBundle

						set sc = ##class(alSOH.iBundle).GetAttributesForBundle(idBundle,.arrAttributes)
						if $get(arrAttributes("Lot Number"))'="" {
							set $$$INTFRPickLineBatch(objLine)     = $get(arrAttributes("Lot Number"))
							set $$$INTFRPickLineLotNumber(objLine) = $get(arrAttributes("Lot Number"))
						}
						if $get(arrAttributes("Use By Date"))'="" {
							set $$$INTFRPickLineUsebyDate(objLine) = $get(arrAttributes("Use By Date"))
						}

						do AddLine^COMGridEdit31Add(objLine,strKey,,$$$YES,"",$$$YES,$$$NO,$$$NO)
						do UpdateContainer^COMGridEdit31G()
					}

				} else {
					set strStatus = $$$MakeStatus("IN01039")
				}   ; Cannot Add Lines to Current Record
			}		
			
		} else {
			set strStatus = $$$MakeStatus("IN01040",idItem,idFromLocn)
		}   ; "Stock Unavailable for Item %1 at Location %2"
	
	}
	
	if $$$ISERR(sc) {
		set strStatus = $$ISStatusToDLStatus^COMUtilError(sc)
	}
	
	quit strStatus
 
GetTrnLine(pidTrn, pidItem)
    ;-------------------------------------------------------------------------------
    ; Get the TFRLine associated with the given Item
    ; Assumptions :
    ;  YFORM	-	 Form Name
    ; 
    ; Returns:
    ; 	idLine
    ;
    ; History:
    ; 23-Jun-2009	PPP	SR16510: Created
    ;-------------------------------------------------------------------------------
	new idTrnLine,objTrnLine

	set idTrnLine = ""
	for {
		set idTrnLine = $order(^INTFRLine(YM,pidTrn,idTrnLine))
		quit:idTrnLine=""

		set objTrnLine = $get(^INTFRLine(YM,pidTrn,idTrnLine,1))
		if $$$INTFRLineItem(objTrnLine) = pidItem quit
	}

	quit idTrnLine
	
]]></Routine>
</Export>