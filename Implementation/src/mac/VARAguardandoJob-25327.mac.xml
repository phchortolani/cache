<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARAguardandoJob" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VARAguardandoJob
	#include COMConst
    #define EmAndamento 0
    #define Concluido 1
    #define Erro 2

ExecuteJob(pUsuario,pidJob)
	quit:(pidJob = "") "Job não foi informado."
	
	if ($get(^VARTempJobLock(YM,pidJob)) '= "") {
		
		new msgErro
		set msgErro = "&nbsp;Este processo já está em andamento pelo usuário "_$get(^VARTempJobLock(YM,pidJob))_" e não pode ser executado neste momento."		
		do ReturnError^COMUtilError(msgErro)
		
		quit
	}
	
	/* O log do início do job deve vir antes da chamada do job, pois o job pode não iniciar de imediato, o que poderia
	   permitir múltiplos chamadas (pelo mesmo usuário ou por usuários distintos */

	if (pidJob = "ATUALIZARREGINVENTARIO") {
		do LogInicioJob^VARAguardandoJob(pUsuario,pidJob,"Livro de Registro de Inventário","VARLivroRegInventario")
		set vMes      = VORG(1)
		set vAno 	  = VORG(2)
		job FillTableAux^VARLivroRegInventario(vMes,vAno,pUsuario,pidJob)	
	}
	
	elseif (pidJob = "GERARFECHAMENTOCONTABIL") {
		Set pFiltro = $Get(^CacheTempFechamentoContabil(YUCI, YUSER, "Filtro"))
		do LogInicioJob^VARAguardandoJob(pUsuario,pidJob,"Fechamento Contábil","VARFechamentoContabil")
		job AtualizarFechamentoContabil^VARFechamentoContabil(pUsuario,pidJob, pFiltro)
	}

	do GoToForm^COMUtilForm("VARAguardandoJob",pidJob,,pidJob)
	
	quit
	
LogInicioJob(pUsuario,pidJob,pNomeJob,pBackForm)
	quit:(pidJob = "")
	
	;Limpando lock e logs
	kill ^VARTempJobLock(YM,pidJob)
	kill ^VARTempJobStatus(YM,pidJob,pUsuario)
	
	new objJob
	
	set objJob = ""
	set $piece(objJob,Y,1) = pidJob 	;ID do Job
	set $piece(objJob,Y,2) = pNomeJob 	;Nome do Job
	set $piece(objJob,Y,3) = pBackForm	;Formulário de retorno
	set $piece(objJob,Y,4) = 0		 	;Status Job
	set $piece(objJob,Y,5) = $horolog	;Data/hora de início do job
	set $piece(objJob,Y,6) = ""			;Data/hora de conclusão do job
	set $piece(objJob,Y,7) = ""			;Mensagem de erro no processamento do job

	;Startando logs
	set ^VARTempJobLock(YM,pidJob) = pUsuario			;Log de lock do job
	set ^VARTempJobStatus(YM,pidJob,pUsuario) = objJob	;Log de execução do job

	quit
	
LogInicioEtapa(pUsuario,pidJob,pidEtapa,descEtapa)	
	quit:(pidEtapa = "")
	
	$$$JournalOff
	set ^VARTempJobStatus(YM,pidJob,pUsuario,pidEtapa) = descEtapa_Y_$horolog
	$$$JournalOn
	quit
	
LogTerminoEtapa(pUsuario,pidJob,pidEtapa)
	quit:(pidEtapa = "")
	
	$$$JournalOff
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario,pidEtapa),Y,3) = $horolog
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario,pidEtapa),Y,4) = 1 		  ;sucesso
	$$$JournalOn
	
	quit

LogErroEtapa(pUsuario,pidJob,pidEtapa,pErro)
	quit:(pidEtapa = "")
	
	$$$JournalOff
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario,pidEtapa),Y,4) = "Erro: "_pErro ;Status da etapa do job	
	;Fecha o processo e limpa o lock
	kill ^VARTempJobLock(YM,pidJob)								;Removendo o lock do job
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario),Y,4) = 2	;Status do job - 2=Erro
	$$$JournalOn
	
	quit

LogTerminoErroJob(pUsuario,pidJob,pErro)
	quit:(pidJob = "")
	
	$$$JournalOff
	set pErro = $$Replace^COMUtilStr(pErro,"<","[")
	set pErro = $$Replace^COMUtilStr(pErro,">","]")
	kill ^VARTempJobLock(YM,pidJob)							;Removendo o lock do job
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario),Y,4) = 2		;Status Job - 1=Sucesso
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario),Y,7) = pErro	;Mensagem de erro
	$$$JournalOn
	
	quit

LogTerminoSucessoJob(pUsuario,pidJob)
	quit:(pidJob = "")
	
	$$$JournalOff
	kill ^VARTempJobLock(YM,pidJob)										;Removendo o lock do job
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario),Y,4) = 1			;Status Job - 1=Sucesso
	set $piece(^VARTempJobStatus(YM,pidJob,pUsuario),Y,6) = $horolog	;Data/hora de conclusão do job
	$$$JournalOn
	
	quit

JobException

	$$$VAR
	
	do LogTerminoErroJob^VARAguardandoJob(pUsuario, pidJob, "Erro no backup: "_$zerror_".")

	quit

Voltar(pUsuario)
    ;Setanto o YFORM e o YBACK para não voltar para a tela VARAguardandoJob
	new objJob, IDJob, backForm	
    set IDJob = $get(YPARA)
    set objJob = $get(^VARTempJobStatus(YM,IDJob,pUsuario))
    set backForm = ""
    if (objJob '= "") {
		set backForm = $piece(objJob,Y,3)
    }
    if (backForm '= "") {	    	   
    	set YFORM = backForm
    	set YBACK = backForm_"," ; Adicionado para separar o nome do formulário caso vá para outra tela.
    	do GoToForm^COMUtilForm(backForm,1)
    	;Após obter o form de retorno, apaga todo o log de status do job
    	kill ^VARTempJobStatus(YM,IDJob,pUsuario)
    	kill ^VARTempJobLock(YM,IDJob)
    	set YBACK = ""
    } else {
	 	do ReloadForm^COMUtilForm()   	    
    }
    quit
    
    
AddJavascriptFunction()
    ;do AddJavascriptFunction^VARAguardandoJobWS()    
    new objJob, IDJob, NomeJob, backForm, statusJob, inicioJob, terminoJob, idLine, objLine, bkgFormat, msgErroJob
    
    set IDJob = $get(YPARA)
    
    set objJob = $get(^VARTempJobStatus(YM,IDJob,YBED))
    
    if (objJob '= "") {
		
		set IDJob      = $piece(objJob,Y,1)
		set NomeJob    = $piece(objJob,Y,2)
		set backForm   = $piece(objJob,Y,3)
		set statusJob  = $piece(objJob,Y,4)
		set inicioJob  = $piece(objJob,Y,5)
		set terminoJob = $piece(objJob,Y,6)
		set msgErroJob = $piece(objJob,Y,7)
        
        set inicioJobFormat = ""
        set:(inicioJob '= "") inicioJobFormat = $zdt(inicioJob,4)
        
        set terminoJobFormat = ""
        set:(terminoJob '= "") terminoJobFormat = $zdt(terminoJob,4)
        
        set bkgFormat = ""
        
        write "<div style='margin:10px 20px;'>"
        
        write "	<table style='font-size:13px'>"
        write "		<tr>"
        write "			<td style='padding:2px'><strong>Usuário: </strong></td>"
        write "			<td style='padding:2px'><strong>"_YBED_"</strong></td>"
        write "		</tr>"
        write "		<tr>"
        write "			<td style='padding:2px'><strong>Nome do Processo: </strong></td>"
        write "			<td style='padding:2px'><strong>"_NomeJob_"</strong></td>"
        write "		</tr>"
        write "		<tr>"
        write "			<td style='padding:2px'><strong>ID do Processo: </strong></td>"
        write "			<td style='padding:2px'>"_IDJob_"</td>"
        write "		</tr>"        
        write "		<tr>"
        write "			<td style='padding:2px'><strong>Status do Processo: </strong></td>"
        write "			<td style='padding:2px;'><strong>"_$$GetDescStatus(statusJob)_"</strong>"        
        write:((statusJob = $$$Erro) && (msgErroJob '= "")) " ("_msgErroJob_")"
        write " 			<span id='refreshCounter'> </span>"
        write "			</td>"
        write "		</tr>"
        write "		<tr>"
        write "			<td style='padding:2px'><strong>Data/hora de início: </strong></td>"
        write "			<td style='padding:2px'>"_inicioJobFormat_"</td>"
        write "		</tr>"
        write "		<tr>"
        write "			<td style='padding:2px'><strong>Data/hora de término: </strong></td>"
        write "			<td style='padding:2px'>"_terminoJobFormat_"</td>"
        write "		</tr>"        
        write "	</table>"
        
        write "<br />"
        
        if $data(^VARTempJobStatus(YM,IDJob,YBED,1)) {
        
        	write "<span style='font-size:13px;font-weight:bold'>Log de execução</span>"
			write "<br />"
        	write "	<table cellspacing='0' style='font-size:12px;border-color:999999;font-size:13px;border-width:1px;border-style=solid'>"
        
        	write " <tr>"
        	write "		<th style='background-color:#C0C0C0;padding:4px'>#</th>"
        	write "		<th style='background-color:#C0C0C0;padding:4px'>Etapa</th>"
        	write "		<th style='background-color:#C0C0C0;padding:4px'>Data/hora de início</th>"
        	write "		<th style='background-color:#C0C0C0;padding:4px'>Data/hora de término</th>"
        	write "		<th style='background-color:#C0C0C0;padding:4px'>Status</th>"
        	write " </tr>"        	        
        	
			$$$Order4(^VARTempJobStatus,YM,IDJob,YBED,idLine)
                
        		set objLine = $get(^VARTempJobStatus(YM,IDJob,YBED,idLine))
               	        
	  			if (idLine#2=0) set bkgColor = "#F0F0F0"
	  			if (idLine#2=1) set bkgColor = "#E0E0E0"
               	        
				set descEtapa 	 = $piece(objLine,Y,1)
				set dteInicioEt  = $piece(objLine,Y,2)
				set dteTerminoEt = $piece(objLine,Y,3)
				set statusEt	 = $piece(objLine,Y,4)
				
        		set dteInicioEtFormat = ""
        		set:(dteInicioEt '= "") dteInicioEtFormat = $zdt(dteInicioEt,4)
        
        		set dteTerminoEtFormat = ""
        		set:(dteTerminoEt '= "") dteTerminoEtFormat = $zdt(dteTerminoEt,4)
               	                
				write "<tr>"
				write "		<td style='padding:4px;background-color:"_bkgColor_"'>"_idLine_"</td>"
				write " 	<td style='padding:4px;background-color:"_bkgColor_";padding-right:50px;'>"_descEtapa_"</td>"
				write "		<td style='padding:4px;background-color:"_bkgColor_"' align='center'>"_dteInicioEtFormat_"</td>"
				write "		<td style='padding:4px;background-color:"_bkgColor_"'  align='center'>"_dteTerminoEtFormat_"</td>"
				write "		<td style='padding:4px;background-color:"_bkgColor_"'>"_$$GetDescStatus(statusEt)_"</td>"
				write "</tr>"

        	$$$End
        
        	write "	</table>" 
        }
              
        write "</div>"
        
        ;Faz o refresh da página
        if (statusJob = $$$EmAndamento) {        
        	do ReloadPage2(10)
        }
        
    } else {

		write "<div style='border-color:999999;font-size:13px;border-width:1px;border-style=solid;background-color:#E0E0E0;margin-top:6px;margin-bottom:5px;padding-top:2px;padding-right:12px;padding-bottom:2px;padding-left:12px'>"
		write "		Nenhuma rotina está sendo executada no momento pelo usuário "_YBED_"."
		write "</div>"

		do ReloadPage(1000)
    }
    
    // Rotina para ir para o final da página
    write !, " <script type='text/javascript'>"
    write !, " function ScrollWindow() { "
    write !, "     window.scroll(0,100000); "
    write !, " } "
    write !, "  "
    write !, "  window.attachEvent('onload',ScrollWindow); "
    write !, "  "      
    write !, " </script> " 
    write !, "  "      

    quit
    
GetDescStatus(pidStatus)

	if (pidStatus = $$$EmAndamento) {
		quit "<font color='red'>Em andamento</font>"
	
	} elseif (pidStatus = $$$Concluido) {
		quit "<font color='blue'>Concluído</font>"
	
	} elseif (pidStatus = $$$Erro) {
		quit "<font color='red'>Erro no processamento</font>"
	}
	
	quit pidStatus

ReloadPage(pInterval=2500)
    write " <script type='text/javascript'>"    
    write " function reloadPage() { "
    write "     location.reload(true); "
    write " } "	
   	write "  window.setInterval('reloadPage()',"_pInterval_");"   	
    write " </script> " 
       	
	quit
	
ReloadPage2(pInterval=10)

    write "<script type='text/javascript'>"  ,!
	
	write " var counter = "_pInterval_";"
	
	write " function contador() { ",!
	write "		document.getElementById('refreshCounter').innerHTML = '(atualizando em <strong>'+counter+'</strong> segundos)' ",!
	write "		counter = counter - 1; ",!
	write "		if (counter < 0) { " ,!
	write "			location.reload(true); ",!
	write "		} ",!	
	write "} ",!
	
	write "setInterval('contador()', 1000 ); ",!
	
	write "</script>",!]]></Routine>
</Export>