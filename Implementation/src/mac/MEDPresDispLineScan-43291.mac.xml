<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="MEDPresDispLineScan" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
MEDPresDispLineScan
	
#include COMGridEdit31
#include INConst
#include %occInclude
#def1arg WWWDATEN(%args) ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",%args)
#include WWWConst
#include COMSYS
	
AddScanLine(pidScan)
    ;-------------------------------------------------------------------------------
    ; Routine to Add a new line to a Grid after a Scan is validated
    ;
    ; Assumptions :
    ;  YFORM	-	 Form Name
    ; 
    ; Returns:
    ; 	Status
    ;
    ; History:
	; 22-Oct-2010	PPP		SR16642: Created
    ;-------------------------------------------------------------------------------
	new arrBundle,arrFields,blnItemExists,idBundle,idClass,idData,idFromLocn
 	new idIssue,idItem,idLine,idLot,idOriginalLine,idReq,idStorage,idToLocn,idType
 	new objData,objHeader,objLine,objOldData,sc,strDelim,strKey,strStatus
 	
 	set strDelim = $$$ScanDelim
 	
	set idItem = ""	
	if $get(YFORM)'="" {
		set idClass       = $$$GetClass(YFORM)
		set objLine       = ""
		set idItem        = $piece(pidScan,strDelim,1)               //SR16773
		set idLot         = $piece(pidScan,strDelim,2)               //SR16773
		set objHeader     = $$$GRIDYFELDContainer
	 	set idFromLocn    = $$$INIssueFromLocn(objHeader)
	 	set idToLocn      = $$$INIssueToLocn(objHeader)
	 	set idType        = $$$INIssueType(objHeader)
  		set blnItemExists = $$$NO
		
	 	set idReq         = $$$INIssueReference(objHeader)
		set idIssue       = $$$KEY1($$$GRIDYKEYContainer)
 
 		// For Picking Screens Only
 		// arrBundle(Bundle ID ,Storage ID) = Qty
 	//	set sc = $$GetBundleData^WWW120Scan(idItem,idFromLocn,idLot,.arrBundle,.idBundle,.idStorage)	//SR16510
 		set sc = $$GetBundleForAttData^WWW120Scan(idItem,idFromLocn,pidScan,.arrBundle,.idBundle,.idStorage)
  
 		if $$$ISERR(sc) set strStatus = $$ISStatusToDLStatus^COMUtilError(sc) quit strStatus    //EARLY EXIT
		
		//Process only if Bundle Exist for the Item/Lot combination and has Qty
		if $get(idBundle)'="" {
 
			//Get the data for the Item if it already exists
			//Need to update arrBundle if lines already exist
		//	set idLine = $$GetExistingItemRowData(idItem,.idBundle,.idStorage,.arrBundle,.blnItemExists)
			set idLine = $$GetRowLineWithQtyChecks^COMGridEdit31Scan(idItem, 
			                                                         $$$FldINIssueLineItem, 
			                                                         $$$FldINIssueLineBundle, 
			                                                         $$$FldINIssueLineFromStorage, 
			                                                         $$$FldINIssueLineQtyIssued, 
			                                                         .idBundle, 
			                                                         .idStorage, 
			                                                         .arrBundle, 
			                                                         .blnItemExists)
			
			if idLine {
				set (objLine,objOldData) = $$$GRIDGetYFELD(idLine)
			//	set $$$INIssueLineQtyRequired(objLine) = $$$INIssueLineQtyRequired(objLine) + 1
				set $$$INIssueLineQtyIssued(objLine)   = $$$INIssueLineQtyIssued(objLine) + 1
				
				kill arrFields
				//set the array for the fields that are updated
			//	set arrFields($$$FldINIssueLineQtyRequired)	= $$$INIssueLineQtyRequired(objLine)	//UPDATE
				set arrFields($$$FldINIssueLineQtyIssued)	= $$$INIssueLineQtyIssued(objLine)		//UPDATE
				
				//Updates the Row and Displayes it (for existing lines)
				//If the row is on another page displays the lines at the top of the grid
				//f x=1:1:100 h 1
				do UpdateRow^COMGridEdit31Scan(YFORM, idLine, .arrFields, objOldData)
	 
			} else {
				if $get(idBundle)'="" {
					if (blnItemExists = $$$YES) {
						set idOriginalLine = $$GetIssueLine(idIssue,idItem)
						
						if idOriginalLine'="" {
							// This is specific to INIssue , Copy the original Data and Update Relevant details
							// Cannot create new data records only copies, has important info DEMAND NO, REFERENCE etc.
							set strStatus = $$DuplicateOnly^COMGridEdit31Scan(idIssue_$$$COMMA_idOriginalLine,.objLine,.strKey)
							
							set $$$INIssueLineQtyIssued(objLine)   = 1
							set $$$INIssueLineQtyRequired(objLine) = 1
							set $$$INIssueLineFromStorage(objLine) = idStorage
							set $$$INIssueLineBundle(objLine)      = idBundle
							
							do AddLine^COMGridEdit31Add(objLine,strKey,,$$$YES,"",$$$YES,$$$NO,$$$NO)
							//do UpdateContainer^COMGridEdit31G()
						}
						
					} else {
						set strStatus = $$$MakeStatus("IN01039")
					}   ; "Cannot Add Lines to Current Record"
				}
			}		
			
		} else {
			set strStatus = $$$MakeStatus("IN01040",idItem,idFromLocn)
		}   ; "Stock Unavailable for Item %1 at Location %2"
 
	}
	
	quit $$$OK
	
	
GetIssueLine(pidIssue, pidItem)
    ;-------------------------------------------------------------------------------
    ; Get the IssueLine associated with the given Item
    ; Assumptions :
    ;  YFORM	-	 Form Name
    ; 
    ; Returns:
    ; 	idLine
    ;
    ; History:
	; 22-Oct-2010	PPP		SR16642: Created
    ;-------------------------------------------------------------------------------
	new idIssueLine,objIssueLine

	set idIssueLine = ""
	for {
		set idIssueLine = $order(^INIssueLine(YM,pidIssue,idIssueLine))
		quit:idIssueLine=""

		set objIssueLine = $get(^INIssueLine(YM,pidIssue,idIssueLine,1))
		if $$$INIssueLineItem(objIssueLine) = pidItem quit
	}

	quit idIssueLine
	
]]></Routine>
</Export>