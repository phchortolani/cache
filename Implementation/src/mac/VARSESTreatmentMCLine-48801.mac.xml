<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESTreatmentMCLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[#include WWWConst
#include INConst
#include VARSESConst 
#include VARConst 
#include VARSESTreatmentMC
#include COMConst
#include COMSYS
#include COMGridEdit31
 
VARSESTreatmentMCLine
 
OnLineAdded(pintRowCount="",pstrKey="")
    new idLine,strYFELD,strOldYFELD
	;for i=1:1:999 hang 1
	do AttachAdditional(pintRowCount,pstrKey)
	quit $$$OK 
 
AttachAdditional(pintRow,pstrKey)
	new intLine,idxLine,strKey,i,objTMCLine1,objTMC,blnHide
	
	;set objFINAPInv=$$GetYFELDContainer^COMGridEdit31Interface()
	set objTMC=$$GetYFELDContainer^COMGridEdit31Interface()
 
	if $$$GRIDAllowLinkedLines {
		set strKey=$piece(pstrKey,",",1)
		set intLine=$piece(pstrKey,",",2)
		set idxLine=$$$Index(intLine)
		if idxLine'="" {
			set blnHide=(objTMC'="")
			
			set i=""
			for {
				;set i=$order(^FINAPInvCharges(YM,2,idxLine,strKey,i))
				set i=$order(^VARSESTreatmentMCLine1s(YM,1,idxLine,strKey,i))
				quit:i=""
				;set objFINAPInvCharge=$get(^FINAPInvCharge(YM,strKey,i,1))
				set objTMCLine1=$get(^VARSESTreatmentMCLine1(YM,strKey,i,1))
				
				;$$$GRIDAddLine(objFINAPInvCharge,i,"FINAPInvCharge2",$$$NO,intLine)		//SR11573
				$$$GRIDAddLine(objTMCLine1,i,"VARSESTreatmentMCLine1",$$$NO,intLine)		//SR11573
				
				if blnHide {
					;set blnHide=$$$NO
					;do HideHeaders^FINAPInvDiscount(+$$$FINAPInvLinesIncludeTax(objFINAPInv))
				}
			}
		}
		
	}
		
	quit
 
 /* 
OnDisplayRightClickMenu(pYKEY="",pYFELD="",pYFORM="")
    ;-------------------------------------------------------------------------------
    ; Customised right click menu options to add monthly qties when clicking on a cell.
    ;
    ; Returns:
    ;
    ; History:
    ; 10-Oct-2008	Heber		Created (copied from FINAPInvLineEvents)
    ;-------------------------------------------------------------------------------
	#define AddToMenuList(%1) set lstNewMenuItems = lstNewMenuItems_$listbuild(%1)
 
	new objTMC,lstNewMenuItems,objFINAPInv
	new blnEnabled
  
	set lstNewMenuItems=""
	set pYKEY=$translate($get(pYKEY),"""")
	
	set blnEnabled=$$$YES
	 
	set objTMC=$$GetYFELDContainer^COMGridEdit31G()
	
	if '$$GetKey^COMUtilClass(pYKEY,2) { //SR15230
		set blnEnabled=$$$NO
	} else {
		;set blnEnabled='$$$FINAPInvCostsPosted(objFINAPInv)	
	}
	;for i=1:1:999 hang 1
	if $$$GRIDAllowLinkedLines {
		// if TMC editable and Line not cancelled
		if ( ($$StatusTreatmentMC^VARSESTreatmentMC($piece(pYKEY,YKOMMA,1)) = $$$TMCEditable) && 
			+($$$VARSESTreatmentMCLineCancel(pYFELD) = 0) )
		{	
			$$$AddToMenuList($lb("new.gif",$$$Text("334026"),"CallBack(""AdditionalMonth^VARSESTreatmentMCLine"","""_pYKEY_""","""_pYFORM_""")",,blnEnabled))	;Language Text="New Additional Charge"
			$$$AddToMenuList("Separator")
		}
		;$$$AddToMenuList($lb("SortAsc.gif",$$$Text("Fin00727"),"moveFocusToNextLinkedLine("""_pYKEY_""")",,blnEnabled))	;Language Text="Next Expandable Line"
		;$$$AddToMenuList($lb("SortDsc.gif",$$$Text("Fin00728"),"moveFocusToPrevLinkedLine("""_pYKEY_""")",,blnEnabled))	;Language Text="Receive"
		;$$$AddToMenuList($lb("new.gif","Show Only Charges","hideMainLines(0)",,'$$$FINAPInvCostsPosted(objFINAPInv)))	;Language Text="Receive"
	}
	
	quit lstNewMenuItems
 */
 
AdditionalMonth(pYKEY,pYFORM="")
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; 10-Oct-2008	heber	Created (copied from FINAPInvAdditionalCharge)
    ;-------------------------------------------------------------------------------
	;
	new objLine,idParent
	;for i=1:1:999 { hang 1 }
	if $get(pYKEY)'="" {
		set idParent = $piece(pYKEY,",",2)
		set $$$VARSESTreatmentMCLine1Parent(objLine) = idParent
		$$$GRIDAddLine(objLine,"","VARSESTreatmentMCLine1",$$$YES,idParent)
	}
	quit
 
OnBlur(pidField,&pobjLine)
	;-------------------------------------------------------------------------------
	; On Blur from Item, Qty and Unit fields.
	; Calculate unit, and costs
	;
	; Params:	pidField	- field id
	;
	; ByRefs:	pobjLine	- current line object
	;
	; Returns:
	;
	; History:
	; 16-Jun-2009	heber		2009 - ses change
	; 31-Aug-2008	heber		SRBRxxxxx: created
	;-------------------------------------------------------------------------------
	new idItem,idUnit,curUnit, objItem, objTMC, strTMC, pIdTMC, lstItem
 
	set idItem=$$$VARSESTreatmentMCLineMedicine(pobjLine)
 	
		// If item - update units, and unit cost
	if pidField = $$$FldVARSESTreatmentMCLineMedicine {
		if idItem="" {
			set idUnit = ""
		} else {
			// chech if idItem respects constraints
			set objTMC=$$GetYFELDContainer^COMGridEdit31Interface()
 
			set pIdTMC = $piece(YKEY,YKOMMA,1)
			set lstItem = $$GetLstUsedItem(pIdTMC)
			if ($listfind(lstItem,idItem) > 0) {
				$$$StartScript()
				$$$Alert($$$Text($listbuild(34084)))
				$$$EndScript()
				set $$$VARSESTreatmentMCLineMedicine(pobjLine) = ""
 
			} else {
			
	 			if '($$IsProperItemType(idItem,objTMC)) {
					$$$StartScript()
					;w "alert('Produto "_idItem_" não satistaz exigências para tratamento!');"
					$$$Alert($$$Text(334025))
					$$$EndScript()
					set $$$VARSESTreatmentMCLineMedicine(pobjLine) = ""
				} else {
 
					//ok5
					set strTMC = ""
					;set strTMC = $$GetTMCWhereIsUsedItem(idItem)
					set strTMC = $$GetTMCWhereIsUsedItem(idItem,$$$VARSESTreatmentMCPatientId(objTMC))
					if (strTMC '="") {
						$$$StartScript()
						$$$Alert($$$Text($listbuild(334028,idItem,strTMC)))
						$$$EndScript()	
						set $$$VARSESTreatmentMCLineMedicine(pobjLine) = ""			
					} else {
 
 						/// check if item is on the list
						if '($data(^COMTempList(YM,YUSER,"VARSESTreatmentMCLine",idItem,1)) ) {
							$$$StartScript()
							$$$Alert($$$Text($listbuild(334025)))
							$$$EndScript()
							set $$$VARSESTreatmentMCLineMedicine(pobjLine) = ""
				
						} else {					
							set objItem=$get(^INART(YM,idItem,1))
							set idUnit = $$LoadUnitOfMeasureList^INARTUtilities(idItem)
							set $$$VARSESTreatmentMCLineUnit(pobjLine) = idUnit
						}
					}
				}
			}
		}
		// Otherwise, get them from line
	} else {
		set idUnit = $$$VARSESTreatmentMCLineUnit(pobjLine)
	}
	do:$data(objTMC) search(objTMC,YKEY)	
	quit
 
 
OnBeforeFormConstruction(pidField,pobjLine)
	;-------------------------------------------------------------------------------
	; Generate data for Unit of Measure drop down before constructing Edit Grid field
	;
	; Params:	pidField - Form Field Id
	; 			pobjLine - Adj Line record
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
	;-------------------------------------------------------------------------------
	new idItem
 	
	if pidField = $$$FldVARSESTreatmentMCLineUnit {
		set idItem = $$$VARSESTreatmentMCLineMedicine(pobjLine)
		if idItem '= "" {
			do LoadUnitOfMeasureList^INARTUtilities(idItem)
		}
	}
 
	quit
 
 
OnBeforeSavingData(pYKEY,pYFELD)
	new strStatus
 	set Q=$$$QSave
 	// SRBRxx
 	;if ((pidAdj="") || (pidAdj="+")) {
	; 	set ^VARSESCreateLinesFromTreatmentBol = $$$OK
 	;}
	;//^^^^
	
	;set strStatus = $$Editable(pidAdj)
	
	;if $$$ISOK(strStatus) {
	;	set strStatus=$$$GRIDSave(pidAdj)
	;}
	
	;if $$$ISERR(strStatus) {
	;	set Q=$$$QDontSave
	;	do ReturnError^COMUtilError(strStatus)
	;}	
	;for i=1:1:999 hang 1 
	quit
 
 
 
OnAfterDataFields(pYKEY,pYFELD)
 
 
	quit 
 
OnAfterPrimaryKey(pYKEY,pYFELD)
    /*-------------------------------------------------------------------------------
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new idTMC, idTMCLine, idUnit, idItem, objTMC
	
	set STATUSLine =  ""
	set TXTUOM = ""
	set QTYConsumed = 0
 
	set idTMC = $piece(pYKEY,YKOMMA,1)
	set idTMCLine = $piece(pYKEY,YKOMMA,2)
 
	set STATUSLine = $$SetStatus^VARSESPatientConsumptionMCLine(idTMC,idTMCLine)
	set QTYConsumed = $$QtyConsumed^VARSESPatientConsumptionMCLog(idTMC,idTMCLine)
	set QTYPrescribed = $$GetTotalLineQty^VARSESTreatmentMCLine1(idTMC,idTMCLine)
	
	set idUnit = $$$VARSESTreatmentMCLineUnit(pYFELD)
	set idItem = $$$VARSESTreatmentMCLineMedicine(pYFELD)
	if ((idUnit '= "") && (idItem '= "")) {
		set TXTUOM = $get(^COMTempList(YM,idItem,"UOM",idUnit,1))
	}
	set objTMC=$$GetYFELDContainer^COMGridEdit31Interface()
	do search(objTMC,pYKEY)
	quit
 
GetQtyConsumed(pidTreatment,pidSeq)
 	// 12/08/2010
 	new fltQtyTotal, fltQtyResidual 
 		
 	set fltQtyTotal = $$GetTotalLineQty^VARSESTreatmentMCLine1(pidTreatment,pidSeq)
	set fltQtyResidual = $$QtyResidual^VARSESPatientConsumptionMCLog(pidTreatment,pidSeq)
	quit (fltQtyTotal - fltQtyResidual) 
 
 
StatusTreatmentMCLine(pidTreatment,pidSeq)
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
 	$$$VAR
 	
 	new objTreatmentLine,objTreatment,fltQtyTotal, fltQtyResidual, 
 		intResidualDuration, strStatus
 	;new fltQuantity

	set objTreatmentLine = $get(^VARSESTreatmentMCLine(YM,pidTreatment,pidSeq,1))
	quit:(objTreatmentLine = "") ""
 
	quit:($$$VARSESTreatmentMCLineCancel(objTreatmentLine)) $$$TMCCancelled
 
 	set objTreatment = $get(^VARSESTreatmentMC(YM,pidTreatment,1))
 	
 	set strStatus = $$$VARSESTreatmentMCStatus(objTreatment)
 
 	quit:((strStatus = $$$TMCEditable) || (strStatus = $$$TMCCancelled)) strStatus
 
 	set fltQtyTotal = $$GetTotalLineQty^VARSESTreatmentMCLine1(pidTreatment,pidSeq)
	;set fltQuantity = $$$VARSESTreatmentMCLineQuantity(objTreatmentLine)
	;set fltQtyTotal = fltQuantity * intDuration
 
	set fltQtyResidual = $$QtyResidual^VARSESPatientConsumptionMCLog(pidTreatment,pidSeq)
	set intResidualDuration = $$DurationResidual^VARSESPatientConsumptionMCLog(pidTreatment,pidSeq)
	// finished
	quit:((intResidualDuration = 0) || (fltQtyResidual <= 0)) $$$TMCFinished
	// running
	quit:(fltQtyResidual < fltQtyTotal) $$$TMCRunning
	// ready 
	quit:(fltQtyResidual = fltQtyTotal) $$$TMCReady
	// never enters this point here
	quit $$$TMCUnFinished
 
IsCancelled(pidTreatment,pidSeq)
	new blnResult, objLine
 
	set blnResult = $$$NO
	set objLine = $get(^VARSESTreatmentMCLine(YM,pidTreatment,pidSeq,1))
	if $$$VARSESTreatmentMCLineCancel(objLine) {
		set blnResult = $$$YES
	}
	quit blnResult
 
 
search(pYFELD,pidTMCLine="")
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
 	new idINDRPITEM, objINDRPITEM, objINART, strTypes, strType, loop, strDescription,
 		lstItem, objTMC, strStatus
 		
 	kill ^COMTempList(YM,YUSER,"VARSESTreatmentMCLine")
 	set lstItem = $$GetLstUsedItem($piece(pidTMCLine,",",1))
 
 	// no show used items on active prescriptions
 	set objTMC=$$GetYFELDContainer^COMGridEdit31G()
 	set lstItem = lstItem _ $$GetLstItemsPerPatient($$$VARSESTreatmentMCPatientId(objTMC))
 
 	// get status of current prescription
 	set strStatus = $$$VARSESTreatmentMCStatus(objTMC)
 	//....
  	 	
 	set idINDRPITEM	= ""
	for {
		set idINDRPITEM	= $order(^INDRPITEM(YM,YLOCATION,idINDRPITEM))
		quit:(idINDRPITEM	= "")
		// Only remove in use items if prescription on being edited	status
		//.....
		; continue:($listfind(lstItem,idINDRPITEM) > 0)
		;;continue:(($listfind(lstItem,idINDRPITEM) > 0) && (strStatus = $$$TMCEditable))
 
		if ($$IsProperItemType(idINDRPITEM,pYFELD)) {
			set ^COMTempList(YM,YUSER,"VARSESTreatmentMCLine",idINDRPITEM,1) = $$$INDRPITEMDescription($get(^INDRPITEM(YM,YLOCATION,idINDRPITEM,1)))
		}
	}
	quit	
 
GetTMCWhereIsUsedItem(pidItem,pidPatient)
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 13-Dec-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
 	//ok5
 	new strRes, lstItem, objTMC, intLen, loop, strList
 	
 	set strRes = ""	
 	set objTMC=$$GetYFELDContainer^COMGridEdit31G()
 	set lstItem = $$GetLstItemsPerPatient($$$VARSESTreatmentMCPatientId(objTMC),$$$YES)
 	set intLen = $listlength(lstItem)
 	for loop=1:1:intLen {
 		set strList = $listget(lstItem,loop)
 		continue:(strList = "")
 		continue:($piece(strList,Y,1) '= pidItem)
 		if (strRes = "") {
	 		set strRes = $piece(strList,Y,2)
 		} else {
	 		set strRes = strRes _ "," _ $piece(strList,Y,2)
 		}
 	}
	quit strRes
	 
GetLstItemsPerPatient(pidPatient,pblnGetTMC=$$$NO)
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 11-Dec-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	//ok5
	new lstItem, lstTMC, intLLength, loop, strTreatment, idTreatment, idTMCLine, objTMCLine, idTMC
 	new strStatus
 
	set lstTMC = $$GetActiveTreatmentsMC^VARSESTreatmentMC(pidPatient)
	set intLLength = $LISTLENGTH(lstTMC)
	quit:(intLLength = 0) ""
 	
 	set idTMC = ""
 	set lstItem = ""
 	
 	for loop=1:1:intLLength {
	 	set strTreatment = $list(lstTMC,loop)
		set idTreatment = $piece(strTreatment,Y,1)
		if (pblnGetTMC = $$$OK) set idTMC = Y _ idTreatment
		
		set idTMCLine = ""
		for {
			set idTMCLine = $order(^VARSESTreatmentMCLine(YM,idTreatment,idTMCLine))
			quit:(idTMCLine = "")
			set objTMCLine = $get(^VARSESTreatmentMCLine(YM,idTreatment,idTMCLine,1))
			
			//
			set strStatus = $$StatusTreatmentMCLine(idTreatment,idTMCLine)
			continue:(strStatus = $$$TMCCancelled)
			//			
 
			if (lstItem = "") {
				set lstItem = $LISTBUILD($$$VARSESTreatmentMCLineMedicine(objTMCLine) _ idTMC)
			} else {
				set lstItem = lstItem _ $LISTBUILD($$$VARSESTreatmentMCLineMedicine(objTMCLine) _ idTMC)
			}
		}
 	}
	quit lstItem
 
GetLstUsedItem(pidTMC)
    /*-------------------------------------------------------------------------------
    ; 
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 04-Dec-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	new lstItem, intDay, intCount, intCode, idItem
	//GetLstUsedItem
	set intDay = $piece($horolog,",",1)
	set lstItem = ""
	if (pidTMC '= "") {
		quit:($get(^WWWDATEN(0,intDay,YUSER,"VARSESTreatmentMCLine","V","REFERENCEKEY")) '= pidTMC) lstItem
	}
 
	set intCount = $get(^WWWDATEN(0,intDay,YUSER,"VARSESTreatmentMCLine","V","DISPLAYED"))

	set intCode = ""
	for intCode=1:1:intCount {
		set idItem = $get(^WWWDATEN(0,intDay,YUSER,"VARSESTreatmentMCLine","V","REFERENCEVALUE","Y"_intCode_"_1",1))	
		continue:(idItem = "")
		continue:($get(^WWWDATEN(0,intDay,YUSER,"VARSESTreatmentMCLine","V","KILLEDRECORD",intCode)) = 1)
 
		// Continue, if line is cancelled
		continue:($get(^WWWDATEN(0,intDay,YUSER,"VARSESTreatmentMCLine","V","REFERENCEVALUE","Y"_intCode_"_11",1)) = 1)
		//
		
		if (lstItem = "") {
			set lstItem = $LISTBUILD(idItem)
		} else {
			set lstItem = lstItem _ $LISTBUILD(idItem)	
		}
	}
	set lstItem = $LIST(lstItem,1,$LISTLENGTH(lstItem)-1)
	quit lstItem
 
IsProperItemType2(pYFELD)
    /*-------------------------------------------------------------------------------
    ; Called from grid line, as wrapper for IsProperItemType
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
	new objTMC, strResult
	;for i=1:1:999 hang 1
	set strResult = $$$NO	
	set objTMC = $$GetYFELDContainer^COMGridEdit31G()
	set strResult = $$IsProperItemType($$$VARSESTreatmentMCLineMedicine(pYFELD),objTMC)
	quit strResult
 
IsProperItemType(pidITEM,pobjTMC="")
    /*-------------------------------------------------------------------------------
    ; Check if:
    ; 	- item is of type 3 - Specialized Treatment
    ; 	- if CIDmain,CIDsecondary are selected, check if item is associated with
    ; 	- if APAC number is selected, ignore CID 
    ; 
    ;	
    ;]]><![CDATA[ Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
	new objINDRPITEM, objINART, strTypes, strType, loop, strMainCID, 
		strSecondaryCID, strAPACNumber, strResult, strCID 
 
 	// Se o No. da Ação Judicial for preenchido, ignorar qualquer filtro para o item.
 	;if $$$VARSESTreatmentMCNumberJudicialAction(pobjTMC) '= "" {
	;if $$$VARSESTreatmentMCNumber(pobjTMC) '= "" {
	if $$$VARSESTreatmentMCDistributionType(pobjTMC) '= "" {
	 	quit $$$YES
 	}
 
	set objINDRPITEM = $get(^INDRPITEM(YM,YLOCATION,pidITEM,1))
	quit:(objINDRPITEM = "") $$$NO
	
	set objINART = $get(^INART(YM,pidITEM,1))
	quit:(objINDRPITEM = "") $$$NO
	
	set strTypes = $$$INARTFREE7(objINART)
	
	set listTypes = $LISTFROMSTRING(strTypes,";")
	
	if ($LISTFIND(listTypes,"3")) {
		quit $$$YES
	}
	else {
		quit $$$NO
	}	
	
	set strMainCID = $$$VARSESTreatmentMCMainCID(pobjTMC)
	set strSecondaryCID = $$$VARSESTreatmentMCSecondaryCID(pobjTMC)
	set strAPACNumber = $$$VARSESTreatmentMCAPACNumber(pobjTMC)
	
	set strResult = $$$OK
	if (strAPACNumber = "") {
		// if item is an APAC-required and APAC not provided on prescription
		if ($$$INARTFREE37(objINART) = 1) {
			set strResult = $$$NO
		} else {
			if (strMainCID '= "") {
				set strResult = $data(^VARSESCIDMedicamentos(YM,1,strMainCID,pidITEM)) 
			} 
			if (strResult = $$$OK) {
				for loop=1:1 {
					set strCID = $piece(strSecondaryCID,";",loop)	
					quit:(strCID = "")
					set strResult = $data(^VARSESCIDMedicamentos(YM,1,strMainCID,pidITEM))
					quit:(strResult = $$$NO)
				}			
			}
		}
	}
	
	quit strResult
 
	;CheckForDisabledCancel(pYKEY,pYFELD)
    /*-------------------------------------------------------------------------------
    ; 
    ;	
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/	
	;new idTMC, strStatusTMC
	
	;set Q=1 // disabled
	
	;set idTMC = $piece(pYKEY,YKOMMA,1)
	
	;set strStatusTMC = $$StatusTreatmentMC^VARSESTreatmentMC(idTMC)
	
	;quit:($$$VARSESTreatmentMCLineCancel(pYFELD))
	
	;quit:(	(strStatusTMC '= $$$TMCReady) && 
	;		(strStatusTMC '= $$$TMCRunning) &&
	;		(strStatusTMC '= $$$TMCEditable))
			
	;set Q=0 // enabled
	;quit
 
 
	;CancelLine(pidTreatment,pidLine)
    /*-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Params:
    ;
    ; ByRefs:
    ;
    ; Returns:
    ;
    ; History:
	; 31-Aug-2008	heber		SRBRxxxxx: created
    ;-------------------------------------------------------------------------------*/
	;new strStatus, objLine
	;for i=1:1:999 hang 1
	;set objLine = $get(^VARSESTreatmentMCLine(YM,pidTreatment,pidLine,1))
	;set $$$VARSESTreatmentMCLineCancel(objLine) = $$$YES
	;set idKey = pidTreatment _ "," _ pidLine
	
	;tstart
 	;set strStatus=$$^WWWSPEI("VARSESTreatmentMCLine",idKey,objLine,1)
 	;if (+strStatus) {
	;	if $tlevel>0 tcommit
	;} else {
	;	trollback
	;}
	;//do GoToForm^COMUtilForm("VARSESTreatmentMC", pidTreatment)
	;quit
 
IsLineNotEditable(pYKEY)	
	new idTMC, idLine
	
	set idTMC = $piece(pYKEY,YKOMMA,1)
	set idLine = $piece(pYKEY,YKOMMA,2)
	
	quit:($$IsTreatmentNotEditable^VARSESTreatmentMC(idTMC)) $$$OK
	
	quit $$IsCancelled^VARSESTreatmentMCLine(idTMC,idLine)
 
	/*
	#define TMCEditable 0
	#define TMCReady 1
	#define TMCRunning 2
	#define TMCFinished 3
	#define TMCUnFinished 4
	#define TMCCancelled 5
	#define TMCNumberOfStatus 6
	*/
	
IsLineNotCanceleable(pYKEY,pYFELD)	
	new idTMC, idLine, strStatusTMC, strStatusTMCLine
	;for i=1:1:999 { hang 1 }
	set idTMC = $piece(pYKEY,YKOMMA,1)
	set idLine = $piece(pYKEY,YKOMMA,2)
	
	set strStatusTMC = $$StatusTreatmentMC^VARSESTreatmentMC(idTMC)
	quit:((strStatusTMC = $$$TMCEditable) || (strStatusTMC = $$$TMCFinished) || (strStatusTMC = $$$TMCCancelled)) $$$OK
	set strStatusTMCLine = $$StatusTreatmentMCLine(idTMC,idLine)
	
	;quit:((strStatusTMCLine = $$$TMCFinished) || (strStatusTMCLine = $$$TMCCancelled)) $$$OK
	quit $$$NO
	
	;$$$VARSESTreatmentMCLineCancel(pYFELD)
	;quit $$IsCancelled^VARSESTreatmentMCLine(idTMC,idLine) 	
 
	;IsCancelReasonNotEditable()
 
getQuantidadePorMes(pidPrescricao, pidLinha)
 
	new id, strMensagem, strMonth, objLine, intQuantidade
 
	set strMensagem = ""
	$$$Order5(^VARSESTreatmentMCLine1s,YM,1,pidLinha,pidPrescricao,id)
	
		set strMonth = $$GetLine1TxtMonth^VARSESTreatmentMCLine1(pidPrescricao, id)
		set strMonth = $extract(strMonth,1,3)
		
		set objLine 	  = $get(^VARSESTreatmentMCLine1(YM, pidPrescricao, id, 1))
		set intQuantidade = $$$VARSESTreatmentMCLine1QuantityperMonth(objLine)
		
		set strMensagem = strMensagem_"("_strMonth_")"_intQuantidade_" "
			
	$$$End
 
	quit strMensagem
	
checkMonths(pidPrescricao)
	
	quit:pidPrescricao=""
	;for i=1:1:100 hang 1
	new SQLMeses, rsMeses, linha, mesesDefinicao, mesesReal
 	new qtdeUniforme
 		
	// Esse SQL retornará as linhas da prescrição cujo o nº de meses definido no cabeçário está diferente do nº de meses existentes.
	;set SQLMeses = "SELECT Seq, QuantidadedeMeses, (select count(*) from SQLUser.VARSESTreatmentMCLine1 WHERE Parent = Seq and TreatmentNumber = """_pidPrescricao_""") as Meses "_
	;			   "FROM SQLUser.VARSESTreatmentMCLine where (TreatmentNumber = """_pidPrescricao_""") and "_
	;			   "(QuantidadedeMeses <> (select count(*) from SQLUser.VARSESTreatmentMCLine1 where Parent = Seq and TreatmentNumber = """_pidPrescricao_"""))"
 
 
 	set SQLMeses = "SELECT Seq, QuantidadedeMeses, QtdeUniforme, (select count(*) from SQLUser.VARSESTreatmentMCLine1 WHERE Parent = Seq and TreatmentNumber = '"_pidPrescricao_"') as Meses "_
				   "FROM SQLUser.VARSESTreatmentMCLine where (TreatmentNumber = '"_pidPrescricao_"') and "_
				   "(QuantidadedeMeses <> (select count(*) from SQLUser.VARSESTreatmentMCLine1 where Parent = Seq and TreatmentNumber = '"_pidPrescricao_"'))"
 
 
	set rsMeses = ##class(%Library.ResultSet).%New()
	do rsMeses.Prepare(SQLMeses)
	do rsMeses.Execute()
	
	while rsMeses.Next() {
		
		set linha 		   = rsMeses.Data("Seq")
		set mesesDefinicao = rsMeses.Data("QuantidadedeMeses")
		set mesesReal 	   = rsMeses.Data("Meses")
		set qtdeUniforme 	= rsMeses.Data("QtdeUniforme") ;;;
		
		if mesesDefinicao < mesesReal {
			
			do deleteMonths(pidPrescricao, linha, mesesReal - mesesDefinicao)
		} else {
			
			;;do createMonths(pidPrescricao, linha, mesesDefinicao - mesesReal)
			do createMonths(pidPrescricao, linha, mesesDefinicao - mesesReal, qtdeUniforme)
		}
	}
 
	quit
	
	;;createMonths(pidPrescricao, linha, intQuantity)
createMonths(pidPrescricao, linha, intQuantity, fltQtdeUniforme)
 
	new objMes, i, idMes, seq
	
	for i = 1 : 1 : intQuantity {
		
		set $$$VARSESTreatmentMCLine1QuantityperMonth(objMes) = 0
		set $$$VARSESTreatmentMCLine1Parent(objMes)			  = linha
 
		set $$$VARSESTreatmentMCLine1QuantityperMonth(objMes) = fltQtdeUniforme ;;
		
		set seq = $order(^VARSESTreatmentMCLine1(YM, pidPrescricao, ""), -1) + 1
		
		set idMes = pidPrescricao_$$$COMMA_seq
		
		set strStatus = $$$Save("VARSESTreatmentMCLine1",idMes,objMes,$$$YES)
	}
	
	quit
	
deleteMonths(pidPrescricao, linha, intQuantity)
 
	new i
 
	for i = 1 : 1 : intQuantity {
		
		set seq = $order(^VARSESTreatmentMCLine1s(YM, 1, linha, pidPrescricao, ""), -1)
		set idMes = pidPrescricao_$$$COMMA_seq
		
		set strStatus = $$$Kill("VARSESTreatmentMCLine1",idMes)
	}
 
	quit
 
AreThereLines(pidPrescricao)
	new idTMC, idLine
	quit:(pidPrescricao = "") 0
	set idTMC = $piece(pidPrescricao,YKOMMA,1)
	set idLine = $piece(pidPrescricao,YKOMMA,2)
	
	quit:(idTMC = "")||(idLine = "") 0
 
	quit ($data(^VARSESTreatmentMCLine1s(YM,1,idLine,idTMC)))
	
StatusTreatmentMCLineReport(pidTreatment, pidSeq)
       
      $$$VAR
      
      quit $$StatusTreatmentMCLine(pidTreatment,pidSeq)]]></Routine>
</Export>