<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMViewChoose" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[COMViewChoose ; functions relating to the field chooser.
	
#include WWWConst
#include COMSYS
#include COMConst
#include %occInclude
	
Select(pidField="",pstrControl="")
    ;-------------------------------------------------------------------------------
    ; Callback from when a user drags a property to the field selection or result grid.
    ;
    ; History:
    ; 24-Jun-2005	Paul K	Defaulted variables.
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new blnControl,intPosition
	
	set blnControl  = $$$NO
	set intPosition = ""
	if (pstrControl'="") && (pidField'="") {
		if $extract(pstrControl,1,3)="bdy" {
			set intPosition = $piece($piece(pstrControl,"bdy",2),"_",1)
		
		} elseif $extract(pstrControl,1,6)="select" {
			set blnControl  = $$$YES
			set intPosition = $piece(pstrControl,"select",2)
		
		} elseif $extract(pstrControl,1,4)="comp" {
			set blnControl  = $$$YES
			set intPosition = $piece(pstrControl,"comp",2)
		
		} elseif $extract(pstrControl,1,5)="value" {
			set blnControl  = $$$YES
			set intPosition = $piece(pstrControl,"value",2)
		
		} elseif $extract(pstrControl,1,4)="ctrl" {
			set blnControl  = $$$YES
			set intPosition = $piece($piece(pstrControl,"ctrl",2),"_",1)
		}
		if blnControl {
			do SelectControl^COMViewFilterControl(pidField,intPosition)
		} else {
			do SelectColumn^COMViewFilterColumn(pidField,intPosition)
		}
	}
	quit
	
	
SetWidth(pstrWidth)
    ;-------------------------------------------------------------------------------
    ; Sets the width of the "Chooser Bar"
    ;
    ; History:
    ; 21-Oct-2010	shobby	SR17540 Reload the form if CacheTemp variables have been lost.
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new idClass,objUser

	set idClass = $get(^CacheTempView(YUSER,"Class"))
	if idClass="" {
		do Recover^COMViewDisaster()	;SR17540
	} else {
		set objUser = $get(^COMViewUser(0,idClass,YBED,1))
		set $$$COMViewUserChooserWidth(objUser) = pstrWidth
		set ^COMViewUser(0,idClass,YBED,1)      = objUser
	}
	quit
	
	
Show()
    ;-------------------------------------------------------------------------------
    ; Shows the Field Chooser control if the user hasn't been into that control yet.
    ; 
    ; Structure:
    ; +--------------------------+
    ; |td - fldChoose            |
    ; |+-------------------------+
    ; ||div                      |
    ; |+-------------------------+
    ; ||select - ChooserType     |
    ; |+-------------------------+
    ; ||table  - ChooserSub0Field|
    ; |+-------------------------+
    ; ||div    - ChooserSub1     |
    ; ||+------------------------+
    ; |||span                    |
    ; ||+------------------------+
    ; |||select- ChooserSub1Type |
    ; ||+------------------------+
    ; |||table - ChooserSub1Field|
    ; ||+------------------------+
	; |+-------------------------+
    ; +--------------------------+
    ;
    ; History:
    ; 24-Oct-2010	shobby	SR17477: Renamed some elements to be more generic.
    ; 21-Oct-2010	shobby	SR17540: Reload the form if CacheTemp variables have been lost.
    ; 14-Apr-2010	shobby	SR17253: objDiv -> objDIV
    ; 13-Nov-2009	DWR		SR17024: Pass top level "0" to PopulateChoose method and 
    ; 							loadChooserType method
    ; 19-Jul-2006	JW		SR14832: Add form parameter
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new idClass,objUser,intWidth,idForm
	
	set idClass = $get(^CacheTempView(YUSER,"Class"))
	set idForm  = $get(^CacheTempView(YUSER,"Form"))        //SR14832
	
	if idClass="" {
	 	do Recover^COMViewDisaster() ;SR17540
	} else {
		kill ^CacheTempChoose(YUSER)
		do PopulateChoose(idClass,,idForm,0)           //SR14832 // SR17024
		
		&js<
		var objDIV=document.createElement('div');fldChoose.appendChild(objDIV);		//SR17253
		objDIV.style.height=document.getElementById("objDIV").style.height;												//SR17253
		objDIV.style.width='100%';													//SR17253
		objDIV.style.overflowY='auto';												//SR17253
		objDIV.id='fldChooseDiv';													//SR17362
		var objType=document.createElement('select');objDIV.appendChild(objType);	//SR17253
		objType.attachEvent("onchange",ChooserTypeChanged);
		objType.id="ChooserType";
		objType.style.width='100%';
	 	var objField=document.createElement('table');objDIV.appendChild(objField);	//SR17253
	 	objField.style.width='100%';
	  	var objBody=document.createElement('tbody');objField.appendChild(objBody);
	  	objBody.id="ChooserSub0Field";
		var objSub=document.createElement('div');objDIV.appendChild(objSub);		//SR17253
		objSub.id="ChooserSub1";
   		>
   			
		do LoadChooserType(idClass,"ChooserType","ChooserSub0Field",0)

		set objUser  = $get(^COMViewUser(0,idClass,YBED,1))
		set intWidth = $$$COMViewUserChooserWidth(objUser)
		if intWidth<100 set intWidth = 100
		write "fldChoose.style.width="_intWidth_";",!
	}
	
	quit
	
LoadSubClass(pidClass="",pidField="",pintLevel)
    ;-------------------------------------------------------------------------------
    ; Runs if a user selects a field based on another class.
    ;
    ; History:
    ; 24-Nov-2010	shobby	SR17477: Replaces LoadSubClass/LoadSubClass2/LoadSubClass3
    ; 17-Sep-2010	shobby	SR17477: Simplified.
    ; 13-Nov-2009	DWR		SR17024: Pass Sub level "1" to various methods to ensure
    ; 							only related to this sublevel.
    ; 							Create the next level down.
    ; 19-Apr-2006	JW		SR14429: Remove for views. Unnecessary
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
 	quit:$get(^CacheTempView(YUSER,"View"))
 	
	if '$data(^CacheTempChoose(YUSER,pidClass,pintLevel)) do PopulateChoose(pidClass,pidField,,pintLevel)   ;SR17024

	&js<
		var objChooser=document.getElementById('ChooserSub'+#(pintLevel)#);
		
		var objSpan=document.createElement('span');objChooser.appendChild(objSpan);
		objSpan.style.width='100%';
		objSpan.innerHTML='#($zcvt($$GetClassDescription^COMViewDescription(pidClass),"o","JS"))#';
		objSpan.title='#(pidClass)#';
		objSpan.style.fontSize=12;
		var objType=document.createElement('select');objChooser.appendChild(objType);
		
		objType.attachEvent("onchange",function() { ChooserSubTypeChanged(#(pintLevel)#) });
		objType.id="ChooserSub"+#(pintLevel)#+"Type";
		objType.style.width='100%';
	 	var objField=document.createElement('table');objChooser.appendChild(objField);
	 	objField.style.width='100%';
	  	var objBody=document.createElement('tbody');objField.appendChild(objBody);
	  	objBody.id="ChooserSub"+#(pintLevel)#+"Field";
	  	var objSub=document.createElement('div');objChooser.appendChild(objSub);
		objSub.id="ChooserSub"+#(pintLevel+1)#;
	>
	
	do LoadChooserType(pidClass,"ChooserSub"_pintLevel_"Type","ChooserSub"_pintLevel_"Field",pintLevel)  ;SR17024
	quit
	
	
LoadChooserType(pidClass,pidDOMSelect,pidDOMTable,pintLevel)
    ;-------------------------------------------------------------------------------
    ; Populates the select box for the Chooser or SubChooser
    ;
    ; History:
    ; 12-Nov-2009	DWR		SR17024: Add pintLevel
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new strType
 
	do StartCombo^COMCombo(pidDOMSelect,$$$EnumCOMVIEWCHOOSERPopularFields,$$$YES,$$$YES)
	set strType = ""
	for {
		set strType = $order(^CacheTempChoose(YUSER,pidClass,pintLevel,strType))
		quit:strType=""
		
		do AddOption^COMCombo(strType,$zconvert($$GetEnumDescription^COMUtils("COMVIEWCHOOSER",strType),"o","JS"))
	}
	do StopCombo^COMCombo()
	do LoadFields(pidClass,$$$EnumCOMVIEWCHOOSERPopularFields,pidDOMTable,pintLevel)
	quit
	
	
LoadFields(pidClass,pstrType,pidDOMTable,pintLevel)
    ;-------------------------------------------------------------------------------
    ; Populates the field table for the Chooser or SubChooser
    ;
    ; History:
    ; 12-Nov-2009	DWR		SR17024: Add pintLevel
    ; 15-Mar-2005 	Paul K	SR11899: Don't "Drag/Drop" related class fields.
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new idField,strField,strRelation
 
	if pidClass="" set pidClass = $get(^CacheTempView(YUSER,"Class"))
	write "ClearRows("_pidDOMTable_");",!
	set strField = ""
	for {
		set strField = $order(^CacheTempChoose(YUSER,pidClass,pintLevel,pstrType,strField))
		quit:strField=""
		
		set idField = ""
		for {
			set idField = $order(^CacheTempChoose(YUSER,pidClass,pintLevel,pstrType,strField,idField))
			quit:idField=""
			
			set strRelation = $get(^CacheTempChoose(YUSER,pidClass,pintLevel,pstrType,strField,idField))
			;_"','"_$zconvert($$GetDescription^COMViewDescription(pidClass),"o","JS") ;BR014900
			write "AddChooseField("_pidDOMTable_",'"_$zcvt(idField,"o","JS")_"','"_$zcvt(strField,"o","JS")_"','"_$zcvt(strRelation,"o","JS")_"','"_(pstrType'=$$$EnumCOMVIEWCHOOSERRelatedClasses)_"');"
		}
	}
	quit
	
	
PopulateChoose(pidClass,pidField="",pidForm="",pintLevel)
    ;-------------------------------------------------------------------------------
    ; Populates a global(^CacheTempChoose) representing field types used to 
    ; determine fields in Chooser Table and Select boxes.
    ;
    ; History:
    ; 12-Nov-2009	DWR		SR17024: Add pintLevel
    ; 07-Apr-2009	PPP		SR16468: Header details - Object Properties to go through 
    ; 							language translation before display
    ; 							(WWWClassTranslation)
    ; 23-Feb-2009	shobby	SR16386:Calculated fields on related classes were not
    ; 							getting the ID formed properly.
    ; 07-Oct-2008	PP		SR15960:Added Index fields as Popular Fields
    ; 26-Sep-2008	PP		SR15960:Update to cater for alSYS.dt (datatype) classes
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ; 24-Jun-2008	shobby	SRBR014958: std routine to get calculated field description
    ; 19-Dec-2007	shobby	Redirect property name calculation to GetDescription,
    ; 							Use the GetRelation to find out more precise
    ; 							information on the property relation from the form.
    ; 13-Dec-2007	GRF		Doco
    ; 07-Sep-2006	GRF		SRBR014020; reverted _FREE test
    ; 19-Jul-2006	JW		SR14832: Add form parameter, call WWWFELDNAME correctly
    ; 19-Apr-2006	shobby	SRBR014020:Allow free fields to be included.
    ; 28-Oct-2005	JW		SR13074: Exchange Rate type
    ; 08-Feb-2005	PO		SR10965 Adding support for related classes.
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new arrIndexProperties,blnObj,idClass,idField,idGlobal
	new intCnt,intMaxCnt,loop,objClass,objField,objIndex,objProp
	new strClass,strDesc,strField,strProperties,strRef,strRelationClass,strType
 	
 	if pidForm="" set pidForm = pidClass		// This is a default if form is unknown
	set blnObj = $get(^CacheTempObj(YUSER,"Object"))	//SR15866
 
	if 'blnObj {
		set idGlobal=""
		for {
			set idGlobal=$order(^WWW001(0,idGlobal))
			quit:idGlobal=""
		
			//Exclude if marked for Delete
			continue:$$$WWW001ClassType($get(^WWW001(0,idGlobal,1)))=99		//SR17372

		
		; FIXME : the following if test should simply be -
		;	continue:idGlobal=pidClass            ; don't search base class for relations of itself
			if pidClass'=idGlobal {
				set idField=""
				for {
					set idField=$order(^WWW002(0,idGlobal,idField))
					quit:idField=""
				
					set objField=$get(^WWW002(0,idGlobal,idField,1))
				
					set strRelationClass=$$$WWW002RelationClass(objField)
					if $extract(strRelationClass,1,5)="WWW10" set strRelationClass=""
					if strRelationClass="INPARA" set strRelationClass=""
				
			;-----------------------------------
			;	If the primary key has the base class as a relation, add the using
			;	class to the list.
			;	Once one primary key has been found with the link, skip remaining
			;	keys for the using class and continue with the next using class.
			;-----------------------------------
				
					if pidClass=strRelationClass {
					//if pidClass=strRelationClass & (idField = 1) {
						set strDesc  = $$GetDescription^COMViewDescription(idGlobal)  ; class name ;BR014900
						set strField = "P"_idField_".C"_idGlobal
						set strRef   = "^"_idGlobal
					
						if ($get(strField)'="") && (strDesc'="") && ($data(@strRef)>1) {
							set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERRelatedClasses,strDesc,strField)=idGlobal
						}
						quit
					}
				}
			}
		}
	
		for strClass="^WWW002","^WWW003" {
			set idField=""
			for {
				set idField=$order(@strClass@(0,pidClass,idField))
				quit:idField=""
			
				set objField=$get(@strClass@(0,pidClass,idField,1))
				set strField=$select(strClass="^WWW002":"P",1:"D")_idField
			
				; FIXME : Why build the string and then pull it apart!
			
			//	set strDesc = $$^WWWFELDNAME(pidClass,$extract(strField,1),$extract(strField,2,99))
				set strDesc = $$GetDescription^COMViewDescription(pidClass,$extract(strField,1),$extract(strField,2,99))		//SR14832 ;BR014751 ;BR014900

				if strClass="^WWW003" set objField=$$GetRelation^COMViewUtils(.pidClass,strField,.pidForm,$extract(strField,1))		;BR014751

				if $extract(strDesc,1,5)'="_FREE" {      ;SRBR014020  ; reverted 07-Sep-2006

					set strRelationClass=$$$WWW002RelationClass(objField)

					if $extract(strRelationClass,1,5)="WWW10" set strRelationClass=""
					if strRelationClass="INPARA" set strRelationClass=""
					if strRelationClass=pidClass set strRelationClass="" ;shobby 17-Apr-2009

					if pidField'="" set strField=pidField_"."_strField

					if (strClass="^WWW002")||($$$WWW002IndexKey(objField)'="") {  ;popular fields
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERPopularFields,strDesc,strField)=strRelationClass
					}
					if $find(",1,7,14,",","_$$$WWW002InputType(objField)_",") {
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERDateTime,strDesc,strField)=strRelationClass
				
					} elseif $find(",4,8,12,18,",","_$$$WWW002InputType(objField)_",") {		//SR13074
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERNumericCurrency,strDesc,strField)=strRelationClass
				
					} elseif $find(",3,6,9,10,13,",","_$$$WWW002InputType(objField)_",") {
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERTextMemo,strDesc,strField)=strRelationClass							

					} elseif $$$WWW002InputType(objField)=2 {
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERYesNo,strDesc,strField)=strRelationClass
				
					} elseif $find(",3,6,9,",","_$$$WWW002InputType(objField)_",") {
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSEROtherFields,strDesc,strField)=strRelationClass
					}
				}
			}
		}
	
		;SR13213
		set strClass = "^WWW003Calc"
		set idField  = ""
		for {
			set idField = $order(^WWW003Calc(0,pidClass,idField))
			quit:idField=""
		
			set strDesc = $$GetDescription^COMViewCalculatedField(pidClass,idField,SPRACHE) ;BR014958
			set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERCalculatedFields,strDesc,pidField_$select(pidField="":"",1:".")_"C"_idField) = strRelationClass
		;	set ^CacheTempChoose(YUSER,pidClass,$$$EnumCOMVIEWCHOOSERCalculatedFields,strDesc,"C"_idField) = strRelationClass  ;SR16386
		}
	}

	if blnObj {    //SR15866
		set objClass = ##class(%Library.ClassDefinition).%OpenId(pidClass)
	
		if objClass '= $$$NULLOREF {
			kill arrIndexProperties

			//Get Properties with Indexes
			set intMaxCnt = objClass.Indices.Count()
			for intCnt = 1:1:intMaxCnt {
				set objIndex = objClass.Indices.GetAt(intCnt)
				set strProperties = objIndex.Properties

				for loop=1:1:$length(strProperties,",") {
					set arrIndexProperties($piece(strProperties,",",loop))=""
				}
			}

			set intMaxCnt = objClass.Properties.Count()
			for intCnt = 1:1:intMaxCnt {
				set objProp = objClass.Properties.GetAt(intCnt)
				set (strDesc,strField) = objProp.Name		//$select(strClass="^WWW002":"P",1:"D")_idField
				set strDesc = $$GetTextRelated^WWWClassTranslation(pidClass,strField,$get(SPRACHE))		//SR16468
				set strType = objProp.Type
			
				if ($extract(strType,1,8)'="alSYS.dt") && ($piece(strType,".",2)="") {
					set strType = $piece(pidClass,".",1,$le]]><![CDATA[ngth(pidClass,".")-1)_"."_strType
				}

				if pidField'="" {
					set strField = pidField_"->"_strField
				}
			
				set strRelationClass = ""
				if ##class(%Library.ClassDefinition).%ExistsId(strType) {
					if $extract(strType,1,8)'="alSYS.dt" set strRelationClass = strType
				}
			
				//Properties with indices are defined as Popular Fields
				if $data(arrIndexProperties(strField))          || 
				   $data(arrIndexProperties(strDesc))           ||
				   ('$data(arrIndexProperties) && (intCnt = 1))    {
				
					set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERPopularFields,strDesc,strField)   = strRelationClass
				}
			
				if (strType = "alSYS.dt.dtDate")      ||
				   (strType = "alSYS.dt.dtTime")      ||
				   (strType = "alSYS.dt.dtTimeStamp")    {
					
					set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERDateTime,strDesc,strField)        = strRelationClass
			
				} elseif strType = "alSYS.dt.dtFloat" {
					set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERNumericCurrency,strDesc,strField) = strRelationClass

				} elseif (strType = "alSYS.dt.dtInteger") ||
				         (strType = "alSYS.dt.dtNumeric")    {
					set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERNumericCurrency,strDesc,strField) = strRelationClass

				} elseif strType = "alSYS.dt.dtCurrency" {
					set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERNumericCurrency,strDesc,strField) = strRelationClass
			
				} elseif strType = "alSYS.dt.dtString" {
					set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERTextMemo,strDesc,strField)        = strRelationClass
			
				} elseif strType = "alSYS.dt.dtBoolean" {
					set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERYesNo,strDesc,strField)           = strRelationClass
			
				} else {
					if strRelationClass'="" {
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSERRelatedClasses,strDesc,strField) = strRelationClass
					
					} else {
						set ^CacheTempChoose(YUSER,pidClass,pintLevel,$$$EnumCOMVIEWCHOOSEROtherFields,strDesc,strField)    = strRelationClass
					}
				}
			}
		}
	}

	quit]]></Routine>
</Export>