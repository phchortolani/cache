<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VAREstoqueSemMovto" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VAREstoqueSemMovto
	#include COMSYS
	#define SomenteSaida 1
	#define SomenteEntrada 2
	#define EntradaeSaida 3
	#define TodosMovtos 4
	#define SemLocalSemPrograma (filterLocal = "") && (filterPrograma = "")
	#define ComLocalSemPrograma (filterLocal '= "") && (filterPrograma = "")
	#define SemLocalComPrograma (filterLocal = "") && (filterPrograma '= "") 
	#define ComLocalComPrograma (filterLocal '= "") && (filterPrograma '= "")
	#define SomenteProdutosComEstoque 1
	#define ProdutosNuncaMovto 5
	quit

OnAfterSave
	;OnAfterSave^VAREstoqueSemMovto
	new Local, DiasSemMovto, Estoque, Grupo, Criterio, Contabil
	
	kill ^VARTempEstoqueSemMovto(YM,YBED)
	
	set Local 		 = $get(VORG(1))	
	set DiasSemMovto = $get(VORG(2))
	set Estoque      = $get(VORG(4))	
	set Grupo	     = $get(VORG(6))
	set Criterio 	 = $get(VORG(7))	
	set Contabil	 = $get(VORG(8))
	
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,1) = $get(VORG(1))	; Local
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,2) = $get(VORG(2))  ; Dias sem movimentação
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,3) = $get(VORG(3))  ; Ordenar Por
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,4) = $get(VORG(4))  ; Estoque
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,5) = $get(VORG(5))  ; Programa
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,6) = $get(VORG(6))	; Grupo
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,7) = $get(VORG(7)) 	; Critério
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,8) = $get(VORG(8)) 	; Conta Contábil
	set $piece(^VARTempEstoqueSemMovto(YM,YBED,1),Y,9) = $get(VORG(9)) 	; Status
	
	if ( (Criterio '= $$$ProdutosNuncaMovto) && (DiasSemMovto = "") ) {
		$$$Alert("É necessário preencher a quantidade de dias sem movimento.")
	
	} elseif ( (Criterio '= $$$ProdutosNuncaMovto) && (Estoque = "") ) {
		$$$Alert("É necessário informar se a consulta deve buscar somente produtos com estoque ou não.")
	
	} elseif (Criterio = $$$ProdutosNuncaMovto) {
		if ( (Grupo = "") && (Contabil = "") ) {
			$$$Alert("Quando o critério selecionado é a lista de produtos que nunca tiveram movimentação, é necessário preencher o filtro de grupo ou o filtro de conta contábil para que a consulta não fique excessivamente pesada.")
		} else {
			$$$Alert("Atenção: esta é uma consulta pesada que pode levar alguns segundos.")
		}
	}
	
	set arrParam("YOPTION") = 1
	do VARLogAfterSave^VARUtil(YBED,YFORM)
 	do GoToForm^COMUtilForm("VAREstoqueSemMovto",Local,,,,,,,.arrParam)
	
	quit	
	
OnAfterDataFields
	;OnAfterDataFields^VAREstoqueSemMovto
	
	do PrintJS
	
	//Só apresenta os resultados da consulta caso o usuário tenha clicado no botão 'Ok' do form.
	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)

	do MontaGrid
	
	quit


MontaGrid
	new filterLocal, filterDiasSemMovto, filterOrderBy, filterEstoque, filterPrograma, filterGrupo, count,
		filterCriterio, filterContabil, filterStatus, rsEstoqueSemMovto, meuSQL, lstHeader, idProduto,
		descProduto, unidMedida, qtdeEstoque, custoMedio, DiasSemMovto, idLocal,descLocal, dteUltimoMovto,
		dteUltimoMovto, TipoMovto, TipoTxn, Documento, GrupoTipoMovto, fltValorTotal, fltValorTotalGeral,
		filterStatusItem, descMovmtType
	
	set objTemp = $get(^VARTempEstoqueSemMovto(YM,YBED,1))
	
	set filterLocal 	   = $piece(objTemp,Y,1)
	set filterDiasSemMovto = $piece(objTemp,Y,2)
	set filterOrderBy      = $piece(objTemp,Y,3)
	set filterEstoque      = $piece(objTemp,Y,4)
	set filterPrograma 	   = $piece(objTemp,Y,5)
	set filterGrupo	       = $piece(objTemp,Y,6)
	set filterCriterio	   = $piece(objTemp,Y,7)
	set filterContabil	   = $piece(objTemp,Y,8)
	set filterStatusItem   = $piece(objTemp,Y,9)
	
	/* Caso o critério seja a lista de produtos que nunca tiveram movimentação, imprime outra tabela utilizando outra query.
	   Isto foi feito por questões de performance, pois essa visão deixava o relatório muito mais lento. */
	if ( filterCriterio = $$$ProdutosNuncaMovto ) {
		quit:( (filterGrupo = "") && (filterContabil = "") ) ;Tem que escolher pelo menos um desses filtros senão fica muito pesado
		do ExibeListaProdutosNuncaMovto(filterLocal,filterOrderBy,filterPrograma,filterGrupo,filterContabil,filterStatusItem)	
		quit
	}
	
	quit:(filterDiasSemMovto = "") // Não carregar caso estas informações não tenham sido preenchidas
	quit:(filterEstoque = "")
	
	set:(filterOrderBy = "") filterOrderBy = 1
	set:(filterEstoque = "") filterEstoque = 1
	set:(filterCriterio = "") filterCriterio = 1
	
	set lstTiposMovimentacao = $$GetTiposFromCriterio(filterCriterio)
	
	set rsEstoqueSemMovto = ##class(%ResultSet).%New()  ;Create Result Set Object

	set meuSQL = "SELECT ID, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Item, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Location, "
	set meuSQL = meuSQL_" to_char(alSOH.dStockHistory.DateConfirmed,'DD/MM/YYYY') as DteUltimoMovimento, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.MovementType_MovementTypeId as TipoMovto, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.TxType as TipoTxn, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Reference as Documento, "
	set meuSQL = meuSQL_" (current_date - alSOH.dStockHistory.DateConfirmed) as DiasSemMovto, "
	
  	if $$$SemLocalSemPrograma {
  		set meuSQL = meuSQL_" $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item) as QtdeAtualEstoque, " 			
  	} elseif $$$ComLocalSemPrograma {
  		set meuSQL = meuSQL_" $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item,'"_filterLocal_"') as QtdeAtualEstoque, "  	
  	} elseif $$$SemLocalComPrograma {
  		set meuSQL = meuSQL_" $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item,null,'"_filterPrograma_"') as QtdeAtualEstoque, "
  	} elseif $$$ComLocalComPrograma {  	
  		set meuSQL = meuSQL_" $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item,'"_filterLocal_"','"_filterPrograma_"') as QtdeAtualEstoque, "
	}

	if (filterLocal '= "") {		
		set meuSQL = meuSQL_" $$SQLGetCustoMedio^VARSQL(alSOH.dStockHistory.Item,'"_filterLocal_"') as CustoMedio, "
	} else {
		set meuSQL = meuSQL_" $$SQLGetCustoMedio^VARSQL(alSOH.dStockHistory.Item) as CustoMedio, "		
	}

	set meuSQL = meuSQL_" $$SQLGetDescricaoProduto^VARSQL(alSOH.dStockHistory.Item) as DescItem, "
	set meuSQL = meuSQL_" $$SQLGetUnitSigla^VARSQL(alSOH.dStockHistory.Item) as UN, "
	set meuSQL = meuSQL_" $$SQLGetLocationName^VARSQL(alSOH.dStockHistory.Location) as DescLocation, "
	set meuSQL = meuSQL_" $$GetGrupoTipoMovimento^VAREstoqueSemMovto(alSOH.dStockHistory.MovementType_MovementTypeId) as GrupoTipoMovto "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory "
	set meuSQL = meuSQL_" WHERE ID IN ( SELECT DISTINCT MAX(ID) FROM alSOH.dStockHistory "
	set meuSQL = meuSQL_"  WHERE alSOH.dStockHistory.MovementType_MovementTypeId IN ("_lstTiposMovimentacao_") "
	;set meuSQL = meuSQL_" AND alSOH.dStockHistory.Storage->Code != 'EmTransito' "
	set meuSQL = meuSQL_" AND alSOH.dStockHistory.Storage->Code != 'X' "
	if (filterEstoque = $$$SomenteProdutosComEstoque) {	
  		if $$$SemLocalSemPrograma {
  			set meuSQL = meuSQL_" AND $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item) > 0 " 			
  		} elseif $$$ComLocalSemPrograma {
  			set meuSQL = meuSQL_" AND $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item,'"_filterLocal_"') > 0 "  	
  		} elseif $$$SemLocalComPrograma {
  			set meuSQL = meuSQL_" AND $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item,null,'"_filterPrograma_"') > 0 "
  		} elseif $$$ComLocalComPrograma {  	
  			set meuSQL = meuSQL_" AND $$GetEstoqueOnHand^VARReposicao(alSOH.dStockHistory.Item,'"_filterLocal_"','"_filterPrograma_"') > 0 "
		}
	}
	
 	if (filterLocal '= "") {
 		set meuSQL = meuSQL_" AND alSOH.dStockHistory.Location->Code = '"_filterLocal_"'"
 	}
 	
 	if (filterPrograma '="") {
	 	set meuSQL = meuSQL_" AND alSOH.dStockHistory.Bundle->Program = '"_filterPrograma_"'"
 	}

 	if (filterGrupo '= "") {
	 	set meuSQL = meuSQL_" AND $$SQLGetGrupoItem^VARSQL(alSOH.dStockHistory.Item) = '"_filterGrupo_"' "
 	}	
	
 	if (filterContabil '= "") {
		set meuSQL = meuSQL_" AND $$SQLGetContaContabil^VARSQL(alSOH.dStockHistory.Item) = '"_filterContabil_"' "
	}
	
	if (filterStatusItem '= "") {
		set meuSQL = meuSQL_" AND $$SQLGetStatusProduto^VARSQL(alSOH.dStockHistory.Item) = "_filterStatusItem_" "
	}
	
	set meuSQL = meuSQL_" GROUP BY alSOH.dStockHistory.Item ) "	
	set meuSQL = meuSQL_" AND (current_date - alSOH.dStockHistory.DateConfirmed) > "_filterDiasSemMovto_" "	
	set meuSQL = meuSQL_" ORDER BY "_$$GetOrderBy(filterOrderBy)
	
 	do rsEstoqueSemMovto.Prepare(meuSQL)  ;Prepare Query
	do rsEstoqueSemMovto.Execute()  	  ;Execute Query
	
	//Tabela
   	new lstHeader
 	set lstHeader = ""
  	set lstHeader = lstHeader_$listbuild("Seq.","Cód.","Produto","Estoque","UN","Último Local a Movimentar","Tipo de Movto.","Data","Qt. Dias&nbsp;<br />&nbsp;&nbsp;sem Movto.","Custo&nbsp;<br />&nbsp;&nbsp;Unitário (R$)","Valor&nbsp;<br />&nbsp;&nbsp;Total (R$)")
  	
  	if $$Start^COMTable(lstHeader) {
		set count = 0
		set fltValorTotal = 0
		set fltValorTotalGeral = 0	

		While (rsEstoqueSemMovto.Next()) {
			
			set idProduto 	   = rsEstoqueSemMovto.GetDataByName("Item")
			set descProduto    = rsEstoqueSemMovto.GetDataByName("DescItem")			
			set idLocal	  	   = rsEstoqueSemMovto.GetDataByName("Location")
			set descLocal	   = rsEstoqueSemMovto.GetDataByName("DescLocation")
			set qtdeEstoque    = rsEstoqueSemMovto.GetDataByName("QtdeAtualEstoque")	
			set unidMedida	   = rsEstoqueSemMovto.GetDataByName("UN")			
			set custoMedio     = rsEstoqueSemMovto.GetDataByName("CustoMedio")
			set GrupoTipoMovto = rsEstoqueSemMovto.GetDataByName("GrupoTipoMovto")			
			set dteUltimoMovto = rsEstoqueSemMovto.GetDataByName("DteUltimoMovimento")
			set DiasSemMovto   = rsEstoqueSemMovto.GetDataByName("DiasSemMovto")			
			set TipoMovto	   = rsEstoqueSemMovto.GetDataByName("TipoMovto")
			set TipoTxn		   = rsEstoqueSemMovto.GetDataByName("TipoTxn")
			set Documento	   = rsEstoqueSemMovto.GetDataByName("Documento")

			set fltValorTotal = (qtdeEstoque * custoMedio)
			set fltValorTotalGeral  = fltValorTotalGeral + fltValorTotal			
			set count = $increment(count)
			
			set descMovmtType = $$GetMovmtType^VARStockHistory(TipoMovto,TipoTxn)
			
			do NewLine^COMTable()
	    	do InsertCell^COMTable(count)
	    	do InsertCell^COMTable(idProduto)
	    	do InsertCell^COMTable(descProduto,,,,,,,,,$$$YES)
	    	do InsertCell^COMTable($$^WWWTR(0,12,qtdeEstoque),,,,"right")	    	
	    	do InsertCell^COMTable(unidMedida,,,,"center")	    	
	    	do InsertCell^COMTable(descLocal)	    	
	    	do InsertCell^COMTable("<span title='"_descMovmtType_" nº. "_Documento_"'>"_GrupoTipoMovto_"</span>",,,,"center")
	    	do InsertCell^COMTable(dteUltimoMovto,,,,"center")
	    	do InsertCell^COMTable(DiasSemMovto,,,,"right")
	    	do InsertCell^COMTable($$^WWWTR(0,8,custoMedio,4),,,,"right")
	    	do InsertCell^COMTable($$^WWWTR(0,8,fltValorTotal,4),,,,"right")	    	
	    	do EndLine^COMTable()
		}
			
		if (count > 0) {
			do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Valor Total</strong>&nbsp;",,,,"right",,10)
			do InsertCell^COMTable("<strong>R$ "_$$^WWWTR(0,8,fltValorTotalGeral,2)_"</strong>",,,,"right")
			do EndLine^COMTable()
		
		} elseif (count = 0) {
			do NewLine^COMTable("white")
			do InsertCell^COMTable("&nbsp;Nenhum registro encontrado.",,,,,,11)
			do EndLine^COMTable()
		}
		
		do Stop^COMTable()	
  	}
	
	do rsEstoqueSemMovto.Close()
	
	quit	

	/*
OldMontaGrid
	;MontaGrid^VAREstoqueSemMovto
	;
	;Histórico:
	;
	;2010-04-26	Sósthenes	Modificado método de geração do grid e implementado o filtro de locais.
	
	
	new Produto,DescProduto,Unidade,CustoMedio,UltimoMovto

	new filterItem, Item, Local, Storage, Quantidade, Lote, Validade, totalQty, isBlockedStorage,
		prefixStyle, posfixStyle, reasonBlocked, descBlocked, pOrderBy,EstoqueSemMovto,meuSQL,filterExZerados,
		filterPrograma,filterGrupo,filterMovInterna
	
	set filterLocal 	= $get(VORG(1))
	set DiasSemMovto	= $get(VORG(2))
	set pOrderBy     	= $get(VORG(3))
	set filterExZerados = $get(VORG(4))
	set filterPrograma 	= $get(VORG(5))
	set filterGrupo	    = $get(VORG(6))
	set filterMovInterna= $get(VORG(7))
	set filterContabil	= $get(VORG(8))
	
	quit:(DiasSemMovto="") // Não carregar de primeira
	if pOrderBy = "" set pOrderBy = 1
	;if DiasSemMovto = "" set DiasSemMovto = 30
	
	Set EstoqueSemMovto = ##class(%ResultSet).%New()  ;Create Result Set Object
	
 	set meuSQL = "SELECT DISTINCT "
 	set meuSQL = meuSQL_"INART.ItemNumber as Produto, "
 	set meuSQL = meuSQL_"INART.SearchName as Descricao, "
 	set meuSQL = meuSQL_"$$SQLGetDescCompletaUnit^VARTCISQL(INART.UnitOfMeasure) as UnidadeMedida, "
 	if (filterLocal '= "") {
 		set meuSQL = meuSQL_"$$SQLGetCustoMedio^VARSQL(INART.ItemNumber,"_filterLocal_") as CustoMedio, "
 	} else {
	 	set meuSQL = meuSQL_"$$SQLGetCustoMedio^VARSQL(INART.ItemNumber) as CustoMedio, "
 	}
 	set meuSQL = meuSQL_"to_char(max(alSOH.dStockHistory.DateConfirmed),'DD/MM/YYYY') as UltimoMovto, "
 	set meuSQL = meuSQL_"(current_date - max(alSOH.dStockHistory.DateConfirmed)) as Dias, "
 	if (filterLocal '= "") {
 		set meuSQL = meuSQL_"$$GetEstoqueDisponivel^VARReposicao(INART.ItemNumber,"_filterLocal_") as EstqDisp, "
 	} else {
	 	set meuSQL = meuSQL_"$$GetEstoqueDisponivel^VARReposicao(INART.ItemNumber) as EstqDisp, "
 	}
 	if (filterLocal '= "") {
 		set meuSQL = meuSQL_"$$GetEstoqueOnHand^VARReposicao(INART.ItemNumber,"_filterLocal_") as EstqTotal "
 	} else {
	 	set meuSQL = meuSQL_"$$GetEstoqueOnHand^VARReposicao(INART.ItemNumber) as EstqTotal "
 	}
 	set meuSQL = meuSQL_"FROM alSOH.dStockHistory "
 	set meuSQL = meuSQL_"INNER JOIN SQLUser.INART on (SQLUser.INART.ItemNumber = alSOH.dStockHistory.Item) "
 	set meuSQL = meuSQL_"WHERE Company = 0 "
 	if (filterLocal '= "") {
 		set meuSQL = meuSQL_"AND alSOH.dStockHistory.Location->Code = '"_filterLocal_"'"
 		if (filterExZerados '="") {
	 		set meuSQL = meuSQL_"AND $$GetEstoqueDisponivel^VARReposicao(INART.ItemNumber,"_filterLocal_") > 0"
 		}	 		
 	} else {
	 	if (filterExZerados '="") {
	 		set meuSQL = meuSQL_"AND $$GetEstoqueDisponivel^VARReposicao(INART.ItemNumber) > 0"
	 	}
 	}
 	if (filterPrograma '="") {
	 	set meuSQL = meuSQL_"AND alSOH.dStockHistory.Bundle->Program = "_filterPrograma_" "
 	}
 	if filterGrupo '="" {
	 	set meuSQL = meuSQL_"AND INART.ItemGroup = '"_filterGrupo_"' "
 	}
  	if filterMovInterna=1 {
	 	set meuSQL = meuSQL_"AND $$SQLGetMovTypeNumber^VARSQL(alSOH.dStockHistory.MovementType)!= 5 and $$SQLGetMovTypeNumber^VARSQL(alSOH.dStockHistory.MovementType)!=51  "
 	}
 	if (filterContabil '= ""){
		set meuSQL = meuSQL_"AND $$SQLGetContaContabil^VARSQL(INART.ItemNumber) = '"_filterContabil_"' "
	}
 	set meuSQL = meuSQL_"GROUP BY alSOH.dStockHistory.Item "
 	set meuSQL = meuSQL_"HAVING (current_date - max(alSOH.dStockHistory.DateConfirmed)) >= "_DiasSemMovto_" "
 	set meuSQL = meuSQL_"ORDER BY "_pOrderBy
 	
 	set ^zzSosthenes("SQL") = meuSQL
 	Do EstoqueSemMovto.Prepare(meuSQL)  ;Prepare Query
	Do EstoqueSemMovto.Execute()  ;Execute Query	
	
	//Tabela
   	new lstHeader
 	set lstHeader = ""
  	set lstHeader = lstHeader_$listbuild("Cód.","Produto","Unidade","Estq. Disponível","Estq. Total","Custo Médio (R$)","Valor Total Disp. (R$)","Último Movto.","Dias Sem Movto.")
  	
  	if $$Start^COMTable(lstHeader) {
		set count 		  = 0
		set fltValorTotal = 0
		set fltTotalDisp  = 0
		
	While (EstoqueSemMovto.Next()) {
				
				set Produto    		= EstoqueSemMovto.GetData(1)
				set DescProduto		= EstoqueSemMovto.GetData(2)
				set Unidade      	= EstoqueSemMovto.GetData(3)
				set CustoMedio    	= EstoqueSemMovto.GetData(4)
				set UltimoMovto 	= EstoqueSemMovto.GetData(5)
				set NumDias			= EstoqueSemMovto.GetData(6)
				set QtyStockAvl		= EstoqueSemMovto.GetData(7)
				set QtyStockTotal	= EstoqueSemMovto.GetData(8)
				
				set fltValorTotal   = QtyStockAvl*CustoMedio
				
				set TotalItem = 0
			 	set objItem = $get(^INART(YM,Produto,1))
			 	continue:objItem=""
			 	continue:Produto=2
			
				set count = $increment(count)
				set fltTotalDisp = fltTotalDisp + fltValorTotal
				
			do NewLine^COMTable()
	    	;do InsertCell^COMTable(count)
	    	do InsertCell^COMTable(Produto)
	    	do InsertCell^COMTable(DescProduto,,,,,,,,,1)
	    	do InsertCell^COMTable(Unidade)
	    	do InsertCell^COMTable(QtyStockAvl)
	    	do InsertCell^COMTable(QtyStockTotal)
	    	do InsertCell^COMTable($$^WWWTR(0,8,CustoMedio,4),,,,"RIGHT")
	    	do InsertCell^COMTable($$^WWWTR(0,8,fltValorTotal,4),,,,"RIGHT")
	    	do InsertCell^COMTable(UltimoMovto,,,,"CENTER")
	    	do InsertCell^COMTable(NumDias,,,,"RIGHT")
	    	do EndLine^COMTable()
		}
			
		if (count > 0) {
			do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Valor Total Disponível</strong>",,,,"RIGHT",,8)
			do InsertCell^COMTable("<strong>R$ "_$$^WWWTR(0,8,fltTotalDisp,2)_"</strong>",,,,"RIGHT")
			do EndLine^COMTable()
		}
		
		do Stop^COMTable()	
  	}
	
	do EstoqueSemMovto.Close()
	
	quit
	*/
	
Imprimir()
	;do Imprimir^VAREstoqueSemMovto()
	
	new Local, DiasSemMovto, OrderBy, Estoque, Programa, Grupo, Criterio, ContaContabil,
		statusItem

	set objTemp = $get(^VARTempEstoqueSemMovto(YM,YBED,1))
	
	set Local 	   		= $piece(objTemp,Y,1)
	set DiasSemMovto 	= $piece(objTemp,Y,2)
	set OrderBy     	= $piece(objTemp,Y,3)
	set Estoque     	= $piece(objTemp,Y,4)
	set Programa 	   	= $piece(objTemp,Y,5)
	set Grupo	       	= $piece(objTemp,Y,6)
	set Criterio	   	= $piece(objTemp,Y,7)
	set ContaContabil	= $piece(objTemp,Y,8)
	set statusItem   	= $piece(objTemp,Y,9)
		
	;quit:(DiasSemMovto = "") // Não carregar caso esta informação não tenha sido preenchida

	set:(OrderBy = "") OrderBy = 1
	set:(Estoque = "") Estoque = 1
	set:(Criterio = "") Criterio = 1

	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	do RunReportEstoqueSemMovto^VARJasperRunReport(Local,DiasSemMovto,OrderBy,Estoque,Programa,Grupo,Criterio,ContaContabil,statusItem)
	
	quit	
	
GetTiposFromCriterio(pCriterio)
	quit:(pCriterio = "") ""	
	$$$VAR
	
	new listMovimentos
	set listMovimentos = ""
	
	if (pCriterio = $$$SomenteSaida) {
		set listMovimentos = "7,8,11,21,30,35,38"
	}
	
	elseif (pCriterio = $$$SomenteEntrada) {	
		set listMovimentos = "1,22,31,32,36,37"
	}
	
	elseif (pCriterio = $$$EntradaeSaida) {
		set listMovimentos = "1,7,8,11,21,22,30,31,32,35,36,37,38"
	}
	
	elseif (pCriterio = $$$TodosMovtos) {
		set listMovimentos = "1,5,7,8,11,21,22,30,31,32,35,36,37,38,40,41,51"
	}
	
	quit listMovimentos
	
GetGrupoTipoMovimento(pidTipo)
	quit:(pidTipo = "") ""
	
	new descTipoGrupoMovto
	/* set descTipoGrupoMovto = $case(pidTipo,1:"Entrada",22:"Entrada",31:"Entrada",32:"Entrada",36:"Entrada",37:"Entrada",
								 7:"Saída",8:"Saída",11:"Saída",21:"Saída",30:"Saída",35:"Saída",38:"Saída",
								 5:"Movim. Interna",51:"Movim. Interna")								 
	*/
	
	if ( (pidTipo = 1) || (pidTipo = 22) || (pidTipo = 31) || (pidTipo = 32) || (pidTipo = 36) || (pidTipo = 37) ) {
		set descTipoGrupoMovto = "Entrada"
		
	} elseif ( (pidTipo = 7) || (pidTipo = 8) || (pidTipo = 11) || (pidTipo = 21) || (pidTipo = 30) || (pidTipo = 35) || (pidTipo = 38) ) {
		set descTipoGrupoMovto = "Saída"
		
	} elseif ( (pidTipo = 5) || (pidTipo = 51) ) {
		set descTipoGrupoMovto = "Mov. Interna"
	
	} elseif ( (pidTipo = 40) || (pidTipo = 41) ) {
		set descTipoGrupoMovto = "Ajuste"
	} else {
		set descTipoGrupoMovto = "NA ("_pidTipo_")" ;Não identificado
	}

	quit descTipoGrupoMovto
	
	
GetOrderBy(pidOrder)
	quit:(pidOrder = "") "alSOH.dStockHistory.Item asc"
	
	if (pidOrder = 1) {
		quit "alSOH.dStockHistory.Item asc"
	
	} elseif (pidOrder = 2) {
		quit "Item->Description asc"
	
	} elseif (pidOrder = 6) {
		quit "alSOH.dStockHistory.DateConfirmed asc"
	}
	
	quit "alSOH.dStockHistory.Item asc"
	
	

ExibeListaProdutosNuncaMovto(pLocal,pOrderBy,pPrograma,pGrupo,pContabil,pStatusItem)
	new SQLSemMovto, rsProdutosSemMovto, lstHeader, count, lstHeader
	
	set SQLSemMovto = ""
	set SQLSemMovto = SQLSemMovto_" SELECT ItemNumber as Item, "
	set SQLSemMovto = SQLSemMovto_" SearchName as DescItem, "
	set SQLSemMovto = SQLSemMovto_" HoldReason as StatusItem, "
	set SQLSemMovto = SQLSemMovto_" $$SQLGetSiglaUnit^VARSQL(UnitofMeasure) as UoM, "
	set SQLSemMovto = SQLSemMovto_" ItemGroup as Grupo, "
	set SQLSemMovto = SQLSemMovto_" FREE3 as ContaContabil, "
	set SQLSemMovto = SQLSemMovto_" DateCreated as DataCriacao, "
	set SQLSemMovto = SQLSemMovto_" DateChanged as DataAlteracao "
	set SQLSemMovto = SQLSemMovto_" FROM INART "
	set SQLSemMovto = SQLSemMovto_" WHERE ItemNumber NOT IN ( "
	set SQLSemMovto = SQLSemMovto_" 		  	SELECT DISTINCT Item FROM alSOH.dStockHistory WHERE Item is not null "	
 	
 	if (pLocal '= "") {
	 	set SQLSemMovto = SQLSemMovto_" 	  	AND alSOH.dStockHistory.Location->Code = '"_pLocal_"'"
 	}
 	
 	if (pPrograma '= "") {
	 	set SQLSemMovto = SQLSemMovto_" 		AND alSOH.dStockHistory.Bundle->Program = '"_pPrograma_"'"
 	}
	
	set SQLSemMovto = SQLSemMovto_" 			) "
	
	if (pGrupo '= "") {
		set SQLSemMovto = SQLSemMovto_" AND ItemGroup = '"_pGrupo_"' "
	}
	
 	if (pContabil '= "") {
		set SQLSemMovto = SQLSemMovto_" AND FREE3 = '"_pContabil_"' "
	}
	
	if (pStatusItem '= "") {
		set SQLSemMovto = SQLSemMovto_" AND HoldReason = '"_pStatusItem_"' "
	}
	
	if (pOrderBy = 2) {
		set SQLSemMovto = SQLSemMovto_" ORDER BY SearchName asc "
	} else {
		set SQLSemMovto = SQLSemMovto_" ORDER BY ItemNumber asc "
	}
	
	set rsProdutosSemMovto = ##class(%ResultSet).%New()  ;Create Result Set Object
	
 	do rsProdutosSemMovto.Prepare(SQLSemMovto)  ;Prepare Query
	do rsProdutosSemMovto.Execute()  	  		;Execute Query
	
	//Tabela
 	set lstHeader = ""
  	set lstHeader = lstHeader_$listbuild("Seq.","Código","Produto","UN","Grupo","Status","Data de&nbsp;<br />&nbsp;&nbsp;Cadastro","Última Alteração&nbsp;</br >&nbsp;&nbsp;no Cadastro")
  	
  	if $$Start^COMTable(lstHeader) {
		
		set count = 0

		While (rsProdutosSemMovto.Next()) {
			
			new idProduto, descProduto, unidMedida, grupoItem, contaContab, statusItem, dteCriado, dteAlterado
			
			set idProduto 	= rsProdutosSemMovto.GetDataByName("Item")
			set descProduto = rsProdutosSemMovto.GetDataByName("DescItem")
			set unidMedida  = rsProdutosSemMovto.GetDataByName("UoM")
			set grupoItem	= rsProdutosSemMovto.GetDataByName("Grupo")
			set contaContab	= rsProdutosSemMovto.GetDataByName("ContaContabil")
			set statusItem	= rsProdutosSemMovto.GetDataByName("StatusItem")
			set dteCriado   = rsProdutosSemMovto.GetDataByName("DataCriacao")
			set dteAlterado = rsProdutosSemMovto.GetDataByName("DataAlteracao")
			
			if (statusItem = 0) {
				set statusItem = "<font color='blue'>"_$piece($get(^INItemStatus(YM,statusItem,1)),Y,1)_"</font>"
			} elseif (statusItem = 1) {
				set statusItem = "<font color='red'>"_$piece($get(^INItemStatus(YM,statusItem,1)),Y,1)_"</font>"				
			} else {				
				set:(statusItem '= "") statusItem = $piece($get(^INItemStatus(YM,statusItem,1)),Y,1) // o set:(stat...) evita subscript
			}
			
			set:(contaContab '= "") contaContab = $$SQLGetDescContaContabil^VARSQL(contaContab)
			
			set:(dteCriado '= "") dteCriado = $zdate(dteCriado,4)
			set:(dteAlterado '= "") dteAlterado = $zdate(dteAlterado,4)
			set count = $increment(count)
			

			do NewLine^COMTable()
	    	do InsertCell^COMTable(count)
	    	do InsertCell^COMTable(idProduto,"INART",idProduto)
	    	do InsertCell^COMTable(descProduto,"INART",idProduto,,,,,,,$$$YES)
	    	do InsertCell^COMTable(unidMedida,,,,"center")
	    	do InsertCell^COMTable(grupoItem,,,,"left")
	    	do InsertCell^COMTable(statusItem,,,,"center")
	    	do InsertCell^COMTable(dteCriado,,,,"center")
	    	do InsertCell^COMTable(dteAlterado,,,,"center")
	    	do EndLine^COMTable()
				
		}

		if (count = 0) {
			do NewLine^COMTable("white")
			do InsertCell^COMTable("&nbsp;Nenhum registro encontrado.",,,,,,8)
			do EndLine^COMTable()
		}
		
		do Stop^COMTable()
  	}
	
	do rsProdutosSemMovto.Close()
	quit
	
	
PrintJS
	write !, "<script language=""javascript"">"
	
	&js<
	
		function OnLoadOrderBy() {
			OnBlurLocal();	
		}
		
		function OnBlurLocal() {
			if (document.getElementById('Y#(YFORM)#M7').value == 5) {
				// Desabilita o campo Dias Sem Movimentação
				document.getElementById('Y#(YFORM)#M2').disabled = true;	
				document.getElementById('Y#(YFORM)#M2').value = "";
				document.getElementById('Y#(YFORM)#M2').style.background = '#E0E0E0';
				
				// Desabilita o campo Estoque
				document.getElementById('Y#(YFORM)#M4').disabled = true;	
				document.getElementById('Y#(YFORM)#M4').value = "";	
				document.getElementById('Y#(YFORM)#M4').style.background = '#E0E0E0';			
			
			} else {
				document.getElementById('Y#(YFORM)#M2').disabled = false;
				document.getElementById('Y#(YFORM)#M2').style.background = '#EEE8AA';
				
				document.getElementById('Y#(YFORM)#M4').disabled = false;
				document.getElementById('Y#(YFORM)#M4').style.background = '#EEE8AA';
			}				
		}		
		
		function addEvent(obj, evType, fn) {
 			if (obj.addEventListener) {
   				obj.addEventListener(evType, fn, false);
   				return true;
 			} else if (obj.attachEvent){
   				var r = obj.attachEvent('on'+evType, fn);
   				return r; 
 			} else {
   				return false;
 			}
		}		

		addEvent(document.forms[1].YVAREstoqueSemMovtoM7, 'blur', OnBlurLocal);
		addEvent(window,'load', OnLoadOrderBy);
			
	>
	
	write !, "</script>"
	
	quit
	

]]></Routine>
</Export>