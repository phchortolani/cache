<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW001O" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW001O ;WWW001O;DT;DRUCKEN OPJECTSCRIPT;07.11.1997  ; Compiled January 11, 2005 17:15:13  ; Compiled January 26, 2005 21:57:10
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		DRUCKEN OPJECTSCRIPT
	;
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 15-May-2007	GRF		Naked references; expand commands; quits; convert surplus
	; 							WRITE commands to commas; mark disabled blocks.
	; 							Since the changes are to the block of approx 500 lines
	; 							found to be disabled, no SR was created.
	; 01-Jun-2005	RPW		SR12056: Attempt at Performance Increase
	; 07.11.1997	DT
	;-------------------------------------------------------------------------------
	; ### 030103 SCR Package overide, default to user if no package is specified
	NEW I,VERZ,LW,VERZ1,%DEV,DELIM,OBJECT,SPRACHE,DESCRI,DESKRI,CAPTION,NOCOMPILE,YDATA,class
	
	;VORG(1)=KLASSE
	;VORG(3)=1 AUTO COMPILE ;motor-car 
	IF $GET(SPRACHE)="" SET SPRACHE="EN"   ;TYBD;17.05.2004;
	SET VORG(1)=$TRANSLATE(VORG(1),",",";")
	IF VORG(1)="" IF VORG(3)=1 DO CREATEALL^WWW001OO QUIT  ;COMPILE ALL;TYBD;26,1,2004
	DO CREATEPART^WWW001OO
	QUIT
	
	
	;*******************************************************************************
	;
	;                 vvvvv DISABLED BLOCK FROM HERE ONWARDS vvvvv
	;
	;*******************************************************************************
	
	
	IF VORG(1)="" IF VORG(3)=1 DO   ;COMPILE ALL
	. NEW VORGX
	. SET VORGX=""
	. FOR  SET VORGX=$ORDER(^WWW001(0,VORGX)) QUIT:VORGX=""  DO
	. . ;Q:VORGX="WWW000"
	. . SET VORG(1)=VORGX
	. . SET VORG(3)=1
	. . DO NEU
	. . DO
	. . . NEW VORGX
	. . . DO ^WWW001O
	
	;QUIT:VORG(1)=""
	SET SP="   "
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	;GENERIEREN XML DTD FILE
	;IF $PIECE($GET(^WWW012(0,YM,1)),Y,98)'="" DO
	. FOR I=1:1 QUIT:$PIECE(VORG(1),";",I)=""  SET VORGX=$PIECE(VORG(1),";",I) DO
	. . IF '$DATA(^WWW002(0,VORGX)) QUIT
	. . ;DO ^WWWXML(VORGX,"",$$^WWWLOW(VORGX_".DTD"),1)
	. . DO ^WWWXML(VORGX,"",$zconvert(VORGX_".DTD","L"),1)
	. ;
	. DO OPEN^WWWSTART
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	
	SET NOCOMPILE=1  ;KEIN KOMPILE ;no 
	KILL ^WWWSOR(YUSER)
	SET LW="ATNET.CDL"
	SET VERZ=""
	SET VERZ1=""
	IF LW'="" IF '$FIND(LW,":") DO
	. SET VERZ=$TRANSLATE($PIECE($GET(^WWW012(0,YM,1)),Y,45),"\Ö/",$CHAR(92)_$CHAR(92)_$CHAR(92))
	. IF $EXTRACT(VERZ,$LENGTH(VERZ))'=$CHAR(92) SET VERZ=VERZ_$CHAR(92)
	. SET VERZ1=$PIECE($GET(^WWW012(0,YM,1)),Y,46)
	. IF VERZ1'="" IF $EXTRACT(VERZ1,$LENGTH(VERZ1))'="/" SET VERZ1=VERZ1_"/"
	. IF VERZ1'="" SET VERZ1=VERZ1_LW
	
	SET LW=VERZ_LW
	SET LW=$TRANSLATE(LW,"\Ö/",$CHAR(92)_$CHAR(92)_$CHAR(92))
	IF $FIND($ZVERSION,"Linux") SET LW=$TRANSLATE($GET(LW),"\","/")  ;BEC;26462;28.09.04;LINUX
	IF LW'="" DO
	. IF VERZ1'="" DO
	. . DO ^WWWBACK
	. . WRITE "<BR>"
	. . WRITE " <A HREF="_""""_"ftp://"_VERZ1_""""_">"
	. . WRITE YCR,"<IMG SRC="_""""_YGIF_"docu.gif"_""""_" TITLE="_""""_VERZ1_""""_" border=0>"
	. . WRITE VERZ1,YCR
	. . WRITE "</A>"
	
	SET %DEV=$$^WWWDEV(LW)
	;SET %DEV=""  ;TEST
	IF %DEV'="" USE %DEV
	DO   ;GGF HEADER
	. WRITE "/***********************************************************************\",YCR
	. WRITE "|         File: AtNet.cdl                                               |",YCR
	. WRITE "|       Author: @net Manager                                            |",YCR
	. WRITE "|         Date: "_$$^WWWDATE($horolog)_" "_$$^WWWTIME($HOROLOG)_"                                     |",YCR
	. WRITE "|  Description: This File was generated by @net Manager                 |",YCR
	. WRITE "\***********************************************************************/",YCR
	
	SET YXCHAR=""
	FOR I=128:1:255 SET YXCHAR=YXCHAR_$CHAR(I)
	;FOR I=1:1 QUIT:$PIECE(VORG(1),";",I)=""  SET VORGX=$PIECE(VORG(1),";",I) DO
	SET VORGX="" FOR  SET VORGX=$ORDER(^WWW001(0,VORGX)) QUIT:VORGX=""  DO
	. IF VORG(1)'="" QUIT:'$FIND(";"_VORG(1)_";",";"_VORGX_";")  ;NICHT AUSGEWÄHLT
	. IF '$DATA(^WWW002(0,VORGX)) QUIT
	. QUIT:VORGX="WWW000"   ;ROUTINE
	. SET YDATA=$GET(^WWW001(0,VORGX,1))
	. QUIT:$PIECE(YDATA,Y,21)=1  ;KEIN COMPILE GEMAPED ;no 
	. SET NOCOMPILE=0  ;COMPILE OK
	. ;D NEU  ;NEUE ÜBERTRAGUNG ;recent translation 
	. SET DELIM=$PIECE(YDATA,Y,11)
	. SET OBJECT=+$PIECE(YDATA,Y,8)
	. IF OBJECT'=0 IF OBJECT'=4 IF OBJECT'=3 QUIT  ;NICHT AUSWERTEN WENN ROUTINE ODER ABA ODER SONSTIGES ;Not when routine Or Or 
	. IF +DELIM=0 SET DELIM=126  ;TRENNZEICHNEN
	. SET SORT=""
	. DO  ;CHECK IF WORDS ARE DOUBLE ;stand-in 
	. . KILL ^WWWSOR(YUSER)
	. . SET LFN=""
	. . FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . . QUIT:$PIECE(LF,Y,25)=""  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . . IF $DATA(^WWWSOR(YUSER,$PIECE(LF,Y,25))) SET $PIECE(^WWW003(0,VORGX,LFN,1),Y,25)="" QUIT
	. . . IF $EXTRACT($PIECE(LF,Y,25))=0!(+$EXTRACT($PIECE(LF,Y,25))'=0) SET $PIECE(^WWW003(0,VORGX,LFN,1),Y,25)="" QUIT  ;KEINE ZAHLEN AM ANFANG;FIS;21.04.04;25326
	. . . SET ^WWWSOR(YUSER,$PIECE(LF,Y,25))=""
	. ;
	. DO ^WWWSORTKEY(VORGX)
	. KILL ^WWWSOR(YUSER)
	. ;
	. ;RESERVIERTE WÖRTER
	. SET ^WWWSOR(YUSER,$$^WWWTEXT("400;Mandant"))="" 
	. SET RESN=""
	. FOR  SET RESN=$ORDER(^WWWRES(0,RESN)) QUIT:RESN=""  DO
	. . SET ATTX=$$^WWWUMLAU($GET(^WWWRES(0,RESN,1)),5)
	. . QUIT:ATTX=""
	. . SET ^WWWSOR(YUSER,ATTX)=""
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW002(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW002(0,VORGX,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . SET ATTX=""
	. . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" do
	. . . SET $PIECE(LF,Y,1)=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)     ; Naked Ref
	. . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET $PIECE(LF,Y,1)=$PIECE(LF,Y,25)  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . IF ATTX'="" SET ATTXX=ATTX FOR ATTNU=1:1 DO  IF '$DATA(^WWWSOR(YUSER,ATTX)) SET ^WWWSOR(YUSER,ATTX)="" SET ^WWWSOR(YUSER,222,LFN)=ATTX QUIT
	. . . IF '$DATA(^WWWSOR(YUSER,ATTX)) QUIT
	. . . SET ATTX=ATTXX_ATTNU
	. . ;
	. . IF ATTX'="" IF $TRANSLATE($PIECE(LF,Y,25)," ")="" SET $PIECE(^WWW002(0,VORGX,LFN,1),Y,25)=ATTX
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . SET ATTX=""
	. . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" do
	. . . SET $PIECE(LF,Y,1)=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)     ; Naked Ref
	. . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET $PIECE(LF,Y,1)=$PIECE(LF,Y,25)  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . IF ATTX'="" SET ATTXX=ATTX FOR ATTNU=1:1 DO  IF '$DATA(^WWWSOR(YUSER,ATTX)) SET ^WWWSOR(YUSER,ATTX)="" SET ^WWWSOR(YUSER,333,LFN)=ATTX QUIT
	. . . IF '$DATA(^WWWSOR(YUSER,ATTX)) QUIT
	. . . SET ATTX=ATTXX_ATTNU
	. . ;
	. . IF ATTX'="" IF $TRANSLATE($PIECE(LF,Y,25)," ")="" SET $PIECE(^WWW003(0,VORGX,LFN,1),Y,25)=ATTX
	. ;
	. WRITE YCR,YCR
	. ;WRITE "drop class User.",VORGX,";",YCR
	. ;WRITE "create class User.",VORGX
	. set class=$select(VORGX[".":"",1:"User.")_VORGX      ; ### 030102 SCR
	. WRITE "create class ",class,YCR                      ; ### 030102 SCR
	. WRITE "{",YCR
	. WRITE SP,"description = "_YCR_"          {" 
	. DO  
	. . SET DESCRI="          "
	. . SET DESCRI=DESCRI_$PIECE(YDATA,Y,1)
	. . IF $DATA(^WWW0011(0,VORGX,SPRACHE,1)) SET DESCRI=DESCRI_" / "_$PIECE(^WWW0011(0,VORGX,SPRACHE,1),Y,1)     ; Naked Ref
	. . SET DESCRI=DESCRI_":"
	. . SET DESCRI=DESCRI_"          <BR>"_$$^WWWTRANSLATE($PIECE(YDATA,Y,19),"|","<BR>")
	. . ;IF $GET(^WWW127(0,VORGX,"M",1,SPRACHE,1))'="" SET DESCRI=DESCRI_"          <BR><BR>"_$$^WWWTRANSLATE($TRANSLATE($GET(^WWW127(0,VORGX,"M",1,SPRACHE,1)),"~'"_""""),"|","<BR>")
	. . ;IF SPRACHE'="DE" IF $GET(^WWW127(0,VORGX,"M",1,"DE",1))'="" SET DESCRI=DESCRI_"          <BR><BR>"_$$^WWWTRANSLATE($TRANSLATE($GET(^WWW127(0,VORGX,"M",1,"DE",1)),"~'"_""""),"|","<BR>")
	. . ;QUIT
	. . ;SET DESCRI=DESCRI_YCR_"          <BR>"_$TRANSLATE($PIECE(YDATA,Y,19),"|",$CHAR(13))
	. . ;IF $GET(^WWW127(0,VORGX,"M",1,SPRACHE,1))'="" SET DESCRI=DESCRI_YCR_"          <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"M",1,SPRACHE,1)),"|~"_"""",$CHAR(13))
	. . ;IF SPRACHE'="DE" IF $GET(^WWW127(0,VORGX,"M",1,"DE",1))'="" SET DESCRI=DESCRI_YCR_"          <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"M",1,"DE",1)),"|~"_"""",$CHAR(13))
	. ;
	. WRITE $TRANSLATE(DESCRI,"²³","23"),"          }"   ;WRITE """"_";"
	. ;
	. SET RELA=0  ;PERSISTANT y/n
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW002(0,VORGX,LFN)) QUIT:LFN=""  DO  QUIT:RELA=1
	. . SET LF=$GET(^WWW002(0,VORGX,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . IF $PIECE(LF,Y,8)'="" SET RELA=1
	. ;
	. IF RELA=0 SET LFN="" FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . IF $PIECE(LF,Y,8)'="" SET RELA=1
	. ;
	. SET PERSIST="%Library.Persistent, %Library.Populate, %XML.Adaptor"   ;, %XML"
	. IF $FIND($ZVERSION,"4.1")!($FIND($ZVERSION,"4.0"))!($FIND($ZVERSION,"3.2")) SET PERSIST="%Library.Persistent, %Library.Populate"
	. ;IF RELA=0 SET PERSIST="%Library.Persistent, %Library.Populate "  ;, %XML"
	. ;IF $PIECE(YDATA,Y,20)'="" SET PERSIST="%"_$PIECE(YDATA,Y,20)
	. IF $PIECE(YDATA,Y,20)'="" DO       ;TYBD;25817
	. . NEW ADITTIONALCLASS,NEXTCLASS
	. . FOR NEXTCLASS=1:1 SET NEXTCLASS(1)=$PIECE($PIECE(YDATA,Y,20),";",NEXTCLASS) QUIT:NEXTCLASS(1)=""  DO
	. . . SET ADITTIONALCLASS=$PIECE($GET(^WWW101(0,"OBJECT",SPRACHE,NEXTCLASS(1),1)),Y,1)
	. . . IF '$FIND(PERSIST,$TRANSLATE(ADITTIONALCLASS," ")) DO
	. . . . IF PERSIST'="" SET ADITTIONALCLASS=", "_ADITTIONALCLASS
	. . . . SET PERSIST=PERSIST_ADITTIONALCLASS
	. ;
	. WRITE YCR
	. WRITE SP
	. WRITE "super = "_PERSIST_";"
	. WRITE YCR
	. WRITE SP
	. IF $FIND(PERSIST,"Persistent") DO 
	. . WRITE "persistent"
	. . IF OBJECT'=4 WRITE " = StorageAtNet"
	. . WRITE ";",YCR
	. . IF OBJECT=4 DO  ;ACHTUNG FELD 25!! ;estimation field 
	. . . NEW YSKEY,SKEY,YLFN,YI,YII,INDEXNAME
	. . . DO ^WWWSORTKEY(VORGX)
	. . . IF $DATA(YSKEY) SET YI="" FOR  SET YI=$ORDER(YSKEY(YI))  QUIT:YI=""  DO 
	. . . . WRITE YCR
	. . . . WRITE SP 
	. . . . SET YLFN=$PIECE(YSKEY(YI),",",1)
	. . . . IF YLFN="" QUIT 
	. . . . DO
	. . . . . IF $EXTRACT(YLFN)="F" IF $PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25)'="" SET INDEXNAME=$PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25) QUIT
	. . . . . IF $EXTRACT(YLFN)="K" IF $PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25)'="" SET INDEXNAME=$PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25) QUIT
	. . . . . IF $EXTRACT(YLFN)="F" IF $PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)'="" SET INDEXNAME=$TRANSLATE($PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT
	. . . . . IF $EXTRACT(YLFN)="K" IF $PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)'="" SET INDEXNAME=$TRANSLATE($PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT
	. . . . ;
	. . . . WRITE "index "_"Index"_YI_" { description = "_""""_INDEXNAME_" Index "_YI_""""_"; attributes = " DO  WRITE "; }"
	. . . . . FOR YII=1:1 SET YLFN=$PIECE(YSKEY(YI),",",YII) QUIT:YLFN=""  DO
	. . . . . . ;IF YII=1 WRITE """"_YI_""""
	. . . . . . IF YII'=1 WRITE ","
	. . . . . . IF $EXTRACT(YLFN)="F" IF $PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25)'="" WRITE $PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25) QUIT
	. . . . . . IF $EXTRACT(YLFN)="K" IF $PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25)'="" WRITE $PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,25) QUIT
	. . . . . . IF $EXTRACT(YLFN)="F" IF $PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)'="" WRITE $TRANSLATE($PIECE($GET(^WWW003(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT 
	. . . . . . IF $EXTRACT(YLFN)="K" IF $PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)'="" WRITE $TRANSLATE($PIECE($GET(^WWW002(0,VORGX,+$EXTRACT(YLFN,2,9),1)),Y,1)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT
	. . ;
	. . WRITE YCR
	. . WRITE SP
	. . ;
	. . IF $DATA(^WWW002(0,VORGX)) WRITE "index PriKeys { attributes = " DO  WRITE "; primarykey = 1; extent = 0; idkey = 1; unique = 0; }"
	. . . SET MAXKEY=$ORDER(^WWW002(0,VORGX,""),-1)
	. . . IF OBJECT=0 WRITE $$^WWWTEXT("400;Mandant")
	. . . IF OBJECT=0 IF $DATA(^WWW002(0,VORGX,1)) WRITE ","
	. . . SET LFN=""
	. . . FOR  SET LFN=$ORDER(^WWW002(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . . . SET LF=$GET(^WWW002(0,VORGX,LFN,1))
	. . . . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . . . IF $DATA(^WWWSOR(YUSER,222,LFN)) SET $PIECE(LF,Y,1)=^WWWSOR(YUSER,222,LFN)     ; Naked Ref
	. . . . IF LFN>1 WRITE ","
	. . . . DO
	. . . . . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" do
	. . . . . . SET $PIECE(LF,Y,1)=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)     ; Naked Ref
	. . . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET $PIECE(LF,Y,1)=$PIECE(LF,Y,25)  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . . WRITE $TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. ;
	. IF OBJECT=0 DO
	. . WRITE YCR
	. . WRITE YCR
	. . WRITE SP
	. . WRITE "attribute "_$$^WWWTEXT("400;Mandant")_" { type = %String(MAXLEN=30"
	. . DO
	. . . IF $FIND($ZVERSION,"4.1")!($FIND($ZVERSION,"4.0"))!($FIND($ZVERSION,"3.2")) QUIT
	. . . WRITE ", XMLPROJECTION="_""""_"attribute"_""""
	. . ;
	. . WRITE "); description = "_""""_$$^WWWTEXT("400;Mandant")_""""_";"
	. . WRITE " calculated = 0; not final; multidimensional = 0; public; required;         sqlcomputecode = { } sqlcomputed = 0; transient = 0; }"
	. . SET ^WWWSOR(YUSER,$$^WWWTEXT("400;Mandant"))="" 
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW002(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW002(0,VORGX,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . WRITE YCR
	. . WRITE SP
	. . WRITE "attribute " DO
	. . . DO
	. . . . SET CAPTION=$PIECE(LF,Y,2) IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET CAPTION=$PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1)     ; Naked Ref
	. . . . SET ATTX=""
	. . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25) QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" do  quit
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)     ; Naked Ref
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . FOR  QUIT:$EXTRACT(ATTX)'=0&(+$EXTRACT(ATTX)=0)  SET ATTX=$EXTRACT(ATTX,2,99)
	. . . ;
	. . . IF $DATA(^WWWSOR(YUSER,222,LFN)) SET ATTX=^WWWSOR(YUSER,222,LFN)     ; Naked Ref
	. . . ;S ATTXX=ATTX F ATTNU=1:1 D  I '$D(^WWWSOR(YUSER,ATTX)) S ^WWWSOR(YUSER,ATTX)="" S ^WWWSOR(YUSER,222,LFN)=ATTX Q
	. . . . IF '$DATA(^WWWSOR(YUSER,ATTX)) QUIT
	. . . . SET ATTX=ATTXX_ATTNU
	. . . ;
	. . . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . WRITE ATTX
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")="" SET $PIECE(^WWW002(0,VORGX,LFN,1),Y,25)=ATTX
	. . . DO
	. . . . SET DESKRI="         "
	. . . . SET DESKRI=DESKRI_$PIECE(LF,Y,2)
	. . . . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET DESKRI=DESKRI_" / "_$PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1)     ; Naked Ref
	. . . . SET DESKRI=YCR_"               {"_"                "_DESKRI_":"
	. . . . IF $GET(^WWW127(0,VORGX,"P",LFN,SPRACHE,1))'="" SET DESKRI=DESKRI_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"P",LFN,SPRACHE,1)),"|~"_""""," ")
	. . . . IF SPRACHE'="DE" IF $GET(^WWW127(0,VORGX,"P",LFN,"DE",1))'="" SET DESKRI=DESKRI_"  "_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"P",LFN,"DE",1)),"|~"_""""," ")
	. . . . SET DESKRI=$EXTRACT(DESKRI,1,100)_"                }"
	. . . ;
	. . . SET TYPE=$PIECE(LF,Y,3)
	. . . SET SIZE=$TRANSLATE($PIECE(LF,Y,4),"-")
	. . . IF $PIECE(LF,Y,26)'="" SET TYPE=$PIECE(LF,Y,26)  ;KLASSE ALS DATATYPE ;groovy when 
	. . . ;IF $PIECE(LF,Y,8)'="" IF $PIECE(LF,Y,9)="" SET TYPE=$PIECE(LF,Y,8)  ;RELATION = TYPE
	. . . DO ATTRIB(1)
	. . ;
	. . WRITE " { type = "_ATTRIB_"; description = "_$TRANSLATE(DESKRI,"""")
	. . WRITE " calculated = 0; not final; multidimensional = 0; public; required;        sqlcomputecode = { } sqlcomputed = 0; transient = 0; }"
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . WRITE YCR
	. . WRITE SP
	. . ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	. . ;DO
	. . . SET YBBN=$ORDER(^WWW122s(0,4,LFN,VORGX,""))
	. . . IF YBBN'="" IF $PIECE($GET(^WWW122(0,VORGX,YBBN,1)),Y,2)=6 WRITE "array " QUIT
	. . . QUIT:$PIECE(LF,Y,3)=2
	. . . ;I $P(LF,Y,8)="" W "list " Q   ;LISTE??
	. . ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	. . ;
	. . IF $PIECE(LF,Y,3)=15 WRITE "list "  ;liste
	. . WRITE "attribute "
	. . DO
	. . . DO
	. . . . SET CAPTION=$PIECE(LF,Y,2) IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET CAPTION=$PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1)     ; Naked Ref
	. . . . SET ATTX=""
	. . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25) QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" do  quit
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)     ; Naked Ref
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . FOR  QUIT:$EXTRACT(ATTX)'=0&(+$EXTRACT(ATTX)=0)  SET ATTX=$EXTRACT(ATTX,2,99)
	. . . ;
	. . . IF $DATA(^WWWSOR(YUSER,333,LFN)) SET ATTX=^WWWSOR(YUSER,333,LFN)     ; Naked Ref
	. . . ;S ATTXX=ATTX F ATTNU=1:1 D  I '$D(^WWWSOR(YUSER,ATTX)) S ^WWWSOR(YUSER,ATTX,LFN)="" S ^WWWSOR(YUSER,333,LFN)=ATTX Q
	. . . . IF '$DATA(^WWWSOR(YUSER,ATTX)) QUIT
	. . . . SET ATTX=ATTXX_ATTNU
	. . . ;
	. . . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . WRITE ATTX
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")="" SET $PIECE(^WWW003(0,VORGX,LFN,1),Y,25)=ATTX
	. . . DO
	. . . . NEW LFN1
	. . . . SET DESKRI=$PIECE(LF,Y,2)
	. . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" SET DESKRI=DESKRI_" / "_$PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1)     ; Naked Ref
	. . . . SET DESKRI=YCR_"               {"_"                "_DESKRI_":"
	. . . . SET LFN1=$ORDER(^WWW122s(0,5,VORGX,LFN,VORGX,""))
	. . . . IF LFN1'=""                  IF $GET(^WWW127(0,VORGX,"D",LFN1,SPRACHE,1))'="" SET DESKRI=DESKRI_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"D",LFN1,SPRACHE,1)),"|~"_""""," ")
	. . . . IF SPRACHE'="DE" IF LFN1'="" IF $GET(^WWW127(0,VORGX,"D",LFN1,"DE",1))'=""    SET DESKRI=DESKRI_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"D",LFN1,"DE",1)),"|~"_""""," ")    
	. . . . SET DESKRI=$EXTRACT(DESKRI,1,100)_"                }"
	. . . ;
	. . . SET TYPE=$PIECE(LF,Y,3)
	. . . SET SIZE=$TRANSLATE($PIECE(LF,Y,4),"-")
	. . . IF $PIECE(LF,Y,26)'="" SET TYPE=$PIECE(LF,Y,26)  ;KLASSE ALS DATATYPE ;groovy when 
	. . . ;IF $PIECE(LF,Y,8)'="" IF $PIECE(LF,Y,9)="" SET TYPE=$PIECE(LF,Y,8)  ;RELATION = TYPE
	. . . DO ATTRIB(2)
	. . ;
	. . WRITE " { type = "_ATTRIB_"; description = "_$TRANSLATE(DESKRI,"²³"_"""","23")
	. . IF $PIECE(LF,Y,18)=1 WRITE " required;"  ;PFLICHTFELD
	. . ;
	. . IF $PIECE(LF,Y,18)'=1 DO
	. . . SET YBBN=$ORDER(^WWW122s(0,4,LFN,VORGX,""))
	. . . IF YBBN'="" WRITE:$PIECE($GET(^WWW122(0,VORGX,YBBN,1)),Y,13)=1 " required;"  ;PFLICHTFELD
	. . ;
	. . WRITE " calculated = 0; not final; multidimensional = 0; public;  sqlcomputecode = { } sqlcomputed = 0; transient = 0; }"
	. ;
	. WRITE YCR,YCR
	. ;
	. IF '$FIND(PERSIST,"Persistent") do  QUIT  ;keine speicherung  ;None 
	. . ;WRITE SP,"}" 
	. . WRITE YCR,"}",YCR
	. ;
	. NEW YFILE,YFILES
	. SET YFILE=VORGX
	. IF $PIECE(YDATA,Y,22)'="" SET YFILE=$PIECE(YDATA,Y,22)
	. SET YFILES=VORGX_"s"
	. IF $PIECE(YDATA,Y,23)'="" SET YFILES=$PIECE(YDATA,Y,23)
	. ;
	. IF OBJECT=4 DO
	. . WRITE SP,"storage Default",YCR
	. . WRITE SP,"{",YCR
	. . WRITE SP,SP,"type = %CacheStorage;",YCR
	. . WRITE SP,SP,"datalocation = ^"_YFILE_";",YCR
	. . WRITE SP,SP,"indexlocation = ^"_YFILES_";",YCR
	. . WRITE SP,SP,"idlocation = ^"_YFILE_";",YCR
	. . WRITE SP,SP,"defaultdata = "_YFILE_"DefaultData;",YCR
	. . WRITE SP,SP,"data "_YFILE_"DefaultData",YCR
	. . WRITE SP,SP,"{",YCR
	. . WRITE SP,SP,SP,"structure = listnode;",YCR
	. . SET LFN=""
	. . FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . . QUIT:$FIND($PIECE(LF,Y,25),".")  ;NICHT WENN EMBEDDED ;Not when 
	. . . SET ATTX="" DO
	. . . . IF $DATA(^WWWSOR(YUSER,333,LFN))       SET ATTX=^WWWSOR(YUSER,333,LFN) QUIT  ; Naked Ref
	. . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25)        QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" do  quit
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)     ; Naked Ref
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . ;
	. . . WRITE SP,SP,SP,"value ("_LFN_")  = "_ATTX_";",YCR
	. . ;
	. . WRITE SP,SP,"}",YCR
	. . WRITE SP,"}",YCR
	. . WRITE "}",YCR
	. ;
	. ;Sortierschlüssel ;Index Key  ;Index Key Index Key 
	. QUIT:OBJECT=4
	. DO 
	. . WRITE SP,"storage StorageAtNet",YCR
	. . WRITE SP,"{",YCR
	. . WRITE SP,SP,"type = %CacheSQLStorage;",YCR
	. . WRITE SP,SP,"sql",YCR
	. . WRITE SP,SP,"{",YCR
	. ;
	. DO                      ;IF SORT=1 DO   ;SORT VORHANDEN ;on hand 
	. . SET SORT=""
	. . FOR  SET SORT=$ORDER(YSKEY(SORT)) QUIT:SORT=""  DO
	. . . WRITE SP,SP,SP,"map SortIndex"_SORT,YCR
	. . . WRITE SP,SP,SP,"{",YCR
	. . . WRITE SP,SP,SP,SP,"global = ^"_YFILES_";",YCR
	. . . WRITE SP,SP,SP,SP,"structure = list;",YCR
	. . . WRITE SP,SP,SP,SP,"type = index;",YCR
	. . . SET ONUM=0
	. . . IF OBJECT=0 SET ONUM=1
	. . . IF OBJECT=0 WRITE SP,SP,SP,SP,"subscript "_ONUM_" { expression = {"_$$^WWWTEXT("400;Mandant")_"}; }",YCR
	. . . SET ONUM=ONUM+1
	. . . WRITE SP,SP,SP,SP,"subscript "_ONUM_" { expression = "_SORT_"; }",YCR
	. . . SET USORT=YSKEY(SORT)
	. . . FOR USORT1=1:1 QUIT:$PIECE(USORT,",",USORT1)=""  DO
	. . . . SET LFN=$PIECE(USORT,",",USORT1)
	. . . . SET LF=""
	. . . . SET FUNK=$EXTRACT(LFN),LFN=$EXTRACT(LFN,2,9)
	. . . . IF FUNK="F" SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . . . IF FUNK="K" SET LF=$GET(^WWW002(0,VORGX,LFN,1))
	. . . . SET TYPE=$PIECE(LF,Y,3)
	. . . . WRITE SP,SP,SP,SP,"subscript "_(ONUM+USORT1)_" { expression = "
	. . . . SET ATTX=""
	. . . . IF FUNK="F" DO
	. . . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25)        QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . . IF $DATA(^WWWSOR(YUSER,333,LFN))       SET ATTX=^WWWSOR(YUSER,333,LFN) QUIT   ; Naked Ref
	. . . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" do  quit
	. . . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)   ; Naked Ref
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . ;
	. . . . IF FUNK="K" DO
	. . . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . . IF $DATA(^WWWSOR(YUSER,222,LFN))       SET ATTX=^WWWSOR(YUSER,222,LFN) QUIT   ; Naked Ref
	. . . . . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" do  quit
	. . . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)   ; Naked Ref
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . ;
	. . . . SET TYPE=$PIECE(LF,Y,3)
	. . . . IF $FIND(",3,5,6,10,",","_TYPE_",") WRITE "$$UPPER("
	. . . . WRITE "{"
	. . . . WRITE ATTX
	. . . . WRITE "}"
	. . . . IF $FIND(",3,5,6,10,",","_TYPE_",") WRITE ")"
	. . . . WRITE "; }",YCR
	. . . ;
	. . . SET LFN=""
	. . . FOR  SET LFN=$ORDER(^WWW002(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . . . SET LF=$GET(^WWW002(0,VORGX,LFN,1))
	. . . . WRITE SP,SP,SP,SP,"subscript "_(ONUM-1+USORT1+LFN)_" { expression = "
	. . . . SET ATTX="" DO
	. . . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""              SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . . IF $TRANSLATE($GET(^WWWSOR(YUSER,222,LFN))," ")'="" SET ATTX=^WWWSOR(YUSER,222,LFN) QUIT   ; Naked Ref
	. . . . . IF $TRANSLATE($GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))," ")'="" do  quit
	. . . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)   ; Naked Ref
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . . QUIT
	. . . . WRITE "{"
	. . . . WRITE ATTX
	. . . . WRITE "}"
	. . . . WRITE "; }",YCR
	. . . ;   
	. . . WRITE SP,SP,SP,"}",YCR
	. ;
	. ;save methode
	. WRITE SP,SP,SP,"map map1",YCR
	. WRITE SP,SP,SP,"{",YCR
	. WRITE SP,SP,SP,SP,"global = ^"_YFILE_";",YCR
	. IF OBJECT'=4 WRITE SP,SP,SP,SP,"structure = delimited;",YCR
	. IF OBJECT=4  WRITE SP,SP,SP,SP,"structure = list;",YCR
	. WRITE SP,SP,SP,SP,"type = data;",YCR
	. SET ONUM=0
	. IF OBJECT=0 SET ONUM=1
	. ;
	. IF OBJECT=0 WRITE SP,SP,SP,SP,"subscript "_ONUM_" { expression = {"_$$^WWWTEXT("400;Mandant")_"}; }",YCR
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW002(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW002(0,VORGX,LFN,1))
	. . WRITE SP,SP,SP,SP,"subscript "_(ONUM+LFN)_" { expression = "
	. . SET ATTX="" DO
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""              SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . IF $TRANSLATE($GET(^WWWSOR(YUSER,222,LFN))," ")'="" SET ATTX=^WWWSOR(YUSER,222,LFN) QUIT   ; Naked Ref
	. . . IF $TRANSLATE($GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))," ")'="" do  quit
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)   ; Naked Ref
	. . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . ;
	. . WRITE "{"
	. . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . WRITE ATTX
	. . WRITE "}"
	. . WRITE "; }",YCR
	. ;
	. SET YMAXKEY=$ORDER(^WWW002(0,VORGX,""),-1)
	. IF (OBJECT=0)!(OBJECT=3) WRITE SP,SP,SP,SP,"subscript "_(YMAXKEY+2)_" { expression = 1; }",YCR  ;NODE1
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . WRITE SP,SP,SP,SP,"data "
	. . SET ATTX="" DO
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""              SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . IF $TRANSLATE($GET(^WWWSOR(YUSER,333,LFN))," ")'="" SET ATTX=^WWWSOR(YUSER,333,LFN) QUIT   ; Naked Ref
	. . . IF $TRANSLATE($GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))," ")'="" do  quit
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)   ; Naked Ref
	. . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . ;
	. . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . WRITE ATTX
	. . WRITE YCR  
	. . WRITE SP,SP,SP,SP,"{",YCR 
	. . IF OBJECT'=4 WRITE SP,SP,SP,SP,SP,"delimiter = "_""""_$CHAR(DELIM)_""""_";",YCR
	. . ;IF OBJECT'=4 WRITE SP,SP,SP,SP,SP,"node = 1;",YCR
	. . WRITE SP,SP,SP,SP,SP,"piece = "_LFN_";",YCR 
	. . WRITE SP,SP,SP,SP,"}",YCR
	. ;
	. WRITE SP,SP,SP,"}",YCR           
	. IF OBJECT'=4 WRITE SP,SP,"}",YCR   ;sql  
	. WRITE SP,"}",YCR                 
	. WRITE "}",YCR
	
	IF %DEV'="" CLOSE %DEV DO OPEN^WWWSTART
	QUIT:+$GET(VORG(3))=0  ;KEIN COMPILE ;no 
	WRITE "<BR>"
	WRITE YCR,"<TABLE BORDER=0><TR><TD WIDTH=250>"
	WRITE "<FONT SIZE=2>"
	IF NOCOMPILE'=1 IF '$FIND($ZVERSION,"4.0") DO
	. WRITE "<TEXTAREA"
	. ;IF YHID=2 WRITE " readonly"
	. WRITE YCR," NAME="_""""_"CACHEARCITECT"_""""_" ROWS="_""""_20_""""_" COLS="_""""_70_""""_" WRAP="_""""_"physical"_""""
	. WRITE ">"
	. kill ^mtemp("api",$job) ; ### 030103 SCR Start
	. write "Saving Methods & Queries",!,YCR
	. merge ^mtemp("api",$job,"m")=^oddDEF(class,"m")
	. merge ^mtemp("api",$job,"q")=^oddDEF(class,"q")
	. write "Loading Class",!,YCR
	. ;DO LoadFile^%apiOBJ(LW)  ;laden 
	. DO Load^%apiOBJ(LW,"vf-uckd")  ;laden  ;charge 
	. write YCR,"Restoring Methods & Queries",!,YCR
	. merge ^oddDEF(class)=^mtemp("api",$job)
	. ;write "Compiling Class",!
	. ;do Compile^%apiOBJ(class) ; ### 030103 SCR Start
	. WRITE "</TEXTAREA>"
	
	;GENERIEREN XML DTD FILE
	IF $PIECE($GET(^WWW012(0,YM,1)),Y,98)'="" DO
	. ;DO ^WWWXML(VORGX,"",$$^WWWLOW(VORGX_".DTD"),1)
	. DO ^WWWXML(VORGX,"",$zconvert(VORGX_".DTD","L"),1)
	. DO OPEN^WWWSTART
	
	;GENERIEREN XML SCHEMA FILE ;XML scheme 
	IF $PIECE($GET(^WWW012(0,YM,1)),Y,98)'="" DO
	. ;DO ^WWWXML(VORGX,"XMLSCHEMA",$$^WWWLOW(VORGX_".XML"),1)
	. DO ^WWWXML(VORGX,"XMLSCHEMA",$zconvert(VORGX_".XML","L"),1)
	. DO OPEN^WWWSTART
	
	WRITE "</FONT>"
	WRITE "</TD></TR></TABLE>"
	QUIT
	
	
	;*******************************************************************************
	;
	;                 ^^^^^ DISABLED BLOCK DOWN TO HERE ^^^^^
	;
	;*******************************************************************************
	
	
ATTRIB(PROJ) ;Attribute 
	DO ATTR1(PROJ)
	DO ATTR2
	IF +TYPE=0 IF $LENGTH(TYPE)>2 SET ATTRIB=TYPE ;ANDERE KLASSE ;groovy 
	QUIT
	
ATTR2 ;RELATION
	QUIT
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	QUIT:TYPE=2
	IF $PIECE(LF,Y,9)'="" IF $PIECE(LF,Y,9)'="SPRACHE" IF $PIECE(LF,Y,8)="WWW100"!($PIECE(LF,Y,8)="WWW101")!($PIECE(LF,Y,8)="VBPARA") DO  QUIT
	. SET ATTRIB=$PIECE($PIECE(LF,Y,9),",",1)
	. SET ATTRIB=$TRANSLATE($$^WWWUMLAU(ATTRIB,4),""""_"/ *+#&!$?_:;")
	
	IF $PIECE(LF,Y,8)'="" DO
	. SET ATTRIB=$PIECE(LF,Y,8)
	. SET ATTRIB=$TRANSLATE($$^WWWUMLAU(ATTRIB,4),""""_"/ *+#&!$?_:;")
	
	QUIT
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	
ATTR1(PROJ) ;FELDART
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 17-Jul-2009	shobby	SR16701: Changed Memo fields to %String from %Stream
	;-------------------------------------------------------------------------------
	NEW OPEN
	
	SET ATTRIB = "%String"
	IF TYPE=1  SET ATTRIB = "%Date"
	IF TYPE=2  SET ATTRIB = "%Boolean"
	;I TYPE=3  SET ATTRIB = "%LongString"
	IF TYPE=3  SET ATTRIB = "%String" SET SIZE=30000
	IF TYPE=3  SET ATTRIB = "%Stream"	    ;SR16701
	;I TYPE=3  SET ATTRIB = "%String"       ;SR16701
	IF TYPE=4  SET ATTRIB = "%Numeric"
	IF TYPE=5  SET ATTRIB = "%String"
	IF TYPE=6  SET ATTRIB = "%String"
	IF TYPE=7  SET ATTRIB = "%Time"  QUIT
	IF TYPE=8  SET ATTRIB = "%Currency"
	;I TYPE=9  SET ATTRIB = "%Numeric"
	IF TYPE=9  SET ATTRIB = "%String"  ;TYBD;30,1,2004;could be a string.
	IF TYPE=10 SET ATTRIB = "%String"
	IF TYPE=11 SET ATTRIB = "%String"
	IF TYPE=12 SET ATTRIB = "%Float"
	IF TYPE=13 SET ATTRIB = "%String"
	IF TYPE=14 SET ATTRIB = "%TimeStamp"   ;TYBD;WAR ERST TIMESTAMP DANN DATE NUN WIEDER TIMESTAMP10,12,2004;26975; SET ATTRIB="%Date"  ;SET ATTRIB="%TimeStamp"
	IF TYPE=15 SET ATTRIB = "%List"
	;IF ATTRIB="%String" IF $FIND($$^WWWUPER(DESKRI),"NAME") SET ATTRIB="%Name"
	SET OPEN=""
	IF +SIZE=0 SET SIZE=1
	IF $FIND(",5,6,10,",","_TYPE_",") SET OPEN="MAXLEN="_SIZE
	IF $FIND(",8,4,",","_TYPE_",")    SET OPEN="MAXVAL="_$EXTRACT(999999999,1,SIZE)
	
	;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK STAR]]><![CDATA[T
	IF $PIECE(LF,Y,6)'="" IF $FIND(",3,5,6,10,",","_TYPE_",") DO
	. ;IF OPEN'=""  SET OPEN=OPEN_","
	. ;IF OBJECT=4  SET OPEN=OPEN_"COLLATION="_""""_"UPPER"_""""
	. ;IF OBJECT'=4 SET OPEN=OPEN_"COLLATION="_""""_"EXACT"_""""
	;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
	
	IF $GET(CAPTION)'="" DO
	. IF OPEN'="" SET OPEN=OPEN_","
	. SET OPEN=OPEN_"CAPTION = "_""""_$TRANSLATE(CAPTION,"()"_"""")_""""
	
	IF $GET(PROJ)=1 DO
	. IF $FIND($ZVERSION,"4.1") || $FIND($ZVERSION,"4.0") || $FIND($ZVERSION,"3.2") QUIT
	. IF OPEN'="" SET OPEN=OPEN_","
	. SET OPEN=OPEN_"XMLPROJECTION="_""""_"attribute"_""""
	
	IF OPEN'="" SET ATTRIB=ATTRIB_"("_OPEN_")" 
	QUIT
	
NEU ;ALLES NEU ;whatsoever recent 
	quit
	
NEU1 ;ONLY ONE NEW
	DO
	. WRITE !,VORGX
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW002(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET $PIECE(^WWW002(0,VORGX,LFN,1),Y,25)=""
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . ;W !,$PIECE(^WWW003(0,VORGX,LFN,1),Y,25)
	. . SET $PIECE(^WWW003(0,VORGX,LFN,1),Y,25)=""
	
	QUIT
	
COMPILE(YKEY,YNOFORM) ;EINSPRUNG AUS KLASSENDEFINITION MANUELLER COMPILE EINZEL ;out of 
	;YKEY=CLASS
	;NOFORM=1 NO SHOW
	
	DO
	. NEW YKEY,YNOFORM
	. DO ^WWWVAR
	
	SET SPRACHE="EN"
	QUIT:YKEY=""
	SET VORGX=YKEY
	;DO NEU1
	DO COMPILE^WWW001OO(YKEY,$GET(YNOFORM))
	QUIT
	
	;OLD VERSION 
	;NEW VORG
	;SET VORG(1)=$PIECE(YKEY,",",1)  ;KLASSSE
	;QUIT:VORG(1)=""
	;SET VORG(2)=1   ;AUFBEREITEN
	;SET VORG(3)=1  ;COMPILE
	;DO WWW001O
	;QUIT
	
COMPILEALL()  ;ALLES NEU ;whatsoever recent 
	DO ^WWWVAR
	SET SPRACHE="EN"
	DO
	. NEW VORGX
	. SET VORGX=""
	. FOR  SET VORGX=$ORDER(^WWW001(0,VORGX)) QUIT:VORGX=""  DO
	. . ;QUIT:$EXTRACT(VORGX,1,3)="WWW"
	. . IF $EXTRACT(VORGX,1,3)'="WWW" IF $EXTRACT(VORGX,1,2)'="IN" IF $EXTRACT(VORGX,1,2)'="TE" QUIT
	. . SET VORG(1)=VORGX
	. . SET VORG(3)=1
	. . ;DO NEU1
	. . DO
	. . . SET YKEY=VORGX
	. . . NEW VORGX	
	. . . DO COMPILE(YKEY,1)
	
	;Do $system.OBJ.CompileAll()
	QUIT
]]></Routine>
</Export>