<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="WWWEVENT" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[WWWEVENT
#include COMSYS
#include WWWConst
#include COMConst
	
#define InternalCurrency(%1) $$GetInternal^WWWTR(8,%1)
#define InternalForEx(%1)    $$GetInternal^WWWTR(18,%1)
#define LiteralCurrency(%1)  $$GetLiteral^WWWTR(8,%1)
	
	;-------------------------------------------------------------------------------
	; Description of Function :.
	;		EVENTBROKER  
	;		
	; ByRef :
	;	%REQUEST(1)
	;
	; History :
	; 12-Aug-2014	shobby	HEVA-1581: Disabled 'Tab' remembering functionality (which didn't work anyway)
	; 08-Apr-2014	shobby	SESDF-920: New function to replace all selections.  Used in Treeview control
	; 12-Jun-2013	shobby	SESPE-511: Rewrote FUNCTION=1 and FUNCTION=2 to improve performance and remove 1000 record limit.
	; 02-Aug-2012	shobby	SR18075: piece 7 of %REQUEST is now SPRACHE
	; 04-May-2010	GRF		SR15961: use dteToday for efficiency; Dot to brace
	; 06-Jan-2011	GRF		SR17579: Use explicit tags for WWWTR calls
	; 14-Sep-2010	shobby	SR17544: Firefox and IE handle carriage returns in memo text fields
	; 					differently.  IE=$char(13,10) and FF=$char(10).  Internal processing of @netManager
	; 					assumes IE standard.  Put a translation layer in for FF.
	; 06-Aug-2010	shobby	SR17488: YUSER would always be created if YBED was not defined.
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR;
	;							Activate AdjustCurrencyAmount
	; 19-Aug-2008	FIS		SR15853: re-use session id rather creating new one
	; 03-Apr-2007	JW		SR15384: Cleaned up. Removed PRIM call.
	; 12-Oct-2006	RPW		SR14914: Added new micro ops so that the editor can
	; 						stay on top and "populate" the window on save.
	; 24-Aug-2006	FrankF	BR014066: Setting the page number into WWWUSER.
	; 24-Aug-2006	JW		SR14939: Missed a translation
	; 10-Aug-2006	JW		SR13594: Translate (') to (`)
	; 02-Jun-2006	GRF		Doco
	;  9-Dec-2005	JW		SR13195: Created wrapper for FIELD
	; 30-May-2005	RobertW	SR12056: Attempt at Performance Increase
	; 23.07.2004	FIS
	; 07.07.2004	BEC		25984
	; 25.05.2004	FIS		25727
	; 19.03.2003	FIS
	; 14.03.2003	FIS
	; 				DT	 	Created
	;-------------------------------------------------------------------------------
	
	;+++++++++++++++++++++++++++++++++++++++
	;	AlertFollowing		"!"
	;	AlertAndFocus		"§"
	;	Confirm				"&"
	;	Prompt				"?"
	;	Open				"@"
	;	Perform				"#"
	;	ParentPerform		"þ"
	;+++++++++++++++++++++++++++++++++++++++
	if $get(^SysSetup("WWWEVENT","Watch","Session"))=$piece(%REQUEST,".",2) {
		set ^SysSetup("WWWEVENT","Watch","io")=$io
		set xxFile=$get(^SysSetup("WWWEVENT","Watch","TempFile"))
		set xxOrgValue=$get(%REQUEST(1))
		open xxFile:"nsw"
		use xxFile
	}
	set %KEY("YUSER") = $piece(%REQUEST,".",2)  ;SR15853;re-use session id rather creating new one
	if %KEY("YUSER")'="" set %KEY("YBED") = $piece($get(^WWWUSER(0,%KEY("YUSER"),1)),"~",2) ;SR17488
	do ^WWWVAR          ; NOTE : Re-establishes the variables every call.  Some may never change.
	xecute $get(^SysSetup("TrackExecute","WWWEVENT"))
	if YUSERAGENT="GECKO" set %REQUEST(1)=$replace(%REQUEST(1),$char(10),$char(13,10))	;SR17544
	new objSession,YXTEXT,FUNKTION

	set %TXT(1) = ""  ;VORGABE FALSCH ;default wrong 
	set YXTEXT  = ""  ;EXTRA TEXT
	set $ztrap="ERROR^WWWEVENT"
	
	;SR18075 ->%REQUEST="NAMESPACE.USER.FORM.FELDNUMMER.FUNKTION.FIXKEY.VARIABEL"
	;->%REQUEST="NAMESPACE.USER.FORM.FELDNUMMER.FUNKTION.FIXKEY.SPRACHE.VARIABEL" ;SR18075
	;->%REQUEST(1)="VALUE"
	if %REQUEST(1)="null"  set %REQUEST(1) = ""   	    ;FIS;19.03.03  -> nötig nach Installation von Java/ActiveX Applet ;necessary within from 
	if %REQUEST(1)="true"  set %REQUEST(1) = $$$YES     ;FIS;04.06.03  -> nötig nach Installation von Java 2 v1.4.2 ;necessary within from 
	if %REQUEST(1)="false" set %REQUEST(1) = $$$NO      ;FIS;04.06.03  -> nötig nach Installation von Java 2 v1.4.2 ;necessary within from 
	
	;-----------------------------------------------------------------------------------------------------------------------
	; FIXME <JW> : Note - this is rubbish! piece 7 (now 8. shobby) is already used elsewhere - should not be used for tab.
	; And it doesn't seem to work either!
	;SRBR014066
	;SR18075 if +$piece($get(%REQUEST),".",7) > 0 {
	;HEVA-1581 if +$piece($get(%REQUEST),".",8) > 0 {	;SR18075 
	;HEVA-1581 	set YUSER      = $piece(%REQUEST,".",2)
	;HEVA-1581 	set objSession = $get(^WWWUSER(0,YUSER,1))
	;HEVA-1581 	;SR18075 set $$$WWWUSERLastFormpage(objSession) = $piece(%REQUEST,".",7)
	;HEVA-1581 	set $$$WWWUSERLastFormpage(objSession) = $piece(%REQUEST,".",8) ;SR18075 
	;HEVA-1581 	do Save^COMUtils("WWWUSER", YUSER, objSession)
	;HEVA-1581 }
	;-----------------------------------------------------------------------------------------------------------------------

	set FUNKTION = $piece($get(%REQUEST),".",5)
	if FUNKTION=1 quit    ; deprecated - prev called PRIM                   		*** EARLY QUIT ***
	new YCROK                               ;UMBRUCH [|/$C(10,13)] ERLAUBEN  ;FIS,14.03.03
	if FUNKTION=2 do FIELDWRAPPER                  ;Field validating
	if FUNKTION=3 do MSG                           ;FELD FÜR MELDUNGEN ;Field for messages 
	if FUNKTION=4 do SELWRAPPER^WWWEVENT1(1)       ;Add to multi-select field
	if FUNKTION=5 do SELWRAPPER^WWWEVENT1(2)       ;Delete from multi-select
	if FUNKTION=6 do MANU                          ;MANUELLER AUFRUF EINER ROUTINE ;Manual call of a routine 
	if FUNKTION=7 do SEL^WWWEVENT1(3)              ;MANUELLES SELECTFELD IN WWWDATEN ZUFÜGEN ;within give rise to 
	if FUNKTION=8 do ^WWWEVENT3                    ;SAVE + REFRESH data fields < >		TODO JW - look into
	if FUNKTION=9 do ^WWWEVENT2                    ;SCHNELLSICHERUNG FASTSAVE			TODO JW - look into
	if FUNKTION=0 do VARIABLE                      ;VARIABLEN SICHERN ;safeguard 
	if FUNKTION=10 do SELWRAPPER^WWWEVENT1(4)      ;Update Multiselect ;SESDF-920

	if $get(YXTEXT)'="" {
		if $extract(%TXT(1))=$$$Perform {
			set %TXT(1) = %TXT(1)_$$$Perform
		} elseif ($extract(%TXT(1))'="!") && ($extract(%TXT(1))'="§") && ($extract(%TXT(1))'="þ") {
			set %TXT(1) = ""
		}
		set %TXT(1) = %TXT(1)_"!"_YXTEXT
	}
	
	if $translate($$$UPPER(%TXT(1)),"ABCDEFGHIJKLMNOPQRSTUVWXYZÖÄÜß 0123456789*#&-.,+/_()|'"_$$$CRLF)'="" if %TXT(1)=$get(%REQUEST(1)) set %TXT(1) = ""
	if $find(%TXT(1),"&#") set %TXT(1) = $piece(%TXT(1),"&#",1)  ;KEINE SONDERZEICHEN VIA EVENT ;no special character via 
	
	if FUNKTION=2 {
		set %TXT(1) = $translate(%TXT(1),"'"_$$$CRLF,"`'")
	} elseif (FUNKTION'=4) && (FUNKTION'=5) && (FUNKTION'=7) {
		set %TXT(1) = $translate(%TXT(1),"'|"_$$$CRLF,"`''")
	}
	if $get(^SysSetup("WWWEVENT","Watch","Session"))=$piece(%REQUEST,".",2) {
		set xxIO=^SysSetup("WWWEVENT","Watch","io")
		set xxFile=$get(^SysSetup("WWWEVENT","Watch","TempFile"))
		set xxFileLog=$get(^SysSetup("WWWEVENT","Watch","LogFile"))
		if $zu(68,40,1)
		open xxFileLog:"asw"
		use xxFileLog
		close xxFile
		write !,"====================================================================="
		write !,$zdt($h,3)
		write !,$get(%REQUEST)
		write !,"Value In [",xxOrgValue,"] Value Out [",$get(%REQUEST(1)),"]"
		write !,"%TXT(1)="_$get(%TXT(1))
		write !,"=====================================================================",!

		open xxFile:"rs" 
		for { 
			use xxFile 
			read *x 
			quit:$zeof  
			use xxIO 
			write *x
			use xxFileLog 
			write *x
			write:x=59 !
		}
		use xxIO 
		close xxFile
		close xxFileLog
	}
	quit
	
	
SplitRequest(parrRequest,&pstrInput,&pstrNS,&pidUser,&pidForm,&pstrField,&pintFn,&pstrKey,&pstrVar)
	;-------------------------------------------------------------------------------
	; Split the request into its components
	; 
	; %REQUEST		= "NAMESPACE.USER.FORM.FELDNUMMER.FUNKTION.FIXKEY.VARIABLE"  ;SR18075
	; %REQUEST		= "NAMESPACE.USER.FORM.FELDNUMMER.FUNKTION.FIXKEY.SPRACHE.VARIABLE"  ;SR18075 
	; %REQUEST(1)	= "VALUE"
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 31-Jul-2012	shobby	SR18075: New field for SPRACHE now uses piece 7
	; 03-Apr-2007	JW		SR15384: Created
	;-------------------------------------------------------------------------------
	new strRequest
	
	set strRequest = $get(parrRequest)
	
	set pstrNS 		= $piece(strRequest,".",1)
	set pidUser 	= $piece(strRequest,".",2)
	set pidForm 	= $piece(strRequest,".",3)
	set pstrField 	= $piece(strRequest,".",4)		; "Y"_YFORM_YART_YLFN
	set pintFn	 	= $piece(strRequest,".",5)
	set pstrKey 	= $translate($extract($piece(strRequest,".",6),4,99),"~",".")
	;SR18075 set pstrVar 	= $piece(strRequest,".",7,99)
	set pstrVar 	= $piece(strRequest,".",8,99)	;SR18075 
	
	set pstrInput = parrRequest(1)
	
	quit
	
	
Initialise(YUSER,&%REQUEST)
	;-------------------------------------------------------------------------------
	; Initalise @net variables
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 30-Jan-2014	shobby	CORE-307: Retreive YOPTION
	; 31-Jul-2012	shobby	SR18075: New field for SPRACHE now uses piece 7
	; 24-May-2007	GRF		SR15525: Use common code
	; 02-Apr-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	new objUser
	
	set YBED=""

	if YUSER'="" {
		set objUser = $get(^WWWUSER(0,YUSER,1))
		if objUser="" {
			set ^WWWUSER(0,YUSER,1)=1	 ;Prevent recursion when closing						;SR18075
			if $piece(%REQUEST,".",7)'="" set SPRACHE=$piece(%REQUEST,".",7)					;SR18075
			set %TXT(1) = $$$AlertFollowing_$$^WWWTEXT(34359)  ; "Session Expired!"				;CORE-106
	    	$$$StartScript()									;SR18075
		    write "window.parent.location = '"_$$getLoginPage^WWWLogin(1)_"'; "	;SR18075
		    $$$EndScript()										;SR18075
		} else {
			set YBED    = $piece(objUser,Y,2)
			set YM      = $piece(objUser,Y,20)     ; FIXME : Deprecated - always set to 0
			set SPRACHE = $piece(objUser,Y,19)
			set YSEITE  = $$$WWWUSERLastFormpage(objUser)
			set YOPTION = $$$WWWUSERYOPTION(^WWWUSER(0,YUSER,1)) ;CORE-307
		}
	}
 	
	; Note that at this point, YSEITE may not be current...
 	
	;---------------USER VORGABEN------------------------------------------
	if YBED'="" {
		set:YM="" YM = $$$WWW013HomeCompany($get(^WWW013(0,YBED,1)))     ; FIXME : Deprecated
		set:YM="" YM = 0
		set YLOCATION=$piece($get(^WWW013(0,YBED,1)),Y,44)
		set:SPRACHE="" SPRACHE=$$^WWWLANGU(YBED)
		set YVOR1    = $get(^WWW012(0,0,1))
		set YWHR     = $$$WWW012StandardCurrency(YVOR1)         ;STANDARD WÄHRUNGSKZ
		set YMANDANT = $$$WWW012UniqueCompanyIdentifier(YVOR1)  ;VORGABE FÜR MANDANTENKENNUNG ;default to 
		
		; SR15525 vvv
		set YDECIMAL = $extract($$GetNumberDelimiters^COMUtilLocale(SPRACHE),2)
		;set YDECIMAL = $$$WWW012DecimalSigns(YVOR1)
		;if YDECIMAL="" {
		;	SET YDECIMAL=","
		;	if SPRACHE="EN" SET YDECIMAL="."		; TODO - this is inappropriate!
		;}
	}
	
	set:YM="" YM=0     ; FIXME : Deprecated - always set to 0
	
	quit
	
	
FIELDWRAPPER 
	;-------------------------------------------------------------------------------
	; Wrapper for FIELD. Keep variables so can call CheckStatus.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 27-Mar-2007	JW		SR15384: Append value to Confirm function.
	; 02-Dec-2005	JW		SR13195: Created
	;-------------------------------------------------------------------------------
	new YART,YFORM,YINHALT,YLFN,YUSER

	do FIELD(.YINHALT)

	if $extract(%TXT(1))=$$$Confirm {
		$$$Append(%TXT(1),Y_YINHALT)	; Store value
	}
	do CheckStatus^WWWFORMStatus()
	quit
	
	
DATEN
	;-------------------------------------------------------------------------------
	; Evaluate additional data to send
	;
	; HISTORY:
	; 03-May-2010	GRF		SR15961: use dteToday for efficiency
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 27-Mar-2007	JW		SR15384: Encapsulated functions. Cleaned up.
	; 16-Jun-2006	JW		SR12775: Rewritten - simplified / brace syntax
	; 28-Jul-2005	JW		SR12615: Change colour of cell to red if has relation and doesn't exist. 
	;-------------------------------------------------------------------------------
	quit:$extract(%TXT(1))'=$$$Perform
	
	new dteToday,strAction,strDelim,strField,strStored,YART,YI,YINHALT,YLFN,YOLDV,YTYP
	
	set dteToday = +$horolog     ; SR15961
	
	for YI=2:1 {
		set strAction = $piece(%TXT(1),$$$Perform,YI)
		quit:strAction=""
		
		continue:$piece(strAction,"~",4)'=""  ;MULTISELECT NACHLADEN  ;FIS;23.07.04
		
		set strField = $piece(strAction,"~",1)    ; field 
		set YINHALT  = $piece(strAction,"~",2)    ; value 
		
		continue:YINHALT="BACKGROUND"
		continue:strField="FUNCTION"
		continue:YINHALT="WRITE"
		continue:YINHALT="READ"
		continue:(YINHALT="CHECKED")&&($find(strAction,"("))&&($extract($reverse(strField))=")")   ;FIS;13.07.04;26092;RADIOBUTTON IMMER CHECKED
		
		do SplitID^WWWField(strField,YFORM,.YART,.YLFN)
		continue:(YART'="M")&&(YDATEI="")
		continue:YLFN=""					; No number
		
		set strDelim = $select(YART="P":",", 1:Y)
		
		do GetDetails^WWWField(YFORM,YART,YLFN,,,,,,,.YTYP)
		
		if (YINHALT=" ") || (YINHALT="UNCHECKED") || (YINHALT="REMOVE") {
			set YINHALT=""
		} elseIF (YINHALT="CHECKED") {
			set YINHALT=$$$YES 
		}
		
		set strStored = $$GetInternal^WWWTR(YTYP,YINHALT)
		if YTYP'=$$$FLDCurrency {
			set $piece(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1),strDelim,YLFN)=strStored
			
			; SR12615: Change colour of cell if has relation and doesn't exist.
			do ValidRelation^WWWFieldValidation(YART,YDATEI,YFORM,YLFN,strStored)
			
		} else {	; Foreign Currency
			set YOLDV=$piece($get(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1)),strDelim,YLFN)
			if '$find(YOLDV,"@") || ($$GetLiteral^WWWTR(YTYP,YOLDV)=YINHALT) {  ;Maintain format
				set $piece(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1),strDelim,YLFN)=strStored
			}
		}
	}
	quit
	
	
PRIMCHK(YKEY,pobjForm,pobjClsKey,pobjCustKey)
	;-------------------------------------------------------------------------------
	; CHECK PRIMARY KEY
	;
	; Params:
	;
	; Returns: boolean - whether to open key
	;
	; History:
	; 18-Jul-2011	GRF		SR17751: Change strStatus processing to assume
	;							$$OnFilter^WWWSOR returns standard error string.
	; 03-May-2010	GRF		SR15961: use dteToday for efficiency
	; 07-Feb-2008	shobby	SRBR014892: Reversed previous change.  We can't go mixing
	; 							$lb with Y.  Improved text handling when message
	; 							contains a '
	; 06-Feb-2008	shobby	SRBR014892: use the standard error translation for OnFilter
	; 							so $$$MakeStatus can be used to build it.
	; 02-Oct-2007	shobby	SRBR014726: Checks whether a data record should not be
	; 							displayed as a result of a call back.
	; 							The OnFilter callback routine can determine whether
	; 							to display a message, clear the field or optionally
	; 							display the record in readonly mode.
	; 27-Mar-2007	PO		SR15442: Return boolean
	; 01-Feb-2007	JW		SR15384: Cleaned up
	;-------------------------------------------------------------------------------
	new blnForceNum,blnOpen,dteToday,loop,strResult,strStatus,YFELD,YMAXKEY
	
	set dteToday = +$horolog     ; SR15961
	set ^WWWDATEN(0,dteToday,YUSER,"RECORDEXISTS",YFORM,1) = 0   ;TYBD;4,2,2004;SAVE UND ÖFFNEN
	set ^WWWDATEN(0,dteToday,YUSER,"RECORDEXISTS",YFORM,2) = ""
	
	quit:YDATEI="" $$$NO			; *** EARLY EXIT - No class
	
	set YMAXKEY = +$order(^WWW002(0,YDATEI,""),-1)
	quit:YMAXKEY=0 $$$NO			; *** EARLY EXIT - No Keys
	
	set YMAXKEY = YMAXKEY+$get(YTIMEFORM)  ;TYBD;3,11,2003;VORABZEITERFASSUNG;24525
	
	set $piece(YFKEY,",",YLFN1) = YKEY   ;$P(YKEY,",",YLFN1)  ;EINSETZEN KEY IN FIXKEY YLFN1 comes from tag FIELD
	
	set YKEY = YFKEY
	if YMAXKEY'=1 set YKEY = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"P",1))  ;kompl. YKEY
	
	set blnOpen = $$$YES  ;DATENSATZ VORHANDEN ;data record on hand 
	
	;---------------GRID------------------------------------------
	if (YKEY'="") && (YLFN'=YMAXKEY) && ($$$WWW120FormType(pobjForm)=3) {
		set ^WWWDATEN(0,dteToday,YUSER,"RECORDEXISTS",YFORM,1) = $$$YES
		set ^WWWDATEN(0,dteToday,YUSER,"RECORDEXISTS",YFORM,2) = $piece($horolog,",",2)
		
	} else {
		for loop=1:1:YMAXKEY {
			if $piece(YKEY,",",loop)="" {
				set blnOpen = $$$NO
				quit
			}
		}
	 	if blnOpen {
			if YDATEI="WWW001" if '$data(^WWW001(0,YKEY,1)) if $data(^oddDEF("User."_YKEY)) kill VORG do ^WWWCDL(YKEY,0,0)  ;KLASSE ÜBERTRAGEN
			
			do ^WWWLESE(YDATEI,YKEY,1)   ;LESEN DATENSATZ  ;TYBD ;read data record 
			
			if $get(YFELD)="" set blnOpen = $$$NO  ;NICHT VORHANDEN ;Not on hand
			
			set strStatus = $$$OK
			if '$$$NoKey(YKEY) set strStatus = $$OnFilter^WWWSOR(.YINHALT,YFELD)
			
		; SR17751 vvv	
		;	if $piece(strStatus,Y,3)=1 set strSt]]><![CDATA[atus = $$$OK
		;	if $$$ISERR(strStatus) {
		;		set blnOpen   = $$$NO
		;		set strStatus = $piece($extract(strStatus,3,999999999),Y,1)
		;		if strStatus'="" write "alert("""_strStatus_""");"
		;	}
			if $$$ISERR(strStatus) {
				set blnOpen   = $$$NO
				set strStatus = $$$Text(strStatus)
				if strStatus'="" write "alert("""_strStatus_""");"
			}
		; SR17751 ^^^
			set ^WWWDATEN(0,dteToday,YUSER,"RECORDEXISTS",YFORM,1) = blnOpen
			set ^WWWDATEN(0,dteToday,YUSER,"RECORDEXISTS",YFORM,2) = $piece($horolog,",",2)
	 	}
	}
	quit blnOpen
	
	
FIELD(&YINHALT)
	;-------------------------------------------------------------------------------
	;		DATENFELD PRÜFEN ;check data item
	;		
	; NOTE : Does not appear to be called for COMGridEdit processing
	; 
	; 
	; ByRef : (do not new) YFORM,YOLDTXT,YSATZ,YUCI,YUSER,%REQUEST
	; 
	; Returns: YINHALT (ByRef)
	;
	; History:
	; 
	; 31-Jul-2012	shobby	SR18075: Use new field for SPRACHE in initialise
	; 21-Jun-2012	shobby	SR18026: Translate type 7 for storage and update grid
	; 25-May-2011	GRF		SR17250: call common function for decimal places
	; 03-Feb-2011	GRF		SR17579: only adjust dp if assoc. field contains Unit
	; 06-Jan-2011	GRF		SR17579: use WWW122s Macro
	; 04-May-2010	GRF		SR15961.1: call SetLock
	; 30-Apr-2010	GRF		-: use intAutoIdx in string construction
	; 06-May-2009	PPP		SR16521:Barcode Scanning to identify Item
	; 10-Feb-2009	shobby	SR16126:Made previous change optional based on a company parameter.
	; 12-Nov-2008	shobby	SR16126:Simulate commas in a primary key.
	; 18-Sep-2007	shobby	SRBR014619: Calls to PARAMETER don't need objCustFld any more.
	; 04-Jun-2007	shobby	SRBR014409: Removed early quits that were preventing
	; 							rules updating the screen.
	; 10-Apr-2007	PO		SR15442: Added parameter to GetDetails^WWWField
	; 09-Apr-2007	shobby	SRBR014409:Changes to support dynamic updating of fields
	; 							based on custom rules (WWW122D)
	; 27-Mar-2007	PO		SR15442: Force numerator for primary key
	; 27-Mar-2007	JW		SR15384: Encapsulated functions. Cleaned up. Fixed %TXT overriding
	; 16-Mar-2007	GRF		SR12505: Validate on "Don't Allow Chars"; naked references
	; 15-Jan-2007	JW		SR15380: Update display even if we have on blur code.
	; 12-Oct-2006	Steve S	BR014112: If a field is set to zero dec. places floating, 
	; 							force to integer.
	; 11-Sep-2006	JW		SR14885: Remove commas from primary keys
	; 21-Aug-2006	FrankF	BR014066: Setting the YSEITE global variable.
	; 21-Aug-2006	JW		SR14919: Spaces -> 0 for numeric type
	; 15-Dec-2005	PO		SR13792: When blurring out of a text field without cache
	; 							onblur, use EscapeHyperEventData
	; 09-Dec-2005	JW		SR13195: Primary key redirection removed from here.
	; 28-Oct-2005	JW		SR13074: Exchange Rate type
	; 27-Oct-2005	Steve S	SR13745: Display the WWWTR values on the form, NOT the raw values.
	; 22-Sep-2005	JW		SR13500: Set YKEY
	; 02-Sep-2005	JW		SR12966: WWW002 is shared. WWWCODE is not shared.
	; 17-Jun-2005	PO		SR12626 Changed condition under which AdjustCurrencyAmount is called
	;-------------------------------------------------------------------------------
	new blnIsItem,blnIsUnit,blnTest,idAssocClassFld,idChangeInput,idClassFldNo,idFormFldNo
	new idItem,idRelation,idUnit,intAutoIdx,intDP,objClsCustFld,objCustFld,objFormFld
	new strCode,strExecOnBlur,strField,strGlobal,strOrigInput,strPattern,strReason,strStored
	new YBED,YDATA,YDATEI,YFELD,YFKEY,YKEY,YOLDTXT,YPR,YPR1,YSATZ,YVAR

	set YKEY    = ""
	set YSATZ   = ""   ; Used by FIELDWRAPPER
	set YOLDTXT = ""   ; Used by FIELDWRAPPER

	do SplitRequest(.%REQUEST,.YINHALT,.YUCI,.YUSER,.YFORM,.strField,,.YFKEY,.YVAR) ; Used by FIELDWRAPPER
	do Initialise(YUSER,.%REQUEST)    ;SR18075 ; sets YBED, SPRACHE et al
	
	quit:$extract(%TXT(1))=$$$AlertFollowing			; *** EARLY QUIT - bad user
	quit:YFORM=""  										; *** EARLY QUIT - NO FORM
	
	do SplitID^WWWField(strField,YFORM,.YART,.YLFN)     ; e.g. INARTD30 = INART,D,30
	quit:YLFN=""										; *** EARLY QUIT - No Field number
	
	; L ?    Field types are normally P, D or M.    Does this ever happen?
	if $extract(YART)="L" {
		set YART = $extract(YART,2)
		if $length(YLFN)>3  set YLFN =  $extract(YLFN,2,9)  ;2.TAG (BIS)
		if $extract(YLFN)=1 set YLFN = +$extract(YLFN,2,9)  ;LISTGENERATOR
	}
	
	if YUCI="" set YUCI = $zutil(5)
	
	do GetDetails^WWWField(YFORM,YART,YLFN,.YDATEI,.YLFN1,.YVOR,.YSATZ,.YDVOR,.objCustFld,.YTYP,.objClsCustFld)
	;---------------------------------------
	; Form,             P/D,        ClassFld#,       idWWW001,
	; idWWW121/122,     objWWW120,  objWWW121/122*,  objWWW002/003,
	; objWWW121D/122D,  InputType,  objWWW002D
	;		YSATZ is based on WWW121 or $$Get^WWW122
	;---------------------------------------
	
	if $$$WWW120SaveServerdata(YVOR) set YHTMFORM = "WWW2"
	do Log(YFORM,YART,YLFN1,YSATZ)
	
	if (YVAR'="PLUS") && (YART="D") {
		quit:'$$IsLockOk(YUSER,YFORM)						; *** EARLY QUIT - LOCK NOT OK
	}
	; Open a record from a data field - actually quite useful
	if (YINHALT'="") {
		set intAutoIdx = $$$WWW122AutomaticDisplayForIndexK(YSATZ)
		if (intAutoIdx'="") {
			set strGlobal    = "^"_YDATEI_"s(0,"""_intAutoIdx_""","""_$$^WWWUMLAU(YINHALT,1)_""","""")"  ; 30-Apr-2010
			set strGlobal(1) = $order(@strGlobal)
			if strGlobal(1)'="" {
				set ^WWWSOR("SORTKEY",+$horolog,YUSER,YFORM,1) = strGlobal(1)
				set %TXT(1) = $$$Open
				
				quit										; *** EARLY QUIT - Open record
			}
		}
	}
	quit:$extract(%TXT(1))=$$$Perform						; *** EARLY QUITS - probably redundant
	quit:$extract(%TXT(1))=$$$AlertFollowing
	
	; NOTE: At this stage %TXT(1) will be blank.
	
	set strOrigInput = YINHALT		; Store original input
	
	if YART'="P" {
		set intDP = $$GetDecimalPlaces^COMUtilNum(YFORM,YLFN1,"",^WWWDATEN(0,+$horolog,YUSER,YFORM,"D",1),YSATZ) ; SR17250 2 lines
		if intDP'="" set YDECIMALLEN = intDP
		
	} else {
		; **** TRANSLATION of YINHALT *****   (So remember, YINHALT is the display value...)
		if $$SimulateCommainPrimaryKey^WWW012() { 
			set YINHALT = $$FullReplace^COMUtilStr(YINHALT,",",$$$FAKECOMMA)   ;SR16126
		} else {
			set YINHALT = $translate(YINHALT,",")                              ;SR16126
		}
		if YINHALT = "" {
			if $$$WWW002ForceNumerator(YDVOR) || $$$WWW002DForceNumerator(objClsCustFld) {
				set YINHALT = "+"
			}
		}
	}
	
	// VVVV SR16521
	; FIXME : see prior call to GetDetails^WWWField - equivalent to YSATZ? <GRF>  Duplication?  check if different field or form

	;						"D"	: $$Get^WWW122(YFORM,+$order(^WWW122s(0,4,YLFN,YFORM,""))),   ; SR17579

	set objFormFld = $case(YART,
							"D"	: $$Get^WWW122(YFORM,+$$$GetFormField(YFORM,YLFN)),
							"P"	: $get(^WWW121(0,YFORM,YLFN,1)),
							"M"	: $$Get^WWW122(YFORM,YLFN),
								: "")
	do GetRelation^WWWFieldValidation(YART,YFORM,YDATEI,YLFN,objFormFld,.blnTest,.idRelation)
	
	do GetId^COMQuickSearch(YDATEI,$get(idRelation),.YINHALT,YART)	
	// ^^^^ SR16521

	set strExecOnBlur = $$$WWW122ExecuteOnBlur(YSATZ)
	set strStored     = ""
	; This should have a YART="D" check.  Where is WWWLAST set?
	if ($extract(YINHALT,1,2)="^^") || ($extract(YINHALT,1,2)="°°") {  ; Get the last version
		set strStored =  $$GetLast^WWWField(.YINHALT)
	}
 	
	; Fill with zeroes (max 15 leading zeros)
	; FIXME : Strings with leading digits will get zero fill, those with leading alpha will not <GRF> 
	; FIXME - This does not work whatsoever. Needs to be spec'ed as well <Phil>
	;---------------------------------------
	if +$$$WWW122ForceStringLengthTo(YSATZ)'=0 set YINHALT = $extract(10000000000+YINHALT,11-$piece(YSATZ,Y,18),10)  ;STRINGLÄNGE MIT 0 ;by means of 
	
	set idChangeInput = $$$WWW122ChangeInputAs(YSATZ)
	do:idChangeInput'="" ChangeInputAs^WWWFieldRules(.YINHALT,idChangeInput)
	
	set strPattern = $$$WWW122DPatternMatch(objCustFld)
	do:strPattern'="" CustPattern^WWWFieldRules(YINHALT,strPattern)		; %TXT(1) may be set
	
	; Dates
	if ((YTYP=1) || (YTYP=17)) && (YINHALT'="") {
		set strStored = $$TranslateDate^WWWFieldRules(.YINHALT)			; %TXT(1) may be set
	} elseif (YTYP=7)&&(YINHALT'="") {		;SR18026
		set strStored=$$^WWWTIME1(YINHALT)	;SR18026
	}
	
	; This does not work very well... needs to be looked at later (OR REMOVED!)
	; For starters there should be a date check ??
	if (strExecOnBlur'="") && ($find("-,.+",$extract(strExecOnBlur))) {
		do DateOk^WWWFieldRules(.YINHALT,.strStored,strExecOnBlur)		; %TXT(1) may be set
		set strExecOnBlur = ""
	}
	
	do InputOk^WWWFieldRules(YINHALT,YSATZ,YVOR)						; %TXT(1) may be set
	
	; *** STORAGE / OPEN ***
	do Store(.YINHALT,.strStored)
	
	quit:(YART="P")&&$$Open(.YINHALT,.strStored,YVOR,YDVOR,objClsCustFld)			; *** EARLY QUIT ***  If we are opening a record.
	if YTYP=7 set YINHALT=$$FieldSize^COMUtils(YFORM,YLFN,YINHALT) ;SR18026
	
	do SetLock(YUSER,YFORM,+$horolog)  ; SR15961.1
	

	; There is still a conflict between AlertAndFocus/Confirm and other functions
	; This needs to be looked at.
	; On blur won't be called for example.
	
	
	quit:$extract(%TXT(1))=$$$AlertAndFocus
	quit:$extract(%TXT(1))=$$$Confirm
	
	; *** DISPLAY ***
	
	if YART'="P" do ReadWrite^WWWFieldRules(YINHALT,YSATZ,YTYP,YART)
	
	if (YTYP=$$$FLDMemo) && (YVAR'="PLUS") {
		if '$find(%TXT(1),$$$Perform) {
			set %TXT(1)=""
			do PARAMETER(YSATZ,YDVOR)
		}
	}
	
	if (YART="D") || (YART="M") {
		do CustomWarnings^WWWFieldRules(.YXTEXT,YINHALT,objCustFld)
	}
	
	if $find($piece(YVAR,".",1),"^") {     ;AUTOMATISCHER START NACH PROGRAMM IN VARIABLEN ;take-off within programme within 
		xecute "do "_$piece(YVAR,".",1)
	}
	
	; Custom on blur
	do:strExecOnBlur'="" OnBlur(strExecOnBlur,.YINHALT,strField)       ; ***** EXECUTE ***** 
	do FieldValidation(strField)  ;AUTOMATISCHE FELDVALIDIERUNGSFUNKTIONSAUFRUF
	
	; Update display of Current Field - this is very important!! Why doesn't Intraprend think so?
	
	if YINHALT'=strOrigInput {
		$$$Append(%TXT(1),$$$Perform_strField_Y_$$$EscapeHyperEventData(YINHALT))
	}
	do UpdateGrid^COMGridEdit31Links(strField,YINHALT,strOrigInput)  ;SR18026
	set YCROK = $$$NO
	if (YTYP=$$$FLDText) && '$find(YINHALT,"|") {
		set YCROK = $$$YES  ;| NICHT UMWANDELN ;Not transmute 
	}
	
	; Change colour of cell to red if has relation and doesn't exist. 
	if '$$ValidRelation^WWWFieldValidation(YART,YDATEI,YFORM,YLFN,strStored,$$$YES,.strReason) {
		if strReason'="" {
			set %TXT(1) = %TXT(1)_"#!"_$$$Text(strReason)
		}
	}
	do PARAMETER(YSATZ,YDVOR)
	quit
	
	
FieldValidation(pstrField)
	;-------------------------------------------------------------------------------
	; Execute user validation
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 15-Apr-2011	shobby	SR17701: Use $Get^WWW122 to include customisation.
	; 03-May-2010	GRF		SR15961: use dteToday for efficiency
	; 16-Jun-2009	GRF		SR16534: Replace order macro
	; 28-May-2009	shobby	SR16534: Replaced repeated code with a common routine.
	; 04-Jan-2008	Heber	SRBR014794: Core masking added
	; 04-Jul-2007	RPW		SRBR014409: Created
	;-------------------------------------------------------------------------------
	new dteToday,idField,intPiece,objWWW122,strMask,strMaskVarName
	new strMaskedFieldName,strToExecute,YFELD,YFELDSAVED,YMFELD,YXTEXT
	
	set dteToday = +$horolog     ; SR15961
	
	if YUSER'="" {
		set YFELD      = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"D",1))   ;DATENSATZ AKTUELL         ; modified data record
		set YMFELD     = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"M",1))   ;DATENSATZ MANUELL AKTUELL ; up-to-date manual record
		set YFELDSAVED = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"D",2))   ;DATENSATZ GESPEICHERT     ; original data record 
	}
	;
	if $data(^ROUTINE(pstrField)) {
		set strToExecute="set %TXT(1)=$$^"_pstrField_"(YINHALT)"
		xecute strToExecute                                                ; ***** EXECUTE *****
	}
	
	// APPLY CORE MASKING
 	// Applies core mask to each form field if there is not a customized mask
 	set idField = ""
 	for {
	 	set idField = $order(^WWW122(0,YFORM,idField))
	 	quit:idField=""
	 	
		set objWWW122 = $$Get^WWW122(YFORM,idField)     ;SR17701
 		continue:($$$WWW122Mask(objWWW122) = "")  ; no core mask to be applied to the field
		
 		;SR17701 ; if no custom mask is defined, apply core mask
 		if ('$$IsMaskable^WWWFORM8(YFORM,idField,YM)) { ; check if there is a custom mask ;SR17701 (This really checks for rules)
	 ;SR17701 set strMask            = $$GetCoreMask^WWWFORM7(YFELD,YMFELD,objWWW122) ; get Mask
			set strMask            = $$$WWW122Mask(objWWW122)     ;SR17701
			set strMaskVarName     = $$GetMaskVarName^WWWFORM8(YFORM,idField)       ; get mask variable name
			set strMaskedFieldName = $$GetFieldName^WWWFORM8(YFORM,idField)         ; get field name to receive mask
			write strMaskVarName_"="""_$zconvert(strMask,"O","JS")_""";"            ; loads mask value into mask variable
			write strMaskedFieldName_".value = doMasking("_strMaskVarName_","_strMaskedFieldName_".value,49);"	; calls mask function
 		}
 	}
	
	set %TXT(1) = %TXT(1)_$$CheckRules(YFORM,.YFELD)
	if $extract(%TXT(1))=$$$Perform {
		do DATEN  ;AUSWERTEN NEUE FELDER
	}
	quit
	
	
CheckRules(pYFORM,&pYFELD,pintRow="")
	;-------------------------------------------------------------------------------
	; Dynamically applies custom rules to the current screen. 
	;
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	;
	; History:
	; 19-Dec-2013	shobby	CORE-295.3: Corrected test for form readonly.
	; 18-Dec-2013	shobby	CORE-295.2: Problem updating values on readonly forms corrected.
	; 16-Dec-2013	shobby	CORE-295: Allow rules to run on readonly forms (but block making a field editable)
	; 29-May-2013	shobby	CORE-114: New 'Filter' field to limit results collected by 'Rules'
	; 15-May-2013	shobby	CORE-79.7: Remove previous change.
	; 14-May-2013	shobby	CORE-79.2: Change state of any FATSearch button.
	; 25-Jun-2012	shobby	SR18026.1: Problem with multiple rules if the second rule
	;							doesn't change a value.
	; 23-May-2012	shobby	SR18016: HideControl for Manual Fields.
	; 16-Aug-2011	shobby	SR17784: Allow 'Rules' to show/hide controls.
	; 10-Aug-2011	shobby	SR16704: Allow 'Rules' to modify colour and make readonly
	;								 for Manual Fields.
	; 21-Apr-2011	shobby	SR17714: Allow rules to update values of manual fields.
	; 02-Sep-2009	shobby	SR16511: Only use FontColor if field is readonly.
	; 26-Aug-2009	shobby	SR16511: Font Color
	; 12-Aug-2009	shobby	SR16511: Don't try and update a cell that is not on the
	; 							visible page on a grid.
	; 09-Jun-2009	shobby	SRBR014955: Changed YFORM to pYFORM
	; 28-May-2009	shobby	SR16534:	Get rules information from a shared routine.
	; 25-Jul-2008	GRF		SRBR014794: blnMaskable repeated in new list - corrected;
	; 							move separately newed variables back into main new.
	; 19-Jun-2008	shobby	SRBR014955: Don't run the rules if the form is readonly.
	; 13-Apr-2008	heber	SRBR014932: Apply mask to grid fields
	; 04-Jan-2008	heber	SRBR014794: Move mask from WWW122D to WWW122D2
	; 19-Sep-2007	shobby	SRBR014721: Don't use 'disabled' to disable a control.
	; 							Special conditions are handled in the PrepareUpdate
	; 							javascript function for controls that don't have readonly.
	; 17-Aug-2007	shobby	SRBR014624: Call the PopulateDataField with pblnDoEvent
	; 						set to true (will manage 'show relation after entry' better.
	; 14-Aug-2007	shobby	SRBR014637: Make selection controls disabled.
	; 08-Aug-2007	shobby	SRBR014616: If this is in a grid the current row will
	; 							be passed in.
	; 26-Jul-2007	GRF		SRBR014575: Use boolean macros; use loop instead of
	; 						idxButtons; wrap long argument list (5 to line).
	; 11-Jul-2007	Frank	SRBR014575: Added relation class check.
	; 05-Jul-2007	shobby	SRBR014409:	New variable strReadOnly to contain the text
	; 						equivalent of blnReadOnly
	; 25-Jun-2007	shobby	SRBR014409:	Use subroutine to work out image to be displayed.
	; 08-Jun-2007	RPW		SRBR014409: idButton used to stop looking through list twice.
	; 06-Jun-2007	shobby	SRBR014409: Subroutined Updating of button states.
	; 05-Jun-2007	shobby	SRBR014409: Date popup buttons now show as disabled when
	; 						the attached field is disabled.
	; 31-May-2007	shobby	SRBR014409: Corrected Form name for attached buttons.
	; 13-Apr-2007	shobby	SRBR014409: Take strNewFieldColor value from CheckRules^WWWFORMD
	; 12-Apr-2007	shobby	SRBR014409: UpdateFieldFormat requires the class field
	; 						number not the form field number.
	; 12-Apr-2007	shobby	SRBR014409: Created
	;-----------------------------]]><![CDATA[---------------------------------]]><![CDATA[-----------------
	new arrRules,blnHidden,blnMandatory,blnMaskable,blnReadOnly,blnUseValueOfDataField
	new idButton,idClassField,idField,idRule,idSeqNumber,intColour
	new loop,lstButtons,objRule,objWWW122,strData,strFontColor,strHidden,strImage
	new strMask,strMaskedFieldName,strMaskVarName,strNewFieldColor
	new strReadOnly,strRelationClass,strRelationKeys,strRuleField,strValue,YFELDSAVED
	new strFilter ;CORE-114
	
 	;CORE-295 quit:$get(^WWWDATEN(0,+$horolog,YUSER,pYFORM,"V","AUTHORISATION",1))=$$$EnumReadOnly ""
	
	do GetRules^WWWFORMD(.arrRules,pYFORM)

	set idField = ""   ; SR16534
	for {
		set idField = $order(arrRules(idField))
		quit:idField=""
		set blnHidden              = $$$NO
		set blnMandatory           = $$$NO
		set blnReadOnly            = $$$NO
		set blnUseValueOfDataField = $$$NO
		set intColour              = ""
		set strMask                = ""       // SRBR014794
		set strNewFieldColor       = ""
		set strRelationClass       = ""
		set strRelationKeys        = ""
		set strRuleField           = ""
		set YFELDSAVED             = pYFELD
		set strValue			   = "" ;SR18026.1

		; return also the customized mask
		do CheckRules^WWWFORMD(pYFORM,idField,.pYFELD,.blnHidden,.blnReadOnly,
		                       .intColour,.blnMandatory,$$$YES,.strNewFieldColor,.strRelationClass,
		                       .strRelationKeys,.blnUseValueOfDataField,.strRuleField,.strMask,.strValue,.strFontColor,.strFilter) ;CORE-114
		                  //   .strRelationKeys,.blnUseValueOfDataField,.strRuleField)		    //SRBR014794  ;SR16704
		;if $get(YBACKGROUNDCOLOR)="" set YBACKGROUNDCOLOR=strNewFieldColor		;15753
		; applies customized mask 
		if $$IsMaskable^WWWFORM8(pYFORM,idField,YM) { ; check if there is custom mask apply mask even if empty
			set strMaskVarName     = $$GetMaskVarName^WWWFORM8(pYFORM,idField)
			set strMaskedFieldName = $$GetFieldName^WWWFORM8(pYFORM,idField)
			; apply mask since it is not grid
			if (pintRow="") {
				write " "_strMaskVarName_"="""_$zconvert(strMask,"O","JS")_""";"
				write strMaskedFieldName_".value = doMasking("_strMaskVarName_","_strMaskedFieldName_".value,49);"
			}
		}
		if $get(^WWWDATEN(0,+$horolog,YUSER,pYFORM,"V","AUTHORISATION",1))=$$$EnumReadOnly set blnReadOnly=$$$YES ;CORE-295
		
		;SR16704 vvvvv (Moved from inside the else)
		if blnReadOnly {
			set strReadOnly = $$$JStrue
			set strHidden   = $$$JShidden
		} else {
			set strReadOnly = $$$JSfalse
			if blnHidden {
				set strHidden = $$$JShidden
			} else {
				set strHidden = $$$JSvisible
			}
		}
		;SR16704
		
		set idClassField = $$$GetClassField(pYFORM,idField)

		if $get(^WWWDATEN(0,+$horolog,YUSER,pYFORM,"V","AUTHORISATION",1))=$$$EnumReadOnly { ;CORE-295.2
			if (pintRow="") {
				if idClassField="" {
					do HideControl^COMUtils(pYFORM,"",idField,blnHidden,"M") ;SR18016
				} else {
					do HideControl^COMUtils(pYFORM,idClassField,idField,blnHidden,"D") ;SR17784 ;SR18016
				}
			}
		} else {
			if idClassField="" {
				if pintRow'="" {
					; grid
					do UpdateManualField^COMGridEdit31Interface(pintRow,idField,strValue)   ;SR16704
				} else {																	;SR17714
					do PopulateDataField^COMUtils(pYFORM,idField,strValue,"M",,$$$NO) 		;SR17714
					if $$MenuType^WWW013()'=14{
						do UpdateFieldFormat^COMUtils("Y"_pYFORM_"M"_idField_".style","backgroundColor",strNewFieldColor)	;SR16704
					}
					do UpdateFieldFormat^COMUtils("Y"_pYFORM_"M"_idField,"readOnly",strReadOnly)						;SR16704
					do HideControl^COMUtils(pYFORM,"",idField,blnHidden,"M") ;SR18016
				}																			;SR17714
			
			} else {       ; TODO :  Check core and customisation for default values.
			
				if pintRow'="" {  ; This is a grid row
					if (strFontColor'="") && blnReadOnly {  ;SR16511
						do UpdateFieldFormat^COMUtils("tdY"_pintRow_"_"_idField_".style","color",strFontColor)
					}
					if $$MenuType^WWW013()'=14{
						do UpdateFieldFormat^COMUtils("tdY"_pintRow_"_"_idField_".style","backgroundColor",strNewFieldColor)
					}
				;	do UpdateFieldFormat^COMUtils("tdY"_pintRow_"_"_idField_".style","color","red")
					write "var element=document.getElementById('tdY"_pintRow_"_"_idField_"');"  ;SR16511
					write "if (element!=null) { element.Locked="_blnReadOnly_";}"				;SR16511
				;	write "document.getElementById('tdY"_pintRow_"_"_idField_"').Locked="_blnReadOnly_";" ;SR16511
				
					//  testing
					if $$IsMaskable^WWWFORM8(pYFORM,idField,YM) {  ;shobby ADHOC
						set objWWW122   = $get(^WWW122(0,pYFORM,idField,1))
		 				set idSeqNumber = $$$WWW122SequenceNumber(objWWW122)
						set $piece(pYFELD,Y,idSeqNumber) = $$ApplyMask^WWWFORM8($piece(pYFELD,Y,idSeqNumber),strMask)
					}
				
				} else {
					if strRelationClass '= "" {
						;if $get(YKEY)="" {
						;	;SR16890
						;	new YKEY,YFORM
						;	set YFORM=pYFORM
						;	set YKEY = $$GetYKEY^WWWFORMD()
						;}
						set strData = $piece(pYFELD,Y,strRuleField)
						if blnUseValueOfDataField && (strData '= "") {
							if strRelationKeys '= "" set strRelationKeys = strRelationKeys_","
							set strRelationKeys = strRelationKeys_""""_strData_""""
						}
						;set strRelationKeys=$replace(strRelationKeys,"SPRACHE",SPRACHE) ;SR16890
						;set strRelationKeys=$replace(strRelationKeys,"YKEY",YKEY)		 ;SR16890
						do PopulateComboBox^COMUtils(pYFORM,idClassField,$piece(pYFELD,Y,idClassField),"D",strRelationClass,strRelationKeys,strFilter)  ;CORE-114
					}
				
					if pYFELD'=YFELDSAVED {
						do PopulateDataField^COMUtils(pYFORM,idClassField,$piece(pYFELD,Y,idClassField),,,$$$YES) ;BR014624
					}
					if $$MenuType^WWW013()'=14{
						do UpdateFieldFormat^COMUtils("Y"_pYFORM_"D"_idClassField_".style","backgroundColor",strNewFieldColor)
					}else{
						set objCompany = $get(^WWW012(0,YM,1))
						if $piece($get(^WWW100(0,"FARBE",SPRACHE,$piece(objCompany,Y,64),1)),Y,1) = strNewFieldColor{
							do UpdateFieldFormat^COMUtils("Y"_pYFORM_"D"_idClassField_".style","borderColor",strNewFieldColor)
						}
					}
					do UpdateFieldFormat^COMUtils("Y"_pYFORM_"D"_idClassField,"readOnly",strReadOnly)
		 		
					do HideControl^COMUtils(pYFORM,idClassField,idField,blnHidden,"D") ;SR17784 ;SR18016
		 		
					do UpdateFieldFormatButton("CalendarButtonD"_idClassField,blnReadOnly,"date.gif")
					do UpdateFieldFormatButton("BUTTON_SEARCH"_idClassField,blnReadOnly,"search1.gif")
					do SetState^WWWFORM7FATSearch(pYFORM,"D",idClassField,blnReadOnly,blnMandatory)   ;SR17725
				;	do UpdateFieldFormatButton("Y"_pYFORM_"D"_idClassField_"MEMOLINK",blnReadOnly,"text.gif")
					; loop through buttons that are attached to fields.
					set objWWW122 = $get(^WWW122(0,pYFORM,idField,1))
					if objWWW122'="" {
						set lstButtons = $$$WWW122ButtonBehindInputField(objWWW122)
						for loop=1:1:$length(lstButtons,";") {
							set idButton = $piece(lstButtons,";",loop)
							if idButton'="" {
								set strImage = $$GetButtonImage^WWW124(pYFORM,SPRACHE,idButton,blnReadOnly)
								do UpdateFieldFormatButton("Y"_pYFORM_"D"_idClassField_"_"_idButton,blnReadOnly,strImage,$$$YES)					
							}
						}
					}
				}
			}
		}
 	}
	quit ""
	
	
UpdateFieldFormatButton(pidField,pblnReadOnly,pstrImage,pblnImageAlreadyCalcd=$$$NO)
	;-------------------------------------------------------------------------------
	; Code to update the state of a button
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 21-Jan-2010	shobby	SR17131: translate YGIF
	; 05-Jul-2007	shobby	SRBR014490:	Better management of the readonly flag.
	; 26-Jun-2007	shobby	SRBR014490: Use standard routine to get disabled name of
	; 							an image when there is a known counterpart.
	; 25-Jun-2007	shobby	SRBR014409: If image has not already been determined in
	; 							$$GetButtonImage then display disabled equivalent.
	; 07-Jun-2007	shobby	SRBR014409: Created
	;-------------------------------------------------------------------------------
	if ('pblnImageAlreadyCalcd) {
		set pstrImage = $$Name^WWWIMAGE(pstrImage,pblnReadOnly)
	}
	;do UpdateFieldFormat^COMUtils(pidField_".style","disabled",pblnReadOnly)
	do UpdateFieldFormat^COMUtils(pidField,"readOnly",$select(pblnReadOnly:$$$JStrue,1:$$$JSfalse))
	do UpdateFieldFormat^COMUtils(pidField_"IMG","src",$translate(YGIF,"\","/")_pstrImage)			 ;SR17131
	if pblnReadOnly do UpdateFieldFormat^COMUtils(pidField_"IMG.style","color","lightgray")			 ;SR17131
	quit
	
	
OnBlur(pstrExecOnBlur,&YINHALT,pstrField)
	;-------------------------------------------------------------------------------
	; Execute on blur code of a field
	; NOTE: YINHALT is the DISPLAY value
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 03-May-2010	GRF		SR15961: use dteToday for efficiency
	; 13-Jan-2009	shobby	SR15753: Update YFELD if any fields have been changed.
	; 27-Mar-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	new dteToday,loop
	new YXTEXT,YFELD,YMFELD,YKEY,YFELDBEFORE,YFELDSAVED
	
	set dteToday   = +$horolog     ; SR15961
	set YKEY       = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"P",1))
	set YFELD      = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"D",1))   ;DATENSATZ AKTUELL         ; modified class data record
	set YMFELD     = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"M",1))   ;DATENSATZ MANUELL AKTUELL ; manual fields data record
	set YFELDSAVED = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"D",2))   ;DATENSATZ GESPEICHERT     ; original class data record 

	set YFELDBEFORE = YFELD
	xecute pstrExecOnBlur                                              ; ***** EXECUTE *****

	for loop=1:1:$length(YFELD) {
		if $piece(YFELD,Y,loop)'=$piece(YFELDBEFORE,Y,loop) {
			do PopulateDataField^COMUtils(YFORM,loop,$piece(YFELD,Y,loop)) 
			if loop=YLFN set YINHALT = $piece(YFELD,Y,loop)
		}
	}
	set ^WWWDATEN(0,dteToday,YUSER,YFORM,"D",1)=YFELD
	
	;WENN DATUM UND PRÃFUNG UND ERGEBNISS, DANN WAR DATUMSUMSETZTUNG FALSCH, ZEILE SOLL DIES BEHEBEN: TYBD; 18,08,2003
	if %TXT(1)'="" if YTYP=1 if $extract(%TXT(1))=$$$Perform if YART="D" if $piece(YFELD,Y,YLFN)'="" if '$find(%TXT(1),$$$Perform_pstrField_"~") set %TXT(1)=%TXT(1)_$$$Perform_pstrField_"~"_$$^WWWDATE($piece(YFELD,Y,YLFN))  ;'$F EINGESETZT ;TYBD;30,4,2004
	
	if $extract(%TXT(1))=$$$Perform do DATEN
	quit
	
	
AdjustCurrencyAmount(&pstrYINHALT,pstrYDECIMAL="")
	;-------------------------------------------------------------------------------
	;	Simple Currency            : "12.34"  or  "22.35"
	;	Foreign Currency Structure : "12.34@USD22.35@.562"
	;	                              BBBBB CCCFFFFF RRRR
	;	                     BaseAmt  Currency  ForeignAmt  Rate
	;	                    
	;	Alternative  "USD22.35@1.779" 
	;	     - Determine the base value from a foreign currency and rate.
	; 
	; ***********************
	; Much of this code involves returning the value as a locale-based literal format
	; (sometimes as 2 pieces CCCFFFF@RRRR) so that the subsequent call to WWWTR can
	; convert it back to an internal value (calculating the Base Amt if necessary)
	; and then reconvert THAT to the final displayed value.
	; ***********************
	; 
	; ByRef :
	;	pstrYINHALT		Value (Initial and return) : literal appearance with *LOCALE*
	;					settings for thousands-decimal.
	;	pstrYDECIMAL	Character used as the decimal point (dot or comma)
	; 
	; (implicit)
	;	YOLDV			WWWDATEN value  -  always in Internal format
	;	                    Old Value = Base@CURForeign@Rate
	;	                        or    = Base      (where Foreign Currency doesn't apply)
	;
	; Returns: Nothing
	;
	; History:
	; 05-Jan-2010	GRF		SR15525: Activate AdjustCurrencyAmount
	; 28-May-2007	GRF		SR15525: major re-write due to numerous errors
	; 16-Mar-2007	GRF		SR12505: naked references
	; 03-Mar-2006	JW		SR14226: Moved check for "X@Y" outside check for form
	;  							type. Need for both.
	; 15-Nov-2005	JW		SR13865: Compare internal base values, not display values
	; 28-Oct-2005	JW		SR13074: Translate exchange rate if entered.
	; 16-Jun-2005	PO		SR12626: Made coins buttons on currency fields work again,
	; 							save would not save
	; 09-Jun-2005	PO		Created SR11349
	;-------------------------------------------------------------------------------
	new fltBaseAmt,fltFCAmt,fltRate,fltYINHALT,intDecimalPlaces,strAmt,strFCCode
	
	set:pstrYDECIMAL="" pstrYDECIMAL = $extract($$GetNumberDelimiters^COMUtilLocale(SPRACHE),2)
	
	if $length(pstrYINHALT,"@")=2 {
	;-----------------------------------
	; Take a foreign currency and external exchange rate;
	; invert the exchange rate before returning to the
	; calling routine which adds calculated base value.
	;-----------------------------------
	;        *LOCALE*              English (,.)        European (.,)
	;        input                "USD20.50@1.25"     "USD20,50@1,25"
	;        returned as          "USD20.5@.8"        "USD20,5@,8"
	; $$GetInternal^WWWTR(8,...)  <--      "16.4@USD20.5@.8"      -->
	; $$GetLiteral^WWWTR(8,...)      "16.40"             "16,40"
	;-----------------------------------
		set fltRate = $$$InternalForEx($piece(pstrYINHALT,"@",2))
		set:pstrYDECIMAL="," fltRate = $translate(fltRate,".",",")
		set $piece(pstrYINHALT,"@",2) = fltRate
		
	} else {
		if $get(^CacheTemp(YUSER,YFORM,"Toggles","Currency"))'="Foreign" {
		;-----------------------------------
		; *** VIEWING THE BASE CURRENCY ***
		; includes forms where foreign currency is not applicable.
		;
		; Where showing a foreign currency amount and the base value hasn't changed;
		;    strip down to the original "CURForeign@Rate" and convert to *LOCALE* format
		;    (only decimal point changed - no thousands delimiter used)
		;-----------------------------------
			if $find(YOLDV,"@") && (+$piece(YOLDV,"@",1)=+$$$InternalCurrency(pstrYINHALT)) {
				set pstrYINHALT = $piece(YOLDV,"@",2,99)
				set:pstrYDECIMAL="," pstrYINHALT = $translate(pstrYINHALT,".",",")
			}
			
		} else {
		;-----------------------------------
		; *** VIEWING THE FOREIGN CURRENCY ***     ;(...,"Toggles","Currency"))="Foreign"
		; 
		; 1.  Zero is Zero                  - No Further Action
		; 2.  Old Value without FC (new entry?)
		;     a.  New Value with FC         - use new value as is
		;     b.  New Value without FC      - new value is FCAmt; get FCCode and Rate from master; calc BaseAmt
		; 3.  Old Value has FC
		;     a.  New Value with FC         - 3 pieces;   get Rate from new value
		;     b.  New Value without FC      - FCAmt only; get Rate from old value
		;     Then
		;         Return old FCCode @ new FCAmt @ Rate 
		;-----------------------------------
			quit:+pstrYINHALT=0
	 		
			if (YOLDV'["@") {
				if (pstrYINHALT'["@") {
		;-----------------------------------
		; Case 2b
		;-----------------------------------
					set strFCCode   = $get(^CacheTemp(YUSER,YFORM,"Display Currency"))
					set fltRate     = $get(^CacheTemp(YUSER,YFORM,"Exchange Rate"))
					if +fltRate=0 set fltRate = $$FindConversionRate^WWWZAHL(strFCCode,$horolog)
					if strFCCode'="" set intDecimalPlaces = $$$WWWWAEDecimalPoints($get(^WWWWAE(0,strFCCode,1)))
					if $get(intDecimalPlaces)="" set intDecimalPlaces = 2     ; must explicitly set to zero
					set fltFCAmt     = $$$InternalCurrency(pstrYINHALT)
					set fltBaseAmt   = +$justify(fltFCAmt * fltRate,0,intDecimalPlaces)
					set pstrYINHALT  = fltBaseAmt_"@"_strFCCode_fltFCAmt_"@"_fltRate
					set:pstrYDECIMAL="," pstrYINHALT = $translate(pstrYINHALT,".",",")
				}
			
			} else {
		;-----------------------------------
		; Case 3a/b - remove *LOCALE* format first
		;  "16.4@USD20.5@.8"  or  "20.5"
		;-----------------------------------
				set:pstrYDECIMAL="," pstrYINHALT = $translate(pstrYINHALT,",.",".")
				
				if pstrYINHALT["@" {    ; 3a
					set fltFCAmt = +$$FCAmount^WWWTR(pstrYINHALT)
					set fltRate  = $piece(pstrYINHALT,"@",3)     
					
				} else {                ; 3b
					set fltFCAmt = +pstrYINHALT
					set fltRate = $piece(YOLDV,"@",3)       ; "16.4@USD20.5@.8"
				}
				
				set pstrYINHALT = $$Cur^WWWTR(YOLDV)_fltFCAmt_"@"_fltRate
				set:pstrYDECIMAL="," pstrYINHALT = $translate(pstrYINHALT,".",",")
			}
		}
	}
	quit
	
	
PARAMETER(YSATZ,YDVOR)
	;-------------------------------------------------------------------------------
	; Inputs:
	; 	YSATZ			objWWW122	Form Data Field
	; 	YDVOR			objWWW003	Class Data Field
	; 	objCustFld		objWWW122D	Customisation Data Field   ****BR014619 no longer necessary
	;
	; History:
	; 05-Jan-2010	GRF		S]]><![CDATA[R15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 29-Jun-2009	PPP		SR16663: Add the Calculated Relation Display Fields
	; 10-Oct-2007	GRF		SR15563: Macro change
	; 18-Sep-2007	shobby	SRBR014619: Customisations are considered when YSATZ is
	; 							obtained in GetDetails so 3rd parameter objCustFld
	; 							is no longer necessary.
	; 23-Jan-2007	JW		SR15384: Encapsulated functionality. Rewrote to append to %TXT(1)
	; 16-Mar-2007	GRF		SR12505: naked references
	; 12-Oct-2006	JW		SR15115: Check customisation for relational display options
	; 27-Jan-2006	PO		SR14130: Unescape data when it is stored in the database
	; 15-Dec-2005	PO		SR13792: When blurring out of a relation field, use EscapeHyperEventData
	; 22-Jul-2005	JW		SR12615: Added macros. Removed "test relation on edit"
	; 19.05.2003	TYBD
	;-------------------------------------------------------------------------------
	;SET $ZTRAP="ERROR1^WWWEVENT"
	new idField,idRelClass,idSendFld,intDisplay,intField,intType
	new strCalcRelFields,strField,strGlobal,strMsg,strRelFields,strRelKeys,strTmp,strValue
	new YDATA,YSORT,YI

	set strMsg     = ""
	set strValue   = ""
	set intDisplay = ""
	
	set strRelFields = $$$WWW122RelationFieldSequence(YSATZ)
	set strCalcRelFields = ""	//SR16663

	set idRelClass = $$$WWW122RelationClass(YSATZ)

	if idRelClass'="" {
		set strRelKeys = $$$WWW122RelationalPrimaryKey(YSATZ)  ;KEY F. RELATION
		set:strRelFields="" strRelFields = $$$WWW122RelationalDataField(YSATZ)
		set intDisplay       = $$$WWW122RelationDisplayOptions(YSATZ)  ;always set display
		set strCalcRelFields = $$$WWW122CalcRelationalDataField(YSATZ)
		
	} elseif YDVOR'="" {
		set idRelClass = $$$WWW003RelationDatabase(YDVOR)
		set strRelKeys = $$$WWW003RelationalPrimaryKeys(YDVOR)
		if strRelFields=""     set strRelFields     = $$$WWW003RelationalDisplayItems(YDVOR)
		if strCalcRelFields="" set strCalcRelFields = $$$WWW003CalcRelationalDisplayItems(YDVOR)
		if intDisplay=""       set intDisplay       = $$$WWW003RelationDisplayOptions(YDVOR)   ;ERST SPÄTER ANZEIGEN ;only subsequent display 
	}
	if (strRelFields="") && (strCalcRelFields="") set strRelFields = 1
	
	set idSendFld = $$$WWW122RelationSendToField(YSATZ)
	
	if idRelClass="" && (idSendFld'="") {
		set strField = $$GetID^WWWField(YFORM,idSendFld,.intType,.intField)		;SR15384
		set strMsg = strField_Y_YINHALT
		set $piece(^WWWDATEN(0,+$horolog,YUSER,YFORM,intType,1),Y,intField)=$translate($$$UnEscapeHyperEventData(YINHALT),Y,"-") ;IN ANDERES FELD UMLENKEN ;TYBD;20.3.03 NUR WENN NICHT LEER ;within field only when Not void 
		
		$$$Append(%TXT(1),$$$Perform_strMsg)
	}
	
	;--------------------------------------- *** EARLY EXITS ***
	quit:idRelClass=""
	quit:(idSendFld="")&&(intDisplay'=1)
	; search field 
	if YTYP=$$$FLDBoolean if %TXT(1)'=""                              if intDisplay=2  quit   ;TYBD;15.5.2003;23638;CHECKFELD MIT FUNKTION ABER KEIN PARAMETER
	if %TXT(1)'="" if $find(%TXT(1),"READ")||($find(%TXT(1),"WRITE")) if +intDisplay=0 quit   ;DATEN IMMER ANZEIGEN DAHER KEINE RELATION;TYBD;8,07,2003;23886;
	if $find(idRelClass,"PLZ") if $get(YOLDV)=YINHALT                                  quit   ;GLEICHE plz ;same 
	;---------------------------------------
	
	if YTYP'=$$$FLDMemo set strValue=" "
	set strGlobal="^"_idRelClass_"("_$$^WWWYM(idRelClass,1)  ;Key assembling
	
	do
	. set YDATA=$get(^WWW001(0,idRelClass,1)) 
	. if $piece(YDATA,Y,12)'="" if $piece(YDATA,Y,13)'="" do  ;UCI UND VOL ;UCI And 
	. . quit:$find(strGlobal,"^[")
	. . set strGlobal="^["""_$piece(YDATA,Y,12)_""","""_$piece(YDATA,Y,13)_"""]"_$piece(strGlobal,"^",2,999)
	
	set Q=0
	if idRelClass'="" set YDATA=$get(^WWW001(0,idRelClass,1))
	for YI=1:1 set YPARA(9)=$piece(strRelKeys,",",YI) quit:YPARA(9)=""  set strGlobal=strGlobal_YPARA(9)_"," if $extract(YPARA(9))'="""" if $get(@(YPARA(9)))="" set Q=1 quit   ;WEITERE SCHLÜSSEL ;wrench 
	
	if Q=1 set Q=0 quit                     ;  *** EARLY EXIT ***
	
	if $piece(YDATA,Y,8)'=4 set YPARA(6)=strGlobal_""""_$extract($translate(YINHALT,$char(13,10)_"""| "),1,100)_""",1)"
	if $piece(YDATA,Y,8)=4  set YPARA(6)=strGlobal_""""_$extract($translate(YINHALT,$char(13,10)_"""| "),1,100)_""")"    ;ALTERNATIVE ;option 
	set YSORT=$translate($$^WWWSETL(YPARA(6)),"|",$char(13))

	if YSORT'="" do
	. new idFieldNum
	. set strValue=""
	. ;
	. ; Calculated Fields
	. if $data(strCalcRelFields)	do
	. . for YI=1:1 set YI(1)=$piece(strCalcRelFields,";",YI) quit:YI(1)=""  do
	. . . set idField = $piece(strCalcRelFields,";",YI(1))
	. . . if idField set strValue=strValue_$$GetCalculatedValue^WWWFOR71(idRelClass,idField,strRelKeys_","_YINHALT,YSORT)
	. ;
	. for YI=1:1 set YI(1)=$piece(strRelFields,";",YI) quit:YI(1)=""  do
	. . if YI'=1 if strValue'="" set strValue=strValue_","
	. . set idFieldNum = +$piece(strRelFields,";",YI)
	. . if $piece(YSORT,Y,idFieldNum)'="" if $data(^WWW003(0,idRelClass,idFieldNum,1)) do
	. . . new YART
	. . . set YART=$piece($get(^WWW003(0,idRelClass,idFieldNum,1)),Y,3)
	. . . if YART'="" if YART'=6 set $piece(YSORT,Y,idFieldNum)=$$GetLiteral^WWWTR(YART,$piece(YSORT,Y,idFieldNum))  ;FEHLER IN ANZEIGE DER RELATION
	. . ;
	. . set strTmp = $piece(YSORT,Y,idFieldNum)
	. . set strValue=strValue_$$$EscapeHyperEventData(strTmp)
	
	if idRelClass="WWW013" if $translate(strValue," ,")="" do 
	. if YINHALT'="" if '$data(^WWW013(0,YINHALT,1)) if $data(^WWW013s(0,3,YINHALT)) do
	. . new YINHALT1
	. . set YINHALT1=$order(^WWW013s(0,3,YINHALT,"")) 
	. . if YINHALT1'="" do
	. . . set strValue=$piece($get(^WWW013(0,YINHALT1,1)),Y,+strRelFields)
	
	if YTYP=$$$FLDMemo if $extract($translate(strValue,$char(13,10)_"|"),1,10)=$extract($translate(YINHALT,$char(13,10)_"|"),1,10) set strValue="" 
	if $extract(strValue)=" " set strValue = $extract(strValue,2,999)   ;BLANK 
	
	if idSendFld'="" {
		if (strValue'=YINHALT) && (strValue'=" ") && (strValue'="") {
			set strField = $$GetID^WWWField(YFORM,idSendFld,.intType,.intField)
			set strMsg = strField_Y_strValue
			set $piece(^WWWDATEN(0,+$horolog,YUSER,YFORM,intType,1),Y,intField)=$translate(strValue,Y,"-") ;IN ANDERES FELD UMLENKEN ;NUR WENN NICHT LEER ;within field only when Not void 
		}
	} else {
		set strMsg = "DUMMY"_YART_YLFN_Y_strValue
	}
	if strMsg'="" $$$Append(%TXT(1),$$$Perform_strMsg)
	quit
	
	
MSG ;
	set %TXT(1)=""
	
HELP
	;-------------------------------------------------------------------------------
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 09-Aug-2022   Paulo   LEAN-321: Altered Help text for show HelpManual from ^WWW122 if exists
	; 20-Mar-2014	shobby	CORE-272: Give help Popup a unique ID so not to interfere with other popups
	; 31-Jul-2012	shobby	SR18075: Use new field for SPRACHE in initialise
	; 27-May-2011	shobby	SR16925.2: Call out to common code in WWWHELP
	; 25-May-2011	shobby	SR16925.2: IndividualHelpText->CustomHelpText
	; 18-Apr-2011	shobby	SR17705: Display a record if the last change made the
	; 							value an empty string.
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 02-Dec-2009	shobby	SR16943.3: Sometimes the 'last changes' message wouldn't show.
	; 19-Nov-2009	shobby	SR16943:  Reworked to display the F1 help text in a popup html div.
	; 18-Sep-2008	shobby	BR014966: Support language texts for customisation help text.
	; 23-Jan-2007	JW		SR15384: Encapsulated functionality. Removed redundant code.
	; 06-Nov-2006	Steve S	SR14915: Unescape special characters
	; 27-Sep-2006	HEBER	SRBR014272: F1 help text for fields default to english
	;-------------------------------------------------------------------------------
	new objCustFld,strField,strTempValue,strUpper
	new YBED,YDATEI,YEART,YFELD,YFKEY,YFORM,YKEY,YI,YI1,YINHALT,YLFN1,YSATZ,YUSER
	
	set YKEY = ""
	do SplitRequest(.%REQUEST,,,.YUSER,.YFORM,.strField)
	
	do Initialise(YUSER,.%REQUEST)    ;SR18075
	quit:$extract(%TXT(1))=$$$AlertFollowing			; *** EARLY QUIT - bad user
	quit:YFORM=""  ;FORMULAR NICHT VORHANDEN ;form Not on hand 
	
	do SplitID^WWWField(strField,YFORM,.YI,.YLFN)
	quit:(YLFN="")||(YI="")
	
	if $extract(YI)="L" set YLFN = 1,YI = "M"  ;TYBD;HILFE BEI LISTGENERATOREN ;succour next to 
	
	do GetDetails^WWWField(YFORM,YI,YLFN,.YDATEI,.YLFN1,.YVOR,,,.objCustFld,.YEART)
	
	set YTEXT = $$^WWWSETL("^WWW127(0,"""_YFORM_""","""_YI_""","""_YLFN_""","""_$$^WWWLANGU(YBED)_""",1)")
	
	if YTEXT=""           set YTEXT = $$^WWWSETL("^WWW127(0,"""_YFORM_""","""_YI_""","""_YLFN_""",""EN"",1)")
	if YI="M" if YTEXT="" set YTEXT = $$^WWWSETL("^WWW127(0,"""_YFORM_""","""_YI_""",1,"""_$$^WWWLANGU(YBED)_""",1)")
	
	if YI="P" {
		set YTEXT = $$GetPrimaryKeyText^WWWHELP(YTEXT,$$$NO,YLFN1)
		
	} elseif (YI="D") || (YI="M") {
		set YTEXT = $$GetDataFieldText^WWWHELP(YTEXT,$$$NO,YLFN1)
		
	;SR16925.2 } else {
	;SR16925.2 set YTEXT=$piece(YTEXT,"~",1)  ;NUR DER NORMALHILFE TEXT ;only the Text 
	
	;SR16925.2 if objCustFld'="" {
	;SR16925.2 	if $$$WWW122DHideAlphalincHelpText(objCustFld) set YTEXT = ""  ;SR16925.2
	;SR16925.2 	if YTEXT'="" set YTEXT = YTEXT_"|"
	;SR16925.2 	set YTEXT = YTEXT_"|"_$$CustomHelpText^WWW122D(objCustFld) ;BR014966 ;SR16925.2
	;SR16925.2 }
	
	;SR16925.2 if YI'="M" if YTEXT="" set YTEXT = $$^WWWTEXT(28)		; "No help text available"
	}
	
	if (YTEXT'="") && ($zconvert($extract(YTEXT,$length(YTEXT)-5,$length(YTEXT)),"L")'="<br />") set YTEXT = YTEXT_"<br />"  ;SR16943.3
	
	do
	. set %TXT(1) = YTEXT_"<strong><small>"
	. new YA,YKEY,YLAST,YII,blnHeader		;SR16943.3
	. quit:YDATEI=""
	. set YKEY = $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"P",1))
	. quit:YKEY=""
	. ;
	. set blnHeader = $$$NO
	. set YA    = ""
	. set YA(1) = "^WWWLAST("""_YM_""","""_YDATEI_""","""_YKEY_""",YA)"
	. set YA(2) = "^WWWLAST("""_YM_""","""_YDATEI_""","""_YKEY_""",YA,1)"
	. ;SR17705 set YLAST = ""
	. set YLAST = $char(0) ;SR17705
	. for YII=1:1:8 set YA = $order(@(YA(1)),-1) quit:YA=""  do
	. . quit:YLAST=$piece($get(@(YA(2))),Y,YLFN)
	. . ;
	. . if 'blnHeader set %TXT(1) = %TXT(1)_$char(13)_$$^WWWTEXT(390,,1)_$char(13) set blnHeader = $$$YES  ; "Last Changes:"  ;SR16943.3
	. . set YLAST = $piece($get(@(YA(2))),Y,YLFN)
	. . ; vvv SR15525
	. . set %TXT(1) = %TXT(1)_"("_$$^WWWDATE(YA)_" "_$$^WWWTIME(YA)_") "
	. . set strTempValue = $extract($translate($$GetLiteral^WWWTR(YEART,$piece($get(@(YA(2))),Y,YLFN)),"|'#?&"," "),1,40)
	. . if YEART=$$$FLDBoolean  set %TXT(1) = %TXT(1)_$piece($get(^WWW100(0,"JA/NEIN",SPRACHE,+strTempValue,1)),Y,1)_$char(13)
	. . if YEART'=$$$FLDBoolean set %TXT(1) = %TXT(1)_strTempValue_$char(13)
	. set %TXT(1) = %TXT(1)_"</small></strong>"
	
	set %TXT(1) = $$Replace^COMUtilStr(%TXT(1),$char(13),"<br />")
	
	
	
	set objWWW122 = $Get(^WWW122(0,YFORM,YLFN,1))
	set obj = $$$WWW122HelpManual(objWWW122)	
	set hasObj = 0
	set hasOldHelp = 0
	
	if (obj '= ""){
		if (obj '= "Nenhum texto de ajuda foi adicionado a este campo." && $L(obj) > 0){
			set %TXT(1) = obj
		}
	}
	
	do Show^WWWPopupMessage(%TXT(1),$$^WWWFELDNAME(YFORM,YI,YLFN),"Y"_YFORM_YI_YLFN,,"dscPMHelp") ;CORE-272
	set %TXT(1) = ""
	quit	
	
MANU
	;-------------------------------------------------------------------------------
	;	MANUELLE ROUTINE
	;
	; History:
	; 30-Jan-2014	shobby	CORE-307: YOPTION
	; 31-Jul-2012	shobby	SR18075: Use new field for SPRACHE in initialise
	; 23-Jan-2007	JW		SR15384: Encapsulated functionality
	; 10-Aug-2006	FrankF	BR014066: Setting the YSEITE global variable.
	;-------------------------------------------------------------------------------
	new YFKEY,YKEY,YUSER,YFORM,YDATEI,YFELD,YSATZ,YINHALT,YBED,YVAR,YART,YDATA,YPR,YPR1,YUCI
	new YROUTINE,YLABEL,YSEITE,YA,YOPTION ;CORE-307
	
	set YKEY = ""
	do SplitRequest(.%REQUEST,.YINHALT,.YUCI,.YUSER,.YFORM,.YROUTINE,,,.YVAR)
	
	do Initialise(YUSER,.%REQUEST)    ;SR18075
	quit:$extract(%TXT(1))=$$$AlertFollowing			; *** EARLY QUIT - bad user
	
	if YFORM'="" if $$$WWW120SaveServerdata($get(^WWW120(0,YFORM,1))) set YHTMFORM = "WWW2"
	if YVAR="LOCKSTART" set ^WWWDATEN(0,+$horolog,YUSER,YFORM,"LOCK",2) = $horolog   ;SETZEN DES FELDLOCKS
	if YVAR="LOCKEND"  kill ^WWWDATEN(0,+$horolog,YUSER,YFORM,"LOCK",2)              ;LÖSCHEN DES FELDLOCKS
	
	set YLABEL = ""
	if $extract(YROUTINE,1,2)="**" do  quit                                           ;FIS;26222;23.08.04;KLASSENMETHODE AUFRUFEN
	. set YA = "SET %TXT(1)=##"_$piece($extract(YROUTINE,3,999),"(",1,2)_"(YINHALT,YVAR)"
	. xecute YA
	
	if $find(YROUTINE,"^") set YLABEL = $piece(YROUTINE,"^",1),YROUTINE = $piece(YROUTINE,"^",2)     ;FIS;26222;20.08.04;LABEL AUFRUFEN
	if $translate(YROUTINE,"""'")'=""  if $$EXIST^%R(YROUTINE_".OBJ",YUCI) do  quit:%TXT(1)'=""      ;Bec;05.12.03;24774;CHECK IF COMPLED ROUTINE EXIST.
	. set YA = "SET %TXT(1)=$$"_YLABEL_"^"_YROUTINE_"(YINHALT,YVAR)"
	. xecute YA
	quit
	
	
VARIABLE 
	;-------------------------------------------------------------------------------
	; 		VARIABLE SICHERN ;safeguard 
	;
	;	%REQUEST			="NAMESPACE.USER.FORM..0..YVARIABLE"   ;
	;	%REQUEST(1)			="VALUE"
	;	$P(%REQUEST,".",6)	=FIXKEY (VALIDIERUNG MIT FIXVALID_FELDTYP)
	;
	; Returns: Nothing
	;
	; History:
	; 31-Jul-2012	shobby	SR18075: Use new field for SPRACHE in initialise
	; 03-May-2010	GRF		SR15961: use dteToday for efficiency
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR;
	;							Activate AdjustCurrencyAmount
	; 23-Jan-2007	JW		SR15384: Encapsulated functionality
	; 16-Mar-2007	GRF		SR12505: naked references
	; 28-Oct-2005	JW		SR13074: Call AdjustCurrencyAmount
	; 10-Jun-2005	PO		SR12050: Allowing header to be in base while grid is in FC
	;-------------------------------------------------------------------------------
	new YFKEY,YKEY,YUSER,YFORM,YDATEI,YFELD,YSATZ,YINHALT,YBED,YVAR,YART,YDATA,YPR,YPR1,YOLDV
	new dteToday,strStored
	
	set YKEY  = ""
	set YSATZ = ""
	
	do SplitRequest(.%REQUEST,.YINHALT,,.YUSER,.YFORM,,,.YFKEY,.YVAR)
	do Initialise(YUSER,.%REQUEST)    ;SR18075
	quit:$extract(%TXT(1))=$$$AlertFollowing			; *** EARLY QUIT - bad user
	quit:(YFORM="")||(YVAR="")
	
	set dteToday = +$horolog   ; SR15961
	set YOLDV    = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"V",YVAR,1))
	
	if '(($extract(YFKEY,6,99)=$$$FLDCurrency) && ($get(^CacheTemp(YUSER,$get(^CacheTemp(YUSER,"Grid","Container")," "),"Toggles","Currency"))="Foreign")) {
	 	set ^WWWDATEN(0,dteToday,YUSER,YFORM,"V",YVAR,1)=YINHALT  ;DATEN ZUR PRUEFUNG
	
	} else {
		new curFCAmount,curBase1,curForeign1,strCurrency1,fltRate1,curBase2,curForeign2,strCurrency2,fltRate2
		
		if +YINHALT=0 {		; JW fixed
			if YINHALT'="" set YINHALT=0
			set ^WWWDATEN(0,dteToday,YUSER,YFORM,"V",YVAR,1)=YINHALT
		} else {
			do Split^WWWTR($get(^WWWDATEN(0,dteToday,YUSER,YFORM,"V",YVAR,1)),.curBase1,.curForeign1,.strCurrency1,.fltRate1)
			if YINHALT["@" {
				set curFCAmount = $$GetInternal^WWWTR($$$FLDCurrency,YINHALT)
			} else {
				set curFCAmount = $$GetInternal^WWWTR($$$FLDCurrency,$get(^CacheTemp(YUSER,$get(^CacheTemp(YUSER,"Grid","Container")," "),"Display Currency"))_YINHALT_"@"_fltRate1)
			}
			do Split^WWWTR(curFCAmount,.curBase2,.curForeign2,.strCurrency2,.fltRate2)
	;		if '((curForeign1=curForeign2)&&(fltRate1=fltRate2)) {
			if (curForeign1'=curForeign2) || (fltRate1'=fltRate2) {
				set ^WWWDATEN(0,dteToday,YUSER,YFORM,"V",YVAR,1) = curFCAmount
			}
		}
	}
	
	if $extract(YFKEY,1,5)="VALID" do  ;RÜCKGABE FORMATIEREN ;format 
	. new YTYP
	. set YTYP = $extract(YFKEY,6,99)                                 ;FELDTYP
	. if +YTYP'=0 do
	. . if YTYP=$$$FLDNumeric set YINHALT = $justify(YINHALT,0,0)     ; NUR GANZE ZAHLEN ;only 
	. . if YTYP=$$$FLDDate do                                         ; Date
	. . . set strStored = $$TranslateDate^WWWFieldRules(.YINHALT)	  ; %TXT(1) may be set
	. . . if +$$^WWWDATE1(strStored)=0 set YINHALT=""                 ; NUR GÜLTIGES DATUM ;only Date 
	. . ;
	. . if ($get(^CacheTemp(YUSER,"Grid","Name")) = YFORM) set YDECIMALLEN = 9 ; SR11824 Set decimal points for Grid. (used by WWWTR)
	. . if YTYP=$$$FLDCurrency do AdjustCurrencyAmount(.YINHALT,$get(YDECIMAL))
	. . ;
	. . set YINHALT = $$GetInternal^WWWTR(YTYP,YINHALT)
	. . if '((YTYP=$$$FLDCurrency) && ($get(^CacheTemp(YUSER,$get(^CacheTemp(YUSER,"Grid","Container")," "),"Toggles","Currency"))="Foreign")) do
	. . . set ^WWWDATEN(0,dteToday,YUSER,YFORM,"V",YVAR,1) = YINHALT
	. . set YINHALT = $$GetLiteral^WWWTR(YTYP,YINHALT)  ;ANZEIGEFORMAT
	. ;
	. set %TXT(1) = $$$Perform_YVAR_"~"_YINHALT
	
	quit
	
	
ERROR
	;-----------------------------------]]><![CDATA[---------------------------------]]><![CDATA[-----------
	;					ERROR HANDLER
	; History:
	; 27-Mar-2008	GRF		SR15647: Add a second's delay to ensure not being over-written
	;-------------------------------------------------------------------------------
	; "An Internal ERROR Has Occurred In Your Application."
	set %TXT(1) = "!"_$$^WWWTEXT(387)_" "_$char(13)_"EventBroker: "_$zerror
	if $find($zerror,"<MAXSTRING>")   set %TXT(1) = "!"_$$^WWWTEXT(401)_"!"    ; "Data Record is too long!"  DATENSATZ ZU LANG
	if $find($zerror,"<STRINGSTACK>") set %TXT(1) = "!"_$$^WWWTEXT(401)_" !"
	set ^WWWERROR(0,+$horolog,$piece($horolog,",",2),+$get(YUSER),1) = $zerror_" / Event"
	hang 1
	if +$get(YHYPER)=1     set %TXT(1) = $translate(%TXT(1),$char(13,10),"'") quit  ;SEND ANSWER TXT(1)
	if $find(%TXT(1),"&#") set %TXT(1) = $piece(%TXT(1),"&#",1)              ;KEINE SONDERZEICHEN VIA EVENT ;no special character via 
	if $get(YHYPER)=0 do sendline^%mgwj("")                                  ;SEND ANSWER    
	quit
	
	
ERROR1 ;ERROR HANDLER
	set %TXT(1)=""
	if +$get(YHYPER)=1     set %TXT(1) = $translate(%TXT(1),$char(13,10),"'") quit  ;SEND ANSWER TXT(1)
	if $find(%TXT(1),"&#") set %TXT(1) = $piece(%TXT(1),"&#",1)  ;KEINE SONDERZEICHEN VIA EVENT ;no special character via 
	if $get(YHYPER)=0 do sendline^%mgwj("")                    ;SEND ANSWER    
	quit
	
	
IsLockOkTest(YUSER,YFORM,pdteToday="")
	;-------------------------------------------------------------------------------
	; Do we need a lock, and if so, do we have it ?
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 04-Jun-2008	shobby	SRBR014952: Separated logic from error message.
	; 23-Jan-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	new strLock,blnOk
	
	set blnOk = $$$YES
	if pdteToday="" set pdteToday = +$horolog
	
	;---------------------------------------
	; 1. Get ^WWW006 data path from WWWDATEN("LOCK")
	; 2. If the ^WWW006 entry for the form record is not defined
	;       Return NO
	;    else it exists
	;       if it is held by a different user
	;          Return No
	;---------------------------------------
	;   SR15961 looks at how to refresh the lock so that another user cannot gain
	;           ownership just because user hasn't saved or changed tabs but is
	;           still working on the data - still may not be able to detect when 
	;           working WITHIN a memo field but not blurring.
	;---------------------------------------
	set strLock = $get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"LOCK",1))
	; Contents of LOCK: ^WWW006(0,+$H,"^{Global Name}/{Shared/Co. ID}.{Record key(s)}.1/",1) - check for "+" is a issue if key includes "+"
	if (strLock'="") && '$find(strLock,"+") {
		if '$data(@strLock) {
			set blnOk = $$$NO
		
		} elseif ($$$WWW006User1(@strLock)'=YUSER) {  ; FIXME: will block record where lock has expired - see IsLocked^WWW006
			set blnOk = $$$NO
		}
	}
	quit blnOk
	
	
IsLockOk(YUSER,YFORM,pdteToday="")
	;-------------------------------------------------------------------------------
	; Do we need a lock, and if so, do we have it ?
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 04-Jun-2008	shobby	SRBR014952: Separated logic from error message.
	;-------------------------------------------------------------------------------
	new blnOk
	
	set blnOk = $$IsLockOkTest(YUSER,YFORM,pdteToday)
	set:'blnOk %TXT(1) = $$$AlertFollowing_$$^WWWTEXT(392,,1)
	; "Another User has changed the data record. Please Refresh This Page. Save is not possible."
	
	quit blnOk
	; FIXME : message is not quite accurate - user may not have actually made a
	;         change - he has simply gotten control of the lock. <GRF>
	
	
SetLock(pidUser,pidForm,pdteToday="")
	;-------------------------------------------------------------------------------
	; Refresh Record Lock
	; 
	; History:
	; 04-May-2010	GRF		SR15961: Created
	;-------------------------------------------------------------------------------
	new objLock,strLock
	
	quit  ; DISABLED FOR NOW
	
	if pdteToday="" set pdteToday = +$horolog
	set strLock = $get(^WWWDATEN(0,pdteToday,pidUser,pidForm,"LOCK",1))
	if strLock'="" {
		set objLock = @strLock
		if $$$WWW006User1(objLock)=pidUser {
			set @strLock = pidUser_Y_$piece($horolog,$$$COMMA,2)
		}
	}
	quit
	
	
Store(&YINHALT,&pstrStored)
	;-------------------------------------------------------------------------------
	; Store the translated value in WWWDATEN
	; 
	; Params:	YINHALT - entered value
	; 			pstrStored - stored value
	;
	; Returns:
	;
	; History:
	; 03-May-2010	GRF		SR15961: use dteToday for efficiency
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR;
	;							Activate AdjustCurrencyAmount
	; 01-Feb-2007	JW		SR15384: Encapsulated, cleaned up.
	;-------------------------------------------------------------------------------
	new blnDone,blnFullKey,dteToday,intLast,strCur,strKeys,FIELD,strVar
	
	set YOLDV      = ""  ; Old value
	set pstrStored = ""
	set dteToday   = +$horolog   ; SR15961
	
	if YART'="P" {
		set FIELD = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1))
		set YOLDV = $piece(FIELD,Y,YLFN)
		if '$data(YDECIMAL) new YDECIMAL		; Is this ok here?
		
		if (YTYP=$$$FLDMemo) && (YVAR="PLUS") {	   ;SONDER SAVE TEXT>1000 
			if ($length(FIELD)+$length(YINHALT))>32000 {
				set YINHALT = $extract(YINHALT,1,32000-$length(FIELD))
				if $length(YOLDV)<1200 {
					set %TXT(1) = $$$AlertFollowing_$$^WWWTEXT(401)  ; "Data Record is too long!"
				}
			}
			set pstrStored = YOLDV_$$GetInternal^WWWTR(YTYP,YINHALT)
			set $piece(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1),Y,YLFN) = pstrStored
			
		} else {
			if YTYP=$$$FLDCurrency do AdjustCurrencyAmount(.YINHALT,$get(YDECIMAL))
			
			; SR12236: Form ---> WWWTR ----> WWWDATEN (NOT FORM UPDATE!!!)
			if '$find(YINHALT,";") {
				if pstrStored="" set pstrStored = $$GetInternal^WWWTR(YTYP,YINHALT,YDECIMALLEN)  ;DATEN ZUR PRUEFUNG
				set YINHALT = $$GetLiteral^WWWTR(YTYP,pstrStored,YDECIMALLEN)
				
			} else {
				set pstrStored = $translate(YINHALT,Y,"-")  ;DATEN ZUR PRUEFUNG
			}
			
			if (YTYP=$$$FLDCurrency) {
				if $find(pstrStored,"@") {	 	; SR11349
					set strCur=$get(^CacheTemp(YUSER,YFORM,"Toggles","Currency"))
					if strCur="Foreign" {
						if $get(^CacheTemp(YUSER,YFORM,"Display Currency"))'=$$Cur^WWWTR(pstrStored) {
							set pstrStored=0
							set YINHALT = " "		; Space is necessary
						} else {
							set YINHALT = $$GetLiteral^WWWTR(YTYP,$$FCAmount^WWWTR(pstrStored),YDECIMALLEN)
						}
					} else {
						set YINHALT = $$GetLiteral^WWWTR(YTYP,$piece(pstrStored,"@",1))  ;FIS;25727;FREMDWÄHRUNG;24.05.04
					}
				}
			}
			
			; STORED BACK INTO WWWDATEN
			set $piece(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1),Y,YLFN) = pstrStored
			
			; No idea what this code is supposed to be doing.  Putting values in other fields?
			set strVar = $$$WWW122VariableForEventBroker(YSATZ)
			if ($extract(strVar)="@") && ($extract(YVAR,1,4)="MORE") {
				new MFIELD,MVALUE,MEART
				set MFIELD = $extract(strVar,2,99)  ;WEITERES FELD ZUR SPEICHERUNG ;field 
				set MVALUE = $extract(YVAR,5,99)    ;FELDINHALT
				
				for MFIELD(1)=1:1 {
					set MFIELD(2) = $piece(MFIELD,",",MFIELD(1)) 
					quit:MFIELD(2)=""
					
					set MVALUE(2) = $piece(MVALUE,Y,MFIELD(1)) 
					
					set MEART    = 6
					set MEART(1) = $get(^WWW122(0,YFORM,MFIELD(2),1))
					set MEART(2) = $piece(MEART(1),Y,1)
					if MEART(2)'="" if YDATEI'="" set MEART = $piece($get(^WWW003(0,YDATEI,MEART(2),1)),Y,3)
					if '$find(MVALUE(2),";") set $piece(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1),Y,MFIELD(2)) = $$GetInternal^WWWTR(MEART,MVALUE(2))  ;DATEN ZUR PRUEFUNG
					if $find(MVALUE(2),";")  set $piece(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1),Y,MFIELD(2)) = $translate(MVALUE(2),Y,"-")  ;DATEN ZUR PRUEFUNG
				}
			}
		}
	
	} else {
		if pstrStored="" set pstrStored = $$GetInternal^WWWTR(YTYP,YINHALT,YDECIMALLEN)
		set $piece(^WWWDATEN(0,dteToday,YUSER,YFORM,YART,1),",",YLFN) = pstrStored  ;DATEN ZUR PRUEFUNG
		set YINHALT = $$GetLiteral^WWWTR(YTYP,pstrStored,YDECIMALLEN)
	}
	quit
	
	
Open(&YINHALT,&pstrStored,pobjForm,pobjClsFld,pobjCustFld)
	;-------------------------------------------------------------------------------
	; Can we open the record - via entering an existing key ?
	;
	; Params:
	;	YINHALT			
	;	pstrStored		value of current key
	;	pobjForm		Form record					WWW120
	;	pobjClsFld		Class Field	record			WWW002		Class Key
	;	pobjCustFld		Customised Field record		WWW002D
	;
	; Returns:	boolean
	;
	; History:
	; 10-May-2007	RPW		SR15516: If this is a forced numerator and it's a
	; 							non-existent value and not +, let the user know with
	; 							the same message as validation
	; 10-Apr-2007	PO		SR15442: Force numerator
	; 28-Mar-2007	JW		SR15384: Encapsulated
	;-------------------------------------------------------------------------------
	new blnOpen
	
	set blnOpen = $$$NO
	
	if $$$WWW120FormType(pobjForm)'=7 {                    ; 7 - Search Engine
		if '$$$NoKey(YINHALT) {
			if $$PRIMCHK(pstrStored,pobjForm) {
				if ($get(^WWWDATEN(0,+$horolog,YUSER,"RECORDEXISTS",YFORM,1)) = 1) {
					set %TXT(1) = $$$Open
				}
			
			} elseif $$$WWW002ForceNumerator(pobjClsFld) || $$$WWW002DForceNumerator(pobjCustFld) {
				$$$Alert($listbuild("WWW00028",YINHALT))        ; "´%1´ is invalid"
				set YINHALT = "+"
				do Store(.YINHALT,.pstrStored)
			}
		}
	}
	quit blnOpen
	
	
Log(YFORM,YART,YLFN1,YSATZ)
	;-------------------------------------------------------------------------------
	; Log aspects of event
	; 
	; SURELY the following should not be done every time through WWWEVENT
	; Page and form should be done on form paint ?
	; Page is incorrect as field could be customised to be on another page.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 29-Mar-2007	JW		SR15384: Encapsualted
	;-------------------------------------------------------------------------------
	new intPage
	
	set $$$WWWUSERLastForm(^WWWUSER(0,YUSER,1)) = YFORM  ;LETZTES FORMULAR ;last form 
	if (YART'="D") || (YLFN1="") {
		set $$$WWWUSERLastFormfield(^WWWUSER(0,YUSER,1)) = ""
	
	} else {
		set $$$WWWUSERLastFormfield(^WWWUSER(0,YUSER,1)) = YLFN1
		set intPage = $$$WWW122DisplayOnPageNumber(YSATZ)
		set:intPage="" intPage = 1
		set $$$WWWUSERLastFormpage(^WWWUSER(0,YUSER,1)) = intPage
	}
	quit]]></Routine>
</Export>