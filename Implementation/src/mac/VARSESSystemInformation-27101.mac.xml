<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESSystemInformation" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESSystemInformation
	// Andre, 13/04/2009
	quit
	
#include COMSYS
#include COMConst
#include COMView
#include VARConst
 
OnAfterDataFields()
 
	write !,"<H2>Is Caché unicode?</H2>"
	write !,"<BR>$SYSTEM.Version.IsUnicode() = ",$SYSTEM.Version.IsUnicode() // Andre, 11/09/2009
	write !,"<P>"
	
	write !,"<H2>COMSchedule:</H2>"
	do ShowCOMScheduleStatus()
	do ShowCOMScheduleError()
	write !,"<P>"
	
	;do ShowSICOPErrors() ;Karine-20/01/2010:Não utilizado no TCI_ME
	
	do ShowLastHistory() // Andre, 07/07/2009
	
	do ShowSystemAdmins() // Andre, 07/09/2009
	do ShowUsersWithMultipleLogin() // Andre, 07/09/2009
	do ShowCSPConfig() // Andre, 24/09/2009
	do ListCgiEnvs() // Andre, 24/09/2009
	
	// Andre, 07/07/2009:
	write !,"<BR>"
	write !,"<H2>","Core System Information:","</H2>"
	do ^WWWSYS
	
	quit
 
 
ShowCOMScheduleStatus()
	write !,"<BR>","COMSchedule status: "
	if $$GetStart^COMSchedule() {
		write "started"
	}
	else {
		write "stopped"
	}
	quit
 
ShowCOMScheduleError()
	write !,"<BR>","COMScheduler errors: "
	if $data( ^COMScheduler("Error") ) {
		write !,"<BR>"
		write !,"<PRE>"
		zw ^COMScheduler("Error")
		write !,"</PRE>"
	}
	else {
		write "no errors found."
	}
	quit
	
ShowSICOPErrors()
 
 	quit
 	/*
	new httpFullResponseData
 
	write !,"<P>"
	write !,"<H2>SICOP response test: </H2>"
	write !,"<blockquote>"
 
	write !,"<BR>","SICOP errors as recorded in ^VARSESAlertaLinhaSICOPError: "
	if $data( ^VARSESAlertaLinhaSICOPError ) {
		write !,"<BR>"
		zw ^VARSESAlertaLinhaSICOPError
	}
	else {
		write "no errors found."
	}
	write !,"<P>"
	
	// Andre, 15/12/2009: now testing SICOP response:
 
	write !,"Result of routine $$getDetentor^VARSESProcesso(""0060"",""013010"",""2009"") = """,$$getDetentor^VARSESProcesso("0060-013010/2009",.httpFullResponseData),"""<P>"
 
	write !,"Full HTTP response from SICOP: <P>"
 
 
	write !,"<blockquote style=""background-color:white;"">"
	write httpFullResponseData
	write !,"</blockquote>"
	
	;write !,"<iframe id=""iFrameReport"" width=""900"" height=""480"" frameborder=1 src=http://www.codeplan.df.gov.br/Sicop/ProcConsultasaudesetor.asp?txtOrgao=0060&txtProcesso=013010&txtano=2009>"
	;write !,"</iframe>"
 
	write !,"</blockquote>"
	quit
     */
ShowLastHistory()
	quit
	/*
	// Andre, 07/07/2009
	write !,"<H2>Custom stock history:</H2>"
	write !,"<BR>","Last day of VAR History: ",$zdate($$GetLastHistoryDateH^VARSESStockHistory(),2)
	write !,"<P>"
	quit
	*/
ShowSystemAdmins()
	// Andre, 07/09/2009
	// Shows system administrators
	new SQL
	
	write !,"<BR>"
	write !,"<H2>System Administrators: </H2>"
	
	set SQL="SELECT UserName, Name FROM SQLUser.WWW013 WHERE UserAccess = 1"
	
	do ^WWWQUERY(,SQL,,1) // Important: ^WWWQUERY converts the SQL concatenation operator "|" into a blank. Use function "STRING" to concatenate.
 
	quit
 
ShowUsersWithMultipleLogin()
	// Andre, 07/09/2009
	// Shows users with multiple login allowed
	new SQL
	
	write !,"<BR>"
	write !,"<H2>Users with multiple login allowed: </H2>"
	
	set SQL="select UserName, Name, UserAccess from www013 where MultipleLoginNotAllowed IS NULL OR TO_NUMBER(MultipleLoginNotAllowed) = 0"
	
	do ^WWWQUERY(,SQL,,1) // Important: ^WWWQUERY converts the SQL concatenation operator "|" into a blank. Use function "STRING" to concatenate.
 
	quit
 
ListCgiEnvs()
	// Andre, 24/09/2009
	// Lists CGI environment values
	new i, listCGIEnvs
	
	write !,"<H2>CGI environment variables:</H2>"
 
	set listCGIEnvs("SERVER_SOFTWARE")=""
	set listCGIEnvs("SERVER_NAME")=""
	set listCGIEnvs("GATEWAY_INTERFACE")=""
	set listCGIEnvs("SERVER_PROTOCOL")=""
	set listCGIEnvs("SERVER_PORT")=""
	set listCGIEnvs("REQUEST_METHOD")=""
	set listCGIEnvs("PATH_INFO")=""
	set listCGIEnvs("PATH_TRANSLATED")=""
	set listCGIEnvs("SCRIPT_NAME")=""
	set listCGIEnvs("QUERY_STRING")=""
	set listCGIEnvs("REMOTE_HOST")=""
	set listCGIEnvs("REMOTE_ADDR")=""
	set listCGIEnvs("AUTH_TYPE")=""
	set listCGIEnvs("REMOTE_USER")=""
	set listCGIEnvs("REMOTE_IDENT")=""
	set listCGIEnvs("CONTENT_TYPE")=""
	set listCGIEnvs("CONTENT_LENGTH")=""
	set listCGIEnvs("HTTP_ACCEPT")=""
	set listCGIEnvs("HTTP_USER_AGENT")=""
	set listCGIEnvs("DOCUMENT_ROOT")=""
	set listCGIEnvs("HTTP_REFERER")=""
	set listCGIEnvs("X-Forwarded-For")=""
	
	write !,"<BR>List of CGI environment values:"
	
	set i = ""
	for {
		set i = $order( listCGIEnvs(i) )
		quit:( i = "" )
		write !,"<BR>"_i_": ", $get( %request.CgiEnvs( i ) )
	}
 
	write !,"<BR>"
	
	quit
 
ShowCSPConfig()
	// Andre, 24/09/2009
	write !,"<H2>CSP configuration:</H2>"
	write !,"<pre style=""{ font-family: Arial; font-size: 10pt }"">"
	do $SYSTEM.CSP.DisplayConfig()
	write !,"</pre>"
	write !,"</P>"
	quit
 
]]></Routine>
</Export>