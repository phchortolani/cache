<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31Copy" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMGridEdit31Copy
#include COMGridEdit31
 
#def1arg WWWDATEN(%args) ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",%args)
#include WWWConst
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGECopy("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)	 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)	 	$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
Duplicate()
	;-------------------------------------------------------------------------------
	; "COPY" Button in Grid
	; 
	; Copy the current row. The new row will have the same key + an increment.
	;
	; To copy line N1
	;	- Set new line number N2 = N1+.01
	;	  (Repeat displacement where there are already N1+.01, N1+.02, etc)
	;	- Get Forward Link Lf from $g(^WWWDATEN(...,N1))  This may be "" if copying the last line.
	;	-     Reverse Link Lb will be N1
	;	- Insert new link in "DISPLAYLIST"
	;	     Set ^WWWDATEN(...,N2) = Lf || N1     (New Forward || Back links)
	;	     Set ^WWWDATEN(...,N1) = N2 || **     (Adjust Forward Link)
	;	     Set ^WWWDATEN(...,Lf) = ** || N2     (Adjust Back Link)           ; Skip if Lf=""
	;	
	;	- Create new REFERENCEROW/REFERENCEKEY somewhere
	; 
	;
	; Returns: Null for YRETVAL in COMGridEdit31R
	;
	; History:
	; 16-Sep-2008	GRF		SR15920: Don't proceed if no lines on grid
	; 22-May-2008	GRF		SR15739: Revision to "DISPLAYORDER" as true doubly-linked
	; 							list in "DISPLAYLIST".
	; 							Taken from Duplicate^COMGridEdit31Add
	;-------------------------------------------------------------------------------
	new idKey,idClass,idHolder,idNumeric,idNewKey,idOldKey,idOrigin,idParent
	new intZeros,objLine,strAlpha,strData

	$$$LogR("Duplicate",YFORM)
	
	quit:+$get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","ROWCOUNT"))=0 ""   ; SR15920
	
	set idClass  = $$$WWW120ClassUsedInForm($get(^WWW120(0,YFORM,1)))
	set idOldKey = $$GetKey^COMGridEdit31G()	   ; Get focused record's key from "REFERENCEKEY"   e.g. as idTfr_","_idTfrLine
	set idOrigin = $$$KEYMAX(idOldKey)
 
	do SplitNumeric^COMUtils(idOrigin,.strAlpha,.idNumeric)
	set intZeros = $length($piece(idNumeric,".")) - $length(idNumeric\1)
	set:intZeros strAlpha  = strAlpha_$translate($justify("",intZeros)," ","0")
	
	set idNumeric = idNumeric\1
	set idParent  = idNumeric
	
	; Copy idOldKey    ABC00123,6,XX003.02
	; idOrigin                XX003.02
	; strAlpha & idNumeric = XX00 & 3.02
	; intLength = 3
	; idParent  = 3
	; idNumeric   =   3      3.01      3.02      ...  3.99			(idDataLine)
	; strData     =   XX003  XX003.01  XX003.02  ...  XX003.99
	; REFERENCEROW     => stage 2 when not found
	; idNumeric       3.01   3.02      3.03      ...  4
	; \1 = Parent     Yes    Yes       Yes            No
	
	; idNewKey         ABC00123,6,XX003.03
	
	; stage 2
	;    No longer subtracting .01 before quit to compensate for adding .01 in stage 2
	
	for {                                ; Search through from Parent to Parent.99 to find first free value
		set strData = strAlpha_idNumeric
		 
		if $get($$$WWWDATEN("REFERENCEROW",strData,1))="" {   ; if there is no grid entry for this value
			set idNewKey            = idOldKey
			set $$$KEYMAX(idNewKey) = strData
			quit:($get($$$DATA(idClass,idNewKey))="")         ; double check there is no record in the class
		}
		
		set idNumeric = idNumeric + $$$CopyIncrement
		quit:(idNumeric\1)'=idParent
	}		
	
	; $$GetYFELDEX : (...,"REFERENCEROW",idOldKey,1) = intLine
	;                                                     v
	; $$GetYFELD   :                    "REFERENCEKEY",intLine,1) = idKey
	;                                                                 v
	;                                                             vvvvvvvvvvv    
	;                                   strGlobal : ^INMOVLine(YM,ABC000123,1) => objLine with current changes
	;                                      or ^WWWDATEN(...,"YFELD",intLine,1) => objLine
	; OnBeforeCopy^INMOVLine(...) [if exists]
	
	$$$LogRx(idOrigin_":"_strData)
	
	if (idNumeric\1)<=idParent {
		;-----------------------------------
		; 1. Get original data
		; 2. Pre-process, if exists
		; 3. Add Line to WWWDATEN (multiple details recorded)
		; 4. Update parent record (container)
		;-----------------------------------
		
		set objLine = $$GetYFELDEX^COMGridEdit31G(,idOldKey)
		do OnBeforeCopy^COMGridEdit31Events(idNewKey,.objLine)	  // can update line before copying
		do AddLine^COMGridEdit31Add(objLine,strData,,$$$YES,"",$$$YES,$$$NO,$$$NO)
		do UpdateContainer^COMGridEdit31G()
	;} else {
	; 	FIXME : <GRF> Should we explain that we aren't copying if already have .01 through .99?
	}
	
	quit ""
	
]]></Routine>
</Export>