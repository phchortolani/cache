<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW001OZ" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW001OZ
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		COMPILE OBJECTSCRIPT AUS ZRL 
	;		AUFRUF:  DO ^WWW001Z
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 22-Jul-2009	GRF		SR16701: naked reference; quits; YCR
	; 30-May-2005	RPW		SR12056: Attempt at Performance Increase
	; 07.09.2002	DT
	;-------------------------------------------------------------------------------
	NEW I,VERZ,LW,VERZ1,%DEV,DELIM,OBJECT,SPRACHE,DESCRI,DESKRI,CAPTION,NOCOMPILE,YDATA
	
	DO ^WWWVAR
	WRITE !,"FTP Verzeichnis: "
	READ VERZ
	IF VERZ="" SET VERZ="C:\inetpub\ftproot\"
	WRITE !,"Start?: "
	READ START
	DO   ;COMPILE ALL
	. NEW VORGX
	. SET VORGX=""
	. FOR  SET VORGX=$ORDER(^ZRL(VORGX)) QUIT:VORGX=""  DO
	. . SET VORG(1)=VORGX
	. . SET VORG(3)=1
	. . DO NEU
	. . DO
	. . . NEW VORGX
	. . . DO START
	
	QUIT
	
START ;
	QUIT:VORG(1)=""
	SET VORGX=VORG(1)
	SET SP="   "
	SET NOCOMPILE=1  ;KEIN KOMPILE ;no 
	KILL ^WWWSOR(YUSER)
	SET LW="MAPS.CDL"
	;SET VERZ=""
	SET VERZ1=""
	SET LW=VERZ_LW
	SET LW=$TRANSLATE(LW,"\Ö/",$CHAR(92)_$CHAR(92)_$CHAR(92))
	SET %DEV=$$^WWWDEV(LW)
	IF %DEV'="" USE %DEV
	
	; GGF HEADER
	
	WRITE "/***********************************************************************\",YCR
	WRITE "|         File: ATNET.cdl                                               |",YCR
	WRITE "|       Author: @net Manager                                            |",YCR
	WRITE "|         Date: "_$$^WWWDATE($horolog)_" "_$$^WWWTIME($HOROLOG)_"                                     |",YCR
	WRITE "|  Description: This File was generated by @net Manager                 |",YCR
	WRITE "\***********************************************************************/",YCR
	
	SET YXCHAR=""
	FOR I=128:1:255 SET YXCHAR=YXCHAR_$CHAR(I)
	DO
	. IF '$DATA(^ZRL(VORGX,0)) QUIT
	. SET YDATA=$GET(^ZRL(VORGX,0))
	. SET NOCOMPILE=0  ;COMPILE OK
	. SET DELIM=59
	. SET OBJECT=0
	. SET SORT=""
	. DO  ;CHECK IF WORDS ARE DUBLE
	. . KILL ^WWWSOR(YUSER)
	. . SET LFN=""
	. . FOR  SET LFN=$ORDER(^ZRL(VORGX,2,LFN)) QUIT:LFN=""  DO
	. . . SET LF=$GET(^ZRL(VORGX,2,LFN))
	. . . QUIT:$PIECE(LF,Y,25)=""  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . . IF $DATA(^WWWSOR(YUSER,$PIECE(LF,Y,25))) SET $PIECE(^WWW003(0,VORGX,LFN,1),Y,25)="" QUIT
	. . . SET ^WWWSOR(YUSER,$PIECE(LF,Y,25))=""
	. ;
	. DO   ;^WWWSORTKEY(VORGX)
	. . QUIT:$GET(VORGX)=""
	. . NEW YLFN
	. . SET YLFN=""
	. . FOR  SET YLFN=$ORDER(^ZRL(VORGX,2,YLFN)) QUIT:$EXTRACT(YLFN,1,2)'="00"  QUIT:YLFN=""  DO
	. . . SET YSKEY=$PIECE($GET(^WWW002(VORGX,2,YLFN)),Y,9)
	. . . FOR YI=1:1 SET YA=$PIECE(YSKEY,",",YI) QUIT:YA=""  DO
	. . . . SET YA(1)=+$PIECE(YA,".",1)
	. . . . SET YA(2)=+$PIECE(YA,".",2)
	. . . . QUIT:+YA(1)=0
	. . . . IF +YA(2)=0 SET YA(2)=1
	. . . . SET $PIECE(YSKEY(YA(1)),",",YA(2))="K"_YLFN
	. . ;
	. . SET YLFN=""
	. . FOR  SET YLFN=$ORDER(^ZRL(VORGX,2,YLFN)) QUIT:YLFN=""  IF $EXTRACT(YLFN,1,2)'="00"  DO
	. . . SET YSKEY=$PIECE($GET(^WWW002(VORGX,2,YLFN)),Y,9)
	. . . FOR YI=1:1 SET YA=$PIECE(YSKEY,",",YI) QUIT:YA=""  DO
	. . . . SET YA(1)=+$PIECE(YA,".",1)
	. . . . SET YA(2)=+$PIECE(YA,".",2)
	. . . . QUIT:+YA(1)=0
	. . . . IF +YA(2)=0 SET YA(2)=1
	. . . . SET $PIECE(YSKEY(YA(1)),",",YA(2))="F"_YLFN
	. ;
	. KILL ^WWWSOR(YUSER)
	. ;
	. ;RESERVIERTE WÖRTER
	. SET ^WWWSOR(YUSER,"Mandant")="" 
	. SET RESN=""
	. FOR  SET RESN=$ORDER(^WWWRES(0,RESN)) QUIT:RESN=""  DO
	. . SET ATTX=$$^WWWUMLAU($GET(^WWWRES(0,RESN,1)),5)
	. . QUIT:ATTX=""
	. . SET ^WWWSOR(YUSER,ATTX)=""
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^ZRL(VORGX,2,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^ZRL(VORGX,2,LFN))
	. . SET ATTX=""
	. . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET $PIECE(LF,Y,2)=$PIECE(LF,Y,25)  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,2),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . IF ATTX'="" SET ATTXX=ATTX FOR ATTNU=1:1 DO  IF '$DATA(^WWWSOR(YUSER,ATTX)) SET ^WWWSOR(YUSER,ATTX)="" SET ^WWWSOR(YUSER,222,LFN)=ATTX QUIT
	. . . IF '$DATA(^WWWSOR(YUSER,ATTX)) QUIT
	. . . SET ATTX=ATTXX_ATTNU
	. ;
	. WRITE YCR,YCR
	. ;WRITE "drop class User.",VORGX,";",YCR
	. WRITE "create class User.",VORGX,YCR
	. WRITE "{",YCR
	. WRITE SP
	. WRITE "description = "_YCR_"          {" DO  WRITE $TRANSLATE(DESCRI,"²³","23"),YCR,"          }"   ;WRITE """"_";"
	. . SET DESCRI="          "
	. . SET DESCRI=DESCRI_$PIECE(YDATA,Y,3)
	. . ;
	. SET RELA=0  ;PERSISTANT y/n
	. ;
	. SET PERSIST="%Library.Persistent, %Library.Populate, %XML.Adaptor"   ;, %XML"
	. IF $FIND($ZVERSION,"4.1")!($FIND($ZVERSION,"4.0"))!($FIND($ZVERSION,"3.2")) SET PERSIST="%Library.Persistent, %Library.Populate"
	. ;IF RELA=0 SET PERSIST="%Library.Persistent, %Library.Populate "  ;, %XML"
	. ;IF $PIECE(YDATA,Y,20)'="" SET PERSIST="%"_$PIECE(YDATA,Y,20)
	. WRITE YCR
	. WRITE SP
	. WRITE "super = "_PERSIST_";"
	. WRITE YCR
	. WRITE SP
	. IF $FIND(PERSIST,"Persistent") DO 
	. . WRITE "persistent"
	. . IF OBJECT'=4 WRITE " = StorageMAPS"
	. . WRITE ";",YCR
	. . WRITE YCR
	. . WRITE SP
	. . ;
	. . IF $DATA(^ZRL(VORGX,2)) WRITE "index PriKeys { attributes = " DO  WRITE "; primarykey = 1; extent = 0; idkey = 1; unique = 0; }"
	. . . SET MAXKEY=+$ORDER(^ZRL(VORGX,2,"0100"),-1)
	. . . IF OBJECT=0 WRITE "Mandant"
	. . . IF OBJECT=0 IF $DATA(^ZRL(VORGX,2,"0001")) WRITE ","
	. . . SET LFN=""
	. . . FOR  SET LFN=$ORDER(^ZRL(VORGX,2,LFN)) QUIT:LFN=""  Q:$E(LFN,1,2)'="00"  DO
	. . . . SET LF=$GET(^ZRL(VORGX,2,LFN))
	. . . . ;
	. . . . IF $DATA(^WWWSOR(YUSER,222,LFN)) SET $PIECE(LF,Y,2)=^WWWSOR(YUSER,222,LFN)   ; Naked Ref SR16701
	. . . . IF LFN>1 WRITE ","
	. . . . DO
	. . . . . WRITE $TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,2),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. ;
	. IF OBJECT=0 DO
	. . WRITE YCR,YCR
	. . WRITE SP
	. . WRITE "attribute Mandant { type = %String(MAXLEN=30"
	. . DO
	. . . IF $FIND($ZVERSION,"4.1")!($FIND($ZVERSION,"4.0"))!($FIND($ZVERSION,"3.2")) QUIT
	. . . WRITE ", XMLPROJECTION="_""""_"attribute"_""""
	. . ;
	. . WRITE "); description = "_""""_"Mandant"_""""_";"
	. . WRITE " calculated = 0; not final; multidimensional = 0; public; required;         sqlcomputecode = { } sqlcomputed = 0; transient = 0; }"
	. . SET ^WWWSOR(YUSER,"Mandant")="" 
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^ZRL(VORGX,2,LFN)) QUIT:LFN=""  Q:$E(LFN,1,2)'="00"  DO
	. . SET LF=$GET(^ZRL(VORGX,2,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . WRITE YCR
	. . WRITE SP
	. . WRITE "attribute " DO
	. . . DO
	. . . . SET CAPTION=$PIECE(LF,Y,2) IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET CAPTION=$PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1)   ; Naked Ref SR16701
	. . . . SET ATTX=""
	. . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25) QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . FOR  QUIT:$EXTRACT(ATTX)'=0&(+$EXTRACT(ATTX)=0)  SET ATTX=$EXTRACT(ATTX,2,99)
	. . . ;
	. . . IF $DATA(^WWWSOR(YUSER,222,LFN)) SET ATTX=^WWWSOR(YUSER,222,LFN)    ; naked ref SR16701
	. . . ; DISABLED BLOCK vvvvvvvvvvvvvvvvv
	. . . ;S ATTXX=ATTX F ATTNU=1:1 D  I '$D(^WWWSOR(YUSER,ATTX)) S ^WWWSOR(YUSER,ATTX)="" S ^WWWSOR(YUSER,222,LFN)=ATTX Q
	. . . . IF '$DATA(^WWWSOR(YUSER,ATTX)) QUIT
	. . . . SET ATTX=ATTXX_ATTNU
	. . . ;
	. . . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . WRITE ATTX
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")="" SET $PIECE(^ZRL(VORGX,2,LFN,1),Y,25)=ATTX
	. . . DO
	. . . . SET DESKRI="         "
	. . . . SET DESKRI=DESKRI_$PIECE(LF,Y,2)
	. . . . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET DESKRI=DESKRI_" / "_$PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1)   ; Naked Ref SR16701
	. . . . SET DESKRI=YCR_"               {"_YCR_"                "_DESKRI_":"
	. . . . IF $GET(^WWW127(0,VORGX,"P",LFN,SPRACHE,1))'="" SET DESKRI=DESKRI_YCR_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"P",LFN,SPRACHE,1)),"|~"_""""," ")
	. . . . IF SPRACHE'="DE" IF $GET(^WWW127(0,VORGX,"P",LFN,"DE",1))'="" SET DESKRI=DESKRI_"  "_YCR_YCR_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"P",LFN,"DE",1)),"|~"_""""," ")
	. . . . SET DESKRI=DESKRI_YCR_"                }"
	. . . ;
	. . . SET TYPE=$PIECE(LF,Y,3)
	. . . SET SIZE=$TRANSLATE($PIECE(LF,Y,4),"-")
	. . . IF $PIECE(LF,Y,26)'="" SET TYPE=$PIECE(LF,Y,26)  ;KLASSE ALS DATATYPE ;groovy when 
	. . . ;IF $PIECE(LF,Y,8)'="" IF $PIECE(LF,Y,9)="" SET TYPE=$PIECE(LF,Y,8)  ;RELATION = TYPE
	. . . DO ATTRIB(1)
	. . ;
	. . WRITE " { type = "_ATTRIB_"; description = "_$TRANSLATE(DESKRI,"""")
	. . WRITE " calculated = 0; not final; multidimensional = 0; public; required;        sqlcomputecode = { } sqlcomputed = 0; transient = 0; }"
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . QUIT:$FIND($PIECE(LF,Y,25),".")  ;DATENFELD ALS KLASSE= NICHT EINTRAGEN ;data item when Not 
	. . WRITE YCR
	. . WRITE SP
	. . ; DISABLED BLOCK vvvvvvvvvvvvvvvvvvv
	. . ;DO
	. . . SET YBBN=$ORDER(^WWW122s(0,4,LFN,VORGX,""))
	. . . IF YBBN'="" IF $PIECE($GET(^WWW122(0,VORGX,YBBN,1)),Y,2)=6 WRITE "array " QUIT
	. . . QUIT:$PIECE(LF,Y,3)=2
	. . . ;I $P(LF,Y,8)="" W "list " Q   ;LISTE??
	. . ;
	. . IF $PIECE(LF,Y,3)=15 WRITE "list "  ;liste
	. . WRITE "attribute " DO
	. . . DO
	. . . . SET CAPTION=$PIECE(LF,Y,2) IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET CAPTION=$PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1)   ; Naked Ref SR16701
	. . . . SET ATTX=""
	. . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25) QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . FOR  QUIT:$EXTRACT(ATTX)'=0&(+$EXTRACT(ATTX)=0)  SET ATTX=$EXTRACT(ATTX,2,99)
	. . . ;
	. . . IF $DATA(^WWWSOR(YUSER,333,LFN)) SET ATTX=^WWWSOR(YUSER,333,LFN)   ; Naked Ref SR16701
	. . . ; DISABLED BLOCK vvvvvvvvvvvvvvvvv
	. . . ;S ATTXX=ATTX F ATTNU=1:1 D  I '$D(^WWWSOR(YUSER,ATTX)) S ^WWWSOR(YUSER,ATTX,LFN)="" S ^WWWSOR(YUSER,333,LFN)=ATTX Q
	. . . . IF '$DATA(^WWWSOR(YUSER,ATTX)) QUIT
	. . . . SET ATTX=ATTXX_ATTNU
	. . . ;
	. . . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . WRITE ATTX
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")="" SET $PIECE(^WWW003(0,VORGX,LFN,1),Y,25)=ATTX
	. . . DO
	. . . . NEW LFN1
	. . . . SET DESKRI=$PIECE(LF,Y,2)
	. . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" SET DESKRI=DESKRI_" / "_$PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1)   ; Naked Ref SR16701
	. . . . SET DESKRI=YCR_"               {"_YCR_"                "_DESKRI_":"
	. . . . SET LFN1=$ORDER(^WWW122s(0,5,VORGX,LFN,VORGX,""))
	. . . . IF LFN1'="" IF $GET(^WWW127(0,VORGX,"D",LFN1,SPRACHE,1))'="" SET DESKRI=DESKRI_YCR_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"D",LFN1,SPRACHE,1)),"|~"_""""," ")
	. . . . IF SPRACHE'="DE" IF LFN1'="" IF $GET(^WWW127(0,VORGX,"D",LFN1,"DE",1))'="" SET DESKRI=DESKRI_YCR_YCR_"                <BR><BR>"_$TRANSLATE($GET(^WWW127(0,VORGX,"D",LFN1,"DE",1)),"|~"_""""," ")    
	. . . . SET DESKRI=DESKRI_YCR_"                }"
	. . . ;
	. . . SET TYPE=$PIECE(LF,Y,3)
	. . . SET SIZE=$TRANSLATE($PIECE(LF,Y,4),"-")
	. . . IF $PIECE(LF,Y,26)'="" SET TYPE=$PIECE(LF,Y,26)  ;KLASSE ALS DATATYPE ;groovy when 
	. . . ;IF $PIECE(LF,Y,8)'="" IF $PIECE(LF,Y,9)="" SET TYPE=$PIECE(LF,Y,8)  ;RELATION = TYPE
	. . . DO ATTRIB(2)
	. . ;
	. . WRITE " { type = "_ATTRIB_"; description = "_$TRANSLATE(DESKRI,"²³"_"""","23")
	. . IF $PIECE(LF,Y,18)=1 DO
	. . . WRITE " required;"  ;PFLICHTFELD
	. . ;
	. . IF $PIECE(LF,Y,18)'=1 DO
	. . . SET YBBN=$ORDER(^WWW122s(0,4,LFN,VORGX,""))
	. . . IF YBBN'="" WRITE:$PIECE($GET(^WWW122(0,VORGX,YBBN,1)),Y,13)=1 " required;"  ;PFLICHTFELD
	. . ;
	. . WRITE " calculated = 0; not final; multidimensional = 0; public;  sqlcomputecode = { } sqlcomputed = 0; transient = 0; }"
	. ;
	. WRITE YCR,YCR
	. ;
	. IF '$FIND(PERSIST,"Persistent") do  QUIT  ;keine speicherung  ;None 
	. .;WRITE SP,"}",YCR                 
	. . WRITE "}",YCR
	. ;
	. NEW YFILE,YFILES
	. ;
	. SET YFILE=VORGX
	. IF $PIECE(YDATA,Y,22)'="" SET YFILE=$PIECE(YDATA,Y,22)
	. SET YFILES=VORGX_"s"
	. IF $PIECE(YDATA,Y,23)'="" SET YFILES=$PIECE(YDATA,Y,23)
	. ;
	. IF OBJECT=4 DO
	. . WRITE SP,"storage Default",YCR
	. . WRITE SP,"{",YCR
	. . WRITE SP,SP,"type = %CacheStorage;",YCR
	. . WRITE SP,SP,"datalocation = ^"_YFILE_";",YCR
	. . WRITE SP,SP,"indexlocation = ^"_YFILES_";",YCR
	. . WRITE SP,SP,"idlocation = ^"_YFILE_";",YCR
	. . WRITE SP,SP,"defaultdata = "_YFILE_"DefaultData;",YCR
	. . WRITE SP,SP,"data "_YFILE_"DefaultData",YCR
	. . WRITE SP,SP,"{",YCR
	. . WRITE SP,SP,SP,"structure = listnode;",YCR
	. . SET LFN=""
	. . FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . . QUIT:$FIND($PIECE(LF,Y,25),".")  ;NICHT WENN EMBEDDED ;Not when 
	. . . SET ATTX=""
	. . . DO
	. . . . IF $DATA(^WWWSOR(YUSER,333,LFN))       SET ATTX=^WWWSOR(YUSER,333,LFN) QUIT   ; Naked Ref SR16701
	. . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'="" SET ATTX=$PIECE(LF,Y,25)        QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . ;
	. . . WRITE SP,SP,SP,"value ("_LFN_")  = "_ATTX_";",YCR
	. . ;
	. . WRITE SP,SP,"}",YCR
	. . WRITE SP,"}",YCR
	. . WRITE "}",YCR
	. ;
	. ;Sortierschlüssel ;Index Key  ;Index Key Index Key 
	. QUIT:OBJECT=4
	. ;
	. DO 
	. . WRITE SP,"storage StorageMAPS",YCR
	. . WRITE SP,"{",YCR
	. . WRITE SP,SP, "type = %CacheSQLStorage;",YCR
	. . WRITE SP,SP,"sql",YCR
	. . WRITE SP,SP,"{",YCR
	. 
	. DO  ;IF SORT=1 DO   ;SORT VORHANDEN ;on hand 
	. . SET SORT=""
	. . FOR  SET SORT=$ORDER(YSKEY(SORT)) QUIT:SORT=""  DO
	. . . WRITE SP,SP,SP,"map SortIndex"_SORT,YCR
	. . . WRITE SP,SP,SP,"{",YCR
	. . . WRITE SP,SP,SP,SP,"global = ^"_YFILES_";",YCR
	. . . WRITE SP,SP,SP,SP,"structure = list;",YCR
	. . . WRITE SP,SP,SP,SP,"type = index;",YCR
	. . . SET ONUM=0
	. . . IF OBJECT=0 SET ONUM=1
	. . . IF OBJECT=0 WRITE SP,SP,SP,SP,"subscript "_ONUM_" { expression = {Mandant}; }",YCR
	. . . SET ONUM=ONUM+1
	. . . WRITE SP,SP,SP,SP,"subscript "_ONUM_" { expression = "_SORT_"; }",YCR
	. . . SET USORT=YSKEY(SORT)
	. . . FOR USORT1=1:1 QUIT:$PIECE(USORT,",",USORT1)=""  DO
	. . . . SET LFN=$PIECE(USORT,",",USORT1)
	. . . . SET LF=""
	. . . . SET FUNK=$EXTRACT(LFN),LFN=$EXTRACT(LFN,2,9)
	. . . . IF FUNK="F" SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . . . IF FUNK="K" SET LF=$GET(^ZRL(VORGX,2,LFN,1))
	. . . . SET TYPE=$PIECE(LF,Y,3)
	. . . . WRITE SP,SP,SP,SP,"subscript "_(ONUM+USORT1)_" { expression = "
	. . . . SET ATTX=""
	. . . . IF FUNK="F" DO
	. . . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""       SET ATTX=$PIECE(LF,Y,25)        QUIT  ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . . IF $DATA(^WWWSOR(YUSER,333,LFN))             SET ATTX=^WWWSOR(YUSER,333,LFN) QUIT   ; Naked Ref SR16701
	. . . . . IF $GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . ;
	. . . . IF FUNK="K" DO
	. . . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""       SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . . IF $DATA(^WWWSOR(YUSER,222,LFN))             SET ATTX=^WWWSOR(YUSER,222,LFN) QUIT   ; Naked Ref SR16701
	. . . . . IF $GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . ;
	. . . . SET TYPE=$PIECE(LF,Y,3)
	. . . . IF $FIND(",3,5,6,10,",","_TYPE_",") WRITE "$$UPPER("
	. . . . WRITE "{"
	. . . . WRITE ATTX
	. . . . WRITE "}"
	. . . . IF $FIND(",3,5,6,10,",","_TYPE_",") WRITE ")"
	. . . . WRITE "; }",YCR
	. . . ;
	. . . SET LFN=""
	. . . FOR  SET LFN=$ORDER(^ZRL(VORGX,2,LFN)) QUIT:LFN=""  DO
	. . . . SET LF=$GET(^ZRL(VORGX,2,LFN,1))
	. . . . WRITE SP,SP,SP,SP,"subscript "_(ONUM-1+USORT1+LFN)_" { expression = "
	. . . . SET ATTX=""
	. . . . DO
	. . . . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""                       SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . . . IF $TRANSLATE($GET(^WWWSOR(YUSER,222,LFN))," ")'=""          SET ATTX=^WWWSOR(YUSER,222,LFN) QUIT   ; Naked Ref SR16701
	. . . . . IF $TRANSLATE($GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))," ")'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . . . ;
	. . . . WRITE "{"
	. . . . WRITE ATTX
	. . . . WRITE "}"
	. . . . WRITE "; }",YCR
	. . . ;   
	. . . WRITE SP,SP,SP,"}",YCR
	. ;
	. ;save methode
	. WRITE SP,SP,SP,"map map1",YCR
	. WRITE SP,SP,SP,"{",YCR
	. WRITE SP,SP,SP,SP,"global = ^"_YFILE_";",YCR
	. IF OBJECT'=4 WRITE SP,SP,SP,SP,"structure = delimited;",YCR
	. IF OBJECT=4  WRITE SP,SP,SP,SP,"structure = list;",YCR
	. WRITE SP,SP,SP,SP,"type = data;",YCR
	. SET ONUM=0
	. IF OBJECT=0 SET ONUM=1
	. ;
	. IF OBJECT=0 WRITE SP,SP,SP,SP,"subscript "_ONUM_" { expression = {Mandant}; }",YCR
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^ZRL(VORGX,2,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^ZRL(VORGX,2,LFN,1))
	. . WRITE SP,SP,SP,SP,"subscript "_(ONUM+LFN)_" { expression = "
	. . SET ATTX=""
	. . DO
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""                       SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . IF $TRANSLATE($GET(^WWWSOR(YUSER,222,LFN))," ")'=""          SET ATTX=^WWWSOR(YUSER,222,LFN) QUIT   ; Naked Ref SR16701
	. . . IF $TRANSLATE($GET(^WWW0021(0,VORGX,LFN,SPRACHE,1))," ")'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0021(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . ;
	. . WRITE "{"
	. . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . WRITE ATTX
	. . WRITE "}"
	. . WRITE "; }",YCR
	. ;
	. SET YMAXKEY=$ORDER(^ZRL(VORGX,2,""),-1)
	. IF OBJECT=0!(OBJECT=3) WRITE SP,SP,SP,SP,"subscript "_(YMAXKEY+2)_" { expression = 1; }",YCR  ;NODE1
	. ;
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^WWW003(0,VORGX,LFN)) QUIT:LFN=""  DO
	. . SET LF=$GET(^WWW003(0,VORGX,LFN,1))
	. . WRITE SP,SP,SP,SP,"data "
	. . SET ATTX=""
	. . DO
	. . . IF $TRANSLATE($PIECE(LF,Y,25)," ")'=""                       SET ATTX=$PIECE(LF,Y,25)        QUIT   ;SCHON EINMAL ÜBERTRAGEN ;yet sometimes transport 
	. . . IF $TRANSLATE($GET(^WWWSOR(YUSER,333,LFN))," ")'=""          SET ATTX=^WWWSOR(YUSER,333,LFN) QUIT   ; Naked Ref SR16701
	. . . IF $TRANSLATE($GET(^WWW0031(0,VORGX,LFN,SPRACHE,1))," ")'="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(^WWW0031(0,VORGX,LFN,SPRACHE,1),Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR) QUIT   ; Naked Ref SR16701
	. . . SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . ;
	. . IF ATTX="" SET ATTX=$TRANSLATE($EXTRACT($$^WWWUMLAU($PIECE(LF,Y,1),5),1,25)," .-,'`´/+*%&();:!_"_YXCHAR)
	. . WRITE ATTX,YCR  
	. . WRITE SP,SP,SP,SP,"{",YCR 
	. . IF OBJECT'=4 WRITE SP,SP,SP,SP,SP,"delimiter = "_""""_$CHAR(DELIM)_""""_";",YCR
	. . ;IF OBJECT'=4 WRITE SP,SP,SP,SP,SP,"node = 1;",YCR
	. . WRITE SP,SP,SP,SP,SP,"piece = "_LFN_";",YCR 
	. . WRITE SP,SP,SP,SP,"}",YCR
	. ;
	. WRITE SP,SP,SP,"}",YCR           
	. IF OBJECT'=4 WRITE SP,SP,"}",YCR   ;sql  
	. WRITE SP,"}",YCR                 
	. WRITE "}",YCR
	
	IF %DEV'="" CLOSE %DEV DO OPEN^WWWSTART
	
	QUIT:+$GET(VORG(3))=0  ;KEIN COMPILE ;no 
	
	
	WRITE "<BR>"
	WRITE YCR,"<TABLE BORDER=0><TR><TD WIDTH=250>"
	WRITE "<FONT SIZE=2>"
	IF NOCOMPILE'=1 IF '$FIND($ZVERSION,"4.0") DO
	. WRITE "<TEXTAREA"
	. ;IF YHID=2 WRITE " readonly"
	. WRITE YCR," NAME="_""""_"CACHEARCITECT"_""""_" ROWS="_""""_20_""""_" COLS="_""""_70_""""_" WRAP="_""""_"physical"_""""
	. WRITE ">"
	. DO LoadFile^%apiOBJ(LW,"c")  ;laden  ;charge 
	. WRITE "</TEXTAREA>"
	
	;GENERIEREN XML DTD FILE
	IF $PIECE($GET(^WWW012(0,YM,1)),Y,98)'="" DO                ; $$$WWW012PhysicalDTDTable()
	. DO ^WWWXML(VORGX,"",$zconvert(VORGX_".DTD","L"),1)
	. DO OPEN^WWWSTART
	
	;GENERIEREN XML SCHEMA FILE ;XML scheme 
	IF $PIECE($GET(^WWW012(0,YM,1)),Y,98)'="" DO                ; $$$WWW012PhysicalDTDTable()
	. DO ^WWWXML(VORGX,"XMLSCHEMA",$zconvert(VORGX_".XML","L"),1)
	. DO OPEN^WWWSTART
	
	WRITE "</FONT>"
	WRITE "</TD></TR></TABLE>"
	QUIT
	
ATTRIB(PROJ) ;Attribute 
	DO ATTR1(PROJ)
	DO ATTR2
	IF +TYPE=0 IF $LENGTH(TYPE)>2 SET ATTRIB=TYPE ;ANDERE KLASSE 
	QUIT
	
ATTR2 ;RELATION
	QUIT
	
	; DISABLED BLOCK vvvvvvvvvvvvvvvvvvvvvvv
	QUIT:TYPE=2
	IF $PIECE(LF,Y,9)'="" IF $PIECE(LF,Y,9)'="SPRACHE" IF ($PIECE(LF,Y,8)="WWW100") || ($PIECE(LF,Y,8)="WWW101") || ($PIECE(LF,Y,8)="VBPARA") DO  QUIT
	. SET ATTRIB=$PIECE($PIECE(LF,Y,9),",",1)
	. SET ATTRIB=$TRANSLATE($$^WWWUMLAU(ATTRIB,4),""""_"/ *+#&!$?_:;")
	
	IF $PIECE(LF,Y,8)'="" DO
	. SET ATTRIB=$PIECE(LF,Y,8)
	. SET ATTRIB=$TRANSLATE($$^WWWUMLAU(ATTRIB,4),""""_"/ *+#&!$?_:;")
	
	QUIT
	
ATTR1(PROJ) ;FELDART
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs: PROJ - enumProjectionType
	;
	; Returns: ATTRIB, SIZE  (implicit by ref)
	;
	; History:
	; 17-Jul-2009	shobby	SR16701: Changed Memo fields to %String from %Stream
	;-------------------------------------------------------------------------------
	NEW OPEN
	
	SET ATTRIB="%String"
	IF TYPE=1  SET ATTRIB = "%Date"
	IF TYPE=2  SET ATTRIB = "%Boolean"
	;I TYPE=3  SET ATTRIB = "%LongString"
	IF TYPE=3  SET ATTRIB = "%String" SET SIZE=30000
	;IF TYPE=3 SET ATTRIB = "%Stream"	;SR16701
	;IF TYPE=3 SET ATTRIB = "%String"	;SR16701
	IF TYPE=4  SET ATTRIB = "%Numeric"
	IF TYPE=5  SET ATTRIB = "%String"
	IF TYPE=6  SET ATTRIB = "%String"
	IF TYPE=7  SET ATTRIB = "%Time"      QUIT
	IF TYPE=8  SET ATTRIB = "%Currency"
	IF TYPE=9  SET ATTRIB = "%Numeric"
	IF TYPE=10 SET ATTRIB = "%String"
	IF TYPE=11 SET ATTRIB = "%String"
	IF TYPE=12 SET ATTRIB = "%Float"
	IF TYPE=13 SET ATTRIB = "%String"
	IF TYPE=14 SET ATTRIB = "%Date"  ;SET ATTRIB="%TimeStamp"
	IF TYPE=15 SET ATTRIB = "%List"
	
	;IF ATTRIB="%String" IF $FIND($$^WWWUPER(DESKRI),"NAME") SET ATTRIB="%Name"
	IF ATTRIB="%String" IF $FIND($zconvert(DESKRI,"U"),"NAME") SET ATTRIB="%Name"
	
	SET OPEN=""
	IF +SIZE=0 SET SIZE=1
	IF $FIND(",5,6,10,",","_TYPE_",") SET OPEN="MAXLEN="_SIZE
	IF $FIND(",8,4,",","_TYPE_",")    SET OPEN="MAXVAL="_$EXTRACT(999999999,1,SIZE)
	
	; DISABLED BLOCK vvvvvvvvvvvvvvvvvvvvvvv
	IF $PIECE(LF,Y,6)'="" IF $FIND(",3,5,6,10,",","_TYPE_",") DO
	. ;IF OPEN'="" SET OPEN=OPEN_","
	. ;IF OBJECT=4 SET OPEN=OPEN_"COLLATION="_""""_"UPPER"_""""
	. ;IF OBJECT'=4 SET OPEN=OPEN_"COLLATION="_""""_"EXACT"_""""
	; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	
	IF $GET(CAPTION)'="" DO
	. IF OPEN'="" SET OPEN=OPEN_","
	. SET OPEN=OPEN_"CAPTION = "_""""_$TRANSLATE(CAPTION,"()"_"""")_""""
	
	IF $GET(PROJ)=1 DO
	. IF $FIND($ZVERSION,"4.1")!($FIND($ZVERSION,"4.0"))!($FIND($ZVERSION,"3.2")) QUIT
	. IF OPEN'="" SET OPEN=OPEN_","
	. SET OPEN=OPEN_"XMLPROJECTION="_""""_"attribute"_""""
	
	IF OPEN'="" SET ATTRIB=ATTRIB_"("_OPEN_")" 
	QUIT
	
	
NEU ;ALLES NEU ;whatsoever recent 
	QUIT
	
	; DISABLED BLOCK vvvvvvvvvvvvvvvvvvvvvvv
	DO
	. SET LFN=""
	. FOR  SET LFN=$ORDER(^ZRL(VORGX,2,LFN)) QUIT:LFN=""  DO
	. . SET $PIECE(^ZRL(VORGX,2,LFN),Y,25)=""
	
	QUIT
	
]]></Routine>
</Export>