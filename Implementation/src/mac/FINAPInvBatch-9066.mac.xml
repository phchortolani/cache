<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvBatch" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvBatch
#include COMSYS
#include FINConst
#include WWWConst
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^FINAPInvBatch("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
OnBeforeButtonLine(pidBatch,pobjForm="")
	;-------------------------------------------------------------------------------
	; Called from header to set form as readonly.
	;
	; Params:	pidBatch - batch num
	; 			pobjForm - byRef: form def (YVOR)
	;
	; Returns:	nil
	;
	; History:
	; 10-Aug-2005	JW		SR12410: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	quit:$$$NoKey(pidBatch)
	
	set strStatus = $$Editable^FINSYSReview("FINAPInvBatch",$$$FINAPInvBatchStatus($get(^FINAPInvBatch(YM,pidBatch,1))))
	
	if $$$ISERR(strStatus) {
    	set $$$WWW120AuthorizationToModifyData(pobjForm) = $$$EnumReadOnly
	}
	quit
 
	
OnAfterDataFields(pidBatch) 
	;-------------------------------------------------------------------------------
	; Display table of invoices
	;
	; Params: pidBatch - batch num
	;
	; Returns: nil
	;
	; History:
	; 09-Aug-2005	JW		SR12410: Created
	;-------------------------------------------------------------------------------
	quit:$$$NoKey(pidBatch)
	new lstHeader,idInv,objInv,idForm,type,idSupplier,postStatus,strOk,duplicateStatus
	
	set pidBatch = $$$Index(pidBatch)
	
 	// Voucher load message
 	if $get(YPARA)'="" {
 		do DisplayText^COMUtilForm(YPARA,,"left",,$$$YES)
 		kill YPARA
 	}
 	
	set lstHeader = $listbuild($$$Text("Fin00858"),         	; "Entry"
							$$$StrFINAPInvInvoiceSupplier,
							$$$StrFINAPInvoiceInvoiceNumber,
							$$$StrFINAPInvActualTotal,
							$$$StrFINAPInvInvoiceDate,
							$$$StrFINAPInvGLEffectiveDate,
							$$$Text("Fin00231"),            	; "Type"
							$$$StrFINAPInvStatus)
	do Start^COMTable(lstHeader)
 	
 	set type($$$NO)  = $$$Text("Fin00860")  ; "Invoice Match"
 	set type($$$YES) = $$$Text("Fin00859")  ; "Voucher"
 	
 	set strOk = "Fin00755"              	; "OK"
 	
	set idInv=""
	for {
		set idInv=$order(^FINAPInvs(YM,5,pidBatch,idInv))
		quit:idInv=""
		
		set objInv = $get(^FINAPInv(YM,idInv,1))
		set type   = type(+$$$FINAPInvIsVoucher(objInv))
		set idForm = $case(+$$$FINAPInvIsVoucher(objInv),$$$YES:"FINAPVoucher",:"FINAPInv")
		
		set idSupplier = $$$FINAPInvInvoiceSupplier(objInv)
		
		set postStatus = $$Postable^FINAPInvPost(idInv,,,,,$$$YES)
		if $$$ISOK(postStatus) {
			set postStatus = $$$Text(strOk)		// Duplicate is warning only
			
			set duplicateStatus = $$CheckDuplicate^FINAPInv2(idSupplier,$$$FINAPInvSuppliersInvoiceNumber(objInv),idInv,$$$NO)
			if $$$ISERR(duplicateStatus) {
				set postStatus = postStatus_" - "_$$$Text(duplicateStatus)
			}
		} else {
			set postStatus = $$$Text(postStatus)
		}
		
		// Row in table
		do NewLine^COMTable()
		do InsertCell^COMTable(idInv,idForm,idInv)
		do InsertCell^COMTable(idSupplier,"FINAPSupplier",idSupplier)
		do InsertCell^COMTable($$$FINAPInvSuppliersInvoiceNumber(objInv),idForm,idInv)
		do InsertCurrencyCell^COMTable($$$FINAPInvActualTotal(objInv))
		do InsertCellDate^COMTable($$$FINAPInvInvoiceDate(objInv))
		do InsertCellDate^COMTable($$$FINAPInvGLEffectiveDate(objInv))
		do InsertCell^COMTable(type,idForm,idInv)
		do InsertCell^COMTable(postStatus,idForm,idInv)
		do EndLine^COMTable()
	}
 	do Stop^COMTable()	
 	
	quit
	
 
HeaderSum(pidBatch,field=7)
	;-------------------------------------------------------------------------------
	; Sum invoice values.
	;
	; Params: 	pidBatch 	- current key
	; 			field		- field for input
	;
	; Returns: sum
	;
	; History:
	; 09-Aug-2005	JW		SR12410: Created
	;-------------------------------------------------------------------------------
	quit:$$$NoKey(pidBatch) 0
	
	new sum,idInv
	set pidBatch = $$$Index(pidBatch)
	set sum = 0
	
	set idInv=""
	for {
		set idInv=$order(^FINAPInvs(YM,5,pidBatch,idInv))
		quit:idInv=""
		
		set sum = sum + $case(field,
								6 : 1,	// count
								7 : $$$FINAPInvActualTotal($get(^FINAPInv(YM,idInv,1))))	// total
	}
	quit sum
	
	
OnAfterDelete(pidBatch)
	;-------------------------------------------------------------------------------
	; Kill associated invoice records
	;
	; Params: pidBatch - batch number
	;
	; Returns: nil
	;
	; History:
	; 12-Nov-2010	GRF		-: Replace order macro
	; 19-Oct-2006	JW		SR15134: Look at kill status
	; 09-Aug-2005	JW		SR12410: Created
	;-------------------------------------------------------------------------------
	new idInv,idxBatch,strStatus
	quit:$$$NoKey(pidBatch)
	
	set strStatus = $$$OK
	set idxBatch  = $$$Index(pidBatch)
	
	set idInv = ""
	for {
		set idInv = $order(^FINAPInvs(YM,5,idxBatch,idInv))
		quit:idInv=""
		
		set strStatus = $$$Kill("FINAPInv",idInv)
		quit:$$$ISERR(strStatus)
	}
	
	if $$$ISERR(strStatus) {
		set Q = $$$QDontDelete
	}
	quit
	
	
Postable(pidBatch,pblnPost,pintStatus,pblnCheckInvoices=$$$YES) 
	;-------------------------------------------------------------------------------
	; Check whether postable
	;
	; Params:	pidBatch 			- Batch Num
	; 			pblnPost 			- byRef: user able to post
	; 			pintStatus 			- byRef: suggested new status
	; 			pblnCheckInvoices 	- Whether to test invoices as well
	;
	; Returns:	status
	;
	; History:
	; 09-Aug-2005	JW		SR12410: Created
	;-------------------------------------------------------------------------------
	new strStatus,idxBatch,objBatch,curActual,curSum,idInv
	
	$$$LogR("Postable",pidBatch)
	
	if $$$NoKey(pidBatch) {
		set strStatus = "Fin00089" 	; "No Record Selected."
	} else {
		set idxBatch = $$$Index(pidBatch)
		
		if '$data(^FINAPInvs(YM,5,idxBatch)) {
			set strStatus = "Fin00547" ; "Must have invoice lines before posting"
			
		} else {
			set objBatch  = $get(^FINAPInvBatch(YM,pidBatch,1))
			set strStatus = $$Editable^FINSYSReview("FINAPInvBatch",$$$FINAPInvBatchStatus(objBatch),.pblnPost,.pintStatus)
			
			if $$$ISOK(strStatus) {
				set curActual = +$$$FINAPInvBatchBatchTotal(objBatch)
				set curSum    = +$$HeaderSum(pidBatch)
				
				if curActual'=curSum {  ; "Actual Total (%1) must match Calculated Total (%2) before posting."
					set strStatus = $listbuild("Fin00636",curActual,curSum)
					
				} elseif pblnCheckInvoices {
					set idInv = ""
					for {
						set idInv = $order(^FINAPInvs(YM,5,idxBatch,idInv))
						quit:idInv=""
						
						set strStatus = $$Postable^FINAPInvPost(idInv,,,,,$$$YES)
						if $$$ISERR(strStatus) {
							set strStatus = $listbuild("Fin00871",idInv,$$$Text(strStatus))
							quit
						}	; "Invoice %1 is not postable: %2"
					}
				}
			}
		}
	}
	
	if $$$ISOK(strStatus) {
		set YQ = $$$QSave
	} else {
		set YQ = $$$QDontSave_" "_$$$Text(strStatus)
	}
	quit strStatus
	
	
Post(pidBatch="") 
	;-------------------------------------------------------------------------------
	; Post
	;
	; Called By :	Form FINAPInvBatch : Button 3 "Post"
	;
	; Params:	pidBatch	- Batch Num
	;
	; Returns:
	;
	; History:
	; 03-Nov-2005	JW		Merge array as children may be made during process
	; 09-Aug-2005	JW		SR12410: Created
	;-------------------------------------------------------------------------------
	new blnPost,intStatus,strStatus,objBatch,arrInvs,idInv
	
	;***************************************
	tstart
	;***************************************
	
	set blnPost   = $$$YES
	set intStatus = ""
	set strStatus = $$Postable(pidBatch,.blnPost,.intStatus,$$$NO)	// Don't test invoices as this is done
																	// in call to Post^FINAPInvPost
	if $$$ISOK(strStatus) {
		set objBatch = $get(^FINAPInvBatch(YM,pidBatch,1))
		
		// Post Lines
		merge arrInvs = ^FINAPInvs(YM,5,$$$Index(pidBatch))		// As children may be made
		
		set idInv=""
		for {
			set idInv=$order(arrInvs(idInv))
			quit:idInv=""
			
			set strStatus = $$Post^FINAPInvPost(idInv,,$$$YES)
			if $$$ISERR(strStatus) {
				set strStatus = $listbuild("Fin00879",idInv,$$$Text(strStatus))	; "Invoice %1: %2"
			}
			quit:$$$ISERR(strStatus)
		}
		
		if blnPost {	
			// Edit posted fields of batch if posted
			if $$$ISOK(strStatus) {
				set $$$FINAPInvBatchPostedDate(objBatch) = +$horolog
				set $$$FINAPInvBatchPostedBy(objBatch)   = YBED
			}
		}
		
		// Edit status of batch
		if $$$ISOK(strStatus) {
			set $$$FINAPInvBatchStatus(objBatch)=intStatus
			set strStatus = $$$Save("FINAPInvBatch",pidBatch,objBatch,$$$YES)
		}
	}
	
	;***************************************
	if $$$ISOK(strStatus) {
		if $tlevel>0 tcommit
		do ReloadForm^COMUtilForm()
		
	} else {
		trollback
		do ReturnError^COMUtilError(strStatus)
	}
	;***************************************
	quit strStatus
	
]]></Routine>
</Export>