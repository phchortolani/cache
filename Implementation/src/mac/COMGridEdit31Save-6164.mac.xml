<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31Save" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMGridEdit31Save
	
#include COMSYS
#include WWWConst
#include COMGridEdit31
	
#define LogR(%1,%2)		;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^COMGridEdit31Save("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
SAVE(pYKEY,pYFORM="",pblnForceValidate=$$$NO) ;SR17910
	;-------------------------------------------------------------------------------
	; Save the lines of the grid, needs to report a status if the saves fail.
	; 
	; Call as : $$$GRIDSave(%args)
	;
	; Returns:
	;
	; History:
	; 29-Feb-2012	GRF		SR17910.1: get today once; use loop
	; 15-Nov-2011	shobby	SR17910: pblnForceValidate causes record to be validated
	;							during save even if unchanged.
	; 01-Dec-2009	GRF		SR17007: separate tags for multi-lock operations
	; 11-Mar-2009	HQN		AdHoc: Validate against specified grid not active grid
	; 15-Oct-2008	GRF		SR15810: Purge older change comments from code
	; 06-Mar-2007	PO		SR15466: Support case where header does not relate to lines
	; 03-Jan-2007	RPW		SR15340: Do not pass functions into macros, this one bad.
	; 19-Oct-2006	JW		SR15134: Look at kill status
	; 26-Jun-2006	JW		SR12775: Pass YFELD into Validate
	; 15-May-2006	JW		SR14433: Make sure same key! (Bank Rec stuffed it)
	; 08-May-2006	Steve S	SR14508: Check multi-locking
	; 31-Oct-2005	JW		SR13207: Changed save check
	; 19-Oct-2005	JW		SR13581: Save all grids
	; 30-Sep-2005	JW		SR11573: Just pass in line, not field.
	; 26-Jul-2005	shobby	SR13054: Treats a line with only default values as if it
	;							was blank and removes when saving.
	; 04-Jul-2005	RobertW	SR12527: Fixed Status usage for ReturnError
	; 24-Jun-2005	JW		SR12409: But only if key is a counter.
	; 21-Jun-2005	shobby	Ignore any blank lines. SR12409.
	; 31-Mar-2005	shobby	Proper use of YFORM and YDATEI
	; 28-Feb-2005	JW		Added . to YFELD in OnBeforeSave call. Check objDisc for
	;							undefined.
	; 01-Feb-2005	JW		Delete "KILLEDRECORD's now
	; 02-Dec-2004	PO		SR11074 Enable save for composite key
	; 02-Dec-2004	PO		SR11067 Enable save for more than just parent/child
	;							forms ie. grandparent...
	; 30-Nov-2004	shobby	Moved OnBeforeSave before Validate.
	; 22-Nov-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new dteToday,idCell,idColumn,idContainer,idForm,idKey,idLine,loop,lstLinks
	new origYFELD,strKey,strLockStatus,strStatus,Q,YDATEI,YFELD,YFORM,YKEY,YVOR
 
	$$$LogR("SAVE",pYKEY_","_pYFORM)

	quit:pYKEY'=$$$GRIDYKEYContainer $$$OK		; Make sure same key
	
	set dteToday    = +$horolog   ; SR17910.1
	set Q           = 0
	set strStatus   = $$$OK
	set idContainer = $$$GRIDContainer
 
	if pYFORM="" {
		if idContainer'="" {
			set idForm = ""
			for {
				set idForm = $order(^WWWDATEN(0,dteToday,YUSER,idContainer,"Grid",idForm))
				quit:idForm=""
				
				set strStatus = $$SAVE(pYKEY,idForm,pblnForceValidate) ;SR17910
				quit:$$$ISERR(strStatus)
			}		
		}
	
	} else {
		set YFORM = pYFORM
			
	;+++++++++++++++++++++++++++++++++++++++	
		tstart
	;+++++++++++++++++++++++++++++++++++++++	
		
		set YDATEI = $$$GRIDClass(YFORM)
		if YDATEI'="" {
			set idKey = ""
			for {
				set idKey = $order(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","REFERENCEKEY",idKey))
				quit:(idKey="")||$$$ISERR(strStatus)
				
				set strKey = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","REFERENCEKEY",idKey,1))
				set idLine = $piece(strKey,",",$length(pYKEY,",")+1,$length(strKey,","))
				if idLine = "" {
					set idLine = $piece(strKey,",",$length(strKey,","))
					set YKEY   = idLine
				
				} else {
					set YKEY   = pYKEY_","_idLine
				}
				
				; Skip this line if we don't "own" it
				if pYKEY = "" {
					set strKey = $$Key(idContainer)
					if strKey = "" {
						ztrap "EGER"  ; Header class is not a structure that is supported.
	; TODO : Document where error trapping is redirected.
					} else {
						set strLockStatus = $$GetLock^WWWMultiLock(idContainer,YFORM,strKey_","_YKEY)
					}
					
				} else {
					set strLockStatus = $$GetLock^WWWMultiLock(idContainer,YFORM,YKEY)
				}
				continue:$$$ISERR(strLockStatus)
				
				set YFELD = $$GetYFELD^COMGridEdit31G(YFORM,idKey,$$$YES,.origYFELD)
	
	$$$LogRx("SAVE:1:"_$get(origYFELD)_"<"_idKey)
	$$$LogRx("SAVE:2:"_YFELD)
				
				if '$$$KilledRecord(idKey,YFORM) {
					if pblnForceValidate || '$data(origYFELD) || (YFELD'=origYFELD) { ;SR17910
						set YVOR = $$$GRIDYVOR(YFORM)
	$$$LogRx("SAVE:3:"_YVOR)
						set strStatus = $$OnBeforeSave^COMGridEdit31Events(YKEY,.YFELD,YVOR)                        ; *** EXECUTE *** (from Form)
	$$$LogRx("SAVE:4:"_YFELD)
						
						if $$$ISOK(strStatus) {
		; if pYFORM specified different from active grid, Validate assumes trigger is on first grid,
		; will fail SPEI check since it really already has been saved
							set strStatus = $$Validate("Y"_idKey,.YFELD,$$$NO,YFORM)
	$$$LogRx("SAVE:5:"_YFELD)
							if $$$ISOK(strStatus) {
								if Q=$$$QSave {
									set strStatus = $$^WWWSPEI(YDATEI,YKEY,YFELD,$$$YES)                          ; *** EXECUTE *** (Class Save Hooks)
									if $$$ISOK(strStatus) do OnAfterSave^COMGridEdit31Events(YKEY,YFELD,YVOR)     ; *** EXECUTE *** (from Form)
								} else {
									set strStatus = $listbuild("Com00206","tdY"_idKey_"_1")
								} ; "Validation Failed for %1."  ; FIXME : MakeStatus?
							}
						}
					}
				} else {
					set strStatus = $$$Kill(YDATEI,YKEY)
				}
			}
			
			if $$$ISOK(strStatus) {
				set lstLinks = $get(^WWWDATEN(0,dteToday,YUSER,YFORM,"V","LINKS"))
				for loop=1:1:$length(lstLinks,";") {
					quit:$$$ISERR(strStatus)
					
					set YFORM = $piece(lstLinks,";",loop)
					if YFORM'="" {
						set strStatus = $$SAVE(pYKEY,YFORM)
					}
				}
			}
		}
		
	;+++++++++++++++++++++++++++++++++++++++	
		if $$$ISOK(strStatus) {
			if $tlevel>0 tcommit
		} else {
			trollback
		}
	;+++++++++++++++++++++++++++++++++++++++	
	}
	quit strStatus
	
	
Validate(pYLFDAT,&YFELD,pblnRunOnBeforeSave=$$$NO,pYFORM="")
	;-------------------------------------------------------------------------------
	; Validate the grid.
	;
	; Called By : SAVE^COMGridEdit31Save, ^COMGridEdit31R
	; Returns:
	;
	; History:
	; 26-Jun-2012	SCR		SR17993 Added On Before Validation hook
	; 11-Mar-2009	HQN		AdHoc: Added 4th parameter, checks the specified grid
	; 							instead of the active grid. This is required when
	; 							called from SAVE^COMGridEdit31Save() when validating
	; 							all grids for a header.
	; 14-Oct-2008	GRF		SR15810: unused variable cleanup in new list
	; 13-Oct-2008	GRF		SR15810: Don't apply validation to INWEINVELINE since
	;							"Original" WWWDATEN record is modified to blank out
	;							one of the quantities - special processing.
	; 29-Aug-2008	FIS		SR15828: Compare loaded data with disc data and cancel
	;							save if not equal
	; 10-Aug-2006	JW		SR13594: Clean up. Use encapsulated code.
	; 27-Jun-2006	JW		SR13755: Rewrote (removed obsolete code). Add line
	;							number to msg
	; 26-Jun-2006	JW		SR12775: Added YFELD param. Removed single cell check.
	; 08-Nov-2005	shobby	SR13804: For an additional charge line, get the linked
	;							YFORM
	; 08-Nov-2005	shobby/JW	SR13804: Don't attempt validation on additional
	;							charge lines.  Not yet supported; can lead to errors
	; 31-Oct-2005	JW		SR13207: Check is done outside routine
	; 30-Sep-2005	JW		SR11573: Only validate single field if appropriate
	; 04-Jul-2005	RPW		SR12527: Fixed Status usage for ReturnError
	; 24-Jun-2005	JW		SR12409: But only if key is a counter.
	; 21-Jun-2005	shobby	Ignore any blank lines. SR12409.
	; 14-Apr-2005	PK		SR12136: Un-commented onbeforesave code and added param
	;							to run it conditionally
	; 17-Feb-2005	JW		Don't return strStatus if have message
	; 25-Nov-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new idLine,intLast,objOrgData,objSrcData,objTempData
	new strMessage,strStatus,YDATEI,YFORM,YI,YKEY,YRETVAL,YVOR
	
	$$$LogR("Validate",pYFORM_","_pYLFDAT)
	
	set strStatus = $$$OK
	set idLine    = $piece($piece(pYLFDAT,"Y",2),"_",1)
	
	if pYFORM'="" {
		set YFORM = pYFORM
	} else {
		set YFORM = $get(^CacheTemp(YUSER,"Grid","Name"))
	}
	set YFORM = $$GetYFORMFromLine^COMGridEdit31Interface(YFORM,idLine)
	
	if YFORM'="" {
		set YDATEI = $$$GRIDClass(YFORM)
		set YKEY   = $translate($get(^WWWDATEN(0,+$horolog,YUSER,YFORM,"V","REFERENCEKEY",idLine,1)),$$$DBLQUOTE)
		if YKEY'="" {
			$$$SetFocusField(pYLFDAT)		// To get the correct line in focus for validation
			
			set YVOR = $$$GRIDYVOR(YFORM)
			set strMessage = ""
			
			; FIXME : $translate should be replaced with "set both to number of
			;         pieces in longest and then compare without $tr" since
			;         "...~a~1~~~~b~..." and "...~a~~~~1~b~..." (e.g. YES/NO
			;         switches that have been reset by another user) would
			;         appear to be the same.  "...a1b...")               <GRF>
			
		// vvvv  ;compare loaded data with saved data //SR15828
			set objTempData = $$GetYFELD^COMGridEdit31G(YFORM,idLine,$$$YES,.objOrgData,$$$YES,.objSrcData)
			; FIXME.  Some issues with decimal places related with SR16478
			if ($get(objSrcData) '= "")                               &&
			   ($get(objOrgData) '= "")                               &&
			   ($translate(objSrcData,Y) '= $translate(objOrgData,Y))    {  //saved data '= loaded data
				
	$$$LogR("Validate::",YFORM_","_idLine_","_YKEY)
	$$$LogR("Validate:onDisk:",objSrcData)
	$$$LogR("Validate:before:",objOrgData)
	$$$LogR("Validate:after :",objTempData)
				set strMessage = $$$Text("Com00318")  ;The data has been changed by another user. Please re-load the form.
			}
		//^^^^
			if YFORM = "INWEINVELINE" set strMessage = ""      ; SR15810 TEMPORARY EXCEPTION TO SR15828 - reset even if different
			if YFORM = "VARAlertaLocalLinha" set strMessage = ""       ; TEMPORARY EXCEPTION: objOrgData ALWAYS DIFFERENT
			
			do ExecuteHook^WWW001Hook($$$GetClass(YFORM),$$$EnumWWWEVENTTYPEOnBeforeValidation,.YKEY,.YFELD,YFORM)   ; SR17993

			
			if (strMessage = "") {  //SR15828
	$$$LogRx("Validate:DataFields:1:"_YFELD)
				set strMessage = $$DataFields^WWWFORMValidation(YDATEI,YFORM,.YFELD)
	$$$LogRx("Validate:DataFields:2:"_YFELD_"<"_strMessage)

				if pblnRunOnBeforeSave {
					set strStatus = $$OnBeforeSave^COMGridEdit31Events(YKEY,YFELD,YVOR)
					if $$$ISERR(strStatus) {
						set strMessage = strMessage_$$$Text(strStatus)
					}
				}
			}
			
			if strMessage'="" {   ; Get the last key name so can say which "line" has failed.
				set intLast   = $length(YKEY,",")
				set strStatus = $listbuild("Com00205",
									$get(^CacheTemp(YUSER,"Grid","KeyName",intLast))_" "_$piece(YKEY,",",intLast),
									$$$CRLF_strMessage)		; "%1 - Cannot Save %2"      ; eg. Line 1
			}
		}
	}
	quit strStatus
	
	
Key(pidForm="",pidClass="")
	;-------------------------------------------------------------------------------
	; Given a form or class return a key for the current state. At the moment can only
	; think of company and site location that is able to be used.
	;
	; If class includes keys that can not be handled returned value is blank
	;
	; Params:
	; pidForm - Form Id
	; pidClass - Class Id
	;
	; Returns: Either key string or blank.
	;
	; History:
	; 08-Mar-2007	PO		SR15466: Created
	;-------------------------------------------------------------------------------
	new blnClear,idClass,idKey,idRelationClass,objForm,objKey,strKey
	
	quit:(pidForm="")&&(pidClass="") ""
	
	if pidClass = "" {
		set objForm = $get(^WWW120(0,pidForm,1))
		set idClass = $$$WWW120ClassUsedInForm(objForm)
		
	} else {
		set idClass = pidClass
	}
	
	set strKey   = ""
	set blnClear = $$$NO
	set idKey    = ""
	for {
		set idKey = $order(^WWW002(0,idClass,idKey))
		quit:idKey=""
		
		set objKey = $get(^WWW002(0,idClass,idKey,1))
		set idRelationClass = $$$WWW002RelationClass(objKey)
		if idRelationClass = "WWW012" {
			set strKey = strKey_"0,"
			
		} elseif idRelationClass = "WWW0121" {
			set strKey = strKey_YLOCATION_$$$COMMA
			
		} else {
			set blnClear = $$$YES
		}
	}
	
	if blnClear {
		set strKey = ""
	} else {
		set strKey = $extract(strKey,1,$length(strKey)-1)
	}
	quit strKey
	
]]></Routine>
</Export>