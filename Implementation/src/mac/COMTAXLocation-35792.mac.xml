<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMTAXLocation" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMTAXLocation
	; UI routines for COMTAXLocation
 
#include COMConst
#include COMSYS
#include WWWConst
 
loadForm()
	;History
	; 16-Jul-2014	shobby	CORE-385.23: Links to FIN Module $TEXT will fail if ^ROUTINE global doesn't exist.
	
	new acc,accObj,%d
 
	kill ^COMTempList(YM,YUSER,"COMTAXAccounts")
 
	;CORE-385.23 if ($TEXT(createAccountTempList^FINGLDCM)'="") { 
	if ##class(%Library.Routine).Exists("FINGLDCM") { ;CORE-385.23
		; Use Disclinc Finance
		do createAccountTempList^FINGLDCM("COMTAXAccounts",1) ;CORE-385.23
	}
	elseif ##class(%Library.Routine).Exists("INDCMFIN") { ;CORE-385.23
		;CORE-385.23elseif ($TEXT(createAccountTempList^INDCMFIN)'="") {
		; Use Disclinc Backoffice
		do createAccountTempList^INDCMFIN("COMTAXAccounts")
	}
	
	quit
 
ShowLocationTree()
	new idDTD,idElement,idElementName,objElement,idParent
	
	write !,"<TABLE BORDER=0 CELLSPACING=0>"
	write !,"<TR>"
	write !,"<TD WIDTH=150 NOWRAP VALIGN=TOP ALIGN=RIGHT>"
	write !,"&nbsp;<FONT SIZE=2><B>Tax Locations</B></FONT>"
	write !,"</TD>"
	write !,"<TD NOWRAP VALIGN=TOP>"
	do StartTree^COMTree($get(YPARA))
	do AddNode^COMTree("","***TOP***","Top","Top","","COMTAXLocation","",0,,1)
	set idElementName=""
	for {
		set idElementName=$order(^COMTAXLocation(YM,idElementName))
		quit:idElementName=""
		
		set objElement=$get(^COMTAXLocation(YM,idElementName,1))
		set idParent=$$$COMTAXLocationParentTaxLocation(objElement)
		set:(idParent="") idParent="***TOP***"
		
		do AddNode^COMTree(idParent,
							idElementName,
							idElementName,
							idElementName_"("_$$$COMTAXLocationName(objElement)_")",
							"",
							"COMTAXLocation",
							"",
							0,,0)
	}
	do StopTree^COMTree(1,"***TOP***")
	write !,"</TD>"
	write !,"</TR>"
	write !,"</TABLE>"
	
	quit
	
IsValidLocation(pidLocation)
    ;-------------------------------------------------------------------------------
    ; Checks if a tax location is valid.
    ;
    ; Returns:
    ;
    ; History:
    ; 30-Mar-2005	Steve S		Created
    ;-------------------------------------------------------------------------------
 
	new blnValid
	
	set blnValid=$$$NO
	
	if $get(pidLocation)'="" {
		if $data(^COMTAXLocation(YM,pidLocation,1)) {
			set blnValid=$$$YES	
		}	
	}
 
	quit blnValid
	
	
GetTaxLocation(pCountry,pState,pZIP)
    ;-------------------------------------------------------------------------------
    ; Find the tax location for specified country, state and zip.
    ;
    ; Returns:
    ;
    ; History:
    ; 30-Mar-2005	JW		SR11405: Created
    ;-------------------------------------------------------------------------------
	new location
	
	set location = ""
	if $get(pCountry)'="" {
		set pCountry = $$$Index(pCountry)
		if $get(pState)'="" {
			set pState = $$$Index(pState)
			if $get(pZIP)'="" {
				set pZIP = $$$Index(pZIP)
				// If all 3 are specified
				set location = $order(^COMTAXLocations(YM,1,pCountry,pState,pZIP,""))
			}
			if location="" { // broaden search to state
				set location = $order(^COMTAXLocations(YM,1,pCountry,pState," ",""))
			}
		}
		if location="" { // broaden search to country
			set location = $order(^COMTAXLocations(YM,1,pCountry," "," ",""))
		}
	}
	quit location
	
	
CreateTaxCodesList(pLocation,pCodesArray)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 30-Mar-2005	JW		SR11997: Created
	;-------------------------------------------------------------------------------
	new idTaxCode
	
	kill ^COMTempList(YM,YUSER,"TaxCodes")
	
	if $get(pLocation)'="" {
		
		set idTaxCode=""
		for {
			set idTaxCode=$order(^COMTAXTable(YM,pLocation,idTaxCode))
			quit:idTaxCode=""
			
			set pCodesArray(idTaxCode) = $$GetEnumDescription^COMUtils("MWST",idTaxCode)
			set ^COMTempList(YM,YUSER,"TaxCodes",idTaxCode,1)=pCodesArray(idTaxCode)
		}
	}
	
	quit
	
	
	
CurrentTaxLocation(pidLocationOverride="")
    ;-------------------------------------------------------------------------------
    ; Get the current tax location
    ;
    ; Returns: current location's tax location
    ;
    ; History:
    ; 15-Apr-2005	Steve S	SR11963: Allow override
    ; 14-Apr-2005	Paul K	Use Macro instead
    ; 06-Apr-2005	JW		Created SR10722
    ;-------------------------------------------------------------------------------	
	new idLocation
	
	set idLocation=YLOCATION
	if pidLocationOverride'="" set idLocation=pidLocationOverride
	
	quit $$$WWW0121TaxLocation($get(^WWW0121(0,YM,$get(idLocation," "),1)))
 
 
SameTaxSystem(pidLocation1,pidLocation2) 
    ;-------------------------------------------------------------------------------
    ; Whether 2 locations are in the same tax hierarchy
    ; Note: 2nd location defaults to current location
    ; 
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 27-Jul-2005	JW		SR12992: Created
    ;-------------------------------------------------------------------------------
	quit:$get(pidLocation1)="" $$$NO
	new blnSame,idLocation,locs
	
	if $get(pidLocation2)="" {
		set pidLocation2 = $$CurrentTaxLocation()
	}
	
	set blnSame=$$$NO
	
	if pidLocation2'="" {
		if pidLocation1=pidLocation2 {
			set blnSame=$$$YES
			
		} else {
			set locs(pidLocation1) = ""
			set locs(pidLocation2) = ""
			
			for idLocation=pidLocation1,pidLocation2 {
				for {
					set idLocation = $$$COMTAXLocationParentTaxLocation($get(^COMTAXLocation(YM,idLocation,1)))
					quit:idLocation=""
					if $data(locs(idLocation)) {
						set blnSame=$$$YES
						quit				// Found in hierarchy so quit
					} else {
						set locs(idLocation) = ""
					}
				}
				quit:blnSame
			}
		}
	}
	quit blnSame
	
]]></Routine>
</Export>