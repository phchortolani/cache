<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMImages" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMImages
	#include COMSYS
	#include WWWConst
 
FileNameProperties()
	;-------------------------------------------------------------------------------
	; Called from a command prompt.
	; Looks at the data structures and highlights any properties that are filenames
	; but restrict the case that the filename can be entered.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 12-Dec-2006	shobby		SRBR014286: Created
	;-------------------------------------------------------------------------------
	new idForm,idField,objWWW122,objWWW120,idClass,idFieldClass,objWWW003
	
	set idForm=""
	for {
		set idForm=$order(^WWW122(0,idForm))
		quit:idForm=""
		
		set idField=""
		for {
			set idField=$order(^WWW122(0,idForm,idField))
			quit:idField=""
			
			set objWWW122=$get(^WWW122(0,idForm,idField,1))
			if $$$WWW122ChangeInputAs(objWWW122)'="" {
				set objWWW120=$get(^WWW120(0,idForm,1))
				set idClass=$$$WWW120ClassUsedInForm(objWWW120)
				if idClass'="" {
					set idFieldClass=$$$WWW122SequenceNumber(objWWW122)
					if idFieldClass'="" {
						set objWWW003=$get(^WWW003(0,idClass,idFieldClass,1))
						if $$$WWW003InputType(objWWW003)=10 { ;File Name
							write !,idForm_","_idField_","_idFieldClass
						}
					}
				}
			}
		}
	}
	quit
	
FindInRoutines(pstrDirectory="\\morena\wwwroot\dev\")
	;-------------------------------------------------------------------------------
	; This routine looks in MAC files for any references to images.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 31-Mar-2008	shobby		SRBR014286: Support multiple image types.
	; 24-Nov-2006	shobby		SRBR014286: Created
	;-------------------------------------------------------------------------------
	new idRoutine,idThing,idLine,strLine,intCount,intComment,strLineLower
	
	set intCount=0
	write !
	set idRoutine=""
	for {
		set idRoutine=$order(^rMAC(idRoutine))
		quit:idRoutine=""
		
		set idThing=""
		;w $char(13)_idRoutine_"                    "		
		for {
			set idThing=$order(^rMAC(idRoutine,idThing))
			quit:idThing=""
			
			set idLine=""
			for {
				set idLine=$order(^rMAC(idRoutine,idThing,idLine))
				quit:idLine=""	
				
				set strLine=$get(^rMAC(idRoutine,idThing,idLine))
				set intComment=$find(strLine,";")
				set strLineLower=$zcvt(strLine,"L")
				if $find(strLineLower,".gif")&&((intComment>0)||(intComment<$find(strLineLower,".gif"))) {
					do LookForImages(strLine,.intCount,"",idRoutine_","_idThing_","_idLine_"="_strLine,0,pstrDirectory,".GIF")
				} elseif $find(strLineLower,".jpg")&&((intComment>0)||(intComment<$find(strLineLower,".jpg"))) {
					do LookForImages(strLine,.intCount,"",idRoutine_","_idThing_","_idLine_"="_strLine,0,pstrDirectory,".JPG")
				} elseif $find(strLineLower,".bmp")&&((intComment>0)||(intComment<$find(strLineLower,".bmp"))) {
					do LookForImages(strLine,.intCount,"",idRoutine_","_idThing_","_idLine_"="_strLine,0,pstrDirectory,".BMP")
				}
			}
		}
	}
	write !,!,"Errors="_intCount	
	quit
	
Find(pblnQuickTest=$$$NO,pstrDirectory="\\morena\wwwroot\dev\",pblnIncludeClientData=$$$NO)
	;-------------------------------------------------------------------------------
	; Looks in globals to find references to GIF files.
	; Excludes some classes that we know that we aren't interested in.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 08-Dec-2010	shobby		SRAdhoc:    Simplified and sped up.
	; 31-Mar-2008	shobby		SRBR014286: Can exclude client data and some other temporary data.
	; 24-Nov-2006	shobby		SRBR014286: Created
	;-------------------------------------------------------------------------------
	new strGlobal,strGlobalName,strQuery
	new blnFound,intCount,objGlobal,objWWW001
	
	if $get(Y)="" do ^WWWVAR
	set intCount=0
	set strGlobal="^%zzzzz"
	if 'pblnQuickTest kill ^CacheTempFindCOMImages

	do Global^COMSYSGlobalQuery(.objGlobal,"^",$$$NO)

	for {
		set blnFound=$$$NO
		;set strGlobal=$order(^$Global(strGlobal))
		set strGlobal=$order(objGlobal(strGlobal))
		quit:strGlobal=""
		
		set strGlobalName=$extract(strGlobal,2,999999)
		continue:strGlobalName="WWWDICTIONARY"
		
		if '$data(^CacheTempFindCOMImages(strGlobalName)) {
			if $data(^WWW001(0,strGlobalName)) {
				if $data(^WWW002(0,strGlobalName)) {
					set objWWW001=$get(^WWW001(0,strGlobalName,1))
					continue:('pblnIncludeClientData)&&($$$WWW001ClassType(objWWW001)=1)
					continue:('pblnIncludeClientData)&&($$$WWW001ClassType(objWWW001)=3)
					continue:('pblnIncludeClientData)&&($$$WWW001ClassType(objWWW001)=5)
					continue:('pblnIncludeClientData)&&($$$WWW001ClassType(objWWW001)=9)
					continue:('pblnIncludeClientData)&&($$$WWW001ClassType(objWWW001)=99)
					;write !,strGlobalName_"::"_$$$WWW001ClassType(objWWW001)
					set strQuery=strGlobal
					for {
						set strQuery=$query(@strQuery)
						quit:strQuery=""
						do LookForImages(@strQuery,.intCount,.blnFound,strQuery,1,pstrDirectory,".GIF")
						do LookForImages(@strQuery,.intCount,.blnFound,strQuery,1,pstrDirectory,".JPG")
						do LookForImages(@strQuery,.intCount,.blnFound,strQuery,1,pstrDirectory,".BMP")
					}
				}
			}
		}
		if 'blnFound set ^CacheTempFindCOMImages(strGlobalName)=""
	}
	write !,!,"Errors="_intCount
	quit
	
LookForImages(pstrText,pintCount,pblnFound,pstrQuery,pblnFix,pstrDirectory,pstrType=".GIF")
	;-------------------------------------------------------------------------------
	; Finds references to images in the specified text.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 31-Mar-2008	shobby		SRBR014286: Support multiple picture types.
	; 24-Nov-2006	shobby		SRBR014286: Created
	;-------------------------------------------------------------------------------
	new strUpper,intStart,intEnd,strGif,strRealFileName
 
	for {
		set strUpper=$zcvt(pstrText,"U")
		quit:(strUpper'[pstrType)
		
		set intEnd=$find(strUpper,pstrType)
		set intStart=intEnd-4
		for {
			set intStart=intStart-1
			quit:intStart=0
			;quit:("ABCDEFGHIJKLMNOPQRSTUVWXYZ"'[$extract(strUpper,intStart))
			quit:(" }>(~")[$extract(strUpper,intStart)
			quit:intStart=0
		}
		set strGif=$extract(pstrText,intStart+1,intEnd-1)
		;if strGif'=$zcvt(strGif,"L") {
		set strRealFileName=$$Files(pstrDirectory,strGif,pstrType)
		if $zcvt(strGif,"U")'=pstrType {
			if strGif'=strRealFileName {
				set pblnFound=$$$YES
				if strRealFileName="" set strRealFileName="*** Missing ***"
				if strRealFileName'="*** Missing ***" {
					if pblnFix do Fix(pstrQuery,strGif,strRealFileName)
				}
				write !,pstrQuery_"="_strGif_","_strRealFileName
				set pintCount=pintCount+1
			}
		}
		set pstrText=$extract(pstrText,intEnd,9999999999)
	}
	quit
	
Files(pstrDirectory,pstrName,pstrType)
	;-------------------------------------------------------------------------------
	; Checks whether the expected filename matches the name of the file on disk.
	;
	; Params:
	; pstDirectory: The directory that we are searching for the file, doesn't require
	; 				ending path terminator, handled by query.
	; pstrName    : The file name to be search for
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 31-Mar-2008	shobby		SRBR014826: Support multiple image types
	; 24-Nov-2006	shobby		SRBR014286: Created
	;-------------------------------------------------------------------------------
	new resultSet,strFileName
	
	set strFileName=""
	if $length(pstrName)>50 set pstrName=$extract(pstrName,1,50)_"****"_$zcvt(pstrType,"L")
	
	set resultSet = ##class(%ResultSet).%New("%File:FileSet")
	if resultSet'="" {
		if $$$ISOK(resultSet.Execute(pstrDirectory,pstrName)) {
			for {
				quit:'resultSet.Next()
				
				set strFileName=resultSet.Data("ItemName")
			}
		}
	}
	quit strFileName
	
Fix(pstrQuery,pstrGif,pstrRealFileName)
	;-------------------------------------------------------------------------------
	; If there is a difference correct the global containing the error.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-Nov-2006	shobby		SRBR014286: Created
	;-------------------------------------------------------------------------------
	new strClass,strKey,strSave,objData,strKey1
	
	set strClass = $piece($piece(pstrQuery,"^",2),"(",1)
	set strKey1  = $piece($piece(pstrQuery,"(",2),")",1)
	set strKey   = $translate($piece(strKey1,",",2,$length(strKey1,",")-1),"""")
	xecute "set objData=$get(^"_strClass_"("_strKey1_"))"
	set objData=$$Replace^COMUtilStr(objData,pstrGif,pstrRealFileName)
	write $$Save^COMUtils(strClass,strKey,objData,1)
	write !,"Saving "_strClass_"("_strKey_")"
	quit
	
]]></Routine>
</Export>