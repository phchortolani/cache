<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARTRKPAM" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARTRKPAM
#include INConst
#include VARConst
#include WWWConst
#include COMSYS
#include INReq
 
OnBlurLine(pintCol,pintRow,&pobjYFELD)
	;-------------------------------------------------------------------------------
    ; Loads unit of measure and validates if the Item Supply Type matches with the
    ; PAM Type.
    ;
    ; History:
    ; 15-Apr-2008	Gustavo Fiuza   Updated: validations have been inserted to see if
    ; 										 the item type matches the PAM type.
    ;-------------------------------------------------------------------------------
 
	new PAM, NaturezaEntrada
	new Produto, objProduto, NaturezaFornecimento, UnidadeMedida
		
	//PAM Data
	set PAM 			= $piece(YKEY,",",1)	
	set NaturezaEntrada = $piece($get(^VARTRKPAM(YM,PAM,1)),Y,1)
	
	//Item Data
	set Produto = $piece(pobjYFELD,Y,1)			
	
	if Produto = "" {
		set $piece(pobjYFELD,Y,2) = ""
		quit
	}
				
	set objProduto 		   	 = $get(^INART(0,Produto,1))
	set NaturezaFornecimento = $piece(objProduto,Y,413) 	
	set UnidadeMedida	  	 = $piece(objProduto,Y,40)
	set blnErro 			 = $$$NO
	
 
	if ((NaturezaEntrada >= 1) && (NaturezaEntrada <= 4)) { //PAM's de Estoque
		
		if ((NaturezaFornecimento = 2) || (NaturezaFornecimento = 3)) { //Produto é patrimônio ou uso específico
			set blnErro = $$Erro("A natureza de compra do produto não confere com a natureza de entrada do PAM.")
		}	
		
		elseif ($extract(Produto,1) = "P") { // Produto começa com P
			set blnErro = $$Erro("O código do produto começa com P. A natureza de entrada do PAM não é patrimônio.")
		}	
	}
 
	elseif NaturezaEntrada = 5 { //PAM de Patrimônio
	
		if ($extract(Produto,1) '= "P") {
			set blnErro = $$Erro("O código do produto não começa com P.")
		}
 
		elseif ($extract(Produto,1) = "P") && (NaturezaFornecimento '= 3)  {
			set blnErro = $$Erro("A natureza de fornecimento do produto não é patrimônio.")
		}		
	}
	
	elseif NaturezaEntrada = 6 { // PAM de Uso Específico				
		
		if NaturezaFornecimento '= 2 {
			set blnErro = $$Erro("A natureza de compra do produto não é uso específico.")
		}
		
		elseif ($extract(Produto,1) = "P") { // Produto começa com P
			set blnErro = $$Erro("O código do produto começa com P. A natureza de entrada do PAM não é patrimônio.")
		}			
	}
	
	//Loading Unit of Measure
	if blnErro '= $$$YES {
		set $piece(pobjYFELD,Y,2)  = UnidadeMedida
	}
	
	quit 
 
 
OnBeforeEditAcessHook(objVARTRKPAM)
	;-------------------------------------------------------------------------------
    ; History:
    ; 15-Apr-2008	Gustavo Fiuza	Updated: commented "do ListProdutos(Natureza)". The
    ; 										 tempList no longer needs to be used.
    ; 
    ; 11-Apr-2008	Karine    		Alterado: - melhorar a performance executando rotinas apenas se for necessário
    ; 								   		  - carrega texto de confirmação caso exista PAM com mesmo produto já criado
 	; 							                e alerta antes do processamento.		    								
    ; 								
    ; 20-Feb-2008	Karine			Alterado: criada a COMTempList para selecionar Itens
    ; 										  dependendo da Natureza da Entrada do PAM.
    ;-------------------------------------------------------------------------------        
 
 	new Natureza,MsgConfirm
	
	set MsgConfirm = ""
	
	if YKEY="" {
		QUIT $$CheckLocationAccess()
	}
	else {   //karine
 		
		set Natureza = $$$VARTRKPAMNaturezadaEntrada(objVARTRKPAM)
	
		if $$$VARTRKPAMProcessado(objVARTRKPAM)=1 {
			if YFORM="VARTRKPROTOCOL" {
				QUIT $$CheckLocationAccess()
			}
			if YFORM="VARSESPAMEdit" {
				QUIT $$CheckLocationAccess()	
			}
			quit 0
		}
		elseif $$$VARTRKPAMProcessado(objVARTRKPAM)=3 {			
			quit 0
		}
		else {  //PAM não processada
			
			if Natureza '= "" {               ; Carrega Lista de produtos de acordo com a Natureza do PAM
				set YOPTION = Natureza
				;do ListProdutos(Natureza)
			}
			
	 		set MsgConfirm = $$getPAMrepetida(YKEY)  ; Texto de confirmação do processamento
	 			if MsgConfirm '= "" {
					set $$$WWW124AcknowledgementTextBefore(^WWW124(0,"VARTRKPAM","PT",2,1)) = MsgConfirm
	 			}
	 			else {
		 			set $$$WWW124AcknowledgementTextBefore(^WWW124(0,"VARTRKPAM","PT",2,1)) = ""	
	 			}
	 	}
    } 		
	quit 1
 
 
ListProdutos(pNatureza)
	;-------------------------------------------------------------------------------
    ; Cria lista de produtos de acordo com a natureza da entrada da PAM.
    ;
    ; History:
    ; 15-Apr-2008	Gustavo Fiuza   Updated: the code was commented because the TempList
    ; 								is not being used anymore. The validations are all
    ; 								done on the onblur of the item. 
    ; 								
    ; 20-Feb-2008	Karine			Created
    ;-------------------------------------------------------------------------------
 
 /*	
	new Produto, NaturezaCompraItem
	
	kill ^VARTRKPAMTempItemList(YM,YUSER)
	set Produto = ""
	for {
		set Produto = $order(^INDRPITEM(0,YLOCATION,Produto))
		quit:(Produto = "")
		set objProduto = $get(^INART(0,Produto,1))
		set NaturezaCompraItem = $piece(objProduto,Y,413) 
		
		//Por enquanto só restringe Patrimonio.
		//Se precisar filtrar por Aplicação direta e Consignação é necessário organizar a INART primeiro.
		if pNatureza = 5 {  //Patrimonio
			continue:(NaturezaCompraItem '= 3)   //3 = Patrimonio
		
			if ($extract(Produto,1) '= "P")  { // se a chave do produto não começar com P não é patrimônio.
				continue
			}
		} elseif pNatureza = 6 {   // 6 = Aplicação Direta - Natureza do PAM
			continue:(NaturezaCompraItem '= 2)  ; Aplicação direta - Natureza do Produto
		}
		else {  //Não pode ser produto do tipo Patrimonio
			continue:($extract(Produto,1) = "P")	
		}
		set ^VARTRKPAMTempItemList(YM,YUSER,Produto,1)=$piece(objProduto,Y,1)
	}
	
 */
	
	quit
		  
	
CheckLocationAccess()
 
	if (YLOCATION '= 5) && (YLOCATION '= 1) {
		$$$StartScript()
		w "alert('Opção não disponível para o local ("_YLOCATION_").'); "
		$$$EndScript()
		do GoToForm^COMUtilForm("VARSESTelaInicial","","")
	}
	
	quit $$$OK
	
CanViewReport(idVARTRKPAM,objVARTRKPAM)
	
 	//Rubens, 28/01/2008
 	//Desabilita o botão de relatório caso a PAM não tenha sido processada.
 	if $$$VARTRKPAMProcessado(objVARTRKPAM)=1 {
		set YQ = $$$YQEnable
		quit
	}
	
	if $$$VARTRKPAMProcessado(objVARTRKPAM)=3 {
		set YQ = 1_"Essa PAM já foi processada e foi cancelada."
		quit
	}
	set YQ = 1_"O relatório só fica disponível após a solicitação ter sido processada."
	quit
	
CanEdit(idVARTRKPAM,objVARTRKPAM)
 	//Rubens, 28/01/2008
 	//Desabilita o botão de relatório caso a PAM não tenha sido processada.
 	// 
 	// 11-Apr-2008		Karine		Alterado para não habilitar o botão caso já exista uma AFM criada para o PAM.
 	// 
    
    new existeAFM
 	
	if idVARTRKPAM '= "" {
		set existeAFM=$data(^VARSESPAMAFM(YM,idVARTRKPAM)) 	;Karine@11/04/2008
 	
 		if existeAFM '= 0 { //existe registro de AFM para esta PAM                     ;Karine@11/04/2008
	 		set YQ = 1_"Já existe AFM para este PAM, por isso não pode ser revisado."
 		}
 		elseif $$$VARTRKPAMProcessado(objVARTRKPAM)=1 {
			set YQ = $$$YQEnable
		}
		elseif $$$VARTRKPAMProcessado(objVARTRKPAM)=3 {
			set YQ = 1_"Essa PAM foi cancelada."
		}
		else {
			set YQ = 1_"Esta função somente fica disponível após a PAM ter sido processada."
		}
	}	
	
 	;if $$$VARTRKPAMProcessado(objVARTRKPAM)=1 {
	;	set YQ = $$$YQEnable
	;	quit
	;}
	;if $$$VARTRKPAMProcessado(objVARTRKPAM)=3 {
	;	set YQ = 1_"Essa PAM foi cancelada."
	;	quit
	;}
	;set YQ = 1_"Esta função somente fica disponível após a PAM ter sido processada."
 
	quit
 	
Process(idVARTRKPAM)
	set objVARTRKPAM=$GET(^VARTRKPAM(YM,idVARTRKPAM,1))
	set pidLocation=$$$VARTRKPAMSetorSolicitante(objVARTRKPAM)
	SET idVARTRKPAMLineFake=""
	SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake))
	while idVARTRKPAMLineFake'="" {
		new objVARTRKPAMLineFake,objINRequisition,pidRequisition
		set objVARTRKPAMLineFake=$GET(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake,1))
		set pidItem=$$$VARTRKPAMLineFakeItem(objVARTRKPAMLineFake)
		set pfltQuantity=$$$VARTRKPAMLineFakeQuantity(objVARTRKPAMLineFake)
		if $$$VARTRKPAMLineFakeRequisitionProcessNumber(objVARTRKPAMLineFake)'= "" { //Criada pelo Alerta
			/*
			SET pidRequisition=$$$VARTRKPAMLineFakeRequisitionProcessNumber(objVARTRKPAMLineFake)
			new arrRequisitions
			set arrRequisitions(pidRequisition) = ""
			set strStatus=$$PrepareToSource^VARSESINRequisition(.arrRequisitions)		
			if $$$ISERR(strStatus) {
				set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			set strStatus=$$Source^VARSESINRequisition(.arrRequisitions)
			if $$$ISERR(strStatus) {
				set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			*/
		}
		else {
			/*
			set strStatus=$$Create^VARSESINRequisition(pidLocation, pidItem, pfltQuantity, .pidRequisition)
			if $$$ISERR(strStatus) {
				set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			new arrRequisitions
			set arrRequisitions(pidRequisition) = ""
			set strStatus=$$Firm^VARSESINRequisition(pidRequisition)
			if $$$ISERR(strStatus) {
				set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			set strStatus=$$PrepareToSource^VARSESINRequisition(.arrRequisitions)		
			if $$$ISERR(strStatus) {
				set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			set strStatus=$$Source^VARSESINRequisition(.arrRequisitions)
			if $$$ISERR(strStatus) {
				set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			set objINRequisition=$get(^INRequisition(YM,YM,pidRequisition,1))
			set $$$INRequisitionRequisitionProcessNumber(objINRequisition) = idVARTRKPAM
			set strStatus = $$$Save("INRequisition",YM_YKOMMA_pidRequisition,objINRequisition,1)
			if $$$ISERR(strStatus) {
				set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			*/
		}
		set $piece(objVARTRKPAMLineFake,Y,59)=0  //status da Linha = desabilitado --Karine@05/02/2008
		set strStatus = $$$Save("VARTRKPAMLineFake",idVARTRKPAM_YKOMMA_idVARTRKPAMLineFake,objVARTRKPAMLineFake,1)
		if $$$ISERR(strStatus) {
			set $zerror = "Erro ao cancelar linha da PAM. => "_$$DecodeError^COMUtilError(strStatus)
			for i=1:1:20 hang 1
			zquit 1 GOTO @$ZTRAP
		}
		SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake))
	}
	set $$$VARTRKPAMProcessado(objVARTRKPAM)=1
	set strStatus = $$$Save("VARTRKPAM",idVARTRKPAM,objVARTRKPAM,1)
	if $$$ISERR(strStatus) {
		set $zerror = "Erro ao processar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
		zquit 1 GOTO @$ZTRAP
	}
	quit $$$OK
	
ProcessOnClick(idVARTRKPAM)
	new status, listaStatusEntregas, linhaPAM, errMsg, errMsgLinhas, stAlerta
 	
 	set stAlerta = ""
 	
	// Andre, 18/03/2008 - Verifica se entregas são válidas:
	set status = $$EntregasValidas^VARSESPAMEntrega(idVARTRKPAM,.listaStatusEntregas)
	if ( status '= 1 ) {
		set linhaPAM = ""
		set errMsg = $piece(status,Y,2)
		set:($get(errMsg) = "") errMsg = "Erro na validação das entregas."
		set errMsgLinhas = ""
		for {
			set linhaPAM = $order(listaStatusEntregas(linhaPAM))
			quit:(linhaPAM = "")
			if ( listaStatusEntregas(linhaPAM) '= 1 ) {
				set:($get(errMsgLinhas) = "") errMsgLinhas = "Situação das entregas para cada linha da PAM:"
				set errMsgLinhas = errMsgLinhas_$char(10)_linhaPAM_": "_$piece(listaStatusEntregas(linhaPAM),Y,2)
			}
		}
		set:($get(errMsgLinhas) '= "") errMsg = errMsg_$char(10)_errMsgLinhas
		do AlertInScript^COMConst(errMsg)
		do GoToForm^COMUtilForm("VARTRKPAM", idVARTRKPAM)	
		quit
	}
	// Fim - Andre, 18/03/2008
 
	set strStatus = $$Transaction^COMTransaction("Process^VARTRKPAM("""_idVARTRKPAM_""")", $$$YES)
	if $$$ISOK(strStatus) {
		$$$StartScript()
		w "alert ('PAM processado com sucesso!');"
		$$$EndScript()
	}
	set link= YAKTION_"EP=WWWFORM&YFORM=VARTRKPAM&YUCI="_YUCI_"&YBED="_YBED_"&YM="_YM_"&YUSER="_YUSER_"&YKEY="_YKEY
    $$$StartScript()
	write "window.location = '"_link_"'"
	$$$EndScript()
	quit
	
CanProcess(idVARTRKPAM,objVARTRKPAM)
	IF idVARTRKPAM="" quit
	set YQ = $$$YQEnable
	if $$$VARTRKPAMProcessado(objVARTRKPAM)=1 {
		set YQ = 1_"Esse PAM já foi processado."
		quit
	}
	if $$$VARTRKPAMProcessado(objVARTRKPAM)=3 {
		set YQ = 1_"Esse PAM já foi processado e foi cancelado."
		quit
	}
	set idVARPAMLine=""
	set idVARPAMLine=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARPAMLine))
	if idVARPAMLine="" {
		set YQ = 1_"Todo PAM requer uma linha!"
		quit
	}
	WHILE idVARPAMLine'= "" {
		set objVARPAMLine=$get(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARPAMLine,1))
		if (($piece(objVARPAMLine,Y,3)<=0) || ($piece(objVARPAMLine,Y,3)="")) {
			set YQ = 1_"Todo PAM requer uma quantidade!"
			quit
		}
		if $piece(objVARPAMLine,Y,1)="" {
			set YQ = 1_"Toda linha requer um produto!"
			quit
		}
		set idVARPAMLine=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARPAMLine))
	}
	if YQ'=0 quit
	set YQ = $$$YQEnable
	quit
 
Edit(idVARTRKPAM)
	SET idVARTRKPAMLineFake=""
	SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake)) 
	while idVARTRKPAMLineFake'="" {
		set objVARTRKPAMLineFake=$get(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake,1))
		set $piece(objVARTRKPAMLineFake,Y,59)=1  //status da Linha = desabilitado --Karine@05/02/2008
		/*
		set idRequisition=$$$VARTRKPAMLineFakeRequisitionProcessNumber(objVARTRKPAMLineFake)
		set strStatus=$$$Kill("INRequisition",YM_YKOMMA_idRequisition)
		if $$$ISERR(strStatus) {
			set $zerror = "Erro ao cancelar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
			zquit 1 GOTO @$ZTRAP
		}
		*/
		//Nao existe demanda para compra! Rubens
		//set objDemand=$$$DATA("INDRPDEMAND",$$$VARSESSolicTransfLocalAbastecedor(pobjSolicTransf)_YKOMMA_idDemand)
		//set $$$INDRPDEMANDDemandClosed(objDemand)=$$$YES			
		//set strStatus=$$$Save("INDRPDEMAND",$$$VARSESSolicTransfLocalAbastecedor(pobjSolicTransf)_YKOMMA_idDemand,objDemand,$$$YES)
		//SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake))
		set strStatus = $$$Save("VARTRKPAMLineFake",idVARTRKPAM_YKOMMA_idVARTRKPAMLineFake,objVARTRKPAMLineFake,1)
		if $$$ISERR(strStatus) {
			set $zerror = "Erro ao cancelar linha da PAM. => "_$$DecodeError^COMUtilError(strStatus)
			for i=1:1:20 hang 1
			zquit 1 GOTO @$ZTRAP
		}
		SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake))
	} 
	
	set objVARTRKPAM=$get(^VARTRKPAM(YM,idVARTRKPAM,1))
 
	// Andre, 18/02/2008: Não existe o status "0" no parâmetro VARSESSOLICSTATUS. Se o status
	// for definido igual a "0" a PAM não fica editável. É preciso definí-lo como nulo.
	//set $$$VARTRKPAMProcessado(objVARTRKPAM)=0
	set $$$VARTRKPAMProcessado(objVARTRKPAM)=""
	
	set strStatus = $$$Save("VARTRKPAM",idVARTRKPAM,objVARTRKPAM,1)
	if $$$ISERR(strStatus) {
		set $zerror = "Erro ao cancelar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
		zquit 1 GOTO @$ZTRAP
	}
	quit $$$OK
 	
EditOnClick(idVARTRKPAM)
	new strStatus,objVARTRKPAM,YSEITE	
	set strStatus = $$Transaction^COMTransaction("Edit^VARTRKPAM("""_idVARTRKPAM_""")", $$$YES)
		if $$$ISOK(strStatus) {
			$$$StartScript()
			w "alert ('Esta PAM pode ser editada.');"
			$$$EndScript()
		}
		set link= YAKTION_"EP=WWWFORM&YFORM=VARTRKPAM&YUCI="_YUCI_"&YBED="_YBED_"&YM="_YM_"&YUSER="_YUSER_"&YKEY="_YKEY
	    $$$StartScript()
		write "window.location = '"_link_"'"
		$$$EndScript()
	quit
 
Cancel(idVARTRKPAM)
	SET idVARTRKPAMLineFake=""
	SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake)) 
	while idVARTRKPAMLineFake'="" {
		set objVARTRKPAMLineFake=$get(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake,1))
		set $piece(objVARTRKPAMLineFake,Y,59)=1  //status da Linha = desabilitado --Karine@05/02/2008
		/*
		set idRequisition=$$$VARTRKPAMLineFakeRequisitionProcessNumber(objVARTRKPAMLineFake)
		set strStatus=$$$Kill("INRequisition",YM_YKOMMA_idRequisition)
		if $$$ISERR(strStatus) {
			set $zerror = "Erro ao cancelar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
			zquit 1 GOTO @$ZTRAP
		}
		*/
		//Nao existe demanda para compra! Rubens
		//set objDemand=$$$DATA("INDRPDEMAND",$$$VARSESSolicTransfLocalAbastecedor(pobjSolicTransf)_YKOMMA_idDemand)
		//set $$$INDRPDEMANDDemandClosed(objDemand)=$$$YES			
		//set strStatus=$$$Save("INDRPDEMAND",$$$VARSESSolicTransfLocalAbastecedor(pobjSolicTransf)_YKOMMA_idDemand,objDemand,$$$YES)
		//SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake))
		set strStatus = $$$Save("VARTRKPAMLineFake",idVARTRKPAM_YKOMMA_idVARTRKPAMLineFake,objVARTRKPAMLineFake,1)
		if $$$ISERR(strStatus) {
			set $zerror = "Erro ao cancelar linha da PAM. => "_$$DecodeError^COMUtilError(strStatus)
			for i=1:1:20 hang 1
			zquit 1 GOTO @$ZTRAP
		}
		SET idVARTRKPAMLineFake=$order(^VARTRKPAMLineFake(YM,idVARTRKPAM,idVARTRKPAMLineFake))
	} 
	
	set objVARTRKPAM=$get(^VARTRKPAM(YM,idVARTRKPAM,1))
	set $$$VARTRKPAMProcessado(objVARTRKPAM)=3
	set strStatus = $$$Save("VARTRKPAM",idVARTRKPAM,objVARTRKPAM,1)
	if $$$ISERR(strStatus) {
		set $zerror = "Erro ao cancelar a PAM. => "_$$DecodeError^COMUtilError(strStatus)
		zquit 1 GOTO @$ZTRAP
	}
	quit $$$OK
 
CancelOnClick(idVARTRKPAM)
	new strStatus,objVARTRKPAM,YSEITE
 
	set objVARTRKPAM=$$GetFormData^COMUtilForm(YFORM)
	if $$$VARTRKPAMProcessado(objVARTRKPAM)=1 {
		set $$$VARTRKPAMProcessado(objVARTRKPAM)=4
		set strStatus=$$Save^COMUtils("VARTRKPAM",idVARTRKPAM,objVARTRKPAM,1)
		set YSEITE=3
		do GoToForm^COMUtilForm(YFORM,idVARTRKPAM,4,$get(YPARA),$$$NO)
		;do ReloadForm^COMUtilForm()
	} elseif $$$VARTRKPAMProcessado(objVARTRKPAM)=4 {
		if $$$VARTRKPAMMotivoCancelamento(objVARTRKPAM)="" {
			$$$StartScript()
			w "alert ('PAM cancelada nao com sucesso!');"
			$$$EndScript()
		} else {
			set $$$VARTRKPAMProcessado(objVARTRKPAM)=3
			set strStatus=$$Save^COMUtils("VARTRKPAM",idVARTRKPAM,objVARTRKPAM,1)
			set YSEITE=3
		}
		do GoToForm^COMUtilForm(YFORM,idVARTRKPAM,4,$get(YPARA),$$$NO)			
	} else {
	
	
	
		set strStatus = $$Transaction^COMTransaction("Cancel^VARTRKPAM("""_idVARTRKPAM_""")", $$$YES)
		if $$$ISOK(strStatus) {
			$$$StartScript()
			w "alert ('PAM cancelada com sucesso!');"
			$$$EndScript()
		}
		set link= YAKTION_"EP=WWWFORM&YFORM=VARTRKPAM&YUCI="_YUCI_"&YBED="_YBED_"&YM="_YM_"&YUSER="_YUSER_"&YKEY="_YKEY
	    $$$StartScript()
		write "window.location = '"_link_"'"
		$$$EndScript()
	}
	quit
	
CanCancel(idVARTRKPAM,objVARTRKPAM)
	if ($$$VARTRKPAMProcessado(objVARTRKPAM)=4)&&($$$VARTRKPAMMotivoCancelamento(objVARTRKPAM)'="") {
		set YQ=0
		quit
	}
	if $$$VARTRKPAMProcessado(objVARTRKPAM)=3 {
		set YQ = 1_"Essa PAM já foi cancelada."
		quit
	}
	if $$$VARTRKPAMProcessado(objVARTRKPAM)'=1 {
		set YQ = 1_"Essa PAM ainda não foi processada."
		quit
	}
	if $order(^VARSESPAMAFM(YM,idVARTRKPAM,""))'="" {
		set YQ = 1_"Essa PAM não pode ser cancelada, está sendo usada em uma AFM."
		quit
	
	}
	set YQ = $$$YQEnable
	
	//set $piece(^WWW122D(0,"VARTRKPAM",15,0,1),Y,13) = ""    //(D13) habilita campo motivo cancelamento
	
	quit
	 	
OnAfterPrimaryKey(pYKEY,pYFELD)
	if pYKEY'="" {
		set dado=""
		set dado=$order(^VARTRKPAMLineFake(0,pYKEY,dado))
		while dado'="" {
			set Item=""
			set Location=""
			set Natureza=""
			set Item=$piece(^VARTRKPAMLineFake(0,pYKEY,dado,1),Y,1)
			set Location=$piece(pYFELD,Y,3)
			set Natureza=$piece(^INART(0,Item,1),Y,345)
			// Andre, 26/01/2008:
			//set $piece(^VARTRKPAMLineFake(0,pYKEY,dado,1),Y,48)=$$^WWWTR(0,8,$$getCMM^VARTRKINDRPBESTVOR(Item)) //CMM REDE
			set $piece(^VARTRKPAMLineFake(0,pYKEY,dado,1),Y,48)=$$^WWWTR(0,8,$$getCMMRede^VARTRKINART(Item)) //CMM REDE
			set $piece(^VARTRKPAMLineFake(0,pYKEY,dado,1),Y,49)=$$^WWWTR(0,8,$$^INARTMENGE(Item,,Location,,1,0)) //E.F. Local
			if (Natureza'="") {
				if $get(^INPARA(0,"VARSESNATUREZADACOMPRA","PT",1,Natureza))'=""{
					set $piece(^VARTRKPAMLineFake(0,pYKEY,dado,1),Y,52)=$piece(^INPARA(0,"VARSESNATUREZADACOMPRA","PT",1,Natureza),Y,1) // Natureza da Compra
				}
			}
			set dado=$order(^VARTRKPAMLineFake(0,pYKEY,dado))
		}	
	}
 
	quit
 
OnAfterDataFields(pYKEY,pYFELD,pYSEITE)
	do OnAfterPrimaryKey^VARTRKPAM(pYKEY,pYFELD)
	do OnAfterDataFields^VARTRKPAMLineFake(YKEY,YFELD,YSEITE)
	// Andre, 19/03/2008:
	;do OnAfterDataFields^VARTRKPAMEntrega(YKEY,YFELD,YSEITE) // RETIRAR!!! É as antigas entregas de PAM ("TRK")!!
	if ( $get(YSEITE) = 3 ) {
		do ListarEntregas^VARSESPAMEntrega(YKEY)
	}
	// ----
	quit
	
OnBeforeSave(pYKEY,pYFELD)
	do OnBeforeSave^VARTRKPAMLineFake(YKEY,YFELD)
	do OnBeforeSave^VARTRKPAMEntrega(YKEY,YFELD)
	do ValidaAFMDeOrigem(YKEY,YFELD)	//GUSTAVO - DOACAO	
	quit
	
sqlgetCMMRede(Item,Location)
	DO ^WWWVAR
	set YM=0
	set YLOCATION=Location
	if Item'="" {
 	// Andre, 26/01/2008:
 	//quit $$^WWWTR(0,8,$$getCMM^VARTRKINDRPBESTVOR(Item))
	quit $$^WWWTR(0,8,$$getCMMRede^VARTRKINART(Item))
	}
	quit 0
 
 //	quit $$^WWWTR(0,8,$$getCMM^VARTRKINDRPBESTVOR(YFELD,Y,1))
 //	
sqlgetEFLocal(Item,Location)
	do ^WWWVAR
	set YM=0
	set YLOCATION=Location
	if Item'="" {
		quit $$^WWWTR(0,8,$$^INARTMENGE(Item,,Location,,1,0))
		}
	quit 0
 
	
getNaturezaCompra()
	/*
	if $PIECE(YFELD,Y,1)'="" {
		set Entrada=$piece(^INART(0,$piece(YFELD,Y,1),1),Y,345)
		set $piece(YFELD,Y,52)=$piece(^INPARA(0,"VARSESNATUREZADACOMPRA","PT",1,Entrada),Y,1)
	}*/
	quit
 
CalculaData()
 
	set Hoje 			= $h
	set EntregaPrevista = $piece(YFELD,Y,1)
	
	set Data = Hoje + EntregaPrevista
 
	quit Data
	
 
CarregaNumProcesso()
 	//regra de customizacao numero processo
	new AFM, PAM, NumProcesso
		
	set AFM = $piece(YFELD,Y,16)
	set PAM = $piece($get(^INAUF(YM,AFM,1)),Y,354)
	set NumProcesso = $piece($get(^VARTRKPAM(YM,PAM,1)),Y,7)
 
	quit NumProcesso
 
	
ValidaAFMDeOrigem(pYKEY,pYFELD)
	
	new Natureza, PAM, AFMDeOrigem, LinhaPAM, LinhaAFM, ArrayProdutosAFM 
	
	set Natureza    = $$$VARTRKPAMNaturezadaEntrada(pYFELD)
	set AFMDeOrigem = $piece(pYFELD,Y,16)
	
	if ((Natureza = 2) && (AFMDeOrigem '= "")) {
	
		set PAM = YKEY		
	
		set LinhaPAM = ""
		set LinhaAFM = ""
		set ArrayProdutosAFM = ""
	
		for {
			set LinhaAFM = $order(^INAUFP(YM,AFMDeOrigem,LinhaAFM))
			quit:(LinhaAFM = "")
 
			set CodProdutoAFM = $piece($get(^INAUFP(YM,AFMDeOrigem,LinhaAFM,1)),Y,4)
			set ArrayProdutosAFM = ArrayProdutosAFM_";"_CodProdutoAFM			
		
		}		
			set ArrayProdutosAFM = ArrayProdutosAFM_";"
	
		for {
			set LinhaPAM = $order(^VARTRKPAMLineFake(YM,PAM,LinhaPAM))
			quit:(LinhaPAM = "")
		
			set CodProdutoPAM = $piece($get(^VARTRKPAMLineFake(YM,PAM,LinhaPAM,1)),Y,1)
			set CodProdutoPAM2 = ";"_CodProdutoPAM_";"		
		
			if '$find(ArrayProdutosAFM,CodProdutoPAM2) {		
				$$$StartScript()
				w "alert('O Produto "_CodProdutoPAM_" não consta na AFM "_AFMDeOrigem_". Favor corrigir.');"
				$$$EndScript()	
			
				set Q=$$$QDontSave
				quit
			}				
		}
	}
 
	quit
	
OnBeforeSaveHook()
 
	new newStatus, oldStatus, oldPAM
 
	set newStatus = $$$VARTRKPAMProcessado(YFELD)
	set oldPAM    = $get(^VARTRKPAM(YM, YKEY, 1))
	set oldStatus = $$$VARTRKPAMProcessado(oldPAM)
	
	// Se houve mudança de estado e o novo estado é cancelado:
	if (oldStatus '= newStatus) && (newStatus = 3) { ; Cancelado
 
		do CancelarPAMLines^VARTRKPAMLineFake(YKEY)
	}
	quit $$$OK
 
getPAMrepetida(pidPAM)
	;
	; 	Verifica dentre todas as PAMs já criadas se existe alguma com o mesmo
	; o mesmo produto e sem AFM. Caso exista, avisa antes de processar,
	; dando alternativa para o usuário utilizar a mesma e alterar o registro.
	;
	; Returns: Message
	; 
	; 03-04-08	Karine	
	;
	new statusMsg,idPAMLine, idProd, qtdProd, parrAFMLines
	set statusMsg = ""
	
	IF pidPAM '="" {
    	set idPAMLine=""
        set prodLinha=""
        set statusMsg = ""
        set MsgProduto = ""
        set PAMcomAFM = ""
       
        set idPAMLine=$order(^VARTRKPAMLineFake(YM,pidPAM,idPAMLine))
 		
        while idPAMLine'= "" {   ; pegar o item de cada linha da PAM criada
    	    kill parrAFMLines
            
        	set objPAMLine=$get(^VARTRKPAMLineFake(YM,pidPAM,idPAMLine,1))
            if $piece(objPAMLine,Y,1) '="" {
            	set prodLinha = $piece(objPAMLine,Y,1)
             
            ;Pesquisa em todas as PAMs se existe alguma com o mesmo produto e sem AFM
            $$$Order5(^VARTRKPAMLineFakes,YM,20,$$$NO,$$$Index(prodLinha),idPAMs)
	
				$$$Order6(^VARTRKPAMLineFakes,YM,20,$$$NO,$$$Index(prodLinha),idPAMs,idPAMLines)
	            
					set objPAMs    = $get(^VARTRKPAM(YM, idPAMs, 1))
					set idStatus = $$$VARTRKPAMProcessado(objPAMs)
					continue:(idPAMs = pidPAM) ; para não pegar o mesmo PAM que está sendo criado no momento
						
   					set idAFM="" 
   					for { 
   					    set idAFM=$order(^VARSESPAMAFM(YM,idPAMs,idPAMLines,idAFM)) 
   						if idAFM = "" {
	   						set MsgProduto = MsgProduto_"Número do PAM : "_idPAMs_".\n"
	   						quit	
   						}
   						else {
	   					    set PAMcomAFM = PAMcomAFM_";"_idPAMs
	   					    quit	
   						}
   					}
				$$$End	
			$$$End
          }
			if MsgProduto '= "" {
				set statusMsg = statusMsg_"Já existe PAM aberto e sem AFM para o produto -> "_prodLinha_":\n"
				set statusMsg = statusMsg_MsgProduto		
			}
		set MsgProduto =""
        set idPAMLine=$order(^VARTRKPAMLineFake(YM,pidPAM,idPAMLine))
        }
    }       
 
	if statusMsg '= "" {
		set statusMsg = statusMsg_"Tem certeza que deseja processar este PAM ?"
	}
	else {
		set $$$WWW124AcknowledgementTextBefore(^WWW124(0,"VARTRKPAM","PT",2,1)) = ""	
	}
	
	quit statusMsg
 
 
OnAfterSave(pYKEY,pYFELD)
	// Andre, 15/04/2008 - Ao salvar a PAM, cria a entrega padrão:
	new entregaPadrao
	set entregaPadrao = $piece(YFELD,Y,17)
	if ( $get(entregaPadrao) '= "" ) {
		do CriaEntregasPadrao^VARSESPAMEntrega(pYKEY,pYFELD)
	}
	quit
	
Erro(pMensagem)
	;-------------------------------------------------------------------------------
    ; Used in OnBlurLine method. Alerts the error to the user and clean the item code.
    ;
    ; History:
    ; 15-Apr-2008	Gustavo Fiuza   Created
    ;-------------------------------------------------------------------------------
	
	new blnErro
	
	$$$StartScript()
	w "alert('"_pMensagem_"'); "
	$$$EndScript()
	
	set $piece(pobjYFELD,Y,1) = ""
	set blnErro = $$$YES
	
	quit blnErro
	
getDescEntrega(pObjPAM)
	// Andre, 07/05/2008
	// Obtém a descrição da entrega.
	
	new descEntrega, descEntPadrao, idEntregaPadrao, primEntDiasUteis, primEntPodeSerAnt
	
	set descEntrega = ""
	
	quit:( $get(pObjPAM) = "" ) ""
	
	set idEntregaPadrao = $piece(pObjPAM,Y,17)
	
	set descEntPadrao = $$getDescricao^VARSESEntregaPadrao(idEntregaPadrao)
	
	if ( $get(descEntPadrao) '= "" ) {
		set descEntrega = descEntPadrao
	}
	else {
		set descEntrega = "Veja entregas customizadas item a item."
	}
	
	set primEntDiasUteis = $piece(pObjPAM,Y,19)
	if ( +$get(primEntDiasUteis) = 1 ) {
		set descEntrega = descEntrega_"|"_"Somente para a primeira entrega os dias são contados em dias úteis. Para as demais entregas, os dias são contados corridos."
	}
	
	set primEntPodeSerAnt = $piece(pObjPAM,Y,20)
	if ( +$get(primEntPodeSerAnt) = 1 ) {
		set descEntrega = descEntrega_"|"_"A primeira entrega pode ser feita antes do prazo estabelecido."
	}
	
	quit descEntrega
]]></Routine>
</Export>