<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMViewObject" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMViewObject
	
#include WWWConst
#include COMConst
#include COMView
#include COMGridEdit31
#include %occInclude
	
#define DefaultRecords 300
	
DisplayValueForObject(pidClass="",pidField="",pstrValue="",pidKey="",pstrAlign,blnTruncate=$$$YES,pblnIsControl=$$$NO,pidForm="")
	;-------------------------------------------------------------------------------
	; Converts a value for display. If the field has a relation, show it.
	;
	; Returns:String
	;
	; History:
	; 06-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 17-Nov-2009	GRF		SR16871: convert »CostCentre« into YLOCATION value
	; 							(allow US spelling as well as English)
	; 09-Sep-2008	PP		SR15866:Update COMView to Objects
	;-------------------------------------------------------------------------------
	new blnContinue,blnLang,idClass,idInputType,idLangClass,idRelationClass
	new intCompany,intMaxDataLen,intType
	new Loop,lstValue,objCOMViewConfig,objProperty,objRef,objWWW003
	new strDisplay,strGlobal,strLangGlobal,strRelation,strUCValue,strValue
	
	;=======================================
	; "»" = $char(187)     "«" = $char(171)
	;=======================================
	
	if ($extract(pstrValue)="»") && ($extract($reverse(pstrValue))="«") {  ;Used for things like YUSER,YBED,YLOCATION etc...
		set strValue = $extract(pstrValue,2,$length(pstrValue)-1)	
		
		set strUCValue = $zconvert(strValue,"u")                     ; SR16871 vvv
		if ((strUCValue="COSTCENTRE") || (strUCValue="COSTCENTER")) && ($data(YLOCATION)=1) {
			set pstrValue = $$GetCostCentre^INCostCentre(YLOCATION)
		
		} elseif (strValue'="") && ($data(@strValue)=1) {
	;	if (strValue'="") && ($data(@strValue)=1) {                  ; SR16871 ^^^
			set pstrValue = @strValue					
		}
	}
	
	set strValue  = ""
	set pstrAlign = "left"
	
	set objCOMViewConfig = $get(^COMViewConfig(0,YM,1))
	
	if $$ExpandSelection^COMViewConfig() { ;BR014900
		set intMaxDataLen = 10000
	} else {
		set intMaxDataLen = $$$COMViewConfigMaxdatalength(objCOMViewConfig)
		if intMaxDataLen'>0 set intMaxDataLen=100
	}
 
	
	if (pidClass'="")&&(pidField'="") {
 
		set objProperty = ##class(%Library.PropertyDefinition).%OpenId(pidClass_":"_pidField)
		//set objWWW003 = $$GetRelation^COMViewUtils(.pidClass,pidField,pidForm,$$$YES)  ;BR014790
		
		set idInputType     = objProperty.Type	//$$$WWW002InputType(objWWW003)         // SRBR014073
		//set idRelationClass = $$$WWW002RelationClass(objWWW003)     // SRBR014073
 
		if $extract(idInputType,1,8)'="alSYS.dt" {
			set idRelationClass = idInputType
		}
		
		if $find(",alSYS.dt.dtFloat,alSYS.dt.dtCurrency,alSYS.dt.dtInteger,",","_idInputType_",") {
			set pstrAlign="right"
			set intType  = $select(idInputType="alSYS.dt.Float":12,idInputType="alSYS.dt.dtInteger":4,1:8)
			set strValue = $$GetLiteral^WWWTR(intType,pstrValue)
		}
 
		if idInputType="alSYS.dt.dtBoolean" { 
			set pstrValue = ''pstrValue
			set strValue  = $$$SysEnum("JA/NEIN",pstrValue)
		
		} elseif (idInputType="alSYS.dt.dtDate") {
			set strValue  = $$^WWWDATE(pstrValue)
 		//	set strValue = pstrValue
 
		} elseif (idInputType="alSYS.dt.dtTime") {
			set strValue = $$^WWWTIME(pstrValue)
		//	set strValue = pstrValue
	
		} else {
			set strValue = pstrValue
		}
	}
	
	if blnTruncate && ($length(strValue)>intMaxDataLen) {
		set lstValue = $listbuild($$$YES,$extract(strValue,1,intMaxDataLen))
	} else {
		set lstValue = $listbuild($$$NO,strValue)
	}
 
	quit lstValue
 
 
ConvertField(pidClass,pstrField,pstrValue="",pstrComp="",
			 pintInputType="",pstrSafeMode=$$$NO,pblnOrderBy=$$$NO,
			 pblnDisplay=$$$YES)
    ;-------------------------------------------------------------------------------
    ; This method attempts to optimise SQL searching by adding %upper and other
    ; functions so that indexes are used correctly.
    ;
    ; History:
	; 17-Nov-2009	GRF		SR16871: convert »CostCentre« into YLOCATION value
	; 							(allow US spelling as well as English)
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ;-------------------------------------------------------------------------------
	new idIndexKey,idInputAs,objField,objProperty
	new strField,strKeyCode,strPackage,strPlus,strUCValue,strValue,ValueLoop
	
	//set strKeyCode=""
	//set objField=$$GetRelation^COMViewUtils(.pidClass,.pstrField,,.strKeyCode) ; Should this pass 2nd parm for changing
	//set pintInputType=$$$WWW002InputType(objField)
 
	
	//SR14675: Only use the % check for non-display filters
	//if ($extract(pstrValue,1)="%")&&('pblnDisplay) {  SR15166
	if ($extract(pstrValue)="»") && ($extract($reverse(pstrValue))="«") {  ;Used for things like YUSER,YBED,YLOCATION etc...
		set strValue=$extract(pstrValue,2,$length(pstrValue)-1)	
		
		set strUCValue = $zconvert(strValue,"u")                     ; SR16871 vvv
		if ((strUCValue="COSTCENTRE") || (strUCValue="COSTCENTER")) && ($data(YLOCATION)=1) {
			set pstrValue = $$GetCostCentre^INCostCentre(YLOCATION)
		
		} elseif (strValue'="") && ($data(@strValue)=1) {
	;	if (strValue'="") && ($data(@strValue)=1) {                  ; SR16871 ^^^
			set pstrValue=@strValue					
		}
	}
 
	set objProperty   = ##class(%Library.PropertyDefinition).%OpenId(pidClass_":"_pstrField)
	set pintInputType = objProperty.Type
	
	set pidClass  = $$SQLClass^COMViewSQL(pidClass)	//SR14429
	set strField  = pidClass_"."_pstrField		    //$$$WWW002PropertyName(objField) // SR15466
	set pstrField = strField                        // SR15466
	
	//set idIndexKey=$$$WWW002IndexKey(objField)    // SR14709
 	
 	if pintInputType="%Date" {
	 	set pstrField = "$piece("_pstrField_",""."",1)"
 	}
 	
	if $find(",%Float,%Currency,%Integer,",","_pintInputType_",") {  //numeric fields
		set pstrField = "+"_pstrField
	
	} elseif ('pstrSafeMode) || $find(",%Date, %TimeStamp, %Time, %String,",","_pintInputType_",") {
		set strPlus=""
		if $find(",%Date, %TimeStamp,%Time,",","_pintInputType_",") { 
			if '$find(pstrValue,",") set strPlus = "+"
		}
		set pstrField = "%upper("_strPlus_pstrField_")"
	}

	if pblnOrderBy {	//Truncate if Order By
		if pintInputType = "%String" {
			set pstrField = "$extract("_pstrField_",1,50)"
		}
	}
	
 
	if pintInputType = "%String" {
 		set pstrField = $$ToRemoveAccentMark^COMViewSQL(pstrField)
	}
 
	
	if (pstrComp'="") {
		if (pintInputType = "%Date") && ($translate(pstrValue," ")'="") { //Date
			set pstrValue = $$ConvertDate^COMViewSQL(pstrValue)
 
		} elseif (pintInputType = "%Time") && ($translate(pstrValue," ")'="") { //Date
			set pstrValue = $$ConvertTime(pstrValue)
			
		} elseif pintInputType = "%Boolean" {  //Boolean
			if (pstrValue=2) {
				set pstrComp  = $$$EnumCOMVIEWCOMPARATORNotEquals
				set pstrValue = "2 or "_pstrField_" is null) " ;BR014967
				set pstrField = "("_pstrField
			
			} elseif (pstrValue&&(pstrComp=$$$EnumCOMVIEWCOMPARATOREquals))||('pstrValue&&(pstrComp=$$$EnumCOMVIEWCOMPARATORNotEquals)) {
				set pstrComp  = $$$EnumCOMVIEWCOMPARATOREquals
				set pstrValue = 1
			
			} else {
				set pstrComp  = $$$EnumCOMVIEWCOMPARATORNotEquals
				set pstrValue = "1 or "_pstrField_" is null) "
				set pstrField = "("_pstrField
			}
			
		} elseif (pintInputType="%Date") || (pintInputType="%TimeStamp") {	//Timestamp
			set pstrValue=""""_$$ConvertDate^COMViewSQL(pstrValue)_""""
			if pstrValue = """""" {
				set pstrField = "("_pstrField
				set pstrValue = pstrValue_" or "_strField_" is null)"
			}
			
		} elseif (pintInputType="%Time") {	//Time
			set pstrValue=""""_$$ConvertTime(pstrValue)_""""
			if pstrValue = """""" {
				set pstrField = "("_pstrField
				set pstrValue = pstrValue_" or "_strField_" is null)"
			}
			
		} else {
			if $translate(pstrValue," ")="" {
				if pstrComp=$$$EnumCOMVIEWCOMPARATOREquals {
					set pstrComp  = $$$EnumCOMVIEWCOMPARATORWithin
					set pstrValue = """"","" "") or "_pstrField_" is null "
					set pstrField = "("_pstrField		
				
				} elseif pstrComp=$$$EnumCOMVIEWCOMPARATORNotEquals {
					set pstrValue = """"" and "_pstrField_" != "" "" "
				
				} else {
					set pstrValue = $$$AddQuotes(pstrValue)
				}
				
			} else {
				//if (idIndexKey'="")&&('pstrSafeMode)&&(pstrComp'=$$$EnumCOMVIEWCOMPARATORLike) set pstrValue=$$Index^COMUtils(pstrValue) // SR14709
				
				//set idInputAs=$$$WWW122ChangeInputAs(objField) // SR14709
				
				//if (idInputAs=1)||(strKeyCode="D") {  ;BIG // SR14709
				//	set pstrValue=$zcvt(pstrValue,"U")
				//} elseif idInputAs=2 {  ;small // SR14709
				//	set pstrValue=$zcvt(pstrValue,"L")
				//} elseif idInputAs=6 {  ;BIGNOSPACE // SR14709
				//	set pstrValue=$translate($zcvt(pstrValue,"U")," ","")
				//}
				
				if $find(pstrValue,"""") set pstrValue=$$DoubleQuotes^COMUtilStr(pstrValue)
				set pstrValue = $$$AddQuotes(pstrValue)
				if pstrComp = $$$EnumCOMVIEWCOMPARATORNotEquals {
					set pstrValue = pstrValue_" or "_pstrField_" is null) "
					set pstrField = "("_pstrField	
				}
			}
		}
	}
	
	quit
	
	
ConvertTime(pstrTime="")
	;----------------------------------------------------------------------------
	; Convert a Time
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 06-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
	;-------------------------------------------------------------------------------
	set pstrTime = $zcvt(pstrTime,"U")
	if '$find(pstrTime,"&") set pstrTime = $$GetInternal^WWWTR(7,pstrTime)
	
	quit pstrTime
 
 
CreateCombo1(pidClass,pidFilter,pidRelClass)
    ;-------------------------------------------------------------------------------
    ; Creates a combo box on the screen if less than 200 entries for a relation
    ; otherwise puts in a text box with search button to drill down further.
    ;
    ; Returns:
    ;
    ; History:
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ;-------------------------------------------------------------------------------
   	// new blnDataAccess
	//set blnDataAccess=$$$YES
	//set objFilter=$get(^CacheTempView(YUSER,"Filter",pidFilter))
	
	do CreateText^COMViewFilterControl(pidClass,pidFilter)
	do CreateSearchButton(pidClass,pidFilter)
 
	quit
 
CreateCombo(pidClass,pidFilter,pidRelClass)
    ;-------------------------------------------------------------------------------
    ; Creates a combo box on the screen if less than 200 entries for a relation
    ; otherwise puts in a text box with search button to drill down further.
    ;
    ; Returns:
    ;
    ; History:
    ; 20-Jul-2010	shobby	SR17396: document.getElementById
    ; 17-Sep-2009	shobby	SR16708: Removed changes from 16521
	; 06-May-2009	PPP		SR16521: Barcodes scanned to get Item 
	; 						1. Create TextBox with OnBlur event
	; 						(If relatio class = alINV.dItem then get check associated barcodes for Items)
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ;-------------------------------------------------------------------------------
    new blnData,blnDataAccess,blnInvalid,blnUseEventBlur,idClass,idField,idRef,idSearchField
    new intCount,intMaxCount,Loop,objFilter,objProperty,objRef,objResult
    new strAddField,strDefault,strDisplay,strGlobal,strJS,strName,strPiece,strQuery
    new strRef,strRelation,strRelationItems,strSortCodes,strSQL
    
	set blnDataAccess = $$$YES
 
	set objFilter = $get(^CacheTempView(YUSER,"Filter",pidFilter))
	set idField   = $$$COMViewFilterField(objFilter)
	
	//set idCurField = $piece(idField,"->",1)
	set idSearchField = $piece(idField,"->",$length(idField,"->"))
	//set objProperty = ##class(%Library.PropertyDefinition).%OpenId(pidClass_":"_idCurField)
	//set idClass     = objProperty.Type
	
	set idClass = $$GetClass^COMViewObject(pidClass,idField)
	
	set objProperty = ##class(%Library.PropertyDefinition).%OpenId(idClass_":"_idSearchField)
	if objProperty.Type="" {
		set idSearchField = "ID"
	}
	do objProperty.%Close()
 
	set intCount=0
	
	set strJS = ""
	set strJS = strJS_"var s = document.createElement('select');"
	set strJS = strJS_"s.attachEvent('onchange',ControlChanged);"
	set strJS = strJS_"s.id='value"_pidFilter_"';"
	if $$$COMViewFilterComparator(objFilter)=$$$EnumCOMVIEWCOMPARATORWithin {
		set strJS = strJS_"s.multiple=true;"
		set strJS = strJS_"s.size='5';"
	}
	set strJS = strJS_"var o = document.createElement('option');"
	set strJS = strJS_"o.value='';"
	set strJS = strJS_"s.appendChild(o);"
	
	set intMaxCount = $$GetMaxCount(idClass,idSearchField)
	
	//if (intMaxCount<=$$$DefaultRecords)&&($length(strJS)<=32000) {
 
	if (intMaxCount<=$$$DefaultRecords) {
		set objResult = ##class(%Library.ResultSet).%New()
		
	//	do ConvertField^COMViewSQL(idClass,.idSearchField)
		set strAddField = $$GetRelation^COMViewObject(idClass,idSearchField)		//alLOC.dStorage,Code
		if strAddField '= "" {
		//	set strAddField = idFirstField_"->"_strAddField							//Storage->Remarks
		//	do ConvertField(pidClass,.strAddField,"","",.intType,pstrSafeMode)		//%upper(alSOH.dBundleStock.Storage->Remarks)
			set idSearchField = idSearchField _" || ' - ' || COALESCE("_ strAddField_","""")"						//%upper(alSOH.dBundleStock.Storage->Code) || '-' || %upper(alSOH.dBundleStock.Storage->Remarks)
		}
		set strSQL = "SELECT DISTINCT "_idSearchField_" FROM "_idClass
		
		do objResult.Prepare(strSQL)
		do objResult.Execute()
	
		for {
			set blnData = objResult.Next()
			quit:'blnData
			
			set strName = objResult.GetColumnName(1)
			set idRef   = objResult.Data(strName)
			set strRef  = idRef
 			set idRef   = $piece(strRef," - ",1)
 			
			continue:idRef=""
			
			if $$$COMViewFilterDataAccess(objFilter)'="" {
				xecute "set blnDataAccess="_$$$COMViewFilterDataAccess(objFilter)
			} else {
				set blnDataAccess=$$$YES
			}
			continue:'blnDataAccess
	
			set strJS = strJS_"var o = document.createElement('option');"
			set strJS = strJS_"o.value='"_$zcvt(idRef,"o","JS")_"';"
	
			if $find(","_$$$COMViewFilterValue1(objFilter)_",",","_idRef_",") {
				set strJS = strJS_"o.selected=true;"
			}
			set strJS = strJS_"o.innerHTML='"_$zcvt($extract(strRef,1,40),"o","JS")_"';"  ;BR014896
		
			//if ((idClass="WWW101")||(idClass="INPARA"))&&($$$WWW101ColorCode(objRef)'="") {
			//	set strJS=strJS_"o.style.backgroundColor='"_$$$Colour($$$WWW101ColorCode(objRef))_"';"
			//}
		
			set strJS = strJS_"s.appendChild(o);"
			set intCount = intCount+1
			
			quit:intCount>$$$DefaultRecords
			quit:$length(strJS)>32000
		}
	
		kill objResult
 
		set strDefault=""		//	$$DefaultValue(idClass,$$$WWW002RelationalPrimaryKeys(pobjFld),1,.strDisplay)
 
		/*
		if strDefault'="" {
			set strJS=strJS_"var o = document.createElement('option');"
			set strJS=strJS_"o.value='"_$zcvt(strDefault,"o","JS")_"';"
			if $find(","_$$$COMViewFilterValue1(objFilter)_",",","_strDefault_",") {
				set strJS=strJS_"o.selected='true';"
			}
			set strJS=strJS_"o.innerHTML='"_$zcvt(strDisplay,"o","JS")_"';"
			set strJS=strJS_"s.appendChild(o);"
		}
		*/
		
		write strJS
		;SR17396 write "ctrl"_pidFilter_"_3.appendChild(s);"
		write "document.getElementById('ctrl"_pidFilter_"_3').appendChild(s);"						;SR17396 
		write "s.initialValue='"_$$$COMViewFilterValue1(objFilter)_"';"
 
	} else {
		;too many items to successfully fit into a combo. create seperate control.
		//SR16521
		;set blnUseEventBlur = $$IsSearchClass^COMQuickSearch(pidClass,pidRelClass)  ;16708
 
		;do CreateText^COMViewFilterControl(pidClass,pidFilter,blnUseEventBlur)		 ;16708
		do CreateText^COMViewFilterControl(pidClass,pidFilter)						 ;16708
		do CreateSearchButton(pidClass,pidFilter)
	}
	
	quit
	
	
CreateSearchButton(pidClass,pidFilter,blnNewNumber=1) 
    ;-------------------------------------------------------------------------------
    ; Creates a search button to go next to the text box.
    ; 
    ; Note. As ^CacheTempView is subscripted by YUSER, a new YUSER number
    ; is required when opening the sub form. 
    ; 
    ; History:
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ;-------------------------------------------------------------------------------
	new idField,idRelation,idRelationPartial,idRelClass,loopId,objField,objFilter,strLink
	
	set objFilter  = $get(^CacheTempView(YUSER,"Filter",pidFilter))
	set idField    = $$$COMViewFilterField(objFilter)
	set idRelClass = $$GetClass^COMViewObject(pidClass,idField)
	
	set strLink = YAKTION_"EP=WWWFORM"
	set strLink = strLink_"&YFORM=WWWPARA"
	set strLink = strLink_"&YLFFORM=4"
	set strLink = strLink_"&YTRAKT=1"
	set strLink = strLink_"&YBACK="
	set strLink = strLink_"&YUCI="_YUCI  ;NAMESPACE
	set strLink = strLink_"&YBED="_YBED  ;BEDIENER
	set strLink = strLink_"&YM="_YM  ;MANDANT
	
	if blnNewNumber=1 {
		set strLink = strLink_"&YUSER="_$$GetChildUser^WWWUSER(YUSER)  ;SR11904
	} else {
		set strLink = strLink_"&YUSER="_YUSER  ;USER
	}
	
	set strLink = strLink_"&YLFDAT=Y"_idRelClass_"D0"
 	set strLink = strLink _ "&YFKEY=0"
	set strLink = strLink_"&YSEC="
 
	&js<
	var obj = document.createElement('img');
	obj.src=FilePath+'search1.gif';
	obj.className='coolButton';
	obj.style.verticalAlign='text-bottom';
	obj.attachEvent('onclick',#("SubSearch"_pidFilter)#);
	ctrl#(pidFilter)#_3.appendChild(obj);
	
	function #("SubSearch"_pidFilter)#() {
		var field=document.getElementById('#("value"_pidFilter)#'),
		    result = window.showModalDialog('#(strLink)#'+(new Date()).getSeconds(),'Parameter','DialogWidth: 570px; DialogHeight: 530px; resizable: yes; scroll: no; help:no; status: no;');
		if (result != null) {
			field.value=result;
		}
		field.fireEvent('onkeyup');
	}
	
	>
	quit
 
 
GetMaxCount(pidClass, pidField)
    ;-------------------------------------------------------------------------------
    ; Gets the Max No of Records available
    ; 
    ; 
    ; History:
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ;-------------------------------------------------------------------------------
	new intMax,objResult,sc,strSQL
		
	set objResult = ##class(%Library.ResultSet).%New()
	set strSQL    = "select COUNT(DISTINCT "_pidField_") as COUNT from "_pidClass
 	
	do objResult.Prepare(strSQL)
	do objResult.Execute()
 
	set intMax = 0 
	while (objResult.Next(.sc)) {
		set intMax = objResult.Data("COUNT")
	}
	
	quit intMax
	
 
GetClassOld(pidClass,pidField)
	/*
	new idClass,idField,objProperty
	
	if $length(pidField,"->")=1 quit pidClass
	
	set idClass = pidClass
	set idField = $piece(pidField,"->")
	
	set objProperty = ##class(%Library.PropertyDefinition).%OpenId(idClass_":"_idField)
	if objProperty'=$$$NULLOREF {
		set idClass = objProperty.Type
		do objProperty.%Close()
	}
	*/
	quit pidClass
 
 
GetClass(pidClassMain,pidFieldMain)
    ;-------------------------------------------------------------------------------
    ; Gets the actual  class needed to 
    ; 1. Add descriptions/codes to the main field
    ; 2. Add filters
    ; 
    ; 
    ; History:
    ; 25-Sep-2008	PP		SR15960:Relations not curretly displayed when DataTypes were changed 
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ;-------------------------------------------------------------------------------
	new idClass,idField,idRemFields,objProperty,strPackage,strType
	
	quit:pidFieldMain="" pidClassMain
	
	set idClass = pidClassMain
	set idField = $piece(pidFieldMain,"->")
 
	set objProperty = ##class(%Library.PropertyDefinition).%OpenId(idClass_":"_idField)
	if objProperty'=$$$NULLOREF {
		set strType=objProperty.Type
		if (strType'="") && ($extract(strType,1,8)'="alSYS.dt") {
			set strPackage=$piece(idClass,".",1,$length(idClass,".")-1)
			set idClass = strType
			if $length(idClass,".")=1 {
				set idClass = strPackage_"."_idClass
			}
		}
		do objProperty.%Close()
	}
 
 
	set idRemFields=$piece(pidFieldMain,"->",2,$length(pidFieldMain,"->"))
	if idRemFields'="" {
		set idClass=$$GetClass(idClass,idRemFields)
	}
	
	quit idClass
	
 
GetRelation(pidFieldClass,pstrOrigField)		//alLOC.dStorage,Code
    ;-------------------------------------------------------------------------------
    ; Gets the actual relation of the class
    ; need to add descriptions/codes to the main field
    ; 
    ; History:
    ; 25-Sep-2008	PP		SR15960:Relations not curretly displayed when DataTypes were changed 
    ; 09-Sep-2008	PP		SR15866:Update COMView to Objects
    ;-------------------------------------------------------------------------------
	new strAddField
	
	set strAddField = ""
	set pstrOrigField = $zcvt(pstrOrigField,"U")
	
	if pidFieldClass = "alINV.dItem" {
		set:pstrOrigField="ITEMID" strAddField = "SearchName"
	}
 
	if pidFieldClass = "alLOC.dLocation" {
		set:pstrOrigField="CODE" strAddField = "Name"
	}
 
	if pidFieldClass = "alLOC.dStorage" {
		set:pstrOrigField="CODE" strAddField = "Remarks"
	}
	
 
	if pidFieldClass = "alSOH.dTransactionType" {
		set:pstrOrigField="TXNID" strAddField = "TransactionType"
	}
 
	if pidFieldClass = "alSOH.dTransactionType" {
		set:pstrOrigField="TXTYPE" strAddField = "TransactionType"
	}
	
	quit strAddField


IsClassSerial(pidClass)
	;-------------------------------------------------------------------------------
	; Find Out if the class is a Serial Class
	;
	; Inputs: Class
	;
	; Returns: Boolean
	;
	; History:
	; 11-Nov-2009	PP		SR17023: Created
	;-------------------------------------------------------------------------------
	new blnSerial
	new objClass
	
	set blnSerial = $$$NO
	
	set objClass = ##class(%Library.ClassDefinition).%OpenId(pidClass)
	if objClass'=$$$NULLOREF {
		set blnSerial = (objClass.Super [ "%SerialObject" )
	}
	
	quit blnSerial
]]></Routine>
</Export>