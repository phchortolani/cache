<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="MEDPrescriptionSol" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
MEDPrescriptionSol
#include COMConst
#include INConst
#include COMGridEdit31
#include MEDConst

OnBeforeFormConstruction(&pstrYMFELD,pstrYFELD,pstrPARA)
	;-------------------------------------------------------------------------------
	; Get Manuals for patient
	; 
	; History :
	; 30-May-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
#dim objLine As %String
#dim intSol,idStatus As %Integer
	new objLine,intSol,idStatus,idPatient,objPrescription

	if $get(^CacheTempMedRx(YUSER,"SOL-Reload"))'="" {
		set YKEY=$get(^CacheTempMedRx(YUSER,"SOL-Reload"))
		kill ^CacheTempMedRx(YUSER,"SOL-Reload")
	}
	set YKEY=$translate(YKEY,"""")
	if $piece(YKEY,",",2)'="" {  ; Direct line link
		set pstrPARA=$piece(YKEY,",",2)
		set objLine=$get(^MEDPrescriptionLine(YM,$piece(YKEY,",",1),pstrPARA,1))
		set ^CacheTempMedRx(YUSER,"SOL-CUR")=$$Solution^MEDPrescriptionSolLine(,$$$MEDPrescriptionLineSolution(objLine))
	} else {
		set ^CacheTempMedRx(YUSER,"SOL-CUR")=$$Solution^MEDPrescriptionSolLine($$$YES)
	}


	quit
	
OnBeforeButtonLine(&pstrYMFELD,pstrYFELD,pstrPARA)
	;-------------------------------------------------------------------------------
	; Get Manuals for patient
	; 
	; History :
	; 08-Apr-2013	SCR		HEVA-875: Flag Read Only for core rules
	; 26-Feb-2013	SCR		HEVA-866: Add PRN Field
	; 15-Jan-2013	SCR		HEVA-751: Use Solution Status function
	; 10-Jan-2013	SCR		HEVA-754: Infusion Unit not being showed in the Solution Prescription form
	; 29-Nov-2012	SCR		SR18214: Added Administer only & Corrected Infusion pump
	; 08-Nov-2012	SCR		SR18188: Corrected From Date fomatting
	; 05-Nov-2012	SCR		SR18141: Pass in YKEY to PatientData	
	; 18-Oct-2012	SCR		SR18142: Default Dates and Duration
	; 18-Oct-2012	SCR		SR18139: Default frequency
	; 11-Oct-2012	SCR		SR18143: Dont default values from previous line
	; 30-May-2012	SCR		SR17993: Moved code to Form Construction
	; 23-May-2012	SCR		SR17993: set solution when direct line link is uded ie YKEY=PM234,3
	; 09-May-2012	SCR		SR18993: Get 1st Line of the of the Solution if no line is provided
	; 26-Apr-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
#dim objLine As %String
#dim intSol,idStatus As %Integer
	new objLine,intSol,idStatus,idPatient,objPrescription,idPrescription,blnNewRx,objSetup,idFreq
	new idLineStatus
	set objSetup=$get(^MEDPrescriptionSetup(0,YM,1)) ; HEVA-754
	if $get(pstrPARA)["GridLine," {
		set ^CacheTemp(YUSER,"GridLine") = $piece(pstrPARA,",",2)
		set pstrPARA=""
	}

	set idPrescription=$piece(YKEY,",",1)
	if idPrescription'="" {
		set objPrescription=$get(^MEDPrescription(YM,idPrescription,1))
		set idPatient= $$$MEDPrescriptionPatientID(objPrescription)
	} elseif $get(YPARA)'="" {
		set idPatient=YPARA
		if idPatient[",New" {
			set blnNewRx=$$$YES
			set idPatient=$piece(idPatient,",New",1)
			set YPARA=idPatient
		} 
	}
	
	set $$$MEDPrescriptionPatientID(pstrYFELD)=idPatient
	if $get(pstrPARA)="" {
		set intSol=$$Solution^MEDPrescriptionSolLine()
		for {
			set pstrPARA=$order(^MEDPrescriptionLine(YM,$piece(YKEY,",",1),pstrPARA))
			quit:pstrPARA=""
			set objLine=$get(^MEDPrescriptionLine(YM,$piece(YKEY,",",1),pstrPARA,1))
			quit:$$$MEDPrescriptionLineSolution(objLine)=intSol
		}
	}
 	if $get(pstrPARA)="" {
		;set pstrPARA=$order(^MEDPrescriptionLine(YM,$piece(YKEY,",",1),"")) ; SR18143
	}
	do PatientData^MEDPrescriptionHosp(.pstrYMFELD,YKEY)
	;do PatientData^MEDPrescriptionHosp(.pstrYMFELD,pstrYFELD)
	if $get(pstrPARA)'="" {
		set objLine=$get(^MEDPrescriptionLine(YM,$piece(YKEY,",",1),pstrPARA,1))
		
		set $piece(pstrYMFELD,Y,17) = $$$MEDPrescriptionLineFromDate(objLine)
		set $piece(pstrYMFELD,Y,18) = $$$MEDPrescriptionLineFromTime(objLine)
		set $piece(pstrYMFELD,Y,19) = $$$MEDPrescriptionLineDuration(objLine)
		set $piece(pstrYMFELD,Y,20) = $$$MEDPrescriptionLineToDate(objLine)
		set $piece(pstrYMFELD,Y,21) = $$$MEDPrescriptionLineToTime(objLine)
		set $piece(pstrYMFELD,Y,22) = $$$MEDPrescriptionLineFrequency(objLine)
		set $piece(pstrYMFELD,Y,23) = $$$MEDPrescriptionLineRouteOfAdministration(objLine)
		set $piece(pstrYMFELD,Y,24) = $$$MEDPrescriptionLineInfusionSpeed(objLine)
		set $piece(pstrYMFELD,Y,25) = $$$MEDPrescriptionLineInfusionUOM(objLine)
		set $piece(pstrYMFELD,Y,26) = $$$MEDPrescriptionLineContinuous(objLine)
		set $piece(pstrYMFELD,Y,27) = $$$MEDPrescriptionLineInfusionTime(objLine)
		set $piece(pstrYMFELD,Y,28) = $$$MEDPrescriptionLineIfNeeded(objLine)
		set $piece(pstrYMFELD,Y,29) = $$$MEDPrescriptionLineUrgent(objLine)
		set $piece(pstrYMFELD,Y,30) = $$$MEDPrescriptionLineDiluentQty(objLine)
		set $piece(pstrYMFELD,Y,32) = $$$MEDPrescriptionLineInfusionPump(objLine) ; SR18214
		;set $piece(pstrYMFELD,Y,32) = $$$MEDPrescriptionLineInfusionUOM(objLine)
		set $piece(pstrYMFELD,Y,33) = $$$MEDPrescriptionLineRemarks(objLine)
		if $$$MEDPrescriptionLineDiluentQty(objLine) && $$$MEDPrescriptionLineInfusionTime(objLine) {
			set $piece(pstrYMFELD,Y,31) = +$justify($$$MEDPrescriptionLineDiluentQty(objLine) / $$$MEDPrescriptionLineInfusionTime(objLine),0,2)
		}
		set $piece(pstrYMFELD,Y,34) = $$UpdateVolume^MEDPrescriptionSolLine($$$YES,$$$YES)
		set $piece(pstrYMFELD,Y,35) = $$$MEDPrescriptionLineAdministeronly(objLine) ; SR18214
		set $piece(pstrYMFELD,Y,36) = $$$MEDPrescriptionLinePRN(objLine) ; HEVA-866

	}
	if $piece(pstrYMFELD,Y,17)="" set $piece(pstrYMFELD,Y,17)=+$h	; SR18188
	;if $piece(pstrYMFELD,Y,17)="" set $piece(pstrYMFELD,Y,17)="."
	if $piece(pstrYMFELD,Y,18)="" set $piece(pstrYMFELD,Y,18)=$piece($h,",",2)
	if $piece(pstrYMFELD,Y,19)="" set $piece(pstrYMFELD,Y,19)=1		; SR18142
	if $piece(pstrYMFELD,Y,20)="" set $piece(pstrYMFELD,Y,20)=$h+1	; SR18142
	;if $piece(pstrYMFELD,Y,20)="" set $piece(pstrYMFELD,Y,20)="."
	if $piece(pstrYMFELD,Y,21)="" set $piece(pstrYMFELD,Y,21)=$piece($h,",",2) ; 
	if $piece(pstrYMFELD,Y,25)="" set $piece(pstrYMFELD,Y,25)= $$$MEDPrescriptionSetupDefaultInfusionUnit(objSetup) ; HEVA-754
	;if $piece(pstrYMFELD,Y,25)="" set $piece(pstrYMFELD,Y,25)="1"  ; Drops per min
	
	; SR18139 vvvv
	if $piece(pstrYMFELD,Y,22)="" {
		;set objSetup=$get(^MEDPrescriptionSetup(0,YM,1)) 
		set idFreq	= $$$MEDPrescriptionSetupDefaultFrequency(objSetup)
		set $piece(pstrYMFELD,Y,22)=idFreq  
	}
	; SR18139 ^^^^

	set $piece(YMFELD,Y,13) = $piece(YKEY,",",1)
	
	set idStatus= +$$$MEDPrescriptionStatus($get(objPrescription))
	set idLineStatus= +$$SolutionStatus^MEDPrescriptionAutoClose(idPrescription,intSol) ; HEVA-751
	;set idLineStatus= +$$$MEDPrescriptionLineStatus($get(objLine))
	
	set $piece(YMFELD,Y,11) = $$GetDescription^WWWStatus("MEDPrescription",idStatus,$get(SPRACHE))
	set $piece(YMFELD,Y,14) = $$GetDescription^WWWStatus("MEDPrescription",idLineStatus,$get(SPRACHE))



	set $piece(YMFELD,Y,37) = "" ; HEVA-875
	if $piece(YKEY,",")'="" {
		if '$$Editable^MEDPrescription($piece(YKEY,","),1) {
			set $$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly
			set $piece(YMFELD,Y,37) = "x" ; HEVA-875
		}
	}

	quit

StartForm(pKey)
	;-------------------------------------------------------------------------------
	; Start the form based prescription number in the key
	; Called By : Form MEDPrescriptionHospLine
	; 
	; History :
	; 29-Mar-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
	do Solution^MEDPrescriptionSolLine(1)
	do GoToForm^COMUtilForm("MEDPrescriptionSol",$piece(pKey,",",1))
	quit
	
OnAfterDataFields(pidPres,pobjPres)
	;-------------------------------------------------------------------------------
	; 
	; History :
	; 16-Jan-2012	shobby	HEVA-762: Included Javascript call
	;-------------------------------------------------------------------------------
	do SetupJS^MEDDispenseJS(YVOR) ;HEVA-762
	quit 1


OnAfterDataFields1(pidPres,pobjPres)
	;-------------------------------------------------------------------------------
	; Code to run when called by the AfterDataField event on the @netManager form.
	;
	; History:
	; 13-Mar-2013	shobby	HEVA-883: Width of side panel
	; 13-Nov-2012	shobby	SR18183: Improved position of side panel.
	; 16-Jul-2012	SCR		SR17993: Added Java Script (From Dispense)
	; 29-Mar-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
	new idPatient
	set idPatient= $$$MEDPrescriptionPatientID(pobjPres)
	
	;SR18183 write "<DIV style='border:1px solid black; position:absolute; top:91px; left:720px; width:220px; height:500px;'>"
	write "<DIV id='MEDDD2' style='float:left; position:relative; top:42px;'>"
	write "<DIV style='border:1px ; top:75px; width:100%; '>"  ;HEVA-883
	write "<DIV style='border:1px solid black; position:relative; top:0px; left:0px; width:100%; height:auto;'>"
	do ShowDrugs^MEDPrescriptionHospTable(idPatient)
 	write "</DIV>"
	write "</DIV>"
	write "</DIV>"
	
	
	quit
	
	
LoadGrid(pYKEY,pobjPres)
	;-------------------------------------------------------------------------------
	; Code for Grid Edit , depending on Prescription Type Hide / columns that are not 
	; required.
	;
	; Returns:
	;
	; History:
	; 29-Mar-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
	new enumPresType
	
	set enumPresType = $$$MEDPrescriptionPrescriptionType(pobjPres)
	;set ^CacheTemp(YUSER,"Grid","MaxWidth")=500

	
	quit

OnBeforeSave(pstrYMFELD)
	;-------------------------------------------------------------------------------
	; Prepare manual field for adding to the line
	; required.
	;
	; Returns:
	;
	; History:
	; 20-Dec-2012	shobby	HEVA-713: Include time in from date/to date validation
	; 05-Nov-2012	SCR		SR18188: Default Date & Time
	; 30-Oct-2012	SCR		SR18142: Date validation
	; 04-Jun-2012	SCR		SR17993: Time Validation
	; 26-Apr-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
#dim arrLines As %ArrayOfDataTypes
#dim idLine,objLine,strStatus As %String
#dim intSol As %Integer
	new arrLines,idLine,objLine,intSol,strStatus
	
	; FIXME handle status
	do GetGridContents^COMGridEdit31G(.arrLines,"MEDPrescriptionSolLine")
	; SR18188 vvvv
	set:'$piece(pstrYMFELD,Y,17) $piece(pstrYMFELD,Y,17)=+$h
	set:'$piece(pstrYMFELD,Y,18) $piece(pstrYMFELD,Y,18)=$piece($h,",",2)
	set:'$piece(pstrYMFELD,Y,20) $piece(pstrYMFELD,Y,20)=$piece(pstrYMFELD,Y,17)+$piece(pstrYMFELD,Y,19)
	set:'$piece(pstrYMFELD,Y,21) $piece(pstrYMFELD,Y,21)=$piece($h,",",2)
	
	; SR18188 ^^^^
	; SR18142 vvvv
	if $piece(pstrYMFELD,Y,17)<$h {
		set Q=$$$QDontSave
		do ReturnError^COMUtils("MED01299")  ;From Date can not be back dated
	}
	;HEVA-713 if $piece(pstrYMFELD,Y,20)'>$piece(pstrYMFELD,Y,17) {
	if ($piece(YMFELD,Y,20)*86400+$piece(YMFELD,Y,21))'>($piece(YMFELD,Y,17)*86400+$piece(YMFELD,Y,18)) {	;HEVA-713
		set Q=$$$QDontSave
		do ReturnError^COMUtils("MED01264")  ;'To' date must be greater than 'From' date~
	}
	; SR18142 ^^^^
	
	quit:$get(Q)=$$$QDontSave
	set idLine=""
	set intSol=$$Solution^MEDPrescriptionSolLine()
	for {
		set idLine=$order(arrLines(YKEY,idLine))
		quit:idLine=""
		set objLine=$get(arrLines(YKEY,idLine))
		
		if $$$MEDPrescriptionLineSolution(objLine)'=intSol continue
		
		do UpdateLine^MEDPrescriptionSolLine(pstrYMFELD,.objLine)

		set arrLines(YKEY,idLine) = objLine
		

	}
	do SetGridContents^COMGridEdit31G(.arrLines,1,"MEDPrescriptionSolLine")

	quit

OnBlur(pstrYMFELD)
	;-------------------------------------------------------------------------------
	; Set the Infuse Time and Qty per Hour
	; required.
	;
	; Returns:
	;
	; History:
	; 10-Jan-2013	SCR		HEVA-753: Continuous Solution Dose Calculation
	; 30-Nov-2012	SCR		SR18216: Calculate Qty if Continuous is Set
	; 24-Oct-2012	SCR		SR18138: Convert Volume
	; 10-Oct-2012	SCR		SR18138: Pass in Unit
	; 21-Jun-2012	SCR		SR17993: Update Total Volume
	; 17-May-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new intVolume,intRate,intTime,intQty,intQPH,idUnit,blnCont,objSetup,fltDays,fltHours
	
	set intVolume 	= $$UpdateVolume^MEDPrescriptionSolLine($$$YES)
	set idUnit		= $piece(pstrYMFELD,Y,25) 	;SR18138
	set intQty		= $piece(pstrYMFELD,Y,30)
	set intRate		= $piece(pstrYMFELD,Y,24)
	set blnCont		= $piece(pstrYMFELD,Y,26)	;SR18216

	; HEVA-753 vvvv
	set fltDays		= (($piece(pstrYMFELD,Y,20)*86400)+$piece(pstrYMFELD,Y,21))-(($piece(pstrYMFELD,Y,17)*86400)+($piece(pstrYMFELD,Y,18)))
	set fltDays		= fltDays/86400
	set fltHours	= fltDays*24
	do InfuseTime^MEDPrescriptionSol(intVolume,.intQty,intRate,idUnit,.intTime,.intQPH,blnCont,fltHours)
	; HEVA-753 ^^^^
	;do InfuseTime^MEDPrescriptionSol(intVolume,intQty,intRate,idUnit,.intTime,.intQPH) ; SR18138

	set %TXT(1)="" 
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M27"_"~"_intTime
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M31"_"~"_intQPH
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M34"_"~"_$$^WWWTR(0,12,intVolume) ;SR18138
	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M30"_"~"_intQty	;SR18216
	;set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M34"_"~"_intVolume
	; HEVA-753 vvvv
	if +blnCont {
		set objSetup=$get(^MEDPrescriptionSetup(0,YM,1)) 
     	set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M22"_"~"_$$$MEDPrescriptionSetupContinuousFrequency(objSetup)
	}
	
	; HEVA-753 ^^^^

	quit
	
InfuseTime(pintVolume,&pintQty,pintRate,pidUnit,&pintTime=0,&pintQPH=0,pblnCont=0,pfltHours=0)
	;-------------------------------------------------------------------------------
	; Calc the Infuse Time and Qty per Hour
	; required.
	;
	; Returns:
	; 
	; History:
	; 11-Jan-2013	SCR		HEVA-753: Use pintQty if not continuous
	; 10-Jan-2013	SCR		HEVA-753: Continuous Solution Dose Calculation
	; 30-Nov-2012	SCR		SR18216: Calculate Qty if Continuous is Set
	; 10-Oct-2012	SCR		SR18138: Use UnfuseTime data
	; 17-May-2012	SCR		SR17993: Created
	;-------------------------------------------------------------------------------
	new intTotalDrops,objInfuseTime,intPerML,intPerHour
	new blnCont,intCurQty
	; SR18216 vvvvvv
	if pblnCont {
		set intCurQty=1
	} else {
		set intCurQty=pintQty	
	}
	; SR18216 ^^^^^^
	; SR18138 vvvvvv
	if pidUnit'="" {
		set objInfuseTime=$get(^MEDInfuseTime(YM,pidUnit,1))
		set intPerML = $$$MEDInfuseTimeUnitspermL(objInfuseTime)
		set intPerHour = $$$MEDInfuseTimeUnitsperHour(objInfuseTime) 
	}
	set:'$get(intPerML) intPerML=20 	; Defualt
	set:'$get(intPerHour) intPerHour=60 ; Default
	if pblnCont {
		set intTotalDrops=pintVolume*intPerML*intCurQty 
	}
	else {
		set intTotalDrops=pintVolume*intPerML ; HEVA-753
	}
	;set intTotalDrops=pintVolume*intPerML ; HEVA-753
	;set intTotalDrops=pintVolume*intPerML*intCurQty ; SR18216
	;set intTotalDrops=pintVolume*intPerML*pintQty
	if pintRate&intTotalDrops {
		set pintTime = intTotalDrops / (pintRate*intPerHour)
	; SR18138 ^^^^^^
	;set intTotalDrops=pintVolume*20*pintQty
	;if pintRate&intTotalDrops {
	;	set pintTime = intTotalDrops / (pintRate*60)
	
		set pintQPH  = pintQty / pintTime
	}
	set pintTime = +$justify(pintTime,0,2)
	set pintQPH  = +$justify(pintQPH,0,2)
	; HEVA-753 vvvvvv
	if pblnCont && pintTime && pfltHours {
		set pintQty=pfltHours/pintTime
		set:pintQty\1'=pintQty pintQty=pintQty\1+1
	}
	; HEVA-753 ^^^^^^

	quit 
	
	
OnAfterSave(pidRx)
	;-------------------------------------------------------------------------------
	; Re-Number Lines 
	; required.
	;
	; Returns:
	;
	; History:
	; 10-Jan-2013	SCR		HEVA-753: Continuous Solution Dose Calculation
	; 17-May-2012	SCR		SR17993 Created
	;-------------------------------------------------------------------------------
	new intSol,idLine,objLine
	do ReNumber^MEDPrescriptionRenum(pidRx)
	set intSol=$get(^CacheTempMedRx(YUSER,"SOL-CUR"))
	set idLine=""
	for {
		set idLine=$order(^MEDPrescriptionLine(YM,pidRx ,idLine))
		quit:idLine=""
		set objLine=$get(^MEDPrescriptionLine(YM,pidRx,idLine,1))
		if $$$MEDPrescriptionLineSolution(objLine)=intSol {
			set $piece(pidRx,",",2)=idLine
			quit
		}
	}
	set ^CacheTempMedRx(YUSER,"SOL-Reload")=pidRx
	do UpdateAllSolutions($$$KEY1(pidRx)) ; HEVA-753
	quit

UpdateAllSolutions(pidRx)
	;-------------------------------------------------------------------------------
	; Update all Solutions for the Prescription
	; required.
	;
	; Returns:
	;
	; History:
	; 10-Jan-2013	SCR		HEVA-753: Created
	;-------------------------------------------------------------------------------
	new idLine,arrSol,intSol,objLine
	set pidRx	= $$$KEY1(pidRx)
	set idLine	= ""
	for {
		set idLine	= $order(^MEDPrescriptionLine(YM,pidRx,idLine))
		quit:idLine=""
		set objLine	= $get(^MEDPrescriptionLine(YM,pidRx,idLine,1))
		set intSol 	= $$$MEDPrescriptionLineSolution(objLine) 
		set:intSol arrSol(intSol)=""
	}
	set intSol=""
	for {
		set intSol	= $order(arrSol(intSol))
		quit:intSol=""
		do UpdateSolution(pidRx,intSol)
	}
	quit
	
UpdateSolution(pidRx,pintSol)
	;-------------------------------------------------------------------------------
	; Update Solution Infuse time and Qty for the Prescription
	; required.
	;
	; Returns:
	;
	; History:
	; 10-Jan-2013	SCR		HEVA-753: Created
	;-------------------------------------------------------------------------------
	new intSaveSol,intVolume,idLine,objLine,idUnit,intQty,intRate,blnCont,strStatus,intSol,intQPH,intTime,fltDays,fltHours
	
	; Get 1st line of the solution
	set idLine=""
	for {
		set idLine=$order(^MEDPrescriptionLine(YM,pidRx,idLine))
		quit:idLine=""
		set objLine	= $get(^MEDPrescriptionLine(YM,pidRx,idLine,1))
		set intSol 	= $$$MEDPrescriptionLineSolution(objLine)
		quit:intSol=pintSol
	}
	quit:idLine="" ; Early Exit, no line found for the solution
	

	set intSaveSol	= $$Solution^MEDPrescriptionSolLine(,pintSol) ; Save current Solution ;HEVA-799
	
	set intVolume 	= $$UpdateVolume^MEDPrescriptionSolLine($$$YES,$$$YES,pidRx) 
	
	set idUnit		= $$$MEDPrescriptionLineInfusionUOM(objLine)
	set intQty		= $$$MEDPrescriptionLineDiluentQty(objLine)
	set intRate		= $$$MEDPrescriptionLineInfusionSpeed(objLine)
	set blnCont		= $$$MEDPrescriptionLineContinuous(objLine)

	set fltDays 	= (($$$MEDPrescriptionLineToDate(objLine)*86400)+$$$MEDPrescriptionLineToTime(objLine))-(($$$MEDPrescriptionLineFromDate(objLine)*86400)+($$$MEDPrescriptionLineFromTime(objLine))) ;HEVA-713
	set fltDays 	= fltDays/86400
	set fltHours	= fltDays*24
	do InfuseTime^MEDPrescriptionSol(intVolume,.intQty,intRate,idUnit,.intTime,.intQPH,blnCont,fltHours)

	set idLine=""
	for {
		set idLine=$order(^MEDPrescriptionLine(YM,pidRx,idLine))
		quit:idLine=""
		set objLine	= $get(^MEDPrescriptionLine(YM,pidRx,idLine,1))
		set intSol 	= $$$MEDPrescriptionLineSolution(objLine)
		if intSol=pintSol {
			set $$$MEDPrescriptionLineInfusionTime(objLine)			= intTime
			set $$$MEDPrescriptionLineDiluentQty(objLine)			= intQty
			set $$$MEDPrescriptionLineDoseTotalQuantity(objLine)	= $$DoseTotal^MEDPrescriptionLine(objLine)
			set strStatus = $$$Save("MEDPrescriptionLine",pidRx_","_idLine,objLine,$$$YES)
		}
	}
	
	do Solution^MEDPrescriptionSolLine(,intSaveSol) ; Restore Current Solution ;HEVA-799
	quit

OnAfterButtonLine(YFELD) ;SR18020
	do Display^MEDPatientDetails($$$MEDPrescriptionPatientID(YFELD))
	quit
]]></Routine>
</Export>