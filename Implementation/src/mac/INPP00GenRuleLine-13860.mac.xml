<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPP00GenRuleLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPP00GenRuleLine
	
#include INConst
#include COMSYS
#include COMConst
	
OnAfterPrimaryKey(&YFELD)
	new YFELDCONTAINER
	quit
	;set YFELDCONTAINER = $$$GRIDYFELDContainer
	;if $$$INPP00GenRuleStatus(YFELDCONTAINER)'>$$$EnumCOMSYSSTATUSGenerated {
	;	set $$$INPP00GenRuleLinePriceTypePolicy(YFELD)=""
	;}
	;quit
 
Validate(pidRuleHeader)
	;-------------------------------------------------------------------------------
	; Validate before processing.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 25-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new strStatus,idLine,objINPP00GenRuleLine
	new idLocn,idCategory,idGroup,idItem,idxRuleHeader
	
	set strStatus = $$$OK

	set idxRuleHeader = $$$Index(pidRuleHeader)
	set idLocn = ""
	for {
		set idLocn = $order(^INPP00GenRuleLines(YM,1,idxRuleHeader,idLocn))
		quit:idLocn=""
		
		set idCategory = ""
		for {
			set idCategory = $order(^INPP00GenRuleLines(YM,1,idxRuleHeader,idLocn,idCategory))
			quit:idCategory=""
			
			set idGroup=""
			for {
				set idGroup = $order(^INPP00GenRuleLines(YM,1,idxRuleHeader,idLocn,idCategory,idGroup))
				quit:idGroup=""
				
				set idItem=""
				for {
					set idItem = $order(^INPP00GenRuleLines(YM,1,idxRuleHeader,idLocn,idCategory,idGroup,idItem))
					quit:idItem=""
					
					if '$data(^INPP00GenRuleLines(YM,1,idxRuleHeader,idLocn,idCategory,idGroup,idItem," ")) &&
					   '$data(^INPP00GenRuleLines(YM,1,pidRuleHeader,idLocn,idCategory,idGroup,idItem,"0"))    {
						
						set strStatus = $$$MakeStatus("IN01089",idLocn,idCategory,idGroup,idItem)
					}   ; "Must have a default rule for Location='%1', Item Group='%2', Price Category='%3' and Item='%4'.  This defaul rule must have an empty value in the 'Cost Range' field."
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
			quit:$$$ISERR(strStatus)
		}
		quit:$$$ISERR(strStatus)
	}
	quit strStatus
	
	
OnBeforeSave(YKEY,&YFELD)
	;-------------------------------------------------------------------------------
	; Entry point for OnBeforeSave
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 25-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new objINPP00GenRuleLine
	
	if $$$INPP00GenRuleLinePrice(YFELD)="" {
		set $$$INPP00GenRuleLineUser1(YFELD)=""
	} else {
		set $$$INPP00GenRuleLineUser1(YFELD)=YBED
	}
	quit $$$OK
	
	
GetPriceTypePolicyObj(&YFELD)
	;-------------------------------------------------------------------------------
	; Get the 'Price Type Policy' for this Item/(Item,Location) then display it as the default.
	;
	; Inputs: YFELD 	(byRef)	INPP00GenRuleLine object
	;
	; Returns:
	;
	; History:
	; 24-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idItem,idLocn,idPriceTypePolicy,objINARTLOCPAR
	
	set idPriceTypePolicy = ""
	set idItem            = $$$INPP00GenRuleLineItem(YFELD)
	set idLocn            = $$$INPP00GenRuleLineLocation(YFELD)
	set idPriceTypePolicy = $$$INPP00GenRuleLinePriceTypePolicy(YFELD)
	if idPriceTypePolicy="" set idPriceTypePolicy = $$GetPriceTypePolicy(idItem,idLocn)
	quit idPriceTypePolicy
	
	
GetPriceTypePolicy(pidItem="",pidLocn="")
	;-------------------------------------------------------------------------------
	; Get the 'Price Type Policy' for this Item/(Item,Location) then display it as the default.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 11-Nov-2009	GRF		SR16511: new variable
	; 24-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idPriceTypePolicy,objINARTLOCPAR
	
	set idPriceTypePolicy = ""
	if (pidItem'="") {
		if (pidLocn'="") {
			set objINARTLOCPAR = $get(^INARTLOCPAR(YM,pidItem,pidLocn,1))
			if objINARTLOCPAR'="" {
				;set idPriceTypePolicy = $$$INARTLOCPARPriceTypePolicy(objINARTLOCPAR)
			}
		}
		if idPriceTypePolicy="" {
			;set idPriceTypePolicy = $$$INARTPriceTypePolicy($get(^INART(YM,pidItem,1)))
		}
	}
	quit idPriceTypePolicy
	
	
GetFixedPriceObj(&YFELD)
	;-------------------------------------------------------------------------------
	; If a Fixed price is defined for this Item/(Item,Location) then display it as the default.
	;
	; Inputs: YFELD 	(byRef)	INPP00GenRuleLine object
	;
	; Returns:
	;
	; History:
	; 24-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idItem,idLocn,curPrice
	
	set curPrice = ""
	set idItem   = $$$INPP00GenRuleLineItem(YFELD)
	set idLocn   = $$$INPP00GenRuleLineLocation(YFELD)
	
	if $$$INPP00GenRuleLinePriceTypePolicy(YFELD)=$$$EnumINPRICETYPEPOLICYFixed {
		set curPrice = $$GetFixedPrice(idItem,idLocn)
	} else {
		set curPrice = $$$INPP00GenRuleLinePrice(YFELD)
	}
	quit curPrice


GetFixedPrice(pidItem="",pidLocn="")
	;-------------------------------------------------------------------------------
	; If a Fixed price is defined for this Item/(Item,Location) then display it as the default.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 11-Nov-2009	GRF		SR16511: new variable
	; 24-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new curPrice,objINARTLOCPAR
	
	set curPrice = ""
	if (pidItem'="") && (pidLocn'="") {
		set objINARTLOCPAR = $get(^INARTLOCPAR(YM,pidItem,pidLocn,1))
		if objINARTLOCPAR'="" {
			set curPrice = $$$INARTLOCPARFixedPrice(objINARTLOCPAR)
		}
	}
	quit curPrice
	
	
GetCost(YFELD)
	;-------------------------------------------------------------------------------
	; Works out the cost of an item.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 29-Jul-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new objINPP00GenRule
	
	set objINPP00GenRule = $$$GRIDYFELDContainer
	quit $$GetCostAsAtDateAndTime^INARTAVG($$$INPP00GenRuleLineItem(YFELD),$$$INPP00GenRuleCostPointDate(objINPP00GenRule),$$$INPP00GenRuleCostPointTime(objINPP00GenRule))

GetManualPackCost(YFELD)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new curCost,idINART
	
	set curCost=""
	set idINART = $$$INPP00GenRuleLineItem(YFELD)
	if idINART'="" {
		set curCost = $$$INARTManualPackCost($get(^INART(YM,idINART,1)))
	}
	quit curCost
	
	
OnBlur(YBBN,YKEY,&YFELD)
	if $$$INPP00GenRuleLinePrice(YFELD)="" {
		set $$$INPP00GenRuleLineExclude(YFELD)=0
	}
	quit

 
GetCostBasedOnCostBasis(pidItem,pidRuleHeader,pidRuleLine)
	;-------------------------------------------------------------------------------
	; Get Cost Based On Cost Basis
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
 	; 03-Nov-2009	GRF		SR16871: INAvgCost replaces INARTAVG; line objects when
 	; 							should be header objects
	; 25-Aug-2009	shobby	SR16511: Pass in the item as it isn't always available
	; 							on the rule line
	; 19-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new fltCost,idCostCentre,idLocn,objINPP00GenRule,objINPP00GenRuleLine
	
	set fltCost = ""
	
	set objINPP00GenRule     = $get(^INPP00GenRule(YM,pidRuleHeader,1))
	set objINPP00GenRuleLine = $get(^INPP00GenRuleLine(YM,pidRuleHeader,pidRuleLine,1))

	set idLocn = $$$INPP00GenRuleLineLocation(objINPP00GenRuleLine)   ; SR16871
	if idLocn="" set idLocn = $get(YLOCATION)
	set idCostCentre = $$GetCostCentre^INCostCentre(idLocn)
	
	if $$$INPP00GenRuleCostBasis(objINPP00GenRule)=$$$EnumINPRICERULECOSTBASISAverageCost {
	;	set fltCost = $$GetCostAsAtDateAndTime^INARTAVG(pidItem,$$$INPP00GenRuleCostPointDate(objINPP00GenRuleLine),$$$INPP00GenRuleCostPointTime(objINPP00GenRuleLine)) ; SR16871
		set fltCost = $$GetCostAtTimeForCC^INAvgCost(pidItem,idCostCentre,$$$INPP00GenRuleCostPointDate(objINPP00GenRule),$$$INPP00GenRuleCostPointTime(objINPP00GenRule))
	
	} elseif $$$INPP00GenRuleCostBasis(objINPP00GenRule)=$$$EnumINPRICERULECOSTBASISManualPackCost {
		set fltCost = $$$INARTManualPackCost($get(^INART(YM,pidItem,1)))
	}
	quit fltCost
	
	
GetUOM(pidItem)
	;-------------------------------------------------------------------------------
	; Get the appropriate UOM
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 19-Aug-2009	shobby		SR16511: Created
	;-------------------------------------------------------------------------------
	new idUnit
	
	set idUnit = ""
	; @$$GetInventoryUOM^INUOMConversion($piece(YFELD,Y,3))
	if pidItem'="" {
		set idUnit = $order(^INARTPACKs(0,6,1,$$$Index(pidItem),""))
	}
	quit idUnit

]]></Routine>
</Export>