<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARAbastecimento" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARAbastecimento
#include COMSYS
#include INConst
	quit

OnBeforeFormConstruction(pYKEY)
	quit:(pYKEY = "")
	
	if ($$$KEY1(pYKEY) = "External") {
		kill ^VARTempAbastecimento(YM,YBED)
		do VARLogAfterSave^VARUtil(YBED,YFORM)	
		set $piece(^VARTempAbastecimento(YM,YBED,1),Y,1) = $$$KEY2(pYKEY)
		set $piece(^VARTempAbastecimento(YM,YBED,1),Y,3) = $$$KEY3(pYKEY)		
	}

	quit

OnAfterSave
	;-------------------------------------------------------------------------------
    ; Prepara as variáveis para a consulta do usuário.
	;
    ; History:
    ; 12-Mar-2012	Gustavo Fiuza	Criado
    ;-------------------------------------------------------------------------------	
	new idLocalAbast, idLocalReq, idProduto, periodoDe, periodoAte, entregaDe, entregaAte,
		situacao, blnConsidProg, ordenacao, programa
	
	//Filter
	set idLocalAbast  = $get(VORG(1))
	set idLocalReq	  = $get(VORG(2))
	set idProduto	  = $get(VORG(3))
	set periodoDe	  = $get(VORG(4))
	set periodoAte	  = $get(VORG(5))
	set entregaDe	  = $get(VORG(6))
	set entregaAte	  = $get(VORG(7))
	set situacao	  = $get(VORG(8))
	set blnConsidProg = $get(VORG(9))
	set ordenacao     = $get(VORG(10))
	set programa      = $get(VORG(11))
	
	kill ^VARTempAbastecimento(YM,YBED)	
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,1)  = idLocalAbast
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,2)  = idLocalReq
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,3)  = idProduto
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,4)  = periodoDe
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,5)  = periodoAte
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,6)  = entregaDe
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,7)  = entregaAte
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,8)  = situacao
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,9)  = blnConsidProg
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,10) = ordenacao
	set $piece(^VARTempAbastecimento(YM,YBED,1),Y,11) = programa

	do VARLogAfterSave^VARUtil(YBED,YFORM)	
	do ReloadForm^COMUtilForm("VARAbastecimento")
	
	quit	

OnAfterDataFields()
	;-------------------------------------------------------------------------------
    ; Exibe os resultados da consulta de abastecimentos pendentes.
	;
    ; History:
	; 01-Mai-2012	Gustavo	  Incluído VARLogAfterSave    
    ; 12-Mar-2012	Gustavo   Criado
    ;-------------------------------------------------------------------------------	
	new objTempAbastecimento, flterLocalAbast, flterLocalReq, flterProduto, flterPeriodoDe, flterPeriodoAte,
		flterEntregaDe, flterEntregaAte, flterSituacao, flterConsidProg, flterOrdenacao, qtyReq, lstHeader,
		count, idxStatus, idItem, idReq, UoM, localAbast, localReq, dteReq, dteEntrega, qtyEstoqueDisp,
		idPrograma, qtyEstoqueProgram, strOrdenacao, rsAbastPend, SQLAbastPend, descItem, flterPrograma,
		lineColor, keyConsEstoque, qtyEnviada, qtyPend

	//Só apresenta os resultados da consulta caso o usuário tenha clicado no botão 'Ok' do form.
	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
		
	set objTempAbastecimento = $get(^VARTempAbastecimento(YM,YBED,1))	
	
	if (objTempAbastecimento = "") {
		write "<div style='background-color:lightgoldenrodyellow;padding:5px;margin:2px;'>"
		write " &nbsp;<strong>É preciso definir pelo menos um filtro na consulta.</strong>"
		write "</div>"
		quit
	}
	
	set flterLocalAbast = $piece(objTempAbastecimento,Y,1)
	set flterLocalReq   = $piece(objTempAbastecimento,Y,2)
	set flterProduto    = $piece(objTempAbastecimento,Y,3)
	set flterPeriodoDe  = $piece(objTempAbastecimento,Y,4)
	set flterPeriodoAte = $piece(objTempAbastecimento,Y,5)
	set flterEntregaDe  = $piece(objTempAbastecimento,Y,6)
	set flterEntregaAte = $piece(objTempAbastecimento,Y,7)
	set flterSituacao   = $piece(objTempAbastecimento,Y,8)
	set flterConsidProg = $piece(objTempAbastecimento,Y,9)
	set flterOrdenacao  = $piece(objTempAbastecimento,Y,10)
	set flterPrograma   = $piece(objTempAbastecimento,Y,11)
	
	if ((flterLocalAbast = "") && (flterLocalReq = "")) {
		$$$Alert("Preencha pelo menos um dos filtros de local.")
		quit
	}
	
	set qtyReq     = 0
	set qtyEnviada = 0
	set qtyPend	   = 0
	set count      = 0
	
	set strOrdenacao = $$GetOrdenacao(flterOrdenacao)

	//Monta cabeçalho da tabela
 	set lstHeader = ""
  	set lstHeader = lstHeader_$listbuild("#","Cód.","Produto","Local Abastecedor","Local Requisitante","Requisição","Dt. Req.","Dt. Entrega","Qtde. <br />&nbsp;&nbsp;&nbsp;Req.","Qtde. <br />&nbsp;&nbsp;&nbsp;Enviada","Qtde. <br />&nbsp;&nbsp;&nbsp;Pend.","UN","Qtde. Disp.&nbsp;<br />&nbsp;Local","Qtde. Disp.&nbsp;<br />&nbsp;Programa")  			    							 	
    			    							 	
  	if $$Start^COMTable(lstHeader,"",,,$$$NO) {

    	set rsAbastPend = ##class(%ResultSet).%New()  ;Create Result Set Object
    	
    	set SQLAbastPend = ""
    	set SQLAbastPend = SQLAbastPend_"SELECT Linha.ReqNumber,"
    	set SQLAbastPend = SQLAbastPend_" Linha.LineNumber,"
    	set SQLAbastPend = SQLAbastPend_" Linha.Item,"
    	set SQLAbastPend = SQLAbastPend_" Linha.Unit,"
    	set SQLAbastPend = SQLAbastPend_" Linha.QtyOrdered as QtdeReq,"
    	set SQLAbastPend = SQLAbastPend_" Linha.QtyIssued as QtdeEnviada,"    	
    	set SQLAbastPend = SQLAbastPend_" (Linha.QtyOrdered - Linha.QtyIssued) as QtdePendente,"
    	set SQLAbastPend = SQLAbastPend_" Req.FromLocn,"
    	set SQLAbastPend = SQLAbastPend_" Req.ToLocn,"
    	set SQLAbastPend = SQLAbastPend_" Req.Date1,"
    	set SQLAbastPend = SQLAbastPend_" Req.DueDate,"
    	set SQLAbastPend = SQLAbastPend_" Req.Program1,"
    	set SQLAbastPend = SQLAbastPend_" Item.SearchName"
    	set SQLAbastPend = SQLAbastPend_" FROM INReqLine Linha"
    	set SQLAbastPend = SQLAbastPend_" JOIN INReq Req on (Req.ReqNum = Linha.ReqNumber)"
    	set SQLAbastPend = SQLAbastPend_" JOIN INART Item on (Item.ItemNumber = Linha.Item)"
    	set SQLAbastPend = SQLAbastPend_" WHERE Linha.Status BETWEEN 1 AND 7"
    	set SQLAbastPend = SQLAbastPend_" AND (Linha.QtyOrdered - Linha.QtyIssued) > 0"
    	
    	if (flterProduto '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Linha.Item = '"_flterProduto_"'"
    	}
    	
    	if (flterLocalAbast '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Req.FromLocn = '"_flterLocalAbast_"'"
    	}
    	
    	if (flterLocalReq '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Req.ToLocn = '"_flterLocalReq_"'"
    	}
    	
    	if (flterPeriodoDe '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Req.Date1 >= "_flterPeriodoDe 	
    	}
    	
    	if (flterPeriodoAte '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Req.Date1 <= "_flterPeriodoAte 	
    	}
    	
    	if (flterEntregaDe '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Req.DueDate >= "_flterEntregaDe 	
    	}
    	
    	if (flterEntregaAte '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Req.DueDate <= "_flterEntregaAte 	
    	}
    	
    	if (flterPrograma '= "") {
	    	set SQLAbastPend = SQLAbastPend_" AND Program1 = '"_flterPrograma_"'"
    	}
    	
    	set SQLAbastPend = SQLAbastPend_" ORDER BY "_strOrdenacao
    	
    	do rsAbastPend.Prepare(SQLAbastPend)  ;Prepare Query
    	do rsAbastPend.Execute()  ;Execute Query        	
    	
    	while (rsAbastPend.Next()) {
	    	
        	set idReq  	   = rsAbastPend.GetData(1)
        	set idLine 	   = rsAbastPend.GetData(2)
        	set idItem 	   = rsAbastPend.GetData(3)
        	set UoM    	   = rsAbastPend.GetData(4)
        	set qtyReq     = rsAbastPend.GetData(5)
        	set qtyEnviada = rsAbastPend.GetData(6)
        	set qtyPend    = rsAbastPend.GetData(7)
        	set localAbast = rsAbastPend.GetData(8)
        	set localReq   = rsAbastPend.GetData(9)
        	set dteReq 	   = rsAbastPend.GetData(10)
        	set dteEntrega = rsAbastPend.GetData(11)
        	set idPrograma = rsAbastPend.GetData(12)
        	set descItem   = rsAbastPend.GetData(13)
        	
        	;Não permitir quantidade negativa na tela
        	if (qtyPend < 0) set qtyPend = 0
				
			set qtyEstoqueDisp    = ##class(alSOH.iSOH).GetQtyAvailable(idItem,flterLocalAbast)
			set qtyEstoqueProgram = ##class(alSOH.iSOH).GetQtyAvailable(idItem,flterLocalAbast,,,idPrograma)					
	    	
	    	;Situação 1 = Com Estoque e 2 = Sem Estoque
	    	
	    	if (flterSituacao = 1) {
		    	if (flterConsidProg = $$$YES) {
	    			continue:(qtyEstoqueProgram < qtyReq)
		    	} else {
			    	continue:(qtyEstoqueDisp < qtyReq)
		    	}
	    	
	    	} elseif (flterSituacao = 2) {
		    	if (flterConsidProg = $$$YES) {
	    			continue:(qtyEstoqueProgram >= qtyReq)
		    	} else {
			    	continue:(qtyEstoqueDisp >= qtyReq)
		    	}		    	
	    	}
	    	
	    	set lineColor = $$GetLineColor(flterConsidProg,qtyReq,qtyEstoqueDisp,qtyEstoqueProgram)
	    	set count = $increment(count)
	    	set keyConsEstoque = "External"_$$$COMMA_idItem_$$$COMMA_localAbast
    						
    		do NewLine^COMTable(lineColor)
     		do InsertCell^COMTable(count)
     		do InsertCell^COMTable(idItem)
     		do InsertCell^COMTable(descItem,"VARStock",keyConsEstoque,,,,,,$$$YES,$$$YES)
     		do InsertCell^COMTable("<span title='Local "_localAbast_"'>"_$$SQLGetLocationName^VARSQL(localAbast)_"</span>",,,,,,,,,$$$YES)
     		do InsertCell^COMTable("<span title='Local "_localReq_"'>"_$$SQLGetLocationName^VARSQL(localReq)_"</span>",,,,,,,,,$$$YES)
     		;do InsertCell^COMTable("<span title='Programa "_idPrograma_"'>"_$$GetProgramName^VARSQL(idPrograma)_"</span>",,,,,,,,,$$$YES)     					
     		do InsertCell^COMTable("<span title='Linha "_idLine_"'>"_idReq_"</span>","INReq",idReq)
     		do InsertCell^COMTable($zdate(dteReq,4))
     		do InsertCell^COMTable($zdate(dteEntrega,4))
     		do InsertCell^COMTable($$^WWWTR(0,12,qtyReq),,,,"RIGHT")
     		do InsertCell^COMTable($$^WWWTR(0,12,qtyEnviada),,,,"RIGHT")
     		do InsertCell^COMTable($$^WWWTR(0,12,qtyPend),,,,"RIGHT")
     		do InsertCell^COMTable($$SQLGetSiglaUnit^VARSQL(UoM))
     		do InsertCell^COMTable($$^WWWTR(0,12,qtyEstoqueDisp),,,,"RIGHT")     					
     		do InsertCell^COMTable($$^WWWTR(0,12,qtyEstoqueProgram),,,,"RIGHT")
      		do EndLine^COMTable()		
		}
		
		if (count = 0) {		
			do NewLine^COMTable("white")
			do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,15)
			do EndLine^COMTable()
		}
		
		do rsAbastPend.Close()
		do Stop^COMTable()
	}
	
	do ExibirLegenda
	
	quit
	
GetOrdenacao(pidOrdenacao)
	;-------------------------------------------------------------------------------
    ; Retorna uma string com a ordenação selecionada no filtro pelo usuário.
	;
    ; History:
    ; 12-Mar-2012	Gustavo Fiuza	Criado
    ;-------------------------------------------------------------------------------	
	
	if (pidOrdenacao = 1) {
		quit "Linha.Item"
	
	} elseif (pidOrdenacao = 2) {
		quit "Item.SearchName"
	
	} elseif (pidOrdenacao = 3) {
		quit "Req.ToLocn"	
	
	} elseif (pidOrdenacao = 4) {
		quit "Req.Date1 asc"
	
	} elseif (pidOrdenacao = 5) {
		quit "Req.Date1 desc"
	}
	
	quit "Linha.Item"
	
	
GetLineColor(flterConsidProg,qtyReq,qtyEstoqueDisp,qtyEstoqueProgram)
	;-------------------------------------------------------------------------------
    ; Retorna a cor em vermelho quando a linha não tiver estoque disponível suficiente,
    ; seja para o programa ou para o local.
    ;
    ; Retorna a cor em amarelo quando a linha tiver estoque disponível parcialmente.
	;
    ; History:
    ; 20-Abr-2012	Gustavo Fiuza	Inserida cor em amarelo para quantidade parcial
    ; 12-Mar-2012	Gustavo Fiuza	Criado
    ;-------------------------------------------------------------------------------		
	new lineColor	
	set lineColor = ""
	
	if (flterConsidProg = $$$YES) {		
		if (qtyEstoqueProgram < qtyReq) && (qtyEstoqueProgram <= 0) {
			set lineColor = "#ff7f7f" ;Vermelho claro
		} elseif (qtyEstoqueProgram < qtyReq) && (qtyEstoqueProgram > 0) {
			set lineColor = "#f8ff8f"  ;Amarelo claro
		}	
	
	} else {		
		if (qtyEstoqueDisp < qtyReq) && (qtyEstoqueDisp <= 0) {
			set lineColor = "#ff7f7f" ;Vermelho claro
		} elseif (qtyEstoqueDisp < qtyReq) && (qtyEstoqueDisp > 0) {
			set lineColor = "#f8ff8f"  ;Amarelo claro
		}		
	}

	quit lineColor
	
	
ExibirLegenda
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnAfterDataFields^VARAbastecimento.mac
    ; 
    ; Histórico:
    ; 	20-Abr-2010		Criado
    ;-------------------------------------------------------------------------------
	write "<br />"
	write "	<div style='width:400px;border-width:1px;border-style=dashed;border-color=gray;padding-left:10px;padding-top:7px;padding-bottom:7px;background-color:#E3E3E3'>"
	write "		<strong>Legendas:</strong>"
	write "		<br />&nbsp;&nbsp;&nbsp;&nbsp;<font color='red'><b>Vermelho</b></font> - não há estoque para atender a requisição"
	write "		<br />&nbsp;&nbsp;&nbsp;&nbsp;<font color='#cccc00'><b>Amarelo</b></font> - a requisição pode ser atendida parcialmente"
	write "		<br />&nbsp;&nbsp;&nbsp;&nbsp;<b>Cor padrão</b> - a requisição pode ser completamente atendida"
	write "	</div>"
	write "<br />"
	
	quit	
]]></Routine>
</Export>