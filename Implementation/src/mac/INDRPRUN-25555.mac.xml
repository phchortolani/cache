<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INDRPRUN" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INDRPRUN ;INDRPRUN;DT;DRP ITEM SEARCH;23.10.2000  ; Compiled February 18, 2005 16:16:57
#include COMSYS
#include INConst
 
#define Log(%1) do Log^INDRPRUNLog(%1)
 
	;------------------------------------------------------------------------------
	; Description of Function :
	;		DRP ITEM SEARCH
	;
	;
	;   Processing Calls
	;   ----------------
	;	^INDRPRUN = EXECUTE NACH FORMULAR MIT VARIABEL VORG(...)
	;
	;   MANU      = EINSRPRUNG AUS ROUTINE (Z.B. INAUF) ;out of routine 
	;   KEY       = EINSPRUNG AUS WIEDERVORLAGEN ;KEY out of 
	;   ----------------
	;   VIEW      = EXECUTE/ANZEIGE NACH FORMULAR ;within form 
	;   RUN       = PROGRAMMSTART / EINSPRUNG AUS HINTERGRUNDJOB (INDRPSTART1) ;out of 
	;   .SORT     = SUCHEN DEMAND/SUPPLY ;seek 
	;   .DRUCK    = ABARBEITEN DEMANDS/SUPPLIES
	;   ..ANZ     = BERECHNEN UND ANZEIGEN
	;   ...^INDRPRUN1    = Column headings                  : KOPFZEILE
	;   ...^INDRPRUN2    = Blank lines (If no data)         : LEERZEILE (WENN KEINE DATEN)
	;   ...^INDRPRUN3    = Item Information                 : ARTIKELINFORMATIONEN
	;   ...^INDRPRUN4    = Display Stock Holdings           : LAGERBESTAND ANZEIGEN
	;   ...^INDRPRUN5    = Display Overview/Summary         ; *** ANZEIGEN DER ÜBERSICHT ***
	;   ...^INDRPRUN6    = EXAMINE AND RELEASE TO THE GOODS PROCUREMENT     ; PRÜFEN UND AUSLÖSEN DER WARENBESCHAFFUNG
	;   ...^INDRPRUN7()  = Definition of the WH             ;FESTLEGUNG DER WH
	;   ...^INDRPRUN8    = ASSIGN TO STOCKED GOODS / ASCERTAIN ABILITY TO DELIVER / EXTINGUISH OVERDUE DEMANDS
	;                      ZUORDNEN DER LAGERWARE / AUSLIEFERUNGSFÄHIGKEIT FESTSTELLEN / LÖSCHEN ÜBERFÄLLIGE DEMANDS - Handle INDRPDEMAND
	;   ...^INDRPRUN9()  = Total Line                       ; SUMMENZEILE
	;
	;   ...^INDRPRUN11()      = PRÜFEN MÖGLICHKEITEN DER WARENBESCHAFFUNG
	;   ....^INDRPRUN12()     = VORBEREITUNG DER DATEN FÜR AUFTRAGSANLAGE
	;   .....^INAUFANLAGE()   = ANLEGEN AUFTRAG
	;   .....^INDRPRUN13()    = ANLEGEN FILIALBESTELLUNG - Handle INDRPSUPPLY
	;
	;   .....^INDRPBESMENGE() = ERMITTLUNG DER BESCHAFFUNGSMENGE
	;   .....^INDRPSTATUS()   = ERMITTLUNG DES DRP-STATUS
	;   .....^INDRPAUFKILL()  = LÖSCHEN UNBEARBEITETE AUFTRÄGE
	;   .....^INDRPWV()       = GENERIEREN DER WIEDERVORLAGEN
	;   .....^INDRPMESPROT()  = HISTORY/PROTOKOLL DER WIEDERVORLAGEN
	;   .....^INDRPRUNPROT()  = HISTORY/PROTOKOLL DER AKTIONEN
	;
	; VORG(1)=  Item                            ARTIKEL
	; VORG(2)=  Display/Calculation Time Fence  ZEITVORSCHAU
	; VORG(3)=  Show Forecasts (default YES)    SIMULATION ANZEIGEN JA/NEIN
	; VORG(4)=  Show Sub Total every x days     ZWISCHENSUMME ALLE WIEVIEL TAGE ;how much 
	;
	; TYPE:
	;  1=DEMAND/NACHFRAGE
	;  2=SUPPLY/ANGEBOT
	; 12=DEMAND+SUPPLY (EIGENFERTIGUNG)
	; 
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 27-Apr-2009	shobby	SR16374: Enable the back button.
    ; 12-Mar-2009	PPP		SR16397: Added Logging for the process
	; 29-Oct-2007	FIS		BR014564: ATP request with PAB and CPAB + Bugfix in ATP calculation
	; 21-Feb-2007	GRF		SR15234: Doco; boolean macro; brace format
	; 27-Nov-2006	GRF		SR15234: doco; !=>||
	; 04-Sep-2006	GRF		SR12027: Naked references; remove redundant $data; quits
	; 16-Dec-2005	GRF		SR13984 : Doco; Boolean Macros
	; 04-Nov-2005	GRF/RW	SR13085 : Add D420 for partial receipt
	; 30-May-2005	RobertW	SR12056 : Attempt at Performance Increase
	; 23.Oct.2000  	DT		Created
	;-----------------------------------------------------------------------------*/
	SET ^INDRPUSER(YM,YUSER,1)=Y_VORG(1)_Y_Y_Y_Y_VORG(2)_Y_VORG(3)_Y_VORG(4)  ;SPEICHERN AUSWAHL ;Save Selection 
	;SET %("VAR","YBACK")    = ""
	SET %("VAR","YBACK")    = $get(YBACK) ;SR16374
	SET %("VAR","YAUSWAHL") = "#"_VORG(1)_"#"_VORG(2)_"#"_VORG(3)_"#"_VORG(4)_"#"_VORG(5)
	SET %("VAR","YFUNCT")   = VORG(1)
	SET %("VAR","YFORM")    = "INDRPRUN"
	DO ^WWWFORM
	QUIT
	
MANU
    ;-------------------------------------------------------------------------------
	;	MANUELLER START ;take-off 
	;
    ; History:
    ; 28-Nov-2005	JW		SR13860: Set YBACK
    ;-------------------------------------------------------------------------------*/
	NEW MANUELL,KEY,strBack,YSATZ,ZEIT,ZWISCHEN
 
	SET ^INDRPUSER(YM,YUSER,1)=""
	SET MANUELL=$$$YES
	DO KEY                              ; builds INDRPUSER record
	SET YSATZ=$GET(^INDRPUSER(YM,YUSER,1))
	QUIT:YSATZ=""
	
	SET KEY      = $PIECE(YSATZ,Y,2)	; $$$INDRPUSERCurrentItem
	SET ZEIT     = $PIECE(YSATZ,Y,6)	; $$$INDRPUSERHowMuchDaysTimePreview
	SET ZWISCHEN = $PIECE(YSATZ,Y,8)	; $$$INDRPUSERIntermediateTotalEverythi
	
	//SET %("VAR","YBACK")=""
	set strBack=""
	if $get(YFORM)'="" set strBack = YFORM_","
	SET %("VAR","YBACK")    = strBack
	SET %("VAR","YAUSWAHL") = "#"_KEY_"#"_ZEIT_"#"_1_"#"_ZWISCHEN 
	SET %("VAR","YFUNCT")   = KEY
	SET %("VAR","YFORM")    = "INDRPRUN"
	DO ^WWWFORM
	QUIT
	
KEY
    ;-------------------------------------------------------------------------------
	;  STARTEN DRP-RUN AUS WIEDERVORLAGE ;launching out of 
	; 
	; ByRef :
	; 	MANUELL
    ;-------------------------------------------------------------------------------
	NEW CHECK,KEY,ZEIT,ZWISCHEN
 
	SET KEY=$GET(%(YQUERY,"YKEY"))
	IF $GET(MANUELL)=$$$YES SET KEY="!"_KEY
	IF $EXTRACT(KEY)'="!" QUIT
	SET KEY=$EXTRACT(KEY,2,99)
	QUIT:KEY=""
	QUIT:'$DATA(^INART(YM,KEY,1))
	
	SET ZEIT     = $PIECE($GET(^INDRPITEM(YM,YLOCATION,KEY,1)),Y,9)   ;ZEITVORSCHAU
	SET ZWISCHEN = $PIECE($GET(^INDRPITEM(YM,YLOCATION,KEY,1)),Y,34)  ;ZWISCHENSUMME ;subtotal 
	SET ^INDRPUSER(YM,YUSER,1)=Y_KEY_Y_Y_1_Y_Y_ZEIT_Y_0_Y_ZWISCHEN    ;SPEICHERN AUSWAHL ;Save Selection 
	QUIT
	
VIEW ;KILL BGJOB FÜR ANSICHT ;to picture 
    ; 
    ; 12-Mar-2009	PPP		SR16397: Added Logging for the process
    ; 
    ; 
	KILL BGJOB
	
	do ClearLog^INDRPRUNLog()
	
	set VORG(5) = $piece(YAUSWAHL,"#",6)
	DO RUN^INDRPRUN
	
	if $get(VORG(5)) {
		do ShowCalc^INDRPRUNLog()		//SR16397
	}
	
	QUIT
	
RUN
	;-------------------------------------------------------------------------------
	; Routines call to run DRP for each Item and Locn
	;	ANZEIGE DEMANDS AND SUPPLY
	; 
	; ByRef:
	; 	BGJOB		(boolean) $$$YES if a background job - don't show
	; 	EINSPRUNG
	;			ACHTUNG EINSPRUNG ! (WENN $DATA(EINSPRUNG)) ;estimation 
	;			IF $GET(EINSPRUNG)=1   EINSPRUNG AUS NETTOBEDARFSRECHNUNG ;out of 
	;			IF $GET(EINSPRUNG)=2   EINSPRUNG AUS ATP ;out of ATP 
	; 	YAUSWAHL
	; 	YLOCATION
	; 	YUSER
	; 
	; History
	; 09-Jul-2007	FIS		SR15564: changed YAUSWAHL as it was used incorrectly
	; 05-Jul-2007	FIS		SR15564: supply order time phase
	; 21-Feb-2007	GRF		SR15234: comment out obsolete VORG(3) lines
	; 15-Aug-2005	PPP		SR14823: If Supplier Exists add the Demand Time Fence to
	; 						the Lead Time
	; 				Intraprend	Created
	;-------------------------------------------------------------------------------
	new ABGE,ACCESS,ANZM,ART,ART1,ART2,ATP,ATPMENGE,ATPTEMP,AUF,AUSWAHL
	new BEACHTEN,BESTAND,BETRIEB,CBESTAND,COLOR,DAT,DEMAND,DEMAND1,DEMQTY,DRPID
	new FEHL,ID,idPolicy,idSupplier,KATALOG,KBESTAND,LASTAT,LASTDAT,LEADTIME
	new LEISTUNG,LINK,ME,M1,M2,objSup,POS,RESMENGE,RMAMENGE,RUECKSPRUNG
	new SATZ,SEPERATE,START,STOP,SUPPLY,SUPPLY1,STATUS,STATUSTEXT
	new TYPE,UHR,USER,WAGRU,WEMENGE,YA,YI,YIZ,YK,YL,YRULEQ,YS,YT,YU,ZSUMANZ
	new intTimePhase,dteTimePhaseStart,dteTimePhaseEnd
	
	
	SET EINSPRUNG=$GET(EINSPRUNG)
	SET RUECKSPRUNG="INDRPRUN"
	IF EINSPRUNG=1 SET RUECKSPRUNG="INPRONETTOART"
	IF EINSPRUNG=2 SET RUECKSPRUNG="INATP"
	IF EINSPRUNG=3 SET RUECKSPRUNG=""
	
	SET YAUSWAHL = $GET(YAUSWAHL)
	SET BETRIEB  = $GET(YLOCATION)
	QUIT:BETRIEB=""
	
	if $get(BGJOB)=$$$YES {                            ; SR15234
		FOR YI(3)=1:1:4 SET VORG(YI(3)) = ""
	} else {
		SET VORG(1) = $PIECE(YAUSWAHL,"#",2)
		SET VORG(1) = $TRANSLATE(VORG(1),"*")
		SET VORG(2) = $PIECE(YAUSWAHL,"#",3)
	;	SET VORG(3) = $PIECE(YAUSWAHL,"#",4)          ; SR15234
		SET VORG(4) = $PIECE(YAUSWAHL,"#",5)
	}
	
	SET AUSWAHL=$GET(^INDRPUSER(YM,YUSER,1))  ;ZWISCHENSPEICHER AUSWAHL FÜR NEUAUFBAU ;Selection to 
	IF VORG(1)="" SET VORG(1) = $$$INDRPUSERCurrentItem(AUSWAHL)
	;IF VORG(2)="" SET VORG(2) = $$$INDRPUSERCurrentOrder(AUSWAHL)
	;IF VORG(3)="" SET VORG(3) = $$$INDRPUSERCurrentLineItem(AUSWAHL)          ; SR15234
	;IF VORG(4)="" SET VORG(4) = $$$INDRPUSERCurrentLocation(AUSWAHL)
	IF VORG(2)="" SET VORG(2) = $$$INDRPUSERHowMuchDaysTimePreview(AUSWAHL)     ;FIS;29-Oct-2007;BR014564
	IF VORG(3)="" SET VORG(3) = $$$INDRPUSERSimulationDisplayJanuaryI(AUSWAHL)  ;FIS;29-Oct-2007;BR014564
	IF VORG(4)="" SET VORG(4) = $$$INDRPUSERIntermediateTotalEverythi(AUSWAHL)  ;FIS;29-Oct-2007;BR014564
	
	;IF $GET(VORG(1))'="" IF '$DATA(^INART(YM,VORG(1))) SET VORG(1)=""
	SET VORG(3) = $$$YES        ;show forecasts ! ;constantly display 
	SET ART     = VORG(1)
	SET ATP     = $$$YES        ;ATP ANZEIGEN ;ATP display 
	
	;PRÜFEN OB ANZEIGE ODER QUIT  ; Check if display or quit
	
	; No Item Number         ;KEINE ARTIKELNUMMER
	;---------------------------------------
	IF ART="" {
		if '$GET(BGJOB) {  ;HINTERGRUNDJOB
			WRITE "<br>"
			DO ^INDRPRUN1
			DO ^INDRPRUN2
		}
		quit
	}
	
	; Item doesn't exist     ;ARTIKEL NICHT VORHANDEN
	;---------------------------------------
	IF ART'="" IF '$DATA(^INART(YM,ART)) DO  QUIT  ;ARTIKEL NICHT VORHANDEN
	. SET ART=""
	. QUIT:$GET(BGJOB)=$$$YES                      ;HINTERGRUNDJOB
	. WRITE "<hr>"
	. WRITE "<font size=2 COLOR="_YRED_"><b>"_$$^WWWTEXT(32292)_" ("_$$^WWWTEXT(32024)_")"_"</b></font>"   ; "Check Please! (Item)"
	. WRITE "<hr>"
	. DO ^INDRPRUN1
	. DO ^INDRPRUN2
	. WRITE YCR
 
	
	; DRP Not ENABLED        ;DRP NICHT AKTIV
	;---------------------------------------
	if $$$INVORGDRPActivated($get(^INVORG(YM,YM,1)))'=$$$YES do  quit
	. QUIT:$GET(BGJOB)=$$$YES  ;HINTERGRUNDJOB
	. WRITE "<hr>"
	. WRITE "<font size=2 COLOR="_YRED_"><b>"_$$^WWWTEXT(32742)_" !</b></font>"
	. WRITE "<hr>"
	. DO ^INDRPRUN1
	. DO ^INDRPRUN2
	. WRITE YCR
	
	;ARTIKELDATEN HOLEN ;Get item data
	;--------------------------------------- 
	SET ART1=""
	SET ART2=""
	SET WAGRU=""
	
	;IF ART'="" DO
	;. SET ART1=$GET(^INART(YM,ART,1))                                                    ;ARTIKELSTAMM
	;. IF $DATA(^INDRPITEM(YM,BETRIEB,ART,1)) SET ART2=^INDRPITEM(YM,BETRIEB,ART,1) QUIT  ;IM DRP ANGELEGT
	;. SET WAGRU=$PIECE(ART1,Y,30)                                                        ;WARENGRUPPE
	;. IF WAGRU="" SET WAGRU=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)                          ;DFLT. WARENGRUPPE
	;. IF WAGRU'="" IF $DATA(^INDRPITEMS(YM,BETRIEB,WAGRU,1)) SET ART2=^INDRPITEMS(YM,BETRIEB,WAGRU,1)
	
	;GRF;19.10.2004 new
	/*---------------------------------------------------------------------------------
	; Build ART2 from either the DRP Item Masterfile or the DRP Group Masterfile (both are location based).
	; If the DRP Item record is defined, then use it - obtaining the SALEABLE flag from
	;    the DRP Group or the location record if not specified for the item.
	; If it is not defined get the DRP Group record instead - obtaining the SALEABLE
	;    flag from the location record if not specified for the group.
	;--------------------------------------------------------------------------------*/
	
	;+++++++++++++++++++++++++++++++++++++++
	;	ART1	objINART			Item Masterfile
	;	ART2	objINDRPITEMS
	;	ACCESS	objINDRPPLANNER		DRP Permissions
	;	
	; INVORG		D13		$$$INVORGDefaultItemGroup()
	; INDRPITEMS	D38		$$$INDRPITEMSSaleableItemGroup()
	; INVORGB		D9		$$$INVORGBSaleableItemDefault()
	;+++++++++++++++++++++++++++++++++++++++
	IF ART'="" DO
	. SET ART1  = $GET(^INART(YM,ART,1))  ;ARTIKELSTAMM
	. SET WAGRU = $PIECE(ART1,Y,30)       ;WARENGRUPPE
	. IF WAGRU="" SET WAGRU = $PIECE($GET(^INVORG(YM,YM,1)),Y,13)      ;DFLT. WARENGRUPPE
	. IF $DATA(^INDRPITEM(YM,BETRIEB,ART,1)) SET ART2=^INDRPITEM(YM,BETRIEB,ART,1) DO  QUIT    ;IM DRP ANGELEGT
	. . IF ($PIECE(ART1,Y,26)>4)&&($PIECE(ART2,Y,38)="") SET $PIECE(ART2,Y,38)=0
	. . IF $PIECE(ART2,Y,38)="" IF WAGRU'="" SET $PIECE(ART2,Y,38)=$PIECE($GET(^INDRPITEMS(YM,BETRIEB,WAGRU,1)),Y,38)
	. . IF $PIECE(ART2,Y,38)="" SET $PIECE(ART2,Y,38)=$PIECE($GET(^INVORGB(YM,YM,BETRIEB,1)),Y,9)
	. . IF $PIECE(ART2,Y,38)="" SET $PIECE(ART2,Y,38)=1
	. . $$$Log($$$Text("IN00960"))		//Getting DRP Item Location details
	. ;
	. IF WAGRU'="" IF $DATA(^INDRPITEMS(YM,BETRIEB,WAGRU,1)) SET ART2=^INDRPITEMS(YM,BETRIEB,WAGRU,1)
	. IF $PIECE(ART2,Y,38)="" SET $PIECE(ART2,Y,38)=$PIECE($GET(^INVORGB(YM,YM,BETRIEB,1)),Y,9)
	. IF $PIECE(ART2,Y,38)="" SET $PIECE(ART2,Y,38)=1
	. $$$Log($$$Text("IN00961"))		//Getting DRP Item Group details
	
	;	D12		$$$INDRPSYSProcessOnlyItemsWithDRP()
	;+++++++++++++++++++++++++++++++++++++++
	IF $GET(BGJOB)=$$$YES IF ART2="" IF $PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,12)=$$$YES $$$Log($$$Text($lb("IN00962",BETRIEB))) QUIT  ;ARTIKEL NICHT ANGELEGT ;item Not //DRP details not defined for Location %1. Exiting...
	
	;BERECHTIGUNG PRÜFEN ;check authorisation
	;--------------------------------------- 
	;	D4		$$$INDRPPLANNERDisplaySupplyDemandPermit()
	SET ACCESS=$$^INDRPACCESS(BETRIEB,YBED) 
	IF $PIECE(ACCESS,Y,4)'=$$$YES WRITE "<hr><font COLOR="_YRED_"><b>"_$$^WWWTEXT(32809)_"</b></font><hr>" $$$Log($$^WWWTEXT(32809)) QUIT  ;KEINE BERECHTIGUNG ; "Incorrect Authorization Level"
	
	; RESPONSIBLE PLANNERS AND REPRESENTATIVE DETERMINING
	;-------------------------------------------------------------------------------
	;	D21		$$$INDRPPLANNERSubstitutedBy()
	;	D6		$$$INDRPITEMSPlanner()
	IF $GET(BGJOB)'=$$$YES DO  ;ZUSTÄNDIGE PLANER UND VERTRETER ERMITTELN
	. SET (USER(1),USER(2))=""
	. SET USER(1)=$PIECE(ART2,Y,6)  ;ZUSTÄNDIGER PLANER   Responsible Planner
	. IF USER(1)'="" DO
	. . SET USER(1)=$TRANSLATE(USER(1),";",",")
	. . FOR YU=1:1  QUIT:$PIECE(USER(1),",",YU,999)=""  DO
	. . . QUIT:$PIECE(USER(1),",",YU)=""
	. . . SET USER(2)=USER(2)_","_$PIECE($GET(^INDRPPLANNER(YM,BETRIEB,$PIECE(USER(1),",",YU),1)),Y,21)  ;VERTRETUNGSMITARBEITER
	
	IF '$DATA(^INDRPITEMS(YM,BETRIEB)) IF '$DATA(^INDRPITEM(YM,BETRIEB)) SET USER(1)=""   ;TYBD 20.1.2002
	
	; Current user is not in lists of users
	; & is not a system administrator or a background job
	; INVORGB		D9		$$$INVORGBSaleableItemDefault()
	IF $GET(BGJOB)'=$$$YES IF USER(1)'="" IF $PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,9)=$$$YES IF '$FIND(","_USER(1)_",",","_YBED_",") IF '$FIND(","_USER(2)_",",","_YBED_",") IF +$$^WWWBEDBER(YBED)'=1 DO  QUIT  ;NICHT DER ZUSTÄNDIGE PLANER ;Not the 
	. WRITE "<hr><font COLOR="_YRED_"><b>"_$$^WWWTEXT(32809)_"</b></font><hr>"  ;FALSCHE BERECHTIGUNG ; "Incorrect Authorization Level"
	. $$$Log($$^WWWTEXT(32809))
	
	;-------------------------------------------------------------------------------
	
	;SETZTEN BESTELLREGEL FÜR KATALOGARTIKEL AUF ZURÜCK FÜR ZURÜCK, DA INDIVIDUELLE SPEZIFIKATION
	SET KATALOG = $$$NO  ;1=KATALOGARTIKEL
	new strCatalog
	set strCatalog=$zconvert($TRANSLATE($PIECE(ART1,Y,1,14),Y_",.- 1234567890_#'+*`?=)(/&%$§!"),"U")
	IF (strCatalog="KATALOGARTIKEL") || (strCatalog="CATALOGITEM") || (strCatalog="CATALOGARTICLE") SET KATALOG = $$$YES
	IF KATALOG=$$$YES SET $PIECE(ART2,Y,8)="B"  ;BACK TO BACK
	
	; Order Time       ;BESTELLZEIT
	;---------------------------------------
	//SET LEADTIME=0
	
	SET LEADTIME=$$LEADTIME^INATP1(ART,BETRIEB) 
	$$$Log($$$Text($lb("IN00963",LEADTIME)))	//LeadTime : %1
	IF LEADTIME=0 SET LEADTIME = +$PIECE(ART2,Y,12)       ;DRP BESTELL-LAUFZEIT
	set idSupplier = $PIECE(ART2,Y,19)
	if idSupplier'="" {
		set objSup = $get(^INLIEF(YM,idSupplier,1))
		IF LEADTIME=0 	SET LEADTIME = $PIECE($GET(^INARTK(YM,ART,idSupplier,1)),Y,23)  ;ARTIKEL/LIEFERANT LIEFERZEIT
		IF LEADTIME=0 	SET LEADTIME = $PIECE(objSup,Y,46)      ;LIEFERANT LIEFERZEIT
		;set LEADTIME = LEADTIME + $$$INLIEFDemandTimeFenceInDays(objSup)  ; SR14823 ;SR15564;05-Jul-2007;new time phases logic
	}                                   ;FIS;08.02.05
	IF LEADTIME'=0 	SET LEADTIME = $HOROLOG+LEADTIME
	
	$$$Log($$$Text($lb("IN00964",LEADTIME,$select(LEADTIME'=0:$zdt(LEADTIME,3),1:""))))	//Calculated CutOff Date inc. LeadTime : %1  (%2)
 
	// vvvvvvvvvvv SR15564;05-Jul-2007;FIS; Supply Order Time Phase
	set intTimePhase      = $$$INDRPITEMSupplyTimePhase(ART2)           ;item time phase in days
	set dteTimePhaseStart = $$$INDRPITEMTimePhaseStartingFrom(ART2)     ;starting from date
	set dteTimePhaseEnd=""                                              ;DRP time phase for calculation
	/*if +intTimePhase=0 {
		set intTimePhase=$$$INDRPITEMSSupplyTimePhase(ART2)             ;item group time phase in days
		set dteTimePhaseStart=$$$INDRPITEMSTimePhaseStartingFrom(ART2)  ;starting from date
	}*/
	if +intTimePhase'=0 && (dteTimePhaseStart'>$horolog) {
		set dteTimePhaseEnd = $horolog + intTimePhase
		if $$$INDRPITEMSupplyTimePhase(ART2)'="" {
			set dteTimePhaseEnd = dteTimePhaseEnd - ((dteTimePhaseEnd-dteTimePhaseStart)#intTimePhase)
		}
	}
	// ^^^^^^^^^^
	
	/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\
	;                  Item No   [            ]       Item Name
	;                  Lead Time [            ] Forecast [   ] Days
	; Location (Date Time)                                                                     INDRPRUN3
	;-----------------------------------------------------------------------------------------
	; Item:                     Edit DRP/MRP-Item Master                                       INDRPRUN3
	;
	; Planner:					Order Policy:				 Cumulative Lead Time:             INDRPRUN3
	; Item Status:				Procurement Code:			 Entire Run Time:
	; Valid For Sale From:		Safety Stock:				 Safety Days For Planning Lead Time:
	; Unit of Measure:			Minimum Order Quantity:		 Negative ATP Inside Lead-Time:
	; ABC Category:				Maximum Order Quantity:		 Negative ATP Outside Lead-Time:
	; Issue Month Ø :			Re-Order Point:				 ATP Supply Status Cut-Off:
	; DRP Run ID:				Std. Pack Quantity:			 Saleable Item :
	; Process Handling:			Multiple Order Qty Allowed:	 Inventory Checked On :
	; Last Run On:				Order Impact In %:			 Inventory Checked By :
	; Process Info:				Impact According To Formula:
	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	;            |              Supply               |                 Demand                ; INDRPRUN1
	;----------------------------------------------------------------------------------------;
	;PAB|CPAB|ATP|Qty|DueDt|Type|IDNo|EntryDt|ELP|Sta|Qty|DueDt|Type|IDNo|EntryDt|ELP|Sta|Msg; INDRPRUN1
	;----------------------------------------------------------------------------------------;
	;   |    |   |   |     |    |    |       |   |   |   |     |    |    |       |   |   |   ; INDRPRUN4    Opening Balances
	;---+----+---|---+-----+----+----+-------+---+---|---+-----+----+----+-------+---+---+---;        (Blank INDRPRUN2)
	;   |    |   |   |     |    |    |       |   |   |   |     |    |    |       |   |   |   ; INDRPRUN5
	;---+----+---|---+-----+----+----+-------+---+---|---+-----+----+----+-------+---+---+---;        (Blank INDRPRUN2)
	;   |    |   |   |     |    |    |       |   |   |   |     |    |    |       |   |   |   ;  ...
	;---+----+---|---+-----+----+----+-------+---+---|---+-----+----+----+-------+---+---+---;
	;   |    |   |   |     |    |    |       |   |   |   |     |    |    |       |   |   |   ;  ...
	;========================================================================================;
	;   |    |   |xxx|xxxxx|    |    |       |   |   |   |     |    |    |       |   |   |   ; INDRPRUN9    Totals
	;========================================================================================;
	;   |    |   |   |xxxxx|    |    |       |   |   |   |     |    |    |       |   |   |   ; INDRPRUN9    Totals
	\+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
	
	;ARTIKELANZEIGE
	IF ART'="" DO
	. QUIT:$GET(BGJOB)=$$$YES
	. $$$Log($$$Text("IN00965"))		//Display DRP Item Settings
	. DO ^INDRPRUN3              ; Display item information above Supply/Demand Table
	
	;KILL ^WWWSOR(YUSER,"0")
	;KILL ^WWWSOR(YUSER,"RMA")
	;DO SORT
	;DO DRUCK
	;KILL ^WWWSOR(YUSER,"0")
	;KILL ^WWWSOR(YUSER,"RMA")
	
	/*--------------------------------------
	;	  OrderPolicy
	;	B	Back To Back
	;	D	Discrete
	;	L	Lot For Lot
	;	O	Order To Order
	;	P	Period Order Quantity
	;	Q	Order To Requirement	<
	;	R	Re-order Point
	;	S	Fixed Lot Size
	;-------------------------------------*/
 
	set idPolicy = $$$INDRPITEMOrderPolicy(ART2)
 
	if ($GET(BGJOB)=$$$YES) && (idPolicy="Q") {		// New "Q" rule for Adrad during bg job
		do RUNEND(0)
		
		if $PIECE($GET(^INDRPITEMRUN(YM,BETRIEB,ART,1)),Y,1)<$HOROLOG {
			if (+$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,46)'=1) || (+$PIECE($GET(^INDRPITEMRUN(YM,BETRIEB,ART,1)),Y,1)=0) {
				do RUNEND(1)
			} else {
 
				$$$Log($$$Text("IN00966"))			//SR16397		//Runtime not yet reached
		
			}
		}
	} else {
		do RUNEND()		//Default
	}
	
	quit
	
RUNEND(YRULEQ="")	private
	KILL ^WWWSOR(YUSER,"0")
	KILL ^WWWSOR(YUSER,"RMA")
	DO SORT
	DO DRUCK
	KILL ^WWWSOR(YUSER,"0")
	KILL ^WWWSOR(YUSER,"RMA")
	QUIT
	
SORT
    ;--------------------------------------------------------------------------------
    ;	SUCHEN DEMAND UND SUPPLY   !! ACHTUNG !!  ÄNDERUNGEN GGF. AUCH IN NEBEN
    ;	SEarch for Demand and Supply
    ;
	;	TYPE:
	;	 1=DEMAND/NACHFRAGE
	;	 2=SUPPLY/ANGEBOT
	;	12=DEMAND+SUPPLY (EIGENFERTIGUNG)
    ;
    ; Returns:
    ;
    ; History:
    ; 21-Feb-2007	GRF		SR15347: Removed original code per notes as this SR is now complete.
    ; 09-Jan-2007	JW		SR15347: Rewrote - moved to Sort^INDRPRUNSort
    ; 26-Sep-2006	RPW		SR14933: if we are coming from the sale, only look at the
    ; 						exact INAUF and INDRPDEMAND's.
    ; 08-Sep-2006	PO		SR14803: Use macros
    ; 31-Aug-2006	JW		SR14909: Set receipt qty to 0 after partial receipt.
    ; 10-Jul-2006	FIS		SR14769: Make sure the Demand and Supplies exist, and create them if not.
    ; 06-Jan-2005	RPW		SR14085: Due to a possible error with order processing
    ; 						the Item Back To Stock field may not always be set on an 
    ; 						INAUFP. Made a change to handle this as it is causing DRP process
    ; 						to crash at ADRAD.
    ; 23-Dec-2005	RPW		SR14085: Do not show Expected Returns that are not in blocked locations
    ; 25-Nov-2005	JW		SR13920: Do not show demands that have been transferred.
    ; 15-Nov-2005	PO		SR13854: DRP was not considering outstanding qty with
    ; 						partial receipt of inter warehouse transfer
    ;---------------------------------------------------------------------------------
	if ART'="" {
		$$$Log($$$Text("IN00967"))	//Reviewing Supplies and Demands
		do Sort^INDRPRUNSort(ART,BETRIEB)
	}
	quit
	
DRUCK
    ;-------------------------------------------------------------------------------
	;BERECHNEN UND ANZEIGEN ;calculate And display 
	;
	; CAUTION : If converting to brace format be aware that BESTAND is newed inside DO
	;           level which ***WILL*** affect previously set value if not handled correctly.
	;           
	; NOTE : Depending on WHERE it is used, BESTAND can be based on INARTMENGE type 2
	;        (for INDRPRUN4 and INDPRRUN6) or type 1 (for INDRPRUN4).
	;
	; History :
	; 28-May-2008	GRF		SR15776: replace INARTMENGE call with equivalent entry point
	; 09-Jul-2007	FIS		SR15564: order time phases
	; 15-Aug-2005	PPP		SR14823: If Supplier Exists add the Demand Time Fence
	; 							to the Lead Time
	; 16-Jun-2005	MS		SR12549: $o(^WWWSOR(YUSER...) was not including 2nd subscript
    ;-------------------------------------------------------------------------------*/
	new idx,objSup
	
	SET YDDSATZ = 0   ;VARIABEL ZUR HELL DUNKELSCHALTUNG 
	SET YIZ     = 0   ;ZÄHLER FÜR DRP-INFORMATIONSDATEI 
	SET DEMQTY  = 0   ;QTY OF DEMANDS
	
	;LAGERBESTAND
	SET BESTAND=0
	IF ART'="" SET BESTAND=$$^INARTMENGE(ART,,BETRIEB,,2)    ;BALANCE ON HAND (BOH) (FREIE MENGE + AUFTRAGSMENGE) ;manual quantity 
	SET CBESTAND = BESTAND                                   ;CRITICAL BALANCE ON HAND ;manual
	SET KBESTAND = ""                                        ;KLEINSTER NOTWENDIGER BESTAND
	SET SEPERATE = 0                                         ;QTY WHICH SHOULD NOT BE PART OF AGGREGATED ORDER
 ;	SET ATPMENGE = $$^INARTMENGE(ART,,BETRIEB,,0,,1)         ;AVAILABLE TO PROMISE (NUR FREIE MENGE) ; SR15776
	SET ATPMENGE = $$AvailToPromise^INARTMENGE(ART,BETRIEB)  ;AVAILABLE TO PROMISE (NUR FREIE MENGE)
	SET RMAMENGE = $$^INARTRMA(ART,BETRIEB)                  ;OFFENE RMA
	SET RMAMENGE = RMAMENGE+$GET(^WWWSOR(YUSER,"RMA"))       ;RÜCKNAHMEN AUS AUFTRÄGEN ;out of 
 
	$$$Log($$$Text("IN00968"))		//Processing Supplies and Demands
	$$$Log($$$Text($lb("IN00969",BESTAND,CBESTAND,ATPMENGE)))		//PAB:%1, CPAB:%2, ATP:%3
	
	;SUMMEN/ZWISCHENSUMMEN
	SET MENGE(1) =0
	SET MENGE(2) =0
	SET ZMENGE(1)=0
	SET ZMENGE(2)=0
	
	;FARBEN FESTLEGEN
	SET COLOR(1)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,7)   ;LINIENFARBE ZWISCHENSUMME ;subtotal 
	SET COLOR(2)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,6)   ;ANZEIGEFARBE GELÖSCHTER VORGÄNGE
	SET COLOR(3)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,5)   ;ANZEIGEFARBE UNBESTÄTIGTER VORGÄNGE
	SET COLOR(4)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,8)   ;ANZEIGEFARBE SIMULATION
	SET COLOR(5)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,38)  ;ANZEIGEFARBE BESTELLZEIT (LEAD-TIME)
	SET COLOR(6)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,40)  ;ANZEIGEFARBE RESERVIERTE LAGERBESTELLUNGEN
	for idx=1:1:6 IF COLOR(idx)'="" SET COLOR(idx)=$PIECE($GET(^WWW100(0,"FARBE",SPRACHE,COLOR(idx),1)),Y,1)
	
	;BESTÄTIGTE VORGÄNGE
	SET BEACHTEN=1  ;ALLE VORGÄNGE BEACHTEN ;watch out for 
	IF $$$INDRPSYSCPABOnlyConfirmedSupplies($GET(^INDRPSYS(YM,BETRIEB,1)))=$$$YES SET BEACHTEN=0  ;NUR BESTÄTIGTE VORGÄNGE
	
	;DRUCK ;printing 
	DO ^INDRPRUN1
	SET ANZM=0
	SET ZSUMANZ=""
	IF +VORG(4)'=0 SET ZSUMANZ=$HOROLOG+VORG(4)   ;MIT DATUM ANZEIGEN;FIS;07.02.05;26432
	SET START=$ORDER(^WWWSOR(YUSER,"0",""))       ;SR12549 - was missing the middle subscript of "0", added this is MS.
	IF START<$HOROLOG SET START=+$HOROLOG
	SET STOP=9999999                              ;ENDLOS ;unending 
	
	;ANZEIGESTOP/BERECHNUNGSDAUER FESTLEGEN
	DO
	. IF $GET(BGJOB)'=$$$YES QUIT:+VORG(2)=0
	. if +$get(dteTimePhaseEnd)'=0 set STOP=dteTimePhaseEnd quit  ;SR15564;09-Jul-2007;FIS;order time phases
	. QUIT:ART2=""              ;ARTIKEL NICHT IM DRP ANGELEGT ;item Not DRP 
	. SET STOP=START+VORG(2)    ;ANZEIGESTOP/BERECHNUNGSSTOP
	. SET $$$INDRPITEMCumulativeLeadTime(ART2)=$$LEADTIME^INATP1(ART,BETRIEB)  ;FIS;25.04.05;SR12200
	. IF +$$$INDRPITEMCumulativeLeadTime(ART2)'=0 IF $$$INDRPITEMCumulativeLeadTime(ART2)+$HOROLOG>STOP SET STOP=$PIECE(ART2,Y,11)+$HOROLOG  ;MINDESTENS BESTELLZEIT (SILT = SALE ITEM LEAD-TIME)
	. IF $$$INDRPITEMSupplierOfStockOrder(ART2)'="" DO  ;KALENDER FÜR BESTELLZEIT BERÜCKSICHTIGEN;FIS;24406;04.11.03
	. . SET STOP=START+$$^INTAGEPLUS(START,STOP,BETRIEB,1,$$$INDRPITEMSupplierOfStockOrder(ART2))  ;PLUS WOCHENENDE UND FEIERTAGE ;plus weekend And public holidays
	. . ;if $piece(ART2,Y,19)'="" set objSup=$get(^INLIEF(YM,$piece(ART2,Y,19),1)),STOP=STOP+$$$INLIEFDemandTimeFenceInDays(objSup)  ; SR14823  ;SR15564;09-Jul-2007;FIS;new time fence logic
	. ;
	. ;IF $PIECE(ART2,Y,85)'="" SET STOP=STOP+$PIECE(ART2,Y,85) QUIT  ;ZZGL. SICHERHEITSTAGE LT. ARTIKEL/WG  ;ALREADY IN INATP1;FIS;16.06.05;SR12549
	. ;SET STOP=STOP+$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,34)  ;SICHERHEITSTAGE DFLT. ;ALREADY IN INATP1;FIS;16.06.05;SR12549
	
	$$$Log($$$Text($lb("IN00970",TOP,$select(STOP'=9999999:$zdt(STOP,3),1:""))))	//Horizon : %1 (%2)
 
	;---------------------------
	NEW DRPID2,LASTDAT  ;TYBD;27,5,2004; WAR NICHT GENEWED   ; was not newed
	
	SET DAT=""
	FOR  SET DAT=$ORDER(^WWWSOR(YUSER,"0",DAT)) QUIT:DAT=""  QUIT:DAT>STOP  DO  ;NUR BIS STOP !!! ;only until 
	. SET UHR=""
	. FOR  SET UHR=$ORDER(^WWWSOR(YUSER,"0",DAT,UHR)) QUIT:UHR=""  DO
	. . SET DRPID=""
	. . FOR  SET DRPID=$ORDER(^WWWSOR(YUSER,"0",DAT,UHR,DRPID)) QUIT:DRPID=""  DO
	. . . SET SATZ=$GET(^WWWSOR(YUSER,"0",DAT,UHR,DRPID))
	. . . SET LASTDAT=DAT
	. . . IF $PIECE(SATZ,Y,70)=9 IF VORG(3)'=$$$YES QUIT  ;don't show forecasts
	. . . IF $PIECE(SATZ,Y,70)=9 IF $GET(BGJOB)=$$$YES IF $PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,32)'=$$$YES QUIT  ;don't calculate with forecasts
	. . . ;	D10		$$$INDRPPLANNERDisplaySimulationDemands()
	. . . IF $PIECE(SATZ,Y,70)=9 IF $PIECE(ACCESS,Y,10)'=$$$YES QUIT  ;KEINE BERECHTIGUNG FÜR SIMULATIONEN ;no to 
	. . . IF ZSUMANZ="" SET ZSUMANZ=DAT   ;START SETZEN FÜR ZWISCHENSUMME ;take-off typeset to subtotal 
	. . . SET ID   = $PIECE(DRPID,"#",1)  ;ID-NUMMER
	. . . SET TYPE = $PIECE(DRPID,"#",2)  ;TYPE: 1=DEMAND 2=SUPPLY
	. . . SET SATZ(TYPE) = SATZ
	. . . ;
	. . . $$$Log($$$Text($lb("IN00971",ID,TYPE,$$Verbose^INDRPRUNLog(TYPE,SATZ))))	//Processing %1 Type (%2) : [%3]
	. . . ;
	. . . ;PRÜFEN ZUGEHÖRIGKEIT DES NÄCHSTEN DATENSATZES FÜR ANZEIGE IN GLEICHER ZEILE ;check to Show within same 
	. . . SET DRPID2=$ORDER(^WWWSOR(YUSER,"0",DAT,UHR,DRPID))
	. . . ;
	. . . IF DRPID2=""                DO ANZ QUIT  ;KEIN WEITERER DATENSATZ ;no data record 
	. . . IF $PIECE(DRPID2,"#",1)'=ID DO ANZ QUIT  ;NICHT GLEICHE ID-NUMMER ;Not same 
	. . . ;
	. . . IF TYPE=1 SET SATZ(2)=$GET(^WWWSOR(YUSER,"0",DAT,UHR,DRPID2))
	. . . IF TYPE=2 SET SATZ(1)=$GET(^WWWSOR(YUSER,"0",DAT,UHR,DRPID2))
	. . . IF $PIECE(SATZ(1),Y,1)'=$PIECE(SATZ(2),Y,1) DO ANZ QUIT  ;NICHT GLEICHER BETRIEB ;Not same location 
	. . .;
	. . .;IF $PIECE(SATZ(1),Y,2)'=$PIECE(SATZ(2),Y,2) DO ANZ QUIT  ;NICHT GLEICHER AUFTRAG (ELP)
	. . . ;
	. . . SET TYPE=12  ;DEMAND + SUPPLY
	. . . DO ANZ
	. . . SET DRPID=DRPID2
	
	IF $GET(BGJOB)'=$$$YES DO
	. NEW SUMDAT,BESTAND                     ; see CAUTION
	. SET YDDSATZ=YDDSATZ+1
	. SET SUMDAT=ZSUMANZ
	. IF +VORG(2)'=0 IF ZSUMANZ>(START+VORG(2)) SET SUMDAT=(START+VORG(2))  ;ANZEIGESTOP
	. ;IF ZMENGE(1)!(ZMENGE(2))'=0 DO ^INDRPRUN9(ZMENGE(1),ZMENGE(2),0,SUMDAT)
	. IF +VORG(4)'=0 DO
	. . DO ^INDRPRUN9(ZMENGE(1),ZMENGE(2),1,SUMDAT)  ;MIT DATUM ANZEIGEN;FIS;07.02.05;26432
	. . SET YDDSATZ=YDDSATZ+1
	. ;
	. IF +VORG(2)'=0 SET SUMDAT=(START+VORG(2))  ;ANZEIGESTOP
	. ;IF MENGE(1)!(MENGE(2))'=0 DO ^INDRPRUN9(MENGE(1),MENGE(2),1,SUMDAT)
	. DO ^INDRPRUN9(MENGE(1),MENGE(2),1,SUMDAT)                     ; Display totals line  ;MIT DATUM ANZEIGEN;FIS;07.02.05;26432
	. IF +LEADTIME'=0 IF $GET(LASTDAT)'="" IF LASTDAT'>LEADTIME DO  ;SHOW LEADTIME;FIS;05.05.05
	. . SET YDDSATZ=YDDSATZ+1
	. . DO ^INDRPRUN9(,,,LEADTIME,1)
	. ;
	. IF ANZM=0 DO
	. . IF ART="" DO ^INDRPRUN2 QUIT
	. . SET BESTAND=$$^INARTMENGE(ART,,BETRIEB,,1)
	. . SET YDDSATZ=YDDSATZ+1
	. . DO ^INDRPRUN4
	. ;
	. DO ^WWWFRAME(1)   ;TABLE AUS ;out of 
	. ;
	. IF $DATA(^INARTA(YM,ART)) DO    ;BEC;25255;03.03.04;anzeigen alternativartikel
	. . NEW ART1,TXT,ART11,VALID
	. . SET TXT=$PIECE($GET(^WWW120(0,"INARTA",1)),Y,1)
	. . IF $DATA(^WWW1201(0,"INARTA",SPRACHE)) IF $PIECE($GET(^WWW1201(0,"INARTA",SPRACHE,1)),Y,1)'="" DO
	. . . SET TXT=$PIECE(^WWW1201(0,"INARTA",SPRACHE,1),Y,1)      ; 04-Sep-2006
	. . WRITE "<B>"_TXT_":</B><BR>"
	. . SET ART1=""
	. . FOR  SET ART1=$ORDER(^INARTA(YM,ART,ART1)) QUIT:ART1=""  DO
	. . . SET ART11=$GET(^INARTA(YM,ART,ART1,1))
	. . . SET VALID=1
	. . . IF $PIECE(ART11,Y,2)'="" IF $PIECE(ART11,Y,2)>$HOROLOG SET VALID=0
	. . . IF $PIECE(ART11,Y,3)'="" IF $PIECE(ART11,Y,3)<$HOROLOG SET VALID=0
	. . . IF VALID=0 WRITE "<FONT COLOR="_YRED_">"
	. . . WRITE ART1_" "_$$^INARTNAME(ART1)
	. . . IF $PIECE(ART11,Y,1)'="" DO
	. . . . WRITE " q("_$EXTRACT($PIECE(ART11,Y,1),1,35)
	. . . . IF $EXTRACT($PIECE(ART11,Y,1),36,38)'="" WRITE "..."
	. . . . WRITE ")"
	. . . ;
	. . . IF VALID=0 WRITE "</FONT>"
	. . . IF $ORDER(^INARTA(YM,ART,ART1))'="" WRITE "<BR>"
	
	;PRÜFEN BESTAND OB WARENBESCHAFFUNG NOTWENDIG ;check whether needful
	SET TYPE=""  ;FIS;25.04.05;SR12200
	;IF $PIECE(ART2,Y,8)'="O" IF $PIECE(ART2,Y,8)'="B" DO ^INDRPRUN6  ;BESTELLREGEL !
	
	IF idPolicy'="O" IF idPolicy'="B" IF idPolicy'="Q" $$$Log($$$Text($lb("IN00972",idPolicy))) DO ^INDRPRUN6  ;BESTELLREGEL !  ;FIS;25.04.05;SR12200	//Stock Requirement for Policy %1
	IF idPolicy="Q" DO  ;FIS;26.04.05;SR12200
	. ;IF $PIECE($GET(^INDRPITEMRUN(YM,BETRIEB,ART,1)),Y,1)'<$HOROLOG QUIT  ;ONLY ONCE PER DAY !
	. QUIT:$GET(YRULEQ)'=1  ;ONLY STOCK REQUIREMENT RUN;FIS;28.04.05;SR12200
	. ;SET BESTAND=(BESTAND+SEPERATE)  ;SHOULD REDUCE QTY OF DEMANDS, BECAUSE THEY GETTING CREATED SEPERATELLY. PROBLEM: IF RUNNING ONLY ONCE PER DAY, SUPPLY QTY WOULD BE TOO LESS
	. $$$Log($$$Text($lb("IN00972",idPolicy)))		//Stock Requirement for Policy %1
	. DO ^INDRPRUN6 
	
	QUIT
	
ANZ ;ANZEIGE SUCHERGEBNIS ;Show 
	SET ANZM    = ANZM+1
	SET YDDSATZ = YDDSATZ+1
	SET YIZ     = YIZ+1
	IF $FIND(TYPE,1) SET DEMQTY = DEMQTY+1  ;QTY OF DEMANDS
	SET SATZ    = ""
	
	;STATUS PRÜFEN, BESCHREIBUNG HOLEN UND STATUS SPEICHERN
	FOR YS=1,2 DO
	. NEW SYSVORG
	. SET STATUS(YS)=""      ;(STATUS_"#"_LAUFZEITPRÜFUNG)
	. SET STATUSTEXT(YS)=""  ;(KÜRZEL_;_BESCHREIBUNG)
	. I]]><![CDATA[F $FIND(TYPE,YS) DO
	. . SET STATUS(YS)=$$^INDRPSTATUS($$$INDRPDEMANDDemand(SATZ(YS)),BETRIEB,ID,DAT,BESTAND)  ;AUFTRAG UND MANUELLLE ;order And 
	. . QUIT:STATUS(YS)=""
	. . ;
	. . IF $PIECE(STATUS(YS),"#",1)<90 DO
	. . . SET SYSVORG="13,14,15,16,17,18,19"
	. . . SET STATUSTEXT(YS)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,$PIECE(SYSVORG,",",$EXTRACT(STATUS(YS),1)))  ;1.STELLE (10,20,30...)
	. . IF $PIECE(STATUS(YS),"#",1)'<90 DO
	. . . SET SYSVORG="20,21,22,23"
	. . . SET STATUSTEXT(YS)=$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,$PIECE(SYSVORG,",",$EXTRACT(STATUS(YS),2)+1))  ;2.STELLE (90,91,92...)
	. . QUIT:STATUSTEXT(YS)=""
	. . ;
	. . IF YS=1 IF $PIECE(SATZ(1),Y,9)="D" IF $DATA(^INDRPDEMAND(YM,BETRIEB,ID,1)) DO
	. . . IF $FIND(STATUSTEXT(YS),";") SET $PIECE(^INDRPDEMAND(YM,BETRIEB,ID,1),Y,73)=$PIECE(STATUSTEXT(YS),";",2) QUIT  ;SPEICHERN STATUS      ; 04-Sep-2006
	. . . SET $PIECE(^INDRPDEMAND(YM,BETRIEB,ID,1),Y,73)=STATUSTEXT(YS)  ;SPEICHERN STATUS ;Save Status       ; 04-Sep-2006
	. . IF YS=2 IF $PIECE(SATZ(2),Y,9)="S" IF $DATA(^INDRPSUPPLY(YM,BETRIEB,ID,1)) DO
	. . . IF $FIND(STATUSTEXT(YS),";") SET $PIECE(^INDRPSUPPLY(YM,BETRIEB,ID,1),Y,73)=$PIECE(STATUSTEXT(YS),";",2) QUIT  ;SPEICHERN STATUS      ; 04-Sep-2006
	. . . SET $PIECE(^INDRPSUPPLY(YM,BETRIEB,ID,1),Y,73)=STATUSTEXT(YS)  ;SPEICHERN STATUS ;Save Status       ; 04-Sep-2006
	
	;INFO-MELDUNG GENERIEREN WENN LAUFZEIT ÜBERSCHRITTEN IST ;Info-Message generates if Run Time Check is exceeded.
	IF $GET(BGJOB)=$$$YES FOR YS=1,2 DO
	. NEW INFOTEXT,XSPRACHE,REGEL,MITARB,MITARB2,PRIO
	. ;
	. SET XSPRACHE=SPRACHE
	. IF $PIECE($PIECE(ART2,Y,6),";",1)'="" SET SPRACHE=$PIECE($GET(^WWW013(0,$PIECE($PIECE(ART2,Y,6),";",1),1)),Y,6)  ;SPRACHE
	. IF SPRACHE=""    SET SPRACHE=XSPRACHE
	. IF STATUS(YS)="" SET SPRACHE=XSPRACHE QUIT
	. IF $PIECE(STATUS(YS),"#",2)=0 DO  ;LAUFZEIT ÜBERSCHRITTEN
	. . QUIT:$PIECE(STATUS(YS),"#",1)=93  ;ERLEDIGT
	. . ;
	. . IF YS=1 SET INFOTEXT=$$^WWWTEXT(32612)_": "_ID  ;DEMAND ID
	. . IF YS=2 SET INFOTEXT=$$^WWWTEXT(32614)_": "_ID  ;SUPPLY ID
	. . SET INFOTEXT=INFOTEXT_" "_$$^WWWTEXT(32024)_": "_$PIECE(SATZ(YS),Y,4)  ;ARTIKEL ;item 
	. . SET INFOTEXT=INFOTEXT_" "_$$^WWWTEXT(32781)_": "_$PIECE(STATUSTEXT(YS),";",1)  ;STATUS
	. . IF $PIECE(STATUSTEXT(YS),";",2)'="" SET INFOTEXT=INFOTEXT_" ("_$PIECE(STATUSTEXT(YS),";",2)_")"  ;BESCHREIBUNG
	. . IF +$PIECE(SATZ(YS),Y,5)'=0 SET INFOTEXT=INFOTEXT_" "_$$^WWWTEXT(32025)_": "_$PIECE(SATZ(YS),Y,5)  ;MENGE;QTY;TYBD;25.1.2005;27231
	. . ;MELDUNGSREGELN
	. . SET MITARB=$PIECE($PIECE(ART2,Y,6),";",1)  ;1.ZUSTÄNDIGER MITARBEITER LT. ARTIKELSTAMM
	. . SET MITARB2=""
	. . SET PRIO=$PIECE(SATZ(YS),Y,71)  ;PRIORITÄT ;priority 
	. . IF '$DATA(^INDRPMELDUNG(YM,BETRIEB,$PIECE(STATUS(YS),"#",1),1)) IF $PIECE(STATUS(YS),"#",1)<90 SET INFOTEXT=INFOTEXT_" "_$$^WWWTEXT(32783)_" !"  ;überfällig ;past due 
	. . IF $DATA(^INDRPMELDUNG(YM,BETRIEB,$PIECE(STATUS(YS),"#",1),1)) DO
	. . . SET REGEL=$GET(^INDRPMELDUNG(YM,BETRIEB,$PIECE(STATUS(YS),"#",1),1))
	. . . IF $PIECE(REGEL,Y,2)'=1  SET MITARB="" QUIT            ;KEINE MELDUNG ;no status signal 
	. . . IF $PIECE(REGEL,Y,3)'="" SET MITARB=$PIECE(REGEL,Y,3)  ;MELDUNG AN MITARBEITER ;status signal upon 
	. . . SET MITARB2=$PIECE(REGEL,Y,4)                          ;KOPIE AN MITARBEITER ;copy upon 
	. . . SET PRIO=$PIECE(REGEL,Y,5)
	. . . SET INFOTEXT=INFOTEXT_" "_$PIECE(REGEL,Y,1)  ;MELDUNGSTEXT
	. . ;
	. .;IF MITARB'=""  DO ^INDRPWV(INFOTEXT,MITARB,YS,ID,$PIECE(SATZ(YS),Y,4),PRIO)    ;TEXT,MITARBEITER,TYP,ID,ARTIKEL,PRIORITÄT
	. .;IF MITARB2'="" DO ^INDRPWV(INFOTEXT,MITARB2,YS,ID,$PIECE(SATZ(YS),Y,4),PRIO)   ;KOPIE ;copy 
 	. . IF MITARB'=""  DO ^INDRPWV(INFOTEXT,MITARB,$PIECE(STATUS(YS),"#",1),ID,$PIECE(SATZ(YS),Y,4),PRIO)   ;TEXT,MITARBEITER,TYP,ID,ARTIKEL,PRIORITÄT
 	. . IF MITARB2'="" DO ^INDRPWV(INFOTEXT,MITARB2,$PIECE(STATUS(YS),"#",1),ID,$PIECE(SATZ(YS),Y,4),PRIO)  ;KOPIE ;copy 
	. ;
	. SET SPRACHE=XSPRACHE
	
	;LEISTUNG ;performance 
	SET LEISTUNG=0
	DO
	. FOR ME=2,10,11,15,16,17 IF $PIECE(SATZ($EXTRACT(TYPE)),Y,52)=ME SET LEISTUNG=1 QUIT  ;ME = DAUER ;permanence 
	. IF $PIECE(SATZ($EXTRACT(TYPE)),Y,4)'="" IF $PIECE($GET(^INART(YM,$PIECE(SATZ($EXTRACT(TYPE)),Y,4),1)),Y,26)=2 SET LEISTUNG=1
	
	;ZWISCHENSUMME ;subtotal 
	IF +VORG(4)'=0 DO
	. IF DAT'<ZSUMANZ DO  ;ANZEIGEDATUM ERREICHT
	. . DO  ;ZWISCHENSUMME ;subtotal 
	. . . QUIT:COLOR(1)=""  ;KEINE ZWISCHENSUMME ERWÜNSCHT ;no subtotal 
	. . . QUIT:DAT'>$HOROLOG  ;NUR ZUKÜNFTIGE VORGÄNGE ;only 
	. . . DO ^INDRPRUN9(ZMENGE(1),ZMENGE(2),0,ZSUMANZ)  ;MIT DATUM ANZEIGEN;FIS;07.02.05;26432 ;WITH DATE ANNOUNCEMENTS
	. . . SET YDDSATZ=YDDSATZ+1
	. . ;
	. . ;SET ZSUMANZ=ZSUMANZ+(DAT-ZSUMANZ)  ;ERMITTELN NÄCHSTES ANZEIGEDATUM ;find 
	. . FOR  QUIT:ZSUMANZ>DAT  DO
	. . . SET ZSUMANZ=ZSUMANZ+VORG(4)
 
	;BESTANDSVERÄNDERUNGEN ;INVENTORY ALTERATIONS
	SET ATPTEMP=0  ;ATP QTY PER LINE
 
	IF LEISTUNG'=1 DO  ;LAGERBESTAND NICHT BEI LEISTUNG ;STOCK NOT WITH ACHIEVEMENT
	. IF ANZM=1 DO ^INDRPRUN4  ;LAGERBESTAND ANZEIGEN UND MERKEN ;STOCK ANNOUNCEMENTS AND NOTICING
	. IF $FIND(TYPE,2) DO  ;SUPPLY
	. . QUIT:$PIECE(SATZ(2),Y,98)=1  ;BESTANDSVERÄNDERUNG (AUSSER WENN GELÖSCHT) ;change in stock when 
	. . IF ($PIECE(STATUS(2),"#",1)=91)!($PIECE(STATUS(2),"#",1)=92)!($PIECE(STATUS(2),"#",1)=93) QUIT  ;GELÖSCHT ODER STORNIERT ;Or 
	. . SET BESTAND=BESTAND+$PIECE(SATZ(2),Y,5)  ;PAB // SR15366
	. . ;DO  // The two if statements below do nothing
	. . . ;IF $PIECE(STATUS(2),"#",1)<30 QUIT:BEACHTEN=0  ;UNBESTÄTIGTE ANGEBOTE NICHT BEACHTEN
	. . . ;IF $PIECE(STATUS(2),"#",1)=90 QUIT:BEACHTEN=0  ;GESPERRT ;DISABLED 
	. . . IF $PIECE(STATUS(2),"#",1)<30 QUIT  ;UNBESTÄTIGTE ANGEBOTE NICHT BEACHTEN ;FIS;FÜR CPAB NIE ZÄHLEN WENN UNBESTÄTIGT;07.02.05;26299
	. . . IF $PIECE(STATUS(2),"#",1)=90 QUIT  ;GESPERRT ;DISABLED                   ;FIS;FÜR CPAB NIE ZÄHLEN WENN GESPERRT   ;07.02.05;26299
	. . . ;SET CBESTAND=CBESTAND+$PIECE(SATZ(2),Y,5)  ;KRITISCHER BESTAND (CPAB);FIS;27.04.05;SR12200
	. . ;
	. . DO
	. . . NEW CUTOFF
	. . . SET CUTOFF=+$PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,37)  ;FÜR ATP BERECHNUNG NOTWENDIGER STATUS EINER LF-BESTELLUNG ;to ATP Status unit 
	. . . IF CUTOFF=4 QUIT  ;WIRD ERST DURCH WE BERÜCKSICHTIGT ;only trans- In 
	. . . IF CUTOFF=2 QUIT:$PIECE(STATUS(2),"#",1)<20  QUIT:$PIECE(STATUS(2),"#",1)=90  ;NOCH NICHT BESTELLT  ;yet Not 
	. . . IF CUTOFF=3 QUIT:$PIECE(STATUS(2),"#",1)<30  QUIT:$PIECE(STATUS(2),"#",1)=90  ;NOCH NICHT BESTÄTIGT ;yet Not 
	. . . IF CUTOFF=1 QUIT:$PIECE(STATUS(2),"#",1)=90                                   ;NOCH NICHT FREIGEGEBEN ;yet Not 
	. . . IF $PIECE(SATZ(2),Y,9)="05" QUIT                           ;KUNDENAUFTRAG MIT LAGERBESTELLUNG ;customer´s order by means of 
	. . . IF TYPE'=12 SET ATPMENGE = ATPMENGE + $PIECE(SATZ(2),Y,5)  ;22.10.03;24420;ATP  ;11.10.04;FIS;26547;NOT IF CUSTOMER AND PURCHASE ORDER // SR15366
	. . . IF TYPE'=12 SET ATPTEMP  = ATPTEMP  + $PIECE(SATZ(2),Y,5)  ;16.12.03;24420;ATP  ;11.10.04;FIS;26547;NOT IF CUSTOMER AND PURCHASE ORDER
	. . ;
	. . IF +VORG(2)'=0 QUIT:DAT>(START+VORG(2))        ;ANZEIGESTOP
	. . SET ZMENGE(2) = ZMENGE(2)+$PIECE(SATZ(2),Y,5)  ;ADDITION FÜR ZWISCHENSUMME ;addition to subtotal 
	. . SET MENGE(2)  = MENGE(2) +$PIECE(SATZ(2),Y,5)  ;ADDITION FÜR ZWISCHENSUMME ;addition to subtotal 
	. ;
	. ; DEMAND
	. ;-------------------------------------
	. IF $FIND(TYPE,1) DO
	. . QUIT:$PIECE(SATZ(1),Y,98)=1  ;BESTANDSVERÄNDERUNG (AUSSER WENN GELÖSCHT) ;change in stock when 
	. . IF ($PIECE(STATUS(1),"#",1)=91)!($PIECE(STATUS(1),"#",1)=92)!($PIECE(STATUS(1),"#",1)=93) QUIT  ;GELÖSCHT ODER STORNIERT ;Or 
	. . IF $PIECE(STATUS(1),"#",1)=90 QUIT:BEACHTEN=0      ;GESPERRT ;DISABLED
	. . SET BESTAND  = BESTAND  - $PIECE(SATZ(1),Y,5)      ;PAB // SR15366
	. . SET CBESTAND = CBESTAND - $PIECE(SATZ(1),Y,5)      ;KRITISCHER BESTAND (CPAB) // SR15366
	. . IF TYPE'=12 SET ATPMENGE = ATPMENGE + ($PIECE(SATZ(1),Y,80) - $PIECE(SATZ(1),Y,5))  ;ATP - MENGE OHNE WH;22.10.03;24420  ;11.10.04;FIS;26547;NOT IF CUSTOMER AND PURCHASE ORDER // SR15366
	. . IF TYPE'=12 SET ATPTEMP  = ATPTEMP  + ($PIECE(SATZ(1),Y,80) - $PIECE(SATZ(1),Y,5))  ;16.12.03;24420;ATP  ;11.10.04;FIS;26547;NOT IF CUSTOMER AND PURCHASE ORDER
	. . IF +VORG(2)'=0 QUIT:DAT>(START+VORG(2))            ;ANZEIGESTOP
	. . SET ZMENGE(1) = ZMENGE(1) + $PIECE(SATZ(1),Y,5)    ;ADDITION FÜR ZWISCHENSUMME ;addition to subtotal 
	. . SET MENGE(1)  = MENGE(1)  + $PIECE(SATZ(1),Y,5)    ;ADDITION FÜR ZWISCHENSUMME ;addition to subtotal 
 
	//$$$Log("ATPREQUEST:"_$GET(ATPREQUEST))
	
	;ATP REQUEST
	;IF $GET(ATPREQUEST)=1 IF ATPTEMP'=0 DO
	IF $GET(ATPREQUEST)=1 DO  ;SRBR014564
	. NEW DAT1,ATPOLD,ATPOLDDAT
	. SET DAT1=DAT
	. IF DAT1<$HOROLOG SET DAT1=+$HOROLOG
	. SET ATPOLDDAT=$ORDER(^WWWSOR(YUSER,"ATP",DAT1),-1)  ;FIS;29-Oct-2007;SRBR014564
	. IF ATPOLDDAT="" SET ATPOLDDAT=DAT1
	. SET ATPOLD=+$GET(^WWWSOR(YUSER,"ATP",ATPOLDDAT))
	. ;SET ^WWWSOR(YUSER,"ATP",DAT1)=+$GET(^WWWSOR(YUSER,"ATP",DAT1))+ATPTEMP
	. SET ^WWWSOR(YUSER,"ATP",DAT1)  = ATPOLD+ATPTEMP
	. SET ^WWWSOR(YUSER,"PAB",DAT1)  = $GET(^WWWSOR(YUSER,"PAB",DAT1)) +BESTAND   ;SRBR014564
	. SET ^WWWSOR(YUSER,"CPAB",DAT1) = $GET(^WWWSOR(YUSER,"CPAB",DAT1))+CBESTAND  ;SRBR014564
 
	$$$Log($$$Text($lb("IN00973",BESTAND,CBESTAND,ATPMENGE,$zdt($p(DAT,"."),3))))		//PAB:%1, CPAB:%2, ATP:%3, Due Date: %4
	
	QUIT:$GET(ATPREQUEST)=1  ;TYBD;5,4,2004
	
	;+++++++++++++++++++++++++++++++++++++++
	; FIXME : The quit below doesn't seem to do anything anymore - get rid of whole test? <GRF>
	;+++++++++++++++++++++++++++++++++++++++
	;PRÜFEN BESTELLMENGE UND WARENBESCHAFFUNG AUSLÖSEN (BEI B UND O NUR IM HINTERGRUND, DA KEINE ZUSAMMENFASSUNG)
	;IF $PIECE(ART2,Y,8)="O"!($PIECE(ART2,Y,8)="B") DO
	;IF ($PIECE(ART2,Y,8)="O") || ($PIECE(ART2,Y,8)="B") || ($PIECE(ART2,Y,8)="Q") DO  ;NEW RULE Q-ORDER TO REQUIREMENT
	;. QUIT:TYPE=2  ;SUPPLY
	;. DO ^INDRPRUN6  ;NUR BEI BESTELLUNG JE AUFTRAG ;only next to sales order once order
	;+++++++++++++++++++++++++++++++++++++++
	
	;IF $PIECE(ART2,Y,8)="Q" IF TYPE=1 SET SEPERATE=$GET(SEPERATE)+$PIECE(SATZ(1),Y,5)  ;GETS ORDERED SEPERATELY;FIS;25.04.05;SR12200
	;IF $GET(BGJOB)=$$$YES IF $PIECE(ART2,Y,8)="O"!($PIECE(ART2,Y,8)="B") DO
	IF $GET(BGJOB)=$$$YES IF ($PIECE(ART2,Y,8)="O") || ($PIECE(ART2,Y,8)="B") || ($PIECE(ART2,Y,8)="Q") DO  ;NEW RULE Q-ORDER TO REQUIREMENT;FIS;25.04.05;SR12200
	. QUIT:TYPE=2  ;SUPPLY
	. QUIT:$GET(KBESTAND)="X"  ;KEINE BESTELLUNG (AUSSERHALB BESTELLZEIT BEI REGEL O UND B)
	. ;
	. $$$Log($$$Text($lb("IN00974",$PIECE(ART2,Y,8))))		//Supply Requirement for Policy %1
	. ;
	. //IF $PIECE(ART2,Y,8)="Q" QUIT:$GET(YRULEQ)=1  ;NOT IF STOCK REQUIREMENT RUN;FIS;28.04.05;SR12200
	. //IF $PIECE(ART2,Y,8)="Q" IF +ATPMENGE'<0 IF +BESTAND'<0 IF $$^INARTMENGE(ART,,BETRIEB)'<$PIECE(SATZ(1),Y,5) QUIT  ;ENOUGH ON STOCK;FIS;27.04.2005;SR12200
	. //IF $PIECE(ID,"-",1)'="" IF $PIECE(ID,"-",2)'="" IF $PIECE($GET(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1)),Y,7)'="" QUIT  ;ALREADY SOURCED;FIS;28.04.2005;SR12200
	. //IF ($PIECE(STATUS(1),"#",1)=91) || ($PIECE(STATUS(1),"#",1)=92) || ($PIECE(STATUS(1),"#",1)=90) QUIT  ;DELETED OR CANCELLED OR BLOCKED;FIS;28.04.2005;SR12200
	. //IF '$FIND(ID,"-") IF $PIECE($GET(^INDRPDEMAND(YM,BETRIEB,ID,1)),Y,120)'="" QUIT  ;already processed ! ;FIS;27255;07.02.04
	. //IF $PIECE(ID,"-",1)'="" IF $PIECE(ID,"-",2)'="" IF $PIECE($GET(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1)),Y,403)'="" QUIT  ;already processed ! ;FIS;27255;07.02.04
	. //IF '$FIND(ID,"-") IF $DATA(^INDRPDEMAND(YM,BETRIEB,ID,1)) SET $PIECE(^INDRPDEMAND(YM,BETRIEB,ID,1),Y,120)=$HOROLOG  ;FIS;27255;07.02.04
	. //IF $PIECE(ID,"-",1)'="" IF $PIECE(ID,"-",2)'="" IF $DATA(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1)) SET $PIECE(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1),Y,403)=$HOROLOG  ;FIS;27255;07.02.04
	. ;
	. IF $PIECE(ART2,Y,8)="Q" if $GET(YRULEQ)=1 $$$Log("IN00975") quit  ;NOT IF STOCK REQUIREMENT RUN;FIS;28.04.05;SR12200	//Not a Stock Run, exiting...
	. IF $PIECE(ART2,Y,8)="Q" IF +ATPMENGE'<0 IF +BESTAND'<0 set fltQty=$$^INARTMENGE(ART,,BETRIEB) if fltQty'<$PIECE(SATZ(1),Y,5) $$$Log($$$Text($lb("IN00976",fltQty))) QUIT  ;ENOUGH ON STOCK;FIS;27.04.2005;SR12200	//Enough Stock available (%1) exiting...
	. IF $PIECE(ID,"-",1)'="" IF $PIECE(ID,"-",2)'="" IF $PIECE($GET(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1)),Y,7)'="" $$$Log($$$Text($lb("IN00977",ID))) QUIT  ;ALREADY SOURCED;FIS;28.04.2005;SR12200	//Already Sourced  %1, exiting...
	. IF ($PIECE(STATUS(1),"#",1)=91) || ($PIECE(STATUS(1),"#",1)=92) || ($PIECE(STATUS(1),"#",1)=90) $$$Log($$$Text($lb("IN00978",ID))) QUIT  ;DELETED OR CANCELLED OR BLOCKED;FIS;28.04.2005;SR12200	//Already Deleted/Cancelled/Blocked %1, exiting...
	. IF '$FIND(ID,"-") IF $PIECE($GET(^INDRPDEMAND(YM,BETRIEB,ID,1)),Y,120)'="" $$$Log($$$Text($lb("IN00979",ID))) QUIT  ;already processed ! ;FIS;27255;07.02.04 //Already Processed %1 exiting...
	. IF $PIECE(ID,"-",1)'="" IF $PIECE(ID,"-",2)'="" IF $PIECE($GET(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1)),Y,403)'="" $$$Log($$$Text($lb("IN00979",ID))) QUIT  ;already processed ! ;FIS;27255;07.02.04	//Already Processed %1 exiting...
	. IF '$FIND(ID,"-") IF $DATA(^INDRPDEMAND(YM,BETRIEB,ID,1)) SET $PIECE(^INDRPDEMAND(YM,BETRIEB,ID,1),Y,120)=$HOROLOG  ;FIS;27255;07.02.04
	. IF $PIECE(ID,"-",1)'="" IF $PIECE(ID,"-",2)'="" IF $DATA(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1)) SET $PIECE(^INAUFP(YM,$PIECE(ID,"-",1),$PIECE(ID,"-",2),1),Y,403)=$HOROLOG  ;FIS;27255;07.02.04
	. ;
	. DO ^INDRPRUN6  ;NUR BEI BESTELLUNG JE AUFTRAG ;only next to sales order once order
	
	;ZUORDNUNG DER LAGERBESTÄNDE ZU DEN AUFTRÄGEN/DEMANDS ;ALLOCATION OF THE STOCKS TO THE ORDERS /DEMANDS
	DO ^INDRPRUN8
	
	IF $GET(BGJOB)'=$$$YES DO  ;************* HINTERGRUNGSJOB KEINE ANZEIGE ! ***************
	. IF +VORG(2)'=0 QUIT:DAT>(START+VORG(2))  ;***** ANZEIGESTOP *****
	. DO ^INDRPRUN5  ;ANZEIGEN ÜBERSICHT ;display summary
	
	;GRENZE ZWISCHEN INNERHALB UND AUSSERHALB DER LIEFERANTEN-LIEFERZEIT
	;-------------------------------------------------------------------
	IF LEADTIME'=0 && (DAT>LEADTIME) {
		SET LEADTIME=0
		IF ($PIECE(ART2,Y,8)="O") || ($PIECE(ART2,Y,8)="B") {           ;ORDER-TO-ORDER / BACK-TO-BACK
			IF $PIECE($GET(^INDRPSYS(YM,BETRIEB,1)),Y,45)=1 SET KBESTAND="X"     ;NUR WENN INNERHALB LEADTIME
		} else {
			;
			SET KBESTAND=BESTAND  ;FIS;SPEICHERN KLEINSTER NOTWENDIGER BESTAND;FIS;08.02.05;27255
			IF $FIND(TYPE,1) SET KBESTAND=KBESTAND+$PIECE(SATZ(1),Y,5)  ;DO NOT COUNT LAST DEMAND (IS ALREADY OUTSIDE LEADTIME) ;FIS;23.09.05 // ??? SR15366
			IF $FIND(TYPE,2) SET KBESTAND=KBESTAND-$PIECE(SATZ(2),Y,5)  ;DO NOT COUNT LAST SUPPLY (IS ALREADY OUTSIDE LEADTIME) ;FIS;23.09.05 // ??? SR15366
		}
	}
	
	;save PAB at time phase end to order only requirements within time phase  ;SR15564;09-Jul-2007;FIS
	;-----------------------------------------------------------------------
	IF +dteTimePhaseEnd'=0 && (DAT>dteTimePhaseEnd) {
		SET dteTimePhaseEnd=0  ;run only once
		IF ($PIECE(ART2,Y,8)="O") || ($PIECE(ART2,Y,8)="B") {  ;ORDER-TO-ORDER / BACK-TO-BACK
			SET KBESTAND="X"                                   ;no order outside time phase
		} else {
			SET KBESTAND=BESTAND  ;save SOH at time phase end for supply calcualtion;FIS;08.02.05;27255
			IF $FIND(TYPE,1) SET KBESTAND=KBESTAND+$PIECE(SATZ(1),Y,5)  ;DO NOT COUNT LAST DEMAND (IS ALREADY OUTSIDE time phase)
			IF $FIND(TYPE,2) SET KBESTAND=KBESTAND-$PIECE(SATZ(2),Y,5)  ;DO NOT COUNT LAST SUPPLY (IS ALREADY OUTSIDE time phase)
		}
	}
	
	QUIT
 
DRPLocationHierarchy(pidLocation,pidItem,pintLevel=0)
	;-------------------------------------------------------------------------------
	; Go through INDRPITEM and INDRPITEMS and return the location path of a product
	; ie at Adrad a buy at QLD-B may go through to SA-WH and this buys from SA-MAN
	; where it is Made.
	;
	; Params:
	; 	pidLocation: The id of the current location
	; 	pidItem    : The id of the product
	; 	pintLevel  : This checks that we will not get a stackframe error
	;
	; ByRefs:
	;
	; Returns:
	; %List - The list of locations, start -> end order
	;
	; History:
	; 05-Oct-2006	RPW		SR14933: Fixed closed loop handling.
	; 19-Sep-2006	RPW		SR14933: Created
	;-------------------------------------------------------------------------------
	set $ztrap="DLHError"
	
	new idLocation,idGroup,lstLocation
	
	set pintLevel=$increment(pintLevel)
	quit:pintLevel>50 "" // Saves a Framestack error
	quit:pidLocation="" ""
	quit:pidItem="" ""
	quit:'$data(^INART(YM,pidItem)) ""
	quit:'$data(^WWW0121(0,YM,pidLocation)) ""
	
	set idLocation=""
		
	if $data(^INDRPITEM(YM,pidLocation,pidItem)) {
		set idLocation=$$$INDRPITEMSupplyLocation($get(^INDRPITEM(YM,pidLocation,pidItem,1)))
	} else {
		set idGroup=$$$INARTItemGroup($get(^INART(YM,pidItem,1)))
		if (idGroup'="")&&($data(^INDRPITEMS(YM,pidLocation,idGroup))) {
			set idLocation=$$$INDRPITEMSupplyLocation($get(^INDRPITEMS(YM,pidLocation,idGroup,1)))
		}
	}
	
	if (idLocation'="") {
		set lstLocation=$$DRPLocationHierarchy(idLocation,pidItem,pintLevel)
			if '$listfind(lstLocation,pidLocation) {
				set lstLocation=$listbuild(pidLocation)_lstLocation
			} else {
				set lstLocation=lstLocation
			}
	} else {
		set lstLocation = $listbuild(pidLocation)
	}
	
	quit lstLocation
	
DLHError ; Internal Tag
	set $ztrap=""
	
	quit ""
]]></Routine>
</Export>