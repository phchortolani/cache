<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESAFMEntrega" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMConst
#include INConst
#include WWWConst
#include FIN
#include VARConst
#include COMSYS
 
VARSESAFMEntrega
	quit
	
OnBeforeFormConstruction
	// Andre, 27/02/2008
	// Ao construir a tela, verifica se ela deve ser editável ou não,
	// dependendo da AFM já estar processada ou não.
	
	new AFMStatus, EntregaPadrao
	
	// Se nenhuma AFM escolhida, torna tela não editável:
	if ($get(YKEY) = "") || ($piece($get(YKEY),YKOMMA,1) = "") {
		set $$$WWW120AuthorizationToModifyData(YVOR) = 5
		set $$$WWW120DoNOTDisplayStandardButto(YVOR) = "1;"_$$$WWW120DoNOTDisplayStandardButto(YVOR)
		quit
	}
	
	// Se AFM não aberta, não é possível editar Entregas:
	// do AlertInScript^COMConst("Status da AFM: "_AFMStatus)
	set AFMStatus = +$piece($get(^INAUF(YM,$piece(YKEY,YKOMMA,1),1)),Y,348)
	if ( AFMStatus '= 0 ) {
		set $$$WWW120AuthorizationToModifyData(YVOR) = 5
		set $$$WWW120DoNOTDisplayStandardButto(YVOR) = "1;"_$$$WWW120DoNOTDisplayStandardButto(YVOR)
	}
	
	// Se Entrega Padrão definida na PAM, não é possível editar Entregas:
	set EntregaPadrao = $piece($get(^INAUF(YM,$piece(YKEY,YKOMMA,1),1)),Y,356)
	if ( EntregaPadrao '= "" ) {
		set $$$WWW120AuthorizationToModifyData(YVOR) = 5
		set $$$WWW120DoNOTDisplayStandardButto(YVOR) = "1;"_$$$WWW120DoNOTDisplayStandardButto(YVOR)
		//do AlertInScript^COMConst(	"Não é possível editar entregas, pois foi definida uma Entrega Padrão na AFM."_YCR_
		//							"Para editar entregas, deixe o campo 'Entrega Padrão' em branco, na AFM.")
		//"MED00003"  ;Não é possível editar entregas, pois foi definida uma Entrega Padrão na AFM.
		//"MED00004"  ;Para editar entregas, deixe o campo 'Entrega Padrão' em branco, na AFM.
		do AlertInScript^COMConst(	$$$Text($listbuild("MED00003"))_YCR_
									$$$Text($listbuild("MED00004")))
	}
	
	quit
 
OnBeforeButtonLine
	do CriaListaDeLinhas(YKEY)
	quit
 
OnAfterDataFields
	do LoadGrid^VARSESAFMEntregaLinha(YKEY,YFELD)
	quit
	
OnBeforeSave
	do SaveGrid^VARSESAFMEntregaLinha(YKEY)
	quit
	
ChecarPercentualEhValido()
	// Andre, 27/02/2008
	// Verifica se o percentual é válido.
	
	new percentual,entregaUniforme
	
	set percentual = +$piece(YFELD,Y,4)
	set entregaUniforme = $piece(YFELD,Y,3)
	
	if (entregaUniforme = 1) {
		if ( (percentual <= 0) || (percentual > 100) ) {
			do AlertInScript^COMConst($$$Text($listbuild("MED00005")))  ;Campo de Percentual com valor inválido. Valor deve ser entre 1 e 100.
			quit 0
		}
	}
	quit 1
 
OnAfterSave
	new entregaUniforme
	set entregaUniforme = $piece(YFELD,Y,3)
	if ( entregaUniforme = 1 ) {
		do CriaEntregaUniforme(YKEY,YFELD)
	}
 
	quit
	
CriaEntregaUniforme(pKeyEntrega,pObjEntrega)
	// Andre, 27/02/2008
	// Após salvar, se o campo "Entrega uniforme" estiver selecionado,
	// cria as linhas da entrega, baseado no percentual informado.
	// 
	// After saving, if the "Delivery uniform" is selected, 
	// Create the lines of supply, based on the percentage informed.	
	// 
	new strStatus, numAFM, numEntrega, percentual, entregaUniforme, numAFMLinha,
		numSeq, objAFMLinha, qtdAFMLinha, itemAFMLinha, qtdEntregaLinha, 
		objEntregaLinha, listaLinhas, result, percCalcLinha
	
	set strStatus = 1
	
	set numAFM 			= $piece(pKeyEntrega,YKOMMA,1)
	set numEntrega 		= $piece(pKeyEntrega,YKOMMA,2)
	set percentual		= $piece(pObjEntrega,Y,4)
	set entregaUniforme = $piece(pObjEntrega,Y,3)
	
	// **** Se campo "Entrega uniforme" NÃO selecionado, sai da rotina:
	// If the "Delivery uniform" not selected, leave the routine
	if ( entregaUniforme '= 1 ) {
		quit
	}
	
	if ( percentual <= 0 ) || ( percentual > 100 ) {
		//do AlertInScript^COMConst("Campo de Percentual com valor inválido. Valor deve ser entre 1 e 100.")
		do AlertInScript^COMConst($$$Text($listbuild("MED00005")))  ;Campo de Percentual com valor inválido. Valor deve ser entre 1 e 100.
		quit
	}
	
	// Apaga as linhas existentes:
	set numSeq = "",result = 1
	for {
		set numSeq = $order(^VARSESAFMEntregaLinha(YM,numAFM,numEntrega,numSeq))
		quit:(numSeq = "")
		set result = $$KILL^COMUtils("VARSESAFMEntregaLinha", numAFM_YKOMMA_numEntrega_YKOMMA_numSeq)
		quit:('result)
	}
	quit:('result) 
		
	set numAFMLinha = "", numSeq = 0
	for {
		set numAFMLinha = $order(^INAUFP(YM,numAFM,numAFMLinha))
		quit:(numAFMLinha = "") 
		
		set objAFMLinha 	= $get(^INAUFP(YM,numAFM,numAFMLinha,1))
		set qtdAFMLinha 	= $piece(objAFMLinha,Y,5)
		set itemAFMLinha	= $piece(objAFMLinha,Y,4)
		
		set numSeq = numSeq + 1
		
		set qtdEntregaLinha = $NORMALIZE(qtdAFMLinha * (percentual/100),0) // Arredondando
		if ( qtdEntregaLinha = 0 ) { set qtdEntregaLinha = 1 }
		set qtdOutrasEntregas = $$GetQuantEntr^VARSESAFMEntregaLinha(numAFM, numAFMLinha)
		if ( ( qtdAFMLinha - qtdOutrasEntregas ) < qtdEntregaLinha ) { set qtdEntregaLinha = ( qtdAFMLinha - qtdOutrasEntregas ) }
		if ( qtdEntregaLinha < 0 ) { set qtdEntregaLinha = 0 }
		
		// Percentual calculado da linha, que pode ser diferente do percentual uniforme,
		// devido aos arredondamentos feitos acima:
		// Percent calculated the line, which may differ from the standard percentage, 
		// Due to rounding made above:
		set percCalcLinha = qtdEntregaLinha / qtdAFMLinha * 100
		
		set objEntregaLinha = ""
		set $piece(objEntregaLinha,Y,1) = numAFMLinha
		set $piece(objEntregaLinha,Y,2) = qtdEntregaLinha
		set $piece(objEntregaLinha,Y,7)	= itemAFMLinha
		//set $piece(objEntregaLinha,Y,8)	= percCalcLinha
		
		set strStatus = $$ChecarQuant^VARSESAFMEntregaLinha(numAFM_YKOMMA_numEntrega_YKOMMA_numSeq,objEntregaLinha)
		if ( strStatus '= 1) {
			
			//$$$Text($listbuild("MED00007",percentual,itemAFMLinha))  ;Ocorreu um erro ao tentar definir entrega de %1 % para o produto %2 ."_$char(10)_$piece(strStatus,Y,2)
			//do AlertInScript^COMConst("Ocorreu um erro ao tentar definir entrega de "_percentual_"% para o produto "_itemAFMLinha_"."_$char(10)_$piece(strStatus,Y,2)) 
			do AlertInScript^COMConst($$$Text($listbuild("MED00007",percentual,itemAFMLinha))_$char(10)_$piece(strStatus,Y,2)) 
			quit 
		}
 
		set listaLinhas(numSeq) = objEntregaLinha
		
	}
	
	if ( strStatus ) {
 
		// Gera novas linhas:
		set numSeq = ""
		for {
			set numSeq = $order(listaLinhas(numSeq))
			quit:(numSeq = "")
			set objEntregaLinha = $get(listaLinhas(numSeq))
			set qtdEntregaLinha = $piece(objEntregaLinha,Y,2)
			if ( qtdEntregaLinha > 0 ) {
				set result = $$Save^COMUtils("VARSESAFMEntregaLinha",numAFM_YKOMMA_numEntrega_YKOMMA_numSeq,objEntregaLinha)
			}
		}
	}
	
	quit
 
OnExecutePrazoDeEntrega(pYKEY,pYFELD)
	// Andre, 27/02/2008:
	// Valida campo Prazo de Entrega: não permite mais de uma entrega com
	// o mesmo Prazo de Entrega.
	// Validate field Delay Delivery: does not allow more than one delivery with 
	// The same date for delivery.
	
	new strResult, numAFM, numEntregaCorrente, prazoDeEntregaCorrente, numEntrega, 
		objEntrega, prazoDeEntrega
	
	set strResult = 1
	
	set numAFM = $piece(pYKEY,YKOMMA,1)
	set numEntregaCorrente = $piece(pYKEY,YKOMMA,2)
	set prazoDeEntregaCorrente = $piece(pYFELD,Y,1)
	
	if ( numAFM = "" ) || ( numEntregaCorrente = "") || ( prazoDeEntregaCorrente = "") {
		set strResult = 1
		quit strResult
	}
	
	set numEntrega = "", objEntrega = ""
	for {
		set numEntrega = $order(^VARSESAFMEntrega(YM,numAFM,numEntrega))
		quit:(numEntrega = "")
		continue:(numEntrega = numEntregaCorrente)
		set objEntrega = $get(^VARSESAFMEntrega(YM,numAFM,numEntrega,1))
		continue:(objEntrega = "")
		set prazoDeEntrega = $piece(objEntrega,Y,1)
		if ( prazoDeEntrega = prazoDeEntregaCorrente ) {
			set strResult = 0
			
			//$$$Text($listbuild("MED00008",numEntrega,prazoDeEntregaCorrente))  ;Já existe outra entrega (Num. %1) no mesmo prazo de %2 dias.
			
			//do AlertInScript^COMConst("Já existe outra entrega (Num. "_numEntrega_") no mesmo prazo de "_prazoDeEntregaCorrente_"dias.")
			do AlertInScript^COMConst($$$Text($listbuild("MED00008",numEntrega,prazoDeEntregaCorrente)))
			quit 
		}
	}
	quit strResult
	
CriaListaDeLinhas(pYKEY)
	// Andre, 03/03/2008
	// Cria ^VARSESTempListAFMLinha que é uma lista temporária
	// de linhas da AFM relacionada à entrega corrente.
	
	new strResult, numAFM
	
	kill ^VARSESTempListAFMLinha(YM,YUSER)
	
	quit:( $get(pYKEY) = "") 
	
	set numAFM = $piece(pYKEY,YKOMMA,1)
	
	quit:( numAFM = "" )
	
	set numLinha = ""
	for {
		set numLinha = $order(^INAUFP(YM,numAFM,numLinha))
		quit:( numLinha = "" )
		
		set objINAUFP = $get(^INAUFP(YM,numAFM,numLinha,1))
		continue:( objINAUFP = "")
		
		set item		= $piece(objINAUFP,Y,4)
		set itemName 	= $piece(objINAUFP,Y,1)
		
		set ^VARSESTempListAFMLinha(YM,YUSER,item,1) = itemName_Y_numLinha
	}
	
	quit
	
 
OnButtonCopiar(pNumAFM)
	new strStatus, listaStatus
 
	//set strStatus = $$CopiarEntregasDaPAM(pNumAFM,.listaStatus)
 
	set strStatus = $$Transaction^COMTransaction("CopiarEntregasDaPAM^VARSESAFMEntrega("""_pNumAFM_""",.listaStatus)",$$$NO)
 
	// TODO: REFAZER ARRAY DE MENSAGENS!!!!
 
	// Monta mensagem ao usuário:
	set numAFMLinha = "", msgOk = $$$Text($lb("MED00009"))  ;Linhas copiadas: "
	set msgErr = $$$Text($lb("MED00010"))    ;Linhas com erro: 
	//set numAFMLinha = "", msgOk = "Linhas copiadas: ",msgErr = "Linhas com erro: "
	
	for {
		set numAFMLinha = $order(listaStatus(numAFMLinha))
		quit:(numAFMLinha = "")
		set status = $piece(listaStatus(numAFMLinha),Y,1)
		if (status = 1) {
			set msgOk = msgOk_$select($length(msgOk)=17:numAFMLinha,$length(msgOk)>17:", "_numAFMLinha)
		}
		else {
			;set msgErr = msgErr_$select($length(msgErr)=17:numAFMLinha,$length(msgErr)>17:", "_numAFMLinha)
			//set msgErr = msgErr_$char(13)_$char(10)_$$$Text($lb("MED00011"))_numAFMLinha_", Mensagem: "_$piece(listaStatus(numAFMLinha),Y,2)
			set msgErr = msgErr_$char(13)_$char(10)_$$$Text($lb("MED00011"))_numAFMLinha_","_$$$Text($lb("MED00012"))_$piece(listaStatus(numAFMLinha),Y,2)
		}
	}
 
 	/*
	if $$$ISOK(strStatus) {
		do ReloadForm^COMUtilForm()
	}
	*/
 
	;do AlertInScript^COMConst("Status: "_strStatus_$char(13)_$char(10)_msgOk_$char(13)_$char(10)_msgErr)
 	
 	;do ^WWWINFO($$$Text("Status: "_strStatus_$char(13)_$char(10)_msgOk_$char(13)_$char(10)_msgErr))
 	//do ^WWWINFO("Utilitário para copiar entregas da PAM para a AFM.<BR> AFM: "_pNumAFM_"<BR>"_"Status: "_strStatus_"<BR>"_msgOk_"<BR>"_msgErr,,,,1)
 	//"MED00013"  ;Utilitário para copiar entregas da PAM para a AFM.<BR> AFM: "
 	do ^WWWINFO($$$Text($lb("MED00013"))_pNumAFM_"<BR>"_"Status: "_strStatus_"<BR>"_msgOk_"<BR>"_msgErr,,,,1)
 	
	quit
 
CopiarEntregasDaPAM(pNumAFM,&listaStatus)
	// Andre, 05/03/2008
	// Para cada linha da AFM, copia as entregas da linha da PAM correspondente,
	// se a linha da AFM estiver relacionada à apenas uma linha da PAM.
	
	new strStatus, contNumPAM, numAFMLinha, numPAM, numPAMParaIndice, numPAMLinha, 
		dataDeEntrega, contPAMs, objPAM, objAFM, numAFMParaIndice, numAFMParaIndice,
		somaQtdEntregasAFM
	
	quit:( $get(pNumAFM) = "" ) 0
	
	set strStatus = 1
	
	set numAFMParaIndice = $$^WWWUMLAU(pNumAFM,1)
	
	// Se já existem entregas da AFM, termina:
	if ( $data(^VARSESAFMEntrega(YM,pNumAFM)) ) {
		//set strStatus = "0~Não é possível copiar entregas da PAM, pois esta AFM já possui entregas."
		set strStatus = $$$MakeStatus("MED00014")  ;Não é possível copiar entregas da PAM, pois esta AFM já possui entregas."
		quit strStatus
	}
	
	// Andre, 22/04/2008:
	// Conta número de PAMs relacionadas à AFM corrente:
	set contPAMs = 0, numPAMParaIndice = ""
	for {
		set numPAMParaIndice = $order(^VARSESPAMAFMs(YM,2,numAFMParaIndice,numPAMParaIndice))
		quit:(numPAMParaIndice = "")
		set contPAMs = contPAMs + 1
	}
	
	// Andre, 22/04/2008:
	// Copia modelo de "Entrega Padrão" da PAM, se apenas uma PAM relacionada à AFM corrente:
	// Copies model of "Delivery Standard" of the PAM, only one related to current AFM:
	if ( contPAMs = 1 ) {
		set numPAM = $order(^VARSESPAMAFMs(YM,2,numAFMParaIndice,""))
		set objPAM = $get(^VARTRKPAM(YM,numPAM,1))
		set entrPadraoPAM = $piece(objPAM,Y,17)
		// Se na PAM foi definida uma entrega padrão, copia-a para a AFM:
		if ( $get(entrPadraoPAM) '= "" ) {
			set objAFM = $get(^INAUF(YM,pNumAFM,1))
			set $$$INAUFFREE22(objAFM) = entrPadraoPAM
			set strStatus = $$Save^COMUtils("INAUF",pNumAFM,objAFM,1)
			if (strStatus) {
				set strStatus = $$CriaEntregasPadrao^VARSESAFMEntrega(pNumAFM,objAFM)
			}
			quit strStatus
		}
	}
	
	// 1) Para cada linha da AFM:
	set numAFMLinha = ""
	for {
		set numAFMLinha = $order(^VARSESPAMAFMs(YM,1,numAFMParaIndice,numAFMLinha))
		quit:(numAFMLinha = "")
		
		// 1.1) Conta número de PAMs atendidas pela linha de AFM corrente:
		// Account number of PAMs attended by the current line of AFM:
		set numPAMParaIndice = "", contNumPAM = 0
		for {
			set numPAMParaIndice = $order(^VARSESPAMAFMs(YM,1,numAFMParaIndice,numAFMLinha,numPAMParaIndice))
			quit:(numPAMParaIndice = "")
			
			set contNumPAM = contNumPAM + 1
			
			if ( contNumPAM > 1 ) {
				set strStatus = 0
				quit
			}
			
		}
 
		// 1.2) Se mais de uma PAM é atendida pela linha de AFM corrente, desiste desta linha de AFM:
		// -----------------------------------------------------------------------------------------
		if ( contNumPAM > 1 ) {
			set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois existe mais de uma PAM atendida pela linha de AFM corrente."
			continue // Vai para a próxima linha da AFM...
		}
		
		// 1.3) Obtém o número da PAM, tanto o número completo, quanto o número traduzido para ser usado em índices (sem barra):	
		// --------------------------------------------------------------------------------------------------------------------
		set numPAM = $order(^VARSESPAMAFMs(YM,2,numAFMParaIndice,""))
		set numPAMParaIndice = $order(^VARSESPAMAFMs(YM,1,numAFMParaIndice,numAFMLinha,""))
 
		if ( $get(numPAM) = "" ) || ( $get(numPAMParaIndice) = "" ) {
			set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois não existe uma PAM atendida pela linha de AFM corrente."
			continue // Vai para a próxima linha da AFM...
		}
		
		// 1.4) Obtém a linha de PAM atendida pela linha de AFM corrente:
		// -------------------------------------------------------------
		set numPAMLinha = $order(^VARSESPAMAFMs(YM,1,numAFMParaIndice,numAFMLinha,numPAMParaIndice,""))
		
		// Se existir outra linha de PAM atendida pela mesma linha de AFM, lançar erro:
		if ($order(^VARSESPAMAFMs(YM,1,numAFMParaIndice,numAFMLinha,numPAMParaIndice,numPAMLinha)) '= "" ) {
			//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois existe mais de uma linha de PAM atendida pela linha de AFM corrente."
			set listaStatus(numAFMLinha) = $$$MakeStatus("MED00015")  ;Não foi possível copiar entregas, pois existe mais de uma linha de PAM atendida pela linha de AFM corrente.
			continue // Vai para a próxima linha da AFM...
		}
		
		set objVARSESPAMAFM = $get(^VARSESPAMAFM(YM,numPAM,numPAMLinha,pNumAFM,numAFMLinha,1)) 
		
		set qtdAtendida = $piece(objVARSESPAMAFM,Y,1)
 
		if ( numPAMLinha = "" ) {
			//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois não existe uma linha de PAM atendida pela linha de AFM corrente."
			set listaStatus(numAFMLinha) = $$$MakeStatus("MED00016")  ;Não foi possível copiar entregas, pois não existe uma linha de PAM atendida pela linha de AFM corrente.
			continue // Vai para a próxima linha da AFM...
		}
		
		// 1.5) Obtém as entregas para a linha de PAM atendida pela linha de AFM corrente:
		//      Cria uma lista de entregas ordenada pelo prazo de entrega e não pelo 
		//      número da entrega, pois as entregas podem não ser criadas em ordem
		//      cronológica.
		//   	Create a list of supplies ordered by the time of delivery, not by 
		//		number of delivery, because the supply can not be created in order 
		//		chronological.   
		// ------------------------------------------------------------------------------
		set numEntrega = "", qtdEntrega = "", somaQtdEntregas = 0
		kill listaQtdEntrega
		for {
			set numEntrega = $order(^VARSESPAMEntregaLinhas(YM,1,numPAMParaIndice,numPAMLinha,numEntrega))
			quit:(numEntrega = "")
			
			set numPAMEntregaLinha = $order(^VARSESPAMEntregaLinhas(YM,1,numPAMParaIndice,numPAMLinha,numEntrega,""))
			
			// Se há outra linha de entrega, na mesma entrega, para a mesma linha de PAM, lançar erro:
			if $order(^VARSESPAMEntregaLinhas(YM,1,numPAMParaIndice,numPAMLinha,numEntrega,numPAMEntregaLinha)) '= "" {
				//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois existe mais de uma linha de entrega para a mesma linha de PAM atendida pela linha de AFM corrente."
				set listaStatus(numAFMLinha) = $$$MakeStatus("MED00017")  ;Não foi possível copiar entregas, pois existe mais de uma linha de entrega para a mesma linha de PAM atendida pela linha de AFM corrente.
				quit
			}
			
			set objVARSESPAMEntregaLinha = $get(^VARSESPAMEntregaLinha(YM,numPAM,numEntrega,numPAMEntregaLinha,1))
			set objVARSESPAMEntrega = $get(^VARSESPAMEntrega(YM,numPAM,numEntrega,1))
			
			if (objVARSESPAMEntregaLinha = "") {
				//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois não existe entrega para a linha de PAM atendida pela linha de AFM corrente."
				set listaStatus(numAFMLinha) = $$$MakeStatus("MED00018")  ;Não foi possível copiar entregas, pois não existe entrega para a linha de PAM atendida pela linha de AFM corrente.
				quit
			}
			if (objVARSESPAMEntrega = "") {
				//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois não existe entrega para a linha de PAM atendida pela linha de AFM corrente."
				set listaStatus(numAFMLinha) = $$$MakeStatus("MED00019")  ;Não foi possível copiar entregas, pois não existe entrega para a linha de PAM atendida pela linha de AFM corrente.
				quit
			}
			
			set prazoDeEntrega = $piece(objVARSESPAMEntrega,Y,1)
			
			set qtdEntrega = $piece(objVARSESPAMEntregaLinha,Y,2)
			
			set somaQtdEntregas = somaQtdEntregas + qtdEntrega
			
			set listaQtdEntrega(prazoDeEntrega) = numEntrega_Y_numPAMEntregaLinha_Y_objVARSESPAMEntregaLinha
		}
		
		if ( '$data(listaQtdEntrega) ) {
			//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois não existem entregas para a linha de PAM atendida pela linha de AFM corrente."
			set listaStatus(numAFMLinha) = $$$MakeStatus("MED00020")  ;Não foi possível copiar entregas, pois não existem entregas para a linha de PAM atendida pela linha de AFM corrente."
			continue // Vai para a próxima linha da AFM...
		}
		
		/* Andre, 23/04/2008 - Não é mais precisa esta verificação:
		// 1.6) Se a soma das entregas para a linha de PAM excede a quantidade 
		//        atendida pela linha de AFM corrente:
		if ( somaQtdEntregas > qtdAtendida ) {
			set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois a soma das entregas ("_somaQtdEntregas_") para a linha de PAM excede a quantidade atendida ("_qtdAtendida_") pela linha de AFM corrente."
			continue // Vai para a próxima linha da AFM...
		}
		*/
		
		// 1.7) Copia entregas da linha de PAM para a linha de AFM corrente:
		// ----------------------------------------------------------------
		set prazoDeEntrega = "", numEntrega = "", strStatus = 1, somaQtdEntregasAFM = 0
		for {
			set prazoDeEntrega = $order(listaQtdEntrega(prazoDeEntrega))
			quit:(prazoDeEntrega = "")
			
			//set numPAMEntregaLinha = ""
			//for {
				//set numPAMEntregaLinha = $order(listaQtdEntrega(numEntrega,numPAMEntregaLinha))
				//quit:(numPAMEntregaLinha = "")
			
			set numEntrega					= $piece(listaQtdEntrega(prazoDeEntrega),Y,1)
			set numPAMEntregaLinha 			= $piece(listaQtdEntrega(prazoDeEntrega),Y,2)
			set objVARSESPAMEntregaLinha 	= $piece(listaQtdEntrega(prazoDeEntrega),Y,3,99999)
			
			// Se o cabeçalho da entrega da AFM ainda não existe, cria-o:
			set objVARSESAFMEntrega = $get(^VARSESAFMEntrega(YM,pNumAFM,numEntrega,1))
			if ( objVARSESAFMEntrega = "" ) {
				set objVARSESPAMEntrega = $get(^VARSESPAMEntrega(YM,numPAM,numEntrega,1))
				set $piece(objVARSESAFMEntrega,Y,1) = $piece(objVARSESPAMEntrega,Y,1) // Prazo de Entrega
				;set $piece(objVARSESAFMEntrega,Y,2) = $piece(objVARSESPAMEntrega,Y,2) // Data de Entrega: Não existe mais em VARSESPAMEntrega!!
				set dataDeEntrega = $$DefineDataDeEntrega(pNumAFM, $piece(objVARSESAFMEntrega,Y,1))
				if ($get(dataDeEntrega)'="") {
					set $piece(objVARSESAFMEntrega,Y,2) = $zdateh(dataDeEntrega,4) // Data de Entrega
				}
				set $piece(objVARSESAFMEntrega,Y,3) = $piece(objVARSESPAMEntrega,Y,3) // Entrega uniforme
				set $piece(objVARSESAFMEntrega,Y,4) = $piece(objVARSESPAMEntrega,Y,4) // Percentual
				
				set strStatus = $$Save^COMUtils(	"VARSESAFMEntrega",
													pNumAFM_YKOMMA_numEntrega,
													objVARSESAFMEntrega,1)
				if ( 'strStatus ) {
					//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois ocorreu erro ao salvar o cabeçalho da entrega da AFM. Mensagem: "_strStatus_"."
					set listaStatus(numAFMLinha) = $$$MakeStatus($listbuild("MED00022",strStatus))
					quit // Sai do laço de $order(listaQtdEntrega(numEntrega,numPAMEntregaLinha))
				}
				else {
					//set listaStatus(numAFMLinha,numEntrega) = "1~Entrega criada."
					set listaStatus(numAFMLinha,numEntrega) = "1~"_$$$Text("MED00025")  ;Entrega criada.
				}
			
			}
			
			// Cria a linha da entrega de AFM:
			
			set qtdEntregaPAM = $piece(objVARSESPAMEntregaLinha,Y,2)
			
			set qtdEntregaAFM = 0
			if ( qtdEntregaPAM <= (qtdAtendida - somaQtdEntregasAFM) ) {
				set qtdEntregaAFM = qtdEntregaPAM
			}
			else {
				set qtdEntregaAFM = (qtdAtendida - somaQtdEntregasAFM)
			}
			if ( qtdEntregaAFM = 0 ) {
				// Não é preciso alertar:
				// set strStatus = "A linha '"_numAFMLinha_"' não foi incluída na entrega '"_numEntrega_"' pois já foi totalmente entregue até as entregas anteriores."
				quit // Pula p/próxima entrega, saindo do laço de $order(listaQtdEntrega(numEntrega,numPAMEntregaLinha))
			}
			set somaQtdEntregasAFM = somaQtdEntregasAFM + qtdEntregaAFM
			
			// Define a linha de entrega de AFM:
			set $piece(objVARSESAFMEntregaLinha,Y,1) = numAFMLinha // Seq da Linha da AFM
			set $piece(objVARSESAFMEntregaLinha,Y,2) = qtdEntregaAFM // Quantidade
			set $piece(objVARSESAFMEntregaLinha,Y,7) = $piece(objVARSESPAMEntregaLinha,Y,7) // Código
			
			set strStatus = $$Save^COMUtils(	"VARSESAFMEntregaLinha",
												pNumAFM_YKOMMA_numEntrega_YKOMMA_numPAMEntregaLinha,
												objVARSESAFMEntregaLinha,1)
			
			if ( 'strStatus ) {
				//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas, pois ocorreu erro ao salvar o cabeçalho da entrega da AFM. Mensagem: "_strStatus_"."
				set listaStatus(numAFMLinha) = $$$MakeStatus($listbuild("MED00023",strStatus))  ;Não foi possível copiar entregas, pois ocorreu erro ao salvar o cabeçalho da entrega da AFM. Mensagem:%1 ."
				quit // Sai do laço de $order(listaQtdEntrega(numEntrega,numPAMEntregaLinha))
			}
			else {
				//set listaStatus(numAFMLinha,numEntrega,numPAMEntregaLinha) = "1~Linha da Entrega criada."
				set listaStatus(numAFMLinha,numEntrega,numPAMEntregaLinha) = "1~"_$$$Text("MED00024")  ;Linha da Entrega criada.
			}
			
			// } // Fim - for $order(listaQtdEntrega(numEntrega,numPAMEntregaLinha))
			
			/*
			if ( 'strStatus ) {
				set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas. Mensagem: "_strStatus_"."
				quit // Sai do laço de $order(listaQtdEntrega(numEntrega))
			}
			*/
			
		} // Fim - for $order(listaQtdEntrega(prazoDeEntrega))
			
		if ( 'strStatus ) {
			//set listaStatus(numAFMLinha) = "0~Não foi possível copiar entregas. Mensagem: "_strStatus_"."
			set listaStatus(numAFMLinha) = $$$MakeStatus($listbuild("MED00026",strStatus))  ;Não foi possível copiar entregas. Mensagem: %1 .
		}
		else {
			//set listaStatus(numAFMLinha) = "1~Foram copiadas com sucesso as entregas para linha de AFM "_numAFMLinha_"."
			set listaStatus(numAFMLinha) = "1~"_$$$Text($listbuild("MED00027",numAFMLinha))  ;Foram copiadas com sucesso as entregas para linha de AFM %1.
		}
				
	} // Fim - AFMLinha
 
	
	quit strStatus
 
	
EntregasValidas(pNumAFM,&listaStatus)
	// Andre, 13/03/2008
	// 
	// Realiza as seguintes validações nas entregas de AFM:
	// 1) Verifica se há ao menos uma entrega definida.
	// 2) Para cada linha de AFM, verifica se a quantidade na AFM é igual à 
	// soma das quantidades das entregas;
	// 3) Verifica se não há nenhuma entrega sem linhas, sem prazo de entrega
	// ou sem data de entrega;
	// 4) Verifica se não há nenhuma linha de entrega com quantidade vazia.
	
	new strStatus, numAFMLinha, objAFMLinha, qtdAFM, qtdEntregas, numEntrega,
		objEntrega, seqLinhaEntrega, objLinhaEntrega, objAFM, naturezaEntradaAFM
	
	if ( $get(pNumAFM) = "") {
		set strStatus = "0~Número de AFM não informado."
		set strStatus = $$$MakeStatus("MED00028")  ;Número de AFM não informado.
		quit strStatus
	}
	
	// Andre, 30/04/2008: Obter registro da AFM:
	set objAFM = $get(^INAUF(YM,pNumAFM,1))
	if ( $get(objAFM) = "" ) {
		//set strStatus = "0~Erro ao ler AFM de número '"_pNumAFM_"'."
		set strStatus = $$$MakeStatus($listbuild("MED00029",pNumAFM))  ;Erro ao ler AFM de número %1.
		quit strStatus
	}
	
	set strStatus = 1
	
	// Andre, 30/04/2008: Se AFM é do tipo 2 - Estoque - Doação, não é exigida a definição de entregas:
	set naturezaEntradaAFM = $piece(objAFM,Y,347)
	if ( +$get(naturezaEntradaAFM) = 2 ) {
		quit 1
	}
	
	// Andre, 05/05/2008: Se AFM é do tipo 6 - Uso Específico, não é exigida a definição de entregas:
	set naturezaEntradaAFM = $piece(objAFM,Y,347)
	if ( +$get(naturezaEntradaAFM) = 6 ) {
		quit 1
	}
	
	// Andre, 08/05/2008: Se AFM é do tipo 3 - Estoque - Ministério da Saúde, não é exigida a definição de entregas:
	set naturezaEntradaAFM = $piece(objAFM,Y,347)
	if ( +$get(naturezaEntradaAFM) = 3 ) {
		quit 1
	}
	
	// 1) Verifica se há ao menos uma entrega definida.
	if ( '$data(^VARSESAFMEntrega(YM,pNumAFM)) ) {
		//set strStatus = "0~Nenhuma entrega definida para a AFM """_pNumAFM_"""."
		set strStatus = $$$MakeStatus($listbuild("MED00030",pNumAFM))  ;Nenhuma entrega definida para a AFM %1.
		quit strStatus
	}
 
 
	// 2) Para cada linha de AFM, verifica se a quantidade na AFM é igual à 
	// soma das quantidades das entregas.
 
	set numAFMLinha = ""
	for {
		set numAFMLinha = $order(^INAUFP(YM,pNumAFM,numAFMLinha))
		quit:(numAFMLinha = "")
		
		set objAFMLinha = $get(^INAUFP(YM,pNumAFM,numAFMLinha,1))
		if ( $get(objAFMLinha) = "" ) {
			//set strStatus = "0~Erro ao ler linha """_numAFMLinha_""" da AFM """_pNumAFM_"""."
			set strStatus = $$$MakeStatus($listbuild("MED00031",numAFMLinha,pNumAFM))  ;Erro ao ler linha %1 da AFM %2.
			quit
		}
		
		set qtdAFM = $piece(objAFMLinha,Y,5)
		
		set qtdEntregas = $$GetQuantEntr^VARSESAFMEntregaLinha(pNumAFM,numAFMLinha)
		
		if ( qtdAFM = qtdEntregas ) {
			set listaStatus(numAFMLinha) = 1
		}
		else {
			//set listaStatus(numAFMLinha) = 0_Y_"Qtd. na AFM ("_qtdAFM_") diferente da qtd. nas entregas ("_qtdEntregas_")."
			set listaStatus(numAFMLinha) = $$$MakeStatus($listbuild("MED00032",qtdAFM,qtdEntregas))  ;Qtd. na AFM (%1) diferente da qtd. nas entregas (%2).
			set strStatus = 0
		}
	}
	if (strStatus '= 1) {
		quit strStatus
	}
	
	
	// 3) Verifica se não há nenhuma entrega sem linhas, sem prazo de entrega
	// ou sem data de entrega;
 
	set numEntrega = ""
	for {
		set numEntrega = $order(^VARSESAFMEntrega(YM,pNumAFM,numEntrega))
		quit:(numEntrega = "")
		
		set objEntrega = $get(^VARSESAFMEntrega(YM,pNumAFM,numEntrega,1))
		if ( $get(objEntrega) = "" ) {
			//set strStatus = "0~Erro ao ler entrega """_numEntrega_""" da AFM """_pNumAFM_"""."
			set strStatus = $$$MakeStatus($listbuild("MED00033",numEntrega,pNumAFM))  ;Erro ao ler entrega %1 da AFM %2.
			quit
		}
		
		// Verifica se há linhas para a entrega:
		if ( '$data(^VARSESAFMEntregaLinha(YM,pNumAFM,numEntrega)) ) {
			//set strStatus = "0~Não há linhas para a entrega """_numEntrega_""" da AFM """_pNumAFM_"""."
			set strStatus = $$$MakeStatus($listbuild("MED00034",numEntrega,pNumAFM))  ;Não há linhas para a entrega %1 da AFM %2.
			quit
		}
		
		// Verifica se há prazo de entrega:
		set prazoDeEntrega = $piece(objEntrega,Y,1)
		if ( +prazoDeEntrega <= 0 ) {
			//set strStatus = "0~Prazo de entrega inválido ("_+prazoDeEntrega_" dias) para a entrega """_numEntrega_""" da AFM """_pNumAFM_"""."
			set strStatus = $$$MakeStatus($listbuild("MED00035",+prazoDeEntrega,numEntrega,pNumAFM))  ;Prazo de entrega inválido (%1 dias) para a entrega %2 da AFM %3.
			quit
		}
		
		// Verifica se há data de entrega futura:
		// Andre, 08/04/2008 - SEMDATA - Será possível processar a AFM, 
		// mesmo quando as datas de entregas não estiverem definidas.
		/*
		set DataDeEntrega = $piece(objEntrega,Y,2)
		if ( DataDeEntrega < +$h ) {
			set strStatus = "0~Data de entrega inválida ("_$case(+DataDeEntrega,0:"data em branco",:$zdt(DataDeEntrega,4))_") para a entrega """_numEntrega_""" da AFM """_pNumAFM_"""."
			quit
		}
		*/
		
		// 4) Verifica se não há nenhuma linha de entrega com quantidade vazia.
		
		set seqLinhaEntrega = ""
		for {
			set seqLinhaEntrega = $order(^VARSESAFMEntregaLinha(YM,pNumAFM,numEntrega,seqLinhaEntrega))
			quit:(seqLinhaEntrega = "")
			
			set objLinhaEntrega = $get(^VARSESAFMEntregaLinha(YM,pNumAFM,numEntrega,seqLinhaEntrega,1))
			if ( $get(objLinhaEntrega) = "" ) {
				//set strStatus = "0~Erro ao ler linha """_seqLinhaEntrega_""" da entrega """_numEntrega_""" da AFM """_pNumAFM_"""."
				set strStatus = $$$MakeStatus($listbuild("MED00036",seqLinhaEntrega,numEntrega,pNumAFM))  ;Erro ao ler linha %1 da entrega %2 da AFM %3.
				quit
			}
			
			set qtdEntrega = $piece(objLinhaEntrega,Y,2)
			if ( +qtdEntrega <= 0 ) {
				//set strStatus = "0~Quantidade inválida ("_+qtdEntrega_") da linha """_seqLinhaEntrega_""" da entrega """_numEntrega_""" da AFM """_pNumAFM_"""."
				set strStatus = $$$MakeStatus($listbuild("MED00037",+qtdEntrega,seqLinhaEntrega,numEntrega,pNumAFM))  ;Quantidade inválida (%1) da linha %2 da entrega %3 da AFM %4.
				quit
			}
			
		} // Fim - for $order(^VARSESAFMEntregaLinha(YM,pNumAFM,numEntrega,seqLinhaEntrega))
 
		if (strStatus '= 1) {
			quit // Sai do laço da global de entregas da AFM
		}
 
	} // Fim - for $order(^VARSESAFMEntrega(YM,pNumAFM,numEntrega))
	
	if (strStatus '= 1) {
		quit strStatus
	}
 
	
	quit strStatus
	
MostraDataEntregaEmpenhoAoForn()
	new DataEntregaEmpenhoAoForn
 
	set DataEntregaEmpenhoAoForn = $$GetDataEntregaEmpenhoAoForn^VARTRKFINANCIAL($piece(YKEY,YKOMMA,1))
 
	if ($get(DataEntregaEmpenhoAoForn) '= "" ) {
		quit $zdt(+DataEntregaEmpenhoAoForn,4)
	}
 
	quit ""
	
DefineDataDeEntrega(pNumAFM,pPrazoDeEntrega)
	// Esta rotina é utilizada tanto pelo evento "Executar na Construção do Formulário (antes)" 
	// do campo 2 (Data de Entrega) da tela VARSESAFMEntrega, quanto pela rotina
	// de cópia de entregas de PAM para entregas de AFM: 
	// 
	new prazoDeEntrega, DataEntregaEmpenhoAoForn, DataDeEntrega
 
 	if ($get(pNumAFM) = "") {
	 	quit ""
 	}
 	
	if ( $get(pPrazoDeEntrega) = "" ) {
		quit ""
	}
	
	set DataEntregaEmpenhoAoForn = $$GetDataEntregaEmpenhoAoForn^VARTRKFINANCIAL(pNumAFM)
	if ( $get(DataEntregaEmpenhoAoForn) = "" ) {
		quit ""
	}
	
	set DataDeEntrega = +DataEntregaEmpenhoAoForn + pPrazoDeEntrega
 
	if ( +DataDeEntrega > 0 ) {
		quit $zdt(+DataDeEntrega,4)
	}
	
	quit ""
	
AlertarNoRecebimento(pNumRec)
	// Andre, 18/03/2008
	// Esta rotina exibe mensagens, informando se existe ou não alguma
	// entrega programada para a data de recebimento, também exibe as 
	// datas de todas as entregas programadas para a AFM, e uma tabela
	// de todos os itens do recebimento e suas entregas.
	// Esta rotina é chamada por:
	// - Função OnAfterDataFields^VARSESAFMEntregaRecebiment que, por sua
	//   vez, é chamada pelo evento "Executar Após Campos" (metadados) da 
	//   tela VARSESAFMEntregaRecebimento que é chamada pelo botão 
	//   "Processar" da tela INREC), e;
	// - Evento "Executar Após Campos" (metadados) da tela INREC, se a aba for igual à 4.
 
	//This routine displays messages, indicating whether or not there is any 
	//delivery scheduled for the date of receipt, also displays the 
	//dates of all deliveries scheduled for the AFM, and a table 
	//of all items on the collection and its delivery. 
	//This routine is called for: 	
	//-- Staff OnAfterDataFields ^ VARSESAFMEntregaRecebiment, which in 
	//   instead, the event is called "Run After Fields" (metadata) of 
	//   VARSESAFMEntregaRecebimento screen that is called by the button 
	//   "Processing" of the screen INREC), and; 
	//-- Event "Run After Fields" (metadata) of the screen INREC, if the flap is equal to 4. 
 
	
	new objRec, numAFM, dataRec, dataRecFormatted, lstHeader, numEntrega, objEntrega, 
		listaEntregas, listaEntregasPorData, dataDaEntrega, entregaCoincidente, msg, 
		msgEntregas, recLine, i, obj]]><![CDATA[RecLine, linhaAFM, codProduto, qtdRec, nomeProduto,
		linhaEntrega, objLinhaEntrega, listaEntregasPorPrazo, prazoDaEntrega, qtdEntrega,
		seqDaLinhaDaAFM, objINAUFP, qtdAFM
	
	quit:($get(pNumRec) = "")
	
	set objRec = $get(^INREC(0,pNumRec,1))
	
	if ( $get(objRec) = "" ) {
		//write "<BR><b>Erro: não foi possível obter o registro do recebimento de número "_pNumRec_".</b>"
		write "<BR><b>"_$$$Text($listbuild("MED00038",pNumRec))_"</b>"
		quit
	}
	
	set numAFM 	= $piece(objRec,Y,22)
	set dataRec = $piece(objRec,Y,13)
	set dataRecFormatted = $zdatetime(dataRec,4)
	
	new lstHeader
	
	set lstHeader=""
	//set lstHeader=lstHeader_$listbuild("Seq","Código/Descrição","Quant.<BR>Recebida","Quant.<BR>na AFM")
	set lstHeader=lstHeader_$listbuild($$$Text("MED00039"),$$$Text("MED00040"),"Quant.<BR>"_$$$Text("MED00041"),"Quant.<BR>"_$$$Text("MED00042"))
	
	set numEntrega = ""
	for {
		set numEntrega = $order(^VARSESAFMEntrega(YM,numAFM,numEntrega))
		quit:(numEntrega = "")
		
		set objEntrega = $get(^VARSESAFMEntrega(YM,numAFM,numEntrega,1))
		quit:($get(objEntrega) = "")
		
		set listaEntregas(numEntrega) = objEntrega
 
 		set prazoDaEntrega 	= $piece(objEntrega,Y,1)
		set dataDaEntrega = $piece(objEntrega,Y,2)
 
		set listaEntregasPorPrazo(prazoDaEntrega) = numEntrega_Y_dataDaEntrega
		if ( $get(dataDaEntrega) '= "" ) {
			set listaEntregasPorData(dataDaEntrega) = numEntrega
		}
 
		if (dataDaEntrega '= "" ) {
			//set lstHeader=lstHeader_$listbuild("Entrega "_numEntrega_"<BR>"_prazoDaEntrega_" dias"_"<BR>"_$zdatetime(dataDaEntrega,4))
			set lstHeader=lstHeader_$listbuild($$$Text("MED00043")_numEntrega_"<BR>"_prazoDaEntrega_$$$Text("MED00044")_"<BR>"_$zdatetime(dataDaEntrega,4))
		}
		else {
			//set lstHeader=lstHeader_$listbuild("Entrega "_numEntrega_"<BR>"_prazoDaEntrega_" dias"_"<BR>"_"Data indefinida")
			set lstHeader=lstHeader_$listbuild($$$Text("MED00043")_numEntrega_"<BR>"_prazoDaEntrega_$$$Text("MED00044")_"<BR>"_$$$Text("MED00045"))
		}
 
	}
	
	set entregaCoincidente = ""
	if ( $get(listaEntregasPorData(dataRec)) '= "") {
		set numEntrega = listaEntregasPorData(dataRec)
		//set msg = "A entrega programada de número """_numEntrega_""" possui data de entrega igual à data de recebimento ("_dataRecFormatted_")."
		set msg = $$$Text($listbuild("MED00046",numEntrega,dataRecFormatted))  ;A entrega programada de número %1 possui data de entrega igual à data de recebimento (%2).
		set entregaCoincidente = numEntrega
	}
	else {
		//set msg = "Não há entrega programada com data de entrega igual à data de recebimento ("_dataRecFormatted_")."
		set msg = $$$Text($listbuild("MED00047",dataRecFormatted)) ;  ;Não há entrega programada com data de entrega igual à data de recebimento (%1).
	}
	write "<BR>"_msg
	set msgEntregas=""
	set prazoDaEntrega = ""
	for {
		set prazoDaEntrega = $order(listaEntregasPorPrazo(prazoDaEntrega))
		quit:(prazoDaEntrega = "")
		if ( $get(msgEntregas) = "" ) {
			//set msgEntregas = "<BR><B>Entregas programadas para a AFM de número "_numAFM_":</B>"
			set msgEntregas = "<BR><B>"_$$$Text($listbuild("MED00048",numAFM))_"</B>"
		}
		set numEntrega 		= $piece($get(listaEntregasPorPrazo(prazoDaEntrega)),Y,1)
		set dataDaEntrega 	= $piece($get(listaEntregasPorPrazo(prazoDaEntrega)),Y,2)
 
		set msgEntregas = msgEntregas_"<BR>"_"Em "_prazoDaEntrega_" dias"
		if ( $get(dataDaEntrega) = "" ) {
			set msgEntregas = msgEntregas_" - "_$$$Text("MED00049")  ;Data indefinida
		}
		else {
			set msgEntregas = msgEntregas_" - Data: "_$zdatetime(dataDaEntrega,4)
		}
		set msgEntregas = msgEntregas_" - "_$$$Text("MED00050")_numEntrega_"."
	}
 
	;set ^zzPhil("VARSESAFMEntrega","AlertarNoRecebimento","msgEntregas")= $get(msgEntregas)
 
	write "<BR>"_msgEntregas
 
	write "<BR>"
	
	//if $$Start^COMTable(lstHeader,"Análise das entregas para cada item deste recebimento:") {
	if $$Start^COMTable(lstHeader,$$$Text("MED00051")) {  ;Análise das entregas para cada item deste recebimento:)
	
		set recLine = ""
		for i=1:1 {
			set recLine = $order(^INRECLine(YM,pNumRec,recLine))
			quit:(recLine = "")
			
			set objRecLine = $get(^INRECLine(YM,pNumRec,recLine,1))
			continue:(objRecLine = "")
			
			set linhaAFM 	= $piece(objRecLine,Y,2)
			set codProduto 	= $piece(objRecLine,Y,7)
			set qtdRec	 	= $piece(objRecLine,Y,4)
			
			do NewLine^COMTable()
			do InsertCell^COMTable(recLine)
			set nomeProduto = $piece($get(^INART(YM,codProduto,1)),Y,1)
			set nomeProduto = $zconvert(nomeProduto,"O","HTML")
			do InsertCell^COMTable("("_codProduto_") "_"<INPUT SIZE=30 VALUE="""_nomeProduto_""" STYLE=""border:0px solid lightgrey; color:navy; background-color:"_$case(i#2,1:"lightgrey",0:"white")_" ;padding-top:0 "" readonly unselectable>"_$select($length(nomeProduto)>25:" ...",1:""))
			do InsertCell^COMTable(qtdRec)
 
			set seqDaLinhaDaAFM = $piece(objRecLine,Y,2)
			set objINAUFP = $get(^INAUFP(YM,numAFM,seqDaLinhaDaAFM,1))
			set qtdAFM = $piece(objINAUFP,Y,5)
			do InsertCell^COMTable(qtdAFM)
			
			set numEntrega = ""
			for {
				set numEntrega = $order(listaEntregas(numEntrega))
				quit:(numEntrega = "")
 
				set linhaEntrega = $order(^VARSESAFMEntregaLinhas(YM,1,$$^WWWUMLAU(numAFM,1),linhaAFM,numEntrega,""))
				if ( $get(linhaEntrega) '= "" ) {
					set objLinhaEntrega = $get(^VARSESAFMEntregaLinha(YM,numAFM,numEntrega,linhaEntrega,1))
					set qtdEntrega = $piece(objLinhaEntrega,Y,2)
					do InsertCell^COMTable(qtdEntrega_" ("_$normalize(qtdEntrega/qtdAFM*100,1)_"%)")
				}
				else {
					do InsertCell^COMTable("")
				}
			}
			
			do EndLine^COMTable()
	 
		}
 
		do Stop^COMTable()
	
	} // if start^comtable
	
	quit
 
ListarEntregas(pNumAFM)
	// Andre, 18/03/2008
	// Listar todas as entregas de uma AFM.
	// Esta rotina é chamada por:
	// - Evento OnAfterDataFields^VARSESINAUF (tela de AFM).
	
	new status, linhaAFM, listaStatusEntregas, cabecalhoJaImpresso, 
		lstHeader, numEntrega, objEntrega, dataDaEntrega, listaEntregas, 
		i, linhaDaAFM, objLinhaDaAFM, codProduto, qtdAFM, nomeProduto,
		objLinhaEntrega, qtdEntrega, somaQtdEntregas, objAFM,
		naturezaEntradaAFM
		
	quit:($get(pNumAFM) = "")
	
	//write "<BR><b>Situação das entregas:  </b>"
	write "<BR><b>"_$$$Text("MED00052")_"  </b>"
 	
	set status = $$EntregasValidas^VARSESAFMEntrega(pNumAFM,.listaStatusEntregas)
 
	if ( status '= 1 ) {
		write $piece(status,Y,2) // Mostra mensagem de erro
		if ( $data(listaStatusEntregas) ) {
			set linhaAFM = "", cabecalhoJaImpresso = 0
			for {
				set linhaAFM = $order(listaStatusEntregas(linhaAFM))
				quit:(linhaAFM = "")
				if ( listaStatusEntregas(linhaAFM) '= 1 ) {
					//write:(cabecalhoJaImpresso '= 1) "<BR>Entregas inválidas para as seguintes linhas da AFM:"
					write:(cabecalhoJaImpresso '= 1) "<BR>"_$$$Text("MED00053")  ;Entregas inválidas para as seguintes linhas da AFM:
					set cabecalhoJaImpresso = 1
					write "<BR>"_linhaAFM_": "_$piece(listaStatusEntregas(linhaAFM),Y,2)
				}
			}
		}
	}
	else {
		//write "Entregas válidas."
		write $$$Text("MED00054")  ;Entregas válidas.
	}
 
	// Andre, 05/05/2008: Exibe mensagem informando que entregas não são 
	// obrigatórias, se a Natureza de Entrada da AFM for 2 - Estoque - Doação
	// ou 6 - Uso Específico.
	// Andre, 08/05/2008: idem para Natureza de Entrada 3 - Estoque - Ministério da Saúde.
	set objAFM = $get(^INAUF(YM,pNumAFM,1)) // Obter registro da AFM.
	if ( $get(objAFM) = "" ) {
		//write "<BR>Erro ao ler AFM de número '"_pNumAFM_"'."
		write "<BR>"_$$$Text($listbuild("MED00055",pNumAFM))  ;Erro ao ler AFM de número '%1'.
	}
	else {
		set naturezaEntradaAFM = $piece(objAFM,Y,347)
		if ( +$get(naturezaEntradaAFM) = 2 ) {
			//write "<BR>Esta AFM possui Natureza de Entrada 2 - Estoque - Doação, portanto, entregas programadas não são obrigatórias para esta AFM."
			write "<BR>"_$$$Text("MED00056")  ;Esta AFM possui Natureza de Entrada 2 - Estoque - Doação, portanto, entregas programadas não são obrigatórias para esta AFM.
		}
		if ( +$get(naturezaEntradaAFM) = 6 ) {
			//write "<BR>Esta AFM possui Natureza de Entrada 6 - Uso Específico, portanto, entregas programadas não são obrigatórias para esta AFM."
			write "<BR>"_$$$Text("MED00057")  ;Esta AFM possui Natureza de Entrada 6 - Uso Específico, portanto, entregas programadas não são obrigatórias para esta AFM.
		}
		// Andre, 08/05/2008:
		if ( +$get(naturezaEntradaAFM) = 3 ) {
			//write "<BR>Esta AFM possui Natureza de Entrada 3 - Estoque - Ministério da Saúde, portanto, entregas programadas não são obrigatórias para esta AFM."
			write "<BR>"_$$$Text("MED00058")  ;Esta AFM possui Natureza de Entrada 3 - Estoque - Ministério da Saúde, portanto, entregas programadas não são obrigatórias para esta AFM.
		}
	}
	// -------------------
	
	set lstHeader=""
	//set lstHeader=lstHeader_$listbuild("Seq","Código/Descrição","Quant.<BR>AFM")
	set lstHeader=lstHeader_$listbuild($$$Text("MED00039"),$$$Text("MED00040"),"Quant.<BR>AFM")
 
	set numEntrega = ""
	for {
		set numEntrega = $order(^VARSESAFMEntrega(YM,pNumAFM,numEntrega))
		quit:(numEntrega = "")
		
		set objEntrega = $get(^VARSESAFMEntrega(YM,pNumAFM,numEntrega,1))
		quit:($get(objEntrega) = "")
		
		set listaEntregas(numEntrega) = objEntrega
		set prazoDaEntrega 	= $piece(objEntrega,Y,1)
		set dataDaEntrega 	= $piece(objEntrega,Y,2)
		if (dataDaEntrega '= "" ) {
			//set lstHeader=lstHeader_$listbuild("Entrega "_numEntrega_"<BR>"_prazoDaEntrega_" dias"_"<BR>"_$zdatetime(dataDaEntrega,4))
			set lstHeader=lstHeader_$listbuild($$$Text("MED00043")_numEntrega_"<BR>"_prazoDaEntrega_$$$Text("MED00044")_"<BR>"_$zdatetime(dataDaEntrega,4))
		}
		else {
			//set lstHeader=lstHeader_$listbuild("Entrega "_numEntrega_"<BR>"_prazoDaEntrega_" dias"_"<BR>"_"Data indefinida")
			set lstHeader=lstHeader_$listbuild($$$Text("MED00043")_numEntrega_"<BR>"_prazoDaEntrega_$$$Text("MED00044")_"<BR>"_$$$Text("MED00045"))
		}
	}
 
 
	set lstHeader=lstHeader_$listbuild("Quant.<BR>Entregas")
 	
	//if $$Start^COMTable(lstHeader,"Entregas por linha da AFM:") {
	if $$Start^COMTable(lstHeader,$$$Text("MED00059")) {  ;Entregas por linha da AFM:
	
		set linhaDaAFM = ""
		for i=1:1 {
			set linhaDaAFM = $order(^INAUFP(YM,pNumAFM,linhaDaAFM))
			quit:(linhaDaAFM = "")
			
			set objLinhaDaAFM = $get(^INAUFP(YM,pNumAFM,linhaDaAFM,1))
			continue:(objLinhaDaAFM = "")
			
			set codProduto 	= $piece(objLinhaDaAFM,Y,4)
			set qtdAFM	 	= $piece(objLinhaDaAFM,Y,5)
			
			do NewLine^COMTable()
			do InsertCell^COMTable(linhaDaAFM)
			set nomeProduto = $piece($get(^INART(YM,codProduto,1)),Y,1)
			set nomeProduto = $zconvert(nomeProduto,"O","HTML")
			do InsertCell^COMTable("("_codProduto_") "_"<INPUT SIZE=30 VALUE="""_nomeProduto_""" STYLE=""border:0px solid lightgrey; color:navy; background-color:"_$case(i#2,1:"lightgrey",0:"white")_" ;padding-top:0 "" readonly unselectable>"_$select($length(nomeProduto)>25:" ...",1:""))
			do InsertCell^COMTable(qtdAFM)
			
			set numEntrega = "",somaQtdEntregas = 0
			for {
				set numEntrega = $order(listaEntregas(numEntrega))
				quit:(numEntrega = "")
 
				set linhaEntrega = $order(^VARSESAFMEntregaLinhas(YM,1,$$^WWWUMLAU(pNumAFM,1),linhaDaAFM,numEntrega,""))
				if ( $get(linhaEntrega) '= "" ) {
					set objLinhaEntrega = $get(^VARSESAFMEntregaLinha(YM,pNumAFM,numEntrega,linhaEntrega,1))
					set qtdEntrega = $piece(objLinhaEntrega,Y,2)
					do InsertCell^COMTable(qtdEntrega_" ("_$normalize(qtdEntrega/qtdAFM*100,1)_"%)")
					set somaQtdEntregas = somaQtdEntregas + qtdEntrega
				}
				else {
					do InsertCell^COMTable("")
				}
			}
			
			do InsertCell^COMTable(somaQtdEntregas_" ("_$normalize(somaQtdEntregas/qtdAFM*100,1)_"%)")
			
			do EndLine^COMTable()
	 
		}
 
		do Stop^COMTable()
	
	} // if start^comtable
	
	quit
 
ScriptDeploy
	// Andre, 19/03/2008
	// Script para deployment para a produção de alguns metadados.
	
	set NSAlvo = "COPIAPROD" // Namespace alvo (deve estar configurado como remoto - ECP)
	
	// Obtendo dados na origem:
	// -----------------------
	
	set botaoEntregasVARSESINAUF 	= $get(^WWW124(0,"VARSESINAUF","PT",6,1))
	set abaEntregasVARSESINAUF		= $get(^WWW1203(0,"VARSESINAUF","PT",7,1))
	set botaoEntregasVARTRKPAM		= $get(^WWW124(0,"VARTRKPAM","PT",5,1))
	set botaoProcessarINREC			= $get(^WWW124(0,"INREC","PT",8,1))
	set botaoProcessarINRECCust		= $get(^WWW124D(0,"INREC","PT",10,1))
	set abaEntregasINREC			= $get(^WWW1203(0,"INREC","PT",4,1))
	set onAfterDataFieldsINREC		= $piece(^WWW120(0,"INREC",1),"~",59)
	set botaoPreRecINREC			= $get(^WWW124(0,"INREC","PT",9,1))
	set botaoPreRecINRECCust		= $get(^WWW124D(0,"INREC","PT",11,1))
	
	ZN NSAlvo
	
	// Agora, no namespace alvo:
	// ------------------------
	
	do ^WWWVAR
	
	set status = $$Save^COMUtils("WWW124","""VARSESINAUF"",""PT"",6",botaoEntregasVARSESINAUF,1)
	write !,"botaoEntregasVARSESINAUF : ",status
	
	set status = $$Save^COMUtils("WWW124","""VARTRKPAM"",""PT"",5",botaoEntregasVARTRKPAM,1)
	write !,"botaoEntregasVARTRKPAM : ",status
	
	set status = $$Save^COMUtils("WWW1203","""VARSESINAUF"",""PT"",7",abaEntregasVARSESINAUF,1)
	write !,"abaEntregasVARSESINAUF : ",status
	
	set status = $$Save^COMUtils("WWW124","""INREC"",""PT"",8",botaoProcessarINREC,1)
	write !,"botaoProcessarINREC : ",status
	
	set status = $$Save^COMUtils("WWW124D","""INREC"",""PT"",10",botaoProcessarINRECCust,1)
	write !,"botaoProcessarINRECCust : ",status
	
	set status = $$Save^COMUtils("WWW1203","""INREC"",""PT"",4",abaEntregasINREC,1)
	write !,"abaEntregasINREC : ",status
	
	set $piece(^WWW120(0,"INREC",1),"~",59) = onAfterDataFieldsINREC // Não há índice para o campo 58 da WWW120.
	
	set status = $$Save^COMUtils("WWW124","""INREC"",""PT"",9",botaoPreRecINREC,1)
	write !,"botaoPreRecINREC : ",status
	
	set status = $$Save^COMUtils("WWW124D","""INREC"",""PT"",11",botaoPreRecINRECCust,1)
	write !,"botaoPreRecINRECCust : ",status
	
	ZN "DEV"
	
	quit
 
CriaEntregasPadrao(pIdAFM,pObjAFM)
	// Andre, 14/04/2008
	// Se foi definida uma entraga padrão na AFM, cria as diversas entregas uniformes correspondentes.
	new entrega, pNumEntrega, pObjEntrega, listaDePrazos, listaDePorcentagens, numEntregas, prazo, porcentagem,
		objVARSESAFMEntrega, strStatus
	
	quit:($get(pIdAFM) = "") ""
	quit:($get(pObjAFM) = "") ""
 
 	set strStatus = 1
 
	// Se já existem entregas para esta AFM, as exclui:
	set entrega = ""
	for {
		set entrega = $order(^VARSESAFMEntrega(YM,pIdAFM,entrega))
		quit:(entrega = "")
		set strStatus = $$KILL^COMUtils("VARSESAFMEntrega",pIdAFM_","_entrega)
		if ( 'strStatus ) {
			//set strStatus = "0~Erro ao excluir entrega '"_entrega_"'. Mensagem: "_strStatus
			set strStatus = $$$MakeStatus($$$Text($listbuild("MED00060",entrega))_strStatus)
			quit
		}
	}
	if ( 'strStatus ) {
		quit strStatus
	}
 
	set pNumEntrega = $piece(pObjAFM,Y,356)
	set pObjEntrega = $get(^VARSESEntregaPadrao(YM,pNumEntrega,1))
	
	quit:($get(pNumEntrega) = "") ""
	quit:($get(pObjEntrega) = "") ""
	
	set listaDePrazos 		= $piece(pObjEntrega,Y,1)
	set listaDePorcentagens = $piece(pObjEntrega,Y,2)
	
	set numEntregas = $length(listaDePrazos,";")
	
	for entrega=1:1:numEntregas {
		set porcentagem = $piece(listaDePorcentagens,";",entrega)
		set prazo = $piece(listaDePrazos,";",entrega)
		
		set objVARSESAFMEntrega = ""
		
		set $$$VARSESAFMEntregaPrazodeEntrega(objVARSESAFMEntrega) = prazo
		set $$$VARSESAFMEntregaEntregaUniforme(objVARSESAFMEntrega) = 1
		set $$$VARSESAFMEntregaPercentual(objVARSESAFMEntrega) = porcentagem
		
		set strStatus = $$Save^COMUtils("VARSESAFMEntrega",pIdAFM_","_entrega,objVARSESAFMEntrega,1)
		
		if ( strStatus = 1 ) {
			do CriaEntregaUniforme(pIdAFM_","_entrega,objVARSESAFMEntrega)
			
			// Andre, 22/04/2008: Se nenhuma linha criada, exclui a entrega:
			if ( '$data(^VARSESAFMEntregaLinha(YM,pIdAFM,entrega)) ) {
				set strStatus = $$KILL^COMUtils("VARSESAFMEntrega",pIdAFM_","_entrega)
				if ('strStatus ) {
					//set strStatus = "0~Erro ao excluir entrega '"_entrega_"' que não possui linhas. Mensagem: "_strStatus
					set strStatus = $$$MakeStatus($$$Text($listbuild("MED00061",entrega))_$$$Text("MED00062")_strStatus)
					quit
				}
			}
			
		}
		else {
			set strStatus = "0~Erro ao salvar entrega '"_entrega_"'. Mensagem: "_strStatus
			set strStatus = $$$MakeStatus($$$Text($listbuild("MED00063",entrega))_$$$Text("MED00062")_strStatus)
			quit
		}
	}
	
	quit strStatus
]]></Routine>
</Export>