<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW128Form" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW128Form
#include WWWConst
#include COMSYS
	;BR014965 Change to class/form
	
	;---------------------------------------
	; Numerator Classes
	;			WWW128		WWW1280		WWW1281		WWW128Form
	;	P1		Form		Form		Form		Class
	;	P2		 -			Location	Sequence	Form (associated with P1)
	;	
	;	D1		SeqNo		SeqNo		SeqNo		Prefix
	;	D2		Increment	Increment	 -			Link Class
	;	D3		Reset		Reset
	;	D4		ResetYear	ResetYear
	;---------------------------------------
	
OnBeforeFormConstruction(&YKEY)
	;-------------------------------------------------------------------------------
	; As WWW128 uses Form as the primary key (well sometimes)
	; When linking to WWW128Form we need to exchange form to the related class.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 22-May-2009	shobby	SRBR014975: YKEY is actually a two part key, even though
	; 							when coming from WWW128 we only get the first part.
	; 18-May-2009	shobby	SRBR014965: Created
	;-------------------------------------------------------------------------------
	if '$$$NoKey(YKEY) {
		set YKEY = $$$WWW120ClassUsedInForm($get(^WWW120(0,$$$KEY1(YKEY),1)))_","_$$$KEY2(YKEY)
	}
	quit
	
	
GetLink(pidClass,pidForm="")
	;-------------------------------------------------------------------------------
	; Gets the link defined to force a class to share a numbering system with another class
	;
	; Called by : WWWNEXT, WWWForm128
	; 
	; Inputs:	Keys for WWW128Form
	;
	; Returns:	Associated Class, if any (D2)
	;
	; History:
	; 20-May-2009	GRF		SRBR014965: standarise parameters
	; 03-Jul-2008	shobby	SRBR014965: Created
	;-------------------------------------------------------------------------------
	new objWWW128Form,strLink
	
	set strLink = ""
	
	if pidForm'="" {
		set objWWW128Form = $get(^WWW128Form(0,pidClass,pidForm,1))
		set strLink       = $$$WWW128FormLink(objWWW128Form)
	}
	quit strLink
	
	
GetPrefix(pidClass,pidForm="")
	;-------------------------------------------------------------------------------
	; Gets the link defined to force a class to share a numbering system with another class
	;
	; Called by : WWWNEXT, WWWForm128
	; 
	; Inputs:	Keys for WWW128Form
	;
	; Returns:	Assigned Prefix, if any (D1)
	;
	; History:
	; 20-May-2009	GRF		SRBR014965: standarise parameters
	; 03-Jul-2008	shobby	SRBR014965: Created
	;-------------------------------------------------------------------------------
	new objWWW128Form,strPrefix
	
	set strPrefix=""
	
	if pidForm'="" {
		set objWWW128Form = $get(^WWW128Form(0,pidClass,pidForm,1))
		set strPrefix     = $$$WWW128FormPrefix(objWWW128Form)
	}
	quit strPrefix
	
	
GetPrefixes(pidClass)
	;-------------------------------------------------------------------------------
	; Build an array of id prefixes and then translate the array into a string.
	; When allocating a new sequence number it is necessary to check all associated
	; classes - each potentially its own prefix - to ensure that the number has not
	; been allocated elsewhere.  The string returned contains all possible cross-
	; checks that are required.
	; 
	; Called by : WWWNEXT
	; 
	; Inputs:
	;
	; Returns:
	; 	String of "Prefix;Class" pairs, tilde delimited.
	;
	; History:
	; 03-Jul-2008	shobby	SRBR014965: Created
	;-------------------------------------------------------------------------------
	new arrPrefixes,idPrefix,strPrefixList
	
	set strPrefixList = ""
	do GetPrefixesLoop(pidClass,.arrPrefixes)
	do GetPrefixesThatPointToMe(pidClass,.arrPrefixes)
	set idPrefix = ""
	for {
		set idPrefix = $order(arrPrefixes(idPrefix))
		quit:idPrefix=""
		
		set $piece(strPrefixList,Y,$length(strPrefixList,Y)+1) = idPrefix
	}
	set strPrefixList = $piece(strPrefixList,Y,2,$length(strPrefixList,Y))
	quit strPrefixList
	
	
GetPrefixesLoop(pidClass,&parrPrefixes)
	;-------------------------------------------------------------------------------
	; Determine a list of prefixes that the IDs might have been saved with
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 20-May-2009	GRF		SRBR014965: use and test idLinkClass
	; 10-Jul-2008	shobby	SRBR014965: 2nd call to GetLink to prevent recursion.
	; 03-Jul-2008	shobby	SRBR014965: Created
	;-------------------------------------------------------------------------------
	new idForm,idLinkClass,objWWW128Form,strPrefix,strFormLink
	
	set parrPrefixes(";"_pidClass)=""
	set idForm = ""
	for {
		set idForm = $order(^WWW128Form(0,pidClass,idForm))
		quit:idForm=""
		
		set strPrefix   = $$GetPrefix(pidClass,idForm)
		set strFormLink = $$GetLink(pidClass,idForm)
		set parrPrefixes(strPrefix_";"_$$$WWW120ClassUsedInForm($get(^WWW120(0,idForm,1))))=""
	;	if (strFormLink'="")&&(strFormLink'=pidClass)&&($$GetLink($piece($get(^WWW120(0,strFormLink,1)),"~",11),strFormLink)'=idForm) {
	;		do GetPrefixesLoop(strFormLink,.parrPrefixes)
	;	}
		if (strFormLink'="") && (strFormLink'=pidClass) {
			set idLinkClass = $$$WWW120ClassUsedInForm($get(^WWW120(0,strFormLink,1)))
		    if (idLinkClass'="") && ($$GetLink(idLinkClass,strFormLink)'=idForm) {
				do GetPrefixesLoop(strFormLink,.parrPrefixes)
		    }
		}
	}
	quit
	
	
GetPrefixesThatPointToMe(pidLink,&parrPrefixes)
	;-------------------------------------------------------------------------------
	; Determine a list of prefixes that the IDs might have been saved with
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 20-May-2009	GRF		SRBR014965: $$$Index and clarify variable names
	; 09-Jul-2008	shobby	SRBR014965: YM not 0
	; 04-Jul-2008	shobby	SRBR014965: Created
	;-------------------------------------------------------------------------------
	new idClass,idxLinkClass
	
	set idxLinkClass = $$$Index(pidLink)
	set idClass = ""
	for {
		set idClass = $order(^WWW128Forms(0,1,idxLinkClass,idClass))
		quit:idClass=""
		
		do GetPrefixesLoop(idClass,.parrPrefixes)
	}
	quit
]]></Routine>
</Export>