<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWXML" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWXML(YDATEI,YKEY,YDTDFILE,YSAVEONLY,YSAVETO,YCRYPT,YID)
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		FORMAT ZUM EXPORT XML DATEN
	;
	; Inputs : 
	;	YDATEI		= DATEI,DIE ÜBERTRAGEN WERDEN SOLL
	;	YKEY		= PRIMÄRSCHLÜSSEL ODER "XMLSCHEMA" DANN KEIN DATENSATZ ABER SCHEMA
	;	YDTDFILE	= DATEINAME FÜR DTD, WENN "" DANN WIRD DTD AUSGEGEBEN
	;	YSAVEONLY	= 1 = DTD ERSTELLEN, WENN DTD ANGEGEBEN
	;				= 0   ODER "" = NUR AUF DATEI VERWEISEN DTD NICHT AUSGEBEN, WENN DTD ANGEGEBEN IST
	;	YSAVETO		= KEINE WRITE AUSGABE SONDERN SPEICHERN Z.B. IN ^WWWSOR(YUSER,0)
	;	YCRYPT		= 1 = DATEN WERDEN ALS BASE64 CRYPTED ;will when 
	;	YID			= MANUELLER ID Z.B DATENUEBERTRAGUNG
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 07-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 12-Jun-2007	GRF		SR15543: Naked references; expand commands; doco; quits
	; 30-May-2005	RPW		SR12056: Attempt at Performance Increase
	; 08.07.2001	DT		(C) BY DITMAR TYBUSSEK
	;-------------------------------------------------------------------------------
	;D ^WWWXML("TEST","","","","WWWSORT")  ;XML MIT DTD BESCHREIBUNG UND ALLE DATENSÄTZE IN DATEI WWWSOR(YUSER,0,...
	;D ^WWWXML("TEST")  ;XML MIT DTD BESCHREIBUNG UND ALLE DATENSÄTZE DER DATEI
	;D ^WWWXML("TEST","XMLSCHEMA") ; AUSGABE DES xmlschemas
	;D ^WWWXML("TEST","","TEST.DTD",1)  ;SPEICHERT NUR DTD ODER SCHEMA (WENN "XMLSCHEMA") IN DIRECTORY
	;D ^WWWXML("TEST","A","TEST.DTD")  ;XML MIT REFERENCE AUF TEXT.DTD NUR KEY A
	;D ^WWWXML("TEST","1")  ;XML MIT DTD BESCHREIBUNG UND NUR KEY "1"
	;--------------------------------------------------------------------------------
	IF '$DATA(Y) DO
	. NEW YKEY,YDATA
	. DO ^WWWVAR
	
	KILL ^WWWSOR(YUSER,"SEL")
	KILL ^WWWSOR(YUSER,"KEY")
	KILL ^WWWSOR(YUSER,"0")
	KILL ^WWWSOR(YUSER,"NAME")
	
	;SET YCRYPT=1 ;table-mat 
	NEW %DEV,TRENN,YFELD,ANZBL,YLFN,YXCHAR,I,YFILENAME
	
	SET YXCHAR=""
	FOR I=128:1:255 IF '$FIND("ÖÄÜßöäü",$CHAR(I)) SET YXCHAR=YXCHAR_$CHAR(I)  ; all high ascii EXCEPT ...
	
	SET YDATEI = $GET(YDATEI)
	SET YKEY   = $GET(YKEY)
	
	SET YDATAX=0 IF YKEY="" SET YDATAX=1         ; FIXME <GRF> : over-ridden by next line
	SET YDATAX=1                                 ;IMMER MIT <DATA> TAG ;constantly by means of TAG 
	
	QUIT:$EXTRACT(YDATEI,$LENGTH(YDATEI))="."
	SET YSAVEONLY = $GET(YSAVEONLY)
	SET YSAVETO   = $GET(YSAVETO)
	SET YDTDFILE  = $GET(YDTDFILE)
	;--------------------------------------------------------------------------------
	;ERSTELLEN FILENAMES
	SET YFILENAME=""
	IF YDTDFILE'="" SET YFILENAME=$PIECE($GET(^WWW012(0,YM,1)),Y,98)_YDTDFILE   ;DTD IN DATEI SPEICHERN ;within data file Save 
	IF YSAVETO'="" DO
	. SET YSAVEONLY=""
	. SET YFILENAME=$PIECE($GET(^WWW012(0,YM,1)),Y,98)_YSAVETO_$JOB_".XML"  ;ZWISCHENSPEICHERN
	
	;--------------------------------------------------------------------------------
	;ÖFNEN DER FILES wenn vorhanden ;the when on hand 
	SET %DEV=""
	IF YSAVEONLY=1 IF $LENGTH($GET(YFILENAME))>2 SET %DEV=$$^WWWDEV(YFILENAME)
	IF YSAVETO'="" IF $LENGTH($GET(YFILENAME))>2 SET %DEV=$$^WWWDEV(YFILENAME)
	IF %DEV'="" USE %DEV   ;USE DER FILE ;the 
	;-----------------------------------------------------------------------------
	;schema drucken or in file ;print within 
	IF $GET(YKEY)="XMLSCHEMA" IF $GET(YDATEI)'="" DO  QUIT
	. DO SCHEMAPRINT
	. IF %DEV'="" CLOSE %DEV
	
	;------------------------------------------------------------------------------
	;create DTD NUR SAVE IN FILE ;only within 
	IF $GET(YDTDFILE)'="" IF YSAVEONLY=1 IF $GET(YDATEI)'="" DO  QUIT
	. DO DTDPRINT
	. IF %DEV'="" CLOSE %DEV
	
	;-----------------------------------------------------------------------------
	;SELECT DER DATEN ;the 
	DO
	. IF YDTDFILE'="" IF YSAVEONLY=1 QUIT   ;NICHT NUR DTD SPEICHERN ;Not only Save 
	. DO ^WWWSOR(YDATEI,$GET(YKEY),"",0,0,0,1,"")
	
	QUIT:YSAVEONLY=1   ;KEINE AUSGABE VON XML ;no expenses XML 
	;-------------------------------------------------------------------------------
	;senden Datensatz ;transmit Data Record 
	SET TRENN=YCR
	DO HEAD  ;kopf header
	;dtd oder verweis auf dtd oder xml ;or upon or 
	IF (+YSAVEONLY=1) || (YDTDFILE="") DO DTDPRINT   ;DTD AUSGEBEN
	IF YDTDFILE'="" IF +YSAVEONLY'=1 WRITE "<!DOCTYPE "_""""_YDTDFILE_""""_">",YCR  ;DTD VERWEIS AUF ;reprimand upon 
	IF YDATAX=1 DO   ;WENN MEHRERE DATEN ;when divers 
	. WRITE YCR
	. WRITE "<DATA"
	. IF $GET(YID)'="" DO
	. . WRITE " ID="_""""_YKEY_""""
	. . IF $GET(YBED)'="" WRITE " USER="_""""_YBED_""""
	. . WRITE " DATE="_""""_$$^WWWDATE($HOROLOG)_""""
	. . WRITE " TIME="_""""_$$^WWWTIME($HOROLOG)_""""
	. ;
	. WRITE ">",YCR
	
	SET YA(2)=""
	FOR  SET YA(2)=$ORDER(^WWWSOR(YUSER,"KEY",YA(2))) QUIT:YA(2)=""  DO
	. SET YKEY=""
	. FOR  SET YKEY=$ORDER(^WWWSOR(YUSER,"KEY",YA(2),YKEY)) QUIT:YKEY=""  DO
	. . SET YA=$GET(^WWWSOR(YUSER,"KEY",YA(2),YKEY))
	. . DO IDWRITE
	
	IF YDATAX=1 DO   ;WENN MEHRERE DATEN ;when divers 
	. WRITE "</DATA>",YCR
	
	KILL ^WWWSOR(YUSER,"SEL")
	KILL ^WWWSOR(YUSER,"KEY")
	IF %DEV'="" CLOSE %DEV DO OPEN^WWWSTART
	IF YSAVETO'="" DO SAVETO
	
	QUIT
	
SAVETO ;ÜEBERTRAG IN DATEI YSAVETO ;within data file 
	; TODO : use string for $c(1..25) instead of creating it each time 
	;        then possibly set strSAT = $tr(SAT,strCHARS) and use that <GRF>
	IF YSAVETO'="" IF $LENGTH($GET(YFILENAME))>2 DO  DO OPEN^WWWSTART
	. SET %DEV=$$READ^WWWDEV(YFILENAME)
	. QUIT:%DEV=""
	. DO  CLOSE %DEV 
	. . USE %DEV
	. . SET YEOFILE=$ZUTIL(68,40,1)
	. . SET ANZBL=0  ;ANZAHL BLANK 
	. . FOR YLFN=1:1 USE %DEV READ SAT:1 QUIT:$ZEOF=-1  QUIT:'$TEST  QUIT:SAT="EOF"  SET:$TRANSLATE(SAT,$CHAR(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25)_" ")="" ANZBL=ANZBL+1 QUIT:ANZBL>20  DO
	. . . SET SAT=$TRANSLATE(SAT,$CHAR(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25))
	. . . SET @("^"_YSAVETO_"("_""""_YUSER_""""_",0,"_YLFN_")")=SAT
	. . . SET ANZBL=0  ;BEI IMPORT MAM ;next to importation 
	
	QUIT
	;--------------------------------------------------------------------------------------
	
SCHEMAPRINT ;DRUCKEN SCHEMA ;print scheme 
	DO
	. IF $FIND($ZVERSION,"4.1") || $FIND($ZVERSION,"4.0") || $FIND($ZVERSION,"3.2") QUIT   ;ALTER TEIL ;governor part 
	. IF '$DATA(^oddDEF("User."_YDATEI)) QUIT
	. DO HEAD
	. NEW OREF,OREF1,OREF2
	. WRITE "<xsd:schema xmlns:xsd="_""""_"http://www.w3.org/2001/XMLSchema"_""""_">"
	. SET OREF2="S OREF=##class(User."_YDATEI_").%New()" XECUTE OREF2
	. DO OREF.XMLSchema()
	. DO OREF.%Close()
	
	QUIT
	
DTDPRINT ;DRUCKEN DTD
	IF $FIND($ZVERSION,"4.1") || $FIND($ZVERSION,"4.0") || $FIND($ZVERSION,"3.2") DO  QUIT   ;ALTER TEIL ;governor part 
	. IF %DEV'="" USE %DEV 
	. WRITE "<!DOCTYPE "_YDATEI_" [",YCR
	. DO DTD 
	. WRITE "]>"
	
	IF '$DATA(^oddDEF("User."_YDATEI)) QUIT
	
	DO  ;class
	. NEW OREF,OREF2
	. IF %DEV'="" USE %DEV 
	. WRITE "<!DOCTYPE "_YDATEI_" [",YCR
	. IF YDATAX=1 WRITE "<!ELEMENT "_$EXTRACT("DATA                       ",1,20)_" ("_YDATEI_")*>"
	. SET OREF2="S OREF=##class(User."_YDATEI_").%New()" XECUTE OREF2 
	. DO OREF.XMLDTD()
	. DO OREF.%Close()
	. WRITE "]>"
	
	QUIT
	
HEAD ;KOPFZEILE
	DO
	. ;WRITE "<?xml version="_""""_"1.0"_""""_" encoding="_""""_"UTF-8"_""""_"?>"
	. WRITE "<?xml version="_""""_"1.0"_""""
	. SET YISO=$PIECE($GET(^WWW012(0,YM,1)),Y,76)  ;zeichensatz suchen ;seek 
	. IF YISO'="" SET YISO=$PIECE($GET(^WWW100(0,"CHARSET",SPRACHE,YISO,1)),Y,1)
	. IF YISO=""  SET YISO="iso-8859-1"
	. IF YISO'="" WRITE " encoding="_""""_YISO_""""
	. WRITE "?>",YCR
	
	QUIT
	;--------------------------------------------------------------------------------------
	
IDWRITE ;SCHREIBEN DATENSATZ ;write data record 
	IF $FIND($ZVERSION,"4.1") || $FIND($ZVERSION,"4.0") || $FIND($ZVERSION,"3.2") DO SATZ QUIT  ;ALTER TEIL  ;governor part 
	IF '$DATA(^oddDEF("User."_YDATEI)) QUIT
	NEW YA2,YA3,YA4,YA5,YA6,YA7,YA8,YA9,YA10,YA11,YA12,YA13
	
	SET YA4=$TRANSLATE($PIECE($PIECE(YA,"(",2),")",1),"""")
	SET YA7=""
	FOR YA2=1:1 QUIT:$PIECE(YA4,",",YA2)=""  SET:YA2'=1 YA7=YA7_"||" SET YA7=YA7_$PIECE(YA4,",",YA2)
	SET YA1=""                                                   ;DATENSATZ ;data record 
	SET FormObject="FormObj"
	SET @("YA2=##class("_YDATEI_").%ExistsId(YA7)") 
	IF YA2=1 DO                             ;WENN ALTER DATENSATZ VORHANDEN = LESEN ;when governor data record on hand read 
	. SET @(FormObject_"=##class("_YDATEI_").%OpenId(YA7)")
	. SET YA8="DO "_FormObject_".XMLExport()"   XECUTE YA8
	. SET YA8="SET YA5="_FormObject_".%Close()" XECUTE YA8
	. WRITE YCR
	
	QUIT
	
ALL ;ALLE DTD NEU AUFBAUEN ;recent construct 
	DO ^WWWVAR
	SET YDATEI=""
	FOR  SET YDATEI=$ORDER(^WWW001(0,YDATEI)) QUIT:YDATEI=""  DO
	. DO ^WWWXML(YDATEI,,YDATEI_".DTD",1)
	
	QUIT
	
SATZ ;EINZELSAETZE
	SET YFELD=$$^WWWSETL(YA)
	WRITE "<"_YDATEI_" ID="_""""_YKEY_""""_">",YCR
	DO ANZEIGE
	WRITE "</"_YDATEI_">",YCR
	QUIT
	
FEHL ;FEHLER ;shortcoming 
	WRITE $$^WWWTEXT(191)
	QUIT
	
ANZEIGE ;
	SET YLFN=""
	FOR  SET YLFN=$ORDER(^WWW002(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. SET YINHALT=$PIECE(YKEY,",",YLFN)
	. DO KEY
	. IF $GET(YCRYPT)=1 SET YINHALT=$$OUT^WWWBAS64I(YINHALT)
	. DO XMLKA
	. ;N in,outline
	. ;S in(1)=YINHALT
	. ;D encode^%wldbas64(.in)
	. ;S YINHALT=outlines(1)
	. WRITE YINHALT
	. DO XMLKE
	. WRITE TRENN
	
	SET YLFN=""
	FOR  SET YLFN=$ORDER(^WWW003(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. SET YINHALT=$PIECE(YFELD,Y,YLFN)
	. DO DATEN
	. QUIT:YINHALT=""
	. IF $GET(YCRYPT)=1 SET YINHALT=$$OUT^WWWBAS64I(YINHALT)
	. DO XMLDA
	. ;N in,outline
	. ;S in(1)=YINHALT
	. ;D encode^%wldbas64(.in)
	. ;S YINHALT=outlines(1)
	. WRITE YINHALT
	. DO XMLDE
	. WRITE TRENN
	
	WRITE YCR
	QUIT
	
KEY ;FORMAT KEY
	SET YTYP=$PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,3)
	SET YQ=0
	IF YINHALT'="" IF $PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,8)'="" DO  QUIT
	. NEW YDAT,YKE,YFE,YSAT,YDATA
	. SET YDAT=$PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,8)
	. SET YKE=$PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,9)
	. IF YKE'="" IF $EXTRACT(YKE)'="""" QUIT
	. SET YFE=$PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,10)
	. SET YSAT="^"_YDAT_"("_$$^WWWYM(YDAT,1)
	. SET YDATA=$GET(^WWW001(0,YDAT,1))
	. IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI UND VOL ;UCI And 
	. . QUIT:$FIND(YSAT,"^[")
	. . SET YSAT="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YSAT,"^",2,999)
	. ;
	. IF YKE'="" IF $EXTRACT(YKE)'="," SET YSAT=YSAT_YKE_","
	. IF $PIECE(YDATA,Y,8)'=4 SET YSAT=YSAT_""""_$TRANSLATE(YINHALT,"""")_""""_",1)"
	. IF $PIECE(YDATA,Y,8)=4  SET YSAT=YSAT_""""_$TRANSLATE(YINHALT,"""")_""""_")"
	. ;I $D(@(YSAT)) S YINHALT=$P(@(YSAT),Y,YFE) S YQ=1
	. SET YSAT(1)=$PIECE($$^WWWSETL(YSAT),Y,YFE)
	. IF YSAT(1)'="" SET YINHALT=YINHALT_" "_YSAT(1) SET YQ=1
	
	IF YQ=0 DO FORMAT
	QUIT
	
DATEN ;FORMAT DATEN
	SET YTYP=$PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,3)
	SET YQ=0
	IF YINHALT'="" IF $PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,8)'="" DO  QUIT
	. NEW YDAT,YKE,YFE,YSAT,YDATA
	. SET YDAT  = $PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,8)
	. SET YKE   = $PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,9)
	. IF YKE'="" IF $EXTRACT(YKE)'="""" QUIT
	. SET YFE   = $PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,10)
	. SET YSAT  = "^"_YDAT_"("_$$^WWWYM(YDAT,1)
	. SET YDATA = $GET(^WWW001(0,YDAT,1))
	. IF $PIECE(YDATA,Y,12)'="" IF $PIECE(YDATA,Y,13)'="" DO  ;UCI UND VOL ;UCI And 
	. . QUIT:$FIND(YSAT,"^[")
	. . SET YSAT="^["_""""_$PIECE(YDATA,Y,12)_""""_","_""""_$PIECE(YDATA,Y,13)_""""_"]"_$PIECE(YSAT,"^",2,999)
	. ;
	. IF YKE'="" IF $EXTRACT(YKE)'="," SET YSAT=YSAT_YKE_","
	. IF $PIECE(YDATA,Y,8)'=4 SET YSAT=YSAT_""""_$TRANSLATE(YINHALT,"""")_""""_",1)"
	. IF $PIECE(YDATA,Y,8)=4  SET YSAT=YSAT_""""_$TRANSLATE(YINHALT,"""")_""""_")"
	. ;I $D(@(YSAT)) S YINHALT=$P(@(YSAT),Y,YFE) S YQ=1
	. SET YSAT(1)=$PIECE($$^WWWSETL(YSAT),Y,YFE)
	. IF YSAT(1)'="" SET YINHALT=YSAT(1) SET YQ=1
	
	DO FORMAT
	QUIT
	
FORMAT ;
	QUIT:YINHALT=""
	SET YINHALT = $$GetLiteral^WWWTR(YTYP,YINHALT)
	IF YTYP=2 SET:+YINHALT=0 YINHALT="" SET:YINHALT=1 YINHALT="X" QUIT
	IF YTYP=5 SET YINHALT=$EXTRACT("*****************",1,$LENGTH(YINHALT)) QUIT
	IF YTYP=3 SET YINHALT=$TRANSLATE(YINHALT,"|"," ") QUIT
	QUIT
	
DTD ;DTD TEIL ;part 
	NEW YUSER
	
	SET YUSER="DTD"
	IF $GET(SPRACHE)="" SET SPRACHE="EN"
	WRITE YCR
	KILL ^WWWSOR(YUSER,"NAME")
	;WRITE "<!ELEMENT "_$EXTRACT("DATA                       ",1,20)_" ("_$$^WWWUPER($TRANSLATE($EXTRACT(YDATEI,1,20),YXCHAR_" .-,'`´/+*%&();:_"))_")*>"
	WRITE "<!ELEMENT "_$EXTRACT("DATA                       ",1,20)_" ("_$zconvert($TRANSLATE($EXTRACT(YDATEI,1,20),YXCHAR_" .-,'`´/+*%&();:_"),"U")_")*>"
	WRITE YCR
	;WRITE "<!ELEMENT "_$EXTRACT($$^WWWUPER($TRANSLATE($EXTRACT(YDATEI,1,20),YXCHAR_" .-,'`´/+*%&();:_"))_"                   ",1,20)_" "_"("
	WRITE "<!ELEMENT "_$EXTRACT($zconvert($TRANSLATE($EXTRACT(YDATEI,1,20),YXCHAR_" .-,'`´/+*%&();:_"),"U")_"                   ",1,20)_" "_"("
	SET YLFN=""
	FOR  SET YLFN=$ORDER(^WWW002(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. NEW YKO
	. SET YKO=$PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,1)
	. SET YKO=$EXTRACT(YKO,1,20)
	. IF $GET(^WWW0021(0,YDATEI,YLFN,SPRACHE,1))'=""     SET YKO=$PIECE(^WWW0021(0,YDATEI,YLFN,SPRACHE,1),Y,1)  ; SR15543 Naked Ref
	. IF $PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,25)'="" SET YKO=$PIECE(^WWW002(0,YDATEI,YLFN,1),Y,25)          ; SR15543 Naked Ref
	. SET YKO=$$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	. QUIT:YKO=""
	. QUIT:$DATA(^WWWSOR(YUSER,"NAME",YKO))
	. SET ^WWWSOR(YUSER,"NAME",YKO)=""
	. IF YLFN'=1 WRITE ","
	. WRITE $$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	. WRITE "?"
	
	SET YLFN=""
	FOR  SET YLFN=$ORDER(^WWW003(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. NEW YKO
	. SET YKO=$PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,1)
	. SET YKO=$EXTRACT(YKO,1,20)
	. IF $GET(^WWW0031(0,YDATEI,YLFN,SPRACHE,1))'=""     SET YKO=$PIECE(^WWW0031(0,YDATEI,YLFN,SPRACHE,1),Y,1)  ; SR15543 Naked Ref
	. IF $PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,25)'="" SET YKO=$PIECE(^WWW003(0,YDATEI,YLFN,1),Y,25)          ; SR15543 Naked Ref
	. SET YKO=$$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	. QUIT:YKO=""
	. QUIT:$DATA(^WWWSOR(YUSER,"NAME",YKO))
	. SET ^WWWSOR(YUSER,"NAME",YKO)="" 
	. DO
	. . IF YLFN=$ORDER(^WWW003(0,YDATEI,"")) IF '$DATA(^WWW002(0,YDATEI)) QUIT  ;KEIN PRIMÄRSCHLÜSSEL UND ERSTER DATENSATZ ;no And premier data record 
	. . WRITE ","
	. ; 
	. WRITE $$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	. WRITE "?"
	
	WRITE ")>"
	;W "]>"
	KILL ^WWWSOR(YUSER,"NAME")
	SET YLFN=""
	FOR  SET YLFN=$ORDER(^WWW002(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. NEW YKO
	. SET YKO=$PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,1)
	. SET YKO=$EXTRACT(YKO,1,20)
	. IF $GET(^WWW0021(0,YDATEI,YLFN,SPRACHE,1))'="" SET YKO=$PIECE(^WWW0021(0,YDATEI,YLFN,SPRACHE,1),Y,1)  ; SR15543 Naked Ref
	. IF $PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,25)'="" SET YKO=$PIECE(^WWW002(0,YDATEI,YLFN,1),Y,25)      ; SR15543 Naked Ref
	. SET YKO=$$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	. QUIT:YKO=""
	. QUIT:$DATA(^WWWSOR(YUSER,"NAME",YKO))
	. SET ^WWWSOR(YUSER,"NAME",YKO)=""
	. WRITE YCR
	. WRITE "<!ELEMENT "_$EXTRACT($$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)_"                   ",1,20)_" "_"(#PCDATA)>"
	
	SET YLFN=""
	FOR  SET YLFN=$ORDER(^WWW003(0,YDATEI,YLFN)) QUIT:YLFN=""  DO
	. NEW YKO
	. SET YKO=$PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,1)
	. SET YKO=$EXTRACT(YKO,1,20)
	. IF $GET(^WWW0031(0,YDATEI,YLFN,SPRACHE,1))'="" SET YKO=$PIECE(^WWW0031(0,YDATEI,YLFN,SPRACHE,1),Y,1)  ; SR15543 Naked Ref
	. IF $PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,25)'="" SET YKO=$PIECE(^WWW003(0,YDATEI,YLFN,1),Y,25)      ; SR15543 Naked Ref
	. SET YKO=$$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	. QUIT:YKO=""
	. QUIT:$DATA(^WWWSOR(YUSER,"NAME",YKO))
	. SET ^WWWSOR(YUSER,"NAME",YKO)=""
	. WRITE YCR
	. WRITE "<!ELEMENT "_$EXTRACT($$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)_"                   ",1,20)_" "_"(#PCDATA)>"
	
	WRITE YCR
	KILL ^WWWSOR(YUSER,"NAME")
	QUIT
	
XMLKA ;KEY START ;KEY take-off 
	WRITE "    <"
	DO XMLK
	WRITE ">"
	QUIT
	
XMLKE ;KEY ENDE ;KEY termination 
	WRITE "</"
	DO XMLK
	WRITE ">"
	;W TRENN
	QUIT
	
XMLDA ;DATEN START ;take-off 
	WRITE "         <"
	DO XMLD
	WRITE ">"
	QUIT
	
XMLDE ;DATEN ENDE ;termination 
	WRITE "</"
	DO XMLD
	WRITE ">"
	;W TRENN
	QUIT
	
XMLK ;KEY
	NEW YKO
	
	SET YKO=$PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,1)
	IF $GET(^WWW0021(0,YDATEI,YLFN,SPRACHE,1))'=""     SET YKO=$PIECE(^WWW0021(0,YDATEI,YLFN,SPRACHE,1),Y,1)  ; SR15543 Naked Ref
	IF $PIECE($GET(^WWW002(0,YDATEI,YLFN,1)),Y,25)'="" SET YKO=$PIECE(^WWW002(0,YDATEI,YLFN,1),Y,25)          ; SR15543 Naked Ref
	WRITE $$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	SET YINHALT=$TRANSLATE(YINHALT,"()<>?|&")
	SET YINHALT=$$^WWWUMLAU(YINHALT)
	QUIT
	
XMLD ;DATEN
	NEW YKO
	
	SET YKO=$PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,1)
	IF $GET(^WWW0031(0,YDATEI,YLFN,SPRACHE,1))'=""     SET YKO=$PIECE(^WWW0031(0,YDATEI,YLFN,SPRACHE,1),Y,1)  ; SR15543 Naked Ref
	IF $PIECE($GET(^WWW003(0,YDATEI,YLFN,1)),Y,25)'="" SET YKO=$PIECE(^WWW003(0,YDATEI,YLFN,1),Y,25)          ; SR15543 Naked Ref
	WRITE $$^WWWUMLAU($TRANSLATE($EXTRACT(YKO,1,20),YXCHAR_" .-,'`´/+*%&();:_"),1)
	SET YINHALT=$TRANSLATE(YINHALT,"()<>?|&")
	SET YINHALT=$$^WWWUMLAU(YINHALT)
	QUIT
]]></Routine>
</Export>