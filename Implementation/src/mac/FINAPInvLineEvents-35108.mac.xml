<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvLineEvents" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvLineEvents
 ;******************************************************************************************************
 ; PLEASE NOTE THE FOLLOWING PROCEDURES HAVE BEEN MADE OBSOLETE
 ; 
 ; OnBlur / OnBlurOLD - REPLACED WITH OnBlur^FINAPInvLineEvents2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
	
#include COMSYS
#include FINConst
#include COMGridEdit31
	
#define AddToMenuList(%1) set lstNewMenuItems = lstNewMenuItems_$listbuild(%1)
	
 ;******************************************************************************************************
 ; THIS TEMPORARY PATCH FOR DEVELOPMENT PURPOSES IS NO LONGER IN USE
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
	
OnBlur(pCOL,pROW,pYFELD)
    ;-------------------------------------------------------------------------------
    ; ** TEMPORARY ** Rewriting tax for 3WM, following approach taken in APVouchers
    ;
    ; History:
    ; 21-Jul-2005	PO		SR12965: Created
    ;-------------------------------------------------------------------------------
	
	do OnBlurOLD(pCOL,pROW,.pYFELD)
	
	quit
	
 ;******************************************************************************************************
 ; THIS PROCEDURE IS NO LONGER IN USE, SEE OnBlur^FINAPInvLineEvents2
 ; 
 ; THIS CHANGE HAS BEEN MADE UNDER SR12965
 ;******************************************************************************************************
	
OnBlurOLD(pCOL,pROW,pYFELD)
	;-------------------------------------------------------------------------------
    ; Handle a blur for a grid row. Update fields depending on other fields and set
    ; criteria.
    ;
    ; History:
    ; 19-Aug-2005	RPW		SR11983: Recalculate the Discount Tax.
    ; 06-Jul-2005	JW		SR12705: Added parameter to call
    ; 05-Jul-2005	Shobby/PO	SR12705: Now using in memory header record and only
    ; 							setting FC variance once
    ; 27-Jun-2005	PO		SR12705: Set FC var amount & where to post and use
    ; 							GetKey^COMUtilClass
    ; 20-Jun-2005	PK		Only blur price column that is visible SR:12496
    ; 10-May-2005	PO			SR:12256 Update VAR FC field when Inv U/P blurred
    ; 03-May-2005	PK		Added Update Tax call. SR:12231
    ; 19-Apr-2005	RPW		SR12176: A Quick fix for OnLineAdded which does not
    ; 							have YKEY defined correctly, instead YYKEY is
    ; 							correct.  Store the old YKEY, and redefine to YYKEY
    ; 							if piece 2 of YKEY, delim ',', is empty.
	; 07-Apr-2005	RPW		SR11836: Modified OpenQuantity to UnmatchedQuantity,
	; 							removed duplicate line
    ; 17-Mar-2005	JW		SR11916: Headers now calculated from Grid End.
    ; 16-Mar-2005	PO		SR11349 FC support
    ; 11-Mar-2005	PK		Added updating of currency fields on lines.
    ; 18-Feb-2005	RPW		Fixed a call error
    ; 07-Feb-2005	RPW		Allow the handling of the ToolTips in the variance
    ; 							posting fields.
    ; 25-Jan-2005	RPW		Modified to handle the ium '= oum.
    ; 19-Jan-2005	RPW		Created (SR10061)
    ;-------------------------------------------------------------------------------
	;do AddReference^COMGridEdit31Interface(pCOL,"M")  ;pCOL is already the form position
	new blnShowTotal,fltVariance,idField,idFINAPInv,idFINAPInvLine,idSupplier,objInvoice,strType,SupCur
	
	new oYKEY
	set oYKEY=YKEY
	new YKEY
	set YKEY=oYKEY
	
	do GetKey^COMUtilClass(YKEY,,,.idFINAPInv,.idFINAPInvLine)
	
	if idFINAPInvLine="" {
		set YKEY = $get(YYKEY)
		do GetKey^COMUtilClass(YKEY,,,.idFINAPInv,.idFINAPInvLine)
	}
	
	set blnShowTotal=$$IsSupplierTotalVariancePosting(idFINAPInv)
	do GetObject^COMGridEdit31Interface(.objInvoice,$$$YES) ; returns both simple variable and array
	set idField=$$$GetClassField(YFORM,pCOL)
	
	;if $listfind($lb($$$FldFINAPInvLineInvoiceQuantity,$$$FldFINAPInvLineInvoiceTotal,$$$FldFINAPInvLineInvoiceEach,$$$FldFINAPInvLineInvoiceEachIncTax,$$$FldFINAPInvLineInvoiceTotalIncludingTax),idField) {
	if (idField=$$$FldFINAPInvLineInvoiceQuantity)    ||
	   (idField=$$VisibleColumn^FINAPInvLineTax($$$FINAPInvLinesIncludeTax(objInvoice),$$$FINAPInvShowLinesasTotals(objInvoice))) {  ;SR12496
		set pYFELD = $$UpdatePriceFields^FINAPInvLineTax(pYFELD,objInvoice,idField)
		set objInvoice(idFINAPInv,idFINAPInvLine) = pYFELD
		do UpdateTax^FINAPInvLineTax(.objInvoice,1)
		do UpdateDiscount^FINAPInvDiscount(idFINAPInv,idFINAPInvLine)
		set pYFELD=objInvoice(idFINAPInv,idFINAPInvLine)
		if idField'=$$$FldFINAPInvLineInvoiceQuantity set idField=$$$FldFINAPInvLineInvoiceEach
	}
	;}
	
	;if (idField=$$$FldFINAPInvLineInvoiceQuantity)||(idField=$$$FldFINAPInvLineInvoiceEach) {
	;	do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineInvoiceUnit)
	;}
	
	if (idField=$$$FldFINAPInvLineInvoiceQuantity)||(idField=$$$FldFINAPInvLineInvoiceEach) {
		do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineInvoiceUnit)
	}
	
	if idField=$$$FldFINAPInvLineInvoiceQuantity {
		set fltVariance=$$GetINVQ^FINAPInvLineGet(pYFELD)
		do UpdateManualField^COMGridEdit31Interface(pROW,23,fltVariance)
		do UpdateManualField^COMGridEdit31Interface(pROW,24,$$GetINVPrice^FINAPInvLineGet(pYFELD))
		if 'blnShowTotal {
			set strType = "IQ"
			set $$$FINAPInvLineVarianceINVQPost(pYFELD) = $$GetINVQVP^FINAPInvLineGet(pYFELD)
		;	set $$$FINAPInvLineVarianceFCDPost(pYFELD)  = $$GetVARFCPost^FINAPInvLineGet(pYFELD) ; ??
			do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVarianceINVQPost)
			do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVarianceINVDPost)
		;	do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVarianceFCDPost) ; ??
			if fltVariance=0 {
				do DeleteVariance^FINAPInvLineVariance(YKEY,strType)
			} elseif $$$FINAPInvLineVarianceINVQPost(pYFELD)=$$$EnumFINAPVARIANCEPOSTSplit { ;changed to use $$$EnumFINAPVARIANCEPOSTSplit instead of 4
				do ModifySplit^FINAPInvLineVarMod(YKEY,strType,$$$FINAPInvLineInvoiceQuantity(pYFELD)-$$$FINAPInvLineUnmatchedQuantity(pYFELD),fltVariance,$$GetINVPrice^FINAPInvLineGet(pYFELD))
			}
			;changed to use $$$EnumFINAPVARIANCEPOSTSplit instead of 4
			do:$$$FINAPInvLineVarianceINVDPost(pYFELD)=$$$EnumFINAPVARIANCEPOSTSplit ModifySplit^FINAPInvLineVarMod(YKEY,"ID",,,$$GetINVPrice^FINAPInvLineGet(pYFELD))
		} else {
			set fltVariance=$$GetINVPrice^FINAPInvLineGet(pYFELD)
			if $$$FCur(fltVariance)="" {
				set fltVariance = fltVariance+$$GetAdditionalCharges^FINAPInvCharge2(YKEY,pYFELD)
			}
			set $$$FINAPInvLineVariancePosting(pYFELD)=$$GetTotalVariance^FINAPInvLineGet(YKEY,pYFELD)
			if ($$$FCZero(fltVariance)) && ($$$FCZero($$GetINVQ^FINAPInvLineGet(pYFELD))) {
				do DeleteAllVariances^FINAPInvLineVariance(YKEY)
			} elseif $$$FINAPInvLineVariancePosting(pYFELD)=$$$EnumFINAPVARIANCEPOSTSplit { ;changed to use $$$EnumFINAPVARIANCEPOSTSplit instead of 4
				do ModifySplit^FINAPInvLineVarMod(YKEY,"TV",$$$FINAPInvLineInvoiceQuantity(pYFELD)-$$$FINAPInvLineUnmatchedQuantity(pYFELD),$$GetINVQ^FINAPInvLineGet(pYFELD),fltVariance)
			}
			do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVariancePosting)
		}
		
		; CODE FOR FC VARIANCE POSTING NEEDS TO BE PLACED HERE - not concerned with total detail
		set $$$FINAPInvLineVarianceFCDPost(pYFELD) = $$GetVARFCPost^FINAPInvLineGet(pYFELD)
		do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVarianceFCDPost)
		set fltVariance = $$GetVARFC^FINAPInvLineGet(pYFELD)
		do UpdateManualField^COMGridEdit31Interface(pROW,33,fltVariance)
		;
		; Close line if invoice quantity = order quantity - previously invoiced quantity.
		;set $$$FINAPInvLineClosed(pYFELD)=$$AllInvoiced^FINAPInvLine(pYFELD)
		set $$$FINAPInvLineClosed(pYFELD)=($$$FINAPInvLineInvoiceQuantity(pYFELD)=$$$FINAPInvLineUnmatchedQuantity(pYFELD))
		
	} elseif idField=$$$FldFINAPInvLineInvoiceEach {
		set fltVariance=$$GetINVPrice^FINAPInvLineGet(pYFELD)
		do UpdateManualField^COMGridEdit31Interface(pROW,24,fltVariance)
		if 'blnShowTotal {
			set strType="ID"
			set $$$FINAPInvLineVarianceINVDPost(pYFELD) = $$GetINVPriceVP^FINAPInvLineGet(pYFELD)
		;	set $$$FINAPInvLineVarianceFCDPost(pYFELD)  = $$GetVARFCPost^FINAPInvLineGet(pYFELD) ; ??
			
			if $$$FCZero(fltVariance) {
				do DeleteVariance^FINAPInvLineVariance(YKEY,strType)
			} else {
				do ModifySplit^FINAPInvLineVarMod(YKEY,strType,,,fltVariance)
			}
			do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVarianceINVDPost)
		;	do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVarianceFCDPost) ; ??
		
		} else {
			set fltVariance = $$GetINVPrice^FINAPInvLineGet(pYFELD)
			if $$$FCur(fltVariance)="" {
				set fltVariance = fltVariance+$$GetAdditionalCharges^FINAPInvCharge2(YKEY,pYFELD)
			}
			set $$$FINAPInvLineVariancePosting(pYFELD) = $$GetTotalVariance^FINAPInvLineGet(YKEY,pYFELD)
			if ($$$FCZero(fltVariance))&&($$$FCZero($$GetINVQ^FINAPInvLineGet(pYFELD))) {
				do DeleteAllVariances^FINAPInvLineVariance(YKEY)
			} elseif $$$FINAPInvLineVariancePosting(pYFELD) = $$$EnumFINAPVARIANCEPOSTSplit { ;changed to use $$$EnumFINAPVARIANCEPOSTSplit instead of 4
				do ModifySplit^FINAPInvLineVarMod(YKEY,"TV",$$$FINAPInvLineInvoiceQuantity(pYFELD)-$$$FINAPInvLineUnmatchedQuantity(pYFELD),$$GetINVQ^FINAPInvLineGet(pYFELD),fltVariance)
			}
			do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVariancePosting)
		}
		
		; CODE FOR FC VARIANCE POSTING NEEDS TO BE PLACED HERE - not concerned with total detail
		set $$$FINAPInvLineVarianceFCDPost(pYFELD) = $$GetVARFCPost^FINAPInvLineGet(pYFELD)
		do AddReference^COMGridEdit31Interface($$$FldFINAPInvLineVarianceFCDPost)
		
		set $$$FINAPInvLineInvoiceEach(pYFELD)=$$$FCUpdate($$$FINAPInvLineInvoiceEach(pYFELD),$$GetFCRate^FINAPInvCurrency(),1)
	;	set pYFELD = $$UpdatePriceFields^FINAPInvLineTax(pYFELD,objInvoice) ;$get(^FINAPInv(YM,idFINAPInv,1))
		set pYFELD = $$UpdatePriceFields^FINAPInvLineTax(pYFELD,objInvoice,idField) // JW SR12705 ***** THIS IS CAUSING PROBLEMS *****
		
		set fltVariance = $$GetVARFC^FINAPInvLineGet(pYFELD)
		do UpdateManualField^COMGridEdit31Interface(pROW,33,fltVariance)
	}
	
	// SR11916
 	;if (idField=$$$FldFINAPInvLineInvoiceQuantity)||(idField=$$$FldFINAPInvLineInvoiceEach) {
	;	do CalculateHeaderTotals()
	;}
	if (pCOL=26) || (pCOL=27) || (pCOL=28) || (pCOL=29) {
		if $$IsSupplierTotalVariancePosting($translate(idFINAPInv,$char(34),"")) {
			if $$$FINAPInvLineVariancePosting(pYFELD)=4 {
				// We have to split. So far only allows for the main split.
				if $$$FCur($$$FCAdd($$GetINVQ^FINAPInvLineGet(pYFELD),$$GetINVPrice^FINAPInvLineGet(pYFELD)))="" {
					if ($$GetINVQ^FINAPInvLineGet(pYFELD)+$$GetINVPrice^FINAPInvLineGet(pYFELD)+$$GetAdditionalCharges^FINAPInvCharge2(YKEY,pYFELD))'=0 {
						do SplitVariancePosting^FINAPInvLine(pROW,pYFELD,"TV",YKEY,pCOL)
					}
				} else {
					if '($$$FCZero($$$FCAdd($$GetINVQ^FINAPInvLineGet(pYFELD),$$GetINVPrice^FINAPInvLineGet(pYFELD)))) {
						do SplitVariancePosting^FINAPInvLine(pROW,pYFELD,"TV",YKEY,pCOL)
					}
				}
				;if ($$GetINVQ(pYFELD)+$$GetINVPrice(pYFELD)+$$GetAdditionalCharges(YKEY,pYFELD))'=0 {
				;	do SplitVariancePosting(pROW,pYFELD,"TV",YKEY,pCOL)
				;}
			}
		} else {
			if (pCOL=27) && ($$$FINAPInvLineVarianceINVQPost(pYFELD)=$$$EnumFINAPVARIANCEPOSTSplit) {
				// We have to split. So far only allows for the main split.
				if '($$$FCZero($$GetINVQ^FINAPInvLineGet(pYFELD))) {
					do SplitVariancePosting^FINAPInvLine(pROW,pYFELD,"IQ",YKEY,pCOL)
				}
			}
			if (pCOL=28) && ($$$FINAPInvLineVarianceINVDPost(pYFELD)=$$$EnumFINAPVARIANCEPOSTSplit) {
				// We have to split. So far only allows for the main split.
				 if '($$$FCZero($$GetINVPrice^FINAPInvLineGet(pYFELD))) {
					do SplitVariancePosting^FINAPInvLine(pROW,pYFELD,"ID",YKEY,pCOL)
				 }
			}
			if (pCOL=29) && ($$$FINAPInvLineVarianceOTHDPost(pYFELD)=$$$EnumFINAPVARIANCEPOSTSplit) {
				// We have to split. So far only allows for the main split.
				if '($$$FCZero($$GetAdditionalCharges^FINAPInvCharge2(YKEY,pYFELD))) {
					do SplitVariancePosting^FINAPInvLine(pROW,pYFELD,"OD",YKEY,pCOL)
				}
			}
		}
	}
	
	set YKEY = oYKEY
	
	quit
	
	
OnLineAdded(pintRowCount,pstrKey)
    ;-------------------------------------------------------------------------------
    ; If this is the first line added lock the supplier field
    ;
    ; Called by: CallEvent set in OnLineAdded^COMGridEdit31Events via form
    ;	redirected through OnLineAdded^FINAPInvLine
    ;
    ; History:
    ; 23-Sep-2005	JW		SR12880: Update for multiple pages.
    ; 02-Sep-2005	RPW		SR11983: If the grid is loaded and a new row is added,
    ; 							update all the header discounts.
    ; 01-Sep-2005	RPW/PO/SH	SR11983: Lock the invoice supplier and tax detail
    ; 							check boxes
    ; 28-Jun-2005	JW		Redundant routine has been removed.
    ; 16-Jun-2005	JW		SR12484: Unmatched Qty doesn't need to be updated
    ; 							- handled by MatchCache
    ; 02-Jun-2005	shobby	Moved from FINAPInvLine.  (Code Check)
    ; 19-Apr-2005	RPW		SR12176: Correctly calculate the Open Quantity and draw
    ; 							it on the grid.
    ; 07-Apr-2005	PK		Also disable the import number field
    ; 29-Mar-2005	shobby	Attach Additional Charges.
    ; 03-Feb-2005	RPW		Created
    ;------------------------------------------------------------------------------- 
    new idLine,strYFELD,strOldYFELD
    
	if pintRowCount=2 {
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvImportNumber,$$$YES,"FINAPInv")
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvSupplier,$$$YES,"FINAPInv")
		do ToggleReadOnly^COMUtilForm($$$FldFINAPInvInvoiceSupplier,$$$YES,"FINAPInv")
	}
	if $get(YOPEN)'=2 do AttachAdditionalCharges^FINAPInvLine(pintRowCount,pstrKey)	// FIXME - don't want to use YOPEN
	if $get(YGRIDLOADED,$$$NO)=$$$YES do RecalculateTotalDiscounts^FINAPInvDiscount(pstrKey)
	
	quit
	
	
OnDisplayRightClickMenu(pYKEY="",pYFELD="",pYFORM="")
    ;-------------------------------------------------------------------------------
    ; Customised right click menu options to link to an order or receive when clicking on a cell.
    ;
    ; Called By :
    ;	COMGridEdit31Events : CallEvent based on YFORM redirected from FINAPInvLine
    ;
    ; Returns:
    ;
    ; History:
    ; 09-Jul-2009	GRF		Macros
    ; 01-Dec-2006	SteveS	SR15230: Only allow additional charges if NOT in the header
    ; 							AddToMenuList macro
    ; 06-Sep-2006	JW		SR14484: Added lang text
    ; 09-May-2006	SteveS	SR14627: Disallow if no items on grid
    ; 02-Jun-2005	shobby	Moved from FINAPInvLine.  (Code Check)
    ; 01-Jun-2005	shobby	SR12487: Only show menu separator if there are additional lines.
    ; 05-Apr-2005	shobby	Language Text (SR11983)
    ; 23-Feb-2005	Shobby	Created
    ;-------------------------------------------------------------------------------
	new blnEnabled,idOrder,idLine,lstNewMenuItems,objFINAPInv,objFINAPInvLine
	
	; FIXME : Appears to require multiple lines - shouldn't Order/Receive apply to one line as well? <GRF>
	quit:($get($$$GRIDRowCount)=1) "" 		//SR14627
	
	set lstNewMenuItems = ""
	set pYKEY = $translate($get(pYKEY),"""")
	
	if $get(pYFELD)'="" {
		if pYKEY'="" {
			set idOrder = $$$KEY1($$$FINAPInvLineOrderNumber(pYFELD))
			set idLine  = $$$KEY2($$$FINAPInvLineOrderNumber(pYFELD))
		}
	}
	set blnEnabled = (($get(idOrder)'="") && ($get(idLine)'=""))
	
	$$$AddToMenuList($listbuild("html.gif",$$$Text("Fin00685")_"...","CallBack(""Order^FINAPInvLine"","""_pYKEY_""")",,blnEnabled))   	;Language Text="Order"
	$$$AddToMenuList($listbuild("html.gif",$$$Text("Fin00686")_"...","CallBack(""Receive^FINAPInvLine"","""_pYKEY_""")",,blnEnabled))	;Language Text="Receive"
	
	//set blnEnabled=($get(pYFELD)'="")
 	
	set objFINAPInv = $$$GRIDYFELDContainer
	
	if '$$GetKey^COMUtilClass(pYKEY,2) { //SR15230
		set blnEnabled = $$$NO
	} else {
		set blnEnabled = '$$$FINAPInvCostsPosted(objFINAPInv)	
	}
	
	if $$$GRIDAllowLinkedLines {
		$$$AddToMenuList("Separator") ;SR12487
		$$$AddToMenuList($listbuild("new.gif",$$$Text("Fin00726"),"CallBack(""AdditionalCharge^FINAPInvAdditionalCharge"","""_pYKEY_""","""_pYFORM_""")",,blnEnabled))	;Language Text="New Additional Charge"
		$$$AddToMenuList("Separator")
		$$$AddToMenuList($listbuild("SortAsc.gif",$$$Text("Fin00727"),"moveFocusToNextLinkedLine("""_pYKEY_""")",,blnEnabled))	;Language Text="Next Expandable Line"
		$$$AddToMenuList($listbuild("SortDsc.gif",$$$Text("Fin00728"),"moveFocusToPrevLinkedLine("""_pYKEY_""")",,blnEnabled))	;Language Text="Receive"
		$$$AddToMenuList($listbuild("new.gif","Show Only Charges","hideMainLines(0)",,'$$$FINAPInvCostsPosted(objFINAPInv)))	;Language Text="Receive"
	}
	
	quit lstNewMenuItems
	
	
OnBeforeDelete(pYKEY)
    ;-------------------------------------------------------------------------------
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 09-Jul-2009	GRF		Macros
    ; 12-Oct-2005	JW		SR13659: Created
    ;-------------------------------------------------------------------------------
	new idLine
	
	set idLine = $$$KEY2(pYKEY)
	
	if idLine = "Total" {
		set Q = $$$QDontSave
		$$$Alert($listbuild("Fin00911"))  ;Cannot delete the Total line
	}
	
	quit
	
	
IsSupplierTotalVariancePosting(pidInvoice="")
	;-------------------------------------------------------------------------------
	; Determines whether a supplier wishes to receive all the variance information
	; or the total variance information
	;
	; Returns:Boolean
	;
	; History:
	; 17-Jan-2005	RobertW	Created (SR10061)
	;-------------------------------------------------------------------------------
	quit:pidInvoice="" $$$NO                ; Not really needed but doesn't hurt.
	quit +$$$FINAPInvShowTotalVariance($get(^FINAPInv(YM,pidInvoice,1)))
	
]]></Routine>
</Export>