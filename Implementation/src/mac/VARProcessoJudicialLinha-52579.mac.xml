<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARProcessoJudicialLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARProcessoJudicialLinha
#include COMSYS
#include COMConst
#include VARConst
#include MEDConst
#define DELIM	$char(31)


OnBlurProduto(pintCol,pintRow,&pobjYFELD)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnBlurProduto campo Produto no form: VARProcessoJudicialLinha
    ; 
    ; Histórico:
    ; 	05-Out-2011		Karine:	Criado
    ;-------------------------------------------------------------------------------	
	new idProcessoJudicial, idProduto, objProduto, Unidade, Grupo, blnErro, strListItemCodes, 
		strDate, strFocusField, intCurrentLine, blnItemJaIncluido, intGridLine, intSeq, itemStatus

	set idProduto = $piece(pobjYFELD,Y,1)
	set blnItemJaIncluido = $$$NO
	set blnErro = $$$NO
	set itemStatus = 0   ;ativo 
	
	if idProduto = "" {
		set $$$VARProcessoJudicialLinhaDoseUOM(pobjYFELD)          = ""  ;Unidade
		set $$$VARProcessoJudicialLinhaQuantidade(pobjYFELD)       = ""  ;Quantidade
		set $$$VARProcessoJudicialLinhaQtdEstoqueData(pobjYFELD)   = "" ;Quantidade em Estoque na Data do Registro
		
	} else {
	
		set objItem = $get(^INART(0,idProduto,1))
			
		// 25-Ago-2010 Karine : Copied from INRECSummary - Inactive items cannot be requested to Buy		
		set itemStatus = $piece(objItem,Y,66)			
		if (itemStatus = 1) {
			set $piece(pobjYFELD,Y,1) = ""
			set blnErro = $$Erro("O produto '"_idProduto_"' está inativo. Favor verificar código correto no eFisco.")
		}
			
	   if (blnErro = $$$NO) {
			//Checking if the item was already used
			set strListItemCodes = $$GetItensJaIncluidos()
	
			set strDate = $piece($horolog, YKOMMA, 1)
			set strFocusField = $get(^WWWDATEN(0, strDate, YUSER, "VARProcessoJudicialLinha","V", "FOCUSFIELD"))
			set intCurrentLine = $extract($piece(strFocusField, "_", 1), 2,
				$length(strFocusField))
	
			for intGridLine = 1:1:$length(strListItemCodes, Y) {
				continue:(intGridLine = intCurrentLine)
 
				if ($piece(strListItemCodes, Y, intGridLine) = idProduto) {
					set blnItemJaIncluido = $$$YES
					quit
				}
			}
 
			if (blnItemJaIncluido) {
				// Searches for the "Seq." value of the grid line:
				set intSeq = ""
				for {
					set intSeq = $order(^WWWDATEN(0, strDate, YUSER, "VARProcessoJudicialLinha",
						"V", "REFERENCEROW", intSeq))
					quit:(intSeq = "")
 
					quit:($get(^WWWDATEN(0, strDate, YUSER, "VARProcessoJudicialLinha",
						"V", "REFERENCEROW", intSeq, 1)) = intGridLine)
				}
 
				set $piece(pobjYFELD,Y,1) = ""
				set blnErro = $$Erro("O produto '"_idProduto_"' já foi incluído em outra linha desse registro (Seq. = "_intSeq_").")
			}	
	  	 
	  	 }
	  	 
	  	 if (blnErro = $$$NO) {
	  	  	set $$$VARProcessoJudicialLinhaDoseUOM(pobjYFELD)          = $piece($get(^INART(YM,idProduto,1)),Y,40)
			set $$$VARProcessoJudicialLinhaQtdEstoqueData(pobjYFELD)   = $$GetQuantityOnHand^INARTMENGE(idProduto,1) ;Sempre Local 1 - CD
		
		 	do ShowAtas(1, "VARProcessoJudicial"_$$$DELIM_"VARProcessoJudicialLinha"_$$$DELIM_1_$$$DELIM_1)		
	  	 }
	}	 
	
	quit	
	
GetItensJaIncluidos()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnBlurProduto campo Produto no form: VARProcessoJudicialLinha
    ; 
    ; Histórico:
    ; 	05-Out-2011		Karine:	Criado
    ;-------------------------------------------------------------------------------	
	new strListItemCodes, strDate, intGridColItemCode, intGridLine, intItemCode
	
	set strListItemCodes = ""
 
	// Loop on grid lines:
	set strDate = $piece($horolog, YKOMMA, 1)
	set intGridColItemCode = 1
	set intGridLine = 0
	for {
		set intGridLine = $increment(intGridLine)
		set intItemCode = $get(^WWWDATEN(0,strDate,YUSER,"VARProcessoJudicialLinha","V", "Y"_intGridLine_"_"_intGridColItemCode,1))
		quit:(intItemCode = "")
 
		continue:(+$get(^WWWDATEN(0,strDate,YUSER,"VARProcessoJudicialLinha","V","KILLEDRECORD",intGridLine)))
 
		set $piece(strListItemCodes, Y, intGridLine) = intItemCode
	}
 
	quit strListItemCodes
	
	
DispensingUOM(pidPres,objPresLine)
	;-------------------------------------------------------------------------------
	; convert UOM prescribed into PickUOM
	;
	; Inputs:
	;
	; Returns: Pick UOM
	;
	; History:
	; 15-Jul-2009	DWR		SR16642: Created (Não usado ainda, pegando UOM direto da INART
	;-------------------------------------------------------------------------------
	new enumIssueType,fltExternalQty,fltOPExternalQty,fltOPInventoryQty,fltOPIssueQty
	new fltOPPickQty,idExternalUOM,idItem,idOPInventoryUOM,idOPIssueUOM
	new idOPPickUOM,objHeader,strStatus
	
	set strStatus   = $$$OK
	set idOPPickUOM = ""
	
	if '$$$NoKey(pidPres) {
		set objHeader = $$$GRIDYFELDContainer
		
		set enumIssueType  = "O"                           ; Paciente Ambulatorial
		set idItem         = $$$VARProcessoJudicialLinhaProduto(objPresLine)
		set fltExternalQty = $$$VARProcessoJudicialLinhaQuantidade(objPresLine)
		set idExternalUOM  = $$$VARProcessoJudicialLinhaDoseUOM(objPresLine)
		
		if $$$ISOK(strStatus) set idOPPickUOM = $$GetPickUOM^INUOMConversion(idItem,enumIssueType,.strStatus)
	}
	quit idOPPickUOM 
		
		
Erro(pMensagem)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnBlurProduto^VARProcessoJudicialLinha.mac
    ; 
    ; Histórico:
    ; 	28-Jun-2010		Criado
    ;-------------------------------------------------------------------------------	
	new blnErro
	
	$$$Alert(pMensagem)
	
	set $piece(pobjYFELD,Y,1) = ""
	set blnErro = $$$YES
	
	quit blnErro	

ShowAtas(pidEvent,pidParameters)
	;-------------------------------------------------------------------------------
    ; Carrega a DynaTable de atas vigentes e com saldo disponível para o produto.
    ;
    ; History:
    ; 11-Out-2011	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------	
	new idGrid, lstHeaders, lstColTypes, idKey, idKeyLine, objProcesso, objLine, strStatus,
		strFunction, idProduto, idxProduto, count, 	objAta, numeroProcesso, statusAta,
		dteValidade, idAta, idAtaLinha, fltSaldoItemQuant, objAtaLinha, idFornecedor, 
		fltQuantidade, idUnidade, fltPrecoUnit, strTableHeading
	
	set idGrid = $$$DYNTABLEGridLineFocusGrid(pidParameters)	
	
	set lstHeaders  = "" 
	set lstColTypes = ""
	
	kill ^CacheTempDynamicTable(YUCI,YUSER)
	
	set idKey     = $$ReferenceKey^COMGridEdit31Interface(idGrid,$$$DYNTABLEGridLineFocusRow(pidParameters))
	set idKeyLine = $$$KEY3(idKey)

	set objProcesso = $$$GRIDYFELDContainer
	set objLine     = $$$GRIDGetYFELD(idKeyLine)
	
	set strStatus = $$GetLock^WWWMultiLock("VARProcessoJudicial",idGrid,$$$KEY1(idKey)_$$$COMMA_$$$KEY2(idKey)_$$$COMMA_idKeyLine)
	
	set strFunction = "FillLine"

	set idProduto  = $$$VARProcessoJudicialLinhaProduto(objLine)	
	set idxProduto = $$$Index(idProduto)
	
	if $$$ISERR(strStatus) {
		write "function "_strFunction_"() {"
		write "alert('"_$$$JSText($$$Text(strStatus))_"');"
		write "}"
	} else {
		write "function "_strFunction_"() {"
		write "CallBack(""GoToAta^VARProcessoJudicialLinha"", getRowNum(getFocusField()), this.DiscData[0]);"
		write "}"
	}
						 
	set lstHeaders  = $listbuild("&nbsp;Nº Processo",
								 "&nbsp;Fornecedor",
								 "Quantidade&nbsp;",
								 "Saldo&nbsp;",
								 "UN",
								 "Preço Unitário&nbsp;",
								 "Validade da Ata&nbsp;")
	
	set lstColTypes = $listbuild($listbuild("left","display"),
								 $listbuild("left","display"),
								 $listbuild("right","display"),
								 $listbuild("right","display"),
								 $listbuild("center","display"),
								 $listbuild("right","display"),
								 $listbuild("right","display"))
	
	set count = 0
	
	if (idProduto = "") {

		set ^CacheTempDynamicTable(YUCI,YUSER,1,$increment(idLine),"data") = idLine_Y_1
		set ^CacheTempDynamicTable(YUCI,YUSER,1,idLine) = "&nbsp;Nenhum produto selecionado."
		
	} else {
	
		$$$Order4(^VARAtaLinhas,YM,2,idxProduto,idAta)
		
			set objAta = $get(^VARAta(YM,idAta,1))
			
			set numeroProcesso = $$$VARAtaNumeroProcesso(objAta)
			set statusAta 	   = $$$VARAtaStatus(objAta)
			set dteValidade    = $$$VARAtaDatadeValidade(objAta)
			
			//Ignorar atas em edição
			continue:(statusAta = 0)
			
			//Ignorar atas vencidas
			continue:(dteValidade < $horolog)
			
			$$$Order5(^VARAtaLinhas,YM,2,idxProduto,idAta,idAtaLinha)					
				
				set fltSaldoItemQuant = $$SQLGetSaldoItemQuant^VARAtaLinha(idAta,idAtaLinha)
				
				//Ignorar atas sem saldo restante
				continue:(fltSaldoItemQuant <= 0)
			
				set objAtaLinha = $get(^VARAtaLinha(YM,idAta,idAtaLinha,1))
				
				set count = $increment(count)
			
				set idFornecedor  = $$$VARAtaLinhaFornecedor(objAtaLinha)
				set fltQuantidade = $$$VARAtaLinhaQuantidade(objAtaLinha)
				set idUnidade	  = $$$VARAtaLinhaUnidade(objAtaLinha)
				set fltPrecoUnit  = $$$VARAtaLinhaValorUnitario(objAtaLinha)
			
				set ^CacheTempDynamicTable(YUCI,YUSER,1,$increment(idLine),"data") = idAta_Y_idAtaLinha
				set ^CacheTempDynamicTable(YUCI,YUSER,1,idLine) = "&nbsp;"_numeroProcesso_Y_
														 	  	"&nbsp;("_idFornecedor_") "_$$SQLGetDescFornecedor^VARSQL(idFornecedor)_Y_
														 	  	$$^WWWTR(0,12,fltQuantidade)_"&nbsp;"_Y_
														 	  	"<font color='blue'>"_$$^WWWTR(0,12,fltSaldoItemQuant)_"</font>&nbsp;"_Y_
														 	  	$$SQLGetSiglaUnit^VARSQL(idUnidade)_Y_
														 	  	$$FormatCurrency^COMTable(fltPrecoUnit)_"&nbsp;"_Y_
														 	  	$zdate(dteValidade,4)_"&nbsp;"
			$$$End	
		$$$End	
	} 
	
	if (count = 0) {		
		set ^CacheTempDynamicTable(YUCI,YUSER,1,$increment(idLine),"data") = idLine_Y_1
		set ^CacheTempDynamicTable(YUCI,YUSER,1,idLine) = "&nbsp;Nenhuma ata vigente com saldo disponível para o produto"		
	}
	
	set strTableHeading = "Atas vigentes e com saldo para o produto:"
	
	do DrawTable^WWW120DynTable(lstHeaders,1,lstColTypes,pidParameters,strFunction,pidEvent,"GoToAta^VARProcessoJudicialLinha",strTableHeading)

	kill ^CacheTempDynamicTable(YUCI,YUSER)
	
	quit
	
	
GoToAta(pidRow,pidAta,pid="")
	quit:(pidAta = "")
	
	if $data(^VARAta(YM,pidAta)) {	
		do GoToForm^COMUtilForm("VARAta",pidAta,,,$$$YES)
	}

	quit
	
OnBeforePrimaryKey()
	quit
	
OnBeforeFormat(pYFIELDNAME,strText,YFELD)
	quit		
]]></Routine>
</Export>