<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache" ts="2001-01-01 00:00:00">
<Routine name="VARStock" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VARStock
#include COMSYS
#define SituacaoDisponivel 1
#define SituacaoVencida 2
#define SituacaoEnderecoBloqueado 3

OnBeforeFormConstruction(pYKEY)
	quit:(pYKEY = "")
	
	if ($$$KEY1(pYKEY) = "External") {
		do VARLogAfterSave^VARUtil(YBED,YFORM)
		set $piece(^VARTempStock(YM,YBED,1),Y,1) = $$$KEY2(pYKEY)
		set $piece(^VARTempStock(YM,YBED,1),Y,2) = $$$KEY3(pYKEY)		
	}

	quit

OnAfterSave
	new Item, Local
	
	set Item	 = $get(VORG(1))
	set Local	 = $get(VORG(2))
	set OrderBy	 = $get(VORG(3))
	set Programa = $get(VORG(4))

	set $piece(^VARTempStock(YM,YBED,1),Y,1) = Item
	set $piece(^VARTempStock(YM,YBED,1),Y,2) = Local
	set $piece(^VARTempStock(YM,YBED,1),Y,3) = OrderBy
	set $piece(^VARTempStock(YM,YBED,1),Y,4) = Programa
	/* 
	if $piece($get(^WWW013(YM,YBED,1)),Y,129) = "0013" { ;Perfil de Juízes
		set $piece(^VARTempStock(YM,YBED,1),Y,2) = YLOCATION
	}
	*/
	do VARLogAfterSave^VARUtil(YBED,YFORM)
 	do GoToForm^COMUtilForm("VARStock",Item,,,,,)
	
	quit

OnAfterDataFields
	do PrintJS
	quit:($get(VORG(1)) = "")
	new filterItem, filterLocal, filterPrograma
	
	//Só apresenta os resultados da consulta caso o usuário tenha clicado no botão 'Ok' do form.
	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	set filterItem     = $get(VORG(1))
	set filterLocal	   = $get(VORG(2))
	set filterPrograma = $get(VORG(4))
	
	if filterItem  	  = "" set filterItem  	  = $piece(^VARTempStock(YM,YBED,1),Y,1)
	if filterLocal 	  = "" set filterLocal	  = $piece(^VARTempStock(YM,YBED,1),Y,2)	
	if filterPrograma = "" set filterPrograma = $piece(^VARTempStock(YM,YBED,1),Y,4)
	
	/*
	if $piece($get(^WWW013(YM,YBED,1)),Y,129) = "0013" { ;Perfil de Juízes
		set filterLocal = YLOCATION
	}
	*/
	if filterLocal '= "" {	
		do PrintEstoqueFisico(filterItem,filterLocal,filterPrograma)
	} else {
		do PrintEstoqueContabil(filterItem,filterPrograma)
	}
	
	quit
	
	
PrintEstoqueContabil(pidItem,pidPrograma)
	new Item, Local, Quantidade, count, totalQty, prefixStyle, posfixStyle, key, QuantDisponivel,
		QuantIndisponivel, totalQtyDisponivel, totalQtyIndisponivel
	
		&sql(DECLARE StockAllLocation CURSOR FOR
			 SELECT alSOH.dBundleStock.Item,
			 		alSOH.dBundleStock.Storage->Location,
			 		SUM(+alSOH.dBundleStock.QtyOnHand)
			   INTO :Item,:Local,:Quantidade
			   FROM alSOH.dBundleStock
			  WHERE alSOH.dBundleStock.Item = :pidItem
		        AND +alSOH.dBundleStock.QtyOnHand > 0
		        AND alSOH.dBundleStock.Storage->Code <> 'EmTransito'
			  	AND	((:pidPrograma IS NULL) OR (alSOH.dBundleStock.Bundle->Program = :pidPrograma))
		   GROUP BY dBundleStock.Item, dBundleStock.Storage->Location
		)
	
		&sql(open StockAllLocation)
	    if (SQLCODE) {
			quit
	    }	
		
		do PrintHeader(pidItem,"")
	
		//Tabela
	   	new lstHeader
	 	set lstHeader = ""
	  	set lstHeader = lstHeader_$listbuild("Local","&nbsp;&nbsp;Disponível&nbsp","&nbsp;&nbsp;Não Disponível&nbsp;","&nbsp;&nbsp;Quantidade Total&nbsp;&nbsp;")
  	
	  	if $$Start^COMTable(lstHeader,,,,$$$NO) {
			
			set count    = 0
			set totalQty = 0
			set totalQtyDisponivel   = 0
			set totalQtyIndisponivel = 0
		
			for { &sql(fetch StockAllLocation)
					   quit:SQLCODE
				
				if (filterPrograma '= ""){
					set QuantDisponivel   = $$^INARTMENGE(pidItem,,Local,,0,,,filterPrograma) //0 = Quantidade Disponível
				} else {
					set QuantDisponivel   = $$^INARTMENGE(pidItem,,Local,,0) //0 = Quantidade Disponível
				}
				
				set QuantIndisponivel = Quantidade - QuantDisponivel
			
				set count    = $i(count)
				set totalQty = totalQty + Quantidade
				set totalQtyDisponivel   = totalQtyDisponivel + QuantDisponivel
				set totalQtyIndisponivel = totalQtyIndisponivel + QuantIndisponivel
								
				if (Local = YLOCATION) {
					set prefixStyle = "<strong>"
					set posfixStyle = "</strong>"
				} else {
					set prefixStyle = ""
					set posfixStyle = ""
				}
				
				set key = pidItem_","_Local
				
				do NewLine^COMTable()
		    	do InsertCellCallback^COMTable(prefixStyle_Local_" - "_$piece($get(^WWW0121(YM,YM,Local,1)),Y,1)_prefixStyle,"GoToEstoqueFisico^VARStock",key)
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,QuantDisponivel)_prefixStyle,,,,"RIGHT")
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,QuantIndisponivel)_prefixStyle,,,,"RIGHT")
		    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,Quantidade)_prefixStyle,,,,"RIGHT")		    		
		    	do EndLine^COMTable()
			}
		
			do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Estoque Total na Rede</strong>",,,,"RIGHT",,1)
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyDisponivel)_"</strong>",,,,"RIGHT")
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQtyIndisponivel)_"</strong>",,,,"RIGHT")
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQty)_"</strong>",,,,"RIGHT")			    
			do EndLine^COMTable()
		
			do Stop^COMTable()	
	  	}
	
		&sql(close StockAllLocation)

	quit


PrintEstoqueFisico(pidItem,pidLocal,pidPrograma)	
	new Item, Local, Storage, Quantidade, Lote, Validade, idPrograma, idBundle, idBundleStorage, count,
		totalQty, nomePrograma, isBlockedStorage, prefixStyle, posfixStyle, descStorage, detalhesReserva,
		objStorage, blnDUC, ItemPolicyHasProgram, ItemPolicyHasBrand, qtyColumns, idMarca, nomeMarca,
		isBlockedPhysicalStorage, reasonBlockedPhysical, descBlockedPhysical, externalKey, orderBy
		
	&sql(DECLARE Stock CURSOR FOR
		 SELECT alSOH.dBundleStock.Item,
		 		alSOH.dBundleStock.Storage->Location,
		 		alSOH.dBundleStock.Storage->Code,
		 		+alSOH.dBundleStock.QtyOnHand,
		 		alSOH.dBundleStock.Bundle->LotNumber,
		 		alSOH.dBundleStock.Bundle->UseByDate,
		 		alSOH.dBundleStock.Bundle->Program,
		 		alSOH.dBundleStock.Bundle->Brand,
		 		alSOH.dBundleStock.Bundle->ID,
		 		alSOH.dBundleStock.Storage
		   INTO :Item, :Local, :Storage, :Quantidade, :Lote, :Validade, :idPrograma, :idMarca, :idBundle, :idBundleStorage
		   FROM alSOH.dBundleStock
		  WHERE alSOH.dBundleStock.Item = :pidItem
		   AND  alSOH.dBundleStock.Storage->Location = :pidLocal
		   AND +alSOH.dBundleStock.QtyOnHand > 0
		   AND alSOH.dBundleStock.Storage->Code <> 'EmTransito'
		   AND	((:pidPrograma IS NULL) OR (alSOH.dBundleStock.Bundle->Program = :pidPrograma))
		  ORDER BY $$GetOrderBy^VARStock(
		  			 $$GetProgramName^VARSQL(alSOH.dBundleStock.Bundle->Program)
		  			,$$SQLGetPhysicalStorage^VARSQL(alSOH.dBundleStock.Storage->Code,alSOH.dBundleStock.Storage->Location)
		  			,alSOH.dBundleStock.Bundle->ID
		  )
	)
	
		&sql(open Stock)
	    if (SQLCODE) {
			quit
	    }
	
		do PrintHeader(pidItem,pidLocal)
	
		//Tabela
	   	new lstHeader	 	
	 	set lstHeader = ""	 		 
	 	
	 	set ItemPolicyHasProgram = $$CheckItemPolicyHasProgram^VARINART(pidItem)
	 	set ItemPolicyHasBrand   = $$CheckItemPolicyHasBrand^VARINART(pidItem)
	 	
	 	set lstHeader = lstHeader_$listbuild("Local","Endereço","Lote","Validade")
	 	set qtyColumns = 4
	 	
	  	if (ItemPolicyHasProgram = $$$YES) {
		  	set lstHeader = lstHeader_$listbuild("Programa")
		  	set qtyColumns = $i(qtyColumns)	  	
	  	}
	  		  	
	  	if (ItemPolicyHasBrand = $$$YES) {
		  	set lstHeader = lstHeader_$listbuild("Marca")
	  		set qtyColumns = $i(qtyColumns)
	  	}
	  	
	  	set lstHeader = lstHeader_$listbuild("Quantidade")
	  	set qtyColumns = $i(qtyColumns)
  	
	  	if $$Start^COMTable(lstHeader) {
			set count = 0
			set totalQty = 0
		
			for { &sql(fetch Stock)
					   quit:SQLCODE
			
				set count = $i(count)
				set totalQty = totalQty + Quantidade
		
				set nomePrograma = $$GetProgramName^VARSQL(idPrograma)
				set nomeMarca    = $$GetBrandName^VARSQL(idMarca)
			
				set isBlockedStorage = ""
				set isBlockedStorage = $$checkIfBlockedStorage(Local,Storage)
			
				set prefixStyle = ""
				set posfixStyle = ""

				set objStorage = $get(^INLP(YM,Local,Storage,1))
				set blnDUC     = $piece(objStorage,Y,21)
				
				set descStorage = Storage
				
				if Local = $$getFarmaciaAcoesJudiciais^VARParametroCliente(0) {
					
					if $$SQLGetPatientName^VARSQL(Storage) '= ""{
						set descStorage = $$SQLGetPatientName^VARSQL(Storage)
					}
				
				} elseif (blnDUC = $$$YES) { //Se o endereco é um DUC
					
					set physicalStorage = $piece(objStorage,Y,22)					
					set isBlockedPhysicalStorage = $$checkIfBlockedStorage(Local,physicalStorage)
					
					if (isBlockedPhysicalStorage = $$$YES) {
						
						set reasonBlockedPhysical = $$getMotivoEndBloqueado^VARWMSUtils(Local,physicalStorage)
						
						if (reasonBlockedPhysical '= "") {
							set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado. Motivo: "_reasonBlockedPhysical_".'>"
						} else {
							set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado.'>"
						}
						
						set posfixStyle = "</span></font>"										
					}
					
					set descStorage = physicalStorage_" ["_Storage_"]"
					
				}
			
				if (isBlockedStorage = $$$YES) {
					
					set reasonBlocked = $$getMotivoEndBloqueado^VARWMSUtils(Local,Storage)
					
					if (reasonBlocked '= "") {
						set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado. Motivo: "_reasonBlocked_".'>"
					} else {
						set prefixStyle = "<font color=gray style=text-decoration:line-through><span title = 'Endereço bloqueado.'>"
					}
					set posfixStyle = "</span></font>"
				
				} elseif ( (Validade < $horolog) && (Validade '= "") ) {
					set prefixStyle = "<font color=red style=text-decoration:line-through><span title = 'Produto vencido.'>"
					set posfixStyle = "</span></font>"
				}
				
				if Validade '= "" set Validade = $zdate(Validade,4)				
				
				set detalhesReserva = ""
				set detalhesReserva = $$GetDetalhesReserva(pidItem,pidLocal,Storage,idBundleStorage,idBundle)	
				
				set externalKey = "ExternalEndereco"_$$$COMMA_Storage
				
				do NewLine^COMTable()
		    	;do InsertCell^COMTable(count)
		    	if (count = 1) {
		    		do InsertCell^COMTable(Local_" - "_$piece($get(^WWW0121(YM,YM,Local,1)),Y,1))
		    	} else {
			    	do InsertCell^COMTable("")		    	
		    	}	
				
		    	do InsertCell^COMTable(prefixStyle_descStorage_posfixStyle,"VAREstoqueConsEndereco",externalKey)
		    	do InsertCell^COMTable(prefixStyle_Lote_posfixStyle)
		    	do InsertCell^COMTable(prefixStyle_Validade_posfixStyle)
		    	
		    	if (ItemPolicyHasProgram = $$$YES) {
		    		do InsertCell^COMTable(prefixStyle_nomePrograma_posfixStyle)		    		
		    	}
		    	
		    	if (ItemPolicyHasBrand = $$$YES) {
			    	if (nomeMarca = "") set nomeMarca = "&nbsp;"
			    	do InsertCell^COMTable(prefixStyle_nomeMarca_posfixStyle)	
		    	}
		    	
		    	do InsertCell^COMTable(prefixStyle_detalhesReserva_$$^WWWTR(0,12,Quantidade)_posfixStyle,,,,"RIGHT")
		    	do EndLine^COMTable()
			}
		
			do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Estoque Total no Local</strong>",,,,"RIGHT",,qtyColumns-1)
		    do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,totalQty)_"</strong>",,,,"RIGHT")	
			do EndLine^COMTable()		
			do Stop^COMTable()
	  	}
	  	
	  	w "<div align=right style=margin-top:4px;>&raquo; <a style=text-decoration:underline; onclick='doLink(this);' href='javascript:CallBack(""GoToEstoqueContabil^VARStock"","""_pidItem_""");'>Ver todos os locais</a></div>"
	
		&sql(close Stock)
	
	quit
	
PrintHeader(pidItem,pidLocal)
	new objItem, descItem, idUnit, descUnit, idGroup, descGroup, avgCost, contaCont, descConta, status, descItemComp
 	set objItem = $get(^INART(YM,pidItem,1))
 	
	set descItem  	 = $piece(objItem,Y,1)
	set descItemComp = $piece(objItem,Y,10)
	set idUnit    	 = $piece(objItem,Y,40)
	set descUnit  	 = $$SQLGetDescCompletaUnit^VARSQL(idUnit)
	set idGroup   	 = $piece(objItem,Y,30)
	set descGroup 	 = $piece($get(^INItemGroup(YM,idGroup,1)),Y,2)
	;Petik 28/12/2009
	;Alterado para o novo campo Conta Contábil (D278)
	;set conta     = $piece(objItem,Y,276)
	set conta     = $piece(objItem,Y,278)
	set descConta = ""
	set status	  = $piece(objItem,Y,66) 
		
	if conta '= "" {
		set descConta = $piece($get(^INPARA(YM,"VARTCICONTACONTABIL","PT",conta,1)),Y,1)
	}
	set avgCost   = $$GetCost^INItemCost(pidItem)
	
	if status = "1"{
		write "<br />&nbsp;<b><font color ='red'>Produto Inativo</font></b>"
	}
	write "<hr>" //Draws 1st horizontal line
	write "&nbsp;<span style='margin-left: 6px' title='"_descItemComp_"'><b>Produto: "_pidItem_" - "_descItem_"</b></span>"
	
	if pidLocal '= "" {
		write "<br /><div style=padding-top:3px>&nbsp;<b>Local:&nbsp;"_pidLocal_" - "_$piece($get(^WWW0121(YM,YM,pidLocal,1)),Y,1)_"</b></div>"
	}
	
	write "<hr>" //Draws 2nd horizontal line
	write "<table style='font-size:12px; margin-left: 6px'>" //Detalhes do Item
	write "<tr><td>Unidade de Estoque:</td><td>"_descUnit_"</td></tr>"
	write "<tr><td>Grupo do Produto:</td><td>"_idGroup_" - "_descGroup_"</td></tr>"
	//write "<tr><td>Conta Contábil:</td><td>"_conta_" - "_descConta_"</td></tr>"
	write "<tr><td>Custo Médio:</td><td>R$ "_$$^WWWTR(0,12,avgCost,4)_"</td></tr>"
	write "</table>"
	
	quit

checkIfBlockedStorage(pidLocal,pidStorage)
	$$$VAR ; Inicializa as variáveis do Net Manager
	if pidStorage = "" quit ""
	quit $piece($get(^INLP(YM,pidLocal,pidStorage,1)),Y,8)
	
checkIfDisabledStorage(pidLocal,pidStorage)
	if pidStorage = "" quit ""
	quit $piece($get(^INLP(YM,pidLocal,pidStorage,1)),Y,4)
	

Imprimir()
	;do Imprimir^VARStock()
	
	set Produto   = $G(VORG(1))
	set pidLocal  = $G(VORG(2))
	set pOrderBy  = $G(VORG(3))
	set pPrograma = $G(VORG(4))
	
	if (Produto = "") quit
	
	do RunReportEstoqueConsulta^VARJasperRunReport(Produto,pidLocal,pOrderBy,pPrograma)
	
	quit
	
	
GoToEstoqueFisico(pidItem,pidLocal)	
	new externalKey
	set externalKey = "External"_$$$COMMA_pidItem_$$$COMMA_pidLocal
		
 	do GoToForm^COMUtilForm("VARStock",externalKey)
	quit
	
GoToEstoqueContabil(pidItem)
	new externalKey
	set externalKey = "External"_$$$COMMA_pidItem_$$$COMMA_""
	
 	do GoToForm^COMUtilForm("VARStock",externalKey)
	quit
	
GetDetalhesReserva(pidItem,pidLocal,pidStorage,pidStorageBundle,pidBundle)
	quit:( (pidItem = "") || (pidLocal = "") ) ""

	new qtyReservada, strReservado, detalhesReserva
	
	set qtyReservada = $$GetReservedForABundle^INListBundles(pidItem,pidLocal,pidStorageBundle,pidBundle)
	quit:(qtyReservada = "") ""	
	quit:(qtyReservada = 0) ""
			
	set strReservado  = $$ListReservations^INDRPRUN4(pidItem,pidLocal,pidStorage,pidBundle)
	
	set detalhesReserva = "<font color='gray' title='"_strReservado_"' >"_
						   "("_$$^WWWTR(0,12,qtyReservada)_") "_
						   "</font>"
	
	quit detalhesReserva

GetOrderBy(pPrograma,pEndereco,pID)
	set filterOrderBy = $piece(^VARTempStock(YM,YBED,1),Y,3)
	
	if (filterOrderBy = 1){
		quit pEndereco
	}
	elseif (filterOrderBy = 2){
		quit pPrograma
	}
	else {
		quit pID
	}
	
	quit
	
PrintJS
	write !, "<script language=""javascript"">"
	
	&js<
	
		function OnLoadOrderBy() {
			OnBlurLocal();	
		}
		
		function OnBlurLocal() {
			if (document.getElementById('Y#(YFORM)#M2').value != "") {
				document.getElementById('Y#(YFORM)#M3').disabled = false;
			
			} else {
				// Habilita o campo Mostrar Programas
				document.getElementById('Y#(YFORM)#M3').disabled = true;	
				document.getElementById('Y#(YFORM)#M3').value = "";
			}				
		}		
		
		function addEvent(obj, evType, fn) {
 			if (obj.addEventListener) {
   				obj.addEventListener(evType, fn, false);
   				return true;
 			} else if (obj.attachEvent){
   				var r = obj.attachEvent('on'+evType, fn);
   				return r; 
 			} else {
   				return false;
 			}
		}		

		addEvent(document.forms[1].YVARStockM2, 'blur', OnBlurLocal);
		addEvent(window,'load', OnLoadOrderBy);
			
	>
	
	write !, "</script>"
	
	quit
	
GetSituacaoLote(codLocal,codStorage,validade)

	set objStorage = $get(^INLP(YM,codLocal,codStorage,1))
	
	set isBlockedStorage = ""
	set isBlockedStorage = $$checkIfBlockedStorage(codLocal,codStorage)
	
	set physicalStorage = $piece(objStorage,Y,22)					
	set isBlockedPhysicalStorage = $$checkIfBlockedStorage(codLocal,physicalStorage)
	set blnDUC     = $piece(objStorage,Y,21)
	set isBlockedStorage = $$checkIfBlockedStorage(codLocal,codStorage)
	
	
	if (blnDUC = $$$YES) {
		
		if (isBlockedPhysicalStorage = $$$YES) {	
			
			set estado = $$$SituacaoEnderecoBloqueado
		}
	}
		
	if (isBlockedStor]]><![CDATA[age = $$$YES) {	
		
		set estado = $$$SituacaoEnderecoBloqueado
				
	}  elseif ( (validade < $horolog) && (validade '= "") ) {	
		
		set estado = $$$SituacaoVencida
			
	} else {
			
		set estado = $$$SituacaoDisponivel
			
	}
		
	
	quit estado]]></Routine>
</Export>