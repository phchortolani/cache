<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARTRKINDRPBESTVOR" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include INConst
#include WWWConst
#include VARConst
#include COMSYS
 
VARTRKINDRPBESTVOR
 	quit
 
getCriticityIndex(pidCompany, pidItem)
	;-------------------------------------------------------------------------------
	; Returns customized field Criticity Index associated with provided item
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 07-Jul-2006	HJRB		SRBR014119: Created
	;-------------------------------------------------------------------------------
	new objItem, idCritic, objCritic
 	
	if pidCompany = "" set pidCompany = YM
	quit:(pidItem = "") ""
	
	set objItem = $get(^INART(pidCompany, pidItem, 1))
	set idCritic = $$$INARTFREE10(objItem)
	quit:(idCritic = "") ""
	set objCritic = $get(^INPARA(pidCompany,"INDICECRITICIDADE",SPRACHE,idCritic,1))
	quit $$$INPARAText(objCritic)
 
getStandardItem(pidCompany, pidItem)
	;-------------------------------------------------------------------------------
	;
	; Returns customized boolean field Standard Item associated with provided item
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 07-Jul-2006	HJRB		SRBR014119: Created
	;-------------------------------------------------------------------------------
	new objItem, idCritic, objCritic
 
	if pidCompany = "" set pidCompany = YM
	quit:(pidItem = "") ""
	set objItem = $get(^INART(pidCompany, pidItem, 1))
	
	set isStandardItem = $$$INARTFREE9(objItem)
	if isStandardItem { 
		; yes
		set resultText = $get(^WWW009(pidCompany,SPRACHE,32526,1))
	} else {
		; No
		set resultText = $get(^WWW009(pidCompany,SPRACHE,32272,1))
	}
	quit resultText	
	
	
getEmpenhoList(pidCompany, pidItem, pidSupplier, pidLocation)
	;-------------------------------------------------------------------------------
	; 
	; Returns a string ready to be printed on HTML of a list of not completely received 
	; orders and associated empemho numbers. The empenho number is got from INAUF 336 Appproval1
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 04-Ago-2006	HeberB		SRBR014162: Element list use ';' as separator
	; 11-Jul-2006	HJRB		SRBR014119: Created
	;-------------------------------------------------------------------------------
	new strEmpenho, lstOrder, empenho
	set strEmpenho = ""
	
	set lstOrder = $$getNotReceivedOrders^INAUFRELEASE(pidItem,pidSupplier,pidLocation)
	for ind=1:1:$ll(lstOrder) {
		;set idOrder = $list(lstOrder,ind)	; br014162
		set idOrder = $piece($list(lstOrder,ind),";",1)
		set objOrder = $get(^INAUF(YM,idOrder,1))
		set empenho = $$$INAUFApproval1(objOrder)
		if (empenho '="") {
			set empenho = empenho _ "<BR>"
		} else {
			set empenho = empenho _ "&nbsp;&nbsp;<BR>"
		}
		set strEmpenho = strEmpenho _ empenho 
 
	}
	quit strEmpenho
 
getProcessList(pidCompany, pidItem,pidSupplier,pidLocation)
	;-------------------------------------------------------------------------------
	; 
	; Returns a string ready to be printed on HTML of a list of not completely mapped 
	; orders and associated process numbers. The process number is got from INAUF 337 
	; Appproval2
	; 
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 04-Ago-2006	HeberB		SRBR014162: Element list use ';' as separator
	; 11-Jul-2006	HJRB		SRBR014119: Created
	;-------------------------------------------------------------------------------
	new strProcess, lstOrder, process
	set strProcess = ""
 
	set lstOrder = $$getNotMappedOrders^INAUFRELEASE(pidItem,pidSupplier,pidLocation)
	for ind=1:1:$ll(lstOrder) {
		;set idOrder = $list(lstOrder,ind)	; BR014162
		set idOrder = $piece($list(lstOrder,ind),";",1)
		set objOrder = $get(^INAUF(YM,idOrder,1))
		set process = $$$INAUFApproval2(objOrder)
		if (process '="") {
			set process = process _ "<BR>"
		} else {
			set process = process _ "&nbsp;&nbsp;<BR>"
		}
		set strProcess = strProcess _ process 
	}
	quit strProcess
 
 
getIncompleteATAList(pidCompany, pidItem)
	;-------------------------------------------------------------------------------
	; 
	; Returns a list (HTML string) of the incomplete ATA requests numbers.
	; An incomplete ATA request is one whose any of its line items has the field "closed"
	; not cheked. 
	; 
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 13-Jul-2006	HJRB		SRBR014119: Created
	;-------------------------------------------------------------------------------
	new itemNumberidx,requestNumber, strRequestNumber, idCompany
	
	set idCompany = pidCompany
	if (pidCompany) = "" set idCompany = YM
	if (pidItem = "") quit "&nbsp;"
	
	set strRequestNumber = ""
	set requestNumber = ""
	set itemNumberidx = $$$Index(pidItem)
	while (1) {
		set requestNumber = $order(^VARTRKATARequestLines(idCompany,1,itemNumberidx,requestNumber))
		quit:requestNumber=""
 
		set requestLineNumber = ""
		while (1) {
			set requestLineNumber = $order(^VARTRKATARequestLines(idCompany,1,itemNumberidx,requestNumber,requestLineNumber))
			quit:requestLineNumber=""
			set objLineRequest = $get(^VARTRKATARequestLine(idCompany,requestNumber,requestLineNumber,1))
			if ($$$VARTRKATARequestLineClosed(objLineRequest)) continue
			if strRequestNumber = "" { 
				set strRequestNumber = requestNumber
			} else {
				set strRequestNumber = strRequestNumber  _ "<br/>" _ requestNumber
			}
		}		 
	}
	quit strRequestNumber
	
getMOV(pidItem)
	;-------------------------------------------------------------------------------
	; Returns forecasting value MOV from INForeRest 
	; 
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 04-Ago-2006	FrankF		SRBR014162: Created
	;------------------------------------------------------------------------------- 
	quit:($get(pidItem) = "") $$^WWWTEXT("VARTRK00001")
	
	set objForeRest = $get(^INForeRest(YM, YLOCATION, pidItem, 1))
 
	quit $piece(objForeRest, Y, 21)
	
getCMM(pidItem)
	;-------------------------------------------------------------------------------
	; Returns forecasting value CMM from INForeRest 
	; 
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Dec-2006   PhilJ		Fixed comment
	; 04-Ago-2006	FrankF		SRBR014162: Created
	;-------------------------------------------------------------------------------  
	quit:($get(pidItem) = "") $$^WWWTEXT("VARTRK00001")
	set objForeRest = $get(^INForeRest(YM, " ", pidItem, 1))
	quit $piece(objForeRest, Y, 22)
	
getCMMLocal(pidItem)
	;-------------------------------------------------------------------------------
	; Returns forecasting value CMM Local from INForeRest 
	; 
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Dec-2006   PhilJ		Fixed comment
	; 04-Ago-2006	FrankF		SRBR014162: Created
	;-------------------------------------------------------------------------------  
	quit:($get(pidItem) = "") $$^WWWTEXT("VARTRK00001")
			$$$StartScript()
			w "alert('YM= "_YM_"');"
			w "alert('YLOCATION= "_YLOCATION_"');"
			w "alert('ITEM= "_pidItem_"');"
			$$$EndScript()
	set objForeRest = $get(^INForeRest(YM, YLOCATION, pidItem, 1))
	quit $piece(objForeRest, Y, 23)
	
	
getCMMforSQLQuery(pidItem)
	;-------------------------------------------------------------------------------
	; Returns forecasting value CMM from INForeRest 
	; 
	; This sub-routine should only be called by an SQL query. Normal calls inside 
	; the code-base should use getCMM above.
	; 
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 
	; 19-Dec-2006	PhilJ		Created for use in generating reports
	; 04-Ago-2006	FrankF		SRBR014162: Created
	;-------------------------------------------------------------------------------  
	quit:($get(pidItem) = "") $$^WWWTEXT("VARTRK00001")
	DO ^WWWVAR
	SET YLOCATION = " "
	set objForeRest = $get(^INForeRest(YM, YLOCATION, pidItem, 1))
	quit:(objForeRest="") " "
	quit $piece(objForeRest, Y, 22)
]]></Routine>
</Export>