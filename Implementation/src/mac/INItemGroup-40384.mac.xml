<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INItemGroup" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INItemGroup
#include INConst
#include COMSYS
 
OnBeforeDataAccess(YKEY,YFELD)
	;-------------------------------------------------------------------------------
	; Don't show inactive groups in dropdown lists.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 12-May-2009	shobby		SR16511: Created
	;-------------------------------------------------------------------------------
	new objINItemGroup,strStatus
	
	set strStatus = $$$OK
	if $get(YFORM)="INPP00GenRuleLine" {
		set objINItemGroup = $get(^INItemGroup(YM,YKEY,1))
		set strStatus      = +$$$INItemGroupActive1(objINItemGroup)
	}
	quit strStatus
	 
ShowTree()
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		Create the button that launches the tree window.
	;
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 05-Jul-2007	GRF		Readability of strURL entries; new commented
	; 25-May-2007	shobby	SRBR014466 : Creation
	;-------------------------------------------------------------------------------
	new strURL
	
	; FIXME : <GRF> See WWWCGI.  Should we only include entries where $get(...)'=""?
	
	if ($get(YHID)'=1)&&($get(YHID)'=2) {
		write $$$CRLF
		write "<A HREF="""
		set strURL = YAKTION_"EP=WWWMANU1&amp;YEXEC=D|Start^INItemGroup"
		set strURL = strURL_"&amp;YUSER="_YUSER_"&amp;YBED="_YBED_"&amp;YTRAKT="_YTRAKT
		set strURL = strURL_"&amp;YUCI="_$get(YUCI)_"&amp;YM="_YM_"&amp;YKEY="_YKEY
		set strURL = strURL_"&amp;YBACK="_YBACK_"&amp;YLFDAT=Y"_YFORM_YART_YLFN
		set strURL = strURL_"&amp;YLFFORM="_$get(YBBN)_"&amp;YFORM="_YFORM
		
		write "javascript:var parameter=window.open('"_strURL_"','Stucture','HEIGHT=500,WIDTH=400,SCROLLBARS=YES,RESIZEABLE=YES');"  
		write """>"
		write $$$CRLF,"<IMG SRC='"_YGIF_"searchtree.gif' ALIGN=ABSBOTTOM TITLE='"_$$$TextSimple(148)_"' border=0>"  ;Search
		write "</A>"
	}
	quit
 
 
ListToKeys(plstCode="")
	;-------------------------------------------------------------------------------
	; Description of Function :
	; 
	; Creates a string suitable for building key access to a global from a string 
	; of separated keys
	; 
	; Takes a list plstCode and returns a string of the keys wrapped in "
	; and separated by , ready to be slotted into a the index of a global
	; 
	; Inputs : 
	;		plstCode - a list containing a list of keys 
	;
	; ByRef :
	;
	;
	; Returns :
	;		build - a string of the form :  ,"key1","key2","key3"   etc.
	;		for including in the 
	;
	; History :
	; 17-Oct-2007	shobby		Rewrote using lists to avoid the separator confusion errors
	; 24-Sep-2007	PJones		created as part of refactoring 
	; 
	;-------------------------------------------------------------------------------
	;
	new strResult,idxKey
	
	set strResult = ""
	for idxKey=1:1:$listlength(plstCode) {
		set strResult=strResult_$listget(plstCode,idxKey)_$$$COMMA
	}
	set strResult=$extract(strResult,1,$length(strResult)-1)
	set strResult=$$^WWWKEYBUILD(strResult)
	quit strResult
 
getGroupPath(pidGroup,pidCompany)
	;-------------------------------------------------------------------------------
	; Calculate the path (hierarchical string) for an item group
	; This is used to 
	;
	; Params:	pidGroup	- INItemGroup id
	; 			pidCompany	- (optional) company override
	;
	; ByRefs:
	;
	; Returns:	string - path, note that we are using @ as the separator which 
	; 			is NOT intended to be turned into multiple 
	;
	; History:
	; 17-Oct-2007	shobby		BR014658: use a list instead of separators to work out id's
	; 									  Don't change the value of YM in this routine it could
	; 									  cause side effects in other routines.
	; 24-Sep-2007	PJones		BR014658: Created, based on INBItemGroup^GetCode
	; 									  See comment in Start for details of why
	;-------------------------------------------------------------------------------
	new strPath,objGroup,idGroup
	
	if $get(pidCompany)="" set pidCompany=YM
	 
	set idGroup = pidGroup // so that we can look at pidGroup again if we need to
	set strPath = ""
 
	while (idGroup'="") {
		set objGroup = $get(^INItemGroup(pidCompany,idGroup,1))
		set strPath=$lb(idGroup)_strPath
		set idGroup = $$$INItemGroupParentGroup(objGroup)
	}		
	quit strPath
 
 
Start
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		Build a tree structure of item groups in a pop-up window
	;
	;		The tree structure will be stored in ^CacheTempINItemGroupTree
	;
	; 	  Piece	:	Description
	; 		1	:	Description
	; 		2	:	Id
	; 		3	:	Disable Flag
	; 		4	:	Tooltip (Disable Message)		
	; 	
	; 		The keys for ^CacheTempINItemGroupTree go like this :
	; 		(company, user, path of multiple group Ids)
	; 		Note that each groupId is a separate key (node) of the global
	; 		and that they make up the path of the 
	; 
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns : nothing, but fills ^CacheTempINItemGroupTree
	;
	;
	; History :
	; 17-Oct-2007	shobby	BR014658: Some tidy up, using lists for the parent structure
	; 24-Sep-2007	PJones	BR014658 : Refactored and cleaned up,
	; 						removed call to INBItemGroup^GetCode 
	; 						and put it in a new sub-routine here : 
	; 						getGroupPath 
	; 						The reson for this is that GetCode seems 
	; 						to have been used for two things : 
	; 						a) to get a code for the item to fill the calculated form field "code"
	; 						b) to build the path used when creating the tree-view in the pop-up
	; 						The value returned from GetCode was confusing things
	; 						because a - used as a separator was also being used to 
	; 						separate keys for the CacheTempINItemGroupTree, and this
	; 						was messing up the presentation of the tree.
	; 						The fix is simple, the function that calculates the path
	; 						needs a separator which isn't later being turned into a .
	; 						by the $translate in this routine
	; 						But because GetCode has another use I decided that it's 
	; 						better to leave it as is and redo the path calculation here 
	; 						(in getGroupPath)
	; 						getGroupPath is using an @ as separator which seems to work ok
	; 						However, there's some redundancy been introduced here : 
	; 						the calculation of the path is the same in both cases. Only the 
	; 						output is different. And there's a danger that people who 
	; 						know GetCode may be expecting it to be the place to make changes
	; 						I've added a warning comment over there.
	; 						
	; 						
	; 25-May-2007	shobby	SRBR014466 : Creation (Stolen from WWW0121)
	;-------------------------------------------------------------------------------
	new (%request,%session,%KEY,%,%ZCS,%CGIEVAR)
	; ***** not needed due to exclusive new - comment after code check *****
	; 17-Oct-2007 shobby.
	; Better to leave the following line in.  Doesn't hurt and taking it out just confuses the
	; code checker template.
	new strCode,idINItemGroup,objINItemGroup,strGlobal,idxKey,strPiece,objData
	
	do ^WWWVAR
	
	kill ^CacheTempINItemGroupTree(YUCI,YUSER)
	
	; loop through all the items in the INItemGRoup table
	; which contains definitions of groups and their parents
	set idINItemGroup=""
	$$$Order2(^INItemGroup,YM,idINItemGroup)
		
		; for the current group, get a string "strCode" which contains the 
		; "path" to it down the group hierarchy
		set strCode=$$getGroupPath(idINItemGroup)
		;set strCode=$translate(strCode,",;-_?/+*#':<>\^|{[]}","....................")       ;ALLES PUNKT ;BR014658
	
		; get the current group object and prepare the data which will be shown 
		; about it on the tree	
		set objINItemGroup=$get(^INItemGroup(YM,idINItemGroup,1))
		if objINItemGroup'="" {
			set objData = $$$INItemGroupDescription(objINItemGroup)_Y_idINItemGroup
			if +$$$INItemGroupActive1(objINItemGroup)=0 {
				set objData=objData_Y_1_Y_$$$TextSimple("IN00689") ;Can't select inactive group.
			} elseif $data(^INItemGroups(YM,1,idINItemGroup))'=0 {
				set objData=objData_Y_1_Y_$$$TextSimple("IN00690") ;Can't select parent group.
			}
			
			; Add the item to the CacheTempINItemGroupTree, 
			; this is where we're actually creating the displayed tree
			set strGlobal  = "^CacheTempINItemGroupTree("""_YUCI_""","""_YUSER_""""  ;BR014658
			set strGlobal = strGlobal_$$$COMMA_$$ListToKeys(strCode)_")"	;BR014658
			set @strGlobal = objData
		}
	$$$End
	
	
	
	set %(YQUERY,"TARGET") = $get(YTARGET)
	set %(YQUERY,"FILE")   = "CacheTempINItemGroupTree"
	set %(YQUERY,"FIX")    = YUCI_$$$COMMA_YUSER
	set %(YQUERY,"RECORD") = "1"
	set %(YQUERY,"YUCI")   = $get(YUCI)
	set %(YQUERY,"HEAD")   = $$^WWWFORMNAME("INItemGroup")
	set %(YQUERY,"YKEY")   = YKEY
	set %(YQUERY,"YTRAKT") = YTRAKT
	set %(YQUERY,"YBACK")  = YBACK
	set %(YQUERY,"FORM")   = YFORM
	set %(YQUERY,"YFORM")  = YFORM
	set %(YQUERY,"OFFSET") = "" 
	merge %KEY=%(YQUERY)
	do ^WWWPARAM
 
	quit


IsInGroup(pidSubGroup,pidGroup) ;SESDF-718
	new objINItemGroup,blnResult
	
	set blnResult=$$$NO
	if (pidSubGroup'="") && (pidGroup'="") {
		if pidSubGroup=pidGroup {
			set blnResult=$$$YES
		} else {
			set objINItemGroup=$get(^INItemGroup(YM,pidSubGroup,1))
			set blnResult=$$IsInGroup($$$INItemGroupParentGroup(objINItemGroup),pidGroup)
		}
	}
	quit blnResult
]]></Routine>
</Export>