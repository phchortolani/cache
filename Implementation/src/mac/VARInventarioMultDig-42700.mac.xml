<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARInventarioMultDig" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARInventarioMultDig
#include COMConst
#include VARConst
#include INConst
#include COMGridEdit31
	
	quit
 
  
Show(pYKEY)

	new YFORM
	
	set YFORM="INWEINVD"
	
	if pYKEY '= "" {
		set keys = $get(VOG(1))
		
		set noCount= VORG(15)
		
		if noCount = "" {
			set noCount= $$FindVORG15^INWEINVD(pYKEY)
			} 
		set StockTakingNumber= pYKEY
		
		set vYKEY= StockTakingNumber_","_noCount_","_YBED
		
		if ('$data(^VARInventarioMultDig(YM, StockTakingNumber, noCount, YBED, 1))) {
			set strStatus = $$$Save("VARInventarioMultDig",vYKEY,"",$$$YES)
			if ($$$ISERR(strStatus)) {
				$$$Alert($$$MakeStatus("%1", strStatus))
				do GoToForm^COMUtilForm(YFORM, pYKEY)
			}
		}
		
		do GoToForm^COMUtilForm("VARInventarioMultDig",vYKEY)
 	
	}
 	quit
	
	 
OnAfterDataFields(pYKEY,pYFELD)

	do LoadGrid(pYKEY)
	 
 	quit
 	
 
LoadGrid(pid="")

	new objInvoice,YFORM,YKEY,YAUSWAHL,YFELD,objVARTRKATARequest,strData, strCamposParaEsconder
	set YFORM="VARInventarioMultDigLinha"
	set YFELD=""
	set YKEY=$get(pid)
	set strCamposParaEsconder = ""
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=310
	set $$$COMGridEditParameterGridName(YAUSWAHL)=YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)='($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARInventarioMultDig"
	
	if ($$OnlyTrackPrograms^INBundleUtils($$GetLocalInventario($$$KEY1(YKEY)))) {
		set strCamposParaEsconder = $$$FldVARInventarioMultDigLinhaLote_";"_$$$FldVARInventarioMultDigLinhaValidade_";"_$$$FldVARInventarioMultDigLinhaMarca
	}
	if ($length(strCamposParaEsconder) > 0) {
		set $$$COMGridEditParameterHiddenColumns(YAUSWAHL) = strCamposParaEsconder
	}
	
	$$$GRIDStart(YFORM,YKEY)
	
	quit
 
OnBeforeSave(pYKEY)

	new strStatus, idInventario, idContagem, idUsuario, idLinha
	set strStatus = $$$OK
	
	set idInventario	= $$$KEY1(pYKEY)
	set idContagem		= $$$KEY2(pYKEY)
	set idUsuario		= $$$KEY3(pYKEY)
	set idLinha = $order(^WWWDATEN(0,+$horolog,YUSER,$$$GRIDName,"V","REFERENCEROW",""))
	while ($length(idLinha) > 0) {
		if ($$$ViewableRow(idLinha,$$$GRIDName)) {
			set objInventarioMultDigLinha = $$$GRIDGetYFELD(idInventario_$$$COMMA_idContagem_$$$COMMA_idUsuario_$$$COMMA_idLinha)
			set blDuplicado = $$isItemDuplicado(idInventario, idContagem, idUsuario, idLinha)
		    set blOutroDono = $$hasOutroDono(idInventario, idContagem, idUsuario, idLinha, .idDono)
		    if ((blOutroDono) || (blDuplicado)) {
			    set strMsg = "O produto '"_$$$VARInventarioMultDigLinhaProduto(objInventarioMultDigLinha)
				if ($$OnlyTrackPrograms^INBundleUtils($$GetLocalInventario(idInventario))=0) { //Se o local controla lote e validade
				    if ($length($$$VARInventarioMultDigLinhaLote(objInventarioMultDigLinha)) > 0) {
				    	set strMsg = strMsg_"', lote '"_$$$VARInventarioMultDigLinhaLote(objInventarioMultDigLinha)
				    }
				    if ($length($$$VARInventarioMultDigLinhaValidade(objInventarioMultDigLinha)) > 0) {
				    	set strMsg = strMsg_"', validade '"_$$SQLGetDataFormatada^VARSQL($$$VARInventarioMultDigLinhaValidade(objInventarioMultDigLinha))
				    }
				}
			    if ($length($$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objInventarioMultDigLinha)) > 0) {
			    	set strMsg = strMsg_"', endereço '"_$$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objInventarioMultDigLinha)
			    }
			    if ($length($$$VARInventarioMultDigLinhaPrograma(objInventarioMultDigLinha)) > 0) {
			    	set strMsg = strMsg_"', programa '"_$$$VARInventarioMultDigLinhaPrograma(objInventarioMultDigLinha)
			    }
			    
			    if (blDuplicado) {
				    set strMsg = strMsg_"'  está repetido nessa contagem."
			    }
			    elseif (blOutroDono) {
			    	set strMsg = strMsg_"'  já foi contato pelo usuário "_idDono
			    }
			    
				set strStatus = $$$MakeStatus("%1", strMsg)
		        quit
		    }
		    
		}
		set idLinha = $order(^WWWDATEN(0,+$horolog,YUSER,$$$GRIDName,"V","REFERENCEROW",idLinha))
	}
	
    if ($$$ISOK(strStatus)) {
		set strStatus = $$$GRIDSave(pYKEY)
    }
	
    if ($$$ISERR(strStatus)) {
        set Q = $$$QDontSave
        do ReturnError^COMUtilError(strStatus)
    }

	quit

isItemDuplicado(pIdInventario, pIdContagem, pIdUsuario, pIdLinha)
	new strStatus, idInventario, idContagem, idUsuario, idLinha, retVal, pObjInventarioMultDigLinha

	set retVal = $$$NO
	set pObjInventarioMultDigLinha = $$$GRIDGetYFELD(pIdInventario_$$$COMMA_pIdContagem_$$$COMMA_pIdUsuario_$$$COMMA_pIdLinha)
	set idLinha = $order(^WWWDATEN(0,+$horolog,YUSER,$$$GRIDName,"V","REFERENCEROW",""))
	while ($length(idLinha) > 0) {
		if (idLinha '= pIdLinha) {
			if ($$$ViewableRow(idLinha,$$$GRIDName)) {
				set objInventarioMultDigLinha = $$$GRIDGetYFELD(pIdInventario_$$$COMMA_pIdContagem_$$$COMMA_pIdUsuario_$$$COMMA_idLinha)
				if ($$OnlyTrackPrograms^INBundleUtils($$GetLocalInventario(pIdInventario))=0) { //Se o local controla lote e validade
				    if (($$$VARInventarioMultDigLinhaProduto(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaProduto(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaLote(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaLote(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaValidade(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaValidade(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaPrograma(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaPrograma(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaEnderecodeArmazenagem(pObjInventarioMultDigLinha))) {
					    set retVal = $$$YES
				    }
				}
				else {
				    if (($$$VARInventarioMultDigLinhaProduto(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaProduto(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaPrograma(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaPrograma(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaEnderecodeArmazenagem(pObjInventarioMultDigLinha))) {
					    set retVal = $$$YES
				    }
				}
				quit:(retVal)
			}
		}
		set idLinha = $order(^WWWDATEN(0,+$horolog,YUSER,$$$GRIDName,"V","REFERENCEROW",idLinha))
	}
 
	quit retVal

hasOutroDono(pIdInventario, pIdContagem, pIdUsuario, pIdLinha, &pidDono)
	new strStatus, idInventario, idContagem, idUsuario, idLinha, retVal, pObjInventarioMultDigLinha
	set retVal = $$$NO
	set pObjInventarioMultDigLinha = $$$GRIDGetYFELD(pIdInventario_$$$COMMA_pIdContagem_$$$COMMA_pIdUsuario_$$$COMMA_pIdLinha)
	set idUsuario = $order(^VARInventarioMultDigLinha(YM, pIdInventario, pIdContagem, ""))
	while ($length(idUsuario) > 0) {
		if (idUsuario '= pIdUsuario) {
			set idLinha = $order(^VARInventarioMultDigLinha(YM, pIdInventario, pIdContagem, idUsuario, ""))
			while ($length(idLinha) > 0) {
				set objInventarioMultDigLinha = $get(^VARInventarioMultDigLinha(YM, pIdInventario, pIdContagem, idUsuario, idLinha, 1))
				if ($$OnlyTrackPrograms^INBundleUtils($$GetLocalInventario(pIdInventario))=0) { //Se o local controla lote e validade
				    if (($$$VARInventarioMultDigLinhaProduto(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaProduto(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaLote(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaLote(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaValidade(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaValidade(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaPrograma(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaPrograma(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaEnderecodeArmazenagem(pObjInventarioMultDigLinha))) {
					    set retVal = $$$YES
				    }
				}
				else {
				    if (($$$VARInventarioMultDigLinhaProduto(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaProduto(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaPrograma(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaPrograma(pObjInventarioMultDigLinha))
				    	&& ($$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objInventarioMultDigLinha) = $$$VARInventarioMultDigLinhaEnderecodeArmazenagem(pObjInventarioMultDigLinha))) {
					    set retVal = $$$YES
				    }
				}
				quit:(retVal)
				set idLinha = $order(^VARInventarioMultDigLinha(YM, pIdInventario, pIdContagem, idUsuario, idLinha))
			}
		}
		quit:(retVal)
		set idUsuario = $order(^VARInventarioMultDigLinha(YM, pIdInventario, pIdContagem, idUsuario))
	}
	set pidDono = idUsuario
	
	quit retVal
	
	
CanSynchronize(pYKEY)
 
 	if (YKEY '= "") {
		
		new CodInventario, Contagem, UltimaContagem
		set CodInventario  = $$$KEY1(YKEY)
		set Contagem 	   = $$$KEY2(YKEY)
		set UltimaContagem = $$GetNumberOfHighestCount^INStocktaking(CodInventario)
				
		if $$IsStocktakeComplete^INWEINVPStatus(CodInventario) {
			//set YQ = 1_"Esse inventário já foi completado e não é possíve mais digitar contagens."
			set YQ = 1_$$$Text("MED00348")
			quit
		}
			
		elseif $$IsCountProcessClosed^INWEINVPStatus(CodInventario) {
			//set YQ = 1_"As contagens desse inventário já foram encerradas."
			set YQ = 1_$$$Text("MED00349")
			quit
		}
		
		elseif $$IsCountComplete^INWEINVPStatus(CodInventario) {
			//set YQ = 1_"A contagem não está mais aberta e por isso não é possível editá-la."
			set YQ = 1_$$$Text("MED00350")
			quit			
		}
						
		elseif Contagem '= UltimaContagem {
			//set YQ = 1_"A digitação para a contagem nº "_Contagem_" já foi fechada."
			set YQ = 1_$$$Text("MED00351")
			quit
		}		
				
 	}
 
	quit
 
 
Synchronize(pYKEY)
	
	do UpdateStocktakeFromAltForm(YBED,$$$KEY1(pYKEY),$$$KEY2(pYKEY))
	
	do GoToForm^COMUtilForm("VARInventarioMultDig",pYKEY)
 
	quit
	
ConfirmSynchronize(pidStocktake, pCount, pUser, dLine, pClass, pBlForce=$$$NO, pObjINWEINV="")
	
	new strStatus, objVARInventarioMultDig, INWEINVLine, objINWEINV
	
	set objVARInventarioMultDigLinha = $get(^VARInventarioMultDigLinha(YM, pidStocktake, pCount, pUser, dLine, 1))

	set INWEINVLine = ""
	set objINWEINV = ""
	do LineWithItemExists(pidStocktake, 
						$$$VARInventarioMultDigLinhaProduto(objVARInventarioMultDigLinha), 
						$$$VARInventarioMultDigLinhaLote(objVARInventarioMultDigLinha), 
						$$$VARInventarioMultDigLinhaValidade(objVARInventarioMultDigLinha),
						$$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objVARInventarioMultDigLinha),
						$$$VARInventarioMultDigLinhaPrograma(objVARInventarioMultDigLinha),
						.INWEINVLine)
	
	if ($length(INWEINVLine) > 0) {
		set objINWEINV = $$GetStocktakeLine^INStocktaking(pidStocktake,INWEINVLine)
	}
	
	if (($$$INWEINVActualQuantity(objINWEINV) '= $$$VARInventarioMultDigLinhaQuantContada(objVARInventarioMultDigLinha))
		|| ($$$INWEINVProgram1(objINWEINV) '= $$$VARInventarioMultDigLinhaPrograma(objVARInventarioMultDigLinha))
		|| ($$$INWEINVNotes(objINWEINV) '= $$$VARInventarioMultDigLinhaObservacoes(objVARInventarioMultDigLinha))
		|| ($$$INWEINVBrand(objINWEINV) '= $$$VARInventarioMultDigLinhaMarca(objVARInventarioMultDigLinha))
		|| (pBlForce)
		|| ($$$VARInventarioMultDigLinhaConfirmadoEm(objVARInventarioMultDigLinha) = "")
		|| (($length(pObjINWEINV) > 0) && (($$$INWEINVActualQuantity(pObjINWEINV) '= $$$VARInventarioMultDigLinhaQuantContada(objVARInventarioMultDigLinha))
											|| ($$$INWEINVProgram1(objINWEINV) '= $$$VARInventarioMultDigLinhaPrograma(objVARInventarioMultDigLinha))
											|| ($$$INWEINVNotes(pObjINWEINV) '= $$$VARInventarioMultDigLinhaObservacoes(objVARInventarioMultDigLinha))
											|| ($$$INWEINVBrand(pObjINWEINV) '= $$$VARInventarioMultDigLinhaMarca(objVARInventarioMultDigLinha))))
		){

		if ((pClass = "INWEINV") || (pClass = "BOTH")) {
			set $$$INWEINVFREE1(objINWEINV) = $horolog
			set $$$INWEINVFREE2(objINWEINV) = YBED
			do Save^COMUtils("INWEINV", pidStocktake_$$$COMMA_INWEINVLine, objINWEINV, $$$YES)		
		}
		if ((pClass = "VARInventarioMultDigLinha") || (pClass = "BOTH")) {
			set $$$VARInventarioMultDigLinhaConfirmadoEm(objVARInventarioMultDigLinha) = $horolog
			set $$$VARInventarioMultDigLinhaConfirmadoPor(objVARInventarioMultDigLinha) = YBED
			if ($length(pObjINWEINV) > 0) {
			    set $$$VARInventarioMultDigLinhaQuantContada(objVARInventarioMultDigLinha) = $$$INWEINVActualQuantity(pObjINWEINV)
			    set $$$VARInventarioMultDigLinhaObservacoes(objVARInventarioMultDigLinha) = $$$INWEINVNotes(pObjINWEINV)
			}
			do Save^COMUtils("VARInventarioMultDigLinha", pidStocktake_$$$COMMA_pCount_$$$COMMA_pUser_$$$COMMA_dLine, objVARInventarioMultDigLinha, $$$YES)		
		}
	}
	
	quit
	
VARHookOnBeforeEditAccess(pYKEY)
 
 	if (YKEY '= "") {
	
		new CodInventario, Contagem, UltimaContagem
		set CodInventario  = $$$KEY1(YKEY)
		set Contagem 	   = $$$KEY2(YKEY)
		set UltimaContagem = $$GetNumberOfHighestCount^INStocktaking(CodInventario)
				
		if ($$IsCountOpen^INWEINVPStatus(CodInventario) = $$$NO) {
			quit 0
		}
		
		elseif Contagem '= UltimaContagem {
			quit 0
		}					
 	}
 
	quit 1	

UpdateStocktakeFromAltForm(pUser,pidStocktake,pCount)
	; copies all values for a particular count from the alt. entry table to stocktake
	new dLine, idItem, line, objD, objLine, objCount,qty,dte, site, strStatus, site
	
	set dLine = $order(^VARInventarioMultDigLinha(YM,pidStocktake,pCount,pUser,""))
	while ($length(dLine) > 0) {
		
		set objD = $get(^VARInventarioMultDigLinha(0,pidStocktake,pCount,pUser,dLine,1))
		quit:objD=""
		set strStatus = $$$OK
		
		set dte= $horolog
		set qty = $$$VARInventarioMultDigLinhaQuantContada(objD)
		set idItem = $$$VARInventarioMultDigLinhaProduto(objD)
		set site = $$GetLocalInventario(pidStocktake)
		set lote = ""
		set validade = ""
		set endereco = $$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objD)
		set programa = $$$VARInventarioMultDigLinhaPrograma(objD)
		
		if ($$OnlyTrackPrograms^INBundleUtils(site)=0) { //Se o local controla lote e validade
			set lote = $$$VARInventarioMultDigLinhaLote(objD)
			set validade = $$$VARInventarioMultDigLinhaValidade(objD)
		}
		
		if $$LineWithItemExists(pidStocktake, idItem, lote, validade, endereco, programa, .line) {
			set blNewLine = $$$NO
		} else {
			set line = ($order(^INWEINV(YM,pidStocktake,""),-1))+1
			do CreateAndStore^INWEINVCount(qty, dte, pidStocktake, line, pCount)
			set objLine = $$MakeLine^INStocktaking(idItem, site, endereco, dte, "", qty )
			set $$$INWEINVLotNo(objLine) = lote
			set $$$INWEINVExpiryDate(objLine) = validade
			set $$$INWEINVBrand(objLine) = $$$VARInventarioMultDigLinhaMarca(objD)
			set $$$INWEINVProgram1(objLine) = programa
			set $$$INWEINVFREE3(objLine) = pUser
			set strStatus = $$SaveLine^INStocktaking(pidStocktake,line,objLine)
			set blNewLine = $$$YES
		}
		if ($$$ISOK(strStatus)) {
			do ConfirmSynchronize(pidStocktake, pCount, pUser, dLine, "BOTH", blNewLine)
		}

		set objLine = $$GetStocktakeLine^INStocktaking(pidStocktake,line)
		set objLine = $$LineFromD(objLine,objD)
		set $$$INWEINVProgram1(objLine) = $$$VARInventarioMultDigLinhaPrograma(objD)
		set $$$INWEINVBrand(objLine) = $$$VARInventarioMultDigLinhaMarca(objD)
		set $$$INWEINVDifference(objLine) = $$GetDifference^INWEINVELINE(pidStocktake_$$$COMMA_line,objLine)
		set $$$INWEINVFREE3(objLine) = pUser
		set strStatus = $$SaveLine^INStocktaking(pidStocktake,line,objLine)
 
		set objCount = $$GetCount^INWEINVCount(pidStocktake,line,pCount)
		set objCount = $$CountFromD(objCount,objD)			
		set strStatuc = $$Save^INWEINVCount(pidStocktake,line,pCount,objCount)
		set dLine = $order(^VARInventarioMultDigLinha(YM,pidStocktake,pCount,pUser,dLine))
	}
	quit

LineWithItemExists(pidStocktake, pidItem, plote, pValidade, pEndereco, pPrograma, &pLine)
	set pLine = $$LineWithItem(pidStocktake, pidItem, plote, pValidade, pEndereco, pPrograma)
	if ($length(pLine) = 0) {
		quit $$$NO
	}
	quit $$$YES

LineWithItem(pidStocktake, pidItem, plote, pValidade, pEndereco, pPrograma)
	; test if we already have a line with this item, if so what
	new line, objLine
	set line = $order(^INWEINV(YM,pidStocktake,""))
	while ($length(line) > 0) { 
		set objLine = $$GetStocktakeLine^INStocktaking(pidStocktake,line)
		quit:(($$$INWEINVItemNumber(objLine) = pidItem)
			  && ($$$INWEINVLotNo(objLine) = plote)
			  && ($$$INWEINVExpiryDate(objLine) = pValidade)
			  && ($$$INWEINVProgram1(objLine) = pPrograma)
			  && ($$$INWEINVStockLocation(objLine) = pEndereco))
		set line = $order(^INWEINV(YM,pidStocktake,line))
	}
 
	quit line

LineFromD(objLine,objD)
    set $$$INWEINVActualQuantity(objLine) = $$$VARInventarioMultDigLinhaQuantContada(objD)
    set $$$INWEINVNotes(objLine) = $$$VARInventarioMultDigLinhaObservacoes(objD)
    quit objLine

CountFromD(objCount,objD)
	set $$$INWEINVCountQuantity(objCount) = $$$VARInventarioMultDigLinhaQuantContada(objD)
	set $$$INWEINVCountTimestamp1(objCount) = $horolog
	quit objCount

GetLocalInventario(pIdInventario)
	new objINWEINVP
	if ($length($get(pIdInventario)) = 0) {
		quit:($length($get(YKEY)) = 0) ""
		set pIdInventario = $$$KEY1((YKEY))
	}
	set objINWEINVP = $get(^INWEINVP(0,##class(VAR.infra.util.Strings).Replace(pIdInventario,"""",""),1))
	quit:($length($get(objINWEINVP)) = 0) ""
	quit $$$INWEINVPSiteLocation(objINWEINVP)

CheckProduto(pIdInventarioMultDigLinha)
	quit:($$$NoKey(pIdInventarioMultDigLinha)) $$$NO
	set idInventario	= $$$KEY1(pIdInventarioMultDigLinha)
	set idContagem		= $$$KEY2(pIdInventarioMultDigLinha)
	set idUsuario		= $$$KEY3(pIdInventarioMultDigLinha)
	set idLinha			= $$$KEY4(pIdInventarioMultDigLinha)
	set objInventarioMultDigLinha = $get(^VARInventarioMultDigLinha(0, idInventario, idContagem, idUsuario, idLinha, 1))
	if ($length(objInventarioMultDigLinha) = 0) {
		quit $$$NO
	}
	if ($length($$$VARInventarioMultDigLinhaConfirmadoPor(objInventarioMultDigLinha)) = 0) {
		quit $$$NO
	}
	set lineExists = $$LineWithItemExists(idInventario, 
					 $$$VARInventarioMultDigLinhaProduto(objInventarioMultDigLinha),
					 $$$VARInventarioMultDigLinhaLote(objInventarioMultDigLinha),
					 $$$VARInventarioMultDigLinhaValidade(objInventarioMultDigLinha),
					 $$$VARInventarioMultDigLinhaEnderecodeArmazenagem(objInventarioMultDigLinha),
					 $$$VARInventarioMultDigLinhaPrograma(objInventarioMultDigLinha))
	quit lineExists

ControlaLote(pYKEY)
	quit:($$$NoKey(pYKEY)) $$$NO
	quit ($$OnlyTrackPrograms^INBundleUtils($$GetLocalInventario($$$KEY1(pYKEY)))=0)
]]></Routine>
</Export>