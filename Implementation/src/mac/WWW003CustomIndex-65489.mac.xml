<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWW003CustomIndex" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWW003CustomIndex
	
#include COMSYS
#include COMConst
#include COMGridEdit31
	
	;-------------------------------------------------------------------------------
	; History :
	; 31-Oct-2008	GRF		SR15870: Use KEY macros; clean up $$$ISERR & strStatus
	;-------------------------------------------------------------------------------
	
OnAfterDataFields(pYFORM,pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Called By : Form WWW003CustomIndex
	;		
	; Inputs : Form,Key,Yfeld
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
 	; 25-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus
	set strStatus = $$LoadGrid(pYFORM,pYKEY,pYFELD)
	quit strStatus
	
	
OnBeforeSavingData(pYKEY,pobjIndex)
	;-------------------------------------------------------------------------------
	; Called By : Form WWW003CustomIndex
	;		
	; Inputs : pYKEY, pobjIndex (YFELD)
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 19-Nov-2008	SCR		SR15870: Improve Error Checking
 	; 27-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus,intType,idIndex
	set strStatus=$$$OK
	set idIndex=$piece(pYKEY,",",2)
	set intType=$$$WWW003CustomIndexType(pobjIndex)
 
	if $$$ISOK(strStatus) && ((idIndex<200) || (idIndex>299) || (intType'=4)) {
		set strStatus=$$$MakeStatus("WWW00094")  ;Var Indexes must be in the range of 200 - 299
	}	
	if $$$ISOK(strStatus) {
		set strStatus = $$$GRIDSave(pYKEY)
	}
		
	if $$$ISERR(strStatus) {
		do ReturnError^COMUtilError(strStatus)  
		set Q = $$$QDontSave
	}
	quit strStatus
	
	
OnAfterDeletingData(pYKEY)
	;-------------------------------------------------------------------------------
	;			
	; Called By : Form WWW003CustomIndex
	;		
	; Inputs : Key
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
 	; 27-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	$$$GRIDDelete
	
	quit strStatus
	
	
OnBeforeDelete(pYKEY)
	;-------------------------------------------------------------------------------
	;			
	; Called By : WWW003CustomIndex form
	; 				Class Hook for class WWW003CustomIndex
	;		
	; Inputs : Key
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 03-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new idClass,idIndex,idLine,strStatus
	
	set strStatus=$$$OK
	
	set idClass = $$$KEY1(pYKEY)
	set idIndex = $$$KEY2(pYKEY)
	
	if (idClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	} elseif (idIndex="") {
		set strStatus = $$$MakeStatus("WWW00091")  ; "No Index Specified"
	}
	
	if $$$ISOK(strStatus) {
		set strStatus=$$RemoveIndex(idClass,idIndex)
	}
	
	set idLine=""
	for {
		quit:$$$ISERR(strStatus)            ; FIXME : move outside for loop - not set internally - why WWWSKILL rather than WWWKILL via $$$Kill?
		set idLine=$order(^WWW003CustomIndexLine(0,idClass,idIndex,idLine))
		quit:idLine=""
		
		do ^WWWSKILL("WWW003CustomIndexLine",idClass_","_idIndex_","_idLine)
	}
	quit strStatus
	
	
LoadGrid(pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Load Edit for Custom Indexes
	; 			
	; Called By : Internally
	;		
	; Inputs : Form,Key,Yfeld
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
 	; 25-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new blnLoadControls,strStatus,YAUSWAHL,YFORM
	
	set strStatus = $$$OK
	
	if (pstrKey '= "") {
		set YFORM = "WWW003CustomIndexLine"
		set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$NO
		set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 400
		set $$$COMGridEditParameterGridName(YAUSWAHL)      = YFORM
		set $$$COMGridEditParameterContainer(YAUSWAHL)     = "WWW003CustomIndex"
		set $$$COMGridEditParameterEnabled(YAUSWAHL)	   = $$$YES
		
		do Start^COMGridEdit31(YFORM,pstrKey)
	}
	quit strStatus
	
	
LoadIndexButton(pYKEY)
	;-------------------------------------------------------------------------------
	; Load an Index from UI (and Validate)			
	; Called By : Form WWW003CustomIndex Button "L"
	;		
	; Inputs : Key
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 27-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new idClass,idIndex,strStatus
	
	set strStatus = $$$OK
	
	set idClass = $$$KEY1(pYKEY)
	set idIndex = $$$KEY2(pYKEY)
	
	if (idClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	} elseif (idIndex="") {
		set strStatus = $$$MakeStatus("WWW00091")  ; "No Index Specified"
	}
	
	if $$$ISOK(strStatus) {
		set strStatus = $$LoadIndex(idClass,idIndex)
	}
	if $$$ISOK(strStatus) {
		do ReloadForm^COMUtilForm()
	} else {
		do ReturnError^COMUtilError(strStatus)
	}
	quit strStatus
	
	
LoadAllClassIndexes(pintType=0,pidLog="")
	;-------------------------------------------------------------------------------
	; Scan all @nm classes including VAR classes and add all indices for a type
	; (only supports 4-VAR)
	; Called By : Internally
	;		
	; Inputs : Type & Log
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 01-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new idClass,strStatus
	
	set strStatus = $$$OK
	
	if $get(pidLog)="" {   ; "Add all Class Indexes for Type %1"
		do StartLog^COMLog($$$Text($listbuild("WWW00099",pintType)),.pidLog)
	} else {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("WWW00099",pintType))) 
	}
	
	set idClass = ""
	for {
		set idClass = $order(^WWW003CustomIndexLine(0,idClass))
		quit:idClass=""
		
		set strStatus = $$AddClassIndex(idClass,pintType,pidLog)
		quit:$$$ISERR(strStatus)
	}
	do AddMessage^COMLog(pidLog,$$$Text("WWW00100"))  ; "Add all Class Indexes Complete"
	
	quit strStatus
	
	
AddClassIndex(pidClass,pintType,pidLog)
	;-------------------------------------------------------------------------------
	; Add all indexes to a Class for a Type
	; 
	; Note: Errors in LoadIndex are only logged, processing continues	
	; Called By : Upgrade Handler
	;		
	; Inputs : Class, Type & Log
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 17-Oct-2008	SCR		SR15870: Log invalid Indices
	; 11-Sep-2008	SCR		SR15870: Changed to use LoadIndex
	; 01-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new idIndex,strStatus,strValid
	
	set strStatus = $$$OK
	set idIndex   = ""
	for {
		quit:$$$ISERR(strStatus)
		set idIndex = $order(^WWW003CustomIndexLine(0,pidClass,idIndex))
		quit:idIndex=""
		
		set strValid = $$$OK
		if (pintType=4) && (idIndex>199) && (idIndex < 300) {
			set strValid = $$LoadIndex(pidClass,idIndex)  ; Errors in Load Index are logged, so other indexes can be processed
		}
		
		if $$$ISERR(strValid) {
			if $get(pidLog)'="" {     ; "Class %1 Index %2 Error"
				do AddMessage^COMLog(pidLog,$$$Text($listbuild("WWW00101",pidClass,idIndex))_"="_$$$Text(strValid))
			}
		}
	}
	quit strStatus
	
	
LoadIndex(pidClass,pidIndex)
	;-------------------------------------------------------------------------------
	; Load an Index (and Validate)			
	; Called By : WWW003CustomIndex Button
	;		
	; Inputs : Class & Index
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 31-Oct-2008	GRF		SR15870: Simplify validation of inputs
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 27-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	
	if (pidClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	} elseif (pidIndex="") {
		set strStatus = $$$MakeStatus("WWW00091")  ; "No Index Specified"
	}
	
	if $$$ISOK(strStatus) {
		set strStatus = $$RemoveIndex(pidClass,pidIndex)
	}
	if $$$ISOK(strStatus) {
		set strStatus = $$ValidateIndex(pidClass,pidIndex)
	}
	
	if $$$ISOK(strStatus) {
		set strStatus = $$AddIndex(pidClass,pidIndex)
	}
	
	quit strStatus
	
	
AddIndex(pidClass,pidIndex)
	;-------------------------------------------------------------------------------
	; Add the specified index to the class  
	; (Assumes that the Index is valid and has been removed from the class)
	; 
	; Called By : Internally
	;		
	; Inputs : Class & Index
	;
	; Returns : Status
	;
	; History :
	; 31-Oct-2008	GRF		SR15870: Simplify validation of inputs
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 29-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new arrField,arrIndex,idField,intMax,intSort,objField,strIndexes,strStatus
	
	set strStatus=$$$OK
	
	if (pidClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	} elseif (pidIndex="") {
		set strStatus = $$$MakeStatus("WWW00091")  ; "No Index Specified"
	}
	
	; Part 1 Get a list fields to index
	if $$$ISOK(strStatus) {
		set strStatus = $$GetIndexArray(pidClass,pidIndex,.arrIndex,.intMax)
	}
	
	; Part 2 Sort the fields by field id and build the 'Index.sort' structure
	if $$$ISOK(strStatus) {
		for intSort=1:1:intMax {
			quit:$$$ISERR(strStatus)
			
			set idField = arrIndex(intSort)
			set arrField(idField) = $get(arrField(idField))_","_pidIndex_"."_intSort
		}
	}
	
	; Part 3 For each field record in the field array update the index
	if $$$ISOK(strStatus) {
		set idField=""
		for {
			set idField = $order(arrField(idField))
			quit:idField=""
			
			set objField = $get(^WWW003(0,pidClass,idField,1))
			if objField="" {
				set strStatus = $$$MakeStatus("WWW00097",idField)  ; "Field %1 does not exist"
			}
			if $$$ISOK(strStatus) {
				set strIndexes = $$$WWW003IndexKey(objField)
				set strIndexes = strIndexes_arrField(idField)
				if $extract(strIndexes,1)="," {
					set strIndexes=$extract(strIndexes,2,999)
				}
				set $$$WWW003IndexKey(objField) = strIndexes
				set strStatus = $$$Save("WWW003",pidClass_","_idField,objField,$$$YES)
			}
			quit:$$$ISERR(strStatus)
		}
	}
	
	quit strStatus
	
	
RemoveAllClassIndexes(pintType=0,pidLog="")	
	;-------------------------------------------------------------------------------
	; Scan all @nm classes including VAR classes and remove all indices for a type
	; (only supports 4-VAR)
	; Called By : Internally
	;		
	; Inputs : Type & Log
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 03-Nov-2008	SCR		SR15870: Record Index status
	; 01-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new idClass,strStatus,strValid
	
	set strStatus = $$$OK
	if $get(pidLog)="" {   ; "Remove All Class Indexes for Type %1"
		do StartLog^COMLog($$$Text($listbuild("WWW00102",pintType)),.pidLog)
	} else {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("WWW00102",pintType))) 
 	}
 	
	set idClass = ""
	for {
		set idClass = $order(^WWW001(0,idClass))
		quit:idClass=""
		
		set strValid = $$RemoveIndex(idClass,,pintType,pidLog)
		if $$$ISERR(strValid) {
			if $get(pidLog)'="" {     ; "Class %1 Index %2 Error"
				do AddMessage^COMLog(pidLog,$$$Text($listbuild("WWW00101",pidClass,idIndex))_"="_$$$Text(strValid))
			}
		}
 
	}
	do AddMessage^COMLog(pidLog,$$$Text("WWW00103"))  ; "Remove All Class Indexes Complete"
	
	quit strStatus
	
	
RemoveIndex(pidClass,pidIndex="",pintType="",pidLog="")
	;-------------------------------------------------------------------------------
	; Remove the specified index from the class	or all Indexes for a type (4 = Var, only)		
	; Called By : Internally
	;		
	; Inputs : Class, (Index or Index type), Log
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 31-Oct-2008	GRF		SR15870: Excessive strStatus checks removed
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
	; 01-Sep-2008	SCR		SR15870: Added Remove type option
 	; 28-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new arrIndexRemoved,blnChanged,blnFound,blnRemoved,idField,intCount,intIndex,intNew
	new objField,strIndex,strIndexes,strIndexItem,strNewIndex,strStatus
	
	set strStatus = $$$OK
	if (pidClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	}
	
	; Loop through each data field and remove the index
	; This is done by creating a new Index field that does not contain the Index to be removed
	; Then only saving (updating) the data field if the Index was found
	set blnChanged = $$$NO
	if $$$ISOK(strStatus) { 
		set idField = ""
		for {
			set idField = $order(^WWW003(0,pidClass,idField))
			quit:idField=""
			
			set objField = $get(^WWW003(0,pidClass,idField,1))
			set strIndexes = $$$WWW003IndexKey(objField)
			if (strIndexes'="") {
				set intCount    = $length(strIndexes,",")
				set intNew      = 0
				set strNewIndex = ""
				set blnFound    = $$$NO
				
				for intIndex=1:1:intCount {
					set blnRemoved   = $$$NO
					set strIndexItem = $piece(strIndexes,",",intIndex)
					set strIndex     = $piece(strIndexItem,".",1)
					if (pidIndex'="") && (strIndex=pidIndex) {  ; The main index test
						set blnFound   = $$$YES                 ; set the found flag
						set blnRemoved = $$$YES
					} 
					if (pintType=4) && (strIndex>199) && (strIndex<300) { ; Removal all VAR Indexes
						set blnFound   = $$$YES                 ; set the found flag
						set blnRemoved = $$$YES
						
					}
					if blnRemoved = $$$NO {                     ; else add the index in the new field
						set intNew = intNew+1
						set $piece(strNewIndex,",",intNew) = strIndexItem
					} else {
						set arrIndexRemoved(strIndex) = ""
					}
				}
				if blnFound {
					set $$$WWW003IndexKey(objField) = strNewIndex
					set strStatus  = $$$Save("WWW003",pidClass_","_idField,objField,$$$YES)
					set blnChanged = $$$YES
				}
			}
			quit:$$$ISERR(strStatus)
		}
	}
	
	if blnChanged {
		set strIndex = ""
		for {
			set strIndex = $order(arrIndexRemoved(strIndex))
			quit:strIndex=""
			
			; "Index %1 Removed from Class %2"
			do:pidLog'="" AddMessage^COMLog(pidLog,$$$Text($listbuild("WWW00104",strIndex,pidClass)))
		}
	}
	quit strStatus
	
	
ValidateIndex(pidClass,pidIndex)
	;-------------------------------------------------------------------------------
	; Validate the Index			
	; Called By : Internal
	;		
	; Inputs : Class & Index
	;
	; ByRef :
	;
	; Returns : Status
	;
	; History :
	; 17-Nov-2008	SCR		SR15870: Allow var indexes only.
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 27-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus,objIndex,intType,arrIndex,intMax,intCount
	
	set strStatus = $$$OK
	
	if $$$ISOK(strStatus) && (pidClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	}
	
	if $$$ISOK(strStatus) && (pidIndex="") {
		set strStatus = $$$MakeStatus("WWW00091")  ; "No Index Specified"
	}
 
	if $$$ISOK(strStatus) {
		set objIndex = $get(^WWW003CustomIndex(0,pidClass,pidIndex,1))
		set intType  = $$$WWW003CustomIndexType(objIndex)
	}
	; Part 1 check the index is an integer and the type (var,core) matches the index number
	; Other types may be adde
	if $$$ISOK(strStatus) && ((+pidIndex\1)'=pidIndex) {
		set strStatus = $$$MakeStatus("WWW00092")  ; "Index number must be an integer and greater than 0"
	}
	;if $$$ISOK(strStatus) && (pidIndex<200) && (intType'=1) {
	;	set strStatus = $$$MakeStatus("WWW00093")  ; "Core type indexes must be in the range of 1 - 199"
	;}
		
	if $$$ISOK(strStatus) && ((pidIndex<200) || (pidIndex>299) || (intType'=4)) {
		set strStatus = $$$MakeStatus("WWW00094")  ; "Var Indexes must be in the range of 200 - 299"
	}
	
	; Ensure that if there is more than 1 line that the sort order is contiguous
	; This is done by loading the lines into arrIndex the checking for gaps in the indexes or duplications
	
	if $$$ISOK(strStatus) {
		set strStatus = $$GetIndexArray(pidClass,pidIndex,.arrIndex,.intMax)
	}
	
	; Part 2 Check that there is an index for every field based on the max
	if $$$ISOK(strStatus) {
		for intCount=1:1:intMax {
			quit:strStatus'=$$$OK
			
			if '$data(arrIndex(intCount)) {
				set strStatus = $$$MakeStatus("WWW00096",intCount)  ; "Index %1 not defined"
			}
		}
	}
	quit strStatus
	
	
GetIndexArray(pidClass,pidIndex,&parrIndex,&pintMax)
	;-------------------------------------------------------------------------------
	; Get an array of index for the Index ( Plus do basic validation		
	; Called By : Internal
	;		
	; Inputs : Class & Index
	;
	; ByRef : array & Maximum number of Indexs
	;
	; Returns : Status
	;
	; History :
	; 31-Oct-2008	GRF		SR15870: Show byRef "&"
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 29-Aug-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new intField,intLine,intSort,objIndexLine,strStatus
	
	set strStatus = $$$OK
	set pintMax   = 0
	
	kill parrIndex
	set intLine = 0
	for {
		set intLine = $order(^WWW003CustomIndexLine(0,pidClass,pidIndex,intLine))
		quit:intLine=""
		
		set objIndexLine = $get(^WWW003CustomIndexLine(0,pidClass,pidIndex,intLine,1))
		set intField = +$$$WWW003CustomIndexLineDataField(objIndexLine)
		set intSort  =  $$$WWW003CustomIndexLineSortOrder1(objIndexLine)\1
		if 'intSort set intSort = 1              ; Default to 1 if no sort specified
		
		if $data(parrIndex(intSort)) {
			set strStatus = $$$MakeStatus("WWW00095",intSort)  ; "Index %1 can not be used more than once"
		} else {
			set parrIndex(intSort) = intField
			if intSort>pintMax {
				set pintMax = intSort
			}
		}
		quit:$$$ISERR(strStatus)
	}
 	quit strStatus
	
	
StripClassIndex(pidLog="")
	;-------------------------------------------------------------------------------
	; Remove All Non-Core Indexes from all Class definitions.
	; (Only use type 4 VAR for now, there could be more later)		
	; 
	; Called By : External         ; FIXME : Where?
	;		
	; Inputs : Log
	;
	; ByRef : 
	;
	; Returns : Status
	;
	; History :
 	; 05-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$RemoveAllClassIndexes(4,pidLog)	
	quit strStatus
	
	
LoadClassIndex(pidLog="")
	;-------------------------------------------------------------------------------
	; Apply Non Core Indexes to Classes	(Only use type 4 VAR for now, there could be more later)	
	; Called By : External
	;		
	; Inputs : Log
	;
	; ByRef : 
	;
	; Returns : Status
	;
	; History :
 	; 05-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$LoadAllClassIndexes(4,pidLog)
	quit strStatus
	
	
Compile(pidClass)
	;-------------------------------------------------------------------------------
	; Compile the class to include loaded custom indexes
	; Called By : Form WWW003CustomIndex Button "C"
	;		
	; Inputs : class (YKEY)
	;
	; ByRef : 
	;
	; Returns : Status
	;
	; History :
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 09-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	set pidClass  = $$$KEY1(pidClass) ; get the class piece
	
	if (pidClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	} else {
		do CompileClassForm^COMClassCompile(pidClass)
	}	
	quit strStatus
	
	
ReIndex(pidClass)
	;-------------------------------------------------------------------------------
	; ReIndex Class
	; Called By : Form WWW003CustomIndex Button "R"
	;		
	; Inputs : class (YKEY)
	;
	; ByRef : 
	;
	; Returns : Status
	;
	; History :
	; 17-Oct-2008	SCR		SR15870: Added MakeStatus to Errors
 	; 09-Sep-2008	SCR		SR15870: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	set pidClass  = $$$KEY1(pidClass) ; get the class piece
	
	if (pidClass="") {
		set strStatus = $$$MakeStatus("WWW00038")  ; "No class specified"
	} else {
		do ReIndexForm^COMIndexForm(pidClass)
	}	
	quit strStatus
	
]]></Routine>
</Export>