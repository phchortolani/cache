<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="MEDDispenseCalc" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
MEDDispenseCalc ; Dispense calculations

#include COMConst
#include INConst
#include MEDConst
#define YCR	"|"

	; 12-Jan-2013	shobby	HEVA-757: Comment to force recompile

GetDispensed(pidRx,pidRxLine,&pidRxUnit,&strStatus,pblnApplyRounding=$$$NO) 
	;-------------------------------------------------------------------------------
	; Get the Qty Dispensed ( not Administered ) (Processed only)
	;
	; Inputs: 	pidRx 		= Prescription
	;			pidRxLine	= Prescription Line
	;
	; Returns: 	Qty in the Prescription Unit
	;			pass back by ref Rx Unit
	; 
	; History:
	; 18-Dec-2012	SCR		HEVA-725: Created
	;-------------------------------------------------------------------------------
	new idxRx,idDisp,fltDisp,objDisp,objLine,idItem,idUnit,fltQty,objRxLine
	new objAlt,idRxItem,fltConv,objItem,strDesc1,strDesc2
	new idAltInvUOM,objRxItem,idRxInvUOM

	set strStatus	= $$$OK
	set idxRx		= $$$Index(pidRx)
	set idDisp		= ""
	set fltDisp 	= 0

	;write $job,! for i=1:1:100 h 1
	for {
		set idDisp = $order(^MEDDispenses(YM,1,idxRx,idDisp))
		quit:idDisp=""
		set objDisp 	= $get(^MEDDispense(YM,idDisp,1))
		continue:$$$MEDDispenseStatus(objDisp)'=3
		set objLine 	= $get(^MEDDispenseLine(YM,idDisp,pidRxLine,1))
		set idItem		= $$$MEDDispenseLineItemName(objLine)
		set idUnit 		= $$$MEDDispenseLineIssueUOM(objLine)
		set fltQty		= $$$MEDDispenseLineIssueQuantity(objLine)
		set objRxLine	= $get(^MEDPrescriptionLine(YM,pidRx,pidRxLine,1))
		set idRxItem	= $$$MEDPrescriptionLineItem(objRxLine)
		set pidRxUnit	= $$$MEDPrescriptionLineDoseUOM(objRxLine)
		if idRxItem=idItem {
 			if (pblnApplyRounding) {
	 			set fltQty = $$ActualUsed(fltQty,$$$MEDPrescriptionLineDoseQty(objRxLine),idRxItem,idItem,pidRxUnit,idUnit)
 			}
			set fltQty		= $$Convert^INUOMConversion(idItem, fltQty, idUnit, pidRxUnit)
		} else {
			; Get Conversion for alternate product
			set objAlt		= $get(^INARTA(YM,idRxItem,idItem,1))
			set fltConv		= $piece(objAlt,Y,4)
			if 'fltConv {
				set objItem		= $get(^INART(YM,idItem,1))
				set strDesc1	= $piece(objItem,Y,1)
				set objItem		= $get(^INART(YM,objRxLine,1))
				set strDesc2	= $piece(objItem,Y,1)

				set strStatus	= $listbuild("MED01409",strDesc1,strDesc2)  ;Cannot convert %1 to %2
				quit
			}
			; convert to alternate inv UOM
			set objItem			= $get(^INART(YM,idItem,1))
			set idAltInvUOM	 	= $$$INARTUnitofMeasure(objItem)
			set fltQty			= $$Convert^INUOMConversion(idItem, fltQty, idUnit, idAltInvUOM)
			
			; Convert to Rx item inv UOM
			set fltQty			= fltQty*fltConv
			
			; Convert to Rx item inv UOM to RX item Rx UOM 
			set objRxItem		= $get(^INART(YM,idRxItem,1))
			set idRxInvUOM		= $$$INARTUnitofMeasure(objRxItem)
			set fltQty			= $$Convert^INUOMConversion(idItem, fltQty, idRxInvUOM, pidRxUnit)
			
			
			
		}
		set fltDisp		= fltDisp + fltQty

	}
	quit fltDisp


GetQtys(pidDispense,pidDispenseLine,pobjPresLine,pidDispenseUOM,&pfltSingleDoseQty,&pfltTotalDoseQty,&pfltDispenseQty) ;HEVA-700.3
	set pfltSingleDoseQty		  = $$$MEDPrescriptionLineDoseQty(pobjPresLine)
	set pfltTotalDoseQty = $$DoseTotal^MEDPrescriptionLine(pobjPresLine,$$$NO)
	set:pfltTotalDoseQty<0 pfltTotalDoseQty=0
	set pfltDispenseQty = $$Convert^INUOMConversion($$$MEDPrescriptionLineItem(pobjPresLine),pfltSingleDoseQty,$$$MEDPrescriptionLineDoseUOM(pobjPresLine),pidDispenseUOM) ;HEVA-700.3
	;set pfltDispenseQty = $$DoseTotal^MEDPrescriptionLine(pobjPresLine,$$$YES,pfltDispenseQty)+.999999\1
	set pfltDispenseQty = $$DoseTotal^MEDPrescriptionLine(pobjPresLine,$$$YES,pfltDispenseQty) ; HEVA-800
	set pfltDispenseQty = pfltDispenseQty - $$AlreadyDispensed(pidDispense,pidDispenseLine)
	quit


AlreadyDispensed(pidDispense,pidDispenseLine)
	new idLine,fltDispensed,objMEDDispenseLine,objMEDDispenseThis
	new idDispense,idPrescription,idxPrescription
	
	set fltDispensed=""

	if pidDispense'="" {
		set objMEDDispenseThis=$get(^MEDDispense(YM,pidDispense,1))
		
		set idPrescription=$$$MEDDispensePrescription(objMEDDispenseThis)
		set idxPrescription=$$$Index(idPrescription)
	
		set idDispense="" for { set idDispense=$order(^MEDDispenses(YM,1,idxPrescription,idDispense)) quit:idDispense=""
			set idLine="" for { set idLine=$order(^MEDDispenseLine(YM,idDispense,idLine)) quit:idLine=""
				continue:((idLine'=pidDispenseLine)||(idDispense=pidDispense))
				;continue:((idLine=pidDispenseLine)&&(idDispense=pidDispense))
				set objMEDDispenseLine=$get(^MEDDispenseLine(YM,idDispense,idLine,1))
				if $$$MEDPrescriptionLineItem(objMEDDispenseLine)= $$$MEDDispenseLineItemName(objMEDDispenseLine) {
					if $$$MEDDispenseLineValidatedStatus(objMEDDispenseLine)="accept.gif" {
						set fltDispensed=fltDispensed+$$$MEDDispenseLineIssueQuantity(objMEDDispenseLine)
					}
				}
			}
		}
	}
	quit fltDispensed
	
ActualUsed(pfltQty,pidItem,pidUnit,pobjRxLine)
	;-------------------------------------------------------------------------------
	; Get the Qty Used from the Dispense
	;
	;
	; Returns: 	Qty in the Prescription Unit
	;			pass back by ref Rx Unit
	; 
	; History:
	; 14-Mar-2013	SCR		HEVA-899: Round Output
	; 02-Jan-2013	SCR		HEVA-725: Add Alternate products
	; 20-Dec-2012	SCR		HEVA-700: Created
	;-------------------------------------------------------------------------------
	new fltQty,fltDoseQty,idRxItem,idRxUnit,objAlt,objItem,idAltInvUnit,idRxInvUnit
	new fltUsed,intDoses,fltConv,objRxItem

	set fltQty = pfltQty
	if ('$$MultidoseInjectable^INART(pidItem)) {
		set fltDoseQty 	= $$DispenseDoseQty(pidItem,pidUnit,pobjRxLine,,.fltUsed)
		if fltDoseQty {
			set intDoses	= pfltQty\fltDoseQty
			set fltQty		= fltUsed*intDoses
		}
	}
	set idRxItem	= $$$MEDPrescriptionLineItem(pobjRxLine)
	set idRxUnit	= $$$MEDPrescriptionLineDoseUOM(pobjRxLine)
	if idRxItem = pidItem {
 		set fltQty = $$Convert^INUOMConversion(idRxItem, fltQty, pidUnit, idRxUnit)
	} else {
		; Alternate product conversion to qty at Rx unit
			
		; Get conversion factor
		set objAlt		= $get(^INARTA(YM,idRxItem,pidItem,1))
		set fltConv		= $piece(objAlt,Y,4)

		; convert to alternate Dispense UOM
		set objItem			= $get(^INART(YM,pidItem,1))
		set idAltInvUnit 	= $$$INARTUnitofMeasure(objItem)
		set fltQty			= $$Convert^INUOMConversion(pidItem, fltQty, pidUnit, idAltInvUnit)
		; Convert from alternate item to Rx inv UOM
		set fltQty			= fltQty/fltConv

		; Convert to Rx item Rx UOM to RX item inv UOM 
		set objRxItem		= $get(^INART(YM,idRxItem,1))
		set idRxInvUnit		= $$$INARTUnitofMeasure(objRxItem)
		set fltQty			= $$Convert^INUOMConversion(idRxItem, fltQty, idRxInvUnit, idRxUnit)



	}

	set fltQty=$$RoundDose^MEDPrescriptionCommon(fltQty) ; HEVA-899	
		
	quit fltQty
	
Doses(pfltQty,pobjRxLine)
	;-------------------------------------------------------------------------------
	; Get the Get the Number of Doses
	;
	;
	; Returns: 	Number of Doses
	; 
	; History:
	; 20-Jan-2013	shobby	HEVA-772: Only round up if not multi-dose injectable.
	; 20-Dec-2012	SCR		HEVA-700: Created
	;-------------------------------------------------------------------------------
	new intDoses,intDoseQty
	
	;HEVA-772 set intDoseQty	= $$$MEDPrescriptionLineDoseQty(pobjRxLine)+.999999\1 	; Round up
	set intDoseQty=$$$MEDPrescriptionLineDoseQty(pobjRxLine) 														;HEVA-772
	if '$$MultidoseInjectable^INART($$$MEDPrescriptionLineItem(pobjRxLine)) set intDoseQty=intDoseQty+.999999\1		;HEVA-772
	set intDoses	= pfltQty\intDoseQty		; Get the number of doses	
	set intDoses = intDoses+.9999999\1
	quit intDoses
		
UpdateDispenseLine(pidDisp,pidLine,pobjLine,pblnKeepUnit=$$$NO,&strStatus,&intDoses,&fltDoseQty)
	;-------------------------------------------------------------------------------
	; Update the Dispense Line based on the Line Item & Unit
	; 	the qty is based on the Rx Total Dose - qty already dispensed
	; 
	; Inputs: 	pidDisp		= Dispense id
	;			pidLine		= Dispense Line id
	;			pobjLine	= Dispense Line object
	;
	; Returns: 	Updated Dispebse Line object
	; 
	; History:
	; 28-Oct-2014	SCR		HEVA-1580: If UDO, do not use times
	; 17-Oct-2014	SCR		HEVA-1580: Check Previous Dispensed Based on Times (if used)
	; 09-Oct-2014	SCR		HEVA-1580: Add Start & End Times
	; 28-Jan-2013	shobby	HEVA-793: Check fltQty>0 (Code from Rubens)
	; 03-Jan-2013	SCR		HEVA-725: Pass back Number of Doses and Dose Qty
	; 19-Dec-2012	SCR		HEVA-725: Created
	;-------------------------------------------------------------------------------
	new dtEnd,dtStart,fltDispTotal,fltDoseTotal,fltQty,idIssueType,idItem,idRx
	new idUnit,objDisp,objRxLine,arrDoses
	
	set strStatus	= $$$OK
	set objDisp 	= $get(^MEDDispense(0,pidDisp,1))
	set idUnit		= $$$MEDDispenseLineIssueUOM(pobjLine)
	set idItem		= $$$MEDDispenseLineItemName(pobjLine)
	set idIssueType	= $$$MEDDispenseIssueType(objDisp)
	set idRx		= $$$MEDDispensePrescription(objDisp)
	set dtStart		= $$$MEDDispenseShiftStart(objDisp)
	set dtEnd		= $$$MEDDispenseShiftEnd(objDisp)
	set intDoses	= 0
	set fltDoseQty	= 0
	
	if pblnKeepUnit=$$$NO {
		set idUnit		= $$GetPickUOM^INUOMConversion(idItem,idIssueType,,$$$YES)

		if (strStatus=$$$OK) {
			set $$$MEDDispenseLineIssueUOM(pobjLine) = idUnit
		}
	}
	
	if (idRx="") { 
		quit pobjLine  ; Quick exit
	}
	if $$$MEDDispenseLineUDO(pobjLine) {
		set dtStart		= ""
		set dtEnd		= ""
	}
	if (strStatus=$$$OK) {
		set objRxLine		= $get(^MEDPrescriptionLine(YM,idRx,pidLine,1))
		set fltDoseTotal 	= $$DoseTotal^MEDPrescriptionLine(objRxLine,$$$YES,,dtStart,dtEnd,.arrDoses)
		set fltDispTotal	= $$$MEDPrescriptionLineDispensedQty(objRxLine)
		if (dtStart'="")&&(dtEnd'="") {
			set fltDispTotal	= $$DispensedByTime(idRx,pidLine,.arrDoses)
		}
		set fltQty          = fltDoseTotal - fltDispTotal	;HEVA-793
	}
	if (strStatus=$$$OK) && (fltQty>0) {					;HEVA-793
		set fltQty 		= fltDoseTotal - fltDispTotal
		set intDoses	= $$Doses(fltQty,objRxLine)
		
		set fltQty		= $$DispenseDoseQty(idItem,idUnit,objRxLine,.strStatus)
		set fltDoseQty	= fltQty
		; Multply by the number of Doses
		set fltQty			= fltQty * intDoses
		set $$$MEDDispenseLineIssueQuantity(pobjLine) = fltQty

	}
	quit pobjLine



DispenseDoseQty(pidItem,pidUnit,pobjRxLine,&strStatus,&pfltUsed)
	;-------------------------------------------------------------------------------
	; Get the single dose qty for the unit and item
	; 
	; Inputs: 	pidItem		= Dispense Item
	;			pidUnit		= Dispense Unit
	;			pobjLine	= Dispense Line object
	;
	; Returns: 	Qty for a single dose
	; 
	; History:
	; 08-Feb-2013	SCR		HEVA-800: Use common code
	; 05-Feb-2013	SCR		HEVA-800: If <.01 set it .01
	; 01-Feb-2013	SCR		HEVA-800: Round to 2 Decimal places
	; 03-Jan-2013	SCR		HEVA-725: Return Used Qty
	; 19-Dec-2012	SCR		HEVA-725: Created
	;-------------------------------------------------------------------------------
	new fltQty,idRxItem,idRxUnit,objAlt,fltConv,objRxItem,idRxInvUnit,objItem
	new idAltInvUnit,strDesc1,strDesc2
	
	set strStatus	= $$$OK
	
	set pfltUsed	= 0
	set fltQty		= $$$MEDPrescriptionLineDoseQty(pobjRxLine)
	set idRxItem	= $$$MEDPrescriptionLineItem(pobjRxLine)
	set idRxUnit	= $$$MEDPrescriptionLineDoseUOM(pobjRxLine)
	if idRxItem = pidItem {
 		set fltQty = $$Convert^INUOMConversion(idRxItem, fltQty, idRxUnit, pidUnit)
	} else {
		; Alternate product conversion 
			
		; Get conversion factor
		set objAlt		= $get(^INARTA(YM,idRxItem,pidItem,1))
		set fltConv		= $piece(objAlt,Y,4)
		if 'fltConv {
			set objItem		= $get(^INART(YM,pidItem,1))
			set strDesc1	= $piece(objItem,Y,1) 
			set objItem		= $get(^INART(YM,idRxItem,1))
			set strDesc2	= $piece(objItem,Y,1)

			set strStatus	= $listbuild("MED01409",strDesc1,strDesc2)  ;Cannot convert %1 to %2
			quit 0 ; Quick exit
		}

		; Convert to Rx item Rx UOM to RX item inv UOM 
		set objRxItem		= $get(^INART(YM,idRxItem,1))
		set idRxInvUnit		= $$$INARTUnitofMeasure(objRxItem)
		set fltQty			= $$Convert^INUOMConversion(idRxItem, fltQty, idRxUnit, idRxInvUnit)


			; Convert to alternate item inv UOM
		set fltQty			= fltQty*fltConv

		; convert to alternate Dispense UOM
		set objItem			= $get(^INART(YM,pidItem,1))
		set idAltInvUnit 	= $$$INARTBaseUnit(objItem)
		set fltQty			= $$Convert^INUOMConversion(pidItem, fltQty, idAltInvUnit, pidUnit)
	}
	set pfltUsed = fltQty
	
	if ('$$MultidoseInjectable^INART(pidItem)) {
		; Round up	
		set fltQty			= fltQty+.999999\1
	}
	set fltQty = $$RoundDose^MEDPrescriptionCommon(fltQty) ; HEVA-800
	quit fltQty


DispensedByTime(pidRx,pidLine,&parrDoses,&pidStatus)
	;-------------------------------------------------------------------------------
	; Get Dispensed By Time
	; 
	;
	; Returns: 	Actual Dispensed over time based the array of doses
	;			By Ref pidStatus Dispense Status: 	0 = No dispense found for the time frame
	;												1 = At Least 1 dispense is waiting for Validation
	;												2 = At Least 1 dispense is waiting for Dispense
	;												3 = All dispenses are dispensed
	; 
	; History:
	; 27-Oct-2014	SCR		HEVA-1580: Return Dispense Status
	; 17-Oct-2014	SCR		HEVA-1580: Created
	;-------------------------------------------------------------------------------
	new dtEnd,dtStart,fltDisp,fltDoseQty,idDisp,idDispSta,idxRx,intEnd,intStart
	new intTime,objDisp,objLine,objRx,objRxLine

	set objRx		= $get(^MEDPrescriptiuon(YM,pidRx,1))
	set objRxLine	= $get(^MEDPrescriptionLine(YM,pidRx,pidLine,1))
	set idxRx		= $$$Index(pidRx)
	set idDisp		= ""
	set fltDisp		= 0
	set pidStatus	= 0
	set fltDoseQty  = $$$MEDPrescriptionLineDoseQty(objRxLine)
	for {
		set idDisp	= $order(^MEDDispenses(YM,1,idxRx,idDisp))
		quit:idDisp=""
		set objDisp	= $get(^MEDDispense(YM,idDisp,1))
		set objLine	= $get(^MEDDispenseLine(YM,idDisp,pidLine,1))
		if '$$$MEDDispenseLineActualUsed(objLine) {
			set fltDoseQty	= 0
		}
		set dtStart	= $$$MEDDispenseShiftStart(objDisp)
		set dtEnd	= $$$MEDDispenseShiftEnd(objDisp)
		if (dtStart="")||(dtEnd="") {
			set dtStart	= $$$MEDPrescriptionLineFromDate(objRxLine)_","_ $$$MEDPrescriptionLineFromTime(objRxLine)
			set dtEnd	= $$$MEDPrescriptionLineToDate(objRxLine)_","_ $$$MEDPrescriptionLineToTime(objRxLine)
		}
		set intStart	= ($piece(dtStart,",",1)*86400)+$piece(dtStart,",",2)
		set intEnd		= ($piece(dtEnd,",",1)*86400)+$piece(dtEnd,",",2)
		set intTime		= intStart-1
		set idDispSta	= $$$MEDDispenseStatus(objDisp)
		for {
			set intTime	= $order(parrDoses(intTime))
			quit:intTime=""
			quit:intTime'<intEnd
			set fltDisp	= fltDisp + fltDoseQty
			if (pidStatus=0)||(pidStatus>idDispSta) {
				set pidStatus	= idDispSta
			}
		}
		
	}
	quit fltDisp
]]></Routine>
</Export>