<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMPatch" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMPatch
 
#include COMSYS
#include COMConst
 
Log(pidPatch,pblnSystem=$$$NO,pblnData=$$$NO,pstrParams,pblnRerun=$$$NO) 
	;-------------------------------------------------------------------------------
	; Log applied patch
	;
	; Params:	pidPatch - Patch ID,
	; 		 	pblnSystem - System Changes, 
	; 		 	pblnData - Data Changes,
	; 		 	pstrParams - Parameters,
	; 		 	pblnRerun - Can Rerun
	;
	; ByRefs:
	;
	; Returns: Status
	;
	; History:
	; 11-Sep-2006	PO		SR14803: Patches must at least be a system or a data fix
	; 07-Mar-2006	JW&SC	SR14374: Created
	;-------------------------------------------------------------------------------
	new strStatus, objPatch, idxPatch, idx
	
	set strStatus = $$$OK
	
	if ('pblnSystem) && ('pblnData) {
		set strStatus = $listbuild("Com00257")  ;Patch must at least be a system or a data fix, currently it is neither.
	} else {
		// if not allowed to rerun and rerunning STOP
		// else save
		if 'pblnRerun {
		
			set idxPatch = $$$Index(pidPatch)
		
			set idx = ""
			for {
				set idx = $order(^COMPatchs(YM,1,idxPatch,idx))
				quit:idx=""
			
				set objPatch = $get(^COMPatch(YM,idx,1))
			
				// Don't allow repeat of either
				if (pblnSystem && $$$COMPatchSystemChanges(objPatch)) ||
				 	(pblnData && $$$COMPatchDataFix(objPatch)) {
					set strStatus = $listbuild("Com00244")  ;Cannot rerun patch.
				}
				quit:$$$ISERR(strStatus)
			}
		}
	}
	
	if $$$ISOK(strStatus) {
		set $$$COMPatchPatchId(objPatch) 			= pidPatch
		set $$$COMPatchAppliedTime(objPatch) 		= $h
		set $$$COMPatchSystemChanges(objPatch) 		= pblnSystem
		set $$$COMPatchDataFix(objPatch) 			= pblnData
		set $$$COMPatchParameters(objPatch) 		= pstrParams
		set $$$COMPatchCanrerun(objPatch) 			= pblnRerun
		
		set strStatus = $$$Save("COMPatch",$$^WWWNEXT("COMPatch"),objPatch,$$$YES)
	}	
	quit strStatus
	
	
Dump(pidLog,pstrDescription="") 
	;-------------------------------------------------------------------------------
	; Dump if logging for this SR is turned on.
	;
	; Params: 	pidLog - id of the log (probably SR #)	- mandatory
	; 			pstrDescription - description for dump
	;
	; ByRefs:
	;
	; Returns: nil
	;
	; History:
	; 17-Mar-2006	GRF		SR14389: ^PatchLog rather than ^Log
	; 14-Mar-2006	JW		SR14389: Created
	;-------------------------------------------------------------------------------
	if $get(^PatchLog(pidLog)) {	// Logging turned on for this SR
		do ##class(Common.Dump).DumpFile(pstrDescription,pidLog)
	}
	
	quit
	
]]></Routine>
</Export>