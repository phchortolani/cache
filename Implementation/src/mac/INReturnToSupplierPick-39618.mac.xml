<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INReturnToSupplierPick" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INReturnToSupplierPick

#include INConst
#include COMSYS
#include %occInclude
	
#def1arg TempStore(%1) ^CacheTemp(YUCI,YUSER,%1)
	
	;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	; Called By : [P] Button on Form INReturnToSupplier
	
	;---------------------------------------------------------------------------+ List
	;                       Return To Supplier Picklist                         |   Title (2A)
	;                Issued By Location    LOCN_ID (LOCATION_NAME)              |
	;-----------------------+------------------------+--------------------------+
	;   For: TO_LOCATION    |                        |                          |   Title (2B)
	;   Reference: CUST_ID  |   Status: ENUM_STATUS  | Issue Number: ISSUE_NO   |
	;--------+---------+----+-+-------------+--------+-+------+--------+--------+
	; Number | Sending | Item |    Item     | Quantity | Unit | Use By |  Lot   |   Header
	;        | Storage |      | Description |          |      |  Date  | Number |
	;--------+---------+------+-------------+----------+------+--------+--------+
	;        |         |      |             |          |      |        |        |   ANZ
	;        |         |      |             |          |      |        |        |
	;        |         |      |             |          |      |        |        |
	;--------+---------+------+-------------+----------+------+--------+--------+
	;  (text after Pick List)                                                   |   ZUSATZTEXT
	;---------------------------------------------------------------------------+
	
	; May be multiple pages each with Title through to ANZ
	;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
CanPrintPick(pidIssue)
	;-------------------------------------------------------------------------------
	;
	; Called By:
	;	PrintPick^INReturnToSupplierPick
	;	Form INReturnToSupplier : Button 5 - Execute To Check For Disabled
	;	
	; Params:
	;	pidIssue - Key of header record
	;
	; ByRefs: None
	;
	; Returns: strStatus, error message if unable to print
	;
	; History:
	; 30-Jun-2010	PPP		SR17297: Created 
	;-------------------------------------------------------------------------------
	new objIssue,strStatus
	
	set strStatus = $$$OK
	
	if '$$$NoKey(pidIssue) {
		if $$$ISOK(strStatus) {
			if '$data(^INIssueLine(0,pidIssue)) {
				set strStatus = $$$MakeStatus("IN00427")  ;No stock has been selected to be transferred.
			}
			set objIssue = $get(^INIssue(0,pidIssue,1))
			if $$$ISOK(strStatus) {
				if $$IsLockedSiteLocation^INLocking($$$INIssueFromLocn(objIssue)) {
					set strStatus = $$ReasonLocked^INLocking($$$INIssueFromLocn(objIssue))
				}
			}
		}
		
	} else {
		set strStatus = $$$MakeStatus(32072)  ; "Please select a data record first."
	}
		
	$$$YQHandler(strStatus)
	
	quit strStatus
	
PrintPick(pidIssue)
	;-------------------------------------------------------------------------------
	; Print the Pick List for the INReturnToSupplier
	;
	; Called By:
	;	PrintPick^INReturnToSupplierPick
	; 
	; Params: pidIssue
	;
	; Returns: Status
	;
	;
	; History:
	; 30-Jun-2010	PPP		SR17297: Created 
	;-------------------------------------------------------------------------------
	new ANZM,strStatus,YDDSATZ
	
	kill ^WWWSOR(YUSER)
	
	set strStatus=$$$OK
	set YBACK = ""	
	set ANZM=0
	set YNOFOOT=1
		
	do List(pidIssue)
		
	if ANZM=0 do ^WWWINFO($$^WWWTEXT(46),1,,1)    ; "No Data Available" 		
	kill ^WWWSOR(YUSER)
		
	quit strStatus
	
	
List(pidIssue) ;
	;-------------------------------------------------------------------------------
	; Print the Pick List for the Transfer
	;
	; Params: pidIssue
	;
	; Returns: None
	;
	;
	; History:
	; 01-Mar-2011	PPP		SR17672: Display the Unit Qty
	; 30-Jun-2010	PPP		SR17297: Created 
	;-------------------------------------------------------------------------------
	new ANZSEIT,idForm,intLn,LFN,objVORGLANG,TEXT,UES,VORG1,YFELD
	
	set YNOFOOT = 1
	do ^WWWBACK
	
	set VORG1       = $get(^INVORG(0,0,1))
	set objVORGLANG = $get(^INVORGLANG(0,0,SPRACHE,1))
	set TEXT = $$$INVORGLANGTextAfterPickList(objVORGLANG)
	
	set ANZSEIT = $PIECE(VORG1,Y,82)    ; Number within side 
	if ANZSEIT="" SET ANZSEIT = 30
	
	set idForm = "INIssueLine"
	set UES=$$^WWWTEXT(207)                                                 ; "Number"
	set UES=UES_Y_$$^WWWFELDNAME(idForm,"D",$$$FldINIssueLineFromStorage)  	; 2     "Sending Storage"
	set UES=UES_Y_$$^WWWFELDNAME(idForm,"D",$$$FldINIssueLineItem)         	; 1     "Item"
	set UES=UES_Y_$$^WWWTEXT(32026)                                         ; "Item Description"
	
	//set UES=UES_Y_$$^WWWFELDNAME(idForm,"D",$$$FldINIssueLineQtyIssued)   ; 3     "Quantity" ; Inventory Units //SR17672
	set UES=UES_Y_$$^WWWFELDNAME(idForm,"D",$$$FldINIssueLineQtyRequired)   ; 3     "Quantity" ; Required Units
	
	set UES=UES_Y_$$^WWWFELDNAME(idForm,"D",$$$FldINIssueLineUnit)         	; 4     "Unit"
	set UES=UES_Y_$$^WWWTEXT("AL00016")_"/"_$$^WWWTEXT("AL00017")           ; "Lot Number / Use By Date"
	set UES=UES_Y_$$^WWWFELDNAME(idForm,"D",$$$FldINIssueLineToStorage)    	; 3     "To Storage"
	
	set ANZM=0
	do Title(pidIssue)
	
	do START100^WWWTAB
	do Header(UES)		
	set YDDSATZ=0
	
	set intLn = 0
	for {
		set intLn = $order(^INIssueLine(0,pidIssue,intLn))
		quit:intLn=""
		
		set LFN=""
		set YFELD=$get(^INIssueLine(0,pidIssue,intLn,1))
		
		if (ANZM'=0) && (ANZM#ANZSEIT=0) {
			write "</TD></TR>"
			write "</TABLE>",YCR
			
			do FF^WWWW()        //FORMFEED
			
			do Title(pidIssue)
			do START100^WWWTAB  //Launching the superscription 
			do Header(UES)
		}
		do ANZ(pidIssue,intLn)
	}
	do LEER^WWWTAB(15,8)
	write "</TABLE>",YCR
	do ZUSATZTEXT(TEXT)
		
	quit
	
	
ANZ(pidIssue,pintLn)
	;-------------------------------------------------------------------------------
	; Print the Pick List for the Transfer
	;
	; Params: pintLn - line number
	;
	; Returns: None
	;
	;
	; History:
	; 06-Apr-2011	shobby	SR17714.6: Formatting for 'To Storage'
	; 04-Apr-2011	shobby	SR17714.4: Redirected previous change to INLP.
	; 28-Apr-2011	shobby	SR17714.2: Use CodeWithTSU formatting.
	; 07-Mar-2011	PPP		SR17677: Removed the 15 character limit for Desc
	; 01-Mar-2011	PPP		SR17672: Display the Unit Qty
	; 30-Jun-2010	PPP		SR17297: Created 
	;-------------------------------------------------------------------------------
	new idItem,idUnit,objItem,strBundleValues,strItemDescription
	
	set idItem = $$$INIssueLineItem(YFELD)
	
	set ANZM = ANZM+1
	write YCR
	do NL^WWWTAB
	
	; 1. Line Number
	;---------------------------------------
	do NF^WWWTAB
	write YCR,pintLn,"&nbsp;"
	
	; 2. Storage
	;---------------------------------------
	do ZWL^WWWTAB
	;SR17714.2	write $$$INIssueLineFromStorage(YFELD),"&nbsp;"
	write $$CodeWithTSU2^INLP($$$INIssueFromLocn($get(^INIssue(0,pidIssue,1))),$$$INIssueLineFromStorage(YFELD))	;SR17714.4

	; 3. Item
	;---------------------------------------
	do ZWL^WWWTAB
	write idItem,"&nbsp;"
	
	; 4. Item Description
	;---------------------------------------
	do ZWL^WWWTAB
	set objItem = $get(^INART(0,idItem,1))
	set strItemDescription = $$$INARTSearchName(objItem)
	//SR17677
	//if $length(strItemDescription) > 15 {
	//	set strItemDescription = $extract(strItemDescription,1,15)_"..."
	//}
	write strItemDescription,"&nbsp;"
	
	; 5. Quantity
	;---------------------------------------
	do ZWR^WWWTAB
	//write $$$INIssueLineQtyIssued(YFELD),"&nbsp;" ; Inventory Units   //SR17672
	write $$$INIssueLineQtyRequired(YFELD),"&nbsp;" ; Required Units
	
	; 6. Unit
	;---------------------------------------
	do ZWL^WWWTAB
	set idUnit = $$$INIssueLineUnit(YFELD)
	write idUnit_" ("_$$$AppEnum("EINHEIT",idUnit)_")","&nbsp;"
	
	; 7. Bundle Values
	;---------------------------------------
	do ZWL^WWWTAB
	set strBundleValues = $$GetBundleDesc(pidIssue,pintLn)
	write strBundleValues,"&nbsp;"
	
	; 8. To Storage
	;--------------------------------------- ;  Added
	do ZWL^WWWTAB
	;SR17714.6 write $$$INIssueLineToStorage(YFELD),"&nbsp;"	
	write $$CodeWithTSU2^INLP($$$INIssueToLocn($get(^INIssue(0,pidIssue,1))),$$$INIssueLineToStorage(YFELD))	;SR17714.6
	write YCR
	do EL^WWWTAB
	
	quit
	
	
ZUSATZTEXT(TEXT)
 	new YI
 	
	if ANZM'=0 if TEXT'="" do
	. write "<BR>"
	. if '$find(TEXT,"<") do  quit
	. . for YI=1:1 quit:$piece(TEXT,"|",YI,9999)=""  write $piece(TEXT,"|",YI),"<BR>",YCR  ;NUR TEXT ;only Text 
	. ;
	. for YI=1:1 quit:$piece(TEXT,"|",YI,9999)=""  write $piece(TEXT,"|",YI),YCR  ;HTML
	
	write YCR
	do FF^WWWW()
	write YCR
	
	quit
	
	
Title(pidIssue)
	;-------------------------------------------------------------------------------
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 07-Apr-2011	GRF		SR17672: add </FONT> and remove extra </TD></TR>
	; 30-Jun-2010	PPP		SR17297: Created 
	;-------------------------------------------------------------------------------
	new dtePosted,dteTransfer,idFromLocn,idRef,idSup,intStatus
	new objIssue,objRecord,strDescription
	
	set objIssue   = $get(^INIssue(0,pidIssue,1))
	set idFromLocn = $$$INIssueFromLocn(objIssue)
	
	set idSup      	= $$$INIssueSupplier(objIssue)
	set intStatus  	= $$$INIssueStatus(objIssue)
	set dtePosted 	= $$$INIssuePosted(objIssue)
	
	; TABLE 1
	;---------------------------------------
	do START1000^WWWTAB
	write YCR,"<TR><TD><NOBR>"
	
	; TABLE 2A
	;---------------------------------------
	write YCR,YCR,"<TABLE BORDER=0 CELLSPACING=1 WIDTH=100%>"
	write YCR,"<TR>"
	
	write YCR,"<TD ALIGN=CENTER COLSPAN=2>"
	write "<FONT SIZE=3><B>"
	write $$^WWWFORMNAME("INReturnToSupplier")_" "_$$^WWWTEXT(32503)     ; "Picklist"
	write "</B></FONT>"
	write "<BR>",YCR
	write "<FONT SIZE=2>"      ; "Issued By  "  "Location"
	write $$^WWWTEXT(33404)_" "_$$^WWWTEXT(388)_": "_idFromLocn_" ("_$$$WWW0121LocationName($get(^WWW0121(0,0,idFromLocn,1)))_")"
	write "</FONT>"
	write "</TD>"
	
	write "</TR>"
	write "</TABLE>",YCR
	; TABLE 2A END
	
	; TABLE 2B
	;---------------------------------------
	write YCR,YCR,"<TABLE BORDER=0 CELLSPACING=1 WIDTH=100%>"
	write YCR,"<TR>"
	
	write "<TD WIDTH=33%>"
	write "<FONT SIZE=2><B>"
	write "<BR>"
	write $$^WWWFELDNAME("INReturnToSupplier","D",34)_": "  ; "Supplier Number" 
	write idSup_" ("_$$$INLIEFShortName($get(^INLIEF(0,idSup,1)))_")"
	write "</B></FONT>"
	write "</TD>",YCR
	
	write "<TD ALIGN=CENTER VALIGN=BOTTOM WIDTH=33%>"
	write "<FONT SIZE=2><B>"
	write " "
	write "<BR>"
	write $$^WWWTEXT(32781)_": "_intStatus  ; "Status"
	write "</B></FONT>"
	write "</TD>",YCR
	
	write "<TD ALIGN=RIGHT VALIGN=BOTTOM WIDTH=33%>"
	write "<FONT SIZE=2><B>"
	if pidIssue '= "" write $$^WWWFELDNAME("INReturnToSupplier","P",1)_": "_pidIssue
	write "</B></FONT>"
	write "</TD>"
	
	write "</TR>",YCR
	
	;-----
	
 	write YCR,"<TR>"
	write "<TD ALIGN=RIGHT VALIGN=BOTTOM WIDTH=33%></TD>"
	write "<TD ALIGN=RIGHT VALIGN=BOTTOM WIDTH=33%></TD>"
	write "<TD ALIGN=RIGHT VALIGN=BOTTOM WIDTH=33%>"
	write "<FONT SIZE=2><B>"
	write $$^WWWFELDNAME("INReturnToSupplier","D",$$$FldINIssuePosted)_":"_$select(dtePosted'="":$zdatetime(dtePosted,3),1:"")
	write "</FONT></TD>"
 	write "</TR>"
	
	write "</TABLE>",YCR
	; TABLE 2B END
	
	do STOP^WWWTAB
	; TABLE 1 END
	quit
	
	
Header(UES)
	;-------------------------------------------------------------------------------
	; History:
	; 30-Jun-2010	PPP		SR17297: Created 
	;-------------------------------------------------------------------------------
	new loop
	
	write "<THEAD>" 
	do NL^WWWTAB
	for loop=1:1 {
		quit:$piece(UES,Y,loop,99)=""
		
		do NHWZ^WWWTAB
		write $piece(UES,Y,loop),"&nbsp;"
		do EH^WWWTAB
	}
	do EL^WWWTAB
	write "</THEAD>"
	quit
	
	
GetBundleDesc(pidIssue,pidLine)
	;-------------------------------------------------------------------------------
	; Gets the Bundle Description for a given Issue/Line
	;
	; Params: pidIssue, pidLine - line number
	;
	; Returns: Bundle Description
	;
	;
	; History:
	; 30-Jun-2010	PPP		SR17297: Created 
	;-------------------------------------------------------------------------------
	new idBundle,idFromLocn,idFromStore,idItem,objBundleStock,objLine,strBundleValues
	
	set strBundleValues = ""
	
	set idFromLocn 		= $$$INIssueFromLocn($get(^INIssue(0,pidIssue,1)))	
	set objLine 		= $get(^INIssueLine(0,pidIssue,pidLine,1))
	set idItem 			= $$$INIssueLineItem(objLine)
	set idFromStore 	= $$$INIssueLineFromStorage(objLine)
	set idBundle 		= $$$INIssueLineBundle(objLine)
	
	if idBundle'="" {
		set objBundleStock = ##class(alSOH.dBundleStock).%OpenId(idItem_"||"_idFromLocn_"||"_idFromStore_"||"_idBundle)
		if objBundleStock '= $$$NULLOREF {
			set strBundleValues = ##class(alSOH.iUSOH).RenderBundle(objBundleStock.Bundle,$get(SPRACHE,"EN"))
			do objBundleStock.%Close()
		}
	}
	quit strBundleValues
	
]]></Routine>
</Export>