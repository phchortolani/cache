<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMFCKeditor" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMFCKeditor
	
#include COMSYS
#include COMConst
	
SetWindowSize(pstrDialogHeight="",pstrDialogWidth="")
	;-------------------------------------------------------------------------------
	; Sets the dimensions of the FCKEditor for the current user
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 15-Mar-2011	GRF		-: Boolean Macros
	; 13-Mar-2008	shobby	SRBR014911: Created
	;-------------------------------------------------------------------------------
	new objCOMFCKEditor,strStatus
	
	if $get(YBED)'="" {
		set objCOMFCKEditor = ""
		set $$$COMFCKEditorDialogHeight(objCOMFCKEditor) = pstrDialogHeight
		set $$$COMFCKEditorDialogWidth(objCOMFCKEditor)  = pstrDialogWidth
		set strStatus = $$Save^COMUtils("COMFCKEditor",YBED,objCOMFCKEditor,$$$YES)
	}
	quit 1
	
	
GetWindowSize(pYBED="",pNull="")
	;-------------------------------------------------------------------------------
	; Gets the dimensions of the FCKEditor for the current user
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 12-Jan-2011	shobby	SR17642: Incorporated changes as defined by Carlos.
	; 13-Mar-2008	shobby	SRBR014911: Created
	;-------------------------------------------------------------------------------
	new objCOMFCKEditor,strDialogHeight,strDialogWidth,strWindowSize
	
	;SR17642 set strWindowSize="80"_Y_"80"
	set strWindowSize="100px"_Y_"250px"		;SR17642 
	
	if pYBED'="" {
		set objCOMFCKEditor = $get(^COMFCKEditor(YM,pYBED,1))
		set strDialogHeight = $$$COMFCKEditorDialogHeight(objCOMFCKEditor)
		set strDialogWidth  = $$$COMFCKEditorDialogWidth(objCOMFCKEditor)
	;SR17642 if strDialogHeight="" set strDialogHeight = 80
	;SR17642 if strDialogWidth=""  set strDialogWidth  = 80
		if strDialogHeight="" set strDialogHeight = "400px"     ;SR17642 
		if strDialogWidth=""  set strDialogWidth  = "690px"     ;SR17642 
		set strWindowSize = strDialogHeight_Y_strDialogWidth
	}
	quit strWindowSize
	
	
ShowEditor(pstrEditorPath,pidLang,pstrHTML,pidSkin,pidToolbar,pintMaxCount,pblnUseStandard,pCAMPORETORNO)
	;-------------------------------------------------------------------------------
	; Shows the FCKeditor. This is called from COMEditor.MAC and COM.Editor.cls
	;
	; Params:
	; pstrEditorPath: This is actually a pointer to the variable YGIF
	; pidLang       : The language to use on the form
	; pstrHTML      : The data to send to the editor
	; 
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 13-Mar-2008	shobby	SRBR014911: Turned off the FullPage property.  We don't need all that extra
	; 									HTML nonsense <html dir="ltr"><head><title></title></head><body>  etc.
	; 03-Nov-2006	Steve S	SR14915: Save feedback
	; 13-Oct-2006	RPW		SR14914: Created
	;-------------------------------------------------------------------------------
	new strPath
	
	set strPath = pstrEditorPath_"FCKeditor/"
	set strPath1 = pstrEditorPath_"js/"
	
	kill ^CacheTempInHyperEvent(%session.SessionId,$job)
	
	if pidToolbar="Default" set pidToolbar = "Disclinc"

	$$$StartScript("src='"_strPath_"fckeditor.js'")
	$$$EndScript()
	
	$$$StartScript("src='"_strPath1_"jquery-1.8.3.min.js'")
	$$$EndScript()
	// Yes this is separate.
	
	$$$StartScript()
		
	// Create a new FCKeditor, maximum size and using the Disclinc Toolbar.
	
	write "var objEditor = new FCKeditor('FCKeditor1','100%','95%','"_pidToolbar_"');"
	
	// BasePath                : points to where the editor code is
	// CheckBrowser            : Checks whether the browser is compatible.
	// Config -
	// FullPage                : FullPage editing (not full screen)
	// FitWindow               : Full screen
	// AutoDetectLanguage      : Whether we automatically detect the language from the browser or not
	// DefaultLanaguage        : This is the langage we pass in. Currently @net is not ISO compliant on the names
	// CustomConfigurationsPath: This is where the Disclinc modifications to the editor live
	// Value                   : The initial value to write out
	
	write "objEditor.BasePath='"_strPath_"';"
	write "objEditor.CheckBrowser = true;"
	write "objEditor.Config[""FullPage""] = false ;"
	write "objEditor.Config[""FitWindow""] = true;"
	write "objEditor.Config[""AutoDetectLanguage""] = false ;"
	write "objEditor.Config[""DefaultLanguage""]    = """_pidLang_""" ;"
	write "objEditor.Config[""CustomConfigurationsPath""]= '"_strPath_"DiscConfig.js';"
	write "objEditor.Config[""DiscMaxSize""]="_pintMaxCount_";"
	write "objEditor.Config[""DiscSaveError""]= '"_$$$Text($listbuild("Com00260",pintMaxCount))_"';"  ; "Unable to Save, length is greater than %1 characters."
	write "objEditor.Config[""DiscSaveAlert""]= '"_$$^WWWTEXT("Com00073")_"';" ; "Save performed correctly"
	
	write:'pblnUseStandard "objEditor.Config[""TemplatesXmlPath""]='"_strPath_"DiscTemplates.xml';"
	
	// FIXME<15532>: Can we removed the /csp/namespace component in the following lines?
	write "objEditor.Config[""ImageBrowserURL""] = '"_strPath_"editor/filemanager/browser/default/browser.html?Type=Image&Connector=/csp/"_YUCI_"/COM.FCKeditor.cls&YM="_YM_"&Y="_Y_"&SPRACHE="_SPRACHE_"';"
	write "objEditor.Config[""LinkBrowserURL""] = '"_strPath_"editor/filemanager/browser/default/browser.html?Connector=/csp/"_YUCI_"/COM.FCKeditor.cls&YM="_YM_"&Y="_Y_"&SPRACHE="_SPRACHE_"';"
	write "objEditor.Config[""FlashBrowserURL""] = '"_strPath_"editor/filemanager/browser/default/browser.html?Type=Flash&Connector=/csp/"_YUCI_"/COM.FCKeditor.cls&YM="_YM_"&Y="_Y_"&SPRACHE="_SPRACHE_"';"
	write "objEditor.Config[""LinkUploadURL""] = '/csp/"_YUCI_"/COM.FCKeditor.cls?YM="_YM_"&Y="_Y_"&SPRACHE="_SPRACHE_"';"
	write "objEditor.Config[""ImageUploadURL""] = '/csp/"_YUCI_"/COM.FCKeditor.cls?YM="_YM_"&Y="_Y_"&SPRACHE="_SPRACHE_"&Type=Image';"
	write "objEditor.Config[""FlashUploadURL""] = '/csp/"_YUCI_"/COM.FCKeditor.cls?YM="_YM_"&Y="_Y_"&SPRACHE="_SPRACHE_"&Type=Flash';"
	// FIXME<15532>: ^^^ 
	
	// If the user has entered a ', then translate it to &#39; FCKeditor handles this nicely and makes it '.
	// Is all cool.
	
	if $find(pstrHTML,$$$SGLQUOTE)>0 {
		set pstrHTML = $$Replace^COMUtilStr(pstrHTML,"'","&#39;")
	}
	
	write "objEditor.Value='"_pstrHTML_"';"
	
	write "var strSkinPath = objEditor.BasePath + 'editor/skins/"_pidSkin_"/' ;"
	write "objEditor.Config['SkinPath']=strSkinPath;"
	
	// The following switch is optional. It is done to enhance the loading
	// time of the toolbar, by preloading the images used on it.
	if pidSkin="office2003" {
		write "objEditor.Config['PreloadImages'] ="
		write "strSkinPath + 'images/toolbar.start.gif' + ';' +"
		write "strSkinPath + 'images/toolbar.end.gif' + ';' +"
		write "strSkinPath + 'images/toolbar.bg.gif' + ';' +"
		write "strSkinPath + 'images/toolbar.buttonarrow.gif' ;"
	
	} elseif pidSkin="silver" {
		write "objEditor.Config['PreloadImages'] ="
		write "strSkinPath + 'images/toolbar.start.gif' + ';' +"
		write "strSkinPath + 'images/toolbar.end.gif' + ';' +"
		write "strSkinPath + 'images/toolbar.buttonbg.gif' + ';' +"
		write "strSkinPath + 'images/toolbar.buttonarrow.gif' ;"
	}
	
	write "objEditor.Create();"
	
	write "function FCKeditor_OnComplete( pobjeditorInstance )"
	write "{"
	write "pobjeditorInstance.Focus();"
	write "};"
	write "function retornaValor(){"
		write "var oEditor = FCKeditorAPI.GetInstance('FCKeditor1');"
		write "$(window.opener.document).find('#"_pCAMPORETORNO_"').val(oEditor.GetXHTML(true));"
	write "	};"
	
	$$$EndScript()
	
	quit
	
]]></Routine>
</Export>