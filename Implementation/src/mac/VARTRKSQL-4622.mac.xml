<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARTRKSQL" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include INConst
#include WWWConst
#include COMSYS
#include VARConst
 
#define ParamNotInformed "Parametro nao informado."
 
VARTRKSQL
	quit
 
SQLGetFabricante(CodFabricante)
	DO ^WWWVAR
	set Desc = ""
	if CodFabricante '= "" {
		set Desc = $piece($get(^VARSESFabricante(0,CodFabricante,1)),"~",1)
		
		//Gato para mostrar alguma coisa
		//Se não tiver nada, mostra o Codigo, que provavelmente é um texto
		if (Desc="") {
			if $data(CodFabricante) set Desc=CodFabricante
		}
	}
	quit Desc
 
SQLCondicaoPagamento(CodCP)
	DO ^WWWVAR
	set Desc = ""
	if ($get(CodCP) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^INKOND(0,CodCP,1)),"~",1)
	}
	quit Desc
 
SQLGetPAMs(AFM)
	DO ^WWWVAR
	SET YM=0
	if AFM="" quit ""
	set returnstring=""
	SET AFMLine=""
	set AFMLine=$order(^INAUFP(YM,AFM,AFMLine))
	new parrPAMs
	while AFMLine'="" {
		do GetPAMs^VARSESPamAfm(AFM, AFMLine, .parrPAMs)
		set AFMLine=$order(^INAUFP(YM,AFM,AFMLine))
	}
	$$$Order1(parrPAMs,idPAM)
	
		if returnstring = "" {
			set returnstring = idPAM
		} else {
			set returnstring = returnstring_";"_idPAM
		}
	
	$$$End
	QUIT returnstring
	
SQLGetProcessosAFM(AFM)
	DO ^WWWVAR
	SET YM=0
	DO ^WWWVAR
	SET YM=0
	if AFM="" quit ""
	set returnstring=""
	SET AFMLine=""
	set AFMLine=$order(^INAUFP(YM,AFM,AFMLine))
	new parrPAMs,idPAM
	while AFMLine'="" {
		do GetPAMs^VARSESPamAfm(AFM, AFMLine, .parrPAMs)
		set AFMLine=$order(^INAUFP(YM,AFM,AFMLine))
	}
	$$$Order1(parrPAMs,idPAM)
	
		if returnstring = "" {
			set returnstring = $piece($GET(^VARTRKPAM(YM,idPAM,1)),Y,7)
		} else {
			set returnstring = returnstring_";"_$piece($GET(^VARTRKPAM(YM,idPAM,1)),Y,7)
		}
	
	$$$End
	QUIT returnstring
 
SQLGetDescCentroCusto(local)
	if local="" quit ""
	set retorno=""
	if $get(^WWW0121(0,0,local,1))'="" {
		set retorno=$p($get(^WWW0121(0,0,local,1)),"~",60)
		if retorno'="" {
			set retorno=$p($get(^WWW0121(0,0,local,1)),"~",1)
		}
	}
	quit retorno	
	quit
	
SQLGetLocalEntrega(local)
	if local="" quit ""
	set retorno=""
	if $get(^WWW0121(0,0,local,1))'="" set retorno=$p($get(^WWW0121(0,0,local,1)),"~",14)
	quit retorno
	
SQLGetCentrodeCusto(local)	
	if local="" quit ""
	set retorno=""
	if $get(^WWW0121(0,0,local,1))'="" set retorno=$p($get(^WWW0121(0,0,local,1)),"~",60)
	quit retorno
 
SQLGetCustoMedioProd(pCodigoProduto)
	quit:($get(pCodigoProduto) = "") ""
	set record = $get(^INART(0,pCodigoProduto,1))
	// Andre, 21/01/2008: Passando a usar o campo core de custo médio:
	//quit $$$INARTFixedPurchasePrice(record)
	quit $$$INARTAverageCost(record)
	
	
SQLGetMemoWithCRLF(name)
	quit:($get(name)="") ""
	quit $$FullReplace^COMUtilStr(name,"|",$CHAR(13)_$CHAR(10))
 
SQLGetDataFormatada(date)
	; ----------------------
	; DD/MM/AAAA
	; ----------------------
	quit:($get(date)="") ""
	quit $ZDATE(date,4)
 
SQLGetFormatDate(date)
	quit:($get(date)="") ""
	quit $ZDATETIME(date,4,1)
 
SQLGetFormatDate2(date)
	set date2=$piece(date,",",1)
	quit date2
	
	
SQLGetFormatDate3(date)	//Formato de Data 2007-01-30 (yyyy-mm-dd)
	quit:($get(date)="") ""
	quit $ZDATETIME(+date,3,1)
 
SQLGetFormatDate4(date)
	set date4=$piece(date," ",1)
	quit date4
	 
SQLGetFormatDateODBC(date)	//Formato de timestamp ODBC 2002-11-25 18:45:16.960000
	quit:($get(date)="") ""
	quit $ZDATETIME(date,3,1,6)
	 
SQLGetUserParamDesc(param)
	// Obtém a descrição de um User Parameter (INPARA).
	// Esta função é usada em queries SQL.
	// O parâmetro da função deve conter o nome do parâmetro e
	// seu código, separado por "~", por exemplo:
	// "VARSESELEMENTODEDESPESA~1"
	set TextoParam = ""
	if ($get(param) = "") {
		set TextoParam = ""
	}
	else {
		set NomeParam = $piece(param,"~",1)
		set CodParam = $piece(param,"~",2)
		set TextoParam = $piece($get(^INPARA(0,NomeParam,"PT",CodParam,1)),"~",1)
	}
	quit TextoParam
 
 
SQLGetAppParamDesc(param)
	// Obtém a descrição de um Application Parameter (WWW101).
	// Esta função é usada em queries SQL.
	// O parâmetro da função deve conter o nome do parâmetro e
	// seu código, separado por "~", por exemplo:
	// "VARSESELEMENTODEDESPESA~1"
	set TextoParam = ""
	if ($get(param) = "") {
		set TextoParam = ""
	}
	else {
		set NomeParam = $piece(param,"~",1)
		set CodParam = $piece(param,"~",2)
		set TextoParam = $piece($get(^WWW101(0,NomeParam,"PT",CodParam,1)),"~",1)
	}
	quit TextoParam
 
 
SQLGetLocationName(CodLoc)
	set Desc = ""
	if ($get(CodLoc) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^WWW0121(0,0,CodLoc,1)),"~",1)
	}
	quit Desc
 
SQLGetCodigoContabil(codigoLocal)
	; Obtém o código contábil (campo free7 de WWW0121)
	; Histórico:
	; 2008-mar-03	Soeiro	Criado 
	new res
	set res=""
 
	if ($get(codigoLocal)'="") {
		set res=$piece($get(^WWW0121(0,0,codigoLocal,1)),"~",66)
	}
 
	quit res
 
SQLGetDescFornecedor(CodFor)
	set Desc = ""
	if ($get(CodFor) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^INLIEF(0,CodFor,1)),"~",4)
	}
	quit Desc
	
SQLGetCNPJ(CodFor)
	set Desc = ""
	if ($get(CodFor) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^INLIEF(0,CodFor,1)),"~",201)
	}
	quit Desc	
	
SQLGetDescUnit(CodUnit)
	DO ^WWWVAR
	set Desc = ""
	if ($get(CodUnit) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^WWW101(0,"EINHEIT","PT",CodUnit,1)),Y,1)
	}
	quit Desc
	
SQLGetSiglaUnit(CodUnit)
		set Desc = ""
	if ($get(CodUnit) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^WWW101(0,"EINHEIT","PT",CodUnit,1)),"-",1)
	}
	quit Desc
	
SQLGetNaturezaEntrada(CodNE)
	if CodNE="-1" set CodNE=1
	set Desc = ""
	if ($get(CodNE) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^INPARA(0,"RECTYPE","PT",CodNE,1)),"~",1)						
	}
	quit Desc
	
SQLGetProcesso(PAM)
	set PAM=$PIECE(PAM,";",1)
	set processo=""
	if PAM '= "" {
		if $get(^VARTRKPAM(0,PAM,1))'="" {
			set processo=$piece($get(^VARTRKPAM(0,PAM,1)),"~",7)
		}
	}
	quit processo
	
SQLGetCondicaoPagamento(cod)
	new desc, obj
	set desc=""
	
	if ($get(cod)'="") {
		set obj=$get(^INKOND(0,cod,1))
		if (obj'="") {
			set desc=$piece(obj,"~",1)
		}
	}
	
	quit desc	
 
SQLGetYesOrNo(param)
	// Retorna o texto "Não" se parâmetro igual a zero, 
	// "Sim" se parâmetro igual a um, ou "?" se qualquer outro valor.
	if (+$get(param) = 0) {
		quit "Não"
	}
	if (+$get(param) = 1) {
		quit "Sim"
	}
	quit "?"
	
 
SQLGetUserNameOuCodigo(userNumber="")
	;
	; Retorna o UserName do WWW013. Se o nome não for encontrado
	; retorna o próprio userNumber (há situações em que o número
	; contém o prório nome desejado, preenchido à mão).
	; 
	; Histórico:
	; 
	; 2008-02-12 Soeiro: criado
	;
	new userName 
	set userName = $$SQLGetUserName(userNumber)
	if (userName="") {
		quit userNumber
	}
	
	quit userName
	
 
SQLGetUserName(userNumber)
	new userName
	set userName = ""
	if ($get(userNumber) = "") {
		set userName = ""
	}
	else {
		set userName = $piece($get(^WWW013(0,userNumber,1)),"~",1)
	}
	quit userName
	
SQLGetPacienteName(paciente)
	set name = ""
	if ($get(paciente) = "") {
		set name = ""
	}
	else {
		set name = $piece($get(^MEDPatient(0,paciente,1)),"~",23)
	}
	quit name
 
SQLGetMedicoName(medico)
	set name = ""
	if ($get(medico) = "") {
		set name = ""
	}
	else {
		set name = $piece($get(^VARSESProfSaude(0,medico,1)),"~",2)
	}
	quit name
	
 
SQLGetMedicoCRM(medico)
	set CRM = ""
	if ($get(medico) = "") {
		set CRM = ""
	}
	else {
		set CRM = $piece($get(^VARSESProfSaude(0,medico,1)),"~",4)
	}
	quit CRM
	
SQLGetMedicoEspec(medico)
	set Espec = ""
	if ($get(medico) = "") {
		quit Espec
	}
	else {
		set obj=$piece($get(^VARSESProfSaude(0,medico,1)),"~",5)
		if obj="" quit ""
		set Espec = $GET(^VARSESESPMED(0,obj,1))
 
	}
	quit Espec
	
SQLGetGrupoItem(pCodItem)
	new codGrupo
	set codGrupo = ""
	if ( $get(pCodItem) = "" ) {
		quit ""
	}
	else {
		set objItem = $get(^INART(0,pCodItem,1))
		if ( $get(objItem) '= "" ) {
			set codGrupo = $piece(objItem,"~",30)
		}
	}
	quit codGrupo
 
SQLGetDescGrupoItem(CodGrupo)
	set Desc = ""
	if ($get(CodGrupo) = "")
	{
		quit Desc
	}
	else
	{
		set Desc=$piece($get(^INItemGroup(0,CodGrupo,1)),"~",2)
	}
	quit Desc
	
SQLGetDescLocalCental(loc)
	new desc, coddescloc
	set coddescloc = ""
	set desc = ""
	IF loc = "ALMOXARIFADO"
		{
			set coddescloc=$piece($get(^VARSESParams(0,0,1)),"~",1)
			set desc = $piece($get(^WWW0121(0,0,coddescloc,1)),"~",1)
		}
	if loc = "FARMACIA"
		{
			set coddescloc=$piece($get(^VARSESParams(0,0,1)),"~",2)
			set desc = $piece($get(^WWW0121(0,0,coddescloc,1)),"~",1)
		}
	quit desc
	
SQLGetSOHCompany(codProduto)
	// EF(Rede)/Unidade de Estoque
	do ^WWWVAR
	quit:($get(codProduto) = "") $$$ParamNotInformed
	quit $$^INARTMENGE(codProduto,,,,1,0)
	
SQLGetSOHLocal(pItem,pLocation)
	// EF (Local)
	do ^WWWVAR
	quit:($get(pItem) = "") $$$ParamNotInformed
	quit:($get(pLocation) = "") $$$ParamNotInformed
	;quit $$$INDRPBESTVORonHandInventoryUM($get(^INDRPBESTVOR(YM,YLOCATION,YKEY,1)))
	quit $$^INARTMENGE(pItem,,pLocation,,1,0)
 
SQLGetLocalAbastecedorINTFR(pSourceId)
	; Pega a o local abastecedor da INTFR com base no SourceId da INARTHISTL
	;  Histórico
	;  2008-04-02	Soeiro	Criado
	new objINTFR,cod
	set cod=""
	if ($get(pSourceId)="") quit ""
	
	//A primeira parte do SourceID é a chave
	set objINTFR=$get(^INTFR(0,$piece(pSourceId,",",1),1))
	
	//ReceivingLocation é o piece 4
	set cod=$piece(objINTFR,"~",4)
	
	if ($get(cod)="") quit ""
	
 	quit $$SQLGetLocationName(cod)
 
SQLGetSpecialFormatDate(pDate,pTime)
	; Transforma data e hora em um número horolog
	; válido (levando em consideração que podem ser em branco)
	; e depois transforma em data e hora por extenso
	;
	
	quit $$SQLGetFormatDate($$SQLGetTimeStamp(pDate,pTime))
 
SQLGetTimeStamp(pDate,pTime)
	; Transforma dois números em um timestamp do tipo HOROLOG
	new timestamp
	set timestamp=$get(pDate)
	if (timestamp'="") {
		if ($get(pTime)'="") {
			set timestamp=timestamp_","_pTime
		}
	}
	quit timestamp
	
GetCostAsAtDateAndTime(pCompany,pidItem,pDateTimeHorolog)
	// Andre, 15/05/2008
	// Returns item average cost at a certain date and time.
	// Wraps function $$GetCostAsAtDateAndTime^VARSESBALANCETE so that it can be
	// called from an SQL query (without all global variables available after calling
	// routine WWWVAR), and separates the date and time parts of parameter 
	// pDateTimeHorolog.
	new cost, YM, Y, pdteDate, pdteTime
	set cost = "", YM = $get(pCompany), Y = "~"
	set pdteDate = $piece($get(pDateTimeHorolog),",",1)
	set pdteTime = $piece($get(pDateTimeHorolog),",",2)
	set cost = $$GetCostAsAtDateAndTime^VARSESBALANCETE($get(pidItem), $get(pdteDate), $get(pdteTime))
	quit cost
	
GetCostAsAtDateAndTimef(pCompany,pidItem,pDateTimeHorolog)
	// Andre, 15/05/2008
	// Returns item average cost at a certain date and time.
	// Wraps function $$GetCostAsAtDateAndTime^VARSESBALANCETE so that it can be
	// called from an SQL query (without all global variables available after calling
	// routine WWWVAR), and separates the date and time parts of parameter 
	// pDateTimeHorolog.
	new cost, YM, Y, pdteDate, pdteTime
	set cost = "", YM = $get(pCompany), Y = "~"
	set pdteDate = $piece($get(pDateTimeHorolog),",",1)
	set pdteTime = $piece($get(pDateTimeHorolog),",",2)
	set cost = $$GetCostAsAtDateAndTime^VARSESBALANCETE($get(pidItem), $get(pdteDate), $get(pdteTime))
	set contf = $$^WWWTR(0,8,cost)  ;trying to format test
	quit costf

SQLGetUnitMeasure(pCodItem)
	new codUnit
	set codUnit = ""
	if ( $get(pCodItem) = "" ) {
		quit ""
	}
	else {
		set objItem = $get(^INART(0,pCodItem,1))
		if ( $get(objItem) '= "" ) {
			set codUnit = $piece(objItem,"~",40)
		}
	}
	quit codUnit
	
SQLGetDescricaoProduto(pCodItem)
	;---------------------------
	; Descrição do item
	;-------------------------- 
	new res
	set res=""
	
	if ($get(pCodItem)'="") {
		set res=$piece($get(^INART(0,pCodItem,1)),"~",1)
	}
	
	quit res

SQLFormataMoeda(pValor)
	quit $TRANSLATE("R$ "_$FNUMBER(pValor,"",2),".",",")

SQLGetCodPaciente(pStorage)
	;---------------------------
	; Pega o codigo do paciente a partir da classe "alSOH.dStockHistory"
	;-------------------------- 
	quit $piece(pStorage,"||",2)
	
SQLGetTipoMovimentacao(pListMovimentacao) ;,pCodDispencacao)
	quit $listget(pListMovimentacao, 1)
]]></Routine>
</Export>