<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEdit31G" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMGridEdit31G
	
#include COMConst
#include WWWConst
#include COMGridEdit31
	
	; Macro override : based on ^CacheTemp rather than YFORM
#def1arg WWWDATEN(%args)	^WWWDATEN(YM,+$horolog,YUSER,$get(^CacheTemp(YUSER,"Grid","Name")," "),"V",%args)
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGEG("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;-------------------------------------------------------------------------------
	; Standardised variables :
	; (p)idGridRow  contains the 2x01    format for grid rows - as used for REFERENCEKEY
	;    idLastKey  contains the 2.01    format for grid rows - this is the last of the REFERNENCEROW entries
	;    idCell     contains the Y2x01_5 format for grid row and column
	;-------------------------------------------------------------------------------
	
BodyName(YFORM)
	new strName
	
	if $get(YFORM)=$get(^CacheTemp(YUSER,"Grid","Name")) {
		set strName = "gridbody"
	} else {
		set strName = "ELBody"
	}
	quit strName
	
	
Header(pstrPiece,pstrValue)
	;-------------------------------------------------------------------------------
	; Updates items on the header screen.
	;
	; Returns:
	;
	; History:
	; 26-May-2008	GRF		Cleanup old change history (2006 and earlier)
	; 07-Dec-2004	Shobby	SR10468: Created
	;-------------------------------------------------------------------------------
	new idPiece,strContainer,strType
	
	set strContainer = $get(^CacheTemp(YUSER,"Grid","Container"))
	if strContainer'="" {
		write "document.getElementById('Y"_strContainer_pstrPiece_"').value='"_pstrValue_"';"
		set strType = $extract(pstrPiece,1,1)              ; P, D, M ?
		set idPiece = $piece(pstrPiece,strType,2)          ; field number ?
		
		set $piece(^WWWDATEN(YM,+$horolog,YUSER,strContainer,strType,1),Y,idPiece) = pstrValue
	}
	quit
	
	
GetGridContents(&parrGrid,pYFORM="",pblnIncludeKilled=$$$NO,pstrKey="")
	;-------------------------------------------------------------------------------
	;
	; AKA: $$$GRIDGetContents(%args)
	;      [GetGridContents^COMGridEdit31Interface - deprecated link - use macro]
	; 
	; Called By:
	;      UpdateContainer^COMGridEdit31G
	;      CallBacks^COMGridEdit31S
	;      OnBeforeSave^FINAPPaymentLine
	;      PopulateFields^FINAPPaymentLine
	;      OnBlurPost^FINInvGroupPost
	;      LoadGrid^INADJ
	;      UpdateContainer^INWEINVELINE
	;      GetLineDistribution^FINAPInvDiscount
	;      InvoiceTotals^FINAPVoucher2
	;      QuantityBreaksValid^INDPPLineDispRule, NoOverlappingMinQuantities^INDPPLineDispRule
	;      GetQtyEntered^INItemStoreExists
	;      LoadLinesByReq^INMOV, LoadLinesByIss^INMOV, IssueRevLine^INMOV, OnGridExists^INMOV
	;      GetQtyEntered^INReceiptLine
	;      GetQtyEntered^INRECLine
	;      CacheLinkExists^INRECSearch
	;      GetQtyEntered^INRECSummary
	;      EnsureTransfersCanBeReceived^INRECTFR
	;      HandlePartial^INReqToSupOrderLine
	;      OnBeforeSave^WWW120
	;      ValidateLines^WWW120DynTable
	; 
	; Returns:
	;
	; History:
	; 01-Feb-2012	shobby	SR17948: if pYFORM'="" then also need pstrKey'="" to get
	;                           the key from WWWDATEN
	; 09-Nov-2011	GRF		SR17948: subscript error from undefined Grid Name entry		*** REVERTED ***
	; 30-Jun-2010	shobby	SR17779: New parameter pstrKey to be used when WWWDATEN
	;							has not yet been prepared such as when determing the
	;							status of buttons.
	; 08-Apr-2010	GRF		SR17177: pobjGrid should be parrGrid
	; 15-Jul-2009	GRF		SR16669: clarify idGridRow use
	; 21-Oct-2008	FIS		BR014981: I think this is the wrong solution for the problem
	;							to save a value with quotes with an execute command.
	;							I changed to how I think it should work.
	; 23-Sep-2008	shobby	BR014981: If data returned from @query contains double
	;							quotes then the line following will crash.  (Change
	;							made on site at SES)
	; 03-Feb-2006	RPW		SR14093: Use a variable for $h instead of recalculating it
	; 18-Oct-2005	PO		Newed query
	; 30-Sep-2005	JW		SR11573: Big speed up. Remove unnecessary keybuilds. Use macros.
	; 05-Apr-2005	shobby	Fixed removing of Killed records.
	; 04-Apr-2005	shobby	SR11983: Reworked to include save records that aren't yet in grid
	; 24-Mar-2005	shobby	Flag to include Killed records, useful to find the next
	;							Available ID when creating a new record.
	; 24-Mar-2005	shobby	Grid may contain multiple form structures if not using
	;							the default then pass in the Form Name.
	;-------------------------------------------------------------------------------
	new strClassName,idGridRow,strYKEY,strYFELD,strCommand,YFORM,YDATEI,strKey
	new blnMultiple,subscriptParent,subscriptChild,idParent,query,dteHorolog,strQuery
	
	kill parrGrid
	
	set dteHorolog = +$horolog
	
	if ($get(^CacheTemp(YUSER,"Grid","Name"))'="") || ((pYFORM'="")&&(pstrKey'="")) { ;SR17948
		set blnMultiple = (pYFORM'="")
		
		if blnMultiple {
			set YFORM = pYFORM
		} else {
			set YFORM = $get(^CacheTemp(YUSER,"Grid","Name"))
		}
		
		set YDATEI = $$$GRIDClass(YFORM)
		if blnMultiple {
			;SR17779 vvvvv
			if pstrKey'="" {
				set strKey=pstrKey
			} else {
				set strKey = $get(^WWWDATEN(YM,dteHorolog,YUSER,$get(^CacheTemp(YUSER,"Grid","Name")),"V","REFERENCEKEY")) ; Keys for header class
			}
			;SR17779 set strKey = $get(^WWWDATEN(YM,dteHorolog,YUSER,$get(^CacheTemp(YUSER,"Grid","Container")),"P","1")) ; Keys for header class
			;SR17779 ^^^^^^^
			set subscriptParent = $length(strKey,",")+1
			set subscriptChild  = subscriptParent+1
			set idParent        = $piece(strKey,",",subscriptParent-1)
			set strKey          = $$^WWWKEYBUILD($$$WWWYM(YDATEI)_","_strKey)
			
			set query = "^"_YDATEI_"("_strKey_")"
			for {
				set query = $query(@query)
				quit:query=""
				quit:$qsubscript(query,subscriptParent)'=idParent
			
				set strQuery = $$Replace^COMUtilStr(@query,"""","""""") 
				xecute "set parrGrid("_$piece(query,",",2,subscriptChild)_")="""_strQuery_""""
			}				
				/*Note: Why is this required ?     
					set parrGrid = ^Global(0,"abc",1)       -> fails
					set parrGrid = "^Global(0,"abc",1)"     -> fails
					set parrGrid = "^Global(0,""abc"",1)"   -> OK
					   -> guessing this is why all quotes gets converted into double quotes:
					      xecute 'set parrGrid(...) = "^Global(0,""abc"",1)" '
				  But:
					set parrGrid = strQuery                     -> is OK, too !
					   -> xecute 'set parrGrid(...) = strQuery' -> should do same thing !
						
				  Conclusion:
				    the right command should be:
					xecute "set parrGrid("_$piece(query,",",2,subscriptChild)_") = strQuery"
				  
				  FIXME: Check conclusion is right.
				*/
		}
		
		if (pstrKey="") || ($get(^WWWDATEN(YM,dteHorolog,YUSER,YFORM,"V","REFERENCEKEY"))=pstrKey) {
			; ...,"REFERENCEKEY","2x01",1) = "Pref0123",2.01
			; generates parrGrid("Pref0123",2.01) = """Pref0123"",2.01"
			set idGridRow = ""		
			for {
				set idGridRow = $order(^WWWDATEN(YM,dteHorolog,YUSER,YFORM,"V","REFERENCEKEY",idGridRow))
				quit:idGridRow=""
			
				set strYKEY = $get(^WWWDATEN(YM,dteHorolog,YUSER,YFORM,"V","REFERENCEKEY",idGridRow,1))
			
				if pblnIncludeKilled || '$$$KilledRecord(idGridRow,YFORM) {
					set strYFELD = $$GetYFELD(YFORM,idGridRow)
					set strYFELD = $translate(strYFELD,"""")
					xecute "set parrGrid("_strYKEY_")="""_strYFELD_""""
				
				} elseif 'pblnIncludeKilled && blnMultiple {
					xecute "kill parrGrid("_strYKEY_")"
				}
			}
		}
	}
	quit
	
	
SetGridContents(&parrGrid,pblnUpdateScreen=$$$YES,YFORM="",pblnAllLines=$$$NO,pblnUpdateStyle=$$$YES)
	;-------------------------------------------------------------------------------
	; Checks the entire grid for changes and updates screen accordingly.
	; 
	; AKA: $$$GRIDSetContents(%args)
	;      [SetGridContents^COMGridEdit31Interface - deprecated link - use macro]
	; 
	; Called By:
	;     OnBlur^FINAPInvLineEvents2, HandlePartial^INReqToSupOrderLine (from OnBlur)
	;     [UpdateContainer^COMGridEdit31G - commented]
	; 
	; Returns:
	;
	; History:
	; 08-Apr-2010	GRF		SR17177: pobjGrid should be parrGrid (with &)
	; 15-Jul-2009	GRF		SR16669: clarify idGridRow use
	; 29-May-2007	RPW		SR15513: Broke out the code to actually draw the rows.
	; 17-Aug-2005	PO		SR12965: Allow all lines in grid to be updated using
	;							added references
	; 03-Feb-2005	shobby	Flag for updating screen (may want to update data only
	;							such as when called from Update^FINAPInv)
	; 02-Feb-2005	shobby	Code Check.
	; 01-Feb-2005	Shobby	SR10061: Created
	;-------------------------------------------------------------------------------
	new idGridRow,strClassName,strRefList,strYFELDNew,strYFELDOld,strYKEY
		
	if $get(^CacheTemp(YUSER,"Grid","Name"))'="" {
		if YFORM=""     set YFORM      = ^CacheTemp(YUSER,"Grid","Name")
		if pblnAllLines set strRefList = $get($$$WWWDATEN("REFERENCELIST"))    ; Macro override : based on ^CacheTemp rather than YFORM
		
		set idGridRow = ""
		for {
			set idGridRow = $order(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEKEY",idGridRow))
			quit:idGridRow=""
			
			if '$$$KilledRecord(idGridRow,YFORM) {
				do SetGridLineContents(pblnUpdateScreen,.parrGrid,idGridRow,pblnAllLines,$get(strRefList),pblnUpdateStyle)
			}
		}
	}
	quit
	
	
SetGridLineContents(pblnUpdateScreen,&parrGrid,pidGridRow,pblnAllLines=$$$NO,pstrRefList="",pblnUpdateStyle=$$$YES)
	;-------------------------------------------------------------------------------
	; This sets the contents of the grid on the screen, broken out of SetGridContents above.
	; 
	; Called By: SetGridContents^COMGridEdit31G     [ IncreaseQuantity^INReqCommon - commented ]
	; 
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	;
	; History:
	; 17-Sep-2013	shobby	HEVA-1113: Define YKEY for use later by OnBeforeFormat
	; 08-Apr-2010	GRF		SR17177: pobjGrid should be parrGrid
	; 15-Jul-2009	GRF		SR16669: clarify pidGridRow use
	; 28-May-2007	RPW		SR15513: Created
	;-------------------------------------------------------------------------------
	new strYKEY,strYFELDNew,strYFELDOld,YKEY ;HEVA-1113A

	; strYKEY : HeaderKeyList,idDataLine
	set strYKEY     = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEKEY",pidGridRow,1))
	set YKEY= $translate(strYKEY,"""","") ;HEVA-1113A
	set strYFELDOld = $translate($$GetYFELDEX(YFORM,strYKEY),"""")
	set strYFELDNew = ""
	xecute "set strYFELDNew=parrGrid("_strYKEY_")"
	
	if pblnAllLines set $$$WWWDATEN("REFERENCELIST") = pstrRefList    ; Macro override : based on ^CacheTemp rather than YFORM

	do ScreenUpdate^COMGridEdit31S("Y"_pidGridRow_"_0",strYFELDNew,strYFELDOld,,pblnUpdateScreen,pblnUpdateStyle)
	
	quit
	
	
GetYKEY(pidGridRow,YFORM="")
	;-------------------------------------------------------------------------------
	; Create a YKEY, needed in these methods and calls to external routines.
	; Returns the full YKEY if it can be found otherwise a partial YKEY with
	; two part YKEY's.
	; 
	; TODO - Might need to have another look at this when YKEY has more than two parts.
	; 
	; Compare with ReferenceKey^COMGridEdit31Interface
	;
	; Returns:
	;
	; History:
	; 15-Jul-2009	GRF		SR16669: clarify pidGridRow use
	; 06-Dec-2004	shobby	Moved from COMGridEdit31
	; 24-Nov-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new strYKEY
	
	set strYKEY=""
	if YFORM="" set YFORM = $get(^CacheTemp(YUSER,"Grid","Name"))
	
	if $get(pidGridRow)'="" {
		set strYKEY = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEKEY",pidGridRow,1))
	}
	if strYKEY="" {  ; Container Key without line no      FIXME : Always from ...("Grid","Name") regardless of parameter passed in ?
		set strYKEY = $get($$$WWWDATEN("REFERENCEKEY"))    ; Macro override : based on ^CacheTemp rather than YFORM
	}
	
	quit strYKEY
	
	
GetYFELDContainer()     ;  ********************  Not completed  ********************
	;-------------------------------------------------------------------------------
	; use $$$GRIDYFELDContainer rather than calling directly
	; 
	; History:
	; 14-Mar-2005	JW		Used new function GetYFELD
	;-------------------------------------------------------------------------------
	new strContainer
	
	set strContainer = $get(^CacheTemp(YUSER,"Grid","Container"))
	; TODO : if strContainer is null will base on current YFORM - is this valid?
	quit $$GetFormData^COMUtilForm(strContainer)
	
	
GetYMFELDContainer(pidType=1)
	;-------------------------------------------------------------------------------
	; Get manual fields.
	; 
	; Input:	pidType		1 : Current, 2: Original
	; 
	; Returns:
	;
	; History:
	; 16-May-2007	RPW		SR15513: Allow to get current or previous
	; 29-Nov-2006	PO		SR15249: Removed quotes
	; 17-Feb-2005	JW		SR11456: Created
	;-------------------------------------------------------------------------------
	new strYMFELD,strContainer,strKey,strGlobal
	
	; TODO : Could call $$GetFormData^COMUtilForm(strContainer,"M")
	set strYMFELD    = ""
	set strContainer = $get(^CacheTemp(YUSER,"Grid","Container"))
	if strContainer'="" {
		set strYMFELD = $get(^WWWDATEN(YM,+$horolog,YUSER,strContainer,"M",pidType)) // SR15513
	}
	quit strYMFELD
	
	
GetYMFELDValue(pidGridRow="",pintCol="")
	;-------------------------------------------------------------------------------
	; 
	; ByRef: YUSER
	; Returns: Manual form field value
	; 
	; History:
	; 01-Feb-2010	GRF		SR17074: Simplified, variable prefix, standard variable
	; 20-Jan-2010	DWR		SR17074: Created
	;-------------------------------------------------------------------------------
	quit $get($$$WWWDATEN("REFERENCEVALUE","Y"_pidGridRow_"_"_pintCol,1))
	/*
GetYMFELDValue(pGridRow="",pidFormField="")
	new ManFldVal
	
	if $data($$$WWWDATEN("REFERENCEVALUE","Y"_pGridRow_"_"_pidFormField)) {
		set ManFldVal = $$$WWWDATEN("REFERENCEVALUE","Y"_pGridRow_"_"_pidFormField,1)
	} else {
		set ManFldVal = ""
	}
	quit ManFldVal
	*/
	
	
GetYFELDEX(YFORM,pYKEY)
	;-------------------------------------------------------------------------------
	; Gets a value of YFELD based on YKEY
	; 
	; Macro Call : $$$GRIDGetYFELD(%key) - getting YFORM from CacheTemp
	; 
	; Inputs :
	;	YFORM		Form ID
	;	pYKEY		HeaderKeyList,idDataLine   e.g. "REC123",1.01
	; 
	; Returns:		$$$WWWDATEN("YFELD",idGridRow,1)
	;
	; History:
	; 15-Jul-2009	GRF		SR16669: clarify idGridRow use
	; 22-Jun-2009	GRF		Clarify key usage (idLastKey rather than reuse pYKEY)
	; 30-Sep-2005	JW		SR11573: Big speed up.
	; 29-Jun-2005	JW		SR10412: Added default for pYKEY
	; 28-Nov-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new idGridRow,idLastKey,strYFELD,strYFORM
	
	set strYFELD=""
	set idGridRow=""
	if $get(YFORM)="" set YFORM = $get(^CacheTemp(YUSER,"Grid","Name"))
	if $get(pYKEY)="" set pYKEY = $$GetKey()
	
	set idLastKey = $translate($piece(pYKEY,",",$length(pYKEY,",")),"""")                         ; 2.01
	if idLastKey'="" {
		set idGridRow = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEROW",idLastKey,1))  ; 2x01
		if idGridRow'="" {
			set strYFELD = $$GetYFELD(YFORM,idGridRow)
		}
	}
	quit strYFELD
	
	
GetYFELD(pstrForm,pidGridRow,pblnGetOrig=$$$NO,&pobjOriginal,pblnGetSaved=$$$NO,&pobjSaved)
	;-------------------------------------------------------------------------------
	; Gets the "On Disk" version of the object [$sortbegin/$sortend delay writing
	; any changes back to disk] and then applies the updates in memory to find what
	; record would be saved or validated.
	;
	; Returns:	objYFELD     - current record
	;			pobjOriginal - (by Ref) original record (loaded data - before changes)
	;							Not defined if line is added from outside grid (eg button)
	;			pobjSaved    - (by Ref) saved record at disc
	;
	; History:
	; 15-Jul-2009	GRF		SR16669: clarify pidGridRow use
	; 29-Aug-2008	FIS		SR15828: return saved data at disc (at the time of saving)
	; 03-Feb-2006	RPW		SR14093: Use a variable for $h instead of recalculating it
	; 31-Oct-2005	JW		SR13207: Use original WWWDATEN record (2) as well
	; 18-Oct-2005	JW		SR11573: Get the class. Don't need key build.
	; 02-Jun-2005	GRF		Add call to WWWKEYBUILD
	; 28-Feb-2005	JW		Leave pobjOriginal undefined if not on disk (undefined)
	; 13-Jan-2005	JW		Data may not be on disk yet if adding a line.
	; 19-Nov-2004	Shobby	Created (SR10468)
	;-------------------------------------------------------------------------------
	new arrFields,dteHorolog,idCell,idClass,idColumn,idField,idForm,idKey
	new objYFELD,strGlobal
	
	set objYFELD   = ""
	set dteHorolog = +$horolog
	
	kill pobjOriginal	               // Start with undefined
	kill pobjSaved                     // SR15828
	
	; idKey = HeaderKeyList,idDataLine
	set idKey = $get(^WWWDATEN(YM,dteHorolog,YUSER,pstrForm,"V","REFERENCEKEY",pidGridRow,1)) ; FIXME : see GetYFELDEX FIXME above <GRF>
 	
	if (idKey'="") {
		set idClass   = $$$GRIDClass(pstrForm)
	    set strGlobal = "^"_idClass_"("""_$$$WWWYM(idClass)_""","_idKey_",1)"
		
		if $data(@strGlobal) {
			set objYFELD     = $get(@strGlobal)    ; objYFELD will be the up to date version
			set pobjOriginal = objYFELD            ; pobjOriginal is the on disk version
		} else {
			if $data(^WWWDATEN(YM,dteHorolog,YUSER,pstrForm,"V","YFELD",pidGridRow,1)) {
				set objYFELD     = $get(^WWWDATEN(YM,dteHorolog,YUSER,pstrForm,"V","YFELD",pidGridRow,1))
				set pblnGetOrig  = $$$NO	     // If line was added specifically
				set pblnGetSaved = $$$NO         // SR15828
			
			} else {
				set pobjOriginal = ""
			}
		}
		
		if (pblnGetSaved = $$$YES) {  //SR15828
			set pobjSaved = pobjOriginal
		}
		
		set idCell = "Y"_pidGridRow_"_"
		for {
			set idCell = $order(^WWWDATEN(YM,dteHorolog,YUSER,pstrForm,"V",idCell))
			quit:idCell=""
			quit:($piece($piece(idCell,"Y",2),"_",1)'=pidGridRow)
			
			set idColumn = $piece(idCell,"_",2)
			set idField  = $$$GetClassField(pstrForm,idColumn)
			
			if idField'="" {
				set $piece(objYFELD,Y,idField) = $get(^WWWDATEN(YM,dteHorolog,YUSER,pstrForm,"V",idCell,1))
				if pblnGetOrig set $piece(pobjOriginal,Y,idField) = $get(^WWWDATEN(YM,dteHorolog,YUSER,pstrForm,"V",idCell,2))
			}
		}
	}
	quit objYFELD
	
	
	; FIXME : bln arguments should default to $$$NO rather than null. <GRF>
Enabled(YVOR,YTXT,YHID,pYFELD,YTYP,pidKey="",pidYFORM="",pidYBBN="",pblnHidden="",pblnReadOnly="",pintNewFieldColor="",&pblnMandatory="",pblnKeepDefaults=$$$NO,&pstrNewFieldColor="",&pstrValue="",&pstrFontColor="")
	;------------------------------------------------------------------------------
	; Works out whether a field should be readonly.
	;
	; Called By :
	;	BodyFieldCell^COMGridEdit31Body		all 14 arguments (9-11 null : pblnHidden,pblnReadOnly,pintNewFieldColor)
	;	Buttons^COMGridEdit31Head			3 arguments       (2 & 3 null)
	;	OnBeforeFormat^FINAPInvLineDisplay	Arguments 2, 4, 5 (1 & 3 null)
	;	OnBeforeFormat^FINAPInvoice			Arguments 2, 4    (1 & 3 null)
	; 
	; Parameters:
	;	YTXT			objWWW122 or objWWW121 or null
	; 
	; Returns: blnEnabled
	;
	; History:
	; 26-Aug-2009	shobby	Font Color
	; 17-Jun-2009	GRF		Doco, show byRef arguments with "&"
	; 10-Jun-2009	GRF		SR16598: Authorisation Macros
	; 22-Jan-2007	heber	BR014794: fix byref parameter
	; xx-xxx-2007	shobby	BR014409: Made some changes and forgot to document them
	; 13-Apr-2007	shobby	BR014343:Added additional parameters, pblnHidden->pstrNewFieldColor.
	;							Parameters are passed through to CheckRules.
	; 27-Nov-2006	HeberB	BR014330: Check if field is disabled by customization rules (WWW122D2)
	; 08-Nov-2006	PO		SR15201: Enable Create and Modify Only capability
	; 04-Apr-2006	RW		Added hidden check
	; 16-Sep-2005	JW		SR13309 Check if inactive correctly
	; 13-Apr-2005	PO		SR11349 If current parent record in FC but parent form
	;						currently displaying base, disable currency fields
	; 17-Jan-2005	PO		SR10941 Add quotes around key parts if not quoted
	; 10-Dec-2004	PO		SR11192
	; 08-Dec-2004	PO		SR11075 Enable field based inactivity
	; 26-Nov-2004	Shobby	SR10468: Created
	;-------------------------------------------------------------------------------
	new blnEnabled,blnLineSaved,intIndex,strField,strIndirection,strName,strValue,YFELD
	
	$$$LogR("Enabled",pidYFORM_"<"_pidYBBN_"<"_pidKey_"<"_pblnHidden_","_pblnReadOnly_","_pblnMandatory_"<"_pintNewFieldColor_">"_$get(YHID)_">")
	
	set blnEnabled = $$$YES
	if $get(YHID)=1 {             ; FIXME : Should we be checking for YHID=2 as well?  <GRF>
		set blnEnabled = $$$NO
		
	} elseif ($get(^CacheTemp(YUSER,"Grid","Enabled"))=$$$NO) {
		set blnEnabled = $$$NO
		
	} elseif ($$$WWW120AuthorizationToModifyData(YVOR) = $$$EnumReadOnly) {
		set blnEnabled = $$$NO
		
	} elseif ($$$WWW122UserAccessForChange(YTXT) = $$$EnumReadOnly) {
		set blnEnabled = $$$NO
		
	} elseif ($$$WWW122DataInputType(YTXT)=15) {           ; Hidden
		set blnEnabled = $$$NO
		
	} elseif $data(pYFELD) { 
		if $$$WWW122FieldIsInactiveIfDataFiel(YTXT) {
			do IsInactive^WWWFORM9(YTXT,pYFELD,.YHID)
			if $get(YHID)=2 {
				set blnEnabled = $$$NO
			}
		}
	}
	
	$$$LogRx("CGEG-E1:"_blnEnabled)
	
	if blnEnabled {
		if ($get(YTYP)=8) && ($$$CurrencyToUse="Base") {   ; Currency Type
			set blnEnabled = $$$NO
			
		} elseif (pidKey '= "") {
			set blnLineSaved = $$IsSavedLine($get(^CacheTemp(YUSER,"Grid","Name")),pidKey)
			if blnLineSaved && ($$$WWW122UserAccessForChange(YTXT) = $$$EnumCreateOnly) {
				set blnEnabled = $$$NO
				
			} elseif 'blnLineSaved && ($$$WWW122UserAccessForChange(YTXT) = $$$EnumModifyOnly) {
				set blnEnabled = $$$NO
			}
		}
	}
	if (pidYFORM'="") && (pidYBBN'="") && $data(pYFELD)  {
		if blnEnabled{
			if (pidYFORM = "VARAtaLinha"){ ; SESDF-631
				do CheckRules^WWWFORMD(pidYFORM,pidYBBN,.pYFELD,.pblnHidden,.pblnReadOnly,
				                      .pintNewFieldColor,.pblnMandatory,pblnKeepDefaults,
				                      .pstrNewFieldColor,,,,,,,.pstrFontColor)  ;SR16704
			} else {
				do CheckRules^WWWFORMD(pidYFORM,pidYBBN,.pYFELD,.pblnHidden,.pblnReadOnly,
				                      .pintNewFieldColor,.pblnMandatory,pblnKeepDefaults,
				                      .pstrNewFieldColor,,,,,,.pstrValue,.pstrFontColor)  ;SR16704
			}
			if pblnReadOnly set blnEnabled = $$$NO
		
		} else {  ;16511	
			do CheckRules^WWWFORMD(pidYFORM,pidYBBN,pYFELD,pblnHidden,pblnReadOnly,
			                      pintNewFieldColor,pblnMandatory,pblnKeepDefaults,
			                      .pstrNewFieldColor,,,,,,pstrValue,.pstrFontColor)   ;SR16704
		}
	}
	quit blnEnabled
	
	
GetKey()   ; USE MACRO : $$$GRIDGetCurrentKey
	;-------------------------------------------------------------------------------
	; Get the value of the YKEY for the current row.
	;
	; Returns: YKEY   = HeaderKeyList,idDataLine  e.g. "REC0123",2.01
	;
	; History:
	; 07-Aug-2009	GRF		SR16787: standard variables and doco
	; 31-Oct-2006	JW		BR014279: Return null if there is no focus field (empty grid)
	; 02-Feb-2005	shobby	CodeCheck.
	; 02-Dec-2004	JW		SR11066 Created
	;-------------------------------------------------------------------------------
	new idCell,idGridRow,strDataKeys
 	
	set strDataKeys = ""
	set idCell = $get($$$WWWDATEN("FOCUSFIELD")) ; Macro override : based on ^CacheTemp rather than YFORM
	if idCell'="" {                                        ; e.g. Y2x01_5
		set $extract(idCell,1) = ""
		set idGridRow = $piece(idCell,"_",1)               ; 2x01
		set strDataKeys = $$$DEQUOTE($$GetYKEY(idGridRow)) ; "REC0123",2.01 => REC0123,2.01
	}
	quit strDataKeys
 	
 	
GoToFormWithFld(newForm,pField="",pPage="",pParam="")
	;-------------------------------------------------------------------------------
	; Go to a new form using the value of a field of the current row of the grid.
	;
	; Returns:
	;
	; History:
	; 14-Aug-2006	JW		SR14730: Added popup param
	; 02-Feb-2005	shobby	CodeCheck.
	; 06-Dec-2004	JW		SR10541: Created
	;-------------------------------------------------------------------------------
	new focusField,value
	
	set focusField = $get($$$WWWDATEN("FOCUSFIELD"))    ; Macro override : based on ^CacheTemp rather than YFORM
	
	set $piece(focusField,"_",2) = pField
	set value=$get($$$WWWDATEN(focusField,1))           ; Macro override : based on ^CacheTemp rather than YFORM
	
	do GoToForm(newForm,value,$$$NO,pPage,pParam)
	quit
	
	
GoToForm(pnewForm,pKey,pblnPopup=$$$NO,pPage="",pParam="")
	;-------------------------------------------------------------------------------
	; Go to a new form from the grid. Either use the YKEY of the current row of the grid,
	; or a specified key.
	;
	; Params:	pstrForm - Form to go to.
	;			pKey - Key to use
	;			pPage,pParam - page and paramaters
	;
	; Returns:	nil
	;
	; History:
	; 08-Aug-2006	JW		SR14730: Simplified. Added popup
	; 06-Dec-2004	JW		SR10541: Split into more functions. 
	; 02-Dec-2004	JW		SR11066: Created
	;-------------------------------------------------------------------------------
	if $get(pKey)="" {
		set pKey = $$GetKey()
	}
	
	if pblnPopup {
		set YBACK=""
		set %("VAR","YUSER") = $$GetChildUser^WWWUSER(YUSER)
	} else {
		; replace grid form in YBACK with main form
		set $piece(YBACK,YKOMMA,$length(YBACK,YKOMMA)-1) = $get(^CacheTemp(YUSER,"Grid","Container"))
	}
	do LoadFormNow(pnewForm,pKey,pPage,pParam)
	
	// Don't Display the footer twice
	set YNOFOOT = 1                   // FIXME: Is there an extra call to WWWFORM?
	quit
	
	
ReloadForm(pParam="")
	;-------------------------------------------------------------------------------
	; Reload the current form
	;
	; Returns:
	;
	; History:
	; 06-Dec-2004	JW		SR10541: Created
	;-------------------------------------------------------------------------------
	new form,lenBack
	; remove grid form from YBACK
	set lenBack = $length(YBACK,YKOMMA)
	set $piece(YBACK,YKOMMA,lenBack-1,lenBack) = ""
	
	set form = $get(^CacheTemp(YUSER,"Grid","Container"))
	
	do LoadFormNow(form,YKEY,YSEITE,pParam)
	quit
	
	
LoadFormNow(pForm,pidKey,pPage,pParam,pYUSER) private
	;-------------------------------------------------------------------------------
	; Update Variables and load form
	;
	; Returns:
	;
	; History:
	; 06-Dec-2004	JW		SR10541: Created
	;-------------------------------------------------------------------------------
	set %("VAR","YBACK") = YBACK
	if $get(pParam)'="" set %("VAR","YPARA")  = pParam
	if $get(pPage)'=""  set %("VAR","YSEITE") = pPage
	if $get(pYUSER)'="" set %("VAR","YUSER")  = pYUSER
	set %("VAR","YKEY")  = pidKey
	set %("VAR","YFORM") = pForm
	
	do ^WWWFORM
	quit
	
	
UpdateHeaderField(pstrField,pstrValue="",pFieldType="")
	;-------------------------------------------------------------------------------
	; Call PopulateDataField in a way that people think the grid is doing the work.
	; It pulls apart pstrField, ie if pstrField is "D17" then it says it's a data field
	; at position 17 in the form definition.
	;
	; Returns:
	;
	; History:
	; 30-Mar-2010	shobby	SR16606: Get the field to change colour $$$NO->$$$YES
	; 17-Jun-2005	PO		No longer adjusting value passed into PopulateDataFields,
	;							work now done by PopulateDataFields.
	; 14-Jun-2005	PO		Used equality test instead of case statement on CurrencyToUse
	; 17-Mar-2005	PO		SR11349 Support FC
	; 16-Feb-2005	RobertW	Put some value checking in place.
	; 28-Dec-2004	RobertW	SR10061: Created
	;-------------------------------------------------------------------------------
	new strContainer,strType,intField
	
	if $get(pstrField)'="" {
		set strContainer = $get(^CacheTemp(YUSER,"Grid","Container"))
		if strContainer="" set strContainer = $get(YFORM)
		
		set strType  = $extract(pstrField,1)
		set intField = $extract(pstrField,2,$length(pstrField))
		
		; To speed things up may want to pass in CurrencyToUse value since to determine
		; which currency to use involves two global accesses every time.
		
		do PopulateDataField^COMUtils(strContainer,intField,pstrValue,strType,,$$$YES)  ;SR16606
	}
	quit
	
	
GetLineId(YKEY,pYFORM="")
	;-------------------------------------------------------------------------------
	; NOTE :
	;    ReferenceRow^COMGridEdit31Interface returns same but passes idDataLine
	;    instead of "HeaderKeyList,idDataLine".
	;
	;
	; Returns: idGridRow (e.g. 2x01 or 3)
	;
	; History:
	; 15-Jul-2009	GRF		SR16669: clarify idGridRow use
	; 19-Oct-2005	JW		SR11573: Use last piece, not 2nd.
	; 24-Mar-2005	shobby	Get the ID of the line in the grid from its YKEY
	;-------------------------------------------------------------------------------
	new idGridRow,idLastKey,YFORM
	
	set idGridRow = ""
	if $get(pYFORM)="" {   ; FIXME : WWWDATEN Macro uses ^CacheTemp(YUSER,"Grid","Name") not YFORM - pYFORM & this block not effective <GRF>
		set YFORM = $get(^CacheTemp(YUSER,"Grid","Name"))
	} else {
		set YFORM = pYFORM
	}
	set idLastKey = $$$KEYMAX(YKEY)    // SR11573
	if idLastKey'="" {
		set idGridRow = $get($$$WWWDATEN("REFERENCEROW",idLastKey,1))    ; Macro override : based on ^CacheTemp rather than YFORM
	}
	quit idGridRow
	
	
GetLineIds(&parrLines) ; FIXME : Poor naming differentiation for tag <GRF>
	;-------------------------------------------------------------------------------
	; Returns (ByRef) : Array based on "2x01" form of grid row identifiers
	;
	; History:
	; 15-Jul-2009	GRF		SR16669: clarify idGridRow use
	;-------------------------------------------------------------------------------
	new idGridRow
	
	set idGridRow = ""
	for {
		set idGridRow = $order($$$WWWDATEN("REFERENCEKEY",idGridRow))    ; Macro override : based on ^CacheTemp rather than YFORM
		quit:idGridRow=""
		
		set parrLines(idGridRow) = ""
	}
	quit
	
	
GridExists()
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; xx-Jan-2005	JW		Created
	;-------------------------------------------------------------------------------
	quit ($get(^CacheTemp(YUSER,"Grid","Container"))'="")
	
	
UpdateContainer(pstrFld="",blnUpdateYFELD=$$$YES)
	;-------------------------------------------------------------------------------
	; Update the header YFELD and YMFELD.
	; This function is called After: OnBlur,OnAfterDataFields,OnAfterDelete.
	; 
	; Params:	pstrFld - reference to which class field has just changed (if any)
	;			blnUpdateYFELD - whether to update YFELD or not
	; 
	; Returns: nil
	;
	; History:
	; 08-Apr-2010	GRF		SR17177: objGrid should be arrGrid
	; 12-Dec-2007	GRF		i=>loop
	; 10-Apr-2006	JW		Moved check inside this routine
	; 06-Oct-2005	JW		SR11573: Call CallEvent
	; 09-May-2005	JW		SR12309: Added param blnUpdateYFELD
	; 22-Mar-2005	PO		SR11349: FC support, pass through field type
	; 16-Mar-2005	JW		SR11916: Created
	;-------------------------------------------------------------------------------
	quit:$get(^CacheTemp(YUSER,"Grid","DontUpdateContainer"))        ; nothing to do
	
	new arrGrid,headYFELDOld,headYMFELDOld,headYFELD,headYMFELD,loop,strName,strOldName
	
	do GetGridContents(.arrGrid)
	set headYFELD  = $$GetYFELDContainer()
	set headYMFELD = $$GetYMFELDContainer()
	; TODO: set arrGrid = headYFELD ; so detail does not need to be retrieved later
	
	set headYFELDOld  = headYFELD
	set headYMFELDOld = headYMFELD
	
	set strName = $get(^CacheTemp(YUSER,"Grid","Name"))      ; e.g. INRECSummary
	
	if strName'="" {
		do CalculatedFields(.arrGrid,pstrFld,.headYFELD,.headYMFELD)
		$$$CallEvent("do UpdateContainer^"_strName_"(pstrFld,.arrGrid,.headYFELD,.headYMFELD)","Container") 
		
	} else {
		set headYFELD  = $get(YFELD)						//
		set headYMFELD = $get(YMFELD)						//
	}														// <-- FIXME : Is this code required? JW
	set strName = $get(^CacheTemp(YUSER,"Grid","Container"))	//
	if strName="" set strName = YFORM							//
	
	if (blnUpdateYFELD) && (headYFELD'=headYFELDOld) {
		for loop=1:1:$length(headYFELD,Y) {
			if $piece(headYFELD,Y,loop)'=$piece(headYFELDOld,Y,loop) {
				set strOldName = strName
				set strName    = $$$WWW120ClassUsedInForm($get(^WWW120(0,strName,1)))
				if strName = "" set strName = strOldName
				do UpdateHeaderField("D"_loop,$piece(headYFELD,Y,loop),$$$WWW003InputType($get(^WWW003(0,strName,loop,1))))
			}
		}
	}
	
	if headYMFELD'=headYMFELDOld {
		for loop=1:1:$length(headYMFELD,Y) {
			if $piece(headYMFELD,Y,loop)'=$piece(headYMFELDOld,Y,loop) {
				do UpdateHeaderField("M"_loop,$piece(headYMFELD,Y,loop),$$GetFieldType^COMUtilClass(strName,loop))
			}
		}
	}
	// do SetGridContents - Maybe do this in the future for callbacks
	quit
	
	
CalculatedFields(&parrGrid,pstrFld,pheadYFELD,pheadYMFELD)
	;-------------------------------------------------------------------------------
	; Calculates totals for 'bound' fields in the header record and updates those
	; fields appropriately.
	; 
	; Called By : UpdateContainer^COMGridEdit31G
	; 
	; Returns:
	;
	; Hi]]><![CDATA[story:
	; 08-Apr-2010	GRF		SR17177: pobjGrid should be parrGrid (with &)
	; 18-Oct-2005	PO		Newed strType,intFormField
	; 30-Sep-2005	JW		SR11573: Added phead params. Moved from COMGridEdit31S
	; 18-Nov-2004	Shobby	SR10468: Created
	;-------------------------------------------------------------------------------
	new arrResults,fltTotal,idField,intFormField,strField,strType
	
	set idField = ""
	for {
		set idField = $order(^CacheTemp(YUSER,"Grid","Update",idField))
		quit:idField=""
		
		set strField = $get(^CacheTemp(YUSER,"Grid","Update",idField))
		if strField'="" {
			set fltTotal = $$Sum(.parrGrid,idField)
			set fltTotal = $justify(fltTotal,1,2)
			set arrResults(idField) = strField_Y_fltTotal
		}
	}
	set idField = ""
	for {
		set idField = $order(^CacheTemp(YUSER,"Grid","Calculated",idField))
		quit:idField=""
		
		set strField = $get(^CacheTemp(YUSER,"Grid","Calculated",idField))
		
		if strField'="" {
			set strField(1) = $piece(idField,"-",1)
			set strField(2) = $piece(idField,"-",2)
			if '$data(arrResults(strField(1))) {
				set arrResults(strField(1)) = Y_$$Sum(.parrGrid,strField(1))
			}
			if '$data(arrResults(strField(2))) {
				set arrResults(strField(2)) = Y_$$Sum(.parrGrid,strField(2))
			}
			set fltTotal = $justify($$$FCSub($piece(arrResults(strField(1)),Y,2),$piece(arrResults(strField(2)),Y,2)),1,2)
			set arrResults(strField) = strField_Y_fltTotal
		}
	}
	
	set idField = ""
	for {
		set idField = $order(arrResults(idField))
		quit:idField=""
		
		set strField = $piece(arrResults(idField),Y,1)
		if strField'="" {
			;Only display results that have a field set up to send to.
			;Some results may just have been used to calculate other fields.
			/*
			set %TXT(1)=$get(%TXT(1))_$get(arrResults(YBBN))
			set YRETVAL=$get(YRETVAL)_$get(arrResults(YBBN))
			do UpdateContainerBackEnd(arrResults(YBBN))
			*/
			
			set strType      = $extract(strField,1)
			set intFormField = $extract(strField,2,999)
			if strType="D" {
				set $piece(pheadYFELD,Y,intFormField)  = $piece(arrResults(idField),Y,2)
				
			} else {
				set $piece(pheadYMFELD,Y,intFormField) = $piece(arrResults(idField),Y,2)
			}
		}
	}
	quit
	
	
Sum(&parrGrid,pidField)
	;/*------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 08-Apr-2010	GRF		SR17177: pobjGrid should be parrGrid (with &)
	; 30-Sep-2005	JW		SR11573: Rewrote to use pobjGrid. Moved from COMGridEdit31S
	; 31-Jan-2005	Shobby	Code Check
	;-----------------------------------------------------------------------------*/
	new fltTotal,query,strKey
	
	set fltTotal = 0
	set pidField = $$$GetClassField($get(^CacheTemp(YUSER,"Grid","Name")),pidField)
	set query    = "parrGrid"
	for {
		set query = $query(@query)
		quit:query=""
		
		set fltTotal = $$$FCAdd(fltTotal,$piece(@query,Y,pidField))
	}
	quit fltTotal
	
	
UpdateManualField(pROW,pCOL,pVALUE,pYFORM)
	;-------------------------------------------------------------------------------
	; Update a manual field in the grid
	;
	; Params:
	;  pROW		Grid RowId
	;  pCOL		Grid ColId
	;  pValue	Value to set in selected cell
	;  
	; Returns:
	;
	; History:
	; 03-Oct-2008	HQN		SR15893: Added params details
	; 24-Nov-2005	JW		SR13883: Store formatted value in REFERENCEVALUE.
	; 19-Oct-2005	JW		SR11573: Update JS only if displayed. Update WWWDATEN.
	; 08-Sep-2005	shobby	SR13455:Don't write when redrawing form, YHTMFORM is
	;							not defined.
	; 29-Jun-2005	JW		Added method header
	;-------------------------------------------------------------------------------
	new idField,refValue
	
	$$$LogR("UpdateManualField",$get(pROW)_","_$get(pCOL)_":"_$get(pVALUE)_":"_$get(pYFORM)_"<")
	
	quit:($get(pROW)="")||($get(pCOL)="")
	
	if $get(pYFORM) = "" {
		set pYFORM = $$$GRIDName
	}
	set idField = "Y"_pROW_"_"_pCOL
	set refValue = $$Format(pCOL,pVALUE)

	set ^WWWDATEN(YM,+$horolog,YUSER,pYFORM,"V",idField,1) = pVALUE
	set ^WWWDATEN(YM,+$horolog,YUSER,pYFORM,"V","REFERENCEVALUE",idField,1) = refValue
	
	if $$$DisplayedRecord(pROW,pYFORM) {
		write "cgeUpdateValue('td"_idField_"','"_refValue_"');"
	}
	quit
	
	
Format(pCOL,pVALUE)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 07-Jan-2011	GRF		SR17579: Use explicit tag for WWWTR calls
	; 05-Jan-2010	GRF		SR15525: Call to $$Convert^WWWTR rather than $$^WWWTR
	; 05-Jul-2007	shobby	SR14917: Consider customisation of Input Type
	; 29-Jun-2005	JW		SR10412: Added space
	; 14-Mar-2005	PO		SR11349 support FC
	;-------------------------------------------------------------------------------
	new strValue,YTXT,YTYP
	
	set YTXT = $$Get^WWW122($get(^CacheTemp(YUSER,"Grid","Name")),pCOL)     ;SR14917
	set YTYP = $$$WWW122InputType(YTXT)                                     ;SR14917
	if (YTYP=8) && $$$AmountIsFC(pVALUE) && ($$$CurrencyToUse="Foreign") {
		set pVALUE=$$$FCAmount(pVALUE)
	}
	set strValue = $$GetLiteral^WWWTR(YTYP,pVALUE)
	if strValue="" set strValue = "&nbsp;"
	
	quit strValue
	
	
IsSavedLine(pidForm,pidKey="")
	;-------------------------------------------------------------------------------
	; Whether the current line is a saved record or not.
	;
	; Params:	pidForm - grid form
	;			pidKey - key of line
	;
	; ByRefs:
	;
	; Returns:	boolean
	;
	; History:
	; 26-Nov-2009	DWR		SR17057: rare occasion error <subscript> occuring, check
	; 							for form name before checking is $data in calss
	; 08-Nov-2006	PO		SR15201: Enable ability to determine whether particular line is saved.
	; 25-Oct-2006	JW		BR014279: Created
	;-------------------------------------------------------------------------------
	new blnSaved,idClass,strKey
	
	set blnSaved = $$$NO
	
	if pidKey = "" {
		set strKey = $$GetKey()
	} else {
		set strKey = pidKey
	}
	if (strKey'="") && (pidForm'="") {   ; SR17057
		set idClass = $$$GRIDClass(pidForm)
		if $data($$$DATA(idClass,strKey)) {
			set blnSaved = $$$YES
		}
	}
	quit blnSaved
	
	
SwitchReadOnly(pidLine,pidClassFld,pblnDisabled)
	;-------------------------------------------------------------------------------
	; Switch between read only and editable
	;
	; Params:
	; pidLine      - The id (key) of the Edit Grid Line
	; pidClassFld  - The class field id of the Edit Grid field  - what if manual field?
	; pblnDisabled - What state to set the field to
	;					$$$YES : Read Only
	;					$$$NO  : Editable
	;
	; Returns: Nothing
	;
	; History:
	; 01-Apr-2009	GRF		Clarify *CLASS* Field # & Disabled switch
	; 21-Jan-2009	HQN		Corrected argument passing to SwitchReadOnly, 
	;							JS function incorrectly handled rows and columns
	; 21-Dec-2006	PO		SR15351: Created
	;-------------------------------------------------------------------------------
	new idCol,idRow
	
	set idRow = $$GetLineId(pidLine)
	set idCol = $$$GetFormField($$$GRIDName,pidClassFld)
	write "SwitchReadOnly("_idRow_","_idCol_","_pblnDisabled_",'"_YGRIDWHITE_"','"_YGRIDGRAY_"');"
	
	quit
	
]]></Routine>
</Export>