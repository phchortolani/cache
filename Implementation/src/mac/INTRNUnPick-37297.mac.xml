<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INTRNUnPick" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INTRNUnPick
	;              * * * * *   Associated with form INTFR   * * * * *
	
#include INConst
#include COMSYS
	
CanUnPick(pidTFR)
	;-------------------------------------------------------------------------------
	; Determine whether Transfer Order can be UnPicked.
	; Reasons for preventing firming from being allowed
	;  - No key / record
	;  - Transfer Order status is not Picked
	;
	; Params:
	; pidTFR - Key of header record
	;
	; ByRefs: None
	;
	; Returns: Nothing (changes @NM variable YQ)
	;
	; History:
	; 27-Apr-2011	PPP		SR17726: Added the IN00423 message
	; 15-Apr-2011	PPP		SR17727: Created
	;-------------------------------------------------------------------------------
	new objTFR,strStatus
	
	set strStatus = $$$OK
		
	if '$$$NoKey(pidTFR) {
		set objTFR = $get(^INTFR(0,pidTFR,1))
		
		if ((+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) ||
		   (+$$$WWWClientParamCoreChangesSESPE($get(^WWWClientParam(YM,YM,1)))) ||
		   (+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1))))) {
			if ($$$INTFRFREE6(objTFR) '= ""){
				set strStatus = $$$MakeStatus("3435")
			}
		}
		
		if $case($$$INTFRStatus(objTFR),
	                    $$$EnumINTFRSTATUSSent    :$$$YES,
	                    $$$EnumINTFRSTATUSReceived:$$$YES,
	                                              :$$$NO    ) {
			set strStatus = $$$MakeStatus("IN00424")       ; "Cannot perform action as Transfer has been sent."
	    
	    } elseif $$$INTFRStatus(objTFR) = $$$EnumINTFRSTATUSFirmed {
			if '$data(^INTFRPickLine(0,pidTFR)) {
				set strStatus = $listbuild("IN00422")      ; "Pick list needs to be printed.."
			}
			
		} else {
			set strStatus = $listbuild("IN00423")          ; "Transfer not Firmed."			
		}
	
	} else {
		set strStatus = $listbuild(32072)                  ; "Please select a data record first."
	}
	
	$$$YQHandler(strStatus)
	quit
	
	
UnPick(pidTFR,pblnReloadForm=$$$YES)
  	;-------------------------------------------------------------------------------
	; Determine whether UnPicking can be performed, if so perform UnPick.
	;
	; Params:
	; pidTFR         - Key of header record
	; pblnReloadForm - $$$YES then reload form else do not
	;
	; ByRefs: None
	;
	; Returns: strStatus - $$$OK if all successful, otherwise error message or $$$NO
	;
	; History:
	; 15-Apr-2011	PPP		SR17727: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$NO
	
	do CanUnPick(pidTFR)
	
	if YQ = $$$YQEnable {
		set strStatus = $$Transaction^COMTransaction("UnPickTxn^INTRNUnPick("""_pidTFR_""")",1)
		
		if $$$ISOK(strStatus) && pblnReloadForm {
			set YSEITE = 1 // FIXME: This does not even fix all cases where page two is displayed.
			do ReloadForm^COMUtilForm()
		}
	} else {
		do ReturnError^COMUtils($$$YQMessage)
	}
	quit strStatus
	
	
UnPickTxn(pidTFR)
	;-------------------------------------------------------------------------------
	; 1. Remove Create Demands and Supplies
	; 2. Update Status details on Header.
	; 
	; ----------
	; Params:
	; 	pidTFR - Key of header record
	;
	; Returns: strStatus - $$$OK if all successful, otherwise error message
	;
	; History:
	; 28-Apr-2011	PPP		SR17727/2: Re-Create Demands & Supplies for the Transfer
	; 15-Apr-2011	PPP		SR17727: Created
	;-------------------------------------------------------------------------------
	new idLine,objTFR,strStatus
	
	set strStatus = $$$OK
	set objTFR    = $get(^INTFR(0,pidTFR,1))
	
	if $$$ISOK(strStatus) {
		set $$$INTFRPickListPrinted(objTFR) = ""
		set strStatus = $$$Save("INTFR",pidTFR,objTFR,$$$YES)
		
		//Only if Pick Lines Exist
		if $$$ISOK(strStatus) && ($$$INTFRStatus(objTFR) = $$$EnumINTFRSTATUSFirmed) && $data(^INTFRPickLine(0,pidTFR)) {
			set idLine=""
			for {
				quit:$$$ISERR(strStatus)
				set idLine = $order(^INTFRPickLine(0,pidTFR,idLine))
				quit:idLine=""
			
		 		//*** NEED TO REMOVE ALL RESERVED STOCK  alDRP.dPlannedMovement
				set strStatus = $$OnDelete^INTRNPickLine(pidTFR_$$$COMMA_idLine)
			
				if $$$ISOK(strStatus) {
					set strStatus = $$^WWWKILL("INTFRPickLine",pidTFR_$$$COMMA_idLine)
				}
			}
		}
		
		if $$$ISOK(strStatus) {
			//SR17727/2 Re-Create Demands & Supplies for the Transfer
			set strStatus = $$CreateDemandAndSupply^INTRNDemand(pidTFR)
		}
	}
	quit strStatus
	
]]></Routine>
</Export>