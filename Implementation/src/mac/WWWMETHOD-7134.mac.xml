<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWMETHOD" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWMETHOD ;WWWMETHOD;DT; CHANGE METHODS;
	;
	;/------------------------------------------------------------------\
	;| Description of Function :
	;|		 CHANGE METHODS
	;|
	;| Inputs : 
	;|
	;|
	;| ByRef :
	;|
	;|
	;| Returns :
	;|
	;|
	;| History :
	;|
	;| DT	 CHANGE METHODS
	;|
	;\------------------------------------------------------------------/
	;
	NEW I,VERZ,LW,VERZ1,%DEV,DELIM,OBJECT,SPRACHE,DESCRI,DESKRI,CAPTION,NOCOMPILE,YDATA
	DO ^WWWVAR
	SET SPRACHE="EN"
	SET SP=$CHAR(9)
	SET HTML=0
	SET NOCOMPILE=1  ;KEIN KOMPILE ;no 
	SET LW="ATNET.CDL"
	SET VERZ=""
	SET VERZ1=""
	IF LW'="" IF '$FIND(LW,":") DO
	. SET VERZ=$TRANSLATE($PIECE($GET(^WWW012(0,YM,1)),Y,45),"\Ö/",$CHAR(92)_$CHAR(92)_$CHAR(92))
	. IF $EXTRACT(VERZ,$LENGTH(VERZ))'=$CHAR(92) SET VERZ=VERZ_$CHAR(92)
	. SET VERZ1=$PIECE($GET(^WWW012(0,YM,1)),Y,46)
	. IF VERZ1'="" IF $EXTRACT(VERZ1,$LENGTH(VERZ1))'="/" SET VERZ1=VERZ1_"/"
	. IF VERZ1'="" SET VERZ1=VERZ1_LW
	. QUIT
	SET LW=VERZ_LW
	SET LW=$TRANSLATE(LW,"\Ö/",$CHAR(92)_$CHAR(92)_$CHAR(92))
	IF LW'="" DO
	. IF HTML=1 IF VERZ1'="" DO
	. . DO ^WWWBACK
	. . WRITE "<BR>"
	. . WRITE " <A HREF="_""""_"ftp://"_VERZ1_""""_">"
	. . WRITE YCR,"<IMG SRC="_""""_YGIF_"docu.gif"_""""_" TITLE="_""""_VERZ1_""""_" border=0>"
	. . WRITE VERZ1,YCR
	. . WRITE "</A>"
	. . QUIT
	. QUIT
	SET YXCHAR=""
	FOR I=128:1:255 SET YXCHAR=YXCHAR_$CHAR(I)
	SET VORGX="" FOR  SET VORGX=$ORDER(^ROUTINE(VORGX)) QUIT:VORGX=""  IF $EXTRACT(VORGX,1,3)="APM" IF $EXTRACT(VORGX)'="%" DO
	. ;I $E(VORGX)'="W" I $G(^ROUTINE(VORGX,0,"SIZE"))>3300 Q
	. IF VORGX="WWW001OZ" QUIT
	. IF VORGX="WWWSMTP" QUIT
	. IF $EXTRACT(VORGX,1,6)="WWWANS" QUIT
	. IF $EXTRACT(VORGX,1,7)="WWWBAS6" QUIT
	. QUIT:VORGX="WWWMETHOD"
	. NEW Q
	. SET Q=0
	. ;FOR YI=1:1:7 IF $FIND($GET(^ROUTINE(VORGX,0,YI)),"InterSystems") SET Q=1
	. ;FOR YI=1:1:7 IF $FIND($GET(^ROUTINE(VORGX,0,YI)),"WebLink") SET Q=1
	. QUIT:Q=1
	. NEW N,PARALIST,YII
	. SET %DEV=$$^WWWDEV(LW)
	. ;SET %DEV=""  ;TEST
	. IF %DEV'="" USE %DEV
	. ;
	. DO   ;GGF HEADER
	. . ;
	. . WRITE "/***********************************************************************\"
	. . WRITE YCR
	. . WRITE "|         File: AtNet.cdl                                               |"
	. . WRITE YCR
	. . WRITE "|       Author: @net Manager                                            |"
	. . WRITE YCR
	. . WRITE "|         Date: "_$$^WWWDATE($HOROLOG)_" "_$$^WWWTIME($HOROLOG)_"                                     |"
	. . WRITE YCR
	. . WRITE "|  Description: This File was generated by @net Manager                 |"
	. . WRITE YCR
	. . WRITE "\***********************************************************************/"
	. . WRITE YCR
	. . QUIT
	. WRITE YCR
	. WRITE "class User.ME"_VORGX
	. WRITE YCR
	. WRITE "{"
	. WRITE YCR
	. WRITE YCR,SP,"abstract; ",YCR
	. WRITE SP,"description = "_""""_"User.ME"_VORGX_""""_";",YCR
	. SET OFFSET=""
	. FOR  SET OFFSET=$ORDER(^ROUTINE(VORGX,0,OFFSET)) QUIT:OFFSET=""  IF +OFFSET'=0 QUIT:$GET(^ROUTINE(VORGX,0,OFFSET))=""  DO  QUIT:OFFSET=""
	. . ;
	. . SET PARALIST=""  ;PARAMETERLIST
	. . SET PARALIST=$PIECE($GET(^ROUTINE(VORGX,0,OFFSET)),";",1)
	. . QUIT:$EXTRACT($TRANSLATE(PARALIST," ;"))=""
	. . SET NAME=""
	. . IF OFFSET<2 SET NAME=VORGX
	. . IF $EXTRACT(PARALIST)'=" " SET NAME=$PIECE($PIECE(PARALIST," ",1),"(",1)  ;LABLE
	. . QUIT:NAME=""
	. . SET PARALIST=$PIECE($PIECE(PARALIST,"(",2,99),")",1,99)
	. . IF PARALIST'="" DO
	. . . FOR  QUIT:$EXTRACT($REVERSE(PARALIST))'=" "  SET PARALIST=$REVERSE($EXTRACT($REVERSE(PARALIST),2,999))
	. . . IF $EXTRACT($REVERSE(PARALIST))=")" SET PARALIST=$REVERSE($EXTRACT($REVERSE(PARALIST),2,999))
	. . . SET PARALIST(1)=PARALIST
	. . . SET PARALIST=""
	. . . FOR YII=1:1 QUIT:$PIECE(PARALIST(1),",",YII)=""  DO
	. . . . SET PARALIST=PARALIST_$PIECE(PARALIST(1),",",YII)_":%String"_","
	. . . . QUIT
	. . . IF $EXTRACT($REVERSE(PARALIST))="," SET PARALIST=$REVERSE($EXTRACT($REVERSE(PARALIST),2,999))
	. . . QUIT
	. . IF PARALIST'="" SET PARALIST="("_PARALIST_")"
	. . SET OFFSET=$$METHOD(VORGX,NAME,PARALIST,+$GET(OFFSET))
	. . QUIT
	. ;          
	. WRITE YCR
	. WRITE "}"
	. WRITE YCR
	. ;
	. IF %DEV'="" CLOSE %DEV DO OPEN^WWWSTART
	. ;
	. IF HTML=1 DO
	. . WRITE "<BR>"
	. . WRITE YCR,"<TABLE BORDER=0><TR><TD WIDTH=250>"
	. . WRITE "<FONT SIZE=2>"
	. . IF '$FIND($ZVERSION,"4.0") DO
	. . . WRITE "<TEXTAREA"
	. . . ;IF YHID=2 WRITE " readonly"
	. . . WRITE YCR," NAME="_""""_"CACHEARCITECT"_""""_" ROWS="_""""_20_""""_" COLS="_""""_70_""""_" WRAP="_""""_"physical"_""""
	. . . WRITE ">"
	. . . QUIT
	. . QUIT
	. DO LoadFile^%apiOBJ(LW,"c")  ;laden ;charge 
	. IF HTML=1 DO 
	. . WRITE "</TEXTAREA>"
	. . QUIT
	. IF HTML=1 DO
	. . WRITE "</FONT>"
	. . WRITE "</TD></TR></TABLE>"
	. . QUIT
	. QUIT
	QUIT
	
EXEC ;   
	WRITE "START? "
	READ A
	QUIT:A'="J"
	SET OK=1  ;GGF OK=1 ZUM SPEICHERN ;Save 
	DO
	. DO ^WWWVAR
	. NEW YI,YII,FORM,FORM1,FELD,AX,A
	. SET FORM="" FOR  SET FORM=$ORDER(^WWW120(0,FORM)) QUIT:FORM=""  DO
	. . QUIT:$EXTRACT(FORM,1,3)'="WWW"
	. . SET FORM1=$GET(^WWW120(0,FORM,1))
	. . FOR YI(1)=1:1:300 IF $PIECE(FORM1,Y,YI(1))'="" DO
	. . . SET A=$PIECE(FORM1,Y,YI(1))
	. . . IF $EXTRACT(A,1,2)="D "!($EXTRACT(A,1,3)="DO ")!($FIND(A,"$$"))!($FIND(A,"^")) DO
	. . . . WRITE !,"F ",FORM," ",A_"|"
	. . . . DO EXEC1
	. . . . WRITE !,"- ",A_"|"
	. . . . IF OK=1 SET $PIECE(^WWW120(0,FORM,1),Y,YI(1))=A
	. . . . QUIT
	. . . QUIT
	. . SET NR="" FOR  SET NR=$ORDER(^WWW121(0,FORM,NR)) QUIT:NR=""  DO
	. . . SET FORM1=$GET(^WWW121(0,FORM,NR,1))
	. . . FOR YI(1)=1:1:300 IF $PIECE(FORM1,Y,YI(1))'="" DO
	. . . . SET A=$PIECE(FORM1,Y,YI(1))
	. . . . IF $EXTRACT(A,1,2)="D "!($EXTRACT(A,1,3)="DO ")!($FIND(A,"$$"))!($FIND(A,"^")) DO
	. . . . . WRITE !,"P ",FORM," ",A_"|"
	. . . . . DO EXEC1
	. . . . . WRITE !,"- ",A_"|"
	. . . . . IF OK=1 SET $PIECE(^WWW121(0,FORM,NR,1),Y,YI(1))=A
	. . . . . QUIT
	. . . . QUIT
	. . . QUIT
	. . SET NR="" FOR  SET NR=$ORDER(^WWW122(0,FORM,NR)) QUIT:NR=""  DO
	. . . SET FORM1=$GET(^WWW122(0,FORM,NR,1))
	. . . FOR YI(1)=1:1:300 IF $PIECE(FORM1,Y,YI(1))'="" DO
	. . . . SET A=$PIECE(FORM1,Y,YI(1))
	. . . . IF $EXTRACT(A,1,2)="D "!($EXTRACT(A,1,3)="DO ")!($FIND(A,"$$"))!($FIND(A,"^")) DO
	. . . . . WRITE !,"D ",FORM," ",A_"|"
	. . . . . DO EXEC1
	. . . . . WRITE !,"- ",A_"|"
	. . . . . IF OK=1 SET $PIECE(^WWW122(0,FORM,NR,1),Y,YI(1))=A
	. . . . . QUIT
	. . . . QUIT
	. . . QUIT
	. . SET SPR="" FOR  SET SPR=$ORDER(^WWW124(0,FORM,SPR)) QUIT:SPR=""  SET NR="" FOR  SET NR=$ORDER(^WWW124(0,FORM,SPR,NR)) QUIT:NR=""  DO
	. . . SET FORM1=$GET(^WWW124(0,FORM,SPR,NR,1))
	. . . FOR YI(1)=1:1:100 IF $PIECE(FORM1,Y,YI(1))'="" DO
	. . . . SET A=$PIECE(FORM1,Y,YI(1))
	. . . . IF $EXTRACT(A,1,2)="D "!($EXTRACT(A,1,3)="DO ")!($FIND(A,"$$"))!($FIND(A,"^")) DO
	. . . . . WRITE !,"B ",FORM," ",A_"|"
	. . . . . DO EXEC1
	. . . . . WRITE !,"- ",A_"|"
	. . . . . IF OK=1 SET $PIECE(^WWW124(0,FORM,SPR,NR,1),Y,YI(1))=A
	
	QUIT
	
EXEC1 ;
	quit:$FIND(A,"##")
	NEW AX,A1,A2,YI
	SET A1=""
	IF $EXTRACT(A)="#" SET A1="#" SET A=$EXTRACT(A,2,999)
	IF $EXTRACT(A)="@" SET A1="@" SET A=$EXTRACT(A,2,999)
	SET A2="" IF $FIND(A,";") SET A2=$REVERSE($PIECE($REVERSE(A),";",1))
	SET A=$PIECE(A,";",1)
	SET A=$REVERSE(A)
	FOR  QUIT:$EXTRACT(A)'=" "  SET A=$EXTRACT(A,2,999)
	SET A=$REVERSE(A)
	FOR I=2:1:10 QUIT:$PIECE(A,"D ",I)=""  DO
	. SET AX=$PIECE(A,"D ",I)   ; DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. QUIT:$EXTRACT(AX)=" "
	. IF $FIND(AX,",") IF '$FIND(AX,"(") SET AX=$PIECE(AX,",",1)_"D "_$PIECE(AX,",",2,99)
	. SET AX=$$CLASS(AX)
	. SET $PIECE(A,"D ",I)=AX
	. QUIT
	FOR I=2:1:10 QUIT:$PIECE(A,"DO ",I)=""  DO
	. SET AX=$PIECE(A,"DO ",I)   ; DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. QUIT:$EXTRACT(AX)=" "
	. IF $FIND(AX,",") IF '$FIND(AX,"(") SET AX=$PIECE(AX,",",1)_"D "_$PIECE(AX,",",2,99)
	. SET AX=$$CLASS(AX)
	. SET $PIECE(A,"DO ",I)=AX
	. QUIT
	FOR I=1:1:10 QUIT:$PIECE(A,"$$^",2)=""  DO
	. SET AX=$PIECE(A,"$$^",2)
	. QUIT:$EXTRACT(AX)=""""
	. QUIT:$FIND(A,"$$^"_"""")
	. QUIT:$FIND(A,"^%")
	. SET AX=$PIECE(AX,"(",1)
	. FOR  QUIT:'$FIND(A,"$$^"_AX)  SET A=$PIECE(A,"$$^"_AX,1)_"##class(ME"_AX_")."_AX_$PIECE(A,"$$^"_AX,2,99)
	. QUIT
	SET A=A1_A
	IF A2'="" SET A=A_"  ;"_A2
	QUIT
	
METHOD(ROUTINE,NAME,PARALIST,OFFSET) ; CREATE METHOD
	NEW N,LINE
	SET N=OFFSET
	DO
	. WRITE YCR
	. WRITE SP
	. WRITE "method "_NAME_PARALIST
	. WRITE YCR
	. WRITE SP WRITE "{" WRITE YCR
	. ;
	. IF PARALIST'="" WRITE SP,SP WRITE "returntype = %String;" WRITE YCR
	. WRITE SP,SP WRITE "classmethod;" WRITE YCR
	. WRITE SP,SP WRITE "description = "_""""_NAME_""""_";" WRITE YCR
	. WRITE SP,SP WRITE "code = " WRITE YCR
	. ;
	. WRITE SP,SP WRITE "[" WRITE YCR
	. SET N=(OFFSET-1) FOR  SET N=$ORDER(^ROUTINE(VORGX,0,N)) QUIT:N=""  DO  QUIT:$TRANSLATE(^ROUTINE(VORGX,0,N)," ")="QUIT"  QUIT:$EXTRACT(^ROUTINE(VORGX,0,N),1,6)=" QUIT "
	. . QUIT:N<$GET(OFFSET)
	. . QUIT:+N=0
	. . SET LINE=$GET(LINE)+1
	. . DO
	. . . NEW A,I,CLASS,METHOD
	. . . WRITE SP,SP,SP
	. . . IF LINE=1 WRITE ";"
	. . . WRITE:$EXTRACT($GET(^ROUTINE(VORGX,0,N)))'=" " ":" 
	. . . SET A=$GET(^ROUTINE(VORGX,0,N))
	. . . SET A=$TRANSLATE(A,$CHAR(9)," ")
	. . . ;
	. . . FOR I=2:1:10 QUIT:$PIECE(A," JOB ",I)=""  DO
	. . . . SET AX=$PIECE(A," JOB ",I)  ; JOB LABEL^TEST W XXX into LABLE^TEST W XXX
	. . . . QUIT:$EXTRACT(AX)=" "
	. . . . SET AX=$PIECE(AX,":",1)
	. . . . IF $FIND(AX,",") IF '$FIND(AX,"(") SET AX=$PIECE(AX,",",1)_" JOB "_$PIECE(AX,",",2,99)
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A," JOB ",I)=AX
	. . . . QUIT
	. . . FOR I=2:1:10 QUIT:$PIECE(A," job ",I)=""  DO
	. . . . SET AX=$PIECE(A," job ",I)  ; DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. . . . QUIT:$EXTRACT(AX)=" "
	. . . . SET AX=$PIECE(AX,":",1)
	. . . . IF $FIND(AX,",") IF '$FIND(AX,"(") SET AX=$PIECE(AX,",",1)_" job "_$PIECE(AX,",",2,99)
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A," job ",I)=AX
	. . . . QUIT
	. . . IF $FIND(A," JOB ") SET A=$PIECE(A," JOB ",1)_" DO "_$PIECE(A," JOB ",2,99)
	. . . IF $FIND(A," job ") SET A=$PIECE(A," job ",1)_" DO "_$PIECE(A," job ",2,99)
	. . . FOR I=2:1:10 QUIT:$PIECE(A," DO ",I)=""  DO
	. . . . SET AX=$PIECE(A," DO ",I)  ; DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. . . . QUIT:$EXTRACT(AX)=" "
	. . . . IF $FIND(AX,",") IF '$FIND(AX,"(") SET AX=$PIECE(AX,",",1)_" D "_$PIECE(AX,",",2,99)
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A," DO ",I)=AX
	. . . . QUIT
	. . . FOR I=2:1:10 QUIT:$PIECE(A," D ",I)=""  DO
	. . . . SET AX=$PIECE(A," D ",I)  ; DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. . . . QUIT:$EXTRACT(AX)=" "
	. . . . IF $FIND(AX,",") IF '$FIND(AX,"(") SET AX=$PIECE(AX,",",1)_" D "_$PIECE(AX,",",2,99)
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A," D ",I)=AX
	. . . . QUIT
	. . . FOR I=2:1:10 QUIT:$PIECE(A,".D ",I)=""  DO
	. . . . SET AX=$PIECE(A,".D ",I)  ; DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. . . . QUIT:$EXTRACT(AX)=" "
	. . . . IF $FIND(AX,",") IF '$FIND(AX,"(") SET AX=$PIECE(AX,",",1)_" D "_$PIECE(AX,",",2,99)
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A,".D ",I)=AX
	. . . . QUIT
	. . . FOR I=2:1:10 QUIT:$PIECE(A,".DO ",I)=""  DO
	. . . . SET AX=$PIECE(A,".DO ",I)  ; .DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. . . . QUIT:$EXTRACT(AX)=" "
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A,".DO ",I)=AX
	. . . . QUIT
	. . . FOR I=2:1:10 QUIT:$PIECE(A,". DO ",I)=""  DO
	. . . . SET AX=$PIECE(A,". DO ",I)  ; . DO LABLE^TEST W XXX into LABLE^TEST W XXX
	. . . . QUIT:$EXTRACT(AX)=" "
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A,". DO ",I)=AX
	. . . . QUIT
	. . . ;FOR I=2:1 QUIT:$PIECE(A,"DO:",I)=""  DO 
	. . . . SET AX=$PIECE(A,"DO:",I)  ; DO:ASDFA LABLE^TEST into LABLE^TEST W XXX
	. . . . SET AX=$$CLASS(AX)
	. . . . SET $PIECE(A,"DO:",I)=AX
	. . . . QUIT
	. . . FOR I=1:1:10 QUIT:$PIECE(A,"$$^",2)=""  DO
	. . . . SET AX=$PIECE(A,"$$^",2)
	. . . . QUIT:$EXTRACT(AX)=""""
	. . . . QUIT:$FIND(A,"$$^"_"""")
	. . . . QUIT:$FIND(A,"^%")
	. . . . SET AX=$PIECE(AX,"(",1)
	. . . . FOR  QUIT:'$FIND(A,"$$^"_AX)  SET A=$PIECE(A,"$$^"_AX,1)_"##class(ME"_AX_")."_AX_$PIECE(A,"$$^"_AX,2,99)
	. . . . QUIT
	. . . FOR I=1:1:10 QUIT:$PIECE(A,"$$",2)=""  DO
	. . . . SET AX=$PIECE(A,"$$",2)  ; $$LABLE^TEST() into LABLE^TEST()... 
	. . . . QUIT:$FIND(A,"$$^"_"""")
	. . . . QUIT:$FIND(A,"^%")
	. . . . QUIT:$FIND(A,"$$]")
	. . . . QUIT:$FIND(A,"[$$")
	. . . . SET AX=$$CLASS(AX)
	. . . . IF $PIECE(A,"$$",3,99)'="" SET AX=AX_"$$"_$PIECE(A,"$$",3,99)
	. . . . ;S ^TEST(VORGX)=A_"      "_AX
	. . . . SET A=$PIECE(A,"$$",1)_AX 
	. . . . QUIT
	. . . WRITE A,YCR
	. . QUIT
	. WRITE SP,SP WRITE "]" WRITE YCR
	. ;
	. WRITE SP WRITE "}" WRITE YCR    
	. QUIT
	QUIT N
	
CLASS(ROUT) ;CONVERT TO CLASS
	NEW A,PARA,CLASS,METHOD,VCHAR,REST,YQ
	SET A(1)=ROUT 
	QUIT:$FIND(A(1),".Close()") A(1)
	QUIT:$FIND(A(1),"OREF.") A(1)
	QUIT:$FIND(A(1),"$$^"_"""") A(1)
	SET A(2)=$PIECE(A(1)," ",1)  ; LABLE^TEST W XXX into LABLE^TEST 
	QUIT:$TRANSLATE(A(2)," ")="" A(1)  ;NAKED
	USE 0
	SET YQ=0
	IF $FIND(A(1),"@")!($FIND(A(1),"%"))!($FIND(A(1),"##"))!($FIND(A(1),"$$^"_"""")) DO
	. WRITE !,VORGX,":  ",A(1)_" ? <N>" READ YYYY
	. IF YYYY="" SET YQ=1  ; NICHT UMSETZTN ;Not 
	USE %DEV
	IF YQ=1 QUIT:$FIND(A(1),"@") A(1) 
	IF YQ=1 QUIT:$FIND(A(1),"%") A(1) 
	IF YQ=1 QUIT:$FIND(A(1),"##") A(1)
	SET CLASS=$PIECE($PIECE(A(2),"^",2,99),"(",1)
	IF '$FIND(A(2),"^") SET CLASS=VORGX
	SET METHOD=$PIECE($PIECE(A(2),"^",2,99),"(",1)
	SET REST=$PIECE(A(2),"(",2,99)
	IF REST'="" SET REST="("_REST
	IF REST="" SET REST="()"
	IF $FIND(METHOD,"()") SET REST=""
	IF $PIECE(A(2),"^",1)'="" DO
	. IF METHOD="" SET METHOD=$PIECE(A(2),"^",1,99) IF $FIND(METHOD,"(") SET REST=""
	. IF $FIND(A(2),"^") IF $PIECE(A(2),"^",1)'="" SET METHOD=$PIECE(A(2),"^",1) DO
	. . IF $PIECE(A(2),"(",2,99)'="" SET METHOD=METHOD_"("_$PIECE(A(2),"(",2,99) SET REST=""
	. . QUIT
	. QUIT 
	IF $EXTRACT($REVERSE(A(2)))=")" SET A(2)=$REVERSE($EXTRACT($REVERSE(A(2)),2,999))
	SET PARA(0)=$PIECE($PIECE($PIECE(A(2),"^",2,99),"(",2,99),")",1,99)
	SET PARA(1)=""
	SET PARA(2)=""
	SET VCHAR=""
	FOR PARA(3)=1:1 QUIT:$EXTRACT(PARA(0),PARA(3))=""  DO
	. NEW CHAR
	. SET CHAR=$EXTRACT(PARA(0),PARA(3))
	. IF VCHAR=")" IF $FIND("='_",CHAR) SET PARA(2)=$EXTRACT(PARA(0),PARA(3),999) SET PARA(3)=9999 QUIT  ;REST ;residue 
	. SET VCHAR=CHAR
	. SET PARA(1)=PARA(1)_CHAR
	. QUIT
	IF $LENGTH(PARA(1),")")>$LENGTH(PARA(1),"(") IF $EXTRACT($REVERSE(PARA(1)))=")" SET PARA(1)=$REVERSE($EXTRACT($REVERSE(PARA(1)),2,999))
	SET A(3)="##class(ME"_CLASS_")."_METHOD_"("_PARA(1)_")"_PARA(2)
	SET A(3)="##class(ME"_CLASS_")."_METHOD_REST
	SET $PIECE(A(1)," ",1)=A(3)
	QUIT A(1)
	
LIST ;LISTEN PROGRAMME
	DO ^WWWVAR
	SET VORGX="" FOR  SET VORGX=$ORDER(^ROUTINE(VORGX)) QUIT:VORGX=""  IF $EXTRACT(VORGX,1,3)="WWW" IF $EXTRACT(VORGX)'="%" DO
	. ;I $E(VORGX)'="W" I $G(^ROUTINE(VORGX,0,"SIZE"))>3300 Q
	. QUIT:VORGX="WWWMETHOD"
	. WRITE !!,VORGX,!
	. SET OFFSET=""
	. FOR YI=1:1:2 SET OFFSET=$ORDER(^ROUTINE(VORGX,0,OFFSET)) QUIT:OFFSET=""  IF +OFFSET'=0 QUIT:$GET(^ROUTINE(VORGX,0,OFFSET))=""  DO  QUIT:OFFSET=""
	. . ;
	. . WRITE $EXTRACT($GET(^ROUTINE(VORGX,0,OFFSET)),1,50),YCR
	. . QUIT
	. READ X
	. QUIT
	QUIT
]]></Routine>
</Export>