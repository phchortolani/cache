<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INANGHKNEU" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INANGHKNEU(AUF,POS,BGJOB) ;INANGHKNEU;FIS;NEURECHNEN UNTERTEILE SELBSTKOSTEN;21.02.2002
#include COMSYS
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		NEURECHNEN UNTERTEILE SELBSTKOSTEN
	;
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 16-Aug-2005	GRF		SR13250 : $data=10/11 should be $data=1/11
	; 16-Aug-2005	GRF		SR13215 : Doco; /3600; Extra cost calculation TODO: <GRF>
	; FIS	21.02.2002
	;-------------------------------------------------------------------------------
	NEW TEIL,YEBENE,SATZ,POS1
	
	QUIT:$PIECE($GET(^INVORG(YM,YM,1)),Y,201)'=1        ;NUR WENN AKTIV
	SET AUF=$GET(AUF)  				QUIT:AUF=""			;ANGEBOT  ;proposition 
	SET POS=$GET(POS)				QUIT:POS=""			;POSITION
	QUIT:'$DATA(^INANGP(YM,AUF,POS))
	QUIT:'$DATA(^INANGPXL(YM,AUF,POS))
	
	;+++++++++++++++++++++++++++++++++++++++
	;  POS1		objINANGP		
	;  SUCH		objINANGPXL		
	;  SATZ(1)	objINANGPXL		
	;+++++++++++++++++++++++++++++++++++++++
	
	IF $GET(BGJOB)'=1 LOCK +^INPROPJOB(YM):0 IF '$TEST DO  QUIT  ;HINTERGRUND AKTIV ;foil ENABLED 
	. DO  ;LÖSCHEN ANDERE ANWEISUNGEN, WENN GESAMTAUFBAU ANGESTOSSEN
	. . NEW NEXT
	. . SET NEXT=""
	. . FOR  SET NEXT=$ORDER(^INARTJOB(YM,NEXT)) QUIT:NEXT=""  DO
	. . . IF $FIND($GET(^INARTJOB(YM,NEXT,1)),"DO ^INANGHKNEU("_""""_AUF_""""_","_POS_")") KILL ^INARTJOB(YM,NEXT)
	. . . QUIT
	. . QUIT
	. SET ^INARTJOB(YM,$$^WWWNEXT("INARTJOB"),1)="DO ^INANGHKNEU("_""""_AUF_""""_","_POS_")"
	. QUIT
	
	IF $GET(BGJOB)=1 LOCK -^INPROPJOB(YM)
	SET POS1=$GET(^INANGP(YM,AUF,POS,1))
	QUIT:$PIECE(POS1,Y,7)'=3  ;KEINE FERTIGUNG ;no work order
	QUIT:$PIECE(POS1,Y,4)=""  ;KEIN ARTIKEL    ;no item 
	
	;IF $PIECE(POS1,Y,90)=1 QUIT  ;BEREITS GEFERTIGT
	IF $PIECE(POS1,Y,60)=1  QUIT  ;BEREITS GESCHLOSSEN ;yet thick 
	;IF $PIECE(POS1,Y,199)=1 QUIT ;NEURECHNEN NICHT ERLAUBT
	IF $PIECE(POS1,Y,248)=1 QUIT  ;NEURECHNEN NICHT ERLAUBT ;Not permissive 
	
	;---------------------------------------
	
	KILL ^WWWSOR(YUSER)
	DO EBENE        ;ZERLEGEN UNTERTEILE IN EBENEN ;dissect within 
	DO KALK         ;NEURECHNEN HERSTELLKOSTEN AUS MATERIAL UND LEISTUNG ;out of material And performance 
	KILL ^WWWSOR(YUSER)
	QUIT
	
EBENE ;ZERLEGEN UNTERTEILE IN EBENEN ;dissect within 
	NEW SUCH,TEIL
	
	;HAUPTTEIL
	SET ^WWWSOR(YUSER,1,AUF,POS,"1","0")=POS1  ;HAUPTTEIL=EBENE 1
	
	;UNTERTEILE
	SET SUCH="^INANGPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS_")"
	FOR  DO  QUIT:SUCH=""
	. SET SUCH=$QUERY(@SUCH)
	. IF $TRANSLATE($PIECE(SUCH,",",2),"""")'=AUF SET SUCH="" QUIT 
	. IF $PIECE(SUCH,",",3)=POS DO
	. . SET YEBENE=$QLENGTH(SUCH)-2
	. . SET TEIL=$PIECE(SUCH,",",4,99)
	. . SET TEIL=$TRANSLATE(TEIL,",)","..")
	. . SET ^WWWSOR(YUSER,2,AUF,POS,YEBENE,TEIL)=""  ;SPEICHERN TEILE ;Save 
	. .;IF ($DATA(@SUCH)=10)!($DATA(@SUCH)=11)   SET ^WWWSOR(YUSER,1,AUF,POS,YEBENE,TEIL)=@SUCH  ;SPEICHERN HALBFERTIGUNGSTEILE ;Save ;SR13250
	. . IF ($DATA(@SUCH)=1) || ($DATA(@SUCH)=11) SET ^WWWSOR(YUSER,1,AUF,POS,YEBENE,TEIL)=@SUCH  ;SPEICHERN HALBFERTIGUNGSTEILE ;Save 
	. . QUIT
	. QUIT
	QUIT
	
KALK ;NEURECHNEN HERSTELLKOSTEN HALBFERTIGUNGSTEILE AUS MATERIAL UND LEISTUNG ;out of material And performance 
	NEW TEIL,SATZ,STDKALK,YDATEI,TEILEKOST,BDEZEIT,RUESTKOST,RUEST
	
	SET STDKALK=$PIECE($$^INMASCHKOST(3),Y,2)  ;HOLEN STANDARDKALKULATIONSVORGABE ;send for 
	IF +STDKALK=0 SET STDKALK=1
	SET RUEST=0
	SET YEBENE=""
	FOR  SET YEBENE=$ORDER(^WWWSOR(YUSER,1,AUF,POS,YEBENE),-1) QUIT:YEBENE=""  DO
	. SET TEIL=""
	. FOR  SET TEIL=$ORDER(^WWWSOR(YUSER,1,AUF,POS,YEBENE,TEIL)) QUIT:TEIL=""  DO
	. . SET SATZ=$GET(^WWWSOR(YUSER,1,AUF,POS,YEBENE,TEIL))
	. . QUIT:SATZ=""
	. . ;
	. . SET KOST=0  ;HERSTELLKOSTEN
	. . IF +$PIECE(SATZ,Y,5)=0 SET $PIECE(SATZ,Y,5)=1
	. . ;
	. . ;SUCHEN MATERIALIEN+HALBFERTIGUNGSTEILE UND LEISTUNGEN ;seek And LEISTUNGEN 
	. . ;===============================================================
	. . ;
	. . ;HAUPTTEIL (AUFTRAGSPOSITION)
	. . ;----------------
	. . ;		D4		Item Number
	. . ;		D5		Quantity
	. . ;		D26		Item Type		2 : Services
	. . ;		D39		Output Qty
	. . ;		D47		Cost
	. . ;		D70		Set Up Time (not specified in class INANGPXL)
	. . IF TEIL=0 DO
	. . . SET TEIL(1)=TEIL
	. . . FOR  SET TEIL(1)=$ORDER(^WWWSOR(YUSER,2,AUF,POS,YEBENE+1,TEIL(1))) QUIT:TEIL(1)=""  IF $PIECE(TEIL(1),".",2)="" DO
	. . . . SET YDATEI(1)="^INANGPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS
	. . . . FOR YI=1:1 QUIT:$PIECE(TEIL(1),".",YI,99)=""  SET YDATEI(1)=YDATEI(1)_","_$PIECE(TEIL(1),".",YI)
	. . . . SET YDATEI(1)=YDATEI(1)_")"
	. . . . SET SATZ(1)=@YDATEI(1)  ;SATZ NEU HOLEN WEGEN ÄNDERUNGEN AUS BEARBEITEN VORHERIGER EBENE ;typesetting recent send for quibble out of plain 
	. . . . IF $PIECE(SATZ(1),Y,26)="" IF $PIECE(SATZ(1),Y,4)'="" SET $PIECE(SATZ(1),Y,26)=$PIECE($GET(^INART(YM,$PIECE(SATZ(1),Y,4),1)),Y,26)  ;HOLEN ARTIKELART ;send for 
	. . . . IF +$PIECE(SATZ(1),Y,5)=0  SET $PIECE(SATZ(1),Y,5)=1
	. . . . IF +$PIECE(SATZ(1),Y,39)=0 SET $PIECE(SATZ(1),Y,39)=$PIECE(SATZ(1),Y,5)
	. . . . IF $PIECE(SATZ(1),Y,26)'=2 DO  ;MATERIAL
	. . . . . SET TEILEKOST=$JUSTIFY((($PIECE(SATZ(1),Y,47)/$PIECE(SATZ(1),Y,5))*$PIECE(SATZ(1),Y,39)),0,2)  ;MATERIEL
	. . . . . QUIT
	. . . . IF $PIECE(SATZ(1),Y,26)=2 DO  ;LEISTUNGEN
	. . . . . ;SET TEILEKOST=$JUSTIFY(($PIECE(SATZ(1),Y,47)*$PIECE(SATZ,Y,5)),0,2)  ;VORKALKULIERTER WERT * MENGE
	. . . . . SET TEILEKOST=$JUSTIFY((($PIECE(SATZ(1),Y,47)/$PIECE(SATZ(1),Y,5))*$PIECE(SATZ(1),Y,39)),0,2)  ;MATERIEL
	. . . . . SET RUEST=RUEST+$PIECE(SATZ(1),Y,70)
	. . . . . QUIT
	. . . . SET KOST=KOST+TEILEKOST
	. . . . QUIT
	. . . QUIT
	. . ;
	. . ;UNTERTEILE (ZWISCHENTEILE)
	. . ;----------------
	. . IF TEIL'=0 DO
	. . . SET TEIL(1)=TEIL
	. . . FOR  SET TEIL(1)=$ORDER(^WWWSOR(YUSER,2,AUF,POS,YEBENE+1,TEIL(1))) QUIT:TEIL(1)=""  QUIT:$EXTRACT(TEIL(1),1,$LENGTH(TEIL))'=TEIL  DO
	. . . . SET YDATEI(1)="^INANGPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS
	. . . . FOR YI=1:1 QUIT:$PIECE(TEIL(1),".",YI,99)=""  SET YDATEI(1)=YDATEI(1)_","_$PIECE(TEIL(1),".",YI)
	. . . . SET YDATEI(1)=YDATEI(1)_")"
	. . . . SET SATZ(1)=@YDATEI(1)  ;SATZ NEU HOLEN WEGEN ÄNDERUNGEN AUS BEARBEITEN VORHERIGER EBENE ;typesetting recent send for quibble out of plain 
	. . . . IF $PIECE(SATZ(1),Y,26)="" IF $PIECE(SATZ(1),Y,4)'="" SET $PIECE(SATZ(1),Y,26)=$PIECE($GET(^INART(YM,$PIECE(SATZ(1),Y,4),1)),Y,26)  ;HOLEN ARTIKELART ;send for 
	. . . . IF +$PIECE(SATZ(1),Y,5)=0 SET $PIECE(SATZ(1),Y,5)=1
	. . . . IF +$PIECE(SATZ(1),Y,39)=0 SET $PIECE(SATZ(1),Y,39)=$PIECE(SATZ(1),Y,5)
	. . . . IF $PIECE(SATZ(1),Y,26)'=2 DO  ;MATERIAL
	. . . . . SET TEILEKOST=$JUSTIFY((($PIECE(SATZ(1),Y,47)/$PIECE(SATZ(1),Y,5))*$PIECE(SATZ(1),Y,39)),0,2)  ;MATERIEL
	. . . . . QUIT
	. . . . IF $PIECE(SATZ(1),Y,26)=2 DO  ;LEISTUNGEN
	. . . . . ;SET TEILEKOST=$JUSTIFY(($PIECE(SATZ(1),Y,47)*$PIECE(SATZ,Y,5)),0,2)  ;VORKALKULIERTER WERT * MENGE
	. . . . . SET TEILEKOST=$JUSTIFY((($PIECE(SATZ(1),Y,47)/$PIECE(SATZ(1),Y,5))*$PIECE(SATZ(1),Y,39)),0,2)  ;MATERIEL
	. . . . . SET RUEST=RUEST+$PIECE(SATZ(1),Y,70)
	. . . . . QUIT
	. . . . SET KOST=KOST+TEILEKOST
	. . . . QUIT
	. . . QUIT
	. . ;
	. . ;EXTRAKOSTEN
	. . ;-----------
	. . SET KOST=KOST+$$EXTRA1(AUF,POS,TEIL)  ;ZUSATZKOSTEN ;additional costs 
	. . ;
	. . IF TEIL="0" SET KOST=KOST+$JUSTIFY((RUEST*(STDKALK/3600)),0,2)
	. . ;
	. . ;SPEICHERN HERSTELLKOSTEN ;Save 
	. . ;========================
	. . DO  ;IF KOST'=0 DO
	. . . NEW YDATEI
	. . . IF TEIL="0" SET YDATEI="^INANGP("_""""_YM_""""_","_""""_AUF_""""_","_POS_",1)"
	. . . IF TEIL'="0" DO
	. . . . SET YDATEI="^INANGPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS
	. . . . FOR YI=1:1 QUIT:$PIECE(TEIL,".",YI,999)=""  SET YDATEI=YDATEI_","_$PIECE(TEIL,".",YI)
	. . . . SET YDATEI=YDATEI_")"
	. . . . QUIT
	. . . QUIT:'$DATA(@YDATEI)
	. . . IF TEIL'="0" IF +$PIECE(SATZ,Y,39)'=0 SET KOST=((KOST/$PIECE(SATZ,Y,39))*$PIECE(SATZ,Y,5))
	. . . SET $PIECE(@YDATEI,Y,47)=$JUSTIFY(KOST,0,2)
	. . . QUIT
	. . ;
	. . QUIT
	. QUIT
	
	DO  ;NEUAUFBAU ARTIKELTEILE
	. NEW YANGEBOT,YPOS,SATZ
	. SET YANGEBOT=AUF
	. SET YPOS=POS
	. SET SATZ=$GET(^INANGP(YM,AUF,POS,1))
	. DO ^INANGTEILE
	. QUIT
	QUIT
	
EXTRA1(AUF,POS,TEIL)	  ;ZUSATZKOSTEN ;additional costs 
	NEW ZKOST,SATZ,DATEI,YI,EXTRA,WERKZEUG,LOS,ART,MENGE,EH
	
	SET ZKOST=0
	SET AUF=$GET(AUF)				QUIT:AUF="" ZKOST
	SET POS=$GET(POS)				QUIT:POS="" ZKOST
	SET TEIL=$GET(TEIL)				QUIT:TEIL="" ZKOST
	
	IF TEIL=0 DO  ;HAUPTTEIL UND 1. EBENE ;And plain 
	. SET DATEI="^INANGPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS
	. SET DATEI=DATEI_")"
	. IF $DATA(@DATEI) DO
	. . SET EXTRA    = $PIECE(@DATEI,Y,75)  ;EXTRAKOSTEN
	. . SET WERKZEUG = $PIECE(@DATEI,Y,74)  ;WERKZEUGKOSTEN
	. . SET ZKOST    = ZKOST+EXTRA+WERKZEUG
	. . QUIT
	. QUIT
	
	IF TEIL'=0 DO  ;ZWISCHENTEILE
	. SET DATEI="^INANGPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS
	. FOR YI=1:1 QUIT:$PIECE(TEIL,".",YI,99)=""  SET DATEI=DATEI_","_$PIECE(TEIL,".",YI)
	. SET DATEI=DATEI_")"
	. IF $DATA(@DATEI) DO
	. . SET ZKOST=ZKOST+($PIECE(@DATEI,Y,74))  ;WERKZEUGKOSTEN
	. . SET ZKOST=ZKOST+($PIECE(@DATEI,Y,75))  ;EXTRAKOSTEN
	. . QUIT
	. QUIT
	
	;LOSGRÖSSE
	SET LOS=0
	IF TEIL=0  SET ART   = $PIECE($GET(^INANGP(YM,AUF,POS,1)),Y,4)
	IF TEIL'=0 SET ART   = $PIECE($GET(^INANGPT(YM,AUF,POS,TEIL,1)),Y,4)
	IF TEIL=0  SET MENGE = $PIECE($GET(^INANGP(YM,AUF,POS,1)),Y,5)
	IF TEIL'=0 SET MENGE = $PIECE($GET(^INANGPT(YM,AUF,POS,TEIL,1)),Y,39)
	IF ART'="" SET LOS   =+$PIECE($GET(^INART(YM,ART,1)),Y,72)
	IF +LOS<1 SET LOS=99999999
	IF +MENGE<1 SET MENGE=1
	SET MENGE=MENGE\LOS
	IF MENGE<1 SET MENGE=1
	SET ZKOST=$JUSTIFY((ZKOST*MENGE),0,2)
	QUIT ZKOST
	
]]></Routine>
</Export>