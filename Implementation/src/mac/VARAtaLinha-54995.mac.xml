<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARAtaLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARAtaLinha
#include COMSYS
#include COMConst

OnBeforeFormat(pstrYFIELDNAME,pstrText,pobjLine)
 	;-------------------------------------------------------------------------------
    ; Colore a linha do grid quando a ata está processada.
    ;	 Verde: ainda há saldo disponível no item da ata
    ;    Vermelho: não há mais saldo disponível no item da ata
    ;
    ; History:
    ; 20-Sep-2010	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------
	new idField, idKey, status, saldoQuant
 	
	$$$GRIDSplitKey(pstrYFIELDNAME,intRow,intCol)
	set idField = $$$GetClassField(YFORM,intCol)
 
	set idKey  = $$ReferenceKey^COMGridEdit31Interface(YFORM,intRow)		
	set status = $$GetStatusAta^VARAta($$$KEY1(idKey))
	
	quit:(status '= 1) ;Somente aplica cores quando o status for 1-Processado
	
	set saldoQuant = $$GetSaldoItemQuant(idKey)
	
	if (saldoQuant > 0) {
		set YBACKGROUNDCOLOR = "#92d39e"
	
	} elseif (saldoQuant = 0) {
		set YBACKGROUNDCOLOR = "#f8d08b"	;Caso queiram usar vermelho: #e94848
	}
	
	quit

GetSaldoItemQuant(pYKEY)
	;-------------------------------------------------------------------------------
    ; Retorna o saldo do item da ata em quantidade.
    ;
    ; History:
    ; 20-Sep-2011	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------	
	quit:($$$KEY2(pYKEY) = "") ""
	
	new fltQuantItem, fltSaldoQuant, fltQuantUtilizada
		
	set fltQuantItem = $piece($get(^VARAtaLinha(YM,$$$KEY1(pYKEY),$$$KEY2(pYKEY),1)),Y,2)	
	set fltQuantUtilizada = $$GetQuantidadeUtilizada($$$KEY1(pYKEY),$$$KEY2(pYKEY))		
	set fltSaldoQuant = fltQuantItem - fltQuantUtilizada
	
	quit fltSaldoQuant
	
SQLGetSaldoItemQuant(pidAta,pidAtaLinha)
	$$$VAR
	new key
	set key = pidAta_$$$COMMA_pidAtaLinha	
	quit $$GetSaldoItemQuant(key)
	
GetQuantidadeUtilizada(pidAta,pidAtaLinha)
	;-------------------------------------------------------------------------------
    ; Calcula a quantidade existente em ordens de compra de produtos de atas.
    ; 
    ; History:
    ; 21-Sep-2010	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------
	quit:( (pidAta = "") || (pidAtaLinha = 0) ) ""

	new fltQuantidadeTotal, idCompra, idCompraLinha, objCompraLinha, fltQuantidade 	

	//Somando as quantidades em uso
 	set fltQuantidadeTotal = 0
 	
 	$$$Order5(^INAUFPs,YM,103,$$$Index(pidAta),pidAtaLinha,idCompra)
 		
 		$$$Order6(^INAUFPs,YM,103,$$$Index(pidAta),pidAtaLinha,idCompra,idCompraLinha)
 			
 			set objCompraLinha = $get(^INAUFP(YM,idCompra,idCompraLinha,1))
 			set fltQuantidade  = $piece(objCompraLinha,Y,5) 			
 			set fltQuantidadeTotal = fltQuantidadeTotal + fltQuantidade
 		
 		$$$End
 		
 	$$$End
 	
 	quit fltQuantidadeTotal

GetSaldoItemValor(pYKEY)
	;-------------------------------------------------------------------------------
    ; Retorna o saldo do item da ata em valor.
    ;
    ; History:
    ; 20-Sep-2011	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------	
	quit:($$$KEY2(pYKEY) = "") ""
	
	new saldoItemQuant, valorUnitario, fltSaldoValor
	
	set saldoItemQuant = $$GetSaldoItemQuant(pYKEY)
	set valorUnitario  = $$GetPrecoUnitario($$$KEY1(pYKEY),$$$KEY2(pYKEY))
	
	set fltSaldoValor = saldoItemQuant * valorUnitario
	
	quit fltSaldoValor
	
OnBlurProduto(pYFELD,pYINHALT)
	;-------------------------------------------------------------------------------
    ; Valida o produto e seta campos relacionados a ele.
    ;
    ; History:
    ; 20-Sep-2010	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------
	quit:(pYINHALT = "")
	
	new idUnidadeMedida
	
	if '$data(^INART(YM,pYINHALT)) {
		$$$Alert("O produto "_pYINHALT_" não existe no cadastro de produtos. Favor verificar")
			
	} else {
		set idUnidadeMedida = $$SQLGetUnitMeasure^VARSQL(pYINHALT)		
		set $piece(YFELD,Y,3) = idUnidadeMedida
	}
	
	quit
	
OnBlurFornecedor(pYKEY,pYFELD,pYINHALT)
	;-------------------------------------------------------------------------------
    ; Valida o fornecedor e seta campos relacionados a ele.
    ;
    ; History:
    ; 20-Sep-2010	Gustavo Fiuza	Created
    ;-------------------------------------------------------------------------------
	quit:(pYINHALT = "")
	
	new CNPJ
	
	if '$data(^INLIEF(YM,pYINHALT)) {
		$$$Alert("O fornecedor "_pYINHALT_" não existe no cadastro de fornecedores. Favor verificar")
			
	} else {
		set CNPJ = $$getCNPJ^VARINLIEF(pYINHALT)
		do UpdateManualField^COMGridEdit31G($$$KEY2(pYKEY),6,CNPJ,"VARAtaLinha")
	}
	
	quit
	
GetProduto(pidAta,pidAtaLinha)
	if (pidAtaLinha = "") quit ""
	quit $piece($get(^VARAtaLinha(YM,pidAta,pidAtaLinha,1)),Y,1)
	
GetUOM(pidAta,pidAtaLinha)
	if (pidAtaLinha = "") quit ""
	quit $piece($get(^VARAtaLinha(YM,pidAta,pidAtaLinha,1)),Y,3)
	
GetPrecoUnitario(pidAta,pidAtaLinha)
	if (pidAtaLinha = "") quit ""
	quit $piece($get(^VARAtaLinha(YM,pidAta,pidAtaLinha,1)),Y,4)

GetFornecedor(pidAta,pidAtaLinha)
	if (pidAtaLinha = "") quit ""
	quit $piece($get(^VARAtaLinha(YM,pidAta,pidAtaLinha,1)),Y,5)
]]></Routine>
</Export>