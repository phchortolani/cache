<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INRECSearch" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INRECSearch
	
#include COMSYS
#include INConst
#include FINConst
#include COMConst
#include WWWConst
#include INSYS
	
#define LogR(%1,%2)		;
#define LogRx(%1)		;
#;define LogR(%1,%2)	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^INRECSearch("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	/*
oldSelect() ; SR17262 replaced
	;-------------------------------------------------------------------------------
	; Search match cache
	; 
	; Called By:  JavaScript OnClick Callback on Button 2 on 
	;             forms INREC (now deprecated - use INReceipt) and INRECReverse
	;
	; Returns: $$$OK
	;
	; History:
	; 06-Oct-2009	GRF		SR16928: Allow receipts without order (processed under
	; 							form INReceipt rather than INWEFREI)
	; 04-Sep-2006	JW		SR14979: Moved to INRECSearch
	; 28-Mar-2006	JW		SR14421: Created (from SelectReceipts^INRECReverse)
	;-------------------------------------------------------------------------------
	new YFELD,intType
	
	set YFELD = $$GetFormData^COMUtilForm()
	set intType = $$$INRECType(YFELD)
	
	do Initialise^COMViewCustom("FINAPInvMatchCache","Selected^INRECSearch")
	
	do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheCompleted,"=",$$$NO)     // not completed
	;do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheSourceOrder,"'=","")    // from an order SR16928
	
	if intType = $$$EnumINRECSupplierReceipt {
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheReceipted,"=",$$$NO) // not receipted
	
	} elseif intType = $$$EnumINRECSupplierReversal {
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheLocation,"=",$$$INRECLocation(YFELD)) // From current locn
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheReceipted,"=",$$$YES)                 // receipted
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCachePreviouslyInvoicedValue,"=","")       // no previous value
	}
	
	do Start^COMViewCustom()
	quit $$$OK
	*/
	
Select()
	;-------------------------------------------------------------------------------
	; Search match cache
	;
	; Called By:  JavaScript OnClick Callback on Button 2 "Select Receipts"
	;             on forms INREC (now deprecated - use INReceipt) and INRECReverse
	;
	; Returns: $$$OK
	;
	; History:
	; 10-May-2010	GRF		SR17262: Variable prefixes
	; 27-Apr-2010	Karine	SR17262: Only one Receipt can be reversed at the same time
	; 06-Oct-2009	GRF		SR16928: Allow receipts without order (processed under
	; 							form INReceipt rather than INWEFREI)
	; 04-Sep-2006	JW		SR14979: Moved to INRECSearch
	; 28-Mar-2006	JW		SR14421: Created (from SelectReceipts^INRECReverse)
	;-------------------------------------------------------------------------------
	new YFELD,blnHasInvoice,idSource,intType,objRec
	
	set YFELD = $$GetFormData^COMUtilForm()
	set intType = $$$INRECType(YFELD)
	
	; SR17262 vvvvv
	set blnHasInvoice = $$$NO
	
	set idSource = $$$INRECReceiptSourceNo(YFELD)
	if idSource '= "" {
		set objRec = $get(^INREC(0,idSource,1))
		if '(+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1)))){
			if $$$INRECInvoiceNumber(objRec)'="" set blnHasInvoice = $$$YES   ; FIXME : What if invoiced through 3WM?  Is this set?
		}
	}
	if blnHasInvoice {
		do Initialise^COMViewCustom("FINAPInvMatchCache","Selected^INRECSearch",$$$YES) ;Close popup after load all lines	
	} else {
		do Initialise^COMViewCustom("FINAPInvMatchCache","Selected^INRECSearch",$$$NO)
	}	 
	;do Initialise^COMViewCustom("FINAPInvMatchCache","Selected^INRECSearch")
	; SR17262 ^^^^^
	
	;SR16928: Select item that belong to Receipt chose
	if idSource'="" {    ; test <GRF> - alternative is to make the field mandatory - may be necessary
		if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
			do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheReceiptNumber,"=",$$$Index(idSource),"",$$$YES)
		} else {
			do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheReceiptNumber,"=",idSource,"",$$$YES)     ;SR17262
		}
	}
	do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheCompleted,"=",$$$NO)     // not completed
    ;do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheSourceOrder,"'=","")    // from an order SR16928
	
	if intType = $$$EnumINRECSupplierReceipt {
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheReceipted,"=",$$$NO) // not receipted
	
	} elseif intType = $$$EnumINRECSupplierReversal {
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheLocation,"=",$$$INRECLocation(YFELD)) // From current locn
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCacheReceipted,"=",$$$YES)                 // receipted
		do AddFilter^COMViewCustom("D"_$$$FldFINAPInvMatchCachePreviouslyInvoicedValue,"=","")       // no previous value
	}
	
	do Start^COMViewCustom()
	quit $$$OK
	
	
Selected(pobjResultSet)
	;-------------------------------------------------------------------------------
	; Add selected receipts to the grid
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 10-May-2010	GRF		SR17262: Variable prefixes; clarify variables
	; 27-Apr-2010	Karine	SR17262: If has Invoice, load all items from INRECLine
	; 							if not, load one by one
	; 16-Sep-2008	GRF		SR15888: should append lines rather than insert
	; 13-Apr-2006	JW		SR14421: Moved grid processing from CreateLine^INRECLine
	; 02-Nov-2005	JW		SR13222: Created
	;-------------------------------------------------------------------------------
	new blnHasInvoice,idInvMatch,idSource,idUser
	new objInvMatch,objReceipt,objRevLine,objReceiptLine,objReversal,strStatus
	
	$$$LogR("Selected","")
	
	set objReversal = $$GetFormData^COMUtilForm()  
	
	; SR17262 vvvvv
	set idSource = $$$INRECReceiptSourceNo(objReversal)
	set blnHasInvoice = $$$NO
	
	set strStatus = $$$OK
	
	if idSource '= "" {
		set objReceipt = $get(^INREC(0,idSource,1))
		if '(+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1)))){
			if $$$INRECInvoiceNumber(objReceipt)'="" set blnHasInvoice = $$$OK	
		}
	}
	; SR17262 ^^^
		
	$$$GRIDAddBatchStart
	
	;SR17262 vvvvv
	if blnHasInvoice = $$$OK {    ;SR17262 : has invoice, load all lines on Reverse grid 
	   	&sql(
			DECLARE getID CURSOR FOR 
			SELECT Number INTO :idInvMatch
			FROM FINAPInvMatchCache
 			WHERE ReceiptNumber = :idSource
 		)
 		
 		&sql(OPEN getID)
	   	&sql(FETCH getID)
	   		   	
	   	while (SQLCODE = 0) {
	   		if '$$CacheLinkExists(idInvMatch) {  // Don't add more than once
	   			set objInvMatch    = ^FINAPInvMatchCache(0,idInvMatch,1)
	   			set objReceiptLine = ^INRECLine(0,$$$FINAPInvMatchCacheReceiptNumber(objInvMatch),$$$FINAPInvMatchCacheReceiptLine(objInvMatch),1)
				set strStatus = $$CreateLine^INRECLine(objReversal,idInvMatch,.objRevLine,,$$$INRECLineLotNumber(objReceiptLine),$$$INRECLineExpirationDate(objReceiptLine))
				
				if $$$ISOK(strStatus) {
					do AddLine^COMGridEdit31Add(objRevLine,,,,,,,$$$YES)
				}
			}
   		    &sql(FETCH getID)
   		}
   		&sql(CLOSE getID)
   	;SR17262 ^^^^^
	
	} else {
		while pobjResultSet.Next() {
			set idInvMatch = $$GetID^COMViewCustom(pobjResultSet)
		
		$$$LogRx("S1:"_idInvMatch)
			if '$$CacheLinkExists(idInvMatch) {  // Don't add more than once
			; SR17262 vvvvv
				set objInvMatch    = ^FINAPInvMatchCache(0,idInvMatch,1)
	   			set objReceiptLine = ^INRECLine(0,$$$FINAPInvMatchCacheReceiptNumber(objInvMatch),$$$FINAPInvMatchCacheReceiptLine(objInvMatch),1)
				set strStatus = $$CreateLine^INRECLine(objReversal,idInvMatch,.objRevLine,,$$$INRECLineLotNumber(objReceiptLine),$$$INRECLineExpirationDate(objReceiptLine))
			;	set strStatus = $$CreateLine^INRECLine(objREC,idInvMatch,.objRevLine)
			; SR17262 ^^^^^
				if $$$ISOK(strStatus) {
					do AddLine^COMGridEdit31Add(objRevLine,,,,,,,$$$YES)
				}
			}
		}
	}	
	
	$$$GRIDAddBatchStop
	quit
		
	/*
oldSelected(pobjResultSet)  ; SR17262 replaced
	;-------------------------------------------------------------------------------
	; Add selected receipts to the grid
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 16-Sep-2008	GRF		SR15888: should append lines rather than insert
	; 13-Apr-2006	JW		SR14421: Moved grid processing from CreateLine^INRECLine
	; 02-Nov-2005	JW		SR13222: Created
	;-------------------------------------------------------------------------------
	new idInvMatch,idUser,objREC,objRECLine,strStatus
	
	$$$LogR("Selected","")
	
	set objREC = $$GetFormData^COMUtilForm()
		
	$$$GRIDAddBatchStart
	while pobjResultSet.Next() {
		set idInvMatch = $$GetID^COMViewCustom(pobjResultSet)
		
	$$$LogRx("S1:"_idInvMatch)
		if '$$CacheLinkExists(idInvMatch) {  // Don't add more than once
			set strStatus = $$CreateLine^INRECLine(objREC,idInvMatch,.objRECLine)
			if $$$ISOK(strStatus) {
			;	$$$GRIDAddLine(objRECLine)                 ; SR15888
				do AddLine^COMGridEdit31Add(objRECLine,,,,,,,$$$YES)
			}
		}
	}
	$$$GRIDAddBatchStop
	quit
	*/
	
CacheLinkExists(pidKey="") private
	;-------------------------------------------------------------------------------
	; Does the line exist in the grid yet?
	;
	; Returns:
	;
	; History:
	; 12-Apr-2010	GRF		SR17177: arrGrid rather than objGrid
	; 02-Nov-2005	JW		SR13222: Created (copied from FINAPInvSearch)
	;-------------------------------------------------------------------------------
	new arrGrid,idInvoice,idLine,objInvLine
	
	$$$GRIDGetContents(.arrGrid)
	set idInvoice = $order(arrGrid(""))
	
	set idLine = ""
	if idInvoice'="" {
		for {
			set idLine = $order(arrGrid(idInvoice,idLine))
			quit:(idLine="")
			
			quit:$$$INRECLineCacheLink(arrGrid(idInvoice,idLine))=pidKey
		}
	}
	quit (idLine'="")
	
	
LoadOrderLines()
	;-------------------------------------------------------------------------------
	; Search FINAPInvMatchCache by Supplier Order or Import Number.  
	; Add all valid lines to the INRECLine grid.
	;
	; Params:	none
	;
	; ByRefs:	none
	;
	; Returns:	none
	;
	; History:
	; 20-Nov-2009	PPP		SR17051: Check if Order Exists
	; 05-Sep-2006	JW		SR14979: Check whether any added. Change manual to data fields.
	; 17-Aug-2006	JW		SR14906: Removed incorrect macros
	; 05-Jul-2006	SC		SR14773: Created
	;-------------------------------------------------------------------------------
	new objRec,idOrder,idImport,blnAdded
	
	//set objYMFELD = $$GetFormData^COMUtilForm("INREC","M")
	set objRec   = $$$GRIDYFELDContainer
	set idOrder  = $$$INRECSupplierOrder(objRec) //SR14906
	set idImport = $$$INRECImportNumber(objRec)
	
	if idOrder'="" {
		//SR17051
		if $data(^INAUF(0,idOrder)) {
			set blnAdded = $$LoadLinesByOrder(idOrder,idImport)
		}
	} elseif idImport'="" {
		set blnAdded = $$LoadLinesByImport(idImport)		
	} else {
		set blnAdded = $$$NO
	}
	
	if '$get(blnAdded) {   //SR14979
		$$$Alert("IN00527")  ;There are no applicable lines to receipt
	}
	quit
	
	
LoadLinesByOrder(pidOrder="",pidImport="")
	;-------------------------------------------------------------------------------
	; Search FINAPInvMatchCache by Supplier Order.  
	; Add all valid lines to the INRECLine grid.
	;
	; Params:	pidOrder - Order Number to search for.
	;			pidImport - Import Number to search for.
	;
	; ByRefs:	none
	;
	; Returns:	boolean - whether any lines were added
	;
	; History:
	; 16-Sep-2008	GRF		SR15888: should append lines rather than insert
	; 05-Sep-2006	JW		SR14979: Added status check, return value. Use index.
	; 05-Jul-2006	SC		SR14773: Created
	;-------------------------------------------------------------------------------
	new strStatus,idxOrderLine,idInvMatch,objInvMatch,objREC,objRECLine,blnAdded,idxOrder
	
	set blnAdded = $$$NO               //SR14979
	set idxOrder = $$$Index(pidOrder)
	if $data(^FINAPInvMatchCaches(YM,1,idxOrder)) {
		set objREC = $$GetFormData^COMUtilForm()
		$$$GRIDAddBatchStart
		
		set idxOrderLine = ""
		for {
			set idxOrderLine = $order(^FINAPInvMatchCaches(YM,1,idxOrder,idxOrderLine))
			quit:idxOrderLine=""
			
			set idInvMatch = ""
			for {
				set idInvMatch = $order(^FINAPInvMatchCaches(YM,1,idxOrder,idxOrderLine,idInvMatch))
				quit:idInvMatch=""
				
				set objInvMatch = $get(^FINAPInvMatchCache(YM,idInvMatch,1))
				continue:(pidImport '="")&&(pidImport'=$$$FINAPInvMatchCacheImportNumber(objInvMatch))
				continue:$$$FINAPInvMatchCacheReceipted(objInvMatch)
				continue:$$$FINAPInvMatchCacheCompleted(objInvMatch)
				
				//InvMatch ok, add line to INRECLine
				if '$$CacheLinkExists(idInvMatch) {        // Don't add more than once				
					set strStatus = $$CreateLine^INRECLine(objREC,idInvMatch,.objRECLine)
					if $$$ISOK(strStatus) {                //SR14979
					;	$$$GRIDAddLine(objRECLine)         ; SR15888
						do AddLine^COMGridEdit31Add(objRECLine,,,,,,,$$$YES)
						set blnAdded = $$$YES
					}
				}
			}
		}
		$$$GRIDAddBatchStop
	}
	quit blnAdded
	
	
LoadLinesByImport(pidImport="")
	;-------------------------------------------------------------------------------
	; Search FINAPInvMatchCache by Import Number.  
	; Add all valid lines to the INRECLine grid.
	;
	; Params:	pidImport - Import Number to search for.
	;
	; ByRefs:	none
	;
	; Returns:	boolean - whether any lines were added
	;
	; History:
	; 16-Sep-2008	GRF		SR15888: should append lines rather than insert
	; 05-Sep-2006	JW		SR14979: Added status check, return value. Use index.
	; 05-Jul-2006	SC		SR14773: Created
	;-------------------------------------------------------------------------------
	new strStatus,intOrderLine,idInvMatch,objInvMatch,objREC,objRECLine,blnAdded,idxImport
	
	set blnAdded  = $$$NO              //SR14979
	set idxImport = $$$Index(pidImport)
	if $data(^FINAPInvMatchCaches(YM,5,idxImport)) {
		set objREC = $$GetFormData^COMUtilForm()
		$$$GRIDAddBatchStart
		
		set idInvMatch = ""
		for {
			set idInvMatch = $order(^FINAPInvMatchCaches(YM,5,idxImport,idInvMatch))
			quit:idInvMatch=""
			
			set objInvMatch = $get(^FINAPInvMatchCache(YM,idInvMatch,1))
			
			continue:$$$FINAPInvMatchCacheReceipted(objInvMatch)
			continue:$$$FINAPInvMatchCacheCompleted(objInvMatch)
			
			//InvMatch ok, add line to INRECLine
			if '$$CacheLinkExists(idInvMatch) {	// Don't add more than once		
				set strStatus = $$CreateLine^INRECLine(objREC,idInvMatch,.objRECLine)
				if $$$ISOK(strStatus) {                    //SR14979
				;	$$$GRIDAddLine(objRECLine)             ; SR15888
					do AddLine^COMGridEdit31Add(objRECLine,,,,,,,$$$YES)
					set blnAdded = $$$YES
				}
			}
		}
		$$$GRIDAddBatchStop
	}
	quit blnAdded
	
]]></Routine>
</Export>