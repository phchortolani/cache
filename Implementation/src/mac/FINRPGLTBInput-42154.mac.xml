<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINRPGLTBInput" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINRPGLTBInput
	#include COMSYS
	#include FINConst
	;---------------------------------------------------------
	; Routines for the GL Trial Balance Parameter Input Form
	;---------------------------------------------------------
 
OnBeforeButtonLine()
	;-------------------------------------------------------------------------------
	; Routine to run on before button line of the parameter input form
	; (gives everything a default value)
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new idPeriodType,lstYears,intYear,idx,lstPeriods,idPeriod,objFINGLPeriod
	new dteStart,dteEnd,strDesc
 
	if (YSEITE=1) {
		kill ^COMTempList(YM,YUSER,"Periods")
		kill ^COMTempList(YM,YUSER,"Years")
	 
		set idPeriodType=$get(VORG(4))
		if idPeriodType="" set idPeriodType=$$DefaultPeriod^FINGLPeriod()
		
		set lstYears=$$GetYearsForPeriod^FINGLPeriod(idPeriodType,,$$$NO)
		
		for idx=1:1:$listlength(lstYears) {
			set intYear=$listget(lstYears,idx)
			if intYear'="" {
				set ^COMTempList(YM,YUSER,"Years",intYear,1)=""
			}
		}
		
		set intYear=$get(VORG(5))
		if intYear="" set intYear=$$DefaultStartingYear(idPeriodType)
		
		if '$listfind(lstYears,intYear) set intYear=$listget(lstYears,1)
		
		set lstPeriods=$$GetPeriodsForYear^FINGLPeriod(idPeriodType,intYear)
		
		for idx=1:1:$listlength(lstPeriods) {
			set idPeriod=$listget(lstPeriods,idx)
			if idPeriod'="" {
				set objFINGLPeriod  = $get(^FINGLPeriod(YM,idPeriod,1))
				
				set dteStart		= $$$FINGLPeriodStartDate(objFINGLPeriod)
				set dteEnd			= $$$FINGLPeriodEndDate(objFINGLPeriod)
				
				set strDesc=$$$Text($listbuild("Fin01031",$$^WWWDATE(dteStart),$$^WWWDATE(dteEnd)))  ;%1 to %2
				set ^COMTempList(YM,YUSER,"Periods",idPeriod,1)=strDesc
			}
		}
	}
 
	quit
	
	
OnAfterDataFields()
	;-------------------------------------------------------------------------------
	; Routine to run on after data fields of the parameter input form
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new arrData
	
	if '$data(YMFELD) kill ^CacheTempAccounts(YUSER)
	 
	if YSEITE=1 {
	 	do UpdateSelected(.arrData)
	 	write "<b>"_$$$Text("Fin01037")_"</b>",! ;Reporting Period
		write "<table style='font-size:14px'>",!
		write "<tr><td>",!
		write "<input readonly style='background-color:lightgrey' size=70 name='ReportingPeriod'>",!
		write "</td></tr>",!
		write "</table>",!
			
	 	write "<B>"_$$$Text("Fin01033")_"</B>",! ;Accounts Selected
		write "",!
		write "<table style='font-size:14px'>",!
		write "<tr>",!
		write "<td><input readonly style='background-color:lightgrey' size=10 name='AccountsSelectedCounter' value='"_arrData("AccountsSelectedCounter")_"'>",!
		write "<div id='StatusMessage' style='display:inline;'></div>",!
		write "</td></tr>",!
		write "<tr>",!
		write "<td><textarea readonly style='background-color:lightgrey' cols=95 rows=25 name='AccountsSelected'></textarea></td>",!
		write "</tr>",!
		write "</table>",!
		
		$$$StartScript()
		write "document.WWW2.AccountsSelected.value="""_arrData("AccountsSelected")_""";",!
		$$$EndScript()
		
		do ReportingPeriodMessage()
	}
	
	quit
	
UpdateSelected(parrData)
	/*------------------------------------------------------------------------------
	; Update current data selected accounts
	;
	; Params:
	;
	; ByRefs: parrData		: The array with the account data
	;
	; Returns:
	;
	; History:
	; 19-Jul-2006	RPW			SR14861: Handle 32000 character limit!
	; 24-May-2006	Steve S		SR14525: Created
	;-----------------------------------------------------------------------------*/
	new idAccount,intCount,strAccounts,strName,blnLimit,strText
	new strDetail
	
	set intCount=0
	set idAccount=""
	
	set strAccounts=""
	set blnLimit=$$$NO
	
	for {
		set idAccount=$order(^CacheTempAccounts(YUSER,idAccount))
		quit:(idAccount="")
		
		set intCount=intCount+1
		
		if (intCount<=500) {
			set strDetail=$justify(idAccount,30) // SR14861
			set strName=$$$FINGLAccountDescription($get(^FINGLAccount(YM,idAccount,1)))
			if strName="" set strName="---"
			set strDetail=strDetail_": "_strName_"\n" // SR14861
			
			// SR14861
			if ($length(strAccounts)+$length(strDetail))<32000 {
				set strAccounts=strAccounts_strDetail
			}
		} else {
			if 'blnLimit {
				set blnLimit=$$$YES
				set strText=$zconvert($$$Text("Fin00967"),"U")  ;Only displaying first 500 entries
				set strAccounts=$justify(strText,5)_"\n"_strAccounts
			}	
		}
	}
	
	set parrData("AccountsSelected")=strAccounts
	set parrData("AccountsSelectedCounter")=intCount
	
	quit
	
DefaultStartingYear(pidPeriodType="")
	;-------------------------------------------------------------------------------
	; Gets the default starting year.
	;
	; Params:	pidPeriodType		: Period type to use
	;
	; ByRefs:
	;
	; Returns: intYear
	;
	; History:
	; 03-Jul-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new dteToday,intYear,idPeriod,intCurYear,lstYears,strStatus
 	
	set dteToday	= +$horolog
	set intCurYear	= $$$DateYear(dteToday)
	
	if pidPeriodType="" set pidPeriodType=$$DefaultPeriod^FINGLPeriod()
	
	set strStatus = $$GetPeriodForDateType^FINGLPeriod(pidPeriodType,dteToday,$$$YES,.idPeriod)
	
	if (idPeriod'="") {
		set intYear=$$$FINGLPeriodYear1($get(^FINGLPeriod(YM,idPeriod,1)))
	} else {
		set lstYears=$$GetYearsForPeriod^FINGLPeriod(pidPeriodType,,$$$NO)
		if $listfind(lstYears,intCurYear) {
			set intYear=intCurYear	
		} else {
			set intYear="" // not found, no default to assign
		}
	}
 
	quit intYear
	
	
OnBlurPeriodType(pYINHALT,pYOLDV)
	;-------------------------------------------------------------------------------
	; Routine to run on blur of the period type field
	;
	; Params: pYINHALT		: The inputted value
	; 		  pYOLDV		: The previous value
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new idPeriodType
 
	if $get(pYINHALT)'=$get(pYOLDV) { // if there's a change
		set idPeriodType=$get(pYINHALT)
		if idPeriodType="" {
			$$$Alert("Fin00772")  ;Please Select a period type first.
			do PopulateDataField^COMUtils(YFORM,YLFN,pYOLDV,"M")
		} else {
			do PopulateYear(idPeriodType)
			do PopulatePeriod(idPeriodType,"",$$$YES)
			do PopulatePeriod(idPeriodType,"",$$$NO)
		}
	}
 
	quit
	
	
PopulateYear(pidPeriodType)
	;-------------------------------------------------------------------------------
	; Populate the year drop-down for the selected period type
	;
	; Params: pidPeriodType		: The period type
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 03-Jul-2006	Steve S		Show Year as "abcd - " to be consistant.
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new lstYears,idx,intYear
 
	set lstYears=$$GetYearsForPeriod^FINGLPeriod(pidPeriodType,,$$$NO)
	do StartCombo^COMCombo("document.WWW2.Y"_YFORM_"M5","",1)
	
	for idx=1:1:$listlength(lstYears) {
		set intYear=$listget(lstYears,idx)
		if (intYear'="") do AddOption^COMCombo(intYear,intYear_" - ")
	}
	
	do StopCombo^COMCombo()
	do PopulateDataField^COMUtils(YFORM,5,"","M")
	do PopulateDataField^COMUtils(YFORM,6,"","M")
	do PopulateDataField^COMUtils(YFORM,7,"","M")
	
	quit
	
	
PopulatePeriod(pidPeriodType,pintYear,pblnFrom=$$$YES)
	;-------------------------------------------------------------------------------
	; Code to populate the from/to period drop downs
	;
	; Params: pidPeriodType	: The period type
	; 		  pintYear		: The Year in that period
	; 		  pblnFrom		: Whether to look at 'from' or 'to'
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new lstPeriods,idx,idPeriod,objFINGLPeriod,dteStart,dteEnd,strDesc,intField
 
	set intField=$case(pblnFrom,$$$YES:6,:7)
	
	set lstPeriods=$$GetPeriodsForYear^FINGLPeriod(pidPeriodType,pintYear)
	do StartCombo^COMCombo("document.WWW2.Y"_YFORM_"M"_intField,"",1)
	
	for idx=1:1:$listlength(lstPeriods) {
		set idPeriod=$listget(lstPeriods,idx)
		if idPeriod'="" {
			set objFINGLPeriod	= $get(^FINGLPeriod(YM,idPeriod,1))
			set dteStart		= $$$FINGLPeriodStartDate(objFINGLPeriod)
			set dteEnd			= $$$FINGLPeriodEndDate(objFINGLPeriod)
			set strDesc=$$$Text($listbuild("Fin01031",$$^WWWDATE(dteStart),$$^WWWDATE(dteEnd)))  ;%1 to %2
			do AddOption^COMCombo(idPeriod,idPeriod_" - "_$zcvt(strDesc,"o","JS"))
		}
	}
	
	do StopCombo^COMCombo()
 
	quit
	
	
OnBlurYear(pYINHALT,pYOLDV)
	;-------------------------------------------------------------------------------
	; Code to run on blur of the year field
	;
	; Params: pYINHALT	: The new value
	; 		  pYOLDV	: The old value
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new intYear,idPeriodType
 
	if $get(pYINHALT)'=$get(pYOLDV) { // if there's a change
		set intYear=$get(pYINHALT)
		if intYear'="" {
			set idPeriodType=$piece(YMFELD,Y,4)
			do PopulatePeriod(idPeriodType,intYear,$$$YES)
			do PopulatePeriod(idPeriodType,intYear,$$$NO)
			do PopulateDataField^COMUtils(YFORM,6,"","M")
			do PopulateDataField^COMUtils(YFORM,7,"","M")
			do ReportingPeriodMessage("","")
		} else {
			$$$Alert("Fin00339")  ;Start Year Required.
			do PopulateDataField^COMUtils(YFORM,YLFN,pYOLDV,"M")	
		}
	}
 
	quit
	
	
OnBlurPeriod(pYINHALT,pYOLDV,pYLFN)
	;-------------------------------------------------------------------------------
	; Code to run on blur of the from/to period fields
	;
	; Params: pYINHALT	: The new value
	; 		  pYOLDV	: The old value
	; 		  pYLFN		: The field number (6 = from, 7 = to)
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new idPeriodFrom,idPeriodTo,dteStartFrom,dteStartTo
 
	if $get(pYINHALT)'=$get(pYOLDV) { // if there's a change
		set idPeriodFrom=$piece(YMFELD,Y,6)
		set idPeriodTo=$piece(YMFELD,Y,7)
		
		if (idPeriodFrom'="") {
			set dteStartFrom=$$$FINGLPeriodStartDate($get(^FINGLPeriod(YM,idPeriodFrom,1)))
		}
		
		if (idPeriodTo'="") {
			set dteStartTo=$$$FINGLPeriodStartDate($get(^FINGLPeriod(YM,idPeriodTo,1)))
		}
		
		if ($get(dteStartFrom)'="")&&($get(dteStartTo)'="") {
			if (dteStartFrom>dteStartTo) {
				$$$Alert("Fin01032")  ;From Period cannot be after the To Period.
				do PopulateDataField^COMUtils(YFORM,pYLFN,pYOLDV,"M")
			}
		}
		
		do ReportingPeriodMessage(idPeriodFrom,idPeriodTo)
 
	}
 
	quit
	
	
ReportingPeriodMessage(pidPeriodFrom="",pidPeriodTo="")
	;-------------------------------------------------------------------------------
	; Show the Reporting Period message (date 1 >> date 2)
	;
	; Params: pidPeriodFrom		: The from period
	; 		  pidPeriodTo		: The to period
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 06-Jun-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new dteStart,dteEnd,strText
 
	if $get(pidPeriodFrom)="" set pidPeriodFrom=$get(VORG(6))
	if $get(pidPeriodTo)="" set pidPeriodTo=$get(VORG(7))
	
	set strText=""
	
	if (pidPeriodFrom'="")&&(pidPeriodTo'="") {
		set dteStart=$$$FINGLPeriodStartDate($get(^FINGLPeriod(YM,pidPeriodFrom,1)))
		set dteEnd=$$$FINGLPeriodEndDate($get(^FINGLPeriod(YM,pidPeriodTo,1)))
		set strText=$$$Text($listbuild("Fin01031",$$$FormatDate(dteStart),$$$FormatDate(dteEnd)))  ;Reporting period: %1 to %2
	}
	
	$$$StartScript()
	write "document.WWW2.ReportingPeriod.value='"_strText_"';"
	$$$EndScript()
	
	quit
	
	
OnClickParentAccountsOnly(pblnChecked=$$$NO)
	;-------------------------------------------------------------------------------
	; Code to run on click of the Parent Account Only field
	;
	; Params: pblnChecked	: Checked or not
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 11-Dec-2006	Steve S		SR15291: Call to 'OnClickShowTransactionsByType'
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	if pblnChecked {
		do PopulateDataField^COMUtils(YFORM,9,"","M")
		do OnClickShowTransactionsByType($$$NO) //SR15291
	}
 
	quit
	
	
AccountSearch()
	;-------------------------------------------------------------------------------
	; Fire up the account selection COMView
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 03-Jul-2006	Steve S		SR14525: Extra filters
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	do Initialise^COMViewCustom("FINGLAccount","AccountSelected^FINRPGLTBInput")
	
	if $piece($$GetFormData^COMUtilForm(YFORM,"M"),Y,10) { // parents only
		do AddFilter^COMViewCustom("D"_$$$FldFINGLAccountAccountUsage,"=",$$$EnumFINGLACCOUNTUSAGEParent)
	} else {
		do AddFilter^COMViewCustom("D"_$$$FldFINGLAccountAccountUsage,"=",$$$EnumFINGLACCOUNTUSAGETransaction)
	}
	
	do AddFilter^COMViewCustom("D"_$$$FldFINGLAccountAccountType,"'=",$$$EnumFINGLACCOUNTTYPEStatistical)
	
	do Start^COMViewCustom()
	
	quit $$$OK
	
	
	
AccountSelected(pobjResultSet)
	;-------------------------------------------------------------------------------
	; Call back when an account is selected
	;
	; Params: pobjResultSet		: The resultset that has been selected
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	new idAccount,arrData
	
	while pobjResultSet.Next() {
		set idAccount=$$GetID^COMViewCustom(pobjResultSet)
		if (idAccount'="") set ^CacheTempAccounts(YUSER,idAccount)=""	
	}
	
	do UpdateSelected(.arrData)
	write "document.WWW2.AccountsSelected.value="""_arrData("AccountsSelected")_""";",!
	write "document.WWW2.AccountsSelectedCounter.value="_arrData("AccountsSelectedCounter")_";",!
 	
	quit
	
	
OnBeforeRunning()
	;-------------------------------------------------------------------------------
	; Routine to run before executing the report (checks to ensure
	; that accounts have been specified).
	;
	; Params: pobjResultSet		: The resultset that has been selected
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 24-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	if ('$data(^CacheTempAccounts(YUSER))) {
		set Q=$$$QDontSave
		do ReturnError^COMUtilError($listbuild("Fin00186"))  ;Account Required
	}
 
	quit
	
	
OnClickShowTransactionsByType(pblnChecked=$$$NO)
	;-------------------------------------------------------------------------------
	; Code to run on click of the show detail checkbox
	;
	; Params: pYINHALT		: YINHALT for the checkbox
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 11-Dec-2006	Steve S		SR15291: Renamed to 'OnClickShowTransactionsByType'
	; 26-May-2006	Steve S		SR14525: Created
	;-------------------------------------------------------------------------------
	if pblnChecked {
		;Showing transactions by type will substantially increase processing time
		do PopulateDataField^COMUtils(YFORM,10,"","M")
		write "document.getElementById('StatusMessage').innerHTML='<font color=\'red\'><b>"_$$$Text("Fin01035")_"</b></font>'"
		
	} else {
		write "document.getElementById('StatusMessage').innerHTML=''"
	}
 
	quit
]]></Routine>
</Export>