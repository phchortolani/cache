<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INIssueKit" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INIssueKit
	
#include COMSYS
#include COMConst
#include INConst
#include %occInclude
	
IsPreparable(YKEY,YFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Params:
	;	YKEY		Data key
	;	YFELD		
	;
	; ByRef :
	;	YQ
	;	
	; Returns :
	;
	; History :
	; 13-Aug-2009	GRF		Boolean macros; fixme
	; 02-Jul-2009	PPP		SR16694 : Validation of Quantities to include multiple
	; 							Line Items
	; 11-Jun-2009	DWR		SR16544 : added a validation to only allow the prepare of
	; 							a fully fulfilled requisition, dont allow partial
	; 							requisition of kits.
	; 04-Jun-2009	PPP		SR16544 : Created
	;-------------------------------------------------------------------------------
 	new arrLine,idIssueLine,idItem,objIssue,objIssueLine,sc,strStatus
 
	set sc        = $$$OK
	set strStatus = $$$OK
	
	if $$$INIssueType(YFELD)'=4	  set strStatus = $$$NO  //Not a Kit      ; FIXME : Error text? <GRF>
	if $$$INIssueStatus(YFELD)>1  set strStatus = $$$NO  //Past the Active Status

	//SR16694
	kill arrLine
	
	if $$$ISOK(strStatus) {
		set idIssueLine = ""
		for {
			set idIssueLine = $order(^INIssueLine(YM,YKEY,idIssueLine))
			quit:idIssueLine=""
		
			set objIssueLine = $get(^INIssueLine(YM,YKEY,idIssueLine,1))
			set idItem = $$$INIssueLineItem(objIssueLine)
			continue:idItem=""
			
			//Do not add copied lines
			if (idIssueLine'[".") set arrLine(idItem,1) = $get(arrLine(idItem,1)) + $$$INIssueLineQtyRequired(objIssueLine)
			set arrLine(idItem,2) = $get(arrLine(idItem,2)) + $$$INIssueLineQtyIssued(objIssueLine)
		}

		set idItem = ""
		for {
			set idItem = $order(arrLine(idItem))
			quit:idItem=""

			if $get(arrLine(idItem,1)) '= $get(arrLine(idItem,2)) {
				set strStatus = $$$MakeStatus("IN01055",idIssueLine)    // "Cannot Prepare: Kit not fully issued on line %1"
				quit
			}
		}

	}
 
	if $$$ISOK(strStatus) {
		set objIssue  = ##class(alISS.dUIssue).GetInstance("0||"_YKEY)
		
		if ($IsObject(objIssue)) {
			set sc = objIssue.IsFirmable()
			set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc,$$$NO) 
			do objIssue.%Close()
		}
 
	}
	
	$$$YQHandler(strStatus)
	quit
		
		
		
 
PrepareIssue(YKEY)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Params:
	;	YKEY		Data key
	;	YFELD		
	;
	; ByRef :
	;	YQ
	;	
	; Returns :
	;
	; History :
	; 04-Jun-2009	PPP		SR16544 : Created
	;-------------------------------------------------------------------------------
	new objIssue,strStatus
	
	set strStatus = $$$OK
	set objIssue = $get(^INIssue(YM,YKEY,1))
	
	//Open/Partial Fulfilled
	if ($$$INIssueStatus(objIssue)'=1) {
		set strStatus = $$$MakeStatus("INREQ05")           ; "Requisition is not Outstanding"
	}
 
	if $$$ISOK(strStatus) {	
		set strStatus = $$Transaction^COMTransaction("PrepareTxn^INIssueKit("""_YKEY_""")",$$$YES)
	}
	
  	if $$$ISOK(strStatus) {
	 	do ^WWWFORM
 	} else {
	 	do ReturnError^COMUtilError(strStatus)
 	}
 
 	$$$YQHandler(strStatus)
 
	quit
	
	
PrepareTxn(pidIssue)
	;-------------------------------------------------------------------------------
	; Prepares the Kit Issue
	; 1. Moves the Stock to the Despatch Storage of the Sending Location
	; 
	; Called By :
	; 	Form - INIssue
	; 	Routines -
	; 		Button from INIssue form
	;		
	; Inputs : 
	;	idIssue		- 	Id of INIssue
	;
	; ByRef :
	;
	; Returns :
	;
	; History :	
	; 04-Jun-2009	PPP		SR16544 : Created
	;-------------------------------------------------------------------------------
	new objIssue,sc,strStatus
	
	set (strStatus,sc) = $$$OK
	
	set objIssue = ##class(alISS.dUIssue).GetInstance("0||"_pidIssue)
 
	if objIssue'= $$$NULLOREF {
 		set sc = objIssue.PrepareIssue() 
		if $$$ISOK(sc) {
			set sc= objIssue.%Save()
		}
 		do objIssue.%Close()
	}
	
	if $$$ISOK(strStatus) {
 		set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc,$$$NO)
	}
	
 	quit strStatus
	
]]></Routine>
</Export>