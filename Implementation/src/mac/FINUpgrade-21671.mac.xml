<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINUpgrade" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINUpgrade

#include COMSYS
#include FINConst
	
	; ***************  Don't think any of this is used (shobby 24-Nov-2004)
 
Upgrade(pstrUpgradeTo="")
	;-------------------------------------------------------------------------------
	; Call any upgrade methods
	;
	; Returns:
	;
	; History:
	; 10-Mar-2005	RPW		Fixed TCOMMIT and TROLLBACK (SR11273)
	; 20-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new strStatus,intUpgrades
	
	set intUpgrades=0
 
	set strStatus=$$CheckUser(YBED)
	if $$$ISOK(strStatus) set strStatus=$$IsUpgradeRequired(pstrUpgradeTo)
	if $$$ISOK(strStatus) {
		tstart
		if $$$ISOK(strStatus) set strStatus=$$BlockNumbers(pstrUpgradeTo,"1.1.94",$$$NO,.intUpgrades)
		
		if $$$ISOK(strStatus) {
			if $tlevel>0 tcommit
		} else {
			trollback
		}
	}
	if $$$ISOK(strStatus)&&(intUpgrades=0) set strStatus=$listbuild("Fin00252")  ;Upgrade not required.
 
	do UpgradeLog(pstrUpgradeTo,$select($$$ISOK(strStatus):strStatus,1:$$$Text(strStatus)))
	
	quit strStatus
 
 
IsUpgradeRequired(pstrUpgradeTo)
	;-------------------------------------------------------------------------------
	; Determine if an upgrade is required.
	;
	; Returns:
	;
	; History:
	; 20-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new strVersion,objFINUpgrade,idFINUpgrade,strStatus
	
	set strStatus=$$$YES
	set strVersion=""  ;$get(^FINUpgrade("Version",YM))
	if (pstrUpgradeTo'=strVersion)&&$$CheckVersion(pstrUpgradeTo,strVersion) {
		set strStatus=$$$OK
	} elseif strVersion="" {
		set strStatus=$$$OK
	} else {
		set strStatus=$listbuild("Fin00252")  ;Upgrade not required.
	}
	quit strStatus
 
 
UpgradeLog(pstrUpgradeTo,pstrStatus)
	;-------------------------------------------------------------------------------
	; Logs details of an attempted upgrade.
	;
	; Returns:
	;
	; History:
	; 20-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new objFINUpgrade,strKey,strStatus
	
	set strStatus=$$$OK
	set objFINUpgrade=""
	set $$$FINUpgradeTimeStamp1(objFINUpgrade)=$h
	set $$$FINUpgradeUser1(objFINUpgrade)=YBED
	set $$$FINUpgradeVersion(objFINUpgrade)=pstrUpgradeTo
	set $$$FINUpgradeStatus(objFINUpgrade)=pstrStatus
	set strKey=$order(^FINUpgrade(YM,""),-1)+1
	do Save^FINSYS("FINUpgrade",strKey,objFINUpgrade)
	if $$$ISOK(strStatus) set ^FINUpgrade("Version",YM)=pstrUpgradeTo
	quit
 
 
CheckUser(pYBED)
	;-------------------------------------------------------------------------------
	; When running from the command prompt the user is not known so well will ask the
	; user to log in at this point.
	;
	; Returns:
	;
	; History:
	; 12-May-2006	RPW		SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
	; 20-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new strStatus,strUser,strPassword,objWWW013,i
	
	set strStatus=$$$OK
	if (YBED="")||(YBED="UNKNOWN") {
		set strStatus=$listbuild("Fin00251")  ;No User logged in to do upgrade.
		for i=1:1:3 {
			quit:strStatus
			read !,"Username:",strUser
			read !,"Password:",strPassword
			set strUser=$$$UPPER(strUser)
			set strPassword=$$$UPPER(strPassword)
			if strUser="" set strUser=" "
			set objWWW013=$get(^WWW013(0,strUser,1))
			if objWWW013'="" {
				if $piece(objWWW013,Y,2)=strPassword {
					set strStatus=$$$OK
					set YBED=strUser
				}
			}
		}
	}
	write !
	quit strStatus
	
	
BlockNumbers(pstrUpgradeTo="",pstrVersion,pblnRunAlways=$$$NO,pintUpgrades)
	;-------------------------------------------------------------------------------
	; The 'BlockNumber' field in FININTBatchLine was a decimal separated number with Major
	; and Minor numbers.  This has been separated into two separate fields now.
	;
	; Returns:
	;
	; History:
	; 10-Mar-2004	shobby	Corrected RebuildIndex call.
	; 20-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new strStatus,idxBatch,idxNumber,objFININTBatchLine,strBlock,strBlockMajor,strBlockMinor
	
	set strStatus=$$$OK
	if (pblnRunAlways)||($$CheckVersion(pstrUpgradeTo,pstrVersion)) {
		write !,"Upgrading BlockNumbers"
		set pintUpgrades=pintUpgrades+1
		set idxBatch=""
		for {
			set idxBatch=$order(^FININTBatchLine(YM,idxBatch))
			quit:idxBatch=""
			set idxNumber=""
			for {
				set idxNumber=$order(^FININTBatchLine(YM,idxBatch,idxNumber))
				quit:idxNumber=""
				set objFININTBatchLine=$get(^FININTBatchLine(YM,idxBatch,idxNumber,1))
				set strBlock=$$$FININTBatchLineBlockNumber(objFININTBatchLine)
				set strBlockMajor=$piece(strBlock,".",1)
				set strBlockMinor=$piece(strBlock,".",2)
				;set $$$FININTBatchLineBlockNumber(objFININTBatchLine)=strBlockMajor
				set $$$FININTBatchLineBlockNumberMajor(objFININTBatchLine)=strBlockMajor
				set $$$FININTBatchLineBlockNumberMinor(objFININTBatchLine)=strBlockMinor
				set ^FININTBatchLine(YM,idxBatch,idxNumber,1)=objFININTBatchLine
				;do Save^FINSYS("FININTBatchLine",idxBatch_","_idxNumber,objFININTBatchLine)
			}
		}
		do RebuildIndex("FININTBatchLine")
	}
	quit strStatus
	
	
ReverseBlockNumber()
	;-------------------------------------------------------------------------------
	; Reverses the data upgrade done by BlockNumbers
	;
	; Returns:
	;
	; History:
	; 23-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new strStatus,idxBatch,idxNumber,strBlock,objFININTBatchLine
	
	set strStatus=$$$OK
	set idxBatch=""
	for {
		set idxBatch=$order(^FININTBatchLine(YM,idxBatch))
		quit:idxBatch=""
		set idxNumber=""
		for {
			set idxNumber=$order(^FININTBatchLine(YM,idxBatch,idxNumber))
			quit:idxNumber=""
			set objFININTBatchLine=$get(^FININTBatchLine(YM,idxBatch,idxNumber,1))
			if objFININTBatchLine'="" {
				set strBlock=$$$FININTBatchLineBlockNumberMajor(objFININTBatchLine)
				if $$$FININTBatchLineBlockNumber(objFININTBatchLine)'="" {
					set strBlock=strBlock_"."_$$$FININTBatchLineBlockNumberMinor(objFININTBatchLine)
				}
				set $$$FININTBatchLineBlockNumber(objFININTBatchLine)=strBlock
				set ^FININTBatchLine(YM,idxBatch,idxNumber,1)=objFININTBatchLine
				w !,objFININTBatchLine
			}
		}
	}	
	do RebuildIndex("FININTBatchLine")
	quit strStatus
	
	
RebuildIndex(pstrClassName)
	;-------------------------------------------------------------------------------
	; Rebuilds the named index
	;
	; Returns:
	;
	; History:
	; 02-Mar-2005	Paul K	Reduce incidence of calling WWWVAR (SR#11305)
	; 23-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	xecute "kill ^"_pstrClassName_"s"
	if $get(Y)="" do ^WWWVAR // TODO: MUST NOT be here, if for dev purposes put in DEV code
	set VORG(1)=pstrClassName
	do ^WWWSORTGEN
	quit
 
 
CheckVersion(pstrUpgradeTo,pstrVersion)
	;-------------------------------------------------------------------------------
	; Check whether this upgrade component needs to run for this version.
	;
	; Returns:
	;
	; History:
	; 20-Feb-2004	shobby	Creation
	;-------------------------------------------------------------------------------
	new blnOK
	
	set blnOK=$$$NO
	if $piece(pstrUpgradeTo,".",1)>=$piece(pstrVersion,".",1) {
		if $piece(pstrUpgradeTo,".",2)>=$piece(pstrVersion,".",2) {      ;Minor
			if $piece(pstrUpgradeTo,".",3)>=$piece(pstrVersion,".",3) {  ;Revision
				set blnOK=$$$YES
			}
		}
	}
	
	quit blnOK
	
]]></Routine>
</Export>