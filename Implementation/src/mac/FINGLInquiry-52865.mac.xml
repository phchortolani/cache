<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLInquiry" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLInquiry
	
#include FINConst
#include COMSYS
#include COMConst
#include WWWConst
	
OnAfterDataFields(pidFINGLInquiry)
    ;-------------------------------------------------------------------------------
    ; Params: Ledger Inquiry Key
    ;
    ; History:
    ; 18-Jul-2005	PO		SR12682: Created
    ;-------------------------------------------------------------------------------
	do LoadGrid(pidFINGLInquiry)
	quit
	
	
LoadGrid(pidFINGLInquiry="") 
    ;-------------------------------------------------------------------------------
    ; Loads the Edit Grid
    ;
    ; Params: Ledger Inquiry Key
    ;
    ; History:
    ; 27-Oct-2006	JW		SR15152: Added DontUpdateContainer/StoreAll. GRIDStart macro
    ; 18-Jul-2005	PO		SR12682: Created
    ;-------------------------------------------------------------------------------
 	new YAUSWAHL,idForm
 	
 	set idForm = "FINGLInquiryLine"
 	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)	         = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)       = 290
	set $$$COMGridEditParameterGridName(YAUSWAHL)	         = idForm
	set $$$COMGridEditParameterEnabled(YAUSWAHL)             = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)	         = "FINGLInquiry"
 	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL) = $$$YES
	set $$$COMGridEditParameterDontStoreAll(YAUSWAHL)        = $$$YES
 	
    $$$GRIDStart(idForm,pidFINGLInquiry)
    
	quit
	
	
Search()
    ;-------------------------------------------------------------------------------
    ; New method to add lines to the group - uses COMView and EditGrid.
    ; Called by the "A" button to search for accounts
    ;
    ; Returns: $$$OK
    ;
    ; History:
    ; 18-Jul-2005	PO		SR12682: Created
    ;-------------------------------------------------------------------------------
	do Initialise^COMViewCustom("FINGLAccount","AccountsSelected^FINGLInquiry")
	do Start^COMViewCustom()
 
	quit $$$OK
	
	
AccountsSelected(pobjResultSet)
    ;-------------------------------------------------------------------------------
    ; Add accounts to the grid.
    ;
    ; Returns:
    ;
    ; History:
    ; 18-Mar-2010	shobby	SR15753: Remove redundant (non functional) code.
    ; 20-Oct-2005	JW		SR11573: Use Batching to add
    ; 19-Oct-2005	JW		SR13659: Now works with tab switching (macro)
	;  7-Oct-2005	JW		SR13637: WWWDATEN is not shared
    ; 18-Jul-2005	PO		SR12682: Created
    ;-------------------------------------------------------------------------------
	new idKey
 
 	$$$GRIDAddBatchStart
	while pobjResultSet.Next() {
		set idKey = $$GetID^COMViewCustom(pobjResultSet)
		$$$GRIDAddLine("",idKey)
	}
	$$$GRIDAddBatchStop
	quit
	
	
OnBeforeSave(pidFINGLInquiryKey)
    ;-------------------------------------------------------------------------------
    ; Get the grid to save its contents
    ;
    ; History:
    ; 18-Jul-2005	PO		SR12682: Created
    ;-------------------------------------------------------------------------------
	new strStatus
 
	quit:pidFINGLInquiryKey=""
 
	set strStatus = $$$GRIDSave(pidFINGLInquiryKey)
 
	if $$$ISOK(strStatus) {
		set Q = $$$QSave
	} else {
		set Q = $$$QDontSave
	}
	quit
	
	
TransactionList(pidFINGLInquiry="")
    ;-------------------------------------------------------------------------------
    ; Throw up COMView showing all the transactions for the selected accounts
    ;
    ; Params: Ledger Inquiry key
    ;
    ; History:
    ; 02-Nov-2005	PO		SR13578: Call to TransactionSelected
    ; 19-Jul-2005	PO		SR12682: Created
    ;-------------------------------------------------------------------------------
	new strSQL
 
	do Initialise^COMViewCustom("FINGLInquiryLine")
	do AddFilter^COMViewCustom("P"_$$$FldFINGLInquiryLineLedgerInquiryNumber,"=",pidFINGLInquiry)
 
	set strSQL = $$GenerateSQLForFilter^COMViewSQL("FINGLInquiryLine","P"_$$$FldFINGLInquiryLineAccountNumber)
	
	do Initialise^COMViewCustom("FINGLTranLine","TransactionSelected^FINGLInquiry") ;,,,$$$YES
	do AddFilter^COMViewCustom("D"_$$$FldFINGLTranLineAccount,"in",strSQL,,$$$YES)
	do Start^COMViewCustom() ;,,$$$YES
 
	quit
	
	
TransactionSelected(pobjResultSet)
    ;-------------------------------------------------------------------------------
    ; Throw up a form showing the transaction the transaction line is part of.
    ;
    ; Params: pobjResultSet
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 03-Nov-2005	PO		SR13578: Created
    ;-------------------------------------------------------------------------------
	new idKey,idTransaction
 
	if pobjResultSet.Next() {
		set idKey = $$GetID^COMViewCustom(pobjResultSet)
		set idTransaction = $$$KEY1(idKey)
 		
		do GoToForm^COMUtilForm("FINGLTran",idTransaction,,,$$$YES,"FINGLInquiryTransactionListing")
	}
	quit
	
	
DisableButtonforGrid(pidFINGLInquiryKey="",pidLangText)
    ;-------------------------------------------------------------------------------
    ; Disable button if Edit Grid does not contain any data
    ;
    ; Params: Ledger Inquiry key, Language Text ID
    ;
    ; History:
    ; 01-Mar-2006	PO		SR14225: Pass in lang text id.
    ; 19-Jul-2005	PO		SR12682: Created
    ;-------------------------------------------------------------------------------
	new strStatus,idFINGLInquiry,idFINGLInquiryLine
 
	set strStatus = $$$OK
 
	if $$GetKey^COMUtilClass(pidFINGLInquiryKey,,,.idFINGLInquiry,.idFINGLInquiryLine) {
		if '$data(^FINGLInquiryLine(0,idFINGLInquiry)) {
			;Current possible values for pidLangText
			;Fin00849  ;To show a list of transactions you need to select a group of accounts.
			;Fin00995  ;To show a list of Interface Batch Lines you need to select a group of accounts.
			set strStatus = $listbuild(pidLangText)
		}
	}
 
	if $$$ISOK(strStatus) {
		set Q = $$$QSave
	} else {
		set Q = $$$QDontSave_" "_$$$Text(strStatus)
	}
	quit
	
	
InterfaceList(pidFINGLInquiry="")
    ;-------------------------------------------------------------------------------
    ; Throw up COMView showing all the interface lines for the selected accounts
    ;
    ; Params: Ledger Inquiry key
    ;
    ; History:
    ; 27-Feb-2006	PO		SR14225: Created
    ;-------------------------------------------------------------------------------
	new strSQL
	
	do Initialise^COMViewCustom("FINGLInquiryLine")
	do AddFilter^COMViewCustom("P"_$$$FldFINGLInquiryLineLedgerInquiryNumber,"=",pidFINGLInquiry)
 
	set strSQL = $$GenerateSQLForFilter^COMViewSQL("FINGLInquiryLine","P"_$$$FldFINGLInquiryLineAccountNumber)
 
	do Initialise^COMViewCustom("FININTBatchLine","InterfaceSelected^FINGLInquiry") ;,,,$$$YES
	do AddFilter^COMViewCustom("D"_$$$FldFININTBatchLineAccount,"in",strSQL,,$$$YES)
	do Start^COMViewCustom() ;,,$$$YES
	quit
	
	
InterfaceSelected(pobjResultSet)
	;-------------------------------------------------------------------------------
	; Throw up a form showing the source record that was used to create the
	; Interface Batch Line clicked on.
	; If the Interface Batch Block does not include Source Details instead show the
	; Interface Batch Block that includes the Interface Batch Line clicked on.
	;
	; Params: pobjResultSet
	;
	; ByRefs: None
	;
	; Returns: Nothing
	;
	; History:
	; 28-Feb-2006	PO		SR14225: Created
	;-------------------------------------------------------------------------------
	new idBatch,idBlock,idKey,idLine,objFININTBatchBlock,objFININTBatchLine
	new strSourceForm,strSourceRecord
	
	if pobjResultSet.Next() {
		set idKey   = $$GetID^COMViewCustom(pobjResultSet)
		set idBatch = $$$KEY1(idKey)
		set idLine  = $$$KEY2(idKey)
 
 		set objFININTBatchLine = $get(^FININTBatchLine(0,idBatch,idLine,1))
 		set idBlock = $piece($$$FININTBatchLineBlockNumber(objFININTBatchLine),".",1)
 
 		set objFININTBatchBlock = $get(^FININTBatchBlock(0,idBatch,idBlock,1))
 		set strSourceForm       = $$$FININTBatchBlockSourceForm(objFININTBatchBlock)
 		set strSourceRecord     = $$$FININTBatchBlockSourceRec(objFININTBatchBlock)
 
 		if (strSourceForm'="") && (strSourceRecord'="") {
	 		do GoToForm^COMUtilForm(strSourceForm,strSourceRecord,,,$$$YES,"FINGLInquiryInterfaceListing")
 		} else {
			do GoToForm^COMUtilForm("FININTBatch",idBatch,2,idBlock,$$$YES,"FINGLInquiryInterfaceListing")
 		}
	}
	quit
	
]]></Routine>
</Export>