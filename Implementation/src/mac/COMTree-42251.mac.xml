<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMTree" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMTree
	;-------------------------------------------------------------------------------
	; This MAC routine displays tree information. A dummy template 
	; exists at the bottom of this routine to indicate usage.
	;
	; History:
	; 10-Dec-2004	GRF		SR11208 : Replace include ref to "SYSDisc" with "COMSYS"
	; 							which now includes "Storage" definition as well.
	; 24-May-2004	Paul K	Added "TopNode" macro.
	; 03-Sep-2003	Paul K	bug with Override ID in show node
	; 01-Sep-2003	Paul K	Added OverRide ID prop to get around limitations
	; 							of multi key trees.
	; 21-Aug-2003	Paul K	Modified storage to use YUSER instead of $job
	;-------------------------------------------------------------------------------
#include COMSYS
	
#define TopNode "TopNode"
	
DisplayGlobal(Heading,Global,StartKey,pblnForceRight=$$$NO)
	;-------------------------------------------------------------------------------
	; Displays any complex data in Tree view
	; 
	;  ***************************************************
	;    WARNING : Ensure StartKey uses 0 in place of YM
	;              when Global specifies a shared class.
	;  ***************************************************
	;           
	; History:
	; 15-Mar-2010	GRF		SR17234:Add pblnForceRight for Event Queue
	;-------------------------------------------------------------------------------
	new cmd,result
	
	set result=0
	set cmd="s result=$d("_Global_"("_StartKey_"))"
	xecute cmd
	
	if (result) {
		write "&nbsp;<FONT SIZE=2><B>"_Heading_"</B></FONT>"
		do StartTree($get(YPARA))
		do DisplayGlobalNode(Global,StartKey,"")
	;	do StopTree($$$YES)  ; SR17234
		do StopTree($$$YES,,,pblnForceRight)
	}
	quit
	
	
DisplayGlobalNode(Global,StartKey,NodeKey)
	new ChildData,ChildKey,cmd,NewKey
	
	set ChildKey = ""
	for {
		if (NodeKey'="") {
			set NewKey = NodeKey_","""_ChildKey_""""
		} else {
			set NewKey = """"_ChildKey_""""
		}
		set cmd = "s ChildKey=$o("_Global_"("_StartKey_","_NewKey_"))"
		xecute cmd
		quit:ChildKey=""
		
		if (NodeKey'="") {
			set NewKey = NodeKey_","""_ChildKey_""""
		} else {
			set NewKey = """"_ChildKey_""""
		}
		set ChildData = ""
		set cmd       = "s ChildData=$g("_Global_"("_StartKey_","_NewKey_"))"
		xecute cmd
		
		do AddNode($translate(NodeKey,""""),$translate(NewKey,""""),ChildKey,ChildKey,"","","",0,ChildData,1)
		do DisplayGlobalNode(Global,StartKey,NewKey)
	}
	quit
	
	
StartTree(pidLastExpanded)
	if pidLastExpanded'="" {
		if $data($$$Storage("Expand",pidLastExpanded)) {
			kill $$$Storage("Expand",pidLastExpanded)
			
		} else {
			set $$$Storage("Expand",pidLastExpanded) = ""
		}
	}
	quit
	
	
StopTree(pblnIdOrder,pidHeadNode="",pblnFixedTree=$$$NO,pblnForceRight=$$$NO)
	;-------------------------------------------------------------------------------
	; Finish defining the tree and draw it.
	;
	; Params:	pblnIdOrder - whether to display in id or text order
	; 			pidHeadNode
	; 			pblnFixedTree - Remove links from +,- pics
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 15-Mar-2010	GRF		SR17234:Add pblnForceRight for Event Queue
	; 23-Nov-2006	JW		BR014285: Doco
    ; 10-Feb-2005	RobertW	Added parameter pblnFixedTree
	;--------------------------------------------------------------------------
	;
	if pidHeadNode="" set pidHeadNode = $$$TopNode
	write YCR,"<NOBR>"
	write YCR,"<TABLE"
 	write YCR,"BORDER=0"
	write YCR,"NOWRAP"
 	write YCR,"WIDTH=100%"
 	write YCR,"bgcolor="""_YGRAY_""""
 	do FARBE^WWWTAB
 	write YCR,"CELLSPACING=0>"
 	
 	;do DisplayNodes(pblnIdOrder,pidHeadNode,,,pblnFixedTree)  ; SR17234
 	do DisplayNodes(pblnIdOrder,pidHeadNode,,,pblnFixedTree,pblnForceRight)
 	
 	write YCR,"</TABLE>"
	write YCR,"</NOBR>"
	do KillNodes()
	quit
	
	
AddNode(pidParent="",pidNode="",pstrTitle="",pstrText="",pstrImage="",pstrForm="",pstrParam="",
		pblnHighLight="",pstrExtraData="",pblnLinkStopped="",plngPage="",plngOverRideId="",pblnExpand="",pblnSpan="")
	;-------------------------------------------------------------------------------
	; Inputs :
	;   1  pidParent		: 
	;   2  pidNode			: 
	;   3  pstrTitle		: 
	;   4  pstrText			: 
	;   5  pstrImage		: 
	;   6  pstrForm			: 
	;   7  pstrParam		: 
	;   8  pblnHighLight	: Display in bold
	;   9  pstrExtraData	: 
	;  10  pblnLinkStopped	: Don't link from this text to another form if $$$YES
	;  11  plngPage			: 
	;  12  plngOverRideId	: 
	;  13  pblnExpand		: Vary +/- indented tree (can also be null)
	;  14  pblnSpan			: How many TDs to span
	; 
	; History
	; 30-Jun-2006	JW		SR14528: Added pblnSpan
	; 10-Nov-2004	GRF		SR11205: Doco; Boolean => Macro
	; 18-Aug-2004	shobby	pblnExpand (SR10265)
	;-------------------------------------------------------------------------------
	if pidParent="" set pidParent = $$$TopNode
	if pstrText=""  set pstrText  = "&nbsp"
	
	set $$$Storage("Id",pidParent,pidNode)    = $listbuild(pidNode,pstrText,pstrTitle,pstrImage,pstrForm,pstrParam,pblnHighLight,pstrExtraData,pblnLinkStopped,plngPage,plngOverRideId,pblnSpan)
	set $$$Storage("Text",pidParent,pstrText) = $listbuild(pidNode,pstrText,pstrTitle,pstrImage,pstrForm,pstrParam,pblnHighLight,pstrExtraData,pblnLinkStopped,plngPage,plngOverRideId,pblnSpan)
	if pblnExpand=$$$YES {
		set $$$Storage("Expand",pidNode) = ""
	} elseif pblnExpand=$$$NO {
		kill $$$Storage("Expand",pidNode)
	}
	quit
	
	
DisplayNodes(pblnIdOrder,pidHeadNode=$$$TopNode,plngLevel=0,plstEndStatus="",pblnFixedTree=$$$NO,pblnForceRight=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Displays all of the subnodes for a node.
    ;
    ; Returns:
    ;
    ; History:
	; 15-Mar-2010	GRF		SR17234:Add pblnForceRight for Event Queue
    ; 15-Jun-2005	GRF		Change ! to ||
    ; 10-Feb-2005	RobertW	Added parameter pblnFixedTree which will stop the HTML
	; 							being written out for the + and - on the tree view.
    ; 15-Apr-2004	Shobby	Fixed sorting by Text. (Only supports unique text).
    ;-------------------------------------------------------------------------------
	;
	new strIndex,idNode,blnAtEnd,idNode1
	
	if pblnIdOrder {
		set strIndex = "Id"
	} else {
		set strIndex = "Text"
	}
	
	;Loop through head node, then through all lower nodes that are expanded
	set idNode = ""
	for {
		set idNode = $order($$$Storage(strIndex,pidHeadNode,idNode))
		quit:idNode=""
		
		set blnAtEnd = ($order($$$Storage(strIndex,pidHeadNode,idNode))="")
		if pblnIdOrder {
			set idNode1 = idNode
		} else {
			set idNode1 = $listget($get($$$Storage(strIndex,pidHeadNode,idNode)),1)
		}
	;	do ShowNode(pidHeadNode,idNode,strIndex,plngLevel,plstEndStatus_$listbuild(blnAtEnd),pblnFixedTree) ; SR17234
		do ShowNode(pidHeadNode,idNode,strIndex,plngLevel,plstEndStatus_$listbuild(blnAtEnd),pblnFixedTree,pblnForceRight)
		if $data($$$Storage("Expand",idNode1)) || (plngLevel=0) {
			do DisplayNodes(pblnIdOrder,idNode1,plngLevel+1,plstEndStatus_$listbuild(blnAtEnd),pblnFixedTree,pblnForceRight)
		}
	}
	quit
	
	
KillNodes()
	kill $$$Storage("Id")
	kill $$$Storage("Text")
	kill $$$Storage("Used")
	quit
	
	
ShowNode(pidHeadNode,pidNode,pstrIndex,plngLevel,plstEndStatus,pblnFixedTree=$$$NO,pblnForceRight=$$$NO)
	;-------------------------------------------------------------------------------
	; Show one node in the tree.
	;  
	; History:
	; 15-Mar-2010	GRF		SR17234:Add pblnForceRight for Event Queue
	; 30-Jun-2006	JW		SR14528: Added blnSpan
    ; 10-Feb-2005	RobertW	Added parameter pblnFixedTree which will stop the HTML
	; 							being written out for the + and - on the tree view.
	; 10-Nov-2004	GRF		SR11205 : Remove "p" prefix from pblnLinkStopped
	; 07-Jul-2004	Paul K	Don't wrap the nodes (makes the tree look crappy)
	; 02-Jul-2003	Paul K	Don't show branching or add link to nodes that have
	; 							already been added
	; 18-Jun-2003	shobby	Bolded extradata if row is selected.
	; 18-Jun-2003	shobby	Handle multiple extradata columns
	;-------------------------------------------------------------------------------
	new blnHighLight,blnLinkStopped,blnLowerNodes,blnNodeAlreadyAdded,blnSpan,idNode
	new lngOverRideId,lngPage,loop,objNodeInfo
	new saveYBACK,saveYFORM,saveYKEY,saveYPARA,saveYSEITE
	new strBack,strData,strExtraData,strForm,strImage,strParam,strText,strTitle
	
	set saveYFORM  = $get(YFORM)
	set saveYKEY   = $get(YKEY)
	set saveYBACK  = $get(YBACK)
	set saveYPARA  = $get(YPARA)
	set saveYSEITE = $get(YSEITE)
	
	set objNodeInfo    = $$$Storage(pstrIndex,pidHeadNode,pidNode)
	set idNode         = $listget(objNodeInfo,1)
	set strText        = $listget(objNodeInfo,2)
	set strTitle       = $listget(objNodeInfo,3)
	set strImage       = $listget(objNodeInfo,4)
	set strForm        = $listget(objNodeInfo,5)
	set strParam       = $listget(objNodeInfo,6)
	set blnHighLight   = $listget(objNodeInfo,7)
	set strExtraData   = $listget(objNodeInfo,8)
	set blnLinkStopped = $listget(objNodeInfo,9)
	set lngPage        = $listget(objNodeInfo,10)
 	set lngOverRideId  = $listget(objNodeInfo,11)
 	set blnSpan		   = $listget(objNodeInfo,12)
 	
 	write YCR,"<TR>"
 	write YCR,"<TD nowrap>"
	write "<FONT SIZE=2>"
	
	set blnNodeAlreadyAdded = $data($$$Storage("Used",idNode))
	set $$$Storage("Used",idNode) = ""
	
	set blnLowerNodes = ((pidHeadNode'=0) && ($order($$$Storage(pstrIndex,idNode,""))'="") && 'blnNodeAlreadyAdded)
	
	do ShowBranch(idNode,plngLevel,blnLowerNodes,$data($$$Storage("Expand",idNode)),plstEndStatus,pblnFixedTree)
	
	set strBack=YBACK
	if ($piece(strBack,",",$length(strBack,",")-1)'=YFORM) && (YFORM'=strForm) set strBack=strBack_YFORM_","  ;only add YFORM to the stack if not last element
	
	write YCR,"<A "
	if strTitle'="" write "TITLE="""_strTitle_""" "
	if ('blnLinkStopped && 'blnNodeAlreadyAdded) {
		write "HREF="_""""_YAKTION_"EP=WWWFORM&amp;YFORM="_strForm_"&amp;YKEY="_$select(lngOverRideId="":idNode,1:lngOverRideId)_"&amp;YBACK="_strBack
		if strParam'=""      write "&amp;YPARA="_strParam
		if $get(lngPage)'="" write "&amp;YSEITE="_lngPage
		set YFORM  = ""
		set YKEY   = ""
		set YBACK  = ""
		set YPARA  = ""
		set YSEITE = ""
		do ^WWWCGI
		set YFORM  = saveYFORM
		set YKEY   = saveYKEY
		set YBACK  = saveYBACK
		set YPARA  = saveYPARA
		set YSEITE = saveYSEITE
		write """"
	}
	write ">"
	
	do ShowImage(strImage,blnHighLight,blnNodeAlreadyAdded)
	if blnHighLight write "<B>"
	write strText
	if blnHighLight write "</B>"
 	
 	if ('blnLinkStopped && 'blnNodeAlreadyAdded) write "</A>"
 	
 	write YCR,"</FONT>"
	write "</TD>"
	
	if blnNodeAlreadyAdded {
		write YCR,"<TD WIDTH=20></TD>"
		write YCR,"<TD>"_$$DecodeError^COMUtilError($listbuild("Com00079"))_"</TD>"  ; Data Element Already in Tree")
		
	} else {
		if '$$IsList^COMUtils(strExtraData) set strExtraData=$listbuild(strExtraData)
		for loop=1:1:$listlength(strExtraData) {
			set strData = $listget(strExtraData,loop)
			write YCR,"<TD WIDTH=20></TD>"
		;	write YCR,"<TD nowrap ALIGN="_$select((strData=+strData)||($extract(strData)="$"):"RIGHT",1:"LEFT")  ; SR17234 vvv
			if (strData=+strData) || ($extract(strData)="$") || pblnForceRight {
				write YCR,"<TD nowrap ALIGN=RIGHT"
			} else {
				write YCR,"<TD nowrap ALIGN=LEFT"
			}
			if blnSpan'="" write " colspan="_(blnSpan*2-1)	//SR14528 - skip extra TDs
			write ">"
			write "<FONT SIZE=2>"
			if blnHighLight write "<B>"
			write $listget(strExtraData,loop)
			if blnHighLight write "</B>"
		 	write YCR,"</FONT>"
		 	write "</TD>"
		} 	
	}
 	write YCR,"</TR>"
	quit
	
	
ShowBranch(pidNode,plngLevel,pblnLowerNodes,pblnShowMinus,plstEndStatus,pblnFixedTree=$$$NO)
	;--------------------------------------------------------------------------
	;
	; History:
	; 15-Jul-2005	RobertW	SR12981: use $increment instead of $i for code check reasons
    ; 10-Feb-2005	RobertW	Added parameter pblnFixedTree which will stop the HTML
	; 							being written out for the + and - on the tree view.
	;--------------------------------------------------------------------------
	new lngLevel,idNode
	
	for lngLevel=1:1:plngLevel {
		if lngLevel=plngLevel {
			if pblnLowerNodes {
				if 'pblnFixedTree {
					set idNode=$increment(^CacheTemp(YUSER,"Tree1"))
					write YCR,"<A HREF="_""""_YAKTION_"EP=WWWFORM&amp;YFORM="_YFORM_"&amp;YKEY="_YKEY_"&amp;YBACK="_YBACK_"&amp;YPARA="_pidNode_"&amp;YSEITE="_YSEITE
					new YFORM,YKEY,YBACK,YPARA
					do ^WWWCGI
					write """"_">"
				}
				if pblnShowMinus {
					if $listget(plstEndStatus,lngLevel+1)  do ShowImage("eminus.gif")
					if '$listget(plstEndStatus,lngLevel+1) do ShowImage("minus.gif")
					}
				if 'pblnShowMinus {
					if $listget(plstEndStatus,lngLevel+1)  do ShowImage("eplus.gif")
					if '$listget(plstEndStatus,lngLevel+1) do ShowImage("plus.gif")
				}
				if 'pblnFixedTree {
					write YCR,"</A>"
				}
			} else {
				if lngLevel'=1 write "&nbsp;"
				if $listget(plstEndStatus,lngLevel+1)  do ShowImage("lplus.gif")
				if '$listget(plstEndStatus,lngLevel+1) do ShowImage("tplus.gif")
			}
		} else {
			if lngLevel'=1 write "&nbsp;"
			if $listget(plstEndStatus,lngLevel+1)  do ShowImage("bplus.gif")
			if '$listget(plstEndStatus,lngLevel+1) do ShowImage("iplus.gif")
			
		}
	}
	quit
	
	
ShowImage(pstrImage,pblnHighLight=0,pblnNodeAlreadyAdded=0)
	;-------------------------------------------------------------------------------
	;
	; History
	; 12-May-2006	RPW		SR14609: Do not use $$Upper^COMUtils, use $$$UPPER
	; 02-Jul-2003	Paul K	Added Code to show error pic if node already added.
	; 19-Jun-2003	shobby	Put in a special code to suppress branch image
	;-------------------------------------------------------------------------------
	if $$$UPPER(pstrImage)="NOIMAGE" {
		set pstrImage=""
	} else {
		if pstrImage="" if pblnHighLight  set pstrImage="oopen.gif"
		if pstrImage="" if 'pblnHighLight set pstrImage="oclose.gif"
	}
	if pblnNodeAlreadyAdded set pstrImage="xxclose.gif"
	if pstrImage'="" {
		set icone=""
		if $$MenuType^WWW013()=14{
			set icone = $$traducaoIcone^WWWFORMCOMMON(pstrImage)
		}
		if icone'=""{
			if disabledButton set corBotao="secondary"
			write "<i class='"_icone_"'></i>"
		}else{			
			write "<IMG SRC="""_YGIF_pstrImage_""" align=top border=0 vspace=0 hspace=0>"
		}
	}
	quit
	
	
TreeTemplate
	do StartTree^COMTree(YPARA)
	for {
		do AddNode^COMTree("pidParent","pidNode","pstrTitle","pstrText","pstrImage","pstrForm=""","pstrParam=""","pblnSelected","pstrExtraData")
	}
	do StopTree^COMTree("pblnIdOrder","pidHeadNode=""")
	;  or
	;do StopTree^COMTree("pblnIdOrder","pidHeadNode=""",,$$$YES)  if data is to be forced to the right regardless of numeric/string - see DCM event queue
	quit
	
]]></Routine>
</Export>