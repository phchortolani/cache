<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMViewPrint" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMViewPrint
    ;-------------------------------------------------------------------------------
	; Printing of COM View
    ;-------------------------------------------------------------------------------
#include COMSYS
	
Print(pstrOption=0)
    ;-------------------------------------------------------------------------------
    ; Callback from the print button to print the current selection.
    ;
    ; Returns:1
    ;
    ; History:
    ; 19-May-2010	FIS		SR17330: various fixes for firefox compatibility
    ; 16-Apr-2010	shobby	SR17253: Firefox compatibility.
    ; 04-Jul-2005	PO		SR12565: Extended confirmation code & reworked printing
    ; 							code for case pstrOption=0, other was sometimes
    ; 							erroring out.
    ; 01-Jun-2005 	PK/Sh	SR12469: Test whether a Print Dialog box is on screen
    ; 							already before loading another one.
    ; 31-May-2005 	PK/Sh	SR12469: Ignore errors generated by ExecWB (clicking
    ; 							cancel on save generates a Javascript error)
    ; 14-Dec-2004	PK		Created
    ;-------------------------------------------------------------------------------
	new strConfirmAll,strConfirm,strHeader
	
	set strConfirmAll = $$$Text("Com00123")  ; "Print all records? Selecting yes may take time for all records to be displayed."
	set strHeader     = $$$Text("Com00124")  ; "Print Confirm"
	set strConfirm    = $$$Text("Com00203")  ; "Print records?"

	&js<
	var result=7;
	if (bdy.Finished!=true) {
		result=VBConfirm("#(strConfirmAll)#",35,"#(strHeader)#");
	} else {
		result=VBConfirm("#(strConfirm)#",36,"#(strHeader)#");
		if (result == 7) result = 0;
	}
 
	if (result==6) AddMore(3);
	>
 
	if pstrOption=0 { // SR12565: This alternative is dirty but it works. 
		&js<
		if ((result==6)||(result==7)) {
			try {
				if (PrintWindow!=null) {
					PrintWindow.focus();
				} else {
					createAndPrintWindow();
				}
			}
			catch (e) {
				createAndPrintWindow();
			}
		}
		function createAndPrintWindow() {
			var strPrintCode="<"+"script type='text/javascript'><!--\nwindow.print();\n//--><"+"/script>";
	
			PrintWindow=window.open('','PrintWindow','width=570,height=530,resizable=yes,scrollbars=no,status=no');
			PrintWindow.document.open();
			PrintWindow.document.write(bdyDiv.innerHTML+strPrintCode);
		//SR17330 vvv
			PrintWindow.document.getElementById('hdrbdy').style.display='block';
			PrintWindow.document.getElementById('hdrbdy').style.backgroundColor='lightgrey';
			PrintWindow.document.getElementById('hdrbdy').style.fontSize='12px';
			PrintWindow.document.getElementById('hdrbdy').parentNode.style.tableLayout='fixed';
			PrintWindow.document.getElementById('bdy').style.fontSize='12px';
			PrintWindow.document.getElementById('bdy').parentNode.style.tableLayout='fixed';
	
			PrintWindow.focus();
			PrintWindow.document.close();
			PrintWindow.close();
		}
		>

	} else {
		&js<
		if ((result==6)||(result==7)) {
			var PrintWindow=window.open('','PrintWindow','width=700,height=530,resizable=yes,scrollbars=yes,status=no');
 
			PrintWindow.document.writeln('<script>');
			PrintWindow.document.writeln('function doInsertAdjacentElement(pObject,pstrWhere,pInsert) {'
											+ 'if (pObject.insertAdjacentElement) {'
											+ '   pObject.insertAdjacentElement(pstrWhere,pInsert)'
											+ ' } else {'
											+ ' switch(pstrWhere) {'
											+     'case "BeforeBegin":'
											+       'pObject.parentNode.insertBefore(pInsert, pObject); break;'
											+     'case "AfterEnd":'
											+ '      pObject.parentNode.insertBefore(pInsert, pObject.nextSibling);'
											+ '    }'
											+ ' }'
											+ '}');		//SR17330
			PrintWindow.document.writeln('function ieExecWB( intOLEcmd, intOLEparam )');
			PrintWindow.document.writeln('{');
			PrintWindow.document.writeln('var WebBrowser = \'<OBJECT ID="WebBrowser1" WIDTH=0 HEIGHT=0 CLASSID="CLSID:8856F961-340A-11D0-A96B-00C04FD705A2"></OBJECT>\';');
			PrintWindow.document.writeln('doInsertAdjacentElement(document.body,\'beforeEnd\',WebBrowser);');		//SR17253
 
			PrintWindow.document.writeln('try {');
			PrintWindow.document.writeln('WebBrowser1.ExecWB( intOLEcmd, intOLEparam)');
			PrintWindow.document.writeln('WebBrowser1.outerHTML = "";');
			PrintWindow.document.writeln('} catch(e) {}');
			PrintWindow.document.writeln('}');
			PrintWindow.document.writeln('</script>');
			PrintWindow.document.writeln(bdyDiv.innerHTML);
			PrintWindow.document.close();
			PrintWindow.document.title='Search Result';
			PrintWindow.document.getElementById('hdrbdy').style.display='block';
			// SR17330 vvv
			PrintWindow.document.getElementById('hdrbdy').style.backgroundColor='lightgrey';
			PrintWindow.document.getElementById('hdrbdy').style.fontSize='12px';
			PrintWindow.document.getElementById('hdrbdy').parentNode.style.tableLayout='fixed';
			PrintWindow.document.getElementById('bdy').style.fontSize='12px';
			PrintWindow.document.getElementById('bdy').parentNode.style.tableLayout='fixed';
			PrintWindow.ieExecWB(#(pstrOption)#, -1);
		//	PrintWindow.close();	//why closing ? //SR17330
		}
	 	>
	}
	quit 1


CopyOld()
    ;-------------------------------------------------------------------------------
    ; Passes javascript back to screen to copy current grid.
    ;
    ; History:
    ; 21-Jan-2008	shobby	SRBR014860: If loading all records clear the current
    ;							selection first (to avoid duplicates)	
    ; 21-Jan-2008	shobby	SRBR014860: Remove the characters that will cause a new
    ;							cell when pasted into Excel.
    ; 31-Mar-2005	Paul K	SR11888: Use range instead to copy to Word
    ;-------------------------------------------------------------------------------
	new strConfirm,strHeader
	
	set strConfirm = $$$Text("Com00139")  ; "Copy all records?"
	set strHeader  = $$$Text("Com00140")  ; "Copy Confirm"
	&js<
    var result=7;
    if (bdy.Finished!=true) {
    	result=VBConfirm("#(strConfirm)#",35,"#(strHeader)#");
	}
		
	if (result==6) {
	    ClearRows(bdy);
		AddMore(3);
	}
	if ((result==6)||(result==7)) {
		var range=document.body.createTextRange();
		range.moveToElementText(bdyDiv);
	
		var strText=bdyDiv.innerHTML.replace(/\<P \/\>/gi,'');
		strText=strText.replace(/\<P\/\>/gi,'');
		strText=strText.replace(/\<\/P\>/gi,'');
		strText=strText.replace(/\<P\>/gi,'');
		strText=strText.replace(/\<BR\>/gi,'');
		clipboardData.setData('Text',strText);
	}
	>
	quit 1
	
	
Copy()
    ;-------------------------------------------------------------------------------
    ; Passes javascript back to screen to copy current grid.
    ;
	;------------------- DEPRECATED -------- vvv
	; To enable clipboard setting in FIREFOX
	; You can edit the setting in firefox to allow it:
	; In the firefox address bar, type in: "about:config"(no quotes), & press enter.
	; In the "filter" box you now see, type in the word "signed", and you should
	; only have one result comingup. It's set to DISABLED.
	; Double-click it, and it should change to ENABLED/TRUE.
	; Close the window. From then on, firefox will warn you when a website tries to
	; access your clipboard, and you can tell it to "always allow this site...."
	;--------------------------------------- ^^^
	;
    ; History:
    ; 22-Feb-2011	shobby	SR17665: Removed FF specific code as clipboard access now
    ;							has the same syntax as IE
    ; 18-Jun-2010	PPP		SR17373 : Firefox does not allow Clipboard copy by default. 
    ;							Need to enable setting as per above
    ;							Addded supporting methods CreateElementForExecCommand
    ;							and SelectContent for Browsers other that IE
    ;							code from http://help.dottoro.com/ljxundda.php
    ; 21-Jan-2008	shobby	SRBR014860: If loading all records clear the current
    ;							selection first (to avoid duplicates)	
    ; 21-Jan-2008	shobby	SRBR014860: Remove the characters that will cause a new
    ;							cell when pasted into Excel.
    ; 31-Mar-2005	Paul K	SR11888: Use range instead to copy to Word
    ;-------------------------------------------------------------------------------
	new strConfirm,strHeader,strMessage
	
	set strConfirm = $$$Text("Com00139")  ; "Copy all records?"
	set strHeader  = $$$Text("Com00140")  ; "Copy Confirm"
	set strMessage = $$$Text("Com00332")  ; "Please enable Clipboard access for your browser!"
	
	//SR17665 - vvvvv (Redundant code can be removed - js moved down)
	//SR17665 &js<

	//SR17665 // SR17373 VVVV
    //SR17665 function CreateElementForExecCommand (textToClipboard) {
    //SR17665     var forExecElement = document.createElement ("div");
    //SR17665         // place outside the visible area
    //SR17665     forExecElement.style.position = "absolute";
    //SR17665     forExecElement.style.left = "-10000px";
    //SR17665     forExecElement.style.top = "-10000px";
    //SR17665         // write the necessary text into the element and append to the document
    //SR17665     forExecElement.textContent = textToClipboard;
    //SR17665     document.body.appendChild (forExecElement);
    //SR17665         // the contentEditable mode is necessary for the  execCommand method in Firefox
    //SR17665     forExecElement.contentEditable = true;
	//SR17665 
    //SR17665     return forExecElement;
    //SR17665 }

    //SR17665 function SelectContent (element) {
    //SR17665         // first create a range
    //SR17665     var rangeToSelect = document.createRange ();
    //SR17665     rangeToSelect.selectNodeContents (element);
	//SR17665 
    //SR17665         // select the contents
    //SR17665     var selection = window.getSelection ();
    //SR17665     selection.removeAllRanges ();
    //SR17665     selection.addRange (rangeToSelect);
    //SR17665 }
	//SR17665 // SR17373 ^^^^

	//SR17665 comment block now DEPRECATED 
	// ****************************************************************************************
	// CODE WORKS BUT NEEDS FIREFOX TO ENABLE CLIPBOARD COPY
	//	To enable clipboard setting in FIREFOX
	//	You can edit the setting in firefox to allow it:
	//	In the firefox address bar, type in: "about:config"(no quotes), and press enter.
	//	In the "filter" box you now see, type in the word "signed", and you should only have
	//	one result coming up (signed.applets.codebase_principal_support). It's set to DISABLED.
	//	Double-click it, and it should change to ENABLED/TRUE.
	//	Close the window. From then on, firefox will warn you when a website tries to
	//  access your clipboard, and you can tell it to "always allow this site...."
	// ***************************************************************************************
	
	&js<

    var result=7;
    if (bdy.Finished!=true) {
    	result=VBConfirm("#(strConfirm)#",35,"#(strHeader)#");
	}
		
	if (result==6) {
	    ClearRows(bdy);
		AddMore(3);
	}
		
	if ((result==6)||(result==7)) {

		var success = true;
	//SR17665 	//if (1||'document.body.createTextRange') {
    //SR17665     if (clipboardData != null) { // Internet Explorer
	//SR17665 		//TODO SR17665: clipboardData does exist now for FF
	//SR17665 		if (isIE()) {
	//SR17665 			var range=document.body.createTextRange();
	//SR17665 			range.moveToElementText(bdyDiv);
	//SR17665 		}

			var strText=bdyDiv.innerHTML.replace(/\<P \/\>/gi,'');
			strText=strText.replace(/\<P\/\>/gi,'');
			strText=strText.replace(/\<\/P\>/gi,'');
			strText=strText.replace(/\<P\>/gi,'');
			strText=strText.replace(/\<BR\>/gi,'');

			clipboardData.setData('Text',strText);

	//SR17665 	} else {

	//SR17665 		// SR17373
	//SR17665 		var strText=bdyDiv.innerHTML.replace(/\<P \/\>/gi,'');
	//SR17665 		strText=strText.replace(/\<P\/\>/gi,'');
	//SR17665 		strText=strText.replace(/\<\/P\>/gi,'');
	//SR17665 		strText=strText.replace(/\<P\>/gi,'');
	//SR17665 		strText=strText.replace(/\<BR\>/gi,'');

    //SR17665         // create a temporary element for the execCommand method
    //SR17665         var forExecElement = CreateElementForExecCommand (strText);

    //SR17665         // Select the contents of the element (the execCommand for 'copy' method works on the selection)
    //SR17665         SelectContent (forExecElement);
            
    //SR17665         // Copy the selected content to the clipboard
    //SR17665         try {
    //SR17665             // Works in Safari, throws an exception in Firefox and Opera
    //SR17665             document.execCommand ("copy", false, null);
    //SR17665         } catch (e) {
    //SR17665             try {
    //SR17665                 // Works in Firefox, throws an exception in Opera
    //SR17665                 netscape.security.PrivilegeManager.enablePrivilege ("UniversalXPConnect");
    //SR17665                 document.execCommand ("copy", false, null);
    //SR17665             } catch (e) {
    //SR17665                 success = false;
    //SR17665             }
    //SR17665         }
            
    //SR17665         // remove the temporary element
    //SR17665         document.body.removeChild (forExecElement);
			
	//SR17665         if (success) {
	//SR17665             //alert ("The text is on the clipboard, try to paste it!");
	//SR17665         }
	//SR17665         else {
	//SR17665             alert ("#(strMessage)#");	//"Please enable Clipboard access for your browser!"
	//SR17665         }

	//SR17665 	}

	}
	
	//SR17665 // ****************************************************************************************
	//SR17665 // CODE BELOW - Clipboard Copy USING FLASH  (INPROGRESS-NOT WORKING)
	//SR17665 /*
	//SR17665 if ((result==6)||(result==7)) {

	//SR17665 	var strText=bdyDiv.innerHTML.replace(/\<P \/\>/gi,'');
	//SR17665 	strText=strText.replace(/\<P\/\>/gi,'');
	//SR17665 	strText=strText.replace(/\<\/P\>/gi,'');
	//SR17665 	strText=strText.replace(/\<P\>/gi,'');
	//SR17665 	strText=strText.replace(/\<BR\>/gi,'');

	//SR17665 	if (document.body.createTextRange) {

	//SR17665 		var range=document.body.createTextRange();
	//SR17665 		range.moveToElementText(bdyDiv);
	//SR17665 		clipboardData.setData('Text',strText);

	//SR17665 	} else {
	//SR17665 		var flashcopier = 'flashcopier';
	//SR17665 		if(!document.getElementById(flashcopier)) {
	//SR17665 			var divholder = document.createElement('div');
	//SR17665 			divholder.id = flashcopier;
	//SR17665 			document.body.appendChild(divholder);
	//SR17665 		}
	//SR17665 		document.getElementById(flashcopier).innerHTML = '';
	//SR17665 		var divinfo = '<embed src="_clipboard.swf" FlashVars="clipboard='+encodeURIComponent(strText)+'" width="0" height="0" type="application/x-shockwave-flash"></embed>';
	//SR17665 		document.getElementById(flashcopier).innerHTML = divinfo;
	//SR17665 		//alert(document.getElementById(flashcopier).innerHTML);
	
	
	//SR17665 	}	
	//SR17665 }
	//SR17665 */
	
	>
	quit 1
	
	
PrintOptions()
    ;-------------------------------------------------------------------------------
    ; Shows additional printing/saving options if you right click on the print button.
    ;
    ; History:
    ; 18-Feb-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	do StartMenu^COMViewColumnMenu()
	do AddRow^COMViewColumnMenu("xxprint.gif",    $$$Text("Com00170"),"CallBack(""Print^COMViewPrint"",6)")  ; "Print"
	do AddRow^COMViewColumnMenu("xxprint.gif",    $$$Text("Com00169"),"CallBack(""Print^COMViewPrint"")")    ; "Print to Printer..."
	do AddRow^COMViewColumnMenu("xxprintprev.gif",$$$Text("Com00168"),"CallBack(""Print^COMViewPrint"",7)")  ; "Print Preview"
	do AddSeparator^COMViewColumnMenu()
	do AddRow^COMViewColumnMenu("save.gif",       $$$Text("Com00171"),"CallBack(""Print^COMViewPrint"",4)")  ; "Save to File"
	do EndMenu^COMViewColumnMenu()
	quit
	
	
ExportToExcel(penumDisplayType=$$$EnumDisplayTypeExcel)
	;-------------------------------------------------------------------------------
    ; When the Export To Excel button is clicked on the COMView, this routine is
    ; executed.
    ; 
    ; Params:	
    ; 
    ; ByRefs:
    ;  
    ; Returns:
    ;
    ; History:
    ; 25-Feb-2008	shobby	Parametized the function that generates the data.
    ; 12-Jul-2006	RPW		Created SR14254
    ;-------------------------------------------------------------------------------
    do WindowPrint(penumDisplayType,"Output^COMViewFilterColumn(enumType,.objOutput)")
    quit
	
	
WindowPrint(penumDisplayType=$$$EnumDisplayTypeExcel,pstrOutputFunction="")
	;-------------------------------------------------------------------------------
	; Removed from ExportToExcel so that the output function can be reused to export
	; from Grids.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 31-May-2010	FIS		SR17343: Replace &amp; with & for firefox
	; 25-Feb-2008	shobby	SRBR014446: Created
	;-------------------------------------------------------------------------------
    new strOptions
    
    set strOptions=""
    
    if penumDisplayType=$$$EnumDisplayTypeCSV {
	    set strOptions=",'','height=100,width=100,top=0,left=0,location=no,menubar=no,resizable=no,status=no,titlebar=no,toolbar=no'"
    }
	write "window.open('COM.COMViewToExcel.cls?EP=WWWFORM&Output="_pstrOutputFunction_"&DisplayType="_penumDisplayType_"&YFORM="_YFORM_$$Replace^COMUtilStr($$WWWCGI2^WWWCGI(),"&amp;","&")_"'"_strOptions_");"  //SR17343
	quit
	
	
ExportToCSV()
	;-------------------------------------------------------------------------------
    ; When the "Export To CSV" button is clicked on the COMView, this routine is
    ; executed.
    ; 
    ; Params:	
    ; 
    ; ByRefs:
    ;  
    ; Returns:
    ;
    ; History:
    ; 12-Jul-2006	RPW		Created SR14254
    ;-------------------------------------------------------------------------------
	do ExportToExcel($$$EnumDisplayTypeCSV)
	quit
	
]]></Routine>
</Export>