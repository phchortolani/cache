<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINARRepBankReconciliation" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINARRepBankReconciliation
	#include FINConst
 
Banking(StartRec,Result,Param,pstrClass)
	;--------------------------------------------------------------------------------------------------
	;
	; 
	;
	; History
	; 15-Jul-2005	shobby		SR12754:Replaced LANGUAGE global (not always reliable)
	; 09-Jul-2004	shobby		(Finance AR) requires enhancement to use a date range rather than single date in the selection criteria (SR10094)
	; 28-Jun-2003	shobby		Creation
	; 
	; -------------------------------------------------------------------------------------------------
	;
	New RepSpece,Template,TempSpec,RunCode,Level,Total,Rec,Amt,SortKey
	New SortBy,Count,Number,SortCode,objAmounts,i,strName
	new idLine,objFINARBankLine,objFINARCustomer,objDetails
	new idFINARCustomer,strPaymentMethod,strStartDate,strEndDate
	
	set Level=1
	Set SortBy=$get(Param("SortBy"))
	if SortBy="" set SortBy="Name"
	set SortKey=$case(SortBy,"No.":1,"Name":2,"Method":3,"Cheque":4,"Amount":5)
	set SortCode="set SortKey=$piece(objDetails,Y,"_SortKey_")"
	;
	set strStartDate=$get(Param("StartDate"))
	set strEndDate=$get(Param("EndDate"))
	;
	kill ^mtemp("Rep",YUSER)
	kill ^mtemp("RepDrill",YUSER)
	set Number=""
	set Rec=""
	set Amt=""
 
	; Scan all FINARBank
	for {
		set Number=$order(^FINARBank(YM,Number))
		quit:Number=""
		set Rec=$get(^FINARBank(YM,Number,1))
		// FIXME: Use an index here
		if ($$$FINARBankBankingDate(Rec)'<strStartDate)&&($$$FINARBankBankingDate(Rec)'>strEndDate) {
			set idLine=""
			for {
				set idLine=$order(^FINARBankLine(YM,Number,idLine))
				quit:idLine=""
				set objFINARBankLine=$get(^FINARBankLine(YM,Number,idLine,1))
				set idFINARCustomer=$$$FINARBankLineCustomerNumber(objFINARBankLine)
				set objFINARCustomer=$get(^FINARCustomer(YM,idFINARCustomer,1))
				set strPaymentMethod=$$$FINARBankLineMethod(objFINARBankLine)
				if strPaymentMethod'="" {
					set strPaymentMethod=$piece($get(^WWW101(0,"FINARBANKLINEMETHOD",SPRACHE,strPaymentMethod,1)),Y,1)
				}
				set objDetails=Number_Y
				   _$$$FINARCustomerCustomerName(objFINARCustomer)_Y
				   _strPaymentMethod_Y
				   _$$$FINARBankLineChequeNumber(objFINARBankLine)_Y
				   _$$$FINARBankLineTotal(objFINARBankLine)
				xecute SortCode
				set ^mtemp("Rep",YUSER,Level,SortKey_" ",Number,idLine)=objDetails
			}
		}		
	}
	
	
	set SortKey=""
	set Count=0
	for {
		set SortKey=$order(^mtemp("Rep",YUSER,Level,SortKey))
		quit:SortKey=""
		set Number=""
		for {
			set Number=$order(^mtemp("Rep",YUSER,Level,SortKey,Number))
			quit:Number=""
			set idLine=""
			for {
				set idLine=$order(^mtemp("Rep",YUSER,Level,SortKey,Number,idLine))
				quit:idLine=""
				set objDetails=$get(^mtemp("Rep",YUSER,Level,SortKey,Number,idLine))
				set Count=Count+1
				set ^mtemp("Rep",YUSER,Level,Count,"CustomerNumber")=$piece(objDetails,Y,1)
				set ^mtemp("Rep",YUSER,Level,Count,"CustomerName")=$piece(objDetails,Y,2)
				set ^mtemp("Rep",YUSER,Level,Count,"PaymentMethod")=$piece(objDetails,Y,3)
				set ^mtemp("Rep",YUSER,Level,Count,"ChequeNumber")=$piece(objDetails,Y,4)
				set ^mtemp("Rep",YUSER,Level,Count,"Amount")=$piece(objDetails,Y,5)
			}
		}
	}
	set Result="^mtemp(""Rep"","""_YUSER_""","_Level_")"
	quit
 
]]></Routine>
</Export>