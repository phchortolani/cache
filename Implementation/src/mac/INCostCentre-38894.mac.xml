<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INCostCentre" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INCostCentre
	
#include COMSYS
#include INConst
	;-------------------------------------------------------------------------------
	; Locations are defined in class WWW0121.
	; Any definitions for finance-related matters are stored in class INFIBPAR,
	; probably should be hierarchical - may need extra code to traverse tree for
	; account details, etc.
	; 
	; 
	; Issues
	;  1. If ^INFIBPAR exists, shouldn't be able to delete ^WWW0121.
	;  2. If sub-locations exist, shouldn't be able to delete ^WWW0121.
	;  2. If records created/deleted in ^WWW0121, ^INCCLocation will be affected.
	;  3. If hierarchy changes,  ^INCCLocation will be affected for all sub-locns at
	;     point of change.
	; 
	;-------------------------------------------------------------------------------

	;-------------------------------------------------------------------------------
	;    Defined (INFIBPAR)		""		A		$$$INFIBPARCostCentre(objFinParam)
	;    Inherited				X		X
	;  --------------------------------------
	;    GetInheritedCC			X		X		<< What will/would be inherited
	;    ShowInheritedCC		X		""		<< Doesn't Inherit in case 2 so leave field blank
	;    GetCostCentre			X		A		<< Effective Cost Centre
	;-------------------------------------------------------------------------------



	
GetInheritedCC(pidLocn)
	;-------------------------------------------------------------------------------
	; Proceed up the location hierarchy until a cost centre is found.
	; 
	; Called By : GetCostCentre, ShowInheritedCC, OnSaveLocation
	;             Form WWW0121C M16 "CostCentre"
	; 
	; Returns: Inherited the Cost Centre that will apply if one is not
	;          explicitly defined.  (Skip current location  - piece 1 in string)
	; 
	; History:
	; 23-Oct-2009	GRF		SR16871: CostCentre now in INFIBPAR not WWW0121
	; 19-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idCostCentre,idParent,intLocns,loop,objFinParam,strPath
	
	quit:pidLocn="" ""
	
	set idCostCentre = ""
	
	If (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
		Set strPath = $$LocationPath^VAR0121Utils(0,pidLocn)
	}
	Else {
		set strPath = $$LocationPath^WWW0121Utils(0,pidLocn)
	}
	set intLocns = $length(strPath,$$$COMMA)
	for loop = 2:1:intLocns {
		set idParent = $piece(strPath,$$$COMMA,loop)
		quit:idParent=""
	
		set objFinParam  = $get(^INFIBPAR(0,0,idParent,1))
		set idCostCentre = $$$INFIBPARCostCentre(objFinParam)
		quit:idCostCentre'=""
	}
	
	quit idCostCentre
	

ShowInheritedCC(pidLocn)
	;-------------------------------------------------------------------------------
	; If cost centre is not defined for the location, return the inherited cost centre.
	; 
	; Called By : Form INFIBPAR M18 "Inherited"
	; 
	; Returns: Inherited Cost Centre if not explicitly defined, otherwise null since
	;          skips current location (piece 1 in string).  This allows the inherited
	;          field to be blank if not relevant.
	; 
	; History:
	; 19-Nov-2009	GRF		SR16871: Created following change to GetInheritedCC
	;-------------------------------------------------------------------------------
	new idCostCentre,idParent,intLocns,loop,objFinParam,strPath
	
	quit:pidLocn="" ""
	
	set idCostCentre = ""
	
	set objFinParam  = $get(^INFIBPAR(0,0,pidLocn,1))
	if $$$INFIBPARCostCentre(objFinParam)="" set idCostCentre = $$GetInheritedCC(pidLocn)
	
	quit idCostCentre

GetToolTip(pYLOCATION="") ;CORE-385.
	new idCostCentre,strTooltip
	
	set idCostCentre = $$GetCostCentre^INCostCentre(pYLOCATION)
	set strTooltip = YCR_$$^WWWTEXT(33860,,1)_" "_idCostCentre  ; Cost Centre
	if idCostCentre'="" {
		set strTooltip = strTooltip_" ("_$extract($$$INKOSTLDesignation($get(^INKOSTL(0,idCostCentre,1))),1,80)_")"
	}
	quit strTooltip
	
GetCostCentre(pidLocn)
	;-------------------------------------------------------------------------------
	; Returns : Explicitly defined cost centre for location if present, otherwise
	;           the inherited cost centre
	; 
	; History:
	; 03-Jan-2014 	shobby 	CORE-303: CacheIndex
	; 06-Nov-2009	GRF		SR16871: Default to top level location (has no parent)
	; 23-Oct-2009	GRF		SR16871: CostCentre now in INFIBPAR not WWW0121
	; 19-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idCostCentre,objFinParam
	
	if $get(pidLocn)="" set pidLocn = $$GetTopLevel^WWW0121()  ; Top Level
	quit:pidLocn="" ""
	
	set objFinParam  = $get(^INFIBPAR(0,0,pidLocn,1))
	set idCostCentre = $$$INFIBPARCostCentre(objFinParam)
	
	if idCostCentre="" set idCostCentre = $$GetInheritedCC(pidLocn)
	quit idCostCentre
	
	
	;+++++++++++++++++++++++++++++++++++++++
	; INCCLocation Update Code
	;+++++++++++++++++++++++++++++++++++++++
	
OnSaveLocation(pidLocn,pidNewCC)
	;-------------------------------------------------------------------------------
	; OnSave process for INFIBPAR
	; 
	; Called By: OnBeforeSave^INFIBPAR
	; 
	; History:
	; 19-Nov-2009	GRF		SR16871: inherit for blank new CC
	; 19-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idOldCC,strStatus
	
	if pidNewCC="" set pidNewCC = $$GetInheritedCC(pidLocn)
	
	set idOldCC = $$GetCostCentre(pidLocn)
	if idOldCC'=pidNewCC {
		do UpdateCCLocn(pidLocn,idOldCC,pidNewCC)
		do UpdateSubLocns(pidLocn,idOldCC,pidNewCC)
		do UpdateStockVal(pidLocn,idOldCC,pidNewCC)   ; TODO : If possible, perform as background job
	}
	quit
	
	
OnDeleteLocation(pidLocn)
	;-------------------------------------------------------------------------------
	; OnDelete process for INFIBPAR - NOTE : Locn is not deleted from WWW0121
	; 
	;	If Parameters are deleted for A Location then Cost Centre will be
	;	inherited from the Parent of the Location
	; 
	; Called By: OnBeforeDelete^INFIBPAR
	; 
	; History:
	; 19-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idNewCC,idOldCC,idParent,objLocation,strStatus
	
	set objLocation = $get(^WWW0121(0,0,pidLocn,1))
	
	set idOldCC  = $$GetCostCentre(pidLocn)
	set idParent = $$$WWW0121ParentLocn(objLocation)
	if idParent'="" {
		set idNewCC = $$GetCostCentre(idParent)
	} else {
		set idNewCC = ""   ; Top-level Entity
	}
	if idOldCC'=idNewCC {
		do UpdateCCLocn(pidLocn,idOldCC,idNewCC)
		do UpdateSubLocns(pidLocn,idOldCC,idNewCC)
		do UpdateStockVal(pidLocn,idOldCC,idNewCC)   ; TODO : If possible, perform as background job
	}
	quit
	
	
OnLocnChange(pidLocn,pobjLocation)
	;-------------------------------------------------------------------------------
	; Review consequences of change to WWW0121 on INCCLocation
	; 
	; Called By: OnBeforeSave^WWW0121, OnBeforeDelete^WWW0121
	; 
	; Params: Location key and new data from WWW0121
	; 
	; History:
	; 23-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	;  1. If Parent is changed, then may get different cost centre (only if inheriting)
	;  2. Can't delete if have sub-locations or Finance parameters
	;  3. Can't have sub-locations when first create
	;-------------------------------------------------------------------------------
	new idNewCC,idOldCC,idParent,objFinParam
	
	set objFinParam  = $get(^INFIBPAR(0,0,pidLocn,1))
	set idNewCC = $$$INFIBPARCostCentre(objFinParam)
	
	if idNewCC="" {  ; If explicitly defined will retain and will have OldCC = NewCC
		set idOldCC  = $$GetCostCentre(pidLocn)
		set idParent = $$$WWW0121ParentLocn(pobjLocation)
		
		if idParent'="" {   ; not a Top-level Entity
			set idNewCC = $$GetCostCentre(idParent)
		}
		if idNewCC'="" {    ; should never be otherwise if setup properly
			if idOldCC'=idNewCC {
				do UpdateCCLocn(pidLocn,idOldCC,idNewCC)
				do UpdateSubLocns(pidLocn,idOldCC,idNewCC)
				do UpdateStockVal(pidLocn,idOldCC,idNewCC)   ; TODO : If possible, perform as background job
			}
		}
	}
	
	quit
	
	
UpdateSubLocns(pidStartLocn,pidOldCC,pidNewCC)
	;-------------------------------------------------------------------------------
	;
	; History:
	; 23-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new arrLocns,idCostCentre,idLocn
	
	do Children^WWW0121Utils(0,pidStartLocn,,$$$YES,"Cache",.arrLocns)  ; all descendants of pidStartLocn
	
	set idLocn = ""
	for {
		set idLocn = $order(arrLocns(idLocn))
		quit:idLocn=""
	;	continue:'$$$WWW0121StorageLocn($get(^WWW0121(0,0,idLocn,1)))	; Not an Inventory Location
		
		set idCostCentre = $$GetCostCentre(idLocn)
		continue:idCostCentre'=""                    ; explicit over-ride - no change
		
		do UpdateCCLocn(idLocn,pidOldCC,pidNewCC)
	}
	quit
	
	
UpdateCCLocn(pidLocn,pidOldCC,pidNewCC)
	;-------------------------------------------------------------------------------
	; Common code for changing special index global ^INCCLocation
	; due to change in INFIBPAR or WWW0121
	; 
	; Called By : OnSaveLocation, OnDeleteLocation, OnLocnChange, UpdateSubLocns
	; 
	; History:
	; 23-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	if pidNewCC'="" set strStatus = $$$Save("INCCLocation",pidNewCC_$$$COMMA_pidLocn,$$$YES)
	if pidOldCC'="" set strStatus = $$$Kill("INCCLocation",pidOldCC_$$$COMMA_pidLocn)
	
	do ChangeCCStock^INAvgCost(pidLocn,pidOldCC,pidNewCC)
	
	quit
	
	
UpdateStockVal(pidLocn,pidOldCC,pidNewCC) ; TODO : What if not Avg Cost Costing Method?
	;-------------------------------------------------------------------------------
	; After average costs have been updated for all locations moved between cost
	; centres, need to recalculate Stock Values as a single update pass rather than
	; having a pass for each sub-location change.  This should reduce the effect on
	; the ledger interface.
	; 
	; If possible, perform as background job.
	; 
	; Called By : OnSaveLocation, OnDeleteLocation, OnLocnChange
	; 
	; History
	; 10-Nov-2009	GRF		SR16871: include location in strRef
	; 27-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new curAvgCost,dteNow,idItem,strRef,strStatus
	
	set dteNow = +$horolog
	set strRef = $$$Text($listbuild("IN01145",pidLocn,pidOldCC,pidNewCC))   ; "Change Location %1 from Cost Centre %2 to %3"
	
	set idItem = ""
	for {
		set idItem = $order(^INStockVal(0,idItem))
		quit:idItem=""
		
		set curAvgCost = $$GetCostForCC^INAvgCost(idItem,pidNewCC,dteNow)
		set strStatus  = $$AutoUpdate^INStockValCCAdj("ChangeCC",strRef,idItem,pidNewCC,curAvgCost)
	}
	quit
	
	
	/*
	;===============================================================================
	;	Locn B with 200 units @ $3.00 changes from Cost Centre Y to Cost Centre Z
	;	where there are 100 units (60 in Location L and 40 in Location M) at $3.30.
	;	
	;---------	
	;	INStockVal									   INAvgCost
	;		A	...		 ...				CC-Y		$3.00
	;		B	200		$600.00				CC-Y		$3.00
	;		L	 60		$198.00				CC-Z		$3.30
	;		M	 40		$132.00				CC-Z		$3.30
	;---------	
	;	
	;		[ INCostCentre : OnSaveLocation, OnDeleteLocation, OnLocnChange ]
	;	1.  Record Old Cost Centre [Y] and original Value ($600)
	;	
	;	2.	[ UpdateCCLocn^INCostCentre ]
	;		Change INCCLocation from Cost Centre Y to Cost Centre Z)
	;	
	;		[ UpdateCCLocn^INCostCentre => ChangeCCStock^INAvgCost => UpdateFinance^INAvgCost ]
	;	3.	Credit SOH (Locn B, Cost Centre Y)					$600.00
	;		Debit  SOH (Locn B, Cost Centre Z)								$600.00
	;	
	;	4.	Average Cost recalculation
	;		[ UpdateCCLocn^INCostCentre => ChangeCCStock^INAvgCost ]
	;			(200 * 3.00) + (100 * 3.30)  /  (200 + 100)  =  $930.00 / 300 = $3.10
	;
	;---------	
	;	INStockVal									   INAvgCost
	;		A	...		 ...				CC-Y		$3.00
	;		B	200		$600.00				CC-Z		$3.10
	;				 => $620.00	(+$20.00)
	;		L	 60		$198.00				CC-Z		$3.10
	;				 => $186.00	(-$12.00)
	;		M	 40		$132.00				CC-Z		$3.10
	;				 => $124.00	(-$ 8.00)
	;---------	
	;	
	;	5.	Update Stock Val
	;		[ UpdateStockVal^INCostCentre => $$AutoUpdate^INStockValCCAdj ]
	;		Debit  SOH (LocnB, Cost Centre Z)								$ 20.00
	;		Credit SOH (LocnL, Cost Centre Z)					$ 12.00
	;		Credit SOH (LocnM, Cost Centre Z)					$  8.00
	;===============================================================================
	*/
	
	
	;+++++++++++++++++++++++++++++++++++++++
	; Version Update Code
	;+++++++++++++++++++++++++++++++++++++++
	
PopulateCCLocn()
	;-------------------------------------------------------------------------------
	; Initial population - run once on upgrade
	; 
	; Note : Locations may have WWW0121 record but not INFIBPAR  -  inherit
	; 
	; 
	; History:
	; 30-Nov-2011	GRF		SR17967.1: move from CacheTemp to common global in nspace
	; 29-Nov-2011	GRF		SR17967: Clear CacheTemp so GetCostCentre has up-to-date
	; 06-May-2010	GRF		SR16871: Add Force Save flag
	; 19-Oct-2009	GRF		SR16871: Created
	;-------------------------------------------------------------------------------
	new idCostCentre,idLocn,strStatus
	
	;kill ^CacheTempWWW0121    ; SR17967, SR17967.1
	kill ^WWW0121Path
	kill ^WWW0121Hier

	kill ^INCCLocation
	set idLocn = ""
	for {
		set idLocn = $order(^WWW0121(0,0,idLocn)) 
		quit:idLocn=""
		
		set idCostCentre = $$GetCostCentre(idLocn)
		if idCostCentre'="" set strStatus = $$$Save("INCCLocation",idCostCentre_$$$COMMA_idLocn,$$$YES,$$$YES)
	}
	quit
	
]]></Routine>
</Export>