<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INDRPDEMAND" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INDRPDEMAND
#include INConst
#include COMSYS
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		ANLAGE NEUER DEMANDS
	;
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 01-Nov-2006	GRF		SR15161:Doco; Quits
	; 29.08.2001	FIS
	;-------------------------------------------------------------------------------
	NEW ART,BETRIEB,DEMAND,SUCH,ART1,SATZ,ID,KEY
	
	SET BETRIEB = $PIECE($GET(YKEY),",",1)     QUIT:BETRIEB=""
	SET DEMAND  = $PIECE($GET(YKEY),",",2)     QUIT:DEMAND=""
	SET YFELD   = $GET(YFELD)
	
	;ÜBERTRAGEN DER ARTIKELSTRUKTUR INS DRP BEI SIMULATION ;transport the DRP next to simulation 
	IF $PIECE(YFELD,Y,70)=9 DO                                      ;SIMULATION
	. QUIT:$PIECE(YFELD,Y,101)'=""                                  ;BEREITS ÜBERTRAGEN ;yet transport 
	. SET $PIECE(^INDRPDEMAND(YM,BETRIEB,DEMAND,1),Y,101)=$HOROLOG  ;ZEITSTEMPEL ÜBERTRAGUNG DER UMSETZTUNG ;translation the 
	. SET ART=$PIECE(YFELD,Y,4)
	. QUIT:ART=""
	. ;
	. IF $DATA(^INARTXL(YM,ART)) DO
	. . SET SUCH="^INARTXL("_""""_YM_""""_","_""""_ART_""""_")"
	. . FOR  DO  QUIT:SUCH=""
	. . . SET SUCH=$QUERY(@SUCH)
	. . . IF $TRANSLATE($PIECE(SUCH,",",2),"""")'=ART SET SUCH="" QUIT  ;21.06.04;FAN;25794; WENN alphanumerischen Auftragsnummern SOLL DATEN AUCH AUFBAUEN.
	. . . ;IF $PIECE(SUCH,",",2)'=ART SET SUCH="" QUIT                  ;21.06.04;FAN;25794; FALSCHER AUFTRAG
	. . . ;
	. . . SET ART1=@SUCH
	. . . SET SATZ=YFELD
	. . . ;
	. . . SET $PIECE(SATZ,Y,4)=$PIECE(ART1,Y,4)                   ;ARTIKEL ;item 
	. . . SET $PIECE(SATZ,Y,5)=$PIECE(ART1,Y,5)*$PIECE(SATZ,Y,5)  ;MENGE   ;quantity 
	. . . IF $PIECE(ART1,Y,26)=2 SET $PIECE(SATZ,Y,5)=($PIECE(ART1,Y,45)*$PIECE(ART1,Y,5))*$PIECE(SATZ,Y,5)  ;AUSFÜHRUNGSZEIT BEI LEISTUNG ;execution time next to performance 
	. . . SET $PIECE(SATZ,Y,9)=1                                  ;BESCHAFFUNGSART=HERSTELLEN
	. . . IF $DATA(SUCH)=1 SET $PIECE(SATZ,Y,9)=2  ;BESCHAFFUNGSART=BESTELLEN (UNTER-UNTERTEIL)
	. . . IF $PIECE(ART1,Y,26)=2 SET $PIECE(SATZ,Y,9)=""
	. . . SET $PIECE(SATZ,Y,70)=9                  ;SIMULATION
	. . . SET $PIECE(SATZ,Y,101)=$HOROLOG          ;ZEITSTEMPEL ÜBERTRAGUNG ;translation 
	. . . ;
	. . . ;SPEICHERN DATENSATZ ;Save data record 
	. . . SET ID=$$^WWWNEXT("INDRPDEMAND")
	. . . IF ID=DEMAND SET ID=$$^WWWNEXT("INDRPDEMAND")
	. . . SET KEY=BETRIEB_","_ID
	. . . SET OK=$$^WWWSPEI("INDRPDEMAND",KEY,SATZ,1)
	. . . ;DO ^INDRPSAVED(KEY,SATZ)
	. . . IF $PIECE(ART1,Y,4)'="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,217)=1 SET ^INDRPNETCHANGE(YM,$PIECE(ART1,Y,4),1)=""  ;FIS;29.04.05;SR12200
	
	DO ^INDRPSAVED($GET(YKEY),$GET(YFELD))  ;UPDATE/CREATE SUPPLY ON DESTINATION LOCATION;FIS;01.04.04 ;LOCATION 
	IF $PIECE($GET(YFELD),Y,4)'="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,217)=1 SET ^INDRPNETCHANGE(YM,$PIECE(YFELD,Y,4),1)=""  ;FIS;29.04.05;SR12200
	QUIT
	
ACCESS ;BERECHTIGUNG VOR SPEICHERN PRÜFEN
	; Pre-save check
	NEW ACCESS,BETRIEB,DEMAND,YFELDOLD
	
	SET BETRIEB = $PIECE($GET(YKEY),",",1)       QUIT:BETRIEB=""
	SET DEMAND  = $PIECE($GET(YKEY),",",2)       QUIT:DEMAND=""
	SET YFELD   = $GET(YFELD)
	
	;SET ACCESS=$GET(^INDRPPLANNER(YM,BETRIEB,YBED,1))
	SET ACCESS   = $$^INDRPACCESS(BETRIEB,YBED)              ;BEC;25255;03.03.04;BERECHTIGUNGEN
	SET YFELDOLD = $GET(^INDRPDEMAND(YM,BETRIEB,DEMAND,1))
	
	;ÄNDERUNG DES DATENSATZES ;alteration 
	IF YFELDOLD'="" DO
	. IF $PIECE(YFELD,Y,19)'=1 IF $PIECE(YFELDOLD,Y,19)=1 DO  ;DEMAND FREIGEBEN
	. . IF $PIECE(ACCESS,Y,7)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5)) QUIT  ;KEINE BERECHTIGUNG ;no authorisation 
	. . SET $PIECE(YFELD,Y,20)=+$HOROLOG
	. . SET $PIECE(YFELD,Y,21)=YBED
	. ;
	. IF $PIECE(YFELD,Y,98)=1 IF $PIECE(YFELDOLD,Y,98)'=1 DO  ;DEMAND GELÖSCHT
	. . IF $PIECE(ACCESS,Y,8)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5))  ;KEINE BERECHTIGUNG ;no 
	. ;
	. IF $GET(Q)'=1 IF $PIECE(YFELD,Y,99)=1 IF $PIECE(YFELDOLD,Y,99)'=1 DO  QUIT               ;DEMAND ABGESCHLOSSEN
	. . IF $PIECE(ACCESS,Y,9)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5))  ;KEINE BERECHTIGUNG ;no 
	. ;
	. IF $GET(Q)'=1 IF $PIECE(YFELD,Y,70)=9 IF $PIECE(YFELDOLD,Y,70)'=9 DO  QUIT  ;AUF SIMULATION GESETZT ;upon simulation staid 
	. . IF $PIECE(YFELDOLD,Y,2)'=""                        SET Q=1  DO ^WWWINFO($$^WWWTEXT(144))  QUIT  ;NICHT MÖGLICH (DA AUFTRAGSBEZOGEN) ;Not potential 
	. . IF $PIECE(ACCESS,Y,13)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5))          ;KEINE BERECHTIGUNG ;no 
	
	;NEUANLAGE DATENSATZ ;data record 
	IF YFELDOLD="" DO
	. IF $PIECE(ACCESS,Y,3)'=1    IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5))  QUIT  ;KEINE BERECHTIGUNG ;no authorisation
	. IF $PIECE(YFELD,Y,70)=9 DO  QUIT  ;SIMULATION
	. . IF $PIECE(ACCESS,Y,13)'=1 IF $PIECE(ACCESS,Y,2)'=1 SET Q=1  DO ^WWWINFO($$^WWWTEXT(5)) 
	
	quit
	
	;-------------------------------------------------------------------------------
	; For an INDRPDEMAND record, determines if an associated INTFR transfer record 
	; exists and is valid.
	;
	; Params: pYKEY - key of the INDRPDEMAND record.
	;
	; ByRefs:
	;
	; Returns: none
	;
	; History:
	; 22-Apr-2006	PO		SR14428: Created
	;-------------------------------------------------------------------------------
CanShowTransfer(pidKey)
	new idDemandLoc,idDemand,objDemand,idTransferKey,idTFR,idTFRLine,strStatus
	
	set strStatus = $$$OK
	
	set idDemandLoc = $piece(pidKey,$$$COMMA,1)
	set idDemand = $piece(pidKey,$$$COMMA,2)
	
	if '$$$NoKey(idDemandLoc) && '$$$NoKey(idDemand) {
		set objDemand = $get(^INDRPDEMAND(YM,idDemandLoc,idDemand,1))
		
		set idTransferKey = $$$INDRPDEMANDTransfer(objDemand)
		set idTFR = $piece(idTransferKey,$$$COMMA,1)
		set idTFRLine = $piece(idTransferKey,$$$COMMA,2)
		
		if $$$NoKey(idTFR) || $$$NoKey(idTFRLine) {
			set strStatus = $$$Text("IN00426")  ;Record not created by Transfer Order form.
		}
	} else {
		set strStatus = $$$Text(32072)  ;Please Select A Data Record First.
	}
	
	$$$YQHandler(strStatus)
	
	quit
	
	;-------------------------------------------------------------------------------
	; From INDRPDEMAND form, resolves the associated INTFR transfer ID and Line, 
	; and performs GoToGridOnForm to show the transfer.
	;
	; Params: pYKEY - key of the INDRPDEMAND record.
	;
	; ByRefs:
	;
	; Returns: none.
	;
	; History:
	; 21-Apr-2006	SC		SR14428: Created
	;-------------------------------------------------------------------------------	
ShowTransfer(pYKEY)
	new intTransferNo, intGridLine, objINDRPDEMAND
	
	set objINDRPDEMAND = $get(^INDRPDEMAND(YM,$piece(pYKEY,$$$COMMA,1),$piece(pYKEY,$$$COMMA,2),1))
	set intTransferNo  = $piece($$$INDRPDEMANDTransfer(objINDRPDEMAND),$$$COMMA,1)
	set intGridLine    = $piece($$$INDRPDEMANDTransfer(objINDRPDEMAND),$$$COMMA,2)
	
	;set %("%KEY","YKEY") = intTransferNo
	;set %KEY("YKEY") = intTransferNo
	
	do GoToGridOnForm^COMUtilForm("INTFR",intTransferNo,1,,,,,intGridLine) 
	quit
	
]]></Routine>
</Export>