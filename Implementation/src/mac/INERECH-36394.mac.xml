<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INERECH" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INERECH
#include COMSYS
#include INConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		VORGABE DER RECHNUNG RUECKSPRUNG AUS INERECH1
	;       DEFAULT OF THE CALCULATION RETURN FROM INERECH1
	;
	; FIXME: INERECH has 3 keys - SupplierNo, InvoiceNo, InvoiceDate
	;        
	; Main routine is not directly called by another routine.
	; Called by "After Button Line" in form INERECH - presumably when form is called
	; from some other class' form to generate new keys.
	; 
	; Inputs : 
	;
	;
	; ByRef :
	;  YKEY			FIXME: What is class of source record and final record
	;  YFELD		objINERECH  ; FIXME : ??? newed so won't be available to check and won't be returned.
	;
	; Returns :
	;
	;
	; History :
	; 13-Jun-2006	GRF		Doco
	; 10.10.2000	DT		Created
	;-------------------------------------------------------------------------------
	NEW AUF,POS,LIEF,RECH,YFELD
	
	QUIT:$TRANSLATE($GET(YFELD),Y)'=""
	
	SET AUF  = $PIECE(YKEY,",",1)        QUIT:AUF=""
	SET POS  = $PIECE(YKEY,",",2)        QUIT:POS=""
	SET LIEF = $PIECE(YKEY,",",3)        QUIT:LIEF=""
	SET RECH = $PIECE(YKEY,",",4)        QUIT:RECH=""
	QUIT:'$DATA(^INERECH(YM,LIEF,RECH,LIEF,RECH,1))
	
	SET YKEY=LIEF_","_RECH
	SET YFELD=$GET(^INERECH(YM,LIEF,LIEF,RECH,1)) 
	QUIT
	
OnBeforeButtonline(pYKEY)
	;-------------------------------------------------------------------------------
	; Executed before button line of INERECH form
	;
	; Returns:
	;
	; History:
	; 06-Apr-2005	JW		Created SR10722
	;-------------------------------------------------------------------------------
	new supplier,location
	
	set supplier = $piece($get(pYKEY),",",1)
	if supplier'="" {
		set location = $piece($get(^INLIEF(YM,supplier,1)),Y,53)
		if location = "" {
			set location = $$CurrentTaxLocation^COMTAXLocation()
		}
	}
	do CreateTaxCodesList^COMTAXLocation($get(location))
	
	quit
	
OnAfterDelete(pYKEY="",pYFELD)
	;-------------------------------------------------------------------------------
	; Delete invoice lines
	;
	; Returns:
	;
	; History:
	; 23-Oct-2006	JW		SR15134: Look at kill status.
	; 06-Apr-2005	JW		Created SR10722
	;-------------------------------------------------------------------------------
	new idSupplier,idInvoice,idxSupplier,idxInvoice,idOrder,idOrderLine
	new YFELD,YFORM,idImport,strStatus
	set strStatus = $$$OK
	
	set idSupplier	= $$$KEY1(pYKEY)
	set idInvoice	= $$$KEY2(pYKEY)
	
	if (idSupplier'="") && (idInvoice'="")  {
		
		set idImport = $piece(pYFELD,Y,127)
		if idImport'="" {
			set strStatus = $$RemoveImportCosts(idImport,idSupplier) // remove invoice details		// SR15134
		}
		if $$$ISOK(strStatus) {
			set YFORM = "INERECH1"
			
			set idxSupplier = $$^WWWUMLAU(idSupplier,1)
			set idxInvoice = $$^WWWUMLAU(idInvoice,1)
		
			set idOrder = ""
			for {
				set idOrder = $order(^INERECH1s(YM,1,idxSupplier,idxInvoice,idOrder))
				quit:idOrder=""
				
				set idOrderLine = ""
				for {
					set idOrderLine = $order(^INERECH1s(YM,1,idxSupplier,idxInvoice,idOrder,idOrderLine))
					quit:idOrderLine=""
					
					set strStatus = $$$Kill("INERECH1",idOrder_","_idOrderLine_","_idSupplier_","_idInvoice)		// SR15134
					quit:$$$ISERR(strStatus)
				}
				quit:$$$ISERR(strStatus)
			}
		}
		if $$$ISERR(strStatus) {
			set Q = $$$QDontDelete		// SR15134
		}
	}
	
	quit
	
RemoveImportCosts(pidImport,pidSupplier)
	;-------------------------------------------------------------------------------
	; Remove invoice details from Import Costs.
	; 
	; Params:	pidImport
	; 			
	; 
	; Returns:	status
	;
	; History:
	; 23-Oct-2006	JW		SR15134: Look at save status. Return status.
	; 13-Apr-2005	JW		Created SR10722
	;-------------------------------------------------------------------------------
	new idType,objImportCost,strStatus
	set strStatus = $$$OK
	
	if ($get(pidImport)'="") && ($get(pidSupplier)'="") {
		
		set idType = ""
		for {
			set idType = $order(^INSHIPINFOCOSTS(YM,pidImport,idType))
			quit:idType=""
			
			set objImportCost = $get(^INSHIPINFOCOSTS(YM,pidImport,idType,1))
			
			if pidSupplier = $piece(objImportCost,Y,6) { // if is this supplier
				set $piece(objImportCost,Y,7) = ""		 // remove details
				set $piece(objImportCost,Y,8) = ""
				
				set strStatus = $$$Save("INSHIPINFOCOSTS",pidImport_","_idType,objImportCost,1)		// SR15134
			}
			quit:$$$ISERR(strStatus)
		}
	}
	
	quit strStatus
	
GetCalculatedAmount(pYKEY)
	;-------------------------------------------------------------------------------
	; Sum invoice lines and import cost amounts
	;
	; Returns:
	;
	; History:
	;  9-Jan-2006	JW		SR14097: Only this invoice number.
	; 13-Apr-2005	JW		Created SR10722
	;-------------------------------------------------------------------------------
	new idSupplier,idInvoice,invoiceDate,amount,idType,idOrderLine
	new objInvoice,objImportCost,objInvoiceLine,idImport
	new idxSupplier,idOrder,idxInvoice
	
	set idSupplier	= $piece($get(pYKEY),",",1)
	set idInvoice	= $piece($get(pYKEY),",",2)
	set invoiceDate	= $piece($get(pYKEY),",",3)
	
	set amount = 0
	
	if ($get(idSupplier)'="") && ($get(idInvoice)'="") && ($get(invoiceDate)'="") {
		
		set objInvoice = $get(^INERECH(YM,idSupplier,idInvoice,invoiceDate,1))
		set idImport = $$$INERECHImportNumber(objInvoice)
		
		if (idImport'="") {
			set idType = ""
			for {
				set idType = $order(^INSHIPINFOCOSTS(YM,idImport,idType))
				quit:idType=""
				
				set objImportCost = $get(^INSHIPINFOCOSTS(YM,idImport,idType,1))
				if idInvoice = $$$INSHIPINFOCOSTSInvoiceNumber(objImportCost) {  // SR14097 - only if this invoice.
					if idSupplier = $$$INSHIPINFOCOSTSServiceSupplier(objImportCost) { // if is this supplier
						set amount = amount + $$$INSHIPINFOCOSTSActualCosts(objImportCost) // add actual cost
					}
				}
			}
		}
		
		set idxSupplier = $$^WWWUMLAU(idSupplier,1)
		set idxInvoice = $$^WWWUMLAU(idInvoice,1)
		
		set idOrder = ""
		for {
			set idOrder = $order(^INERECH1s(YM,1,idxSupplier,idxInvoice,idOrder))
			quit:idOrder=""
			
			set idOrderLine = ""
			for {
				set idOrderLine = $order(^INERECH1s(YM,1,idxSupplier,idxInvoice,idOrder,idOrderLine))
				quit:idOrderLine=""
				
				set objInvoiceLine = $get(^INERECH1(YM,idOrder,idOrderLine,idSupplier,idInvoice,1))
				set amount = amount + $piece(objInvoiceLine,Y,22) // add invoice amount
			}
		}
	}
	
	quit amount
	
OnBeforeSave(pYKEY,pYFELD="")
	;-------------------------------------------------------------------------------
	; Check data, remove import costs if number has changed.
	;
	; Returns: pYFELD as parameter
	;
	; History:
	; 13-Apr-2005	JW		Created SR10722
	;-------------------------------------------------------------------------------
	new idSupplier,idInvoice,prevYFELD,prevImport
	
	// Original Code
	do ^INERECHCHECK1
	
	// New Code
	if $get(Q)'=1 { // If saving
		
		set idSupplier	= $piece($get(pYKEY),",",1)
		set idInvoice	= $piece($get(pYKEY),",",2)
			
		if (idSupplier'="") && (idInvoice'="") {
			
			// If import number has been removed/changed:
			// remove details from Import Costs.
			
			set prevYFELD = $get(^WWWDATEN(YM,+$h,YUSER,YFORM,"D",2)) // prev data
			set prevImport = $piece(prevYFELD,Y,127)
			
			if (prevImport'="") && ($piece(pYFELD,Y,127)'=prevImport) {
				do RemoveImportCosts(prevImport,idSupplier)
			}
		}
	}
	
	quit
	
]]></Routine>
</Export>