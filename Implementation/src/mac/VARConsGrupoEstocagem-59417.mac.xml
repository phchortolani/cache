<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARConsGrupoEstocagem" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[VARConsGrupoEstocagem
	#include WWWConst
	#include INConst
	quit

OnAfterSave
	new Local, Grupo, Mes, Ano

	kill ^VARTempConsGrupoEstocagem(YM,YBED)
	
	set Local 	 = $get(VORG(1))
	set Grupo 	 = $get(VORG(2))
	set Mes 	 = $get(VORG(3))
	set Ano		 = $get(VORG(4))
	set CurvaABC = $get(VORG(5))
	
	set $piece(^VARTempConsGrupoEstocagem(YM,YBED,1),Y,1) = Local
	set $piece(^VARTempConsGrupoEstocagem(YM,YBED,1),Y,2) = Grupo
	set $piece(^VARTempConsGrupoEstocagem(YM,YBED,1),Y,3) = Mes
	set $piece(^VARTempConsGrupoEstocagem(YM,YBED,1),Y,4) = Ano
	set $piece(^VARTempConsGrupoEstocagem(YM,YBED,1),Y,5) = CurvaABC
	
	do VARLogAfterSave^VARUtil(YBED,YFORM)
	do GoToForm^COMUtilForm("VARConsGrupoEstocagem",1,,,,,)	
	
	quit

OnAfterDataFields
	new objTemp, vLocal, vGrupo, vMes, vAno, vCurvaABC, querySQL

	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	k ^VARTempConsGrupoEstocagemSQL
	
	set objTemp = $get(^VARTempConsGrupoEstocagem(YM,YBED,1))
	
	set vLocal		= $piece(objTemp,Y,1)
	set vGrupo		= $piece(objTemp,Y,2)
	set vMes		= $piece(objTemp,Y,3)
	set vAno		= $piece(objTemp,Y,4)
	set vCurvaABC	= $piece(objTemp,Y,5)
	
	if ($$CheckFechamentoContabil^VAREntradaNotaFiscal(vMes,vAno) = $$$NO){
		$$$Alert("Este relatório esta disponível somente para os meses/anos que já foi gerado o fechamento contábil.")
		quit
	}
	
	set querySQL = $$MontaSQL(vLocal,vGrupo,vMes,vAno,vCurvaABC)
	
	do ExibeResultados(querySQL,vLocal,vGrupo,vMes,vAno,vCurvaABC)
	
	quit
	
MontaSQL(pLocal,pGrupo,pMes,pAno,pCurvaABC)
	new meuSQL, DataInicial, DataFinal
	
	set DataInicial = $zdateh(pMes_"/01/"_pAno)
	set DataFinal  	= $$SQLGetUltimoDiaMes^VARSQL(pMes,pAno)
	
	set meuSQL = ""
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" Movimento, "
	set meuSQL = meuSQL_" LocalArmaz, "
	set meuSQL = meuSQL_" $$SQLGetLocationName^VARSQL(LocalArmaz) as DescLocal, "
	set meuSQL = meuSQL_" Produto, "
	set meuSQL = meuSQL_" DescProduto, "
	set meuSQL = meuSQL_" $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) as GrupoPai, "
	set meuSQL = meuSQL_" $$SQLGetDescGrupoItem^VARSQL($$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto))) as DescGrupo, "
	set meuSQL = meuSQL_" SUM(ROUND(Quantidade, 4)) as QtdeFinal, "
	set meuSQL = meuSQL_" SUM(ROUND(Valor, 4)) as ValorFinal "
	
	set meuSQL = meuSQL_" FROM ( "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'DEVOLUCAO' as Movimento, "
	set meuSQL = meuSQL_" StockHistory.Location as LocalArmaz, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" $$SQLGetDescricaoProduto^VARSQL(StockHistory.Item) as DescProduto, "
	set meuSQL = meuSQL_" CASE $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) "
    set meuSQL = meuSQL_" WHEN 'Entrada' "
  	set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.QtyMoved), 4) "
   	set meuSQL = meuSQL_" ELSE ROUND(- $$GetValorPositivo^VARSQL(StockHistory.QtyMoved), 4) END AS Quantidade, "
	set meuSQL = meuSQL_" CASE $$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) "
  	set meuSQL = meuSQL_" WHEN 'Entrada' "
    set meuSQL = meuSQL_" THEN ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) "
    set meuSQL = meuSQL_" ELSE ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) END as Valor "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (22)) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada') "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 1) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorRecebimento^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetTipoRecebimento^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada'))	"
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 7) "
	set meuSQL = meuSQL_" AND ($$GetNatureza^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) = 'DB') "
	set meuSQL = meuSQL_" AND ($$GetTipoEstorno^VARFechamentoContabil(StockHistory.Reference) = 4) "
	set meuSQL = meuSQL_" AND ($$GetFornecedorEstorno^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL()) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída'))) "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'REQUISICAO' as Movimento, "
	set meuSQL = meuSQL_" StockHistory.Location as LocalArmaz, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" $$SQLGetDescricaoProduto^VARSQL(StockHistory.Item) as DescProduto, "
	set meuSQL = meuSQL_" ROUND(StockHistory.QtyMoved, 4) as Quantidade, "
	set meuSQL = meuSQL_" ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as Valor "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (11, 21)) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 35) "
	set meuSQL = meuSQL_" AND (($$GetTipoProducao^VARFechamentoContabil(StockHistory.Reference) = 2) OR ($$IsSaidaParaManipulacaoMagistral^VARFechamentoContabil(StockHistory.Reference,35) = 1)))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	set meuSQL = meuSQL_" UNION ALL "
	
	set meuSQL = meuSQL_" SELECT "
	set meuSQL = meuSQL_" 'TFR-SAIDA' as Movimento, "
	set meuSQL = meuSQL_" StockHistory.Location as LocalArmaz, "
	set meuSQL = meuSQL_" StockHistory.Item as Produto, "
	set meuSQL = meuSQL_" $$SQLGetDescricaoProduto^VARSQL(StockHistory.Item) as DescProduto, "
	set meuSQL = meuSQL_" ROUND(StockHistory.QtyMoved, 4) as Quantidade, "
	set meuSQL = meuSQL_" ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as Valor "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory StockHistory "
	set meuSQL = meuSQL_" WHERE (((($$IsRouteFromRequisitante^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 30 "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito') "
	set meuSQL = meuSQL_" AND ($$IsLocalDestinoTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)) "
	set meuSQL = meuSQL_" OR ($$IsRouteFromAbastecedor^VARFechamentoContabil(StockHistory.Reference) = 1 "
	set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 31  "
	set meuSQL = meuSQL_" AND ($$IsLocalAceiteTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)))) "
	set meuSQL = meuSQL_" OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 32) "
	set meuSQL = meuSQL_" AND (StockHistory.Storage->Code != 'EmTransito'))) "
	set meuSQL = meuSQL_" AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída') "
	set meuSQL = meuSQL_" AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0) "
	set meuSQL = meuSQL_" AND (StockHistory.DateConfirmed BETWEEN TO_DATE('"_DataInicial_"', 'DD/MM/YYYY') AND TO_DATE('"_DataFinal_"', 'DD/MM/YYYY')) "
	
	set meuSQL = meuSQL_" ) "
	
	set meuSQL = meuSQL_" WHERE Movimento IS NOT NULL "
	
	if (pLocal '= ""){
		set meuSQL = meuSQL_" AND LocalArmaz = '"_pLocal_"' "	
	}
	if (pGrupo '= ""){
		set meuSQL = meuSQL_" AND $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(Produto)) = '"_$$SQLGetGrupoPai^VARSQL(pGrupo)_"' "
	}
	if (pCurvaABC '= ""){
		set meuSQL = meuSQL_" AND $$SQLGetClassificacaoABC^VARSQL(Produto) = '"_pCurvaABC_"' "
	}
	
	set meuSQL = meuSQL_" GROUP BY LocalArmaz, Produto "
	set meuSQL = meuSQL_" ORDER BY LocalArmaz, GrupoPai, Produto"
	
	quit meuSQL

ExibeResultados(pquerySQL,pLocal,pGrupo,pMes,pAno,pCurvaABC)
	new rsConsGrupo, lstHeader, count, fltValorLocal, fltValorTotal, idLastGroup, idLastLocation,
		fltSomaGrupo, fltSomaLocal
	
	set rsConsGrupo = ##class(%ResultSet).%New()	

	do rsConsGrupo.Prepare(pquerySQL)
	do rsConsGrupo.Execute()
	
	set count 		   = 0
	set fltValorLocal  = 0
	set fltValorTotal  = 0
	set fltSomaGrupo   = 0
	set fltSomaLocal   = 0
	set idLastGroup	   = ""
	set idLastLocation = ""
	set PrcntEstoque   = ""	
	
	w "<div style=padding-left:2px>"
	
	set lstHeader = ""
	set lstHeader = lstHeader_$listbuild("Produto","Quantidade&nbsp;<br />&nbsp;&nbsp;Consumo","Valor&nbsp;<br />&nbsp;&nbsp;Consumo (R$)","% Estoque")
	
	while (rsConsGrupo.Next()) {
			
		set Movimento	= rsConsGrupo.GetData(1)
		set LocalArmaz	= rsConsGrupo.GetData(2)	
		set DescLocal	= rsConsGrupo.GetData(3)
		set Produto 	= rsConsGrupo.GetData(4)
		set DescProduto	= rsConsGrupo.GetData(5)
		set GrupoPai	= rsConsGrupo.GetData(6)
		set DescGrupo	= rsConsGrupo.GetData(7)
		set QtdeFinal	= -rsConsGrupo.GetData(8)
		set ValorFinal	= -rsConsGrupo.GetData(9)
		
		if (count = 0) {
			do Start^COMTable(lstHeader,LocalArmaz_" - "_DescLocal,,,$$$YES)
		}
		
	   	if ( (idLastLocation '= LocalArmaz) && (idLastLocation '= "") ) {		
			
			do NewLine^COMTable("lightblue")
			do InsertCell^COMTable("<strong>Total do Grupo</strong>",,,,"RIGHT",,2)
			do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaGrupo)_"</strong>",,,,"RIGHT")
			do InsertCell^COMTable("")
			do EndLine^COMTable()
			
		   	do NewLine^COMTable("lightsteelblue")
			do InsertCell^COMTable("<strong>Total do Local</strong>",,,,"RIGHT",,2)
			do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltValorLocal)_"</strong>",,,,"RIGHT")
			do InsertCell^COMTable("")
			do EndLine^COMTable()
			
			set fltValorLocal = 0
			set fltSomaLocal  = 0
			set fltSomaGrupo  = 0
			
			do Stop^COMTable()
			do Start^COMTable(lstHeader,LocalArmaz_" - "_DescLocal,,,$$$YES)
			
			do NewLine^COMTable("lightgoldenrodyellow")
			do InsertCell^COMTable("<strong>"_GrupoPai_" - "_DescGrupo_"</strong>",,,,"LEFT",,4)
			do EndLine^COMTable()
			
			set fltSomaLocal = -$$CalculaTotalEstoqueLocal(LocalArmaz,pMes,pAno)	
			
			do NewLine^COMTable()
			do InsertCell^COMTable(Produto_" - "_DescProduto,,,,"LEFT",,,,,1)
			do InsertCell^COMTable($$^WWWTR(0,12,QtdeFinal),,,,"RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,ValorFinal,2),,,,"RIGHT")
			do InsertCell^COMTable($FNUMBER(((ValorFinal/fltSomaLocal)*100),".",4),,,,"RIGHT")
			do EndLine^COMTable()
			
			set fltValorLocal  = fltValorLocal + ValorFinal
			set fltValorTotal  = fltValorTotal + ValorFinal
			set fltSomaGrupo   = fltSomaGrupo  + ValorFinal
						
	   	
	   	} else {
		   	
		   	if (idLastGroup = ""){
			   	do NewLine^COMTable("lightgoldenrodyellow")
				do InsertCell^COMTable("<strong>"_GrupoPai_" - "_DescGrupo_"</strong>",,,,"LEFT",,4)
				do EndLine^COMTable()
				
				set fltSomaLocal = -$$CalculaTotalEstoqueLocal(LocalArmaz,pMes,pAno)
		   	}
		   	
		   	if ( (idLastGroup '= GrupoPai) && (idLastGroup '= "") ){
			   	do NewLine^COMTable("lightblue")
				do InsertCell^COMTable("<strong>Total do Grupo</strong>",,,,"RIGHT",,2)
				do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaGrupo)_"</strong>",,,,"RIGHT")
				do InsertCell^COMTable("")
				do EndLine^COMTable()
			   	
			   	set fltSomaGrupo  = 0
			   	
				do NewLine^COMTable("lightgoldenrodyellow")
				do InsertCell^COMTable("<strong>"_GrupoPai_" - "_DescGrupo_"</strong>",,,,"LEFT",,4)
				do EndLine^COMTable()
	   		}
		   	
		   	do NewLine^COMTable()
			do InsertCell^COMTable(Produto_" - "_DescProduto,,,,"LEFT",,,,,1)
			do InsertCell^COMTable($$^WWWTR(0,12,QtdeFinal),,,,"RIGHT")
			do InsertCell^COMTable($$^WWWTR(0,8,ValorFinal,2),,,,"RIGHT")
			do InsertCell^COMTable($FNUMBER(((ValorFinal/fltSomaLocal)*100),".",4),,,,"RIGHT")
			do EndLine^COMTable()
			
			set fltValorLocal  = fltValorLocal + ValorFinal
			set fltValorTotal  = fltValorTotal + ValorFinal
			set fltSomaGrupo   = fltSomaGrupo  + ValorFinal
			
	   	}
		
		set idLastGroup	   = GrupoPai
		set idLastLocation = LocalArmaz
		set count = $i(count)		
	}
	
	if (count > 0) {
		do NewLine^COMTable("lightblue")
		do InsertCell^COMTable("<strong>Total do Grupo</strong>",,,,"RIGHT",,2)
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltSomaGrupo)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("")
		do EndLine^COMTable()
		
		do NewLine^COMTable("lightsteelblue")
		do InsertCell^COMTable("<strong>Total do Local</strong>",,,,"RIGHT",,2)
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltValorLocal)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("")
		do EndLine^COMTable()
		
		do NewLine^COMTable("lightsteelblue")
		do InsertCell^COMTable("<strong>Total Geral</strong>",,,,"RIGHT",,2)
		do InsertCell^COMTable("<strong>"_$$FormatCurrency^COMTable(fltValorTotal)_"</strong>",,,,"RIGHT")
		do InsertCell^COMTable("")
		do EndLine^COMTable()	
		
		do Stop^COMTable()
		
	} elseif (count = 0){
		do Start^COMTable(lstHeader,,,,$$$YES)
			
		do NewLine^COMTable()
		do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,4)
		do EndLine^COMTable()
		
		do Stop^COMTable()
	}
	
	do rsConsGrupo.Close()
	
	w "</div>"
	
	quit
	
OnBeforeButtonLine(pYFELD)	
	do LoadListaLocaisDeEstoque
	quit

LoadListaLocaisDeEstoque
	new CodLocal, NomeLocal, objLista, objUsuario, perfilUsuario,
		locaisPermitidos

	set objLista = ""

	set objUsuario = $get(^WWW013(YM,YBED,1))		
    set perfilUsuario = $$$WWW013UserAccess(objUsuario)
	set locaisPermitidos = $$$WWW013AllowedLocations(objUsuario)

 	kill ^COMTempList(YM,YUSER,"VARLocais")

	&sql(
		DECLARE CursorLocais CURSOR FOR 
		SELECT Location, LocationName
		INTO :CodLocal, :NomeLocal
		FROM WWW0121
 		WHERE COMPANY = :YM
 		AND StorageLocn = 1
 		ORDER BY to_number(Location) )


	&sql(OPEN CursorLocais)
    IF (SQLCODE) {
		QUIT
    }

   	FOR { &sql(FETCH CursorLocais)
		QUIT:SQLCODE
		
		; Caso o usuário não seja administrador e o local não esteja na
		; lista de locais permitidos ao usuário, não popula
		if ((perfilUsuario '= 1) &&
			('$find(";"_locaisPermitidos_";", ";"_CodLocal_";"))) {
			continue
		}

		set $piece(objLista, Y, 1) = NomeLocal
		set ^COMTempList(YM,YUSER,"VARLocais",CodLocal,1)=objLista
   	}

   	&sql(CLOSE CursorLocais)
 
	quit
	
ImprimeRelatorio()
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Imprime o relatório da tela.
    ;-------------------------------------------------------------------------------
	
	set vLocal 	  = $get(VORG(1))
	set vGrupo 	  = $get(VORG(2))
	set vMes 	  = $get(VORG(3))
	set vAno	  = $get(VORG(4))
	set vCurvaABC = $get(VORG(5))

	if ((vMes = "")||(vAno = "")) {
		$$$Alert("Preencha todos os campos obrigatórios.")
		do GoToForm^COMUtilForm("VARConsGrupoEstocagem","")
	}
	
	do RunReportConsGrupoEstocagem^VARJasperRunReport(vLocal,vGrupo,vMes,vAno,vCurvaABC)
	
	quit
	
CalculaTotalEstoqueLocal(pLocal,pMes,pAno)
	new SomaValorLocal, DataInicial, DataFinal, localAnterior, saldoAnterior
	
	set DataInicial = $zdateh(pMes_"/01/"_pAno)
	set DataFinal  	= $$SQLGetUltimoDiaMes^VARSQL(pMes,pAno)
	
	quit:((pLocal="")||(pMes="")||(pAno="")) 0

	set localAnterior = $piece($get(^VARTempConsGrupoEstocagemSQL(YM,YBED,1)),Y,1)
 	set saldoAnterior = +$piece($get(^VARTempConsGrupoEstocagemSQL(YM,YBED]]><![CDATA[,1)),Y,2)
 	
	set SomaValorLocal = saldoAnterior
	
	if (pLocal '= localAnterior) {
		&sql(SELECT SUM(ValorFinal)
			INTO :SomaValorLocal
			FROM (SELECT	LocalArmaz, Produto, SUM(ROUND(Valor, 4)) as ValorFinal
				  FROM (SELECT	StockHistory.Location as LocalArmaz, StockHistory.Item as Produto,
	 							ROUND(+ $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as Valor
						FROM alSOH.dStockHistory StockHistory
						WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (22))
						OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 1)
						AND ($$GetNatureza^VARFechamentoContabil(StockHistory.MovementType, StockHistory.Reference, StockHistory.QtyMoved) = 'DB')
						AND ($$GetFornecedorRecebimento^VARFechamentoContabil(StockHistory.Reference) = $$GetFornFechamentoContabil^VARSQL())
						AND ($$GetTipoRecebimento^VARFechamentoContabil(StockHistory.Reference) = 4)))
						AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Entrada')
						AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0)
						AND (StockHistory.DateConfirmed BETWEEN TO_DATE(:DataInicial, 'DD/MM/YYYY') AND TO_DATE(:DataFinal, 'DD/MM/YYYY'))
					
						UNION ALL
					
						SELECT	StockHistory.Location as LocalArmaz, StockHistory.Item as Produto,
	 							ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as Valor
						FROM alSOH.dStockHistory StockHistory
						WHERE (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) IN (11, 21))
						OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 35)
						AND (($$GetTipoProducao^VARFechamentoContabil(StockHistory.Reference) = 2) OR ($$IsSaidaParaManipulacaoMagistral^VARFechamentoContabil(StockHistory.Reference,35) = 1))))
						AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída')
						AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0)
						AND (StockHistory.DateConfirmed BETWEEN TO_DATE(:DataInicial, 'DD/MM/YYYY') AND TO_DATE(:DataFinal, 'DD/MM/YYYY'))

						UNION ALL

						SELECT	StockHistory.Location as LocalArmaz, StockHistory.Item as Produto,
								ROUND(- $$GetValorPositivo^VARSQL(StockHistory.TxValue), 4) as Valor
						FROM alSOH.dStockHistory StockHistory
						WHERE ((($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 30)
						AND ($$IsLocalDestinoTransfArmazenagem^VARFechamentoContabil(StockHistory.Reference) = 0)
						AND (StockHistory.Storage->Code != 'EmTransito'))
						OR (($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType) = 32)
						AND (StockHistory.Storage->Code != 'EmTransito')))
						AND ($$GetMovmtVetor^VARStockHistory($$SQLGetMovTypeNumber^VARSQL(StockHistory.MovementType), StockHistory.QtyMoved) = 'Saída')
						AND ($$IsProdutoForaFechamentoContabil^VARFechamentoContabil(StockHistory.Item) = 0)
						AND (StockHistory.DateConfirmed BETWEEN TO_DATE(:DataInicial, 'DD/MM/YYYY') AND TO_DATE(:DataFinal, 'DD/MM/YYYY'))
					
				  )
				  
				  WHERE LocalArmaz = :pLocal
				  GROUP BY LocalArmaz,Produto
			)
		)
		
		set ^VARTempConsGrupoEstocagemSQL(YM,YBED,1) = pLocal_"~"_SomaValorLocal
	}
	
	quit SomaValorLocal]]></Routine>
</Export>