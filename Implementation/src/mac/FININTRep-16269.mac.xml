<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FININTRep" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FININTRep
	
#include COMSYS
#include FINConst
	
ExportToCSV(pdteFrom,pdteTo)
	;-------------------------------------------------------------------------------
	; Exports a financial transaction summary for the specified period to CSV
	; as a file FIRyymmdd-yymmdd.csv based on from and to dates (no century)
	; 
	; Called By: Form FININTRep - OnAfterSave
	; 
	; Inputs: pdteFrom, pdteTo : boundary of period - both inclusive
	;
	; Returns: nothing
	;
	; History:
	; 22-Feb-2010	GRF		SR17190: Created from COMGridEdit31Excel
	;-------------------------------------------------------------------------------
	new strFrom,strTo
	
	if $get(pdteFrom)="" set pdteFrom = $horolog-1
	if $get(pdteTo)=""   set pdteTo = pdteFrom
	if pdteTo<pdteFrom   set pdteTo = pdteFrom
	
	set strFrom = $extract($translate($zdate(pdteFrom,3),"-",""),3,8)
	set strTo   = $extract($translate($zdate(pdteTo,3)  ,"-",""),3,8)
	
	set ^CacheTempFININTRep(YUSER) = strFrom_"-"_strTo
	
	$$$StartScript()
	do WindowPrint^COMViewPrint($$$EnumDisplayTypeCSV,"OutputCSV^FININTRep(.objOutput,"_pdteFrom_","_pdteTo_")")
	$$$EndScript()
	do ReloadForm^COMUtilForm()
	quit
	
	
OutputCSV(&pobjOutput,pdteFrom,pdteTo)
	;-------------------------------------------------------------------------------
	; Populates pobjOutput with the summary of finance transactions for period.
	; 
	; Called By: ##class(COM.COMViewExportToExcel).OnPage() via WindowPrint
	;            argument in ExportToCSV^FININTRep
	; 
	; Inputs: Stream object created by COM.COMViewExportToExcel
	;         Period dates specified on form FININTRep
	;
	; Returns: nothing
	;
	; History:
	; 28-Sep-2012	SCR		SR18125: Keep Account number a Single field and add Name
	; 26-Sep-2012	SCR		SR18125: Reformat line & Add Header
	; 02-Mar-2010	GRF		SR17190: Separate DR and CR entries - no headings
	; 22-Feb-2010	GRF		SR17190: Created from COMGridEdit31Excel
	;-------------------------------------------------------------------------------
 	new curAmount,dteTx,idAcct,objData,strDelim,strLine,objAcct
 	
	if '$data(Y) do ^WWWVAR
	
	;set strLine = "Date,Account Seg 1,Account Seg 2,Account Seg 3,Total Debit,Total Credit"
	;do pobjOutput.WriteLine(strLine)
	
	do GetData(.objData,pdteFrom,pdteTo)
	
	;set strDelim = $$$FINGeneralSetupAccountDelimiter($get(^FINGeneralSetup(0,0,1)))
	;if strDelim="" set strDelim = "-"
	
	set dteTx = ""
	set strLine="Date,Account,Name,Debit,Credit" 
	do pobjOutput.WriteLine(strLine)
	for {
		set dteTx = $order(objData(dteTx))
		quit:dteTx=""
		
		set idAcct = ""
		for {
			set idAcct = $order(objData(dteTx,idAcct))
			quit:idAcct=""
			
			set objAcct=$get(^FINGLAccount(YM,idAcct,1))
			
			set curAmount = $get(objData(dteTx,idAcct,"Cr"))
			if curAmount { 
				set strLine = $$^WWWDATE(dteTx)
				;set strLine = strLine_$$$COMMA_$piece(idAcct,strDelim,1)_$$$COMMA_$piece(idAcct,strDelim,2)_$$$COMMA_$piece(idAcct,strDelim,3)
				;set strLine = strLine_$$$COMMA_0_$$$COMMA_$justify(+curAmount,0,2)
				set strLine = strLine_$$$COMMA_idAcct_$$$COMMA_$$$FINGLAccountDescription(objAcct) 	;SR18125
				set strLine = strLine_$$$COMMA_$$$COMMA_"""$"_$justify(+curAmount,0,2)_""""			;SR18125
			
				do pobjOutput.WriteLine(strLine)
			}
			set curAmount = $get(objData(dteTx,idAcct,"Dr"))
			if curAmount {
				set strLine = $$^WWWDATE(dteTx)
				;set strLine = strLine_$$$COMMA_$piece(idAcct,strDelim,1)_$$$COMMA_$piece(idAcct,strDelim,2)_$$$COMMA_$piece(idAcct,strDelim,3)
				;set strLine = strLine_$$$COMMA_$justify(+curAmount,0,2)_$$$COMMA_0
				set strLine = strLine_$$$COMMA_idAcct_$$$COMMA_$$$FINGLAccountDescription(objAcct) 	;SR18125
				set strLine = strLine_$$$COMMA_"""$"_$justify(+curAmount,0,2)_""""_$$$COMMA			;SR18125
			
				do pobjOutput.WriteLine(strLine)
			}
		}
	}
	/*		
			set objAmounts = objData(dteTx,idAcct)
			
			set strLine = $$^WWWDATE(dteTx)
			set strLine = strLine_$$$COMMA_$piece(idAcct,strDelim,1)_$$$COMMA_$piece(idAcct,strDelim,2)_$$$COMMA_$piece(idAcct,strDelim,3)
			set strLine = strLine_$$$COMMA_$justify(+$piece(objAmounts,Y,1),0,2)_$$$COMMA_$justify(+$piece(objAmounts,Y,2),0,2)
			
			do pobjOutput.WriteLine(strLine)
		}
	}
	*/
	do pobjOutput.WriteLine()
	quit
 
 
GetData(&pobjData,pdteFrom,pdteTo) private
	;-------------------------------------------------------------------------------
	; Accumulate appropriate Finance Transaction data for later output
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 
	; 26-Sep-2012	SCR		SR18125: Use Actual Date
	; 02-Mar-2010	GRF		SR17190: Separate DR and CR entries
	; 26-Feb-2010	GRF		SR17190: Consolidate against end date
	; 22-Feb-2010	GRF		SR17190: Created from COMGridEdit31Excel
	;-------------------------------------------------------------------------------
	;new curCredit,curDebit
	new dteTx,idAcct,idGLTx,idTxLine,objAmounts,objLine
	
	set dteTx = pdteFrom-1
	for {
		set dteTx = $order(^FINGLTrans(0,1,dteTx))
		quit:dteTx=""
		quit:dteTx=" "
		quit:dteTx>pdteTo
		
		set idGLTx = ""
		for {
			set idGLTx = $order(^FINGLTrans(0,1,dteTx,idGLTx))
			quit:idGLTx=""
			
			set idTxLine = ""
			for {
				set idTxLine = $order(^FINGLTranLine(0,idGLTx,idTxLine))
				quit:idTxLine=""
				
				
				set objLine   = $get(^FINGLTranLine(0,idGLTx,idTxLine,1))
				set idAcct    = $$$FINGLTranLineAccount(objLine)
				
				set objAmounts = $get(pobjData(dteTx,idAcct))
	;			set curDebit  = $$$FINGLTranLineDebit(objLine)  + $piece(objAmounts,Y,1)
	;			set curCredit = $$$FINGLTranLineCredit(objLine) + $piece(objAmounts,Y,2)
				
	;			set pobjData(dteTx,idAcct) = curDebit_Y_curCredit
	;			set pobjData(pdteTo,idAcct) = curDebit_Y_curCredit
				;set pobjData(pdteTo,idAcct,"Dr") = $$$FINGLTranLineDebit(objLine)  + $get(pobjData(pdteTo,idAcct,"Dr"))
				;set pobjData(pdteTo,idAcct,"Cr") = $$$FINGLTranLineCredit(objLine) + $get(pobjData(pdteTo,idAcct,"Cr"))
				set pobjData(dteTx,idAcct,"Dr") = $$$FINGLTranLineDebit(objLine)  + $get(pobjData(pdteTo,idAcct,"Dr")) ;SR18125
				set pobjData(dteTx,idAcct,"Cr") = $$$FINGLTranLineCredit(objLine) + $get(pobjData(pdteTo,idAcct,"Cr")) ;SR18125
			}
		}
	}
	quit
	
	
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
	
ExportToExcel(pdteFrom,pdteTo)  ;  Not called - created when making CSV version & kept
	;-------------------------------------------------------------------------------
	; Exports a financial transaction summary for the specified period to Exel
	;
	; Inputs: pdteFrom, pdteTo : boundary of period - both inclusive
	;
	; Returns: nothing
	;
	; History:
	; 22-Feb-2010	GRF		SR17190: Created from COMGridEdit31Excel
	;-------------------------------------------------------------------------------
	if $get(pdteFrom)="" set pdteFrom = +$horolog
	if $get(pdteTo)=""   set pdteTo = pdteFrom
	if pdteTo<pdteFrom   set pdteTo = pdteFrom
	
	$$$StartScript()
	do WindowPrint^COMViewPrint($$$EnumDisplayTypeCSV,"OutputExcel^FININTRep(.objOutput,"_pdteFrom_","_pdteTo_")")
	$$$EndScript()
	quit
	
	
OutputExcel(&pobjOutput,pdteFrom,pdteTo)  ;  Not called - created when making CSV version & kept
	;-------------------------------------------------------------------------------
	; Populates pobjOutput with the summary of finance transactions for period.
	; 
	; Called By: ##class(COM.COMViewExportToExcel).OnPage() via WindowPrint
	;            argument in ExportToExcel^FININTRep
	; 
	; Inputs: Stream object created by COM.COMViewExportToExcel
	;         Period dates specified on form FININTRep
	;
	; Returns: nothing
	;
	; History:
	; 02-Mar-2010	GRF		SR17190: Separate DR and CR entries - no headings
	; 22-Feb-2010	GRF		SR17190: Created from COMGridEdit31Excel
	;-------------------------------------------------------------------------------
 	new curAmount,dteTx,idAcct,objData,strDelim,strLine
 	
	if '$data(Y) do ^WWWVAR
	
	;set strLine = "Date~Account Seg 1~Account Seg 2~Account Seg 3~Total Debit~Total Credit"
	;set strLine = $$OutputLine(strLine," class='header'")
	;do pobjOutput.WriteLine("<tr>"_strLine_"</tr>")
	
	do GetData(.objData,pdteFrom,pdteTo)
	
	set strDelim = $$$FINGeneralSetupAccountDelimiter($get(^FINGeneralSetup(0,0,1)))
	if strDelim="" set strDelim = "-"
	
	set dteTx = ""
	for {
		set dteTx = $order(objData(dteTx))
		quit:dteTx=""
		
		set idAcct = ""
		for {
			set idAcct = $order(objData(dteTx,idAcct))
			quit:idAcct=""
		
			set curAmount = $get(objData(dteTx,idAcct,"Cr"))
			if curAmount {
				set strLine = $$^WWWDATE(dteTx)
				set strLine = strLine_Y_$piece(idAcct,strDelim,1)_Y_$piece(idAcct,strDelim,2)_Y_$piece(idAcct,strDelim,3)
				set strLine = strLine_Y_0_Y_$justify(+curAmount,0,2)
			
				set strLine = $$OutputLine(strLine,"")
				do pobjOutput.WriteLine(strLine)
			}
			set curAmount = $get(objData(dteTx,idAcct,"Dr"))
			if curAmount {
				set strLine = $$^WWWDATE(dteTx)
				set strLine = strLine_Y_$piece(idAcct,strDelim,1)_Y_$piece(idAcct,strDelim,2)_Y_$piece(idAcct,strDelim,3)
				set strLine = strLine_Y_$justify(+curAmount,0,2)_Y_0
			
				set strLine = $$OutputLine(strLine,"")
				do pobjOutput.WriteLine(strLine)
			}
		}
	}
	
	/*
			set objAmounts = objData(dteTx,idAcct)
			
			set strLine = $$^WWWDATE(dteTx)
			set strLine = strLine_Y_$piece(idAcct,strDelim,1)_Y_$piece(idAcct,strDelim,2)_Y_$piece(idAcct,strDelim,3)
			set strLine = strLine_Y_$justify(+$piece(objAmounts,Y,1),0,2)_Y_$justify(+$piece(objAmounts,Y,2),0,2)
			
			set strLine = $$OutputLine(strLine,"")
			do pobjOutput.WriteLine("<tr>"_strLine_"</tr>")
		}
	}
	*/
	quit
 
 
OutputLine(pstrLine,pstrFormat) private
	;-------------------------------------------------------------------------------
	; Write line to the screen
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 22-Feb-2010	GRF		SR17190: Created from COMGridEdit31Excel
	;-------------------------------------------------------------------------------
	new intCell,strLine,strPiece
	
	set strLine = ""
	for intCell=1:1:$length(pstrLine,Y) {
		set strPiece = $piece(pstrLine,Y,intCell)
		if $extract(strPiece,1,3)="<p>" set strPiece = $piece(strPiece,"<p>",2,9999999)
		set strLine = strLine_"<td"_pstrFormat_">"_strPiece_"</td>"
	}
	set strLine=$$FullReplace^COMUtilStr(strLine,"<html dir=´ltr´>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<html dir=""ltr"">","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<html dir='ltr'>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<title>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</title>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"<head>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</head>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</html>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</body>","")
	set strLine=$$FullReplace^COMUtilStr(strLine,"</p>","<br>")
	
	quit strLine
	
]]></Routine>
</Export>