<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INFIBBUCH4" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INFIBBUCH4(BUCHUNG="",YFPARA="",BUCHART="",KEY="",TYPE="")
	
#include COMSYS
#include INConst
#include FINEnum
	
	;-------------------------------------------------------------------------------
	; Note : BUCHART is not used, KEY and TYPE are only used in the main routine
	; 
	; History:
	; 05-Feb-2010	GRF		Use enum macros
	; 07-Apr-2005	GRF		SR10478 : Split off INFIBBUCH43 and INFIBBUCH44
	; 23-Mar-2005	GRF		SR10478 : Clean up arguments; Break routine into
	; 						more manageable chunks
	; 08.12.2001	DT		Created
	;-------------------------------------------------------------------------------
	if TYPE=$$$EnumSuppInvoice {
		do ININVOICE^INFIBBUCH41(BUCHUNG,YFPARA)
	
	} elseif TYPE=$$$EnumCustInvoice {
		do OUTINVOICE^INFIBBUCH42(BUCHUNG,YFPARA)
	
	} elseif TYPE=$$$EnumStockChange {
		do INVENTORY^INFIBBUCH43(BUCHUNG,YFPARA)
	
	} elseif TYPE=$$$EnumManufacture {
		do PRODUCTION^INFIBBUCH44(BUCHUNG,YFPARA)
	}
	quit KEY
	
	
CopyCharVals(pInterfaceType="",pBUCHUNG="",pPOS=1)
	;-------------------------------------------------------------------------------
	; Associate Characteristic Values from BUCHUNG record with the Characteristic Types
	; Strings match $$$CSTBUCHUNGPieces & $$$CSTBUCHUNGTypes definitions in CST.INC
	; 
	; History:
	; 05-Jun-2007	GRF		Brace format
	; 01-Apr-2005	GRF		SR10478 : Include To Location codes and Reason Code
	; 22-Feb-2005	GRF		SR10478 : Common code
	;-------------------------------------------------------------------------------
	new CVCode,idx,Length1,List1,List2,Posn
	
	quit:pInterfaceType=""
	quit:pPOS=""
	
	set List1 = "70,71,72,73,74,75,76,77,78,80,81,85,86,90,91,92,95,96,97,100,101,103"
	set List2 = "IC1,IC2,IC3,C-IC1,C-IC2,C-IC3,P-IC1,P-IC2,P-IC3,LC1,LC2,T-LC1,T-LC2,SC1,SC2,SC3,CC1,CC2,CC3,OC1,OC2,RC"
	set Length1 = $length(List1,",")
	
	for idx=1:1:Length1 {
		set Posn   = $piece(List1,",",idx)
		set CVCode = $piece(List2,",",idx)
		set ^mtemp($job,pInterfaceType,"Lines",pPOS,"CharVal",CVCode) = $piece(pBUCHUNG,Y,Posn)
	}
	quit
	
 	;.
 	;.  ***********************************************
 	;.  ***			  16-Nov-2004 SR10491			***
 	;.  *** Moved from Tax on Lines to Tax on Total ***
 	;.  ***********************************************
 	;.  
 	;. 19-Mar-2004 SCR		Updated
 	;. This Code handles TAX on all lines only, Assumes Tax has been added to each Line
 	;. It needs to be upgraded to Handle Tax on Total and Tax Exempt Lines
 	;. The Logic should not be in this should not be in this interface.
 	;. It should be deeper in the Invoice processing where the Cost is calculated.
 	;. 
 	;. do
 	;. . new TAXLOC,TaxCode,RatesArray,TaxType,TaxRate,LineAmount,TaxLine,TaxDetail,TaxAccount,TaxAmount
 	;. . SET TAXLOC=""
 	;. . SET TaxCode=$piece(BUCHUNG,Y,6)
 	;. . set LineAmount=$PIECE(LINE(MAXPOS),Y,3)
 	;. .;IF SUPPLIER'="" SET TAXLOC = $PIECE($GET(^INLIEF(0,SUPPLIER,1)),Y,52)  ;UST-GEBIET
 	;. . IF TAXLOC="" IF $PIECE(BUCHUNG,Y,16)'="" SET TAXLOC = $PIECE($GET(^WWW0121(0,0,$PIECE(BUCHUNG,Y,16),1)),Y,52)
 	;. . IF $$EXIST^%R("COMTAX.OBJ",$GET(YUCI)) DO TaxRates^COMTAX(TaxCode,TAXLOC,+$HOROLOG,.RatesArray)      ;Bec;05.12.03;24774;CHECK IF COMPILED ROUTINE EXIST.
 	;. . set TaxRate=""
 	;. . for TaxLine=1:1 set TaxRate=$order(RatesArray(TaxRate)) quit:TaxRate=""  do
 	;. . . set TaxDetail=$get(RatesArray(TaxRate))
 	;. . . quit:TaxDetail=""
 	;. . . set TaxCode=$piece(TaxDetail,Y,1)
 	;. . . set TaxRate=$piece(TaxDetail,Y,2)
 	;. . . set TaxAccount=$piece(TaxDetail,Y,3)
 	;. . . set TaxAmount=$justify(LineAmount-(LineAmount/(100+TaxRate)*100),0,2)
 	;. . . set ^mtemp($JOB,"SupInv","Lines",MAXPOS,"Taxes",TaxCode,"Account")=TaxAccount
 	;. . . set ^mtemp($JOB,"SupInv","Lines",MAXPOS,"Taxes",TaxCode,"Amount")=TaxAmount
 	;. . . set ^mtemp($JOB,"SupInv","Lines",MAXPOS,"Taxes",TaxCode,"Code")=$$EXCHANGE^INFIBBUCH(TaxCode,BTR,IGROUP)
	;QUIT
	
]]></Routine>
</Export>