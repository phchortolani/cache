<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARPaciente" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARPaciente
#include COMSYS
#include INConst

OnBeforeSave(pobjPaciente)
	//Apagar quando entrar o MEDPaciente
	//Karine
	new dteNascimento, dteNascimentoMae, CPF, strStatus
	
	set dteNascimento 	 = $piece(YFELD,Y,2)
	set dteNascimentoMae = $piece(YFELD,Y,5)
	set CPF				 = $piece(YFELD,Y,6)
	
	set strStatus = $$$OK
	
	if (dteNascimento > $h) {
		set strStatus = "A data de nascimento não pode ser maior do que a data de hoje. Favor verificar."
	}
	
	if $$$ISOK(strStatus) {			
		if (($find(CPF,".")'=5) || ($find(CPF,".",5)'=9) || ($find(CPF,"-")'=13) || ($length(CPF)'=14)) {
			set strStatus = "O formato do CPF deve ser do tipo xxx.xxx.xxx-xx. Favor verificar."
		}
	}
	
	if $$$ISOK(strStatus) {			
		if (dteNascimentoMae > $h) {
			set strStatus = "A data de nascimento da mãe do paciente não pode ser maior do que a data de hoje. Favor verificar."
		}
	}
	
	if $$$ISOK(strStatus) {
		if (CPF '= "") {
			set strStatus = $$VerificaDuplicidadePaciente(CPF,YKEY)

		}
	}
	
	//not ok strStatus	
	if $$$ISERR(strStatus) {
		set Q = $$$QDontSave
		do ^WWWINFO(strStatus)		
	}
	
	quit
	
OnAfterSave(pidPaciente,pobjPaciente)
	//Apagar quando entrar o MEDPaciente
	//Karine
	new strStatus, codFarmaciaAcoesJud, blnPacienteComAcaoJud
	set strStatus = $$$OK
	
	//Criando o endereço de armazenagem do paciente na farmácia de ação judicial
	set codFarmaciaAcoesJud   = $$getFarmaciaAcoesJudiciais^VARParametroCliente(0)
	set blnPacienteComAcaoJud = $piece(YFELD,Y,14)
		
	if blnPacienteComAcaoJud = $$$YES {
		//Verifica se o endereço já foi criado
		if '$data(^INLP(YM,codFarmaciaAcoesJud,pidPaciente)) {
			// Cria Endereço do paciente
			set strStatus = $$CreatePatientStorage(codFarmaciaAcoesJud,pidPaciente)			
		}
	}

	quit
	
CreatePatientStorage(pCodFarmaciaAcoesJud,pidPaciente)
	// Para a farmácia de ação judicial, cria o storage do paciente	
	new strStatus
	set strStatus = $$$OK
	
	// Cria o stock-location com id = nome do paciente
	if ('$data(^INLP(YM,pCodFarmaciaAcoesJud,pidPaciente,1))) {
		set newINLPRecord = ""
		set $$$INLPLocationHeight(newINLPRecord) = 0
		set $$$INLPFieldWithMultipleLoads(newINLPRecord) = 1
		set strStatus = $$Save^COMUtils("INLP",pCodFarmaciaAcoesJud_YKOMMA_pidPaciente,newINLPRecord,1)
		quit:('strStatus) strStatus
	}
	
	quit strStatus
	
	
GetNomePaciente(pLocal,pEndereco)
	;
	; DESCONTINUADO E PASSADO PARA O VARMEDPatient !!! Karine
	;                        -------------------    APAGAR ESSE MAC ----------------------------------
	;
	;$$GetNomePaciente^VARPaciente({LocationName},{StockLocation})
	;
	;Função para retornar o nome do Paciente como campo calculado na classe INLP
	;Onde pYKEY é a chave da classe INLP composta por Local,Endereço
	;
	;Esse campo será usado para buscas quando o local de recebimento for uma Farmácia de Ações Judiciais.

	;Se o Local ou Endereço estiver vazio, sai fora.
	if (pLocal = "")||(pEndereco = ""){
		quit ""
	}
	
	;Se o local for diferente de ações judiciais, cai fora
	if (pLocal '= $$getFarmaciaAcoesJudiciais^VARParametroCliente(0)){
		quit ""
	}
	
	new Result,pidPaciente
	
	if $G(YM) = ""{
		do ^WWWVAR
	}

	set Result      = ""	
	set pidPaciente = pEndereco
	
	;Se existir um registro no cadastro de paciente com o mesmo código, traz o nome dele.
	if $D(^VARPaciente(YM,pidPaciente)){
		set objPaciente = $G(^VARPaciente(YM,pidPaciente,1))
		;Se o campo "Paciente possui ação judicial?" for 1-Sim retorna o nome
		if $piece(objPaciente,Y,14) = $$$YES {
			set Result = $piece(objPaciente,Y,1)
		}
	}
		
	quit Result
	
VerificaDuplicidadePaciente(pCPF,pidPaciente)
	new strStatus, CPF, idPaciente
	set strStatus = $$$OK
	
	$$$Order3(^VARPacientes,YM,1,CPF)
		
		quit:($$$ISERR(strStatus))
		
		if (CPF = pCPF) {
						
			$$$Order4(^VARPacientes,YM,1,CPF,idPaciente)
				
				if pidPaciente '= "" {
					continue:(pidPaciente = idPaciente)
				}			
				set strStatus = "Já existe um paciente cadastrado com esse CPF."_$char(10)_"Paciente: "_idPaciente_" - "_$$SQLGetPatientName^VARSQL(idPaciente)
			$$$End
		}
			
	$$$End	
	
	quit strStatus
	
IdentificaDuplicidadeCPF
	$$$VAR
	new idPaciente, idPaciente2, CPF, CPF2, nomePaciente, nomePaciente2
	
	$$$Order2(^VARPaciente,YM,idPaciente)
		
		set nomePaciente = $$SQLGetPatientName^VARSQL(idPaciente)
		set CPF = $piece($get(^VARPaciente(YM,idPaciente,1)),Y,6)
		
		$$$Order2(^VARPaciente,YM,idPaciente2)
		
			continue:(idPaciente = idPaciente2)
			
			set nomePaciente2 = $$SQLGetPatientName^VARSQL(idPaciente2)
			set CPF2 = $piece($get(^VARPaciente(YM,idPaciente2,1)),Y,6)
			
				
				if CPF = CPF2 {					
					w "1. "_idPaciente_" - "_nomePaciente_" - "_CPF_" <> 2. "_idPaciente2_" - "_nomePaciente2_" - "_CPF2_"<br>"
				}					
		
		$$$End
		
	$$$End
	
	quit
	
IdentificaDuplicidadeNome
	$$$VAR
	new idPaciente, idPaciente2, CPF, CPF2, nomePaciente, nomePaciente2
	
	$$$Order2(^VARPaciente,YM,idPaciente)
		
		set nomePaciente = $$SQLGetPatientName^VARSQL(idPaciente)
		set CPF = $piece($get(^VARPaciente(YM,idPaciente,1)),Y,6)
		
		$$$Order2(^VARPaciente,YM,idPaciente2)
		
			continue:(idPaciente = idPaciente2)
			
			set nomePaciente2 = $$SQLGetPatientName^VARSQL(idPaciente2)
			set CPF2 = $piece($get(^VARPaciente(YM,idPaciente2,1)),Y,6)
			
				
				if nomePaciente = nomePaciente2 {
					w "1. "_idPaciente_" - "_nomePaciente_" - "_CPF_" <> 2. "_idPaciente2_" - "_nomePaciente2_" - "_CPF2_"<br>"
				}					
		
		$$$End
		
	$$$End
	
	quit
	
	
getDataNascimento(pidPaciente)
	quit:(pidPaciente = "") ""
	new dteNascimento
	set dteNascimento = ""
	set dteNascimento = $piece($get(^VARPaciente(YM,pidPaciente,1)),Y,2)
	quit dteNascimento
	
getCPF(pidPaciente)
	quit:(pidPaciente = "") ""
	new CPF
	set CPF = ""
	set CPF = $piece($get(^VARPaciente(YM,pidPaciente,1)),Y,6)
	quit CPF	
]]></Routine>
</Export>