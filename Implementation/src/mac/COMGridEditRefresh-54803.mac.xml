<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMGridEditRefresh" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[COMGridEditRefresh
#include COMGridEdit31
#include WWWConst
	
#def1arg WWWDATEN(%args) ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",%args)
	
#define LogR(%1,%2) 	;
#define LogRx(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^CGERefresh("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)   	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)   	$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	;---------------------------------------
	; 0. Clear prior "REFRESH"			CreateData^COMGridEdit31Body2
	; 1. Load GLOBAL into Grid			CreateData^COMGridEdit31Body2
	; 2. Refresh from WWWDATEN			CreateData^COMGridEdit31Body2
	; 3. Load from COMViewSelection		AddLine^COMGridEdit31Add		No Refresh Links for loaded lines - may be existing values
	; 4. [COPY] line					AddLine^COMGridEdit31Add		from Duplicate^COMGridEdit31Copy
	; 5. Add [NEW] Line					AddLine^COMGridEdit31Add
	;                         ^^^ calls SetRefresh^COMGridEdit31Events
	; 6. [DELETE] Line					^COMGridEdit31S
	;                         ^^^ calls ClearRefresh^COMGridEditRefresh
	;---------------------------------------
	
SetRefresh(pidParentDataLine,pidChildDataLine,penumType="C")
	;-------------------------------------------------------------------------------
	;  Call on load and copy
	;  
	;  penumType : "C"opy, "N"ew
	; 
	; History:
	; 25-Jun-2012	GRF		SR18012: Base "REFRESH" on idDataLine rather than idGridRow
	; 06-Aug-2009	GRF		SR16787: Created
	;-------------------------------------------------------------------------------
	$$$LogR("SetRefresh",pidParentDataLine_":"_pidChildDataLine_":"_penumType)
	
	if pidParentDataLine'=pidChildDataLine set $$$WWWDATEN("REFRESH",pidParentDataLine,pidChildDataLine) = penumType
	quit
	
	
	/*
OldSetRefresh(pidGridParent,pidGridRowChild,penumType="C")
	;-------------------------------------------------------------------------------
	;  Call on load and copy
	;  
	;  penumType : "C"opy, "N"ew
	; 
	; History:
	; 06-Aug-2009	GRF		SR16787: Created
	;-------------------------------------------------------------------------------
	$$$LogR("SetRefresh",pidGridParent_":"_pidGridRowChild_":"_penumType)
	
	if pidGridParent'=pidGridRowChild set $$$WWWDATEN("REFRESH",pidGridParent,pidGridRowChild) = penumType
	quit
	*/
	
ClearRefresh(pidChildDataLine)
	;-------------------------------------------------------------------------------
	; Clear any reference to a deleted line as being an associated child row - don't
	; bother to check first
	; 
	; Called by : COMGridEdit31S
	; 
	; History:
	; 25-Jun-2012	GRF		SR18012: Base "REFRESH" on idDataLine rather than idGridRow
	; 06-Aug-2009	GRF		SR16787: Created
	;-------------------------------------------------------------------------------
	new idParentDataLine,strStatus
	
	$$$LogR("ClearRefresh",pidChildDataLine)
	
	set idParentDataLine = ""
	for {
		set idParentDataLine = $order($$$WWWDATEN("REFRESH",idParentDataLine))
		quit:idParentDataLine=""
		
		kill $$$WWWDATEN("REFRESH",idParentDataLine,pidChildDataLine)
	}
	
	set strStatus = $$RefreshGridLines(pidChildDataLine)  ; Recalculate total-based lines before removing the link
	
	kill $$$WWWDATEN("REFRESH",pidChildDataLine)
	quit
	
	/*
OldClearRefresh(pidGridRowChild)
	;-------------------------------------------------------------------------------
	; Clear any reference to a deleted line as being an associated child row - don't
	; bother to check first
	; 
	; Called by : COMGridEdit31S
	; 
	; History:
	; 06-Aug-2009	GRF		SR16787: Created
	;-------------------------------------------------------------------------------
	new idGridParent,strStatus
	
	$$$LogR("ClearRefresh",pidGridRowChild)
	
	set idGridParent = ""
	for {
		set idGridParent = $order($$$WWWDATEN("REFRESH",idGridParent))
		quit:idGridParent=""
		
		kill $$$WWWDATEN("REFRESH",idGridParent,pidGridRowChild)
	}
	
	set strStatus = $$RefreshGridLines(pidGridRowChild)  ; Recalculate total-based lines before removing the link
	
	kill $$$WWWDATEN("REFRESH",pidGridRowChild)
	quit
	*/
	
RefreshGridLines(pidParentDataLine,penumTrigger="")
	;-------------------------------------------------------------------------------
	; Check if any line-based charge lines require recalculation following
	; changes to an INRECSummary item line.
	; 
	; History:
	; 25-Jun-2012	GRF		SR18012: Base "REFRESH" on idDataLine rather than idGridRow
	; 14-Dec-2009	GRF		SR16605: new B/G colour and tool tip to isolate changes
	; 							from current grid line
	; 19-Aug-2009	GRF		SR16787: add penumTrigger
	; 06-Aug-2009	GRF		SR16787: Created
	;-------------------------------------------------------------------------------
	new enumType,idChildDataLine,strEvent,strExec,strStatus,YFORM,YSEITE
	new YBACKGROUNDCOLOR,YTOOLTIP
	
	$$$LogR("RefreshGridLines",pidParentDataLine_"<"_penumTrigger_"<")
	
	set strEvent = "RefreshGrid"
	set YFORM    = $get(^CacheTemp(YUSER,"Grid","Name"))
	set YSEITE   = $get(^CacheTemp(YUSER,"Grid","YSEITE"))
	
	set strStatus = $$$OK
	quit:$get($$$EventExists(strEvent))=$$$NO strStatus
	
	set strExec = "set strStatus = $$RefreshGridLines^"_YFORM_"("""_YFORM_""","_YSEITE_","""_penumTrigger_""","""_pidParentDataLine_""","""
	
	$$$LogRx("RGL")
	$$$LogRm($$$WWWDATEN("REFRESH"))
	
	set idChildDataLine = ""
	for {
		set idChildDataLine = $order($$$WWWDATEN("REFRESH",pidParentDataLine,idChildDataLine))
		quit:idChildDataLine=""
		
		set enumType = $get($$$WWWDATEN("REFRESH",pidParentDataLine,idChildDataLine))
		do CallEvent^COMGridEdit31Events(strExec_idChildDataLine_""","""_enumType_""")",strEvent)
	}
	quit strStatus
	
	/*
OldRefreshGridLines(pidGridParent,penumTrigger="")
	;-------------------------------------------------------------------------------
	; Check if any line-based charge lines require recalculation following
	; changes to an INRECSummary item line.
	; 
	; History:
	; 14-Dec-2009	GRF		SR16605: new B/G colour and tool tip to isolate changes
	; 							from current grid line
	; 19-Aug-2009	GRF		SR16787: add penumTrigger
	; 06-Aug-2009	GRF		SR16787: Created
	;-------------------------------------------------------------------------------
	new enumType,idGridRowChild,strEvent,strExec,strStatus,YFORM,YSEITE
	new YBACKGROUNDCOLOR,YTOOLTIP      ; SR16605
	
	$$$LogR("RefreshGridLines",pidGridParent)
	
	set strEvent = "RefreshGrid"
	set YFORM    = $get(^CacheTemp(YUSER,"Grid","Name"))
	set YSEITE   = $get(^CacheTemp(YUSER,"Grid","YSEITE"))
	
	set strStatus = $$$OK
	quit:$get($$$EventExists(strEvent))=$$$NO strStatus
	
	set strExec = "set strStatus = $$RefreshGridLines^"_YFORM_"("""_YFORM_""","_YSEITE_","""_penumTrigger_""","""_pidGridParent_""","""
	
	set idGridRowChild = ""
	for {
		set idGridRowChild = $order($$$WWWDATEN("REFRESH",pidGridParent,idGridRowChild))
		quit:idGridRowChild=""
		
		set enumType = $get($$$WWWDATEN("REFRESH",pidGridParent,idGridRowChild))
		do CallEvent^COMGridEdit31Events(strExec_idGridRowChild_""","""_enumType_""")",strEvent)
	}
	quit strStatus
	*/]]></Routine>
</Export>