<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="MEDDispense" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
MEDDispense
	
#include COMConst
#include INConst
#include COMGridEdit31
#include MEDConst
#define YCR	"|"

OnBeforeFormConstruction(pYKEY,&pYFELD,&pYMFELD,pYPARA)
	;-------------------------------------------------------------------------------
	; Check if a field should be locked or not
	;
	; Params:
	; pYKEY : The key of the cell
	;
	; ByRefs:
	;
	; Returns:
	; Boolean
	;
	; History:
	; 14-Oct-2014	SCR		HEVA-1580: Update Shift Time
	; 21-Nov-2012	SCR		SR18209: Use Dispense created timestamp for admission details
	; 23-May-2012	PPP		SR18002:1 Only set Dest Loc if it is blank
	; 16-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new idPres
	new lstPatientData
	new intField
	new strPresStatus
	new strStatus
	
	set strStatus=$$$OK 
	
	set $$$MEDDispensePrescription(pYFELD)	= $piece($get(pYPARA)," ",1)
	set idPres = $$$MEDDispensePrescription(pYFELD)

	if idPres'="" {
		//do OnBlurPrescription($$$MEDDispensePrescription(pYFELD),.pYFELD,.pYMFELD) 
		set strStatus = $$GetPatientData^MEDPrescriptionCommon(idPres,.lstPatientData, $$$MEDDispenseCreatedDate(pYFELD)) ; SR18209
		; set strStatus = $$GetPatientData^MEDPrescriptionCommon(idPres,.lstPatientData)

		if $$$ISOK(strStatus) {
			//Manual Fields - Patient Data
			// #10 to #17 & #28 to #35
			for intField = 3:1:10 {
				set ($piece(pYMFELD,Y,intField+7),$piece(pYMFELD,Y,intField+25)) = $lg(lstPatientData,intField) 
			}

			//Prescription Status
			set strPresStatus = $$GetStatus^MEDPrescriptionCommon(idPres)
			for intField = 18,45 {
				set $piece(pYMFELD,Y,intField) 	= strPresStatus
			}

			set $$$MEDDispensePrescriber(pYFELD) 		= $$GetPrescriber^MEDPrescriptionCommon(idPres)
		
			//SR18002:2 Only set if it is blank
			//if $$$MEDDispenseDestinationLocation(pYFELD)="" { commented by heva-1284
			if $length($$$MEDDispenseDateProcessed(pYFELD))=0 {
				set $$$MEDDispenseDestinationLocation(pYFELD)	= $lg(lstPatientData)		//Admission Location
			}

			//FIXME - User Codes
			set $$$MEDDispenseIssueType(pYFELD) = "I"						//Internal Patient
		}

	}
	
	quit


OnClick() ;CORE-272
	set ^MEDDispenseLegend(YM,YBED,"Show")=1
	do ShowLegend()
	quit

OnCancel() ;CORE-272
	set ^MEDDispenseLegend(YM,YBED,"Show")=0
	quit
	
OnDragEnd(pintTop,pintLeft)
	set ^MEDDispenseLegend(YM,YBED,"Top")=pintTop
	set ^MEDDispenseLegend(YM,YBED,"Left")=pintLeft
	quit ;CORE-272
		
ShowLegend() ;CORE-272
	; History
	; 28-Mar-2014	shobby	CORE-272.1 Increased width to 400
	;---------------------------------------------------------------------------------------
	new HTML
	if $get(^MEDDispenseLegend(YM,YBED,"Show"))="" set ^MEDDispenseLegend(YM,YBED,"Show")=1
	if ^MEDDispenseLegend(YM,YBED,"Show") {
		set HTML=""
		set HTML=HTML_$$ShowLegendLine("Medicamentos ATB (SCIH)","#90EE90")
		set HTML=HTML_$$ShowLegendLine("Medicamentos Controlados","#EE6363")
		set HTML=HTML_$$ShowLegendLine("Medicamentos de Uso Racional (programa institucional)","#B0E2FF")
		set HTML=HTML_$$ShowLegendLine("Medicamentos Multidoses Injetáveis","#FFD700")
		set HTML=HTML_$$ShowLegendLine("Medicamentos Não Padronizados","#DDA0DD")
		do Show^WWWPopupMessage(HTML,"Legenda",,,"dscPMLegend",,,,,"white",400,"auto","OnCancel^MEDDispense","OnDragEnd^MEDDispense",$get(^MEDDispenseLegend(YM,YBED,"Top")),$get(^MEDDispenseLegend(YM,YBED,"Left")))
	}	
	quit $$$OK
	
ShowLegendEx() ;CORE-272
	$$$StartScript()
	do ShowLegend()
	$$$EndScript()
	quit
	
	
ShowLegendLine(pstrText="",pstrColour="")
	; History
	; 28-Mar-2014	shobby	CORE-272.1 Increased font-size
	;---------------------------------------------------------------------------------------
	quit "<div style='font-size:14px; background-color:"_pstrColour_"'>"_pstrText_"</div>"
	quit "<tr><td style='background-color:"_pstrColour_"'>"_pstrText_"</td></tr>"
		
		
OnAfterDataFields(pidDisp,pobjForm)
	;-------------------------------------------------------------------------------
	; OnAfterDataFields
	;
	; Params:	pidDisp		- Dispense id
	; 			pobjForm	- YVOR
	;
	; Returns:	
	;
	; History:
	; 28-Oct-2014	SCR		HEVA-1580: Show error if Dispense Shift Times do not match selected Times
	; 12-Dec-2012	SCR		HEVA-704 Show alternate products
	; 07-Nov-2012	SCR		SR18177: Show Line Validation by/on on Check Tab
	; 13-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new MedicamentosATB,MedicamentosControlados,MedicamentosMultidoses,MedicamentosNaoPadronizados
	new MedicamentosRacional,arrQuery,lstHeader,strMsg
	
	if YSEITE=1 {
		do ShowLegendEx() ;CORE-272
	} 
	if YSEITE=99 {	
		set lstHeader = ""
	  	set lstHeader = lstHeader_$listbuild("<font color=black size=4>Legenda</font>")
		if $$Start^COMTable(lstHeader,,,,,,3) {
 
			set MedicamentosATB = "<font color=black size=3>Medicamentos ATB (SCIH)</font>"
	    		    
			do NewLine^COMTable("#90EE90")
			do InsertCell^COMTable(MedicamentosATB,"",,"","LEFT")		
		    do EndLine^COMTable()
		    
		    set MedicamentosControlados = "<font color=black size=3>Medicamentos Controlados</font>"
	    		    
			do NewLine^COMTable("#EE6363")
			do InsertCell^COMTable(MedicamentosControlados,"",,"","LEFT")			
		    do EndLine^COMTable()
		    
		    set MedicamentosRacional = "<font color=black size=3>Medicamentos de Uso Racional (programa institucional)</font>"
	    		    
			do NewLine^COMTable("#B0E2FF")
			do InsertCell^COMTable(MedicamentosRacional,"",,"","LEFT")
		    do EndLine^COMTable()
		    
		    set MedicamentosMultidoses = "<font color=black size=3>Medicamentos Multidoses Injetáveis</font>"
	    		    
			do NewLine^COMTable("#FFD700")
			do InsertCell^COMTable(MedicamentosMultidoses,"",,"","LEFT")
		    do EndLine^COMTable()
		    		    
			set MedicamentosNaoPadronizados = "<font color=black size=3>Medicamentos Não Padronizados</font>"
	    		    
			do NewLine^COMTable("#DDA0DD")
			do InsertCell^COMTable(MedicamentosNaoPadronizados,"",,"","LEFT")
			do EndLine^COMTable()
		}
		do Stop^COMTable()
	}
	; SR18177 vvvv
	if YSEITE=3 {
		new arrQuery
		set arrQuery("Class") = "MEDDispenseLine"
		set arrQuery("Loop")  = "LineQuery^MEDDispense"
		set arrQuery("Get")   = "set id=$$HistData^MEDDispense(id(1),id(2))"
		;set arrQuery("Title") = $$^WWWFORMNAME("MEDPrescriptionHopsLine")
	
		set arrQuery("Col",1) = "P~2~L~~~~~"
		set arrQuery("Col",2) = "D~1~L~~~~~"
		set arrQuery("Col",3) = "D~18~L~~~~~"
		set arrQuery("Col",4) = "D~24~L~~~~~"
		set arrQuery("Col",5) = "D~99~L~~~~~"_$$$Text("MED01407")  ;Alternate Item
	
		do Query^COMQuery(.arrQuery,YKEY)
	}
	; SR18177 ^^^^
	if ($piece(YPARA," ",2)'="") && ($piece(YPARA," ",3)'="") && 
		(($$$MEDDispenseShiftStart(YFELD)'=$piece(YPARA," ",2)) ||
		($$$MEDDispenseShiftEnd(YFELD)'=$piece(YPARA," ",3))) {		
			set strMsg	= $listbuild("MED01440",$$^WWWTR(0,14,$$$MEDDispenseShiftStart(YFELD)),
				$$^WWWTR(0,14,$$$MEDDispenseShiftEnd(YFELD)),$$^WWWTR(0,14,$piece(YPARA," ",2)),$$^WWWTR(0,14,$piece(YPARA," ",3)))  
					;Dispense Shift Times do not match Selected Times. Dispense Start %1 End %2, Selected Start %3 End %4
			$$$StartScript()
			do Show^WWWPopupMessage($$$Text(strMsg)," ",,,"dscPMLegend",,,,,"white",400,"auto","","","","")
			;$$$Alert($$$Text(strMsg))
			$$$EndScript()
			set $piece(YPARA," ",2)=""
			set $piece(YPARA," ",2)=""
		}

	do SetupJS^MEDDispenseJS(pobjForm)
	
	quit
	
HistData(pidDisp,pidLine)
	;-------------------------------------------------------------------------------
	; Get Histroy line data
	;
	; Params:	pidDisp	- Dispense
	;			pidLine - Line Key
	;
	; Returns:	
	;
	; History:
	; 12-Dec-2012	SCR		HEVA-704 Created
	;-------------------------------------------------------------------------------
	new objLine,objDisp,idRx,objRxLine,strItem,idItem
	
	set objDisp		= $get(^MEDDispense(YM,pidDisp,1))
	set objLine		= $get(^MEDDispenseLine(YM,pidDisp,pidLine,1))
	set idRx		= $$$MEDDispensePrescription(objDisp)
	if idRx'="" {
		set objRxLine	= $get(^MEDPrescriptionLine(YM,idRx,pidLine,1))
		if $$$MEDPrescriptionLineItem(objRxLine)'=$$$MEDDispenseLineItemName(objLine) {
			set idItem = $$$MEDDispenseLineItemName(objLine)
			set strItem = "("_idItem_") "_$$^INARTNAME(idItem)
			set $piece(objLine,Y,99) = strItem
			set $$$MEDDispenseLineItemName(objLine) = $$$MEDPrescriptionLineItem(objRxLine)
		}
	}
	quit objLine
	
LineQuery(parrQuery,&parrStorage,pidDispense)
	;-------------------------------------------------------------------------------
	; Loop for the COMQuery above - show lines
	;
	; Params:	parrQuery	- COMQuery info
	; 			parrStorage	- COMQuery data
	;			pidPatient	- ID of Dispense
	; ByRefs:
	;
	; Returns:	int - row count
	;
	; History:
	; 
	; 07-Nov-2012	SCR		SR18177: Created
	;-------------------------------------------------------------------------------
	new idLine,intCount
	kill ^mtemp("Query",$job)
	//set idIssue = parrQuery("Parameters","pidIssue")
	kill ^CacheTempMedRx(YUSER,"HospTable")
	set idLine=""
	for intCount=0:1 {
		set idLine=$order(^MEDDispenseLine(YM,pidDispense,idLine))
		quit:idLine=""
		set @parrStorage@(intCount+1,1)=pidDispense
		set @parrStorage@(intCount+1,2)=idLine
	}
	quit intCount
	
OnBeforeButtonLine(pidDisp, &pYFELD, &pYMFELD, &pYVOR)
	;-------------------------------------------------------------------------------
	; On Reloading the form
	;
	; Params:	pidDisp		- Dispense id
	; 			pYMFELD		- Manual Dispense object
	;
	; Returns:	
	;
	; History:
	; 14-Oct-2014	SCR		HEVA-1580: Update Shift Time
	; 23-Jun-2014	SCR		HEVA-1505: Redirect if a Manual Dispense
	; 21-Nov-2012	SCR		SR18209: Use Dispense created timestamp for admission details
	; 23-May-2012	PPP		SR18002:1 Only set Dest Loc if it is blank
	; 07-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new objDisp
	new lstPatientData
	new intField
	new strStatus
	new strPresStatus
	new idPres
	
	if '$$$NoKey(pidDisp) {

		set objDisp = $get(^MEDDispense(0,pidDisp,1))
		set idPres = $$$MEDDispensePrescription(objDisp)
		if $$$MEDDispenseStatusManual(objDisp) '= "" {
			Do RedirectForm^COMUtilForm("VARMEDDispenseMan",pidDisp,$get(YBACK),$get(YPARA),$get(YSEITE))
			quit
		}
		
		//Manual Fields - Patient Data
		set strStatus = $$GetPatientData^MEDPrescriptionCommon(idPres,.lstPatientData, $$$MEDDispenseCreatedDate(objDisp)) ; SR18209
		;set strStatus = $$GetPatientData^MEDPrescriptionCommon(idPres,.lstPatientData)

		if $$$ISOK(strStatus) {
			//Manual Fields - Patient Data
			// #10 to #17 & #28 to #35
			for intField = 3:1:10 {
				set ($piece(pYMFELD,Y,intField+7),$piece(pYMFELD,Y,intField+25)) = $lg(lstPatientData,intField) 
			}

			//Prescription Status
			set strPresStatus = $$GetStatus^MEDPrescriptionCommon(idPres)
			for intField = 18,45 {
				set $piece(pYMFELD,Y,intField) 	= strPresStatus
			}

			set $$$MEDDispensePrescriber(pYFELD) 		= $$GetPrescriber^MEDPrescriptionCommon(idPres)
		
			//SR18002:2 Only set if it is blank
			//if '$data(^MEDDispense(0,pidDisp)) && $$$MEDDispenseDestinationLocation(pYFELD)="" { commented by heva-1284
			if $length($$$MEDDispenseDateProcessed(pYFELD))=0 {
				set $$$MEDDispenseDestinationLocation(pYFELD)	= $lg(lstPatientData)		//Admission Location
			}
			
			//FIXME - User Codes
			set $$$MEDDispenseIssueType(pYFELD) = "I"						//Internal Patient
			set:$piece($get(YPARA),Y,2)'="" $$$MEDDispenseShiftStart(pYFELD)	= $piece($get(YPARA),Y,2)
			set:$piece($get(YPARA),Y,3)'="" $$$MEDDispenseShiftEnd(pYFELD)		= $piece($get(YPARA),Y,3)

		}
		
		if '$$Editable(pidDisp) {
			set $$$WWW120AuthorizationToModifyData(pYVOR) = $$$EnumReadOnly
		}
	}
	if $$IsPresSuspended(pidDisp,$$$MEDDispensePrescription(pYFELD)) {  	;SR18126
		set $$$WWW120AuthorizationToModifyData(pYVOR) = $$$EnumReadOnly		;SR18126
	}																		;SR18126
	quit

OnAfterFormConstruction(YKEY,YFELD,YBBN)
	;-------------------------------------------------------------------------------
	; Highlight the field in red if the prescription is suspended.
	;
	; History:
	; 27-Sep-2012	shobby		SR18126 Created
	;-------------------------------------------------------------------------------
	if YBBN=18 {
		if $$IsPresSuspended(YKEY,$$$MEDDispensePrescription(YFELD)) {
			$$$StartScript()
			write "document.getElementById('YMEDDispenseM18').style.color='red';"
			$$$EndScript()
		}
	}
	quit

OnBeforeButtonLineOld(pidPres,pobjPres,&pYVOR)
	;-------------------------------------------------------------------------------
	; Set form to readonly if not editable
	;
	; Params:	pidPres		- Prescription id
	; 			pobjPres	- Prescription object
	;
	; Returns:	
	;
	; History:
	; 25-Jun-2009	DWR		SR16642: Created
	;-------------------------------------------------------------------------------
	//do CreateBaseItemList()
	
	if '$$$NoKey(pidPres) {
		if '$$Editable(pidPres) {
			set $$$WWW120AuthorizationToModifyData(pYVOR) = $$$EnumReadOnly
		}
	}
	quit
	
	
Enabled(YFELD)
	;-------------------------------------------------------------------------------
	; Called By : Form MEDDispense : Grid Tab (COMGridEditParameter)
	;
	;
	; History:
	; 09-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new blnEnabled
	
	set blnEnabled = $$$YES
	
	//set enumPresType = $$$MEDPrescriptionPrescriptionType(YFELD)
	
	set blnEnabled = $$$YES		//($$$MEDPrescriptionStatus(YFELD) = 1)

	quit blnEnabled
	
	
Editable(pidDispense) 
	;-------------------------------------------------------------------------------
	; Is form editable (unprocessed) ?
	;
	; Params:	pidPres - Prescription id
	;
	; Returns:	status
	;
	; History:
	; 25-Jun-2009	DWR		SR16642: Created
	;-------------------------------------------------------------------------------
	new strStatus,objDispense
	
	set strStatus = $$$OK
	
	if $data(^MEDDispense(0,pidDispense,1)) {
		set objDispense = $get(^MEDDispense(0,pidDispense,1))
		
		if $$$MEDDispenseStatus(objDispense) > 2  {   ;"Processed"
			set strStatus = $$$MakeStatus("IN00377")  ; "Record already processed"
		}
	}
	quit strStatus
	

OnBlurPrescription(pYINHALT,&pYFELD,&pYMFELD) 
	;-------------------------------------------------------------------------------
	; Called by OnBlur of the Prescription field on MEDDispense form
	;
	; Params:	pYFELD - Current Record
	;
	; Returns : By Ref - Updated Record
	;
	; History:
	; 22-Jan-2013	SCR		HEVA-783: Check for existing open Dispense
	; 04-Jan-2013	SCR		HEVA-738: Allow Rejected Status
	; 22-Nov-2012	SCR		SR18209	Use current addmission
	; 29-Oct-2012	SLV		SR18172:  Added verification to avoid the creation of dispenses
	;                                 with a closed or fully dispensed status
	; 23-May-2012	PPP		SR18002:2 Only set Dest Loc if it is blank
	; 21-May-2012	PPP		SR18002.1: Check if prescription is in a valid status
	; 17-May-2012	PPP		SR18002: Check if prescription exists
	; 30-Apr-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new strStatus
	new lstPatientData
	new intField 
	new strPresStatus
	new objPrescription,idLastDisp
	
	//Check if prescription exists
	if $get(pYINHALT) = "" quit
	if '$data(^MEDPrescription(0,pYINHALT)) quit
	
	//SR18002.1
	set objPrescription=$get(^MEDPrescription(0,pYINHALT,1))
	if ($$$MEDPrescriptionStatus(objPrescription)<1) {
 		set %TXT(1) = "#FUNCTION~alert('"_$$$Text("MED00412")_"'); window.setTimeout('document."_YHTMFORM_".Y"_YFORM_"D3.focus()',1);"
   		set $$$MEDDispensePrescription(pYFELD) = ""
		quit																//EARLY EXIT	
	} 
	//SR18172
	elseif ($$$MEDPrescriptionStatus(objPrescription)>=8) && ($$$MEDPrescriptionStatus(objPrescription)'=10) { ; HEVA-738
	;elseif ($$$MEDPrescriptionStatus(objPrescription)>=8) {
 		set %TXT(1) = "#FUNCTION~alert('"_$$$Text("MED00359")_"'); window.setTimeout('document."_YHTMFORM_".Y"_YFORM_"D3.focus()',1);"
   		set $$$MEDDispensePrescription(pYFELD) = ""
		quit
	} 
	; HEVA-783 vvvv
	set idLastDisp=$$GetActiveDispense^MEDDispenseIssue(pYINHALT,YKEY) 

	if (idLastDisp'="") && (idLastDisp '= YKEY)  {
 		set %TXT(1) = "#FUNCTION~alert('"_$$$Text($listbuild("MED01422",idLastDisp,pYINHALT))_"'); window.setTimeout('document."_YHTMFORM_".Y"_YFORM_"D3.focus()',1);"
 		;  ;Dispense %1 is open for Prescription %2
   		set $$$MEDDispensePrescription(pYFELD) = ""
 		quit
	}
	; HEVA-783 ^^^^
	
	set lstPatientData = ""
	
	set strStatus = $$GetPatientData^MEDPrescriptionCommon(pYINHALT,.lstPatientData,$h) ;SR18209
	;set strStatus = $$GetPatientData^MEDPrescriptionCommon(pYINHALT,.lstPatientData)

	// 1. Admission Location Key
	// 2. 
	// 3. Patient Name
	// 4. Patient ID
	// 5. Patient DOB
	// 6. Admission Location Name
	// 7. Admission Room
	// 8. Admission Bed
	// 9. Admission Date
	// 10. Patient Allergies

	if $$$ISOK(strStatus) {
	
		//Manual Fields - Patient Data
		for intField = 3:1:10 {
			//set $piece(pYMFELD,Y,intField+7) = $lg(lstPatientData,intField) 
			set ($piece(pYMFELD,Y,intField+7),$piece(pYMFELD,Y,intField+25)) = $lg(lstPatientData,intField) 
			set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_(intField+7)_"~"_$piece(pYMFELD,Y,intField+7)
			set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_(intField+25)_"~"_$piece(pYMFELD,Y,intField+25)

		}
		
		set $$$MEDDispensePrescriber(pYFELD) 		= $$GetPrescriber^MEDPrescriptionCommon(pYINHALT)
		
		//SR18002:2 Only set if it is blank
		//if $$$MEDDispenseDestinationLocation(pYFELD)="" { commented by heva-1284
		if $length($$$MEDDispenseDateProcessed(pYFELD))=0 {
			set $$$MEDDispenseDestinationLocation(pYFELD)	= $lg(lstPatientData)		//Admission Location
		}
		
		set strPresStatus = $$GetStatus^MEDPrescriptionCommon(pYINHALT)
		for intField = 18,45 {
			set $piece(pYMFELD,Y,intField) 	= strPresStatus
			set %TXT(1)=%TXT(1)_"#"_"Y"_YFORM_"M"_intField_"~"_$piece(pYMFELD,Y,intField)
		}
		
		//FIXME - User Codes
		set $$$MEDDispenseIssueType(pYFELD) = "I"						//Internal Patient
	
	}
	
	quit


OnBeforeSave(pidDispense, pstrYFELD)
	;-------------------------------------------------------------------------------
	; Check the Dispense Record before Save
	;
	; Inputs: pidDispense - Dispense ID
	;			pstrYFELD - Data Record
	;
	; Returns:
	;
	; History:
	; 23-Oct-2012	shobby	SR18130.2: Check for active admission.
	; 24-Jul-2012	PPP		SR18067: Added Prescription Suspended check
	; 13-Jun-2012	shobby	SR18033: Before saving update the MEDPrescription information
	; 08-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK

	if $$$MEDDispenseSupplyingLocation(pstrYFELD) = $$$MEDDispenseDestinationLocation(pstrYFELD) {
		set strStatus   = $$$MakeStatus("MED00399")  ; "Supplying and Destination Locations cannot be the same"
	}
	
	//SR18067
	if $$$ISOK(strStatus) {
		if $$IsPresSuspended(pidDispense,$$$MEDDispensePrescription(pstrYFELD)) {  ;SR18067
			set strStatus = $$$MakeStatus("MED00424")  ;Cannot perform current operation as Prescription is suspended
		}
	}

	if $$$ISOK(strStatus) {
		set strStatus=$$UpdateRemarksOnRefuse(pidDispense,.pstrYFELD)  ;SR18033
	}
	
	if $$$ISOK(strStatus) {																			;SR18130.2
		set strStatus=$$CheckAdmitted^MEDPatient("",$$$MEDDispensePrescription(pstrYFELD))			;SR18130.2
	}																								;SR18130.2
	
	if $$$ISERR(strStatus) {
		set Q = $$$QDontSave
		do ReturnError^COMUtilError(strStatus)	
	}
	
	quit


UpdateRemarksOnRefuse(pidDispense,&YFELD,blnStored=$$$NO)
	;-------------------------------------------------------------------------------
	; Refuse the lines that need Validation and flag the Validation Status
	;
	; Params:	pYKEY	- Dispense, Line Key
	;			pstrReason - Reason for Refusal text
	;			blnStored - Used Stored lines
	;
	; Returns:	
	;
	; History:
	; 01-Mar-2013	SCR		HEVA-866: Add Space
	; 27-Feb-2013	SCR		HEVA-866: Update based on stored data
	; 13-Jun-2012	shobby	SR18033: Rewrite of RefuseTxn^MEDDispenseLine to be run OnBeforeSave with
	;							in memory DispenseLine objects.
	; 01-Jun-2012	PPP		SR18002.5: Ensured previous Remarks are added the Pres Line
	;						when updating
	; 23-May-2012	PPP		SR18002.4: Reversed SR18002.1, problem when Reveiwing.
	; 18-May-2012	PPP		SR18002.3: Update Dispense Status
	; 18-May-2012	PPP		SR18002.2: Added Rejection Reason to message
	; 04-May-2012	PPP		SR18002.1: If Refused the Dispense Issued Qty is zero'ed
	; 02-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------	
	new arrGrid,blnUpdate,idItem,idLine,idPres,objLine,objPresLn,strItem,strLineRemark
	new strRemarks,strStatus,strUser
	
	set strStatus=$$$OK
	set blnUpdate=$$$NO
	set strRemarks=""

	if (pidDispense '= "") {
		set idPres		= $$$MEDDispensePrescription(YFELD) 
		if $get(YBED)'="" {
			set strUser = $$$WWW013Name($get(^WWW013(0,YBED,1)))
		}
		$$$GRIDGetContents(.arrGrid)
		; HEVA-866 vvvv
		;set idLine="" for { set idLine = $order(arrGrid(pidDispense,idLine)) quit:idLine=""
			;quit:$$$ISERR(strStatus)
					
			;set objLine = $get(arrGrid(pidDispense,idLine))
		set idLine="" 
		for { 
			set:'blnStored idLine 	= $order(arrGrid(pidDispense,idLine)) 
			set:blnStored idLine 	= $order(^MEDDispenseLine(YM,pidDispense,idLine)) 
			quit:idLine=""
			quit:$$$ISERR(strStatus)
					
			set objLine 			= $get(arrGrid(pidDispense,idLine))
			set:blnStored objLine 	= $get(^MEDDispenseLine(YM,pidDispense,idLine,1)) 
			; HEVA-866 ^^^^
			if $$$MEDDispenseLineValidatedBy(objLine)'="" {
				if '$$$MEDDispenseLineRejectNoted(objLine) {
					if $$$MEDDispenseLineValidatedStatus(objLine) = "refuse.gif" {
						set $$$MEDDispenseLineRejectNoted(objLine)=$$$YES
						set idItem = $$$MEDDispenseLineItemName(objLine)
						set strItem = "("_idItem_") "_$$^INARTNAME(idItem)
						//SR18002.2
						//set strLineRemark = "["_strItem_"]"_" Refused By "_"["_$get(strUser)_"]"_" On "_$$^WWWDATE(+$h)_" "_$$^WWWTIME($p($h,",",2))_$$$YCR
						//set strLineRemark = strLineRemark_ "Reason "_$get(pstrReason)
						set strLineRemark = "# "_strItem_" "_$$$Text("MED00409")_" "_$get(strUser)_" "_$$$Text("293")_" "_$$^WWWDATE(+$h)_" "_$piece($$^WWWTIME($p($h,",",2)),":",1,2)_" "_$$$YCR
						set strLineRemark = strLineRemark_$$$Text("MED00411")_": "_$$$MEDDispenseLineRejectReason(objLine) ; HEVA-866
			
						//Update the Prescription Line				
						set objPresLn = $get(^MEDPrescriptionLine(0,idPres,(idLine\1),1))
						set $$$MEDPrescriptionLineRemarks(objPresLn) = $$$MEDPrescriptionLineRemarks(objPresLn)_$$$YCR _strLineRemark		//SR18002.5
						set strStatus = $$$Save("MEDPrescriptionLine",idPres_$$$COMMA_(idLine\1),objPresLn,$$$YES)
			
						if strRemarks'="" {
							set strRemarks = strRemarks _$$$YCR _strLineRemark
						} else {
							set strRemarks = strLineRemark
						}
						set blnUpdate = $$$YES
						set arrGrid(pidDispense,idLine)=objLine
					}
				}
			}
		}
		
	 	if $$$ISOK(strStatus) {	
			if blnUpdate = $$$YES {
				$$$GRIDSetContents(.arrGrid,$$$NO)
				if $$$MEDDispenseRemarks(YFELD)'="" {
					set strRemarks = $$$MEDDispenseRemarks(YFELD)_$$$YCR_strRemarks
				}
				set $$$MEDDispenseRemarks(YFELD) = strRemarks
			}
		
		}

	} 

	quit strStatus


OnAfterSave(pidDispense, &pstrYFELD)
	;-------------------------------------------------------------------------------
	; OnAfterSave:Create Prescription Dispense Line if not already present
	;
	; Inputs: pidDispense - Dispense ID
	;
	; Returns:
	;
	; History:
	; 28-Feb-2013	SCR		HEVA-866: Update Header notes with rejection details
	; 11-Dec-2012	SCR		HEVA-704 Update Prescription Line if alternate item
	; 01-Jun-2012	PPP		SR18002.2: Moved load lines to $$CreateDispense
	; 18-May-2012	PPP		SR18002.1: Update the Status
	; 17-May-2012	PPP		SR18002: Load the Lines OnAfterSave
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	
	if '$data(^MEDDispenseLine(0,pidDispense)) {
		set strStatus = $$LoadLines(pidDispense)		
		; HEVA-866 vvvv
		if $$$ISOK(strStatus) {
			do UpdateRemarksOnRefuse(pidDispense,.pstrYFELD,$$$YES)
			set strStatus = $$$Save("MEDDispense",pidDispense,pstrYFELD,$$$YES)
		}
		; HEVA-866 ^^^^
	}

	//Update Status of Dispense
	if $$$ISOK(strStatus) {
		set strStatus = $$UpdateStatus(pidDispense)		
	}
	if $$$ISOK(strStatus) {
		set strStatus = $$AlternateUpdate^MEDDispenseAlternate(pidDispense)
	}
	quit strStatus


UpdateStatus(pidDispense)
	;-------------------------------------------------------------------------------
	; Update Status of Dispense
	;
	; Inputs: pidDispense - Dispense ID
	;
	; Returns:
	;
	; History:
	; 04-Dec-2014	SCR		HEVA-1644: Update Rx Status
	; 07-Jul-2014	SCR		HEVA-1506: Set Rx Status to 11 if UDO
	; 12-Jun-2014	SCR		HEVA-1505: Dont Close UDO Prescription Lines 
	; 11-Jan-2013	SCR		HEVA-752: Change Status to 'Auto Close' when UDO
	; 21-Jun-2012	SCR		SR18002 Update Prescription Header
	; 12-Jun-2012	SCR		SR18002 Update Prescription
	; 18-May-2012	PPP		SR18002	Created
	;-------------------------------------------------------------------------------
	new arrStatus,idLine,idPrevStatus,idRx,idStatus,objDispense,objLine,objRxLine
	new strStatus
	
	set strStatus = $$$OK

	//Update the Status
	set objDispense 	= $get(^MEDDispense(0,pidDispense,1))
	//set idPrescription 	= $$$MEDDispensePrescription(objDispense) 
	set idPrevStatus 	= $$$MEDDispenseStatus(objDispense)
	set idRx			=  $$$MEDDispensePrescription(objDispense)
	
	
	if $$$ISOK(strStatus) {	
		//Check lines
		set idLine=""
		for {
 			set idLine = $order(^MEDDispenseLine(0,pidDispense,idLine))
			quit:idLine=""
			quit:strStatus'=$$$OK
	
			set objLine = $get(^MEDDispenseLine(0,pidDispense,idLine,1))
			if ($$$MEDDispenseLineValidatedStatus(objLine) = "blank_flat.gif") {
				set arrStatus(1)=""				
			} elseif ($$$MEDDispenseLineValidatedStatus(objLine) = "refuse.gif") {
				set arrStatus(2)=""
			} elseif ($$$MEDDispenseLineValidatedStatus(objLine) = "accept.gif") {
				set arrStatus(3)=""
				if idRx'="" {
					set objRxLine = $get(^MEDPrescriptionLine(YM,idRx,idLine,1))
					if $$$MEDDispenseLineUDO(objLine) {
						set $$$MEDPrescriptionLineStatus(objRxLine) = 11 
					} else {
						set $$$MEDPrescriptionLineStatus(objRxLine) = 2
					}					
					set strStatus=$$$Save("MEDPrescriptionLine",idRx_","_idLine,objRxLine,1)
					quit:strStatus'=$$$OK
				}
			}
			
		}
		
		if $data(arrStatus(2)) || ($data(arrStatus(3))) {
		 	set idStatus = 2
		} else {
		 	set idStatus = 1
		}
		//Do not save if the Status has not changed.
		if idPrevStatus'=idStatus {
			//set objDispense 	= $get(^MEDDispense(0,pidDispense,1))
			set $$$MEDDispenseStatus(objDispense) = idStatus
			set strStatus = $$$Save("MEDDispense",pidDispense,objDispense,$$$YES)
		}
	}
	if strStatus=$$$OK {
		set strStatus=$$UpdateRxStatus^MEDPrescriptionAutoClose(idRx) ; update Rx status
	}	
	quit strStatus


CreateDispense(pidPres, &pidDispense,pdtStart="",pdtEnd="")
	;-------------------------------------------------------------------------------
	; Create Prescription Dispense
	;
	; Inputs: pidDispense - Prescription ID
	;
	; Returns:By Ref  - Dispesne ID
	;			Status
	;
	; History:
	; 15-Oct-2014	SCR		HEVA-1580: Record Times
	; 14-Aug-2013	SCR		HEVA-973: Dispenses not been updated after validation - Incorrect Status
	; 27-Feb-2013	SCR		HEVA-866: Update Dispense remarks
	; 08-Aug-2012	SCR		SR17993: Load Remarks
	; 01-Jun-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new lstPatientData,objDispense,strStatus
	//set strStatus = $$$OK

	set strStatus = $$GetPatientData^MEDPrescriptionCommon(pidPres,.lstPatientData)
	if $$$ISOK(strStatus) {
		set $$$MEDDispensePrescription(objDispense)			= pidPres
		set $$$MEDDispensePrescriber(objDispense) 			= $$GetPrescriber^MEDPrescriptionCommon(pidPres)
		set $$$MEDDispenseSupplyingLocation(objDispense)	= $get(YLOCATION)			//Supplying Location
		set $$$MEDDispenseDestinationLocation(objDispense)	= $lg(lstPatientData)		//Admission Location
		set $$$MEDDispenseIssueType(objDispense) 			= "I"						//Internal Patient
		;set $$$MEDDispenseStatus(objDispense) 				= 0							//Status - Open
		set $$$MEDDispenseStatus(objDispense) 				= 1							//HEVA-973
		set $$$MEDDispenseRemarks(objDispense)				= $$$MEDPrescriptionNotes($get(^MEDPrescription(YM,pidPres,1))) ; SR17993
		set $$$MEDDispenseShiftStart(objDispense)			= pdtStart
		set $$$MEDDispenseShiftEnd(objDispense)				= pdtEnd
 
	 	set pidDispense = $$^WWWNEXT("MEDDispense")
 		set strStatus = $$$Save("MEDDispense",pidDispense,objDispense,$$$YES)
 		
		if $$$ISOK(strStatus) {
			set strStatus = $$LoadLines(pidDispense)		
		}
		; HEVA-866 vvvv
		if $$$ISOK(strStatus) {
			set objDispense = $get(^MEDDispense(YM,pidDispense,1)) ; HEVA-973 - Reget - Modified by LoadLines
			do UpdateRemarksOnRefuse(pidDispense,.objDispense,$$$YES)
 			set strStatus = $$$Save("MEDDispense",pidDispense,objDispense,$$$YES)
		}
		; HEVA-866 ^^^^
		
	}

	quit strStatus
	
LoadLines(pidDispense)
	;-------------------------------------------------------------------------------
	; Create / Update Prescription Dispense Line
	;
	; Inputs: pidDispense - Dispense ID
	;
	; Returns:
	;
	; History:
	; 06-Nov-2014	SCR		HEVA-1623: Exclude Rejected Lines if Time Check = $$$YES
	; 17-Oct-2014	SCR		HEVA-1580: TotalRequestedQuantity based on time
	; 15-Mar-2014	shobby	HEVA-1238: Validated Date
	; 25-Sep-2013	SCR		HEVA-1224: If no Qty and Status is complete, dont load the line.
	; 19-Aug-2013	SCR		HEVA-1048: Change Automatic rejection rules - MEDDispense
	; 13-Feb-2013	SCR		HEVA-949: Dont Load UDO confirmed lines
	; 27-Feb-2013	SCR		HEVA-866: Auto Reject PRN & IN Lines Default Reason
	; 26-Feb-2013	SCR		HEVA-866: Auto Reject PRN & IN Lines if no locations are defined work for all location
	; 25-Feb-2013	SCR		HEVA-866: Auto Reject PRN & IN Lines
	; 01-Feb-2013	shobby	HEVA-791.2: Use a counter on UDOInPreviousDispense so that we can determine
	;								    the last one instead of the first.
	; 30-Jan-2013	shobby	HEVA-791: Check if UDO item is in previous dispense.
	; 22-Jan-2013	SCR		HEVA-783: Check for existing open Dispense
	; 03-Jan-2013	SCR		HEVA-725: Bug fix
	; 02-Jan-2013	SCR		HEVA-725: Alternate Item Conversion
	; 19-Dec-2012	shobby	HEVA-700.3: Subroutine calculation of quantities.
	; 11-Dec-2012	SCR		HEVA-704: Update Status
	; 11-Dec-2012	SCR		HEVA-704: Keep Last Dispense item
	; 13-Dec-2012	shobby	HEVA-700.2: Always redo DoseTotal calculation.
	; 06-Dec-2012	SCR		HEVA-693: Copy Pick Qty, Pick UOM, Diluent Qty, Diluent UOM
	; 05-Dec-2012	SCR		HEVA-690: Copy rejection details
	; 04-Dec-2012	SCR		SR18220: Remove ´Zero if Continuous´ logic
	; 04-Dec-2012	SCR		SR18218: Carry Validation from previous
	; 25-Oct-2012	SCR		SR18156: Change Diluent to Pack unit
	; 31-Jul-2012	PPP		SR18067: Added TotalRequestedQuantity
	; 25-Jul-2012	PPP		SR18067: Set the Diluent UOM
	; 18-Jun-2012	SCR		SR18002.4 If Needed, just show colour change and leave the line as if (un-rejected)
	; 05-Jun-2012	PPP		SR18002.4 If Needed on Prescription, set rejected on Dispense line
	; 24-May-2012	PPP		SR18002.3 Check if line already refused in Prev Dispenses
	; 17-May-2012	PPP		SR18002.2 If the Issue Unit is not present set the unit to 
	;						be the Base Unit
	; 17-May-2012	PPP		SR18002.1: Take into consideration already Dispensed Qty
	; 02-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
#dim strStatus,idLine,objLine As  %String	
	new blnOK,fltDiluent,idBaseUnit,idDiluentPackUOM,idIssueType,idItem,idLastDisp
	new idLine,idLocn,idPrescription,idRejectReason,idToLocn,idUnit,lstRejectLocs
	new objDispense,objLastDisp,objLine,objPresLine,objSetup,strStatus
	new dtStart,dtEnd
	
	set objDispense 	= $get(^MEDDispense(0,pidDispense,1))
	set idPrescription 	= $$$MEDDispensePrescription(objDispense)
	set idLocn			= $$$MEDDispenseSupplyingLocation(objDispense)
 	set idToLocn		= $$$MEDDispenseDestinationLocation(objDispense)
	set idIssueType		= $$$MEDDispenseIssueType(objDispense)
	set dtStart			= $$$MEDDispenseShiftStart(objDispense)
	set dtEnd			= $$$MEDDispenseShiftEnd(objDispense)
	
 	set strStatus		= $$$OK
 	set blnOK			= $$$NO
	set objSetup=$get(^MEDPrescriptionSetup(0,YM,1))

	; HEVA-783 vvvv
	set idLastDisp=$$GetActiveDispense^MEDDispenseIssue(idPrescription,pidDispense,$$$YES) 

	if (idLastDisp'="") && (idLastDisp '= pidDispense)  {
		set strStatus = $listbuild("MED01422",idLastDisp,idPrescription)  ;Dispense %1 is open for Prescription %2
	}

	if (strStatus=$$$OK) && (idPrescription '= "") && ('$data(^MEDDispenseLine(0,pidDispense))) { 
	; HEVA-783 ^^^^
	;if (idPrescription '= "") && ('$data(^MEDDispenseLine(0,pidDispense))) { 

		set idLine = ""
	
		for {
			set idLine = $order(^MEDPrescrip]]><![CDATA[tionLine(0,idPrescription,idLine))
			quit:idLine=""

			set objLine = ""			
			set objPresLine=$get(^MEDPrescriptionLine(0,idPrescription,idLine,1))
		
			set idItem      = $$$MEDPrescriptionLineItem(objPresLine)

			do CopyValidation(idPrescription,pidDispense,idLine,.objLine,.objLastDisp) ; Get Last Dispense details
			if ($$$MEDDispenseLineFREE6(objLastDisp)=1) {
				continue
			}
			set $$$MEDDispenseLineFREE1(objLine)		= $$$MEDDispenseLineFREE1(objLastDisp) 	; HEVA-949
			set $$$MEDDispenseLineFREE2(objLine)		= $$$MEDDispenseLineFREE2(objLastDisp)	; HEVA-949
			set $$$MEDDispenseLineFREE3(objLine)		= $$$MEDDispenseLineFREE3(objLastDisp)	; HEVA-949
			set $$$MEDDispenseLineFREE4(objLine)		= $$$MEDDispenseLineFREE4(objLastDisp)	; HEVA-949
			
			set idUnit = $$IssueUOM(idIssueType,objPresLine)

			if objLastDisp'="" {  ; Copy item from the last dispense
				set idItem	= $$$MEDDispenseLineItemName(objLastDisp)
			}
	 		if (idUnit'="") {
			 	if '$data(^INARTPACK(YM,idItem,idUnit)) {
				 	set idUnit	= ""
			 		set $$$MEDDispenseLineIssueUOM(objLine)=idUnit
		 		}
	 		}
			set idUnit = $$IssueUOM(idIssueType,objPresLine)
			
			set idBaseUnit = $$$INARTUnitofMeasure($get(^INART(0,idItem,1)))
			
			if idUnit="" {
				set idUnit = idBaseUnit
			}
 			 
 			
			set:$$$MEDDispenseLineIssueUOM(objLastDisp)'="" idUnit=$$$MEDDispenseLineIssueUOM(objLastDisp)
			;new fltSingleDoseQty, fltTotalDoseQty,fltDispenseQty ;HEVA-700.3
			;do GetQtys^MEDDispenseCalc(pidDispense,idLine,objPresLine,idUnit,.fltSingleDoseQty,.fltTotalDoseQty,.fltDispenseQty)
 			;continue:'fltDispenseQty
			;HEVA-791.2 if $$$MEDDispenseLineUDO(objLastDisp) set $$$MEDDispenseLineUDOInPreviousDispense(objLine)=1 ;HEVA-791
			if $$$MEDDispenseLineUDO(objLastDisp)||($$$MEDDispenseLineUDOInPreviousDispense(objLastDisp)>0) set $$$MEDDispenseLineUDOInPreviousDispense(objLine)=$$$MEDDispenseLineUDOInPreviousDispense(objLastDisp)+1 ;HEVA-791.2
			set $$$MEDDispenseLineItemName(objLine)		= idItem
			set $$$MEDDispenseLineDoseQuantity(objLine)	= $$$MEDPrescriptionLineDoseQty(objPresLine) ;fltSingleDoseQty ;HEVA700.3
			set $$$MEDDispenseLineDoseUOM(objLine)		= $$$MEDPrescriptionLineDoseUOM(objPresLine)
			set $$$MEDDispenseLineFrequency(objLine)	= $$$MEDPrescriptionLineFrequency(objPresLine)
			set $$$MEDDispenseLineRoute(objLine)		= $$$MEDPrescriptionLineRouteOfAdministration(objPresLine)
			set $$$MEDDispenseLineFromDate(objLine)		= $$$MEDPrescriptionLineFromDate(objPresLine)
			set $$$MEDDispenseLineFromTime(objLine)		= $$$MEDPrescriptionLineFromTime(objPresLine)
			set $$$MEDDispenseLineToDate(objLine)		= $$$MEDPrescriptionLineToDate(objPresLine)
			set $$$MEDDispenseLineToTime(objLine)		= $$$MEDPrescriptionLineToTime(objPresLine)
			;set $$$MEDDispenseLineIssueQuantity(objLine)= fltDispenseQty					;HEVA-700.3
			;set $$$MEDDispenseLineTotalRequestedQuantity(objLine)= fltTotalDoseQty			;HEVA-700.3
			set $$$MEDDispenseLineIssueUOM(objLine)		= idUnit
			if $$$MEDDispenseLineDiluent(objLine)="" {
				set $$$MEDDispenseLineDiluent(objLine)		= $$$MEDPrescriptionLineDiluent(objPresLine)
				set $$$MEDDispenseLineDiluentQty(objLine)	= $$$MEDPrescriptionLineDiluentQty(objPresLine)
			}
			
			if $$$MEDDispenseLineDiluentUOM(objLine)="" {
				if $$$MEDDispenseLineDiluent(objLine)'="" {
					set $$$MEDDispenseLineDiluentUOM(objLine) = $$$INARTUnitofMeasure($get(^INART(0,$$$MEDDispenseLineDiluent(objLine),1)))
				}
			}
		 	set objLine=$$UpdateDispenseLine^MEDDispenseCalc(pidDispense,idLine,objLine)
		 	; continue:'$$$MEDDispenseLineIssueQuantity(objLine) ; HEVA-725 Commented to attend HEVA-1110
		 	if ('$$$MEDDispenseLineIssueQuantity(objLine)) { ; HEVA-1110 <
		 		continue:$$$MEDPrescriptionLineStatus(objPresLine)=9 ; HEVA-1224: Continue if Rx line is completed (9)
		 		set $$$MEDPrescriptionSetupAutoRejectPRNIN(objSetup) = 1
		 		set $$$MEDPrescriptionSetupAutoRejectReasonforPRNIN(objSetup) = 19
		 		
		 		set $$$MEDDispenseLineValidatedStatus(objLine) 	= "refuse.gif"
				set $$$MEDDispenseLineValidatedBy(objLine) 		= $get(YBED)
				set $$$MEDDispenseLineValidatedOn(objLine)		= $horolog 
				set $$$MEDDispenseLineValidatedDate(objLine)	= +$horolog ;HEVA-1238
				set idRejectReason 								= $$$MEDPrescriptionSetupAutoRejectReasonforPRNIN(objSetup)
				if idRejectReason'="" {
					set $$$MEDDispenseLineRejectReason(objLine)	= $piece($get(^VARPARA(YM,"MOTIVOREJEICAO",LANGUAGE,idRejectReason,1)),Y,1)
					if $$$MEDDispenseLineRejectReason(objLine)'="" {
						set $$$MEDDispenseLineRemarks(objLine) 	= "information.gif"
					}
				}
		 	}
		 	;HEVA 1110 >
			set $$$MEDDispenseLineTotalRequestedQuantity(objLine) = $$DoseTotal^MEDPrescriptionLine(objPresLine,$$$NO,,dtStart,dtEnd)
			
			if ($$$MEDDispenseLineDiluent(objLine)'="") {
				set idDiluentPackUOM = 	$$GetPickUOM^INUOMConversion($$$MEDDispenseLineDiluent(objLine),idIssueType,,$$$YES)
				;set idDiluentPackUOM = 	$$GetPickUOM^INUOMConversion($$$MEDDispenseLineDiluent(objLine),idIssueType)
				set fltDiluent		 = $$Convert^INUOMConversion(
															$$$MEDDispenseLineDiluent(objLine),
															$$$MEDDispenseLineDiluentQty(objLine),
															$$$MEDDispenseLineDiluentUOM(objLine),
															idDiluentPackUOM)
				set $$$MEDDispenseLineDiluentQty(objLine) = fltDiluent
				set $$$MEDDispenseLineDiluentUOM(objLine) = idDiluentPackUOM
			}

			if $$$MEDDispenseLineDiluent(objLastDisp)'="" { ; do this last , overrides all
				set $$$MEDDispenseLineDiluent(objLine)		= $$$MEDDispenseLineDiluent(objLastDisp)
				set $$$MEDDispenseLineDiluentUOM(objLine) 	= $$$MEDDispenseLineDiluentUOM(objLastDisp)
				set $$$MEDDispenseLineDiluentQty(objLine)	= $$$MEDDispenseLineDiluentQty(objLastDisp) -
															  $$$MEDDispenseLineDiluentQtyPicked(objLastDisp)
			}
					
			; HEVA-866 vvvv
 			if $$$MEDPrescriptionSetupAutoRejectPRNIN(objSetup) {
	 			set lstRejectLocs = ";"_$$$MEDPrescriptionSetupAutoRejectLocationsforPRN(objSetup)_";"
	 			if (lstRejectLocs [ (";"_$$$MEDDispenseSupplyingLocation(objDispense)_";")) || (lstRejectLocs=";;") {
	 			;if lstRejectLocs [ (";"_$$$MEDDispenseSupplyingLocation(objDispense)_";") {
		 			if (($$$MEDPrescriptionLinePRN(objPresLine) && '$$$MEDPrescriptionLineContinuous(objPresLine)) || $$$MEDPrescriptionLineIfNeeded(objPresLine)) { ; HEVA-1048
		 			;if ($$$MEDPrescriptionLinePRN(objPresLine) || $$$MEDPrescriptionLineIfNeeded(objPresLine)) {
						set $$$MEDDispenseLineValidatedStatus(objLine) 	= "refuse.gif"
						set $$$MEDDispenseLineValidatedBy(objLine) 		= $get(YBED)
						set $$$MEDDispenseLineValidatedOn(objLine)		= $horolog 
						set $$$MEDDispenseLineValidatedDate(objLine)	= +$horolog ;HEVA-1238
						;HEVA-1513												
						if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
							set statusRejeitado = $$$Save("VARHistRejeicaoDisp",pidDispense_"||"_idLine_$$$COMMA_14,"Se necessário / ACM",1)
						}
						set idRejectReason 								= $$$MEDPrescriptionSetupAutoRejectReasonforPRNIN(objSetup)
						if idRejectReason'="" {
							set $$$MEDDispenseLineRejectReason(objLine)	= $piece($get(^VARPARA(YM,"MOTIVOREJEICAO",LANGUAGE,idRejectReason,1)),Y,1)
							if $$$MEDDispenseLineRejectReason(objLine)'="" {
								set $$$MEDDispenseLineRemarks(objLine) 	= "information.gif"
							}
						}
						set $$$MEDPrescriptionLineStatus(objPresLine) = 10
						set strStatus=$$$Save("MEDPrescriptionLine",idPrescription_","_idLine,objPresLine,1)
						quit:strStatus'=$$$OK
		 			}
	 			}
 			}
 			; HEVA-866 ^^^^

			if $$$MEDPrescriptionLineStatus(objPresLine)=6 {  ; Suspended
				set $$$MEDDispenseLineValidatedStatus(objLine) 	= "refuse.gif"			
				
			}
			if $$$MEDPrescriptionLineRemarks(objPresLine)'="" {
				set $$$MEDDispenseLineRemarks(objLine)	=  "information.gif"
			} else {
				set $$$MEDDispenseLineRemarks(objLine)	=  "blank_flat.gif"
			}
 			
 			if $$$MEDDispenseLineValidatedStatus(objLine)="" {
				set $$$MEDDispenseLineValidatedStatus(objLine) 	= "blank_flat.gif"
				set blnOK = $$$YES
 			}
			set strStatus = $$$Save("MEDDispenseLine",pidDispense_","_idLine,objLine,1)			
			quit:$$$ISERR(strStatus) 	
			
		}	
	}

 	if $$$ISOK(strStatus) {
		set strStatus = $$UpdateStatus(pidDispense) ; HEVA-704 ;HEVA-700.3
	}

	quit strStatus

CopyValidation(pidPrescription,pidDispense,pidLine,&pobjLine,&pobjLastDisp)
	;-------------------------------------------------------------------------------
	; Copy Valiadation and Rejection details from the last Dispense line (if not fisrt)
	;
	; Params:	pidPrescription	= Source Rx
	;			pidDispense & pidLine = current dispense & line
	;			pobjLine 		= current line ( update by ref )
	;			pobjLastLine 	= last dispense line , blank if 1st
	;
	; Returns:	
	;
	; History:
	; 15-Mar-2014	shobby	HEVA-1238: ValidatedDate
	; 25-Mar-2013	SCR		HEVA-901: Copy Free Field 6 , UDO validation
	; 29-Jan-2013	SCR		HEVA-791: Keep UDO Validation
	; 04-Jan-2013	SCR		HEVA-738: Keep rejection details
	; 03-Jan-2013	SCR		HEVA-738: Leave Dispense as un validated (Still pass back pobjLastDisp)
	; 06-Dec-2012	SCR		HEVA-693: Copy Pick Qty, Pick UOM, Diluent Qty, Diluent UOM
	; 05-Dec-2012	SCR		HEVA-690: Copy rejection details
	; 04-Dec-2012	SCR		SR18218: Created
	;-------------------------------------------------------------------------------
	new blnDone,idLastDisp,idxPres
	
	
	set pobjLastDisp= ""
	set blnDone		= $$$NO  
	set idxPres		= $$$Index(pidPrescription)
	set idLastDisp	= ""
	for {
		quit:blnDone 
		set idLastDisp=$$GetActiveDispense^MEDDispenseIssue(pidPrescription,pidDispense,$$$YES,$$$YES) 
		quit:idLastDisp=""
		
		continue:idLastDisp=pidDispense		
		
		set blnDone		= $$$YES
		set pobjLastDisp = $get(^MEDDispenseLine(0,idLastDisp,pidLine,1))
		; HEVA-791 vvvv
		if ($$$MEDDispenseLineValidatedStatus(pobjLastDisp) = "accept.gif") &&
			     $$$MEDDispenseLineUDO(pobjLastDisp)	{ 
				set $$$MEDDispenseLineUDO(pobjLine)				= $$$MEDDispenseLineUDO(pobjLastDisp)
				set $$$MEDDispenseLineValidation(pobjLine)		= $$$MEDDispenseLineValidation(pobjLastDisp)
				set $$$MEDDispenseLineValidatedStatus(pobjLine) = "accept.gif"
				set $$$MEDDispenseLineValidatedBy(pobjLine) 	= $$$MEDDispenseLineValidatedBy(pobjLastDisp)
				set $$$MEDDispenseLineValidatedOn(pobjLine)		= $$$MEDDispenseLineValidatedOn(pobjLastDisp)
				set $$$MEDDispenseLineValidatedDate(pobjLine)	= $$$MEDDispenseLineValidatedDate(pobjLastDisp) ;HEVA-1238
		}
		; HEVA-791 ^^^^
		; HEVA-738 vvvv
		;if ($$$MEDDispenseLineValidatedStatus(pobjLastDisp) = "accept.gif") { 
		;	set $$$MEDDispenseLineValidation(pobjLine)		= $$$MEDDispenseLineValidation(pobjLastDisp)
		;	set $$$MEDDispenseLineValidatedStatus(pobjLine) = "accept.gif"
		;	set $$$MEDDispenseLineValidatedBy(pobjLine) 	= $$$MEDDispenseLineValidatedBy(pobjLastDisp)
		;	set $$$MEDDispenseLineValidatedOn(pobjLine)		= $$$MEDDispenseLineValidatedOn(pobjLastDisp)
		;	set $$$MEDDispenseLineValidatedDate(pobjLine)	= $$$MEDDispenseLineValidatedDate(pobjLastDisp) ;HEVA-1238
		;} elseif ($$$MEDDispenseLineValidatedStatus(pobjLastDisp) 	= "refuse.gif") {
		; HEVA-738 ^^^^
		if ($$$MEDDispenseLineValidatedStatus(pobjLastDisp) 	= "refuse.gif") {
			set $$$MEDDispenseLineValidatedStatus(pobjLine) = "refuse.gif"
			set $$$MEDDispenseLineValidatedBy(pobjLine) 	= $$$MEDDispenseLineValidatedBy(pobjLastDisp)
			set $$$MEDDispenseLineValidatedOn(pobjLine)		= $$$MEDDispenseLineValidatedOn(pobjLastDisp)
			set $$$MEDDispenseLineValidatedDate(pobjLine)	= $$$MEDDispenseLineValidatedDate(pobjLastDisp) ;HEVA-1238
			set $$$MEDDispenseLineRemarks(pobjLine) 		= "information.gif"
			set $$$MEDDispenseLineRejectReason(pobjLine)	= $$$MEDDispenseLineRejectReason(pobjLastDisp)
		}
		set $$$MEDDispenseLineFREE6(pobjLine)				= $$$MEDDispenseLineFREE6(pobjLastDisp) ; HEVA-901
	
	} 
 
	quit
	
CheckReview(pidDispense)
	;-------------------------------------------------------------------------------
	; Check if all lines have been Validated in the Grid
	;
	; Params:	pYKEY	- Dispense
	;
	; Returns:	
	;
	; History:
	; 24-Jul-2012	PPP		SR18067: Added Prescription Suspended check
	; 03-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	//new arrGrid
	new strStatus
	new blnOK
	new idLine
	new objDispense
	new objLine
	new idStatus
	new strDispenseStatus
		
 	set strStatus = $$$OK
	
	if '$$$NoKey(pidDispense) {
		
 		set idLine = ""
		set blnOK = $$$NO
		
		if '$data(^MEDDispenseLine(0,pidDispense)) {
			set strStatus = $$$MakeStatus("MED00402") //"Record has no lines"
		}

		//SR18067
		if $$$ISOK(strStatus) {
			if $$IsPresSuspended^MEDDispense(pidDispense) {  ;SR18067
				set strStatus = $$$MakeStatus("MED00424")  ;Cannot perform current operation as Prescription is suspended
			}
		}
	
		if $$$ISOK(strStatus) {	

			//Check lines
			for {
				quit:blnOK=$$$YES
			
				set idLine = $order(^MEDDispenseLine(0,pidDispense,idLine))
				quit:idLine=""
			
				set objLine = $get(^MEDDispenseLine(0,pidDispense,idLine,1))
			
				if $$$MEDDispenseLineValidatedStatus(objLine) '= "blank_flat.gif" {
					set blnOK = $$$YES
				}
			}
		
			if 'blnOK {
			 	set strStatus = $$$MakeStatus("MED00401")   ; //"At least one line needs to be Valid"
			}

		}

		if $$$ISOK(strStatus) {
			set objDispense 	= $get(^MEDDispense(0,pidDispense,1))
			set idStatus = $$$MEDDispenseStatus(objDispense)
			if (idStatus > 2) {  ; Validated 	
				set strDispenseStatus = $$GetDescription^WWWStatus("MEDDispense",idStatus,$get(SPRACHE))
		 		set strStatus = $$$MakeStatus("MED00398",strDispenseStatus)   //Invalid Status (%) for current operation
			}
		}

	}

 	$$$YQHandler(strStatus)
	
	quit strStatus


	/***
	/17-May-2012 PPP: No longer needed; loading lines OnAfterSave of MEDDispense
CheckLoadLines(pidDispense)
	;-------------------------------------------------------------------------------
	; Check if lines have been already loaded in the Grid
	;
	; Params:	pidDispense	- Dispense
	;
	; Returns:	
	;
	; History:
	; 03-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new strStatus
		
 	set strStatus = $$$OK
	
	if '$$$NoKey(pidDispense) {
		if $data(^MEDDispenseLine(0,pidDispense)) {
		 	set strStatus = $$$MakeStatus("MED00397")   ; //"Record already has lines"
		} 
	}

 	$$$YQHandler(strStatus)
	
	quit strStatus
	
	*****/

Review(pidDispense,pidLine="")
	;-------------------------------------------------------------------------------	
	; Validate the lines that need Validation and flag the Validation Status
	;
	; Params:	pidDispense	- Dispense
	;			pidLine		- Dispense Line (Optional)
	;
	; Returns:	
	;
	; History:
	; 15-May-2013	SCR		HEVA-953: Review a single line
	; 03-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------	
	new blnCheckUDOFirmed,idLinha,objLinha,strStatus

	if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
		kill ^VARTempDispenseLineUDOFirmed(YM,pidDispense)
	}
	set strStatus = $$Transaction^COMTransaction("ReviewTxn^MEDDispense("""_pidDispense_""","""_pidLine_""")",$$$YES) ; HEVA-953
	;set strStatus = $$Transaction^COMTransaction("ReviewTxn^MEDDispense("""_pidDispense_""")",$$$YES)
	
	if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
		if $$$ISOK(strStatus) {
			set blnCheckUDOFirmed = $data(^VARTempDispenseLineUDOFirmed(0,pidDispense))
			if (blnCheckUDOFirmed '= $$$NO){
				$$$StartScript()
				write "alert('Os medicamentos abaixo não podem ser revisados pois já foram confirmados na Farmacotécnica: \r\n"
				set idLinha = ""
				for {
					set idLinha = $order(^VARTempDispenseLineUDOFirmed(0,pidDispense,idLinha))
					quit:(idLinha = "")
					set objLinha = $get(^VARTempDispenseLineUDOFirmed(0,pidDispense,idLinha,1))
					write "("_$piece(objLinha,Y,1)_") "_$$SQLGetDescricaoProduto^VARSQL($piece(objLinha,Y,1))_"\r\n"
				}
				write "')"
				$$$EndScript()	
			}
		}
	}

	if $$$ISOK(strStatus) {
			do GoToForm^COMUtilForm("MEDDispense",pidDispense)
	}
	
	quit strStatus


ReviewTxn(pidDispense,pidLine="")
	;-------------------------------------------------------------------------------
	; Review the Dispense Lines
	;
	; Params:	pidDispense	- Dispense
	;			pidLine		- Dispense Line (Optional)
	;
	; Returns:	
	;
	; History:
	; 15-Mar-2014	shobby	HEVA-1238: ValidatedDate
	; 19-Aug-2013	SCR		HEVA-1044: Clear FREE5 (Refuse Code)
	; 24-May-2013	SCR		CORE-94: Remove Reservation
	; 14-May-2013	SCR		HEVA-953: Review a single line
	; 02-jan-2013	SCR		HEVA-725: Reset Qty & Unit
	; 21-Dec-2012	SCR		HEVA-704: Clear Alternate Notes
	; 13-Dec-2012	SCR		HEVA-704: Reset Item
	; 08-Nov-2012	SCR		SR18177: Clear Validated on
	; 07-Nov-2012 	SCR		SR18154: Clear  Blank Remarks
	; 30-Oct-2012	shobby	SR18173: Validation 'Tick' is cleared on Review.
	; 24-Oct-2012	shobby	SR18174: Clear the UDO field.
	; 27-Jul-2012	PPP		SR18067: If Prescription Line Suspeded, leave Dispense Line as Rejected
	; 18-Jul-2012	SCR		SR18002: Reset Line Status back to Awaiting Validation (1) and Rx Status if all lines have the same status
	; 09-Jun-2012	PPP		SR18002.3: Save Original Prescription Remarks
	; 23-May-2012	PPP		SR18002.2: Changed to WWWSKILL as WWWKILL has OnBeforeDelete
	;						on the FORM which is not necessary to run
	; 15-May-2012	PPP		SR18002.1: Updated the Prescription Status
	; 03-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------	
	new blnOther,idItem,idLine,idPres,idUnit,intCount,objDispense,objLine,objPresLn
	new objPrescriptionQt,qtPrescription,strChar,strPresLineRemarks,strStatus,strUser
	
 	set strStatus 	= $$$OK
 	set blnOther	= $$$NO ; if single line, this is used to check if other lines are validated and then set the status
		
	if '$$$NoKey(pidDispense) {

		set strStatus = $$CheckReview(pidDispense)
		
		if $$$ISOK(strStatus) {
		
			set objDispense 	= $get(^MEDDispense(0,pidDispense,1))
			; HEVA-953 vvv
			if (strStatus=$$$OK) && (pidLine'="") {
				set strStatus = $$CreatePickTxn^MEDDispensePickList(pidDispense,pidLine)
			}
			; HEVA-953 ^^^


			if $$$ISOK(strStatus) && $data(^MEDDispensePickLine(0,pidDispense)) {
				
				set idLine=""
				//Clear all Pick Lines
				for {
					quit:$$$ISERR(strStatus)
					set idLine = $order(^MEDDispensePickLine(0,pidDispense,idLine))
					quit:idLine=""
					
					//SR18002.2
					; HEVA-953 vvvv
					; Clear all Pick Lines
					;if pidLine'="" {
					;	continue:idLine\1'=pidLine
					;}
					; HEVA-953 ^^^^
					if $$$ISOK(strStatus) {
						;do ^WWWSKILL("MEDDispensePickLine",pidDispense_$$$COMMA_idLine)
						set strStatus = $$$Kill("MEDDispensePickLine",pidDispense_$$$COMMA_idLine) ;HEVA-1644
						if $$$ISOK(strStatus) {
							do ClearReservation^INReservation(pidDispense,61,,idLine) ; CORE-94
						}
					}
				}
			}
			
			if $$$ISOK(strStatus) {
				//Clear all MEDDispenseLine data
				set idPres		= $$$MEDDispensePrescription(objDispense) 
		 		set idLine = ""
		
				for {
					quit:$$$ISERR(strStatus)

					set idLine = $order(^MEDDispenseLine(0,pidDispense,idLine))
					quit:idLine=""
			
					set objLine = $get(^MEDDispenseLine(0,pidDispense,idLine,1))					
					; HEVA-953 vvvv
					
					if pidLine'="" {
						if (idLine'=pidLine) {
							set:$$$MEDDispenseLineValidation(objLine)=1 blnOther = $$$YES
							continue
						}
					}
					; HEVA-1110 line with quantity = 0 can not be reviewed <
					set qtPrescription = 1
					if idPres'="" {
						set objPrescriptionQt	= $get(^MEDPrescriptionLine(0,idPres,idLine,1))
						set qtPrescription = +$$$MEDPrescriptionLineDoseQty(objPrescriptionQt)
					}
					
					if (+qtPrescription=0){
						continue 
					}
					; HEVA-1110 >
					
					if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
						set $$$MEDDispenseLineFREE5(objLine) = "" ; HEVA-1044 - Clear Refuse Reason Code
						if (($$$MEDDispenseLineFREE6(objLine) = 1) && ($$$MEDDispenseLineUDO(objLine) '= "")){
							set ^VARTempDispenseLineUDOFirmed(YM,pidDispense,idLine,1) = $$$MEDDispenseLineItemName(objLine)
							continue
						}
					}
						
					; HEVA-953 ^^^^

					//SR18067 - 6 Suspended
					if $$$MEDPrescriptionLineStatus($get(^MEDPrescriptionLine(0,idPres,idLine,1))) = 6 {
						if $$$MEDDispenseLineValidatedStatus(objLine) 	'= "refuse.gif" {
							set $$$MEDDispenseLineValidatedStatus(objLine) = "refuse.gif"						
							set strStatus=$$$Save("MEDDispenseLine",pidDispense_","_idLine,objLine,1)
						}
						continue
					}
					
					set $$$MEDDispenseLineValidatedStatus(objLine) = "blank_flat.gif"
					set $$$MEDDispenseLineValidatedBy(objLine) 		= ""
					set $$$MEDDispenseLineValidatedOn(objLine) 		= "" ;SR18177
					set $$$MEDDispenseLineValidatedDate(objLine) 	= "" ;HEVA-1238
					set $$$MEDDispenseLineValidation(objLine)		= "" ;SR18173
					//set $$$MEDDispenseLineRemarks(objLine) 			= "blank_flat.gif"

					set objPresLn = $get(^MEDPrescriptionLine(0,idPres,idLine,1))
					//SR18002.3 Save Original Prescription Remarks
					set strPresLineRemarks = $piece($$$MEDPrescriptionLineRemarks(objPresLn),"#",1)
					set:$translate(strPresLineRemarks," |")="" strPresLineRemarks="" ;SR18154
					if strPresLineRemarks="" {
						set $$$MEDDispenseLineRemarks(objLine) 			= "blank_flat.gif"
					} else {
						set $$$MEDDispenseLineRemarks(objLine) 			= "information.gif"
					}
					set $$$MEDDispenseLineUDO(objLine)					= ""
					set idItem 											= $$$MEDPrescriptionLineItem(objPresLn)
					if $$$MEDDispenseLineItemName(objLine)'=idItem {
						set $$$MEDDispenseLineItemName(objLine)				= idItem
						set strPresLineRemarks 	= $piece(strPresLineRemarks,("- ("_idItem_")"),1)
						set:$translate(strPresLineRemarks," |")="" strPresLineRemarks=""
						set objLine				= $$UpdateDispenseLine^MEDDispenseCalc(pidDispense,idLine,objLine) ; HEVA-725
					}
	 				set idUnit	=  $$$MEDDispenseLineIssueUOM(objLine)
	 				if (idUnit'="") {
					 	if '$data(^INARTPACK(YM,idItem,idUnit)) {
						 	set idUnit	= ""
						 	set $$$MEDDispenseLineIssueUOM(objLine)=idUnit
					 	}
	 				}

					set strStatus=$$$Save("MEDDispenseLine",pidDispense_","_idLine,objLine,1)

					if $$$ISOK(strStatus) {
						set objPresLn = $get(^MEDPrescriptionLine(0,idPres,idLine,1))
						for intCount=$length(strPresLineRemarks):-1:1 {
							set strChar 	= $extract(strPresLineRemarks,intCount)
							if (strChar=" ")||(strChar="|") {
								set strPresLineRemarks = $extract(strPresLineRemarks,1,intCount-1)
							} else {
								quit
							}
						}
						set $$$MEDPrescriptionLineRemarks(objPresLn) = strPresLineRemarks
						
						set $$$MEDPrescriptionLineStatus(objPresLn)=1 ; Awaiting Vailation
						set strStatus = $$$Save("MEDPrescriptionLine",idPres_$$$COMMA_(idLine),objPresLn,$$$YES)
					}

				}
				
			}
			
		 	if $$$ISOK(strStatus) {	
				if $get(YBED)'="" {
					set strUser = $$$WWW013Name($get(^WWW013(0,YBED,1)))
				}
				set $$$MEDDispensePickListPrinted(objDispense) 	= ""		//Clear Pick List Printed
				if pidLine="" {
					set $$$MEDDispenseStatus(objDispense) 			= 1 		//Open
					set $$$MEDDispenseRemarks(objDispense)			= $$$MEDDispenseRemarks(objDispense)_YCR_
						"# "_$$$Text("MED00413")_" "_$$$Text("32058")_" "_$get(strUser)_" "_$$$Text("293")_" "_$$^WWWDATE(+$h)_" "_$piece($$^WWWTIME($p($h,",",2)),":",1,2)
						//Dispense 'Review'     //Checked By
				} else {  ; HEVA-953 vvvv
					set $$$MEDDispenseRemarks(objDispense)			= $$$MEDDispenseRemarks(objDispense)_YCR_
						"# "_$$$Text($listbuild("MED01428",pidLine))_" "_$$$Text("32058")_" "_$get(strUser)_" "_$$$Text("293")_" "_$$^WWWDATE(+$h)_" "_$piece($$^WWWTIME($p($h,",",2)),":",1,2)
						;Dispense Line %1 Reviewed
					set:'blnOther $$$MEDDispenseStatus(objDispense) 			= 1 		//Open

				}	; HEVA-953 ^^^^				
				set strStatus = $$$Save("MEDDispense",pidDispense,objDispense,$$$YES)
		
			}
			
			
		}
		
	}
	if strStatus=$$$OK {
		set strStatus = $$UpdateRxStatus^MEDPrescriptionAutoClose(idPres)
	}
	quit strStatus


HideTab2(pidDispense, pobjDispense)
	;-------------------------------------------------------------------------------
	; $$HideTab2^MEDDispense($get(YFELD)) 
	;   
	; History:
	; 10-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new blnHide
	
	set blnHide = $$$NO
		
	if '$$$NoKey(pidDispense) {
		if '$data(^MEDDispensePickLine(0,pidDispense)) {
			set blnHide = $$$YES
		} elseif ($$$MEDDispenseStatus(pobjDispense)<2) {
			set blnHide = $$$YES			
		}
	}
	
	quit blnHide

IssueUOM(penumIssueType,pobjPresLine)
	;-------------------------------------------------------------------------------
	; convert UOM prescribed into PickUOM
	;
	; Inputs:	pidIssueType	- Issue Type
	;			pobjPresLine	- Prescription Line Record
	;
	; Returns: Issue UOM
	;
	; History:
	; 10-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	new idIssUOM
	new idItem
	new strStatus 
	
	set strStatus   = $$$OK
	set idIssUOM = ""

	if penumIssueType'="" {
		set idItem         = $$$MEDPrescriptionLineItem(pobjPresLine)
		set idIssUOM = $$GetPickUOM^INUOMConversion(idItem,penumIssueType,.strStatus)
	}
	
	quit idIssUOM 

CanDelete(pidDispense, pobjDispense)
	;-------------------------------------------------------------------------------
	; If the status is Open, allow the delete.
	;
	; Params:pidDispense
	;
	; Returns:
	;
	; History:
	; 02-Oct-2012	shobby	SR18150: Don't crash on empty record.
	; 15-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
 	new idStatus
 	new strStatus
	new strDispenseStatus
	
	set strStatus = $$$OK
	if pidDispense '="" {											;SR18150
		if $get(pobjDispense)=""  {
			set pobjDispense = $get(^MEDDispense(0,pidDispense,1))
		}
	
		set idStatus = $$$MEDDispenseStatus(pobjDispense)
		if (idStatus > 2) {  ; Awaiting Validataion
			set strDispenseStatus = $$GetDescription^WWWStatus("MEDDispense",idStatus,$get(SPRACHE))
	 		set strStatus = $$$MakeStatus("MED00398",strDispenseStatus)   //Invalid Status (%) for current operation
		}
	
		if $$$ISERR(strStatus) {
			set Q = $$$QDontDelete
		}
	}																;SR18150
	quit strStatus


OnBeforeFieldConstruction(pYBBN,pYKEY,pYFELD,pYPARA)
	;-------------------------------------------------------------------------------
	; Called From:
	; 	MEDDispense Form, Prescription Field
	; 	
	; History:
	; 06-Dec-2012	shobby	HEVA-691: Test class field instead of form field.
	; 18-May-2012	PPP		SR18002.1: Hide Prescription field after Intital Load 
	; 15-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------
	quit:$$$NoKey(pYKEY)
	
	;if $$$GetFormField("MEDDispense",pYBBN)=$$$FldMEDDispensePrescription {
	if $$$GetClassField("MEDDispense",pYBBN)=$$$FldMEDDispensePrescription {
		if $get(pYPARA)'="" {
			if $$$MEDDispensePrescription(pYFELD) = $piece($get(pYPARA)," ",1) {	
				set YHID = 1
			}
		}
		if $data(^MEDDispenseLine(0,pYKEY)) {
			set YHID = 1		
		}
	}
	quit


IsPrevRefused(pidItem,pidDispense,pidPrescription)
	;-------------------------------------------------------------------------------
	; Get the details of a Previous Instance of MEDDispenseLine refused
	; 
	; Params:	pidDispense			- Current Dispense
	;			pidPrescription		- Prescription
	;
	; Returns:	strStatus
	;
	; History :
	; 24-May-2012	PPP		SR18002: Created
	;-------------------------------------------------------------------------------	
	new blnRejected,idDispense,idLine,idxDispense,idxItem,idxPres
	
	set idDispense=""
	set idxPres = $$$Index(pidPrescription)
	set idxItem = $$$Index(pidItem)
	set blnRejected = $$$NO
	
	//^MEDDispenseLines(0,1,40002,"PP0000004",1)=""
	
	set idDispense=""
	for {
		quit:blnRejected
		set idDispense = $order(^MEDDispenses(0,1,idxPres,idDispense))
		quit:idDispense=""
		
		//write !,idDispense," "
		
		continue:idDispense=pidDispense		//Current one
		set idxDispense = $$$Index(idDispense)
		
		set idLine = ""
		for {
			quit:blnRejected
			set idLine = $order(^MEDDispenseLines(0,1,idxItem,idxDispense,idLine))
			quit:idLine=""
		
			set blnRejected = $$$MEDDispenseLineValidatedStatus($get(^MEDDispenseLine(0,idDispense,idLine,1)))="refuse.gif"
		}
	
	} 

	quit blnRejected

IsPresSuspended(pidDispense,pidPrescription="")
	;-------------------------------------------------------------------------------
	; Get the Status of the MEDPrescription
	; 
	; Params:	pidDispense			- Current Dispense
	;			pidPrescription		- Prescription
	;
	; Returns:	strStatus
	;
	; History :
	; 27-Sep-2012	shobby	SR18126: Check for valid pidDispense
	; 24-Jul-2012	PPP		SR18067: Created
	;-------------------------------------------------------------------------------	
	new blnSuspended
	
	set blnSuspended = $$$NO
	
	if pidDispense'="" {				;SR18126
		if pidPrescription = "" {
			set pidPrescription	= $$$MEDDispensePrescription($get(^MEDDispense(0,pidDispense,1)))
		}
		if pidPrescription '= "" {
		
			set:$$$MEDPrescriptionStatus($get(^MEDPrescription(0,pidPrescription,1)))=6 blnSuspended=$$$YES
		}
	}	
	quit blnSuspended
	
OnBeforeSaveHook(pidDispense,&pobjDispense)
	;-------------------------------------------------------------------------------
	; Set the patient id
	; 
	; Params:	pidDispense		
	;			pobjDispense		
	;
	; Returns:	strStatus
	;
	; History :
	; 14-Jun-2013	SCR		HEVA-93: Created
	;-------------------------------------------------------------------------------	
	new idRx,objRx,idPat,strStatus

	set strStatus = $$$OK
	set idRx = $$$MEDDispensePrescription(pobjDispense)
	if idRx'="" {
		set objRx = $get(^MEDPrescription(YM,idRx,1))
		set idPat = $$$MEDPrescriptionPatientID(objRx)
		set $$$MEDDispensePatient(pobjDispense) = idPat
	}
	quit strStatus
	
OnAfterDelete(pobjDisp)
	;-------------------------------------------------------------------------------	
	; Check Prescription Status
	;
	;
	; Returns:	
	;
	; History:
	; 22-Oct-2014	SCR		HEVA-1580: Change Status to 1 for non SES-PE clients
	; 16-Oct-2014	SCR		HEVA-1580: Created
	;-------------------------------------------------------------------------------	
	new idRx,objRx,strStatus
	set idRx	= $$$MEDDispensePrescription(pobjDisp)
	if idRx'="" {
		if '$data(^MEDDispenses(0,1,$$$Index(idRx))) {
			set objRx	= $get(^MEDPrescription(YM,idRx,1))
			if +$$$WWWClientParamCoreChangesSESPE($get(^WWWClientParam(YM,YM,1))) {
				set $$$MEDPrescriptionStatus(objRx) = 2 
			} else {
				set $$$MEDPrescriptionStatus(objRx) = 1 
			}
			set strStatus	= $$$Save("MEDPrescription",idRx,objRx,1)
		}
	}
	quit

]]></Routine>
</Export>