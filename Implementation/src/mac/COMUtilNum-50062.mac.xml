<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMUtilNum" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMUtilNum
    ;-------------------------------------------------------------------------------
    ; 	Routines relating to numbers/rounding etc...
    ;-------------------------------------------------------------------------------
#include COMSYS
#include COMConst
#include WWWConst
	
Ceiling(val)
    ;-------------------------------------------------------------------------------
    ; Return the ceiling of a number
    ; 
    ; 12.345 => 13		-12.345 => -12
    ; 
    ; History:
    ; 19-May-2006	GRF		Created (SR14651)
    ;-------------------------------------------------------------------------------
	new result
	
	set val    = +$get(val)
	set result = val\1
	set:result'=val result = $select(val>0:result+1,1:result)
	quit result
	
 
Floor(val)
    ;-------------------------------------------------------------------------------
    ; Return the floor of a number
    ; 
    ; 12.345 => 12		-12.345 => -13
    ;
    ; History:
    ; 19-May-2006	GRF		Created (SR14651)
    ;-------------------------------------------------------------------------------
	new result
	
	set val    = +$get(val)
	set result = val\1
	set:result'=val result = $select(val<0:result-1,1:result)
	quit result
	
	
Round(pfltValue,pidForm="",pidField="")
    ;-------------------------------------------------------------------------------
    ; Rounds a single number (not FC) to the correct number of decimal places
    ;
    ; Returns:Float
    ;
    ; History:
    ; 19-Apr-2005	Paul K	Created SR:5
    ;-------------------------------------------------------------------------------
	; FIXME : <GRF> Should calls to Round^COMUtils (which is hard coded to 2dp) use this instead?
	;         See also the routine WWWDECIMALLEN which uses D123 of ^WWW122D(0,YFORM,YLFN1,YM,1)) 
	;         Round^COMUtils  :  quit $fnumber(pcurAmount,"",2)
	quit +$justify(pfltValue,0,$$GetDecimalPlaces(pidForm,pidField))
	
	
GetDecimalPlaces(pidForm,pidFormFldNo,pidUnit="",pobjCurrent="",pobjWWW122="")
	;-------------------------------------------------------------------------------
	; If we are displaying a quantity field that has been associated with a unit
	; field and the unit code has been set to a particular degree of accuracy, use
	; that figure unless there is a WWW122D customisation.
	; If neither are set, will use the WWW003 setting or default to YDECIMALLEN.
	; 
	; Called By: ScreenUpdate^COMGridEdit31S (for type 8 Currency & 12 Floating)
	;            PARA^COMGridEdit31Body, (alTFR.dUTransferLine).CreateFromReqLine
	;            Round^COMUtilNum, OnBlur^INTFRLine
	; 
	; History:
	; 04-Jun-2014	shobby	CORE-385.12: Loosen dependency on IN globals.
	; 23-Jun-2011	shobby	SR17250.1: New'd idItem
	; 25-May-2011	GRF		SR17250: Reconstructed as common function from
	;							GetQtyDecimals^^COMGridEditUtil
	;-------------------------------------------------------------------------------
	new blnIsItem,blnIsUnit,idAssocClassFld,idClass,idClassFldNo,intDecimalPoints
	new idItem ;SR17250.1
	
	quit:(pidForm="")||(pidFormFldNo="") $get(YDECIMALLEN,2)
	
	; Get DP from Form, Class, Customisation, and Inventory Cost if applicable
	;---------------------------
	if pobjWWW122="" set pobjWWW122 = $$Get^WWW122(pidForm,pidFormFldNo)
	
	set intDecimalPoints = $$$WWW122Decimals(pobjWWW122)
	
	; Override with Unit-based dp
	;---------------------------
	if pidUnit="" {
		set idClass         =  $$$WWW120ClassUsedInForm($get(^WWW120(0,pidForm,1)))
		set idClassFldNo    = +$$$WWW122SequenceNumber(pobjWWW122)
		set idAssocClassFld =  $$$WWW122AssociatedwithField(pobjWWW122)
		if idAssocClassFld {
			do CheckRelation^WWWEVENTUtils(pidForm,idClass,pidFormFldNo,idClassFldNo,idAssocClassFld,.blnIsUnit,.blnIsItem)
		
			if blnIsUnit {
				set pidUnit = $piece(pobjCurrent,Y,idAssocClassFld)
			
			} elseif blnIsItem {
				set idItem = $piece(pobjCurrent,Y,idAssocClassFld)
				if idItem'="" {																					;CORE-385.12
					if ##class(%Library.Routine).Exists("INART") set pidUnit=$$GetUnitOfMeasure^INART(idItem) 	;CORE-385.12
				}																								;CORE-385.12
			}
		}
	}
	; NOTE: Don't try to default to item's Inventory Unit if only item supplied - assume a
	if pidUnit'="" set intDecimalPoints = $$$COMUnitDecimalPlaces($get(^COMUnit(0,pidUnit,1)))
	
	; Default
	;---------------------------
	if intDecimalPoints="" {
		set intDecimalPoints = $get(YDECIMALLEN,2)
	}
	quit intDecimalPoints
	
	
VirtualRoundEven(pfltAmount,pintDistributions,pintDecimalPlaces=0,plstResults)
	;-------------------------------------------------------------------------------
	; Function to apply virtual rounding over a number of different items.
	; Currently will attempt to distribute equally.
	;
	; History
	; 12-Sep-2005	JW		Moved from COMUtils. Use pintDecimalPlaces parameter
	; 05-Nov-2004	GRF		Convert dot to { form
	; 11-Mar-2003	shobby	Creation
	; ----------------------------------------------------------------------------
	new fltAmount,fltAmountRounded,fltExcess,i
	
	set fltExcess=0
	set plstResults=""
	
	for i=1:1:pintDistributions {
		set fltAmount        = (pfltAmount/pintDistributions)+fltExcess
		;set fltAmountRounded = $fnumber(fltAmount,"",2)
		set fltAmountRounded = $fnumber(fltAmount,"",pintDecimalPlaces)
		set fltExcess        = fltAmount-fltAmountRounded
		set plstResults      = plstResults_$listbuild(fltAmountRounded)
	}
	quit
	
	
VirtualRoundApportion(pfltAmount=0,parrAmounts,parrResults,pfltTotal="",pintDecimalPlaces=2)
	;-------------------------------------------------------------------------------
	; Function to apportion an amount over an array using virtual rounding.
	;
	; Params:	pfltAmount - amount to apportion
	; 			parrAmounts - amounts to be apportioned over: parrAmounts(id)=amount
	; 			parrResults - byRef: the apportioned values
	; 			pTotal - byRef: the summed total of the amounts (can be passed in as well if known prior)
	; 			pintDecimalPlaces - num of dp to round to.
	; 
	; History
	; 13-Sep-2005	JW		SR13434: Creation (modified above function)
	; ----------------------------------------------------------------------------
	new fltAmount,fltAmountRounded,fltExcess,portion,idAmount
	
	set pfltAmount = $justify(pfltAmount,0,pintDecimalPlaces)
	
	if pfltTotal="" {		// If not passed in
		set idAmount = ""
		for {
			set idAmount = $order(parrAmounts(idAmount))
			quit:idAmount=""
			
			set pfltTotal = pfltTotal + $get(parrAmounts(idAmount))
		}
	}
	
	if +pfltTotal=0 {
		set portion = 0
	} else {
		set portion = pfltAmount / pfltTotal
	}
	
	kill parrResults
	set fltExcess=0
	
	set idAmount = ""
	for {
		set idAmount = $order(parrAmounts(idAmount))
		quit:idAmount=""
		
		set fltAmount        	= (parrAmounts(idAmount)*portion) + fltExcess
		set fltAmountRounded 	= $justify(fltAmount,0,pintDecimalPlaces)
		set fltExcess        	= fltAmount-fltAmountRounded
		set parrResults(idAmount) = fltAmountRounded
	}
	quit
	
]]></Routine>
</Export>