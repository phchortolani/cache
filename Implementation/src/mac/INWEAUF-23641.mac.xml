<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INWEAUF" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INWEAUF   ; DEPRECATED with removal of INWEAUF - Do not use
#include COMSYS
#include INConst
	/*------------------------------------------------------------------------------
	; Description of Function :
	;		COPY VON WE ERFASSUNG IN FREIEN BESTAND
	;		BUCHEN DER WARENEINGÄNGE AUS WE ERFASSUNG
	;	COPY OF INCOMING GOODS COLLECTION IN FREE EXISTENCE
	;	RECORD OF THE INCOMING GOODS FROM INCOMING GOODS COLLECTION
	;	
	; Inputs : 
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 18-Mar-2009	GRF		specific $$$KEY macros
	; 14-Dec-2006	GRF		Doco; Macros
	; 12-Oct-2006	GRF		Doco
	; 28-Jun-2006	GRF		Doco
	; 02-Feb-2006	GRF		SR14203: Call AutoUpdate^INStockValAdjust
	; 24-Nov-2005	RPW		SR13884: Make the code conform to Coding Standards (SR13800)
	; 03-Nov-2005	JW		SR13222: Added blnREVERSE for reversing receipts
	; 05-Sep-2005	PO		SR13591: Corrected SR13517 work so that amount calculated
	; 						from FC OR Base amounts
	; 26-Sep-2005	PO		SR13517 : Fixed discrepency in amounts posted to G/L
	; 06-Sep-2005	GRF		Doco; remove unnecessary DO level
	; 16-Aug-2005	FIS		SR13253 : Use AVERAGE COST; calls $$^INARTAVG
	; 03-Aug-2005	GRF		SR13161 : Add INFOTEXT
	; 08-Jul-2005	shobby	SR12745 : Call to INARTHIST now does not have the service
	; 						cost added to unitcost.  
	; 05-Jul-2005	shobby	SR12333 : Call to INARTHIST now has DISPATCH no (delivery
	; 						note number).
	; 23-Jun-2005	shobby	SR12749 : Cost of item after adding service costs should
	; 						not be rounded. 
	; 16-Jun-2005	GRF		Clean up
	; 14-Apr-2005	shobby	SR12101 : Included Service Cost code per Mr Fischer's email
	; 12-Apr-2005	shobby	Moved  Finance Transaction Reference from piece 17
	; 						to piece 18 in called to INARTHIST
	; 12-Apr-2005	GRF		SR10478 : Add Finance Transaction Reference
	;						(INWEAUF D115 => INFIBBUCH D104)
	; 08.Aug.2000	DT		Created
	;-----------------------------------------------------------------------------*/
	new AUF,BETR,LP,POS,WEDAT
 	
	QUIT:YKEY=""
	
	; FIXME : <GRF> INWEAUFVORS doesn't encase individual keys in quotes.  If no other
	;               calling routine does either then this can be simplified.  Can we pass
	;               a kill flag to Receive and move the other code there so we only
	;               decompose the key once? 
	SET AUF   = $TRANSLATE($$$KEY1(YKEY),$$$DBLQUOTE)		 QUIT:AUF=""
	SET POS   = $TRANSLATE($$$KEY2(YKEY),$$$DBLQUOTE)		 QUIT:POS=""
	SET BETR  = $TRANSLATE($$$KEY3(YKEY),$$$DBLQUOTE)		 QUIT:BETR=""
	SET LP    = $TRANSLATE($$$KEY4(YKEY),$$$DBLQUOTE)		 QUIT:LP=""
	SET WEDAT = $TRANSLATE($$$KEY5(YKEY),$$$DBLQUOTE)		 QUIT:WEDAT=""
	
	SET ^WWW126(YM,"INAUF",YBED,1,1)=AUF   ;BEARBEITET
	IF $DATA(^INWEAUFVOR(YM,AUF,POS,BETR,LP,WEDAT,1)) DO ^WWWSKILL("INWEAUFVOR",AUF_","_POS_","_BETR_","_LP_","_WEDAT)  ;FIS;LÖSCHEN VORERFASSUNG;17.05.04;25661
 
	do Receive(YKEY,YFELD)	//SR14421
	
	quit
	
Receive(YKEY,YFELD)   ; DEPRECATED with removal of INWEAUF - Do not use
	;-------------------------------------------------------------------------------
	; Process INWEAUF
	;
	; Params:	YKEY, YFELD - of INWEAUF record
	;
	; ByRefs:		blnREVERSE
	; 
	; Called By :	INRECPost
	; 				SAVE^INWEAUFVORS (via ^INWEAUF)
	; 
	; Returns:
	;
	; History:
	; 14-Sep-2009	PPP		SR16888:Added Location to the INARTAVG parameter
	; 18-Mar-2009	GRF		specific $$$KEY macros
	; 19-Jul-2007	GRF		SR15575: errors creating INWEBUCH
	; 13-Jul-2007	GRF		SR15558: unnecessary code commented; boolean macro
	; 29-Jun-2006	GRF		SR14471: Var UNITCOSTWITHOUTSERVICECOSTS => UnitCostWithoutSC;
	; 						use UnitCostWithoutSC rather than calling $piece twice
	; 10-Apr-2006	JW		SR14421: Encapsulated code from ^INWEAUF. Cleaned up reversals.
	;-------------------------------------------------------------------------------
	new ART,AUF,BETR,blnDone,dteOrigRec,EKNEU,idGoodsFlags,INFOTEXT,LEOK,LOESCH,lstHist
	new LP,POS,SATZ,strSource,UnitCostWithoutSC,UnitCostWithSC,WEDAT,WEOK
	
	SET AUF   = $TRANSLATE($$$KEY1(YKEY),$$$DBLQUOTE)		 QUIT:AUF=""
	SET POS   = $TRANSLATE($$$KEY2(YKEY),$$$DBLQUOTE)		 QUIT:POS=""
	SET BETR  = $TRANSLATE($$$KEY3(YKEY),$$$DBLQUOTE)		 QUIT:BETR=""
	SET LP    = $TRANSLATE($$$KEY4(YKEY),$$$DBLQUOTE)		 QUIT:LP=""
	SET WEDAT = $TRANSLATE($$$KEY5(YKEY),$$$DBLQUOTE)		 QUIT:WEDAT=""
	
	; FIXME : <GRF> ? Why not use YFELD as object?  Is it possible INWEAUF can be
	;                 updated between being set and used, or can YFELD be something
	;                 different?  Are we better off just resetting YFELD?
	; FIXME : <GRF> This is retested in LOESCH (delete if no idItem)
	IF $$$INWEAUFQuantityInStockSet($GET(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1)))'="" QUIT   ; D23  ;SCHON ÜBERTRAGEN ;already transferred 
	
	set blnREVERSE = $get(blnREVERSE)		// SR13222
	
	/*	TODO JW - reverted for build
	//SR14615 - Source Details
	set strSource = YFORM_"|"_$select($extract(YFORM,1,5)="INREC":$$$INWEAUFReceivingNumber(YFELD),1:YKEY)
	// Use YFORM for logging for now - change to INWEAUF later - TODO JW
	*/
	
	set strSource=""
	
	;+++++++++++++++++++++++++++++++++++++++
	;	NEBENWE		objINWE			Stock On Hand
	;	SATZ		objINAUFP		OrderLine
	;	YSATZ		objINAUFP		OrderLine
	;	YFELD		objINWEAUF      (from parameters)
	;	YFELD		objINAUFP       (isolated redefinition)
	;	XPOS1		objINRESERVIERT
	;	WER1		objINWER
	;+++++++++++++++++++++++++++++++++++++++
	
	DO
	. SET SATZ = $GET(^INAUFP(YM,AUF,POS,1))
 
	. SET ART  = $$$INAUFPItemNumber(SATZ)
	. IF ART="" DO LOESCH QUIT   ;KEINE ARTIKELNUMMER       ;no item
	. ;
	. ;  D217		$$$INVORGDRPOnlyForNetChange()
	. IF $PIECE($GET(^INVORG(YM,YM,1)),Y,217)=$$$YES SET ^INDRPNETCHANGE(YM,ART,1)=""  ;FIS;29.04.05;SR12200
	. ;
	. ;IF $PIECE(YFELD,Y,10)=0 SET $PIECE(^INAUFP(YM,AUF,POS,1),Y,90)=1,$PIECE(SATZ,Y,90)=1  ;AUSLIEFERUNGSFÄHIG
	. set WEOK = $$$OK
	. set idGoodsFlags = $$$INWEAUFIncomingGoodsFlags(YFELD)
	. IF idGoodsFlags'="" DO
	. . SET WEOK = $$$NO
	. . ;                               Receiving O.K.                               _BLANK = "Handover Can Take Place" 
	. . IF ($PIECE($GET(^INWEMERKER(YM,idGoodsFlags,1)),Y,2)=$$$YES) || (+$PIECE($GET(^INWEMERKER(YM,idGoodsFlags,1)),Y,3)=0) DO
	. . . SET WEOK = $$$OK  ;AUSLIEFERUNGSFÄHIG
	. ;
	. IF WEOK=$$$OK DO
	. . SET $$$INAUFPReadyForDelivery(^INAUFP(YM,AUF,POS,1)) = $$$YES
	. . SET $$$INAUFPReadyForDelivery(SATZ)                  = $$$YES
	. ;
	. ;-----------------------------------------------------------------------------
	. ;MENGE IST DIE MENGE, DIE EINGETRAGEN WIRD
	. ; replace vvv 13-Jul-2007 ; SR15558
	. ;SET MENGE     = ""
	. ;SET MENGEREST = ""
	. ;SET MENGEGES  = ""
	. ;SET MENGEIST  = ""
	. ;
	. ;SET MENGE    = $$$INWEAUFIncomingGoodsQuantity(YFELD),MENGESOLL=MENGE,MENGEREST=MENGE,MENGEGES=MENGE
	. ;SET LOESCH   = 0
	. ;SET MENGEIST = $$$INAUFPIncomingGoodsQuantity(SATZ)  ;MENGE SCHON ÜBERTRAGEN ;quantity yet transport 
	. ;if +MENGEIST=0 set (MENGESOLL,MENGE,MENGEREST,MENGEGES) = $$$INWEAUFIncomingGoodsQuantity(YFELD)
	. ;
	. ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
	. ;;IF +MENGEIST'=0 DO  ;19.04.04 WIEDER AKTIVIERT (WAR AUSKOMMENTIERT), DA SONST DOPPELTER WE MÖGLICH. WARUM AUSKOMMENTIERT WAR, IST UNBEKANNT.
	. ;. SET MENGESOLL=$PIECE(YFELD,Y,4)-$PIECE(YFELD,Y,23)  ;MENGE ZU ÜBERTRAGEN-DER SCHON EINGETRAGENEN MENGE ;quantity within yet quantity 
	. ;. IF (MENGESOLL+($PIECE(YFELD,Y,4)*10))'>0                         DO LOESCH QUIT   ;KEIN BESTANDEINGETRAGEN ;no 
	. ;. IF (MENGEIST+MENGESOLL)>($PIECE(SATZ,Y,5)+($PIECE(SATZ,Y,4)*10)) DO LOESCH QUIT   ;SCHON GENUG ÜBERTRAGEN ;yet sufficiently transport 
	. ;. SET MENGEGES=$PIECE(SATZ,Y,5)           ;MENGE GESAMT ;quantity total 
	. ;. SET MENGE=MENGESOLL                     ;WAS WILL DER USER ÜBERTRAGEN ;whatsoever the transport 
	. ;. SET MENGEREST=MENGEGES-MENGEIST         ;WAS KANN ER NOCH ÜBERTRAGEN ;whatsoever him yet transport 
	. ;. IF MENGE>MENGEREST SET MENGE=MENGEREST  ;WAS DARF ER NOCH ÜBERTRAGEN ;whatsoever him yet transport 
	. ;;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  DISABLED BLOCK END
	. ;QUIT:LOESCH=1
	. ;
	. ;    with vvv
	. ;
	. set MENGE     = $$$INWEAUFIncomingGoodsQuantity(YFELD)  ; quantity received this delivery
	. set MENGEIST  = $$$INAUFPIncomingGoodsQuantity(SATZ)    ; quantity previously received   ;MENGE SCHON ÜBERTRAGEN
	. set MENGEREST = MENGE                      ; probably not required (MENGESOLL only used in commented lines) <GRF>
	. set MENGEGES  = MENGE                      ; could probably just substitute with MENGE below?               <GRF>
	. ;         ^^^ 13-Jul-2007
	. IF 'blnREVERSE IF MENGE'>0 DO LOESCH QUIT   ;Remove entries with negative quantity unless a reversal  // SR13222
	. ;
	. ;-----------------------------------------------------------------------------
	. ;
	. ; *** REFERENCE POINT 1 *** <GRF>
	. ; If the total quantity received meets the ordered quantity,
	. ; set the order delivery [?] quantity to match this delivery quantity
	. IF (MENGE+MENGEIST)'<$$$INAUFPQuantity(SATZ) SET $$$INWEAUFCompleteWEQuantity(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=MENGEGES  ;MENGE GESAMT ;quantity total 
	. ;IF MENGE'>0 DO  QUIT                                             ;KEINE MENGE MEHR OFFEN ZUM ÜBERTRAGEN
	. ;. SET $PIECE(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1),Y,4)=MENGEGES  ;MENGE GESAMT
	. ;
	. SET $$$INWEAUFIncomingGoodsQuantity(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=MENGE+$$$INWEAUFQuantityInStockSet(YFELD)  ;MENGE GESAMT ;quantity total
	. ;  ^^^ This does nothing!!    (D4 = D4 + D23 where D23 starts off as null) <JW/GRF>  D23 is updated below
	. ;
	. ;+++++++++++++++++++++++++++++++++++++
	. ; Update Total Cost for Stock Location
	. ; as Qty * Unit Price
	. ; (where Unit Price is FCPrice * Exchange Rate if appropriate)
	. ;+++++++++++++++++++++++++++++++++++++
	. new SuppliersFCCode ; SR13591
	. set SuppliersFCCode = $$GetFCCode^INLIEF($$$INWEAUFSupplier(YFELD))
	. if SuppliersFCCode '= "" do
	. . set UnitCostWithoutSC = $$$INWEAUFPriceForeignCurrency(YFELD)*$$$INWEAUFExchangeRate(YFELD)
	. . set $$$INWEAUFTotalCostOnLocation(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=$$Round^COMUtilNum($$$INWEAUFIncomingGoodsQuantity(YFELD)*UnitCostWithoutSC) ; SR13517
	. if SuppliersFCCode = "" do
	. . set UnitCostWithoutSC = $$$INWEAUFUnitPrice(YFELD)
	. . set $$$INWEAUFTotalCostOnLocation(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=$$$INWEAUFIncomingGoodsQuantity(YFELD)*UnitCostWithoutSC  ;GESAMTPREIS BEI EINLAGERUNG;FIS;23719;07.07.03
	. ;
	. ;+++++++++++++++++++++++++++++++++++++
	. ; UPDATE UNIT COST WITH SERVICE COSTS
	. ; FOR INWE AND FINANCE POSTING ;FIS;13-APR-05
	. ; 
	. ; Finance Transaction Reference is made
	. ; up of COSTTYPE / UnitValue pairs
	. ;  %3B CT %7C UV %3B CT %7C UV %3B ...
	. ;+++++++++++++++++++++++++++++++++++++
	. set UnitCostWithSC = UnitCostWithoutSC
	. IF $$$INWEAUFFinanceTxRef(YFELD)'="" IF $FIND(YFELD,"%3B") DO        ; FIXME : shouldn't we be checking if $$$INWEAUFFinanceTxRef(YFELD) contains %3B? who cares if they are elsewhere in YFELD?  <GRF>
	. . NEW YI
	. . FOR YI=1:1  QUIT:$PIECE($$$INWEAUFFinanceTxRef(YFELD),"%3B",YI,YI+99)=""  DO     ; D115  ; FIXME : Needs $tr(...,"%3B","") before checking for null <GRF>
	. . . SET YI(2)=$PIECE($PIECE($$$INWEAUFFinanceTxRef(YFELD),"%3B",YI),"%7C",2)
	. . . SET $$$INWEAUFUnitPrice(YFELD) = $$$INWEAUFUnitPrice(YFELD) + YI(2)         ;SERVICE COSTS => D8
	. . . set UnitCostWithSC             = UnitCostWithSC             + YI(2)         ; 29-Jun-2006
	. . ;SET $PIECE(YFELD,Y,8)=$JUSTIFY($PIECE(YFELD,Y,8),0,2)  ;SR12749
	. ;
	. SET $$$INAUFPIncomingGoodsQuantity(^INAUFP(YM,AUF,POS,1))=MENGE+MENGEIST   ;GESAMTMENGE IN POSITION ;within 
	. ;
	. ;-----------------------------------------------------------------------------
	. ; Update order line if the Delivery should be sent directly to the Customer for a Supplier Order
	. ; (Specified at order line or at order level)
	. IF ($$$INAUFPCustomerIsDeliveryAddress(^INAUFP(YM,AUF,POS,1))=$$$YES) || ($$$INAUFCustomerAddressinOrder($GET(^INAUF(YM,AUF,1)))=$$$YES) DO  ;FIS;08.08.03;DIREKTLIEFERUNG VOM LIEFERANT ;supplier ; 13-Jul-2007
	. . NEW YSATZ,YFORM,YVOR,YOK
	. . SET YSATZ = $GET(^INAUFP(YM,AUF,POS,1))
	. . SET $PIECE(YSATZ,Y,91) = $PIECE(YFELD,Y,1)                            ;WE NUMMER ;In numeral 
	. . IF $PIECE(YSATZ,Y,91)="" SET $PIECE(YSATZ,Y,91) = $PIECE(YFELD,Y,14)  ;LIEFERSCHEIN NR. ;packing slip 
	. . SET $PIECE(YSATZ,Y,92) = +$HOROLOG
	. . SET $PIECE(YSATZ,Y,93) = $PIECE($HOROLOG,",",2)
	. . SET $PIECE(YSATZ,Y,94) = YBED
	. . SET YOK=$$^WWWSPEI("INAUFP",AUF_","_POS,YSATZ,1)
	. ;
	. ;-----------------------------------------------------------------------------
	. ;VOLLSTÄNDIG? - Completely?
	. ;
	. ; *** REFERENCE POINT 2 *** <GRF>
	. ; This seems to be a copy of REFERENCE POINT 1 without considering over-receipt
	. IF $$$INAUFPQuantity(SATZ)=(MENGE+MENGEIST) SET $$$INWEAUFCompleteWEQuantity(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=MENGEGES  ;MENGE GESAMTUND VOLLSTÄNDIG ;quantity entire and complete
	. SET $$$INWEAUFQuantityInStockSet(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=MENGE+$$$INWEAUFQuantityInStockSet(YFELD)  ;MENGE ÜBERTRAGEN ;quantity transport 
	. ;
	. ;IF $PIECE(SATZ,Y,5)=(MENGE+MENGEIST) IF $PIECE($GET(^INAUF(YM,AUF,1)),Y,2)=2 IF WEOK=1 DO  ;WARENEINGANG OK = AUFTRAG ABGESCHLOSSEN KANN REORGANISIERT WERDEN
	. ;. NEW YFORM,YVOR
	. ;. SET $PIECE(SATZ,Y,60)=$$$YES  ;AUFTRAG OK
	. ;. SET YFORM="INAUFP"
	. ;. SET YOK=$$^WWWSPEI("INAUFP",AUF_","_POS,SATZ,1)
	. ;
	. ;-----------------------------------------------------------------------------
	. ;BUCHEN WARENEINGANG ;receiving 		
	. DO
	. . NEW TEXT
	. . if 'blnREVERSE set TEXT="+"	// SR13222
	. . if blnREVERSE  set TEXT=""
	. . SET TEXT=TEXT_MENGE_" "_$$^WWWTEXT(32512)_" "_$$^WWWTEXT(32279)_" "_AUF_"-"_POS  ;AUF BESTAND AUS WE ;upon out of In 
	. . IF ($PIECE(YFELD,Y,2)'="") || ($PIECE(YFELD,Y,19)'="") DO
	. . . SET TEXT=TEXT_" ("_$PIECE(YFELD,Y,2)      ;CHARGENNUMMER
	. . . SET TEXT=TEXT_"/"_$PIECE(YFELD,Y,19)_")"  ;LOTNUMMER
	. . ;
	. . ;DO ^INARTHIST(ART,TEXT,BETR,MENGE,,,$PIECE(YFELD,Y,7),($PIECE(YFELD,Y,4)*UnitCostWithoutSC),BETR_"|"_LP_"|"_WEDAT_"|"_MENGE,1,LP,AUF,POS,BETR,,"REC",,$piece(YFELD,Y,115),,$$$INWEAUFVORDeliveryNoteNumber(YFELD))  ;SHOBBY SR12333 ;SR12745
	. . ; SR13800: Defer ^INARTHIST
	. .;set lstHist = $listbuild(ART,TEXT,BETR,MENGE,,,$PIECE(YFELD,Y,7),($PIECE(YFELD,Y,4)*UnitCostWithoutSC),BETR_"|"_LP_"|"_WEDAT_"|"_MENGE,1,LP,AUF,POS,BETR,,"REC",,$piece(YFELD,Y,115),,$$$INWEAUFVORDeliveryNoteNumber(YFELD),strSource)	//SR14615
	. . set lstHist = $listbuild(ART,TEXT,BETR,MENGE,,,$PIECE(YFELD,Y,7),($PIECE(YFELD,Y,4)*UnitCostWithoutSC)_"|"_($PIECE(YFELD,Y,4)*UnitCostWithSC),BETR_"|"_LP_"|"_WEDAT_"|"_MENGE,1,LP,AUF,POS,BETR,,"REC",,$piece(YFELD,Y,115),,$$$INWEAUFVORDeliveryNoteNumber(YFELD),strSource,"INWEAUF",YKEY)	//SR14615 ;BR014754
	. . ;						  1		2	3	4	56			7				8																		9							 10 11	12	13	14 15  16 17		18		   19				20							21
	. ;
	. ;-----------------------------------------------------------------------------
	. ;RECHNEN DURCHSCHNITTLICHER EK ;Calculate Average Cost 
	. //SET EKNEU = $$^INARTAVG(ART,MENGE,$PIECE(YFELD,Y,8),AUF_","_POS_","_BETR_","_LP_","_WEDAT)  ; SR14203 - move NEW up higher so value is retained
	. SET EKNEU = $$^INARTAVG(ART,MENGE,$PIECE(YFELD,Y,8),AUF_","_POS_","_BETR_","_LP_","_WEDAT,$$$NO,$$$YES,BET)  //SR16888
	. 
	. ;-----------------------------------------------------------------------------
	. DO  ;WE BUCH  FÜR alle Positionen des Auftrags einlagern  ZEIT VERSCHIEBEN ,  FAN 15.03.02
	. . NEW YFORM,YVOR,YOK,ZEIT,ZEIT1,YQ,SATZ0,ART0,idSupplier
	. . SET ZEIT=$PIECE($HOROLOG,",",2)
	. . SET YQ=0
	. . FOR ZEIT1=ZEIT:1 QUIT:YQ=1  DO
	. . . set idSupplier = $piece(YFELD,Y,7)                                ; SR15575  idSupplier may not be numeric
	. . . ;QUIT:$DATA(^INWEBUCH(YM,+$HOROLOG,ZEIT1,+$PIECE(YFELD,Y,7)))     ; SR15575
	. . . QUIT:$DATA(^INWEBUCH(YM,+$HOROLOG,ZEIT1,idSupplier))
	. . . SET ART0  = $PIECE($GET(^INAUFP(YM,AUF,POS,1)),Y,4)
	. . . ;
	. . . ;    FIXME : <GRF> $PIECE(YFELD,Y,10) is ^INWEMERKER not ^INPARA(YM,"WE-MERKER")
	. . . ;
	. . . ;SET SATZ0 = $PIECE($GET(^INLIEF(YM,+$PIECE(YFELD,Y,7),1)),Y,48)_Y_$PIECE(YFELD,Y,14)_Y_WEDAT_Y_AUF_Y_POS_Y_ART0_Y_MENGE_Y_$PIECE(YFELD,Y,10)_Y_$PIECE(YFELD,Y,2)_Y_$PIECE(YFELD,Y,1)_Y_BETR ; SR15575
	. . . SET SATZ0 = $PIECE($GET(^INLIEF(YM,idSupplier,1)),Y,48)_Y_$PIECE(YFELD,Y,14)_Y_WEDAT_Y_AUF_Y_POS_Y_ART0_Y_MENGE_Y_$PIECE(YFELD,Y,10)_Y_$PIECE(YFELD,Y,2)_Y_$PIECE(YFELD,Y,1)_Y_BETR
	. . .;IF ART0'="" SET SATZ0=SATZ0_Y_$PIECE($GET(^INART(YM,ART0,1)),Y,30)
	. . . if ART0'="" set $piece(SATZ0,Y,12) = $$$INARTItemGroup($GET(^INART(YM,ART0,1)))       ; D30
	. . . ;SET YOK=$$^WWWSPEI("INWEBUCH",+$HOROLOG_","_ZEIT1_","_+$PIECE(YFELD,Y,7),SATZ0,1) ; SR15575
	. . . SET YOK=$$^WWWSPEI("INWEBUCH",+$HOROLOG_","_ZEIT1_","_idSupplier,SATZ0,1)
	. . . SET YQ=1
	. ;
	. ;-----------------------------------------------------------------------------
	. ;ENTSTEHUNGSPRODUKTE BEI WARENEINGANG NACH VEREDELUNG
	. ;DEVELOPING PRODUCTS WITH INCOMING GOODS AFTER REFINEMENT
	. IF $DATA(^INARTNEBEN(YM,ART)) DO
	. . NEW NEBEN,NEBENMENGE,PRODUKTMENGE,NEBENWE,WEMENGE,HAL,YII
	. . SET NEBEN=""
	. . FOR  SET NEBEN=$ORDER(^INARTNEBEN(YM,ART,NEBEN)) QUIT:NEBEN=""  DO
	. . . QUIT:+$PIECE($GET(^INARTNEBEN(YM,ART,NEBEN,1)),Y,3)'=1  ;NUR WENN DURCH WARENEINGANG ;only when trans- receiving 
	. . . SET NEBENMENGE  =+$PIECE($GET(^INARTNEBEN(YM,ART,NEBEN,1)),Y,1)       ; Created Quantity
	. . . SET PRODUKTMENGE=+$PIECE($GET(^INARTNEBEN(YM,ART,NEBEN,1)),Y,2)       ; Per Production Output
	. . . QUIT:NEBENMENGE=0
	. . . IF PRODUKTMENGE=0 SET PRODUKTMENGE=1
	. . . SET WEMENGE=((MENGE/PRODUKTMENGE)*NEBENMENGE)
	. . . SET HAL=""
	. . . IF $DATA(^INARTLP(YM,NEBEN)) SET HAL=$ORDER(^INARTLP(YM,NEBEN,BETR,""))  ;FESTER LAGERPLATZ;FIS;24562;07.11.03
	. . . IF HAL="" SET HAL=$GET(LP)
	. . . IF HAL="" SET HAL=$PIECE($GET(^INVORGB(YM,YM,BETR,1)),Y,1)
	. . . IF HAL="" SET HAL=$ORDER(^INLP(YM,BETR,""))
	. . . IF HAL="" SET HAL=0
	. . . SET NEBENWE=$GET(^INWE(YM,NEBEN,BETR,HAL,+$HOROLOG,1))
	. . . DO  ;NEUANLAGE WE ;In 
	. . . . IF NEBENWE="" FOR YII=1,7,11,12,13  SET $PIECE(NEBENWE,Y,YII)=$PIECE(YFELD,Y,YII)  ;DATEN ÜBERNEHMEN ;assume 
	. . . . SET $PIECE(NEBENWE,Y,9)=$$^WWWTEXT(32560)_" "_$$^WWWTEXT(32515)_" "_ART  ;NEBENPRODUKT AUS ;by-product out of 
	. . . . SET $PIECE(NEBENWE,Y,28)=$GET(AUF)  ;URSPRUNGSAUFTRAG
	. . . . SET $PIECE(NEBENWE,Y,29)=$GET(POS)  ;URSPRUNGSPOSITION
	. . . ;
	. . . IF +$PIECE(NEBENWE,Y,8)=0 SET $PIECE(NEBENWE,Y,8)=$$^INARTKOST(NEBEN)  ;HERSTELLKOSTEN;FIS;24562;07.11.03
	. . . SET $PIECE(NEBENWE,Y,4)=$PIECE(NEBENWE,Y,4)+WEMENGE
	. . . ;IF $PIECE(NEBENWE,Y,4)<0 SET $PIECE(NEBENWE,Y,4)=0  ;MINUSBESTÄNDE WERDEN DURCH INTAGES KORRIGIERT
	. . . SET ^INWE(YM,NEBEN,BETR,HAL,+$HOROLOG,1)=NEBENWE
	. . . ; do $$$Save("INWE",NEBEN,BETR,HAL,+$HOROLOG,NEBENWE,$$$YES) // SR14546
	. . . SET WEMENGE=$$^WWWZAHL(WEMENGE,0,$LENGTH($PIECE(WEMENGE,".",2)))  ;ANZEIGEFORMAT
	. . . IF WEMENGE>0 SET WEMENGE="+"_WEMENGE
	. . . ;FIS;TRANSACTION TYPE;10.01.05;26560
	. . . set INFOTEXT = WEMENGE_" "_$$^WWWTEXT(32560)_" "_$$^WWWTEXT(32515)_" "_$$^WWWTEXT(32278)_"("_AUF_"-"_POS_") "_$$^WWWDATE(+$HOROLOG)
	. . . ;+ QUANTITY OF BY-PRODUCTS FROM PRODUCTION ORDER	;SR14615
	. . . DO ^INARTHIST(NEBEN,INFOTEXT,BETR,WEMENGE,,,,$PIECE(NEBENWE,Y,8),,,HAL,AUF,POS,BETR,,"REC",,,,,strSource)
	. ;
	. ;			 Customer Order
	. ;-----------------------------------------------------------------------------
	. IF +$$$INAUFOrderType($GET(^INAUF(YM,AUF,1)))=0 DO  QUIT:MENGE'>0  ;BEI KUNDENAUFTRAG SOLL WE BLEIBEN, KEIN FREIER BESTAND (AUSSER WENN MEHRMENGE)
	. . ;WENN MENGE > BESTELLMENGE FÜR DEN KUNDEN DANN MENGE = BESTELLMENGE UND REST AUF LAGER ;when quantity ordering quantity to quantity ordering quantity And residue upon stock location 
	. . IF MENGE>$$$INAUFPQuantity(SATZ) SET $$$INWEAUFIncomingGoodsQuantity(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=$$$INAUFPQuantity(SATZ)  ;4.2.2003; TYBD
	. . ;SET $PIECE(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1),Y,4)=$PIECE(SATZ,Y,5)  ;4.2.2003; TYBD;ALT
	. . SET MENGE=MENGE-$$$INAUFPQuantity(SATZ)
	. . IF MENGE>0 SET $$$INWEAUFAdditionalQuantity(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=MENGE
	. . ;HISTORY; MENGE: X VON bestand für AUFTRAG XXX (WE XXX)
	. . 
	. . // SR14903 - This is the line.
	. . SET TEXT="-"_$$$INAUFPQuantity(SATZ)_" "_$$^WWWTEXT(32511)_" "_$$^WWWTEXT(32047)_" "_AUF_"-"_POS  ;FIS;24328;02.10.03;HISTORY
	. . ;FIS;TRANSACTION TYPE;10.01.05;26560
	. . NEW KOST
	. . SET KOST=$PIECE(YFELD,Y,8)
	. . IF $PIECE($GET(^INVORG(YM,YM,1)),Y,15)=9 SET KOST=$$^INARTKOST(ART,,9)  ;FIS;16.08.05;SR13253;USE ALWAYS AVERAGE COST
	. . DO ^INARTHIST(ART,TEXT,BETR,,$$$INAUFPQuantity(SATZ),,$PIECE(YFELD,Y,7),($$$INWEAUFIncomingGoodsQuantity(YFELD)*KOST),BETR_"|"_LP_"|"_WEDAT_"|"_$$$INWEAUFIncomingGoodsQuantity(YFELD),1,LP,AUF,POS,BETR,,"ISS",,,,,strSource)	//SR14615
	. . ;             ARTIKEL,UMLAGERUNGSTEXT,+MENGE,,,LIEFERANT,GESAMTPREIS,WE-DETAILS,INVENTURSPERRE,,AUFTRAG,POSITION
	. ;
	. ;-----------------------------------------------------------------------------
	. ;
	. QUIT:$GET(NOBESTAND)=1  ;VARAIBLE WIRD IN INARTMINUS GESETZT, 
	. QUIT:(MENGE<0)&&'blnREVERSE				// SR13222
	. ;
	. ;-----------------------------------------------------------------------------
	. ; FREIGEBEN RESERVIERUNGEN
	. ; RELEASE RESERVATIONS
	. IF $DATA(^INRESERVIERT(YM,AUF,POS)) DO
	. . NEW XAUF,XPOS,XPOS1,XMENGE
	. . SET XAUF=""
	. . FOR  SET XAUF=$ORDER(^INRESERVIERT(YM,AUF,POS,XAUF)) QUIT:XAUF=""  DO  QUIT:+MENGE=0
	. . . SET XPOS=""
	. . . FOR  SET XPOS=$ORDER(^INRESERVIERT(YM,AUF,POS,XAUF,XPOS)) QUIT:XPOS=""  DO  QUIT:+MENGE=0
	. . . . SET XPOS1=$GET(^INRESERVIERT(YM,AUF,POS,XAUF,XPOS,1))
	. . . . QUIT:($PIECE(XPOS1,Y,1)-$PIECE(XPOS1,Y,2))=0  ;KEINE MENGE MEHR ;no quantity more 
	. . . . ;
	. . . . IF XAUF=" " DO  QUIT  ;RESERVIERUNG OHNE KUNDENAUFTRAG;FIS;07.01.04;24891
	. . . . . NEW RENUM,WER1,YOK,YVOR,YFORM,TEXT,WE1
	. . . . . SET XMENGE=$PIECE(XPOS1,Y,1)-$PIECE(XPOS1,Y,2)  ;RESTMENGE DIE BENÖTIGT WIRD ;who 
	. . . . . IF MENGE<XMENGE SET XMENGE=MENGE  ;MAX. EINLAGERUNGSMENGE;FIS:05.12.03;24633
	. . . . . SET RENUM=$PIECE(XPOS,Y,4)        ;RES.NUMMER
	. . . . . IF RENUM="" SET RENUM=XPOS
	. . . . . IF RENUM="" SET RENUM=$$^WWWNEXT("INRESERVIERT")
	. . . . . SET WER1=$GET(^INWER(YM,ART,BETR,LP,WEDAT,RENUM,1))
	. . . . . IF $PIECE(WER1,Y,8)'="" SET WER1="" DO ^WWWSKILL("INWER",ART_","_BETR_","_LP_","_WEDAT_","_RENUM)  ;ALTEN SATZ LÖSCHEN ;typesetting Delete 
	. . . . . SET $PIECE(WER1,Y,4)=$PIECE($GET(WER1),Y,4)+XMENGE  ;MENGE ;quantity 
	. . . . . SET $PIECE(WER1,Y,5)=(+$HOROLOG+7)                  ;GÜLTIG BIS ;valuable until 
	. . . . . SET $PIECE(WER1,Y,6)=RENUM                          ;GÜLTIG BIS ;valuable until 
	. . . . . SET YOK  = $$^WWWSPEI("INWER",ART_","_BETR_","_LP_","_WEDAT_","_RENUM,WER1,1)    ;SPEICHERN ;Save 
	. . . . . SET TEXT = $$^WWWTEXT(32480)_" "_$$^WWWTEXT(32807)_" "_$$^WWWTEXT(32347)_": "   ;RESERVIERT FÜR ;reserved to 
	. . . . . ;FIS;TRANSACTION TYPE;10.01.05;26560
	. . . . . DO ^INARTHIST(ART,TEXT_" / "_BETR_" / "_LP_" / "_$$^WWWDATE(WEDAT)_" / "_RENUM,BETR,,XMENGE,,,,,,LP,,,BETR,,,,,,,strSource)  ;Reserved Quantity 	//SR14615
	. . . . . SET $PIECE(^INRESERVIERT(YM,AUF,POS,XAUF,XPOS,1),Y,2)=XMENGE+$PIECE(XPOS1,Y,2)
	. . . . . SET MENGE=MENGE-XMENGE
	. . . . . IF MENGE<0 SET MENGE=0
	. . . . . IF +MENGE=0 IF '$DATA(^INWE(YM,ART,BETR,LP,WEDAT)) DO  ;ANLEGEN WE MIT MENGE 0 ;put onto In by means of quantity 
	. . . . . . SET WE1=YFELD
	. . . . . . SET $PIECE(WE1,Y,4)=0
	. . . . . . SET $PIECE(WE1,Y,28)=AUF  ;URSPRUNGSAUFTRAG
	. . . . . . SET $PIECE(WE1,Y,29)=POS  ;POSITION
	. . . . . . 
	. . . . . . SET ^INWE(YM,ART,BETR,LP,WEDAT,1)=WE1  ;NEUER LAGERPLATZ ;stock location 
	. . . . . . DO ^WWWSSORT("INWE",ART_","_BETR_","_LP_","_WEDAT)  ;AUFBEREITEN SORTKEY
	. . . . . . ; do $$$Save("INWE",ART_","_BETR_","_LP_","_WEDAT,WE1,$$$YES) // SR14546
	. . . . ;
	. . . . QUIT:$PIECE($GET(^INAUFP(YM,XAUF,XPOS,1)),Y,7)'=5  ;NICHT MEHR LAGERBESTELLUNG ; TYBD;17,09,2003
	. . . . QUIT:$PIECE($GET(^INAUFP(YM,XAUF,XPOS,1)),Y,9)=1   ;STORNO; TYBD;17,09,2003
	. . . . QUIT:'$DATA(^INAUFP(YM,XAUF,XPOS,1))               ;POSITION NICHT MEHR VORHANDEN;TYBD;17,09,2003
	. . . . ;
	. . . . ;-------------------------------
	. . . . ;
	. . . . SET XMENGE=$PIECE(XPOS1,Y,1)-$PIECE(XPOS1,Y,2)     ;RESTMENGE DIE BENÖTIGT WIRD ;who 
	. . . . IF MENGE<XMENGE SET XMENGE=MENGE                   ;MAX. EINLAGERUNGSMENGE;FIS:05.12.03;24633
	. . . . NEW YFELD1
	. . . . SET YFELD1=YFELD
	. . . . SET $PIECE(YFELD1,Y,4)=XMENGE
	. . . . NEW YFORM,YVOR,YOK
	. . . . SET YOK=$$^WWWSPEI("INWEAUF",XAUF_","_XPOS_","_BETR_","_LP_","_WEDAT,YFELD1,1)  ;;FIS;03.02.04;25041
	. . . . ;SET ^INWEAUF(YM,XAUF,XPOS,BETR,LP,WEDAT,1)=YFELD1
	. . . . NEW TEXT
	. . . . ;HISTORY; MENGE: X VON bestand für AUFTRAG XXX (WE XXX)
	. . . . SET TEXT="-"_$PIECE(YFELD1,Y,4)_" "_$$^WWWTEXT(32511)_" "_$$^WWWTEXT(32047)_" "_XAUF_"-"_XPOS_" ("_$$^WWWTEXT(32279)_" "_AUF_"-"_POS_")"  ;FIS;24210;27.08.03;HISTORY
	. . . . ;FIS;TRANSACTION TYPE;10.01.05;26560
	. . . . DO ^INARTHIST(ART,TEXT,BETR,,$PIECE(YFELD1,Y,4),,$PIECE(YFELD1,Y,7),($PIECE(YFELD1,Y,4)*$PIECE(YFELD1,Y,8)),BETR_"|"_LP_"|"_WEDAT_"|"_$PIECE(YFELD1,Y,4),1,LP,XAUF,XPOS,BETR,,"ISS",,,,,strSource)	//SR14615
	. . . . ;             ARTIKEL,UMLAGERUNGSTEXT,+MENGE,,,LIEFERANT,GESAMTPREIS,WE-DETAILS,INVENTURSPERRE,,AUFTRAG,POSITION
	. . . . ;
	. . . . DO
	. . . . . IF (MENGE>XMENGE) || (MENGE=XMENGE) DO  QUIT  ;MENGE REICHT AUS ;quantity out of 
	. . . . . . SET MENGE=MENGE-XMENGE
	. . . . . . IF MENGE<0 SET MENGE=0
	. . . . . . SET $PIECE(^INRESERVIERT(YM,AUF,POS,XAUF,XPOS,1),Y,2)=XMENGE+$PIECE(XPOS1,Y,2)
	. . . . . . IF (XMENGE+$PIECE(XPOS1,Y,2))=$PIECE(XPOS1,Y,1) DO
	. . . . . . . SET $PIECE(^INAUFP(YM,XAUF,XPOS,1),Y,90)=1  ;AUSLIEFERUNGSFÄHIG
	. . . . . ;
	. . . . . IF MENGE<XMENGE DO  QUIT  ;MENGE REICHT NICHT AUS ;quantity Not out of 
	. . . . . . SET XMENGE=MENGE
	. . . . . . SET MENGE=0
	. . . . . . SET $PIECE(^INRESERVIERT(YM,AUF,POS,XAUF,XPOS,1),Y,2)=XMENGE+$PIECE(XPOS1,Y,2)
	. . . . ;
	. . . . ;  D154		$$$INVORGReadjustTrafficDateOnRece()
	. . . . IF $PIECE($GET(^INVORG(YM,YM,1)),Y,154)=1 DO  ;FIS;2.9.03;24218;VERSANDTERMIN AKTUALISIEREN
	. . . . . NEW YVOR,YOK,YFORM,YFELD
	. . . . . SET YFELD=$GET(^INAUFP(YM,XAUF,XPOS,1))
	. . . . . IF +$PIECE(YFELD,Y,76)=0         QUIT   ;KEIN DATUM ;no Date 
	. . . . . IF $PIECE(YFELD,Y,76)'<$HOROLOG  QUIT   ;NICHT ÜBERSCHRITTEN ;Not 
	. . . . . SET $PIECE(YFELD,Y,76)=+$HOROLOG
	. . . . . SET YOK=$$^WWWSPEI("INAUFP",XAUF_","_XPOS,YFELD,1)
	. . . . . SET ^INTOUR(YM,+$HOROLOG,1)=""
	. ;
	. ;-----------------------------------------------------------------------------
	. QUIT:+MENGE=0
	. QUIT:(MENGE<0)&&'blnREVERSE		// SR13222.
	. ;
	. ; FIXME - JW: If the appropriate INWE is defined, then just the qty is updated.
	. ; 			This is fine if the order and line are the same (2nd receipt),
	. ;				but if they are different, it is no good. Costs can't be updated etc.
	. ;
	. SET $$$INWEAUFIncomingGoodsQuantity(YFELD)=MENGE  ;RESTMENGE AUS LAGERBESTELLUNGS RESERVIERUNG ;out of 
	. SET $$$INWEAUFSourceOrder(YFELD)=AUF  ;SPEICHERN WARENHERKUNFT/URSPRUNG ;Save 
	. SET $$$INWEAUFSourceLineItem(YFELD)=POS
	. ;
	. QUIT:LP=$$$INVORGDeleteStockLocation($GET(^INVORG(YM,YM,1)))
	. QUIT:$PIECE($GET(^INART(YM,ART,1)),Y,29)=1	;KEINE BESTANDSFÜHRUNG  TYBD 16.05.2002 ;no 
	. QUIT:$PIECE($GET(^INART(YM,ART,1)),Y,26)=2	;LEISTUNG  TYBD 16.05.2002 ;service item 
	. ;
	. IF $DATA(^INWE(YM,ART,BETR,LP,WEDAT,1)) DO  QUIT   ;LAGERPLATZ VORHANDEN ;WEM;22698;22.10.2003;ERSETZEN HARDCODED LÖSCHLAGERPLATZ
	. . SET MENGEALT=$$$INWEQuantity(^INWE(YM,ART,BETR,LP,WEDAT,1))
	. . SET $$$INWEQuantity(^INWE(YM,ART,BETR,LP,WEDAT,1))=MENGEALT+MENGE  ;NEUE MENGE ;quantity 
	. ;
	. ;if blnREVERSE if $DATA(^INWE(YM,ART,BETR,LP,(WEDAT-1),1)) DO  QUIT 	// SR13222: Reversal	
	. ;. SET MENGEALT=$$$INWEQuantity(^INWE(YM,ART,BETR,LP,(WEDAT-1),1))
	. ;. SET $$$INWEQuantity(^INWE(YM,ART,BETR,LP,(WEDAT-1),1))=MENGEALT+MENGE  ;NEUE MENGE ;quantity 
	. ;
	. set blnDone = $$$NO		// SR14421: Reversal - get prev date from cache temp
	. if blnREVERSE do
	. . set dteOrigRec = $get(^CacheTempRECReverse(YUSER,AUF,POS,BETR,LP,WEDAT))
	. . if dteOrigRec'="" if $data(^INWE(YM,ART,BETR,LP,dteOrigRec,1)) do
	. . . SET MENGEALT=$$$INWEQuantity(^INWE(YM,ART,BETR,LP,dteOrigRec,1))
	. . . SET $$$INWEQuantity(^INWE(YM,ART,BETR,LP,dteOrigRec,1))=MENGEALT+MENGE
	. . . set blnDone = $$$YES
	. quit:blnDone
	. ;
	. DO   ;WEM;22698;22.10.2003;ERSETZEN HARDCODED LÖSCHLAGERPLATZ
	. . SET ^INWE(YM,ART,BETR,LP,WEDAT,1)=YFELD             ;NEUER LAGERPLATZ ;stock location 
	. . DO ^WWWSSORT("INWE",ART_","_BETR_","_LP_","_WEDAT)  ;AUFBEREITEN SORTKEY
	. . ; do $$$Save("INWE",ART_","_BETR_","_LP_","_WEDAT,YFELD) // SR14546
	
	if $get(lstHist)'="" {		//SR13800 - Fix
		do Deferred^INARTHIST(lstHist)
		set strStatus = $$AutoUpdate^INStockValAdjust("INWEAUF",AUF_","_POS,ART,EKNEU)       ; SR14203
	}
	
	;-------------------------------------------------------------------------------
	
	; Store all order lines when "All Line Items Received" set
	;ALLE POSITIONEN DES AUFTRAGES EINLAGERN
	IF $$$INWEAUFAllLineItemsReceived($GET(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1)))=1 DO 
	. SET $$$INWEAUFAllLineItemsReceived(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=0  ;WIEDER AUSSCHALTEN  ;re- eliminate 
	. SET $$$INWEAUFVersionRev(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=POS          ;SPEICHERN ERFASSTE POSITION BEI GESAMT-WE ;Save next to 
	. IF +$$$INWEAUFCreateCustomsMessage(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))=1 DO ^INWEGESAMT(0,AUF,POS,1) QUIT   ;BUCHEN WE ALLER POSITIONEN  ;WEM;24071;03.11.2003;UND ALS ZU VERZOLLEND DEKLARIEREN
	. DO ^INWEGESAMT(0,AUF,POS,0)                                                 ;BUCHWEN WE ALLER POSITIONEN ;In everyone 
	
	;-------------------------------------------------------------------------------
	SET ART=$$$INAUFPItemNumber($GET(^INAUFP(YM,AUF,POS,1)))        ; 06-Sep-2005 remove unnecessary DO level
	IF ART'="" DO ^INBESTANDCHECK(ART)  ;BESTANDSCHECK
	
	QUIT
	
LOESCH ;FALSCHE WERTE
	QUIT:$PIECE(YFELD,Y,23)'=""  ;SCHON DATEN ÜBERTRAGEN= NICHT LÖSCHEN ;yet Not Delete 
	IF $PIECE($GET(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1)),Y,23)'="" QUIT     ; $$$INWEAUFQuantityInStockSet
	
	SET LOESCH=1  ;LOESCHMERKER
	; <FIXME> Use WWWKILL Wrapper??
	KILL ^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1)
	QUIT
	
	
SNHIST(KILL) ;EINSPRUNG NACH SPEICHERN/LÖSCHEN AUS INWEAUFS ;within out of 
	;-------------------------------------------------------------------------------
	; Called By: Form INWEAUFS - Execute After Save/Delete   [DEPRECATED with removal of INWE/INWEAUF*]
	;-------------------------------------------------------------------------------
	NEW TEXT,ART,AUF,POS,BET,LAP,DAT,SN
	
	SET KILL = +$GET(KILL)
	SET AUF  = $$$KEY1($GET(YKEY))		QUIT:AUF=""   ;AUFTRAG ;order 
	SET POS  = $$$KEY2($GET(YKEY))		QUIT:POS=""   ;POSITION
	SET BET  = $$$KEY3($GET(YKEY))		QUIT:BET=""   ;BETRIEB
	SET LAP  = $$$KEY4($GET(YKEY))		QUIT:LAP=""   ;LAGERPLATZ ;storage 
	SET DAT  = $$$KEY5($GET(YKEY))		QUIT:DAT=""   ;DATUM ;Date 
	SET SN   = $$$KEY6($GET(YKEY))		QUIT:SN=""    ;SERIENNUMMER
	SET ART  = $PIECE($GET(^INAUFP(YM,AUF,POS,1)),Y,4)    ;ARTIKEL ;item 
	
	
	;ÜBERTRAGEN NACH INWES ;transport within 
	IF (KILL=0) && ($PIECE($GET(^INAUF(YM,AUF,1)),Y,2)=2) {   ; LIEFERANTENBESTELLUNG
		SET ^INWES(YM,ART,BET,LAP,DAT,SN,1)=$GET(^INWEAUFS(YM,AUF,POS,BET,LAP,DAT,SN,1))
	}
	IF KILL=1 IF $DATA(^INWES(YM,ART,BET,LAP,DAT,SN)) KILL ^INWES(YM,ART,BET,LAP,DAT,SN)  ;LÖSCHEN SN AUS LAGERBESTAND ;Delete out of 
	
	
	;HISTORY
	IF KILL=0 DO 
	. IF '$DATA(^INSNHIST(YM,SN)) SET TEXT=$$^WWWTEXT(32278)_" "_AUF_"-"_POS QUIT  ;WARENEINGANG ;receiving 
	. ;
	. SET TEXT = $$^WWWTEXT(158)_" "     ; "New/edit"    ;storage     ;ERFASSEN/ÄNDERN  LAGERPLATZ HINWEIS
	. IF $DATA(^WWW0031(0,"INWEAUFS",1,SPRACHE,1)) SET TEXT=TEXT_$PIECE(^WWW0031(0,"INWEAUFS",1,SPRACHE,1),Y,1) QUIT
	. SET TEXT=TEXT_$PIECE(^WWW003(0,"INWEAUFS",1,1),Y,1)
	
	IF KILL=1 SET TEXT=$$^WWWTEXT(32116)_" "_$$^WWWTEXT(42)  ;SN GELÖSCHT
	DO HIST^INSNHIST(SN,TEXT,ART)
	QUIT
	
	
SERIEART ;EINSPRUNG VON AUSSEN
	QUIT:$PIECE($GET(YKEY),",",1)=""   ;ARTIKEL ;item 
	QUIT:$PIECE($GET(YKEY),",",2)=""   ;BETRIEB
	QUIT:$PIECE($GET(YKEY),",",3)=""   ;LAGERPLATZ ;stock location 
	QUIT:$PIECE($GET(YKEY),",",4)=""   ;DATUM ;Date
	
	IF $PIECE($GET(^INART(YM,$PIECE($GET(YKEY),",",1),1)),Y,56)=1 DO  ;ARTIKEL MIT SERIENNUMMER ;item by means of 
	. IF $DATA(^INWES(YM,$PIECE($GET(YKEY),",",1),$PIECE($GET(YKEY),",",2),$PIECE($GET(YKEY),",",3),$PIECE($GET(YKEY),",",4))) QUIT  ;SCHON ERFASST ;yet 
	. WRITE YCR
	. WRITE "<A HREF="_""""_YAKTION_"EP=WWWFORM&YFORM=INWES"
	. SET YBACK=YBACK_"INWE,"
	. DO ^WWWCGI
	. WRITE """]]><![CDATA["
	. WRITE ">"
	. WRITE "<FONT COLOR="_YRED_">"
	. WRITE YCR
	. WRITE $$^WWWTEXT(32209)  ;ACHTUNG SERIENNUMMER ERFASSEN ; "Attention Enter Serial No !" 
	. WRITE " "
	. WRITE "</FONT>"
	. WRITE "</A>"
	
	QUIT
	
SNARTHIST(KILL) ;EINSPRUNG NACH SPEICHERN/LÖSCHEN AUS INWES ;within out of 
	;-------------------------------------------------------------------------------
	; Called By: Form INWES - Execute After Save/Delete   [DEPRECATED with removal of INWE/INWEAUF*]
	;-------------------------------------------------------------------------------
	NEW TEXT,ART,BET,LAP,DAT,SN
	
	SET KILL=+$GET(KILL)
	SET ART = $$$KEY1($GET(YKEY))		QUIT:ART=""   ;AUFTRAG       ;order 
	SET BET = $$$KEY2($GET(YKEY))		QUIT:BET=""   ;BETRIEB
	SET LAP = $$$KEY3($GET(YKEY))		QUIT:LAP=""   ;LAGERPLATZ    ;storage 
	SET DAT = $$$KEY4($GET(YKEY))		QUIT:DAT=""   ;DATUM         ;Date
	SET SN  = $$$KEY5($GET(YKEY))		QUIT:SN=""    ;SERIENNUMMER
	
	;HISTORY
	IF KILL=0 DO 
	. IF '$DATA(^INSNHIST(YM,SN)) SET TEXT=$$^WWWTEXT(58) QUIT  ;NEUANLAGE   ; "New"
	. SET TEXT=$$^WWWTEXT(158)_" "                              ;ERFASSEN/ÄNDERN  LAGERPLATZ HINWEIS ; "New/edit " ...storage 
	. IF $DATA(^WWW0031(0,"INWEAUFS",1,SPRACHE,1)) SET TEXT=TEXT_$PIECE(^WWW0031(0,"INWEAUFS",1,SPRACHE,1),Y,1) QUIT
	. SET TEXT=TEXT_$PIECE(^WWW003(0,"INWEAUFS",1,1),Y,1)
	
	IF KILL=1 SET TEXT=$$^WWWTEXT(32116)_" "_$$^WWWTEXT(42)     ;SN GELÖSCHT ; "Serial No. ... Deleted!"
	DO HIST^INSNHIST(SN,TEXT,ART)
	QUIT
	
ANZEIGE   ;EINSPRUNG AUS FORMULAR ;out of form 
	DO SERIE
	DO SPLIT
	DO AUFBES
	QUIT
	
SERIE
	;-------------------------------------------------------------------------------
	;	EINSPRUNG VON AUSSEN
	;
	; History:
	; 18-Mar-2009	GRF		specific $$$KEY macros - get once
	;-------------------------------------------------------------------------------
	new dteRcvd,idLine,idLocn,idOrder,idStore
	
	set idOrder  = $$$KEY1($get(YKEY))		quit:idOrder=""   ;AUFTRAG ;order 
	set idLine   = $$$KEY2($get(YKEY))		quit:idLine=""    ;POSITION
	set idLocn   = $$$KEY3($get(YKEY))		quit:idLocn=""    ;BETRIEB
	set idStore  = $$$KEY4($get(YKEY))		quit:idStore=""   ;LAGERPLATZ ;storage 
	set dteRcvd  = $$$KEY5($get(YKEY))		quit:dteRcvd=""   ;DATUM ;Date 
	
	SET ART=$PIECE($GET(^INAUFP(YM,idOrder,idLine,1)),Y,4)
	IF ART'="" IF $PIECE($GET(^INART(YM,ART,1)),Y,56)=1 DO  QUIT  ;ARTIKEL MIT SERIENNUMMER ;item by means of 
	. IF $DATA(^INWEAUFS(YM,idOrder,idLine,idLocn,idStore,dteRcvd)) QUIT  ;SCHON ERFASST ;yet 
	. WRITE YCR
	. WRITE "<A HREF="_""""_YAKTION_"EP=WWWFORM&YFORM=INWEAUFS"
	. SET YBACK=YBACK_"INWEAUF,"
	. DO ^WWWCGI
	. WRITE """"
	. WRITE ">"
	. WRITE "<FONT COLOR="_YRED_">"
	. WRITE YCR
	. WRITE $$^WWWTEXT(32209)  ;ACHTUNG SERIENNUMMER ERFASSEN ;estimation Edit 
	. WRITE " "
	. WRITE "</FONT>"
	. WRITE "</A>"
	
	;SUCHEN POSITIONEN OHNE SN BEI GESAMT-WE ;seek without next to 
	IF $PIECE($GET(^INWEAUF(YM,idOrder,idLine,idLocn,idStore,dteRcvd,1)),Y,48)'="" DO  ;EINGELAGERT ALS GESAMT-WE ;when 
	. NEW XPOS,XART,ANZM
	. SET ANZM=0
	. SET XPOS=""
	. FOR  SET XPOS=$ORDER(^INAUFP(YM,idOrder,XPOS)) QUIT:XPOS=""  DO
	. . SET XART=$PIECE($GET(^INAUFP(YM,idOrder,XPOS,1)),Y,4)
	. . IF XART'="" IF $PIECE($GET(^INART(YM,XART,1)),Y,56)=1 DO  ;ARTIKEL MIT SERIENNUMMER ;item by means of 
	. . . QUIT:'$DATA(^INWEAUF(YM,idOrder,XPOS))     ;KEIN OFFENER WE ;no In 
	. . . IF $DATA(^INWEAUFS(YM,idOrder,XPOS)) QUIT  ;SCHON ERFASST ;yet 
	. . . SET ANZM=ANZM+1
	. . . WRITE YCR
	. . . IF ANZM>1 WRITE "<BR>"
	. . . WRITE "<A HREF="_""""_YAKTION_"EP=WWWMANU&YEXEC=D|^INWEAUFPROC('"_idOrder_"',"_XPOS_",1)&YFORM=INWEAUF"  ;WECHSEL ZU WE VON AUFTRAG,POSITION
	. . . DO ^WWWCGI
	. . . WRITE """"
	. . . WRITE ">"
	. . . WRITE "<FONT COLOR="_YRED_">"
	. . . WRITE YCR
	. . . WRITE $$^WWWTEXT(32979)_": "_XPOS_"."  ;ACHTUNG SERIENNUMMER ERFASSEN FÜR POSITION ;estimation Edit to 
	. . . WRITE " "
	. . . WRITE "</FONT>"
	. . . WRITE "</A>"
	
	QUIT
	
	
SPLIT
	;-------------------------------------------------------------------------------
	;	ANZEIGEN SPLITT MENGE ;display quantity 
	;
	; History:
	; 18-Mar-2009	GRF		specific $$$KEY macros - get once
	;-------------------------------------------------------------------------------
	NEW YAUF,YPOS,YFELD,YGESAMT
	
	;+++++++++++++++++++++++++++++++++++++++
	;	YFELD		objINAUFP		Order Line
	;+++++++++++++++++++++++++++++++++++++++
	
	SET YAUF  = $$$KEY1($get(YKEY))         QUIT:YAUF=""   ;AUFTRAG  ;order 
	SET YPOS  = $$$KEY2($get(YKEY))         QUIT:YPOS=""   ;POSITION ; line
	SET YFELD = $GET(^INAUFP(YM,YAUF,YPOS,1))
	
	;SET GESAMT=0 ;table-mat 
	SET GESAMT=$PIECE(YFELD,Y,262)
	
	;SET YPOS(1)=$PIECE(YFELD,Y,243)  ;SPLIT VON
	;IF YPOS(1)'="" SET GESAMT=GESAMT+$PIECE($GET(^INAUFP(YM,YAUF,YPOS(1),1)),Y,5)
	;SET YPOS(1)=$PIECE(YFELD,Y,242)  ;SPLIT NACH
	;IF YPOS(1)'="" SET GESAMT=GESAMT+$PIECE($GET(^INAUFP(YM,YAUF,YPOS(1),1)),Y,5)
	
	IF +GESAMT'=0 DO 
	. ;SET GESAMT=GESAMT+$PIECE(YFELD,Y,5)  ;DIESE POSITION
	. WRITE "<FONT COLOR="_YRED_">"
	. WRITE YCR
	. WRITE "&nbsp;&nbsp;"
	. WRITE $$^WWWTEXT(33023)  ;GESAMTANZAHL AUS SPLITT ;out of 
	. WRITE ": "
	. IF '$FIND(GESAMT,".") WRITE GESAMT
	. IF $FIND(GESAMT,".") WRITE $$^WWWZAHL(GESAMT,0,$LENGTH($PIECE(GESAMT,".",2)))
	
	QUIT
 
AUFBES
	;-------------------------------------------------------------------------------
	;	ANZEIGEN VORHANDENE AUFTRAGSBESTÄTIGUNGEN ;display 
	;
	; History:
	; 18-Mar-2009	GRF		specific $$$KEY macros - get once
	;-------------------------------------------------------------------------------
	NEW YAUF,YPOS,YSUCH1,YNOSORT
	
	SET YAUF  = $$$KEY1($get(YKEY))         QUIT:YAUF=""   ;AUFTRAG  ;order 
	SET YPOS  = $$$KEY2($get(YKEY))         QUIT:YPOS=""   ;POSITION ; line
	
	;YSUCH1="FORMULAR;DATEI;SORTKEY;VORGABEKEY|VORGABEDATEN;ANZEIGE KEY;           1- 5
	;   ...  ANZEIGEFELD;STD SORT;ANZEIGE ERGEBNIS;ORIENTIERUNG;ANZAHL ANZEIGEN;   6-10
	;   ...  FIXKEY;FELDER MIT SUMMENBILDUNG;WELCHEN KEY UEBERGEBEN;              11-13
	SET YSUCH1=""
	SET $PIECE(YSUCH1,";",1)="INAUFPA"           ;FORMULAR
	SET $PIECE(YSUCH1,";",2)="INAUFPA"           ;DATEI
	SET $PIECE(YSUCH1,";",3)=""                  ;SORTKEY
	SET $PIECE(YSUCH1,";",4)=YAUF_","_YPOS_"|"   ;VORGABEKEY|VORGABEDATEN
	SET $PIECE(YSUCH1,";",5)=4                   ;1_","_2_","_3_","_4       ;ANZEIGE KEY
	SET $PIECE(YSUCH1,";",6)=1_","_23_","_16_","_24_","_47_","_22           ;ANZEIGEFELD
	SET $PIECE(YSUCH1,";",7)=""                 ;STD SORT
	SET $PIECE(YSUCH1,";",8)=1                  ;ANZEIGEERGEBNIS
	SET $PIECE(YSUCH1,";",9)=1                  ;ORIENTIERUNG
	SET $PIECE(YSUCH1,";",10)=25                ;ANZAHL
	SET $PIECE(YSUCH1,";",11)=""                ;FIXKEY
	SET $PIECE(YSUCH1,";",12)=""                ;FELDER MIT SUMMENBILDUNG
	SET $PIECE(YSUCH1,";",13)=""                ;WELCHEN KEY ÜBERGEBEN
	
	;SET $PIECE(YSUCH1,";",16)=""               ;REIHENFOLGE DATENFELDER
	;SET $PIECE(YSUCH1,";",17)=""               ;FIXVORGABE SORTKEY
	SET YNOSORT=1
	DO ^WWWSUCH1
	QUIT
	
PRUEF
	;-------------------------------------------------------------------------------
	;PRÜFEN AUF DOPPELERFASSUNG ODER WE OHNEN wh;FIS ;CHECK RECEIVING
	;
	; History:
	; 18-Mar-2009	GRF		specific $$$KEY macros - get once
	;-------------------------------------------------------------------------------
	new dteRcvd,idLine,idLocn,idOrder,idStore
	
	quit:$get(YKEY)=""
	set idOrder  = $$$KEY1(YKEY)		quit:idOrder=""   ;AUFTRAG ;order 
	set idLine   = $$$KEY2(YKEY)		quit:idLine=""    ;POSITION
	set idLocn   = $$$KEY3(YKEY)		quit:idLocn=""    ;BETRIEB
	set idStore  = $$$KEY4(YKEY)		quit:idStore=""   ;LAGERPLATZ ;storage 
	set dteRcvd  = $$$KEY5(YKEY)		quit:dteRcvd=""   ;DATUM ;Date 
	
	;+++++++++++++++++++++++++++++++++++++++
	;	YFELD1		objINWEAUF
	;+++++++++++++++++++++++++++++++++++++++
	
	IF $DATA(^INWEAUF(YM,idOrder,idLine,idLocn,idStore,dteRcvd)) DO
	. IF $TRANSLATE($PIECE($GET(^INWEAUF(YM,idOrder,idLine,idLocn,idStore,dteRcvd,1)),Y,1,10),Y)'="" SET Q=1
	
	IF $GET(YFELD)'="" DO  ;UNBEDENKLICHE ÄNDERUNGEN;FIS;27.09.04
	. NEW YFELD1,YI,YQ,YFORMX
	. SET YQ=1
	. SET YFELD1=$GET(^INWEAUF(YM,idOrder,idLine,idLocn,idStore,dteRcvd,1))
	. QUIT:YFELD1=""  ;NEUANLAGE
	. FOR YI=1,2,9,14,15,19,48,112  IF $PIECE(YFELD1,Y,YI)'=$PIECE(YFELD,Y,YI) SET $PIECE(YFELD1,Y,YI)=$PIECE(YFELD,Y,YI),YQ=0
	. QUIT:YQ=1
	. SET YFORMX=YFORM
	. NEW YOK,YFORM,YVOR
	. SET YOK=$$^WWWSPEI(YFORMX,YKEY,YFELD1,1)
	. SET Q=2
	
	IF $PIECE($GET(^INAUFP(YM,idOrder,idLine,1)),Y,7)=""  SET Q=3  ;KEINE WH
	IF $PIECE($GET(^INAUFP(YM,idOrder,idLine,1)),Y,7)="2" SET Q=3  ;KEINE WH LAGER
	
	IF $GET(Q)=3 SET Q=1  QUIT  ;SET %("VAR","YKEY")=YKEY SET %("VAR","YFORM")=YFORM DO ^WWWFORM QUIT  ;DO ^WWWINFO($$^WWWTEXT(32075))  ;KEINE WH FESTGELEGT;TYBD;8,12,2004;26548  
	IF $GET(Q)=2 SET Q=1 SET %("VAR","YKEY")=YKEY SET %("VAR","YFORM")=YFORM DO ^WWWFORM QUIT
	IF $GET(Q)=1 DO ^WWWINFO($$^WWWTEXT(32292))   ; "Please check" 
	QUIT
	
	
INLOT
	;-------------------------------------------------------------------------------
	; History:
	; 18-Mar-2009	GRF		specific $$$KEY macros
	;-------------------------------------------------------------------------------
	NEW AUF,POS,BETR,LP,WEDAT,ART,SATZ,WEOK,LOESCH,LEOK
	
	;+++++++++++++++++++++++++++++++++++++++
	;	YFELD		objINWEAUF
	;+++++++++++++++++++++++++++++++++++++++
 
	WRITE "YKEY"_YKEY
	WRITE "YFELD"
	QUIT:YKEY=""
	
	SET AUF   = $TRANSLATE($$$KEY1(YKEY),"""")				QUIT:AUF=""
	SET ^WWW126(YM,"INAUF",YBED,1,1)=AUF   ;BEARBEITET
	SET POS   = $TRANSLATE($$$KEY2(YKEY),"""")				QUIT:POS=""
	SET BETR  = $TRANSLATE($$$KEY3(YKEY),"""")				QUIT:BETR=""
	SET LP    = $TRANSLATE($$$KEY4(YKEY),"""")				QUIT:LP=""
	SET WEDAT = $TRANSLATE($$$KEY5(YKEY),"""")				QUIT:WEDAT=""
	
	SET YFELD=$GET(^INWEAUF(YM,AUF,POS,BETR,LP,WEDAT,1))
	WRITE YFELD
	
	;	D2		$$$INWEAUFBatchNumber()
	;	D7		$$$INWEAUFSupplier()
	;	D25		$$$INWEAUFExpirationDate()
	;	D26		$$$INWEAUFUseableFrom()
	;	D48		$$$INWEAUFVersionRev()
	;	D112	$$$INWEAUFCountryOfOrigin()
	
	IF $PIECE(YFELD,Y,2)'="" IF $PIECE(YFELD,Y,7)'="" IF '$DATA(^INLOT(YM,$PIECE(YFELD,Y,7),$PIECE(YFELD,Y,2),1)) DO
	. NEW KEY,SATZ
	. SET KEY=$PIECE(YFELD,Y,7)_","_$PIECE(YFELD,Y,2)
	. WRITE KEY
	. SET $PIECE(SATZ,Y,2)=+$HOROLOG
	. SET $PIECE(SATZ,Y,3)=YBED
	. SET $PIECE(SATZ,Y,4)=+$HOROLOG
	. SET $PIECE(SATZ,Y,5)=$PIECE(YFELD,Y,26)
	. SET $PIECE(SATZ,Y,6)=$PIECE(YFELD,Y,25)
	. SET $PIECE(SATZ,Y,8)=$PIECE(YFELD,Y,48)
	. SET $PIECE(SATZ,Y,9)=$PIECE(YFELD,Y,112)
	. SET YOK=$$^WWWSPEI("INLOT",KEY,SATZ,1)
	
	QUIT
	
	
OnBeforeDCM(pstrKeys)
    ;-------------------------------------------------------------------------------
    ; Only DCM if it's a purchase order receipt.
    ;
    ; Params:	pstrKeys	- INWEAUF keys
    ;
    ; Returns:	boolean - whether to DCM
    ;
    ; History:
    ; 05-Oct-2006	JW	SR15079: Created
    ;-------------------------------------------------------------------------------
    new idOrder,blnDCM
    
    set blnDCM = $$$NO
    
    set idOrder = $$$KEY1(pstrKeys)
    if idOrder'="" {
		set blnDCM = $$$INAUFOrderType($get(^INAUF(YM,idOrder,1)))=2
    }
    
	quit blnDCM
	
]]></Routine>
</Export>