<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INAUFP" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INAUFP
#include COMSYS
#include INConst
#include INAConst
#include INSYS
	; SR17138 change to (class/form) don't remove comment.

	;-------------------------------------------------------------------------------
	; Description of Function :
	;		SPEICHERN POSITIONSDATEN NACH RECHNEN DES NETTONETTO
	;
	; Called By : Execute After Save - forms INAUFP, INAUFPX, INCATALOGITEM1
	; 	
	; Inputs : 
	;	YKEY		Order,OrderLine
	;	YFELD		objINAUFP
	;	
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 06-Jul-2009	GRF		Doco; boolean macros; order macros
	; 10-Oct-2008	Luke	SR16011 Update the correct QTY value when saving an edited AUFP 
	; 21-SEP-2006 	FAN 	SR14746 Sales statistics incorrect
	; 07-Mar-2006	GRF		Doco
	; 16-Jun-2005	GRF		Add TEXT to simplify INARTHIST call
	; 15-Jun-2005	GRF		Don't repeat WWWUMLAU calls; replace ! with ||
	; 09.07.2000	DT
	;-------------------------------------------------------------------------------
	new AUFTAG,POSITION,umAUFTRAG,umPOSITION
 
	QUIT:$GET(YKEY)=""
	SET AUFTRAG  = $$$KEY1(YKEY)
	SET POSITION = $$$KEY2(YKEY)

	;IF $PIECE(YFELD,Y,19)="" SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,19)=$PIECE($GET(^INAUF(YM,AUFTRAG,1)),Y,19)  ;LIEFERTERMIN
	SET NETTO = $$^INAUFPNETTO(AUFTRAG,POSITION)  ;NETTO NETTO RECHNEN ;have faith in 
	
	IF '$$$INAUFPNoRecalculationOfCostAllo(YFELD) SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,47) = $$^INAUFKOST(AUFTRAG,POSITION)  ;SUCHEN EK;NUR WENN ERLAUBT;14.11.03 ;seek Planned Cost only when permissive 
	
	;---------------------------------------
	;	D4		$$$INAUFPItemNumber()
	;	D26		$$$INAUFPItemType()
	;	D40		$$$INAUFPQuantityUnit()		D449	$$$INAUFPOrderedUnit  (see SR17138)
	;	D57		$$$INAUFPMachine()
	;	D61		$$$INAUFPProductionPlace()
	;	D90		$$$INAUFPReadyForDelivery()
	;---------------------------------------
	IF ($PIECE(YFELD,Y,90)'=$$$YES) && (($PIECE(YFELD,Y,26)=2) || ($PIECE(YFELD,Y,26)=6)) {
		SET $PIECE(YFELD,Y,90) = $$$YES
		SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,90) = $$$YES  ;AUSLIEFERUNGSFÄHIG WENN LEISTUNG
	}
	
	IF $PIECE(YFELD,Y,40)="" DO   ;no unit - get from item or set to "EACH"
	. IF $PIECE(YFELD,Y,4)'="" SET $PIECE(YFELD,Y,40) = $PIECE($GET(^INART(YM,$PIECE(YFELD,Y,4),1)),Y,40)
	. IF $PIECE(YFELD,Y,40)="" SET $PIECE(YFELD,Y,40) = 1
	. SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,40) = $PIECE(YFELD,Y,40)
 	
	IF $PIECE(YFELD,Y,57)'="" DO  ;MASCHINE ;machine 
	. QUIT:$PIECE(YFELD,Y,61)'=""   ;SCHON BELEGT ;already occupied 
	. IF $PIECE($GET(^INMASCH(YM,$PIECE(YFELD,Y,57),1)),Y,9)'="" DO  ;FERTIGUNGSNEST
	. . SET $PIECE(YFELD,Y,61) = $PIECE($GET(^INMASCH(YM,$PIECE(YFELD,Y,57),1)),Y,9)  ;VORGABE ;default 
	. . SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,61) = $PIECE(YFELD,Y,61)
	
	;---------------------------------------
	;	D69  : $$$INVORGDoNotKillComponents
	;	D217 : $$$INVORGDRPOnlyForNetChange
	;---------------------------------------
	;	D5		$$$INAUFPQuantity()			D448	$$$INAUFPOrderedQuantity  (see SR17138)
	;	D6		$$$INAUFPQuantity1()
	;	D7		$$$INAUFPSource()
	;	D39		$$$INAUFPOutput1()
	;	D43		$$$INAUFPWeightInKg()
	;	D47		$$$INAUFPCost()
	;	D254	$$$INAUFPNoRecalculationOfCostAllo[wed]()
	;---------------------------------------
	;ÄNDERUNG DER MENGE, NEURECHNEN LIEFERANTENKONDITION;FIS;24113;06.08.03
	IF $PIECE(YFELD,Y,5)'=$PIECE($GET(^WWWDATEN(YM,+$HOROLOG,YUSER,YFORM,"D",2)),Y,5) DO
	. IF $PIECE(YFELD,Y,4)'="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,217)=$$$YES SET ^INDRPNETCHANGE(YM,$PIECE(YFELD,Y,4),1) = ""  ;FIS;29.04.05;SR12200
	. NEW NOKALK
	. SET NOKALK = $PIECE(YFELD,Y,254)
	. IF NOKALK=$$$YES SET $PIECE(YFELD,Y,254)         = $$$NO  ;NEURECHNEN ERLAUBT ;permissive 
	. SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,254) = $$$NO  ;NEURECHNEN ERLAUBT ;permissive 
	. ;shobby VVV
	. DO ^INAUFPKNEU(AUFTRAG,POSITION,1)  ;IMMER NEU RECHNEN  ;FIS;10.11.03;24530
	. ;IF $PIECE(YFELD,Y,7)=1 DO ^INAUFPKNEU(AUFTRAG,POSITION,1)
	. ;IF ($PIECE(YFELD,Y,7)=2)||($PIECE(YFELD,Y,7)=5) DO ^INAUFPKNEU(AUFTRAG,POSITION)
	. IF NOKALK=1 SET $PIECE(YFELD,Y,254)                          = $$$YES  ;NEURECHNEN NICHT ERLAUBT ;Not permissive 
	. IF NOKALK=1 SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,254) = $$$YES  ;NEURECHNEN NICHT ERLAUBT ;Not permissive 
	. IF ($PIECE(YFELD,Y,7)=1) && (+$PIECE(YFELD,Y,6)'=0) DO  ;BESTELLUNG  UPDATE WH MENGE;FIS;15.06.04 ;sales order quantity 
	. . SET $PIECE(YFELD,Y,6)                          = $PIECE(YFELD,Y,5)  ;NEURECHNEN NICHT ERLAUBT ;Not permissive 
	. . SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,6) = $PIECE(YFELD,Y,5)  ;NEURECHNEN NICHT ERLAUBT ;Not permissive 
	. ;  VV   SR16011
	. SET $PIECE(YFELD,Y,39) = $PIECE(YFELD,Y,5)
	. SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,39)=$PIECE(YFELD,Y,5)
	. ;  ^^   SR16011             
	. ;IF '$DATA(^INAUFPT(YM,AUFTRAG,POSITION)) DO  ;ERRECHNEN GEWICHT WENN KEINE TEILE;FIS;02.07.04;25762
	. QUIT:$PIECE(YFELD,Y,4)=""
	. IF '$DATA(^INAUFPT(YM,AUFTRAG,POSITION)) || ($PIECE($GET(^INART(YM,$PIECE(YFELD,Y,4),1)),Y,255)=$$$YES) DO  ;ERRECHNEN GEWICHT WENN KEINE TEILE;FIS;02.07.04;25762
	. . NEW MENGEALT
	. . SET MENGEALT=$PIECE($GET(^WWWDATEN(YM,+$HOROLOG,YUSER,YFORM,"D",2)),Y,5)
	. . IF +MENGEALT'=0 SET $PIECE(YFELD,Y,43)=($PIECE(YFELD,Y,43)/MENGEALT)*$PIECE(YFELD,Y,5)
	. . IF +MENGEALT=0 IF $PIECE(YFELD,Y,4)'="" SET $PIECE(YFELD,Y,43)=$PIECE($GET(^INART(YM,$PIECE(YFELD,Y,4),1)),Y,43)*$PIECE(YFELD,Y,5)
	. . SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,43)=$PIECE(YFELD,Y,43)
	
	IF $PIECE(YFELD,Y,7)=1 DO   ;SELBSTKOSTEN UND LÖSCHEN DER TEILE ;total production costs And Delete the 
	. IF ($PIECE(YFELD,Y,254)'=$$$YES) && $DATA(^INAUFPK(YM,AUFTRAG,POSITION,1)) DO
	. . ; shobby
	. . SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,47) = $PIECE($GET(^INAUFPK(YM,AUFTRAG,POSITION,1)),Y,13)  ;EK AUS AUFTRAGSLIEFERANTEN DATEI ;Planned Cost out of data file 
	. ;
	. ;		D69		$$$INVORGDoNotKillComponents()
	. QUIT:$PIECE($GET(^INVORG(YM,YM,1)),Y,69)=$$$YES  ;UNTERTEILE NICHT LÖSCHEN ;Not Delete 
	. KILL ^INAUFPT(YM,AUFTRAG,POSITION)
	. KILL ^INAUFPXL(YM,AUFTRAG,POSITION)
	
	SET $PIECE(YFELD,Y,39) = $PIECE(YFELD,Y,5)  ;MENGE=FERTIGUNGSMENGE
	SET ^INAUFPXL(YM,AUFTRAG,POSITION) = YFELD
	
	;ZURÜCKGELEGTER ARTIKEL / LAY AWAY ITEM  ;->WIRD BEREITS IN INAUF GESETZT ;item away ITEM yet within staid 
	;IF +$PIECE(YFELD,Y,169)=5 DO
	;.SET $PIECE(YFELD,Y,205) = $$$YES
	;.SET $PIECE(YFELD,Y,204) = $PIECE($GET(^INVORG(YM,YM,1)),Y,137)      ; D137  : $$$INVORGBlockedLayAwayReason
	;.SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,205) = $$$YES
	;.SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,204) = $PIECE(YFELD,Y,204)
	
	;---------------------------------------
	;	D205		$$$INAUFPLineItemBarrier()
	;	D206		$$$INAUFPReleasesThrough()
	;	D207		$$$INAUFPReleasesOn()
	;---------------------------------------
	;AUFTRAGSSPERRE FREI ;unreserved 
	IF (+$PIECE(YFELD,Y,205)=$$$NO) && ($PIECE($GET(^WWWDATEN(YM,+$HOROLOG,YUSER,YFORM,"D",2)),Y,205)=$$$YES) DO   ;NUR WENN VORHER GESPERRT;FIS;08.12.03 ;only when pre- DISABLED 
	. SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,206) = YBED      ;MITARBEITER
	. SET $PIECE(YFELD,Y,206)                          = YBED
	. SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,207) = $HOROLOG
	. SET $PIECE(YFELD,Y,207)                          = $HOROLOG
	
	;AUFTRAGSSPERRE EIN ;uni- 
	IF +$PIECE(YFELD,Y,205)=$$$YES DO   ;KEINE SPERRE=FREIGEGEBEN ;no 
	. SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,206) = ""   ;MITARBEITER
	. SET $PIECE(YFELD,Y,206)                          = ""
	. SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,207) = ""   ;DATUM ;Date
	. SET $PIECE(YFELD,Y,207)                          = ""
	
	
	;---------------------------------------
	;	D19		$$$INAUFPRequiredDeliveryDate()
	;	D76		$$$INAUFPDeliveryDate()
	;---------------------------------------
	;VEREINBARTER LIEFERTERMIN IN DIE VERSANDPLANUNG ÜBERTRAGEN ;time of delivery within who transport 
	IF $PIECE($GET(^INVORG(YM,YM,1)),Y,74)=$$$YES DO               ; $$$INVORGTransferDeliveryDate()
	. NEW TERM
	. QUIT:$PIECE(YFELD,Y,76)'=""  ;VERSAND BEREITS GEPLANT ;shipping yet 
	. SET TERM = $PIECE(YFELD,Y,19)  ;TERMIN AUFTRAGSPOSITION
	. IF TERM="" SET TERM = $PIECE($GET(^INAUF(YM,AUFTRAG,1)),Y,19)  ;TERMIN AUFTRAG ;order 
	. IF TERM'="" DO
	. . ;DO ^WWWSKILL("INAUFP",AUFTRAG_","_POSITION,1)  ;FIS;12.01.05;SIEHE WEITER UNTEN
	. . ;SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,76)=TERM  // SR14746 ;SIEHE WEITER UNTEN
	. . ;DO ^WWWSSORT("INAUFP",AUFTRAG_","_POSITION)  ;FIS;12.01.05;SIEHE WEITER UNTEN
	. . ;
	. . DO  ;SORTKEY NEU AUFBEREITEN;FIS;12.01.05     // SR14746
	. . . NEW SATZ
	. . . SET SATZ = $GET(^INAUFP(YM,AUFTRAG,POSITION,1))
	. . . SET $PIECE(SATZ,Y,76) = TERM  // SR14746 ;SIEHE WEITER UNTEN
	. . . SET strStatus = $$$Save("INAUFP",AUFTRAG_","_POSITION,SATZ,$$$YES) // SR14746
	. . ;
	. . DO ^INAUFTO1  ;SPEICHERN TOUR-PLANUNG ;Save 
	
	
	;---------------------------------------
	;	D193		$$$INAUFPOrderDate()
	;	D386		$$$INAUFPTurnoverWeek()
	;	D387		$$$INAUFPTurnoverMonth()
	;	D388		$$$INAUFPTurnoverQuarter()
	;	D389		$$$INAUFPTurnoverYear()
	;	D398		$$$INAUFPInvoiceWeek()
	;	D399		$$$INAUFPInvoiceMonth()
	;	D400		$$$INAUFPInvoiceQuarter()
	;	D401		$$$INAUFPInvoiceYear()
	;---------------------------------------
	;BUCHUNGSZEITRAUM FESTLEGEN ;FIS;12.01.05;27153
	DO ^INAUFPVALDATE
	FOR YI=193,386,387,388,389,398,399,400,401 {  ;SET NEW DATA
		SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,YI) = $PIECE(YFELD,Y,YI)
	}
	
	; DEPRECATED - with removal of INWEAUF* and INWE     SR16361   Check FINAPInvDCM replacement - alternative to INWE for QC Status?
	;---------------------------------------
	;	D261		$$$INAUFPIncomingQCStatus()
	;---------------------------------------
	;REKLAMATION AUFTRAGPOSITION ÄNDERT WE-MERKER     FAN 20.03.02 ;reclamation buff 
	IF $PIECE(YFELD,Y,261)'="" DO
	. IF $DATA(^INWEAUF(YM,AUFTRAG,POSITION)) DO
	. . NEW LAP,WED,BET
	. . SET BET=""
	. . FOR  SET BET=$ORDER(^INWEAUF(YM,AUFTRAG,POSITION,BET)) QUIT:BET=""  DO
	. . . SET LAP=""
	. . . FOR  SET LAP=$ORDER(^INWEAUF(YM,AUFTRAG,POSITION,BET,LAP)) QUIT:LAP=""  DO
	. . . . SET WED=""
	. . . . FOR  SET WED=$ORDER(^INWEAUF(YM,AUFTRAG,POSITION,BET,LAP,WED)) QUIT:WED=""  DO
	. . . . . QUIT:$PIECE(^INWEAUF(YM,AUFTRAG,POSITION,BET,LAP,WED,1),Y,10)=$PIECE(YFELD,Y,261)
	. . . . . SET $PIECE(^INWEAUF(YM,AUFTRAG,POSITION,BET,LAP,WED,1),Y,10)=$PIECE(YFELD,Y,261)
	. . . . . DO ^WWWSSORT("INWEAUF",AUFTRAG_","_POSITION_","_BET_","_LAP_","_WED)
	. . . . . SET ART=$PIECE($GET(^INAUFP(YM,AUFTRAG,POSITION,1)),Y,4)
	. . . . . ; "*****-* (StkLoc-Date) New Incoming QC Status: ****"
	. . . . . set TEXT = AUFTRAG_"-"_POSITION_" ("_LAP_"-"_$$^WWWDATE(WED)_") "_$$^WWWTEXT(32948)_": "_$PIECE($GET(^INWEMERKER(YM,$PIECE(YFELD,Y,261),1)),Y,1)
	. . . . . DO ^INARTHIST(ART,TEXT,BET)  ;WARENEINGANGSMERK
	. ;
	. set umAUFTRAG  = $$^WWWUMLAU(AUFTRAG,1)
	. set umPOSITION = $$^WWWUMLAU(POSITION,1)
	. IF $DATA(^INWEs(YM,8,umAUFTRAG,umPOSITION)) DO
	. . NEW ART,BET,LAP,WED
	. . SET ART=""
	. . SET ART=$ORDER(^INWEs(YM,8,umAUFTRAG,umPOSITION,ART))
	. . SET BET=""
	. . FOR  SET BET=$ORDER(^INWEs(YM,8,umAUFTRAG,umPOSITION,ART,BET)) QUIT:BET=""  DO
	. . . SET LAP=""
	. . . FOR  SET LAP=$ORDER(^INWEs(YM,8,umAUFTRAG,umPOSITION,ART,BET,LAP)) QUIT:LAP=""  DO
	. . . . SET WED=""
	. . . . FOR  SET WED=$ORDER(^INWEs(YM,8,umAUFTRAG,umPOSITION,ART,BET,LAP,WED)) QUIT:WED=""  DO
	. . . . . QUIT:$$$INWEIncomingQCStatus(^INWE(YM,ART,BET,LAP,WED,1))=$$$INAUFPIncomingQCStatus(YFELD)
	. . . . . ;
	. . . . . ;---------------------------------------
	. . . . . ;
	. . . . . ; *** UPDATE INWE POINT ***
	. . . . . ; 
	. . . . . ; This comment marks where the INWE class is being
	. . . . . ; saved or killed as an indication of where a
	. . . . . ; common method may need to be located.     <GRF>
	. . . . . ;
	. . . . . ;---------------------------------------
	. . . . . ;
	. . . . . SET $$$INWEIncomingQCStatus(^INWE(YM,ART,BET,LAP,WED,1))=$$$INAUFPIncomingQCStatus(YFELD)
	. . . . . DO ^WWWSSORT("INWE",ART_","_BET_","_LAP_","_WED)
	. . . . . ;      Storage "-" Date             "New Incoming QC Status: "     'Status Description'
	. . . . . set TEXT = LAP_"-"_$$^WWWDATE(WED)_" "_$$^WWWTEXT(32948)_": "_$PIECE($GET(^INWEMERKER(YM,$PIECE(YFELD,Y,261),1)),Y,1)
	. . . . . DO ^INARTHIST(ART,TEXT,BET)  ;WARENEINGANGSMERK
	
	
	;---------------------------------------     Return Material Authorization
	;	D220		$$$INAUFPComplaintReason()
	;	D222		$$$INAUFPComplaintText()
	;	D237		$$$INAUFPOrderNo1()
	;	D238		$$$INAUFPLineItem2()
	;	D319		$$$INAUFPRMANumber()
	;---------------------------------------
	;REKLAMATIONSDATEN AUS RMA DATEI ÜBERNEHMEN ;out of data file assume 
	IF $PIECE(YFELD,Y,319)'="" DO
	. NEW RMA1,YYFELD,YI
	. SET RMA1=$GET(^INRMA(YM,$PIECE(YFELD,Y,319),1))
	. QUIT:RMA1=""
	. SET YYFELD=YFELD
	. IF $PIECE(YFELD,Y,220)="" SET $PIECE(YFELD,Y,220)=$PIECE(RMA1,Y,3)                        ;REKLAMATIONSGRUND
	. IF $PIECE(YFELD,Y,222)="" SET $PIECE(YFELD,Y,222)=$PIECE(RMA1,Y,4)_"|"_$PIECE(RMA1,Y,18)  ;REKLAMATIONSTEXT
	. IF $PIECE(YFELD,Y,237)="" SET $PIECE(YFELD,Y,237)=$PIECE(RMA1,Y,1)                        ;AUFTRAG ;order 
	. IF $PIECE(YFELD,Y,238)="" SET $PIECE(YFELD,Y,238)=$PIECE(RMA1,Y,2)                        ;POS
	. IF YYFELD'=YFELD FOR YI=220,222,237,238 SET $PIECE(^INAUFP(YM,AUFTRAG,POSITION,1),Y,YI) = $PIECE(YFELD,Y,YI)
	. DO
	. . NEW SATZ,YFORM,YVOR,YOK
	. . SET SATZ = $GET(^INRMA(YM,$PIECE(YFELD,Y,319),1))
	. . QUIT:$PIECE(SATZ,Y,19)=$$$YES  ;ERLEDIGT
	. . SET $PIECE(SATZ,Y,10) = AUFTRAG
	. . SET $PIECE(SATZ,Y,11) = POSITION
	. . SET $PIECE(SATZ,Y,19) = $$$YES  ;ERLEDIGT
	. . SET $PIECE(SATZ,Y,20) = +$HOROLOG  ;ERLEDIGT AM ;to the 
	. . SET YOK = $$^WWWSPEI("INRMA",$PIECE(YFELD,Y,319),SATZ,1)
	
	
	; FIXME : Now a 'do nothing' save - need to comment block  <GRF>
	DO  ;SORTKEY NEU AUFBEREITEN;FIS;12.01.05    
	. NEW YFORM,YVOR,YOK,YSATZ
	. SET YSATZ = $GET(^INAUFP(YM,AUFTRAG,POSITION,1))
	. ;SET $PIECE(YSATZ,Y,39)=$PIECE(YFELD,Y,5)  ;MENGE=FERTIGUNGSMENGE
	. SET YOK = $$^WWWSPEI("INAUFP",AUFTRAG_","_POSITION,YSATZ)  
	
	;---------------------------------------
	;	D209 : $$$INVORGRecalcAdditionalCosts
	;	D215 : $$$INVORGCalcAdditionalCostsInLine
	;---------------------------------------
	;NEURECHNEN ZUSATZKOSTEN IM AUFTRAG;FIS;02.02.05;27220
	IF ($PIECE($GET(^INVORG(YM,YM,1)),Y,209)=$$$YES) || ($PIECE($GET(^INVORG(YM,YM,1)),Y,215)=$$$YES) DO
	. NEW YAUFTRAG,YFELD
	. SET YAUFTRAG = AUFTRAG
	. SET YFELD    = $GET(^INAUF(YM,YAUFTRAG,1))
	. DO ZUSATZ^INAUF1()
	
	quit
	
	
OnBeforeDCM(YKEY="",YFELD="")
	;-------------------------------------------------------------------------------
	; Check for specific conditions under which this item will not be placed on the
	; DCM queue.
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 30-Jun-2005	shobby	SR12578 Created
	;-------------------------------------------------------------------------------
	new blnContinue,idOrder,objINAUF
	
	set blnContinue = $$$NO
	
	set idOrder = $$$KEY1(YKEY)
	if idOrder'="" {
		set objINAUF    = $get(^INAUF(YM,idOrder,1))
		set blnContinue = ( ($$$INAUFOrderType(objINAUF)=2) && ($$$INAUFBlockPurchaseOrder(objINAUF)'=$$$YES) )
	}	
	
	quit blnContinue
	
	
OnBeforeButtonLine(YKEY,YFELD)
	;-------------------------------------------------------------------------------
	; Set YPARA variable
	;
	; Params: YKEY, YFELD
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 30-Jan-2007	RPW		SR15243: If the production is planned, lock the data fields.
	; 19-Oct-2006	Steve S	BR014293: Redirect done at @net manager level
	; 19-Sep-2006	Steve S	SR15057: Go to order header once a line is deleted
	; 09-Mar-2006	SC		SR14349: Created
	;-------------------------------------------------------------------------------
	//moved existing code from form definition.
	set YPARA=""  ;WICHTIG TYBD ;importantly TYBD??
	
	//BR014293: Commented
	//if $$$KEY2(YKEY)="" { //SR15057 no order line record
	//	do RedirectForm^COMUtilForm("INAUF",$$$KEY1(YKEY),"","","") //SR15057
	//}
	
	if $$$INAUFPProductionIsPlanned(YFELD)=$$$YES { // SR15243: This is required as this field could have the value 2.
		set $$$WWW120AuthorizationToModifyData(YVOR)=$$$EnumReadOnly
	}
	
 	quit
 	
GetImportNo(pidOrder,pidLine,pidCompany)
	;-------------------------------------------------------------------------------
	; Get the import number for an order line.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 23-Aug-2006	JW		SR14925: Default company
	; 17-Aug-2006	GRF		SR14856: Doco; name change
	; 17-Aug-2006	RPW		SR14856: Fixed
	; 09-Aug-2006	FIS		SR14856: Created
	;-------------------------------------------------------------------------------
	new idConfirmNo,idImport,idSupplier
	
	if $get(pidCompany)="" set pidCompany = YM
	
	set idImport   = ""
	set idSupplier = ""
	for {
		set idSupplier = $order(^INAUFPA(pidCompany,pidOrder,pidLine,idSupplier))
		quit:idSupplier=""
		
		set idConfirmNo = ""
		for {
			set idConfirmNo = $order(^INAUFPA(pidCompany,pidOrder,pidLine,idSupplier,idConfirmNo))
			quit:idConfirmNo=""
			
			set idImport = $$$INAUFPAImportNumber($get(^INAUFPA(pidCompany,pidOrder,pidLine,idSupplier,idConfirmNo,1)))
			quit:(idImport'="")
		}
		quit:(idImport'="")
	}
		
	quit idImport
	
	
GetQtyNotSourced(pidOrder,pidLine)
	;-------------------------------------------------------------------------------
	; For a customer order line, return the total qty that hasn't been sourced yet.
	;
	; Params:	pidOrder		: The order number
	; 			pidLine			: The order line number
	;
	; ByRefs:
	;
	; Returns:  fltNotSourced	(The qty not sourced)
	;
	; History:
	; 19-Sep-2006	Steve S	SR14956: Created
	;-------------------------------------------------------------------------------
	new dteReceipt,fltNotSourced,fltOrderQty,fltSourced,idLocn,idStore,objINWEAUF
 
	set fltSourced    = 0
	set fltNotSourced = 0
	set fltOrderQty   = $$$INAUFPQuantity($get(^INAUFP(YM,pidOrder,pidLine,1)))
 
	if (fltOrderQty>0) { // ignore stock coming back in (negative)
		set idLocn = ""
		for {
			set idLocn = $order(^INWEAUF(YM,pidOrder,pidLine,idLocn))
			quit:idLocn=""
			
			set idStore = ""
			for {
				set idStore = $order(^INWEAUF(YM,pidOrder,pidLine,idLocn,idStore))
				quit:idStore=""
				
				set dteReceipt = ""
				for {
					set dteReceipt = $order(^INWEAUF(YM,pidOrder,pidLine,idLocn,idStore,dteReceipt))
					quit:dteReceipt=""
					
					set objINWEAUF = $get(^INWEAUF(YM,pidOrder,pidLine,idLocn,idStore,dteReceipt,1))
					set fltSourced = fltSourced + $$$INWEAUFIncomingGoodsQuantity(objINWEAUF)
				}
			}
		}
		set fltNotSourced = (fltOrderQty - fltSourced)
	}
 
	quit fltNotSourced
	
	
OnFormConstuction(pYKEY,pidClassField)
	;-------------------------------------------------------------------------------
	;  d OnFormConstuction^INAUFP(YKEY,5) associated with 
	;  Form INAUFP F5 On Form Construction (Before)
	; 
	; Inputs:
	; 	pYKEY		OrderNo,OrderLineNo
	; 	pidField	INAUFP class field (D5 for quantity)
	; 
	; Returns : Read-Only setting in YHID
	; 
	; History:
	; 24-Feb-2009	GRF		SR16394: Clarify pidClassField rather than pidField
	; 30-Oct-2008	GRF		SR16070: Created
	;-------------------------------------------------------------------------------
	new idLineNo,idOrder,objLine
	
	set idOrder  = $$$KEY1(pYKEY)    quit:idOrder=""
	set idLineNo = $$$KEY2(pYKEY)    quit:idLineNo=""
	
	if pidClassField = $$$FldINAUFPQuantity {
		if $$$INAUFOrderType($get(^INAUF(YM,idOrder,1)))=0 {
			set objLine = $get(^INAUFP(YM,idOrder,idLineNo,1))
			if $$$INAUFPSource(objLine)'="" set YHID = 2
		}
	}
	quit
	
	
OnAfterDataFields(pYKEY)
	;-------------------------------------------------------------------------------
	; Routine to run after data fields
	;
	; Params:	pYKEY	: The full order line id.
	;
	; Returns:
	;
	; History:
	; 28-Feb-2007	Steve S	SR15460: Created
	;-------------------------------------------------------------------------------
	new idLineNo,idOrder,strRef
 
	if $get(ARTIKEL)'="" set $piece(^INUSER(YM,YBED,1),Y,2)=ARTIKEL // existing code
 
	//set idOrder  = $$$KEY1(pYKEY)
	//set idLineNo = $$$KEY2(pYKEY)
	
	//quit:($$$NoKey(idOrder))||($$$NoKey(idLineNo))
	
	//set objOrderLine = $get(^INAUFP(YM,idOrder,idLineNo,1))
	
	//if $$GetQtyReceived(pYKEY) = $$$INAUFPQuantity(objOrderLine) {
		/* Not really required. Would be nice if the colours had better names.
		set strRef = "Y"_YFORM_"M373.style"
		$$$StartScript()
		do UpdateFieldFormat^COMUtils(strRef,"backgroundColor","palegreen")
		$$$EndScript()
		*/
	//}
	
	quit
	

OnAfterButtonLine(pYKEY)
	;-------------------------------------------------------------------------------
	; Routine to run after Button Line
	;
	; Params:	pYKEY	: The full order line id.
	;
	; Returns:
	;
	; History:
	; 06-Aug-2009	PPP		SR16815: Update COMTempList for DropDown in INAUFP
	;-------------------------------------------------------------------------------
	new idLineNo,idOrder,objOrderLine,strRef
	
	set idOrder  = $$$KEY1(pYKEY)
	set idLineNo = $$$KEY2(pYKEY)
	
	quit:($$$NoKey(idOrder) || $$$NoKey(idLineNo))

	set objOrderLine = $get(^INAUFP(YM,idOrder,idLineNo,1))
	
	//SR16815
	do ItemUnits^INARTPACK($$$INAUFPItemNumber(objOrderLine))		//Update COMTempList for DropDown in INAUFP
	quit
	
GetQtyReceived(pidOrderLine)
	;-------------------------------------------------------------------------------
	; Return the qty received for an order line
	;
	; Params:	pidOrderLine	: The full order line id.
	;
	; Returns:  fltQty
	;
	; History:
	; 28-Feb-2007	Steve S	SR15460: Created
	;-------------------------------------------------------------------------------
	new idLineNo,idOrder,fltQty
 
	set fltQty = 0
 
	set idOrder  = $$$KEY1(pidOrderLine)
	set idLineNo = $$$KEY2(pidOrderLine)
	
	if '$$$NoKey(idOrder) && '$$$NoKey(idLineNo) {
		set fltQty = $$OrderLineReceipts^INRECLine(idOrder,idLineNo)
	}
 
	quit fltQty
	
	
GetUnitCost(pidOrder,pidLine)
	;-------------------------------------------------------------------------------
	; Return unit cost for specified order line
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 10-Feb-2010	GRF		SR17138: Use new Ordered Unit data
	; 07-Aug-2009	PPP		SR16815: Conversion of INAUFPK unit to Order Unit
	; 29-May-2009	DWR		SR16588: Changed the quit to general function that
	; 							defaults the number of decimals to 4, if decimal
	; 							points for inventory cost = ""
	; 06-Mar-2007	JW		SR14549: Created (modified from GetUnitTotal^INAUFHTMLPO)
	;-------------------------------------------------------------------------------
	new fltAmount,fltConvToBase,fltConvToOrder,fltQuantity
	new idItem,idOrdSuppUnit,idOrdUnit
	new objOrderLine,objSupplierLine
	
	set objSupplierLine = $get(^INAUFPK(YM,pidOrder,pidLine,1))
	set fltAmount       = $$$INAUFPKUnitPrice(objSupplierLine)
	
	//SR16815 (Conversion to Order Unit)
	set objOrderLine   = $get(^INAUFP(YM,pidOrder,pidLine,1))
	set idItem         = $$$INAUFPItemNumber(objOrderLine)
	set idOrdSuppUnit  = $$$INAUFPKDeliveryQuantityFullLot(objSupplierLine)
	;et idOrdUnit      = $$$INAUFPQuantityUnit(objOrderLine)              ; SR17138
	set idOrdUnit      = $$OrderUnit^INRECSummaryUtil(objOrderLine)
	set fltConvToBase  = $$GetUOMConversion^INUOMConversion(idItem,idOrdSuppUnit)
	set fltConvToOrder = $$GetUOMConversion^INUOMConversion(idItem,idOrdUnit)
	if fltConvToBase {
		set fltAmount = (fltAmount*fltConvToOrder)/fltConvToBase
	}
	
	if +fltAmount=0 {
		set objOrderLine = $get(^INAUFP(YM,pidOrder,pidLine,1))
	;	set fltQuantity  = $$$INAUFPQuantity(objOrderLine)                ; SR17138
		set fltQuantity  = $$QtyOrdered^INRECSummaryUtil(objOrderLine)
		if +fltQuantity=0 set fltQuantity = 1
		set fltAmount    = $$$INAUFPCost(objOrderLine)/fltQuantity		; Extended cost/quantity ; Rounding ?
	}
	
	;quit +$justify(fltAmount,0,$$$InvDP)   ; SR16588
	quit +$justify(fltAmount,0,$$DPforInventoryCost^INVORG())
	
	
AssociatedValidation(pstrYFELD,pstrFieldValue,pidAssociated)
	;-------------------------------------------------------------------------------
	; Check if the field is valid based on another field.
	;	COMUnit uses (idItem,idUnit,numQty,idLocn)
	;
	; Inputs:
	; pstrYFELD     : The data for the form
	; pstrFieldValue: The value of the field we are in
	; pidAssociated : The associated field
	;
	; Returns:
	; boolean - $$$YES is valid, $$$NO invalid
	;
	; History:
	; 26-Apr-2007	RPW		SRBR014310: Created
	;-------------------------------------------------------------------------------
 	new blnValid
 	
 	set blnValid = $$$YES
 	if pidAssociated=$$$FldINAUFPQuantityUnit {
	 	set blnValid = $$IsValidQtyUnit^COMUnit($$$INAUFPItemNumber(pstrYFELD),$piece(pstrYFELD,Y,pidAssociated),pstrFieldValue,YLOCATION)
	}
		
	quit blnValid
	
	
OnBeforeDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Removes reservations for this line
	; 
	; Manually clear reservations, should be handled from source document...but we
	; have no V2!
	; 
	; Called from:
	; 		INAUFKILL
	; History:
	; 02-Oct-2008	HQN		SR15808: SQL corrected, table schema changed
	; 							return valid message on failure
	; 17-Sep-2008	HQN		SR15808: Created
	;-------------------------------------------------------------------------------
	new objResultSet,sc,strStatus
	
	set sc        = $$$OK
	set strStatus = $$$OK
	set objResultSet = ##class(%Library.ResultSet).%New()
	if objResultSet.Prepare("SELECT * FROM alDRP.dPlannedMovement WHERE MovementType_MovementTypeId = ? AND Reference = ? AND LineNumber = ?") {
		if objResultSet.Execute($lb(0),$piece(pYKEY,",",1),$piece(pYKEY,",",2)) {
			while objResultSet.Next() {
				quit:$$$ISERR(sc)
				set sc = ##class(alDRP.dPlannedMovement).%DeleteId(objResultSet.Data("ID"))
			}
		}
	}
	set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc)
	quit strStatus
	
	
IsDeletable(pYKEY)
	;-------------------------------------------------------------------------------
	; Checks whether this order line can be deleted
	; This may have additional checks in place due to options set in:
	; Alphalinc >> System >> Program Parameters >> Stock Control(TAB) :
	;		"Customer Order Completed With"
	;		"Supplier Order Completed With"
	; 
	; Called from:
	; 	CanDelete^INAUFKILL()
	; 
	; History:
	; 03-Jul-2009	GRF		SR16649: Add Supplier Order test; use standard prefixes
	; 15-Oct-2008	HQN		SR15863: Created
	;-------------------------------------------------------------------------------
	new blnDeletable,idOrder,idOrderLine,idxLineNo,idxOrderNo
	new objINVORG,objOrder,objOrderLine,strCompleteWith
	
	set blnDeletable = $$$YES
	set idOrder      = $$$KEY1(pYKEY)     set idxOrderNo = $$$Index(idOrder)
	set idOrderLine  = $$$KEY2(pYKEY)     set idxLineNo  = $$$Index(idOrderLine)
	
	set objOrder     = $get(^INAUF(0,idOrder,1))
	set objOrderLine = $get(^INAUFP(0,idOrder,idOrderLine,1))
 
	set objINVORG = $get(^INVORG(0,0,1))
	if $$$INAUFOrderType(objOrder) = 0 {                   ; Customer Order
		set:$$$INAUFPInvoiceNumber(objOrderLine)'="" blnDeletable = $$$NO
		set strCompleteWith = ";"_$$$INVORGCustomerOrderCompletedWit(objINVORG)_";"
		if strCompleteWith[(";2;") {
			if $$$INAUFPOrderconfirmationdate(objOrderLine)'="" set blnDeletable = $$$NO
		}
		
	} elseif $$$INAUFOrderType(objOrder) = 2  {            ; Supplier Order
	;	SR16649
		if $data(^INRECLines(0,4,idxOrderNo,idxLineNo)) || $data(^INRECSummarys(0,1,idxOrderNo,idxLineNo)) {
			set blnDeletable = $$$NO
		}
	}
	quit blnDeletable
	
]]></Routine>
</Export>