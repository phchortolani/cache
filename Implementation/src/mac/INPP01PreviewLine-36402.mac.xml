<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPP01PreviewLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPP01PreviewLine
	
#include INConst
#include COMSYS
	
OnBlur(YBBN,YKEY,&YFELD)
	;-------------------------------------------------------------------------------
	; Actions to run on blur of fields on the grid.
	;
	; Inputs:
	; 
	; ByRef: YFELDCONTAINER
	;
	; Returns:
	;
	; History:
	; 31-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	if YBBN=7 {
		do CalculatePrice(.YFELD,$$$INPP01PreviewPricePlanRule(YFELDCONTAINER),$$$INPP01PreviewLocation(YFELDCONTAINER))
	
	} elseif YBBN=8 {
		if $$$INPP01PreviewLineAccept(YFELD) {
			if $$$INPP01PreviewLineNewPackCost(YFELD)="" {
				;set $$$INPP01PreviewLineNewPackCost(YFELD)=$$$INPP01PreviewLineSystemPackCost(YFELD)
			}
			do CalculatePrice(.YFELD,$$$INPP01PreviewPricePlanRule(YFELDCONTAINER),$$$INPP01PreviewLocation(YFELDCONTAINER))
		}
	
	} elseif YBBN=13 {
		if $$$INPP01PreviewLineAccept1(YFELD) && ($$$INPP01PreviewLineNewFrozenPrice(YFELD)="") {
			set $$$INPP01PreviewLineNewFrozenPrice(YFELD) = $$$INPP01PreviewLineSuggestedPrice(YFELD)
		}
	}
	quit
	
	
GetCost(pfltCost1,pfltCost2,pblnAccept)
	;-------------------------------------------------------------------------------
	; Determine which cost to use.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 31-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new fltCost

	if pblnAccept {
		set fltCost = pfltCost2
	} else {
		set fltCost = pfltCost1
	}
	quit fltCost
	
	
CalculatePrice(&YFELD,pidRuleHeader,pidLocn)
	;-------------------------------------------------------------------------------
	; Calculate the Price.
	;
	; Inputs: YFELD - objINPP01PreviewLine
	;
	; Returns:
	;
	; History:
	; 31-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new fltCost,idRuleLine,objINART
	
	set objINART = $get(^INART(YM,$$$INPP01PreviewLineItem(YFELD),1))
	
	set fltCost    = $$GetCost($$$INPP01PreviewLineSystemPackCost(YFELD),$$$INPP01PreviewLineNewPackCost(YFELD),$$$INPP01PreviewLineAccept(YFELD))
	set idRuleLine = $$GetRule^INPP01PreviewLine(pidRuleHeader,pidLocn,$$$INARTPriceCategory(objINART)," ",fltCost)
	if idRuleLine'="" {
		set $$$INPP01PreviewLineSuggestedPrice(YFELD) = $$GetPrice^INPP01Preview(pidRuleHeader,idRuleLine,fltCost)	
		set $$$INPP01PreviewLineVariance(YFELD)       = $$CalculateVariance($$$INPP01PreviewLineFrozenPrice(YFELD),$$$INPP01PreviewLineSuggestedPrice(YFELD))
	}
	set $$$INPP01PreviewLinePlanNo(YFELD) = idRuleLine
	quit (idRuleLine'="")
	
	
CalculateVariance(pfltPrice1,pfltPrice2)
	;-------------------------------------------------------------------------------
	; Calculate the variance
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 31-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new fltVariance

	if +pfltPrice1=+pfltPrice2 {
		set fltVariance = 0
	
	} elseif +pfltPrice1=0 {
		set fltVariance = "###"
	
	} else {
		set fltVariance = $zabs($justify(((pfltPrice2-pfltPrice1)*100/pfltPrice1),0,2))_"%"
	}

	quit fltVariance
	
	
GetRuleObj(YKEY,YFELD)
	;-------------------------------------------------------------------------------
	; Determine which rule should be used to determine a price.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 31-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idINART,idxCategory,objINPP01Preview,strRule
	
	set strRule = ""
	
	set idINART = $$$INPP01PreviewLineItem(YFELD)
	set idxCategory = " "

	set objINPP01Preview = $$$GRIDYFELDContainer
	if objINPP01Preview="" set objINPP01Preview = $get(^INPP01Preview(YM,YKEY,1))
	set strRule = $$GetRule($$$INPP01PreviewPricePlanRule(objINPP01Preview),$$$INPP01PreviewLocation(objINPP01Preview),$$$INARTPriceCategory($get(^INART(YM,idINART,1)))," ",$$$INPP01PreviewLineNewPackCost(YFELD))
	quit strRule


GetRule(pidRuleHeader,pidLocn,pidCategory,pidItemGroup,pidLow)
	;-------------------------------------------------------------------------------
	; Determine which rule should be used to determine a price.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 31-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new idxCategory,idxItemGroup,idxLocn,idxLow,idxRule,idxRuleHeader,strRule
	
	set strRule       = ""
	set idxRuleHeader = $$$Index(pidRuleHeader)
	set idxLocn       = $$$Index(pidLocn)
	set idxCategory   = $$$Index(pidCategory)
	set idxItemGroup  = $$$Index(pidItemGroup)
	set idxLow        = +pidLow
	
	if strRule="" set strRule = $$GetRuleA(idxRuleHeader,idxLocn,idxCategory,idxItemGroup,idxLow)
	if strRule="" set strRule = $$GetRuleA(idxRuleHeader,idxLocn,idxCategory," ",         idxLow)
	if strRule="" set strRule = $$GetRuleA(idxRuleHeader," ",    idxCategory," ",         idxLow)
	if strRule="" set strRule = $$GetRuleA(idxRuleHeader,idxLocn," ",        " ",         idxLow)
	if strRule="" set strRule = $$GetRuleA(idxRuleHeader," ",    " ",        " ",         idxLow)

	;if strRule'="" set strRule=$order(^INPP01GenRuleLines(YM,1,idxRuleHeader,idxLocn,idxCategory,idxItemGroup,strRule,idxRuleHeader,""))
	quit strRule
	
	
GetRuleA(pidxRuleHeader,pidxLocn,pidxCategory,pidxItemGroup,pidxLow)
	;-------------------------------------------------------------------------------
	; Determine which rule should be used to determine a price.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 31-Aug-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	new strRule
	
	if $data(^INPP01GenRuleLines(YM,1,pidxRuleHeader,pidxLocn,pidxCategory,pidxItemGroup,pidxLow)) {
		set strRule = pidxLow
	} else {
		set strRule = $order(^INPP01GenRuleLines(YM,1,pidxRuleHeader,pidxLocn,pidxCategory,pidxItemGroup,pidxLow),-1)
	}
	if strRule'="" set strRule = $order(^INPP01GenRuleLines(YM,1,pidxRuleHeader,pidxLocn,pidxCategory,pidxItemGroup,strRule,pidxRuleHeader,""))
	
	quit strRule
	
	
OnClick(pintCol,GDATA,pblnShift,pblnCtrl)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 02-Sep-2009	shobby	SR16511: Created
	;-------------------------------------------------------------------------------
	if $$$INPP01PreviewLineAccept(GDATA) && ($$$INPP01PreviewLineNewPackCost(GDATA)="") {
		if (pblnCtrl="true") {
			set $$$INPP01PreviewLineNewPackCost(GDATA )= $$$INPP01PreviewLineManualPackCost(GDATA)
		
		} else {
			set $$$INPP01PreviewLineNewPackCost(GDATA) = $$$INPP01PreviewLineSystemPackCost(GDATA)
		}
	}
	quit
	
]]></Routine>
</Export>