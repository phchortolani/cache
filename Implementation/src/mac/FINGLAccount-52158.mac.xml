<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLAccount" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLAccount 
	
#include FINConst
#include COMConst
#include INConst
#include COMSYS
	
	;shobby & Steve test for ASDE
	
	
OnAfterPrimaryKey(pYKEY)
	;-------------------------------------------------------------------------------
	; BZR Test
	;-------------------------------------------------------------------------------
	if $get(pYKEY)'="" {
		do CheckCanDelete^FINGLAccountProcess(pYKEY,YFORM)
	}
	do CheckSecurity^FINGLAccountProcess(pYKEY)
	quit
	
BeforeButtonLine()
	;-------------------------------------------------------------------------------
	; Code to run BeforeButtonLine
	; 
	; History
	; 20-Mar-2003	shobby		Call to CheckForeignCurrencyField
	;-------------------------------------------------------------------------------
	do CheckForeignCurrencyField^FINGLAccountProcess()
	quit
	
DefaultBudget(Form="",Piece="")
	;-------------------------------------------------------------------------------
	; Description
	; Gets the Key of the Default budget to show on the Budget
	; Tab of FINGLAccount
	;
	; History
	; 14-Apr-2005	RobertW		SR12159: Make sure that FINGLTranType is no longer shared.
	; 05-Mar-2004	SCR			Check for last data (Optional)
	; 21-Feb-2003	shobby		Creation
	;-------------------------------------------------------------------------------
	new Default
	
	set Default=""
	if (Form'="")&&(Piece) {
		set Default=$$LastData^FINSYS(Form,Piece,"M")
	}
	if Default="" {
		set Default=$order(^FINGLTranTypes(0,1,1,Default))  ;key of first budget
	}
	quit Default
	 
DefaultDate(DaysBack=0,Form="",Piece="")
	;-------------------------------------------------------------------------------
	; Get the default date
	;
	; History
	; 05-Mar-2004	SCR		Created
	;-------------------------------------------------------------------------------
	new Default
	set Default=""
	if (Form'="")&&(Piece) {
		set Default=$$LastData^FINSYS(Form,Piece,"M")
	}
	if Default="" {
		set Default=$h-DaysBack
	}
	quit Default
	
GetAccountTotal(pidAccount,pidAccountAmountType)
	;-------------------------------------------------------------------------------
	;
	;-------------------------------------------------------------------------------
	new curAmount
	set curAmount=0
	if $get(pidAccountAmountType)="" set pidAccountAmountType="BAL"
	if pidAccount'="" set curAmount=+$get(^FINGLAccountTotal(0,pidAccount,pidAccountAmountType,1))
	quit curAmount
	
GetAccountTotalForeignCurrency(pidAccount)
	;-------------------------------------------------------------------------------
	; Foreign Currency amount total for this account
	;
	; History
	; 02-Jun-2004	SCR			FC Update
	; 17-Feb-2003	shobby		Creation
	;-------------------------------------------------------------------------------
	new curAmount,Foreign
	set Foreign=0
	if $get(pidAccount)'="" {
		set curAmount=$get(^FINGLAccountTotal(0,pidAccount,"BAL",1))
		set Foreign=$$$FCAmount(curAmount)
	}
	quit Foreign
	
CanDelete(YKEY)
	;-------------------------------------------------------------------------------
	; 
	; History
	; 05-Feb-2003	shobby	Split into two methods.
	; 05-Feb-2003	shobby	Put additional test for Transactions.
	; 22-Sep-2003	SCR		Changed Form Usage from 'Execute Before Deletion Data
	; 						Record ' to 'Execute Before Delete Possibility'  
	;-------------------------------------------------------------------------------
	new strStatus,strMessage
	
	set strStatus =$$$OK
	set strMessage=""
	set strStatus =$$CanDeleteAccount^FINGLAccountProcess(YKEY)
	if $$$ISERR(strStatus) {
		set Q=1
		set strMessage=$$$Text(strStatus,0)
	}
	quit strMessage
	
OnBeforeDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Checks whether this item can be deleted.
	; 
	; History
	;  1-Oct-2004		JW		SR10409 Added CheckRollUps
	; 09-Mar-2004		shobby	Creation
	;-------------------------------------------------------------------------------
	; Don't break the following line up into multiple lines.  'Structure' in 'Developer Tools' looks at this.
	new Status
 
	set Status = $$CheckLinks^FINSYS(pYKEY,$lb("FINGLAccrualAccount","FINSYSAccountGroup","FINAPAccount","FINGLBank","FINGLDistributionAccount","FINGLDistribution","FINAPPaymentAccount","FINGLAccount","FINARAccount","FINGLTranLine","FINAPAccounts","FINAPADJLine"),"FINGLAccount")
	if $$$ISOK(Status) set Status=$$CheckRollUps^FINGLStatAccount(pYKEY)
	quit Status
	
OnAfterDataFields(pYKEY)
	;-------------------------------------------------------------------------------
	; YSEITE is the tab number - displays different information as the form display
	; changes.
	; 			1	General				5	Foreign Curr
	; 			2	Transactions		6	Budget
	; 			3	Period Totals		7	Check
	; 			4	Links				8	Statistical
	;
	; Returns:
	;
	; History:
	; 11-Sep-2006	Steve S	SR14286 No need to show transactions anymore.
	; 24-Nov-2004	PO		SR11005 Use the edit grid for budgets (reverted)
	; 05-Sep-2004	JW		SR10409 : Stat accounts - repost warning and links.
	; 02-Jun-2004	SCR		Moved Transactions
	; 15-Mar-2004	SCR		Changed Budget Page to 6
	; 06-Feb-2004	shobby	Put a grid showing the different types of totals
	; 						In this account. (AccountTypeTotals)
	;-------------------------------------------------------------------------------
 	new strMessage
 	
 	if YSEITE=1 {
	 	do RePostWarning^FINGLStatAccount()
	 	do AccountTypeTotals^FINGLAccountTran()
 	// SR14286: Commented
 	//} elseif YSEITE=2 {
	//	do Transactions^FINGLAccountTran()
	} elseif YSEITE=3 {
		do PeriodsForAccount^FINGLPeriodTotal($get(pYKEY),$get(VORG(4)),$get(VORG(5)),$get(VORG(6)))
	} elseif YSEITE=4 {
		do Links()
	} elseif YSEITE=6 {
		;do LoadGrid()
		do BudgetsForAccount^FINGLPeriodTotal($get(pYKEY),$get(VORG(8)),$get(VORG(7)),$get(VORG(9)))
	} elseif YSEITE=7 {
		set strMessage=$$CanDelete(pYKEY)
		if strMessage'="" write "<B>"_strMessage_"</B>"	
	} elseif YSEITE=8 {
		do Links^FINGLStatAccount()
	}
	quit
	
SearchSet()
    ;-------------------------------------------------------------------------------
    ; Start Period Search
    ;
    ; Returns:
    ;
    ; History:
	; 13-Sep-2012	SCR		SR18117: Save current values
    ;-------------------------------------------------------------------------------

	set ^CacheTempFINGL(YUSER,"Acc","Recall") 	= $get(^WWWDATEN(0,+$h,YUSER,YFORM,"M",1)) ;SR18117

	do GoToForm^COMUtilForm(YFORM,YKEY,YSEITE,"")
	quit
	
GetExtraData(pidAccount,pstrRelationship="")
    ;-------------------------------------------------------------------------------
    ; Gets the details to display on the screen
    ;
    ; Returns:
    ;
    ; History:
    ; 18-Aug-2004	Shobby	Created (SR10265)
    ;-------------------------------------------------------------------------------
	new fltTotal,lstExtraData,objFINGLAccount,strAccountType,strAccountUsage,strDescription
 
	set lstExtraData=""
	if $get(pidAccount)'="" {
		set objFINGLAccount=$get(^FINGLAccount(0,pidAccount,1))
		set strDescription =$$$FINGLAccountDescription(objFINGLAccount)
		set fltTotal       =$$GetAccountTotal(pidAccount)
		set strAccountType =$$GetEnumDescription^COMUtils("FINGLACCOUNTTYPE",$$$FINGLAccountAccountType(objFINGLAccount))
		set strAccountUsage=$$GetEnumDescription^COMUtils("FINGLACCOUNTUSAGE",$$$FINGLAccountAccountUsage(objFINGLAccount))
		set lstExtraData   =$lb(strDescription,fltTotal,strAccountType,strAccountUsage,pstrRelationship)
	}
	quit lstExtraData
	
GetImage(pintUsage)
    ;-------------------------------------------------------------------------------
    ; Works out an appropriate image for the node based on whether it is a parent
    ; or transactions account
    ;
    ; Returns:
    ;
    ; History:
    ; 18-Aug-2004	Shobby	Created (SR10265)
    ;-------------------------------------------------------------------------------
	new strImage
	
	set strImage=""
	if pintUsage=$$$EnumFINGLACCOUNTUSAGETransaction {
		set strImage="html.gif"
	} 
	quit strImage
	
AddParent(pidAccount)
    ;-------------------------------------------------------------------------------
    ; Recursively adds all the ancestors of the account
    ;
    ; Returns:
    ;
    ; History:
    ; 18-Aug-2004	Shobby	Created
    ;-------------------------------------------------------------------------------
	new idAccountParent,lstExtraData,objFINGLAccount,strParent
	
	if $get(pidAccount)'="" {
		set objFINGLAccount=$get(^FINGLAccount(0,pidAccount,1))
		set idAccountParent=$$$FINGLAccountParent(objFINGLAccount)
		set lstExtraData   =$$GetExtraData(pidAccount,"Parent")
		if idAccountParent="" {
			set strParent=""
		} else {
			set strParent="!"_idAccountParent
		}
		do AddNode^COMTree(strParent,"!"_pidAccount,pidAccount,pidAccount,,"FINGLAccount",,,lstExtraData,,,pidAccount,1)
		do AddParent(idAccountParent)
	}	
	quit
	
Links()
    ;-------------------------------------------------------------------------------
    ; Display all the account links in a tree structure.
    ;
    ; Returns:
    ;
    ; History:
    ; 23-Sep-2004	Paul K	Only add parent nodes if there is a parent (fixed 
    ; 						clicking on top account bug)
    ; 18-Aug-2004	Shobby	Created (SR10265)
    ;-------------------------------------------------------------------------------
	new fltTotal,idAccount,idAccountChild,idAccountParent,idProfile,lstExtraData
	new objFINGLAccount,objFINGLAccountParent,objFINGLProfile
	new strAccountType,strAccountUsage,strDescription,strImage,strParent,strPrefix
	
	set idAccount=$get(YKEY)
	if idAccount'="" {
		set objFINGLAccount=$get(^FINGLAccount(0,idAccount,1))
		if objFINGLAccount'="" {
			write !,"&nbsp;"
			do StartTree^COMTree("")
			
			; Heading
			set lstExtraData=$lb($$$StrFINGLAccountDescription,$$$Text("Fin00071",0),$$$StrFINGLAccountAccountType,$$$StrFINGLAccountAccountUsage,$$$Text("Fin00512",0))  ;Total ;Relationship
			set strParent="!!!"
			do AddNode^COMTree("",strParent,"","  "_$$$Text("Fin00318",0),"NOIMAGE",,,1,lstExtraData,1,,,1)   ;Number
					
			; Parent
			set idAccountParent=$$$FINGLAccountParent(objFINGLAccount)
			if idAccountParent'="" {
				set strParent="!"_idAccountParent
				do AddParent(idAccount)
			}
			
	
			set objFINGLAccount=$get(^FINGLAccount(0,idAccount,1))
			; Profile
			set idProfile=$$$FINGLAccountProfileIndicator(objFINGLAccount)
			if idProfile'="" {
				set objFINGLProfile=$get(^FINGLProfile(0,idProfile,1))
				if objFINGLProfile'="" {
					set strImage=$$GetImage($$$FINGLProfileAccountUsage(objFINGLProfile))
					set strDescription=$$$FINGLProfileDescription(objFINGLProfile)
					set fltTotal=""
					set strAccountType=$$$StrFINGLAccountProfileIndicator
					set strAccountUsage=$$GetEnumDescription^COMUtils("FINGLACCOUNTUSAGE",$$$FINGLProfileAccountUsage(objFINGLProfile))
					set lstExtraData=$lb(strDescription,fltTotal,strAccountType,strAccountUsage,"Profile")
					do AddNode^COMTree(strParent,"!!!!","!!!!"_idProfile,idProfile,strImage,"FINGLProfile",,,lstExtraData,,,idProfile,1)
				}
			}
			
			; Me
			set lstExtraData=$$GetExtraData(idAccount,"")
			set strImage=$$GetImage($$$FINGLAccountAccountUsage(objFINGLAccount))
			do AddNode^COMTree(strParent,"!"_idAccount,idAccount,idAccount,strImage,"FINGLAccount",,1,lstExtraData,,,idAccount,1)
			
			; Children
			set idAccountChild=""
			for {
				set idAccountChild=$order(^FINGLAccounts(0,50,idAccount,idAccountChild))
				quit:idAccountChild=""
				
				set lstExtraData=$$GetExtraData(idAccountChild,"Child")
				set objFINGLAccount=$get(^FINGLAccount(0,idAccountChild,1))
				set strImage=$$GetImage($$$FINGLAccountAccountUsage(objFINGLAccount))
				do AddNode^COMTree("!"_idAccount,idAccountChild,idAccountChild,idAccountChild,strImage,"FINGLAccount",,,lstExtraData,,,,1)
			}
			
		;	do AddNode(pidParent,pidNode,pstrTitle,pstrText,pstrImage,pstrForm="",pstrParam="",pblnHighLight="",pstrExtraData="",pblnLinkStopped="",plngPage="",plngOverRideId="")
			do StopTree^COMTree(1)
		}
	}
	quit
	
Links2()
	;-------------------------------------------------------------------------------
	; Show Links for the Account
    ;
    ; History:
	; 13-Jun-2003	shobby	Defined some variables
	; 21-May-2003	SCR		Check for undefined data
	;-------------------------------------------------------------------------------
	new idAccount,idChild,idParent,idProfile,obj,objAccount,objProfile
	
	do Start^COMTable($listbuild("Type","Number","Description","Total","Usage"))
	set idAccount=YKEY
	if idAccount'="" {
		set objAccount=$get(^FINGLAccount(0,idAccount,1))
		
		set idProfile=$$$FINGLAccountProfileIndicator(objAccount)
		if idProfile'="" {
			set objProfile=$get(^FINGLProfile(0,idProfile,1))
			if objProfile'="" {
				do NewLine^COMTable()
				do InsertCell^COMTable($$$StrFINGLAccountProfileIndicator,"FINGLProfile",idProfile)     ;Parent Type
				do InsertCell^COMTable(idProfile,"FINGLProfile",idProfile)
				do InsertCell^COMTable($$$FINGLProfileDescription(objProfile),"FINGLProfile",idProfile) ;Parent Description
				do InsertCell^COMTable("","FINGLProfile",idProfile)                                     ; Parent Total
				do InsertCell^COMTable($$GetEnumDescription^COMUtils("FINGLACCOUNTUSAGE",$$$FINGLProfileAccountUsage(objProfile)),"FINGLProfile",idProfile) ;Parent Usage
				do EL^WWWTAB
			}
		}
		
		set idParent=$$$FINGLAccountParent(objAccount)
		if idParent'="" {
			set obj=$get(^FINGLAccount(0,idParent,1))
			do NewLine^COMTable()
			do InsertCell^COMTable($$GetEnumDescription^COMUtils("FINGLACCOUNTTYPE",$$$FINGLAccountAccountType(obj)),YFORM,idParent)
			do InsertCell^COMTable(idParent,YFORM,idParent) ;Parent Number
			do InsertCell^COMTable($piece(obj,Y,2),YFORM,idParent) ;Parent Description
			do InsertCurrencyCell^COMTable($$GetAccountTotal(idParent),0,YFORM,idParent) ; Parent Total
			do InsertCell^COMTable($$GetEnumDescription^COMUtils("FINGLACCOUNTUSAGE",$$$FINGLAccountAccountUsage(obj)),YFORM,idParent)
			do EL^WWWTAB
		}
		
		set idChild=""
		for {
			set idChild=$order(^FINGLAccounts(0,50,idAccount,idChild))
			quit:idChild=""
			
			set obj=$get(^FINGLAccount(0,idChild,1))
			do NewLine^COMTable()
			do InsertCell^COMTable($$GetEnumDescription^COMUtils("FINGLACCOUNTTYPE",$$$FINGLAccountAccountType(obj)),YFORM,idChild)
			do InsertCell^COMTable(idChild,YFORM,idChild) ;Child Number
			do InsertCell^COMTable($$$FINGLAccountDescription(obj),YFORM,idChild) ;Child Description
			do InsertCurrencyCell^COMTable($$GetAccountTotal(idChild),0,YFORM,idChild) ; Child Total
			do InsertCell^COMTable($$GetEnumDescription^COMUtils("FINGLACCOUNTUSAGE",$$$FINGLAccountAccountUsage(obj)),YFORM,idChild)
			do EL^WWWTAB
			}
		}
	do Stop^COMTable()
	quit
	
GetFullID(pstrId)
	quit "0||"_$get(pstrId)_"||1"
	
GetTransactionType(pstrId)
	;-------------------------------------------------------------------------------
	;-------------------------------------------------------------------------------
	new strResult
	
	set strResult=""
	if $get(pstrId)'="" {
		xecute "set strResult=$get(^FINGLTranType(pstrId))"
		if strResult'="" {
			set strResult=$piece(strResult,Y,1)
		}
	}
	quit strResult
	 
	 /*
	 SR14286: Commented
 
ExecuteOnChange(pstrField)
	;-------------------------------------------------------------------------------
    ;
    ; History:
	; 02-Jun-2004	SCR		Moved Transactions
	;-------------------------------------------------------------------------------
	if pstrField="TransEndDate" do
	. do Transactions^FINGLAccountTran()
	
	if pstrField="TransStartDate" do
	. set %("VAR","YFORM")=YFORM
	. do ^WWWFORM
	. do FF^WWWW
	. do Transactions^FINGLAccountTran()
	if pstrField="OLoad" do
	
	quit
	*/
 
BeforeSave(pYKEY,&pYFELD)
	;-------------------------------------------------------------------------------
	; @ Net Manger interface to checking the account
	; 
	; History:
	; 18-Jul-2006	JW		SR14832: Cleaned up status usage. Store account pieces.
	; 						SR14862: Moved BAS Codes into VARADFINGLAccount
	; 21-Dec-2004	Steve S	SR11281: Added code to check for parent accounts
	; 						having BAS Codes before saving.
	; 20-Dec-2004	Steve S	SR11282: Added check to make sure at most one PAYG
	; 						option has been specified.
	;-------------------------------------------------------------------------------
	new strStatus,strBASCode
	
	set strStatus=$$AccountValid^FINGLAccountProcess(pYKEY,pYFELD)
	
	/*	SR14862
	set strBASCode=$$$FINGLAccountFREE1($get(Data)) 
	
	if (Status=$$$OK)&&((strBASCode="T1")||(strBASCode="T7")) { ;SR11282
		set Status=$$CheckPAYGCode^FINGLAccountProcess($get(pYKEY),strBASCode)
	}
	
	if (Status=$$$OK)&&(strBASCode'="")&&($$$FINGLAccountParent(Data)'="") { ;SR:11281
		set Status=$$CheckParentBASCodes^FINGLAccountProcess($get(pYKEY),$get(Data))	
	}
	*/
	
	if $$$ISOK(strStatus) { //SR14832 - If record hasn't been previously saved, store pieces
		if '$data(^FINGLAccount(0,pYKEY,1)) {
			do StorePieces(pYKEY,.pYFELD)
		}
		
	} else {
		set Q=$$$QDontSave
		do ReturnError^COMUtils(strStatus)
	}
	
	quit
	
	
StorePieces(pidAccount,&pobjAccount)
	;-------------------------------------------------------------------------------
	; Store pieces of the account id in free fields - as specified in general parameters.
	;
	; Params:	pidAccount,pobjAccount - key,record of FINGLAccount
	;
	; ByRefs:	pobjAccount - with updated free fields
	;
	; Returns:
	;
	; History:
	; 06-Sep-2006	JW		SR14885: Remove leading zeroes from numbers.
	; 18-Jul-2006	JW		SR14832: Created
	;-------------------------------------------------------------------------------
	new objSetup,strDelim,strPieces,loop,idField,intPiece,strValue
	
	set objSetup = $get(^FINGeneralSetup(0,0,1))
	set strDelim = $$$FINGeneralSetupAccountDelimiter(objSetup)		// If we have a delimiter defined
	if strDelim'="" {
		set strPieces = $$$FINGeneralSetupStoreAccountPieces(objSetup)		// Put the pieces of the key
		for loop=1:1:$length(strPieces) {									// into the defined free fields
			set idField = $piece(strPieces,";",loop)
			
			if idField'="" {
				set strValue = $piece(pidAccount,strDelim,$increment(intPiece))
				if strValue?1.N {		//SR14885
					set strValue = +strValue
				}
				set $piece(pobjAccount,Y,idField) = strValue
			}
		}
	}
	
	quit
 
 
StorePiecesAllAccounts(pidLog)
	;-------------------------------------------------------------------------------
	; Method Usage
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Jul-2006	JW		SR14832: Created
	;-------------------------------------------------------------------------------
	quit:$get(pidLog)=""
	new idAccount,objAccount,strStatus,idLogEntry,tmsLast
	
	set strStatus = $$$OK
	set tmsLast = ""
	
	$$$Order2(^FINGLAccount,0,idAccount)
		set objAccount = $get(^FINGLAccount(0,idAccount,1))
		do StorePieces(idAccount,.objAccount)
		set strStatus = $$$Save("FINGLAccount",idAccount,objAccount,1)
		
		quit:$$$ISERR(strStatus)	// Stop update if come across error
		
		if (tmsLast'=$horolog) {
			do AddMessage^COMLog(pidLog,$$$Text($listbuild("Fin01068",idAccount)),.idLogEntry)
			set tmsLast=$horolog		;Account %1 successful
		}
	$$$End
	
	if $$$ISOK(strStatus) {
		do AddMessage^COMLog(pidLog,$$$Text("Fin00027"))  ;Completed
	} else {
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Fin01069",idAccount))_": "_$$$Text(strStatus))	;Account %1 unsuccessful
		do AddMessage^COMLog(pidLog,$$$Text($listbuild("Com00253")))  ;Update stopped before completion
	}
	quit strStatus
	
	
OnHold(pYKEY,pYELD)
    ;-------------------------------------------------------------------------------
	; Modify, from a button, the OnHold flag of an account
	; pYELD passed in by reference
	; History
	; 19-Mar-2003	shobby	Creation
    ;-------------------------------------------------------------------------------
	new objAccount,strStatus
	
	if pYKEY'="" {
		set objAccount=$get(^FINGLAccount(0,pYKEY,1))
		if $$$FINGLAccountOnHold(objAccount) {
			set $$$FINGLAccountOnHold(objAccount)=""
		} else {
			set $$$FINGLAccountOnHold(objAccount)=1
		}
		set strStatus = $$$Save("FINGLAccount",pYKEY,objAccount,$$$YES)
		set pYELD=objAccount
	}
	do ^WWWFORM
	quit
	
	
Test()
	write "Testing..."
	do ^WWWFORM
	quit
	
	
GetNumberOfTransactionAccounts()
    ;-------------------------------------------------------------------------------
    ; Find out the Number of Transaction Accounts in the system.
    ;
    ; Returns:
    ;
    ; History:
    ; 18-May-2004   Shobby   Created (TR007710)
    ;-------------------------------------------------------------------------------
	new idAccount,intCount
 
	set idAccount=""
	for intCount=0:1 {
		set idAccount=$order(^FINGLAccounts(0,3,1,idAccount))
		quit:idAccount=""
	}
	quit intCount
	
SetupTempList(pstrRelation)
	;-------------------------------------------------------------------------------
	; Build list of General Legder Accounts that only includes the accounts
	; of type "Parent".
	; 
	; History:
	; 22-Nov-2004	SCR		SR11026: WWWSPEI too slow, Changes to direct set & Use Index 50  
	; 19-Oct-2004	PO		Created SR10620
	;-------------------------------------------------------------------------------
	new idAccNum,objAccount
	
	if $get(pstrRelation)="ParentAcc" {
		kill ^COMTempList(0,YUSER,pstrRelation)
		set idAccNum=""
		for {
			set idAccNum=$order(^FINGLAccounts(0,50,idAccNum))      ; FIXME : $$$Index format might not match for $get
			quit:idAccNum=""
			set objAccount=$get(^FINGLAccount(0,idAccNum,1))
			if $$$FINGLAccountAccountUsage(objAccount)=2 {		;Parent Account
				;do Save^FINSYS("COMTempList",YUSER_","_pstrRelation_","_idAccNum,$$$FINGLAccountDescription(objAccount),1)
				set ^COMTempList(0,YUSER,pstrRelation,idAccNum)=$$$FINGLAccountDescription(objAccount)
			}
		}
	}
	quit
	
	
GetParent(pidAccount)
    ;-------------------------------------------------------------------------------
    ; Given a GL Account, find its parent (if one exists)
    ;
    ; Returns: idparentAcc (String)
    ;
    ; History:
    ; 21-Dec-2004	Steve S		Created
    ;-------------------------------------------------------------------------------
	new objAccount,idparentAcc
	
	set idparentAcc=""
	
	if $get(pidAccount)'="" {
		set objAccount=$get(^FINGLAccount(0,pidAccount,1))
		set idparentAcc=$$$FINGLAccountParent(objAccount)	
	} 
	
	quit idparentAcc
	
	
OnBlurBASCode(pstrAccountData)
    ;-------------------------------------------------------------------------------
    ; Code to execute when a BAS Code has been selected
    ;
    ; Returns: nothing
    ;
    ; History:
    ; 21-Dec-2004		Steve S			Created (SR:11280)
    ;-------------------------------------------------------------------------------
	new strBASCode,strAccountType,strError,strAccountTypeText
	
	set strBASCode=$$$FINGLAccountFREE1(pstrAccountData)
	set strAccountType=$$$FINGLAccountAccountType(pstrAccountData)
	
	if (strBASCode'="")&&(strAccountType'="") {
		if (strAccountType'=$$$EnumFINGLACCOUNTTYPEIncome)&&
		   (strAccountType'=$$$EnumFINGLACCOUNTTYPEExpense)&&
		   (strAccountType'=$$$EnumFINGLACCOUNTTYPELiability)&&
		   (strAccountType'=$$$EnumFINGLACCOUNTTYPEEquity) {
			   set strAccountTypeText=$$GetEnumDescription^COMUtils("FINGLACCOUNTTYPE",strAccountType)
			   set strError=$$$Text($lb("Fin00537",strAccountTypeText)) ; WARNING: BAS Codes are normally not applied to accounts of type ´%1´.
			   write "alert("""_$zcvt(strError,"O","JS")_""");"	   
		}
	}
 
	quit
	
OnBlurAccountType(pstrAccountData="")
    ;-------------------------------------------------------------------------------
    ; Code to execute when an Account Type has been selected
    ;
    ; Returns: nothing
    ;
    ; History:
    ; 21-Dec-2004	Steve S		Created (SR:11280)
    ;-------------------------------------------------------------------------------
	do OnBlurBASCode(pstrAccountData)
	
	quit
	
	
ValidateAccount(pidAccount="",curAmount="")
    ;-------------------------------------------------------------------------------
    ; Ensure that the account is postable.
    ;
    ; Returns:DCM Status
    ;
    ; History:
    ; 23-Jan-2006	RPW		SR13816: Copied from FINGLTranIC as it makes more sense to be here.
    ;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus=$$ValidateAccount^FINGLAccountTran(pidAccount)
	
	if $$$ISOK(strStatus) {
		set strStatus=$$CanPostToThisAccount^FINGLAccountProcess(pidAccount,curAmount)
	}
	
	quit strStatus
	
	
IsUsable(YKEY,YFORM)
	;-------------------------------------------------------------------------------
	; Should a given account be used on a given form?
	; 
	; Params:	YKEY	- FINGLAccount id
	; 			YFORM	- Current form
	;
	; ByRefs:	nil
	;
	; Returns:	status - whether can use
	;
	; History:
	; 24-Oct-2006	JW		SR15101: Added FINGeneralSetup
	; 23-Jun-2006	JW		SR12775: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	
	// TODO - add in the following forms: (need to get COMView Custom to return correct YFORM)
	//  	FINSYSAccountGroupLine
	//		FINARBankAccount
	//		FINAPPaymentAccount
	
	if $listfind($listbuild("FINAPADJLine","FINAPInvCharge",
							"FINAPInvCharge2","FINAPInvoice",
							"FINARADJLine","FINARInvLine",
							"FINGLBankReconLine","FINGLJournalLine",
							"FINGeneralSetup"),YFORM) {
		
		set strStatus = $$PostableAccount^FINGLAccountTran(YKEY)
	}
	
	quit strStatus
	
]]></Routine>
</Export>