<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLProfileSave" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLProfileSave
	;-------------------------------------------------------------------------------
	; History:
	; 30-Sep-2004	JW		Created
	;-------------------------------------------------------------------------------
#include COMSYS
#include FINConst
	
OnBeforeSave(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; @ Net Manger interface to checking the profile
	; 
	; History:
	; 18-Jul-2006	JW		SR14862: Moved BAS Codes into VARADFINGLProfile
	; 04-Jul-2005	RobertW	SR12527: Fixed Status usage for ReturnError
	; 07-Feb-2005	shobby	Renamed from BeforeSave, rename YFELD from Data
	; 21-Dec-2004	SteveS	SR11281 : Added code to check for parent profiles
	; 							having a BAS Code before saving.
	; 20-Dec-2004	SteveS	SR11282 : Added check to make sure at most one PAYG
	; 							option has been specified.
	;-------------------------------------------------------------------------------
	new Status,strBASCode
	
	set Status=$$ProfileValid(pYKEY,pYFELD) 
	/* SR14862
	set strBASCode=$$$FINGLProfileFREE1($get(pYFELD))
	
	if ($$$ISOK(Status))&&((strBASCode="T1")||(strBASCode="T7")) { ;SR11282
		set Status=$$CheckPAYGCode($get(pYKEY),strBASCode)
	}
	
	if ($$$ISOK(Status))&&(strBASCode'="")&&($$$FINGLProfileParent(pYFELD)'="") { ;SR:11281
		set Status=$$CheckParentBASCodes($get(pYKEY),$get(pYFELD))	
	}
	*/
	if $$$ISERR(Status) {
		set Q=$$$QDontSave
		do ReturnError^COMUtils(Status)
	}
	quit
	
	
ProfileValid(pidProfile="",pobjProfile="")
    ;-------------------------------------------------------------------------------
    ; Profile validity checking
    ;
    ; Returns: status
    ;
    ; History:
    ; 15-Mar-2005	GRF		Boolean Macros
    ; 14-Mar-2005	Paul K	Validate the profile id. SR#11867
    ; 07-Feb-2005	shobby	Code checked YFELD.
    ; 01-Oct-2004	JW		Created
    ;-------------------------------------------------------------------------------
	new strStatus,ProfileLoop,strProfile,idProfile
 
	set idProfile=pidProfile
	set strStatus=$$$OK
	
	for {
		quit:'$find(idProfile,"{")
		
		set strProfile=$piece($piece(idProfile,"{",2),"}",1)
		if '$data(^FINGLProfileCodeTypes(YM,1,$$$Index(strProfile))) {
			set strStatus=$listbuild("Fin00697",strProfile)  ; "%1 is an invalid profile code type."
		}
		quit:strStatus'=$$$OK
		set idProfile=$piece(idProfile,"{",1)_$piece(idProfile,"}",2,99)
	}
	if strStatus=$$$OK {
		if idProfile'=$zcvt(idProfile,"u") set strStatus=$listbuild("Fin00698",pidProfile)
	} ; "Profile code %1 contains invalid lower case characters."
	
	if ($$$FINGLAccountAccountType(pobjProfile)=$$$EnumFINGLACCOUNTTYPEStatistical) {
		if strStatus=$$$OK if $$$FINGLAccountParent(pobjProfile)'="" set strStatus=$listbuild("Fin00035")	      ; "Can't have a parent"
		set $$$FINGLAccountAccountUsage(pobjProfile) = ""  ; Change Statistical Profile's Usage to a null value.
	} else {
		if strStatus=$$$OK if $$$FINGLAccountParent(pobjProfile)=""         set strStatus=$listbuild("Fin00030")  ; "Must have a parent"
		if strStatus=$$$OK if $$$FINGLAccountAccountUsage(pobjProfile) = "" set strStatus=$listbuild("Fin00374")  ; "Must choose Account Usage"
	}
	
	quit strStatus
	
]]></Routine>
</Export>