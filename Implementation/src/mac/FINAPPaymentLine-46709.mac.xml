<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPPaymentLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPPaymentLine
	
#include COMConst
#include FINConst
#include COMSYS
 
#define YFORM "FINAPPaymentLine"
 
 
CheckForUnpostedSupplierPayments(YKEY="",YFELD="")
	;-------------------------------------------------------------------------------
	; Display a message and link if there are outstanding unposted payments in the system.
	;
	; Returns:
	;
	; History:
	; 22-Feb-2006	SC		SR13157: Update index number for FINAPPayments
	; 02-Jun-2005	shobby	Code Check.
	; 24-May-2005	shobby	Created SR12245
	;-------------------------------------------------------------------------------
	new idPayment,blnFound,objFINAPPaymentLine,idLine,idSupplier
	new idPaymentThis,idLineThis,idxGroup,idxLocn,objFINAPPayment,strText
	
	set blnFound      = $$$NO
	set idPaymentThis = $$$KEY1(YKEY)
	set idLineThis    = $$$KEY2(YKEY)
	
	if (idPaymentThis'="") {
		set objFINAPPayment = $get(^FINAPPayment(0,idPaymentThis,1))
		set idSupplier      = $$$FINAPPaymentLineSupplierNumber($get(YFELD))
		set idxLocn         = $$$Index($$$FINAPPaymentLocation(objFINAPPayment))
		set idxGroup        = $$$Index($$$FINAPPaymentGroup1(objFINAPPayment))
		
		if idSupplier'="" {
			set idPayment=""
			for {
				quit:blnFound
				set idPayment=$order(^FINAPPayments(0,61,0,idxLocn,idxGroup,idPayment)) ;SR13157
				quit:idPayment=""
				
				if idPayment'=idPaymentThis {
					set idLine=""
					for {
						quit:blnFound
						set idLine=$order(^FINAPPaymentLine(0,idPayment,idLine))
						quit:idLine=""
						
						set objFINAPPaymentLine = $get(^FINAPPaymentLine(0,idPayment,idLine,1))
						if idSupplier=$$$FINAPPaymentLineSupplierNumber(objFINAPPaymentLine) {
							set blnFound=$$$YES
						}
					}
				}
			}
		}
	}
	set strText="["_$$Status(YKEY)_"]["_$$CurrentCurrency^COMUtilCurrency()_"]"
	if blnFound {
		do DisplayMessage^COMUtils("FINAPPayment",idPayment,$listbuild("Fin00786",idSupplier,idPayment,idLine)," "_strText)
	} else {
		do DisplayText^COMUtilForm(strText,,,,1)
	}
	quit
 
OnAfterDataFields(YKEY,YSEITE,pYFELD)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 31-Oct-2005	PO		SR13760: Pass in YFELD.
	; 01-Jun-2005	shobby	Warning message if there are unposted supplier payments. (SR12245)
	; 26-May-2005	PO		Created SR:12050
	;-------------------------------------------------------------------------------
	if $$$CurrencyToUse="Base" {
		$$$StartScript()
		;write "<script type='text/javascript'> <!--",$$$CRLF
		do ToggleReadOnly^COMUtilForm($$$FldFINAPPaymentLinePrepayment,$$$YES)
		;write $$$CRLF,"// -->"
		;write $$$CRLF,"</script>"
		$$$EndScript()
	}
 
	do CheckForUnpostedSupplierPayments(YKEY,pYFELD)
	do ShowGrids(YKEY,YSEITE)
 
	quit
 
OnAfterButtonLine(pYKEY="")
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 13-Oct-2005	RPW		SR13678: Removed kill of ^CacheTemp(YUSER,$$$YFORM,"Flags")
	; 15-Jul-2005	RPW		SR12981: Move GetKey call to FINAPUtilities
	; 30-May-2005	SCR		SR:12220 Added Filter Status
	; 24-May-2005	PO		Created SR:12050 To enable FC support
	;-------------------------------------------------------------------------------
    new idSupplier,idPayment,idLine,objPayLine,strCurCode,blnDoKill
    new strText
 
	set blnDoKill = $$$NO
	kill ^CacheTemp(YUSER,$$$YFORM,"Display Currency")
	kill ^CacheTemp(YUSER,$$$YFORM,"Disable Coins")
 
	if $$GetKey^FINAPUtilities(pYKEY,.idPayment,.idLine) {
		set objPayLine = $get(^FINAPPaymentLine(0,idPayment,idLine,1))
		set idSupplier = $$$FINAPPaymentLineSupplierNumber(objPayLine)
 
		set strCurCode = $$GetFCCode^FINAPSupplier(idSupplier)
 
		if $$$CurIsFC(strCurCode) {
			if $get(^CacheTemp(YUSER,$$$YFORM,"Toggles","Currency"))'="Base" {
				set YOPTION=1
 
				set ^CacheTemp(YUSER,$$$YFORM,"Toggles","Currency") = "Foreign"
				set ^CacheTemp(YUSER,$$$YFORM,"Display Currency")   = strCurCode
				set ^CacheTemp(YUSER,$$$YFORM,"Disable Coins")      = $$$YES
			} else {
				set YOPTION=0
			}
		} else {
			set blnDoKill = $$$YES
		}
	} else {
		set blnDoKill=$$$OK
	}
 
	if blnDoKill {
		//kill ^CacheTemp(YUSER,$$$YFORM,"Flags") ; SR13678
		kill ^CacheTemp(YUSER,$$$YFORM,"Toggles")
	}
	
    do CheckForeignCurrencyFields(pYKEY)
	
	quit
 
ForeignCurrencyToBeUsed(pYKEY)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 15-Jul-2005	RPW		SR12981: Move GetKey call to FINAPUtilities
	; 15-Jun-2005	PO		SR:12589 Only check if record selected
	; 26-May-2005	PO		Created
	;-------------------------------------------------------------------------------
	new idPayment,idLine,blnReturn,objPayLine,strCurCode,idSupplier 
 
	set Q = $$$QSave
 
	if pYKEY'="" {
	   	set Q = $$$QDontSave_" "_$$$Text("Fin00702")  ;This record can only be shown in base currency as record is not linked to a foreign currency supplier.
	
		if $$GetKey^FINAPUtilities(pYKEY,.idPayment,.idLine) {
			set objPayLine = $get(^FINAPPaymentLine(0,idPayment,idLine,1))
			set idSupplier = $$$FINAPPaymentLineSupplierNumber(objPayLine)
			set strCurCode = $$GetFCCode^FINAPSupplier(idSupplier)
	
			if $$$CurIsFC(strCurCode) {
				set Q = $$$QSave
			}
		}
	}
	
	set blnReturn = 'Q
	quit blnReturn
	
	
OnBeforeSave(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Routine to do any checks before saving the record.
	; Check 1.  Payments must be greater than 0 (TrackReccord 005470)
	; 
	; History
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
	; 17-Jun-2005	PO		SR12626: Tidy up of FC payments
	; 02-Jun-2005	PO		SR12050: Ensure Payment value is in base currency
	; 09-May-2005	JW		SR12309: Convert amounts to FC if applicable
	; 08-Feb-2005	JW		SR11687: warning now before post, not save
	; 03-Nov-2003	shobby	SRTR0063670: Payments can not be less than 0 but can be
	; 							0 if processing against credits.
	; 10-Nov-2003	shobby	Payments can be less than 0 when processing unallocated
	; 							amounts as credits and discounts are on payments.
	; 26-Jun-2003	shobby	Creation
	;-------------------------------------------------------------------------------
	new strStatus,YQ,idSupplier,supplierFC,curPrepayment,curTotal,rate
	new arrGrid,totalInvoice,totalDiscount,invoicePayment,totalOwing
	new curTemp,curTemp2
		
	set strStatus     = $$$GRIDSave(pYKEY)
	set curPrepayment = $$$FINAPPaymentLinePrepayment(pYFELD)
	set curTotal      = $$$FINAPPaymentLineTotal(pYFELD)
 
	if $$$ISOK(strStatus) {
		// If supplier is FC, set payment and prepayment amounts to FC (so they get coins)
		// Do this onblur of these fields as well, so don't have to submit on change.
		
		set idSupplier=$$$FINAPPaymentLineSupplierNumber(pYFELD)
		set supplierFC=$$GetFCCode^FINAPSupplier(idSupplier)
		
		if supplierFC'="" { ; This was already forcing Prepayment to being in FC, now forcing Payment to be in base
			
			set rate = $$ExchangeRate^FINAPSupplier(idSupplier)
 
			if '$$$AmountIsFC(curPrepayment) {
				set curPrepayment = $$$FCMake(curPrepayment,supplierFC,rate)
				set $$$FINAPPaymentLinePrepayment(pYFELD) = curPrepayment
			}
			
			$$$GRIDGetContents(.arrGrid)
			do GetInvoiceAmounts(.arrGrid,.totalInvoice,.totalDiscount,.invoicePayment,.totalOwing)
 
			if curTotal="" {
				set curTotal = $$$FCMake(curTotal,supplierFC,rate)
			} else {
				set curTemp  = $$$FCAdd(curPrepayment,totalInvoice)
				set curTemp  = $$$FCSub(curTemp,totalDiscount)
				set curTemp  = $$$FCAmount(curTemp)
				set curTemp2 = $$$FCBase(curTotal)
				set curTotal = $$$FCJoin(curTemp2,curTemp,supplierFC,"")
				
			;	set curTotal = $$$FCJoin($$$FCBase(curTotal),$$$FCAmount($$$FCSub($$$FCAdd(curPrepayment,totalInvoice),totalDiscount)),supplierFC,"")
				set curTotal = $$$FCUpdate(curTotal,,3)
			}
			set $$$FINAPPaymentLineTotal(pYFELD)=curTotal
		}
	} else {
		set Q = $$$QDontSave
		do ReturnError^COMUtils(strStatus)
	}
	
	quit strStatus
 
OnAfterPrimaryKey(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Disable name field if not a Miscellaneous Supplier
	;
	; Returns:
	;
	; History:
	; 23-Aug-2004	shobby	 SR10288: Fixed Miscellaneous Supplier test
	; 22-Jun-2004   Shobby   SR7459: Created
	;-------------------------------------------------------------------------------
	new objFINAPPaymentLine,objFINAPSupplier,idSupplier
	
	if ($get(pYKEY)'="") && ($get(pYFELD)'="") {
		set objFINAPPaymentLine = pYFELD
		set idSupplier = $$$FINAPPaymentLineSupplierNumber(objFINAPPaymentLine)
		if idSupplier'="" {
			set objFINAPSupplier = $get(^FINAPSupplier(0,idSupplier,1))
			set $$$FINAPPaymentLineMiscellaneousSupplier(objFINAPPaymentLine) = +$$$FINAPSupplierMiscellaneousSupplier(objFINAPSupplier)
			if '$$$FINAPPaymentLineMiscellaneousSupplier(objFINAPPaymentLine) {
				set $$$FINAPPaymentLineName(objFINAPPaymentLine) = ""
			}
		}
		set pYFELD = objFINAPPaymentLine
	}
	quit
 
OnAfterDelete(pYKEY)
	;-------------------------------------------------------------------------------
	; Clean up code after a Payment Line has been deleted
	;
	; Returns:
	; 
	; Notes:
	;		**Delete Check - FINAPPaymentAccount**
	;		**Delete Check - FINAPPaymentInvoice**
	;		
	; History:
	; 19-Oct-2006	JW		SR15134: Look at kill status
	; 20-May-2005	RPW		SR12400: Added a delete statement to remove WWWDATEN
	; 03-May-2004   shobby	Replaced YKOMMA with ","
	; 02-Dec-2003	shobby	Creation (TR006513)
	;-------------------------------------------------------------------------------
	new idPay,idPayLine,strStatus
	
	set idPay     = $$$KEY1(pYKEY)
	set idPayLine = $$$KEY2(pYKEY)
	set strStatus = $$KillAccounts^FINAPPaymentAccount(idPay,idPayLine,$$$YES)
	if $$$ISOK(strStatus) {
		set strStatus = $$KillInvoices^FINAPPaymentInvoice(idPay,idPayLine,$$$YES)
	}
	if $$$ISOK(strStatus) do DELETE^COMGridEdit31Interface()
 	
	if $$$ISERR(strStatus) set Q = $$$QDontDelete
 	
	quit
 
ShowSupplierDetails(pKey)
	;-------------------------------------------------------------------------------
	;
	; History
	; 15-Jul-2005	RPW		SR12981: Move GetKey call to FINAPUtilities
	; 07-Jul-2003	SCR		Corrected the Use for GetKey
	; 13-Jun-2003	shobby	Variable declarations
	;--------------------------------------------------------------------------
	new idPay,idPayLine,objPayLine
	
	if $$GetKey^FINAPUtilities(pKey,.idPay,.idPayLine) {
		set objPayLine = $get(^FINAPPaymentLine(0,idPay,idPayLine,1))
		write $$$StrFINAPPaymentLineSupplierNumber_"  :  "_$$$FINAPPaymentLineSupplierNumber(objPayLine),YCR
	}
	;create a generic header for the invoice and account screens
	quit
	
ShowGrids(pKey,pintPage)
	;-------------------------------------------------------------------------------
	; Show the invoice grid / account table
	;
	; Params:	pKey - current YKEY
	; 			pintPage - current page
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 09-Nov-2006	JW		SR15190: Always show grid - for cleanup purposes.
	; 15-Jul-2005	RPW		SR12981: Move GetKey call to FINAPUtilities
	;-------------------------------------------------------------------------------
	new idPay,idPayLine
	
	if pintPage=1 {
		do ShowInvoicesEditGrid(pKey)
		
	} elseif (pintPage=2) && $$GetKey^FINAPUtilities(pKey,.idPay,.idPayLine) {
		do ShowAccounts^FINAPPaymentAccount(idPay,idPayLine)
	}
	quit
	
	
ShowInvoicesEditGrid(pYKEY="")
	;-------------------------------------------------------------------------------
	; Displays the supplier payment invoices in an Edit Grid on the supplier
	; payment lines form.
	;
	; Returns:
	;
	; History:
	; 05-Dec-2008	GRF		Clarify Enabled test
	; 09-Nov-2006	JW		SR15190: Test for 2nd key. Clean up.
	; 20-Oct-2005	PO		Changed YKOMMA to $$$COMMA
	; 10-Dec-2004	shobby	SR11175: Removed null YKEY test
	;  6-Dec-2004	JW		SR10541: Store supplier number for display purposes
	; 24-Nov-2004	SteveS	SR10541: Created
	;-------------------------------------------------------------------------------
	new idForm,idLine,YAUSWAHL
	
	set idForm = "FINAPPaymentInvoice"
	
	set idLine = $$$KEY2(pYKEY)
	if idLine'="" {
		set ^mtemp(YUSER,"PaymentLine","Supplier") = $$GetSupplierNumber($$$KEY1(pYKEY),idLine)
	}
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)      = idForm
	set $$$COMGridEditParameterEnabled(YAUSWAHL)       = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)     = "FINAPPaymentLine"
	
	$$$GRIDStart(idForm,pYKEY)
	
	quit
	
	
OnAfterSave(pKEY,pYFELD="")
	;-------------------------------------------------------------------------------
	; Execute after save of payment line.
	;
	; Returns:
	;
	; History:
	; 20-Nov-2006	SteveS	SR15219: Use Null dpt. filter if not auto create
	; 02-Dec-2005	PO		SR13948: Kill CacheTempInvoices if not AutoCreate
	; 30-Nov-2005	RPW		SR13933: Use CacheTempInvoices for all the invoices
	; 							instead of passing the huge structure around.
	; 23-Sep-2005	PO		SR12943: Corrected handling of manual payments
	; 13-Sep-2005	PO		SR12943: Allow payments to be broken up by department.
	; 15-Jul-2005	RPW		SR12981: Move GetKey call to FINAPUtilities
	; 17-May-2005	JW		SR12309: Only create if payment is editable.
	;-------------------------------------------------------------------------------
	new idPay,idPayLine,idSupplier,idDepartment,arrInvoices ;,blnClearAll
	new enmStatus,blnAuto
	
	if $$GetKey^FINAPUtilities(pKEY,.idPay,.idPayLine) {
		set idSupplier = $$$FINAPPaymentLineSupplierNumber(pYFELD)
		set blnAuto    = $$$FINAPPaymentLineAutoAllocate(pYFELD)
		
		do GetInvoices^FINAPPaymentInvoice(idSupplier,blnAuto)
		
		if blnAuto {
			set idDepartment = $$$FINAPPaymentLineDepartment(pYFELD)
			if idDepartment="" set idDepartment = "ÿ"
		} else {
			set idDepartment = "ÿ" 	
		}
		
		merge arrInvoices = ^CacheTempInvoice(YUSER,idDepartment)
		
		set enmStatus = $$$FINAPPaymentStatus($get(^FINAPPayment(0,idPay,1)))
		
		if $$Editable^FINSYSReview("FINAPPayment",enmStatus,,,,$$$YES) {
			do CreatePaymentInvoices^FINAPPaymentInvoice(idPay,idPayLine,.arrInvoices)
			do CreateAccounts^FINAPPaymentAccount(idPay,idPayLine)
		}
		kill ^CacheTempInvoice(YUSER)
	}
		
	quit
	
KillLine(pidPay,pidPayLine,pblnZero)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 19-Oct-2006	JW		SR15134: Look at kill status. Added return value.
	; 20-Jun-2005			SR12632: Created, KILL using COMUtils
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$KillAccounts^FINAPPaymentAccount(pidPay,pidPayLine,pblnZero)
	if $$$ISOK(strStatus) {
		set strStatus = $$KillInvoices^FINAPPaymentInvoice(pidPay,pidPayLine,pblnZero)
		if $$$ISOK(strStatus) && pblnZero {
			set strStatus = $$$Kill("FINAPPaymentLine",pidPay_","_pidPayLine)
		}
	}
	quit strStatus
 
 
BuildMessage(pidPay,pPaymentMessage,plngPaymentMethod,pidBankAccount)
	;-------------------------------------------------------------------------------
	;
	; History
	; 19-Oct-2006	JW		SR15134: Look at save status. Cleaned up status usage.
	; 27-Jan-2005	RPW		Fixed TCOMMIT and TROLLBACK (SR11273)
	; 13-Jun-2003	shobby	Variable Declaration
	; ------------------------------------------------------------------------
	new curAmount,idControlAcct,idPayLine,idSupplier
	new objPaymentLine,objSupplier,strChequeNo,strStatus
	
	;***************************************
	tstart
	;***************************************
	set strChequeNo = ""
	set strStatus   = $$$OK
	set idPayLine   = ""
	for {
		set idPayLine = $order(^FINAPPaymentLine(0,pidPay,idPayLine))
		quit:idPayLine=""
		
		if $$$ISOK(strStatus) {
			set objPaymentLine = $get(^FINAPPaymentLine(0,pidPay,idPayLine,1))
			
			set idSupplier = $$$FINAPPaymentLineSupplierNumber(objPaymentLine)
			set curAmount  = $$$FINAPPaymentLineTotal(objPaymentLine)
			if +curAmount'=0 {
				if idSupplier'="" {
					if $data(^FINAPSupplier(0,idSupplier,1)) {
						set objSupplier   = $get(^FINAPSupplier(0,idSupplier,1))
						set idControlAcct = $$$FINAPSupplierControlAccount(objSupplier)
						set @pPaymentMessage@("Payments",idPayLine,"Account")  = idControlAcct
						set @pPaymentMessage@("Payments",idPayLine,"Supplier") = idSupplier
						if plngPaymentMethod=$$$EnumFINARBANKLINEMETHODCheque {
							set strStatus = $$GetNextCheque^FINAPChequeBook(pidBankAccount,.strChequeNo)
							if $$$ISOK(strStatus) {
								set @pPaymentMessage@("Payments",idPayLine,"ChequeNumber") = strChequeNo
								set $$$FINAPPaymentLineChequeNumber(objPaymentLine)        = strChequeNo
								set strStatus = $$$Save("FINAPPaymentLine",pidPay_","_idPayLine,objPaymentLine,$$$YES)
							}
						}
					}
				}
				set @pPaymentMessage@("Payments",idPayLine,"Amount")=$$$FINAPPaymentLineTotal(objPaymentLine)
				do BuildMessage^FINAPPaymentInvoice(pidPay,idPayLine,pPaymentMessage)
				do BuildMessage^FINAPPaymentAccount(pidPay,idPayLine,pPaymentMessage)
			}
 		}
		quit:$$$ISERR(strStatus)
	}
	
	;***************************************
	if $$$ISOK(strStatus) {
		if $tlevel>0 tcommit
	} else {
		trollback
	}
	;***************************************
 	
	quit strStatus
 
AfterSaveChild(pKey)
	;-------------------------------------------------------------------------------
	;
	; 15-Jul-2005	RPW		SR12981: Move GetKey call to FINAPUtilities
	; 10-May-2005	JW		SR12309 - Added prepayment amount
	; 01-Jun-2004	SCR		FC Upgrade
	; 02-Dec-2003	shobby	Don't add the TotalAccount amount this is already handled somewhere else.
	; 02-Dec-2003	shobby	Removed call to UpdateInvoice
	; 01-Dec-2003	shobby	Call to the UpdateInvoice method.
	; 07-Jul-2003	SCR		Corrected the Use for GetKey
	;-------------------------------------------------------------------------------
	new curAmount,idPay,idPayLine,objPayLine,strStatus
	
	if $$GetKey^FINAPUtilities(pKey,.idPay,.idPayLine) {
		set curAmount = $$$FCSub($$GetPaying^FINAPPaymentInvoice(pKey),$$GetDiscountTotal^FINAPPaymentInvoice(idPay,idPayLine))
		
		set objPayLine = $get(^FINAPPaymentLine(0,idPay,idPayLine,1))
		set curAmount  = $$$FCAdd(curAmount,$$$FINAPPaymentLinePrepayment(objPayLine))
		set $$$FINAPPaymentLineAutoAllocate(objPayLine) = $$$NO
		set $$$FINAPPaymentLineTotal(objPayLine)        = curAmount
		set strStatus = $$$Save("FINAPPaymentLine",idPay_","_idPayLine,objPayLine,$$$YES)
	}
	
	quit
	
	
GetSupplierNumber(pidPay,pidPayLine)
	;---------------------------------------------------------------------------
	;
	; History
	; 10-Jul-2003	shobby	Creation (TR005572)
	;---------------------------------------------------------------------------
	new objFINAPPaymentLine,strSupplierNumber
	
	if (pidPay'="") && (pidPayLine'="") {
		set objFINAPPaymentLine = $get(^FINAPPaymentLine(0,pidPay,pidPayLine,1))
		set strSupplierNumber   = $$$FINAPPaymentLineSupplierNumber(objFINAPPaymentLine)
	}
	quit strSupplierNumber
	
	
OnBeforeButtonLine(Key="")
	;-------------------------------------------------------------------------------
	; Code to run before button line
	; 
	; Check for read only , show / hide foreign currency fields
	;
	; Returns:
	;
	; History:
	; 19-Oct-2005	SteveS	SR13216: Check for clearances in bank rec
	; 01-Jun-2004   SCR		Created
	;-------------------------------------------------------------------------------
    do ReadOnly^FINAPPayment(Key)
    do ClearanceCheck^FINAPPaymentLineUnPost(Key) ;SR13216
    quit
	
	
CheckForeignCurrencyFields(Key="")
	;-------------------------------------------------------------------------------
	; Hide/Show 'Total Foreign Currency' field based on whether supplier is set up for Foreign Currency
	;
	; Returns:
	;
	; History:
	; 01-Jun-2004   SCR		Created
	;-------------------------------------------------------------------------------
	new Payment,Line,LineRec,intDataInputTypeOld,intDataInputTypeNew
	new objFormLine,Supplier,SupplierFC
	
	set Payment = $$$KEY1(Key)
	set Line    = $$$KEY2(Key)
	if Payment="" set Payment = " "
	if Line=""    set Line    = " "
	
	lock +^FINAPPaymentFC
	set LineRec     = $get(^FINAPPaymentLine(0,Payment,Line,1))
	set Supplier    = $$$FINAPPaymentLineSupplierNumber(LineRec)
	set SupplierFC  = $$GetFCCode^FINAPSupplier(Supplier)
	set objFormLine = $get(^WWW122(0,"FINAPPaymentLine",16,1))  ; FC Amount
	set intDataInputTypeOld = $piece(objFormLine,Y,2)
	if SupplierFC="" {
		set intDataInputTypeNew = 15
	} else {
		set intDataInputTypeNew = 10
	}
	if intDataInputTypeOld'=intDataInputTypeNew {
		set $piece(objFormLine,Y,2) = intDataInputTypeNew
		set ^WWW122(0,"FINAPPaymentLine",16,1) = objFormLine
	}
	
	set objFormLine = $get(^WWW122(0,"FINAPPaymentLine",17,1))  ; Gain / Loss
	set intDataInputTypeOld = $piece(objFormLine,Y,2)
	if SupplierFC="" {
		set intDataInputTypeNew = 15
	} else {
		set intDataInputTypeNew = 10
	}
	if intDataInputTypeOld'=intDataInputTypeNew {
		set $piece(objFormLine,Y,2) = intDataInputTypeNew
		set ^WWW122(0,"FINAPPaymentLine",17,1) = objFormLine
	}
 
	lock -^FINAPPaymentFC
	quit
	
	
FCAmount(Key,Amount)
	;-------------------------------------------------------------------------------
	; Show amount in FC if Supplier is FC
	;
	; Returns:
	;
	; History:
	; 01-Jun-2004   SCR		Created
	;-------------------------------------------------------------------------------
    new idLine,idPayment,objPayLine,Supplier,SupplierFC
    
	set idPayment = $$$KEY1(Key)    if idPayment="" set idPayment = " "
	set idLine    = $$$KEY2(Key)    if idLine=""    set idLine    = " "
	
	set objPayLine = $get(^FINAPPaymentLine(0,idPayment,idLine,1))
	set Supplier   = $$$FINAPPaymentLineSupplierNumber(objPayLine)
	set SupplierFC = $$GetFCCode^FINAPSupplier(Supplier)
	if SupplierFC'="" {
		set Amount = $$$FCAmount(Amount)
	}
	set Amount = $$Format^FINUtils(Amount)
 
	quit SupplierFC_" "_Amount
	
	
GetTotalAccount(pYKEY)
	new idPay,idPayLine
	
	set idPay     = $$$KEY1(pYKEY)
	set idPayLine = $$$KEY2(pYKEY)
	
	quit $$GetTotalAccount^FINAPPaymentAccount(idPay,idPayLine)
	
	
OnBlur(pidFld="",pYFELD="",pYMFELD="",pYKEY="")
	;-------------------------------------------------------------------------------
	; Execute on blur of prepayment and payment fields
	;
	; Returns:
	;
	; History:
	; 01-Jul-2005	PO		SR12850: Only do FC checking when in base mode on a FC
	; 						supplier, not when dealing with a base supplier
	; 19-Jun-2005	PO		SR12613 Do not display msg 'Amount needs to be in base
	; 						currency' if no change made
	; 16-Jun-2005	PO		SR:12626 Tidy up of FC payments
	; 02-Jun-2005	PO		SR:12050 Display warning if Payment value not in base
	; 31-May-2005	shobby/JW	Removed %TXT command to allow updating of field correctly. (SR12459)
	; 09-May-2005	JW		Created SR12309
	;-------------------------------------------------------------------------------
	new idSupplier,supplierFC,rate,curAmount,curSavedAmount
	new curPayment,curPrepayment,strStatus
	
	set strStatus  = $$$OK
	set idSupplier = $$$FINAPPaymentLineSupplierNumber(pYFELD)
	set supplierFC = $$GetFCCode^FINAPSupplier(idSupplier)
	
	set curAmount     = $piece(pYFELD,Y,pidFld)
	set curPayment    = $$$FINAPPaymentLineTotal(pYFELD)
	set curPrepayment = $$$FINAPPaymentLinePrepayment(pYFELD)
	
	if $$$CurrencyToUse = "Base" { ; ($case($$$CurrencyToUse,"Base":1,"":1,:0)) { ;
		if $$$FCBase(curPayment)=$$$FCBase(YOLDV) {
			set strStatus = $$$NO
		
		} else {
			if '$$$AmountIsFC(YOLDV) && (pidFld=$$$FldFINAPPaymentLineTotal) && $$$AmountIsFC(curPayment) || ((pidFld=$$$FldFINAPPaymentLinePrepayment) && $$$AmountIsFC(curPrepayment)) {
				$$$Alert("Fin00787")  ;Amount needs to be in base currency.
				do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLineTotal,"",,,$$$NO) ; Do this to clear cache (WWWDATEN)
				do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLinePrepayment,"",,,$$$NO)
				set $$$FINAPPaymentLineTotal(pYFELD)      = ""
				set $$$FINAPPaymentLinePrepayment(pYFELD) = ""
				set %TXT(1) = $$^WWWTR(0,8,"") ; Clear value to be returned to client
			
			} elseif (pidFld=$$$FldFINAPPaymentLineTotal)&&'$$$AmountIsFC(curPayment) {
				if ($length($piece($get(^WWWDATEN(0,+$horolog,YUSER,$$$YFORM,"D",1)),Y,$$$FldFINAPPaymentLineTotal),"@")'=3) &&
				   ($length($piece($get(^WWWDATEN(0,+$horolog,YUSER,$$$YFORM,"D",2)),Y,$$$FldFINAPPaymentLineTotal),"@")'=3) { ; $$$AmountIsFC not appropriate in current form
					$$$Alert("Fin00801")  ;Select invoices to pay and Save Payment before changing amount in Payment field.
					do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLineTotal,YOLDV,,,$$$NO) ; Do this to clear cache (WWWDATEN)
				;	do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLinePrepayment,"",,,$$$NO)
					set $$$FINAPPaymentLineTotal(pYFELD) = YOLDV
				;	set $$$FINAPPaymentLinePrepayment(pYFELD) = ""
					set %TXT(1)   = $$^WWWTR(0,8,YOLDV) ; Clear value to be returned to client
					set strStatus = $$$NO
				}
			}
		}
	}
 
	if $$$ISOK(strStatus) {
		do PopulateFields(pidFld,pYFELD,pYMFELD)
	}
	quit
	
	
GetInvoiceAmounts(&parrGrid,&ptotalInvoice,&ptotalDiscount,&pinvoicePayment,&ptotalOwing)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: parrGrid rather than pobjGrid; show '&'
	; 23-Sep-2005	PO		SR13558: Do not include Discount amounts for payments not
	; 						being fully paid
	; 10-Jun-2005	PO		Created SR12050:
	;-------------------------------------------------------------------------------
    new idPayment,idPaymentLine,idInvoice,objInvoice,key
    
    set pinvoicePayment = 0
    set ptotalInvoice   = 0
    set ptotalDiscount  = 0
    set ptotalOwing     = 0
    
	set idPayment = $order(parrGrid(""))
	if idPayment'="" {
		set idPaymentLine = $order(parrGrid(idPayment,""))
		quit:idPaymentLine=""
		
		set key = idPayment_","_idPaymentLine
		
		set idInvoice = ""
		for {
			set idInvoice = $order(parrGrid(idPayment,idPaymentLine,idInvoice))
			quit:idInvoice=""
			
			set objInvoice    = $get(parrGrid(idPayment,idPaymentLine,idInvoice))
			set ptotalInvoice = $$$FCAdd(ptotalInvoice,$$$FINAPPaymentInvoicePayAmount(objInvoice))
			if $$$FINAPPaymentInvoiceDiscountApplied(objInvoice) && $$$FINAPPaymentInvoicePay(objInvoice) {
				set ptotalDiscount = $$$FCAdd(ptotalDiscount,$$$FINAPPaymentInvoiceDiscount(objInvoice))
			}
			set ptotalOwing = $$$FCAdd(ptotalOwing,$$$FINAPPaymentInvoiceAmountOwing(objInvoice))
		}
	}
 
	set pinvoicePayment = $$$FCSub(ptotalInvoice,ptotalDiscount)	// Sum of invoice payments
	
	quit pinvoicePayment
	
	
AmountForSuppliersCurrency(pcurAmount,pstrCurCode)
	;-------------------------------------------------------------------------------
	;
	; Returns:
	;
	; History:
	; 09-Jun-2005	PO		Created SR:
	;-------------------------------------------------------------------------------
    new curAmount
 
	if pstrCurCode="" {
		set curAmount = $$$FCBase(pcurAmount)
	} else {
		set curAmount = $$$FCAmount(pcurAmount)
	}
	quit curAmount
 
 
Status(pKey="")
	;-------------------------------------------------------------------------------
	; Status Text
	;
	; Returns: Status
	;
	; History:
	; 15-Jul-2005	RPW		SR12981: Move GetKey call to FINAPUtilities
	; 30-May-2005	SCR		Created SR:19990	
	;-------------------------------------------------------------------------------
    new idPayment,objPayment,strGroup,strLocn,strText
 
	do GetKey^FINAPUtilities(pKey,.idPayment) 
	
	set strText     = ""
	if idPayment="" set idPayment = " "
	set objPayment  = $get(^FINAPPayment(0,idPayment,1))
	set strLocn     = $$$FINAPPaymentLocation(objPayment)
	set strGroup    = $$$FINAPPaymentGroup1(objPayment)
	if (strLocn="") && (strGroup="") {
		set strText = $$$Text("Fin00779")
	
	} elseif (strLocn'="") && (strGroup'="") {
		set strText = $$$Text($listBuild("Fin00781",strLocn,strGroup))
	
	} elseif (strLocn'="") {
		set strText = $$$Text($listBuild("Fin00782",strLocn))
	
	} elseif (strGroup'="") {
		set strText = $$$Text($listBuild("Fin00783",strGroup))
	}	
	quit strText
	
	
PopulateFields(pidFld="",pYFELD="",pYMFELD="")
	;-------------------------------------------------------------------------------
	; Populate fields - do this on blur of payment and prepayment fields and when 
	; form is first loaded.
	; 
	; Params: 	pidFld - Field not to be updated - should be payment or prepayment
	; 			pYFELD/pYMFELD - form data
	; 
	; Returns:
	;
	; History:
	; 10-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
	; 18-Jan-2006	SteveS	SR13953: Use GetGroupPayment^FINAPPaymentLine2
	; 13-Jan-2006	RPW		SR14144: If the rate is 0, we store the base currency
	; 							amount to store for the gains and losses.
	; 11-Jan-2006	RPW		SR14144: We need to update the invoicePayment as there
	; 							may be situation where we get an incorrect amount
	; 							ie 140@USD100@1.4 + -150@-USD100@1.5 = -10@USD0@0,
	; 							this should be 0@USD0@0
	; 11-Jul-2005	JW		SR12811: Used FC macro
	; 27-Jun-2005	shobby	SR12640 reversed sign of the Gain/Loss calculated field
	; 17-Jun-2005	PO		SR:12626 Tidy up of FC payments
	; 02-Jun-2005	PO		SR:12050 Display in current currency
	; 31-May-2005	shobby	If unable to determine FC use the Supplier FC SR12459
	; 10-May-2005	JW		Created SR12309
	;-------------------------------------------------------------------------------
	new arrGrid,idPayment,idPaymentLine,idInvoice,objInvoice
	new totalDiscount,totalOwing,key,assignedPayments,idSupplier,supplierFC
	new totalInvoice,accountPayment,prepayment,actualPayment,invoicePayment
	new allPayments,allPaymentsFC,balance,convRate,oldPayment,strAmount,fltRate
	new invoicePaymentLocal,curAccPayments
	
	set totalDiscount = 0
	set totalInvoice  = 0
	set totalOwing    = 0
 	
	$$$GRIDGetContents(.arrGrid)
	set key = $$GetYKEYContainer^COMGridEdit31Interface()
	
	do GetInvoiceAmounts(.arrGrid,.totalInvoice,.totalDiscount,.invoicePayment,.totalOwing)
 
 	set fltRate             = $$$FCRate(invoicePayment)
 	set invoicePaymentLocal = $select(fltRate'=0:0,1:+invoicePayment)
 	set invoicePayment      = $$$FCUpdate(invoicePayment,fltRate,1)
 	
 	set accountPayment = $$GetGroupPayment^FINAPPaymentLine2(key)
	
	set prepayment    = $$$FINAPPaymentLinePrepayment(pYFELD)	    // Prepayment
	set actualPayment = $$$FINAPPaymentLineTotal(pYFELD)	        // Total Payment
 
	set assignedPayments = $$$FCAdd(invoicePayment,accountPayment)	// All assigned payments
	set allPayments      = $$$FCAdd(prepayment,assignedPayments)    // Sum of payments
 
	set idSupplier = $$$FINAPPaymentLineSupplierNumber(pYFELD)
	set supplierFC = $$GetFCCode^FINAPSupplier(idSupplier)
	
	if pidFld = $$$FldFINAPPaymentLineTotal {
		if supplierFC="" {	// Update prepayment field if non-FC
			set prepayment = actualPayment - assignedPayments ; $$$FCSub(actualPayment,assignedPayments)
			do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLinePrepayment,prepayment,,,$$$NO)
			
		} elseif ($$$AmountIsFC(actualPayment)) {	 // Update prepayment field if FC - using same rate
			
			set convRate   = $$$FCRate(actualPayment)
			set prepayment = $$$FCSub(actualPayment,assignedPayments)
			set prepayment = $$$FCUpdate(prepayment,convRate,1)
		;	do PopulateDataField^COMUtils(strForm,$$$FldFINAPPaymentLinePrepayment,$$AmountForCurrentMode^COMUtilCurrency(prepayment,strForm),,,$$$NO)
			do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLinePrepayment,prepayment,,,$$$NO)
			
		} else { // Convert to FC - calculating rate
			if $$$CurrencyToUse'="Base" {
				do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLineTotal,actualPayment,,,$$$NO) ;$$AmountForCurrentMode^COMUtilCurrency(actualPayment,strForm)
				set prepayment = $$$FCSub(actualPayment,assignedPayments)
				do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLinePrepayment,prepayment,,,$$$NO)
			}
		}
		
		if (prepayment<0) $$$Alert("Fin00765") ; "Warning: Prepayment is less than 0."
		
	} elseif pidFld = $$$FldFINAPPaymentLinePrepayment { // Update payment field
		if $case($$$CurrencyToUse,"Base":1,"":1,:0) {
			set actualPayment = $$$FCBase(prepayment)+$$$FCBase(assignedPayments)
		} else {
			set actualPayment = $$$FCAdd(prepayment,assignedPayments)
		}
 
		do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPPaymentLineTotal,actualPayment,,,$$$NO)
	}
	
	set invoicePayment	= $$$FCAdd(invoicePayment,prepayment)	// All invoice + prepayment
	set balance 		= $$$FCSub(totalOwing,invoicePayment)
	
	do PopulateDataField^COMUtils($$$YFORM, 9,totalDiscount,"M")
	
	set strAmount = $$AmountForSuppliersCurrency(invoicePayment,supplierFC)
	set strAmount = strAmount_"@"_strAmount
	do PopulateDataField^COMUtils($$$YFORM,11,strAmount,"M")
 
	set strAmount = $$AmountForSuppliersCurrency(balance,supplierFC)
	set strAmount = strAmount_"@"_strAmo]]><![CDATA[unt
	do PopulateDataField^COMUtils($$$YFORM,12,strAmount,"M")
	
	if supplierFC'="" {	// Gain/Loss, FC fields.
		set gainLoss  = (prepayment+assignedPayments)-(actualPayment-invoicePaymentLocal)
		set strAmount = gainLoss_"@"_gainLoss
		do PopulateDataField^COMUtils($$$YFORM,17,strAmount,"M")
		
		set strAmount = $$AmountForSuppliersCurrency(allPayments,supplierFC)
		set strAmount = strAmount_"@"_strAmount
		do PopulateDataField^COMUtils($$$YFORM,16,strAmount,"M")
	}
	quit
	
]]></Routine>
</Export>