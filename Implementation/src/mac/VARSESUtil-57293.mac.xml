<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESUtil" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESUtil
#include COMConst
#include INConst
#include WWWConst
#include FIN
#include VARConst
 
Contem(pstrLong, pstrShort)
 
	new strLongPiece
 
	if $length(pstrShort) > $length(pstrLong) {
  
		quit $$$NO 
  
	} else {
 
	set strLongPiece = $extract(pstrLong, 1, $length(pstrShort))
	
		quit (strLongPiece = pstrShort)
	}
 
	quit
	
 
 
NewQuery(pstrSQL)
	; Create a new SQL query from the pstrSQL parameter
	new objResult
	set objResult = ##class(%Library.ResultSet).%New()
	do objResult.Prepare(pstrSQL) 
	quit objResult	
 
 
CreateAndSaveINFIBPAR(model="", company, location)
	; creates one INFIBPAR record for a company and location 
	; the data in "model"
	new id, obj
	set obj = model
	do Save^COMUtils("INFIBPAR",company_","_location,obj,1)
	quit
	
CreateINFIBPARs
	; Creates dummy INFIBPAR records for all WWW0121 records that don't have them
	; 
	; NOTE : only to be used in setting up SES where the INFIBPAR record number 1 is
	; already configured with correct values
	; This is because we're copying the 1 record into all others
	; 
	; Note 2 : this only works for current company YM
	; 
	new res, idINFIBPAR, objINFIBPAR, model, site
	set model = "~~~~~~~~10000002~10000002~10000002~~~~~~~~~~~0~10000002~10000002~10000002~10000002~10000002~~10000002~~10000002~~10000002~10000002~10000002~10000002~10000002~~~~~~~~~~~~~10000002~10000002~10000002~10000002"
	set res = $$NewQuery("select Location from WWW0121 where company = ?")
	do res.Execute(YM)
	while res.Next() {
		set site = res.Data("Location")
		if '$data(^INFIBPAR(YM,YM,site,1)) {
			do CreateAndSaveINFIBPAR(model,YM,site)
		}
	}
	quit	
 
CreateLinkForGridEdit(strForm, strKey, strName)
 
 	quit "<A HREF=""#"" onclick=""subWindow('www.cls?EP=WWWFORM&YFORM="_strForm_"&YUCI="_YUCI_"&YBED="_YBED_"&YM="_YM_"&YUSER="_YUSER_"&YKEY="_strKey_"','GridFrame')"">"_strName_"</A>"
 
		
ClearVARLogAterSave(pUsuario,pForm)
	quit:((pUsuario = "") || (pForm = ""))
	
 	kill ^CacheTempVARLogAfterSave(pUsuario,pForm)
 	quit
 	
VARLogAfterSave(pUsuario,pForm)
	quit:((pUsuario = "") || (pForm = ""))
	
	set ^CacheTempVARLogAfterSave(pUsuario,pForm) = $$$YES
	quit
	
isAfterSaveLogged(pUsuario,pForm)
	quit:((pUsuario = "") || (pForm = "")) $$$NO
	
	if ($get(^CacheTempVARLogAfterSave(pUsuario,pForm)) = $$$YES) {	
		quit $$$YES
	}
	
	quit $$$NO		
]]></Routine>
</Export>