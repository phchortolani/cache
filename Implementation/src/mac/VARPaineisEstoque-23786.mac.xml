<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARPaineisEstoque" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARPaineisEstoque

#include VARConst
#include COMSYS
#include COMConst
#include INConst
    

GetEstoqueResumo(competencia, local="--",tipo="--")
    set vazio = "--"

    if local = "" {
        set local = vazio
    }
    if tipo = "" {
        set tipo = vazio
    }
    set total = 0
    set calcular = 0 
    
    if (($LENGTH(competencia) > 0)  && (local'= vazio)) {
        &SQL(select Valor into :total 
            from VARPainelDasaResumo 
            where 
            competencia = :competencia 
            and 
            Unidade = :local)           
    }
    elseif (($LENGTH(competencia) > 0) && (tipo'= vazio)) {
        &SQL(select sum(valor) as total into :total from VARPainelDasaResumo 
        where competencia = :competencia and tipo =:tipo)
    }
    elseif (($LENGTH(competencia) > 0) ) {
        
        &SQL(select sum(valor) as total into :total from VARPainelDasaResumo 
        where competencia = :competencia and tipo <> 4)
    }

    quit total
    
 ; w $$GetEstoque^VARPaineisEstoque(201601)
GetEstoque(competencia, produto="--", local="--",tipo="--", grupo = "--")
    set debugStr = "GetEstoque("_competencia_","_produto_","_local
    set vazio = "--"
    if produto = "" {
        set produto = vazio
    }
    if local = "" {
        set local = vazio
    }
    if tipo = "" {
        set tipo = vazio
    }
    if grupo = "" {
        set grupo = vazio
    }


    set total = 0
    set calcular = 0
    if (competencia > $extract($zdate($HOROLOG,8),1,6)) {
        quit 0
        set competencia = $extract($zdate($HOROLOG,8),1,6)
    }
    if (produto = "n√£o exec" ) {
        if ($get(^TempControlPaineis) < +$HOROLOG) {
            kill ^TempPaineisEstoque
        }
    
        set ^TempControlPaineis = +$HOROLOG
        
        
            set total = +$get(^TempPaineisEstoque(competencia,produto,local,tipo,grupo))
            if (total '= 0) {
                if (total < 0) {
                    quit 0
                }
                quit total
            }
    }   
    if (($LENGTH(competencia) > 0) && (grupo '= vazio) && (local '= vazio) && (produto  =vazio) ) {
        &SQL(select Sum(EstoqueTotalLocal) into :total 
        from VARPainelDasa 
        where (location = :local or Unidade = :local) 
        and competencia = :competencia 
        
        and ($$SQLGetGrupoItem^VARSQL(item) = :grupo
            or 
             $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(item)) =:grupo
            ) 
        )
    }
    elseif (($LENGTH(competencia) > 0) && (grupo'= vazio) && (produto = vazio) ) {
        &SQL(select Sum(EstoqueTotalLocal) into :total 
        from VARPainelDasa 
        where 
        competencia = :competencia 
        and $$SQLIsCD^VARSQL(unidade) <> 1
        and $$SQLFiltroTipo^VARSQL(:tipo, $$SQLGetTipoLocal^VARSQL(Unidade) ) = 1
        and ($$SQLGetGrupoItem^VARSQL(item) = :grupo
            or 
             $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(item)) =:grupo
            ) 
        )
    }
    elseif (($LENGTH(competencia) > 0) && (produto'= vazio) && (local'= vazio)) {
        &SQL(select distinct Sum(EstoqueTotalLocal) into :total 
        from VARPainelDasa 
        where (location = :local or Unidade = :local)
        and competencia = :competencia 
        and Item = :produto)
    }
    elseif (($LENGTH(competencia) > 0) && (produto'= vazio) ) {
        &SQL(select distinct Sum(EstoqueTotalLocal) into :total 
        from VARPainelDasa 
        where competencia = :competencia and $$SQLIsCD^VARSQL(unidade) <> 1
        and $$SQLFiltroTipo^VARSQL(:tipo, $$SQLGetTipoLocal^VARSQL(Unidade) ) = 1
        and Item = :produto)
    }
    elseif (($LENGTH(competencia) > 0)  && (local'= vazio)) {
        &SQL(select distinct Sum(EstoqueTotalLocal) into :total 
            from VARPainelDasa 
            where 
            competencia = :competencia 
            and 
            (location = :local or Unidade = :local)
            and 
            ( 
            ($$SQLGetTipoLocal^VARSQL(location) = 4)
             or
            ($$SQLGetTipoLocal^VARSQL(:local) = $$SQLGetTipoLocal^VARSQL(location))
            )
        ) 
    }
    elseif (($LENGTH(competencia) > 0) && (tipo'= vazio)) {
        &SQL(select sum(valor) as total into :total from VARPainelDasaResumo 
        where competencia = :competencia and tipo =:tipo)
        
    }
    elseif (($LENGTH(competencia) > 0) ) {
        
        &SQL(select sum(valor) as total into :total from VARPainelDasaResumo 
        where competencia = :competencia and tipo <> 4)
    }
    if (total = "") {
        set ^TempPaineisEstoque(competencia,produto,local,tipo,grupo) = -1
    }
    else {
        set ^TempPaineisEstoque(competencia,produto,local,tipo,grupo) = total
    }
    
    quit total
    
    
GetTotalEstoque(Regional="",Produto="",tipo="",grupo="",filtros="") 
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    set serieAnterior = ##class(Tasc.dashboard.Serie).%New()
    set serieAtual = ##class(Tasc.dashboard.Serie).%New()   
    new total
    set (total) = 0 
    set ano = $piece($zdate($horolog),"/",3)
    for idxTotal = 0:1:1 {
        set ano = +ano - idxTotal
        for j = 1:1:12 {
            if (j < 10) {
                set mes = "0"_j
            }
            else {
                set mes = j
            }
            
            set competencia = ano_mes
            
            if ((Produto = "") && (grupo="") ) {
                set total = +$$GetEstoqueResumo(competencia, Regional,tipo)
            }
            else {
                set total = +$$GetEstoque(competencia,Produto,Regional,tipo,grupo)
            }
            set $p(filtros,"&",6) = "fCompetencia="_competencia
            set filtrosLink = filtros
            if (total = 0) {
                set filtrosLink = ""
            }
            
                 if (idxTotal = 1) {
                        set anoanterior = ano
                        set serieAnterior.Cor="Black"
                        set serieAnterior.Titulo = ano
                        set serieAnterior.Categoria = "ano"
                        do serieAnterior.InsertSubSeries($$GetDescMes^VARSQL(j)_ "",total,"","#F0F0F0",filtrosLink, "Estabs: "_ $$GetTotalUnidadesPorCompetencia(ano_mes,tipo,Regional))
                    }
                    if (idxTotal = 0) {
                        set serieAtual.Cor="Black"
                        set serieAtual.Titulo = ano
                        set serieAtual.Categoria = "ano"
                        do serieAtual.InsertSubSeries($$GetDescMes^VARSQL(j)_ "",total,"","#F0F0F0",filtrosLink, "<div style='background-color:#f0f0f0;'>Estabs: "_  $$GetTotalUnidadesPorCompetencia(ano_mes,tipo,Regional)_"</div>")
                    }
        }
    }   
    do series.Insert(serieAnterior)
    do series.Insert(serieAtual)
    quit series

GetSeriePorTipoUnidade(competencia, tipoUnidade="", Filtro= "")
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    &sql(DECLARE GetTipoUnidade CURSOR FOR
        select valor, sum(valor) as total, unidade into :valor,:total,:unidade from VARPainelDasaResumo 
        where 
        competencia = :competencia
        and 
        tipo = :tipoUnidade
        and 
        valor > 0
        order by valor desc  )
    &sql(OPEN GetTipoUnidade)
    &sql(FETCH GetTipoUnidade)
    set count = 0
     WHILE (SQLCODE = 0) {
        set count = count + 1
        if (total > 0) {
            set serieTipo = ##class(Tasc.dashboard.Serie).%New()
            set serieTipo.Cor = "Black"
            set serieTipo.Valor = valor
            set serieTipo.Link = $$MontaLink(Filtro,"fRegional="_unidade)
            set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipo=")
    
            if (total > 0) {
                set porcentagem = (valor/total)  * 100
                do serieTipo.TituloColuna.Insert("Porcentagem")
                ;do serieTipo.ColunaTabela.Insert(123)
                do serieTipo.ColunaTabela.Insert($$^WWWTR(0,12,porcentagem,4)_"%")
                set serieTipo.Titulo = "("_unidade_")  "_$$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
                set serieTipo.Categoria = $$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
            }

            
            do series.Insert(serieTipo)
        }
        &sql(FETCH GetTipoUnidade)
     }
     &sql(CLOSE GetTipoUnidade)

    quit series
    
GetSerieUnidades(competencia, tipoUnidade="",item = "",grupo="", Filtro= "")
    if ((item '="") && (tipoUnidade '="")) {
        quit $$GetSeriePorTipoUnidadeItem(competencia, tipoUnidade,item, Filtro)
    }
    if item '="" {
        quit $$GetItemPorUnidade(competencia, tipoUnidade,item, Filtro)
    }
    if ((grupo '="") && (tipoUnidade '="")) {
        quit $$GetGrupoPorUnidade(competencia, tipoUnidade, grupo, Filtro)
    }
    if tipoUnidade '="" {
        quit $$GetSeriePorTipoUnidade(competencia, tipoUnidade, Filtro)
    } 
    if grupo '="" {
        quit $$GetGrupoPorUnidade(competencia, tipoUnidade, grupo, Filtro)
    }

    &SQL(select sum(valor) as totalGeral  into :totalGeral from VARPainelDasaResumo where
        tipo <> 4
        and
        competencia = :competencia )
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    &sql(DECLARE GetUnidade CURSOR FOR
        select sum(valor) as total, tipo  into :total,:tipo from VARPainelDasaResumo 
        where
        tipo <> 4
        and
        competencia = :competencia
        group by tipo 
        order by total desc  )
    &sql(OPEN GetUnidade)
    &sql(FETCH GetUnidade)
    set count = 0
     WHILE (SQLCODE = 0) {
        set count = count + 1
        if (total > 0) {
            set serieTipo = ##class(Tasc.dashboard.Serie).%New()
            set percentual = (total/totalGeral) *100
            set serieTipo.Categoria = $$SQLGetTipoUnidadeDesc^VARSQL(tipo)_"-"_$$^WWWTR(0,12,$g(percentual),2)_"%"
            set serieTipo.Titulo = ""_$$SQLGetTipoUnidadeDesc^VARSQL(tipo) 
            set serieTipo.Cor = "Black"
            set serieTipo.Valor = total
            set serieTipo.Link = $$MontaLink(Filtro,"fTipo="_tipo)
            set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipoLink="_tipo)
            ;do serieTipo.TituloColuna.Insert("Porcentagem")
            do series.Insert(serieTipo)
        }
        &sql(FETCH GetUnidade)
     }
     &sql(CLOSE GetUnidade)

    quit series
    
GetGrupoPorUnidade(competencia, tipoUnidade="",grupo = "", Filtro= "")
 
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
    &SQL(select sum(EstoqueTotalLocal) as totalGeral  into :totalGeral from VARPainelDasa where
        competencia = :competencia 
        and $$SQLFiltroTipo^VARSQL(:tipoUnidade, $$SQLGetTipoLocal^VARSQL(Unidade) ) = 1
        and ($$SQLGetGrupoItem^VARSQL(item) = :grupo
            or 
             $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(item)) =:grupo
            ) 
        )
 
    &sql(DECLARE cGrupoUnidade CURSOR FOR
        select sum(EstoqueTotalLocal) as total, $$SQLGetTipoLocal^VARSQL(Unidade) into :total,:tipo from VARPainelDasa
        where
        competencia = :competencia
        and $$SQLGetTipoLocal^VARSQL(Unidade) in (1,2,3)
        and $$SQLFiltroTipo^VARSQL(:tipoUnidade, $$SQLGetTipoLocal^VARSQL(Unidade) ) = 1
        and (
             $$SQLGetGrupoItem^VARSQL(item) = :grupo
            or 
             $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(item)) =:grupo
        )
        group by $$SQLGetTipoLocal^VARSQL(Unidade) 
        order by total desc  )
    
    &sql(OPEN cGrupoUnidade)
    &sql(FETCH cGrupoUnidade)
    set count = 0
     WHILE (SQLCODE = 0) {
        set count = count + 1
        if ((total > 0) && (tipo '= 4)) {
            set serieTipo = ##class(Tasc.dashboard.Serie).%New()
            set percentual = (total/totalGeral) *100
            set serieTipo.Categoria = $$SQLGetTipoUnidadeDesc^VARSQL(tipo)_"-"_$$^WWWTR(0,12,$g(percentual),2)_"%"
            set serieTipo.Titulo = ""_$$SQLGetTipoUnidadeDesc^VARSQL(tipo) 
            set serieTipo.Cor = "Black"
            set serieTipo.Valor = total
            set serieTipo.Link = $$MontaLink(Filtro,"fTipo="_tipo)
            set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipoLink="_tipo)
            ;do serieTipo.TituloColuna.Insert("Porcentagem")
            do series.Insert(serieTipo)
        }
        &sql(FETCH cGrupoUnidade)
     }
     &sql(CLOSE cGrupoUnidade)

    quit series
    /**/
    
GetItemPorUnidade(competencia, tipoUnidade="",item = "", Filtro= "")
 
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie") 
    
    &SQL(select sum(EstoqueTotalLocal) as totalGeral  into :totalGeral from VARPainelDasa where
        item = :item
        and
        competencia = :competencia )
  
    &sql(DECLARE cItemUnidade CURSOR FOR
        select sum(EstoqueTotalLocal) as total, $$SQLGetTipoLocal^VARSQL(Unidade) into :total,:tipo from VARPainelDasa
        where
        competencia = :competencia
        and item = :item
        and $$SQLGetTipoLocal^VARSQL(Unidade) in (1,2,3)
        group by $$SQLGetTipoLocal^VARSQL(Unidade) 
        order by total desc  )
    
    &sql(OPEN cItemUnidade)
    &sql(FETCH cItemUnidade)
    set count = 0
     WHILE (SQLCODE = 0) {
        set count = count + 1
        if ((total > 0) && (tipo '= 4)) {
            set serieTipo = ##class(Tasc.dashboard.Serie).%New()
            set percentual = (total/totalGeral) *100
            set serieTipo.Categoria = $$SQLGetTipoUnidadeDesc^VARSQL(tipo)_"-"_$$^WWWTR(0,12,$g(percentual),2)_"%"
            set serieTipo.Titulo = ""_$$SQLGetTipoUnidadeDesc^VARSQL(tipo) 
            set serieTipo.Cor = "Black"
            set serieTipo.Valor = total
            set serieTipo.Link = $$MontaLink(Filtro,"fTipo="_tipo)
            set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipoLink="_tipo)
            ;do serieTipo.TituloColuna.Insert("Porcentagem")
            do series.Insert(serieTipo)
        }
        &sql(FETCH cItemUnidade)
     }
     &sql(CLOSE cItemUnidade)

    quit series
    /**/
    
GetSeriePorTipoUnidadeItem(competencia, tipoUnidade="",item = "", Filtro= "")
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    &sql(DECLARE cUnidadeItem CURSOR FOR
        select EstoqueTotalLocal, sum(EstoqueTotalLocal) as total, unidade into :valor,:total,:unidade from VARPainelDasa
        where 
        competencia = :competencia
        and 
        $$SQLGetTipoLocal^VARSQL(Unidade)  = :tipoUnidade
        and 
        item = :item
        and
        EstoqueTotalLocal > 0
        order by total desc  )
    
    &sql(OPEN cUnidadeItem)
    &sql(FETCH cUnidadeItem)
    set count = 0
     WHILE (SQLCODE = 0) {
        set count = count + 1
        if (total > 0) {
            set serieTipo = ##class(Tasc.dashboard.Serie).%New()
            set serieTipo.Cor = "Black"
            set serieTipo.Valor = valor
            set serieTipo.Link = $$MontaLink(Filtro,"fRegional="_unidade)
            set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipo=")
        
            if (total > 0) {
                set porcentagem = (valor/total)  * 100
                do serieTipo.TituloColuna.Insert("Porcentagem")
                ;do serieTipo.ColunaTabela.Insert(123)
                do serieTipo.ColunaTabela.Insert($$^WWWTR(0,12,porcentagem,4)_"%")
                set serieTipo.Titulo = "("_unidade_")  "_$$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
                set serieTipo.Categoria = $$SQLGetLocationName^VARSQL(unidade) _"-"_$$^WWWTR(0,12,porcentagem,2)_"%"
            }
            do series.Insert(serieTipo)
        }
        &sql(FETCH cUnidadeItem)
     }
     &sql(CLOSE cUnidadeItem)

    quit series
    /**/
    
GetSerieSubRegionais(competencia, regional="" ,tipo="", produto="",grupo="",filtros="")
    new local
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    #dim listaSub as List of %String
    kill ^seriesDashboard("GetSerieSubRegionais"_competencia_regional)
    if (tipo'="") {
        set listaSub = ##class(Tasc.stock.Util).GetListaLocaisPorTipo(tipo)
    }
    else {
        set listaSub = ##class(Tasc.stock.Util).GetListaSubLocais(regional)
    }

    do listaSub.Insert(regional)
    set totalizado = 0
    set indice = 0
    set totalSerie = 0
    for idxSub=1:1:listaSub.Count() {
        set local = listaSub.GetAt(idxSub)
        if (($$SQLGetTipoLocal^VARSQL(local) '= tipo) && (tipo'="")) {
            continue
        }
        if (tipo = "") {
            if (( $$SQLGetTipoLocal^VARSQL(local) '= 4)
             && ( $$SQLGetTipoLocal^VARSQL(local) '= $$SQLGetTipoLocal^VARSQL(regional)) 
             && ( $$SQLGetTipoLocal^VARSQL(local) '= ""))        {
                continue
            }
        }
        
        set serie = ##class(Tasc.dashboard.Serie).%New()
        do serie.TituloColuna.Insert("In√≠cio Opera√ß√µes")
        do serie.TituloColuna.Insert("Porcentagem")
        set dataInicio = 0
        &SQL(select top 1 Competencia into :dataInicio from varpaineldasa where unidade = :local or location= :local order by Competencia)
        set serie.Cor=""
        set operando = ""
        ;
        set descLocal = $$SQLGetLocationName^VARSQL(local)
        set descLocal = "("_local_") "_descLocal
        if (grupo '= "") {
            set descLocal = descLocal _ " / " _ $$SQLGetDescGrupoItem^VARSQL(grupo)
        }
        
        if (dataInicio > 0) {
            set operando =""_$extract(dataInicio,5,6)_"/"_$extract(dataInicio,1,4)_""
        }
        do serie.ColunaTabela.Insert(operando)
        if (local = regional) {
            if ((produto="") && (grupo = "")) {
                set serie.Valor = +$$GetEstoqueResumo(competencia,local,tipo) - totalizado
            }else {
                set serie.Valor = +$$GetEstoque(competencia,produto,local,tipo,grupo) - totalizado
            }
        }
        else {
            if ((produto="") && (grupo = "")) {
                set serie.Valor = +$$GetEstoqueResumo(competencia,local,tipo)
            }else {
                set serie.Valor = +$$GetEstoque(competencia,produto,local,tipo,grupo) 
            }
            set totalizado = totalizado + serie.Valor
        }
        set totalSerie = totalSerie + serie.Valor

        set serie.Categoria = descLocal
        set serie.Titulo = descLocal
        set serie.Link = $$MontaLink(filtros,"fRegional="_local)
        set serie.Link = $$MontaLink(serie.Link,"fTipo=")
        
        if (serie.Valor > 0) {
            set indice = indice + 1
            set serie.Ordered = "GetSerieSubRegionais"_competencia_regional
            set ^seriesDashboard(serie.Ordered,serie.Valor,$increment(^seriesDashboard(serie.Ordered,serie.Valor))) = indice
            do series.Insert(serie)
        }
    }
    for idx = 1:1:series.Count() {
        if (totalSerie > 0) {
            set percentagem = (series.GetAt(idx).Valor / totalSerie) * 100
            do series.GetAt(idx).ColunaTabela.Insert($$^WWWTR(0,12,percentagem,4)_"%")
        }
    }
    set ^DasaCompUnidade(competencia) = series.Count()
    quit series
    /**/
    
CarregaSerieGrupo(competencia,regGlobal)    
    new total
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    set total = ""
    set totalSerie = 0
    for {
        set total = $ZPREVIOUS(^SerieGrupoPaineis(competencia,regGlobal,total))
        quit:total=""
            set grp = ""
        for {
            set grp = $order(^SerieGrupoPaineis(competencia,regGlobal,total,grp))
            quit:grp=""
            
            if (total > 0) {
                set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
                set serieGrupo.Categoria = $$SQLGetDescGrupoItem^VARSQL(grp)
                set serieGrupo.Titulo = ""_$$SQLGetDescGrupoItem^VARSQL(grp)
                set serieGrupo.Cor = "Black"
                set serieGrupo.Valor = total
                do serieGrupo.TituloColuna.Insert("Porcentagem")
                set totalSerie = totalSerie + total
                do series.Insert(serieGrupo)
            }
        }
    }
    for idx = 1:1:series.Count() {
        if (totalSerie > 0) {
            set percentagem = (series.GetAt(idx).Valor / totalSerie) * 100
            do series.GetAt(idx).ColunaTabela.Insert($$^WWWTR(0,12,percentagem,4)_"%")
        }
    }
    quit series

    
GetSerieGrupo(competencia,regional="", grupo="")
     ;set ser = $$GetSerieGrupo^VARPaineisEstoque(201512)
    if (regional = "") {
        set regGlobal = "--"
    } 
    else {
        set regGlobal = regional
    }
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    set ^RodouSerieGrupoPaineis(competencia,regGlobal) = +$horolog
    kill ^SerieGrupoPaineis(competencia,regGlobal)
    
    &sql(DECLARE GetStockGrupo CURSOR FOR
        select sum(EstoqueTotalLocal) as total , $$SQLGetGrupoItem^VARSQL(item) into :total,:grupo 
        from VARPainelDasa 
        where 
        competencia = :competencia 
        and $$SQLIsCD^VARSQL(unidade) <> 1
        and ( $$SQLUnidadeGet^VARPaineisEstoque(:regional)=1 
        or unidade = :regional) 
        group by $$SQLGetGrupoItem^VARSQL(item) 
        order by total desc  )
    &sql(OPEN GetStockGrupo)
    &sql(FETCH GetStockGrupo)
    set count = 0
     WHILE (SQLCODE = 0) {
        set count = count + 1
        if (total > 0) {
            set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
            set serieGrupo.Categoria = $$SQLGetDescGrupoItem^VARSQL(grupo)
            set serieGrupo.Titulo = ""_$$SQLGetDescGrupoItem^VARSQL(grupo)
            set serieGrupo.Cor = "Black"
            set serieGrupo.Valor = total
            do serieGrupo.TituloColuna.Insert("Porcentagem")
            do serieGrupo.ColunaTabela.Insert(12)
            if ($length(grupo) > 0 ){
                set ^SerieGrupoPaineis(competencia,regGlobal,total,grupo) = $h
            }
            do series.Insert(serieGrupo)
        }
        &sql(FETCH GetStockGrupo)
     }
     &sql(CLOSE GetStockGrupo)

    quit series
    
    
SQLUnidadeGet(unidade="") 
    if (unidade = "") {
        quit 1
    }
    quit 0
    

GetSerieAgrupadas()
    set seriesG = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    set ano = $$SQLGetAno^VARSQL(+$HOROLOG)
    set anoAnterior = ano - 1
    set series1 = ##class(Tasc.dashboard.Serie).%New()
    set series1.Categoria = anoAnterior
    set series1.Titulo = anoAnterior
    set series2 = ##class(Tasc.dashboard.Serie).%New()
    set series2.Categoria = ano
    set series2.Titulo = ano
    
    set series1.SubSeries = $$GetSerieGrupo(anoAnterior_"12")
    set series2.SubSeries = $$GetSerieGrupo(ano_"12")
    
    do series1.CalculaValorTotal()
    do series2.CalculaValorTotal()
     
    do seriesG.Insert(series1)
    do seriesG.Insert(series2)
    
    quit seriesG
    
 ;w $$GetTipoUnidade^VARPaineisEstoque("A16")
GetTipoUnidade(lcl)

    if ($l(lcl) > 0 ) {
        quit $$$WWW0121FREE21($g(^WWW0121(0,0,lcl,1)))
    }
    else {
        quit ""
    }

 ; do AtualizaResumoPaineis^VARPaineisEstoque(comp,reg)
AtualizaResumoPaineis(competencia, regional = "")
    k ^TempPaineisEstoque(competencia)
    &SQL(delete from VARPainelDasaResumo where competencia = :competencia)
    #dim listaLocais as List of %String
    #dim listaSubLocais as List of %String
    
    // Looping nas regionais
    set lstRegionais = $$SQLGetCDs^VARSQL()
    for idxReg = 1 : 1 : $length(lstRegionais,";") {
    	set regional = $piece(lstRegionais,";",idxReg)        
	    set listaLocais = ##class(Tasc.stock.Util).GetListaSubLocais(regional)
	    for i = 1:1:listaLocais.Count() {
	        set filho = listaLocais.GetAt(i)
	        set valorFilho = $$GetEstoque(competencia,"--", filho,"--")
	        set listaSubLocais = ##class(Tasc.stock.Util).GetListaSubLocais(filho)
	        set valorTotalNetos = 0 
	        for j = 1:1:listaSubLocais.Count() {
	            set neto = listaSubLocais.GetAt(j)
	            set valorNeto = $$GetEstoque(competencia,"--", neto,"--")
	            set st =  $$GravaResumo(regional,$$GetTipoUnidade(neto),neto,competencia,valorNeto)
	            if ($$GetTipoUnidade(neto) '=4) {
	                set valorTotalNetos = valorTotalNetos + valorNeto
	            }
	        }
	        set st =  $$GravaResumo(regional,$$GetTipoUnidade(filho),filho,competencia,(valorFilho))
	    }
    }

GravaResumo(rgnl,tipo,unidade,competencia,valor)    
    set obj = ""
    set chave = rgnl_$$$COMMA_tipo_$$$COMMA_unidade_$$$COMMA_competencia
    set $$$VARPainelDasaResumoValor(obj) = valor
    set status =  $$$Save("VARPainelDasaResumo", chave, obj, 1)
    
    quit status

GetTotalUnidadesPorCompetencia(Competencia, tipo="", regional="")
    
    set qt = 0
    
    set anoC = $e(Competencia,1,4)
    set mesC = $e(Competencia,5,6)
    
    if (competencia > $extract($zdate($horolog,8),1,6)) {
        quit 0
    }
    
    if (regional '= "" ) {
        &SQL(select Count(*) into :qt from WWW0121 where  UPPER(ParentLocn) = :regional and $$SQLGetDataCadastroLocal^VARSQL(location) < $$SQLGetUltimoDiaMes^VARSQL(:mesC,:anoC))
        quit +qt
        
    }

    &SQL(select count(unidade) into :qt from VARPainelDasaResumo where Competencia = :Competencia and tipo <> 4 and  $$SQLFiltroTipo^VARSQL(:tipo,tipo)=1 and Valor > 0)
    
    if (qt = 0) {
        set CompAnoAnterior = (+$e(Competencia,1,4)-1)_$e(Competencia,5,6)
        &SQL(select count(unidade) into :qt from VARPainelDasaResumo where Competencia = :CompAnoAnterior and tipo <> 4  and  $$SQLFiltroTipo^VARSQL(:tipo,tipo)=1 and Valor > 0)
    }
    
    quit +qt
    
GetLinhaGrupoLocal(competencia,location="", grupo="",tipo ="",item="" ,link="")

    if (item'="") {
        quit $$GetLinhaGrupoLocalItem(competencia,location,grupo,item,link)
    }
    if (grupo '="") {
        quit $$GetLinhaGrupoLocalItem(competencia,location,grupo,item,link)
    }
    
     ;set ser = $$GetLinhaGrupoLocal^VARPaineisEstoque(201512)
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
    &sql(select sum(EstoqueTotalLocal) as totalLocal  into :totalLocal
         from VARPainelDasa 
         where 
         competencia = :competencia 
         and 
         ( 
             ($$SQLFiltroTipo^VARSQL(:location,location) =1) 
             OR 
             ($$SQLFiltroTipo^VARSQL(:location,Unidade)=1)
         )
         And
        ( 
            ($$SQLGetTipoLocal^VARSQL(location) = 4)
             OR
            ($$SQLGetTipoLocal^VARSQL(:location) = $$SQLGetTipoLocal^VARSQL(location))
        )
    )
        
    if (totalLocal > 0) {
        &sql(DECLARE CGrupoByLocn CURSOR FOR
            select sum(EstoqueTotalLocal) as total , $$SQLGetGrupoPai^VARSQL(GrupoItem), GrupoItem into :total,:grupo, :subGrupo
            from VARPainelDasa 
            where 
            competencia = :competencia 
            And 
            (   $$SQLFiltroTipo^VARSQL(:location,location) = 1
                OR
                $$SQLFiltroTipo^VARSQL(:location,Unidade) = 1
            )
            And
            ( 
                ($$SQLGetTipoLocal^VARSQL(location) = 4)
                 OR
                ($$SQLGetTipoLocal^VARSQL(:location) = $$SQLGetTipoLocal^VARSQL(location))
            )
            group by GrupoItem
            order by total desc  )
        
        &sql(OPEN CGrupoByLocn)
        &sql(FETCH CGrupoByLocn)
        set count = 0
         WHILE (SQLCODE = 0) {
            set count = count + 1
            if (total > 0) {
                set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
                set serieGrupo.Categoria = $$SQLGetDescGrupoItem^VARSQL(grupo)
                set serieGrupo.Titulo = ""_$$SQLGetDescGrupoItem^VARSQL(grupo)
                set serieGrupo.Cor = "Black"
                set serieGrupo.Valor = $fnumber(total,"D",2) ;$$^WWWTR(0,12,total,2)
                set ^zzFellipe("total") = total_","_$$^WWWTR(0,12,total,2)
                ;$$^WWWTR(0,8,total,2)
                do serieGrupo.TituloColuna.Insert("SubGrupo")
                do serieGrupo.ColunaTabela.Insert($$SQLGetDescGrupoItem^VARSQL(subGrupo))
                do serieGrupo.TituloColuna.Insert("Percentual")
                set percent = (total/totalLocal) *100
                do serieGrupo.ColunaTabela.Insert($$^WWWTR(0,12,percent,2)_"%")
                set serieGrupo.Link = $$MontaLink(link,"fGrupo="_subGrupo)
                do series.Insert(serieGrupo)
            }
            &sql(FETCH CGrupoByLocn)
         }
         &sql(CLOSE CGrupoByLocn)
    }
    quit series
    
    
GetLinhaGrupoLocalItem(competencia, location="", SubGrupo="",item="",link="")
     ;set ser = $$GetLinhaGrupoLocal^VARPaineisEstoque(201512)
    
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
        &sql(DECLARE Cursor12 CURSOR FOR
            select EstoqueTotalLocal as total , $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(item)), $$SQLGetGrupoItem^VARSQL(item), item, quantidade ,location into :total,:grupo, :subGrupo, :itemSQL, :qtde, :local
            from VARPainelDasa 
            where 
            competencia = :competencia 
            AND (
                $$SQLFiltroTipo^VARSQL(:location,location) = 1
                OR 
                $$SQLFiltroTipo^VARSQL(:location,unidade) = 1
            )
            AND (
                $$SQLGetGrupoItem^VARSQL(item) = :SubGrupo
                OR
                $$SQLGetGrupoPai^VARSQL($$SQLGetGrupoItem^VARSQL(item)) = :SubGrupo
            )
            AND 
                $$SQLGetTipoLocal^VARSQL(Unidade) in (1,2,3)
            AND 
                $$SQLFiltroTipo^VARSQL(:item,item) = 1
            order by total desc )
        &sql(OPEN Cursor12)
        &sql(FETCH Cursor12)
        set count = 0
         WHILE (SQLCODE = 0) {
            set count = count + 1
                set serieGrupo = ##class(Tasc.dashboard.Serie).%New()
                if (item '= "") {
                    set serieGrupo.Categoria = "("_local_") "_ $$SQLGetLocationName^VARSQL(local)
                    set serieGrupo.Titulo = "("_local_") "_$$SQLGetLocationName^VARSQL(local)
                }
                else {
                    set serieGrupo.Categoria = "("_itemSQL_") "_ $$SQLGetDescricaoProduto^VARSQL(itemSQL)
                    set serieGrupo.Titulo = "("_itemSQL_") "_$$SQLGetDescricaoProduto^VARSQL(itemSQL)
                }
                set serieGrupo.Cor = "Black"
                set serieGrupo.Valor = total
                do serieGrupo.TituloColuna.Insert("Un. de Medida")
                do serieGrupo.ColunaTabela.Insert($$SQLGetUnitSigla^VARSQL(itemSQL))
                do serieGrupo.TituloColuna.Insert("Quantidade")
                ;set percent = (total/totalLocal) *100
                do serieGrupo.ColunaTabela.Insert($$^WWWTR(0,12,qtde,2)_"")
                set serieGrupo.Link = $$MontaLink(link,"fProd="_itemSQL)
                do series.Insert(serieGrupo)
            &sql(FETCH Cursor12)
         }
         &sql(CLOSE Cursor12)
        
    /**/
    quit series
    
    
    
MontaLink(linkUrl,variavel)
    set linkNovo = linkUrl
    for i=1:1:$length(linkUrl,"&") {
        set filtro = $piece($piece(linkUrl,"&",i),"=",1)
        if (filtro = $piece(variavel,"=",1)) {
            set $piece(linkNovo,"&",i) = variavel
        }
    }
    quit linkNovo
        
getTextLogExecucao(pobjUltimaExecucao)
    new dataUltimaExecucao,horaUltimaExecucao
    set dataUltimaExecucao = $piece(pobjUltimaExecucao,"~",1)
    set horaUltimaExecucao = $piece(pobjUltimaExecucao,"~",2)
    quit "Os dados exibidos foram gerados em  <strong>"_$zdate(dataUltimaExecucao,4)_"</strong> √†s <strong>"_$extract($ztime(horaUltimaExecucao),1,5)_"</strong>."

AtualizaResumos() 
    new anoResumo,idxAno,mesResumo
    set anoResumo = $piece($zdate($horolog),"/",3)
    for idxAno = 0:1:1 {
        set anoResumo = +anoResumo - idxAno
        for idxMeses = 1:1:12 {
            if (idxMeses < 10) {
                set mesResumo = "0"_idxMeses
            }
            else {
                set mesResumo = idxMeses
            }
            
            set idcomp = anoResumo_mesResumo
            if (idcomp > $extract($zdate(+$H,8),1,6)) {
                quit 
            }
            w !,idcomp
            do AtualizaResumoPaineis^VARPaineisEstoque(idcomp)
        }
    }
    w !, "terminou"
    quit
    
GetSerieReqData(data, tipo, Filtro)
    ; 2016-06-09    FC
    new strFiltro
    
    #dim resultSet As %Result]]><![CDATA[Set
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeReqRegiao(data,tipo)
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()  
    set count = 0
    while (resultSet.Next()) {
        set count = count + 1
        
        set intAtend    = resultSet.Data("Atendida")
        set intRej      = resultSet.Data("Rejeitada")
        set totalReq    = intAtend + intRej
        
        set porcAtend   = (intAtend / totalReq) * 100
        set porcRej     = (intRej / totalReq) * 100
        
        set serieTipo = ##class(Tasc.dashboard.Serie).%New()
        set serieTipo.Cor = "Black"
        set serieTipo.Valor = $fn(porcAtend,"D",1)
        set serieTipo.Link = Filtro
            
        // 
        set serieTipo.Titulo = "Atendidos"
        set serieTipo.Categoria = $$^WWWTR(0,12,porcAtend,1)_"%"
        
        set (strLinkIniRej, strLinkFimRej, strLinkIniAtend, strLinkFimAtend) = ""
        
        if (intRej > 0) {
	        set strLinkIniRej = "<a href='"_$$MontaLink(Filtro,"fExibeRejeitadosDia="_1)_"'>"
	        set strLinkFimRej = "</a>"
        }
        if (intAtend > 0) {
	        set strLinkIniAtend = "<a href='"_$$MontaLink(Filtro,"fExibeRejeitadosDia="_2)_"'>"
	        set strLinkFimAtend = "</a>"
        }
        
        ;************************************
        /* Impress√£o da tabela customizada */
        do serieTipo.TituloColuna.Insert("<div class='estiloValor'>"_strLinkIniAtend_intAtend_strLinkFimAtend_"</div>")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_strLinkIniAtend_$$^WWWTR(0,12,porcAtend,1)_strLinkFimAtend_"%</div>")
        
        do serieTipo.TituloColuna.Insert("<div class='estiloValor'>"_strLinkIniRej_intRej_strLinkFimRej_"</a></div>")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_strLinkIniRej_$$^WWWTR(0,12,porcRej,1)_strLinkFimRej_"%</div>")
        
        do serieTipo.TituloColuna.Insert("<div class='estiloValor'>"_(intRej + intAtend)_"</div>")
        /* Impress√£o da tabela customizada */
        ;************************************
        
        do series.Insert(serieTipo)
     }

    quit series
    
GetTopQtdeRejeitada(pCompet="",filtros="",pTipo=1)
	; pTipo - 1=Quantidade Rejeitada; 2=Dias Rejeitados
	set SPRACHE = "PT"
	set strMes = $extract(pCompet,5,6)
    set strAno = $extract(pCompet,1,4)
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeTopRejeitada(strMes,strAno,20,pTipo)
    
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()  
    set count = 0
    while (resultSet.Next()) {
		set count = count + 1
		
		set intAtend    = resultSet.Data("Atendida")
		set intRej      = resultSet.Data("Rejeitada")
		set sqlItem		= resultSet.Data("Item")
		set qtdeDias    = resultSet.Data("QtdeDias")
		set ultimoDia   = resultSet.Data("UltimoDia")
		set qtdeRejeitada=resultSet.Data("QtdeRejeitada")
		set diaSemana	= resultSet.Data("DiaSemana")
		
		set totalReq    = intAtend + intRej
		if (totalReq > 0) {
			set porcAtend   = (intAtend / totalReq) * 100
			set porcRej     = (intRej / totalReq) * 100
		}
		else {
			set (porcAtend,porcRej) = 0
		}
		set serieTipo = ##class(Tasc.dashboard.Serie).%New()
		set serieTipo.Cor = "Black"
		set serieTipo.Valor = $fn(porcAtend,"D",1)
		    
		// 
		set serieTipo.Titulo = "Atendidos"
		set serieTipo.Categoria = $$^WWWTR(0,12,porcAtend,1)_"%"
		
		set strGrupo 	= $$SQLGetGrupoItem^VARSQL(sqlItem)
		set strGrupoPai = $$SQLGetGrupoPai^VARSQL(strGrupo)
		set strDescItem = $$SQLGetDescricaoProduto^VARSQL(sqlItem)
		
		;************************************
		/* Impress√£o da tabela customizada */
		do serieTipo.TituloColuna.Insert("<div>Item</div>")
		do serieTipo.ColunaTabela.Insert("<div style='text-align:left;'>"_sqlItem_" - " _strDescItem_ "</div>")
		
		do serieTipo.TituloColuna.Insert("<div>Grupo</div>")
		do serieTipo.ColunaTabela.Insert("<div>"_strGrupoPai_" - " _ strGrupo _"</div>")
		
		do serieTipo.TituloColuna.Insert("<div>Total de Dias Rejeitado</div>")
		do serieTipo.ColunaTabela.Insert("<div>"_qtdeDias_"</div>")
		
		do serieTipo.TituloColuna.Insert("<div>√öltimo dia da Rejei√ß√£o</div>")
		do serieTipo.ColunaTabela.Insert("<div>"_ultimoDia_" - " _ $$GetDescDiaSemana^VARSQL(diaSemana) _  "</div>")
		
		do serieTipo.TituloColuna.Insert("<div>Quantidade Total Rejeitada</div>")
		do serieTipo.ColunaTabela.Insert("<div>"_$$^WWWTR(0,12,qtdeRejeitada,0)_"</div>")
		/* Impress√£o da tabela customizada */
		;************************************
		
		do series.Insert(serieTipo)
	}

	quit series
	
GetItensRejeitadosDia(pData,pTipo,pLocal,pExibeRejeitadosDia,filtros="")
	; pTipo - 1=Quantidade Rejeitada; 2=Dias Rejeitados
	set SPRACHE = "PT"
	
    set resultSet = ##class(Tasc.stock.Util).GetItensRejeitadosDia(pData,pTipo,pExibeRejeitadosDia,pLocal)
    
	set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()
    set count = 0
    while (resultSet.Next()) {
		set count = count + 1
		
		set sqlLocal    = resultSet.Data("LocalDest")
		set sqlSubGrupo = resultSet.Data("SubGrupo")
		set sqlGrupo	= resultSet.Data("Grupo")
		set sqlItem		= resultSet.Data("Item")
		set sqlQtdeRej	= resultSet.Data("QtdeRejeitada")
		
		set serieTipo = ##class(Tasc.dashboard.Serie).%New()
		set serieTipo.Cor = "Black"
		set serieTipo.Valor = $fn(porcAtend,"D",1)
		
		set strDescItem = $$SQLGetDescricaoProduto^VARSQL(sqlItem)
		
		;************************************
		/* Impress√£o da tabela customizada */
		do serieTipo.TituloColuna.Insert("<div>Local</div>")
		do serieTipo.ColunaTabela.Insert("<div style='text-align:left;'>"_sqlLocal_ "</div>")
		
		do serieTipo.TituloColuna.Insert("<div>Grupo</div>")
		do serieTipo.ColunaTabela.Insert("<div>"_sqlGrupo_"</div>")
		
		do serieTipo.TituloColuna.Insert("<div>SubGrupo</div>")
		do serieTipo.ColunaTabela.Insert("<div>"_sqlSubGrupo_"</div>")
		
		do serieTipo.TituloColuna.Insert("<div>Item</div>")
		do serieTipo.ColunaTabela.Insert("<div style='text-align:left;'>"_sqlItem_" - " _strDescItem_ "</div>")
		
		if (pExibeRejeitadosDia = 1) {
			do serieTipo.TituloColuna.Insert("<div title='Quantidade total de linhas rejeitadas'>Quantidade Rejeitada</div>")
		}
		elseif (pExibeRejeitadosDia = 2) {
			do serieTipo.TituloColuna.Insert("<div title='Quantidade total de linhas atendidas'>Quantidade Atendida</div>")
		}
		do serieTipo.ColunaTabela.Insert("<div>"_sqlQtdeRej_"</div>")
		/* Impress√£o da tabela customizada */
		;************************************
		
		do series.Insert(serieTipo)
	}

	quit series
    
GetSerieCompetencia(pCompet="",filtros="") 
    new strStatus, totalDias, series, serieAtendida, serieRejeitada, strMes, strAno, resultSet, ultimoDiaMes, sc
    new arrDia, diaMes, qtdeAtend, qtdeRej, acumuladoAtend, acumuladoRej, mediaAtend, mediaRej, filtrosOriginal
    
    set filtrosOriginal = filtros
    
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")   
    set serieAtendida = ##class(Tasc.dashboard.Serie).%New()
    set serieRejeitada = ##class(Tasc.dashboard.Serie).%New()   
    
    set strMes = $extract(pCompet,5,6)
    set strAno = $extract(pCompet,1,4)
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeReqCompetencia(strMes, strAno)
    set ultimoDiaMes = $$SQLGetUltimoDiaMes^VARSQL(strMes, strAno)
    set ultimoDiaMes = +$piece($zd(ultimoDiaMes,4),"/",1)
    
    set sc = resultSet.Execute()
    while (resultSet.Next()) {
		set arrDia(+resultSet.Data("Dia")) = resultSet.Data("Atendida") _"~"_ resultSet.Data("Rejeitada")
    }
    
    set (totalDias, acumuladoAtend, acumuladoRej) = 0
    
    for diaMes = 1:1:ultimoDiaMes {
		
		set qtdeAtend   = 0
		set qtdeRej     = 0
		if ($data(arrDia(diaMes))) {
		    set qtdeAtend   = +$piece($get(arrDia(diaMes)),"~",1)
		    set qtdeRej     = +$piece($get(arrDia(diaMes)),"~",2)
		}
		if ($length(diaMes) = 1) {
		    set diaMes = "0"_diaMes
		}
		;################################################################
		set totalReq    = qtdeAtend + qtdeRej
		
		if (totalReq > 0) {
		    set porcAtend   	= $fnumber((qtdeAtend / totalReq) * 100,"D",1)
		    set porcRej     	= $fnumber((qtdeRej / totalReq) * 100,"D",1)
		    set totalDias		= totalDias + 1
		    set acumuladoAtend 	= acumuladoAtend + porcAtend
		    set acumuladoRej 	= acumuladoRej + porcRej
		}
		else {
		    set porcAtend   = 0
		    set porcRej     = 0
		}
		;################################################################
		
		set filtros = $$MontaLink(filtros,"fData="_diaMes_"/"_strMes_"/"_strAno)
		set filtros = $$MontaLink(filtros,"fCompetencia=")
		
		; Atendida
		set serieAtendida.Cor="#7cb5ec"
		set serieAtendida.Titulo = "Atendida"
		set serieAtendida.Categoria = "M√™s"
		do serieAtendida.InsertSubSeries(diaMes,porcAtend,"A","",filtros,"")
    
		; Rejeitados
		set serieRejeitada.Cor="#434348"
		set serieRejeitada.Titulo = "Rejeitada"
		set serieRejeitada.Categoria = "M√™s"
		do serieRejeitada.InsertSubSeries(diaMes,porcRej,"R","",filtros,"")
    }
    
    if (totalDias > 0) {
	    set mediaAtend 	= acumuladoAtend / totalDias
	    set mediaRej	= acumuladoRej / totalDias
	    
	    ; Atendida
		set serieAtendida.Cor="#7cb5ec"
		set serieAtendida.Titulo = "Atendida(%)"
		set serieAtendida.Categoria = ""
		do serieAtendida.InsertSubSeries("M√©dia",mediaAtend,"A","",filtrosOriginal_$char(0),"")
    
		; Rejeitados
		set serieRejeitada.Cor="#434348"
		set serieRejeitada.Titulo = "Rejeitada(%)"
		set serieRejeitada.Categoria = ""
		do serieRejeitada.InsertSubSeries("M√©dia",mediaRej,"R","",filtrosOriginal_$char(0),"")
    }
    
    do series.Insert(serieAtendida)
    do series.Insert(serieRejeitada)
    quit series
    
GetSerieNivelServicoAno(pFiltros="")
	// DASA-425: Fun√ß√£o alterada para recuperar os valores do painel de requisi√ß√£o mensal
    new strStatus, series, serieAtendida, serieRejeitada, resultSet, sc, qtdeAtend, qtdeRej
    new sqlMes, sqlAno, totalReq, porcAtend, porcRej, countMeses, porcAtendAcumul, porcRejAcumul
    
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
    set serieAtendida = ##class(Tasc.dashboard.Serie).%New()
    set serieRejeitada = ##class(Tasc.dashboard.Serie).%New()
    
    // DASA-425
    set resultSet = ##class(Tasc.stock.Util).GetMediaReqAno()
    set sc = resultSet.Execute()
    
    set arrMesesReq = ""
    do GetMesesRequisicao(12,.arrMesesReq)
    
    // Adiciona o resultado da query para os meses encontrado
    while (resultSet.Next()) {
		set qtdeAtend   = 0
		set qtdeRej     = 0
		
		set sqlMes      = +resultSet.Data("Mes")
		set sqlAno      = +resultSet.Data("Ano")
		set qtdeAtend   = +resultSet.Data("Atendida")
		set qtdeRej     = +resultSet.Data("Rejeitada")
		
		set arrMesesReq(+sqlAno,+sqlMes) = qtdeAtend_"~"_qtdeRej
    }
    
    do serieAtendida.TituloColuna.Insert("M√™s")
	do serieAtendida.ColunaTabela.Insert("<div style='font-weight: bold'>Atendido(%)</div>")
	
	do serieRejeitada.TituloColuna.Insert("M√™s")
	do serieRejeitada.ColunaTabela.Insert("<div style='font-weight: bold'>Rejeitado(%)</div>")
        
    set (countMeses, porcAtendAcumul, porcRejAcumul) = 0
    // Varre os √∫ltimos 12 meses
    set anoArray = ""
    set mesArray = ""
    for {
        set anoArray = $order(arrMesesReq(anoArray))
        quit:(anoArray = "")
        
        set mesArray = ""
        for {
        	set mesArray = $order(arrMesesReq(anoArray,mesArray))
        	quit:(mesArray = "")
        	
        	set qtdeAtend   = +$piece(arrMesesReq(anoArray,mesArray),"~",1)
        	set qtdeRej		= +$piece(arrMesesReq(anoArray,mesArray),"~",2)
        	set totalReq    = qtdeAtend + qtdeRej
        	
	        if (totalReq > 0) {
	            set porcAtend   = $fnumber((qtdeAtend),"D",2)
	            set porcRej     = $fnumber((qtdeRej),"D",2)
	            set countMeses = countMeses + 1
	            set porcAtendAcumul = porcAtendAcumul + porcAtend
	            set porcRejAcumul = porcRejAcumul + porcRej
	        }
	        else {
	            set porcAtend   = 0
	            set porcRej     = 0
	        }
	        
	        set textoCab = $extract($$GetDescMes^VARSQL(mesArray),1,3)_"/"_anoArray
	        
	        set mesFiltro = $select($length(mesArray)=1:"0"_mesArray,$length(mesArray)=2:mesArray)
	        set strFiltros = $$MontaLink(pFiltros,"fCompetencia="_anoArray_mesFiltro)
	        do serieAtendida.TituloColuna.Insert(textoCab)
        	do serieAtendida.ColunaTabela.Insert("<div><a href='"_strFiltros_"'>"_$$^WWWTR(0,12,porcAtend,2)_ "</a></div>")
        	
        	do serieRejeitada.TituloColuna.Insert(textoCab)
        	do serieRejeitada.ColunaTabela.Insert("<div><a href='"_strFiltros_"'>"_$$^WWWTR(0,12,porcRej,2)_ "</a></div>")
        }
    }
    if (countMeses > 0) {
	    set mediaAtend = porcAtendAcumul / countMeses
	    set mediaRej = porcRejAcumul / countMeses
    }
    else {
	    set mediaAtend = 0
	    set mediaRej = 0
    }
    
    do serieAtendida.TituloColuna.Insert("M√©dia")
	do serieAtendida.ColunaTabela.Insert("<div style='font-weight:bold'>"_$$^WWWTR(0,12,mediaAtend,2)_"</div>")
	
	do serieRejeitada.TituloColuna.Insert("M√©dia")
	do serieRejeitada.ColunaTabela.Insert("<div style='font-weight:bold'>"_$$^WWWTR(0,12,mediaRej,2)_"</div>")
        
    do series.Insert(serieAtendida)
    do series.Insert(serieRejeitada)
    
    quit series
    
GetSerieReqTipo(data, Filtro)
    ; 2016-06-09    FC
    #dim resultSet As %ResultSet
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeReqAtendTipoEst(data,,1)
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()  
    set count = 0
    while (resultSet.Next()) {
        set count = count + 1
        
        set intAtend    = resultSet.Data("Atendida")
        set intRej      = resultSet.Data("Rejeitada")
        set strCodLoc   = resultSet.Data("Location")
        set strTipoEstab    = resultSet.Data("TipoEstab")
        
        set strDescLoc  = $$SQLGetLocationName^VARSQL(strCodLoc)
        
        set totalReq    = intAtend + intRej
        
        set porcAtend   = (intAtend / totalReq) * 100
        set porcRej     = (intRej / totalReq) * 100
        
        set serieTipo = ##class(Tasc.dashboard.Serie).%New()
        set serieTipo.Cor = "Black"
        
        set serieTipo.Link = $$MontaLink(Filtro,"fTipo="_strTipoEstab)
        set serieTipo.Link = $$MontaLink(serieTipo.Link,"fTipoLink="_strTipoEstab)
        
        set serieTipo.Titulo = $$SQLGetTipoUnidadeDesc^VARSQL(strTipoEstab)
        set serieTipo.Valor = $fnumber(porcRej,"D",1)
        
        do serieTipo.TituloColuna.Insert("Atendido % (Qtde)")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_$$^WWWTR(0,12,porcAtend,1)_"% (" _ intAtend _ ")</div>")
        
        do serieTipo.TituloColuna.Insert("Rejeitado % (Qtde)")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_$$^WWWTR(0,12,porcRej,1)_"% (" _ intRej _ ")</div>")
        
        do serieTipo.TituloColuna.Insert("Total Itens")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_totalReq_"</div>")
        
        do series.Insert(serieTipo)
     }

    quit series
    
GetSerieReqTipoEst(data, tipo, pRegiao, Filtro)
    ; 2016-06-09    FC
    #dim resultSet As %ResultSet
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeReqAtendTipoEst(data,tipo,,pRegiao)
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()  
    set count = 0
    while (resultSet.Next()) {
        set count = count + 1
        
        set intAtend    = resultSet.Data("Atendida")
        set intRej      = resultSet.Data("Rejeitada")
        set strCodLoc   = resultSet.Data("Location")
        
        set strDescLoc  = $$SQLGetLocationName^VARSQL(strCodLoc)
        
        set totalReq    = intAtend + intRej
        
        set porcAtend   = (intAtend / totalReq) * 100
        set porcRej     = (intRej / totalReq) * 100
        
        set serieTipo = ##class(Tasc.dashboard.Serie).%New()
        set serieTipo.Cor = "Black"
        set serieTipo.Valor = $fn(porcAtend,"D",1)
        
        set serieTipo.Titulo = "Atendidos"
        set serieTipo.Categoria = $$^WWWTR(0,12,porcAtend,1)_"%"
        
        set serieTipo.Link = $$MontaLink(Filtro,"fRegional="_strCodLoc) ;Filtro
        
        do serieTipo.TituloColuna.Insert("C√≥d.")
        do serieTipo.ColunaTabela.Insert("<div class='estiloTexto'>"_strCodLoc_"</div>")
        
        do serieTipo.TituloColuna.Insert("Unidades")
        do serieTipo.ColunaTabela.Insert("<div class='estiloTexto'>"_strDescLoc_"</div>")
        
        do serieTipo.TituloColuna.Insert("% Atendidos")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_$$^WWWTR(0,12,porcAtend,1)_"%</div>")
        
        do serieTipo.TituloColuna.Insert("Qtde. Atendidos")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_intAtend_"</div>")
        
        do serieTipo.TituloColuna.Insert("% Rejeitados")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_$$^WWWTR(0,12,porcRej,1)_"%</div>")
        
        do serieTipo.TituloColuna.Insert("Qtde. Rejeitados")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_intRej_"</div>")
        
        do serieTipo.TituloColuna.Insert("Total")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_totalReq_"</div>")
        
        do series.Insert(serieTipo)
        
     }

    quit series
    
GetSerieReqUnid(data, tipo, pRegiao, Filtro)
    ; 2016-06-09    FC
    #dim resultSet As %ResultSet
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeReqAtendTipoEst(data,tipo,,pRegiao)
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()  
    set count = 0
    while (resultSet.Next()) {
        set count = count + 1
        
        set intAtend    = resultSet.Data("Atendida")
        set intRej      = resultSet.Data("Rejeitada")
        set strCodLoc   = resultSet.Data("Location")
        
        set strDescLoc  = $$SQLGetLocationName^VARSQL(strCodLoc)
        
        set totalReq    = intAtend + intRej
        
        set porcAtend   = (intAtend / totalReq) * 100
        set porcRej     = (intRej / totalReq) * 100
        
        set serieTipo = ##class(Tasc.dashboard.Serie).%New()
        set serieTipo.Cor = "Black"
        set serieTipo.Valor = $fn(porcAtend,"D",1)
        
        set serieTipo.Titulo = "Atendidos"
        set serieTipo.Categoria = $$^WWWTR(0,12,porcAtend,1)_"%"
        
        set serieTipo.Link = $$MontaLink(Filtro,"fRegional="_strCodLoc) ;Filtro
        
        set (strLinkIniRej, strLinkFimRej) = ""
        
        set (strLinkIniRej, strLinkFimRej, strLinkIniAtend, strLinkFimAtend) = ""
        
        if (intRej > 0) {
	        set strLinkIniRej = "<a href='"_$$MontaLink(Filtro,"fExibeRejeitadosDia="_1)_"'>"
	        set strLinkFimRej = "</a>"
        }
        if (intAtend > 0) {
	        set strLinkIniAtend = "<a href='"_$$MontaLink(Filtro,"fExibeRejeitadosDia="_2)_"'>"
	        set strLinkFimAtend = "</a>"
        }
        
        ;************************************
        /* Impress√£o da tabela customizada */
        do serieTipo.TituloColuna.Insert("<div class='estiloValor'>"_strLinkIniAtend_intAtend_strLinkFimAtend_"</div>")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_strLinkIniAtend_$$^WWWTR(0,12,porcAtend,1)_strLinkFimAtend_"%</div>")
        
        do serieTipo.TituloColuna.Insert("<div class='estiloValor'>"_strLinkIniRej_intRej_strLinkFimRej_"</div>")
        do serieTipo.ColunaTabela.Insert("<div class='estiloValor'>"_strLinkIniRej_$$^WWWTR(0,12,porcRej,1)_strLinkFimRej_"%</div>")
        
        do serieTipo.TituloColuna.Insert("<div class='estiloValor'>"_(intRej + intAtend)_"</div>")
        /* Impress√£o da tabela customizada */
        ;************************************
        
        do series.Insert(serieTipo)
     }

    quit series
    
GetSerieReqLocation(data, pRegional, Filtro)
    ; 2016-06-09    FC
    #dim resultSet As %ResultSet
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeReqAtendLocal(data,pRegional)
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()  
    set count = 0
    while (resultSet.Next()) {
        set count = count + 1
        
        set strItem     = resultSet.Data("Item")
        set fltQtdRej   = resultSet.Data("QtdRej")
        
        set serieTipo = ##class(Tasc.dashboard.Serie).%New()
        set serieTipo.Cor = "Black"
        
        set serieTipo.Link = $$MontaLink(Filtro,"fProd="_strItem)
        
        set strGrupo = $$SQLGetGrupoItem^VARSQL(strItem)
        
        do serieTipo.TituloColuna.Insert("Grupo")
        
        do serieTipo.ColunaTabela.Insert($$SQLGetGrupoPai^VARSQL(strGrupo))
        
        do serieTipo.TituloColuna.Insert("SubGrupo")
        do serieTipo.ColunaTabela.Insert(strGrupo)
        
        do serieTipo.TituloColuna.Insert("Item")
        do serieTipo.ColunaTabela.Insert("<div style='text-align: left;'>" _ strItem _ " - " _ $$SQLGetDescricaoProduto^VARSQL(strItem) _ "</div>")
        
        do serieTipo.TituloColuna.Insert("Quantidade Rejeitada")
        do serieTipo.ColunaTabela.Insert(fltQtdRej)
        
        do series.Insert(serieTipo)
        
     }

    quit series
    
GetSerieProduto(data, pProd, pTipo = "", Filtro)
    ; 2016-06-09    FC
    #dim resultSet As %ResultSet
    
    set resultSet = ##class(Tasc.stock.Util).GetQtdeProduto(data, pProd, pTipo)
    set series = ##class(%ListOfObjects).%New("Tasc.dashboard.Serie")
     
    set sc = resultSet.Execute()  
    set count = 0
    while (resultSet.Next()) {
        set count = count + 1
        
        set strLocal    = resultSet.Data("LocalDest")
        set strItem     = resultSet.Data("Item")
        set intAtend    = resultSet.Data("Atendida")
        set intRej      = resultSet.Data("Rejeitada")
        set QtdRej      = resultSet.Data("QtdRej")
        
        set totalReq    = intAtend + intRej
        
        set porcAtend   = (intAtend / totalReq) * 100
        set porcRej     = (intRej / totalReq) * 100
        
        set serieTipo = ##class(Tasc.dashboard.Serie).%New()
        set serieTipo.Cor = "Black"
        
        set serieTipo.Link = ""
        
        do serieTipo.TituloColuna.Insert("C√≥digo")
        do serieTipo.ColunaTabela.Insert(strLocal)
        
        do serieTipo.TituloColuna.Insert("Descri√ß√£o")
        do serieTipo.ColunaTabela.Insert($$SQLGetLocationName^VARSQL(strLocal))
        
        do serieTipo.TituloColuna.Insert("% Atendidos")
        do serieTipo.ColunaTabela.Insert(intAtend _ " - " _$$^WWWTR(0,12,porcAtend,1)_"%")
        
        do serieTipo.TituloColuna.Insert("% Rejeitados")
        do serieTipo.ColunaTabela.Insert(intRej _ " - " _ $$^WWWTR(0,12,porcRej,1)_"%")
        
        do serieTipo.TituloColuna.Insert("Quantidade Rejeitada")
        do serieTipo.ColunaTabela.Insert(QtdRej)
        
        do series.Insert(serieTipo)
        
     }

    quit series

GetValorA16UNIDADE(comp, grp)
    set totA16Unid = 0 
    &SQL(select +sum(EstoqueTotalLocal) as totalLocal   into :totA16Unid from VARPainelDasa 
         where 
         competencia = :comp
         AND  Location = "A16UNIDADE"        
         AND $$SQLGetGrupoItem^VARSQL(item) = :grp
    )
    
    quit totA16Unid
    
GetMesesRequisicao(pQtdeMeses=12,&pArrMesesReq)
	new mesAtual, anoAtual, cont
	set mesAtual = $piece($zdatetime(+$horolog,4),"/",2)
    set anoAtual = $piece($zdatetime(+$horolog,4),"/",3)
    
    set cont = 0
    for {
	    if (+mesAtual = 1) {
		    set mesAtual = 12
		    set anoAtual = anoAtual - 1
	    }
	    else {
		    set mesAtual = mesAtual - 1
	    }
	    set pArrMesesReq(+anoAtual,+mesAtual) = ""
	    set cont = cont + 1
	    
	    quit:(cont >= pQtdeMeses)
    }
    
    quit
]]></Routine>
</Export>