<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INWEINCYCLE1" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMSYS
#include INConst
#include %occInclude

INWEINCYCLE1
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		Stocktake Counting List CYCLE COUNTING   ; ZÄHLLISTE
	;
	; Inputs : 
	;
	;
	; ByRef :
	;    VORG(1)			;JAHR  ;year 
	;    VORG(4)			;MENGE ;quantity
	;    
	; Updates :
	;    ^INWEINCYCLE		Default Cycle Counting
	;    ^INWEINCYCLE1		Counting File For Cycle Counting
	;    ^INWEINVCYC		Stocktake File
	;    ^INWEINVPCYC		Counting Listings Cycle Counting
	;    ^INDRPITEM			DRP/MRP Item Location Master
	;    
	; Returns :
	;
	;
	; History :
	; 08-Nov-2006	GRF		Doco; Quits; expand commands
	; 08.05.2003	FIS
	;-------------------------------------------------------------------------------
	new ART,HIST,INVID,LFN,LOC,SATZ,strStatus,ZAEHL
	
	SET VORG(1) = $GET(VORG(1))     QUIT:VORG(1)=""
	
	set strStatus = $$$OK
	SET VORG(4)   = +$GET(VORG(4))
	
	IF $DATA(^INWEINVCYC(0,+$HOROLOG)) DO  QUIT
	. NEW YFORM
	. SET YFORM = "INWEINCYCLE"
	. DO ^WWWINFO($$^WWWTEXT(155))  ;BEREITS AUFBEREITET ;"Already Saved" 

	;Create Stocktake Header		PPP
	;^INWEINVP(0,1,1)=USER~60677~60677,38412~Test~1~3~0~0~~MWH1~P-C~~~
	
	SET ^INWEINVTEMP = ""
	LOCK +^INWINVTEMP:1 IF '$TEST QUIT
	KILL ^INWEINVTEMP(YUSER)
	KILL ^WWWSOR($JOB)
	KILL ^WWWSOR(YUSER)

	set strStatus = $$Transaction^COMTransaction("CreateTxn^INWEINCYCLE1("""_VORG(1)_""","""_VORG(4)_""")",$$$YES)
	
  	if $$$ISOK(strStatus) {
	 	do ^WWWFORM
 	} else {
	 	do ReturnError^COMUtilError(strStatus)
 	}
	
	quit
	

CreateTxn(pintYear, pintNo)
	;-------------------------------------------------------------------------------
	; Create ^INWEINVP - Stocktake
	; 
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 11-Nov-2009	GRF		New idStocktake,objStocktake (Some vars newed in main subroutine)
	; 08-Sep-2009	PP		SR<>: Created
	;-------------------------------------------------------------------------------
	new idStocktake,objStocktake,strStatus
	
	set strStatus   = $$$OK
	set idStocktake = $$^WWWNEXT("INWEINVP")
	
	if idStocktake'="" {
		new YFELD,YFOR,YVOR,YOK
		set $piece(YFELD,Y,1) = YBED
		set $piece(YFELD,Y,2) = +$horolog
		set $piece(YFELD,Y,3) = $horolog
		set $piece(YFELD,Y,4) = "Cycle Count Stocktake "_$zdt(+$horolog,3)
		set $piece(YFELD,Y,5) = 1
		set $piece(YFELD,Y,6) = 3
		set $piece(YFELD,Y,7) = 0
		set $piece(YFELD,Y,8) = 0
		set $piece(YFELD,Y,9) = YLOCATION
		//set YOK=$$^WWWSPEI("INWEINVP",idStocktake,YFELD,1)
		set strStatus = $$$Save("INWEINVP",idStocktake,YFELD,$$$YES)
	}
	
	if $$$ISOK(strStatus) {
		SET INVID=0
		SET ZAEHL=0
		SET HIST=""
		FOR  SET HIST=$ORDER(^INWEINCYCLE1(0,pintYear,HIST))  QUIT:HIST=""  DO  QUIT:(ZAEHL'<pintNo)||($$$ISERR(strStatus))  ;ZUERST DIE OHNE HISTORY ;originally who without 
		. SET LFN=""
		. FOR  SET LFN=$ORDER(^INWEINCYCLE1(0,pintYear,HIST,LFN),-1)  QUIT:LFN=""  QUIT:LFN=0  DO  QUIT:(ZAEHL'<pintNo)||($$$ISERR(strStatus))  ;ZUERST DIE MIT HÄUFIGER ZÄHLUNG ;originally who by means of 
		. . SET ART=""
		. . FOR  SET ART=$ORDER(^INWEINCYCLE1(0,pintYear,HIST,LFN,ART)) QUIT:ART=""  DO  QUIT:(ZAEHL'<pintNo)||($$$ISERR(strStatus))
		. . . ;
		. . . SET ZAEHL=ZAEHL+1
		. . . KILL ^INWEINCYCLE1(0,pintYear,HIST,LFN,ART,1)
		. . . SET ^INWEINCYCLE1(0,pintYear,HIST+1,LFN-1,ART,1)=""  ;LESS OPEN COUNTING, MORE FINISHED COUNTING
		. . . ;
		. . . SET ART1=$GET(^INART(0,ART,1))
		. . . SET NULL=1         ;OHNE BESTAND ;without 
		. . . //DO WE
		. . . //DO AUF
		. . . //IF NULL=1 DO HIST  ;AUS HISTORY ;out of
		. . . set strStatus = $$SetStocktakeLine(idStocktake,ART,YLOCATION) 		//SR....
		. . . ;
		. . . ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv DISABLED BLOCK START
		. . . ;UPDATE COUNT INFO IN DRP ITEM MASTER;FIS;23.12.2003 ;within DRP ITEM 
		. . . ;IF $DATA(^INDRPITEM(0,YLOCATION,ART)) DO
		. . . . NEW YOK,YFORM,YVOR,YFELD
		. . . . SET YFELD=$GET(^INDRPITEM(0,YLOCATION,ART,1))
		. . . . SET $PIECE(YFELD,Y,88)=+$HOROLOG  ;GEZÄHLT AM ;to the 
		. . . . SET $PIECE(YFELD,Y,89)=YBED  ;VON
		. . . . //SET YOK=$$^WWWSPEI("INDRPITEM",YLOCATION_","_ART,YFELD,1)
		. . . . set strStatus = $$$Save("INDRPITEM",YLOCATION_","_ART,YFELD,$$$YES) quit:$$$ISERR(strStatus)  ; FIXME : this quits the DO not the FOR
		. . . ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DISABLED BLOCK END
		. . . ;
		. . . ;UPDATE COUNT INFO IN DRP ITEM MASTER;FIS;23.12.2003 ;within DRP ITEM 
		. . . SET LOC=""
		. . . FOR  SET LOC=$ORDER(^INDRPITEM(0,LOC)) QUIT:LOC=""  IF $DATA(^INDRPITEM(0,LOC,ART)) DO  ;FIS;03.05.05;FIS;SR12200
		. . . . NEW YOK,YFORM,YVOR,YFELD
		. . . . SET YFELD=$GET(^INDRPITEM(0,LOC,ART,1))
		. . . . SET $PIECE(YFELD,Y,88)=+$HOROLOG                      ;GEZÄHLT AM ;to the 
		. . . . SET $PIECE(YFELD,Y,89)=YBED                           ;VON
		. . . . //SET YOK=$$^WWWSPEI("INDRPITEM",LOC_","_ART,YFELD,1)
		. . . . set strStatus = $$$Save("INDRPITEM",LOC_","_ART,YFELD,$$$YES) quit:$$$ISERR(strStatus)  ; FIXME : this quits the DO not the FOR
	
		if $$$ISOK(strStatus) {
			SET ^INWEINVPCYC(0,+$HOROLOG,1)=$$^WWWDATE(+$HOROLOG)_Y_$HOROLOG_Y_"("_ZAEHL_")"_Y_$$^WWWTEXT(33411)

			NEW YOK,YFORM,YVOR,YFELD
			SET YFELD=$GET(^INWEINCYCLE(0,pintYear,1))
			SET $PIECE(YFELD,Y,12)=$PIECE(YFELD,Y,12)+ZAEHL  ;GEZÄHLTE
			SET $PIECE(YFELD,Y,13)=$PIECE(YFELD,Y,13)-ZAEHL  ;OFFENE
			//SET YOK=$$^WWWSPEI("INWEINCYCLE",pintYear,YFELD,1)
			set strStatus = $$$Save("INWEINCYCLE",pintYear,YFELD,$$$YES)

	
			if $$$ISOK(strStatus) {

				; Copy StocktakeLines into INWEINV
				do MakeSnapList^INStocktakeCreate(idStocktake,0)
	
				set objStocktake = $get(^INWEINVP(0,idStocktake,1))       ; Header
			 	set $$$INWEINVPStatus(objStocktake)     = 2               ; "Count Open"
				set $$$INWEINVPSystemDate(objStocktake) = $horolog        ; SnapShot TimeStamp //SR16510
				set strStatus = $$$Save("INWEINVP",idStocktake,objStocktake,$$$YES)


				if $$$ISOK(strStatus) {
					;+++++++++++++++++++++++++++++++++++++++
					kill ^CacheTempStocktake($znspace,idStocktake)
					LOCK -^INWINVTEMP#"I"
					KILL ^INWEINVTEMP(YUSER)
					;+++++++++++++++++++++++++++++++++++++++
	
					//$$$LogMessage(pidLog,"IN00452")	                       ; "Stocktake Generated"
	
					; After we've created the snapshot we need to also create our first count.       ??? Why
					do CreateFirstCount^INStocktakeCount(idStocktake) 
	
					DO       ; FIXME : change to separate subroutine call
					. NEW YFORM
					. SET YFORM="INWEINCYCLE"
					. DO ^WWWINFO($$^WWWTEXT(32896))       ; "Submit"
				}
			}
		}
	}
	
	quit strStatus
	
	
	/* REDUNDANT
	
WE ;FREIE BESTÄNDE / ITEMS ON STOCK 
	NEW SATZ,ART1,BET,LAP,WED,WE1,RENR
	
	SET BET=""
	FOR  SET BET=$ORDER(^INWE(0,ART,BET)) QUIT:BET=""  DO               ;BETRIEB
	. SET LAP=""
	. FOR  SET LAP=$ORDER(^INWE(0,ART,BET,LAP)) QUIT:LAP=""  DO         ;LAGERPL
	. . SET WED=""
	. . FOR  SET WED=$ORDER(^INWE(0,ART,BET,LAP,WED)) QUIT:WED=""  DO   ;DATUM ;Date 
	. . . SET WE1=$GET(^INWE(0,ART,BET,LAP,WED,1))
	. . . IF $PIECE(WE1,Y,60)'="" QUIT  ;KOMMISSION ;errand 
	. . . ;
	. . . SET $PIECE(WEN1,Y,37)=$$^INWERMENGE(ART,BET,LAP,WED)  ;FIS;02.01.04;24852;MENGE AKTUELL HOLEN
	. . . ;SET $PIECE(WE1,Y,37)=0                   ;FIS;18.12.03;RESERVIERUNGEN AUS RESERVIERUNGSDATEI HOLEN
	. . . ;IF $DATA(^INWER(0,ART,BET,LAP,WED)) DO
	. . . ;. SET RENR=""
	. . . ;. FOR  SET RENR=$ORDER(^INWER(0,ART,BET,LAP,WED,RENR)) QUIT:RENR=""  DO
	. . . ;. . SET $PIECE(WE1,Y,37)=$PIECE(WE1,Y,37)+$PIECE(WE1,Y,4)
	. . . ;
	. . . SET $PIECE(WE1,Y,1) =ART  ;ARTIKELNUMMMER
	. . . SET $PIECE(WE1,Y,2) =BET
	. . . SET $PIECE(WE1,Y,3) =LAP
	. . . SET $PIECE(WE1,Y,6) =WED
	. . . SET $PIECE(WE1,Y,4) =$PIECE(WE1,Y,4)+$PIECE(WE1,Y,37)  ;MENGE GESAMT (SIEHE OBEN) ;quantity total 
	. . . SET $PIECE(WE1,Y,44)=$PIECE(WE1,Y,4)   ;MENGE GESAMT ;quantity total 
	. . . SET $PIECE(WE1,Y,30)=$PIECE(WE1,Y,1)   ;WARENEINGANGSNUMMER
	. . . SET $PIECE(WE1,Y,31)=$PIECE(WE1,Y,2)   ;CHARGEN-NUMMER
	. . . SET $PIECE(WE1,Y,32)=$PIECE(WE1,Y,38)  ;AUFTRAGSNUMMER WENN VORHANDEN ;when on hand 
	. . . SET $PIECE(WE1,Y,33)=$PIECE(WE1,Y,39)  ;POSITION
	. . . ;
	. . . SET INVID=INVID+1
	. . . SET ^INWEINVCYC(0,+$HOROLOG,INVID,1)=WE1
	. . . SET NULL=0
	
	QUIT
	
AUF ;AUFTRAGSDATEI WARENEINGANG ;receiving 
	NEW ERL,AUF,POS,POS1,BET,LAP,WED,WE1
	
	FOR ERL=" ",0 DO
	. SET AUF=""
	. FOR  SET AUF=$ORDER(^INAUFPs(0,5,ERL,$$^WWWUMLAU(ART,1),AUF)) QUIT:AUF=""  DO
	. . SET POS=""
	. . FOR  SET POS=$ORDER(^INAUFPs(0,5,ERL,$$^WWWUMLAU(ART,1),AUF,POS)) QUIT:POS=""  DO
	. . . SET POS1=$GET(^INAUFP(0,AUF,POS,1))
	. . . QUIT:$PIECE(POS1,Y,96)'=""  ;SCHON BERECHENET ;yet 
	. . . QUIT:$PIECE(POS1,Y,7)=4     ;DIENSTLEISTUNG
	. . . SET BET=""
	. . . FOR  SET BET=$ORDER(^INWEAUF(0,AUF,POS,BET)) QUIT:BET=""  DO               ;BETRIEB
	. . . . SET LAP=""
	. . . . FOR  SET LAP=$ORDER(^INWEAUF(0,AUF,POS,BET,LAP)) QUIT:LAP=""  DO         ;LAGERPL
	. . . . . SET WED=""
	. . . . . FOR  SET WED=$ORDER(^INWEAUF(0,AUF,POS,BET,LAP,WED)) QUIT:WED=""  DO   ;DATUMSSTAMPMMER
	. . . . . . SET WE1=$GET(^INWEAUF(0,AUF,POS,BET,LAP,WED,1))
	. . . . . . ;
	. . . . . . SET $PIECE(WE1,Y,1) =ART                ;ARTIKELNUMMMER
	. . . . . . SET $PIECE(WE1,Y,2) =BET
	. . . . . . SET $PIECE(WE1,Y,3) =LAP
	. . . . . . SET $PIECE(WE1,Y,6) =WED
	. . . . . . SET $PIECE(WE1,Y,31)=$PIECE(WE1,Y,1)    ;WENR IN DAS FELD EINTRAGEN ;within who field 
	. . . . . . SET $PIECE(WE1,Y,31)=$PIECE(WE1,Y,2)    ;CHARGENNUMMER WENN VORHANDNE ;when 
	. . . . . . SET $PIECE(WE1,Y,32)=AUF                ;AUFTRAGSNUMMER
	. . . . . . SET $PIECE(WE1,Y,33)=POS                ;POSITION
	. . . . . . SET $PIECE(WE1,Y,44)=$PIECE(WE1,Y,4)
	. . . . . . ;
	. . . . . . SET INVID=INVID+1
	. . . . . . SET ^INWEINVCYC(0,+$HOROLOG,INVID,1)=WE1
	. . . . . . SET NULL=0
	
	QUIT
	
HIST ;AUS HISTORY ;out of 
	NEW TAG,NUM,WE1,LAP
	
	SET LAP=$PIECE($GET(^INVORGB(0,0,YLOCATION,1)),Y,1)
	IF LAP="" SET LAP=0
	SET WE1=""
	SET $PIECE(WE1,Y,1)=ART   
	SET $PIECE(WE1,Y,2)=YLOCATION   
	SET $PIECE(WE1,Y,3)=LAP
	SET $PIECE(WE1,Y,6)=+$HOROLOG   
	SET $PIECE(WE1,Y,4)=0  ;IST MENGE  ;quantity 
	SET $PIECE(WE1,Y,44)=0  ;SOLL MENGE  ;quantity 
	SET INVID=INVID+1
	SET ^INWEINVCYC(0,+$HOROLOG,INVID,1)=WE1
	QUIT
	
	*/
	
	
QTY(YKEY,TYP)
	;-------------------------------------------------------------------------------
	;  ZÄHLMENGE HEUTE / QTY TO COUNT TODAY  - EINSPRUNG !
	;
	; TYP:  0 = TO COUNT TODAY
	;       1 = TOTAL NOT COUNTED YET ;whole privation 
	;       2 = TOTAL COUNTED ;whole 
	; 
	; 03-Jun-2010	GRF		SR17146: call "DD.MM.YYYY" wrapper for WWWDATE1
	;-------------------------------------------------------------------------------
	NEW START,QTY,TOTAL,OPEN,COUNT,TODAY
	
	SET QTY=0
	QUIT:$GET(YKEY)="" QTY
	
	SET TYP   = +$GET(TYP)
	SET TOTAL = $PIECE($GET(^INWEINCYCLE(0,YKEY,1)),Y,11)  ;TOTAL COUNTING QTY ;whole 
	SET OPEN  = 0                                           ;NOT COUNTED ITEMS ;privation 
	
	;;;DO  ;TAKES TOO LONG !
	;. NEW ITEM,NO
	;. SET ITEM=""
	;. FOR  SET ITEM=$O(^INWEINCYCLE1(0,YKEY,ITEM)) QUIT:ITEM=""  DO
	;. . SET NO=""
	;. . FOR  SET NO=$O(^INWEINCYCLE1(0,YKEY,ITEM,NO)) QUIT:NO=""  DO
	;. . . SET OPEN=OPEN+NO
	
	SET OPEN  = $PIECE($GET(^INWEINCYCLE(0,YKEY,1)),Y,13)  ;TOTAL OF ITEMS, NOT COUNTED YET
	SET COUNT = TOTAL-OPEN
	SET START = $$DMY^WWWDATE1("01.01."_YKEY)  ;FIRST DAY OF YEAR ; SR17146
	SET TODAY = TOTAL/365                   ;TO COUNT EACH DAY
	SET TODAY = TODAY*(+$HOROLOG-START)     ;QTY TO COUNT UNTIL TODAY
	SET TODAY = TODAY-COUNT                 ;COUNTED ALREADY
	IF TYP=0 SET QTY = $JUSTIFY(TODAY,0,0)
	IF TYP=1 SET QTY = $JUSTIFY(OPEN,0,0)
	IF TYP=2 SET QTY = $JUSTIFY(COUNT,0,0)
	QUIT QTY


SetStocktakeLine(pidStocktake,pidItem,pidLocn)
	;-------------------------------------------------------------------------------
	; Create a CYCLIC Stocktake Line
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 04-Nov-2009	GRF		SR16871: INAvgCost replaces INARTAVG
	; 08-Sep-2009	PP		SR<>: Created
	;-------------------------------------------------------------------------------
	new arrBundleAtt,curAvgCost,fltQty,idBundle,idGroup,idItem,idLocn,idStore
	new loopAttr,loopBundles,lstOnHand
	new objAttr,objBundle,objBundleStock,objItem,objResultSet,objSTLine
	new sc,strSortKey,strStatus,tmeLastLog
	
	set strStatus = $$$OK
	
	set objItem = ##class(alINV.dItem).%OpenId(pidItem)
	
	if objItem'=$$$NULLOREF {
		//$$$LogItem(pidLog,$listbuild("IN00448",idItem),tmeLastLog,idLogEntry)    ; ";Processing, Item %1"
		
	;	set curAvgCost = $$GetCostAsAtDate^INARTAVG(pidItem)  ; SR16871
		set curAvgCost = $$GetCostForLocn^INAvgCost(pidItem,pidLocn)
		set lstOnHand  = $$CreateBundleList^INStocktakeCreate(pidItem,.sc)
		set strStatus  = $$ISStatusToDLStatus^COMUtilError(sc)
		
		;  Filter
		; ------------------------------
		
		//set idxItemGroup = $$$Index(idGroup)
		//set idxItemDesc  = $$$Index(objItem.SearchName)
		
		for loopBundles = 1:1:lstOnHand.Count() {
			set objBundleStock = lstOnHand.GetAt(loopBundles)
			
			set idLocn = objBundleStock.Storage.Location.Code
			continue:pidLocn'=idLocn
			set idStore = objBundleStock.Storage.Code        ; V1 Storage ID
			
			;  Use
			; ------------------------------
			
			set objBundle = objBundleStock.Bundle
			set idBundle  = objBundle.%Id()
			set fltQty    = objBundleStock.QtyOnHand
			
			set objSTLine = ""
			set $$$INWEINVItemNumber(objSTLine)     = pidItem
			set $$$INWEINVLocation(objSTLine)       = pidLocn
			set $$$INWEINVStockLocation(objSTLine)  = idStore
            set $$$INWEINVTargetQuantity(objSTLine) = fltQty 
			set $$$INWEINVBundleID(objSTLine)       = idBundle
			
			//if pblnDisplaySOH {
			if $$$NEVER {
				set $$$INWEINVActualQuantity(objSTLine) = fltQty
			} else {
				set $$$INWEINVActualQuantity(objSTLine) = ""
			}
			set $$$INWEINVUnitPrice(objSTLine)    = curAvgCost   ; D8
			set $$$INWEINVAveragePrice(objSTLine) = curAvgCost   ; D80
			set $$$INWEINVStockType(objSTLine)    = "A"          ; D92   Available   
			
			set sc = ##class(alSOH.iBundle).GetAttributesForBundle(idBundle,.arrBundleAtt)
			
			set $$$INWEINVLotNo(objSTLine) 		= $get(arrBundleAtt("Lot Number"))
			set $$$INWEINVExpiryDate(objSTLine) = $get(arrBundleAtt("Use By Date"))
			set $$$INWEINVBrand(objSTLine)      = $get(arrBundleAtt("Brand"))
			set $$$INWEINVOwner(objSTLine)      = $get(arrBundleAtt("Owner"))
			set $$$INWEINVProgram1(objSTLine)   = $get(arrBundleAtt("Program"))
			
			set strSortKey = $$MakeKey^INStocktakeCreate(1,pidItem,idStore)
			
			if strSortKey'="" {
				set @("^CacheTempStocktake($znspace,pidStocktake,idLocn,"_$$^WWWKEYBUILD(strSortKey)_",idBundle)") = objSTLine
			}
			
			do objBundle.%Close()
			do objBundleStock.%Close()
		}
		do lstOnHand.%Close()
	}
	
	do objItem.%Close()
	
	set INVID = INVID+1
	set ^INWEINVCYC(0,+$horolog,INVID,1) = pidItem_Y_pidLocn   ; FIXME : Not building index - use $$$Save <GRF>
	
	quit strStatus
	
]]></Routine>
</Export>