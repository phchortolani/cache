<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINGLBankTranMatch" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINGLBankTranMatch
	#include COMSYS
	#include FINConst
 
Match(pidBankLine,pobjTran,pstrSearch,pidBankRecon,pidAccount)
	/*------------------------------------------------------------------------------
	; Attempt to match a bank line to the remaining uncleared transactions
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 23-Feb-2006	Steve S	SR14126: Check pre cleared data first
	; 22-Feb-2006	RPW		SR13816: Match to the closest date.
	; 20-Feb-2006	RPW		SR14229: Rewrote to use all the search criteria correctly based on FINGLBankReconMatched
	; 						Added extra information regarding match results.
	; 						Also get the search criteria
	; 						Criteria is $e(pstrSearch,1) = Use Date or not
	; 						            $e(pstrSearch,2) = Use Reference or not
	; 						Do not plus the amount
	; 07-Oct-2005	JW		SR13641: Created (moved from ReconcileBankRecon)
	;-----------------------------------------------------------------------------*/
	new blnCredit,curAmount,strRef,idAccount,idTran,idLine,strType,blnPreClear,objPreClear
	new blnDate,blnRef,strMatchRef,dteMatchDate,strNo,blnMatch,idIndex,dteDate
	new objBankReconMatched,idTranLine,dteMatched,dteClosest,objClosest
	new intDifMatched,intDifClosest,strChildClass,idChild,strParentClass,idParent
	
	set blnMatch=$$$NO
	
	set blnDate=$extract(pstrSearch,1)
	set blnRef =$extract(pstrSearch,2)
	
	set idLine=""
 
	set blnCredit = (+$$$FINGLBankTranCreditAmount(pobjTran)'=0)
	
	set curAmount = $select(blnCredit:$$$FINGLBankTranCreditAmount(pobjTran),1:$$$FINGLBankTranDebitAmount(pobjTran)) // SR141229
	
	set strMatchRef=$$$FINGLBankTranReference(pobjTran)
	if strMatchRef="" set strMatchRef=" "
	set dteMatchDate=$$$FINGLBankTranTransactionDate(pobjTran)
 
	// <TODO> Clean up messy global references using indirection commands
 
	set blnPreClear=$$$NO
 
	if blnDate&&blnRef { ;1 1
		set idIndex=$select(blnCredit:4,$$$YES:5)
		set strRef=$$$Index(strMatchRef)
		set dteDate=$$$Index(dteMatchDate)
		set strNo=$$$ANINO
		
		if $data(^FINGLBankReconPreCleareds(YM,idIndex,strNo,curAmount,dteDate,strRef,pidBankRecon)) {
			set idLine=$order(^FINGLBankReconPreCleareds(YM,idIndex,strNo,curAmount,dteDate,strRef,pidBankRecon,""))
			set blnPreClear=$$IncludePreClear^FINGLBankReconPreCleared(pidBankRecon,idLine)
		} 
		
		if ('blnPreClear)&&$data(^FINGLBankReconMatcheds(YM,idIndex,strNo,curAmount,dteDate,strRef,pidBankRecon)) {
			set idLine=$order(^FINGLBankReconMatcheds(YM,idIndex,strNo,curAmount,dteDate,strRef,pidBankRecon,""))
		}
		
	} elseif 'blnDate&&blnRef { ; 0 1
		set idIndex=$select(blnCredit:6,$$$YES:7)
		set strRef=$$$Index(strMatchRef)
		set strNo=$$$ANINO
		
		if $data(^FINGLBankReconPreCleareds(YM,idIndex,strNo,curAmount,strRef,pidBankRecon)) { 
			set idLine=$order(^FINGLBankReconPreCleareds(YM,idIndex,strNo,curAmount,strRef,pidBankRecon,""))
			set blnPreClear=$$IncludePreClear^FINGLBankReconPreCleared(pidBankRecon,idLine)
		}
		
		if ('blnPreClear)&&$data(^FINGLBankReconMatcheds(YM,idIndex,strNo,curAmount,strRef,pidBankRecon)) {
			set idLine=$order(^FINGLBankReconMatcheds(YM,idIndex,strNo,curAmount,strRef,pidBankRecon,""))
		}
		
	} elseif blnDate&&'blnRef { ; 1 0
		set idIndex=$select(blnCredit:10,$$$YES:11)
		set dteDate=$$$Index(dteMatchDate)
		set strNo=$$$ANINO
		
		if $data(^FINGLBankReconPreCleareds(YM,idIndex,strNo,curAmount,dteDate,pidBankRecon)) {
			set idLine=$order(^FINGLBankReconPreCleareds(YM,idIndex,strNo,curAmount,dteDate,pidBankRecon,""))
			set blnPreClear=$$IncludePreClear^FINGLBankReconPreCleared(pidBankRecon,idLine)
		}
		
		if ('blnPreClear)&&$data(^FINGLBankReconMatcheds(YM,idIndex,strNo,curAmount,dteDate,pidBankRecon)) {
			set idLine=$order(^FINGLBankReconMatcheds(YM,idIndex,strNo,curAmount,dteDate,pidBankRecon,""))
		}
		
	} else { ; 0 0
		set idIndex=$select(blnCredit:8,$$$YES:9)
		set strNo=$$$ANINO
		set objClosest=""
		
		if $data(^FINGLBankReconPreCleareds(YM,idIndex,strNo,curAmount,pidBankRecon)) {
			set objClosest=$$GetClosest(idIndex,strNo,curAmount,pidBankRecon,dteMatchDate,$$$YES)	
		} 
		
		if (objClosest="") {
			if $data(^FINGLBankReconMatcheds(YM,idIndex,strNo,curAmount,pidBankRecon)) {
				set objClosest=$$GetClosest(idIndex,strNo,curAmount,pidBankRecon,dteMatchDate,$$$NO)
			}
		} else {
			set blnPreClear=$$$YES	
		}
		
		set idLine=$piece(objClosest,Y,1)
	}
	
	if (idLine'="") {
		if 'blnPreClear { //SR14126
			set objBankReconMatched=$get(^FINGLBankReconMatched(YM,pidBankRecon,idLine,1))
			set idAccount 	= $$$FINGLBankReconMatchedAccount(objBankReconMatched)
			set idTran 		= $$$FINGLBankReconMatchedTransaction1(objBankReconMatched)
			set idTranLine 	= $$$FINGLBankReconMatchedTransactionLine(objBankReconMatched)
			do UpdateMatched^FINGLBankReconMatched(pidBankRecon,idTran,idTranLine,$$$YES,$$$NO,strMatchRef,dteMatchDate,pidBankLine,pstrSearch)
			set strChildClass="FINGLBankReconMatched"
			set idChild=pidBankRecon_$$$COMMA_idLine
		} else {
			set objPreClear=$get(^FINGLBankReconPreCleared(YM,pidBankRecon,idLine,1))
			set $$$FINGLBankReconPreClearedCleared(objPreClear)=$$$YES
			set $$$FINGLBankReconPreClearedBankFileLine(objPreClear)=pidBankLine
			do Save^COMUtils("FINGLBankReconPreCleared",pidBankRecon_","_idLine,objPreClear,1)
			do HandlePreCleared^FINGLBankReconPreCleared(idLine,objPreClear,$$$YES,$$$NO,,pidBankRecon,idLine,$$$NO)
			set strChildClass="FINGLBankReconPreCleared"
			set idChild=pidBankRecon_$$$COMMA_idLine
		}
		
		set $$$FINGLBankTranMatched(pobjTran)=$$$YES
		do Save^FINSYS("FINGLBankTran",pidAccount_","_pidBankLine,pobjTran,1)
		set strParentClass="FINGLBankTran"
		set idParent=pidAccount_$$$COMMA_pidBankLine
		
		do AddParentAndChild^FINGLBankReconManualMatch(pidBankRecon,strParentClass,idParent,strChildClass,idChild,$$$NO)
	}
	
 	quit
 	
 
GetClosest(pidIndex,pstrNo,pcurAmount,pidBankRecon,pdteMatchDate,pblnPreCleared) private
	;-------------------------------------------------------------------------------
	; Returns the "closest" line record.
	; NOTE: Called from above as private, hence no null checks.
	; 
	; (Most of the code in this routine was cut + pasted from Match^FINGLBankTranMatch)
	;
	; Params: pidIndex			: The index number
	; 		  pstrNo			: The "no" subscript, when UMLAU'd
	; 		  pcurAmount		: Amount to match by
	; 		  pidBankRecon		: The bank rec number
	; 		  pdteMatchDate		: The match date
	; 		  pblnPreCleared	: Are we checking pre cleared?
	;
	; ByRefs:
	;
	; Returns: objClosest
	;
	; History:
	; 24-Feb-2006	Steve S		SR14126: Created
	;-------------------------------------------------------------------------------
	new objClosest,idLine,objLine,dteMatched,dteClosest,intDifMatched,intDifClosest
 
	set objClosest=""
	set idLine=""
	
	for {
		if pblnPreCleared {
			set idLine=$order(^FINGLBankReconPreCleareds(YM,pidIndex,pstrNo,pcurAmount,pidBankRecon,idLine))
		} else {
			set idLine=$order(^FINGLBankReconMatcheds(YM,pidIndex,pstrNo,pcurAmount,pidBankRecon,idLine))
		}
		
		quit:(idLine="")
		continue:(pblnPreCleared)&&('$$IncludePreClear^FINGLBankReconPreCleared(pidBankRecon,idLine))
		
		if pblnPreCleared {
			set objLine=$get(^FINGLBankReconPreCleared(YM,pidBankRecon,idLine,1))
			set dteMatched=$$$FINGLBankReconPreClearedTransactionDate(objLine) 	
		} else {
			set objLine=$get(^FINGLBankReconMatched(YM,pidBankRecon,idLine,1))
			set dteMatched=$$$FINGLBankReconMatchedTransactionDate(objLine)
		}	
		
		set dteClosest=$piece(objClosest,Y,2)
		set intDifMatched=$zabs(pdteMatchDate-dteMatched)
		set intDifClosest=$zabs(pdteMatchDate-dteClosest)
		
		if (intDifMatched<intDifClosest) {
			set objClosest=idLine_Y_dteMatched
		} elseif (intDifMatched>intDifClosest) {
			if (objClosest'="") {
				quit
			}
		}
	}
	
	quit objClosest
]]></Routine>
</Export>