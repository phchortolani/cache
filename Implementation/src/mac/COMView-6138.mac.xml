<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMView" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMView
	;-------------------------------------------------------------------------------
	; routines showing favourites(views) tabs and other related routines.
	; 
	; History:
	; 23-Dec-2013	shobby	Resubmit after failed compile due to missing COMConst for COMViewD
    ; 15-May-2009	GRF		SR16474: replace Order macros; clear out some old
    ; 							commented lines
	; 09-Jun-2008	shobby	SRBR014953 Class/Form changed (Do Not remove comment)
	; 15-Mar-2005	GRF		Boolean Macros
	;-------------------------------------------------------------------------------
	
#include COMView
#include COMConst
#include WWWConst
	
OnBeforeDelete(YKEY)
    ;-------------------------------------------------------------------------------
    ; Get the id of the view last used by this user for this class.
    ;
    ; Returns:ID (Favourite)
    ;
    ; History:
    ; 07-Apr-2009	shobby	SR16474: created
    ;-------------------------------------------------------------------------------
    new idClass,idFavourite,idFilter,idKey,idLang,strStatus
	
	set strStatus = $$$OK

	set idClass     = $$$KEY1(YKEY)
	set idFavourite = $$$KEY2(YKEY)
	
	set idLang = ""
	for {
		set idLang = $order(^COMViewLang(0,idClass,idLang))
		quit:idLang=""
		quit:'$$$ISOK(strStatus)
		
		set idKey = idClass_","_idLang_","_idFavourite
		set strStatus = $$$Kill("COMViewLang",idKey)
	}
	
	if $$$ISOK(strStatus) {
		set idFilter = ""
		for {
			set idFilter = $order(^COMViewFilter(0,idClass,idFavourite,idFilter))
			quit:idFilter=""
			quit:'$$$ISOK(strStatus)
			
			set idKey = idClass_","_idFavourite_","_idFilter
			set strStatus = $$$Kill("COMViewFilter",idKey)
		}
	}
	if $$$ISOK(strStatus) {
		kill ^COMViewColumn(0,idClass,idFavourite)
		kill ^COMViewColumnUser(0,idClass,idFavourite)
	}
	quit strStatus
	
	
GetCurrentView(pidClass)
    ;-------------------------------------------------------------------------------
    ; Get the id of the view last used by this user for this class.
    ;
    ; Returns:ID (Favourite)
    ;
    ; History:
    ; 15-Feb-2007	Steve S	SR15431: Save properly
    ; 21-Jul-2005	RPW		This routine can get passed a missing pidClass.
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new idView,objView,strStatus
	
	quit:($get(pidClass)="") "" ; This is a quick fix!
	
	set idView = $$$COMViewUserLastView($get(^COMViewUser(0,pidClass,YBED,1)))
	if (idView="") || '$data(^COMView(0,pidClass,idView,1)) {
		set idView = 0
		if '$data(^COMView(0,pidClass,idView,1)) {
			set objView=""
			set $$$COMViewDescription(objView)=$$$Text("Com00119")   ; "Default"
			set strStatus = $$$Save("COMView",pidClass_","_idView,objView,$$$YES)
		}
	}
	quit idView
	
	
Setup(pidClass)
    ;-------------------------------------------------------------------------------
    ; Sets up screen for favourites
    ;
    ; History:
    ; 23-Apr-2007	RPW		SR15440: Reset the COMViewUser entry to point to the
    ; 							current view as the last view.
    ; 20-Feb-2007	Steve S	SR15440: Get available view
    ; 20-Feb-2006	PO		SR14250: Source security settings from form related to
    ; 							data and not COMViewSearch
    ; 31-Jan-2006	PO		SR14250: Hide field chooser if user not permitted to use it.
    ; 31-Jan-2006	PO		SR14249: Hide disabled buttons
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new idClass,idForm,idView,objViewUser,strStatus
	
	set idForm = $get(^CacheTempView(YUSER,"Form"))
	set idView = $$GetAvailableView^COMViewFavourite(pidClass)
	 	
 	set idClass     = $get(^CacheTempView(YUSER,"Class"))
 	set objViewUser = $get(^COMViewUser(0,idClass,YBED,1))
 	set $$$COMViewUserLastView(objViewUser) = idView
 	set strStatus   = $$$Save("COMViewUser",idClass_$$$COMMA_YBED,objViewUser,$$$YES)
	
	do DisplayView(pidClass,idView)
	do SetFiltersForView(pidClass,idView)
	do SetColumnsForView^COMViewColumn(pidClass,idView)
	do HideDisabledButtons(pidClass,idView)
	
	if '$$HasViewAccess(YBED,idForm,YM) write "document.getElementById('fldChooseBar').style.display = 'none';"
	
	quit
	
	
DisplayView(pidClass="",pidView="")
    ;-------------------------------------------------------------------------------
    ; Populates the favourite radio buttons on the screen.
    ;
    ; History:
    ; 06-Apr-2009	shobby	SR16443: Different colours are now used to highlight
    ; 							whether a COMView favourite is core (distribute)
    ; 							or user defined.
    ; 22-May-2007	RPW		SR15524: Allow for "no views" to work correctly.
    ; 24-Apr-2007	FrankF	SRBR014441: Translation for favourites.
    ; 19-Feb-2007	Steve S	SR15440: 'If' test no longer needed
    ; 15-Feb-2007	Steve S	SR15431: Use an array / order macro
    ; 09-Feb-2007	RPW		SR15426: If we are in form only show locked favourites
    ; 01-Feb-2006	PO		SR14257: Support non numeric favourite ids
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new arrViews,blnActive,idView,objView,strDesc
	
	write "RemoveViews();"
	
	do GetViews^COMViewFavourite(pidClass,YLOCATION,YBED,.arrViews)
	
	if '$data(arrViews)&&(pidView=0) {
		set arrViews(0)=""		
	}
 	
	set idView=""
	for {
		set idView=$order(arrViews(idView))
		quit:idView=""
		
		set objView = $get(^COMView(0,pidClass,idView,1))
		
		// only relevant views are now returned
		
		// Translation for favourites.
		set strDesc = $$GetTextForFavourite(pidClass, idView, objView)
		set blnActive = (pidView=idView)

		write "AddView('"_idView_"','"_strDesc_"',"_blnActive_","_+$$$COMViewDistribute(objView)_");"
	}
	write "ViewChanged('','"_pidView_"');" // SR14257
	quit
	
	
AllowedToCreateViews(strCompany,strUser)
    ;-------------------------------------------------------------------------------
    ; Determine whether a particular user is permitted to create a new view
    ;
    ; Params: Company - YM, strUser - YBED
    ;
    ; Returns: $$$YES if user is permitted to create new views
    ;
    ; History:
    ; 15-Sep-2005	JW		SR13502: Check access correctly.
	; 28-Jul-2005	PO		SR12608: Correctly check whether user priviledges exist
	; 							in required priviledges.
    ; 13-Jul-2005	PO		SR12608: Created
    ;-------------------------------------------------------------------------------
	new objCOMViewConfig,strRequiredPriviledge,strStatus
 	
	set objCOMViewConfig = $get(^COMViewConfig(0,strCompany,1))
	set strRequiredPriviledge = $$$COMViewConfigAbletocreateviews(objCOMViewConfig)
 	
 	set strStatus=$$$OK
 	if '$$UserHasAccess^COMUtils(strUser,strRequiredPriviledge) {
 		set strStatus = $listbuild("Com00210",strUser)
 	} ; "User %1 is not allowed to create new views."
	quit strStatus
	
	
HasViewAccess(pidUser,pidForm,pidCompany) 
    ;-------------------------------------------------------------------------------
    ; Determine whether user is allowed to change view. Note: reference to view is not
    ; referring to favourite, but instead things like filters, search results, field chooser.
    ;
    ; Params: pidUser, pidForm, pidCompany
    ;
    ; ByRefs: None
    ;
    ; Returns: boolean - if user permitted to change view otherwise $$$NO
    ;
    ; History:
    ; 10-Feb-2006	JW&SC	SR14250: Customisation overrides default. Use boolean.
    ; 						Add pidForm null check
    ; 31-Jan-2006	PO		SR14250: Created
    ;-------------------------------------------------------------------------------
	new blnAccess,objWWW120,objWWW120D,strRequiredPriviledge
 	
 	if pidForm="" {
 		set blnAccess = $$$YES
 	} else {
		set objWWW120  = $get(^WWW120(0,pidForm,1))
		set objWWW120D = $get(^WWW120D(0,pidForm,pidCompany,1))
	 	
	 	set strRequiredPriviledge = $$$WWW120ViewAccess(objWWW120)
	 	if $$$WWW120DViewAccess(objWWW120D)'="" {
		 	set strRequiredPriviledge = $$$WWW120DViewAccess(objWWW120D)
	 	}
		set blnAccess = $$UserHasAccess^COMUtils(pidUser,strRequiredPriviledge)
 	}
	quit blnAccess
	
	
NewView(pstrName)
    ;-------------------------------------------------------------------------------
    ; Call back from screen when new favourite name selected
    ;
    ; History:
    ; 22-May-2007	RPW		SR15524: Use Save macro to save comview classes
    ; 14-May-2007	GRF		Use DEVMODE macro
    ; 09-Feb-2007	RPW		SR15426: Store the Lock value if we are in form.
    ; 02-Nov-2006	JW		SR15170: Pad VAR/USR numbers with zeroes
    ; 01-Feb-2006	PO		SR14257: Favourite ids created by Disc are simply numeric,
    ; 						prefixed with VAR is for client customisation and USR is
    ; 						for a particular user.
    ; 31-Jan-2006	PO		SR14249: Hide disabled buttons
    ; 13-Jul-2005	PO		SR12608: Check whether user is permitted to create views
    ; 01-Jul-2005	RPW		$$$Alert already does a $$$Text, we do not need to do it again
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new blnIsSuper,idClass,idCurrentView,idView,objView,objViewUser,strStatus
	
	set strStatus = $$AllowedToCreateViews(YM,YBED)
	if $$$ISOK(strStatus) {
		set idClass       = $get(^CacheTempView(YUSER,"Class"))
		set idCurrentView = $$GetCurrentView(idClass)
		if pstrName="" set strStatus = "Com00112"  ; "Favourite Name required."    ; FIXME : $$$MakeStatus? <GRF>
	}
	
	if $$$ISOK(strStatus) {
		set blnIsSuper = $$SuperUser^COMViewUtils()
		if blnIsSuper {
			
			if $$$DEVMODE {
				set idView = $order(^COMView(0,idClass,"A"),-1)+1 // Last/greatest numeric favourite id
				
			} else {	// VAR Super views - add 1 to last 2 digit number
				set idView = $order(^COMView(0,idClass,"W"),-1)
				if $extract(idView,1,3) '= "VAR" {
					set idView = "VAR00"
				} else {
					set $extract(idView,1,3) = ""
					set idView = "VAR"_$translate($justify(idView+1,2)," ",0)	// pad with zeroes
				}
			}
		} else {		// User views - add 1 to last 5 digit number
			set idView = $order(^COMView(0,idClass,"V"),-1)
			if $extract(idView,1,3) '= "USR" {
				set idView = "USR00000"	
			
			} else {
				set $extract(idView,1,3) = ""
				set idView = "USR"_$translate($justify(idView+1,5)," ",0)		// pad with zeroes
			}
		}
		
		set objView=""
		set $$$COMViewDescription(objView) = pstrName
		set $$$COMViewLocation(objView)    = ""
		set $$$COMViewLock(objView)        = $get(^CacheTempView(YUSER,YUCI,"InForm"))
		if 'blnIsSuper {
			set $$$COMViewUser1(objView)=YBED
		}
		
		set strStatus = $$$Save("COMView",idClass_$$$COMMA_idView,objView,$$$YES)
		
		set objViewUser = $get(^COMViewUser(0,idClass,YBED,1))
		set $$$COMViewUserLastView(objViewUser) = idView
		set ^COMViewUser(0,idClass,YBED,1)      = objViewUser     ; $$$Save?
		do DisplayView(idClass,idView)
		
		kill ^COMViewColumnUser(0,idClass,idView,YBED)
		merge ^COMViewColumnUser(0,idClass,idView,YBED) = ^COMViewColumnUser(0,idClass,idCurrentView,YBED)
		
		do SaveCurrentView(idView)
	
	} else {
		$$$Alert(strStatus)
	}
	
	if ($get(idClass)'="") && ($get(idView)'="") do HideDisabledButtons(idClass,idView)
	
	quit $$$OK
	
	
SaveCurrentView(pidView)
    ;-------------------------------------------------------------------------------
    ; Save the filters for a favourite
    ;
    ; History:
    ; 22-May-2007	RPW		SR15524: Quit if there is no view.
    ; 16-Feb-2007	RPW		SR15426: Display the grid after saving the data
    ; 14-Feb-2007	SteveS	SR15431: Status handling, tstart/tcommit
    ; 							 Use standard alert, not VBConfirm
    ; 29-Aug-2006	JW		SR14763: Language text, cleaned up.
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new idClass,idFilter,strStatus
	
	quit:$get(pidView)="" $$$OK
	
	set idClass   = $get(^CacheTempView(YUSER,"Class"))
	set strStatus = $$CanModifyView(idClass,pidView)
	
	;+++++++++++++++++++++++++++++++++++++++
	tstart
	;+++++++++++++++++++++++++++++++++++++++
	
	if $$$ISOK(strStatus) {
		set strStatus = $$SaveFilters(idClass,pidView)
		if $$$ISOK(strStatus) {
			do SaveColumns^COMViewColumn(idClass,pidView)
			if $get(^CacheTempView(YUSER,"EditMode")) {
				kill ^CacheTempView(YUSER,"EditMode")
				do DisplayControls^COMViewFilterControl(idClass)
			}
		}
	}
	
	;+++++++++++++++++++++++++++++++++++++++
	if $$$ISOK(strStatus) {
		if $tlevel>0 tcommit
	} else {
		trollback
		$$$Alert(strStatus)
	}
	;+++++++++++++++++++++++++++++++++++++++
	
	do DisplayGrid^COMViewFilter()
	quit $$$OK
	
	
SaveFilters(pidClass,pidView)
	;-------------------------------------------------------------------------------
	; Saves favourite filters for the current view.
	;
	; History:
	; 31-Aug-2007	shobby	SRBR014677: For each user save the values of External
	; 							filters in case they are needed when reloading the
	;							screen.  Managed in the routine that calls
	;							AddExternalFilter.
	; 10-Jul-2007	HeberB	BR014579: Fixed logic to find out whether filter is external
	; 09-Jul-2007	HeberB	BR014579: Prevent external fields from being added to Filter entry
	; 14-Feb-2007	SteveS	SR15431: Save/kill properly -- order macros
	; 30-Dec-2004	Paul K	Created
	;-------------------------------------------------------------------------------
	new idFilter,intExternalFilterId,intFilterLoop,objFilter,strStatus,strKey
	
	set strStatus=$$$OK
	
	set idFilter = ""
	for {
		set idFilter = $order(^COMViewFilter(0,pidClass,pidView,idFilter))
		quit:idFilter=""
		
		set strStatus = $$$Kill("COMViewFilter",pidClass_","_pidView_","_idFilter)
		quit:$$$ISERR(strStatus)
	}
	
	if $$$ISOK(strStatus) {
		set idFilter = ""
		for {
			set idFilter = $order(^CacheTempView(YUSER,"Filter",idFilter))
			quit:idFilter=""
			
			set objFilter = $get(^CacheTempView(YUSER,"Filter",idFilter))
			set intExternalFilterId = $$GetIdExternalFilter(idFilter)
			if intExternalFilterId'="" {
				set ^CacheTempExternalFilter(YUCI,YUSER,$piece(objFilter,Y,1))=$piece(objFilter,Y,2)
			
			} else {
				set strKey 	  = pidClass_","_pidView_","_$increment(intFilterLoop)
				set strStatus = $$$Save("COMViewFilter",strKey,objFilter,1)
			}
		quit:$$$ISERR(strStatus)
		}
	}
	
	quit strStatus
	
	
DeleteCurrentView(pidView)
    ;-------------------------------------------------------------------------------
    ; Deletes a favourite and shows the default favourite.
    ; 
    ; Called By JS: DeleteView()
    ; 
    ; History:
    ; 09-Nov-2009	shobby	SR16560: Add direct call to ViewChanged.  This is
    ;							actually called from Javascript from within the
    ;							DisplayView routine.  However it won't actually run
    ;							as you can't to a Callback from Javascript to Cache
    ;							from within a callback from Javascript to cache.
    ; 07-Apr-2009	shobby	SR16474: Moved the deleting of related classes to
    ; 							OnBeforeDelete (hook)
    ; 22-May-2007	RPW		SR15524: Count the number of views and if there is only
    ; 							one do not allow it to be deleted.
    ; 							Use Kill macro to kill globals
    ; 22-Feb-2007	SteveS	SR15440: Get available view
    ; 15-Feb-2007	SteveS	SR15431: Use standard alert, not VBConfirm
    ; 28-Aug-2006	JW		SR14763: Set status. Language text. Cleaned up.
    ; 31-Jan-2006	PO		SR14249: Hide disabled buttons
    ; 12-Apr-2005	PaulK	Commented
    ;-------------------------------------------------------------------------------
	new idClass,idReq,idView,idxForm,intCount,strStatus
	
	set idClass  = $get(^CacheTempView(YUSER,"Class"))
	set intCount = 0
	
	if $get(^CacheTempView(YUSER,YUCI,"InForm")) {
		set idxForm = $$$Index($get(^CacheTempView(YUSER,"CallingForm")))
		
		set idReq = ""
		for {
			set idReq = $order(^COMViews(0,1,$$$YES,idxForm,idClass,idReq))
			quit:idReq=""
			
			set intCount = intCount+1
		}
		
		set idReq = ""
		for {
			set idReq = $order(^COMViews(0,1,$$$YES," ",idClass,idReq))
			quit:idReq=""
			
			set intCount = intCount+1
		}
	}
	
	if (pidView=0) || (intCount=1) {
		set strStatus = $listbuild("Com00120")  ; "Cannot delete the default favourite."
	
	} else {
		set strStatus = $$CanModifyView(idClass,pidView)
		
		if $$$ISOK(strStatus) {
			kill ^CacheTempView(YUSER,"EditMode")
			
			set strStatus = $$$Kill("COMView",idClass_$$$COMMA_pidView)
			do ClearCache^COMViewSession()
			set idView = $$GetAvailableView^COMViewFavourite(idClass)
			
			do DisplayView(idClass,idView)
			do ViewChanged(idView)
			do SetColumnsForView^COMViewColumn(idClass,idView)
			do SetFiltersForView(idClass,idView)
			do DisplayControls^COMViewFilterControl(idClass)
			do DisplayGrid^COMViewFilter()
		}
	}
	
	if $$$ISERR(strStatus) {
		$$$SetStatus
		$$$Alert(strStatus)
	}
	
	if $get(idClass)'="" do HideDisabledButtons(idClass,pidView)
	quit $$$OK
	
	
EditCurrentView(pidView)
    ;-------------------------------------------------------------------------------
    ; Callback from when a user clicks the open favourite button
    ;
    ; History:
    ; 22-May-2007	RPW		SR15524: quit if there is no view
    ; 14-Feb-2007	SteveS	SR15431: Also store the favourite id
    ; 							 Use standard alert, not VBConfirm
    ; 29-Aug-2006	JW		SR14763: Language text
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new idClass,strStatus
	
	quit:$get(pidView)="" $$$OK // SR15524

	set idClass   = $get(^CacheTempView(YUSER,"Class"))
	set strStatus = $$CanModifyView(idClass,pidView)
	
	if $$$ISOK(strStatus) {
		set ^CacheTempView(YUSER,"EditMode")            = $$$YES
		set ^CacheTempView(YUSER,"EditMode","ViewName") = pidView
		do DisplayControls^COMViewFilterControl(idClass)
		
	} else {
		$$$Alert(strStatus)
	}
	
	quit $$$OK
	
	
CreateFavouriteControl()
    ;-------------------------------------------------------------------------------
    ; Creates the DOM for the header.
    ;
    ; History:
    ; 20-Dec-2013	shobby	CORE-299; Improved Layout of COMView. Include 'Hide' control
    ; 18-May-2009	shobby	SR16443: Removed $$$DEVMODE test when setting the value of the
    ; 							distribute checkbox.
    ; 06-Apr-2009	shobby	SR16443: Reworked code.  Removed duplicate codes.
    ; 							Structured controls so that the label and input
    ; 							control remain together, to avoid confusion when the
    ; 							text (ie User) appears on a different line than the
    ; 							'User' input control.
    ; 06-Apr-2009	shobby	SR16443: Corrected the display of the 'Distribute' checkbox.
    ; 24-Mar-2008	shobby	SRBR014916: Improved loading of <options> when there is
    ; 							a very long list.
    ; 							***** Note: 
    ; 							Bug in IE prevents manipulation of innerHTML.  So
    ; 							outerHTML is used instead, which means that events
    ; 							have to be attached *after* the options are added.
    ; 14-May-2007	GRF		SR15440: Use DEVMODE macro
    ; 23-Apr-2007	RPW		SR15440: Fixed cbLock handling
    ; 15-Mar-2007	JW		SR15403: Distribute checkbox is only in Dev.
    ; 14-Feb-2007	Steve S	SR15431: 'This form only' checkbox
    ; 09-Feb-2007	RPW		SR15426: Add the Lock checkbox. 
    ; 							 Also use W3C Syntax to get DOM Elements.
    ; 05-Apr-2005	Paul K	SR11984: Don't set the development checkbox if not in
    ; 							development mode.
    ; 30-Mar-2005	Paul K	SR11984: Added distribute? check box, aligned header stuff
    ;-------------------------------------------------------------------------------
	new blnForm,blnUseArray,idClass,idForm,idLocation,idUser,idView,objView
	
	set idClass   = $get(^CacheTempView(YUSER,"Class"))
	set idView    = $get(^CacheTempView(YUSER,"EditMode","ViewName"))
	set objView   = $get(^COMView(0,idClass,idView,1))
	set idForm    = $$$COMViewForm(objView)
	set blnForm   = ((idForm'="") && (idForm=$$$CallingForm))
	
	if '$data(^CacheTempView(YUSER,"ViewInitialised")) {
		set ^CacheTempView(YUSER,"ViewInitialised")=$$$YES
 	;	++++++++++++++++++++++++++++++++++++ START JS  vvvvv    ; FIXME : Don't include comments in text sent as js <GRF>
		&js<
		function cvCreateInput(pobjText) {
			var objSpace=document.createElement('span');
			objSpace.innerHTML='&nbsp;&nbsp; ';
			objText.appendChild(objSpace);
		}
		function cvCreateCheckBox(pobjText,pid) {
			var objCheck=document.createElement('input');
			objCheck.type='checkbox';
			objCheck.id=pid;
			objCheck.style.whiteSpace='nowrap';
			pobjText.appendChild(objCheck);
			cvCreateInput(pobjText);
			return objCheck;
		}
		function cvCreateSpan(phdrctrl,pValue) {
			var objText=document.createElement('span');
			objText.style.whiteSpace='nowrap';
			phdrctrl.appendChild(objText);
			objText.innerHTML=pValue+'&nbsp;';
			return objText;
		}
		function cvCreateTD(phdrctrl,pValue) {
			var objText=document.createElement('td');
			objText.style.whiteSpace='nowrap';
			phdrctrl.appendChild(objText);
			objText.innerHTML=pValue+'&nbsp;';
			return objText;
		}
		
		var xTable=document.createElement('table'); xTable.style.fontSize='10pt'; xTable.style.borderCollapse='collapse'; 
		var xTBODY=document.createElement('tbody'); xTable.appendChild(xTBODY); 
		
		var xTR=document.createElement('tr'); xTBODY.appendChild(xTR); 
		var objText=cvCreateTD(xTR,'#($zconvert($$$StrCOMViewDescription,"o","JS"))#');
		var xTD=document.createElement('td'); xTR.appendChild(xTD);
		var objDescription=document.createElement('input');xTD.appendChild(objDescription);
		objDescription.id="description";
		objDescription.style.fontSize=10;
		objDescription.attachEvent("onkeyup",ControlChanged);
		cvCreateInput(objText);
		
		var xTR=document.createElement('tr'); xTBODY.appendChild(xTR); 
		var objText=cvCreateTD(xTR,'#($zconvert($$$StrCOMViewLocation,"o","JS"))#');
		var xTD=document.createElement('td'); xTR.appendChild(xTD);
		var objLocation=document.createElement('select');xTD.appendChild(objLocation);
		objLocation.id="ViewLocation";
		objLocation.style.fontSize=10;
		cvCreateInput(objText);

		var xTR=document.createElement('tr'); xTBODY.appendChild(xTR); 
		var objText=cvCreateTD(xTR,'#($zconvert($$$StrCOMViewUser1,"o","JS"))#');
		var xTD=document.createElement('td'); xTR.appendChild(xTD);
		var objUser=document.createElement('select'); xTD.appendChild(objUser);
		objUser.style.fontSize=10;
		objUser.id="user";
		objUser.style.whiteSpace='nowrap';
		cvCreateInput(objText);

		hdrctrl.appendChild(xTable);
		
		if ('#($$$DEVMODE)#') {
			var objText=cvCreateSpan(hdrctrl,'#($zconvert($$$StrCOMViewDistribute,"o","JS"))#');
			var objCheck=cvCreateCheckBox(objText,'distribute')
		   	objCheck.attachEvent('onclick',ControlChanged);
		}
		var objText=cvCreateSpan(hdrctrl,'#($zconvert($$$StrCOMViewLock,"o","JS"))#');
		var objCheck=cvCreateCheckBox(objText,'lock');
		objCheck.attachEvent('onclick',ControlChanged);
		
		var objText=cvCreateSpan(hdrctrl,'#($$$JSText($$^WWWTEXT("Com00281")))#');
		var objCheck=cvCreateCheckBox(objText,'formonly');
		objCheck.attachEvent('onclick',FormOnlyTicked);
		
		var objText=cvCreateSpan(hdrctrl,'#($$$JSText($$^WWWTEXT("334038")))#');
		var objCheck=cvCreateCheckBox(objText,'hide');
		objCheck.attachEvent('onclick',ControlChanged);
		
		var objHR= document.createElement('hr');
		hdrctrl.appendChild(objHR);
		
   		>

 	;	++++++++++++++++++++++++++++++++++++ END JS  ^^^^^
		
   		set blnUseArray = $$$YES  ;This can be removed later if the new code seems to hold up.
		do StartCombo^COMCombo("objLocation","",1)
		do AddOption^COMCombo(" "," ",blnUseArray)
		set idLocation = ""
		for {
			set idLocation = $order(^WWW0121(0,YM,idLocation))
			quit:idLocation=""
			
			do AddOption^COMCombo(idLocation,$zconvert(idLocation_" - "_$$$WWW0121LocationName($get(^WWW0121(0,YM,idLocation,1))),"o","JS"),blnUseArray)
		}
		do StopCombo^COMCombo(blnUseArray)
		do StartCombo^COMCombo("objUser","",1)
		do AddOption^COMCombo(" "," ",blnUseArray)
		
		set idUser = ""
		for {
			set idUser = $order(^WWW013(0,idUser))
			quit:idUser=""
			
			do AddOption^COMCombo(idUser,$zconvert(idUser_" - "_$$$WWW013Name($get(^WWW013(0,idUser,1))),"o","JS"),blnUseArray)
		}
		do StopCombo^COMCombo(blnUseArray)
		write "objLocation.attachEvent(""onchange"",ControlChanged);"
	}
	
	write "var formOnly = document.getElementById('formonly');"
	write "formOnly.checked="_$$$ToJSBoolean(blnForm)_";"
	write "document.getElementById('hdrctrl').style.display='block';",!
   	write "document.getElementById('description').value='"_$zconvert($$$COMViewDescription(objView),"o","JS")_"';",! // SR15426
   	write "var cbLock=document.getElementById('lock');",!
   	write "cbLock.checked="_$$$ToJSBoolean(+$$$COMViewLock(objView))_";",!
   	write "var selLocation=document.getElementById('ViewLocation');",!
	write "selLocation.value='"_$zconvert($$$COMViewLocation(objView),"o","JS")_"';",!
	write "selLocation.attachEvent(""onchange"",ControlChanged);"       ; (outerHTML will be destroyed when adding options)
	write "var selUser=document.getElementById('user');",!
	write "selUser.value='"_$zconvert($$$COMViewUser1(objView),"o","JS")_"';",!
	write "selUser.attachEvent(""onchange"",ControlChanged);"           ; (outerHTML will be destroyed when adding options)
	write "document.getElementById('distribute').checked="_$$$ToJSBoolean(+$$$COMViewDistribute(objView))_";",!
	write "document.getElementById('hide').checked="_$$$ToJSBoolean($$$COMViewDHide($get(^COMViewD(YM,idClass,idView,YM,1))))_";",! ;CORE-299
	
	if '$$SuperUser^COMViewUtils() {
		write "selUser.disabled=true;",!
		write:$$$DEVMODE "document.getElementById('distribute').disabled=true;",!
		write "document.getElementById('lock').disabled=true;",!
		write "document.getElementById('formonly').disabled=true;"
		write "selLocation.disabled=true;",!
		write "document.getElementById('hide').disabled=true;" ;CORE-299
	}
	quit
	
	
CanModifyView(pidClass,pidView)
    ;-------------------------------------------------------------------------------
    ; Does the current user have the correct privilages to modify the current view?
    ;
    ; History:
    ; 02-Nov-2006	JW		SR15170: Simplified
    ; 12-Apr-2005	Paul K	SR12608: Commented
    ;-------------------------------------------------------------------------------
	new objView,strStatus
	
	set strStatus = $$$OK
	
	if pidClass="" {
		set strStatus = $listbuild("Com00113")  ; "No class selected."
	} elseif pidView="" {
		set strStatus = $listbuild("Com00111")  ; "No favourite selected"
		
	} elseif '$$SuperUser^COMViewUtils() {
		set objView = $get(^COMView(0,pidClass,pidView,1))
		if $$$COMViewUser1(objView)'=YBED {
			set strStatus = $listbuild("Com00115",$$$COMViewDescription(objView),YBED)  ; "Favourite %1 cannot be modified by user %2."
		}
	}   ; FIXME : $$$MakeStatus() ? <GRF>
	quit strStatus
	
	
ViewChanged(pidView="")
    ;-------------------------------------------------------------------------------
    ; A user selected another view, refresh column header, controls and result grid.
    ;
    ; Called By JS: ViewChanged()
    ;
    ; History:
    ; 21-Oct-2010	shobby	SR17540 Reload the form if CacheTemp variables have been lost.
    ; 28-Jun-2007	HeberB	SRBR014579: Changing viewes, clear temp globals
    ; 22-Feb-2007	SteveS	SR15440: Changing viewes, clear off the cache so it
    ; 							can re-build
    ; 09-Feb-2007	RPW		SR15426: Do not display the header when this is an 
    ; 							In-Form COMView.
    ; 12-Apr-2005	Paul K	Commented
    ;-------------------------------------------------------------------------------
	new idClass,objViewUser
	
	set idClass = $get(^CacheTempView(YUSER,"Class"))
	if idClass="" {
		do Recover^COMViewDisaster()        ; SR17540
	
	} else {
		do ClearCache^COMViewSession()
	
		kill ^CacheTempView(YUSER,"EditMode")
	
		set objViewUser = $get(^COMViewUser(0,idClass,YBED,1))
		set $$$COMViewUserLastView(objViewUser) = pidView
		set ^COMViewUser(0,idClass,YBED,1)      = objViewUser
	
		do SetFiltersForView(idClass,pidView)
		do SetColumnsForView^COMViewColumn(idClass,pidView)
		do:'$get(^CacheTempView(YUSER,YUCI,"InForm")) DisplayHeader^COMViewFilterColumn(idClass)
		do DisplayControls^COMViewFilterControl(idClass)
		do DisplayGrid^COMViewFilter()
		do HideDisabledButtons(idClass,pidView)
	}	
	quit $$$OK
	
	
HideDisabledButtons(pidClass,pidView)
    ;-------------------------------------------------------------------------------
    ; Hide buttons that a user is not permitted to use.
    ;
    ; Params: pidClass, pidView
    ;
    ; ByRefs: None
    ;
    ; Returns: Nothing
    ;
    ; History:
    ; 15-May-2009	GRF		SR16474: strTrans rather than strtrans
    ; 14-Nov-2007	GRF		SR15612: Location Tree buttons
    ; 10-Jul-2007	GM		SRBR014577: Translation button will be hidden when
    ; 							Compiler/Translator is empty.
    ; 09-Feb-2007	RPW		SR15426: Do not continue if we are in form
    ; 30-Jan-2006	PO		SR14249: Created
    ;-------------------------------------------------------------------------------
	new objEmployee,strTrans,strValue
	
	quit:$get(^CacheTempView(YUSER,YUCI,"InForm"))
	
	if pidView = "" set pidView = $$GetCurrentView(pidClass)
	
	$$$StartScript()
	
	if $$AllowedToCreateViews(YM,YBED) {
		set strValue = ""
	} else {
		set strValue = "none"
	}
	write "document.getElementById('newFavourite').style.display = '"_strValue_"';"
	
	if $$CanModifyView(pidClass,pidView) {
		set strValue = ""
	} else {
		set strValue = "none"
	}
	write "document.getElementById('openFavourite').style.display = '"_strValue_"';"
	write "document.getElementById('deleteFavourite').style.display = '"_strValue_"';"
	write "document.getElementById('saveFavourite').style.display = '"_strValue_"';"
	
	write "document.getElementById('cvBackButton').style.display='"_$select($get(^CacheTempView(YUSER,"BackArrow"))&&($get(YBACK)'=""):"",1:"none")_"';"
	
	;---------------------------------------
	;  Optional Buttons
	;---------------------------------------
	
    set objEmployee = $get(^WWW013(0,YBED,1))
   	set strTrans    = $$$WWW013CompilerTranslator(objEmployee)
	
   	if strTrans'="" {
	   	set strValue=""
   	} else {
		set strValue="none"
	}
	write "if (document.getElementById('TranslateFavourite') != null) {document.getElementById('TranslateFavourite').style.display = '"_strValue_"'};"
	
	do Display^COMViewLocnTree()
	$$$EndScript()
	
	quit
	
	
SetFiltersForView(pidClass,pidView)
    ;-------------------------------------------------------------------------------
    ; Reset the filters for the current view.
    ;
    ; History:
    ; 30-Oct-2012	shobby	SR18176: Call out to SetFixedFilters
    ; 09-Sep-2008	PP		SR15866: Update COMView to Objects
    ; 21-Oct-2005	JW		SR11573: use last key not first key
    ; 16-Feb-2005	PO		SR11661: Set value in right filter.
    ; 30-Nov-2004	Paul K	Created
    ;-------------------------------------------------------------------------------
	new blnIsAnObj,idFilter,idParentForm,idView,intBottom,intLastKey
	new lstFilters,objFilter,objView
		
	set blnIsAnObj = +$get(^CacheTempObj(YUSER,"Object"))
	set lstFilters = ""
	set objView    = $get(^COMView(0,pidClass,pidView,1))
	
	kill ^CacheTempView(YUSER,"Filter")
	
	set idParentForm = $get(^CacheTempView(YUSER,YUCI,"ParentForm"))
	
	if (idParentForm="") ||
	   ( (idParentForm'="") && '$data(^CacheTempViewSave(YUSER,YUCI,idParentForm,"Filter")) ) {
		
		if (pidClass'="") && (pidView'="") {
			set idFilter = ""
			for {
				set idFilter = $order(^COMViewFilter(0,pidClass,pidView,idFilter))
				quit:idFilter=""
				
				set objFilter = $get(^COMViewFilter(0,pidClass,pidView,idFilter,1))
				if $$$COMViewFilterField(objFilter)=$$$COMViewDefaultProperty(objView) { ; SR11661
					set $$$COMViewFilterValue1(objFilter) = $get(^CacheTempView(YUSER,"FilterValue"))
				}
				set ^CacheTempView(YUSER,"Filter",idFilter) = objFilter
				
			}
		}
	} else {
		merge ^CacheTempView(YUSER,"Filter")=^CacheTempViewSave(YUSER,YUCI,idParentForm,"Filter")
	}
	
	if (idParentForm'="") && ($data(^CacheTempViewExternal(YUSER,YUCI,idParentForm,"Filter"))) {
		set intBottom = $order(^CacheTempView(YUSER,"Filter",""),-1)
		set idFilter  = ""
		for {
			set idFilter = $order(^CacheTempViewExternal(YUSER,YUCI,idParentForm,"Filter",idFilter))
			quit:idFilter=""
			
			set objFilter=$get(^CacheTempViewExternal(YUSER,YUCI,idParentForm,"Filter",idFilter))
			set ^CacheTempView(YUSER,"Filter",intBottom+idFilter) = objFilter
			set ^CacheTempView(YUSER,YUCI,"External",idFilter)    = intBottom+idFilter
		}
	}

	if '$data(^CacheTempView(YUSER,"Filter")) {
		set objFilter=""
		
		if 'blnIsAnObj {
			set intLastKey = $order(^WWW002(0,pidClass,""),-1)
			set $$$COMViewFilterField(objFilter)      = "P"_intLastKey
			set $$$COMViewFilterValue1(objFilter)     = $get(^CacheTempView(YUSER,"FilterValue"))
			set $$$COMViewFilterComparator(objFilter) = $$$EnumCOMVIEWCOMPARATORStartsWith
			set $$$COMViewFilterDisplay(objFilter)    = $$$YES
		
		} else {
			set $$$COMViewFilterField(objFilter)      = "ID"]]><![CDATA[
			set $$$COMViewFilterValue1(objFilter)     = $get(^CacheTempView(YUSER,"FilterValue"))
			set $$$COMViewFilterComparator(objFilter) = $$$EnumCOMVIEWCOMPARATORStartsWith
			set $$$COMViewFilterDisplay(objFilter)    = $$$YES
		}
		set ^CacheTempView(YUSER,"Filter",1)=objFilter
	}
	do SetFixedFilters(pidClass,$get(^CacheTempView(YUSER,"CallingForm"))) ;SR18176
	
	quit
	
	
SetFixedFilters(YDATEI,YFORM)
    ;-------------------------------------------------------------------------------
    ; Applys any 'Fixed Filters' that should apply to all Favourites on this form. 
    ;
    ; History:
    ; 01-Nov-2012	shobby	SR18176: Check if there is a valid filter
    ; 30-Oct-2012	shobby	SR18176: Created
    ;-------------------------------------------------------------------------------
	new objFilters,i,objFilter,intFilter,objView,blnExists
	
	if YFORM'="" {
		; if Form hook for this exists {
		
		set objFilters=$$ExecuteHook^WWW001Hook(YDATEI,$$$EnumWWWEVENTTYPEOnAddFilter,"","",YFORM)
		if objFilters'=1 {						;Check if there is a filter.
			for i=1:1:$length(objFilters,";") {
				set blnExists=$$$NO
				set objFilter=$piece(objFilters,";",i)
				; Look for already existing
				set intFilter="" for { set intFilter=$order(^CacheTempView(YUSER,"Filter",intFilter)) quit:intFilter=""
					set objView=$get(^CacheTempView(YUSER,"Filter",intFilter))
					if objView=objFilter {
						set blnExists=$$$YES
						quit
					}
				}
				if 'blnExists {
					set ^CacheTempView(YUSER,"Filter",$order(^CacheTempView(YUSER,"Filter",""),-1)+1)=objFilter
				}
			}
		}
	}
	quit
	
	
SetSearchHeight(pintHeight)
    ;-------------------------------------------------------------------------------
    ; Used for setting the user height for a particular 'pop-down' search
    ;
    ; History:
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new objViewUser,idClass
	
	set idClass     = $get(^CacheTempView(YUSER,"Class"))
	set objViewUser = $get(^COMViewUser(0,idClass,YBED,1))
	set $$$COMViewUserHeight(objViewUser) = +pintHeight
	set ^COMViewUser(0,idClass,YBED,1)    = objViewUser         ; FIXME : $$$Save ? <GRF>
	
	quit $$$OK
	
	
GetSearchHeight(pidClass)
    ;-------------------------------------------------------------------------------
    ; Used for getting the user height for a particular 'pop-down' search
    ;
    ; Returns: Number
    ; 
    ; History:
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new intHeight,objViewUser
	
	set intHeight = ""
	
	if pidClass'="" {
		set objViewUser = $get(^COMViewUser(0,pidClass,YBED,1))
		set intHeight   = $$$COMViewUserHeight(objViewUser)
	}
	
	if intHeight=""  set intHeight = 400
	if intHeight<300 set intHeight = 300
	
	quit intHeight
	
	
SetSize(pintHeight,pintWidth)
    ;-------------------------------------------------------------------------------
    ; Used for setting the user width and height of a 'pop-up' search
    ; 
    ; History:
    ; 03-Mar-2009	DavidR	SR16404: implemented the FIXME, could not replicate the 
    ; 							error but possible that the form failed because 
    ; 							idclass = ""
    ; 21-Jan-2005	Paul K	Created
    ;-------------------------------------------------------------------------------
	new objViewUser,idClass
	
	set idClass     = $get(^CacheTempView(YUSER,"Class")) 
	if idClass'="" {
		set objViewUser = $get(^COMViewUser(0,idClass,YBED,1))
		set $$$COMViewUserDialogHeight(objViewUser) = pintHeight
		set $$$COMViewUserDialogWidth(objViewUser)  = pintWidth
		set ^COMViewUser(0,idClass,YBED,1)          = objViewUser
	}
	quit
	
	
SetPostion(pintTop,pintLeft)   ; FIXME : SetPosition? requires spelling correction
    ;-------------------------------------------------------------------------------
    ; Used for setting the user top and left position 'pop-up' search
    ; 
    ; History:
    ; 21-Jan-2005	PaulK	Created
	;-------------------------------------------------------------------------------
	new idClass,objViewUser
	
	set idClass = $get(^CacheTempView(YUSER,"Class"))
	if idClass'="" {
		set objViewUser = $get(^COMViewUser(0,idClass,YBED,1))
		set $$$COMViewUserDialogTop(objViewUser)  = pintTop
		set $$$COMViewUserDialogLeft(objViewUser) = pintLeft
		set ^COMViewUser(0,idClass,YBED,1)        = objViewUser
	}
	quit
	
	
GetTextForFavourite(pidClass, pidView, pobjView)
	;-------------------------------------------------------------------------------
	; Returns the proper text for the favourite.
	;
	; Params:
	;
	; Returns:
	; 	the tanslated text for the favourite.
	;
	; History:
    ; 24-Apr-2007	FrankF	SRBR014441: Translation for favourites.
	;-------------------------------------------------------------------------------
	new objViewLang,strDesc
	
	set objViewLang = $get(^COMViewLang(0, pidClass, SPRACHE, pidView, 1))
	if $$$COMViewLangDescription(objViewLang) '= "" {
		set strDesc = $$$JSText($$$COMViewLangDescription(objViewLang))
		
	} else {
		set strDesc = $$$JSText($$$COMViewDescription(pobjView))
	}
	quit strDesc
	
	
TranslateFavourite(pidView)
	;-------------------------------------------------------------------------------
	; Show the form to translate the selected favourite.
	;
	; Params:
	; 	pidView - the selected favourite
	;
	; History:
    ; 24-Apr-2007	FrankF	SRBR014441: Translation for favourites.
	;-------------------------------------------------------------------------------
	new idClass,idViewTranslation,objEmployee,objView
	
	set idClass     = $get(^CacheTempView(YUSER, "Class"))
    set objEmployee = $get(^WWW013(0, YBED, 1))
	set idViewTranslation = idClass_$$$COMMA_$$$WWW013CompilerTranslator(objEmployee)_$$$COMMA_pidView
	
 	do GoToForm^COMUtilForm("COMViewTranslation",idViewTranslation,,idViewTranslation,$$$YES)
	quit $$$OK
	
	
CheckTranslationButton()
	;-------------------------------------------------------------------------------
	; Checks if the logged user is a translator.
	;
	; History:
    ; 24-Apr-2007	FrankF	SRBR014441: Translation for favourites.
	;-------------------------------------------------------------------------------
	new objEmployee
	
    set objEmployee = $get(^WWW013(0, YBED, 1))
   	if $$$WWW013CompilerTranslator(objEmployee) '= "" {
	   	set YOPTION = 10
   	}
	quit
	
	
ShowTranslationForm()
	;-------------------------------------------------------------------------------
	; Shows the Translation Favourite Form.
	;
	; History:
    ; 24-Apr-2007	FrankF	SRBR014441: Translation for favourites.
	;-------------------------------------------------------------------------------
	new idClass,idFavourite,idLanguage,idViewTranslation,objEmployee
	
    set objEmployee = $get(^WWW013(0, YBED, 1))
   	set idLanguage  = $$$WWW013CompilerTranslator(objEmployee)
   	set idClass     = $$$KEY1(YKEY)
   	set idFavourite = $$$KEY2(YKEY)
   	
   	set idViewTranslation = idClass_$$$COMMA_idLanguage_$$$COMMA_idFavourite
	
 	do GoToForm^COMUtilForm("COMViewTranslation",idViewTranslation,,idViewTranslation,$$$YES)
	quit
	
	
SaveHook()
	;-------------------------------------------------------------------------------
	; Copies the base language into the 'EN' language of the tranlsation class (COMViewLang)
	;
	; History:
	; 04-May-2007	RPW		SRBR014441: Do not use early quits use status variable.
    ; 24-Apr-2007	FrankF	SRBR014441: Translation for favourites.
	;-------------------------------------------------------------------------------
	new idClass,idFavourite,objFavourite,objFavTranslation,strStatus
	
	set strStatus   = $$$OK
	set idClass     = $$$KEY1(YKEY)
	set idFavourite = $$$KEY2(YKEY)
	
	set objFavTranslation = $get(^COMViewLang(0,idClass,"EN",idFavourite,1))
	set objFavourite      = $get(^COMView(0,idClass,idFavourite, 1))
	
	if $$$COMViewLangDescription(objFavTranslation) '= $$$COMViewDescription(objFavourite) {
		set $$$COMViewLangDescription(objFavTranslation) = $$$COMViewDescription(objFavourite)
		set strStatus = $$$Save("COMViewLang",idClass_$$$COMMA_"EN"_$$$COMMA_idFavourite,objFavTranslation,$$$YES)
	}
	
	quit strStatus
	
	
GetIdExternalFilter(pidFilter)
	;-------------------------------------------------------------------------------
	; Check whether a filter is External and returns its id
	;
	; Returns:
	; 	if External : id
	; 	if not		: <empty>
	;	
	; History:
    ; 10-Jul-2007	HeberB	SRBR014579: Created
	;-------------------------------------------------------------------------------
	new idFilterExternal,strResult
	
	set strResult = ""
	set idFilterExternal = ""
	for {
		set idFilterExternal = $order(^CacheTempView(YUSER,YUCI,"External",idFilterExternal))
		quit:idFilterExternal=""
		
		if ($get(^CacheTempView(YUSER,YUCI,"External",idFilterExternal)) = pidFilter) {
			set strResult = idFilterExternal
			quit
		}
	}
	quit strResult
	
	
GetCurrentSQL(pidClass="")
	;-------------------------------------------------------------------------------
	; Finds if there is any SQL defined for a COMView
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 29-Jan-2008	shobby	SRBR014551: Created
	;-------------------------------------------------------------------------------
	new idView,strSQL
	
	set strSQL = ""
	if (pidClass'="") {
		set idView = $$GetCurrentView^COMView(pidClass)
		if idView'="" {
			set strSQL = $$$COMViewSQL1($get(^COMView(0,pidClass,idView,1)))
		}
	}
	quit strSQL
	
]]></Routine>
</Export>