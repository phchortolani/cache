<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPROSTEMPU" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
#include COMSYS
	
INPROSTEMPU(STEMP,CHECK)
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		UNTERTEILE LAGERBERICHTIGUNGEN IN FERTIGUNGSSTRUKTUR
	;		Parts storage correction in manufacture structure
	;
	; Inputs : 
	;	STEMP	=	FERTIGUNGSNUMMER (GESTEMPELT)
	;	CHECK: WENN 1 DANN PRUEF-/KORREKTURLAUF, ES WERDEN ALLE UNTERTEILE DURCHLAUFEN, AUCH WENN BEREITS ERLEDIGT.
	;
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 04-Nov-2009	GRF		Naked References; boolean & key macros
	; 23-Feb-2007	GRF		SR15454: Property name clarified "INVORGBSubContractLocn"
	; 31-Jul-2006	GRF		Doco
	; 21-Jul-2005	GRF		SR13024 : Doco
	; 10.10.2001	FIS
	;-------------------------------------------------------------------------------
	
	;---------------------------
	; => FOREGROUND ENTRY POINT
	;---------------------------
	DO START1
	QUIT
	
	
	;---------------------------
	; => BACKGROUND ENTRY POINT
	;---------------------------
START(STEMP,CHECK,YM,SPRACHE,YBED,YLOCATION)   ;EINSPRUNG ALS HINTERGRUNDJOB
	SET $ZTRAP="^WWWERROR"
	DO
	. NEW YM,SPRACHE,YBED,YLOCATION
	. DO ^WWWVAR
	
	; DROPS THROUGH vvvvvvvvvvvvvvvvvvvvvvvv
	
	;+++++++++++++++++++++++++++++++++++++++
	;  SATZ		objINPROSTEMP1	Processed Manufacturing Numbers
	;  		or	objINPORSTEMP	Open Production Order
	;  		
	;  SATZ		objINAUFP		Order line
	;+++++++++++++++++++++++++++++++++++++++
	
START1  ;BESTANDSUMBUCHUNGEN
	NEW TEIL,AUF,POS,SATZ,STEMP1,EBENE,START,DATEI,YINUSE,QTY,ERL
	
	SET YINUSE = 1  ;VERHINDERT ERNEUTEN START BEI DURCHLAUF ;take-off next to 
	SET STEMP  = $GET(STEMP)      QUIT:STEMP=""
	SET CHECK  = +$GET(CHECK)
	
	SET SATZ=$GET(^INPROSTEMP1(YM,STEMP,1))
	IF $TRANSLATE($PIECE(SATZ,Y,1,21),Y)="" SET SATZ=$GET(^INPROSTEMP(YM,STEMP,1))
	
	SET AUF = $PIECE(SATZ,Y,1)    QUIT:AUF=""
	SET POS = $PIECE(SATZ,Y,3)    QUIT:POS=""
 
	SET TEIL(1) = $PIECE($PIECE(SATZ,Y,6),",",3,999)  ;UNTERTEIL
	
	;PRÜFEN FREIGABE ;sift 
	LOCK +^INPROSTEMPU(YM,+$HOROLOG,STEMP):20
	LOCK +^INBUCHLOCK(YM,AUF,POS):20  ;AUFTRAG FÜR BEARBEITUNG ANDERER BESTANDSBUCHUNGEN SPERREN;02.02.04;FIS;24941
	KILL ^WWWSOR(YUSER)
	DO SORT    ;SORTIEREN UNERLEDIGTE FERTIGUNGEN ;assortment 
	DO FERTIG  ;FERTIG MELDUNG ;ready-made status signal 
	
	DO  ;NEUAUFBAU TEILESTRUKTUR
	. NEW SATZ,YAUFTRAG,YPOS
	. SET YAUFTRAG = AUF
	. SET YPOS     = POS
	. SET SATZ     = $GET(^INAUFP(YM,YAUFTRAG,YPOS,1))
	. DO ^INAUFTEILE(YAUFTRAG,YPOS)
	
	KILL ^WWWSOR(YUSER)
	SET ^INPROSTEMPU(YM,+$HOROLOG,STEMP)=YBED
	LOCK -^INBUCHLOCK(YM,AUF,POS)  ;SPERRE AUFHEBEN;02.02.04;FIS;24941
	LOCK -^INPROSTEMPU(YM,+$HOROLOG,STEMP)
	QUIT
	
SORT ;SUCHEN UNERLEDIGTE UNTERTEILE ;seek 
	SET START=""""_YM_""""_","_""""_AUF_""""_","_POS                             ;START AB HAUPTTEIL ;start from order line 
	IF TEIL(1)'="" SET START=""""_YM_""""_","_""""_AUF_""""_","_POS_","_TEIL(1)  ;START AB TEIL      ;start from component 
	
	SET DATEI(0)="^INAUFPXL("_START_")"
	FOR  DO  QUIT:DATEI(0)=""
	. SET DATEI(0)=$QUERY(@DATEI(0))  ;UNTERTEILE
	. IF $TRANSLATE($$$KEY2(DATEI(0)),"""")'=AUF    SET DATEI(0)="" QUIT  ;FALSCHER AUFTRAG ;wrong order 
	. IF $$$KEY3(DATEI(0))'=POS                     SET DATEI(0)="" QUIT  ;FALSCHE POSITION ;wrong order line
	. IF TEIL(1)'="" IF $$$KEY4(DATEI(0))'=TEIL(1)  SET DATEI(0)="" QUIT  ;FALSCHES TEIL    ;wrong part 
	. ;
	. QUIT:$DATA(@DATEI(0))'=11  ;NUR WENN UNTERTEILE VORHANDEN ;only when on hand 
	. ;
	. SET STEMP1 = $PIECE(@(DATEI(0)),Y,165)  ;BESTEHENDE FERTIGUNGSMELDUNG
	. QUIT:STEMP1=STEMP                       ;AKTUELLE FERTIGUNGSNUMMER
	. ;
	. SET ERL = $$$NO
	. DO     ;BESTAND BEREITS BERICHTIGT   ; Naked Refs
	. . IF STEMP1'="" IF $DATA(^INPROSTEMP(YM,STEMP1,1))  IF $PIECE(^INPROSTEMP(YM,STEMP1,1),Y,22)'=""  SET ERL = $$$YES
	. . IF STEMP1'="" IF $DATA(^INPROSTEMP1(YM,STEMP1,1)) IF $PIECE(^INPROSTEMP1(YM,STEMP1,1),Y,22)'="" SET ERL = $$$YES
	. . IF $PIECE(@(DATEI(0)),Y,245)'="" SET ERL = $$$YES 
	. ;
	. IF CHECK'=1 QUIT:ERL=1
	. ;
	. ; NOTE : subscripts cannot contain commas for this to work - 
	. ;        should be okay based on requirement of keys <GRF>
	. SET TEIL(2)=$TRANSLATE($PIECE(DATEI(0),",",2,$QLENGTH(DATEI(0))),",)"_"""","..")
	. SET YTQ = $PIECE(@DATEI(0),Y,39)
	. IF +YTQ=0 SET YTQ = $PIECE(@DATEI(0),Y,5)
	. ;
	. SET ^WWWSOR(YUSER,1,$QLENGTH(DATEI(0)),TEIL(2))=$PIECE(@DATEI(0),Y,165)_Y_$PIECE(@DATEI(0),Y,4)_Y_YTQ_Y_$PIECE(@DATEI(0),Y,56)_Y_$PIECE(@DATEI(0),Y,198)_Y_ERL
	. ;          (USER,1,EBENE,"AUF.POS.TEIL...")    =FERTIGUNGSNUMMER          ARTIKEL                 MENGE   SERIENNUMMER             LOT-NUMMER                BEREITS GEBUCHT JA/NEIN
	
	QUIT
	
FERTIG ;FERTIG MELDEN ;ready-made let know 
	NEW STEMP1,EBENE,TEIL,AUF,POS,KEY,ART,YTQ,SN,LOT,HAL,BET,SATZ
	
	SET EBENE=""
	FOR  SET EBENE=$ORDER(^WWWSOR(YUSER,1,EBENE),-1) QUIT:EBENE=""  DO
	. SET KEY=""
	. FOR  SET KEY=$ORDER(^WWWSOR(YUSER,1,EBENE,KEY)) QUIT:KEY=""  DO
	. . SET SATZ=$GET(^WWWSOR(YUSER,1,EBENE,KEY))
	. . ;
	. . SET AUF  = $TRANSLATE($PIECE(KEY,".",1),"""")
	. . SET POS  = $PIECE(KEY,".",2)
	. . SET TEIL = $TRANSLATE($PIECE(KEY,".",3,99),".",",")
	. . IF $EXTRACT($REVERSE(TEIL))="," SET TEIL=$REVERSE($EXTRACT($REVERSE(TEIL),2,99))
	. . ;
	. . SET STEMP1 = $PIECE(SATZ,Y,1)
	. . SET ART	   = $PIECE(SATZ,Y,2)
	. . SET YTQ	   = $PIECE(SATZ,Y,3)
	. . SET SN	   = $PIECE(SATZ,Y,4)
	. . SET LOT	   = $PIECE(SATZ,Y,5)
	. . SET BET	   = $GET(YLOCATION)
	. . IF BET="" SET BET=$ORDER(^WWW0121(0,YM,""))
	. . IF BET="" SET BET=1
	. . ;		D1		$$$INVORGBOnHandLocation()
	. . SET HAL=$PIECE($GET(^INVORGB(YM,YM,BET,1)),Y,1)
	. . IF HAL="" SET HAL=$ORDER(^INLP(YM,BET,""))
	. . IF HAL="" SET HAL=0
	. . ;
	. . ;BESTAND UM FERTIGUNGSTEIL ERHÖHEN ;to heighten 
	. . ;---------------------------------
	. . IF $PIECE(SATZ,Y,6)'=1 SET OK=$$^INARTPLUS1(STEMP1,AUF,POS,TEIL,ART,YTQ,SN,LOT,HAL)  ;WENN NOCH NICHT ERLEDIGT ;when yet Not 
	. . ;
	. . ;BESTAND UM UNTERTEILE VERRINGERN ;to decrease 
	. . ;--------------------------------
	. . ;MIT FERTIGUNGSNUMMER ;by means of 
	. . IF STEMP1'="" DO
	. . . NEW LFN,LFN1,YEK,BUCH,REST,HAL,YART,AUFX
	. . . SET LFN=""
	. . . FOR  SET LFN=$ORDER(^INPROSTEMPT(YM,STEMP1,LFN)) QUIT:LFN=""  DO    ;BEI ALLEN ARTIKEL DIE MENGE ABZIEHEN ;next to item who quantity subtract 
	. . . . SET LFN1=$GET(^INPROSTEMPT(YM,STEMP1,LFN,1))
	. . . . QUIT:+$PIECE(LFN1,Y,6)'=0        ;BEREITS BERICHTIGT ;yet 
	. . . . QUIT:$PIECE(LFN1,Y,4)=""         ;KEIN ARTIKEL ;no item 
	. . . . SET HAL=$PIECE($GET(^INVORGB(YM,YM,YLOCATION,1)),Y,1)  ;PRODUKTIONSLAGER
	. . . . ;
	. . . . ;PRUEFUNG, OB DIE MENGE ODER ARTIKEL GEÄNDERT WURDE; TYBD;27,11,2003
	. . . . SET AUFX = $PIECE(LFN1,Y,9)
	. . . . SET AUFX(9)=""
	. . . . IF $$$KEY1(AUFX)'="" IF $PIECE(AUFX,",",2,99)'="" SET AUFX(9)="^INAUFPXL("_""""_YM_""""_","_""""_$$$KEY1(AUFX)_""""_","_$PIECE(AUFX,",",2,99)_")"
	. . . . IF AUFX(9)'="" QUIT:'$DATA(@AUFX(9))            ;TEIL GELÖSCHT  ;NUR WENN VORHANDEN;FIS;16.12.03
	. . . . IF AUFX(9)'="" QUIT:$PIECE(@AUFX(9),Y,244)'=""  ;MENGE SCHON BERICHTIGT  ;NUR WENN VORHANDEN;FIS;16.12.03
	. . . . ;SET AUFX(1) = $$$KEY1(AUFX)
	. . . . ;SET AUFX(9) = "^INAUFPXL("_""""_YM_""""_","_""""_AUFX(1)_""""_","_$PIECE(AUFX,",",2,99)_")"
	. . . . ;IF '$DATA(@AUFX(9)) QUIT  ;TEIL GELÖSCHT
	. . . . ;QUIT:$PIECE(@AUFX(9),Y,244)'=""  ;MENGE SCHON BERICHTIGT
	. . . . ;SET $PIECE(LFN1,Y,4)=$PIECE(@AUFX(9),Y,4)  ;ARTIKEL
	. . . . ;IF +$PIECE(@AUFX(9),Y,39)'=0 SET $PIECE(YII(1),Y,5)=$PIECE(@AUFX(9),Y,39)  ;MENGE
	. . . . ;-----------------------LEIHLAGERPLATZ BEI FREMDFERTIGUNG,ULM 15.01.03  ;-------------------------------------------------------------------------
	. . . . ;DO  ;ACHTUNG!!! NEUER BLOCK, ERST NACH 100% TEST IN PROGRAMMSTAND GEBEN!!!
	. . . . DO
	. . . . . NEW LAP
	. . . . . ;		D3		$$$$$$INVORGBSubContractLocn()
	. . . . . SET LAP=$PIECE($GET(^INVORGB(YM,YM,YLOCATION,1)),Y,3)_"*"_STEMP1
	. . . . . IF $DATA(^INWE(YM,$PIECE(LFN1,Y,4),YLOCATION,LAP)) SET HAL=LAP
	. . . . ;
	. . . . ;-------------------------------------------------------------------------------------------------------------------------------------------------
	. . . . SET BUCH=$$^INARTMINUS(STEMP1,LFN,$PIECE(LFN1,Y,4),$PIECE(LFN1,Y,5),$PIECE(LFN1,Y,7),HAL,1,2,$PIECE($PIECE(LFN1,Y,9),",",3,99),1)  ;BESTAND BUCHEN (RETVAL=EK)
	. . . . SET REST=$PIECE(BUCH,"*",1)  ;RESTMENGE
	. . . . IF +REST'=0 SET BUCH=$$^INARTMINUS(STEMP1,LFN,$PIECE(LFN1,Y,4),REST,$PIECE(LFN1,Y,7),,1,1,$PIECE($PIECE(LFN1,Y,9),",",3,99),1,,1)  ;BESTAND NACHBUCHEN
	. . . . ;
	. . . . SET YEK=$PIECE(BUCH,"*",2)  ;EK-PREIS
	. . . . QUIT:+YEK=0  ;KEINE WERTE ;no 
	. . . . ;
	. . . . DO  ;ÜBERTRAGEN EK AUS WE NACH ARTIKELTEIL; FIS,07.08.02
	. . . . . NEW KEY
	. . . . . SET KEY = $PIECE($PIECE(LFN1,Y,9),",",3,99)  ;FIS;25939;22.06.04
	. . . . . NEW DATEI,POSMNG,VERSCHNITT,LFN1
	. . . . . SET LFN1 = KEY               ;FIS;25939;22.06.04  NEU: AUS DATENSATZ ;out of data record 
	. . . . . IF KEY="" DO                 ;FIS;25939;22.06.04  ALT: AUS LFD. NUMMER ;out of numeral 
	. . . . . . SET LFN1 = LFN
	. . . . . . IF $LENGTH(LFN1)>3 SET LFN1 = +$EXTRACT(LFN,4,99)  ;PRÜFEN ALTER ODER NEUER KEY (ÄNDERUNG IN INPROSTEMPT AM 1.09.02) ;sift governor Or KEY within to the 
	. . . . . . SET LFN1 = TEIL_","_LFN1
	. . . . . ;
	. . . . . ;SET DATEI="^INAUFPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS_","_TEIL_","_LFN1
	. . . . . SET DATEI="^INAUFPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS_","_LFN1  ;FIS;25939;22.06.04
	. . . . . SET DATEI=DATEI_")"
	. . . . . QUIT:'$DATA(@DATEI)
	. . . . . SET POSMNG=+$PIECE(@DATEI,Y,5)  ;MENGE DER POSITION ;quantity the 
	. . . . . IF +POSMNG=0 SET POSMNG=1
	. . . . . ;		D10		$$$INVORGBlendInAdd()
	. . . . . SET VERSCHNITT=$PIECE($GET(^INVORG(YM,YM,1)),Y,10)  ;VERSCHNITT IN % ;within 
	. . . . . IF +VERSCHNITT'=0 SET POSMNG=POSMNG+(POSMNG/100*VERSCHNITT)
	. . . . . ;
	. . . . . IF +$PIECE(@DATEI,Y,250)=0 DO
	. . . . . . DO ^INSYSLOG("INPROSTEMPU","INAUFPXL",$TRANSLATE($PIECE($PIECE(DATEI,",",2,999),")",1),",",";"),250,1,$PIECE(@DATEI,Y,250),$PIECE(@DATEI,Y,47))  ;PROTOKOLL PREISÄNDERUNG
	. . . . . . SET $PIECE(@DATEI,Y,250)=$PIECE(@DATEI,Y,47)  ;SPEICHERN EK ALS VORKALKULATION ;Save Planned Cost when preliminary costing 
	. . . . . ;
	. . . . . DO ^INSYSLOG("INPROSTEMPU","INAUFPXL",$TRANSLATE($PIECE($PIECE(DATEI,",",2,999),")",1),",",";"),47,1,$PIECE(@DATEI,Y,47),YEK*POSMNG)  ;PROTOKOLL PREISÄNDERUNG
	. . . . . SET $PIECE(@DATEI,Y,47)=YEK*POSMNG       ;SPEICHERN TATSÄCHLICHER EK ;Save Planned Cost 
	. . . . . SET $PIECE(^INAUFPT(YM,AUF,POS,$TRANSLATE(TEIL,",","."_"."_LFN1_"."),1),Y,47)=YEK*POSMNG
	. . . . . SET $PIECE(@DATEI,Y,244)=+$HOROLOG       ;SPEICHERN BUCHUNGSDATUM  (DIENT AUCH ZUR KONTROLLE IN INAUFPT ;Save too within 
	. . . . . SET $PIECE(^INAUFPT(YM,AUF,POS,$TRANSLATE(TEIL,",","."_"."_LFN1_"."),1),Y,244)=+$HOROLOG
	. . ;
	. . ;OHNE FERTIGUNGSNUMMER ;without 
	. . IF STEMP1="" DO
	. . . NEW SUCH,LENGTH,YTQ,YEK,HAL,BUCH,REST,HAL
	. . . SET SUCH="^INAUFPXL("_""""_YM_""""_","_""""_AUF_""""_","_POS_","_TEIL_")"  ;START AB TEIL ;take-off Confirm. part 
	. . . SET LENGTH=$QLENGTH(SUCH)
	. . . FOR  DO  QUIT:SUCH=""
	. . . . SET SUCH = $QUERY(@SUCH)  ;UNTERTEILE
	. . . . IF $TRANSLATE($$$KEY2(SUCH),"""")'=AUF      SET SUCH="" QUIT  ;21.06.04;FAN;25794; WENN alphanumerischen Auftragsnummern SOLL DATEN AUCH AUFBAUEN.
	. . . .;IF $$$KEY2(SUCH)'=AUF                       SET SUCH="" QUIT  ;21.06.04;FAN;25794; 
	. . . . IF $$$KEY3(SUCH)'=POS                       SET SUCH="" QUIT  ;FALSCHE POSITION
	. . . . IF $PIECE(SUCH,",",4,LENGTH)'=TEIL          SET SUCH="" QUIT  ;FALSCHES TEIL ;part 
	. . . . IF $PIECE(SUCH,",",LENGTH+2)'=""                        QUIT  ;FALSCHE EBENE ;plain 
	. . . . IF $PIECE(@SUCH,Y,26)=2                                 QUIT  ;LEISTUNG ;performance 
	. . . . SET TEIL(3) = $PIECE($PIECE(SUCH,",",4,LENGTH+1),")",1)
	. . . . SET QTY     = $PIECE(@SUCH,Y,39)
	. . . . IF +QTY=0 QUIT
	. . . . ;IF +QTY=0 SET QTY=$PIECE(@SUCH,Y,5)
	. . . . QUIT:$PIECE(@SUCH,Y,244)'=""  ;BESTAND BEREITS BERICHTIGT ;yet 
	. . . . SET HAL = $PIECE($GET(^INVORGB(YM,YM,YLOCATION,1)),Y,1)  ;PRODUKTIONSLAGER
	. . . . ;
	. . . . ;
	. . . . ;-----------------------LEIHLAGERPLATZ BEI FREMDFERTIGUNG,ULM 15.01.03  ;-------------------------------------------------------------------------
	. . . . ;HIER NICHT ERFORDERLICH, DA BEI FREMDFERTIGUNG IMMER FERTIGUNGSNUMMER VORHANDEN IST.
	. . . . ;DO  ;ACHTUNG!!! NEUER BLOCK, ERST NACH 100% TEST IN PROGRAMMSTAND GEBEN!!!
	. . . . ;. SET YART=$PIECE($GET(^INPROSTEMP1(YM,STEMP1,1)),Y,4)
	. . . . ;. IF YART="" SET YART=$PIECE($GET(^INPROSTEMP(YM,STEMP1,1)),Y,4)
	. . . . ;. IF YART'="" IF $PIECE($GET(^INART(YM,YART,1)),Y,12)'="" IF $PIECE($GET(^INART(YM,YART,1)),Y,26)=3 DO  ;LIEFERANT IN EIGENFERTIGUNG=fremdfertigung
	. . . . ;. . SET HAL=$PIECE($GET(^INVORGB(YM,YM,YLOCATION,1)),Y,3)_"*"_STEMP1  ;LEIHLAGER
	. . . . ;DO
	. . . . ;. NEW LAP
	. . . . ;. SET LAP=$PIECE($GET(^INVORGB(YM,YM,YLOCATION,1)),Y,3)_"*"_STEMP1
	. . . . ;. IF $DATA(^INWE(YM,$PIECE(@SUCH,Y,4),LAP)) SET HAL=LAP
	. . . . ;-------------------------------------------------------------------------------------------------------------------------------------------------
	. . . . ;
	. . . . SET BUCH = $$^INARTMINUS(AUF,POS,$PIECE(@SUCH,Y,4),QTY,,HAL,2,2,TEIL(3),1)  ;BESTAND BUCHEN
	. . . . SET REST = $piece(BUCH,"*",1)       ;RESTMENGE
	. . . . IF +REST'=0 SET BUCH = $$^INARTMINUS(AUF,POS,$PIECE(@SUCH,Y,4),REST,,,2,1,TEIL(3),1,,1)  ;BESTAND NACHBUCHEN
	. . . . ;
	. . . . SET YEK = $piece(BUCH,"*",2)        ;EK-PREIS
	. . . . QUIT:+YEK=0  ;KEINE WERTE 
	. . . . ;
	. . . . DO  ;ÜBERTRAGEN EK AUS WE NACH ARTIKELTEIL; FIS,07.08.02
	. . . . . NEW POSMNG,VERSCHNITT
	. . . . . SET POSMNG=+$PIECE(@SUCH,Y,5)  ;MENGE DER POSITION ;Line quantity
	. . . . . IF +POSMNG=0 SET POSMNG=1
	. . . . . SET VERSCHNITT=$PIECE($GET(^INVORG(YM,YM,1)),Y,10)  ;VERSCHNITT IN % ;within 
	. . . . . IF +VERSCHNITT'=0 SET POSMNG=POSMNG+(POSMNG/100*VERSCHNITT)
	. . . . . ;
	. . . . . IF +$PIECE(@SUCH,Y,250)=0 DO
	. . . . . . DO ^INSYSLOG("INPROSTEMPU","INAUFPXL",$TRANSLATE($piece($piece(SUCH,",",2,999),")",1),",",";"),250,1,$PIECE(@SUCH,Y,250),$PIECE(@SUCH,Y,47))  ;PROTOKOLL PREISÄNDERUNG
	. . . . . . SET $PIECE(@SUCH,Y,250)=$PIECE(@SUCH,Y,47)  ;SPEICHERN EK ALS VORKALKULATION ;Save Planned Cost when preliminary costing 
	. . . . . ;
	. . . . . DO ^INSYSLOG("INPROSTEMPU","INAUFPXL",$TRANSLATE($piece($piece(SUCH,",",2,999),")",1),",",";"),47,1,$PIECE(@SUCH,Y,47),YEK*POSMNG)  ;PROTOKOLL PREISÄNDERUNG
	. . . . . SET $PIECE(@SUCH,Y,47)  = YEK*POSMNG     ;SPEICHERN TATSÄCHLICHER EK ;Save Planned Cost 
	. . . . . SET $PIECE(^INAUFPT(YM,AUF,POS,$TRANSLATE(TEIL(3),",","."),1),Y,47)  = YEK*POSMNG
	. . . . . SET $PIECE(@SUCH,Y,244) = +$HOROLOG     ;SPEICHERN BUCHUNGSDATUM  (DIENT AUCH ZUR KONTROLLE IN INAUFPT ;Save too within 
	. . . . . SET $PIECE(^INAUFPT(YM,AUF,POS,$TRANSLATE(TEIL(3),",","."),1),Y,244) = +$HOROLOG
	
	QUIT
	
]]></Routine>
</Export>