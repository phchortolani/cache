<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPInvCurrency" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPInvCurrency
	
#include COMSYS
#include FINConst
	
#define YFORM	"FINAPInv"
	
	;-------------------------------------------------------------------------------
	; History:
	; 11-Apr-2005	RobertW		SR11836: Hard Coded the form name here as FINAPInv* are the only things that should call these routines.
	;-------------------------------------------------------------------------------
 
GetFCRate()
	quit $$$FINAPInvExchangeRate($$$GRIDYFELDContainer)
	
UpdateToNewExchangeRate(pidInvoice="")
	;-------------------------------------------------------------------------------
	; Update relevant currency fields to exchange rate specified
	;
	; Returns: Nothing
	;
	; History:
	; 20-Sep-2005	GRF		Build 1.11.6 : Add variable to new command
	; 12-Sep-2005	PO		SR13457: TEMPORARY MEASURE - Keep discount exchange rate
	; 						same as header
	; 12-Sep-2005	PO		SR13475: Removed uneccessary/incorrect handling of actual total
	; 09-Sep-2005	PO		SR13446: After adding an amount to the Actual Total
	; 						correct the exchange rate.
	; 07-Sep-2005	RPW		SR13446: Update the rate on the tax total field as well.
	; 25-Aug-2005	PO		SR12965: Corrected adjusting of exchange rate, at this point
	; 						no FC amounts will require changing
	; 01-Jul-2005	PO		SR12705: Instead of calling $$UpdatePriceFields^FINAPInvLineTax,
	; 						do work in procedure, UpdatePriceFields not appropriate
	; 29-Jun-2005	PO		SR12797: Reverted change by SR12705, as rate needs to be
	; 						set after line added to grid or rate is changed.
	; 						Also now setting the account to post the FC variance to.
	; 27-Jun-2005	PO		SR12705: No longer correct Inv Ea. exchange rate here,
	; 						doing it at OnBlur
	; 23-Jun-2005	PO/PK	SR12768: Do not use FCUpdate on invoice each inc tax
	; 						and invoice total And if FC Amounts equal then set actual
	; 						total directly as sum of lines
	; 19-Apr-2005	PO		Created SR:11349
	;-------------------------------------------------------------------------------
	
	; TODO: This code ought to be done on before save (unless there is some reason to do it on after save)
	
	new curTmp,fltQuantity,fltRate,idLine,objFINAPInv,objFINAPInvCharge,objFINAPInvLine ;,curAmount
	
	if '$$$NoKey(pidInvoice) {
		set fltRate = $$GetFCRate()
		
		if fltRate '= "" {
			set objFINAPInv = $get(^FINAPInv(YM,pidInvoice,1))
			
		;	set curAmount = 0
			set idLine = ""
			for {
				set idLine = $order(^FINAPInvLine(YM,pidInvoice,idLine))
				quit:idLine=""
				
				set objFINAPInvLine = $get(^FINAPInvLine(YM,pidInvoice,idLine,1))
				
 				set fltQuantity = $$$FINAPInvLineInvoiceQuantity(objFINAPInvLine)
				
				set curTmp = $$$FINAPInvLineInvoiceTotal(objFINAPInvLine)
				set $$$FINAPInvLineInvoiceTotal(objFINAPInvLine) = $$$FCUpdate(curTmp,fltRate,1)
				set curTmp = $$$FINAPInvLineInvoiceTotalIncludingTax(objFINAPInvLine)
				set $$$FINAPInvLineInvoiceTotalIncludingTax(objFINAPInvLine)=$$$FCUpdate(curTmp,fltRate,1)
				
				set curTmp = $$$FINAPInvLineInvoiceEach(objFINAPInvLine)
				set $$$FINAPInvLineInvoiceEach(objFINAPInvLine) = $$$FCUpdate(curTmp,fltRate,1)
				set curTmp = $$$FINAPInvLineInvoiceEachIncTax(objFINAPInvLine)
				set $$$FINAPInvLineInvoiceEachIncTax(objFINAPInvLine) = $$$FCUpdate(curTmp,fltRate,1)
				
			;	set objFINAPInvLine=$$UpdatePriceFields^FINAPInvLineTax(objFINAPInvLine,objFINAPInv)
				set $$$FINAPInvLineVarianceFCDPost(objFINAPInvLine) = $$GetVARFCPost^FINAPInvLineGet(objFINAPInvLine)
				
				do Save^COMUtils("FINAPInvLine",pidInvoice_","_idLine,objFINAPInvLine,1)
				
				;set curTmp = $$$FINAPInvLineInvoiceTotalIncludingTax(objFINAPInvLine)
				;set curAmount = $$$FCAdd(curAmount,curTmp)
				;set curAmount = $$$FCUpdate(curAmount,fltRate,1)
			}
			set idLine = "" ; SR13457
			for {
				set idLine = $order(^FINAPInvCharge(YM,pidInvoice,idLine))
				quit:idLine=""
				
				set objFINAPInvCharge = $get(^FINAPInvCharge(YM,pidInvoice,idLine,1))
				
				set curTmp = $$$FINAPInvChargeAmount(objFINAPInvCharge)
				set $$$FINAPInvChargeAmount(objFINAPInvCharge) = $$$FCUpdate(curTmp,fltRate,1)
				set curTmp = $$$FINAPInvChargeAmountTaxEx(objFINAPInvCharge)
				set $$$FINAPInvChargeAmountTaxEx(objFINAPInvCharge) = $$$FCUpdate(curTmp,fltRate,1)
				set curTmp = $$$FINAPInvChargeTax(objFINAPInvCharge)
				set $$$FINAPInvChargeTax(objFINAPInvCharge) = $$$FCUpdate(curTmp,fltRate,1)
				
				do Save^COMUtils("FINAPInvCharge",pidInvoice_","_idLine,objFINAPInvCharge,1)
			}
			;set curTmp = $$$FINAPInvActualTotal(objFINAPInv) ; *************************************************************************************
			;if $$$FCAmount(curAmount) = $$$FCAmount(curTmp) {
			;	set $$$FINAPInvActualTotal(objFINAPInv)=curAmount ; ??? WHY IS THIS BEING DONE AT ALL ??? THE ACTUAL TOTAL IS WHAT IS ENTERED, SHOULD NOT BE CHANGED
			;} else {
			;	set curTmp = $$$FINAPInvActualTotal(objFINAPInv)
			;	set $$$FINAPInvActualTotal(objFINAPInv) = $$$FCUpdate(curTmp,fltRate,1)
			;} ; ************************************************************************************************************************************
			set curTmp = $$$FINAPInvActualTotal(objFINAPInv)
			set $$$FINAPInvActualTotal(objFINAPInv) = $$$FCUpdate(curTmp,fltRate,1)
			set curTmp = $$$FINAPInvOtherTotal(objFINAPInv)
			set $$$FINAPInvOtherTotal(objFINAPInv) = $$$FCUpdate(curTmp,fltRate,1)
			set curTmp = $$$FINAPInvTaxTotal(objFINAPInv)
			set $$$FINAPInvTaxTotal(objFINAPInv) = $$$FCUpdate(curTmp,fltRate,1) ; SR13446
			
			do Save^COMUtils("FINAPInv",pidInvoice,objFINAPInv,1)
		}
	}
	
	quit
	
IsForeignCurrency()
	;-------------------------------------------------------------------------------
	; Determines whether this is a foreign currency invoice
	;
	; Returns:
	; Boolean which says whether this is foreign currency or not
	; History:
	; 06-Apr-2005	RobertW		Created SR11836
	;-------------------------------------------------------------------------------
	
	;+++++++++++++++++++++++++++++++++++++++
	; BEING MOVED TO COMUtilCurrency 25-May-2005
	; should replace with
	; 
	;quit $$IsForeignCurrency^COMUtilCurrency($$$YFORM)
	;+++++++++++++++++++++++++++++++++++++++
	
	quit $get(^CacheTemp($get(YUSER),$$$YFORM,"Toggles","Currency"))="Foreign"
	
GetCurrencyName()
	;-------------------------------------------------------------------------------
	; Get the currency name, is USD
	;
	; Returns:
	;
	; History:
	; 06-Apr-2005	RobertW		Created SR11836
	;-------------------------------------------------------------------------------
	
	;+++++++++++++++++++++++++++++++++++++++
	; BEING MOVED TO COMUtilCurrency 25-May-2005
	; should replace with
	; 
	;quit $$GetCurrencyName^COMUtilCurrency($$$YFORM)
	;+++++++++++++++++++++++++++++++++++++++
 
	new strCurCurrency
	set strCurCurrency=YWHR
	
	if $$IsForeignCurrency() {
		set strCurCurrency = $get(^CacheTemp($get(YUSER),$$$YFORM,"Display Currency"))
	}
	
	quit strCurCurrency
	
ShowingForeignCurrency(pidInvoice="")
	;-------------------------------------------------------------------------------
	; Determines whether showing FC or base.
	;
	; Returns: if showing foreign currency returns 1, else 0.
	;
	; History:
	; 04-May-2005	PO		Created SR:12256
	;-------------------------------------------------------------------------------
	
	; IS THIS ALL NECESSARY ?? Can't this ^CacheTemp($get(YUSER),$$$YFORM,"Toggles","Currency")
	;  just be checked or is this prior to global being set.
	new blnReturn
 
	 ; FIXME : Not sure how reliable this test is now, let alone future tidying up
	if $$ForeignCurrencyToBeUsed(pidInvoice)&&($$$CurrencyToUse="Base") {
	; For this record view must be in foreign currency to use this button.
		set Q = $$$QDontSave_" "_$$$Text("Fin00760")
	} else {
		set Q = $$$QSave
	}
	set blnReturn = ''Q
	quit blnReturn
	
ForeignCurrencyToBeUsed(pidInvoice="")
	;-------------------------------------------------------------------------------
	; Set @netManager "Don't Save" flag
	; 
	; Returns: True if able to save (opposite logic to Q usage) 
	;
	; History:
	; 23-Mar-2005	GRF		Use QSave Macros and clarify return
	; 15-Mar-2005	PO		SR11349 Created
	;-------------------------------------------------------------------------------
	new blnReturn
	
	if ('$$$NoKey(pidInvoice))&&$$$CurIsFC($$GetFCCode^FINAPSupplier($$$FINAPInvInvoiceSupplier($get(^FINAPInv(YM,pidInvoice,1))))) {
		set Q = $$$QSave
    } else {
	; This record can only be shown in base currency as record is not linked to a foreign currency supplier.
		set Q = $$$QDontSave_" "_$$$Text("Fin00702")
    }
	set blnReturn = 'Q
	quit blnReturn
	
OnChange(pstrYLFN)
	;-------------------------------------------------------------------------------
	; When the field changes, this routine determines what to do. Beats on blur as
	; it only occurs when there is a data change
	;
	; Returns:
	;
	; History:
	; 08-Apr-2005	RobertW		Created SR11836
	;-------------------------------------------------------------------------------
	if $get(YFELD)="" set YFELD = $$$GRIDYFELDContainer
	if $get(YLFN)=""  set YLFN  = pstrYLFN
	do PopulateExchangeRate
	quit
	
PopulateExchangeRate
	;-------------------------------------------------------------------------------
	; This method finds the conversion rate for the give date/time pair.
	;
	; Returns:
	;
	; History:
	; 12-Jan-2006	GRF		Boolean macro for clarity
    ; 28-Oct-2005	JW		SR13074: Translate Exchange Rate
	; 15-Jul-2005	RobertW	SR12958: If we did not find a start date, just let the
	; 						user know about the found rate and set the fields to
	; 						blank instead of 31 Dec 1841 at 00:00:00
	; 						Removed first if - null checks.
	; 15-Jul-2005	shobby	SR12754:Replaced LANGUAGE global (not always reliable)
	; 14-Apr-2005	PO		SR11349 store exchange rate for later use
	; 06-Apr-2005	RobertW	Created SR11836
	;-------------------------------------------------------------------------------
    new fltRate,strRateAndDate,strRate,dteRate,tmeRate,dteExchange,tmeExchange,dteRateConverted,displayRate
    
    set YFELD=$get(YFELD)
    
    set dteExchange=$$$FINAPInvExchangeDate(YFELD)
    set tmeExchange=$$$FINAPInvExchangeTime(YFELD)
    set dteRate=dteExchange
    set tmeRate=tmeExchange
    
    /*
    if (dteExchange="")&&(tmeExchange="") {
	    // Check the policy to determine the rate
	    // Not defined yet, nothing to do, assume fltRate=1
	    
	    set fltRate=1
	} else
	*/
    if $$IsForeignCurrency() {
		set strRateAndDate=$$FindConversionRate^WWWZAHL($$GetCurrencyName(),dteExchange_","_tmeExchange,$$$YES)
		set fltRate=$piece(strRateAndDate,Y,1)
		set strRate=$piece(strRateAndDate,Y,2)
		set dteRate=$piece(strRate,",",1)
		set tmeRate=$piece(strRate,",",2)
    } else {
	    set fltRate=1
    }
    
    set dteRateConverted=$$^WWWDATE(dteRate,SPRACHE) ; SR12958
 
    set ^CacheTemp(YUSER,YFORM,"Exchange Rate")=fltRate
    
	; SR12958
	set displayRate = $$^WWWTR(0,18,fltRate)		//SR13074
    if +dteRate'=0 {
    	$$$Alert($lb("Fin00846",displayRate,dteRateConverted,$ztime(tmeRate))) ;Found Exchange Rate %1 on %2 at %3
    } else {
	    $$$Alert($listbuild("Fin00847",displayRate)) ;Found Exchange Rate %1"
    }
    
    do DrawExchangeFields(fltRate,dteRate,dteRateConverted,tmeRate)
    	
	quit
	
ApplyPolicy(pidSupInv)
	;-------------------------------------------------------------------------------
	; Apply the policy of the system
	;
	; Returns:
	;
	; History:
	; 27-Apr-2005	PO			SR12237: If no exchange rate set then use current
	; 15-Apr-2005	PO			SR11349 store exchange rate for later use
	; 08-Apr-2005	RobertW		Created SR11836
	;-------------------------------------------------------------------------------
	new fltRate
	
	set fltRate = $$GetFCRate^FINAPSupplier(pidSupInv)
	if fltRate="" set fltRate=$$FindConversionRate^WWWZAHL($$GetFCCode^FINAPSupplier(pidSupInv),$horolog)
	set ^CacheTemp(YUSER,YFORM,"Exchange Rate")=fltRate
	do DrawExchangeFields^FINAPInvCurrency(fltRate,"","","")
	
	quit
	
DrawExchangeFields(pfltRate,pdteRate,pdteRateConverted,ptmeRate)
	;-------------------------------------------------------------------------------
	; Draw the data for the exchange rate/date/time
	;
	; Returns:
	;
	; History:
	;  1-Nov-2005	JW			SR13074: Added $$$NO.
	; 15-Jul-2005	RobertW		SR12958: Check if we have an unconverted date of 0
	; 							and if so show a blank on the screen.
	; 08-Apr-2005	RobertW		Created SR:11836
	;-------------------------------------------------------------------------------
	;set %TXT(1) = "#Y"_$$$YFORM_"D"_$$$FldFINAPInvExchangeRate_Y_fltRate
	;set %TXT(1) = %TXT(1)_"#Y"_$$$YFORM_"D"_$$$FldFINAPInvExchangeDate_Y_dteRate
	;set %TXT(1) = %TXT(1)_"#Y"_$$$YFORM_"D"_$$$FldFINAPInvExchangeTime_Y_tmeRate
    
    if pfltRate'=0 {
		do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPInvExchangeRate,pfltRate,,,$$$NO)	//SR13074
    }
    do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPInvExchangeDate,$select(+pdteRate'=0:pdteRateConverted,1:""))
    do PopulateDataField^COMUtils($$$YFORM,$$$FldFINAPInvExchangeTime,$select(+ptmeRate'=0:ptmeRate,1:""))
	
	quit
	
ClearDataFields(dummy)
	;-------------------------------------------------------------------------------
	; Clear the data field for the exchange rate. It also makes sure that the
	; Save Changes field is set.
	;
	; Returns:
	;
	; History:
	; 12-Dec-2005	JW			SR13195: BEARB call now unecessary.
	; 19-Oct-2005	JW			SR13659: Now works with tab switching
	; 11-Oct-2005 	Steve S		SR13665: Only allow clear if there are no invoices
	; 08-Apr-2005	RobertW		Created SR11836
	;-------------------------------------------------------------------------------
	if ($$$GRIDGetRowCount("FINAPInvLine",$$GetFormData^COMUtilForm("FINAPInv","P"))=1) { 
	;if $order(^FINAPInvLine(YM,$$GetYKEY^COMGridEdit31Interface(),""))="Total" {
		do ApplyPolicy($$$FINAPInvInvoiceSupplier($$$GRIDYFELDContainer))
		//write " if (document.WWW.YBEARB!=null) BEARB('"_$GET(^WWW100(0,"BEARBEITUNG",SPRACHE,2,1))_"');" ; SR13195
	} else {
		$$$Alert($lb("Fin00910"))  ;Can not clear exchange fields when invoices have been matched	
	}
	
	quit
	
AtFormConstruction
	;-------------------------------------------------------------------------------
	; When the field is constructed, check for a foreign currency. If this is not a 
	; foreign currency Invoice Match, then lock these fields.
	;
	; Returns:
	;
	; History:
	; 19-Oct-2005	JW			SR13659: Now works with tab switching
	; 11-Oct-2005	Steve S		SR13665: Make read-only if invoices
	; 06-Apr-2005	RobertW		Created SR11836
	;-------------------------------------------------------------------------------
	if ('$$IsForeignCurrency()||($$$GRIDGetRowCount("FINAPInvLine",YKEY)>1)) {
	;if ('$$IsForeignCurrency()||($order(^FINAPInvLine(YM,YKEY,""))'="Total")) {
		set YHID=2
	}
	
	quit
	
]]></Routine>
</Export>