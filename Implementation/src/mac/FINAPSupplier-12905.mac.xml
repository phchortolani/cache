<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="9" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="FINAPSupplier" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
FINAPSupplier 
	; 08-Jul-2003	SCR					Bug Fixes from Code Checking
	
#include COMSYS
#include FINConst
#include COMConst
#include WWWConst
#include INSupStatus
	
GetFCRate(pidSupplier="")
	;-------------------------------------------------------------------------------
	; Get the FC Exchange Rate for the supplier
	; 
	; Returns:
	; fltRate, The locked in exchange rate
	;
	; History:
	; 08-Apr-2005	RPW		Created SR11836
	;-------------------------------------------------------------------------------
 	new objSupplier,fltRate
 	
	if pidSupplier="" set pidSupplier = " "
	set objSupplier = $get(^FINAPSupplier(0,pidSupplier,1))
 
	if objSupplier="" {
		set fltRate = 0
	} else {
		set fltRate = $$$FINAPSupplierExchangeRate(objSupplier)
	}
 	
	quit fltRate
 
ExchangeRate(pidSupplier="")
    ;-------------------------------------------------------------------------------
    ; Determines supplier's exchange rate
    ;
    ; Returns: Supplier's exchange rate (either fixed or current rate), if not FC supplier then rate is 0.
    ;
    ; fltRate - exchange rate
    ; fltRate(1) - where exchange rate source from
    ; 	0 - Not sourced : Supplier does not exist
    ; 	1 - Not sourced : Supplier is not a FC supplier
    ; 	2 - Current exchange rate for currency
    ; 	3 - Fixed exchange rate for specified supplier
    ;
    ; History:
    ; 15-Jun-2005	PO		SR:12589 Changed to properly determine which exchange rate to use
    ; 12-May-2005	PO		Created SR:12050 Improved version of GetFCRate
    ;-------------------------------------------------------------------------------
	new fltRate,objSupplier,strCur
 
	set fltRate    = 0
	set fltRate(1) = 0
 
	if pidSupplier'="" {
		set fltRate(1)  = 1
		set objSupplier = $get(^FINAPSupplier(0,pidSupplier,1))
		set strCur      = $$$FINAPSupplierCurrency(objSupplier)
 
		if $$$CurIsFC(strCur) {
			set fltRate    = $$$FINAPSupplierExchangeRate(objSupplier)
			set fltRate(1) = 3
			if fltRate="" {
				set fltRate    = $$FindConversionRate^WWWZAHL(strCur,$horolog)
				set fltRate(1) = 2
			}
		}
	}
	quit fltRate
	
	
OnAfterDataFields(pYKEY,pYVORG,pYAUSWAHL)
    ;-------------------------------------------------------------------------------
    ; After Data Field for Finance Suppliers
    ;
    ; Returns:
    ;
    ; History:
    ; 24-Oct-2006	RPW		SR14476: Removed the Location Tree, it's not needed
    ; 12-May-2005	PO		Created SR:12050 show FC InvoiceTotal field if FC supplier
    ; 24-Nov-2004   PO		SR11006 Use edit grid for supplier invoices
    ;-------------------------------------------------------------------------------
	if YSEITE=1 {
		if $$$CurIsFC($$GetFCCode(pYKEY)) {
			set YOPTION = 1
		}
		do LoadGrid(pYKEY)
	} 
 	quit
 	
 	
Paymt(pidSupplier="")
    ;-------------------------------------------------------------------------------
    ; Called by the "P" button to search for supplier payments for a supplier
    ;
    ; History:
    ; 10-Feb-2005	PaulK	Created
    ;-------------------------------------------------------------------------------
    if pidSupplier'="" {
		do Initialise^COMViewCustom("FINAPPaymentLine","","",1)
		do AddFilter^COMViewCustom("D"_$$$FldFINAPPaymentLineSupplierNumber,"=",pidSupplier)
		do Start^COMViewCustom()
    }
	quit 1
	
	
InvoiceSearch(pidSupplier="")
    ;-------------------------------------------------------------------------------
    ; Called by the "I" button to searh for supplier Invoices for a supplier
    ;
    ; History:
    ; 19-Apr-2005	PaulK	Use InvoiceDetail Form instead of Invoice
    ; 19-Apr-2005	SCR		SR11476 Created
    ;-------------------------------------------------------------------------------
    if pidSupplier'="" {
		do Initialise^COMViewCustom("FINAPInvoiceDetail","","",1)
		do AddFilter^COMViewCustom("P"_$$$FldFINAPInvoiceSupplierNumber,"=",pidSupplier)
		do Start^COMViewCustom()
    }
	quit 1
	
	
LoadGrid(pYKEY="")
    ;-------------------------------------------------------------------------------
    ; Load the edit grid
    ;
    ; Returns:
    ;
    ; History:
	; 05-Dec-2008	GRF		Clarify Enabled test
    ; 11-Jul-2006	JW		SR14730: Added DontUpdateContainer/StoreAll. GRIDStart macro
    ; 11-Aug-2005	Steve S	Made grid slightly larger (400 instead of 200)
    ; 10-Dec-2004	shobby	Removed null YKEY test (SR11175)
    ; 26-Nov-2004   PO		created
    ;-------------------------------------------------------------------------------
	new YAUSWAHL,idForm
	
	set idForm = "FINAPInvoice"
 	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)          = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)       = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)            = idForm
	set $$$COMGridEditParameterEnabled(YAUSWAHL)             = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)           = "FINAPSupplier"
	set $$$COMGridEditParameterDontUpdateContainer(YAUSWAHL) = $$$YES
	set $$$COMGridEditParameterDontStoreAll(YAUSWAHL)        = $$$YES
	
	$$$GRIDStart(idForm,pYKEY)
	quit
	
	
OnBeforeButtonLine(pYKEY,pYPARA)
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Oct-2006	RL		SR14476: Remove location tree code, as location changed to combo box.
    ; 05-Apr-2005	JW		SR11405: Default Tax Code population
    ;-------------------------------------------------------------------------------
	new objFINAPSupplier,location ;,strLocations,strLocation,strAction,intPos  SR14476
	
	if pYKEY'="" {
		set objFINAPSupplier = $get(^FINAPSupplier(0,pYKEY,1))
		set location = $$$FINAPSupplierTaxLocation(objFINAPSupplier)
		do CreateTaxCodesList^COMTAXLocation(location)
	}
	quit
	
	
OnBeforeSave(pYKEY="",YFELD)
	;-------------------------------------------------------------------------------
	; Preserves the value of VORG(1) to be used when reloading the form
	; used by checkbox 'Show Outstanding Only'
	; 
	; 21-Sep-2006	JW		SR14612: Check bank account when EFT
	; 27-Apr-2005	JW		SR12143: Check account.
	; 26-Nov-2004	PO		Pass in YKEY instead of VORG for grid edit save
	; 26-Jun-2003	shobby	Creation (TR005466)
	;-------------------------------------------------------------------------------
	new strStatus,idAccount,objAccount
	
	set strStatus = $$$OK
	
	set idAccount = $$$FINAPSupplierDefaultExpenseAccount(YFELD)
	if (idAccount'="") {
		set objAccount = $get(^FINGLAccount(0,idAccount,1))
		if $$$FINGLAccountAccountUsage(objAccount)'=$$$EnumFINGLACCOUNTUSAGETransaction {
			set strStatus = $listbuild("Fin00751")
		} ; "Default Expense Account is not a valid transaction account"
	}
	
	if $$$ISOK(strStatus) {
		if $$$FINAPSupplierMethodofPayment(YFELD) = $$$EnumPayByEFT {
			if ($$$FINAPSupplierBankAccountNumber(YFELD)="") || ($$$FINAPSupplierBankBSB(YFELD)="") {
				set strStatus = $listbuild("Fin01073")
			} ; "Method of Payment is EFT. Please enter Bank Account Number and Bank BSB in the Banking tab"
		}
	}
	
	if $$$ISOK(strStatus) set strStatus=$$$GRIDSave(pYKEY)
	
	if $$$ISOK(strStatus) {
		set Q = $$$QSave
	} else {
		do ReturnError^COMUtils(strStatus)
		set Q = $$$QDontSave
	}
	quit
	
	
GetControlAccount(Number)
	;-------------------------------------------------------------------------------
	; Get Suppliers Control Account
	;-------------------------------------------------------------------------------
	new idAccount,objSupp
	
	set idAccount = ""
	if Number'="" {
		set objSupp   = $get(^FINAPSupplier(0,Number,1))
		set idAccount = $$$FINAPSupplierControlAccount(objSupp)
	}
	quit idAccount
	
	
AddSupplier(pidSupplier,pidControlAcct)
	;-------------------------------------------------------------------------------
	; Add supplier if it doesn't exist
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 27-Feb-2007	JW		SR15453: Added default status. Cleaned up.
	;-------------------------------------------------------------------------------
	new strStatus,objSupplier
	
 	set strStatus = $$$OK
	if '$data(^FINAPSupplier(0,pidSupplier,1)) {
		set $$$FINAPSupplierControlAccount(objSupplier)	= pidControlAcct
		set $$$FINAPSupplierStatus(objSupplier) 		= $$$DefaultStatus
		set strStatus = $$$Save("FINAPSupplier",pidSupplier,objSupplier,$$$YES)
	}
	quit strStatus
	
	
GetSettlementDiscount(pidSupplier,pidTerm="")
    ;------------------------------------------------------------------------------
    ; Gets a supplier's settlement discount
    ;
    ; Returns:
    ;
    ; History:
    ; 07-Oct-2005	SteveS	SR13642: Commented -- allow term override
    ;------------------------------------------------------------------------------
	new idTerm,strDiscount,objTerm
	
	if pidTerm="" {
		set idTerm = $$GetTerm(pidSupplier)
	} else {
		set idTerm = pidTerm
	}
	
	set strDiscount = 0
	
	if (idTerm'="") {
		set objTerm     = $get(^FINSYSTerm(0,idTerm,1))
		set strDiscount = $$$FINSYSTermDiscount1(objTerm)_"%"
	}
	quit strDiscount
	
	
GetTerm(pidSupplier)	
    ;-------------------------------------------------------------------------------
	; 26-May-2003	SCR		Error Checking
    ;-------------------------------------------------------------------------------
	new objSupplier,idTerm,idControlAcct,objControlAccount,Status
	
	set Status = $$$OK
	set idTerm = ""
	if pidSupplier="" set Status = $$$NO
	if Status=$$$OK {
		set objSupplier = $get(^FINAPSupplier(0,pidSupplier,1))
		if objSupplier="" set Status = $$$NO
	}
	
	if Status=$$$OK {
		set idTerm = $$$FINAPSupplierDiscountTerm(objSupplier)
	}
	if (Status=$$$OK) && (idTerm="") {
		set idControlAcct = $$$FINAPSupplierControlAccount(objSupplier)
		if idControlAcct'="" {
			set objControlAccount = $get(^FINAPAccount(0,idControlAcct,1))
			set idTerm            = $$$FINAPAccountDefaultDiscountTerm(objControlAccount)
		}
	}
	quit idTerm
	
	
GetDueDate(pidSupplier,pdteTransDate,pidTerm)
    ;-------------------------------------------------------------------------------
    ;
    ; Returns:
    ;
    ; History:
    ; 21-Mar-2005	JW		SR11405: Added pidTerm parameter (override)
    ; 15-Mar-2004	shobby	End of month date calculation.
    ;-------------------------------------------------------------------------------
	new idTerm,dteDueDate,objTerm
	
	set dteDueDate = pdteTransDate
	
	if $get(pidTerm)="" {
		set idTerm = $$GetTerm(pidSupplier)
	} else {
		set idTerm = pidTerm
	}
	
	if idTerm'="" {
		set objTerm=$get(^FINSYSTerm(0,idTerm,1))
		if $$$FINSYSTermBasedOn(objTerm) = $$$EnumFINSYSTERMBASEDEndofMonth {
			set dteDueDate = dteDueDate+$$^WWWMONTHDAYS(dteDueDate)-$$^WWWDAY1(dteDueDate)
		} ; CHANGE TO : $$GetDaysInMonth^COMUtilDate(dteDueDate)-$$$DateDay(dteDueDate)
		set dteDueDate=dteDueDate+$$$FINSYSTermDiscount1Days(objTerm)
	}
	quit dteDueDate
	
	
GetSupplierControl()
	new idControlAcct,strAcctList
	
	set strAcctList = ""
	set idControlAcct = ""
	for {
		set idControlAcct = $order(^FINAPAccount(0,idControlAcct))
		quit:idControlAcct=""
		
		if strAcctList'="" set strAcctList = strAcctList_";"
		set strAcctList = strAcctList_idControlAcct
	}
	quit strAcctList
	
	
AmountDue(pidSupplier,pdteDueDate,pblnSplitByDepartment=$$$NO,pidDepartmentFilter="",pidLocationFilter="")
    ;-------------------------------------------------------------------------------
    ; Method Usage
    ;
    ; Returns:
    ;
    ; History:
    ; 31-Jul-2006	PO		SR14869: Store invoices
    ; 08-Jul-2004   Shobby	Foreign Currency
    ;-------------------------------------------------------------------------------
	new curAmount,dtexDate,idxInvoice,objInvoice,idxSupplier,idInvoice
	new idDepartment,curAmountDue,blnAmountDue
	
	set idxSupplier = $$$Index($get(pidSupplier))
	set curAmount = 0
	
	kill ^CacheTempInvoice(YUSER)
	
	set dtexDate = ""
	for {
		set dtexDate = $order(^FINAPInvoices(0,1,idxSupplier,dtexDate))
		quit:dtexDate=""
		quit:((dtexDate>pdteDueDate) && (pdteDueDate'=""))
		
		set idxInvoice = ""
		for {
			set idxInvoice = $order(^FINAPInvoices(0,1,idxSupplier,dtexDate,idxInvoice))
			quit:idxInvoice=""
			
			set idInvoice  = $order(^FINAPInvoices(0,1,idxSupplier,dtexDate,idxInvoice,pidSupplier,"")) // TODO: What if idx for supplier is same for multiple suppliers. Need a loop
			set objInvoice = $get(^FINAPInvoice(0,pidSupplier,idInvoice,1))
			continue:$$$FCZero($$$FINAPInvoiceBalance(objInvoice))
			
			set curAmountDue = $$GetAmountDue^FINAPInvoice(pidSupplier,idInvoice,pdteDueDate)
			set curAmount = $$$FCAdd(curAmount,curAmountDue)
 
			set idDepartment = $$$FINAPInvoiceDepartment(objInvoice)
			if (pidDepartmentFilter'="") && (pidDepartmentFilter '= idDepartment) continue
			if (pidLocationFilter'="") && (pidLocationFilter '= $$$FINAPInvoiceLocation(objInvoice)) continue
			if 'pblnSplitByDepartment {
				set idDepartment = ""
			}
			if idDepartment = "" set idDepartment = "ÿ"
			set ^CacheTempInvoice(YUSER,idDepartment) = $get(^CacheTempInvoice(YUSER,idDepartment)) + curAmountDue
			set ^CacheTempInvoice(YUSER,idDepartment,idInvoice) = objInvoice
		}
	}
	
	if dtexDate '= "" { ; Store all future invoices conveniently for later processing
		set dtexDate = dtexDate - 1
		for {
			set dtexDate = $order(^FINAPInvoices(0,1,idxSupplier,dtexDate))
			quit:dtexDate=""
			
			set idxInvoice = ""
			for {
				set idxInvoice = $order(^FINAPInvoices(0,1,idxSupplier,dtexDate,idxInvoice))
				quit:idxInvoice=""
				
				set idInvoice = $order(^FINAPInvoices(0,1,idxSupplier,dtexDate,idxInvoice,pidSupplier,""))
				set objInvoice = $get(^FINAPInvoice(0,pidSupplier,idInvoice,1))
				continue:$$$FCZero($$$FINAPInvoiceBalance(objInvoice))
 
				set idDepartment = $$$FINAPInvoiceDepartment(objInvoice)
				if (pidDepartmentFilter '= "") && (pidDepartmentFilter '= idDepartment) continue
				if (pidLocationFilter '= "")   && (pidLocationFilter '= $$$FINAPInvoiceLocation(objInvoice)) continue
				if 'pblnSplitByDepartment {
					set idDepartment = ""
				}
				if idDepartment = "" set idDepartment = "ÿ"
				set ^CacheTempInvoice(YUSER,idDepartment,idInvoice) = objInvoice
			}
		}
	}
 
	set blnAmountDue = $$$NO
	set idDepartment = ""
	for {
		set idDepartment = $order(^CacheTempInvoice(YUSER,idDepartment))
		quit:idDepartment=""
		
		if +$get(^CacheTempInvoice(YUSER,idDepartment)) {
			set blnAmountDue = $$$YES
			quit
		}
	}
	quit blnAmountDue
	
	
GetGraceDays(pidSupplier)
	;------------------------------------------------------------------------------
	; Get the grace days for payment from the supplier if it exists. 
	; Otherwise get from supplier control.
	;
	; History:
	; 03-Jul-2003	shobby	Test for existence of Supplier (TR005541)
	;
	;-------------------------------------------------------------------------------
	new objSupplier,intNumDays,objSupplierControl,pidSupplierControl
	
	set intNumDays=0
	if $get(pidSupplier)'="" {
		set objSupplier=$get(^FINAPSupplier(0,pidSupplier,1))
		if objSupplier'="" {
			set intNumDays=$$$FINAPSupplierGraceDays(objSupplier)
			if intNumDays="" {
				set pidSupplierControl=$$$FINAPSupplierControlAccount(objSupplier)
				if pidSupplierControl'="" {
					set objSupplierControl=$get(^FINAPAccount(0,pidSupplierControl,1))
					set intNumDays=$$$FINAPAccountDefaultGraceDays(objSupplierControl)
				}
			}
		}
	}
	quit +intNumDays
	
	
GetDiscountAccount(pidSupplier)
	;-------------------------------------------------------------------------------
	;get the discount account form the supplier control associated with this supplier
	;-------------------------------------------------------------------------------
	new objSupplier,intNumDays,objSupplierControl,idDiscountAccount
	
	set objSupplier        = $get(^FINAPSupplier(0,pidSupplier,1))
	set objSupplierControl = $get(^FINAPAccount(0,$$$FINAPSupplierControlAccount(objSupplier),1))
	set idDiscountAccount  = $$$FINAPAccountDiscountAccount(objSupplierControl)
	
	quit idDiscountAccount
	
	
DefaultControl(Number)
	;-------------------------------------------------------------------------------
	; Get Default Supplier Control Account
	; Use First Account
	;-------------------------------------------------------------------------------
	new Control
	
	set Control = $order(^FINAPAccount(0,""))
	quit Control
	
	
GetBalanceOld(pidSup,pintField,pdteDate="",pblnFormatted=$$$YES)
	;-------------------------------------------------------------------------------
	; Get Supplier Balance
	;
	; Returns:
	;
	; History:
	; 29-Jun-2004	shobby	Replaced with GetBalance, modified from FINARCustomer (SR7560)
	; 03-Jun-2004	shobby	Pass in the pblnFormatted flag to determine formatting.
	; 31-May-2004	SCR		FC Upgragde, if FC, show FC code & amt ie. USD 234.00
	; 02-Sep-2003	shobby	Simplified from FINARCustomer (Request from SR)
	;-------------------------------------------------------------------------------
	new lstPeriodTotals,strResult,FCCode,Balance
	
	set lstPeriodTotals = $$CalcPeriodTotal(pidSup,pdteDate)
	set strResult = $$$FCAdd($listget(lstPeriodTotals,1),$listget(lstPeriodTotals,2))
	set strResult = $$$FCAdd(strResult,$listget(lstPeriodTotals,3))
	set strResult = $$$FCAdd(strResult,$listget(lstPeriodTotals,4))
	
	set Balance=+strResult 	
 
	if pblnFormatted {
		set FCCode = $$GetFCCode(pidSup)
		if FCCode'="" {
			set Balance = $$$FCAmount(strResult)
		}
		set Balance = $$Format^FINUtils(Balance)
		
		if FCCode'="" {
			set Balance=FCCode_" "_Balance
		}
	}
	kill ^mtemp(YUSER,"GetBalance")
	quit Balance
	
	
	// No longer needed ???
	
GetAmount(pYKEY,pintField,pdteDate,pstrFCCode="",pblnClearCache=$$$YES)
    ;-------------------------------------------------------------------------------
    ; Returns appropriate amount for field.
    ;
    ; Returns:String
    ;
    ; History:
    ; 29-Jan-2007	RPW		SR15412: Default the clearing of the cache to yes.
    ; 03-Aug-2004	PO		SR14868: When the cache is no longer needed it can be
    ;							cleared - pblnClearCache
    ; 01-Dec-2004	PO		SR10947 (Created) Code taken from GetBalance and now
    ;							calling CalcPeriodTotal with FC
    ;-------------------------------------------------------------------------------
	new curTotal,idTab,lstPeriodTotals,strResult
	
	set strResult=""
	
	if '$data(^mtemp(YUSER,"GetBalance")) || ($get(pintField)="") {
		set lstPeriodTotals = $$CalcPeriodTotal(pYKEY,pdteDate,$$$YES,pstrFCCode) ;SR10380
		set strResult       = $listget(lstPeriodTotals,1)
		set ^mtemp(YUSER,"GetBalance","Current")      = $listget(lstPeriodTotals,1)
		set ^mtemp(YUSER,"GetBalance","Period1Month") = $listget(lstPeriodTotals,2)
		set ^mtemp(YUSER,"GetBalance","Period2Month") = $listget(lstPeriodTotals,3)
		set ^mtemp(YUSER,"GetBalance","Period3Month") = $listget(lstPeriodTotals,4)
		set curTotal = $$$FCAdd($listget(lstPeriodTotals,1),$listget(lstPeriodTotals,2))
		set curTotal = $$$FCAdd(curTotal,$listget(lstPeriodTotals,3))
		set curTotal = $$$FCAdd(curTotal,$listget(lstPeriodTotals,4))
		set ^mtemp(YUSER,"GetBalance","PeriodTotal") = curTotal
		
	}
	if ($get(pintField)="") || (pintField=1) {
		set strResult = $get(^mtemp(YUSER,"GetBalance","Current"))
		
	} elseif pintField=2 {
		set strResult = $get(^mtemp(YUSER,"GetBalance","Period1Month"))
		
	} elseif pintField=3 {
		set strResult = $get(^mtemp(YUSER,"GetBalance","Period2Month"))
		
	} elseif pintField=4 {
		set strResult = $get(^mtemp(YUSER,"GetBalance","Period3Month"))
		
	} elseif pintField=5 {
		set strResult = $get(^mtemp(YUSER,"GetBalance","PeriodTotal"))
	}
	if $get(pintField)="" kill ^mtemp(YUSER,"GetBalance")
	if pblnClearCache     kill ^mtemp(YUSER,"GetBalance")
	
	quit strResult
	
	
GetBalance(pYKEY,pintField="",pdteDate="",pblnFormatted=$$$YES)
    ;-------------------------------------------------------------------------------
    ; Returns various Supplier totals for the @Net Supplier Screen.
    ;
    ; Returns:String
    ;
    ; History:
    ; 16-Jun-2004	shobby		Default pintField to "".  Used by Health Checks (SR7576)
    ; 01-Dec-2004	PO			SR10947 Moved code sourcing strResult into a separate procedure (GetAmount)
	; 20-Sep-2004	shobby		Pass a flag into CalcPeriodTotal to included forward dated invoices (SR10380)
	; 08-Jul-2004	shobby		Foreign Currency
	; 07-Jul-2004	shobby		Health Checks pass in pintField as unspecified but require the 'Current' value.  Then clean up the temporary data.
	; 29-Jun-2004	shobby		Modified from FINARCustomer (SR7560)
	; 26-Feb-2004	SCR			Bug Fix
    ;-------------------------------------------------------------------------------
	new strResult,Balance,FCCode
	
	set strResult = $$GetAmount(pYKEY,pintField,pdteDate)
	
	if pblnFormatted {
		set Balance = +strResult
		set FCCode  = $$GetFCCode(pYKEY)
		if FCCode'="" {
			set Balance = $$$FCAmount(strResult)
		}
		
		set Balance = $$Format^FINUtils(Balance)
		
		if FCCode'="" {
			set Balance = FCCode_" "_Balance
		}
		set strResult = Balance
	}
	quit strResult
	
	
GetFCBalance(pYKEY,pintField,pdteDate="",pblnClearCache=$$$NO)
    ;-------------------------------------------------------------------------------
    ; Returns various FC Supplier totals for the @Net Supplier Screen.
    ;
    ; Returns:String
    ;
    ; History:
    ; 29-Jan-2007	RPW		SR15412: Don't pass through the currency and clearing of
    ;							the cache. But get the FC Amount from the returned value
    ; 01-Dec-2004	PO		SR10947 (Created) This procedure exists so as to not
    ;							break anything that uses GetBalance
    ;-------------------------------------------------------------------------------
	quit $$$FCAmount($$GetAmount(pYKEY,pintField,pdteDate))
	
	
GetFCCode(pidSupplier="")
	;-------------------------------------------------------------------------------
	; Get the FC Code for the supplier
	; 
	; if the FC Code = the Base Currency, return ""
	;
	; Returns:
	;
	; History:
	; 06-Nov-2006	JW		Coding standards
	; 31-May-2004	SCR		Created
	;-------------------------------------------------------------------------------
 	new objSupplier,idSuppCurrency,idCompanyCurrency
 	
	if pidSupplier="" set pidSupplier = " "
	set objSupplier       = $get(^FINAPSupplier(0,pidSupplier,1))
	set idSuppCurrency    = $$$FINAPSupplierCurrency(objSupplier)
	set idCompanyCurrency = $$$WWW012StandardCurrency($get(^WWW012(0,0,1)))
	
	if (idSuppCurrency=idCompanyCurrency) {
		set idSuppCurrency = ""
	}
	quit idSuppCurrency
	
	
CalcPeriodTotal(pidSupplier="",pdteDate="",pblnIncludeForwardDated=$$$NO,pstrFCCode="",
				pstrDateType=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate)
	;-------------------------------------------------------------------------------
	; This routine gets aged trial balance info for Receivables.
	; 
	; ****   Any changes should also be put in CalcPeriodTotal^FINARCustomer ******
	;
	; History
	; 21-Nov-2006	SteveS	SR15204: Only force Invoice Date when date *IS* blank
	; 16-Oct-2006	PO		SR14942: If there is no GL Effective date then use
	;							invoice date... will happen when int batches deleted
	;							(data take on)
	; 21-Aug-2006	RPW		SR14868: Fixed SR number in the entry below.
	; 07-Aug-2006	PO		SR14868: Changed processing to prevent STORE errors
	; 06-Feb-2006	SteveS	SR13474: Added pstrDateType (can report by various dates)
	; 29-May-2005	SCR		SR12220	Invoice Filter
	; 24-Jan-2005	PO		SR11514 Removed changes from SR10947 as it was
	;							converting currency twice
	; 01-Dec-2004	PO		SR10947 Convert from base currency to foreign
	; 20-Sep-2004	shobby	Flag to included forward dated invoices (SR10380)
	; 28-May-2004	SCR		Added FC to Calculation, Changed to Use FINAPInvoiceTran
	; 01-Aug-2003	shobby	Exclude Invoices that are later than the selected date.
	;							(TrackRecord 005765)
	; 29-Jun-2003	LW		Changed to use FINAPInvoice balance and invoice date
	; 20-Jun-2003	shobby	GetIDPart is now located in COMUtils (TrackRecord 005422)
	; 04-Jun-2003	shobby	Was skipping the first record.
	; 03-Jun-2003	shobby	Adjustment 3 month calculation.
	; 02-Jun-2003	shobby	Get Info for each specified account.
	; 26-May-2003	shobby	Creation
	;-------------------------------------------------------------------------------
	new dteDateOrig,fltAmount,idBatch,idInvoice,idPeriodType,idTran,intPeriod
	new lngCurrentMonth,node,objFINAPInvoice,objTran,strDate
 
	if $get(pdteDate)="" set pdteDate = +$horolog
	set fltAmount(1)    = 0
	set fltAmount(2)    = 0
	set fltAmount(3)    = 0
	set fltAmount(4)    = 0
	set lngCurrentMonth = $$Month^REP(pdteDate)
 
	if pidSupplier="" set pidSupplier = " "
	;
	set idInvoice   = ""
	set dteDateOrig = pdteDate
	if pblnIncludeForwardDated set pdteDate = pdteDate+10000
	set idPeriodType = $$TrialBalancePeriodType^FINGeneralSetup()
 
	for {
		set idInvoice=$order(^FINAPInvoice(0,pidSupplier,idInvoice))
		quit:(idInvoice="")
		
		set objFINAPInvoice = $get(^FINAPInvoice(0,pidSupplier,idInvoice,1))
 
		; Get the required date from the invoice
		if pstrDateType=$$$EnumFINSYSINVOICEDATETYPEInvoiceDate {
			set strDate = $$$FINAPInvoiceInvoiceDate(objFINAPInvoice)
		
		} elseif pstrDateType=$$$EnumFINSYSINVOICEDATETYPEDueDate {
			set strDate = $$$FINAPInvoiceDueDate(objFINAPInvoice)	
		
		} elseif pstrDateType=$$$EnumFINSYSINVOICEDATETYPEGLEffectiveDate {
			set strDate = $$GetGLEffDate^FINAPInvoice(pidSupplier,idInvoice)
		}
 
 		// Only use Invoice Date if date **IS** blank
 		if $get(strDate)="" set strDate = $$$FINAPInvoiceInvoiceDate(objFINAPInvoice)
 
		if (strDate<=pdteDate) {
			set fltAmount = $$GetInvoiceBalance(pidSupplier,idInvoice,pdteDate)
			if pstrFCCode'="" {
				set fltAmount = $$$FCAmount(fltAmount)
			}
 
			if ('$$$FCZero(fltAmount)) {  ; This will check for Invoices with a balance in local & fc
				if $$QueryCheck^FINAPInvoice(pidSupplier_","_idInvoice,objFINAPInvoice) { ; Invoice Filter
					set intPeriod = $$Period(idPeriodType,strDate,pblnIncludeForwardDated,dteDateOrig,lngCurrentMonth)
					if intPeriod '= 0 {
						set fltAmount(intPeriod) = $$$FCAdd($get(fltAmount(intPeriod)),fltAmount)
					}
				}
			}
		}
	}
	quit $listbuild(fltAmount(1),fltAmount(2),fltAmount(3),fltAmount(4))
	
	
Period(pidPeriodType,pdteDate,pblnIncludeForwardDated,pdteDateOrig,plngCurrentMonth)
	;-------------------------------------------------------------------------------
	; Period that a date is part of
	;
	; Params:
	; pidPeriodType - Type of period (monthly or lots of 30 days)
	; pdteDate - Invoice/Due/GL effecitve Date (will be increased by 10,000 if pblnIncludeForwardDated)
	; pblnIncludeForwardDated - Whether dates after pdteDate are to be include
	; pdteDateOrig - Original Invoice/Due/GL effecitve Date
	; plngCurrentMonth - Absolute month number for pdteDate
	;
	; ByRefs: None
	;
	; Returns: Period
	;
	; History:
	; 14-Sep-2006	PO		SR15010: Corrected calculation
	; 24-Aug-2006	PO		SR14942: Corrected 30 day period type where not
	;							including future dates
	; 07-Aug-2006	PO		SR14877: Created
	;-------------------------------------------------------------------------------
	new intPeriod,lngMonth
 
	if pblnIncludeForwardDated {
		if pidPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set lngMonth = ($$$DateYear(pdteDate) * 12)+$$$DateMonth(pdteDate)
			set intPeriod = $select(lngMonth >= plngCurrentMonth		:1,
									lngMonth = (plngCurrentMonth-1)		:2,
									lngMonth = (plngCurrentMonth-2)		:3,
									lngMonth <= (plngCurrentMonth-3)	:4,
									$$$YES								:0)
		
		} elseif pidPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			set intPeriod = $select(pdteDate >= (pdteDateOrig-29)	:1,
									pdteDate >= (pdteDateOrig-59)	:2,
									pdteDate >= (pdteDateOrig-89)	:3,
									pdteDate <= (pdteDateOrig-90)	:4,
									$$$YES							:0)					
		}
		
	} else {
		if pidPeriodType = $$$EnumFINSYSPERIODTYPECalenderMonth {
			set lngMonth = ($$$DateYear(pdteDate) * 12)+$$$DateMonth(pdteDate)
			set intPeriod = $select((lngMonth = plngCurrentMonth) && (pdteDate <= pdteDateOrig)	:1,
									lngMonth = (plngCurrentMonth-1)								:2,
									lngMonth = (plngCurrentMonth-2)								:3,
									lngMonth <= (plngCurrentMonth-3)							:4,
									$$$YES														:0)
		
		} elseif pidPeriodType = $$$EnumFINSYSPERIODTYPE30Days {
			if pdteDate <= pdteDateOrig {
				set intPeriod = $select(pdteDate >= (pdteDateOrig-29)	:1,
										pdteDate >= (pdteDateOrig-59)	:2,
										pdteDate >= (pdteDateOrig-89)	:3,
										pdteDate <= (pdteDateOrig-90)	:4,
										$$$YES							:0)
			} else {
				set intPeriod = 0
			}
		}
	}
	quit intPeriod
	
	
GetInvoiceBalance(pidSupplier,pidInvoice,pdteDate)
    ;-------------------------------------------------------------------------------
    ; Get Invoice balance for a Date
    ;
    ; Returns:
    ;
    ; History:
    ; 21-Nov-2006	SteveS	SR15204: Use an index / order macros
    ; 10-May-2006	SteveS	SR13474: Use proper variable names
    ; 07-Jun-2004	SCR		Created
    ;-------------------------------------------------------------------------------
	new curAmount,curTranAmt,dteTranDate,idTran,idxSupplier,idxInvoice,objTran
	
	set curAmount = 0
	
	quit:($get(pidSupplier)="")||($get(pidInvoice)="") curAmount
	
	if $get(pdteDate)="" set pdteDate = +$horolog  ; Default to today
	
	set idxSupplier = $$$Index(pidSupplier)
	set idxInvoice	= $$$Index(pidInvoice)
	
	set dteTranDate = ""
	for {
		set dteTranDate = $order(^FINAPInvoiceTrans(0,5,idxSupplier,idxInvoice,dteTranDate))
		quit:dteTranDate=""
		quit:(dteTranDate>pdteDate)
		
		set idTran = ""
		for {
			set idTran = $order(^FINAPInvoiceTrans(0,5,idxSupplier,idxInvoice,dteTranDate,pidSupplier,pidInvoice,idTran))
			quit:idTran=""
	
			set objTran    = $get(^FINAPInvoiceTran(0,pidSupplier,pidInvoice,idTran,1))
			set curTranAmt = $$$FINAPInvoiceTranTransactionAmount(objTran)
			set curAmount  = $$$FCAdd(curAmount,curTranAmt)
		}
	}
	quit curAmount
	
 
OnBeforeDelete(pYKEY)
	;--------------------------------------------------------------------------
	; Test whether this thing can be deleted
	; 
	; History
	; 08-Mar-2004		shobby		Creation
	; 
	;--------------------------------------------------------------------------
	;
	quit $$CheckLinks^FINSYS(pYKEY,$listbuild("FINAPPaymentLine","FINAPInvoice","FINAPADJLine"),"FINAPSupplier")
	
	
OnBlurTaxLocation(pLocation="")
    ;-------------------------------------------------------------------------------
    ; Code to execute on change of the tax location field.
    ;
    ; Returns:
    ;
    ; History:
    ; 19-Mar-2010	shobby	SR15753: Comment out redundant code.
    ; 15-Aug-2005	JW		SR12615: Don't need to clear field or alert.
    ; 29-Apr-2005	JW		SR12255: Changed from OnChange to OnBlur
    ; 30-Mar-2005	JW		SR11405: Created
    ;-------------------------------------------------------------------------------
	new idTaxCode,codesArray,default
	
	set default = $$DefaultTaxCode^COMTAX(pLocation)
	do StartCombo^COMCombo("document.WWW2.Y"_YFORM_"D"_$$$FldFINAPSupplierDefaultTaxCode,default,1)
	
	if pLocation'="" {
		if $$IsValidLocation^COMTAXLocation(pLocation) {
			do CreateTaxCodesList^COMTAXLocation(pLocation,.codesArray)
			set idTaxCode = ""
			for {
				set idTaxCode = $order(codesArray(idTaxCode))
				quit:idTaxCode=""
				
				do AddOption^COMCombo(idTaxCode,$zconvert(idTaxCode_" - "_$get(codesArray(idTaxCode)),"o","JS"))
			}
		}
	}
	do StopCombo^COMCombo()
	quit
	
	
GetTaxLocation(pidSupplier)
    ;-------------------------------------------------------------------------------
    ; Get the supplier's tax location. If not set up, use the current
    ; location's tax location.
    ;
    ; Returns: tax location
    ;
    ; History:
    ; 07-Apr-2005	JW		Created SR10722
    ;-------------------------------------------------------------------------------
	new idLocn
	
	set idLocn=""
	if pidSupplier'="" {
		set idLocn = $$$FINAPSupplierTaxLocation($get(^FINAPSupplier(0,pidSupplier,1)))
		if idLocn="" {
			set idLocn = $$CurrentTaxLocation^COMTAXLocation()
		}
	}
	quit idLocn
	
	
OnAfterButtonLine(pidSup="")
    ;-------------------------------------------------------------------------------
    ; On After Button Line
    ; Show Supplier Status
    ;
    ; Returns:
    ;
    ; History:
    ; 31-May-2005	SCR		Created SR12220:
    ;-------------------------------------------------------------------------------
	new strText
	
	set strText="["_$$Status(pidSup)_"]"
	do DisplayText^COMUtilForm(strText)
	quit
	
	
Status(pidSup="")
    ;-------------------------------------------------------------------------------
    ; Supplier Status
    ;
    ; Returns: HTML Message
    ;
    ; History:
    ; 30-May-2005	SCR		Created SR12220:
    ;-------------------------------------------------------------------------------
	quit $$QueryStatus^FINAPInvoiceFilter(pidSup)
	
 
 
]]></Routine>
</Export>