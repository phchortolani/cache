<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INARTNEU" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INARTNEU(ART,SIMPLE,EXECUTE)
#include COMSYS
#include INConst
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		NEUBERECHNEN DER ARTIKELTEILEPREIS, GEWICHT UND DAUER
	;	D ^INARTNEU(ARTIKEL,,1)
	;	
	; Inputs : 
	;	ART			ARTIKEL
	;	SIMPLE		1 = NUR DIESEN ARTIKEL MIT DEN OBERTEILEN NEU RECHNEN ;item by means of recent have faith in 
	;	EXECUTE		1 = SOFORT AUSFÜHREN KEINEN HINTERGUNDJOB EINLEITEN   ;right now implement preface 
	;
	; ByRef :
	;
	;
	; Returns :
	;
	;
	; History :
	; 28-Nov-2007	GRF		Dot level; quits
	; 21-Sep-2006	FAN		SR14746 Sales statistics incorrect
	; 16-Aug-2005	GRF		SR13215: Doco; /3600
	; 01.09.2000	DT
	;-------------------------------------------------------------------------------
	NEW ARTIKEL,LF,UP,ONES,RWERT,ME
	
	IF $GET(EXECUTE)'=1 LOCK +^INPROPJOB(YM):0 IF '$T DO  QUIT  ;HINTERGRUND AKTIV ;foil ENABLED 
	. IF $GET(ART)="" DO  ;LÖSCHEN ANDERE ANWEISUNGEN, WENN GESAMTAUFBAU ANGESTOSSEN
	. . NEW NEXT
	. . SET NEXT=""
	. . FOR  SET NEXT=$ORDER(^INARTJOB(YM,NEXT)) QUIT:NEXT=""  DO
	. . . IF $FIND($GET(^INARTJOB(YM,NEXT,1)),"DO ^INARTNEU") KILL ^INARTJOB(YM,NEXT)
	. ;
	. SET ^INARTJOB(YM,$$^WWWNEXT("INARTJOB"),1)="DO ^INARTNEU("_""""_$GET(ART)_""""_","_$GET(SIMPLE)_",1)"
	
	IF $GET(EXECUTE)'=1 LOCK -^INPROPJOB(YM)
	
	;---------------------------------------
	;
	; FIXME : ? Is GESAMT supposed to be called twice?
	;           Is it an attempt to do limited recursion?(fix all then fix all to pick up sub-level)
	;           If so may fail to update correctly where more levels involved. <GRF>
	IF $GET(ART)="" DO OHNETEIL DO GESAMT DO GESAMT QUIT   ;ALLES NEU ;whatsoever recent 
	;
	;---------------------------------------
	
	KILL ^WWWSOR(YUSER,"ART")
	;ALLE UNTER UND OBERTEILE DES ARTIKELS NEU RECHNEN ;under And recent have faith in 
	SET ARTIKEL=ART DO ARTIKEL
	SET ARTIKEL=""
	FOR  SET ARTIKEL=$ORDER(^INARTTs(YM,1,$$^WWWUMLAU(ART,1),ARTIKEL)) QUIT:ARTIKEL=""  QUIT:ARTIKEL=ART  DO ARTIKEL
	
	;IF $GET(SIMPLE)'=1 SET ARTIKEL="" FOR  SET ARTIKEL=$ORDER(UP(ARTIKEL)) QUIT:ARTIKEL=""  QUIT:ARTIKEL=ART  DO ARTIKEL   ;ARTIKEL ÜBER DEN ARTIKEL
	IF $GET(SIMPLE)'=1 DO   ;TYBD;2.5.2003
	. FOR  SET ARTIKEL=$ORDER(UP("")) QUIT:ARTIKEL=""  QUIT:ARTIKEL=ART  DO
	. . KILL UP(ARTIKEL)
	. . QUIT:$DATA(^WWWSOR(YUSER,"ART",ARTIKEL))
	. . SET ^WWWSOR(YUSER,"ART",ARTIKEL)=""
	. . DO ARTIKEL   ;ARTIKEL ÜBER DEN ARTIKEL ;item via item 
	
	KILL ^WWWSOR(YUSER,"ART")
	QUIT
	
OHNETEIL
	;-------------------------------------------------------------------------------
	; Update an item - without parts   ;NEUBERECHNEN ARTIKEL OHNE TEILE
	; PREISE DER ARTIKEL OHNE TEILE= KLEINTEILE ODER BESTELLTEILE
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 14-Jul-2009	shobby	SR16752: Speed Up.  Don't save if there is no change.
	; 05-Oct-2006	RPW		SR14746: Rewrote and corrected, this was a complete
	; 						rewrite and should have been done in Brace Syntax.
	; 						Also fixed semantic change introduced.
	;-------------------------------------------------------------------------------
	new SATZ,strStatus,SATZOLD
	
	$$$Order2(^INART,YM,ARTIKEL)
		continue:$data(^INARTT(YM,ARTIKEL))
		
		set SATZ=$get(^INART(YM,ARTIKEL,1))
		set SATZOLD=SATZ ;SR16752
		SET $PIECE(SATZ,Y,47)=$$^INARTKOST(ARTIKEL,1)  ;ARTIKELPREIS// SR14746
		SET $PIECE(SATZ,Y,45)=$$^INARTDAUER(ARTIKEL)   ;DAUER DES ARTIKELS ;permanence // SR14746
		SET $PIECE(SATZ,Y,43)=$$^INGEWICHT(ARTIKEL)    ;GEWICHT DES ARTIKELS ;wt. // SR14746
		IF $PIECE(SATZ,Y,26)=2 {  ;RÜSTKOSTEN BEI LEISTUNGEN ;next to LEISTUNGEN // SR14746
			SET ME=$PIECE(SATZ,Y,40)
			if (ME=2)||(ME=10)||(ME=11) {
				SET $PIECE(SATZ,Y,71)=$$^INARTRWERT(ARTIKEL)  ;RÜSTKSOTEN DES ARTIKELS
				IF $PIECE(SATZ,Y,140)="" SET $PIECE(SATZ,Y,140)=$$^INARTKOST(ARTIKEL,1)  ;DURCHSCHNITTLICHER EK ;Planned Cost 
			}
		}
		if SATZ'=SATZOLD { ;SR16752
			SET strStatus=$$$Save("INART",ARTIKEL,SATZ,$$$YES)     // SR14746
		}
		DO KALK
	$$$End
	
	QUIT
	
GESAMT ;MIT TEILEN ALLE TEILE NEU ;by means of recent 
	SET ARTIKEL=""
	FOR  SET ARTIKEL=$ORDER(^INARTT(YM,ARTIKEL)) QUIT:ARTIKEL=""  DO
	. DO ARTIKEL
	
	QUIT
	
	;+++++++++++++++++++++++++++++++++++++++
	;  TEIL1			objINARTT
	;  YARTIKEL1		objINART
	;+++++++++++++++++++++++++++++++++++++++
	
ARTIKEL
	;-------------------------------------------------------------------------------
	;	TEILEARTIKEL DES ARTIKELS BEARBEITEN
	;
	; History:
	; 26-Mar-2008	GRF		SRBR014901: Save parameters should be Key then Data
	; 01-Feb-2008	GRF		SR15627: Use $$$Save
	;-------------------------------------------------------------------------------
	new objItem,UARTIKEL,strStatus
	
	QUIT:ARTIKEL=""
	QUIT:$DATA(ONES(ARTIKEL))  ;NUR EIN MAL STARTEN ;only uni- sometimes launching 
	
	SET ONES(ARTIKEL)=""
	
	;ARTIKEL OBERHALB DER ARTIKEL ;Indexed form of idItem
	set UARTIKEL=$$^WWWUMLAU(ARTIKEL,1)
	
	SET UP=""
	FOR  SET UP=$ORDER(^INARTTs(YM,1,UARTIKEL,UP)) QUIT:UP=""  SET UP(UP)=""
	;QUIT:'$DATA(^INARTT(YM,ARTIKEL))
	
	;---------------------------------------
	; INARTT
	;	D1		$$$INARTTItemNumber1()
	;	D3		$$$INARTTDescription()
	;	D4		$$$INARTTQuantity()	
	;	D5		$$$INARTTUnit()
	;	D6		$$$INARTTWeight()
	;	D7		$$$INARTTDuration()
	;	D8		$$$INARTTValue1()
	;	D9		$$$INARTTeditedQuantityDuration()
	;	D15		$$$INARTTLength1()
	;	D16		$$$INARTTWidth()
	;	D17		$$$INARTTHeight()
	;	D70		$$$INARTTPreparationTime()
	;---------------------------------------
	
	DO
	. NEW GESRUEST
	. SET GESRUEST=""
	. SET TEIL=""
	. FOR  SET TEIL=$ORDER(^INARTT(YM,ARTIKEL,TEIL)) QUIT:TEIL=""  DO
	. . SET TEIL1   = $GET(^INARTT(YM,ARTIKEL,TEIL,1))
	. . SET TEILART = $PIECE(TEIL1,Y,1)
	. . QUIT:ARTIKEL=TEILART                ;GLEICHES TEIL;TYBD;28,11,2004;26567
	. . QUIT:TEILART=""
	. . ;
	. . ; INART
	. . ;	D1		$$$INARTSearchName()
	. . ;	D40		$$$INARTUnitofMeasure()
	. . ;	D70		$$$INARTSetupTime()
	. . ;
	. . SET YARTIKEL1 = $GET(^INART(YM,TEILART,1))  ;ARTIKELSTAMM DES TEILEARTIKELS
	. . ;
	. . ;WENN NICHT NEU: ; IF ($PIECE(TEIL1,Y,70)="")!($D(^INARTT(YM,TEILART))) SET $PIECE(TEIL1,Y,70)=$$^INARTRUEST(TEILART)*$$^INPROLOS(TEILART,$PIECE(TEIL1,Y,4))
	. . SET $PIECE(TEIL1,Y,70) = $PIECE(YARTIKEL1,Y,70)  ;FIS;23691;RÜSTZEITEN IN UNTERTEILE NEU ÜBERTRAGEN ;within recent transport 
	. . IF +$PIECE(TEIL1,Y,7)'=0 SET $PIECE(TEIL1,Y,70)=$$^INARTRUEST(TEILART)*$$^INPROLOS(TEILART,$PIECE(TEIL1,Y,4))  ;WENN IMMER NEU ;when constantly recent 
	. . SET $PIECE(TEIL1,Y,3)  = $PIECE(YARTIKEL1,Y,1)                          ;BESCHREIBUNG AKTUELL ;description up-to-date 
	. . SET $PIECE(TEIL1,Y,5)  =+$PIECE(YARTIKEL1,Y,40)                         ;EINHEIT AKTUELL      ;unit up-to-date 
	. . IF +$PIECE(TEIL1,Y,4)=0  SET $PIECE(TEIL1,Y,7)=$$^INARTDAUERT(TEILART)  ;DAUER NEU            ;Duration recent 
	. . IF +$PIECE(TEIL1,Y,4)'=0 SET $PIECE(TEIL1,Y,7)=$$^INARTDAUERT(TEILART,$PIECE(TEIL1,Y,4))      ;ERRECHNEN DAUER AUS TEILEN * MENGE ;permanence out of quantum 
	. . SET $PIECE(TEIL1,Y,6)=$$^INGEWICHTT(TEILART,$PIECE(TEIL1,Y,4),$PIECE(TEIL1,Y,15),$PIECE(TEIL1,Y,16),$PIECE(TEIL1,Y,17))  ;GEWICHT AUS TEILEN * MENGE ;wt. out of quantum 
	. . SET $PIECE(TEIL1,Y,8)=$$^INARTKOSTT(TEILART,$PIECE(TEIL1,Y,4),$PIECE(TEIL1,Y,9),$PIECE(TEIL1,Y,6),ARTIKEL,TEIL)  ;PREISERRECHNEN INKL VERSCHNITTE AUS TEILEN ;out of 
	. . IF GESRUEST<100000000 SET GESRUEST=GESRUEST+$PIECE(TEIL1,Y,70)
	. .;SET ^INARTT(YM,ARTIKEL,TEIL,1)=TEIL1                                 ; SR15627
	. .;set strStatus = $$$Save("INARTT",TEIL1,ARTIKEL_$$$COMMA_TEIL,$$$YES) ; SRBR014901
	. . set strStatus = $$$Save("INARTT",ARTIKEL_$$$COMMA_TEIL,TEIL1,$$$YES)
	. ;
	. ;SET $PIECE(^INART(YM,ARTIKEL,1),Y,70)=GESRUEST         ; SR15627
	. set objItem = $get(^INART(YM,ARTIKEL,1))
	. set $$$INARTSetupTime(objItem) = GESRUEST
	.;set strStatus = $$$Save("INART",objItem,ARTIKEL,$$$YES) ; SRBR014901
	. set strStatus = $$$Save("INART",ARTIKEL,objItem,$$$YES)
	
	;	D43		$$$INARTWeight()
	;	D45		$$$INARTExecutionTime()
	;	D47		$$$INARTProductionCosts()
	;	D70		$$$INARTSetupTime()
	;	D71		$$$INARTSetupCosts()
	DO 
	. SET GESRUEST=$PIECE($GET(^INART(YM,ARTIKEL,1)),Y,70)
	. SET RWERT=0
	. DO
	. . NEW WG,BETR,STDWERT
	. . SET BETR=$GET(YLOCATION)
	. . IF BETR="" SET BETR=$ORDER(^INKALK(YM,""))
	. . IF BETR="" SET BETR=$ORDER(^WWW0121(0,YM,""))
	. . IF BETR="" SET BETR=1
	. . SET WG=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)
	. . IF WG="" SET WG=$ORDER(^INKALK(YM,BETR,""))
	. . IF WG="" SET WG=0
	. . SET STDWERT=$PIECE($GET(^INKALK(YM,BETR,WG,1)),Y,1)/3600
	. . SET RWERT=$JUSTIFY(GESRUEST*STDWERT,0,2)
	. ;
	. DO     // SR14746
	. . NEW SATZ
	. . SET SATZ=$GET(^INART(YM,ARTIKEL,1))
	. . SET $PIECE(SATZ,Y,71) = RWERT                   ; Setup Time (per lot size?)
	. . SET $PIECE(SATZ,Y,47) = $$^INARTKOST(ARTIKEL)   ;ARTIKELPREIS  // SR14746
	. . SET $PIECE(SATZ,Y,45) = $$^INARTDAUER(ARTIKEL)  ;DAUER DES ARTIKELS ;Total Duration of all services in this item's Part List  // SR14746
	. . SET $PIECE(SATZ,Y,43) = $$^INGEWICHT(ARTIKEL)   ;GEWICHT DES ARTIKELS ;wt.   // SR14746
	. . IF $PIECE(SATZ,Y,140)="" SET $PIECE(SATZ,Y,140)=$$^INARTKOST(ARTIKEL,1)  ;DURCHSCHNITTLICHER EK ;Planned Cost 
	. . SET strStatus=$$$Save("INART",ARTIKEL,SATZ,$$$YES)     // SR14746
	. ;
	. DO KALK
	
	QUIT
	
KALK ;NEURECHNEN DER KAA UND ODER PREISE ;the And Or 
	NEW BETR,WG,YKALK,YFELD
	
	QUIT:$GET(ARTIKEL)=""  
	;#include COMDebug	
	;if $$$DevGlen {       ; SR15627/SRBR014901 ?
	;	do newHAUPT  ;KALKULATION HAUPTBETRIEB  ;cost estimating 
	;} else {
		DO HAUPT  ;KALKULATION HAUPTBETRIEB  ;cost estimating 
	;}
	DO NEBEN  ;KALKULATION NEBENBETRIEBE ;cost estimating 
	QUIT
	
HAUPT
	;-------------------------------------------------------------------------------
	;   BEING REPLACED BY CODE IN newHAUPT - SR15627
	;-------------------------------------------------------------------------------
	;	KALKULATIONSVORGABEN AUS BETRIEBSDATEI SUCHEN ;out of seek 
	; 
	; ByRef:
	;	ARTIKEL			idItem
	;	YLOCATION		Site Location
	;-------------------------------------------------------------------------------
	SET YFELD=$GET(^INART(YM,ARTIKEL,1))
	QUIT:YFELD=""
	
	;WARENGRUPPE SUCHEN ;seek 
	SET WG=$PIECE(YFELD,Y,30)
	IF WG="" DO
	. SET WG=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)
	. SET $PIECE(YFELD,Y,30)=WG  ;SETZEN STANDARDWARENGRUPPE IN ARTIKEL ;typeset within item 
	
	SET BETR=$GET(YLOCATION)
	IF BETR="" SET BETR=$ORDER(^INKALK(YM,""))
	IF BETR="" SET BETR=1
	IF WG'="" IF '$DATA(^INKALK(YM,BETR,WG)) SET WG=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)   ;DFLT WARENGRUPPE = 1.
	
	SET YKALK=""  ;YKALK NACH WARENGRUPPE ;within 
	
	IF BETR'="" IF WG'="" DO 
	. SET YKALK=$GET(^INKALK(YM,BETR,WG,1))
	
	IF BETR'="" IF ARTIKEL'="" IF $DATA(^INKALKART(YM,BETR,ARTIKEL)) DO  ;YKALK NACH ARTIKEL ;within item 
	. SET YKALK=$GET(^INKALKART(YM,BETR,ARTIKEL,1))
	
	IF YKALK'="" DO  ;VORGABEN ÜBERTRAGEN ;transport 
	. IF $PIECE(YKALK,Y,25)=1 DO  ;IMMER NEU BERECHNEN!  1.PREIS ;constantly recent 
	. . IF $PIECE(YKALK,Y,30)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,30),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF +$PIECE(YFELD,Y,47)'=0 FOR YI=88 IF $PIECE(YFELD,Y,YI)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)="",$PIECE(YFELD,Y,YI)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . IF $PIECE(YKALK,Y,11)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,86)=$PIECE(YKALK,Y,11) SET $PIECE(YFELD,Y,86)=$PIECE(YKALK,Y,11)   ;AUFSCHL1
	. . IF $PIECE(YKALK,Y,16)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,90)=$PIECE(YKALK,Y,16) SET $PIECE(YFELD,Y,90)=$PIECE(YKALK,Y,16)   ;PREISKZ1
	. ;
	. IF $PIECE(YKALK,Y,26)=1 DO  ;IMMER NEU BERECHNEN!  2.PREIS ;constantly recent 
	. . IF $PIECE(YKALK,Y,31)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,31),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF +$PIECE(YFELD,Y,47)'=0 FOR YI=98 IF $PIECE(YFELD,Y,YI)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)="",$PIECE(YFELD,Y,YI)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . IF $PIECE(YKALK,Y,12)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,96)=$PIECE(YKALK,Y,12) SET $PIECE(YFELD,Y,96)=$PIECE(YKALK,Y,12)   ;AUFSCHL2
	. . IF $PIECE(YKALK,Y,17)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,100)=$PIECE(YKALK,Y,17) SET $PIECE(YFELD,Y,100)=$PIECE(YKALK,Y,17)   ;PREISKZ2
	. ;
	. IF $PIECE(YKALK,Y,27)=1 DO  ;IMMER NEU BERECHNEN!  3.PREIS ;constantly recent 
	. . IF $PIECE(YKALK,Y,32)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,32),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF +$PIECE(YFELD,Y,47)'=0 FOR YI=108 IF $PIECE(YFELD,Y,YI)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)="",$PIECE(YFELD,Y,YI)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . IF $PIECE(YKALK,Y,13)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,106)=$PIECE(YKALK,Y,13) SET $PIECE(YFELD,Y,106)=$PIECE(YKALK,Y,13)   ;AUFSCHL3
	. . IF $PIECE(YKALK,Y,18)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,110)=$PIECE(YKALK,Y,18) SET $PIECE(YFELD,Y,110)=$PIECE(YKALK,Y,18)   ;PREISKZ3
	. ;
	. IF $PIECE(YKALK,Y,28)=1 DO  ;IMMER NEU BERECHNEN!  4.PREIS ;constantly recent 
	. . IF $PIECE(YKALK,Y,33)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,33),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF +$PIECE(YFELD,Y,47)'=0 FOR YI=118 IF $PIECE(YFELD,Y,YI)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)="",$PIECE(YFELD,Y,YI)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . IF $PIECE(YKALK,Y,14)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,116)=$PIECE(YKALK,Y,14) SET $PIECE(YFELD,Y,116)=$PIECE(YKALK,Y,14)   ;AUFSCHL4
	. . IF $PIECE(YKALK,Y,19)'="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,120)=$PIECE(YKALK,Y,19) SET $PIECE(YFELD,Y,120)=$PIECE(YKALK,Y,19)   ;PREISKZ4
	
	IF YKALK'="" DO
	. ;IF +$PIECE(YFELD,Y,86)=0 QUIT  ;SCHON EINMAL ÜBERTRAGEN
	. ;IF $PIECE(YFELD,Y,86)="" QUIT  ;SCHON EINMAL ÜBERTRAGEN;TYBD;10.06.2003
	. DO
	. . IF $PIECE(YKALK,Y,30)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,30),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF $PIECE(YFELD,Y,86)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,86)=$PIECE(YKALK,Y,11) SET $PIECE(YFELD,Y,86)=$PIECE(YKALK,Y,11)   ;AUFSCHL1
	. . IF $PIECE(YFELD,Y,90)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,90)=$PIECE(YKALK,Y,16) SET $PIECE(YFELD,Y,90)=$PIECE(YKALK,Y,16)   ;PREISKZ1
	. ;
	. DO
	. . IF $PIECE(YKALK,Y,31)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,31),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF $PIECE(YFELD,Y,96)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,96)=$PIECE(YKALK,Y,12) SET $PIECE(YFELD,Y,96)=$PIECE(YKALK,Y,12)   ;AUFSCHL2
	. . IF $PIECE(YFELD,Y,100)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,100)=$PIECE(YKALK,Y,17) SET $PIECE(YFELD,Y,100)=$PIECE(YKALK,Y,17)   ;PREISKZ2
	. ;
	. DO
	. . IF $PIECE(YKALK,Y,32)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,32),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF $PIECE(YFELD,Y,106)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,106)=$PIECE(YKALK,Y,13) SET $PIECE(YFELD,Y,106)=$PIECE(YKALK,Y,13)   ;AUFSCHL3
	. . IF $PIECE(YFELD,Y,110)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,110)=$PIECE(YKALK,Y,18) SET $PIECE(YFELD,Y,110)=$PIECE(YKALK,Y,18)   ;PREISKZ3
	. ;
	. DO
	. . IF $PIECE(YKALK,Y,33)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,33),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . IF $PIECE(YFELD,Y,116)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,116)=$PIECE(YKALK,Y,14) SET $PIECE(YFELD,Y,116)=$PIECE(YKALK,Y,14)   ;AUFSCHL4
	. . IF $PIECE(YFELD,Y,120)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,120)=$PIECE(YKALK,Y,19) SET $PIECE(YFELD,Y,120)=$PIECE(YKALK,Y,19)   ;PREISKZ4
	
	;PREISE UND AUFSCHLAG ;And overcharge 
	FOR YI=88,98,108,118 DO
	. ;
	. ;IF +$PIECE(YFELD,Y,YI-2)=0 IF $PIECE(YFELD,Y,YI-2)'=0 IF $PIECE(YFELD,Y,YI+2)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI-2)="" SET $PIECE(YFELD,Y,YI)="" SET $PIECE(YFELD,Y,YI-2)=""    ;EK=VK UND KEIN KENNZEICHEN ;TYBD;2,1,2005;And no characteristic 
	. IF +$PIECE(YFELD,Y,YI-2)=0!($PIECE(YFELD,Y,YI-2)=-100) IF $PIECE(YFELD,Y,YI+2)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)="" SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI-2)="" SET $PIECE(YFELD,Y,YI)="" SET $PIECE(YFELD,Y,YI-2)=""    ;EK=VK UND KEIN KENNZEICHEN ;TYBD;2,1,2005;And no characteristic 
	. ;
	. IF +$PIECE(YFELD,Y,YI)=0 IF +$PIECE(YFELD,Y,YI-2)=0 IF $PIECE(YFELD,Y,YI+2)="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,202)'=1 QUIT   ;TYBD;18.09.2003;KEIN AUFSCHLAG UND KEIN VK ;BEC;10.06.03;WEGEN AUFSCHLAG 0
	. IF $PIECE(YFELD,Y,YI)="" IF +$PIECE(YFELD,Y,YI-2)'=0 DO   ;tybd;18,09,2003; AUFSCHLAG UND KEIN VK  ;BEC;10.06.03;WEGEN AUFSCHLAG 
	. . ;
	. . SET YINHALT=$$^WWWZAHL($PIECE(YFELD,Y,YI-2),0,9)    ;AUFSCHLAG ;overcharge 
	. . SET YVAR=ARTIKEL
	. . DO ^INEKVK
	. . IF %TXT(1)'="" IF +$$^WWWTR(1,12,%TXT(1))'=0 SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)=$$^WWWTR(1,12,%TXT(1))  ;VK EINTRAGEN ;Sale 
	. ;
	. IF +$PIECE(YFELD,Y,YI)'=0 DO   ;AUFSCHLAG NACHRECHNEN ;overcharge 
	. . SET YINHALT=$$^WWWZAHL($PIECE(YFELD,Y,YI),0,2)   ;VK ;Sale 
	. . SET YVAR=ARTIKEL
	. . DO ^INVKEK
	. . IF %TXT(1)'="" IF +$$^WWWTR(1,12,%TXT(1))'=0  SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI-2)=$$^WWWTR(1,12,%TXT(1))
	. ;
	. IF $PIECE(YFELD,Y,YI+2)'="" IF $PIECE($GET(^INVORG(YM,YM,1)),Y,202)=1 do
	. . SET YINHALT=$$^WWWZAHL($PIECE(YFELD,Y,YI-2),0,9)    ;AUFSCHLAG ;overcharge 
	. . SET YVAR=ARTIKEL
	. . DO ^INEKVK
	. . IF %TXT(1)'="" IF +$$^WWWTR(1,12,%TXT(1))'=0 SET $PIECE(^INART(YM,ARTIKEL,1),Y,YI)=$$^WWWTR(1,12,%TXT(1))  ;VK EINTRAGEN ;Sale 
	
	QUIT
	
	
newHAUPT
	;-------------------------------------------------------------------------------
	;	KALKULATIONSVORGABEN AUS BETRIEBSDATEI SUCHEN ;out of seek 
	; 
	; ByRef:
	;	ARTIKEL			idItem
	;	YLOCATION		Site Location
	;	
	; 
	; History:
	; 26-Mar-2008	GRF		SRBR014901: Save parameters should be Key then Data
	; 05-Feb-2008	GRF		SR15627: Reformatted to use $$$Save
	;-------------------------------------------------------------------------------
	new blnSellAtCost,curProdCosts,curSalePrc,enumItemType,fltCalc,idDefaultGroup
	new objCalc,objItem,objParam,strPriceId,strStatus
	new BETR,WG
	
	set ARTIKEL = $get(ARTIKEL)
	set objItem = $get(^INART(YM,ARTIKEL,1))
	quit:objItem=""
	
	set enumItemType =  $$$INARTItemType(objItem)           ; D26
	set curProdCosts = +$$$INARTProductionCosts(objItem)    ; D47
	
	set objParam = $GET(^INVORG(YM,YM,1))
	set idDefaultGroup = $$$INVORGDefaultItemGroup(objParam)
	set blnSellAtCost  = $$$INVORGSaleCost(objParam)
	
	SET BETR = $GET(YLOCATION)
	IF BETR="" SET BETR = $ORDER(^INKALK(YM,""))
	IF BETR="" SET BETR = 1                         ; FIXME : Bad Default
	
	;WARENGRUPPE SUCHEN ;seek 
	SET WG=$PIECE(objItem,Y,30)
	IF WG="" DO
	. SET WG = idDefaultGroup
	. SET $PIECE(YFELD,Y,30) = WG  ;SETZEN STANDARDWARENGRUPPE IN ARTIKEL
	
	IF WG'="" IF '$DATA(^INKALK(YM,BETR,WG)) SET WG = idDefaultGroup   ;DFLT WARENGRUPPE = 1.
	
	
	; Calculation Rule Classes from Item or else from Group
	; Same structure so use INKALK property names
	set objCalc = ""
	
	if (ARTIKEL'="") && $data(^INKALKART(YM,BETR,ARTIKEL)) { 
		set objCalc = $get(^INKALKART(YM,BETR,ARTIKEL,1))
	}
	if (objCalc="") && (WG'="") {
		set objCalc = $get(^INKALK(YM,BETR,WG,1))
	}
	
	;--------------------------------------- Price 1
	
	set fltCalc    = $$$INARTCalculation(objItem)         ; D86
	set curSalePrc = $$$INARTSalesPrice(objItem)          ; D88
	set strPriceId = $$$INARTPriceIdentifier(objItem)     ; D90
	
	if objCalc '= "" {
		if (enumItemType="") || '$find($$$INKALKDoNotCalculateWhenItemTy(objCalc),enumItemType) { ; D30
			do CalcOverride(.fltCalc,.curSalePrc,.strPriceId,curProdCosts,
			            $$$INKALKMarkUpPrice1(objCalc),
			            $$$INKALKPriceIdentifier1(objCalc),
			            $$$INKALKCalculateSalesPriceAutom(objCalc))                               ; D11, D16, D25
		}
	}
	
	do Recalculate(ARTIKEL,.fltCalc,.curSalePrc,strPriceId,blnSellAtCost)
	
	set $$$INARTCalculation(objItem)     = fltCalc
	set $$$INARTSalesPrice(objItem)      = curSalePrc
	set $$$INARTPriceIdentifier(objItem) = strPriceId
	
	;--------------------------------------- Price 2
	
	set fltCalc    = $$$INARTCalculation1(objItem)         ; D96
	set curSalePrc = $$$INARTSalesPrice1(objItem)          ; D98
	set strPriceId = $$$INARTPriceIdentifier1(objItem)     ; D100
	
	if objCalc '= "" {
		; Price 2
		if (enumItemType="") || '$find($$$INKALKDoNotCalculateWhenItemTy1(objCalc),enumItemType) { ; D31
			do CalcOverride(.fltCalc,.curSalePrc,.strPriceId,curProdCosts,
			            $$$INKALKMarkUpPrice2(objCalc),
			            $$$INKALKPriceIdentifier2(objCalc),
			            $$$INKALKCalculateSalesPriceAutom1(objCalc))                               ; D12, D17, D26
		}
	}	
	
	do Recalculate(ARTIKEL,.fltCalc,.curSalePrc,strPriceId,blnSellAtCost)
	
	set $$$INARTCalculation1(objItem)     = fltCalc
	set $$$INARTSalesPrice1(objItem)      = curSalePrc
	set $$$INARTPriceIdentifier1(objItem) = strPriceId
	
	;--------------------------------------- Price 3
	
	set fltCalc    = $$$INARTCalculation2(objItem)         ; D106
	set curSalePrc = $$$INARTSalesPrice2(objItem)          ; D108
	set strPriceId = $$$INARTPriceIdentifier2(objItem)     ; D110
	
	if objCalc '= "" {
		if (enumItemType="") || '$find($$$INKALKDoNotCalculateWhenItemTy2(objCalc),enumItemType) { ; D32
			do CalcOverride(.fltCalc,.curSalePrc,.strPriceId,curProdCosts,
			            $$$INKALKMarkUpPrice3(objCalc),
			            $$$INKALKPriceIdentifier3(objCalc),
			            $$$INKALKCalculateSalesPriceAutom2(objCalc))                               ; D13, D18, D27
		}
	}
		
	do Recalculate(ARTIKEL,.fltCalc,.curSalePrc,strPriceId,blnSellAtCost)
	
	set $$$INARTCalculation2(objItem)     = fltCalc
	set $$$INARTSalesPrice2(objItem)      = curSalePrc
	set $$$INARTPriceIdentifier2(objItem) = strPriceId
	
	;--------------------------------------- Price 4
	
	set fltCalc    = $$$INARTCalculation3(objItem)         ; D116
	set curSalePrc = $$$INARTSalesPrice3(objItem)          ; D118
	set strPriceId = $$$INARTPriceIdentifier3(objItem)     ; D120
	
	if objCalc '= "" {
		if (enumItemType="") || '$find($$$INKALKDoNotCalculateWhenItemTy3(objCalc),enumItemType) { ; D33
			do CalcOverride(.fltCalc,.curSalePrc,.strPriceId,curProdCosts,
			            $$$INKALKMarkUpPrice4(objCalc),
			            $$$INKALKPriceIdentifier4(objCalc),
			            $$$INKALKCalculateSalesPriceAutom3(objCalc))                               ; D14, D19, D28
		}
	}
	
	do Recalculate(ARTIKEL,.fltCalc,.curSalePrc,strPriceId,blnSellAtCost)
	
	set $$$INARTCalculation3(objItem)     = fltCalc
	set $$$INARTSalesPrice3(objItem)      = curSalePrc
	set $$$INARTPriceIdentifier3(objItem) = strPriceId
	
	;---------------------------------------
	;set strStatus = $$$Save("INART",objItem,ARTIKEL,$$$YES) ; SRBR014901
	set strStatus = $$$Save("INART",ARTIKEL,objItem,$$$YES)
	
	
	quit
	
CalcOverride(&pfltCalc,&pcurSalePrc,&pstrPriceId,pcurProdCosts,pcurCalcMarkUp,pstrCalcPriceId,pblnAutomatic)  PRIVATE
	;-------------------------------------------------------------------------------
	;	Over-ride INART details with INKALK or INKALKART
	;
	; History:
	; 05-Feb-2008	GRF		SR15627: Extracted from earlier version
	;-------------------------------------------------------------------------------
	if pblnAutomatic  {
		if (pcurProdCosts'=0)  set pcurSalePrc = ""
		if pcurCalcMarkUp'=""  set pfltCalc    = pcurCalcMarkUp
		if pstrCalcPriceId'="" set pstrPriceId = pstrCalcPriceId
	}
	if pfltCalc=""    set pfltCalc    = pcurCalcMarkUp
	if pstrPriceId="" set pstrPriceId = pstrCalcPriceId
	
	quit
	
Recalculate(pidItem,&pfltCalc,&pcurSalePrc,pstrPriceId,pblnSellAtCost)  PRIVATE
	;-------------------------------------------------------------------------------
	;	Common update from INEKVK
	;
	; History:
	; 05-Feb-2008	GRF		SR15627: Extracted from earlier version
	;-------------------------------------------------------------------------------
	new curResult
	
	if (+pfltCalc=0) || (pfltCalc=-100) {
		if pstrPriceId="" {
			set pfltCalc    = ""
			set pcurSalePrc = ""
		}
	}
	if pcurSalePrc || pfltCalc || (pstrPriceId'="") || pblnSellAtCost {
		if (pcurSalePrc="") && (+pfltCalc'=0) {
			set curResult = $$CallINEKVK(pidItem,$$^WWWZAHL(pfltCalc,0,9))    ;AUFSCHLAG ;overcharge 
			if curResult set pcurSalePrc=curResult                            ;VK EINTRAGEN ;Sale 
		}
		if +pcurSalePrc'=0 {                                                  ;AUFSCHLAG NACHRECHNEN ;overcharge 
			set curResult = $$CallINEKVK(pidItem,$$^WWWZAHL(pcurSalePrc,0,2)) ;VK ;Sale 
			if curResult  set pfltCalc=curResult
		}
		if (pstrPriceId'="") && pblnSellAtCost {
			set curResult = $$CallINEKVK(pidItem,$$^WWWZAHL(pfltCalc,0,9))    ;AUFSCHLAG ;overcharge 
			if curResult set pcurSalePrc=curResult                            ;VK EINTRAGEN ;Sale 
		}
	}
	quit
	
	
CallINEKVK(YVAR,YINHALT)  PRIVATE
	;-------------------------------------------------------------------------------
	;  Wrapper to isolate variables used and returned by INEKVK
	;
	; History:
	; 05-Feb-2008	GRF		SR15627: Extracted from earlier version
	;-------------------------------------------------------------------------------
	do ^INEKVK
	quit $$^WWWTR(1,12,%TXT(1))
	
	
NEBEN
	;KALKULATIONSVORGABEN AUS ARTIKEL-BETRIEBSDATEI SUCHEN ;out of seek 
	NEW YFELD
	
	SET BETR=""
	FOR  SET BETR=$ORDER(^INARTPREIS(YM,ARTIKEL,BETR)) QUIT:BETR=""  DO
	. ;
	. SET YFELD=$GET(^INART(YM,ARTIKEL,1))
	. QUIT:YFELD=""
	. ;
	. ;WARENGRUPPE SUCHEN ;seek 
	. SET WG=$PIECE(YFELD,Y,30)
	. IF WG="" DO
	. . SET WG=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)
	. . SET $PIECE(YFELD,Y,30)=WG  ;SETZEN STANDARDWARENGRUPPE IN ARTIKEL ;typeset within item 
	. ;
	. IF WG'="" IF '$DATA(^INKALK(YM,BETR,WG)) SET WG=$PIECE($GET(^INVORG(YM,YM,1)),Y,13)   ;DFLT WARENGRUPPE = 1.
	. ;
	. SET YKALK=""  ;YKALK NACH WARENGRUPPE ;within 
	. IF BETR'="" IF WG'="" DO 
	. . SET YKALK=$GET(^INKALK(YM,BETR,WG,1))
	. ;
	. IF BETR'="" IF ARTIKEL'="" IF $DATA(^INKALKART(YM,BETR,ARTIKEL)) DO  ;YKALK NACH ARTIKEL ;within item 
	. . SET YKALK=$GET(^INKALKART(YM,BETR,ARTIKEL,1))
	. ;
	. IF YKALK'="" DO  ;VORGABEN ÜBERTRAGEN ;transport 
	. . IF $PIECE(YKALK,Y,25)=1 DO  ;IMMER NEU BERECHNEN!  1.PREIS ;constantly recent 
	. . . IF $PIECE(YKALK,Y,30)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,30),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF +$PIECE(YFELD,Y,47)'=0 IF $PIECE(YFELD,Y,88)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,1)="",$PIECE(YFELD,Y,88)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . . IF $PIECE(YKALK,Y,11)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,3)=$PIECE(YKALK,Y,11) SET $PIECE(YFELD,Y,86)=$PIECE(YKALK,Y,11)   ;AUFSCHL1
	. . . IF $PIECE(YKALK,Y,16)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,2)=$PIECE(YKALK,Y,16) SET $PIECE(YFELD,Y,90)=$PIECE(YKALK,Y,16)   ;PREISKZ1
	. . ;
	. . IF $PIECE(YKALK,Y,26)=1 DO  ;IMMER NEU BERECHNEN!  2.PREIS ;constantly recent 
	. . . IF $PIECE(YKALK,Y,31)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,31),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF +$PIECE(YFELD,Y,47)'=0 IF $PIECE(YFELD,Y,98)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,11)="",$PIECE(YFELD,Y,98)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . . IF $PIECE(YKALK,Y,12)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,13)=$PIECE(YKALK,Y,12) SET $PIECE(YFELD,Y,96)=$PIECE(YKALK,Y,12)   ;AUFSCHL2
	. . . IF $PIECE(YKALK,Y,17)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,12)=$PIECE(YKALK,Y,17) SET $PIECE(YFELD,Y,100)=$PIECE(YKALK,Y,17)   ;PREISKZ2
	. . ;
	. . IF $PIECE(YKALK,Y,27)=1 DO  ;IMMER NEU BERECHNEN!  3.PREIS ;constantly recent 
	. . . IF $PIECE(YKALK,Y,32)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,32),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF +$PIECE(YFELD,Y,47)'=0 IF $PIECE(YFELD,Y,108)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,21)="",$PIECE(YFELD,Y,108)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . . IF $PIECE(YKALK,Y,13)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,23)=$PIECE(YKALK,Y,13) SET $PIECE(YFELD,Y,106)=$PIECE(YKALK,Y,13)   ;AUFSCHL3
	. . . IF $PIECE(YKALK,Y,18)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,22)=$PIECE(YKALK,Y,18) SET $PIECE(YFELD,Y,110)=$PIECE(YKALK,Y,18)   ;PREISKZ3
	. . ;
	. . IF $PIECE(YKALK,Y,28)=1 DO  ;IMMER NEU BERECHNEN!  4.PREIS ;constantly recent 
	. . . IF $PIECE(YKALK,Y,33)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,33),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF +$PIECE(YFELD,Y,47)'=0 IF $PIECE(YFELD,Y,118)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,31)="",$PIECE(YFELD,Y,118)=""   ;PREIS LÖSCHEN DANN NEU ;prize Delete recent 
	. . . IF $PIECE(YKALK,Y,14)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,33)=$PIECE(YKALK,Y,14) SET $PIECE(YFELD,Y,116)=$PIECE(YKALK,Y,14)   ;AUFSCHL4
	. . . IF $PIECE(YKALK,Y,19)'="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,32)=$PIECE(YKALK,Y,19) SET $PIECE(YFELD,Y,120)=$PIECE(YKALK,Y,19)   ;PREISKZ4
	. ;
	. IF YKALK'="" DO
	. . ;IF +$PIECE(YFELD,Y,86)'=0 QUIT  ;SCHON EINMAL ÜBERTRAGEN
	. . IF $PIECE(YFELD,Y,86)'="" QUIT  ;SCHON EINMAL ÜBERTRAGEN;TYBD;6.2003 ;yet sometimes transport 
	. . DO
	. . . IF $PIECE(YKALK,Y,30)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,30),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF $PIECE(YFELD,Y,86)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,3)=$PIECE(YKALK,Y,11) SET $PIECE(YFELD,Y,86)=$PIECE(YKALK,Y,11)   ;AUFSCHL1
	. . . IF $PIECE(YFELD,Y,90)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,2)=$PIECE(YKALK,Y,16) SET $PIECE(YFELD,Y,90)=$PIECE(YKALK,Y,16)   ;PREISKZ1
	. . ;
	. . DO
	. . . IF $PIECE(YKALK,Y,31)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,31),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF $PIECE(YFELD,Y,96)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,13)=$PIECE(YKALK,Y,12) SET $PIECE(YFELD,Y,96)=$PIECE(YKALK,Y,12)   ;AUFSCHL2
	. . . IF $PIECE(YFELD,Y,100)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,12)=$PIECE(YKALK,Y,17) SET $PIECE(YFELD,Y,100)=$PIECE(YKALK,Y,17)   ;PREISKZ2
	. . ;
	. . DO
	. . . IF $PIECE(YKALK,Y,32)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,32),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF $PIECE(YFELD,Y,106)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,23)=$PIECE(YKALK,Y,13) SET $PIECE(YFELD,Y,106)=$PIECE(YKALK,Y,13)   ;AUFSCHL3
	. . . IF $PIECE(YFELD,Y,110)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,22)=$PIECE(YKALK,Y,18) SET $PIECE(YFELD,Y,110)=$PIECE(YKALK,Y,18)   ;PREISKZ3
	. . ;
	. . DO
	. . . IF $PIECE(YKALK,Y,33)'="" IF $PIECE(YFELD,Y,26)'="" QUIT:$FIND($PIECE(YKALK,Y,33),$PIECE(YFELD,Y,26))   ;AUSSNAHMEN DER UEBERGABE = NICHT ANZEIGEN ;the Not display 
	. . . IF $PIECE(YFELD,Y,116)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,33)=$PIECE(YKALK,Y,14) SET $PIECE(YFELD,Y,116)=$PIECE(YKALK,Y,14)   ;AUFSCHL4
	. . . IF $PIECE(YFELD,Y,120)="" SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,32)=$PIECE(YKALK,Y,19) SET $PIECE(YFELD,Y,120)=$PIECE(YKALK,Y,19)   ;PREISKZ4
	. ;
	. ;PREISE UND AUFSCHLAG ;And overcharge 
	. FOR YI=88,98,108,118 DO
	. . ;
	. . IF +$PIECE(YFELD,Y,YI)=0 IF +$PIECE(YFELD,Y,YI-2)=0 QUIT   ;KEIN AUFSCHLAG UND KEIN VK ;no overcharge And no Sale 
	. . IF +$PIECE(YFELD,Y,YI)=0 IF +$PIECE(YFELD,Y,YI-2)'=0 DO   ;AUFSCHLAG UND KEIN VK ;overcharge And no Sale 
	. . . SET YINHALT=$$^WWWZAHL($PIECE(YFELD,Y,YI-2),0,9)    ;AUFSCHLAG ;overcharge 
	. . . SET YVAR=ARTIKEL
	. . . DO ^INEKVK
	. . . IF %TXT(1)'="" IF +$$^WWWTR(1,12,%TXT(1))'=0 SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,YI-87)=$$^WWWTR(1,12,%TXT(1))  ;VK EINTRAGEN ;Sale 
	. . ;
	. . IF +$PIECE(YFELD,Y,YI)'=0 DO   ;AUFSCHLAG NACHRECHNEN ;overcharge 
	. . . SET YINHALT=$$^WWWZAHL($PIECE(YFELD,Y,YI),0,2)   ;VK ;Sale 
	. . . SET YVAR=ARTIKEL
	. . . DO ^INVKEK
	. . . IF %TXT(1)'="" IF +$$^WWWTR(1,12,%TXT(1))'=0  SET $PIECE(^INARTPREIS(YM,ARTIKEL,BETR,1),Y,YI-85)=$$^WWWTR(1,12,%TXT(1))
	
	QUIT
	
]]></Routine>
</Export>