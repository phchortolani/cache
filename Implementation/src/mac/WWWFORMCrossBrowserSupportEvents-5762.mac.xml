<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWFORMCrossBrowserSupportEvents" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
WWWFORMCrossBrowserSupportEvents

Setup()
	;-------------------------------------------------------------------------------
	; Code broken out of WWWFORMCrossBrowserSupport
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 27-Sep-2011	shobby		SR17853: Created
	;-------------------------------------------------------------------------------
	&js<
		HTMLElement.prototype.fireEvent = function (peventName,pParam1) {  //SR17448
			peventName=peventName.toLowerCase();
			var eventType='unknown';
			switch (peventName) {
				case 'onclick'    : eventType= 'MouseEvent'; break;
				case 'ondragstart': eventType= 'MouseEvent'; break;
				case 'onkeyup'    : eventType= 'KeyboardEvent'; break;
				case 'onkeydown'  : eventType= 'KeyboardEvent'; break;  //SR17449
				case 'onkeypress' : eventType= 'KeyboardEvent'; break;  //SR17449
				case 'onblur'     : eventType= 'HTMLEvents'; break;
				case 'onfocusout' : eventType= 'HTMLEvents'; break;   //Valid ???
				case 'onchange'   : eventType= 'HTMLEvents'; break;
				default: result = 'unknown';
			}
			peventName=peventName.replace(/on/, "");
			var evt = document.createEvent(eventType);
			
			if (eventType=='KeyboardEvent') {
				var type       = peventName;
				var bubbles    = true;
				var cancelable = true;
				var view       = null;
				var ctrlKey    = 0;
				var altKey     = 0;
				var shiftKey   = 0;
				var metaKey    = 0;
				var keyCode    = pParam1;
				var charCode   = 0;
				evt.initKeyEvent(type,bubbles,cancelable,view,ctrlKey,altKey,shiftKey,metaKey,keyCode,charCode)
	  			//evt.initKeyEvent(peventName,true,true,window,0,0,0,0,0,false,false,false,false,0,,null);
			} else if (eventType=='MouseEvent') {
	  			evt.initMouseEvent(peventName, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			} else if (eventType=='HTMLEvents') {
	  			evt.initEvent(peventName, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			} else {
				alert('event '+peventName+' not known. Add to "HTMLElement.prototype.fireEvent" in WWWFORMCrossBrowserSupport.');
			}
 			var canceled = !this.dispatchEvent(evt);
  			return canceled;
		};
		
		//attachEvent
		var Capture;
		
		window.attachEvent= function (sType, fHandler) {  //SR17430
			var shortTypeName = sType.replace(/on/, "");
		//	window.addEventListener(shortTypeName, fHandler._ieEmuEventHandler, false);
			window.addEventListener(shortTypeName, fHandler, false);
		}
		window.detachEvent= function (sType, fHandler) {  //SR17430
			var shortTypeName = sType.replace(/on/, "");
			if (typeof fHandler._ieEmuEventHandler == "function") {
				window.removeEventListener(shortTypeName, fHandler._ieEmuEventHandler, false);
			} else {   // we can always try :-)
				window.removeEventListener(shortTypeName, fHandler, true);
			}
		}
		HTMLDocument.prototype.attachEvent =
		HTMLElement.prototype.attachEvent = function (sType, fHandler) {
			var shortTypeName = sType.replace(/on/, "");
			var blnQuit=false;
			fHandler._ieEmuEventHandler = function (e) {
				window.event = e;
				return fHandler();
			};
			if (shortTypeName=='losecapture') {
				shortTypeName='blur';
				var obj=document;
			} else if (shortTypeName=='resize') {
				//SR17362
				var strFunction=String(fHandler);
				if (strFunction.indexOf('function ()')==-1) {    //SR17430
					cvResizeFunction[this.id]=strFunction		//SR17430
				} else {
					cvResizeFunction[this.id]=String(fHandler).split('{')[1].split('}')[0];
				}
				window.setTimeout('simulatedonresize('+this.id+');',1);
				blnQuit=true;
			} else {
				var obj=Capture? document:this;
			}
				if (!blnQuit) obj.addEventListener(shortTypeName, fHandler._ieEmuEventHandler, false);
		};
		
		//detachEvent
		Window.prototype.detachEvent=
		HTMLDocument.prototype.detachEvent =
		HTMLElement.prototype.detachEvent = function (sType, fHandler) {
			var shortTypeName = sType.replace(/on/, "");
			var blnQuit=false;
			
			if (shortTypeName=='losecapture') {
				shortTypeName='blur';
				var obj=document;
			} else if (shortTypeName=='resize') {
				//SR17362
				cvResizeFunction[this.id]=null;
				blnQuit=true;
			} else {
				var obj=Capture? document:this;
			}
			
			if (!blnQuit && typeof fHandler._ieEmuEventHandler == "function") {
				obj.removeEventListener(shortTypeName, fHandler._ieEmuEventHandler, false);
			} else {   // we can always try :-)
				obj.removeEventListener(shortTypeName, fHandler, true);
			}
		};
		//setCapture
		HTMLDocument.prototype.setCapture =
		HTMLElement.prototype.setCapture = function () {
			Capture=true;
		};
		//releaseCapture
		HTMLDocument.prototype.releaseCapture =
		HTMLElement.prototype.releaseCapture = function () {
			Capture=false;
		};
	>
	quit
]]></Routine>
</Export>