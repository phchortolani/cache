<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="COMClientData" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
COMClientData ; Copy Client Data (Cache.dat) 
#define OK 1
Send()
	
	;-------------------------------------------------------------------------------
	; Copy, Compress and Send Cache.dat
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 28-Jan-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new sc,arrFiles
	
	do ^WWWVAR
	set sc=$$$OK
	set $zt="Error"
	set sc=$$CopyFile(.arrFiles) ; Step 1 Copy Cache.dat
	quit	

Error ;
	;-------------------------------------------------------------------------------
	; Error Trap
	;
	; Params: 
	;
	; Returns: Nothing
	;
	; History:
	; 02-Feb-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new sc,strNS
	set $zt=""
	set sc="0:Error "_$ze
	w !,"Error ",$ze,!
	if $data(blnThawReq)=$$$OK {
		set strNS=$znspace ; Keep currect name space
		zn "%sys"
		do ##class(Backup.General).ExternalThaw(strPath_"Copy2ftp.txt")
		set blnThawReq='$$$OK
		zn strNS
	}

	if $data(strAuditFile) {
		do Log(sc,strAuditFile,"Error")
	}
	quit

CopyFile(&parrFiles)
	;-------------------------------------------------------------------------------
	; Copy Cache.dat 
	;
	; Params: 
	;
	; Returns: status , array files by ref
	;
	; History:
	; 28-Jan-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new strNS,sc,strPath,strFile,strNewFile,blnThawReq,strCompCode,strCompStr,strAuditFile
	new strDate,strSendFile
	
	set $zt="Error"
	set strNS=$znspace ; Keep currect name space
	set blnThawReq='$$$OK
	set sc=$$$OK
	set strCompCode=$get(^SysSetup("ClientData","CompStr"))
	; Command line compress string. Set based on compression software loaded on server
	; replacement strings:
	;  %f% file to be compressed
	;  %n% file name without extentsion
	;  %d% date
	; Example "c:\Program Files\7-Zip\7z.exe" a -t7z %n%.7z %f%"
	set strSendFile=$get(^SysSetup("ClientData","SendFile"))
	; file name to send via ftp, typically the compressed file
	; replacement strings:
	;  %f% file to be compressed
	;  %n% file name without extentsion
	;  %d% date
	; Example "%n%.7z"
	
	
	if sc=$$$OK {
		set strFile=$zsearch("cache.dat")
		if strFile="" {
			set sc="0:can not find cache.dat"
			;do Log(sc,strAuditFile)
		}
	}
	if sc=$$$OK {
		set strPath=$piece($zcvt(strFile,"l"),"cache.dat")
		if strPath="" {
			set sc="0:No path found for Cache.dat"
			;do Log(sc,strAuditFile)
		}
		write !,strPath,!
	}
	if sc=$$$OK {
		set strAuditFile=strPath_"Copy2ftp.txt"
		do $zutil(140,5,strAuditFile)
	}
	if sc=$$$OK {
		set sc=$$Log("Client Copy process Started",strAuditFile,"Copy Started")
	}
	if sc=$$$OK {
		if strCompCode="" {
			set sc="0:No Command line for compression in ^SysSetup(""ClientData"",""CompStr"")"
			do Log(sc,strAuditFile)
		}
	}

	if sc=$$$OK {
		if strSendFile="" {
			set sc="0:No Send File in ^SysSetup(""ClientData"",""SendFile"")"
			do Log(sc,strAuditFile)
		}
	}

	if sc=$$$OK {
		zn "%sys"
		set sc=##class(Backup.General).ExternalFreeze(strPath_"Copy2ftp.txt",,,,,1)
		set blnThawReq=sc
		zn strNS
	}
	if sc=$$$OK {
		set strDate=$zd(+$h,3)
		set strNewFile="cache"_strDate_".dat"
	}
	if sc=$$$OK {
		set sc=$$Copy(strFile,strNewFile,strAuditFile)
	}
	if blnThawReq=$$$OK {
		zn "%sys"
		do ##class(Backup.General).ExternalThaw(strPath_"Copy2ftp.txt")
		set blnThawReq='$$$OK
	}
	zn strNS
	if sc=$$$OK {
		set sc=$$Compress(strNewFile,strCompCode,strDate,strAuditFile)
	}
	if sc=$$$OK {
		set strSendFile=$$Convert(strSendFile,strNewFile,strDate)
		set sc=$$SendFile(strSendFile,strPath,strAuditFile)
	}
	if sc=$$$OK {
		set sc='$zutil(140,5,strSendFile)
		do Log("Delete File "_strSendFile_" Status="_sc,strAuditFile,"Finished")
	}
	if (sc'=$$$OK) && ($get(strAuditFile)'="") {
		do Log("Error Status="_sc,strAuditFile,"Error")
		
	}
	quit sc

Convert(pstrCode,pstrFile,pstrDate)
	;-------------------------------------------------------------------------------
	; Convert %f%, %n%, %d%
	;
	; Params:
	;	pstrCode 		Code to convert
	;	pstrFile 		File Name
	;	pstrDate		Date & Time String
	;
	; Returns: Converted Text
	;
	; History:
	; 28-Jan-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new strFileName

	set $zt="Error"
	set strFileName=$piece(pstrFile,".",1)
	for  {
		quit:pstrCode'["%f%"
		set pstrCode=$piece(pstrCode,"%f%",1)_pstrFile_$piece(pstrCode,"%f%",2,99)
	}
	for  {
		quit:pstrCode'["%n%"
		set pstrCode=$piece(pstrCode,"%n%",1)_strFileName_$piece(pstrCode,"%n%",2,99)
	}
	for  {
		quit:pstrCode'["%d%"
		set pstrCode=$piece(pstrCode,"%d%",1)_pstrDate_$piece(pstrCode,"%d%",2,99)
	}
	
	quit pstrCode
	

SendFile(pstrFile,pstrPath,pstrAuditFile)
	;-------------------------------------------------------------------------------
	; Copy, Compress and Send Cache.dat
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 28-Jan-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new objFTP,objStream,strRemoteDir,strFTPServer,strUser,strPassWord,sc
	
	set $zt="Error"
	set sc				=$$$OK
	set strFTPServer	=$get(^SysSetup("ClientData","FTPServer")) 	; FTP Server IE. www.disclinc.com
	set strUser			=$get(^SysSetup("ClientData","User"))		; FTP User Name IE. disclinc
	set strPassWord		=$get(^SysSetup("ClientData","Password"))	; FTP Password
	set strRemoteDir	=$get(^SysSetup("ClientData","RemoteDir"))  ; FTP Remote Directory for the client
	
	if sc=$$$OK {
		if strFTPServer="" {
			set sc="0:No FTP Server in ^SysSetup(""ClientData"",""FTPServer"")"
			do Log(sc,strAuditFile)
		}
	}

	if sc=$$$OK {
		if strUser="" {
			set sc="0:No FTP User in ^SysSetup(""ClientData"",""User"")"
			do Log(sc,strAuditFile)
		}
	}

	if sc=$$$OK {
		if strPassWord="" {
			set sc="0:No FTP Password in ^SysSetup(""ClientData"",""Password"")"
			do Log(sc,strAuditFile)
		}
	}

	if sc=$$$OK {
		if strRemoteDir="" {
			set sc="0:No FTP Remote Directoty in ^SysSetup(""ClientData"",""RemoteDir"")"
			do Log(sc,strAuditFile)
		}
	}
	if sc=$$$OK {
		set objFTP=##class(%Net.FtpSession).%New()
	    set sc=objFTP.Connect(strFTPServer,strUser,strPassWord,21)
	    do Log("Connecting to Server "_strFTPServer_" User "_strUser_" Status "_sc,pstrAuditFile)
	}
	if sc=$$$OK {
		set sc=objFTP.Binary()
	}
	if sc=$$$OK {
	
		set objStream=##class(%FileBinaryStream).%New()
		set pstrPath=pstrPath_pstrFile
		set sc=objStream.LinkToFile(pstrPath)
		do Log("Linking File "_pstrPath_" to Stream Status "_sc,pstrAuditFile)
	}
	if sc=$$$OK {	
		set sc=objFTP.SetDirectory(strRemoteDir)
		do Log("Setting Remote Directory to "_strRemoteDir_" Status "_sc,pstrAuditFile)
		do Log("Send File size of "_pstrFile_"="_$fn($zutil(140,1,pstrPath),","),pstrAuditFile,"FTP Start")
	}
	if sc=$$$OK {	
		set sc=objFTP.Store(pstrFile,objStream)
		do Log("File "_pstrFile_" Sent Status "_sc,pstrAuditFile)
	}
	quit sc



Compress(pstrFile,pstrCompCode,pstrDate,pstrAuditFile)
	;-------------------------------------------------------------------------------
	; Copy File
	;
	; Params:
	;	pstrFile 		File to compress
	;	pstrCompCode 	Compress command
	;	pstrDate		Date & Time String
	;   pstrAuditFile	Audit file
	;
	; Returns: status
	;
	; History:
	; 28-Jan-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new sc,strFileName

	set $zt="Error"
	set sc=$$$OK
	set pstrCompCode=$$Convert(pstrCompCode,pstrFile,pstrDate)
	do Log("Compress file "_pstrFile_" with command "_pstrCompCode,pstrAuditFile,"Compressing")
	set sc='$zf(-1,pstrCompCode)
	do Log("Compress file Complete, Status:"_sc,pstrAuditFile)
	if sc=$$$OK {
		set sc='$zutil(140,5,pstrFile)
		do Log("Delete File "_pstrFile_" Status="_sc,pstrAuditFile)
	}
	quit sc	

Copy(pstrFile,pstrNewFile,pstrAuditFile)
	;-------------------------------------------------------------------------------
	; Copy File
	;
	; Params:
	;	pstrFile 		File to copy
	;	pstrNewFile 	NewFile
	;   pstrAuditFile	Audit file
	;
	; Returns: status
	;
	; History:
	; 28-Jan-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new sc

	set $zt="Error"
	set sc=$$$OK
	do Log("Copy file from "_pstrFile_" to "_pstrNewFile,pstrAuditFile)
	do Log("File size of "_pstrFile_"="_$fn($zutil(140,1,pstrFile),","),pstrAuditFile)
		set sc='$zutil(140,11,pstrFile,pstrNewFile)
	do Log("Copy file Complete Status="_sc,pstrAuditFile)
	do Log("File size of "_pstrNewFile_"="_$fn($zutil(140,1,pstrNewFile),","),pstrAuditFile)
	quit sc

Log(pstrMessage,pstrFile,pstrEmailPoint="")
	;-------------------------------------------------------------------------------
	; Add Message to Logfile & Send Email at Certain Points
	;
	; Params: 	Message 
	;			&File
	;			Email Point, 
	;
	; Returns: status , array files by ref
	;
	; History:
	; 28-Jan-2011	SCR		SR17654: Created
	;-------------------------------------------------------------------------------
	new sc,strCurrentIO,strEmail,arrMessLine,intMessLine,strClinet,intEmail
	set sc=$$$OK
	set strCurrentIO=$io
	open pstrFile:("wa")
	use pstrFile
	write $zdt($h,1)_": "_pstrMessage,!
	if pstrEmailPoint="Error" { ; If error write out all variables
		write
	}
	use strCurrentIO
	close pstrFile
	write $zdt($h,1)_": "_pstrMessage,!
	if pstrEmailPoint'="" {
		if $data(^SysSetup("ClientData","EmailPoint",pstrEmailPoint)) {
			set strEmail=$get(^SysSetup("ClientData","Email"))
			set strEmail=$translate(strEmail,";:",",,")
			if strEmail'="" {
				set strClinet=$piece($get(^WWW012(0,0,1)),Y,1)_" ("_$zu(110)_"/"_$znspace_") "
				set intMessLine=1
				set arrMessLine(intMessLine)="#attach"_pstrFile
				set arrMessLine($i(intMessLine))="This Email is a Log of the client data copy process."
				set arrMessLine($i(intMessLine))="It is generated via the COMClientData routine."
				set arrMessLine($i(intMessLine))="Server Name = "_$zu(110)
				set arrMessLine($i(intMessLine))="Namespace = "_$znspace
				for intEmail=1:1:$length(strEmail,",") {
					if $piece(strEmail,",",intEmail)'="" {
						do SendEmail^COMUtilMail($piece(strEmail,",",intEmail),"Client Data Copy","Client Copy - "_strClinet_" - "_pstrEmailPoint,.arrMessLine)
					}
				}
				

			}
		}

	}
	quit sc
	
]]></Routine>
</Export>