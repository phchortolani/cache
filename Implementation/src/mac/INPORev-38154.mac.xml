<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPORev" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPORev
	
#include COMSYS
#include INConst
#include COMConst
	
SaveRevisedData()
	;-------------------------------------------------------------------------------
	; Saves the whole Purchase Order details in the Revision global whith a new 
	; Revision Number
	; 
	; Params:
	;
	; Returns:
	;
	; History:
	; 31-Dec-2008	Vijay	Created
	;-------------------------------------------------------------------------------
	new idDO,idDOLine,idPO,intIndex,intLineSeqNum,intRevNum,strKEY,strStatus
	new arrMsg,objDiscount,objDO,objDOLine,objPO
	
	do ^WWWBACK
	//do ^WWWLISTKOPF
	
	set idPO=$$$Index(YKEY)
	quit:idPO=""
	
	set objPO=$get(^INPO(YM,idPO,1))
	set intRevNum=$order(^INPORev(YM,idPO,""),-1)+1
	set strKEY=idPO_","_intRevNum_",INPO,"_idPO
	set strStatus=$$$Save("INPORev",strKEY,objPO)
	set idDO=""
	for {
		set idDO=$order(^INPOs(YM,2,idPO,idDO))
		quit:idDO=""
		
		set objDO=$get(^INPO(YM,idDO,1))
		set strKEY=idPO_","_intRevNum_",INPO,"_idDO
		set strStatus=$$$Save("INPORev",strKEY,objDO)
		set idDOLine=""
		for {
			set idDOLine=$order(^INPOLine(YM,idDO,idDOLine))
			quit:idDOLine=""
			
			set objDOLine=$get(^INPOLine(YM,idDO,idDOLine,1))
			
			set strKEY=idPO_","_intRevNum_",INPOLine,"_idDO_":"_idDOLine
			set strStatus=$$$Save("INPORev",strKEY,objDOLine)
		}
	}
	set intLineSeqNum = ""
	for {
		set intLineSeqNum = $order(^INPODiscount(YM,YKEY,intLineSeqNum))
		quit:intLineSeqNum=""
		
		set objDiscount = $get(^INPODiscount(YM,idPO,intLineSeqNum,1))
		set strKEY=idPO_","_intRevNum_",INPODiscount,"_idPO_":"_intLineSeqNum
		set strStatus=$$$Save("INPORev",strKEY,objDiscount)
	}
	
	
	if (intRevNum-1'=0) {
		do Compare(YKEY,intRevNum-1,intRevNum,.arrMsg)
	}
	
	do START100^WWWTAB
	do NL^WWWTAB
	do NH^WWWTAB
	WRITE "<FONT SIZE=3>"
	write "List of Changes Made in Current Revision"
	do EH^WWWTAB
 
	set intIndex = ""
	for {
		set intIndex=$order(arrMsg(intIndex))
		quit:intIndex=""
		
		do NL^WWWTAB
		do NF1^WWWTAB
		write arrMsg(intIndex)
	    do EF^WWWTAB
		do EL^WWWTAB
	}
	do STOP^WWWTAB
 	quit
	
	
Compare(idPO,pintOldRevNum,pintNewRevNum,&arrMsg)
	;-------------------------------------------------------------------------------
	; Compares the two revisions of a Particular Purchase Order and returns the diffrences
	; as messages to an array passed by reference
	; 
	; Params:
	; idPO = Purchase Order Number
	; pintOldRevNum = Old Revision number
	; pintNewRevNum = new Revision number
	; arrMsg = array in which messages relating to all the changes done to the purchase order 
	;          are returned(Passes by Reference)
	; 
	; Returns:
	;
	; History:
	; 03-Jan-2009	Vijay	Created
	;-------------------------------------------------------------------------------
	new intCount,intDataItemNum,strNewPKey,strOldPKey,strRevClass
	new objDataItem,objNewRev,objOldRev
	
	set intCount=1
	set strRevClass=""
	for {
		//Retrieving the Name of the changed Class from the new Revision
		set strRevClass=$order(^INPORev(YM,idPO,pintNewRevNum,strRevClass))
		quit:strRevClass=""
		set strOldPKey=""
		set strOldPKey=$order(^INPORev(YM,idPO,pintOldRevNum,strRevClass,strOldPKey))
		// check if any row for the class from new revision is present in the old revision
		
		if (strOldPKey="") {  // if the class is new to the current revision
			set strNewPKey=""
			for {
				set strNewPKey=$order(^INPORev(YM,idPO,pintNewRevNum,strRevClass,strNewPKey))
				quit:strNewPKey=""
				
				set objNewRev=$get(^INPORev(YM,idPO,pintNewRevNum,strRevClass,strNewPKey,1))
				set arrMsg(intCount)="Add "_strRevClass_" "_strNewPKey_" "_objNewRev
				set intCount=intCount+1
			}
		
		} else {   //if some rows are present in the old revision check for Mdifications and further Additions
			set strNewPKey=""
			for {
				set strNewPKey=$order(^INPORev(YM,idPO,pintNewRevNum,strRevClass,strNewPKey))
				quit:strNewPKey=""
				
				set objOldRev=$get(^INPORev(YM,idPO,pintOldRevNum,strRevClass,strNewPKey,1))
				if (objOldRev'="") {
					set objNewRev=$get(^INPORev(YM,idPO,pintNewRevNum,strRevClass,strNewPKey,1))
					set intDataItemNum=""
					for {  //Loop for all the Data items in the class and check whether it is changed or not
						set intDataItemNum=$order(^WWW003(YM,strRevClass,intDataItemNum))
						quit:intDataItemNum=""
						
						if (($piece(objNewRev,Y,intDataItemNum))'=($piece(objOldRev,Y,intDataItemNum))) {
							set objDataItem=$get(^WWW003(YM,strRevClass,intDataItemNum,1))
							set arrMsg(intCount)="Changed "_strRevClass_" "_strNewPKey_" "_$$$WWW003PropertyDescription(objDataItem)_" From "_($piece(objOldRev,Y,intDataItemNum))_" To "_($piece(objNewRev,Y,intDataItemNum))
							set intCount=intCount+1
						}
					}
					
				} else {
					set objNewRev=$get(^INPORev(YM,idPO,pintNewRevNum,strRevClass,strNewPKey,1))
					set arrMsg(intCount)="Add "_strRevClass_" "_strNewPKey_" "_objNewRev
					set intCount=intCount+1
				}
				
			}
 
		}
		set strOldPKey=""
		//Loops for all the records of Old Revision and cheks whether there is a corresponding row 
		//in the New revision or not. If not there then declares the record as deleted
		for {  		
			set strOldPKey=$order(^INPORev(YM,idPO,pintOldRevNum,strRevClass,strOldPKey))
			quit:strOldPKey=""
			
			set objNewRev=$get(^INPORev(YM,idPO,pintNewRevNum,strRevClass,strOldPKey,1))
			if (objNewRev="") {
				set objOldRev = $get(^INPORev(YM,idPO,pintOldRevNum,strRevClass,strOldPKey,1))
				set arrMsg(intCount)="Deleted "_strRevClass_" "_strOldPKey_" "_objOldRev
				set intCount=intCount+1
			}
		}
	}
	quit
	
]]></Routine>
</Export>