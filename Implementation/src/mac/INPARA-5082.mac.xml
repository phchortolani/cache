<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INPARA" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INPARA
	
#include WWWConst
#include INConst
#include COMSYS
	
OnBeforeDelete(YKEY="")
	;-------------------------------------------------------------------------------
	; Code to run before deleting a parameter.
	;
	; Called By : Class INPARA - Class Hook : On Before Delete
	; 
	; Params:
	;
	; Returns:
	;		strStatus:Message to display
	;		
	; History:
	; 11-Oct-2006	shobby	SRBR014207: Alert disabled.  Changes in routine WWWKILL
	; 							for BR015098 have overtaken this.  Return as a
	; 							status message here and let BR015098 handle the
	; 							display of the message.
	; 10-Oct-2006	shobby	SRBR014207: Changed to an alert.
	; 20-Aug-2006	shobby	SRBR014207: Created
	;-------------------------------------------------------------------------------
	new strResult,strStatus
	
	set strStatus = $$$OK
	
	if '$$$NoKey(YKEY) {
		set strResult = $$Check(YKEY)
		if strResult'="" {		
			set Q         = $$$QDontDelete
			set strStatus = $$$MakeStatus("IN00523",YKEY,strResult)
			;$$$Alert(strStatus)  ;Cannot delete the Total line
		} ; "Parameter '%1' cannot be deleted.  It is used in '%2'."
	}
	quit strStatus
 
 
Check(pstrKey="")
	;-------------------------------------------------------------------------------
	; Check whether the specified parameter is used within any data.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 15-Dec-2008	GRF		SR16226: Don't re-initialise strResult; use KEY macros
	; 09-Dec-2008	shobby	SR16226: Quit out when the first error is found.
	; 31-Oct-2006	shobby	SRBR014207: Renamed idxClass, idxField to idClass, idField
	; 21-Aug-2006	shobby	SRBR014207: Corrected strParameterName usage.
	; 20-Aug-2006	shobby	SRBR014207: Created
	;-------------------------------------------------------------------------------
	new idClass,idField,idxLanguage,objWWW003
	new strLanguage,strParameterName,strResult,strSearchWord
	
	if $get(Y)="" do ^WWWVAR
	
	set strResult        = ""
	set strParameterName = $$$KEY1(pstrKey)
	set strLanguage      = $$$KEY2(pstrKey)
	set strSearchWord    = $$$KEY3(pstrKey)
	
	if (strParameterName'="") && (strLanguage'="") && (strSearchWord'="") {
		set idClass=""
		for {
		;	quit:strResult'=""
		;	set strResult=""
			set idClass = $order(^WWW003(0,idClass))
			quit:idClass=""
			
			set idField = ""
			for {
				set idField = $order(^WWW003(0,idClass,idField))
				quit:idField=""
				
				set objWWW003 = $get(^WWW003(0,idClass,idField,1))
				if $$$WWW003RelationDatabase(objWWW003)="INPARA" {
					for idxLanguage="SPRACHE","LANGUAGE" {
						if $$$WWW003RelationalPrimaryKeys(objWWW003)=(""""_strParameterName_""","_idxLanguage) {
							if $$$WWW003IndexKey(objWWW003)'="" {
								set strResult = $$CheckIndex(idClass,idField,strSearchWord,$$$WWW003IndexKey(objWWW003))
							} else {
								set strResult = $$CheckData(idClass,idField,strSearchWord)
							}
						}
						quit:strResult'=""  ;SR16226
					}
				}
				quit:strResult'=""			;SR16226
			}
			quit:strResult'=""				;SR16226
		}
	}

	quit strResult
 
 
CheckData(pidClass="",pidField="",pstrSearchWord="")
	;-------------------------------------------------------------------------------
	; Check all of the data in a class if the specified parameter has a relation.
	; Used as when a class doesn't have an index or the index is complicated.
	;
	; Params:
	; Params:
	;		pidClass:		The class for which the contents are checked
	;		pidField:		The field on the class
	;		pstrSearchWord:	The text of the parameter being searched for
	;
	; ByRefs:
	;
	; Returns:
	; 	strResult:A message to indicate the record found.
	;
	; History:
	; 31-Oct-2006	shobby	SRBR014207: Renamed pidxClass, pidxField to pidClass, pidField
	; 13-Oct-2006	shobby	SRBR014207: Use $$$WWWYM
	; 11-Oct-2006	shobby	SRBR014207: Call to routine to create more informative
	; 						message for user.
	; 20-Aug-2006	shobby	SRBR014207: Created
	;-------------------------------------------------------------------------------
	new idxQuery,strResult
	
	set strResult = ""
	
	if (pidClass'="") && (pidField'="") && (pstrSearchWord'="") {
		set idxQuery = "^"_pidClass_"("_$$$WWWYM(pidClass)_")"
		for {
			set idxQuery = $query(@idxQuery)
			quit:idxQuery=""
			
			if $piece(@idxQuery,Y,pidField)=pstrSearchWord {
				set strResult=$$ReturnMessage($piece($piece(idxQuery,"^",2),"(",1),$piece(idxQuery,",",2,$length(idxQuery,",")-1))
			}
			quit:strResult'=""
		}
	}	
	quit strResult
	
	
CheckIndex(pidClass="",pidField="",pstrSearchWord="",pstrIndex="")
	;-------------------------------------------------------------------------------
	; Check using the index on a class if the specified parameter has a relation.
	; Note: Only works with a single piece parameter or the first part of a
	;       multipart parameter.
	;
	; Params:
	;		pidClass:		The class for which the contents are checked
	;		pidField:		The field on the class
	;		pstrSearchWord:	The text of the parameter being searched for
	;		pstrIndex:		The index defined on the class that can be used for searching.
	;		
	; ByRefs:
	;
	; Returns:
	; 	strResult:A message to indicate the record found.
	;
	; History:
	; 31-Oct-2006	shobby	SRBR014207: Renamed pidxClass, pidxField to pidClass, pidField
	; 13-Oct-2006	shobby	SRBR014207: Use $$$WWWYM
	; 10-Oct-2006	shobby	SRBR014207: Return a more meaningful message to the user.
	; 20-Aug-2006	shobby	SRBR014207: Created
	;-------------------------------------------------------------------------------
	new intIndex,strResult
	
	set strResult = ""
	
	if (pidClass'="") && (pidField'="") && (pstrSearchWord'="") && (pstrIndex'="") {
		set intIndex = $piece(pstrIndex,".",1)
		
		if ($piece(pstrIndex,".",2)="") || ($piece(pstrIndex,".",2)=1) {
			
			xecute "set strResult=$query(^"_pidClass_"s("_$$$WWWYM(pidClass)_","_intIndex_","""_pstrSearchWord_"""))"
			
			if strResult'="" {
				if $translate($piece(strResult,$$$COMMA,3),"""")'=pstrSearchWord {
					set strResult = ""
				} else {
					set strResult = $$ReturnMessage(pidClass,$piece($piece(strResult,",",5,9999),")",1))
				}
			}
		} else {
			set strResult = $$CheckData(pidClass,pidField,pstrSearchWord)
		}
	}
	quit strResult
 
 
ReturnMessage(pstrClass,pstrKey)
	;-------------------------------------------------------------------------------
	; Creates the message to help the user determine which record is preventing this
	; record from being deleted
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	; 	strMessage :		A message to indicate the record found.
	;
	; History:
	; 13-Oct-2006	shobby	SRBR014207: Use $$$WWWYM, $$^WWWFORMNAME
	; 11-Oct-2006	shobby	SRBR014207: Created
	;-------------------------------------------------------------------------------
	new loop,strMessage,strRecord
	
	set strMessage = ""
	;If there is a form matching the class description use that, it is probably more meaningful to the user.
	set strMessage = $$^WWWFORMNAME(pstrClass)
	if strMessage="" set strMessage = $$GetClassDescription^WWW001(pstrClass)
	set strMessage = $$$CRLF_strMessage
	
	set strRecord=""
	for loop=1:1:$length(pstrKey,",") {
		set strRecord = strRecord_$$$CRLF_"    "_$$GetDescription^WWW002(pstrClass,loop)_":"_$piece(pstrKey,",",loop)
	}
	set strMessage = strMessage_" "_strRecord_$$$CRLF_$$$CRLF_pstrClass_"("_$$$WWWYM(pstrClass)_","_$$^WWWKEYBUILD(pstrKey)_",1)"
	quit strMessage
 
 
GetParamDesc(pidParam,pstrValue)
	;-------------------------------------------------------------------------------
	; Get a user parameter description
	;
	; Params: pidParam		: The parameter name
	; 		  pstrValue		: The value we're after
	;
	; ByRefs:
	;
	; Returns: strDesc
	;
	; History:
	; 13-Sep-2006	Steve S	SR14956: Created
	;-------------------------------------------------------------------------------
	new objINPARA,strDesc
 
	set strDesc=""
	
	if ($get(pidParam)'="") && ($get(pstrValue)'="") {
		set objINPARA = $get(^INPARA(YM,pidParam,SPRACHE,pstrValue,1))
		set strDesc   = $$$INPARAText(objINPARA)
	}
 
	quit strDesc
 
	
GetFormat(pstrValue,pstrDefaultValue="",pSPRACHE="")
	;-------------------------------------------------------------------------------
	; Check if "FELDFORMAT" parameter exists in INPARA, WWW101 and WWW100 classes.
	;
	; Params: pstrValue			: The value we're after (assumed to be non-null)
	; 		  pstrDefaultValue	: The default value
	;
	; ByRefs:
	;
	; Returns: strFormat
	;			e.g. for date     MM/DD/AAAA, TT.MM.YYYY, DD-MM-YYYY, YYYYMMDD, etc.
	;			     for numbers  NN,NNN.NN   or NN.NNN,NN
	;
	; History:
	; 27-Aug-2007	shobby	SR13729: Only default pSPRACHE to SPRACHE if it is not
	; 							passed in as a parameter.
	; 23-Aug-2007	GM		SR13729: Included "pSPRACHE" parameter
	; 20-Aug-2007	GM		SR13729: Created
	;-------------------------------------------------------------------------------
	new objINPARA,objWWW100,objWWW101,strFormat
	
	set strFormat = ""
	if pSPRACHE="" set pSPRACHE = $get(SPRACHE)
	
	if (pSPRACHE'="") {
		if $get(YM)'="" {
			set objINPARA = $get(^INPARA(YM,"FELDFORMAT",pSPRACHE,pstrValue,1))
			set strFormat = $$$INPARAText(objINPARA)
		}
		if strFormat="" {
			set objWWW101 = $get(^WWW101(0,"FELDFORMAT",pSPRACHE,pstrValue,1))
			set strFormat = $$$WWW101Text(objWWW101)
		}
		if strFormat="" {
			set objWWW100 = $get(^WWW100(0,"FELDFORMAT",pSPRACHE,pstrValue,1)) 
			set strFormat = $$$WWW100Text(objWWW100) 
		}	
	}
	
	if strFormat="" {
		set strFormat = pstrDefaultValue
	}
	quit strFormat
	
	
OnBeforeSave(pidKey="",pobjParam)
	;-------------------------------------------------------------------------------
	; Code to run before saving a parameter.
	;
	; Called By : Class INPARA - Class Hook : On Before Delete
	;
	; Params: YKEY/YFELD from form
	; 
	; ByRef: Q
	;
	; Returns:
	;		strStatus:Message to display
	;		
	; History:
	; 01-Oct-2010	GRF		SR17487: Created
	;-------------------------------------------------------------------------------
	new idLanguage,idParamCode,idParameter,intHours,intMins,strStatus,strText
	
	set strStatus = $$$OK
	
	if '$$$NoKey(pidKey) {
		set idParameter = $$$KEY1(pidKey)
		set idLanguage  = $$$KEY2(pidKey)
		set idParamCode = $$$KEY3(pidKey)
		
		if idParameter = "DRPRUNTIME" {
			set strText = $$$INPARAText(pobjParam)
			if strText'?2N1":"2N {
				set Q         = $$$QDontSave
				set strStatus = $$$MakeStatus("IN01269",idParamCode)
			
			} else  {
				set intHours = +$piece(strText,":",1)
				set intMins  = +$piece(strText,":",2)
				if (intHours<0) || (intHours>23) || (intMins<0) || (intMins>59) {
					set Q         = $$$QDontSave
					set strStatus = $$$MakeStatus("IN01269",idParamCode)
				}
			} ; "Text for code %1 must be of form HH:MM (Hours and Minutes) with a range of 00:00 to 23:59"
		}
	}
	quit strStatus
	
]]></Routine>
</Export>