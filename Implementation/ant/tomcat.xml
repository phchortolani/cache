<?xml version="1.0" encoding="iso-8859-1" ?>

<project name="tomcat" basedir="..">

<!-- Test if any Tomcat configuration will be necessary. -->
<target name="verify-tomcat-config" depends="init" >
    <!-- Tomcat basic configuration -->
    <condition property="tomcat-config-necessary">
        <equals trim="true" arg1="" arg2="${reportsDir}" />
    </condition>
    <condition property="tomcat-config-necessary">
        <equals trim="true" arg1="" arg2="${servletDir}" />
    </condition>

    <!-- Indicates the no additional configuration is needed -->
    <condition property="tomcat-config-ok">
        <not>
            <isset property="tomcat-config-necessary" />
        </not>
    </condition>
</target>

<target name="check-tomcat" depends="init,configure-cache" >
    <!-- Tests if there are changes in the source control classes -->
    <if>
        <not>
            <uptodate targetfile="${buildDir}/tomcat-last-update.log" >
                <srcfiles dir="${basedir}/src/servletIRIS" includes="**/*"/>
				<srcfiles dir="${basedir}/src/servletCACHE" includes="**/*"/>
                <srcfiles dir="${basedir}/web/javaResources" includes="**/*"/>
            </uptodate>
        </not>

        <then>
			<for param="file">
				<path>
					<fileset dir="${basedir}/src/servletIRIS" includes="**/*" defaultexcludes="false"/>
					<fileset dir="${basedir}/src/servletCACHE" includes="**/*" defaultexcludes="false"/>
					<fileset dir="${basedir}/web/javaResources" includes="**/*" defaultexcludes="false"/>
				</path>

				<sequential>
					<if>
						<not>
							<uptodate targetfile="${buildDir}/tomcat-last-update.log" srcfile="@{file}"/>
            			</not>

            			<then>
            				<echo>File '@{file}' changed</echo>
            			</then>
            		</if>
				</sequential>
			</for>

			<echo>Redeploying Tomcat files ... Please, remember to restart Tomcat service!</echo>

            <!-- Set the property so that tomcat deploy can execute -->
            <property name="tomcat-files-changed" value="1" />
        </then>
    </if>
</target>
<echo>${srcServletDir}</echo>

<!-- Deploy everything necessary for the servlet to run -->
<target name="deploy-servlet" depends="verify-tomcat-config" if="tomcat-config-ok">
    <!-- Directories -->
    <mkdir dir="${servletDir}/WEB-INF/classes"/>
    <mkdir dir="${servletDir}/WEB-INF/lib"/>
    <mkdir dir="${tomcatDir}/shared/lib"/>
	<echo>Caminho ${srcServletDir}</echo>
	<if>
		<equals arg1="${productIntersystems}" arg2="IRIS"/>
		<then>
			<!-- Copy compiled classes -->
			<copy todir="${srcServletDir}/WEB-INF/classes" overwrite="yes">
				<fileset dir="${srcServletDir}IRIS" defaultexcludes="false">
					<include name="**/*"/>
				</fileset>
			</copy>
		</then>
		<else>
			<!-- Copy compiled classes -->
			<copy todir="${servletDir}/WEB-INF/classes" overwrite="yes">
				<fileset dir="${srcServletDir}CACHE" defaultexcludes="false">
					<include name="**/*"/>
				</fileset>
			</copy>
		</else>
	</if>


    <!-- Copy properties file -->
    <copy file="${srcServletDir}/alphalinc.properties" todir="${servletDir}/WEB-INF/classes" overwrite="yes"/>

	<if>
		<equals arg1="${productIntersystems}" arg2="IRIS"/>
		<then>
			<!-- Copy JasperReportServlet.class -->
			<copy file="${srcServletDir}IRIS/JasperReportServlet.class" todir="${servletDir}/WEB-INF/classes/" overwrite="yes"/>
		</then>
		<else>
			<!-- Copy JasperReportServlet.class -->
			<copy file="${srcServletDir}CACHE/JasperReportServlet.class" todir="${servletDir}/WEB-INF/classes/" overwrite="yes"/>
		</else>
	</if>

    <!-- Copy web.xml -->
    <copy file="web/javaResources/web.xml" todir="${servletDir}/WEB-INF/"/>

    <!-- Copy libs (only in the base directory) -->
    <delete includeemptydirs="true" quiet="true">
    	<fileset dir="${servletDir}/WEB-INF/lib" includes="**/*" defaultexcludes="false"/>
    </delete>

	<if>
		<equals arg1="${productIntersystems}" arg2="IRIS"/>
		<then>
			<copy todir="${servletDir}/WEB-INF/lib">
				<fileset dir="libs/java-libsIRIS" defaultexcludes="false">
					<include name="*.jar"/>
				</fileset>
			</copy> 
		</then>
		<else>
			<copy todir="${servletDir}/WEB-INF/lib">
				<fileset dir="libs/java-libsCACHE" defaultexcludes="false">
					<include name="*.jar"/>
				</fileset>
			</copy> 
		</else>
	</if>
</target>

<!-- Deploy a configuration file for tomcat -->
<target name="deploy-tomcat" depends="check-tomcat,verify-tomcat-config" if="tomcat-config-ok">
    <if>
		<isset property="tomcat-files-changed" />

        <then>
            <antcall target="deploy-servlet"/>

			<!-- Create directory inside tomcat (just to make sure. It should be created by tomcat) -->
			<mkdir dir="${tomcatDir}/conf/Catalina/localhost"/>

			<!-- Copy the configuration file for this application, changing two values  -->
			<copy file="${basedir}/web/javaResources/tomcat-config.xml"
				  toFile="${tomcatDir}/conf/Catalina/localhost/${namespace}.xml" overwrite="true">
				<filterset>
					<filter token="contextPath" value="/${namespace}"/>
					<filter token="servletDir" value="${servletDir}"/>
				</filterset>
			</copy>

			<!-- Jasper needs a directory called Compiled -->
			<mkdir dir="${reportsDir}/Compiled"/>

			<!-- Mark it as done -->
			<exec dir="${binDir}" executable="${touchExecName}" resolveexecutable="${isWindows}" failonerror="yes">
				<arg line="${buildDir}/tomcat-last-update.log"/>
    		</exec>
        </then>
    </if>

    <!-- Copy the reports and needed images to the final destination -->
    <copy todir="${reportsDir}" preservelastmodified="yes" includeEmptyDirs="true">
        <fileset dir="${basedir}/web/reports" casesensitive="false" defaultexcludes="false">
            <include name="**/*.jrxml"/>
            <include name="**/*.jasper"/>
            <include name="**/*.jpg"/>
            <include name="**/*.gif"/>
            <include name="**/*.png"/>
        </fileset>
    </copy>
</target>
</project>
