<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARCompraLinha" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARCompraLinha
#include COMSYS
#include COMConst
#include INConst
#include VARConst
 
OnBeforeDisplayCombo(pstrKeys,pobj,pintCol,&pSUCH)
 ;-------------------------------------------------------------------------------
 ; Copied from INTFRLine
 ;
 ; History:
 ; 08-Dez-2011 Karine Created
 ;-------------------------------------------------------------------------------
 new blnOverride,enumLineType,enumUnit,idClassField,idItem
 
 set blnOverride = $$$NO
 
 if pintCol = 40  {  ;numero do campo
  kill pSUCH
  set pSUCH  = "SUCH"
  set idItem = $piece(pobj,Y,4) 
  
  if idItem '= "" {
   set enumUnit = ""
   for {
    set enumUnit = $order(^INARTPACK(0,idItem,enumUnit))
    quit:enumUnit=""
    
    set pSUCH(enumUnit) = enumUnit
   }
   set blnOverride = $$$YES
  }
 }
 quit blnOverride
 
OnAfterPrimaryKey()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo OnAfterPrimaryKey do form VARCompraLinha.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	set ^WWW126(YM,"INAUF",YBED,1,1) = $$$KEY1(YKEY)
	quit
	
OnBeforeSave()
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo OnBeforeSave do form VARCompraLinha.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;	20-Ago-2010		Karine: Incluído no metodo NewFields()
    ;-------------------------------------------------------------------------------
	do NewFields()      ;Karine:Copia os campos de quantidade para os novos campos incluídos na 1.62/1.64
	do MANUSN^INAUFPSN
 
	quit
	
OnBeforeSaveHook(pYKEY,pobjINAUFP="")
	;-------------------------------------------------------------------------------
    ; Descrição: 
    ;	Seta os dados necessários de preço na INAUFPK e outros dados relevantes no
    ;   na linha do pedido de compra 
    ;
    ; Chamado por:
    ;	VARHook OnBeforeSave da classe INAUFP.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new strStatus, objINAUFPK, idINAUF, objINAUF, idLocation	
	set strStatus = $$$OK
	
	if (($$$KEY1(pYKEY) '= "")&&($$$KEY2(pYKEY) '= "")) {
		
		set objINAUFPK = $get(^INAUFPK(YM,$$$KEY1(pYKEY),$$$KEY2(pYKEY),1))
		
		set $$$INAUFPKPurchaseQuantity(objINAUFPK)	 = $$$INAUFPQuantity(pobjINAUFP)
		set $$$INAUFPKUnitPrice(objINAUFPK)			 = $$$INAUFPFREE7(pobjINAUFP)
		set $$$INAUFPKBasisOriginalPrice(objINAUFPK) = $$$FCMult($$$INAUFPKPurchaseQuantity(objINAUFPK),$$$INAUFPKUnitPrice(objINAUFPK))
		set $$$INAUFPKNetOriginalPrice(objINAUFPK)   = $$$FCMult($$$INAUFPKPurchaseQuantity(objINAUFPK),$$$INAUFPKUnitPrice(objINAUFPK))
		
		set strStatus = $$$Save("INAUFPK",YKEY,objINAUFPK,1)
 
		set $$$INAUFPCost(pobjINAUFP) = $$$INAUFPKBasisOriginalPrice(objINAUFPK)
	}
	
	set idINAUF    = $$$KEY1(pYKEY)
	set objINAUF   = $get(^INAUF(YM,idINAUF,1))
	set idLocation = $piece(objINAUF,Y,6) ;Local
	set $piece(YFELD,Y,292) = idLocation  ; Free17 - setando o location na linha.
	
	quit strStatus
 
LoadGrid(pid="") 
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Função OnAfterDataFields^VARCompra.mac.
    ; 
    ; Histórico:
    ; 	07-Jul-2010		Criado
    ;-------------------------------------------------------------------------------
	new YFORM,YKEY,YAUSWAHL,YFELD
	set YFORM="VARCompraLinha"
	set YFELD=""
	set YKEY=$get(pid)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL) = 1
	set $$$COMGridEditParameterGridName(YAUSWAHL)	= YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)	= '($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)	= "VARCompra"
	
	do SetAArquivarVisivel(YKEY)
	
	$$$GRIDStart(YFORM,YKEY)
	
	quit
	
OnBlurItem(pYFELD)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo ExecuteOnBlur do campo (4)-ItemCode no form INAUFP.
    ; 
    ; Histórico:
    ; 	13-Jul-2010		Criado
    ;-------------------------------------------------------------------------------	
	new idItem, UnidadeMedida, NomeItem, Fornecedor, PrecoUnitario, idCompra, idAta, 
		idAtaLinha, produtoAta, idPrograma
 
	quit:(pYFELD = "")
	set idItem = $piece(YFELD,Y,4)
	quit:(idItem = "")
 
	set idCompra = $piece(YKEY,YKOMMA,1)
	
	if '$data(^INART(0, idItem, 1)) {
		set $piece(YFELD,Y,4) = ""
		$$$Alert("O produto '"_idItem_"' não existe.")
		quit
	}
	
	if $$$ISOK(strStatus) {	
		set idPrograma = $$GetProgramaCabecalho(idCompra)		
		if ( (idPrograma '= "") && ($$CheckItemPolicyHasProgram^VARINART(idItem) '= $$$YES) ) {
			set $piece(YFELD,Y,4) = ""
			$$$Alert("O produto '"_idItem_"' é incompatível com o controle de programa definido no cabeçalho da ordem de compra. Verifique o tipo de dispensação no cadastro do produto ou remova o programa do cabeçalho.")
			quit
		}
	}
	
	if $$$ISOK(strStatus) {
		set idAta 	   = $piece(YFELD,Y,295)
		set idAtaLinha = $piece(YFELD,Y,296)
		
		if ( (idAta '= "") && (idAtaLinha '= "") ) {
		
			set produtoAta = $$GetProduto^VARAtaLinha(idAta,idAtaLinha)
		
			if (idItem '= produtoAta) {
				set strStatus = "O produto está associado a uma ata e não pode ser alterado."
				set $piece(YFELD,Y,4) = produtoAta
				$$$Alert(strStatus)
				quit
			}
		}
	}	
	
	set UnidadeMedida = $piece($get(^INART(YM,idItem,1)),Y,40)
	set NomeItem = $piece($get(^INART(YM,idItem,1)),Y,1)		
	
	set Fornecedor  = $piece($get(^INAUF(YM,idCompra,1)),Y,12)
	
	set PrecoUnitario = $piece($get(^INARTK(YM,idItem,Fornecedor,1)),Y,12)
 
	// Carrega Nome do Item, Unidade de Medida, Fornecedor, Preço Unitário
	set $piece(YFELD,Y,1)   = NomeItem
	set $piece(YFELD,Y,40)  = UnidadeMedida
	set $piece(YFELD,Y,12)  = Fornecedor
	set $piece(YFELD,Y,282) = PrecoUnitario
		
	quit
	
OnBlurPrecoUnitario(pYINHALT,pYFELD)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo ExecuteOnBlur do campo (282)-FREE7 (Preço Unitário) no form VARPedidoCompraLinha.
    ; 
    ; Histórico:
    ;	21-May-2012		Atualizado para verificar múltiplos preços para um mesmo item
    ;					da ata (VARAtaLinhaPreco)
    ; 	28-Jul-2010		Criado
    ;-------------------------------------------------------------------------------		
	quit:(pYINHALT = "")
	
	new precoUnitario, quantidade, precoTotal, strStatus, idAta, idAtaLinha, precoItemAta,
		objCompra, isAcaoJudicial, listaPrecosItemAta, precoUnitarioFind
		
	set strStatus = $$$OK
	
	set objCompra 	   = $get(^INAUF(YM,$$$KEY1(YKEY),1))
	set isAcaoJudicial = $$$INAUFFREE16(objCompra)
	
	set precoUnitario = pYINHALT
	
	if (precoUnitario = 0) {
		set strStatus = "O preço unitário não pode ser zero. Favor verificar."
	} elseif (precoUnitario < 0) {
		set strStatus = "O preço unitário não pode ser negativo. Favor verificar."
	}
	
	if $$$ISOK(strStatus) {
		set idAta 	   = $piece(YFELD,Y,295)
		set idAtaLinha = $piece(YFELD,Y,296)			
		
		if ( (idAta '= "") && (idAtaLinha '= "") ) {
			
			set precoItemAta 	   = $$GetPrecoUnitario^VARAtaLinha(idAta,idAtaLinha)
			set listaPrecosItemAta = $$GetListaPrecosItemAta^VARAtaLinhaPreco(idAta,idAtaLinha)
			set precoUnitarioFind  = ";"_precoUnitario_";"
		
			;if (precoUnitario '= precoItemAta) {
			if '$find(listaPrecosItemAta,precoUnitarioFind) {
				
				if (isAcaoJudicial = $$$YES) {
					;Se ação judicial, não pode ser maior que o preço unitário corrente
					if (precoUnitario > precoItemAta) {
						set strStatus = "O preço unitário não pode ser maior que o preço do produto na ata."
						set $piece(YFELD,Y,282) = ""
						$$$Alert(strStatus)
						quit	
					}
							
				} else {
									
					set strStatus = "O preço unitário deve ser idêntico a um dos preços negociados para o item na ata."
					set $piece(YFELD,Y,282) = ""
					$$$Alert(strStatus)
					quit					
				}
			}
		}
	}
 
	if $$$ISOK(strStatus) {
		set quantidade = $piece(pYFELD,Y,5)
		set precoTotal = precoUnitario * quantidade
		set $piece(YFELD,Y,283) = $$^WWWTR($$$NO,8,precoTotal)
	
	} else {
		set $piece(YFELD,Y,282) = ""
		set $piece(YFELD,Y,283) = ""
		$$$Alert(strStatus)
		quit
	}
	
	quit
	
OnBlurQuantidade(pYINHALT,pYFELD)
	;-------------------------------------------------------------------------------
    ; Chamado por:
    ;	Campo ExecuteOnBlur do campo (5)-Quantidade no form VARPedidoCompraLinha.
    ; 
    ; Histórico:
    ; 	28-Jul-2010		Criado
    ;-------------------------------------------------------------------------------		
	quit:(pYINHALT = "")
	
	new precoUnitario, quantidade, precoTotal, strStatus, idAta, idAtaLinha, fltSaldoQuant
	set strStatus = $$$OK	
	
	set quantidade = pYINHALT	
	
	if (quantidade = 0) {
		set strStatus = $$$MakeStatus("%1","A quantidade não pode ser zero. Favor verificar.")
	} elseif (quantidade < 0) {
		set strStatus = $$$MakeStatus("%1","A quantidade não pode ser negativa. Favor verificar.")
	}
		
	if $$$ISOK(strStatus) {
		set idAta 	   = $$$INAUFPFREE20(YFELD)
		set idAtaLinha = $$$INAUFPFREE21(YFELD)
		
		if ( (idAta '= "") && (idAtaLinha '= "") ) {
		
			set fltSaldoQuant = $$SQLGetSaldoItemQuant^VARAtaLinha(idAta,idAtaLinha)
			set qtyThisLinha  = $piece($get(^INAUFP(YM,$$$KEY1(YKEY),$$$KEY2(YKEY),1)),Y,5)
			
			set fltSaldoQuant = fltSaldoQuant + qtyThisLinha //ignorar um possível saldo gravado para a linha corrente no banco
		
			if (quantidade > fltSaldoQuant) {
				set strStatus = $$$MakeStatus("%1","A quantidade não pode ser maior que o saldo disponível da ata.")
			}
		}
	}
 
	if $$$ISOK(strStatus) {
		set precoUnitario = $$$INAUFPFREE7(pYFELD)
		set precoTotal = precoUnitario * quantidade
		set $$$INAUFPFREE8(YFELD) = $$^WWWTR($$$NO,8,precoTotal,1)
	
	} else {
		set $$$INAUFPQuantity(YFELD) = ""
		set $$$INAUFPFREE8(YFELD) = ""
		$$$Alert(strStatus)
		quit
	}
	
	quit
	
blnItemReadOnly(YKEY,YFELD)
	;-------------------------------------------------------------------------------
    ; Retorna se o campo produto deve ou não ficar somente leitura.
    ;
    ; Chamado por:
    ;	Regra core do campo 4-Item Number da tela VARCompraLinha
    ; 
    ; Histórico:
    ; 	23-Set-2011		Criado
    ;-------------------------------------------------------------------------------		
	quit:(YKEY = "") $$$NO
	
	;Verifica se a compra tem um pedido
	quit:($$blnPossuiPedidoCompra^VARCompra(YKEY) = $$$YES) $$$YES
	
	;Verifica se a linha é oriunda de uma ata
	new idAta
	set idAta = $piece(YFELD,Y,295)	
	quit:(idAta '= "") $$$YES
	
	quit $$$NO
 
NewFields()
	;-------------------------------------------------------------------------------
    ; Na versão 1.62 foram criados 2 novos campos: 448-Ordered Quantity and 449-Ordered Unit
    ; -> Estes campos são chamados no Recebimento para carregar as linhas da Ordem de Compra.
    ; -> Então aqui eles são replicados dos campos que já existem hoje:	
    ;
    ; Params: YFELD
    ;
    ; Returns:
    ;
    ; History:
    ; 08-Jun-2010	Karine		Created
    ;-------------------------------------------------------------------------------
	
	 
	;set $piece(YFELD,Y,1)   = NomeItem
	set $piece(YFELD,Y,449)	  = $piece(YFELD,Y,40)   ;unidade de medida
	set $piece(YFELD,Y,448)   = $piece(YFELD,Y,5)    ;quantidade
	
	quit
	
	
isProgramaNoCabecalho(pYKEY)
	new idCompra, objCompra	
	set idCompra = $$$KEY1(pYKEY)
	
	quit:(idCompra = "") $$$NO
	
	set objCompra = $get(^INAUF(YM,idCompra,1))
	quit:(objCompra = "") $$$NO
	
	set idPrograma = $$$INAUFFREE25(objCompra)
	
	if (idPrograma '= "") {
		quit $$$YES
	}
	
	quit $$$NO
	
	
GetProgramaCabecalho(pYKEY)
	new idCompra, objCompra	
	set idCompra = $$$KEY1(pYKEY)
	
	quit:(idCompra = "") ""
	
	set objCompra = $get(^INAUF(YM,idCompra,1))
	quit:(objCompra = "") ""
	
	set idPrograma = $$$INAUFFREE25(objCompra)
 
	quit idPrograma	
	
HasItemFullyReceived(pidCompra,pItem)
	new ItemFullyReceived, objCompra, item, qtyCompra, qtyTotalRecebida, qtyTotalEstornada, qtyRestante
	
	set qtyRestante 	  = 0
	set ItemFullyReceived = $$$YES
	
 	set line = ""
 	for {
	 	set line = $order(^INAUFP(YM,pidCompra,line))
	 	quit:(line = "")
	 	
 		set objCompra 	 = $get(^INAUFP(YM,pidCompra,line,1))
 		set item 		 = $$$INAUFPItemNumber(objCompra)
 		set qtyCompra    = $$$INAUFPQuantity(objCompra)
 		
 		continue:(item '= pItem)
		
		set qtyTotalRecebida  = $$getQuantidadeRecebida^VARCompra(pidCompra,line)
		set qtyTotalEstornada = $$getQuantidadeEstornada^VARCompra(pidCompra,line) 
	
		set qtyRestante = qtyCompra - qtyTotalRecebida + qtyTotalEstornada
 	}
	
	if (qtyRestante > 0){
		set ItemFullyReceived = $$$NO
	}
	
	quit ItemFullyReceived
 
ArquivarIndividual(pidCompra, pidCompraLinha, pblnTudo, pintQuantidadeAArquivar)
	new objCompraLinha, saldoAReceber, fltQuantidadeRecebida, fltQuantidadeTotal, fltQuantidadeArquivada, strStatus, precoUnitario, precoTotal
 
	set objCompraLinha = $get(^INAUFP(YM, pidCompra, pidCompraLinha, 1))
	set fltQuantidadeRecebida = +$$getQuantidadeRecebida^VARCompra(pidCompra,pidCompraLinha)
	set fltQuantidadeTotal = $$$INAUFPQuantity(objCompraLinha)
	set saldoAReceber = fltQuantidadeTotal - fltQuantidadeRecebida
	set fltQuantidadeArquivada = +$$$INAUFPFREE23(objCompraLinha)
	set strStatus = $$$OK
	if (saldoAReceber > 0) {
		if (pblnTudo) {
			set pintQuantidadeAArquivar = fltQuantidadeTotal - fltQuantidadeRecebida
		}
		elseif (pintQuantidadeAArquivar > saldoAReceber) {
			quit $$$MakeStatus("Quantidade solicitada para arquivar do produto "_$$$INAUFPItemNumber(objCompraLinha)_" é maior do que a disponível ("_saldoAReceber_")")
		}
		set $$$INAUFPFREE23(objCompraLinha)   = fltQuantidadeArquivada + pintQuantidadeAArquivar
		set $$$INAUFPOrderedQuantity(objCompraLinha) = fltQuantidadeTotal - pintQuantidadeAArquivar
		set precoUnitario = $$$INAUFPFREE7(objCompraLinha)
		set precoTotal = precoUnitario * $$$INAUFPOrderedQuantity(objCompraLinha)
		set $$$INAUFPFREE8(objCompraLinha) = precoTotal
 
	 	set strStatus = $$$Save("INAUFP",pidCompra_$$$COMMA_pidCompraLinha,objCompraLinha,$$$YES)
	}
 	
	quit strStatus
	
CanArquivar(pidCompra)
	new objCompra
 
	if ($$$NoKey(pidCompra)) {
		set objCompra = ""
	}
	else {
		set objCompra = $get(^INAUF(YM, pidCompra, 1))
	}
	do CanArquivar^VARCompra(pidCompra,objCompra)
	quit
 
OnBeforeFormat()
	;-------------------------------------------------------------------------------
    ; Deixa o campo "A Arquivar" editavel quando o form estiver ReadOnly (puder arquivar)
	;-------------------------------------------------------------------------------
	do CanArquivar($piece(YKEY, YKOMMA, 1))
	if ('YQ) {
		if (YBBN = 386) { //386 - Observação GEAB (campo antes do "A Arquivar")
			set ^CacheTemp(YUSER,"Grid","Enabled") = 1
			set ^CacheTempEvent(YUCI,YFORM,"Format") = 1
		}
		else {
			set ^CacheTemp(YUSER,"Grid","Enabled") = 0
			set ^CacheTempEvent(YUCI,YFORM,"Format") = 0
	 		set ^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","AUTHORISATION",1) = 5
		}
	}
	quit
 
OnBlurAArquivar(&YFELD)
	;-------------------------------------------------------------------------------
 	;  	Mantém o valor do campo em memória (WWWDATEN).	
    ;-------------------------------------------------------------------------------
	if ((+YLFN > 0) && ($length(YLFDAT) > 0)) {
		set $piece(YFELD,Y,YLFN) = $get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V",YLFDAT,1))
	}
	quit
 
SetAArquivarVisivel(pYKEY)
	set YOPTION1 = 0
	do CanArquivar($piece(YKEY, $$$COMMA, 1))
	if ('YQ) {
		set YOPTION1 = 1
	}
	
 	quit
 
PrintJS()	
	write !, "<script language=""javascript"">"
	&js<
	function arquivar() {
		CallBackNow("ArquivarOnClickJS^VARCompraLinha", "#(YKEY)#");
		objTxt = document.getElementById('promptText');
		if (objTxt) {
			SetFocus("");
 			objTxt.focus();
		}
	}
	>
	write !, "</script>"
	quit
 
ArquivarOnClickJS(pidCompra)
	new HTML, strYes, pbtnYes, pbtnNo, blnAlgoAArquivar
 
	set YFORM = "VARCompraLinha"
	set blnAlgoAArquivar = $$$NO
	set i = $order(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEROW",""))
	while ($length(i) > 0) {
		set intQtde = +$get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","Y"_i_"_299",1))
		if (intQtde > 0) {
			set blnAlgoAArquivar = $$$YES
			quit
		}
		set i = $order(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEROW",i))		
	} 
	if ('blnAlgoAArquivar) {
		$$$StartScript()
		write "alert('A quantidade a ser arquivada de algum dos produtos da AFM deve ser maior que zero.');"
		$$$EndScript()
	}
	else {
		set HTML=""
		set HTML=HTML_"		<label style='font-size:12px;font-weight:bold;margin-top:10px;'>Motivo:</label><br />"
		set HTML=HTML_"		<textarea name='promptText' id='promptText' rows='7' cols='45' wrap='physical' /></textarea><br /><br />"
		set HTML=HTML_"		<div style='text-align:center;'>"
		set HTML=HTML_"			<input type='button' id='btnYesConfirm' value='    Arquivar    ' style='font-weight:bold;margin-right:20px;cursor:pointer;'>"
		set HTML=HTML_"			<input type='button' id='btnNoConfirm'  value='    Cancelar    ' style='font-weight:bold;margin-left:10px;cursor:pointer;'>"
		set HTML=HTML_"		</div>"
	
		set strYes = ""
		set strYes=strYes_"	var strMotivo = document.getElementById('promptText').value;"
		set strYes=strYes_"	if (strMotivo != ''){"
		set strYes=strYes_"		dscPMClose();"
		set strYes=strYes_"		CallBackNow('ArquivarOnClick^VARCompraLinha', '"_pidCompra_"', strMotivo);"
		set strYes=strYes_"	} else {"
		set strYes=strYes_"		alert('É necessário informar o motivo do arquivamento.');"
		set strYes=strYes_"	}"
 
		set pbtnYes("Id")="btnYesConfirm"
		set pbtnYes("Code")=strYes
 
		set pbtnNo("Id")="btnNoConfirm"
		set pbtnNo("Code")="dscPMClose();"
 
		do Show^WWWPopupMessage(HTML,"&nbsp;Arquivar Linhas da AFM nº "_pidCompra,,,,,.pbtnNo,.pbtnYes,$$$YES,"#dcdcdc")
	}
	quit
 
ArquivarOnClick(pidCompra,strMotivoArquivamento)
	new objCompra,strMotivoArquivamentoFormatado,strStatus,YSEITE,
		intQtdeLinhas, strQtdsAArquivar, blnAlgoAArquivar, intQtde
		
	set YFORM = "VARCompraLinha"
	
	set strQtdsAArquivar = ""
	
	set i = $order(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEROW",""))
	while ($length(i) > 0) {
		set intQtde = +$get(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","Y"_i_"_299",1))
		set $piece(strQtdsAArquivar, Y, i) = intQtde 
		
		if (intQtde > 0) {
			set blnAlgoAArquivar = 1
		}
		set i = $order(^WWWDATEN(YM,+$horolog,YUSER,YFORM,"V","REFERENCEROW",i))		
	}
 	
	if ($length(strMotivoArquivamento) = 0) {
		$$$StartScript()
		write "alert('Entre com o motivo do arquivamento da linha da AFM!');"
		$$$EndScript()
	}
	else {
		if ($length(strMotivoArquivamento, """") = 1) {
			set strMotivoArquivamentoFormatado = strMotivoArquivamento
		}
		else {
			set strMotivoArquivamentoFormatado = ""
			for i = 1:1:$length(strMotivoArquivamento, """") {
				set strMotivoArquivamentoFormatado = strMotivoArquivamentoFormatado_
					$piece(strMotivoArquivamento, """", i)_""""""
			}
		}
		set strStatus = $$Transaction^COMTransaction("Arquivar^VARCompraLinha("""_pidCompra_""","""_strQtdsAArquivar_""","""_strMotivoArquivamentoFormatado_""")", $$$YES)
		if $$$ISOK(strStatus) {
			$$$StartScript()
			write "alert('AFM arquivada com sucesso!');"
			$$$EndScript()
			
			set YFORM = "VARCompra"
			do GoToForm^COMUtilForm(YFORM, pidCompra, 5, $get(YPARA), $$$NO)
		}
		else {
			$$$StartScript()
			write "alert('Erro ao arquivar a AFM => "_$$DecodeError^COMUtilError(strStatus)_"');"
			$$$EndScript()
		}
	}
	quit ""
 
Arquivar(pidCompra, pstrQtdsAArquivar, pstrMotivoArquivamento)
	new idCompraLinha, intQuantidadeAArquivar, strStatus, objCompra
 
	set idCompraLinha = $order(^INAUFP(YM,pidCompra,"")) 
	while ($length(idCompraLinha) > 0) { 
		set intQuantidadeAArquivar = +$piece(pstrQtdsAArquivar, Y, idCompraLinha)
		if (intQuantidadeAArquivar > 0) {
			set strStatus = $$ArquivarIndividual(pidCompra, idCompraLinha, 0, intQuantidadeAArquivar)
			if $$$ISERR(strStatus) {
				set $zerror = $$DecodeError^COMUtilError(strStatus)
				zquit 1 GOTO @$ZTRAP
			}
			
			do RegistrarAlteracao^VARCompraHistorico(pidCompra, 3,
				idCompraLinha, intQuantidadeAArquivar, pstrMotivoArquivamento) ;3 = #define HistAlterArquivar  3
		}
		set idCompraLinha = $order(^INAUFP(YM,pidCompra,idCompraLinha)) 
	}	
	
	quit $$$OK
 
GetQuantidadeDisponivel(pObjCompraLinha)
	quit:($length(pObjCompraLinha) = 0) 0
	quit $$GetQuantidadeAAtender^VARPedidoCompraLinha($$$INAUFPFREE14(pObjCompraLinha),$$$INAUFPFREE15(pObjCompraLinha))
 
GetQuantidadeTotalSolicitada(pYKEY)
	new idCompra, idLinha, objCompraLinha, total	
	set idCompra = $$$KEY1(pYKEY)
	set idLinha = $$$KEY2(pYKEY)
	
	quit:(idCompra = "") ""
	
	set objCompraLinha = $get(^INAUFP(YM,idCompra, idLinha,1))
	quit:(objCompraLinha = "") ""
	
	set total = $$$INAUFPFREE23(objCompraLinha) + $$$INAUFPQuantity(objCompraLinha)
 
	quit total	
 
isGridReadOnly(pidCompra)
	quit:(pidCompra = "") $$$NO
	new objCompra	
	set objCompra = $get(^INAUF(YM,$$$KEY1(pidCompra),1))
	quit:(objCompra = "") $$$NO
	// se o status for diferente de "Aberta"
	quit:(+$$$INAUFFREE14(objCompra) > 0) $$$YES
 
	quit $$$NO
	
	/* 
GetObservacaoGEAB()
	quit $$GetObservacaoGEAB^VARAlertaLocalLinha($$$INAUFPItemNumber(YFELD))
	*/
]]></Routine>
</Export>