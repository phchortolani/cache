<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INReqSourceLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INReqSourceLine
	
#include INConst
#include COMSYS
#include COMGridEdit31
#include COMGridEdit31Interface
	
OnBlur(pCOL,pROW,&pYFELD)
	;-------------------------------------------------------------------------------
	; Handle the blurring of fields on the requisition sourcing grid.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 19-Feb-2010	PPP		SR17193: Get the Unit Cost for the Item when selected.
	; 18-Feb-2010	shobby	SR15753: Commented redundant code.
	; 24-Mar-2009	GRF		SR16433: Don't store display currency internally - strip
	; 							zero decimals; use idClassFld rather than idField
	; 18-May-2007	RPW		SR15513: If the location = sourcing location, set the
	; 							sourcing location to "".  When blurring the quantity
	; 							ask to split or just decrease if less, otherwise
	; 							increase.  When blurring the type also update the
	; 							table down the bottom of the grid.
	; 08-May-2007	RPW		SR15513: Check if what transfer type we have and clear
	; 							out the required fields
	; 30-Nov-2006	RPW		SR15249: Created
	;-------------------------------------------------------------------------------
	new blnTransfer,curCost,fltUnitCost,idAgree,idClassFld,idItem,idSupplier
	new objAgreement,objINARTK
	
	set idSupplier  = ""
	set fltUnitCost = ""
 
	set idClassFld = $$$GetClassField(YFORM,pCOL)
	
	if idClassFld = $$$FldINRequisitionAgreement {
		set idAgree = $$$INRequisitionAgreement(pYFELD)
		set idItem  = $$$INRequisitionItem(pYFELD)
			
		set idSupplier = $order(^INSupMastAgreeItems(0,1,$$$Index(idAgree),$$$Index(idItem),""))
		
		if idSupplier'="" {
			set objAgreement = $get(^INSupMastAgreeItem(0,idSupplier,idAgree,idItem,1))
			if objAgreement'="" {
				set $$$INRequisitionSupplier(pYFELD)  = idSupplier
				set $$$INRequisitionUnitPrice(pYFELD) = +$$$INSupMastAgreeItemCost(objAgreement)
			}
			
		} else {
			set $$$INRequisitionSupplier(pYFELD)  = ""
			set $$$INRequisitionUnitPrice(pYFELD) = ""
		}
		
	} elseif idClassFld=$$$FldINRequisitionSupplier {
		if $$OnBeforeFormConstruction(YKEY,pYFELD,idClassFld) {
			set $$$INRequisitionSupplier(pYFELD)  = ""
		} else {
			set $$$INRequisitionAgreement(pYFELD) = ""
			set curCost = ""
			
			set idSupplier = $$$INRequisitionSupplier(pYFELD)
			if idSupplier'="" {
				set idItem  = $$$INRequisitionItem(pYFELD)
				//SR17193
				set objINARTK = $get(^INARTK(0,idItem,idSupplier,1))
				set curCost = $$$INARTKNetPurchasePrice(objINARTK)
				set:$$$INARTKConversionFactor(objINARTK) curCost =  $$$INARTKConversionFactor(objINARTK)*curCost
			}
			set $$$INRequisitionUnitPrice(pYFELD) = +curCost
		}
		
	} elseif idClassFld = $$$FldINRequisitionEmergency {
		if '$$$INRequisitionEmergency(pYFELD) {
			set $$$INRequisitionSupplier(pYFELD)  = ""
			set $$$INRequisitionUnitPrice(pYFELD) = ""
		}
		
	} elseif idClassFld = $$$FldINRequisitionQuantity {
		do HandleQuantityChange^INReqCommon(pCOL,pROW,.pYFELD)
		
	} elseif idClassFld = $$$FldINRequisitionType {
		set blnTransfer = ($$$INRequisitionType(pYFELD)=$$$EnumINREQUISITIONTYPETfr)
		if blnTransfer {
			set $$$INRequisitionAgreement(pYFELD) = ""
			set $$$INRequisitionSupplier(pYFELD)  = ""
		} else {
			set $$$INRequisitionSourcingLocation(pYFELD) = ""
		}
		
		write "if (typeof(DrawDynTable_GridFieldFocus)!='undefined') {DrawDynTable_GridFieldFocus('"_pROW_"');}"
		
	} elseif idClassFld = $$$FldINRequisitionSourcingLocation {
		if $$$INRequisitionSourcingLocation(pYFELD)=YLOCATION {
			set $$$INRequisitionSourcingLocation(pYFELD) = ""
		}
	}
	quit
	
	
OnBeforeFormat(pYFIELDNAME,strText,YFELD)
	;-------------------------------------------------------------------------------
	; Before formatting a cell, check whether there should be an error or not.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Feb-2010	shobby	SR15753: Commented redundant code.
	; 30-Nov-2006	RPW		SR15249: Created
	;-------------------------------------------------------------------------------
	new idField,idRow,strStatus,idCol,idSupplier,idAgreement,idItem,fltQuantity,fltCurrent,idAgree
	
	quit:($get(YUSER)="")||($get(YKEY)="")
	
	if $get(YHID)=1 {
		if $data(^CacheTempLocked(YUSER,YKEY)) {
			set strStatus = $get(^CacheTempLocked(YUSER,YKEY))
			set YTOOLTIP  = $$$Text(strStatus)
		}
		
	} else {	
		$$$GRIDSplitKey(pYFIELDNAME,idRow,idCol)
		set idField = $$$GetClassField(YFORM,idCol)
				
		if (idField = $$$FldINRequisitionQuantity) {
			if $$$INRequisitionQuantity(YFELD)<=0 {
				set YWARNING = $$$YES
				set YTOOLTIP = $$$Text($listbuild("IN00559",$$$KEY2($$ReferenceKey^COMGridEdit31Interface(YFORM,idRow))))
			} ; "The quantity must be greater than 0 on line %1."
			
		} elseif (idField=$$$FldINRequisitionAgreement) {
			// FIXME: This must check the this agreement/supplier combo exists and then check for this product
 
			set idAgree = $$$INRequisitionAgreement(YFELD)
			if idAgree'="" {
				if '$data(^INSupMastAgrees(0,1,$$$Index(idAgree))) {
					set YWARNING = $$$YES
					set YTOOLTIP = $$$Text($listbuild("IN00644",idAgree))
				} ; "No supplier has master agreement number %1."
			}
		}
		
		// Check the agreement and Qty
		set idSupplier  = $$$INRequisitionSupplier(YFELD)
		set idAgreement = $$$INRequisitionAgreement(YFELD)
		set idItem      = $$$INRequisitionItem(YFELD)
	
		if (idAgreement'="") && (idItem'="") && (idSupplier'="") &&
		   ((idField=$$$FldINRequisitionQuantity) || (idField=$$$FldINRequisitionAgreement)) {
			
			// Find all current lines with this agreement details
			set fltQuantity = $$$INRequisitionQuantity(YFELD)
			set fltCurrent  = $$GetAgreementQty^INReqCommon(idSupplier,idAgreement,idItem)
				
			if fltCurrent<fltQuantity {
				set YWARNING = $$$YES
				set YTOOLTIP = $$$Text($listbuild("IN00561",fltCurrent,idAgreement))
			} ; "Only %1 items can be order from Agreement %2."
		}
	}
	quit
	
	
OnBeforeDisplayLine(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; Check if we display a line based on the filters and multilock.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 01-Dec-2009	GRF		SR17007: separate tags for multi-lock operations
	; 16-Feb-2007	RPW		SR15436: Do not need DataAccess thanks to COMView.
	; 28-Nov-2006	SteveS	SR15249: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	;et strStatus = $$GetLock^WWWMultiLock("INReqSource","INReqSourceLine",pYKEY) ; SR17007
	set strStatus = $$LockSet^WWWMultiLock("INReqSource","INReqSourceLine",pYKEY)
	
	if $$$ISERR(strStatus) {
		set ^CacheTempLocked(YUSER,pYKEY) = strStatus
	}
	quit $$$YES
	
	
OnBeforeFormConstruction(pYKEY,pobjLine,pidField)
	;-------------------------------------------------------------------------------
	; Before the field is constructed check if it should be disabled.
	;
	; Params:
	;
	; ByRefs:
	;
	; Returns:	boolean - whether disabled
	;
	; History:
	; 18-Feb-2010	shobby	SR15753: set YHID variable
	; 30-Nov-2006	JW		SR15249: Created
	;-------------------------------------------------------------------------------
	new blnDisable
	
	set blnDisable = $$OnBeforeFormConstruction^INReqCommon(pYKEY)
	
	if 'blnDisable {
		if pidField = $$$FldINRequisitionAgreement {
			if $$HasNoMasterAgreements(pobjLine) {
				set blnDisable = $$$YES
			}
			
		} elseif pidField = $$$FldINRequisitionSupplier {
			if '$$$INRequisitionEmergency(pobjLine) && $$RequiresMasterAgreement(pobjLine) {
				set blnDisable = $$$YES
			}
			
		} elseif pidField = $$$FldINRequisitionEmergency {
			// Can only use emergency if we require an ATA, but have none
			if '($$RequiresMasterAgreement(pobjLine) && $$HasNoMasterAgreements(pobjLine)) {
				set blnDisable = $$$YES
			}
		}
	}
 	
 	if blnDisable {
		$$$FIELDPARTIAL
 	}
 	if blnDisable set YHID = 1
	quit blnDisable
	
	
RequiresMasterAgreement(pobjLine)
	;-------------------------------------------------------------------------------
	; Checks if a source line requires a master agreement
	;
	; Params:	pobjLine		: The source line
	;
	; Returns:	blnRequires
	;
	; History:
	; 27-Dec-2006	Steve S	SR15316: Created (Copied from REQUISITIONVAR)
	;-------------------------------------------------------------------------------
	new blnRequires,objManualFields,idLocation
	
	set idLocation = $$$INRequisitionLocation(pobjLine)
	if idLocation'="" { // The location can be blank
		set blnRequires = +$$GetFieldFromDRP^INDRPITEM(idLocation,$$$INRequisitionItem(pobjLine),$$$FldINDRPITEMMasterAgreementRequired)
	} else {
		set blnRequires = $$$NO
	}
	quit blnRequires
	
	
HasNoMasterAgreements(pobjLine)
	;-------------------------------------------------------------------------------
	; Checks if a source line has no master agreements
	;
	; Params:	pobjLine	: The source line
	;
	; Returns:	blnHasNo	: True if there are no agreements for the item in the reqn line
	; 						  or there is no item
	;
	; History:
	; 29-May-2007	RPW		SR15513: Handle missing item information
	; 27-Dec-2006	Steve S	SR15316: Created (Copied from REQUISITIONVAR)
	;-------------------------------------------------------------------------------
	new blnHasNo,idItem
	
	set idItem   = $$$INRequisitionItem(pobjLine)
	set blnHasNo = $$$YES
	
	if idItem'="" {
		set blnHasNo = $data(^INSupMastAgreeItems(0,5,idItem))'=10
	}
	quit blnHasNo
	
	
AssociatedValidation(pstrYFELD,pstrFieldValue,pidAssociated)
	;-------------------------------------------------------------------------------
	; Check if the field is valid based on another field.
	;
	; Inputs:
	; pstrYFELD     : The data for the form
	; pstrFieldValue: The value of the field we are in
	; pidAssociated : The associated field
	;
	; ByRef:
	;
	; Returns:
	; boolean - $$$YES is valid, $$$NO invalid
	;
	; History:
	; 26-Apr-2007	RPW		SRBR014310: Created
	;-------------------------------------------------------------------------------
 	quit $$AssociatedValidation^INReqCommon(pstrYFELD,pstrFieldValue,pidAssociated)
 	
 	
OnDisplayRightClickMenu(pidRequisition="",pobjRequisition="",pstrForm="")
	;-------------------------------------------------------------------------------
	; When the right mouse button is click, allow the user to goto the Agreement Details  
	;
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	;
	; History:
	; 01-Jun-2007	GRF		SR15513: blnEnabled revised & can't have "+" keys
	; 23-May-2007	RPW		SR15513: Created
	;-------------------------------------------------------------------------------
	new blnEnabled,idAgreement,idAgreementKey,idSupplier,lstNewMenuItems,strSupplier
	
	set lstNewMenuItems = ""
	set pidRequisition = $translate($get(pidRequisition),"""")
 
	quit:(pobjRequisition="")||(pidRequisition="") lstNewMenuItems
	
	if (pobjRequisition'="") && (pidRequisition'="") {
		set idSupplier  = $$$INRequisitionSupplier(pobjRequisition)
		set idAgreement = $$$INRequisitionAgreement(pobjRequisition)
		
		if (idSupplier'="") && (idAgreement'="") {
			set strSupplier    = $$$INLIEFShortName($get(^INLIEF(0,idSupplier,1)))
			set idAgreementKey = idSupplier_$$$COMMA_idAgreement
			
			set blnEnabled = ($get(^INSupMastAgree(0,idSupplier,idAgreement,1))'="")
			set lstNewMenuItems = lstNewMenuItems_$listbuild($listbuild("a.gif",$$$Text($listbuild("IN00684",strSupplier,idAgreement)),"CallBack(""ShowAgreement^INReqSourceLine"","""_idAgreementKey_""")",,blnEnabled)) ; Show Demand
		}
	}
	quit lstNewMenuItems
	
	
ShowAgreement(pidAgreeKey="")
	;-------------------------------------------------------------------------------
	; If the user wants to visit this agreement, show them the form.  
	;
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	;
	; History:
	; 23-May-2007	RPW		SR15513: Created
	;-------------------------------------------------------------------------------
	new idAgreement,idSupplier
	
	set idSupplier  = $$$KEY1(pidAgreeKey)
	set idAgreement = $$$KEY2(pidAgreeKey)
 
	if '$$$NoKey(idSupplier) && '$$$NoKey(idAgreement) {
		if $data(^INSupMastAgree(0,idSupplier,idAgreement,1)) {
			do GoToForm^COMUtilForm("INSupMastAgree",pidAgreeKey)
		} else {
			$$$Alert("IN00685")  ; "Agreement no longer exists."
		}
	}
	quit
	
OnBeforeCopy(pstrKey,&pobjLine)
	;-------------------------------------------------------------------------------
	; Handle copying a line
	;
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	;
	; History:
	; 29-May-2007	RPW		SR15513: Created
	;-------------------------------------------------------------------------------
	do OnBeforeCopy^INReqCommon(pstrKey,.pobjLine)
	quit
	
	
OnBeforePrimaryKey()
	;-------------------------------------------------------------------------------
	; Check if the source by date is overdue and if the sourcing location has rejected it
	; 
	; orange = overdue and rejected
	; red = overdue
	; yellow = rejected
	;
	; Inputs:
	;
	; ByRef:
	;
	; Returns:
	;
	; History:
	; 29-May-2007	RPW		SR15513: Created
	;-------------------------------------------------------------------------------
	new dteNow,dteSourceBy,idLocation,objRequisition,strLocationName,blnRejected
 
	set dteNow = +$horolog
	
	set dteSourceBy =  $$$INRequisitionSourceBy(YFELD)
	set idLocation  =  $$$INRequisitionSourcingLocation(YFELD)
	set blnRejected = +$$$INRequisitionRejected(YFELD)
	
	if idLocation="" {
		set strLocationName = ""
	} else {
		set strLocationName = $$$WWW0121LocationName($get(^WWW0121(0,0,idLocation,1)))
	}
	
	if blnRejected && (dteSourceBy<dteNow) {
		set YCOLOFF  = "orange"
		set YTOOLTIP = $$$Text($listbuild("IN00695",$$^WWWDATE(dteSourceBy),strLocationName))
	; "Requisition Overdue %1 and has been rejected by %2."
	
	} elseif dteSourceBy<dteNow {
		set YCOLOFF  = "red"
		set YTOOLTIP = $$$Text($listbuild("IN00696",$$^WWWDATE(dteSourceBy)))  ; "Requisition Overdue %1."
	
	} elseif blnRejected {
		set YCOLOFF  = "yellow"
		set YTOOLTIP = $$$Text($listbuild("IN00697",strLocationName))  ; "Requisition has been rejected by %1."
	}
	quit
	
]]></Routine>
</Export>