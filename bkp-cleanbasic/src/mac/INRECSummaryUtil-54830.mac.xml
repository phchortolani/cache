<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INRECSummaryUtil" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INRECSummaryUtil
	;+++++++++++++++++++++++++++++++++++++++
	; Holding area for calls to INAUFP will be replaced by INPO
	; Pending changeover to INPO
	;+++++++++++++++++++++++++++++++++++++++
	
#include COMSYS
#include INConst
#include %occInclude
#include COMGridEdit31
	
#define LogR(%1,%2) 	;
#define LogR2(%1,%2) 	;
#define LogRx(%1)		;
#define LogR2x(%1)		;
#define LogRm(%1)		;
#;define LogR(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^INRECSummaryUtil("_%2_") : "_$zh $$$JournalOn
#;define LogR2(%1,%2) 	$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))= %1_"^INRECSummaryUtil("_%2_") : "_$zh $$$JournalOn
#;define LogRx(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogR2x(%1)		$$$JournalOff s ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
#;define LogRm(%1)		$$$JournalOff m ^zzLogR($g(YBED,"UNK"),$i(^zzLogR))=%1 $$$JournalOn
	
	
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	;                                       based on INRECSummary
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
UpdateRecQty(&pobjSummary)
	;-------------------------------------------------------------------------------
	; Convert the quantity received as received units (e.g. CTN of 20) into the
	; quantity as inventory units for the item (e.g. EA - Conversion factor of 20)
	; 
	; ByRef :
	;	pobjSummary	- INRECSummary record - updated
	; 
	; History:
	; 25-Jan-2011	GRF		SR17579: set $$$INRECSummaryInventoryUnit from idInventUnit
	; 22-Sep-2009	PPP		SR16903: Check for the existence of Item
	; 03-Aug-2009 	PPP 	SR16815: Updated Qty based on Rec Unit
	;-------------------------------------------------------------------------------
	new fltConv,idInventUnit
	
	$$$LogR2("UpdateRecQty","")
	
	if $$$INRECSummaryItem(pobjSummary)'="" {
		set fltConv = $$GetUOMConversion^INUOMConversion($$$INRECSummaryItem(pobjSummary),$$$INRECSummaryReceivedUnit(pobjSummary),.idInventUnit) 
		set $$$INRECSummaryQuantityReceived(pobjSummary) = $$$INRECSummaryUnitQtyReceived(pobjSummary) * fltConv
		set $$$INRECSummaryInventoryUnit(pobjSummary)    = idInventUnit  ; SR17579
	}
	quit
	
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	;                                       based on Order (INAUF)
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
	
GetObjOrder(pidOrder)
 	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit $get(^INAUF(YM,pidOrder,1))
	
	
GetOrderLocn(pobjOrder)
 	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFLocation(pobjOrder)
	
GetSupplierID(pobjOrder)
	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFSupplierNumber(pobjOrder)
	
	
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	;                                       based on Order Line (INAUFP)
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
	
GetObjOrderLine(pidOrder,pidOrderLine)
 	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit $get(^INAUFP(YM,pidOrder,pidOrderLine,1))
	
	
GetLineSupplier(pobjOrderLine)
	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFPSupplier(pobjOrderLine)
	
	
QtyOrderRemaining(pobjOrderLine)
	;-------------------------------------------------------------------------------
	; in Order Units
	; 
	; Called By : GetRecDetailsForSup^INRECSummaryUtil
	;             CanCreateViaOrderLine^INRECSummary	(Check for negative - unit not important)
	;             LoadLines^INReceiptButton             (removed)
	; 
	; History:
	; 31-Mar-2010	GRF		SR17203: correct heading comment - doesn't return in IU
	; 29-Mar-2010	PPP		SR17203: Reversion REVERTED - IncomingGoodsQuantity is
	; 							based on Order Unit
	; 11-Feb-2010	GRF		SR17138: REVERTED - since IncomingGoodsQuantity is based
	; 							on IU so must subtract from IU-based order qty -
	; 							calling routine must change to OU-based qty if reqd.
	; 10-Feb-2010	GRF		SR17138: Use new Ordered Unit data
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	new fltRemaining
	
	//set fltRemaining = $$$INAUFPQuantity(pobjOrderLine) - $$$INAUFPIncomingGoodsQuantity(pobjOrderLine) ; SR17138 ; SR17203
	set fltRemaining = $$$INAUFPOrderedQuantity(pobjOrderLine) - $$$INAUFPIncomingGoodsQuantity(pobjOrderLine)
	quit fltRemaining
	;---------------------------------------
	;	D5		$$$INAUFPQuantity					Inventory Units
	;	D109	$$$INAUFPIncomingGoodsQuantity		Order Units
	;	D448	$$$INAUFPOrderedQuantity			Order Units
	;---------------------------------------
	
	
QtyReceived(pfltQtyRemain,pobjOrderLine)
	;-------------------------------------------------------------------------------
	; Called By: (None found Jan 2011)
	; 
	; History:
	; 10-Feb-2010	GRF		SR17138: Use new Ordered Unit data
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	new fltConv,fltQtyRecvd
	
	$$$LogR2("QtyReceived","")
	
	;et fltConv = $$GetUOMConversion^INUOMConversion($$$INAUFPItemNumber(pobjOrderLine),$$$INAUFPQuantityUnit(pobjOrderLine)) ; SR17138
	set fltConv = $$GetUOMConversion^INUOMConversion($$$INAUFPItemNumber(pobjOrderLine),$$$INAUFPOrderedUnit(pobjOrderLine))
    set fltQtyRecvd = pfltQtyRemain*fltConv
    quit fltQtyRecvd
	
	
QtyOrdered(pobjOrderLine)
	;-------------------------------------------------------------------------------
	; The purpose of $$$INAUFPQuantity has been changed from Quantity in Order Unit
	; to Quantity in Inventory Unit since different processes were interpreting it
	; as each.
	; 
	; History:
	; 10-Feb-2010	GRF		SR17138 : Use new Qty Ordered data
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit +$$$INAUFPOrderedQuantity(pobjOrderLine)
	;quit +$$$INAUFPQuantity(pobjOrderLine)  ; SR17138
	
	
InvQtyOrdered(pobjOrderLine)
	;-------------------------------------------------------------------------------
	; The purpose of $$$INAUFPQuantity has been changed from Quantity in Order Unit
	; to Quantity in Inventory Unit since different processes were interpreting it
	; as each.
	; 
	; History:
	; 10-Feb-2010	GRF		SR17138: Created to use inventory-based Qty Ordered
	;-------------------------------------------------------------------------------
	quit +$$$INAUFPQuantity(pobjOrderLine)
	
	/*
QtyUnit(pobjOrderLine) ; DEPRECATED - use OrderUnit or Inventory Unit instead
 	;-------------------------------------------------------------------------------
	; The purpose of $$$INAUFPQuantityUnit has been changed from Order Unit to
	; Inventory Unit since different processes were interpreting it as each.
	; 
	; Separate functions have been prepared to identify what is actually being
	; referred to.
	; 
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
    quit $$$INAUFPQuantityUnit(pobjOrderLine)
	*/
	
OrderUnit(pobjOrderLine)
 	;-------------------------------------------------------------------------------
	; Return the new Order Unit
	; 
	; History:
	; 10-Feb-2010	GRF		SR17138: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFPOrderedUnit(pobjOrderLine)
	
	
InventoryUnit(pobjOrderLine)
 	;-------------------------------------------------------------------------------
 	; Return the Inventory Unit
 	; 
	; History:
	; 10-Feb-2010	GRF		SR17138: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFPQuantityUnit(pobjOrderLine)
	
	
IsCompleted(pobjOrderLine)	
 	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit ''$$$INAUFPPosCompleted(pobjOrderLine)	
	
	
GetOrderLineItem(pobjOrderLine)
 	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFPItemNumber(pobjOrderLine)
	
	
GetQAStore(pobjOrderLine)
 	;-------------------------------------------------------------------------------
	; History:
	; 07-Aug-2009	DWR		SR16822: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFPQualityControl(pobjOrderLine)
	
	
GetRecInOrderUnits(pidOrder,pidOrderLine,pfltQtyRec)
 	;-------------------------------------------------------------------------------
 	; Get the Rec Quantity in Order Units
 	;
 	;
	; History:
	; 10-Mar-2010	GRF		SR17203: INAUFP D40 purpose was changed to always be
	; 							Inventory Unit while actual Order Unit was stored in
	; 							new D449 - this subroutine was not updated.
	; 01-Sep-2009	DWR		SR16857: changed the check of pidOrder was (pidOrder='"")
	; 07-Aug-2009	PPP		SR16815: Created
	;-------------------------------------------------------------------------------	
	new fltConv,fltQty,objOrderLine
	
	$$$LogR2("GetRecInOrderUnits",pidOrder_","_pidOrderLine)
	set fltQty = pfltQtyRec
	
	if (pidOrder'="") && (pidOrderLine'="") {
		set objOrderLine = $get(^INAUFP(YM,pidOrder,pidOrderLine,1))	
		
	;	set fltConv = $$GetUOMConversion^INUOMConversion($$$INAUFPItemNumber(objOrderLine),$$$INAUFPQuantityUnit(objOrderLine)) ; SR17203
		set fltConv = $$GetUOMConversion^INUOMConversion($$$INAUFPItemNumber(objOrderLine),$$$INAUFPOrderedUnit(objOrderLine))
		if fltConv set fltQty = pfltQtyRec/fltConv
	}
	
	quit fltQty
	
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	;                                       Order and Item Supplier (INAUFP, INARTK)
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
GetRecDetailsForSup(pidOrder,pidOrderLine,pobjOrderLine="")
	;-------------------------------------------------------------------------------
	; Given the Purchase Order Line ie Order Qty, Order Unit
	;
	; ***  	This is because the Old PO does not allow entry of any other unit other that
	; 		the Supplier's Unit.  This functions mimics the entry of the Supplier's Unit
	;		when Receiving.  This however is temporary and should be removed when the new
	;		PO's will be used. FIXME 05-Aug-2009 ***
	;
	; For e.g.
	; Item Inventory Unit 	- EA	($5.00)
	; Supplier's Unit 		- BOX	($95.00)
	; Conversion			- 1 BOX = 10 EA (as defined in INARTPACK) *** NOT INARTK ***
	; P/O Unit				- EA
	; P/O Quantity			- 20 EA
	; = Return				- 2, BOX, 95.00 (only if the Receipt is for the Current Supplier)
	;
	; Called by:	SelectOrder^INReceiptButton, CreateLine^INRECLine
	; 
	; Returns:		Order Qty in Supplier's Units, Supplier's Unit & Supp Unit Cost
	; 
	; History:
	; 29-Mar-2010	PPP		SR17203: $$QtyOrderRemaining has to be based on
	; 							Order Unit - reverted SR17138
	; 11-Feb-2010	GRF		SR17138: $$QtyOrderRemaining has to be based on
	; 							Inventory Unit so needed to convert to OU-based qty;
	; 							relocate fltConvOrder
	; 10-Feb-2010	GRF		SR17138: Use new Ordered Unit data; correct "/" for cost
	; 							conversion
	; 09-Feb-2010	GRF		SR17149: Don't get cost from INARTK (refer to Receiving
	; 							Unit rather than Order Unit)
	; 28-Aug-2009	GRF		SR16815: needed to convert order qty to inventory units
	;							before converting to qty in supplier units; * rather
	;							than / for fltOrdQty
	; 13-Aug-2009	PPP		SR16837: Moved here
	; 07-Aug-2009	DWR		SR16822: created call outs to INRECSummaryUtil to get
	; 							order details
	; 05-Aug-2009	PPP		SR16815: Created
	;-------------------------------------------------------------------------------
	new fltConv,fltConvOrder,fltConvSupp,fltCost,fltOrdQty,fltSupCost
	new idItem,idOrdUnit,idRecUnit,idSupplier,idSupUnit,objItemSup
	
	$$$LogR2("GetRecDetailsForSup",pidOrder_","_pidOrderLine)
	
	if (pobjOrderLine = "") && (pidOrder'="") && (pidOrderLine'="") {
		set pobjOrderLine = $$GetObjOrderLine(pidOrder,pidOrderLine)
	}
	set idItem       = $$GetOrderLineItem(pobjOrderLine)
	set idSupplier   = $$GetLineSupplier(pobjOrderLine)
	;et idOrdUnit    = $$QtyUnit(pobjOrderLine)              ; Order Unit  ; SR17138
	set idOrdUnit    = $$OrderUnit(pobjOrderLine)            ; Order Unit
	set fltOrdQty    = $$QtyOrderRemaining(pobjOrderLine)    ; Already in Order units
	set fltConvOrder = $$GetUOMConversion^INUOMConversion(idItem,idOrdUnit)         ; SR17138 11-Feb-2010
	
	//SR17203 (reverted)
	//set fltOrdQty  = fltOrdQty / fltConvOrder              ; now in order units   ; SR17138 11-Feb-2010
	set idRecUnit    = idOrdUnit                             ; Initially Receive in Order Unit ; SR17149
	
	// The Unit on FINAPInvCache is the Order Unit
	set fltCost    = $$GetUnitCost^FINAPInvMatchCache(pidOrder,pidOrderLine)
	;---------------------------------------
	; FIXME : If an order line is received as multiple lines at different costs,
	;         then this function only returns the cost for the first FINAPInvMatchCache
	;         record matching order details
	;         e.g. Order 100 - supplier only has 80 and supplies 20 inferior items at
	;         cheaper price - spread to multiple storages
	;              INAUFP              100
	;              INRECSupplier       80 @ $16, 20 @ $9
	;              INRECLine           50 => 1||A, 30 => 1||B, 15 => 1||C, 5 => 1||D
	;              FINAPInvMatchCache  50 @ $16,   30 @ $16,   15 @ $9,    5 @ $9
	;              $$GetUnitCost shows $16 for all 4 records
	; When called from CreateIssueLine^INReturnToSupplier already have pidInvMatch - can get actual receipt cost details
	;---------------------------------------
		
	set objItemSup = $get(^INARTK(0,idItem,idSupplier,1))
	; FIXME : Should we get details from editable INAUFPK(Order,OrderLine,Supp)
	;         which is initially built from INARTK?  Can override unit or price <GRF>
	; ANSWER : Not to be changed since new PO will operate differently.        
	
	if objItemSup'="" {
		set idSupUnit = $$$INARTKDeliveryQuantityUnit(objItemSup)
		
		if idSupUnit'="" {  ; 1 XXX Unit = fltConv### Inventory Units
	;		set fltConvOrder = $$GetUOMConversion^INUOMConversion(idItem,idOrdUnit)  ; e.g. PACK = 48 Each  ; SR17138 11-Feb-2010 moved up
			set fltConvSupp  = $$GetUOMConversion^INUOMConversion(idItem,idSupUnit)  ; e.g. BOX  = 12 Each
			
			; 1 Order Unit = fltConv Supplier Units   ; e.g. PACK = 4 BOXes  (48/12)
			set fltConv = fltConvOrder/fltConvSupp
			
			/* SR17149 vvv
			if fltConv {
				set fltOrdQty  = fltOrdQty*fltConv    ; SR16815
				set idOrdUnit  = idSupUnit
				set fltSupCost = $$$INARTKUnitPrice(objItemSup)
				
				if 'fltSupCost {
					set fltCost = fltCost*fltConv
				} else {
					set fltCost = fltSupCost
				}
			}
			*/
			set idRecUnit = idSupUnit
			set fltOrdQty = fltOrdQty * fltConv
			set fltCost   = fltCost   / fltConv     ; SR17149 ^^^
		}
	}
	
	quit fltOrdQty_Y_idRecUnit_Y_+$justify(fltCost,0,$$DPforInventoryCost^INVORG())
	;quit fltOrdQty_Y_idOrdUnit_Y_+$justify(fltCost,0,$$DPforInventoryCost^INVORG())  ; SR17149
	
	
	;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
	
GetUnitCostBasedOnOrderCost(pidItem,pidOrder,pidOrderLine,pidNewUnit,&pfltCost)
	// TO BE USED IF THE RECEIVED UNIT HAS TO BE DIFFERENT THAN THE ORDER UNIT
	// i.e. it can be changed on the INRECSummary record
	;-------------------------------------------------------------------------------
	; Given the new Unit, get the Unit Cost based on the Order Cost & Conversion
	;
	; Inputs:
	;	Item
	;	Order
	;	Order Line
	;	Changed Unit Id
	;	Current Unit Cost (BY REF)
	;
	; Returns: Nothing
	;
	; History:
	; 10-Feb-2010	GRF		SR17138: Use new Ordered Unit data
	; 17-Aug-2009	PPP		SR16837: Created
	;-------------------------------------------------------------------------------
	new fltConv,fltOrdCost,idOrdUnit,objOrderLine
	
	$$$LogR2("GetUnitCostBasedOnOrderCost",pidOrder_","_pidOrderLine_":"_pidItem_":"_pidNewUnit)
	
	set objOrderLine = $$GetObjOrderLine(pidOrder,pidOrderLine)
	;et idOrdUnit    = $$QtyUnit(objOrderLine)       ; SR17138
	set idOrdUnit    = $$OrderUnit(objOrderLine)     ; Order Unit
	
	if pidNewUnit'="" {
		// The Unit on FINAPInvCache is the Order Unit
		set fltOrdCost = $$GetUnitCost^FINAPInvMatchCache(pidOrder,pidOrderLine)
		set fltConv    = $$GetUOMConvBetweenUnits^INUOMConversion(pidItem,idOrdUnit,pidNewUnit)
		//write !,idOrdUnit,":",fltConv,":",fltOrdCost
		if fltConv {
			set pfltCost = +$justify(fltOrdCost*fltConv,0,$$DPforInventoryCost^INVORG())
		}
	}
	quit
	
	;******************************************
	; Required for INFINInterface
	;******************************************
	
GetCustomerNo(pobjOrder)
	;-------------------------------------------------------------------------------
	; History:
	; 17-Sep-2009	DWR 	SR16880: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFCustomerNumber(pobjOrder)
	
GetOrderType(pobjOrder)
	;-------------------------------------------------------------------------------
	; History:
	; 17-Sep-2009	DWR 	SR16880: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFOrderType(pobjOrder)
	
GetOrderPostChars(pobjOrder)
	;-------------------------------------------------------------------------------
	; History:
	; 17-Sep-2009	DWR 	SR16880: Created
	;-------------------------------------------------------------------------------
	quit $$$INAUFPostingCharacteristic1(pobjOrder)_Y_$$$INAUFPostingCharacteristic2(pobjOrder)
	

]]></Routine>
</Export>