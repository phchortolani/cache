<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INAUFMENGE" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INAUFMENGE(ART,BETR,RET,ALL,TRANSIT) 
	
#include COMSYS
#include INConst
	
	;-------------------------------------------------------------------------------
	; Description of Function :
	;		RESERVIERTE LAGERMENGE EINES ARTIKELS
	;		(RESERVED STOCK QUANTITY OF AN ARTICLE)
	;
	; History:
	; 30-Jan-2007	Steve S		SR15374: Created
	;-------------------------------------------------------------------------------
	quit $$GetQty($get(ART),$get(BETR),$get(RET,$$$NO),$get(ALL,$$$NO),$get(TRANSIT,$$$NO))
	
	
GetQty(pidItem,pidLocn="",pblnTotal=$$$NO,pblnAll=$$$NO,pblnTransit=$$$NO)
	/*------------------------------------------------------------------------------
	; Description of Function :
	;		RESERVIERTE LAGERMENGE EINES ARTIKELS
	;		(RESERVED STOCK QUANTITY OF AN ARTICLE)
	;
	; SET MENGE=$$^INAUFMENGE(123)     ; ERFASSTE AUFTRAGSMENGE (KEIN LF-BEST)
	; SET MENGE=$$^INAUFMENGE(123,1)   ; BESTELLMENGE OHNE WE (IN TRANSIT) BEI LF-BEST FÜR BETRIEB 1
	;                                    -> SPEICHERUNG IN WWWSOR(YUSER,BETR,9)                              
	; pidItem				The item number
	; pidLocn				Location code
	; 
	; pblnTotal 	bln		RÜCKGABE DER MENGE (OHNE SPEICHERUNG IN WWWSOR) ;Return Total Quantity?
	; 
	; pblnAll		bln		AUCH NICHT GEDRUCKTE BESTELLUNGEN (ALSO NOT PRINTED ORDERS)
	; 						If $$$YES, checks all order lines.
	; 						If $$$NO, only include order lines which are printed.
	; 
	; pblnTransit	bln		ONLY WHEN IN TRANSIT;FIS;SR12896;13.07.05
	; 
	; Inputs : 
	;
	;
	; ByRef :
	;
	; Returns :
	;	Quantity (?)
	;
	; History :
	; 20-Nov-2009	PPP		SR17050 : Rewote removing INWEAUF and simple INAUF (no INTRANSIT qty)
	; 30-Jan-2007	Steve S	SR15374: Rewrote to brace syntax
	; 								 Simplified conditions, macro usage, general clean up
	; 18-Dec-2006	GRF		SR15312: doco
	; 20-Jan-2006	GRF		SR14074 : doco; garbage global removed
	; 13.Jul.2005	FIS		CORRECTED QTY IN-TRANSIT	SR12896
	; 03.May.2001	FIS		
	;-----------------------------------------------------------------------------*/
	new fltQty,fltTotalQty,idOrder,objINAUF,idLineItem,objINAUFP
	new idLoc,idBin,dteRec,objRec,idxItem,idxNo,enmOrderType
	
	set fltQty		= 0
	set fltTotalQty	= 0
	
	quit:($get(pidItem)="") 0 // no item
	
	//SR17050
	/*
	// no location
	if $get(pidLocn)="" {
		$$$Order2(^INWEAUF,YM,idOrder)
			set objINAUF = $get(^INAUF(YM,idOrder,1))
			continue:($$$INAUFOrderType(objINAUF)=2) // purchase order
			
			$$$Order3(^INWEAUF,YM,idOrder,idLineItem)
				set objINAUFP = $get(^INAUFP(YM,idOrder,idLineItem,1))
				continue:($$$INAUFPItemNumber(objINAUFP)'=pidItem) // no item match
				
				$$$Order4(^INWEAUF,YM,idOrder,idLineItem,idLoc)
					$$$Order5(^INWEAUF,YM,idOrder,idLineItem,idLoc,idBin)
						$$$Order6(^INWEAUF,YM,idOrder,idLineItem,idLoc,idBin,dteRec)
							set objRec = $get(^INWEAUF(YM,idOrder,idLineItem,idLoc,idBin,dteRec,1))
							set fltQty = fltQty + $$$INWEAUFIncomingGoodsQuantity(objRec)
						$$$End
					$$$End
				$$$End
			$$$End
		$$$End
	} else {
	*/
	
	set idxItem = $$$Index(pidItem)
	for idxNo = $$$ANINO,$$$NO {
		$$$Order5(^INAUFPs,YM,5,idxNo,idxItem,idOrder)
			continue:'$data(^INAUF1(YM,idOrder)) // not in open orders
			
			set objINAUF 		= $get(^INAUF(YM,idOrder,1))
			set enmOrderType 	= +$$$INAUFOrderType(objINAUF)
	
			if pidLocn'="" {   //SR17050
				continue:($$$INAUFLocation(objINAUF)'=pidLocn) // no location match
			}
			continue:($$$INAUFConsignment(objINAUF)'="")   // consignment
			
			$$$Order6(^INAUFPs,YM,5,idxNo,idxItem,idOrder,idLineItem)
				set objINAUFP = $get(^INAUFP(YM,idOrder,idLineItem,1))
				
				continue:$$$INAUFPPosCompleted(objINAUFP)	// no longer opened
				continue:$$$INAUFPCancellation(objINAUFP)	// cancelled
				
				// Check if just looking at printed orders
				continue:('pblnAll)&&($$$INAUFPOrderPrintedDate(objINAUFP)="")
				
				// purchase order or cust. order from stock
				//if (enmOrderType=2)||((enmOrderType=0)&&($$$INAUFPSource(objINAUFP)=1)) {
				
				//SR17050
				if (enmOrderType=2) {
					
					set fltQty = $$$INAUFPQuantity(objINAUFP)-$$$INAUFPIncomingGoodsQuantity(objINAUFP)
			
					//SR17050
					/*
					if pblnTransit && $data(^INWEAUF(YM,idOrder,idLineItem)) {
						$$$Order5(^INWEAUF,YM,idOrder,idLineItem,pidLocn,idBin)
							$$$Order6(^INWEAUF,YM,idOrder,idLineItem,pidLocn,idBin,dteRec)
								set objRec = $get(^INWEAUF(YM,idOrder,idLineItem,pidLocn,idBin,dteRec,1))
								set fltQty = fltQty - $$$INWEAUFIncomingGoodsQuantity(objRec)
							$$$End
						$$$End
					}
					*/
					
					if (fltQty<0) set fltQty=0
				
				}
				
				if pblnTotal {
					set fltTotalQty = fltTotalQty + fltQty
					//write !,idOrder,":",fltQty,":",fltTotalQty
					continue
				}

				set:pidLocn="" pidLocn = " "
				set ^WWWSOR(YUSER,pidLocn,9)=$get(^WWWSOR(YUSER,pidLocn,9)) + fltQty
				
			$$$End
		$$$End	
	}
	
	//}
 
	if pblnTotal set fltQty = fltTotalQty
	
	quit fltQty

]]></Routine>
</Export>