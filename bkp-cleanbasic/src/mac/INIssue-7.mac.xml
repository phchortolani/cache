<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INIssue" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INIssue
	
#include COMSYS
#include COMConst
#include INConst
#include COMGridEdit31
#include %occInclude
	
#define DELIM	$char(31)
	
	;-------------------------------------------------------------------------------
	; 16-Feb-2010	shobby	SR17184 Class/Form changed (Do Not remove comment)
	;-------------------------------------------------------------------------------
	
	;+++++++++++++++++++++++++++++++++++++++
	;	Form : INIssue
	;	
	;	Before Button Line			: do OnBeforeButtonLine^INIssue(YM,YFORM,YKEY,YFELD)
	;	After Primary Key			: do OnAfterPrimaryKey^INIssue(YM,YFORM,YSEITE,YKEY,.YFELD,.YVOR)
	;	After Data Fields			: do OnAfterDataFields^INIssue(YM,YFORM,YSEITE,YKEY,YFELD)
	;	Before Delete Possibility	: do IsDeletable^INIssue(YM,YFORM,YKEY,YFELD)
	;	
	;	Buttons
	;	  Firm						: do IsFirmable^INIssue(YM,YFORM,YKEY,YFELD)
	;								: do FirmIssue^INIssue(YM,YFORM,$g(YKEY),$g(YFELD))
	;	  Print Worksheet			: -
	;	  Print Pick List			: do CanPrint^INIssue(YM,YFORM,YKEY,YFELD)
	;								: do PrintPickList^INIssuePrint(YKEY)     [ YAUSWAHL ]
	;	  Manually Close			: do IsManuallyClosable^INIssue(YM,YFORM,$get(YKEY),$get(YFELD))
	;								: do ManuallyClose^INIssue(YM,YFORM,$get(YKEY),$get(YFELD))
	;	
	;	Class
	;	  Data Access				: $$OnDataAccess^INIssue(YKEY,YFORM)
	;
	;	Dynamic Table				: ShowItems^INIssueTable
	;+++++++++++++++++++++++++++++++++++++++
	
OnBeforeFormConstruction()
	;-------------------------------------------------------------------------------
	; On Before from construction
	; 
	; 
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 04-Apr-2013	SCR		HEVA-811: Set YPARA to show buttons when 'Review & Pick'
	;-------------------------------------------------------------------------------
	new idIssue
	
	set idIssue = $select(YKEY'="":YKEY,1:$get(%("%KEY","YBKEY"))) ; HEVA-811
	set YPARA 	= '$$HideTab1^INIssueSummary(idIssue) ; HEVA-811
	set YOPTION1 = '$$DisableProgramFunctionality^INVORG()	;SR17034
	quit
	
	
OnFilter(YKEY,YFELD,YFORM="")
	;-------------------------------------------------------------------------------
	; Restricts the list of records that are visible to a particular form.
	; 
	; Called By: Class Hook for Class INIssue (On Filter Event)
	; 
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 13-Aug-2009	shobby	SR16791: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$$OK
	if YFORM="INDispenseToPatient" {
		if $$$INIssueType(YFELD)=5 {
			set strStatus = $$$NO
		}
	}
	quit strStatus
	
	
IsEditable(pidIssue) 
	;-------------------------------------------------------------------------------
	; Is form editable (unprocessed) ?
	;
	; Params:	pidIssue		Issue id
	;
	; Returns:	status
	;
	; History:
	; 04-Jun-2009	PPP		SR16544: Not editable if it is Prepared
	; 06-May-2008	HQN		SR15703: Now is not editable if it is active pending
	; 19-Oct-2007	HQN		SR15696: Copied from Editable^INMOV()
	;-------------------------------------------------------------------------------
	new blnOK,objIssue
	
	set blnOK = $$$YES
	set objIssue = ##class(alISS.dUIssue).%OpenId("0||"_pidIssue)
	if (objIssue '= $$$NULLOREF) {
		if (objIssue.Status.StatusCode = 4) ||
		   (objIssue.Status.StatusCode = 7) ||
		   (objIssue.Status.StatusCode = 8) ||
		   (objIssue.Status.StatusCode = 9)    {
			
			set blnOK = $$$NO
		}
	}
	quit blnOK
	

IsEnable()
	new blnOK
	set blnOK = $$$YES
	if (+$$$WWWClientParamCoreChangesSESDF($get(^WWWClientParam(YM,YM,1)))) {
		set blnOK = $$OnBeforeEditAccess^VARSESCONSUMOPACIENTE()
	}	
	quit blnOK

	
IsDeletable(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Description : Determines if the delete button should be disabled
	;			
	; Called By : INIssue FORMSPEC
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 18-Dec-2007	HQN		Removed Active/Pnd as a deletable state
	; 11-Dec-2007	HQN		Code cleanup, added new[s]
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new blnStatus
	
	set blnStatus = ($$$INIssueStatus(pYFELD) = 1)   ; open
	$$$YQHandler(blnStatus)
	quit
	
OnDelete(pidIssue)
	;-------------------------------------------------------------------------------
	; Description : Remove Reservations
	;			
	; Called By : INIssue FORMSPEC
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 17-Jun-2013	SCR		CORE-94: Created
	;-------------------------------------------------------------------------------
	do ClearReservation^INReservation(pidIssue,11) 
	
	quit
	
IsFirmable(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Description : Determines if Button should be enabled
	;			
	; Called By : INIssue FORMSPEC - Button(1) FirmIssue
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns : Boolean
	;
	; History :
	; 06-Mar-2013	SCR		HEVA-811: If 'Review & Pick' check for 'Pick'
	; 05-Mar-2013	SCR		HEVA-811: If 'Review & Pick' check that the QTYs match
	; 31-Jul-2008	Luke	SR15814: Change Status logic to reflect %Status 
	; 24-Jan-2008	HQN		SR15625: Changed class signature dINIssue to dUIssue
	; 11-Dec-2007	HQN		Code cleanup, added new[s]
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	new objIssue,sc,strStatus
	
	set sc        = $$$OK
	set strStatus = $$$OK
	set objIssue  = ##class(alISS.dUIssue).GetInstance("0||"_pstrKey)

	if ($IsObject(objIssue)) {
		if $$Review^INIssueSummary(pstrKey) {
			if objIssue.PickTimestamp = "" {
				set strStatus= $$$Text("IN01402")  ;Pick List hasn't been created
			}
		}
		if strStatus = $$$OK {
			set sc = objIssue.IsFirmable()
			set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc,$$$NO) 
		}
		;set sc = objIssue.IsFirmable()
		;set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc,$$$NO) 
	}
	; HEVA-811 vvvv
	if strStatus = $$$OK { 
		if $$Review^INIssueSummary(pstrKey) {
			set strStatus = $$CheckQty^INIssueSummary(pstrKey)
		} else {
			set strStatus = $$CheckQty^INReqIssue(pstrKey)
		}
	}
	; HEVA-811 ^^^^
	$$$YQHandler(strStatus)
	quit
	
	
IsManuallyClosable(pYM=0,pYFORM,pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; History:
	; 06-Mar-2009	GRF		Correct error variable - strStatus & blnClosable, not sc
	; 04-Apr-2008	GRF		SR15625: Processing sequence
	; 24-Jan-2008	HQN		SR15625: Changed class signature dINIssue to dUIssue
	;-------------------------------------------------------------------------------
	new blnClosable,objIssue,strStatus
	
	set strStatus = $$$YES
	if YLOCATION '= $$$INIssueFromLocn(pYFELD) {
		set strStatus = $$$MakeStatus("INISS02")        ; "Issue not owned by this Location"
	
	} else {
		set objIssue = ##class(alISS.dUIssue).%OpenId("0||"_pYKEY)
		if objIssue = $$$NULLOREF {
			set blnClosable = $$$NO
		} else {
			set blnClosable = objIssue.IsClosable()     ; returns a %Boolean
		}
		
		if 'blnClosable {
			set strStatus = $$$MakeStatus("INISS01")    ; "Cannot Close the Issue" 
		}
	}
	
	$$$YQHandler(strStatus)
	
	quit strStatus
	
	
CanPrint(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Description : Determines if Button should be enabled
	;			
	; Called By : INIssue FORMSPEC - Button(2) PickList
	;
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 13-Dec-2007	PPP		Created
	;-------------------------------------------------------------------------------
	new blnStatus
	
	set blnStatus = ($$$INIssueStatus(pYFELD) = 1)   ; Open
	
	$$$YQHandler(blnStatus)
	quit
	
	
OnBeforeButtonLine(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 04-Jun-2009	PPP		SR16544 : set YOPTION based on REQ type
	; 17-Oct-2007	HQN		SR15598 : Created
	;-------------------------------------------------------------------------------
	if '$$$NoKey(pstrKey) {
	;	if $$$INIssueType(pYFELD) = 4 set YOPTION = 4
		set YOPTION = $$$INIssueType(pYFELD)
	}
	quit  
	
	
OnAfterPrimaryKey(pYM,pYFORM,pYSEITE,pstrKey,&pYFELD,&pobjForm)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 13-Aug-2009	GRF		Macro
	; 30-Nov-2007	HQN		Created
	;-------------------------------------------------------------------------------
	; code sanitisation, shouldn't ever get to this state because of Garbage In filters!
	if $$$INIssueFromLocn(pYFELD) '= YLOCATION {
		set $$$WWW120AuthorizationToModifyData(pobjForm) = $$$EnumReadOnly
	}
	if $$$INIssueFREE11(pYFELD) = 1 {
		set $$$WWW120AuthorizationToModifyData(pobjForm) = $$$EnumReadOnly
	}
	quit
	
	
OnAfterDataFields(pYM,pYFORM,pYSEITE,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; 	Show Grid below form if on first tab
	;			
	; Called By :
	;		
	; Inputs : 
	; 	^CacheTemp(YUSER,"Grid","ContainsBundles") Value is set in OnLineAdded^INIssueLine()
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 22-Mar-2010	shobby	SR17228: Showing of grid is automatic if configured in
	; 							Form metadata.
	; 22-Dec-2009	GRF		SR17085: Show reversals for an issue
	; 02-May-2008	HQN		Handle Hiding Bundle if not dev
	; 01-May-2008	HQN		SR15703: After rendering grid, hide the Bundles Column
	; 							if all records are BlankPolicy(Attribute Count = 0)
	; 11-Dec-2007	GRF		Allow for form INIssueView
	; 17-Oct-2007	HQN		SR15598 : Created
	;-------------------------------------------------------------------------------
	
	if (pYSEITE = 1) && (pstrKey '= "") {
	;SR17228 do ShowGrid(pstrKey,pYFELD,pYFORM)
	;SR17228 set YOPTION("ContainsBundles") = $$$NO 
		
		// Hide Bundle Values Column if All Entries are BlankPolicy
	;SR17228 if YOPTION("ContainsBundles") = $$$NO {
		if '$get(^CacheTemp(YUSER,"Grid","ContainsBundles")) {
			$$$StartScript()
			$$$GRIDHideShowColumns(11)      ; F11 Lot No. (Bundle Values)
			$$$EndScript()
		}
	}
	if ($$$INIssueStatus(pYFELD)>1) {	  ; not Open		;SR17085
		do ShowReversedTable^INReqShowIssue(pstrKey)
	}
	quit
	
	
Enabled(YFELD)	;SR17228
	;-------------------------------------------------------------------------------
	; Called By : Form INIssue/INIssueView : Grid Tab (COMGridEditParameter)
	;-------------------------------------------------------------------------------
	quit ($$$INIssueStatus(YFELD) = 1)
	
	
FirmIssue(pYM,pYFORM,pstrKey,pYFELD)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Params:
	;	pYM			Company
	;	pYFORM		Form ID
	;	pstrKey		Data key
	;	pYFELD		Included for standard interface
	;
	; ByRef :
	;	YQ
	;	
	; Returns :
	;
	; History :
	; 17-Feb-2010	shobby	SR17186: ReloadForm correction.
    ; 29-May-2009	PPP		SR16586: Simplify Process (remove unnecessary calls to
    ; 							Script Engine/State Engine)
	; 07-Aug-2008	Luke	SR15814: Reverted changes 
	; 31-Jul-2008	Luke	SR15814: Change Status blnStatus to sc, add strStatus
	; 31-Mar-2008	HQN		SR15625: Decode Cache Object error for more readablility
	; 11-Dec-2007	HQN		Code cleanup, added new[s]
	; 15-Nov-2007	LB		SR15598 : add calls to Status engine(ExecuteStatus)
	; 17-Oct-2007	HQN		SR15598 : Created
	;-------------------------------------------------------------------------------
	/*
	new blnStatus,strStatus
	
	set strStatus = $$$OK
	//set blnStatus = $$ExecuteStatus(pYFORM,0,pstrKey,"Firm") 
	//set strStatus = $$ExecuteRule(pYFORM,0,pstrKey,"Firm") 
	
	if $$$ISOK(strStatus) {
		do ^WWWFORM
	} else {
		do ReturnError^COMUtilError(strStatus)
	}
	$$$YQHandler(strStatus)
	*/
	
	new objIssue,strStatus
	
	set objIssue = $get(^INIssue(0,pstrKey,1))
	set strStatus = $$$OK
	
	//Open/Partial Fulfilled
	if ($$$INIssueStatus(objIssue)'=1) && ($$$INIssueStatus(objIssue)'=7) {
		set strStatus = $$$MakeStatus("INREQ05")      ; "Requisition is not Outstanding"
	}
	
	if $$$ISOK(strStatus) {	
		set strStatus = $$Transaction^COMTransaction("FirmTxn^INIssue("""_pstrKey_""")",$$$YES)
	}
	
  	if $$$ISOK(strStatus) {
	 	;do ^WWWFORM						;SR17186
	 	do ReloadForm^COMUtilForm()			;SR17186
 	} else {
	 	;do ReturnError^COMUtilError(strStatus)
 	}
	
 	$$$YQHandler(strStatus)
	quit
	
	
FirmTxn(pidIssue)
	;-------------------------------------------------------------------------------
	; Firms the Issue
	; 
	; Called By :
	; 	Form - INReq
	; 	Routines -
	; 		Button from INReq form
	;		
	; Inputs : 
	;	reqId 		- 	%Id of INIssue instance
	;
	; ByRef :
	;
	; Returns :
	;
	; History :	
	; 17-Jun-2013	SCR		CORE-94: Clear Reservations
	; 21-Aug-2012	PPP		SR18081: Added processing from Req cancellation of remainders
    ; 09-Jul-2010	PPP  	SR17420: Update the Cost on the Line at Post
    ; 29-May-2009	PPP		SR16586: Simplify Process (remove unnecessary calls to
    ; 							Script Engine/State Engine)
	;-------------------------------------------------------------------------------
	new objIssue,sc,strStatus
	
	set (strStatus,sc) = $$$OK
	//SR17420
	if $$$ISOK(strStatus) {
			set strStatus = $$UpdateCostOnLines^INDispenseToPatient(pidIssue)
	}
	
	; 			; CORE-94 vvvv
	if $$$ISOK(strStatus) {
		do ClearReservation^INReservation(pidIssue,11) 
	}	
	; 			; CORE-94 ^^^^
	if $$$ISOK(strStatus) {
		set objIssue = ##class(alISS.dUIssue).GetInstance("0||"_pidIssue)
	
		if objIssue'= $$$NULLOREF {

	 		set sc = objIssue.FirmIssue() 

			if $$$ISOK(sc) {
				set sc= objIssue.%Save()
			}
	 		do objIssue.%Close()

			//SR18081
			if $$$ISOK(sc) {
				set strStatus = $$UpdateReqRemainder^INIssueAuto(pidIssue)
			}
			
			//HEVA-1142
			if $$$ISOK(sc) {
				set strStatus = $$UpdateStatusIfFullFill^INIssueAuto(pidIssue)
			}

		}

 		if $$$ISERR(sc) set strStatus = $$ISStatusToDLStatus^COMUtilError(sc,$$$NO)
	}

 	quit strStatus
	
	
ManuallyClose(pYM=0,pYFORM,pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	; ByRef :
	;	YQ
	;	
	; Returns : sc
	;
	; History :
	; 13-Nov-2018	SCR		HEVA-1265: Close Reservations
	; 31-Jul-2008	Luke	SR15814: correct the logic use of the Status
	; 01-Apr-2008	HQN		Corrected error return
	; 24-Jan-2008	HQN		SR15625 Changed class signature dINIssue to dUIssue
	;-------------------------------------------------------------------------------
	new objIssue,sc,strStatus
	
	set objIssue = ##class(alISS.dUIssue).GetInstance("0||"_pYKEY)
	set sc = $$$OK
	
	set strStatus = $$$OK  //SR15814:
	if objIssue '= $$$NULLOREF {
		set sc = objIssue.ManuallyClose()
	 	set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc) ; SR15814:
	}
	if $$$ISOK(strStatus) {
		do ClearReservation^INReservation(pYKEY,11) ; HEVA-1265
	}
	if $$$ISOK(strStatus) {
		do ^WWWFORM
	} else {
		do ReturnError^COMUtilError(strStatus)		
	}
	
	$$$YQHandler(strStatus)
	quit sc
	
	
OnDataAccess(pidIss,pidForm)
	;-------------------------------------------------------------------------------
	; Whether a Issue can be used at this time.
	;
	; Params:	pidReq
	;			Form
	;
	; Returns: blnDataAccess
	;	$$$NO		Req is Not Accessable
	;	$$$YES		Req is Accessable
	;
	; History:
	; 23-Sep-2013	SCR		CORE-93: Allow Issue Reverse Access
	; 20-Jul-2009	DWR		SR16761: Return to Stock INIssueRev was not showing the 
	; 							INIssue records because the status is 8-9 form
	; 							complete and it needs to show From Locn not ToLocn.
	; 11-Dec-2007	PPP		SR15600: Created
	;-------------------------------------------------------------------------------
	new blnDataAccess,objIss
	
	set blnDataAccess = $$$YES
	
	if ($get(pidIss)'="") && ($extract(pidForm,1,5) = "INIss") {
		set blnDataAccess = $$$NO
		if ($extract(pidForm,1,10) = "INIssueRev") {
			set blnDataAccess = $$$YES
		}
		; 1. Issue Type        = 7 (Requisitions)
		; 2. Issue To Location = Current Location
		; 3. Issue Status      = 7 (Active/Pending)
		
		set objIss = $get(^INIssue(0,pidIss,1))
		if ($$$INIssueToLocn(objIss)     = $get(YLOCATION)) &&
		   ($$$INIssueDemandType(objIss) = 7)               &&
		   ($$$INIssueStatus(objIss)     = 7)                  {
			
			set blnDataAccess = $$$YES
		}
		;vvvvvv SR16761 vvvvvvvvvv
		if pidForm = "INIssueRev" {
			if ($$$INIssueFromLocn(objIss) = $get(YLOCATION)) &&
		       ($$$INIssueStatus(objIss) > 6)                    {
			
				set blnDataAccess = $$$YES
		   } else {
			   set blnDataAccess = $$$MakeStatus("IN01443")  ;Issue is not for the Current Location or it has not been processed
		   }
		}
	}
	quit blnDataAccess
	
	
	/*
ExecuteRule(pidForm,pYM,YKEY="",pstrMethod)
	; *************************** NOT USED, DEPRECATED **************************
	; 29-May-2009	PPP		SR16586: Simplify Process (remove unnecessary calls to
	; 							Script Engine/State Engine)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 07-Aug-2008	Luke	SR15814: correct the logic use of the Status
	; 30-Jan-2008	LB		SR15626 Changed the signature of dStatus to dUStatus
	; 24-Jan-2008	HQN		SR15625 Changed class signature dINIssue to dUIssue
	; 11-Dec-2007	HQN		newed objIssue instead of objReq
	; 29-Nov-2007	GRF		use objDATEN
	;-------------------------------------------------------------------------------
	new blnDoRule,objDATEN,objIssue,strStatus,sc
	
	set strStatus = $$$OK
	set sc = $$$OK
	set blnDoRule = $$$YES
	if (YKEY = "+") || (YKEY = "") {
		set blnDoRule = $$$NO
	}
	if blnDoRule {
	//	set objIssue = ##class(alISS.dUIssue).%OpenId("0||"_YKEY)	
		set objIssue = ##class(alISS.dUIssue).GetInstance("0||"_YKEY)
		if objIssue'=$$$NULLOREF {
			set objDATEN = $get(^WWWDATEN(0,+$horolog,YUSER,"INIssue","D",1))
			set objIssue.Status      = ##class(alSYS.Status.dUStatus).%OpenId("0||INIssue||"_$$$INIssueStatus(objDATEN)) //SR15626
			set objIssue.ToLocn      = $$$INIssueToLocn(objDATEN)
			set objIssue.FromLocn    = $$$INIssueFromLocn(objDATEN)
	//		set objIssue.FromStorage = $piece(objDATEN,"~",4)
			set objIssue.DemandType  = $$$INIssueDemandType(objDATEN)
			set objIssue.Reference   = $$$INIssueReference(objDATEN)
			//set strStatus = ##class(alSYS.Script.iScriptEngine).RunRule(objIssue,pstrMethod,pidForm)	
			set sc = ##class(alSYS.Script.iScriptEngine).RunRule(objIssue,pstrMethod,pidForm)	
			do objIssue.%Close()
			set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc) ; SR15814:
		}
	}
	quit strStatus
	
	
ExecuteStatus(pidForm,pYM,YKEY="",pstrMethod)
	; *************************** NOT USED, DEPRECATED **************************
	; 29-May-2009	PPP		SR16586: Simplify Process (remove unnecessary calls to
	; 							Script Engine/State Engine)
	;-------------------------------------------------------------------------------
	; Description :
	;			
	; Called By :
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 07-Aug-2008	Luke	SR15814: correct the logic use of the Status
	; 30-Jan-2008	LB		SR15626 Changed the signature of dStatus to dUStatus
	; 24-Jan-2008	HQN		SR15625 Changed class signature dINIssue to dUIssue
	; 11-Dec-2007	HQN		newed objIssue instead of objReq
	; 07-Dec-2007	HQN		Fixed variable name to refer to issues instead of req
	;						Manual update of status, rules engine needs updating
	; 04-Dec-2007	HQN		Added transaction handling for the whole call
	; 29-Nov-2007	GRF		use objDATEN, $$$INIssueStatus
	; 27-Nov-2007	HQN		Changed to INConst values
	;-------------------------------------------------------------------------------
	new blnDoRule,objDATEN,objIssue,strStatus,sc 
	
	set strStatus = $$$OK
	set sc = $$$OK
	set blnDoRule = $$$YES
	if (YKEY = "+") || (YKEY = "") {
		set blnDoRule = $$$NO
	}
	
	if blnDoRule {
		set objIssue = ##class(alISS.dUIssue).GetInstance("0||"_YKEY)
		if objIssue'=$$$NULLOREF {
			set objDATEN = $get(^WWWDATEN(0,+$horolog,YUSER,"INIssue","D",1))
			set objIssue.Status      = ##class(alSYS.Status.dUStatus).%OpenId("0||INIssue||"_$$$INIssueStatus(objDATEN))  //SR15626
			set objIssue.ToLocn      = $$$INIssueToLocn(objDATEN)
			set objIssue.FromLocn    = $$$INIssueFromLocn(objDATEN)
	//		set objIssue.FromStorage = $$$INIssueFromStorage(objDATEN)
			set objIssue.DemandType  = $$$INIssueDemandType(objDATEN)
			set objIssue.Reference   = $$$INIssueReference(objDATEN)
	;+++++++++++++++++++++++++++++++++++++++
			tstart
	;+++++++++++++++++++++++++++++++++++++++
			
			set sc = ##class(alSYS.State.iState).ChangeStatusV1(.objIssue,pstrMethod,pidForm)
			
	;+++++++++++++++++++++++++++++++++++++++
			if '$$$ISERR(sc) {
				if $tlevel>0 tcommit
			} else {
				trollback
			}
	;+++++++++++++++++++++++++++++++++++++++
			do objIssue.%Close()
			set:$$$ISERR(sc) strStatus = $$ISStatusToDLStatus^COMUtilError(sc) ; SR15814:	
		}		
	}
	quit strStatus
	*/
	
	/*
	; *************************** NOT USED, DEPRECATED **************************
	; 29-May-2009	PPP		SR16586: Simplify Process (remove unnecessary calls to
	; 							Script Engine/State Engine)
Editable(pidIssue) ; FIXME : APPEARS NOT USED <GRF>
	;-------------------------------------------------------------------------------
	; Is form editable (unprocessed) ?
	;
	; Params:	pidIssue - Issue  id
	;
	; Returns:	status
	;
	; History:
	; 20-Jan-2009	DavidR 	SR16303: Copied and modified from INADJ
	; 09-sep-2008 	Luke	SR15897 Reverted SR15800:
 	; 17-Jul-2008   Luke    SR15800: Add check if the Conversion has been run
	; 15-Aug-2006	JW		SR14826: Created
	;-------------------------------------------------------------------------------
	new strStatus,objIssue
	
	set strStatus = $$$OK
	
	if $data(^INIssue(0,pidIssue,1)) {
		set objIssue=$get(^INIssue(0,pidIssue,1))
		
		if $$$INIssueStatus '= "0" {
			set strStatus = $$$MakeStatus("IN00377")  ; "Record already processed"
		}
	}
	
	quit strStatus
	*/
	
OnBeforeSave(pidIssue)
	new arrGrid,idItem,idLine,objINART,objIss,objLine,strStatus
	
	if ($$$GRIDName = "INIssueSummary") {
		set strStatus = $$$OK
		$$$GRIDGetContents(.arrGrid,$$$GRIDName)
		set idLine = $order(arrGrid(pidIssue,""))
		while ($length(idLine) > 0) {
			set objLine	= $get(arrGrid(pidIssue,idLine))
			set idItem	= $$$INIssueSummaryItem(objLine)
			set objINART = $get(^INART(0,idItem,1))
			if ($length(objINART) > 0) {
				if $$$INARTHoldReason(objINART) {
					set strStatus = $$$MakeStatus("IN0691",idItem)	; Product %1 is inactive.
					quit
				}
			}
			; start HEVA-1163
			set objIss = $get(^INIssue(0,pidIssue,1))
			if (##class(alSOH.iSOH).GetQtyAvailable(idItem,$$$INIssueFromLocn(objIss),"",$$$YES) < $$$INIssueSummaryUnitQuantity(objLine) ) {
					set strStatus = $$$MakeStatus("IN01040",idItem,$$$INIssueFromLocn(objIss)) ;Stock Unavailable for Item %1 at Location %2
					quit
			}
			; end of HEVA-1163
			set idLine = $order(arrGrid(pidIssue,idLine))
		}
	
		if ($$$ISERR(strStatus)) {
			do ReturnError^COMUtilError(strStatus)
			set Q = $$$QDontSave
		}
	}
	
	quit
]]></Routine>
</Export>