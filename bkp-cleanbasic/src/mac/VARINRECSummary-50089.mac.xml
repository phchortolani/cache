<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARINRECSummary" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARINRECSummary

#include COMSYS
#include INConst
#include %occInclude
#include COMGridEdit31

GetCodProdutoFornecedor()
	
	new objHeader,idFornecedor,idProduto,objINARTK,strOutValue
	
	set objHeader 		= $$$GRIDYFELDContainer
	
	set strOutValue		= ""
	set idFornecedor 	= +$piece(objHeader,Y,49)
	set idProduto 		= $piece(YFELD,Y,6)
	
	set objINARTK 		= $get(^INARTK(YM,idProduto,idFornecedor,1))
	
	if (objINARTK '= "") {
		set strOutValue = $$$INARTKSupplierItemNo(objINARTK)
	}
	
	quit strOutValue


GetDescProdutoFornecedor()

	new objHeader,idFornecedor,idProduto,objINARTK,strOutValue
	
	set objHeader 		= $$$GRIDYFELDContainer
	
	set strOutValue		= ""
	set idFornecedor 	= +$piece(objHeader,Y,49)
	set idProduto 		= $piece(YFELD,Y,6)
	
	set objINARTK 		= $get(^INARTK(YM,idProduto,idFornecedor,1))
	
	if (objINARTK '= "") {
		set strOutValue = $$$INARTKProductDescription(objINARTK)
	}
	
	quit strOutValue

	
ExisteDadosFornecedor()
	//Função utilizada na regra de customização dos campos FREE35 e FREE36. Redundância necessária para
	//forçar a propriedade obrigatória do campo

	set objHeader 		= $$$GRIDYFELDContainer
	
	set blnStatus		= $$$NO
	set idFornecedor 	= +$piece(objHeader,Y,49)
	set idProduto 		= $piece(YFELD,Y,6)
	
	if idProduto '= "" {
		set objINARTK 		= $get(^INARTK(YM,idProduto,idFornecedor,1))

		if (objINARTK '= "") {
			set blnStatus	= $$$YES
		}
	}
	
	quit blnStatus
	
CanCadastrarItemFornecedor()
	
	;quit $$ExisteDadosFornecedor
	quit 1

CadastrarProdutoFornecedor()
	
	new idCell,idRec,idGridRow,idLine,arrGrid,idProduto,idFornecedor,idKey
	
	set idProduto	= ""
	set idKey 		= ""
	set idRec 		= $$$KEY1($$GetKey^COMGridEdit31G())
	
	set objHeader 		= $$$GRIDYFELDContainer	
	set idFornecedor 	= +$piece(objHeader,Y,49)

	$$$GRIDGetContents(.arrGrid,"INRECSummary")
	
	set idCell = $get($$$WWWDATEN("FOCUSFIELD")) ; Macro override : based on ^CacheTemp rather than YFORM
	if (idCell'="") {                                        ; e.g. Y2x01_5
		set $extract(idCell,1) = ""
		set idGridRow = $piece(idCell,"_",1)               ; 2x01
	}
	
	set idLine = ""
	for {
		set idLine = $order(arrGrid(idRec,idLine))
		quit:idLine=""
		continue:idLine'=$$$KEY2($$ReferenceKey^COMGridEdit31Interface(YFORM,idGridRow))
		
		set objGrid = $get(arrGrid(idRec,idLine))
		set idProduto = $$$INRECSummaryItem(objGrid)
	}
	
	if ((idFornecedor '= "") && (idProduto '= "")) {
		set idKey = idProduto_","_idFornecedor
		do GoToForm^COMUtilForm("VARItemFornecedor",idKey,,,1,,,1)
	}
	
	do GoToForm^COMUtilForm("INReceipt",idRec)
	;do SAVE^COMGridEdit31Save()
	
	quit
	
IsObrigatorio()
	
	new idRec,objHeader
	set idRec 		= $$$KEY1($$GetKey^COMGridEdit31G())
	set objHeader 	= $$$GRIDYFELDContainer	
	
	quit $$IsReceivable^INReceiptButtonP($get(idRec),$get(objHeader))
	
	
HasFullyReceived(pidKey)

	new fltConv,fltOrderQty,fltOtherQty,fltReceiveQty,strStatus,blnHasReceive
	
	set strStatus		= $$$OK
	;set strStatus		= ""
	set blnHasReceive 	= $$$NO
	quit:($$$INRECFREE10($get(^INREC(YM, pidKey, 1))) = "") strStatus
	
	set idLine = ""
	for {
		set idLine = $order(^INRECSummary(YM,pidKey,idLine))
		quit:idLine=""
		
		set objSummary = $get(^INRECSummary(YM,pidKey,idLine,1))
		
		set idFlag = $$$INRECSummaryFlag(objSummary)
		if idFlag'="" {
			set intExceedsFlag = $$$INWEMERKERReceiptExceedsOrder($get(^INWEMERKER(0,idFlag,1)))
			if (intExceedsFlag = $$$EnumWWWTRISTATE1Warn) || (intExceedsFlag = $$$EnumWWWTRISTATE1Disallow) {
				if $$$INRECSummaryItem(objSummary)'="" {
					set fltConv     = $$GetUOMConversion^INUOMConversion($$$INRECSummaryItem(objSummary),$$$INRECSummaryOrderedUnit(objSummary))
					set fltOrderQty = $$$INRECSummaryQuantityOrdered(objSummary) * fltConv
				} else {
					set fltOrderQty = $$$INRECSummaryQuantityOrdered(objSummary)
				}
				
				set fltOtherQty   = $$ReceiptQuantities^INRECSummary(objSummary,$$$KEY1(pidKey))
				set fltReceiveQty = $$$INRECSummaryQuantityReceived(objSummary)
				
				if fltReceiveQty > (fltOrderQty - fltOtherQty) {
					set strStatus = $$$NO
				}
			}
		}
	}
	
	quit strStatus
	
OnBlurProduto(YKEY,&YFELD,GROW,GCOL)
	quit:(($get(YFELD) = "") || ($$$NoKey(YKEY)))
	new idItem, tipoItem, tipoLocal, idLocal, idRec
	set idRec	  = $$$KEY1(YKEY)
	set idLocal   = $$$INRECLocation($get(^INREC(YM,idRec,1)))
	set idItem 	  = $$$INRECSummaryItem(YFELD)
	
	if ((idItem = "") || ('$data(^INART(YM,idItem,1)))){
		set $$$INRECSummaryItem(YFELD)			   = ""
		set $$$INRECSummaryReceivedUnit(YFELD)	   = ""
		set $$$INRECSummaryFREE9(YFELD) 		   = ""
		set $$$INRECSummaryUnitQtyReceived(YFELD)  = ""
		set $$$INRECSummaryQuantityReceived(YFELD) = ""
		quit
	}
	set tipoItem  = $$SQLGetEstoquePrincipal^VARSQL(idItem)
	set tipoLocal = $$SQLGetTipoEstoqueLocal^VARSQL(idLocal)
	if (tipoItem '= tipoLocal){
		$$$Alert("Esse produto é de "_tipoItem_" e o recebimento é de "_tipoLocal_", por isso não pode ser inserido.")
		set $$$INRECSummaryItem(YFELD)			   = ""
		set $$$INRECSummaryReceivedUnit(YFELD)	   = ""
		set $$$INRECSummaryFREE9(YFELD) 		   = ""
		set $$$INRECSummaryUnitQtyReceived(YFELD)  = ""
		set $$$INRECSummaryQuantityReceived(YFELD) = ""
	} 
	elseif ($$GetDRPRecord^INDRPITEM(idLocal,idItem) = "") {
		$$$Alert("Produto "_idItem_" não autorizado para o local "_idLocal_".")
		set $$$INRECSummaryItem(YFELD)			   = ""
		set $$$INRECSummaryReceivedUnit(YFELD)	   = ""
		set $$$INRECSummaryFREE9(YFELD) 		   = ""
		set $$$INRECSummaryUnitQtyReceived(YFELD)  = ""
		set $$$INRECSummaryQuantityReceived(YFELD) = ""
	}
	else {
		do OnBlur^INRECSummary(YKEY,.YFELD,GROW,GCOL)
	}
	quit
	
OnBlurIPI(YKEY,&YFELD,GROW,GCOL)
	quit:(($get(YFELD) = "") || ($$$NoKey(YKEY)))
	
	new IPIREC, IPIAFM, AFM, AFMLinha

	set AFM = $$$INRECSummaryPurchaseOrder(YFELD)
	quit:(AFM = "")
	
	set AFMLinha = $$$INRECSummaryPurchaseOrderLine(YFELD)
	set IPIREC = $$$INRECSummaryFREE5(YFELD)
	set IPIAFM = $$$INAUFPFREE1($get(^INAUFP(YM,AFM,AFMLinha,1)))
	
	quit:(IPIREC = "")

	if (IPIREC = 0){
		set $$$INRECSummaryFREE5(YFELD) = ""
		quit
	}
	
	if (IPIREC '= IPIAFM){
		$$$Alert("O IPI deste produto diverge do valor registrado na AFM.")
		set $$$INRECSummaryFREE5(YFELD) = ""
	}
	
	quit
	
OnBlurDesconto(YKEY,&YFELD,GROW,GCOL)
	quit:(($get(YFELD) = "") || ($$$NoKey(YKEY)))
	
	new DescontoREC, DescontoAFM, AFM, AFMLinha

	set AFM = $$$INRECSummaryPurchaseOrder(YFELD)		
	set AFMLinha = $$$INRECSummaryPurchaseOrderLine(YFELD)
	
	if (AFM '= ""){
		set DescontoREC = $$$INRECSummaryFREE6(YFELD)
		set DescontoAFM = $$$INAUFPFREE12($get(^INAUFP(YM,AFM,AFMLinha,1)))
	
		quit:(DescontoREC = "")
	
		if (DescontoREC = 0){
			set $$$INRECSummaryFREE6(YFELD) = ""
			do CalculateSummTotal^INRECSummary($$$KEY1(YKEY))
			quit
		}
	
		if (DescontoREC '= DescontoAFM){
			$$$Alert("O Desconto deste produto diverge do valor registrado na AFM.")
			set $$$INRECSummaryFREE6(YFELD) = ""
		} else {
			do CalculateSummTotal^INRECSummary($$$KEY1(YKEY))
		}
		
	} else {
		do CalculateSummTotal^INRECSummary($$$KEY1(YKEY))		
	}
	
	quit
]]></Routine>
</Export>