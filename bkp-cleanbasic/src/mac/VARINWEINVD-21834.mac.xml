<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARINWEINVD" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARINWEINVD
#include COMSYS
#include INConst
#include VARConst

OnAfterDataFieldsCustom(pYKEY,pYFELD)
	quit:($$$NoKey(pYKEY))

	//Preserve the ExecuteAfterDataFields form call (WWW120)
	set YSTOP = $$$NO
		
	new statusInventario, objInvent, descInvent, dtAcesso, lstHeader
	
	set VORG(1) = $$GetYKEY^WWWFORMD() ;
	
	w "<div style=margin-left:5px;>"
	
	set statusInventario = $piece($get(^INWEINVD(YM,pYKEY,1)),Y,8)	
	
	set objInvent = $GET(^INWEINVP(YM,pYKEY,1))
	set descInvent = $piece(objInvent,Y,4)
						
	set dtAcesso  = ""
	set lstHeader = ""
	
	set contagem = $piece($get(^INWEINVP(YM,pYKEY,1)),Y,26)
	
	set prefix = "<span title='Para acessar os Relatórios de Contagem é necessário que o inventário possua ao menos uma contagem'>"
	set sufix = "</span>"
	
	set lstHeader = lstHeader_$listbuild("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Relatórios de Contagem de Inventário&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")

	if $$Start^COMTable(lstHeader,,,,$$$NO) {
		
		if (contagem = "") {
			
			do NewLine^COMTable()	
			do InsertCell^COMTable(prefix_"<font color=#999999>Mapa de Contagem</font>"_sufix,"","")
			do EndLine^COMTable()				
					
			do NewLine^COMTable()	
			do InsertCell^COMTable(prefix_"<font color=#999999>Relatório de Digitação Realizada</font>"_sufix,"","")
			do EndLine^COMTable()												
			
			do NewLine^COMTable()	
			do InsertCell^COMTable(prefix_"<font color=#999999>Relatório de Itens Não Digitados</font>"_sufix,"","")
			do EndLine^COMTable()
			
			do NewLine^COMTable()	
			do InsertCell^COMTable(prefix_"<font color=#999999>Relatório de Divergência de Contagem</font>"_sufix,"","")
			do EndLine^COMTable()
			
			do Stop^COMTable()
			
		} else {	
		
			//Report 1 - Mapa de Contagem
			new strMapaContagem, callBackMapaContagem, paramMapaContagem			
			set strMapaContagem      = "Mapa de Contagem"  
	   		set callBackMapaContagem = "GotoFiltrosRelatorio^VARFiltrosRelatorio"
	   		set paramMapaContagem    = """RunReportMapaDeContagem"",0,1,""VARFiltrosRelatorioSemSeq~"_VORG(1)
		
			//Report 2
			new strDigitacaoRealizada, callBackDigitacaoRealizada, paramDigitacaoRealizada			
			set strDigitacaoRealizada      = "Relatório de Digitação Realizada"   
	   		set callBackDigitacaoRealizada = "GotoFiltrosRelatorio^VARFiltrosRelatorio"
	   		set paramDigitacaoRealizada    = """RunReportDigitacaoRealizada"",0,1,""VARFiltrosRelatorioSemSeq~"_VORG(1)
		
			//Report 3			
			new strItensNaoDigitados, callBackItensNaoDigitados, paramItensNaoDigitados
			set strItensNaoDigitados      = "Relatório de Itens Não Digitados"   		
	   		set callBackItensNaoDigitados = "GotoFiltrosRelatorio^VARFiltrosRelatorio"
	   		set paramItensNaoDigitados    = """RunReportItensNaoDigitados"",0,1,""VARFiltrosRelatorioSemSeq~"_VORG(1)
		
			//Report 4
			new strDivergenciaContagem, callBackDivergenciaContagem, paramDivergenciaContagem
			set strDivergenciaContagem      = "Relatório de Divergência de Contagem"   		
	   		set callBackDivergenciaContagem = "GotoFiltrosRelatorio^VARFiltrosRelatorio"
	   		set paramDivergenciaContagem    = """RunReportDivergenciaContagem"",0,1,""VARFiltrosRelatorioSemSeq~"_VORG(1)

			do NewLine^COMTable() 		
	   		do VARInsertCellCallback2(strMapaContagem,callBackMapaContagem,paramMapaContagem)
			do EndLine^COMTable()			

			do NewLine^COMTable()		
	   		do VARInsertCellCallback2(strDigitacaoRealizada,callBackDigitacaoRealizada,paramDigitacaoRealizada)
			do EndLine^COMTable()
		
			do NewLine^COMTable()
	   		do VARInsertCellCallback2(strItensNaoDigitados,callBackItensNaoDigitados,paramItensNaoDigitados)
			do EndLine^COMTable()
		
			do NewLine^COMTable()
	   		do VARInsertCellCallback2(strDivergenciaContagem,callBackDivergenciaContagem,paramDivergenciaContagem)
			do EndLine^COMTable()			
		
			do Stop^COMTable()
			
		}
	
	}	

	new lstHeader2
	set lstHeader2 = ""
	set lstHeader2 = lstHeader2_$listbuild("Relatórios Gerenciais de Inventário")

	if $$Start^COMTable(lstHeader2,,,,$$$NO) {
		
		if '$$IsStocktakeComplete^INWEINVPStatus(pYKEY) {
												
			do NewLine^COMTable()	
			do InsertCell^COMTable("<font color=#999999>Relatório Físico-Contábil de Inventário (Diferenças)</font>","","")
			do EndLine^COMTable()				
					
			do NewLine^COMTable()	
			do InsertCell^COMTable("<font color=#999999>Relatório Físico-Contábil de Inventário (Total)</font>","","")
			do EndLine^COMTable()												
			
			do NewLine^COMTable()	
			do InsertCell^COMTable("<font color=#999999>Relatório Demonstrativo de Inventário</font>","","")
			do EndLine^COMTable()			
		
		} else {		
			
			//Report 5										
			new strBalanceteInventarioDif, callBackBalanceteInventarioDif, paramBalanceteInventarioDif
			set strBalanceteInventarioDif 	   = "Relatório Físico-Contábil de Inventário (Diferenças)"   		
	   		set callBackBalanceteInventarioDif = "GotoFiltrosRelatorio^VARFiltrosRelatorio"
	   		set paramBalanceteInventarioDif    = """RunReportInventarioBalanceteDif"",1,1,""VARFiltrosRelatorioSemSeq~"_VORG(1)
					  
			//Report 6 		
	   		new strBalanceteInventarioTotal, callBackBalanceteInventarioTotal, paramBalanceteInventarioTotal
			set strBalanceteInventarioTotal      = "Relatório Físico-Contábil de Inventário (Total)"   		
	   		set callBackBalanceteInventarioTotal = "GotoFiltrosRelatorio^VARFiltrosRelatorio"
	   		set paramBalanceteInventarioTotal    = """RunReportInventarioBalanceteTotal"",1,1,""VARFiltrosRelatorioSemSeq~"_VORG(1)
			
			//Report 7
			new strConciliacao, callBackConciliacao, paramConciliacao
			set strConciliacao 		= "Relatório de Demonstrativo de Inventário"   		
			set callBackConciliacao = "GotoFiltrosRelatorio^VARFiltrosRelatorio"
			set paramConciliacao	="""RunReportConciliacao"",1,1,""VARFiltrosRelatorioSemSeq~"_VORG(1)

			do NewLine^COMTable()
	   		do VARInsertCellCallback2(strBalanceteInventarioDif,callBackBalanceteInventarioDif,paramBalanceteInventarioDif)
			do EndLine^COMTable()

			do NewLine^COMTable()
	   		do VARInsertCellCallback2(strBalanceteInventarioTotal,callBackBalanceteInventarioTotal,paramBalanceteInventarioTotal)
			do EndLine^COMTable()
			
			do NewLine^COMTable()
			do VARInsertCellCallback2(strConciliacao,callBackConciliacao,paramConciliacao)
			do EndLine^COMTable()																										
		}
				
		do Stop^COMTable()			
	}

	w "</div>"

	quit
	
	
VARInsertCellCallback2(pstrText,pstrRoutine,pstrParams)
	;-------------------------------------------------------------------------------
	; Write a hyperlink which performs a caché callback (instead of
	; going to another form). This version is special because it works with GotoFormRelatorio
	;
	; Params:	pstrText		: The text for the link
	; 			pstrRoutine		: The routine to run (X^Y)
	; 			pstrLiteralParameters: Parameters separated by ;
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 23-Apr-2008	Soeiro		Minor adjustements to use with form gotoFiltroRelatorios
	; 21-Feb-2006	Steve S		SR14110: Created
	;-------------------------------------------------------------------------------
	new strHTML,idx,intLoop, pstrParamsFull
	
	//To use gotoForm is necessary to separate all extra parameters with a semicolunm
	set pstrParamsFull = ""_pstrParams_";""+document.WWW2.YINWEINVDM15.value"
	
	
	set strHTML="<a onclick='doLink(this);' href='javascript:CallBack("""_pstrRoutine_""","
	set strHTML=strHTML_pstrParamsFull
	set strHTML=strHTML_");'>"_pstrText_"</a>"			
	
	set ^zLuis("callback")=strHTML
	
	do InsertCell^COMTable(strHTML)
	
	quit
	
ItensJaIncluidos()

	; Copiada da rotina VARPreRequisicaoLinha
	new counter, date, gridLine, gridColumnForItemCode, listOfItemCodes, listOfItemCodes
	
	set date = $piece($horolog,YKOMMA,1)
	set gridColumnForItemCode = 1
 	set itemIncluded = 0
 	set listOfItemCodes = $$ItensAlreadyIncluded()
	
	set itemCode = $piece(YFELD,"~",1)
	quit:(itemCode = "")
	set focusField = $get(^WWWDATEN(0,date,YUSER,"INWEINVPLine","V","FOCUSFIELD"))
	set currentLine = $extract($piece(focusField,"_",1),2,$length(focusField))
	
	for gridLine=1:1:$length(listOfItemCodes) {
				// Skips if dealing with current line of the grid:
				if (gridLine = currentLine) {
					continue
				}
				if ($piece(listOfItemCodes,Y,gridLine) = itemCode) {
					set itemIncluded = 1
					quit
				}
	}
	
	set seq = ""
	if (itemIncluded) {
		// Searches for the "Seq." value of the grid line:
		for {
			set seq = $order(^WWWDATEN(0,date,YUSER,"INWEINVPLine","V","REFERENCEROW",seq))
			quit:(seq = "")
			if ($get(^WWWDATEN(0,date,YUSER,"INWEINVPLine","V","REFERENCEROW",seq,1)) = gridLine) {
				quit
			}
		}
		// ----
		set $PIECE(YFELD,Y,1)=""
		$$$Alert("O Item "_itemCode_" - "_$$SQLGetDescricaoProduto^VARSQL(itemCode)_" já foi incluído neste inventário (Seq. = "_seq_").")
		quit
	}
	
	quit	
	
ItensAlreadyIncluded()
	; Copiada da rotina VARPreRequisicaoLinha
	
	new counter, date, gridLine, gridColumnForItemCode, listOfItemCodes
	
	set date = $piece($horolog,YKOMMA,1)
	set gridColumnForItemCode = 1
	set listOfItemCodes = ""
	set countGridLine2 = 1
	kill ^WWWDATENTempINWEINVD
 
	// Loop on grid lines:
	set gridLine2 = $get(^WWWDATEN(0,date,YUSER,"INWEINVPLine","V","DISPLAYLIST",countGridLine2))
	while $data(^WWWDATEN(0,date,YUSER,"INWEINVPLine","V","DISPLAYLIST",countGridLine2)) {
		set ^WWWDATENTempINWEINVD(0,date,YUSER,"INWEINVPLine","V","DISPLAYLIST",countGridLine2) = countGridLine2
		set countGridLine2 = $i(countGridLine2)
	}
	set gridLine = $order(^WWWDATENTempINWEINVD(0,date,YUSER,"INWEINVPLine","V","DISPLAYLIST",""))
	for {
		set itemCode = $get(^WWWDATEN(0,date,YUSER,"INWEINVPLine","V","Y"_gridLine_"_"_gridColumnForItemCode,1))
		quit:(gridLine = $$$NULLOREF)
		// If grid line was not deleted, include item code in the list of already included itens:
		if ($get(^WWWDATEN(0,date,YUSER,"INWEINVPLine","V","KILLEDRECORD",gridLine)) '= 1) {
			set $piece(listOfItemCodes,Y,gridLine) = itemCode
		}
		set gridLine = $order(^WWWDATENTempINWEINVD(0,date,YUSER,"INWEINVPLine","V","DISPLAYLIST",gridLine))
	}

	quit listOfItemCodes

GetInventarioAberto()
	new idInventario
	set idInventario = ""
	if ($length($order(^INWEINVPs(0, 200, YLOCATION, 1, ""))) > 0) { 		// verifica se tem algum inventário iniciado
		set idInventario = $order(^INWEINVPs(0, 200, YLOCATION, 1, ""))
	}
	elseif ($length($order(^INWEINVPs(0, 200, YLOCATION, 2, ""))) > 0) {	// verifica se tem algum inventário com contagem em aberto
		set idInventario = $order(^INWEINVPs(0, 200, YLOCATION, 2, ""))
	}
	elseif ($length($order(^INWEINVPs(0, 200, YLOCATION, 3, ""))) > 0) {	// verifica se tem algum inventário com contagem encerrada
		set idInventario = $order(^INWEINVPs(0, 200, YLOCATION, 3, ""))
	}
	elseif ($length($order(^INWEINVPs(0, 200, YLOCATION, 4, ""))) > 0) {	// verifica se tem algum inventário com processo de contagem concluído
		set idInventario = $order(^INWEINVPs(0, 200, YLOCATION, 4, ""))
	}
		
	quit idInventario

OnBeforePrimaryKey(pYKEY)
	new idInventario
	if ($$$NoKey(pYKEY)) {
		set idInventario = $$GetInventarioAberto()
		if ($length(idInventario) > 0) {
			do GoToForm^COMUtilForm(YFORM, idInventario)
		}
	}
	
	quit

CanAjustar(pidStocktake)
	new strStatus
	set strStatus = $$$OK
	if (($$GetStatus^INWEINVPStatus(pidStocktake) '= $$$EnumINSTOCKTAKESTATUSCountProcessClosed)
		&& ($$GetStatus^INWEINVPStatus(pidStocktake) '= $$$EnumINSTOCKTAKESTATUSStocktakeComplete)) {
		set strStatus = $$$MakeStatus("%1","Não é possível realizar o ajuste de inventário pois o processo de contagem ainda não foi concluído.")
	}
	$$$YQHandler(strStatus)
	quit

CriarContagem(pidStocktake)
	new strStatus
	set strStatus = $$$OK
	if ($$$NoKey(pidStocktake)) {
		set strStatus = $$$MakeStatus("%1", "Código de inventário inválido.")
	}
	
	if ($$$ISOK(strStatus)) {
		set strStatus = $$Transaction^COMTransaction("CriarContagemTxn^VARINWEINVD("""_pidStocktake_""")", $$$YES)
	}
	if ($$$ISERR(strStatus)) {
		$$$Alert(strStatus)
		$$$YQHandler(strStatus)	
	}
	do ReloadForm^COMUtilForm()

	quit

CriarContagemTxn(pidStocktake)
	new strStatus
	set strStatus = $$$OK
	
	if ($$$ISOK(strStatus)) {
		// Cria nova contagem CORE
		set strStatus = $$CreateNewCountButtonHandler(pidStocktake)
	}
	if ($$$ISOK(strStatus)) {
		// Cria nova contagem VAR
		set strStatus = $$CriarContagemUsuario(pidStocktake)
	}
	
	quit strStatus

CreateNewCountButtonHandler(pidStocktake)
	new strStatus,intMaxCounts,YKEY
	
	set intMaxCounts=$$$INVORGStocktakeMaxCount($$Get^INVORG())
	
	set strStatus = $$CanCreateNewCount^INStocktaking(pidStocktake,intMaxCounts) 
	if $$$ISOK(strStatus) {
		set strStatus = $$CreateNewCount^INStocktaking(pidStocktake)
	}
	quit strStatus

CriarContagemUsuario(pidStocktake)
	new strStatus, noCount, idUsuario, objVARInventarioMultDig, arrUsuario
	set strStatus = $$$OK
	set noCount = $$$INWEINVPNumberofCounts($$GetStocktake^INStocktaking(pidStocktake))
	set lastNoCount = noCount - 1
	set arrUsuario = ""
	set idLinha = $order(^INWEINVCount(YM, pidStocktake,""))
	while ($length(idLinha) > 0) {
		if ($data(^INWEINVCount(YM, pidStocktake, idLinha, noCount, 1))) {
			set idUsuario = $order(^VARInventarioMultDig(YM, pidStocktake, lastNoCount, ""))
			while ($length(idUsuario) > 0) {
				set objINWEINV = $$GetStocktakeLine^INStocktaking(pidStocktake,idLinha)
				if ($$$INWEINVFREE3(objINWEINV) = idUsuario) {
					set idUsuarioLinha = $order(^VARInventarioMultDigLinhas(YM, 2, $$$Index($$$INWEINVItemNumber(objINWEINV)), $$$Index($$$INWEINVLotNo(objINWEINV)), $$$Index($$$INWEINVExpiryDate(objINWEINV)), $$$Index($$$INWEINVStockLocation(objINWEINV)), $$$Index($$$INWEINVProgram1(objINWEINV)), pidStocktake, lastNoCount, idUsuario,"" ))
					set objVARInventarioMultDigLinha = ^VARInventarioMultDigLinha(YM, pidStocktake, lastNoCount, idUsuario, idUsuarioLinha, 1)
					set $$$VARInventarioMultDigLinhaQuantContada(objVARInventarioMultDigLinha) = ""
					set $$$VARInventarioMultDigLinhaConfirmadoEm(objVARInventarioMultDigLinha) = ""
					set strStatus = $$$Save("VARInventarioMultDigLinha",pidStocktake_$$$COMMA_noCount_$$$COMMA_idUsuario_$$$COMMA_idUsuarioLinha,objVARInventarioMultDigLinha,$$$YES)
					quit:($$$ISERR(strStatus))
					set arrUsuario = arrUsuario_";"_idUsuario
				}
				set idUsuario = $order(^VARInventarioMultDig(YM, pidStocktake, lastNoCount, idUsuario))
			}
		}
		quit:($$$ISERR(strStatus))
		set idLinha = $order(^INWEINVCount(YM, pidStocktake,idLinha))
	}
	if ($$$ISOK(strStatus)) {
		for i=1:1:$length(arrUsuario,";") {
			continue:($piece(arrUsuario,";",i)="")
			set strStatus = $$$Save("VARInventarioMultDig",pidStocktake_$$$COMMA_noCount_$$$COMMA_$piece(arrUsuario,";",i),"",$$$YES)
			quit:($$$ISERR(strStatus))
		}
	}
	
	quit strStatus

]]></Routine>
</Export>