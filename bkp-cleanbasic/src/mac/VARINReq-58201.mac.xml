<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARINReq" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARINReq
	#include COMSYS
	#include INConst
	#include VARConst
	quit
 
PrintJS(pidForm)	
	new strP1Name
	
 	set strP1Name = "Y"_pidForm_"P1"
	
	write !, "<script language=""javascript"">"
	
	&js<
		var req = document.#(YHTMFORM)#.#(strP1Name)#.value;
		
		function confirmPrompt() {
			var settings = "dialogWidth: 420px; dialogHeight: 110px; center: yes; " +
				"edge: sunked; scroll: yes; status: no";
			eval('var url ="#(YAKTION)#EP=WWWFORM&YFORM=VAREncerrarRequisicao&YKEY='+req+'&YUSER=#(YUSER)#&YBED=#(YBED)#"');
			if(window.showModalDialog) {
				return window.showModalDialog(url,"name",settings);
			}
		}
	    
	    function encerrarReq() {
			CallBackNow("EncerrarOnClickJS^VARINReq", req);
		}
	>
	
	write !, "</script>"
	
	quit
	
EncerrarOnClickJS(idReq)
	
	&js<
	    var value = confirmPrompt();
		if (value) {
			CallBackNow("EncerrarOnClick^VARINReq", '#(idReq)#');
		}
	> 
	
	quit
	
EncerrarOnClick(pidReq)
	do ManuallyClose^INReq($g(YM),$g(YFORM),pidReq,$g(YFELD))
	quit
	
OnAfterButtonLine()
	//utilizado no form modal VAREncerrarRequisicao
 
	&html<
		<script type='text/javascript'>
			function SetFocus(){
				var inputYes = document.getElementById("buttonYes");
				var inputNo  = document.getElementById("buttonNo");
				inputYes.blur();
           		inputNo.focus();
			}
			function yesConfirm(){
				window.returnValue = 1;
				window.close();
				return false;
			}
			function noConfirm(){
				window.returnValue = 0;
				window.close();
				return false;
			}
		</script>
		<body>
			<blockquote style="font-size:12px;font-weight:bold;margin-top:10px;text-align:center;">Tem certeza que deseja encerrar esta requisição ?</blockquote>
			<div style="width:396px;text-align:center;">
				<input id="buttonYes" type="button" value="    SIM    " onclick="yesConfirm();" style="font-weight:bold;margin-right:10px;cursor:pointer;">
				<input id="buttonNo"  type="button" value="    NÃO    " onclick="noConfirm(); " style="font-weight:bold;margin-left:10px;cursor:pointer;">
			</div>
			<script type='text/javascript'>
				SetFocus();
			</script>
		</body>
	>
	
	quit
	
getPAMs(pidItem, pidLocation, &parrPAMs)	
 
	new strPAMs, idPAM, rsPam, rsPamAfm, meuSQL
	$$$VAR
	
	if (pidLocation = "Rede") set pidLocation = ""
	
	if $$IsFormInBuffer^VARAlertaLocalLinha($get(YFORM)) = $$$YES {
		set strPAMs = $piece($get(^VARTempAlertaLocalBuffer(YBED,pidItem)),Y,63)
		if (strPAMs '= "") quit strPAMs
	}
		
	// Para todos os PAMs.
	set strPAMs = ""
	
	set idPAM = ""
	for {
		set idPAM = $order(^VARPedidoCompraLinhas(YM,1,pidItem,idPAM))
		quit:(idPAM = "")
		
		if (pidLocation '= ""){
			continue:($$$VARPedidoCompraLocaldeEntrega($get(^VARPedidoCompra(YM,idPAM,1))) '= pidLocation)	
		}
		
		if (idPAM '= "") set parrPAMs(idPAM) = ""
	}
	
	// Pegar agora os PAMs que estão associados com alguma AFM cujo item ainda não foi totalmente recebido.
	set idAFM = ""
	for {
		set idAFM = $order(^INAUFPs(YM,8,pidItem,idAFM))
		quit:(idAFM = "")
		
		set objAFM = $get(^INAUF(YM,idAFM,1))
		continue:($$$INAUFFREE14(objAFM) > 2)	
		
		if (pidLocation '= ""){
			continue:($$$INAUFLocation(objAFM) '= pidLocation)	
		}
		
		set idPAM = $$$INAUFFREE20(objAFM)
		if (idPAM '= "") set parrPAMs(idPAM) = ""
	}
	
	// Montando a lista de PAMs.
	set idPAM = ""
	for {
		set idPAM = $order(parrPAMs(idPAM))
		quit:(idPAM = "")
	
		if strPAMs = "" {
			set strPAMs = idPAM
		} else {
			set strPAMs = strPAMs_";"_idPAM
		}
	}
 
 	if $$IsFormInBuffer^VARAlertaLocalLinha($get(YFORM)) = $$$YES {
		set $piece(^VARTempAlertaLocalBuffer(YBED,pidItem),Y,63) = strPAMs
	}
 	
	quit strPAMs
	
getAFMs(pidItem, pidLocation, &parrOpenAFMs)
 	$$$VAR
 	new rsAfm, meuSQL, idAFM, strAFMs
 
 	set strAFMs=""
 	
  	// Verificar todas as AFMLines que ainda não foram totalmente recebidas.
	set idAFM = ""
	for {
		set idAFM = $order(^INAUFPs(YM,8,pidItem,idAFM))
		quit:(idAFM = "")
		
		set objAFM = $get(^INAUF(YM,idAFM,1))
		continue:($$$INAUFFREE14(objAFM) > 2)	
		
		if (pidLocation '= ""){
			continue:($$$INAUFLocation(objAFM) '= pidLocation)	
		}
		
		set parrOpenAFMs(idAFM) = ""
	}
 
  	// Montar a String de retorno
	set idAFM = ""
	for {
		set idAFM = $order(parrOpenAFMs(idAFM))
		quit:(idAFM = "")
	
		if strAFMs = "" {
			set strAFMs = idAFM
		} else {
			set strAFMs = strAFMs_";"_idAFM
		}
	}
 
	quit strAFMs
 
getAFMsByItemAndLocation(pidItem, pidLocation, &parrAFMs)
 	$$$VAR
 	new rsAfm, meuSQL, idAFM, strAFMs
 	
	if $$IsFormInBuffer^VARAlertaLocalLinha($get(YFORM)) = $$$YES {
		set strAFMs = $piece($get(^VARTempAlertaLocalBuffer(YBED,pidItem)),Y,65)
		if (strAFMs '= "") quit strAFMs
	}
 	
 	set strAFMs=""
 
	set idAFM = ""
	for {
		set idAFM = $order(^INAUFPs(YM,8,pidItem,idAFM))
		quit:(idAFM = "")
		
		set objAFM = $get(^INAUF(YM,idAFM,1))
		
		if (pidLocation '= ""){
			continue:($$$INAUFLocation(objAFM) '= pidLocation)	
		}
		
		set parrAFMs(idAFM) = ""
	}
 
  	// Montar a String de retorno
	set idAFM = ""
	for {
		set idAFM = $order(parrAFMs(idAFM))
		quit:(idAFM = "")
	
		if strAFMs = "" {
			set strAFMs = idAFM
		} else {
			set strAFMs = strAFMs_";"_idAFM
		}
	}
 
 	if $$IsFormInBuffer^VARAlertaLocalLinha($get(YFORM)) = $$$YES {
		set $piece(^VARTempAlertaLocalBuffer(YBED,pidItem),Y,65) = strAFMs
	}
 
	quit strAFMs
 
getProcessos(idItem, Local, &parrProcessos)
 	$$$VAR
	new arrPAMs, idPAM, objPAM, idProcesso, strProcessos
	
	;do getPAMs(idItem, Local, .arrPAMs)
	do GetPedidoCompra^VARReposicao(idItem, Local, .arrPAMs)
	
	$$$Order1(arrPAMs,idPAM)
	
		set objPAM = $get(^VARPedidoCompra(YM, idPAM, 1))
		set idProcesso = $$$VARPedidoCompraProcessoSICOP(objPAM)
		set parrProcessos(idPAM) = idProcesso
	
	$$$End
 
	quit 
	
getEmpenhos(pItem, pLocation, &parrEmpenhos)
 
	new arrAFMs, idAFM, objAFM, idEmpenho,strEmpenhos
	set strEmpenhos=""
 
	;do getAFMs(pItem, pLocation, .arrAFMs)
	do GetAFMs^VARAlertaLinha(pItem, pLocation, .arrAFMs)
 
	$$$Order1(arrAFMs,idAFM)
	
		set objAFM    = $get(^INAUF(YM, idAFM, 1))
		set idEmpenho = $$$INAUFApproval1(objAFM)
		set parrEmpenhos(idAFM) = idEmpenho
		if strEmpenhos'="" {
			set strEmpenhos=strEmpenhos_";"_idAFM_"||"_idEmpenho
		}else {
			set strEmpenhos=idAFM_"||"_idEmpenho
		}
 
	$$$End
 
	quit
	
getFornecedores(pItem, pLocation, &parrFornecedores)
 
	new arrAFMs, idAFM, objAFM, idaFornecedor, idFornecedor
	
	do getAFMs(pItem, pLocation, .arrAFMs)
 
	$$$Order1(arrAFMs,idAFM)
	
		set objAFM    = $get(^INAUF(YM, idAFM, 1))
		set idaFornecedor = $$$INAUFSupplierNumber(objAFM)
		if (idaFornecedor '= "") {
			set idFornecedor  = $$$INLIEFName1($get(^INLIEF(YM,idaFornecedor,1)))
		} else { 
			set idFornecedor  = ""
		}
		set parrFornecedores(idAFM) = idFornecedor
 
	$$$End
 
	quit
	
CanConfirmPrinting(pidSolic)
 	//Gustavo, 11/10/2007
 	//Desabilita o botão de confirmação de impressão caso a solicitação ainda não tenha sido processada.
 
	if (YKEY) {
	
	set objSolicTransf = $get(^INReq(YM, pidSolic, 1))
	set idTransfer = $order(^INTFRs(YM, 11, $$Index^COMUtilIndex(pidSolic), ""))
 		if ($$$INReqStatus(YFELD) '= 2) {
			set YQ = $$$YQDisable("Só é possível confirmar a impressão depois que a solicitação tiver sido processada.")
		}
		elseif ($$$INReqFromLocn(YFELD) '= YLOCATION) {
			set YQ = $$$YQDisable("Só os usuários do local abastecedor podem confirmar que a solicitação já foi impressa.")
			
		}	  	
		elseif (idTransfer '= "") {
			if ($$$INTFRStatus($get(^INTFR(YM,idTransfer,1))) > 1) {
				set YQ = $$$YQDisable("Essa solicitação já foi atendida.")
			}
		}			
		else { 
			set YQ = $$$YQEnable
		} 
 	} 
	quit
	
ConfirmPrinting(pidSolic)
 	//Gustavo, 24/10/2007
 	//Seta o campo de Impresso para sim e não conforme se clica no botão de Confirmar/Desconfirmar Impressão. 	
	
	if $get(pidSolic) = "" { quit }
	
	set objSolic = $get(^INReq(YM, pidSolic, 1))		
	if $get(objSolic) = "" { quit }
	
	if $$$INReqFREE20(objSolic) '= 1 {
		set $$$INReqFREE20(objSolic) = 1
	}  	
	else { 
		set $$$INReqFREE20(objSolic) = 0 		
	}
	set status = $$$Save("INReq",pidSolic,objSolic,1)
	
	if $$$ISERR(status) { 
		$$$StartScript()
		w "alert('Não foi possível confirmar a impressão. Erro ao salvar.'); "
		$$$EndScript()
	}
	
	do GoToForm^COMUtilForm("INReq", pidSolic)	
	
	quit
]]></Routine>
</Export>