<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARStockHistory" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARStockHistory
#include COMSYS
#include INConst
#define SIMPLIFICADO 2
#define DETALHADO 1
 
OnAfterSave
	new Item, Location, dteInicial, dteFinal, pPrograma, pFiltroEnd, pVisualizacao, pLote
	set Item  	        = $get(VORG(1))
	set Location        = $get(VORG(2))
	set dteInicial      = $get(VORG(3))
	set dteFinal        = $get(VORG(4))
	set pVisualizacao	= $get(VORG(7))
	if (pVisualizacao = $$$SIMPLIFICADO) {
		set pLote		= ""
		set pFiltroEnd	= ""
		set pPrograma   = ""
	}else{
		set pLote		= $get(VORG(8))
		set pFiltroEnd	= $get(VORG(6))
		set pPrograma   = $get(VORG(5))
	}
	
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,1) = Item
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,2) = Location
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,3) = dteInicial
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,4) = dteFinal
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,5) = pPrograma
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,6) = pFiltroEnd
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,7) = pVisualizacao
	set $piece(^VARTempStockHistory(YM,YBED,1),Y,8) = pLote
	
	do VARLogAfterSave^VARUtil(YBED,YFORM)
	do GoToForm^COMUtilForm("VARStockHistory",1,,,,,) ;03-Fev-2010 Karine
	
	quit
 
OnAfterDataFields
	;----------------------------------------------------------------------------
	;
	; History:
	; 01-Mai-2012	Gustavo		Incluído VARLogAfterSave
	; 08-Ago-2011	RGB			Alteração para verificar se o endereço de armazenagem é um paciente.
	;							Previamente ele validava apenas se o local era uma farmacia judicial,
	;							alterando o header incorretamente para "Paciente", independente do endereço de armazenagem.
	; 03-Fev-2010	Karine		TCI: Including Bundle= Program 
	; 27-Apr-2010	Sósthenes   Modificado a forma como é gerado o Grid e adicionado filtro de Endereços.
	;
    ;----------------------------------------------------------------------------
	quit:('$data(^VARTempStockHistory(YM,YBED,1)))
 
	//Só apresenta os resultados da consulta caso o usuário tenha clicado no botão 'Ok' do form.
	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	new filterItem, filterLocation, filterdteInicial, filterdteFinal, filterPrograma, filterEndereco, filterVisualizacao, filterLote, ID, 
		idItem, dteMovimentacao, hour, txnType, qty, idLocation, strLocation, txnCode, lot, dteExpiry, 
	    strTxnLink, strEouS, responsavel, Endereco, objReport, idPrograma, nomePrograma, strMovmtFromTo,
	    ItemPolicyHasProgram, ItemPolicyHasBrand, idMarca, nomeMarca, physicalStorage, txnCodeLine,
	    objStorage, FromStorage, ToStorage, nonStock, Tipo, msgHeader, qtEntrada, qtSaida, qtyStock
	
	set filterItem         = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,1)
	set filterLocation     = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,2)
	set filterdteInicial   = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,3)
	set filterdteFinal     = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,4)
	set filterPrograma     = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,5)
	set filterEndereco     = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,6)
	set filterVisualizacao = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,7)
	set filterLote 	   = $piece($get(^VARTempStockHistory(YM,YBED,1)),Y,8)
 
	set Tipo = $piece($get(^INART(YM,filterItem,1)),"~",345)	
	
	write !, "<script language=""javascript"">"
	&js<
		addEvent(window, 'load', OnLoadWindow);
 
		function OnLoadWindow() {
			//document.#(YHTMFORM)#.#("Y"_YFORM_"M8")#.onblur();
		}
 
		function addEvent(obj, evType, fn) {
 			if (obj.addEventListener) {
   				obj.addEventListener(evType, fn, false);
   				return true;
 			}
 			else if (obj.attachEvent) {
   				return obj.attachEvent('on' + evType, fn);
 			}
 			else {
   				return false;
 			}
		}	
	>
	write !, "</script>"
 
	;28-Oct-2008 Karine Report
	
	kill ^VARTempStockHistoryReport(YM,YBED)
	
	Set StockHistorySQL = ##class(%ResultSet).%New()  ;Create Result Set Object
	
 	set meuSQL = "select "
	set meuSQL = meuSQL_" alSOH.dStockHistory.ID, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Item->ItemId  AS Item, "
	set meuSQL = meuSQL_" (alSOH.dStockHistory.DateConfirmed) AS TxDate, " 
	set meuSQL = meuSQL_" (alSOH.dStockHistory.TimeConfirmed) AS TxTime, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.TxType AS TxType, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.MovementType as MovmtType, "
	
	if (filterVisualizacao = $$$SIMPLIFICADO) {
		set meuSQL = meuSQL_" SUM(alSOH.dStockHistory.QtyMoved) AS Qty, "
	}else{
		set meuSQL = meuSQL_" alSOH.dStockHistory.QtyMoved AS Qty, "
	}
	
	set meuSQL = meuSQL_" alSOH.dStockHistory.Location->Code AS Location, "  
	set meuSQL = meuSQL_" alSOH.dStockHistory.Storage as Storage, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Location->Name AS LocationDesc, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Reference AS Source, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Bundle->LotNumber as LotNumber, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Bundle->UseByDate as UseByDate, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Bundle->Program as Program, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.Bundle->Brand as Brand, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.PhysicalStorage as PhysicalStorage, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.LineNumber as LineNumber, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.QOHStorage as Stock, "
	set meuSQL = meuSQL_" alSOH.dStockHistory.NonStock as NonStock "
	set meuSQL = meuSQL_" FROM alSOH.dStockHistory "
	set meuSQL = meuSQL_" WHERE UPPER(Item) = '"_filterItem_"'"
	set meuSQL = meuSQL_" AND UPPER(Location) = '"_filterLocation_"'"
	set meuSQL = meuSQL_" AND alSOH.dStockHistory.DateConfirmed >= "_filterdteInicial
	set meuSQL = meuSQL_" AND alSOH.dStockHistory.DateConfirmed <= "_filterdteFinal
	set meuSQL = meuSQL_" AND alSOH.dStockHistory.Storage->Code <> 'EmTransito'"
	set meuSQL = meuSQL_" AND alSOH.dStockHistory.ID NOT IN (SELECT d.ID from alSOH.dStockHistory d "					; não mostrar
	set meuSQL = meuSQL_"							  WHERE MovementType_MovementTypeId = 41 "					; o inventário inicial
	set meuSQL = meuSQL_"							  AND DateConfirmed = TO_DATE('02/02/2014', 'DD/MM/YYYY')) "	; do sistema
 
	
	if (filterLote '= ""){
		set meuSQL = meuSQL_" AND alSOH.dStockHistory.Bundle->LotNumber = '"_filterLote_"' "
	}
	if (filterEndereco '= "1") {
		set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(alSOH.dStockHistory.MovementType) <> 5 "
		set meuSQL = meuSQL_" AND $$SQLGetMovTypeNumber^VARSQL(alSOH.dStockHistory.MovementType) <> 51 "
		//set meuSQL = meuSQL_" AND alSOH.dStockHistory.Storage->Code != 'EmTransito'"
	}
	if (filterPrograma '= "") {
	    set meuSQL = meuSQL_"AND alSOH.dStockHistory.Bundle->Program = "_filterPrograma
		}
	
	if (filterVisualizacao = $$$SIMPLIFICADO) {
		set meuSQL = meuSQL_" GROUP BY alSOH.dStockHistory.Reference "
	}
	
	set meuSQL = meuSQL_"ORDER by TxDate, TxTime "
	do StockHistorySQL.Prepare(meuSQL)  ;Prepare Query
	do StockHistorySQL.Execute()  ;Execute Query
 
	set count=0
	do PrintHeader^VARStock(filterItem,filterLocation,Tipo)
 	
	//Tabela
   	new lstHeader
 	set lstHeader = ""
 	
	set ItemPolicyHasProgram = $$CheckItemPolicyHasProgram^VARINART(filterItem)
	set ItemPolicyHasBrand   = $$CheckItemPolicyHasBrand^VARINART(filterItem) 	
 	
 	if (filterVisualizacao = $$$DETALHADO) {
 		set lstHeader = lstHeader_$listbuild("Seq.","Documento","Tipo","E/S","Local Relacionado","Data","Hora","Quantidade","Endereço","Lote","Validade","Estoque Local")
 	}else{
	 	set lstHeader = lstHeader_$listbuild("Seq.","Data","Quantidade Entrada","Quantidade Saída","Documento","Local Relacionado","Tipo")
	}
 	
 	if (filterVisualizacao = $$$SIMPLIFICADO){
 	
 	}
	elseif (ItemPolicyHasProgram = $$$YES) {  	
		set lstHeader = lstHeader_$listbuild("Programa")
	}
	
	if (filterVisualizacao = $$$DETALHADO) {
		if (ItemPolicyHasBrand = $$$YES) {
			set lstHeader = lstHeader_$listbuild("Marca")				
		}
	
		set lstHeader = lstHeader_$listbuild("Responsável")
 	}
 	set msgHeader = ""
  	set qtEntrada = 0
	set qtSaida   = 0
  	set qtyStock  = 0

  	if $$Start^COMTable(lstHeader,msgHeader) {
		set count = 0
		WHILE (StockHistorySQL.Next()) {
			set objReport = "" 
				
			set ID		     	= StockHistorySQL.GetData(1)
			set idItem          = StockHistorySQL.GetData(2)
			set dteMovimentacao = StockHistorySQL.GetData(3)
			set hour            = StockHistorySQL.GetData(4)
			set txnType         = StockHistorySQL.GetData(5)
			set MovmtType       = StockHistorySQL.GetData(6)
			set qty             = StockHistorySQL.GetData(7)
			set idLocation      = StockHistorySQL.GetData(8)
			set Endereco        = StockHistorySQL.GetData(9)
			set strLocation     = StockHistorySQL.GetData(10)
			set txnCode         = StockHistorySQL.GetData(11)
			set lot             = StockHistorySQL.GetData(12)
			set dteExpiry       = StockHistorySQL.GetData(13)
			set idPrograma      = StockHistorySQL.GetData(14)
			set idMarca	        = StockHistorySQL.GetData(15)
			set physicalStorage = StockHistorySQL.GetData(16)
			set txnCodeLine     = StockHistorySQL.GetData(17)
			set qtyStock        = StockHistorySQL.GetData(18)
			set nonStock        = StockHistorySQL.GetData(19)
 
			set debugedMovmtType = $listget(MovmtType, 1)
			;set Endereco = $piece(Endereco,"||",2)
			
			// Quando for movimento de realocação, mostrar somente um vetor de quantidade
			if ( (debugedMovmtType = 5) || (debugedMovmtType = 51) ) {
				continue:(qty < 0)
			}
			
			// Quando for uma transferência, mostrar apenas o carregamento
			if ((debugedMovmtType=30) && ($piece(Endereco,"||",2)="EmTransito")){
				continue:(qty > 0)
			}
			
			if (($piece(txnCode,"||",2))'=""){
					set txnCode=$replace(txnCode,"||",",")
			}
			
			if ($$SQLIsStorageLocation^VARSQL(idLocation)) {
				continue:($piece(Endereco,"||",2)="X") 
			}
 
			set strMovmtType   = $$GetMovmtType(debugedMovmtType,txnCode)
			set strMovmtLink   = $$GetMovmtLink(debugedMovmtType,txnCode)
			set strMovmtVetor  = $$GetMovmtVetor(debugedMovmtType,qty)
			set strMovmtFromTo = $$GetMovmtFromTo(debugedMovmtType,txnCode,physicalStorage,txnCodeLine,Endereco)
			set responsavel    = $$GetProcessedBy(debugedMovmtType,txnCode)
			set nomePrograma = $$GetProgramName^VARSQL(idPrograma)
			set nomeMarca	 = $$GetBrandName^VARSQL(idMarca)
			
			if filterLocation = $$getFarmaciaAcoesJudiciais^VARParametroCliente(YM) {
				//Validar se o endereço de armazenagem é um paciente
				set nomePaciente=""
				set nomePaciente=$$GetNomePaciente^VARMEDPatient(idLocation,Endereco)
			
				if nomePaciente'="" {
					set Endereco =nomePaciente
				}
			}
			
		    	if nonStock=0 {
				set qtyStock=qtyStock+qty
			}
			
			if (count = 0) {
				if ($$SQLIsStorageLocation^VARSQL(filterLocation)) {
					do NewLine^COMTable()
				    	do InsertCell^COMTable("Estoque Anterior",,,,,,11)
				    	do InsertCell^COMTable($$^WWWTR(0,12,(-1 * qty) + qtyStock),,,,"right")
				    	do InsertCell^COMTable("",,,,,,3)
				    	do EndLine^COMTable()
				}
			}
 
			//Não mostrar as movimentações para o EmTransito
			//continue:($piece(Endereco,"||",2) = "EmTransito")
			
			if ((filterVisualizacao = $$$SIMPLIFICADO) && (count = 1) ){
				;do NewLine^COMTable()
				;do InsertCell^COMTable("",,,,,,6)
				;do InsertCell^COMTable($$^WWWTR(0,12,qtyStock),,,,"RIGHT")
		    	;do InsertCell^COMTable("Início do Periodo")
		    	;do EndLine^COMTable()
		    	;set qtyStockInicio = qtyStock
			}
			;if $$isTransferToSameLocation(debugedMovmtType,txnCode) {
			;	set nonStock=1
			;	do NewLine^COMTable("lightyellow")
			;	set strMovmtVetor="Carga/Transporte"
			;	set strMovmtFromTo=$$SQLGetLocationName^VARSQL($piece($get(^INTFR(YM,txnCode,1)),Y,3))
			;}else {
				do NewLine^COMTable()
			;}
			
			set count = $increment(count)
 
	    	if (filterVisualizacao = $$$DETALHADO) {
		    	
		    	do InsertCell^COMTable(count)
		    	do InsertCell^COMTable(txnCode,strMovmtLink,txnCode)
			do InsertCell^COMTable(strMovmtType,strMovmtLink,txnCode,,,,,,,$$$YES)
			do InsertCell^COMTable(strMovmtVetor)
			do InsertCell^COMTable(strMovmtFromTo,,,,,,,,,$$$YES)
			do InsertCell^COMTable($zdate(dteMovimentacao,4))
			do InsertCell^COMTable($ztime(hour))
			do InsertCell^COMTable($$^WWWTR(0,12,qty),,,,"RIGHT")

			if ($$SQLIsStorageLocation^VARSQL(filterLocation)) {
				set Endereco = $piece(Endereco,"||",2)
			}
			else {
				set Endereco = " "
			}
			do InsertCell^COMTable(Endereco)
			
			set:('lot) lot = " " //Evitando a formatação feia do COMTable
			do InsertCell^COMTable(lot)
			
			set DataFormatada = ""
		
			if (dteExpiry) {
				set DataFormatada = $zdate(dteExpiry,4) 
			} else {
				set DataFormatada = " "	
			}
		
			do InsertCell^COMTable(DataFormatada)
			
			do InsertCell^COMTable($$^WWWTR(0,12,qtyStock),,,,"RIGHT")
			
			if (ItemPolicyHasProgram = $$$YES) {  				
				if ('nomePrograma) set nomePrograma = " "
				do InsertCell^COMTable(nomePrograma,,,,,,,,,$$$YES)
			}
		
			if (ItemPolicyHasBrand = $$$YES) {
				if ('nomeMarca) set nomeMarca = " "
				do InsertCell^COMTable(nomeMarca,,,,,,,,,$$$YES)
			}
		
			do InsertCell^COMTable(responsavel,,,,,,,,,$$$YES)		
		    	do EndLine^COMTable()
 
			set $piece(objReport,Y,1) = txnCode
		    	set $piece(objReport,Y,2) = strMovmtType
		    	set $piece(objReport,Y,3) = strMovmtVetor
		    	set $piece(objReport,Y,4) = dteMovimentacao
		    	set $piece(objReport,Y,5) = hour
		    	set $piece(objReport,Y,6) = qty
		    	set $piece(objReport,Y,7) = Endereco
		    	set $piece(objReport,Y,8) = lot
		    	set $piece(objReport,Y,9) = dteExpiry
		    	set $piece(objReport,Y,10) = responsavel
		    	set $piece(objReport,Y,11) = filterItem
		    	set $piece(objReport,Y,12) = filterdteInicial
		    	set $piece(objReport,Y,13) = filterdteFinal
		    	set $piece(objReport,Y,14) = filterLocation
		    	set $piece(objReport,Y,15) = nomePrograma
		    	set $piece(objReport,Y,16) = strMovmtFromTo
		    	set $piece(objReport,Y,17) = nomeMarca
		    	set $piece(objReport,Y,18) = qtyStock
		    	set $piece(objReport,Y,19) = ID
		    	set stKey = YBED_","_count 
		    	set status = $$$Save("VARTempStockHistoryReport",stKey,objReport,1)

			if ('$$SQLIsStorageLocation^VARSQL(filterLocation)) {
				set count = $increment(count)
				do NewLine^COMTable()
			    	do InsertCell^COMTable(count)
			    	do InsertCell^COMTable(txnCode,strMovmtLink,txnCode)
				do InsertCell^COMTable(strMovmtType,strMovmtLink,txnCode,,,,,,,$$$YES)
				do InsertCell^COMTable("Saída")
				do InsertCell^COMTable(strMovmtFromTo,,,,,,,,,$$$YES)
				do InsertCell^COMTable($zdate(dteMovimentacao,4))
				do InsertCell^COMTable($ztime(hour))
				do InsertCell^COMTable($$^WWWTR(0,12,-1*qty),,,,"RIGHT")
				do InsertCell^COMTable("Baixa")
				set:('lot) lot = " " //Evitando a formatação feia do COMTable
				do InsertCell^COMTable(lot)
				set DataFormatada = ""
				if (dteExpiry) {
					set DataFormatada = $zdate(dteExpiry,4) 
				} else {
					set DataFormatada = " "	
				}
				do InsertCell^COMTable(DataFormatada)
				do InsertCell^COMTable($$^WWWTR(0,12,qtyStock),,,,"RIGHT")
				if (ItemPolicyHasProgram = $$$YES) {  				
					if ('nomePrograma) set nomePrograma = " "
					do InsertCell^COMTable(nomePrograma,,,,,,,,,$$$YES)
				}
				if (ItemPolicyHasBrand = $$$YES) {
					if ('nomeMarca) set nomeMarca = " "
					do InsertCell^COMTable(nomeMarca,,,,,,,,,$$$YES)
				}
				do InsertCell^COMTable(responsavel,,,,,,,,,$$$YES)
			    	do EndLine^COMTable()
			    	set qtSaida = qtSaida + (-1*qty)
			    	
				set objReport = "" 
				set $piece(objReport,Y,1) = txnCode
			    	set $piece(objReport,Y,2) = strMovmtType
			    	set $piece(objReport,Y,3) = "Saída"
			    	set $piece(objReport,Y,4) = dteMovimentacao
			    	set $piece(objReport,Y,5) = hour
			    	set $piece(objReport,Y,6) = -1*qty
			    	set $piece(objReport,Y,7) = "Baixa"
			    	set $piece(objReport,Y,8) = lot
			    	set $piece(objReport,Y,9) = dteExpiry
			    	set $piece(objReport,Y,10) = responsavel
			    	set $piece(objReport,Y,11) = filterItem
			    	set $piece(objReport,Y,12) = filterdteInicial
			    	set $piece(objReport,Y,13) = filterdteFinal
			    	set $piece(objReport,Y,14) = filterLocation
			    	set $piece(objReport,Y,15) = nomePrograma
			    	set $piece(objReport,Y,16) = strMovmtFromTo
			    	set $piece(objReport,Y,17) = nomeMarca
			    	set $piece(objReport,Y,18) = qtyStock
			    	set $piece(objReport,Y,19) = ID
			    	set stKey = YBED_","_count 
			    	set status = $$$Save("VARTempStockHistoryReport",stKey,objReport,1)
			}
		    	
	    	}else{
 
		    	do InsertCell^COMTable(count)
				do InsertCell^COMTable($zdate(dteMovimentacao,4))
				if (qty > 0) {
					do InsertCell^COMTable($$^WWWTR(0,12,qty),,,,"RIGHT")
				}else{
					do InsertCell^COMTable("-",,,,"RIGHT")
				}
				if (qty < 0) {
					do InsertCell^COMTable($$^WWWTR(0,12,(-1*qty)),,,,"RIGHT")
				}else{
					do InsertCell^COMTable("-",,,,"RIGHT")
				}
		    	do InsertCell^COMTable(txnCode,strMovmtLink,txnCode)
				do InsertCell^COMTable(strMovmtFromTo,,,,,,,,,$$$YES)
				//do InsertCell^COMTable($$^WWWTR(0,12,qtyStockInicio+qty),,,,"RIGHT")
				do InsertCell^COMTable(strMovmtType,strMovmtLink,txnCode,,,,,,,$$$YES)
				if (filterVisualizacao '= $$$SIMPLIFICADO){
					do InsertCell^COMTable(nomePrograma,,,,,,,,,$$$YES)			
				}
				;set qtyStockInicio = qtyStockInicio + qty
	
			}
			
			if ($piece(Endereco,"||",2) '= "EmTransito") {
				if (qty > 0) {
					set qtEntrada = qtEntrada + qty
				}
				elseif (qty < 0) {
					set qtSaida = qtSaida + qty
				}
			}
		}
		
		if (count = 0) {
			do NewLine^COMTable()
			if (filterVisualizacao = $$$DETALHADO) {
				do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,15)
			}else{
				do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,7)
			}
	    	do EndLine^COMTable()
		}
		
		do Stop^COMTable()		
  	}
	
	do StockHistorySQL.Close()

	write "<br />"
	write "<table cellspacing='3' style='padding:5px;font-size:13px;margin-left:6px;border:1px solid #666666'>"
	write "<tr style='background-color:#bababa'><td colspan='2' style='padding:3px 5px'><strong>Resumo do Período</strong></td></tr>"
	write "<tr><td style='padding-left:5px;padding-right:5px'><strong>Total de Entradas:</strong></td><td style='padding-left:5px;padding-right:5px;text-align:right'>"_$$^WWWTR(0,12,qtEntrada)_"</td></tr>"
	write "<tr><td style='padding-left:5px;padding-right:5px'><strong>Total de Saídas:</strong></td><td style='padding-left:5px;padding-right:5px;text-align:right'>"_$$^WWWTR(0,12,(-1*qtSaida))_"</td></tr>"
	write "<tr><td style='padding-left:5px;padding-right:5px'><strong>Estoque Atual:</strong></td><td style='padding-left:5px;padding-right:5px;text-align:right'>"_$$^WWWTR(0,12,qtyStock)_"</td></tr>"
	write "</table>"
 
    quit
 
getDebugedMovmtType(MovmtType)
	new debugedMovmtType
	set debugedMovmtType = $listget(MovmtType, 1)
	quit debugedMovmtType
	
shouldShow(pMovementType,pQty)
	set strStatus=1
	if ( (pMovementType = 5) || (pMovementType = 51) ) {
		if (pQty < 0) set strStatus=0
	}
	quit strStatus		
 
GetMovmtType(pMovmtType,pTxnCode)
	if (pMovmtType = "") || (pTxnCode = "") quit ""
 
	new strMovmtType
	
	if (pMovmtType = 1) {
		set strMovmtType = "Recebimento"	
	
	} elseif (pMovmtType = 5) {
		set strMovmtType = "Movimentação no armazém"	
	
	} elseif (pMovmtType = 7) {
		set strMovmtType = "Estorno de recebimento"		
 
	} elseif (pMovmtType = 8) {
		set strMovmtType = "Devolução ao fornecedor"		
 
	} elseif (pMovmtType = 11) {
		set strMovmtType = "Requisição"		
 
	} elseif (pMovmtType = 21) {
		set strMovmtType = "Dispensação ao paciente"
 
	} elseif (pMovmtType = 22) {
		set strMovmtType = "Devolução ao estoque"		
 
	} elseif (pMovmtType = 30) {
		set strMovmtType = "Transferência"
	
	} elseif (pMovmtType = 31) {
		set strMovmtType = "Aceite de transferência"
	
	} elseif (pMovmtType = 32) {
		set strMovmtType = "Estorno de transferência"
	
	} elseif (pMovmtType = 35) {
		set strMovmtType = "Saída de produtos para produção"
	
	} elseif (pMovmtType = 36) {
		set strMovmtType = "Recebimento da produção"
	
	} elseif (pMovmtType = 37) {
		set strMovmtType = "Estorno de componente da produção"
	
	} elseif (pMovmtType = 38) {
		set strMovmtType = "Estorno da produção"
	
	} elseif (pMovmtType = 40) {
		set idAdjType = $piece($get(^INADJ(YM,pTxnCode,1)),Y,1)
		
		if idAdjType = 5 {
			set strMovmtType = "Doação"
		} elseif idAdjType = 0 {
			set strMovmtType = "Descarte de produto vencido"
 
		} elseif idAdjType = 1 {
			set strMovmtType = "Perda por quebra/avaria"
		
		} elseif idAdjType = 9 {
			set strMovmtType = "Outras saídas"
		}
		
		else {
			set strMovmtType = "Ajuste"
		}
		
	} elseif (pMovmtType = 41) {
		set strMovmtType = "Inventário"
	
	} elseif (pMovmtType = 51) {
		set strMovmtType = "Movimentação no armazém (palete)"
	
	} else {
		set strMovmtType = pMovmtType		
	}
	
	quit strMovmtType
	
GetMovmtLink(pMovmtType,pTxnCode)
	if (pMovmtType = "") || (pTxnCode = "") quit ""
 
	new strMovmtLink, idAdjType
	
	if (pMovmtType = 1) {
		set strMovmtLink = "INReceipt"	
	
	} elseif (pMovmtType = 5) {
		set strMovmtLink = "INMOV"	
	
	} elseif (pMovmtType = 7) {
		set strMovmtLink = "INRECReverse"	
	
	} elseif (pMovmtType = 8) {
		set strMovmtLink = "INReturnToSupplier"
	
	} elseif (pMovmtType = 11) {
		set strMovmtLink = "INIssue"	
	
	} elseif (pMovmtType = 21) {
		set strMovmtLink = "INDispenseToPatient"	
	
	} elseif (pMovmtType = 22) {
		set strMovmtLink = "INIssueRev"
 
	} elseif (pMovmtType = 30) {
		set strMovmtLink = "INTFR"
 
	} elseif (pMovmtType = 31) {
		set strMovmtLink = "INRECTFR"
 
	} elseif (pMovmtType = 32) {
		set strMovmtLink = "INTFRRev"
 
	} elseif (pMovmtType = 35) {
		set strMovmtLink = "INMOIssue"
 
	} elseif (pMovmtType = 36) {
		set strMovmtLink = "INMOREC"
 
	} elseif (pMovmtType = 37) {
		set strMovmtLink = "INMORev"
 
	} elseif (pMovmtType = 38) {
		set strMovmtLink = "INMORev"
 
	} elseif (pMovmtType = 40) {		
		set idAdjType = $piece($get(^INADJ(YM,pTxnCode,1)),Y,1)		
		
		if idAdjType = 5 {
			set strMovmtLink = "VARINADJDoacao"		
		} else {
			set strMovmtLink = "VARINADJ"	
		}	
	
	} elseif (pMovmtType = 41) {
		set strMovmtLink = "INADJ" ;INWEINVP
	
	} elseif (pMovmtType = 51) {
		set strMovmtLink = "INMOVByPallet"
 
	} else {
		set strMovmtLink = ""		
	}
	
	quit strMovmtLink	
	
	
GetMovmtVetor(pMovmtType,pQty)
	if pMovmtType = "" quit ""
 
	new strMovmtVetor
	set strMovmtVetor = ""
 
	if (pMovmtType = 1) {
		set strMovmtVetor = "Entrada"	
	
	} elseif ( (pMovmtType = 5) || (pMovmtType = 51) ) {
		set strMovmtVetor = "Realocação"	
	
	} elseif (pMovmtType = 7) {
		set strMovmtVetor = "Saída"
 
	} elseif (pMovmtType = 8) {
		set strMovmtVetor = "Saída"
 
	} elseif (pMovmtType = 11) {
		if pQty > 0 {
			set strMovmtVetor = "Entrada"
		} elseif pQty < 0 {
			set strMovmtVetor = "Saída"
		}
 
	} elseif (pMovmtType = 21) {
		set strMovmtVetor = "Saída"
	
	} elseif (pMovmtType = 22) {
		if pQty > 0 {
			set strMovmtVetor = "Entrada"
		} elseif pQty < 0 {
			set strMovmtVetor = "Saída"
		}
	
	} elseif (pMovmtType = 30) {
		set strMovmtVetor = "Saída"
	
	} elseif (pMovmtType = 31) {
		if pQty > 0 {
			set strMovmtVetor = "Entrada"
		} elseif pQty < 0 {
			set strMovmtVetor = "Saída"
		}
	
	} elseif (pMovmtType = 32) {
		set strMovmtVetor = "Entrada"
	
	} elseif (pMovmtType = 35) {
		set strMovmtVetor = "Saída"
	
	} elseif (pMovmtType = 36) {
		set strMovmtVetor = "Entrada"
	
	} elseif (pMovmtType = 37) {
		set strMovmtVetor = "Entrada"
	
	} elseif (pMovmtType = 38) {
		set strMovmtVetor = "Entrada"
	
	} elseif (pMovmtType = 40) {
		if pQty > 0 {
			set strMovmtVetor = "Entrada"
		} elseif pQty < 0 {
			set strMovmtVetor = "Saída"
		}
		
	} elseif (pMovmtType = 41) {
		if pQty > 0 {
			set strMovmtVetor = "Entrada"
		} elseif pQty < 0 {
			set strMovmtVetor = "Saída"
		}
	
	} else {
		set strMovmtVetor = ""
	}
	
	quit strMovmtVetor
	
GetMovmtFromTo(pMovmtType,pTxnCode,pPhysicalStorage="",pTxnCodeLine="",pStorage="")
	if $get(YM)="" do ^WWWVAR
	if (pMovmtType = "") || (pTxnCode = "") quit ""
	
	new strMovmtFromTo, idFornecedor, idLocal, idTransfer, idPaciente, idAdjType, idEntidadeDoacao, 
		idSaida, idRecSource
	
	set strMovmtFromTo = ""
 
	if (pMovmtType = 1) {  		//Recebimento
		set idFornecedor = $piece($get(^INREC(YM,pTxnCode,1)),Y,49)
		set strMovmtFromTo = $$SQLGetDescFornecedor^VARSQL(idFornecedor)
 
	} elseif (pMovmtType = 5) {
		
		set objStorage = $get(^INMOVLine(YM,pTxnCode,pTxnCodeLine,1))
		set FromStorage = $piece(objStorage,Y,2)
		set ToStorage   = $piece(objStorage,Y,7)	
		set strMovmtFromTo = FromStorage_" -> "_ToStorage
	
	} elseif (pMovmtType = 7) {
		set idRecSource = $piece($get(^INREC(YM,pTxnCode,1)),Y,78)
		if (idRecSource '= "") {
			set idFornecedor = $piece($get(^INREC(YM,idRecSource,1)),Y,49)
			set strMovmtFromTo = $$SQLGetDescFornecedor^VARSQL(idFornecedor)
		} else { 
			set strMovmtFromTo = ""
		}	
 
	} elseif (pMovmtType = 8) {
		set idFornecedor = $piece($get(^INIssue(YM,pTxnCode,1)),Y,34)
		set strMovmtFromTo =  $$SQLGetDescFornecedor^VARSQL(idFornecedor)
 
	} elseif (pMovmtType = 11) {
		set idLocal = $piece($get(^INIssue(YM,pTxnCode,1)),Y,2)
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
	
	} elseif (pMovmtType = 21) {
		set idPaciente = $piece($get(^INIssue(YM,pTxnCode,1)),Y,23)
		set strMovmtFromTo = $$SQLGetPatientName^VARSQL(idPaciente)
 
	} elseif (pMovmtType = 22) {
		;set idLocal = $piece($get(^INIssueRev(YM,pTxnCode,1)),Y,4)
		set idLocal = $piece($get(^INIssueRev(YM,pTxnCode,1)),Y,3) //Será sempre retornado ao local abastecedor
		
		//Setor
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
		
		//Paciente
		if strMovmtFromTo = "" {
			set idSaida = $piece($get(^INIssueRev(YM,pTxnCode,1)),Y,1)
			set idPaciente = $piece($get(^INIssue(YM,idSaida,1)),Y,23)
			set strMovmtFromTo = $$SQLGetPatientName^VARSQL(idPaciente)
		}	
	
	} elseif (pMovmtType = 30) {
		set idLocal = $piece($get(^INTFR(YM,pTxnCode,1)),Y,4)
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
	
	} elseif (pMovmtType = 31) {
		set idTransfer = $piece($get(^INREC(YM,pTxnCode,1)),Y,19)
		set idLocal = $piece($get(^INTFR(YM,idTransfer,1)),Y,3)
		if $piece(pStorage,"||",1)=idLocal {
			set idLocal = $piece($get(^INTFR(YM,idTransfer,1)),Y,4)
		}
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
	
	} elseif (pMovmtType = 32) {
		if $length(pTxnCode,"||")>1 set pTxnCode=$piece(pTxnCode,"||",1)_","_$piece(pTxnCode,"||",2)
		set idLocal = $piece($get(^INTFRRev(YM,$$$KEY1(pTxnCode),$$$KEY2(pTxnCode),1)),Y,4)
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
 
	} elseif (pMovmtType = 35) {
		set idLocal = $$$INIssueToLocn($get(^INIssue(YM,pTxnCode,1)))
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
 
	} elseif (pMovmtType = 36) {
		set idLocal = $$$INRECLocation($get(^INREC(YM,pTxnCode,1)))
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
 
	} elseif (pMovmtType = 37) {
		set idLocal = $$$INMORevSupplyingLocation($get(^INMORev(YM,pTxnCode,1)))
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
 
	} elseif (pMovmtType = 38) {
		set idLocal = $$$INMORevSupplyingLocation($get(^INMORev(YM,pTxnCode,1)))
		set strMovmtFromTo = $$SQLGetLocationName^VARSQL(idLocal)
 
	} elseif (pMovmtType = 40) {
 
		set idAdjType = $piece($get(^INADJ(YM,pTxnCode,1)),Y,1)
		
		if idAdjType = 5 {
			set idEntidadeDoacao = $piece($get(^INADJ(YM,pTxnCode,1)),Y,11)
			set strMovmtFromTo = $$SQLGetNomeEntidadeDoacao^VARSQL(idEntidadeDoacao)
		} else {
			set strMovmtFromTo = ""
		}
	
	} elseif (pMovmtType = 51) {
		set strMovmtFromTo = $piece(pPhysicalStorage,"||",1)_" -> "_$piece(pPhysicalStorage,"||",2)
	
	} else {
		set strMovmtFromTo = ""
	}
	
	quit strMovmtFromTo
 
GetProcessedBy(pMovmtType,pTxnCode)
	if (pMovmtType = "") || (pTxnCode = "") quit ""
	
	new processedBy
	if (pMovmtType = 1) {  		//Recebimento
		set processedBy = $piece($get(^INREC(YM,pTxnCode,1)),Y,7)
	
	} elseif ( (pMovmtType = 5) || (pMovmtType = 51) ) {   //Movimentação no Armazém
		set processedBy = $piece($get(^INMOV(YM,pTxnCode,1)),Y,25)
	
	} elseif (pMovmtType = 7) {  //Estorno de Recebimento
		set processedBy = $piece($get(^INREC(YM,pTxnCode,1)),Y,7)
	
	} elseif (pMovmtType = 8) {  //Devolução ao Fornecedor
		set processedBy = $piece($get(^INIssue(YM,pTxnCode,1)),Y,10)
		if processedBy = "" set processedBy = $piece($get(^INIssue(YM,pTxnCode,1)),Y,8)
	
	} elseif (pMovmtType = 11) {  //Requisição
		set processedBy = $piece($get(^INIssue(YM,pTxnCode,1)),Y,10)
		if processedBy = "" set processedBy = $piece($get(^INIssue(YM,pTxnCode,1)),Y,8)
	
	} elseif (pMovmtType = 21) {  //Dispensação ao Paciente
		set processedBy = $piece($get(^INIssue(YM,pTxnCode,1)),Y,10)
		if processedBy = "" set processedBy = $piece($get(^INIssue(YM,pTxnCode,1)),Y,8)
	
	} elseif (pMovmtType = 22) {  //Devolução ao Estoque
		set processedBy = $piece($get(^INIssueRev(YM,pTxnCode,1)),Y,11)
		if processedBy = "" set processedBy = $piece($get(^INIssueRev(YM,pTxnCode,1)),Y,9)
	
	} elseif (pMovmtType = 30) {  //Transferência
		set processedBy = $piece($get(^INTFR(YM,pTxnCode,1)),Y,16)
	
	} elseif (pMovmtType = 31) {  //Aceite de Transferência
		set processedBy = $piece($get(^INREC(YM,pTxnCode,1)),Y,7)
	
	} elseif (pMovmtType = 32) {  //Estorno de Transferência
		if $length(pTxnCode,"||")>1 set pTxnCode=$piece(pTxnCode,"||",1)_","_$piece(pTxnCode,"||",2)
		set processedBy = $piece($get(^INTFRRev(YM,$$$KEY1(pTxnCode),$$$KEY2(pTxnCode),1)),Y,16)
	
	} elseif (pMovmtType = 35) {  //Recebimento da produção
		set processedBy = $$$INIssueChangedBy($get(^INIssue(YM,pTxnCode,1)))
	
	} elseif (pMovmtType = 36) {  //Saída de Produtos para Produção
		set processedBy = $$$INRECProcessedBy($get(^INREC(YM,pTxnCode,1)))
	
	} elseif (pMovmtType = 37) {  //Estorno de componente da produção
		set processedBy = $$$INMORevModifiedBy($get(^INMORev(YM,pTxnCode,1)))
	
	} elseif (pMovmtType = 38) {  //Estorno da produção
		set processedBy = $$$INMORevModifiedBy($get(^INMORev(YM,pTxnCode,1)))
	
	} elseif (pMovmtType = 40) {  //Saída Material Vencido
		set processedBy = $piece($get(^INADJ(YM,pTxnCode,1)),Y,33)
	
	} elseif (pMovmtType = 41) {  //Inventário
		set processedBy = $piece($get(^INADJ(YM,pTxnCode,1)),Y,33)
	
	} else {
		set processedBy = ""
	}
	
	if processedBy '= "" quit $piece($get(^WWW013(YM,processedBy,1)),Y,1)	
	
	quit processedBy
	
CanViewReport()
	
	if ($piece($get(^VARTempStockHistory(YM,YBED,1)),Y,1) = ""){
		new strStatus
	    set strStatus = "Selecione um registro para gerar o relatório"	
	    $$$YQHandler(strStatus)
	}
	quit
 
BlurVisualizacao()
	quit
	;ALJAVA-74:
	;Comentado o código abaixo, porque nunca vai passar por causa do quit acima
	;if ($piece($$$GetFormData(YFORM,"M"),Y,8) = $$$SIMPLIFICADO) {
	;	set %TXT(1) = "#Y"_YFORM_"M7~"_
	;				  "#Y"_YFORM_"M7~READ"_
	;				  "#Y"_YFORM_"M6~READ"_
	;				  "#Y"_YFORM_"M5~READ"_
	;				  "#Y"_YFORM_"M6~UNCHECKED"
	;}else{
	;	set %TXT(1) = "#Y"_YFORM_"M7~WRITE"_
	;				  "#Y"_YFORM_"M6~WRITE"_
	;				  "#Y"_YFORM_"M5~WRITE"
	;}
	;quit
	
ImprimeRelatorio()
	new Item, Location, dteInicial, dteFinal, pFiltroEnd
	set Item = $piece(^VARTempStockHistory(YM,YBED,1),Y,1)
	set Location = $piece(^VARTempStockHistory(YM,YBED,1),Y,2)
	set dteInicial = $piece(^VARTempStockHistory(YM,YBED,1),Y,3)
	set dteFinal = $piece(^VARTempStockHistory(YM,YBED,1),Y,4)
	do RunReportMovEstoqueProduto^VARJasperRunReport(YBED, Item, Location, dteInicial, dteFinal)
	quit
	
	;ALJAVA-74:
	;Comentado o código abaixo, porque nunca vai passar por causa do quit acima
	;if ($piece($$$GetFormData(YFORM,"M"),Y,8) = $$$DETALHADO) {
	;	do RunReportMovEstoqueProduto^VARJasperRunReport(YBED, Item, Location, dteInicial, dteFinal)
	;}else{
	;	set pProgram = $piece(^VARTempStockHistory(YM,YBED,1),Y,5)
	;	set pFiltroEnd = $piece(^VARTempStockHistory(YM,YBED,1),Y,6)
	;	do RunReportFichaDeEstoque^VARJasperRunReport(Item, Location, dteInicial, dteFinal, pFiltroEnd, pProgram)
	;}
	;quit
	
GetMovmtType2(pMovmtType,pTxnCode)
	quit $$GetMovmtType($listget(pMovmtType, 1),pTxnCode)
 
GetMovmtFromTo2(pMovmtType,pTxnCode)
	quit $$GetMovmtFromTo($listget(pMovmtType, 1),pTxnCode)
	
isTransferToSameLocation(pMovmtType,ptxnCode)
	new strValue,objINTFR,idDispatch,fromLocation,objINDRPUMLKW
	set strValue=$$$NO
	if pMovmtType=30 {
		set objINTFR=$get(^INTFR(0,ptxnCode,1))
		if objINTFR'="" {
			set idDispatch=$$$INTFRDispatch(objINTFR)
			set fromLocation=$$$INTFRSendingLocation(objINTFR)
			SET objINDRPUMLKW=$get(^INDRPUMLKW(0,idDispatch,1))
			if objINDRPUMLKW'="" {
				if $$$INDRPUMLKWLocation(objINDRPUMLKW)=fromLocation set strValue=$$$YES
			}
		}
		
		
	}
	quit strValue
 

]]></Routine>
</Export>