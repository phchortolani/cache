<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INARTCOST" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INARTCOST
	;-------------------------------------------------------------------------------
	; Cost Routines - DEPRECATED WITH SR16871 - use INItemCost instead
	;
	; History:
	; 07-Sep-2009	PPP		SR16878: Created
	;-------------------------------------------------------------------------------
	
#include COMSYS
#include INConst
	
#define enumAverageCost		9
	
GetCost(pidItem,pidCostType="",pdteEffect="",ptmeEffect="")            ; DEPRECATED for average cost
	quit $$GetCost^INItemCost($get(pidItem),$get(YLOCATION),pidCostType,pdteEffect,ptmeEffect="")
	;-------------------------------------------------------------------------------
	; Get Cost for an Item effective at a given Date and Tme
	;
	; Inputs:
	;	pidItem			Item ID
	;	pidCostType		Cost Type (9 - Avg)
	;	pdteEffect		Date Effective
	;	ptmeEffect		Time Effective
	;
	; Returns:
	;	Cost		%Float
	;
	; History:
	; 24-Feb-2010	GRF		SR16871: Direct any remaining calls to INItemCost -
	; 							really needs any calls to be redirected with actual
	; 							location/cost centre as appropriate.
	; 30-Oct-2009	GRF		SR16871: DEPRECATED - Use GetCost^INItemCost
	; 07-Sep-2009	PPP		SR16878: Created
	;-------------------------------------------------------------------------------
	new fltCost,idChildItem,idLine,objINARTT
	
	set fltCost = 0
	
	if $get(pidCostType)="" {
		set pidCostType = +$$$INVORGDefaultCostType($get(^INVORG(0,0,1)))
	}
	
	set:$get(pdteEffect)="" pdteEffect = +$horolog
	
	; Bill of Materials Calculation
	;---------------------------------------
	if $data(^INARTT(0,pidItem)) {   ; "Modify Item Parts" class
		set idLine = ""
		for {
			set idLine = $order(^INARTT(0,pidItem,idLine))
			quit:idLine=""
			
			set objINARTT = $get(^INARTT(0,pidItem,idLine,1))
			
			set idChildItem = $$$INARTTItemNumber1(objINARTT)
			
			if idChildItem'="" {
				if pidCostType  = $$$enumAverageCost {
					set fltCost = fltCost + $$GetCost(idChildItem,pidCostType,pdteEffect,ptmeEffect) ; FIXME : Not factoring Component Qty
				
				} else {
					set fltCost = fltCost + $$$INARTTValue1(objINARTT) ; FIXME : Not factoring Component Qty
				}
			}
		}
	
	; Standard Item Calculation
	;---------------------------------------
	} else {
		if pidCostType = $$$enumAverageCost {
			set fltCost = $$GetCostAsAtDateAndTime^INARTAVG(pidItem,pdteEffect,ptmeEffect)
		}
	}
	
	quit $justify(fltCost,0,$$DPforInventoryCost^INVORG())
	

]]></Routine>
</Export>