<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INRECTFRSearch" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INRECTFRSearch

#include COMSYS
#include VARConst
#include INConst

OnBeforeSQL(&YSQL,YKEY,YFELD)
	;-------------------------------------------------------------------------------
	; Filter Tranfers to Receipt Location (YLOCATION) and (Status 2 or 3) 
	; Not Used untill we speed up 'do CanCreateReceipt^INTRNRec(idRec)' logic
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
    ; 24-Oct-2013	SCR		SESDF-669: Created .
	;-------------------------------------------------------------------------------
	set YSQL =
			"SELECT INRECTFRSearch.ID "_
			"FROM   SQLUser.INRECTFRSearch "_
			"WHERE  INRECTFRSearch.Company = "_YM_
			"AND    INRECTFRSearch.User1 = '"_YUSER_"'"
	;set YSQL =""	
	quit $$$OK


Run()
    ;-------------------------------------------------------------------------------
    ;
    ; History:
    ; 08-Jan-2014	shobby	HEVA-1349: FREE1->RequisitionNumber
    ; 24-Oct-2013	SCR		SESDF-669: use index & only check status 2 & 3
    ;-------------------------------------------------------------------------------
	new strStatus,idRec,link,idxToLoc,idStatus,idUser,objRec,objTFR
	
	if ((YKEY="") || YRETURN) {
		; Remove all entries that are older than 2 days
		set idUser=""
		for {
			set idUser	= $order(^INRECTFRSearch(YM,idUser))
			quit:idUser=""
			set idRec	= ""
			for {
				set idRec	= $order(^INRECTFRSearch(YM,idUser,idRec))
				quit:idRec=""
				if $$$INRECTFRSearchCreatedDate($get(^INRECTFRSearch(YM,idUser,idRec,1)))<($h-1) {
					kill ^INRECTFRSearch(YM,idUser) ; Kill all
				}
				quit  ; only check first entry
			}
		}
		KILL ^INRECTFRSearch(YM,YUSER)
		set idxToLoc	= $$$Index(YLOCATION)
		for idStatus=2:1:3 {
			set idRec=""
			for {
				set idRec=$order(^INTFRs(0,3,idxToLoc,idStatus,idRec))
				quit:idRec=""
				if YLOCATION=$piece($get(^INTFR(YM,idRec,1)),Y,4) {
					do CanCreateReceipt^INTRNRec(idRec) 
					if YQ=0 {
						set objRec	= ""
						set objTFR	= $get(^INTFR(YM,idRec,1))
						set $$$INRECTFRSearchTransferNumber(objRec)		= idRec
						set $$$INRECTFRSearchDate1(objRec)				= $$$INTFRCreatedDate(objTFR)
						set $$$INRECTFRSearchRequisition(objRec)		= $$$INTFRRequisitionNumber(objTFR) ;HEVA-1349
						set $$$INRECTFRSearchSendingLocation(objRec)	= $$$INTFRSendingLocation(objTFR)
						set $$$INRECTFRSearchReceivingLocation(objRec)	= $$$INTFRReceivingLocation(objTFR)
						set $$$INRECTFRSearchGroup1(objRec)				= $$$INTFRFREE5(objTFR)
						set $$$INRECTFRSearchCreatedDate(objRec)		= $h
						set ^INRECTFRSearch(YM,YUSER,idRec,1)			= objRec		
					}
				}
			}
		}
		set link= YAKTION_"EP=WWWSEAR&YFORM=INRECTFRSearch&YUCI="_YUCI_"&YBED="_YBED_"&YM="_YM_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION
		$$$StartScript()
		write "window.location = '"_link_"'"
		$$$EndScript()
	}
	else {
		set strStatus = $$Transaction^COMTransaction("Transaction^INRECTFRSearch("""_$piece(YKEY,YKOMMA,2)_""",.idRec)",$$$YES)
		if $$$ISOK(strStatus) {
			set link= YAKTION_"EP=WWWFORM&YFORM=INRECTFR&YUCI="_YUCI_"&YBED="_YBED_"&YM="_YM_"&YUSER="_YUSER_"&YLOCATION="_YLOCATION_"&YKEY="_idRec
			$$$StartScript()
			write "window.location = '"_link_"'"
			$$$EndScript()
		}
 	}
	quit
	
Transaction(pID,&pidRec)
    ; 08-Jan-2014	shobby	HEVA-1349: FREE1->RequisitionNumber
	// pID is the Transfer Order (INTFR) number.
	new strStatus,idRec,objRecLine,transferLine,objINREC,idRecLine,valor,objTFR

 	set idRec	= ""
 	if $$OpenReceipt^INTFRInterfaceRec(pID,.idRec) {	//SR15239
	}
	elseif $$$ISOK($$Transaction^COMTransaction("CreateReceiptTxn^INTRNRec("""_pID_""")",$$$YES)) {
		set idRec=$get(^CacheTempTransferReceipt(YUSER))
	}
	kill ^CacheTempTransferReceipt(YUSER)
	if idRec="" quit "0~"_$$$Text("MED01000")  ;Não foi possivel criar o aceite ;use text macro;15-Sep-2008
	set objINREC= $get(^INREC(YM,idRec,1))
	set objTFR	= $get(^INTFR(YM,pID,1))
	set $$$INRECFREE1(objINREC)		= $$$INTFRSendingLocation(objTFR)
	set $$$INRECFREE2(objINREC)		= $$$INTFRRequisitionNumber(objTFR) ;HEVA-1349
	set $$$INRECFREE30(objINREC)	= $$$INTFRFREE5(objTFR) //Campo Grupo, GustavoFiuza@22-Dez-07
	set $$$INRECFREE20(objINREC)	= $$$INTFRFREE14(objTFR) //Campo Transferência NUMAB, MarceloOttoni@02-Feb-12
	set strStatus = $$$Save("INREC",idRec,objINREC,$$$YES)
	if $$$ISOK(strStatus) {
		set idRecLine=""
		set idRecLine=$order(^INRECLine(YM,idRec,idRecLine))
		while idRecLine'="" {
			// "idRecLine" is the Line Number of the Receipt.
			
			// Andre, 15/10/2007: Correção, pois estava sendo obtida a qtd. 
			// solicitada de uma linha da INTFRLine que tivesse
			// o mesmo número que a linha do recibo - INRECLine. Mas,
			// isto nem sempre é verdade, e é preciso obter o
			// número da linha da INTFRLine relacionada a partir
			// do campo CacheLine da INRECLine.
			
			set objRecLine = $get(^INRECLine(YM,idRec,idRecLine,1))
			set transferLine = $piece($$$INRECLineCacheLink(objRecLine),YKOMMA,2)
			
			// Next line is wrong because Receipt line number is not necessarily equals to the Transfer line number:
			//set valor=$piece($get(^INTFRLine(YM,pID,idRecLine,1)),Y,17) // Retrieves requested qty from Transfer Order.
			
			set valor=$piece($get(^INTFRLine(YM,pID,transferLine,1)),Y,17) // Retrieves requested qty from Transfer Order.
			set $piece(^INRECLine(YM,idRec,idRecLine,1),Y,30)=valor // Sets the requested qty field (Qtd. Solicitada).
			
			// Andre - fim.
			
			set idRecLine=$order(^INRECLine(YM,idRec,idRecLine))
		}
		set pidRec	= idRec
		quit strStatus
	} else {
		quit strStatus
	}
	

]]></Routine>
</Export>