<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARTRKINART" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARTRKINART
	#include INConst
	#include WWWConst
	#include COMSYS
	#include VARLog
	#import VAR.infra.webservice
	#import VAR.infra.webservice.trakcare
	#import VAR.update   
	#define RecordNotSelected ""
	//#define RecordNotSelected $$^WWWTEXT("VARTRK00001")
	quit
 
OnAfterField287()
	//EventValue(Namespace,User,Form,Fixkey,Field,Value,Funct,LocalVar,Tab)
 	//write !," retval = EventValue('"_$get(YUCI)_"','"_$get(YUSER)_"','"_$get(YFORM)_"','FIX"_$get(YKEY)_"','YINARTD287',this.value,'ValidaATC^VARTRKINART','',''); "
 	//EventValue(YUCI,YUSER,YFORM,'FIX'+YKEY,'itemNumberUpdateValues^AEPOfferLineItem',this.value,'6','');
	write !,"		<script language=JavaScript>"
	write !,"			var d287onblurOriginal = WWW2.YINARTD287.onblur;"
	write !,"			WWW2.YINARTD287.onblur = d287onblurNovo; "
	write !,"			"
	write !,"			function d287onblurNovo() { "
	write !," 				var retval; "
	write !,"				retval = EventValue('"_$get(YUCI)_"','"_$get(YUSER)_"','"_$get(YFORM)_"','FIX"_$get(YKEY)_"','ValidaATC^VARTRKINART',this.value,'6','',''); "
	//write !," 				alert(d287onblurOriginal);"
	//write !," 				d287onblurOriginal(); "
	write !,"				retval = EventValue('"_$get(YUCI)_"','"_$get(YUSER)_"','"_$get(YFORM)_"','FIX"_$get(YKEY)_"','YINARTD287',this.value,'2','NOVALUE','1'); "
	write !," 			};"
	write !," 		</script>"
	quit
	
ValidaATC(codATC,param2)
 /*	if (($get(codATC)'="") & ($length($get(codATC))<=4)) {
		quit "#FUNCTION~window.alert(""Selecione um código ATC válido, cujo tamanho é maior que 4, ou deixe este campo em branco.""); WWW2.YINARTD287.focus(); "
	}*/
	quit ""
 
UltimaCompra(CodProduto)
	// Retorna uma string delimitada com os dados da última compra:
	// piece 1: quantidade
	// piece 2: Preço
	// piece 3: valor total
	// piece 4: fornecedor
	// piece 5: data
	// piece 6: número da ordem de compra (AFM)
	// piece 7: número do item do pedido
	
	// Andre, 24/06/2009:
	// Alteração do SQL:
	// Versão anterior:
	/*
	&sql(
		DECLARE C1 CURSOR FOR
		SELECT 
			INAUFP.Quantity AS Quantidade,
			INAUFPK.UnitPrice AS PrecoUnitario,
			INAUFP.Cost AS ValorTotal,
			INAUF.SupplierNumber||' - '||INLIEF.ShortName AS Fornecedor,
			INAUF.OrderDate AS Data,
			INAUF.OrderNumber AS NumAFM,
			INAUFP.LineItem AS NumItemAFM
		INTO
			:Quantidade, :PrecoUnitario, :ValorTotal, :Fornecedor, :Data, :NumAFM, :NumItemAFM 
		FROM SQLUser.INAUFP, SQLUser.INAUF, SQLUser.INAUFPK, SQLUser.INLIEF 
		WHERE  INAUF.OrderNumber = INAUFP.OrderNo
		  AND  INAUFP.OrderNo = INAUFPK.OrderNumber
		  AND  INAUFP.LineItem = INAUFPK.LineItem
		  AND  INAUF.SupplierNumber = INLIEF.SupplierNumber
		  AND ItemNumber = :CodProduto
		ORDER BY Data DESC
	)
	*/
	&sql(
		DECLARE C1 CURSOR FOR
		SELECT 
			INAUFP.Quantity AS Quantidade,
			INAUFP.FREE7 AS PrecoUnitario,
			INAUFP.Cost AS ValorTotal,
			INAUF.SupplierNumber||' - '||INLIEF.ShortName AS Fornecedor,
			INAUF.OrderDate AS Data,
			INAUF.OrderNumber AS NumAFM,
			INAUFP.LineItem AS NumItemAFM
		INTO
			:Quantidade, :PrecoUnitario, :ValorTotal, :Fornecedor, :Data, :NumAFM, :NumItemAFM 
		FROM SQLUser.INAUFP, SQLUser.INAUF, SQLUser.INLIEF 
		WHERE  INAUF.OrderNumber = INAUFP.OrderNo
		  AND  INAUF.SupplierNumber = INLIEF.SupplierNumber
		  AND  UPPER(ItemNumber) = :CodProduto
		  AND  INAUF.FREE14 > 0
		ORDER BY Data DESC
	)
	&sql(OPEN C1)
	&sql(FETCH C1)
	set returnValue = ""
	if (SQLCODE = 0) {
		set returnValue = Quantidade_Y_PrecoUnitario_Y_ValorTotal_Y_Fornecedor_Y_$$SQLGetFormatDate^VARTRKSQL(Data)_Y_NumAFM_Y_NumItemAFM
	}
	/*
	While (SQLCODE = 0) {
		Write id, ":  ", name,!        
		&sql(FETCH C1)
	}
	*/
 	&sql(CLOSE C1)
	quit returnValue
	
	// Obtém a descrição de um Código ATC (VARSESATC).
	// Esta função é usada em queries SQL.
SQLGetDescATC(CodATC)
	set Desc = ""
	if ($get(CodATC) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^VARSESATC(0,CodATC,1)),"~",1)
	}
	quit Desc
 
	// Obtém a descrição de um Código MS (VARSESMSCP).
	// Esta função é usada em queries SQL.
SQLGetDescMS(CodMS)
	set Desc = ""
	if ($get(CodMS) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^VARSESMSCP(0,CodMS,1)),"~",1)
	}
	quit Desc
 
SQLGetDescProduto(CodProd)
	set Desc = ""
	if ($get(CodProd) = "") {
		set Desc = ""
	}
	else {
		set Desc = $piece($get(^INART(0,CodProd,1)),"~",1)
	}
	quit Desc
	
SQLGetGrupo(CodProd)
	set grupo = ""
	if ($get(CodProd) = "") {
		set grupo = ""
	}
	else {
		set codGrupo = $piece($get(^INART(0,CodProd,1)),"~",30)
		set descGrupo = $piece($get(^INItemGroup(0,codGrupo,1)),"~",2)
		;set grupo = codGrupo_" - "_descGrupo
		set grupo = descGrupo
	}
	quit grupo
	
SQLGetUM(pCompany,pCodProduto)
	new codUM
	set codUM = $piece($get(^INART(pCompany,pCodProduto,1)),"~",40)
	quit codUM
	
getGroupName1()
	quit "Indicadores do item no local "_YLOCATION_" - "_$$$WWW0121LocationName($get(^WWW0121(0,YM,YLOCATION,1)))
	
getCMM()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	$$$VAR
	// Andre, 26/01/2008:
	//quit $$^WWWTR(0,8,$$getCMM^VARTRKINDRPBESTVOR(YKEY))
	quit $$getCMMRede(YKEY)
 
getCMMRede(idItem)
	// 25/01/2008, Andre.
	// CMMRede - Consumo Médio Mensal de toda a empresa (Rede SES)
	$$$VAR
	if idItem="" quit ""
	quit $piece($get(^INART(YM,idItem,1)),Y,276)
	
getMOV()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	// Andre, 26/01/2008:
	//quit $$^WWWTR(0,8,$$getMOV^VARTRKINDRPBESTVOR(YKEY))
	quit $$^WWWTR(0,8,$$getMOV^VARSESINDRPITEM(YKEY,YLOCATION))
 
getLocalCentral(pItem)
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set LocalCentral = $piece($get(^INART(0,pItem,1)),Y,406)
	quit LocalCentral
	
getSafetyStock()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set LocalCentral = $$getLocalCentral(YKEY)
	quit:(LocalCentral = "") ""
	quit $$^WWWTR(0,8,$$$INDRPITEMSafetyStock($get(^INDRPITEM(YM,LocalCentral,YKEY,1))))
	
getReOrderPoint()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set LocalCentral = $$getLocalCentral(YKEY) 
	quit:(LocalCentral = "") ""
	quit $$^WWWTR(0,8,$$$INDRPITEMReOrderPoint($get(^INDRPITEM(YM,LocalCentral,YKEY,1))))
	
getDefaultStockQuantity()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set LocalCentral = $$getLocalCentral(YKEY) 
	quit:(LocalCentral = "") ""
	quit $$^WWWTR(0,8,$$$INDRPITEMDefaultStockQuantity($get(^INDRPITEM(YM,LocalCentral,YKEY,1))))
	
getPlannedReleaseQty()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set LocalCentral = $$getLocalCentral(YKEY) 
	quit:(LocalCentral = "") ""
	quit $$^WWWTR(0,8,$$$INDRPBESTVORPlannedReleaseQty($get(^INDRPBESTVOR(YM,LocalCentral,YKEY,1))))
	
getStockOnHandCompanyUMStock(codProduto)
	// EF(Rede)/Unidade de Estoque
	quit:($get(codProduto) = "") $$$RecordNotSelected
	quit $$^WWWTR(0,8,$$^INARTMENGE(codProduto,,,,1,0))
 
getSOHCompanyUMPurchase()
	// EF(Rede)/Unidade de Compra
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set StockOnHandCompanyUMStock = +$$^INARTMENGE(YKEY,,,,1,0)
	set ConversionFactor = $piece(YFELD,Y,336)
	if (+$get(ConversionFactor) = 0) {
		set ConversionFactor = 1
	}
	set SOHCompanyUMPurchase = StockOnHandCompanyUMStock * ConversionFactor
	quit $$^WWWTR(0,8,SOHCompanyUMPurchase)
	
getUMPurchase()
	// Get the name of the Purchase Unit of Measure
	// Nome da Unidade de Compra
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set PurchaseUM = $piece($get(YFELD),Y,277)
	if PurchaseUM '= "" { 	;BR014364
		set name = $piece($get(^WWW101(0,"EINHEIT",SPRACHE,PurchaseUM,1)),Y,1)
	} 	;BR014364
	else {set name = ""} 	;BR014364
	quit name
 
	
getUMStock()
	// Get the name of the Stock Unit of Measure
	// Nome da Unidade de Estoque
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set StockUM = $piece($get(YFELD),Y,40)
	if StockUM '= "" { 	;BR014364
		set name = $piece($get(^WWW101(0,"EINHEIT",SPRACHE,StockUM,1)),Y,1)
	} 	;BR014364
	else {set name = ""} 	;BR014364
	quit name
 
	
getSOHCompanyMonths()
	// EF (Local)/Meses
	quit:($get(YKEY) = "") $$$RecordNotSelected
	// Andre, 26/01/2008:
	//set avgCoCons = +$$getCMM^VARTRKINDRPBESTVOR(YKEY) // Average Monthly Company Consumption
	set avgCoCons = +$$getCMMRede^VARTRKINART(YKEY) // Average Monthly Company Consumption
	quit:(avgCoCons = 0) $$^WWWTR(0,8,0)
	set sohCo = +$$^INARTMENGE(YKEY,,,,1,0)
	set result = sohCo/avgCoCons
	quit $$^WWWTR(0,8,result)
	
	
getSOHLocationUMStock()
	// EF (Local)/Unidade de Estoque
	quit:($get(YKEY) = "") $$$RecordNotSelected
	;quit $$$INDRPBESTVORonHandInventoryUM($get(^INDRPBESTVOR(YM,YLOCATION,YKEY,1)))
	quit $$^WWWTR(0,8,$$^INARTMENGE(YKEY,,YLOCATION,,1,0))
 
	
getSOHLocal(pItem,pLocation)
	// EF (Local)
	do ^WWWVAR
	quit:($get(pItem) = "") $$$RecordNotSelected
	;quit $$$INDRPBESTVORonHandInventoryUM($get(^INDRPBESTVOR(YM,YLOCATION,YKEY,1)))
	quit $$^WWWTR(0,8,$$^INARTMENGE(pItem,,pLocation,,1,0))
 
	
getSOHLocationUMPurchase()
	// EF(Local)/Unidade de Compra
	quit:($get(YKEY) = "") $$$RecordNotSelected
	set SOHLocationUMStock = +$$^INARTMENGE(YKEY,,YLOCATION,,1,0)
	set ConversionFactor = $piece(YFELD,Y,336)
	if (+$get(ConversionFactor) = 0) {
		set ConversionFactor = 1
	}
	set SOHLocationUMPurchase = SOHLocationUMStock * ConversionFactor
	quit $$^WWWTR(0,8,SOHLocationUMPurchase)
	
getSOHLocationMonths()
	// EF (Local)/Meses
	quit:($get(YKEY) = "") $$$RecordNotSelected
	// Andre, 26/01/2008:
	//set avgLocalCons = +$$getMOV^VARTRKINDRPBESTVOR(YKEY) // Average Monthly Local Issues
	set avgLocalCons = +$$getMOV^VARSESINDRPITEM(YKEY,YLOCATION) // Average Monthly Local Issues
	quit:(avgLocalCons = 0) $$^WWWTR(0,8,0)
	set sohLocal = +$$^INARTMENGE(YKEY,,YLOCATION,,1,0)
	set result = sohLocal/avgLocalCons
	quit $$^WWWTR(0,8,result)
 
getPendingOrders()
	// Encomendas Pendentes (EP): 
	quit:($get(YKEY) = "") $$$RecordNotSelected
 
	// Andre, 26/01/2008 - Usar a rotina getPendingQtyOnOrders^VARSESINReq
	// pois ela já deixou de a procura por PAMs não mapeadas:
	//set result = +$$getPendingQtyOnOrders^INAUFRELEASE(YKEY," ",YLOCATION)
 
	// Andre, 26/01/2008: Nota: apesar do supplier ser passado como parâmetro para
	// a rotina a seguir, a rotina não o utiliza para nada, obtendo todas as ordens
	// não-totalmente recebidas, independente de fornecedor:
 
	set result = +$$getPendingQtyOnOrders^VARSESINReq(YKEY," ",YLOCATION)
 
	quit $$^WWWTR(0,8,result)
	
getVirtualStock()
	// PAB
	// Estoque Virtual
	// Estoque projetado (EP) = Projected Available Balance (PAB)
	set pCodItem = YKEY
	set pCodLocation = YLOCATION
	if ( $get(pCodItem) = "" ) { quit "" }
	if ( $get(pCodLocation) = "" ) { quit "" }
	quit $$GetPAB^INART(pCodItem,pCodLocation,$H+1000)	quit "---"
	
	//// ***********
	//// To be analized:
	
getonOrderInventoryUM()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	quit $$$INDRPBESTVORonOrderInventoryUM($get(^INDRPBESTVOR(YM,YLOCATION,YKEY,1)))
	
getonOrderPurchaseUM()
	quit:($get(YKEY) = "") $$$RecordNotSelected
	quit $$$INDRPBESTVORonOrderPurchaseUM($get(^INDRPBESTVOR(YM,YLOCATION,YKEY,1)))
	
checkCentralLocation()
	if $piece(YFELD,Y,284)=1{
		if (YLOCATION=$piece(^VARSESParams(YM,YM,1),Y,1)) {
			quit 1
		}
		$$$StartScript()
		write "alert('O local corrente não é o Almoxarifado Central, tipo de estocagem não permitido');"
		$$$EndScript()
		quit 0
	}
	if $piece(YFELD,Y,284)=2{
		if (YLOCATION=$piece(^VARSESParams(YM,YM,1),Y,2)) {
			quit 2
		}
		$$$StartScript()
		write "alert('O local corrente não é a Farmácia Central, tipo de estocagem não permitido');"
		$$$EndScript()
		quit 0
	}
	if $piece(YFELD,Y,284)=3{
		if (YLOCATION=$piece(^VARSESParams(YM,YM,1),Y,2)) {
			quit 2
		}
		$$$StartScript()
		write "alert('O local corrente não é a Farmácia Central, tipo de estocagem não permitido');"
		$$$EndScript()
		quit 0
	}
	quit 1
 
validarLocal()
	Q 1
	IF YFORM="INART"{
		if YKEY'="" {
			if (YLOCATION'=$piece(YFELD,Y,406)) {
				quit 0
			}
		}
	}
	quit 1
 
validacaoATC()
	if ($$$INARTFREE6(YFELD) '= "") {
		if ($length($$$INARTFREE6(YFELD)) <= 4) {
			$$$StartScript()
			write "alert('Selecione um código ATC válido, cujo tamanho é "_
				"maior que 4, ou deixe este campo em branco');"
			$$$EndScript()
			quit $$$YES
		}
 
		quit $$$NO
	}
 
	quit $$$YES
 
getCMML()
	IF YKEY'=""{
		set Item=$piece(YKEY,YKOMMA,2)
		// Andre, 26/01/2008:
		/*
		IF $GET(^INForeRest(YM,YLOCATION,Item,1))'="" {
			set YINHALT=$$^WWWTR(0,8,$piece(^INForeRest(YM,YLOCATION,Item,1),Y,23))
		}
		*/
 		set YINHALT=$$^WWWTR(0,8,$$GetCMML^VARSESINDRPITEM(YM,YLOCATION,Item))
	}
	quit
 
getCMMInartItem()
	IF YKEY'=""{
		set Item=$piece(YKEY,YKOMMA,2)
		// Andre, 26/01/2008:
		//set YINHALT=$$^WWWTR(0,8,$$getCMM^VARTRKINDRPBESTVOR(Item))
		set YINHALT=$$^WWWTR(0,8,$$getCMMRede^VARTRKINART(Item))
	}
	quit
	
CreateINARTLOCPAR(pItem)
	// INARTLOCPAR - Item X Location Parameter:
	// Define para todos os produtos e todos os centros de custo (locais 
	// que não são de armazenagem) uma definição em INARTLOCPAR de que o
	// produto é consumível naquele local.
	// 
	// History
	// 07-Jan-2014	shobby	CORE-303:	CacheIndex
	// Andre, 31/08/2007: Esta rotina foi alterada para refletir as últimas
	// mudanças: o consumo para paciente não será mais feito através da tela
	// INTFR, mas através da INADJ. Já o consumo para setor, que continua 
	// usando a INTFR, não precisará mais de um transporte para o local X,
	// mas de um transporte para o EmTransito e definir a INARTLOCPAR como
	// produto consumível. Não existe mais site-location PACIENTE.
 
	new strStatus
	
	set strStatus = $$$OK
	
	set SiteLocation = ""
	for {
		// Para os centros-de-custo, define INARTLOCPAR:
		set SiteLocation = $order(^WWW0121s(0,3,$$Index^COMUtilIndex("","WWW0121"),YM,SiteLocation)) ;CORE-303
		quit:(SiteLocation = "")
		set recordData = ""
		set $$$INARTLOCPARConsumableItem(recordData) = $$$YES
		set strStatus = $$Save^COMUtils("INARTLOCPAR",pItem_YKOMMA_SiteLocation,recordData,1)
		quit:('strStatus)
	}
	quit:('strStatus) strStatus	
	quit strStatus
	
DeleteINARTLOCPAR(pItem)
	// Excluir INARTLOCPAR:
 
	new strStatus
	
	set strStatus = $$$OK
	
	set SiteLocation = ""
	for {
		set SiteLocation = $order(^INARTLOCPAR(YM,pItem,SiteLocation))
		quit:(SiteLocation = "")
		set strStatus = $$KILL^COMUtils("INARTLOCPAR",pItem_YKOMMA_SiteLocation)
		quit:('strStatus)
	}
	quit strStatus
 
VarHookOnBeforeSave(pItem)
	new strStatus, LocationCompany, LocationCode, idLocal, tpProduto, nEntrada,
		newStatus, oldStatus, objItem
 
	set idLocal = $get(YLOCATION)
	set strStatus = $$$OK
 
	if ($length(YKEY) > 0) {
		set newStatus = $$$INARTHoldReason(YFELD)
		set objItem   = $get(^INART(YM, pItem, 1))
		set oldStatus = $$$INARTHoldReason(objItem)
 
		if ((newStatus '= oldStatus) && (newStatus = 4)) {
			set Local = ""
	 		for {
	 			set Local = $order(^WWW0121s(YM, 3, 1, YM, Local))
	    		if (Local = "") quit
 
				set TipoLocal   = $piece($get(^WWW0121(YM, YM, Local, 1)), "~", 61)
				set TipoProduto = $piece(objItem, "~", 345)
 
		  		if (TipoLocal '= TipoProduto) continue
 
				set Estoque = $$GetEstoqueDisponivel^VARReposicao(pItem, Local)
				if (Estoque = 0) continue
 
				if (Estoque > 0) {
					set strStatus = "Não é possível inativar esse produto pois ele "_
						"contém quantidade em estoque na rede."
				}
	 		}
		}
 
		if ($$$ISOK(strStatus)) {
			set tpProduto   = $extract(YKEY,1)
			set nEntrada    = $piece(YFELD,Y,413)
			set TipoProduto     = $piece(YFELD,"~",345)
			set CategoriaPadrao = $piece(YFELD,"~",299)
 
			if tpProduto = "P" {
				// ATENÇÃO = Se o item for de patrimônio tem que ter obrigatóriamente o piece 29 =1
				// para que não haja entrada em estoque.
				if idLocal = 1 {
					set $piece(YFELD,Y,413) = 3	// 1-Estoque, 2-Aplicacao Direta , 3-Patrimonio, 4-Consignacao
					set $piece(YFELD,Y,29) = 1	// Item sem manutencao de estoque
				}
				else {
					set strStatus = "A Farmacia não pode cadastrar produtos de Patrimônio "
				}
			}
 
			if idLocal = 5 {
				if nEntrada = 3 {  // Cadastro de Patrimonio para Farmacia não é permitido
					set $piece(YFELD,Y,413) = 1  // Natureza do Fornecimento
					$$$Alert("Natureza do Fornecimento não pode ser Patrimonio.")
				}
			}
			if (TipoProduto = "ALMOXARIFADO") && ((CategoriaPadrao = 0) || (CategoriaPadrao = 1)) {
				set strStatus = "Se o Estoque Principal é Almoxarifado, a categoria de item padrão deve ser Material de Almoxarifado."
			}
			if (TipoProduto = "FARMACIA") && (CategoriaPadrao = 2) {
				set strStatus = "Se o Estoque Principal é Farmácia, a categoria de item padrão não pode ser Material de Almoxarifado."
			}
		}
	}
 
	;vvvvvv SESDF-495 vvvvvv
	if $$$ISOK(strStatus) {
		if ($$IsEditable^VARAcessoGrupoProduto(YFELD) = $$$YES) {
			set strStatus = "Não é possível salvar o registro pois o grupo do item não é permitido para este perfil de usuário."
		}
	}
	;^^^^^^ SESDF-495 ^^^^^^
 
	if $$$ISERR(strStatus) {
		;$$$Alert(strStatus)
		set Q = $$$QDontSave
	}
 
	quit strStatus
 
 
TesteSave
	new strStatus
	do ^WWWVAR
	set objINART = ""
	set idINART = $$^WWWNEXT("INART")
	set $$$INARTSearchName(objINART) = "Novo"
	set strStatus = $$Save^COMUtils("INART",idINART,objINART,1)
	w !,"Produto ",idINART,", Status: ",strStatus
	quit
 
TesteDelete(pItemCode)
	new strStatus
	do ^WWWVAR
	set strStatus = $$KILL^COMUtils("INART",pItemCode)
	w !,"Produto excluído: ",pItemCode,", Status: ",strStatus
	quit
 
VarHookOnBeforeDelete(pYKEY="") 
	;-------------------------------------------------------------------------------
	; Check if a product can be deleted or not.
	;
	; Returns: status
	;
	;//new strStatus,LocationCompany,LocationCode
	;//set strStatus = $$$OK
	;// Cria INARTLOCPAR
	;// Andre, 31/01/2008:
	;//set strStatus = $$DeleteINARTLOCPAR(YKEY)
	;//quit:('strStatus) strStatus
	;
	; History:
	; 27-Jun-2008	Karine	Created - in test
	;-------------------------------------------------------------------------------
	
	new status, qtdSOH, iditem, arrAFMs, idLocation, idEntry, oldObjItem,
		integrationController
 
	set status = $$$OK
	set arrAFMs = ""
 
	if pYKEY '= "" {
		
		set objItem = $get(^INART(0,pYKEY,1))
	
		if objItem '= "" {
			set idItem = pYKEY 
			set idLocation = $get(YLOCATION)
			set qtdSOH = $$getEFR^VARSESINReq(idItem)
			set Incomming = $$GetEncomendasPendentes^VARSESAlertaLinha(idItem, idLocation)
			set arrAFMs = $$GetAFMs^VARSESAlertaLinha(idItem, idLocation, .arrAFMs)
					
			if qtdSOH > 0 {
				set status = $$$MakeStatus("VARSES00002")  ;"Este registro não pode ser excluído porque existe produto em estoque !"
				set Q = $$$QDontDelete
				
		    } elseif Incomming > 0 {
				set status = $$$MakeStatus("VARSES00003")   ;"Este registro não pode ser excluído porque existe PAM para este produto."
				set Q = $$$QDontDelete
			
			} elseif arrAFMs '= "" {
				set status = $$$MakeStatus("VARSES00004")   ;"Este registro não pode ser excluído porque existe AFM para este produto."
				set Q = $$$QDontDelete
				
			} elseif $data(^INWE(YM,pYKEY)) {
				set status = $$$MakeStatus("VARSES00005")   ;"Este produto não pode ser excluído porque existe movimentações e custo médio registrado." 
				set Q = $$$QDontDelete
			}
			elseif $data(^VARTRKPAMLineFakes(0,7,pYKEY)){
				set status = $$$MakeStatus("VARSES00003")   ;"Este registro não pode ser excluído porque existe PAM para este produto."
				set Q = $$$QDontDelete
			}		
		}
 
	}
	
	quit status
	
	
OnBeforeDataAccess(YKEY, YFELD)
	new strStatus, pidStocktake, objStocktake,idItem,idLine, i
	set strStatus = $$$OK
	set idItem = YKEY
 
	if YFORM = "INWEINVELINE" {
		set pidStocktake = ^CacheTempStocktakePara(YUSER,1) ; CHECK ... is this set?
		if '$$IsAddableItem^VARSESSnapshot(pidStocktake,idItem) { 
			set idLine = $get(^CacheTempStocktakePara(YUSER,"idLine"))
			set strStatus = 0
		}
	}	
	quit strStatus
	
	
VarHookOnAfterSave(YKEY)
 
	new strStatus, Produto, objProduto, EstoquePrincipal, statusProduto, integrationController
 
	set strStatus  = $$$OK	
	set Produto    = YKEY 
	set objProduto = $get(^INART(YM,Produto,1))
	set EstoquePrincipal = $$$INARTFREE35(objProduto)	
 	set strMsgLog = ""
 	set objScriptRelease = ##class(ScriptRelease).%New()
	if (objScriptRelease.IsProductionComputer()) {	
	 	//Envio de integracao
	 	if (EstoquePrincipal="FARMACIA") {
		 	Try{
	 		set codDroga=Produto
	 		set descItemPedido=$$$INARTSearchName(objProduto)
	 		set descItemEstoque=$$$INARTFREE44(objProduto)
	 		set codSubcat=$$$INARTItemGroup(objProduto)
	 		if (codSubcat '= "") {
	 			set descSubCat=$$$INItemGroupDescription($get(^INItemGroup(YM,codSubcat,1)))
	 		} else {
		 		set descSubCat=""
	 		}
	 		set via=$$$INARTMedRouteOfAdministration(objProduto)
	 		set freqPadrao=$$$INARTMedFrequency(objProduto)
	 		set unidBasica=$$$INARTUnitofMeasure(objProduto)
	 		set unidEquiv1=$$$INARTFREE47(objProduto)
	 		set quantEquiv1=$$$INARTFREE48(objProduto)
	 		set unidEquiv2=$$$INARTFREE49(objProduto)
	 		set quantEquiv2=$$$INARTFREE50(objProduto)
			set cadastroItensWSClient = ##class(WebClientFactory).CreateClient(0, "",
				"SESDF", ##class(CadastroItensWSClient).%ClassName(1)_
				##class(WebClientFactory).GetEnvironmentSufix(), 300)
	 		set WEBstatus = cadastroItensWSClient.Cadastrar(codDroga, descItemPedido,
	 			descItemEstoque, codSubcat, descSubCat, via, freqPadrao, unidBasica,
	 			unidEquiv1, quantEquiv1, unidEquiv2, quantEquiv2)
			set strMsgLog = "Cadastro de itens: "_
				"Droga="_codDroga_","_
				"DescItemPedido="_descItemPedido_","_
				"DescItemEstoque="_descItemEstoque_","_
				"CodSubcat="_codSubcat_","_
				"DescSubCat="_descSubCat_","_
				"Via="_via_","_
				"FreqPadrao="_freqPadrao_","_
				"UnidBasica="_unidBasica_","_
				"UnidEquiv1="_unidEquiv1_","_
				"QuantEquiv1="_quantEquiv1_","_
				"UnidEquiv2="_unidEquiv2_","_
				"QuantEquiv2="_quantEquiv2_","_
				"WEBstatus="_WEBstatus
				$$$VARLOGINFO(strMsgLog)
		 	} Catch{
				$$$VARLOGINFO(strMsgLog_ " Erro: Ao Chamar o WebService Cadastro de Produto do Trak")
		 	}
	 	}
	}
 	//Cadastrar(codDroga As %String, descItemPedido As %String, descItemEstoque As %String, codSubcat As %String, descSubCat As %String, via As %String, freqPadrao As %String, unidBasica As %String, unidEquiv1 As %String, quantEquiv1 As %xsd.double, unidEquiv2 As %String, quantEquiv2 As %xsd.double)
	
	quit strStatus
	
getNivelAtencaoID(idItem)
	// 12/08/2009, Gustavo
	// Nível de Atenção - FREE25
	if idItem="" quit ""
	quit $piece($get(^INART(YM,idItem,1)),Y,300)
	
getNivelAtencaoDesc(idItem)
	// 12/08/2009, Gustavo
	// Nível de Atenção detalhada por descrição
	if idItem="" quit ""
 
	new nivelAtencao, descNivelAtencao, cnt, separador
 
	set nivelAtencao = $$getNivelAtencaoID(idItem)	
	set descNivelAtencao = ""
	
	for cnt = 1:1:$length(nivelAtencao,";") {
		continue:($piece(nivelAtencao,";",cnt)="")
		set separador = ""
		if cnt > 1 set separador = " / "
		
		set descNivelAtencao = descNivelAtencao_separador_$piece($get(^INPARA(YM,"VARSESTIPODEDISPENSACAO","PT",$piece(nivelAtencao,";",cnt),1)),Y,1)		
	}
	
	quit descNivelAtencao
 
getNotaTecnica(idItem)
	if idItem="" quit ""
	quit $piece($get(^INART(YM,idItem,1)),Y,411)
 
getTipoProduto(idItem)
	do ^WWWVAR
	if idItem="" quit ""
	quit $piece($get(^INART(YM,idItem,1)),Y,345)
 
getItemStatus(idItem)
	if idItem="" quit ""
	quit $piece($get(^INART(YM,idItem,1)),Y,66)	
 
OnAfterDataFields()
	write !, "<script language=""javascript"">"
	&js<
		function addEvent(obj, evType, fn) {
 			if (obj.addEventListener) {
   				obj.addEventListener(evType, fn, false);
   				return true;
 			}
 			else if (obj.attachEvent) {
   				var r = obj.attachEvent('on'+evType, fn);
   				return r;
 			}
 			else {
   				return false;
 			}
		}
 
		function onDescriptionBlur() {
			var src = document.getElementById('Y#(YFORM)#D10');
			var pos = src.value.indexOf('\"');
 
			while (pos &gt; -1) {
			  src.value = src.value.replace('\"', '\'');
			  pos = src.value.indexOf('\"');
			}
		}
 
		addEvent(document.#(YHTMFORM)#.YINARTD10, 'blur', onDescriptionBlur);
	>
	write !, "</script>"
	quit
 
]]></Routine>
</Export>