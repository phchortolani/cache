<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARINReqIssue" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARINReqIssue
#include COMSYS
#include INConst

GetActiveTransfer(pYKEY)
	;-------------------------------------------------------------------------------
	; Returns the Transfer ID for the first record that is still active for this 
	; Requisition ID
	; 
	; History:
	; 19-Out-2011	RGB		Created using custom index on a Free field.	
	;-------------------------------------------------------------------------------
	new objReq,objResultSet,idTFR,sc
	
	$$$VAR
	
	set return = ""
	set idTFR=""
	set indexKey=""
	set indexKey=$$Index^COMUtils(pYKEY)
	set idTFR=$order(^INTFRs(YM,201,indexKey,idTFR))
	while idTFR'="" {
		set intfrObj=$get(^INTFR(YM,idTFR,1))
		if (($piece(intfrObj,Y,7)=0) || ($piece(intfrObj,Y,7)=1)) {
			set return=idTFR
		}
		set idTFR=$order(^INTFRs(YM,201,indexKey,idTFR))
	}
	quit return
	
	
isPickListPrinted(pidReq)
	quit:(pidReq = "") $$$NO
	
	new idIssue, idType, objTransfer, pickListPrinted
	
	set idIssue = $$GetActiveIssueNumber^INReqIssue(pidReq)	
	set idType  = $piece($get(^INReq(YM,pidReq,1)),Y,7)
	
	quit:(idType = "") $$$NO
	quit:(idIssue = "") $$$NO
		
	if (idType = 1) {
		;SESDF-672
		;Não está implementado o log de impressão da lista de separação na INIssue
		set objIssue=$get(^INIssue(YM,idIssue,1))
		set pickListPrinted = $$$INIssuePickPrintedTimestamp(objIssue)
		if (pickListPrinted '= "") {
			quit $$$YES
		} else {
			quit $$$NO
		}
	} elseif (idType = 2) {
		set objTransfer = $get(^INTFR(YM,idIssue,1))
		set pickListPrinted = $$$INTFRPickListPrinted(objTransfer)
		
		if (pickListPrinted '= "") {
			quit $$$YES
		} else {
			quit $$$NO
		}
	
	} elseif (idType = 4) {
		quit $$$NO
	}

	quit $$$NO
	
	
GetTempoConfirmacaoRequisicao(pYKEY)	
	quit:(pYKEY = "") ""
	
	new datahoraRequisicao
	
	set datahoraRequisicao = $piece($get(^INReq(YM,YKEY,1)),Y,50)  ;FREE12 - Requisição Confirmada Em
	quit:(datahoraRequisicao = "") ""
	
	;Caso queira retornar no formato de tempo de espera, usar o método abaixo (ex: 4 horas e 5 minutos)
	;quit $$RetornaDiffDatasExtenso^VARUtil(datahoraRequisicao,$horolog)
	quit $zdate($piece(datahoraRequisicao,",",1),4)_" "_$ztime($piece(datahoraRequisicao,",",2),2)
	
	
GetStatusSeparacao(pidReq)
	quit:(pidReq = "") ""
	
	set blnPickListPrinted = $$isPickListPrinted^VARINReqIssue(pidReq)
		
	set intOut 	= $$GetOutLineForReq^INReqLineStatus(pidReq,0)	// Lines Outstanding		
	set intOOS 	= $$GetOutLineForReq^INReqLineStatus(pidReq,3)	// Lines Out of Stock
		
	if (blnPickListPrinted = $$$YES) {
		quit "Em separação"
		
	} elseif (intOut=intOOS) {
		quit "Sem estoque"
	
	}

	quit "Aguard. atendimento"
	
ApplyColorStatusSeparacao(pidReq)
	new blnPickListPrinted, intOutstanding, intOutOfStock
		
	set blnPickListPrinted = $$isPickListPrinted^VARINReqIssue(idReq)
		
	set intOutstanding 	= $$GetOutLineForReq^INReqLineStatus(idReq,0)	// Lines Outstanding		
	set intOutOfStock 	= $$GetOutLineForReq^INReqLineStatus(idReq,3)	// Lines Out of Stock
		
	if (blnPickListPrinted = $$$YES) {
		set YBACKGROUNDCOLOR = "LIGHTGREEN"
		
	} elseif (intOutstanding = intOutOfStock) {
		set YBACKGROUNDCOLOR = "RED"
	} else {
		set YBACKGROUNDCOLOR = "YELLOW"
	}

	quit
	
GetLineGeneralStatus(pidReq,pType)
	new blnStatus, intQty
	
	$$$VAR
	
	set blnStatus = ""
	set intQty = 0
	
	if (pType = 1){
		set reqLine = ""
		
		for{
			set reqLine = $order(^INReqLine(YM,pidReq,reqLine))
			quit:reqLine=""
			
			set objReqLine = $get(^INReqLine(YM,pidReq,reqLine,1))
			
			set qtyOrdered	 = $$$INReqLineQtyOrdered(objReqLine)
			set qtyReceived	 = $$$INReqLineQtyReceived(objReqLine)
			set qtyRejected	 = $$$INReqLineQtyRejected(objReqLine)
			set qtyCancelled = $$$INReqLineQtyCancelled(objReqLine)
			
			if (qtyOrdered > (qtyReceived+qtyRejected+qtyCancelled)){
				set blnStatus = ""
				quit
			}
		}
	}
	elseif (pType = 2){
		set reqLine = ""
		
		for{
			set reqLine = $order(^INReqLine(YM,pidReq,reqLine))
			quit:reqLine=""
			
			set objReqLine = $get(^INReqLine(YM,pidReq,reqLine,1))
			
			set qtyOrdered	 = $$$INReqLineQtyOrdered(objReqLine)
			set qtyReceived	 = $$$INReqLineQtyReceived(objReqLine)
			set qtyRejected	 = $$$INReqLineQtyRejected(objReqLine)
			set qtyCancelled = $$$INReqLineQtyCancelled(objReqLine)
			
			if (qtyOrdered > (qtyReceived+qtyRejected+qtyCancelled)) && (+qtyReceived '= 0){
				set blnStatus = 1
				quit
			}
		}
	}
	elseif (pType = 3){
		set intQty = $$GetOutLineForReq^INReqLineStatus(pidReq,pType)
	
		if (intQty > 0) {
			set blnStatus = 1
		}
	}

	quit blnStatus
]]></Routine>
</Export>