<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARStockByProgram" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARStockByProgram
#include COMSYS

OnAfterSave
	
	kill ^VARTempStockByProgram(YM,YBED)
	
	set $piece(^VARTempStockByProgram(YM,YBED,1),Y,1) = $get(VORG(1))
	set $piece(^VARTempStockByProgram(YM,YBED,1),Y,2) = $get(VORG(2))  ;Programa
	set $piece(^VARTempStockByProgram(YM,YBED,1),Y,3) = $get(VORG(3))
	if ($length($get(VORG(4))) = 0){
		set $piece(^VARTempStockByProgram(YM,YBED,1),Y,4) = 1
	}
	else{
		set $piece(^VARTempStockByProgram(YM,YBED,1),Y,4) = $get(VORG(4))  ; Ordernar por
	}
	set $piece(^VARTempStockByProgram(YM,YBED,1),Y,5) = $get(VORG(5))
	set $piece(^VARTempStockByProgram(YM,YBED,1),Y,6) = $get(VORG(6))
	set $piece(^VARTempStockByProgram(YM,YBED,1),Y,7) = $get(VORG(7)) ; conta contábil

	do VARLogAfterSave^VARUtil(YBED,YFORM)	
 	do GoToForm^COMUtilForm("VARStockByProgram",1,,,,,)
	
	quit

OnAfterDataFields
	do PrintJS
	
	//Só apresenta os resultados da consulta caso o usuário tenha clicado no botão 'Ok' do form.
	quit:('$$isAfterSaveLogged^VARUtil(YBED,YFORM))
	do ClearVARLogAterSave^VARUtil(YBED,YFORM)
	
	set objTemp = $get(^VARTempStockByProgram(YM,YBED,1))
	
	set vLocal         	  = $piece(objTemp,Y,1)
	set vPrograma 		  = $piece(objTemp,Y,2)
	set vGrupo  	      = $piece(objTemp,Y,3)
	set vOrderBy		  = $piece(objTemp,Y,4)
	set vFormato 		  = $piece(objTemp,Y,5)
	set vMostrarValores	  = $piece(objTemp,Y,6)
	
	new filterProgram, Item, Local, Storage, Quantidade, Lote, Validade, totalQty, isBlockedStorage,
		prefixStyle, posfixStyle, reasonBlocked, idPrograma, nomePrograma, objItem, descItem, blnTSU,
		idMarca, nomeMarca,showPhysical, QuantDispLoteTotal, QuantDispLote
	
	if vFormato=3 {
		set vFormato=1
		set showPhysical=1
	}else {
		set showPhysical=0
	}
	set filterLocal   = $get(VORG(1))
	set filterProgram = $get(VORG(2))
	set filterContaContabil = $get(VORG(7))
	
	Set StockP = ##class(%ResultSet).%New()  ;Create Result Set Object
	
 	set meuSQL = "select "
	set meuSQL = meuSQL_" alSOH.dBundleStock.Item, "
	set meuSQL = meuSQL_" I.SearchName as Descricao, "
	set meuSQL = meuSQL_" alSOH.dBundleStock.Storage->Location, "
	set meuSQL = meuSQL_" alSOH.dBundleStock.Storage->Code, "
	
	if (vFormato = 1) {
		set meuSQL = meuSQL_" SUM(+alSOH.dBundleStock.QtyOnHand), "
	} else {
		set meuSQL = meuSQL_" +alSOH.dBundleStock.QtyOnHand, "
	}

	set meuSQL = meuSQL_" alSOH.dBundleStock.Bundle->LotNumber, "
	set meuSQL = meuSQL_" alSOH.dBundleStock.Bundle->UseByDate, "
	set meuSQL = meuSQL_" alSOH.dBundleStock.Bundle->Program, "
	
	set meuSQL = meuSQL_" alSOH.dBundleStock.Bundle->Brand, "
	set meuSQL = meuSQL_" I.FREE3 as ContaContabil "
	set meuSQL = meuSQL_" FROM alSOH.dBundleStock "
	set meuSQL = meuSQL_" JOIN SQLUser.INART I ON (I.ItemNumber = alSOH.dBundleStock.Item) "
	set meuSQL = meuSQL_" WHERE alSOH.dBundleStock.Storage->Location IS NOT NULL "
	
	if (vLocal '= ""){
		set meuSQL = meuSQL_" AND alSOH.dBundleStock.Storage->Location = '"_vLocal_"'"	
	}
	
	if (vPrograma '= "") {
		set meuSQL = meuSQL_" AND alSOH.dBundleStock.Bundle->Program = '"_vPrograma_"'"
	}
	
	if (vGrupo '= "") {
		set meuSQL = meuSQL_" AND $$SQLGetFiltroGrupo^VARSQL('"_vGrupo_"',alSOH.dBundleStock.Item) = 1 "
	}
	
	if (filterContaContabil '= "") {
		set meuSQL = meuSQL_" AND I.FREE3 = '"_filterContaContabil_"'"
	}
	
	if (vFormato = 1) {
		if (vPrograma '= "") {
			if showPhysical=1 {
				set meuSQL = meuSQL_" GROUP BY alSOH.dBundleStock.Item, alSOH.dBundleStock.Storage->Location, alSOH.dBundleStock.Bundle->LotNumber,alSOH.dBundleStock.Bundle->UseByDate"
			}else {
				set meuSQL = meuSQL_" GROUP BY alSOH.dBundleStock.Item, alSOH.dBundleStock.Storage->Location"
			}
		}else {
			if showPhysical=1 {
				set meuSQL = meuSQL_" GROUP BY alSOH.dBundleStock.Item, alSOH.dBundleStock.Storage->Location,alSOH.dBundleStock.Bundle->Program,alSOH.dBundleStock.Bundle->LotNumber,alSOH.dBundleStock.Bundle->UseByDate"
			}else {
				set meuSQL = meuSQL_" GROUP BY alSOH.dBundleStock.Item, alSOH.dBundleStock.Storage->Location,alSOH.dBundleStock.Bundle->Program"
			}
		}
	}
	
	set meuSQL = meuSQL_" ORDER BY "_vOrderBy

	Do StockP.Prepare(meuSQL)  ;Prepare Query
	Do StockP.Execute()  ;Execute Query
	
	do PrintHeader(filterLocal,filterProgram)
	
	//Tabela
   	new lstHeader
 	set lstHeader = ""
 	
 	if (vPrograma '= "") {
	 	if (vFormato = "1") { ;Contábil
	 		if (vMostrarValores=$$$YES){ ;Contábil Com Valores
	 			if showPhysical=1 {
	 				set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Lote","Validade","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN","Custo&nbsp;<br />&nbsp;&nbsp;Médio (R$)","Valor Total (R$)")
	 			}else {
		 			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN","Custo&nbsp;<br />&nbsp;&nbsp;Médio (R$)","Valor Total (R$)")
	 			}
	 		}else{ ;Contábil Sem Valores
	 			if showPhysical=1 {
		 			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Lote","Validade","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN")
	 			}else {
		 			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN")
	 			}
	 		}	
	 	} else { ;Físico  	
	 		if (vMostrarValores=$$$YES){ ;Físico Com Valores
	  			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Endereço / Palete","Lote","Validade","Marca","Quantidade","UN","Custo&nbsp;<br />&nbsp;&nbsp;Médio (R$)","Valor Total (R$)")
	 		} else {	
	  			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Endereço / Palete","Lote","Validade","Marca","Quantidade","UN")
	 		}
	 	}
 	} else {
	 	if (vFormato = "1") { ;Contábil
	 		if (vMostrarValores=$$$YES){ ;Contábil Com Valores
	 			if showPhysical=1 {
	 				set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Programa","Lote","Validade","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN","Custo&nbsp;<br />&nbsp;&nbsp;Médio (R$)","Valor Total (R$)")
	 			}else {
		 			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Programa","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN","Custo&nbsp;<br />&nbsp;&nbsp;Médio (R$)","Valor Total (R$)")
	 			}
	 		}else{ ;Contábil Sem Valores
	 			if showPhysical=1 {
		 			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Programa","Lote","Validade","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN")
	 			}else {
		 			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Programa","Quantidade&nbsp;<br />&nbsp;&nbsp;Disponível","Quantidade&nbsp;<br />&nbsp;&nbsp;Total","UN")
	 			}
	 		}	
	 	} else { ;Físico  	
	  		if (vMostrarValores=$$$YES){ ;Físico Com Valores
	 			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Programa","Endereço / Palete","Lote","Validade","Marca","Quantidade","UN","Custo&nbsp;<br />&nbsp;&nbsp;Médio (R$)","Valor Total (R$)")
	 		}else{ ;Físico Sem Valores
	  			set lstHeader = lstHeader_$listbuild("Local","Cód.","Produto","Grupo","Programa","Endereço / Palete","Lote","Validade","Marca","Quantidade","UN")
	 		}
	 	}
	 	
 	}		
 	
  	if $$Start^COMTable(lstHeader) {
		set count = 0
		set totalQty = 0
		set ValorTotal = 0
		set QuantTotal = 0
		set QuantDispTotal = 0
		set SubValorTotal = 0
		set SubQuantTotal = 0
		set SubQuantDispTotal = 0
		set isBlockedPhysicalStorage = ""
		set programaAnterior = ""
		set QuantDispLoteTotal = 0
		set QuantDispLote = 0
		
		While (StockP.Next()) {
			
			set Item       = StockP.GetData(1)
			set Descricao  = StockP.GetData(2)
			set Local      = StockP.GetData(3)
			set Storage    = StockP.GetData(4)
			set Quantidade = StockP.GetData(5)
			set Lote       = StockP.GetData(6)
			set Validade   = StockP.GetData(7)
			set idPrograma = StockP.GetData(8)
			set idMarca	   = StockP.GetData(9)
			set ctContabil = StockP.GetData(10)
			
			set avgCost    = $$GetCost^INItemCost(Item,Local)
			set TotalItem  = Quantidade * avgCost
			set ValorTotal = ValorTotal + TotalItem
			set QuantTotal = QuantTotal + Quantidade
			
			set QuantDispTotal    = QuantDispTotal + $$GetEstoqueDisponivel^VARReposicao(Item,Local,idPrograma)
			
			set count = $i(count)
			set totalQty = totalQty + Quantidade
			
			set descItem     = $$SQLGetDescricaoProduto^VARSQL(Item)
			set nomePrograma = $$GetProgramName^VARSQL(idPrograma)
			set nomeMarca	 = $$GetBrandName^VARSQL(idMarca)
			set descUnit	 = $$SQLGetUnitSigla^VARSQL(Item)
			set idGroup		 = $$SQLGetGrupoItem^VARSQL(Item)
			set descContabil = $$SQLGetDescContaContabil^VARSQL(ctContabil)

	
			set objStorage = $get(^INLP(YM,Local,Storage,1))
			set blnTSU     = $piece(objStorage,Y,21)
			
			set descStorage = Storage
			
			if (blnTSU = $$$YES) { //Se o endereco é um TSU
				set physicalStorage = $piece(objStorage,Y,22)
				
				if (physicalStorage '= "") {					
					set isBlockedPhysicalStorage = $$checkIfBlockedStorage^VARStock(Local,physicalStorage)
				}	
				
				set descStorage = physicalStorage_" ["_Storage_"]"
			}
			
			if (idGroup '= "") {
				set descGroup  = $piece($get(^INItemGroup(YM,idGroup,1)),Y,2)
				set preHintGrupo = "<span title = '("_idGroup_") "_descGroup_"'>"
				set posHintGrupo = "</span>"
			}
			
			set isBlockedStorage = ""
			set isBlockedStorage = $$checkIfBlockedStorage^VARStock(Local,Storage)
			
			set prefixStyle = ""
			set posfixStyle = ""
			
			if ( ( (isBlockedStorage = $$$YES) || (isBlockedPhysicalStorage = $$$YES) ) && (vFormato = 2) ) {
				set reasonBlocked = $$getMotivoEndBloqueado^VARWMSUtils(Local,Storage)
				set prefixStyle = "<font color='gray' style='text-decoration:line-through'><span title='Endereço bloqueado. Motivo: "_reasonBlocked_"'>"
				set posfixStyle = "</span></font>"
			}
			
			if Validade '= "" set Validade = $zdate(Validade,4)
			
			if (idPrograma = "") set idPrograma = 0
			if (vOrderBy = 8){
				if (vPrograma = ""){
					if (programaAnterior '= idPrograma){
						if (programaAnterior '= ""){
							do NewLine^COMTable("#fafad2")
							;do InsertCell^COMTable("")
									
							if (vFormato = 2){
								do InsertCell^COMTable("<strong>Subtotal&nbsp;</strong>",,,,"RIGHT",,10)	    
							}
							else {
								if showPhysical = 1 {
									do InsertCell^COMTable("<strong>Subtotal&nbsp;</strong>",,,,"RIGHT",,8)
								} else {
									do InsertCell^COMTable("<strong>Subtotal&nbsp;</strong>",,,,"RIGHT",,6)
								}
							}
						
							if (vFormato = 1){
		   						do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,SubQuantDispTotal)_"</strong>",,,,"RIGHT")	
		   					}
						
							do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,SubQuantTotal)_"</strong>",,,,"RIGHT")	
							do InsertCell^COMTable("",,,,,,2)	
	   					
		   					if (vMostrarValores=$$$YES){
		   						;do InsertCell^COMTable("")	
		   						do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,SubValorTotal,2)_"</strong>",,,,"RIGHT")	
		   					}
	   					
							do EndLine^COMTable()
						}
						set SubValorTotal = 0
						set SubQuantTotal = 0
						set SubQuantDispTotal = 0
						set programaAnterior = idPrograma
					}
				}
			}
			
			set SubValorTotal	  = SubValorTotal + TotalItem
			set SubQuantTotal 	  = SubQuantTotal + Quantidade
			
			if (( vFormato = 1) && (showPhysical = 1)) {
				;Evitar fazer este SQL a não ser que seja estritamente necessário
				set QuantDispLote      = $$GetEstoqueDispLoteProg^VARStockProgramaAux(Item,Local,idPrograma,Lote)	
				set QuantDispLoteTotal = QuantDispLoteTotal + QuantDispLote
			}

			if (vFormato = 1) && (showPhysical = 1) {
				set SubQuantDispTotal  = SubQuantDispTotal + QuantDispLote
			} else {				
				set SubQuantDispTotal  = SubQuantDispTotal + $$GetEstoqueDisponivel^VARReposicao(Item,Local,idPrograma)
			}
			
			if (vFormato = 2){			
			;do NewLine^COMTable("#FF6666")	
			
				if ((StockP.GetData(7) >= $h) || (Validade = "")){
					;$$$Alert(validadeh_Y_"No Prazo")
					do NewLine^COMTable()	
				} else {
					;$$$Alert(validadeh_Y_"Vencido")
					do NewLine^COMTable("#FF6666")
				}
			} else {
				do NewLine^COMTable()
			}
			
	    	;do InsertCell^COMTable(count)
	    	
	    	do InsertCell^COMTable($$SQLGetLocationName^VARSQL(Local),,,,,,,,,$$$YES)
	    	do InsertCell^COMTable(Item)
	    	do InsertCell^COMTable(descItem,,,,,,,,,$$$YES)
	    	do InsertCell^COMTable(preHintGrupo_idGroup_posHintGrupo,,,,"CENTER")
	    	;do InsertCell^COMTable(descContabil,,,,"CENTER")
	    	if (vPrograma = "") {
	    		do InsertCell^COMTable(nomePrograma,,,,,,,,,$$$YES)
	    	}	
	    	
	    	if (vFormato = 2) {
	    		do InsertCell^COMTable(prefixStyle_descStorage_posfixStyle)
	    		do InsertCell^COMTable(prefixStyle_Lote_posfixStyle)
	    		do InsertCell^COMTable(prefixStyle_Validade_posfixStyle)
	    		;do InsertCell^COMTable(prefixStyle_nomePrograma_posfixStyle)
	    		do InsertCell^COMTable(prefixStyle_nomeMarca_posfixStyle)
	    	}
	    	if ((vFormato=1) && (showPhysical=1)) {
		    	do InsertCell^COMTable(prefixStyle_Lote_posfixStyle)
	    		do InsertCell^COMTable(prefixStyle_Validade_posfixStyle)
	    	}
	    	;if (vFormato = 1) do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,$$GetEstoqueDisponivel^VARReposicao(Item,Local,idPrograma))_posfixStyle,,,,"RIGHT")	    	
	    	if (vFormato = 1) {		    	
		    	if (showPhysical = 1) { ;Gustavo - Caso seja a visão Contábil detalhada, precisa dar o estoque disponível do LOTE!
		    		do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,QuantDispLote)_posfixStyle,,,,"RIGHT")
		    	} else {
		    	 	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,$$GetEstoqueDisponivel^VARReposicao(Item,Local,idPrograma))_posfixStyle,,,,"RIGHT")
		    	}
	    	}
	    	do InsertCell^COMTable(prefixStyle_$$^WWWTR(0,12,Quantidade)_posfixStyle,,,,"RIGHT")
	    	do InsertCell^COMTable(descUnit,,,,"CENTER")
			
			
			if (vFormato = 2){
				if (vMostrarValores=$$$YES){
					do InsertCell^COMTable($$^WWWTR(0,12,avgCost,8),,,,"RIGHT")
					do InsertCell^COMTable($$^WWWTR(0,8,TotalItem,2),,,,"RIGHT")
				}
			}
			
			if (vFormato = 1){
	    		;do InsertCell^COMTable($$GetCMML^VARAlertaLocalLinha(Local,Item))
				if (vMostrarValores=$$$YES){
					do InsertCell^COMTable($$^WWWTR(0,12,avgCost,8),,,,"RIGHT")
					do InsertCell^COMTable($$^WWWTR(0,8,TotalItem,2),,,,"RIGHT")
				}
			}
			
	    	do EndLine^COMTable()
	    
		}
		
		if (count = 0) {
			do NewLine^COMTable()
			if (vPrograma '= "") {
				if ( (vFormato = 2) && ('vMostrarValores=$$$YES) ) {
					do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,10)
				}
				else {
					do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,12)
				}
			}
			else {
				if ( (vFormato = 2) && ('vMostrarValores=$$$YES) ) {
					do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,11)
				}
				else {
					do InsertCell^COMTable("Nenhum registro encontrado.",,,,,,13)
				}
			}
			do EndLine^COMTable()	
		}else{
			
			if (vOrderBy = 8){
				if (vPrograma = ""){
					do NewLine^COMTable("#fafad2")
					do InsertCell^COMTable("")
								
					if (vFormato = 2){
							do InsertCell^COMTable("<strong>Subtotal&nbsp;</strong>",,,,"RIGHT",,9)	    
					}
					else {
						if showPhysical=1 {
							do InsertCell^COMTable("<strong>Subtotal&nbsp;</strong>",,,,"RIGHT",,7)	    
						} else {
							do InsertCell^COMTable("<strong>Subtotal&nbsp;</strong>",,,,"RIGHT",,5)
						}
					}
					
					if (vFormato = 1){
   						do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,SubQuantDispTotal)_"</strong>",,,,"RIGHT")	
   					}
					
					do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,SubQuantTotal)_"</strong>",,,,"RIGHT")	
					do InsertCell^COMTable("")	
   					
   					if (vMostrarValores=$$$YES){
   						do InsertCell^COMTable("")	
   						do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,SubValorTotal,2)_"</strong>",,,,"RIGHT")	
   					}

					do EndLine^COMTable()
				}
			}
			
			if (vFormato '= ""){
				do NewLine^COMTable("lightsteelblue")
				
				if (vPrograma '= "") {
					if (vFormato = 2) {
						do InsertCell^COMTable("<strong>Total em Estoque&nbsp;</strong>",,,,"RIGHT",,8)	    
					}
					else {
						if showPhysical=1 {
							do InsertCell^COMTable("<strong>Total em Estoque&nbsp;</strong>",,,,"RIGHT",,6)	
						}else {
							do InsertCell^COMTable("<strong>Total em Estoque&nbsp;</strong>",,,,"RIGHT",,4)	    
						}    
					}
				}
				else {
					if (vFormato = 2){
						do InsertCell^COMTable("<strong>Total em Estoque&nbsp;</strong>",,,,"RIGHT",,9)	    
					}
					else {
						if showPhysical=1 {
							do InsertCell^COMTable("<strong>Total em Estoque&nbsp;</strong>",,,,"RIGHT",,7)	
						}else {
							do InsertCell^COMTable("<strong>Total em Estoque&nbsp;</strong>",,,,"RIGHT",,5)	    
						} 	    
					}
				}
	   			if (vFormato = 1){
		   			if (showPhysical = 1) {
	   					do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,QuantDispLoteTotal)_"</strong>",,,,"RIGHT")	
		   			} else {
			   			do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,QuantDispTotal)_"</strong>",,,,"RIGHT")		   			
		   			}
	   			}
	   			do InsertCell^COMTable("<strong>"_$$^WWWTR(0,12,QuantTotal)_"</strong>",,,,"RIGHT")	
   				do InsertCell^COMTable("")	
	   			if (vMostrarValores=$$$YES){
	   				do InsertCell^COMTable("")	
	   				do InsertCell^COMTable("<strong>"_$$^WWWTR(0,8,ValorTotal,2)_"</strong>",,,,"RIGHT")	
	   			}
				do EndLine^COMTable()
			}
		}
		
		do Stop^COMTable()	
  	}
	do StockP.Close()
	
	quit
	
PrintHeader(pidLocal,pidProgram)
	new avgCost, contaCont, descConta
	
	if (pidLocal '=""){
		set nomeLocal    = $$SQLGetLocationName^VARSQL(pidLocal)
	}
	
	set nomeProgram = $$GetProgramName^VARSQL(pidProgram)
 	
	write "<hr>" //Draws 1st horizontal line
	
	if (pidLocal '=""){
		write "<div style='line-height:18px;'>&nbsp;<strong>Local: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"_pidLocal_" - "_nomeLocal_"</b><br />"
	}
	else {
		write "<div style='line-height:18px;'>&nbsp;<strong>Local: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TODOS </b><br />"	
	}

	if pidProgram '= "" {
		write "&nbsp;<b>Programa: "_pidProgram_" - "_nomeProgram_"</strong></div>"
	}
	
	write "<hr>" //Draws 2nd horizontal line
	write "<table style=font-size:12px>" //Detalhes do Item
	;write "<tr><td>Unidade de Estoque:</td><td>"_descUnit_"</td></tr>"
	;write "<tr><td>Grupo do Produto:</td><td>"_idGroup_" - "_descGroup_"</td></tr>"
	;write "<tr><td>Conta Contábil:</td><td>"_conta_" - "_descConta_"</td></tr>"
	;write "<tr><td>Custo Médio:</td><td>R$ "_$$^WWWTR(0,12,avgCost)_"</td></tr>"
	write "</table>"
	
	quit

OnBeforeButtonLine
	do LoadListaLocaisDeEstoque^VAREstoqueZerado
	quit

Imprimir()
	;do Imprimir^VARStock()
	
	set objTemp = $get(^VARTempStockByProgram(YM,YBED,1))
	
	set Local         	  = $piece(objTemp,Y,1)
	set Programa 		  = $piece(objTemp,Y,2)
	set Grupo	  	      = $piece(objTemp,Y,3)
	set OrdenarPor		  = $piece(objTemp,Y,4)
	set Formato 		  = $piece(objTemp,Y,5)
	set MostrarValores	  = $piece(objTemp,Y,6)
	set ContaContabil	  = $piece(objTemp,Y,7)
	
	;quit:(Local = "") ;|| (Programa = "") )
	
	set:(OrdenarPor = "") OrdenarPor = 1
	
	if (OrdenarPor '= "") {  ;preventing ILLEGAL VALUE error
		set DescOrdenar = $Case(OrdenarPor,1:"Código do Produto",2:"Descrição do Produto",8:"Programa")
	}
	
	if (Local '= "") { 
		set Filtro    = " AND alSOH.dBundleStock.Storage->Location = """_Local_""" "
		set DescLocal = Local_ " - "_$$SQLGetLocationName^VARSQL(Local)
	}
	else {
		set Filtro = ""
		set DescLocal = "Todos"
	}
	
	if (Grupo '= "") {
		set Filtro    = Filtro_" AND $$SQLGetFiltroGrupo^VARSQL("""_Grupo_""",alSOH.dBundleStock.Item) = 1 "
		set DescGrupo = Grupo_" - "_$piece($get(^INItemGroup(YM,Grupo,1)),Y,2)
	}
	else {
		;set Filtro    = ""
		set DescGrupo = "Todos"
	}
	
	if (Programa '= "") {
		set FiltroProg = " AND alSOH.dBundleStock.Bundle->Program = """_Programa_""" "
		set DescProg   = Programa_" - "_$$GetProgramName^VARSQL(Programa)
	}
	else {
		set FiltroProg = ""
		set DescProg   = "Todos"
	}
	
	if (ContaContabil '= "") {
		set Filtro              = Filtro_ " AND to_number(I.FREE3) = """_ContaContabil_""""
		set DescContaContabil   = $$SQLGetDescContaContabil^VARSQL(ContaContabil)
	}
	else {
		set DescContaContabil   = "Todas"
	}
	set GroupBy = ""
	if (Formato = 1) {
		if (Programa '= "") {
			set GroupBy = " alSOH.dBundleStock.Item, alSOH.dBundleStock.Storage->Location"
		}else {
			set GroupBy = " alSOH.dBundleStock.Item, alSOH.dBundleStock.Storage->Location, alSOH.dBundleStock.Bundle->Program"
		}
	}
	do RunReportEstoqueConsultaProg^VARJasperRunReport(Local,OrdenarPor,DescOrdenar,Formato,Filtro,DescGrupo,MostrarValores,FiltroProg,DescProg,DescLocal,DescContaContabil,GroupBy)
	
	quit
	
	
PrintJS
	;-------------------------------------------------------------------------------
    ; Descrição:
    ;	Executa os eventos de javascript que manipulam os campos da tela.
    ;
    ; Histórico:
    ; 	05-Oct-2011		Copiado da rotina VAREstoquePosicao
    ;-------------------------------------------------------------------------------

	write !, "<script language=""javascript"">"
	
	&js<
	
		function OnLoadEstoquePrograma() {
			OnBlurFormato();	
		}
		
		function OnBlurFormato() {
			if (document.getElementById('Y#(YFORM)#M4').value == 2) {

				// Desabilita e limpa campo Mostrar Programas
				//document.getElementById('Y#(YFORM)#M6').checked = false;
				document.getElementById('Y#(YFORM)#M6').disabled = false;
			
			} else if (document.getElementById('Y#(YFORM)#M4').value == 1) {
				// Habilita o campo Mostrar Programas
				document.getElementById('Y#(YFORM)#M6').disabled = false;	
			}				
		}		
		
		function addEvent(obj, evType, fn) {
 			if (obj.addEventListener) {
   				obj.addEventListener(evType, fn, false);
   				return true;
 			} else if (obj.attachEvent){
   				var r = obj.attachEvent('on'+evType, fn);
   				return r; 
 			} else {
   				return false;
 			}
		}		

		addEvent(document.forms[1].YVARStockByProgramM4, 'blur', OnBlurFormato);
		addEvent(window,'load', OnLoadEstoquePrograma);
			
	>
	
	write !, "</script>"
	
	quit
	
	
GetProgramFromBundle(pidBundle)
	set strProgram=""
	
	&sql(
		select Program 
		into :strProgram
		from alSOH.dBundle
		where (%ID = :pidBundle)
	)
	
	if 'SQLCODE {
		set sc = $$$OK
	} else {
		set sc = $system.Status.Error(5001,"Invalid Bundle ID")
	
	}
	quit strProgram
]]></Routine>
</Export>