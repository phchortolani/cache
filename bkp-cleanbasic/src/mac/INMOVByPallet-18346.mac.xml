<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INMOVByPallet" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INMOVByPallet
	
#include COMSYS
#include INConst
#include COMConst
#;include %occInclude
	
OnAfterDataFields(pidMove,pintTab,pobjMove)
	;-------------------------------------------------------------------------------
	; Code to run when called by the AfterDataField event on the @netManager form.
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	if pintTab = 1 {
		do LoadGrid(pidMove,pobjMove)
		; Populate DynTable if required fields contain data
	}
	quit
	
	
LoadGrid(pidMove,pobjMove)
	;-------------------------------------------------------------------------------
	; Code for Grid Edit 
	;
	; Inputs:
	;	pidMove,pobjMove	key and obj for INMOV
	; 
	; Returns: Nothing
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	new blnEnabled,idForm,YAUSWAHL
	set idForm     = "INMOVPallet"
	set blnEnabled = $$$NO
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)     = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)  = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)       = idForm
	
	if $$$ISERR($$EnableButtons(pidMove)) {
			set blnEnabled = $$$NO
	}
	if ($$$INMOVStatus(pobjMove)=1) {     ; In Progress							
		set blnEnabled = $$$YES
	}
	set $$$COMGridEditParameterEnabled(YAUSWAHL) = blnEnabled
	set $$$COMGridEditParameterContainer(YAUSWAHL) = "INMOVByPallet"
	
	$$$GRIDStart(idForm,pidMove)
	quit 
	
	
EnableButtons(pidMove)
	;-------------------------------------------------------------------------------
	; Determine whether Move Firm Button can be enabled.
	; Reasons for preventing firming from being allowed
	;  - Movement Record is completed
	;
	; Called By : LoadGrid^INMOVByPallet
	; 
	; Params: pidMove - Key of header record
	;
	; ByRef : YQ
	; 
	; Returns: Nothing
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	new objMov,objOpenStatus,sc,strStatus
	
	set strStatus = $$$OK
	
	if '$$$NoKey(pidMove) {
		set objMov = $get(^INMOV(0,pidMove,1))
		
		if $$$INMOVStatus(objMov) = 2 {
			set strStatus = $$$MakeStatus("INMOV01")
		} ; "This Stock Move is already completed"
	}
	$$$YQHandler(strStatus)
	quit strStatus
	
	
OnBeforeButtonLine(pidMove,pobjAdj,&pobjForm)
	;-------------------------------------------------------------------------------
	; Set form to readonly if not editable
	;
	; Params:	pidMove		Mov id
	;			pobjMov		Mov object
	;
	; Returns:	pobjForm	Form object (WWW120)
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	if '$$$NoKey(pidMove) && '$$Editable(pidMove) {
		set $$$WWW120AuthorizationToModifyData(pobjForm) = $$$EnumReadOnly
	}
	quit
	
	
Editable(pidMove) 
	;-------------------------------------------------------------------------------
	; Is form editable (unprocessed) ?
	;
	; Params:	pidMove		Move id
	;
	; Returns:	status
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	new blnOK,objMov
	
	set blnOK  = $$$YES
	set objMov = ##class(alMOV.dUMov).%OpenId("0||"_pidMove)
	if (objMov'=$$$NULLOREF) {
		if objMov.Status.StatusCode=2 set blnOK = $$$NO
	}
	quit blnOK
	
	
OnBeforeSave(pidMove)
	;-------------------------------------------------------------------------------
	; Saves Grid
	; 
	; Called From:
	;	INMOVByPallet FORM, OnBeforeSave event
	; 
	; Params:	pidMove - INMOV id
	; 
	; Returns: 
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	new idLocn,objHeader,strStatus
	
	set strStatus = $$$YES
	
	if pidMove'="" {
		set objHeader = $get(^INMOV(0,pidMove,1))
		set idLocn    = $$$INMOVLocation(objHeader)
		
		if '$data(^INLPs(0,3,$$$Index(idLocn),$$$YES)) {
			set strStatus = $$$MakeStatus("IN01268")
	; "Temporary Storage Units not available for the location defined in this receipt"
		}
	}
	if $$$ISOK(strStatus) set strStatus = $$$GRIDSave(pidMove)
	
	$$$YQHandler(strStatus)
	quit strStatus
	
	
Post(pidMove,pblnReloadForm=$$$YES)
	;-------------------------------------------------------------------------------
	; Post Movement
	;
	; Called By :
	;	Form INMOV Button "Post" - Execute On Click
	; 
	; Returns:Status
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	new objMov,strStatus,sc 
	
	set sc        = $$$OK 
	set strStatus = $$CanPost(pidMove)
	
	if YQ = $$$YQEnable {
		set objMov = ##class(alMOV.dUMov).%OpenId("0||"_pidMove)	
		set sc =  objMov.FirmPalletMove()
		
		if $$$ISOK(sc) {
			do ^WWWFORM		
		} else {
			set strStatus = $$ISStatusToDLStatus^COMUtilError(sc)
			do ReturnError^COMUtilError(strStatus)
		}
	
	} else {
		do ReturnError^COMUtils($$$YQMessage)
	}
	
	quit strStatus
	
	
CanPost(pidMove)
	;-------------------------------------------------------------------------------
	; Determine whether Movement can be firmed.
	; Reasons for preventing firming from being allowed
	;  - No key / record
	;  - Due date is invalid
	;  - There are no Movement lines
	;  - Movement status is not created
	;  - There is an error with Movement line(s) 
	;    - There are no Storages detailed on a Movement line
	;;    - There is no quantity detailed on a Movement line
	;;    - Negative quantity detailed on Movement line
	;;    - Non stock item selected for Movement
	; 
	; Called By :
	;	Form INMOV Button "Post" - Check for Disabled
	;	
	; Params:
	;	pidMove - Key of header record
	;
	; ByRefs: None
	;
	; Returns: Nothing (changes @NM variable YQ)
	;
	; History:
	; 20-Apr-2011	GRF		SR17715: Created from INMOV
	;-------------------------------------------------------------------------------
	new idItem,loopLines,objTFR,objItem,objLine,objMov,objMovV1,sc,strStatus
	
	quit:$$$NoKey(pidMove) $$$NO
	
	set strStatus = $$EnableButtons(pidMove)
	
	if $$$ISOK(strStatus) {
		set objMovV1 = $get(^INMOV(0,pidMove,1))
		set objMov   = ##class(alMOV.dUMov).%OpenId("0||"_pidMove)
		
		if objMov'=$$$NULLOREF {
			if $$$ISOK(strStatus) && (objMov.MovPallets.Count() <= 0) {
				set strStatus = $$$MakeStatus("INMOV02")        ; "No lines to move"
			}
			if $$$ISOK(strStatus) {
				for loopLines=1:1:objMov.MovPallets.Count() {
					set sc = objMov.MovPallets.GetAt(loopLines).IsFirmable()
					quit:$$$ISERR(sc)
				}
				if $$$ISERR(sc) set strStatus = $$$MakeStatus("IN00432")
			}   ; "Please fix all errors before firming."
			
			if $$$ISOK(strStatus) {
				if $$IsLockedSiteLocation^INLocking($$$INMOVLocation(objMovV1)) {
					set strStatus = $$ReasonLocked^INLocking($$$INMOVLocation(objMovV1))
				}
			}
			
		} else {
			set strStatus = $$$MakeStatus("INMOV02")
		} ; "No lines to move"
	}
	$$$YQHandler(strStatus)
	quit strStatus
	
	
OnAfterPrimaryKey(pYM,pYFORM,pYSEITE,pstrKey,&pYFELD,&pobjForm) ; DEPRECATED - using OnFilter classhook instead in INMOV
	;-------------------------------------------------------------------------------
	; Show Stock Movements on appropriate form
	;			
	; Called By : Form INMOVByPallet
	;		
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 06-May-2011	GRF		SR17751: Copied from INDispenseToPatient
	;-------------------------------------------------------------------------------
	if (pstrKey'="") && (pstrKey'="+") && ($$$INMOVMoveType(pYFELD)'=1) {
		do RedirectForm^COMUtils("INMOV",pstrKey)
	}
	quit
	
]]></Routine>
</Export>