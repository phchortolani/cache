<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="VARSESINAUF" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
VARSESINAUF
#include COMSYS
#include COMConst
#include INConst
#include WWWConst
#include FIN
#include VARConst
 
OnBeforeDelete(idAFM) 
 
	set idAFMLinha=""
	set idAFMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha))
	while idAFMLinha'="" {
		set PAM=""
		set PAM=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM))
		while PAM'="" {
			set PAMLinha=""
			set PAMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM,PAMLinha))
			while PAMLinha'="" {
				set query=$query(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM,PAMLinha))
				set strStatus=$$$Kill("VARSESPAMAFM",$piece(query,YKOMMA,7)_YKOMMA_$piece(query,YKOMMA,8)_YKOMMA_$piece(query,YKOMMA,9)_YKOMMA_$piece(query,YKOMMA,10))
				set PAMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM,PAMLinha))
			}
			set PAM=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha,PAM))
		}
		set idAFMLinha=$order(^VARSESPAMAFMs(YM,1,$$^WWWUMLAU(idAFM,1),idAFMLinha))
	}
	D ^INAUFKILL($G(idAFM)) 
	quit
 
 
PesquisaPAMAFM(pID)
	if pID="" quit ""
	if pID="+" quit ""
	set idAFM=pID
 	if $get(^INAUF(YM,idAFM,1))="" QUIT ""
	new arrPAMs, idAFMLine
	set idAFMLine=""
	set idAFMLine=$order(^INAUFP(YM,idAFM,idAFMLine))
	WHILE idAFMLine'="" {
		do GetPAMs^VARSESPamAfm(idAFM, idAFMLine, .arrPAMs)
		set idAFMLine=$order(^INAUFP(YM,idAFM,idAFMLine))
	}
	n idPAM
	set pams=""
	$$$Order1(arrPAMs,idPAM)
		if pams = "" {
			set pams = idPAM
			
		} else {
			set pams = pams_";"_idPAM
		}
	$$$End
	quit pams
 
CanInserirItens(id,objINAUF)
	if $piece(objINAUF,Y,348)=0 {
		set YQ=0
		QUIT
	}
	//set YQ = 1_"A AFM "_id_" já foi processada."
	set YQ = 1_$$$Text($listbuild("MED00203",id))
	quit
 
OnBeforeEditAccessHook()
 
	if YKEY="" {
		quit $$CheckLocationAccess()
	}
		
		new Status
		if YFORM="VARSESINAUF" {
			IF YKEY="" QUIT 1
			set Status = $PIECE(YFELD,Y,348)
			if Status '= 0 {
				quit 0
			}
				
			quit $$CheckLocationAccess()
		}
 	
		if ((YKEY) && (YFORM '= "VARTRKFINANCIAL")) {
			set Status = $PIECE(YFELD,Y,348)
			if Status '= 0 {
				quit 0
			}
		}	
		quit $$CheckLocationAccess()
			
CheckLocationAccess()
 
	if (YLOCATION '= 5) && (YLOCATION '= 1) {
		$$$StartScript()
		//w "alert('Opção não disponível para o local ("_YLOCATION_").'); "
		w "alert('"_$$$Text($listbuild("MED00204",))_"'); "
		$$$EndScript()
		do GoToForm^COMUtilForm("VARSESTelaInicial","","")
	}
	
	quit $$$OK
		
SetaPrecoLiquido(YKEY)
	
	// Gustavo@18-01-2008
	// Salva os dados de preço líquido da linha na INAUF, piece 288.
		
	new idAFM, objAFM, vlueFrete, PrecoTotalAFM, pctgDescontoNaAFM,
		idLinhaAFM, objINAUFP, Item, Quantidade, PrecoUnitario, pctgDescontoNaLinha, PrecoLinha, PrecoTotalAFM,
		status, LinhaAFM, pctgFrete, vlueFreteNaLinha, vlueDescontoNaLinha, PrecoTotalLinhaLiquido
	
	set idAFM   	  = YKEY
	set objAFM        = $get(^INAUF(YM,idAFM,1))
	set vlueFrete     = $piece(objAFM,"~",183)	
	set LinhaAFM 	  = ""
	set PrecoTotalAFM = ""
	
	//Só calculando o preço total da AFM
	for {
   		set LinhaAFM = $order(^INAUFP(YM,idAFM,LinhaAFM))
   		quit:(LinhaAFM = "")	
        			
    	set objINAUFP = $get(^INAUFP(YM,idAFM,LinhaAFM,1))
    	    
    	set Quantidade    	    = $piece(objINAUFP,"~",5)
    	set PrecoUnitario	    = $piece(objINAUFP,"~",282)    	
    	set PrecoTotalLinha     = Quantidade * PrecoUnitario    	
   	 	set PrecoTotalAFM		= PrecoTotalAFM + PrecoTotalLinha	   	 	   		
	}
	
	set pctgDescontoNaAFM = $piece(objAFM,"~",355)
 
	set idLinhaAFM = ""
	
	for {
   		set idLinhaAFM = $order(^INAUFP(YM,idAFM,idLinhaAFM))
    	quit:(idLinhaAFM = "")	
        
        //Pegando os dados que serão salvos na INAUFP		
    	set objINAUFP = $get(^INAUFP(YM,idAFM,idLinhaAFM,1))
    	    	
    	set Item          	    = $piece(objINAUFP,"~",4)
    	set Quantidade    	    = $piece(objINAUFP,"~",5)
    	set PrecoUnitario	    = $piece(objINAUFP,"~",282)
    	set pctgDescontoNaLinha = $piece(objINAUFP,"~",287)
    	set PrecoLinha	  	    = $piece(objINAUFP,"~",283)       	
		
		//Calculando o frete a ser distribuído para cada linha
		set pctgFrete 		 = PrecoLinha/PrecoTotalAFM
		set vlueFreteNaLinha = pctgFrete * vlueFrete
		
		//Desconto da Linha, ou seja, o desconto definido para o item.
		set vlueDescontoNaLinha = ((pctgDescontoNaLinha/100) * PrecoLinha)
		
		//Desconto do Cabeçalho
		set vlueDescontoNaAFM = ((pctgDescontoNaAFM/100) * PrecoLinha)		
		
		//Total do preço líquido da linha					
		set PrecoTotalLinhaLiquido  = PrecoLinha + vlueFreteNaLinha - vlueDescontoNaLinha - vlueDescontoNaAFM														  	
									  	
	  	//Salvando os dados na INAUFP
	  	set ChaveINAUFP = idAFM_$$$COMMA_idLinhaAFM
		set objINAUFP   = $get(^INAUFP(YM, idAFM, idLinhaAFM, 1))
		
		set $piece(objINAUFP,Y,288) = PrecoTotalLinhaLiquido
 
		set status = $$Save^COMUtils("INAUFP", ChaveINAUFP, objINAUFP, 1)		
		
		if $$$ISERR(status) { 
			do StartScript^COMUtiljavascript()
			//w "alert('Não foi possível salvar os dados do preço de compra da AFM.'); "
			w "alert('"_$$$Text("MED00205")_"'); "
			do EndScript^COMUtiljavascript()
		}
    
	}
	
	quit
 
 
ProcessAFM()
	
	//Seta o valor do preço líquido onde é preciso para que o custo médio seja definido corretamente
	;do SetaPrecoLiquido(YKEY)
	
	// Seta o campo Status (FREE14) para 1.
 
	new pidAFM, objAFM, status, listaStatusEntregas, linhaAFM, errMsg, errMsgLinhas
	
	set pidAFM = YKEY
	
	// Andre, 13/03/2008 - Verifica se entregas são válidas:
	set status = $$EntregasValidas^VARSESAFMEntrega(pidAFM,.listaStatusEntregas)
	if ( status '= 1 ) {
 		set linhaAFM = ""
 		set errMsg = $piece(status,Y,2)
		//set:($get(errMsg) = "") errMsg = "Erro na validação das entregas."
		set:($get(errMsg) = "") errMsg = $$$Text("MED00206")
		set errMsgLinhas = ""
		for {
			set linhaAFM = $order(listaStatusEntregas(linhaAFM))
			quit:(linhaAFM = "")
			if ( listaStatusEntregas(linhaAFM) '= 1 ) {
				//set:($get(errMsgLinhas) = "") errMsgLinhas = "Situação das entregas para cada linha da AFM:"
				set:($get(errMsgLinhas) = "") errMsgLinhas = $$$Text("MED00207")
				set errMsgLinhas = errMsgLinhas_$char(10)_linhaAFM_": "_$piece(listaStatusEntregas(linhaAFM),Y,2)
			}
		}
		set:($get(errMsgLinhas) '= "") errMsg = errMsg_$char(10)_errMsgLinhas
		do AlertInScript^COMConst(errMsg)
		do GoToForm^COMUtilForm("VARSESINAUF", pidAFM)	
		quit
	}
	// Fim - Andre, 13/03/2008
		
	set objAFM = $get(^INAUF(YM, pidAFM, 1))		
	
	set $piece(objAFM,Y,348) = 1
	;e o campo "Ordem Concluída" para 1:
	;set $piece(objAFM, Y, 60)  = 1 ; Order Closed
	  	
	set status = $$Save^COMUtils("INAUF", pidAFM, objAFM, 1)
	
	if $$$ISERR(status) { 
		do StartScript^COMUtiljavascript()
		//w "alert('Não foi possível processar a AFM. Erro ao processar.'); "
		w "alert('"_$$$Text("MED00208")_"'); "
		do EndScript^COMUtiljavascript()
	}
 
	do GoToForm^COMUtilForm("VARSESINAUF", pidAFM)	
 
	quit		
 
 
CanProcess()
 	//Alterado	Karine	AFM que relacionam PAM com natureza de entrada igual a Doação do Ministério da Saúde = 3
	//					não precisam de número de processo.
	
	new AFMProcessada, NumeroProcesso, NumeroEmpenho, ModalidadeEmpenho, ModalidadeLicitacao 
		
	set AFMProcessada = $PIECE(YFELD,Y,348)
	set NumeroProcesso = $PIECE(YFELD,Y,337)
	set NumeroEmpenho = $PIECE(YFELD,Y,336)
	set ModalidadeEmpenho = $PIECE(YFELD,Y,345)
	set ModalidadeLicitacao = $PIECE(YFELD,Y,346)
	set NaturezaEntrada = $PIECE(YFELD,Y,347)	
	set YQ = $$$YQEnable
 	
 	if YKEY="" {
	 	//set YQ = 1_"A AFM nao foi salva"
	 	set YQ = 1_$$$Text("MED00209")
	 	quit
 	}
	if (AFMProcessada '= 0) {
		//set YQ = 1_"A AFM "_YKEY_" já foi processada."
		set YQ = 1_$$$Text($listbuild("MED00210",YKEY))
		quit
 	}
 	
	if ($order(^INAUFP(YM, YKEY, "")) = "") { //Verifica se tem item no grid
		//set YQ = 1_"A AFM tem que ter pelo menos 1 item."
		set YQ = 1_$$$Text("MED00211")
		quit
	} 	 
 
	set idLinha=""
	SET ListaPAMs=""
	set idLinha=$order(^INAUFP(YM,YKEY,idLinha))
 
	
	while idLinha'="" {
		set ListaPAMs=$piece($get(^INAUFP(YM,YKEY,idLinha,1)),Y,289)
		if (($PIECE($GET(^INAUFP(YM,YKEY,idLinha,1)),Y,282)="") || ($PIECE($GET(^INAUFP(YM,YKEY,idLinha,1)),Y,282)<=0)) {
			//set YQ = 1_"Preço unitário é obrigatório para todos os produtos. Não é possível processar."
			set YQ = 1_$$$Text("MED00212")
			quit
		}
		if (NaturezaEntrada '= 3) && (ListaPAMs '= "") {  //Doação Ministério da Saúde 
			
			for i=1:1:$length(ListaPAMs,";") {
				set PAM=$PIECE(ListaPAMs,";",i)
				//if $PIECE($GET(^VARTRKPAM(YM,PAM,1)),Y,7)="" set YQ = 1_"A PAM de numero "_PAM_" não possui número de processo relacionado. Não é possível processar."
				if $PIECE($GET(^VARTRKPAM(YM,PAM,1)),Y,7)="" set YQ = 1_$$$Text($listbuild("MED00213",PAM))
			}
		}
		set idLinha=$order(^INAUFP(YM,YKEY,idLinha))	
	}
 
	
	IF YQ'=0 QUIT
	//Processo agora será validado por linha
	/* 	
 	elseif (NumeroProcesso = "")  {
		set YQ = 1_"A AFM ainda não pode ser processada. É necessário informar o Número do Processo."
	}
	*/	
 	
 	// Por solicitação do Marcelo (com aval da Soleni), não é obrigatório ter os três campos abaixo antes de processar. 	
 	/* 	
 	elseif (NumeroEmpenho = "")  {
		set YQ = 1_"A AFM ainda não pode ser processada. É necessário informar o Número do Empenho."
	}	
 	elseif (ModalidadeEmpenho = "")  {
		set YQ = 1_"A AFM ainda não pode ser processada. É necessário informar a Modalidade do Empenho."
	}		
 	elseif (ModalidadeLicitacao = "")  {
		set YQ = 1_"A AFM ainda não pode ser processada. É necessário informar a Modalidade da Licitação."
	}		
 	*/
	
 		set YQ = $$$YQEnable
	
	quit
 
CanViewReport()
 	//Karine@05/02/2008
 	//Desabilita o botão de relatório caso a AFM não tenha sido processada.
 	new AFMProcessada
 	set YQ = $$$YQEnable
 	/* Rubens, novo relatorio de pre-processamento
 	   Alterado: Karine@25/03/08
 	   			 Alterado a apedido do Marcelo. O relatório só pode ser visualisado
 	   			 após processado.
 	*/
 	set AFMProcessada = $PIECE(YFELD,Y,348)
 	
 	if AFMProcessada=0 {
		//set YQ = 1_"O relatório só fica disponível após a AFM ter sido processada."
		set YQ = 1_$$$Text("MED00214")
		quit
	}
	set YQ = $$$YQEnable 
	quit
 
OnAfterPrimaryKeys()
 
	; Atualiza a tabela de conversões dos fornecedores. (copiado do form INAUF).
    ; shobby:07-Feb-2008:  Removed call to SOND.  Looks like is not necessary and causes 'Não foi Salvo!'
	;					   messages to show even when there is no change to fields.
	;									  
	;	do SOND^INAUF1
	quit
 
OnAfterDataFields(pYKEY,pYFELD)
	if YKEY'="" {
			set idLinha=""
			set idLinha=$order(^INAUFP(YM,YKEY,idLinha))
			while idLinha'="" {
				set ListaProcesso=""
				set ListaPAMs=$piece($get(^INAUFP(YM,YKEY,idLinha,1)),Y,289)
				if ListaPAMs '= "" {
					for i=1:1:$length(ListaPAMs,";") {
						set PAM=$PIECE(ListaPAMs,";",i)
						if $PIECE($GET(^VARTRKPAM(YM,PAM,1)),Y,7)'="" {  
							if ListaProcesso="" {
								set ListaProcesso=$PIECE($get(^VARTRKPAM(YM,PAM,1)),Y,7)
							}
							else {
								set ListaProcesso=ListaProcesso_";"_$PIECE($get(^VARTRKPAM(YM,PAM,1)),Y,7)
							}
						}
					}
				}
				set $piece(^INAUFP(YM,YKEY,idLinha,1),Y,290)=ListaProcesso
				set idLinha=$order(^INAUFP(YM,YKEY,idLinha))
			}
		}
 
	//Não foi incluída a rotina abaixo que é chamada no Core:	
	//D Lock^INAUFD(YKEY) ;Anzeigen der Artikel  
 
	// Andre, 13/03/2008 - Exibe situação das entregas:
	if ( $get(YSEITE) = 3 ) {
		do ListarEntregas^VARSESAFMEntrega(pYKEY)
	}
	else {
		do LoadGrid(pYKEY)
	}
		
	//Tinha no Core da INAUF, retirei, Frank vai ver se precisa ficar.
	;D ^INAUF	
		
	//Carrega Tabela de Pré-Recebimentos
	set status = $PIECE(YFELD,Y,348)	
	if ((status = 2)) {
	if $data(^INRECs(YM,101,YKEY)) {
		do TabelaPreRecebimentos
	}
	}
 
	//Carrega Tabela de Recebimentos
	set status = $PIECE(YFELD,Y,348)	
	if ((status = 2) || (status = 3)) {
		do TabelaRecebimentos
	}
	
	if (status = 2) {
		do TabelaSaldoRestante
	}			
 	 	 	 	 	 	 	 
 	quit
	
 
LoadGrid(pid="")
 
	new objInvoice,YFORM,YKEY,YAUSWAHL,YFELD,objVARTRKATARequest,strData
	set YFORM="VARSESINAUFLinha"
	set YFELD=""
	set YKEY=$get(pid)
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)=1
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL)=290
	set $$$COMGridEditParameterGridName(YAUSWAHL)=YFORM
	set $$$COMGridEditParameterEnabled(YAUSWAHL)='($$$WWW120AuthorizationToModifyData(YVOR)=5)
	set $$$COMGridEditParameterContainer(YAUSWAHL)="VARSESINAUF"
	
	$$$GRIDStart(YFORM,YKEY)
	
	quit
 
OnBeforeSave(pidAFM)
	do CarregaDadosBancarios
	new strStatus
	set strStatus = $$$GRIDSave(pidAFM)
 
	quit
 
OnBlurItem(pYFELD)
	
	new Item, UnidadeMedida, NomeItem, Fornecedor, PrecoUnitario
 
	quit:(pYFELD = "")
	set Item = $PIECE(YFELD,Y,4)
	quit:(Item = "")
	
	if '$data(^INART(0, Item, 1)) {
		set $PIECE(YFELD,Y,4)=""
		//$$$Alert("O item '"_Item_"' não existe.")
		$$$Alert($$$Text($listbuild("MED00215",Item)))
		quit
	}
	
	set UnidadeMedida = $PIECE($GET(^INART(YM,Item,1)),"~",40)
	set NomeItem = $PIECE($GET(^INART(YM,Item,1)),"~",1)		
	
	set AFM  = $PIECE(YKEY,YKOMMA,1)
	set Fornecedor  = $PIECE($GET(^INAUF(YM,AFM,1)),"~",12)
	
	set PrecoUnitario = $PIECE($GET(^INARTK(YM,Item,Fornecedor,1)),"~",12)
 
 
	// Carrega Nome do Item, Unidade de Medida, Fornecedor, Preço Unitário
	set $piece(YFELD,Y,1)   = NomeItem
	set $piece(YFELD,Y,40)  = UnidadeMedida
	set $piece(YFELD,Y,12)  = Fornecedor
	set $piece(YFELD,Y,282) = PrecoUnitario
		
	quit
	
 
CarregaDadosBancarios
 
	new Status, Fornecedor, CodBanco, NomeBanco, Agencia, Conta
	
	set Status      = +$PIECE(YFELD,Y,348)
	set Fornecedor  =$PIECE(YFELD,Y,12)
	
	if ((Status < 1) && ($get(Fornecedor)) '= "") {
 
 		// Andre, 15/08/2008:
 		// Correção: antes apenas obtinha o registro ^INLIEFAccountsLine(YM,Fornecedor,1,1), mas
 		// às vezes este registro não existia, pois a linha 1 havia sido apagada, existindo apenas
 		// a linha 2 ou 3, por exemplo. Assim, foi feito um $order.
 		// Além disso, não era verificado qual a conta padrão.
 		// 
		//set CodBanco  = $PIECE($GET(^INLIEFAccountsLine(YM,Fornecedor,1,1)),Y,3)
 
 		set idAccountsLine = "",contadorContas = 0
 		for {
	 		set idAccountsLine = $order(^INLIEFAccountsLine(YM,Fornecedor,idAccountsLine))
	 		quit:(idAccountsLine = "")
	 		set objAccountsLine = $get(^INLIEFAccountsLine(YM,Fornecedor,idAccountsLine,1))
	 		set contadorContas = contadorContas + 1
	 		// É a conta padrão? Se sim, sai do laço:
	 		if ( $piece(objAccountsLine,Y,6) = 1) {
		 		quit
	 		}
 		}
 		// Se só há uma conta, usa-a, mesmo não sendo a conta padrão:
 		if ( contadorContas = 1 ) {
	 		set idAccountsLine = $order(^INLIEFAccountsLine(YM,Fornecedor,""))
	 		set objAccountsLine = $get(^INLIEFAccountsLine(YM,Fornecedor,idAccountsLine,1))
 		}
 		
 		if ( ($get(idAccountsLine) = "") || ($get(objAccountsLine) = "")) {
	 		quit
 		}
 		
		set CodBanco  = $PIECE($GET(objAccountsLine),Y,3)
		
		if CodBanco'="" {
			set NomeBanco = $PIECE($GET(^VARSESBANCO(YM,CodBanco,1)),Y,1)
		} else {
			set NomeBanco = ""
		}
		
		set Agencia   = $PIECE($GET(objAccountsLine),Y,2)
		set Conta     = $PIECE($GET(objAccountsLine),Y,1)
 
		set $piece(YFELD,Y,325) = CodBanco
		set $piece(YFELD,Y,324) = NomeBanco
		set $piece(YFELD,Y,326) = Agencia
		set $piece(YFELD,Y,327) = Conta
 
	}
 
	set ^AndreDebug("DadosBanc",$h)=YKEY_Y_Status_Y_Fornecedor_Y_CodBanco_Y_NomeBanco_Y_Agencia_Y_Conta_Y_YFELD
	
	quit
 
TabelaPreRecebimentos
	
	new AFM, NomeDaTabela, Recebimento, AFMRecebida, DataRecebimento, 
		StatusRecebimento, NumNF, objPreRecebimento
	
	//Cria Tabela de Recebimentos
	if (YKEY '= "") {
   
    	set AFM = YKEY
    			
   		set Recebimento = ""   
   		set NumLinha = 0
   		
		//Monta cabeçalho da tabela
   		new lstHeader
 		set lstHeader=""
  		//set lstHeader=lstHeader_$listbuild("Nº Recebimento","Data de Chegada","Data Pré-Receb.","Código","Descrição","Quant. Pré-Recebida","Status")    			 			    			    							 					
  		set lstHeader=lstHeader_$listbuild($$$Text("MED00216"),$$$Text("MED00217"),$$$Text("MED00218"),$$$Text("MED00219"),$$$Text("MED00220"),$$$Text("MED00221"),$$$Text("MED00222"))    			 			    			    							 					
				 			    			    							 	
  		if $$Start^COMTable(lstHeader) {
 
    		//&html< <br><font size="2" color="#000000"><b> > write "Pré-Recebimentos realizados desta AFM ("_AFM_") que ainda não foram processados:" &html< </font> >    	   		
 
    		&html< <br><font size="2" color="#000000"><b> > write $$$Text($listbuild("MED00223",AFM)) &html< </font> > 
    		
   			for {
   
   				set Recebimento = $order(^INRECs(YM,100,2,Recebimento))            
    			quit:(Recebimento = "")	
    			
    			set objPreRecebimento = $get(^INREC(YM,Recebimento,1))
    				    			
    			set AFMRecebida          = $piece(objPreRecebimento,"~",22)
    			set StatusPreRecebimento = $piece(objPreRecebimento,"~",43)
    			set StatusRecebimento    = $piece(objPreRecebimento,"~",4)
    			set DataChegada          = $zdate($piece(objPreRecebimento,"~",13),4)
    			set DataPreReceb	     = $zdate($piece(objPreRecebimento,"~",6),4)
    			set NumNF                = $piece(objPreRecebimento,"~",14)  
    		
   				if ((AFMRecebida = AFM) && (StatusPreRecebimento  > 0) && (StatusRecebimento = 0)) {  
    			
    				set LinhaRecebimento = ""
    				set NumLinha = NumLinha + 1    				
  				
  					for {
      					set LinhaRecebimento = $order(^INRECLine(YM,Recebimento,LinhaRecebimento))   
      					quit:(LinhaRecebimento = "")
      				
			    		set CodItem  = $piece($get(^INRECLine(YM,Recebimento,LinhaRecebimento,1)),"~",7)
			    		set DescItem = $piece($get(^INART(YM,CodItem,1)),"~",1)
			    		
			    		set Quantidade = $piece($get(^INRECLine(YM,Recebimento,LinhaRecebimento,1)),"~",4)																		
		  				   				            				              	      	     	   		       			  		
    					do NewLine^COMTable()
     					do InsertCell^COMTable(Recebimento,"INREC",Recebimento,"")
     					do InsertCell^COMTable(DataChegada,"INREC",Recebimento,"")
     					do InsertCell^COMTable(DataPreReceb,"INREC",Recebimento,"")
     					do InsertCell^COMTable(CodItem,"INREC",Recebimento,"")   				
     					do InsertCell^COMTable(DescItem,"INREC",Recebimento,"")
						do InsertCell^COMTable($$^WWWTR(0,12,Quantidade),"INREC",Recebimento,"")
						//do InsertCell^COMTable("Pré-Recebido","INREC",Recebimento,"")
						do InsertCell^COMTable($$$Text("MED00224"),"INREC",Recebimento,"")
      		    		do EndLine^COMTable()
      		    	
      		    	}	
      		    }		      		          		            	 			    	 			    
    	 	}  
    	}   
	} 
		
	quit
 
 
TabelaRecebimentos
	
	new AFM, NomeDaTabela, Recebimento, AFMRecebida, DataRecebimento, StatusRecebimento,
		NumNF, objRecebimento, isReversed
	
	//Cria Tabela de Recebimentos
	if (YKEY '= "") {
   
    	set AFM = YKEY
    			
   		set Recebimento = ""   
   		set NumLinha = 0
   		
		//Monta cabeçalho da tabela
   		new lstHeader
 		set lstHeader=""
  		//set lstHeader=lstHeader_$listbuild("Nº Recebimento","Data de Chegada","Data Receb.","Código","Descrição","Quant. Recebida","Status")
  		set lstHeader=lstHeader_$listbuild($$$Text("MED00216"),$$$Text("MED00217"),$$$Text("MED00225"),$$$Text("MED00219"),$$$Text("MED00220"),$$$Text("MED00226"),$$$Text("MED00222"))    			 			    			    							 					
				 			    			    							 	
  		if $$Start^COMTable(lstHeader) {
 
    		&html< <br><font size="2" color="#000000"><b> > write "Recebimentos processados para esta AFM ("_AFM_"):" &html< </font> >    	   		
 
   			for {
   
   				set Recebimento = $order(^INRECs(YM,100,2,Recebimento))            
    			quit:(Recebimento = "")	
    		
    			set objRecebimento = $get(^INREC(YM,Recebimento,1))
    				    			
    			set AFMRecebida       = $piece(objRecebimento,"~",22)
    			set StatusRecebimento = $piece(objRecebimento,"~",4)
    			set DataChegada       = $zdate($piece(objRecebimento,"~",13),4)
    			set DataRecebida 	  = $zdate($piece(objRecebimento,"~",8),4)
    			set NumNF             = $piece(objRecebimento,"~",14)  
 
   				if (AFMRecebida = AFM && StatusRecebimento > 0) {  
    			
    				set LinhaRecebimento = ""
    				set NumLinha = NumLinha + 1
    				set isReversed = ""
    				
  					for {
      					set LinhaRecebimento = $order(^INRECLine(YM,Recebimento,LinhaRecebimento))   
      					quit:(LinhaRecebimento = "")
      			
			    		set CodItem  = $piece($get(^INRECLine(YM,Recebimento,LinhaRecebimento,1)),"~",7)
			    		set isReversed = $piece($get(^INRECLine(YM,Recebimento,LinhaRecebimento,1)),"~",57)         ; IsReverved = yes
			    		set DescItem = $piece($get(^INART(YM,CodItem,1)),"~",1)
			    		
			    		set Quantidade = $piece($get(^INRECLine(YM,Recebimento,LinhaRecebimento,1)),"~",4)																		
		  				      				            				              	      	     	   		       			  		
    					do NewLine^COMTable()
     					do InsertCell^COMTable(Recebimento,"INREC",Recebimento,"")
     					do InsertCell^COMTable(DataChegada,"INREC",Recebimento,"")
     					do InsertCell^COMTable(DataRecebida,"INREC",Recebimento,"")
     					do InsertCell^COMTable(CodItem,"INREC",Recebimento,"")   				
     					do InsertCell^COMTable(DescItem,"INREC",Recebimento,"")
						do InsertCell^COMTable($$^WWWTR(0,12,Quantidade),"INREC",Recebimento,"")
						if isReversed = 1 {
							//do InsertCell^COMTable("Recebimento Estornado","INREC",Recebimento,"")
							do InsertCell^COMTable($$$Text("MED00227"),"INREC",Recebimento,"")
						}else {
							//do InsertCell^COMTable("Recebimento Processado","INREC",Recebimento,"")   				
							do InsertCell^COMTable($$$Text("MED00228"),"INREC",Recebimento,"")   				
						}  				
      		    		do EndLine^COMTable()
      		    	
      		    	}	
      		    }		      		          		            	 			    	 			    
    	 	}  
    	}   
	} 
		
	quit
	
 
TabelaSaldoRestante
	
	new AFM, LinhaAFM, CodItem, DescItem, Unidade, Quantidade, QuantidadeRecebida, QuantidadeRestante
	
	//Cria Tabela de Recebimentos
	if (YKEY '= "") {
   
    	set AFM = YKEY
    	   		
		//Monta cabeçalho da tabela
   		new lstHeader2
 		set lstHeader2=""
  		//set lstHeader2=lstHeader2_$listbuild("Seq.","Código","Descrição","Quant. a Receber")    			 			    			    							 					
  		set lstHeader2=lstHeader2_$listbuild($$$Text("MED00039"),$$$Text("MED00219"),$$$Text("MED00220"),$$$Text("MED00229"))    			 			    			    							 					
						 			    			    							 	
  		if $$Start^COMTable(lstHeader2) {
 		
	   		//&html< <br><font size="2" color="#000000"><b> > write "Saldo a Receber desta AFM ("_AFM_"):" &html< </font> >    	   					
	   		&html< <br><font size="2" color="#000000"><b> > write $$$Text($listbuild("MED00230",AFM)) &html< </font> >
 
 			set LinhaAFM = ""
 		
   			for {
   
   				set LinhaAFM = $order(^INAUFP(YM,AFM,LinhaAFM))            
    			quit:(LinhaAFM = "")	
    				    			
    			set CodItem       	   = $piece($get(^INAUFP(YM,AFM,LinhaAFM,1)),"~",4)
    			set DescItem       	   = $piece($get(^INART(YM,CodItem,1)),"~",1)
				set Quantidade 		   = $piece($get(^INAUFP(YM,AFM,LinhaAFM,1)),"~",5)    		
				// Andre, 05/02/2008: obtém qtd ANTERIORMENTE recebida do campo 291 da própria INAUFP:
				// set QuantidadeRecebida = $$GetQtyReceived^INAUFP(AFM_$$$COMMA_LinhaAFM)				
				set QuantidadeRecebida = $piece($get(^INAUFP(YM,AFM,LinhaAFM,1)),Y,291)
				
				set QuantidadeTotalPreRecebida = 0
				set Recebimento = ""
				
				for {
					set Recebimento = $order(^INRECs(YM,101,AFM,Recebimento))            
					quit:(Recebimento = "")											
					   				    			
					set StatusPreRecebimento = $piece($get(^INREC(YM,Recebimento,1)),"~",43)
					set StatusRecebimento 	 = $piece($get(^INREC(YM,Recebimento,1)),"~",4)			    								 
						 
					if ((StatusPreRecebimento > 0) && (StatusRecebimento  = 0)) {  						    							    														
						  											  										  				
						for {
							set LinhaRecebimento = $order(^INRECLine(YM,Recebimento,LinhaRecebimento))   
							quit:(LinhaRecebimento = "")													    						   
						      				
							if $piece($get(^INRECLine(YM,Recebimento,LinhaRecebimento,1)),"~",7) = CodItem {							    		
								set QuantidadePreRecebida = $piece($get(^INRECLine(YM,Recebimento,LinhaRecebimento,1)),"~",4)																										  				  
								set QuantidadeTotalPreRecebida = QuantidadeTotalPreRecebida + QuantidadePreRecebida																						    							
							}													
						}												      		    	
				  	}  		      		          		            	 			    	 			    
				 }	  						    	   							 												  
				
				set QuantidadeRestante = Quantidade - QuantidadeRecebida - QuantidadeTotalPreRecebida
			
				if QuantidadeRestante > 0 {
		  				      				            				              	      	     	   		       			  		    		    		
    				do NewLine^COMTable()
     				do InsertCell^COMTable(LinhaAFM,"",,"")
     				do InsertCell^COMTable(CodItem,"",,"")
     				do InsertCell^COMTable(DescItem,"",,"")
     				do InsertCell^COMTable($$^WWWTR(0,12,QuantidadeRestante),"",,"")   				   				
      				do EndLine^COMTable()      		    	
		    	}  	          		            	 			    	 			    
    	 	}  
    	}   
	} 
		
	quit
	
 
CalculaPrecoTotal()
	
	new Quantidade, PrecoUnitario, PrecoTotal
	
	set Quantidade  = $PIECE(YFELD,Y,5)	
	set PrecoUnitario = $PIECE(YFELD,Y,282)
 
	set PrecoTotal = Quantidade * PrecoUnitario
		
	quit PrecoTotal
		
 
CanDesprocBotao() 
	// Verifica se pode habilitar botão desprocessar.
	new strStatus
	set strStatus = $$CanDesprocessar(YKEY)
	if ( strStatus = 1 ) {
		set YQ = $$$YQEnable
	}
	else {
		set YQ = 1_$piece(strStatus,Y,2)
	}
	quit
 	
 
CanDesprocessar(pNumAFM)
 
 	new AFMProcessada, objAFM, SetorSolicitante
 	
 	if ( $get(pNumAFM) = "" ) {
	 	//quit "0~Informe número da AFM."
	 	quit "0~"_$$$Text("MED00231")
 	}
 	
 	set objAFM = $get(^INAUF(YM,pNumAFM,1))
 	
 	if ( objAFM = "") {
	 	//quit "0~AFM "_pNumAFM_" não encontrada."
	 	quit "0~"_$$$Text($listbuild("MED00232",pNumAFM))
 	}
 	
 	set SetorSolicitante = $piece(objAFM,Y,6)
 	
 	if ( SetorSolicitante '= YLOCATION ) {
		//quit "0~Só o próprio Setor Solicitante da AFM pode revisá-la."
		quit "0~"_$$$Text("MED00233")
 	}
 	
 	set AFMProcessada = +$piece(objAFM,Y,348)
 	
 	if (AFMProcessada '= 1) {
		//quit "0~Só é possível revisar AFM processada. Esta AFM não está processada."
		quit "0~"_$$$Text("MED00234")
	}
	
	if ( $data(^INRECs(YM,101,$$^WWWUMLAU(pNumAFM,1))) ) {
		//quit "0~Já há recebimento para esta AFM. Não é possível revisá-la."
		quit "0~"_$$$Text("MED00235")
	}
	
	if ( $data(^INRECs(YM,102,$$^WWWUMLAU(pNumAFM,1))) ) {
		//quit "0~Já há recebimento para esta AFM. Não é possível revisá-la."
		quit "0~"_$$$Text("MED00235")
	}
	
	IF $piece(objAFM,Y,336)'="" {
		//QUIT "0~A AFM só pode ser desprocessada enquanto não existir um empenho para esta."
		QUIT "0~"_$$$Text("MED00236")
	}
	
	quit 1
 
Desprocessar(pNumAFM)
	new objAFM, strStatus
 
 	if ( $get(pNumAFM) = "" ) {
	 	//quit "0~Informe número da AFM."
	 	quit "0~"_$$$Text("MED00231")
 	}
 	
	if ( $$CanDesprocessar(pNumAFM) ) {
	 	set objAFM = $get(^INAUF(YM,pNumAFM,1))
	 	
	 	if ( objAFM = "") {
		 	//quit "0~AFM "_pNumAFM_" não encontrada."
	 		quit "0~"_$$$Text($listbuild("MED00232",pNumAFM))
	 	}
	 	
	 	set $piece(objAFM,Y,348) = 0 // Campo Status
	 	
	 	set strStatus = $$Save^COMUtils("INAUF",pNumAFM,objAFM,1)
	 	set link= YAKTION_"EP=WWWFORM&YFORM=VARSESINAUF&YUCI="_YUCI_"&YBED="_YBED_"&YM="_YM_"&YUSER="_YUSER_"&YKEY="_YKEY
	    $$$StartScript()
		write "window.location = '"_link_"'"
		$$$EndScript()
 		quit strStatus
	
 	
	}
 
	quit 0
	
CanInserirEmpenho(pUsuario)
 
	//Gustavo@21/02/08
	//Atalho na AFM para inserir empenho.
	//Só quem pode clicar no botão é quem tiver o seu perfil nos perfis
	//autorizados na definição do form VARTRKFINANCIAL.
	
	new Perfil, PerfisAutorizados
 
	set Perfil = $piece($get(^WWW013(YM,pUsuario,1)),Y,3)
	
	set PerfisAutorizados = $piece($get(^WWW120(YM,"VARTRKFINANCIAL",1)),Y,120)
	
	//set YQ = 1_"Esse usuário não tem permissão para inserir os dados do empenho."_PerfisAutorizados
 
	set YQ = 1_$$$Text("MED00237")_PerfisAutorizados
 
	
	quit
	
VerNaturezaEntrada(YFELD)
	//9-MAR-08	KARINE	Criado: para retornar se 
	//                  - Condição de Entrega é obrigatório ou não
	//					- Condição de Pagamento é obrigatório ou não
	
	new NaturezaEntrada
	
	set NaturezaEntrada = $$$INAUFFREE13(YFELD)
	
	if ((NaturezaEntrada=2) || (NaturezaEntrada=3)) { //2-Doação ou 3-Doação Ministério da Saúde =  não obrigatório
		quit 0
	}
	 quit 1
	
			
HasBeenReceived(pidAFM, pidAFMLine)
	
	new objAFMLine, strStatus
 
	set objAFMLine = $get(^INAUFP(YM, pidAFM, pidAFMLine, 1))
	set strStatus  = $piece(objAFMLine, Y, 285)
 
	quit strStatus = 3	
 
OnAfterSave(pYKEY)
	;-------------------------------------------------------------------------------
    ; Update field "Total da AFM" FREE2, PIECE 321 with the calculated total cost in the lines.
    ; This infomation is important in the screen "Inserir empenho"
    ;
    ; Params:
    ;
    ; Returns:
    ;
    ; History:
    ; 25-Mar-2008	Karine	Created
    ; 15-Apr-2008	Andre	Modified: added code to create deliveries ("entregas 
    ; 						programadas") based on selected standard delivery ("entrega
    ; 						padrão").
    ;-------------------------------------------------------------------------------
	new idLine, totalLine, totalAFM, quantity, unitPrice, objINAUFP, objINAUF
	
	
	if pYKEY'="" {
		set idLine=""
		set quantity=""
		set unitPrice=""
		set totalLine=""
		set totalAFM=""
		set idLine=$order(^INAUFP(YM,pYKEY,idLine))
		while idLine'="" {
			set objINAUFP = $get(^INAUFP(YM,pYKEY,idLine,1))
			set quantity=$piece(objINAUFP,Y,5)
			set unitPrice=$piece(objINAUFP,Y,282)   ;FREE7
		
			set totalLine = quantity * unitPrice
			set totalAFM = totalAFM + totalLine		
			set idLine=$order(^INAUFP(YM,pYKEY,idLine))
		}
		
		set objINAUF = $get(^INAUF(YM,pYKEY,1)) ;FREE2
		set $piece(objINAUF,Y,321) = totalAFM
		set status = $$Save^COMUtils("INAUF", pYKEY, objINAUF, 1)
 
 
		if $$$ISERR(status) { 
			do StartScript^COMUtiljavascript()
			//w "alert('Não foi possível salvar os dados do Total da AFM.'); "
			w "alert('"_$$$Text("MED00238")_"'); "
			do EndScript^COMUtiljavascript()
		}
	
	}
 
	// Andre, 22/04/2008:
	new entregaPadrao
	set entregaPadrao = $piece(YFELD,Y,356)
	if ( $get(entregaPadrao) '= "" ) {
		set status = $$CriaEntregasPadrao^VARSESAFMEntrega(YKEY,YFELD)
		if ( status '= 1 ) {
			//do AlertInScript^COMConst("Erro ao criar entrega padrão."_YCR_"Informações sobre o erro: "_status)
			do AlertInScript^COMConst($$$Text($listbuild("MED00239",YCR))_status)
		}
	}
	// ------------------
 
	quit
 
getDescEntrega(pObjAFM)
	// Andre, 07/05/2008
	// Obtém a descrição da entrega.
	
	new descEntrega, descEntPadrao, idEntregaPadrao, primEntDiasUteis, primEntPodeSerAnt
	
	set descEntrega = ""
	
	quit:( $get(pObjAFM) = "" ) ""
	
	set idEntregaPadrao = $piece(pObjAFM,Y,356)
	
	set descEntPadrao = $$getDescricao^VARSESEntregaPadrao(idEntregaPadrao)
	
	if ( $get(descEntPadrao) '= "" ) {
		set descEntrega = descEntPadrao
	}
	else {
		//set descEntrega = "Veja entregas customizadas item a item."
		set descEntrega = $$$Text("MED00240")
	}
	
	set primEntDiasUteis = $piece(pObjAFM,Y,359)
	if ( +$get(primEntDiasUteis) = 1 ) {
		//set descEntrega = descEntrega_"|"_"Somente para a primeira entrega os dias são contados em dias úteis. Para as demais entregas, os dias são contados corridos."
		set descEntrega = descEntrega_"|"_$$$Text("MED00241")
	}
	
	set primEntPodeSerAnt = $piece(pObjAFM,Y,360)
	if ( +$get(primEntPodeSerAnt) = 1 ) {
		//set descEntrega = descEntrega_"|"_"A primeira entrega pode ser feita antes do prazo estabelecido."
		set descEntrega = descEntrega_"|"_$$$Text("MED00242")
	}
	
	quit descEntrega
]]></Routine>
</Export>