<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INLIEFKILL" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INLIEFKILL(LIEF)
	#include COMSYS
	#include INConst
	;/------------------------------------------------------------------\
	; Description of Function :
	;		LÖSCHEN LIEFERANTEN
	;			EINSPRUCH NACH LÖSCHEN ;remonstrance within Delete 
	; Inputs : 
	;
	; ByRef :
	;
	; Returns :
	;
	; History :
	; 30.05.2001	FIS
	;\------------------------------------------------------------------/
	QUIT:$GET(LIEF)=""
	
	DO ^WWWSKILL("INPARTN",LIEF)
	DO ^WWWSKILL("INLIEFB",LIEF)
	DO ^WWWSKILL("INLIEFK",LIEF)
	DO ^WWWSKILL("INLIEFKD",LIEF)
	DO ^WWWSKILL("INLIEFA",LIEF)
	DO  ;LÖSCHEN BRIEFE ;Delete 
	. SET YREF=LIEF
	. FOR  SET YREF=$ORDER(^INDMS(YM,YREF)) QUIT:YREF=""  QUIT:$PIECE(YREF,".",1)'=LIEF  DO  ;SUCHEN BELEGE ;seek 
	. . KILL ^INDMS(YM,YREF)
	
	QUIT
	
TEST
	;-------------------------------------------------------------------------------
	; Determines whether a supplier can be deleted         TESTEN DER LÖSCHMÖGLICHKEIT
	;
	; Called By:  Form INLIEF  Execute Before Delete Possibility
	;
	; ByRefs: YKEY
	;
	; Returns:
	;
	; History:
	; 23-Mar-2006	SteveS	SR14448: Commented: Check ALL orders/offers
	;-------------------------------------------------------------------------------
	set Q = $$$QDelete
	quit:$get(YKEY)=""
	
	if $$Keys(YKEY) || $$Data(YKEY) set Q = $$$QDontDelete
	
	//SR14448: Commented: This old code only checks OPEN orders/offers!
	;IF $$^INLIEFAUF(YKEY,1)>0 SET Q=1  ;AUFTRÄGE VORHANDEN ;on hand 
	;IF $$^INLIEFANG(YKEY,1)>0 SET Q=1  ;ANGEBOTE VORHANDEN ;on hand 
	;I Q=1 D ^WWWINFO($$^WWWTEXT(32528),1)   ;NICHT GELÖSCHT, DA AUFTRÄGE
	
	if (+$$$WWWClientParamCoreChangesHEVA($get(^WWWClientParam(YM,YM,1)))) {
    	;10-May-2012  Lucas  Don't delete data of integration - Flag: FREE18 = 1
    	set objFornecedor = $get(^INLIEF(YM,YKEY,1))
    	set cargaIntegracao = $$$INLIEFFREE18(objFornecedor)
    	if (cargaIntegracao = 1){
	    	set Q = $$$QDontDelete
        }            
    }
	
	quit
	
	
Keys(pidSupplier) private
	;-------------------------------------------------------------------------------
	; Checks all data structures which have supplier as a primary key, returns
	; a status if found.
	;
	; Params: pidSupplier	: The supplier we're checking for
	;
	; ByRefs:
	;
	; Returns: blnFound		: Whether the supplier was found
	;
	; History:
	; 27-Mar-2006	SteveS	SR14464: Created
	;-------------------------------------------------------------------------------
	new idxSupplier,blnFound
 
	set idxSupplier = $$$Index(pidSupplier)
	set blnFound    = $$$NO
 
	if (  $data(^INARTKs(YM,1,idxSupplier))					; Item Conditions per supplier
		|| $data(^INBMELIEFCATALT(YM,pidSupplier))			; BMECAT Supplier Catalog 
		|| $data(^INAUFRELEASEVOR(YM,pidSupplier))			; Edit Default For Order Suggestion List 
		|| $data(^INERECH(YM,pidSupplier))					; Supplier invoices
		|| $data(^INLOT(YM,pidSupplier))					; Batch Numbers
		|| $data(^INRMALIEFPTK(YM,pidSupplier))) {			; Return Protocols
		
		set blnFound=$$$YES
	
	}
 
	quit blnFound
	
	
Data(pidSupplier) private
	;-------------------------------------------------------------------------------
	; Checks all data structures which have supplier as a data item, returns
	; a status if found.
	;
	; Params: pidSupplier	: The supplier we're checking for
	;
	; ByRefs:
	;
	; Returns: blnFound		: Whether the supplier was found
	;
	; History:
	; 02-Oct-2009	GRF		SR16361: add INREC in place of INWEAUF/INWEFREI
	; 27-Mar-2006	SteveS	SR14464: Created
	;-------------------------------------------------------------------------------
	new idxSupplier,blnFound
 
	set idxSupplier = $$$Index(pidSupplier)
	set blnFound    = $$$NO
	
	if ((pidSupplier=$piece($get(^INAEPParameters(YM,YM,1)),Y,1))	; Default AEP Supplier
		|| $data(^INANFRAGEs(YM,2,idxSupplier))						; Inquiry
		|| $data(^INANFRAGEs(YM,3,idxSupplier))						; Inquiry
		|| $data(^INANGs(YM,17,idxSupplier))						; Offer
		|| $data(^INARTs(YM,20,idxSupplier))						; Item Broker
		|| $data(^INAUFs(YM,17,idxSupplier))						; Order Supplier
		|| $data(^INCONTAINERs(YM,2,idxSupplier))					; Supplier Containers
		|| $data(^INDRPBESTs(YM,1,idxSupplier))						; DRP/MRP Order Suggestion List
		|| $data(^INDRPBESTVORs(YM,1,idxSupplier))					; DRP/MRP Order Suggestion List (why VOR?)
		|| $data(^INDRPITEMs(YM,3,idxSupplier))						; DRP/MRP Item Location Master
		|| $data(^INDRPITEMs(YM,4,idxSupplier))						; DRP/MRP Item Location Master (Def. Broker)
		|| $data(^INDRPITEMSs(YM,3,idxSupplier))					; DRP/MRP Item Location Master
		|| $data(^INDRPITEMSs(YM,4,idxSupplier))					; DRP/MRP Item Location Master (Def. Broker)
		|| $data(^INDRPUMBUCHs(YM,1,idxSupplier))					; Stock Transfer Posting File
		|| $data(^INFASTs(YM,17,idxSupplier))						; Order Fast Entry
		|| $data(^INForeProcs(YM,1,idxSupplier))					; Forecast Result
		|| $data(^INKUNDEs(YM,25,idxSupplier))						; Customer is Supplier
		|| $data(^INLIEFs(YM,40,idxSupplier))						; Agent
		|| $data(^INLIEFs(YM,41,idxSupplier))						; Transfer payment to
		|| $data(^INMASCHs(YM,5,idxSupplier))						; Supplier of a machine
		|| $data(^INRECs(0,2,idxSupplier))                          ; Goods Receipt           ; SR16361
		|| $data(^INSHIPINFOs(YM,3,idxSupplier))					; Import Supplier
		|| $data(^INSHIPINFOs(YM,4,idxSupplier))					; Import Freight Forwarder
		|| $data(^INSHIPINFOCOSTSs(YM,1,idxSupplier))				; Edit Shipping Costs
		|| $data(^INVKVWs(YM,5,idxSupplier))						; Sales Promotion Measure Administration
		|| $data(^INVKVW6s(YM,3,idxSupplier))						; Advertising Media
		|| $data(^INWEFREIs(YM,3,idxSupplier))) {					; Received Without Orders
		
		set blnFound=$$$YES
	
	}
 
	quit blnFound
]]></Routine>
</Export>