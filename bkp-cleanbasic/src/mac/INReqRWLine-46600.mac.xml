<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INReqRWLine" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INReqRWLine	
	
#include %occInclude
#include COMSYS
#include INConst
#include COMConst
#include COMView
	
CheckDisable(pYPARA)
	;-------------------------------------------------------------------------------
	; Check for disabled button
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 07-Dec-2009	DWR		SR17074: copied from INReqRW
	; 							use YQ macros, enable use of language text
	;-------------------------------------------------------------------------------
	set YQ=0    ; TEMP quit for testing
	quit
	if ($piece(pYPARA,",",1)'="") {
	//	set YQ=0
		set YQ = $$$YQEnable
	} else {
	//	set YQ="1 Supplier Cannot Be Blank. Click On S Button to Save Supplier"
		set YQ = $$$YQDisable("IN00328")   ; "Supplier Required"
	}
	quit

CreatePO(pYKEY,pYPARA)
	;-------------------------------------------------------------------------------
	; To Create Purchase Order from the selected INRequisition Lines
	;
	; Params:
	;
	; Returns:
	;
	; History:
	; 05-Jan-2010	DWR		SR17074: create the PO Lines
	; 04-Jan-2010	DWR		SR17074: create the DO Headers after POLines and DOLines
	; 							have been created
	; 21-Dec-2009	DWR		SR17074: need tro ignore the index fro INReq reference
	; 							it may have been created via DRp without it.
	; 07-Dec-2009	DWR		SR17074: Copied from INReqRW - standardise with other
	; 							grid forms.general tidy of code
	; 24-Apr-2009	SRAPOL	Added Updation of INPOID in INRequsition
	; 18-Apr-2009	SRAPOL	Added Updation of INPOLine in INRequsition
	; 31-Mar-2009 	KALYAN	Created
	;-------------------------------------------------------------------------------
	new idINPO,idINReq,idReq,idINReqLine,idINRequisition,idINReqLineIndex
	new objINPO,objINReqLine,objINReq,objINRequisition,objReq
	new strStatus,strStatus1,strStatus2,strStatus3,idxSupplier
	new intarrCount,arrMessageLines,arrStatus,arrINReqLine,intArrCount
	new tmpStkProgram,blnStkProgram
	new objINPOLine
	new arrINPO
	new arrINPOLine
	new arrINRequisition

	
	set intarrCount   = 1
	set tmpStkProgram = $piece(pYPARA,",",2)
	set blnStkProgram = $$$YES
	;set strStatus     = $$$GRIDSave(pYKEY)
	set idxSupplier   = $$$Index($piece(pYPARA,",",1))
	
	set idReq=""
	for {
		set idReq = $order(^INRequisitions(YM,5,3,1,idxSupplier,YM,idReq))
		quit:idReq=""
		
		set objReq = $get(^INRequisition(0,YM,idReq,1))
		quit:objReq=""
		
		if ($$$INRequisitionSupplier(objReq)="") {
			set $$$INRequisitionSupplier(objReq)=idxSupplier
		}
		if (($$$INRequisitionUnitPrice(objReq)'="") && ($$$INRequisitionLocation(objReq)'="")) {	
			if (tmpStkProgram="") {
				set tmpStkProgram=$$$INRequisitionStockProgram(objReq)
			} else {
				if (tmpStkProgram'=$$$INRequisitionStockProgram(objReq)) {
					set blnStkProgram=$$$NO
					set intarrCount=1						
					quit
				}
			}  
			
			set objINPO=""
			set $$$INPOSupplierCode(objINPO) 		 = $$$INRequisitionSupplier(objReq)
			set $$$INPOSupplierName(objINPO) 		 = $$$INRequisitionSupplierName(objReq)
			set $$$INPOOrderDate(objINPO)    		 = $zdate(+$horolog)
			set $$$INPOBillToLocation(objINPO)		 = $$$INRequisitionLocation(objReq)
			set $$$INPOPaymentTerms(objINPO) 		 = $$$INRequisitionPaymentTerms(objReq)
			set $$$INPOShipToLocation(objINPO)		 = $$$INRequisitionLocation(objReq)
			set $$$INPOShipToAddress(objINPO)		 = $$$WWW0121LocationName($get(^WWW0121(0,pYKEY,$$$INRequisitionLocation(objReq),1)))
			set $$$INPOSupplierDeliveryDate(objINPO) = $zdate(+$horolog)   
			set $$$INPOTransportationMethod(objINPO) = $$$INRequisitionTransportationMethod(objReq)
			set $$$INPOStockProgram(objINPO) 		 = $$$INRequisitionStockProgram(objReq)
			
			set objINPOLine = ""
			set $$$INPOLineLineType(objINPOLine)		= 1
			set $$$INPOLineItem(objINPOLine)			= $$$INRequisitionItem(objReq)
			set $$$INPOLineItemDescription(objINPOLine) = " "
			set $$$INPOLineQuantityOrdered(objINPOLine) = $$$INRequisitionQuantity(objReq)
			set $$$INPOLineUnitOfMeasure(objINPOLine)   = $$$INRequisitionUnit(objReq)
			set $$$INPOLineUnitCost(objINPOLine)        = $$$INRequisitionUnitPrice(objReq)
			set $$$INPOLineDeliveryDate(objINPOLine)	= $$$INRequisitionDueDate(objReq) - 1 ; SR17074 04Jan2010 ; TODO create a system populated Lead time
				
			
			/* 
			set $piece(objINPO,Y,2)  = 1
			set $piece(objINPO,Y,3)  = $$$INRequisitionItem(objReq)
			set $piece(objINPO,Y,4)  = " "
			set $piece(objINPO,Y,5)  = $$$INRequisitionQuantity(objReq)
			set $piece(objINPO,Y,6)  = $$$INRequisitionUnit(objReq)
			set $piece(objINPO,Y,9)  = $$$INRequisitionUnitPrice(objReq)
			set $piece(objINPO,Y,14) = $$$INRequisitionSupplier(objReq)
			set $piece(objINPO,Y,15) = $$$INRequisitionSupplierName(objReq)
			set $piece(objINPO,Y,16) = $zdate(+$horolog)
			set $piece(objINPO,Y,19) = $$$INRequisitionLocation(objReq)
			set $piece(objINPO,Y,21) = $$$INRequisitionPaymentTerms(objReq)
			set $piece(objINPO,Y,25) = $$$INRequisitionLocation(objReq)
			set $piece(objINPO,Y,26) = $$$WWW0121LocationName($get(^WWW0121(YM,pYKEY,$$$INRequisitionLocation(objReq),1)))
			set $piece(objINPO,Y,27) = $zdate(+$horolog)
			set $piece(objINPO,Y,28) = $$$INRequisitionTransportationMethod(objReq)
			set $piece(objINPO,Y,30) = ""
			set $piece(objINPO,Y,32) = $$$INRequisitionStockProgram(objReq)
		
			
			set arrMessageLines(intarrCount)=objINPO
			set arrINReqLine(intarrCount) = $$$INRequisitionINReqLine(objReq)
			set intarrCount=intarrCount+1
				*/
			set arrINPO(intarrCount)      = objINPO
			set arrINPOLine(intarrCount)  = objINPOLine
			set arrINReqLine(intarrCount) = $$$INRequisitionINReqLine(objReq)
			
			set arrINRequisition(intarrCount) = idReq   ; 21-Dec-2009  DWR
			
			set intarrCount=intarrCount+1
			
		} else {
			kill arrINReqLine
			kill arrINPO
			kill arrINPOLine
			set intarrCount=1
		}
	}
	
	if (intarrCount>1) {
	;	set idINPO = $$POCreateFromLines^INPO(.arrMessageLines,.strStatus,.arrStatus)
		set idINPO = $$POCreateFromLines^INPO(.arrINPO,.arrINPOLine,.strStatus,.arrStatus)
		
		if (idINPO'="") {
			for {
				set idReq=$Order(^INRequisition(YM,pYKEY,idReq))
				quit:idReq=""

				set objReq=$get(^INRequisition(YM,pYKEY,idReq,1))
				quit:objReq=""
				if (($$$INRequisitionStatus(objReq)=1)  &&
				    ($$$INRequisitionRelease(objReq)=1) &&
				    ($$$INRequisitionINReqLine(objReq)'="")) {
						
					set objINReqLine=$get(^INReqLine(YM,$piece($$$INRequisitionINReqLine(objReq),",",1),$piece($$$INRequisitionINReqLine(objReq),",",2),1))
					set $$$INRequisitionStatus(objReq)  =4	  ;Released
					set $$$INReqLineStatus(objINReqLine)=9    ;Auto-Close
					set $$$INReqLinePurchaseOrder(objINReqLine)=idINPO
					set strStatus1 = $$$Save("INRequisition",YM_","_idReq,objReq,1)
					
					set strStatus2 = $$$Save("INReqLine",$$$INRequisitionINReqLine(objReq),objINReqLine,1)
					set idINReq = $Piece($$$INRequisitionINReqLine(objReq),",",1)
					set objINReq=$get(^INReq(YM,idINReq,1))
					set $$$INReqStatus(objINReq)=9
					set strStatus3 = $$$Save("INReq",idINReq,objINReq,1)
				}
		
			}
			set intArrCount= ""
			set idINRequisition = ""
			
		;	for {
		;		set intArrCount = $order(arrINReqLine(intArrCount))
		;		quit:intArrCount=""
		;		set idINReqLine      = $get(arrINReqLine(intArrCount))
		;		set idINReqLineIndex = $piece(idINReqLine,",",1)_" "_$piece(idINReqLine,",",2)
		;		set idINRequisition  = $order(^INRequisitions(YM,17,idINReqLineIndex,YM,idINRequisition))
		;		
		;		quit:idINRequisition=""
		;		set objINRequisition                           = $get(^INRequisition(YM,YM,idINRequisition,1))
		;		set $$$INRequisitionINPOID(objINRequisition)   = idINPO
		;		set $$$INRequisitionINPOLine(objINRequisition) = $piece($get(arrMessageLines(intArrCount)),Y,29)_","_$piece($get(arrMessageLines(intArrCount)),Y,30)	
		;		set strStatus1 = $$$Save("INRequisition",YM_","_idINRequisition,objINRequisition,1)
		;	}
			; ^^^^ 21-Dec-2009 Forget the Index 17 search cause may not have come from a Requisition  vvvv
			; 
			for {     ;FIXME - not changing the status of INRequisition here, this will make it available for another order. <DWR>
				set intArrCount = $order(arrINRequisition(intArrCount))
				quit:intArrCount=""
				set idINRequisition   = $get(arrINRequisition(intArrCount))
				quit:idINRequisition=""
				set objINRequisition                           = $get(^INRequisition(YM,YM,idINRequisition,1))
				set $$$INRequisitionINPOID(objINRequisition)   = idINPO
				set $$$INRequisitionINPOLine(objINRequisition) = $piece($get(arrMessageLines(intArrCount)),Y,29)_","_$piece($get(arrMessageLines(intArrCount)),Y,30)	
				set strStatus1 = $$$Save("INRequisition",YM_","_idINRequisition,objINRequisition,1)
			}
			do CreatePOLine^INPORW(idINPO)         ; 05Jan2010 SR17074
			do CreateDOHeader^INPORW(idINPO)       ; 04Jan2010 SR17074
			do GoToForm^COMUtilForm("INPO",idINPO)
			quit		
		}
		
	;} else {
	;	if (blnStkProgram=$$$NO) {
	;		set strStatus=$$SetRelease(pYKEY)
	;		write "<B> Stock Program Should Be Same For All The Lines </B>"   ;  IN01158 Stock Program should be the same for all lines
	;		do GoToForm^COMUtilForm("INReqRW",YM)
	;	} else {
	;		set strStatus=$$SetRelease(pYKEY)
	;		write "<B> You Cannot Create PO as Required Feilds are Blank </B>"  ; IN01159 You cannot create Purchase Order as required feilds are blank.
	;		do GoToForm^COMUtilForm("INPOReqSummary",YUSER)
	;	}
	;}

	} else {
		if (blnStkProgram=$$$NO) {
			set strStatus=$$SetRelease(pYKEY)
			$$$Alert($$$Text("IN01158"))     ; Stock Program should be the same for all lines
			do GoToForm^COMUtilForm("INReqRW",YM)
		} else {
			set strStatus=$$SetRelease(pYKEY)
	;		$$$Alert($$$Text("IN01159"))     ;  No Lines are selected     ; FIXME, it appears this could be both DWR
			$$$Alert($$$Text("IN01169"))     ;  Data error on sleceted Lines
			do GoToForm^COMUtilForm("INPOReqSummary",YUSER)
		}
	}
	quit
	
SetRelease(pYKEY)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 08-Dec-2009	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	new idReq,objReq,strStatus
	
	set strStatus=$$$OK
	set idReq=""
	for {
		set idReq=$Order(^INRequisitions(YM,20,1,1,YM,idReq))
		quit:idReq=""
		set objReq=$get(^INRequisition(YM,pYKEY,idReq,1))
		quit:objReq=""
		
		set $$$INRequisitionRelease(objReq)=0
		set strStatus=$$$Save("INRequisition",YM_","_idReq,objReq,1)
	}	
	
	quit strStatus		


OnBeforeDelete(pidReq)
	;-------------------------------------------------------------------------------
	; This routine makes sure you cant delete the lines created through Sourcing
	; CAN delete copied lines.
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 08-Dec-2009	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	
	if pidReq '[ "." {		
		set Q = $$$QDontDelete_$$$Text("IN01160")	;"Cannot Delete an original Requisition"
	}
	
	quit
	
	
UpdateContainer(pstrFld,&objGrid,&headYFELD,&headYMFELD)
	;-------------------------------------------------------------------------------
	; Checks whole grid, if a single record requires lot number or expiry,
	; show that column
	;		hide=$$YES or show=$$$NO
	; 
	; Called By : UpdateContainer^COMGridEdit31G  (see matching code in LoadGrid^INADJ)
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 08-Jan-2010	PPP		SR17077: Created
	;-------------------------------------------------------------------------------
	//do UpdateContainer^INReqRWLineUtils(pstrFld,.objGrid,.headYFELD,.headYMFELD)
	do UpdateDOView^INReqRWLineUtils(.objGrid)
	quit
	
	
OnAfterPrimaryKey(pYKEY,pYFELD)
	;-------------------------------------------------------------------------------
	;
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 08-Apr-2010	GRF		SR17177: objGrid should be arrGrid; GRID Macros
	; 19-Jan-2010	PP		SR17077: Created
	;-------------------------------------------------------------------------------
	new arrGrid
	
	$$$GRIDGetContents(.arrGrid)
	do UpdateDOView^INReqRWLineUtils(.arrGrid)
	quit



]]></Routine>
</Export>