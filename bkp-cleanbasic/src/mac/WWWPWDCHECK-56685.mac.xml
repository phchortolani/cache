<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="WWWPWDCHECK" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
	#include COMSYS
WWWPWDCHECK(YPWD)
	;-------------------------------------------------------------------------------
	; Convert code to plain text
	;
	; Inputs : 
	;	YPWD		Code
	;
	; Returns :		Plain Text
	;
	; History :
	; 02-Jan-2007	GRF		Doco; FIXME
	; 07.01.2004	TYBD	Created
	;-------------------------------------------------------------------------------
	NEW RETURN,YI
	
	SET RETURN=$GET(YPWD)
	QUIT:$EXTRACT($GET(YPWD),1,2)'="^1" RETURN
	SET YI(1)=$EXTRACT(YPWD,2,999)
	SET RETURN=""
	FOR YI(2)=1:1 SET YI(3)=$EXTRACT($PIECE(YI(1),",",YI(2)),2,9) QUIT:YI(3)=""  SET RETURN=RETURN_$CHAR(YI(3)/9)
	QUIT RETURN
	
SET(YPWD) 
	;-------------------------------------------------------------------------------
	; Convert plain text to code    ; UMWANDELN
	; 
	; Inputs : 
	;	YPWD		Plain Text
	;
	; Returns :		if switch set	Code
	; 				else			YPWD unaltered
	;
	; History :
	; 02-Jan-2007	GRF		BR014748 - commented YI(1) line copied from original code.
	; 07.01.2004	TYBD	Created
	;-------------------------------------------------------------------------------
	NEW RETURN,YI
	
	SET RETURN=$GET(YPWD)
	;	D148	$$$WWW012PasswordEncrypted()
	IF $PIECE($GET(^WWW012(0,YM,1)),Y,148)'=1 QUIT RETURN  ;AUSGESCHALTET
	QUIT:$EXTRACT($GET(YPWD),1,2)="^1" RETURN              ;SCHON UMGESETZT ;yet 
	
	;---------------------------------------
	;  FIXME : <GRF> Should have some function to provide a dummy encryption for
	;                unset passwords.
	;  e.g. generate random number between 2000 and 99999 and append to "^"
	;  thus ^1###[,####] is valid
	;  and  ^2###[,####] through ^9###[,####] represents ""
	;  
	;  Would need to amend CHECK and WWWPWDCHECK.
	;  
	;  NOTE : The encryption mechanism used below stores the same encrypted text for
	;         the same plain text as well as having a one to one match with the
	;         password length and is an inferior mechanism.
	;---------------------------------------
	IF $GET(YPWD)="" QUIT RETURN  ;KEIN PASSWORD ;no password
	
	;SET YI(1)=$EXTRACT(YPWD,2,999)                        ; This is not used
	SET RETURN="^"
	FOR YI(2)=1:1:$LENGTH(YPWD) SET RETURN=RETURN_1_($ASCII($EXTRACT(YPWD,YI(2)))*9)_","
	QUIT RETURN
 
 
CHECK(pPWD1="",pPWD2="")
	;-------------------------------------------------------------------------------
	; This check handles both encrypted and unencrypted passwords.
	;
	; Inputs:
	;
	; Returns:
	;
	; History:
	; 02-Jan-2007	GRF		BR014748 - commented blnCheck line.
	; 01-Nov-2007	shobby	SRBR014748: Created
	;-------------------------------------------------------------------------------
	new strPWDDecoded1,strPWDDecoded2
	
	set pPWD1=$$$UPPER(pPWD1)
	set pPWD2=$$$UPPER(pPWD2)
	set strPWDDecoded1=$$$UPPER($$^WWWPWDCHECK(pPWD1))
	set strPWDDecoded2=$$$UPPER($$^WWWPWDCHECK(pPWD2))
	;set blnCheck=$$$NO                                    ; This is not used
	quit (pPWD1=pPWD2)||(strPWDDecoded1=strPWDDecoded2)
	
	
]]></Routine>
</Export>