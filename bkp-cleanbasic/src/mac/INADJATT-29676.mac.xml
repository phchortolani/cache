<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="CACHE" ts="2001-01-01 00:00:00">
<Routine name="INADJATT" type="MAC" languagemode="0" timestamp="58440,0"><![CDATA[
INADJATT	; Stock Adjustment Attributes
	
#include COMSYS
#include INConst
#include WWWConst
#include COMConst
#include %occInclude
	
	; SRBR014564
#define WSResponse(%Status,%TextCode) %Status_"~#"_%TextCode_": "_$$^WWWTEXT(%TextCode)
	
#define FORMFldINADJATTLineAttributes    	4
#define FORMFldINADJATTLineNewLot	    	6
#define FORMFldINADJATTLineNewExpiryDate	7
#define FORMFldINADJATTLineNewBrand			8
#define FORMFldINADJATTLineNewOwner			9
#define FORMFldINADJATTLineNewProgram		10
	
OnBeforeButtonLine(pidAdj,pobjAdj,&pobjForm)
	;-------------------------------------------------------------------------------
	; Set form to readonly if not editable
	;
	; Params:	pidAdj		- Adj id
	; 			pobjAdj		- Adj object
	;
	; Returns:	pobjForm	- Form object (WWW120)
	;
	; History:
	; 16-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	if '$$$NoKey(pidAdj) {
		if '$$Editable(pidAdj) {
			set $$$WWW120AuthorizationToModifyData(pobjForm) = $$$EnumReadOnly
		}
	}
	quit
	
	
Editable(pidAdj) 
	;-------------------------------------------------------------------------------
	; Is form editable (unprocessed) ?
	;
	; Params:	pidAdj - Adj id
	;
	; Returns:	status
	;
	; History:
	; 16-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new objAdj,strStatus
	
	set strStatus = $$$OK
	
	if $data(^INADJATT(YM,pidAdj,1)) {
		set objAdj = $get(^INADJATT(YM,pidAdj,1))
		
		if $$$INADJATTStatus(objAdj) '= $$$EnumINSTATUSUnprocessed {
			set strStatus = $listbuild("IN00377") ; "Record already processed"
		}
	}
	quit strStatus
	
	
OnAfterDataFields(pidAdjAtt)
	;-------------------------------------------------------------------------------
	; Code to run when called by the AfterDataField event on the @netManager form.
	;
	; History:
	; 18-Mar-2010	PPP		SR17237: Added the Adjusment Link
	; 16-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new idAdj
	
	do LoadGrid(pidAdjAtt)
	
	if '$$$NoKey(pidAdjAtt) {
		set idAdj = $$$INADJATTStockAdjustment($get(^INADJATT(0,pidAdjAtt,1)))
		if idAdj '= "" {
			do ShowAdjustment(idAdj)
		}
	}
	quit
	
	
LoadGrid(pYKEY)
	;-------------------------------------------------------------------------------
	; Code for Grid Edit 
	;
	; Returns:
	;
	; History:
	; 10-Sep-2013	SCR		CORE-266: Pass in Location to GetAttributes
	; 12-Apr-2010	GRF		SR17177: arrGrid rather than objGrid; GRID Macros
	; 16-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new arrGrid,blnHideBrand,blnHideExpiry,blnHideLotNo,blnHideOwner,blnHideProgram
	new blnLotNo,blnLotUnique,blnUseByDate,idForm,idItem
	new intBrand,intOwner,intProgram,objItem,strAdjLine,strLineYKEY,YAUSWAHL
	new objADJ,idLoc
	
	quit:pYKEY=""  ; Fast Exit

	set idForm = "INADJATTLine"
	
	set $$$COMGridEditParameterSharedForm(YAUSWAHL)    = $$$YES
	set $$$COMGridEditParameterMaximumHeight(YAUSWAHL) = 400
	set $$$COMGridEditParameterGridName(YAUSWAHL)      = idForm
	set $$$COMGridEditParameterUpdateFields(YAUSWAHL)  = ""
	set $$$COMGridEditParameterEnabled(YAUSWAHL)       = ($$$WWW120AuthorizationToModifyData(YVOR)'=$$$EnumReadOnly)
	set $$$COMGridEditParameterContainer(YAUSWAHL)     = "INADJATT"
	
	$$$GRIDStart(idForm,pYKEY)
	$$$GRIDGetContents(.arrGrid)    ; FIXME : code appears copied from INADJ but this line probably obsolete there.
	
	; Hide all Policy Columns until needed
	; Initial Load, check on disk line records
	
	set blnHideLotNo   = $$$YES
	set blnHideExpiry  = $$$YES
	set blnHideBrand   = $$$YES
	set blnHideOwner   = $$$YES
	set blnHideProgram = $$$YES
	set objADJ		= $get(^INADJATT(YM,pYKEY,1))
	set idLoc		= $$$INADJATTLocation(objADJ)
	set strLineYKEY = ""
	for {
		set strLineYKEY = $order(^WWWDATEN(YM,+$horolog,YUSER,idForm,"V","REFERENCEROW",strLineYKEY))
		quit:(strLineYKEY = "")
		
		set strAdjLine = $$$GRIDGetYFELD(strLineYKEY)
		
		set idItem = $$$INADJATTLineItem(strAdjLine)
		if idItem'="" {
			do GetAttributes^INItemPolicyUtils(idItem,.blnLotNo,.blnUseByDate,.blnLotUnique,.intBrand,.intOwner,.intProgram,idLoc)
			if blnLotNo                       set blnHideLotNo   = $$$NO
			if blnUseByDate                   set blnHideExpiry  = $$$NO
			if (intBrand=1)||(intBrand=3)     set blnHideBrand   = $$$NO
			if (intOwner=1)||(intOwner=3)     set blnHideOwner   = $$$NO
			if (intProgram=1)||(intProgram=3) set blnHideProgram = $$$NO
		}
	}
	
	$$$StartScript()
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewLot,blnHideLotNo,"INADJLine")    			; F4
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewExpiryDate,blnHideExpiry,"INADJLine") 		; F6
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewBrand,blnHideBrand,"INADJLine")  			; F7
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewOwner,blnHideOwner,"INADJLine")  			; F8
	$$$GRIDHideShowColumns($$$FORMFldINADJATTLineNewProgram,blnHideProgram,"INADJLine")  		; F9
	$$$EndScript()
	
	quit 
	
	
ShowAdjustment(pidAdj)
	;-------------------------------------------------------------------------------
	; Show the Adjusmentfor the Attribute Adjustment
	;
	; Params:	pidAdj - INADJ id
	;
	; ByRefs:
	;
	; Returns:
	;
	; History:
	; 18-Mar-2010	PPP		SR17237: Added the Adjusment Link
	;-------------------------------------------------------------------------------
	new arrQuery,intCol
	
	set arrQuery("Class")	= "INADJ"
	set arrQuery("Loop")	= "AdjQuery^INADJATT"
	set arrQuery("Get")		= "set id=$get(^INADJ(0,id(1),1))"
	set arrQuery("Link") 	= "INADJ~P~1"
	set arrQuery("Title")	= $$^WWWFORMNAME("INADJ")
	
	set arrQuery("Col",$increment(intCol))	= "P~1~L"
	set arrQuery("Col",$increment(intCol))	= "D~8~L"
	set arrQuery("Col",$increment(intCol))	= "D~1~L"
	set arrQuery("Col",$increment(intCol))	= "D~32~L"
	set arrQuery("Col",$increment(intCol))	= "D~9~L"
	
	do Query^COMQuery(.arrQuery,pidAdj)
	quit
	
	
AdjQuery(parrQuery,&parrStorage,pidAdj)
	;-------------------------------------------------------------------------------
	; Loop for the COMQuery above - show related receipts
	;
	; Params:	parrQuery	- COMQuery info
	; 			parrStorage	- COMQuery data
	;
	; ByRefs:
	;
	; Returns:	int - row count
	;
	; History:
	; 18-Mar-2010	PPP		SR17237: Added the Adjusment Link
	;-------------------------------------------------------------------------------
	new intCount
	
	set intCount = 0
	set @parrStorage@($increment(intCount),1) = pidAdj
	quit intCount
	
	
OnBeforeSave(pidAdj)
	;-------------------------------------------------------------------------------
	; Stock Adjustment
	; 
	; Params:	pidAdj - INADJ id
	; 
	; Returns: Q (ByRef)
	;
	; History:
	; 16-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new strStatus
	
	set strStatus = $$Editable(pidAdj)
	
	if $$$ISOK(strStatus) {
		set strStatus=$$$GRIDSave(pidAdj)
	}
	
	if $$$ISERR(strStatus) {
		set Q=$$$QDontSave
		do ReturnError^COMUtilError(strStatus)
	}
	quit
	
	
Postable(pidAdj)
	;-------------------------------------------------------------------------------
	; Test whether this record is postable
	; 
	; Called By: Form INADJATT : Button 1 - Execute To Check For Disabled
	; 
	; Params:	pidAdj - Stock Attribute Adjustment id
	;
	; ByRefs:
	;
	; Returns:	postable status
	;
	; History:
	; 10-Oct-2014	shobby	ALJAVA-53: Changes for Java convertor.
	; 07-May-2010	PPP		SR17237/1: Added checks to ensure that enough Stock is available
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new blnOk,fltQOH,fltQty,idBundle,idItem,idLn,idLocn,idStorage
	new objAdj,objLine,strStatus
	
	if $$$NoKey(pidAdj) quit '$$$OK   ; FIXME : <GRF> 1) strStatus? what error message 2) YQ = QDontSave with error? ;ALJAVA-53
	
	set strStatus = $$Editable(pidAdj)
	
	if $$$ISOK(strStatus) {
		if '$data(^INADJATTLine(YM,pidAdj)) {
			set strStatus = $$$MakeStatus("IN00908")       ; "Issue must have lines"
		}
		
		if $$$ISOK(strStatus) {
			if $$$INVORGDefaultAdjustReason($get(^INVORG(0,0,1)))="" {
				set strStatus = $$$MakeStatus("IN01214")
			} ; "Please enter the Default Adjustment Reason in 'Edit General Parameters'"
		}	
		
	}
	
	if $$$ISOK(strStatus) {
		set objAdj = $get(^INADJATT(YM,pidAdj,1))
		set idLocn = $$$INADJATTLocation(objAdj)
		
		if objAdj '= "" {
			if $$IsLockedSiteLocation^INLocking($$$INADJATTLocation(objAdj)) {
				set strStatus = $$ReasonLocked^INLocking($$$INADJATTLocation(objAdj))
			}
		}
	
		if $$$ISOK(strStatus) {
			//SR17237/1
			set idLn=""
			for {
				quit:$$$ISERR(strStatus)
				
				set idLn = $order(^INADJATTLine(YM,pidAdj,idLn))
				quit:idLn=""
				
				set objLine   = $get(^INADJATTLine(YM,pidAdj,idLn,1))
				set idItem    = $$$INADJATTLineItem(objLine)
				set fltQty    = $$$INADJATTLineUnitQuantity(objLine)
				set idBundle  = $$$INADJATTLineBundle(objLine)
				set idStorage = idLocn_"||"_$$$INADJATTLineFromStorage(objLine)

				set fltQOH = ##class(alSOH.iBundleStock).BundleSOH(idItem,idStorage,idBundle)
				
				if fltQty '= fltQOH {
					set strStatus = $$$MakeStatus("IN01223",fltQOH,idLn)
				} ; "Insufficient Stock available (%1) to perform Adjustment for line ´%2´."
				
				if (+$$$WWWClientParamCoreChangesALL($get(^WWWClientParam(YM,YM,1)))) {
					if $$$ISOK(strStatus) {
						set strStatus =  $$OnBeforeSave^INADJATTLine(YM,YFORM,pidAdj_$$$COMMA_idLn,objLine)
					}
				}
			}
		}
	}
		
	if $$$ISOK(strStatus) {
		set YQ = $$$QSave
	} else {
		$$$YQHandler(strStatus)
	}
	quit strStatus
	
	
Post(pidAdj)
	;-------------------------------------------------------------------------------
	; Post Stock Attribute Adjustment
	;
    ; Called By: Form INADJATT : Button 1 - Execute OnClick
    ; 
	; Returns:Status
	;
	; History:
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new objIssue,strStatus
	
	set strStatus = $$Transaction^COMTransaction("PostTxn^INADJATT("""_pidAdj_""")",$$$YES)
	
	if $$$ISOK(strStatus) {
		do ReloadForm^COMUtilForm()
	}
	quit strStatus
	
	
PostTxn(pidAdj)
	;-------------------------------------------------------------------------------
	; Post Stock Arribute Adjustment / Transactions
	;
	;
	; Returns:Status
	;
	; History:
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new arrAttrib,blnCreateHeader,enumReason,fltQty
	new idAdjNbr,idBundle,idItem,idLine,idLineNo1,idLineNo2,idLocn,idStorage,idUnit
	new objAdj,objAdjLine,sc,strStatus
	
	set strStatus = $$Postable(pidAdj)
	set sc        = $$$OK 
	set blnCreateHeader = $$$NO
	
	if $$$ISOK(strStatus) {
		set objAdj = $get(^INADJATT(0,pidAdj,1))
		set idLocn = $$$INADJATTLocation(objAdj)
		
		//Lines
		set idLine = ""
		for {
			set idLine = $order(^INADJATTLine(0,pidAdj,idLine))
			quit:idLine=""
			
			set objAdjLine = $get(^INADJATTLine(0,pidAdj,idLine,1))
			
			set idItem    = $$$INADJATTLineItem(objAdjLine)
			set idUnit    = $$$INADJATTLineUnit(objAdjLine)
			set idStorage = $$$INADJATTLineFromStorage(objAdjLine)
			set idBundle  = $$$INADJATTLineBundle(objAdjLine)
			set fltQty    = $$$INADJATTLineUnitQuantity(objAdjLine)
			
			set sc = ##class(alSOH.iBundle).GetAttributesForBundle(idBundle,.arrAttrib)
			
			if $$$ISOK(sc) {
				if blnCreateHeader = $$$NO  {
					set enumReason = $$$INVORGDefaultAdjustReason($get(^INVORG(0,0,1)))
					if enumReason="" set enumReason = $order(^INPARA(0,"AUSBUCHUNG","EN",""))
					set idAdjNbr=$$MakeHeader(idLocn,enumReason,.strStatus)
					set blnCreateHeader	= $$$YES
				}
				
				if $$$ISOK(strStatus) {
					//Old Attributes
					set idLineNo1=$$MakeLine(idAdjNbr,
											idItem,
											idUnit,
											-fltQty,
											idStorage,
											$get(arrAttrib("Lot Number")),
											$get(arrAttrib("Use By Date")),
											$get(arrAttrib("Brand")),
											$get(arrAttrib("Owner")),
											$get(arrAttrib("Program")),
											.strStatus)
											
					if $$$ISOK(strStatus) {						
						//New Attributes
						set idLineNo2=$$MakeLine(idAdjNbr,
												idItem,
												idUnit,
												fltQty,
												idStorage,
												$$$INADJATTLineNewLot(objAdjLine),
												$$$INADJATTLineNewExpiryDate(objAdjLine),
												$$$INADJATTLineNewBrand(objAdjLine),
												$$$INADJATTLineNewOwner(objAdjLine),
												$$$INADJATTLineNewProgram(objAdjLine),
												.strStatus)
					}	//End New Attrib
				}	//End Old Attrib
			}	//End Adj Header
		}	//End Line
		
		if $$$ISOK(strStatus) {
			//Post the Adjustment
			if $get(idAdjNbr)'="" {
				set strStatus = $$PostTxn^INADJ(idAdjNbr)
			}
		}
	}
	
	if $$$ISOK(strStatus) {
		set $$$INADJATTStatus(objAdj) 	= 1 		//Complete
		set $$$INADJATTPosted(objAdj) 	= $horolog
		set $$$INADJATTStockAdjustment(objAdj) 	= $get(idAdjNbr)
		set strStatus = $$$Save("INADJATT",pidAdj,objAdj,$$$YES)
	}
	quit strStatus
	
	
MakeHeader(pidLocn,pidReasonCode,&strStatus)
	;-------------------------------------------------------------------------------
	; Creat an Adjustment Header
	;
	; Params: 	Location 
	; 			Reason Code
	; Returns:	Adjustment Number and status by ref
	;
	; History:
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new idAdj,objAdj
	
	set strStatus = $$$OK
	set objAdj    = ""
	set $$$INADJReasonCode(objAdj)   = pidReasonCode
	set $$$INADJSiteLocation(objAdj) = pidLocn
	set $$$INADJStatus(objAdj)       = 0
	
	set idAdj     = $$^WWWNEXT("INADJ")
	set strStatus = $$$Save("INADJ",idAdj,objAdj,$$$YES)
	
	quit idAdj
	
	
MakeLine(pidAdj,pidItem,pidUnit,pintQty,pidStorage,pstrLot,pdteUseBy,pstrBrand,pstrOwner,pstrProgram,&strStatus)
	;----------------------------------------------------------------------------------------------------
	; Creat an Adjustment Line
	;
	; Params: 	Adjustment No
	; 			Item
	; 			Qty ( Base Item)
	; 			Storage
	; 			Lot
	; 			Use By Date
	;			Brand
	;			Owner
	;			Program
	; 			
	; Returns:	Line Number and status by ref
	;
	; History:
	; 17-Mar-2010	PPP		SR17237: Created
	;-------------------------------------------------------------------------------
	new idLine,idReasonCode,objLine,strKey
	
	set strStatus = $$$OK
	
	set idLine = $order(^INADJLine(YM,pidAdj,""),-1)+1
	set idReasonCode = $$$INADJReasonCode($get(^INADJ(YM,pidAdj,1)))
	
	set objLine = ""
	set $$$INADJLineItem(objLine)           = pidItem
	set $$$INADJLineStockLocation(objLine)  = pidStorage
	set $$$INADJLineBaseQuantity(objLine)   = pintQty
	set $$$INADJLineQuantity(objLine)       = pintQty
	set $$$INADJLineUnit(objLine)           = pidUnit
	set $$$INADJLineReasonCode(objLine)     = idReasonCode
	set $$$INADJLineLotNumber(objLine)      = pstrLot
	set $$$INADJLineExpirationDate(objLine) = pdteUseBy
	set $$$INADJLineBrand(objLine)          = pstrBrand
	set $$$INADJLineOwner(objLine)          = pstrOwner
	set $$$INADJLineProgram1(objLine)       = pstrProgram
	
	set strKey    = pidAdj_","_idLine
	set strStatus = $$$Save("INADJLine",strKey,objLine,$$$YES)
	
	quit idLine
	
]]></Routine>
</Export>